{"version":3,"file":"static/js/9859.510a483a.chunk.js","mappings":"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","sources":["views/ProgressComponent/ProgressDetailsTable.js","views/ProgressComponent/ProgressTable.js","views/ProgressComponent/ProgressSearchFilter.js","views/ProgressComponent/Progress.js"],"sourcesContent":["import ProgressDetailsTableJson from \"./ProgressDetailsTable.json\";\nimport axios from \"axios\";\nimport { useEffect, useState, Fragment } from \"react\";\nimport { environment } from \"../../environments/environment\";\nimport { FaAngleDown, FaAngleLeft, FaCircle } from \"react-icons/fa\";\n\nexport default function ProgressDetailsTable({\n  execName,\n  progressDtlsData,\n  reportRunId,\n  tableClasName,\n  MyKey,\n}) {\n  const baseUrl = environment.baseUrl;\n  const [progressDetailsData, setProgressDetailsData] = useState({});\n\n  const progressDataPayload = {\n    executiveId: \"\" + progressDtlsData,\n    type:\n      MyKey == \"softClosed\"\n        ? \"Closed\"\n        : MyKey == \"serviceClosed\"\n        ? \"Closed\"\n        : MyKey == \"softCreated\"\n        ? \"Created\"\n        : MyKey == \"serviceCreated\"\n        ? \"Created\"\n        : MyKey == \"oddsHighService\"\n        ? \"High Odds\"\n        : MyKey == \"oddsHighSoft\"\n        ? \"High Odds\"\n        : MyKey == \"oddsAllSoft\"\n        ? \"All Odds\"\n        : MyKey == \"oddsAllService\"\n        ? \"All Odds\"\n        : MyKey == \"serviceWon\"\n        ? \"Won\"\n        : MyKey == \"softWon\"\n        ? \"Won\"\n        : MyKey == \"executive\"\n        ? \"executive\"\n        : \"\",\n    reportRunId: \"\" + reportRunId,\n    case:\n      MyKey.indexOf(\"softClosed\") !== -1\n        ? \"software\"\n        : MyKey.indexOf(\"serviceClosed\") !== -1\n        ? \"services\"\n        : MyKey.indexOf(\"serviceCreated\") !== -1\n        ? \"services\"\n        : MyKey.indexOf(\"softCreated\") !== -1\n        ? \"software\"\n        : MyKey.indexOf(\"oddsHighService\") !== -1\n        ? \"ServicesQuarter\"\n        : MyKey.indexOf(\"oddsHighSoft\") !== -1\n        ? \"SoftwareQuarter\"\n        : MyKey.indexOf(\"oddsAllSoft\") !== -1\n        ? \"SoftwareQuarter\"\n        : MyKey.indexOf(\"oddsAllService\") !== -1\n        ? \"ServicesQuarter\"\n        : MyKey.indexOf(\"serviceWon\") !== -1\n        ? \"ServicesQuarter\"\n        : MyKey.indexOf(\"softWon\") !== -1\n        ? \"SoftwareQuarter\"\n        : MyKey == \"executive\"\n        ? \"executive\"\n        : \"\",\n  };\n\n  const prosicon = {\n    1: <FaCircle style={{ color: \"#9567c2\", marginTop: \"-2px\" }} />,\n    0: <FaCircle style={{ color: \"#539a71\", marginTop: \"-2px\" }} />,\n  };\n\n  //----------------------call-----------------------------------\n\n  const getProgressDetailsData = () => {\n    axios\n      .post(\n        baseUrl + `/SalesMS/salesProgress/getSalesProgressDetails`,\n        progressDataPayload\n      )\n      .then((resp) => {\n        const data = resp.data;\n\n        setProgressDetailsData(data);\n      })\n      .catch((err) => {});\n  };\n\n  //----------------------useEffect----------------------\n\n  useEffect(() => {\n    getProgressDetailsData();\n  }, [execName, MyKey]);\n\n  useEffect(() => {\n    setTimeout(() => {\n      addingClsName();\n    }, 500);\n  }, [execName, progressDtlsData, reportRunId, tableClasName, MyKey]);\n\n  const addingClsName = () => {\n    let tdData =\n      document.getElementsByClassName(\"dummy\")[0].children[0].children;\n    let clName = [\"even\", \"odd\"];\n    let val = 0;\n    for (let i = 1; i < tdData.length; i++) {\n      let tdData1 =\n        document.getElementsByClassName(\"dummy\")[0].children[0].children;\n      let rowSPn = tdData[i].children[0].getAttribute(\"rowspan\");\n      if (rowSPn != null) {\n        val = val == 0 ? 1 : 0;\n        for (let j = i; j < parseInt(i) + parseInt(rowSPn); j++) {}\n      }\n    }\n  };\n\n  //---------------------------logic-----------------------------\n\n  const progressDetailsTableData = progressDetailsData.data?.map(\n    (data, index) => {\n      const conditions = [\"id\", \"isProspect\", \"count\"];\n      let header = [];\n      let checks = MyKey.includes(\"soft\")\n        ? \"id,opportunity,count,customer,isProspect,vendor,closeDate,amount,probability\"\n        : MyKey.includes(\"service\")\n        ? \"id,opportunity,count,customer,isProspect,country,closeDate,amount,probability\"\n        : MyKey.includes(\"oddsHighService\")\n        ? \"id,opportunity,count,customer,isProspect,country,closeDate,amount,probability\"\n        : MyKey.includes(\"oddsHighSoft\")\n        ? \"id,opportunity,count,customer,isProspect,country,closeDate,amount,probability\"\n        : MyKey.includes(\"oddsAllSoft\")\n        ? \"id,opportunity,count,customer,isProspect,country,closeDate,amount,probability\"\n        : MyKey.includes(\"oddsAllService\")\n        ? \"id,opportunity,count,customer,isProspect,country,closeDate,amount,probability\"\n        : MyKey == \"executive\"\n        ? \"id,opportunity,count,customer,isProspect,country,closeDate,amount,probability\"\n        : \"\";\n\n      const keyArr = checks.split(\",\");\n\n      for (let ia = 0; ia < keyArr.length; ia++) {\n        let keys = keyArr[ia];\n        if (\n          ia === 0 &&\n          data.type !== progressDetailsData.data[index - 1]?.type\n        ) {\n          const rowCount = progressDetailsData.data.filter(\n            (d) => d.type === data.type\n          ).length;\n\n          header.push(\n            <td\n              className=\"\"\n              key={`type_${data.id}_${index}`}\n              rowSpan={rowCount}\n            >\n              {data.type}\n            </td>\n          );\n        }\n\n        data[keys] !== null &&\n          !conditions.includes(keys) &&\n          header.push(\n            data.id < 1 ? (\n              <th\n                className={keys.split(\"_\")[0] + \"\"}\n                colSpan={data[keys] && data[keys].split(\"^&\")[2]}\n                rowSpan={data[keys] && data[keys].split(\"^&\")[1]}\n              >\n                {data[keys] ===\n                \"__iconCust__ Customer __iconProsp__ Prospect\" ? (\n                  <>\n                    <span>\n                      {prosicon[0]}\n                      {data[keys].split(\"_\")[4]}\n                      {\"\"}\n                      {prosicon[1]} {data[keys].split(\"_\")[8]}\n                    </span>\n                  </>\n                ) : data[keys] === \"Country /<br>Vendor\" ? (\n                  data[keys].split(\" /<br>\")[0] +\n                  \"/\" +\n                  data[keys].split(\" /<br>\")[1]\n                ) : (\n                  data[keys]\n                )}\n              </th>\n            ) \n            : \"\"\n          );\n      }\n      return <tr key={`${data.id}_${index}`}>{header}</tr>;\n    }\n  );\n\n  const progressDetailsTableData2 = progressDetailsData.data?.map(\n    (data, index) => {\n      const conditions = [\"id\", \"isProspect\", \"count\"];\n      let header = [];\n      let checks = MyKey.includes(\"soft\")\n        ? \"id,opportunity,count,customer,isProspect,vendor,closeDate,amount,probability\"\n        : MyKey.includes(\"service\")\n        ? \"id,opportunity,count,customer,isProspect,country,closeDate,amount,probability\"\n        : MyKey.includes(\"oddsHighService\")\n        ? \"id,opportunity,count,customer,isProspect,country,closeDate,amount,probability\"\n        : MyKey.includes(\"oddsHighSoft\")\n        ? \"id,opportunity,count,customer,isProspect,country,closeDate,amount,probability\"\n        : MyKey.includes(\"oddsAllSoft\")\n        ? \"id,opportunity,count,customer,isProspect,country,closeDate,amount,probability\"\n        : MyKey.includes(\"oddsAllService\")\n        ? \"id,opportunity,count,customer,isProspect,country,closeDate,amount,probability\"\n        : MyKey == \"executive\"\n        ? \"id,opportunity,count,customer,isProspect,country,closeDate,amount,probability\"\n        : \"\";\n\n      const keyArr = checks.split(\",\");\n\n      for (let ia = 0; ia < keyArr.length; ia++) {\n        let keys = keyArr[ia];\n        if (\n          ia === 0 &&\n          data.type !== progressDetailsData.data[index - 1]?.type\n        ) {\n          const rowCount = progressDetailsData.data.filter(\n            (d) => d.type === data.type\n          ).length;\n\n          header.push(\n            <td\n              className=\"\"\n              key={`type_${data.id}_${index}`}\n              rowSpan={rowCount}\n            >\n              {data.type}\n            </td>\n          );\n        }\n\n        data[keys] !== null &&\n          !conditions.includes(keys) &&\n          header.push(\n            data.id > 0 ? \n             (\n              <td\n                className={keys.split(\"_\")[0] + \"\" + keys.split(\"_\")[1]}\n                key={keys}\n                colSpan={data[keys] && data[keys].split(\"^&\")[2]}\n                rowSpan={data[keys] && data[keys].split(\"^&\")[1]}\n              >\n                {data[keys] === \"Country /<br>Vendor\" ? (\n                  <span>{data[keys]}</span>\n                ) : (\n                  \"\"\n                )}\n\n                {keys === \"amount\" ? (\n                  <Fragment>\n                    <span>{parseInt(data[keys]).toLocaleString(\"en-US\")}</span>\n                  </Fragment>\n                ) : (\n                  <Fragment>\n                    {keys === \"opportunity\" ? (\n                      <span\n                        className=\"ellipsis\"\n                        data-toggle=\"tooltip\"\n                        title={data[keys]}\n                        key={keys}\n                        style={{ maxWidth: \"150px !important\" }}\n                      >\n                        <a\n                          href=\"https://d300000000qxieam.my.salesforce.com/?ec=302&startURL=%2Fvisualforce%2Fsession%3Furl%3Dhttps%253A%252F%252Fd300000000qxieam.lightning.force.com%252Flightning%252Fr%252FOpportunity%252F0061W00001UtIfyQAF%252Fview\"\n                          target=\"_blank\"\n                          rel=\"noopener noreferrer\"\n                          data-toggle=\"tooltip\"\n                          title={data[keys]}\n                        >\n                          {data[keys]}\n                        </a>\n                        {keys === \"customer\" && data[\"customer\"] !== \" \" && (\n                          <span style={{ float: \"left\", marginRight: \"5px\" }}>\n                            {prosicon[data[\"isProspect\"]]}\n                          </span>\n                        )}\n                      </span>\n                    ) : (\n                      <span className=\"\" title={data[keys]}>\n                        {data[keys]?.length > 20\n                          ? data[keys].substring(0, 20) + \"...\"\n                          : data[keys]}\n                        {keys === \"customer\" && data[\"customer\"] !== \" \" && (\n                          <span style={{ float: \"left\", marginRight: \"5px\" }}>\n                            {prosicon[data[\"isProspect\"]]}\n                          </span>\n                        )}\n                      </span>\n                    )}\n                  </Fragment>\n                )}\n              </td>\n            )\n            : \"\"\n          );\n      }\n      return <tr key={`${data.id}_${index}`}>{header}</tr>;\n    }\n  );\n\n  return (\n    <div className=\"col-lg-12 col-md-12 col-sm-12 mt10 no-padding darkHeader\">\n      <div className=\"col-lg-12 col-md-12 col-sm-12 no-padding\">\n        <b>Progress of {execName} </b>\n      </div>\n      &nbsp;\n      {progressDetailsTableData?.length > 1 ? (\n        <table\n          className={`table table-bordered table-striped  ${tableClasName} `}\n        >\n          <thead>{progressDetailsTableData}</thead>\n          <tbody>{progressDetailsTableData2}</tbody>\n        </table>\n      ) : (\n        <div>No Progress Found</div>\n      )}\n    </div>\n  );\n}\n","import React from \"react\";\nimport { Fragment, useState } from \"react\";\nimport { FiChevronRight } from \"react-icons/fi\";\n\nimport fte_active from \"../../assets/images/empstatusIcon/fte_active.png\";\nimport fte_inactive from \"../../assets/images/empstatusIcon/fte_inactive.png\";\nimport fte_notice from \"../../assets/images/empstatusIcon/fte_notice.png\";\nimport subk_active from \"../../assets/images/empstatusIcon/subk_active.png\";\nimport subk_inactive from \"../../assets/images/empstatusIcon/subk_inactive.png\";\nimport subk_notice from \"../../assets/images/empstatusIcon/subk_notice.png\";\nimport ProgressDetailsTable from \"./ProgressDetailsTable\";\nimport \"./ProgressTable.scss\";\n\nconst ProgressTable = ({ progressData }) => {\n  const [execName, setexecName] = useState(\"\");\n  const [key, setKey] = useState(\"\");\n\n  const [progressDtlsData, setProgressDtlsData] = useState(\"\");\n\n  const [tableClasName, setTableClasName] = useState(\"\");\n\n  const [tableVal, setTableVal] = useState(false);\n  const [allPageLoad, setAllPageLoad] = useState(false);\n\n  // ----------------Method start-------------------------\n  const progressDataPayload2 = {\n    executiveId: \"114598022\",\n    type: \"Won\",\n    reportRunId: \"26678\",\n    case: \"SoftwareQuarter\",\n  };\n\n  const icons = {\n    fte0: (\n      <img\n        src={fte_inactive}\n        alt=\"(fte_inactive_icon)\"\n        style={{ height: \"12px\", marginTop: \"-5px\" }}\n        title=\"Ex-Employee\"\n      />\n    ),\n    fte1: (\n      <img\n        src={fte_active}\n        alt=\"(fte_active_icon)\"\n        style={{ height: \"12px\", marginTop: \"-5px\" }}\n        title=\"Active Employee\"\n      />\n    ),\n    fte2: (\n      <img\n        src={fte_notice}\n        alt=\"(fte_notice_icon)\"\n        style={{ height: \"12px\", marginTop: \"-5px\" }}\n        title=\"Employee in notice period\"\n      />\n    ),\n    subk0: (\n      <img\n        src={subk_inactive}\n        alt=\"(subk_inactive_icon)\"\n        style={{ height: \"12px\", marginTop: \"-5px\" }}\n        title=\"Ex-Contractor\"\n      />\n    ),\n    subk1: (\n      <img\n        src={subk_active}\n        alt=\"(subk_active_icon)\"\n        style={{ height: \"12px\", marginTop: \"-5px\" }}\n        title=\"Active Contractor\"\n      />\n    ),\n    subk2: (\n      <img\n        src={subk_notice}\n        alt=\"(subk_notice_icon)\"\n        style={{ height: \"12px\", marginTop: \"-5px\" }}\n        title=\"Contractor in notice period\"\n      />\n    ),\n  };\n\n  // ----------------table renderer-------------------------\n\n  const progressTableData = progressData.data.map((data, index) => {\n    const conditions = [\n      \"id\",\n      \"isActive\",\n      \"serviceClosedCount\",\n      \"softClosedCount\",\n      \"serviceCreatedCount\",\n      \"softCreatedCount\",\n      \"oddsHighServiceCount\",\n      \"oddsHighSoftCount\",\n      \"oddsAllServiceCount\",\n      \"oddsAllSoftCount\",\n      \"serviceWonCount\",\n      \"softWonCount\",\n      \"execStatus\",\n    ];\n    let header = [];\n    let checks =\n      \"id,executive,execStatus,serviceClosed,serviceClosedCount,softClosed,softClosedCount,serviceCreated,serviceCreatedCount,softCreated,softCreatedCount,oddsHighService,oddsHighServiceCount,oddsHighSoft,oddsHighSoftCount,oddsAllService,oddsAllServiceCount,oddsAllSoft,oddsAllSoftCount,serviceWon,serviceWonCount,softWon,softWonCount,isActive\";\n    const keyArr = checks.split(\",\");\n\n    for (let ia = 0; ia < keyArr.length; ia++) {\n      let keys = keyArr[ia];\n      data[keys] !== null &&\n        !conditions.some((el) => keys.includes(el)) &&\n        header.push(\n          data.id < 0 ? (\n            <th\n              className={keys.split(\"_\")[0] + \" progressth\"}\n              key={keys}\n              colSpan={data[keys].split(\"^&\")[2]}\n              rowSpan={data[keys].split(\"^&\")[1]}\n            >\n              {data[keys].split(\"^&\")[0]}\n            </th>\n          ) : (\n            <td\n              className={\n\n                data[keys] === \"Summary\"\n\n                  ? \"summary\"\n\n                  : keys.split(\"_\")[0] + \" progresstd \"\n\n              }\n\n              key={keys}\n              colSpan={data[keys].split(\"^&\")[2]}\n              rowSpan={data[keys].split(\"^&\")[1]}\n              title={data[keys]}\n            >\n              {keys !== \"executive\" ? (\n                <Fragment>\n                  <span title={parseInt(data[keys]).toLocaleString(\"en-US\")}>\n                    {parseInt(data[keys]).toLocaleString(\"en-US\")}{\" \"}\n                  </span>\n                  {console.log(data[\"type\"])}(\n                  <span\n                    className=\"linkSty\"\n                    onClick={() => {\n                      window.scrollTo({ top: 1500, behavior: \"smooth\" });\n                      setTableVal(false);\n                      setProgressDtlsData(\"\");\n                      setexecName(data[\"executive\"]);\n                      setProgressDtlsData(data[\"id\"]);\n                      console.log(data);\n                      setKey(keys);\n                      setTableVal(true);\n                      setTableClasName(\"dummy1\");\n                    }}\n                  >\n                    {data[keys + \"Count\"]?.split(\"^&\")[0]}\n                    {console.log(\">>>>>>>>\", keys)}\n                  </span>\n                  )\n                </Fragment>\n              ) : keys == \"executive\" && data[\"executive\"] != \"Summary\" ? (\n                <Fragment>\n                  <span>{icons[data[\"execStatus\"]]}</span>{\" \"}\n                  <span\n                    className=\"linkSty\"\n                    onClick={() => {\n                      window.scrollTo({ top: 1500, behavior: \"smooth\" });\n                      setTableVal(false);\n                      setexecName(data[\"executive\"]);\n                      setProgressDtlsData(data[\"id\"]);\n                      setKey(keys);\n                      setTableVal(true);\n                      setAllPageLoad(true);\n                      setTableClasName(\"dummy\");\n                    }}\n                  >\n                    {data[keys].split(\"^&\")[0]}\n                  </span>\n                </Fragment>\n              ) : (\n                data[keys].split(\"^&\")[0]\n              )}\n            </td>\n          )\n        );\n    }\n\n    return <tr key={data.id}>{header}</tr>;\n  });\n\n  return (\n    <div className=\"col-lg-12 col-md-12 col-sm-12 darkHeader toHead customCard\">\n      <div className=\"col-lg-12 col-md-12 col-sm-12 no-padding progressTablePrnt scrollit\">\n        <table className=\"table table-bordered table-striped progressTable \">\n          <thead>{progressTableData}</thead>\n        </table>\n      </div>\n\n      {(tableVal || allPageLoad) && (\n        <ProgressDetailsTable\n          execName={execName}\n          progressDtlsData={progressDtlsData}\n          reportRunId={progressData.reportRunId}\n          tableClasName={tableClasName}\n          MyKey={key}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default ProgressTable;\n","import DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport React, { useEffect, useState, useRef } from \"react\";\nimport axios from \"axios\";\nimport { environment } from \"../../environments/environment\";\nimport moment from \"moment\";\nimport {\n  FaCaretDown,\n  FaChevronCircleDown,\n  FaChevronCircleUp,\n  FaSearch,\n} from \"react-icons/fa\";\nimport GlobalValidation from \"../ValidationComponent/GlobalValidation\";\nimport { CCollapse } from \"@coreui/react\";\nimport { AiFillWarning } from \"react-icons/ai\";\nimport Loader from \"../Loader/Loader\";\nimport { MultiSelect } from \"react-multi-select-component\";\nimport SelectSEDialogBox from \"../SelectSE/SelectSEDialogBox\";\nimport SavedSearchGlobal from \"../PrimeReactTableComponent/SavedSearchGlobal\";\nimport { BiCheck } from \"react-icons/bi\";\nimport { useLocation } from \"react-router-dom\";\nimport ScreenBreadcrumbs from \"../Common/ScreenBreadcrumbs\";\nimport { parseISO, format } from \"date-fns\";\nimport { useSelector } from \"react-redux\";\nimport GlobalHelp from \"../PrimeReactTableComponent/GlobalHelp\";\n\nexport default function AttainmentSearchFilter({\n  setProgressData,\n  setTableFlag,\n}) {\n  const baseUrl = environment.baseUrl;\n  const pageurl = \"http://10.11.12.149:3000/#/pmo/salesProgress\";\n  const page_Name = \"Sales\";\n  const [editmsg, setEditAddmsg] = useState(false);\n  const location = useLocation();\n  const [grpId, setGrpId] = useState([]);\n  const [bulkids, SetBulkIds] = useState(true);\n  const searchParams = new URLSearchParams(location.search);\n  const id = searchParams.get(\"id\");\n  const [filterData, setFilterData] = useState([]);\n  const [visibleCol, setvisibleCol] = useState(false);\n\n  const isIndividualChecked =\n    localStorage.getItem(\"isIndividualCheckedLocal\") === null\n      ? false\n      : JSON.parse(localStorage.getItem(\"isIndividualCheckedLocal\"));\n\n  //// -------breadcrumbs-----\n  const loggedUserId = localStorage.getItem(\"resId\");\n\n  const [routes, setRoutes] = useState([]);\n  let textContent = \"Sales\";\n  let currentScreenName = [\"Weekly Pipeline Progress\"];\n  const [selectedSEVal, setSelectedSEVal] = useState(-2);\n\n  useEffect(() => {\n    getMenus();\n  }, []);\n  const [hirarchy, setHirarchy] = useState([]);\n\n  const hirarchyAccess = () => {\n    axios\n\n      .get(\n        baseUrl +\n        `/ProjectMS/project/getHirarchyAccesss?loggedUserId=${loggedUserId}`\n      )\n\n      .then((resp) => {\n        const data = resp.data;\n        setHirarchy(data);\n      })\n\n      .catch((err) => { });\n  };\n  useEffect(() => {\n    hirarchyAccess();\n  }, []);\n  const getMenus = () => {\n    axios({\n      method: \"GET\",\n      url: baseUrl + `/CommonMS/master/getMenus?loggedUserId=${loggedUserId}`,\n    }).then((resp) => {\n      let data = resp.data.map((menu) => {\n        if (menu.subMenus) {\n          menu.subMenus = menu.subMenus.filter(\n            (subMenu) =>\n\n              subMenu.display_name !== \"Project Timesheet (Deprecated)\" &&\n              subMenu.display_name !== \"Invoice Details\" &&\n              subMenu.display_name !== \"Accounting\" &&\n              subMenu.display_name !== \"Upload\" &&\n              subMenu.display_name !== \"Practice Calls [Deprecated]\"\n\n          );\n        }\n        return menu;\n      });\n\n      data.forEach((item) => {\n        if (item.display_name === textContent) {\n          setRoutes([item]);\n        }\n      });\n      const projectStatusReportSubMenu = data\n        .find((item) => item.display_name === \"Sales\")\n        .subMenus.find(\n          (subMenu) => subMenu.display_name === \"Weekly Pipeline Progress\"\n        );\n      setAccessData(projectStatusReportSubMenu.access_level);\n    });\n  };\n\n  const FilterData = () => {\n    axios({\n      method: \"get\",\n      url:\n        baseUrl +\n        `/dashboardsms/savedsearch/FiltersData?saved_search_id=${id === null ? 0 : id\n        }`,\n    }).then(function (res) {\n      const getData = res.data;\n      setFilterData(getData);\n    });\n  };\n\n  useEffect(() => {\n    FilterData();\n  }, []);\n\n  const [salesExecutiveDropdown, setsalesExecutiveDropdown] = useState([]);\n  const [selectedSE, setselectedSE] = useState(\"<< All SE >>\");\n  const [visible, setVisible] = useState(false);\n  const [division, setDivision] = useState([]);\n  const [SelectdDivision, setSelectdDivision] = useState([]);\n  const [accessData, setAccessData] = useState([]);\n\n  const [cheveronIcon, setCheveronIcon] = useState(FaChevronCircleUp);\n  const ref = useRef([]);\n  const [errorMsg, setErrorMsg] = useState(false);\n  const localSE =\n    localStorage.getItem(\"selectedSELocal\") === null\n      ? []\n      : JSON.parse(localStorage.getItem(\"selectedSELocal\"));\n  function transformObjects(data) {\n    return localSE.map((item) => {\n      if (Array.isArray(item)) {\n        const [obj] = item;\n        if (\n          obj &&\n          obj.id &&\n          obj.text &&\n          obj.type === \"fte1\" &&\n          obj.parent === \"id\"\n        ) {\n          return {\n            salesPersonName: obj.text,\n            type: obj.type,\n            id: parseInt(obj.id),\n            status: JSON.parse(obj.li_attr).sestatus || \"empActive\",\n          };\n        }\n      }\n      return item;\n    });\n  }\n  const transformedData = transformObjects();\n\n  const filteredData = transformedData\n    .filter((obj, index) => {\n      return index === transformedData.findIndex((o) => obj.id === o.id);\n    })\n    .filter((item) => !Array.isArray(item) || item.length === 0);\n\n  const idArray = transformedData.map((item) => item.id);\n  const filteredIds = idArray.filter((id) => typeof id === \"number\");\n  const updatedIds = filteredIds.map((id) =>\n    id === \"1717\" || \"3887\" || \"3887\" || \"3977\" || \"4895\" || \"4872942\"\n      ? grpId\n      : id\n  );\n  const flattenedIds = updatedIds.flat();\n  const salesPersonNames = filteredData.map((item) => {\n    if (\n      (item.salesPersonName && item.salesPersonName === \"Kirsten Craft\") ||\n      \"Sarat Addanki\" ||\n      \"Satyanarayana Bolli\" ||\n      \"Supervisor Orphans\" ||\n      \"Michelle Shuler\"\n    ) {\n      return `${item.salesPersonName}`;\n    }\n    return item.salesPersonName;\n  });\n\n  const commaSeparatedNames = salesPersonNames.join(\",\");\n  const salesPersonNamesBulk = filteredData.map((item) => {\n    if (\n      item.salesPersonName === \"Kirsten Craft\" &&\n      \"Sarat Addanki\" &&\n      \"Satyanarayana Bolli\" &&\n      \"Supervisor Orphans\" &&\n      \"Michelle Shuler\"\n    ) {\n      return `${item.salesPersonName} & team`;\n    }\n    return item.salesPersonName;\n  });\n\n  const commaSeparatedNamesBulk = salesPersonNamesBulk.join(\",\");\n  const salesPersonIds = filteredData.map((item) => item.id);\n  const commaSeparatedIds = salesPersonIds.join(\",\");\n  const abortController = useRef(null);\n\n  const [searching, setsearching] = useState(false);\n  const [startDate, setStartDate] = useState(() => {\n    // const currentDate = new Date();\n    // const year = currentDate.getFullYear() + 1;\n    // const month = currentDate.getMonth() + 1 - 5;\n    // return new Date(year, month, 1);\n    return new Date(2024, 6, 1);\n  });\n\n  const filterMondays = (date) => {\n    return date.getDay() === 1;\n  };\n  const getPreviousMonday = (date) => {\n    const dayOfWeek = date.getDay();\n    const diff = date.getDate() - dayOfWeek + (dayOfWeek === 0 ? -6 : 1);\n    return new Date(date.setDate(diff));\n  };\n\n  const now = new Date(2023, 6, 31);\n\n  const startDate3 = getPreviousMonday(now);\n\n  const formattedStartDate = startDate3.toLocaleString(\"en-US\", {\n    weekday: \"short\",\n    month: \"short\",\n    day: \"2-digit\",\n    year: \"numeric\",\n    hour: \"2-digit\",\n    minute: \"2-digit\",\n    second: \"2-digit\",\n    timeZoneName: \"short\",\n  });\n  const initialSelectedDate = new Date();\n  initialSelectedDate.setFullYear(2023, 8, 25); // 8 for September (0-based index), 25 for the day\n\n  const [startDate2, setStartDate2] = useState(initialSelectedDate);\n\n  const [progressDataPayload, setProgressDataPayload] = useState({});\n\n  useEffect(() => {\n    setProgressDataPayload(() => {\n      if (id != null) {\n        return {\n          executives: filterData?.executives,\n          isActive: filterData?.isActive,\n          isIndividual: filterData?.isIndividual,\n          from: filterData?.from,\n          duration: filterData?.duration,\n          quarter: filterData?.quarter,\n          selectExecs: filterData?.selectExecs,\n          Divisions: filterData?.Divisions,\n        };\n      } else {\n        return {\n          executives: \"-2\",\n          isActive: \"true\",\n          isIndividual: \"false\",\n          from: \"2023-09-25\",\n          duration: \"2\",\n          quarter: \"2023-10-01\",\n          selectExecs: \"\",\n          Divisions: \"-1\",\n        };\n      }\n    });\n  }, [filterData]);\n\n  useEffect(() => {\n    if (id != null) {\n      const updateDivisions = division.filter(\n        (values) =>\n          +progressDataPayload.Divisions?.includes(parseInt(values.value))\n      );\n\n      const progressDataDivisions = progressDataPayload.Divisions;\n      const divisionsToFilter = progressDataDivisions\n        ? progressDataDivisions.split(\",\").map(Number)\n        : [];\n\n      const updateDivisionsdata = updateDivisions.filter((values) =>\n        divisionsToFilter.includes(values.value)\n      );\n      setSelectdDivision(updateDivisionsdata);\n\n      if (filterData?.from !== undefined && filterData.from !== \"\") {\n        const updatedate = filterData.from;\n        if (!/^\\d{4}-\\d{2}-\\d{2}$/.test(updatedate)) {\n          return;\n        }\n        const formattedDate = format(parseISO(updatedate), \"yyyy-MM-dd\");\n        const parsedDate = parseISO(formattedDate);\n        setStartDate2(parsedDate);\n      }\n      if (filterData.quarter !== undefined && filterData.quarter !== \"\") {\n        const updatequarter = filterData.quarter;\n\n        setStartDate(new Date(updatequarter));\n      }\n    }\n  }, [\n    id,\n    division,\n    progressDataPayload.Divisions,\n    progressDataPayload?.from,\n    progressDataPayload?.duration,\n    progressDataPayload.duedate,\n    filterData.from,\n  ]);\n  console.log(progressDataPayload);\n  // //------------------------methods----------------------------------\n\n  const onFilterChange = ({ id, value }) => {\n    setProgressDataPayload((prevState) => {\n      return { ...prevState, [id]: value };\n    });\n    if (id === \"executives\" && value === \"1\") {\n      setVisible(true);\n    }\n  };\n\n  const getOwnerDivision = () => {\n    axios\n      .get(baseUrl + `/SalesMS/attainment/getOwnerDivision`)\n      .then((Response) => {\n        let countries = [];\n        let data = Response.data;\n        data.length > 0 &&\n          data.forEach((e) => {\n            let countryObj = {\n              label: e.owner_division,\n              value: e.id,\n            };\n            countries.push(countryObj);\n          });\n        setDivision(countries);\n        if (id == null) {\n          setSelectdDivision(countries);\n        }\n      })\n      .catch((error) => console.log(error));\n  };\n\n  const progressSearchValidator = () => {\n    let payload = progressDataPayload;\n\n    let filteredData = ref.current.filter((d) => d != null);\n    ref.current = filteredData;\n\n    let valid = GlobalValidation(ref);\n\n    if (valid == true) {\n      setsearching(false);\n\n      setErrorMsg(true);\n    }\n    if (valid) {\n      return;\n    }\n\n    // setvisibleCol(!visibleCol);\n\n    payload.executives === \"0\" ||\n      (payload.executives === \"1\" &&\n        (localStorage.getItem(\"selectedSELocal\") === null ||\n          localStorage.getItem(\"selectedSELocal\") === undefined ||\n          localStorage.getItem(\"selectedSELocal\") === \"[]\"))\n      ? setErrorMsg(true)\n      : getProgressData(payload);\n  };\n\n  const isWeekday = (date) => {\n    const day = date.getDay();\n    return day === 1;\n  };\n  useEffect(() => {\n    if (id != null) {\n      setTimeout(() => {\n        progressSearchValidator();\n      }, 4000);\n    }\n  }, [id, progressDataPayload]);\n  // const originalDate = new Date(startDate2);\n\n  // const modifiedDate = new Date(originalDate);\n  // modifiedDate.setMonth(7);\n\n  // const formattedDate = modifiedDate.toString();\n\n  // console.log(startDate2, \"------xxxx------\");\n  // console.log(formattedDate, \"------xxxx------\");\n\n  // -----------------------calls----------------------------------\n\n  const getsalesExecutiveDropdown = () => {\n    axios\n      .get(baseUrl + \"/SalesMS/MasterController/salesExecutiveData\")\n      .then((resp) => {\n        const data = resp.data;\n        const dropdownOptions = data\n          .filter((item) => item.isActive === 1)\n          .map((item) => {\n            return (\n              <option key={item.id} value={item.val}>\n                {item.lkupName}\n              </option>\n            );\n          });\n        setsalesExecutiveDropdown(dropdownOptions);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n  const SelectSEData = useSelector(\n    (state) => state.selectedSEState.directSETreeData\n  );\n  const getProgressData = () => {\n    let valid = GlobalValidation(ref);\n\n    setTableFlag(false);\n    let payload = null;\n    payload = progressDataPayload;\n    const loaderTime = setTimeout(() => {\n      setsearching(true);\n    }, 2000);\n    abortController.current = new AbortController();\n\n    setErrorMsg(false);\n    payload[\"executives\"] =\n      payload.executives == \"1\" ? SelectSEData : payload.executives;\n    axios({\n      method: \"post\",\n      url: baseUrl + `/SalesMS/salesProgress/getSalesProgress`,\n      data: payload,\n      signal: abortController.current.signal,\n    })\n      .then((resp) => {\n        const data = resp.data;\n        setProgressData(data);\n        clearTimeout(loaderTime);\n        if (data.data.length > 0) {\n          setTableFlag(true);\n          setsearching(false);\n          clearTimeout(loaderTime);\n          !valid && setvisibleCol(!visibleCol);\n          visibleCol\n            ? setCheveronIcon(FaChevronCircleUp)\n            : setCheveronIcon(FaChevronCircleDown);\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  // -----------------------------useEffect---------------------------------\n\n  useEffect(() => {\n    getsalesExecutiveDropdown();\n    getOwnerDivision();\n  }, []);\n\n  const handleAbort = () => {\n    abortController.current && abortController.current.abort();\n    setsearching(false);\n  };\n  const ArrowRenderer = ({ expanded }) => (\n    <>\n      {expanded ? (\n        <FaCaretDown className=\"chevronIcon\" />\n      ) : (\n        <FaCaretDown className=\"chevronIcon\" />\n      )}\n    </>\n  );\n\n  const generateDropdownLabel = (selectedOptions, allOptions) => {\n    const selectedValues = selectedOptions.map((option) => option.value);\n    const allValues = allOptions.map((item) => item.value);\n\n    if (selectedValues.length === allValues.length) {\n      return \"<< ALL >>\";\n    } else {\n      return selectedOptions.map((option) => option.label).join(\", \");\n    }\n  };\n\n  const HelpPDFName = \"Weekly Pipeline Progress.pdf\";\n  const Headername = \"Weekly Pipeline Progress Help\";\n  return (\n    <div>\n      <div className=\"col-md-12\">\n        <div className=\"pageTitle\">\n          <div className=\"childOne\"></div>\n          <div className=\"childTwo\">\n            <h2>Weekly Pipeline Progress</h2>\n          </div>\n          <div className=\"childThree\"></div>\n        </div>\n      </div>\n      <ScreenBreadcrumbs\n        routes={routes}\n        currentScreenName={currentScreenName}\n      />\n\n      {errorMsg ? (\n        <div className=\"statusMsg error\">\n          {\" \"}\n          <AiFillWarning /> Please select valid values for highlighted fields\n        </div>\n      ) : (\n        \"\"\n      )}\n      {editmsg ? (\n        <div className=\"statusMsg success\">\n          <span className=\"errMsg\">\n            <BiCheck size=\"1.4em\" /> &nbsp; Search created successfully.\n          </span>\n        </div>\n      ) : (\n        \"\"\n      )}\n\n      <div className=\"group customCard\">\n        <div className=\"col-md-12 collapseHeader\">\n          <h2>Search Filters</h2>\n          <div className=\"helpBtn\">\n            <GlobalHelp pdfname={HelpPDFName} name={Headername} />\n          </div>\n          <div className=\"col-md-0 saveBtn\">\n            <SavedSearchGlobal\n              setEditAddmsg={setEditAddmsg}\n              pageurl={pageurl}\n              page_Name={page_Name}\n              payload={progressDataPayload}\n            />\n          </div>{\" \"}\n          &nbsp;&nbsp;\n          <div\n            onClick={() => {\n              setvisibleCol(!visibleCol);\n              visibleCol\n                ? setCheveronIcon(FaChevronCircleUp)\n                : setCheveronIcon(FaChevronCircleDown);\n            }}\n          >\n            <span>{cheveronIcon}</span>\n          </div>\n        </div>\n\n        <CCollapse visible={!visibleCol}>\n          <div className=\"group-content row\">\n            <div className=\"col-md-3 col-sm-10 col-xs-12 seDiv\" id=\"execSelDiv\">\n              <div className=\"form-group row\">\n                <label className=\"col-5\">\n                  Sales Executive\n                  <span className=\"required error-text ml-1\"> *</span>\n                </label>\n                <span className=\"col-1 p-0\">:</span>\n                <span className=\"col-6 \">\n                  <div>\n                    { }{\" \"}\n                    {accessData == 500 || accessData == 1000 ? (\n                      <select\n                        id=\"executives\"\n                        className=\"col-md-12 col-sm-12 col-xs-12 text\"\n                        value={selectedSEVal}\n                        onChange={(e) => {\n                          onFilterChange(e.target);\n                          setSelectedSEVal(e.target.value);\n                          setselectedSE(\n                            e.target.options[e.target.selectedIndex].text\n                          );\n                        }}\n                        ref={(ele) => {\n                          ref.current[0] = ele;\n                        }}\n                      >\n                        <option value=\"\">{\"<< Please select>> \"}</option>\n                        {salesExecutiveDropdown}\n                      </select>\n                    ) : (\n                      <select\n                        id=\"executives\"\n                        className=\"col-md-12 col-sm-12 col-xs-12 text\"\n                        value={selectedSEVal}\n                        onChange={(e) => {\n                          onFilterChange(e.target);\n                          setSelectedSEVal(e.target.value);\n                          setselectedSE(\n                            e.target.options[e.target.selectedIndex].text\n                          );\n                        }}\n                        ref={(ele) => {\n                          ref.current[0] = ele;\n                        }}\n                      >\n                        <option value=\"\">{\"<< Please select>> \"}</option>\n                        <option value=\"1\">Select SE</option>\n                      </select>\n                    )}\n                  </div>\n                </span>\n              </div>\n            </div>\n\n            <div className=\"col-md-3 col-sm-10 col-xs-12 seDiv\">\n              <div className=\"form-group row\" id=\"week-picker-wrapper\">\n                <label className=\"col-5\">\n                  Start Week<span className=\"required error-text ml-1\"> *</span>\n                </label>\n                <span className=\"col-1 p-0\">:</span>\n                <span className=\"col-6\" style={{ height: \"23px\" }}>\n                  <DatePicker\n                    className=\"from\"\n                    id=\"from\"\n                    selected={startDate2}\n                    onChange={(e) => {\n                      setProgressDataPayload((prev) => ({\n                        ...prev,\n                        [\"from\"]: moment(e).format(\"yyyy-MM-DD\"),\n                      }));\n                      setStartDate2(e);\n                    }}\n                    onKeyDown={(e) => {\n                      e.preventDefault();\n                    }}\n                    filterDate={filterMondays}\n                    dateFormat=\"dd-MMM-yy\"\n                  />\n                </span>\n              </div>\n            </div>\n\n            <div className=\"col-md-3 col-sm-10 col-xs-12 seDiv\">\n              <div className=\"form-group row\">\n                <label className=\"col-5\">\n                  Duration<span className=\"required error-text ml-1\"> *</span>\n                </label>\n                <span className=\"col-1 p-0\">:</span>\n                <span className=\"col-6\" style={{ height: \"23px\" }}>\n                  <select\n                    id=\"duration\"\n                    name=\"duration\"\n                    className=\"col-md-12 col-sm-12 col-xs-12 \"\n                    onChange={(e) => {\n                      onFilterChange(e.target);\n                    }}\n                    value={progressDataPayload?.duration}\n                  >\n                    <option value=\"1\">1</option>\n                    <option value=\"2\">2</option>\n                    <option value=\"3\">3</option>\n                    <option value=\"4\">4</option>\n                  </select>\n                </span>\n              </div>\n            </div>\n\n            <div className=\"col-md-3 col-sm-10 col-xs-12 seDiv\">\n              <div className=\"form-group row\" id=\"week-picker-wrapper\">\n                <label className=\"col-5\">\n                  Quarter<span className=\"required error-text ml-1\"> *</span>\n                </label>\n                <span className=\"col-1 p-0\">:</span>\n                <span className=\"col-6\" style={{ height: \"23px\" }}>\n                  <DatePicker\n                    selected={startDate}\n                    onChange={(e) => {\n                      let selectMonth = moment(e).format(\"MM\");\n\n                      let customMonth = null;\n                      if (parseInt(selectMonth) == 1) {\n                        customMonth = moment(e)\n                          .subtract(1, \"years\")\n                          .add(3, \"months\")\n                          .format(\"yyyy-MM-DD\");\n                      } else if (parseInt(selectMonth) == 4) {\n                        customMonth = moment(e)\n                          .subtract(1, \"years\")\n                          .add(3, \"months\")\n                          .format(\"yyyy-MM-DD\");\n                      } else if (parseInt(selectMonth) == 7) {\n                        customMonth = moment(e)\n                          .subtract(1, \"years\")\n                          .add(3, \"months\")\n                          .format(\"yyyy-MM-DD\");\n                      } else if (parseInt(selectMonth) == 10) {\n                        customMonth = moment(e)\n                          .subtract(9, \"months\")\n                          .format(\"yyyy-MM-DD\");\n                      }\n\n                      setStartDate(moment(e)._d);\n                      onFilterChange({\n                        id: \"quarter\",\n                        value: moment(customMonth).format(\"yyyy-MM-DD\"),\n                      });\n                    }}\n                    dateFormat=\"'FY' yyyy-QQQ\"\n                    showQuarterYearPicker\n                  />\n                </span>\n              </div>\n            </div>\n\n            <div className=\"group-content row\">\n              <div\n                className=\"col-md-3 col-sm-10 col-xs-12 seDiv\"\n                id=\"execSelDiv\"\n              >\n                <div className=\"form-group row\">\n                  <label className=\"col-5\">\n                    {\" \"}\n                    Owner Division{\" \"}\n                    <span className=\"required error-text ml-1\"> *</span>\n                  </label>\n                  <span className=\"col-1 p-0\">:</span>\n                  <span\n                    className=\"col-6 \"\n                    style={{ paddingLeft: \"13px\", paddingRight: \"0px\" }}\n                  >\n                    <div\n                      className=\" multiselect\"\n                      ref={(ele) => {\n                        ref.current[1] = ele;\n                      }}\n                    >\n                      <MultiSelect\n                        ArrowRenderer={ArrowRenderer}\n                        valueRenderer={generateDropdownLabel}\n                        id=\"Divisions\"\n                        options={division}\n                        hasSelectAll={true}\n                        value={SelectdDivision}\n                        disabled={false}\n                        overrideStrings={{\n                          selectAllFiltered: \"Select All\",\n                          selectSomeItems: \"<<Please Select>>\",\n                        }}\n                        onChange={(e) => {\n                          setSelectdDivision(e);\n                          let filteredCountry = [];\n                          e.forEach((d) => {\n                            filteredCountry.push(d.value);\n                          });\n                          setProgressDataPayload((prevVal) => ({\n                            ...prevVal,\n                            [\"Divisions\"]: filteredCountry.toString(),\n                          }));\n                        }}\n                      />\n                    </div>\n                  </span>\n                </div>\n              </div>\n            </div>\n\n            <div className=\"col-md-12 no-padding section\">\n              <div className=\"seFooter\" style={{ borderTop: \"1px solid #CCC\" }}>\n                <span className=\"selectedSE\">\n                  <b>Selected SE : </b>\n                  <span className=\"dynText\">\n                    {selectedSE === \"<< Select SE >>\"\n                      ? localSE.map((item, index) => (\n                        <span key={item.id}>\n                          {isIndividualChecked\n                            ? item.salesPersonName\n                              ? item.salesPersonName\n                              : item.text\n                            : item.salesPersonName\n                              ? item.salesPersonName\n                              : item.text + ` & Team`}\n                          {index === localSE.length - 1 ? \"\" : \", \"}\n                        </span>\n                      ))\n                      : selectedSE}\n                  </span>\n                </span>\n              </div>\n              <div className=\" btn-container center\">\n                <button\n                  type=\"submit\"\n                  className=\"btn btn-primary\"\n                  onClick={progressSearchValidator}\n                >\n                  <FaSearch /> Search\n                </button>\n              </div>\n            </div>\n            {searching ? <Loader handleAbort={handleAbort} /> : \"\"}\n          </div>\n        </CCollapse>\n      </div>\n      <SelectSEDialogBox\n        accessData={accessData}\n        visible={visible}\n        setVisible={setVisible}\n        setGrpId={setGrpId}\n      />\n    </div>\n  );\n}\n","import ProgressTable from \"./ProgressTable\";\nimport { useState, useEffect } from 'react';\nimport ProgressSearchFilter from \"./ProgressSearchFilter\";\nimport './Progress.scss';\nimport axios from \"axios\";\nimport { environment } from \"../../environments/environment\";\n\n\n\nexport default function Progress(props) {\n\n    const [tableFlag, setTableFlag] = useState()\n    const [progressData, setProgressData] = useState()\n    const baseUrl = environment.baseUrl;\n    const loggedUserId = localStorage.getItem(\"resId\")\n\n\n\n    return (\n        <div className=\"col-md-12  border-box no-padding\">\n            <div className=\"col-lg-12 col-md-12 col-sm-12 no-padding\">\n                <ProgressSearchFilter\n                    setProgressData={setProgressData}\n                    setTableFlag={setTableFlag}\n                />\n                {tableFlag && <ProgressTable\n                    progressData={progressData}\n                />}\n\n            </div>\n\n        </div>\n    );\n}"],"names":["ProgressDetailsTable","execName","progressDtlsData","reportRunId","tableClasName","MyKey","baseUrl","environment","useState","progressDetailsData","setProgressDetailsData","progressDataPayload","executiveId","type","case","indexOf","prosicon","style","color","marginTop","useEffect","axios","then","resp","data","catch","err","setTimeout","addingClsName","tdData","document","getElementsByClassName","children","val","i","length","rowSPn","getAttribute","j","parseInt","progressDetailsTableData","map","index","conditions","header","keyArr","includes","split","ia","keys","rowCount","filter","d","push","className","rowSpan","id","colSpan","progressDetailsTableData2","Fragment","toLocaleString","title","maxWidth","href","target","rel","float","marginRight","substring","progressData","setexecName","key","setKey","setProgressDtlsData","setTableClasName","tableVal","setTableVal","allPageLoad","setAllPageLoad","icons","fte0","src","fte_inactive","alt","height","fte1","fte_active","fte2","fte_notice","subk0","subk_inactive","subk1","subk_active","subk2","subk_notice","progressTableData","some","el","console","log","onClick","window","scrollTo","top","behavior","AttainmentSearchFilter","setProgressData","setTableFlag","editmsg","setEditAddmsg","location","useLocation","grpId","setGrpId","URLSearchParams","search","get","filterData","setFilterData","visibleCol","setvisibleCol","isIndividualChecked","localStorage","getItem","JSON","parse","loggedUserId","routes","setRoutes","selectedSEVal","setSelectedSEVal","getMenus","setHirarchy","method","url","menu","subMenus","subMenu","display_name","forEach","item","projectStatusReportSubMenu","find","setAccessData","access_level","res","getData","salesExecutiveDropdown","setsalesExecutiveDropdown","selectedSE","setselectedSE","visible","setVisible","division","setDivision","SelectdDivision","setSelectdDivision","accessData","FaChevronCircleUp","cheveronIcon","setCheveronIcon","ref","useRef","errorMsg","setErrorMsg","localSE","transformedData","Array","isArray","obj","text","parent","salesPersonName","status","li_attr","sestatus","filteredData","findIndex","o","filteredIds","abortController","flat","join","searching","setsearching","Date","startDate","setStartDate","initialSelectedDate","date","dayOfWeek","getDay","diff","getDate","setDate","getPreviousMonday","weekday","month","day","year","hour","minute","second","timeZoneName","setFullYear","startDate2","setStartDate2","setProgressDataPayload","executives","isActive","isIndividual","from","duration","quarter","selectExecs","Divisions","updateDivisions","values","value","progressDataDivisions","divisionsToFilter","Number","updateDivisionsdata","undefined","updatedate","test","formattedDate","format","parseISO","parsedDate","updatequarter","duedate","onFilterChange","prevState","progressSearchValidator","payload","current","valid","GlobalValidation","getProgressData","SelectSEData","useSelector","state","selectedSEState","directSETreeData","loaderTime","AbortController","signal","clearTimeout","FaChevronCircleDown","dropdownOptions","lkupName","Response","countries","e","countryObj","label","owner_division","error","ScreenBreadcrumbs","currentScreenName","size","GlobalHelp","pdfname","name","SavedSearchGlobal","pageurl","page_Name","onChange","options","selectedIndex","ele","selected","prev","moment","onKeyDown","preventDefault","filterDate","dateFormat","selectMonth","customMonth","subtract","add","_d","showQuarterYearPicker","paddingLeft","paddingRight","ArrowRenderer","expanded","valueRenderer","selectedOptions","allOptions","selectedValues","option","allValues","hasSelectAll","disabled","overrideStrings","selectAllFiltered","selectSomeItems","filteredCountry","prevVal","toString","borderTop","Loader","handleAbort","abort","SelectSEDialogBox","Progress","props","tableFlag"],"sourceRoot":""}