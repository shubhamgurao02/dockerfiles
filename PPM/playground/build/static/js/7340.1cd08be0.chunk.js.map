{"version":3,"file":"static/js/7340.1cd08be0.chunk.js","mappings":"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","sources":["views/pages/login/Login.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport \"./Login.scss\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCardGroup,\n  CCol,\n  CContainer,\n  CForm,\n  CFormInput,\n  CInputGroup,\n  CInputGroupText,\n  CRow,\n} from \"@coreui/react\";\nimport CIcon from \"@coreui/icons-react\";\nimport { cilLockLocked, cilUser } from \"@coreui/icons\";\nimport axios from \"axios\";\nimport { IoWarningOutline } from \"react-icons/io5\";\nimport { environment } from \"../../../environments/environment\";\nimport { BiCheck, BiCheckCircle } from \"react-icons/bi\";\nimport moment from \"moment\";\nimport { useDispatch } from \"react-redux\";\nimport { resetSidebarShow } from \"../../../reducers/AppHeaderReducer.js\";\nimport { DateTime } from \"luxon\";\n\nconst Login = () => {\n  const baseUrl = environment.baseUrl;\n  const [loginData, setLoginData] = useState({\n    userName: \"\",\n    password: \"\",\n    inputCaptcha: \"\",\n  });\n\n  const navigate = useNavigate();\n  const ref = useRef();\n  const dispatch = useDispatch();\n\n  const [loginState, setLoginState] = useState(false);\n  const [loginValue, setLoginValue] = useState(\"\");\n  const [disableLogin, setDisableLogin] = useState(false);\n  const [showCaptcha, setShowCaptcha] = useState(false);\n  const [captchaCode, setCaptchaCode] = useState([]);\n  \n  const currentDatetime = DateTime.local();\n  // const offsetHours = currentDatetime.toFormat('Z');\n  const offsetMinutes = currentDatetime.toFormat(\"ZZ\");\n\n  // Format the offset as \"UTCÂ±HH:MM\"\n  const currentZone = `UTC${offsetMinutes}`;\n  // const currentZone = currentDatetime.zoneName;\n\n  const [timeZonePayload, setTimeZonePayload] = useState({\n    userName: \"\",\n    password: \"\",\n    timeZone: currentZone,\n  });\n  useEffect(() => {\n    const isAuthenticated = localStorage.getItem(\"token\") === \"true\";\n    if (isAuthenticated) {\n      const path = localStorage.getItem(\"path\");\n      if (path) {\n        navigate(path);\n      }\n    }\n  }, []);\n\n  const onFilterChange = ({ id, value }) => {\n    setLoginData((prevState) => {\n      return { ...prevState, [id]: value };\n    });\n    setTimeZonePayload((prevState) => {\n      return { ...prevState, [id]: value };\n    });\n  };\n\n  const updateExpireTime = () => {\n    if (localStorage.getItem(\"expireTime\") == undefined) {\n      const expireTime = moment().add(20, \"minutes\");\n      localStorage.setItem(\"expireTime\", expireTime);\n      localStorage.setItem(\"loggedIn\", true);\n    }\n  };\n\n  const captchaInputRef = useRef(null);\n\n  const reloadCaptcha = () => {\n    axios\n      .get(baseUrl + `/LayoutMS/captcha/captcha`)\n      .then(function (captchaResponse) {\n        const base64ImageString = captchaResponse.data.encodedString;\n        setCaptchaCode(captchaResponse.data.code);\n        const imgElement = document.createElement(\"img\");\n        imgElement.src = `data:image/png;base64,${base64ImageString}`;\n\n        const imageContainer = document.getElementById(\"captchaImageContainer\");\n        imageContainer.innerHTML = \"\";\n        imageContainer.appendChild(imgElement);\n\n        if (captchaInputRef.current) {\n          captchaInputRef.current.value = '';\n        }\n      })\n      .catch(function (captchaError) {\n        console.error(\"Error fetching captcha:\", captchaError);\n      });\n  };\n\n  const getLoginDtls = () => {\n    setDisableLogin(true);\n    if (showCaptcha) {\n      //Condition For Empty Captcha\n      if (!loginData.inputCaptcha) {\n        setLoginState(true);\n        setLoginValue(\n          <div className=\"statusMsg error\">\n            <IoWarningOutline /> {\"Please enter the captcha value.\"}\n          </div>\n        );\n        setDisableLogin(false);\n        return;\n      }\n\n      // Condition for Captcha Matching\n      if (loginData.inputCaptcha !== captchaCode) {\n        setLoginState(true);\n        setLoginValue(\n          <div className=\"statusMsg error\">\n            <IoWarningOutline /> {\"Please provide valid captcha.\"}\n          </div>\n        );\n        reloadCaptcha();\n        setShowCaptcha(true);\n        setDisableLogin(false);\n        return;\n      }\n    }\n    axios({\n      method: \"post\",\n      url:\n        baseUrl + `/LayoutMS/auth/login`,\n      data: JSON.stringify(loginData),\n      headers: { \"Content-Type\": \"application/json\" },\n    })\n      .then(function (response) {\n        const path = response.data.path;\n\n        if (response.data.success === true) {\n          setDisableLogin(true);\n\n          axios({\n            method: \"post\",\n            url: baseUrl + `/LayoutMS/auth/getloginCount`,\n            data: JSON.stringify(timeZonePayload),\n            headers: { \"Content-Type\": \"application/json\" },\n          }).then(function (resp) {\n            localStorage.setItem(\n              \"lastUpdatedDt\",\n              resp.data.last_updated_login_dt\n            );\n            localStorage.setItem(\"loginCount7Days\", resp.data.loginCount7Days);\n            localStorage.setItem(\n              \"loginCount30Days\",\n              resp.data.loginCount30Days\n            );\n          });\n          setLoginState(true);\n\n          setLoginValue(\n            <div className=\"statusMsg success\">\n              <BiCheckCircle size=\"1.4em\" /> {\"Login Successful!\"}\n            </div>\n          );\n\n          {\n            path == null\n              ? setTimeout(() => {\n                  setLoginState(false);\n                  setLoginValue(\"\");\n                  localStorage.setItem(\"path\", \"/resource/dashboard\");\n                  navigate(\"/resource/dashboard\");\n                }, 1500)\n              : setTimeout(() => {\n                  setLoginState(false);\n                  setLoginValue(\"\");\n                  localStorage.setItem(\"path\", path);\n                  navigate(path);\n                }, 1500);\n          }\n\n          localStorage.setItem(\"expiry\", Date.now() + 1800000);\n          localStorage.setItem(\"resId\", response.data.id);\n          localStorage.setItem(\"resName\", response.data.resourceName);\n          localStorage.setItem(\"token\", response.data.success);\n          localStorage.setItem(\"jwtToken\", response.data.jwtToken);\n\n          updateExpireTime();\n          dispatch(resetSidebarShow());\n        } else {\n          setLoginState(true);\n          setDisableLogin(false);\n          setLoginValue(\n            <div className=\"statusMsg error\">\n              <IoWarningOutline /> {\"Incorrect Credentials!\"}\n            </div>\n          );\n          reloadCaptcha();\n          setShowCaptcha(true);\n        }\n      })\n      .catch(function (response) {\n        setLoginState(true);\n        setLoginValue(\n          <div className=\"statusMsg error\">\n            <IoWarningOutline /> {\"Login Failed!\"}\n          </div>\n        );\n      });\n    setDisableLogin(false);\n  };\n  return (\n    <div className=\"loginContainer\">\n      <div className=\"leftContent\">\n        <div className=\"loginImg\"></div>\n      </div>\n      <div className=\"rightContent\">\n        <div className=\"formArea\">\n          <img\n            ref={ref}\n            src=\"ppm-logo-dark.svg\"\n            className=\"loginLogo\"\n            alt=\"PPM Logo\"\n          />\n          <CForm>\n            <h1 className=\"mb-1\">Login</h1>\n            <p className=\"mb-3\">Sign In to your account</p>\n            {loginState ? <div>{loginValue}</div> : \"\"}\n            <div className=\"mb-3\">\n              <label htmlFor=\"password\">Email address</label>\n              <input\n                id=\"userName\"\n                type=\"email\"\n                className=\"form-control \"\n                placeholder=\"name@example.com\"\n                required\n                onChange={(e) => {\n                  onFilterChange(e.target);\n                }}\n              />\n            </div>\n            <div className=\"\">\n              <label htmlFor=\"password\">Password</label>\n              <input\n                type=\"password\"\n                className=\"form-control \"\n                id=\"password\"\n                placeholder=\"Password\"\n                required\n                onChange={(e) => {\n                  onFilterChange(e.target);\n                }}\n              />\n            </div>\n            {showCaptcha && (\n              <div>\n                <div className=\"row\">\n                  <div className=\"col-md-6\">\n                    <div className=\"mt-2\">\n                      <label htmlFor=\"captcha\">Captcha</label>\n                      <input\n                        type=\"text\"\n                        className=\"form-control\"\n                        id=\"inputCaptcha\"\n                        placeholder=\"Captcha Value\"\n                        required\n                        onChange={(e) => {\n                          onFilterChange(e.target);\n                        }}\n                        ref={captchaInputRef} \n                      />\n                    </div>\n                  </div>\n\n                  <div\n                    className=\"col-md-2 mt-5\"\n                    id=\"captchaImageContainer\"\n                  ></div>\n                </div>\n\n                <div className=\"mt-3 reloadLink\">\n                  <a href=\"#\" onClick={reloadCaptcha}>\n                    Reload Captcha Image\n                  </a>\n                </div>\n              </div>\n            )}\n            <CButton\n              className={\n                disableLogin ? \"disableField loginBtn mt-4\" : \"loginBtn mt-4\"\n              }\n              id=\"loginButton\"\n              disabled={disableLogin}\n              style={{ cursor: disableLogin ? \"not-allowed\" : \"\" }}\n              onClick={() => {\n                setDisableLogin(true), getLoginDtls();\n              }}\n            >\n              Login\n            </CButton>\n          </CForm>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Login;\n"],"names":["baseUrl","environment","useState","userName","password","inputCaptcha","loginData","setLoginData","navigate","useNavigate","ref","useRef","dispatch","useDispatch","loginState","setLoginState","loginValue","setLoginValue","disableLogin","setDisableLogin","showCaptcha","setShowCaptcha","captchaCode","setCaptchaCode","offsetMinutes","DateTime","toFormat","currentZone","timeZone","timeZonePayload","setTimeZonePayload","useEffect","localStorage","getItem","path","onFilterChange","id","value","prevState","captchaInputRef","reloadCaptcha","axios","then","captchaResponse","base64ImageString","data","encodedString","code","imgElement","document","createElement","src","imageContainer","getElementById","innerHTML","appendChild","current","catch","captchaError","console","error","getLoginDtls","className","method","url","JSON","stringify","headers","response","success","resp","setItem","last_updated_login_dt","loginCount7Days","loginCount30Days","size","setTimeout","Date","now","resourceName","jwtToken","undefined","expireTime","moment","add","updateExpireTime","resetSidebarShow","alt","htmlFor","type","placeholder","required","onChange","e","target","href","onClick","disabled","style","cursor"],"sourceRoot":""}