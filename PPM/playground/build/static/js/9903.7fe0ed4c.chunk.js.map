{"version":3,"file":"static/js/9903.7fe0ed4c.chunk.js","mappings":"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","sources":["views/Customer/FinancePlanReview/FPRViewTable.js","views/Customer/FinancialPlanService.js","../node_modules/uuid/index.js","../node_modules/uuid/lib/bytesToUuid.js","../node_modules/uuid/lib/rng-browser.js","../node_modules/uuid/v1.js","../node_modules/uuid/v4.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport MaterialReactTable from \"material-react-table\";\n// import prDataMonthly from \"./MonthlyPRData\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport axios from \"axios\";\nimport { environment } from \"../../../environments/environment\";\n\nexport const FPRViewTable = (props) => {\n  const { tableData } = props;\n\n  const baseUrl = environment.baseUrl;\n\n  const [data, setData] = useState();\n  const [dataPR, setDataPR] = useState();\n  const [columns, setColumns] = useState([]);\n  const [rows, setRows] = useState([]);\n  const [columnsPR, setColumnsPR] = useState([]);\n  const [rowsPR, setRowsPR] = useState([]);\n  const [showPRFlag, setShowPRFlag] = useState(false);\n  useEffect(() => {\n    if (tableData) setData(tableData);\n  }, [tableData]);\n\n  // useEffect(() => {\n  //   if (prDataMonthly) setDataPR(prDataMonthly);\n  // }, [prDataMonthly]);\n\n  useEffect(() => {\n    console.log(data);\n    if (data) {\n      defineColumns();\n      defineRows();\n    }\n  }, [data]);\n\n  useEffect(() => {\n    if (dataPR) {\n      defineColumnsPR();\n      defineRowsPR();\n    }\n  }, [dataPR]);\n\n  const defineColumnsPR = () => {\n    const columnsObject = dataPR[0];\n    const updatedColumnsPR = [];\n    Object.entries(columnsObject).forEach(([prop, value]) => {\n      if (prop != \"id\") {\n        let newObject = {\n          id: uuidv4(),\n          header: value,\n          accessorKey: prop,\n        };\n        updatedColumnsPR.push(newObject);\n      }\n    });\n    setColumnsPR(updatedColumnsPR);\n  };\n\n  const defineRowsPR = () => {\n    const updatedRowsPR = dataPR.slice(1);\n    setRowsPR(updatedRowsPR);\n  };\n\n\n  const numberWithCommas = (x) => {\n    var number = String(x);\n\n    if (number.includes(\".\")) {\n      var decimalNumbers = number;\n      var num = Number(decimalNumbers);\n      let FdN = num != null && num.toFixed(2);\n      let final = FdN.split(\".\");\n      final[0] = final[0].replace(/(?<=\\d)(?=(\\d{3})+(?!\\d|\\.))/g, \",\");\n      return final.join(\".\");\n    } else {\n      // Add \".00\" to non-decimal values\n      return number != null\n        ? number.replace(/(?<=\\d)(?=(\\d{3})+(?!\\d|\\.))/g, \",\") + \".00\"\n        : \"\";\n    }\n  };\n\n  const getAccountPlanRevenue = () => {\n\n    const postData =\n    {\n      \"month\": \"2023-10-01\",\n      \"customerId\": \"0\",\n      \"countryId\": \"0\",\n      \"reportRunId\": \"92662\",\n      \"userType\": null,\n      \"cslId\": \"102007130\",\n      \"measureType\": \"plRev\",\n      \"isQrtr\": \"0\",\n      \"option\": \"view\"\n    }\n\n\n    console.log(postData)\n    axios({\n      method: \"POST\",\n      url:\n        // baseUrl +\n        `http://localhost:8090/customersms/financialPlanandReview/getAccountPlanRevenue`,\n      data: postData,\n    }).then((response) => {\n      console.log(\"response\", response.data);\n      setDataPR(response.data.data);\n      setShowPRFlag(true)\n    });\n  };\n\n  const defineColumns = () => {\n    const headersObj = data?.find((obj) => obj.id == -2);\n    const subHeaderObj = data?.find((obj) => obj.id == -1);\n    const myHeaderMap = new Map();\n\n    Object.entries(headersObj)?.forEach(([key, value]) => {\n      if (value?.toString().includes(\"^\")) {\n        const myKeyArray = key.split(\"_\");\n        let myKey = null;\n        let myValue = null;\n        if (myKeyArray.length > 1) {\n          myKeyArray.pop();\n          myKey = myKeyArray.join(\"_\");\n          myValue = value.split(\"^\")[0];\n        } else {\n          myKey = myKeyArray[0];\n          myValue = value.split(\" \")[0];\n        }\n\n        myHeaderMap.set(myKey, myValue);\n      }\n    });\n\n    const updatedColumns = [];\n    // debugger;\n    myHeaderMap?.forEach((value, key, index) => {\n      let newObject = null;\n\n      if (key != \"name\") {\n        const headerColumns = [];\n        const subHeaderKeys = Object.keys(subHeaderObj).filter((obj) =>\n          obj.includes(key)\n        );\n        subHeaderKeys.forEach((k, index) => {\n          let obj = {\n            id: uuidv4(),\n            accessorKey: k,\n            header: subHeaderObj[k],\n          };\n          headerColumns.push(obj);\n        });\n\n        newObject = {\n          id: uuidv4(),\n          header: value,\n          accessorKey: key,\n          columns: headerColumns,\n        };\n      } else {\n        newObject = {\n          id: uuidv4(),\n          header: value,\n          accessorKey: key,\n        };\n      }\n      updatedColumns.push(newObject);\n    });\n    setColumns(updatedColumns);\n    // console.log(updatedColumns, \"columns\")\n  };\n\n  const defineRows = () => {\n    const rowData = data?.slice(3);\n    const mainRows = rowData?.filter((obj) => obj.lvl == 0 || obj.lvl == 1);\n    const mainRowChildren = new Map();\n    mainRows?.forEach((row) => {\n      const filteredRows = rowData.filter(\n        (obj) => obj.CSLPartnerId == row.CSLPartnerId && obj.lvl != 1\n      );\n      const levelTwoRows = filteredRows.filter((obj) => obj.lvl == 2);\n      const levelThreeRows = filteredRows.filter((obj) => obj.lvl == 3);\n      const levelFourRows = filteredRows.filter((obj) => obj.lvl == 4);\n\n      //Adding children for levelthree rows if any\n      levelThreeRows.map((row) => {\n        const children = levelFourRows.filter(\n          (obj) => obj.parentAttr == row.keyAttr\n        );\n        row[\"subRows\"] = children;\n      });\n\n      //Adding children for leveltwo rows if any\n      levelTwoRows.map((row) => {\n        const children = levelThreeRows.filter(\n          (obj) => obj.parentAttr == row.keyAttr\n        );\n        row[\"subRows\"] = children;\n      });\n\n      //Adding children for levelone rows if any\n\n      const children = levelTwoRows.filter(\n        (obj) => obj.parentAttr == row.keyAttr\n      );\n      row[\"subRows\"] = children;\n\n      mainRowChildren.set(row.id, filteredRows);\n    });\n\n    for (const row of mainRows) {\n      for (const key in row) {\n        if (key.includes(\"_\")) {\n          const value = row[key];\n\n          if (key.split(\"_\")[3] == \"plRev\") {\n            const link = <a onClick={() => { console.log(value); getAccountPlanRevenue() }}>${numberWithCommas(value)}</a>;\n            // Update the value in the row with the link\n            row[key] = link;\n          }\n        }\n      }\n    }\n    setRows(mainRows);\n  };\n\n  return (\n    <>\n      <div className=\"materialReactExpandableTable darkHeader toHead timesheetTable\">\n        <MaterialReactTable\n          enableExpanding\n          // enableStickyHeader\n          enablePagination={false}\n          enableBottomToolbar={false}\n          enableColumnFilterModes={false}\n          enableDensityToggle={false}\n          enableColumnActions={false}\n          enableFilters={false}\n          enableSorting={false}\n          enableFullScreenToggle={false}\n          enableHiding={false}\n          filterFromLeafRows //apply filtering to all rows instead of just parent rows\n          initialState={{\n            expanded: false,\n            density: \"compact\",\n            enablePinning: true,\n          }} //expand all rows by default\n          // defaultColumn={{ minSize: 10, maxSize: 100, size: 10 }} //units are in px\n          localization={{\n            noRecordsToDisplay: (\n              <span style={{ fontWeight: \"bold\" }}>No records found</span>\n            ),\n          }}\n          columns={columns}\n          data={rows}\n        />\n      </div>\n      {showPRFlag && (\n        <div className=\"materialReactExpandableTable darkHeader toHead timesheetTable\">\n          <MaterialReactTable\n            enableExpanding={false}\n            // enableStickyHeader\n            enablePagination={false}\n            enableBottomToolbar={false}\n            enableColumnFilterModes={false}\n            enableDensityToggle={false}\n            enableColumnActions={false}\n            enableFilters={false}\n            enableSorting={false}\n            enableFullScreenToggle={false}\n            enableHiding={false}\n            filterFromLeafRows //apply filtering to all rows instead of just parent rows\n            initialState={{\n              expanded: false,\n              density: \"compact\",\n              enablePinning: true,\n            }} //expand all rows by default\n            // defaultColumn={{ minSize: 10, maxSize: 100, size: 10 }} //units are in px\n            localization={{\n              noRecordsToDisplay: (\n                <span style={{ fontWeight: \"bold\" }}>No records found</span>\n              ),\n            }}\n            columns={columnsPR}\n            data={rowsPR}\n          />\n        </div>\n      )}\n    </>\n  );\n};\n","import React, { useEffect, useState } from \"react\";\nimport { MultiSelect } from \"react-multi-select-component\";\nimport DatePicker from \"react-datepicker\";\nimport {\n  FaCaretDown,\n  FaChevronCircleDown,\n  FaChevronCircleUp,\n  FaSearch,\n} from \"react-icons/fa\";\nimport { CCollapse } from \"@coreui/react\";\nimport ScreenBreadcrumbs from \"../Common/ScreenBreadcrumbs\";\nimport axios from \"axios\";\nimport { environment } from \"../../environments/environment\";\nimport moment, { duration } from \"moment\";\nimport { ReactSearchAutocomplete } from \"react-search-autocomplete\";\nimport { Link } from \"react-router-dom\";\nimport Loader from \"../Loader/Loader\";\nimport { useRef } from \"react\";\nimport GlobalHelp from \"../PrimeReactTableComponent/GlobalHelp\";\nimport { FPRViewTable } from \"./FinancePlanReview/FPRViewTable\";\n\nfunction FinancialPlanService() {\n  const [startDate, setStartDate] = useState(() => {\n    const date = new Date();\n    date.setFullYear(date.getFullYear() + 1);\n    date.setMonth(date.getMonth() - 3);\n    return date;\n  });\n  const [value, onChange] = useState(new Date());\n  const [visible, setVisible] = useState(false);\n  const [cheveronIcon, setCheveronIcon] = useState(FaChevronCircleUp);\n  const baseUrl = environment.baseUrl;\n\n  //// -------breadcrumbs-----\n  const loggedUserId = localStorage.getItem(\"resId\");\n\n  const [routes, setRoutes] = useState([]);\n  let textContent = \"Customers\";\n  let currentScreenName = [\"Financial Plan and Review\"];\n\n  const Classifications = [\n    { value: \"1097\", label: \"Key\" },\n    { value: \"1098\", label: \"Strategic\" },\n    { value: \"1099\", label: \"Growth\" },\n    { value: \"1100\", label: \"Invest\" },\n    { value: \"1101\", label: \"Others\" },\n  ];\n  const [selectedcountry, setselectedcountry] = useState([]);\n  const [selectedClassifications, setSelectedClassifications] = useState(Classifications);\n  const [selectedCsl, setSelectedCsl] = useState([]);\n  const [selectedDelivery, setSelectedDelivery] = useState([]);\n  const [viewType, setViewType] = useState(\"plan\");\n  // const [classification, setClassification] = useState([]);\n  const [quarterDuration, setQuarterDuration] = useState(\"4\");\n  const [monthDuration, setMonthDuration] = useState(\"6\");\n  const [country, setcountry] = useState([]);\n  const [cslList, setCslList] = useState(selectedCsl);\n  const [delivery, setDelivery] = useState(selectedDelivery);\n  const [engComp, setengComp] = useState([]);\n  const [resource, setResource] = useState([]);\n  const [resource1, setResource1] = useState([]);\n  const [selectedengComp, setselectedengComp] = useState([]);\n  const [dropCslId, setDropCslId] = useState([]);\n  const [dpIds, setDpIds] = useState([]);\n  const [date, SetDate] = useState(new Date());\n  const [loader, setLoader] = useState(false);\n  const abortController = useRef(null);\n  const defaultDate = () => {\n    const now = new Date();\n    const quarter = Math.floor(now.getMonth() / 3);\n    const firstDate = new Date(now.getFullYear(), quarter * 3, 1);\n    return firstDate.toLocaleDateString(\"en-CA\");\n  };\n  const [servicesPayload, setservicesPayload] = useState({\n    viewtype: viewType,\n    Classification: \"\",\n    countries: \"\",\n    quarter: moment(defaultDate()).format(\"yyyy-MM-DD\"),\n    duration: viewType == \"view\" ? \"6\" : \"4\",\n    // status: \"active\",\n    monthsel: moment(date).format(\"yyyy-MM-DD\"),\n    custstatus: \"active\",\n    customerId: \"-1\",\n    accountExecutiveId: \"-1\",\n    CslId: \"\",\n    DpId: \"\",\n    engComp: \"-1\",\n    cpId: \"-1\",\n    epId: \"-1\",\n    isExport: \"0\",\n    isCSL: false,\n    isLimitedAccess: false,\n    key: \"1698211090178\",\n    cslResId: \"-1\",\n  });\n  const [showtable, setShowtable] = useState(false);\n  const [tableData, setTableData] = useState([]);\n\n\n\n  const ArrowRenderer = ({ expanded }) => (\n    <>\n      {expanded ? (\n        <FaCaretDown className=\"chevronIcon\" />\n      ) : (\n        <FaCaretDown className=\"chevronIcon\" />\n      )}\n    </>\n  );\n\n  const onFilterChange = ({ id, value }) => {\n    console.log(id, value, \"---filter change\")\n    console.log(viewType)\n    if (id === \"countries\") {\n      setservicesPayload((prevState) => {\n        return {\n          ...prevState,\n          [id]: value.length == 8 ? -1 : value.toString(),\n        };\n      });\n    } else if (id === \"Classification\") {\n      setservicesPayload((prevState) => {\n        return {\n          ...prevState,\n          [id]: value.length == 5 ? -1 : value.toString(),\n        };\n      });\n    } else if (id === \"viewtype\") {\n      if (value == \"view\") {\n        setservicesPayload((prevState) => {\n          return { ...prevState, duration: \"6\" };\n        });\n      } else {\n        setservicesPayload((prevState) => {\n          return { ...prevState, duration: quarterDuration };\n        });\n      }\n    } else {\n      setservicesPayload((prevState) => {\n        return { ...prevState, [id]: value };\n      });\n    }\n\n    // if (id === \"from\") {\n    //   setservicesPayload((prevState) => {\n    //     return { ...prevState, fyear: moment(value).format(\"yyyy-MM-DD\") };\n    //   });\n    // }\n  };\n  const handleClearCustomer = () => {\n    setservicesPayload((prevProps) => ({ ...prevProps, customerId: \"\" }));\n  };\n\n  const handleClearAccountExecutive = () => {\n    setservicesPayload((prevProps) => ({ ...prevProps, accountExecutiveId: \"\" }));\n  };\n\n  const financeHandleClick = () => {\n    setVisible(!visible);\n    visible\n      ? setCheveronIcon(FaChevronCircleUp)\n      : setCheveronIcon(FaChevronCircleDown);\n  };\n\n  const handleAbort = () => {\n    abortController.current && abortController.current.abort();\n    setLoader(false);\n  };\n\n  useEffect(() => {\n    getMenus();\n    getcountryDropdown();\n    getengCompanyDropdown();\n    handleCsl();\n    getDeliveryPartners();\n    resourceFnc();\n  }, []);\n\n  //============================ API Calls ==============================\n  const getcountryDropdown = () => {\n    axios.get(baseUrl + `/CommonMS/master/getCountries`).then((resp) => {\n      const data = resp.data;\n\n      const dropdownOptions = data.map((item) => {\n        return {\n          value: item.id,\n          label: item.country_name,\n        };\n      });\n\n      setcountry(dropdownOptions);\n      console.log(country, dropdownOptions)\n      // if (id !== null) {\n      setselectedcountry(dropdownOptions);\n      // }\n    });\n  };\n\n  useEffect(() => {\n    let countryList = [];\n    country.forEach((d) => {\n      countryList.push(d.value);\n    });\n    console.log(countryList.length, \"countryListlength\")\n    setservicesPayload((prevVal) => ({\n      ...prevVal,\n      [\"countries\"]: countryList.length == 8 ? \"-1\" : countryList.toString(),\n    }));\n  }, [country]);\n\n  useEffect(() => {\n    let classification = [];\n    selectedClassifications.forEach((d) => {\n      classification.push(d.value);\n    });\n    setservicesPayload((prev) => ({\n      ...prev,\n      [\"Classification\"]: classification.length == 5 ? \"-1\" : classification.toString()\n    }))\n\n\n\n  }, [])\n\n  const getengCompanyDropdown = () => {\n    axios.get(baseUrl + `/CommonMS/master/getCompany`).then((resp) => {\n      const data = resp.data;\n      const dropdownOptions = data.map((item) => {\n        return {\n          value: item.id,\n          label: item.company_name,\n        };\n      });\n      setengComp(dropdownOptions);\n      // if (id == null) {\n      setselectedengComp(dropdownOptions);\n      // }\n      // setviewDataPayload(prevState => {\n      //     return {...prevState,[\"Divisions\"]:String(dropdownOptions.map(item=> item.value))}\n      // });\n      // settargetDataPayload(prevState => {\n      //     return {...prevState,[\"Divisions\"]:String(dropdownOptions.map(item=> item.value))}\n      // });\n    });\n  };\n\n  const handleCsl = () => {\n    // const loggedUser = \"0\";\n    axios({\n      method: \"get\",\n      url:\n        baseUrl +\n        `/SalesMS/MasterController/getCslDropDownData?userId=${loggedUserId}`,\n    }).then((Response) => {\n      let departments = [];\n      let deptIds = [];\n      let data = Response.data;\n      data.push({ id: 0, PersonName: \"UnAssigned\" });\n      data.length > 0 &&\n        data.forEach((e) => {\n          let countryObj = {\n            label: e.PersonName,\n            value: e.id,\n          };\n          departments.push(countryObj);\n          deptIds.push(countryObj.value);\n        });\n      setCslList(departments);\n      setSelectedCsl(departments);\n      const formattedString = deptIds.join(\",\");\n      setDropCslId(formattedString);\n      setservicesPayload((prevVal) => ({\n        ...prevVal,\n        [\"CslId\"]: data.length == departments.length ? \"-1\" : departments.toString(),\n      }));\n    });\n  };\n\n  const getDeliveryPartners = () => {\n    axios\n      .get(baseUrl + `/administrationms/subkconversiontrend/getdeliverypartner`)\n      .then((Response) => {\n        let deliver = [];\n        let deliveryId = [];\n        let data = Response.data;\n        data.push({ id: 0, PersonName: \"UnAssigned\" });\n        data.length > 0 &&\n          data.forEach((e) => {\n            let deliverObj = { label: e.PersonName, value: e.id };\n            deliver.push(deliverObj);\n            deliveryId.push(deliverObj.value);\n          });\n        setDelivery(deliver);\n        setSelectedDelivery(deliver);\n        console.log(deliver, \"deliver\")\n        const formattedDelIds = deliveryId.join(\",\");\n        setDpIds(formattedDelIds);\n        console.log(data.length, deliver.length, \"dplength\")\n        setservicesPayload((prevVal) => ({\n          ...prevVal,\n          [\"DpId\"]: data.length == deliver.length ? \"-1\" : deliver.toString(),\n        }));\n      });\n  };\n\n  const resourceFnc = () => {\n    axios({\n      method: \"get\",\n      url: baseUrl + `/ProjectMS/risks/getAssignedData`,\n    }).then((res) => {\n      let manger = res.data;\n      setResource(manger);\n      setResource1(manger);\n    });\n  };\n\n  const getMenus = () => {\n    // setMenusData\n\n    axios({\n      method: \"GET\",\n      url: baseUrl + `/CommonMS/master/getMenus?loggedUserId=${loggedUserId}`,\n    }).then((resp) => {\n      let data = resp.data;\n\n      data.forEach((item) => {\n        if (item.display_name === textContent) {\n          setRoutes([item]);\n        }\n      });\n    });\n  };\n\n  const handleSaveClick = () => {\n    setVisible(!visible);\n    visible\n      ? setCheveronIcon(FaChevronCircleUp)\n      : setCheveronIcon(FaChevronCircleDown);\n\n    const postData =\n    {\n      type: servicesPayload.viewtype,\n      classificationIds: servicesPayload.Classification,\n      countryIds: servicesPayload.countries,\n      month: servicesPayload.quarter,\n      duration: servicesPayload.duration,\n      status: servicesPayload.custstatus,\n      customer: servicesPayload.customerId,\n      aeId: servicesPayload.accountExecutiveId,\n      cpId: \"-1\",\n      dpId: servicesPayload.DpId,\n      epId: \"-1\",\n      engComp: servicesPayload.engComp,\n      monthpick: servicesPayload.quarter,\n      isExport: \"0\",\n      isCSL: false,\n      isLimitedAccess: false,\n      key: \"1698211090178\",\n      cslResId: servicesPayload.CslId,\n    };\n\n\n\n    console.log(postData)\n    axios({\n      method: \"POST\",\n      url: baseUrl + `/customersms/financialPlanandReview/getAccountPlan`,\n      data: postData,\n    }).then((response) => {\n      console.log(\"response\", response.data);\n      setTableData(response.data.data);\n    });\n  };\n\n  const generateDropdownLabel = (selectedOptions, allOptions) => {\n    const selectedValues = selectedOptions.map((option) => option.value);\n\n    const allValues = allOptions.map((item) => item.value);\n\n    if (selectedValues.length === allValues.length) {\n      return \"<< ALL >>\";\n    } else {\n      return selectedOptions.map((option) => option.label).join(\", \");\n    }\n  };\n  const HelpPDFName = \"Financial Plan and Review.pdf\";\n  const Headername = \"Financial Plan and Review Help\";\n  return (\n    <div>\n      <div className=\"col-md-12\">\n        <div className=\"pageTitle\">\n          <div className=\"childOne\"></div>\n          <div className=\"childTwo\">\n            <h2>Financial Plan and Review</h2>\n          </div>\n          <div className=\"childThree\"></div>\n        </div>\n      </div>\n      <ScreenBreadcrumbs\n        routes={routes}\n        currentScreenName={currentScreenName}\n      />\n      <div className=\"group mb-3 customCard\">\n        <div className=\"col-md-12 collapseHeader\">\n          {/* <h2>Search Filters</h2> */}\n          <Link onClick={() => financeHandleClick()}>Search Filters</Link>\n          <div className=\"helpBtn\">\n            <GlobalHelp pdfname={HelpPDFName} name={Headername} />\n          </div>\n          <div onClick={() => financeHandleClick()}>\n            <span className=\"chevron-icon\">{cheveronIcon}</span>\n          </div>\n        </div>\n        <CCollapse visible={!visible}>\n          <div className=\"group-content row\">\n            <div className=\" col-md-3 mb-2\">\n              <div className=\"form-group row\">\n                <label className=\"col-5\" htmlFor=\"viewtype\">\n                  View Type\n                </label>\n                <span className=\"col-1 p-0\">:</span>\n                <div className=\"col-6\">\n                  <select\n                    id=\"viewtype\"\n                    className=\"col-md-12 col-sm-12 col-xs-12 \"\n                    value={viewType}\n                    onChange={(e) => {\n                      onFilterChange({\n                        id: \"viewtype\",\n                        value: e.target.value,\n                      });\n                      console.log(e.target.value)\n                      setservicesPayload((prev) => ({ ...prev, [\"viewtype\"]: e.target.value }))\n                      setViewType(e.target.value);\n                    }}\n                  >\n                    <option value=\"plan\">Planning</option>\n                    <option value=\"actual\">Actuals</option>\n                    <option value=\"compare\">Compare</option>\n                    <option value=\"view\">View</option>\n                  </select>\n                </div>\n              </div>\n            </div>\n            {[\"plan\", \"actual\", \"compare\"].includes(viewType) && (\n              <div className=\" col-md-3 mb-2\">\n                <div className=\"form-group row\">\n                  <label className=\"col-5\" htmlFor=\"Classification\">\n                    Classification &nbsp;\n                    <span className=\"textfield\" style={{ color: \"red\" }}>\n                      *\n                    </span>\n                  </label>\n                  <span className=\"col-1 p-0\">:</span>\n                  <div className=\"col-6\">\n                    <MultiSelect\n                      options={Classifications}\n                      hasSelectAll={true}\n                      isLoading={false}\n                      shouldToggleOnHover={false}\n                      disableSearch={false}\n                      disabled={false}\n                      ArrowRenderer={ArrowRenderer}\n                      value={selectedClassifications}\n                      valueRenderer={generateDropdownLabel}\n                      onChange={(s) => {\n                        setSelectedClassifications(s);\n                        let selected = s.map((item) => {\n                          return item.value;\n                        });\n                        console.log(selected, selected.length, selected.toString())\n                        onFilterChange({\n                          id: \"Classification\",\n                          value: selected,\n                        });\n                        setservicesPayload((prev) => ({ ...prev, [\"Classification\"]: selectedClassifications.length == 5 ? \"-1\" : selected.toString() }))\n                        // setClassification(selected.toString());\n                      }}\n                    />\n                  </div>\n                </div>\n              </div>\n            )}\n            <div className=\" col-md-3 mb-2\">\n              <div className=\"form-group row\">\n                <label className=\"col-5\" htmlFor=\"reslocation\">\n                  Res. Location &nbsp;\n                  <span className=\"textfield\" style={{ color: \"red\" }}>\n                    *\n                  </span>\n                </label>\n                <span className=\"col-1 p-0\">:</span>\n                <div className=\"col-6\">\n                  <MultiSelect\n                    className=\"disableField\"\n                    ArrowRenderer={ArrowRenderer}\n                    options={country}\n                    hasSelectAll={true}\n                    isLoading={false}\n                    shouldToggleOnHover={false}\n                    disableSearch={false}\n                    value={selectedcountry}\n                    disabled={false}\n                    valueRenderer={generateDropdownLabel}\n                    onChange={(s) => {\n                      setselectedcountry(s);\n                      let selected = s.map((item) => {\n                        return item.value;\n                      });\n                      onFilterChange({\n                        id: \"countries\",\n                        value: selected,\n                      });\n\n                    }}\n                  />\n                </div>\n              </div>\n            </div>\n            {[\"plan\", \"actual\", \"compare\"].includes(viewType) && (\n              <div className=\" col-md-3 mb-2\">\n                <div className=\"form-group row\">\n                  <label className=\"col-5\" htmlFor=\"Quarter\">\n                    Quarter{\" \"}\n                  </label>\n                  <span className=\"col-1 p-0\">:</span>\n                  <div className=\"col-6\">\n                    <DatePicker\n                      className=\"disabledFieldLook\"\n                      selected={startDate}\n                      onChange={(e) => {\n                        setStartDate(e);\n                        const date = new Date(e.getTime());\n                        date.setFullYear(date.getFullYear() - 1);\n                        date.setMonth(date.getMonth() + 3);\n                        onFilterChange({\n                          id: \"quarter\",\n                          value: date.toLocaleDateString(\"en-CA\"),\n                        });\n                      }}\n                      dateFormat=\"'FY' yyyy-QQQ\"\n                      showQuarterYearPicker\n                    />\n                  </div>\n                </div>\n              </div>\n            )}\n            {[\"plan\", \"compare\"].includes(viewType) && (\n              <div className=\"col-md-3 mb-2\">\n                <div className=\"form-group row\">\n                  <label className=\"col-5\">Duration</label>\n                  <span className=\"col-1 p-0\">:</span>\n                  <span className=\"col-6\">\n                    <select\n                      id=\"duration\"\n                      name=\"duration\"\n                      className=\"col-md-12 col-sm-12 col-xs-12 \"\n                      defaultValue={\"4\"}\n                      value={quarterDuration}\n                      onChange={(e) => {\n                        setQuarterDuration(e.target.value);\n                        onFilterChange({\n                          id: \"duration\",\n                          value: e.target.value,\n                        });\n                      }}\n                    >\n                      <option value=\"1\">1</option>\n                      <option value=\"2\">2</option>\n                      <option value=\"3\">3</option>\n                      <option value=\"4\">4</option>\n                    </select>\n                  </span>\n                </div>\n              </div>\n            )}\n            {[\"view\"].includes(viewType) && (\n              <div className=\"col-md-3 mb-2\">\n                <div className=\"form-group row \">\n                  <label className=\"col-5\" htmlFor=\"email-input\">\n                    From Month\n                    <span className=\"required error-text ml-1\"> *</span>\n                  </label>\n                  <span className=\"col-1 p-0\">:</span>\n                  <div className=\"col-6 datepicker\" style={{ zIndex: 4 }}>\n                    <DatePicker\n                      onChange={(e) => {\n                        // setStartDate(e);\n                        //   const date = new Date(e.getTime());\n                        //   date.setFullYear(date.getFullYear() - 1);\n                        //   date.setMonth(date.getMonth() + 3);\n                        onFilterChange({\n                          id: \"monthsel\",\n                          value:\n                            // date.toLocaleDateString(\"en-CA\")\n                            moment(e).format(\"yyyy-MM-DD\"),\n                        });\n\n                        SetDate(e);\n                      }}\n                      selected={date}\n                      dateFormat=\"MMM-yyyy\"\n                      showMonthYearPicker\n                      onKeyDown={(e) => {\n                        e.preventDefault();\n                      }}\n                    />\n                  </div>\n                </div>\n              </div>\n            )}\n            {[\"view\"].includes(viewType) && (\n              <div className=\"col-md-3 mb-2\">\n                <div className=\"form-group row\">\n                  <label className=\"col-5\">Duration</label>\n                  <span className=\"col-1 p-0\">:</span>\n                  <span className=\"col-6\">\n                    <select\n                      id=\"duration\"\n                      name=\"duration\"\n                      className=\"col-md-12 col-sm-12 col-xs-12 \"\n                      defaultValue={\"6\"}\n                      onChange={(e) => {\n                        setMonthDuration(e.target.value);\n                        onFilterChange({\n                          id: \"duration\",\n                          value: e.target.value,\n                        });\n                      }}\n                      value={monthDuration}\n                    >\n                      <option value=\"1\">1</option>\n                      <option value=\"2\">2</option>\n                      <option value=\"3\">3</option>\n                      <option value=\"4\">4</option>\n                      <option value=\"5\">5</option>\n                      <option value=\"6\">6</option>\n                      <option value=\"7\">7</option>\n                      <option value=\"8\">8</option>\n                      <option value=\"9\">9</option>\n                      <option value=\"10\">10</option>\n                      <option value=\"11\">11</option>\n                      <option value=\"12\">12</option>\n                    </select>\n                  </span>\n                </div>\n              </div>\n            )}\n            <div className=\" col-md-3 mb-2\">\n              <div className=\"form-group row\">\n                <label className=\"col-5\" htmlFor=\"custstatus\">\n                  Cust. Status\n                </label>\n                <span className=\"col-1 p-0\">:</span>\n                <div className=\"col-6\">\n                  <select\n                    id=\"custstatus\"\n                    name=\"custstatus\"\n                    className=\"col-md-12 col-sm-12 col-xs-12 \"\n                    onChange={(e) => {\n                      onFilterChange(e.target);\n\n                    }}\n                    value={servicesPayload.custstatus}\n                  >\n                    <option value=\"-1\"> &lt;&lt;ALL&gt;&gt;</option>\n                    <option value=\"active\">\n                      Having Allocations\n                    </option>\n                    <option value=\"inactive\">No Allocations</option>\n                  </select>\n                </div>\n              </div>\n            </div>\n            <div className=\" col-md-3 mb-2\">\n              <div className=\"form-group row\">\n                <label className=\"col-5\" htmlFor=\"customer\">\n                  Customer{\" \"}\n                </label>\n                <span className=\"col-1 p-0\">:</span>\n                <div className=\"col-6 autoComplete-container react  cancel  reactsearchautocomplete\">\n                  <ReactSearchAutocomplete\n                    items={resource}\n                    type=\"Text\"\n                    name=\"resource\"\n                    id=\"customer\"\n                    className=\"err text cancel nochange\"\n                    fuseOptions={{ keys: [\"id\", \"name\"] }}\n                    resultStringKeyName=\"name\"\n                    placeholder=\"Type minimum 3 characters to get the list\"\n                    resource={resource}\n                    onClear={handleClearCustomer}\n                    resourceFnc={resourceFnc}\n                    onSelect={(e) => {\n                      onFilterChange({\n                        id: \"customerId\",\n                        value: e.id,\n                      });\n                      // setservicesPayload((prevProps) => ({\n                      //   ...prevProps,\n                      //   customerId: e.id,\n                      // }));\n                    }}\n                    showIcon={false}\n                  />\n                </div>\n              </div>\n            </div>\n            {[\"plan\", \"actual\", \"compare\"].includes(viewType) && (\n              <div className=\" col-md-3 mb-2\">\n                <div className=\"form-group row\">\n                  <label className=\"col-5\" htmlFor=\"accountexecutive\">\n                    Account Executive{\" \"}\n                  </label>\n                  <span className=\"col-1 p-0\">:</span>\n                  <div className=\"col-6 autoComplete-container react  cancel  reactsearchautocomplete\">\n                    <ReactSearchAutocomplete\n                      items={resource1}\n                      type=\"Text\"\n                      name=\"resource\"\n                      id=\"accountExecutive\"\n                      className=\"err text cancel nochange\"\n                      fuseOptions={{ keys: [\"id\", \"name\"] }}\n                      resultStringKeyName=\"name\"\n                      placeholder=\"Type minimum 3 characters to get the list\"\n                      resource1={resource1}\n                      onClear={handleClearAccountExecutive}\n                      resourceFnc={resourceFnc}\n                      onSelect={(e) => {\n                        onFilterChange({\n                          id: \"accountExecutiveId\",\n                          value: e.id,\n                        });\n                        // setservicesPayload((prevProps) => ({\n                        //   ...prevProps,\n                        //   accountExecutiveId: e.id,\n                        // }));\n                      }}\n                      showIcon={false}\n                    />\n                  </div>\n                </div>\n              </div>\n            )}\n            <div className=\" col-md-3 mb-2\">\n              <div className=\"form-group row\">\n                <label className=\"col-5\" htmlFor=\"csl\">\n                  CSL\n                </label>\n                <span className=\"col-1 p-0\">:</span>\n                <div className=\"col-6\">\n                  <MultiSelect\n                    ArrowRenderer={ArrowRenderer}\n                    id=\"CslId\"\n                    options={cslList}\n                    hasSelectAll={true}\n                    isLoading={false}\n                    shouldToggleOnHover={false}\n                    disableSearch={false}\n                    value={selectedCsl}\n                    valueRenderer={generateDropdownLabel}\n                    disabled={false}\n                    onChange={(s) => {\n                      setSelectedCsl(s);\n                      let filteredCsl = [];\n                      s.forEach((d) => {\n                        filteredCsl.push(d.value);\n                      });\n                      onFilterChange({\n                        id: \"CslId\",\n                        value: filteredCsl.toString(),\n                      });\n                      setservicesPayload((prevVal) => ({\n                        ...prevVal,\n                        [\"CslId\"]: filteredCsl.toString(),\n                      }));\n                    }}\n                  />\n                </div>\n              </div>\n            </div>\n            {[\"plan\", \"actual\", \"compare\"].includes(viewType) && (\n              <div className=\" col-md-3 mb-2\">\n                <div className=\"form-group row\">\n                  <label className=\"col-5\" htmlFor=\"deliverypartner\">\n                    Delivery Partner\n                  </label>\n                  <span className=\"col-1 p-0\">:</span>\n                  <div className=\"col-6\">\n                    <MultiSelect\n                      ArrowRenderer={ArrowRenderer}\n                      id=\"DpId\"\n                      options={delivery}\n                      hasSelectAll={true}\n                      isLoading={false}\n                      value={selectedDelivery}\n                      valueRenderer={generateDropdownLabel}\n                      shouldToggleOnHover={false}\n                      disableSearch={false}\n                      disabled={false}\n                      onChange={(e) => {\n                        setSelectedDelivery(e);\n                        let filteredCountry = [];\n                        e.forEach((d) => {\n                          filteredCountry.push(d.value);\n                        });\n                        onFilterChange({\n                          id: \"DpId\",\n                          value: filteredCountry.toString(),\n                        });\n                        setservicesPayload((prevVal) => ({\n                          ...prevVal,\n                          [\"DpId\"]: filteredCountry.toString(),\n                        }));\n                      }}\n                    />\n                  </div>\n                </div>\n              </div>\n            )}\n            <div className=\" col-md-3 mb-2\">\n              <div className=\"form-group row\">\n                <label className=\"col-5\" htmlFor=\"engcompany\">\n                  Eng.Company\n                </label>\n                <span className=\"col-1 p-0\">:</span>\n                <div className=\"col-6\">\n                  <MultiSelect\n                    ArrowRenderer={ArrowRenderer}\n                    options={engComp}\n                    hasSelectAll={true}\n                    isLoading={false}\n                    shouldToggleOnHover={false}\n                    disableSearch={false}\n                    value={selectedengComp}\n                    disabled={false}\n                    valueRenderer={generateDropdownLabel}\n                    onChange={(s) => {\n                      setselectedengComp(s);\n                      let selected = s.map((item) => {\n                        return item.value;\n                      });\n                      onFilterChange({\n                        id: \"engComp\",\n                        value: selected.toString(),\n                      });\n                    }}\n                  />\n                </div>\n              </div>\n            </div>\n            <div className='className=\"col-md-12 col-sm-12 col-xs-12 btn-container center my-3'>\n              <button className=\"btn btn-primary \" onClick={handleSaveClick}>\n                <FaSearch /> Search{\" \"}\n              </button>\n            </div>\n          </div>\n        </CCollapse>\n      </div>\n      {loader ? <Loader handleAbort={handleAbort} /> : \"\"}\n      {showtable == true\n        ? // <FixedPriceOpenFirstTable\n        //   formData={formData}\n        // />\n        \"\"\n        : \"\"}\n      {tableData.length > 0 && <FPRViewTable tableData={tableData} />}\n    </div>\n  );\n}\n\nexport default FinancialPlanService;\n","var v1 = require('./v1');\nvar v4 = require('./v4');\n\nvar uuid = v4;\nuuid.v1 = v1;\nuuid.v4 = v4;\n\nmodule.exports = uuid;\n","/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\nvar byteToHex = [];\nfor (var i = 0; i < 256; ++i) {\n  byteToHex[i] = (i + 0x100).toString(16).substr(1);\n}\n\nfunction bytesToUuid(buf, offset) {\n  var i = offset || 0;\n  var bth = byteToHex;\n  // join used to fix memory issue caused by concatenation: https://bugs.chromium.org/p/v8/issues/detail?id=3175#c4\n  return ([\n    bth[buf[i++]], bth[buf[i++]],\n    bth[buf[i++]], bth[buf[i++]], '-',\n    bth[buf[i++]], bth[buf[i++]], '-',\n    bth[buf[i++]], bth[buf[i++]], '-',\n    bth[buf[i++]], bth[buf[i++]], '-',\n    bth[buf[i++]], bth[buf[i++]],\n    bth[buf[i++]], bth[buf[i++]],\n    bth[buf[i++]], bth[buf[i++]]\n  ]).join('');\n}\n\nmodule.exports = bytesToUuid;\n","// Unique ID creation requires a high quality random # generator.  In the\n// browser this is a little complicated due to unknown quality of Math.random()\n// and inconsistent support for the `crypto` API.  We do the best we can via\n// feature-detection\n\n// getRandomValues needs to be invoked in a context where \"this\" is a Crypto\n// implementation. Also, find the complete implementation of crypto on IE11.\nvar getRandomValues = (typeof(crypto) != 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto)) ||\n                      (typeof(msCrypto) != 'undefined' && typeof window.msCrypto.getRandomValues == 'function' && msCrypto.getRandomValues.bind(msCrypto));\n\nif (getRandomValues) {\n  // WHATWG crypto RNG - http://wiki.whatwg.org/wiki/Crypto\n  var rnds8 = new Uint8Array(16); // eslint-disable-line no-undef\n\n  module.exports = function whatwgRNG() {\n    getRandomValues(rnds8);\n    return rnds8;\n  };\n} else {\n  // Math.random()-based (RNG)\n  //\n  // If all else fails, use Math.random().  It's fast, but is of unspecified\n  // quality.\n  var rnds = new Array(16);\n\n  module.exports = function mathRNG() {\n    for (var i = 0, r; i < 16; i++) {\n      if ((i & 0x03) === 0) r = Math.random() * 0x100000000;\n      rnds[i] = r >>> ((i & 0x03) << 3) & 0xff;\n    }\n\n    return rnds;\n  };\n}\n","var rng = require('./lib/rng');\nvar bytesToUuid = require('./lib/bytesToUuid');\n\n// **`v1()` - Generate time-based UUID**\n//\n// Inspired by https://github.com/LiosK/UUID.js\n// and http://docs.python.org/library/uuid.html\n\nvar _nodeId;\nvar _clockseq;\n\n// Previous uuid creation time\nvar _lastMSecs = 0;\nvar _lastNSecs = 0;\n\n// See https://github.com/uuidjs/uuid for API details\nfunction v1(options, buf, offset) {\n  var i = buf && offset || 0;\n  var b = buf || [];\n\n  options = options || {};\n  var node = options.node || _nodeId;\n  var clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq;\n\n  // node and clockseq need to be initialized to random values if they're not\n  // specified.  We do this lazily to minimize issues related to insufficient\n  // system entropy.  See #189\n  if (node == null || clockseq == null) {\n    var seedBytes = rng();\n    if (node == null) {\n      // Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)\n      node = _nodeId = [\n        seedBytes[0] | 0x01,\n        seedBytes[1], seedBytes[2], seedBytes[3], seedBytes[4], seedBytes[5]\n      ];\n    }\n    if (clockseq == null) {\n      // Per 4.2.2, randomize (14 bit) clockseq\n      clockseq = _clockseq = (seedBytes[6] << 8 | seedBytes[7]) & 0x3fff;\n    }\n  }\n\n  // UUID timestamps are 100 nano-second units since the Gregorian epoch,\n  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so\n  // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'\n  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.\n  var msecs = options.msecs !== undefined ? options.msecs : new Date().getTime();\n\n  // Per 4.2.1.2, use count of uuid's generated during the current clock\n  // cycle to simulate higher resolution clock\n  var nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1;\n\n  // Time since last uuid creation (in msecs)\n  var dt = (msecs - _lastMSecs) + (nsecs - _lastNSecs)/10000;\n\n  // Per 4.2.1.2, Bump clockseq on clock regression\n  if (dt < 0 && options.clockseq === undefined) {\n    clockseq = clockseq + 1 & 0x3fff;\n  }\n\n  // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new\n  // time interval\n  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {\n    nsecs = 0;\n  }\n\n  // Per 4.2.1.2 Throw error if too many uuids are requested\n  if (nsecs >= 10000) {\n    throw new Error('uuid.v1(): Can\\'t create more than 10M uuids/sec');\n  }\n\n  _lastMSecs = msecs;\n  _lastNSecs = nsecs;\n  _clockseq = clockseq;\n\n  // Per 4.1.4 - Convert from unix epoch to Gregorian epoch\n  msecs += 12219292800000;\n\n  // `time_low`\n  var tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\n  b[i++] = tl >>> 24 & 0xff;\n  b[i++] = tl >>> 16 & 0xff;\n  b[i++] = tl >>> 8 & 0xff;\n  b[i++] = tl & 0xff;\n\n  // `time_mid`\n  var tmh = (msecs / 0x100000000 * 10000) & 0xfffffff;\n  b[i++] = tmh >>> 8 & 0xff;\n  b[i++] = tmh & 0xff;\n\n  // `time_high_and_version`\n  b[i++] = tmh >>> 24 & 0xf | 0x10; // include version\n  b[i++] = tmh >>> 16 & 0xff;\n\n  // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)\n  b[i++] = clockseq >>> 8 | 0x80;\n\n  // `clock_seq_low`\n  b[i++] = clockseq & 0xff;\n\n  // `node`\n  for (var n = 0; n < 6; ++n) {\n    b[i + n] = node[n];\n  }\n\n  return buf ? buf : bytesToUuid(b);\n}\n\nmodule.exports = v1;\n","var rng = require('./lib/rng');\nvar bytesToUuid = require('./lib/bytesToUuid');\n\nfunction v4(options, buf, offset) {\n  var i = buf && offset || 0;\n\n  if (typeof(options) == 'string') {\n    buf = options === 'binary' ? new Array(16) : null;\n    options = null;\n  }\n  options = options || {};\n\n  var rnds = options.random || (options.rng || rng)();\n\n  // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n  rnds[6] = (rnds[6] & 0x0f) | 0x40;\n  rnds[8] = (rnds[8] & 0x3f) | 0x80;\n\n  // Copy bytes to buffer, if provided\n  if (buf) {\n    for (var ii = 0; ii < 16; ++ii) {\n      buf[i + ii] = rnds[ii];\n    }\n  }\n\n  return buf || bytesToUuid(rnds);\n}\n\nmodule.exports = v4;\n"],"names":["FPRViewTable","props","tableData","environment","useState","data","setData","dataPR","setDataPR","columns","setColumns","rows","setRows","columnsPR","setColumnsPR","rowsPR","setRowsPR","showPRFlag","setShowPRFlag","useEffect","console","log","defineColumns","defineRows","defineColumnsPR","defineRowsPR","columnsObject","updatedColumnsPR","Object","entries","forEach","prop","value","newObject","id","uuidv4","header","accessorKey","push","updatedRowsPR","slice","numberWithCommas","x","number","String","includes","num","Number","final","toFixed","split","replace","join","getAccountPlanRevenue","postData","axios","method","url","then","response","headersObj","find","obj","subHeaderObj","myHeaderMap","Map","key","toString","myKeyArray","myKey","myValue","length","pop","set","updatedColumns","index","headerColumns","keys","filter","k","rowData","mainRows","lvl","mainRowChildren","row","filteredRows","CSLPartnerId","levelTwoRows","levelThreeRows","levelFourRows","map","children","parentAttr","keyAttr","link","onClick","className","enableExpanding","enablePagination","enableBottomToolbar","enableColumnFilterModes","enableDensityToggle","enableColumnActions","enableFilters","enableSorting","enableFullScreenToggle","enableHiding","filterFromLeafRows","initialState","expanded","density","enablePinning","localization","noRecordsToDisplay","style","fontWeight","date","Date","setFullYear","getFullYear","setMonth","getMonth","startDate","setStartDate","visible","setVisible","FaChevronCircleUp","cheveronIcon","setCheveronIcon","baseUrl","loggedUserId","localStorage","getItem","routes","setRoutes","Classifications","label","selectedcountry","setselectedcountry","selectedClassifications","setSelectedClassifications","selectedCsl","setSelectedCsl","selectedDelivery","setSelectedDelivery","viewType","setViewType","quarterDuration","setQuarterDuration","monthDuration","setMonthDuration","country","setcountry","cslList","setCslList","delivery","setDelivery","engComp","setengComp","resource","setResource","resource1","setResource1","selectedengComp","setselectedengComp","setDropCslId","setDpIds","SetDate","loader","setLoader","abortController","useRef","viewtype","Classification","countries","quarter","moment","now","Math","floor","toLocaleDateString","defaultDate","format","duration","monthsel","custstatus","customerId","accountExecutiveId","CslId","DpId","cpId","epId","isExport","isCSL","isLimitedAccess","cslResId","servicesPayload","setservicesPayload","setTableData","ArrowRenderer","onFilterChange","prevState","financeHandleClick","FaChevronCircleDown","getMenus","getcountryDropdown","getengCompanyDropdown","handleCsl","getDeliveryPartners","resourceFnc","resp","dropdownOptions","item","country_name","countryList","d","prevVal","classification","prev","company_name","Response","departments","deptIds","PersonName","e","countryObj","formattedString","deliver","deliveryId","deliverObj","formattedDelIds","res","manger","display_name","generateDropdownLabel","selectedOptions","allOptions","selectedValues","option","allValues","ScreenBreadcrumbs","currentScreenName","GlobalHelp","pdfname","name","htmlFor","onChange","target","color","options","hasSelectAll","isLoading","shouldToggleOnHover","disableSearch","disabled","valueRenderer","s","selected","getTime","dateFormat","showQuarterYearPicker","defaultValue","zIndex","showMonthYearPicker","onKeyDown","preventDefault","ReactSearchAutocomplete","items","type","fuseOptions","resultStringKeyName","placeholder","onClear","prevProps","onSelect","showIcon","filteredCsl","filteredCountry","classificationIds","countryIds","month","status","customer","aeId","dpId","monthpick","Loader","handleAbort","current","abort","v1","require","v4","uuid","module","exports","byteToHex","i","substr","buf","offset","bth","getRandomValues","crypto","bind","msCrypto","window","rnds8","Uint8Array","rnds","Array","r","random","_nodeId","_clockseq","rng","bytesToUuid","_lastMSecs","_lastNSecs","b","node","clockseq","undefined","seedBytes","msecs","nsecs","dt","Error","tl","tmh","n","ii"],"sourceRoot":""}