{"version":3,"file":"static/js/3586.5e647933.chunk.js","mappings":"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","sources":["views/Customer/EngagementAllocations.js","views/PrimeReactTableComponent/MaterialReactCollapisbleTable.js"],"sourcesContent":["import React, { useRef, useState, useEffect } from \"react\";\nimport { MultiSelect } from \"react-multi-select-component\";\nimport DatePicker from \"react-datepicker\";\nimport {\n  FaCaretDown,\n  FaChevronCircleDown,\n  FaChevronCircleUp,\n  FaSearch,\n} from \"react-icons/fa\";\nimport { CCollapse } from \"@coreui/react\";\nimport moment from \"moment\";\nimport axios from \"axios\";\nimport { environment } from \"../../environments/environment\";\nimport Loader from \"../Loader/Loader\";\nimport { AiFillWarning } from \"react-icons/ai\";\nimport GlobalValidation from \"../ValidationComponent/GlobalValidation\";\nimport MaterialReactCollapisbleTable from \"../PrimeReactTableComponent/MaterialReactCollapisbleTable\";\nimport { RiFileExcel2Line } from \"react-icons/ri\";\nimport { BsInfoCircle } from \"react-icons/bs\";\nimport ScreenBreadcrumbs from \"../Common/ScreenBreadcrumbs\";\nimport ExcelJS from \"exceljs\";\n\nfunction EngagementAllocations() {\n  const baseUrl = environment.baseUrl;\n  const [visible, setVisible] = useState(false);\n  const [cheveronIcon, setCheveronIcon] = useState(FaChevronCircleUp);\n  const [selectedBusiness, setSelectedBusiness] = useState([]);\n  const [business, setBusiness] = useState([]);\n  const [customer, setCustomer] = useState([]);\n  const [details, setDetails] = useState([]);\n  const [validationmessage, setValidationMessage] = useState(false);\n  const [columns, setColumns] = useState([]);\n  const [loader, setLoader] = useState(false);\n  const [search, setSearch] = useState(false);\n  const [dataAccess, setDataAccess] = useState([]);\n  const [data2, setData2] = useState([]);\n  const [accessdata, setAccessdata] = useState([]);\n  const loggedUserId = localStorage.getItem(\"resId\");\n  const [tableVisible, setTableVisible] = useState(false);\n  console.log(loader, \"loader\");\n  console.log(tableVisible, \"tableVisible\");\n  const ref = useRef([]);\n  let flag = 1;\n  const abortController = useRef(null);\n\n  const filterMondays = (date) => {\n    return date.getDay() === 1;\n  };\n\n  const getCurrentMonday = () => {\n    const now = new Date();\n    const dayOfWeek = now.getDay();\n    const diff = now.getDate() - dayOfWeek + (dayOfWeek === 0 ? -6 : 1);\n    return new Date(now.setDate(diff));\n  };\n  const defaultDate = getCurrentMonday();\n\n  const [selectedDate, setSelectedDate] = useState(defaultDate);\n  const initialValue = {\n    businessUnit: \"-1\",\n    customer: \"\",\n    StartDt: moment(selectedDate).format(\"yyyy-MM-DD\"),\n    duration: \"1\",\n    isExport: \"0\",\n  };\n\n  const [state, setState] = useState(initialValue);\n  const [tableData, setTableData] = useState([]);\n\n  const ArrowRenderer = ({ expanded }) => (\n    <>\n      {expanded ? (\n        <FaCaretDown className=\"chevronIcon\" />\n      ) : (\n        <FaCaretDown className=\"chevronIcon\" />\n      )}\n    </>\n  );\n\n  const getBusinessUnit = () => {\n    axios.get(baseUrl + `/CostMS/cost/getDepartments`).then((Response) => {\n      let countries = [];\n      let data = Response.data;\n      data.length > 0 &&\n        data.forEach((e) => {\n          let countryObj = {\n            label: e.label,\n            value: e.value,\n          };\n          countries.push(countryObj);\n        });\n      setBusiness(countries);\n      setSelectedBusiness(countries);\n    });\n  };\n\n  const dropdown = document.getElementById(\"customer\");\n  if (dropdown) {\n    const handleChange = () => {\n      const selectedOption = dropdown.options[dropdown.selectedIndex];\n      if (selectedOption) {\n        const selectedOptionTitle = selectedOption.getAttribute(\"title\");\n        dropdown.setAttribute(\"title\", selectedOptionTitle);\n      } else {\n        dropdown.removeAttribute(\"title\");\n      }\n    };\n\n    dropdown.addEventListener(\"change\", handleChange);\n  }\n\n  const getTableData = () => {\n    let valid = GlobalValidation(ref);\n    if (valid) {\n      {\n        setValidationMessage(true);\n      }\n      return;\n    }\n    if (valid) {\n      return;\n    }\n    setLoader(false);\n    setSearch(true);\n    setTableVisible(false);\n    abortController.current = new AbortController();\n\n    axios({\n      method: \"post\",\n      url:\n        baseUrl +\n        `/administrationms/engagementallocation/getengagementallocationtable?bu=${state.businessUnit}&customerId=${state.customer}&fromWeek=${state.StartDt}&dur=${state.duration}&isExport=0&userId=${loggedUserId}`,\n      signal: abortController.current.signal,\n    }).then((res) => {\n      let detail = res.data.tableData;\n      let cols = res.data.columns?.replaceAll(\"'\", \"\").split(\",\");\n      setDetails(detail);\n      setTableData(res.data);\n      setColumns(cols);\n      setLoader(false);\n      setTableVisible(true);\n      setValidationMessage(false);\n\n      !valid && setVisible(!visible);\n      visible\n        ? setCheveronIcon(FaChevronCircleUp)\n        : setCheveronIcon(FaChevronCircleDown);\n    });\n  };\n\n  const [routes, setRoutes] = useState([]);\n  let textContent = \"Delivery\";\n  let currentScreenName = [\"Engagement Allocations\"];\n\n  const getMenus = () => {\n    axios\n      .get(baseUrl + `/CommonMS/master/getMenus?loggedUserId=${loggedUserId}`)\n      .then((resp) => {\n        const getData = resp.data;\n        setData2(getData);\n\n        const filteredItems = getData.filter((item) => {\n          if (item.subMenus) {\n            return item.subMenus.some(\n              (subItem) => subItem.display_name === \"Engagement Allocations\"\n            );\n          }\n          return false;\n        });\n        getData.forEach((item) => {\n          if (item.display_name === textContent) {\n            setRoutes([item]);\n          }\n        });\n\n        const engagementAllocationSubMenu = getData\n          .find((item) => item.display_name === \"Delivery\")\n          .subMenus.find(\n            (subMenu) => subMenu.display_name === \"Engagement Allocations\"\n          );\n\n        setAccessdata(engagementAllocationSubMenu.access_level);\n        // Extract the access_level value\n        const accessLevel = engagementAllocationSubMenu\n          ? engagementAllocationSubMenu.userRoles.includes(\"690\")\n            ? 690\n            : engagementAllocationSubMenu.userRoles.includes(\"641\")\n              ? 641\n              : engagementAllocationSubMenu.userRoles.includes(\"46\")\n                ? 46\n                : engagementAllocationSubMenu.userRoles.includes(\"930\") && 930\n          : null;\n\n        setDataAccess(accessLevel);\n      });\n  };\n\n  useEffect(() => {\n    getBusinessUnit();\n    getMenus();\n    handleCustomer();\n  }, []);\n\n  const handleCustomer = () => {\n    axios\n      .get(\n        dataAccess == 641 || dataAccess == 690 || dataAccess == 930\n          ? baseUrl +\n          `/dashboardsms/allocationDashboard/getCustomers?loggedUserId=${loggedUserId}`\n          : flag == 1 && dataAccess == 46\n            ? baseUrl +\n            `/CommonMS/master/getPMCustomers?loggedUserId=${loggedUserId}`\n            : baseUrl + `/customersms/Customers/getCustomers`\n      )\n      .then((res) => {\n        let custom = res.data;\n        const filteredData = custom.filter((item) => item.id !== 81084541);\n        setCustomer(filteredData);\n      });\n  };\n  useEffect(() => {\n    if (\n      dataAccess == 641 ||\n      dataAccess == 690 ||\n      dataAccess == 930 ||\n      dataAccess == 46\n    ) {\n      handleCustomer();\n    }\n  }, [dataAccess]);\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setState((prev) => {\n      return { ...prev, [name]: value };\n    });\n  };\n\n  const handleAbort = () => {\n    abortController.current && abortController.current.abort();\n    setLoader(false);\n  };\n\n  const exportExcel = () => {\n    let desiredColumnOrder = [];\n\n    let cols = columns.join(\",\");\n    desiredColumnOrder = cols.split(\",\");\n    const wantedValues = details.map((item) => {\n      const obj = {};\n      desiredColumnOrder.forEach((col) => {\n        const value = item[col];\n        if (typeof value === \"string\") {\n          const [extractedValue, ,] = value.split(\"^&\");\n          obj[col] = extractedValue;\n        } else {\n          obj[col] = value;\n        }\n      });\n      return obj;\n    });\n\n    const rows = wantedValues.map((item) => {\n      const row = [];\n      desiredColumnOrder.forEach((col) => {\n        row.push(item[col]);\n      });\n\n      return row;\n    });\n    const workbook = new ExcelJS.Workbook();\n    const worksheet = workbook.addWorksheet(\"Engagement Dashboard\");\n    wantedValues.forEach((item) => {\n      const row = worksheet.addRow(Object.values(item));\n    });\n\n    const boldRow = [1];\n    boldRow.forEach((index) => {\n      const row = worksheet.getRow(index);\n      row.font = { bold: true };\n    });\n    workbook.xlsx.writeBuffer().then((buffer) => {\n      saveAs(new Blob([buffer]), \"Engagement Dashboard.xlsx\");\n    });\n  };\n\n  const CustomDatePickerInput = ({ value, onClick }) => {\n    const restrictedPlaceholder = \"\";\n\n    return (\n      <input\n        type=\"text\"\n        className=\"\"\n        value={value}\n        placeholder={restrictedPlaceholder}\n        readOnly\n        onClick={onClick}\n      />\n    );\n  };\n\n  const generateDropdownLabel = (selectedOptions, allOptions) => {\n    const selectedValues = selectedOptions.map((option) => option.value);\n    const allValues = allOptions.map((item) => item.value);\n\n    if (selectedValues.length === allValues.length) {\n      return \"<< ALL >>\";\n    } else {\n      return selectedOptions.map((option) => option.label).join(\", \");\n    }\n  };\n\n  return (\n    <div>\n      {validationmessage ? (\n        <div className=\"statusMsg error\">\n          {\" \"}\n          <AiFillWarning /> Please select valid values for highlighted fields\n        </div>\n      ) : (\n        \"\"\n      )}\n      <div className=\"col-md-12\">\n        <div className=\"pageTitle\">\n          <div className=\"childOne\"></div>\n          <div className=\"childTwo\">\n            <h2>Engagement Allocations</h2>\n          </div>\n          <div className=\"childThree\"></div>\n        </div>\n      </div>\n      <ScreenBreadcrumbs\n        routes={routes}\n        currentScreenName={currentScreenName}\n      />\n\n      <div className=\"group mb-3 customCard \">\n        <div className=\"col-md-12 collapseHeader\">\n          <h2>Search Filters</h2>\n          <div\n            onClick={() => {\n              setVisible(!visible);\n              visible\n                ? setCheveronIcon(FaChevronCircleUp)\n                : setCheveronIcon(FaChevronCircleDown);\n            }}\n          >\n            <span>{cheveronIcon}</span>\n          </div>\n        </div>\n\n        <CCollapse visible={!visible}>\n          <div className=\"group-content row\">\n            <div className=\" col-md-3 mb-2\">\n              <div className=\"form-group row\">\n                <label className=\"col-5\" htmlFor=\"businessunit\">\n                  Business Unit&nbsp;\n                  <span className=\"error-text\"> *</span>\n                </label>\n                <span className=\"col-1 p-0\">:</span>\n                <div\n                  className=\"col-6 multiselect\"\n                  ref={(ele) => {\n                    ref.current[0] = ele;\n                  }}\n                >\n                  <MultiSelect\n                    ArrowRenderer={ArrowRenderer}\n                    id=\"businessUnit\"\n                    options={business}\n                    // hasSelectAll={true}\n                    value={selectedBusiness}\n                    disabled={false}\n                    valueRenderer={generateDropdownLabel}\n                    onChange={(e) => {\n                      setSelectedBusiness(e);\n                      let filteredCountry = [];\n                      e.forEach((d) => {\n                        filteredCountry.push(d.value);\n                      });\n                      setState((prevVal) => ({\n                        ...prevVal,\n                        [\"businessUnit\"]: filteredCountry.toString(),\n                      }));\n                    }}\n                  />\n                </div>\n              </div>\n            </div>\n            <div className=\" col-md-3 mb-2\">\n              <div className=\"form-group row\">\n                <label className=\"col-5\" htmlFor=\"customers \">\n                  Customers&nbsp;\n                  <span className=\"error-text\">*</span>\n                </label>\n                <span className=\"col-1 p-0\">:</span>\n                <div className=\"col-6\">\n                  <select\n                    ref={(ele) => {\n                      ref.current[1] = ele;\n                    }}\n                    className=\"cancel text ellipsis title\"\n                    name=\"customer\"\n                    id=\"customer\"\n                    onChange={handleChange}\n                  >\n                    <option value=\"\"> &lt;&lt;Please Select&gt;&gt;</option>\n                    {customer?.map((Item, index) => (\n                      <option\n                        key={index}\n                        value={Item.id}\n                        title={Item.full_name}\n                      >\n                        {Item.name}\n                      </option>\n                    ))}\n                  </select>\n                </div>\n              </div>\n            </div>\n            <div className=\"col-md-3 mb-2 \">\n              <div className=\"form-group row \">\n                <label className=\"col-5\" htmlFor=\"StartDt\">\n                  Start Week&nbsp;<span className=\"error-text\">*</span>\n                </label>\n                <span className=\"col-1 p-0\">:</span>\n                <div className=\"col-6\">\n                  <div style={{ position: \"relative\", zIndex: \"999\" }}>\n                    <DatePicker\n                      selected={selectedDate}\n                      showMonthDropdown\n                      showYearDropdown\n                      onChange={(date) => {\n                        setState((prev) => ({\n                          ...prev,\n                          [\"StartDt\"]: moment(date).format(\"yyyy-MM-DD\"),\n                        }));\n                        setSelectedDate(date);\n                      }}\n                      filterDate={filterMondays}\n                      dateFormat=\"dd-MMM-yyyy\"\n                      dropdownMode=\"select\"\n                      customInput={<CustomDatePickerInput />}\n                    />\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            <div className=\" col-md-3 mb-3\">\n              <div className=\"form-group row\">\n                <label className=\"col-5\" htmlFor=\"duration\">\n                  Duration&nbsp;\n                  <span className=\"error-text\">*</span>\n                </label>\n                <span className=\"col-1 p-0\">:</span>\n                <div className=\"col-6\">\n                  <select name=\"duration\" id=\"duration\" onChange={handleChange}>\n                    <option value=\"1\">1</option>\n                    <option value=\"2\">2</option>\n                    <option value=\"3\">3</option>\n                    <option value=\"4\">4</option>\n                    <option value=\"5\">5</option>\n                    <option value=\"6\">6</option>\n                    <option value=\"7\">7</option>\n                    <option value=\"8\">8</option>\n                    <option value=\"9\">9</option>\n                    <option value=\"10\">10</option>\n                    <option value=\"11\">11</option>\n                    <option value=\"12\">12</option>\n                  </select>\n                </div>\n              </div>\n            </div>\n            <div className=\"col-md-12 col-sm-12 col-xs-12 btn-container center\">\n              <button\n                type=\"submit\"\n                className=\"btn btn-primary\"\n                onClick={getTableData}\n              >\n                <FaSearch /> Search{\" \"}\n              </button>\n            </div>\n          </div>\n        </CCollapse>\n        {loader ? <Loader handleAbort={handleAbort} /> : \"\"}\n      </div>\n\n      {search === true ? (\n        <div className=\"col-md-12 clearfix\" style={{ height: \"5px\" }}>\n          <div>\n            <span>\n              <span style={{ color: \"#9d7c42\", fontStyle: \"italic\" }}>\n                <BsInfoCircle style={{ marginTop: \"-5px\" }} /> All numbers are\n                in hours\n              </span>\n            </span>\n          </div>\n        </div>\n      ) : (\n        \"\"\n      )}\n      {search === true ? (\n        <div className=\"mb-2\" align=\" right \">\n          <RiFileExcel2Line\n            size=\"1.5em\"\n            title=\"Export to Excel\"\n            style={{ color: \"green\" }}\n            cursor=\"pointer\"\n            onClick={exportExcel}\n          />\n        </div>\n      ) : (\n        \"\"\n      )}\n      <div className=\"col-md-12 \">\n        {loader == false && tableVisible == true ? (\n          <MaterialReactCollapisbleTable\n            data={tableData}\n            expandedCols={[\n              \"engStatus\",\n              \"prjStatus\",\n              \"prjStartDt\",\n              \"prjEndDt\",\n              \"roleName\",\n              \"roleStDt\",\n              \"roleEdDt\",\n              \"prjMgr\",\n            ]}\n            colExpandState={[\"0\", \"0\", \"name\"]}\n          />\n        ) : (\n          \"\"\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default EngagementAllocations;\n","import React, { useState, useEffect } from \"react\";\nimport MaterialReactTable from \"material-react-table\";\nimport { IconButton } from \"@mui/material\";\nimport fte_active from \"../../assets/images/empstatusIcon/fte_active.png\";\nimport fte_inactive from \"../../assets/images/empstatusIcon/fte_inactive.png\";\nimport fte_notice from \"../../assets/images/empstatusIcon/fte_notice.png\";\nimport subk_active from \"../../assets/images/empstatusIcon/subk_active.png\";\nimport subk_inactive from \"../../assets/images/empstatusIcon/subk_inactive.png\";\nimport subk_notice from \"../../assets/images/empstatusIcon/subk_notice.png\";\nimport \"./EngagementAllocationsTable.scss\";\nimport { BiChevronLeft, BiChevronRight } from \"react-icons/bi\";\n\nexport default function MaterialReactCollapisbleTable(props) {\n  const icons = {\n    fte0: (\n      <img\n        src={fte_inactive}\n        alt=\"(fte_inactive_icon)\"\n        style={{ height: \"12px\", float: \"left\" }}\n        title=\"Ex-Employee\"\n      />\n    ),\n    fte1: (\n      <img\n        src={fte_active}\n        alt=\"(fte_active_icon)\"\n        style={{ height: \"12px\", float: \"left\" }}\n        title=\"Active Employee\"\n      />\n    ),\n    fte2: (\n      <img\n        src={fte_notice}\n        alt=\"(fte_notice_icon)\"\n        style={{ height: \"12px\", float: \"left\" }}\n        title=\"Employee in notice period\"\n      />\n    ),\n    subk0: (\n      <img\n        src={subk_inactive}\n        alt=\"(subk_inactive_icon)\"\n        style={{ height: \"12px\", float: \"left\" }}\n        title=\"Ex-Contractor\"\n      />\n    ),\n    subk1: (\n      <img\n        src={subk_active}\n        alt=\"(subk_active_icon)\"\n        style={{ height: \"12px\", width: \"auto\", float: \"left\" }}\n        title=\"Active Contractor\"\n        size=\"1em\"\n      />\n    ),\n    subk2: (\n      <img\n        src={subk_notice}\n        alt=\"(subk_notice_icon)\"\n        style={{ height: \"12px\", float: \"left\" }}\n        title=\"Contractor in notice period\"\n      />\n    ),\n  };\n\n  const { data, expandedCols, colExpandState } = props;\n\n  const [nodes, setNodes] = useState([]);\n  const [columns, setColumns] = useState(null);\n  const [hiddenColumns, setHiddenColumns] = useState({});\n  const [colExpFlag, setColumnExpFlag] = useState(false);\n  const [headers, setHeaders] = useState([]);\n\n  const numberWithCommas = (x) => {\n    var number = String(x);\n    if (number.includes(\".\")) {\n      var decimalNumbers = number;\n      var num = Number(decimalNumbers);\n      let FdN =\n        num != null &&\n        num.toLocaleString(\"en-US\", {\n          minimumFractionDigits: 2,\n          maximumFractionDigits: 20,\n        });\n      let final = FdN.split(\".\");\n      final[0] = final[0].replace(/(?<=\\d)(?=(\\d{3})+(?!\\d|\\.))/g, \",\");\n      return final.join(\".\");\n    } else {\n      return (\n        number != null &&\n        parseFloat(number)\n          .toLocaleString(\"en-US\", {\n            minimumFractionDigits: 2,\n            maximumFractionDigits: 20,\n          })\n          .replace(/(?<=\\d)(?=(\\d{3})+(?!\\d|\\.))/g, \",\")\n      );\n    }\n  };\n\n  useEffect(() => {\n    getData();\n  }, [data]);\n  var count = 0;\n\n  const getData = () => {\n    let expandClass = \"\";\n    if (colExpFlag == true && count > 0) {\n      expandClass = \"expanded\";\n    } else {\n      expandClass = \"\";\n    }\n    let tableData = data.tableData;\n    let columns = null;\n\n    if (data?.columns?.includes(\"'\")) {\n      columns = data?.columns?.replaceAll(\"'\", \"\");\n    } else {\n      columns = data?.columns;\n    }\n\n    let colArr = columns?.split(\",\");\n\n    let newHeaders = [];\n    let hiddenHeaders = [];\n\n    const obj = {};\n\n    for (let i = 0; i < colArr?.length; i++) {\n      let colVal = colArr[i].trim();\n\n      let firstData = tableData[0];\n      obj[colVal] = firstData[colVal];\n    }\n\n    let headerArray = Object.entries(obj);\n\n    let filteredHeaders = headerArray.filter(\n      ([key, value]) => typeof value === \"string\" && value.includes(\"^&\")\n    );\n\n    setHeaders(filteredHeaders);\n\n    filteredHeaders.map(([key, value]) => {\n      if (expandedCols.includes(key)) {\n        hiddenHeaders.push({ [key]: false });\n      }\n    });\n\n    setHiddenColumns(Object.assign({}, ...hiddenHeaders));\n\n    filteredHeaders.map(([key, value], index) => {\n      newHeaders.push({\n        accessorKey: key,\n        header: value.split(\"^&\")[0],\n        enableColumnActions: false,\n        enableHiding: true,\n        Header: ({ column }) => (\n          <div>\n            {value.split(\"^&\")[0]}{\" \"}\n            {key == colExpandState[2] ? (\n              <IconButton\n                className=\"expandIcon\"\n                title=\"Show Details\"\n                onClick={() => {\n                  setColumnExpFlag((prev) => !prev);\n                }}\n              >\n                {colExpFlag ? <BiChevronLeft /> : <BiChevronRight />}\n              </IconButton>\n            ) : (\n              \"\"\n            )}\n          </div>\n        ),\n        Cell: ({ cell }) => {\n          return (\n            <div\n              style={{\n                whiteSpace: \"nowrap\",\n                overflow: \"hidden\",\n                textOverflow: \"ellipsis\",\n              }}\n              title={cell.getValue()}\n              className={\n                key.includes(\"_\")\n                  ? key.split(\"_\")[1] % 2 == 0\n                    ? \"\"\n                    : \"odd\"\n                  : key.includes(\"total\")\n                  ? \"total\"\n                  : (key == \"roleName\" || key == \"prjMgr\") && \"projManager\"\n              }\n            >\n              {cell.column.id == \"name\" &&\n              cell.row.original.parentId != null ? (\n                <span className=\"rescolor\">\n                  {icons[cell.row.original[\"empStatus\"]]}\n                  &nbsp;{cell.getValue()}\n                </span>\n              ) : key.includes(\"_\") && key.split(\"_\")[2] ? (\n                numberWithCommas(cell.getValue())\n              ) : key.includes(\"total\") ? (\n                numberWithCommas(cell.getValue())\n              ) : (\n                cell.getValue()\n              )}\n            </div>\n          );\n        },\n      });\n    });\n\n    setColumns(newHeaders);\n    let values = [];\n    tableData?.map((d, i) => (i > 0 && d.id != -1 ? values.push(d) : \"\"));\n    setNodes(jsonToTree(values, { children: \"subRows\" }));\n  };\n\n  // useEffect(() => {\n  //   getData();\n  //   colExpFlag ? setHiddenColumns({}) : colCollapse();\n  // }, [colExpFlag]);\n\n  const expandF = () => {\n    getData();\n  };\n\n  const expandT = () => {\n    count++;\n    getData();\n    setHiddenColumns({});\n  };\n\n  useEffect(() => {\n    colExpFlag ? expandT() : expandF();\n    // getData();\n  }, [colExpFlag]);\n\n  const colCollapse = () => {\n    let hiddenHeaders = [];\n    headers.map(([key, value]) => {\n      if (expandedCols.includes(key)) {\n        hiddenHeaders.push({ [key]: false });\n      }\n    });\n\n    setHiddenColumns(Object.assign({}, ...hiddenHeaders));\n  };\n\n  const jsonToTree = (flatArray, options) => {\n    options = {\n      id: \"uniqueId\",\n      parentId: \"parentId\",\n      children: \"subRows\",\n      ...options,\n    };\n    const dictionary = {};\n    const tree = [];\n    const children = options.children;\n    flatArray.forEach((node) => {\n      const nodeId = node[options.id];\n      const nodeParentId = node[options.parentId];\n      dictionary[nodeId] = {\n        [children]: [],\n        ...node,\n        ...dictionary[nodeId],\n      };\n      dictionary[nodeParentId] = dictionary[nodeParentId] || { [children]: [] };\n      dictionary[nodeParentId][children].push(dictionary[nodeId]);\n    });\n    Object.values(dictionary).forEach((obj) => {\n      if (typeof obj[options.id] === \"undefined\") {\n        tree.push(...obj[children]);\n      }\n    });\n    return tree;\n  };\n\n  return (\n    <div className=\"materialReactExpandableTable engagementAllocationsTable darkHeader\">\n      {columns?.length ? (\n        <MaterialReactTable\n          columns={columns}\n          data={nodes}\n          enableExpandAll={true}\n          enableExpanding\n          enablePagination={false}\n          enableBottomToolbar={false}\n          enableTopToolbar={false}\n          enableColumnActions={false}\n          enableSorting={false}\n          filterFromLeafRows\n          initialState={{\n            expanded: false,\n            density: \"compact\",\n            columnVisibility: { ...hiddenColumns },\n            columnPinning: { right: [\"total\"] },\n          }}\n          state={{ columnVisibility: { ...hiddenColumns } }}\n          defaultColumn={{ minSize: 40, maxSize: 1000, size: 40 }}\n          enableStickyHeader\n          muiTableContainerProps={{\n            sx: {\n              maxHeight: \"70vh\",\n              width: \"auto\",\n              maxWidth: \"fit-content\",\n            },\n          }}\n          muiTableBodyProps={{\n            sx: {\n              \"&\": {},\n              \"& td\": {\n                borderRight: \"1px solid #ccc\",\n                height: \"22px\",\n                fontSize: \"11px\",\n                paddingTop: \"0px\",\n                paddingBottom: \"0px\",\n              },\n            },\n          }}\n          muiTableHeadProps={{\n            sx: {\n              \"& th\": {\n                borderTop: \"1px solid #ccc\",\n                borderRight: \"1px solid #ccc\",\n                background: \"#f4f4f4 \",\n                fontSize: \"13px\",\n                padding: \"0px 8px\",\n              },\n            },\n          }}\n        ></MaterialReactTable>\n      ) : null}\n    </div>\n  );\n}\n"],"names":["baseUrl","environment","useState","visible","setVisible","FaChevronCircleUp","cheveronIcon","setCheveronIcon","selectedBusiness","setSelectedBusiness","business","setBusiness","customer","setCustomer","details","setDetails","validationmessage","setValidationMessage","columns","setColumns","loader","setLoader","search","setSearch","dataAccess","setDataAccess","setData2","setAccessdata","loggedUserId","localStorage","getItem","tableVisible","setTableVisible","console","log","ref","useRef","abortController","defaultDate","now","Date","dayOfWeek","getDay","diff","getDate","setDate","getCurrentMonday","selectedDate","setSelectedDate","initialValue","businessUnit","StartDt","moment","format","duration","isExport","state","setState","tableData","setTableData","dropdown","document","getElementById","addEventListener","selectedOption","options","selectedIndex","selectedOptionTitle","getAttribute","setAttribute","removeAttribute","routes","setRoutes","useEffect","axios","then","Response","countries","data","length","forEach","e","countryObj","label","value","push","resp","getData","filter","item","subMenus","some","subItem","display_name","engagementAllocationSubMenu","find","subMenu","access_level","accessLevel","userRoles","includes","handleCustomer","res","filteredData","id","handleChange","target","name","prev","CustomDatePickerInput","onClick","type","className","placeholder","readOnly","currentScreenName","FaChevronCircleDown","htmlFor","ele","current","ArrowRenderer","expanded","disabled","valueRenderer","selectedOptions","allOptions","selectedValues","map","option","allValues","join","onChange","filteredCountry","d","prevVal","toString","Item","index","title","full_name","style","position","zIndex","selected","showMonthDropdown","showYearDropdown","date","filterDate","dateFormat","dropdownMode","customInput","valid","GlobalValidation","AbortController","method","url","signal","detail","cols","replaceAll","split","handleAbort","abort","height","color","fontStyle","marginTop","align","size","cursor","desiredColumnOrder","wantedValues","obj","col","extractedValue","workbook","row","ExcelJS","worksheet","addWorksheet","addRow","Object","values","getRow","font","bold","xlsx","writeBuffer","buffer","saveAs","Blob","expandedCols","colExpandState","MaterialReactCollapisbleTable","props","icons","fte0","src","fte_inactive","alt","float","fte1","fte_active","fte2","fte_notice","subk0","subk_inactive","subk1","subk_active","width","subk2","subk_notice","nodes","setNodes","hiddenColumns","setHiddenColumns","colExpFlag","setColumnExpFlag","setHeaders","numberWithCommas","x","number","String","num","Number","final","toLocaleString","minimumFractionDigits","maximumFractionDigits","replace","parseFloat","colArr","newHeaders","hiddenHeaders","i","colVal","trim","firstData","filteredHeaders","entries","key","assign","accessorKey","header","enableColumnActions","enableHiding","Header","column","IconButton","Cell","cell","whiteSpace","overflow","textOverflow","getValue","original","parentId","jsonToTree","children","flatArray","dictionary","tree","node","nodeId","nodeParentId","enableExpandAll","enableExpanding","enablePagination","enableBottomToolbar","enableTopToolbar","enableSorting","filterFromLeafRows","initialState","density","columnVisibility","columnPinning","right","defaultColumn","minSize","maxSize","enableStickyHeader","muiTableContainerProps","sx","maxHeight","maxWidth","muiTableBodyProps","borderRight","fontSize","paddingTop","paddingBottom","muiTableHeadProps","borderTop","background","padding"],"sourceRoot":""}