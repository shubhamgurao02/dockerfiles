{"version":3,"file":"static/js/1774.b00e7e4e.chunk.js","mappings":"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","sources":["views/FullfimentComponent/ResourceRequest.js","views/FullfimentComponent/ResourceRequestTable.js"],"sourcesContent":["import React, { useState, useEffect, useMemo, useRef } from \"react\";\nimport { MultiSelect } from \"react-multi-select-component\";\nimport {\n  FaChevronCircleDown,\n  FaChevronCircleUp,\n  FaSearch,\n  FaCheck,\n} from \"react-icons/fa\";\nimport { CCollapse } from \"@coreui/react\";\nimport { getTableData } from \"./ResourceRequestTable\";\nimport FlatPrimeReactTable from \"../PrimeReactTableComponent/FlatPrimeReactTable\";\nimport axios from \"axios\";\nimport { environment } from \"../../environments/environment\";\nimport MaterialReactTable from \"material-react-table\";\nimport { DataTable } from \"primereact/datatable\";\nimport { Column } from \"primereact/column\";\nimport { InputText } from \"primereact/inputtext\";\nimport { RiFileExcel2Line } from \"react-icons/ri\";\n\nimport {\n  AiFillCloseCircle,\n  AiFillSave,\n  AiOutlinePlusSquare,\n} from \"react-icons/ai\";\nimport DatePicker from \"react-datepicker\";\nimport { ReactSearchAutocomplete } from \"react-search-autocomplete\";\nimport moment from \"moment\";\nimport { Button } from \"primereact/button\";\nimport GlobalValidation from \"../ValidationComponent/GlobalValidation\";\nimport { FilterMatchMode, FilterOperator } from \"primereact/api\";\nimport { IoWarningOutline } from \"react-icons/io5\";\nimport GlobalCancel from \"../ValidationComponent/GlobalCancel\";\nimport GlobalHelp from \"../PrimeReactTableComponent/GlobalHelp\";\nimport ScreenBreadcrumbs from \"../Common/ScreenBreadcrumbs\";\n// import Loader from \"../Loader/Loader\";\n\nfunction ResourceRequest() {\n  const [visible, setVisible] = useState(false);\n  const [cheveronIcon, setCheveronIcon] = useState(FaChevronCircleUp);\n  const [dataAr, setDataAr] = useState([]);\n  const [business, setBusiness] = useState([]);\n  const [selectedBusiness, setSelectedBusiness] = useState([]);\n  const [country, setCountry] = useState([]);\n  const [location, setLocation] = useState([]);\n  const loggedUserId = localStorage.getItem(\"resId\");\n  const [selectedCountry, setSelectedCountry] = useState([]);\n  const [stage, setStage] = useState([]);\n  const [fncDate, setFncDate] = useState([]);\n  const [tabStage, setTabStage] = useState([]);\n  const [selectedStage, setSelectedStage] = useState([]);\n  const [tableData, setTableData] = useState([{}]);\n  const [rowId, setRowId] = useState([]);\n  const [resourcePoId, setresourcePoId] = useState([]);\n  const [text, setText] = useState([]);\n  // const [loader, setLoader] = useState(false);\n\n  const [reqBu, setReqBu] = useState([]);\n  const [resource, setResource] = useState([]);\n  const [customer, setCustomer] = useState([]);\n  const [date, SetDate] = useState();\n  const [displayState, setDisplayState] = useState(\"view\");\n  const [month, setMonth] = useState(new Date());\n  const [employeeId, setEmployeeId] = useState([]);\n  const [pocId, setPocId] = useState([]);\n  const [sfaUrl, setSfaUrl] = useState([]);\n  const [globalFilterValue, setGlobalFilterValue] = useState(\"\");\n  const [validationMessage, setValidationMessage] = useState(false);\n  const [resId, setResId] = useState([]);\n  const [cusId, setCusId] = useState([]);\n  // const [showSecondTable, setShowSecondTable] = useState(false);\n  const [filters, setFilters] = useState({\n    global: { value: null, matchMode: FilterMatchMode.CONTAINS },\n  });\n  const ref = useRef([]);\n  const onRowEditComplete = (e) => {\n    let _tableData = [...tableData];\n    let { newData, index } = e;\n    _tableData[index] = newData;\n    setTableData(_tableData);\n    handleAddClick(e.newData);\n  };\n\n  const initialValue = {\n    id: null,\n    departmentId: \"\",\n    customerId: \"\",\n    isProspect: \"\",\n    requestedPocId: \"\",\n    rrqId: \" \",\n    proposedResourceId: \"\",\n    proposedDate: \"\",\n    stageId: \"\",\n    requestedSkills: \"\",\n    requestedCountryId: \"\",\n    SfaUrl: \"\",\n    comments: \"\",\n    createdById: \"\",\n  };\n  const [formData, setFormData] = useState(initialValue);\n\n  const values = {\n    reqBuIds: \"170,211,123,82,168,207,212,18,213,49,149,208,243\",\n    reqLocIds: \"6,5,3,8,7,1,2\",\n    stages: \"1160,1161,1162,1163,1164,1165,1166,1167,1168\",\n    resType: -1,\n    resLocIds: \"6,5,3,8,7,1,2\",\n    action: \"view\",\n  };\n  const [setData, setSetData] = useState(values);\n  const baseUrl = environment.baseUrl;\n  const getCountries = () => {\n    axios\n      .get(baseUrl + `/CostMS/cost/getCountries`)\n      .then((Response) => {\n        let countries = [];\n        let data = Response.data;\n        data.length > 0 &&\n          data.forEach((e) => {\n            let countryObj = {\n              label: e.country_name,\n              value: e.id,\n            };\n            countries.push(countryObj);\n          });\n        setCountry(countries);\n        setLocation(data);\n        setSelectedCountry(countries);\n      })\n      .catch((error) => console.log(error));\n  };\n  const getBusinessUnit = () => {\n    axios\n      .get(baseUrl + `/CostMS/cost/getDepartments`)\n      .then((Response) => {\n        let countries = [];\n        let data = Response.data;\n        console.log(data);\n        data.length > 0 &&\n          data.forEach((e) => {\n            let countryObj = {\n              label: e.label,\n              value: e.value,\n            };\n            countries.push(countryObj);\n          });\n        setBusiness(countries);\n        setReqBu(data);\n        setSelectedBusiness(countries);\n      })\n      .catch((error) => console.log(error));\n  };\n  const getStates = () => {\n    axios\n      .get(baseUrl + `/ProjectMS/ProjectScopeChange/getStages`)\n      .then((Response) => {\n        let countries = [];\n        let data = Response.data;\n        console.log(data);\n        data.length > 0 &&\n          data.forEach((e) => {\n            let countryObj = {\n              label: e.lkup_name,\n              value: e.id,\n              supp: e.val,\n            };\n            countries.push(countryObj);\n          });\n        setStage(countries);\n        setTabStage(data);\n        let defaultSelected = JSON.parse(JSON.stringify(countries)).filter(\n          (d) => d.supp.includes(\"inactive\") == false\n        );\n        setSelectedStage(defaultSelected);\n      })\n      .catch((error) => console.log(error));\n  };\n  const resourceFnc = () => {\n    axios({\n      method: \"get\",\n      url: baseUrl + `/ProjectMS/risks/getAssignedData`,\n    })\n      .then((res) => {\n        let manger = res.data;\n        console.log(manger);\n        setResource(manger);\n\n        //console.log(\"in manager\");\n      })\n      .catch((error) => {\n        //console.log(\"error :\" + error);\n      });\n  };\n  const customerFnc = () => {\n    axios({\n      method: \"get\",\n      url: baseUrl + `/fullfilmentms/Resourcerequest/getCustomerAndProspect`,\n    })\n      .then((res) => {\n        let manger = res.data;\n\n        setCustomer(manger);\n      })\n      .catch((error) => {\n        console.log(\"error :\" + error);\n      });\n  };\n\n  useEffect(() => {\n    handleClick();\n  }, []);\n\n  const handleClick = () => {\n    // setLoader(true);\n\n    GlobalCancel(ref);\n    setDisplayState(setData.action);\n    //setDisplayState(false);\n    if (\n      setData.reqBuIds == \"\" ||\n      setData.reqLocIds == \"\" ||\n      setData.stages == \"\" ||\n      setData.resType == \"\" ||\n      setData.resLocIds == \"\"\n    ) {\n      let valid = GlobalValidation(ref);\n\n      if (valid) {\n        {\n          setValidationMessage(true);\n        }\n        return;\n      }\n    } else {\n      setValidationMessage(false);\n      axios({\n        method: \"post\",\n        url: baseUrl + `/fullfilmentms/Resourcerequest/getRmgProposals`,\n        data: {\n          reqBuIds: setData.reqBuIds,\n          reqLocIds: setData.reqLocIds,\n          stages: setData.stages,\n          resType: setData.resType,\n          resLocIds: setData.resLocIds,\n        },\n        headers: { \"Content-Type\": \"application/json\" },\n      }).then((response) => {\n        const GetData = response.data.data;\n        const data = response.data;\n        for (let i = 0; i < GetData.length; i++) {\n          GetData[i][\"date\"] =\n            GetData[i][\"date\"] == null\n              ? \"\"\n              : moment(GetData[i][\"date\"]).format(\"DD-MMM-YY\");\n        }\n        setTableData(GetData);\n        // setLoader(false);\n\n\n        // setShowSecondTable(true);\n        console.log(GetData);\n        console.log(data);\n      });\n    }\n  };\n\n  // const handleAbort = () => {\n  //   abortController.current && abortController.current.abort();\n  //   setLoader(false);\n  // };\n\n  const setOnChange = (e) => {\n    const { value, id } = e.target;\n    setSetData({ ...setData, [id]: value });\n  };\n\n  useEffect(() => {\n    console.log(tableData);\n\n    if (tableData[0]?.departmentId == \"\") {\n      document.getElementsByClassName(\"p-row-editor-init p-link\")[0].click();\n\n      setTimeout(() => {\n        document\n\n          .getElementsByClassName(\"p-row-editor-cancel p-link\")[0]\n          ?.addEventListener(\n            \"click\",\n\n            function (e) {\n              if (tableData[0]?.departmentId == \"\") {\n                setTableData(tableData.slice(1, tableData.length));\n              }\n            },\n\n            true\n          );\n      }, 200);\n    }\n  }, [tableData]);\n  const handleAddClick = (tableData) => {\n    console.log(tableData);\n    // let valid = GlobalValidation(ref);\n    // if (valid) {\n    //   {\n    //     setSuccessfulmessage(false);\n    //     setValidationMessage(true);\n    //   }\n    //   return;\n    // }\n    console.log(cusId);\n    tableData[\"res\"] = resId.name == undefined ? tableData[\"res\"] : resId.name;\n    tableData[\"resId\"] = resId.id == undefined ? tableData[\"resId\"] : resId.id;\n    tableData[\"customer\"] =\n      cusId.id == undefined ? tableData[\"customer\"] : cusId.label;\n    tableData[\"customer\"] =\n      cusId.id == undefined ? tableData[\"customer\"] : cusId.label;\n    tableData[\"customerId\"] =\n      cusId.id == undefined ? tableData[\"customerId\"] : cusId.id;\n\n    console.log(tableData);\n    axios({\n      method: \"post\",\n      url: baseUrl + `/fullfilmentms/Resourcerequest/postRmgProposals`,\n      data: {\n        id: tableData.id,\n        departmentId: tableData.reqDeptId,\n        customerId: tableData.customerId,\n        isProspect: tableData.isProspect == \"No\" ? 0 : 1,\n        requestedPocId:\n          tableData.pocId == null ? loggedUserId : tableData.pocId,\n        rrqId: tableData.rrqId,\n        proposedResourceId: tableData.resId,\n        proposedDate: moment(tableData.date).format(\"yyyy-MM-DD\"),\n        stageId: tableData.stageId,\n        requestedSkills: tableData.skill,\n        requestedCountryId: tableData.reqCountryId,\n        SfaUrl: tableData.sfa_url,\n        comments: tableData.comments,\n        createdById: loggedUserId,\n      },\n    }).then((response) => {\n      handleClick();\n      // setAddMessage(true);\n      // setTimeout(() => {\n      //   setAddMessage(false);\n      // }, 1000);\n    });\n    // setButtonDisabled(true);\n  };\n\n  const handleChange = (e) => {\n    const { id, name, value } = e.target;\n    console.log(e.target.value);\n\n    setFormData((prev) => {\n      return { ...prev, [id]: value };\n    });\n\n    console.log(id, \":\", value);\n  };\n\n  console.log(formData);\n  useEffect(() => {\n    getBusinessUnit();\n    getCountries();\n    getStates();\n    //getData();\n    resourceFnc();\n    customerFnc();\n    // employeeDetailsFnc;\n    let tdata = getTableData();\n\n    console.log(\"ski1\", tdata);\n    setDataAr(tdata);\n  }, []);\n  console.log(formData);\n  console.log(setData);\n  useEffect(() => { }, [resourcePoId]);\n\n  const handleSaveRow = async ({ exitEditingMode, row, values }) => {\n    tableData[row.index] = values;\n    console.log(\"post Method----------\");\n    setTableData([...tableData]);\n  };\n\n  const exportExcel = () => {\n    console.log(tableData);\n    import(\"xlsx\").then((xlsx) => {\n      const worksheet = xlsx.utils.json_to_sheet(tableData);\n      const workbook = { Sheets: { data: worksheet }, SheetNames: [\"data\"] };\n      const excelBuffer = xlsx.write(workbook, {\n        bookType: \"xlsx\",\n        type: \"array\",\n      });\n      saveAsExcelFile(excelBuffer, \"tableData\");\n    });\n  };\n  const saveAsExcelFile = (buffer, fileName) => {\n    import(\"file-saver\").then((module) => {\n      if (module && module.default) {\n        let EXCEL_TYPE =\n          \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8\";\n        let EXCEL_EXTENSION = \".xlsx\";\n        const data = new Blob([buffer], {\n          type: EXCEL_TYPE,\n        });\n\n        module.default.saveAs(\n          data,\n          fileName + \"_export_\" + new Date().getTime() + EXCEL_EXTENSION\n        );\n      }\n    });\n  };\n\n  const textEditor12 = (tableData) => {\n    return (\n      <InputText\n        type=\"text\"\n        value={tableData.rowData.sfa_url}\n        id=\"SfaUrl\"\n        onChange={(e) => {\n          tableData.editorCallback(e.target.value);\n        }}\n      ></InputText>\n    );\n  };\n  console.log(sfaUrl);\n  const reqSkillFnc = (tableData) => {\n    console.log(tableData);\n    console.log(tableData.rowData.pocId);\n    setPocId(tableData.rowData.pocId);\n    return (\n      <InputText\n        type=\"text\"\n        title={tableData.rowData.skill}\n        value={tableData.rowData.skill}\n        id=\"requestedSkills\"\n        onChange={(e) => tableData.editorCallback(e.target.value)}\n      ></InputText>\n    );\n  };\n  const textEditor13 = (tableData) => {\n    return (\n      <InputText\n        type=\"text\"\n        title={tableData.rowData.comments}\n        value={tableData.rowData.comments}\n        id=\"comments\"\n        onChange={(e) => tableData.editorCallback(e.target.value)}\n      ></InputText>\n    );\n  };\n  const rrqIdFnc = (tableData) => {\n    return (\n      <InputText\n        type=\"text\"\n        title={tableData.rowData.rrqId}\n        value={tableData.rowData.rrqId}\n        id=\"rrqId\"\n        onChange={(e) => tableData.editorCallback(e.target.value)}\n      ></InputText>\n    );\n  };\n  const empIdFnc = (tableData) => {\n    return (\n      <div className=\"autoComplete-container\">\n        <ReactSearchAutocomplete\n          items={resource}\n          type=\"Text\"\n          name=\"resource\"\n          id=\"proposedResourceId\"\n          className=\"err cancel nochange\"\n          fuseOptions={{ keys: [\"id\", \"name\", \"employee_number\"] }}\n          resultStringKeyName=\"employee_number\"\n          inputSearchString={\n            tableData.rowData.resId == null ? \"\" : tableData.rowData.resId\n          }\n          placeholder=\"Type minimum 3 characters to get the list\"\n          resource={resource}\n          resourceFnc={resourceFnc}\n          onSelect={(e) => {\n            // setFormData((prevProps) => ({\n            //   ...prevProps,\n            //   proposedResourceId: e.id,\n            // }));\n            console.log(e);\n            console.log(tableData);\n            console.log(tableData.rowData);\n            setResId(e);\n            axios({\n              method: \"get\",\n              url:\n                baseUrl +\n                `/fullfilmentms/Resourcerequest/getEmpdeatils?rid=${e.id}`,\n            })\n              .then((res) => {\n                let manger = res.data;\n                console.log(manger);\n                setEmployeeId(manger);\n              })\n              .catch((error) => {\n                console.log(\"error :\" + error);\n              });\n          }}\n          showIcon={false}\n        />\n      </div>\n    );\n  };\n  const prospect = (tableData, options) => {\n    setRowId(tableData.rowData.id);\n    setresourcePoId(tableData.rowData.pocId);\n    return (\n      <div className=\"autoComplete-container\">\n        <ReactSearchAutocomplete\n          title={\"sdg\"}\n          items={customer}\n          type=\"Text\"\n          name=\"resource\"\n          id=\"proposedResourceId\"\n          className=\"err cancel nochange\"\n          fuseOptions={{ keys: [\"id\", \"label\"] }}\n          resultStringKeyName=\"label\"\n          placeholder=\"Type minimum 3 characters to get the list\"\n          resource={customer}\n          inputSearchString={\n            tableData.rowData.customer == null ? \"\" : tableData.rowData.customer\n          }\n          resourceFnc={customerFnc}\n          onSelect={(e) => {\n            setFormData((prevProps) => ({\n              ...prevProps,\n              customerId: e.id,\n            }));\n            console.log(e);\n            console.log(tableData);\n            console.log(tableData.rowData);\n            setCusId(e);\n            setFormData((prevProps) => ({\n              ...prevProps,\n              isProspect: e.isProspect,\n            }));\n          }}\n          showIcon={false}\n        />\n      </div>\n    );\n  };\n  const resourceBUFnc = () => {\n    return (\n      <InputText\n        title={employeeId[0]?.department}\n        type=\"text\"\n        id=\"rrqId\"\n        value={employeeId[0]?.department}\n        onChange={(e) => tableData.editorCallback(e.target.value)}\n      ></InputText>\n    );\n  };\n  const resLocationFnc = () => {\n    return (\n      <InputText\n        type=\"text\"\n        id=\"rrqId\"\n        value={employeeId[0]?.country}\n        onChange={(e) => tableData.editorCallback(e.target.value)}\n      ></InputText>\n    );\n  };\n\n  const textEditor1 = (tableData, options) => {\n    console.log(tableData.rowData.reqDeptId);\n    return (\n      <>\n        <select\n          className=\"cancel\"\n          name=\"size\"\n          id=\"reqDeptId\"\n          onChange={(e) => {\n            console.log(e.target.value);\n            tableData.editorCallback(e.target.value);\n            reqBu.map((a) => {\n              console.log(a);\n              if (a.value == e.target.value) {\n                console.log(a);\n                tableData[\"rowData\"][\"reqDept\"] = a.label;\n                tableData[\"rowData\"][\"reqDeptId\"] = e.target.value;\n                console.log(tableData);\n              }\n            });\n          }}\n        >\n          <option value=\"\"> &lt;&lt;Please Select&gt;&gt;</option>\n          {reqBu.map((Item, index) => (\n            <option\n              key={index}\n              value={Item.value}\n              selected={\n                Item.value == tableData.rowData.reqDeptId ? true : false\n              }\n            >\n              {Item.label}\n            </option>\n          ))}\n        </select>\n      </>\n    );\n  };\n  const stageFnc = (tableData, options) => {\n    return (\n      <>\n        <select\n          className=\"cancel\"\n          name=\"size\"\n          id=\"stageId\"\n          onChange={(e) => {\n            tableData.editorCallback(e.target.value);\n            console.log(e.target.value);\n            tabStage.map((a) => {\n              console.log(a);\n              if (a.id == e.target.value) {\n                console.log(a);\n                tableData[\"rowData\"][\"stage\"] = a.lkup_name;\n                tableData[\"rowData\"][\"stageId\"] = e.target.value;\n                console.log(tableData);\n              }\n            });\n          }}\n        >\n          <option value=\"\"> &lt;&lt;Please Select&gt;&gt;</option>\n          {tabStage.map((Item, index) => (\n            <option\n              key={index}\n              value={Item.id}\n              selected={Item.id == tableData.rowData.stageId ? true : false}\n            >\n              {Item.lkup_name}\n            </option>\n          ))}\n        </select>\n      </>\n    );\n  };\n  const proposedOnFnc = (tableData, options) => {\n    console.log(tableData.rowData.date);\n    setFncDate(tableData.rowData.date);\n    return (\n      <>\n        <DatePicker\n          name=\"month\"\n          id=\"proposedDate\"\n          selected={date}\n          onChange={(e) => {\n            console.log(e);\n            tableData.editorCallback(moment(e).format(\"DD-MMM-yy\"));\n            setFormData((prev) => ({\n              ...prev,\n              [\"proposedDate\"]: moment(e).format(\"yyyy-MM-DD\"),\n            }));\n          }}\n          // onChange={(e) => {\n          //   SetDate(e);\n          //   console.log(e);\n          //   tableData.editorCallback(e);\n          //   console.log(moment(date).format(\"yyyy-MM-DD\"));\n          //   // setFormData((prev) => ({\n          //   //   ...prev,\n          //   //   [\"proposedDate\"]: moment(e).format(\"yyyy-MM-DD\"),\n          //   // }));\n          //   // setMonth(e);\n          // }}\n          dateFormat=\"dd-MMM-yy\"\n          //showMonthYearPicker\n          placeholderText={fncDate}\n          onKeyDown={(e) => {\n            e.preventDefault();\n          }}\n        />\n      </>\n    );\n  };\n  const ResourceProposedFnc = (tableData, options) => {\n    return (\n      <div className=\"autoComplete-container\">\n        <ReactSearchAutocomplete\n          items={resource}\n          type=\"Text\"\n          name=\"resource\"\n          id=\"proposedResourceId\"\n          className=\"err cancel nochange\"\n          fuseOptions={{ keys: [\"id\", \"name\"] }}\n          resultStringKeyName=\"name\"\n          placeholder=\"Type minimum 3 characters to get the list\"\n          resource={resource}\n          resourceFnc={resourceFnc}\n          inputSearchString={\n            tableData.rowData.res == null ? \"\" : tableData.rowData.res\n          }\n          // inputSearchString={employeeId[0]?.name}\n          //defaultSelected={employeeId[0]?.name}\n          onSelect={(e) => {\n            setFormData((prevProps) => ({\n              ...prevProps,\n              proposedResourceId: e.id,\n            }));\n            setResId(e);\n            axios({\n              method: \"get\",\n              url:\n                baseUrl +\n                `/fullfilmentms/Resourcerequest/getEmpdeatils?rid=${e.id}`,\n            })\n              .then((res) => {\n                let manger = res.data;\n                console.log(manger);\n                setEmployeeId(manger);\n              })\n              .catch((error) => {\n                console.log(\"error :\" + error);\n              });\n\n            setEmployeeId(e.id);\n            // employeeDetailsFnc();\n          }}\n          showIcon={false}\n        />\n      </div>\n    );\n  };\n  const reqLocationFnc = (tableData, options) => {\n    console.log(tableData.rowData.reqCountryId);\n    return (\n      <>\n        <select\n          id=\"requestedCountryId\"\n          className=\"cancel\"\n          name=\"size\"\n          // id=\"size\"\n\n          onChange={(e) => {\n            tableData.editorCallback(e.target.value);\n            location.map((a) => {\n              console.log(a);\n              if (a.id == e.target.value) {\n                console.log(a);\n                tableData[\"rowData\"][\"reqCountry\"] = a.country_name;\n                tableData[\"rowData\"][\"reqCountryId\"] = e.target.value;\n                console.log(tableData);\n              }\n            });\n            console.log(tableData);\n          }}\n        >\n          {/* <option value=\"\"> &lt;&lt;Please Select&gt;&gt;</option> */}\n          {location?.map((Item, index) => (\n            <option\n              key={index}\n              value={Item.id}\n              selected={\n                Item.id == tableData.rowData.reqCountryId ? true : false\n              }\n            >\n              {Item.country_name}\n            </option>\n          ))}\n        </select>\n      </>\n    );\n  };\n  console.log(rowId);\n  const addHandler = () => {\n    const data = {\n      id: \"\",\n      departmentId: \"\",\n      customerId: \"\",\n      requestedPocId: \"\",\n      rrqId: \"\",\n      proposedResourceId: \"\",\n      proposedDate: \"\",\n      stageId: \"\",\n      requestedSkills: \"\",\n      requestedCountryId: \"\",\n      SfaUrl: \"\",\n      comments: \"\",\n    };\n    let dt = [];\n    dt.push(data);\n    setTableData([...dt, ...tableData]);\n  };\n  console.log(formData);\n\n  const onGlobalFilterChange = (e) => {\n    const value = e.target.value;\n    let _filters = { ...filters };\n\n    _filters[\"global\"].value = value;\n\n    setFilters(_filters);\n    setGlobalFilterValue(value);\n  };\n\n  const renderHeader = () => {\n    return (\n      <div className=\"primeTableSearch\">\n        <InputText\n          className=\"globalFilter\"\n          value={globalFilterValue}\n          onChange={onGlobalFilterChange}\n          placeholder=\"Keyword Search\"\n        />\n\n        <RiFileExcel2Line\n          size=\"1.5em\"\n          title=\"Export to Excel\"\n          style={{ color: \"green\" }}\n          cursor=\"pointer\"\n          onClick={exportExcel}\n        />\n      </div>\n    );\n  };\n  const header = renderHeader();\n  const HelpPDFName = \"Resourceproposal.pdf\";\n  const Headername = \"Resource Proposal Help\";\n\n  const [routes, setRoutes] = useState([]);\n  let textContent = \"Fullfilment\";\n  let currentScreenName = [\"Resource Request\"];\n\n  useEffect(() => {\n    getMenus();\n  }, []);\n\n  const getMenus = () => {\n    // setMenusData\n\n    axios({\n      method: \"GET\",\n      url: baseUrl + `/CommonMS/master/getMenus?loggedUserId=${loggedUserId}`,\n    }).then((resp) => {\n      let data = resp.data;\n\n      data.forEach((item) => {\n        if (item.display_name === textContent) {\n          setRoutes([item]);\n        }\n      });\n    });\n  };\n  const handleBodyCustomerProspect = (data) => {\n    return (\n      <>\n        <input\n          id=\"customer\"\n          title={data.customer}\n          value={data.customer}\n          className=\"ellipsis\"\n          type=\"text\"\n          disabled\n        />\n      </>\n    );\n  };\n  const handleBodyReq = (data) => {\n    return (\n      <>\n        <input\n          id=\"reqDept\"\n          title={data.reqDept}\n          value={data.reqDept}\n          className=\"ellipsis\"\n          type=\"text\"\n          disabled\n        />\n      </>\n    );\n  };\n  const handleBodyPoc = (data) => {\n    return (\n      <>\n        <input\n          id=\"poc\"\n          title={data.poc}\n          value={data.poc}\n          className=\"ellipsis\"\n          type=\"text\"\n          disabled\n        />\n      </>\n    );\n  };\n  const handleBodyRrq = (data) => {\n    return (\n      <>\n        <input\n          id=\"rrqId\"\n          title={data.rrqId}\n          value={data.rrqId}\n          className=\"ellipsis\"\n          type=\"text\"\n          disabled\n        />\n      </>\n    );\n  };\n  const handleBodyEmp = (data) => {\n    return (\n      <>\n        <input\n          id=\"empId\"\n          title={data.empId}\n          value={data.empId}\n          className=\"ellipsis\"\n          type=\"text\"\n          disabled\n        />\n      </>\n    );\n  };\n  const handleBodyResourceApproval = (data) => {\n    return (\n      <>\n        <input\n          id=\"res\"\n          title={data.res}\n          value={data.res}\n          className=\"ellipsis\"\n          type=\"text\"\n          disabled\n        />\n      </>\n    );\n  };\n  const handleBodyDept = (data) => {\n    return (\n      <>\n        <input\n          id=\"dept\"\n          title={data.dept}\n          value={data.dept}\n          className=\"ellipsis\"\n          type=\"text\"\n          disabled\n        />\n      </>\n    );\n  };\n  const handleBodyLocation = (data) => {\n    return (\n      <>\n        <input\n          id=\"country_name\"\n          title={data.country_name}\n          value={data.country_name}\n          className=\"ellipsis\"\n          type=\"text\"\n          disabled\n        />\n      </>\n    );\n  };\n  const handleBodyDate = (data) => {\n    return (\n      <>\n        <input\n          id=\"date\"\n          title={data.date}\n          value={data.date}\n          className=\"ellipsis\"\n          type=\"text\"\n          disabled\n        />\n      </>\n    );\n  };\n  const handleBodyStage = (data) => {\n    return (\n      <>\n        <input\n          id=\"stage\"\n          title={data.stage}\n          value={data.stage}\n          className=\"ellipsis\"\n          type=\"text\"\n          disabled\n        />\n      </>\n    );\n  };\n  const handleBodySkill = (data) => {\n    return (\n      <>\n        <input\n          id=\"skill\"\n          title={data.skill}\n          value={data.skill}\n          className=\"ellipsis\"\n          type=\"text\"\n          disabled\n        />\n      </>\n    );\n  };\n  const handleBodyReqLocation = (data) => {\n    return (\n      <>\n        <input\n          id=\"reqCountry\"\n          title={data.reqCountry}\n          value={data.reqCountry}\n          className=\"ellipsis\"\n          type=\"text\"\n          disabled\n        />\n      </>\n    );\n  };\n  const handleBodySfaUrl = (data) => {\n    return (\n      <>\n        <input\n          id=\"sfa_url\"\n          title={data.sfa_url}\n          value={data.sfa_url}\n          className=\"ellipsis\"\n          type=\"text\"\n          disabled\n        />\n      </>\n    );\n  };\n  const handleBodyComments = (data) => {\n    return (\n      <>\n        <input\n          id=\"comments\"\n          title={data.comments}\n          value={data.comments}\n          className=\"ellipsis\"\n          type=\"text\"\n          disabled\n        />\n      </>\n    );\n  };\n  const handleBodyCustom = (data) => {\n    return (\n      <>\n        <input\n          id=\"customer\"\n          title={data.customer}\n          value={data.customer}\n          className=\"ellipsis\"\n          type=\"text\"\n          disabled\n        />\n      </>\n    );\n  };\n  const handleBodyReqBu = (data) => {\n    return (\n      <>\n        <input\n          id=\"reqDept\"\n          title={data.reqDept}\n          value={data.reqDept}\n          className=\"ellipsis\"\n          type=\"text\"\n          disabled\n        />\n      </>\n    );\n  };\n  const handleBodyReqBy = (data) => {\n    return (\n      <>\n        <input\n          id=\"poc\"\n          title={data.poc}\n          value={data.poc}\n          className=\"ellipsis\"\n          type=\"text\"\n          disabled\n        />\n      </>\n    );\n  };\n  const handleBodyRrqId = (data) => {\n    return (\n      <>\n        <input\n          id=\"rrqId\"\n          title={data.rrqId}\n          value={data.rrqId}\n          className=\"ellipsis\"\n          type=\"text\"\n          disabled\n        />\n      </>\n    );\n  };\n  const handleBodyEmpId = (data) => {\n    return (\n      <>\n        <input\n          id=\"empId\"\n          title={data.empId}\n          value={data.empId}\n          className=\"ellipsis\"\n          type=\"text\"\n          disabled\n        />\n      </>\n    );\n  };\n  const handleBodyRes = (data) => {\n    return (\n      <>\n        <input\n          id=\"res\"\n          title={data.res}\n          value={data.res}\n          className=\"ellipsis\"\n          type=\"text\"\n          disabled\n        />\n      </>\n    );\n  };\n  const handleBodyResBu = (data) => {\n    return (\n      <>\n        <input\n          id=\"dept\"\n          title={data.dept}\n          value={data.dept}\n          className=\"ellipsis\"\n          type=\"text\"\n          disabled\n        />\n      </>\n    );\n  };\n  const handleBodyCust = (data) => {\n    return (\n      <>\n        <input\n          id=\"country_name\"\n          title={data.country_name}\n          value={data.country_name}\n          className=\"ellipsis\"\n          type=\"text\"\n          disabled\n        />\n      </>\n    );\n  };\n  const handleBodyProposedOn = (data) => {\n    return (\n      <>\n        <input\n          id=\"date\"\n          title={data.date}\n          value={data.date}\n          className=\"ellipsis\"\n          type=\"text\"\n          disabled\n        />\n      </>\n    );\n  };\n  const handleBodystage = (data) => {\n    return (\n      <>\n        <input\n          id=\"stage\"\n          title={data.stage}\n          value={data.stage}\n          className=\"ellipsis\"\n          type=\"text\"\n          disabled\n        />\n      </>\n    );\n  };\n  const handleBodyskill = (data) => {\n    return (\n      <>\n        <input\n          id=\"skill\"\n          title={data.skill}\n          value={data.skill}\n          className=\"ellipsis\"\n          type=\"text\"\n          disabled\n        />\n      </>\n    );\n  };\n  const handleBodyReqlocation = (data) => {\n    return (\n      <>\n        <input\n          id=\"reqCountry\"\n          title={data.reqCountry}\n          value={data.reqCountry}\n          className=\"ellipsis\"\n          type=\"text\"\n          disabled\n        />\n      </>\n    );\n  };\n  const handleBodyUrl = (data) => {\n    return (\n      <>\n        <input\n          id=\"sfa_url\"\n          title={data.sfa_url}\n          value={data.sfa_url}\n          className=\"ellipsis\"\n          type=\"text\"\n          disabled\n        />\n      </>\n    );\n  };\n  const handleBodyComment = (data) => {\n    return (\n      <>\n        <input\n          id=\"comments\"\n          title={data.comments}\n          value={data.comments}\n          className=\"ellipsis\"\n          type=\"text\"\n          disabled\n        />\n      </>\n    );\n  };\n\n  return (\n    <div>\n      <div className=\"col-md-12\">\n        <div className=\"pageTitle\">\n          <div className=\"childOne\"></div>\n          <div className=\"childTwo\">\n            <h2>Resource Request</h2>\n          </div>\n          <div className=\"childThree\"></div>\n        </div>\n      </div>\n      <ScreenBreadcrumbs routes={routes} currentScreenName={currentScreenName} />\n\n      {/* {loader ? <Loader handleAbort={handleAbort} /> : \"\"} */}\n\n      <div className=\"col-md-12  mt-2\">\n        {validationMessage ? (\n          <div className=\"statusMsg error\">\n            {\" \"}\n            <span>\n              {\" \"}\n              <IoWarningOutline /> Please select the valid values for\n              highlighted fields{\" \"}\n            </span>\n          </div>\n        ) : (\n          \"\"\n        )}\n      </div>\n      <div className=\"group mb-3 customCard\">\n        <div className=\"col-md-12 collapseHeader\">\n          <h2>Search Filters</h2>\n          <div className=\"helpBtn\">\n            <GlobalHelp pdfname={HelpPDFName} name={Headername} />\n          </div>\n\n          <div\n            onClick={() => {\n              setVisible(!visible);\n\n              visible\n                ? setCheveronIcon(FaChevronCircleUp)\n                : setCheveronIcon(FaChevronCircleDown);\n            }}\n          >\n            <span>{cheveronIcon}</span>\n          </div>\n        </div>\n        {/* <h2>Resource Request</h2> */}\n        <CCollapse visible={!visible}>\n          <div className=\"group-content row\">\n            <div className=\" col-md-3 mb-2\">\n              <div className=\"form-group row\">\n                <label className=\"col-5\" htmlFor=\"reqBU\">\n                  Req. BU <span className=\"error-text\">*</span>\n                </label>\n                <span className=\"col-1 p-0\">:</span>\n                <div\n                  className=\"col-6 multiselect\"\n                  ref={(ele) => {\n                    ref.current[0] = ele;\n                  }}\n                >\n                  <MultiSelect\n                    id=\"businessUnit\"\n                    options={business}\n                    hasSelectAll={true}\n                    value={selectedBusiness}\n                    disabled={false}\n                    onChange={(e) => {\n                      setSelectedBusiness(e);\n                      let filteredCountry = [];\n                      e.forEach((d) => {\n                        filteredCountry.push(d.value);\n                      });\n                      setSetData((prevVal) => ({\n                        ...prevVal,\n                        [\"reqBuIds\"]: filteredCountry.toString(),\n                      }));\n                    }}\n                  />\n                </div>\n              </div>\n            </div>\n            <div className=\" col-md-3 mb-2\">\n              <div className=\"form-group row\">\n                <label className=\"col-5\" htmlFor=\"reqLocation\">\n                  Req. Location <span className=\"error-text\">*</span>\n                </label>\n                <span className=\"col-1 p-0\">:</span>\n                <div\n                  className=\"col-6 multiselect\"\n                  ref={(ele) => {\n                    ref.current[1] = ele;\n                  }}\n                >\n                  <MultiSelect\n                    id=\"location\"\n                    options={country}\n                    hasSelectAll={true}\n                    value={selectedCountry}\n                    disabled={false}\n                    onChange={(e) => {\n                      setSelectedCountry(e);\n                      let filteredCountry = [];\n                      e.forEach((d) => {\n                        filteredCountry.push(d.value);\n                      });\n                      setSetData((prevVal) => ({\n                        ...prevVal,\n                        [\"reqLocIds\"]: filteredCountry.toString(),\n                      }));\n                    }}\n                  />\n                </div>\n              </div>\n            </div>\n            <div className=\" col-md-3 mb-2\">\n              <div className=\"form-group row\">\n                <label className=\"col-5\" htmlFor=\"stage\">\n                  Stage\n                </label>\n                <span className=\"col-1 p-0\">:</span>\n                <div className=\"col-6\">\n                  <MultiSelect\n                    id=\"location\"\n                    options={stage}\n                    hasSelectAll={true}\n                    value={selectedStage}\n                    disabled={false}\n                    onChange={(e) => {\n                      setSelectedStage(e);\n                      let filteredCountry = [];\n                      e.forEach((d) => {\n                        filteredCountry.push(d.value);\n                      });\n                      setSetData((prevVal) => ({\n                        ...prevVal,\n                        [\"stages\"]: filteredCountry.toString(),\n                      }));\n                    }}\n                  />\n                </div>\n              </div>\n            </div>\n\n            <div className=\" col-md-3 mb-2\">\n              <div className=\"form-group row\">\n                <label className=\"col-5\" htmlFor=\"resType\">\n                  Res Type <span className=\"error-text\">*</span>\n                </label>\n                <span className=\"col-1 p-0\">:</span>\n                <div className=\"col-6\">\n                  <select\n                    className=\"text\"\n                    ref={(ele) => {\n                      ref.current[2] = ele;\n                    }}\n                    id=\"resType\"\n                    onChange={(e) => setOnChange(e)}\n                  >\n                    <option value=\"-1\"> &lt;&lt; ALL &gt;&gt;</option>\n                    <option value=\"fte\"> FTE</option>\n                    <option value=\"subk\"> Contractors</option>\n                  </select>\n                </div>\n              </div>\n            </div>\n            <div className=\" col-md-3 mb-2\">\n              <div className=\"form-group row\">\n                <label className=\"col-5\" htmlFor=\"resLocation\">\n                  Res. Location <span className=\"error-text\">*</span>\n                </label>\n                <span className=\"col-1 p-0\">:</span>\n                <div\n                  className=\"col-6 multiselect\"\n                  ref={(ele) => {\n                    ref.current[3] = ele;\n                  }}\n                >\n                  <MultiSelect\n                    id=\"location\"\n                    options={country}\n                    hasSelectAll={true}\n                    value={selectedCountry}\n                    disabled={false}\n                    onChange={(e) => {\n                      setSelectedCountry(e);\n                      let filteredCountry = [];\n                      e.forEach((d) => {\n                        filteredCountry.push(d.value);\n                      });\n                      setSetData((prevVal) => ({\n                        ...prevVal,\n                        [\"resLocIds\"]: filteredCountry.toString(),\n                      }));\n                    }}\n                  />\n                </div>\n              </div>\n            </div>\n            <div className=\" col-md-3 mb-2\">\n              <div className=\"form-group row\">\n                <label className=\"col-5\" htmlFor=\"action\">\n                  Action <span className=\"error-text\">*</span>\n                </label>\n                <span className=\"col-1 p-0\">:</span>\n                <div className=\"col-6\">\n                  <select\n                    className=\"text\"\n                    id=\"action\"\n                    onChange={(e) => setOnChange(e)}\n                  >\n                    <option value=\"view\" selected={\"View\"}>\n                      {\" \"}\n                      View\n                    </option>\n                    <option value=\"edit\"> Edit</option>\n                  </select>\n                </div>\n              </div>\n            </div>\n            <div className=\"col-md-12 col-sm-12 col-xs-12 btn-container center my-3 mb-2\">\n              <button\n                className=\"btn btn-primary \"\n                onClick={() => handleClick()}\n              >\n                Search\n              </button>\n            </div>\n          </div>\n        </CCollapse>\n      </div>\n\n      <>\n        {/* <div className=\"legend pink\">\n  <div className=\"legendTxt\" style={{ color: \"pink\", fontSize: \"13px\" }}>\n    This Resource may have another proposal(s) in the active status\n  </div>\n</div> */}\n        <div className=\"legend\">\n          <div className=\"legendTxt\">\n            <span\n              style={{\n                display: 'inline-block',\n                width: '10px',\n                height: '10px',\n                borderRadius: '50%',\n                backgroundColor: 'pink', // Change to your desired color\n                marginRight: '5px',\n              }}\n            ></span>\n            This Resource may have another proposal(s) in the active status\n          </div>\n        </div>\n\n\n\n        {displayState == \"view\" ? (\n          <div className=\"col-md-12 \">\n            <DataTable\n              value={tableData}\n              className=\"primeReactDataTable\"\n              editMode=\"row\"\n              onRowEditComplete={onRowEditComplete}\n              tableStyle={{ minWidth: \"100rem\" }}\n              showGridlines\n              scrollable={true}\n              scrollHeight=\"400px\"\n              scrollWidth=\"100%\"\n              header={header}\n              onSelectionChange={(e) => handleSelection(e)}\n              emptyMessage=\"No Data Found\"\n              filters={filters}\n            >\n\n              <Column\n                field=\"customer\"\n                header={(\n                  <div>\n                    <div style={{ display: 'inline-block', width: '10px', height: '10px', borderRadius: '50%', backgroundColor: 'green', marginRight: '5px' }}></div>\n                    Customer\n                    <br /> {/* Add a line break to separate the legends */}\n                    <div style={{ display: 'inline-block', width: '10px', height: '10px', borderRadius: '50%', backgroundColor: 'purple', marginRight: '5px' }}></div>\n                    Prospect\n                  </div>\n                )}\n                editor={(options) => prospect(options)}\n                body={handleBodyCustom}\n              ></Column>\n\n\n              <Column\n                field=\"reqDept\"\n                header=\"Req.BU\"\n                editor={(options) => textEditor1(options)}\n                body={handleBodyReqBu}\n\n              ></Column>\n              <Column\n                field=\"poc\"\n                header=\"Requested By\"\n                body={handleBodyReqBy}\n\n              ></Column>\n              <Column\n                field=\"rrqId\"\n                header=\"RRQ ID\"\n                editor={(options) => rrqIdFnc(options)}\n                body={handleBodyRrqId}\n\n              ></Column>\n              <Column\n                field=\"empId\"\n                header=\"Emp ID\"\n                editor={(options) => empIdFnc(options)}\n                body={handleBodyEmpId}\n\n              ></Column>\n              <Column\n                field=\"res\"\n                header=\"Resource Proposed\"\n                editor={(options) => ResourceProposedFnc(options)}\n                body={handleBodyRes}\n\n              ></Column>\n              <Column\n                field=\"dept\"\n                header=\"Resource BU\"\n                editor={(options) => resourceBUFnc(options)}\n                body={handleBodyResBu}\n\n              ></Column>\n              <Column\n                field=\"country_name\"\n                header=\"Res. Location\"\n                body={handleBodyCust}\n\n              ></Column>\n              <Column\n                field=\"date\"\n                header=\"Proposed On\t\"\n                editor={(options) => proposedOnFnc(options)}\n                body={handleBodyProposedOn}\n\n              ></Column>\n              <Column\n                field=\"stage\"\n                header=\"Stage\"\n                editor={(options) => stageFnc(options)}\n                body={handleBodystage}\n\n              ></Column>\n              <Column\n                field=\"skill\"\n                header=\"Req. Skills\"\n                editor={(options) => reqSkillFnc(options)}\n                body={handleBodyskill}\n\n              ></Column>\n              <Column\n                field=\"reqCountry\"\n                header=\"Req.Location\t\"\n                editor={(options) => reqLocationFnc(options)}\n                body={handleBodyReqlocation}\n\n              ></Column>\n              <Column\n                field=\"sfa_url\"\n                header=\"SFA URL\"\n                editor={(options) => textEditor12(options)}\n                body={handleBodyUrl}\n\n              ></Column>\n              <Column\n                field=\"comments\"\n                header=\"Action Item\"\n                editor={(options) => textEditor13(options)}\n                body={handleBodyComment}\n\n              ></Column>\n            </DataTable>\n          </div>\n        ) : (\n          <div>\n            {/* {showSecondTable && ( */}\n            <div>\n              <DataTable\n                value={tableData}\n                className=\"primeReactDataTable\"\n                editMode=\"row\"\n                onRowEditComplete={onRowEditComplete}\n                tableStyle={{ minWidth: \"100rem\" }}\n                showGridlines\n                emptyMessage=\"No Data Found\"\n                paginator\n                rows={25}\n                rowsPerPageOptions={[10, 25, 50]}\n                scrollable={true}\n                scrollHeight=\"400px\"\n                scrollWidth=\"100%\"\n                header={header}\n                onSelectionChange={(e) => handleSelection(e)}\n                filters={filters}\n                paginationComponentOptions={{\n                  rowsPerPageText: \"Records per page:\",\n                  rangeSeparatorText: \"out of\",\n                }}\n                currentPageReportTemplate=\"View {first} - {last} of {totalRecords} \"\n              >\n                <Column\n                  field=\"customer\"\n                  header={(\n                    <div>\n                      <div style={{ display: 'inline-block', width: '10px', height: '10px', borderRadius: '50%', backgroundColor: 'green', marginRight: '5px' }}></div>\n                      <span>Customer</span>\n                      <br />\n                      <div style={{ display: 'inline-block', width: '10px', height: '10px', borderRadius: '50%', backgroundColor: 'purple', marginRight: '5px' }}></div>\n                      <span>Prospect</span>\n                    </div>\n                  )}\n                  editor={(options) => prospect(options)}\n                  body={handleBodyCustomerProspect}\n                ></Column>\n\n\n                <Column\n                  field=\"reqDept\"\n                  header=\"Req.BU\"\n                  editor={(options) => textEditor1(options)}\n                  body={handleBodyReq}\n                ></Column>\n                <Column\n                  field=\"poc\"\n                  header=\"Requested By\"\n                  body={handleBodyPoc}\n\n                ></Column>\n                <Column\n                  field=\"rrqId\"\n                  header=\"RRQ ID\"\n                  editor={(options) => rrqIdFnc(options)}\n                  body={handleBodyRrq}\n\n                ></Column>\n                <Column\n                  field=\"empId\"\n                  header=\"Emp ID\"\n                  editor={(options) => empIdFnc(options)}\n                  body={handleBodyEmp}\n\n                ></Column>\n                <Column\n                  field=\"res\"\n                  header=\"Resource Proposed\"\n                  editor={(options) => ResourceProposedFnc(options)}\n                  body={handleBodyResourceApproval}\n\n                ></Column>\n                <Column\n                  field=\"dept\"\n                  header=\"Resource BU\"\n                  body={handleBodyDept}\n\n                ></Column>\n                <Column\n                  field=\"country_name\"\n                  header=\"Res. Location\"\n                  body={handleBodyLocation}\n\n                ></Column>\n                <Column\n                  field=\"date\"\n                  header=\"Proposed On\t\"\n                  editor={(options) => proposedOnFnc(options)}\n                  body={handleBodyDate}\n\n                ></Column>\n                <Column\n                  field=\"stage\"\n                  header=\"Stage\"\n                  editor={(options) => stageFnc(options)}\n                  body={handleBodyStage}\n\n                ></Column>\n                <Column\n                  field=\"skill\"\n                  header=\"Req. Skills\"\n                  editor={(options) => reqSkillFnc(options)}\n                  body={handleBodySkill}\n\n                ></Column>\n                <Column\n                  field=\"reqCountry\"\n                  header=\"Req. Location\t\"\n                  editor={(options) => reqLocationFnc(options)}\n                  body={handleBodyReqLocation}\n\n                ></Column>\n                <Column\n                  field=\"sfa_url\"\n                  header=\"SFA URL\"\n                  editor={(options) => textEditor12(options)}\n                  body={handleBodySfaUrl}\n\n                ></Column>\n                <Column\n                  field=\"comments\"\n                  header=\"Action Item\"\n                  editor={(options) => textEditor13(options)}\n                  body={handleBodyComments}\n\n                ></Column>\n                <Column\n                  field=\"Actions\"\n                  header=\"Actions\"\n                  rowEditor\n                ></Column>\n              </DataTable>\n            </div>\n            {/* )} */}\n\n            <div className=\"tableBottom\">\n              <div className=\"col-md-12\" align=\"left\">\n                <button\n                  type=\"button\"\n                  className=\"btn btn-primary\"\n                  onClick={addHandler}\n                >\n                  <AiOutlinePlusSquare />\n                </button>\n              </div>\n            </div>\n\n          </div>\n        )}\n      </>\n    </div>\n  );\n}\n\nexport default ResourceRequest;\n","export function getTableData() {\n    let tabledata=[\n        {\n          customerProspect : 'Customer Prospect',\n          reqBu : 'Req. BU',\n          requestedBy : 'Requested By',\n          rrqId : 'RRQ ID',\n          empId : 'Emp ID',\n          resourceProposed : 'Resource Proposed',\n          resourceBu : 'Resource BU',\n          resLocation : 'Res Location',\n          proposedOn : 'Proposed On',\n          stage : 'Stage',\n          reqSkills : 'Req. Skills',\n          reqLocation : 'Req. Location',\n          sfaurl : 'SFA URL',\n          actionItem : 'Action Item'\n        }\n\n    ]\n return tabledata\n}"],"names":["useState","visible","setVisible","FaChevronCircleUp","cheveronIcon","setCheveronIcon","setDataAr","business","setBusiness","selectedBusiness","setSelectedBusiness","country","setCountry","location","setLocation","loggedUserId","localStorage","getItem","selectedCountry","setSelectedCountry","stage","setStage","fncDate","setFncDate","tabStage","setTabStage","selectedStage","setSelectedStage","tableData","setTableData","rowId","setRowId","resourcePoId","setresourcePoId","reqBu","setReqBu","resource","setResource","customer","setCustomer","date","displayState","setDisplayState","Date","employeeId","setEmployeeId","setPocId","sfaUrl","globalFilterValue","setGlobalFilterValue","validationMessage","setValidationMessage","resId","setResId","cusId","setCusId","global","value","matchMode","FilterMatchMode","filters","setFilters","ref","useRef","onRowEditComplete","e","_tableData","newData","index","handleAddClick","id","departmentId","customerId","isProspect","requestedPocId","rrqId","proposedResourceId","proposedDate","stageId","requestedSkills","requestedCountryId","SfaUrl","comments","createdById","formData","setFormData","reqBuIds","reqLocIds","stages","resType","resLocIds","action","setData","setSetData","baseUrl","environment","resourceFnc","axios","method","url","then","res","manger","data","console","log","catch","error","customerFnc","useEffect","handleClick","GlobalCancel","GlobalValidation","headers","response","GetData","i","length","moment","format","setOnChange","target","document","getElementsByClassName","click","setTimeout","addEventListener","slice","undefined","name","label","reqDeptId","pocId","skill","reqCountryId","sfa_url","Response","countries","forEach","countryObj","push","country_name","lkup_name","supp","val","defaultSelected","JSON","parse","stringify","filter","d","includes","tdata","customerProspect","requestedBy","empId","resourceProposed","resourceBu","resLocation","proposedOn","reqSkills","reqLocation","sfaurl","actionItem","exportExcel","xlsx","workbook","Sheets","utils","json_to_sheet","SheetNames","excelBuffer","write","bookType","type","saveAsExcelFile","buffer","fileName","module","default","Blob","saveAs","getTime","textEditor12","rowData","onChange","editorCallback","reqSkillFnc","title","textEditor13","rrqIdFnc","empIdFnc","className","ReactSearchAutocomplete","items","fuseOptions","keys","resultStringKeyName","inputSearchString","placeholder","onSelect","showIcon","prospect","options","prevProps","textEditor1","map","a","Item","selected","stageFnc","proposedOnFnc","prev","dateFormat","placeholderText","onKeyDown","preventDefault","ResourceProposedFnc","reqLocationFnc","onGlobalFilterChange","_filters","header","size","style","color","cursor","onClick","routes","setRoutes","getMenus","resp","item","display_name","ScreenBreadcrumbs","currentScreenName","GlobalHelp","pdfname","FaChevronCircleDown","htmlFor","ele","current","hasSelectAll","disabled","filteredCountry","prevVal","toString","display","width","height","borderRadius","backgroundColor","marginRight","editMode","tableStyle","minWidth","showGridlines","scrollable","scrollHeight","scrollWidth","onSelectionChange","handleSelection","emptyMessage","field","editor","body","reqDept","poc","department","resourceBUFnc","dept","reqCountry","paginator","rows","rowsPerPageOptions","paginationComponentOptions","rowsPerPageText","rangeSeparatorText","currentPageReportTemplate","rowEditor","align","dt"],"sourceRoot":""}