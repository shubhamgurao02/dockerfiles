{"version":3,"file":"static/js/2624.63dbb9e8.chunk.js","mappings":"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","sources":["views/VendorComponent/ResourceEditable.js","views/VendorComponent/VendorManagSummaryTable.js","views/VendorComponent/VendorManagementFilters.js","views/VendorComponent/VendorManagement.js","views/VendorComponent/VendorPerformanceFilters.js","views/UtilisationMetrics/NonBillableCollapsibleTable.js","views/UtilisationMetrics/NonBillableWork4weeksfilters.js","views/DeliveryComponent/ProjectHealth.js","views/UtilisationMetrics/BillableUtilizationTrendCollapsibleTable.js","views/UtilisationMetrics/BillableUtilisationTrendFilter.js","views/Teams/HierarchyTable.js","views/Teams/TeamsProjectHierarchyTree.js","views/Teams/TeamsProjectHierarchy.js","views/Teams/AccountHierarTable.js","views/Teams/AdminHierarchy.js","views/Teams/Hierarchy.js","views/UtilisationMetrics/UtilizationFYPopUp.js","views/UtilisationMetrics/UtilizationFyCollapsibleTable.js","views/UtilisationMetrics/UtilisationFY.js","views/UtilisationMetrics/PyramidIndexTable.js","views/UtilisationMetrics/PyramidIndex.js","views/Dashboard/CustomDashboardDeletePopUp.js","views/Dashboard/CustomMyDashboard.js","views/Dashboard/CustomOrgDashboard.js","views/Dashboard/CustomDashboard.js","routes.js","components/AppContent.js","components/AppHeader.js","components/header/HomeScreenPopUp.js","components/AppSidebarNav.js","components/AppSidebar.js","layout/DefaultLayout.js","views/Administration/ErrorLogsTable.js","views/Common/ScreenBreadcrumbs.js","views/CostComponent/UploadExcelSheet.js","views/Loader/Loader.js","views/PrimeReactTableComponent/CellRendererPrimeReactDataTable.js","views/PrimeReactTableComponent/CheckFlatPrimeReactTable.js","views/PrimeReactTableComponent/FlatPrimeReactTable.js","views/PrimeReactTableComponent/GlobalHelp.js","views/PrimeReactTableComponent/SavedSearchGlobal.js","views/ProgressComponent/competenciesTable.js","views/ProjectComponent/BaselineCheckboxtable.js","views/ProjectComponent/ProjectBaselines.js","views/PrimeReactTableComponent/CollapsibleTable.js","views/ProjectComponent/ProjectCompareBaseline.js","views/ProjectComponent/ProjectCompareBaselineTable.js","views/ProjectComponent/ProjectCreate.js","views/ProjectComponent/ProjectExpensePopOver.js","views/ResourceProfile/CutomerRoles.js","views/ResourceProfile/ProjectDetails.js","views/ResourceProfile/ProjectRoles.js","views/ResourceProfile/ReporteeDetails.js","views/ResourceProfile/SkillDetails.js","views/ResourceProfile/TrainingDetails.js","views/ResourceProfile/HierarchyViewTP.js","views/ResourceProfile/TeamsProfileHierarchy.js","views/ResourceProfile/RProfile.js","views/ResourceProfile/ResourceHierarchy.js","views/ResourceSkillsComponent/DisplayStar.js","views/RevenueMetrices/FlatPrimeReactTableRevenue.js","views/RevenueMetrices/ForecastProjectPopUp.js","views/RevenueMetrices/MarginAnalysisHierarchy.js","views/SalaryBand/SalaryBandTable.js","views/SalaryBand/SalaryBand.js","views/Teams/InnerOpen.js","views/Teams/InnerSearch.js","views/Teams/Profile.js","views/TimeAndExpenses/Expenses/ExpenseStackView.js","views/ValidationComponent/GlobalCancel.js","views/ValidationComponent/GlobalValidation.js","views/VendorComponent/Popup.js","views/VendorComponent/Resources.js","views/VendorComponent/SearchDefaultTable.js","views/VendorComponent/VendorPerformanceTable.js","views/VendorComponent/VendorPerformanceResourceTable.js","views/VendorComponent/VendorPerformanceTopMaterialTable.js","views/VendorComponent/VendorSearchTable.js"],"sourcesContent":["import React, { useRef } from \"react\";\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { environment } from \"../../environments/environment\";\nimport Popup from \"./Popup\";\nimport \"./Resources.scss\";\nimport axios from \"axios\";\nimport CellRendererPrimeReactDataTable from \"../PrimeReactTableComponent/CellRendererPrimeReactDataTable\";\nimport { Column } from \"primereact/column\";\nimport { Popover } from \"@coreui/coreui\";\nimport DatePicker from \"react-datepicker\";\nimport moment from \"moment\";\nimport ForecastProjectPopUp from \"../RevenueMetrices/ForecastProjectPopUp\";\nimport { AiOutlineLeftSquare, AiOutlineRightSquare } from \"react-icons/ai\";\nimport { BiX } from \"react-icons/bi\";\nimport { ReactSearchAutocomplete } from \"react-search-autocomplete\";\nimport { VscSave } from \"react-icons/vsc\";\nimport SearchDefaultTable from \"./SearchDefaultTable\";\nimport VendorSearchTable from \"./VendorSearchTable\";\nimport \"./VendorManagement.scss\";\n\nfunction Resources(props) {\n  const [popup, setPopup] = useState(false);\n  const [anchorEl, setAnchorEl] = useState(null);\n  const [name, setName] = useState(\"\");\n  const [searchapidata, setSearchApiData] = useState([]);\n  const [data, setData] = useState([]);\n  const [backupdata, setBackUpData] = useState([]);\n  const [backupdataNw, setBackUpDataNw] = useState([]);\n  const {\n    bodyDataa,\n    flag,\n    vendorId,\n    tableTitle,\n    colorFilter,\n    summaryData,\n    validationMsg,\n    contractIds,\n    searchHandle,\n  } = props;\n  const [exportData, setExportData] = useState([]);\n  const [headerData, setHeaderData] = useState([]);\n  const [bodyData, setBodyData] = useState([]);\n  const [colorsState, setColorsState] = useState([]);\n  const [resourceTable, setResourceTable] = useState([]);\n  const [LinkId, setLinkId] = useState();\n  const [allocationtable, setAllocationTable] = useState(false);\n  const graphRef1 = useRef(null);\n  const [graphKey1, setGraphKey1] = useState(0);\n  const [vendor, setVendor] = useState([]);\n  const [searchValue, setSearchValue] = useState({});\n  const [open, setOpen] = useState(false);\n  const [validation, setValidatioN] = useState(false);\n  const [validColor, setValidColor] = useState([]);\n  const [value, setValue] = useState(\"\");\n  //var color = [];\n  let firstColor = colorFilter[0];\n  let secondColor = colorFilter[1];\n  let thirdColor = colorFilter[2];\n  let contractType = [\n    \"<<Please Select>>\",\n    summaryData[0].contract,\n    summaryData[0].contract_hire,\n    summaryData[0].freelancer,\n    summaryData[0].fixed_bid,\n    summaryData[0].offered,\n    summaryData[0].on_exit_path,\n    summaryData[0].conv_in_prog,\n    summaryData[0].awaiting_conv,\n  ];\n  let skillType = [\n    \"<<Please Select>>\",\n    summaryData[2].name,\n    summaryData[3].name,\n  ];\n\n  const getVendors = () => {\n    axios\n      .get(`http://10.11.12.149:8090/VendorMS/vendor/getVendorsNameandId`)\n\n      .then((Response) => {\n        let vendors = [];\n        let data = Response.data;\n        data.length > 0 &&\n          data.forEach((e) => {\n            let vendorObj = {\n              label: e.name,\n              value: e.id,\n            };\n            vendors.push(vendorObj);\n          });\n        setVendor(vendors);\n        //setSelectedVendor(vendors);\n      })\n      .catch((error) => console.log(error));\n  };\n  useEffect(() => {\n    getVendors();\n  }, []);\n\n  useEffect(() => {\n    if (graphKey1 && graphRef1.current) {\n      graphRef1.current.scrollIntoView({ behavior: \"instant\" });\n    }\n  }, [graphKey1]);\n  var d = new Date();\n  var year = d.getFullYear();\n  var month1 = d.getMonth();\n  var day = d.getDate();\n  var c = new Date(year, month1, day - 7);\n\n  var date = moment(d).format(\"yyyy-MM-DD\");\n  var prev = moment(c).format(\"yyyy-MM-DD\");\n\n  const initialData = {\n    buIds: \"-1\",\n    country: \"-1\",\n    fromDate: prev,\n    toDate: date,\n    lkKey: \"total_hc\",\n    skillId: \"0\",\n    isExport: \"0\",\n    vendorId: vendorId,\n    page: \"\",\n    custId: \"0\",\n    projId: \"0\",\n    buId: \"0\",\n  };\n  const abortController = useRef(null);\n\n  const fetchdata = () => {\n    axios({\n      method: \"post\",\n      url: baseUrl + \"/VendorMS/management/getVendManagementResourceDtls\",\n      data: initialData,\n    })\n      .then(function (response) {\n        var response = response.data;\n        let Headerdata = [\n          {\n            employee_number: \"Emp ID\",\n            resource_name: \"Name\",\n            start_date: \"DOJ\",\n            department: \"Dept\",\n            supervisor: \"Supervisor\",\n            skills: \"Skill\",\n            projects: \"Projects\",\n            bill_allocs: \"Billable Allocs\",\n            bill_rate: \"Bill Rate($)\",\n            pay_rate: \"Pay Rate($)\",\n            gm_perc: \"GM%\",\n            alloc_end_date: \"Alloc End Date\",\n            contract_end_date: \"Contract End Date\",\n            ad_contract_end_date: \"AD Expiry Date\",\n            vendor_name: \"Vendor Name\",\n            contract_type: \"Contract Type\",\n            skill_type: \"Skill Type\",\n          },\n        ];\n        let hData = [];\n        let bData = [];\n        for (let index = 0; index < response.length; index++) {\n          if (index == 0) {\n            hData.push(response[index]);\n          } else {\n            bData.push(response[index]);\n          }\n        }\n\n        if (flag == 1) {\n          setData(Headerdata.concat(bodyDataa));\n          setBackUpData(Headerdata.concat(bodyDataa));\n          setBackUpDataNw(Headerdata.concat(bodyDataa));\n          setBodyData(bodyDataa);\n          setSearchApiData(bodyDataa);\n        } else {\n          setData(Headerdata.concat(bData));\n          setBackUpData(Headerdata.concat(bData));\n          setBackUpDataNw(Headerdata.concat(bData));\n          setBodyData(bData);\n          setSearchApiData(bData);\n        }\n      })\n      .catch(function (response) {\n        console.log(response);\n      });\n  };\n  let Headerdata = [\n    {\n      employee_number: \"Emp ID\",\n      resource_name: \"Name\",\n      start_date: \"DOJ\",\n      department: \"Dept\",\n      supervisor: \"Supervisor\",\n      skills: \"Skill\",\n      projects: \"Projects\",\n      bill_allocs: \"Billable Allocs\",\n      bill_rate: \"Bill Rate\",\n      pay_rate: \"Pay Rate\",\n      gm_perc: \"GM%\",\n      alloc_end_date: \"Alloc End Date\",\n      contract_end_date: \"Contract End Date\",\n      ad_contract_end_date: \"AD Expiry Date\",\n      vendor_name: \"Vendor Name\",\n      contract_type: \"Contract Type\",\n      skill_type: \"Skill Type\",\n    },\n  ];\n\n  const colorsData = {\n    \"#FF0\": \"Alloc End Date < Contract End Dt\",\n    \"#da4832\": \"Alloc End Date = Contract End Dt\",\n    \"#3dbb49\": \"Alloc End Date > Contract End Dt\",\n  };\n\n  const handleClose = () => {\n    setAnchorEl(false);\n  };\n\n  const baseUrl = environment.baseUrl;\n\n  useEffect(() => {\n    // data[0] && setHeaderData(JSON.parse(JSON.stringify(data[0])));\n    let imp = [\"XLS\"];\n    setExportData(imp);\n  }, []);\n  // useEffect(() => {\n  //   let imp = [\"XLS\"];\n  //   setExportData(imp);\n  // }, []);\n  const Table =\n    tableTitle == \"total_hc\"\n      ? \"Total HC Details\"\n      : tableTitle == \"contract\"\n      ? \"Contract Details\"\n      : tableTitle == \"contract_hire\"\n      ? \"Contract 2 Hire Details\"\n      : tableTitle == \"freelancer\"\n      ? \"Freelancer Details\"\n      : tableTitle == \"fixed_bid\"\n      ? \"Fixed Bid Details\"\n      : tableTitle == \"offered\"\n      ? \"Offered Details\"\n      : tableTitle == \"on_exit_path\"\n      ? \"On Exit Path Details\"\n      : tableTitle == \"conv_in_prog\"\n      ? \"Conv in Prog Details\"\n      : \"awaiting Conv - DP/CL Details\";\n\n  useEffect(() => {\n    fetchdata();\n  }, [vendorId]);\n  useEffect(() => {\n    if (flag === 1) {\n      setData(Headerdata.concat(bodyDataa));\n      setBackUpData(Headerdata.concat(bodyDataa));\n      setBackUpDataNw(Headerdata.concat(bodyDataa));\n    }\n  }, [bodyDataa, Table]);\n\n  const filteringColors = () => {\n    let colors = null;\n    if (bodyDataa?.length > 0) {\n      colors = bodyDataa.map(\n        (element) => element.alloc_contract_date_icon?.split(\"~\")[0]\n      );\n      let finalColors = [...new Set(colors)];\n      setColorsState(finalColors);\n    }\n  };\n\n  useEffect(() => {\n    filteringColors();\n  }, [bodyDataa]);\n\n  const handleClick = (event, name) => {\n    setName(name);\n    // setAnchorEl(true);\n    // setAnchorEl(e.currentTarget);\n  };\n\n  //color sorting\n\n  let table1 = (\n    <div className=\"legend red\">\n      <div className=\"legendCircle \"></div>\n      <div className=\"legendTxt\">Alloc End Date &gt; Contract End Dt </div>\n    </div>\n  );\n\n  let table2 = (\n    <div className=\"legend green\">\n      <div className=\"legendCircle\"></div>\n      <div className=\"legendTxt\"> Alloc End Date = Contract End Dt </div>\n    </div>\n  );\n\n  const table3 = (\n    <div className=\"legend amber\">\n      <div className=\"legendCircle\"></div>\n      <div className=\"legendTxt\"> Alloc End Date &lt; Contract End Dt </div>\n    </div>\n  );\n\n  const tableNew = (\n    <div className=\"row\">\n      <div className=\"legendContainer\">\n        {firstColor == \"#da4832\"\n          ? table1\n          : firstColor == \"#3dbb49\"\n          ? table2\n          : firstColor == \"#FF0\"\n          ? table3\n          : \"\"}\n        {secondColor == \"#da4832\"\n          ? table1\n          : secondColor == \"#3dbb49\"\n          ? table2\n          : secondColor == \"#FF0\"\n          ? table3\n          : \"\"}\n        {thirdColor === \"#da4832\"\n          ? table1\n          : thirdColor == \"#3dbb49\"\n          ? table2\n          : thirdColor == \"#FF0\"\n          ? table3\n          : \"\"}\n      </div>\n    </div>\n  );\n\n  const tooltipDept = (data) => {\n    return (\n      <div className=\"ellipsis\" data-toggle=\"tooltip\" title={data.department}>\n        {data.department}\n      </div>\n    );\n  };\n  const tooltipSupervisor = (data) => {\n    return (\n      <div className=\"ellipsis\" data-toggle=\"tooltip\" title={data.supervisor}>\n        {data.supervisor}\n      </div>\n    );\n  };\n  const tooltipProject = (data) => {\n    return (\n      <div className=\"ellipsis\" data-toggle=\"tooltip\" title={data.projects}>\n        {data.projects}\n      </div>\n    );\n  };\n  const tooltipSkills = (data) => {\n    return (\n      <div className=\"ellipsis\" data-toggle=\"tooltip\" title={data.skills}>\n        {data.skills}\n      </div>\n    );\n  };\n  const allocDtAlign = (data) => {\n    return (\n      <div\n        className=\"align center ellipsis\"\n        data-toggle=\"tooltip\"\n        title={data.alloc_end_date}\n      >\n        {data.alloc_end_date}\n      </div>\n    );\n  };\n  const contractDtAlign = (data) => {\n    return (\n      <div\n        className=\"align center ellipsis\"\n        data-toggle=\"tooltip\"\n        title={data.alloc_contract_date_icon}\n      >\n        {data.alloc_contract_date_icon}\n      </div>\n    );\n  };\n\n  const empNumber = (data) => {\n    return (\n      <div\n        className=\" ellipsis\"\n        data-toggle=\"tooltip\"\n        title={data.employee_number}\n      >\n        {data.employee_number}\n      </div>\n    );\n  };\n\n  const billAllocs = (data) => {\n    return (\n      <div className=\" ellipsis\" data-toggle=\"tooltip\" title={data.bill_allocs}>\n        <div className=\"align right\">{data.bill_allocs}</div>\n      </div>\n    );\n  };\n\n  const billRate = (data) => {\n    return (\n      <div className=\" ellipsis\" data-toggle=\"tooltip\" title={data.bill_rate}>\n        <div className=\"align right\">{data.bill_rate}</div>\n      </div>\n    );\n  };\n  const payRate = (data) => {\n    return (\n      <div className=\" ellipsis\" data-toggle=\"tooltip\" title={data.pay_rate}>\n        <div className=\"align right\">{data.pay_rate}</div>\n      </div>\n    );\n  };\n  const gmPerc = (data) => {\n    return (\n      <div className=\" ellipsis\" data-toggle=\"tooltip\" title={data.gm_perc}>\n        <div className=\"align right\">{data.gm_perc}</div>\n      </div>\n    );\n  };\n\n  const allocEndDate = (data) => {\n    return (\n      <div\n        className=\" ellipsis\"\n        data-toggle=\"tooltip\"\n        title={data.alloc_end_date}\n      >\n        {data.alloc_end_date}\n      </div>\n    );\n  };\n  const VendorName = (data) => {\n    return (\n      <div className=\" ellipsis\" data-toggle=\"tooltip\" title={data.vendor_name}>\n        {data.vendor_name}\n      </div>\n    );\n  };\n  const contractTypes = (data) => {\n    return (\n      <div\n        className=\" ellipsis\"\n        data-toggle=\"tooltip\"\n        title={data.contract_type}\n      >\n        {data.contract_type}\n      </div>\n    );\n  };\n\n  const StartDate = (data) => {\n    return (\n      <div className=\" ellipsis\" data-toggle=\"tooltip\" title={data.start_date}>\n        {data.start_date}\n      </div>\n    );\n  };\n  const skillTypes = (data) => {\n    return (\n      <div\n        className=\"align center ellipsis\"\n        data-toggle=\"tooltip\"\n        title={data.skill_type}\n      >\n        {data.skill_type}\n      </div>\n    );\n  };\n  const expDtAlign = (data) => {\n    return (\n      <div className=\"align center\" title={data.ad_contract_end_date}>\n        {data.ad_contract_end_date}\n      </div>\n    );\n  };\n  const LinkTemplate = (data) => {\n    return (\n      <div\n        className=\"legendContainer  ellipsis\"\n        onClick={(e) => {\n          handleClick(e, data.resource_name);\n          setLinkId(data.resource_id);\n          // getResourceTable(data.resource_id);\n          setAnchorEl(e.currentTarget);\n          setAllocationTable(false);\n        }}\n      >\n        {\" \"}\n        {data.alloc_contract_date_icon ==\n        \"#da4832~^Alloc End Date > Contract End Dt\" ? (\n          <div className=\"legend red\">\n            <div\n              className=\"legendCircle \"\n              data-toggle=\"tooltip\"\n              title={\"Alloc End Date > Contract End Dt\"}\n            ></div>\n            <div\n              className=\"ellipsis\"\n              data-toggle=\"popoverLink\"\n              to={Popover}\n              title={data.resource_name}\n              style={{ color: \"#15a7ea\", cursor: \"pointer\" }}\n            >\n              {data.resource_name}\n            </div>\n          </div>\n        ) : data.alloc_contract_date_icon ==\n            \"#3dbb49~^Alloc End Date = Contract End Dt\" ||\n          data.alloc_contract_date_icon == \"#3dbb49~^No Contract End Dt\" ? (\n          <div\n            className=\"legend green\"\n            to={Popover}\n            title={data.resource_name}\n            style={{ color: \"#15a7ea\", cursor: \"pointer\" }}\n          >\n            <div\n              className=\"legendCircle \"\n              data-toggle=\"tooltip\"\n              title={\"Alloc End Date = Contract End Dt\"}\n            ></div>\n            <div\n              className=\"ellipsis\"\n              data-toggle=\"popoverLink\"\n              title={data.resource_name}\n              style={{ color: \"#15a7ea\", cursor: \"pointer\" }}\n            >\n              {data.resource_name}\n            </div>\n          </div>\n        ) : data.alloc_contract_date_icon ==\n          \"#FF0~^Alloc End Date < Contract End Dt\" ? (\n          <div\n            className=\"legend amber\"\n            to={Popover}\n            style={{ color: \"#15a7ea\", cursor: \"pointer\" }}\n          >\n            <div\n              className=\"legendCircle \"\n              data-toggle=\"tooltip\"\n              title={\"Alloc End Date < Contract End Dt\"}\n            ></div>\n            <div\n              className=\"ellipsis \"\n              data-toggle=\"popoverLink\"\n              title={data.resource_name}\n              to={Popover}\n              style={{ color: \"#15a7ea\", cursor: \"pointer\" }}\n            >\n              {data.resource_name}\n            </div>\n          </div>\n        ) : (\n          \"\"\n        )}{\" \"}\n      </div>\n    );\n  };\n  //new\n  const handleChange = (rowData, field, value) => {\n    console.log(data, \"dataonchnge\");\n    setOpen(false);\n    const updatedData = [...data];\n    const rowIndex = updatedData.findIndex(\n      (item) => item.employee_number === rowData.employee_number\n    );\n    updatedData[rowIndex] = { ...rowData, [field]: value };\n    setData(updatedData);\n  };\n\n  const handleSearch = (rowData, field, value, result) => {\n    setValue(value);\n    const isTextInItems = vendor.some(\n      (item) => item.label.toLowerCase() == value.toLowerCase()\n    );\n    if (!isTextInItems) {\n      setSearchValue(rowData);\n      setOpen(true);\n    }\n  };\n  useEffect(() => {\n    if (open == true && value != \"\") {\n      document.addEventListener(\"click\", handleOutsideClick);\n      return () => {\n        document.removeEventListener(\"click\", handleOutsideClick);\n      };\n    } else if (open == true && value == \"\") {\n      handleOutsideClick();\n    }\n  }, [open][value]);\n  const handleOutsideClick = () => {\n    console.log(data, \"datasahid\");\n    const updatedData = [...data];\n    const rowIndex = updatedData.findIndex(\n      (item) => item.resource_id === searchValue.resource_id\n    );\n    updatedData[rowIndex] = { ...data[rowIndex], [\"vendor_name\"]: \"\" };\n    setData(updatedData);\n    setOpen(false);\n  };\n\n  const inputTwo = (rowData, col) => {\n    // console.log(validColor, 'validColor');\n    let rId = rowData.resource_id;\n    const isvNameInItems = validColor.some((item) => item.resource_id == rId);\n    let indexWhereMatched = validColor.findIndex(\n      (item) => item.resource_id === rId\n    );\n    return (\n      <div className=\"autoComplete-container cancel\">\n        <div\n          className={\n            isvNameInItems == true &&\n            validColor[indexWhereMatched].vendor_name == \"\" &&\n            backupdata[indexWhereMatched + 1].vendor_name != \"\"\n              ? \"error-block\"\n              : \"\"\n          }\n        >\n          <ReactSearchAutocomplete\n            //className=\"cancelNw\"\n            items={vendor}\n            id=\"VendorNameId\"\n            name=\"VendorNameId\"\n            type=\"text\"\n            inputSearchString={\n              rowData.vendor_name == \"\"\n                ? \"\"\n                : rowData.vendor_name == null\n                ? \"\"\n                : rowData.vendor_name\n            }\n            onSearch={(value, result) => {\n              handleSearch(rowData, \"vendor_name\", value, result);\n            }}\n            onSelect={(e) => {\n              handleChange(rowData, \"vendor_name\", e.label);\n            }}\n            fuseOptions={{ keys: [\"label\", \"value\"] }}\n            resultStringKeyName=\"label\"\n            showNoResults={false}\n            showClear={false}\n            placeholder=\"Type to Search\"\n            showIcon={false}\n          />\n        </div>\n      </div>\n    );\n  };\n  const inputThere = (rowData, col) => {\n    let rId = rowData.resource_id;\n    const isvNameInItems = validColor.some((item) => item.resource_id == rId);\n    let indexWhereMatched = validColor.findIndex(\n      (item) => item.resource_id === rId\n    );\n\n    return (\n      <>\n        <select\n          onChange={(e) =>\n            handleChange(rowData, \"contract_type\", e.target.value)\n          }\n          className={\n            isvNameInItems == true &&\n            (validColor[indexWhereMatched].contract_type == \"\" ||\n              validColor[indexWhereMatched].contract_type ==\n                \"<<Please Select>>\") &&\n            backupdata[indexWhereMatched + 1].contract_type != \"\"\n              ? \"error-block\"\n              : \"\"\n          }\n        >\n          {contractType.map((item) => (\n            <option\n              key={item}\n              value={item}\n              selected={item == rowData.contract_type}\n            >\n              {item}\n            </option>\n          ))}\n        </select>\n      </>\n    );\n  };\n\n  const inputFour = (rowData, col) => {\n    let rId = rowData.resource_id;\n    const isvNameInItems = validColor.some((item) => item.resource_id == rId);\n    let indexWhereMatched = validColor.findIndex(\n      (item) => item.resource_id === rId\n    );\n\n    return (\n      <div>\n        <select\n          className={\n            isvNameInItems == true &&\n            (validColor[indexWhereMatched].skill_type == \"\" ||\n              validColor[indexWhereMatched].skill_type ==\n                \"<<Please Select>>\") &&\n            backupdata[indexWhereMatched + 1].skill_type != \"\"\n              ? \"error-block\"\n              : \"\"\n          }\n          onChange={(e) => handleChange(rowData, \"skill_type\", e.target.value)}\n        >\n          {skillType.map((item) => (\n            <option\n              key={item}\n              value={item}\n              selected={item == rowData.skill_type}\n            >\n              {item}\n            </option>\n          ))}\n        </select>\n      </div>\n    );\n  };\n  const inputFive = (rowData, col) => {\n    let rId = rowData.resource_id;\n    const isvNameInItems = validColor.some((item) => item.resource_id == rId);\n    let indexWhereMatched = validColor.findIndex(\n      (item) => item.resource_id === rId\n    );\n\n    return (\n      <div>\n        <span>\n          {rowData.contract_end_date ? (\n            <DatePicker\n              className={\n                isvNameInItems == true &&\n                validColor[indexWhereMatched].contract_end_date == \"\" &&\n                backupdata[indexWhereMatched + 1].contract_end_date != \"\"\n                  ? \"error-block\"\n                  : \"\"\n              }\n              dateFormat=\"dd-MMM-yyyy\"\n              onKeyDown={(e) => {\n                e.preventDefault();\n              }}\n              selected={moment(rowData.contract_end_date).toDate()}\n              showMonthDropdown={true}\n              showYearDropdown={true}\n              onChange={(date) =>\n                handleChange(\n                  rowData,\n                  \"contract_end_date\",\n                  moment(date).format(\"YYYY-MM-DD\")\n                )\n              }\n            />\n          ) : (\n            <DatePicker\n              className={\n                isvNameInItems == true &&\n                validColor[indexWhereMatched].contract_end_date == \"\" &&\n                backupdata[indexWhereMatched + 1].contract_end_date != \"\"\n                  ? \"error-block\"\n                  : \"\"\n              }\n              dateFormat=\"dd-MMM-yyyy\"\n              onKeyDown={(e) => {\n                e.preventDefault();\n              }}\n              // selected={moment(rowData.contract_end_date).toDate()}\n              placeholderText=\"Select Date\"\n              showMonthDropdown={true}\n              showYearDropdown={true}\n              onChange={(date) =>\n                handleChange(\n                  rowData,\n                  \"contract_end_date\",\n                  moment(date).format(\"YYYY-MM-DD\")\n                )\n              }\n            />\n          )}\n        </span>\n      </div>\n    );\n  };\n\n  const dynamicColumns = Object.keys(headerData)?.map((col, i) => {\n    // var color = [];\n    return col == \"vendor_name\" ? (\n      <Column\n        sortable\n        key={col}\n        field={col}\n        header={headerData[col]}\n        style={{ width: \"10rem\" }}\n        body={inputTwo}\n      />\n    ) : col == \"contract_type\" ? (\n      <Column\n        sortable\n        key={col}\n        field={col}\n        header={headerData[col]}\n        style={{ width: \"10rem\" }}\n        body={inputThere}\n      />\n    ) : col == \"skill_type\" ? (\n      <Column\n        sortable\n        key={col}\n        field={col}\n        header={headerData[col]}\n        style={{ width: \"10rem\" }}\n        body={inputFour}\n      />\n    ) : col == \"contract_end_date\" ? (\n      <Column\n        sortable\n        key={col}\n        field={col}\n        header={headerData[col]}\n        style={{ width: \"10rem\" }}\n        body={inputFive}\n      />\n    ) : (\n      <Column\n        sortable\n        key={col}\n        body={\n          col == \"ad_contract_end_date\"\n            ? expDtAlign\n            : col == \"alloc_contract_date_icon\"\n            ? contractDtAlign\n            : col == \"alloc_end_date\"\n            ? allocDtAlign\n            : col == \"employee_number\"\n            ? empNumber\n            : col == \"skills\"\n            ? tooltipSkills\n            : col == \"projects\"\n            ? tooltipProject\n            : col == \"department\"\n            ? tooltipDept\n            : col == \"supervisor\"\n            ? tooltipSupervisor\n            : col == \"bill_allocs\"\n            ? billAllocs\n            : col == \"bill_rate\"\n            ? billRate\n            : col == \"pay_rate\"\n            ? payRate\n            : col == \"gm_perc\"\n            ? gmPerc\n            : col == \"alloc_end_date\"\n            ? allocEndDate\n            : col == \"vendor_name\"\n            ? VendorName\n            : col == \"contract_type\"\n            ? contractTypes\n            : col == \"start_date\"\n            ? StartDate\n            : col == \"skill_type\"\n            ? skillTypes\n            : col == \"resource_name\" && LinkTemplate\n        }\n        field={col}\n        header={headerData[col]}\n      />\n    );\n  });\n  //validation\n\n  const areArraysOfObjectsEqual = (arr1, arr2) => {\n    if (arr1.length !== arr2.length) {\n      return false;\n    }\n    for (let i = 0; i < arr1.length; i++) {\n      const obj1 = arr1[i];\n      const obj2 = arr2[i];\n      // Compare each property of the objects\n      for (const key in obj1) {\n        if (obj1.hasOwnProperty(key)) {\n          if (obj1[key] !== obj2[key]) {\n            return false;\n          }\n        }\n      }\n    }\n\n    return true;\n  };\n  const setValidation = (v) => {\n    validationMsg(v);\n  };\n\n  const handleSubmit = (e) => {\n    //setValidatioN(true);\n    let postData = [];\n    let color = [];\n    let validNw = true;\n    let valid = areArraysOfObjectsEqual(data, backupdata);\n    if (valid == true) {\n      setValidation(\"noChange\");\n      //validNw=false;\n    } else {\n      let count = 0;\n      console.log(data, \"datanotvalid\");\n      //let updatedData = [...data];\n      //let countS=0;\n      let obj = {};\n      for (let i = 1; i < data.length; i++) {\n        let vendorName = data[i].vendor_name;\n        let backupVendorName = backupdata[i].vendor_name;\n        let contractDate = data[i].contract_end_date;\n        let skillTypes = data[i].skill_type;\n        let contractTypes = data[i].contract_type;\n        if (\n          (backupVendorName != \"\" &&\n            (vendorName == \"\" ||\n              contractTypes == \"<<Please Select>>\" ||\n              skillTypes == \"<<Please Select>>\" ||\n              contractDate == \"\")) ||\n          (backupVendorName == \"\" &&\n            (vendorName != \"\" ||\n              contractTypes != \"\" ||\n              skillTypes != \"\" ||\n              contractDate != \"\"))\n        ) {\n          count++;\n          console.log(data[i], \"dadasahid\");\n\n          color.push(data[i]);\n          if (count == 1) {\n            //setValidatioN(true)\n            setValidation(\"notValid\");\n            validNw = false;\n          }\n        } else {\n          //countS++;\n          let obj1 = data[i];\n          let obj2 = backupdata[i];\n          if (!Object.is(obj1, obj2)) {\n            obj[\"id\"] = data[i].resource_id;\n            obj[\"ContractEndDate\"] = moment(\n              data[i].contract_end_date,\n              \"DD-MMM-YYYY\"\n            ).format(\"YYYY-MM-DD\");\n            obj[\"VendorId\"] = data[i].vendor_id;\n            Object?.keys(contractIds)?.forEach((ele) => {\n              if (contractIds[ele].lkup_name == data[i].contract_type) {\n                obj[\"ContractTypeId\"] = contractIds[ele].id;\n              }\n            });\n            obj[\"SkillTypeId\"] = data[i].skill_type == \"Core\" ? 1310 : 1311;\n            postData.push(obj);\n          }\n        }\n      }\n      setValidColor(color);\n      //setData(updatedData)\n      //console.log(postData, 'postdata');\n      //console.log(validNw, 'validNw');\n      if (validNw) {\n        axios({\n          method: \"post\",\n          url:\n            baseUrl + `/VendorMS/management/updateVendManagementResourceDtls`,\n          data: postData,\n        })\n          .then((res) => {\n            const responseData = res.data;\n            //console.log(responseData, 'responseDataAs');\n            setValidation(\"save\");\n          })\n          .catch((error) => {});\n        searchHandle();\n      }\n    }\n  };\n\n  //===========Resource Allocation API=======\n\n  const [resourcedate, setResourceDate] = useState(new Date());\n\n  // Calculate the first day of the current month based on resourcedate\n  const firstDayOfMonth = new Date(\n    resourcedate.getFullYear(),\n    resourcedate.getMonth(),\n    1\n  );\n\n  const loggedUserId = localStorage.getItem(\"resId\");\n  //console.log(firstDayOfMonth);\n\n  useEffect(() => {\n    getResourceTable();\n  }, [LinkId]);\n  let formattedMonth = moment(resourcedate).format(\"yyyy-MM-DD\");\n  //console.log(formattedMonth, \"formattedMonth\");\n\n  const dates = {\n    fromDate: moment(formattedMonth).startOf(\"month\").format(\"YYYY-MM-DD\"),\n    toDate: moment(formattedMonth)\n      .startOf(\"month\")\n      .add(\"month\", 0)\n      .format(\"YYYY-MM-DD\"),\n  };\n  const [dt, setDt] = useState(dates);\n\n  const addHandler = () => {\n    setDt((prev) => ({\n      ...prev,\n      [\"fromDate\"]: moment(dt.fromDate).add(\"month\", 1).format(\"YYYY-MM-DD\"),\n    }));\n    setDt((prev) => ({\n      ...prev,\n      [\"toDate\"]: moment(dt.toDate).add(\"month\", 1).format(\"YYYY-MM-DD\"),\n    }));\n  };\n\n  const subtractHandler = () => {\n    setDt((prev) => ({\n      ...prev,\n      [\"fromDate\"]: moment(dt.fromDate)\n        .subtract(\"month\", 1)\n        .format(\"YYYY-MM-DD\"),\n    }));\n    setDt((prev) => ({\n      ...prev,\n      [\"toDate\"]: moment(dt.toDate).subtract(\"month\", 1).format(\"YYYY-MM-DD\"),\n    }));\n  };\n\n  const getResourceTable = (e, id) => {\n    setResourceTable([]);\n    axios({\n      method: \"post\",\n      url: baseUrl + `/revenuemetricsms/metrics/getResourceTable`,\n      data: {\n        Src: \"project\",\n        Typ: \"allocations\",\n        ObjectId: LinkId,\n        FromDt: dt.toDate,\n        AllocType: \"billable\",\n        PrjSource: \"-1\",\n        contTerms: \"28,27,752,606,26,25,1024,612,608,609,610,611,750\",\n        engComps: \"-1\",\n        cslIds: \"-1\",\n        dpIds: \"-1\",\n        UserId: loggedUserId,\n      },\n    }).then(function (res) {\n      setResourceTable(res.data);\n    });\n  };\n  const [componentMounted, setComponentMounted] = useState(false);\n\n  useEffect(() => {\n    if (componentMounted) {\n      getResourceTable();\n    } else {\n      setComponentMounted(true);\n    }\n  }, [dt.toDate, componentMounted]);\n  return (\n    <>\n      <p className=\"font-weight-bold Vendor-sub-heading pb-0\">{Table}:</p>\n      <div className=\"mb-2\">{tableNew}</div>\n      <div className=\"totalHeadCountTable\">\n        <VendorSearchTable\n          data={data}\n          rows={10}\n          dynamicColumns={dynamicColumns}\n          headerData={headerData}\n          setHeaderData={setHeaderData}\n          exportData={exportData}\n          fileName=\"ResourceVendorManagement\"\n        />\n        {anchorEl && (\n          <Popup\n            // className=\"p\"\n            handleClose={handleClose}\n            anchorEl={anchorEl}\n            name={name}\n            LinkId={LinkId}\n            setAllocationTable={setAllocationTable}\n            setAnchorEl={setAnchorEl}\n            setGraphKey1={setGraphKey1}\n          />\n        )}\n        {allocationtable && (\n          <>\n            <div className=\"col-md-12 mt-2\">\n              <div className=\"collapseHeader revForcast\">\n                <div className=\"leftSection\">\n                  <span>{name}</span>\n                </div>\n                <div className=\"rightSection\" style={{ paddingLeft: \"865px\" }}>\n                  <span\n                    className=\"ml-2 chevronContainer\"\n                    ref={graphRef1}\n                    key={graphKey1}\n                  >\n                    <AiOutlineLeftSquare\n                      cursor=\"pointer\"\n                      size={\"2em\"}\n                      onClick={subtractHandler}\n                    />\n                    <span>{moment(dt.toDate).format(\"MMM-YYYY\")}</span>\n                    <AiOutlineRightSquare\n                      cursor=\"pointer\"\n                      size={\"2em\"}\n                      onClick={addHandler}\n                    />\n                  </span>\n                </div>\n                <BiX\n                  fontSize={\"20px\"}\n                  style={{ backgroundColor: \"#c6c0c0\", cursor: \"pointer\" }}\n                  onClick={() => {\n                    setAllocationTable(false);\n                  }}\n                />\n              </div>\n            </div>\n\n            <ForecastProjectPopUp\n              linkId={LinkId}\n              data={resourceTable}\n              expandedCols={[]}\n              colExpandState={[]}\n              // month={month}\n              // setMonth={setMonth}\n              // resourcedata={resourcedata}\n            />\n          </>\n        )}\n        <div className=\"col-md-12 my-5\" align=\"center\">\n          <button\n            className=\"btn btn-primary\"\n            onClick={() => {\n              handleSubmit();\n            }}\n          >\n            <VscSave />\n            Save\n          </button>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default Resources;\n","import React, { useEffect, useState } from \"react\";\nimport Resources from \"./Resources\";\nimport ResourceEditable from \"./ResourceEditable\";\nimport axios from \"axios\";\nimport { environment } from \"../../environments/environment\";\nimport Loader from \"../Loader/Loader\";\nimport { Refresh } from \"@mui/icons-material\";\n\nfunction VendorManagSummaryTable(props) {\n  const {\n    summaryDataNw,\n    formData,\n    formattedFromDate,\n    toDateFromDate,\n    setRefresh,\n    refresh,\n    validationM,\n    alldepartments,\n    allcountries,\n    abortController,\n    setValidation,\n  } = props;\n  console.log(abortController, \"abortController\");\n\n  const [data, setData] = useState([]);\n  const [displayTable, setDisplayTable] = useState(null);\n  const [displayHeader, setDisplayHeaders] = useState(null);\n  const [open, setOpen] = useState(false);\n  const [headerData, setHeaderData] = useState([]);\n  const [bodyData, setBodyData] = useState([]);\n  const [searchapidata, setSearchApiData] = useState([]);\n  const [tableTitle, srtTableTitle] = useState();\n  const [colorFilter, setColorFilter] = useState([]);\n  const [contractIds, setContractIds] = useState([{}]);\n  const [value, setValue] = useState(false);\n  const [summaryData, setSummaryData] = useState(summaryDataNw);\n  const [openNw, setOpenNw] = useState(false);\n\n  const searchHandle = () => {\n    console.log(\"issuesolve\");\n    axios({\n      method: \"post\",\n      url: baseUrl + `/VendorMS/management/getVendManagementSummary`,\n      data: {\n        buIds: alldepartments,\n        country: allcountries,\n        fromDate: formattedFromDate,\n        toDate: toDateFromDate,\n        isExport: 0,\n      },\n\n      headers: { \"Content-Type\": \"application/json\" },\n    }).then((response) => {\n      console.log(response.data, \"response.data\");\n      setSummaryData(response.data);\n      //displayTableFnc();\n    });\n  };\n\n  //setContractIds\n  console.log(tableTitle);\n  console.log(data);\n\n  const baseUrl = environment.baseUrl;\n  let flag = 1;\n\n  let tabHeaders = [\n    \"name\",\n    \"total_hc\",\n    \"contract\",\n    \"contract_hire\",\n    \"freelancer\",\n    \"fixed_bid\",\n    \"offered\",\n    \"on_exit_path\",\n    \"conv_in_prog\",\n    \"awaiting_conv\",\n  ];\n\n  useEffect(() => {\n    displayTableFnc();\n  }, [summaryData]);\n\n  useEffect(() => { }, [setData]);\n\n  const getresourcedtls = (skillType) => {\n    abortController.current = new AbortController();\n    axios({\n      method: \"post\",\n      url: baseUrl + `/VendorMS/management/getVendManagementResourceDtls`,\n      signal: abortController.current.signal,\n      data: {\n        buIds: formData.buIds,\n        country: formData.country,\n        fromDate: formattedFromDate,\n        toDate: toDateFromDate,\n        lkKey: skillType.a,\n        skillId: skillType.b,\n        isExport: 0,\n        vendorId: -1,\n        page: \"vmg\",\n        custId: \"0\",\n        projId: \"0\",\n        buId: \"0\",\n      },\n\n      headers: { \"Content-Type\": \"application/json\" },\n    }).then((response) => {\n      var response = response.data;\n      let hData = [];\n      let bData = [];\n      for (let index = 0; index < response.length; index++) {\n        if (index == 0) {\n          hData.push(response[index]);\n        } else {\n          bData.push(response[index]);\n        }\n      }\n      /*setTimeout(() => {\n        setRefresh(false);\n        setOpen(true);\n      }, 1000);*/\n      setHeaderData(hData);\n      setBodyData(bData);\n      setData(response);\n      setSearchApiData(bData);\n      setOpenNw(true);\n      //color sorting\n\n      let firstColor,\n        secondColor,\n        thirdColor = \"\",\n        count = 0;\n      firstColor = bData[0].alloc_contract_date_icon?.split(\"~\")[0];\n      secondColor = \"\";\n      console.log(firstColor, \"firstColor\");\n      for (let index = 0; index < bData.length; index++) {\n        let colorFind = bData[index].alloc_contract_date_icon?.split(\"~\")[0];\n        if (firstColor != colorFind && count == 0) {\n          secondColor = colorFind;\n          count++;\n        } else if (firstColor != colorFind && secondColor != colorFind) {\n          thirdColor = colorFind;\n          break;\n        }\n      }\n      const colorFilter = [firstColor, secondColor, thirdColor];\n      setColorFilter(colorFilter);\n    });\n  };\n  useEffect(() => {\n    setOpen(true);\n    setRefresh(false);\n  }, [data]);\n\n  const getContractId = () => {\n    axios\n      .get(`http://10.11.12.149:8090/VendorMS/management/getContractTypes`)\n\n      .then((Response) => {\n        let data = Response.data;\n        setContractIds(data);\n        console.log(data, \"cidResponse\");\n      })\n      .catch((error) => console.log(error));\n  };\n\n  const onclickHandler = (a, b) => {\n    setValidation(\"\");\n    setOpenNw(false);\n    setRefresh(false);\n    // a --- contract type\n    // b --- skill type\n\n    const temp = {};\n    temp[\"a\"] = a;\n    temp[\"b\"] = b;\n    getresourcedtls(temp);\n    getContractId();\n    srtTableTitle(a);\n    console.log(a);\n    console.log(b);\n  };\n\n  const displayTableFnc = () => {\n    setDisplayHeaders(() => {\n      return summaryData.map((element, index) => {\n        let tabHeader = [];\n        tabHeaders.forEach((inEle, inInd) => {\n          if (index === 0) {\n            let value = (\"\" + element[inEle]).includes(\"^&1\")\n              ? element[inEle].replaceAll(\"^&1\", \" \")\n              : element[inEle];\n            tabHeader.push(\n              <th\n                key={inInd}\n                style={{\n                  textAlign: \"center\",\n                }}\n                title={element[inEle]}\n              >\n                {value}\n              </th>\n            );\n          }\n        });\n        return <tr key={index}>{tabHeader}</tr>;\n      });\n    });\n    setDisplayTable(() => {\n      return summaryData.slice(1).map((element, index) => {\n        let tabData = [];\n        tabHeaders.forEach((inEle, inInd) => {\n          if (index === 0) {\n            tabData.push(\n              <td align={inInd > 0 ? \"right\" : \"left\"}>\n                <b>\n                  <span\n                    style={{\n                      cursor: inInd > 0 && element[inEle] != 0 ? \"pointer\" : \"\",\n                      color: inInd != 0 && element[inEle] != 0 ? \"#2e88c5\" : \"\",\n                    }}\n                    onClick={() => {\n                      inInd > 0 && element[inEle] != 0\n                        ? onclickHandler(inEle, element.id)\n                        : \"\";\n                    }}\n                    className=\"summary\"\n                    title={element[inEle]}\n                  >\n                    {element[inEle]}\n                  </span>\n                </b>\n              </td>\n            );\n          } else {\n            tabData.push(\n              <td align={inInd > 0 ? \"right\" : \"left\"}>\n                <span\n                  style={{\n                    cursor: inInd > 0 && element[inEle] != 0 ? \"pointer\" : \"\",\n                    color: inInd != 0 && element[inEle] != 0 ? \"#2e88c5\" : \"\",\n                  }}\n                  onClick={() => {\n                    inInd > 0 && element[inEle] != 0\n                      ? onclickHandler(inEle, element.id)\n                      : \"\";\n                  }}\n                  title={element[inEle]}\n                >\n                  {element[inEle]}\n                </span>\n              </td>\n            );\n          }\n          // }\n        });\n        return (\n          <tr\n            style={{\n              backgroundColor:\n                index === 1\n                  ? \"#f5d5a7 \"\n                  : index === 0\n                    ? \"#f4f4f4\"\n                    : \"#d8eaeac4\",\n            }}\n            key={index}\n          >\n            {tabData}\n          </tr>\n        );\n      });\n    });\n  };\n  const validationMsg = (v) => {\n    validationM(v);\n  };\n  return (\n    <div className=\"my-3 darkHeader\">\n      <table className=\"table table-bordered table-striped htmlTable \">\n        <thead>{displayHeader}</thead>\n        <tbody>{displayTable}</tbody>\n      </table>\n      <div>\n        {console.log(bodyData)}\n        {open === true && openNw == true && formData.viewBy == \"view\" ? (\n          <Resources\n            setRefresh={setRefresh}\n            refresh={Refresh}\n            tableTitle={tableTitle}\n            flag={flag}\n            headerData={headerData}\n            bodyDataa={bodyData}\n            setBodyData={setBodyData}\n            colorFilterR={colorFilter}\n          />\n        ) : (\n          \"\"\n        )}\n\n        {open === true && openNw == true && formData.viewBy == \"Edit\" ? (\n          <ResourceEditable\n            setRefresh={setRefresh}\n            refresh={Refresh}\n            tableTitle={tableTitle}\n            flag={flag}\n            headerData={headerData}\n            bodyDataa={bodyData}\n            setBodyData={setBodyData}\n            colorFilter={colorFilter}\n            summaryData={summaryData}\n            validationMsg={validationMsg}\n            contractIds={contractIds}\n            searchHandle={searchHandle}\n          />\n        ) : (\n          \"\"\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default VendorManagSummaryTable;\n","import React, { useEffect, useState, useRef } from \"react\";\nimport { MultiSelect } from \"react-multi-select-component\";\nimport axios from \"axios\";\nimport { environment } from \"../../environments/environment\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport VendorManagSummaryTable from \"./VendorManagSummaryTable\";\nimport moment from \"moment\";\nimport \"./VendorManagement.scss\";\nimport { CCollapse } from \"@coreui/react\";\nimport {\n  FaChevronCircleDown,\n  FaChevronCircleUp,\n  FaSearch,\n  FaCaretDown,\n} from \"react-icons/fa\";\nimport { FaCheck } from \"react-icons/fa\";\nimport Loader from \"../Loader/Loader\";\nimport { AiFillWarning } from \"react-icons/ai\";\nimport ScreenBreadcrumbs from \"../Common/ScreenBreadcrumbs\";\nimport GlobalHelp from \"../PrimeReactTableComponent/GlobalHelp\";\n\nfunction VendorManagementFilters(props) {\n  var sdate = moment().subtract(7, \"days\").format(\"DD-MMM-YYYY\");\n\n  const [startDate, setStartDate] = useState(moment(sdate)._d);\n  const [validator, setValidator] = useState(false);\n  const [endDate, setendDate] = useState(new Date());\n  const [country, setCountry] = useState([]);\n  const [selectedCountry, setSelectedCountry] = useState([]);\n  const [departments, setDepartments] = useState([]);\n  const [selectedDepartments, setSelectedDepartments] = useState([]);\n  const [open, setOpen] = useState(false);\n  const [summaryData, setSummaryData] = useState([]);\n  const [visible, setVisible] = useState(false);\n  const [cheveronIcon, setCheveronIcon] = useState(FaChevronCircleUp);\n  const [loader, setLoader] = useState(false);\n  const [refresh, setRefresh] = useState(false);\n  const [formDataNew, setFormDataNew] = useState();\n  const [message, setMessage] = useState(false);\n  const [validation, setValidation] = useState(false);\n  const [allDept, setAllDept] = useState([]);\n  const [allCountry, setAllCountry] = useState([]);\n  const targetElementRef = useRef(null);\n\n  const loggedUserId = localStorage.getItem(\"resId\");\n\n  const [routes, setRoutes] = useState([]);\n  let textContent = \"Vendors\";\n  let currentScreenName = [\"Resource Vendor Management\"];\n\n  const ArrowRenderer = ({ expanded }) => (\n    <>\n      {expanded ? (\n        <FaCaretDown className=\"chevronIcon\" />\n      ) : (\n        <FaCaretDown className=\"chevronIcon\" />\n      )}\n    </>\n  );\n\n  let alldepartments;\n  let allcountries;\n\n  const customValueRenderer = (selected, _options) => {\n    return selected.length === country.length ||\n      selected.length === departments.length\n      ? \"<< ALL >>\"\n      : selected.length === 0\n      ? \"<< Please Select >>\"\n      : selected.map((label) => {\n          return selected.length > 1 ? label.label + \",\" : label.label;\n        });\n  };\n\n  const initialValue = {\n    buIds: \"\",\n    country: \"\",\n    fromDate: \"\",\n    toDate: \"\",\n    viewBy: \"view\",\n  };\n\n  const [formData, setFormData] = useState(initialValue);\n  const baseUrl = environment.baseUrl;\n\n  const getCountries = () => {\n    axios\n      .get(baseUrl + `/CostMS/cost/getCountries`)\n\n      .then((Response) => {\n        let countries = [];\n\n        let data = Response.data;\n        data.length > 0 &&\n          data.forEach((e) => {\n            let countryObj = {\n              label: e.country_name,\n              value: e.id,\n            };\n            countries.push(countryObj);\n          });\n        setCountry(countries);\n        setSelectedCountry(countries);\n      })\n      .catch((error) => console.log(error));\n  };\n\n  useEffect(() => {\n    let countryList = [];\n    country.forEach((d) => {\n      countryList.push(d.value);\n    });\n    setFormData((prevVal) => ({\n      ...prevVal,\n      [\"country\"]: countryList.toString(),\n    }));\n  }, [country]);\n\n  const getDepartments = async () => {\n    const resp = await axios({\n      url: baseUrl + `/CostMS/cost/getDepartments`,\n    });\n\n    let departments = resp.data;\n    departments.push({ value: 0, label: \"Non-Revenue Units\" });\n    setDepartments(departments);\n    setSelectedDepartments(departments.filter((ele) => ele.value != 0));\n    let filteredDeptData = [];\n    departments.forEach((data) => {\n      if (data.value != 0) {\n        filteredDeptData.push(data.value);\n      }\n    });\n    setFormData((prevVal) => ({\n      ...prevVal,\n      [\"buIds\"]: filteredDeptData.toString(),\n    }));\n  };\n\n  const getMenus = () => {\n    // setMenusData\n\n    axios({\n      method: \"GET\",\n      url: baseUrl + `/CommonMS/master/getMenus?loggedUserId=${loggedUserId}`,\n    }).then((resp) => {\n      let data = resp.data;\n\n      data.forEach((item) => {\n        if (item.display_name === textContent) {\n          setRoutes([item]);\n        }\n      });\n    });\n  };\n\n  useEffect(() => {\n    getDepartments();\n    getCountries();\n    getMenus();\n  }, []);\n\n  const FromDateChangeHandler = (value, e) => {\n    setStartDate(value);\n    let frmdate = value;\n    let currdate = new Date();\n\n    frmdate > currdate ? setendDate(frmdate) : setendDate(currdate);\n  };\n  const ToDateChangeHandler = (value) => {\n    setendDate(value);\n  };\n  let formattedFromDate = moment(startDate).format(\"YYYY-MM-DD\");\n  let toDateFromDate = moment(endDate).format(\"YYYY-MM-DD\");\n\n  useEffect(() => {}, [summaryData]);\n\n  useEffect(() => {\n    if (selectedDepartments.length === departments) {\n      document.getElementsByClassName(\n        \"dropdown-heading-value\"\n      )[0].children[0].innerText = \"<<All>>\";\n    }\n  }, []);\n\n  // need to write API call for summary table\n  const searchHandle = () => {\n    setVisible(!visible);\n    visible\n      ? setCheveronIcon(FaChevronCircleUp)\n      : setCheveronIcon(FaChevronCircleDown);\n    // setValidation(\"\");\n    // if (valid == true) {\n    setValidation(true);\n    // }\n\n    // if (valid) {\n    //   return;\n    // }\n    setFormDataNew(formData);\n    let buDm = document.getElementById(\"bussinessUnit\").children[0].children[0];\n    let buDmCls = buDm.classList;\n\n    let cuDm = document.getElementById(\"countryids\").children[0].children[0];\n    let cuDmCls = cuDm.classList;\n\n    if (formData.buIds.length === 0) {\n      buDmCls.contains(\"txtBoxBorderColor\") === false &&\n        buDmCls.add(\"txtBoxBorderColor\");\n    }\n    if (formData.country.length === 0) {\n      cuDmCls.contains(\"txtBoxBorderColor\") === false &&\n        cuDmCls.add(\"txtBoxBorderColor\");\n    }\n\n    if (formData.buIds.length > 0) {\n      buDmCls.contains(\"txtBoxBorderColor\") &&\n        buDmCls.remove(\"txtBoxBorderColor\");\n    }\n    if (formData.country.length > 0) {\n      cuDmCls.contains(\"txtBoxBorderColor\") &&\n        cuDmCls.remove(\"txtBoxBorderColor\");\n    }\n\n    if (formData.buIds.length === 0 || formData.country.length === 0) {\n      setValidator(true);\n      return;\n    }\n\n    setValidator(false);\n    setLoader(false);\n    setOpen(false);\n\n    const departmentArray = formData.buIds.split(\",\");\n\n    alldepartments =\n      departmentArray.length === departments.length ? \"-1\" : formData.buIds;\n    setAllDept(alldepartments);\n\n    const countryArray = formData.country.split(\",\");\n\n    allcountries =\n      countryArray.length === country.length ? \"-1\" : formData.country;\n\n    setAllCountry(allcountries);\n    abortController.current = new AbortController();\n\n    axios({\n      method: \"post\",\n      url: baseUrl + `/VendorMS/management/getVendManagementSummary`,\n      signal: abortController.current.signal,\n      data: {\n        buIds: alldepartments,\n        country: allcountries,\n        fromDate: formattedFromDate,\n        toDate: toDateFromDate,\n        isExport: 0,\n      },\n\n      headers: { \"Content-Type\": \"application/json\" },\n    }).then((response) => {\n      setSummaryData(response.data);\n      setLoader(false);\n      setTimeout(() => {\n        setValidation(false);\n      }, 3000);\n      setOpen(true);\n    });\n  };\n\n  const validationMs = (v) => {\n    setValidation(v);\n    scrollToTarget(targetElementRef);\n  };\n\n  const scrollToTarget = (targetElementRef) => {\n    console.log(targetElementRef.current, \"targetElementRef\");\n    var body = document.body,\n      html = document.documentElement;\n    var height = Math.max(\n      body.scrollHeight,\n      body.offsetHeight,\n      html.clientHeight,\n      html.scrollHeight,\n      html.offsetHeight\n    );\n    if (targetElementRef.current) {\n      targetElementRef.current.scrollIntoView({\n        top: 0,\n        behavior: \"instant\",\n        block: \"start\",\n        inline: \"nearest\",\n      });\n    }\n  };\n  console.log(summaryData, \"summaryData\");\n  const abortController = useRef(null);\n  const handleAbort = () => {\n    abortController.current && abortController.current.abort();\n    setRefresh(false);\n  };\n  return (\n    <div>\n      <div ref={targetElementRef}>\n        {validation == \"noChange\" ? (\n          <div className=\"statusMsg error\">\n            <AiFillWarning />\n            No Modifications found to save\n          </div>\n        ) : validation == \"notValid\" ? (\n          <div className=\"statusMsg error\">\n            <AiFillWarning />\n            Please select valid values for highlighted fields\n          </div>\n        ) : (\n          validation == \"save\" && (\n            <div className=\"statusMsg success\">\n              <FaCheck /> Proposal saved successfully\n            </div>\n          )\n        )}\n      </div>\n      {validator ? (\n        <div className=\"errMsg\">\n          <span>Please Select Mandatory Fields</span>\n        </div>\n      ) : (\n        \"\"\n      )}\n\n      <div className=\"col-md-12\">\n        <div className=\"pageTitle\">\n          <div className=\"childOne\"></div>\n          <div className=\"childTwo\">\n            <h2>Resource Vendor Management</h2>\n          </div>\n          <div className=\"childThree\"></div>\n        </div>\n      </div>\n      <ScreenBreadcrumbs\n        routes={routes}\n        currentScreenName={currentScreenName}\n      />\n\n      <div class=\"group mb-3 customCard\">\n        <div class=\"group-content row mb-2\">\n          <div className=\"col-md-12 collapseHeader\">\n            <h2>Search Filters</h2>\n            <div className=\"helpBtn\">\n              <GlobalHelp />\n            </div>\n            <div\n              onClick={() => {\n                setVisible(!visible);\n                visible\n                  ? setCheveronIcon(FaChevronCircleUp)\n                  : setCheveronIcon(FaChevronCircleDown);\n              }}\n            >\n              <span>{cheveronIcon}</span>\n            </div>\n          </div>\n          <CCollapse visible={!visible}>\n            <>\n              <div className=\"form-group row mt-2\">\n                <div className=\"col-md-3 mb-2 \">\n                  <div className=\"row\">\n                    <label className=\"col-5 \">\n                      Business Unit&nbsp;\n                      <span className=\"required error-text\">*</span>{\" \"}\n                    </label>\n                    <span className=\"col-1 p-0\">:</span>\n                    <div className=\"col-6 \" id=\"bussinessUnit\">\n                      <MultiSelect\n                        id=\"buIds\"\n                        ArrowRenderer={ArrowRenderer}\n                        options={departments}\n                        hasSelectAll={true}\n                        isLoading={false}\n                        shouldToggleOnHover={false}\n                        disableSearch={false}\n                        value={selectedDepartments}\n                        valueRenderer={customValueRenderer}\n                        disabled={false}\n                        onChange={(s) => {\n                          setSelectedDepartments(s);\n                          let filteredValues = [];\n                          s.forEach((d) => {\n                            filteredValues.push(d.value);\n                          });\n\n                          setFormData((prevVal) => ({\n                            ...prevVal,\n                            [\"buIds\"]: filteredValues.toString(),\n                          }));\n                        }}\n                      />\n                    </div>\n                  </div>\n                </div>\n                <div className=\"col-md-3 mb-2\">\n                  <div className=\"form-group row \">\n                    <label className=\"col-5  \">\n                      Country &nbsp;\n                      <span className=\"required error-text\">*</span>\n                    </label>\n                    <span className=\"col-1 p-0\">:</span>\n                    <div className=\"col-6\">\n                      <div id=\"countryids\">\n                        <MultiSelect\n                          id=\"country\"\n                          ArrowRenderer={ArrowRenderer}\n                          options={country}\n                          hasSelectAll={true}\n                          value={selectedCountry}\n                          disabled={false}\n                          valueRenderer={customValueRenderer}\n                          onChange={(e) => {\n                            setSelectedCountry(e);\n                            let filteredCountry = [];\n                            e.forEach((d) => {\n                              filteredCountry.push(d.value);\n                            });\n                            setFormData((prevVal) => ({\n                              ...prevVal,\n                              [\"country\"]: filteredCountry.toString(),\n                            }));\n                          }}\n                        />\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                <div className=\"col-md-3 mb-2 row\">\n                  <label className=\"col-5 \">\n                    From &nbsp;<span className=\"required error-text\">*</span>\n                  </label>\n                  <span className=\"col-1 p-0\">:</span>\n                  <div className=\"col-6 \">\n                    <DatePicker\n                      dateFormat=\"dd-MMM-yyyy\"\n                      selected={startDate}\n                      showMonthDropdown\n                      showYearDropdown\n                      dropdownMode=\"select\"\n                      onChange={(value) => FromDateChangeHandler(value)}\n                      onKeyDown={(e) => {\n                        e.preventDefault();\n                      }}\n                    />\n                  </div>\n                </div>\n                <div className=\"col-md-3 mb-2 row\">\n                  <label className=\"col-5 \">\n                    To&nbsp;<span className=\"required error-text\">*</span>{\" \"}\n                  </label>\n                  <span className=\"col-1 p-0\">:</span>\n                  <div className=\"col-6\">\n                    <DatePicker\n                      dateFormat=\"dd-MMM-yyyy\"\n                      minDate={startDate}\n                      selected={endDate}\n                      showMonthDropdown\n                      showYearDropdown\n                      dropdownMode=\"select\"\n                      onChange={(value) => ToDateChangeHandler(value)}\n                      onKeyDown={(e) => {\n                        e.preventDefault();\n                      }}\n                    />\n                  </div>\n                </div>\n                <div className=\"col-md-3 mb-2 \">\n                  <div className=\"row\">\n                    <label className=\"col-5 \">Action</label>\n                    <span className=\"col-1 p-0\">:</span>\n                    <div className=\"col-6 \" id=\"action\">\n                      <select\n                        onChange={(e) => {\n                          setFormData((prevVal) => ({\n                            ...prevVal,\n                            [\"viewBy\"]: e.target.value,\n                          }));\n                        }}\n                      >\n                        <option value=\"view\">View</option>\n                        <option edit=\"edit\">Edit</option>\n                      </select>\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"col-md-12 mb-2\" align=\"center\">\n                <button className=\"btn btn-primary\" onClick={searchHandle}>\n                  <FaSearch />\n                  Search\n                </button>\n              </div>\n            </>\n          </CCollapse>\n        </div>\n\n        {loader ? <Loader handleAbort={handleAbort} /> : \"\"}\n        {refresh ? <Loader handleAbort={handleAbort} /> : \"\"}\n\n        {open === true ? (\n          <VendorManagSummaryTable\n            setRefresh={setRefresh}\n            refresh={refresh}\n            formData={formDataNew}\n            summaryDataNw={summaryData}\n            formattedFromDate={formattedFromDate}\n            toDateFromDate={toDateFromDate}\n            validationM={validationMs}\n            setValidation={setValidation}\n            alldepartments={allDept}\n            allcountries={allCountry}\n            abortController={abortController}\n          />\n        ) : (\n          \"\"\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default VendorManagementFilters;\n","import React from 'react'\nimport VendorManagementFilters from './VendorManagementFilters'\n\n\nfunction VendorManagement() {\n  return (\n    <div>\n        \n      <VendorManagementFilters/>\n    </div>\n  )\n}\n\nexport default VendorManagement\n","import React, { useEffect, useState, useRef } from \"react\";\nimport { environment } from \"../../environments/environment\";\nimport { MultiSelect } from \"react-multi-select-component\";\nimport axios from \"axios\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport moment from \"moment\";\nimport VendorPerformanceTable from \"./VendorPerformanceTable\";\nimport {\n  FaCaretDown,\n  FaChevronCircleDown,\n  FaChevronCircleUp,\n  FaSearch,\n} from \"react-icons/fa\";\nimport { CCollapse } from \"@coreui/react\";\nimport \"./VendorManagement.scss\";\nimport GlobalValidation from \"../ValidationComponent/GlobalValidation\";\nimport Loader from \"../Loader/Loader\";\nimport ScreenBreadcrumbs from \"../Common/ScreenBreadcrumbs\";\n//import VendorPerformanceResourceTable from \"./VendorPerformanceResourceTableSahid\";\n\nfunction VendorPerformanceFilters(props) {\n  const [vendor, setVendor] = useState([]);\n  const [selectedVendor, setSelectedVendor] = useState([]);\n  const [country, setCountry] = useState([]);\n  const [selectedCountry, setSelectedCountry] = useState([]);\n  const [date, setDate] = useState(new Date());\n  const [performanceData, setPerformanceData] = useState([]);\n  const [open, setOpen] = useState(false);\n  const [loader, setLoader] = useState(false);\n  const abortController = useRef(null);\n\n  const ref = useRef([]);\n  const [visible, setVisible] = useState(false);\n  const [cheveronIcon, setCheveronIcon] = useState(FaChevronCircleUp);\n  const [validator, setValidator] = useState(false);\n  const [openNw, setOpenNw] = useState(false);\n  const loggedUserId = localStorage.getItem(\"resId\");\n  const [routes, setRoutes] = useState([]);\n  let textContent = \"Vendors\";\n  let currentScreenName = [\"Resource Vendor Performance\"];\n\n  const baseUrl = environment.baseUrl;\n  let allCountry;\n  let allVendor;\n\n  const customValueRenderer = (selected, _options) => {\n    //console.log(selected);\n    //console.log(country.length);\n    return selected.length === country.length ||\n      selected.length === vendor.length\n      ? \"<< ALL >>\"\n      : selected.length === 0\n        ? \"<< Please Select >>\"\n        : selected.map((label) => {\n          return selected.length > 1 ? label.label + \",\" : label.label;\n        });\n  };\n  // const[duration,setDuration]=useState([])\n  // const[viewBy,setViewBy]=useState([])\n  //var date = new Date();\n  let converteddate = moment(date).startOf(\"month\").format(\"yyyy-MM-DD\");\n  const initialValue = {\n    vendorList: \"\",\n    month: converteddate,\n    duration: \"6\",\n    countryIds: \"\",\n    summary: \"vendor\",\n  };\n\n  const [formData, setFormData] = useState(initialValue);\n\n  //const baseUrl = environment.baseUrl;\n  const handleChangeDate = (date) => {\n    setDate(date);\n  };\n\n  const FilterChangeHandler = (e) => {\n    const { id, value } = e.target;\n    setFormData((prevVal) => ({ ...prevVal, [id]: value }));\n  };\n\n  const getCountries = () => {\n    axios\n      .get(`http://10.11.12.149:8090/CostMS/cost/getCountries`)\n\n      .then((Response) => {\n        let countries = [];\n        let data = Response.data;\n        data.length > 0 &&\n          data.forEach((e) => {\n            let countryObj = {\n              label: e.country_name,\n              value: e.id,\n            };\n            countries.push(countryObj);\n          });\n        setCountry(countries);\n        setSelectedCountry(countries);\n      })\n      .catch((error) => console.log(error));\n  };\n\n  useEffect(() => {\n    let countryList = [];\n    country.forEach((d) => {\n      countryList.push(d.value);\n    });\n    setFormData((prevVal) => ({\n      ...prevVal,\n      [\"country\"]: countryList.toString(),\n    }));\n  }, [country]);\n\n  const getVendors = () => {\n    axios\n      .get(`http://10.11.12.149:8090/VendorMS/vendor/getVendorsNameandId`)\n\n      .then((Response) => {\n        let vendors = [];\n        let data = Response.data;\n        data.length > 0 &&\n          data.forEach((e) => {\n            let vendorObj = {\n              label: e.name,\n              value: e.id,\n            };\n            vendors.push(vendorObj);\n          });\n        setVendor(vendors);\n        setSelectedVendor(vendors);\n      })\n      .catch((error) => console.log(error));\n  };\n\n  const ArrowRenderer = ({ expanded }) => (\n    <>\n      {expanded ? (\n        <FaCaretDown className=\"chevronIcon\" />\n      ) : (\n        <FaCaretDown className=\"chevronIcon\" />\n      )}\n    </>\n  );\n\n  const getMenus = () => {\n    // setMenusData\n\n    axios({\n      method: \"GET\",\n      url: baseUrl + `/CommonMS/master/getMenus?loggedUserId=${loggedUserId}`,\n    }).then((resp) => {\n      let data = resp.data;\n\n      data.forEach((item) => {\n        if (item.display_name === textContent) {\n          setRoutes([item]);\n        }\n      });\n    });\n  };\n\n  useEffect(() => {\n    let vendorsList = [];\n    vendor.forEach((d) => {\n      vendorsList.push(d.value);\n    });\n    setFormData((prevVal) => ({\n      ...prevVal,\n      [\"vendor\"]: vendorsList.toString(),\n    }));\n  }, [vendor]);\n\n  useEffect(() => {\n    getCountries();\n    getVendors();\n    getMenus()\n  }, []);\n\n  const handlesearch = (e) => {\n    // setValidator(true);\n    //console.log(converteddate, \"converteddate\");\n    setFormData((prevVal) => ({\n      ...prevVal,\n      month: converteddate,\n    }));\n\n    // console.log(formData.month, \"formData.monthafterclick\");\n    setOpen(true);\n    let valid = GlobalValidation(ref);\n    //console.log(valid);\n\n    if (valid) {\n      setValidator(true);\n      return;\n    }\n    // const countryArray = formData.country.split(\",\");\n    allCountry =\n      selectedCountry.length === country.length ? \"-1\" : formData.countryIds;\n    // const vendorArray = formData.vendor.split(\",\");\n    //console.log(formData.countryIds, \"insidevpafclcountry\");\n    //console.log(formData.vendorList, \"formData.vendorList\");\n    allVendor =\n      selectedVendor.length === vendor.length ? \"-1\" : formData.vendorList;\n    // console.log(selectedVendor);\n    //console.log(formData.summary, \"formData.summary\");\n    abortController.current = new AbortController();\n\n    axios({\n      method: \"post\",\n      url: `http://10.11.12.149:8090/VendorMS/performance/getVendorperformance`,\n      signal: abortController.current.signal,\n      data: {\n        vendorList: allVendor,\n        month: converteddate,\n        duration: formData.duration,\n        countryIds: allCountry,\n        summary: formData.summary,\n      },\n\n      headers: { \"Content-Type\": \"application/json\" },\n    })\n      .then((response) => {\n        var resp = response.data;\n        setVisible(!visible);\n        setPerformanceData(resp);\n        setOpenNw(true);\n      })\n      .catch((e) => {\n        console.log(e);\n      });\n    setLoader(true);\n  };\n  useEffect(() => {\n    if (openNw == true) {\n      setLoader(false);\n    }\n  }, [openNw]);\n\n  const handleAbort = () => {\n    abortController.current && abortController.current.abort();\n    setLoader(false);\n  };\n\n  return (\n    <div>\n      {validator ? (\n        <div className=\"statusMsg error\">\n          <span>Please Select Mandatory Fields</span>\n        </div>\n      ) : (\n        \"\"\n      )}\n\n      <div className=\"col-md-12\">\n        <div className=\"pageTitle\">\n          <div className=\"childOne\"></div>\n          <div className=\"childTwo\">\n            <h2>Resource Vendor Performance</h2>\n          </div>\n          <div className=\"childThree\"></div>\n        </div>\n      </div>\n      <ScreenBreadcrumbs\n        routes={routes}\n        currentScreenName={currentScreenName}\n      />\n      <div class=\"group mb-3 customCard\">\n        <div className=\"col-md-12 collapseHeader\">\n          <h2>Search Filters</h2>\n          <div\n            onClick={() => {\n              setVisible(!visible);\n              visible\n                ? setCheveronIcon(FaChevronCircleUp)\n                : setCheveronIcon(FaChevronCircleDown);\n            }}\n          >\n            <span>{cheveronIcon}</span>\n          </div>\n        </div>\n        <CCollapse visible={!visible}>\n          <>\n            <div className=\"group-content row mt-2\">\n              <div className=\"col-md-3 mb-2 \">\n                <div className=\"row\">\n                  <label className=\"col-5 \">\n                    Vendors<span className=\"required error-text ml-1\"> *</span>{\" \"}\n                  </label>\n                  <span className=\"col-1 p-0\">:</span>\n                  <div\n                    className=\"col-6 multiselect\"\n                    ref={(ele) => {\n                      ref.current[0] = ele;\n                    }}\n                    id=\"Vendors\"\n                  >\n                    <MultiSelect\n                      ArrowRenderer={ArrowRenderer}\n                      id=\"Vendors\"\n                      options={vendor}\n                      hasSelectAll={true}\n                      isLoading={false}\n                      shouldToggleOnHover={false}\n                      disableSearch={false}\n                      value={selectedVendor}\n                      disabled={false}\n                      valueRenderer={customValueRenderer}\n                      onChange={(s) => {\n                        setSelectedVendor(s);\n                        let filteredValues = [];\n                        s.forEach((d) => {\n                          filteredValues.push(d.value);\n                        });\n\n                        setFormData((prevVal) => ({\n                          ...prevVal,\n                          [\"vendorList\"]: filteredValues.toString(),\n                        }));\n                      }}\n                    />\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"col-md-3 mb-2\">\n                <div className=\"row\">\n                  <label className=\"col-5\">Month </label>\n                  <span className=\"col-1 p-0\">:</span>\n                  <div className=\"col-6 \">\n                    <DatePicker\n                      id=\"month\"\n                      selected={moment(date)._d}\n                      onChange={(e) => {\n                        handleChangeDate(e);\n                      }}\n                      dateFormat=\"MMM-yyyy\"\n                      showMonthYearPicker\n                      onKeyDown={(e) => {\n                        e.preventDefault();\n                      }}\n                    />\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"col-md-3 mb-2\">\n                <div className=\"row\">\n                  <label className=\"col-md-5\">Duration </label>\n                  <span className=\"col-1 p-0\">:</span>\n                  <div className=\"col-6\">\n                    <select\n                      id=\"duration\"\n                      onChange={(e) => FilterChangeHandler(e)}\n                      name=\"duration\"\n                      className=\"col-md-12 col-sm-12 col-xs-12 \"\n                      defaultValue={\"6\"}\n                    >\n                      <option value=\"1\">1</option>\n                      <option value=\"2\">2</option>\n                      <option value=\"3\">3</option>\n                      <option value=\"4\">4</option>\n                      <option value=\"5\">5</option>\n                      <option value=\"6\">6</option>\n                    </select>\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"col-md-3 mb-2\">\n                <div className=\"row\">\n                  <label className=\"col-5 \">\n                    Country<span className=\"required error-text ml-1\"> *</span>{\" \"}\n                  </label>\n                  <span className=\"col-1 p-0\">:</span>\n                  <div\n                    className=\"col-6 multiselect\"\n                    ref={(ele) => {\n                      ref.current[1] = ele;\n                    }}\n                    id=\"countryids\"\n                  >\n                    <MultiSelect\n                      ArrowRenderer={ArrowRenderer}\n                      id=\"country\"\n                      options={country}\n                      hasSelectAll={true}\n                      value={selectedCountry}\n                      disabled={false}\n                      valueRenderer={customValueRenderer}\n                      onChange={(e) => {\n                        setSelectedCountry(e);\n                        let filteredCountry = [];\n                        e.forEach((d) => {\n                          filteredCountry.push(d.value);\n                        });\n                        setFormData((prevVal) => ({\n                          ...prevVal,\n                          [\"countryIds\"]: filteredCountry.toString(),\n                        }));\n                      }}\n                      labelledBy={\"countries\"}\n                    />\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"col-md-3 mb-2\">\n                <div className=\"row\">\n                  <label className=\"col-5 \">ViewBy </label>\n                  <span className=\"col-1 p-0\">:</span>\n                  <div className=\"col-6\">\n                    <select\n                      id=\"summary\"\n                      onChange={(e) => FilterChangeHandler(e)}\n                      name=\"summary\"\n                      defaultValue={\"vendor\"}\n                    >\n                      <option value=\"vendor\">Vendor</option>\n                      <option value=\"customer\">Customer</option>\n                      <option value=\"bu\">BU</option>\n                    </select>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className=\"col-md-12 col-sm-12 col-xs-12 my-2 btn-container center\">\n              <button className=\"btn btn-primary\" onClick={() => {\n                setOpenNw(false);\n                handlesearch();\n\n              }}>\n                <FaSearch />\n                Search\n              </button>\n            </div>\n          </>\n        </CCollapse>\n      </div>\n      {loader ? <Loader handleAbort={handleAbort} /> : \"\"}\n      {open === true && openNw == true ? (\n        <VendorPerformanceTable\n          performanceData={performanceData}\n          formData={formData}\n        />\n      ) : (\n        \"\"\n      )}\n    </div>\n  );\n}\n\nexport default VendorPerformanceFilters;\n","import React, { useState, useEffect, useMemo } from \"react\";\nimport MaterialReactTable from \"material-react-table\";\nimport { IconButton } from \"@mui/material\";\nimport { AiFillLeftCircle, AiFillRightCircle } from \"react-icons/ai\";\nimport fte_active from \"../../assets/images/empstatusIcon/fte_active.png\";\nimport fte_inactive from \"../../assets/images/empstatusIcon/fte_inactive.png\";\nimport fte_notice from \"../../assets/images/empstatusIcon/fte_notice.png\";\nimport subk_active from \"../../assets/images/empstatusIcon/subk_active.png\";\nimport subk_inactive from \"../../assets/images/empstatusIcon/subk_inactive.png\";\nimport subk_notice from \"../../assets/images/empstatusIcon/subk_notice.png\";\nimport { CListGroup } from \"@coreui/react\";\nimport \"./NonBillableCollapsibleTable.scss\";\nimport { BiChevronRight, BiChevronUp } from \"react-icons/bi\";\n\nexport default function NonBillableCollapsibleTable(props) {\n  const icons = {\n    fte0: (\n      <img\n        src={fte_inactive}\n        alt=\"(fte_inactive_icon)\"\n        style={{ height: \"12px\", float: \"left\" }}\n        title=\"Ex-Employee\"\n      />\n    ),\n    fte1: (\n      <img\n        src={fte_active}\n        alt=\"(fte_active_icon)\"\n        style={{ height: \"12px\", float: \"left\" }}\n        title=\"Active Employee\"\n      />\n    ),\n    fte2: (\n      <img\n        src={fte_notice}\n        alt=\"(fte_notice_icon)\"\n        style={{ height: \"12px\", float: \"left\" }}\n        title=\"Employee in notice period\"\n      />\n    ),\n    subk0: (\n      <img\n        src={subk_inactive}\n        alt=\"(subk_inactive_icon)\"\n        style={{ height: \"12px\", float: \"left\" }}\n        title=\"Ex-Contractor\"\n      />\n    ),\n    subk1: (\n      <img\n        src={subk_active}\n        alt=\"(subk_active_icon)\"\n        style={{ height: \"12px\", width: \"auto\", float: \"left\" }}\n        title=\"Active Contractor\"\n        size=\"1em\"\n      />\n    ),\n    subk2: (\n      <img\n        src={subk_notice}\n        alt=\"(subk_notice_icon)\"\n        style={{ height: \"12px\", float: \"left\" }}\n        title=\"Contractor in notice period\"\n      />\n    ),\n  };\n  const { data, expandedCols, colExpandState } = props;\n  const [nodes, setNodes] = useState([]);\n  const [columns, setColumns] = useState(null);\n  const [hiddenColumns, setHiddenColumns] = useState({});\n  const [colExpFlag, setColumnExpFlag] = useState(false);\n  const [headers, setHeaders] = useState([]);\n  const numberWithCommas = (x) => {\n    var number = String(x);\n    if (number.includes(\".\")) {\n      var decimalNumbers = number;\n      var num = Number(decimalNumbers);\n      let FdN =\n        num != null &&\n        num.toLocaleString(\"en-US\", {\n          minimumFractionDigits: 2,\n          maximumFractionDigits: 20,\n        });\n      let final = FdN.split(\".\");\n      final[0] = final[0].replace(/(?<=\\d)(?=(\\d{3})+(?!\\d|\\.))/g, \",\");\n\n      // Ensure exactly two decimal places\n      final[1] = final[1].padEnd(2, \"0\"); // Add zeros if necessary\n      return final.join(\".\");\n    } else {\n      return (\n        number != null &&\n        parseFloat(number)\n          .toLocaleString(\"en-US\", {\n            minimumFractionDigits: 2,\n            maximumFractionDigits: 20,\n          })\n          .replace(/(?<=\\d)(?=(\\d{3})+(?!\\d|\\.))/g, \",\")\n      );\n    }\n  };\n  const formatValue = (value) => {\n    if (typeof value === \"number\") {\n      const num = Number(value);\n      return num.toLocaleString(\"en-US\", {\n        minimumFractionDigits: 2,\n        maximumFractionDigits: 20,\n      });\n    } else if (typeof value === \"string\") {\n      return value;\n    } else {\n      return value; // For other types, return as-is\n    }\n  };\n\n  useEffect(() => {\n    getData();\n  }, [data.tableData]);\n  var count = 0;\n  const getData = () => {\n    let expandClass = \"\";\n    if (colExpFlag == true && count > 0) {\n      expandClass = \"expanded\";\n    } else {\n      expandClass = \"\";\n    }\n    let tableData = data.tableData;\n    let columns = null;\n\n    if (data?.columns?.includes(\"'\")) {\n      columns = data?.columns?.replaceAll(\"'\", \"\");\n    } else {\n      columns = data?.columns;\n    }\n\n    let colArr = columns?.split(\",\");\n\n    let newHeaders = [];\n    let hiddenHeaders = [];\n    const obj = {};\n\n    for (let i = 0; i < colArr?.length; i++) {\n      let colVal = colArr[i].trim();\n\n      let firstData = data.tableData[0];\n\n      obj[colVal] = firstData[colVal];\n    }\n    let headerArray = Object.entries(obj);\n\n    let filteredHeaders = headerArray\n      .map(([key, value]) => {\n        if (typeof value === \"string\" && value.includes(\"^&\")) {\n          return [key, value];\n        } else if (key === \"Total^&1^&1\") {\n          return [\"total\", \"Total\"];\n        }\n        return null; // Remove this key-value pair from the filtered array\n      })\n      .filter((pair) => pair !== null);\n\n    setHeaders(filteredHeaders);\n\n    filteredHeaders.map(([key, value]) => {\n      if (expandedCols.includes(key)) {\n        hiddenHeaders.push({ [key]: false });\n      }\n    });\n\n    setHiddenColumns(Object.assign({}, ...hiddenHeaders));\n\n    filteredHeaders.map(([key, value], index) => {\n      newHeaders.push({\n        accessorKey: key,\n        header: value.split(\"^&\")[0],\n        enableColumnActions: false,\n        enableHiding: true,\n        Header: ({ column }) => (\n          <div>\n            {value.split(\"^&\")[0]}{\" \"}\n            {key == colExpandState[2] ? (\n              <span className={`expandIcon ${expandClass}`}>\n                <IconButton\n                  onClick={() => {\n                    setColumnExpFlag((prev) => !prev);\n                  }}\n                >\n                  <BiChevronRight />\n                </IconButton>\n              </span>\n            ) : (\n              \"\"\n            )}\n          </div>\n        ),\n\n        Cell: ({ cell }) => {\n          const cellValue = cell.getValue() !== null ? cell.getValue() : \"\";\n          const nameWithoutSpecialChars = cellValue.replace(\n            /\\^&\\d+\\^&\\d+/g,\n            \"\"\n          );\n          return (\n            <div\n              style={{\n                whiteSpace: \"nowrap\",\n                overflow: \"hidden\",\n                textOverflow: \"ellipsis\",\n              }}\n              title={\n                cell.column.id === \"name\" && cell.row.original.projectId === 0\n                  ? nameWithoutSpecialChars // Use the modified name here\n                  : key.includes(\"_\") && key.split(\"_\")[2]\n                  ? numberWithCommas(nameWithoutSpecialChars) // Use cellValue here\n                  : key.includes(\"total\")\n                  ? numberWithCommas(cell.row.original.total)\n                  : formatValue(nameWithoutSpecialChars) // Use cellValue here\n              }\n              className={\n                key.includes(\"_wk\")\n                  ? key.split(\"_wk\")[3] % 2 === 0\n                    ? \"even\"\n                    : \"odd\"\n                  : key.includes(\"total\")\n                  ? \"total\"\n                  : \"\"\n              }\n            >\n              {cell.column.id == \"name\" && cell.row.original.lvl == 0 ? (\n                <>{cell.getValue()}</>\n              ) : cell.column.id == \"name\" && cell.row.original.lvl == 1 ? (\n                <div className=\"rescolor\">\n                  <>{cell.getValue()}</>\n                </div>\n              ) : cell.column.id == \"name\" && cell.row.original.lvl == 2 ? (\n                <div className=\"childRow\">\n                  {icons[cell.row.original[\"empStatus\"]]}\n                  <>{cell.getValue()}</>\n                </div>\n              ) : key.includes(\"_\") &&\n                key.split(\"_\")[2] &&\n                cell.row.original.projectId === 0 ? (\n                <>{formatValue(numberWithCommas(cell.getValue()))}</>\n              ) : key.includes(\"total\") && cell.row.original.projectId === 0 ? (\n                <> {numberWithCommas(cell.row.original.total)}</>\n              ) : cell.row.original.emp_cadre &&\n                cell.row.original.lvl === 2 &&\n                cell.row.original.projectId === 0 ? (\n                <div>\n                  <>{cell.getValue()}</>\n                </div>\n              ) : cell.column.id == \"emp_cadre\" &&\n                cell.row.original.projectId === 0 ? (\n                <div className=\"cadreColor\">\n                  <>{cell.getValue()}</>\n                </div>\n              ) : cell.column.id == \"supervisor\" &&\n                cell.row.original.projectId == 0 ? (\n                <div className=\"supervisorColor\">\n                  <>{cell.getValue()}</>\n                </div>\n              ) : (\n                <div className=\"gChildRow\">{nameWithoutSpecialChars}</div>\n              )}\n            </div>\n          );\n        },\n      });\n    });\n\n    setColumns(newHeaders);\n    let values = [];\n    tableData?.map((d, i) => (i > 0 && d.id != -1 ? values.push(d) : \"\"));\n    setNodes(jsonToTree(values, { children: \"subRows\" }));\n  };\n\n  // useEffect(() => {\n  //   getData();\n  //   colExpFlag ? setHiddenColumns({}) : colCollapse();\n  // }, [colExpFlag]);\n\n  const colCollapse = () => {\n    let hiddenHeaders = [];\n    headers.map(([key, value]) => {\n      if (expandedCols.includes(key)) {\n        hiddenHeaders.push({ [key]: false });\n      }\n    });\n\n    setHiddenColumns(Object.assign({}, ...hiddenHeaders));\n  };\n  useEffect(() => {\n    colExpFlag ? expandT() : expandF();\n  }, [colExpFlag]);\n\n  const expandT = () => {\n    count++;\n    getData();\n    setHiddenColumns({});\n  };\n\n  const expandF = () => {\n    getData();\n  };\n  const jsonToTree = (flatArray, options) => {\n    options = {\n      id: \"uniqueId\",\n      parentId: \"parentId\",\n      children: \"subRows\",\n      ...options,\n    };\n    const dictionary = {}; // a hash table mapping to the specific array objects with their ids as key\n    const tree = [];\n    const children = options.children;\n    flatArray.forEach((node) => {\n      const nodeId = node[options.id];\n      const nodeParentId = node[options.parentId];\n      // set up current node data in dictionary\n      dictionary[nodeId] = {\n        [children]: [], // init a children property\n        ...node, // add other propertys\n        ...dictionary[nodeId], // children will be replaced if this node already has children property which was set below\n      };\n      dictionary[nodeParentId] = dictionary[nodeParentId] || { [children]: [] }; // if it's not exist in dictionary, init an object with children property\n      dictionary[nodeParentId][children].push(dictionary[nodeId]); // add reference to current node object in parent node object\n    });\n    // find root nodes\n    Object.values(dictionary).forEach((obj) => {\n      if (typeof obj[options.id] === \"undefined\") {\n        tree.push(...obj[children]);\n      }\n    });\n    return tree;\n  };\n  console.log(nodes);\n  return (\n    <div className=\"materialReactExpandableTable nbWorkTable darkHeader toHead\">\n      {nodes.length ? (\n        <MaterialReactTable\n          columns={columns}\n          data={nodes}\n          enableExpandAll={true}\n          enableExpanding\n          enablePagination={false}\n          enableBottomToolbar={false}\n          enableTopToolbar={false}\n          enableColumnActions={false}\n          enableSorting={false}\n          filterFromLeafRows\n          initialState={{\n            expanded: false,\n            density: \"compact\",\n            columnVisibility: { ...hiddenColumns },\n            enablePinning: true,\n          }}\n          state={{ columnVisibility: { ...hiddenColumns } }}\n          defaultColumn={{ minSize: 40, maxSize: 1000, size: 40 }}\n          enableStickyHeader\n          muiTableContainerProps={{\n            sx: {\n              maxHeight: \"50vh\",\n              width: \"auto\",\n              maxWidth: \"fit-content\",\n            },\n          }}\n          muiTableBodyProps={{\n            sx: {\n              \"&\": {},\n              \"& td\": {\n                borderRight: \"1px solid #ccc\",\n                height: \"22px\",\n                fontSize: \"11px\",\n                paddingTop: \"0px\",\n                paddingBottom: \"0px\",\n              },\n            },\n          }}\n          muiTableHeadProps={{\n            sx: {\n              \"& th\": {\n                borderTop: \"1px solid #ccc\",\n                borderRight: \"1px solid #ccc\",\n                background: \"#f4f4f4 \",\n                fontSize: \"13px\",\n                padding: \"0px 8px\",\n                fontWeight: \"bold\",\n              },\n            },\n          }}\n        />\n      ) : null}\n    </div>\n  );\n}\n","import React, { useEffect, useRef, useState } from \"react\";\n\nimport {\n  FaChevronCircleDown,\n  FaChevronCircleUp,\n  FaSearch,\n  FaCaretDown,\n  FaCheck,\n  FaPlus,\n  FaSave,\n} from \"react-icons/fa\";\nimport { CCollapse } from \"@coreui/react\";\nimport Loader from \"../Loader/Loader\";\nimport axios from \"axios\";\nimport { environment } from \"../../environments/environment\";\nimport { MultiSelect } from \"react-multi-select-component\";\nimport NonBillableCollapsibleTable from \"./NonBillableCollapsibleTable\";\nimport { RiFileExcel2Line } from \"react-icons/ri\";\nimport * as XLSX from \"xlsx\";\nimport GlobalValidation from \"../ValidationComponent/GlobalValidation\";\nimport { AiFillWarning } from \"react-icons/ai\";\nimport { GrCircleInformation } from \"react-icons/gr\";\nimport GlobalHelp from \"../PrimeReactTableComponent/GlobalHelp\";\nimport ScreenBreadcrumbs from \"../Common/ScreenBreadcrumbs\";\nimport moment from \"moment\";\nimport ExcelJS from \"exceljs\";\nimport { BsInfoCircle } from \"react-icons/bs\";\n\nfunction NonBillableWork4Weeks() {\n  const baseUrl = environment.baseUrl;\n  const [visible, setVisible] = useState(false);\n  const [cheveronIcon, setCheveronIcon] = useState(FaChevronCircleUp);\n  const [loader, setLoader] = useState(false);\n  const [searching, setSearching] = useState(false);\n  const [selectedDeptid, setSelectedDeptId] = useState([]);\n  const [deptId, setdeptId] = useState([]);\n  const [selectedCountry, setSelectedCountry] = useState([]);\n  const [country, setCountry] = useState([]);\n  const [searchDataC, setSeachDataC] = useState(\"6,5,3,8,7,1,2,0\");\n  const [contractTermsId, setContractTermsId] = useState(\n    \"188,189,191,804,805,1031\"\n  );\n\n  const [searchDataB, setSearchDataB] = useState(\n    \"170,211,123,82,168,207,212,18,213,49,149,208,243\"\n  );\n  const generateDropdownLabel = (selectedOptions, allOptions) => {\n    const selectedValues = selectedOptions.map((option) => option.value);\n    const allValues = allOptions.map((item) => item.value);\n\n    if (selectedValues.length === allValues.length) {\n      return \"<< ALL >>\";\n    } else {\n      return selectedOptions.map((option) => option.label).join(\", \");\n    }\n  };\n  const [buValues, setBuValues] = useState([]);\n  const [selectBuValues, setSelectBuValues] = useState([]);\n  const [countries, setCountries] = useState([]);\n  const [selectCountry, setSelectCountry] = useState([]);\n  const [tabData, setTabData] = useState([]);\n  const [columns, setColumns] = useState([]);\n  const [details, setDetails] = useState([]);\n  const [allocTypeId, setAllocTypeId] = useState(\"188,189,191,804,805,1031\");\n  const [validationmessage, setValidationMessage] = useState(false);\n  const [displaytable, setDisplayTable] = useState(false);\n  const ref = useRef([]);\n  const loggedUserId = localStorage.getItem(\"resId\");\n  ///////////////////////////////////////\n  const tableData1 = details || [];\n  const filteredRows = [];\n  const patternToExclude = /^(\\d{2}-[A-Za-z]{3}-\\d{2}\\^&\\d\\^&\\d)$/;\n  tableData1.forEach((item) => {\n    for (const key in item) {\n      if (\n        key.endsWith(\"_wk\") &&\n        parseFloat(item[key]) > 0 &&\n        item.resource !== \"Resource\"\n      ) {\n        const resource = item.resource;\n        const week = key.replace(/_wk$/, \"\");\n        const hours = item[key];\n        filteredRows.push({\n          department: item.department,\n          filteredResources: resource,\n          project: item.project,\n          name: item.name,\n          emp_cadre: item.emp_cadre,\n          supervisor: item.supervisor,\n          filteredDates: formatDate(week),\n          filteredHours: hours,\n        });\n      } else {\n      }\n    }\n  });\n  function formatDate(week) {\n    const parts = week.split(\"_\");\n    const year = parts[0];\n    const month = parts[1];\n    const day = parts[2];\n    return `${year}-${month}-${day}`;\n  }\n  /////////////////////////////////////////////////\n  const filteredHours = [];\n  tableData1.forEach((item) => {\n    if (item.id !== \"0\") {\n      for (const key in item) {\n        if (\n          key.endsWith(\"_wk\") &&\n          parseFloat(item[key]) > 0 &&\n          !patternToExclude.test(item[key])\n        ) {\n          filteredHours.push(item[key]);\n        }\n      }\n    }\n  });\n  ///////////////////////////////////////////////////////\n  const filteredResources = [];\n\n  tableData1.forEach((item) => {\n    for (const key in item) {\n      if (key.endsWith(\"_wk\") && parseFloat(item[key]) > 0) {\n        // Extract the resource name from the key (assuming resource name doesn't contain \"_wk\").\n        const resource = item.resource;\n        if (resource && resource !== \"Resource\") {\n          filteredResources.push(resource);\n        }\n      }\n    }\n  });\n\n  const [routes, setRoutes] = useState([]);\n  let textContent = \"Utilisation Metrics\";\n  let currentScreenName = [\"NB Work - 4 Prev. Weeks\"];\n\n  useEffect(() => {\n    getMenus();\n  }, []);\n\n  const getMenus = () => {\n    // setMenusData\n\n    axios({\n      method: \"GET\",\n      url: baseUrl + `/CommonMS/master/getMenus?loggedUserId=${loggedUserId}`,\n    }).then((resp) => {\n      let data = resp.data;\n      const urlPathValue = resp.data[3].subMenus[3].url_path;\n      const modifiedUrlPath = urlPathValue.replace(/::/g, \"/\");\n      getUrlPath(modifiedUrlPath);\n\n      data.forEach((item) => {\n        if (item.display_name === textContent) {\n          setRoutes([item]);\n        }\n      });\n    });\n  };\n  const getUrlPath = (modifiedUrlPath) => {\n    axios({\n      method: \"get\",\n      url:\n        baseUrl +\n        `/CommonMS/security/authorize?url=${modifiedUrlPath}&userId=${loggedUserId}`,\n    })\n      .then((res) => {\n        let getData = res.data;\n        console.log(getData);\n      })\n      .catch((error) => {});\n  };\n  const getBuValue = () => {\n    axios\n      .get(baseUrl + `/CostMS/cost/getDepartments`)\n      .then((res) => {\n        const data = res.data;\n        const getBUval = data.map((e) => {\n          return {\n            value: e.value,\n            label: e.label,\n          };\n        });\n        setBuValues(getBUval);\n        setSelectBuValues(getBUval);\n      })\n      .catch((err) => {});\n  };\n\n  const handleCountries = () => {\n    axios\n      .get(baseUrl + `/CostMS/cost/getCountries`)\n      .then((res) => {\n        const countryData = res.data;\n        const getCounData = countryData.map((e) => {\n          return {\n            value: e.id,\n            label: e.country_name,\n          };\n        });\n        setCountries(getCounData);\n        setSelectCountry(getCounData);\n      })\n      .catch((err) => {});\n  };\n\n  const allocData = [\n    { value: 188, label: \"Non Billable Shadow\" },\n    { value: 189, label: \"Non Billable Enablement\" },\n    { value: 191, label: \"Non Billable Utilized\" },\n    { value: 804, label: \"Billable Client Prep\" },\n    { value: 805, label: \"Non Billable Non Utilized\" },\n    { value: 1031, label: \"Non-billable Innov\" },\n  ];\n  const [selectAllocData, setSelectAllocData] = useState(allocData);\n  const getCountries = () => {\n    axios\n      .get(baseUrl + `/dashboardsms/Dashboard/getCountry`)\n      .then((Response) => {\n        let data = Response.data;\n        data.length > 0 &&\n          data.forEach((e) => {\n            let countryObj = {\n              label: e.country_name,\n              value: e.id,\n            };\n            countries.push(countryObj);\n          });\n        setCountry(countries);\n        setSelectedCountry(countries);\n      })\n      .catch((error) => console.log(error));\n  };\n  const bussinessUnitDepartment = async () => {\n    const resp = await axios({\n      url: baseUrl + `/CostMS/cost/getDepartments`,\n    });\n    let departments = resp.data;\n    departments.push({ value: 999, label: \"Non-Revenue Units\" });\n    setdeptId(departments);\n    setSelectedDeptId(departments.filter((ele) => ele.value != 999));\n    let filteredDeptData = [];\n    departments.forEach((data) => {\n      if (data.value != 999) {\n        filteredDeptData.push(data.value);\n      }\n    });\n  };\n  const [tableData, setTableData] = useState([]);\n  const currentDate = moment(new Date()).format(\"yyyy-MM-DD\");\n  const handleClick = () => {\n    let valid = GlobalValidation(ref);\n    if (valid) {\n      {\n        setValidationMessage(true);\n        setTimeout(() => {\n          setValidationMessage(false);\n        }, 3000);\n      }\n      return;\n    }\n    !valid && setVisible(!visible);\n    visible\n      ? setCheveronIcon(FaChevronCircleUp)\n      : setCheveronIcon(FaChevronCircleDown);\n    setLoader(true);\n    axios({\n      method: \"post\",\n      url:\n        baseUrl +\n        `/timeandexpensesms/getNonBillable/getNonBillableWorks?buIds=${searchDataB}&country=${searchDataC}&allocTypeIds=${contractTermsId}&curDt=${currentDate}&isExport=0&userId=${loggedUserId}`,\n      // \"http://localhost:8090/timeandexpensesms/getNonBillable/getNonBillableWorks?buIds=170,211,123,82,168,207,212,18,213,49,149,208,243&countryIds=6,5,3,8,7,1,2,0&allocTypeIds=188,189,191,804,805,1031&curDt=2023-03-15&isExport=0&userId=512\",\n    }).then((res) => {\n      let detail = res.data.tableData;\n      let cols = res.data.columns?.replaceAll(\"'\", \"\").split(\",\");\n      setDetails(detail);\n      setTableData(res.data);\n      setDisplayTable(true);\n      setColumns(cols);\n      setValidationMessage(false);\n      setLoader(false);\n    });\n  };\n  const ArrowRenderer = ({ expanded }) => (\n    <>\n      {expanded ? (\n        <FaCaretDown className=\"chevronIcon\" />\n      ) : (\n        <FaCaretDown className=\"chevronIcon\" />\n      )}\n    </>\n  );\n  useEffect(() => {\n    handleCountries();\n    getBuValue();\n    bussinessUnitDepartment();\n    getCountries();\n  }, []);\n  const handleOnExport = () => {\n    const customHeaders = {\n      department: \"Department\",\n      filteredResources: \"Resource\",\n      project: \"Project\",\n      name: \"Project Code\",\n      emp_cadre: \"Cadre\",\n      supervisor: \"Supervisor\",\n      filteredDates: \"Week\",\n      filteredHours: \"Hours\",\n    };\n    const columnOrder = [\n      \"department\",\n      \"filteredResources\",\n      \"project\",\n      \"name\",\n      \"emp_cadre\",\n      \"supervisor\",\n      \"filteredDates\",\n      \"filteredHours\",\n    ];\n    const excludeProperties = Object.keys(customHeaders);\n    const dataRows = filteredRows\n      .filter(\n        (item) =>\n          item.filteredResources !== \"\" &&\n          // item.emp_cadre !== \"\" &&\n          item.project !== \"\" &&\n          item.supervisor !== \"\" &&\n          parseFloat(item.filteredHours) > 0 // Include rows where filteredHours > 0\n      )\n      .map((item) => {\n        return columnOrder.map((column) => {\n          if (column === \"name\") {\n            const matches = item.name.match(/\\((P[^)]+)\\)/);\n            const matchesProejct = item.name;\n            return matches ? matches[1] : matchesProejct;\n          } else if (column === \"filteredDates\") {\n            return item.filteredDates;\n          } else if (column === \"filteredHours\") {\n            return item.filteredHours;\n          } else if (column === \"filteredResources\") {\n            return item.filteredResources;\n          } else {\n            return item[column];\n          }\n        });\n      });\n\n    const workbook = new ExcelJS.Workbook();\n    const worksheet = workbook.addWorksheet(\"NonBillableWork\");\n    const headerRow = columnOrder.map((column) => customHeaders[column]);\n    worksheet.addRow(headerRow);\n\n    for (const dataRow of dataRows) {\n      worksheet.addRow(dataRow);\n    }\n\n    const boldRow = [1];\n    boldRow.forEach((index) => {\n      const row = worksheet.getRow(index);\n      row.font = { bold: true };\n    });\n\n    workbook.xlsx.writeBuffer().then((buffer) => {\n      saveAs(new Blob([buffer]), \"NonBillableWork.xlsx\");\n    });\n  };\n\n  const HelpPDFName = \"NonBillableWorkoperational.pdf\";\n  const Headername = \"Non Billable Work Help\";\n  const abortController = useRef(null);\n\n  const handleAbort = () => {\n    abortController.current && abortController.current.abort();\n    setLoader(false);\n  };\n  return (\n    <div>\n      {validationmessage ? (\n        <div className=\"statusMsg error\">\n          {\" \"}\n          <AiFillWarning /> Please select valid values for highlighted fields\n        </div>\n      ) : (\n        \"\"\n      )}\n\n      <div className=\"col-md-12\">\n        <div className=\"pageTitle\">\n          <div className=\"childOne\"></div>\n          <div className=\"childTwo\">\n            <h2>NB Work - 4 Prev. Weeks</h2>\n          </div>\n          <div className=\"childThree\"></div>\n        </div>\n      </div>\n      <ScreenBreadcrumbs\n        routes={routes}\n        currentScreenName={currentScreenName}\n      />\n\n      <div className=\"group mb-3 customCard\">\n        <div className=\"col-md-12 collapseHeader\">\n          <h2>Search Filters</h2>\n          <div className=\"helpBtn\">\n            <GlobalHelp pdfname={HelpPDFName} name={Headername} />\n          </div>\n          <div\n            onClick={() => {\n              setVisible(!visible);\n              visible\n                ? setCheveronIcon(FaChevronCircleUp)\n                : setCheveronIcon(FaChevronCircleDown);\n            }}\n          >\n            <span>{cheveronIcon}</span>\n          </div>\n        </div>\n        <CCollapse visible={!visible}>\n          <div className=\"group-content row\">\n            <div className=\" col-md-4 mb-2\">\n              <div className=\"form-group row\">\n                <label className=\"col-5\" htmlFor=\"businessunit\">\n                  Business Unit\n                  <span className=\" error-text ml-1\">*</span>\n                </label>\n                <span className=\"col-1 p-0\">:</span>\n                <div className=\"col-6\">\n                  <div\n                    className=\"multiselect\"\n                    ref={(ele) => {\n                      ref.current[0] = ele;\n                    }}\n                  >\n                    <MultiSelect\n                      id=\"buId\"\n                      ArrowRenderer={ArrowRenderer}\n                      options={deptId}\n                      hasSelectAll={true}\n                      value={selectedDeptid}\n                      valueRenderer={generateDropdownLabel}\n                      disabled={false}\n                      isLoading={false}\n                      shouldToggleOnHover={false}\n                      disableSearch={false}\n                      onChange={(e) => {\n                        setSelectedDeptId(e);\n                        let filterB = [];\n                        e.forEach((d) => {\n                          filterB.push(d.value);\n                        });\n                        setSearchDataB(filterB.toString());\n                      }}\n                    />\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className=\" col-md-4 mb-2\">\n              <div className=\"form-group row\">\n                <label className=\"col-5\" htmlFor=\"country\">\n                  Country <span className=\" error-text ml-1\">*</span>\n                </label>\n                <span className=\"col-1 p-0\">:</span>\n                <div className=\"col-6\">\n                  <div\n                    className=\"multiselect\"\n                    ref={(ele) => {\n                      ref.current[1] = ele;\n                    }}\n                  >\n                    <MultiSelect\n                      id=\"countryId\"\n                      ArrowRenderer={ArrowRenderer}\n                      valueRenderer={generateDropdownLabel}\n                      options={country}\n                      hasSelectAll={true}\n                      value={selectedCountry}\n                      disabled={false}\n                      onChange={(e) => {\n                        setSelectedCountry(e);\n                        let filteredCountry = [];\n                        e.forEach((d) => {\n                          filteredCountry.push(d.value);\n                        });\n\n                        setSeachDataC(filteredCountry.toString());\n                      }}\n                    />\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            <div className=\" col-md-4 mb-2\">\n              <div className=\"form-group row\">\n                <label className=\"col-5\" htmlFor=\"alloctype\">\n                  Alloc. Type <span className=\" error-text ml-1\">*</span>\n                </label>\n                <span className=\"col-1 p-0\">:</span>\n                <div className=\"col-6\">\n                  <div\n                    className=\"multiselect\"\n                    ref={(ele) => {\n                      ref.current[2] = ele;\n                    }}\n                  >\n                    <MultiSelect\n                      id=\"BU\"\n                      options={allocData}\n                      valueRenderer={generateDropdownLabel}\n                      ArrowRenderer={ArrowRenderer}\n                      hasSelectAll={true}\n                      isLoading={false}\n                      shouldToggleOnHover={false}\n                      disableSearch={false}\n                      value={selectAllocData}\n                      disabled={false}\n                      onChange={(s) => {\n                        setSelectAllocData(s);\n                        let filteredValues = [];\n                        s.forEach((d) => {\n                          filteredValues.push(d.value);\n                        });\n                        setContractTermsId(filteredValues.toString());\n                      }}\n                    />\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className=\"col-md-12 col-sm-12 col-xs-12 my-2 btn-container center\">\n              <button\n                type=\"button\"\n                className=\"btn btn-primary\"\n                onClick={() => {\n                  handleClick();\n                  setDisplayTable(false);\n                }}\n              >\n                <FaSearch /> Search\n              </button>\n            </div>\n          </div>\n        </CCollapse>\n        {loader ? <Loader handleAbort={handleAbort} /> : \"\"}\n      </div>\n\n      <div>\n        <div>\n          {displaytable ? (\n            <div>\n              <div align=\"right\">\n                <label style={{ color: \"#9d7c42\", fontStyle: \"italic\" }}>\n                  {\" \"}\n                  <BsInfoCircle style={{ marginTop: \"-5px\" }} />\n                  <i>All numbers are in hours</i>\n                </label>\n              </div>\n              <div className=\"mb-2\" align=\"right\">\n                <RiFileExcel2Line\n                  size=\"1.5em\"\n                  title=\"Export to Excel\"\n                  style={{ color: \"green\", float: \"right\" }}\n                  cursor=\"pointer\"\n                  onClick={handleOnExport}\n                />\n                <br />\n              </div>\n              <div\n                className=\"col-md-12 EngagementDetails \"\n                style={{ marginTop: \"-20px\" }}\n              >\n                <NonBillableCollapsibleTable\n                  data={tableData}\n                  expandedCols={[\"emp_cadre\", \"supervisor\"]}\n                  colExpandState={[\"0\", \"0\", \"name\"]}\n                />\n              </div>\n            </div>\n          ) : (\n            \"\"\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default NonBillableWork4Weeks;\n","import React from \"react\";\nimport { ImSearch } from \"react-icons/im\";\nimport \"../../App.scss\";\nimport { useState, useEffect, useRef } from \"react\";\nimport axios from \"axios\";\nimport { CCollapse, CListGroup } from \"@coreui/react\";\nimport { FilterMatchMode, FilterOperator } from \"primereact/api\";\nimport { saveAs } from \"file-saver\";\nimport * as XLSX from \"xlsx\";\n// import { FaSearch } from \"react-icons/fa\";\nimport { IoWarningOutline } from \"react-icons/io5\";\nimport { ColumnGroup } from \"primereact/columngroup\";\nimport Loader from \"../Loader/Loader\";\nimport {\n  FaChevronCircleDown,\n  FaChevronCircleUp,\n  FaInfoCircle,\n  FaCaretDown,\n  FaSearch,\n} from \"react-icons/fa\";\nimport ReactPaginate from \"react-paginate\";\nimport { environment } from \"../../environments/environment\";\nimport FlatPrimeReactTable from \"../PrimeReactTableComponent/FlatPrimeReactTable\";\nimport { MultiSelect } from \"react-multi-select-component\";\nimport CellRendererPrimeReactDataTable from \"../PrimeReactTableComponent/CellRendererPrimeReactDataTable\";\nimport { Column } from \"primereact/column\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport { InputText } from \"primereact/inputtext\";\nimport { Row } from \"primereact/row\";\nimport { DataTable } from \"primereact/datatable\";\nimport GlobalValidation from \"../ValidationComponent/GlobalValidation\";\nimport GlobalCancel from \"../ValidationComponent/GlobalCancel\";\nimport { AiFillWarning } from \"react-icons/ai\";\nimport { color, setOptions } from \"highcharts\";\nimport { fontWeight } from \"@mui/system\";\nimport GlobalHelp from \"../PrimeReactTableComponent/GlobalHelp\";\nimport SavedSearchGlobal from \"../PrimeReactTableComponent/SavedSearchGlobal\";\nimport { BiCheck } from \"react-icons/bi\";\nimport ScreenBreadcrumbs from \"../Common/ScreenBreadcrumbs\";\nimport \"./ProjectHealth.scss\";\n\nfunction getAllNames(inputString) {\n  const regex = /(\\d+)\\^\\^([^,]+)/g;\n  let match;\n  const resultList = [];\n\n  while ((match = regex.exec(inputString)) !== null) {\n    const id = match[1];\n    const value = match[2].trim();\n    resultList.push({ id, value });\n  }\n\n  return resultList;\n}\n\nfunction ProjectHealth() {\n  const abortController = useRef(null);\n\n  //===================\n  const ArrowRenderer = ({ expanded }) => (\n    <>\n      {expanded ? (\n        <FaCaretDown className=\"chevronIcon\" />\n      ) : (\n        <FaCaretDown className=\"chevronIcon\" />\n      )}\n    </>\n  );\n  const [postDataDetails, setPostDataDetails] = useState([]);\n  const [projectnames, setProjectnames] = useState([]);\n  const [pid, setPid] = useState([]);\n  const [pmId, setPmId] = useState([]);\n  const [update, setUpdate] = useState(false);\n  const [sortField, setSortField] = useState(null);\n  const [sortOrder, setSortOrder] = useState(null);\n\n  // Function to handle column sorting\n  const onSort = (e) => {\n    setSortField(e.sortField);\n    setSortOrder(e.sortOrder);\n    // Sort your data based on the selected field and order\n    const sortedData = [...data].sort((a, b) => {\n      const valueA = a[e.sortField];\n      const valueB = b[e.sortField];\n      if (valueA < valueB) return e.sortOrder === 1 ? -1 : 1;\n      if (valueA > valueB) return e.sortOrder === 1 ? 1 : -1;\n      return 0;\n    });\n    setData(sortedData);\n  };\n  const [sortAscending, setSortAscending] = useState(true);\n\n  const handleSort = (field, ascending) => {\n    // Implement your sorting logic here\n    // You can toggle the sortAscending state variable\n    setSortAscending(!ascending);\n\n    // Use the updated sortAscending variable as needed for sorting or further actions\n    // For example, you can use it to update your data array based on the sorting direction.\n  };\n\n  const headerGroup = (\n    <ColumnGroup>\n      <Row>\n        <Column\n          header={<div>Project Name</div>}\n          rowSpan={2}\n          sortable\n          field=\"project_name\"\n          sortAscending={sortAscending}\n          onSort={handleSort}\n        />\n        <Column\n          header=\"Primary Manager\"\n          rowSpan={2}\n          sortable\n          field=\"prj_pm_name\"\n          sortAscending={sortAscending}\n          onSort={handleSort}\n        />\n        <Column\n          header=\"Notify PM\"\n          rowSpan={2}\n          sortable\n          field=\"notify_pms\"\n          sortAscending={sortAscending}\n          onSort={handleSort}\n        />\n        <Column\n          header={\n            <>\n              <div>{\"Comp(%)\"}</div>\n              <FaInfoCircle\n                style={{ fontSize: \"10px\" }}\n                className=\"tableInfoIcon\"\n                title=\"Project Completed (%) = Actual Hours divided by Planned Hours\"\n                field=\"prj_compltn\"\n                sortAscending={sortAscending}\n                onSort={handleSort}\n              />\n            </>\n          }\n          sortable\n          rowSpan={2}\n        />\n        <Column\n          header=\"Terms\"\n          rowSpan={2}\n          sortable\n          field=\"ct_term\"\n          sortAscending={sortAscending}\n          onSort={handleSort}\n        />\n        <Column\n          header={\n            <>\n              {\"Count\"}\n              <FaInfoCircle\n                style={{ fontSize: \"10px\" }}\n                className=\"tableInfoIcon\"\n                title=\"        This the Resource Count and the data is populated based on the resources allocated for that particular day\n\"\n                field=\"res_count\"\n                sortAscending={sortAscending}\n                onSort={handleSort}\n              />\n            </>\n          }\n          rowSpan={2}\n          sortable\n        />\n        <Column header={<div>Efforts(Hrs) </div>} colSpan={3} />\n        <Column header={<div>GM(%)</div>} colSpan={3} />\n        <Column header={<div>Risks</div>} colSpan={4} />\n        <Column header=\"Audit Details\" colSpan={2} />\n        <Column header=\"CSAT Details\" colSpan={2} />\n      </Row>\n\n      <Row>\n        <Column\n          header={\n            <>\n              {\"Plan\"}\n              <FaInfoCircle\n                style={{ fontSize: \"10px\" }}\n                className=\"tableInfoIcon\"\n                title=\"This the Resource Count and the data is populated based on the resources allocated for that particular day\n\"\n              />\n            </>\n          }\n          sortable\n          field=\"pln_efforts\"\n          body={(rowData) => {\n            const backgroundColor = rowData.count > 100 ? \"pink\" : \"green\"; // Change the condition as needed\n\n            return <div style={{ backgroundColor }}>{rowData.pln_efforts}</div>;\n          }}\n        />\n        <Column\n          header={\n            <>\n              {\"EAC\"}\n              <FaInfoCircle\n                style={{ fontSize: \"10px\" }}\n                className=\"tableInfoIcon\"\n                title=\" Planned Hours+ Actual Hours- Planned hours Till date\"\n              />\n            </>\n          }\n          field=\"eac_efforts\"\n          sortable\n        />\n        <Column\n          header={\n            <>\n              {\"Var(%)\"}\n              <FaInfoCircle\n                style={{ fontSize: \"10px\" }}\n                className=\"tableInfoIcon\"\n                title=\"[(Planned GM – EAC GM)/Planned GM] *100 \"\n              />\n            </>\n          }\n          sortable\n          field=\"var_efforts\"\n        />\n        <Column\n          header={\n            <>\n              {\"Plan\"}\n              <FaInfoCircle\n                style={{ fontSize: \"10px\" }}\n                className=\"tableInfoIcon\"\n                title=\"(EAC Revenue – EAC RDC- ODC)/EAC Revenue] *100\"\n              />\n            </>\n          }\n          field=\"pln_gm\"\n          sortable\n        />\n        <Column\n          header={\n            <>\n              {\"EAC\"}\n              <FaInfoCircle\n                style={{ fontSize: \"10px\" }}\n                className=\"tableInfoIcon\"\n                title=\" Planned Hours+ Actual Hours- Planned hours Till date\"\n              />\n            </>\n          }\n          sortable\n          field=\"eac_gm\"\n        />\n        <Column\n          header={\n            <>\n              {\"Var(%)\"}\n              <FaInfoCircle\n                style={{ fontSize: \"10px\" }}\n                className=\"tableInfoIcon\"\n                title=\"[(Planned GM – EAC GM)/Planned GM] *100 \"\n              />\n            </>\n          }\n          sortable\n          field=\"var_gm\"\n        />\n\n        <Column field=\"critical_risks\" header=\"Crt\" sortable></Column>\n        <Column field=\"high_risks\" header=\"High\" sortable></Column>\n        <Column field=\"med_risks\" header=\"Med\" sortable></Column>\n        <Column field=\"low_risks\" header=\"Low\" sortable></Column>\n        <Column field=\"audit_date\" header=\"Month\" sortable></Column>\n        <Column field=\"audit_result\" header=\"Res\" sortable></Column>\n        <Column field=\"csat_date\" header=\"Month\" sortable></Column>\n        <Column field=\"csat_result\" header=\"Score\" sortable></Column>\n      </Row>\n    </ColumnGroup>\n  );\n  const filtersData = {\n    contains: { value: null, matchMode: FilterMatchMode.CONTAINS },\n  };\n  const [filters1, setFilters1] = useState({\n    global: filtersData[\"contains\"],\n  });\n\n  const [mainData, setMainData] = useState([]);\n  const [headerData, setHeaderData] = useState([]);\n  const [bodyData, setBodyData] = useState([]);\n\n  useEffect(() => {\n    if (mainData.length > 0) {\n      setHeaderData(mainData[0]);\n      setBodyData(mainData.splice(1));\n    }\n  }, [mainData]);\n  useEffect(() => {\n    setFilters1({\n      global: filtersData[\"contains\"],\n    });\n  }, [headerData]);\n  const [filters, setFilters] = useState({\n    global: { value: null, matchMode: FilterMatchMode.CONTAINS },\n    name: { value: null, matchMode: FilterMatchMode.STARTS_WITH },\n    \"country.name\": { value: null, matchMode: FilterMatchMode.STARTS_WITH },\n    representative: { value: null, matchMode: FilterMatchMode.IN },\n    status: { value: null, matchMode: FilterMatchMode.EQUALS },\n    verified: { value: null, matchMode: FilterMatchMode.EQUALS },\n  });\n  const [globalFilterValue, setGlobalFilterValue] = useState(\"\");\n  const onGlobalFilterChange = (e) => {\n    const value = e.target.value;\n    let _filters = { ...filters };\n\n    _filters[\"global\"].value = value;\n\n    setFilters(_filters);\n    setGlobalFilterValue(value);\n  };\n  const formatNumber = (number) => {\n    if (number == null) {\n      return \"\";\n    }\n    return number.toLocaleString(\"en-US\", {\n      minimumFractionDigits: 2,\n      maximumFractionDigits: 2,\n    });\n  };\n\n  const exportExcel = () => {\n    const tableData = data.map((item) => ({\n      ProjectName: item.project_name,\n      PrimaryManager: item.prj_pm_name,\n      Comp: item.prj_compltn + \"%\",\n      Terms: item.ct_term,\n      Count: item.res_count,\n      Plans: formatNumber(item.pln_efforts), // Format \"Plan\" number\n      EACs: formatNumber(item.eac_efforts), // Format \"EAC\" number\n      Vars: item.var_efforts + \"%\",\n      Plan: formatNumber(item.pln_gm), // Format \"Plan\" number\n      Eac: formatNumber(item.eac_gm), // Form // Format \"EAC\" number\n      Var: item.var_gm + \"%\",\n      Critical: item.critical_risks,\n      High: item.high_risks,\n      Meduim: item.med_risks,\n      Low: item.low_risks,\n      AuditDate: item.audit_date,\n      AuditResult: item.audit_result,\n      CSATDate: item.csat_date,\n      CSATResult: item.csat_result,\n    }));\n\n    const worksheet = XLSX.utils.json_to_sheet(tableData);\n    const workbook = {\n      Sheets: { tableData: worksheet },\n      SheetNames: [\"tableData\"],\n    };\n    const excelBuffer = XLSX.write(workbook, {\n      bookType: \"xlsx\",\n      type: \"array\",\n    });\n    saveAsExcelFile(excelBuffer, \"Project Health\");\n  };\n\n  const saveAsExcelFile = (buffer, fileName) => {\n    const EXCEL_TYPE =\n      \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8\";\n    const EXCEL_EXTENSION = \".xlsx\";\n    const tableData = new Blob([buffer], { type: EXCEL_TYPE });\n    saveAs(tableData, fileName + EXCEL_EXTENSION);\n  };\n  const renderHeader = () => {\n    return (\n      <div className=\"col-md-12 flex justify-content-end\">\n        <span className=\"p-input-icon-left\">\n          <i className=\"pi pi-search\" />\n          <InputText\n            value={globalFilterValue}\n            onChange={onGlobalFilterChange}\n            placeholder=\"Keyword Search\"\n          />\n        </span>\n        <span>\n          <i\n            style={{ fontSize: \"20px\", marginTop: \"5px\", marginLeft: \"10px\" }}\n            class=\"pi pi-file-excel exportBtn\"\n            onClick={exportExcel}\n            data-pr-tooltip=\"XLS\"\n            title=\"Export to Excel\"\n          ></i>\n        </span>\n      </div>\n    );\n  };\n  const header = renderHeader();\n  const rows = 25;\n  const baseUrl = environment.baseUrl;\n  const loggedUserId = localStorage.getItem(\"resId\");\n  const [practiceData, setPracticeData] = useState([]);\n  const [selectedPractice, setSelectedPractice] = useState([]);\n  const [practices, setPractices] = useState(\"\");\n  const [practiceData1, setPracticeData1] = useState([]);\n  const [selectedPractice1, setSelectedPractice1] = useState([]);\n  const [validationMessage, setValidationMessage] = useState(false);\n\n  const [practices1, setPractices1] = useState();\n  const [bussinessUnit, setBussinessUnit] = useState([]);\n\n  const [selectedBussinessUnit, setSelectedBussinessUnit] = useState([]);\n  const selectedData = selectedBussinessUnit;\n  const [loading, setLoading] = useState(false);\n  const [contractTermsId, setContractTermsId] = useState(\"28,26,25\");\n\n  const selectedDataVales = selectedData.map((item) => item.value);\n  const numbers = selectedDataVales;\n  const numbersString = numbers.join(\",\");\n  const [businessUnit, setBusinessUnit] = useState(\"\");\n\n  const [cheveronIcon, setCheveronIcon] = useState(FaChevronCircleUp);\n  const [visible, setVisible] = useState(false);\n  const [auditTypes, setAuditTypes] = useState(484);\n  const [displayState, setDisplayState] = useState(false);\n  const [loadingState, setLoadingState] = useState(false);\n  const [selectOpt, setselectOpt] = useState([]);\n  const [notifyPmData, setNotifyPmData] = useState([]);\n\n  const allocTypes = [\n    // {value:\"null\",label:\"ALL\"},\n    { value: \"1145\", label: \"Projects With Allocations\" },\n    { value: \"1146\", label: \"Projects Without Allocations\" },\n    { value: \"1147\", label: \"Complete(Last 90 Days)\" },\n  ];\n  const [selectedDepartments, setSelectedDepartments] = useState([\n    { value: \"1145\", label: \"Projects With Allocations\" },\n    { value: \"1146\", label: \"Projects Without Allocations\" },\n  ]);\n\n  const fullAccessBu = [\n    { label: \"DACS\", value: 1 },\n    { label: \"IM&A\", value: 3 },\n    { label: \"QA&TA\", value: 4 },\n    { label: \"SSG\", value: 5 },\n    { label: \"Prolifics Products\", value: 6 },\n  ];\n  const [fullselectedBU, setFullselectedBU] = useState([\n    { label: \"DACS\", value: 1 },\n    { label: \"IM&A\", value: 3 },\n    { label: \"QA&TA\", value: 4 },\n    { label: \"SSG\", value: 5 },\n    { label: \"Prolifics Products\", value: 6 },\n  ]);\n\n  const [filterVal, setFilterVal] = useState(\"\");\n  const handleAbort = () => {\n    abortController.current && abortController.current.abort();\n    setLoadingState(false);\n  };\n  const contractTerms = [\n    { value: \"28\", label: \"Billable: Billable: Managed Services (BMS)\" },\n    { value: \"27\", label: \"Billable: Not to Exceed (BNE)\" },\n    { value: \"752\", label: \"Billable: Opportunity (BO)\" },\n    { value: \"606\", label: \"Billable: Staff Aug (BSA)\" },\n    { value: \"26\", label: \"Billable: Time and Materials (BTM)\" },\n    { value: \"25\", label: \"Billable: Fixed Price (FP)\" },\n    { value: \"1024\", label: \"Non-billable: Innovation (NB-I)\" },\n    { value: \"612\", label: \"Non-billable: Client Prep (NB-CP)\" },\n    { value: \"608\", label: \"Non-billable: Enablement (NB-E)\" },\n    { value: \"609\", label: \"Non-billable: Non-Utilized (NB-NU)\" },\n    { value: \"610\", label: \"Non-billable: Shadow (NB-S)\" },\n    { value: \"611\", label: \"Non-billable: Utilized (NB-U)\" },\n    { value: \"750\", label: \"Software Resale (SR)\" },\n  ];\n  const [selectedContractTerm, setSelectedContractTerm] = useState([\n    { value: \"28\", label: \"Billable: Billable: Managed Services (BMS)\" },\n    { value: \"26\", label: \"Billable: Time and Materials (BTM)\" },\n    { value: \"25\", label: \"Billable: Fixed Price (FP)\" },\n  ]);\n  const [searchdataPs, setSearchdataPs] = useState(\"1145,1146\");\n  const [searchDataC, setSeachDataC] = useState(\"6,5,3,8,7,1,2,0\");\n\n  const [customersData, setCustomersData] = useState([]);\n  const [customersDataNull, setCustomersDataNull] = useState([]);\n  const [selectedCustomers, setSelectedCustomers] = useState([]);\n  const [selectedCustomersNull, setSelectedCustomersNull] = useState([]);\n  const [customer, setCustomer] = useState(\n    \"128283684,116612093,123894900,63975211,1551287,94389335,93991408,1551294,94455985,129937850,76951255,112914302,54142249,1552214,132397598,109428419,94455988,1552593,36504344,1551362,1551376,26087285,116648754,94854626,114461301,97387326,1551399,1551909,94854623,24192899,1551980,1551910,128598943,128467119,94389332,1551929,59706234,82291358,1551944,2853559,1551521,1551952,125931702,63266772,1552011,94854630,112674610,1552012,130225404,1552737,55697033,111974038,118769156,132397596,4511021,3667922,127640293,96188256,111034788,1552059,94389337,1552068,90339052,85615658,97121507,85546349,129404696,2540692,13177220,117718253,97386586,94455984,1552145,1551986,1552149,1552150,94720314,1551965,2838049,85945151,3284412,97387329,92460160,128226785,125322705,63162798,67129169,41019114,1551753,76951256,95324519,1551877,29304173,1552226,1552189,94455982,94921283,76751379,1552198,38904085,119173217,21664192,1552217,1842057,36244913,96055886,1552240,1552252,76751371,112674609,1956839,97387333,52636336,42255432,120584753,1552276,132397597,41317099,69963531,1552292,1552293,94854625,106471491,1552849,96188257,97926363,1552295,94455981,72223410,24275141,98815571,87271863,2853561,1552344,1552345,117682329,118004584,1552363,94389333,3039808,1552359,132397594,94854627,97653997,98214365,128264227,58638638,112573879,90138245,90138244,90138246,90138243,90138241,97386610,128333765,90339053,1552400,1552375,92659540,29433193,80685749,106003070,114529861,130225403,128699085,1760934,43889231,97121510,1552430,111602229,94389334,124522210,41317098,52300271,121428211,98815570,1552454,99417583,132397595,1552486,1552690,1552313,56952600,1552475,132066226,130723112,97387330,97320365,119409379,123522147,67530124,112275294,97121508,1552531,1552539,1552541,14791169,91467597,1552545,26377379,130723113,122385399,76951259,1552564,2623413\"\n  );\n  const [customerNull, setCustomerNull] = useState(\n    \"128283684,123894900,63975211,94389335,1551294,76951255,112914302,1552214,132397598,109428419,94455988,1552593,36504344,1551362,116648754,114461301,97387326,1551399,24192899,1551980,1551910,128598943,94389332,1551929,82291358,1551944,2853559,1551521,1551952,125931702,63266772,1552011,94854630,1552012,1552737,111974038,132397596,4511021,3667922,127640293,96188256,1552059,90339052,85615658,85546349,129404696,13177220,1552149,1552150,2838049,85945151,3284412,97387329,125322705,63162798,67129169,41019114,76951256,1551877,29304173,1552189,94921283,76751379,1552198,1842057,36244913,96055886,1552240,1552252,76751371,97387333,120584753,1552276,132397597,41317099,1552293,106471491,96188257,97926363,94455981,24275141,98815571,87271863,1552363,94389333,1552359,132397594,98214365,128264227,58638638,112573879,90138245,90138246,90138241,97386610,90339053,1552375,92659540,29433193,80685749,106003070,114529861,130225403,128699085,43889231,1552430,111602229,94389334,41317098,52300271,121428211,98815570,1552454,99417583,132397595,1552690,56952600,130723112,97320365,1552539,1552541,14791169,91467597,1552545,26377379,2623413\"\n  );\n  const [searchApi, setSearchApi] = useState([]);\n\n  const [data, setData] = useState([{}]);\n  const notifyPms = data[0]?.notify_pms?.split(\"^^\");\n\n  let flag = 1;\n  const ref = useRef([]);\n  useEffect(() => {\n    setMainData(JSON.parse(JSON.stringify(data)));\n  }, [data]);\n  const [country, setCountry] = useState([]);\n  const [selectedCountry, setSelectedCountry] = useState([]);\n  const [isShow, setIsShow] = useState(false);\n  const [nullBusiness, setNullBusiness] = useState(\n    \"18,82,123,207,208,211,212,243\"\n  );\n  const [bus, setBus] = useState(\"18,82,123,207,208,211,212,243\");\n  const [nullSelectedBusiness, setNullSelectedBusiness] = useState([]);\n\n  const selectedDataNull = nullSelectedBusiness;\n\n  const selectedDataValesNull = selectedDataNull.map((item) => item.value);\n  const numbersNull = selectedDataValesNull;\n  const numbersStringsNull = numbersNull.join(\",\");\n  //========================================================\n  const pageurl = \"http://10.11.12.149:3000/#/executive/practiceDashboard\";\n  const page_Name = \"Delivery Dashboard\";\n  const location = useLocation();\n  const searchParams = new URLSearchParams(location.search);\n  const id = searchParams.get(\"id\");\n  const [editmsg, setEditAddmsg] = useState(false);\n  const [filterData, setFilterData] = useState([]);\n  const [dataAccess, setDataAccess] = useState([]);\n\n  useEffect(() => {\n    getMenus();\n  }, []);\n\n  const getMenus = () => {\n    // setMenusData\n\n    axios\n      .get(baseUrl + `/CommonMS/master/getMenus?loggedUserId=${loggedUserId}`)\n      .then((resp) => {\n        // const getData = resp.data;\n        let getData = resp.data.map((menu) => {\n          if (menu.subMenus) {\n            menu.subMenus = menu.subMenus.filter(\n              (subMenu) =>\n                subMenu.display_name !== \"Monthly Revenue Trend\" &&\n                subMenu.display_name !== \"Revenue & Margin Variance\" &&\n                subMenu.display_name !== \"Rev. Projections\" &&\n                subMenu.display_name !== \"Project Timesheet (Deprecated)\" &&\n                subMenu.display_name !== \"Financial Plan & Review\"\n            );\n          }\n          return menu;\n        });\n        // setData2(getData);\n\n        getData.forEach((item) => {\n          if (item.display_name === textContent) {\n            setRoutes([item]);\n          }\n        });\n        const revenueForcastSubMenu = getData\n          .find((item) => item.display_name === \"Delivery\")\n          .subMenus.find(\n            (subMenu) => subMenu.display_name === \"Project Health\"\n          );\n\n        const accessLevel = revenueForcastSubMenu\n          ? revenueForcastSubMenu.userRoles.includes(\"690\")\n            ? 690\n            : revenueForcastSubMenu.userRoles.includes(\"641\")\n            ? 641\n            : revenueForcastSubMenu.userRoles.includes(\"908\")\n            ? 908\n            : revenueForcastSubMenu.userRoles.includes(\"46\")\n            ? 46\n            : revenueForcastSubMenu.userRoles.includes(\"126\")\n            ? 126\n            : revenueForcastSubMenu.userRoles.includes(\"911\")\n            ? 911\n            : revenueForcastSubMenu.userRoles.includes(\"686\")\n            ? 686\n            : revenueForcastSubMenu.userRoles.includes(\"909\")\n            ? 909\n            : revenueForcastSubMenu.userRoles.includes(\"307\") && 307\n          : null;\n\n        setDataAccess(accessLevel);\n\n        if (accessLevel == 908 || accessLevel == 126 || accessLevel == 911) {\n        }\n      });\n  };\n\n  const FilterData = () => {\n    axios({\n      method: \"get\",\n      url:\n        baseUrl +\n        `/dashboardsms/savedsearch/FiltersData?saved_search_id=${\n          id === null ? 0 : id\n        }`,\n    }).then(function (res) {\n      const getData = res.data;\n      setFilterData(getData);\n    });\n  };\n\n  useEffect(() => {\n    FilterData();\n  }, [id]);\n  const [formData, setFormData] = useState({});\n\n  const [routes, setRoutes] = useState([]);\n  const [acessLevel, setAccessLevel] = useState([]);\n  let textContent = \"Delivery\";\n  let currentScreenName = [\"Project Health\"];\n\n  useEffect(() => {\n    getMenus();\n  }, []);\n  useEffect(() => {}, [selectedPractice[0]?.value]);\n\n  useEffect(() => {\n    setFormData(() => {\n      if (id != null) {\n        return {\n          practiceId: filterData.practiceId,\n          buId: filterData.buId,\n          customer: filterData?.customer,\n          BU: filterData.BU,\n          projectStatus: filterData.projectStatus,\n          countryId: filterData.countryId,\n          auditType: +filterData.auditType,\n        };\n      } else {\n        return {\n          practiceId: \"1,3,4,5,6\",\n          buId: \"170,211,123,82,168,207,212,18,213,49,149,208,243\",\n          customer:\n            \"128283684,116612093,123894900,63975211,1551287,94389335,93991408,1551294,94455985,129937850,76951255,112914302,54142249,1552214,132397598,109428419,94455988,1552593,36504344,1551362,1551376,26087285,116648754,94854626,114461301,97387326,1551399,1551909,94854623,24192899,1551980,1551910,128598943,128467119,94389332,1551929,59706234,82291358,1551944,2853559,1551521,1551952,125931702,63266772,1552011,94854630,112674610,1552012,130225404,1552737,55697033,111974038,118769156,132397596,4511021,3667922,127640293,96188256,111034788,1552059,94389337,1552068,90339052,85615658,97121507,85546349,129404696,2540692,13177220,117718253,97386586,94455984,1552145,1551986,1552149,1552150,94720314,1551965,2838049,85945151,3284412,97387329,92460160,128226785,125322705,63162798,67129169,41019114,1551753,76951256,95324519,1551877,29304173,1552226,1552189,94455982,94921283,76751379,1552198,38904085,119173217,21664192,1552217,1842057,36244913,96055886,1552240,1552252,76751371,112674609,1956839,97387333,52636336,42255432,120584753,1552276,132397597,41317099,69963531,1552292,1552293,94854625,106471491,1552849,96188257,97926363,1552295,94455981,72223410,24275141,98815571,87271863,2853561,1552344,1552345,117682329,118004584,1552363,94389333,3039808,1552359,132397594,94854627,97653997,98214365,128264227,58638638,112573879,90138245,90138244,90138246,90138243,90138241,97386610,128333765,90339053,1552400,1552375,92659540,29433193,80685749,106003070,114529861,130225403,128699085,1760934,43889231,97121510,1552430,111602229,94389334,124522210,41317098,52300271,121428211,98815570,1552454,99417583,132397595,1552486,1552690,1552313,56952600,1552475,132066226,130723112,97387330,97320365,119409379,123522147,67530124,112275294,97121508,1552531,1552539,1552541,14791169,91467597,1552545,26377379,130723113,122385399,76951259,1552564,2623413\",\n          BU: \"28,26,25\",\n          projectStatus: \"1145,1146\",\n          countryId: \"6,5,3,8,7,1,2,0\",\n          auditType: 484,\n        };\n      }\n    });\n  }, [filterData]);\n\n  useEffect(() => {\n    if (id != null) {\n      const updatePractice = practiceData.filter((values) =>\n        filterData?.practiceId?.includes(values.value)\n      );\n      const updatePracticeaccess = fullAccessBu.filter((values) =>\n        filterData?.practiceId?.includes(values.value)\n      );\n\n      setFullselectedBU(updatePracticeaccess);\n\n      const updateBuids = bussinessUnit.filter(\n        (values) => +filterData?.buId?.includes(values.value)\n      );\n\n      console.log(bussinessUnit);\n      console.log(filterData.buId);\n      console.log(updateBuids);\n      const updateCustomer = customersData.filter(\n        (values) => +filterData?.customer?.includes(values.value)\n      );\n      console.log(updateCustomer);\n      console.log(filterData.customer);\n      console.log(customersData);\n      const updatecontractTerms = contractTerms.filter((values) =>\n        formData.BU?.includes(values.value)\n      );\n\n      const updatecountry = country.filter((values) =>\n        formData.countryId?.includes(values.value)\n      );\n\n      const updateStatus = allocTypes.filter((values) =>\n        formData.projectStatus?.includes(values.value)\n      );\n\n      setSelectedDepartments(updateStatus);\n      setSelectedCountry(updatecountry);\n      setSelectedBussinessUnit(updateBuids);\n      setSelectedPractice(updatePractice);\n      setSelectedCustomers(updateCustomer);\n      setSelectedCustomersNull(updateCustomer);\n\n      setSelectedContractTerm(updatecontractTerms);\n    }\n  }, [\n    // fullAccessBu,\n    id,\n    formData.practiceId,\n    formData?.buId,\n    formData.countryId,\n    formData.customer,\n    formData.BU,\n    formData.projectStatus,\n    filterData?.buId,\n    filterData?.customer,\n    filterData?.practiceId,\n    customersData,\n    // practiceData,\n    // allocTypes,\n    // country,\n    bussinessUnit,\n    // contractTerms,\n  ]);\n\n  useEffect(() => {\n    // practice1();\n    // practice2();\n    getCountries();\n  }, []);\n\n  // useEffect(() => {\n  //   bussinessUnits();\n  // }, [selectedPractice[0]?.value, id]);\n\n  // useEffect(() => {\n  //   if (id != null) {\n  //     bussinessUnits();\n  //   }\n  // }, [filterData.buId, id]);\n\n  useEffect(() => {\n    if (id == null) {\n      CustomerPracticeR();\n    }\n  }, [selectedBussinessUnit]);\n\n  useEffect(() => {\n    if (id !== null) {\n      CustomerPracticeRSavedSearch();\n    }\n  }, [filterData?.buId]);\n\n  useEffect(() => {\n    // buPracticeNull();\n  }, [selectedPractice1]);\n\n  useEffect(() => {\n    if (id !== null) {\n      setTimeout(() => {\n        handleClickSavedSearch();\n      }, 4000);\n    }\n  }, [filterData]);\n\n  const handleClick = () => {\n    let valid = GlobalValidation(ref);\n\n    if (valid == true) {\n      setValidationMessage(true);\n    }\n\n    if (valid) {\n      return;\n    }\n\n    // setLoading(false)\n    setValidationMessage(false);\n\n    getData();\n    // setIsShow(true);\n  };\n  //=============For Saved Search============\n  const handleClickSavedSearch = () => {\n    let valid = GlobalValidation(ref);\n\n    if (valid == true) {\n      setValidationMessage(true);\n    }\n\n    if (valid) {\n      return;\n    }\n\n    // setLoading(false)\n    setValidationMessage(false);\n\n    getData1();\n    // setIsShow(true);\n  };\n\n  const getData1 = () => {\n    setDisplayState(true);\n    setLoadingState(true);\n    axios({\n      method: \"post\",\n      url: baseUrl + `/ProjectMS/project/getPracticeDashboard`,\n      data: {\n        buId: filterData.buId,\n        practiceId: filterData.practiceId,\n        customerId: filterData.customer,\n        // customerId: selectedCustomer,\n        contractTermId: filterData.BU,\n        countryId: filterData.countryId,\n        prjStatus: filterData.projectStatus,\n        toDt: \"2023-6-30\",\n        auditType: +filterData.auditType,\n      },\n      headers: { \"Content-Type\": \"application/json\" },\n      // signal: abortController.current.signal,\n    }).then((response) => {\n      const data = response.data;\n      console.log(data.length);\n      const countryIds = [];\n      data.forEach((e) => {\n        let countryName = {\n          id: e.id,\n          value: e.notify_pms,\n        };\n        countryIds.push(countryName);\n\n        setNotifyPmData(countryIds);\n      });\n      setData(data);\n      setSearchApi(data);\n      setTimeout(() => {\n        setVisible(!visible);\n        visible\n          ? setCheveronIcon(FaChevronCircleUp)\n          : setCheveronIcon(FaChevronCircleDown);\n        setIsShow(true);\n        setLoadingState(false);\n      }, 4000);\n    });\n    setDisplayState(false);\n    setLoading(false);\n  };\n\n  //============================\n  const getData = () => {\n    setDisplayState(true);\n    setLoadingState(true);\n    axios({\n      method: \"post\",\n      url: baseUrl + `/ProjectMS/project/getPracticeDashboard`,\n      data: {\n        buId: formData.buId,\n        practiceId: formData.practiceId,\n        customerId: formData.customer,\n        // customerId: selectedCustomer,\n        contractTermId: formData.BU,\n        countryId: formData.countryId,\n        prjStatus: formData.projectStatus,\n        toDt: \"2023-6-30\",\n        auditType: +formData.auditType,\n      },\n      headers: { \"Content-Type\": \"application/json\" },\n      // signal: abortController.current.signal,\n    }).then((response) => {\n      console.log(response);\n      const data = response.data;\n      console.log(data.length);\n      const countryIds = [];\n      data.forEach((e) => {\n        let countryName = {\n          id: e.id,\n          value: e.notify_pms,\n        };\n        countryIds.push(countryName);\n\n        setNotifyPmData(countryIds);\n      });\n\n      setData(data);\n      setSearchApi(data);\n      setLoadingState(false);\n      setVisible(!visible);\n      visible\n        ? setCheveronIcon(FaChevronCircleUp)\n        : setCheveronIcon(FaChevronCircleDown);\n      setIsShow(true);\n    });\n    setDisplayState(false);\n    setLoading(false);\n  };\n\n  const getCountries = () => {\n    axios\n      .get(baseUrl + `/dashboardsms/Dashboard/getCountry`)\n      .then((Response) => {\n        let countries = [];\n        countries.push({ value: 0, label: \"Others\" });\n        let data = Response.data;\n\n        data.length > 0 &&\n          data.forEach((e) => {\n            let countryObj = {\n              label: e.country_name,\n              value: e.id,\n            };\n            countries.push(countryObj);\n          });\n\n        //////////------------------------//////////\n        setCountry(countries);\n        if (id == null) {\n          setSelectedCountry(countries);\n        }\n      })\n      .catch((error) => console.log(error));\n  };\n  const userPractice = () => {\n    console.log(dataAccess);\n    axios\n      .get(\n        dataAccess == 126 || dataAccess == 908 || dataAccess == 911\n          ? baseUrl + `/ProjectMS/project/getallPractices`\n          : baseUrl +\n              `/ProjectMS/project/userPractice?loggedUserId=${loggedUserId}`\n      )\n      .then((res) => {\n        console.log(res.data);\n        const data = res.data;\n\n        let custom = [];\n\n        data.forEach((e) => {\n          let dpObj = {\n            label: e.group_name,\n            value: e.id,\n          };\n          custom.push(dpObj);\n          console.log(custom);\n          setPracticeData(custom);\n          if (id == null) {\n            setSelectedPractice(custom);\n          }\n        });\n      });\n  };\n  useEffect(() => {\n    userPractice();\n  }, []);\n\n  const CustomerPracticeR = () => {\n    axios({\n      method: \"post\",\n      url: baseUrl + `/ProjectMS/project/getCustomersByPractice`,\n      data: { buId: numbersString },\n    })\n      .then((res) => {\n        const data = res.data;\n        let custom = [];\n\n        data.forEach((e) => {\n          let dpObj = {\n            label: e.label,\n            value: e.id,\n          };\n          custom.push(dpObj);\n        });\n\n        setCustomersData(custom);\n        if (id == null) {\n          setSelectedCustomers(custom);\n        }\n      })\n      .catch((error) => {});\n  };\n  //============ For Saved Search===============\n  const CustomerPracticeRSavedSearch = () => {\n    axios({\n      method: \"post\",\n      url: baseUrl + `/ProjectMS/project/getCustomersByPractice`,\n      data: { buId: filterData?.buId },\n    })\n      .then((res) => {\n        const data = res.data;\n        let custom = [];\n\n        data.forEach((e) => {\n          let dpObj = {\n            label: e.label,\n            value: e.id,\n          };\n          custom.push(dpObj);\n        });\n\n        setCustomersData(custom);\n        if (id == null) {\n          setSelectedCustomers(custom);\n        }\n      })\n      .catch((error) => {});\n  };\n  //==============================================\n  useEffect(() => {\n    postData();\n  }, [pid, pmId, projectnames]);\n  console.log(selectedPractice.map((item) => item.value).join(\" \"));\n\n  const byByPractice = () => {\n    axios({\n      method: \"get\",\n      url:\n        baseUrl +\n        `/ProjectMS/project/getBUbyPractice?projectId=${selectedPractice\n          .map((item) => item.value)\n          .join(\" \")}`,\n    })\n      .then((res) => {\n        const data = res.data;\n        let custom = [];\n\n        data.forEach((e) => {\n          let dpObj = {\n            label: e.name,\n            value: e.id,\n          };\n          custom.push(dpObj);\n        });\n\n        setBussinessUnit(custom);\n        if (id === null) {\n          setSelectedBussinessUnit(custom);\n        }\n      })\n      .catch((error) => {});\n  };\n  //===============For Saved Search=====\n\n  const bUByPractice = () => {\n    axios({\n      method: \"get\",\n      url:\n        baseUrl +\n        `/ProjectMS/project/getBUbyPractice?projectId=${filterData?.practiceId}`,\n    })\n      .then((res) => {\n        const data = res.data;\n        let custom = [];\n\n        data.forEach((e) => {\n          let dpObj = {\n            label: e.name,\n            value: e.id,\n          };\n          custom.push(dpObj);\n        });\n\n        setBussinessUnit(custom);\n        if (id === null) {\n          setSelectedBussinessUnit(custom);\n        }\n      })\n      .catch((error) => {});\n  };\n\n  useEffect(() => {\n    if (id !== null) {\n      bUByPractice();\n    }\n  }, [filterData.practiceId]);\n  useEffect(() => {\n    if (id == null) {\n      byByPractice();\n    }\n  }, [selectedPractice[0]?.value]);\n  const sorting = (col) => {\n    if (order === \"ASC\") {\n      const sorted = [...data].sort((a, b) =>\n        a[col]?.toLowerCase() > b[col]?.toLowerCase() ? 1 : -1\n      );\n      setData(sorted);\n      setOrder(\"DSC\");\n    }\n    if (order === \"DSC\") {\n      const sorted = [...data].sort((a, b) =>\n        a[col]?.toLowerCase() < b[col]?.toLowerCase() ? 1 : -1\n      );\n      setData(sorted);\n      setOrder(\"ASC\");\n    }\n  };\n  const postData = () => {\n    axios({\n      method: \"post\",\n      url: baseUrl + `/ProjectMS/project/updateNotifyPm`,\n      data: {\n        id: pid,\n        notifyPm: pmId,\n      },\n    }).then((res) => {\n      const data = res.data;\n      const data1 = res?.data?.status?.projectName;\n      setProjectnames(data1);\n\n      setPostDataDetails(data);\n\n      setUpdate(true);\n\n      setTimeout(() => {\n        setUpdate(false);\n      }, 8000);\n    });\n  };\n\n  const handleFilter = (e) => {\n    if (e.target.value == \"\") {\n      setData(searchApi);\n    } else {\n      const filterResult = searchApi.filter(\n        (item) =>\n          item.project_name\n            ?.toLowerCase()\n            .includes(e.target.value.toLowerCase()) ||\n          item.prj_pm_name\n            ?.toLowerCase()\n            .includes(e.target.value.toLowerCase()) ||\n          item.ct_term?.toLowerCase().includes(e.target.value.toLowerCase())\n      );\n      setData(filterResult);\n    }\n    setFilterVal(e.target.value);\n  };\n  const sortnum = (col) => {\n    if (order === \"DSC\") {\n      const sorted = [...data].sort((x, y) =>\n        // true values first\n\n        x[col] === y[col] ? 0 : x[col] ? -1 : 1\n      );\n      setData(sorted);\n      setOrder(\"ASC\");\n    }\n    if (order === \"ASC\") {\n      const sorted = [...data].sort((x, y) =>\n        x[col] === y[col] ? 0 : x[col] ? 1 : -1\n      );\n      setData(sorted);\n      setOrder(\"DSC\");\n    }\n  };\n\n  const template = (data) => {\n    return (\n      <div>\n        {acessLevel == \"100\" ? (\n          <div style={{ cursor: \"not-allowed\" }}>\n            {\" \"}\n            <select\n              onChange={(e) => {\n                setPid(data.prj_id);\n\n                setPmId(e.target.value);\n                postData();\n              }}\n              style={{ pointerEvents: \"none\" }}\n            >\n              {getAllNames(data.notify_pms)?.map((val) => (\n                <option defaultValue={data[0]} value={val.id}>\n                  {val.value}\n                </option>\n              ))}\n            </select>\n          </div>\n        ) : (\n          <div>\n            {data.notify_pms === null ? (\n              \"\"\n            ) : (\n              <select\n                onChange={(e) => {\n                  setPid(data.prj_id);\n\n                  setPmId(e.target.value);\n                  postData();\n                }}\n              >\n                {getAllNames(data.notify_pms)?.map((val) => (\n                  <option defaultValue={data[0]} value={val.id}>\n                    {val.value}\n                  </option>\n                ))}\n              </select>\n            )}\n          </div>\n        )}\n      </div>\n    );\n  };\n\n  const score = (data) => {\n    return <div style={{ textAlign: \"right\" }}>{data.csat_result}</div>;\n  };\n  const [getPageData, setGetPageData] = useState(10);\n  const [pageNumber, setPageNumber] = useState(0);\n  const auditPerPage = getPageData;\n  const pagesVisited = pageNumber * auditPerPage;\n  let howMany = parseInt(pagesVisited) + parseInt(auditPerPage);\n  const displayIssues = data\n    .slice(pagesVisited, howMany)\n\n    .map((item, index) => {\n      return data.length > 0 ? (\n        <tr>\n          <td>\n            <div className=\"col-md-12 row\">\n              <div className=\"col-md-1\">\n                {item.var_gm <= 5 ? (\n                  <div className=\"legendContainer align left\">\n                    <div className=\"legend green\">\n                      <div className=\"legendCircle\" title=\"Risk\"></div>\n                      <div className=\"legendTxt\"></div>\n                    </div>\n                  </div>\n                ) : item.var_gm >= 10 ? (\n                  <div className=\"legendContainer align left\">\n                    <div className=\"legend red\">\n                      <div className=\"legendCircle\" title=\"Risk\"></div>\n                      <div className=\"legendTxt\"></div>\n                    </div>\n                  </div>\n                ) : (\n                  <div className=\"legendContainer align left\">\n                    <div className=\"legend amber\">\n                      <div className=\"legendCircle\" title=\"Risk\"></div>\n                      <div className=\"legendTxt\"></div>\n                    </div>\n                  </div>\n                )}\n              </div>{\" \"}\n              <div className=\"col-md-10 ellipsisHealth \">\n                <Link\n                  style={{ color: \"#495057\", textDecoration: \"underLine\" }}\n                  title={item.project_name}\n                  to={`/project/Overview/:${item.prj_id}`}\n                  target=\"_blank\"\n                >\n                  <span\n                    style={{ color: \"#495057\", textDecoration: \"underLine\" }}\n                  >\n                    {item.project_name}\n                  </span>\n                </Link>\n              </div>\n            </div>\n          </td>\n          <td>\n            <span title={item.prj_pm_name}>{item.prj_pm_name}</span>\n          </td>\n\n          <td>{/* {item.notify_pms} */}</td>\n          <td\n            style={{ textAlign: \"right\", backgroundColor: \"red\" }}\n            title={item.prj_compltn}\n          >\n            {item.prj_compltn}\n          </td>\n          <td style={{ textAlign: \"right\" }} title={item.ct_term}>\n            {item.ct_term}\n          </td>\n          <td style={{ textAlign: \"right\" }} title={item.res_count}>\n            {item.res_count}\n          </td>\n          <td style={{ textAlign: \"right\" }} title={item.pln_efforts}>\n            {item.pln_efforts}\n          </td>\n          <td style={{ textAlign: \"right\" }} title={item.eac_efforts}>\n            {item.eac_efforts}\n          </td>\n          <td style={{ textAlign: \"right\" }} title={item.var_efforts}>\n            {item.var_efforts <= 5 ? (\n              <div style={{ color: \"green\" }}>{item.var_efforts}</div>\n            ) : item.var_efforts >= 10 ? (\n              <div style={{ color: \"red\" }}>{item.var_efforts}</div>\n            ) : (\n              <div style={{ color: \"#ffbf00\" }}>{item.var_efforts}</div>\n            )}\n          </td>\n          <td style={{ textAlign: \"right\" }} title={item.pln_gm}>\n            {item.pln_gm}\n          </td>\n          <td style={{ textAlign: \"right\" }} title={item.eac_gm}>\n            {item.eac_gm}\n          </td>\n          <td style={{ textAlign: \"right\" }} title={item.var_gm}>\n            {item.var_gm <= 5 ? (\n              <div style={{ color: \"green\" }}>{item.var_gm}</div>\n            ) : item.var_gm >= 10 ? (\n              <div style={{ color: \"red\" }}>{item.var_gm}</div>\n            ) : (\n              <div style={{ color: \"#ffbf00\" }}>{item.var_gm}</div>\n            )}\n          </td>\n          <td style={{ textAlign: \"right\" }} title={item.critical_risks}>\n            {item.critical_risks <= 5 ? (\n              <div style={{ color: \"green\" }}>{item.critical_risks}</div>\n            ) : item.critical_risks >= 10 ? (\n              <div style={{ color: \"red\" }}>{item.critical_risks}</div>\n            ) : (\n              <div style={{ color: \"#ffbf00\" }}>{item.critical_risks}</div>\n            )}\n          </td>\n          <td style={{ textAlign: \"right\" }} title={item.high_risks}>\n            {item.high_risks <= 5 ? (\n              <div style={{ color: \"green\" }}>{item.high_risks}</div>\n            ) : item.high_risks >= 10 ? (\n              <div style={{ color: \"red\" }}>{item.high_risks}</div>\n            ) : (\n              <div style={{ color: \"#ffbf00\" }}>{item.high_risks}</div>\n            )}\n          </td>\n          <td style={{ textAlign: \"right\" }} title={item.med_risks}>\n            {item.med_risks}\n          </td>\n          <td style={{ textAlign: \"right\" }} title={item.low_risks}>\n            {item.low_risks}\n          </td>\n          <td title={item.audit_date}>{item.audit_date}</td>\n          <td title={item.audit_result}>{item.audit_result}</td>\n          <td title={item.csat_date}>{item.csat_date}</td>\n          <td title={item.csat_result}>{item.csat_result}</td>\n        </tr>\n      ) : (\n        <td colSpan=\"10\" align=\"center\">\n          No records found\n        </td>\n      );\n    }, []);\n\n  const pageCount = Math.ceil(data.length / auditPerPage);\n  const totalRows = data.length;\n  const firstrow = pageNumber * auditPerPage + 1;\n  const changePage = ({ selected }) => {\n    setPageNumber(selected);\n  };\n\n  const onChangePractice = (e) => {\n    const { value } = e.target;\n    setGetPageData(value);\n  };\n  const critical = (data) => {\n    const backgroundColor = data.prj_compltn >= \"100\" ? \"#fff4fa\" : \"#f4f8ff\"; // Change the condition as needed\n\n    return (\n      <div>\n        {data.critical_risks <= 5 ? (\n          <div\n            title={data.critical_risks}\n            // style={{ color: \"green\", textAlign: \"right\" }}\n            style={{\n              textAlign: \"right\",\n              backgroundColor,\n              height: \"28px\",\n              paddingTop: \"3px\",\n              color: \"green\",\n            }}\n          >\n            {data.critical_risks}\n          </div>\n        ) : data.critical_risks >= 10 ? (\n          <div\n            title={data.critical_risks}\n            // style={{ color: \"red\", textAlign: \"right\" }}\n            style={{\n              textAlign: \"right\",\n              backgroundColor,\n              height: \"28px\",\n              paddingTop: \"3px\",\n              color: \"red\",\n            }}\n          >\n            {data.critical_risks}\n          </div>\n        ) : (\n          <div\n            title={data.critical_risks}\n            // style={{ color: \"#ffbf00\", textAlign: \"right\" }}\n            style={{\n              textAlign: \"right\",\n              backgroundColor,\n              height: \"28px\",\n              paddingTop: \"3px\",\n              color: \"#ffbf00\",\n            }}\n          >\n            {data.critical_risks}\n          </div>\n        )}\n      </div>\n    );\n  };\n  const high = (data) => {\n    const backgroundColor = data.prj_compltn >= \"100\" ? \"#fff4fa\" : \"#f4f8ff\"; // Change the condition as needed\n\n    return (\n      <div>\n        {data.high_risks <= 5 ? (\n          <div\n            title={data.high_risks}\n            // style={{ color: \"green\", textAlign: \"right\" }}\n            style={{\n              textAlign: \"right\",\n              backgroundColor,\n              height: \"28px\",\n              paddingTop: \"3px\",\n              color: \"green\",\n            }}\n          >\n            {data.high_risks}\n          </div>\n        ) : data.high_risks >= 10 ? (\n          <div\n            title={data.high_risks}\n            // style={{ color: \"red\", textAlign: \"right\" }}\n            style={{\n              textAlign: \"right\",\n              backgroundColor,\n              height: \"28px\",\n              paddingTop: \"3px\",\n              color: \"red\",\n            }}\n          >\n            {data.high_risks}\n          </div>\n        ) : (\n          <div\n            title={data.high_risks}\n            // style={{ color: \"#ffbf00\", textAlign: \"right\" }}\n            style={{\n              textAlign: \"right\",\n              backgroundColor,\n              height: \"28px\",\n              paddingTop: \"3px\",\n              color: \"#ffbf00\",\n            }}\n          >\n            {data.high_risks}\n          </div>\n        )}\n      </div>\n    );\n  };\n  const meduim = (data) => {\n    const backgroundColor = data.prj_compltn >= \"100\" ? \"#fff4fa\" : \"#f4f8ff\"; // Change the condition as needed\n\n    return (\n      <div\n        title={data.med_risks}\n        // style={{ textAlign: \"right\" }}\n        style={{\n          textAlign: \"right\",\n          backgroundColor,\n          height: \"28px\",\n          paddingTop: \"3px\",\n        }}\n      >\n        {data.med_risks}\n      </div>\n    );\n  };\n  const low = (data) => {\n    const backgroundColor = data.prj_compltn >= \"100\" ? \"#fff4fa\" : \"#f4f8ff\"; // Change the condition as needed\n\n    return (\n      <div\n        title={data.low_risks}\n        // style={{ textAlign: \"right\" }}\n        style={{\n          textAlign: \"right\",\n          backgroundColor,\n          height: \"28px\",\n          paddingTop: \"3px\",\n        }}\n      >\n        {data.low_risks}\n      </div>\n    );\n  };\n  const terms = (data) => {\n    return <div title={data.ct_title}>{data.ct_term}</div>;\n  };\n  const varGm = (data) => {\n    const backgroundColor = data.prj_compltn >= \"100\" ? \"#fff4fa\" : \"#f2feff\"; // Change the condition as needed\n\n    return (\n      <div>\n        {data.var_gm <= 5 ? (\n          <div\n            title={data.var_gm}\n            // style={{ color: \"green\", textAlign: \"right\" }}\n            style={{\n              textAlign: \"right\",\n              backgroundColor,\n              height: \"28px\",\n              paddingTop: \"3px\",\n              color: \"green\",\n            }}\n          >\n            {data.var_gm}\n          </div>\n        ) : data.var_gm >= 10 ? (\n          <div\n            title={data.var_gm}\n            style={{\n              textAlign: \"right\",\n              backgroundColor,\n              height: \"28px\",\n              paddingTop: \"3px\",\n              color: \"red\",\n            }}\n            // style={{ color: \"red\", textAlign: \"right\" }}\n          >\n            {data.var_gm}\n          </div>\n        ) : (\n          <div\n            title={data.var_gm}\n            // style={{ color: \"#ffbf00\", textAlign: \"right\" }}\n            style={{\n              textAlign: \"right\",\n              backgroundColor,\n              height: \"28px\",\n              paddingTop: \"3px\",\n              color: \"#ffbf00\",\n            }}\n          >\n            {data.var_gm}\n          </div>\n        )}\n      </div>\n    );\n  };\n  const varColor = (data) => {\n    const backgroundColor = data.prj_compltn >= \"100\" ? \"#fff4fa\" : \"#f2f9f1\"; // Change the condition as needed\n\n    return (\n      <div>\n        {data.var_efforts <= 5 ? (\n          <div\n            title={data.var_efforts}\n            // style={{ color: \"green\", textAlign: \"right\" }}\n            style={{\n              textAlign: \"right\",\n              backgroundColor,\n              height: \"28px\",\n              paddingTop: \"3px\",\n              color: \"green\",\n            }}\n          >\n            {data.var_efforts}\n          </div>\n        ) : data.var_efforts >= 10 ? (\n          <div\n            title={data.var_efforts}\n            // style={{ color: \"red\", textAlign: \"right\" }}\n            style={{\n              textAlign: \"right\",\n              backgroundColor,\n              height: \"28px\",\n              paddingTop: \"3px\",\n              color: \"red\",\n            }}\n          >\n            {data.var_efforts}\n          </div>\n        ) : (\n          <div\n            title={data.var_efforts}\n            // style={{ color: \"#ffbf00\", textAlign: \"right\" }}\n            style={{\n              textAlign: \"right\",\n              backgroundColor,\n              height: \"28px\",\n              paddingTop: \"3px\",\n              color: \"#ffbf00\",\n            }}\n          >\n            {data.var_efforts}\n          </div>\n        )}\n      </div>\n    );\n  };\n  const comp = (data) => {\n    return (\n      <div title={data.prj_compltn} style={{ textAlign: \"right\" }}>\n        {data.prj_compltn}\n      </div>\n    );\n  };\n  const count = (data) => {\n    return (\n      <div title={data.res_count} style={{ textAlign: \"right\" }}>\n        {data.res_count}\n      </div>\n    );\n  };\n\n  //function to define row class name for background color\n  // Define the function to conditionally set the row class\n  const rowClass = (rowData) => {\n    // Add your condition here\n    // For example, let's highlight rows where age is greater than 35\n\n    return rowData.prj_compltn >= \"100\"\n      ? \"highlighted-row\"\n      : \"nonHighlighted-row\";\n  };\n  const efforsClass = (rowData) => {\n    return rowData.prj_compltn >= \"100\" ? \"red\" : \"pink\";\n  };\n  const eac = (data) => {\n    const backgroundColor = data.prj_compltn >= \"100\" ? \"#fff4fa\" : \"#f2f9f1\"; // Change the condition as needed\n\n    return (\n      <div\n        title={Math.floor(data.eac_efforts).toLocaleString(\"en-US\")}\n        // style={{ textAlign: \"right\" }}\n        style={{\n          textAlign: \"right\",\n          backgroundColor,\n          height: \"28px\",\n          paddingTop: \"3px\",\n        }}\n      >\n        {/* {data.eac_efforts?.toFixed(2).replace(/\\.\\d+$/, \".00\")} */}\n        {Math.floor(data.eac_efforts).toLocaleString(\"en-US\")}.00\n      </div>\n    );\n  };\n  const gm = (data) => {\n    const backgroundColor = data.prj_compltn >= \"100\" ? \"#fff4fa\" : \"#f2f9f1\"; // Change the condition as needed\n\n    return (\n      <div\n        title={data.pln_efforts?.toFixed(2).replace(/\\.\\d+$/, \".00\")}\n        style={{\n          textAlign: \"right\",\n          backgroundColor,\n          height: \"28px\",\n          paddingTop: \"3px\",\n        }}\n        // style={{ backgroundColor }}\n        // className={className}\n      >\n        {Math.floor(data.pln_efforts).toLocaleString(\"en-US\")}.00\n      </div>\n    );\n  };\n\n  const eac1 = (data) => {\n    const backgroundColor = data.prj_compltn >= \"100\" ? \"#fff4fa\" : \"#f2feff\"; // Change the condition as needed\n\n    const formattedValue = parseFloat(data.eac_gm).toLocaleString(\"en-US\", {\n      minimumFractionDigits: 2,\n      maximumFractionDigits: 2,\n    });\n\n    return (\n      <div\n        title={formattedValue}\n        style={{\n          textAlign: \"right\",\n          backgroundColor,\n          height: \"28px\",\n          paddingTop: \"3px\",\n        }}\n      >\n        {data.eac_gm === null ? \"\" : formattedValue}\n      </div>\n    );\n  };\n  const gm1 = (data) => {\n    const backgroundColor = data.prj_compltn >= \"100\" ? \"#fff4fa\" : \"#f2feff\"; // Change the condition as needed\n\n    return (\n      <div\n        title={data.pln_gm}\n        style={{\n          textAlign: \"right\",\n          backgroundColor,\n          height: \"28px\",\n          paddingTop: \"3px\",\n        }}\n        // style={{ textAlign: \"right\" }}\n      >\n        {data.pln_gm}\n      </div>\n    );\n  };\n  const pManager = (data) => {\n    return (\n      <div className=\"ellipsis\" title={data.prj_pm_name}>\n        {data.prj_pm_name}\n      </div>\n    );\n  };\n\n  const Legend = (data) => {\n    let legendElement = null;\n\n    if (data.var_efforts > 10 || data.var_gm > 10) {\n      legendElement = (\n        <div\n          className=\"legendContainer align left\"\n          style={{ marginRight: \"10px\" }}\n        >\n          <div className=\"legend red\">\n            <div className=\"legendCircle\" title=\"Risk\"></div>\n            <div className=\"legendTxt\">\n              <Link\n                title={data.project_name}\n                to={`/project/Overview/:${data.prj_id}`}\n                target=\"_blank\"\n              >\n                <span style={{ color: \"#495057\", textDecoration: \"underLine\" }}>\n                  {data.project_name}\n                </span>\n              </Link>\n            </div>\n          </div>\n        </div>\n      );\n    } else if (\n      (data.var_efforts >= 5 && data.var_efforts <= 10) ||\n      (data.var_gm >= 5 && data.var_gm <= 10)\n    ) {\n      legendElement = (\n        <div className=\"legendContainer align left\">\n          <div className=\"legend amber\">\n            <div className=\"legendCircle\" title=\"Risk\"></div>\n            <div className=\"legendTxt\">\n              <Link\n                title={data.project_name}\n                to={`/project/Overview/:${data.prj_id}`}\n                target=\"_blank\"\n              >\n                <span style={{ color: \"#495057\", textDecoration: \"underLine\" }}>\n                  {data.project_name}\n                </span>\n              </Link>\n            </div>\n          </div>\n        </div>\n      );\n    } else {\n      legendElement = (\n        <div className=\"legendContainer align left\">\n          <div className=\"legend green\">\n            <div className=\"legendCircle\" title=\"Risk\"></div>\n            <div className=\"legendTxt\">\n              <Link\n                title={data.project_name}\n                to={`/project/Overview/:${data.prj_id}`}\n                target=\"_blank\"\n              >\n                <span style={{ color: \"#495057\", textDecoration: \"underLine\" }}>\n                  {data.project_name}\n                </span>\n              </Link>\n            </div>\n          </div>\n        </div>\n      );\n    }\n\n    return (\n      <>\n        {legendElement}\n        {/* <p style={{ color }}>          \n          <Link\n            title={data.project_name}\n            to={`/project/Overview/:${data.prj_id}`}\n            target=\"_blank\"\n          >\n            {data.project_name}\n          </Link>\n        </p> */}\n      </>\n    );\n  };\n\n  const HelpPDFName = \"ProjectHealth.pdf\";\n  const Headername = \"Project Health help\";\n\n  const generateDropdownLabel = (selectedOptions, allOptions) => {\n    const selectedValues = selectedOptions.map((option) => option.value);\n\n    const allValues = allOptions.map((item) => item.value);\n\n    if (\n      selectedValues.length !== 0 &&\n      selectedValues.length === allValues.length\n    ) {\n      return \"<< ALL >>\";\n    } else {\n      return selectedOptions.map((option) => option.label).join(\", \");\n    }\n  };\n  return (\n    <div>\n      {validationMessage ? (\n        <div className=\"statusMsg error\">\n          {\" \"}\n          <span>\n            {\" \"}\n            <IoWarningOutline /> Please select the valid values for highlighted\n            fields{\" \"}\n          </span>\n        </div>\n      ) : (\n        \"\"\n      )}\n      {update ? (\n        <div className=\"statusMsg success\">\n          <span>NotifyPM updated successfully for {projectnames}</span>\n        </div>\n      ) : (\n        \"\"\n      )}\n      {editmsg ? (\n        <div className=\"statusMsg success\">\n          <span className=\"errMsg\">\n            <BiCheck size=\"1.4em\" /> &nbsp; Search created successfully.\n          </span>\n        </div>\n      ) : (\n        \"\"\n      )}\n      <div className=\"col-md-12\">\n        <div className=\"pageTitle\">\n          <div className=\"childOne\"></div>\n          <div className=\"childTwo\">\n            <h2>Project Health</h2>\n          </div>\n          <div className=\"childThree\"></div>\n        </div>\n      </div>\n      <ScreenBreadcrumbs\n        routes={routes}\n        currentScreenName={currentScreenName}\n      />\n      <div className=\"group mb-3 customCard\">\n        <div className=\"col-md-12 collapseHeader\">\n          <h2>Search Filters</h2>\n          <div className=\"helpBtn\">\n            <GlobalHelp pdfname={HelpPDFName} name={Headername} />\n          </div>\n          <div className=\"saveBtn\">\n            <SavedSearchGlobal\n              setEditAddmsg={setEditAddmsg}\n              pageurl={pageurl}\n              page_Name={page_Name}\n              payload={formData}\n            />\n          </div>\n          &nbsp;\n          <div\n            onClick={() => {\n              setVisible(!visible);\n              visible\n                ? setCheveronIcon(FaChevronCircleUp)\n                : setCheveronIcon(FaChevronCircleDown);\n            }}\n          >\n            <span>{cheveronIcon}</span>\n          </div>\n        </div>\n        <CCollapse visible={!visible}>\n          <div className=\"group-content row\">\n            {dataAccess == 908 || dataAccess == 911 || dataAccess == 126 ? (\n              <div className=\" col-md-4 mb-2 className\">\n                <div className=\"form-group row multiselect\">\n                  <label className=\"col-5\" htmlFor=\"practice\">\n                    Practice <span className=\" error-text\"> *</span>\n                  </label>\n                  <span className=\"col-1 p-0\">:</span>\n                  <div\n                    className=\" multiselect col-6\"\n                    ref={(ele) => {\n                      ref.current[0] = ele;\n                    }}\n                  >\n                    <MultiSelect\n                      ArrowRenderer={ArrowRenderer}\n                      valueRenderer={generateDropdownLabel}\n                      id=\"practiceId\"\n                      options={fullAccessBu}\n                      hasSelectAll={true}\n                      value={fullselectedBU}\n                      disabled={false}\n                      onChange={(e) => {\n                        setFullselectedBU(e);\n                        let filterPractice = [];\n                        e.forEach((d) => {\n                          filterPractice.push(d.value);\n                        });\n                        setFormData((prevVal) => ({\n                          ...prevVal,\n                          [\"practiceId\"]: filterPractice.toString(),\n                        }));\n                        setPractices(filterPractice.toString());\n                      }}\n                    />\n                  </div>\n                </div>\n              </div>\n            ) : (\n              <div className=\" col-md-4 mb-2 className\">\n                <div className=\"form-group row multiselect\">\n                  <label className=\"col-5\" htmlFor=\"practice\">\n                    Practice <span className=\" error-text\"> *</span>\n                  </label>\n                  <span className=\"col-1 p-0\">:</span>\n                  <div\n                    className=\" multiselect col-6\"\n                    ref={(ele) => {\n                      ref.current[0] = ele;\n                    }}\n                  >\n                    <MultiSelect\n                      ArrowRenderer={ArrowRenderer}\n                      valueRenderer={generateDropdownLabel}\n                      id=\"practiceId\"\n                      options={practiceData}\n                      hasSelectAll={true}\n                      value={selectedPractice}\n                      disabled={false}\n                      onChange={(e) => {\n                        setSelectedPractice(e);\n                        let filterPractice = [];\n                        e.forEach((d) => {\n                          filterPractice.push(d.value);\n                        });\n                        setFormData((prevVal) => ({\n                          ...prevVal,\n                          [\"practiceId\"]: filterPractice.toString(),\n                        }));\n                        setPractices(filterPractice.toString());\n                      }}\n                    />\n                  </div>\n                </div>\n              </div>\n            )}\n            <div className=\" col-md-4 mb-2\">\n              <div className=\"form-group row\">\n                <label className=\"col-5\" htmlFor=\"bu\">\n                  BU <span className=\" error-text\"> *</span>\n                </label>\n                <span className=\"col-1 p-0\">:</span>\n                <div\n                  className=\" multiselect col-6\"\n                  ref={(ele) => {\n                    ref.current[1] = ele;\n                  }}\n                >\n                  <MultiSelect\n                    ArrowRenderer={ArrowRenderer}\n                    valueRenderer={generateDropdownLabel}\n                    id=\"buId\"\n                    options={bussinessUnit}\n                    hasSelectAll={true}\n                    value={selectedBussinessUnit}\n                    disabled={false}\n                    onChange={(e) => {\n                      setSelectedBussinessUnit(e);\n                      let filterB = [];\n                      e.forEach((d) => {\n                        filterB.push(d.value);\n                      });\n                      setFormData((prevVal) => ({\n                        ...prevVal,\n                        [\"buId\"]: filterB.toString(),\n                      }));\n                      setBusinessUnit(filterB.toString());\n                    }}\n                  />\n                </div>\n              </div>\n            </div>\n            <div className=\" col-md-4 mb-2\">\n              <div className=\"form-group row\">\n                <label className=\"col-5\" htmlFor=\"customer\">\n                  Customer <span className=\" error-text\"> *</span>\n                </label>\n                <span className=\"col-1 p-0\">:</span>\n                <div\n                  className=\"multiselect col-6\"\n                  ref={(ele) => {\n                    ref.current[2] = ele;\n                  }}\n                >\n                  <MultiSelect\n                    ArrowRenderer={ArrowRenderer}\n                    valueRenderer={generateDropdownLabel}\n                    id=\"customer\"\n                    options={customersData}\n                    hasSelectAll={true}\n                    value={selectedCustomers}\n                    disabled={false}\n                    onChange={(e) => {\n                      setSelectedCustomers(e);\n                      let filterB = [];\n                      e.forEach((d) => {\n                        filterB.push(d.value);\n                      });\n                      setFormData((prevVal) => ({\n                        ...prevVal,\n                        [\"customer\"]: filterB.toString(),\n                      }));\n                      setCustomer(filterB.toString());\n                    }}\n                  />\n                </div>\n              </div>\n            </div>\n            <div className=\" col-md-4 mb-2\">\n              <div className=\"form-group row\">\n                <label className=\"col-5\" htmlFor=\"contractTerms\">\n                  Contract Terms\n                  <span className=\" error-text\"> *</span>\n                </label>\n                <span className=\"col-1 p-0\">:</span>\n                <div\n                  className=\" multiselect col-6\"\n                  ref={(ele) => {\n                    ref.current[3] = ele;\n                  }}\n                >\n                  <MultiSelect\n                    ArrowRenderer={ArrowRenderer}\n                    valueRenderer={generateDropdownLabel}\n                    id=\"BU\"\n                    options={contractTerms}\n                    hasSelectAll={true}\n                    isLoading={false}\n                    shouldToggleOnHover={false}\n                    disableSearch={false}\n                    value={selectedContractTerm}\n                    disabled={false}\n                    onChange={(s) => {\n                      setSelectedContractTerm(s);\n                      let filteredValues = [];\n                      s.forEach((d) => {\n                        filteredValues.push(d.value);\n                      });\n                      setContractTermsId(filteredValues.toString());\n                      setFormData((prevVal) => ({\n                        ...prevVal,\n                        [\"BU\"]: filteredValues.toString(),\n                      }));\n                    }}\n                  />\n                </div>\n              </div>\n            </div>\n            <div className=\" col-md-4 mb-2\">\n              <div className=\"form-group row\">\n                <label className=\"col-5\" htmlFor=\"country\">\n                  Country <span className=\" error-text\"> *</span>\n                </label>\n                <span className=\"col-1 p-0\">:</span>\n                <div\n                  className=\"multiselect col-6\"\n                  ref={(ele) => {\n                    ref.current[4] = ele;\n                  }}\n                >\n                  <MultiSelect\n                    ArrowRenderer={ArrowRenderer}\n                    valueRenderer={generateDropdownLabel}\n                    id=\"countryId\"\n                    options={country}\n                    hasSelectAll={true}\n                    value={selectedCountry}\n                    disabled={false}\n                    onChange={(e) => {\n                      setSelectedCountry(e);\n                      let filteredCountry = [];\n                      e.forEach((d) => {\n                        filteredCountry.push(d.value);\n                      });\n                      setFormData((prevVal) => ({\n                        ...prevVal,\n                        [\"countryId\"]: filteredCountry.toString(),\n                      }));\n                      setSeachDataC(filteredCountry.toString());\n                    }}\n                  />\n                </div>\n              </div>\n            </div>\n            <div className=\" col-md-4 mb-2\">\n              <div className=\"form-group row\">\n                <label className=\"col-5\" htmlFor=\"projectStatus\">\n                  Project Status\n                </label>\n                <span className=\"col-1 p-0\">:</span>\n                <div\n                  className=\" multiselect col-6\"\n                  // ref={(ele) => {\n                  //   ref.current[4] = ele;\n                  // }}\n                >\n                  <MultiSelect\n                    ArrowRenderer={ArrowRenderer}\n                    valueRenderer={generateDropdownLabel}\n                    id=\"projectStatus\"\n                    options={allocTypes}\n                    hasSelectAll={true}\n                    isLoading={false}\n                    shouldToggleOnHover={false}\n                    disableSearch={false}\n                    value={selectedDepartments}\n                    disabled={false}\n                    onChange={(s) => {\n                      setSelectedDepartments(s);\n                      let filteredValues = [];\n                      s.forEach((d) => {\n                        filteredValues.push(d.value);\n                      });\n                      setFormData((prevVal) => ({\n                        ...prevVal,\n                        [\"projectStatus\"]: filteredValues.toString(),\n                      }));\n                      setSearchdataPs(filteredValues.toString());\n                    }}\n                  />\n                </div>\n              </div>\n            </div>\n            <div className=\" col-md-4 mb-2\">\n              <div className=\"form-group row\">\n                <label className=\"col-5\" htmlFor=\"auditType\">\n                  Audit Type\n                </label>\n                <span className=\"col-1 p-0\">:</span>\n                <div className=\"col-6\">\n                  <select\n                    id=\"auditType\"\n                    onChange={(e) => {\n                      setAuditTypes(e.target.value);\n                      setFormData((prevVal) => ({\n                        ...prevVal,\n                        [\"auditType\"]: e.target.value,\n                      }));\n                    }}\n                    value={formData.auditType}\n                  >\n                    <option value=\"484\"> &lt;&lt;ALL &gt;&gt;</option>\n                    <option value=\"1285\">CMMI</option>\n                    <option value=\"478\">IQA</option>\n                    <option value=\"1272\">ISMS</option>\n                    <option value=\"1284\">ISO</option>\n                    <option value=\"477\">QCR</option>\n                  </select>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <center>\n            <button\n              type=\"button\"\n              className=\"btn btn-primary mb-3\"\n              title=\"Search\"\n              onClick={handleClick}\n            >\n              <FaSearch /> Search{\" \"}\n            </button>\n          </center>\n        </CCollapse>\n\n        <div></div>\n        <div className=\"group mb-3 customCard\">\n          {isShow == true ? (\n            <div>\n              <div className=\"legendContainer\">\n                <span className=\"font-weight-bold\">Efforts/GM Variance :</span>\n                <div className=\"legend red\">\n                  <div className=\"legendTxt t\">10 or Above 10</div>\n                </div>\n                <div className=\"legend amber\">\n                  <div className=\"legendTxt t\">Btw 5 and 10 </div>\n                </div>\n                <div className=\"legend green\">\n                  <div className=\"legendTxt t\">5 or below 5</div>\n                </div>\n                <div className=\"legendContainer\">\n                  <span className=\"font-weight-bold\">Risk :</span>\n\n                  <div className=\"legend red\">\n                    <div className=\"legendCircle \" title=\"New\"></div>\n                    <div className=\"legendTxt\">\n                      Critical above 1 or High above 5\n                    </div>\n                  </div>\n                  <div className=\"legend amber\">\n                    <div className=\"legendCircle\" title=\"In Progress\"></div>\n                    <div className=\"legendTxt\">2-5 High or 1 Critical </div>\n                  </div>\n                  <div className=\"legend green\">\n                    <div className=\"legendCircle \" title=\"Completed\"></div>\n                    <div className=\"legendTxt\">\n                      No Critical and High below 2{\" \"}\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div className=\"primeReactTable projectHealthTable darkHeader \">\n                <DataTable\n                  value={data}\n                  sortField={sortField}\n                  sortOrder={sortOrder}\n                  onSort={onSort}\n                  editMode=\"row\"\n                  dataKey=\"id\"\n                  onFilter={(e) => setFilters(e.filters)}\n                  rows={25}\n                  rowsPerPageOptions={[10, 25, 50]}\n                  filters={filters}\n                  header={header}\n                  showGridlines\n                  paginator\n                  paginationPerPage={5}\n                  headerColumnGroup={headerGroup}\n                  paginationRowsPerPageOptions={[5, 15, 25, 50]}\n                  paginationComponentOptions={{\n                    rowsPerPageText: \"Records per page:\",\n                    rangeSeparatorText: \"out of\",\n                  }}\n                  responsiveLayout=\"scroll\"\n                  rowClassName={rowClass}\n                >\n                  <Column\n                    field=\"project_name\"\n                    header={() => {\n                      return (\n                        <div style={{ backgroundColor: \"pink\" }}>\n                          project_name\n                        </div>\n                      );\n                    }}\n                    sortable\n                    // header=\"Project Name\"\n                    body={Legend}\n                  ></Column>\n                  <Column\n                    field=\"prj_pm_name\"\n                    header=\"Primary Manager\"\n                    body={pManager}\n                    sortable\n                  ></Column>\n                  <Column\n                    field=\"notify_pms\"\n                    header=\"Notify PM\"\n                    body={template}\n                  ></Column>\n                  <Column\n                    // rowClassName={rowClass}\n                    field=\"prj_compltn\"\n                    style={{ alignItems: \"center\" }}\n                    body={comp}\n                    header=\"Comp(%)\"\n                  ></Column>\n                  <Column field=\"ct_term\" header=\"Terms\" body={terms}></Column>\n                  <Column\n                    field=\"res_count\"\n                    header=\"Count\"\n                    body={count}\n                  ></Column>\n                  <Column\n                    field=\"pln_efforts\"\n                    // className={efforsClass}\n                    header=\"Plan\"\n                    body={gm}\n                    // className=\"pln_efforts\"\n                    // style={{ backgroundColor: \"#f2f9f1\" }}\n                  ></Column>\n                  <Column\n                    field=\"eac_efforts\"\n                    header=\"EAC\"\n                    className=\"complete\"\n                    body={eac}\n                    // style={{ backgroundColor: \"#f2f9f1\" }}\n                  ></Column>\n                  <Column\n                    field=\"var_efforts\"\n                    // style={{ backgroundColor: \"#f2f9f1\" }}\n                    className=\"complete\"\n                    header={<>\"Var(%)\"</>}\n                    body={varColor}\n                  ></Column>\n                  <Column\n                    field=\"pln_gm\"\n                    header=\"Plan\"\n                    body={gm1}\n                    className=\"gmRows\"\n                    // style={{ backgroundColor: \"#f2feff\" }}\n                  ></Column>\n                  <Column\n                    field=\"eac_gm\"\n                    header=\"EAC\"\n                    className=\"gmRows\"\n                    body={eac1}\n                    // style={{ backgroundColor: \"#f2feff\" }}\n                  ></Column>\n                  <Column\n                    field=\"var_gm\"\n                    className=\"gmRows\"\n                    header={<>\"Var(%)\"</>}\n                    body={varGm}\n                    // style={{ backgroundColor: \"#f2feff\" }}\n                  ></Column>\n                  <Column\n                    field=\"critical_risks\"\n                    header=\"Crt\"\n                    body={critical}\n                    className=\"riskRows\"\n                    // style={{ backgroundColor: \"#f4f8ff\" }}\n                  ></Column>\n                  <Column\n                    field=\"high_risks\"\n                    header=\"High\"\n                    body={high}\n                    // style={{ backgroundColor: \"#f4f8ff\" }}\n                    className=\"riskRows\"\n                  ></Column>\n                  <Column\n                    field=\"med_risks\"\n                    header=\"Med\"\n                    body={meduim}\n                    // style={{ backgroundColor: \"#f4f8ff\" }}\n                    className=\"riskRows\"\n                  ></Column>\n                  <Column\n                    field=\"low_risks\"\n                    header=\"Low\"\n                    body={low}\n                    // style={{ backgroundColor: \"#f4f8ff\" }}\n                    className=\"riskRows\"\n                  ></Column>\n                  <Column\n                    field=\"audit_date\"\n                    header=\"Month\"\n                    style={{ textAlign: \"right\" }}\n                  ></Column>\n                  <Column\n                    field=\"audit_result\"\n                    header=\"Res\"\n                    style={{ textAlign: \"right\" }}\n                  ></Column>\n                  <Column\n                    field=\"csat_date\"\n                    header=\"Month\"\n                    style={{ textAlign: \"right\" }}\n                  ></Column>\n                  <Column\n                    field=\"csat_result\"\n                    header=\"Score\"\n                    style={{ textAlign: \"right\" }}\n                    body={score}\n                  ></Column>\n                </DataTable>\n              </div>\n            </div>\n          ) : (\n            <></>\n          )}\n        </div>\n      </div>\n      {loadingState ? <Loader handleAbort={handleAbort} /> : \"\"}\n    </div>\n  );\n}\nexport default ProjectHealth;\n","import React, { useState, useEffect, useMemo } from \"react\";\nimport MaterialReactTable from \"material-react-table\";\nimport { Button, IconButton } from \"@mui/material\";\nimport fte_active from \"../../assets/images/empstatusIcon/fte_active.png\";\nimport fte_inactive from \"../../assets/images/empstatusIcon/fte_inactive.png\";\nimport fte_notice from \"../../assets/images/empstatusIcon/fte_notice.png\";\nimport subk_active from \"../../assets/images/empstatusIcon/subk_active.png\";\nimport subk_inactive from \"../../assets/images/empstatusIcon/subk_inactive.png\";\nimport subk_notice from \"../../assets/images/empstatusIcon/subk_notice.png\";\nimport { AiFillRightCircle } from \"react-icons/ai\";\nimport { CListGroup } from \"@coreui/react\";\nimport { GoPerson } from \"react-icons/go\";\nimport \"./BillableUtilizationTrendCollapsibleTable.scss\";\nimport { BiChevronRight } from \"react-icons/bi\";\n\nexport default function BillableUtilizationTrendCollapsibleTable(props) {\n  // icons\n\n  let unWantedCols = [\"id\"];\n\n  const icons = {\n    fte0: (\n      <img\n        src={fte_inactive}\n        alt=\"(fte_inactive_icon)\"\n        style={{ height: \"12px\" }}\n        title=\"Ex-Employee\"\n      />\n    ),\n    fte1: (\n      <img\n        src={fte_active}\n        alt=\"(fte_active_icon)\"\n        style={{ height: \"12px\" }}\n        title=\"Active Employee\"\n      />\n    ),\n    fte2: (\n      <img\n        src={fte_notice}\n        alt=\"(fte_notice_icon)\"\n        style={{ height: \"12px\" }}\n        title=\"Employee in notice period\"\n      />\n    ),\n    subk0: (\n      <img\n        src={subk_inactive}\n        alt=\"(subk_inactive_icon)\"\n        style={{ height: \"12px\" }}\n        title=\"Ex-Contractor\"\n      />\n    ),\n    subk1: (\n      <img\n        src={subk_active}\n        alt=\"(subk_active_icon)\"\n        style={{ height: \"12px\" }}\n        title=\"Active Contractor\"\n      />\n    ),\n    subk2: (\n      <img\n        src={subk_notice}\n        alt=\"(subk_notice_icon)\"\n        style={{ height: \"12px\" }}\n        title=\"Contractor in notice period\"\n      />\n    ),\n  };\n  const { data, expandedCols, colExpandState } = props;\n\n  const [nodes, setNodes] = useState([]);\n  const [columns, setColumns] = useState(null);\n  const [hiddenColumns, setHiddenColumns] = useState({});\n  const [colExpFlag, setColumnExpFlag] = useState(false);\n  const [headers, setHeaders] = useState([]);\n  const currentYear = new Date().getFullYear();\n  const numberWithCommas = (x) => {\n    var number = String(x);\n    if (number.includes(\".\") == true) {\n      var decimalNumbers = number;\n      var num = Number(decimalNumbers);\n      let FdN = num != null && num?.toFixed(2);\n      let final = FdN.split(\".\");\n      final[0] = final[0].replace(/(?<=\\d)(?=(\\d{3})+(?!\\d|\\.))/g, \",\");\n\n      return final.join(\".\");\n    } else {\n      return (\n        number != null && number?.replace(/(?<=\\d)(?=(\\d{3})+(?!\\d|\\.))/g, \",\")\n      );\n    }\n  };\n\n  useEffect(() => {\n    getData();\n  }, [data.tableData]);\n  var count = 0;\n  const getData = () => {\n    let expandClass = \"\";\n    if (colExpFlag == true && count > 0) {\n      expandClass = \"expanded\";\n    } else {\n      expandClass = \"\";\n    }\n    let tableData = data.tableData;\n    let columns = null;\n\n    if (data?.columns?.includes(\"'\")) {\n      columns = data?.columns?.replaceAll(\"'\", \"\");\n    } else {\n      columns = data?.columns;\n    }\n\n    let colArr = columns?.split(\",\");\n\n    let newHeaders = [];\n    let hiddenHeaders = [];\n\n    const obj = {};\n\n    for (let i = 0; i < colArr?.length; i++) {\n      let colVal = colArr[i].trim();\n\n      let firstData = tableData[0];\n      obj[colVal] = firstData[colVal];\n    }\n\n    let headerArray = Object.entries(obj);\n\n    let filteredHeaders = headerArray.filter(\n      ([key, value]) =>\n        typeof value === \"string\" &&\n        value.includes(\"^&\") &&\n        !key.includes(\"billAmt\")\n    );\n\n    setHeaders(filteredHeaders);\n\n    filteredHeaders.map(([key, value]) => {\n      if (expandedCols.includes(key)) {\n        hiddenHeaders.push({ [key]: false });\n      }\n    });\n\n    setHiddenColumns(Object.assign({}, ...hiddenHeaders));\n\n    let C = tableData?.filter((d) => d.id == -1);\n    filteredHeaders.map(([key, value], index) => {\n      newHeaders.push({\n        accessorKey: key,\n        header: value.split(\"^&\")[0],\n        enableColumnActions: false,\n        enableHiding: true,\n        Header: ({ column }) => (\n          <div\n            className={\n              key.includes(\"name\") ||\n              key.includes(\"csl\") ||\n              key.includes(\"dp\") ||\n              key.includes(\"customer\") ||\n              key.includes(\"projects\") ||\n              key.includes(\"empId\") ||\n              key.includes(\"doj\") ||\n              // key.includes(\"cader\") ||\n              key.includes(\"deptName\") ||\n              key.includes(\"supervisor\") ||\n              key.includes(\"prjMgr\") ||\n              key.includes(\"supervisor\") ||\n              key.includes(\"net_capacity\") ||\n              key.includes(\"billable_alloc\") ||\n              key.includes(\"billable_alloc_per\")\n                ? \"mixer\"\n                : key.includes(\"cader\")\n                ? \"mixer cader\"\n                : \"\"\n            }\n          >\n            {key == \"prjMgr\" ? (\n              <span>Project Manager</span>\n            ) : (\n              <> {value.split(\"^&\")[0]} </>\n            )}\n            {key == colExpandState[2] ? (\n              <span className={`expandIcon ${expandClass}`}>\n                <IconButton\n                  onClick={() => {\n                    setColumnExpFlag((prev) => !prev);\n                  }}\n                >\n                  <BiChevronRight />\n                </IconButton>\n              </span>\n            ) : null}\n          </div>\n        ),\n      });\n    });\n    // Cell: ({cell}) => (\n    //  <div>\n    //   {key === \"empStatus\" && cell.getValues(\"fte1\")? <GoPerson/>:\"\"}\n    //  </div>\n    // )\n    // for icons display\n    let subHeaders = C\n      ? Object.entries(C[0])?.filter((d) => !unWantedCols?.includes(d[0]))\n      : null;\n    // subHeaders?.sort();\n    newHeaders.map((data) => {\n      let i = newHeaders.indexOf(data);\n      let subArray = [];\n      subHeaders.map(([key, value], index) => {\n        let a = /\\d/.test(key.split(\"_\")[0]);\n        if (key.includes(\"_\") && a == true) {\n          let subkey = key.split(\"_\");\n          subkey = subkey.slice(0, -1).join(\"_\");\n          if (data.accessorKey.includes(subkey)) {\n            let obj = {\n              id: key,\n              header: value == null || value == 0 ? \"\" : value,\n              accessorKey: key,\n              Cell: ({ cell }) => {\n                return (\n                  <>\n                    <div title={cell.getValue()}>\n                      {cell.column.id == \"name\" && cell.row.original != null ? (\n                        <div>\n                          {icons[cell.row.original[\"empStatus\"]]}\n                          <span>{cell.getValue()}</span>\n                        </div>\n                      ) : key == \"net_capacity\" ||\n                        key == \"billable_alloc\" ||\n                        key == \"billable_alloc_per\" ||\n                        key.includes(\"billAmt\") ||\n                        key.includes(\"nCap\") ? (\n                        <div className=\"numData\">\n                          {numberWithCommas(cell.getValue())}\n                        </div>\n                      ) : key == \"doj\" ? (\n                        <div className=\"align center doj\">\n                          {cell.getValue()}\n                        </div>\n                      ) : key.includes(\"cader\") ? (\n                        <div className=\"align center cader\">\n                          {cell.getValue()}\n                        </div>\n                      ) : (\n                        cell.getValue()\n                      )}\n                    </div>\n                  </>\n                ); // <div>\n                //     <p>i&nbsp;{cell.getValue()}</p>\n\n                // </div>\n              },\n            };\n            subArray.push(obj);\n            newHeaders[i].columns = subArray;\n          }\n        } else {\n          if (key == data.accessorKey) {\n            let obj = {\n              id: key,\n              header: value == null || value == 0 ? \"\" : value,\n              accessorKey: key,\n              Header: ({ column }) => (\n                <div className={key.includes(\"cader\") ? \"cader\" : \"\"}>\n                  {value}\n                </div>\n              ),\n              Cell: ({ cell }) => {\n                return (\n                  <>\n                    <div title={cell.getValue()}>\n                      {cell.column.id == \"name\" && cell.row.original != null ? (\n                        <div>\n                          {icons[cell.row.original[\"empStatus\"]]}\n                          <span>{cell.getValue()}</span>\n                        </div>\n                      ) : key == \"net_capacity\" ||\n                        key == \"billable_alloc\" ||\n                        key == \"billable_alloc_per\" ||\n                        key.includes(\"billAmt\") ||\n                        key.includes(\"nCap\") ? (\n                        <div className=\"numData\">\n                          {numberWithCommas(cell.getValue())}\n                        </div>\n                      ) : key == \"doj\" ? (\n                        <div class=\"align center doj\">{cell.getValue()}</div>\n                      ) : key.includes(\"cader\") ? (\n                        <div className=\"align center cader\">\n                          {cell.getValue()}\n                        </div>\n                      ) : (\n                        cell.getValue()\n                      )}\n                    </div>\n                  </>\n                ); // <div>\n                //     <p>i&nbsp;{cell.getValue()}</p>\n\n                // </div>\n              },\n            };\n\n            newHeaders[i].columns = [obj];\n          }\n        }\n      });\n    });\n\n    setColumns(newHeaders);\n\n    let values = [];\n    let minusOneRow = [];\n\n    tableData?.map((d) => (d.id !== -1 ? values.push(d) : minusOneRow.push(d)));\n\n    let tempData = jsonToTree(values, { children: \"subRows\" });\n\n    let finalData = [...tempData.slice(2, tempData.length)];\n    setNodes(finalData);\n    // console.log(finalData);\n    // console.log(jsonToTree(values, { children: \"subRows\" }), \"nodes\");\n\n    //   setColumns(resp.data.tableData);\n    // });\n  };\n\n  // useEffect(() => {\n  //   colExpFlag ? setHiddenColumns({}) : colCollapse();\n  // }, [colExpFlag]);\n\n  const colCollapse = () => {\n    let hiddenHeaders = [];\n    // refactor this\n    headers.map(([key, value]) => {\n      if (expandedCols.includes(key)) {\n        hiddenHeaders.push({ [key]: false });\n      }\n    });\n\n    setHiddenColumns(Object.assign({}, ...hiddenHeaders));\n  };\n  useEffect(() => {\n    colExpFlag ? expandT() : expandF();\n    // getData();\n  }, [colExpFlag]);\n\n  const expandT = () => {\n    count++;\n    getData();\n    setHiddenColumns({});\n  };\n\n  const expandF = () => {\n    getData();\n  };\n\n  const jsonToTree = (flatArray, options) => {\n    options = {\n      id: \"id\",\n      parentId: \"parentId\",\n      children: \"subRows\",\n      ...options,\n    };\n    const dictionary = {}; // a hash table mapping to the specific array objects with their ids as key\n    const tree = [];\n    const children = options.children;\n    flatArray.forEach((node) => {\n      const nodeId = node[options.id];\n      const nodeParentId = node[options.parentId];\n      // set up current node data in dictionary\n      dictionary[nodeId] = {\n        [children]: [], // init a children property\n        ...node, // add other propertys\n        ...dictionary[nodeId], // children will be replaced if this node already has children property which was set below\n      };\n      dictionary[nodeParentId] = dictionary[nodeParentId] || { [children]: [] }; // if it's not exist in dictionary, init an object with children property\n      dictionary[nodeParentId][children].push(dictionary[nodeId]); // add reference to current node object in parent node object\n    });\n    // find root nodes\n    Object.values(dictionary).forEach((obj) => {\n      if (typeof obj[options.id] === \"undefined\") {\n        tree.push(...obj[children]);\n      }\n    });\n    return tree;\n  };\n\n  return (\n    <div\n      className=\"materialReactExpandableTable billableUtilTrendTable darkHeader\"\n      style={{ marginTop: \"20px\" }}\n    >\n      {nodes.length ? (\n        <MaterialReactTable\n          columns={columns}\n          data={nodes}\n          enableExpandAll={true} //hide expand all double arrow in column header\n          enableExpanding={false}\n          enablePagination={false}\n          enableRowVirtualization\n          enableBottomToolbar={false}\n          enableTopToolbar={false}\n          enableColumnActions={false}\n          enableSorting={false}\n          filterFromLeafRows //apply filtering to all rows instead of just parent rows\n          enablePinning\n          initialState={{\n            expanded: false,\n            density: \"compact\",\n            columnVisibility: { ...hiddenColumns },\n            columnPinning: { right: [\"total\"], left: [\"name\"] },\n          }} //expand all rows by default\n          state={{ columnVisibility: { ...hiddenColumns } }}\n          //paginateExpandedRows={false} //When rows are expanded, do not count sub-rows as number of rows on the page towards pagination\n          defaultColumn={{ minSize: 40, maxSize: 1000, size: 130 }} //units are in px\n          muiTableContainerProps={{\n            sx: { maxHeight: \"70vh\", width: \"auto\", maxWidth: \"fit-content\" },\n          }}\n          muiTableBodyProps={{\n            sx: {\n              \"&\": {\n                borderRight: \"1px solid #ccc\",\n                borderBottom: \"1px solid #ccc\",\n              },\n              \"& td\": {\n                borderRight: \"1px solid #ccc\",\n                height: \"22px\",\n                padding: \"0px 5px\",\n              },\n            },\n          }}\n          muiTableHeadProps={{\n            sx: {\n              \"& th\": {\n                borderTop: \"1px solid #ccc\",\n                borderRight: \"1px solid #ccc\",\n                background: \"#f4f4f4 \",\n                padding: \"0 5px\",\n              },\n            },\n          }}\n        />\n      ) : null}\n    </div>\n  );\n}\n","import React from \"react\";\nimport { ImSearch } from \"react-icons/im\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport moment from \"moment\";\nimport { BsInfoCircle } from \"react-icons/bs\";\nimport { AiFillWarning } from \"react-icons/ai\";\nimport BillableUtilizationTrendCollapsibleTable from \"./BillableUtilizationTrendCollapsibleTable\";\nimport { RiFileExcel2Line } from \"react-icons/ri\";\nimport ExcelJS from \"exceljs\";\nimport GlobalValidation from \"../ValidationComponent/GlobalValidation\";\nimport \"../../App.scss\";\nimport { useState, useEffect, useRef } from \"react\";\nimport axios from \"axios\";\nimport { CCollapse } from \"@coreui/react\";\nimport Loader from \"../Loader/Loader\";\nimport { environment } from \"../../environments/environment\";\nimport { MultiSelect } from \"react-multi-select-component\";\nimport {\n  FaCaretDown,\n  FaChevronCircleDown,\n  FaChevronCircleUp,\n  FaSearch,\n} from \"react-icons/fa\";\n\nfunction BillableUtilisationTrend() {\n  const [visible, setVisible] = useState(false);\n  const [cheveronIcon, setCheveronIcon] = useState(FaChevronCircleUp);\n  const [loader, setLoader] = useState(false);\n  const [searchp1, setSearchp1] = useState([]);\n  const [details, setDetails] = useState([]);\n  const ref = useRef([]);\n\n  const ArrowRenderer = ({ expanded }) => (\n    <>\n      {expanded ? (\n        <FaCaretDown className=\"chevronIcon\" />\n      ) : (\n        <FaCaretDown className=\"chevronIcon\" />\n      )}\n    </>\n  );\n  var d = new Date();\n  var year = d.getFullYear();\n  var month1 = d.getMonth();\n  const [business, setBusiness] = useState([]);\n  const [validationmessage, setValidationMessage] = useState(false);\n  const [bunit, setBunit] = useState([]);\n  const [countryids, setcountryids] = useState(\"6,5,3,8,7,1,2\");\n  const [selectedBusiness, setSelectedBusiness] = useState([]);\n  const [csl, setCsl] = useState([]);\n  const [selectedcsl, setSelectedcsl] = useState([]);\n  const [customer, setCustomer] = useState([]);\n  const [selectedcustomer, setSelectedcustomer] = useState([]);\n  const [dp, setDp] = useState([]);\n  const [selecteddp, setSelecteddp] = useState([]);\n  const [columns, setColumns] = useState([]);\n  const initialMonth = new Date();\n  initialMonth.setFullYear(initialMonth.getFullYear() - 1);\n  const [month, setMonth] = useState(initialMonth);\n  const [selectedDuration, setSelectedDuration] = useState(\"\");\n  const [durationOptions, setDurationOptions] = useState(12);\n  const [Dmonth, setDmonth] = useState(moment(moment().startOf(\"month\"))._d);\n  var maxDate = new Date();\n\n  var year = maxDate.getFullYear();\n  var month1 = maxDate.getMonth();\n  var minDate = new Date(year, month1 - 11);\n  var maxDate = new Date(year, month1 + 11);\n  const [searchType, SetSearchType] = useState([]);\n  const loggedUserId = localStorage.getItem(\"resId\");\n  const [resType, setRestype] = useState(\"-1\");\n  const [country, setCountry] = useState([]);\n  const [respdata, setRespdata] = useState([]);\n  const abortController = useRef(null);\n  const [selectedCountry, setSelectedCountry] = useState([]);\n\n  // const[nextmonth,setnextmonth] = useState()\n  const currentYear = new Date().getFullYear();\n  // for table display\n\n  let rows = 10;\n  const previousYear = currentYear - 1;\n\n  const initialValue = {\n    BuIds: \"\",\n    CountryIds: \"\",\n    FromDate: \"\",\n    Duration: \"\",\n    searchType: \"\",\n    resType: \"-1\",\n    serarchVals: \"\",\n    isExport: \"0\",\n    UserId: loggedUserId,\n  };\n  const [formData, setFormData] = useState(initialValue);\n  const FilterChangeHandler = (e) => {\n    const { id, value } = e.target;\n    setFormData((prevVal) => ({ ...prevVal, [id]: value }));\n  };\n\n  const handleAbort = () => {\n    abortController.current && abortController.current.abort();\n    setLoader(false);\n  };\n  const generateDropdownLabel = (selectedOptions, allOptions) => {\n    const selectedValues = selectedOptions.map((option) => option.value);\n    const allValues = allOptions.map((item) => item.value);\n\n    if (selectedValues.length === allValues.length) {\n      return \"<< ALL >>\";\n    } else {\n      return selectedOptions.map((option) => option.label).join(\", \");\n    }\n  };\n\n  const [data, setData] = useState({});\n  const [isShow, setIsShow] = useState(false);\n  const baseUrl = environment.baseUrl;\n\n  const getBusinessUnit = () => {\n    axios\n      .get(\n        baseUrl + `/CostMS/cost/getDepartments`\n        // `http://localhost:8090/CostMS/cost/getDepartments`\n      )\n      .then((Response) => {\n        let bussinessunits = [];\n        let data = Response.data;\n        data.length > 0 &&\n          data.forEach((e) => {\n            let countryObj = {\n              label: e.label,\n              value: e.value,\n            };\n            bussinessunits.push(countryObj);\n          });\n        setBusiness(bussinessunits);\n        setBunit(bussinessunits);\n        setSelectedBusiness(bussinessunits);\n      })\n      .catch((error) => console.log(error));\n  };\n\n  const getCustomer = () => {\n    axios\n      .get(baseUrl + `/ProjectMS/Engagement/customerdata`)\n      .then((Response) => {\n        let CustomersList = [];\n        let data = Response.data;\n        data.length > 0 &&\n          data.forEach((e) => {\n            let customerobj = {\n              label: e.fullName,\n              value: e.id,\n            };\n            CustomersList.push(customerobj);\n          });\n\n        setCustomer(CustomersList);\n        setSelectedcustomer(CustomersList);\n      })\n      .catch((error) => console.log(error));\n  };\n\n  const getcsl = () => {\n    axios\n      .get(\n        baseUrl +\n          `/SalesMS/MasterController/getCslDropDownData?userId=${loggedUserId}`\n      )\n      .then((Response) => {\n        let CSlList = [];\n        let data = Response.data;\n        data.length > 0 &&\n          data.forEach((e) => {\n            let cslobj = {\n              label: e.PersonName,\n              value: e.id,\n            };\n            CSlList.push(cslobj);\n          });\n        setCsl(CSlList);\n        setSelectedcsl(CSlList);\n      })\n      .catch((error) => console.log(error));\n  };\n\n  const getdp = () => {\n    axios\n      .get(\n        baseUrl + `/CommonMS/master/getDPDropDownData?userId=${loggedUserId}`\n      )\n      .then((Response) => {\n        let dpList = [];\n        let data = Response.data;\n        data.length > 0 &&\n          data.forEach((e) => {\n            let dpobj = {\n              label: e.PersonName,\n              value: e.id,\n            };\n            dpList.push(dpobj);\n          });\n        setDp(dpList);\n        setSelecteddp(dpList);\n      });\n  };\n\n  const getCountry = () => {\n    axios.get(baseUrl + `/CommonMS/master/getCountries`).then((Response) => {\n      let countryList = [];\n      let data = Response.data;\n      data.length > 0 &&\n        data.forEach((e) => {\n          let countryobj = {\n            label: e.country_name,\n            value: e.id,\n          };\n          countryList.push(countryobj);\n        });\n      const sortedCountryList = countryList.slice().sort((a, b) => {\n        return a.label.localeCompare(b.label);\n      });\n\n      setCountry(sortedCountryList);\n      setSelectedCountry(sortedCountryList);\n    });\n  };\n\n  const handleClick = () => {\n    let valid = GlobalValidation(ref);\n    if (valid) {\n      {\n        setValidationMessage(true);\n        setTimeout(() => {\n          setValidationMessage(false);\n        }, 3000);\n      }\n      return;\n    }\n    if (valid) {\n      return;\n    }\n\n    getData();\n  };\n\n  const lastYearDate = moment().subtract(1, \"year\");\n\n  const currentDate = lastYearDate.date(1).format(\"YYYY-MM-DD\");\n\n  // const currentDate = moment(new Date()).format(\"YYYY-MM-01\");\n  const getData = () => {\n    const data = {\n      BuIds: bunit.map((d) => d.value).toString(),\n      CountryIds: countryids,\n      FromDate:\n        formData.month == \"\" || formData.month == undefined\n          ? currentDate\n          : formData.month,\n      Duration: selectedDuration,\n      searchType: searchType,\n      resType: resType,\n      serarchVals: searchp1,\n      isExport: \"0\",\n      UserId: loggedUserId,\n    };\n\n    // for searchvals\n    if (searchType == \"CSL\") {\n      data[\"serarchVals\"] = selectedcsl.map((d) => d.value).toString();\n    } else if (searchType == \"DP\") {\n      data[\"serarchVals\"] = selecteddp.map((d) => d.value).toString();\n    } else {\n      data[\"serarchVals\"] = selectedcustomer.map((d) => d.value).toString();\n    }\n\n    setLoader(true);\n    abortController.current = new AbortController();\n    axios({\n      method: \"post\",\n      url:\n        baseUrl +\n        `/UtilityMS/BillableUtilizationTrend/getbilliableUtilizationTrend`,\n      data: data,\n      signal: abortController.current.signal,\n    })\n      .then((res) => {\n        setLoader(false);\n        let detail = res.data.tableData;\n        let cols = res.data.columns?.replaceAll(\"'\", \"\").split(\",\");\n        let fdata = res.data;\n        setDetails(detail);\n        setData(res.data);\n        setColumns(cols);\n        setIsShow(true);\n        let valid = GlobalValidation(ref);\n        !valid && setVisible(!visible);\n        visible\n          ? setCheveronIcon(FaChevronCircleUp)\n          : setCheveronIcon(FaChevronCircleDown);\n      })\n      .catch((error) => {\n        console.log(\"Error :\" + error);\n      });\n  };\n  useEffect(() => {}, [data]);\n\n  useEffect(() => {\n    getBusinessUnit();\n    getCustomer();\n    getcsl();\n    getdp();\n    getCountry();\n  }, []);\n\n  const handleMonthChange = (selectedMonth) => {\n    const currentMonth = new Date();\n    const monthsDiff =\n      (selectedMonth.getFullYear() - currentMonth.getFullYear()) * 12 +\n      (selectedMonth.getMonth() - currentMonth.getMonth());\n\n    if (monthsDiff < 0) {\n      setDurationOptions(12);\n    } else {\n      setDurationOptions(12 - monthsDiff);\n    }\n    setFormData((prev) => ({\n      ...prev,\n      [\"month\"]: moment(selectedMonth).format(\"yyyy-MM-DD\"),\n    }));\n    setMonth(selectedMonth);\n    setSelectedDuration(\"\");\n  };\n  var d = new Date();\n  var year = d.getFullYear();\n  var month1 = d.getMonth();\n  var c = new Date(year + 1, month1);\n  var E = new Date(year - 5, month1);\n  const handleOnExport = () => {\n    const excludeProperties = [\n      \"resourceId\",\n      \"DpId\",\n      \"empStatus\",\n      \"customerId\",\n      \"id\",\n      \"cslId\",\n      \"lvl\",\n      \"keyAttr\",\n      \"parentId\",\n      \"projectId\",\n    ];\n    const desiredHeaderOrder = [\n      \"name\",\n      \"csl\",\n      \"dp\",\n      \"customer\",\n      \"projects\",\n      \"empId\",\n      \"doj\",\n      \"cader\",\n      \"deptName\",\n      \"supervisor\",\n      \"prjMgr\",\n      \"net_capacity\",\n      \"billable_alloc\",\n      \"billable_alloc_per\",\n    ];\n    const dateBasedHeaders = Array.from(\n      new Set(\n        details\n          .slice(2)\n          .flatMap((item) => Object.keys(item))\n          .filter((key) => key.match(/^\\d{4}_\\d{2}_\\d{2}_/))\n      )\n    );\n    const filteredDateBasedHeaders = dateBasedHeaders.map((header) =>\n      header.replace(\"^&2^&1\", \"\").replace(\"^&1^&2\", \"\")\n    );\n    const headerRow1 = [...desiredHeaderOrder, ...filteredDateBasedHeaders];\n    const filteredData = details.slice(2).map((item) => {\n      const filteredItem = Object.fromEntries(\n        Object.entries(item).filter(([key]) => !excludeProperties.includes(key))\n      );\n      return filteredItem;\n    });\n    console.log(filteredData);\n    const dataRows = filteredData\n      .slice(1)\n      .map((item) => [\n        ...desiredHeaderOrder.map((key) => (item[key] ? item[key] : \"\")),\n        ...filteredDateBasedHeaders.map((header) =>\n          item[header] ? item[header] : \"\"\n        ),\n      ]);\n\n    const workbook = new ExcelJS.Workbook();\n    const worksheet = workbook.addWorksheet(\"ResourceAllocationTrendTable\");\n    const headerRow = worksheet.addRow(headerRow1);\n    headerRow.font = { bold: true };\n\n    // Add the actual data rows\n    for (let i = 0; i < dataRows.length; i++) {\n      const row = worksheet.addRow(dataRows[i]);\n    }\n    const boldRow = [1];\n    boldRow.forEach((index) => {\n      const row = worksheet.getRow(index);\n      row.font = { bold: true };\n    });\n\n    // Save the workbook\n    workbook.xlsx.writeBuffer().then((buffer) => {\n      saveAs(new Blob([buffer]), \"ResourceAllocationTrendTable.xlsx\");\n    });\n  };\n  return (\n    <div>\n      {validationmessage ? (\n        <div className=\"statusMsg error\">\n          <AiFillWarning />\n          Please select valid values for highlighted fields\n        </div>\n      ) : (\n        \"\"\n      )}\n      <div className=\"col-md-12\">\n        <div className=\"pageTitle\">\n          <div className=\"childOne\"></div>\n          <div className=\"childTwo\">\n            <h2>Billable Utilization Trend</h2>\n          </div>\n          <div className=\"childThree\"></div>\n        </div>\n      </div>\n\n      <div className=\"group mb-3 customCard\">\n        <div className=\"col-md-12 collapseHeader\">\n          <h2>Search Filters</h2>\n\n          <div\n            onClick={() => {\n              setVisible(!visible);\n              visible\n                ? setCheveronIcon(FaChevronCircleUp)\n                : setCheveronIcon(FaChevronCircleDown);\n            }}\n          >\n            <span>{cheveronIcon}</span>\n          </div>\n        </div>\n        <CCollapse visible={!visible}>\n          <div className=\"group-content row\">\n            <div className=\" col-md-3 \">\n              <div className=\"form-group row\">\n                <label className=\"col-5\" htmlFor=\"searchType\">\n                  Business Unit&nbsp;\n                  <span className=\"col-1 p-0 error-text\"> *</span>\n                </label>\n                <span className=\"col-1 \">:</span>\n\n                <div\n                  className=\"col-6 multiselect\"\n                  ref={(ele) => {\n                    ref.current[0] = ele;\n                  }}\n                >\n                  <MultiSelect\n                    ArrowRenderer={ArrowRenderer}\n                    id=\"BuIds\"\n                    value={bunit}\n                    options={business}\n                    hasSelectAll={true}\n                    isLoading={false}\n                    shouldToggleOnHover={false}\n                    disableSearch={false}\n                    valueRenderer={generateDropdownLabel}\n                    disabled={false}\n                    onChange={(s) => {\n                      setSelectedBusiness(s);\n                      setBunit(s);\n                    }}\n                  />\n                </div>\n              </div>\n            </div>\n            <div className=\" col-md-3 mb-2\">\n              <div className=\"form-group row\">\n                <label className=\"col-5\" htmlFor=\"searchType\">\n                  Search Type&nbsp;<span className=\" error-text\"> *</span>\n                </label>\n                <span className=\"col-1 \">:</span>\n                <div className=\" col-6\">\n                  <select\n                    ref={(ele) => {\n                      ref.current[1] = ele;\n                    }}\n                    className=\"error enteredDetails cancel text\"\n                    id=\"SearchType\"\n                    name=\"searchType\"\n                    onChange={(e) => {\n                      SetSearchType(e.target.value);\n                    }}\n                  >\n                    <option value=\"\">{\"<<Please Select>>\"}</option>\n                    <option value=\"Customer\">Customer</option>\n                    <option value=\"CSL\">CSL</option>\n                    <option value=\"DP\">Delivery Partner</option>\n                  </select>\n                </div>\n              </div>\n            </div>\n            {searchType == \"CSL\" ? (\n              <div className=\" col-md-3 \">\n                <div className=\"form-group row\">\n                  <label className=\"col-5\" htmlFor=\"searchType\">\n                    CSL&nbsp;\n                    <span className=\"col-1 p-0 error-text\"> *</span>\n                  </label>\n                  <span className=\"col-1 \">:</span>\n                  <div className=\"col-6\">\n                    <div\n                      className=\"multiselect\"\n                      ref={(ele) => {\n                        ref.current[0] = ele;\n                      }}\n                    >\n                      <MultiSelect\n                        ArrowRenderer={ArrowRenderer}\n                        id=\"CSL\"\n                        value={selectedcsl}\n                        options={csl}\n                        hasSelectAll={true}\n                        isLoading={false}\n                        shouldToggleOnHover={false}\n                        disableSearch={false}\n                        valueRenderer={generateDropdownLabel}\n                        disabled={false}\n                        onChange={(s) => {\n                          setSelectedcsl(s);\n                          let filteredValues = [];\n                          s.forEach((d) => {\n                            filteredValues.push(d.value);\n                          });\n                          setSearchp1(filteredValues.toString());\n                        }}\n                      />\n                    </div>\n                  </div>\n                </div>\n              </div>\n            ) : (\n              \"\"\n            )}\n\n            {searchType == \"DP\" ? (\n              <div className=\" col-md-3 \">\n                <div className=\"form-group row\">\n                  <label className=\"col-5\" htmlFor=\"searchType\">\n                    Delivery Partner&nbsp;\n                    <span className=\"col-1 p-0 error-text\"> *</span>\n                  </label>\n                  <span className=\"col-1 \">:</span>\n                  <div className=\"col-6\">\n                    <div\n                      className=\"multiselect\"\n                      ref={(ele) => {\n                        ref.current[0] = ele;\n                      }}\n                    >\n                      <MultiSelect\n                        ArrowRenderer={ArrowRenderer}\n                        id=\"dp\"\n                        value={selecteddp}\n                        valueRenderer={generateDropdownLabel}\n                        options={dp}\n                        hasSelectAll={true}\n                        isLoading={false}\n                        shouldToggleOnHover={false}\n                        disableSearch={false}\n                        disabled={false}\n                        onChange={(s) => {\n                          setSelecteddp(s);\n                          let filteredValues = [];\n                          s.forEach((d) => {\n                            filteredValues.push(d.value);\n                          });\n                          setSearchp1(filteredValues.toString());\n                        }}\n                      />\n                    </div>\n                  </div>\n                </div>\n              </div>\n            ) : (\n              \"\"\n            )}\n\n            {searchType == \"Customer\" ? (\n              <div className=\" col-md-3 \">\n                <div className=\"form-group row\">\n                  <label className=\"col-5\" htmlFor=\"searchType\">\n                    Customer&nbsp;\n                    <span className=\"col-1 p-0 error-text\"> *</span>\n                  </label>\n                  <span className=\"col-1 \">:</span>\n                  <div className=\"col-6\">\n                    <div\n                      className=\"multiselect\"\n                      ref={(ele) => {\n                        ref.current[0] = ele;\n                      }}\n                    >\n                      <MultiSelect\n                        ArrowRenderer={ArrowRenderer}\n                        id=\"Customer\"\n                        valueRenderer={generateDropdownLabel}\n                        value={selectedcustomer}\n                        options={customer}\n                        hasSelectAll={true}\n                        isLoading={false}\n                        shouldToggleOnHover={false}\n                        disableSearch={false}\n                        disabled={false}\n                        onChange={(s) => {\n                          setSelectedcustomer(s);\n                          let filteredValues = [];\n                          s.forEach((d) => {\n                            filteredValues.push(d.value);\n                          });\n                          setSearchp1(filteredValues.toString());\n                        }}\n                      />\n                    </div>\n                  </div>\n                </div>\n              </div>\n            ) : (\n              \"\"\n            )}\n            <div className=\" col-md-3 mb-2\">\n              <div className=\"form-group row\">\n                <label className=\"col-5 \" htmlFor=\"resType\">\n                  Res. Type\n                </label>\n                <span className=\"col-1  p-0\">:</span>\n                <div className=\"col-6\">\n                  <select\n                    id=\"resType\"\n                    onChange={(e) => {\n                      setRestype(e.target.value);\n                    }}\n                  >\n                    <option value=\"null\">&lt;&lt; All &gt;&gt;</option>\n                    <option value=\"fte\">Employee</option>\n                    <option value=\"subK\">Contractor</option>\n                  </select>\n                </div>\n              </div>\n            </div>\n            <div className=\" col-md-3 mb-2\">\n              <div className=\"form-group row\">\n                <label className=\"col-5\" htmlFor=\"resLocation\">\n                  Res. Location&nbsp;\n                  <span className=\" error-text\"> *</span>\n                </label>\n                <span className=\"col-1 p-0 \">:</span>\n                <div\n                  className=\" multiselect col-6\"\n                  ref={(ele) => {\n                    ref.current[2] = ele;\n                  }}\n                >\n                  <MultiSelect\n                    ArrowRenderer={ArrowRenderer}\n                    id=\"CountryIds\"\n                    valueRenderer={generateDropdownLabel}\n                    value={selectedCountry}\n                    options={country}\n                    hasSelectAll={true}\n                    isLoading={false}\n                    shouldToggleOnHover={false}\n                    disableSearch={false}\n                    disabled={false}\n                    onChange={(s) => {\n                      setSelectedCountry(s);\n                      let filteredValues = [];\n                      s.forEach((d) => {\n                        filteredValues.push(d.value);\n                      });\n                      setcountryids(filteredValues.toString());\n                    }}\n                  />\n                </div>\n              </div>\n            </div>\n            <div className=\" col-md-3 mb-2\">\n              <div className=\"form-group row\">\n                <label className=\"col-5\" htmlFor=\"startMonth\">\n                  Start Month\n                </label>\n                <span className=\"col-1 p-0\">:</span>\n                <div className=\"col-6\" style={{ zIndex: \"3\" }}>\n                  <DatePicker\n                    id=\"month\"\n                    selected={month}\n                    maxDate={c}\n                    minDate={E}\n                    onChange={handleMonthChange}\n                    dateFormat=\"MMM-yyyy\"\n                    showMonthYearPicker\n                  />\n                </div>\n              </div>\n            </div>\n            <div className=\" col-md-3 mb-2\">\n              <div className=\"form-group row\">\n                <label className=\"col-5\" htmlFor=\"duration\">\n                  Duration&nbsp; <span className=\"error-text\"> *</span>\n                </label>\n                <span className=\"col-1\">:</span>\n                <div className=\"col-6\">\n                  <select\n                    ref={(ele) => {\n                      ref.current[3] = ele;\n                    }}\n                    className=\"error enteredDetails cancel text\"\n                    id=\"duration\"\n                    name=\"duration\"\n                    value={selectedDuration}\n                    onChange={(e) => setSelectedDuration(e.target.value)}\n                  >\n                    <option value=\"\"> &lt;&lt;Please Select&gt;&gt;</option>\n                    {[...Array(durationOptions)].map((_, index) => (\n                      <option key={index + 1} value={index + 1}>\n                        {index + 1}\n                      </option>\n                    ))}\n                  </select>\n                </div>\n              </div>\n            </div>\n          </div>\n          {/*--------------------------- Save Button --------------------------*/}\n          <div className=\" form-group col-md-12 col-sm-12 col-xs-12 btn-container center my-3 mb-2\">\n            <button\n              className=\"btn btn-primary\"\n              type=\"submit\"\n              onClick={handleClick}\n            >\n              <ImSearch /> Search\n            </button>\n          </div>\n        </CCollapse>\n        {loader ? <Loader handleAbort={handleAbort} /> : \"\"}\n      </div>\n      {isShow == true ? (\n        <div className=\"col-12\">\n          <>\n            {/* {\"\" + Object.keys(data).length} */}\n            <div className=\"col-mt-12\" style={{ height: \"10px\" }}>\n              <div>\n                <span>\n                  <span\n                    style={{ color: \"#9d7c42\", fontStyle: \"italic\" }}\n                    className=\"mb-5\"\n                  >\n                    <BsInfoCircle /> All numbers are in hours\n                  </span>\n                </span>\n              </div>\n            </div>\n            <div className=\"mb-2\" align=\"right\">\n              <RiFileExcel2Line\n                size=\"1.5em\"\n                title=\"Export to Excel\"\n                style={{ color: \"green\", float: \"right\" }}\n                cursor=\"pointer\"\n                onClick={handleOnExport}\n              />\n              <br />\n            </div>\n            <BillableUtilizationTrendCollapsibleTable\n              data={data}\n              expandedCols={[\"csl\", \"dp\", \"customer\", \"projects\"]}\n              colExpandState={[\"0\", \"0\", \"name\"]}\n            />\n          </>\n        </div>\n      ) : (\n        <></>\n      )}\n    </div>\n  );\n}\nexport default BillableUtilisationTrend;\n","import React, { useState, useEffect, useRef } from \"react\";\nimport MaterialReactTable from \"material-react-table\";\nimport { IconButton } from \"@mui/material\";\nimport { AiFillRightCircle } from \"react-icons/ai\";\nimport fte_active from \"../../assets/images/empstatusIcon/fte_active.png\";\nimport fte_inactive from \"../../assets/images/empstatusIcon/fte_inactive.png\";\nimport fte_notice from \"../../assets/images/empstatusIcon/fte_notice.png\";\nimport subk_active from \"../../assets/images/empstatusIcon/subk_active.png\";\nimport subk_inactive from \"../../assets/images/empstatusIcon/subk_inactive.png\";\nimport subk_notice from \"../../assets/images/empstatusIcon/subk_notice.png\";\nimport { Link } from \"react-router-dom\";\nimport { environment } from \"../../environments/environment\";\nimport CSL from \"../../assets/images/TeamsHierarImg/CSL.png\";\nimport CSLHead from \"../../assets/images/TeamsHierarImg/CSLHead.png\";\nimport DP from \"../../assets/images/TeamsHierarImg/DP.png\";\nimport AW from \"../../assets/images/TeamsHierarImg/AW.png\";\nimport AE from \"../../assets/images/TeamsHierarImg/AE.png\";\nimport ACSL from \"../../assets/images/TeamsHierarImg/ACSL.png\";\nimport DPHead from \"../../assets/images/TeamsHierarImg/DPHead.png\";\nimport TP from \"../../assets/images/TeamsHierarImg/TP.png\";\nimport PC from \"../../assets/images/TeamsHierarImg/PC.png\";\nimport SQA from \"../../assets/images/TeamsHierarImg/SQA.png\";\nimport axios from \"axios\";\nimport \"./TeamsHierarchyTable.scss\";\nimport Loader from \"../Loader/Loader\";\n\nfunction HierarchyTable(props) {\n  const {\n    data,\n    expandedCols,\n    colExpandState,\n    staticColumns,\n    setActiveProjectsByCustomer,\n    activeProjectsByCustomer,\n    setShowcslproject,\n    setShowacchieDataTable,\n    showacchieDataTable,\n    setShowcslHieTable,\n  } = props;\n  const [nodes, setNodes] = useState([]);\n  const [columns, setColumns] = useState(null);\n  const [hiddenColumns, setHiddenColumns] = useState({});\n  const [colExpFlag, setColumnExpFlag] = useState(false);\n  const [headers, setHeaders] = useState([]);\n  const baseUrl = environment.baseUrl;\n  const [loader1, setLoader1] = useState(false);\n  const abortController = useRef(null);\n\n  const handleAbort = () => {\n    abortController.current && abortController.current.abort();\n    setLoader1(false);\n  };\n  const getActiveProjectsByCustomer = (id) => {\n    const loaderTime = setTimeout(() => {\n      setLoader1(true);\n    }, 2000);\n    axios\n      .get(\n        baseUrl +\n          `/teamms/Hierarchy/getActiveProjectsByCustomer?CustomerId=${id}`\n      )\n      .then((resp) => {\n        const getData = resp.data;\n        for (const index in getData) {\n          const item = getData[index];\n          item.label = `${item.project_code} - ${item.label}`;\n        }\n        setActiveProjectsByCustomer(getData);\n        clearTimeout(loaderTime);\n        setLoader1(false);\n        setShowcslHieTable(false);\n        setShowcslproject(true);\n        setShowacchieDataTable(true);\n      });\n  };\n  useEffect(() => {\n    getData();\n  }, [data]);\n  const getData = () => {\n    let tableData = data.tableData;\n    let columns = null;\n\n    if (data?.columns?.includes(\"'\")) {\n      columns = data?.columns?.replaceAll(\"'\", \"\");\n    } else {\n      columns = data?.columns;\n    }\n\n    if (columns == null) {\n      columns = staticColumns;\n    }\n\n    let colArr = columns?.split(\",\");\n    let newHeaders = [];\n    let hiddenHeaders = [];\n\n    const obj = {};\n\n    for (let i = 0; i < colArr?.length; i++) {\n      let colVal = colArr[i].trim();\n      let firstData = tableData[0];\n      obj[colVal] = firstData[colVal];\n    }\n    let headerArray = Object.entries(obj);\n    let filteredHeaders = headerArray;\n    setHeaders(filteredHeaders);\n    filteredHeaders.map(([key, value]) => {\n      if (expandedCols.includes(key)) {\n        hiddenHeaders.push({ [key]: false });\n      }\n    });\n    setHiddenColumns(Object.assign({}, ...hiddenHeaders));\n    filteredHeaders.map(([key, value], index) => {\n      newHeaders.push({\n        accessorKey: key,\n        header: value,\n        enableColumnActions: false,\n        enableHiding: true,\n        Header: ({ column }) => {\n          return (\n            <div>\n              {value}\n              {console.log(value, \"inline------------------155\")}\n              {key == colExpandState[2] ? (\n                <IconButton\n                  onClick={() => {\n                    setColumnExpFlag((prev) => !prev);\n                  }}\n                ></IconButton>\n              ) : null}\n            </div>\n          );\n        },\n\n        Cell: ({ cell }) => {\n          return (\n            <div>\n              {cell.column.id === \"role\" &&\n              cell.getValue() === \"Click For Projects\" ? (\n                <Link\n                  onClick={(e) => {\n                    getActiveProjectsByCustomer(cell.row.original.customer_id);\n                  }}\n                >\n                  Click For Projects\n                </Link>\n              ) : cell.getValue() === \"AW\" ? (\n                <div>\n                  <img\n                    src={AW}\n                    style={{ height: \"10px\", width: \"10px\" }}\n                    title=\"Account Owner\"\n                  />\n                  <span title={cell.row.original.resource_name}>\n                    {cell.row.original.resource_name} (AW)\n                  </span>\n                </div>\n              ) : cell.getValue() === \"CSL\" ? (\n                <div>\n                  <img\n                    src={CSL}\n                    style={{ height: \"10px\", width: \"10px\" }}\n                    title=\"CSL\"\n                  />\n                  <span title={cell.row.original.resource_name}>\n                    {cell.row.original.resource_name} (CSL)\n                  </span>\n                </div>\n              ) : cell.getValue() === \"CSL Head\" ? (\n                <div>\n                  <img\n                    src={CSLHead}\n                    style={{ height: \"10px\", width: \"10px\" }}\n                    title=\"CSL Head\"\n                  />\n                  <span title={cell.row.original.resource_name}>\n                    {cell.row.original.resource_name} (CSL Head)\n                  </span>\n                </div>\n              ) : cell.getValue() === \"DP\" ? (\n                <div>\n                  <img\n                    src={DP}\n                    style={{ height: \"10px\", width: \"10px\" }}\n                    title=\"Delivery Partner\"\n                  />\n                  <span title={cell.row.original.resource_name}>\n                    {cell.row.original.resource_name} (DP)\n                  </span>\n                </div>\n              ) : cell.getValue() === \"ACSL\" ? (\n                <div>\n                  <img\n                    src={ACSL}\n                    style={{ height: \"10px\", width: \"10px\" }}\n                    title=\"ACSL\"\n                  />\n                  <span title={cell.row.original.resource_name}>\n                    {cell.row.original.resource_name} (ACSL)\n                  </span>\n                </div>\n              ) : cell.getValue() === \"DP Head\" ? (\n                <div>\n                  <img\n                    src={DPHead}\n                    style={{ height: \"10px\", width: \"10px\" }}\n                    title=\"DP Head\"\n                  />\n                  <span title={cell.row.original.resource_name}>\n                    {cell.row.original.resource_name} (DP Head)\n                  </span>\n                </div>\n              ) : cell.column.id === \"role\" && cell.getValue() === \"AE\" ? (\n                <div>\n                  <img\n                    src={AE}\n                    style={{ height: \"10px\", width: \"10px\" }}\n                    title=\"Account Executive\"\n                  />\n                  <span title={cell.row.original.resource_name}>\n                    {cell.row.original.resource_name}(AE)\n                  </span>\n                </div>\n              ) : cell.column.id === \"role\" && cell.getValue() === \"TP\" ? (\n                <div>\n                  <img\n                    src={TP}\n                    style={{ height: \"10px\", width: \"10px\" }}\n                    title=\"TP\"\n                  />\n                  <span title={cell.row.original.resource_name}>\n                    {\" \"}\n                    {cell.row.original.resource_name}(TP)\n                  </span>\n                </div>\n              ) : cell.column.id === \"role\" && cell.getValue() === \"PC\" ? (\n                <div>\n                  <img\n                    src={PC}\n                    style={{ height: \"10px\", width: \"10px\" }}\n                    title=\"PC\"\n                  />\n                  <span title={cell.row.original.resource_name}>\n                    {\" \"}\n                    {cell.row.original.resource_name}(PC)\n                  </span>\n                </div>\n              ) : cell.column.id === \"role\" && cell.getValue() === \"SQA\" ? (\n                <div>\n                  <img\n                    src={SQA}\n                    style={{ height: \"10px\", width: \"10px\" }}\n                    title=\"SQA\"\n                  />\n                  <span title={cell.row.original.resource_name}>\n                    {\" \"}\n                    {cell.row.original.resource_name}(SQA)\n                  </span>\n                </div>\n              ) : cell.column.id === \"partner_name\" ? (\n                cell.row.original.lvl === 1 ? (\n                  <div\n                    className=\"cslPartner\"\n                    title={cell.row.original.partner_name}\n                  >\n                    {cell.row.original.partner_name}\n                    {console.log(\n                      \"inline--------------------296\",\n                      cell.row.original.partner_name\n                    )}\n                  </div>\n                ) : null\n              ) : cell.column.id === \"account\" ? (\n                <div className=\"ellipsis\" title={cell.row.original.account}>\n                  {cell.row.original.lvl === 2 &&\n                  cell.row.original.resource_name === null &&\n                  cell.row.original.role !== \"Click For Projects\"\n                    ? cell.row.original.account\n                    : null}\n                </div>\n              ) : null}\n            </div>\n          );\n        },\n      });\n    });\n    tableData = tableData.slice(1);\n\n    setColumns(newHeaders);\n    let values = [];\n    tableData?.map((d) => values.push(d));\n    setNodes(jsonToTree(values, { children: \"subRows\" }));\n  };\n  useEffect(() => {\n    colExpFlag ? setHiddenColumns({}) : colCollapse();\n  }, [colExpFlag]);\n\n  const colCollapse = () => {\n    let hiddenHeaders = [];\n    headers.map(([key, value]) => {\n      if (expandedCols.includes(key)) {\n        hiddenHeaders.push({ [key]: false });\n      }\n    });\n    setHiddenColumns(Object.assign({}, ...hiddenHeaders));\n  };\n\n  const jsonToTree = (flatArray, options) => {\n    options = {\n      id: \"id\",\n      parentId: \"parentId\",\n      children: \"subRows\",\n      ...options,\n    };\n    const dictionary = {};\n    const tree = [];\n    const children = options.children;\n    flatArray.forEach((node) => {\n      const nodeId = node[options.id];\n      const nodeParentId = node[options.parentId];\n      const newNode = {\n        [children]: [],\n        ...node,\n      };\n      dictionary[nodeId] = newNode;\n      dictionary[nodeParentId] = dictionary[nodeParentId] || { [children]: [] };\n      dictionary[nodeParentId][children].push(newNode);\n    });\n    Object.values(dictionary).forEach((obj) => {\n      if (typeof obj[options.id] === \"undefined\") {\n        tree.push(...obj[children]);\n      }\n    });\n    return tree;\n  };\n  return (\n    <div className=\"materialReactExpandableTable headSticky cslPartnerTable darkHeader\">\n      {columns?.length ? (\n        <MaterialReactTable\n          columns={columns}\n          data={nodes}\n          enableExpandAll={true}\n          enableExpanding\n          enablePagination={false}\n          enableRowVirtualization={true}\n          enableBottomToolbar={false}\n          enableTopToolbar={false}\n          enableColumnActions={false}\n          enableSorting={false}\n          filterFromLeafRows\n          emptyMessage=\"No Records found.\"\n          initialState={{\n            expanded: true,\n            density: \"compact\",\n            columnVisibility: { ...hiddenColumns },\n            columnPinning: { right: [\"total\"] },\n          }}\n          state={{ columnVisibility: { ...hiddenColumns } }}\n          defaultColumn={{ minSize: 40, maxSize: 1000, size: 40 }}\n          muiTableContainerProps={{\n            sx: { maxHeight: \"500px\", width: \"auto\", maxWidth: \"100%\" },\n          }}\n          muiTableBodyProps={{\n            sx: {\n              \"&\": {\n                borderRight: \"1px solid #ccc\",\n                borderBottom: \"1px solid #ccc\",\n              },\n              \"& td:first-of-type\": {\n                minWidth: \"60px\",\n                maxWidth: \"60px\",\n              },\n              \"& td\": {\n                // borderTop: \"1px solid #ccc\",\n                borderRight: \"1px solid #ccc\",\n                height: \"22px\",\n                padding: \"0px 5px\",\n              },\n            },\n          }}\n          muiTableHeadProps={{\n            sx: {\n              \"& th\": {\n                borderTop: \"1px solid #ccc\",\n                borderRight: \"1px solid #ccc\",\n                background: \"#f4f4f4 \",\n                padding: \"0 5px\",\n              },\n              \"& th:first-of-type\": {\n                minWidth: \"60px\",\n                maxWidth: \"60px\",\n              },\n            },\n          }}\n        />\n      ) : null}\n      {loader1 ? <Loader handleAbort={handleAbort} /> : \"\"}\n    </div>\n  );\n}\nexport default HierarchyTable;\n","import * as React from \"react\";\nimport TreeView from \"@mui/lab/TreeView\";\nimport PropTypes from \"prop-types\";\nimport SvgIcon from \"@mui/material/SvgIcon\";\nimport { alpha, styled } from \"@mui/material/styles\";\nimport TreeItem, { useTreeItem, treeItemClasses } from \"@mui/lab/TreeItem\";\nimport Collapse from \"@mui/material/Collapse\";\nimport { useSpring, animated } from \"@react-spring/web\";\nimport { FaBriefcase, FaUserAlt } from \"react-icons/fa\";\nimport { signal } from \"@preact/signals\";\nimport axios from \"axios\";\nimport { environment } from \"../../environments/environment\";\nimport \"../ProjectComponent/projecthierarchy.scss\";\nimport clsx from \"clsx\";\nimport \"./TeamsHierarchyTable.scss\";\n\nimport Box from \"@mui/material/Box\";\nimport competenciesTable from \"../ProgressComponent/competenciesTable\";\nimport Typography from \"@mui/material/Typography\";\nimport { useState } from \"react\";\nimport { useRef } from \"react\";\nimport { useEffect } from \"react\";\nconst baseUrl = environment.baseUrl;\n\nfunction MinusSquare(props) {\n  return (\n    <SvgIcon fontSize=\"inherit\" style={{ width: 14, height: 14 }} {...props}>\n      <path d=\"M22.047 22.074v0 0-20.147 0h-20.12v0 20.147 0h20.12zM22.047 24h-20.12q-.803 0-1.365-.562t-.562-1.365v-20.147q0-.776.562-1.351t1.365-.575h20.147q.776 0 1.351.575t.575 1.351v20.147q0 .803-.575 1.365t-1.378.562v0zM17.873 11.023h-11.826q-.375 0-.669.281t-.294.682v0q0 .401.294 .682t.669.281h11.826q.375 0 .669-.281t.294-.682v0q0-.401-.294-.682t-.669-.281z\" />\n    </SvgIcon>\n  );\n}\n\nfunction CloseSquare(props) {\n  return (\n    <SvgIcon\n      className=\"close\"\n      fontSize=\"inherit\"\n      style={{ width: 14, height: 14 }}\n      {...props}\n    >\n      <path d=\"M17.485 17.512q-.281.281-.682.281t-.696-.268l-4.12-4.147-4.12 4.147q-.294.268-.696.268t-.682-.281-.281-.682.294-.669l4.12-4.147-4.12-4.147q-.294-.268-.294-.669t.281-.682.682-.281.696 .268l4.12 4.147 4.12-4.147q.294-.268.696-.268t.682.281 .281.669-.294.682l-4.12 4.147 4.12 4.147q.294.268 .294.669t-.281.682zM22.047 22.074v0 0-20.147 0h-20.12v0 20.147 0h20.12zM22.047 24h-20.12q-.803 0-1.365-.562t-.562-1.365v-20.147q0-.776.562-1.351t1.365-.575h20.147q.776 0 1.351.575t.575 1.351v20.147q0 .803-.575 1.365t-1.378.562v0z\" />\n    </SvgIcon>\n  );\n}\n\nfunction PlusSquare(props) {\n  return (\n    <SvgIcon fontSize=\"inherit\" style={{ width: 14, height: 14 }} {...props}>\n      <path d=\"M22.047 22.074v0 0-20.147 0h-20.12v0 20.147 0h20.12zM22.047 24h-20.12q-.803 0-1.365-.562t-.562-1.365v-20.147q0-.776.562-1.351t1.365-.575h20.147q.776 0 1.351.575t.575 1.351v20.147q0 .803-.575 1.365t-1.378.562v0zM17.873 12.977h-4.923v4.896q0 .401-.281.682t-.682.281v0q-.375 0-.669-.281t-.294-.682v-4.896h-4.923q-.401 0-.682-.294t-.281-.669v0q0-.401.281-.682t.682-.281h4.923v-4.896q0-.401.294-.682t.669-.281v0q.401 0 .682.281t.281.682v4.896h4.923q.401 0 .682.281t.281.682v0q0 .375-.281.669t-.682.294z\" />\n    </SvgIcon>\n  );\n}\n\nfunction TransitionComponent(props) {\n  const style = useSpring({\n    from: {\n      opacity: 0,\n      transform: \"translate3d(20px,0,0)\",\n    },\n    to: {\n      opacity: props.in ? 1 : 0,\n      transform: `translate3d(${props.in ? 0 : 20}px,0,0)`,\n    },\n  });\n\n  return (\n    <animated.div style={style}>\n      <Collapse {...props} />\n    </animated.div>\n  );\n}\n\nTransitionComponent.propTypes = {\n  /**\n   * Show the component; triggers the enter or exit states\n   */\n  in: PropTypes.bool,\n};\nconst competencyTableData = signal([]);\n\nconst TeamsProjectHierarchyTree = React.memo(\n  (props) => {\n    const {\n      defaultExpandedRows,\n      hierarchydata,\n      setFlag,\n      flag,\n      data,\n      setTableData,\n      projectName,\n      hierarchyCount,\n    } = props;\n    const [dataProjectId, setDataProjectId] = useState(\"\");\n    console.log(data);\n    console.log(projectName);\n    let modData;\n    const jsonToTree = (flatArray, options) => {\n      const flatArrayData = flatArray || [];\n      options = {\n        id: \"id\",\n        parentId: \"parent\",\n        children: \"subrows\",\n        ...options,\n      };\n      const dictionary = {}; // a hash table mapping to the specific array objects with their ids as key\n      const tree = [];\n      const children = options.children;\n      flatArrayData?.forEach((node) => {\n        const nodeId = node[options.id];\n        const nodeParentId = node[options.parentId];\n        // set up current node data in dictionary\n        dictionary[nodeId] = {\n          [children]: [], // init a children property\n          ...node, // add other propertys\n          ...dictionary[nodeId], // children will be replaced if this node already has children property which was set below\n        };\n        dictionary[nodeParentId] = dictionary[nodeParentId] || {\n          [children]: [],\n        }; // if it's not exist in dictionary, init an object with children property\n        dictionary[nodeParentId][children].push(dictionary[nodeId]); // add reference to current node object in parent node object\n        console.log(\"id::::\" + nodeId);\n        console.log(\"parentid:::\" + nodeParentId);\n      });\n      // find root nodes\n      Object.values(dictionary).forEach((obj) => {\n        if (typeof obj[options.id] === \"undefined\") {\n          tree.push(...obj[children]);\n        }\n      });\n      return tree;\n    };\n\n    const hierarchy = jsonToTree(data);\n\n    const fromDate = new Date(projectName?.projectFromDate);\n    const date = new Date(fromDate);\n    const formattedFromDate = `${date.getDate()} ${date.toLocaleString(\n      \"default\",\n      { month: \"short\" }\n    )} ${date.getFullYear()}`;\n\n    const toDate = new Date(projectName?.projectToDate);\n    const tdate = new Date(toDate);\n    const formattedToDate = `${tdate.getDate()} ${tdate.toLocaleString(\n      \"default\",\n      { month: \"short\" }\n    )} ${tdate.getFullYear()}`;\n\n    console.log(hierarchy, \"--hierarchy\");\n\n    let a1 = document.getElementsByClassName(\"iconContainer\");\n\n    useEffect(() => {\n      setTimeout(() => {\n        addFolderIcon();\n      }, 500);\n\n      let aa = document.getElementsByClassName(\n        \"MuiTreeView-root hierarchyTree\"\n      );\n\n      document.addEventListener(\n        \"click\",\n        function (params) {\n          setTimeout(() => {\n            const boxes = Array.from(\n              document.getElementsByClassName(\"iconContainer\")\n            );\n            let bb = Array.from(boxes[0].children);\n            console.log();\n            bb.forEach((box) => {\n              if (box.tagName == \"SPAN\") {\n                box.remove();\n              }\n            });\n\n            if (a1[0]?.children[1]?.tagName == \"SPAN\") {\n              return;\n            }\n            addFolderIcon();\n          }, 500);\n        },\n        true\n      );\n    }, []);\n\n    const addFolderIcon = () => {\n      let spn = document.createElement(\"span\");\n      spn.innerHTML =\n        '<svg stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" viewBox=\"0 0 512 512\" class=\"hierarchyIcons folder\" height=\"1em\" width=\"1em\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M320 336c0 8.84-7.16 16-16 16h-96c-8.84 0-16-7.16-16-16v-48H0v144c0 25.6 22.4 48 48 48h416c25.6 0 48-22.4 48-48V288H320v48zm144-208h-80V80c0-25.6-22.4-48-48-48H176c-25.6 0-48 22.4-48 48v48H48c-25.6 0-48 22.4-48 48v80h512v-80c0-25.6-22.4-48-48-48zm-144 0H192V96h128v32z\"></path></svg>';\n      a1[0].appendChild(spn);\n    };\n\n    // expand and collapse only when click on icon(plus or minus icons) not on element\n    const CustomContent = React.forwardRef(function CustomContent(props, ref) {\n      const {\n        classes,\n        className,\n        label,\n        nodeId,\n        icon: iconProp,\n        expansionIcon,\n        displayIcon,\n      } = props;\n\n      const {\n        disabled,\n        expanded,\n        selected,\n        focused,\n        handleExpansion,\n        handleSelection,\n        preventSelection,\n      } = useTreeItem(nodeId);\n\n      const icon = iconProp || expansionIcon || displayIcon;\n\n      const handleMouseDown = (event) => {\n        preventSelection(event);\n      };\n\n      const handleExpansionClick = (event) => {\n        handleExpansion(event);\n      };\n\n      const handleSelectionClick = async (event) => {\n        handleSelection(event);\n        console.log(\"in line 221\");\n        console.log(nodeId);\n\n        let propData = nodeId;\n        let splitdata = propData?.split(\"_\")[2];\n        let projectId = propData?.split(\"_\")[0];\n        let roleId = propData?.split(\"_\")[1];\n        console.log(\"in line 314\");\n        // // temp(splitdata, projectId, roleId);\n        // // competenciesTable(\n        // //   splitdata,\n        // //   projectId,\n        // //   roleId,\n        // //   setDataProjectId,\n        // //   setFlag,\n        // //   setTableData\n        // // )\n\n        let fData = competenciesTable(\n          splitdata,\n          projectId,\n          roleId,\n          setDataProjectId,\n          setFlag,\n          setTableData\n        );\n\n        console.log(fData);\n      };\n      console.log(label);\n      const processBoldContent = (element) => {\n        return React.Children.map(element, (child) => {\n          if (React.isValidElement(child)) {\n            if (child.type === \"b\" || child.type === \"strong\") {\n              return (\n                <span style={{ fontWeight: \"bold\" }}>\n                  {processBoldContent(child.props.children)}\n                </span>\n              );\n            }\n            return React.cloneElement(\n              child,\n              {},\n              processBoldContent(child.props.children)\n            );\n          }\n          return child;\n        });\n      };\n\n      const processedLabel = processBoldContent(label);\n\n      return (\n        <div\n          className={clsx(className, classes.root, {\n            [classes.expanded]: expanded,\n            [classes.selected]: selected,\n            [classes.focused]: focused,\n            [classes.disabled]: disabled,\n          })}\n          onMouseDown={handleMouseDown}\n          ref={ref}\n        >\n          <div onClick={handleExpansionClick} className={classes.iconContainer}>\n            {icon}\n          </div>\n          <Typography\n            onClick={handleSelectionClick}\n            component=\"div\"\n            className={classes.label}\n          >\n            {processedLabel}\n          </Typography>\n        </div>\n      );\n    });\n\n    const StyledTreeItem = styled((props) => (\n      <div className=\"hierarchy tree\">\n        <TreeItem\n          ContentComponent={CustomContent} // expanding only when click on plus icon\n          {...props}\n          key={String(props.node?.id)}\n          nodeId={String(props.node?.id)}\n          label={\n            <Box sx={{ display: \"flex\", alignItems: \"center\", p: 0.5, pr: 0 }}>\n              <Box color=\"inherit\" sx={{ mr: 1 }} />\n\n              <Typography\n                variant=\"body2\"\n                sx={{ fontWeight: \"inherit\", flexGrow: 1, fontSize: \"12px\" }}\n              >\n                <span\n                  style={{\n                    color: props.node?.text.includes(\"span\")\n                      ? props.node?.text.split('\"')[1].split(\":\")[1]\n                      : \"\",\n                    fontWeight: props.node?.parent.includes(\"#\") ? \"bold\" : \"\",\n                  }}\n                >\n                  <span\n                    style={{\n                      fontWeight: props.node?.text.includes(\"<b>\")\n                        ? \"bold\"\n                        : \"\",\n                    }}\n                  >\n                    {\" \"}\n                    {props.node?.text.includes(\"span\")\n                      ? props.node?.text\n                          .split('\">')[1]\n                          .split(\"(\")[0]\n                          .replaceAll(\"<b>\", \"\")\n                          .replaceAll(\"</b>\", \"\")\n                      : props.node?.text\n                          .split(\"(\")[0]\n                          .replaceAll(\"<b>\", \"\")\n                          .replaceAll(\"</b>\", \"\")}\n                    {}\n                  </span>\n                  <span>\n                    {\" \"}\n                    {props.node?.text.split(\"(\")[1] != undefined\n                      ? props.node?.text.split(\"(\")[1].includes(\"span\")\n                        ? \"(\" +\n                          props.node?.text\n                            .split(\"(\")[1]\n                            .replaceAll(\"</span>\", \"\")\n                        : \"(\" + props.node?.text.split(\"(\")[1]\n                      : \"\"}\n                  </span>\n                </span>\n              </Typography>\n            </Box>\n          }\n          TransitionComponent={TransitionComponent}\n          title={\n            props.node?.text.split(\"(\")[1] != undefined &&\n            props.node?.text.split(\"(\")[1].includes(\"span\")\n              ? \"\"\n              : props.node?.text.replaceAll(\"<b>\", \"\").replaceAll(\"</b>\", \"\")\n          }\n        >\n          {Array.isArray(props.node?.subrows)\n            ? props.node?.subrows.map((node) => renderTree(node))\n            : console.log(\"coming here?\")}\n        </TreeItem>\n      </div>\n    ))(({ theme }) => ({\n      [`& .${treeItemClasses.iconContainer}`]: {\n        \"& .close\": {\n          opacity: 0.3,\n        },\n      },\n      [`& .${treeItemClasses.group}`]: {\n        marginLeft: 15,\n        paddingLeft: 18,\n        borderLeft: `1px dashed ${alpha(theme.palette.text.primary, 0.4)}`,\n      },\n    }));\n\n    const temp = (data, projectId, roleId) => {\n      setDataProjectId(data + \"_\" + projectId);\n      setFlag(data == undefined ? false : true);\n\n      axios({\n        method: \"get\",\n        url:\n          baseUrl +\n          `/ProjectMS/project/getResCompts?resId=${data}&prjId=${projectId}&roleId=${roleId}`,\n      }).then((res) => {\n        let criticality = res.data;\n\n        setTableData(criticality);\n      });\n    };\n\n    const renderTree = (nodes) => (\n      <div>\n        <StyledTreeItem node={nodes}></StyledTreeItem>\n      </div>\n    );\n\n    return (\n      <div\n        style={{ maxHeight: \"400px\", minHeight: \"500px\", overflowY: \"auto\" }}\n      >\n        <TreeView\n          aria-label=\"rich object\"\n          defaultExpanded={[defaultExpandedRows]}\n          defaultParentIcon={\n            <div className=\"iconContainer\">\n              <MinusSquare className=\"hierarchyIcons\" />\n            </div>\n          }\n          defaultCollapseIcon={\n            <div className=\"iconContainer\">\n              <MinusSquare className=\"hierarchyIcons\" />\n            </div>\n          }\n          defaultExpandIcon={\n            <div className=\"iconContainer\">\n              <PlusSquare className=\"hierarchyIcons\" />\n            </div>\n          }\n          defaultEndIcon={<FaUserAlt className=\"hierarchyIcons user\" />}\n          sx={{\n            \"& .css-1g86id8-MuiTreeItem-content .MuiTreeItem-label\": {\n              width: \"auto\",\n              minwidth: 0,\n            },\n          }}\n          className=\"hierarchyTree\"\n        >\n          {renderTree(hierarchy[0])}\n        </TreeView>\n      </div>\n    );\n  },\n\n  (prevProps, currentProps) => {\n    // console.log(\"in line 442\");\n    // console.log(prevProps);\n    // console.log(currentProps);\n\n    // if (currentProps.hierarchyCount > 0) {\n    if (prevProps.hierarchyCount === currentProps.hierarchyCount) {\n      console.log(\"in line 447\");\n      return true;\n    }\n    console.log(\"in line 450\");\n\n    return false;\n  }\n);\n\nexport default TeamsProjectHierarchyTree;\n","import React, { useEffect, useRef } from \"react\";\nimport { DataTable } from \"primereact/datatable\";\nimport { Column } from \"primereact/column\";\nimport { Link } from \"react-router-dom\";\nimport { useState } from \"react\";\nimport axios from \"axios\";\nimport { FaPlus } from \"react-icons/fa\";\nimport { environment } from \"../../environments/environment\";\nimport \"./TeamsHierarchyTable.scss\";\nimport TeamsProjectHierarchyTree from \"./TeamsProjectHierarchyTree\";\nimport Loader from \"../Loader/Loader\";\nimport { VscTypeHierarchySub } from \"react-icons/vsc\";\nfunction TeamsProjectHierarchy(props) {\n  const {\n    projectHierarchy,\n    searchProjecthierarchy,\n    setShowprojectHie,\n    showprojectHie,\n  } = props;\n  const projectHierarchy1 = projectHierarchy.data;\n  const [searchinghierarchy, setSearchingHierarchy] = useState(false);\n  const [hierarchyCount, setHierarchyCount] = useState(0);\n  const [hierarchydata, setHierarchyData] = useState([]);\n  const [state, setState] = useState(\"All\");\n  const [loader1, setLoader1] = useState(false);\n\n  const baseUrl = environment.baseUrl;\n  const [projectId, setProjectId] = useState([]);\n  const getPrjRolesTree = (id) => {\n    const loaderTime = setTimeout(() => {\n      setLoader1(true);\n    }, 2000);\n    axios({\n      method: \"post\",\n      url: baseUrl + `/teamms/Hierarchy/prjRolesTree`,\n      data: {\n        typ: \"roles\",\n        prjId: projectId == \"\" ? id : projectId,\n        dat: \"0000-00-00\",\n        status: state,\n      },\n      headers: { \"Content-Type\": \"application/json\" },\n    }).then((resp) => {\n      const getData = resp.data;\n      for (const project of getData) {\n        if (project.id === \"-1\" && project.parent === \"#\") {\n          const cleanedText = project.text.replace(/<\\/?[^>]+(>|$)/g, \"\");\n          project.text = cleanedText;\n        }\n      }\n      setHierarchyData(getData);\n      setHierarchyCount((prev) => prev + 1);\n      setSearchingHierarchy(true);\n      setShowprojectHie(true);\n      clearTimeout(loaderTime);\n      setLoader1(false);\n    });\n  };\n  useEffect(() => {\n    getPrjRolesTree();\n  }, [state, projectId]);\n\n  const projectLinks = (rowData) => {\n    const formattedValue = `${rowData.project_code} - ${rowData.pName}`;\n\n    return (\n      <div style={{ display: \"flex\", alignItems: \"center\" }}>\n        <Link\n          title={formattedValue}\n          to={`/project/Overview/:${rowData.pId}`}\n          target=\"_blank\"\n          className=\"ellipsis\"\n          style={{\n            overflow: \"hidden\",\n            textOverflow: \"ellipsis\",\n            whiteSpace: \"nowrap\",\n            flexGrow: 1,\n          }}\n        >\n          {formattedValue}\n        </Link>\n\n        <VscTypeHierarchySub\n          style={{\n            cursor: \"pointer\",\n          }}\n          onClick={(e) => {\n            getPrjRolesTree(rowData.pId);\n            setProjectId(rowData.pId);\n          }}\n        />\n      </div>\n    );\n  };\n  const [globalFilter, setGlobalFilter] = useState(\"\");\n\n  const onGlobalFilter = (e) => {\n    const value = e.target.value.toLowerCase();\n    setGlobalFilter(value);\n  };\n\n  const filteredData = projectHierarchy1\n    ? Object.values(projectHierarchy1).filter(\n        (item) =>\n          item.cName.toLowerCase().includes(globalFilter) ||\n          item.pName.toLowerCase().includes(globalFilter)\n      )\n    : [];\n  const abortController = useRef(null);\n\n  const handleAbort = () => {\n    abortController.current && abortController.current.abort();\n    setLoader1(false);\n  };\n  return (\n    // project Hierarchy flow\n    <div>\n      <div className=\"col-md-12\">\n        <div className=\"row\">\n          {\" \"}\n          {searchProjecthierarchy ? (\n            <>\n              <div>\n                <div className=\"col-md-2\">\n                  <input\n                    type=\"text\"\n                    placeholder=\"Search...\"\n                    value={globalFilter}\n                    onChange={onGlobalFilter}\n                    style={{ fontWeight: \"bold\" }}\n                  />\n                </div>\n              </div>\n\n              <div className=\"col-md-6 mt-2 darkHeader\">\n                <DataTable\n                  value={filteredData}\n                  editMode=\"row\"\n                  showGridlines\n                  stripedRows\n                  scrollHeight=\"425px\"\n                  responsiveLayout=\"scroll\"\n                >\n                  <Column\n                    field=\"cName\"\n                    header=\"Customer\"\n                    alignHeader={\"center\"}\n                  ></Column>\n                  <Column\n                    header=\"Projects\"\n                    alignHeader={\"center\"}\n                    body={projectLinks}\n                  ></Column>\n                </DataTable>\n              </div>\n            </>\n          ) : (\n            \"\"\n          )}\n          {showprojectHie == true && hierarchydata.length > 0 ? (\n            <div className=\"col-md-6 mt-2\">\n              <div\n                className=\"col-md-6 group mb-3 \"\n                style={{ backgroundColor: \"#eeeeee38\" }}\n              >\n                <div\n                  className=\"col-md-12\"\n                  style={{\n                    borderBottom: \"1px solid grey\",\n                    background: \"#f1eeee\",\n                    height: \"36px\",\n                  }}\n                >\n                  <label style={{ float: \"right\", paddingTop: \"7px\" }}>\n                    <select\n                      style={{ marginLeft: \"10px\" }}\n                      id=\"status\"\n                      onChange={(e) => {\n                        setState(e.target.value);\n                        getPrjRolesTree();\n                      }}\n                    >\n                      <option value=\"All\">All</option>\n                      <option value=\"Active\">Active</option>\n                    </select>\n                  </label>\n                  <div className=\"childTwo\">\n                    <h2\n                      style={{\n                        textAlign: \"center\",\n                        color: \"#297AB0\",\n                        fontSize: \"14px\",\n                        paddingTop: \"7px\",\n                      }}\n                    >\n                      Project Hierarchy\n                    </h2>\n                  </div>\n                </div>\n\n                {searchinghierarchy == true ? (\n                  <TeamsProjectHierarchyTree\n                    defaultExpandedRows={String(-1)}\n                    data={hierarchydata}\n                    hierarchyCount={hierarchyCount}\n                  />\n                ) : (\n                  \"\"\n                )}\n              </div>\n            </div>\n          ) : (\n            \"\"\n          )}\n        </div>\n      </div>\n      {loader1 ? <Loader handleAbort={handleAbort} /> : \"\"}\n    </div>\n  );\n}\nexport default TeamsProjectHierarchy;\n","import React, { useState, useEffect, useRef } from \"react\";\nimport MaterialReactTable from \"material-react-table\";\nimport { IconButton } from \"@mui/material\";\nimport { AiFillRightCircle } from \"react-icons/ai\";\nimport { Link } from \"react-router-dom\";\nimport { environment } from \"../../environments/environment\";\nimport CSL from \"../../assets/images/TeamsHierarImg/CSL.png\";\nimport CSLHead from \"../../assets/images/TeamsHierarImg/CSLHead.png\";\nimport DP from \"../../assets/images/TeamsHierarImg/DP.png\";\nimport AW from \"../../assets/images/TeamsHierarImg/AW.png\";\nimport AE from \"../../assets/images/TeamsHierarImg/AE.png\";\nimport ACSL from \"../../assets/images/TeamsHierarImg/ACSL.png\";\nimport DPHead from \"../../assets/images/TeamsHierarImg/DPHead.png\";\nimport TP from \"../../assets/images/TeamsHierarImg/TP.png\";\nimport PC from \"../../assets/images/TeamsHierarImg/PC.png\";\nimport SQA from \"../../assets/images/TeamsHierarImg/SQA.png\";\nimport \"./TeamsHierarchyTable.scss\";\nimport Loader from \"../Loader/Loader\";\n\nimport axios from \"axios\";\n\nfunction AccountHierarTable(props) {\n  const {\n    data,\n    expandedCols,\n    colExpandState,\n    staticColumns,\n    setActiveProjectsByCustomer,\n    activeProjectsByCustomer,\n    setShowcslproject,\n    setShowacchieDataTable,\n    showacchieDataTable,\n    setShowacctHieTable,\n  } = props;\n  console.log(data);\n  useEffect(() => {}, [data]);\n  if (data.tableData && data.tableData.length > 0) {\n    const keys = Object.keys(data.tableData[0]);\n    data.columns = \"'account,role'\";\n  }\n  const [nodes, setNodes] = useState([]);\n  const [columns, setColumns] = useState(null);\n  const [hiddenColumns, setHiddenColumns] = useState({});\n  const [colExpFlag, setColumnExpFlag] = useState(false);\n  const [headers, setHeaders] = useState([]);\n  const baseUrl = environment.baseUrl;\n  const [loader1, setLoader1] = useState(false);\n  const abortController = useRef(null);\n\n  const handleAbort = () => {\n    abortController.current && abortController.current.abort();\n    setLoader1(false);\n  };\n  const getActiveProjectsByCustomer = (id) => {\n    const loaderTime = setTimeout(() => {\n      setLoader1(true);\n    }, 2000);\n    axios\n      .get(\n        baseUrl +\n          `/teamms/Hierarchy/getActiveProjectsByCustomer?CustomerId=${id}`\n      )\n      .then((resp) => {\n        const getData = resp.data;\n        for (const index in getData) {\n          const item = getData[index];\n          item.label = `${item.project_code} - ${item.label}`;\n        }\n        setActiveProjectsByCustomer(getData);\n        clearTimeout(loaderTime);\n        setLoader1(false);\n        setShowacctHieTable(false);\n        setShowacchieDataTable(true);\n      });\n  };\n  useEffect(() => {\n    getData();\n  }, [data]);\n  console.log(data.columns);\n  const getData = () => {\n    let tableData = data.tableData;\n    let columns = null;\n\n    if (data?.columns?.includes(\"'\")) {\n      columns = data?.columns?.replaceAll(\"'\", \"\");\n    } else {\n      columns = data?.columns;\n    }\n\n    if (columns == null) {\n      columns = staticColumns;\n    }\n\n    let colArr = columns?.split(\",\");\n    let newHeaders = [];\n    let hiddenHeaders = [];\n\n    const obj = {};\n\n    for (let i = 0; i < colArr?.length; i++) {\n      let colVal = colArr[i].trim();\n      let firstData = tableData[0];\n      obj[colVal] = firstData[colVal];\n    }\n    let headerArray = Object.entries(obj);\n    let filteredHeaders = headerArray;\n    setHeaders(filteredHeaders);\n    filteredHeaders.map(([key, value]) => {\n      if (expandedCols.includes(key)) {\n        hiddenHeaders.push({ [key]: false });\n      }\n    });\n    setHiddenColumns(Object.assign({}, ...hiddenHeaders));\n    filteredHeaders.map(([key, value], index) => {\n      newHeaders.push({\n        accessorKey: key,\n        header: value,\n        enableColumnActions: false,\n        enableHiding: true,\n        Header: ({ column }) => {\n          console.log(column);\n          console.log(value);\n\n          return (\n            <div>\n              {value}\n              {console.log(value)}\n              {key == colExpandState[2] ? (\n                <IconButton\n                  onClick={() => {\n                    setColumnExpFlag((prev) => !prev);\n                  }}\n                >\n                  <AiFillRightCircle />\n                </IconButton>\n              ) : null}\n            </div>\n          );\n        },\n\n        Cell: ({ cell }) => {\n          return (\n            <div>\n              {cell.column.id === \"role\" &&\n              cell.getValue() === \"Click For Projects\" ? (\n                <Link\n                  onClick={(e) => {\n                    console.log(e);\n                    console.log(cell.row.original);\n                    console.log(cell.row.original.customer_id);\n\n                    getActiveProjectsByCustomer(cell.row.original.customer_id);\n                  }}\n                >\n                  Click For Projects\n                </Link>\n              ) : cell.getValue() === \"AW\" ? (\n                <div>\n                  <img\n                    src={AW}\n                    style={{ height: \"10px\", width: \"10px\" }}\n                    title=\"Account Owner\"\n                  />{\" \"}\n                  <span title={cell.row.original.resource_name}>\n                    {\" \"}\n                    {cell.row.original.resource_name} (AW)\n                  </span>\n                </div>\n              ) : cell.getValue() === \"CSL\" ? (\n                <div>\n                  <img\n                    src={CSL}\n                    style={{ height: \"10px\", width: \"10px\" }}\n                    title=\"CSL\"\n                  />\n                  <span title={cell.row.original.resource_name}>\n                    {cell.row.original.resource_name} (CSL)\n                  </span>\n                </div>\n              ) : cell.getValue() === \"CSL Head\" ? (\n                <div>\n                  {\" \"}\n                  <img\n                    src={CSLHead}\n                    style={{ height: \"10px\", width: \"10px\" }}\n                    title=\"CSL Head\"\n                  />{\" \"}\n                  <span title={cell.row.original.resource_name}>\n                    {cell.row.original.resource_name} (CSL Head)\n                  </span>\n                </div>\n              ) : cell.getValue() === \"DP\" ? (\n                <div>\n                  {\" \"}\n                  <img\n                    src={DP}\n                    style={{ height: \"10px\", width: \"10px\" }}\n                    title=\"Delivery Partner\"\n                  />\n                  <span title={cell.row.original.resource_name}>\n                    {\" \"}\n                    {cell.row.original.resource_name} (DP)\n                  </span>\n                </div>\n              ) : cell.getValue() === \"ACSL\" ? (\n                <div>\n                  {\" \"}\n                  <img\n                    src={ACSL}\n                    style={{ height: \"10px\", width: \"10px\" }}\n                    title=\"ACSL\"\n                  />\n                  <span title={cell.row.original.resource_name}>\n                    {\" \"}\n                    {cell.row.original.resource_name} (ACSL)\n                  </span>\n                </div>\n              ) : cell.getValue() === \"DP Head\" ? (\n                <div>\n                  {\" \"}\n                  <img\n                    src={DPHead}\n                    style={{ height: \"10px\", width: \"10px\" }}\n                    title=\"DP Head\"\n                  />\n                  <span title={cell.row.original.resource_name}>\n                    {cell.row.original.resource_name} (DP Head)\n                  </span>\n                </div>\n              ) : cell.column.id === \"role\" && cell.getValue() === \"AE\" ? (\n                <div>\n                  <img\n                    src={AE}\n                    style={{ height: \"10px\", width: \"10px\" }}\n                    title=\"Account Executive\"\n                  />\n                  <span title={cell.row.original.resource_name}>\n                    {\" \"}\n                    {cell.row.original.resource_name}(AE)\n                  </span>\n                </div>\n              ) : cell.column.id === \"role\" && cell.getValue() === \"TP\" ? (\n                <div>\n                  <img\n                    src={TP}\n                    style={{ height: \"10px\", width: \"10px\" }}\n                    title=\"TP\"\n                  />\n                  <span title={cell.row.original.resource_name}>\n                    {\" \"}\n                    {cell.row.original.resource_name}(TP)\n                  </span>\n                </div>\n              ) : cell.column.id === \"role\" && cell.getValue() === \"PC\" ? (\n                <div>\n                  <img\n                    src={PC}\n                    style={{ height: \"10px\", width: \"10px\" }}\n                    title=\"PC\"\n                  />\n                  <span title={cell.row.original.resource_name}>\n                    {\" \"}\n                    {cell.row.original.resource_name}(PC)\n                  </span>\n                </div>\n              ) : cell.column.id === \"role\" && cell.getValue() === \"SQA\" ? (\n                <div>\n                  <img\n                    src={SQA}\n                    style={{ height: \"10px\", width: \"10px\" }}\n                    title=\"SQA\"\n                  />\n                  <span title={cell.row.original.resource_name}>\n                    {\" \"}\n                    {cell.row.original.resource_name}(SQA)\n                  </span>\n                </div>\n              ) : cell.column.id === \"account\" ? (\n                cell.row.original.lvl === 1 ? (\n                  <div className=\"cslPartner\" title={cell.row.original.account}>\n                    {cell.row.original.account}\n                  </div>\n                ) : null\n              ) : cell.column.id === \"account\" ? (\n                <div>\n                  {cell.row.original.lvl === 2 &&\n                  cell.row.original.resource_name === null &&\n                  cell.row.original.role !== \"Click For Projects\"\n                    ? cell.row.original.account\n                    : null}\n                </div>\n              ) : null}\n            </div>\n          );\n        },\n      });\n    });\n    setColumns(newHeaders);\n    console.log(newHeaders);\n    tableData = tableData.slice(1);\n\n    setColumns(newHeaders);\n    let values = [];\n    tableData?.map((d) => values.push(d));\n    setNodes(jsonToTree(values, { children: \"subRows\" }));\n  };\n  useEffect(() => {\n    colExpFlag ? setHiddenColumns({}) : colCollapse();\n  }, [colExpFlag]);\n\n  const colCollapse = () => {\n    let hiddenHeaders = [];\n    // refactor this\n    headers.map(([key, value]) => {\n      if (expandedCols.includes(key)) {\n        hiddenHeaders.push({ [key]: false });\n      }\n    });\n    setHiddenColumns(Object.assign({}, ...hiddenHeaders));\n  };\n\n  const jsonToTree = (flatArray, options) => {\n    options = {\n      id: \"id\",\n      parentId: \"parentId\",\n      children: \"subRows\",\n      ...options,\n    };\n    const dictionary = {};\n    const tree = [];\n    const children = options.children;\n    flatArray.forEach((node) => {\n      const nodeId = node[options.id];\n      const nodeParentId = node[options.parentId];\n      const newNode = {\n        [children]: [],\n        ...node,\n      };\n      dictionary[nodeId] = newNode;\n      dictionary[nodeParentId] = dictionary[nodeParentId] || { [children]: [] };\n      dictionary[nodeParentId][children].push(newNode);\n    });\n    Object.values(dictionary).forEach((obj) => {\n      if (typeof obj[options.id] === \"undefined\") {\n        tree.push(...obj[children]);\n      }\n    });\n    return tree;\n  };\n\n  return (\n    <div className=\"materialReactExpandableTable headSticky cslPartnerTable darkHeader\">\n      {columns?.length ? (\n        <MaterialReactTable\n          columns={columns}\n          data={nodes}\n          enableExpandAll={true}\n          enableExpanding\n          enablePagination={false}\n          enableRowVirtualization={true}\n          enableBottomToolbar={false}\n          enableTopToolbar={false}\n          enableColumnActions={false}\n          enableSorting={false}\n          filterFromLeafRows\n          initialState={{\n            expanded: false,\n            density: \"compact\",\n            columnVisibility: { ...hiddenColumns },\n            columnPinning: { right: [\"total\"] },\n          }}\n          state={{ columnVisibility: { ...hiddenColumns } }}\n          defaultColumn={{ minSize: 40, maxSize: 1000, size: 40 }}\n          muiTableContainerProps={{\n            sx: { maxHeight: \"500px\", width: \"auto\", maxWidth: \"100%\" },\n          }}\n          muiTableBodyProps={{\n            sx: {\n              \"&\": {\n                borderRight: \"1px solid #ccc\",\n                borderBottom: \"1px solid #ccc\",\n              },\n              \"& td:first-of-type\": {\n                minWidth: \"60px\",\n                maxWidth: \"60px\",\n              },\n              \"& td\": {\n                // borderTop: \"1px solid #ccc\",\n                borderRight: \"1px solid #ccc\",\n                height: \"22px\",\n                padding: \"0px 5px\",\n              },\n            },\n          }}\n          muiTableHeadProps={{\n            sx: {\n              \"& th\": {\n                borderTop: \"1px solid #ccc\",\n                borderRight: \"1px solid #ccc\",\n                background: \"#f4f4f4 \",\n                padding: \"0 5px\",\n              },\n              \"& th:first-of-type\": {\n                minWidth: \"60px\",\n                maxWidth: \"60px\",\n              },\n            },\n          }}\n        />\n      ) : null}\n      {loader1 ? <Loader handleAbort={handleAbort} /> : \"\"}\n    </div>\n  );\n}\nexport default AccountHierarTable;\n","import React, { useState, useEffect, useRef } from \"react\";\nimport TreeView from \"@mui/lab/TreeView\";\nimport PropTypes, { node } from \"prop-types\";\nimport SvgIcon from \"@mui/material/SvgIcon\";\nimport { alpha, styled } from \"@mui/material/styles\";\nimport TreeItem, { treeItemClasses } from \"@mui/lab/TreeItem\";\nimport Collapse from \"@mui/material/Collapse\";\nimport { useSpring, animated } from \"@react-spring/web\";\nimport { FcOpenedFolder } from \"react-icons/fc\";\nimport axios from \"axios\";\nimport Box from \"@mui/material/Box\";\nimport Button from \"@mui/material/Button\";\nimport \"../ProjectComponent/DocumentHierarchy.scss\";\nimport { ReactSearchAutocomplete } from \"react-search-autocomplete\";\nimport { BiLoaderCircle } from \"react-icons/bi\";\nimport { environment } from \"../../environments/environment\";\nimport { AiFillWarning } from \"react-icons/ai\";\nimport { Typography } from \"@mui/material\";\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\nimport ChevronRightIcon from \"@mui/icons-material/ChevronRight\";\nimport Loader from \"../Loader/Loader\";\n\nfunction TransitionComponent(props) {\n  const style = useSpring({\n    from: {\n      opacity: 0,\n      transform: \"translate3d(20px,0,0)\",\n    },\n    to: {\n      opacity: props.in ? 1 : 0,\n      transform: `translate3d(${props.in ? 0 : 20}px,0,0)`,\n    },\n  });\n\n  return (\n    <animated.div style={style}>\n      <Collapse {...props} />\n    </animated.div>\n  );\n}\n\nTransitionComponent.propTypes = {\n  in: PropTypes.bool,\n};\n\nconst StyledTreeItem = styled((props) => {\n  return (\n    <div>\n      <TreeItem\n        {...props}\n        key={String(props?.node?.id)}\n        nodeId={String(props?.node?.id)}\n        label={props?.node?.full_name}\n        TransitionComponent={TransitionComponent}\n      >\n        {Array.isArray(props?.node?.subRows)\n          ? props?.node?.subRows.map((node) => renderTree(node))\n          : console.log(\"coming here?\")}\n      </TreeItem>\n    </div>\n  );\n})(({ theme }) => ({\n  [`& .${treeItemClasses.iconContainer}`]: {\n    \"& .close\": {\n      opacity: 0.3,\n    },\n  },\n  [`& .${treeItemClasses.group}`]: {\n    marginLeft: 15,\n    paddingLeft: 18,\n    borderLeft: `1px dashed ${alpha(theme.palette.text.primary, 0.4)}`,\n  },\n}));\n\nconst renderTree = (nodes) => (\n  <div key={String(nodes?.id)}>\n    <StyledTreeItem node={nodes}></StyledTreeItem>\n  </div>\n);\nexport default function AdminHierarchy(props) {\n  const baseUrl = environment.baseUrl;\n  const { popDocFolderId } = props;\n  const [ac, setAc] = useState([]);\n\n  {\n    /*--------------------Hierarchy Data--------------------- */\n  }\n  const loggedUserId = localStorage.getItem(\"resId\");\n  const resourceId = parseInt(loggedUserId) + 1;\n  const [searchHierarchy, setSearchHierarchy] = useState(resourceId);\n  const loggerUserName = localStorage.getItem(\"resName\");\n  const [hierarchyname, setHierarchyname] = useState(loggerUserName);\n  const [data, setData] = useState([]);\n  const [loader, setLoader] = useState(false);\n\n  const getHierarchyData = () => {\n    const loaderTime = setTimeout(() => {\n      setLoader(true);\n      document.body.click();\n    }, 2000);\n    axios({\n      method: \"get\",\n      url: baseUrl + \"/revenuemetricsms/RevenueMarginAnalysis/getReportees2\",\n    })\n      .then(function (response) {\n        const resp = response.data;\n        const newData = resp.map((item) => ({\n          name: item.full_name,\n          id: item.id,\n        }));\n\n        setAc(newData);\n\n        const filteredData = resp.filter((item) => {\n          if (item.parent_id !== null) {\n            return resp.some(\n              (parentItem) =>\n                parentItem &&\n                parentItem !== \"null\" &&\n                parentItem.id === item.parent_id\n            );\n          } else {\n            return true;\n          }\n        });\n        clearTimeout(loaderTime);\n        setLoader(false);\n        setData(filteredData);\n      })\n      .catch((err) => {});\n  };\n  const abortController = useRef(null);\n\n  const handleAbort = () => {\n    abortController.current && abortController.current.abort();\n    setLoader(false);\n  };\n  console.log(data);\n  useEffect(() => {\n    getHierarchyData();\n  }, []);\n  console.log(ac);\n  const jsonToTree = (flatArray, options) => {\n    options = {\n      id: \"id\",\n      parentId: \"parent_id\",\n      children: \"subRows\",\n      ...options,\n    };\n    const dictionary = {};\n    const tree = [];\n    const children = options.children;\n    flatArray.forEach((node) => {\n      const nodeId = node[options.id];\n      const nodeParentId = node[options.parentId];\n      dictionary[nodeId] = {\n        [children]: [],\n        ...node,\n        ...dictionary[nodeId],\n      };\n      dictionary[nodeParentId] = dictionary[nodeParentId] || { [children]: [] };\n      dictionary[nodeParentId][children].push(dictionary[nodeId]);\n    });\n    Object.values(dictionary).forEach((obj) => {\n      if (typeof obj[options.id] === \"undefined\") {\n        tree.push(...obj[children]);\n      }\n    });\n    return tree;\n  };\n\n  useEffect(() => {}, [popDocFolderId]);\n\n  const hierarchy = jsonToTree(data);\n\n  const generateTree = (data) => {\n    return data.map((person) => (\n      <TreeItem\n        key={person.id}\n        nodeId={String(person.id)}\n        label={<Typography>{person.full_name}</Typography>}\n      >\n        {person.has_childs === 1 &&\n        person.children &&\n        person.children.length > 0\n          ? generateTree(person.children)\n          : null}\n      </TreeItem>\n    ));\n  };\n\n  const collectedParentIds = [];\n  const reversedIds = [];\n  const [expanded, setExpanded] = useState(reversedIds);\n  console.log(expanded);\n  const handleExpandClick = (idsToExpand) => {\n    setExpanded((oldExpanded) => {\n      let newExpanded = [...oldExpanded];\n      idsToExpand.forEach((parentId) => {\n        if (!newExpanded.includes(parentId)) {\n          newExpanded.push(parentId);\n        }\n      });\n      return newExpanded;\n    });\n  };\n  const TreeNode = ({ full_name, id, subRows }) => {\n    return (\n      <TreeItem nodeId={id} label={full_name}>\n        {subRows.map((child) => (\n          <TreeNode key={child.id} label={child.full_name} />\n        ))}\n      </TreeItem>\n    );\n  };\n  const [expandedSatyanarayana, setExpandedSatyanarayana] =\n    useState(reversedIds);\n  console.log(expandedSatyanarayana);\n  const [expandedSupervisorOrphans, setExpandedSupervisorOrphans] =\n    useState(reversedIds);\n\n  const supervisorOrphansNode = hierarchy.find(\n    (item) => item.full_name === \"Supervisor Orphans\"\n  );\n  const SatyanarayanaNode = hierarchy.find(\n    (item) => item.full_name === \"Satyanarayana Bolli\"\n  );\n  const [selectedNodeId, setSelectedNodeId] = useState(null);\n  useEffect(() => {\n    if (selectedNodeId) {\n      const selectedElement = document.querySelector(\n        `[data-id=\"${selectedNodeId}\"]`\n      );\n      if (selectedElement) {\n        selectedElement.scrollIntoView({ behavior: \"smooth\", block: \"start\" });\n      }\n    }\n  }, [selectedNodeId]);\n  const renderTree = (node) => (\n    <TreeItem\n      nodeId={node.id.toString()}\n      label={\n        <Typography\n          style={{\n            color: hierarchyname === node.full_name ? \"maroon\" : \"inherit\",\n            fontWeight: hierarchyname === node.full_name ? \"bold\" : \"normal\",\n            fontStyle: hierarchyname === node.full_name ? \"italic\" : \"normal\",\n            fontSize: \"13px\",\n          }}\n        >\n          {node.full_name}\n        </Typography>\n      }\n      data-id={node.id.toString()}\n      ref={(element) => {\n        if (element && node.id === selectedNodeId) {\n          console.log(\"Scrolling to node:\", node.full_name);\n          element.scrollIntoView({ behavior: \"smooth\", block: \"start\" });\n        }\n      }}\n    >\n      {node.has_childs\n        ? node.subRows.map((item) => renderTree(item))\n        : node.subRows.map((item) => (\n            <TreeItem\n              key={item.id.toString()}\n              nodeId={item.id.toString()}\n              label={\n                <Typography\n                  style={{\n                    color:\n                      hierarchyname === item.full_name ? \"maroon\" : \"inherit\",\n                    fontWeight:\n                      hierarchyname === item.full_name ? \"bold\" : \"normal\",\n                    fontStyle:\n                      hierarchyname === item.full_name ? \"italic\" : \"normal\",\n                    fontSize: \"13px\",\n                  }}\n                >\n                  {item.full_name}\n                </Typography>\n              }\n              data-id={node.id.toString()}\n              ref={(element) => {\n                if (element && node.id === selectedNodeId) {\n                  console.log(\"Scrolling to node:\", node.full_name);\n                  element.scrollIntoView({\n                    behavior: \"smooth\",\n                    block: \"start\",\n                  });\n                }\n              }}\n            />\n          ))}\n    </TreeItem>\n  );\n  const findNodeAndCollect = (node, targetId, path = []) => {\n    if (node.id === targetId) {\n      const parentIds = path.map((parent) => parent.id);\n      console.log(parentIds);\n      collectedParentIds.push(...parentIds);\n    } else if (node.subRows) {\n      for (const childNode of node.subRows) {\n        findNodeAndCollect(childNode, targetId, [...path, node]);\n      }\n    }\n  };\n  for (const rootNode of hierarchy) {\n    findNodeAndCollect(rootNode, searchHierarchy);\n  }\n  useEffect(() => {\n    reversedIds.length = 0;\n    reversedIds.push(...collectedParentIds.reverse().map(String));\n    console.log(\"Reversed storeParentsId:\", reversedIds);\n  }, [collectedParentIds]);\n  useEffect(() => {\n    if (hierarchy.length > 0) {\n      const shouldOpenDefault =\n        !searchHierarchy || searchHierarchy === resourceId.toString();\n      const isCurrentExpandedStateValid =\n        (shouldOpenDefault && expanded.includes(resourceId.toString())) ||\n        (!shouldOpenDefault && expanded.includes(searchHierarchy));\n\n      if (!isCurrentExpandedStateValid) {\n        const nodeIdToExpand = shouldOpenDefault\n          ? resourceId.toString()\n          : searchHierarchy;\n        const parentIds = [];\n        findNodeAndCollect(hierarchy, nodeIdToExpand);\n        reversedIds.length = 0;\n        reversedIds.push(...collectedParentIds.reverse().map(String));\n        if (!arraysEqual(expanded, reversedIds)) {\n          setExpanded(reversedIds);\n        }\n        collectedParentIds.length = 0;\n      }\n    }\n  }, [hierarchy, searchHierarchy, expanded]);\n\n  const arraysEqual = (a, b) => JSON.stringify(a) === JSON.stringify(b);\n  useEffect(() => {\n    setExpanded(reversedIds);\n  }, []);\n\n  const [isAutomaticExpansionDone, setAutomaticExpansionDone] = useState(false);\n\n  useEffect(() => {\n    if (!isAutomaticExpansionDone && expanded.length > 0) {\n      handleExpandClick(reversedIds); // Expand the nodes only once\n      setAutomaticExpansionDone(true);\n    }\n  }, [isAutomaticExpansionDone, hierarchy]);\n\n  const handleClick = (event, nodeId) => {\n    const reversedCopy = [...reversedIds];\n    const nodesToExpand = [nodeId, ...reversedCopy.reverse()]; // Include both parent IDs and the clicked node ID in reverse order\n    setExpanded(nodesToExpand);\n  };\n\n  return (\n    <div>\n      <div className=\"col-md-12 mb-4\">\n        <div className=\"form-group row\">\n          <label className=\"col-5\" htmlFor=\"email-input\">\n            Search&nbsp;<span className=\"error-text ml-1\">*</span>\n          </label>\n          <span className=\"col-1 p-0\">:</span>\n          <div className=\"col-6\">\n            <div className=\"autoComplete-container\">\n              <ReactSearchAutocomplete\n                items={ac}\n                type=\"Text\"\n                name=\"prjId\"\n                id=\"prjId\"\n                className=\"error AutoComplete\"\n                onSelect={(e) => {\n                  setSearchHierarchy(e.id);\n                  setHierarchyname(e.name);\n                  setSelectedNodeId(e.id);\n                }}\n                showIcon={false}\n                inputSearchString={hierarchyname}\n                placeholder=\"Type minimum 3 characters to get the list\"\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <Box sx={{ flexGrow: 1, maxWidth: 400, overflowY: \"hidden\" }}>\n        <Box sx={{ mb: 1 }}></Box>\n        <div\n          style={{\n            border: \"1px solid #ccc\",\n          }}\n        >\n          <table style={{ width: \"100%\", borderCollapse: \"collapse\" }}>\n            <tbody>\n              <tr>\n                <td\n                  style={{\n                    padding: \"5px\",\n                    verticalAlign: \"top\",\n                    borderBottom: \"1px solid #ccc\",\n                  }}\n                >\n                  <TreeView\n                    aria-label=\"controlled\"\n                    defaultCollapseIcon={<ExpandMoreIcon />}\n                    defaultExpandIcon={<ChevronRightIcon />}\n                    expanded={\n                      expandedSatyanarayana.length === 0 ||\n                      expanded.includes(expandedSatyanarayana)\n                        ? expanded\n                        : expandedSatyanarayana\n                    }\n                    onNodeToggle={(event, nodeIds) =>\n                      setExpandedSatyanarayana(nodeIds)\n                    }\n                    onNodeSelect={handleClick}\n                  >\n                    {SatyanarayanaNode ? (\n                      renderTree(SatyanarayanaNode)\n                    ) : (\n                      <p>Satyanarayana Bolli</p>\n                    )}\n                  </TreeView>\n                </td>\n              </tr>\n              <tr>\n                <td\n                  style={{\n                    padding: \"8px\",\n                    verticalAlign: \"top\",\n                    borderBottom: \"1px solid #ccc\",\n                  }}\n                >\n                  <TreeView\n                    aria-label=\"controlled\"\n                    defaultCollapseIcon={<ExpandMoreIcon />}\n                    defaultExpandIcon={<ChevronRightIcon />}\n                    expanded={\n                      expandedSupervisorOrphans.length === 0\n                        ? expanded\n                        : expandedSupervisorOrphans\n                    }\n                    onNodeToggle={(event, nodeIds) =>\n                      setExpandedSupervisorOrphans(nodeIds)\n                    }\n                    onNodeSelect={handleClick}\n                  >\n                    {supervisorOrphansNode ? (\n                      renderTree(supervisorOrphansNode)\n                    ) : (\n                      <p>Supervisor Orphans </p>\n                    )}\n                  </TreeView>\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      </Box>\n      {loader ? <Loader handleAbort={handleAbort} /> : \"\"}\n    </div>\n  );\n}\n","import React, { useEffect, useRef } from \"react\";\nimport \"../../App.scss\";\nimport HierarchyTable from \"./HierarchyTable\";\nimport { useState } from \"react\";\nimport { CCollapse } from \"@coreui/react\";\nimport Loader from \"../Loader/Loader\";\nimport {\n  FaChevronCircleDown,\n  FaChevronCircleUp,\n  FaSearch,\n  FaCaretDown,\n  FaCheck,\n  FaPlus,\n  FaSave,\n} from \"react-icons/fa\";\nimport { DataTable } from \"primereact/datatable\";\nimport { Column } from \"primereact/column\";\nimport { Link } from \"react-router-dom\";\nimport TeamsProjectHierarchyTree from \"./TeamsProjectHierarchyTree\";\nimport ProjectHierarchy from \"./TeamsProjectHierarchy\";\nimport GlobalHelp from \"../PrimeReactTableComponent/GlobalHelp\";\nimport ScreenBreadcrumbs from \"../Common/ScreenBreadcrumbs\";\nimport axios from \"axios\";\nimport { MultiSelect } from \"react-multi-select-component\";\nimport { environment } from \"../../environments/environment\";\nimport MarginAnalysisHierarchy from \"../RevenueMetrices/MarginAnalysisHierarchy\";\nimport GlobalValidation from \"../ValidationComponent/GlobalValidation\";\nimport CSL from \"../../assets/images/TeamsHierarImg/CSL.png\";\nimport CSLHead from \"../../assets/images/TeamsHierarImg/CSLHead.png\";\nimport DP from \"../../assets/images/TeamsHierarImg/DP.png\";\nimport AW from \"../../assets/images/TeamsHierarImg/AW.png\";\nimport { AiFillWarning } from \"react-icons/ai\";\nimport AE from \"../../assets/images/TeamsHierarImg/AE.png\";\nimport ACSL from \"../../assets/images/TeamsHierarImg/ACSL.png\";\nimport DPHead from \"../../assets/images/TeamsHierarImg/DPHead.png\";\nimport TP from \"../../assets/images/TeamsHierarImg/TP.png\";\nimport PC from \"../../assets/images/TeamsHierarImg/PC.png\";\nimport SQA from \"../../assets/images/TeamsHierarImg/SQA.png\";\nimport AccountHierarTable from \"./AccountHierarTable\";\nimport AdminHierarchy from \"./AdminHierarchy\";\nimport \"./TeamsHierarchyTable.scss\";\nimport TeamsProjectHierarchy from \"./TeamsProjectHierarchy\";\nimport { VscTypeHierarchySub } from \"react-icons/vsc\";\n\nfunction Hierarchy() {\n  const [visible, setVisible] = useState(false);\n  const [cheveronIcon, setCheveronIcon] = useState(FaChevronCircleUp);\n  const [loader, setLoader] = useState(false);\n  const [searching, setSearching] = useState(false);\n  const HelpPDFName = \"Hierarchies.pdf\";\n  const Header = \"Hierarchy Help\";\n  const baseUrl = environment.baseUrl;\n  const loggedUserId = localStorage.getItem(\"resId\");\n  const resourceId = parseInt(loggedUserId) + 1;\n  const [routes, setRoutes] = useState([]);\n  let textContent = \"Teams\";\n  let currentScreenName = [\"Hierarchies\"];\n\n  useEffect(() => {\n    getMenus();\n  }, []);\n\n  const getMenus = () => {\n    axios({\n      method: \"GET\",\n      url: baseUrl + `/CommonMS/master/getMenus?loggedUserId=${loggedUserId}`,\n    }).then((resp) => {\n      let data = resp.data;\n      data.forEach((item) => {\n        if (item.display_name === textContent) {\n          setRoutes([item]);\n        }\n      });\n    });\n  };\n\n  const ref = useRef([]);\n  const [viewBy, setViewBy] = useState(\"csl\");\n  const [selectedType, setSelectedType] = useState(\"csl\");\n  const [projectHierarchy, setProjectHierarchy] = useState([]);\n  const [data, setData] = useState([]);\n  const [accountHierarchy, setAccountHierarchy] = useState([]);\n  const [dpList, setDpList] = useState([]);\n  const [selectedDpList, setSelectedDpList] = useState([]);\n  const [customerList, setCustomerList] = useState([]);\n  const [selectedcustomerList, setSelectedCustomerList] = useState([]);\n  const [acchieCustlist, setAcchieCustlist] = useState([]);\n  const [selectedacchieCustlist, setSelectedacchieCustlist] = useState([]);\n  const [proHieCust, setProHieCust] = useState([]);\n  const [selectedproHieCust, setSelectedproHieCust] = useState([]);\n  const [cslList, setCslList] = useState([]);\n  const [selectedCslList, setSelectedCslList] = useState([]);\n  const [activeProjectsByCustomer, setActiveProjectsByCustomer] = useState([]);\n  const [showcslproject, setShowcslproject] = useState(false);\n  const [showacchieDataTable, setShowacchieDataTable] = useState(false);\n  const [state, setState] = useState(\"All\");\n\n  const [hierarchydata, setHierarchyData] = useState([]);\n  const [hierarchyCount, setHierarchyCount] = useState(0);\n  const [searchinghierarchy, setSearchingHierarchy] = useState(false);\n\n  const initialValue = {\n    viewBy: \"\",\n    csl: -1,\n    dp: -1,\n    prj: \"\",\n    acct: -1,\n  };\n  const [formData, setFormData] = useState(initialValue);\n  const abortController = useRef(null);\n  useEffect(() => {\n    console.log(hierarchydata);\n  }, [hierarchydata]);\n  const handleAbort = () => {\n    abortController.current && abortController.current.abort();\n    setLoader(false);\n  };\n  {\n    /*-------------------------Getting Csl List----------------------f---*/\n  }\n  const getCustomerCSLList = async () => {\n    const resp = await axios({\n      url: baseUrl + `/teamms/Hierarchy/getCustomerCSLList`,\n    });\n    let terms = [];\n    let data = resp.data;\n    data.length > 0 &&\n      data.forEach((e) => {\n        let termsObj = {\n          label: e.PersonName,\n          value: e.id,\n        };\n        terms.push(termsObj);\n        setCslList(terms);\n        setSelectedCslList(terms);\n      });\n  };\n\n  {\n    /*-------------------------Getting Delivery Partner List-------------------------*/\n  }\n  const getCustomerDelParatnerList = async () => {\n    const resp = await axios({\n      url:\n        baseUrl +\n        `/revenuemetricsms/RevenueMarginAnalysis/getCustomerDelParatnerList`,\n    });\n    let terms = [];\n    let data = resp.data;\n    data.length > 0 &&\n      data.forEach((e) => {\n        let termsObj = {\n          label: e.PersonName,\n          value: e.id,\n        };\n        terms.push(termsObj);\n        setDpList(terms);\n        setSelectedDpList(terms);\n      });\n  };\n  {\n    /*-------------------------Getting Customer List-------------------------*/\n  }\n  const getCustomerList = async () => {\n    const resp = await axios({\n      url: baseUrl + `/teamms/Hierarchy/customersList`,\n    });\n    let terms = [];\n    let data = resp.data;\n    data.length > 0 &&\n      data.forEach((e) => {\n        let termsObj = {\n          label: e.full_name,\n          value: e.id,\n        };\n        terms.push(termsObj);\n        setCustomerList(terms);\n        setSelectedCustomerList(terms);\n      });\n  };\n\n  const getaccHierarchyCustlist = async () => {\n    setTimeout(() => {\n      setLoader(false);\n    }, 1000);\n    const resp = await axios({\n      // url: baseUrl + `/teamms/Hierarchy/accHierarchyCustlist`,\n      url: baseUrl + `/teamms/Hierarchy/accHierarchyCustlist`,\n    });\n    let terms1 = [];\n    let data = resp.data;\n    data.length > 0 &&\n      data.forEach((e) => {\n        let termsObj1 = {\n          label: e.name,\n          value: e.id,\n        };\n        terms1.push(termsObj1);\n        setAcchieCustlist(terms1);\n        setSelectedacchieCustlist(terms1);\n      });\n  };\n\n  const getCustomerByDPList = async () => {\n    const resp = await axios({\n      url:\n        // baseUrl + `/teamms/Hierarchy/customerByDPList?dps=-1&res=${resourceId}`,\n        baseUrl + `/teamms/Hierarchy/customerByDPList?dps=-1&res=${resourceId}`,\n    });\n    let terms = [];\n    let data = resp.data;\n    console.log(data);\n    data.length > 0 &&\n      data.forEach((e) => {\n        let termsObj = {\n          label: e.name,\n          value: e.id,\n        };\n        terms.push(termsObj);\n        setProHieCust(terms);\n        setSelectedproHieCust(terms);\n      });\n  };\n  console.log(proHieCust);\n\n  const [searchProjecthierarchy, setSearchProjectHierarchy] = useState(false);\n  const selectedValues = selectedproHieCust.map((item) => item.value).join(\",\");\n\n  const getProjectHierarchy = () => {\n    const loaderTime = setTimeout(() => {\n      setLoader(true);\n    }, 2000);\n\n    axios({\n      method: \"post\",\n      url: baseUrl + `/teamms/Hierarchy/getProjectHierarchy`,\n\n      data: {\n        viewBy: viewBy,\n        dplList: formData.dp,\n        customer: selectedValues,\n        UserId: resourceId,\n      },\n      headers: { \"Content-Type\": \"application/json\" },\n    }).then((res) => {\n      const data = res.data;\n      console.log(data);\n      setProjectHierarchy(data);\n      setSearchProjectHierarchy(true);\n      clearTimeout(loaderTime);\n      setLoader(false);\n      setVisible(!visible);\n      visible\n        ? setCheveronIcon(FaChevronCircleUp)\n        : setCheveronIcon(FaChevronCircleDown);\n    });\n  };\n  // CSL Hierarchy --click for project---for project display\n  const getPartnerAccountHierarchy = () => {\n    const loaderTime = setTimeout(() => {\n      setLoader(true);\n    }, 2000);\n\n    axios({\n      method: \"post\",\n      // url: baseUrl + `/teamms/Hierarchy/getPartnerAccountHierarchy`,\n      url: baseUrl + `/teamms/Hierarchy/getPartnerAccountHierarchy`,\n\n      data: {\n        viewBy: viewBy,\n        cslList: formData.csl,\n      },\n      headers: { \"Content-Type\": \"application/json\" },\n    }).then((resp) => {\n      const getData = resp.data;\n      setData(getData);\n      setSearching(true);\n      clearTimeout(loaderTime);\n      setLoader(false);\n      setVisible(!visible);\n      visible\n        ? setCheveronIcon(FaChevronCircleUp)\n        : setCheveronIcon(FaChevronCircleDown);\n    });\n  };\n  ///dp List\n  const getPartnerAccountHierarchyDp = () => {\n    const loaderTime = setTimeout(() => {\n      setLoader(true);\n    }, 2000);\n\n    axios({\n      method: \"post\",\n      // url: baseUrl + `/teamms/Hierarchy/getPartnerAccountHierarchy`,\n      url: baseUrl + `/teamms/Hierarchy/getPartnerAccountHierarchy`,\n\n      data: {\n        viewBy: viewBy,\n        dpList: formData.dp,\n      },\n      headers: { \"Content-Type\": \"application/json\" },\n    }).then((resp) => {\n      const getData = resp.data;\n      setData(getData);\n      setSearching(true);\n      clearTimeout(loaderTime);\n      setLoader(false);\n      setVisible(!visible);\n      visible\n        ? setCheveronIcon(FaChevronCircleUp)\n        : setCheveronIcon(FaChevronCircleDown);\n    });\n  };\n\n  useEffect(() => {}, [data]);\n  if (data.tableData && data.tableData.length > 0) {\n    const keys = Object.keys(data.tableData[0]);\n    data.columns = \"'partner_name,account,role'\";\n  }\n  const [showacchieTable, setShowacchieTable] = useState(false);\n  const getAccountHierarchy = () => {\n    const loaderTime = setTimeout(() => {\n      setLoader(true);\n    }, 2000);\n\n    axios({\n      method: \"post\",\n      url: baseUrl + `/teamms/Hierarchy/getAccountHierarchy`,\n\n      data: {\n        viewBy: viewBy,\n        dplList: formData.dp,\n        customer: formData.acct,\n      },\n      headers: { \"Content-Type\": \"application/json\" },\n    }).then((resp) => {\n      const getData = resp.data;\n      setData(getData);\n      console.log(data);\n      setShowacchieTable(true);\n      clearTimeout(loaderTime);\n      setLoader(false);\n      setVisible(!visible);\n      visible\n        ? setCheveronIcon(FaChevronCircleUp)\n        : setCheveronIcon(FaChevronCircleDown);\n    });\n  };\n  const [nodeClicked, setNodeClicked] = useState(\"\");\n  const handleNodeClicked = (value) => {\n    console.log(value);\n    setNodeClicked(value);\n  };\n  const [searchAdminHierarchy, setSearchAdminHierarchy] = useState(false);\n\n  const [warnMsg, setWarnMsg] = useState(\"\");\n\n  const handleSearch = () => {\n    let valid = GlobalValidation(ref);\n\n    if (valid) {\n      setWarnMsg(\n        <div className=\"col-md-12 statusMsg error\">\n          <AiFillWarning />\n          <span>Please select valid values for highlighted fields</span>\n        </div>\n      );\n      return;\n    }\n\n    setWarnMsg(\"\");\n    if (selectedType == \"csl\") {\n      getPartnerAccountHierarchy();\n      setSearchingHierarchy(false);\n      setShowcslHieTable(false);\n      setShowprojectHie(false);\n      setShowacchieTable(false);\n      setShowacchieDataTable(false);\n      setSearchAdminHierarchy(false);\n    } else if (selectedType == \"dp\") {\n      getPartnerAccountHierarchyDp();\n      setSearchingHierarchy(false);\n      setShowcslHieTable(false);\n      setShowprojectHie(false);\n\n      setShowacchieTable(false);\n      setShowacchieDataTable(false);\n      setSearchAdminHierarchy(false);\n    } else if (selectedType == \"prj\") {\n      getProjectHierarchy();\n      setSearchingHierarchy(false);\n      setSearchAdminHierarchy(false);\n      setShowacchieTable(false);\n      setShowcslHieTable(false);\n      setShowacchieDataTable(false);\n    } else if (selectedType == \"acct\") {\n      getAccountHierarchy();\n      setSearchingHierarchy(false);\n      setSearchAdminHierarchy(false);\n      setShowcslHieTable(false);\n      setShowprojectHie(false);\n    } else if (selectedType == \"admin\") {\n      setSearchAdminHierarchy(true);\n      setSearchingHierarchy(false);\n      setShowacchieTable(false);\n      setShowacchieDataTable(false);\n      setShowcslHieTable(false);\n      setShowprojectHie(false);\n    }\n    setShowcslproject(false);\n    setSearching(false);\n    setShowprojectHie(false);\n    setShowacctHieTable(false);\n    setSearchProjectHierarchy(false);\n  };\n  useEffect(() => {\n    // delivery partner list dropdown\n    getCustomerDelParatnerList();\n    // csl list dropdown\n    getCustomerCSLList();\n    // project hierarchy customer list\n    getCustomerByDPList();\n    // Account hierarchy customer list\n    getaccHierarchyCustlist();\n  }, []);\n  const ArrowRenderer = ({ expanded }) => (\n    <>\n      {expanded ? (\n        <FaCaretDown className=\"chevronIcon\" />\n      ) : (\n        <FaCaretDown className=\"chevronIcon\" />\n      )}\n    </>\n  );\n  // Project Hierarchy All and Active\n  const [projectId, setProjectId] = useState([]);\n  console.log(projectId);\n  const [showprojectHie, setShowprojectHie] = useState(false);\n  const [showacctHieTable, setShowacctHieTable] = useState(false);\n  const [showcslHieTable, setShowcslHieTable] = useState(false);\n  const getPrjRolesTree = (id) => {\n    const loaderTime = setTimeout(() => {\n      setLoader(true);\n    }, 2000);\n\n    axios({\n      method: \"post\",\n      url: baseUrl + `/teamms/Hierarchy/prjRolesTree`,\n\n      data: {\n        typ: \"roles\",\n        prjId: projectId == \"\" ? id : projectId,\n        dat: \"0000-00-00\",\n        status: state,\n      },\n      headers: { \"Content-Type\": \"application/json\" },\n    }).then((resp) => {\n      const getData = resp.data;\n      console.log(getData);\n      for (const project of getData) {\n        if (project.id === \"-1\" && project.parent === \"#\") {\n          const cleanedText = project.text.replace(/<\\/?[^>]+(>|$)/g, \"\");\n          project.text = cleanedText;\n        }\n      }\n      setHierarchyData(getData);\n      setHierarchyCount((prev) => prev + 1);\n      setSearchingHierarchy(true);\n      setShowcslHieTable(true);\n      clearTimeout(loaderTime);\n      setLoader(false);\n    });\n  };\n  const [hieprojectId, setHieProjectId] = useState([]);\n\n  const getPrjRolesTreAccHie = (id) => {\n    const loaderTime = setTimeout(() => {\n      setLoader(true);\n    }, 2000);\n\n    axios({\n      method: \"post\",\n      url: baseUrl + `/teamms/Hierarchy/prjRolesTree`,\n\n      data: {\n        typ: \"roles\",\n        prjId: hieprojectId == \"\" ? id : hieprojectId,\n        dat: \"0000-00-00\",\n        status: state,\n      },\n      headers: { \"Content-Type\": \"application/json\" },\n    }).then((resp) => {\n      const getData = resp.data;\n      for (const project of getData) {\n        if (project.id === \"-1\" && project.parent === \"#\") {\n          const cleanedText = project.text.replace(/<\\/?[^>]+(>|$)/g, \"\");\n          project.text = cleanedText;\n        }\n      }\n      setHierarchyData(getData);\n      setHierarchyCount((prev) => prev + 1);\n      setSearchingHierarchy(true);\n      setShowacctHieTable(true);\n      clearTimeout(loaderTime);\n      setLoader(false);\n    });\n  };\n  useEffect(() => {\n    getPrjRolesTreAccHie();\n  }, [hieprojectId, state]);\n  const projectLinks = (rowData) => {\n    return (\n      <div style={{ display: \"flex\", alignItems: \"center\" }}>\n        <Link\n          title={rowData.label}\n          to={`/project/Overview/:${rowData.id}`}\n          target=\"_blank\"\n          className=\"ellipsis\"\n          style={{\n            overflow: \"hidden\",\n            textOverflow: \"ellipsis\",\n            whiteSpace: \"nowrap\",\n            flexGrow: 1,\n          }}\n        >\n          {rowData.label}\n        </Link>\n        <VscTypeHierarchySub\n          style={{\n            cursor: \"pointer\",\n          }}\n          onClick={(e) => {\n            getPrjRolesTreAccHie(rowData.id);\n            setHieProjectId(rowData.id);\n          }}\n        />\n      </div>\n    );\n  };\n\n  const projectLinksCsl = (rowData) => {\n    return (\n      <div style={{ display: \"flex\", alignItems: \"center\" }}>\n        <Link\n          title={rowData.label}\n          to={`/project/Overview/:${rowData.id}`}\n          target=\"_blank\"\n          className=\"ellipsis\"\n          style={{\n            overflow: \"hidden\",\n            textOverflow: \"ellipsis\",\n            whiteSpace: \"nowrap\",\n            flexGrow: 1,\n          }}\n        >\n          {rowData.label}\n        </Link>\n        {/* <VscTypeHierarchySub /> */}\n        <VscTypeHierarchySub\n          style={{\n            cursor: \"pointer\",\n          }}\n          onClick={(e) => {\n            getPrjRolesTree(rowData.id);\n            console.log(rowData.id, \"-----id and labels----\", rowData.label);\n            setProjectId(rowData.id);\n          }}\n        />\n      </div>\n    );\n  };\n  useEffect(() => {\n    getPrjRolesTree();\n  }, [projectId, state]);\n  return (\n    <div>\n      {warnMsg}\n      <div className=\"col-md-12\">\n        <div className=\"pageTitle\">\n          <div className=\"childOne\"></div>\n          <div className=\"childTwo\">\n            <h2>Hierarchies</h2>\n          </div>\n          <div className=\"childThree\"></div>\n        </div>\n      </div>\n      <ScreenBreadcrumbs\n        routes={routes}\n        currentScreenName={currentScreenName}\n      />\n\n      <div className=\"group mb-3 customCard\">\n        <div className=\"col-md-12 collapseHeader\">\n          <h2>Search Filters</h2>\n          <div className=\"helpBtn\">\n            <GlobalHelp pdfname={HelpPDFName} name={Header} />\n          </div>\n          <div\n            onClick={() => {\n              setVisible(!visible);\n              visible\n                ? setCheveronIcon(FaChevronCircleUp)\n                : setCheveronIcon(FaChevronCircleDown);\n            }}\n          >\n            <span>{cheveronIcon}</span>\n          </div>\n        </div>\n        <CCollapse visible={!visible}>\n          <div className=\"group-content row\">\n            <div className=\" col-md-4 mb-2\">\n              <div className=\"form-group row\">\n                <label className=\"col-4\" htmlFor=\"Date\">\n                  View By <span className=\"error-text\">&nbsp;&nbsp;*</span>\n                </label>\n                <span className=\"col-1\">:</span>\n                <div className=\"col-6\">\n                  <select\n                    id=\"viewby-select\"\n                    onChange={(e) => {\n                      setViewBy(e.target.value);\n                      setSelectedType(e.target.value);\n                    }}\n                  >\n                    <option value=\"csl\">CSL Hierarchy</option>\n                    <option value=\"dp\">DP Hierarchy</option>\n                    <option value=\"prj\">Project Hierarchy</option>\n                    <option value=\"acct\">Account Hierarchy</option>\n                    <option value=\"admin\">Admin Hierarchy</option>\n                  </select>\n                </div>\n              </div>\n            </div>\n            {selectedType == \"csl\" ? (\n              <div className=\" col-md-4 mb-2\">\n                <div className=\"form-group row\">\n                  <label className=\"col-4\" htmlFor=\"Date\">\n                    CSL<span style={{ color: \"red\" }}>*</span>\n                  </label>\n                  <span className=\"col-1\">:</span>\n                  <div className=\"col-6\">\n                    <div\n                      className=\" multiselect\"\n                      ref={(ele) => {\n                        ref.current[0] = ele;\n                      }}\n                    >\n                      <MultiSelect\n                        id=\"csl\"\n                        ArrowRenderer={ArrowRenderer}\n                        options={cslList}\n                        hasSelectAll={true}\n                        isLoading={false}\n                        selected={selectedCslList}\n                        shouldToggleOnHover={false}\n                        disableSearch={false}\n                        value={selectedCslList}\n                        disabled={false}\n                        valueRenderer={(selected) => {\n                          if (selected.length === 0) {\n                            return <>&lt;&lt;Please Select&gt;&gt;</>;\n                          } else if (selected.length === cslList.length) {\n                            return <>&lt;&lt;ALL&gt;&gt;</>;\n                          }\n                        }}\n                        onChange={(s) => {\n                          setSelectedCslList(s);\n                          let filteredValues = [];\n                          s.forEach((d) => {\n                            filteredValues.push(d.value);\n                          });\n                          setFormData((prevVal) => ({\n                            ...prevVal,\n                            [\"csl\"]: filteredValues.toString(),\n                          }));\n                        }}\n                      />\n                    </div>\n                  </div>\n                </div>\n              </div>\n            ) : selectedType == \"dp\" ? (\n              <div className=\" col-md-4 mb-2\">\n                <div className=\"form-group row\">\n                  <label className=\"col-4\" htmlFor=\"Date\">\n                    Delivery Partner <span style={{ color: \"red\" }}>*</span>\n                  </label>\n                  <span className=\"col-1\">:</span>\n                  <div className=\"col-6\">\n                    <div\n                      className=\" multiselect\"\n                      ref={(ele) => {\n                        ref.current[1] = ele;\n                      }}\n                    >\n                      <MultiSelect\n                        id=\"dp\"\n                        options={dpList}\n                        ArrowRenderer={ArrowRenderer}\n                        hasSelectAll={true}\n                        isLoading={false}\n                        shouldToggleOnHover={false}\n                        disableSearch={false}\n                        value={selectedDpList}\n                        disabled={false}\n                        onChange={(s) => {\n                          setSelectedDpList(s);\n                          let filteredValues = [];\n                          s.forEach((d) => {\n                            filteredValues.push(d.value);\n                          });\n                          setFormData((prevVal) => ({\n                            ...prevVal,\n                            [\"dp\"]: filteredValues.toString(),\n                          }));\n                        }}\n                        valueRenderer={(selected) => {\n                          if (selected.length === 0) {\n                            return <>&lt;&lt;Please Select&gt;&gt;</>;\n                          } else if (selected.length === dpList.length) {\n                            return <>&lt;&lt;ALL&gt;&gt;</>;\n                          }\n                        }}\n                      />\n                    </div>\n                  </div>\n                </div>\n              </div>\n            ) : selectedType == \"prj\" ? (\n              <div className=\" col-md-4 mb-2\">\n                <div className=\"form-group row\">\n                  <label className=\"col-4\" htmlFor=\"Date\">\n                    Customer <span style={{ color: \"red\" }}>*</span>\n                  </label>\n                  <span className=\"col-1\">:</span>\n                  <div className=\"col-6\">\n                    <div\n                      className=\" multiselect\"\n                      ref={(ele) => {\n                        ref.current[2] = ele;\n                      }}\n                    >\n                      <MultiSelect\n                        id=\"prj\"\n                        options={proHieCust}\n                        ArrowRenderer={ArrowRenderer}\n                        hasSelectAll={true}\n                        isLoading={false}\n                        selected={selectedproHieCust}\n                        shouldToggleOnHover={false}\n                        disableSearch={false}\n                        value={selectedproHieCust}\n                        disabled={false}\n                        valueRenderer={(selected) => {\n                          if (selected.length === 0) {\n                            return <>&lt;&lt;Select&gt;&gt;</>;\n                          } else {\n                            return `${selected.length} selected`;\n                          }\n                        }}\n                        onChange={(s) => {\n                          setSelectedproHieCust(s);\n                          let filteredValues = [];\n                          s.forEach((d) => {\n                            filteredValues.push(d.value);\n                          });\n                          setFormData((prevVal) => ({\n                            ...prevVal,\n                            [\"prj\"]: filteredValues.toString(),\n                          }));\n                        }}\n                      />\n                    </div>\n                  </div>\n                </div>\n              </div>\n            ) : selectedType == \"acct\" ? (\n              <div className=\" col-md-4 mb-2\">\n                <div className=\"form-group row\">\n                  <label className=\"col-4\" htmlFor=\"Date\">\n                    Customer<span style={{ color: \"red\" }}>*</span>\n                  </label>\n                  <span className=\"col-1\">:</span>\n                  <div className=\"col-6\">\n                    <div\n                      className=\" multiselect\"\n                      ref={(ele) => {\n                        ref.current[0] = ele;\n                      }}\n                    >\n                      <MultiSelect\n                        id=\"acct\"\n                        options={acchieCustlist}\n                        ArrowRenderer={ArrowRenderer}\n                        hasSelectAll={true}\n                        isLoading={false}\n                        selected={selectedacchieCustlist}\n                        shouldToggleOnHover={false}\n                        disableSearch={false}\n                        value={selectedacchieCustlist}\n                        disabled={false}\n                        valueRenderer={(selected) => {\n                          if (selected.length === 0) {\n                            return <>&lt;&lt;Select&gt;&gt;</>;\n                          } else {\n                            return `${selected.length} selected`;\n                          }\n                        }}\n                        onChange={(e) => {\n                          setSelectedacchieCustlist(e);\n                          let filteredCustomer = [];\n                          e.forEach((d) => {\n                            filteredCustomer.push(d.value);\n                          });\n                          setFormData((prevVal) => ({\n                            ...prevVal,\n                            [\"acct\"]: filteredCustomer.toString(),\n                          }));\n                        }}\n                      />\n                    </div>\n                  </div>\n                </div>\n              </div>\n            ) : (\n              \"\"\n            )}\n          </div>\n          <div className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12 btn-container center my-1\">\n            <button className=\"btn btn-primary\" onClick={handleSearch}>\n              <FaSearch />\n              Search\n            </button>\n          </div>\n        </CCollapse>\n        {loader ? <Loader handleAbort={handleAbort} /> : \"\"}\n      </div>\n\n      {/*  CSL Project show and Dp  */}\n      <div className=\"col-md-12\">\n        <div className=\"row\">\n          {searching ? (\n            <>\n              <div className=\"roleTableLegends\">\n                <span>\n                  <img src={CSLHead} title=\"CSL Head\" />\n                  CSL Head\n                </span>\n                <span>\n                  <img src={CSL} title=\"CSL\" />\n                  CSL\n                </span>\n                <span>\n                  <img src={ACSL} title=\"ACSL\" />\n                  ACSL\n                </span>\n                <span>\n                  <img src={DPHead} title=\"DP Head\" />\n                  DP Head\n                </span>\n                <span>\n                  <img src={DP} title=\"DP\" />\n                  DP\n                </span>\n                <span>\n                  <img src={TP} title=\"TP\" />\n                  TP\n                </span>\n                <span>\n                  <img src={PC} title=\"PC\" />\n                  PC\n                </span>\n                <span>\n                  <img src={SQA} title=\"SQA\" />\n                  SQA\n                </span>\n                <span>\n                  <img src={AE} title=\"AE\" />\n                  AE\n                </span>\n                <span>\n                  <img src={AW} title=\"Account Owner\" />\n                  AW\n                </span>\n              </div>\n              <div style={{ width: \"100%\", maxWidth: \"40%\" }}>\n                <HierarchyTable\n                  data={data}\n                  setActiveProjectsByCustomer={setActiveProjectsByCustomer}\n                  setShowcslproject={setShowcslproject}\n                  activeProjectsByCustomer={activeProjectsByCustomer}\n                  expandedCols={[]}\n                  setShowcslHieTable={setShowcslHieTable}\n                  colExpandState={[]}\n                />\n              </div>\n            </>\n          ) : (\n            \"\"\n          )}\n          {showcslproject == true ? (\n            <div className=\"roleProject darkHeader\">\n              <DataTable\n                value={activeProjectsByCustomer}\n                editMode=\"row\"\n                showGridlines\n                stripedRows\n                scrollHeight=\"425px\"\n                responsiveLayout=\"scroll\"\n              >\n                <Column\n                  header=\"Projects\"\n                  alignHeader={\"center\"}\n                  body={projectLinksCsl}\n                ></Column>\n              </DataTable>\n            </div>\n          ) : (\n            \"\"\n          )}\n          {showcslHieTable == true && hierarchydata.length > 0 ? (\n            <div style={{ width: \"100%\", maxWidth: \"35%\" }}>\n              <div className=\"\" style={{ backgroundColor: \"#eeeeee38\" }}>\n                <div\n                  className=\"col-md-12\"\n                  style={{\n                    borderBottom: \"1px solid grey\",\n                    background: \"#f1eeee\",\n                    height: \"36px\",\n                  }}\n                >\n                  <label style={{ float: \"right\", paddingTop: \"7px\" }}>\n                    <select\n                      style={{ marginLeft: \"10px\" }}\n                      id=\"status\"\n                      onChange={(e) => {\n                        setState(e.target.value);\n                        getPrjRolesTree();\n                      }}\n                    >\n                      <option value=\"All\">All</option>\n                      <option value=\"Active\">Active</option>\n                    </select>\n                  </label>\n                  <div className=\"childTwo\">\n                    <h2\n                      style={{\n                        textAlign: \"center\",\n                        color: \"#297AB0\",\n                        fontSize: \"14px\",\n                        paddingTop: \"7px\",\n                      }}\n                    >\n                      Project Hierarchy\n                    </h2>\n                  </div>\n                </div>\n                {showcslHieTable == true && searchinghierarchy ? (\n                  <TeamsProjectHierarchyTree\n                    defaultExpandedRows={String(-1)}\n                    data={hierarchydata}\n                    hierarchyCount={hierarchyCount}\n                  />\n                ) : (\n                  \"\"\n                )}\n              </div>\n            </div>\n          ) : (\n            \"\"\n          )}\n        </div>\n      </div>\n      <div className=\"col-md-12\">\n        <TeamsProjectHierarchy\n          projectHierarchy={projectHierarchy}\n          setShowprojectHie={setShowprojectHie}\n          showprojectHie={showprojectHie}\n          searchProjecthierarchy={searchProjecthierarchy}\n        />\n        <div className=\"col-md-4\">\n          <div className=\"row\">\n            {searchAdminHierarchy == true ? (\n              <AdminHierarchy setNodeClicked={handleNodeClicked} />\n            ) : (\n              \"\"\n            )}\n          </div>\n        </div>\n      </div>\n      {/*  show account hierarchy tables */}\n\n      <div className=\"col-md-12\">\n        <div className=\"row\">\n          {showacchieTable ? (\n            <>\n              <div className=\"roleTableLegends\">\n                <span>\n                  <img src={CSLHead} title=\"CSL Head\" />\n                  CSL Head\n                </span>\n                <span>\n                  <img src={CSL} title=\"CSL\" />\n                  CSL\n                </span>\n                <span>\n                  <img src={ACSL} title=\"ACSL\" />\n                  ACSL\n                </span>\n                <span>\n                  <img src={DPHead} title=\"DP Head\" />\n                  DP Head\n                </span>\n                <span>\n                  <img src={DP} title=\"DP\" />\n                  DP\n                </span>\n                <span>\n                  <img src={TP} title=\"TP\" />\n                  TP\n                </span>\n                <span>\n                  <img src={PC} title=\"PC\" />\n                  PC\n                </span>\n                <span>\n                  <img src={SQA} title=\"SQA\" />\n                  SQA\n                </span>\n                <span>\n                  <img src={AE} title=\"AE\" />\n                  AE\n                </span>\n                <span>\n                  <img src={AW} title=\"Account Owner\" />\n                  AW\n                </span>\n              </div>\n\n              <div style={{ width: \"100%\", maxWidth: \"40%\" }}>\n                <AccountHierarTable\n                  data={data}\n                  setActiveProjectsByCustomer={setActiveProjectsByCustomer}\n                  setShowacchieDataTable={setShowacchieDataTable}\n                  activeProjectsByCustomer={activeProjectsByCustomer}\n                  expandedCols={[]}\n                  setShowacctHieTable={setShowacctHieTable}\n                  colExpandState={[]}\n                />\n              </div>\n            </>\n          ) : (\n            \"\"\n          )}\n          {showacchieDataTable == true ? (\n            <>\n              <div className=\"roleProject darkHeader\">\n                <DataTable\n                  value={activeProjectsByCustomer}\n                  editMode=\"row\"\n                  showGridlines\n                  stripedRows\n                  scrollHeight=\"425px\"\n                  responsiveLayout=\"scroll\"\n                >\n                  <Column\n                    header=\"Projects\"\n                    alignHeader={\"center\"}\n                    body={projectLinks}\n                  ></Column>\n                </DataTable>\n              </div>\n            </>\n          ) : (\n            \"\"\n          )}\n          {showacctHieTable == true && hierarchydata.length > 0 ? (\n            <div style={{ width: \"100%\", maxWidth: \"35%\" }}>\n              <div className=\"\" style={{ backgroundColor: \"#eeeeee38\" }}>\n                <div\n                  className=\"col-md-12\"\n                  style={{\n                    borderBottom: \"1px solid grey\",\n                    background: \"#f1eeee\",\n                    height: \"36px\",\n                  }}\n                >\n                  <label style={{ float: \"right\", paddingTop: \"7px\" }}>\n                    <select\n                      style={{ marginLeft: \"10px\" }}\n                      id=\"status\"\n                      onChange={(e) => {\n                        setState(e.target.value);\n                        getPrjRolesTreAccHie();\n                      }}\n                    >\n                      <option value=\"All\">All</option>\n                      <option value=\"Active\">Active</option>\n                    </select>\n                  </label>\n                  <div className=\"childTwo\">\n                    <h2\n                      style={{\n                        textAlign: \"center\",\n                        color: \"#297AB0\",\n                        fontSize: \"14px\",\n                        paddingTop: \"7px\",\n                      }}\n                    >\n                      Project Hierarchy\n                    </h2>\n                  </div>\n                </div>\n                {searchinghierarchy == true ? (\n                  <TeamsProjectHierarchyTree\n                    defaultExpandedRows={String(-1)}\n                    data={hierarchydata}\n                    hierarchyCount={hierarchyCount}\n                  />\n                ) : (\n                  \"\"\n                )}\n              </div>\n            </div>\n          ) : (\n            \"\"\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\nexport default Hierarchy;\n","import React from \"react\";\nimport { DialogContent, Popover } from \"@material-ui/core\";\nfunction UtilizationFYPopUp(props) {\n  const { iconName, anchorEl, setAnchorEl, handleClose, setIconName } = props;\n  const open = Boolean(anchorEl);\n  const id = open ? \"my-popover\" : undefined;\n\n  console.log(iconName.includes(\"ytd\"));\n\n  return (\n    <div className=\"\">\n      <Popover\n        disablePortal={true}\n        arrow={true}\n        open={Boolean(anchorEl)}\n        id={id}\n        // open={open}\n        anchorEl={anchorEl}\n        onClose={handleClose}\n        anchorOrigin={{\n          vertical: \"top\",\n          horizontal: \"left\",\n        }}\n        transformOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"left\",\n        }}\n      >\n        <div className=\"\">\n          <DialogContent>\n            <div>\n              {iconName.includes(\"ytd\") ? (\n                <div className=\"\">\n                  <p className=\"mb-2\">\n                    Actual Utilization of current financial year till today.\n                  </p>\n                </div>\n              ) : iconName.includes(\"qtd\") ? (\n                <div className=\"\">\n                  <p className=\"mb-2\">\n                    Actual Utilization of current quarter till today.\n                  </p>\n                </div>\n              ) : iconName.includes(\"nxt30_days\") ? (\n                <div className=\"\">\n                  <p className=\"mb-2\">\n                    Planned Utilization for tomorrow to +30 days\n                  </p>\n                </div>\n              ) : iconName.includes(\"nxt60_days\") ? (\n                <div className=\"\">\n                  <p className=\"mb-2\">\n                    Planned Utilization for tomorrow to +60 days\n                  </p>\n                </div>\n              ) : iconName.includes(\"average\") ? (\n                <div className=\"\">\n                  <p className=\"mb-2\">Total Utilization of QTD and +60 days</p>\n                </div>\n              ) : (\n                \"\"\n              )}\n            </div>\n          </DialogContent>\n        </div>\n      </Popover>\n    </div>\n  );\n}\nexport default UtilizationFYPopUp;\n","import React, { useState, useEffect } from \"react\";\nimport MaterialReactTable from \"material-react-table\";\nimport { Button, IconButton } from \"@mui/material\";\nimport fte_active from \"../../assets/images/empstatusIcon/fte_active.png\";\nimport fte_inactive from \"../../assets/images/empstatusIcon/fte_inactive.png\";\nimport fte_notice from \"../../assets/images/empstatusIcon/fte_notice.png\";\nimport subk_active from \"../../assets/images/empstatusIcon/subk_active.png\";\nimport subk_inactive from \"../../assets/images/empstatusIcon/subk_inactive.png\";\nimport subk_notice from \"../../assets/images/empstatusIcon/subk_notice.png\";\nimport { AiFillRightCircle, AiOutlineInfoCircle } from \"react-icons/ai\";\nimport { FaInfoCircle } from \"react-icons/fa\";\nimport UtilizationFYPopUp from \"./UtilizationFYPopUp\";\nimport { CListGroup } from \"@coreui/react\";\n// C:\\PPM_Rewrite\\PPMRewrite_Local\\PPMRewrite_React\\src\\views\\UtilisationMetrics\\UtilizationFyCollapsibleTable.js\nimport { AiFillLeftCircle } from \"react-icons/ai\";\nimport { BiChevronRight } from \"react-icons/bi\";\n\nexport default function UtilizationFyCollapsibleTable(props) {\n  const icons = {\n    fte0: (\n      <img\n        src={fte_inactive}\n        alt=\"(fte_inactive_icon)\"\n        style={{ height: \"12px\" }}\n        title=\"Ex-Employee\"\n      />\n    ),\n    fte1: (\n      <img\n        src={fte_active}\n        alt=\"(fte_active_icon)\"\n        style={{ height: \"12px\" }}\n        title=\"Active Employee\"\n      />\n    ),\n    fte2: (\n      <img\n        src={fte_notice}\n        alt=\"(fte_notice_icon)\"\n        style={{ height: \"12px\" }}\n        title=\"Employee in notice period\"\n      />\n    ),\n    subk0: (\n      <img\n        src={subk_inactive}\n        alt=\"(subk_inactive_icon)\"\n        style={{ height: \"12px\" }}\n        title=\"Ex-Contractor\"\n      />\n    ),\n    subk1: (\n      <img\n        src={subk_active}\n        alt=\"(subk_active_icon)\"\n        style={{ height: \"12px\" }}\n        title=\"Active Contractor\"\n      />\n    ),\n    subk2: (\n      <img\n        src={subk_notice}\n        alt=\"(subk_notice_icon)\"\n        style={{ height: \"12px\" }}\n        title=\"Contractor in notice period\"\n      />\n    ),\n  };\n\n  const { data, expandedCols, colExpandState } = props;\n  const [anchorEl, setAnchorEl] = useState(null);\n  //console.log(anchorEl);\n  const handleClose = () => {\n    setAnchorEl(false);\n  };\n  const [iconName, setIconName] = useState();\n\n  const [nodes, setNodes] = useState([]);\n  const [columns, setColumns] = useState(null);\n  const [hiddenColumns, setHiddenColumns] = useState({});\n  const [colExpFlag, setColumnExpFlag] = useState(false);\n  const [headers, setHeaders] = useState([]);\n\n  const [showPopup, setShowPopup] = useState(false);\n\n  useEffect(() => {}, [showPopup]);\n\n  useEffect(() => {\n    getData();\n  }, [data.tableData]);\n  var count = 0;\n  const getData = () => {\n    let expandClass = \"\";\n    if (colExpFlag == true && count > 0) {\n      expandClass = \"expanded\";\n    } else {\n      expandClass = \"\";\n    }\n    let tableData = data.tableData;\n    let columns = null;\n\n    if (data?.columns?.includes(\"'\")) {\n      columns = data?.columns?.replaceAll(\"'\", \"\");\n    } else {\n      columns = data?.columns;\n    }\n\n    let colArr = columns?.split(\",\");\n\n    let newHeaders = [];\n    let hiddenHeaders = [];\n\n    const obj = {};\n\n    for (let i = 0; i < colArr?.length; i++) {\n      let colVal = colArr[i].trim();\n\n      let firstData = tableData[0];\n      obj[colVal] = firstData[colVal];\n    }\n\n    let headerArray = Object.entries(obj);\n\n    let unWantedCols = [\n      \"id\",\n      \"department\",\n      \"resource\",\n      \"departmentId\",\n      \"empStatus\",\n      \"lvl\",\n      \"count\",\n      \"keyAttr\",\n    ];\n\n    let filteredHeaders = headerArray.filter(\n      (d) => !unWantedCols.includes(d[0])\n    );\n\n    setHeaders(filteredHeaders);\n\n    filteredHeaders.map(([key, value]) => {\n      if (expandedCols.includes(key)) {\n        hiddenHeaders.push({ [key]: false });\n      }\n    });\n\n    setHiddenColumns(Object.assign({}, ...hiddenHeaders));\n\n    filteredHeaders.map(([key, value], index) => {\n      newHeaders.push({\n        accessorKey: key,\n        header: value.includes(\"^&\") ? value.split(\"^&\")[0] : value,\n        enableColumnActions: false,\n        enableHiding: true,\n        // Header: ({ column }) => (\n        //   <>\n        //     {value.includes(\"^&\") ? value.split(\"^&\")[0] : value}{\" \"}\n        //     {key == colExpandState[2] ? (\n        //       <IconButton\n        //         className=\"expandIcon\"\n        //         onClick={() => {\n        //           setColumnExpFlag((prev) => !prev);\n        //         }}\n        //       >\n        //         <AiFillRightCircle\n        //         // size={\"em\"}\n        //         />\n        //       </IconButton>\n        //     )\n        //     :\n        //      key.includes(\"qrtr\") ? (\"\") : key.includes(\"emp_cadre\") ? (\"\") : key.includes(\"supervisor\") ? (\"\")\n        //      :\n        //      (<FaInfoCircle\n        //       // onClick={() => {\n        //       //   //console.log(\"onClick\")\n        //       // }}\n        //       onClick={() => setShowPopup((prev) => !prev)}\n        //        >\n        //       <FaInfoCircle />{\" \"} </FaInfoCircle>\n        //     )\n        //     }\n        //   </>\n        // ),\n        Header: ({ column }) => (\n          <>\n            {value.includes(\"^&\") ? value.split(\"^&\")[0] : value}{\" \"}\n            {key === colExpandState[2] ? (\n              <span className={`expandIcon ${expandClass}`}>\n                <IconButton\n                  onClick={() => {\n                    setColumnExpFlag((prev) => !prev);\n                  }}\n                >\n                  <BiChevronRight />\n                </IconButton>\n              </span>\n            ) : key.includes(\"qrtr\") ||\n              key.includes(\"emp_cadre\") ||\n              key.includes(\"supervisor\") ? (\n              \"\"\n            ) : (\n              <div\n                style={{\n                  display: \"inline-block\",\n                  position: \"relative\",\n                  cursor: \"pointer\",\n                }}\n              >\n                <FaInfoCircle\n                  className=\"tableInfoIcon\"\n                  onClick={(e) => {\n                    setAnchorEl(e.currentTarget);\n                    setIconName(key);\n                    setShowPopup(true);\n                    //console.log(\"Info button clicked\");\n                  }}\n                  // style={{ color: 'black' }}\n                />\n              </div>\n            )}\n          </>\n        ),\n\n        // Cell: ({ cell }) => {\n        //   const cellValue = cell.getValue() !== null ? cell.getValue() : \"\";\n        //   const nameWithoutSpecialChars = cellValue.replace(\n        //     /\\^&\\d+\\^&\\d+/g,\n        //     \"\"\n        //   );\n        //   return (\n        //     <div\n        //       className={cell.column.id === \"name\" ? \"\" : \"align right\"}\n        //       style={{\n        //         whiteSpace: \"nowrap\",\n        //         overflow: \"hidden\",\n        //         textOverflow: \"ellipsis\",\n        //       }}\n        //       title={cell.getValue()}\n        //     >\n        //       {cell.column.id === \"name\" &&\n        //       cell.row.original.parentId !== null ? (\n        //         <div className=\"hExpandedTxt\">\n        //           {icons[cell.row.original[\"empStatus\"]]}{\" \"}\n        //           <span>{cell.getValue()}</span>\n        //         </div>\n        //       ) : cell.column.id === \"emp_cadre\" ? (\n        //         cell.getValue()\n        //       ) : cell.column.id === \"supervisor\" ? (\n        //         cell.getValue()\n        //       ) : cell.row.original.lvl === 2 ? (\n        //         cell.getValue()\n        //       ) : (\n        //         <strong>{cell.getValue()}</strong>\n        //       )}\n        //       {cell.column.id === \"name\" ||\n        //       cell.column.id === \"emp_cadre\" ||\n        //       cell.column.id === \"supervisor\"\n        //         ? \"\"\n        //         : \"%\"}\n        //     </div>\n        //   );\n        // },\n        Cell: ({ cell }) => {\n          const cellValue = cell.getValue() !== null ? cell.getValue() : \"\";\n          const nameWithoutSpecialChars = cellValue.replace(\n            /\\^&\\d+\\^&\\d+/g,\n            \"\"\n          );\n          const isNullValue = cell.column.name === null;\n\n          return (\n            <div\n              className={cell.column.id === \"name\" ? \"\" : \"align right\"}\n              style={{\n                whiteSpace: \"nowrap\",\n                overflow: \"hidden\",\n                textOverflow: \"ellipsis\",\n              }}\n              title={isNullValue ? \"\" : nameWithoutSpecialChars}\n            >\n              {cell.column.id === \"name\" &&\n              cell.row.original.parentId !== null ? (\n                <div className=\"hExpandedTxt\">\n                  {icons[cell.row.original[\"empStatus\"]]}{\" \"}\n                  <span>{isNullValue ? \"\" : nameWithoutSpecialChars}</span>\n                </div>\n              ) : cell.column.id === \"emp_cadre\" ? (\n                isNullValue ? (\n                  \"\"\n                ) : (\n                  nameWithoutSpecialChars\n                )\n              ) : cell.column.id === \"supervisor\" ? (\n                isNullValue ? (\n                  \"\"\n                ) : (\n                  nameWithoutSpecialChars\n                )\n              ) : cell.row.original.lvl === 2 ? (\n                isNullValue ? (\n                  \"\"\n                ) : (\n                  nameWithoutSpecialChars\n                )\n              ) : isNullValue ? (\n                \"\"\n              ) : (\n                nameWithoutSpecialChars\n              )}\n              {cell.column.id === \"name\" ||\n              cell.column.id === \"emp_cadre\" ||\n              cell.column.id === \"supervisor\" ||\n              cell.row.original.id === 9999\n                ? \"\"\n                : \"%\"}\n            </div>\n          );\n        },\n      });\n    });\n\n    //console.log(\"in line 97-------\");\n    //console.log(newHeaders);\n\n    setColumns(newHeaders);\n\n    let values = [];\n    tableData?.map((d) => (d.id !== -1 ? values.push(d) : \"\"));\n\n    //console.log(\"in line 94--------\");\n    //console.log(tableData);\n    //console.log(values);\n\n    setNodes(jsonToTree(values, { children: \"subRows\" }));\n\n    //console.log(jsonToTree(values, { children: \"subRows\" }), \"nodes\");\n\n    //   setColumns(resp.data.tableData);\n    // });\n  };\n\n  // useEffect(() => {\n  //   colExpFlag ? setHiddenColumns({}) : colCollapse();\n  // }, [colExpFlag]);\n  useEffect(() => {\n    colExpFlag ? expandT() : expandF();\n    // getData();\n  }, [colExpFlag]);\n\n  const expandT = () => {\n    count++;\n    getData();\n    setHiddenColumns({});\n  };\n\n  const expandF = () => {\n    getData();\n  };\n  const colCollapse = () => {\n    let hiddenHeaders = [];\n    // refactor this\n    headers.map(([key, value]) => {\n      if (expandedCols.includes(key)) {\n        hiddenHeaders.push({ [key]: false });\n      }\n    });\n\n    setHiddenColumns(Object.assign({}, ...hiddenHeaders));\n  };\n\n  const jsonToTree = (flatArray, options) => {\n    //console.log(flatArray, \"flatArray in json to tree\");\n    options = {\n      id: \"id\",\n      parentId: \"parentId\",\n      children: \"subRows\",\n      ...options,\n    };\n    const dictionary = {}; // a hash table mapping to the specific array objects with their ids as key\n    const tree = [];\n    const children = options.children;\n    flatArray.forEach((node) => {\n      const nodeId = node[options.id];\n      const nodeParentId = node[options.parentId];\n      // set up current node data in dictionary\n      dictionary[nodeId] = {\n        [children]: [], // init a children property\n        ...node, // add other propertys\n        ...dictionary[nodeId], // children will be replaced if this node already has children property which was set below\n      };\n      dictionary[nodeParentId] = dictionary[nodeParentId] || { [children]: [] }; // if it's not exist in dictionary, init an object with children property\n      dictionary[nodeParentId][children].push(dictionary[nodeId]); // add reference to current node object in parent node object\n    });\n    Object.values(dictionary).forEach((obj) => {\n      if (typeof obj[options.id] === \"undefined\") {\n        tree.push(...obj[children]);\n      }\n    });\n    return tree;\n  };\n\n  return (\n    <div className=\"materialReactExpandableTable darkHeader\">\n      {columns?.length ? (\n        <MaterialReactTable\n          columns={columns}\n          data={nodes}\n          enableExpandAll={true} //hide expand all double arrow in column header\n          enableExpanding\n          enablePagination={false}\n          //enableRowVirtualization\n          enableBottomToolbar={false}\n          enableTopToolbar={false}\n          enableColumnActions={false}\n          enableSorting={false}\n          filterFromLeafRows //apply filtering to all rows instead of just parent rows\n          initialState={{\n            expanded: false,\n            density: \"compact\",\n            columnVisibility: { ...hiddenColumns },\n          }} //expand all rows by default\n          state={{ columnVisibility: { ...hiddenColumns } }}\n          defaultColumn={{ minSize: 40, maxSize: 250, size: 40 }} //\n          enableStickyHeader\n          muiTableContainerProps={{\n            sx: { maxHeight: \"50vh\", width: \"auto\", maxWidth: \"fit-content\" },\n          }}\n          muiTableBodyProps={{\n            sx: {\n              \"&\": {},\n              \"& td\": {\n                borderRight: \"1px solid #ccc\",\n                height: \"22px\",\n                fontSize: \"13px\",\n                paddingTop: \"0px\",\n                paddingBottom: \"0px\",\n              },\n            },\n          }}\n          muiTableHeadProps={{\n            sx: {\n              \"& th\": {\n                borderTop: \"1px solid #ccc\",\n                borderRight: \"1px solid #ccc\",\n                background: \"#f4f4f4 \",\n                fontSize: \"13px\",\n                fontWeight: \"bold\",\n              },\n            },\n          }}\n        />\n      ) : null}\n      {anchorEl && (\n        <UtilizationFYPopUp\n          showPopup={showPopup}\n          setShowPopup={setShowPopup}\n          iconName={iconName}\n          setIconName={setIconName}\n          anchorEl={anchorEl}\n          setAnchorEl={setAnchorEl}\n          handleClose={handleClose}\n        />\n      )}\n    </div>\n  );\n}\n","import React, { useState, useEffect, useRef } from \"react\";\nimport { CCollapse } from \"@coreui/react\";\nimport {\n  FaChevronCircleDown,\n  FaChevronCircleUp,\n  FaSearch,\n} from \"react-icons/fa\";\nimport Loader from \"../Loader/Loader\";\nimport axios from \"axios\";\nimport { MultiSelect } from \"react-multi-select-component\";\nimport { environment } from \"../../environments/environment\";\nimport UtilizationFyCollapsibleTable from \"./UtilizationFyCollapsibleTable\";\nimport { RiFileExcel2Line } from \"react-icons/ri\";\nimport GlobalValidation from \"../ValidationComponent/GlobalValidation\";\nimport * as XLSX from \"xlsx\";\nimport { AiFillWarning } from \"react-icons/ai\";\nimport { BsInfoCircle } from \"react-icons/bs\";\nimport { FaCaretDown } from \"react-icons/fa\";\nimport { useLocation } from \"react-router-dom\";\nimport GlobalHelp from \"../PrimeReactTableComponent/GlobalHelp\";\nimport SavedSearchGlobal from \"../PrimeReactTableComponent/SavedSearchGlobal\";\nimport { BiCheck } from \"react-icons/bi\";\nimport ScreenBreadcrumbs from \"../Common/ScreenBreadcrumbs\";\nimport ExcelJS from \"exceljs\";\nfunction UtilisationFY() {\n  // const loggedUserId=512\n  const loggedUserId = localStorage.getItem(\"resId\");\n  const baseUrl = environment.baseUrl;\n  const [visible, setVisible] = useState(false);\n  const [cheveronIcon, setCheveronIcon] = useState(FaChevronCircleUp);\n  const [loader, setLoader] = useState(false);\n  const [searching, setSearching] = useState(false);\n  const [selectedBusiness, setSelectedBusiness] = useState([]);\n  const [business, setBusiness] = useState([]);\n  const [country, setCountry] = useState([]);\n  const [selectedCountry, setSelectedCountry] = useState([]);\n  const [allocType, setAllocType] = useState([]);\n  const [selectedAllocType, setSelectedAllocType] = useState([]);\n  const [validationmessage, setValidationMessage] = useState(false);\n\n  const abortController = useRef(null);\n\n  const [tableData, setTableData] = useState([]);\n  const [details, setDetails] = useState([]);\n  const [columns, setColumns] = useState([]);\n\n  const ref = useRef([]);\n  const initialValue = {\n    BuIds: \"170,211,123,82,168,207,212,18,213,49,149,208,243\",\n    CountryIds: \"6,5,3,8,7,1,2\",\n    resType: \"fte\",\n    lkup_name: \"-1\",\n  };\n\n  const pageurl = \"http://10.11.12.149:3000/#/operational/staffUtilization\";\n  const page_Name = \"Staff Utilization\";\n  const location = useLocation();\n  const searchParams = new URLSearchParams(location.search);\n  const id = searchParams.get(\"id\");\n  const [editmsg, setEditAddmsg] = useState(false);\n  const [filterData, setFilterData] = useState([]);\n\n  const [routes, setRoutes] = useState([]);\n  let textContent = \"Utilisation Metrics\";\n  let currentScreenName = [\"Utilisation - FY\"];\n\n  useEffect(() => {\n    getMenus();\n  }, []);\n\n  const getMenus = () => {\n    // setMenusData\n\n    axios({\n      method: \"GET\",\n      url: baseUrl + `/CommonMS/master/getMenus?loggedUserId=${loggedUserId}`,\n    }).then((resp) => {\n      let data = resp.data;\n      console.log(data);\n      const urlPathValue = resp.data[3].subMenus[1].url_path;\n      const modifiedUrlPath = urlPathValue.replace(/::/g, \"/\");\n      getUrlPath(modifiedUrlPath);\n\n      data.forEach((item) => {\n        if (item.display_name === textContent) {\n          setRoutes([item]);\n        }\n      });\n    });\n  };\n  const getUrlPath = (modifiedUrlPath) => {\n    console.log(modifiedUrlPath, \"inlne294-------------------------\");\n    axios({\n      method: \"get\",\n      url:\n        baseUrl +\n        `/CommonMS/security/authorize?url=${modifiedUrlPath}&userId=${loggedUserId}`,\n    })\n      .then((res) => {\n        let manger = res.data;\n        console.log(manger);\n      })\n      .catch((error) => {});\n  };\n  const FilterData = () => {\n    axios({\n      method: \"get\",\n      url:\n        baseUrl +\n        `/dashboardsms/savedsearch/FiltersData?saved_search_id=${\n          id === null ? 0 : id\n        }`,\n    }).then(function (res) {\n      const getData = res.data;\n      setFilterData(getData);\n    });\n  };\n\n  useEffect(() => {\n    FilterData();\n  }, []);\n  const [formData, setFormData] = useState({\n    // BuIds: \"170,211,123,82,168,207,212,18,213,49,149,208,243\",\n    // CountryIds: \"6,5,3,8,7,1,2\",\n    // resType: \"fte\",\n    // lkup_name: \"-1\",\n  });\n\n  useEffect(() => {\n    setFormData(() => {\n      if (id != null) {\n        return {\n          BuIds: filterData.buIds || filterData.BuIds,\n          CountryIds: filterData.countryIds || filterData.CountryIds,\n          resType: filterData.type || filterData.resType,\n          lkup_name: filterData.allocType || filterData.lkup_name,\n        };\n      } else {\n        return {\n          BuIds: \"170,211,123,82,168,207,212,18,213,49,149,208,243\",\n          CountryIds: \"6,5,3,8,7,1,2\",\n          resType: \"fte\",\n          lkup_name: \"-1\",\n        };\n      }\n    });\n  }, [filterData]);\n  useEffect(() => {\n    if (id != null) {\n      const updatebuids = business.filter((values) =>\n        filterData.BuIds?.includes(values.value)\n      );\n\n      const updateCountry = country.filter((values) =>\n        filterData.CountryIds?.includes(values.value)\n      );\n\n      const updateallocType = allocType.filter((values) =>\n        formData.lkup_name?.includes(values.value)\n      );\n      if (formData.lkup_name == \"-1\") {\n        setSelectedAllocType(allocType);\n      } else {\n        setSelectedAllocType(updateallocType);\n      }\n      setSelectedCountry(updateCountry);\n      setSelectedBusiness(updatebuids);\n    }\n  }, [\n    id,\n    business,\n    allocType,\n    country,\n    filterData?.BuIds,\n    filterData.CountryIds,\n  ]);\n\n  useEffect(() => {\n    if (id != null) {\n      setTimeout(() => {\n        handleSearch();\n      }, 3000);\n    }\n  }, [formData]);\n\n  const handleSearch = () => {\n    let valid = GlobalValidation(ref);\n    if (valid) {\n      {\n        setValidationMessage(true);\n      }\n      return;\n    }\n    if (valid) {\n      return;\n    }\n    // !valid && setVisible(!visible);\n    // visible\n    //   ? setCheveronIcon(FaChevronCircleUp)\n    //   : setCheveronIcon(FaChevronCircleDown);\n    getTableData();\n    setLoader(true);\n    abortController.current = new AbortController();\n    setValidationMessage(false);\n  };\n\n  const getBusinessUnit = () => {\n    axios\n      .get(baseUrl + `/CostMS/cost/getDepartments`)\n      .then((Response) => {\n        let countries = [];\n        let data = Response.data;\n        data.push({ value: 999, label: \"Non-Revenue Units\" });\n        data.length > 0 &&\n          data.forEach((e) => {\n            let countryObj = {\n              label: e.label,\n              value: e.value,\n            };\n            countries.push(countryObj);\n          });\n        setBusiness(countries);\n        let defaultSelected = JSON.parse(JSON.stringify(countries)).filter(\n          (d) => d.label.includes(\"Non-Revenue Units\") == false\n        );\n        if (id == null) {\n          setSelectedBusiness(defaultSelected);\n        }\n      })\n      .catch((error) => console.log(error));\n  };\n  const getCountries = () => {\n    axios\n      .get(baseUrl + `/CostMS/cost/getCountries`)\n      .then((Response) => {\n        let countries = [];\n        let data = Response.data;\n        // data.push({ id: 0, country_name: \"<<Others>>\" });\n        data.length > 0 &&\n          data.forEach((e) => {\n            let countryObj = {\n              label: e.country_name,\n              value: e.id,\n            };\n            {\n              e.country_name == \"NM\" ? \"\" : countries.push(countryObj);\n            }\n          });\n        setCountry(countries);\n        if (id == null) {\n          setSelectedCountry(countries);\n        }\n      })\n      .catch((error) => console.log(error));\n  };\n\n  const getAllocTypes = () => {\n    axios\n      .get(baseUrl + `/UtilityMS/getAllocType`)\n      .then((Response) => {\n        let countries = [];\n        let data = Response.data;\n        // data.push({ id: 0, lkup_name: \"<<Others>>\" });\n        data.length > 0 &&\n          data.forEach((e) => {\n            let countryObj = {\n              label: e.lkup_name,\n              value: e.id,\n            };\n            countries.push(countryObj);\n          });\n        setAllocType(countries);\n        if (id == null) {\n          setSelectedAllocType(countries);\n        }\n      })\n      .catch((error) => console.log(error));\n  };\n\n  const getTableData = () => {\n    setLoader(true);\n    abortController.current = new AbortController();\n    axios({\n      method: \"post\",\n      url:\n        baseUrl +\n        `/UtilityMS/getUtilizationFyc?buIds=${formData.BuIds}&countryIds=${formData.CountryIds}&type=${formData.resType}&allocType=${formData.lkup_name}&isExport=0&UserId=${loggedUserId}`,\n      signal: abortController.current.signal,\n    })\n      .then((res) => {\n        let detail = res.data;\n        setDetails(detail);\n\n        axios({\n          method: \"get\",\n          url:\n            baseUrl + `/UtilityMS/getColumnsData?reportRunId=${loggedUserId}`,\n        }).then((res1) => {\n          let header = res1.data.val;\n          setColumns(header);\n\n          const obj = {};\n          obj[\"columns\"] = header;\n          obj[\"tableData\"] = detail;\n\n          setTableData(obj);\n          setLoader(false);\n          setSearching(true);\n        });\n      })\n      .then((error) => {\n        console.log(\"success\", error);\n      });\n    setLoader(false);\n  };\n\n  useEffect(() => {\n    getBusinessUnit();\n    getCountries();\n    getAllocTypes();\n  }, []);\n\n  useEffect(() => {\n    if (id === null) {\n      setTimeout(() => {\n        handleSearch();\n      }, 2000);\n    }\n  }, [business, country]);\n  const handleAbort = () => {\n    abortController.current && abortController.current.abort();\n    setLoader(false);\n  };\n\n  // ================\n  const handleOnExport = () => {\n    const excludeProperties = [\n      \"lvl\",\n      \"departmentId\",\n      \"count\",\n      \"keyAttr\",\n      \"parentId\",\n      \"empStatus\",\n      \"id\",\n    ];\n\n    const headerMapping = {\n      department: \"Department\",\n      resource: \"Resource\",\n      emp_cadre: \"Cadre\",\n      supervisor: \"Supervisor\",\n      ytd: \"YTD\",\n      qtd: \"QTD (24-Q2)\",\n      nxt30_days: \"+30 days\",\n      nxt60_days: \"+60 days\",\n      average: \"Average\",\n    };\n\n    // Add a mapping for the specific header \"2023_04_01_qrtr\" to \"2024-Q1\"\n    const dateHeaderMapping = {\n      \"2023_04_01_qrtr\": \"2024-Q1\",\n      \"2024_01_01_qrtr\": \"2024-Q4\",\n      \"2023_10_01_qrtr\": \"2024-Q3\",\n      // Add more mappings as needed for other date headers\n    };\n\n    const dateBasedHeaders = Array.from(\n      new Set(\n        details\n          .slice(2)\n          .flatMap((item) => Object.keys(item))\n          .filter((key) => key.match(/^\\d{4}_\\d{2}_\\d{2}_/))\n      )\n    );\n\n    const filteredDateBasedHeaders = dateBasedHeaders.map((header) =>\n      header.replace(\"^&1^&1^&\", \"\").replace(\"^&1^&1^&\", \"\")\n    );\n\n    const originalHeaders = Object.keys(headerMapping);\n\n    // Replace the date header with the mapped value if it exists\n    const headerRow1 = [\n      ...originalHeaders.map((header) => headerMapping[header]),\n      ...filteredDateBasedHeaders.map(\n        (header) => dateHeaderMapping[header] || header\n      ),\n    ];\n\n    const filteredData = details.slice(2).map((item) => {\n      const filteredItem = Object.fromEntries(\n        Object.entries(item).filter(([key]) => !excludeProperties.includes(key))\n      );\n      return filteredItem;\n    });\n\n    const dataRows = filteredData\n      .slice(1)\n      .filter((item) => item.resource !== \"\" && item.supervisor !== \"\")\n      .map((item) => [\n        ...originalHeaders.map((key) => (item[key] ? item[key] : \"\")),\n        ...filteredDateBasedHeaders.map((header) =>\n          item[header] ? item[header] : \"\"\n        ),\n      ]);\n\n    const workbook = new ExcelJS.Workbook();\n    const worksheet = workbook.addWorksheet(\"StaffUtilization\");\n    const headerRow = worksheet.addRow(headerRow1);\n    headerRow.font = { bold: true };\n\n    // Add the actual data rows\n    for (let i = 0; i < dataRows.length; i++) {\n      const row = worksheet.addRow(dataRows[i]);\n    }\n    const boldRow = [1];\n    boldRow.forEach((index) => {\n      const row = worksheet.getRow(index);\n      row.font = { bold: true };\n    });\n    workbook.xlsx.writeBuffer().then((buffer) => {\n      saveAs(new Blob([buffer]), \"StaffUtilization.xlsx\");\n    });\n  };\n\n  //===================\n\n  const ArrowRenderer = ({ expanded }) => (\n    <>\n      {expanded ? (\n        <FaCaretDown className=\"chevronIcon\" />\n      ) : (\n        <FaCaretDown className=\"chevronIcon\" />\n      )}\n    </>\n  );\n  const HelpPDFName = \"SegmentationFinancials.pdf\";\n  const Headername = \"Segmentation Help\";\n\n  const generateDropdownLabel = (selectedOptions, allOptions) => {\n    const selectedValues = selectedOptions.map((option) => option.value);\n\n    const allValues = allOptions.map((item) => item.value);\n\n    if (\n      selectedValues.length !== 0 &&\n      selectedValues.length === allValues.length\n    ) {\n      return \"<< ALL >>\";\n    } else {\n      return selectedOptions.map((option) => option.label).join(\", \");\n    }\n  };\n  return (\n    <div>\n      {validationmessage ? (\n        <div className=\"statusMsg error\">\n          {\" \"}\n          <AiFillWarning /> Please select valid values for highlighted fields\n        </div>\n      ) : (\n        \"\"\n      )}\n      {editmsg ? (\n        <div className=\"statusMsg success\">\n          <span className=\"errMsg\">\n            <BiCheck size=\"1.4em\" /> &nbsp; Search created successfully.\n          </span>\n        </div>\n      ) : (\n        \"\"\n      )}\n\n      <div className=\"col-md-12\">\n        <div className=\"pageTitle\">\n          <div className=\"childOne\"></div>\n          <div className=\"childTwo\">\n            <h2>Utilisation - FY</h2>\n          </div>\n          <div className=\"childThree\"></div>\n        </div>\n      </div>\n      <ScreenBreadcrumbs\n        routes={routes}\n        currentScreenName={currentScreenName}\n      />\n\n      {loader ? <Loader handleAbort={handleAbort} /> : \"\"}\n\n      <div className=\"group mb-3 customCard\">\n        <div className=\"col-md-12 collapseHeader\">\n          <h2>Search Filters</h2>\n          <div className=\"helpBtn\">\n            <GlobalHelp pdfname={HelpPDFName} name={Headername} />\n          </div>\n          <div className=\"saveBtn\">\n            <SavedSearchGlobal\n              setEditAddmsg={setEditAddmsg}\n              pageurl={pageurl}\n              page_Name={page_Name}\n              payload={formData}\n            />\n          </div>\n          &nbsp;\n          <div\n            onClick={() => {\n              setVisible(!visible);\n              visible\n                ? setCheveronIcon(FaChevronCircleUp)\n                : setCheveronIcon(FaChevronCircleDown);\n            }}\n          >\n            <span>{cheveronIcon}</span>\n          </div>\n        </div>\n        <CCollapse visible={!visible}>\n          <div className=\"group-content row\">\n            <div className=\" col-md-3 \">\n              <div className=\"form-group row\">\n                <label className=\"col-5\" htmlFor=\"searchType\">\n                  BU&nbsp;\n                  <span className=\"col-1 p-0 error-text\">*</span>\n                </label>\n                <span className=\"col-1 \">:</span>\n                <div\n                  className=\"col-6 multiselect\"\n                  ref={(ele) => {\n                    ref.current[0] = ele;\n                  }}\n                >\n                  <MultiSelect\n                    ArrowRenderer={ArrowRenderer}\n                    id=\"BuIds\"\n                    value={selectedBusiness}\n                    options={business}\n                    hasSelectAll={true}\n                    isLoading={false}\n                    shouldToggleOnHover={false}\n                    disableSearch={false}\n                    valueRenderer={generateDropdownLabel}\n                    overrideStrings={{\n                      selectAllFiltered: \"Select All\",\n                      selectSomeItems: \"<<Please Select>>\",\n                    }}\n                    disabled={false}\n                    onChange={(s) => {\n                      setSelectedBusiness(s);\n                      let filteredValues = [];\n                      s.forEach((d) => {\n                        filteredValues.push(d.value);\n                      });\n                      setFormData((prevVal) => ({\n                        ...prevVal,\n                        [\"BuIds\"]: filteredValues.toString(),\n                      }));\n                    }}\n                  />\n                </div>\n              </div>\n            </div>\n            <div className=\" col-md-3 \">\n              <div className=\"form-group row\">\n                <label className=\"col-5 \" htmlFor=\"resType\">\n                  Country&nbsp;\n                  <span className=\"col-1 p-0 error-text\">*</span>\n                </label>\n                <span className=\"col-1 \">:</span>\n                <div\n                  className=\"col-6 multiselect\"\n                  ref={(ele) => {\n                    ref.current[1] = ele;\n                  }}\n                >\n                  <MultiSelect\n                    ArrowRenderer={ArrowRenderer}\n                    id=\"CountryIds\"\n                    options={country}\n                    hasSelectAll={true}\n                    value={selectedCountry}\n                    isLoading={false}\n                    shouldToggleOnHover={false}\n                    disableSearch={false}\n                    disabled={false}\n                    valueRenderer={generateDropdownLabel}\n                    overrideStrings={{\n                      selectAllFiltered: \"Select All\",\n                      selectSomeItems: \"<<Please Select>>\",\n                    }}\n                    onChange={(e) => {\n                      setSelectedCountry(e);\n                      let filteredCountry = [];\n                      e.forEach((d) => {\n                        filteredCountry.push(d.value);\n                      });\n                      setFormData((prevVal) => ({\n                        ...prevVal,\n                        [\"CountryIds\"]: filteredCountry.toString(),\n                      }));\n                    }}\n                  />\n                </div>\n              </div>\n            </div>\n            <div className=\" col-md-3 \">\n              <div className=\"form-group row\">\n                <label className=\"col-5\" htmlFor=\"resLocation\">\n                  Res. Type\n                </label>\n                <span className=\"col-1\">:</span>\n                <div className=\"col-6\">\n                  <select\n                    className=\"text\"\n                    id=\"resType\"\n                    name=\"resType\"\n                    defaultValue=\"fte\"\n                    onChange={(e) => {\n                      const { value, id } = e.target;\n                      setFormData({ ...formData, [id]: value });\n                    }}\n                    value={formData.resType}\n                  >\n                    <option value=\"-1\"> &lt;&lt;ALL&gt;&gt;</option>\n                    <option value=\"fte\">Employee</option>\n                    <option value=\"subk\">Contractors</option>\n                  </select>\n                </div>\n              </div>\n            </div>\n            <div className=\" col-md-3 \">\n              <div className=\"form-group row\">\n                <label className=\"col-5\" htmlFor=\"duration\">\n                  Alloc. Type{\" \"}\n                </label>\n                <span className=\"col-1 \">:</span>\n                <div className=\"col-6\">\n                  <MultiSelect\n                    ArrowRenderer={ArrowRenderer}\n                    id=\"lkup_name\"\n                    options={allocType}\n                    hasSelectAll={true}\n                    value={selectedAllocType}\n                    isLoading={false}\n                    shouldToggleOnHover={false}\n                    disableSearch={false}\n                    disabled={false}\n                    valueRenderer={generateDropdownLabel}\n                    overrideStrings={{\n                      selectAllFiltered: \"Select All\",\n                      selectSomeItems: \"<<Please Select>>\",\n                    }}\n                    onChange={(e) => {\n                      setSelectedAllocType(e);\n                      let filteredCountry = [];\n                      e.forEach((d) => {\n                        filteredCountry.push(d.value);\n                      });\n                      setFormData((prevVal) => ({\n                        ...prevVal,\n                        [\"lkup_name\"]: filteredCountry.toString(),\n                      }));\n                    }}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n\n          {/*                                          Search                                   */}\n          <div className=\" form-group col-md-12 col-sm-12 col-xs-12 btn-container center my-3 \">\n            <button\n              className=\"btn btn-primary\"\n              type=\"submit\"\n              onClick={() => {\n                handleSearch();\n                setSearching(false);\n              }}\n            >\n              <FaSearch /> Search\n            </button>\n          </div>\n        </CCollapse>\n      </div>\n      {searching == true ? (\n        <>\n          <div className=\"col-md-12 clearfix\" style={{ height: \"5px\" }}>\n            <div>\n              <span>\n                <span style={{ color: \"#9d7c42\", fontStyle: \"italic\" }}>\n                  <BsInfoCircle style={{ marginTop: \"-5px\" }} /> Values are of\n                  Actual Utilization for past quarters and Planned Utilization\n                  for future quarters\n                </span>\n              </span>\n            </div>\n          </div>\n\n          <div align=\"right\">\n            <RiFileExcel2Line\n              size=\"1.5em\"\n              title=\"Export to Excel\"\n              style={{ color: \"green\", float: \"right\" }}\n              cursor=\"pointer\"\n              onClick={handleOnExport}\n            />\n            <br />\n          </div>\n          <div>\n            <UtilizationFyCollapsibleTable\n              data={tableData}\n              expandedCols={[\"emp_cadre\", \"supervisor\"]}\n              colExpandState={[\"0\", \"0\", \"name\"]}\n            />\n          </div>\n        </>\n      ) : (\n        \"\"\n      )}\n    </div>\n  );\n}\nexport default UtilisationFY;\n","import React, { useEffect, useState } from \"react\";\nimport { DataTable } from \"primereact/datatable\";\nimport { Column } from \"primereact/column\";\nimport \"primeicons/primeicons.css\";\nimport \"primereact/resources/themes/lara-light-indigo/theme.css\";\nimport \"primereact/resources/primereact.css\";\nimport \"primeflex/primeflex.css\";\nimport \"../PrimeReactTableComponent/PrimeReactTable.scss\";\nimport { ColumnGroup } from \"primereact/columngroup\";\nimport { Row } from \"primereact/row\";\nimport Highcharts from \"highcharts\";\nimport HighchartsReact from \"highcharts-react-official\";\nimport funnel from \"highcharts/modules/funnel.js\";\nimport { node } from \"prop-types\";\nimport \"./PyramidIndexTable.scss\";\nfunnel(Highcharts);\n\nfunction PyramidIndexTable(props) {\n  const { data, Header } = props;\n  const [mainData, setMainData] = useState([]);\n  const [headerData, setHeaderData] = useState(null);\n  const [headerDat, setHeaderDat] = useState([]);\n  const [bodyData, setBodyData] = useState([]);\n  const [filter, setFilter] = useState([]);\n\n  const [chartOptions, setChartOptions] = useState([]);\n\n  console.log(\"Header Data\", Header);\n  console.log(\"Table Data\", data);\n\n  useEffect(() => {\n    setMainData(JSON.parse(JSON.stringify(data)));\n  }, [data]);\n\n  useEffect(() => {\n    if (mainData.length > 0) {\n      const obj = {};\n\n      for (let i = 0; i < Header.length; i++) {\n        let mainDataKeys = JSON.parse(JSON.stringify(Object.keys(mainData[0])));\n\n        let arr = [\"cadre\", \"ideal\"];\n\n        if (arr.includes(Header[i][\"id\"]) == false) {\n          setFilter(mainDataKeys);\n          let filteredKeys = mainDataKeys.filter((d) =>\n            d.includes(Header[i][\"id\"])\n          );\n\n          for (let j = 0; j < filteredKeys.length; j++) {\n            obj[filteredKeys[j]] = j == 0 ? Header[i][\"value\"] : \"\";\n          }\n        } else {\n          obj[Header[i][\"id\"]] = Header[i][\"value\"];\n        }\n      }\n\n      let headerD = [];\n      headerD.push(obj);\n\n      const nObj = {};\n\n      let beforeUnderScore = [];\n\n      Object.keys(obj).forEach((d) => {\n        let dd = d.includes(\"_\") && d.split(\"_\");\n        dd[0] != undefined && beforeUnderScore.push(dd[0]);\n\n        if (d.includes(\"pi\")) {\n          nObj[d] = \"pi\";\n        } else if (d.includes(\"count\")) {\n          nObj[d] = \"count\";\n        } else {\n          nObj[d] = obj[d];\n        }\n      });\n\n      let fBefore = [...new Set(beforeUnderScore)];\n\n      let arr = Array.from(fBefore);\n\n      const objct = {};\n\n      objct[\"cadre\"] = nObj[\"cadre\"];\n      objct[\"ideal\"] = nObj[\"ideal\"];\n\n      for (let i = 0; i < arr.length; i++) {\n        objct[arr[i] + \"_pi\"] = nObj[arr[i] + \"_pi\"];\n        objct[arr[i] + \"_count\"] = nObj[arr[i] + \"_count\"];\n      }\n\n      setHeaderDat(objct);\n\n      {\n        /*----------------- Extracting Needed Header Data From the *Header* prop -----------------*/\n      }\n\n      setHeaderData(() => {\n        return (\n          <ColumnGroup>\n            <Row>\n              {Object.keys(objct).map((ele) => {\n                if (obj[ele] !== \"\") {\n                  const headerText = obj[ele];\n                  const isCadreOrIdeal = [\"Cadre\", \"Ideal\"].includes(obj[ele]);\n                  const colSpan = isCadreOrIdeal ? \"\" : 2;\n                  const rowSpan = isCadreOrIdeal ? 2 : 1;\n\n                  {\n                    console.log(obj[ele]);\n                  }\n                  return (\n                    <Column\n                      header={() => <div title={headerText}>{headerText}</div>}\n                      colSpan={colSpan}\n                      rowSpan={rowSpan}\n                    ></Column>\n                  );\n                }\n              })}\n            </Row>\n\n            <Row>\n              {Object.keys(objct).map(\n                (ele) =>\n                  [\"Cadre\", \"Ideal\"].includes(objct[ele]) == false && (\n                    <Column\n                      header={() => (\n                        <div title={ele.includes(\"pi\") ? \"PI\" : \"Count\"}>\n                          {ele.includes(\"pi\") ? \"PI\" : \"Count\"}\n                        </div>\n                      )}\n                      style={{\n                        minWidth: \"87px\",\n                        maxWidth: \"87px\",\n                        textAlign: \"center\",\n                      }}\n                    />\n                  )\n              )}\n            </Row>\n          </ColumnGroup>\n        );\n      });\n\n      {\n        /*-------------------- Adding Styles in Cells of Data Table --------------------*/\n      }\n\n      const updatedBodyData = mainData.map((data) => {\n        const updatedData = {};\n        for (const key in data) {\n          if (key.includes(\"_pi\")) {\n            updatedData[key] = (\n              <div\n                style={{ textAlign: \"right\", color: \"black\" }}\n                className=\"piPI\"\n              >\n                <strong title={data[key].toFixed(1) + \"%\"}>\n                  {data[key].toFixed(1)} %\n                </strong>\n              </div>\n            );\n          } else if (key.includes(\"ideal\")) {\n            updatedData[key] = (\n              <div\n                style={{ textAlign: \"right\", color: \"black\" }}\n                title={data[key] + \"%\"}\n                className=\"piIdeal\"\n              >\n                {data[key]} %\n              </div>\n            );\n          } else if (key.includes(\"_count\")) {\n            updatedData[key] = (\n              <div\n                style={{ textAlign: \"right\", color: \"black\" }}\n                className=\"piCount\"\n                title={data[key] !== 0 ? data[key] : null}\n              >\n                {data[key]}\n              </div>\n            );\n          } else if (\n            key === \"cadre\" &&\n            (data[key] === \"Total\" || data[key] === \"Pyramid Alignment Index\")\n          ) {\n            let displayData = data[key];\n            if (data[key] === \"Pyramid Alignment Index\") {\n              displayData = \"Pyramid Alignment\\nIndex\";\n            }\n            updatedData[key] = (\n              <div style={{ whiteSpace: \"pre\", textAlign: \"right\" }}>\n                <strong title={data[key]}>{displayData}</strong>\n              </div>\n            );\n          } else if (key === \"cadre\" && data[key] === \"Total\") {\n            <div style={{ textAlign: \"right\" }}>\n              <strong title={data[key]}>{displayData}</strong>\n            </div>;\n          } else if (\n            key == \"cadre\" &&\n            (data[key] == \"T1\" ||\n              data[key] == \"E1\" ||\n              data[key] == \"E2\" ||\n              data[key] == \"E3\")\n          ) {\n            updatedData[key] = (\n              <div title={data[key]} style={{ color: \"black\" }}>\n                {data[key]}\n              </div>\n            );\n          } else if (key == \"cadre\" && data[key] == \"L\") {\n            updatedData[key] = (\n              <div title={\"L1, L2, L3\"} style={{ color: \"black\" }}>\n                {data[key]}\n              </div>\n            );\n          } else if (key == \"cadre\" && data[key] == \"M\") {\n            updatedData[key] = (\n              <div title={\"M1, M2, M3, A1, A2, A3\"} style={{ color: \"black\" }}>\n                {data[key]}\n              </div>\n            );\n          } else if (key == \"cadre\" && data[key] == \"G\") {\n            updatedData[key] = (\n              <div\n                title={\"G1, G2, G3, EA1, EA2, EA3\"}\n                style={{ color: \"black\" }}\n              >\n                {data[key]}\n              </div>\n            );\n          } else {\n            updatedData[key] = data[key];\n          }\n        }\n        return updatedData;\n      });\n      setBodyData(updatedBodyData);\n\n      {\n        /*-------------- Looping the Pyramids data to get the Pyramid Graphs--------------*/\n      }\n      const chartOption = [];\n\n      for (let i = 0; i < Header.length; i++) {\n        const options = getChartOptions(Header[i].value, Header[i].id, data);\n        chartOption.push(options);\n      }\n      setChartOptions(chartOption);\n    }\n  }, [mainData]);\n\n  {\n    /*-------------- Adjusting colSpan,rowSpan and Headers of DataTable --------------*/\n  }\n\n  const dynamicColumns = Object.keys(headerDat).map((col, i) => {\n    let columnHeader;\n    if (col === \"cadre\") {\n      columnHeader = <Column rowSpan={2} key={col} field={col} />;\n    } else if (col === \"ideal\") {\n      columnHeader = <Column rowSpan={2} key={col} field={col} />;\n    } else if (col.includes(\"_pi\") || col.includes(\"_count\")) {\n      columnHeader = <Column key={col} field={col} />;\n    }\n    return columnHeader;\n  });\n\n  ////////////////////////////////////////////////////////////////////////////////////////////////////\n\n  return (\n    <div className=\"primeReactTable darkHeader my-3\">\n      {headerData != null && bodyData.length > 0 ? (\n        <DataTable\n          headerColumnGroup={headerData}\n          value={bodyData}\n          showGridlines\n          rows={15}\n          rowHover={true}\n          dataKey=\"id\"\n          responsiveLayout=\"scroll\"\n          emptyMessage=\"No Records found.\"\n          className=\"primeReactTable pyramidTable\"\n        >\n          {dynamicColumns}\n        </DataTable>\n      ) : (\n        \"\"\n      )}\n      <div className=\"row\">\n        <div className=\"legendContainer mt-3\">\n          <strong>Legends :</strong>\n          <div className=\"legend skyblue\">\n            <div className=\"legendCircle\"></div>\n            <div className=\"legendTxt\">\n              <strong>T1</strong>- Trainees,\n            </div>\n          </div>\n          <div className=\"legend darkgray\">\n            <div className=\"legendCircle\"></div>\n            <div className=\"legendTxt\">\n              <strong>E1</strong>- Associate Engineers,\n            </div>\n          </div>\n          <div className=\"legend lightgreen\">\n            <div className=\"legendCircle\"></div>\n            <div className=\"legendTxt\">\n              <strong>E2</strong>- Engineers,\n            </div>\n          </div>\n          <div className=\"legend lightorange\">\n            <div className=\"legendCircle\"></div>\n            <div className=\"legendTxt\">\n              <strong>E3</strong>- Senior Engineers,\n            </div>\n          </div>\n          <div className=\"legend purple\">\n            <div className=\"legendCircle\"></div>\n            <div className=\"legendTxt\">\n              <strong>L</strong>- Leads,\n            </div>\n          </div>\n          <div className=\"legend crimson\">\n            <div className=\"legendCircle\"></div>\n            <div className=\"legendTxt\">\n              <strong>M</strong>- Managers,\n            </div>\n          </div>\n          <div className=\"legend golden\">\n            <div className=\"legendCircle\"></div>\n            <div className=\"legendTxt\">\n              <strong>G</strong>- Delivery Managers\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div className=\" pyramids\">\n        {Header.map((header, index) => {\n          const chartOption = chartOptions[index];\n          if (header.id == \"ideal\") {\n            return chartOption ? (\n              <HighchartsReact\n                key={header.id}\n                highcharts={Highcharts}\n                options={chartOption}\n              />\n            ) : null;\n          }\n\n          if (\n            filter.includes(header.id + \"_pi\") &&\n            header.id !== \"cadre\" &&\n            header.id !== \"ideal\"\n          ) {\n            return chartOption ? (\n              <HighchartsReact\n                key={header.id}\n                highcharts={Highcharts}\n                options={chartOption}\n              />\n            ) : null;\n          }\n\n          return null;\n        })}\n      </div>\n    </div>\n  );\n}\n\n{\n  /*---------------------------Function for Pyramid Graph------------------------- */\n}\n\nfunction getChartOptions(cadre, key, data) {\n  const yValues = data\n    .filter(\n      (item) =>\n        item.cadre !== \"Total\" && item.cadre !== \"Pyramid Alignment Index\"\n    )\n    .map((item) =>\n      key == \"ideal\" ? parseFloat(item[key]) : parseFloat(item[key + \"_pi\"])\n    );\n\n  if (yValues.every((y) => y === 0)) {\n    return \"\";\n  }\n\n  return {\n    chart: {\n      type: \"pyramid\",\n    },\n    title: {\n      text: cadre,\n      align: \"center\",\n      style: {\n        fontSize: \"14px\",\n        fontWeight: \"bold\",\n        fontFamily: \"Arial\",\n      },\n      verticalAlign: \"top\",\n      y: 10,\n    },\n    tooltip: {\n      enabled: false,\n    },\n    plotOptions: {\n      pyramid: {\n        reversed: true,\n      },\n      series: {\n        dataLabels: {\n          enabled: true,\n          format: \"<b>{point.name}({point.y:,.1f})%</b>\",\n          softConnector: true,\n        },\n        center: [\"35px\", \"50%\"],\n        width: \"60px\",\n        margin: \"0\",\n        showInLegend: true,\n      },\n    },\n    credits: {\n      enabled: false,\n    },\n    legend: {\n      enabled: false,\n      verticalAlign: \"bottom\",\n      align: \"center\",\n    },\n    series: [\n      {\n        data: data\n          .filter(\n            (item) =>\n              item.cadre !== \"Total\" && item.cadre !== \"Pyramid Alignment Index\"\n          )\n          .map((item) => ({\n            name: item.cadre,\n            y:\n              key == \"ideal\"\n                ? parseFloat(item[key])\n                : parseFloat(item[key + \"_pi\"]),\n          }))\n          .reverse(),\n      },\n    ],\n  };\n}\n\nexport default PyramidIndexTable;\n","import React, { useState, useEffect, useRef } from \"react\";\nimport { MultiSelect } from \"react-multi-select-component\";\nimport axios from \"axios\";\nimport { environment } from \"../../environments/environment\";\nimport {\n  FaChevronCircleDown,\n  FaChevronCircleUp,\n  FaSearch,\n  FaCaretDown,\n} from \"react-icons/fa\";\nimport { CCollapse } from \"@coreui/react\";\nimport { AiFillWarning } from \"react-icons/ai\";\nimport GlobalValidation from \"../ValidationComponent/GlobalValidation\";\nimport GlobalCancel from \"../ValidationComponent/GlobalCancel\";\nimport PyramidIndexTable from \"./PyramidIndexTable\";\nimport Loader from \"../Loader/Loader\";\nimport GlobalHelp from \"../PrimeReactTableComponent/GlobalHelp\";\nimport ScreenBreadcrumbs from \"../Common/ScreenBreadcrumbs\";\n\nfunction PyramidIndex() {\n  const [visible, setVisible] = useState(false);\n  const [cheveronIcon, setCheveronIcon] = useState(FaChevronCircleUp);\n  const [view, setView] = useState(\"BU\");\n  const [validationmessage, setValidationMessage] = useState(false);\n  const [departments, setDepartments] = useState([]);\n  const [selectedDepartments, setSelectedDepartments] = useState([]);\n  const [customers, setCustomers] = useState([]);\n  const [selectedCustomers, setSelectedCustomers] = useState([]);\n  const [projects, setProjects] = useState([]);\n  const [selectedProjects, setSelectedProjects] = useState([]);\n  const [csl, setCsl] = useState([]);\n  const [selectedCsl, setSelectedCsl] = useState([]);\n  const [dp, setDp] = useState([]);\n  const [selectedDp, setSelectedDp] = useState([]);\n  const [country, setCountry] = useState([]);\n  const [selectedCountry, setSelectedCountry] = useState([]);\n  console.log(selectedCountry);\n  const [tableData, setTableData] = useState([{}]);\n  const [HeaderData, setHeaderData] = useState();\n  const [displayTableState, setDisplayTableState] = useState(false);\n  const [BUValue, setBUValue] = useState(\"\");\n  const [CustValue, setCustValue] = useState(\"\");\n  const [visible1, setVisible1] = useState(false);\n  const [loader, setLoader] = useState(false);\n  const ref = useRef([]);\n  const abortController = useRef(null);\n  const [initialCslState, setInitialCslState] = useState(\"\");\n  const [initialDpState, setinitialDpState] = useState(\"\");\n  const baseUrl = environment.baseUrl;\n  let [diablingCustomer, setDiablingCustomer] = useState(true);\n  let [diablingProject, setDiablingProject] = useState(true);\n  const initialValue = {\n    BU: \"-1\",\n    CSL: \"-1\",\n    DP: \"-1\",\n    account: \"-1\", //Customer\n    project: \"-1\",\n    country: \"1,2,3,5,6,7,8\",\n  };\n  const [multiRole, setMultiRole] = useState(\"\");\n  const [searchdata, setSearchdata] = useState(initialValue);\n  console.log(searchdata);\n  const loggedUserId = localStorage.getItem(\"resId\");\n  const [dataAccess, setDataAccess] = useState([]);\n  const [data2, setData2] = useState([]);\n  const [routes, setRoutes] = useState([]);\n  let textContent = \"Utilisation Metrics\";\n  let currentScreenName = [\"Pyramid Index\"];\n  const [options, setOptions] = useState([]);\n  console.log(selectedDepartments);\n  useEffect(() => {\n    getMenus();\n  }, [dataAccess]);\n\n  const getMenus = () => {\n    // setMenusData\n\n    axios\n      .get(baseUrl + `/CommonMS/master/getMenus?loggedUserId=${loggedUserId}`)\n      .then((resp) => {\n        // const getData = resp.data;\n        let getData = resp.data.map((menu) => {\n          if (menu.subMenus) {\n            menu.subMenus = menu.subMenus.filter(\n              (subMenu) =>\n                subMenu.display_name !== \"Monthly Revenue Trend\" &&\n                subMenu.display_name !== \"Revenue & Margin Variance\" &&\n                subMenu.display_name !== \"Rev. Projections\" &&\n                subMenu.display_name !== \"Project Timesheet (Deprecated)\" &&\n                subMenu.display_name !== \"Financial Plan & Review\" &&\n                subMenu.display_name !== \"Billable Utilization Trend\" &&\n                subMenu.display_name !== \"Utilisation - FY\" &&\n                subMenu.display_name !== \"NB Work - 4  Prev. Weeks\" &&\n                subMenu.display_name !== \"Practice Calls [Deprecated]\"\n            );\n          }\n          return menu;\n        });\n        setData2(getData);\n        const UsersData = getData\n          .find((item) => item.display_name === \"Utilisation Metrics\")\n          ?.subMenus.find(\n            (subMenu) => subMenu?.display_name === \"Pyramid Index\"\n          )?.userRoles;\n        const updatedOptions = [];\n        const hasCSLRole = UsersData?.includes(\"641\");\n        const hasDPRole = UsersData?.includes(\"690\");\n        if (!hasCSLRole && !hasDPRole) {\n          updatedOptions.push({ label: \"Bussiness Unit\", value: \"BU\" });\n          updatedOptions.push({ label: \"CSL\", value: \"CSL\" });\n          updatedOptions.push({ label: \"DP\", value: \"DP\" });\n        }\n        hasCSLRole ? updatedOptions.push({ label: \"CSL\", value: \"CSL\" }) : \"\";\n        hasDPRole ? updatedOptions.push({ label: \"DP\", value: \"DP\" }) : \"\";\n\n        setOptions(updatedOptions);\n        setSelectedOption(updatedOptions[0].value);\n\n        getData.forEach((item) => {\n          if (item.display_name === textContent) {\n            setRoutes([item]);\n          }\n        });\n        const pyramidIndexSubMenu = getData\n          .find((item) => item.display_name === \"Utilisation Metrics\")\n          .subMenus.find((subMenu) => subMenu.display_name === \"Pyramid Index\");\n        const accessLevel =\n          pyramidIndexSubMenu.userRoles === \"641\"\n            ? 641\n            : pyramidIndexSubMenu.userRoles === \"690\"\n            ? 690\n            : pyramidIndexSubMenu.userRoles.includes(\"641\") &&\n              pyramidIndexSubMenu.userRoles.includes(\"690\")\n            ? \"620\"\n            : null;\n\n        console.log(\"Access Level:\", accessLevel);\n\n        setDataAccess(accessLevel);\n        getCsl(accessLevel);\n        getDP(accessLevel);\n      });\n  };\n\n  console.log(multiRole == 641, 690 ? \"daddy\" : \"sissy\");\n  console.log(multiRole == \"641,690\" ? \"mummy\" : \"franu\");\n  const handleViewBy = (e) => {\n    const { name, value } = e.target;\n    GlobalCancel(ref);\n    setView(value);\n    setSearchdata(initialValue);\n    setSelectedDepartments([]);\n    setSelectedCsl([]);\n    setSelectedDp([]);\n  };\n\n  const ArrowRenderer = ({ expanded }) => (\n    <>\n      {expanded ? (\n        <FaCaretDown className=\"chevronIcon\" />\n      ) : (\n        <FaCaretDown className=\"chevronIcon\" />\n      )}\n    </>\n  );\n\n  {\n    /*----------------Getting BU---------------- */\n  }\n\n  const getDepartments = async () => {\n    const resp = await axios({\n      url: baseUrl + `/CostMS/cost/getDepartments`, //13\n    });\n\n    let departments = resp.data;\n    departments = departments.filter((ele) => ele.value >= 0);\n    setDepartments(departments);\n    let filteredDeptData = [];\n\n    departments.forEach((data) => {\n      filteredDeptData.push(data.value);\n    });\n  };\n\n  {\n    /*----------------Getting CSL---------------- */\n  }\n  console.log(dataAccess);\n  useEffect(() => {}, [dataAccess]);\n  const getCsl = (a) => {\n    console.log(a);\n    axios\n      .get(\n        a == 641 || a == 620\n          ? baseUrl + `/CommonMS/master/getCSLDPAE?loggedUserId=${loggedUserId}`\n          : baseUrl + `/UtilityMS/PyramidIndex/GetCustomerCslList`\n      )\n      .then((resp) => {\n        let csl = [];\n        let data = resp.data;\n\n        data.length > 0 &&\n          data.forEach((e) => {\n            let obj = {\n              label: e.PersonName,\n              value: e.id,\n            };\n            csl.push(obj);\n          });\n        dataAccess == 641 || dataAccess == 620\n          ? \"\"\n          : csl.push({ label: \"UnAssigned\", value: 999 });\n        setCsl(csl);\n      });\n  };\n\n  {\n    /*----------------Getting DP---------------- */\n  }\n  const getDP = (b) => {\n    axios\n      .get(\n        b == 620 || b == 690\n          ? baseUrl + `/CommonMS/master/getDP?loggedUserId=${loggedUserId}`\n          : baseUrl + `/UtilityMS/PyramidIndex/getCustomerDelParatnerList`\n      )\n      .then((resp) => {\n        let dp = [];\n        let data = resp.data;\n        console.log(\"data>>\", data);\n        data.length > 0 &&\n          data.forEach((e) => {\n            let obj = {\n              label: e.PersonName,\n              value: e.id,\n            };\n            dp.push(obj);\n          });\n        dataAccess == 690 || dataAccess == 620\n          ? \"\"\n          : dp.push({ label: \"UnAssigned\", value: 999 });\n        setDp(dp);\n      });\n  };\n\n  useEffect(() => {\n    if (dataAccess == 641 || dataAccess == 690) {\n      getCsl();\n      getDP();\n    }\n  }, [dataAccess]);\n  {\n    /*----------------Getting Customers---------------- */\n  }\n\n  useEffect(() => {\n    axios\n      .get(baseUrl + `/UtilityMS/PyramidIndex/getCustomers?buId=${BUValue.ff}`)\n      .then((resp) => {\n        let customers = resp.data;\n        customers = customers.filter(\n          (ele) => ele.value >= 0 && ele.value != null\n        );\n        setCustomers(customers);\n        let filteredCustData = [];\n\n        customers.forEach((data) => {\n          filteredCustData.push(data.value);\n        });\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }, [BUValue]);\n\n  {\n    /*----------------Getting Projects---------------- */\n  }\n\n  useEffect(() => {\n    axios\n      .get(\n        baseUrl +\n          `/UtilityMS/PyramidIndex/getProjects?custId=${CustValue.cc}&buId=${BUValue.ff}`\n      )\n      .then((resp) => {\n        let projects = resp.data;\n        projects = projects.filter((ele) => ele.value >= 0);\n        setProjects(projects);\n        let filteredProjData = [];\n\n        projects.forEach((data) => {\n          filteredProjData.push(data.value);\n        });\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }, [CustValue]);\n\n  {\n    /*-------------------------Getting Countries-------------------------*/\n  }\n  const getCountries = () => {\n    axios\n      .get(baseUrl + `/revenuemetricsms/headCountAndTrend/getCountries`)\n      .then((Response) => {\n        let countries = [];\n        let data = Response.data;\n\n        data.length > 0 &&\n          data.forEach((e) => {\n            let countryObj = {\n              label: e.countryName,\n              value: e.id,\n            };\n            countries.push(countryObj);\n          });\n\n        //////////--Alphabetical Sorting--//////////\n        const sortedcities = countries.sort(function (a, b) {\n          var nameA = a.label.toUpperCase();\n          var nameB = b.label.toUpperCase();\n          if (nameA < nameB) {\n            return -1; //nameA comes first\n          }\n          if (nameA > nameB) {\n            return 1; // nameB comes first\n          }\n          return 0; // names must be equal\n        });\n        //////////------------------------//////////\n\n        setCountry(sortedcities);\n        setSelectedCountry(countries);\n      })\n      .catch((error) => console.log(error));\n  };\n\n  useEffect(() => {\n    let countryList = [];\n    country.forEach((d) => {\n      countryList.push(d.value);\n    });\n    setSearchdata((prevVal) => ({\n      ...prevVal,\n      [\"country\"]: countryList.toString(),\n    }));\n  }, [country]);\n\n  {\n    /*/////////////////////--------Search Button--------/////////////////////*/\n  }\n  const handleSearch = (e) => {\n    let valid = GlobalValidation(ref);\n\n    if (valid == true) {\n      setValidationMessage(true);\n      setLoader(false);\n      setTimeout(() => {\n        setValidationMessage(false);\n      }, 3000);\n    }\n\n    if (valid) {\n      return;\n    }\n\n    setLoader(false);\n    abortController.current = new AbortController();\n    axios({\n      method: \"post\",\n      url:\n        baseUrl +\n        `/UtilityMS/PyramidIndex/GetPyramidIndexHeader?projectIds=${\n          searchdata.project == \"\" ? -1 : searchdata.project\n        }&unitId=${searchdata.BU}&accountIds=${\n          searchdata.account == \"\" ? -1 : searchdata.account\n        }&CSLIDS=${searchdata.CSL}&DPIDS=${searchdata.DP}`,\n    })\n      .then((res) => {\n        let GetData = res.data;\n        console.log(GetData, \"Updated Data\");\n        console.log(\"Inside GetPyramidIndexHeader axios call.....\");\n        const sortedData = GetData.sort((a, b) => {\n          if (a.value === \"Cadre\") {\n            return -1; // \"Cadre\" should come first\n          }\n          if (b.value === \"Cadre\") {\n            return 1; // \"Cadre\" should come first\n          }\n          if (a.value === \"Ideal\") {\n            return -1; // \"Ideal\" should come next\n          }\n          if (b.value === \"Ideal\") {\n            return 1; // \"Ideal\" should come next\n          }\n          return a.value.localeCompare(b.value); // sort by \"value\" in alphabetical order\n        });\n        setHeaderData(sortedData);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n\n    axios({\n      method: \"post\",\n      url:\n        baseUrl +\n        `/UtilityMS/PyramidIndex/GetPyramidIndex?projectIds=${\n          searchdata.project == \"\" ? -1 : searchdata.project\n        }&unitId=${searchdata.BU}&accountIds=${\n          searchdata.account == \"\" ? -1 : searchdata.account\n        }&CSLIDS=${searchdata.CSL}&DPIDS=${searchdata.DP}&countryIds=${\n          searchdata.country.length == 0 ? \"1,2,3,5,6,7,8\" : searchdata.country\n        }`,\n      signal: abortController.current.signal,\n    })\n      .then((res) => {\n        console.log(res.data, \"Table Data\");\n        let GetData = res.data;\n\n        GetData.map((d) => {\n          if (d.cadre == \"Pyramid Alignment Index\") {\n            Object.keys(d).forEach((ele) => {\n              if (ele.includes(\"count\") && d[ele] == 0) {\n                d[ele] = \"\";\n              }\n            });\n          }\n        });\n        console.log(\"Inside GetPyramidIndex axios call.....\");\n\n        setTableData(GetData);\n        setDisplayTableState(true);\n        setVisible1(true);\n        setLoader(false);\n        !valid && setVisible(!visible);\n        visible\n          ? setCheveronIcon(FaChevronCircleUp)\n          : setCheveronIcon(FaChevronCircleDown);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  {\n    /*////////////////////////////--------Abort Call and UseEffects---------///////////////////////////// */\n  }\n  const handleAbort = () => {\n    abortController.current && abortController.current.abort();\n    setLoader(false);\n  };\n\n  useEffect(() => {\n    getDepartments();\n    getCsl();\n    getDP();\n  }, [tableData]);\n\n  useEffect(() => {\n    getCountries();\n  }, []);\n\n  const HelpPDFName = \"PyramidIndex.pdf\";\n  const Headername = \"Pyramid Index Help\";\n\n  const generateDropdownLabel = (selectedOptions, allOptions) => {\n    const selectedValues = selectedOptions.map((option) => option.value);\n\n    const allValues = allOptions.map((item) => item.value);\n\n    if (\n      selectedValues.length != 0 &&\n      selectedValues.length === allValues.length\n    ) {\n      return \"<< ALL >>\";\n    } else {\n      return selectedOptions.map((option) => option.label).join(\", \");\n    }\n  };\n  console.log(initialCslState, \"cslsate===----\");\n\n  // if (hasCSLRole) {\n  //   options.push(\n  //     <option id=\"CSL\" value=\"CSL\" key=\"CSL\">\n  //       CSL\n  //     </option>\n  //   );\n  // }\n  // if (hasDPRole) {\n  //   options.push(\n  //     <option id=\"DP\" value=\"DP\" key=\"DP\">\n  //       DP\n  //     </option>\n  //   );\n  // }\n  // if (!hasCSLRole && !hasDPRole) {\n  //   options.push(\n  //     <option id=\"BU\" value=\"BU\" key=\"BU\">\n  //       Business Unit\n  //     </option>\n  //   );\n  // }\n  console.log(options);\n  const [selectedOption, setSelectedOption] = useState(\n    options ? options[0]?.value : \"\"\n  );\n\n  const handleViewByNew = (event) => {\n    // Handle the select change event here\n    console.log(\"Selected value: \", event.target.value);\n  };\n  const handleSelectChange = (event) => {\n    const resetPropertiesMap = {\n      BU: {\n        CSL: -1,\n        DP: -1,\n        BU: selectedDepartments\n          .filter((item) => item.value !== undefined)\n          .map((item) => item.value)\n          .join(\",\"),\n      },\n      CSL: {\n        BU: -1,\n        account: -1,\n        DP: -1,\n        CSL: selectedCsl\n          .filter((item) => item.value !== undefined)\n          .map((item) => item.value)\n          .join(\",\"),\n      },\n      DP: {\n        BU: -1,\n        account: -1,\n        CSL: -1,\n        DP: selectedDp\n          .filter((item) => item.value !== undefined)\n          .map((item) => item.value)\n          .join(\",\"),\n      },\n    };\n\n    if (resetPropertiesMap.hasOwnProperty(event.target.value)) {\n      setSearchdata((prev) => ({\n        ...prev,\n        ...resetPropertiesMap[event.target.value],\n      }));\n    }\n\n    setSelectedOption(event.target.value);\n  };\n\n  useEffect(() => {\n    console.log(selectedOption);\n  }, [selectedOption]);\n  console.log(dataAccess);\n  return (\n    <div>\n      {/* /////////////////////////Validation Message////////////////////////// */}\n      {validationmessage ? (\n        <div className=\"statusMsg error\">\n          {\" \"}\n          <AiFillWarning /> Please select valid values for highlighted fields\n        </div>\n      ) : (\n        \"\"\n      )}\n\n      {/* ///////////////////////////////////Title///////////////////////////////////// */}\n\n      <div className=\"pageTitle\">\n        <div className=\"childOne\"></div>\n        <div className=\"childTwo\">\n          <h2>Pyramid Index</h2>\n        </div>\n        <div className=\"childThree\"></div>\n      </div>\n      <ScreenBreadcrumbs\n        routes={routes}\n        currentScreenName={currentScreenName}\n      />\n\n      <div>\n        <div className=\"group mb-3 customCard\">\n          <div className=\"col-md-12 collapseHeader\">\n            <h2>Search Filters</h2>\n            <div className=\"helpBtn\">\n              <GlobalHelp pdfname={HelpPDFName} name={Headername} />\n            </div>\n            <div\n              onClick={() => {\n                setVisible(!visible);\n                visible\n                  ? setCheveronIcon(FaChevronCircleUp)\n                  : setCheveronIcon(FaChevronCircleDown);\n              }}\n            >\n              <span>{cheveronIcon}</span>\n            </div>\n          </div>\n\n          <CCollapse visible={!visible}>\n            <div className=\"group-content row\">\n              <div className=\" col-md-3 mb-2\">\n                <div className=\"form-group row\">\n                  <label className=\"col-5\" htmlFor=\"ViewBy\">\n                    View By\n                  </label>\n                  <span className=\"col-1\">:</span>\n                  <div className=\"multiselect col-6\">\n                    {/* <select\n                      id=\"ViewBy\"\n                      name=\"ViewBy\"\n                      onChange={handleViewByNew}\n                    >\n                      {options}\n                    </select> */}\n                    <select\n                      defaultValue={options ? options[0]?.value : \"\"}\n                      id=\"ViewBy\"\n                      name=\"ViewBy\"\n                      onChange={handleSelectChange}\n                    >\n                      {options.map((option) => (\n                        <option key={option.value} value={option.value}>\n                          {option.label}\n                        </option>\n                      ))}\n                    </select>\n                  </div>\n                </div>\n              </div>\n              {selectedOption == \"BU\" && (\n                <>\n                  <div className=\" col-md-3 mb-2\">\n                    <div className=\"form-group row\">\n                      <label className=\"col-5\" htmlFor=\"BU\">\n                        BU\n                      </label>\n                      <span className=\"col-1\">:</span>\n                      <div\n                        className=\"multiselect col-6\"\n                        ref={(ele) => {\n                          ref.current[0] = ele;\n                        }}\n                      >\n                        <MultiSelect\n                          ArrowRenderer={ArrowRenderer}\n                          id=\"BU\"\n                          options={departments}\n                          hasSelectAll={true}\n                          isLoading={false}\n                          shouldToggleOnHover={false}\n                          disableSearch={false}\n                          value={selectedDepartments}\n                          disabled={false}\n                          onChange={(s) => {\n                            if (s.length != 1) {\n                              setDiablingCustomer(true);\n                              setDiablingProject(true);\n                              setSelectedCustomers([]);\n                              setSelectedProjects([]);\n                              setBUValue(\"\");\n                              setSearchdata((prevVal) => ({\n                                ...prevVal,\n                                [\"account\"]: -1,\n                              }));\n                              setSearchdata((prevVal) => ({\n                                ...prevVal,\n                                [\"project\"]: -1,\n                              }));\n                            } else {\n                              setDiablingCustomer(false);\n                              let ff = [];\n                              s.forEach((d) => {\n                                ff.push(d.value);\n                              });\n                              setBUValue((prevVal) => ({\n                                ...prevVal,\n                                ff,\n                              }));\n                            }\n                            setSelectedDepartments(s);\n                            let filteredValues = [];\n                            s.forEach((d) => {\n                              filteredValues.push(d.value);\n                            });\n\n                            setSearchdata((prevVal) => ({\n                              ...prevVal,\n                              [\"BU\"]: filteredValues.toString(),\n                            }));\n                          }}\n                          valueRenderer={generateDropdownLabel}\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\" col-md-3 mb-2\">\n                    <div className=\"form-group row\">\n                      <label className=\"col-5\" htmlFor=\"Customer\">\n                        Customer\n                      </label>\n                      <span className=\"col-1\">:</span>\n                      <div className=\"multiselect col-6 \">\n                        <MultiSelect\n                          ArrowRenderer={ArrowRenderer}\n                          id=\"Customer\"\n                          className={`multiselect  ${\n                            diablingCustomer ? \"disableField\" : \"\"\n                          }`}\n                          options={customers}\n                          hasSelectAll={true}\n                          isLoading={false}\n                          shouldToggleOnHover={false}\n                          disableSearch={false}\n                          value={selectedCustomers}\n                          disabled={diablingCustomer}\n                          onChange={(s) => {\n                            if (s.length != 1) {\n                              console.log(\">>>>>>>>>>>>\");\n                              setSearchdata((prev) => {\n                                return { ...prev, project: -1 };\n                              });\n                              setCustValue(\"\");\n                              setDiablingProject(true);\n                              setSelectedProjects([]);\n                            } else {\n                              let cc = [];\n                              s.forEach((d) => {\n                                cc.push(d.value);\n                              });\n                              setCustValue((prevVal) => ({\n                                ...prevVal,\n                                cc,\n                              }));\n                              setDiablingProject(false);\n                            }\n                            setSelectedCustomers(s);\n                            let filteredValues = [];\n                            s.forEach((d) => {\n                              filteredValues.push(d.value);\n                            });\n\n                            setSearchdata((prevVal) => ({\n                              ...prevVal,\n                              [\"account\"]: filteredValues.toString(),\n                            }));\n                          }}\n                          valueRenderer={generateDropdownLabel}\n                        />\n                      </div>\n                    </div>\n                  </div>\n\n                  <div className=\" col-md-3 mb-2\">\n                    <div className=\"form-group row\">\n                      <label className=\"col-5\" htmlFor=\"Project\">\n                        Project\n                      </label>\n                      <span className=\"col-1\">:</span>\n                      <div className=\"multiselect col-6\">\n                        <MultiSelect\n                          ArrowRenderer={ArrowRenderer}\n                          id=\"project\"\n                          className={`multiselect  ${\n                            diablingProject ? \"disableField\" : \"\"\n                          }`}\n                          options={projects}\n                          hasSelectAll={true}\n                          isLoading={false}\n                          shouldToggleOnHover={false}\n                          disableSearch={false}\n                          value={selectedProjects}\n                          disabled={diablingProject}\n                          onChange={(s) => {\n                            setSelectedProjects(s);\n                            let filteredValues = [];\n                            s.forEach((d) => {\n                              filteredValues.push(d.value);\n                            });\n\n                            setSearchdata((prevVal) => ({\n                              ...prevVal,\n                              [\"project\"]: filteredValues.toString(),\n                            }));\n                          }}\n                          valueRenderer={generateDropdownLabel}\n                        />\n                      </div>\n                    </div>\n                  </div>\n                </>\n              )}\n              {selectedOption == \"CSL\" && (\n                // <div className=\" col-md-3 mb-2\">\n                <div className=\" col-md-3 mb-2\">\n                  <div className=\"form-group row\">\n                    <label className=\"col-5\" htmlFor=\"CSL\">\n                      CSL\n                    </label>\n                    <span className=\"col-1\">:</span>\n                    <div\n                      className=\"multiselect col-6\"\n                      ref={(ele) => {\n                        ref.current[0] = ele;\n                      }}\n                    >\n                      <MultiSelect\n                        ArrowRenderer={ArrowRenderer}\n                        id=\"CSL\"\n                        options={csl}\n                        hasSelectAll={true}\n                        isLoading={false}\n                        shouldToggleOnHover={false}\n                        disableSearch={false}\n                        value={selectedCsl}\n                        valueRenderer={generateDropdownLabel}\n                        onChange={(s) => {\n                          setSelectedCsl(s);\n                          let filteredValues = [];\n                          s.forEach((d) => {\n                            filteredValues.push(d.value);\n                          });\n\n                          setSearchdata((prevVal) => ({\n                            ...prevVal,\n                            [\"CSL\"]: filteredValues.toString(),\n                          }));\n                        }}\n                      />\n                    </div>\n                  </div>\n                </div>\n              )}\n\n              {\n                selectedOption == \"DP\" && (\n                  // <div className=\" col-md-3 mb-2\">\n                  <div className=\" col-md-3 mb-2\">\n                    <div className=\"form-group row\">\n                      <label className=\"col-5\" htmlFor=\"DP\">\n                        DP\n                      </label>\n                      <span className=\"col-1\">:</span>\n                      <div\n                        className=\"multiselect col-6\"\n                        ref={(ele) => {\n                          ref.current[0] = ele;\n                        }}\n                      >\n                        <MultiSelect\n                          ArrowRenderer={ArrowRenderer}\n                          id=\"DP\"\n                          options={dp}\n                          hasSelectAll={true}\n                          isLoading={false}\n                          shouldToggleOnHover={false}\n                          disableSearch={false}\n                          value={selectedDp}\n                          onChange={(s) => {\n                            setSelectedDp(s);\n                            let filteredValues = [];\n                            s.forEach((d) => {\n                              filteredValues.push(d.value);\n                            });\n\n                            setSearchdata((prevVal) => ({\n                              ...prevVal,\n                              [\"DP\"]: filteredValues.toString(),\n                            }));\n                          }}\n                          valueRenderer={generateDropdownLabel}\n                        />\n                      </div>\n                    </div>\n                  </div>\n                )\n                // </div>\n              }\n              <div className=\"col-md-3 mb-2\">\n                <div className=\"form-group row\">\n                  <label className=\"col-5\" htmlFor=\"Country\">\n                    Country\n                  </label>\n                  <span className=\"col-1\">:</span>\n                  <div className=\"multiselect col-6\">\n                    <MultiSelect\n                      ArrowRenderer={ArrowRenderer}\n                      id=\"country\"\n                      options={country}\n                      hasSelectAll={true}\n                      value={selectedCountry}\n                      disabled={false}\n                      onChange={(e) => {\n                        setSelectedCountry(e);\n                        let filteredCountry = [];\n                        e.forEach((d) => {\n                          filteredCountry.push(d.value);\n                        });\n                        setSearchdata((prevVal) => ({\n                          ...prevVal,\n                          [\"country\"]: filteredCountry.toString(),\n                        }));\n                      }}\n                      valueRenderer={generateDropdownLabel}\n                    />\n                  </div>\n                </div>\n              </div>\n              {/* ---------------------Search Button-------------------- */}\n              <div className=\"col-12 btn-container center mb-2\">\n                <button\n                  type=\"submit\"\n                  onClick={handleSearch}\n                  className=\"btn btn-primary\"\n                >\n                  <FaSearch /> Search\n                </button>\n\n                {loader ? <Loader handleAbort={handleAbort} /> : \"\"}\n              </div>\n            </div>\n          </CCollapse>\n          {visible1 ? (\n            <PyramidIndexTable data={tableData} Header={HeaderData} />\n          ) : (\n            \"\"\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\nexport default PyramidIndex;\n","import { CModal, CModalBody, CModalHeader, CModalTitle } from \"@coreui/react\";\nimport React from \"react\";\nimport Draggable from \"react-draggable\";\n\nfunction CustomDashboardDeletePopUp(props) {\n  const {\n    deletePopup,\n    editId,\n    deleteid,\n    deleteMyDashboardData,\n    setDeletePopup,\n  } = props;\n  return (\n    <div>\n      <Draggable>\n        <CModal\n          visible={deletePopup}\n          onClose={() => setDeletePopup(false)}\n          size=\"default\"\n          className=\" ui-dialog\"\n        >\n          <CModalHeader className=\"hgt22\">\n            <CModalTitle>\n              <span className=\"ft16\">Delete Search</span>\n            </CModalTitle>\n          </CModalHeader>\n          <CModalBody>\n            <h6>Are you sure you want to delete Search ?</h6>\n            <div className=\"btn-container center my-2\">\n              <button\n                type=\"delete\"\n                className=\"btn btn-primary\"\n                onClick={() => {\n                  deleteMyDashboardData();\n                }}\n              >\n                {\" \"}\n                Delete{\" \"}\n              </button>\n              <button\n                type=\"button\"\n                className=\"btn btn-secondary\"\n                onClick={() => setDeletePopup(false)}\n              >\n                {\" \"}\n                Cancel{\" \"}\n              </button>\n            </div>\n          </CModalBody>\n        </CModal>\n      </Draggable>\n    </div>\n  );\n}\n\nexport default CustomDashboardDeletePopUp;\n","import { CCollapse } from \"@coreui/react\";\nimport axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport { FaChevronCircleDown, FaChevronCircleUp } from \"react-icons/fa\";\nimport { environment } from \"../../environments/environment\";\nimport CellRendererPrimeReactDataTable from \"../PrimeReactTableComponent/CellRendererPrimeReactDataTable\";\nimport { Column } from \"ag-grid-community\";\nimport { useNavigate } from \"react-router-dom\";\nimport { AiFillDelete } from \"react-icons/ai\";\nimport moment from \"moment\";\nimport CustomDashboardDeletePopUp from \"./CustomDashboardDeletePopUp\";\nfunction CustomMyDashboard(props) {\n  const { setAddmsg } = props;\n  const [getData, setGetData] = useState([]);\n  const [getTableData, setGetTableData] = useState({});\n  const loggedUserId = localStorage.getItem(\"resId\");\n  const [linkColumns, setLinkColumns] = useState([]);\n  const [headerData, setHeaderData] = useState([]);\n  const baseUrl = environment.baseUrl;\n  const [deletePopup, setDeletePopup] = useState(false);\n  const [sectionStates, setSectionStates] = useState({}); // Use an object to store section visibility states.\n  const [deleteId, setDeleteId] = useState();\n  const [tableId, setTableId] = useState();\n  const [tableName, setTableName] = useState();\n\n  const getMyDashboardData = () => {\n    axios\n      .get(\n        `${baseUrl}/dashboardsms/customDashboard/getMyDashboardCollapse?userId=${loggedUserId}&dashType=1417`\n      )\n      .then((res) => {\n        const data = res.data;\n        setGetData(data);\n      });\n  };\n\n  const deleteMyDashboardData = () => {\n    axios({\n      method: \"delete\",\n      url: `${baseUrl}/dashboardsms/savedsearch/deletedataSearchFilters?saved_search_id=${deleteId}`,\n    }).then(\n      axios({\n        method: \"delete\",\n        url: `${baseUrl}/dashboardsms/savedsearch/deletedataSavedSearch?id=${deleteId}`,\n      }).then((error) => {\n        setDeletePopup(false);\n        getMyDashboardData();\n        getMyDashboardTablesData();\n        setAddmsg(true);\n        setTimeout(() => {\n          setAddmsg(false);\n        }, 3000);\n        window.scrollTo({ top: 0, behavior: \"smooth\" });\n      })\n    );\n  };\n\n  const getMyDashboardTablesData = (value, sessionName) => {\n    axios\n      .get(\n        `${baseUrl}/dashboardsms/customDashboard/getMyDashboardTable?dashType=1417&sectionId=${tableId}&userId=${loggedUserId}`\n      )\n      .then((res) => {\n        const data = res.data;\n        let GetData = res.data;\n        for (let i = 0; i < GetData.length; i++) {\n          GetData[i][\"SNo\"] = i + 1;\n          GetData[i][\"date_created\"] =\n            GetData[i][\"date_created\"] == null\n              ? \"\"\n              : moment(GetData[i][\"date_created\"]).format(\"DD-MMM-YYYY\");\n        }\n\n        let dataHeaders = [\n          {\n            SNo: \"S.No\",\n            search_name: \"Search Name\",\n            date_created: \"Created on\",\n            Action: \"Action\",\n          },\n        ];\n        setGetTableData((prev) => ({\n          ...prev,\n          [tableName]: dataHeaders.concat(GetData),\n        }));\n        let data1 = [\"search_name\", \"Action\"];\n        setLinkColumns(data1);\n      });\n  };\n\n  useEffect(() => {\n    getMyDashboardData();\n  }, []);\n\n  useEffect(() => {\n    getMyDashboardTablesData();\n  }, [tableId]);\n\n  const toggleSection = (section, id) => {\n    // Toggle the visibility state for a specific section.\n    setSectionStates((prevState) => ({\n      ...prevState,\n      [section]: !prevState[section] || false,\n    }));\n  };\n\n  useEffect(() => {\n    getTableData[0] &&\n      setHeaderData(JSON.parse(JSON.stringify(getTableData[0])));\n  }, [getTableData]);\n\n  const SnoAlign = (data) => {\n    return <div align=\"center\">{data.SNo}</div>;\n  };\n\n  const CreatedDate = (data) => {\n    return (\n      <div align=\"center\" data-toggle=\"tooltip\" title={data.date_created}>\n        {data.date_created}\n      </div>\n    );\n  };\n\n  const LinkTemplateName = (data) => {\n    // let rou = linkColumnsRoutes[0];\n    const parts = data.page_url.split(\"/\");\n    const lastTwoParts = parts.length >= 2 ? parts.slice(-2).join(\"/\") : url;\n    const baseUrl = \"/search/savedSearches\";\n    const modifiedUrl = lastTwoParts.replace(new RegExp(`^${baseUrl}`), \"\");\n    const navigate = useNavigate();\n    const handleLinkClick = () => {\n      const id = data.id;\n      // Replace with your actual value\n      const urlWithHash = `/#/${modifiedUrl}`;\n      const updatedUrlWithHash = `${urlWithHash}?id=${id}`;\n\n      // Open the link in a new tab\n      window.open(updatedUrlWithHash, \"_blank\");\n    };\n\n    return (\n      <>\n        <div\n          style={{\n            color: \"#15a7ea\",\n            textDecoration: \"underline\",\n            cursor: \"pointer\",\n          }}\n          //   onClick={handleLinkClick}\n          onClick={() => {\n            handleLinkClick();\n            // setId(data.id);\n          }}\n          data-toggle=\"tooltip\"\n          title={data.search_name}\n        >\n          {data[linkColumns[0]]}\n        </div>\n      </>\n    );\n  };\n\n  const LinkTemplate = (data) => {\n    let rou = linkColumns[0];\n    return (\n      <>\n        <div align=\"center\">\n          {\n            <AiFillDelete\n              color=\"orange\"\n              cursor=\"pointer\"\n              type=\"edit\"\n              size=\"1.2em\"\n              onClick={() => {\n                setDeletePopup(true);\n                // setEditedData(data);\n                setDeleteId(data.id);\n                // setType(\"edit\"),\n              }}\n              align=\"center\"\n            />\n          }{\" \"}\n          &nbsp;\n        </div>\n      </>\n    );\n  };\n  const dynamicColumns = Object.keys(headerData)?.map((col, i) => {\n    const columnStyle =\n      col === \"SNo\" && SnoAlign\n        ? { width: \"14%\" }\n        : col === \"Action\" && LinkTemplate\n        ? { width: \"16%\" }\n        : null;\n    return (\n      <Column\n        sortable\n        key={col}\n        body={\n          (col == \"SNo\" && SnoAlign) ||\n          (col == \"date_created\" && CreatedDate) ||\n          (col == \"search_name\" && LinkTemplateName) ||\n          (col == \"Action\" && LinkTemplate)\n        }\n        field={col}\n        header={headerData[col]}\n        style={columnStyle}\n      />\n    );\n  });\n  return (\n    <div>\n      {getData.map((item, index) => (\n        <div key={index} className=\"group mb-1 customCard\">\n          <div className=\"col-md-12 collapseHeader\">\n            <h2\n              style={{ cursor: \"pointer\" }}\n              onClick={() =>\n                toggleSection(\n                  item.section,\n                  setTableName(item.section),\n                  setTableId(item.id)\n                )\n              }\n            >\n              {item.section}\n            </h2>\n            <div\n              style={{ cursor: \"pointer\" }}\n              onClick={() =>\n                toggleSection(\n                  item.section,\n                  setTableName(item.section),\n                  setTableId(item.id)\n                  // getMyDashboardTablesData(item.id, item.section)\n                )\n              }\n            >\n              <span>\n                {sectionStates[item.section] ? (\n                  <FaChevronCircleUp />\n                ) : (\n                  <FaChevronCircleDown />\n                )}\n              </span>\n            </div>\n          </div>\n          <CCollapse visible={sectionStates[item.section]}>\n            <div>\n              <CellRendererPrimeReactDataTable\n                data={\n                  getTableData[item.section] == undefined\n                    ? []\n                    : getTableData[item.section]\n                }\n                rows={5}\n                linkColumns={linkColumns}\n                // linkColumnsRoutes={linkColumnsRoutes}\n                dynamicColumns={dynamicColumns}\n                headerData={headerData}\n                setHeaderData={setHeaderData}\n              />\n            </div>\n            {/* Add your additional components or content here */}\n          </CCollapse>\n        </div>\n      ))}\n      {getData.length === 0 && (\n        <div className=\"group mb-5 customCard\">\n          <div className=\"group-content row collapseHeader\">\n            <div\n              className=\"form-group row\"\n              style={{\n                fontSize: \"15px\",\n                justifyContent: \"center\",\n              }}\n            >\n              No Data Found\n            </div>\n          </div>\n        </div>\n      )}\n\n      {deletePopup == true ? (\n        <CustomDashboardDeletePopUp\n          //   editId={editId}\n          deleteMyDashboardData={deleteMyDashboardData}\n          deletePopup={deletePopup}\n          setDeletePopup={setDeletePopup}\n        />\n      ) : (\n        \"\"\n      )}\n    </div>\n  );\n}\n\nexport default CustomMyDashboard;\n","import { CCollapse } from \"@coreui/react\";\nimport axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport { FaChevronCircleDown, FaChevronCircleUp } from \"react-icons/fa\";\nimport { environment } from \"../../environments/environment\";\nimport CellRendererPrimeReactDataTable from \"../PrimeReactTableComponent/CellRendererPrimeReactDataTable\";\nimport { Column } from \"ag-grid-community\";\nimport { useNavigate } from \"react-router-dom\";\nimport { AiFillDelete } from \"react-icons/ai\";\nimport moment from \"moment\";\nimport CustomDashboardDeletePopUp from \"./CustomDashboardDeletePopUp\";\n\nfunction CustomOrgDashboard(props) {\n  const { setAddmsg } = props;\n  const [getData, setGetData] = useState([]);\n  const [getTableData, setGetTableData] = useState({});\n  const loggedUserId = localStorage.getItem(\"resId\");\n  const [linkColumns, setLinkColumns] = useState([]);\n  const [headerData, setHeaderData] = useState([]);\n  const baseUrl = environment.baseUrl;\n  const [deletePopup, setDeletePopup] = useState(false);\n  const [sectionStates, setSectionStates] = useState({}); // Use an object to store section visibility states.\n  const [deleteId, setDeleteId] = useState();\n  const [tableId, setTableId] = useState();\n  const [tableName, setTableName] = useState();\n\n  const getMyDashboardData = () => {\n    axios\n      .get(\n        `${baseUrl}/dashboardsms/customDashboard/getMyDashboardCollapse?userId=${loggedUserId}&dashType=1418`\n      )\n      .then((res) => {\n        const data = res.data;\n        setGetData(data);\n      });\n  };\n\n  const deleteMyDashboardData = () => {\n    axios({\n      method: \"delete\",\n      url: `${baseUrl}/dashboardsms/savedsearch/deletedataSearchFilters?saved_search_id=${deleteId}`,\n    }).then(\n      axios({\n        method: \"delete\",\n        url: `${baseUrl}/dashboardsms/savedsearch/deletedataSavedSearch?id=${deleteId}`,\n      }).then((error) => {\n        setDeletePopup(false);\n        getMyDashboardData();\n        getMyDashboardTablesData();\n        setAddmsg(true);\n        setTimeout(() => {\n          setAddmsg(false);\n        }, 3000);\n        window.scrollTo({ top: 0, behavior: \"smooth\" });\n      })\n    );\n  };\n\n  const getMyDashboardTablesData = (value, sessionName) => {\n    axios\n      .get(\n        `${baseUrl}/dashboardsms/customDashboard/getMyDashboardTable?dashType=1418&sectionId=${tableId}&userId=${loggedUserId}`\n      )\n      .then((res) => {\n        const data = res.data;\n        let GetData = res.data;\n        for (let i = 0; i < GetData.length; i++) {\n          GetData[i][\"SNo\"] = i + 1;\n          GetData[i][\"date_created\"] =\n            GetData[i][\"date_created\"] == null\n              ? \"\"\n              : moment(GetData[i][\"date_created\"]).format(\"DD-MMM-YYYY\");\n        }\n\n        let dataHeaders = [\n          {\n            SNo: \"S.No\",\n            search_name: \"Search Name\",\n            date_created: \"Created on\",\n            Action: \"Action\",\n          },\n        ];\n        setGetTableData((prev) => ({\n          ...prev,\n          [tableName]: dataHeaders.concat(GetData),\n        }));\n        let data1 = [\"search_name\", \"Action\"];\n        setLinkColumns(data1);\n      });\n  };\n\n  useEffect(() => {\n    getMyDashboardData();\n  }, []);\n\n  useEffect(() => {\n    getMyDashboardTablesData();\n  }, [tableId]);\n\n  const toggleSection = (section, id) => {\n    // Toggle the visibility state for a specific section.\n    setSectionStates((prevState) => ({\n      ...prevState,\n      [section]: !prevState[section] || false,\n    }));\n  };\n\n  useEffect(() => {\n    getTableData[0] &&\n      setHeaderData(JSON.parse(JSON.stringify(getTableData[0])));\n  }, [getTableData]);\n\n  const SnoAlign = (data) => {\n    return <div align=\"center\">{data.SNo}</div>;\n  };\n\n  const CreatedDate = (data) => {\n    return (\n      <div align=\"center\" data-toggle=\"tooltip\" title={data.date_created}>\n        {data.date_created}\n      </div>\n    );\n  };\n\n  const LinkTemplateName = (data) => {\n    // let rou = linkColumnsRoutes[0];\n    const parts = data.page_url.split(\"/\");\n    const lastTwoParts = parts.length >= 2 ? parts.slice(-2).join(\"/\") : url;\n    const baseUrl = \"/search/savedSearches\";\n    const modifiedUrl = lastTwoParts.replace(new RegExp(`^${baseUrl}`), \"\");\n    const navigate = useNavigate();\n    const handleLinkClick = () => {\n      const id = data.id;\n      // Replace with your actual value\n      const urlWithHash = `/#/${modifiedUrl}`;\n      const updatedUrlWithHash = `${urlWithHash}?id=${id}`;\n\n      // Open the link in a new tab\n      window.open(updatedUrlWithHash, \"_blank\");\n    };\n\n    return (\n      <>\n        <div\n          style={{\n            color: \"#15a7ea\",\n            textDecoration: \"underline\",\n            cursor: \"pointer\",\n          }}\n          //   onClick={handleLinkClick}\n          onClick={() => {\n            handleLinkClick();\n            // setId(data.id);\n          }}\n          data-toggle=\"tooltip\"\n          title={data.search_name}\n        >\n          {data[linkColumns[0]]}\n        </div>\n      </>\n    );\n  };\n\n  const LinkTemplate = (data) => {\n    let rou = linkColumns[0];\n    return (\n      <>\n        <div align=\"center\">\n          {\n            <AiFillDelete\n              color=\"orange\"\n              cursor=\"pointer\"\n              type=\"edit\"\n              size=\"1.2em\"\n              onClick={() => {\n                setDeletePopup(true);\n                // setEditedData(data);\n                setDeleteId(data.id);\n                // setType(\"edit\"),\n              }}\n              align=\"center\"\n            />\n          }{\" \"}\n          &nbsp;\n        </div>\n      </>\n    );\n  };\n  const dynamicColumns = Object.keys(headerData)?.map((col, i) => {\n    const columnStyle =\n      col === \"SNo\" && SnoAlign\n        ? { width: \"14%\" }\n        : col === \"Action\" && LinkTemplate\n        ? { width: \"16%\" }\n        : null;\n    return (\n      <Column\n        sortable\n        key={col}\n        body={\n          (col == \"SNo\" && SnoAlign) ||\n          (col == \"date_created\" && CreatedDate) ||\n          (col == \"search_name\" && LinkTemplateName) ||\n          (col == \"Action\" && LinkTemplate)\n        }\n        field={col}\n        header={headerData[col]}\n        style={columnStyle}\n      />\n    );\n  });\n  return (\n    <div>\n      {getData.map((item, index) => (\n        <div key={index} className=\"group mb-1 customCard\">\n          <div className=\"col-md-12 collapseHeader\">\n            <h2\n              style={{ cursor: \"pointer\" }}\n              onClick={() =>\n                toggleSection(\n                  item.section,\n                  setTableName(item.section),\n                  setTableId(item.id)\n                )\n              }\n            >\n              {item.section}\n            </h2>\n            <div\n              style={{ cursor: \"pointer\" }}\n              onClick={() =>\n                toggleSection(\n                  item.section,\n                  setTableName(item.section),\n                  setTableId(item.id)\n                )\n              }\n            >\n              <span>\n                {sectionStates[item.section] ? (\n                  <FaChevronCircleUp />\n                ) : (\n                  <FaChevronCircleDown />\n                )}\n              </span>\n            </div>\n          </div>\n          <CCollapse visible={sectionStates[item.section]}>\n            <div>\n              <CellRendererPrimeReactDataTable\n                data={\n                  getTableData[item.section] == undefined\n                    ? []\n                    : getTableData[item.section]\n                }\n                rows={5}\n                linkColumns={linkColumns}\n                // linkColumnsRoutes={linkColumnsRoutes}\n                dynamicColumns={dynamicColumns}\n                headerData={headerData}\n                setHeaderData={setHeaderData}\n              />\n            </div>\n            {/* Add your additional components or content here */}\n          </CCollapse>\n        </div>\n      ))}\n      {getData.length === 0 && (\n        <div className=\"group mb-5 customCard\">\n          <div className=\"group-content row collapseHeader\">\n            <div\n              className=\"form-group row\"\n              style={{\n                fontSize: \"15px\",\n                justifyContent: \"center\",\n              }}\n            >\n              No Data Found\n            </div>\n          </div>\n        </div>\n      )}\n\n      {deletePopup == true ? (\n        <CustomDashboardDeletePopUp\n          //   editId={editId}\n          deleteMyDashboardData={deleteMyDashboardData}\n          deletePopup={deletePopup}\n          setDeletePopup={setDeletePopup}\n        />\n      ) : (\n        \"\"\n      )}\n    </div>\n  );\n}\nexport default CustomOrgDashboard;\n","// import React, { useState } from \"react\";\n// import CustomMyDashboard from \"./CustomMyDashboard\";\n// import CustomOrgDashboard from \"./CustomOrgDashboard\";\n// import { environment } from \"../../environments/environment\";\n\n// import axios from \"axios\";\n// import ScreenBreadcrumbs from \"../Common/ScreenBreadcrumbs\";\n// import { useEffect } from \"react\";\n// import GlobalHelp from \"../PrimeReactTableComponent/GlobalHelp\";\n// function CustomDashboard() {\n//   const [buttonState, setButtonState] = useState(\"MyDashboard\");\n\n//   const baseUrl = environment.baseUrl;\n\n//   const loggedUserId = localStorage.getItem(\"resId\");\n//   const [routes, setRoutes] = useState([]);\n//   let textContent = \"Dashboards\";\n//   let currentScreenName = [\"Custom Dashboard\"]\n\n//   const HelpPDFName = \"CustomDashboard.pdf\";\n//   const Headername = \"Custom Dashboard Help\";\n//   const getMenus = () => {\n//     // setMenusData\n\n//     axios({\n//       method: \"GET\",\n//       url: baseUrl + `/CommonMS/master/getMenus?loggedUserId=${loggedUserId}`,\n//     }).then((resp) => {\n//       let data = resp.data;\n\n//       data.forEach((item) => {\n//         if (item.display_name === textContent) {\n//           setRoutes([item]);\n//         }\n//       });\n//     });\n//   };\n\n//   useEffect(() => {\n//     getMenus();\n//   }, []);\n//   return (\n//     <div>\n//       <div className=\"pageTitle\">\n//         <div className=\"childOne\"></div>\n//         <div className=\"childTwo\">\n//           <h2>Custom Dashboard</h2>\n//         </div>\n//         <div className=\"childThree\"></div>\n//       </div>\n//       <div className=\"helpBtn\" style={{ float: \"right\", paddingTop: \"5px\" }}>\n//         <GlobalHelp pdfname={HelpPDFName} name={Headername} />\n//       </div>\n//       <ScreenBreadcrumbs\n//         routes={routes}\n//         currentScreenName={currentScreenName}\n//       />\n\n//       <div className=\"tabs\">\n//         <button\n//           className={\n//             buttonState === \"MyDashboard\"\n//               ? \"buttonDisplayClick\"\n//               : \"buttonDisplay\"\n//           }\n//           onClick={() => {\n//             setButtonState(\"MyDashboard\");\n//           }}\n//         >\n//           My Dashboard\n//         </button>\n//         <button\n//           className={\n//             buttonState === \"OrgDashboard\"\n//               ? \"buttonDisplayClick\"\n//               : \"buttonDisplay\"\n//           }\n//           onClick={() => {\n//             setButtonState(\"OrgDashboard\");\n//           }}\n//         >\n//           Open\n//         </button>\n//       </div>\n\n//       {buttonState === \"MyDashboard\" && <CustomMyDashboard />}\n//       {buttonState === \"OrgDashboard\" && <CustomOrgDashboard />}\n//     </div>\n//   );\n// }\n\n// export default CustomDashboard;\n\n// ******************** This code is for when we are refresh at a particular page, it should be with in that page ***********************\n\nimport React, { useState, useEffect } from \"react\";\nimport CustomMyDashboard from \"./CustomMyDashboard\";\nimport CustomOrgDashboard from \"./CustomOrgDashboard\";\nimport { environment } from \"../../environments/environment\";\nimport axios from \"axios\";\nimport ScreenBreadcrumbs from \"../Common/ScreenBreadcrumbs\";\nimport GlobalHelp from \"../PrimeReactTableComponent/GlobalHelp\";\nimport { BiCheck } from \"react-icons/bi\";\n\nfunction CustomDashboard() {\n  // const [buttonState, setButtonState] = useState(() => {\n  //   // Retrieve the last selected tab from localStorage on component mount\n  //   return localStorage.getItem(\"selectedDashboardTab\") || \"MyDashboard\";\n  // });\n  const [buttonState, setButtonState] = useState(\"MyDashboard\");\n  const [addmsg, setAddmsg] = useState(false);\n  const baseUrl = environment.baseUrl;\n\n  const loggedUserId = localStorage.getItem(\"resId\");\n  const [routes, setRoutes] = useState([]);\n  let textContent = \"Dashboards\";\n  let currentScreenName = [\"Custom Dashboard\"];\n\n  const HelpPDFName = \"CustomDashboard.pdf\";\n  const Headername = \"Custom Dashboard Help\";\n\n  const getMenus = () => {\n    axios({\n      method: \"GET\",\n      url: baseUrl + `/CommonMS/master/getMenus?loggedUserId=${loggedUserId}`,\n    }).then((resp) => {\n      let data = resp.data;\n\n      data.forEach((item) => {\n        if (item.display_name === textContent) {\n          setRoutes([item]);\n        }\n      });\n    });\n  };\n\n  useEffect(() => {\n    getMenus();\n  }, []);\n\n  // useEffect(() => {\n  //   // Save the selected tab to localStorage whenever it changes\n  //   localStorage.setItem(\"selectedDashboardTab\", buttonState);\n  // }, [buttonState]);\n\n  return (\n    <div>\n      {addmsg ? (\n        <div className=\"statusMsg success\">\n          <span className=\"errMsg\">\n            <BiCheck size=\"1.4em\" /> &nbsp; Search Name deleted successfully\n          </span>\n        </div>\n      ) : (\n        \"\"\n      )}\n      <div className=\"pageTitle\">\n        <div className=\"childOne\"></div>\n        <div className=\"childTwo\">\n          <h2>Custom Dashboard</h2>\n        </div>\n        <div className=\"childThree\"></div>\n      </div>\n      <div className=\"helpBtn\" style={{ float: \"right\", paddingTop: \"5px\" }}>\n        <GlobalHelp pdfname={HelpPDFName} name={Headername} />\n      </div>\n      <ScreenBreadcrumbs\n        routes={routes}\n        currentScreenName={currentScreenName}\n      />\n\n      <div className=\"tabs\">\n        <button\n          className={\n            buttonState === \"MyDashboard\"\n              ? \"buttonDisplayClick\"\n              : \"buttonDisplay\"\n          }\n          onClick={() => {\n            setButtonState(\"MyDashboard\");\n          }}\n        >\n          My DashBoard\n        </button>\n        <button\n          className={\n            buttonState === \"OrgDashboard\"\n              ? \"buttonDisplayClick\"\n              : \"buttonDisplay\"\n          }\n          onClick={() => {\n            setButtonState(\"OrgDashboard\");\n          }}\n        >\n          Org DashBoard\n        </button>\n      </div>\n\n      {buttonState === \"MyDashboard\" && (\n        <CustomMyDashboard setAddmsg={setAddmsg} />\n      )}\n      {buttonState === \"OrgDashboard\" && (\n        <CustomOrgDashboard setAddmsg={setAddmsg} />\n      )}\n    </div>\n  );\n}\n\nexport default CustomDashboard;\n","import React from \"react\";\nimport VendorManagement from \"./views/VendorComponent/VendorManagement\";\nimport Performance from \"./views/VendorComponent/VendorPerformanceFilters\";\nimport NonBillableWork4Weeks from \"./views/UtilisationMetrics/NonBillableWork4weeksfilters\";\nimport ProjectHealth from \"./views/DeliveryComponent/ProjectHealth\";\nimport BillableUtilisationTrend from \"./views/UtilisationMetrics/BillableUtilisationTrendFilter\";\nimport Hierarchy from \"./views/Teams/Hierarchy\";\nimport UtilisationFY from \"./views/UtilisationMetrics/UtilisationFY\";\nimport PyramidIndex from \"./views/UtilisationMetrics/PyramidIndex\";\nimport Profile from \"./views/Teams/Profile\";\nimport CustomDashboard from \"./views/Dashboard/CustomDashboard\";\nimport ExpenseStackView from \"./views/TimeAndExpenses/Expenses/ExpenseStackView\";\nimport SalaryBand from \"./views/SalaryBand/SalaryBand\";\n\n// MasterData Config\nconst Pipeline = React.lazy(() =>\n  import(\"./views/PipeLineComponent/PipelineTrending\")\n);\nconst MyDashboard = React.lazy(() => import(\"./views/Dashboard/MyDashboard\"));\nconst SavedSearch = React.lazy(() => import(\"./views/Dashboard/SavedSearch\"));\nconst Reviews = React.lazy(() => import(\"./views/ReveiwsComponent/Reviews\"));\nconst ScoreCard = React.lazy(() =>\n  import(\"./views/ScoreCardComponent/ScoreCard\")\n);\nconst Opportunities = React.lazy(() =>\n  import(\"./views/SalesOpportunityComponent/Opportunities\")\n);\n\nconst OpportunityEdit = React.lazy(() =>\n  import(\"./views/SalesforceComponent/OpportunityEdit\")\n);\n\nconst sfReports = React.lazy(() =>\n  import(\"./views/SalesforceComponent/Reports\")\n);\n\nconst Attainment = React.lazy(() =>\n  import(\"./views/AttainmentComponent/Attainment\")\n);\nconst InsideSales = React.lazy(() =>\n  import(\"./views/InsideSalesComponent/InsideSales\")\n);\nconst Progress = React.lazy(() => import(\"./views/ProgressComponent/Progress\"));\nconst SelectSEDialogBox = React.lazy(() =>\n  import(\"./views/SelectSE/SelectSEDialogBox\")\n);\nconst RoleView = React.lazy(() => import(\"./views/CostComponent/RoleView\"));\nconst Software = React.lazy(() => import(\"./views/SoftwareComponent/Software\"));\nconst richtext = React.lazy(() => import(\"./views/RichText/RichText\"));\nconst Service = React.lazy(() => import(\"./views/ServiceComponent/Service\"));\nconst vt = React.lazy(() => import(\"./views/ServiceComponent/SfPipeline\"));\nconst viewAndUpload = React.lazy(() =>\n  import(\"./views/CostComponent/ViewAndUpload\")\n);\nconst roleApprovals = React.lazy(() =>\n  import(\"./views/CostComponent/RoleApprovals\")\n);\nconst costRoleGrid = React.lazy(() =>\n  import(\"./views/CostComponent/CostRoleGrid\")\n);\nconst vendor = React.lazy(() => import(\"./views/VendorComponent/Vendor\"));\nconst create = React.lazy(() => import(\"./views/VendorComponent/VendorCreate\"));\nconst OpenTopMenu = React.lazy(() =>\n  import(\"./views/VendorComponent/OpenTopMenu\")\n);\nconst VendorPerformance = React.lazy(() =>\n  import(\"./views/VendorComponent/VendorPerformance\")\n);\n\nconst vendorDoc = React.lazy(() =>\n  import(\"./views/VendorComponent/ParentVendor\")\n);\nconst loginHistory = React.lazy(() =>\n  import(\"./views/CostComponent/LoginHistory\")\n);\nconst project = React.lazy(() => import(\"./views/ProjectComponent/Project\"));\nconst Overview = React.lazy(() => import(\"./views/ProjectComponent/Project\"));\nconst projectOpen = React.lazy(() =>\n  import(\"./views/ProjectComponent/ParentProject\")\n);\n\nconst Enagagement = React.lazy(() =>\n  import(\"./views/DeliveryComponent/Delivery\")\n);\n\nconst projectInvoiceDetails = React.lazy(() =>\n  import(\"./views/ProjectInvoiceDetailsComponent/ProjectInvoiceDetails\")\n);\n\nconst RevenueMarginVariance = React.lazy(() =>\n  import(\"./views/RevenueMetrices/RevenueVariance\")\n);\nconst HeadcountMarginTrend = React.lazy(() =>\n  import(\"./views/RevenueMetrices/HeadCount.js\")\n);\nconst MonthlyPRChangesByDay = React.lazy(() =>\n  import(\"./views/RevenueMetrices/MonthlyPRChangesByDay.js\")\n);\nconst MonthlyRevenueForecastment = React.lazy(() =>\n  import(\"./views/RevenueMetrices/RevenueForecast\")\n);\nconst RevenueMarginAnalysis = React.lazy(() =>\n  import(\"./views/RevenueMetrices/MarginAnalysis.js\")\n);\nconst MonthlyRevenueTrend = React.lazy(() =>\n  import(\"./views/RevenueMetrices/MonthlyRevenueTrend\")\n);\nconst RevenueByIndustry = React.lazy(() =>\n  import(\"./views/RevenueMetrices/RevenueIndustry.js\")\n);\nconst RevenueProjections = React.lazy(() =>\n  import(\"./views/RevenueMetrices/RevenueProjections.js\")\n);\nconst RolesPermission = React.lazy(() =>\n  import(\"./views/Administration/RolesPermissions.js\")\n);\nconst ContractDocuments = React.lazy(() =>\n  import(\"./views/Administration/ContractDocuments\")\n);\nconst JobDailyStatus = React.lazy(() =>\n  import(\"./views/Administration/JobsDailyStatus.js\")\n);\nconst RoleCosts = React.lazy(() => import(\"./views/Administration/RoleCosts\"));\n\nconst search = React.lazy(() =>\n  import(\"./views/Customer/InitialCustomerComponent\")\n);\n\nconst QBR = React.lazy(() => import(\"./views/Customer/QBR\"));\nconst searchM = React.lazy(() => import(\"./views/Customer/Search.js\"));\nconst financialplanservice = React.lazy(() =>\n  import(\"./views/Customer/FinancialPlanService.js\")\n);\nconst rolemapping = React.lazy(() => import(\"./views/Customer/RoleMapping.js\"));\nconst edit = React.lazy(() => import(\"./views/Customer/Edit.js\"));\nconst cuscreate = React.lazy(() => import(\"./views/Customer/CusCreate.js\"));\nconst financials = React.lazy(() => import(\"./views/Customer/Financials.js\"));\nconst accountplan = React.lazy(() => import(\"./views/Customer/AccountPlan.js\"));\nconst ContractorCosts = React.lazy(() =>\n  import(\"./views/Customer/ContractorCosts\")\n);\n\nconst InnovationDashboard = React.lazy(() =>\n  import(\"./views/Customer/InnovationDashboard\")\n);\n\nconst UploadRoleCost = React.lazy(() =>\n  import(\"./views/Customer/UploadRoleCost\")\n);\nconst SolutionMapping = React.lazy(() =>\n  import(\"./views/Customer/SolutionMapping\")\n);\nconst View = React.lazy(() => import(\"./views/Customer/View\"));\nconst ProjectInvoiceDetails = React.lazy(() =>\n  import(\"./views/Customer/ProjectInvoiceDetails\")\n);\nconst ProjectStatusReport = React.lazy(() =>\n  import(\"./views/Customer/ProjectStatusReport\")\n);\nconst EngagementAllocations = React.lazy(() =>\n  import(\"./views/Customer/EngagementAllocations\")\n);\nconst Documents = React.lazy(() => import(\"./views/Customer/Documents\"));\nconst forecastSupply = React.lazy(() =>\n  import(\"./views/FullfimentComponent/ResourceForcastSupply\")\n);\nconst benchMatrix = React.lazy(() =>\n  import(\"./views/FullfimentComponent/BenchMatrics\")\n);\nconst resourceRequest = React.lazy(() =>\n  import(\"./views/FullfimentComponent/ResourceRequest\")\n);\nconst demandAndSupply = React.lazy(() =>\n  import(\"./views/FullfimentComponent/DemandAndSupply\")\n);\nconst staffingGM = React.lazy(() =>\n  import(\"./views/FullfimentComponent/StaffingGM\")\n);\nconst subkconversiontrend = React.lazy(() =>\n  import(\"./views/FullfimentComponent/SubkConversionTrend\")\n);\n\nconst reports = React.lazy(() => import(\"./views/ReportsComponent/Report\"));\nconst ReporteeReport = React.lazy(() =>\n  import(\"./views/ReportsComponent/ReporteeReport\")\n);\nconst AllocatedandBilledhoursReport = React.lazy(() =>\n  import(\"./views/ReportsComponent/AllocatedandBilledhoursReport\")\n);\nconst ResourceEntryReport = React.lazy(() =>\n  import(\"./views/ReportsComponent/ResourceEntryReport\")\n);\nconst TimesheetDetailedReport = React.lazy(() =>\n  import(\"./views/ReportsComponent/TimesheetDetailedReport\")\n);\nconst UnApprovedTime = React.lazy(() =>\n  import(\"./views/ReportsComponent/UnApprovedTime\")\n);\nconst FinanceBillingTimesheetReport = React.lazy(() =>\n  import(\"./views/ReportsComponent/FinanceBillingTimesheetReport\")\n);\nconst FinanceReport = React.lazy(() =>\n  import(\"./views/ReportsComponent/FinanceReport\")\n);\nconst RevenueReport = React.lazy(() =>\n  import(\"./views/ReportsComponent/RevenueReport\")\n);\nconst BillingReport = React.lazy(() =>\n  import(\"./views/ReportsComponent/BillingReport\")\n);\nconst ProjectResourceReport = React.lazy(() =>\n  import(\"./views/ReportsComponent/ProjectResourceReport\")\n);\nconst ResourceList = React.lazy(() =>\n  import(\"./views/ReportsComponent/ResourceList\")\n);\nconst ResourceUtilizationReport = React.lazy(() =>\n  import(\"./views/ReportsComponent/ResourceUtilizationReport\")\n);\nconst ProjectListForCSAT = React.lazy(() =>\n  import(\"./views/ReportsComponent/ProjectListForCSAT\")\n);\nconst BUAllocationReport = React.lazy(() =>\n  import(\"./views/ReportsComponent/BUAllocationReport\")\n);\nconst ResourceAllocationReport = React.lazy(() =>\n  import(\"./views/ReportsComponent/ResourceAllocationReport\")\n);\nconst ExpenseReport = React.lazy(() =>\n  import(\"./views/ReportsComponent/ExpenseReport\")\n);\n\nconst csat = React.lazy(() => import(\"./views/GovernanceComponent/CSAT\"));\nconst auditcpsetup = React.lazy(() =>\n  import(\"./views/GovernanceComponent/AuditCpSetup\")\n);\nconst pcqa = React.lazy(() => import(\"./views/GovernanceComponent/PCQA\"));\nconst nps = React.lazy(() => import(\"./views/GovernanceComponent/NPS\"));\nconst qms = React.lazy(() => import(\"./views/GovernanceComponent/QMS\"));\n\nconst NPSSurveyQuestions = React.lazy(() =>\n  import(\"./views/GovernanceComponent/NPSSurveyQuestions\")\n);\nconst CSATSurveyQuestions = React.lazy(() =>\n  import(\"./views/GovernanceComponent/CSATSurveyQuestions\")\n);\n\nconst teams = React.lazy(() =>\n  import(\"./views/ResourceSkillsComponent/ResourceSkills\")\n);\nconst teamsProfile = React.lazy(() => import(\"./views/Teams/Profile\"));\nconst fixedPriceCreate = React.lazy(() =>\n  import(\"./views/TimeAndExpenses/FixedPriceCreate\")\n);\nconst fixedPriceOpen = React.lazy(() =>\n  import(\"./views/TimeAndExpenses/FixedPriceOpen\")\n);\nconst fillTimesheets = React.lazy(() =>\n  import(\"./views/TimeAndExpenses/FillTimesheets\")\n);\nconst tnmOpen = React.lazy(() => import(\"./views/TimeAndExpenses/T&MOpen\"));\nconst shiftAllowances = React.lazy(() =>\n  import(\"./views/TimeAndExpenses/ShiftAllownces\")\n);\nconst lockTimesheets = React.lazy(() =>\n  import(\"./views/TimeAndExpenses/LockTimesheets\")\n);\nconst expenses = React.lazy(() =>\n  import(\"./views/TimeAndExpenses/Expenses/Expenses\")\n);\nconst DashboardAllocation = React.lazy(() =>\n  import(\"./views/Dashboard/DashboardAllocation.js\")\n);\nconst helpcontents = React.lazy(() =>\n  import(\"./views/HelpComponent/HelpContents\")\n);\nconst salaryBand = React.lazy(() => import(\"./views/SalaryBand/SalaryBand\"));\nconst releasenotes = React.lazy(() =>\n  import(\"./views/HelpComponent/ReleaseNotes\")\n);\nconst CompetencyDashboard = React.lazy(() =>\n  import(\"./views/Dashboard/Competency.js\")\n);\nconst engDashbord = React.lazy(() =>\n  import(\"./views/DeliveryComponent/ParentDelivery\")\n);\nconst HammerTool = React.lazy(() =>\n  import(\"./views/Administration/HammerTool\")\n);\nconst customerDashboard = React.lazy(() =>\n  import(\"./views/Customer/CustomersTopMenus\")\n);\n\nconst profileopen = React.lazy(() => import(\"./views/Teams/Profile\"));\nconst Accounting = React.lazy(() => import(\"./views/Accounting/Accounting\"));\nconst Tracker = React.lazy(() => import(\"./views/Administration/Tracker\"));\nconst ErrorLogs = React.lazy(() => import(\"./views/Administration/ErrorLogs\"));\nconst ReportIdComponent = React.lazy(() =>\n  import(\"./views/ReportsComponent/ReportIdComponent\")\n);\nconst Baselines = React.lazy(() =>\n  import(\"./views/ProjectComponent/ProjectCompareBaseline\")\n);\n\nconst projectCreate = React.lazy(() =>\n  import(\"./views/ProjectComponent/ProjectCreate\")\n);\nconst customerCreate = React.lazy(() => import(\"./views/Customer/CusCreate\"));\nconst projectOverViewEdit = React.lazy(() =>\n  import(\"./views/ProjectComponent/ProjectEdit\")\n);\n\nconst Invoice = React.lazy(() => import(\"./views/InvoiceComponent/Invoice\"));\n\nimport ProjectCompareBaselineTable from \"./views/ProjectComponent/ProjectCompareBaselineTable\";\nimport ProjectCreate from \"./views/ProjectComponent/ProjectCreate\";\n\nconst compareBaseLineNew = React.lazy(() =>\n  import(\"./views/ProjectComponent/ProjectCompareBaselineTable\")\n);\n\nconst SalesPermissions = React.lazy(() =>\n  import(\"./views/Administration/SalesPermissions\")\n);\n\nconst salesUpload = React.lazy(() =>\n  import(\"./views/SalesUpload/SalesUploadParent\")\n);\n\nconst projectEdit = React.lazy(() =>\n  import(\"./views/ProjectComponent/ProjectEdit\")\n);\n\n// const testCase = React.lazy(()=>import('./views/TestCases/TestCase'))\n\n// const dashboardAllocation = React.lazy(() =>\n//   import(\"./views/DashboardAlComponent/DashboardAllocation.js\")\n// );\n\nfunction routes() {\n  const routes = {\n    routesData: {\n      PipelineTrending: Pipeline,\n      Reviews: Reviews,\n      Management: VendorManagement,\n      Performance: Performance,\n      MyDashboard: MyDashboard,\n      Scorecard: ScoreCard,\n      Opportunities: Opportunities,\n      OpportunityEdit: OpportunityEdit,\n      sfReports: sfReports,\n      RevenueAttainmentMetrics: Attainment,\n      WeeklyPipelineProgress: Progress,\n      \"S/WPlan&Review\": Software,\n      \"ServicesPlan&Review\": Service,\n      Vendors: vendor,\n      Projects: projectOpen,\n      Engagements: Enagagement,\n      Customers: search,\n      \"FinancialPlan&Review\": financialplanservice,\n      RoleMapping: rolemapping,\n      ContractorCosts: ContractorCosts,\n      UploadRoleCosts: UploadRoleCost,\n      Investment: InnovationDashboard,\n      \"Headcount&MarginsTrend\": HeadcountMarginTrend,\n      \"Revenue&MarginAnalysis\": RevenueMarginAnalysis,\n      MonthlyRevenueTrend: MonthlyRevenueTrend,\n      MonthlyRevenueForecast: MonthlyRevenueForecastment,\n      MonthlyPRChangesbyDay: MonthlyPRChangesByDay,\n      RevenueByIndustry: RevenueByIndustry,\n      \"Revenue&MarginVariance\": RevenueMarginVariance,\n      \"Rev.Projections\": RevenueProjections,\n      RolesPermissions: RolesPermission,\n      ContractDocuments: ContractDocuments,\n      JobsDailyStatus: JobDailyStatus,\n      SolutionMapping: SolutionMapping,\n      Search: View,\n      InvoiceDetails: ProjectInvoiceDetails,\n      ProjectStatusReport: ProjectStatusReport,\n      EngagementAllocations: EngagementAllocations,\n      //ResourceSearch: ResourceSearch,\n      \"NBWork-4Prev.Weeks\": NonBillableWork4Weeks,\n      ProjectHealth: ProjectHealth,\n      BillableUtilizationTrend: BillableUtilisationTrend,\n      Hierarchy: Hierarchy,\n      \"Utilisation-FY\": UtilisationFY,\n      CustomDashboard: CustomDashboard,\n      PyramidIndex: PyramidIndex,\n      Documents: Documents,\n      SalaryBand: SalaryBand,\n      ProjectInvoiceDetails: projectInvoiceDetails,\n      \"Forecast/Supply\": forecastSupply,\n      BenchMetrics: benchMatrix,\n      SubkConversionTrend: subkconversiontrend,\n      ResourceRequest: resourceRequest,\n      DemandAndSupply: demandAndSupply,\n      \"StaffingGM%[Deprecated]\": staffingGM,\n      Reports: reports,\n      PCQA: pcqa,\n      NPS: nps,\n      CSAT: csat,\n      QMS: qms,\n      AuditCPSetup: auditcpsetup,\n      NPSSurveyQuestions: NPSSurveyQuestions,\n      CSATSurveyQuestions: CSATSurveyQuestions,\n      // Teams : teams,\n      Profile: teamsProfile,\n      Skills: teams,\n      \"FixedPrice-Create\": fixedPriceCreate,\n      \"FixedPrice-Open\": fixedPriceOpen,\n      FillTimesheets: fillTimesheets,\n      \"T&M-Open\": tnmOpen,\n      ShiftAllownaces: shiftAllowances,\n      LockTimesheets: lockTimesheets,\n      Expenses: expenses,\n      AllocationDashboard: DashboardAllocation,\n      HelpContents: helpcontents,\n      CompetencyDashboard: CompetencyDashboard,\n      SavedSearches: SavedSearch,\n      ReleaseNotes: releasenotes,\n      OpenTopMenu: OpenTopMenu,\n      VendorPerformance: VendorPerformance,\n      HammerTool: HammerTool,\n      Tracker: Tracker,\n      ErrorLogs: ErrorLogs,\n      QBR: QBR,\n      RoleCosts: RoleCosts,\n      Open: Invoice,\n      SalesPermissions: SalesPermissions,\n      Upload: salesUpload,\n    },\n    staticRoutesData: [\n      {\n        path: \"/project/Overview/:projectId\",\n        name: \"project\",\n        element: Overview,\n      },\n      {\n        path: \"/project/taskPlan/:projectId\",\n        name: \"project\",\n        element: Overview,\n      },\n      {\n        path: \"/project/capacityPlan/:projectId\",\n        name: \"project\",\n        element: Overview,\n      },\n      {\n        path: \"/vendor/vendorDoc/:vendorId\",\n        name: \"vendor\",\n        element: vendorDoc,\n      },\n      {\n        path: \"/vendor/reviews/:vendorId\",\n        name: \"vendor\",\n        element: vendorDoc,\n      },\n      // { path: \"/Cost\", name: \"Cost\", element: Cost },\n      {\n        path: \"/cost/viewUpload\",\n        name: \"viewAndUpload\",\n        element: viewAndUpload,\n      },\n      { path: \"/cost/roleView\", name: \"RoleView\", element: RoleView },\n      {\n        path: \"/cost/roleApprovals\",\n        name: \"roleApprovals\",\n        element: roleApprovals,\n      },\n      { path: \"/cost/roleGrid\", name: \"costRoleGrid\", element: costRoleGrid },\n      {\n        path: \"/cost/loginHistory\",\n        name: \"loginHistory\",\n        element: loginHistory,\n      },\n      {\n        path: \"/pmo/OpportunityEdit\",\n        name: \"OpportunityEdit\",\n        element: OpportunityEdit,\n      },\n      {\n        path: \"/pmo/SalesforceReports\",\n        name: \"sfReports\",\n        element: sfReports,\n      },\n      {\n        path: \"/projectInvoiceDetails\",\n        name: \"Project Invoice Details\",\n        element: projectInvoiceDetails,\n      },\n      {\n        path: \"/SalaryBand\",\n        name: \"Salary Band\",\n        element: SalaryBand,\n      },\n      {\n        path: \"/help/helpContents\",\n        name: \"Help Contents\",\n        element: helpcontents,\n      },\n      {\n        path: \"/search/customerSearch/customer/dashboard/:customerId\",\n        name: \"customer\",\n        element: customerDashboard,\n      },\n      {\n        path: \"/customer/engagement/:customerId\",\n        name: \"customer\",\n        element: customerDashboard,\n      },\n      {\n        path: \"/resource/profile/:resourceId\",\n        name: \"teamsProfile\",\n        element: profileopen,\n      },\n      {\n        path: \"/project/compareBaseline\",\n        name: \"Baselines\",\n        element: Baselines,\n      },\n      {\n        path: \"/engagement/Dashboard/:engagementId\",\n        name: \"engagement\",\n        element: engDashbord,\n      },\n      {\n        path: \"/engagement/projects/:engagementId\",\n        name: \"engagement\",\n        element: engDashbord,\n      },\n      {\n        path: \"/help/ReleaseNotes\",\n        name: \"Release Notes\",\n        element: releasenotes,\n      },\n      {\n        path: \"/report/getReport/reportId/:reportId\",\n        name: \"Report\",\n        element: ReportIdComponent,\n      },\n      {\n        path: \"/expense/Create/:id\",\n        name: \"expenses\",\n        element: expenses,\n      },\n      {\n        path: \"/project/create\",\n        name: \"projectCreate\",\n        element: projectCreate,\n      },\n      {\n        path: \"/project/Info/:projectId\",\n        name: \"project\",\n        element: projectEdit,\n      },\n      {\n        path: \"/customer/create\",\n        name: \"customer\",\n        element: customerCreate,\n      },\n      {\n        path: \"project/edit/:projectId\",\n        name: \"project\",\n        element: projectOverViewEdit,\n      },\n\n      /*{\n        path: \"/report/getReport/reportId=21\",\n        name: \"Report\",\n        element: AllocatedandBilledhoursReport,\n      },\n      {\n        path: \"/report/getReport/reportId=9\",\n        name: \"Report\",\n        element: ResourceEntryReport,\n      },\n      {\n        path: \"/report/getReport/reportId=12\",\n        name: \"Report\",\n        element: TimesheetDetailedReport,\n      },\n      {\n        path: \"/report/getReport/reportId=30\",\n        name: \"Report\",\n        element: UnApprovedTime,\n      },\n      {\n        path: \"/report/getReport/reportId=11\",\n        name: \"Report\",\n        element: FinanceBillingTimesheetReport,\n      },\n      {\n        path: \"/report/getReport/reportId=29\",\n        name: \"Report\",\n        element: FinanceReport,\n      },\n      {\n        path: \"/report/getReport/reportId=31\",\n        name: \"Report\",\n        element: RevenueReport,\n      },\n      {\n        path: \"/report/getReport/reportId=16\",\n        name: \"Report\",\n        element: BillingReport,\n      },\n      {\n        path: \"/report/getReport/reportId=25\",\n        name: \"Report\",\n        element: ProjectResourceReport,\n      },\n      {\n        path: \"/report/getReport/reportId=14\",\n        name: \"Report\",\n        element: ResourceList,\n      },\n      {\n        path: \"/report/getReport/reportId=33\",\n        name: \"Report\",\n        element: ResourceUtilizationReport,\n      },\n      {\n        path: \"/report/getReport/reportId=22\",\n        name: \"Report\",\n        element: ProjectListForCSAT,\n      },\n      {\n        path: \"/report/getReport/reportId=24\",\n        name: \"Report\",\n        element: BUAllocationReport,\n      },\n      {\n        path: \"/report/getReport/reportId=23\",\n        name: \"Report\",\n        element: ResourceAllocationReport,\n      },\n      {\n        path: \"/report/getReport/reportId=32\",\n        name: \"Report\",\n        element: ExpenseReport,\n      },*/\n      {\n        path: \"/accounting\",\n        name: \"Accounting\",\n        element: Accounting,\n      },\n      // {\n      //   path: \"/fulfilment/SubkConversionTrend\",\n      //   name: \"SubkConversionTrend\",\n      //   element: subkconversiontrend,\n      // },\n      {\n        path: \"/project/baseline\",\n        name: \"compareBaseLineNew\",\n        element: compareBaseLineNew,\n      },\n      {\n        path: \"/stackView\",\n        name: \"ExpenseStackView\",\n        element: ExpenseStackView,\n      },\n    ],\n  };\n\n  return routes;\n}\n\nexport default routes();\n\n// const routes = [\n//   { path: \"sales/pipeline\", name: \"pipeline\", element: Pipeline, exact: true },\n//   { path: \"sales/reviews\", name: \"reviews\", element: Reviews, exact: true },\n//   { path: \"sales/scoreCard\", name: \"ScoreCard\", element: ScoreCard },\n//   { path: \"sales/attainment\", name: \"Attainment\", element: Attainment },\n//   { path: \"sales/progress\", name: \"Progress\", element: Progress },\n//   {\n//     path: \"/SelectSEDialogBox\",\n//     name: \"SelectSEDialogBox\",\n//     element: SelectSEDialogBox,\n//   },\n//   { path: \"sales/insideSales\", name: \"InsideSales\", element: InsideSales },\n//   // { path: '/Cost', name: 'Cost', element: Cost },\n//   { path: \"/cost/viewUpload\", name: \"viewAndUpload\", element: viewAndUpload },\n//   { path: \"/cost/roleView\", name: \"RoleView\", element: RoleView },\n//   {\n//     path: \"/cost/roleApprovals\",\n//     name: \"roleApprovals\",\n//     element: roleApprovals,\n//   },\n//   { path: \"/cost/roleGrid\", name: \"costRoleGrid\", element: costRoleGrid },\n//   { path: \"/cost/loginHistory\", name: \"loginHistory\", element: loginHistory },\n//   { path: \"sales/software\", name: \"Software\", element: Software },\n//   { path: \"sales/service\", name: \"Service\", element: Service },\n//   // { path: '/testCase', name: 'TestCase', element: testCase },\n//   { path: \"/richtext\", name: \"richtext\", element: richtext },\n//   { path: \"/vt\", name: \"vt\", element: vt },\n//   { path: \"/vendor/vendors\", name: \"vendor\", element: vendor },\n//   { path: \"/vendor/create\", name: \"vendor\", element: create },\n//   { path: \"/vendor/management\", name: \"vendor\", element: VendorManagement },\n//   { path: \"/vendor/performance\", name: \"vendor\", element: Performance },\n//   { path: \"/vendor/vendorDoc/:vendorId\", name: \"vendor\", element: vendorDoc },\n//   { path: \"/vendor/reviews/:vendorId\", name: \"vendor\", element: vendorDoc },\n//   { path: \"/project\", name: \"Project\", element: project },\n//   { path: \"/project/Overview/:projectId\", name: \"project\", element: Overview },\n//   { path: \"/project/projectopen\", name: \"projectOpen\", element: projectOpen },\n//   { path: \"/delivery\", name: \"Delivery\", element: delivery },\n//   {\n//     path: \"/projectInvoiceDetails\",\n//     name: \"Project Invoice Details\",\n//     element: projectInvoiceDetails,\n//   },\n// ];\n\n// export default routes;\n","import React, { Suspense, useEffect, useState } from \"react\";\nimport { Navigate, Route, Routes } from \"react-router-dom\";\nimport { CContainer, CRow, CSpinner } from \"@coreui/react\";\n\n// routes config\nimport routes from \"../routes\";\nimport axios from \"axios\";\nimport { environment } from \"../environments/environment\";\n\nconst AppContent = () => {\n  const loggedUserId = localStorage.getItem(\"resId\");\n\n  const baseUrl = environment.baseUrl;\n\n  const [routesData, setRoutesData] = useState([]);\n\n  useEffect(() => {\n    getRouterMenus();\n  }, [routes]);\n\n  const getRouterMenus = () => {\n    let routesDt = [];\n    axios({\n      method: \"GET\",\n      url: baseUrl + `/CommonMS/master/getMenus?loggedUserId=${loggedUserId}`,\n    }).then((resp) => {\n      let data = resp.data;\n\n      for (let i = 0; i < data.length; i++) {\n        let subMenusRawData = data[i][\"subMenus\"];\n        if (subMenusRawData.length > 0) {\n          formattingSubMenusRawData(subMenusRawData, routesDt);\n        } else {\n          formattingSubMenusRawData([data[i]], routesDt);\n        }\n      }\n\n      let staticRoutesData = routes[\"staticRoutesData\"];\n\n      for (let i = 0; i < staticRoutesData.length; i++) {\n        routesDt.push(staticRoutesData[i]);\n      }\n\n      // console.log(\"in line 44---\");\n      // console.log(routesDt);\n\n      setRoutesData(routesDt);\n    });\n  };\n\n  const formattingSubMenusRawData = (subMenusRawData, routesDt) => {\n    for (let j = 0; j < subMenusRawData.length; j++) {\n      const routePathData = {\n        path: \"\",\n        name: \"\",\n        element: null,\n      };\n      routePathData[\"path\"] = subMenusRawData[j][\"url_path\"].replaceAll(\n        \"::\",\n        \"/\"\n      );\n      routePathData[\"name\"] = subMenusRawData[j][\"display_name\"].replaceAll(\n        \" \",\n        \"\"\n      );\n\n      routePathData[\"element\"] = routes[\"routesData\"][routePathData[\"name\"]];\n\n      if (\n        subMenusRawData[j][\"url_path\"]\n          .replaceAll(\"::\", \"/\")\n          .includes(\"/pmo/projectInvoiceDetails\")\n      ) {\n        console.log(subMenusRawData[j]);\n        console.log(routePathData);\n        console.log(routePathData[\"name\"]);\n      }\n\n      routesDt.push(routePathData);\n    }\n\n    // console.log(\"in line 82---\");\n    // console.log(routesDt);\n  };\n\n  return (\n    <CContainer fluid className=\"pageContainer\">\n      <CRow>\n        <Suspense fallback={\"\"}>\n          <Routes>\n            {routesData.map((route, idx) => {\n              return (\n                route.element && (\n                  <Route\n                    key={idx}\n                    path={route.path}\n                    exact={route.exact}\n                    name={route.name}\n                    element={<route.element />}\n                  />\n                )\n              );\n            })}\n            <Route path=\"/\" element={<Navigate to=\"md/project\" replace />} />\n          </Routes>\n        </Suspense>\n      </CRow>\n    </CContainer>\n  );\n};\n\nexport default React.memo(AppContent);\n","import React, { useEffect, useRef, useState } from \"react\";\nimport { NavLink, useNavigate } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { CContainer, CHeader, CHeaderNav, CHeaderToggler } from \"@coreui/react\";\nimport CIcon from \"@coreui/icons-react\";\nimport { FiLogOut } from \"react-icons/fi\";\nimport { cilMenu } from \"@coreui/icons\";\nimport { set } from \"../reducers/AppHeaderReducer\";\nimport { BiCheck } from \"react-icons/bi\";\nimport axios from \"axios\";\nimport { Avatar } from \"@mui/material\";\nimport { environment } from \"../environments/environment\";\nimport moment from \"moment\";\nimport \"../scss/_variables.scss\";\nimport blueTheme from \"../assets/theme-preview/blue.jpg\";\nimport orangeTheme from \"../assets/theme-preview/orange.jpg\";\nimport greenTheme from \"../assets/theme-preview/green.jpg\";\n\nconst AppHeader = () => {\n  const [disp, setDisp] = useState(false);\n  const dispatch = useDispatch();\n  const sidebarShow = useSelector((state) => state.appHeaderState.sidebarShow);\n  const userName = localStorage.getItem(\"resName\");\n  const userId = localStorage.getItem(\"resId\");\n  const lastUpdatedDt = localStorage.getItem(\"lastUpdatedDt\");\n  const loginCount7Days = localStorage.getItem(\"loginCount7Days\");\n  const loginCount30Days = localStorage.getItem(\"loginCount30Days\");\n  const navigate = useNavigate();\n  const baseUrl = environment.baseUrl;\n  const dropdownRef = useRef(null);\n\n  const [profileImgSrc, setProfileImgSrc] = useState([]);\n  const getProfile = () => {\n    axios({\n      method: \"get\",\n      url: baseUrl + `/LayoutMS/auth/displayImage?userId=${userId}`,\n    }).then((res) => {\n      let data = res.data;\n      const profileImgSrc = \"data:image/jpeg;charset=utf-8;base64,\" + data;\n      setProfileImgSrc(profileImgSrc);\n    });\n  };\n\n  const [activeTheme, setActiveTheme] = useState(\"_theme1\");\n\n  const handleThemeChange = (theme) => {\n    if (theme !== activeTheme) {\n      setActiveTheme(theme);\n      localStorage.setItem(\"selectedTheme\", theme);\n\n      if (theme === \"_theme1\") {\n        document.documentElement.style.setProperty(\"--primary\", \"#02277f\");\n        document.documentElement.style.setProperty(\"--accent\", \"#15a7ea\");\n      } else if (theme === \"theme2\") {\n        document.documentElement.style.setProperty(\"--primary\", \"#030e4f\");\n        document.documentElement.style.setProperty(\"--accent\", \"#f6ae1f\");\n      } else if (theme === \"theme3\") {\n        document.documentElement.style.setProperty(\"--primary\", \"#222538\");\n        document.documentElement.style.setProperty(\"--accent\", \"#73C9B7\");\n      }\n    }\n  };\n  const storedMainTheme = () => {\n    const storedTheme = localStorage.getItem(\"selectedTheme\");\n    if (storedTheme) {\n      handleThemeChange(storedTheme);\n    }\n    console.log(storedTheme);\n  };\n  useEffect(() => {\n    storedMainTheme();\n  }, []);\n\n  const logout = () => {\n    localStorage.clear();\n\n    document.documentElement.style.setProperty(\"--primary\", \"#02277f\");\n    document.documentElement.style.setProperty(\"--accent\", \"#15a7ea\");\n\n    navigate(\"/\");\n  };\n\n  useEffect(() => {\n    getProfile();\n  }, []);\n\n  const homeScreenmsg = useSelector(\n    (state) => state.selectedSEState.homeScreenMessage\n  );\n\n  const homeScreenSubmenuName = useSelector(\n    (state) => state.selectedSEState.homeScreenSubmenu\n  );\n\n  const toggleDropdown = () => {\n    setDisp(!disp);\n  };\n\n  useEffect(() => {\n    // Function to handle clicks outside of the dropdown\n    function handleClickOutside(event) {\n      if (dropdownRef.current && !dropdownRef.current.contains(event.target)) {\n        // Clicked outside the dropdown, so close it\n        setDisp(false);\n      }\n    }\n\n    // Add event listener when the component mounts\n    document.addEventListener(\"mousedown\", handleClickOutside);\n\n    // Clean up the event listener when the component unmounts\n    return () => {\n      document.removeEventListener(\"mousedown\", handleClickOutside);\n    };\n  }, []);\n\n  return (\n    <div>\n      <CHeader position=\"sticky\">\n        <CContainer fluid>\n          <CHeaderToggler\n            className=\"ps-1\"\n            onClick={() => dispatch(set({ sidebarShow: !sidebarShow }))}\n          >\n            <CIcon icon={cilMenu} size=\"lg\" />\n          </CHeaderToggler>\n          <CHeaderNav className=\"headerRight\">\n            {/* <AppHeaderDropdown /> */}\n            <img src=\"prolifics-logo.png\" alt=\"\" className=\"headerLogo\" />\n            {/* <p className=\"userName\">\n              <Avatar\n                src={\n                  `${profileImgSrc}` == \"\"\n                    ? `profiles/emp_007.png`\n                    : `${profileImgSrc}`\n                }\n                className=\"profileImg\"\n              /> */}\n            {/* Welcome */}\n            {/* <span>\n                <b>{userName}</b>\n              </span>\n            </p> */}\n            {/* <span className=\"logoutIcon\" onClick={logout}>\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                width=\"46.122\"\n                height=\"40.411\"\n                viewBox=\"0 0 46.122 40.411\"\n              >\n                <g transform=\"translate(-162.18 -159.75)\">\n                  <path d=\"M187.541,200.161H167.795a5.615,5.615,0,0,1-5.615-5.615V165.365a5.615,5.615,0,0,1,5.615-5.615H187.54a5.614,5.614,0,0,1,5.614,5.614v1.9a1.505,1.505,0,1,1-3.011,0v-1.895a2.6,2.6,0,0,0-2.6-2.6H167.795a2.6,2.6,0,0,0-2.6,2.6v29.182a2.6,2.6,0,0,0,2.6,2.6H187.54a2.6,2.6,0,0,0,2.6-2.6v-1.567a1.505,1.505,0,0,1,3.011,0v1.567A5.613,5.613,0,0,1,187.541,200.161Z\" />\n                  <path\n                    d=\"M462.382,385.145l-6.676-6.676a1.506,1.506,0,0,0-2.129,2.129l4.1,4.1.064.061h-16.4a1.505,1.505,0,0,0,0,3.011h16.3l-4.564,4.564a1.284,1.284,0,0,0,.141,1.988,1.811,1.811,0,0,0,2.292-.163l6.881-6.881A1.505,1.505,0,0,0,462.382,385.145Z\"\n                    transform=\"translate(-254.522 -206.384)\"\n                  />\n                </g>\n              </svg>\n            </span> */}\n\n            <div className=\"loggedinUserDetails\" onClick={toggleDropdown}>\n              <div className=\"loggedinUserTopSection\">\n                <Avatar\n                  src={\n                    `${profileImgSrc}` == \"\"\n                      ? `profiles/emp_007.png`\n                      : `${profileImgSrc}`\n                  }\n                  className=\"userProfileImg\"\n                />\n                <div className=\"loggedinUser\">\n                  <span className=\"loggedinUserName\">{userName}</span>\n                  <div className=\"userLastLogin\">\n                    <span>Last login:</span>\n                    <span className=\"loginTime\">\n                      {moment(lastUpdatedDt).format(\"DD/MM/yyyy\") ==\n                      \"Invalid date\"\n                        ? \"--\"\n                        : moment(lastUpdatedDt).format(\"DD/MM/yyyy\")}\n                    </span>\n                  </div>\n                </div>\n              </div>\n              {disp && (\n                <div className=\"userDetailsDropdown\" ref={dropdownRef}>\n                  <div className=\"lastLogins\">\n                    <div>\n                      Last 7 days count:<span>{loginCount7Days}</span>\n                    </div>\n                    <div>\n                      Last 30 days count:<span>{loginCount30Days}</span>\n                    </div>\n                  </div>\n                  <div className=\"blackout\"></div>\n                  <div className=\"userThemes\">\n                    <div className=\"themeTitle\">Choose Theme</div>\n                    <div className={`themeOptions ${activeTheme}`}>\n                      <div\n                        onClick={() => handleThemeChange(\"_theme1\")}\n                        title=\"Blue\"\n                        className=\"themePreview\"\n                      >\n                        <img src={blueTheme} alt=\"\" />\n                      </div>\n                      <div\n                        onClick={() => handleThemeChange(\"theme2\")}\n                        title=\"Orange\"\n                        className=\"themePreview\"\n                      >\n                        <img src={orangeTheme} alt=\"\" />\n                      </div>\n                      <div\n                        onClick={() => handleThemeChange(\"theme3\")}\n                        title=\"Green\"\n                        className=\"themePreview\"\n                      >\n                        <img src={greenTheme} alt=\"\" />\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"userLogoutBtn\" onClick={logout}>\n                    <span>Logout</span>\n                    <FiLogOut />\n                  </div>\n                </div>\n              )}\n            </div>\n          </CHeaderNav>\n        </CContainer>\n      </CHeader>\n      {homeScreenmsg ? (\n        <div>\n          <div className=\"statusMsg success\">\n            <span className=\"errMsg\">\n              <BiCheck size=\"1.4em\" /> &nbsp; Home Page has been set to{\" \"}\n              {homeScreenSubmenuName} successfully\n            </span>\n          </div>\n        </div>\n      ) : (\n        \"\"\n      )}\n    </div>\n  );\n};\nexport default AppHeader;\n","import {\n  CModal,\n  CModalBody,\n  CModalHeader,\n  CModalTitle,\n  CFooter,\n} from \"@coreui/react\";\nimport axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport Draggable from \"react-draggable\";\nimport { BiCheck } from \"react-icons/bi\";\nimport { useDispatch } from \"react-redux\";\nimport { environment } from \"../../environments/environment\";\nimport {\n  updateHomeScreenmsg,\n  updateSubmenuName,\n} from \"../../reducers/SelectedSEReducer\";\n\nfunction HomeScreenPopUp(props) {\n  const { subMenueId, visible, setVisible, subMenueName } = props;\n  const loggedUserId = localStorage.getItem(\"resId\");\n  const baseUrl = environment.baseUrl;\n  const [addmsg, setAddmsg] = useState(false);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(updateSubmenuName(subMenueName));\n  }, [subMenueName]);\n  const setHomeScreen = () => {\n    setVisible(false);\n    axios({\n      method: \"get\",\n      url:\n        baseUrl +\n        `/CommonMS/master/setHomeScreen?loggedUserId=${loggedUserId}&actionId=${subMenueId}`,\n    }).then((res) => {\n      let data = res.data;\n      // setAddmsg(true);\n\n      setTimeout(() => {\n        dispatch(updateHomeScreenmsg(true));\n      }, 2000);\n      dispatch(updateHomeScreenmsg(false));\n\n      // setTimeout(() => {\n      //   setAddmsg(false);\n      setVisible(false);\n      // }, 2000);\n      window.location.reload();\n    });\n  };\n\n  const handleClose = () => {\n    // Prevent the modal from closing when clicking outside by checking a condition\n    if (!addmsg) {\n      setVisible(false);\n    }\n  };\n\n  return (\n    <div>\n      <CModal\n        visible={visible}\n        // onClose={handleClose}\n        size=\"sm\"\n        className=\" ui-dialog\"\n      >\n        <CModalHeader className=\"hgt22\">\n          <CModalTitle>\n            <span className=\"ft16\">Save Home Page</span>\n          </CModalTitle>\n        </CModalHeader>\n        {/* {addmsg ? (\n            <div className=\"statusMsg success\">\n              <span className=\"errMsg\">\n                <BiCheck size=\"1.4em\" /> &nbsp; Set Home page as a{\" \"}\n                {subMenueName}\n              </span>\n            </div>\n          ) : (\n            \"\"\n          )} */}\n        <CModalBody>\n          <p style={{ fontSize: \"14px\", color: \"black\" }}>\n            Do you want to set {subMenueName} as home page?\n          </p>\n        </CModalBody>\n        <CFooter\n          style={{\n            borderBottomLeftRadius: \"var(--cui-modal-inner-border-radius)\",\n            borderBottomRightRadius: \"var(--cui-modal-inner-border-radius)\",\n          }}\n        >\n          <div\n            className=\"btn-container center my-2\"\n            style={{ marginLeft: \"30%\" }}\n          >\n            <button\n              type=\"delete\"\n              className=\"btn btn-primary\"\n              onClick={() => {\n                setHomeScreen();\n              }}\n            >\n              {\" \"}\n              Yes{\" \"}\n            </button>\n            <button\n              type=\"button\"\n              className=\"btn btn-secondary\"\n              onClick={() => setVisible(false)}\n            >\n              {\" \"}\n              No{\" \"}\n            </button>\n          </div>\n        </CFooter>\n      </CModal>\n    </div>\n  );\n}\n\nexport default HomeScreenPopUp;\n","import React, { useEffect, useState } from \"react\";\nimport { NavLink, useLocation } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\n\nimport { CBadge } from \"@coreui/react\";\nimport { FaHome } from \"react-icons/fa\";\nimport HomeScreenPopUp from \"./header/HomeScreenPopUp\";\nimport axios from \"axios\";\nimport { environment } from \"../environments/environment\";\n\nexport const AppSidebarNav = ({ items }) => {\n  const location = useLocation();\n  const loggedUserId = localStorage.getItem(\"resId\");\n  const baseUrl = environment.baseUrl;\n  const [visible, setVisible] = useState(false);\n  const [subMenueId, setSubMenueId] = useState(\"\");\n  const [subMenueName, setSubMenueName] = useState(\"\");\n  const [getHomeScreenId, setGetHomeScreenId] = useState([]);\n\n  const getHomeScreen = () => {\n    axios({\n      method: \"get\",\n      url:\n        baseUrl + `/CommonMS/master/getHomeScreen?loggedUserId=${loggedUserId}`,\n    }).then((res) => {\n      let data = res.data;\n      setGetHomeScreenId(data);\n    });\n  };\n\n  useEffect(() => {\n    getHomeScreen();\n  }, []);\n\n  const navLink = (name, icon, badge, item) => {\n    return (\n      <>\n        <div>\n          {icon && icon}\n          {name && name}\n          {badge && (\n            <CBadge color={badge.color} className=\"ms-auto\">\n              {badge.text}\n            </CBadge>\n          )}\n          {/* <div>{item != undefined ? <FaHome /> : \"\"}</div> */}\n        </div>\n      </>\n    );\n  };\n\n  const navItem = (item, index) => {\n    const { component, name, badge, icon, ...rest } = item;\n    const Component = component;\n\n    return (\n      <>\n        <span className=\"navElem\">\n          <Component\n            onClick={() => {\n              let top = document.getElementsByClassName(\n                \"sidebar sidebar-fixed\"\n              )[0];\n              if (top != undefined) {\n                if (top.classList.contains(\"hide\") == false) {\n                  top.classList.add(\"hide\");\n                }\n              }\n            }}\n            {...(rest.to &&\n              !rest.items && {\n                component: NavLink,\n              })}\n            key={parseInt(item[\"id\"] !== undefined ? item?.id : index)}\n            {...rest}\n          >\n            {navLink(name, icon, badge, item)}\n          </Component>\n          {item.id == getHomeScreenId.userActionId ? (\n            <span\n              className={\n                item.id == getHomeScreenId.userActionId\n                  ? \"currentHome\"\n                  : \"makeHome\"\n              }\n            >\n              <FaHome title=\"Home Page\" />\n            </span>\n          ) : [\n              1063, 273, 6, 1035, 404, 370, 963, 5, 416, 918, 412, 408, 1024,\n              287, 1070, 819, 1026, 1022, 453, 317, 1059, 1072, 865, 913, 1029,\n              898, 1074, 785, 875, 876, 871, 982, 788, 881, 872, 873, 424, 395,\n              480, 757, 763, 478, 490, 940, 27, 413, 392, 744, 868, 223, 24, 21,\n              14, 284,\n            ].includes(item.id) || item.id == undefined ? (\n            \"\"\n          ) : (\n            <span\n              className={\n                item.id == getHomeScreenId.userActionId\n                  ? \"currentHome\"\n                  : \"makeHome\"\n              }\n              onClick={() => {\n                setSubMenueId(item.id);\n                setSubMenueName(item.name);\n                setVisible(true);\n              }}\n            >\n              <FaHome title=\"Set As Home Page\" />\n            </span>\n          )}\n        </span>\n      </>\n    );\n  };\n  const navGroup = (item, index) => {\n    const { component, name, icon, to, ...rest } = item;\n    const Component = component;\n    return (\n      <span>\n        <Component\n          idx={\n            item[\"id\"] !== undefined\n              ? String.fromCharCode(parseInt(65 + index)) + \"\" + item?.id\n              : String.fromCharCode(parseInt(65 + index)) + \"\" + index\n          }\n          key={\n            item[\"id\"] !== undefined\n              ? String.fromCharCode(parseInt(65 + index)) + \"\" + item?.id\n              : String.fromCharCode(parseInt(65 + index)) + \"\" + index\n          }\n          toggler={navLink(name, icon)}\n          visible={location.pathname.startsWith(to)}\n          {...rest}\n        >\n          {item.items?.map((item, index) =>\n            item.items ? navGroup(item, index) : navItem(item, index)\n          )}\n        </Component>\n      </span>\n    );\n  };\n\n  return (\n    <React.Fragment>\n      {items &&\n        items.map((item, index) => (\n          <>{item.items ? navGroup(item, index) : navItem(item, index)}</>\n        ))}\n      {visible ? (\n        <HomeScreenPopUp\n          subMenueId={subMenueId}\n          visible={visible}\n          setVisible={setVisible}\n          subMenueName={subMenueName}\n        />\n      ) : (\n        \"\"\n      )}\n    </React.Fragment>\n  );\n};\n\nAppSidebarNav.propTypes = {\n  items: PropTypes.arrayOf(PropTypes.any).isRequired,\n};\n","import React, { useEffect, useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport {\n  CSidebar,\n  CSidebarBrand,\n  CSidebarNav,\n  CSidebarToggler,\n} from \"@coreui/react\";\n\nimport { AppSidebarNav } from \"./AppSidebarNav\";\nimport { CNavGroup, CNavItem } from \"@coreui/react\";\n\nimport SimpleBar from \"simplebar-react\";\nimport \"simplebar/dist/simplebar.min.css\";\nimport CIcon from \"@coreui/icons-react\";\nimport { cilChartPie, cilPuzzle, cilStar, cilMoney } from \"@coreui/icons\";\nimport axios from \"axios\";\nimport { environment } from \"../environments/environment\";\nimport { set } from \"../reducers/AppHeaderReducer\";\n\n// sidebar nav config\n// import navigation from \"../_nav\";\n// import { SubdirectoryArrowLeftTwoTone } from \"@mui/icons-material\";\n\nconst AppSidebar = () => {\n  const loggedUserId = localStorage.getItem(\"resId\");\n  // const baseUrl = environment.commonbaseUrl;\n  const baseUrl = environment.baseUrl;\n\n  const dispatch = useDispatch();\n  const unfoldable = useSelector(\n    (state) => state.appHeaderState.sidebarUnfoldable\n  );\n\n  const sidebarShow = useSelector((state) => state.appHeaderState.sidebarShow);\n  const [menusData, setMenusData] = useState([]);\n\n  let top = document.getElementsByClassName(\"sidebar sidebar-fixed\")[0];\n\n  useEffect(() => {\n    getMenus();\n    removingHideClass();\n  }, []);\n\n  const removingHideClass = () => {\n    // let top = document.getElementsByClassName(\"sidebar sidebar-fixed\")[0];\n\n    if (top != undefined) {\n      setTimeout(() => {\n        top.addEventListener(\n          \"click\",\n          function (params) {\n            if (top != undefined) {\n              if (top.classList.contains(\"hide\")) {\n                top.classList.remove(\"hide\");\n              }\n            }\n          },\n          true\n        );\n      }, 1000);\n    }\n  };\n\n  const getMenus = () => {\n    // setMenusData\n\n    axios({\n      method: \"GET\",\n      url: baseUrl + `/CommonMS/master/getMenus?loggedUserId=${loggedUserId}`,\n    }).then((resp) => {\n      let data = resp.data;\n      // .map((menu) => {\n      //   if (menu.subMenus) {\n      //     menu.subMenus = menu.subMenus.filter(\n      //       (subMenu) =>\n      //         subMenu.display_name !== \"Monthly Revenue Trend\" &&\n      //         subMenu.display_name !== \"Revenue & Margin Variance\" &&\n      //         subMenu.display_name !== \"Rev. Projections\" &&\n      //         subMenu.display_name !== \"Project Timesheet (Deprecated)\" &&\n      //         subMenu.display_name !== \"Financial Plan & Review\" &&\n      //         subMenu.display_name !== \"Billable Utilization Trend\" &&\n      //         subMenu.display_name !== \"Utilisation - FY\" &&\n      //         subMenu.display_name !== \"NB Work - 4  Prev. Weeks\" &&\n      //         subMenu.display_name !== \"Practice Calls [Deprecated]\"\n      //     );\n      //   }\n      //   return menu;\n      // });\n\n      let mainContentMenu = [];\n\n      for (let i = 0; i < data.length; i++) {\n        const subMenusData = {\n          component: CNavGroup,\n          name: \"Project\",\n          icon: \"\",\n          items: [],\n        };\n\n        const objData = {};\n        let subMenuDtt =\n          data[i][\"subMenus\"].length > 0 ? data[i][\"subMenus\"] : [data[i]];\n        if (subMenuDtt.length > 0) {\n          subMenusData[\"name\"] = data[i][\"display_name\"];\n          let subMenusDttt = formattingSubMenus(subMenuDtt);\n\n          switch (\n            subMenusData[\"name\"]\n            // case \"Fullfilment\":\n            //   subMenusDttt.push({\n            //     component: CNavItem,\n            //     name: \"Subk Conversion Trend\",\n            //     to: \"/fulfilment/SubkConversionTrend\",\n            //   });\n\n            //   subMenusDttt.push(\n            //     {\n            //       component: CNavItem,\n            //       name: \"Forecast/Supply\",\n            //       to: \"/fulfilment/ForecastAndSupply\",\n            //     }\n            //   );\n            //   break;\n\n            // default:\n            //   break;\n          ) {\n          }\n\n          // if (subMenusData.name !== \"Vendors\" && subMenusData.name !== \"Reports\" &&\n          //   subMenusData.name !== \"Fullfilment\" && subMenusData.name !== \"Governance\" &&\n          //   subMenusData.name !== \"Innovation\" && subMenusData.name !== \"Invoicing\"\n          //   && subMenusData.name !== \"Administration\" &&\n          //   subMenusData.name !== \"Uploads\") {\n          subMenusData[\"items\"] = subMenusDttt;\n          subMenusData[\"id\"] = data[i][\"id\"];\n\n          (subMenusData[\"icon\"] = (\n            <img src={\"/mainmenu/\" + data[i][\"icon_name\"]} alt=\"\" />\n          )),\n            mainContentMenu.push(subMenusData);\n          // }\n        } else {\n          mainContentMenu.push(formattingSubMenus(subMenuDtt));\n        }\n\n        setMenusData(mainContentMenu);\n      }\n\n      mainContentMenu.push({\n        component: CNavItem,\n        name: \"Project Invoice Details\",\n        to: \"/projectInvoiceDetails\",\n        icon: <CIcon icon={cilStar} customClassName=\"nav-icon\" />,\n      });\n\n      mainContentMenu.push({\n        component: CNavGroup,\n        name: \"Cost\",\n        icon: <CIcon icon={cilStar} customClassName=\"nav-icon\" />,\n        items: [\n          {\n            component: CNavItem,\n            name: \"Salary Band\",\n            to: \"/salaryBand\",\n          },\n          {\n            component: CNavItem,\n            name: \"View / Upload\",\n            to: \"/cost/viewUpload\",\n          },\n          {\n            component: CNavItem,\n            name: \"Role View\",\n            to: \"/cost/roleView\",\n          },\n          {\n            component: CNavItem,\n            name: \"Role Approvals\",\n            to: \"/cost/roleApprovals\",\n          },\n          {\n            component: CNavItem,\n            name: \"Role Grid\",\n            to: \"/cost/roleGrid\",\n          },\n          {\n            component: CNavItem,\n            name: \"Login History\",\n            to: \"/cost/loginHistory\",\n          },\n        ],\n      });\n\n      mainContentMenu.push({\n        component: CNavGroup,\n        name: \"Help\",\n        icon: <CIcon icon={cilStar} customClassName=\"nav-icon\" />,\n        items: [\n          {\n            component: CNavItem,\n            name: \"Release Notes\",\n            to: \"/help/ReleaseNotes\",\n          },\n          {\n            component: CNavItem,\n            name: \"Help Contents\",\n            to: \"/help/helpContents\",\n          },\n          {\n            component: CNavItem,\n            name: \"Support\",\n            to: \"https://pep.prolifics.com/\",\n          },\n          {\n            component: CNavItem,\n            name: \"Feedback\",\n            to: \"/help/dummy\",\n          },\n        ],\n      });\n\n      mainContentMenu.push({\n        component: CNavItem,\n        name: \"Accounting\",\n        to: \"/accounting\",\n        icon: <CIcon icon={cilStar} customClassName=\"nav-icon\" />,\n      });\n\n      const salesIndex = mainContentMenu.findIndex(\n        (menu) => menu.name === \"Sales\"\n      );\n\n      // mainContentMenu[salesIndex].items.push({\n      //   component: CNavItem,\n      //   name: \"Opportunity Edit\",\n      //   to: \"/pmo/OpportunityEdit\",\n      //   // icon: <CIcon icon={cilStar} customClassName=\"nav-icon\" />,\n      // });\n      // mainContentMenu[salesIndex].items.push({\n      //   component: CNavItem,\n      //   name: \"Salesforce Reports\",\n      //   to: \"/pmo/SalesforceReports\",\n      //   // icon: <CIcon icon={cilStar} customClassName=\"nav-icon\" />,\n      // });\n\n      // setMenusData(mainContentMenu);\n    });\n  };\n\n  const formattingSubMenus = (subMenuDtt) => {\n    let subMenusDt = [];\n    for (let j = 0; j < subMenuDtt.length; j++) {\n      const singleMenu = {\n        component: CNavItem,\n        name: \"Delivery\",\n        to: \"/delivery\",\n        icon: \"\",\n        // submenus\n      };\n      singleMenu[\"name\"] = subMenuDtt[j][\"display_name\"];\n      singleMenu[\"id\"] = subMenuDtt[j][\"id\"];\n      singleMenu[\"to\"] = subMenuDtt[j][\"url_path\"].replaceAll(\"::\", \"/\");\n      singleMenu[\"icon\"] = (\n        <img src={\"/submenus/\" + subMenuDtt[j][\"icon_name\"]} alt=\"\" />\n      );\n      subMenusDt.push(singleMenu);\n    }\n    return subMenusDt.length > 0 ? subMenusDt : subMenusDt[0];\n  };\n\n  return (\n    <CSidebar\n      position=\"fixed\"\n      unfoldable={unfoldable}\n      visible={sidebarShow}\n      onClick={() => {\n        console.log(\"working\");\n      }}\n      onVisibleChange={(visible) => {\n        dispatch(set({ sidebarShow: visible }));\n      }}\n    >\n      <CSidebarBrand to=\"/\">\n        <div className=\"logo\">\n          <img src=\"ppm.png\" alt=\"\" /> <span class=\"logoTxt\">PPM</span>\n        </div>\n      </CSidebarBrand>\n      <CSidebarNav>\n        <SimpleBar>\n          <AppSidebarNav items={menusData} />\n        </SimpleBar>\n      </CSidebarNav>\n      <CSidebarToggler\n        className=\"d-none d-lg-flex\"\n        onClick={() => dispatch(set({ sidebarUnfoldable: !unfoldable }))}\n      />\n    </CSidebar>\n    // </span>\n  );\n};\n\nexport default React.memo(AppSidebar);\n","import React from 'react'\nimport { AppContent, AppSidebar, AppFooter, AppHeader } from '../components/index'\n\nconst DefaultLayout = () => {\n  return (\n    <div>\n      <AppSidebar />\n      <div className=\"wrapper d-flex flex-column min-vh-100\">\n        <AppHeader />\n        <div className=\"body \">\n          <AppContent />\n        </div>\n        {/* <AppFooter /> */}\n      </div>\n    </div>\n  )\n}\n\nexport default DefaultLayout\n","import React, { useEffect, useRef, useState } from \"react\";\nimport { FilterMatchMode, FilterOperator } from \"primereact/api\";\nimport { DataTable } from \"primereact/datatable\";\nimport { InputText } from \"primereact/inputtext\";\nimport \"./ErrorLogsTable.scss\";\nimport ExcelJS from \"exceljs\";\n\nfunction ErrorLogTable(props) {\n  const {\n    data,\n    rows,\n    col,\n    headerdatagroup,\n    linkColumns,\n    linkColumnsRoutes,\n    dynamicColumns,\n    headerData,\n    setHeaderData,\n    exportData,\n    customFilters,\n    customFilterValue,\n    setCustomFilterValue,\n    fileName,\n  } = props;\n  const [mainData, setMainData] = useState([]);\n  const [bodyData, setBodyData] = useState([]);\n  const [exportColumns, setExportColumns] = useState([]);\n  const dt = useRef(null);\n  useEffect(() => {\n    setMainData(JSON.parse(JSON.stringify(data)));\n  }, [data]);\n\n  useEffect(() => {\n    if (mainData.length > 0) {\n      setHeaderData(mainData[0]);\n      setBodyData(mainData.splice(1));\n\n      let dtt = [];\n      let headDt = mainData[0];\n\n      Object.keys(headDt).forEach((d) => {\n        dtt.push({ title: d, dataKey: headDt[d] });\n      });\n\n      setExportColumns(dtt);\n    }\n  }, [mainData]);\n\n  const filtersData = {\n    contains: { value: null, matchMode: FilterMatchMode.CONTAINS },\n  };\n\n  const [filters1, setFilters1] = useState({\n    global: filtersData[\"contains\"],\n  });\n\n  useEffect(() => {\n    setFilters1({\n      global: filtersData[\"contains\"],\n    });\n  }, [headerData]);\n  const [globalFilterValue1, setGlobalFilterValue1] = useState(\"\");\n\n  const clearFilter1 = () => {\n    initFilters1();\n  };\n\n  const initFilters1 = () => {\n    setGlobalFilterValue1(\"\");\n  };\n\n  const onGlobalFilterChange1 = (e) => {\n    const value = e.target.value;\n    let _filters1 = { ...filters1 };\n    _filters1[\"global\"].value = value;\n    setFilters1(_filters1);\n    setGlobalFilterValue1(value);\n  };\n\n  const RenderCustomFilters = () => {\n    let cstFtlrs = customFilters;\n\n    switch (cstFtlrs[\"type\"]) {\n      case \"select\":\n        return (\n          <select\n            id={cstFtlrs[\"id\"]}\n            onChange={(e) => {\n              setCustomFilterValue(e.target.value);\n            }}\n          >\n            {Object.keys(cstFtlrs[\"data\"]).map((d) => {\n              return (\n                <option\n                  selected={customFilterValue == d ? true : false}\n                  value={d}\n                >\n                  {cstFtlrs[\"data\"][d]}\n                </option>\n              );\n            })}\n          </select>\n        );\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const exportCSV = (selectionOnly) => {\n    dt.current.exportCSV({ selectionOnly });\n  };\n\n  const saveAsExcelFile = (buffer, fileName) => {\n    import(\"file-saver\").then((module) => {\n      if (module && module.default) {\n        let EXCEL_TYPE =\n          \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8\";\n        let EXCEL_EXTENSION = \".xlsx\";\n        const data = new Blob([buffer], { type: EXCEL_TYPE });\n        module.default.saveAs(data, fileName + EXCEL_EXTENSION);\n      }\n    });\n  };\n\n  const exportExcel = () => {\n    import(\"xlsx\").then((xlsx) => {\n      const headers = Object.keys(data[0]);\n      const uniqueHeaders = [...new Set(headers)];\n      const worksheetData = data.map((item) =>\n        uniqueHeaders.map((header) => {\n          const value = item[header];\n          if (header === \"revenue\" && typeof value === \"string\") {\n            const floatValue = parseFloat(value);\n            return isNaN(floatValue) ? value : floatValue.toLocaleString();\n          }\n          if (header === \"scheduledDate\" && moment(value).isValid()) {\n            return moment(value).format(\"DD-MMM-YYYY\");\n          } else {\n            return value;\n          }\n        })\n      );\n\n      const dataRows = worksheetData.map((item) => Object.values(item));\n\n      const workbook = new ExcelJS.Workbook();\n\n      const worksheet = workbook.addWorksheet(fileName);\n      for (let i = 0; i < dataRows.length; i++) {\n        const row = worksheet.addRow(dataRows[i]);\n      }\n      const boldRow = [1];\n      boldRow.forEach((index) => {\n        const row = worksheet.getRow(index);\n        row.font = { bold: true };\n      });\n      workbook.xlsx.writeBuffer().then((buffer) => {\n        const blob = new Blob([buffer], {\n          type: \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",\n        });\n        saveAs(blob, fileName);\n      });\n    });\n  };\n\n  const exportPdf = () => {\n    import(\"jspdf\").then((jsPDF) => {\n      import(\"jspdf-autotable\").then(() => {\n        const doc = new jsPDF.default(0, 0);\n        doc.autoTable(exportColumns, data);\n        doc.save(fileName + \".pdf\");\n      });\n    });\n  };\n  // ... Your existing code\n\n  const printTable = () => {\n    openPrintWindow();\n  };\n\n  const openPrintWindow = () => {\n    const printWindow = window.open(\"\", \"_blank\");\n    if (!printWindow) return;\n\n    const tableContent = generatePrintTableContent();\n\n    printWindow.document.write(`\n    <html>\n      <head>\n        <title>Print Table</title>\n        <link rel=\"stylesheet\" type=\"text/css\" href=\"path-to-your-print-styles.css\">\n      </head>\n      <body>\n        <h1>PPM :: VMG Search</h1>\n        ${tableContent}\n      </body>\n    </html>\n  `);\n\n    printWindow.document.close();\n    printWindow.print();\n  };\n\n  const generatePrintTableContent = () => {\n    // Use the 'products' state or any other data you want to print\n    const tableRows = data.map(\n      (data) =>\n        `<tr>\n      <td>${data.vendorId}</td>\n      <td>${data.vendor_name}</td>\n      <td>${data.contactName}</td>\n      <td>${data.phone}</td>\n      <td>${data.email}</td>\n      <td>${data.contryName}</td>\n      <td>${data.nxtRvwDt}</td>\n      <td>${data.signedDt}</td>\n      <td>${data.expireDt}</td>\n      <td>${data.website}</td>\n    </tr>`\n    );\n\n    return `\n    <table>\n      <thead>\n        <tr>\n       \n        </tr>\n      </thead>\n      <tbody>\n        ${tableRows.join(\"\")}\n      </tbody>\n    </table>\n  `;\n  };\n\n  // ... Your existing code\n\n  const header = (\n    <div className=\"flex align-items-center justify-content-end gap-2\">\n      {/* ... Your existing export options ... */}\n      {exportData?.includes(\"PRINT\") && (\n        <span\n          className=\"pi pi-print print\"\n          onClick={printTable}\n          title=\"Print\"\n        />\n      )}\n    </div>\n  );\n\n  // ... Your existing code\n\n  const renderHeader1 = () => {\n    return (\n      <div className=\"flex  flex-row-reverse\">\n        {customFilters != undefined && (\n          <span>\n            <RenderCustomFilters />\n          </span>\n        )}\n\n        <div className=\"exportBtn ml-3\">\n          {exportData?.includes(\"CSV\") && (\n            <span\n              className=\"pi pi-file csv\"\n              onClick={() => exportCSV(false)}\n              title=\"CSV\"\n            />\n          )}\n          {exportData?.includes(\"XLS\") && (\n            <span\n              className=\"pi pi-file-excel excel\"\n              onClick={exportExcel}\n              title=\"Export to Excel\"\n            />\n          )}\n          {exportData?.includes(\"PDF\") && (\n            <span\n              className=\"pi pi-file-pdf pdf\"\n              onClick={exportPdf}\n              title=\"PDF\"\n            />\n          )}\n          {exportData?.includes(\"PRINT\") && (\n            <span\n              className=\"pi pi-print print\"\n              onClick={printTable}\n              title=\"Print\"\n            />\n          )}\n        </div>\n        <span className=\"p-input-icon-left tableGsearch\">\n          <i className=\"pi pi-search\" />\n          <InputText\n            defaultValue={globalFilterValue1}\n            onChange={onGlobalFilterChange1}\n            placeholder=\"Keyword Search\"\n          />\n        </span>\n      </div>\n    );\n  };\n\n  const header1 = renderHeader1();\n\n  return (\n    <div>\n      <div className=\"card darkHeader\">\n        {Object.keys(headerData).length > 0 && (\n          <DataTable\n            paginatorTemplate=\"RowsPerPageDropdown FirstPageLink PrevPageLink CurrentPageReport NextPageLink LastPageLink\"\n            currentPageReportTemplate=\"{first} to {last} of {totalRecords}\"\n            rowsPerPageOptions={[10, 25, 50]} //------------->\n            value={bodyData}\n            paginator\n            showGridlines\n            rows={rows}\n            dataKey=\"id\"\n            filters={filters1}\n            responsiveLayout=\"scroll\"\n            header={header1}\n            emptyMessage={<center>No Records found.</center>}\n            ref={(el) => {\n              dt.current = el;\n            }}\n            className=\"primeReactDataTable \" //// customerEngament\n          >\n            {/* <Column header={headerdatagroup} colSpan={col} /> */}\n\n            {dynamicColumns}\n          </DataTable>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default ErrorLogTable;\n","import React, { useState } from \"react\";\nimport { CBreadcrumb, CBreadcrumbItem } from \"@coreui/react\";\nimport { useLocation } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport Menu from \"@mui/material/Menu\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport { Link } from \"react-router-dom\";\nimport HomeIcon from \"@mui/icons-material/Home\";\n// import BiChevronRight from \"@mui/icons-material/ArrowRight\";\nimport { BiChevronRight } from \"react-icons/bi\";\nimport DashboardIcon from \"@mui/icons-material/Dashboard\";\nimport HelpIcon from \"@mui/icons-material/Help\";\nimport { FaHome } from \"react-icons/fa\";\n\nconst ScreenBreadcrumbs = ({ routes, currentScreenName }) => {\n  const location = useLocation();\n  const [anchorEl, setAnchorEl] = useState(null);\n  const [submenuClicked, setSubmenuClicked] = useState(false);\n  // const [currentScreenName, setCurrentScreenName] = useState(\"\");\n\n  const handleMenuOpen = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleMenuClose = () => {\n    setAnchorEl(null);\n  };\n\n  const handleParentClick = (event, route) => {\n    event.preventDefault();\n\n    if (!submenuClicked && route.subMenus && route.subMenus.length > 0) {\n      handleMenuOpen(event);\n    }\n\n    setSubmenuClicked(false);\n\n    // Set the current screen name\n    // setCurrentScreenName(route.display_name);\n  };\n\n  const handleSubMenuClick = (event, urlPath) => {\n    event.stopPropagation();\n    console.log(\"Submenu clicked:\", urlPath);\n    const modifiedUrlPath = urlPath.replace(/::/g, \"/\");\n    let path = \"/#\" + modifiedUrlPath;\n    window.open(path, \"_blank\");\n    handleMenuClose();\n    setSubmenuClicked(true);\n  };\n\n  const renderSubMenuItems = (subMenus) => {\n    return subMenus.map((subMenu) => (\n      <MenuItem\n        className=\"MuiMenuItem-root\"\n        style={{ fontSize: \"12px\" }}\n        key={subMenu.id}\n        onClick={(event) => handleSubMenuClick(event, subMenu.url_path)}\n      >\n        {/* <Link\n                    to={subMenu.url_path.replace(/::/g, \"/\")}\n                    style={{ textDecoration: \"none\", color: \"black\" }}\n                > */}\n        {subMenu.display_name}\n        {/* </Link> */}\n      </MenuItem>\n    ));\n  };\n\n  const renderBreadcrumbItem = (route, index) => {\n    const isLast = index === routes.length - 1;\n    const isActive = location.pathname === route.url_path;\n    const hasSubMenus = route.subMenus && route.subMenus.length > 0;\n    const itemClass = hasSubMenus ? \"has-submenus\" : \"\";\n    let homepath = \"/#\" + location.pathname;\n\n    return (\n      <CBreadcrumbItem\n        active={isLast || isActive}\n        key={index}\n        style={{ \"--cui-breadcrumb-divider\": <BiChevronRight /> }}\n      >\n        {index === 0 && (\n          <a\n            className=\"breadcrumbHomeIcon\"\n            onClick={() => {\n              homepath == \"/#/resource/dashboard\"\n                ? window.location.reload()\n                : (window.location.href = \"/#/resource/dashboard\");\n            }}\n          >\n            {/* {console.log(location.pathname, \"location.pathname\")} */}\n\n            <FaHome />\n          </a>\n        )}\n        {/* {!isLast && ( */}\n        <BiChevronRight />\n        {/* )} */}\n        <a\n          className={itemClass}\n          onClick={(event) => handleParentClick(event, route)}\n          style={{\n            verticalAlign: \"middle\",\n            color: isActive ? \"#187fde\" : \"inherit\",\n            cursor: hasSubMenus ? \"pointer\" : \"default\",\n          }}\n        >\n          {route.display_name != \"home\" && <>{route.display_name}</>}\n        </a>\n        {currentScreenName.length > 0 && (\n          <>\n            <BiChevronRight />\n            {currentScreenName.map((name, idx) => (\n              <span key={idx}>\n                {name}\n                {idx !== currentScreenName.length - 1 && <BiChevronRight />}\n              </span>\n            ))}\n          </>\n        )}\n        {hasSubMenus && (\n          <Menu\n            anchorEl={anchorEl}\n            open={Boolean(anchorEl)}\n            onClose={handleMenuClose}\n            transformOrigin={{ horizontal: \"right\", vertical: \"top\" }}\n            anchorOrigin={{ horizontal: \"right\", vertical: \"bottom\" }}\n            classes={{\n              paper: \"breadcrumbs-menu-paper\",\n            }}\n          >\n            {renderSubMenuItems(route.subMenus)}\n          </Menu>\n        )}\n      </CBreadcrumbItem>\n    );\n  };\n\n  return (\n    <CBreadcrumb className=\"m-0 breadCrumbUI\">\n      {routes.map((route, index) => renderBreadcrumbItem(route, index))}\n    </CBreadcrumb>\n  );\n};\n\nScreenBreadcrumbs.propTypes = {\n  routes: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.shape({\n        url_path: PropTypes.string,\n        display_name: PropTypes.string,\n        icon_name: PropTypes.string,\n        subMenus: PropTypes.arrayOf(\n          PropTypes.shape({\n            id: PropTypes.number,\n            display_name: PropTypes.string,\n            url_path: PropTypes.string,\n          })\n        ),\n      }),\n    ])\n  ).isRequired,\n  currentScreenName: PropTypes.arrayOf(PropTypes.string).isRequired,\n};\n\nexport default ScreenBreadcrumbs;\n","import React, { useState } from \"react\";\nimport { CModal } from \"@coreui/react\";\nimport { CModalBody } from \"@coreui/react\";\nimport { CModalFooter } from \"@coreui/react\";\nimport { CModalHeader } from \"@coreui/react\";\nimport { CModalTitle } from \"@coreui/react\";\nimport { CButton } from \"@coreui/react\";\nimport \"./CostCss.scss\";\nimport resourcesCostListSampleFile from \"../../assets/files/resourcesCostListSampleFile.xlsx\";\nimport SalaryBandUploadSampleFile from \"../../assets/files/SalaryBandUploadSampleFile.xlsx\";\nimport { AiOutlineWarning } from \"react-icons/ai\";\nimport { TiTickOutline } from \"react-icons/ti\";\nimport { BiCheck } from \"react-icons/bi\";\nimport { useEffect } from \"react\";\n\nfunction UploadExcelSheet(props) {\n  const {\n    excelUploadPopUp,\n    setExcelUploadPopUp,\n    excelFile,\n    setExcelFile,\n    uploadExcelSheet,\n    getResourcesCostData,\n    formData,\n    stateValue,\n    setLoaderTimer,\n    updateMsg,\n    setUpdateMsg,\n  } = props;\n\n  const [excelSheetValidation, setExcelSheetValidation] = useState(\"\");\n  const [confirmationMsg, setConfirmationMsg] = useState(\"\");\n  const [disable, setDisabled] = useState(false);\n  const resourceId = localStorage.getItem(\"resId\");\n  let month = formData.month;\n\n  const onFileChangeHandler = (e) => {\n    let fileName = e.target.files[0];\n    let fileType = fileName.name.split(\".\");\n    if (fileType[fileType.length - 1].includes(\"xlsx\")) {\n      setExcelSheetValidation(\"\");\n      setConfirmationMsg(\"\");\n      var excelFormData = new FormData();\n      excelFormData.append(\"file\", e.target.files[0]);\n\n      if (stateValue !== \"UploadRoleTypeCost\") {\n        excelFormData.append(\"secretKey\", formData.secretKey);\n      }\n\n      excelFormData.append(\"createdDate\", month);\n      excelFormData.append(\"resourceId\", resourceId);\n      setExcelFile(excelFormData);\n    } else {\n      setExcelSheetValidation(\"txtBoxBorderColor\");\n      setConfirmationMsg(\n        <span className=\"statusMsg error col-md-12\">\n          <AiOutlineWarning className=\"confirmMsgIcon\" />\n          Please Upload Supported File Type\n        </span>\n      );\n    }\n  };\n\n  const uploadFileHandler = async () => {\n    if (excelFile != null) {\n      setDisabled(true);\n\n      setLoaderTimer(true);\n      setExcelSheetValidation(\"\");\n      setConfirmationMsg(\"\");\n\n      const response = await uploadExcelSheet();\n      setConfirmationMsg(\n        <span className=\"successMsg statusMsg success col-md-12\">\n          <BiCheck className=\"confirmMsgIcon\" />\n          {\"File Uploaded Successfully\"}\n        </span>\n      );\n      setLoaderTimer(false);\n      console.log(updateMsg, \"updateMsg\");\n      if (\n        stateValue == \"UploadRoleTypeCost\" &&\n        response.data == \"Fill the Data in the Fields\"\n      ) {\n        setDisabled(false);\n        setExcelSheetValidation(\"txtBoxBorderColor\");\n        setConfirmationMsg(\n          <span className=\"statusMsg error col-md-12\">\n            <AiOutlineWarning className=\"confirmMsgIcon\" />\n            Fill the Data in the Fields\n          </span>\n        );\n        return;\n      }\n      // else {\n\n      setTimeout(() => {\n        setConfirmationMsg(\"\");\n        setExcelUploadPopUp(false);\n        setExcelFile(null);\n      }, 2000);\n      setDisabled(false);\n\n      await getResourcesCostData();\n\n      // }\n    } else {\n      setExcelSheetValidation(\"txtBoxBorderColor\");\n      setConfirmationMsg(\n        <span className=\"statusMsg error col-md-12\">\n          <AiOutlineWarning className=\"confirmMsgIcon\" />\n          Please Upload Supported File Type\n        </span>\n      );\n    }\n  };\n\n  return (\n    <div>\n      <CModal\n        size=\"m\"\n        visible={excelUploadPopUp}\n        onClose={() => {\n          setExcelUploadPopUp(false);\n        }}\n      >\n        <CModalHeader className=\"hgt22\">\n          <CModalTitle>\n            <span className=\"ft16\">\n              {stateValue == \"UploadRoleTypeCost\" ? (\n                \"   Upload SalaryBand\"\n              ) : (\n                <>{stateValue + \" \"} Resources Cost List</>\n              )}\n            </span>\n          </CModalTitle>\n        </CModalHeader>\n        <CModalBody>\n          <div>{confirmationMsg}</div>\n          <div className=\"col-md-12 p0\">\n            <span>Please download sample excel before uploading</span>\n\n            <i style={{ marginLeft: \"35px\" }}>\n              <a\n                class=\"pull-right\"\n                href={\n                  stateValue == \"UploadRoleTypeCost\"\n                    ? SalaryBandUploadSampleFile\n                    : resourcesCostListSampleFile\n                }\n                style={{ textDecoration: \"underline\" }}\n              >\n                Download Sample Excel\n              </a>\n            </i>\n          </div>\n          <div>\n            <div class=\"mb-3\">\n              <label for=\"formFile\" class=\"form-label\">\n                Upload File :\n              </label>\n              <input\n                className={`form-control ${excelSheetValidation}`}\n                type=\"file\"\n                id=\"formFile\"\n                onChange={(e) => {\n                  onFileChangeHandler(e);\n                }}\n              />\n              <b>\n                <span style={{ fontSize: \"10px\" }}>{\"(XLXS Format Only)\"}</span>\n              </b>\n            </div>\n          </div>\n        </CModalBody>\n        <CModalFooter>\n          <CButton\n            className=\"popUpCloseButton\"\n            color=\"secondary\"\n            onClick={() => {\n              setExcelUploadPopUp(false);\n            }}\n          >\n            <div className=\"popUpCloseButtonText\">\n              <span>Close</span>\n            </div>\n          </CButton>\n          <CButton\n            onClick={() => {\n              uploadFileHandler();\n            }}\n            color=\"primary\"\n            disabled={disable}\n          >\n            Upload\n          </CButton>\n        </CModalFooter>\n      </CModal>\n    </div>\n  );\n}\n\nexport default UploadExcelSheet;\n","import React, { useState, useEffect } from \"react\";\nimport \"./Loader.scss\";\n\nconst Loader = ({ setsearching, controller, handleAbort }) => {\n  const [time, setTime] = useState(3);\n\n  // const handleAbort = () =>{\n  //   controller.abort();\n  //   setsearching(false);\n  // }\n\n  useEffect(() => {\n    const interval = setInterval(\n      () => setTime((prevState) => prevState + 1),\n      1000\n    );\n    return () => clearInterval(interval);\n  }, []);\n\n  return (\n    <>\n      {/* Loader 1 */}\n      {/* <div className=\"loaderContainer\">\n        <div className=\"loaderContent\">\n          <span className=\"spinner\">\n            <span className=\"timeTicker\">{time}</span>\n            <div class=\"lds-ripple\">\n              <div></div>\n              <div></div>\n            </div>\n          </span>\n          <button className=\"btn btn-primary abortBtn\" onClick={handleAbort}>\n            Abort Request\n          </button>\n        </div>\n      </div> */}\n\n      {/* Loader 2 */}\n      {/* <div class=\"gaugeLoaderContainer\">\n        <div className=\"blackBox\">\n          <div class=\"loaderElem\">\n            <span>{time}</span>\n            <div class=\"gaugeLoader\"></div>\n          </div>\n          <button class=\"abortBtn\" onClick={handleAbort}>\n            Abort\n          </button>\n        </div>\n      </div> */}\n\n      {/* Loader 3 */}\n      <div class=\"ballLoaderContainer\">\n        <div className=\"snowLoaderContent\">\n          <span className=\"overlayTimer\">{time}</span>\n          <div class=\"pl\">\n            <div class=\"pl__outer-ring\"></div>\n            <div class=\"pl__inner-ring\"></div>\n            <div class=\"pl__track-cover\"></div>\n            <div class=\"pl__ball\">\n              <div class=\"pl__ball-texture\"></div>\n              <div class=\"pl__ball-outer-shadow\"></div>\n              <div class=\"pl__ball-inner-shadow\"></div>\n              <div class=\"pl__ball-side-shadows\"></div>\n            </div>\n          </div>\n          <button class=\"abortBtn\" onClick={handleAbort}>\n            Abort\n          </button>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Loader;\n","import React, { useEffect, useRef, useState } from \"react\";\nimport { FilterMatchMode, FilterOperator } from \"primereact/api\";\nimport { DataTable } from \"primereact/datatable\";\nimport { InputText } from \"primereact/inputtext\";\nimport jsPDF from \"jspdf\";\nimport \"./CellRendererPrimeReactDataTable.scss\";\nimport ExcelJS from \"exceljs\";\nimport { Column } from \"ag-grid-community\";\n\nrequire(\"jspdf-autotable\");\n\nfunction CellRendererPrimeReactDataTable(props) {\n  const {\n    data,\n    rows,\n    dynamicColumns,\n    headerData,\n    setHeaderData,\n    exportData,\n    customFilters,\n    customFilterValue,\n    setCustomFilterValue,\n    columnStyle,\n    fileName,\n    reportsHeader,\n    reportId,\n    setLoader,\n    permission,\n  } = props;\n\n  const [mainData, setMainData] = useState([]);\n  const [bodyData, setBodyData] = useState([]);\n  const [exportColumns, setExportColumns] = useState([]);\n  const dt = useRef(null);\n  useEffect(() => {\n    setMainData(JSON.parse(JSON.stringify(data)));\n  }, [data]);\n\n  useEffect(() => {\n    if (mainData.length > 0) {\n      setHeaderData(mainData[0]);\n      setBodyData(mainData.splice(1));\n      reportId != undefined ? setLoader(false) : \"\";\n\n      let dtt = [];\n      let headDt = mainData[0];\n\n      Object?.keys(headDt).forEach((d) => {\n        d != \"StatusId\" && dtt.push({ title: headDt[d], dataKey: d });\n      });\n\n      setExportColumns(dtt);\n    }\n  }, [mainData]);\n\n  const filtersData = {\n    contains: { value: null, matchMode: FilterMatchMode.CONTAINS },\n  };\n\n  const [filters1, setFilters1] = useState({\n    global: filtersData[\"contains\"],\n  });\n\n  useEffect(() => {\n    setFilters1({\n      global: filtersData[\"contains\"],\n    });\n  }, [headerData]);\n  const [globalFilterValue1, setGlobalFilterValue1] = useState(\"\");\n\n  const initFilters1 = () => {\n    setGlobalFilterValue1(\"\");\n  };\n\n  const onGlobalFilterChange1 = (e) => {\n    const value = e.target.value;\n    let _filters1 = { ...filters1 };\n    _filters1[\"global\"].value = value;\n    setFilters1(_filters1);\n    setGlobalFilterValue1(value);\n  };\n\n  const RenderCustomFilters = () => {\n    let cstFtlrs = customFilters;\n\n    switch (cstFtlrs[\"type\"]) {\n      case \"select\":\n        return (\n          <select\n            id={cstFtlrs[\"id\"]}\n            onChange={(e) => {\n              setCustomFilterValue(e.target.value);\n            }}\n          >\n            {Object.keys(cstFtlrs[\"data\"]).map((d) => {\n              return (\n                <option\n                  selected={customFilterValue == d ? true : false}\n                  value={d}\n                >\n                  {cstFtlrs[\"data\"][d]}\n                </option>\n              );\n            })}\n          </select>\n        );\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const exportCSV = (selectionOnly) => {\n    dt.current.exportCSV({ selectionOnly });\n  };\n\n  const exportExcel = () => {\n    import(\"xlsx\").then((xlsx) => {\n      const headers = Object.keys(data[0]);\n      const uniqueHeaders = [...new Set(headers)];\n      const worksheetData = data.map((item) =>\n        uniqueHeaders.map((header) => {\n          const value = item[header];\n          if (header === \"revenue\" && typeof value === \"string\") {\n            const floatValue = parseFloat(value);\n            return isNaN(floatValue) ? value : floatValue.toLocaleString();\n          }\n          if (header === \"scheduledDate\" && moment(value).isValid()) {\n            return moment(value).format(\"DD-MMM-YYYY\");\n          } else {\n            return value;\n          }\n        })\n      );\n\n      const dataRows = worksheetData.map((item) => Object.values(item));\n\n      const workbook = new ExcelJS.Workbook();\n\n      const worksheet = workbook.addWorksheet(fileName);\n      for (let i = 0; i < dataRows.length; i++) {\n        const row = worksheet.addRow(dataRows[i]);\n      }\n      const boldRow = [1];\n      boldRow.forEach((index) => {\n        const row = worksheet.getRow(index);\n        row.font = { bold: true };\n      });\n      workbook.xlsx.writeBuffer().then((buffer) => {\n        const blob = new Blob([buffer], {\n          type: \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",\n        });\n        saveAs(blob, fileName);\n      });\n      // workbook.xlsx.writeBuffer().then((buffer) => {\n      //   saveAs(new Blob([buffer]), fileName.xlsx);\n      // });\n    });\n  };\n\n  const exportPdf = () => {\n    print();\n  };\n\n  const print = () => {\n    const pdf = new jsPDF(\"l\", \"mm\", \"a3\");\n    const columns = exportColumns.map((d) => d.title);\n    let rows = [];\n\n    for (let i = 1; i < data.length; i++) {\n      let temp = exportColumns.map((d) => data[i][d[\"dataKey\"]]);\n\n      rows.push(temp);\n    }\n    const columnWidths = [30, 30, 30, 30, 30, 30];\n    pdf.text(15, 30, fileName);\n    const colStyles = {\n      0: { cellWidth: columnWidths[0] },\n      1: { cellWidth: columnWidths[1] },\n      2: { cellWidth: columnWidths[2] },\n      3: { cellWidth: columnWidths[3] },\n      4: { cellWidth: columnWidths[4] },\n      5: { cellWidth: columnWidths[5] },\n    };\n    pdf.autoTable(columns, rows, {\n      startY: 34,\n      theme: \"grid\",\n      styles: {\n        font: \"times\",\n        halign: \"center\",\n        cellPadding: 1,\n        lineWidth: 0.5,\n        lineColor: [0, 0, 0],\n        textColor: [0, 0, 0],\n      },\n      headStyles: {\n        textColor: [0, 0, 0],\n        fontStyle: \"normal\",\n        lineWidth: 0.5,\n        lineColor: [0, 0, 0],\n        fillColor: [166, 204, 247],\n      },\n      alternateRowStyles: {\n        fillColor: [212, 212, 212],\n        textColor: [0, 0, 0],\n        lineWidth: 0.5,\n        lineColor: [0, 0, 0],\n      },\n      rowStyles: {\n        lineWidth: 0.5,\n        lineColor: [0, 0, 0],\n      },\n      tableLineColor: [0, 0, 0],\n      columnStyles: colStyles,\n    });\n    pdf.save(fileName);\n  };\n\n  const renderHeader1 = () => {\n    return (\n      <div>\n        <div>\n          {reportsHeader}\n        </div>\n        <div className=\"flex  flex-row-reverse\">\n\n          {customFilters != undefined && (\n            <span>\n              <RenderCustomFilters />\n            </span>\n          )}\n\n          <div className=\"exportBtn ml-3\">\n            {exportData?.includes(\"CSV\") && (\n              <span\n                className=\"pi pi-file csv\"\n                onClick={() => exportCSV(false)}\n                title=\"CSV\"\n              />\n            )}\n            {exportData?.includes(\"XLS\") && (\n              <span\n                className=\"pi pi-file-excel excel\"\n                onClick={exportExcel}\n                title=\"Export to Excel\"\n              />\n            )}\n            {exportData?.includes(\"PDF\") && (\n              <span\n                className=\"pi pi-file-pdf pdf\"\n                onClick={exportPdf}\n                title=\"Export to PDF\"\n              />\n            )}\n          </div>\n          <span className=\"p-input-icon-left tableGsearch\">\n            <i className=\"pi pi-search\" />\n            <InputText\n              id=\"searchInput\"\n              defaultValue={globalFilterValue1}\n              onChange={onGlobalFilterChange1}\n              placeholder=\"Keyword Search\"\n            />\n          </span>\n        </div>\n      </div>\n    );\n  };\n\n  const header1 = renderHeader1();\n\n  return (\n    <div className=\"darkHeader\">\n      {(Object.keys(headerData).length > 0 && reportId != 20 && reportId != 9) || ((reportId == 20 || reportId == 9) && bodyData.length > 0) ? (\n        <DataTable\n          paginatorTemplate=\"RowsPerPageDropdown FirstPageLink PrevPageLink CurrentPageReport NextPageLink LastPageLink\"\n          currentPageReportTemplate=\"{first} to {last} of {totalRecords}\"\n          rowsPerPageOptions={[10, 25, 50]}\n          value={bodyData}\n          paginator\n          showGridlines\n          rows={rows}\n          columnStyle={columnStyle}\n          dataKey=\"id\"\n          filters={filters1}\n          responsiveLayout=\"scroll\"\n          header={header1}\n          emptyMessage=\"No Records found.\"\n          ref={(el) => {\n            dt.current = el;\n          }}\n          className=\"primeReactDataTable reportsPrimeTable \"  ////customerEngament\n        >\n          {dynamicColumns}\n        </DataTable>\n      ) : \"\"}\n    </div>\n  );\n}\n\nexport default CellRendererPrimeReactDataTable;\n","import React, { useEffect, useState } from \"react\";\nimport { FilterMatchMode, FilterOperator } from \"primereact/api\";\nimport { DataTable } from \"primereact/datatable\";\nimport { Column } from \"primereact/column\";\nimport \"primeicons/primeicons.css\";\nimport \"primereact/resources/themes/lara-light-indigo/theme.css\";\nimport \"primereact/resources/primereact.css\";\nimport \"primeflex/primeflex.css\";\nimport { InputText } from \"primereact/inputtext\";\nimport \"./PrimeReactTable.scss\";\n\nfunction CheckFlatPrimeReactTable(props) {\n  const { data, rows, checkedData, setCheckedData, value, setCheckValidation } =\n    props;\n  const [mainData, setMainData] = useState([]);\n  const [headerData, setHeaderData] = useState([]);\n  const [bodyData, setBodyData] = useState([]);\n  const [checkboxSelect, setCheckboxSelect] = useState();\n  console.log(value);\n\n  const handleChange = (e) => {\n    let data = e.value;\n    let fData = data.map((d) => d.id);\n    {\n      value == \"trackerscreensadder\"\n        ? setCheckedData(data)\n        : setCheckedData(fData[0]);\n    }\n\n    console.log(e);\n\n    setCheckboxSelect(e.value);\n    // setCheckValidation(e.value);\n  };\n\n  useEffect(() => {\n    console.log(\"in line data\");\n    console.log(data);\n\n    setMainData(JSON.parse(JSON.stringify(data)));\n  }, [data]);\n\n  useEffect(() => {\n    if (mainData.length > 0) {\n      setHeaderData(mainData[0]);\n      setBodyData(mainData.splice(1));\n    }\n  }, [mainData]);\n\n  useEffect(() => {\n    console.log(\"in header data useEffect \");\n    console.log(headerData);\n  }, [headerData]);\n\n  useEffect(() => {\n    console.log(\"in bodyData data useEffect \");\n    console.log(bodyData);\n  }, [bodyData]);\n\n  const filtersData = {\n    contains: { value: null, matchMode: FilterMatchMode.CONTAINS },\n  };\n\n  const [filters1, setFilters1] = useState({\n    global: filtersData[\"contains\"],\n  });\n\n  useEffect(() => {\n    setFilters1({\n      global: filtersData[\"contains\"],\n    });\n  }, [headerData]);\n\n  console.log(\"in line 61\");\n  console.log(filters1);\n  console.log(\"in line 45\");\n  console.log(data);\n\n  const [globalFilterValue1, setGlobalFilterValue1] = useState(\"\");\n\n  const clearFilter1 = () => {\n    initFilters1();\n  };\n\n  const initFilters1 = () => {\n    setGlobalFilterValue1(\"\");\n  };\n\n  const onGlobalFilterChange1 = (e) => {\n    const value = e.target.value;\n    let _filters1 = { ...filters1 };\n\n    console.log(_filters1);\n\n    console.log(_filters1);\n\n    _filters1[\"global\"].value = value;\n\n    setFilters1(_filters1);\n    setGlobalFilterValue1(value);\n  };\n\n  const renderHeader1 = () => {\n    return (\n      <div className=\"flex justify-content-between\">\n        <span></span>\n        <span className=\"p-input-icon-left tableGsearch\">\n          <i className=\"pi pi-search\" />\n          <InputText\n            defaultValue={globalFilterValue1}\n            onChange={onGlobalFilterChange1}\n            placeholder=\"Keyword Search\"\n            // style={{ textAlign: \"center\", verticalAlign: \"middle\" }}\n          />\n        </span>\n      </div>\n    );\n  };\n\n  const header1 = renderHeader1();\n\n  const dynamicColumns = Object.keys(headerData)?.map((col, i) => {\n    return <Column sortable key={col} field={col} header={headerData[col]} />;\n  });\n\n  return (\n    <>\n      {Object.keys(headerData).length > 0 && (\n        <div className=\"card\">\n          <DataTable\n            value={bodyData}\n            paginator\n            showGridlines\n            rows={10}\n            dataKey=\"id\"\n            filters={filters1}\n            responsiveLayout=\"scroll\"\n            header={header1}\n            emptyMessage=\"No Data found.\"\n            selection={checkboxSelect}\n            className=\"customerEngament primeReactDataTable\"\n            onSelectionChange={(e) => handleChange(e)}\n          >\n            <Column selectionMode=\"multiple\" style={{ textAlign: \"center\" }} />\n            {dynamicColumns}\n          </DataTable>\n        </div>\n      )}\n    </>\n  );\n}\n\nexport default CheckFlatPrimeReactTable;\n","import React, { useEffect, useState } from \"react\";\nimport { FilterMatchMode, FilterOperator } from \"primereact/api\";\nimport { DataTable } from \"primereact/datatable\";\nimport { Column } from \"primereact/column\";\nimport \"primeicons/primeicons.css\";\nimport \"primereact/resources/themes/lara-light-indigo/theme.css\";\nimport \"primereact/resources/primereact.css\";\nimport \"primeflex/primeflex.css\";\nimport { InputText } from \"primereact/inputtext\";\nimport \"./PrimeReactTable.scss\";\nimport { Link } from \"react-router-dom\";\n\nfunction FlatPrimeReactTable(props) {\n  const {\n    data,\n    rows,\n    col,\n    headerdatagroup,\n    linkColumns,\n    linkColumnsRoutes,\n    rowGroupMode,\n    groupRowsBy,\n  } = props;\n  const [mainData, setMainData] = useState([]);\n  const [headerData, setHeaderData] = useState([]);\n  const [bodyData, setBodyData] = useState([]);\n\n  useEffect(() => {\n    setMainData(JSON.parse(JSON.stringify(data)));\n  }, [data]);\n\n  useEffect(() => {\n    if (mainData.length > 0) {\n      setHeaderData(mainData[0]);\n      setBodyData(mainData.splice(1));\n    }\n  }, [mainData]);\n\n  const filtersData = {\n    contains: { value: null, matchMode: FilterMatchMode.CONTAINS },\n  };\n\n  const [filters1, setFilters1] = useState({\n    global: filtersData[\"contains\"],\n  });\n\n  useEffect(() => {\n    setFilters1({\n      global: filtersData[\"contains\"],\n    });\n  }, [headerData]);\n\n  console.log(\"in line 61\");\n  console.log(filters1);\n  console.log(\"in line 45\");\n  console.log(data);\n\n  const [globalFilterValue1, setGlobalFilterValue1] = useState(\"\");\n\n  const clearFilter1 = () => {\n    initFilters1();\n  };\n\n  const initFilters1 = () => {\n    setGlobalFilterValue1(\"\");\n  };\n\n  const onGlobalFilterChange1 = (e) => {\n    const value = e.target.value;\n    let _filters1 = { ...filters1 };\n\n    console.log(_filters1);\n\n    console.log(_filters1);\n\n    _filters1[\"global\"].value = value;\n\n    setFilters1(_filters1);\n    setGlobalFilterValue1(value);\n  };\n\n  const renderHeader1 = () => {\n    return (\n      <div className=\"flex justify-content-between\">\n        <span></span>\n        <span className=\"p-input-icon-left tableGsearch\">\n          <i className=\"pi pi-search\" />\n          <InputText\n            defaultValue={globalFilterValue1}\n            onChange={onGlobalFilterChange1}\n            placeholder=\"Keyword Search\"\n          />\n        </span>\n      </div>\n    );\n  };\n\n  const LinkTemplate = (data) => {\n    console.log(data);\n    let rou = linkColumnsRoutes[0]?.split(\":\");\n    return (\n      <>\n        <Link target=\"_blank\" to={rou[0] + \":\" + data[rou[1]]}>\n          {data[linkColumns]}\n        </Link>\n      </>\n    );\n  };\n\n  const header1 = renderHeader1();\n\n  const dynamicColumns = Object.keys(headerData)?.map((col, i) => {\n    return (\n      <Column\n        sortable\n        key={col}\n        body={linkColumns?.includes(col) && LinkTemplate}\n        field={col}\n        header={headerData[col]}\n      />\n    );\n  });\n  const [checkboxSelect, setCheckboxSelect] = useState([]);\n\n  const handleChange = (e) => {\n    console.log(e);\n\n    setCheckboxSelect(e.value);\n  };\n  return (\n    <>\n      {Object.keys(headerData).length > 0 && (\n        <div className=\"darkHeader\">\n          <DataTable\n            value={bodyData}\n            paginator\n            showGridlines\n            rows={rows}\n            dataKey=\"id\"\n            filters={filters1}\n            responsiveLayout=\"scroll\"\n            header={header1}\n            selection={checkboxSelect}\n            emptyMessage=\"No Records found.\"\n            className=\" primeReactDataTable\" //// customerEngament\n            rowGroupMode={rowGroupMode}\n            groupRowsBy={groupRowsBy}\n            onSelectionChange={(e) => handleChange(e)}\n          >\n            {/* <Column header={headerdatagroup} colSpan={col} /> */}\n\n            {dynamicColumns}\n          </DataTable>\n        </div>\n      )}\n    </>\n  );\n}\n\nexport default FlatPrimeReactTable;\n","import React, { useEffect, useState } from \"react\";\nimport { CModal, CModalBody, CModalHeader, CModalTitle } from \"@coreui/react\";\nimport { MdHelp } from \"react-icons/md\";\n\nfunction GlobalHelp(props) {\n  const [openPopup, setOpenPopup] = useState(false);\n  const { pdfname, name } = props;\n  const folderName = \"helpdocuments\";\n  const pdfPath = `${folderName}/${pdfname}`;\n\n  return (\n    <>\n      {!openPopup && (\n        <button\n          className=\"btn btn-primary btn-help\"\n          type=\"Help\"\n          onClick={() => setOpenPopup(true)}\n        >\n          <b>Help</b>\n          <MdHelp size={\"1.1em\"} style={{ marginRight: 0 }} />\n        </button>\n      )}\n      {openPopup && (\n        <CModal\n          visible={openPopup}\n          size=\"xl\"\n          onClose={() => setOpenPopup(false)}\n          backdrop={\"static\"}\n        >\n          <CModalHeader className=\"\">\n            <CModalTitle>\n              <span className=\"\"> {name}</span>\n            </CModalTitle>\n          </CModalHeader>\n          <CModalBody>\n            <div className=\"align center\">\n              <embed src={pdfPath} width=\"100%\" className=\"embDoc\"></embed>\n            </div>\n          </CModalBody>\n        </CModal>\n      )}\n    </>\n  );\n}\n\nexport default GlobalHelp;\n","import React, { useEffect, useRef } from \"react\";\nimport { FaSave } from \"react-icons/fa\";\nimport { useState } from \"react\";\nimport { environment } from \"../../environments/environment\";\nimport axios from \"axios\";\nimport SaveIcon from \"@mui/icons-material/Save\";\nimport GlobalValidation from \"../ValidationComponent/GlobalValidation\";\nimport { AiFillDelete, AiFillWarning } from \"react-icons/ai\";\n\nimport { CModal, CModalBody, CModalHeader, CModalTitle } from \"@coreui/react\";\nimport { ImCross } from \"react-icons/im\";\nimport { IoMdSave } from \"react-icons/io\";\nimport { useSelector } from \"react-redux\";\n// import Autosuggest from \"react-autosuggest\";\n\nexport default function SavedSearchGlobal(props) {\n  const { setEditAddmsg, pageurl, page_Name, payload } = props;\n  const [openPopup, setOpenPopup] = useState(false);\n  const baseUrl = environment.baseUrl;\n  const loggedUserId = localStorage.getItem(\"resId\");\n  const payloadString = JSON.stringify(payload);\n  const ref = useRef([]);\n  const [section, setSection] = useState([]);\n  const [type, setType] = useState(\"1417\");\n  const [comments, setComments] = useState(\"\");\n  const [dashboardType, setDashboardType] = useState(\"1417\");\n  const [pageName, setPagename] = useState(\"\");\n  const [validationMessage, setValidationMessage] = useState(false);\n  const SelectSEData = useSelector(\n    (state) => state.selectedSEState.directSETreeData\n  );\n  //------------------To Save Filters Data--------------//\n  const handleSaveclick = () => {\n    let valid = GlobalValidation(ref);\n    if (valid) {\n      setValidationMessage(true);\n      return;\n    }\n    const data = {\n      searchName: comments,\n      pageName: page_Name,\n      pageUrl: pageurl,\n      dashboardType: dashboardType,\n      otherExecs: \"0 : 0 \",\n      userId: loggedUserId,\n      section: pageName,\n      savedSections: true,\n      ...payload,\n    };\n    if (payload?.executives === \"1\") {\n      data.executives = SelectSEData;\n    }\n    axios({\n      method: \"post\",\n      url:\n        baseUrl +\n        `/dashboardsms/savedsearch/savedSearchData?userId=${loggedUserId}`,\n      data: data,\n    }).then(function (response) {\n      setEditAddmsg(true);\n      setOpenPopup(false);\n      setTimeout(() => {\n        setEditAddmsg(false);\n      }, 3000);\n    });\n  };\n  //---Get Sections Based on DashboardType and User Id------//\n  const getDatas = () => {\n    let apiUrl;\n    if (type === \"1417\") {\n      apiUrl =\n        baseUrl +\n        `/ProjectMS/stakeholders/getSavesearchMyDashboard?user_id=${loggedUserId}&dashboard_type=1417`;\n    } else if (type === \"1418\") {\n      apiUrl =\n        baseUrl + `/ProjectMS/stakeholders/getSavesearch?dashboard_type=1418`;\n    }\n    axios\n      .get(apiUrl)\n      .then((response) => {\n        const res = response.data;\n        setSection(res);\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  useEffect(() => {\n    getDatas();\n  }, [type]);\n  //-------------------------------//\n  return (\n    <>\n      <IoMdSave\n        className=\"globalSave\"\n        title=\"Save Search Filters\"\n        style={{ cursor: \"pointer\" }}\n        onClick={() => setOpenPopup(true)}\n      />\n      <>\n        <CModal\n          visible={openPopup}\n          size=\"Default\"\n          onClose={() => setOpenPopup(false)}\n          backdrop={\"static\"}\n        >\n          <CModalHeader className=\"SavedSearchGlobalPopup\"></CModalHeader>\n          {validationMessage ? (\n            <div className=\"statusMsg error\">\n              <span className=\"error-block\">\n                <AiFillWarning /> &nbsp;Please select valid values for\n                highlighted fields\n              </span>\n            </div>\n          ) : (\n            \"\"\n          )}\n          <CModalBody>\n            <div className=\"col-md-12\">\n              <div className=\"form-group row mb-2\">\n                <label className=\"col-4\">\n                  Enter Search Name &nbsp;&nbsp;\n                  <span className=\"error-text\">*</span>\n                </label>\n                <span className=\"col-1 p-0\">:</span>\n                <div className=\"col-6\">\n                  <div\n                    className=\"textfield\"\n                    ref={(ele) => {\n                      ref.current[0] = ele;\n                    }}\n                  >\n                    <input\n                      type=\"text\"\n                      name=\"search_name\"\n                      id=\"search_name\"\n                      value={comments}\n                      onChange={(e) => {\n                        const inputValue = e.target.value;\n                        setComments(inputValue);\n                      }}\n                    />\n                  </div>\n                </div>\n              </div>\n              <div className=\"form-group row mb-2\">\n                <label className=\"col-4\" htmlFor=\"\">\n                  Dashboard\n                </label>\n                <span className=\"col-1 p-0\">:</span>\n                <div className=\"col-6\">\n                  <select\n                    id=\"dashboard_type\"\n                    name=\"dashboard_type\"\n                    value={dashboardType}\n                    onChange={(e) => {\n                      setDashboardType(e.target.value);\n                      setType(e.target.value);\n                    }}\n                  >\n                    <option value=\"1417\">My Dashboard </option>\n                    <option value=\"1418\">Org Dashboard</option>\n                  </select>\n                </div>\n              </div>\n              <div className=\"form-group row mb-2\">\n                <label className=\"col-4\" htmlFor=\"\">\n                  Section &nbsp;&nbsp;\n                  <span className=\"error-text\">*</span>\n                </label>\n                <span className=\"col-1 p-0\">:</span>\n                <div className=\"col-6\">\n                  <div>\n                    <input\n                      className=\"textfield\"\n                      id=\"page_name\"\n                      ref={(ele) => {\n                        ref.current[1] = ele;\n                      }}\n                      onChange={(e) => {\n                        setPagename(e.target.value);\n                      }}\n                      value={pageName}\n                      list=\"sectionList\"\n                      // onChange={onSelectionChange}\n                      placeholder=\"Search or Enter & Press to save\"\n                      style={{\n                        padding: \"0 5px\",\n                        width: \"100% \",\n                        borderRadius: \"5px\",\n                        backgroundColor: \"#fff\",\n                        border: \"1px solid #ddd\",\n                        height: \"23px\",\n                        fontSize: \"13px\",\n                      }}\n                    />\n                    <datalist id=\"sectionList\" className=\"text\">\n                      {section.map((section) => (\n                        <option key={section.id} value={section.section} />\n                      ))}\n                    </datalist>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className='className=\"col-md-12 col-sm-12 col-xs-12 btn-container center my-3'>\n              <button className=\"btn btn-primary \" onClick={handleSaveclick}>\n                <SaveIcon />\n                Save\n              </button>\n            </div>\n          </CModalBody>\n        </CModal>\n      </>\n    </>\n  );\n}\n","import axios from \"axios\";\nimport React, { memo } from \"react\";\nimport { environment } from \"../../environments/environment\";\n\nconst competenciesTable = async (\n  data,\n  projectId,\n  roleId,\n  setDataProjectId,\n  setFlag,\n  setTableData\n) => {\n  //   const { data, projectId, roleId, setDataProjectId, setFlag, setTableData } =\n  //     props;\n\n  //   // const temp = (data, projectId, roleId) => {\n\n  let respData = null;\n\n  const baseUrl = environment.baseUrl;\n\n  const criticality = await axios({\n    method: \"get\",\n    url:\n      baseUrl +\n      `/ProjectMS/project/getResCompts?resId=${data}&prjId=${projectId}&roleId=${roleId}`,\n  });\n\n  console.log(\"in line 31-------\");\n  console.log(criticality.data);\n  // .then((res) => {\n  // let criticality = res.data;\n\n  //   const handleMegaBoost = React.useCallback(() => {\n  setTableData(criticality.data);\n  setDataProjectId(data + \"_\" + projectId);\n  setFlag(data == undefined ? false : true);\n  // setCount((currentValue) => currentValue + 1234);\n  //   }, []);\n\n  respData = criticality.data;\n  //   });\n  //   };\n  return criticality.data;\n};\nexport default competenciesTable;\n","import React, { useEffect, useState } from \"react\";\nimport { FilterMatchMode, FilterOperator } from \"primereact/api\";\nimport { DataTable } from \"primereact/datatable\";\nimport { Column } from \"primereact/column\";\nimport \"primeicons/primeicons.css\";\nimport \"primereact/resources/themes/lara-light-indigo/theme.css\";\n// import \"primereact/resources/primereact.css\";\nimport \"primeflex/primeflex.css\";\nimport { InputText } from \"primereact/inputtext\";\n\nfunction BaselineCheckBoxtable(props) {\n  const {\n    data,\n    rows,\n    checkedData,\n    setCheckedData,\n    value,\n    setCheckValidation,\n    setCheckedData1,\n    dynamicColumns,\n    grp4Items,\n  } = props;\n  const [mainData, setMainData] = useState([]);\n  const [headerData, setHeaderData] = useState([]);\n  const [bodyData, setBodyData] = useState([]);\n  const [checkboxSelect, setCheckboxSelect] = useState();\n  console.log(value);\n\n  const handleChange = (e) => {\n    let data = e.value;\n    let fData = data.map((d) => d.id);\n    {\n      value == \"trackerscreensadder\"\n        ? setCheckedData(data)\n        : setCheckedData(fData[0]);\n    }\n\n    let b = String(data.map((f) => f.id));\n    console.log(b);\n    let c = b.replace(/,/g, \";\");\n    console.log(c);\n    setCheckedData1(c);\n    setCheckboxSelect(e.value);\n    setCheckValidation(e.value);\n  };\n\n  useEffect(() => {\n    console.log(\"in line data\");\n    console.log(data);\n\n    setMainData(JSON.parse(JSON.stringify(data)));\n  }, [data]);\n\n  useEffect(() => {\n    if (mainData.length > 0) {\n      setHeaderData(mainData[0]);\n      setBodyData(mainData.splice(1));\n    }\n  }, [mainData]);\n\n  useEffect(() => {\n    console.log(\"in header data useEffect \");\n    console.log(headerData);\n  }, [headerData]);\n\n  useEffect(() => {\n    console.log(\"in bodyData data useEffect \");\n    console.log(bodyData);\n  }, [bodyData]);\n\n  const filtersData = {\n    contains: { value: null, matchMode: FilterMatchMode.CONTAINS },\n  };\n\n  const [filters1, setFilters1] = useState({\n    global: filtersData[\"contains\"],\n  });\n\n  useEffect(() => {\n    setFilters1({\n      global: filtersData[\"contains\"],\n    });\n  }, [headerData]);\n\n  console.log(\"in line 61\");\n  console.log(filters1);\n  console.log(\"in line 45\");\n  console.log(data);\n\n  const [globalFilterValue1, setGlobalFilterValue1] = useState(\"\");\n\n  const clearFilter1 = () => {\n    initFilters1();\n  };\n\n  const initFilters1 = () => {\n    setGlobalFilterValue1(\"\");\n  };\n\n  const onGlobalFilterChange1 = (e) => {\n    const value = e.target.value;\n    let _filters1 = { ...filters1 };\n\n    console.log(_filters1);\n\n    console.log(_filters1);\n\n    _filters1[\"global\"].value = value;\n\n    setFilters1(_filters1);\n    setGlobalFilterValue1(value);\n  };\n\n  const renderHeader1 = () => {\n    return (\n      <div className=\"flex justify-content-between\">\n        <span></span>\n        <span className=\"p-input-icon-left tableGsearch\">\n          <i className=\"pi pi-search\" />\n          <InputText\n            defaultValue={globalFilterValue1}\n            onChange={onGlobalFilterChange1}\n            placeholder=\"Keyword Search\"\n            style={{ textAlign: \"center\", verticalAlign: \"middle\" }}\n          />\n        </span>\n      </div>\n    );\n  };\n\n  const header1 = renderHeader1();\n\n  // const dynamicColumns = Object.keys(headerData)?.map((col, i) => {\n  //   return <Column sortable key={col} field={col}\n  //     header={headerData[col]} title={headerData[col]} />;\n  // });\n\n  return (\n    <div>\n      <div className=\"card darkHeader\">\n        {Object.keys(headerData).length > 0 && (\n          <DataTable\n            paginatorTemplate=\"RowsPerPageDropdown FirstPageLink PrevPageLink CurrentPageReport NextPageLink LastPageLink\"\n            currentPageReportTemplate=\"{first} to {last} of {totalRecords}\"\n            rowsPerPageOptions={[10, 25, 50]}\n            value={bodyData}\n            paginator\n            showGridlines\n            rows={rows}\n            dataKey=\"id\"\n            filters={filters1}\n            responsiveLayout=\"scroll\"\n            header={header1}\n            emptyMessage=\"No customers found.\"\n            selection={checkboxSelect}\n            onSelectionChange={(e) => handleChange(e)}\n            // className=\"  customerEngament\"\n          >\n            {grp4Items[7].is_write == true && (\n              <Column\n                selectionMode=\"multiple\"\n                className=\"align center \"\n                style={{ paddingTop: \"11px\" }}\n              />\n            )}\n            {dynamicColumns}\n          </DataTable>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default BaselineCheckBoxtable;\n","import React, { useEffect, useRef, useState } from \"react\";\nimport axios from \"axios\";\nimport moment from \"moment\";\nimport { MdOutlineSettingsSuggest } from \"react-icons/md\";\nimport { AiOutlineAppstoreAdd } from \"react-icons/ai\";\nimport { MdOutlineCompare } from \"react-icons/md\";\nimport { environment } from \"../../environments/environment\";\nimport FlatPrimeReactTable from \"../PrimeReactTableComponent/FlatPrimeReactTable\";\nimport CheckFlatPrimeReactTable from \"../PrimeReactTableComponent/CheckFlatPrimeReactTable\";\nimport ProjectCompareBaseline from \"./ProjectCompareBaseline\";\nimport { Link, Route, Router, useNavigate } from \"react-router-dom\";\nimport { BiCheck } from \"react-icons/bi\";\nimport Loader from \"../Loader/Loader\";\nimport ProjectCompareBaselineTable from \"./ProjectCompareBaselineTable\";\nimport BaselineCheckBoxtable from \"./BaselineCheckboxtable\";\nimport { Column } from \"ag-grid-community\";\nimport ScreenBreadcrumbs from \"../Common/ScreenBreadcrumbs\";\n\nfunction ProjectBaselines(props) {\n  const { projectId, grp4Items } = props;\n  console.log(grp4Items[7].is_write);\n  const [data, setData] = useState([]);\n  const baseUrl = environment.baseUrl;\n  const [checkedData, setCheckedData] = useState([]);\n  const loggedUserId = localStorage.getItem(\"resId\");\n  const loggedUserName = localStorage.getItem(\"resName\");\n  console.log(loggedUserName);\n  console.log(loggedUserId);\n  const [tabledata, setTableData] = useState([]);\n  const [checkedData1, setCheckedData1] = useState([]);\n  console.log(checkedData1);\n  const [addmsg, setAddmsg] = useState(false);\n  const [projectData, setProjectData] = useState([]);\n  const [loader, setLoader] = useState(false);\n  const [baselineVersion, setBaselineVersion] = useState([]);\n  const [baselineheader, setBaselineHeader] = useState([]);\n  const [baselineheader1, setBaselineHeader1] = useState([]);\n  const [displayTable, setDisplayTable] = useState(null);\n  const [tabHeaders, setTabHeaders] = useState([]);\n  const [headerData, setHeaderData] = useState([]);\n  const ref = useRef([]);\n  const abortController = useRef(null);\n  console.log(baselineVersion[0]);\n  const rows = 25;\n  const [excludedCols, setExcludedCols] = useState([\"col\"]);\n  const [displayColumns, setDisplayColums] = useState([\"\"]);\n  const [columns, setColumns] = useState([]);\n  const [iconState, setIconState] = useState([]);\n  const [details, setDetails] = useState([]);\n\n  // breadcrumbs --\n\n  const [routes, setRoutes] = useState([]);\n  let textContent = \"Delivery\";\n  let currentScreenName = [\"Projects\", \"Open\", \"Monitoring\", \"Baselines\"];\n\n  useEffect(() => {\n    getMenus();\n  }, []);\n\n  const getMenus = () => {\n    // setMenusData\n\n    axios({\n      method: \"GET\",\n      url: baseUrl + `/CommonMS/master/getMenus?loggedUserId=${loggedUserId}`,\n    }).then((resp) => {\n      let data = resp.data;\n\n      data.forEach((item) => {\n        if (item.display_name === textContent) {\n          setRoutes([item]);\n        }\n      });\n    });\n  };\n\n  const dataObject = grp4Items.find(\n    (item) => item.display_name === \"Baselines\"\n  );\n  console.log(dataObject.is_write, \"****\");\n\n  const navigate = useNavigate();\n  const getData = () => {\n    axios\n      .get(\n        baseUrl +\n          `/ProjectMS/Baselines/getBaselinesDetails?object_id=${projectId}`\n      )\n      .then((res) => {\n        const GetData = res.data;\n        for (let i = 0; i < GetData.length; i++) {\n          GetData[i][\"date_created\"] =\n            GetData[i][\"date_created\"] == null\n              ? \"\"\n              : moment(GetData[i][\"date_created\"]).format(\"DD-MMM-YYYY\");\n        }\n        const Headerdata = [\n          {\n            // Select: \" Select\",\n            version_number: \"Version No.\",\n            version_name: \"Version Name\",\n            date_created: \"Created Date\",\n            created_by: \"Created By\",\n          },\n        ];\n        setData(Headerdata.concat(GetData));\n        setData(Headerdata.concat(res.data));\n\n        setTimeout(() => {\n          setLoader(false);\n        }, 100);\n      });\n  };\n  useEffect(() => {\n    getData();\n    getProjectOverviewData();\n  }, []);\n\n  const versionnumber = (data) => {\n    return (\n      <div\n        className=\"ellipsis\"\n        data-toggle=\"tooltip\"\n        style={{ width: \"108px\" }}\n        title={data.version_number}\n      >\n        {data.version_number}\n      </div>\n    );\n  };\n  const versionname = (data) => {\n    return (\n      <div className=\"ellipsis\" data-toggle=\"tooltip\" title={data.version_name}>\n        {data.version_name}\n      </div>\n    );\n  };\n  const datecreated = (data) => {\n    return (\n      <div className=\"ellipsis\" data-toggle=\"tooltip\" title={data.date_created}>\n        {data.date_created}\n      </div>\n    );\n  };\n  const createdby = (data) => {\n    return (\n      <div className=\"ellipsis\" data-toggle=\"tooltip\" title={data.created_by}>\n        {data.created_by}\n      </div>\n    );\n  };\n\n  const dynamicColumns = Object.keys(headerData)?.map((col, i) => {\n    return (\n      <Column\n        sortable\n        key={col}\n        body={\n          // col == \"SNo\" ? SnoAlign :\n          (col == \"version_number\" && versionnumber) ||\n          (col == \"version_name\" && versionname) ||\n          (col == \"date_created\" && datecreated) ||\n          (col == \"created_by\" && createdby)\n        }\n        field={col}\n        header={headerData[col]}\n      />\n    );\n  });\n  useEffect(() => {\n    data[0] && setHeaderData(JSON.parse(JSON.stringify(data[0])));\n  }, [data]);\n  ///-------------------------to post---------------\n  const handleAddClick = () => {\n    const loaderTime = setTimeout(() => {\n      setLoader(true);\n    }, 2000);\n\n    axios({\n      method: \"post\",\n      url: baseUrl + `/ProjectMS/Baselines/CreateBaseline`,\n      data: {\n        ObjectId: projectId,\n        CreatedById: loggedUserId,\n      },\n    }).then((response) => {\n      console.log(response.data);\n      setBaselineVersion(response.data);\n      clearTimeout(loaderTime);\n      setLoader(false);\n      getData();\n      setAddmsg(true);\n      setTimeout(() => {\n        setAddmsg(false);\n      }, 3000);\n    });\n  };\n\n  //-------------------\n  const handleCompareClick = () => {\n    const loaderTime = setTimeout(() => {\n      setLoader(true);\n    }, 2000);\n\n    axios({\n      method: \"post\",\n      url:\n        baseUrl +\n        `/ProjectMS/Baselines/CompareBaseline?objectId=${projectId}&versionIds=${checkedData1}&UserId=${loggedUserId}&isUnVerSel=0`,\n    }).then((res) => {\n      let resp = res.data;\n      console.log(res.data);\n      const GetData = res.data;\n      //             let Headerdata = [{\n      console.log(resp.tableData[0].level);\n\n      let detail = res.data.tableData;\n      console.log(detail[0].level);\n      for (let i = 0; i < detail.length; i++) {\n        console.log(detail[i]);\n        //  detail[i][\"name\"] = detail[i][\"col\"];\n        detail[i][\"lvl\"] = detail[i][\"level\"];\n        detail[i][\"id\"] = detail[i][\"id\"] - 2;\n\n        Object.keys(detail[i]).forEach((d) => {\n          if (\n            d.includes(\"baseline\") &&\n            [\"\", null].includes(detail[i][d]) == false &&\n            detail[i][\"type\"] == \"string\"\n          ) {\n            console.log(detail[i][d]);\n            if (moment(detail[i][d]).isValid()) {\n              detail[i][d] = moment(detail[i][d]).format(\"DD-MMM-yyyy\");\n              console.log(detail[i][d]);\n            } else {\n              detail[i][d] = \"0.00\";\n            }\n          }\n        });\n        console.log(detail[i]);\n      }\n      let cols = res.data.columns.replaceAll(\"'\", \"\").split(\",\");\n\n      setDetails(detail);\n\n      {\n        detail[0][\"col\"] = \"Baseline Data\";\n      }\n      setTableData(detail);\n      setColumns(cols);\n      navigate(\"/project/compareBaseline\", {\n        state: {\n          // \"checkedData\": checkedData,\n          tabledata: detail,\n          projectData: projectData,\n          excludedCols: excludedCols,\n          displayColumns: displayColumns,\n          columns: cols,\n          iconState: iconState,\n          projectId: projectId,\n        },\n      });\n\n      clearTimeout(loaderTime);\n      setLoader(false);\n    });\n  };\n  //0------------------------ Project Headline data------------------------\n  const getProjectOverviewData = () => {\n    axios({\n      method: \"get\",\n      url:\n        baseUrl +\n        `/ProjectMS/Audit/projectOverviewDetails?projectId=${projectId}`,\n    })\n      .then(function (response) {\n        let resp = response.data;\n        console.log(resp);\n        setProjectData(resp);\n        //    setPrjName(resp)\n      })\n      .catch(function (response) {\n        console.log(response);\n      });\n  };\n\n  const handleAbort = () => {\n    abortController.current && abortController.current.abort();\n    setLoader(false);\n  };\n  return (\n    <div>\n      {addmsg ? (\n        <div className=\"statusMsg success\">\n          {\" \"}\n          {projectData.map((list) => (\n            <span className=\"\">\n              <BiCheck size=\"1.4em\" />\n              {list.projectName} is baselined successfully with Version:\n              {baselineVersion.map((list) => (\n                <> {list.baselineVer}</>\n              ))}{\" \"}\n            </span>\n          ))}\n        </div>\n      ) : (\n        \"\"\n      )}\n      {/* {loader ? <Loader /> : \"\"} */}\n      <div className=\"col-md-12\">\n        <div className=\"pageTitle\">\n          {projectData.map((list) => (\n            <div className=\"childOne\">\n              <h2>{list.projectName}</h2>\n            </div>\n          ))}\n          <div className=\"childTwo\">\n            <h2>Baselines</h2>\n          </div>\n          <div className=\"childThree\"></div>\n        </div>\n      </div>\n      <ScreenBreadcrumbs\n        routes={routes}\n        currentScreenName={currentScreenName}\n      />\n      <br />\n      <div>\n        <div className=\"form-group cvu\">\n          <div\n            className=\"col-md-12 no-padding baselINEtABLE primeReactDataTable\"\n            style={{ paddingLeft: \"100px\", paddingRight: \"100px\" }}\n          >\n            <BaselineCheckBoxtable\n              grp4Items={grp4Items}\n              data={data}\n              rows={rows}\n              setCheckedData={setCheckedData}\n              setCheckedData1={setCheckedData1}\n              dynamicColumns={dynamicColumns}\n              headerData={headerData}\n              setHeaderData={setHeaderData}\n            />\n          </div>\n        </div>\n      </div>\n      <br />\n      {console.log(checkedData1.length)}\n      {grp4Items[7].is_write == true ? (\n        <div class=\" btn-container center\">\n          {dataObject.is_write === true ? (\n            checkedData1.length > 0 ? (\n              <button\n                type=\"submit\"\n                style={{ cursor: \"no-drop\" }}\n                onKeyDown={(e) => {\n                  e.preventDefault;\n                }}\n                className=\"btn btn-primary\"\n              >\n                {\" \"}\n                <AiOutlineAppstoreAdd />\n                Create Baseline\n              </button>\n            ) : (\n              <button\n                type=\"submit\"\n                className=\"btn btn-primary\"\n                onClick={handleAddClick}\n              >\n                {\" \"}\n                <AiOutlineAppstoreAdd />\n                Create Baseline\n              </button>\n            )\n          ) : checkedData1.length > 0 ? (\n            <button\n              type=\"submit\"\n              style={{ cursor: \"not-allowed\" }}\n              className=\"btn btn-primary\"\n            >\n              {\" \"}\n              <AiOutlineAppstoreAdd />\n              Create Baseline\n            </button>\n          ) : (\n            <button\n              type=\"submit\"\n              className=\"btn btn-primary\"\n              style={{ cursor: \"not-allowed\" }}\n            >\n              {\" \"}\n              <AiOutlineAppstoreAdd />\n              Create Baseline\n            </button>\n          )}\n          {dataObject.is_write === true ? (\n            checkedData1.length == 9 ||\n            checkedData1.length == 8 ||\n            checkedData1.length == 0 ? (\n              <button\n                type=\"submit\"\n                style={{ cursor: \"no-drop\" }}\n                onKeyDown={(e) => {\n                  e.preventDefault;\n                }}\n                className=\"btn btn-primary\"\n              >\n                {\" \"}\n                <MdOutlineCompare />\n                Compare Baseline\n              </button>\n            ) : (\n              <button\n                type=\"submit\"\n                className=\"btn btn-primary\"\n                onClick={handleCompareClick}\n              >\n                {\" \"}\n                <MdOutlineCompare />\n                Compare Baseline\n              </button>\n            )\n          ) : checkedData1.length == 9 ||\n            checkedData1.length == 8 ||\n            checkedData1.length == 0 ? (\n            <button\n              type=\"submit\"\n              style={{ cursor: \"not-allowed\" }}\n              className=\"btn btn-primary\"\n            >\n              {\" \"}\n              <MdOutlineCompare />\n              Compare Baseline\n            </button>\n          ) : (\n            <button\n              type=\"submit\"\n              className=\"btn btn-primary\"\n              style={{ cursor: \"not-allowed\" }}\n            >\n              {\" \"}\n              <MdOutlineCompare />\n              Compare Baseline\n            </button>\n          )}\n        </div>\n      ) : (\n        \"\"\n      )}\n      <br />\n\n      {loader ? <Loader handleAbort={handleAbort} /> : \"\"}\n    </div>\n  );\n}\nexport default ProjectBaselines;\n","import React, { useEffect, useRef, useState } from \"react\";\n\nimport { FaChevronCircleRight } from \"react-icons/fa\";\n// import { FaChevronCircleRight } from \"react-icons/fa\";\n\nfunction CollapsibleTable(props) {\n  const { data, excludedCols, displayColumns, iconState, columns } = props;\n\n  const [tableData, setTableData] = useState(null);\n\n  const [displayTableData, setDisplayTableData] = useState([]);\n\n  const [displayCols, setDisplayCols] = useState(false);\n\n  const ref = useRef([]);\n\n  useEffect(() => {\n    // hideColumns();\n    setTableData(data);\n  }, [data]);\n\n  useEffect(() => {\n    displayData();\n  }, [tableData]);\n\n  useEffect(() => {\n    hideColumns();\n  }, [displayCols]);\n\n  const hideColumns = async () => {\n    let filterData = JSON.parse(JSON.stringify(data));\n\n    for (let i = 0; i < filterData.length; i++) {\n      let indexObj = filterData[i];\n\n      Object.keys(indexObj).forEach((inEle, inInd) => {\n        if (displayColumns.includes(inEle.trim()) && displayCols == false) {\n          delete indexObj[inEle];\n        }\n      });\n    }\n\n    setTableData(filterData);\n\n    displayData();\n  };\n\n  const displayRowExpand = (index) => {\n    let diplayableRows = [];\n\n    // ref.current[index]\n\n    let i = index + 1;\n    while (true) {\n      if (ref.current[i].attributes.level.nodeValue == 1) {\n        return;\n      }\n      if (ref.current[i].classList.contains(\"displayNone\")) {\n        ref.current[i].classList.remove(\"displayNone\");\n      } else {\n        ref.current[i].classList.add(\"displayNone\");\n      }\n      i = i + 1;\n    }\n  };\n\n  const displayData = () => {\n    setDisplayTableData(() => {\n      return tableData?.map((element, index) => {\n        let tabData = [];\n\n        columns.forEach((inEle, inInd) => {\n          // if (inEle.includes(\"id\") === false) {\n\n          // if(element[inEle] === null){\n          //     tabData.push(<td className='ellpss' title={\"\"} >{\"\"}</td>);\n          // }else if((inEle.includes(\"Cadre\")) || (inEle.includes(\"Role Type\"))){\n\n          let ele = \"\" + element[inEle.trim()];\n\n          let labelCheck = null;\n\n          let labelCheckArr = null;\n\n          let label = null;\n\n          if (ele.includes(\"^\")) {\n            labelCheck = ele.replaceAll(\"&\", \"\");\n\n            // labelCheckArr = labelCheck;\n\n            labelCheckArr = labelCheck?.split(\"^\");\n\n            label = labelCheckArr[0];\n          }\n\n          (displayCols == false\n            ? displayColumns.includes(inEle) == false\n            : true) &&\n            tabData.push(\n              element.id < 0 ? (\n                <th\n                  className=\"ellpss\"\n                  title={labelCheckArr != null ? labelCheckArr[0] : ele}\n                  rowSpan={labelCheckArr != null && labelCheckArr[1]}\n                  // colSpan={labelCheckArr != null && labelCheckArr[2]}\n                >\n                  {labelCheckArr != null ? labelCheckArr[0] : ele}\n                  <span\n                    onClick={() => {\n                      setDisplayCols((prev) => !prev);\n                    }}\n                  >\n                    {index == iconState[0] &&\n                      inInd == iconState[1] &&\n                      inEle == iconState[2] && <FaChevronCircleRight />}\n                  </span>\n                </th>\n              ) : (\n                <td\n                  className={`ellpss `}\n                  title={labelCheckArr != null ? labelCheckArr[0] : ele}\n                  // rowSpan={labelCheckArr != null && labelCheckArr[1]}\n                  // colSpan={labelCheckArr != null && labelCheckArr[2]}\n                  // style={{ display: element[\"lvl\"] == 2 ? \"none\" : \"\" }}\n                >\n                  {\n                    <>\n                      <>\n                        {inEle == \"name\" && element[\"lvl\"] == 1 && (\n                          <span\n                            onClick={() => {\n                              displayRowExpand(index);\n                            }}\n                          >\n                            <FaChevronCircleRight />\n                          </span>\n                        )}\n                      </>\n                      {labelCheckArr != null ? labelCheckArr[0] : ele}\n                    </>\n                  }\n                </td>\n              )\n            );\n          // }else{\n          //     tabData.push(<td className='ellpss' title={element[inEle]} align=\"right\" ><span style={{ float : \"left\" }} >{\"$\"}</span><span align = \"right\">{element[inEle]}</span></td>);\n          // }\n\n          // tabData.push(<td className='ellpss' title={element[inEle]} >\n          //         <div>\n          //             if(element[inEle] !== null && (inEle.includes(\"Cadre\")===false) && (inEle.includes(\"Role Type\")===false)){\n\n          //             } && <span align=\"left\" >{\"$\"}</span>}<span align=\"right\">{element[inEle] === null ? \"\" : element[inEle]}</span>\n          //         </div>\n          //     </td>);\n          // }\n        });\n\n        return (\n          <>\n            {\n              <tr\n                key={index}\n                level={element[\"lvl\"]}\n                ref={(ele) => {\n                  ref.current[index] = ele;\n                }}\n                className={`${element[\"lvl\"] > 1 && \"displayNone\"}`}\n              >\n                {tabData}\n              </tr>\n            }\n          </>\n        );\n      });\n    });\n  };\n\n  return (\n    <div style={{ height: \"1500px\", overflow: \"auto\", maxHeight: \"650px\" }}>\n      <table className=\"table table-bordered table-hover table-responsive \">\n        {/* thead */}\n        <tbody>{displayTableData}</tbody>\n      </table>\n    </div>\n  );\n}\n\nexport default CollapsibleTable;\n","import React, { useEffect, useState } from 'react';\nimport axios from \"axios\";\nimport CheckFlatPrimeReactTable from '../PrimeReactTableComponent/CheckFlatPrimeReactTable';\nimport FlatPrimeReactTable from '../PrimeReactTableComponent/FlatPrimeReactTable';\nimport CollapsibleTable from '../PrimeReactTableComponent/CollapsibleTable';\nimport ProjectCompareBaselineTable from './ProjectCompareBaselineTable';\nimport { Link, useLocation, useNavigate } from 'react-router-dom';\nimport { MdOutlineDoubleArrow, } from 'react-icons/md';\nimport Loader from '../Loader/Loader';\nimport ProjectBaselines from './ProjectBaselines';\n\nfunction ProjectCompareBaseline(props) {\n    const [loader, setLoader] = useState(false)\n    const location = useLocation();\n    // const navigate = useNavigate();\n    console.log(\"in line 10------\");\n    console.log(props)\n    console.log(location.state)\n\n    let pprs = location?.state\n\n    const { tabledata, projectData, excludedCols, displayColumns, columns, iconState, projectId } = pprs;\n    // const[tabledata,setTableData]=useState([])\n    let row = 20;\n\n    const navigate = useNavigate();\n\n\n    useEffect(() => {\n        console.log(\"in line 15------\");\n        // console.log(tabledata)\n    }, [])\n\n    return (\n        <div>\n            <div className='col-md-12' >\n                <div className=\"pageTitle\">\n                    <div className=\"childOne\">\n                        {loader ? <Loader /> : \"\"}\n                        {projectData?.map((list) => (\n                            <h2>{list.projectName}</h2>))}</div>\n                    <div className=\"childTwo\">\n                        <h2>Project Compare Baseline</h2>\n                    </div>\n                    <div className=\"childThree\"></div>\n                </div>\n\n            </div>\n         \n            <div>\n                <span className=\"pull-right mr20\" onClick={() => { navigate(`/project/Overview/:${projectId}`, { state: { \"btnState\": \"Baselines\" } }); }} >\n                    <i style={{ float: \"right\", color: \"#15a7ea\", cursor: \"pointer\", textDecoration: 'underline' }}>Go Back</i>\n                </span>\n\n                {/* <a href=\"#\" className=\"pull-right mr20\" onClick={() => { window.history.back(); }}><i style={{ float: \"right\", }}> &lt;&lt;Go Back</i></a> */}\n            </div>\n\n            <br />\n\n            <div className='col-md-12'>\n\n                <ProjectCompareBaselineTable\n                    data={tabledata}\n                    rows={row}\n                    excludedCols={excludedCols}\n                    displayColumns={displayColumns}\n                    columns={columns}\n                    iconState={iconState}\n                />\n\n            </div>\n        </div>\n\n\n    )\n}\nexport default ProjectCompareBaseline;\n","import moment from 'moment';\nimport React from 'react'\nimport { useRef } from 'react';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nimport { FaChevronCircleRight, FaChevronCircleUp, FaChevronCircleDown } from \"react-icons/fa\";\nimport ProjectCompareBaseline from './ProjectCompareBaseline';\nimport { ImCross } from 'react-icons/im';\nimport { BiRadioCircleMarked } from 'react-icons/bi';\nimport { BiRadioCircle } from 'react-icons/bi';\n\nfunction ProjectCompareBaselineTable(props) {\n    const { data, excludedCols, displayColumns, iconState, columns, rowExpand } = props;\n    const [displayTableData, setDisplayTableData] = useState([]);\n    const [tableData, setTableData] = useState(null);\n    const [displayCols, setDisplayCols] = useState(false);\n    const [visible, setVisible] = useState(false)\n    let [cheveronIcon, setCheveronIcon] = useState(FaChevronCircleRight)\n    console.log(visible)\n\n    const ref = useRef([]);\n    useEffect(() => {\n        // hideColumns();\n        setTableData(data);\n    }, [data]);\n\n    useEffect(() => {\n        displayData();\n    }, [tableData]);\n\n    useEffect(() => {\n        hideColumns();\n    }, [displayCols]);\n\n    const hideColumns = async () => {\n        let filterData = JSON.parse(JSON.stringify(data));\n        for (let i = 0; i < filterData.length; i++) {\n            let indexObj = filterData[i];\n\n            Object.keys(indexObj).forEach((inEle, inInd) => {\n                if (displayColumns.includes(inEle.trim()) && displayCols == false) {\n                    delete indexObj[inEle];\n                }\n            });\n        }\n        setTableData(filterData);\n        displayData();\n    };\n    const displayRowExpand = (index) => {\n        let diplayableRows = [];\n        console.log(index)\n        let i = index + 1;\n        while (true) {\n            if (ref.current[i]?.attributes.level.nodeValue == 0) {\n                return;\n            }\n            if (ref.current[i].classList.contains(\"displayNone\")) {\n                ref.current[i].classList.remove(\"displayNone\");\n            } else {\n                ref.current[i].classList.add(\"displayNone\");\n            }\n            i = i + 1;\n        }\n    };\n    console.log(tableData)\n    const displayData = () => {\n        setDisplayTableData(() => {\n            return tableData?.map((element, index) => {\n                let tabData = [];\n                columns.forEach((inEle, inInd) => {\n                    console.log(inEle)\n                    let ele = \"\" + element[inEle.trim()] == null ? \" \" : element[inEle.trim()];\n                    let labelCheck = null;\n                    let labelCheckArr = null;\n                    let label = null;\n                    if (ele?.includes(\"^\",)) {\n                        labelCheck = ele.replaceAll(\"&\", \"\");\n                        // labelCheckArr = labelCheck;\n                        labelCheckArr = labelCheck?.split(\"^\");\n\n                        label = labelCheckArr[0];\n                    }\n\n                    let headerCell = labelCheckArr != null ? labelCheckArr[0] : ele;\n\n                    let data = null;\n\n                    if (headerCell?.includes(\"{\")) {\n                        let a = headerCell;\n                        a = a.replaceAll(\"{\", '{\"').replaceAll(\"}\", '\"}')\n                            .replaceAll(\"::\", '\":\"');\n\n                        data = JSON.parse(a);\n                        console.log(data)\n\n                    }\n                    { console.log(displayColumns) }\n\n                    (displayCols == false\n                        ? displayColumns.includes(inEle) == false\n                        : true) &&\n                        tabData.push(\n                            element.id < 0 ? (\n                                <th\n                                    style={{ textAlign: \"center\", backgroundColor: \"rgb(230 229 229)\", cursor: \"pointer\" }}\n                                    className=\"ellipsis baseline\"\n\n                                    title={labelCheckArr != null ? labelCheckArr[0] : ele.replace(/[[\\]{}]/g, '')\n                                        .split(\",\")\n                                        .map((item) => item.replace(/::/g, ' : ').trim())\n                                        .join(\"\\n\")\n                                    }\n                                    rowSpan={labelCheckArr != null && labelCheckArr[1]}\n                                >\n                                    {headerCell.includes(\"{\")\n                                        ? data.map((d, index) => {\n                                            console.log(\"in line 134-----\");\n                                            console.log(d);\n                                            return (\n                                                <span style={{ textAlign: \"center\" }} key={index}>\n                                                    {Object.keys(d).map((ele) => (\n                                                        <div style={{ display: 'flex', alignItems: 'center' }}>\n                                                            <strong className=\"col-4\" style={{ textAlign: \"end\", cursor: \"pointer\" }}>{ele}</strong>\n                                                            <strong className=\"col-1\">:</strong>\n                                                            <span className=\"col-5\" style={{ fontWeight: \"normal\", textAlign: \"left\" }}>\n                                                                {d[ele]}\n                                                            </span>\n                                                        </div>\n                                                    ))}\n                                                </span>\n                                            );\n                                        })\n                                        : headerCell}\n\n                                    <span\n                                        onClick={() => {\n                                            setDisplayCols((prev) => !prev);\n                                        }}\n                                    >\n                                        {index == iconState[0] &&\n                                            inInd == iconState[1] &&\n                                            inEle == iconState[2] &&\n                                            <FaChevronCircleRight />} {\" \"}\n                                    </span>\n                                </th>\n                            ) : (\n                                <td\n                                    className={`ellpss baseline`}\n                                    style={{fontSize:\"13px\",textAlign:\"left\"}}\n                                    title={labelCheckArr != null ? labelCheckArr[0] : ele}\n                                >\n                                    {\n                                        <>\n                                            <>\n\n                                                {inEle == \"col\" && element[\"lvl\"] == 0 && tableData[index + 1]?.lvl == 1 &&\n                                                    (\n                                                        <span\n                                                            style={{ cursor: \"pointer\" }}\n                                                            onClick={() => {\n                                                                displayRowExpand(index)\n                                                                console.log(visible)\n                                                                setVisible(true)\n                                                                visible == true ?\n                                                                    <FaChevronCircleDown />\n                                                                    :\n                                                                    <FaChevronCircleRight />\n\n                                                                // setCheveronIcon(FaChevronCircleDown):setCheveronIcon(FaChevronCircleRight) \n                                                            }}\n                                                        >\n                                                            {cheveronIcon}{\" \"}\n                                                        </span>\n\n\n\n                                                    )}\n                                                {inEle == \"col\" && element[\"lvl\"] == 0 && tableData[index + 1]?.lvl == 2 &&\n                                                    (\n                                                        <span\n                                                            onClick={() => {\n                                                                displayRowExpand(index);\n                                                            }}\n                                                            style={{ cursor: \"pointer\" }}          >\n\n\n                                                            <FaChevronCircleRight />{\" \"}\n                                                        </span>\n                                                    )}\n                                            </>\n                                            {ele?.includes(\"{\")\n                                                ? data.map((d, index) => {\n                                                    console.log(\"in line 134-----\");\n                                                    console.log(d);\n                                                    return (\n                                                        <span style={{ textAlign: \"center\" }} key={index}>\n                                                            {Object.keys(d).map((ele) => (\n                                                                <div style={{ display: 'flex', alignItems: 'center' }}>\n                                                                    <strong className=\"col-4\" style={{ textAlign: \"end\", cursor: \"pointer\" }}>{ele}</strong>\n                                                                    <strong className=\"col-1\">:</strong>\n                                                                    <span className=\"col-5\" style={{ fontWeight: \"normal\", textAlign: \"left\" }}>\n                                                                        {d[ele]}\n                                                                    </span>\n                                                                </div>\n                                                            ))}\n                                                        </span>\n                                                    );\n                                                })\n                                                : labelCheckArr != null ? labelCheckArr[0] :\n                                                    (ele == \"Planned Cost\" || ele == \"Planned Effort\" || ele == \"Planned Start Date\" || ele == \"Task Plan\" || ele == \"Planned End Date\" || ele == \"Number of Project Change Requests\"\n                                                        || ele == \"Agile\" || element[\"lvl\"] == 2) ?\n                                                        (ele == \"Task Plan\" || ele == \"Agile\") ?\n                                                            <span style={{ cursor: \"pointer\" }}><BiRadioCircle /> &nbsp;{ele}</span> :\n                                                            <span style={{ cursor: \"pointer\" }}>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<BiRadioCircle /> &nbsp;{ele}</span>\n                                                        : ele}\n\n                                        </>\n                                    }\n                                </td>\n                            )\n                        );\n                });\n                return (\n                    <>\n                        {\n                            <tr\n                                key={index}\n                                level={element[\"lvl\"]}\n                                ref={(ele) => {\n                                    ref.current[index] = ele;\n                                }}\n                                className={`${element[\"lvl\"] > 0 && \"displayNone\"}`}\n                            >\n                                {tabData}\n                            </tr>\n                        }\n                    </>\n                );\n            });\n        });\n    };\n\n\n    return (\n        <div> <div style={{ height: \"auto\", overflowX: \"scroll\", }}>\n            <table className=\"table table-bordered table-hover table-responsive \">\n                <tbody>\n                    {displayTableData}\n                </tbody>\n            </table>\n        </div>\n        </div>\n    )\n}\n\nexport default ProjectCompareBaselineTable","import React, { useEffect, useRef, useState } from \"react\";\nimport { RiProfileLine } from \"react-icons/ri\";\nimport {\n  AiFillDelete,\n  AiFillWarning,\n  AiOutlineDoubleLeft,\n} from \"react-icons/ai\";\nimport { AiOutlineDoubleRight } from \"react-icons/ai\";\nimport { VscSave } from \"react-icons/vsc\";\nimport { ImCross } from \"react-icons/im\";\nimport { MdOutlinePlaylistAdd } from \"react-icons/md\";\nimport axios from \"axios\";\nimport { environment } from \"../../environments/environment\";\nimport { ReactSearchAutocomplete } from \"react-search-autocomplete\";\nimport { Transfer } from \"antd\";\nimport moment from \"moment/moment\";\nimport GlobalCancel from \"../ValidationComponent/GlobalCancel\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport \"antd/dist/antd.min.css\";\nimport DatePicker from \"react-datepicker\";\nimport GlobalValidation from \"../ValidationComponent/GlobalValidation\";\nimport { BiCheck } from \"react-icons/bi\";\nimport GlobalHelp from \"../PrimeReactTableComponent/GlobalHelp\";\nimport ScreenBreadcrumbs from \"../Common/ScreenBreadcrumbs\";\n\nfunction ProjectCreate() {\n  const HelpPDFName = \"CreateProjects.pdf\";\n  const HelpHeader = \"Project Create\";\n  const baseUrl = environment.baseUrl;\n  const loggedUserId = localStorage.getItem(\"resId\");\n  const [displayRowEdit, setDisplayRowEdit] = useState(1);\n  const location = useLocation();\n  const [documentRender, setdocumentRender] = useState(null);\n  const [date, SetDate] = useState();\n  const [endDate, SetEndDate] = useState();\n  const [category, setcategory] = useState([]);\n  const [department, setDepartment] = useState([]);\n  const [customer, setCustomer] = useState([]);\n  const [email, setEmail] = useState([]);\n  const [name, setName] = useState([]);\n  const [division, setDivision] = useState([]);\n  const [enguagement, setEnguagement] = useState([]);\n  const [currency, setCurrency] = useState([]);\n  const [holiday, setHoliday] = useState([]);\n  const [week, setWeek] = useState([]);\n  const [supervisor, setSupervisor] = useState([]);\n  const [resource, setResource] = useState([]);\n  const [resource1, setResource1] = useState([]);\n  const [resource2, setResource2] = useState([]);\n  const [resource3, setResource3] = useState([]);\n  const [contract, setContract] = useState([]);\n  const [phase, setPhase] = useState([]);\n  const [type, setType] = useState([]);\n  const [ponumber, setponumber] = useState([]);\n  const [validationMessage, setValidationMessage] = useState(false);\n  const [successfulmessage, setSuccessfulmessage] = useState(false);\n  const [enguagementType, setEnguagementType] = useState([]);\n  const [service, setService] = useState([]);\n  const [effort, setEffort] = useState([]);\n  const [selectedKeys, setSelectedKeys] = useState([]);\n  // const initialTargetKeys = service\n  //   .filter((item) => Number(item.id) > 1)\n  //   .map((item) => item.id);\n  const [targetKeys, setTargetKeys] = useState([]);\n  const [selectedFile, setSelectedFile] = useState([]);\n  const [projectNamesArr, setProjectNamesArr] = useState();\n  const [uniqueMessage, setUniqueMessage] = useState(false);\n  const [docType, setDocType] = useState({\n    docType: \"\",\n  });\n\n\n  const [routes, setRoutes] = useState([]);\n  let currentScreenName = [\"Projects\", \"Create Project\"];\n  let textContent = \"Delivery\";\n\n  const getMenus = () => {\n    // setMenusData\n\n    axios({\n      method: \"GET\",\n      url: baseUrl + `/CommonMS/master/getMenus?loggedUserId=${loggedUserId}`,\n    }).then((resp) => {\n      let data = resp.data;\n\n      data.forEach((item) => {\n        if (item.display_name === textContent) {\n          setRoutes([item]);\n        }\n      });\n    });\n  };\n\n\n\n  useEffect(() => {\n    getMenus();\n  }, []);\n\n  const [mail, setMail] = useState(\"\");\n  const ref = useRef([]);\n\n  const initialValue = {\n    projectCode: \"\",\n    projectName: \"\",\n    customerId: \"\",\n    holidayCalendarId: \"\",\n    weekCalendarId: \"\",\n    approvingCostCenterId: \"\",\n    typProjectCatId: \"\",\n    typContractTermsCatId: \"\",\n    typSchedulingModeId: \"\",\n    typTimeEntryModeId: \"\",\n    isBillable: \"1\",\n    isOpenForTime: \"1\",\n    isOpenForExpenses: \"1\",\n    plannedStartDt: \"\",\n    plannedEndDt: \"\",\n    isPrjStatus: \"0\",\n    size: \"\",\n    UnitOfMeasure: \"\",\n    isTaskPlanUpload: \"0\",\n    currencyId: \"\",\n    isUsageReq: \"1\",\n    isUtilizationReq: \"1\",\n    preliminaryStartDt: \"\",\n    preliminaryEndDt: \"\",\n    projectHealthId: \"498\",\n    prjHealthUpdatedDate: \"\",\n    projectdivisionId: \"0\",\n    projectPhase: \"\",\n    source: \"PPM\",\n    isDeliverable: \"\",\n    sfEngTypeId: \"\",\n    serviceOfferingId: \"\",\n    businessUnit: \"\",\n    divisionId: \"\",\n    engagementId: \"\",\n    teamLocationId: \"\",\n    effortTypeId: \"\",\n    projectExecMethodId: \"\",\n    value: \"\",\n    loggedId: \"\",\n    deliveryManager: \"\",\n    primaryManger: \"\",\n    projectRequestor: \"\",\n    projectApproval: \"\",\n    facilitator: \"\",\n    pcqaType: \"\",\n    clientEmail: \"\",\n    PoNumber: \"\",\n  };\n  const [formData, setFormData] = useState(initialValue);\n\n  const getProjectNamesArray = () => {\n    axios({\n      method: \"get\",\n      url: baseUrl + `/ProjectMS/Audit/getProjectNameandId`,\n    })\n      .then(function (response) {\n        let resp = response.data;\n        setProjectNamesArr(resp);\n      })\n      .catch(function (error) { });\n  };\n\n  const projectCategoryFnc = () => {\n    axios({\n      method: \"get\",\n      url: baseUrl + `/ProjectMS/ProjectScopeChange/getAllProjectCategorys`,\n    }).then((res) => {\n      let custom = res.data;\n      setcategory(custom);\n      effortTypeFnc();\n    });\n  };\n\n  const departmentFnc = () => {\n    axios({\n      method: \"get\",\n      url: baseUrl + `/ProjectMS/ProjectScopeChange/getAllDepartments`,\n    }).then((res) => {\n      let custom = res.data;\n      setDepartment(custom);\n    });\n  };\n\n  const customerFnc = () => {\n    axios({\n      method: \"get\",\n      url: baseUrl + `/ProjectMS/ProjectScopeChange/getCustomers`,\n    }).then((res) => {\n      let custom = res.data;\n      setCustomer(custom);\n    });\n  };\n  const emailFnc = (value) => {\n    axios({\n      method: \"get\",\n      url:\n        baseUrl + `/ProjectMS/ProjectScopeChange/getCustomerEmail?cid=${value}`,\n    }).then((res) => {\n      let custom = res.data;\n      let email = custom[0].customer_emails;\n      setEmail(email);\n    });\n  };\n\n  const divisionFnc = (value) => {\n    axios({\n      method: \"get\",\n      url:\n        baseUrl + `/ProjectMS/ProjectScopeChange/getDivisionsById?cid=${value}`,\n    }).then((res) => {\n      let custom = res.data;\n\n      setDivision(custom);\n      // enguagementFnc();\n    });\n  };\n  const enguagementFnc = (value) => {\n    axios({\n      method: \"get\",\n      url:\n        baseUrl +\n        `/ProjectMS/ProjectScopeChange/getEngagementsById?Did=${value}`,\n    }).then((res) => {\n      let custom = res.data;\n      setEnguagement(custom);\n    });\n  };\n\n  const currencyFnc = () => {\n    axios({\n      method: \"get\",\n      url: baseUrl + `/ProjectMS/ProjectScopeChange/getLkupTypes`,\n    }).then((res) => {\n      let custom = res.data;\n      setCurrency(custom);\n    });\n  };\n  const holidayCalenderFnc = () => {\n    axios({\n      method: \"get\",\n      url: baseUrl + `/ProjectMS/ProjectScopeChange/getHolidayCalendars`,\n    }).then((res) => {\n      let custom = res.data;\n      setHoliday(custom);\n    });\n  };\n  const WeekCalenderFnc = () => {\n    axios({\n      method: \"get\",\n      url: baseUrl + `/ProjectMS/ProjectScopeChange/getWeekCalendars`,\n    }).then((res) => {\n      let custom = res.data;\n      setWeek(custom);\n    });\n  };\n\n  const getSupervisor = (value) => {\n    axios({\n      method: \"get\",\n      url:\n        baseUrl + `/ProjectMS/ProjectScopeChange/getSupervisor?UseId=${value}`,\n    }).then((res) => {\n      let user = res.data.resorseId;\n      let cust = res.data.name;\n      setSupervisor(cust);\n      setFormData((prevProps) => ({\n        ...prevProps,\n        projectApproval: user,\n      }));\n    });\n  };\n\n  const resourceFnc = () => {\n    axios({\n      method: \"get\",\n      url: baseUrl + `/ProjectMS/risks/getAssignedData`,\n    })\n      .then((res) => {\n        let manger = res.data;\n        setResource(manger);\n        setResource1(manger);\n        setResource2(manger);\n        setResource3(manger);\n      })\n      .catch((error) => { });\n  };\n  const navigate = useNavigate();\n\n  const conractTermsFnc = (value) => {\n    axios({\n      method: \"get\",\n      url:\n        baseUrl +\n        `/ProjectMS/ProjectScopeChange/getContractTeamsById?eid=${value}`,\n    })\n      .then((res) => {\n        let data = res.data;\n        setContract(data);\n      })\n      .catch((error) => { });\n  };\n\n  const engagementTypeFnc = (value) => {\n    axios({\n      method: \"get\",\n      url:\n        baseUrl +\n        `/ProjectMS/ProjectScopeChange/getEngagementTypeById?eid=${value}`,\n    })\n      .then((res) => {\n        let data = res.data;\n        setEnguagementType(data);\n      })\n      .catch((error) => { });\n  };\n\n  const ServiceOfferingFnc = () => {\n    axios({\n      method: \"get\",\n      url: baseUrl + `/ProjectMS/ProjectScopeChange/getserviceOfferings`,\n    })\n      .then((res) => {\n        let serv = res.data;\n        setService(\n          res.data.map((res) => ({\n            key: res.id,\n            title: res.offering_name,\n          }))\n        );\n      })\n      .catch((error) => { });\n  };\n\n  const effortTypeFnc = (value) => {\n    axios({\n      method: \"get\",\n      url:\n        baseUrl +\n        `/ProjectMS/ProjectScopeChange/getEffortTypesById?pcid=${value}`,\n    })\n      .then((res) => {\n        let data = res.data;\n        setEffort(data);\n      })\n      .catch((error) => { });\n  };\n\n  const projectPhaseFnc = () => {\n    axios({\n      method: \"get\",\n      url: baseUrl + `/ProjectMS/ProjectScopeChange/getProjectPhases`,\n    }).then((res) => {\n      let data = res.data;\n      setPhase(data);\n    });\n  };\n  const projectTypesFnc = () => {\n    axios({\n      method: \"get\",\n      url: baseUrl + `/ProjectMS/ProjectScopeChange/getProjectTypes`,\n    }).then((res) => {\n      let data = res.data;\n      setType(data);\n    });\n  };\n  const poNumberFnc = (eid) => {\n    axios({\n      method: \"get\",\n      url:\n        baseUrl +\n        `/ProjectMS/ProjectScopeChange/getPoNumberByEnguagementId?eid=${eid}`,\n    }).then((res) => {\n      let data = res.data;\n      setponumber(data);\n    });\n  };\n  const handleCancel = (e) => {\n    let ele = document.getElementsByClassName(\"cancel\");\n\n    GlobalCancel(ref);\n\n    for (let index = 0; index < ele.length; index++) {\n      ele[index].value = \"\";\n\n      if (ele[index].classList.contains(\"reactsearchautocomplete\")) {\n        ele[index].children[0].children[0].children[0].children[1]?.click();\n      }\n    }\n    setValidationMessage(false);\n    setUniqueMessage(false);\n  };\n  const handleClick = () => {\n    let valid = GlobalValidation(ref);\n\n    if (valid) {\n      {\n        setSuccessfulmessage(false);\n        setValidationMessage(true);\n      }\n      return;\n    }\n    let someDataa = projectNamesArr.some((d) => d.name == formData.projectName);\n\n    if (someDataa) {\n      let ele = document.getElementsByClassName(\"unique\");\n      for (let index = 0; index < ele.length; index++) {\n        ele[index].classList.add(\"error-block\");\n      }\n\n      setUniqueMessage(true);\n      setValidationMessage(false);\n\n      return;\n    }\n\n    axios\n      .postForm(\n        baseUrl +\n        `/ProjectMS/ProjectScopeChange/projectCreate?ObjectTypeId=3&loggedUserId=512&commitMessage=createFolder`,\n        {\n          file: selectedFile,\n          model: JSON.stringify({\n            projectCode: formData.projectCode,\n            projectName: formData.projectName,\n            customerId: formData.customerId,\n            holidayCalendarId: formData.holidayCalendarId,\n            weekCalendarId: formData.weekCalendarId,\n            approvingCostCenterId: enguagementType[0]?.id,\n            typProjectCatId: formData.typProjectCatId,\n            typContractTermsCatId: contract[0]?.id,\n            typSchedulingModeId: formData.typSchedulingModeId,\n            typTimeEntryModeId: formData.typTimeEntryModeId,\n            isBillable: formData.isBillable,\n            isOpenForTime: formData.isOpenForTime,\n            isOpenForExpenses: formData.isOpenForExpenses,\n            plannedStartDt: formData.plannedStartDt,\n            plannedEndDt: formData.plannedEndDt,\n            isPrjStatus: formData.isPrjStatus,\n            size: formData.size,\n            UnitOfMeasure: formData.UnitOfMeasure,\n            isTaskPlanUpload: formData.isTaskPlanUpload,\n            currencyId: formData.currencyId,\n            isUsageReq: formData.isUsageReq,\n            isUtilizationReq: formData.isUtilizationReq,\n            preliminaryStartDt: formData.preliminaryStartDt,\n            preliminaryEndDt: formData.preliminaryEndDt,\n            projectHealthId: formData.projectHealthId,\n            prjHealthUpdatedDate: formData.prjHealthUpdatedDate,\n            projectdivisionId: formData.projectdivisionId,\n            projectPhase: formData.projectPhase,\n            source: formData.source,\n            isDeliverable: formData.isDeliverable,\n            sfEngTypeId: formData.sfEngTypeId,\n            serviceOfferingId: formData.serviceOfferingId,\n            businessUnit: formData.businessUnit,\n            divisionId: formData.divisionId,\n            engagementId: formData.engagementId,\n            teamLocationId: formData.teamLocationId,\n            effortTypeId: formData.effortTypeId,\n            projectExecMethodId: formData.projectExecMethodId,\n            value: formData.value,\n            loggedId: loggedUserId,\n            deliveryManager: formData.deliveryManager,\n            primaryManger: formData.primaryManger,\n            projectRequestor: formData.projectRequestor,\n            projectApproval: formData.projectApproval,\n            facilitator: formData.facilitator, //need to change\n            pcqaType: formData.pcqaType,\n            clientEmail: email,\n            PoNumber: formData.PoNumber,\n            docType: docType.docType,\n          }),\n        },\n        {\n          headers: {\n            \"Content-Type\": \"multipart/form-data\",\n          },\n        }\n      )\n      .then((response) => {\n        const data = response.data;\n        setValidationMessage(false);\n        setSuccessfulmessage(true);\n        window.scrollTo({ top: 0, behavior: \"smooth\" });\n        setTimeout(() => {\n          setSuccessfulmessage(false);\n          navigate(`/project/Overview/:${data.projectId.id}`);\n          // window.location.reload();\n        }, 1000);\n        // navigate(`/project/Overview/:${data.projectId.id}`);\n      });\n  };\n  useEffect(() => {\n    projectCategoryFnc();\n    departmentFnc();\n    customerFnc();\n    //divisionFnc();\n    holidayCalenderFnc();\n    WeekCalenderFnc();\n    resourceFnc();\n    currencyFnc();\n    projectPhaseFnc();\n    projectTypesFnc();\n    //conractTermsFnc();\n    ServiceOfferingFnc();\n    getProjectNamesArray();\n    // effortTypeFnc();\n  }, []);\n  const DisplayFnc = () => {\n    setDisplayRowEdit((prev) => prev + 1);\n  };\n  const DeleteFnc = () => {\n    for (let i = 0; i < displayRowEdit; i++) { }\n  };\n\n  const onFileChangeHandler = (e) => {\n    setSelectedFile(e.target.files[0]);\n  };\n\n  useEffect(() => {\n    displayDocumentRender();\n  }, [displayRowEdit]);\n\n  const displayDocumentRender = () => {\n    let data = [];\n\n    for (let i = 0; i < displayRowEdit; i++) {\n      data.push(i);\n    }\n    setdocumentRender(() => {\n      return data.map((d) => {\n        return (\n          <div className=\"group-content row\">\n            <div className=\"form-group col-md-4 mb-2\">\n              <label htmlFor=\"name\">Contract Document Type </label>\n              <select\n                className=\"cancel\"\n                id=\"docType\"\n                onChange={(e) => {\n                  const { value, id } = e.target;\n                  setDocType({ ...docType, [id]: value });\n                }}\n              >\n                <option value=\"\"> &lt;&lt;Please Select&gt;&gt;</option>\n                <option value={\"386\"}>Email</option>\n                <option value={\"387\"}>Others</option>\n                <option value={\"385\"}>PO</option>\n                <option value={\"384\"}>SOW</option>\n              </select>\n            </div>\n            <div className=\"form-group col-md-4 mb-2\">\n              <label htmlFor=\"name\">Upload Contract Document </label>\n              {/* <input\n                type=\"text\"\n                className=\"form-control\"\n                id=\"name\"\n                placeholder=\"Project Code\"\n                required\n              /> */}\n              <input\n                className=\"fileUpload form-control cancel\"\n                type=\"file\"\n                name=\"file\"\n                id=\"file\"\n                onChange={onFileChangeHandler}\n              // accept=\".jpg,.jpeg,.xlsx,.pdf,.docx,.txt\"\n              />\n            </div>\n            <div\n              className=\"form-group col-md-4 mb-2\"\n              style={{ marginTop: \"17px\", fontSize: \"20px\" }}\n            >\n              <AiFillDelete\n                onClick={() => setDisplayRowEdit((prev) => prev - 1)}\n              />\n            </div>\n          </div>\n        );\n      });\n    });\n  };\n\n  const getCode = (e) => {\n    const { value, id } = e.target;\n    setFormData({ ...formData, projectCode: value });\n  };\n  const getclientEmail = (e) => {\n    const { value, id } = e.target;\n    setFormData({ ...formData, clientEmail: value });\n  };\n  const getCode1 = (e) => {\n    const { value, id } = e.target;\n    setFormData({ ...formData, value: value });\n  };\n  const getCode2 = (e) => {\n    const { value, id } = e.target;\n    setFormData({ ...formData, size: value });\n  };\n  const getName = (e) => {\n    const { value, id } = e.target;\n    setFormData({ ...formData, projectName: value });\n  };\n  const getProjectId = (e) => {\n    const { value, id } = e.target;\n    setFormData({ ...formData, [id]: value });\n    effortTypeFnc(value);\n  };\n  const buChange = (e) => {\n    const { value, id } = e.target;\n    setFormData({ ...formData, [id]: value });\n    // effortTypeFnc(value);\n  };\n  const getCustomerId = (e) => {\n    const { value, id } = e.target;\n\n    setFormData({ ...formData, [id]: value });\n    //setFormData({ ...formData, [\"divisionId\"]: \"\" });\n    setDivision([]);\n    divisionFnc(value);\n    emailFnc(value);\n  };\n  const getCustomer = (e) => {\n    const { value, id } = e.target;\n\n    setFormData({ ...formData, [id]: value });\n    // setFormData({ ...formData, [\"divisionId\"]: \"\" });\n    setEnguagement([]);\n    enguagementFnc(value);\n  };\n  const getDivisionId = (e) => {\n    const { value, id } = e.target;\n\n    setFormData({ ...formData, [id]: value });\n    //setFormData({ ...formData, [\"divisionId\"]: \"\" });\n    engagementTypeFnc(value);\n    conractTermsFnc(value);\n    poNumberFnc(value);\n  };\n  const getUnitsOfMeasureId = (e) => {\n    const { value, id } = e.target;\n    setFormData({ ...formData, [id]: value });\n  };\n  const getcurrencyId = (e) => {\n    const { value, id } = e.target;\n    setFormData({ ...formData, [id]: value });\n  };\n  const getEffortId = (e) => {\n    const { value, id } = e.target;\n    setFormData({ ...formData, [id]: value });\n  };\n  const handleClearDeliveryManager = (edit) => {\n    setFormData((prevProps) => ({ ...prevProps, deliveryManager: \"\" }));\n  };\n  const handleClearPrimaryManager = (edit) => {\n    setFormData((prevProps) => ({ ...prevProps, primaryManger: \"\" }));\n  };\n  const handleClearProjectRequester = (edit) => {\n    setFormData((prevProps) => ({ ...prevProps, projectRequestor: \"\" }));\n  };\n  const handleClearProjectApprover = (edit) => {\n    setFormData((prevProps) => ({ ...prevProps, projectApproval: \"\" }));\n  };\n\n  return (\n    <div>\n      <>\n        {successfulmessage ? (\n          <div className=\"statusMsg success\">\n            {\" \"}\n            <BiCheck /> Project Created Successfully{\" \"}\n          </div>\n        ) : (\n          \"\"\n        )}\n        {validationMessage ? (\n          <div className=\"statusMsg error cancel\">\n            {\" \"}\n            <AiFillWarning /> Please select the valid values for highlighted\n            fields{\" \"}\n          </div>\n        ) : (\n          \"\"\n        )}\n        {uniqueMessage ? (\n          <div className=\"statusMsg error\">\n            {\" \"}\n            <AiFillWarning />\n            Please select the valid values for highlighted fields\n          </div>\n        ) : (\n          \"\"\n        )}\n      </>\n      <div className=\"pageTitle\">\n        <div className=\"childOne\"></div>\n        <div className=\"childTwo\">\n          <h2>Create Project</h2>\n        </div>\n        <div className=\"childThree\"></div>\n      </div>\n      <ScreenBreadcrumbs\n        routes={routes}\n        currentScreenName={currentScreenName}\n      />\n\n      <div className=\"helpBtn\" style={{ float: \"right\", paddingTop: \"5px\" }}>\n        <GlobalHelp pdfname={HelpPDFName} name={HelpHeader} />\n      </div>\n      <div className=\"group mb-5 customCard\">\n        <h2>Project Details</h2>\n        <div className=\"group-content row\">\n          <div className=\"form-group col-md-4 mb-2\">\n            <label htmlFor=\"name\">\n              Project Code <span className=\"error-text unique\">&nbsp;*</span>\n            </label>\n            <div\n              className=\"textfield\"\n              ref={(ele) => {\n                ref.current[0] = ele;\n              }}\n            >\n              <input\n                type=\"text\"\n                className=\"unique cancel\"\n                id=\"projectCode\"\n                name=\"projectCode\"\n                placeholder=\"Project Code\"\n                onKeyDown={(event) => {\n                  if (\n                    event.code === \"Space\" &&\n                    event.target.value.trim() === \"\"\n                  ) {\n                    event.preventDefault();\n                  }\n                }}\n                onChange={(e) => {\n                  const value = e.target.value.replace(/^\\s+/g, \"\"); // Remove leading spaces\n                  e.target.value = value; // Update the input value\n                  getCode(e);\n                }}\n              />\n            </div>\n          </div>\n          <div className=\"form-group col-md-4 mb-2\">\n            <label htmlFor=\"name\">\n              Project Name<span className=\"error-text unique\">&nbsp;*</span>{\" \"}\n            </label>\n            <div\n              className=\"textfield\"\n              ref={(ele) => {\n                ref.current[1] = ele;\n              }}\n            >\n              <input\n                type=\"text\"\n                className=\" unique cancel\"\n                id=\"projectName\"\n                placeholder=\"Project Name\"\n                required\n                onKeyDown={(event) => {\n                  if (\n                    event.code === \"Space\" &&\n                    event.target.value.trim() === \"\"\n                  ) {\n                    event.preventDefault();\n                  }\n                }}\n                onChange={(e) => {\n                  const value = e.target.value.replace(/^\\s+/g, \"\"); // Remove spaces\n                  e.target.value = value; // Update the input value\n                  getName(e);\n                }}\n              />\n            </div>\n          </div>\n          <div className=\"form-group col-md-4 mb-2\">\n            <label htmlFor=\"typProjectCatId\">\n              Project Category <span className=\"error-text\">&nbsp;*</span>\n            </label>\n            <select\n              className=\"text cancel  \"\n              id=\"typProjectCatId\"\n              onChange={(e) => {\n                getProjectId(e);\n              }}\n              ref={(ele) => {\n                ref.current[2] = ele;\n              }}\n            >\n              <option value=\"\"> &lt;&lt;Please Select&gt;&gt;</option>\n              {category.map((Item) => (\n                <option value={Item.id}> {Item.project_category_name}</option>\n              ))}\n            </select>\n          </div>\n          <div className=\"form-group col-md-4 mb-2\">\n            <label htmlFor=\"name\">\n              Business Unit <span className=\"error-text\">&nbsp;*</span>\n            </label>\n            <select\n              className=\"text cancel\"\n              id=\"businessUnit\"\n              onChange={(e) => {\n                buChange(e);\n              }}\n              ref={(ele) => {\n                ref.current[3] = ele;\n              }}\n            >\n              <option value=\"\"> &lt;&lt;Please Select&gt;&gt;</option>\n              {department.map((Item) => (\n                <option value={Item.id}> {Item.name}</option>\n              ))}\n            </select>\n          </div>\n          <div className=\"form-group col-md-4 mb-2\">\n            <label htmlFor=\"name\">\n              Customer <span className=\"error-text\">&nbsp;*</span>\n            </label>\n            <select\n              className=\"text cancel\"\n              id=\"customerId\"\n              onChange={(e) => getCustomerId(e)}\n              ref={(ele) => {\n                ref.current[4] = ele;\n              }}\n            >\n              <option value=\"\"> &lt;&lt;Please Select&gt;&gt;</option>\n              {customer.map((Item) => (\n                <option value={Item.id}> {Item.full_name}</option>\n              ))}\n            </select>\n          </div>\n          <div className=\"form-group col-md-4 mb-2\">\n            <label htmlFor=\"name\">\n              Division <span className=\"error-text\">&nbsp;*</span>\n            </label>\n            <select\n              className=\"text cancel\"\n              id=\"divisionId\"\n              onChange={(e) => getCustomer(e)}\n              ref={(ele) => {\n                ref.current[5] = ele;\n              }}\n            >\n              <option value=\"\"> &lt;&lt;Please Select&gt;&gt;</option>\n              {division.map((Item) => (\n                <option value={Item.id}> {Item.name}</option>\n              ))}\n            </select>\n          </div>\n          <div className=\"form-group col-md-4 mb-2\">\n            <label htmlFor=\"name\">\n              Engagement Name <span className=\"error-text\">&nbsp;*</span>\n            </label>\n            <select\n              className=\"text cancel\"\n              id=\"engagementId\"\n              onChange={(e) => getDivisionId(e)}\n              ref={(ele) => {\n                ref.current[6] = ele;\n              }}\n            >\n              <option value=\"\"> &lt;&lt;Please Select&gt;&gt;</option>\n              {enguagement.map((Item) => (\n                <option value={Item.id}> {Item.name}</option>\n              ))}\n            </select>\n          </div>\n          <div className=\"form-group col-md-4 mb-2\">\n            <label htmlFor=\"name\">\n              Engagement Type <span className=\"error-text\">&nbsp;*</span>\n            </label>\n            <select\n              className=\"text cancel disableField\"\n              id=\"approvingCostCenterId\"\n              disabled\n              onChange={(e) => getcurrencyId(e)}\n              ref={(ele) => {\n                ref.current[7] = ele;\n              }}\n            >\n              <option value=\"\"> &lt;&lt;Please Select&gt;&gt;</option>\n              {enguagementType.map((Item) => (\n                <option\n                  value={Item.id}\n                  selected={\n                    Item.lkup_name == enguagementType[0]?.lkup_name\n                      ? true\n                      : false\n                  }\n                >\n                  {\" \"}\n                  {Item.lkup_name}\n                </option>\n              ))}\n            </select>\n          </div>\n          <div className=\"form-group col-md-4 mb-2\">\n            <label htmlFor=\"name\">\n              Contract Terms <span className=\"error-text\">&nbsp;*</span>\n            </label>\n            <select\n              className=\"text cancel disableField\"\n              id=\"typContractTermsCatId\"\n              disabled\n              onChange={(e) => getcurrencyId(e)}\n              ref={(ele) => {\n                ref.current[8] = ele;\n              }}\n            >\n              <option value=\"\"> &lt;&lt;Please Select&gt;&gt;</option>\n              {contract.map((Item) => (\n                <option\n                  value={Item.id}\n                  selected={\n                    Item.lkup_name == contract[0]?.lkup_name ? true : false\n                  }\n                >\n                  {\" \"}\n                  {Item.lkup_name}\n                </option>\n              ))}\n            </select>\n          </div>\n          <div className=\"form-group col-md-4 mb-2\">\n            <label htmlFor=\"name\">Effort Type</label>\n            <select\n              className=\"text cancel\"\n              id=\"effortTypeId\"\n              onChange={(e) => {\n                getEffortId(e);\n              }}\n            >\n              <option value=\"\"> &lt;&lt;Please Select&gt;&gt;</option>\n              {effort.map((Item) => (\n                <option value={Item.id}> {Item.effort_name}</option>\n              ))}\n            </select>\n          </div>\n          <div className=\"form-group col-md-4 mb-2\">\n            <label htmlFor=\"name\">\n              Execution Methodology <span className=\"error-text\">&nbsp;*</span>\n            </label>\n            <select\n              className=\"text cancel\"\n              id=\"projectExecMethodId\"\n              onChange={(e) => {\n                getEffortId(e);\n              }}\n              ref={(ele) => {\n                ref.current[9] = ele;\n              }}\n            >\n              <option value=\"\"> &lt;&lt;Please Select&gt;&gt;</option>\n              <option value={365}>Agile</option>\n              <option value={366}>Waterfall</option>\n              <option value={367}>Iterative</option>\n              <option value={368}>Other</option>\n            </select>\n          </div>\n          <div className=\"form-group col-md-4 mb-2\">\n            <label htmlFor=\"name\">\n              Project Phase <span className=\"error-text\">&nbsp;*</span>\n            </label>\n            <select\n              className=\"text cancel\"\n              id=\"projectPhase\"\n              onChange={(e) => getcurrencyId(e)}\n              ref={(ele) => {\n                ref.current[10] = ele;\n              }}\n            >\n              <option value=\"\"> &lt;&lt;Please Select&gt;&gt;</option>\n              {phase.map((Item) => (\n                <option value={Item.id}> {Item.lkup_name}</option>\n              ))}\n            </select>\n          </div>\n          <div className=\"col-md-4 \">\n            <div className=\"row\">\n              <div className=\" form-group col-md-6\">\n                <label htmlFor=\"name\">Project Scope</label>\n                <input\n                  type=\"text\"\n                  className=\"text cancel\"\n                  id=\"value\"\n                  defaultValue={\"0\"}\n                  required\n                  onChange={(e) => {\n                    const input = e.target.value;\n                    const regex = /^[0-9]*\\.?[0-9]*$/; // Regular expression to match numbers\n\n                    if (!regex.test(input)) {\n                      e.target.value = input.replace(/[^0-9.]/g, \"\"); // Remove non-numeric characters\n                    }\n\n                    getCode1(e);\n                  }}\n                />\n              </div>\n              <div className=\" form-group col-md-6\">\n                <label htmlFor=\"name\">Unit of Measurement</label>\n                <select\n                  className=\"text cancel\"\n                  id=\"UnitOfMeasure\"\n                  onChange={(e) => getUnitsOfMeasureId(e)}\n                >\n                  <option value=\"\"> &lt;&lt;Please Select&gt;&gt;</option>\n                  <option value={243}>FP</option>\n                  <option value={244}>UCP</option>\n                </select>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"form-group col-md-4 mb-2\">\n            <label htmlFor=\"name\">\n              Currency <span className=\"error-text\">&nbsp;*</span>\n            </label>\n            <select\n              className=\"text cancel\"\n              id=\"currencyId\"\n              onChange={(e) => getcurrencyId(e)}\n              ref={(ele) => {\n                ref.current[11] = ele;\n              }}\n            >\n              <option value=\"\"> &lt;&lt;Please Select&gt;&gt;</option>\n              {currency.map((Item) => (\n                <option value={Item.id}> {Item.description}</option>\n              ))}\n            </select>\n          </div>\n          <div className=\"form-group col-md-4 mb-2\">\n            <label htmlFor=\"name\">Revenue</label>\n            <input\n              type=\"text\"\n              className=\"text cancel\"\n              id=\"size\"\n              defaultValue={\"0.00\"}\n              required\n              onChange={(e) => {\n                const input = e.target.value;\n                const regex = /^[0-9]*\\.?[0-9]*$/; // Regular expression to match numbers\n\n                if (!regex.test(input)) {\n                  e.target.value = input.replace(/[^0-9.]/g, \"\"); // Remove non-numeric characters\n                }\n\n                getCode2(e);\n              }}\n            />\n          </div>\n          <div className=\"col-md-4\">\n            <div className=\"row\">\n              <div className=\"form-group col-md-6\">\n                <label htmlFor=\"name\">\n                  Deliverables <span className=\"error-text\">&nbsp;*</span>\n                </label>\n                <select\n                  className=\"text cancel\"\n                  id=\"isDeliverable\"\n                  onChange={(e) => getcurrencyId(e)}\n                  ref={(ele) => {\n                    ref.current[12] = ele;\n                  }}\n                >\n                  <option value=\"\"> &lt;&lt;Please Select&gt;&gt;</option>\n                  <option value={\"Yes\"}>Yes</option>\n                  <option value={\"No\"}>No</option>\n                </select>\n              </div>\n              <div className=\"form-group col-md-6 \">\n                <label htmlFor=\"name\">\n                  Team Location <span className=\"error-text\">&nbsp;*</span>\n                </label>\n                <select\n                  className=\"text cancel\"\n                  id=\"teamLocationId\"\n                  onChange={(e) => getcurrencyId(e)}\n                  ref={(ele) => {\n                    ref.current[13] = ele;\n                  }}\n                >\n                  <option value=\"\"> &lt;&lt;Please Select&gt;&gt;</option>\n                  <option value={364}>Blended Shore</option>\n                  <option value={361}>Client Site</option>\n                  <option value={363}>Off Shore</option>\n                  <option value={362}>Onsite</option>\n                </select>\n              </div>\n            </div>\n          </div>\n          <div className=\"col-md-4\">\n            <div className=\"row\">\n              <div className=\"form-group col-md-6 mb-2\">\n                <label htmlFor=\"name\">PO Number</label>\n                <select\n                  className=\"cancel\"\n                  id=\"PoNumber\"\n                  onChange={(e) => getcurrencyId(e)}\n                >\n                  <option value=\"\"> &lt;&lt;Please Select&gt;&gt;</option>\n                  {ponumber.map((Item) => (\n                    <option value={Item.id}> {Item.name}</option>\n                  ))}\n                </select>\n              </div>\n              <div className=\"form-group col-md-6 mb-2\">\n                <label htmlFor=\"name\">SF Engagement Type</label>\n                <select\n                  className=\"text cancel\"\n                  id=\"sfEngTypeId\"\n                  onChange={(e) => getcurrencyId(e)}\n                >\n                  <option value=\"\"> &lt;&lt;Please Select&gt;&gt;</option>\n                  <option value={1357}>New Persuit</option>\n                  <option value={1358}>Stream</option>\n                </select>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"group mb-5 customCard\">\n        <h2>Schedule</h2>\n        <div className=\"group-content row\">\n          <div className=\"form-group col-md-4 mb-2\">\n            <label htmlFor=\"name\">\n              Preliminary Start Date <span className=\"error-text\">&nbsp;*</span>\n            </label>\n            <div\n              className=\"datepicker cancel\"\n              //id=\"plannedStartDt\"\n              ref={(ele) => {\n                ref.current[14] = ele;\n              }}\n            >\n              <DatePicker\n                id=\"plannedStartDt\"\n                className=\"cancel\"\n                selected={date}\n                dateFormat=\"dd-MMM-yyyy\"\n                showMonthDropdown\n                showYearDropdown\n                dropdownMode=\"select\"\n                onChange={(e) => {\n                  SetDate(e);\n                  setFormData((prev) => ({\n                    ...prev,\n                    [\"plannedStartDt\"]: moment(e).format(\"yyyy-MM-DD\"),\n                  }));\n                  // setMonth(e);\n                }}\n                placeholderText=\"Preliminary Start Date\"\n                //disabled={disable}\n                onKeyDown={(e) => {\n                  e.preventDefault();\n                }}\n              />\n            </div>\n          </div>\n          <div className=\"form-group col-md-4 mb-2\">\n            <label htmlFor=\"name\">\n              Preliminary End Date <span className=\"error-text\">&nbsp;*</span>{\" \"}\n            </label>\n            <div\n              className=\"datepicker cancel\"\n              ref={(ele) => {\n                ref.current[15] = ele;\n              }}\n            // id=\"plannedEndDt\"\n            >\n              <DatePicker\n                className=\"cancel \"\n                id=\"plannedEndDt\"\n                selected={endDate}\n                dateFormat=\"dd-MMM-yyyy\"\n                showMonthDropdown\n                showYearDropdown\n                dropdownMode=\"select\"\n                onChange={(e) => {\n                  SetEndDate(e);\n                  setFormData((prev) => ({\n                    ...prev,\n                    [\"plannedEndDt\"]: moment(e).format(\"yyyy-MM-DD\"),\n                  }));\n                  // setMonth(e);\n                }}\n                minDate={date}\n                placeholderText=\"Preliminary End Date\"\n                //disabled={disable}\n                onKeyDown={(e) => {\n                  e.preventDefault();\n                }}\n              />\n            </div>\n          </div>\n          <div className=\"form-group col-md-4 mb-2\">\n            <label htmlFor=\"name\">\n              Time Entry Mode <span className=\"error-text\">&nbsp;*</span>{\" \"}\n            </label>\n            <select\n              className=\"text cancel\"\n              id=\"typTimeEntryModeId\"\n              onChange={(e) => getcurrencyId(e)}\n              ref={(ele) => {\n                ref.current[16] = ele;\n              }}\n            >\n              <option value=\"\"> &lt;&lt;Please Select&gt;&gt;</option>\n              <option value={19}>Project Level</option>\n              <option value={20}>Task Level</option>\n            </select>\n          </div>\n          <div className=\"form-group col-md-4 mb-2\">\n            <label htmlFor=\"name\">\n              Scheduling Mode <span className=\"error-text\">&nbsp;*</span>\n            </label>\n            <select\n              className=\"text cancel\"\n              id=\"typSchedulingModeId\"\n              onChange={(e) => getcurrencyId(e)}\n              ref={(ele) => {\n                ref.current[17] = ele;\n              }}\n            >\n              <option value=\"\"> &lt;&lt;Please Select&gt;&gt;</option>\n              <option value={30}>Days</option>\n              <option value={31}>Hours</option>\n              <option value={29}>Weeks</option>\n            </select>\n          </div>\n          <div className=\"form-group col-md-4 mb-2\">\n            <label htmlFor=\"name\">\n              {\" \"}\n              Holiday Calendar <span className=\"error-text\">&nbsp;*</span>\n            </label>\n            <select\n              className=\"text cancel\"\n              id=\"holidayCalendarId\"\n              onChange={(e) => getcurrencyId(e)}\n              ref={(ele) => {\n                ref.current[18] = ele;\n              }}\n            >\n              <option value=\"\"> &lt;&lt;Please Select&gt;&gt;</option>\n              {holiday.map((Item) => (\n                <option value={Item.id}> {Item.name}</option>\n              ))}\n            </select>\n          </div>\n          <div className=\"form-group col-md-4 mb-2\">\n            <label htmlFor=\"name\">\n              {\" \"}\n              Week Calendar <span className=\"error-text\">&nbsp;*</span>\n            </label>\n            <select\n              className=\"text cancel\"\n              id=\"weekCalendarId\"\n              onChange={(e) => getcurrencyId(e)}\n              ref={(ele) => {\n                ref.current[19] = ele;\n              }}\n            >\n              <option value=\"\"> &lt;&lt;Please Select&gt;&gt;</option>\n              {week.map((Item) => (\n                <option value={Item.id}> {Item.calendar_name}</option>\n              ))}\n            </select>\n          </div>\n        </div>\n      </div>\n      <div className=\"row\">\n        <div className=\"col-md-4\">\n          <div className=\"group mb-5 customCard\">\n            <h2>Key Contact </h2>\n            <div className=\"group-content row\">\n              <div className=\" col-md-12 mb-2\">\n                <div className=\"form-group row\">\n                  <label className=\"col-5\" htmlFor=\"name\">\n                    Delivery Manager <span className=\"error-text\">&nbsp;*</span>\n                  </label>\n                  <span className=\"col-1\">:</span>\n                  <div className=\"col-6\">\n                    {/* <div className=\"autoComplete-container\">\n                      <RiskAutoComplete\n                        resource={resource}\n                        // setState={setState}\n                        resourceFnc={resourceFnc}\n                        setFormData={setFormData}\n                        onChange={(e) => handleChange(e)}\n                        //editedData={editedData}\n                      />\n                    </div> */}\n                    <div\n                      className=\"autoComplete-container react  cancel  reactsearchautocomplete\"\n                      ref={(ele) => {\n                        ref.current[20] = ele;\n                      }}\n                    >\n                      <ReactSearchAutocomplete\n                        items={resource}\n                        type=\"Text\"\n                        name=\"resource\"\n                        id=\"deliveryManager\"\n                        className=\"err text cancel nochange\"\n                        fuseOptions={{ keys: [\"id\", \"name\"] }}\n                        resultStringKeyName=\"name\"\n                        placeholder=\"Type minimum 3 characters to get the list\"\n                        resource={resource}\n                        onClear={handleClearDeliveryManager}\n                        resourceFnc={resourceFnc}\n                        onSelect={(e) => {\n                          setFormData((prevProps) => ({\n                            ...prevProps,\n                            deliveryManager: e.id,\n                          }));\n                        }}\n                        showIcon={false}\n                      />\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div className=\" col-md-12 mb-2\">\n                <div className=\"form-group row\">\n                  <label className=\"col-5\" htmlFor=\"name\">\n                    Primary Manager <span className=\"error-text\">&nbsp;*</span>\n                  </label>\n                  <span className=\"col-1\">:</span>\n                  <div className=\"col-6\">\n                    <div\n                      className=\"autoComplete-container react cancel  reactsearchautocomplete\"\n                      ref={(ele) => {\n                        ref.current[21] = ele;\n                      }}\n                    >\n                      <ReactSearchAutocomplete\n                        items={resource}\n                        type=\"Text\"\n                        name=\"resource\"\n                        id=\"primaryManger\"\n                        className=\"err text cancel nochange\"\n                        fuseOptions={{ keys: [\"id\", \"name\"] }}\n                        resultStringKeyName=\"name\"\n                        placeholder=\"Type minimum 3 characters to get the list\"\n                        resource1={resource1}\n                        onClear={handleClearPrimaryManager}\n                        resourceFnc={resourceFnc}\n                        onSelect={(e) => {\n                          setFormData((prevProps) => ({\n                            ...prevProps,\n                            primaryManger: e.id,\n                            projectRequestor: e.id,\n                          }));\n                          setName((prevProps) => ({\n                            ...prevProps,\n                            projectRequestor: e.name,\n                          }));\n                          getSupervisor(e.id);\n                        }}\n                        showIcon={false}\n                      />\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div className=\" col-md-12 mb-2\">\n                <div className=\"form-group row\">\n                  <label className=\"col-5\" htmlFor=\"name\">\n                    Project Requestor{\" \"}\n                    <span className=\"error-text\">&nbsp;*</span>\n                  </label>\n                  <span className=\"col-1\">:</span>\n                  <div className=\"col-6\">\n                    <div\n                      className=\"autoComplete-container cancel  reactsearchautocomplete\"\n                      ref={(ele) => {\n                        ref.current[22] = ele;\n                      }}\n                    >\n                      <ReactSearchAutocomplete\n                        items={resource2}\n                        type=\"Text\"\n                        name=\"resource\"\n                        id=\"projectRequestor\"\n                        className=\"err text cancel\"\n                        fuseOptions={{ keys: [\"id\", \"name\"] }}\n                        resultStringKeyName=\"name\"\n                        inputSearchString={name.projectRequestor}\n                        resource2={resource2}\n                        onClear={handleClearProjectRequester}\n                        resourceFnc={resourceFnc}\n                        onSelect={(e) => {\n                          setFormData((prevProps) => ({\n                            ...prevProps,\n                            projectRequestor: e.id,\n                          }));\n                        }}\n                        showIcon={false}\n                      />\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div className=\" col-md-12 mb-2\">\n                <div className=\"form-group row\">\n                  <label className=\"col-5\" htmlFor=\"name\">\n                    Project Approver <span className=\"error-text\">&nbsp;*</span>\n                  </label>\n                  <span className=\"col-1\">:</span>\n                  <div className=\"col-6\">\n                    <div\n                      className=\"autoComplete-container cancel  reactsearchautocomplete \"\n                      id=\"auto\"\n                      ref={(ele) => {\n                        ref.current[23] = ele;\n                      }}\n                    >\n                      <ReactSearchAutocomplete\n                        items={resource3}\n                        type=\"Text\"\n                        name=\"resource\"\n                        id=\"projectApproval\"\n                        className=\"err \"\n                        fuseOptions={{ keys: [\"id\", \"name\"] }}\n                        resultStringKeyName=\"name\"\n                        inputSearchString={supervisor}\n                        resource={resource}\n                        onClear={handleClearProjectApprover}\n                        resourceFnc={resource3}\n                        onSelect={(e) => {\n                          setFormData((prevProps) => ({\n                            ...prevProps,\n                            projectApproval: e.id,\n                          }));\n                        }}\n                        showIcon={false}\n                      />\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"col-md-4\">\n          <div className=\"group mb-0 customCard\">\n            <h2> Services Offered</h2>\n            <div className=\"group-content row\">\n              {/* <div class=\"col-5\">\n                                                                <select name=\"myselect\" id=\"myselect\" size=\"4\" multiple>\n                                                                        <option>1</option>\n                                                                        <option>2</option>\n                                                                        <option>3</option>\n                                                                        <option>4</option>\n                                                                </select>\n\n                                                        </div>\n                                                        <div className=\"col-2 my-3\">\n                                                                <button className=\"col-9 btn btn-secondary mb-1\" ><AiOutlineDoubleLeft /></button>\n                                                                <button className=\"col-9 btn btn-secondary\"><AiOutlineDoubleRight /></button></div>\n                                                        <div class=\"col-5\">\n\n                                                                <select name=\"myselect\" id=\"myselect\" size=\"4\" multiple>\n                                                                        <option>1</option>\n                                                                        <option>2</option>\n                                                                        <option>3</option>\n                                                                        <option>4</option>\n                                                                </select>\n\n                                                        </div> */}\n              <div\n                className=\"transfer\"\n                ref={(ele) => {\n                  ref.current[24] = ele;\n                }}\n              >\n                {/* <Transfer\n                  listStyle={{ width: 180, height: 150 }}\n                  dataSource={service}\n                  targetKeys={targetKeys}\n                  selectedKeys={selectedKeys}\n                  onChange={(nextTargetKeys) => {\n                    setTargetKeys(nextTargetKeys);\n                    let filteredCountry = [];\n                    nextTargetKeys.forEach((d) => {\n                      // //console.log(d.value)\n                      filteredCountry.push(d);\n                      //console.log(d, \"line no-----\");\n                    });\n                    setFormData((prevVal) => ({\n                      ...prevVal,\n                      [\"serviceOfferingId\"]: filteredCountry.toString(),\n                    }));\n                  }}\n                  onSelectChange={(sourceSelectedKeys, targetSelectedKeys) => {\n                    setSelectedKeys([\n                      ...sourceSelectedKeys,\n                      ...targetSelectedKeys,\n                    ]);\n                  }}\n                  render={(item) => item.title}\n                /> */}\n                {service.length === 0 ? (\n                  <div>No data available.</div>\n                ) : (\n                  <Transfer\n                    listStyle={{ width: 180, height: 150 }}\n                    dataSource={service}\n                    targetKeys={targetKeys}\n                    selectedKeys={selectedKeys}\n                    onChange={(nextTargetKeys) => {\n                      setTargetKeys(nextTargetKeys);\n                      let filteredCountry = [];\n                      nextTargetKeys.forEach((d) => {\n                        filteredCountry.push(d);\n                      });\n                      setFormData((prevVal) => ({\n                        ...prevVal,\n                        [\"serviceOfferingId\"]: filteredCountry.toString(),\n                      }));\n                    }}\n                    onSelectChange={(\n                      sourceSelectedKeys,\n                      targetSelectedKeys\n                    ) => {\n                      setSelectedKeys([\n                        ...sourceSelectedKeys,\n                        ...targetSelectedKeys,\n                      ]);\n                    }}\n                    render={(item) => item.title}\n                  />\n                )}\n              </div>\n            </div>\n          </div>\n        </div>\n        {contract[0]?.id == \"25\" ||\n          contract[0]?.id == \"26\" ||\n          contract[0]?.id == \"27\" ||\n          contract[0]?.id == \"28\" ||\n          contract[0]?.id == \"606\" ||\n          contract[0]?.id == \"752\" ? (\n          <div className=\"col-md-4\">\n            <div className=\"group mb-5 customCard\">\n              <h2>\n                <RiProfileLine /> PCQA\n              </h2>\n              <div className=\"group-content row\">\n                <div className=\" col-md-12 mb-2\">\n                  <div className=\"form-group row\">\n                    <label className=\"col-5 \" htmlFor=\"deliveryManager \">\n                      Facilitator\n                    </label>\n                    <span className=\"col-1\">:</span>\n                    <div className=\"col-6 \">\n                      <div\n                        className=\"autoComplete-container\"\n                        ref={(ele) => {\n                          if (\n                            contract[0]?.id == \"25\" ||\n                            contract[0]?.id == \"26\" ||\n                            contract[0]?.id == \"27\" ||\n                            contract[0]?.id == \"28\" ||\n                            contract[0]?.id == \"606\" ||\n                            contract[0]?.id == \"752\"\n                          ) {\n                            ref.current[24] = ele;\n                          }\n                        }}\n                      >\n                        <ReactSearchAutocomplete\n                          items={resource2}\n                          type=\"Text\"\n                          name=\"resource\"\n                          id=\"facilitator\"\n                          className=\"err cancel\"\n                          fuseOptions={{ keys: [\"id\", \"name\"] }}\n                          resultStringKeyName=\"name\"\n                          placeholder=\"Type minimum 3 characters to get the list\"\n                          resource2={resource2}\n                          resourceFnc={resourceFnc}\n                          onSelect={(e) => {\n                            setFormData((prevProps) => ({\n                              ...prevProps,\n                              facilitator: e.id,\n                            }));\n                          }}\n                          showIcon={false}\n                        />\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                <div className=\" col-md-12 mb-2\">\n                  <div className=\"form-group row\">\n                    <label className=\"col-5 \" htmlFor=\"primaryManager  \">\n                      Client Email\n                    </label>\n                    <span className=\"col-1\">:</span>\n                    <div className=\"col-6\">\n                      <input\n                        type=\"text\"\n                        className=\"form-control disableField\"\n                        id=\"clientEmail \"\n                        required\n                        placeholder=\"Client Email\"\n                        Value={(() => {\n                          const defaultValue = email === \"\" ? \" \" : email;\n                          return defaultValue;\n                        })()}\n                        onChange={(e) => {\n                          getclientEmail(e);\n                          setMail(e);\n                        }}\n                        disabled\n                      />\n                    </div>\n                  </div>\n                </div>\n                <div className=\" col-md-12 mb-2\">\n                  <div className=\"form-group row\">\n                    <label className=\"col-5 \" htmlFor=\"projectRequestor \">\n                      Project Type <span className=\"error-text\">&nbsp;*</span>\n                    </label>\n                    <span className=\"col-1\">:</span>\n                    <div className=\"col-6 \">\n                      <select\n                        className=\"text cancel\"\n                        id=\"pcqaType\"\n                        onChange={(e) => getcurrencyId(e)}\n                        ref={(ele) => {\n                          ref.current[25] = ele;\n                        }}\n                      >\n                        <option value=\"\"> &lt;&lt;Please Select&gt;&gt;</option>\n                        {type.map((Item) => (\n                          <option value={Item.id}> {Item.lkup_name}</option>\n                        ))}\n                      </select>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        ) : (\n          \"\"\n        )}\n      </div>\n      <div className=\"group mb-5 customCard\">\n        <h2>Documents </h2>\n        {/* {displayRowEdit.map((d) => (\n          <li>{d}</li>\n        ))} */}\n        {documentRender}\n        {/* {displayRowEdit.length > 0\n          ? displayRowEdit.map((d) => {\n              return (\n                <div className=\"group-content row\">\n                  <div className=\"form-group col-md-4 mb-2\">\n                    <label htmlFor=\"name\">Contract Document Type </label>\n                    <select className=\"\" id=\"divison\">\n                      <option value={1}>A</option>\n                      <option value={2}>B</option>\n                      <option value={3}>C</option>\n                    </select>\n                  </div>\n                  <div className=\"form-group col-md-4 mb-2\">\n                    <label htmlFor=\"name\">Upload Contract Document </label>\n                    <input\n                      type=\"text\"\n                      className=\"form-control\"\n                      id=\"name\"\n                      placeholder=\"Project Code \"\n                      required\n                    />\n                  </div>\n                </div>\n              );\n            })\n          : \"\"} */}\n        <div className=\"col-md-12 col-sm-12 col-xs-12 my-2 btn-container center\">\n          <button\n            type=\"button\"\n            className=\"btn btn-primary\"\n            onClick={() => {\n              DisplayFnc();\n            }}\n          >\n            {\" \"}\n            <MdOutlinePlaylistAdd />\n            Add{\" \"}\n          </button>\n        </div>\n      </div>\n      <div className=\" form-group col-md-12 col-sm-12 col-xs-12 btn-container center my-3 mb-2\">\n        <button\n          className=\"btn btn-primary\"\n          type=\"submit\"\n          onClick={() => handleClick()}\n        >\n          <VscSave /> Save\n        </button>\n        <button\n          className=\"btn btn-secondary\"\n          // onClick={() => {\n          //   handleCancel();\n          //   handleRefresh();\n          // }}\n          onClick={() => {\n            navigate(`/project/create`, {\n              state: { btnState: \"create\" },\n            });\n            window.location.reload();\n          }}\n        // onClick={refreshAndNavigate}\n        >\n          <ImCross /> Cancel\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default ProjectCreate;\n","import { useState } from \"react\";\nimport Popover from \"@mui/material/Popover\";\nimport Typography from \"@mui/material/Typography\";\nimport React from \"react\";\n\nexport default function ProjectExpensePopOver(props) {\n  const { rowData, setAnchorEl, anchorEl } = props;\n\n  console.log(rowData + \"in line 9...\");\n\n  const handlePopoverOpen = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handlePopoverClose = () => {\n    setAnchorEl(null);\n  };\n\n  const open = Boolean(anchorEl);\n\n  return (\n    <div>\n      <Typography\n        aria-owns={open ? \"mouse-over-popover\" : undefined}\n        aria-haspopup=\"true\"\n        onMouseEnter={handlePopoverOpen}\n        onMouseLeave={handlePopoverClose}\n      ></Typography>\n      <Popover\n        id=\"mouse-over-popover\"\n        sx={{\n          pointerEvents: \"none\",\n        }}\n        open={open}\n        anchorEl={anchorEl}\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"left\",\n        }}\n        transformOrigin={{\n          vertical: \"top\",\n          horizontal: \"left\",\n        }}\n        onClose={handlePopoverClose}\n        disableRestoreFocus\n      >\n        <Typography sx={{ p: 1 }}>\n          <div>\n            <strong\n              style={{\n                fontSize: \"14px\",\n              }}\n            >\n              Approval WorkFlow:\n            </strong>\n            <br />\n            <span style={{ fontSize: \"13px\" }}>{rowData}</span>\n          </div>\n        </Typography>\n      </Popover>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n// import FlatPrimeReactTable from \"../PrimeReactTableComponent/FlatPrimeReactTable\";\nimport { environment } from \"../../environments/environment\";\nimport CellRendererPrimeReactDataTable from \"../PrimeReactTableComponent/CellRendererPrimeReactDataTable\";\nimport { Column } from \"primereact/column\";\n\nfunction CutomerRoles({ resDtl }) {\n  const baseUrl = environment.baseUrl;\n  const [dateFlag, setdateFlag] = useState(0);\n\n  const [custRoles, SetCustRoles] = useState([]);\n  useEffect(() => {\n    getTraining();\n  }, [resDtl, dateFlag]);\n\n  const getTraining = () => {\n    axios({\n      method: \"get\",\n      url:\n        baseUrl +\n        `/customersms/Customers/getResAccountRoleDtls?rid=${resDtl}&dateFlag=${dateFlag}`,\n    }).then(function (response) {\n      const GetData = response.data;\n      let dataHeader = [\n        {\n          customer: \"Customer\",\n          role_types: \"Roles\",\n        },\n      ];\n      let fData = [...dataHeader, ...GetData];\n      console.log(fData);\n      SetCustRoles(fData);\n\n      // console.log(resp)\n    });\n  };\n  console.log(custRoles);\n  let rows = 5;\n  const [headerData, setHeaderData] = useState([]);\n  const customer = (data) => {\n    return (\n      <div className=\"ellipsis\" data-toggle=\"tooltip\" title={data[\"customer\"]}>\n        {data[\"customer\"]}\n      </div>\n    );\n  };\n  const roleTypes = (data) => {\n    return (\n      <div\n        className=\"ellipsis\"\n        data-toggle=\"tooltip\"\n        title={data[\"role_types\"]}\n      >\n        {data[\"role_types\"]}\n      </div>\n    );\n  };\n  const dynamicColumns = Object.keys(headerData)?.map((col, i) => {\n    return (\n      <Column\n        sortable\n        key={col}\n        body={\n          col == \"customer\" ? customer : col == \"role_types\" ? roleTypes : \"\"\n        }\n        field={col}\n        header={headerData[col]}\n      />\n    );\n  });\n  useEffect(() => {\n    custRoles[0] && setHeaderData(JSON.parse(JSON.stringify(custRoles[0])));\n  }, [custRoles]);\n  return (\n    <div>\n      <div className=\"group mb-3 customCard\">\n        <h2>Customer Roles</h2>\n        <div className=\"group mb-3 customCard \">\n          <div className=\"col-md-12\">\n            {/* <table className=\"table table-bordered serviceTable\" role=\"grid\">\n              <thead>\n                <tr>\n                  <th style={{ textAlign: \"center\" }}>Customer</th>\n                  <th style={{ textAlign: \"center\" }}>Roles</th>\n                </tr>\n              </thead>\n              <tbody ></tbody>\n            </table> */}\n            <div className=\"col-md-12 mt-1\">\n              <CellRendererPrimeReactDataTable\n                data={custRoles}\n                rows={rows}\n                dynamicColumns={dynamicColumns}\n                headerData={headerData}\n                setHeaderData={setHeaderData}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default CutomerRoles;\n","import React, { useState, useEffect } from \"react\";\nimport FlatPrimeReactTable from \"../PrimeReactTableComponent/FlatPrimeReactTable\";\nimport axios from \"axios\";\nimport { environment } from \"../../environments/environment\";\nimport moment from \"moment\";\nimport { Column } from \"primereact/column\";\nimport CellRendererPrimeReactDataTable from \"../PrimeReactTableComponent/CellRendererPrimeReactDataTable\";\nimport { Link } from \"react-router-dom\";\nfunction ProjectDetails({ resDtl, resper }) {\n  const [dateFlag, setdateFlag] = useState(\"0\");\n  console.log(dateFlag);\n  const [data, setData] = useState([]);\n  const [linkColumns, setLinkColumns] = useState([]);\n  const [linkColumnsRoutes, setLinkColumnsRoutes] = useState([]);\n  const [headerData, setHeaderData] = useState([]);\n\n  const baseUrl = environment.baseUrl;\n\n  let rows = 5;\n\n  const LinkTemplate = (data) => {\n    console.log(\"in line 91------------\");\n    console.log(data);\n    let rou = linkColumnsRoutes[0]?.split(\":\");\n    return (\n      <>\n        <Link\n          target=\"_blank\"\n          to={rou[0] + \":\" + data[rou[1]]}\n          data-toggle=\"tooltip\"\n          title={data.projectName}\n        >\n          {data[linkColumns[0]]}\n        </Link>\n      </>\n    );\n  };\n  const LinkfromDate = (data) => {\n    return (\n      <div\n        className=\"ellipsis\"\n        align=\"right\"\n        data-toggle=\"tooltip\"\n        title={data[\"fromDate\"]}\n      >\n        {data[\"fromDate\"]}\n      </div>\n    );\n  };\n  const LinktoDate = (data) => {\n    return (\n      <div\n        className=\"ellipsis\"\n        align=\"right\"\n        data-toggle=\"tooltip\"\n        title={data[\"toDate\"]}\n      >\n        {data[\"toDate\"]}\n      </div>\n    );\n  };\n  const LinkallocType = (data) => {\n    return (\n      <div className=\"ellipsis\" data-toggle=\"tooltip\" title={data[\"allocType\"]}>\n        {data[\"allocType\"]}\n      </div>\n    );\n  };\n  const LinknoOfHrs = (data) => {\n    return (\n      <div\n        className=\"ellipsis\"\n        align=\"right\"\n        data-toggle=\"tooltip\"\n        title={data[\"noOfHrs\"]}\n      >\n        {data[\"noOfHrs\"]}\n      </div>\n    );\n  };\n\n  const dynamicColumns = Object.keys(headerData)?.map((col, i) => {\n    return (\n      <Column\n        sortable\n        key={col}\n        body={\n          col == \"projectName\"\n            ? LinkTemplate\n            : col == \"fromDate\"\n            ? LinkfromDate\n            : col == \"toDate\"\n            ? LinktoDate\n            : col == \"allocType\"\n            ? LinkallocType\n            : col == \"noOfHrs\"\n            ? LinknoOfHrs\n            : \"\"\n        }\n        field={col}\n        header={headerData[col]}\n      />\n    );\n  });\n\n  useEffect(() => {\n    data[0] && setHeaderData(JSON.parse(JSON.stringify(data[0])));\n  }, [data]);\n\n  const getResProjectDtls = () => {\n    axios({\n      method: \"get\",\n      url:\n        baseUrl +\n        `/customersms/Customers/getResProjectDtls?rid=${resper[0]?.id}&dateFlag=${dateFlag}`,\n    }).then(function (res) {\n      const GetData = res.data;\n      let dataHeader = [\n        {\n          projectName: \"Project Name\",\n          fromDate: \"From Date\",\n          toDate: \"To Date\",\n          allocType: \"Alloc Type\",\n          noOfHrs: \"Hours\",\n        },\n      ];\n\n      // console.log(data)\n      // setProjectDtls(res);\n      // console.log(res)\n      for (let i = 0; i < GetData.length; i++) {\n        GetData[i][\"fromDate\"] =\n          GetData[i][\"fromDate\"] == null\n            ? \"\"\n            : moment(GetData[i][\"fromDate\"]).format(\"DD-MMM-yyyy\");\n        GetData[i][\"toDate\"] =\n          GetData[i][\"toDate\"] == null\n            ? \"\"\n            : moment(GetData[i][\"toDate\"]).format(\"DD-MMM-yyyy\");\n      }\n\n      let data = [\"projectName\"];\n      let linkRoutes = [\"/project/Overview/:projectId\"];\n      setLinkColumns(data);\n      setLinkColumnsRoutes(linkRoutes);\n\n      let fData = [...dataHeader, ...GetData];\n      console.log(fData);\n      setData(fData);\n    });\n  };\n  useEffect(() => {\n    getResProjectDtls();\n  }, [dateFlag, resper]);\n\n  const handleRadioChange = (e) => {\n    console.log(e.target.id, \"--radio\");\n    setdateFlag(e.currentTarget.id);\n  };\n  return (\n    <div>\n      <div className=\"group mb-3 customCard\">\n        <h2>Project Details</h2>\n        <div className=\"group mb-3 customCard\">\n          <div className=\"col-md-12 mb-2\">\n            <div className=\"form-check form-check-inline\">\n              <input\n                className=\"form-check-input\"\n                type=\"radio\"\n                // name=\"0\"\n                id=\"0\"\n                checked={dateFlag == \"0\"}\n                onChange={(e) => handleRadioChange(e)}\n              />\n\n              <label htmlFor=\"country-select\">Current+Future</label>\n            </div>\n            <div className=\"form-check form-check-inline\">\n              <input\n                className=\"form-check-input\"\n                type=\"radio\"\n                name=\"-1\"\n                id=\"-1\"\n                checked={dateFlag === \"-1\"}\n                onChange={(e) => handleRadioChange(e)}\n              />\n              <label htmlFor=\"past\">Past</label>\n            </div>\n            <div className=\"form-check form-check-inline\">\n              <input\n                className=\"form-check-input\"\n                type=\"radio\"\n                name=\"\"\n                id=\"\"\n                checked={dateFlag === \"\"}\n                onChange={(e) => handleRadioChange(e)}\n              />\n              <label htmlFor=\"all\">All</label>\n            </div>\n          </div>\n\n          <div className=\"col-md-12\">\n            <CellRendererPrimeReactDataTable\n              data={data}\n              rows={rows}\n              linkColumns={linkColumns}\n              linkColumnsRoutes={linkColumnsRoutes}\n              dynamicColumns={dynamicColumns}\n              headerData={headerData}\n              setHeaderData={setHeaderData}\n            />\n\n            {/* <FlatPrimeReactTable data={data} rows={rows} /> */}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default ProjectDetails;\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n// import FlatPrimeReactTable from \"../PrimeReactTableComponent/FlatPrimeReactTable\";\nimport { environment } from \"../../environments/environment\";\nimport CellRendererPrimeReactDataTable from \"../PrimeReactTableComponent/CellRendererPrimeReactDataTable\";\nimport { Column } from \"primereact/column\";\nimport { Link } from \"react-router-dom\";\n\nfunction ProjectRoles({ resDtl }) {\n  const baseUrl = environment.baseUrl;\n\n  const [prjRoles, SetPrjRoles] = useState([]);\n  const [dateFlag, setdateFlag] = useState(0);\n\n  useEffect(() => {\n    getProjectRoles();\n  }, [resDtl, dateFlag]);\n  const getProjectRoles = () => {\n    axios({\n      method: \"get\",\n      url:\n        baseUrl +\n        `/customersms/Customers/getResPrjRoleDetails?rid=${resDtl}&dateFlag=${dateFlag}`,\n    }).then(function (response) {\n      const GetData = response.data;\n\n      let dataHeader = [\n        {\n          customer: \"Customer\",\n          projectName: \"Project Name\",\n          role_types: \"Roles\",\n        },\n      ];\n\n      let data = [\"projectName\"];\n      let linkRoutes = [\"/project/Overview/:projectId\"];\n      setLinkColumns(data);\n      setLinkColumnsRoutes(linkRoutes);\n      let fData = [...dataHeader, ...GetData];\n      console.log(fData);\n      SetPrjRoles(fData);\n\n      // console.log(resp)\n    });\n  };\n  console.log(prjRoles);\n  let rows = 5;\n  const [linkColumns, setLinkColumns] = useState([]);\n  const [linkColumnsRoutes, setLinkColumnsRoutes] = useState([]);\n  const [headerData, setHeaderData] = useState([]);\n  const customer = (data) => {\n    return (\n      <div className=\"ellipsis\" data-toggle=\"tooltip\" title={data[\"customer\"]}>\n        {data[\"customer\"]}\n      </div>\n    );\n  };\n  const roleTypes = (data) => {\n    return (\n      <div\n        className=\"ellipsis\"\n        data-toggle=\"tooltip\"\n        title={data[\"role_types\"]}\n      >\n        {data[\"role_types\"]}\n      </div>\n    );\n  };\n  const projectName = (data) => {\n    console.log(\"in line 91------------\");\n    console.log(data);\n    let rou = linkColumnsRoutes[0]?.split(\":\");\n    return (\n      <>\n        <Link\n          target=\"_blank\"\n          to={rou[0] + \":\" + data[rou[1]]}\n          data-toggle=\"tooltip\"\n          title={data.projectName}\n        >\n          {data[linkColumns[0]]}\n        </Link>\n      </>\n    );\n  };\n\n  const dynamicColumns = Object.keys(headerData)?.map((col, i) => {\n    return (\n      <Column\n        sortable\n        key={col}\n        body={\n          col == \"customer\"\n            ? customer\n            : col == \"role_types\"\n            ? roleTypes\n            : col == \"projectName\"\n            ? projectName\n            : \"\"\n        }\n        field={col}\n        header={headerData[col]}\n      />\n    );\n  });\n  useEffect(() => {\n    prjRoles[0] && setHeaderData(JSON.parse(JSON.stringify(prjRoles[0])));\n  }, [prjRoles]);\n  return (\n    <div>\n      <div className=\"group mb-3 customCard\">\n        <h2>Project Roles</h2>\n        <div className=\"group mb-3 customCard\">\n          <div className=\"col-md-12\">\n            <div className=\"col-md-12 mt-1\">\n              <CellRendererPrimeReactDataTable\n                data={prjRoles}\n                rows={rows}\n                dynamicColumns={dynamicColumns}\n                headerData={headerData}\n                setHeaderData={setHeaderData}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default ProjectRoles;\n","import React, { useState, useEffect } from \"react\";\nimport FlatPrimeReactTable from \"../PrimeReactTableComponent/FlatPrimeReactTable\";\nimport { environment } from \"../../environments/environment\";\nimport CellRendererPrimeReactDataTable from \"../PrimeReactTableComponent/CellRendererPrimeReactDataTable\";\nimport { Column } from \"primereact/column\";\n\nimport axios from \"axios\";\nfunction ReporteeDetails({ resDtl }) {\n  console.log(resDtl);\n  const [reporteeDetails, setReporteeDetails] = useState([]);\n  const baseUrl = environment.baseUrl;\n  const [data, setData] = useState([]);\n  const [linkColumns, setLinkColumns] = useState([]);\n  const [linkColumnsRoutes, setLinkColumnsRoutes] = useState([]);\n  const [headerData, setHeaderData] = useState([]);\n  let rows = 5;\n  const LinkTemplate = (data) => {\n    return (\n      <div className=\"ellipsis\" data-toggle=\"tooltip\" title={data[\"empName\"]}>\n        {data[\"empName\"]}\n      </div>\n    );\n  };\n  const LinkName = (data) => {\n    return (\n      <div className=\"ellipsis\" data-toggle=\"tooltip\" title={data[\"name\"]}>\n        {data[\"name\"]}\n      </div>\n    );\n  };\n  const LinkLongTitle = (data) => {\n    return (\n      <div\n        className=\"ellipsis\"\n        data-toggle=\"tooltip\"\n        title={data[\"long_title\"]}\n      >\n        {data[\"long_title\"]}\n      </div>\n    );\n  };\n  const dynamicColumns = Object.keys(headerData)?.map((col, i) => {\n    return (\n      <Column\n        sortable\n        key={col}\n        body={\n          col == \"empName\"\n            ? LinkTemplate\n            : col == \"name\"\n            ? LinkName\n            : col == \"long_title\"\n            ? LinkLongTitle\n            : \"\"\n        }\n        field={col}\n        header={headerData[col]}\n      />\n    );\n  });\n  useEffect(() => {\n    data[0] && setHeaderData(JSON.parse(JSON.stringify(data[0])));\n  }, [data]);\n  const getReporteeDetails = () => {\n    axios({\n      method: \"get\",\n      url: baseUrl + `/customersms/Customers/getReporteeDtls?rid=${resDtl}`,\n    }).then(function (response) {\n      const GetData = response.data;\n      let dataHeader = [\n        {\n          empName: \"Employee Name\",\n          name: \"Business Unit\",\n          long_title: \"Designation\",\n        },\n      ];\n      let fData = [...dataHeader, ...GetData];\n      console.log(fData);\n      setData(fData);\n      setLinkColumns(data);\n    });\n  };\n  console.log(reporteeDetails);\n  useEffect(() => {\n    getReporteeDetails();\n  }, [resDtl]);\n\n  return (\n    <div>\n      <div className=\"customCard mt-2\">\n        <h2 style={{ marginTop: \"-20px\" }}>Reportee Details</h2>\n        <div className=\"group mb-3 customCard\">\n          <div className=\"col-md-12 mb-2\">{/* Rest of your code */}</div>\n          <div className=\"col-md-12 mt-1\">\n            {/* <FlatPrimeReactTable data={reporteeDetails} rows={rows} /> */}\n            <CellRendererPrimeReactDataTable\n              data={data}\n              rows={rows}\n              linkColumns={linkColumns}\n              linkColumnsRoutes={linkColumnsRoutes}\n              dynamicColumns={dynamicColumns}\n              headerData={headerData}\n              setHeaderData={setHeaderData}\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default ReporteeDetails;\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { environment } from \"../../environments/environment\";\nimport \"primeicons/primeicons.css\";\nimport \"primereact/resources/themes/lara-light-indigo/theme.css\";\nimport \"primereact/resources/primereact.css\";\nimport \"primeflex/primeflex.css\";\nimport moment from \"moment\";\nimport { Column } from \"primereact/column\";\nimport CellRendererPrimeReactDataTable from \"../PrimeReactTableComponent/CellRendererPrimeReactDataTable\";\nimport DisplayStar from \"../ResourceSkillsComponent/DisplayStar\";\n\nfunction SkillDetails({ resDtl }) {\n  const [data, setData] = useState([]);\n  const [headerData, setHeaderData] = useState([]);\n\n  const baseUrl = environment.baseUrl;\n  let rows = 5;\n  const Dispstar = (data) => {\n    return (\n      <span>\n        {\" \"}\n        <DisplayStar skillRating={data.skill_rating_id} />\n      </span>\n    );\n  };\n  const Linkgroup_name = (data) => {\n    return (\n      <div\n        className=\"ellipsis\"\n        data-toggle=\"tooltip\"\n        title={data[\"group_name\"]}\n      >\n        {data[\"group_name\"]}\n      </div>\n    );\n  };\n  const Linkdisplay_name = (data) => {\n    return (\n      <div\n        className=\"ellipsis\"\n        data-toggle=\"tooltip\"\n        title={data[\"display_name\"]}\n      >\n        {data[\"display_name\"]}\n      </div>\n    );\n  };\n  const Linkskill_category = (data) => {\n    return (\n      <div\n        className=\"ellipsis\"\n        data-toggle=\"tooltip\"\n        title={data[\"skill_category\"]}\n      >\n        {data[\"skill_category\"]}\n      </div>\n    );\n  };\n  const Linkexperience = (data) => {\n    return (\n      <div\n        className=\"ellipsis\"\n        data-toggle=\"tooltip\"\n        align=\"right\"\n        title={data[\"experience\"]}\n      >\n        {data[\"experience\"]}\n      </div>\n    );\n  };\n\n  const Linklast_used = (data) => {\n    return (\n      <div\n        className=\"ellipsis\"\n        align=\"right\"\n        data-toggle=\"tooltip\"\n        title={data[\"last_used\"]}\n      >\n        {data[\"last_used\"]}\n      </div>\n    );\n  };\n  const Linkskill_status = (data) => {\n    return (\n      <div\n        className=\"ellipsis\"\n        data-toggle=\"tooltip\"\n        title={data[\"skill_status\"]}\n      >\n        {data[\"skill_status\"]}\n      </div>\n    );\n  };\n\n  const dynamicColumns = Object.keys(headerData)?.map((col, i) => {\n    return (\n      <Column\n        sortable\n        key={col}\n        body={\n          col == \"skill_rating_id\"\n            ? Dispstar\n            : col == \"group_name\"\n            ? Linkgroup_name\n            : col == \"display_name\"\n            ? Linkdisplay_name\n            : col == \"skill_category\"\n            ? Linkskill_category\n            : col == \"experience\"\n            ? Linkexperience\n            : col == \"last_used\"\n            ? Linklast_used\n            : col == \"skill_status\"\n            ? Linkskill_status\n            : \"\"\n        }\n        field={col}\n        header={headerData[col]}\n      />\n    );\n  });\n\n  useEffect(() => {\n    data[0] && setHeaderData(JSON.parse(JSON.stringify(data[0])));\n  }, [data]);\n\n  const getEmployeeSkillData = () => {\n    axios({\n      method: \"get\",\n      url: baseUrl + `/customersms/Customers/getSkillDetails?rid=${resDtl}`,\n    }).then(function (response) {\n      const GetData = response.data;\n      let dataHeader = [\n        {\n          group_name: \"Skill Group\",\n          display_name: \"Skill\",\n          skill_category: \"Type\",\n          experience: \"Exp (Months)\",\n          skill_rating_id: \"Rating\",\n          last_used: \"Last Used\",\n          skill_status: \"Status\",\n        },\n      ];\n      console.log(GetData);\n      for (let i = 0; i < GetData.length; i++) {\n        GetData[i][\"experience\"] =\n          GetData[i][\"experience\"] == null ? \"NA\" : GetData[i][\"experience\"];\n\n        GetData[i][\"last_used\"] =\n          GetData[i][\"last_used\"] == null\n            ? \"NA\"\n            : moment(GetData[i][\"last_used\"]).format(\"DD-MMM-yyyy\");\n\n        GetData[i][\"skill_status\"] =\n          GetData[i][\"skill_status\"] == 1 ? \" Approved\" : \"Requested\";\n      }\n\n      let fData = [...dataHeader, ...GetData];\n      console.log(fData);\n\n      setData(fData);\n    });\n  };\n  useEffect(() => {\n    getEmployeeSkillData();\n  }, [resDtl]);\n\n  return (\n    <div>\n      <div className=\"customCard mt-2\">\n        <h2 style={{ marginTop: \"-20px\" }}>Skills Details</h2>\n        <div className=\"group mb-3 customCard\">\n          <div className=\"col-md-12 mb-2\">{/* Rest of your code */}</div>\n          <div className=\"col-md-12 mt-1\">\n            <CellRendererPrimeReactDataTable\n              data={data}\n              rows={rows}\n              dynamicColumns={dynamicColumns}\n              headerData={headerData}\n              setHeaderData={setHeaderData}\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default SkillDetails;\n","import React, { useState, useEffect } from \"react\";\nimport FlatPrimeReactTable from \"../PrimeReactTableComponent/FlatPrimeReactTable\";\nimport { environment } from \"../../environments/environment\";\nimport axios from \"axios\";\nimport moment from \"moment\";\nimport { Column } from \"primereact/column\";\nimport CellRendererPrimeReactDataTable from \"../PrimeReactTableComponent/CellRendererPrimeReactDataTable\";\n\nfunction TrainingDetails({ resDtlHierarchy }) {\n  const [training, setTraining] = useState([]);\n  const [dateFlag1, setdateFlag1] = useState(\"0\");\n  const [headerData, setHeaderData] = useState([]);\n  const baseUrl = environment.baseUrl;\n\n  let rows = 5;\n  const Linkcourse = (data) => {\n    return (\n      <div className=\"ellipsis\" data-toggle=\"tooltip\" title={data[\"course\"]}>\n        {data[\"course\"]}\n      </div>\n    );\n  };\n  const LinkregistrationDate = (data) => {\n    return (\n      <div\n        className=\"ellipsis\"\n        data-toggle=\"tooltip\"\n        align=\"right\"\n        title={data[\"registrationDate\"]}\n      >\n        {data[\"registrationDate\"]}\n      </div>\n    );\n  };\n  const LinkcompletionDate = (data) => {\n    return (\n      <div\n        className=\"ellipsis\"\n        align=\"right\"\n        data-toggle=\"tooltip\"\n        title={data[\"completionDate\"]}\n      >\n        {data[\"completionDate\"]}\n      </div>\n    );\n  };\n  const dynamicColumns = Object.keys(headerData)?.map((col, i) => {\n    return (\n      <Column\n        sortable\n        key={col}\n        body={\n          col == \"course\"\n            ? Linkcourse\n            : col == \"registrationDate\"\n            ? LinkregistrationDate\n            : col == \"completionDate\"\n            ? LinkcompletionDate\n            : \"\"\n        }\n        field={col}\n        header={headerData[col]}\n      />\n    );\n  });\n\n  useEffect(() => {\n    training[0] && setHeaderData(JSON.parse(JSON.stringify(training[0])));\n  }, [training]);\n\n  const getTraining = () => {\n    axios({\n      method: \"get\",\n      url:\n        baseUrl +\n        `/customersms/Customers/getUserTrainingDtls?rid=${resDtlHierarchy}&dateFlag=${dateFlag1}`,\n    }).then(function (response) {\n      const GetData = response.data;\n      let dataHeader = [\n        {\n          course: \"Course Name\",\n          registrationDate: \"Registration Date\",\n          completionDate: \"Completion Date\",\n        },\n      ];\n      for (let i = 0; i < GetData.length; i++) {\n        GetData[i][\"registrationDate\"] =\n          GetData[i][\"registrationDate\"] == null\n            ? \"NA\"\n            : moment(GetData[i][\"registrationDate\"])\n                .subtract(1, \"days\")\n                .format(\"DD-MMM-yyyy\");\n        GetData[i][\"completionDate\"] =\n          GetData[i][\"completionDate\"] == null\n            ? \"NA\"\n            : moment(GetData[i][\"completionDate\"])\n                .subtract(1, \"days\")\n                .format(\"DD-MMM-yyyy\");\n      }\n      let fData = [...dataHeader, ...GetData];\n      console.log(fData);\n\n      setTraining(fData);\n    });\n  };\n\n  useEffect(() => {\n    getTraining();\n  }, []);\n  useEffect(() => {\n    getTraining();\n  }, [resDtlHierarchy, dateFlag1]);\n\n  const handleChange = (e) => {\n    setdateFlag1(e.currentTarget.id);\n    console.log(e.currentTarget.id);\n  };\n  return (\n    <div>\n      <div className=\"customCard mt-2\">\n        <h2 style={{ marginTop: \"-20px\" }}>Training Details</h2>\n        <div className=\"group mb-3 customCard\">\n          <div className=\"col-md-12 mb-2\">{/* Rest of your code */}</div>\n          <div className=\"col-md-12 mt-1\">\n            <div className=\"form-check form-check-inline\">\n              <input\n                className=\"form-check-input\"\n                type=\"radio\"\n                name=\"0\"\n                id=\"0\"\n                value=\"0\"\n                checked={dateFlag1 === \"0\"}\n                onChange={(e) => handleChange(e)}\n              />\n              <label htmlFor=\"country-select\">Current</label>\n            </div>\n            <div className=\"form-check form-check-inline\">\n              <input\n                className=\"form-check-input\"\n                type=\"radio\"\n                name=\"-1\"\n                id=\"-1\"\n                checked={dateFlag1 === \"-1\"}\n                onChange={(e) => handleChange(e)}\n              />\n              <label htmlFor=\"country-select\">Past</label>\n            </div>\n            <div className=\"form-check form-check-inline\">\n              <input\n                className=\"form-check-input\"\n                type=\"radio\"\n                name=\"\"\n                id=\"\"\n                checked={dateFlag1 == \"\"}\n                onChange={(e) => handleChange(e)}\n              />\n              <label htmlFor=\"country-select\">All</label>\n            </div>\n          </div>\n          <div className=\"col-md-12 mt-1\">\n            <CellRendererPrimeReactDataTable\n              data={training}\n              rows={rows}\n              dynamicColumns={dynamicColumns}\n              headerData={headerData}\n              setHeaderData={setHeaderData}\n            />\n            {/* <FlatPrimeReactTable data={training} rows={rows} /> */}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default TrainingDetails;\n","import * as React from \"react\";\nimport TreeView from \"@mui/lab/TreeView\";\nimport PropTypes from \"prop-types\";\nimport SvgIcon from \"@mui/material/SvgIcon\";\nimport { alpha, styled } from \"@mui/material/styles\";\nimport TreeItem, { treeItemClasses } from \"@mui/lab/TreeItem\";\nimport Collapse from \"@mui/material/Collapse\";\nimport { useSpring, animated } from \"@react-spring/web\";\nimport { useEffect } from \"react\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\n\nfunction MinusSquare(props) {\n  return (\n    <SvgIcon fontSize=\"inherit\" style={{ width: 14, height: 14 }} {...props}>\n      {/* tslint:disable-next-line: max-line-length */}\n      <path d=\"M22.047 22.074v0 0-20.147 0h-20.12v0 20.147 0h20.12zM22.047 24h-20.12q-.803 0-1.365-.562t-.562-1.365v-20.147q0-.776.562-1.351t1.365-.575h20.147q.776 0 1.351.575t.575 1.351v20.147q0 .803-.575 1.365t-1.378.562v0zM17.873 11.023h-11.826q-.375 0-.669.281t-.294.682v0q0 .401.294 .682t.669.281h11.826q.375 0 .669-.281t.294-.682v0q0-.401-.294-.682t-.669-.281z\" />\n    </SvgIcon>\n  );\n}\n\nfunction PlusSquare(props) {\n  return (\n    <SvgIcon fontSize=\"inherit\" style={{ width: 14, height: 14 }} {...props}>\n      {/* tslint:disable-next-line: max-line-length */}\n      <path d=\"M22.047 22.074v0 0-20.147 0h-20.12v0 20.147 0h20.12zM22.047 24h-20.12q-.803 0-1.365-.562t-.562-1.365v-20.147q0-.776.562-1.351t1.365-.575h20.147q.776 0 1.351.575t.575 1.351v20.147q0 .803-.575 1.365t-1.378.562v0zM17.873 12.977h-4.923v4.896q0 .401-.281.682t-.682.281v0q-.375 0-.669-.281t-.294-.682v-4.896h-4.923q-.401 0-.682-.294t-.281-.669v0q0-.401.281-.682t.682-.281h4.923v-4.896q0-.401.294-.682t.669-.281v0q.401 0 .682.281t.281.682v4.896h4.923q.401 0 .682.281t.281.682v0q0 .375-.281.669t-.682.294z\" />\n    </SvgIcon>\n  );\n}\n\nfunction TransitionComponent(props) {\n  const style = useSpring({\n    from: {\n      opacity: 0,\n      transform: \"translate3d(20px,0,0)\",\n    },\n    to: {\n      opacity: props.in ? 1 : 0,\n      transform: `translate3d(${props.in ? 0 : 20}px,0,0)`,\n    },\n  });\n\n  return (\n    <animated.div style={style}>\n      <Collapse {...props} />\n    </animated.div>\n  );\n}\n\nTransitionComponent.propTypes = {\n  /**\n   * Show the component; triggers the enter or exit states\n   */\n  in: PropTypes.bool,\n};\n\nconst StyledTreeItem = styled((props) => (\n  <div>\n    <TreeItem\n      {...props}\n      key={String(props.node?.id)}\n      nodeId={String(props.node?.id)}\n      label={\n        <Tooltip title={props?.node?.full_name}>\n          <span>{props?.node?.full_name}</span>\n        </Tooltip>\n        // <span>{props?.node?.folder_name}</span>\n      }\n      TransitionComponent={TransitionComponent}\n    >\n      {Array.isArray(props.node?.subRows)\n        ? props.node?.subRows.map((node) => renderTree(node))\n        : console.log(\"coming here?\")}\n    </TreeItem>\n  </div>\n))(({ theme }) => ({\n  [`& .${treeItemClasses.iconContainer}`]: {\n    \"& .close\": {\n      opacity: 0.3,\n    },\n  },\n  [`& .${treeItemClasses.group}`]: {\n    marginLeft: 15,\n    paddingLeft: 18,\n    borderLeft: `1px dashed ${alpha(theme.palette.text.primary, 0.4)}`,\n  },\n}));\n\nconst renderTree = (nodes) => (\n  <div>\n    <StyledTreeItem node={nodes}></StyledTreeItem>\n  </div>\n);\n\nexport default function HierarchyViewTP(props) {\n  const { defaultExpandedRows, data } = props;\n  console.log(data);\n  const jsonToTree = (flatArray, options) => {\n    if (!Array.isArray(flatArray)) {\n      return [];\n    }\n    options = {\n      id: \"id\",\n      parentId: \"parent_id\",\n      children: \"subRows\",\n      ...options,\n    };\n    const dictionary = {}; // a hash table mapping to the specific array objects with their ids as key\n    const tree = [];\n    const children = options.children;\n    flatArray?.forEach((node) => {\n      const nodeId = node[options.id];\n      const nodeParentId = node[options.parentId];\n      // set up current node data in dictionary\n      dictionary[nodeId] = {\n        [children]: [], // init a children property\n        ...node, // add other propertys\n        ...dictionary[nodeId], // children will be replaced if this node already has children property which was set below\n      };\n      dictionary[nodeParentId] = dictionary[nodeParentId] || { [children]: [] }; // if it's not exist in dictionary, init an object with children property\n      dictionary[nodeParentId][children].push(dictionary[nodeId]); // add reference to current node object in parent node object\n    });\n    // find root nodes\n    Object.values(dictionary).forEach((obj) => {\n      if (typeof obj[options.id] === \"undefined\") {\n        tree.push(...obj[children]);\n      }\n    });\n    return tree;\n  };\n  const hierarchy = jsonToTree(data);\n  useEffect(() => {\n    setTimeout(() => {\n      document\n        .getElementsByClassName(\"MuiTreeItem-root\")[0]\n        .children[0].click();\n    }, 1000);\n  }, []);\n  return (\n    <TreeView\n      aria-label=\"rich object\"\n      defaultExpanded={[defaultExpandedRows]}\n      defaultCollapseIcon={<MinusSquare className=\"hierarchyIcons\" />}\n      defaultExpandIcon={<PlusSquare className=\"hierarchyIcons\" />}\n      sx={{\n        \"& .css-1g86id8-MuiTreeItem-content .MuiTreeItem-label\": {\n          width: \"auto\",\n          minwidth: 0,\n        },\n      }}\n      className=\"hierarchyTree\"\n    >\n      {renderTree(hierarchy[0])}\n    </TreeView>\n  );\n}\n","import * as React from \"react\";\nimport TreeView from \"@mui/lab/TreeView\";\nimport PropTypes from \"prop-types\";\nimport SvgIcon from \"@mui/material/SvgIcon\";\nimport { alpha, styled } from \"@mui/material/styles\";\nimport TreeItem, { treeItemClasses } from \"@mui/lab/TreeItem\";\nimport Collapse from \"@mui/material/Collapse\";\nimport { useSpring, animated } from \"@react-spring/web\";\n\nfunction MinusSquare(props) {\n  return (\n    <SvgIcon fontSize=\"inherit\" style={{ width: 14, height: 14 }} {...props}>\n      {/* tslint:disable-next-line: max-line-length */}\n      <path d=\"M22.047 22.074v0 0-20.147 0h-20.12v0 20.147 0h20.12zM22.047 24h-20.12q-.803 0-1.365-.562t-.562-1.365v-20.147q0-.776.562-1.351t1.365-.575h20.147q.776 0 1.351.575t.575 1.351v20.147q0 .803-.575 1.365t-1.378.562v0zM17.873 11.023h-11.826q-.375 0-.669.281t-.294.682v0q0 .401.294 .682t.669.281h11.826q.375 0 .669-.281t.294-.682v0q0-.401-.294-.682t-.669-.281z\" />\n    </SvgIcon>\n  );\n}\n\nfunction PlusSquare(props) {\n  return (\n    <SvgIcon fontSize=\"inherit\" style={{ width: 14, height: 14 }} {...props}>\n      {/* tslint:disable-next-line: max-line-length */}\n      <path d=\"M22.047 22.074v0 0-20.147 0h-20.12v0 20.147 0h20.12zM22.047 24h-20.12q-.803 0-1.365-.562t-.562-1.365v-20.147q0-.776.562-1.351t1.365-.575h20.147q.776 0 1.351.575t.575 1.351v20.147q0 .803-.575 1.365t-1.378.562v0zM17.873 12.977h-4.923v4.896q0 .401-.281.682t-.682.281v0q-.375 0-.669-.281t-.294-.682v-4.896h-4.923q-.401 0-.682-.294t-.281-.669v0q0-.401.281-.682t.682-.281h4.923v-4.896q0-.401.294-.682t.669-.281v0q.401 0 .682.281t.281.682v4.896h4.923q.401 0 .682.281t.281.682v0q0 .375-.281.669t-.682.294z\" />\n    </SvgIcon>\n  );\n}\n\nfunction TransitionComponent(props) {\n  const style = useSpring({\n    from: {\n      opacity: 0,\n      transform: \"translate3d(20px,0,0)\",\n    },\n    to: {\n      opacity: props.in ? 1 : 0,\n      transform: `translate3d(${props.in ? 0 : 20}px,0,0)`,\n    },\n  });\n\n  return (\n    <animated.div style={style}>\n      <Collapse {...props} />\n    </animated.div>\n  );\n}\n\nTransitionComponent.propTypes = {\n  /**\n   * Show the component; triggers the enter or exit states\n   */\n  in: PropTypes.bool,\n};\n\nconst StyledTreeItem = styled((props) => (\n  <div>\n    <TreeItem\n      {...props}\n      key={String(props.node?.id)}\n      nodeId={String(props.node?.id)}\n      label={props.node?.full_name}\n      TransitionComponent={TransitionComponent}\n    >\n      {Array.isArray(props.node?.subRows)\n        ? props.node?.subRows.map((node) => renderTree(node))\n        : console.log(\"coming here?\")}\n    </TreeItem>\n  </div>\n))(({ theme }) => ({\n  [`& .${treeItemClasses.iconContainer}`]: {\n    \"& .close\": {\n      opacity: 0.3,\n    },\n  },\n  [`& .${treeItemClasses.group}`]: {\n    marginLeft: 15,\n    paddingLeft: 18,\n    borderLeft: `1px dashed ${alpha(theme.palette.text.primary, 0.4)}`,\n  },\n}));\n\nconst renderTree = (nodes) => (\n  <div>\n    <StyledTreeItem node={nodes}></StyledTreeItem>\n  </div>\n);\n\nexport default function TeamsProfileHierarchy(props) {\n  const { data, resId } = props;\n  console.log(data);\n  console.log(resId);\n\n  const jsonToTree = (flatArray, options) => {\n    if (!Array.isArray(flatArray)) {\n      return [];\n    }\n    options = {\n      id: \"id\",\n      parentId: \"parent_id\",\n      children: \"subRows\",\n      ...options,\n    };\n    const dictionary = {}; // a hash table mapping to the specific array objects with their ids as key\n    const tree = [];\n    const children = options.children;\n    flatArray?.forEach((node) => {\n      const nodeId = node[options.id];\n      const nodeParentId = node[options.parentId];\n      // set up current node data in dictionary\n      dictionary[nodeId] = {\n        [children]: [], // init a children property\n        ...node, // add other propertys\n        ...dictionary[nodeId], // children will be replaced if this node already has children property which was set below\n      };\n      dictionary[nodeParentId] = dictionary[nodeParentId] || { [children]: [] }; // if it's not exist in dictionary, init an object with children property\n      dictionary[nodeParentId][children].push(dictionary[nodeId]); // add reference to current node object in parent node object\n    });\n    // find root nodes\n    Object.values(dictionary).forEach((obj) => {\n      if (typeof obj[options.id] === \"undefined\") {\n        tree.push(...obj[children]);\n      }\n    });\n    return tree;\n  };\n  const hierarchy = jsonToTree(data);\n\n  const hierarchyCopy = JSON.parse(JSON.stringify(hierarchy));\n  const indexToRemove = 1; // Change this to the index you want to remove\n  hierarchyCopy[0].subRows.splice(indexToRemove, 1);\n  console.log(hierarchyCopy);\n  console.log(hierarchyCopy[0]);\n\n  function getAllNodeIds(node) {\n    let ids = [String(node.id)];\n    if (node.subRows && node.subRows.length > 0) {\n      node.subRows.forEach((subRow) => {\n        ids.push(...getAllNodeIds(subRow));\n      });\n    }\n    return ids;\n  }\n\n  const expandedIds = getAllNodeIds(hierarchy[0]);\n\n  return (\n    <TreeView\n      aria-label=\"rich object\"\n      defaultExpanded={expandedIds}\n      defaultCollapseIcon={<MinusSquare />}\n      defaultExpandIcon={<PlusSquare />}\n      className=\"hierarchyTree\"\n      sx={{\n        \"& .css-1g86id8-MuiTreeItem-content .MuiTreeItem-label\": {\n          width: \"auto\",\n          minwidth: 0,\n        },\n      }}\n    >\n      {renderTree(hierarchy[0])}\n    </TreeView>\n  );\n}\n","import React, { useState, useEffect, useRef } from \"react\";\nimport CutomerRoles from \"./CutomerRoles\";\nimport ProjectDetails from \"./ProjectDetails\";\nimport ProjectRoles from \"./ProjectRoles\";\nimport ReporteeDetails from \"./ReporteeDetails\";\nimport SkillDetails from \"./SkillDetails\";\nimport TrainingDetails from \"./TrainingDetails\";\nimport ResourceHierarchy from \"./ResourceHierarchy\";\nimport { ReactSearchAutocomplete } from \"react-search-autocomplete\";\nimport Loader from \"../Loader/Loader\";\nimport GlobalValidation from \"../ValidationComponent/GlobalValidation\";\nimport { CCollapse } from \"@coreui/react\";\nimport { environment } from \"../../environments/environment\";\nimport { IoIosArrowBack, IoIosArrowForward } from \"react-icons/io\";\n\nimport axios from \"axios\";\nimport {\n  FaChevronCircleUp,\n  FaChevronCircleDown,\n  FaSearch,\n} from \"react-icons/fa\";\nimport { IoWarningOutline } from \"react-icons/io5\";\nimport HierarchyViewTP from \"./HierarchyViewTP\";\nimport GlobalHelp from \"../PrimeReactTableComponent/GlobalHelp\";\nimport ScreenBreadcrumbs from \"../Common/ScreenBreadcrumbs\";\nimport TeamsProfileHierarchy from \"./TeamsProfileHierarchy\";\nimport { useParams } from \"react-router-dom\";\n\nfunction RProfile(props) {\n  const { resId } = props;\n  const loggedUserId = localStorage.getItem(\"resId\");\n  const firstResId = parseInt(loggedUserId) + 1;\n\n  const [bool, setBool] = useState(false);\n  const { resourceId } = useParams();\n  const updatedResId = resourceId?.replace(\":\", \"\") - parseInt(1);\n  const FirstProfileId = updatedResId.length == 0 ? firstResId : updatedResId;\n  const firstId = isNaN(FirstProfileId + parseInt(1))\n    ? firstResId\n    : FirstProfileId + parseInt(1);\n\n  const [visible, setVisible] = useState(false);\n  const [ArrowBack, setArrowBack] = useState(IoIosArrowBack);\n  const [cheveronIcon, setCheveronIcon] = useState(FaChevronCircleUp);\n  const [employeeData, setEmployeeData] = useState([]);\n  // //console.log(employeeData);\n  const [resourceName, setResourceName] = useState([]);\n  //console.log(resourceName);\n  const [loader, setLoader] = useState(false);\n  const [errorMsg, setErrorMsg] = useState(false);\n  const [resper, setResper] = useState([]);\n  const [issueDetails, setIssueDetails] = useState([]);\n  //console.log(resper, \"----resper\");\n  //console.log(employeeData);\n  const getResProfileData = employeeData?.getResProfile;\n\n  console.log(getResProfileData);\n  const resName = getResProfileData?.[0]?.resName;\n  //console.log(resName);\n\n  const [upwardHierarchy, setUpwardHierarchy] = useState(resId - parseInt(1));\n  console.log(upwardHierarchy);\n  const ref = useRef([]);\n\n  const [resource, setResource] = useState(loggedUserId);\n  const HelpPDFName = \"ResourceProfileTeams.pdf\";\n  const Header = \"Resource Profile Help\";\n  const baseUrl = environment.baseUrl;\n\n  const [routes, setRoutes] = useState([]);\n  let textContent = \"Teams\";\n  let currentScreenName = [\"Profile\"];\n\n  useEffect(() => {\n    getMenus();\n  }, []);\n\n  const getMenus = () => {\n    // setMenusData\n\n    axios({\n      method: \"GET\",\n      url: baseUrl + `/CommonMS/master/getMenus?loggedUserId=${loggedUserId}`,\n    }).then((resp) => {\n      let data = resp.data;\n\n      data.forEach((item) => {\n        if (item.display_name === textContent) {\n          setRoutes([item]);\n        }\n      });\n    });\n  };\n\n  const getData = () => {\n    //console.log(\"line no 106\");\n    setTimeout(() => {\n      document.body.click();\n    }, 2000);\n    axios({\n      method: \"get\",\n      url: baseUrl + `/ProjectMS/Issues/getAssignedData`,\n    }).then(function (response) {\n      var res = response.data;\n      setIssueDetails(res);\n    });\n  };\n\n  useEffect(() => {}, [issueDetails]);\n  const [resDtl, setResDtl] = useState(null);\n  const ResourceID = resper[0]?.id;\n  useEffect(() => {\n    if (ResourceID !== null) {\n      setResDtl(ResourceID);\n    }\n  }, [ResourceID]);\n  const resDtlHierarchy = parseInt(resDtl) - 1;\n  const resHierarchyId = parseInt(loggedUserId) + 1;\n  ///--------------------------------Resource Details\n  const getEmployeeData = () => {\n    axios({\n      method: \"get\",\n      url: baseUrl + `/customersms/Customers/getResProfile?rid=${firstId}`,\n    }).then(function (response) {\n      var resp = response.data;\n      setEmployeeData(resp);\n    });\n  };\n\n  ///--------------------------------\n\n  const getResPersonalData = async () => {\n    setTimeout(() => {\n      document.body.click();\n    }, 1);\n    await axios({\n      method: \"get\",\n      url: baseUrl + `/customersms/Customers/getResPerDetails?rid=${firstId}`,\n    }).then(function (response) {\n      var resp = response.data;\n      setResper(resp);\n      console.log(resp);\n    });\n  };\n  const getEmployeeData1 = () => {\n    let valid = GlobalValidation(ref);\n\n    axios({\n      method: \"get\",\n      url: baseUrl + `/customersms/Customers/getResProfile?rid=${resDtl}`,\n    }).then(function (response) {\n      var resp = response.data;\n      setEmployeeData(resp);\n      !valid && setVisible(!visible);\n      visible\n        ? setCheveronIcon(FaChevronCircleUp)\n        : setCheveronIcon(FaChevronCircleDown);\n    });\n  };\n\n  const getResPersonalData1 = async () => {\n    let valid = GlobalValidation(ref);\n\n    setTimeout(() => {\n      document.body.click();\n    }, 1);\n    await axios({\n      method: \"get\",\n      url: baseUrl + `/customersms/Customers/getResPerDetails?rid=${resDtl}`,\n    }).then(function (response) {\n      var resp = response.data;\n      setResper(resp);\n      !valid && setVisible(!visible);\n      visible\n        ? setCheveronIcon(FaChevronCircleUp)\n        : setCheveronIcon(FaChevronCircleDown);\n      //console.log(resp);\n    });\n  };\n  ///--------------------------------getResProfileUpwardhierarchy\n  // const HierarchyId = Number(upwardHierarchy) - 1;\n  console.log(firstId - parseInt(1));\n  const [visibleC, setvisiblec] = useState(false);\n  const getUpwardHierarchy = () => {\n    setBool(false);\n    setTimeout(() => {\n      setLoader(true);\n    }, 2000);\n    axios({\n      method: \"get\",\n      url:\n        baseUrl +\n        `/customersms/Customers/getResProfileUpwardhierarchy?rid=${\n          firstId - parseInt(1)\n        }`,\n    }).then(function (response) {\n      console.log(response.data);\n      if (response.data.length === 0) {\n        const defaultValues = {\n          department_id: -1,\n          full_name: resourceName,\n          has_childs: 0,\n          id: resource,\n          parent_id: -1,\n          subRows: [],\n        };\n        console.log(defaultValues);\n        setUpwardHierarchy([defaultValues]);\n      } else {\n        const hierarchyTree = jsonToTree(response.data);\n        setUpwardHierarchy(hierarchyTree);\n      }\n      setBool(true);\n      setLoader(false);\n    });\n  };\n  console.log(\">>visibleC\", visibleC);\n  useEffect(() => {\n    getEmployeeData();\n    getData();\n    getResPersonalData();\n    getUpwardHierarchy();\n  }, []);\n\n  const getUpwardHierarchy1 = () => {\n    let valid = GlobalValidation(ref);\n\n    setBool(false);\n    setTimeout(() => {\n      setLoader(true);\n    }, 2000);\n    axios({\n      method: \"get\",\n      url:\n        baseUrl +\n        `/customersms/Customers/getResProfileUpwardhierarchy?rid=${resDtlHierarchy}`,\n    }).then(function (response) {\n      if (response.data.length === 0) {\n        const defaultValues = {\n          department_id: -1,\n          full_name: resourceName,\n          has_childs: 0,\n          id: resource,\n          parent_id: -1,\n          subRows: [],\n        };\n        //console.log(defaultValues);\n        setUpwardHierarchy([defaultValues]);\n      } else {\n        const hierarchyTree = jsonToTree(response.data);\n        //console.log(hierarchyTree);\n        setUpwardHierarchy(hierarchyTree);\n      }\n      setBool(true);\n      setLoader(false);\n      !valid && setVisible(!visible);\n      visible\n        ? setCheveronIcon(FaChevronCircleUp)\n        : setCheveronIcon(FaChevronCircleDown);\n    });\n  };\n\n  const jsonToTree = (flatArray, options) => {\n    options = {\n      id: \"id\",\n      parentId: \"parent_id\",\n      children: \"subRows\",\n      ...options,\n    };\n    const dictionary = {}; // a hash table mapping to the specific array objects with their ids as key\n    const tree = [];\n    const children = options.children;\n    flatArray.forEach((node) => {\n      const nodeId = node[options.id];\n      const nodeParentId = node[options.parentId];\n      // set up current node data in dictionary\n      dictionary[nodeId] = {\n        [children]: [], // init a children property\n        ...node, // add other propertys\n        ...dictionary[nodeId], // children will be replaced if this node already has children property which was set below\n      };\n      dictionary[nodeParentId] = dictionary[nodeParentId] || { [children]: [] }; // if it's not exist in dictionary, init an object with children property\n      dictionary[nodeParentId][children].push(dictionary[nodeId]); // add reference to current node object in parent node object\n    });\n    // find root nodes\n    Object.values(dictionary).forEach((obj) => {\n      if (typeof obj[options.id] === \"undefined\") {\n        tree.push(...obj[children]);\n      }\n    });\n    return tree;\n  };\n\n  const abortController = useRef(null);\n\n  const handleAbort = () => {\n    abortController.current && abortController.current.abort();\n    setLoader(false);\n  };\n  const onSearchClick = () => {\n    let valid = GlobalValidation(ref);\n    //console.log(valid);\n\n    if (valid) {\n      {\n        setErrorMsg(true);\n        setTimeout(() => {\n          setErrorMsg(false);\n        }, 3000);\n      }\n      return;\n    }\n\n    getEmployeeData1();\n    getUpwardHierarchy1();\n    getResPersonalData1();\n  };\n\n  return (\n    <>\n      <div className=\"col-md-12\">\n        {errorMsg ? (\n          <div className=\"statusMsg error col-12 mb-2\">\n            <span>\n              <IoWarningOutline />\n              &nbsp;{`Please enter resource name`}\n            </span>\n          </div>\n        ) : (\n          \"\"\n        )}\n        <div className=\"pageTitle\">\n          <div className=\"childOne\"></div>\n          <div className=\"childTwo\">\n            <h2>Profile</h2>\n          </div>\n          <div className=\"childThree\"></div>\n        </div>\n      </div>\n\n      <ScreenBreadcrumbs\n        routes={routes}\n        currentScreenName={currentScreenName}\n      />\n      <div className=\"col-md-12 \">\n        <div className=\"group-content row\">\n          <>\n            {visibleC == true ? (\n              <span\n                className=\"backArrow\"\n                style={{ cursor: \"pointer\" }}\n                onClick={() => {\n                  setvisiblec(!visibleC);\n                  visibleC\n                    ? setArrowBack(IoIosArrowForward)\n                    : setArrowBack(IoIosArrowBack);\n                }}\n              >\n                {visibleC ? <IoIosArrowForward /> : <IoIosArrowBack />}\n              </span>\n            ) : (\n              \"\"\n            )}\n            <div className={\"col-md-2 \"}>\n              <CCollapse visible={!visibleC} setvisiblec=\"false\">\n                {visibleC == false ? (\n                  <div className=\"childTwo\">\n                    <h2\n                      style={{\n                        textAlign: \"left\",\n                        color: \"#297AB0\",\n                        fontSize: \"14px\",\n                        paddingTop: \"7px\",\n                        cursor: \"pointer\",\n                      }}\n                    >\n                      Reporting Hierarchy\n                      <span\n                        className=\"backArrow\"\n                        style={{ cursor: \"pointer\" }}\n                        onClick={() => {\n                          setvisiblec(!visibleC);\n                          visibleC\n                            ? setArrowBack(IoIosArrowForward)\n                            : setArrowBack(IoIosArrowBack);\n                        }}\n                      >\n                        {visibleC ? <IoIosArrowForward /> : <IoIosArrowBack />}\n                      </span>\n                    </h2>\n                  </div>\n                ) : (\n                  \"\"\n                )}\n                <div\n                  style={{\n                    minHeight: \"calc(100vh - 225px)\",\n                    maxHeight: \"calc(100vh - 225px)\",\n                    overflow: \"auto\",\n                    border: \"1px solid #ccc\", // Add border style here\n                    padding: \"10px\", // Optional padding for spacing\n                  }}\n                >\n                  {bool ? (\n                    <div\n                      style={{\n                        display: \"flex\",\n                      }}\n                    >\n                      <TeamsProfileHierarchy\n                        data={upwardHierarchy}\n                        resId={resId}\n                      />\n                    </div>\n                  ) : (\n                    \"\"\n                  )}\n                </div>\n              </CCollapse>\n            </div>\n          </>\n          <div className={visibleC == false ? \"col-10\" : \"col-12\"}>\n            <div className=\"group mb-3 customCard\">\n              <div className=\"col-md-12 collapseHeader\">\n                <h2>Search Filters</h2>\n                <div className=\"helpBtn\">\n                  <GlobalHelp pdfname={HelpPDFName} name={Header} />\n                </div>\n                <div\n                  onClick={() => {\n                    setVisible(!visible);\n                    visible\n                      ? setCheveronIcon(FaChevronCircleUp)\n                      : setCheveronIcon(FaChevronCircleDown);\n                  }}\n                >\n                  <span>{cheveronIcon}</span>\n                </div>\n              </div>\n              <CCollapse visible={!visible}>\n                <div className=\"group-content row\">\n                  <div className=\"col-md-8 mb-2\">\n                    <div className=\"form-group row\">\n                      <label className=\"col-3\" htmlFor=\"text-input-inline\">\n                        Resource Name{\" \"}\n                        <span className=\" error-text ml-1\">*</span>\n                      </label>\n                      <span className=\"col-1\">:</span>\n                      <div\n                        className=\"col-6 autocomplete\"\n                        ref={(ele) => {\n                          ref.current[0] = ele;\n                        }}\n                      >\n                        <div className=\" autoComplete-container\">\n                          <ReactSearchAutocomplete\n                            items={issueDetails}\n                            type=\"Text\"\n                            name=\"resName\"\n                            id=\"resName\"\n                            className=\"wrapperauto\"\n                            issueDetails={issueDetails}\n                            getData={getData}\n                            inputSearchString={resper[0]?.name}\n                            onSelect={(e) => {\n                              setResDtl(e.id);\n                              setResourceName(e.name);\n                              const cleanedName = e.name.replace(\n                                /\\s*\\(.*?\\)\\s*/g,\n                                \"\"\n                              );\n                              setResourceName(cleanedName);\n                              // setResource(parseInt(e.id) - parseInt(1));\n                            }}\n                            onClear={() => {\n                              setResDtl(null);\n                            }}\n                            showIcon={false}\n                          />\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"col-md-12 col-sm-12 col-xs-12 my-2 btn-container center\">\n                    <button\n                      type=\"button\"\n                      className=\"btn btn-primary\"\n                      title=\"Search\"\n                      onClick={() => {\n                        onSearchClick();\n                      }}\n                    >\n                      <FaSearch /> Search\n                    </button>\n                  </div>\n                </div>\n              </CCollapse>\n            </div>\n            <div>\n              <div className=\"group mb-3 customCard\">\n                <h2>Resource Details</h2>\n                <div className=\"group-content row\">\n                  <div className=\"col-md-4 mb-2\">\n                    <div className=\"form-group row\">\n                      <label className=\"col-4\" htmlFor=\"text-input-inline\">\n                        Resource Name\n                      </label>\n                      <span className=\"col-1 p-0\">:</span>\n                      <div className=\"col-7\">\n                        <p\n                          className=\" ellipsis tooltip-ex\"\n                          data-toggle=\"tooltip\"\n                          title={getResProfileData?.[0]?.resName}\n                        >\n                          {getResProfileData?.[0]?.resName == null\n                            ? \"\"\n                            : getResProfileData?.[0]?.resName}{\" \"}\n                        </p>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"col-md-4 mb-2\">\n                    <div className=\"form-group row\">\n                      <label className=\"col-4\" htmlFor=\"text-input-inline\">\n                        Designation\n                      </label>\n                      <span className=\"col-1 p-0\">:</span>\n                      <div className=\"col-7\">\n                        {/* <p className=\"col-12\" id=\"text-input-inline\">\n                          {getResProfileData?.[0]?.designation}\n                        </p> */}\n                        <p\n                          className=\" ellipsis tooltip-ex\"\n                          data-toggle=\"tooltip\"\n                          title={getResProfileData?.[0]?.designation}\n                        >\n                          {getResProfileData?.[0]?.designation == null\n                            ? \"\"\n                            : getResProfileData?.[0]?.designation}{\" \"}\n                        </p>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"col-md-4 mb-2\">\n                    <div className=\"form-group row\">\n                      <label className=\"col-4\" htmlFor=\"text-input-inline\">\n                        Employment Type\n                      </label>\n                      <span className=\"col-1 p-0\">:</span>\n                      <div className=\"col-7\">\n                        {/* <p className=\"col-12\" id=\"text-input-inline\">\n                          {getResProfileData?.[0]?.empType}\n                        </p> */}\n                        <p\n                          className=\" ellipsis tooltip-ex\"\n                          data-toggle=\"tooltip\"\n                          title={getResProfileData?.[0]?.empType}\n                        >\n                          {getResProfileData?.[0]?.empType == null\n                            ? \"\"\n                            : getResProfileData?.[0]?.empType}{\" \"}\n                        </p>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"col-md-4 mb-2\">\n                    <div className=\"form-group row\">\n                      <label className=\"col-4\" htmlFor=\"text-input-inline\">\n                        Gender\n                      </label>\n                      <span className=\"col-1 p-0\">:</span>\n                      <div className=\"col-7\">\n                        {/* <p className=\"col-12\" id=\"text-input-inline\">\n                          {getResProfileData?.[0]?.gender}\n                        </p> */}\n                        <p\n                          className=\" ellipsis tooltip-ex\"\n                          data-toggle=\"tooltip\"\n                          title={getResProfileData?.[0]?.gender}\n                        >\n                          {getResProfileData?.[0]?.gender == null\n                            ? \"\"\n                            : getResProfileData?.[0]?.gender}{\" \"}\n                        </p>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"col-md-4 mb-2\">\n                    <div className=\"form-group row\">\n                      <label className=\"col-4\" htmlFor=\"text-input-inline\">\n                        Email ID\n                      </label>\n                      <span className=\"col-1 p-0\">:</span>\n                      <div className=\"col-7\">\n                        <p\n                          className=\"ellipsis\"\n                          data-toggle=\"tooltip\"\n                          title={getResProfileData?.[0]?.emailID}\n                        >\n                          {getResProfileData?.[0]?.emailID}\n                        </p>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"col-md-4 mb-2\">\n                    <div className=\"form-group row\">\n                      <label className=\"col-4\" htmlFor=\"text-input-inline\">\n                        Citizenship\n                      </label>\n                      <span className=\"col-1 p-0\">:</span>\n                      <div className=\"col-7\">\n                        {/* <p className=\"col-12\" id=\"text-input-inline\">\n                          {getResProfileData?.[0]?.citizenship}\n                        </p> */}\n                        <p\n                          className=\" ellipsis tooltip-ex\"\n                          data-toggle=\"tooltip\"\n                          title={getResProfileData?.[0]?.citizenship}\n                        >\n                          {getResProfileData?.[0]?.citizenship == null\n                            ? \"\"\n                            : getResProfileData?.[0]?.citizenship}{\" \"}\n                        </p>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"col-md-4 mb-2\">\n                    <div className=\"form-group row\">\n                      <label className=\"col-4\" htmlFor=\"text-input-inline\">\n                        Business Unit\n                      </label>\n                      <span className=\"col-1 p-0\">:</span>\n                      <div className=\"col-7\">\n                        {/* <p className=\"col-12\" id=\"text-input-inline\">\n                          {getResProfileData?.[0]?.businessUnit}\n                        </p> */}\n                        <p\n                          className=\" ellipsis tooltip-ex\"\n                          data-toggle=\"tooltip\"\n                          title={getResProfileData?.[0]?.businessUnit}\n                        >\n                          {getResProfileData?.[0]?.businessUnit == null\n                            ? \"\"\n                            : getResProfileData?.[0]?.businessUnit}{\" \"}\n                        </p>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"col-md-4 mb-2\">\n                    <div className=\"form-group row\">\n                      <label className=\"col-4\" htmlFor=\"text-input-inline\">\n                        Supervisor\n                      </label>\n                      <span className=\"col-1 p-0\">:</span>\n                      <div className=\"col-7\">\n                        <p\n                          className=\" ellipsis tooltip-ex\"\n                          data-toggle=\"tooltip\"\n                          title={getResProfileData?.[0]?.supervisor}\n                        >\n                          {getResProfileData?.[0]?.supervisor == null\n                            ? \"-\"\n                            : getResProfileData?.[0]?.supervisor}{\" \"}\n                        </p>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"col-md-4 mb-2\">\n                    <div className=\"form-group row\">\n                      <label className=\"col-4\" htmlFor=\"text-input-inline\">\n                        Gross Capacity\n                      </label>\n                      <span className=\"col-1 p-0\">:</span>\n                      <div className=\"col-7\">\n                        <p\n                          className=\" ellipsis tooltip-ex\"\n                          data-toggle=\"tooltip\"\n                          title={getResProfileData?.[0]?.gCapacity}\n                        >\n                          {getResProfileData?.[0]?.gCapacity == null\n                            ? \"\"\n                            : getResProfileData?.[0]?.gCapacity}{\" \"}\n                        </p>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"col-md-4 mb-2\">\n                    <div className=\"form-group row\">\n                      <label className=\"col-4\" htmlFor=\"text-input-inline\">\n                        Joining Date\n                      </label>\n                      <span className=\"col-1 p-0\">:</span>\n                      <div className=\"col-7\">\n                        <p\n                          className=\" ellipsis tooltip-ex\"\n                          data-toggle=\"tooltip\"\n                          title={getResProfileData?.[0]?.joiningDate}\n                        >\n                          {getResProfileData?.[0]?.joiningDate == null\n                            ? \"\"\n                            : getResProfileData?.[0]?.joiningDate}{\" \"}\n                        </p>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"col-md-4 mb-2\">\n                    <div className=\"form-group row\">\n                      <label className=\"col-4\" htmlFor=\"text-input-inline\">\n                        End Date\n                      </label>\n                      <span className=\"col-1 p-0\">:</span>\n                      <div className=\"col-7\">\n                        <p\n                          className=\" ellipsis tooltip-ex\"\n                          data-toggle=\"tooltip\"\n                          title={getResProfileData?.[0]?.res_endDate}\n                        >\n                          {getResProfileData?.[0]?.res_endDate == null\n                            ? \"\"\n                            : getResProfileData?.[0]?.res_endDate}{\" \"}\n                        </p>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"col-md-4 mb-2\">\n                    <div className=\"form-group row\">\n                      <label className=\"col-4\" htmlFor=\"text-input-inline\">\n                        Employee Status\n                      </label>\n                      <span className=\"col-1 p-0\">:</span>\n                      <div className=\"col-7\">\n                        <p\n                          className=\" ellipsis tooltip-ex\"\n                          data-toggle=\"tooltip\"\n                          title={getResProfileData?.[0]?.user_status}\n                        >\n                          {getResProfileData?.[0]?.user_status == null\n                            ? \"\"\n                            : getResProfileData?.[0]?.user_status}{\" \"}\n                        </p>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"col-md-4 mb-2\">\n                    <div className=\"form-group row\">\n                      <label className=\"col-4\" htmlFor=\"text-input-inline\">\n                        Net Capacity\n                      </label>\n                      <span className=\"col-1 p-0\">:</span>\n                      <div className=\"col-7\">\n                        <p\n                          className=\" ellipsis tooltip-ex\"\n                          data-toggle=\"tooltip\"\n                          title={getResProfileData?.[0]?.nCapacity}\n                        >\n                          {getResProfileData?.[0]?.nCapacity == null\n                            ? \"\"\n                            : getResProfileData?.[0]?.nCapacity}{\" \"}\n                        </p>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"col-md-4 mb-2\">\n                    <div className=\"form-group row\">\n                      <label className=\"col-4\" htmlFor=\"text-input-inline\">\n                        Country\n                      </label>\n                      <span className=\"col-1 p-0\">:</span>\n                      <div className=\"col-7\">\n                        <p\n                          className=\" ellipsis tooltip-ex\"\n                          data-toggle=\"tooltip\"\n                          title={getResProfileData?.[0]?.country}\n                        >\n                          {getResProfileData?.[0]?.country == null\n                            ? \"\"\n                            : getResProfileData?.[0]?.country}{\" \"}\n                        </p>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"col-md-4 mb-2\">\n                    <div className=\"form-group row\">\n                      <label className=\"col-4\" htmlFor=\"text-input-inline\">\n                        Sf Owner Division\n                      </label>\n                      <span className=\"col-1 p-0\">:</span>\n                      <div className=\"col-7\">\n                        <p\n                          className=\" ellipsis tooltip-ex\"\n                          data-toggle=\"tooltip\"\n                          title={getResProfileData?.[0]?.SfOwnerDivision}\n                        >\n                          {getResProfileData?.[0]?.SfOwnerDivision == null\n                            ? \"\"\n                            : getResProfileData?.[0]?.SfOwnerDivision}{\" \"}\n                        </p>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"col-md-4 mb-2\">\n                    <div className=\"form-group row\">\n                      <label className=\"col-4\" htmlFor=\"text-input-inline\">\n                        Renewal Date\n                      </label>\n                      <span className=\"col-1 p-0\">:</span>\n                      <div className=\"col-7\">\n                        <p\n                          className=\" ellipsis tooltip-ex\"\n                          data-toggle=\"tooltip\"\n                          title={getResProfileData?.[0]?.renewalDate}\n                        >\n                          {getResProfileData?.[0]?.renewalDate == null\n                            ? \"\"\n                            : getResProfileData?.[0]?.renewalDate}{\" \"}\n                        </p>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              {/* ) : (\n                \"\"\n              )} */}\n              {employeeData?.getResProfileSubContract?.length > 0 ? (\n                <div className=\"group mb-3 customCard\">\n                  <h2>Sub Contract Details</h2>\n\n                  <div className=\"group-content row\">\n                    <div className=\"col-md-4 mb-2\">\n                      <div className=\"form-group row\">\n                        <label className=\"col-4\" htmlFor=\"text-input-inline\">\n                          External Email\n                        </label>\n                        <span className=\"col-1 p-0\">:</span>\n                        <div className=\"col-7\">\n                          <p\n                            className=\" ellipsis tooltip-ex\"\n                            data-toggle=\"tooltip\"\n                            title={\n                              employeeData?.getResProfileSubContract[0]\n                                ?.external_email\n                            }\n                          >\n                            {employeeData?.getResProfileSubContract[0]\n                              ?.external_email == null\n                              ? \"\"\n                              : employeeData?.getResProfileSubContract[0]\n                                  ?.external_email}{\" \"}\n                          </p>\n                        </div>\n                      </div>\n                    </div>\n\n                    <div className=\"col-md-4 mb-2\">\n                      <div className=\"form-group row\">\n                        <label className=\"col-4\" htmlFor=\"text-input-inline\">\n                          Resource Manager\n                        </label>\n                        <span className=\"col-1 p-0\">:</span>\n                        <div className=\"col-7\">\n                          <p\n                            className=\" ellipsis tooltip-ex\"\n                            data-toggle=\"tooltip\"\n                            title={\n                              employeeData?.getResProfileSubContract[0]\n                                ?.resource_manager\n                            }\n                          >\n                            {employeeData?.getResProfileSubContract[0]\n                              ?.resource_manager == null\n                              ? \"\"\n                              : employeeData?.getResProfileSubContract[0]\n                                  ?.resource_manager}{\" \"}\n                          </p>\n                        </div>\n                      </div>\n                    </div>\n                    <div className=\"col-md-4 mb-2\">\n                      <div className=\"form-group row\">\n                        <label className=\"col-4\" htmlFor=\"text-input-inline\">\n                          Cost Rate\n                        </label>\n                        <span className=\"col-1 p-0\">:</span>\n                        <div className=\"col-7\">\n                          <p\n                            className=\" ellipsis tooltip-ex\"\n                            data-toggle=\"tooltip\"\n                            title={\n                              employeeData?.getResProfileSubContract[0]\n                                ?.cost_rate\n                            }\n                          >\n                            {employeeData?.getResProfileSubContract[0]\n                              ?.cost_rate == null\n                              ? \"\"\n                              : employeeData?.getResProfileSubContract[0]\n                                  ?.cost_rate}{\" \"}\n                          </p>\n                        </div>\n                      </div>\n                    </div>\n\n                    <div className=\"col-md-4 mb-2\">\n                      <div className=\"form-group row\">\n                        <label className=\"col-4\" htmlFor=\"text-input-inline\">\n                          Company Category\n                        </label>\n                        <span className=\"col-1 p-0\">:</span>\n                        <div className=\"col-7\">\n                          <p\n                            className=\" ellipsis tooltip-ex\"\n                            data-toggle=\"tooltip\"\n                            title={\n                              employeeData?.getResProfileSubContract[0]\n                                ?.comp_category\n                            }\n                          >\n                            {employeeData?.getResProfileSubContract[0]\n                              ?.comp_category == null\n                              ? \"\"\n                              : employeeData?.getResProfileSubContract[0]\n                                  ?.comp_category}{\" \"}\n                          </p>\n                        </div>\n                      </div>\n                    </div>\n\n                    <div className=\"col-md-4 mb-2\">\n                      <div className=\"form-group row\">\n                        <label className=\"col-4\" htmlFor=\"text-input-inline\">\n                          Eligibility Rehire\n                        </label>\n                        <span className=\"col-1 p-0\">:</span>\n                        <div className=\"col-7\">\n                          <p\n                            className=\" ellipsis tooltip-ex\"\n                            data-toggle=\"tooltip\"\n                            title={\n                              employeeData?.getResProfileSubContract[0]\n                                ?.eligibility_rehire\n                            }\n                          >\n                            {employeeData?.getResProfileSubContract[0]\n                              ?.eligibility_rehire == null\n                              ? \"\"\n                              : employeeData?.getResProfileSubContract[0]\n                                  ?.eligibility_rehire}{\" \"}\n                          </p>\n                        </div>\n                      </div>\n                    </div>\n\n                    <div className=\"col-md-4 mb-2\">\n                      <div className=\"form-group row\">\n                        <label className=\"col-4\" htmlFor=\"text-input-inline\">\n                          Ext. Company Name\n                        </label>\n                        <span className=\"col-1 p-0\">:</span>\n                        <div className=\"col-7\">\n                          <p\n                            className=\" ellipsis tooltip-ex\"\n                            data-toggle=\"tooltip\"\n                            title={\n                              employeeData?.getResProfileSubContract[0]\n                                ?.external_comp_name\n                            }\n                          >\n                            {employeeData?.getResProfileSubContract[0]\n                              ?.external_comp_name == null\n                              ? \"\"\n                              : employeeData?.getResProfileSubContract[0]\n                                  ?.external_comp_name}{\" \"}\n                          </p>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              ) : (\n                \"\"\n              )}\n\n              <div className=\"classContent col-md-12\">\n                <div>\n                  <CutomerRoles resDtl={resDtl} />\n                </div>\n                <div>\n                  <ProjectRoles resDtl={resDtl} />\n                </div>\n                <div>\n                  <ProjectDetails resDtl={resDtl} resper={resper} />\n                </div>\n                <div>\n                  <ReporteeDetails resDtl={resDtl} />\n                </div>\n                <div>\n                  <SkillDetails resDtl={resDtl} />\n                </div>\n                <div>\n                  <TrainingDetails resDtlHierarchy={resDtlHierarchy} />\n                </div>\n              </div>\n            </div>\n            {/* ) : (\n              \"\"\n            )} */}\n          </div>\n        </div>\n      </div>\n      {loader ? <Loader handleAbort={handleAbort} /> : \"\"}\n    </>\n  );\n}\n\nexport default RProfile;\n","import React, { useState } from \"react\";\nimport Tree from \"react-animated-tree-v2\";\n\nfunction ResourceHierarchy({ displayHierarchyHead }) {\n\n  const [loader, setLoader] = useState(false)\n\n  const treeStyles = {\n\n    color: \"black\",\n    fill: \"black\",\n\n  };\n\n  const typeStyles = {\n    fontSize: \"2em\",\n    verticalAlign: \"middle\",\n  };\n  const handletree = (data) => {\n\n    console.log(\"data\", data, typeof data);\n\n    onSubmit(data);\n  };\n  // const DisplayTree = () => {\n  //   let content = []\n  //   for (let item of displayHierarchyHead) {\n  //     content.push(item)\n  //     console.log(item, \"---item\")\n  //   }\n  //   return content;\n  console.log(displayHierarchyHead, \"--- hierrachy\")\n  console.log(displayHierarchyHead?.length, \"---length\")\n  // }\n  return (\n    <div className=\"group mb-3 customCard\">\n\n      {/* {\n        displayHierarchyHead.map((ele) => { */}\n\n      <div className=\"group mb-3 customCard\">\n        {/* <h2>Resources</h2> */}\n        <div className=\"group-content row\">\n          <Tree\n            content={displayHierarchyHead[0]?.text}\n            canHide\n            open\n            // data-toggle=\"tooltip\" title={displayHierarchyHead[0]?.text}\n            style={treeStyles}\n            onClick={() => handletree(displayHierarchyHead[0]?.text)}\n          >\n            {displayHierarchyHead?.length > 1 && <Tree content={displayHierarchyHead[1]?.text}\n              canHide\n              open\n              style={treeStyles}\n              onClick={() => handletree(displayHierarchyHead[1]?.text)}>\n              {displayHierarchyHead?.length > 2 && <Tree content={displayHierarchyHead[2]?.text}\n                canHide\n                open\n                style={treeStyles}\n\n                onClick={() => handletree(displayHierarchyHead[2]?.text)}>\n                {displayHierarchyHead?.length > 3 && <Tree content={displayHierarchyHead[3]?.text}\n                  canHide\n                  open\n                  style={treeStyles}\n\n                  onClick={() => handletree(displayHierarchyHead[3]?.text)}>\n                  {displayHierarchyHead?.length > 4 && <Tree content={displayHierarchyHead[4]?.text}\n                    canHide\n                    open\n                    style={treeStyles}\n\n                    onClick={() => handletree(displayHierarchyHead[4]?.text)}>\n                  </Tree>}\n                </Tree>}\n              </Tree>}\n            </Tree>}\n\n          </Tree>\n        </div>\n      </div>\n\n      {/* })\n      } */}\n    </div>\n  )\n}\n\nexport default ResourceHierarchy;\n","import React from \"react\";\nimport { FaStar } from \"react-icons/fa\";\nimport { AiOutlineStar } from \"react-icons/ai\";\n\nconst DisplayStar = ({ skillRating }) => {\n  const rating = Array.from({ length: 5 }, (ele, index) => {\n    return (\n      <span key={index}>\n        {skillRating >= index + 1 ? <FaStar /> : <AiOutlineStar />}\n      </span>\n    );\n  });\n  return <div>{rating}</div>;\n};\n\nexport default DisplayStar;\n","import React, { useEffect, useState } from \"react\";\nimport { FilterMatchMode, FilterOperator } from \"primereact/api\";\nimport { DataTable } from \"primereact/datatable\";\nimport { Column } from \"primereact/column\";\nimport \"primeicons/primeicons.css\";\nimport \"primereact/resources/themes/lara-light-indigo/theme.css\";\nimport \"primereact/resources/primereact.css\";\nimport \"primeflex/primeflex.css\";\nimport { InputText } from \"primereact/inputtext\";\nimport \"../PrimeReactTableComponent/PrimeReactTable.scss\";\nimport { Link } from \"react-router-dom\";\nimport moment from \"moment\";\n\nfunction FlatPrimeReactTableRevenue(props) {\n  const {\n    data,\n    rows,\n    col,\n    headerdatagroup,\n    linkColumns,\n    linkColumnsRoutes,\n    rowGroupMode,\n    groupRowsBy,\n  } = props;\n  const [mainData, setMainData] = useState([]);\n  const [headerData, setHeaderData] = useState([]);\n  const [bodyData, setBodyData] = useState([]);\n\n  useEffect(() => {\n    setMainData(JSON.parse(JSON.stringify(data)));\n  }, [data]);\n\n  useEffect(() => {\n    if (mainData.length > 0) {\n      setHeaderData(mainData[0]);\n      setBodyData(mainData.splice(1));\n    }\n  }, [mainData]);\n\n  const filtersData = {\n    contains: { value: null, matchMode: FilterMatchMode.CONTAINS },\n  };\n\n  const [filters1, setFilters1] = useState({\n    global: filtersData[\"contains\"],\n  });\n\n  useEffect(() => {\n    setFilters1({\n      global: filtersData[\"contains\"],\n    });\n  }, [headerData]);\n\n  const [globalFilterValue1, setGlobalFilterValue1] = useState(\"\");\n\n  const clearFilter1 = () => {\n    initFilters1();\n  };\n\n  const initFilters1 = () => {\n    setGlobalFilterValue1(\"\");\n  };\n\n  const onGlobalFilterChange1 = (e) => {\n    const value = e.target.value;\n    let _filters1 = { ...filters1 };\n\n    _filters1[\"global\"].value = value;\n\n    setFilters1(_filters1);\n    setGlobalFilterValue1(value);\n  };\n\n  const renderHeader1 = () => {\n    return (\n      <div className=\"flex justify-content-between\">\n        <span></span>\n        <span className=\"p-input-icon-left tableGsearch\">\n          <i className=\"pi pi-search\" />\n          <InputText\n            defaultValue={globalFilterValue1}\n            onChange={onGlobalFilterChange1}\n            placeholder=\"Keyword Search\"\n          />\n        </span>\n      </div>\n    );\n  };\n\n  const LinkTemplate = (data) => {\n    let rou = linkColumnsRoutes[0]?.split(\":\");\n    return (\n      <>\n        <Link target=\"_blank\" to={rou[0] + \":\" + data[rou[1]]}>\n          {data[linkColumns]}\n        </Link>\n      </>\n    );\n  };\n\n  const header1 = renderHeader1();\n  const generateBodyWithTooltip = (field) => (data) =>\n    (\n      <div className=\"ellipsis\" title={`${data[field]}`}>\n        {data[field]}\n      </div>\n    );\n\n  const numberwithcommas = (field) => (data) => {\n    const Value = data[field];\n    const formattedValue = Value.toLocaleString(\"en-US\", {\n      minimumFractionDigits: 2,\n      maximumFractionDigits: 2,\n    });\n\n    return (\n      <div data-toggle=\"tooltip\" title={formattedValue}>\n        <span\n          style={{\n            display: \"flex\",\n            justifyContent: \"space-between\",\n          }}\n        >\n          $ <span className=\"align right\">{formattedValue}</span>\n        </span>\n      </div>\n    );\n  };\n\n  const updatedDateBody = (field) => (data) => {\n    const formattedValue = moment(data[field].split(\"T\")[0]).format(\n      \"DD-MMM-YYYY\"\n    );\n    return (\n      <div data-toggle=\"tooltip\" title={formattedValue}>\n        {formattedValue}\n      </div>\n    );\n  };\n  const dynamicColumns = Object.keys(headerData)?.map((col, i) => {\n    let body;\n    if (linkColumns?.includes(col)) {\n      body = LinkTemplate;\n    }\n    // if ([\"comments\"].includes(col))\n    else if (col.includes(\"min_salary\") || col.includes(\"max_salary\")) {\n      body = numberwithcommas(col);\n    } else if (col.includes(\"updated_date\") || col.includes(\"month\")) {\n      body = updatedDateBody(col);\n    } else {\n      body = generateBodyWithTooltip(col);\n    }\n\n    return (\n      <Column\n        sortable\n        key={col}\n        body={body}\n        field={col}\n        header={headerData[col]}\n      />\n    );\n  });\n\n  return (\n    <div>\n      <div className=\"card darkHeader\">\n        {Object.keys(headerData).length > 0 && (\n          <DataTable\n            paginatorTemplate=\"RowsPerPageDropdown FirstPageLink PrevPageLink CurrentPageReport NextPageLink LastPageLink\"\n            currentPageReportTemplate=\"{first} to {last} of {totalRecords}\"\n            rowsPerPageOptions={[10, 25, 50]}\n            value={bodyData}\n            paginator\n            showGridlines\n            rows={rows}\n            dataKey=\"id\"\n            filters={filters1}\n            responsiveLayout=\"scroll\"\n            header={header1}\n            emptyMessage=\"No Records found.\"\n            className=\" primeReactDataTable\" ////customerEngament\n          >\n            {dynamicColumns}\n          </DataTable>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default FlatPrimeReactTableRevenue;\n","import React, { useState, useEffect, useMemo } from \"react\";\nimport MaterialReactTable from \"material-react-table\";\nimport \"./MonthlyForecastRevenueCalenderTable.scss\";\nimport { Link } from \"react-router-dom\";\n\nexport default function ForecastProjectPopUp(props) {\n  const {\n    data,\n    expandedCols,\n    colExpandState,\n    formData,\n    setFormData,\n    linkId,\n    resourcedata,\n  } = props;\n  const [nodes, setNodes] = useState([]);\n  const [columns, setColumns] = useState(null);\n  const [hiddenColumns, setHiddenColumns] = useState({});\n  const [colExpFlag, setColumnExpFlag] = useState(false);\n  const [headers, setHeaders] = useState([]);\n\n  useEffect(() => {\n    getData();\n  }, [data]);\n  const getData = () => {\n    let tableData = data.tableData;\n    let columns = null;\n\n    if (data?.columns?.includes(\"'\")) {\n      columns = data?.columns?.replaceAll(\"'\", \"\");\n    } else {\n      columns = data?.columns;\n    }\n\n    let dd = columns?.split(\",\");\n    let colArr = null;\n\n    if (dd != undefined) {\n      colArr = [...dd];\n    }\n\n    let newHeaders = [];\n    let hiddenHeaders = [];\n\n    const obj = {};\n\n    for (let i = 0; i < colArr?.length; i++) {\n      let colVal = colArr[i].trim();\n\n      let firstData = tableData[0];\n      obj[colVal] = firstData[colVal];\n    }\n\n    let headerArray = Object.entries(obj);\n\n    let unWantedCols = [\"Id\", \"Rate\", \"Cost\"];\n\n    let filteredHeaders = headerArray.filter(\n      (d) => !unWantedCols.includes(d[0])\n    );\n    setHeaders(filteredHeaders);\n\n    filteredHeaders.map(([key, value]) => {\n      if (expandedCols.includes(key)) {\n        hiddenHeaders.push({ [key]: false });\n      }\n    });\n    setHiddenColumns(Object.assign({}, ...hiddenHeaders));\n\n    let C = tableData?.filter((d) => d.Id == -1);\n\n    filteredHeaders.map(([key, value], index) => {\n      newHeaders.push({\n        accessorKey: key,\n        header: value,\n        enableColumnActions: false,\n        enableHiding: true,\n        rowspan: 5,\n        Header: ({ column }) => (\n          <div\n            className={\n              key.includes(\"_L\") || key?.includes(\"_N\")\n                ? \"disabledDatesColumn\"\n                : key.includes(\"Name\")\n                ? \"project mixer\"\n                : (resourcedata?.resourcecapType === \"allocations\" ||\n                    resourcedata?.resourcecapType === \"assigned\" ||\n                    resourcedata?.resourcecapType === \"unassigned\") &&\n                  key.includes(\"Role\")\n                ? \"role mixer\"\n                : key.includes(\"Name\") || key.includes(\"Total\")\n                ? \"mixer\"\n                : \"datesColumn\"\n            }\n          >\n            {value}{\" \"}\n          </div>\n        ),\n      });\n    });\n    let subHeaders =\n      C && Object.entries(C[0])?.filter((d) => !unWantedCols?.includes(d[0]));\n\n    newHeaders.map((data) => {\n      let i = newHeaders.indexOf(data);\n      subHeaders.map(([key, value], index) => {\n        if (key == data.accessorKey) {\n          let obj = {\n            id: key,\n            header: (\n              <div\n                className={\n                  key.includes(\"_L\") || key?.includes(\"_N\")\n                    ? \"disabledDatesColumn\"\n                    : key.includes(\"_W\")\n                    ? \"datesColumn\"\n                    : value == \"\" || value == null || value == undefined\n                    ? \"\"\n                    : \"datesColumn\"\n                }\n                title={value}\n              >\n                {\" \"}\n                {value == null || value == 0 ? \"\" : value}\n              </div>\n            ),\n            accessorKey: key,\n            Cell: ({ cell }) => {\n              return (\n                <>\n                  {cell.column.id == \"Name\" && cell.row.original != null ? (\n                    <>\n                      {cell.row.original.Name == \"Total\" ? (\n                        \"Total\"\n                      ) : (\n                        <Link\n                          title={cell.getValue().split(\"_\")[0]}\n                          to={`/project/capacityPlan/:${linkId}`}\n                          target=\"_blank\"\n                        >\n                          {cell.getValue().split(\"_\")[0]}\n                        </Link>\n                      )}\n                    </>\n                  ) : cell.getValue() != null &&\n                    cell.getValue().split(\"_\")[1] == \"leave\" ? (\n                    <span\n                      className=\"datesColumn pink align right \"\n                      title={cell.getValue().split(\"_\")[0]}\n                    >\n                      {cell.getValue().split(\"_\")[0]}\n                    </span>\n                  ) : cell.getValue() == \"0_holday\" ||\n                    cell.getValue() == \"0.00_holday\" ? (\n                    <span\n                      className=\"datesColumn blue align right \"\n                      title={cell.getValue().split(\"_\")[0]}\n                    >\n                      {cell.getValue().split(\"_\")[0]}\n                    </span>\n                  ) : (cell.getValue() != null && key.includes(\"_L\")) ||\n                    key.includes(\"_W\") ||\n                    key.includes(\"_N\") ? (\n                    <span\n                      className=\"disabledDatesColumn   align right\"\n                      title={cell.getValue()}\n                    >\n                      {cell.getValue()}\n                    </span>\n                  ) : key.includes(\"Role\") && cell.getValue() != null ? (\n                    <div className=\"role\" title={cell.getValue()}>\n                      {cell.getValue()}\n                    </div>\n                  ) : key.includes(\"_L\") ? (\n                    <div class=\"disabledDatesColumn\" title={cell.getValue()}>\n                      {\" \"}\n                      {cell.getValue()}\n                    </div>\n                  ) : key.includes(\"_W\") ? (\n                    <div class=\"disabledDatesColumn \" title={cell.getValue()}>\n                      {\" \"}\n                      {cell.getValue()}\n                    </div>\n                  ) : (\n                    <div\n                      className=\"datesColumn align right\"\n                      title={cell.getValue()}\n                    >\n                      {cell.getValue()}\n                    </div>\n                  )}\n                </>\n              );\n            },\n          };\n\n          newHeaders[i].columns = [obj];\n        }\n      });\n    });\n\n    setColumns(newHeaders);\n\n    let values = [];\n\n    let B = tableData?.filter((d) => d.Id !== -1 && d.Id !== -2);\n\n    setNodes(B);\n  };\n\n  useEffect(() => {\n    colExpFlag ? setHiddenColumns({}) : colCollapse();\n  }, [colExpFlag]);\n\n  const colCollapse = () => {\n    let hiddenHeaders = [];\n    // refactor this\n    headers.map(([key, value]) => {\n      if (expandedCols.includes(key)) {\n        hiddenHeaders.push({ [key]: false });\n      }\n    });\n\n    setHiddenColumns(Object.assign({}, ...hiddenHeaders));\n  };\n\n  return (\n    <div className=\"materialReactExpandableTable calenderTable allocationsCalenderTable darkHeader\">\n      {nodes?.length ? (\n        <MaterialReactTable\n          columns={columns}\n          data={nodes}\n          // enableExpandAll={true} //hide expand all double arrow in column header\n          // enableExpanding\n          enablePagination={false}\n          //enableRowVirtualization\n          enableGlobalFilter={true}\n          // enableGlobalFilterModes={searchFilter}\n          enableDensityToggle={false}\n          enableFullScreenToggle={false}\n          enableHiding={false}\n          enableColumnFilters={false}\n          enableBottomToolbar={false}\n          enableTopToolbar={true}\n          enableColumnActions={false}\n          enableSorting={false}\n          filterFromLeafRows //apply filtering to all rows instead of just parent rows\n          initialState={{\n            showGlobalFilter: true,\n            expanded: false,\n            density: \"compact\",\n            columnVisibility: { ...hiddenColumns },\n          }} //expand all rows by default\n          state={{ columnVisibility: { ...hiddenColumns } }}\n          //paginateExpandedRows={false} //When rows are expanded, do not count sub-rows as number of rows on the page towards pagination\n          defaultColumn={{ minSize: 40, maxSize: 1000, size: 40 }} //units are in px\n          enableStickyHeader\n          muiSearchTextFieldProps={{\n            // placeholder: \"Search all users\",\n            // sx: { minWidth: \"300px\" },\n            variant: \"outlined\",\n          }}\n          muiTableContainerProps={{\n            sx: { maxHeight: \"50vh\" }, //give the table a max height\n          }}\n          muiTableBodyProps={{\n            sx: {\n              \"&\": {\n                borderRight: \"1px solid #ccc\",\n                borderBottom: \"1px solid #ccc\",\n              },\n              \"& td\": {\n                borderRight: \"1px solid #ccc\",\n                height: \"22px\",\n                padding: \"0px 5px\",\n              },\n            },\n          }}\n          muiTableHeadProps={{\n            sx: {\n              \"tr:nth-of-type(2) th\": {\n                zIndex: \"auto\",\n              },\n              \"& th\": {\n                borderTop: \"1px solid #ccc\",\n                borderRight: \"1px solid #ccc\",\n                background: \"#f4f4f4 \",\n                padding: \"0 5px\",\n              },\n            },\n          }}\n        />\n      ) : null}\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport TreeView from \"@mui/lab/TreeView\";\nimport PropTypes, { node } from \"prop-types\";\nimport SvgIcon from \"@mui/material/SvgIcon\";\nimport { alpha, styled } from \"@mui/material/styles\";\nimport TreeItem, { treeItemClasses } from \"@mui/lab/TreeItem\";\nimport Collapse from \"@mui/material/Collapse\";\nimport { useSpring, animated } from \"@react-spring/web\";\nimport { FcOpenedFolder } from \"react-icons/fc\";\nimport axios from \"axios\";\nimport \"../ProjectComponent/DocumentHierarchy.scss\";\nimport { ReactSearchAutocomplete } from \"react-search-autocomplete\";\nimport { BiLoaderCircle } from \"react-icons/bi\";\nimport { environment } from \"../../environments/environment\";\nimport { AiFillWarning } from \"react-icons/ai\";\n\nfunction MinusSquare(props) {\n  return (\n    <SvgIcon fontSize=\"inherit\" style={{ width: 14, height: 14 }} {...props}>\n      <path d=\"M22.047 22.074v0 0-20.147 0h-20.12v0 20.147 0h20.12zM22.047 24h-20.12q-.803 0-1.365-.562t-.562-1.365v-20.147q0-.776.562-1.351t1.365-.575h20.147q.776 0 1.351.575t.575 1.351v20.147q0 .803-.575 1.365t-1.378.562v0zM17.873 11.023h-11.826q-.375 0-.669.281t-.294.682v0q0 .401.294 .682t.669.281h11.826q.375 0 .669-.281t.294-.682v0q0-.401-.294-.682t-.669-.281z\" />\n    </SvgIcon>\n  );\n}\n\nfunction PlusSquare(props) {\n  return (\n    <SvgIcon fontSize=\"inherit\" style={{ width: 14, height: 14 }} {...props}>\n      <path d=\"M22.047 22.074v0 0-20.147 0h-20.12v0 20.147 0h20.12zM22.047 24h-20.12q-.803 0-1.365-.562t-.562-1.365v-20.147q0-.776.562-1.351t1.365-.575h20.147q.776 0 1.351.575t.575 1.351v20.147q0 .803-.575 1.365t-1.378.562v0zM17.873 12.977h-4.923v4.896q0 .401-.281.682t-.682.281v0q-.375 0-.669-.281t-.294-.682v-4.896h-4.923q-.401 0-.682-.294t-.281-.669v0q0-.401.281-.682t.682-.281h4.923v-4.896q0-.401.294-.682t.669-.281v0q.401 0 .682.281t.281.682v4.896h4.923q.401 0 .682.281t.281.682v0q0 .375-.281.669t-.682.294z\" />\n    </SvgIcon>\n  );\n}\n\nfunction TransitionComponent(props) {\n  const style = useSpring({\n    from: {\n      opacity: 0,\n      transform: \"translate3d(20px,0,0)\",\n    },\n    to: {\n      opacity: props.in ? 1 : 0,\n      transform: `translate3d(${props.in ? 0 : 20}px,0,0)`,\n    },\n  });\n\n  return (\n    <animated.div style={style}>\n      <Collapse {...props} />\n    </animated.div>\n  );\n}\n\nTransitionComponent.propTypes = {\n  in: PropTypes.bool,\n};\n\nconst StyledTreeItem = styled((props) => {\n  return (\n    <div>\n      <TreeItem\n        {...props}\n        key={String(props?.node?.id)}\n        nodeId={String(props?.node?.id)}\n        label={props?.node?.full_name}\n        TransitionComponent={TransitionComponent}\n      >\n        {Array.isArray(props?.node?.subRows)\n          ? props?.node?.subRows.map((node) => renderTree(node))\n          : console.log(\"coming here?\")}\n      </TreeItem>\n    </div>\n  );\n})(({ theme }) => ({\n  [`& .${treeItemClasses.iconContainer}`]: {\n    \"& .close\": {\n      opacity: 0.3,\n    },\n  },\n  [`& .${treeItemClasses.group}`]: {\n    marginLeft: 15,\n    paddingLeft: 18,\n    borderLeft: `1px dashed ${alpha(theme.palette.text.primary, 0.4)}`,\n  },\n}));\n\nconst renderTree = (nodes) => (\n  <div key={String(nodes?.id)}>\n    <StyledTreeItem node={nodes}></StyledTreeItem>\n  </div>\n);\nexport default function MarginAnalysisHierarchy(props) {\n  const baseUrl = environment.baseUrl;\n  const {\n    defaultExpandedRows,\n    validation,\n    popDocFolderId,\n    setNodeClicked,\n    setResName,\n  } = props;\n  {\n    /*--------------------Hierarchy Data--------------------- */\n  }\n  const [data, setData] = useState([]);\n  const [ac, setAc] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const getHierarchyData = () => {\n    setLoading(true);\n    axios({\n      method: \"get\",\n      url: baseUrl + \"/revenuemetricsms/RevenueMarginAnalysis/getReportees2\",\n    })\n      .then(function (response) {\n        const resp = response.data;\n        const newData = resp.map((item) => ({\n          name: item.full_name,\n          id: item.id,\n        }));\n        console.log(newData);\n        setAc(newData);\n\n        const filteredData = resp.filter((item) => {\n          if (item.parent_id !== null) {\n            return resp.some(\n              (parentItem) =>\n                parentItem &&\n                parentItem !== \"null\" &&\n                parentItem.id === item.parent_id\n            );\n          } else {\n            return true;\n          }\n        });\n        setLoading(false);\n        setData(filteredData);\n      })\n      .catch((err) => {\n        console.log(err);\n        setLoading(false);\n      });\n  };\n  useEffect(() => {\n    getHierarchyData();\n  }, []);\n\n  const jsonToTree = (flatArray, options) => {\n    options = {\n      id: \"id\",\n      parentId: \"parent_id\",\n      children: \"subRows\",\n      ...options,\n    };\n    const dictionary = {};\n    const tree = [];\n    const children = options.children;\n    flatArray.forEach((node) => {\n      const nodeId = node[options.id];\n      const nodeParentId = node[options.parentId];\n      dictionary[nodeId] = {\n        [children]: [],\n        ...node,\n        ...dictionary[nodeId],\n      };\n      dictionary[nodeParentId] = dictionary[nodeParentId] || { [children]: [] };\n      dictionary[nodeParentId][children].push(dictionary[nodeId]);\n    });\n    Object.values(dictionary).forEach((obj) => {\n      if (typeof obj[options.id] === \"undefined\") {\n        tree.push(...obj[children]);\n      }\n    });\n    return tree;\n  };\n\n  useEffect(() => {}, [popDocFolderId]);\n\n  const hierarchy = jsonToTree(data);\n  const handleSelect = (events, nodeIds) => {\n    console.log(\"Clicked??\", events);\n\n    const resName = ac\n      .filter((item) => {\n        return item.id === parseInt(nodeIds);\n      })\n      .map((item) => {\n        return item.name;\n      });\n    setNodeClicked(nodeIds);\n    setResName(resName);\n  };\n\n  function setFolderOrder(hierarchy, folderOrder) {\n    const filteredHierarchy = hierarchy.filter(\n      (item) => item.full_name !== \"SOW\"\n    );\n\n    return filteredHierarchy;\n  }\n  let filteredHierarchy = setFolderOrder(hierarchy, [\n    \"IA Support\",\n    \"PPM Development and Implementation\",\n    \"Expense\",\n    \"Expenses\",\n  ]);\n\n  const iconStyle = {\n    display: \"flex\",\n    alignItems: \"center\",\n    gap: \"4px\",\n  };\n\n  return (\n    <div>\n      {validation ? (\n        <div className=\"statusMsg error mb-2\">\n          {\" \"}\n          <AiFillWarning /> Please select valid values for highlighted fields\n        </div>\n      ) : (\n        \"\"\n      )}\n      <div className=\"col-md-12 mb-2\">\n        <div className=\"form-group row\">\n          <label className=\"col-5\" htmlFor=\"email-input\">\n            Search&nbsp;<span className=\"error-text ml-1\">*</span>\n          </label>\n          <span className=\"col-1 p-0\">:</span>\n          <div className=\"col-6\">\n            <div className=\"autoComplete-container \">\n              <ReactSearchAutocomplete\n                items={ac}\n                type=\"Text\"\n                name=\"prjId\"\n                id=\"prjId\"\n                className=\"error AutoComplete\"\n                onSelect={(e) => {\n                  console.log(\"??????\");\n                  setNodeClicked(e.id);\n                  const resName = ac\n                    .filter((item) => {\n                      return item.id === parseInt(e.id);\n                    })\n                    .map((item) => {\n                      return item.name;\n                    });\n                  setResName(resName);\n                }}\n                showIcon={false}\n                placeholder=\"Type minimum 3 characters\"\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {loading ? (\n        <>\n          <BiLoaderCircle /> Loading...\n        </>\n      ) : (\n        <div\n          className=\"hierarchy tree\"\n          style={{ minHeight: \"50px\", maxHeight: \"300px\", overflowY: \"auto\" }}\n        >\n          <TreeView\n            aria-label=\"customized\"\n            defaultExpanded={[defaultExpandedRows]}\n            defaultCollapseIcon={\n              <div style={iconStyle}>\n                <MinusSquare />\n                <span> </span>\n                <FcOpenedFolder />{\" \"}\n              </div>\n            }\n            defaultExpandIcon={\n              <div style={iconStyle}>\n                <PlusSquare />\n                <span> </span>\n                <FcOpenedFolder />{\" \"}\n              </div>\n            }\n            defaultEndIcon={<FcOpenedFolder />}\n            defaultParentIcon={<FcOpenedFolder />}\n            sx={{\n              \"& .css-1g86id8-MuiTreeItem-content .MuiTreeItem-label\": {\n                width: \"auto\",\n                minwidth: 0,\n              },\n            }}\n            className=\"hierarchyTree\"\n            onNodeSelect={handleSelect}\n          >\n            {filteredHierarchy.map((item) => renderTree(item))}\n          </TreeView>\n        </div>\n      )}\n    </div>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport { DataTable } from \"primereact/datatable\";\nimport { Column } from \"primereact/column\";\nimport \"primeicons/primeicons.css\";\nimport \"primereact/resources/themes/lara-light-indigo/theme.css\";\nimport \"primereact/resources/primereact.css\";\nimport \"primeflex/primeflex.css\";\nimport {\n  AiFillDelete,\n  AiFillEdit,\n  AiFillWarning,\n  AiOutlineHistory,\n} from \"react-icons/ai\";\nimport { TfiSave } from \"react-icons/tfi\";\nimport { ImCross } from \"react-icons/im\";\nimport { BiCheck } from \"react-icons/bi\";\nimport { FaPlus } from \"react-icons/fa\";\nimport { FileUpload } from \"@mui/icons-material\";\nimport SaveIcon from \"@mui/icons-material/Save\";\nimport { useState, useRef } from \"react\";\nimport axios from \"axios\";\nimport moment from \"moment\";\nimport \"./SalaryBand.scss\";\nimport Draggable from \"react-draggable\";\nimport { CModal, CModalBody, CModalHeader, CModalTitle } from \"@coreui/react\";\nimport { environment } from \"../../environments/environment\";\nimport GlobalValidation from \"../ValidationComponent/GlobalValidation\";\nimport FlatPrimeReactTableRevenue from \"../RevenueMetrices/FlatPrimeReactTableRevenue\";\nimport UploadExcelSheet from \"../CostComponent/UploadExcelSheet\";\nimport Loader from \"../Loader/Loader\";\n\nfunction SalaryBandTable(props) {\n  const baseUrl = environment.baseUrl;\n\n  const {\n    popUp,\n    tableData,\n    setTableData,\n    getSearch,\n    SetPopUp,\n    resLocation,\n    setResLocation,\n    departments,\n    setDepartments,\n    roletype,\n    formData,\n    setLoaderTimer,\n    loaderTimer,\n    abortController,\n  } = props;\n\n  const [deletePopUp, setDeletePopUp] = useState(false);\n  const [deleteid, setDeleteId] = useState(\"\");\n  const [updatedMessage, setUpdateMessage] = useState(false);\n  const [deleteMessage, setDeleteMessage] = useState(false);\n  const [validMessage, setValidMessage] = useState(false);\n  const [addrow, setAddRow] = useState(false);\n  const [successMessage, setSuccessMessage] = useState(false);\n  const [historyData, setHistoryData] = useState([]);\n  const [historyPopUp, setHistoryPopUp] = useState(false);\n  const [excelFile, setExcelFile] = useState(null);\n  const [stateValue, setStateValue] = useState(\"UploadRoleTypeCost\");\n  const [salValidation, SetSalValidation] = useState(false);\n  const [updateMsg, setUpdateMsg] = useState(\"\");\n  const loggedUserId = localStorage.getItem(\"resId\");\n\n  const handleAbort = () => {\n    abortController.current && abortController.current.abort();\n    setLoaderTimer(false);\n  };\n\n  const uploadExcelSheet = async () => {\n    let link = baseUrl + \"/CostMS/SalaryBand/uploadDocs\";\n    const response = await axios.post(link, excelFile, {\n      headers: {\n        \"Content-Type\": \"multipart/form-data\",\n      },\n    });\n    return response;\n  };\n  const onRowEditComplete = (e) => {\n    let _category = [tableData];\n    let { newData, index } = e;\n    _category[index] = newData;\n    setTableData(_category);\n    postData(e.newData);\n  };\n\n  const getHistory = (data) => {\n    setHistoryPopUp(true);\n    abortController.current = new AbortController();\n    axios({\n      url:\n        baseUrl +\n        `/CostMS/SalaryBand/getHistory?country=${data.Country_id}&department=${data.department_id}&roleType=${data.role_type_id}`,\n      signal: abortController.current.signal,\n    }).then((response) => {\n      let headerData = [\n        {\n          country: \"Country\",\n          department: \"Department\",\n          roleType: \"Role Type\",\n          min_salary: \"Min Salary\",\n          max_salary: \"Max Salary\",\n          month: \"Month\",\n          userName: \"Updated By\",\n          updated_date: \"Updated Date\",\n        },\n      ];\n      setHistoryData(headerData.concat(response.data));\n    });\n  };\n\n  const postData = (rowData) => {\n    if (rowData.max_salary == \"\" || rowData.min_salary == \"\") {\n      setValidMessage(true);\n      setTimeout(() => {\n        setValidMessage(false);\n      }, 3000);\n\n      return;\n    } else if (Number(rowData.max_salary) < Number(rowData.min_salary)) {\n      SetSalValidation(true);\n      return;\n    } else {\n      let data = {\n        id: rowData.Id,\n        countryId: \"\" + rowData.Country_id,\n        department: \"\" + rowData.department_id,\n        roleType: \"\" + rowData.role_type_id,\n        roleCost: \"\" + rowData.role_cost,\n        minSal: \"\" + rowData.min_salary,\n        maxSal: \"\" + rowData.max_salary,\n\n        month:\n          rowData.id == \"\" || rowData.id == null\n            ? moment(new Date()).startOf(\"month\").format(\"YYYY-MM-DD\")\n            : rowData.month,\n\n        createdBy:\n          rowData.id == \"\" || rowData.id == null\n            ? loggedUserId\n            : rowData.created_by,\n\n        createdDate:\n          rowData.id == \"\" || rowData.id == null\n            ? moment(new Date()).format(\"YYYY-MM-DD\")\n            : moment(rowData.created_date).format(\"YYYY-MM-DD\"),\n\n        updatedBy: loggedUserId,\n\n        updatedDate: moment(new Date()).format(\"YYYY-MM-DD\"),\n      };\n      axios({\n        url: baseUrl + `/CostMS/SalaryBand/Post`,\n        method: \"post\",\n        data: data,\n      }).then((response) => {\n        setUpdateMessage(true);\n        getSearch();\n        setTimeout(() => {\n          setUpdateMessage(false);\n        }, 3000);\n      });\n    }\n  };\n\n  const deleteRecord = () => {\n    setLoaderTimer(true);\n    abortController.current = new AbortController();\n    axios({\n      method: \"delete\",\n      url: baseUrl + `/CostMS/SalaryBand/delete?Id=${deleteid}`,\n      signal: abortController.current.signal,\n    }).then((response) => {\n      setDeletePopUp(false);\n      getSearch();\n      setDeleteMessage(true);\n      setLoaderTimer(false);\n      setTimeout(() => {\n        setDeleteMessage(false);\n      }, 300);\n    });\n  };\n\n  const handleHistory = (data) => {\n    return (\n      <div\n        className=\"align center\"\n        onClick={(e) => {\n          getHistory(data);\n        }}\n      >\n        <AiOutlineHistory\n          size={\"1.5em\"}\n          title=\"History\"\n          style={{ cursor: \"pointer\" }}\n          color=\"grey\"\n        />\n      </div>\n    );\n  };\n  const handleAction = (data) => {\n    return (\n      <div className=\"align center\">\n        <AiFillDelete\n          size={\"1.5em\"}\n          title=\"Delete\"\n          style={{ cursor: \"pointer\" }}\n          color=\"orange\"\n          onClick={() => {\n            setDeletePopUp(true);\n            setDeleteId(data.Id);\n          }}\n        />\n      </div>\n    );\n  };\n  useEffect(() => {\n    tableData.forEach((rowData, rowIndex) => {\n      if (rowData.min_salary === \"\" || rowData.max_salary === \"\") {\n        const icon = document.getElementsByClassName(\n          `p-row-editor-init p-link-${rowIndex}`\n        )[0];\n        icon?.setAttribute(\"title\", `Edit row ${rowIndex}`);\n        icon?.click();\n\n        setTimeout(() => {\n          const cancelIcon = document.getElementsByClassName(\n            `p-row-editor-cancel p-link-${rowIndex}`\n          )[0];\n          cancelIcon?.setAttribute(\"title\", `Cancel editing row ${rowIndex}`);\n          cancelIcon?.addEventListener(\n            \"click\",\n            function (e) {\n              if (rowData.min_salary === \"\" || rowData.max_salary === \"\") {\n                // Update the tableData and other state variables accordingly for row rowIndex\n                const updatedTableData = [...tableData];\n                updatedTableData.splice(rowIndex, 1);\n                setTableData(updatedTableData);\n                setValidMessage(false);\n                // componentRef.current.forceUpdate(); // Note: componentRef is not defined in your code\n              }\n            },\n            true\n          );\n        }, 200);\n      }\n    });\n  }, [tableData]);\n\n  const handleMinSal = (data) => {\n    const Value = Number(data.min_salary);\n    const formattedValue = Value.toLocaleString(\"en-US\", {\n      minimumFractionDigits: 2,\n      maximumFractionDigits: 2,\n    });\n\n    return (\n      <div data-toggle=\"tooltip\" title={formattedValue}>\n        <span\n          style={{\n            display: \"flex\",\n            justifyContent: \"space-between\",\n          }}\n        >\n          $ <span className=\"align right\">{formattedValue}</span>\n        </span>\n      </div>\n    );\n  };\n\n  const textEditorMinSal = (rowData) => {\n    return (\n      <>\n        <input\n          className={`error ${\n            validMessage && !rowData.rowData.min_salary ? \"error-block\" : \"\"\n          }`}\n          type=\"text\"\n          id=\"min_salary\"\n          name=\"min_salary\"\n          defaultValue={rowData.rowData.min_salary}\n          onChange={(e) => {\n            rowData.editorCallback(e.target.value);\n          }}\n        />\n      </>\n    );\n  };\n\n  const handleMaxSal = (data) => {\n    const Value = Number(data.max_salary);\n    const formattedValue = Value.toLocaleString(\"en-US\", {\n      minimumFractionDigits: 2,\n      maximumFractionDigits: 2,\n    });\n    return (\n      <div data-toggle=\"tooltip\" title={formattedValue}>\n        <span\n          style={{\n            display: \"flex\",\n            justifyContent: \"space-between\",\n          }}\n        >\n          $ <span className=\"align right\">{formattedValue}</span>\n        </span>\n      </div>\n    );\n  };\n  const textEditorMaxSal = (rowData) => {\n    return (\n      <>\n        <input\n          className={`error ${\n            validMessage && !rowData.rowData.max_salary ? \"error-block\" : \"\"\n          }`}\n          type=\"text\"\n          id=\"max_salary\"\n          name=\"max_salary\"\n          defaultValue={rowData.rowData.max_salary}\n          onChange={(e) => {\n            rowData.editorCallback(e.target.value);\n          }}\n        />\n      </>\n    );\n  };\n\n  const handleRoleCost = (data) => {\n    const Value = Number(data.role_cost);\n    const formattedValue = Value.toLocaleString(\"en-US\", {\n      // style: \"currency\",\n      // currency: \"USD\",\n      minimumFractionDigits: 2,\n      maximumFractionDigits: 2,\n    });\n    return (\n      <div data-toggle=\"tooltip\" title={formattedValue}>\n        <span\n          style={{\n            display: \"flex\",\n            justifyContent: \"space-between\",\n          }}\n        >\n          $ <span className=\"align right\">{formattedValue}</span>\n        </span>\n      </div>\n    );\n  };\n\n  const handleDepartment = (data) => {\n    return (\n      <div data-toggle=\"tooltip\" title={data.department}>\n        {data.department}\n      </div>\n    );\n  };\n\n  const handleCountry = (data) => {\n    return (\n      <div data-toggle=\"tooltip\" title={data.country}>\n        {data.country}\n      </div>\n    );\n  };\n\n  const handleRoleType = (data) => {\n    return (\n      <div data-toggle=\"tooltip\" title={data.role_type}>\n        {data.role_type}\n      </div>\n    );\n  };\n\n  const handleResourceCount = (data) => {\n    return (\n      <div\n        data-toggle=\"tooltip\"\n        title={data.resource_cnt}\n        className=\"align right\"\n      >\n        {data.resource_cnt}\n      </div>\n    );\n  };\n  function HistoryTable(props) {\n    const { setHistoryPopUp, historyPopUp, historyData } = props;\n    return (\n      <div>\n        <Draggable>\n          <CModal\n            size=\"xl\"\n            visible={historyPopUp}\n            className=\"ui-dialog \"\n            onClose={() => setHistoryPopUp(false)}\n          >\n            <CModalHeader className=\"hgt22\">\n              <CModalTitle>\n                <span className=\"ft16\">Salary Band History</span>\n              </CModalTitle>\n            </CModalHeader>\n            <CModalBody>\n              <div className=\"row\">\n                <div className=\"col-md-12\">\n                  <FlatPrimeReactTableRevenue\n                    data={historyData}\n                    rows={10}\n                  ></FlatPrimeReactTableRevenue>\n                </div>\n              </div>\n            </CModalBody>\n          </CModal>\n        </Draggable>\n      </div>\n    );\n  }\n\n  function DeletePopUp(props) {\n    const { deletePopUp, setDeletePopUp, deleteRecord } = props;\n\n    return (\n      <div>\n        <Draggable>\n          <CModal\n            alignment=\"center\"\n            backdrop=\"static\"\n            size=\"sm\"\n            visible={deletePopUp}\n            className=\"ui-dialog\"\n            onClose={() => {\n              setDeletePopUp(false);\n            }}\n          >\n            <CModalHeader style={{ cursor: \"all-scroll\" }}>\n              <CModalTitle>\n                <span>Delete SalaryBand</span>\n              </CModalTitle>\n            </CModalHeader>\n            <CModalBody>\n              <h6>Are you sure you want to delete SalaryBand?</h6>\n              <div className=\"btn-container center my-2\">\n                <button\n                  type=\"button\"\n                  title=\"Delete\"\n                  className=\"btn btn-primary\"\n                  onClick={() => {\n                    deleteRecord();\n                  }}\n                >\n                  <TfiSave />\n                  Delete\n                </button>\n                <button\n                  type=\"button\"\n                  title=\"Cancel\"\n                  className=\"btn btn-primary\"\n                  onClick={() => {\n                    setDeletePopUp(false);\n                  }}\n                >\n                  {\" \"}\n                  <ImCross />\n                  Cancel\n                </button>\n              </div>\n            </CModalBody>\n          </CModal>\n        </Draggable>\n      </div>\n    );\n  }\n\n  function AddRow(props) {\n    const {\n      addrow,\n      setAddRow,\n      resLocation,\n      departments,\n      roletype,\n      setSuccessMessage,\n      formData,\n      setLoaderTimer,\n    } = props;\n    const initialvalue = {\n      country: \"\",\n      department: \"\",\n      roleType: \"\",\n      minSal: \"\",\n      maxSal: \"\",\n      month: formData.month,\n      createdBy: loggedUserId,\n      createdDate: moment(new Date()).format(\"YYYY-MM-DD\"),\n      updatedBy: loggedUserId,\n      updatedDate: moment(new Date()).format(\"YYYY-MM-DD\"),\n    };\n    const [addformData, setAddFormData] = useState(initialvalue);\n    const [validationMessage, setValidationMessage] = useState(false);\n    const [salaryvalidation, setSalaryValidation] = useState(false);\n    const ref = useRef([]);\n\n    const handleChange = (event) => {\n      const { name, value } = event.target;\n      setAddFormData((prevprops) => ({ ...prevprops, [name]: value }));\n    };\n\n    const postNewRecord = () => {\n      // setLoaderTimer(true);\n      let valid = GlobalValidation(ref);\n      if (valid) {\n        setValidationMessage(true);\n        return;\n      } else if (Number(addformData.maxSal) < Number(addformData.minSal)) {\n        setSalaryValidation(true);\n        setTimeout(() => {\n          setSalaryValidation(false);\n        }, 3000);\n        return;\n      }\n      abortController.current = new AbortController();\n      axios({\n        url: baseUrl + `/CostMS/SalaryBand/Post`,\n        signal: abortController.current.signal,\n        method: \"post\",\n        data: addformData,\n      }).then((response) => {\n        setAddRow(false);\n        setSuccessMessage(true);\n        // setLoaderTimer(false);\n        setTimeout(() => {\n          setSuccessMessage(false);\n        }, 3000);\n        getSearch();\n      });\n    };\n\n    return (\n      <div>\n        <CModal\n          alignment=\"center\"\n          backdrop=\"static\"\n          size=\"lg\"\n          visible={addrow}\n          className=\"ui-dialog\"\n          onClose={() => {\n            setAddRow(false);\n          }}\n        >\n          <CModalHeader style={{ cursor: \"all-scroll\" }}>\n            <CModalTitle>\n              <span>Add Salary Band</span>\n            </CModalTitle>\n          </CModalHeader>\n          <CModalBody>\n            <div className=\"col-md-12\">\n              {validationMessage ? (\n                <div className=\"statusMsg error\">\n                  <AiFillWarning />{\" \"}\n                  {\"Please select the valid values for highlighted fields\"}\n                </div>\n              ) : (\n                \"\"\n              )}\n              {salaryvalidation ? (\n                <div className=\"statusMsg error\">\n                  <AiFillWarning />{\" \"}\n                  {\"Maximum Salary Should be greater than Minimum Salary\"}\n                </div>\n              ) : (\n                \"\"\n              )}\n              <div className=\"group-content row mb-2\">\n                <div className=\"form-group row mb-2\">\n                  <label className=\"col-5\">\n                    Country<span className=\"required error-text ml-1\">*</span>\n                  </label>\n                  <span className=\"col-1\">:</span>\n                  <div className=\"col-6 error text\">\n                    <select\n                      id=\"country\"\n                      name=\"country\"\n                      className=\"error text\"\n                      onChange={handleChange}\n                      ref={(ele) => {\n                        ref.current[0] = ele;\n                      }}\n                    >\n                      <option value=\"\"> &lt;&lt;Please Select&gt;&gt;</option>\n                      {resLocation.map((Item, index) => (\n                        <option key={index} value={Item.value}>\n                          {Item.label}\n                        </option>\n                      ))}\n                    </select>\n                  </div>\n                </div>\n                <div className=\"form-group row mb-2\">\n                  <label className=\"col-5\">\n                    Department\n                    <span className=\"required error-text ml-1\">*</span>\n                  </label>\n                  <span className=\"col-1\">:</span>\n                  <div className=\"col-6 error text\">\n                    <select\n                      id=\"department\"\n                      name=\"department\"\n                      className=\"error text\"\n                      onChange={handleChange}\n                      ref={(ele) => {\n                        ref.current[1] = ele;\n                      }}\n                    >\n                      <option value=\"\"> &lt;&lt;Please Select&gt;&gt;</option>\n                      {departments.map((Item, index) => (\n                        <option key={index} value={Item.value}>\n                          {Item.label}\n                        </option>\n                      ))}\n                    </select>\n                  </div>\n                </div>\n                <div className=\"form-group row mb-2\">\n                  <label className=\"col-5\">\n                    Role Type\n                    <span className=\"required error-text ml-1\">*</span>\n                  </label>\n                  <span className=\"col-1\">:</span>\n                  <div className=\"col-6 error text\">\n                    <select\n                      id=\"roleType\"\n                      name=\"roleType\"\n                      className=\"error text\"\n                      onChange={handleChange}\n                      ref={(ele) => {\n                        ref.current[2] = ele;\n                      }}\n                    >\n                      <option value=\"\"> &lt;&lt;Please Select&gt;&gt;</option>\n                      {roletype.map((Item, index) => (\n                        <option key={index} value={Item.value}>\n                          {Item.label}\n                        </option>\n                      ))}\n                    </select>\n                  </div>\n                </div>\n                <div className=\"form-group row mb-2\">\n                  <label className=\"col-5\">\n                    Min Salary\n                    <span className=\"required error-text ml-1\">*</span>\n                  </label>\n                  <span className=\"col-1\">:</span>\n                  <div\n                    className=\"col-6 error textfield\"\n                    ref={(ele) => {\n                      ref.current[3] = ele;\n                    }}\n                  >\n                    <input\n                      type=\"text\"\n                      id=\"minSal\"\n                      name=\"minSal\"\n                      placeholder=\"Enter Salary in $\"\n                      onKeyDown={(e) =>\n                        e.keyCode &&\n                        (e.keyCode <= 47 || e.keyCode >= 58) &&\n                        e.keyCode != 8 &&\n                        e.preventDefault()\n                      }\n                      onChange={handleChange}\n                    />\n                  </div>\n                </div>\n                <div className=\"form-group row mb-2\">\n                  <label className=\"col-5\">\n                    Max Salary\n                    <span className=\"required error-text ml-1\">*</span>\n                  </label>\n                  <span className=\"col-1\">:</span>\n                  <div\n                    className=\"col-6 error textfield\"\n                    ref={(ele) => {\n                      ref.current[4] = ele;\n                    }}\n                  >\n                    <input\n                      type=\"text\"\n                      id=\"maxSal\"\n                      name=\"maxSal\"\n                      placeholder=\"Enter Salary in $\"\n                      onKeyDown={(e) =>\n                        e.keyCode &&\n                        (e.keyCode <= 47 || e.keyCode >= 58) &&\n                        e.keyCode != 8 &&\n                        e.preventDefault()\n                      }\n                      onChange={handleChange}\n                    />\n                  </div>\n                  <div className=\"col-md-12 col-sm-12 col-xs-12 btn-container center my-3\">\n                    <button\n                      className=\"btn btn-primary\"\n                      onClick={() => {\n                        postNewRecord();\n                      }}\n                    >\n                      <SaveIcon title=\"Save\" />\n                      Save\n                    </button>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </CModalBody>\n        </CModal>\n      </div>\n    );\n  }\n  return (\n    <div>\n      {updatedMessage ? (\n        <div className=\"statusMsg success\">\n          <BiCheck />\n          {\"Updated Successfully \"}\n        </div>\n      ) : (\n        \"\"\n      )}\n      {deleteMessage ? (\n        <div className=\"statusMsg success\">\n          <BiCheck />\n          {\"Deleted Successfully \"}\n        </div>\n      ) : (\n        \"\"\n      )}\n      {validMessage ? (\n        <div className=\"statusMsg error\">\n          <AiFillWarning />\n          {\"Please Enter the Highlighted Fields\"}\n        </div>\n      ) : (\n        \"\"\n      )}\n      {successMessage ? (\n        <div className=\"statusMsg success\">\n          <BiCheck />\n          {\"Saved Successfully \"}\n        </div>\n      ) : (\n        \"\"\n      )}\n      {salValidation ? (\n        <div className=\"statusMsg error\">\n          <AiFillWarning />\n          {\"Maximum Salary Should be greater than min Salary\"}\n        </div>\n      ) : (\n        \"\"\n      )}\n      <div>\n        <div className=\"align right mb-2\">\n          <button\n            className=\"btn btn-primary mr-2\"\n            title=\"Save\"\n            onClick={() => {\n              SetPopUp(true);\n            }}\n          >\n            <FileUpload /> Upload\n          </button>\n          <button\n            className=\"btn btn-primary\"\n            title=\"Add\"\n            onClick={() => {\n              setAddRow(true);\n            }}\n          >\n            <FaPlus />\n            Add\n          </button>\n        </div>\n        <DataTable\n          value={tableData}\n          showGridlines\n          editMode=\"row\"\n          onRowEditComplete={onRowEditComplete}\n          dataKey=\"id\"\n          stripedRows\n          className=\"primeReactDataTable salaryBandTable darkHeader\"\n          paginator\n          pagination=\"true\"\n          rows={10}\n          paginationperpage={5}\n          paginationrowsperpageoptions={[5, 15, 25, 50]}\n        >\n          <Column\n            field=\"country\"\n            header=\"Country\"\n            body={handleCountry}\n          ></Column>\n          <Column\n            field=\"department\"\n            header=\"Department\"\n            body={handleDepartment}\n          ></Column>\n          <Column\n            field=\"role_type\"\n            header=\"Role Type\"\n            body={handleRoleType}\n          ></Column>\n\n          <Column\n            field=\"min_salary\"\n            header=\"Min.Salary\"\n            body={handleMinSal}\n            editor={(options) => textEditorMinSal(options)}\n          ></Column>\n          <Column\n            field=\"max_salary\"\n            header=\"Max.Salary\"\n            body={handleMaxSal}\n            editor={(options) => textEditorMaxSal(options)}\n          ></Column>\n          <Column\n            field=\"role_cost\"\n            header=\"Role cost\"\n            body={handleRoleCost}\n          ></Column>\n          <Column\n            field=\"resource_cnt\"\n            header=\"Current Count\"\n            body={handleResourceCount}\n          ></Column>\n          <Column\n            field=\"StandardDeviation\"\n            header=\"Standard Deviation\"\n          ></Column>\n          <Column\n            header=\"History\"\n            body={handleHistory}\n            bodyStyle={{ textAlign: \"align center\" }}\n          ></Column>\n          <Column rowEditor />\n          <Column\n            header=\"Action\"\n            body={handleAction}\n            bodyStyle={{ textAlign: \"align center\" }}\n          ></Column>\n        </DataTable>\n      </div>\n      {deletePopUp ? (\n        <DeletePopUp\n          deletePopUp={deletePopUp}\n          setDeletePopUp={setDeletePopUp}\n          deleteRecord={deleteRecord}\n        />\n      ) : (\n        \"\"\n      )}\n      {addrow ? (\n        <AddRow\n          setAddRow={setAddRow}\n          addrow={addrow}\n          resLocation={resLocation}\n          setResLocation={setResLocation}\n          departments={departments}\n          setDepartments={setDepartments}\n          roletype={roletype}\n          setSuccessMessage={setSuccessMessage}\n          formData={formData}\n          setLoaderTimer={setLoaderTimer}\n        />\n      ) : (\n        \"\"\n      )}\n      {historyPopUp ? (\n        <HistoryTable\n          historyData={historyData}\n          setHistoryPopUp={setHistoryPopUp}\n          historyPopUp={historyPopUp}\n          setLoaderTimer={setLoaderTimer}\n        />\n      ) : (\n        \"\"\n      )}\n      {popUp ? (\n        <UploadExcelSheet\n          excelUploadPopUp={popUp}\n          setExcelUploadPopUp={SetPopUp}\n          excelFile={excelFile}\n          setExcelFile={setExcelFile}\n          uploadExcelSheet={uploadExcelSheet}\n          getResourcesCostData={getSearch}\n          formData={formData}\n          stateValue={stateValue}\n          setLoaderTimer={setLoaderTimer}\n          updateMsg={updateMsg}\n          setUpdateMsg={setUpdateMsg}\n        />\n      ) : (\n        \"\"\n      )}\n      {loaderTimer ? <Loader handleAbort={handleAbort} /> : \"\"}\n    </div>\n  );\n}\nexport default SalaryBandTable;\n","import { CCollapse } from \"@coreui/react\";\nimport React, { useEffect } from \"react\";\nimport { useState, useRef } from \"react\";\nimport {\n  FaCaretDown,\n  FaChevronCircleDown,\n  FaChevronCircleUp,\n  FaPlus,\n  FaSearch,\n} from \"react-icons/fa\";\nimport moment from \"moment\";\nimport { MultiSelect } from \"react-multi-select-component\";\nimport DatePicker from \"react-datepicker\";\nimport axios from \"axios\";\nimport { environment } from \"../../environments/environment\";\nimport \"primeicons/primeicons.css\";\nimport \"primereact/resources/themes/lara-light-indigo/theme.css\";\nimport \"primereact/resources/primereact.css\";\nimport \"primeflex/primeflex.css\";\n\nimport SalaryBandTable from \"./SalaryBandTable\";\nimport GlobalValidation from \"../ValidationComponent/GlobalValidation\";\nimport { AiFillWarning } from \"react-icons/ai\";\n\nfunction SalaryBand() {\n  const [visible, setVisible] = useState(false);\n  const [cheveronIcon, setCheveronIcon] = useState(FaChevronCircleUp);\n  const [departments, setDepartments] = useState([]);\n  const [selectedDepartments, setSelectedDepartments] = useState([]);\n  const [resLocation, setResLocation] = useState([{}]);\n  const [selectedResLocation, setSelectedResLocation] = useState([]);\n  const [month, setMonth] = useState(new Date());\n  const [roletype, setRoleType] = useState([{}]);\n  const [selectedRoleType, setSelectedRoleTypes] = useState([]);\n  const [popUp, SetPopUp] = useState(false);\n  const [tableData, setTableData] = useState([]);\n  const [validationMessage, setValidationMessage] = useState(false);\n  const [loaderTimer, setLoaderTimer] = useState(false);\n  const ref = useRef([]);\n  const abortController = useRef([]);\n\n  const initialValue = {\n    departments: \"170,211,123,82,168,207,212,18,213,49,149,208,243,999\",\n    resLocation: \"6,5,3,8,7,1,2\",\n    month: moment(new Date()).startOf(\"month\").format(\"YYYY-MM-DD\"),\n    roletype:\n      \"117,143,142,493,418,531,539,565,701,192,503,754,752,490,917,495,144,388,504,385,385,533,729,658,244,732,765,723,755,389,918,722,753,390,391,391,386,303,392,919,920,532,536,667,393,651,646,128,713,730,771,152,394,498,751,756,821,921,537,176,93,396,397,399,398,400,400,362,387,89,527,528,491,401,48,301,489,496,91,98,494,132,727,757,819,492,463,428,428,46,85,746,776,750,922,506,173,500,129,731,760,377,699,923,220,395,403,505,147,668,404,497,148,534,501,187,378,721,740,306,234,728,725,161,499,405,405,296,341,406,724,307,307,237,702,759,758,174,502,199,105,105,402,84,407,409\",\n  };\n  const [formData, setFormData] = useState(initialValue);\n  const baseUrl = environment.baseUrl;\n  const ArrowRenderer = ({ expanded }) => (\n    <>\n      {expanded ? (\n        <FaCaretDown className=\"chevronIcon\" />\n      ) : (\n        <FaCaretDown className=\"chevronIcon\" />\n      )}\n    </>\n  );\n\n  const getDepartments = async () => {\n    const resp = await axios({\n      url: baseUrl + `/CostMS/cost/getDepartments`,\n    });\n\n    let departments = resp.data;\n    departments.push({ value: 999, label: \"Non-Revenue Units\" });\n    setSelectedDepartments(departments.filter((ele) => ele.value >= 0));\n\n    let dept = [];\n    let deptId = [];\n    departments.length > 0 &&\n      departments.forEach((e) => {\n        if (e.value >= 0) {\n          let filteredDeptData = { label: e.label, value: e.value };\n          dept.push(filteredDeptData);\n          deptId.push(filteredDeptData.value);\n        }\n      });\n    setDepartments(dept);\n    setSelectedDepartments(dept);\n  };\n\n  const getResLocation = () => {\n    axios({\n      method: \"get\",\n      url: baseUrl + `/revenuemetricsms/metrics/getreslocation`,\n    }).then(function (response) {\n      let ResLocation = response.data;\n      setResLocation(response.data);\n      setSelectedResLocation(ResLocation.filter((ele) => ele.value >= 0));\n      let filteredlocationData = [];\n      ResLocation.forEach((data) => {\n        if (data.value >= 0) {\n          filteredlocationData.push(data.value);\n        }\n      });\n    });\n  };\n\n  const getRoleTypes = () => {\n    axios({\n      url: baseUrl + `/CostMS/SalaryBand/roleTypes`,\n    }).then((response) => {\n      let RoleType = response.data;\n      setRoleType(response.data);\n      setSelectedRoleTypes(RoleType.filter((ele) => ele.value >= 0));\n      let filteredroleTypes = [];\n      RoleType.forEach((data) => {\n        if (data.value >= 0) {\n          filteredroleTypes.push(data.value);\n        }\n      });\n    });\n  };\n\n  const getSearch = () => {\n    let valid = GlobalValidation(ref);\n    if (valid) {\n      setValidationMessage(true);\n      return;\n    } else {\n      setLoaderTimer(true);\n      setValidationMessage(false);\n      abortController.current = new AbortController();\n      axios({\n        method: \"post\",\n        url: baseUrl + `/CostMS/SalaryBand/getData`,\n        signal: abortController.current.signal,\n        data: {\n          country: formData.resLocation,\n          department: formData.departments,\n          roletype: formData.roletype,\n          month: formData.month,\n        },\n      }).then((response) => {\n        setLoaderTimer(false);\n        setTableData(response.data);\n      });\n    }\n  };\n\n  useEffect(() => {\n    getDepartments();\n    getResLocation();\n    getRoleTypes();\n  }, []);\n\n  useEffect(() => {\n    axios({\n      method: \"post\",\n      url: baseUrl + `/CostMS/SalaryBand/getData`,\n      signal: abortController.current.signal,\n      data: {\n        country: formData.resLocation,\n        department: formData.departments,\n        roletype: formData.roletype,\n        month: formData.month,\n      },\n    }).then((response) => {\n      setLoaderTimer(false);\n      setTableData(response.data);\n    });\n  }, []);\n\n  const generateDropdownLabel = (selectedOptions, allOptions) => {\n    const selectedValues = selectedOptions.map((option) => option.value);\n    const allValues = allOptions.map((item) => item.value);\n\n    if (selectedValues.length === allValues.length) {\n      return \"<< ALL >>\";\n    } else {\n      return selectedOptions.map((option) => option.label).join(\", \");\n    }\n  };\n  return (\n    <div className=\"col-md-12\">\n      {validationMessage ? (\n        <div className=\"statusMsg error\">\n          <AiFillWarning />\n          {\"Please Enter the Highlighted Fields\"}\n        </div>\n      ) : (\n        \"\"\n      )}\n      <div className=\"pageTitle\">\n        <div className=\"childOne\">\n          <div className=\"childTwo\">\n            <h2>Salary Band</h2>\n          </div>\n          <div className=\"childThree\"></div>\n        </div>\n      </div>\n      <div className=\"gropu mb-3 customCard\">\n        <div className=\"col-md-12 collapseHeader\">\n          <h2>Search Filters</h2>\n          <div\n            onClick={() => {\n              setVisible(!visible);\n              visible\n                ? setCheveronIcon(FaChevronCircleUp)\n                : setCheveronIcon(FaChevronCircleDown);\n            }}\n          >\n            <span>{cheveronIcon}</span>\n          </div>\n        </div>\n        <CCollapse visible={!visible}>\n          <div className=\"group-content row\">\n            <div className=\"col-md-4 mb-2\">\n              <div className=\"form-group row\">\n                <label className=\"col-5\" htmlFor=\"department\">\n                  Department<span className=\"required error-text ml-1\">*</span>\n                </label>\n                <span className=\"col-1 p-0\">:</span>\n                <div\n                  className=\"col-6 multiselect\"\n                  ref={(ele) => {\n                    ref.current[0] = ele;\n                  }}\n                >\n                  <MultiSelect\n                    ArrowRenderer={ArrowRenderer}\n                    id=\"departments\"\n                    options={departments}\n                    hasSelectAll={true}\n                    isLoading={false}\n                    shouldToggleOnHover={false}\n                    disableSearch={false}\n                    value={selectedDepartments}\n                    selected={selectedDepartments}\n                    valueRenderer={generateDropdownLabel}\n                    disabled={false}\n                    onChange={(s) => {\n                      setSelectedDepartments(s);\n                      let filteredValues = [];\n                      s.forEach((d) => {\n                        filteredValues.push(d.value);\n                      });\n                      setFormData((prevVal) => ({\n                        ...prevVal,\n                        [\"departments\"]: filteredValues.toString(),\n                      }));\n                    }}\n                  />\n                </div>\n              </div>\n            </div>\n            <div className=\" col-md-4 mb-2\">\n              <div className=\"form-group row\">\n                <label className=\"col-5\" htmlFor=\"Location\">\n                  Country<span className=\"required error-text ml-1\">*</span>\n                </label>\n                <span className=\"col-1 p-0\">:</span>\n                <div\n                  className=\"col-6 multiselect\"\n                  ref={(ele) => {\n                    ref.current[1] = ele;\n                  }}\n                >\n                  <MultiSelect\n                    ArrowRenderer={ArrowRenderer}\n                    id=\"resLocation\"\n                    options={resLocation}\n                    hasSelectAll={true}\n                    isLoading={false}\n                    shouldToggleOnHover={false}\n                    disableSearch={false}\n                    disabled={false}\n                    value={selectedResLocation}\n                    selected={selectedResLocation}\n                    valueRenderer={generateDropdownLabel}\n                    onChange={(e) => {\n                      setSelectedResLocation(e);\n                      let filteredCountry = [];\n                      e.forEach((d) => {\n                        filteredCountry.push(d.value);\n                      });\n                      setFormData((prevVal) => ({\n                        ...prevVal,\n                        [\"resLocation\"]: filteredCountry.toString(),\n                      }));\n                    }}\n                  />\n                </div>\n              </div>\n            </div>\n            <div className=\"col-md-4 mb-2\">\n              <div className=\"form-group row\">\n                <label className=\"col-5\" htmlFor=\"Role Type\">\n                  Role Type<span className=\"required error-text ml-1\">*</span>\n                </label>\n                <span className=\"col-1 p-0\">:</span>\n                <div\n                  className=\"col-6 multiselect\"\n                  ref={(ele) => {\n                    ref.current[2] = ele;\n                  }}\n                >\n                  <MultiSelect\n                    ArrowRenderer={ArrowRenderer}\n                    id=\"roletype\"\n                    options={roletype}\n                    hasSelectAll={true}\n                    isLoading={false}\n                    shouldToggleOnHover={false}\n                    disableSearch={false}\n                    disabled={false}\n                    selected={selectedRoleType}\n                    value={selectedRoleType}\n                    valueRenderer={generateDropdownLabel}\n                    onChange={(e) => {\n                      setSelectedRoleTypes(e);\n                      let filteredroles = [];\n                      e.forEach((d) => {\n                        filteredroles.push(d.value);\n                      });\n                      setFormData((prevVal) => ({\n                        ...prevVal,\n                        [\"roletype\"]: filteredroles.toString(),\n                      }));\n                    }}\n                  />\n                </div>\n              </div>\n            </div>\n            <div className=\" col-md-4 mb-2\">\n              <div className=\"form-group row\">\n                <label className=\"col-5\" htmlFor=\"month\">\n                  Month<span className=\"required error-text ml-1\">*</span>\n                </label>\n                <span className=\"col-1 p-0\">:</span>\n                <div\n                  className=\"col-6 datepicker\"\n                  ref={(ele) => {\n                    ref.current[3] = ele;\n                  }}\n                >\n                  <DatePicker\n                    id=\"month\"\n                    selected={month}\n                    onChange={(e) => {\n                      setMonth(e);\n                      setFormData((prev) => ({\n                        ...prev,\n                        [\"month\"]: moment(e).format(\"YYYY-MM-DD\"),\n                      }));\n                    }}\n                    dateFormat=\"MMM-yyyy\"\n                    showMonthYearPicker\n                    maxDate={new Date()}\n                  />\n                </div>\n              </div>\n            </div>\n\n            <div className=\"col-md-12 col-sm-12 col-xs-12 btn-container center my-1\">\n              <button\n                type=\"submit\"\n                className=\"btn btn-primary center\"\n                onClick={() => {\n                  getSearch();\n                }}\n              >\n                <FaSearch /> Search\n              </button>\n            </div>\n          </div>\n        </CCollapse>\n      </div>\n      <div className=\"col-md-12\">\n        <SalaryBandTable\n          popUp={popUp}\n          SetPopUp={SetPopUp}\n          tableData={tableData}\n          setTableData={setTableData}\n          getSearch={getSearch}\n          resLocation={resLocation}\n          setResLocation={setResLocation}\n          departments={departments}\n          setDepartments={setDepartments}\n          roletype={roletype}\n          formData={formData}\n          setLoaderTimer={setLoaderTimer}\n          loaderTimer={loaderTimer}\n          abortController={abortController}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default SalaryBand;\n","import React, { useState, useEffect } from \"react\";\nimport { FaSearch } from \"react-icons/fa\";\nimport { IoWarningOutline } from \"react-icons/io5\";\nimport { ReactSearchAutocomplete } from \"react-search-autocomplete\";\nimport axios from \"axios\";\nimport { environment } from \"../../environments/environment\";\nimport { Link } from \"react-router-dom\";\nimport { BiSearch } from \"react-icons/bi\";\nimport ScreenBreadcrumbs from \"../Common/ScreenBreadcrumbs\";\nimport GlobalHelp from \"../PrimeReactTableComponent/GlobalHelp\";\n\nfunction InnerOpen(props) {\n  const { setButtonState } = props;\n  const [empDetails, setEmpDetails] = useState([]);\n  const [autoCompleteValidation, setAutoCompleteValidation] = useState(\"\");\n  const [validationmessage, setValidationMessage] = useState(false);\n  const baseUrl = environment.baseUrl;\n  const [formEditData, setFormEditData] = useState([{}]);\n  //console.log(formEditData);\n  const loggedUserId = localStorage.getItem(\"resId\");\n  //console.log(loggedUserId);\n\n  const [routes, setRoutes] = useState([]);\n  let textContent = \"Teams\";\n  let currentScreenName = [\"Profile\", \"Teams Search History\"];\n\n  useEffect(() => {\n    getMenus();\n  }, []);\n\n  const getMenus = () => {\n    // setMenusData\n\n    axios({\n      method: \"GET\",\n      url: baseUrl + `/CommonMS/master/getMenus?loggedUserId=${loggedUserId}`,\n    }).then((resp) => {\n      let data = resp.data;\n\n      data.forEach((item) => {\n        if (item.display_name === textContent) {\n          setRoutes([item]);\n        }\n      });\n    });\n  };\n\n  const getData = () => {\n    //console.log(\"line no 106\");\n    axios({\n      method: \"get\",\n      url: baseUrl + `/ProjectMS/Issues/getAssignedData`,\n    }).then(function (response) {\n      var res = response.data;\n      setEmpDetails(res);\n      //console.log(\"assigned data\");\n      //console.log(res);\n    });\n  };\n  const [profiledata, setProfiledata] = useState([]);\n  const getprofileopen = () => {\n    axios({\n      method: \"get\",\n      url:\n        baseUrl +\n        `/ProjectMS/stakeholders/getprofileopen?user_id=${loggedUserId}`,\n    })\n      .then((res) => {\n        setProfiledata(res.data);\n      })\n      .then((error) => {\n        //console.log(\"success\", error);\n      });\n  };\n  console.log(profiledata);\n  useEffect(() => {}, [empDetails]);\n  useEffect(() => {\n    getData();\n    getprofileopen();\n  }, []);\n  //console.log(formEditData.id);\n  //-----only link direct\n  const handleProjectSelect = (object_id) => {\n    //console.log(\"inline-------------------------10\");\n    //console.log(object_id);\n    {\n      <Link\n        title=\"Search\"\n        to={`/resource/profile/:${object_id}`}\n        target=\"_blank\"\n      ></Link>;\n    }\n    axios({\n      method: \"post\",\n      url: baseUrl + `/ProjectMS/stakeholders/updateUserSearchHistorypo`,\n      data: {\n        user_id: loggedUserId,\n        object_id: object_id,\n      },\n      headers: { \"Content-Type\": \"application/json\" },\n    }).then((success) => {\n      //console.log(success);\n      //console.log(data);\n    });\n  };\n  //----select Team link direct\n  const handleTeamsSelect = () => {\n    //console.log(\"inline-------------------------10\");\n    //console.log(formEditData.id);\n    if (formEditData.id == null) {\n      setAutoCompleteValidation(\"1px solid rgb(183 1 1) !important\");\n      setValidationMessage(true);\n      // return;\n    } else {\n      setValidationMessage(false);\n      {\n        <Link\n          title=\"Search\"\n          to={`/resource/profile/:${formEditData.id}`}\n          target=\"_blank\"\n        ></Link>;\n      }\n\n      //console.log(formEditData.id);\n      axios({\n        method: \"post\",\n        url: baseUrl + `/ProjectMS/stakeholders/updateUserSearchHistorteamsel`,\n        data: {\n          user_id: loggedUserId,\n          object_id: formEditData.id,\n        },\n        headers: { \"Content-Type\": \"application/json\" },\n      }).then((success) => {\n        //console.log(success);\n        //console.log(data);\n      });\n    }\n    // //console.log(object_id)\n  };\n  const handleClear = () => {\n    setFormEditData((prevProps) => ({ ...prevProps, id: null }));\n  };\n  const HelpPDFName = \"MyDashboard.pdf\";\n  const Headername = \"My Dashboard Help\";\n  return (\n    <div>\n      <div className=\"col-md-12\">\n        <div className=\"pageTitle\">\n          <div className=\"childOne\"></div>\n          <div className=\"childTwo\">\n            <h2>Teams Search History</h2>\n          </div>\n          <div className=\"childThree\"></div>\n        </div>\n      </div>\n      <div>\n        <ScreenBreadcrumbs\n          routes={routes}\n          currentScreenName={currentScreenName}\n        />\n        <div className=\"helpBtn\">\n          <GlobalHelp pdfname={HelpPDFName} name={Headername} />\n        </div>\n\n        <div className=\"body body-bg col-xs-12 col-sm-12 col-md-12 col-lg-12 customCard \">\n          <div className=\"form-group cvu darkHeader\">\n            <div className=\"col-6 my-2 no-padding\">\n              <table\n                id=\"details\"\n                className=\"col-12 table table-bordered  openTable \" /////customerEngament\n              >\n                <thead>\n                  <tr>\n                    <th\n                      colSpan={4}\n                      className=\"tableheading\"\n                      style={{ backgroundColor: \"#eeeeee\" }}\n                    >\n                      <h6\n                        className=\"text-center m-0\"\n                        style={{ color: \"#187fde\", fontSize: \"15px\" }}\n                      >\n                        {`Recent Teams Searches`}\n                      </h6>\n                    </th>\n                  </tr>\n\n                  <tr>\n                    <th\n                      className=\"tableheading\"\n                      style={{ backgroundColor: \"#eeeeee\" }}\n                    >\n                      <h6\n                        className=\"text-center m-0 \"\n                        style={{ fontSize: \"13px\" }}\n                      >\n                        Teams\n                      </h6>\n                    </th>\n                    <th\n                      className=\"tableheading\"\n                      style={{ backgroundColor: \"#eeeeee\" }}\n                    >\n                      <h6\n                        className=\"text-center m-0\"\n                        style={{ fontSize: \"13px\" }}\n                      >\n                        Departments\n                      </h6>\n                    </th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {profiledata.map((item, index) => (\n                    <tr key={item.object_id}>\n                      <td>\n                        <Link\n                          data-toggle=\"tooltip\"\n                          title=\"Go To Resource Profile\"\n                          onClick={() => {\n                            setButtonState(\"Profile\");\n                            handleProjectSelect(item.object_id);\n                          }}\n                          to={`/resource/profile/:${item.object_id}`} // Use template literals here\n                          target=\"_blank\"\n                        >\n                          {item.Empname}\n                        </Link>\n                      </td>\n                      <td>{profiledata[index]?.name}</td>\n                    </tr>\n                  ))}\n                </tbody>\n              </table>\n            </div>\n            <div>\n              <div className=\"col-md-6\">\n                {validationmessage ? (\n                  <div\n                    className=\"statusMsg error \"\n                    style={{ display: \"block\" }}\n                  >\n                    <span>\n                      <IoWarningOutline />\n                      &nbsp;{`Please select any Teams`}\n                    </span>\n                  </div>\n                ) : (\n                  \"\"\n                )}\n              </div>\n              <div className=\"row \">\n                <div className=\"col-1 \">\n                  <h6>\n                    Teams <span style={{ color: \"red\" }}>*</span>\n                    &nbsp;&nbsp;&nbsp;&nbsp;:\n                  </h6>\n                </div>\n                <div className=\"col-4 autoComplete-container\" id=\"autoComplete\">\n                  <ReactSearchAutocomplete\n                    items={empDetails}\n                    type=\"Text\"\n                    name=\"Teams\"\n                    id=\"Teams\"\n                    className=\"AutoComplete\"\n                    onSelect={(e) => {\n                      setFormEditData(e);\n                    }}\n                    showIcon={false}\n                    onClear={handleClear}\n                    placeholder=\"Type minimum 4 characters\"\n                  />{\" \"}\n                </div>\n                <div className=\"err col-2\">\n                  {formEditData.id == undefined ? (\n                    <button\n                      title=\"Search\"\n                      className=\"btn btn-primary\"\n                      onClick={() => {\n                        setButtonState(\"Profile\");\n                        handleTeamsSelect();\n                      }}\n                    >\n                      <BiSearch /> Search\n                    </button>\n                  ) : (\n                    <Link\n                      title=\"Search\"\n                      to={`/resource/profile/:${formEditData.id}`}\n                      target=\"_blank\"\n                    >\n                      <button\n                        title=\"Search\"\n                        className=\"btn btn-primary \"\n                        onClick={() => {\n                          setButtonState(\"Profile\");\n                          handleTeamsSelect();\n                        }}\n                      >\n                        <BiSearch /> Search\n                      </button>\n                    </Link>\n                  )}\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default InnerOpen;\n","import React, { useState, useEffect, useRef } from \"react\";\nimport { MultiSelect } from \"react-multi-select-component\";\nimport { Column } from \"primereact/column\";\nimport {\n  FaChevronCircleDown,\n  FaChevronCircleUp,\n  FaSearch,\n  FaCaretDown,\n} from \"react-icons/fa\";\nimport { CCollapse } from \"@coreui/react\";\nimport CellRendererPrimeReactDataTable from \"../PrimeReactTableComponent/CellRendererPrimeReactDataTable\";\nimport { getTableData } from \"./InnerSearchTable\";\nimport axios from \"axios\";\nimport { environment } from \"../../environments/environment\";\nimport \"primeicons/primeicons.css\";\nimport \"primereact/resources/themes/lara-light-indigo/theme.css\";\nimport \"primereact/resources/primereact.css\";\nimport GlobalCancel from \"../ValidationComponent/GlobalCancel\";\nimport { IoWarningOutline } from \"react-icons/io5\";\nimport GlobalValidation from \"../ValidationComponent/GlobalValidation\";\nimport \"primeflex/primeflex.css\";\nimport Loader from \"../Loader/Loader\";\nimport GlobalHelp from \"../PrimeReactTableComponent/GlobalHelp\";\nimport ScreenBreadcrumbs from \"../Common/ScreenBreadcrumbs\";\nimport { Link } from \"react-router-dom\";\nimport { DataTable } from \"primereact/datatable\";\nimport moment from \"moment\";\n\nconst DisplayTable = (props) => {\n  const { data, loaderState, setLoaderState, setShowVisaDtl, showVisaDtl } =\n    props;\n  const [headerData, setHeaderData] = useState([]);\n  const [exportData, setExportData] = useState([]);\n  const abortController = useRef(null);\n  const baseUrl = environment.baseUrl;\n\n  useEffect(() => {\n    data[0] && setHeaderData(JSON.parse(JSON.stringify(data[0])));\n    let imp = [\"XLS\"];\n    setExportData(imp);\n  }, [data]);\n  const [visaDetails, setVisaDetails] = useState([]);\n  const [storevisaDetails, setStroreVisaDetails] = useState([]);\n  const [resorceName, setResourcename] = useState([]);\n  const handleClick = (resUserId, resName) => {\n    setVisaDetails(resUserId);\n    setResourcename(resName);\n    getVisaDetails();\n  };\n\n  const getVisaDetails = () => {\n    axios\n      .get(baseUrl + `/ProjectMS/Audit/getUserid?userId=${visaDetails}`)\n      .then((Response) => {\n        let GetData = Response.data;\n\n        for (let i = 0; i < GetData.length; i++) {\n          GetData[i][\"issuedDate\"] =\n            GetData[i][\"issuedDate\"] == null\n              ? \"\"\n              : moment(GetData[i][\"issuedDate\"]).format(\"DD-MMM-YYYY\");\n\n          GetData[i][\"validUpto\"] =\n            GetData[i][\"validUpto\"] == null\n              ? \"\"\n              : moment(GetData[i][\"validUpto\"]).format(\"DD-MMM-YYYY\");\n        }\n\n        setStroreVisaDetails(GetData);\n        setShowVisaDtl(true);\n      })\n      .catch((error) => console.log(error));\n  };\n\n  useEffect(() => {\n    getVisaDetails();\n  }, [visaDetails]);\n  const phoneAlign = (data) => {\n    return (\n      <div className=\"align left  ellipsis \">\n        {data.resVisaStat === 1 ? (\n          <Link onClick={() => handleClick(data.resUserId, data.resName)}>\n            {data.resVisaStat}\n          </Link>\n        ) : (\n          data.resVisaStat\n        )}\n      </div>\n    );\n  };\n\n  const resNameToolip = (data) => {\n    return (\n      <div\n        align=\"left\"\n        data-toggle=\"tooltip\"\n        className=\"ellipsis\"\n        title={data.resName}\n      >\n        {data.resName}\n      </div>\n    );\n  };\n  const resSupNameAlign = (data) => {\n    return (\n      <div\n        align=\"left\"\n        data-toggle=\"tooltip\"\n        className=\"ellipsis\"\n        title={data.resSupName}\n      >\n        {data.resSupName}\n      </div>\n    );\n  };\n  const resDeptToolip = (data) => {\n    return (\n      <div\n        align=\"left\"\n        data-toggle=\"tooltip\"\n        className=\"ellipsis\"\n        title={data.resDept}\n      >\n        {data.resDept}\n      </div>\n    );\n  };\n  const resLobToolip = (data) => {\n    return (\n      <div\n        align=\"left\"\n        data-toggle=\"tooltip\"\n        className=\"ellipsis\"\n        title={data.resLob}\n      >\n        {data.resLob}\n      </div>\n    );\n  };\n  const resTitleToolip = (data) => {\n    return (\n      <div\n        align=\"left\"\n        data-toggle=\"tooltip\"\n        className=\"ellipsis\"\n        title={data.resTitle}\n      >\n        {data.resTitle}\n      </div>\n    );\n  };\n  const citizenshipAlign = (data) => {\n    return (\n      <div\n        align=\"left\"\n        data-toggle=\"tooltip\"\n        className=\"ellipsis\"\n        title={data.resCitizenship}\n      >\n        {data.resCitizenship}\n      </div>\n    );\n  };\n  const resLocationToolip = (data) => {\n    return (\n      <div\n        align=\"left\"\n        data-toggle=\"tooltip\"\n        className=\"ellipsis\"\n        title={data.resLocation}\n      >\n        {data.resLocation}\n      </div>\n    );\n  };\n  const resRoleAlign = (data) => {\n    return (\n      <div\n        align=\"left\"\n        data-toggle=\"tooltip\"\n        className=\"ellipsis\"\n        title={data.resRole}\n      >\n        {data.resRole}\n      </div>\n    );\n  };\n  const resNotesAlign = (data) => {\n    return (\n      <div\n        align=\"left\"\n        data-toggle=\"tooltip\"\n        className=\"ellipsis\"\n        title={data.resNotes}\n      >\n        {data.resNotes}\n      </div>\n    );\n  };\n  const countryName = (data) => {\n    return (\n      <div\n        align=\"left\"\n        data-toggle=\"tooltip\"\n        className=\"ellipsis\"\n        title={data.countryName}\n      >\n        {data.countryName}\n      </div>\n    );\n  };\n  const visaType = (data) => {\n    return (\n      <div\n        align=\"left\"\n        data-toggle=\"tooltip\"\n        className=\"ellipsis\"\n        title={data.visaType}\n      >\n        {data.visaType}\n      </div>\n    );\n  };\n  const visaNumber = (data) => {\n    return (\n      <div\n        align=\"left\"\n        data-toggle=\"tooltip\"\n        className=\"ellipsis\"\n        title={data.visaNumber}\n      >\n        {data.visaNumber}\n      </div>\n    );\n  };\n  const issuedDate = (data) => {\n    return (\n      <div\n        align=\"left\"\n        data-toggle=\"tooltip\"\n        className=\"ellipsis\"\n        title={data.issuedDate}\n      >\n        {data.issuedDate}\n      </div>\n    );\n  };\n  const validUpto = (data) => {\n    return (\n      <div\n        align=\"left\"\n        data-toggle=\"tooltip\"\n        className=\"ellipsis\"\n        title={data.validUpto}\n      >\n        {data.validUpto}\n      </div>\n    );\n  };\n  const dynamicColumns = Object.keys(headerData)?.map((col, i) => {\n    return (\n      <Column\n        sortable\n        key={col}\n        field={col}\n        header={headerData[col]}\n        body={\n          col == \"resVisaStat\"\n            ? phoneAlign\n            : col == \"resName\"\n            ? resNameToolip\n            : col == \"resSupName\"\n            ? resSupNameAlign\n            : col == \"resDept\"\n            ? resDeptToolip\n            : col == \"resLob\"\n            ? resLobToolip\n            : col == \"resTitle\"\n            ? resTitleToolip\n            : col == \"resCitizenship\"\n            ? citizenshipAlign\n            : col == \"resLocation\"\n            ? resLocationToolip\n            : col == \"resRole\"\n            ? resRoleAlign\n            : col == \"resNotes\" && resNotesAlign\n        }\n      />\n    );\n  });\n  const handleAbort = () => {\n    abortController.current && abortController.current.abort();\n    setLoaderState(false);\n  };\n  return (\n    <div>\n      <div className=\"\">   \n        {loaderState ? (\n          <div className=\"loaderBlock\">\n            <Loader handleAbort={handleAbort} />   \n          </div>\n        ) : (\n          \"\"\n        )}\n\n        <CellRendererPrimeReactDataTable    /////customerEngament\n          rows={10}\n          data={data}\n          dynamicColumns={dynamicColumns}\n          headerData={headerData}\n          setHeaderData={setHeaderData}\n          exportData={exportData}\n        />\n      </div>\n      <div className=\"col-md-12 mt-4 darkHeader\">\n        {showVisaDtl === true ? (\n          <>\n            <h5>{resorceName} - Visa Details</h5>\n            <DataTable\n              className=\"primeReactDataTable eventsTable\" ////customerEngament \n              value={storevisaDetails}\n              showGridlines\n              paginator\n              rows={10}\n              emptyMessage=\"No Data Found\"\n              paginationPerPage={5}\n              rowsPerPageOptions={[10, 25, 50]}\n              paginationRowsPerPageOptions={[5, 15, 25, 50]}\n            >\n              <Column header=\"Country Name\" body={countryName}></Column>\n              <Column header=\"Visa Type\" body={visaType}></Column>\n              <Column header=\"Visa Number\" body={visaNumber}></Column>\n              <Column header=\"Issued Date\" body={issuedDate}></Column>\n              <Column header=\"Valid Upto\" body={validUpto}></Column>\n            </DataTable>\n          </>\n        ) : (\n          \"\"\n        )}\n      </div>\n    </div>\n  );\n};\n\nfunction InnerSearch() {\n  const loggedUserId = localStorage.getItem(\"resId\");\n  const [tableData, setTableData] = useState([]);\n  const abortController = useRef(null);\n\n  const [resourcelobcategory, setresourcelobcategory] = useState([\n    { value: \"11\", label: \"Employee\" },\n    { value: \"12\", label: \"Contractors\" },\n  ]);\n  const [selectedReslobcategory, setSelectedReslobcategory] =\n    useState(resourcelobcategory);\n  const [showVisaDtl, setShowVisaDtl] = useState(false);\n\n  const [country, setCountry] = useState([]);\n  const [selectedCountry, setSelectedCountry] = useState([]);\n  const [business, setBusiness] = useState([]);\n  const [selectedBusiness, setSelectedBusiness] = useState([]);\n  const [logged, setlogged] = useState([]);\n  const [loaderState, setLoaderState] = useState(false);\n  const [display, setDisplay] = useState(false);\n  const baseUrl = environment.baseUrl;\n  const [validationMessage, setValidationMessage] = useState(false);\n  const [cheveronIcon, setCheveronIcon] = useState(FaChevronCircleUp);\n  const [data, setData] = useState([]);\n  const [visible, setVisible] = useState(false);\n\n  const ref = useRef([]);\n  const HelpPDFName = \"ResourceSearchViewList.pdf\";\n  const Header = \"Resource Search View List Help\";\n  const initialValue = {\n    resBusinessUnit: \"170,211,123,82,168,207,212,18,213,49,149,208,243,999\",\n    resType: \"-1\",\n    country: \"6,5,3,8,4,7,1,2\",\n    resStatus: \"-1\",\n    resBillableType: \"0,1,2\",\n    resLobType: \"11,12\",\n    loggedUser: loggedUserId,\n  };\n  const [formData, setFormData] = useState(initialValue);\n\n  const [resourcebillableType, setresourcebillableType] = useState([\n    { value: \"0\", label: \"Billable\" },\n    { value: \"1\", label: \"Partial Billable\" },\n    { value: \"2\", label: \"Not Billable\" },\n  ]);\n  const [selectedResbillable, setSelectedResBillable] =\n    useState(resourcebillableType);\n\n  const [routes, setRoutes] = useState([]);\n  let textContent = \"Teams\";\n  let currentScreenName = [\"Profile\", \"Resource View List\"];\n\n  useEffect(() => {\n    getMenus();\n  }, []);\n\n  const getMenus = () => {\n    // setMenusData\n\n    axios({\n      method: \"GET\",\n      url: baseUrl + `/CommonMS/master/getMenus?loggedUserId=${loggedUserId}`,\n    }).then((resp) => {\n      let data = resp.data;\n\n      data.forEach((item) => {\n        if (item.display_name === textContent) {\n          setRoutes([item]);\n        }\n      });\n    });\n  };\n\n  useEffect(() => {\n    getTableData();\n    getloggeduser();\n    getCountries();\n    getBusinessUnit();\n  }, []);\n  const saveAsExcelFile = (buffer, fileName) => {\n    import(\"file-saver\").then((module) => {\n      if (module && module.default) {\n        let EXCEL_TYPE =\n          \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8\";\n        let EXCEL_EXTENSION = \".xlsx\";\n        const data1 = new Blob([buffer], { type: EXCEL_TYPE });\n\n        module.default.saveAs(\n          data1,\n          fileName + \"_export_\" + new Date().getTime() + EXCEL_EXTENSION\n        );\n      }\n    });\n  };\n  const exportExcel = () => {\n    import(\"xlsx\").then((xlsx) => {\n      let wantedCols = Object.keys(data[0]);\n\n      let wantedValues = [];\n\n      let dd = JSON.parse(JSON.stringify(data)).slice(1);\n\n      for (let i = 0; i < dd.length; i++) {\n        const obj = {};\n\n        Object.keys(data[i]).forEach((d) => {\n          if (wantedCols.includes(d)) {\n            obj[data[0][d]] = data[i][d];\n          }\n        });\n        wantedValues.push(obj);\n      }\n\n      const worksheet = xlsx.utils.json_to_sheet(wantedValues.slice(1));\n      const workbook = { Sheets: { data: worksheet }, SheetNames: [\"data\"] };\n      const excelBuffer = xlsx.write(workbook, {\n        bookType: \"xlsx\",\n        type: \"array\",\n      });\n\n      saveAsExcelFile(excelBuffer, \"data\");\n    });\n  };\n  const getCountries = () => {\n    axios\n      .get(baseUrl + `/CostMS/cost/getCountries`)\n      .then((Response) => {\n        let countries = [];\n        let data = Response.data;\n        data.length > 0 &&\n          data.forEach((e) => {\n            let countryObj = {\n              label: e.country_name,\n              value: e.id,\n            };\n            countries.push(countryObj);\n          });\n        setCountry(countries);\n        setSelectedCountry(countries);\n      })\n      .catch((error) => console.log(error));\n  };\n  useEffect(() => {\n    let countryList = [];\n    country.forEach((d) => {\n      countryList.push(d.value);\n    });\n    setFormData((prevVal) => ({\n      ...prevVal,\n      [\"country\"]: countryList.toString(),\n    }));\n  }, [country]);\n\n  const getloggeduser = () => {\n    axios\n      .get(baseUrl + `/ProjectMS/Audit/getloggeduser?loggedId=${loggedUserId}`)\n      .then((Response) => {\n        let data = Response.data;\n        setlogged(data);\n      })\n      .catch((error) => console.log(error));\n  };\n  const getBusinessUnit = async () => {\n    const resp = await axios({\n      url: baseUrl + `/CostMS/cost/getDepartments`,\n    });\n\n    let departments = resp.data;\n    departments.push({ value: 0, label: \"Non-Revenue Units\" });\n    setBusiness(departments);\n    setSelectedBusiness(departments.filter((ele) => ele.value != 0));\n    let filteredDeptData = [];\n    departments.forEach((data) => {\n      if (data.value != 0) {\n        filteredDeptData.push(data.value);\n      }\n    });\n  };\n  let allCountry;\n\n  const handleClick = () => {\n    GlobalCancel(ref);\n    if (\n      formData.resBillableType == \"\" ||\n      formData.resBusinessUnit == \"\" ||\n      formData.country == \"\" ||\n      formData.resLobType == \"\"\n    ) {\n      let valid = GlobalValidation(ref);\n\n      if (valid) {\n        {\n          setValidationMessage(true);\n        }\n        return;\n      }\n    } else {\n      setDisplay(true);\n      const loaderTime = setTimeout(() => {\n        setLoaderState(true);\n      }, 2000);\n      abortController.current = new AbortController();\n      setValidationMessage(false);\n      allCountry =\n        selectedCountry.length === country.length\n          ? \"6,5,3,8,4,7,1,2\"\n          : formData.country;\n      axios\n        .get(\n          baseUrl +\n            `/ProjectMS/Audit/getTeamsSearch?resBusinessUnit=${\n              formData.resBusinessUnit\n            }&resType=${formData.resType}&resCountry=${allCountry}&resStatus=${\n              formData.resStatus\n            }&resBillableType=${formData.resBillableType}&resLobType=${\n              formData.resLobType.length > 2 ? \"11,12\" : formData.resLobType\n            }&loggedUser=${logged}`\n        )\n        .then((response) => {\n          const data = response.data;\n          const Headerdata = [\n            {\n              resName: \"Resource Name\",\n              resSupName: \"Supervisor\",\n              resDept: \"Business Unit\",\n              resLob: \"LOB Category\",\n              resTitle: \"Title\",\n              resCitizenship: \"Citizenship\",\n              resLocation: \"Location\",\n              resRole: \"Role Type\",\n              resNotes: \"Notes\",\n              resVisaStat: \"Visa status\",\n            },\n          ];\n          let hData = [];\n          let bData = [];\n          data.map((element, index) => {\n            if (index < 0) {\n              hData.push(response.data[index]);\n            } else {\n              bData.push(response.data[index]);\n            }\n          });\n          setData(Headerdata.concat(bData));\n          // setTableData(data);\n          const sortedcities = data.sort(function (a, b) {\n            var nameA = a.resName.toUpperCase();\n\n            var nameB = b.resName.toUpperCase();\n\n            if (nameA < nameB) {\n              return -1; //nameA comes first\n            }\n\n            if (nameA > nameB) {\n              return 1; // nameB comes first\n            }\n\n            return 0; // names must be equal\n          }); //////////------------------------//////////\n          setTableData(Headerdata.concat(sortedcities));\n          setShowVisaDtl(false);\n        });\n      clearTimeout(loaderTime);\n      setLoaderState(false);\n      setVisible(!visible);\n      visible\n        ? setCheveronIcon(FaChevronCircleUp)\n        : setCheveronIcon(FaChevronCircleDown);\n    }\n  };\n\n  const ArrowRenderer = ({ expanded }) => (\n    <>\n      {expanded ? (\n        <FaCaretDown className=\"chevronIcon\" />\n      ) : (\n        <FaCaretDown className=\"chevronIcon\" />\n      )}\n    </>\n  );\n  const customValueRenderer = (selected, _options) => {\n    return selected.length === country.length\n      ? \"<< ALL >>\"\n      : selected.length === 0\n      ? \"<< Please Select >>\"\n      : selected.map((label) => {\n          return selected.length > 1 ? label.label + \",\" : label.label;\n        });\n  };\n  const businessValueRenderer = (selected, _options) => {\n    return selected.length === business.length\n      ? \"<< ALL >>\"\n      : selected.length === 0\n      ? \"<< Please Select >>\"\n      : selected.map((label) => {\n          return selected.length > 1 ? label.label + \",\" : label.label;\n        });\n  };\n  const resourcebillableTypeValueRenderer = (selected, _options) => {\n    return selected.length === resourcebillableType.length\n      ? \"<< ALL >>\"\n      : selected.length === 0\n      ? \"<< Please Select >>\"\n      : selected.map((label) => {\n          return selected.length > 1 ? label.label + \",\" : label.label;\n        });\n  };\n  const resourcelobcategoryValueRenderer = (selected, _options) => {\n    return selected.length == resourcelobcategory.length\n      ? \"<< ALL >>\"\n      : selected.length === 0\n      ? \"<< Please Select >>\"\n      : selected.map((label) => {\n          return selected.length > 1 ? label.label + \",\" : label.label;\n        });\n  };\n  return (\n    <div>\n      <div className=\"col-md-12\">\n        <div className=\"pageTitle\">\n          <div className=\"childOne\"></div>\n          <div className=\"childTwo\">\n            <h2>Resource View List</h2>\n          </div>\n          <div className=\"childThree\"></div>\n        </div>\n      </div>\n      <ScreenBreadcrumbs\n        routes={routes}\n        currentScreenName={currentScreenName}\n      />\n\n      <div className=\"col-md-12  mt-2\">\n        {validationMessage ? (\n          <div className=\"statusMsg error\">\n            {\" \"}\n            <span>\n              {\" \"}\n              <IoWarningOutline /> Please select highlighted field values{\" \"}\n            </span>\n          </div>\n        ) : (\n          \"\"\n        )}\n      </div>\n      <div className=\"group mb-5 customCard\">\n        <div className=\"col-md-12 collapseHeader\">\n          <h2>Search Filters</h2>\n          <div className=\"helpBtn\">\n            <GlobalHelp pdfname={HelpPDFName} name={Header} />\n          </div>\n          <div\n            onClick={() => {\n              setVisible(!visible);\n              visible\n                ? setCheveronIcon(FaChevronCircleUp)\n                : setCheveronIcon(FaChevronCircleDown);\n            }}\n          >\n            <span>{cheveronIcon}</span>\n          </div>\n        </div>\n        <CCollapse visible={!visible} setVisible=\"false\">\n          <div className=\"group-content row\">\n            <div className=\" col-md-3 mb-2\">\n              <div className=\"form-group row\">\n                <label className=\"col-5\" htmlFor=\"resType\">\n                  Resource Type&nbsp;<span className=\"error-text\">*</span>\n                </label>\n                <span className=\"col-1 p-0\">:</span>\n                <div className=\"col-6\">\n                  <select\n                    id=\"resType\"\n                    onChange={(e) => {\n                      setFormData((prevVal) => ({\n                        ...prevVal,\n                        [\"resType\"]: e.target.value,\n                      }));\n                    }}\n                  >\n                    <option value=\"-1\">All Reportees</option>\n                    <option value=\"0\">Direct Reportees</option>\n                    <option value=\"1\">InDirect Reportees</option>\n                  </select>\n                </div>\n              </div>\n            </div>\n            <div className=\" col-md-3 mb-2\">\n              <div className=\"form-group row\">\n                <label className=\"col-5\" htmlFor=\"resourcebillable\">\n                  Resource Billable\n                  <span className=\"error-text mx-2\">*</span>\n                </label>\n                <span className=\"col-1 p-0\">:</span>\n                <div\n                  className=\"col-6 multiselect\"\n                  ref={(ele) => {\n                    ref.current[0] = ele;\n                  }}\n                >\n                  <MultiSelect\n                    id=\"resBillableType\"\n                    options={resourcebillableType}\n                    ArrowRenderer={ArrowRenderer}\n                    hasSelectAll={true}\n                    valueRenderer={resourcebillableTypeValueRenderer}\n                    value={selectedResbillable}\n                    onChange={(e) => {\n                      setSelectedResBillable(e);\n                      let filteredresBillableType = [];\n                      e.forEach((d) => {\n                        filteredresBillableType.push(d.value);\n                      });\n                      setFormData((prevVal) => ({\n                        ...prevVal,\n                        [\"resBillableType\"]: filteredresBillableType.toString(),\n                      }));\n                    }}\n                  />\n                </div>\n              </div>\n            </div>\n            <div className=\" col-md-3 mb-2\">\n              <div className=\"form-group row\">\n                <label className=\"col-5\" htmlFor=\"resBusinessUnit\">\n                  Business Unit&nbsp;<span className=\"error-text\">*</span>\n                </label>\n                <span className=\"col-1 p-0\">:</span>\n                <div\n                  className=\"col-6 multiselect\"\n                  ref={(ele) => {\n                    ref.current[1] = ele;\n                  }}\n                >\n                  <MultiSelect\n                    id=\"resBusinessUnit\"\n                    ArrowRenderer={ArrowRenderer}\n                    options={business}\n                    hasSelectAll={true}\n                    // isLoading={false}\n                    // shouldToggleOnHover={false}\n                    disableSearch={false}\n                    value={selectedBusiness}\n                    valueRenderer={businessValueRenderer}\n                    disabled={false}\n                    onChange={(s) => {\n                      setSelectedBusiness(s);\n                      let filteredValues = [];\n                      s.forEach((d) => {\n                        filteredValues.push(d.value);\n                      });\n\n                      setFormData((prevVal) => ({\n                        ...prevVal,\n                        [\"resBusinessUnit\"]: filteredValues.toString(),\n                      }));\n                    }}\n                  />\n                </div>\n              </div>\n            </div>\n            <div className=\" col-md-3 mb-2\">\n              <div className=\"form-group row\">\n                <label className=\"col-5\" htmlFor=\"resStatus\">\n                  Resource Status&nbsp;<span className=\"error-text\">*</span>\n                </label>\n                <span className=\"col-1 p-0\">:</span>\n                <div className=\"col-6\">\n                  <select\n                    id=\"resStatus\"\n                    onChange={(e) => {\n                      setFormData((prevVal) => ({\n                        ...prevVal,\n                        [\"resStatus\"]: e.target.value,\n                      }));\n                    }}\n                  >\n                    <option value=\"-1\">{\"<<All>>\"}</option>\n                    <option value=\"1\">Active</option>\n                    <option value=\"0\">InActive</option>\n                  </select>\n                </div>\n              </div>\n            </div>\n            <div className=\" col-md-3 mb-2\">\n              <div className=\"form-group row\">\n                <label className=\"col-5\">\n                  Res.Location&nbsp;<span className=\"error-text\">*</span>\n                </label>\n                <span className=\"col-1 p-0\">:</span>\n                <div\n                  className=\"col-6 multiselect\"\n                  ref={(ele) => {\n                    ref.current[2] = ele;\n                  }}\n                >\n                  <MultiSelect\n                    id=\"country\"\n                    ArrowRenderer={ArrowRenderer}\n                    options={country}\n                    hasSelectAll={true}\n                    value={selectedCountry}\n                    valueRenderer={customValueRenderer}\n                    disabled={false}\n                    onChange={(e) => {\n                      setSelectedCountry(e);\n                      let filteredCountry = [];\n                      e.forEach((d) => {\n                        filteredCountry.push(d.value);\n                      });\n                      setFormData((prevVal) => ({\n                        ...prevVal,\n                        [\"country\"]: filteredCountry.toString(),\n                      }));\n                    }}\n                  />\n                </div>\n              </div>\n            </div>\n            <div className=\" col-md-3 mb-2\">\n              <div className=\"form-group row\">\n                <label className=\"col-5\" htmlFor=\"lob\">\n                  Resource LOB Category&nbsp;\n                  <span className=\"error-text\">*</span>\n                </label>\n                <span className=\"col-1 p-0\">:</span>\n                <div\n                  className=\"col-6 multiselect\"\n                  ref={(ele) => {\n                    ref.current[3] = ele;\n                  }}\n                >\n                  <MultiSelect\n                    id=\"resLobType\"\n                    options={resourcelobcategory}\n                    ArrowRenderer={ArrowRenderer}\n                    hasSelectAll={true}\n                    value={selectedReslobcategory}\n                    valueRenderer={resourcelobcategoryValueRenderer}\n                    overrideStrings={{\n                      selectAllFiltered: \"Select All\",\n                      selectSomeItems: \"<< All>>\",\n                    }}\n                    onChange={(e) => {\n                      setSelectedReslobcategory(e);\n                      let filteredReslobcategory = [];\n                      e.forEach((d) => {\n                        filteredReslobcategory.push(d.value);\n                      });\n                      setFormData((prevVal) => ({\n                        ...prevVal,\n                        [\"resLobType\"]: filteredReslobcategory.toString(),\n                      }));\n                    }}\n                  />\n                </div>\n              </div>\n            </div>\n            <div className=\"col-md-12 col-sm-12 col-xs-12  btn-container center my-0\">\n              <button\n                type=\"submit\"\n                className=\"btn btn-primary\"\n                title=\"Search\"\n                onClick={() => handleClick()}\n              >\n                <FaSearch />\n                Search{\" \"}\n              </button>\n            </div>\n          </div>\n        </CCollapse>\n      </div>\n      <div className=\"col-md-12\">\n        {/* {loaderState ? (\n          <div className=\"loaderBlock\">\n            <Loader />\n          </div>\n        ) : (\n          \"\"\n        )} */}\n        {/* <span\n          className=\"pi pi-file-excel excel\"\n          onClick={exportExcel}\n          title=\"XLS\"\n        /> */}\n        {display === true ? (\n          <DisplayTable\n            data={tableData}\n            setShowVisaDtl={setShowVisaDtl}\n            loaderState={loaderState}\n            setLoaderState={setLoaderState}\n            showVisaDtl={showVisaDtl}\n          />\n        ) : (\n          \"\"\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default InnerSearch;\n","import React, { useState, useEffect } from \"react\";\nimport InnerProfile from \"./Profile\";\nimport InnerOpen from \"./InnerOpen\";\nimport InnerSearch from \"./InnerSearch\";\nimport RProfile from \"../ResourceProfile/RProfile\";\n\nfunction Profile() {\n  let topMenus = [\"Profile\", \"Search\", \"Open\"];\n  const loggedUserId = localStorage.getItem(\"resId\");\n  const loggedResId = parseInt(loggedUserId) + 1;\n  const [resourceId, setResourceId] = useState(loggedResId);\n  let url = window.location.href;\n  let teamArr = url.split(\":\");\n  \n  // Separate state variable to track the \"Open\" tab\n  // const [openTabButtonState, setOpenTabButtonState] = useState(\"Open\");\n\n  // const [buttonState, setButtonState] = useState(() => {\n  //   // Retrieve the last selected tab from localStorage on component mount\n  //   return localStorage.getItem(\"selectedProfileTab\")?.split(\"+\")[1] === teamArr[teamArr.length - 1] ? localStorage.getItem(\"selectedProfileTab\").split(\"+\")[0] : topMenus[0] ?? topMenus[0];\n  // });\n\n  const [buttonState, setButtonState] = useState(topMenus[0]);\n\n  console.log(resourceId);\n  // Save the selected tab to localStorage whenever it changes\n  // useEffect(() => {\n  //   localStorage.setItem(\"selectedProfileTab\", buttonState + \"+\" + teamArr[teamArr.length - 1]);\n  // }, [buttonState]);\n  useEffect(() => {\n    if (url.includes(\"profile\")) {\n      setButtonState(\"Profile\");\n    }\n\n    let teamArr = url.split(\":\");\n    setResourceId(teamArr[teamArr.length - 1]);\n  }, []);\n\n  const handleTabClick = (tab) => {\n    setButtonState(tab);\n  };\n\n  return (\n    <div>\n      <div className=\"tabs\">\n        {topMenus.map((data, index) => {\n          return (\n            <button\n              className={\n                buttonState === data ? \"buttonDisplayClick\" : \"buttonDisplay\"\n              }\n              onClick={() => {\n                handleTabClick(data); // Update the selected tab when clicked\n              }}\n              key={index}\n            >\n              {data}\n            </button>\n          );\n        })}\n      </div>\n      {buttonState === \"Profile\" && (\n        <RProfile resId={resourceId} setResourceId={setResourceId} />\n      )}\n      {buttonState === \"Search\" && <InnerSearch />}\n      {buttonState === \"Open\" && (\n        <InnerOpen\n          setButtonState={setButtonState} // Pass the handler\n          // currentOpenTabButtonState={openTabButtonState} // Pass the current \"Open\" tab selection\n        />\n      )}\n    </div>\n  );\n}\n\nexport default Profile;\n","import React, { useState, useEffect } from \"react\";\nimport { DataTable } from \"primereact/datatable\";\nimport { Column } from \"primereact/column\";\nimport axios from \"axios\";\nimport { environment } from \"../../../environments/environment\";\nimport moment from \"moment\";\nimport Loader from \"../../Loader/Loader\";\nimport { useNavigate } from \"react-router-dom\";\nimport Draggable from \"react-draggable\";\nimport { CModal } from \"@coreui/react\";\nimport { CModalBody } from \"@coreui/react\";\nimport { CModalHeader } from \"@coreui/react\";\nimport { CModalTitle } from \"@coreui/react\";\nimport { CModalFooter } from \"@coreui/react\";\nimport { BsFillCircleFill } from \"react-icons/bs\";\nimport { BsFileEarmarkPdf } from \"react-icons/bs\";\nimport { TiCancel } from \"react-icons/ti\";\nimport { FaSave } from \"react-icons/fa\";\nimport { AiFillEdit } from \"react-icons/ai\";\nimport { BiCheck } from \"react-icons/bi\";\nimport { Link } from \"react-router-dom\";\nimport ProjectExpensePopOver from \"../../ProjectComponent/ProjectExpensePopOver\";\nimport { updateExpenseButtonState } from \"../../../reducers/SelectedSEReducer\";\nimport { useDispatch } from \"react-redux\";\n\nfunction ExpenseStackView(props) {\n  const [approvalData, setApprovalData] = useState([]);\n  const [resourceData, setResourceData] = useState([]);\n  const [teamData, setTeamData] = useState([]);\n  const [resourceId, setResourceId] = useState(0);\n  const [expandedRows, setExpandedRows] = useState(null);\n  const [loaderOne, setLoaderOne] = useState(false);\n  const [loader, setLoader] = useState(false);\n  const [selectedRows, setSelectedRows] = useState([]);\n  const [popUp, setPopUp] = useState(false);\n  const [popUpData, setPopUpData] = useState({});\n  const [expenseHistory, setExpenseHistory] = useState([]);\n  const [popUpLoader, setPopUpLoader] = useState(false);\n  const [selectedRowsData, setSelectedRowsData] = useState([]);\n  const [isEditClicked, setIsEditClicked] = useState(true);\n  const [editRowData, setEditRowData] = useState({});\n  const [selectedOptionTwo, setSelectedOptionTwo] = useState();\n  const [isCheckedList, setIsCheckedList] = useState([]);\n  const [headerChecked, setHeaderChecked] = useState(true);\n  const [message, setMessage] = useState(false);\n  const [count, setCount] = useState(0);\n  const [paymentStatusDropdown, setPaymentStatusDropdown] = useState([]);\n\n  const baseUrl = environment.baseUrl;\n  const loggedUserId = localStorage.getItem(\"resId\");\n  const loggedUserName = localStorage.getItem(\"resName\");\n  const setIsClassicView = props.setIsClassicView;\n  const handleAbort = props.handleAbort;\n\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const handleClose = () => {\n    setAnchorEl(false);\n  };\n  const dispatch = useDispatch();\n\n  const navigate = useNavigate();\n\n  const [paymentUsers, setPaymentUsers] = useState([]);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await axios.get(\n          baseUrl + `/ProjectMS/projectExpenses/paymentUsers`\n        );\n        const paymentUsers = response.data;\n        setPaymentUsers(paymentUsers);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    fetchData();\n  }, []);\n\n  const getResourceid = () => {\n    axios({\n      method: \"get\",\n      url: baseUrl + `/ProjectMS/defectphases/getresourceid?id=${loggedUserId}`,\n    }).then(function (response) {\n      var res = response.data;\n      setResourceId(res);\n    });\n  };\n\n  useEffect(() => {\n    getResourceid();\n  }, []);\n\n  useEffect(() => {\n    if (resourceId != 0) {\n      teamRequestsData();\n      resourceExpenseData();\n      approvalRequestsData();\n    }\n  }, [resourceId]);\n\n  const teamRequestsData = () => {\n    axios\n      .get(\n        baseUrl +\n          `/ProjectMS/projectExpenses/teamExpenses?resourceid=${resourceId}&projectid=-1`\n      )\n      .then((res) => {\n        setTeamData(res.data);\n      })\n      .catch((error) => console.log(error));\n  };\n\n  const resourceExpenseData = () => {\n    axios\n      .get(\n        baseUrl +\n          `/timeandexpensesms/expensesSearch/myRequests?resId=${resourceId}`\n      )\n      .then((res) => {\n        setResourceData(res.data);\n      })\n      .catch((error) => console.log(error));\n  };\n\n  const approvalRequestsData = () => {\n    setLoader(false);\n    axios\n      .get(\n        `${baseUrl}/timeandexpensesms/expensesSearch/expenseApprovals?resId=${resourceId}`,\n        {\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n        }\n      )\n      .then((res) => {\n        let response = res.data.map((obj) => ({ ...obj, subrows: [] }));\n        setApprovalData(response);\n        setLoader(false);\n      })\n      .catch((error) => console.log(error));\n  };\n\n  const teamDataWithSerial = teamData.map((item, index) => {\n    return { ...item, serial: index + 1 };\n  });\n\n  const reourceDataWithSerial = resourceData.map((item, index) => {\n    return { ...item, serial: index + 1 };\n  });\n\n  const datesFomat = (rowData) => {\n    if (rowData.minDt === rowData.maxDt) {\n      return (\n        <div title={`${moment(rowData.minDt).format(\"DD MMM\")}`}>{`${moment(\n          rowData.minDt\n        ).format(\"DD MMM\")}`}</div>\n      );\n    }\n    return (\n      <div\n        title={`${moment(rowData.minDt).format(\"DD MMM\")} - ${moment(\n          rowData.maxDt\n        ).format(\"DD MMM\")}`}\n      >{`${moment(rowData.minDt).format(\"DD MMM\")} - ${moment(\n        rowData.maxDt\n      ).format(\"DD MMM\")}`}</div>\n    );\n  };\n\n  const numberWithCommas = (x) => {\n    var number = String(x);\n\n    if (number.includes(\".\")) {\n      var parts = number.split(\".\");\n      var integerPart = parts[0].replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, \"$1,\");\n      var decimalPart = parts[1].padEnd(2, \"0\");\n      return integerPart + \".\" + decimalPart;\n    } else {\n      return number.replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, \"$1,\") + \".00\";\n    }\n  };\n\n  const amountFormat = (rowData) => {\n    let container = document.createElement(\"div\");\n    container.innerHTML = rowData.clientCurrencyCode;\n    return container.innerHTML;\n  };\n\n  const allowExpansion = (rowData) => {\n    return true;\n  };\n\n  const onRowExpand = (e) => {\n    let cid = e.data.projectCode;\n\n    setLoaderOne(false);\n    axios\n      .get(\n        baseUrl +\n          `/customersms/Customers/getProjectCode?cid=` +\n          encodeURIComponent(cid)\n      )\n      .then((response) => {\n        axios\n          .get(\n            baseUrl +\n              `/ProjectMS/projectExpenses/stackExpenses?stackId=${e.data.stackId}&userId=${loggedUserId}&raisedBy=${e.data.raised_by}&projectId=${response.data.id}&statusId=${e.data.status_id}`\n          )\n          .then((res) => {\n            approvalData.find((u) => u.stackId === e.data.stackId).subrows =\n              res.data;\n            setLoaderOne(false);\n          })\n          .catch((error) => console.log(error));\n      })\n      .catch((error) => console.log(error));\n  };\n\n  const handleSelection = (e) => {\n    setSelectedRows(e.value);\n  };\n\n  const isRowSelectable = (event) => (event.data.isEdit ? true : false);\n\n  const rowClassName = (data) => {\n    data.isEdit ? \"\" : \"not-allowed\";\n  };\n\n  const expenseDetails = (expenseId) => {\n    axios\n      .get(\n        baseUrl +\n          `/ProjectMS/projectExpenses/expenseHistory?expenseId=${expenseId}`\n      )\n      .then((res) => {\n        setExpenseHistory(res.data);\n        setPopUpLoader(false);\n      })\n      .catch((error) => console.log(error));\n  };\n\n  const viewDetails = (rowData) => {\n    return (\n      <a\n        className=\"linkSty\"\n        onClick={() => {\n          setPopUpLoader(true);\n          expenseDetails(rowData.expense_id);\n          setPopUp(true);\n          setPopUpData(rowData);\n        }}\n      >\n        View\n      </a>\n    );\n  };\n\n  const approvalIcon = (rowData) => {\n    if (rowData.includes(\"Submitted\")) {\n      return (\n        <span>\n          <BsFillCircleFill style={{ color: \"#ccc\" }} />\n        </span>\n      );\n    } else if (\n      rowData.includes(\"PM Approved\") ||\n      rowData.includes(\"Pending\") ||\n      rowData.includes(\"IT Approved\") ||\n      rowData.includes(\"HR Approved\")\n    ) {\n      return (\n        <span>\n          <BsFillCircleFill style={{ color: \"#CDE6FE\" }} />\n        </span>\n      );\n    } else if (rowData.includes(\"PM Rejected\")) {\n      return (\n        <span>\n          <BsFillCircleFill style={{ color: \"#e54c53\" }} />\n        </span>\n      );\n    } else if (rowData.includes(\"Drafted\")) {\n      return (\n        <span>\n          <BsFillCircleFill style={{ color: \"#EDD4A2\" }} />\n        </span>\n      );\n    } else if (rowData.includes(\"Paid\")) {\n      return (\n        <span>\n          <BsFillCircleFill style={{ color: \"#D9FBB3\" }} />\n        </span>\n      );\n    } else if (rowData.includes(\"Approved To Pay\")) {\n      return (\n        <span>\n          <BsFillCircleFill style={{ color: \"#0080ff\" }} />\n        </span>\n      );\n    } else if (\n      rowData.includes(\"FM Rejected\") ||\n      rowData.includes(\"IT Rejected\") ||\n      rowData.includes(\"HR Rejected\")\n    ) {\n      return (\n        <span>\n          <BsFillCircleFill style={{ color: \"#e54c53\" }} />\n        </span>\n      );\n    } else {\n      return <span></span>;\n    }\n  };\n  const [popoverdata, setPopoverData] = useState(\"\");\n\n  const approvalField = (rowData) => {\n    return selectedRows.map((d) => d.expense_id).includes(rowData.expense_id) &&\n      !paymentUsers.includes(parseInt(loggedUserId)) ? (\n      <div>\n        <select onChange={(e) => onchange(e, rowData)} id=\"dropDown\">\n          {rowData.drop_down.map((item) => {\n            const key = Object.keys(item)[0];\n            const label = item[key];\n            return <option value={key}>{label}</option>;\n          })}\n        </select>\n      </div>\n    ) : (\n      <div\n        onMouseOver={(e) => {\n          setAnchorEl(e?.currentTarget);\n          setPopoverData(\n            rowData.approvalFlow.split(\",\").join(\" >> \").slice(0, -4)\n          );\n        }}\n        onMouseLeave={handleClose}\n        className=\"ellipsis\"\n      >\n        {approvalIcon(rowData.Approval)} {rowData.Approval}\n      </div>\n    );\n  };\n  console.log(paymentUsers.includes(parseInt(loggedUserId)));\n  const paymentsField = (rowData) => {\n    return selectedRows.map((d) => d.expense_id).includes(rowData.expense_id) &&\n      paymentUsers.includes(parseInt(loggedUserId)) ? (\n      <div>\n        <select onChange={(e) => onchange(e, rowData)} id=\"dropDown\">\n          {rowData.drop_down.map((item) => {\n            const key = Object.keys(item)[0];\n            const label = item[key];\n            return <option value={key}>{label}</option>;\n          })}\n        </select>\n      </div>\n    ) : typeof rowData.Payment === \"string\" &&\n      rowData.Payment.trim().length > 0 &&\n      /[a-zA-Z]/.test(rowData.Payment) ? (\n      <span title={rowData.Payment} className=\"ellipsis\">\n        {approvalIcon(rowData.Payment)} {rowData.Payment}\n      </span>\n    ) : (\n      \"\"\n    );\n  };\n\n  const handleSelectionChange = (newSelection) => {\n    setSelectedRows(newSelection);\n  };\n\n  const Checkbox = (rowData, index) => {\n    return (\n      <>\n        <div>\n          <input\n            className=\"form-check-input\"\n            type=\"checkbox\"\n            id={rowData.id}\n            style={{ height: \"20px\", width: \"20px\", marginLeft: \"5px\" }}\n            checked={selectedRows.some(\n              (item) => item.expense_id === rowData.expense_id\n            )}\n            onChange={(e) => {\n              const newCheckedList = [...isCheckedList];\n              newCheckedList[index] = e.target.checked;\n              setIsCheckedList(newCheckedList);\n\n              rowData.Payment = Object.keys(rowData.drop_down[0])[0];\n              const newSelection = [...selectedRows];\n              if (e.target.checked) {\n                newSelection.push(rowData);\n              } else {\n                const selectionIndex = newSelection.findIndex(\n                  (selectedRowData) =>\n                    selectedRowData.expense_id === rowData.expense_id\n                );\n                if (selectionIndex !== -1) {\n                  newSelection.splice(selectionIndex, 1);\n                }\n              }\n              handleSelectionChange(newSelection);\n            }}\n            disabled={isRowDisabled(rowData)}\n          />\n        </div>\n      </>\n    );\n  };\n  //var list  = [];\n  var [list, setlist] = useState([]);\n  const Checkboxheader = (rowData, index, subRowsData) => {\n    const handleCheckboxChange = (e) => {\n      const isChecked = e.target.checked;\n      setHeaderChecked(isChecked);\n\n      let id = e.target.id;\n\n      let dcc = null;\n\n      if (isChecked) {\n        let isEditData = subRowsData.filter((item) => item.isEdit);\n\n        let ll = list;\n\n        if (isEditData.length != 0) {\n          for (let i = 0; i < isEditData.length; i++) {\n            isEditData[i].Payment = Object.keys(isEditData[i].drop_down[0])[0];\n            ll.push(isEditData[i]);\n            setlist(ll);\n          }\n        }\n\n        let finalLL = ll.map((d) => \"\" + d.id);\n\n        if (count > 0) {\n          if (id.includes(\",\")) {\n            let spltArr = id.split(\",\");\n\n            for (let i = 0; i < spltArr.length; i++) {\n              let ddc = document.getElementById(spltArr[i]);\n              ddc.checked = finalLL.includes(\"\" + spltArr[i]);\n            }\n          } else {\n            dcc = document.getElementById(id);\n            dcc.checked = finalLL.includes(\"\" + id);\n          }\n        }\n\n        setSelectedRows(() => list);\n      } else {\n        const updatedList = selectedRows.filter(\n          (item) => !subRowsData.includes(item)\n        );\n        setlist(updatedList);\n        setSelectedRows(() => updatedList);\n      }\n      setCount((prev) => prev + 1);\n\n      // Checkbox(rowData, index);\n    };\n\n    return (\n      <>\n        <div className=\"form-check pl-4\">\n          <input\n            className=\"form-check-input\"\n            type=\"checkbox\"\n            id={subRowsData\n              .filter((d) => d.isEdit)\n              .map((d) => d.id)\n              .toString()}\n            style={{ height: \"20px\", width: \"20px\" }}\n            checked={\n              selectedRowsData\n                .filter((u) => u.id === subRowsData[0]?.id)\n                .filter((i) => i.isEdit == true).length ===\n                subRowsData.filter((it) => it.isEdit == true).length &&\n              subRowsData.filter((it) => it.isEdit == true).length !== 0\n            }\n            onChange={handleCheckboxChange}\n            disabled={subRowsData.every(isRowDisabled)}\n          />\n        </div>\n      </>\n    );\n  };\n  const commentsField = (rowData) => {\n    return selectedRows\n      .map((d) => d.expense_id)\n      .includes(rowData.expense_id) ? (\n      <textarea\n        id=\"comment\"\n        style={{ resize: \"none\" }}\n        defaultValue={rowData.comments}\n        onChange={(e) => onchange(e, rowData)}\n      />\n    ) : (\n      <div title={rowData.comments} className=\"ellipsis\">\n        {rowData.comments}\n      </div>\n    );\n  };\n\n  const paymentStatus = (rowData) => {\n    return editRowData.stackId === rowData.stackId &&\n      paymentUsers.includes(parseInt(loggedUserId)) ? (\n      <div>\n        <select onChange={(e) => setSelectedOptionTwo(e.target.value)}>\n          {paymentStatusDropdown?.map((item) => {\n            const key = Object.keys(item)[0];\n            const label = item[key];\n            return (\n              <option key={key} value={key}>\n                {label}\n              </option>\n            );\n          })}\n        </select>\n      </div>\n    ) : (\n      rowData.payment\n    );\n  };\n\n  const approvalStatus = (rowData) => {\n    return editRowData.stackId === rowData.stackId &&\n      !paymentUsers.includes(parseInt(loggedUserId)) ? (\n      <div>\n        <select onChange={(e) => setSelectedOptionTwo(e.target.value)}>\n          {paymentStatusDropdown?.map((item) => {\n            const key = Object.keys(item)[0];\n            const label = item[key];\n            return (\n              <option key={key} value={key}>\n                {label}\n              </option>\n            );\n          })}\n        </select>\n      </div>\n    ) : (\n      <div title={rowData.approval}>{rowData.approval}</div>\n    );\n  };\n\n  function ExpensePopup(props) {\n    const { popUp, setPopUp, data, totalData } = props;\n\n    const downloadFile = async (document_id, svn_revision, file_name) => {\n      const link = document.createElement(\"a\");\n      link.href =\n        baseUrl +\n        `/CommonMS/document/downloadFile?documentId=${document_id}&svnRevision=${svn_revision}`;\n      link.click();\n    };\n\n    return (\n      <div>\n        {popUpLoader ? (\n          <Loader\n            handleAbort={() => {\n              handleAbort;\n              setPopUpLoader(false);\n            }}\n          />\n        ) : (\n          <CModal\n            visible={popUp}\n            backdrop=\"static\"\n            size=\"lg\"\n            onClose={() => setPopUp(false)}\n          >\n            <CModalHeader style={{ cursor: \"all-scroll\" }}>\n              <CModalTitle>\n                <span className=\"ft16\">Expense Details</span>\n              </CModalTitle>\n            </CModalHeader>\n            <CModalBody>\n              <div className=\"container\">\n                <div className=\"form-group content\">\n                  <div className=\"col-12 row\">\n                    <div className=\"col-6 row\">\n                      <div className=\"col-6\">\n                        <strong>Project</strong>\n                      </div>\n                      <div className=\"col-1\">:</div>\n                      <div className=\"col-5\">\n                        {totalData\n                          .filter((d) => d.stackId === data.id)\n                          .map((d) => d.projectName)}\n                      </div>\n                    </div>\n                    <div className=\"col-6 row\">\n                      <div className=\"col-6\">\n                        <strong>Resource</strong>\n                      </div>\n                      <div className=\"col-1\">:</div>\n                      <div className=\"col-5\">{data.fullName}</div>\n                    </div>\n                    <div className=\"col-6 row\">\n                      <div className=\"col-6\">\n                        <strong>Expense Category</strong>\n                      </div>\n                      <div className=\"col-1\">:</div>\n                      <div className=\"col-5\">{data.Expense_Type}</div>\n                    </div>\n                    <div className=\"col-6 row\">\n                      <div className=\"col-6\">\n                        <strong>Description</strong>\n                      </div>\n                      <div className=\"col-1\">:</div>\n                      <div className=\"col-5\">{data.description}</div>\n                    </div>\n                    <div className=\"col-6 row\">\n                      <div className=\"col-6\">\n                        <strong>Incurred Amount</strong>\n                      </div>\n                      <div className=\"col-1\">:</div>\n                      <div className=\"col-5\">\n                        {amountFormat(data) +\n                          \" \" +\n                          numberWithCommas(data.Incurred)}\n                      </div>\n                    </div>\n                    <div className=\"col-6 row\">\n                      <div className=\"col-6\">\n                        <strong>Disbursed Amount</strong>\n                      </div>\n                      <div className=\"col-1\">:</div>\n                      <div className=\"col-5\">\n                        {amountFormat(data) +\n                          \" \" +\n                          numberWithCommas(data.disbursed_amount)}\n                      </div>\n                    </div>\n                    <div className=\"col-6 row\">\n                      <div className=\"col-6\">\n                        <strong>Paid By</strong>\n                      </div>\n                      <div className=\"col-1\">:</div>\n                      <div className=\"col-5\">{data.Payee}</div>\n                    </div>\n                    <div className=\"col-6 row\">\n                      <div className=\"col-6\">\n                        <strong>Status</strong>\n                      </div>\n                      <div className=\"col-1\">:</div>\n                      <div className=\"col-5\">\n                        {data.Payment == null || data.Payment == \"\"\n                          ? data.Approval\n                          : data.Payment}\n                      </div>\n                    </div>\n                    <div className=\"col-6 row\">\n                      <div className=\"col-6\">\n                        <strong>Receipt(s)</strong>\n                      </div>\n                      <div className=\"col-1\">:</div>\n                      <div className=\"col-5 ellipsis\">\n                        <a\n                          className=\"linkSty\"\n                          onClick={(e) =>\n                            downloadFile(\n                              data.document_id,\n                              data.svn_revision,\n                              data.file_name\n                            )\n                          }\n                          title={data.file_name}\n                        >\n                          {data.file_name}\n                        </a>\n                      </div>\n                    </div>\n                    <div className=\"col-6 row\">\n                      <div className=\"col-6\">\n                        <strong>Approval Workflow</strong>\n                      </div>\n                      <div className=\"col-1\">:</div>\n                      <div className=\"col-5\">\n                        {data.approvalFlow.split(\",\").join(\" >> \").slice(0, -4)}\n                      </div>\n                    </div>\n                    <div className=\"col-6 row\">\n                      <div className=\"col-6\">\n                        <strong>Expense History</strong>\n                      </div>\n                      <div className=\"col-1\">:</div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div\n                style={{\n                  backgroundColor: \"#eee\",\n                  border: \"1px solid #ddd\",\n                  minHeight: \"40px\",\n                  maxHeight: \"100px\",\n                  padding: \"5px 7px\",\n                  overflowY: \"auto\",\n                }}\n                className=\"row h-50\"\n              >\n                {expenseHistory\n                  .filter((d) => d.state != \"Drafted\")\n                  .map((d) => (\n                    <div>\n                      <strong>\n                        {d.state} by {d.firstName} {d.lastName} on{\" \"}\n                        {moment(d.dateCreated).format(\"DD-MMM-YYYY\")}\n                      </strong>\n                      <br />\n                      <div className=\"col-12 row\">\n                        <div className=\"col-6 row\">\n                          <div className=\"col-6\">\n                            <span>Disbursed Amount</span>\n                          </div>\n                          <div className=\"col-1\">:</div>\n                          <div className=\"col-5\">\n                            {amountFormat(data) +\n                              \" \" +\n                              numberWithCommas(d.disbursedAmount)}\n                          </div>\n                        </div>\n                        <div className=\"col-6 row\">\n                          <div className=\"col-6\">\n                            <span>Comment</span>\n                          </div>\n                          <div className=\"col-1\">:</div>\n                          <div className=\"col-5\">\n                            {d.comments == \"\" || d.comments == null\n                              ? \"NA\"\n                              : d.comments}\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  ))}\n              </div>\n            </CModalBody>\n            <CModalFooter>\n              <button\n                className=\"btn btn-outline-secondary mx-auto\"\n                onClick={() => setPopUp(false)}\n              >\n                Close\n              </button>\n            </CModalFooter>\n          </CModal>\n        )}\n      </div>\n    );\n  }\n\n  const isBillable = (rowData) => {\n    return selectedRows\n      .map((d) => d.expense_id)\n      .includes(rowData.expense_id) ? (\n      <input\n        type=\"checkbox\"\n        id=\"billable\"\n        defaultChecked={rowData.is_billable}\n        onChange={(e) => onchange(e, rowData)}\n      />\n    ) : rowData.is_billable == false ? (\n      \"No\"\n    ) : (\n      \"Yes\"\n    );\n  };\n\n  const disbursedAmountField = (rowData) => {\n    return selectedRows\n      .map((d) => d.expense_id)\n      .includes(rowData.expense_id) ? (\n      <input\n        type=\"text\"\n        id=\"disbursed\"\n        defaultValue={rowData.disbursed_amount}\n        onChange={(e) => onchange(e, rowData)}\n        onKeyDown={(e) => {\n          const key = e.key;\n          const isNumber = /^[0-9]$/.test(key);\n          const isDecimal = key === \".\";\n\n          if (!isNumber && !isDecimal && key !== \"Backspace\") {\n            e.preventDefault();\n          }\n        }}\n      />\n    ) : (\n      <div\n        title={\n          amountFormat(rowData) +\n          \" \" +\n          numberWithCommas(rowData.disbursed_amount)\n        }\n      >\n        {amountFormat(rowData) +\n          \" \" +\n          numberWithCommas(rowData.disbursed_amount)}\n      </div>\n    );\n  };\n\n  const clientAmountField = (rowData) => {\n    return selectedRows\n      .map((d) => d.expense_id)\n      .includes(rowData.expense_id) ? (\n      <input\n        type=\"text\"\n        id=\"client\"\n        defaultValue={rowData.client_amount}\n        onChange={(e) => onchange(e, rowData)}\n        onKeyDown={(e) => {\n          const key = e.key;\n          const isNumber = /^[0-9]$/.test(key);\n          const isDecimal = key === \".\";\n\n          if (!isNumber && !isDecimal && key !== \"Backspace\") {\n            e.preventDefault();\n          }\n        }}\n      />\n    ) : (\n      <div\n        title={\n          amountFormat(rowData) + \" \" + numberWithCommas(rowData.client_amount)\n        }\n      >\n        {amountFormat(rowData) + \" \" + numberWithCommas(rowData.client_amount)}\n      </div>\n    );\n  };\n\n  useEffect(() => {\n    setSelectedRowsData((prev) => selectedRows);\n  }, [selectedRows]);\n\n  const onchange = (e, rowData) => {\n    const index = selectedRowsData.findIndex(\n      (selectedRowData) => selectedRowData.expense_id === rowData.expense_id\n    );\n\n    const updatedSelectedRowsData = [...selectedRowsData];\n    updatedSelectedRowsData[index] = {\n      ...updatedSelectedRowsData[index],\n      disbursed_amount:\n        e.target.id === \"disbursed\"\n          ? e.target.value\n          : updatedSelectedRowsData[index].disbursed_amount,\n      client_amount:\n        e.target.id === \"client\"\n          ? e.target.value\n          : updatedSelectedRowsData[index].client_amount,\n      comments:\n        e.target.id === \"comment\"\n          ? e.target.value\n          : updatedSelectedRowsData[index].comments,\n      is_billable:\n        e.target.id === \"billable\"\n          ? e.target.value\n          : updatedSelectedRowsData[index].is_billable,\n      Payment:\n        e.target.id === \"dropDown\"\n          ? e.target.value\n          : updatedSelectedRowsData[index].Payment,\n    };\n    setSelectedRowsData(updatedSelectedRowsData);\n  };\n\n  const downloadExpenseStack = (stackId) => {\n    const link = document.createElement(\"a\");\n    link.href =\n      baseUrl + `/ProjectMS/projectExpenses/downloadStack?stackId=${stackId}`;\n    //link.target = '_blank';\n    link.download = \"Expense.pdf\";\n    link.click();\n  };\n\n  const actionField = (rowData) => {\n    console.log(\n      \"first\",\n      approvalData.find((item) => item.stackId == rowData.stackId)?.isEdit\n    );\n    return (\n      <>\n        <BsFileEarmarkPdf\n          size={\"1.8em\"}\n          style={{\n            color: \"#428bca\",\n            marginRight: \"4px\",\n            marginLeft: \"-15px\",\n            cursor: \"pointer\",\n          }}\n          onClick={() => downloadExpenseStack(rowData.stackId)}\n        />\n        {(paymentUsers.includes(parseInt(loggedUserId)) &&\n          (rowData.approval === \"PM Approved\" ||\n            rowData.approval === \"Approved to pay\")) ||\n        (!paymentUsers.includes(parseInt(loggedUserId)) &&\n          !rowData.subrows.length > 0 &&\n          rowData.approval === \"Submitted\") ? (\n          <AiFillEdit\n            size={\"1.5em\"}\n            style={{ cursor: \"pointer\", marginRight: \"-15px\" }}\n            color=\"orange\"\n            onClick={(e) => {\n              getPaymentStatusDropdown(rowData.status_id);\n              setIsEditClicked(false);\n              setEditRowData(rowData);\n              // paymentStatus(rowData);\n              setSelectedOptionTwo(Object.keys(rowData.dropDown[0])[0]);\n            }}\n          />\n        ) : (\n          \"\"\n        )}\n      </>\n    );\n  };\n\n  const getPaymentStatusDropdown = (statusId) => {\n    axios\n      .get(\n        baseUrl +\n          `/timeandexpensesms/expensesSearch/paymentStatus?statusId=${statusId}`\n      )\n      .then((res) => {\n        setPaymentStatusDropdown(res.data);\n        setSelectedOptionTwo(Object.keys(res.data[0])[0]);\n      })\n      .catch((error) => console.log(error));\n  };\n\n  const sendSelectedRowsData = (datas) => {\n    let data = selectedRowsData.filter((u) => u.id === datas.stackId);\n    const formattedData = data.map((rowData) => ({\n      expenseId: rowData.expense_id,\n      isBillable: rowData.is_billable == false ? 0 : 1,\n      disbursedAmount: parseFloat(rowData.disbursed_amount),\n      clientAmmount: parseFloat(rowData.client_amount),\n      payment: parseInt(rowData.Payment),\n      comments: rowData.comments,\n      resId: resourceId,\n      stackId: rowData.id,\n    }));\n\n    axios\n      .post(\n        baseUrl + `/ProjectMS/projectExpenses/saveExpenses`,\n        formattedData,\n        {\n          headers: { \"Content-Type\": \"application/json\" },\n        }\n      )\n      .then((res) => {\n        setMessage(true);\n        setTimeout(() => {\n          setMessage(false);\n        }, 3000);\n        teamRequestsData();\n        resourceExpenseData();\n        approvalRequestsData();\n        setSelectedRows([]);\n      })\n      .catch((error) => console.log(error));\n  };\n\n  const saveRowData = () => {\n    const formattedData = {\n      stackId: editRowData.stackId,\n      newStatusId: parseInt(selectedOptionTwo),\n    };\n\n    axios\n      .post(\n        baseUrl + `/ProjectMS/projectExpenses/saveStackExpenses`,\n        formattedData,\n        {\n          headers: { \"Content-Type\": \"application/json\" },\n        }\n      )\n      .then((res) => {\n        setMessage(true);\n        setTimeout(() => {\n          setMessage(false);\n        }, 3000);\n        setEditRowData({});\n        teamRequestsData();\n        resourceExpenseData();\n        approvalRequestsData();\n      })\n      .catch((error) => console.log(error));\n  };\n\n  const cancelRowEditOuter = () => {\n    setIsEditClicked(true);\n    setEditRowData({});\n  };\n\n  const cancelRowEdit = (datas) => {\n    const updatedList = selectedRows.filter(\n      (item) => item.id !== datas.stackId\n    );\n    setSelectedRows(updatedList);\n    setlist(updatedList);\n  };\n\n  const isRowDisabled = (rowData) => (rowData.isEdit ? false : true);\n\n  const rowExpansionTemplate = (approvalData) => {\n    return (\n      <>\n        {loaderOne ? <Loader handleAbort={() => setLoaderOne(false)} /> : \"\"}\n        <DataTable\n          value={approvalData.subrows}\n          className=\"primeReactDataTable\"\n          stripedRows\n        >\n          <Column\n            style={{ textAlign: \"center\" }}\n            header={(rowData, index) =>\n              Checkboxheader(rowData, index, approvalData?.subrows)\n            }\n            body={(rowData, index) => Checkbox(rowData, index)}\n          />\n          <Column\n            sortable\n            field=\"\"\n            header=\"Name\"\n            body={(rowData) => (\n              <div\n                title={\n                  approvalData.stackId === rowData.id\n                    ? `${approvalData.projectName}`\n                    : \"\"\n                }\n                className=\"ellipsis\"\n              >\n                {approvalData.stackId === rowData.id\n                  ? `${approvalData.projectName}`\n                  : \"\"}\n              </div>\n            )}\n          />\n          <Column\n            sortable\n            field=\"expense_date\"\n            header=\"Date\"\n            body={(rowData) => (\n              <div\n                title={moment(rowData.expense_date).format(\"DD-MMM-yyyy\")}\n                className=\"ellipsis\"\n              >\n                {moment(rowData.expense_date).format(\"DD-MMM-yyyy\")}\n              </div>\n            )}\n          />\n          <Column\n            sortable\n            field=\"Payee\"\n            header=\"Payee\"\n            body={(rowData) => (\n              <div title={rowData.Payee} className=\"ellipsis\">\n                {rowData.Payee}\n              </div>\n            )}\n          />\n          <Column\n            sortable\n            field=\"Expense_Type\"\n            header=\"Expense Type\"\n            body={(rowData) => (\n              <div title={rowData.Expense_Type} className=\"ellipsis\">\n                {rowData.Expense_Type}\n              </div>\n            )}\n          />\n          <Column\n            sortable\n            field=\"is_billable\"\n            style={{ textAlign: \"center\" }}\n            header=\"Billable\"\n            body={isBillable}\n          />\n          <Column\n            sortable\n            field=\"Incurred\"\n            style={{ textAlign: \"right\" }}\n            header=\"Incurred\"\n            body={(rowData) => (\n              <div\n                title={\n                  amountFormat(rowData) +\n                  \" \" +\n                  numberWithCommas(rowData.Incurred)\n                }\n              >\n                {amountFormat(rowData) +\n                  \" \" +\n                  numberWithCommas(rowData.Incurred)}\n              </div>\n            )}\n          />\n          <Column\n            sortable\n            field=\"disbursed_amount\"\n            header=\"Disbursed\"\n            style={{ textAlign: \"right\" }}\n            body={disbursedAmountField}\n          />\n          <Column\n            sortable\n            field=\"client_amount\"\n            header=\"Client\"\n            style={{ textAlign: \"right\" }}\n            body={clientAmountField}\n          />\n          <Column\n            sortable\n            field=\"Approval\"\n            header=\"Approval\"\n            body={approvalField}\n          />\n          <Column\n            sortable\n            field=\"Payment\"\n            header=\"Payment\"\n            body={paymentsField}\n          />\n          <Column\n            sortable\n            field=\"comments\"\n            header=\"Comments\"\n            body={commentsField}\n          />\n          <Column field=\"\" header=\"Details\" body={viewDetails} />\n        </DataTable>\n        <div style={{ display: \"flex\", border: \"1px solid #ECF0F1\" }}>\n          <button\n            className=\"btn btn-primary ms-1 p-1\"\n            data-toggle=\"tooltip\"\n            title=\"Save row\"\n            disabled={\n              selectedRowsData.filter((u) => u.id === approvalData.stackId)\n                .length === 0\n            }\n            onClick={() => sendSelectedRowsData(approvalData)}\n          >\n            <FaSave />\n          </button>\n          <button\n            className=\"btn btn-primary ms-1 p-1 cancel\"\n            data-toggle=\"tooltip\"\n            title=\"Cancel row editing\"\n            disabled={\n              selectedRowsData.filter((u) => u.id === approvalData.stackId)\n                .length === 0\n            }\n            onClick={() => cancelRowEdit(approvalData)}\n          >\n            <TiCancel size={\"1em\"} />\n          </button>\n        </div>\n      </>\n    );\n  };\n\n  return (\n    <>\n      <div style={{ overflowX: \"hidden\" }}>\n        {message ? (\n          <div className=\"statusMsg success\">\n            <span>\n              <BiCheck />\n              Expense(s) Saved successfully\n            </span>\n          </div>\n        ) : (\n          \"\"\n        )}\n        <div className=\"col-md-12\">\n          <div className=\"pageTitle\">\n            <div className=\"childOne\"></div>\n            <div className=\"childTwo\">\n              <h2>Expense Report of {loggedUserName}</h2>\n            </div>\n            <div className=\"childThree\"></div>\n          </div>\n          <div className=\"float-end my-2\">\n            <button\n              type=\"button\"\n              className=\"btn btn-primary\"\n              title=\"View\"\n              onClick={() => {\n                navigate(`/search/userExpenseHistory`, {\n                  state: { btnState: \"Search\" },\n                });\n                dispatch(updateExpenseButtonState(\"Search\"));\n                setIsClassicView(true);\n              }}\n            >\n              Classic View\n            </button>\n          </div>\n        </div>\n        {loader ? (\n          <Loader handleAbort={() => setLoader(false)} />\n        ) : (\n          <>\n            <div className=\"w-100 mt-5 ml-4\">\n              <div\n                className=\"col-md-12 childTwo\"\n                style={{\n                  border: \"1px solid #ECF0F1\",\n                  marginTop: \"50px\",\n                  backgroundColor: \"#e9ecef\",\n                }}\n              >\n                <h6\n                  style={{\n                    color: \"#02277f\",\n                    marginLeft: \"10px\",\n                    marginTop: \"2px\",\n                  }}\n                >\n                  My Approval Requests\n                </h6>\n              </div>\n              <DataTable\n                value={approvalData}\n                className=\"primeReactDataTable darkHeader\"\n                showGridlines\n                stripedRows\n                expandedRows={expandedRows}\n                onRowToggle={(e) => setExpandedRows(e.data)}\n                onRowExpand={onRowExpand}\n                rowExpansionTemplate={rowExpansionTemplate}\n                paginator\n                rows={10}\n                paginationPerPage={5}\n                paginationRowsPerPageOptions={[5, 15, 25, 50]}\n                paginationComponentOptions={{\n                  rowsPerPageText: \"Records per page:\",\n                  rangeSeparatorText: \"out of\",\n                }}\n                currentPageReportTemplate=\"View {first} - {last} of {totalRecords} \"\n                paginatorTemplate=\"RowsPerPageDropdown FirstPageLink PrevPageLink CurrentPageReport NextPageLink LastPageLink\"\n                rowsPerPageOptions={[10, 25, 50]}\n              >\n                <Column expander={allowExpansion} style={{ width: \"5rem\" }} />\n                <Column\n                  sortable\n                  field=\"stackName\"\n                  header=\"Stack\"\n                  body={(rowData) => (\n                    <div title={rowData.stackName}>\n                      <span\n                        className=\"linkSty\"\n                        onClick={() => {\n                          navigate(`/expense/Create/${rowData.stackId}`);\n                          window.location.reload();\n                          dispatch(updateExpenseButtonState(\"Create\"));\n                        }}\n                      >\n                        {rowData.stackName}\n                      </span>\n                    </div>\n                  )}\n                />\n                <Column\n                  sortable\n                  field=\"resource\"\n                  header=\"Resource\"\n                  body={(rowData) => (\n                    <div title={rowData.resource} className=\"ellipsis\">\n                      {rowData.resource}\n                    </div>\n                  )}\n                />\n                <Column\n                  sortable\n                  field=\"approval\"\n                  header=\"Approval Status\"\n                  body={approvalStatus}\n                />\n                <Column\n                  sortable\n                  field=\"payment\"\n                  header=\"Payment Status\"\n                  body={paymentStatus}\n                />\n                <Column\n                  sortable\n                  field=\"projectCode\"\n                  header=\"Code\"\n                  body={(rowData) => (\n                    <div title={rowData.projectCode} className=\"ellipsis\">\n                      {rowData.projectCode}\n                    </div>\n                  )}\n                />\n                <Column\n                  sortable\n                  field=\"projectName\"\n                  header=\"Name\"\n                  body={(rowData) => (\n                    <div title={rowData.projectName} className=\"ellipsis\">\n                      {rowData.projectName}\n                    </div>\n                  )}\n                />\n                <Column\n                  sortable\n                  field=\"amt\"\n                  header=\"Incurred\"\n                  style={{ textAlign: \"right\" }}\n                  body={(rowData) => (\n                    <div\n                      title={\n                        amountFormat(rowData) +\n                        \" \" +\n                        numberWithCommas(rowData.amt)\n                      }\n                    >\n                      {amountFormat(rowData) +\n                        \" \" +\n                        numberWithCommas(rowData.amt)}\n                    </div>\n                  )}\n                />\n                <Column\n                  sortable\n                  field=\"disbursedAmt\"\n                  header=\"Disbursed\"\n                  style={{ textAlign: \"right\" }}\n                  body={(rowData) => (\n                    <div\n                      title={\n                        amountFormat(rowData) +\n                        \" \" +\n                        numberWithCommas(rowData.disbursedAmt)\n                      }\n                    >\n                      {amountFormat(rowData) +\n                        \" \" +\n                        numberWithCommas(rowData.disbursedAmt)}\n                    </div>\n                  )}\n                />\n                <Column\n                  sortable\n                  field=\"clientAmt\"\n                  header=\"Client\"\n                  style={{ textAlign: \"right\" }}\n                  body={(rowData) => (\n                    <div\n                      title={\n                        amountFormat(rowData) +\n                        \" \" +\n                        numberWithCommas(rowData.clientAmt)\n                      }\n                    >\n                      {amountFormat(rowData) +\n                        \" \" +\n                        numberWithCommas(rowData.clientAmt)}\n                    </div>\n                  )}\n                />\n                <Column\n                  sortable\n                  field=\"createdOn\"\n                  header=\"Created On\"\n                  body={(rowData) => (\n                    <div\n                      title={moment(rowData.createdOn).format(\"DD-MMM-yyyy\")}\n                    >\n                      {moment(rowData.createdOn).format(\"DD-MMM-yyyy\")}\n                    </div>\n                  )}\n                />\n                <Column\n                  field=\"\"\n                  header=\"Actions\"\n                  style={{ textAlign: \"center\", width: \"6rem\" }}\n                  body={actionField}\n                />\n              </DataTable>\n              <div style={{ display: \"flex\", border: \"1px solid #ECF0F1\" }}>\n                <button\n                  className=\"btn btn-primary ms-1 p-1\"\n                  data-toggle=\"tooltip\"\n                  title=\"Save row\"\n                  onClick={saveRowData}\n                  disabled={isEditClicked}\n                >\n                  <FaSave />\n                </button>\n                <button\n                  className=\"btn btn-primary ms-1 p-1\"\n                  data-toggle=\"tooltip\"\n                  title=\"Cancel row editing\"\n                  onClick={cancelRowEditOuter}\n                  disabled={isEditClicked}\n                >\n                  <TiCancel size={\"1em\"} />\n                </button>\n              </div>\n            </div>\n\n            <div className=\"w-100 mt-5 ml-4\">\n              <div\n                className=\"col-md-12 childTwo\"\n                style={{\n                  border: \"1px solid #ECF0F1\",\n                  marginTop: \"50px\",\n                  backgroundColor: \"#e9ecef\",\n                }}\n              >\n                <h6\n                  style={{\n                    color: \"#02277f\",\n                    marginLeft: \"10px\",\n                    marginTop: \"2px\",\n                  }}\n                >\n                  My Requests\n                </h6>\n              </div>\n              <DataTable\n                value={reourceDataWithSerial}\n                className=\"primeReactDataTable darkHeader\"\n                showGridlines\n                stripedRows\n                paginator\n                rows={10}\n                paginationPerPage={5}\n                paginationRowsPerPageOptions={[5, 15, 25, 50]}\n                paginationComponentOptions={{\n                  rowsPerPageText: \"Records per page:\",\n                  rangeSeparatorText: \"out of\",\n                }}\n                currentPageReportTemplate=\"View {first} - {last} of {totalRecords} \"\n                paginatorTemplate=\"RowsPerPageDropdown FirstPageLink PrevPageLink CurrentPageReport NextPageLink LastPageLink\"\n                rowsPerPageOptions={[10, 25, 50]}\n              >\n                <Column\n                  field=\"serial\"\n                  style={{ width: \"50px\", textAlign: \"center\" }}\n                  header=\"S.No\"\n                />\n                <Column\n                  sortable\n                  field=\"stackName\"\n                  header=\"Expense #\"\n                  body={(rowData) => (\n                    <div title={rowData.stackName}>\n                      <span\n                        className=\"linkSty\"\n                        onClick={() => {\n                          navigate(`/expense/Create/${rowData.stackId}`);\n                          window.location.reload();\n                          dispatch(updateExpenseButtonState(\"Create\"));\n                        }}\n                      >\n                        {rowData.stackName}\n                      </span>\n                    </div>\n                  )}\n                />\n                <Column\n                  sortable\n                  field=\"projectName\"\n                  header=\"Project\"\n                  body={(rowData) => (\n                    <div title={rowData.projectName} className=\"ellipsis\">\n                      {rowData.projectName}\n                    </div>\n                  )}\n                />\n                <Column\n                  sortable\n                  field=\"maxDt\"\n                  header=\"Dates\"\n                  body={datesFomat}\n                />\n                <Column\n                  sortable\n                  field=\"dateCreated\"\n                  header=\"Saved On\"\n                  body={(rowData) => (\n                    <div\n                      title={moment(rowData.dateCreated).format(\"DD-MMM-yyyy\")}\n                    >\n                      {moment(rowData.dateCreated).format(\"DD-MMM-yyyy\")}\n                    </div>\n                  )}\n                />\n                <Column\n                  sortable\n                  field=\"amount\"\n                  style={{ textAlign: \"right\" }}\n                  header=\"Due Amount\"\n                  body={(rowData) => (\n                    <div\n                      title={\n                        amountFormat(rowData) +\n                        \" \" +\n                        numberWithCommas(rowData.amount)\n                      }\n                    >\n                      {amountFormat(rowData) +\n                        \" \" +\n                        numberWithCommas(rowData.amount)}\n                    </div>\n                  )}\n                />\n                <Column\n                  sortable\n                  field=\"stackStatus\"\n                  header=\"Status\"\n                  body={(rowData) => (\n                    <div title={rowData.stackStatus}>{rowData.stackStatus}</div>\n                  )}\n                />\n              </DataTable>\n            </div>\n            <div className=\"w-100 mt-5 ml-4\">\n              <div\n                className=\"col-md-12 childTwo\"\n                style={{\n                  border: \"1px solid #ECF0F1\",\n                  marginTop: \"50px\",\n                  backgroundColor: \"#e9ecef\",\n                }}\n              >\n                <h6\n                  style={{\n                    color: \"#02277f\",\n                    marginLeft: \"10px\",\n                    marginTop: \"2px\",\n                  }}\n                >\n                  Team Requests\n                </h6>\n              </div>\n              <DataTable\n                value={teamDataWithSerial}\n                className=\"primeReactDataTable darkHeader\"\n                showGridlines\n                stripedRows\n                paginator\n                rows={10}\n                paginationPerPage={5}\n                paginationRowsPerPageOptions={[5, 15, 25, 50]}\n                paginationComponentOptions={{\n                  rowsPerPageText: \"Records per page:\",\n                  rangeSeparatorText: \"out of\",\n                }}\n                currentPageReportTemplate=\"View {first} - {last} of {totalRecords} \"\n                paginatorTemplate=\"RowsPerPageDropdown FirstPageLink PrevPageLink CurrentPageReport NextPageLink LastPageLink\"\n                rowsPerPageOptions={[10, 25, 50]}\n              >\n                <Column\n                  field=\"serial\"\n                  style={{ width: \"50px\", textAlign: \"center\" }}\n                  header=\"S.No\"\n                />\n                <Column\n                  sortable\n                  field=\"stackName\"\n                  header=\"Expense #\"\n                  body={(rowData) => (\n                    <div title={rowData.stackName}>\n                      <span\n                        className=\"linkSty\"\n                        onClick={() => {\n                          navigate(`/expense/Create/${rowData.stackId}`);\n                          window.location.reload();\n                          dispatch(updateExpenseButtonState(\"Create\"));\n                        }}\n                      >\n                        {rowData.stackName}\n                      </span>\n                    </div>\n                  )}\n                />\n                <Column\n                  sortable\n                  field=\"projectName\"\n                  header=\"Project\"\n                  body={(rowData) => (\n                    <div title={rowData.projectName} className=\"ellipsis\">\n                      {rowData.projectName}\n                    </div>\n                  )}\n                />\n                <Column\n                  sortable\n                  field=\"resource\"\n                  header=\"Created By\"\n                  body={(rowData) => (\n                    <div title={rowData.resource} className=\"ellipsis\">\n                      {rowData.resource}\n                    </div>\n                  )}\n                />\n                <Column\n                  sortable\n                  field=\"maxDt\"\n                  header=\"Dates\"\n                  body={datesFomat}\n                />\n                <Column\n                  sortable\n                  field=\"createdOn\"\n                  header=\"Saved On\"\n                  body={(rowData) => (\n                    <div\n                      title={moment(rowData.createdOn).format(\"DD-MMM-yyyy\")}\n                    >\n                      {moment(rowData.createdOn).format(\"DD-MMM-yyyy\")}\n                    </div>\n                  )}\n                />\n                <Column\n                  sortable\n                  field=\"amount\"\n                  header=\"Due Amount\"\n                  style={{ textAlign: \"right\" }}\n                  body={(rowData) => (\n                    <div\n                      title={\n                        amountFormat(rowData) +\n                        \" \" +\n                        numberWithCommas(rowData.amount)\n                      }\n                    >\n                      {amountFormat(rowData) +\n                        \" \" +\n                        numberWithCommas(rowData.amount)}\n                    </div>\n                  )}\n                />\n                <Column\n                  sortable\n                  field=\"approval\"\n                  header=\"Status\"\n                  body={(rowData) => (\n                    <div title={rowData.approval}>{rowData.approval}</div>\n                  )}\n                />\n              </DataTable>\n            </div>\n          </>\n        )}\n        {popUp ? (\n          <ExpensePopup\n            setPopUp={setPopUp}\n            data={popUpData}\n            popUp={popUp}\n            totalData={approvalData}\n          />\n        ) : (\n          \"\"\n        )}\n        {anchorEl && (\n          <ProjectExpensePopOver\n            handleClose={handleClose}\n            anchorEl={anchorEl}\n            rowData={popoverdata}\n          />\n        )}\n      </div>\n    </>\n  );\n}\n\nexport default ExpenseStackView;\n","const GlobalCancel = (props) => {\n  let data = props.current;\n\n  let finalRes = [];\n\n  const addingClass = (ele, value) => {\n    console.log(\"in line 7---\");\n    console.log(ele);\n    console.log(value);\n    value = \"\";\n    if (ele.classList?.contains(\"error-block\")) {\n      ele.classList.remove(\"error-block\");\n      finalRes.push(true);\n    }\n  };\n\n  for (let i = 0; i < data.length; i++) {\n    console.log(data[i]);\n    let parentClassList = data[i].classList;\n\n    let ele = null;\n\n    if (parentClassList?.contains(\"text\")) {\n      ele = data[i];\n      addingClass(ele, ele.value);\n      //   return;\n    } else if (parentClassList.contains(\"datepicker\")) {\n      let addingBorder = data[i].children[0].children[0];\n      let value = addingBorder.children[0].value;\n      //   ele = data[i];\n      addingClass(addingBorder, value);\n      //   return;\n    } else if (parentClassList.contains(\"multiselect\")) {\n      let addingBorder = data[i].children[0].children[0].children[0];\n      let classListValue = addingBorder.children[0].children[0].classList;\n      let value = classListValue.contains(\"gray\") ? \"\" : \"present\";\n      addingClass(addingBorder, value);\n    } else if (parentClassList.contains(\"textfield\")) {\n      let addingBorder = data[i].children[0];\n      console.log(addingBorder);\n\n      addingClass(addingBorder, addingBorder.value);\n    } else if (parentClassList.contains(\"reactsearchautocomplete\")) {\n      let addingBorder = data[i].children[0].children[0];\n      let value = addingBorder.children[0].children[0].value;\n      console.log(addingBorder);\n      console.log(value);\n\n      addingClass(addingBorder, value);\n    } else if (parentClassList.contains(\"autocomplete\")) {\n      let addingBorder = data[i].children[0].children[0].children[0];\n      let value = addingBorder.children[0].children[0].value;\n      addingClass(addingBorder, value);\n    } else if (parentClassList.contains(\"reactautocomplete\")) {\n      let addingBorder =\n        data[i].children[0].children[0].children[0].children[0];\n      console.log(addingBorder);\n      let value = addingBorder.children[0].children[0].value;\n\n      console.log(value);\n\n      addingClass(addingBorder, value);\n    }\n\n    // let value = ele.value;\n\n    // if (ele.type == undefined) {\n    //   value = ele.input.value;\n    //   console.log(value);\n    // }\n    // console.log(ele.classList);\n  }\n\n  return finalRes.includes(true);\n};\n\nexport default GlobalCancel;\n","const GlobalValidation = (props) => {\n  let data = props.current;\n\n  let finalRes = [];\n\n  const addingClass = (ele, value) => {\n    if (value == \"\") {\n      ele?.classList?.add(\"error-block\");\n      finalRes?.push(true);\n    } else {\n      ele?.classList?.remove(\"error-block\");\n      finalRes?.push(false);\n    }\n  };\n\n  for (let i = 0; i < data.length; i++) {\n    let parentClassList = data[i]?.classList;\n\n    let ele = null;\n\n    if (parentClassList?.contains(\"text\")) {\n      ele = data[i];\n      addingClass(ele, ele.value);\n      //   return;\n    } else if (parentClassList?.contains(\"datepicker\")) {\n      let addingBorder = data[i].children[0].children[0];\n      let value = addingBorder.children[0]?.value;\n      //   ele = data[i];\n      addingClass(addingBorder, value);\n      //   return;\n    } else if (parentClassList?.contains(\"multiselect\")) {\n      let addingBorder = data[i].children[0].children[0].children[0];\n      let classListValue = addingBorder.children[0].children[0].classList;\n      let value = classListValue.contains(\"gray\") ? \"\" : \"present\";\n      addingClass(addingBorder, value);\n    } else if (parentClassList?.contains(\"textfield\")) {\n      let addingBorder = data[i]?.children[0];\n      addingClass(addingBorder, addingBorder?.value);\n    } else if (parentClassList?.contains(\"autocomplete\")) {\n      let addingBorder = data[i].children[0].children[0].children[0];\n      let value = addingBorder.children[0].children[0].value;\n      addingClass(addingBorder, value);\n    } else if (parentClassList?.contains(\"reactautocomplete\")) {\n      let addingBorder =\n        data[i].children[0].children[0].children[0].children[0];\n\n      let value = addingBorder.children[0].children[0].value;\n\n      addingClass(addingBorder, value);\n    } else if (parentClassList?.contains(\"reactsearchautocomplete\")) {\n      let addingBorder = data[i].children[0].children[0];\n\n      let value = addingBorder.children[0].children[0].value;\n\n      addingClass(addingBorder, value);\n    } else if (parentClassList?.contains(\"muidatepicker\")) {\n      let addingBorder = data[i];\n\n      let value = data[i].children[0].children[0].children[0].children[0].value;\n      addingClass(addingBorder, value);\n    } else if (parentClassList?.contains(\"primemultiselect\")) {\n      let addingBorder = data[i];\n\n      let value = data[i].children[0].classList;\n\n      if (value.contains(\"p-inputwrapper-filled\") == false) {\n        value.add(\"error-block\");\n        finalRes.push(true);\n      } else {\n        value.remove(\"error-block\");\n        finalRes.push(false);\n      }\n\n      // addingClass(addingBorder, value);\n    }\n\n    // let value = ele.value;\n\n    // if (ele.type == undefined) {\n    //   value = ele.input.value;\n    //   console.log(value);\n    // }\n    // console.log(ele.classList);\n  }\n\n  return finalRes.includes(true);\n};\n\nexport default GlobalValidation;\n","import * as React from \"react\";\nimport Popover from \"@mui/material/Popover\";\nimport Typography from \"@mui/material/Typography\";\nimport Button from \"@mui/material/Button\";\nimport {\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogContentText,\n  DialogActions,\n} from \"@mui/material\";\n// import { keys } from 'core-js/core/array';\n// import \"./Resources.scss\";\nimport { Margin } from \"@mui/icons-material\";\nimport Resources from \"./Resources\";\nimport \"../VendorComponent/Resources.scss\";\nimport { BiX } from \"react-icons/bi\";\nimport { Link } from \"react-router-dom\";\nimport \"./Resources.scss\";\nimport \"../FullfimentComponent/ResourceOverviewTable.scss\";\n\nexport default function Popup(props) {\n  const {\n    anchorEl,\n    handleClose,\n    name,\n    LinkId,\n    setAllocationTable,\n    setAnchorEl,\n    setGraphKey1,\n  } = props;\n  // console.log(\"in line 12\")\n  // console.log(resource_name)\n  const open = Boolean(anchorEl);\n  const id = open ? \"my-popver\" : undefined;\n  // const {resource_name}=props;\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n  return (\n    <div>\n      <Popover\n        id={id}\n        open={Boolean(anchorEl)}\n        anchorEl={anchorEl}\n        onClose={handleClose}\n        anchorOrigin={{\n          vertical: \"top\",\n          horizontal: \"left\",\n        }}\n        transformOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"left\",\n        }}\n      >\n        <div className=\"\">\n          <DialogTitle style={{ padding: \"2px 8px\", backgroundColor: \"#ddd\" }}>\n            <span style={{ fontSize: \"14px\" }}>{name}</span>\n            <button\n              style={{\n                float: \"right\",\n                marginRight: \"-8px\",\n                backgroundColor: \"rgb(221, 221, 221)\",\n              }}\n              className=\"button1\"\n              onClick={handleClose}\n            >\n              <BiX />\n            </button>\n          </DialogTitle>\n          <DialogContent style={{ height: \"48px\" }}>\n            <ul style={{ height: \"10px\" }}>\n              <Link to={`/resource/profile/:${LinkId}`} target=\"_blank\">\n                View Resource's Profile\n              </Link>\n              <br />\n              <Link\n                onClick={() => {\n                  setAllocationTable(true);\n                  setAnchorEl(false);\n                  setGraphKey1((prevKey) => prevKey + 1);\n                }}\n              >\n                View Resource's Allocations\n              </Link>\n            </ul>\n          </DialogContent>\n        </div>\n      </Popover>\n    </div>\n  );\n}\n","import React, { useRef } from \"react\";\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { environment } from \"../../environments/environment\";\nimport Popup from \"./Popup\";\nimport \"./Resources.scss\";\nimport axios from \"axios\";\nimport CellRendererPrimeReactDataTable from \"../PrimeReactTableComponent/CellRendererPrimeReactDataTable\";\nimport { Column } from \"primereact/column\";\nimport { Popover } from \"@coreui/coreui\";\nimport moment from \"moment\";\nimport ForecastProjectPopUp from \"../RevenueMetrices/ForecastProjectPopUp\";\nimport { AiOutlineLeftSquare, AiOutlineRightSquare } from \"react-icons/ai\";\nimport { BiX } from \"react-icons/bi\";\nimport SearchDefaultTable from \"./SearchDefaultTable\";\nimport VendorSearchTable from \"./VendorSearchTable\";\nimport \"./VendorManagement.scss\";\n\nfunction Resources(props) {\n  const [popup, setPopup] = useState(false);\n  const [anchorEl, setAnchorEl] = useState(null);\n  const [name, setName] = useState(\"\");\n  const [searchapidata, setSearchApiData] = useState([]);\n  const [data, setData] = useState([]);\n  const { bodyDataa, flag, vendorId, tableTitle, colorFilterR } = props;\n  const [exportData, setExportData] = useState([]);\n  console.log(bodyDataa);\n  const [headerData, setHeaderData] = useState([]);\n  const [bodyData, setBodyData] = useState([]);\n  const [colorsState, setColorsState] = useState([]);\n  const [resourceTable, setResourceTable] = useState([]);\n  const [LinkId, setLinkId] = useState();\n  const [allocationtable, setAllocationTable] = useState(false);\n  const graphRef1 = useRef(null);\n  const [graphKey1, setGraphKey1] = useState(0);\n  const [colorFilter, setColorFilter] = useState([]);\n  const [title, setTitle] = useState(\"\");\n  // console.log(colorsState);\n\n  useEffect(() => {\n    if (graphKey1 && graphRef1.current) {\n      graphRef1.current.scrollIntoView({ behavior: \"instant\" });\n    }\n  }, [graphKey1]);\n  var d = new Date();\n  console.log(colorsState);\n\n  var year = d.getFullYear();\n  var month1 = d.getMonth();\n  var day = d.getDate();\n  var c = new Date(year, month1, day - 7);\n\n  console.log(bodyDataa);\n  var date = moment(d).format(\"yyyy-MM-DD\");\n  var prev = moment(c).format(\"yyyy-MM-DD\");\n\n  const initialData = {\n    buIds: \"-1\",\n    country: \"-1\",\n    fromDate: prev,\n    toDate: date,\n    lkKey: \"total_hc\",\n    skillId: \"0\",\n    isExport: \"0\",\n    vendorId: vendorId,\n    page: \"\",\n    custId: \"0\",\n    projId: \"0\",\n    buId: \"0\",\n  };\n  const abortController = useRef(null);\n\n  const fetchdata = () => {\n    axios({\n      method: \"post\",\n      url: baseUrl + \"/VendorMS/management/getVendManagementResourceDtls\",\n      data: initialData,\n    })\n      .then(function (response) {\n        var response = response.data;\n        console.log(response.data, \"line mo--------------------107\");\n\n        let Headerdata = [\n          {\n            employee_number: \"Emp ID\",\n            resource_name: \"Name\",\n            start_date: \"DOJ\",\n            department: \"Dept\",\n            supervisor: \"Supervisor\",\n            skills: \"Skill\",\n            projects: \"Projects\",\n            bill_allocs: \"Billable Allocs\",\n            bill_rate: \"Bill Rate($)\",\n            pay_rate: \"Pay Rate($)\",\n            gm_perc: \"GM%\",\n            alloc_end_date: \"Alloc End Date\",\n            contract_end_date: \"Contract End Date\",\n            ad_contract_end_date: \"AD Expiry Date\",\n            vendor_name: \"Vendor Name\",\n            contract_type: \"Contract Type\",\n            skill_type: \"Skill Type\",\n          },\n        ];\n        let hData = [];\n        let bData = [];\n        for (let index = 0; index < response.length; index++) {\n          if (index == 0) {\n            hData.push(response[index]);\n          } else {\n            bData.push(response[index]);\n          }\n        }\n\n        if (flag == 1) {\n          setData(Headerdata.concat(bodyDataa));\n          setBodyData(bodyDataa);\n          setSearchApiData(bodyDataa);\n        } else {\n          setData(Headerdata.concat(bData));\n          setBodyData(bData);\n          setSearchApiData(bData);\n        }\n        // setLoader(false);\n        setTitle(\"Total HC Details:\");\n        let firstColor,\n          secondColor,\n          thirdColor = \"\",\n          count = 0;\n        console.log(bData, \"bdata\");\n        firstColor = bData[0].alloc_contract_date_icon?.split(\"~\")[0];\n        secondColor = \"\";\n        console.log(firstColor, \"firstColor\");\n        for (let index = 0; index < bData.length; index++) {\n          let colorFind = bData[index].alloc_contract_date_icon?.split(\"~\")[0];\n          if (firstColor != colorFind && count == 0) {\n            secondColor = colorFind;\n            count++;\n          } else if (firstColor != colorFind && secondColor != colorFind) {\n            thirdColor = colorFind;\n            break;\n          }\n        }\n        console.log(firstColor, secondColor, thirdColor, \"firstColor\");\n        const colorFilter = [firstColor, secondColor, thirdColor];\n        setColorFilter(colorFilter);\n      })\n      .catch(function (response) {\n        console.log(response);\n      });\n  };\n  console.log(data, \"line mo--------------------107\");\n  console.log(colorFilter, \"colors22>>\");\n  let firstColor = flag == 1 ? colorFilterR[0] : colorFilter[0];\n  let secondColor = flag == 1 ? colorFilterR[1] : colorFilter[1];\n  let thirdColor = flag == 1 ? colorFilterR[2] : colorFilter[2];\n\n  console.log(firstColor, secondColor, thirdColor, \"1st 2nd third color\");\n\n  let table1 = (\n    <div className=\"legend red\">\n      <div className=\"legendCircle \"></div>\n      <div className=\"legendTxt\">Alloc End Date &gt; Contract End Dt </div>\n    </div>\n  );\n\n  console.log(table1, \"table1\");\n  let table2 = (\n    <div className=\"legend green\">\n      <div className=\"legendCircle\"></div>\n      <div className=\"legendTxt\"> Alloc End Date = Contract End Dt </div>\n    </div>\n  );\n\n  const table3 = (\n    <div className=\"legend amber\">\n      <div className=\"legendCircle\"></div>\n      <div className=\"legendTxt\"> Alloc End Date &lt; Contract End Dt </div>\n    </div>\n  );\n\n  console.log(firstColor, \"red\");\n  const tableNew = (\n    <div className=\"row\">\n      <div className=\"legendContainer\">\n        {firstColor == \"#da4832\"\n          ? table1\n          : firstColor == \"#3dbb49\"\n          ? table2\n          : firstColor == \"#FF0\"\n          ? table3\n          : \"\"}\n        {secondColor == \"#da4832\"\n          ? table1\n          : secondColor == \"#3dbb49\"\n          ? table2\n          : secondColor == \"#FF0\"\n          ? table3\n          : \"\"}\n        {thirdColor === \"#da4832\"\n          ? table1\n          : thirdColor == \"#3dbb49\"\n          ? table2\n          : thirdColor == \"#FF0\"\n          ? table3\n          : \"\"}\n      </div>\n    </div>\n  );\n\n  console.log(tableNew, \"tablesahid>>\");\n\n  let Headerdata = [\n    {\n      employee_number: \"Emp ID\",\n      resource_name: \"Name\",\n      start_date: \"DOJ\",\n      department: \"Dept\",\n      supervisor: \"Supervisor\",\n      skills: \"Skill\",\n      projects: \"Projects\",\n      bill_allocs: \"Billable Allocs\",\n      bill_rate: \"Bill Rate\",\n      pay_rate: \"Pay Rate\",\n      gm_perc: \"GM%\",\n      alloc_end_date: \"Alloc End Date\",\n      contract_end_date: \"Contract End Date\",\n      ad_contract_end_date: \"AD Expiry Date\",\n      vendor_name: \"Vendor Name\",\n      contract_type: \"Contract Type\",\n      skill_type: \"Skill Type\",\n    },\n  ];\n\n  const colorsData = {\n    \"#FF0\": \"Alloc End Date < Contract End Dt\",\n    \"#da4832\": \"Alloc End Date = Contract End Dt\",\n    \"#3dbb49\": \"Alloc End Date > Contract End Dt\",\n  };\n\n  const handleClose = () => {\n    setAnchorEl(false);\n  };\n\n  const baseUrl = environment.baseUrl;\n\n  useEffect(() => {\n    // data[0] && setHeaderData(JSON.parse(JSON.stringify(data[0])));\n    let imp = [\"XLS\"];\n    setExportData(imp);\n  }, []);\n  // useEffect(() => {\n  //   let imp = [\"XLS\"];\n  //   setExportData(imp);\n  // }, []);\n  const Table =\n    tableTitle == \"total_hc\"\n      ? \"Total HC Details\"\n      : tableTitle == \"contract\"\n      ? \"Contract Details\"\n      : tableTitle == \"contract_hire\"\n      ? \"Contract 2 Hire Details\"\n      : tableTitle == \"freelancer\"\n      ? \"Freelancer Details\"\n      : tableTitle == \"fixed_bid\"\n      ? \"Fixed Bid Details\"\n      : tableTitle == \"offered\"\n      ? \"Offered Details\"\n      : tableTitle == \"on_exit_path\"\n      ? \"On Exit Path Details\"\n      : tableTitle == \"conv_in_prog\"\n      ? \"Conv in Prog Details\"\n      : \"awaiting Conv - DP/CL Details\";\n  console.log(\"Table Header: \", Table);\n\n  useEffect(() => {\n    fetchdata();\n  }, [vendorId]);\n  useEffect(() => {\n    if (flag === 1) {\n      setData(Headerdata.concat(bodyDataa));\n    }\n  }, [bodyDataa, Table]);\n\n  const filteringColors = () => {\n    let colors = null;\n    if (bodyDataa?.length > 0) {\n      colors = bodyDataa.map(\n        (element) => element.alloc_contract_date_icon?.split(\"~\")[0]\n      );\n      console.log(colors);\n\n      let finalColors = [...new Set(colors)];\n      setColorsState(finalColors);\n    }\n  };\n\n  useEffect(() => {\n    filteringColors();\n  }, [bodyDataa]);\n\n  const handleClick = (event, name) => {\n    setName(name);\n    // setAnchorEl(true);\n    // setAnchorEl(e.currentTarget);\n  };\n\n  //color sorting\n\n  const tooltipDept = (data) => {\n    return (\n      <div className=\"ellipsis\" data-toggle=\"tooltip\" title={data.department}>\n        {data.department}\n      </div>\n    );\n  };\n  const tooltipSupervisor = (data) => {\n    return (\n      <div className=\"ellipsis\" data-toggle=\"tooltip\" title={data.supervisor}>\n        {data.supervisor}\n      </div>\n    );\n  };\n  const tooltipProject = (data) => {\n    return (\n      <div className=\"ellipsis\" data-toggle=\"tooltip\" title={data.projects}>\n        {data.projects}\n      </div>\n    );\n  };\n  const tooltipSkills = (data) => {\n    return (\n      <div className=\"ellipsis\" data-toggle=\"tooltip\" title={data.skills}>\n        {data.skills}\n      </div>\n    );\n  };\n  const allocDtAlign = (data) => {\n    return (\n      <div\n        className=\"align center ellipsis\"\n        data-toggle=\"tooltip\"\n        title={data.alloc_end_date}\n      >\n        {data.alloc_end_date}\n      </div>\n    );\n  };\n  const contractDtAlign = (data) => {\n    return (\n      <div\n        className=\"align center ellipsis\"\n        data-toggle=\"tooltip\"\n        title={data.alloc_contract_date_icon}\n      >\n        {data.alloc_contract_date_icon}\n      </div>\n    );\n  };\n\n  const empNumber = (data) => {\n    return (\n      <div\n        className=\" ellipsis\"\n        data-toggle=\"tooltip\"\n        title={data.employee_number}\n      >\n        {data.employee_number}\n      </div>\n    );\n  };\n\n  const billAllocs = (data) => {\n    return (\n      <div className=\" ellipsis\" data-toggle=\"tooltip\" title={data.bill_allocs}>\n        <div className=\"align right\">{data.bill_allocs}</div>\n      </div>\n    );\n  };\n\n  const billRate = (data) => {\n    return (\n      <div className=\" ellipsis\" data-toggle=\"tooltip\" title={data.bill_rate}>\n        <div className=\"align right\"> {data.bill_rate}</div>\n      </div>\n    );\n  };\n  const payRate = (data) => {\n    return (\n      <div className=\" ellipsis\" data-toggle=\"tooltip\" title={data.pay_rate}>\n        <div className=\"align right\">{data.pay_rate}</div>\n      </div>\n    );\n  };\n  const gmPerc = (data) => {\n    return (\n      <div className=\" ellipsis\" data-toggle=\"tooltip\" title={data.gm_perc}>\n        <div className=\"align right\">{data.gm_perc}</div>\n      </div>\n    );\n  };\n\n  const allocEndDate = (data) => {\n    return (\n      <div\n        className=\" ellipsis\"\n        data-toggle=\"tooltip\"\n        title={data.alloc_end_date}\n      >\n        {data.alloc_end_date}\n      </div>\n    );\n  };\n  const VendorName = (data) => {\n    return (\n      <div className=\" ellipsis\" data-toggle=\"tooltip\" title={data.vendor_name}>\n        {data.vendor_name}\n      </div>\n    );\n  };\n  const contractType = (data) => {\n    return (\n      <div\n        className=\" ellipsis\"\n        data-toggle=\"tooltip\"\n        title={data.contract_type}\n      >\n        {data.contract_type}\n      </div>\n    );\n  };\n  const ContractEndDate = (data) => {\n    return (\n      <div\n        className=\"ellipsis\"\n        data-toggle=\"tooltip\"\n        title={data.contract_end_date}\n      >\n        {data.contract_end_date}\n      </div>\n    );\n  };\n  const expDtAlign = (data) => {\n    return (\n      <div className=\"align center\" title={data.ad_contract_end_date}>\n        {data.ad_contract_end_date}\n      </div>\n    );\n  };\n  const StartDate = (data) => {\n    return (\n      <div className=\" ellipsis\" data-toggle=\"tooltip\" title={data.start_date}>\n        {data.start_date}\n      </div>\n    );\n  };\n  const skillType = (data) => {\n    return (\n      <div\n        className=\"align center ellipsis\"\n        data-toggle=\"tooltip\"\n        title={data.skill_type}\n      >\n        {data.skill_type}\n      </div>\n    );\n  };\n\n  const LinkTemplate = (data) => {\n    console.log(\"in line 91------------\");\n    console.log(data);\n    return (\n      <div\n        className=\"legendContainer  ellipsis\"\n        onClick={(e) => {\n          console.log(data);\n          handleClick(e, data.resource_name);\n          setLinkId(data.resource_id);\n          // getResourceTable(data.resource_id);\n          setAnchorEl(e.currentTarget);\n          setAllocationTable(false);\n        }}\n      >\n        {\" \"}\n        {data.alloc_contract_date_icon ==\n        \"#da4832~^Alloc End Date > Contract End Dt\" ? (\n          <div className=\"legend red\">\n            <div\n              className=\"legendCircle \"\n              data-toggle=\"tooltip\"\n              title={\"Alloc End Date > Contract End Dt\"}\n            ></div>\n            <div\n              className=\"ellipsis\"\n              data-toggle=\"popoverLink\"\n              to={Popover}\n              title={data.resource_name}\n              style={{ color: \"#15a7ea\", cursor: \"pointer\" }}\n            >\n              {data.resource_name}\n            </div>\n          </div>\n        ) : data.alloc_contract_date_icon ==\n            \"#3dbb49~^Alloc End Date = Contract End Dt\" ||\n          data.alloc_contract_date_icon == \"#3dbb49~^No Contract End Dt\" ? (\n          <div\n            className=\"legend green\"\n            to={Popover}\n            title={data.resource_name}\n            style={{ color: \"#15a7ea\", cursor: \"pointer\" }}\n          >\n            <div\n              className=\"legendCircle \"\n              data-toggle=\"tooltip\"\n              title={\"Alloc End Date = Contract End Dt\"}\n            ></div>\n            <div\n              className=\"ellipsis\"\n              data-toggle=\"popoverLink\"\n              title={data.resource_name}\n              style={{ color: \"#15a7ea\", cursor: \"pointer\" }}\n            >\n              {data.resource_name}\n            </div>\n          </div>\n        ) : data.alloc_contract_date_icon ==\n          \"#FF0~^Alloc End Date < Contract End Dt\" ? (\n          <div\n            className=\"legend amber\"\n            to={Popover}\n            style={{ color: \"#15a7ea\", cursor: \"pointer\" }}\n          >\n            <div\n              className=\"legendCircle \"\n              data-toggle=\"tooltip\"\n              title={\"Alloc End Date < Contract End Dt\"}\n            ></div>\n            <div\n              className=\"ellipsis \"\n              data-toggle=\"popoverLink\"\n              title={data.resource_name}\n              to={Popover}\n              style={{ color: \"#15a7ea\", cursor: \"pointer\" }}\n            >\n              {data.resource_name}\n            </div>\n          </div>\n        ) : (\n          \"\"\n        )}{\" \"}\n      </div>\n    );\n  };\n\n  const dynamicColumns = Object.keys(headerData)?.map((col, i) => {\n    return (\n      <Column\n        sortable\n        key={col}\n        body={\n          col == \"ad_contract_end_date\"\n            ? expDtAlign\n            : col == \"alloc_contract_date_icon\"\n            ? contractDtAlign\n            : col == \"alloc_end_date\"\n            ? allocDtAlign\n            : col == \"employee_number\"\n            ? empNumber\n            : col == \"skills\"\n            ? tooltipSkills\n            : col == \"projects\"\n            ? tooltipProject\n            : col == \"department\"\n            ? tooltipDept\n            : col == \"supervisor\"\n            ? tooltipSupervisor\n            : col == \"bill_allocs\"\n            ? billAllocs\n            : col == \"bill_rate\"\n            ? billRate\n            : col == \"pay_rate\"\n            ? payRate\n            : col == \"gm_perc\"\n            ? gmPerc\n            : col == \"alloc_end_date\"\n            ? allocEndDate\n            : col == \"vendor_name\"\n            ? VendorName\n            : col == \"contract_type\"\n            ? contractType\n            : col == \"resource_name\"\n            ? LinkTemplate\n            : col == \"start_date\"\n            ? StartDate\n            : col == \"contract_end_date\"\n            ? ContractEndDate\n            : col == \"skill_type\" && skillType\n        }\n        field={col}\n        header={headerData[col]}\n      />\n    );\n  });\n  //===========Resource Allocation API=======\n\n  const [resourcedate, setResourceDate] = useState(new Date());\n\n  // Calculate the first day of the current month based on resourcedate\n  const firstDayOfMonth = new Date(\n    resourcedate.getFullYear(),\n    resourcedate.getMonth(),\n    1\n  );\n\n  const loggedUserId = localStorage.getItem(\"resId\");\n  console.log(firstDayOfMonth);\n\n  useEffect(() => {\n    getResourceTable();\n  }, [LinkId]);\n  let formattedMonth = moment(resourcedate).format(\"yyyy-MM-DD\");\n  console.log(formattedMonth, \"formattedMonth\");\n\n  const dates = {\n    fromDate: moment(formattedMonth).startOf(\"month\").format(\"YYYY-MM-DD\"),\n    toDate: moment(formattedMonth)\n      .startOf(\"month\")\n      .add(\"month\", 0)\n      .format(\"YYYY-MM-DD\"),\n  };\n  const [dt, setDt] = useState(dates);\n\n  const addHandler = () => {\n    setDt((prev) => ({\n      ...prev,\n      [\"fromDate\"]: moment(dt.fromDate).add(\"month\", 1).format(\"YYYY-MM-DD\"),\n    }));\n    setDt((prev) => ({\n      ...prev,\n      [\"toDate\"]: moment(dt.toDate).add(\"month\", 1).format(\"YYYY-MM-DD\"),\n    }));\n  };\n\n  const subtractHandler = () => {\n    setDt((prev) => ({\n      ...prev,\n      [\"fromDate\"]: moment(dt.fromDate)\n        .subtract(\"month\", 1)\n        .format(\"YYYY-MM-DD\"),\n    }));\n    setDt((prev) => ({\n      ...prev,\n      [\"toDate\"]: moment(dt.toDate).subtract(\"month\", 1).format(\"YYYY-MM-DD\"),\n    }));\n  };\n\n  const getResourceTable = (e, id) => {\n    setResourceTable([]);\n    axios({\n      method: \"post\",\n      url: baseUrl + `/revenuemetricsms/metrics/getResourceTable`,\n      data: {\n        Src: \"project\",\n        Typ: \"allocations\",\n        ObjectId: LinkId,\n        FromDt: dt.toDate,\n        AllocType: \"billable\",\n        PrjSource: \"-1\",\n        contTerms: \"28,27,752,606,26,25,1024,612,608,609,610,611,750\",\n        engComps: \"-1\",\n        cslIds: \"-1\",\n        dpIds: \"-1\",\n        UserId: loggedUserId,\n      },\n    }).then(function (res) {\n      setResourceTable(res.data);\n    });\n  };\n  const [componentMounted, setComponentMounted] = useState(false);\n\n  useEffect(() => {\n    if (componentMounted) {\n      getResourceTable();\n    } else {\n      setComponentMounted(true);\n    }\n  }, [dt.toDate, componentMounted]);\n  return (\n    <div>\n      {flag == 1 ? (\n        <>\n          <p className=\"font-weight-bold Vendor-sub-heading pb-0\">{Table}</p>\n          <div className=\"mb-2\">{tableNew}</div>\n        </>\n      ) : (\n        <>\n          <p className=\"font-weight-bold Vendor-sub-heading pb-0\">{title}</p>\n          <div className=\"mb-2\">{tableNew}</div>\n        </>\n      )}\n\n      <VendorSearchTable\n        data={data}\n        rows={10}\n        dynamicColumns={dynamicColumns}\n        headerData={headerData}\n        setHeaderData={setHeaderData}\n        exportData={exportData}\n        fileName=\"ResourceVendorManagement\"\n      />\n      {anchorEl && (\n        <Popup\n          // className=\"p\"\n          handleClose={handleClose}\n          anchorEl={anchorEl}\n          name={name}\n          LinkId={LinkId}\n          setAllocationTable={setAllocationTable}\n          setAnchorEl={setAnchorEl}\n          setGraphKey1={setGraphKey1}\n        />\n      )}\n      {allocationtable && (\n        <>\n          <div className=\"col-md-12 mt-2\">\n            <div className=\"collapseHeader revForcast\">\n              <div className=\"leftSection\">\n                <span>{name}</span>\n              </div>\n              <div className=\"rightSection\" style={{ paddingLeft: \"865px\" }}>\n                <span\n                  className=\"ml-2 chevronContainer\"\n                  ref={graphRef1}\n                  key={graphKey1}\n                >\n                  <AiOutlineLeftSquare\n                    cursor=\"pointer\"\n                    size={\"2em\"}\n                    onClick={subtractHandler}\n                  />\n                  <span>{moment(dt.toDate).format(\"MMM-YYYY\")}</span>\n                  <AiOutlineRightSquare\n                    cursor=\"pointer\"\n                    size={\"2em\"}\n                    onClick={addHandler}\n                  />\n                </span>\n              </div>\n              <BiX\n                fontSize={\"20px\"}\n                style={{ backgroundColor: \"#c6c0c0\", cursor: \"pointer\" }}\n                onClick={() => {\n                  setAllocationTable(false);\n                }}\n              />\n            </div>\n          </div>\n\n          <ForecastProjectPopUp\n            linkId={LinkId}\n            data={resourceTable}\n            expandedCols={[]}\n            colExpandState={[]}\n            // month={month}\n            // setMonth={setMonth}\n            // resourcedata={resourcedata}\n          />\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default Resources;\n","import React, { useState, useEffect } from \"react\";\nimport { RiFileExcel2Line } from \"react-icons/ri\";\nimport * as XLSX from \"xlsx\";\nimport { AiOutlineFileSearch } from \"react-icons/ai\";\nimport { Link } from \"react-router-dom\";\nimport \"./Search.scss\";\nimport ReactPaginate from \"react-paginate\";\nimport moment from \"moment/moment\";\nimport { Column } from \"primereact/column\";\nimport CellRendererPrimeReactDataTable from \"../PrimeReactTableComponent/CellRendererPrimeReactDataTable\";\nimport { selectClasses } from \"@mui/material\";\nimport Loader from \"../Loader/Loader\";\nimport ErrorLogTable from \"../Administration/ErrorLogsTable\";\nimport VendorSearchTable from \"./VendorSearchTable\";\n\nfunction SearchDefaultTable(props) {\n  const {\n    data,\n    SetData,\n    searchapidata,\n    linkColumns,\n    linkColumnsRoutes,\n    loaderState,\n    handleAbort,\n    setButtonState,\n  } = props;\n\n  const [headerData, setHeaderData] = useState([]);\n  const [exportData, setExportData] = useState([]);\n  const [customFilters, setcustomFilters] = useState({});\n  const [customFilterValue, setCustomFilterValue] = useState(\"\");\n  useEffect(() => {\n    let imp = [\"XLS\", \"PDF\", \"PRINT\"];\n    setExportData(imp);\n\n    let ctmFlts = {\n      id: \"filterTable\",\n      type: \"select\",\n      data: {\n        0: \"All\",\n        1: \"Active\",\n      },\n      align: \"right\",\n      filterTable: \"\",\n    };\n    setcustomFilters(ctmFlts);\n  }, []);\n\n  useEffect(() => {\n    console.log(customFilterValue);\n  }, [customFilterValue]);\n\n  useEffect(() => {\n    data[0] && setHeaderData(JSON.parse(JSON.stringify(data[0])));\n  }, [data]);\n\n  const ActionAlign = (data) => {\n    return <div align=\"center\">{data.Action}</div>;\n  };\n  const ExpireDtAlign = (data) => {\n    return (\n      <div align=\"center\" title={data.expireDt}>\n        {data.expireDt}\n      </div>\n    );\n  };\n  const WebsiteToolTip = (data) => {\n    return (\n      <div className=\"ellipsis\">\n        {data.website === \"N/A\" ||\n        data.website === \"na\" ||\n        data.website === \"n/a\" ? (\n          <span>{data.website}</span>\n        ) : (\n          <a\n            href={data.website}\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            title={data.website}\n          >\n            <span>{data.website}</span>\n          </a>\n        )}\n      </div>\n    );\n  };\n\n  const NxtRvwDtDtAlign = (data) => {\n    return (\n      <div\n        align=\"center\"\n        title={\n          moment(data.nxtRvwDt).format(\"DD-MMM-yyyy\") == \"Invalid date\"\n            ? \"-\"\n            : moment(data.nxtRvwDt).format(\"DD-MMM-yyyy\")\n        }\n      >\n        {moment(data.nxtRvwDt).format(\"DD-MMM-yyyy\") == \"Invalid date\"\n          ? \"-\"\n          : moment(data.nxtRvwDt).format(\"DD-MMM-yyyy\")}\n      </div>\n    );\n  };\n  const SignedDtDtAlign = (data) => {\n    return (\n      <div align=\"center\" title={data.signedDt}>\n        {data.signedDt}\n      </div>\n    );\n  };\n  const phoneAlign = (data) => {\n    return (\n      <div align=\"right\" title={data.phone}>\n        {data.phone}\n      </div>\n    );\n  };\n\n  const VendorId = (data) => {\n    return (\n      <div className=\"ellipsis\" title={data.vendorId}>\n        {data.vendorId}\n      </div>\n    );\n  };\n  const contactName = (data) => {\n    return (\n      <div className=\"ellipsis\" title={data.contactName}>\n        {data.contactName}\n      </div>\n    );\n  };\n  const email = (data) => {\n    return (\n      <div className=\"ellipsis\" title={data.email}>\n        {data.email}\n      </div>\n    );\n  };\n  const contryName = (data) => {\n    return (\n      <div\n        className=\"ellipsis\"\n        style={{ textAlign: data.contryName == \"NA\" ? \"center\" : \"\" }}\n        title={data.contryName}\n      >\n        {data.contryName}\n      </div>\n    );\n  };\n\n  const LinkTemplate = (data) => {\n    let rou = linkColumnsRoutes[0]?.split(\":\");\n    return (\n      <>\n        <Link\n          target=\"_blank\"\n          to={rou[0] + \":\" + data[rou[1]]}\n          data-toggle=\"tooltip\"\n          title={data.vendor_name}\n        >\n          {data[linkColumns[0]]}\n        </Link>\n      </>\n    );\n  };\n\n  const LinkTemplateAction = (data) => {\n    // setButtonState(\"Reviews\");\n    let rou = linkColumnsRoutes[1]?.split(\":\");\n    return (\n      <>\n        <div align=\"center\">\n          <Link target=\"_blank\" to={rou[0] + \":\" + data[rou[1]]} ele=\"reviews\">\n            {\n              <AiOutlineFileSearch\n                size=\"14px\"\n                data-toggle=\"tooltip\"\n                title=\"Reviews\"\n                style={{ align: \"center\" }}\n              />\n            }\n            {data[linkColumnsRoutes[1]]}\n          </Link>\n        </div>\n      </>\n    );\n  };\n\n  const dynamicColumns = Object.keys(headerData)?.map((col, i) => {\n    return (\n      <Column\n        key={col}\n        body={\n          col == \"phone\"\n            ? phoneAlign\n            : col == \"vendor_name\"\n            ? LinkTemplate\n            : col == \"Action\"\n            ? LinkTemplateAction\n            : col == \"nxtRvwDt\"\n            ? NxtRvwDtDtAlign\n            : col == \"website\"\n            ? WebsiteToolTip\n            : col == \"signedDt\"\n            ? SignedDtDtAlign\n            : col == \"vendorId\"\n            ? VendorId\n            : col == \"contactName\"\n            ? contactName\n            : col == \"email\"\n            ? email\n            : col == \"contryName\"\n            ? contryName\n            : col == \"expireDt\" && ExpireDtAlign\n        }\n        field={col}\n        header={headerData[col]}\n      />\n    );\n  });\n\n  return (\n    <div>\n      {loaderState ? <Loader handleAbort={handleAbort} /> : \"\"}\n      <div className=\"group mb-3 customCard\">\n        <VendorSearchTable\n          data={data}\n          linkColumns={linkColumns}\n          linkColumnsRoutes={linkColumnsRoutes}\n          dynamicColumns={dynamicColumns}\n          headerData={headerData}\n          setHeaderData={setHeaderData}\n          exportData={exportData}\n          rows={10}\n          fileName=\"Vendor Search\"\n          //customFilters = { customFilters }\n          //customFilterValue = { customFilterValue }\n          //setCustomFilterValue = {setCustomFilterValue}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default SearchDefaultTable;\n","import React, { useState, useEffect } from \"react\";\n//import VendorPerformanceMaterialTable from \"./VendorPerformanceMaterialTable\";\nimport VendorPerformanceTopMaterialTable from \"./VendorPerformanceTopMaterialTable\";\n\nfunction VendorPerformanceTable(props) {\n  // console.log(performanceData);\n  const { performanceData, formData } = props;\n  console.log(performanceData, 'performanceData');\n\n  const [exportData, setExportData] = useState([]);\n\n  useEffect(() => {\n    let imp = [\"XLS\"];\n    setExportData(imp);\n  }, [performanceData]);\n  var countNw = 0;\n  let tableData = performanceData?.tableData;\n  if (tableData) {\n    for (let i = 0; i < tableData?.length; i++) {\n      if (tableData[i].lvl == 1) {\n        countNw++;\n      }\n    }\n  }\n  return (\n    <div>\n      <VendorPerformanceTopMaterialTable\n        data={performanceData}\n        expandedCols={[\"supervisor\", \"emp_cadre\"]}\n        colExpandState={[\"0\", \"0\", \"name\"]}\n        rFormData={formData}\n        exportData={exportData}\n        countNw={countNw}\n      />\n    </div>\n  );\n}\n\nexport default VendorPerformanceTable;\n","import React, { useRef } from \"react\";\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { environment } from \"../../environments/environment\";\nimport Popup from \"./Popup\";\nimport \"./Resources.scss\";\nimport axios from \"axios\";\nimport CellRendererPrimeReactDataTable from \"../PrimeReactTableComponent/CellRendererPrimeReactDataTable\";\nimport { Column } from \"primereact/column\";\nimport { Popover } from \"@coreui/coreui\";\nimport moment from \"moment\";\nimport ForecastProjectPopUp from \"../RevenueMetrices/ForecastProjectPopUp\";\nimport { AiOutlineLeftSquare, AiOutlineRightSquare } from \"react-icons/ai\";\nimport { BiX } from \"react-icons/bi\";\nimport SearchDefaultTable from \"./SearchDefaultTable\";\nimport VendorSearchTable from \"./VendorSearchTable\";\n\nfunction Resources(props) {\n  const [popup, setPopup] = useState(false);\n  const [anchorEl, setAnchorEl] = useState(null);\n  const [name, setName] = useState(\"\");\n  const [searchapidata, setSearchApiData] = useState([]);\n  const [data, setData] = useState([]);\n  const { resourceData, colorFilter } = props;\n  const [exportData, setExportData] = useState([]);\n  const [headerData, setHeaderData] = useState([]);\n  const [bodyData, setBodyData] = useState([]);\n  const [colorsState, setColorsState] = useState([]);\n  const [resourceTable, setResourceTable] = useState([]);\n  const [LinkId, setLinkId] = useState();\n  const [allocationtable, setAllocationTable] = useState(false);\n  const graphRef1 = useRef(null);\n  const [graphKey1, setGraphKey1] = useState(0);\n\n  console.log(resourceData);\n  console.log(colorsState);\n  let hData = [];\n  let bData = [];\n  for (let index = 0; index < resourceData.length; index++) {\n    if (index == 0) {\n      hData.push(resourceData[index]);\n    } else {\n      bData.push(resourceData[index]);\n    }\n  }\n\n\n  // console.log(colorFilter, 'colors22>>');\n  let firstColor = colorFilter[0];\n  let secondColor = colorFilter[1];\n  let thirdColor = colorFilter[2];\n  //console.log(firstColor, secondColor, thirdColor, '1st 2nd third color')\n\n\n  useEffect(() => {\n    if (graphKey1 && graphRef1.current) {\n      graphRef1.current.scrollIntoView({ behavior: \"instant\" });\n    }\n  }, [graphKey1]);\n  //var d = new Date();\n  //console.log(colorsState);\n  // const abortController = useRef(null);\n\n  const colorsData = {\n    \"#FF0\": \"Alloc End Date < Contract End Dt\",\n    \"#da4832\": \"Alloc End Date = Contract End Dt\",\n    \"#3dbb49\": \"Alloc End Date > Contract End Dt\",\n  };\n\n  const handleClose = () => {\n    setAnchorEl(false);\n  };\n\n  const baseUrl = environment.baseUrl;\n  useEffect(() => {\n    resourceData[0] && setHeaderData(JSON.parse(JSON.stringify(resourceData[0])));\n    let imp = [\"XLS\"];\n    setExportData(imp);\n    setSearchApiData(bData);\n  }, [resourceData]);\n\n  const handleClick = (event, name) => {\n    setName(name);\n    // setAnchorEl(true);\n    // setAnchorEl(e.currentTarget);\n  };\n\n\n  //color sorting\n\n  let table1 = (<div className=\"legend red\">\n    <div className=\"legendCircle \"></div>\n    <div className=\"legendTxt\">\n      Alloc End Date &gt; Contract End Dt{\" \"}\n    </div>\n  </div>)\n\n\n  //console.log(table1, 'table1');\n  let table2 = (<div className=\"legend green\">\n    <div className=\"legendCircle\"></div>\n    <div className=\"legendTxt\">\n      {\" \"}\n      Alloc End Date = Contract End Dt{\" \"}\n    </div>\n  </div>)\n\n\n  const table3 = (<div className=\"legend amber\">\n    <div className=\"legendCircle\"></div>\n    <div className=\"legendTxt\">\n      {\" \"}\n      Alloc End Date &lt; Contract End Dt{\" \"}\n    </div>\n  </div>)\n\n  // console.log(firstColor, 'red');\n  const tableNew = (<div className=\"row\">\n    <div className=\"legendContainer\">\n      {(firstColor == '#da4832')\n        ? (table1)\n        : (firstColor == \"#3dbb49\")\n          ? (table2)\n          : (firstColor == \"#FF0\")\n            ? (table3)\n            : (\"\")}\n      {(secondColor == '#da4832')\n        ? (table1)\n        : (secondColor == \"#3dbb49\")\n          ? (table2)\n          : (secondColor == \"#FF0\")\n            ? (table3)\n            : (\"\")}\n      {(thirdColor === '#da4832')\n        ? (table1)\n        : (thirdColor == \"#3dbb49\")\n          ? (table2)\n          : (thirdColor == \"#FF0\")\n            ? (table3)\n            : (\"\")}\n\n    </div>\n  </div>)\n\n  //console.log(tableNew, 'tablesahid>>');\n\n  const tooltipDept = (data) => {\n    return (\n      <div className=\"ellipsis\" data-toggle=\"tooltip\" title={data.department}>\n        {data.department}\n      </div>\n    );\n  };\n  const tooltipSupervisor = (data) => {\n    return (\n      <div className=\"ellipsis\" data-toggle=\"tooltip\" title={data.supervisor}>\n        {data.supervisor}\n      </div>\n    );\n  };\n  const tooltipProject = (data) => {\n    return (\n      <div className=\"ellipsis\" data-toggle=\"tooltip\" title={data.projects}>\n        {data.projects}\n      </div>\n    );\n  };\n  const tooltipSkills = (data) => {\n    return (\n      <div className=\"ellipsis\" data-toggle=\"tooltip\" title={data.skills}>\n        {data.skills}\n      </div>\n    );\n  };\n  const allocDtAlign = (data) => {\n    return (\n      <div className=\"align center ellipsis\" data-toggle=\"tooltip\">\n        {data.alloc_end_date}\n      </div>\n    );\n  };\n  const contractDtAlign = (data) => {\n    return (\n      <div className=\"align center ellipsis\" data-toggle=\"tooltip\">\n        {data.alloc_contract_date_icon}\n      </div>\n    );\n  };\n\n  const empNumber = (data) => {\n    return (\n      <div\n        className=\" ellipsis\"\n        data-toggle=\"tooltip\"\n        title={data.employee_number}\n      >\n        {data.employee_number}\n      </div>\n    );\n  };\n\n  const billAllocs = (data) => {\n    return (\n      <div className=\" ellipsis\" data-toggle=\"tooltip\" title={data.bill_allocs}>\n        <div className=\"align right\">\n          {data.bill_allocs}\n        </div>\n      </div>\n    );\n  };\n\n  const billRate = (data) => {\n    return (\n      <div className=\" ellipsis\" data-toggle=\"tooltip\" title={data.bill_rate}>\n        {data.bill_rate}\n      </div>\n    );\n  };\n  const payRate = (data) => {\n    return (\n      <div className=\" ellipsis\" data-toggle=\"tooltip\" title={data.pay_rate}>\n        <div className=\"align right\">\n          {data.pay_rate}\n        </div>\n      </div>\n    );\n  };\n  const gmPerc = (data) => {\n    return (\n      <div className=\" ellipsis\" data-toggle=\"tooltip\" title={data.gm_perc}>\n        <div className=\"align right\">\n          {data.gm_perc}\n        </div>\n      </div>\n    );\n  };\n\n  const allocEndDate = (data) => {\n    return (\n      <div\n        className=\" ellipsis\"\n        data-toggle=\"tooltip\"\n        title={data.alloc_end_date}\n      >\n        {data.alloc_end_date}\n      </div>\n    );\n  };\n  const VendorName = (data) => {\n    return (\n      <div className=\" ellipsis\" data-toggle=\"tooltip\" title={data.vendor_name}>\n        {data.vendor_name}\n      </div>\n    );\n  };\n  const contractType = (data) => {\n    return (\n      <div\n        className=\" ellipsis\"\n        data-toggle=\"tooltip\"\n        title={data.contract_type}\n      >\n        {data.contract_type}\n      </div>\n    );\n  };\n  const expDtAlign = (data) => {\n    return <div className=\"align center\">{data.ad_contract_end_date}</div>;\n  };\n  const LinkTemplate = (data) => {\n    // console.log(\"in line 91------------\");\n    // console.log(data);\n    return (\n      <div\n        className=\"legendContainer  ellipsis\"\n        onClick={(e) => {\n          // console.log(data);\n          handleClick(e, data.resource_name);\n          setLinkId(data.resource_id);\n          // getResourceTable(data.resource_id);\n          setAnchorEl(e.currentTarget);\n          setAllocationTable(false);\n        }}\n      >\n        {\" \"}\n        {data.alloc_contract_date_icon ==\n          \"#da4832~^Alloc End Date > Contract End Dt\" ? (\n          <div className=\"legend red\">\n            <div\n              className=\"legendCircle \"\n              data-toggle=\"tooltip\"\n              title={\"Alloc End Date > Contract End Dt\"}\n            ></div>\n            <div\n              className=\"ellipsis\"\n              data-toggle=\"popoverLink\"\n              to={Popover}\n              title={data.resource_name}\n              style={{ color: \"#15a7ea\", cursor: \"pointer\" }}\n            >\n              {data.resource_name}\n            </div>\n          </div>\n        ) : data.alloc_contract_date_icon ==\n          \"#3dbb49~^Alloc End Date = Contract End Dt\" || data.alloc_contract_date_icon == \"#3dbb49~^No Contract End Dt\" ? (\n          <div\n            className=\"legend green\"\n            to={Popover}\n            title={data.resource_name}\n            style={{ color: \"#15a7ea\", cursor: \"pointer\" }}\n          >\n            <div\n              className=\"legendCircle \"\n              data-toggle=\"tooltip\"\n              title={\"Alloc End Date = Contract End Dt\"}\n            ></div>\n            <div\n              className=\"ellipsis\"\n              data-toggle=\"popoverLink\"\n              title={data.resource_name}\n              style={{ color: \"#15a7ea\", cursor: \"pointer\" }}\n            >\n              {data.resource_name}\n            </div>\n          </div>\n        ) : data.alloc_contract_date_icon ==\n          \"#FF0~^Alloc End Date < Contract End Dt\" ? (\n          <div\n            className=\"legend amber\"\n            to={Popover}\n            style={{ color: \"#15a7ea\", cursor: \"pointer\" }}\n          >\n            <div\n              className=\"legendCircle \"\n              data-toggle=\"tooltip\"\n              title={\"Alloc End Date < Contract End Dt\"}\n            ></div>\n            <div\n              className=\"ellipsis \"\n              data-toggle=\"popoverLink\"\n              title={data.resource_name}\n              to={Popover}\n              style={{ color: \"#15a7ea\", cursor: \"pointer\" }}\n            >\n              {data.resource_name}\n            </div>\n          </div>\n        ) : (\n          \"\"\n        )}{\" \"}\n      </div>\n    );\n  };\n\n  const dynamicColumns = Object.keys(headerData)?.map((col, i) => {\n    return (\n      <Column\n        sortable\n        key={col}\n        body={\n          col == \"ad_contract_end_date\"\n            ? expDtAlign\n            : col == \"alloc_contract_date_icon\"\n              ? contractDtAlign\n              : col == \"alloc_end_date\"\n                ? allocDtAlign\n                : col == \"employee_number\"\n                  ? empNumber\n                  : col == \"skills\"\n                    ? tooltipSkills\n                    : col == \"projects\"\n                      ? tooltipProject\n                      : col == \"department\"\n                        ? tooltipDept\n                        : col == \"supervisor\"\n                          ? tooltipSupervisor\n                          : col == \"bill_allocs\"\n                            ? billAllocs\n                            : col == \"bill_rate\"\n                              ? billRate\n                              : col == \"pay_rate\"\n                                ? payRate\n                                : col == \"gm_perc\"\n                                  ? gmPerc\n                                  : col == \"alloc_end_date\"\n                                    ? allocEndDate\n                                    : col == \"vendor_name\"\n                                      ? VendorName\n                                      : col == \"contract_type\"\n                                        ? contractType\n                                        : col == \"resource_name\" && LinkTemplate\n        }\n        field={col}\n        header={headerData[col]}\n      />\n    );\n  });\n  //===========Resource Allocation API=======\n\n  const [resourcedate, setResourceDate] = useState(new Date());\n\n  // Calculate the first day of the current month based on resourcedate\n  const firstDayOfMonth = new Date(\n    resourcedate.getFullYear(),\n    resourcedate.getMonth(),\n    1\n  );\n\n  const loggedUserId = localStorage.getItem(\"resId\");\n  console.log(firstDayOfMonth);\n\n  useEffect(() => {\n    getResourceTable();\n  }, [LinkId]);\n  let formattedMonth = moment(resourcedate).format(\"yyyy-MM-DD\");\n  //console.log(formattedMonth, \"formattedMonth\");\n\n  const dates = {\n    fromDate: moment(formattedMonth).startOf(\"month\").format(\"YYYY-MM-DD\"),\n    toDate: moment(formattedMonth)\n      .startOf(\"month\")\n      .add(\"month\", 0)\n      .format(\"YYYY-MM-DD\"),\n  };\n  const [dt, setDt] = useState(dates);\n\n  const addHandler = () => {\n    setDt((prev) => ({\n      ...prev,\n      [\"fromDate\"]: moment(dt.fromDate).add(\"month\", 1).format(\"YYYY-MM-DD\"),\n    }));\n    setDt((prev) => ({\n      ...prev,\n      [\"toDate\"]: moment(dt.toDate).add(\"month\", 1).format(\"YYYY-MM-DD\"),\n    }));\n  };\n\n  const subtractHandler = () => {\n    setDt((prev) => ({\n      ...prev,\n      [\"fromDate\"]: moment(dt.fromDate)\n        .subtract(\"month\", 1)\n        .format(\"YYYY-MM-DD\"),\n    }));\n    setDt((prev) => ({\n      ...prev,\n      [\"toDate\"]: moment(dt.toDate).subtract(\"month\", 1).format(\"YYYY-MM-DD\"),\n    }));\n  };\n\n  const getResourceTable = (e, id) => {\n    setResourceTable([]);\n    axios({\n      method: \"post\",\n      url: baseUrl + `/revenuemetricsms/metrics/getResourceTable`,\n      data: {\n        Src: \"project\",\n        Typ: \"allocations\",\n        ObjectId: LinkId,\n        FromDt: dt.toDate,\n        AllocType: \"billable\",\n        PrjSource: \"-1\",\n        contTerms: \"28,27,752,606,26,25,1024,612,608,609,610,611,750\",\n        engComps: \"-1\",\n        cslIds: \"-1\",\n        dpIds: \"-1\",\n        UserId: loggedUserId,\n      },\n    }).then(function (res) {\n      setResourceTable(res.data);\n    });\n  };\n  const [componentMounted, setComponentMounted] = useState(false);\n\n  useEffect(() => {\n    if (componentMounted) {\n      getResourceTable();\n    } else {\n      setComponentMounted(true);\n    }\n  }, [dt.toDate, componentMounted]);\n  return (\n    <div>\n      <p className=\"font-weight-bold Vendor-sub-heading pb-0\">Resource Details</p>\n      <div className=\"mb-2\">\n        {tableNew}\n      </div>\n      <VendorSearchTable\n        data={resourceData}\n        rows={10}\n        dynamicColumns={dynamicColumns}\n        headerData={headerData}\n        setHeaderData={setHeaderData}\n        exportData={exportData}\n        fileName=\"ResourceVendorPerformance\"\n      />\n      {anchorEl && (\n        <Popup\n          // className=\"p\"\n          handleClose={handleClose}\n          anchorEl={anchorEl}\n          name={name}\n          LinkId={LinkId}\n          setAllocationTable={setAllocationTable}\n          setAnchorEl={setAnchorEl}\n          setGraphKey1={setGraphKey1}\n        />\n      )}\n      {allocationtable && (\n        <>\n          <div className=\"col-md-12 mt-2\">\n            <div className=\"collapseHeader revForcast\">\n              <div className=\"leftSection\">\n                <span>{name}</span>\n              </div>\n              <div className=\"rightSection\" style={{ paddingLeft: \"865px\" }}>\n                <span\n                  className=\"ml-2 chevronContainer\"\n                  ref={graphRef1}\n                  key={graphKey1}\n                >\n                  <AiOutlineLeftSquare\n                    cursor=\"pointer\"\n                    size={\"2em\"}\n                    onClick={subtractHandler}\n                  />\n                  <span>{moment(dt.toDate).format(\"MMM-YYYY\")}</span>\n                  <AiOutlineRightSquare\n                    cursor=\"pointer\"\n                    size={\"2em\"}\n                    onClick={addHandler}\n                  />\n                </span>\n              </div>\n              <BiX\n                fontSize={\"20px\"}\n                style={{ backgroundColor: \"#c6c0c0\", cursor: \"pointer\" }}\n                onClick={() => {\n                  setAllocationTable(false);\n                }}\n              />\n            </div>\n          </div>\n          <div className=\"resourceAllocationTable\">\n            <ForecastProjectPopUp\n              linkId={LinkId}\n              data={resourceTable}\n              expandedCols={[]}\n              colExpandState={[]}\n            // month={month}\n            // setMonth={setMonth}\n            // resourcedata={resourcedata}\n            />\n          </div>\n        </>\n\n      )}\n    </div>\n  );\n}\n\nexport default Resources;\n","import React, { useState, useEffect, useMemo } from \"react\";\nimport MaterialReactTable from \"material-react-table\";\nimport { Box, IconButton } from \"@mui/material\";\nimport axios from \"axios\";\nimport fte_active from \"../../assets/images/empstatusIcon/fte_active.png\";\nimport fte_inactive from \"../../assets/images/empstatusIcon/fte_inactive.png\";\nimport fte_notice from \"../../assets/images/empstatusIcon/fte_notice.png\";\nimport subk_active from \"../../assets/images/empstatusIcon/subk_active.png\";\nimport subk_inactive from \"../../assets/images/empstatusIcon/subk_inactive.png\";\nimport subk_notice from \"../../assets/images/empstatusIcon/subk_notice.png\";\nimport { AiFillRightCircle } from \"react-icons/ai\";\nimport { CListGroup } from \"@coreui/react\";\nimport { GoPerson } from \"react-icons/go\";\nimport \"./VendorPerformance.scss\";\nimport VendorPerformanceResourceTable from \"./VendorPerformanceResourceTable\";\nimport moment from \"moment\";\nimport Loader from \"../Loader/Loader\";\nimport { displayName } from \"react-quill\";\nimport { Block } from \"@mui/icons-material\";\nimport { useRef } from \"react\";\nimport { RiFileExcel2Line } from \"react-icons/ri\";\nimport ExcelJS from \"exceljs\";\nimport \"./VendorPerformanceTopMaterialTable.scss\";\n\nexport default function VendorPerformanceTopMaterialTable(props) {\n  const { data, expandedCols, colExpandState, rFormData, exportData, countNw } =\n    props;\n  console.log(data.tableData, \"tabledata\");\n  const [nodes, setNodes] = useState([]);\n  const [columns, setColumns] = useState(null);\n  const [hiddenColumns, setHiddenColumns] = useState({});\n  const [colExpFlag, setColumnExpFlag] = useState(false);\n  const [headers, setHeaders] = useState([]);\n  const [openResource, setOpenResource] = useState(false);\n  const [loader, setLoader] = useState(false);\n  const [colorFilter, setColorFilter] = useState([]);\n  const [responseData, setResponseData] = useState(false);\n  const [flag, setFlag] = useState(false);\n  const [colAr, setColAr] = useState([]);\n  const [openResourceNw, setOpenResourceNw] = useState(false);\n  const abortController = useRef(null);\n\n  const icons = {\n    fte0: (\n      <img\n        src={fte_inactive}\n        alt=\"(fte_inactive_icon)\"\n        style={{ height: \"12px\" }}\n        title=\"Ex-Employee\"\n      />\n    ),\n    fte1: (\n      <img\n        src={fte_active}\n        alt=\"(fte_active_icon)\"\n        style={{ height: \"12px\" }}\n        title=\"Active Employee\"\n      />\n    ),\n    fte2: (\n      <img\n        src={fte_notice}\n        alt=\"(fte_notice_icon)\"\n        style={{ height: \"12px\" }}\n        title=\"Employee in notice period\"\n      />\n    ),\n    subk0: (\n      <img\n        src={subk_inactive}\n        alt=\"(subk_inactive_icon)\"\n        style={{ height: \"12px\" }}\n        title=\"Ex-Contractor\"\n      />\n    ),\n    subk1: (\n      <img\n        src={subk_active}\n        alt=\"(subk_active_icon)\"\n        style={{ height: \"12px\" }}\n        title=\"Active Contractor\"\n      />\n    ),\n    subk2: (\n      <img\n        src={subk_notice}\n        alt=\"(subk_notice_icon)\"\n        style={{ height: \"12px\" }}\n        title=\"Contractor in notice period\"\n      />\n    ),\n  };\n\n  //resoucreworkstate\n\n  let start = rFormData.month;\n  let end = moment(start).endOf(\"month\").format(\"yyyy-MM-DD\");\n  //console.log(rFormData.countryIds, \"countries \");\n  let country = rFormData.countryIds == \"\" ? -1 : rFormData.countryIds;\n\n  const initialValue = {\n    vendor: -1,\n    customer: \"0\",\n    project: \"0\",\n    department: \"0\",\n  };\n\n  //const [resourceData, setResourceData] = useState([]);\n  const [rdata, setRData] = useState([]);\n  const [formData, setFormData] = useState(initialValue);\n  //console.log(start, \"start>>\");\n  //console.log(end, \"end>>\");\n\n  const resourseDetailsTable = (event, cell) => {\n    setOpenResourceNw(false);\n    console.log(cell.row.original.lvl, \"lvl\");\n    event.preventDefault();\n\n    cell.row.original.lvl == 1\n      ? (formData.vendor = cell.row.original.vendorId)\n      : cell.row.original.lvl == 2\n        ? (formData.vendor = cell.row.original.vendorId) &&\n        (formData.customer = cell.row.original.customerId)\n        : cell.row.original.lvl == 3\n          ? (formData.vendor = cell.row.original.vendorId) &&\n          (formData.customer = cell.row.original.customerId) &&\n          (formData.project = cell.row.original.projectId)\n          : cell.row.original.lvl == 4\n            ? (formData.vendor = cell.row.original.vendorId) &&\n            (formData.customer = cell.row.original.customerId) &&\n            (formData.project = cell.row.original.projectId) &&\n            (formData.customer = cell.row.original.customerId)\n            : cell.row.original.lvl == 0\n              ? (formData.vendor = -1)\n              : \"\";\n\n    setOpenResource(true);\n    abortController.current = new AbortController();\n    // !valid && setVisible(!visible);\n    axios({\n      method: \"post\",\n      url: `http://10.11.12.149:8090/VendorMS/management/getVendManagementResourceDtls`,\n      signal: abortController.current.signal,\n      data: {\n        buIds: -1,\n        country: country,\n        fromDate: start,\n        toDate: end,\n        lkKey: \"total_hc\",\n        skillId: 0,\n        isExport: 0,\n        vendorId: formData.vendor,\n        page: \"performanc\",\n        custId: formData.customer,\n        projId: formData.project,\n        buId: formData.department,\n      },\n\n      // headers: { \"Content-Type\": \"application/json\" },\n    })\n      .then(function (response) {\n        var response = response.data;\n        setResponseData(response);\n        setOpenResourceNw(true);\n        console.log(\n          response.data,\n          \"line mo--------------------107responsedata\"\n        );\n\n        let Headerdata = [\n          {\n            employee_number: \"Emp ID\",\n            resource_name: \"Name\",\n            start_date: \"DOJ\",\n            department: \"Dept\",\n            supervisor: \"Supervisor\",\n            skills: \"Skill\",\n            projects: \"Projects\",\n            bill_allocs: \"Billable Allocs\",\n            bill_rate: \"Bill Rate($)\",\n            pay_rate: \"Pay Rate($)\",\n            gm_perc: \"GM%\",\n            alloc_end_date: \"Alloc End Date\",\n            contract_end_date: \"Contract End Date\",\n            ad_contract_end_date: \"AD Expiry Date\",\n            vendor_name: \"Vendor Name\",\n            contract_type: \"Contract Type\",\n            skill_type: \"Skill Type\",\n          },\n        ];\n        let hData = [];\n        let bData = [];\n        for (let index = 0; index < response.length; index++) {\n          if (index == 0) {\n            hData.push(response[index]);\n          } else {\n            bData.push(response[index]);\n          }\n        }\n        //console.log(hData, \"hData\");\n        //console.log(bData, \"bData\");\n        setRData(Headerdata.concat(bData));\n        //color sorting\n\n        let firstColor,\n          secondColor,\n          thirdColor = \"\",\n          count = 0;\n        firstColor = bData[0].alloc_contract_date_icon?.split(\"~\")[0];\n        secondColor = \"\";\n        //console.log(firstColor, \"firstColor\");\n        for (let index = 0; index < bData.length; index++) {\n          let colorFind = bData[index].alloc_contract_date_icon?.split(\"~\")[0];\n          if (firstColor != colorFind && count == 0) {\n            secondColor = colorFind;\n            count++;\n          } else if (firstColor != colorFind && secondColor != colorFind) {\n            thirdColor = colorFind;\n            break;\n          }\n        }\n        //console.log(firstColor, secondColor, thirdColor, \"colors\");\n        const colorFilter = [firstColor, secondColor, thirdColor];\n        setColorFilter(colorFilter);\n      })\n      .catch((e) => {\n        console.log(e);\n      });\n    setLoader(true);\n  };\n  useEffect(() => {\n    setLoader(false);\n  }, [responseData]);\n\n  // const numberWithCommas = (x) => {\n  //   return x\n  //     ?.toLocaleString(undefined, {\n  //       minimumFractionDigits: 2,\n  //       maximumFractionDigits: 2,\n  //       useGrouping: true,\n  //     })\n  //     .replace(/(?<=\\d)(?=(\\d{3})+(?!\\d|\\.))/g, \",\");\n  // };\n  const numberWithCommas = (x) => {\n    //console.log(typeof x);\n    var number = String(x);\n    // console.log(typeof number);\n    //console.log(number.includes(\".\") ? number : \"\");\n    if (number.includes(\".\") == true) {\n      var decimalNumbers = number;\n      var num = Number(decimalNumbers);\n      let FdN = num != null && num?.toFixed(1);\n      let final = FdN.split(\".\");\n      final[0] = final[0].replace(/(?<=\\d)(?=(\\d{3})+(?!\\d|\\.))/g, \",\");\n      //console.log(\n      // final[0].replace(/(?<=\\d)(?=(\\d{3})+(?!\\d|\\.))/g, \",\"),\n      //final\n      //);\n      return final.join(\".\");\n    } else {\n      return (\n        number != null && number?.replace(/(?<=\\d)(?=(\\d{3})+(?!\\d|\\.))/g, \",\")\n      );\n    }\n  };\n  var count = 0;\n\n  const getData = () => {\n    // var countNw = 0;\n    //console.log(colExpFlag, 'colExpFlag');\n    let expandClass = \"\";\n    //console.log(count, 'count')\n    if (colExpFlag == true && count > 0) {\n      expandClass = \"expanded\";\n    } else {\n      expandClass = \"\";\n    }\n    setFlag(true);\n    let tableData = data.tableData;\n\n    let columns = null;\n\n    if (data?.vmgPerformance?.includes(\"'\")) {\n      columns = data?.vmgPerformance?.replaceAll(\"'\", \"\");\n    } else {\n      columns = data?.vmgPerformance;\n    }\n\n    console.log();\n    let colArr = columns?.split(\",\");\n    //console.log(colArr, 'colArr');\n\n    let newHeaders = [];\n    let hiddenHeaders = [];\n\n    const obj = {};\n\n    for (let i = 0; i < colArr?.length; i++) {\n      let colVal = colArr[i].trim();\n\n      let firstData = tableData[0];\n      obj[colVal] = firstData[colVal];\n    }\n\n    let headerArray = Object.entries(obj);\n    //console.log(headerArray);\n\n    let unWantedCols = [\n      \"id\",\n      \"department\",\n      \"customer\",\n      \"vendor\",\n      \"country\",\n      \"project\",\n      \"resource\",\n      \"departmentId\",\n      \"customerId\",\n      \"projectId\",\n      \"vendorId\",\n      \"empStatus\",\n      \"lvl\",\n      \"count\",\n      \"keyAttr\",\n    ];\n\n    let filteredHeaders = headerArray.filter(\n      (d) =>\n        !unWantedCols.includes(d[0]) &&\n        !d[0].includes(\"billAmt\") &&\n        !d[0].includes(\"gm\") &&\n        !d[0].includes(\"rcount\")\n    );\n    let colArrr = headerArray.filter((d) => !unWantedCols.includes(d[0]));\n    setColAr(colArrr);\n\n    // let filteredHeaders = headerArray.filter(\n    //   ([key, value]) => typeof value === \"string\" && value.includes(\"^&\")\n    // );\n\n    console.log(\"in line 69----\");\n    console.log(filteredHeaders);\n\n    setHeaders(filteredHeaders);\n\n    filteredHeaders.map(([key, value]) => {\n      if (expandedCols.includes(key)) {\n        hiddenHeaders.push({ [key]: false });\n      }\n    });\n\n    setHiddenColumns(Object.assign({}, ...hiddenHeaders));\n\n    let minusOneRow = tableData?.filter((d) => d.id == -1);\n    console.log(minusOneRow, \"---------minusonerow\");\n    filteredHeaders.map(([key, value], index) => {\n      //console.log(filteredHeaders);\n      newHeaders.push({\n        id: key,\n        accessorKey: key,\n        // header: value?.split(\"^&\")[0],\n        header: value,\n        enableColumnActions: false,\n        enableHiding: true,\n        Header: ({ column }) => (\n          <div\n            className={\n              key == \"name\" || key == \"emp_cadre\" || key == \"supervisor\"\n                ? \"mixer\"\n                : \"\"\n            }\n          >\n            <span>{value.split(\"^&\")[0]}</span>\n            {/* {value}{\" \"} */}\n            {key == colExpandState[2] ? (\n              <span className={`expandIcon ${expandClass}`}>\n                <IconButton\n                  onClick={() => {\n                    setColumnExpFlag((prev) => !prev);\n                  }}\n                >\n                  <AiFillRightCircle />\n                </IconButton>\n              </span>\n            ) : null}\n          </div>\n        ),\n\n        /* Cell: ({cell}) => (\n         <div className={cell.column.id == \"emp_cadre\" && \"childRow\"}>\n            {cell.getValue()}\n          </div>\n         )*/\n      });\n    });\n\n    let subHeaders = minusOneRow && Object.entries(minusOneRow[0]);\n    subHeaders?.sort();\n    console.log(subHeaders, \"subHeaders\");\n    newHeaders.map((data) => {\n      let i = newHeaders.indexOf(data);\n      let subArray = [];\n      subHeaders?.map(([key, value], index) => {\n        let a = /\\d/.test(key.split(\"_\")[0]);\n        if (\n          key.includes(\"_\") &&\n          (a == true || (a == false && key.split(\"_\")[0] == \"total\"))\n        ) {\n          let subkey = key.includes(\"action\") ? \"action\" : key.split(\"_\");\n          subkey = key.includes(\"action\")\n            ? \"action\"\n            : subkey.slice(0, -1).join(\"_\");\n          if (data.accessorKey.includes(subkey)) {\n            //console.log(\"key matched!\");\n            let rcount = key.includes(\"total\") ? key : \"\";\n\n            let obj = {\n              id: key,\n              header:\n                value == null || value == 0 ? (\n                  \"\"\n                ) : (\n                  <div\n                    className={\n                      !key.includes(\"actionDate\") &&\n                        !key.includes(\"actionComments\")\n                        ? \"sm\"\n                        : key.includes(\"department\") && \"nullCol\"\n                    }\n                  >\n                    {value}\n                  </div>\n                ),\n              accessorKey: key,\n              enableSorting: true,\n\n              //sorting\n\n              sortingFn: (rowB, rowA, columnId) => {\n                return rowA.id != \"0\" && rowB.id != \"1\"\n                  ? rowB.getValue(columnId) - rowA.getValue(columnId)\n                  : \"\";\n              },\n\n              Cell: ({ cell }) => {\n                {\n                  cell.row.original.resource != \"\" &&\n                    console.log(cell.row.original.name, \"----res\");\n                }\n\n                return (\n                  <div\n                    className={\n                      key.includes(\"_\")\n                        ? key.split(\"_\")[0] == \"total\"\n                          ? \"total\"\n                          : key.split(\"_\")[1][1] % 2 == 0\n                            ? \"even\"\n                            : \"odd\"\n                        : key.includes(\"emp_cadre\") && \"sm mixer\"\n                    }\n                  >\n                    {cell.column.id == \"name\" &&\n                      cell.row.original != null &&\n                      (cell.row.original.name != null ||\n                        cell.row.original.name != \"Summary\") ? (\n                      <>\n                        {icons[cell.row.original[\"empStatus\"]]}\n                        {cell.getValue()}\n                      </>\n                    ) : cell.column.id.includes(\"rcount\") &&\n                      cell.column.id != rcount &&\n                      cell.getValue() != \"0\" &&\n                      cell.row.original.lvl != \"5\" ? (\n                      <div\n                        className=\"ellipsis\"\n                        data-toggle=\"tooltip\"\n                        title={numberWithCommas(cell.getValue())}\n                      >\n                        <a\n                          href=\"\"\n                          role=\"button\"\n                          onClick={(event) => {\n                            resourseDetailsTable(event, cell);\n                          }}\n                        >\n                          {numberWithCommas(cell.getValue())}\n                        </a>\n                      </div>\n                    ) : cell.column.id.includes(\"cost\") ||\n                      cell.column.id.includes(\"gm\") ? (\n                      <div\n                        className=\"ellipsis\"\n                        data-toggle=\"tooltip\"\n                        title={numberWithCommas(Math.round(cell.getValue()))}\n                      >\n                        {numberWithCommas(Math.round(cell.getValue()))}\n                      </div>\n                    ) : cell.row.original.lvl == 0 ? (\n                      <div\n                        className=\"ellipsis summary\"\n                        data-toggle=\"tooltip\"\n                        title={numberWithCommas(cell.getValue())}\n                      >\n                        {numberWithCommas(Math.round(cell.getValue()))}\n                      </div>\n                    ) : (\n                      <div\n                        className=\"ellipsis\"\n                        data-toggle=\"tooltip\"\n                        title={numberWithCommas(cell.getValue())}\n                      >\n                        {numberWithCommas(Math.round(cell.getValue()))}\n                      </div>\n                    )}\n                  </div>\n                );\n              },\n            };\n            subArray.push(obj);\n            // console.log(obj[\"header\"], \"---line 165\")\n            // console.log(obj[index]?.filter((d) => d.includes(\"NB %\")), \"=====obj\")\n            newHeaders[i].columns = subArray;\n          }\n        } else {\n          //console.log(\"key matched!\");\n          if (key == data.accessorKey) {\n            let obj = {\n              id: key,\n              header: value == null || value == 0 ? \"\" : <div>{value}</div>,\n              accessorKey: key,\n              enableSorting: true,\n              sortingFn: (rowB, rowA, columnId) => {\n                //console.log(rowB, \"rowB\");\n                //console.log(rowA, \"rowA\");\n                //console.log(columnId, \"columnId\");\n                const nameA = rowB.getValue(columnId).toLowerCase();\n                const nameB = rowA.getValue(columnId).toLowerCase();\n                return columnId == \"name\" && rowA.id != \"0\" && rowB.id != \"1\"\n                  ? nameA.localeCompare(nameB)\n                  : \"\";\n              },\n\n              Cell: ({ cell }) => {\n                //console.log(cell.column.id,\"cell.column.id \" );\n                // { cell.row.original.resource != \"\" && console.log(cell.row.original.name, \"----res\") }\n\n                return (\n                  <div\n                    className={\n                      cell.row.original.lvl == 0\n                        ? \"summary\"\n                        : cell.row.original.lvl == 1\n                          ? cell.column.id == \"name\"\n                            ? \"parentRow\"\n                            : (cell.column.id == \"emp_cadre\" ||\n                              cell.column.id == \"supervisor\") &&\n                            \"parentCadre\"\n                          : cell.row.original.lvl > 1 && cell.row.original.lvl < 6\n                            ? cell.column.id == \"name\"\n                              ? \"childRow\"\n                              : (cell.column.id == \"emp_cadre\" ||\n                                cell.column.id == \"supervisor\") &&\n                              \"childCadre\"\n                            : \"\"\n                    }\n                  >\n                    {cell.column.id == \"name\" &&\n                      cell.row.original != null &&\n                      (cell.row.original.name != null ||\n                        cell.row.original.name != \"Summary\") ? (\n                      <>\n                        {icons[cell.row.original[\"empStatus\"]]}\n                        <div\n                          className=\"ellipsis\"\n                          data-toggle=\"tooltip\"\n                          title={cell.getValue()}\n                        >\n                          {cell.getValue()}\n                        </div>\n                      </>\n                    ) : (\n                      <div\n                        className=\"ellipsis\"\n                        data-toggle=\"tooltip\"\n                        title={cell.getValue()}\n                      >\n                        {cell.getValue()}\n                      </div>\n                    )}\n                  </div>\n                );\n                // <div>\n                //     <p>i&nbsp;{cell.getValue()}</p>\n\n                // </div>\n              },\n            };\n            newHeaders[i].columns = [obj];\n          }\n        }\n      });\n    });\n\n    setColumns(newHeaders);\n    //console.log(countNw, 'countNw');\n    let values = [];\n    tableData?.map((d) => (d.id != -2 && d.id != -3 ? values.push(d) : \"\"));\n\n    //console.log(values, \"-------values\");\n    //console.log(tableData);\n\n    let tempData = jsonToTree(values, { children: \"subRows\" });\n    setNodes(tempData.slice(1, tempData.length));\n\n    console.log(jsonToTree(values, { children: \"subRows\" }), \"nodes\");\n  };\n  useEffect(() => {\n    getData();\n  }, [data.tableData]);\n  const expandT = () => {\n    count++;\n    getData();\n    setHiddenColumns({});\n  };\n  const expandF = () => {\n    getData();\n    // colCollapse()\n  };\n\n  useEffect(() => {\n    colExpFlag ? expandT() : expandF();\n  }, [colExpFlag]);\n\n  const colCollapse = () => {\n    let hiddenHeaders = [];\n    // refactor this\n    headers.map(([key, value]) => {\n      if (expandedCols.includes(key)) {\n        hiddenHeaders.push({ [key]: false });\n      }\n    });\n\n    setHiddenColumns(Object.assign({}, ...hiddenHeaders));\n  };\n\n  const jsonToTree = (flatArray, options) => {\n    options = {\n      id: \"uniqueId\",\n      parentId: \"parentId\",\n      children: \"subRows\",\n      ...options,\n    };\n    const dictionary = {}; // a hash table mapping to the specific array objects with their ids as key\n    const tree = [];\n    const children = options.children;\n    flatArray.forEach((node) => {\n      const nodeId = node[options.id];\n      const nodeParentId = node[options.parentId];\n      // set up current node data in dictionary\n      dictionary[nodeId] = {\n        [children]: [], // init a children property\n        ...node, // add other propertys\n        ...dictionary[nodeId], // children will be replaced if this node already has children property which was set below\n      };\n      dictionary[nodeParentId] = dictionary[nodeParentId] || { [children]: [] }; // if it's not exist in dictionary, init an object with children property\n      dictionary[nodeParentId][children].push(dictionary[nodeId]); // add reference to current node object in parent node object\n    });\n    // find root nodes\n    Object.values(dictionary).forEach((obj) => {\n      if (typeof obj[options.id] === \"undefined\") {\n        tree.push(...obj[children]);\n      }\n    });\n    return tree;\n  };\n\n  //expoprt\n  const exportExcel = () => {\n    let node = data.tableData;\n    let desiredColumnOrder = [];\n    desiredColumnOrder = colAr;\n    //console.log(desiredColumnOrder, 'desiredColumnOrder');\n\n    const wantedValues = node.slice(1).map((item) => {\n      const obj = {};\n      desiredColumnOrder.forEach((col) => {\n        let colss = col[0];\n        const value = item[colss];\n        if (typeof value === \"string\") {\n          const [extractedValue, ,] = value.split(\"^&\"); // Extract the value from the key metadata\n          obj[colss] = extractedValue; // Assign the extracted value to the corresponding column\n        } else {\n          obj[colss] = value;\n        }\n      });\n      return obj;\n    });\n\n    // Create an array of objects where each object represents a row\n    const rows = wantedValues.map((item) => {\n      const row = [];\n      desiredColumnOrder.forEach((col) => {\n        row.push(item[col]);\n      });\n      return row;\n    });\n\n    const workbook = new ExcelJS.Workbook();\n    const worksheet = workbook.addWorksheet(\"VendorPerformanceDetails\");\n    wantedValues.forEach((item) => {\n      const row = worksheet.addRow(Object.values(item));\n    });\n    //console.log(wantedValues, 'wantedValues');\n    const boldRow = [1, 2];\n    boldRow.forEach((index) => {\n      const row = worksheet.getRow(index);\n      row.font = { bold: true };\n    });\n    workbook.xlsx.writeBuffer().then((buffer) => {\n      saveAs(new Blob([buffer]), \"Vendor Performance.xlsx\");\n    });\n  };\n\n  //handle sort\n  const handleAbort = () => {\n    abortController.current && abortController.current.abort();\n    setLoader(false);\n  };\n\n  return (\n    <div>\n      <div className=\"materialReactExpandableTable VendorPerformanceTop darkHeader\">\n        {columns?.length ? (\n          <MaterialReactTable\n            columns={columns}\n            data={nodes}\n            enableExpandAll={true} //hide expand all double arrow in column header\n            enableExpanding\n            enablePagination={false}\n            //enableRowVirtualization\n            enableBottomToolbar={false}\n            enableTopToolbar={true}\n            // enableToolbarInternalActions = {true}\n            enableColumnActions={false}\n            //enableSorting={false}\n            filterFromLeafRows //apply filtering to all rows instead of just parent rows\n            initialState={{\n              expanded: false,\n              density: \"compact\",\n              columnVisibility: { ...hiddenColumns },\n              // enablePinning: true,\n              // columnPinning: { left: [\"mrt-row-expand\", \"name\"] },\n            }} //expand all rows by default\n            state={{ columnVisibility: { ...hiddenColumns } }}\n            //paginateExpandedRows={false} //When rows are expanded, do not count sub-rows as number of rows on the page towards pagination\n            defaultColumn={{ minSize: 40, maxSize: 1000, size: 40 }} //units are in px\n            muiTableBodyProps={{\n              sx: {\n                \"&\": {\n                  borderRight: \"1px solid #ccc\",\n                  borderBottom: \"1px solid #ccc\",\n                },\n                \"& td\": {\n                  borderTop: \"1px solid #ccc\",\n                  borderRight: \"1px solid #ccc\",\n                  fontSize: \"12px\",\n                },\n                \"& td:nth-of-type(2)\": {\n                  minWidth: \"280px\",\n                  maxWidth: \"280px\",\n                },\n                \"& tr:first-of-type td\": {\n                  background: \"#f5d5a7 \",\n                },\n              },\n            }}\n            muiTableHeadProps={{\n              sx: {\n                \"& th\": {\n                  borderTop: \"1px solid #ccc\",\n                  borderRight: \"1px solid #ccc\",\n                  background: \"#f4f4f4 \",\n                  fontSize: \"12px\",\n                },\n                \"& th:nth-of-type(2)\": {\n                  minWidth: \"280px\",\n                  maxWidth: \"280px\",\n                },\n              },\n            }}\n            renderTopToolbar={({ table }) => (\n              <>\n                <div class=\"group mb-3 customCard\">\n                  <div className=\"col-md-12 collapseHeader\">\n                    <h2 style={{ color: \"black\" }}>\n                      No. of Vendors : {countNw}\n                    </h2>\n                    <div className=\"mb-2\" align=\" right \">\n                      <RiFileExcel2Line\n                        size=\"1.5em\"\n                        title=\"Export to Excel\"\n                        style={{ color: \"green\" }}\n                        cursor=\"pointer\"\n                        onClick={exportExcel}\n                      />\n                    </div>\n                  </div>\n                </div>\n              </>\n            )}\n          //onOrderChange={(orderBy, orderDirection) => handleSort(orderBy, orderDirection)}\n          />\n        ) : null}\n      </div>\n      {loader ? <Loader handleAbort={handleAbort} /> : \"\"}\n      {openResource === true && openResourceNw == true ? (\n        <VendorPerformanceResourceTable\n          resourceData={rdata}\n          colorFilter={colorFilter}\n        />\n      ) : (\n        \"\"\n      )}\n    </div>\n  );\n}\n","import React, { useEffect, useRef, useState } from \"react\";\nimport { FilterMatchMode, FilterOperator } from \"primereact/api\";\nimport { DataTable } from \"primereact/datatable\";\nimport { InputText } from \"primereact/inputtext\";\nimport ExcelJS from \"exceljs\";\n\n// import \"./ErrorLogsTable.scss\";\n\nfunction VendorSearchTable(props) {\n  const {\n    data,\n    rows,\n    col,\n    headerdatagroup,\n    linkColumns,\n    linkColumnsRoutes,\n    dynamicColumns,\n    headerData,\n    setHeaderData,\n    exportData,\n    customFilters,\n    customFilterValue,\n    setCustomFilterValue,\n    fileName,\n  } = props;\n  const [mainData, setMainData] = useState([]);\n  const [bodyData, setBodyData] = useState([]);\n  // const [exportColumns, setExportColumns] = useState([]);\n  const dt = useRef(null);\n  useEffect(() => {\n    console.log(data);\n    setMainData(JSON.parse(JSON.stringify(data)));\n  }, [data]);\n\n  useEffect(() => {\n    if (mainData.length > 0) {\n      setHeaderData(mainData[0]);\n      setBodyData(mainData.splice(1));\n\n      let dtt = [];\n      let headDt = mainData[0];\n\n      Object.keys(headDt).forEach((d) => {\n        dtt.push({ title: d, dataKey: headDt[d] });\n      });\n      console.log(mainData);\n    }\n  }, [mainData]);\n\n  const filtersData = {\n    contains: { value: null, matchMode: FilterMatchMode.CONTAINS },\n  };\n\n  const [filters1, setFilters1] = useState({\n    global: filtersData[\"contains\"],\n  });\n\n  useEffect(() => {\n    setFilters1({\n      global: filtersData[\"contains\"],\n    });\n  }, [headerData]);\n  const [globalFilterValue1, setGlobalFilterValue1] = useState(\"\");\n\n  const clearFilter1 = () => {\n    initFilters1();\n  };\n\n  const initFilters1 = () => {\n    setGlobalFilterValue1(\"\");\n  };\n\n  const onGlobalFilterChange1 = (e) => {\n    const value = e.target.value;\n    let _filters1 = { ...filters1 };\n    _filters1[\"global\"].value = value;\n    setFilters1(_filters1);\n    setGlobalFilterValue1(value);\n  };\n\n  const RenderCustomFilters = () => {\n    let cstFtlrs = customFilters;\n    switch (cstFtlrs[\"type\"]) {\n      case \"select\":\n        return (\n          <select\n            id={cstFtlrs[\"id\"]}\n            onChange={(e) => {\n              setCustomFilterValue(e.target.value);\n            }}\n          >\n            {Object.keys(cstFtlrs[\"data\"]).map((d) => {\n              return (\n                <option\n                  selected={customFilterValue == d ? true : false}\n                  value={d}\n                >\n                  {cstFtlrs[\"data\"][d]}\n                </option>\n              );\n            })}\n          </select>\n        );\n        break;\n\n      default:\n        break;\n    }\n  };\n  const exportCSV = (selectionOnly) => {\n    dt.current.exportCSV({ selectionOnly });\n  };\n  const saveAsExcelFile = (buffer, fileName) => {\n    import(\"file-saver\").then((module) => {\n      if (module && module.default) {\n        let EXCEL_TYPE =\n          \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8\";\n        let EXCEL_EXTENSION = \".xlsx\";\n        const data = new Blob([buffer], { type: EXCEL_TYPE });\n        module.default.saveAs(data, fileName + EXCEL_EXTENSION);\n      }\n    });\n  };\n  const exportExcel = () => {\n    import(\"xlsx\").then((xlsx) => {\n      const headers = Object.keys(data[0]);\n      const uniqueHeaders = [...new Set(headers)];\n      const worksheetData = data.map((item) =>\n        uniqueHeaders.map((header) => item[header])\n      );\n      const dataRows = worksheetData.map((item) => Object.values(item));\n      const workbook = new ExcelJS.Workbook();\n      const worksheet = workbook.addWorksheet(fileName);\n      for (let i = 0; i < dataRows.length; i++) {\n        const row = worksheet.addRow(dataRows[i]);\n      }\n      const boldRow = [1];\n      boldRow.forEach((index) => {\n        const row = worksheet.getRow(index);\n        row.font = { bold: true };\n      });\n      workbook.xlsx.writeBuffer().then((buffer) => {\n        const blob = new Blob([buffer], {\n          type: \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",\n        });\n        saveAs(blob, fileName);\n      });\n      // const worksheet = xlsx.utils.aoa_to_sheet(worksheetData, {\n      //   skipHeader: true,\n      // });\n      // const workbook = { Sheets: { data: worksheet }, SheetNames: [\"data\"] };\n      const excelBuffer = xlsx.write(workbook, {\n        bookType: \"xlsx\",\n        type: \"array\",\n      });\n      saveAsExcelFile(excelBuffer, fileName);\n    });\n  };\n  const exportColumns = [\n    { dataKey: \"vendorId\", title: \"Vendor Id\", width: 27 },\n    { dataKey: \"vendor_name\", title: \"Vendor Name\", width: 25 },\n    { dataKey: \"contactName\", title: \"Contact Name\", width: 40 },\n    { dataKey: \"phone\", title: \"Phone\", width: 40 },\n    { dataKey: \"email\", title: \"Email\", width: 40 },\n    { dataKey: \"contryName\", title: \"Country Name\", width: 30 },\n    { dataKey: \"nxtRvwDt\", title: \"Next Review Date\", width: 25 },\n    { dataKey: \"signedDt\", title: \"Contract Signed Date\", width: 25 },\n  ];\n  console.log(data);\n  const exportPdf = () => {\n    import(\"jspdf\").then((jsPDF) => {\n      import(\"jspdf-autotable\").then(() => {\n        const doc = new jsPDF.default();\n        const headline = \"PPM :: VMG Search\";\n        doc.text(headline, 14, 15);\n        const modifiedData = [...data.slice(1)];\n        doc.autoTable({\n          columns: exportColumns,\n          body: modifiedData,\n          startY: 20,\n        });\n        doc.save(\"PPM VMG.pdf\");\n      });\n    });\n  };\n  const printTable = () => {\n    openPrintWindow();\n  };\n  const openPrintWindow = () => {\n    const printWindow = window.open(\"\", \"_blank\");\n    if (!printWindow) return;\n    const tableContent = generatePrintTableContent();\n    printWindow.document.write(`\n    <html>\n      <head>\n        <title>Print Table</title>\n        <link rel=\"stylesheet\" type=\"text/css\" href=\"path-to-your-print-styles.css\">\n      </head>\n      <body>\n        <h1>PPM :: VMG Search</h1>\n        ${tableContent}\n      </body>\n    </html>\n  `);\n    printWindow.document.close();\n    printWindow.print();\n  };\n  const generatePrintTableContent = () => {\n    const tableRows = data.map(\n      (data) =>\n        `<tr>\n      <td>${data.vendorId}</td>\n      <td>${data.vendor_name}</td>\n      <td>${data.contactName}</td>\n      <td>${data.phone}</td>\n      <td>${data.email}</td>\n      <td>${data.contryName}</td>\n      <td>${data.nxtRvwDt}</td>\n      <td>${data.signedDt}</td>\n      <td>${data.expireDt}</td>\n      <td>${data.website}</td>\n    </tr>`\n    );\n    return `\n    <table>\n      <thead>\n        <tr>\n       \n        </tr>\n      </thead>\n      <tbody>\n        ${tableRows.join(\"\")}\n      </tbody>\n    </table>\n  `;\n  };\n\n  const renderHeader1 = () => {\n    return (\n      <div className=\"flex  flex-row-reverse\">\n        {customFilters != undefined && (\n          <span>\n            <RenderCustomFilters />\n          </span>\n        )}\n        <div className=\"exportBtn ml-3\">\n          {exportData?.includes(\"CSV\") && (\n            <span\n              className=\"pi pi-file csv\"\n              onClick={() => exportCSV(false)}\n              title=\"CSV\"\n            />\n          )}\n          {exportData?.includes(\"XLS\") && (\n            <span\n              className=\"pi pi-file-excel excel\"\n              onClick={exportExcel}\n              title=\"Export to Excel\"\n            />\n          )}\n          {exportData?.includes(\"PDF\") && (\n            <span\n              className=\"pi pi-file-pdf pdf\"\n              onClick={exportPdf}\n              title=\"PDF\"\n            />\n          )}\n          {exportData?.includes(\"PRINT\") && (\n            <span\n              className=\"pi pi-print print\"\n              onClick={printTable}\n              title=\"Print\"\n            />\n          )}\n        </div>\n        <span className=\"p-input-icon-left tableGsearch\">\n          <i className=\"pi pi-search\" />\n          <InputText\n            defaultValue={globalFilterValue1}\n            onChange={onGlobalFilterChange1}\n            placeholder=\"Keyword Search\"\n          />\n        </span>\n      </div>\n    );\n  };\n  const header1 = renderHeader1();\n  return (\n    <div className=\"darkHeader\">\n      {Object.keys(headerData).length > 0 && (\n        <DataTable\n          paginatorTemplate=\"RowsPerPageDropdown FirstPageLink PrevPageLink CurrentPageReport NextPageLink LastPageLink\"\n          currentPageReportTemplate=\"{first} to {last} of {totalRecords}\"\n          rowsPerPageOptions={[10, 25, 50]} //------------->\n          value={bodyData}\n          paginator\n          sortMode={false}\n          showGridlines\n          rows={rows}\n          dataKey=\"id\"\n          filters={filters1}\n          // responsiveLayout=\"scroll\"\n          header={header1}\n          emptyMessage=\"No Records found.\"\n          ref={(el) => {\n            dt.current = el;\n          }}\n          className=\"primeReactDataTable vendorResourceTable\"\n        >\n          {dynamicColumns}\n        </DataTable>\n      )}\n    </div>\n  );\n}\nexport default VendorSearchTable;\n"],"names":["props","useState","anchorEl","setAnchorEl","name","setName","setSearchApiData","data","setData","backupdata","setBackUpData","setBackUpDataNw","bodyDataa","flag","vendorId","tableTitle","colorFilter","summaryData","validationMsg","contractIds","searchHandle","exportData","setExportData","headerData","setHeaderData","setBodyData","setColorsState","resourceTable","setResourceTable","LinkId","setLinkId","allocationtable","setAllocationTable","graphRef1","useRef","graphKey1","setGraphKey1","vendor","setVendor","searchValue","setSearchValue","open","setOpen","validColor","setValidColor","value","setValue","firstColor","secondColor","thirdColor","contractType","contract","contract_hire","freelancer","fixed_bid","offered","on_exit_path","conv_in_prog","awaiting_conv","skillType","useEffect","axios","then","Response","vendors","length","forEach","e","vendorObj","label","id","push","catch","error","console","log","current","scrollIntoView","behavior","d","Date","year","getFullYear","month1","getMonth","day","getDate","c","date","moment","format","initialData","buIds","country","fromDate","toDate","lkKey","skillId","isExport","page","custId","projId","buId","Headerdata","employee_number","resource_name","start_date","department","supervisor","skills","projects","bill_allocs","bill_rate","pay_rate","gm_perc","alloc_end_date","contract_end_date","ad_contract_end_date","vendor_name","contract_type","skill_type","baseUrl","environment","Table","method","url","response","hData","bData","index","concat","colors","map","element","alloc_contract_date_icon","split","finalColors","Set","filteringColors","table1","className","table2","table3","tableNew","tooltipDept","title","tooltipSupervisor","tooltipProject","tooltipSkills","allocDtAlign","contractDtAlign","empNumber","billAllocs","billRate","payRate","gmPerc","allocEndDate","VendorName","contractTypes","StartDate","skillTypes","expDtAlign","LinkTemplate","onClick","event","handleClick","resource_id","currentTarget","to","Popover","style","color","cursor","handleChange","rowData","field","updatedData","rowIndex","findIndex","item","document","addEventListener","handleOutsideClick","removeEventListener","inputTwo","col","rId","isvNameInItems","some","indexWhereMatched","ReactSearchAutocomplete","items","type","inputSearchString","onSearch","result","toLowerCase","handleSearch","onSelect","fuseOptions","keys","resultStringKeyName","showNoResults","showClear","placeholder","showIcon","inputThere","onChange","target","selected","inputFour","inputFive","dateFormat","onKeyDown","preventDefault","showMonthDropdown","showYearDropdown","placeholderText","dynamicColumns","Object","i","sortable","header","width","body","setValidation","v","resourcedate","loggedUserId","localStorage","getItem","getResourceTable","formattedMonth","dates","startOf","add","dt","setDt","Src","Typ","ObjectId","FromDt","AllocType","PrjSource","contTerms","engComps","cslIds","dpIds","UserId","res","componentMounted","setComponentMounted","VendorSearchTable","rows","fileName","Popup","handleClose","paddingLeft","ref","size","prev","subtract","fontSize","backgroundColor","ForecastProjectPopUp","linkId","expandedCols","colExpandState","align","postData","validNw","arr1","arr2","obj1","obj2","key","hasOwnProperty","areArraysOfObjectsEqual","count","obj","vendorName","backupVendorName","contractDate","is","vendor_id","ele","lkup_name","handleSubmit","summaryDataNw","formData","formattedFromDate","toDateFromDate","setRefresh","validationM","refresh","alldepartments","allcountries","abortController","displayTable","setDisplayTable","displayHeader","setDisplayHeaders","bodyData","srtTableTitle","setColorFilter","setContractIds","setSummaryData","openNw","setOpenNw","tabHeaders","displayTableFnc","onclickHandler","a","b","temp","AbortController","signal","headers","colorFind","tabHeader","inEle","inInd","includes","replaceAll","textAlign","slice","tabData","viewBy","Resources","Refresh","colorFilterR","ResourceEditable","sdate","_d","startDate","setStartDate","validator","setValidator","endDate","setendDate","setCountry","selectedCountry","setSelectedCountry","departments","setDepartments","selectedDepartments","setSelectedDepartments","visible","setVisible","FaChevronCircleUp","cheveronIcon","setCheveronIcon","loader","setLoader","formDataNew","setFormDataNew","validation","allDept","setAllDept","allCountry","setAllCountry","targetElementRef","routes","setRoutes","ArrowRenderer","expanded","customValueRenderer","_options","setFormData","countryList","prevVal","toString","getDepartments","resp","filter","filteredDeptData","countries","countryObj","country_name","display_name","getElementsByClassName","children","innerText","scrollToTarget","html","documentElement","Math","max","scrollHeight","offsetHeight","clientHeight","top","block","inline","handleAbort","abort","ScreenBreadcrumbs","currentScreenName","class","GlobalHelp","FaChevronCircleDown","options","hasSelectAll","isLoading","shouldToggleOnHover","disableSearch","valueRenderer","disabled","s","filteredValues","filteredCountry","dropdownMode","frmdate","currdate","FromDateChangeHandler","minDate","ToDateChangeHandler","edit","buDmCls","getElementById","classList","cuDmCls","contains","remove","departmentArray","countryArray","setTimeout","Loader","allVendor","selectedVendor","setSelectedVendor","setDate","performanceData","setPerformanceData","converteddate","initialValue","vendorList","month","duration","countryIds","summary","FilterChangeHandler","vendorsList","handleChangeDate","showMonthYearPicker","defaultValue","labelledBy","GlobalValidation","VendorPerformanceTable","NonBillableCollapsibleTable","icons","fte0","src","fte_inactive","alt","height","float","fte1","fte_active","fte2","fte_notice","subk0","subk_inactive","subk1","subk_active","subk2","subk_notice","nodes","setNodes","columns","setColumns","hiddenColumns","setHiddenColumns","colExpFlag","setColumnExpFlag","setHeaders","numberWithCommas","x","number","String","num","Number","final","toLocaleString","minimumFractionDigits","maximumFractionDigits","replace","padEnd","join","parseFloat","formatValue","getData","tableData","expandClass","colArr","newHeaders","hiddenHeaders","colVal","trim","firstData","filteredHeaders","entries","pair","assign","accessorKey","enableColumnActions","enableHiding","Header","column","IconButton","Cell","cell","nameWithoutSpecialChars","getValue","whiteSpace","overflow","textOverflow","row","original","projectId","total","lvl","emp_cadre","values","jsonToTree","expandT","expandF","flatArray","parentId","dictionary","tree","node","nodeId","nodeParentId","enableExpandAll","enableExpanding","enablePagination","enableBottomToolbar","enableTopToolbar","enableSorting","filterFromLeafRows","initialState","density","columnVisibility","enablePinning","state","defaultColumn","minSize","maxSize","enableStickyHeader","muiTableContainerProps","sx","maxHeight","maxWidth","muiTableBodyProps","borderRight","paddingTop","paddingBottom","muiTableHeadProps","borderTop","background","padding","fontWeight","selectedDeptid","setSelectedDeptId","deptId","setdeptId","searchDataC","setSeachDataC","contractTermsId","setContractTermsId","searchDataB","setSearchDataB","generateDropdownLabel","selectedOptions","allOptions","selectedValues","option","allValues","setBuValues","setSelectBuValues","setCountries","setSelectCountry","details","setDetails","validationmessage","setValidationMessage","displaytable","tableData1","filteredRows","patternToExclude","formatDate","week","parts","endsWith","resource","hours","filteredResources","project","filteredDates","filteredHours","test","getMenus","modifiedUrlPath","subMenus","url_path","getUrlPath","allocData","selectAllocData","setSelectAllocData","bussinessUnitDepartment","setTableData","currentDate","getCounData","err","getBUval","pdfname","htmlFor","filterB","valid","detail","cols","fontStyle","marginTop","customHeaders","columnOrder","dataRows","matches","match","matchesProejct","workbook","ExcelJS","worksheet","addWorksheet","headerRow","addRow","dataRow","getRow","font","bold","xlsx","writeBuffer","buffer","saveAs","Blob","getAllNames","inputString","regex","resultList","exec","setPostDataDetails","projectnames","setProjectnames","pid","setPid","pmId","setPmId","update","setUpdate","sortField","setSortField","sortOrder","setSortOrder","sortAscending","setSortAscending","handleSort","ascending","headerGroup","rowSpan","onSort","colSpan","pln_efforts","filtersData","matchMode","FilterMatchMode","global","setFilters1","mainData","setMainData","splice","representative","status","verified","filters","setFilters","globalFilterValue","setGlobalFilterValue","onGlobalFilterChange","_filters","formatNumber","exportExcel","ProjectName","project_name","PrimaryManager","prj_pm_name","Comp","prj_compltn","Terms","ct_term","Count","res_count","Plans","EACs","eac_efforts","Vars","var_efforts","Plan","pln_gm","Eac","eac_gm","Var","var_gm","Critical","critical_risks","High","high_risks","Meduim","med_risks","Low","low_risks","AuditDate","audit_date","AuditResult","audit_result","CSATDate","csat_date","CSATResult","csat_result","Sheets","XLSX","SheetNames","excelBuffer","bookType","saveAsExcelFile","marginLeft","practiceData","setPracticeData","selectedPractice","setSelectedPractice","setPractices","selectedPractice1","validationMessage","bussinessUnit","setBussinessUnit","selectedBussinessUnit","setSelectedBussinessUnit","selectedData","setLoading","numbersString","setBusinessUnit","setAuditTypes","setDisplayState","loadingState","setLoadingState","setNotifyPmData","allocTypes","fullAccessBu","fullselectedBU","setFullselectedBU","contractTerms","selectedContractTerm","setSelectedContractTerm","setSearchdataPs","customersData","setCustomersData","selectedCustomers","setSelectedCustomers","setSelectedCustomersNull","setCustomer","setSearchApi","notify_pms","JSON","parse","stringify","isShow","setIsShow","nullSelectedBusiness","location","useLocation","URLSearchParams","search","get","editmsg","setEditAddmsg","filterData","setFilterData","dataAccess","setDataAccess","menu","subMenu","textContent","revenueForcastSubMenu","find","accessLevel","userRoles","acessLevel","practiceId","customer","BU","projectStatus","countryId","auditType","updatePractice","updatePracticeaccess","updateBuids","updateCustomer","updatecontractTerms","updatecountry","updateStatus","getCountries","CustomerPracticeR","CustomerPracticeRSavedSearch","handleClickSavedSearch","getData1","customerId","contractTermId","prjStatus","toDt","countryName","custom","dpObj","group_name","notifyPm","data1","projectName","getPageData","pageNumber","auditPerPage","pagesVisited","howMany","parseInt","textDecoration","prj_id","ceil","SavedSearchGlobal","pageurl","page_Name","payload","filterPractice","sortedData","sort","valueA","valueB","editMode","dataKey","onFilter","rowsPerPageOptions","showGridlines","paginator","paginationPerPage","headerColumnGroup","paginationRowsPerPageOptions","paginationComponentOptions","rowsPerPageText","rangeSeparatorText","responsiveLayout","rowClassName","legendElement","marginRight","pointerEvents","val","alignItems","ct_title","toFixed","floor","formattedValue","BillableUtilizationTrendCollapsibleTable","unWantedCols","C","subHeaders","indexOf","subArray","subkey","minusOneRow","tempData","finalData","enableRowVirtualization","columnPinning","right","left","borderBottom","searchp1","setSearchp1","business","setBusiness","bunit","setBunit","countryids","setcountryids","setSelectedBusiness","csl","setCsl","selectedcsl","setSelectedcsl","selectedcustomer","setSelectedcustomer","dp","setDp","selecteddp","setSelecteddp","initialMonth","setFullYear","setMonth","selectedDuration","setSelectedDuration","durationOptions","setDurationOptions","maxDate","searchType","SetSearchType","resType","setRestype","BuIds","CountryIds","FromDate","Duration","serarchVals","undefined","bussinessunits","CustomersList","customerobj","fullName","CSlList","cslobj","PersonName","dpList","dpobj","countryobj","sortedCountryList","localeCompare","E","zIndex","selectedMonth","currentMonth","monthsDiff","Array","_","excludeProperties","desiredHeaderOrder","filteredDateBasedHeaders","from","flatMap","headerRow1","filteredData","fromEntries","staticColumns","setActiveProjectsByCustomer","setShowcslproject","activeProjectsByCustomer","setShowacchieDataTable","setShowcslHieTable","showacchieDataTable","loader1","setLoader1","loaderTime","project_code","clearTimeout","getActiveProjectsByCustomer","customer_id","AW","CSL","CSLHead","DP","ACSL","DPHead","AE","TP","PC","SQA","partner_name","account","role","colCollapse","newNode","emptyMessage","minWidth","MinusSquare","PlusSquare","TransitionComponent","useSpring","opacity","transform","in","Collapse","TeamsProjectHierarchyTree","React","defaultExpandedRows","setFlag","hierarchydata","hierarchyCount","setDataProjectId","hierarchy","flatArrayData","projectFromDate","projectToDate","tdate","a1","addFolderIcon","params","boxes","bb","box","tagName","spn","createElement","innerHTML","appendChild","CustomContent","classes","iconProp","icon","expansionIcon","displayIcon","useTreeItem","focused","handleExpansion","handleSelection","preventSelection","handleSelectionClick","splitdata","propData","roleId","fData","competenciesTable","processedLabel","processBoldContent","child","clsx","root","onMouseDown","iconContainer","Typography","component","StyledTreeItem","styled","TreeItem","ContentComponent","Box","display","p","pr","mr","variant","flexGrow","text","parent","isArray","subrows","renderTree","theme","treeItemClasses","borderLeft","alpha","palette","primary","minHeight","overflowY","TreeView","defaultExpanded","defaultParentIcon","defaultCollapseIcon","defaultExpandIcon","defaultEndIcon","minwidth","prevProps","currentProps","projectHierarchy","searchProjecthierarchy","setShowprojectHie","showprojectHie","projectHierarchy1","searchinghierarchy","setSearchingHierarchy","setHierarchyCount","setHierarchyData","setState","setProjectId","getPrjRolesTree","typ","prjId","dat","cleanedText","globalFilter","setGlobalFilter","cName","pName","stripedRows","alignHeader","pId","setShowacctHieTable","full_name","subRows","AdminHierarchy","popDocFolderId","ac","setAc","resourceId","searchHierarchy","setSearchHierarchy","loggerUserName","hierarchyname","setHierarchyname","click","newData","parent_id","parentItem","getHierarchyData","collectedParentIds","reversedIds","setExpanded","expandedSatyanarayana","setExpandedSatyanarayana","expandedSupervisorOrphans","setExpandedSupervisorOrphans","supervisorOrphansNode","SatyanarayanaNode","selectedNodeId","setSelectedNodeId","selectedElement","querySelector","has_childs","findNodeAndCollect","targetId","path","parentIds","childNode","rootNode","reverse","shouldOpenDefault","nodeIdToExpand","arraysEqual","isAutomaticExpansionDone","setAutomaticExpansionDone","idsToExpand","oldExpanded","newExpanded","reversedCopy","nodesToExpand","mb","border","borderCollapse","verticalAlign","ExpandMore","ChevronRight","onNodeToggle","nodeIds","onNodeSelect","searching","setSearching","setViewBy","selectedType","setSelectedType","setProjectHierarchy","setDpList","selectedDpList","setSelectedDpList","acchieCustlist","setAcchieCustlist","selectedacchieCustlist","setSelectedacchieCustlist","proHieCust","setProHieCust","selectedproHieCust","setSelectedproHieCust","cslList","setCslList","selectedCslList","setSelectedCslList","showcslproject","prj","acct","getCustomerCSLList","terms","termsObj","getCustomerDelParatnerList","getaccHierarchyCustlist","terms1","termsObj1","getCustomerByDPList","setSearchProjectHierarchy","showacchieTable","setShowacchieTable","setNodeClicked","searchAdminHierarchy","setSearchAdminHierarchy","warnMsg","setWarnMsg","showacctHieTable","showcslHieTable","hieprojectId","setHieProjectId","getPrjRolesTreAccHie","filteredCustomer","getPartnerAccountHierarchy","getPartnerAccountHierarchyDp","dplList","getProjectHierarchy","getAccountHierarchy","iconName","setIconName","Boolean","disablePortal","arrow","onClose","anchorOrigin","vertical","horizontal","transformOrigin","DialogContent","UtilizationFyCollapsibleTable","showPopup","setShowPopup","headerArray","position","isNullValue","selectedBusiness","allocType","setAllocType","selectedAllocType","setSelectedAllocType","manger","updatebuids","updateCountry","updateallocType","getTableData","res1","defaultSelected","overrideStrings","selectAllFiltered","selectSomeItems","headerMapping","ytd","qtd","nxt30_days","nxt60_days","average","dateHeaderMapping","originalHeaders","getChartOptions","cadre","every","y","chart","fontFamily","tooltip","enabled","plotOptions","pyramid","reversed","series","dataLabels","softConnector","center","margin","showInLegend","credits","legend","funnel","Highcharts","headerDat","setHeaderDat","setFilter","chartOptions","setChartOptions","mainDataKeys","filteredKeys","j","nObj","beforeUnderScore","dd","fBefore","arr","objct","headerText","isCadreOrIdeal","updatedBodyData","displayData","chartOption","columnHeader","rowHover","highcharts","customers","setCustomers","setProjects","selectedProjects","setSelectedProjects","selectedCsl","setSelectedCsl","selectedDp","setSelectedDp","HeaderData","setDisplayTableState","BUValue","setBUValue","CustValue","setCustValue","visible1","setVisible1","initialCslState","diablingCustomer","setDiablingCustomer","diablingProject","setDiablingProject","multiRole","searchdata","setSearchdata","setData2","setOptions","UsersData","updatedOptions","hasCSLRole","hasDPRole","setSelectedOption","pyramidIndexSubMenu","getCsl","getDP","ff","filteredCustData","cc","filteredProjData","sortedcities","nameA","toUpperCase","nameB","selectedOption","resetPropertiesMap","GetData","deletePopup","deleteMyDashboardData","editId","deleteid","setDeletePopup","setAddmsg","setGetData","setGetTableData","linkColumns","setLinkColumns","sectionStates","setSectionStates","deleteId","setDeleteId","tableId","setTableId","tableName","setTableName","getMyDashboardData","getMyDashboardTablesData","sessionName","dataHeaders","SNo","search_name","date_created","Action","toggleSection","section","prevState","SnoAlign","CreatedDate","LinkTemplateName","page_url","modifiedUrl","RegExp","useNavigate","urlWithHash","updatedUrlWithHash","window","handleLinkClick","columnStyle","CellRendererPrimeReactDataTable","justifyContent","scrollTo","buttonState","setButtonState","addmsg","Pipeline","MyDashboard","SavedSearch","Reviews","ScoreCard","Opportunities","OpportunityEdit","sfReports","Attainment","Progress","RoleView","Software","Service","viewAndUpload","roleApprovals","costRoleGrid","OpenTopMenu","VendorPerformance","vendorDoc","loginHistory","Overview","projectOpen","Enagagement","projectInvoiceDetails","RevenueMarginVariance","HeadcountMarginTrend","MonthlyPRChangesByDay","MonthlyRevenueForecastment","RevenueMarginAnalysis","MonthlyRevenueTrend","RevenueByIndustry","RevenueProjections","RolesPermission","ContractDocuments","JobDailyStatus","RoleCosts","QBR","financialplanservice","rolemapping","ContractorCosts","InnovationDashboard","UploadRoleCost","SolutionMapping","View","ProjectInvoiceDetails","ProjectStatusReport","EngagementAllocations","Documents","forecastSupply","benchMatrix","resourceRequest","demandAndSupply","staffingGM","subkconversiontrend","reports","csat","auditcpsetup","pcqa","nps","qms","NPSSurveyQuestions","CSATSurveyQuestions","teams","teamsProfile","fixedPriceCreate","fixedPriceOpen","fillTimesheets","tnmOpen","shiftAllowances","lockTimesheets","expenses","DashboardAllocation","helpcontents","releasenotes","CompetencyDashboard","engDashbord","HammerTool","customerDashboard","profileopen","Accounting","Tracker","ErrorLogs","ReportIdComponent","Baselines","projectCreate","customerCreate","projectOverViewEdit","Invoice","compareBaseLineNew","SalesPermissions","salesUpload","projectEdit","routesData","PipelineTrending","Management","VendorManagement","Performance","Scorecard","RevenueAttainmentMetrics","WeeklyPipelineProgress","Vendors","Projects","Engagements","Customers","RoleMapping","UploadRoleCosts","Investment","MonthlyRevenueForecast","MonthlyPRChangesbyDay","RolesPermissions","JobsDailyStatus","Search","InvoiceDetails","NonBillableWork4Weeks","ProjectHealth","BillableUtilizationTrend","BillableUtilisationTrend","Hierarchy","UtilisationFY","CustomDashboard","PyramidIndex","SalaryBand","BenchMetrics","SubkConversionTrend","ResourceRequest","DemandAndSupply","Reports","PCQA","NPS","CSAT","QMS","AuditCPSetup","Profile","Skills","FillTimesheets","ShiftAllownaces","LockTimesheets","Expenses","AllocationDashboard","HelpContents","SavedSearches","ReleaseNotes","Open","Upload","staticRoutesData","ExpenseStackView","AppContent","setRoutesData","getRouterMenus","routesDt","subMenusRawData","formattingSubMenusRawData","routePathData","fluid","Suspense","fallback","route","idx","exact","disp","setDisp","dispatch","useDispatch","sidebarShow","useSelector","appHeaderState","userName","userId","lastUpdatedDt","loginCount7Days","loginCount30Days","navigate","dropdownRef","profileImgSrc","setProfileImgSrc","activeTheme","setActiveTheme","handleThemeChange","setItem","setProperty","storedTheme","storedMainTheme","homeScreenmsg","selectedSEState","homeScreenMessage","homeScreenSubmenuName","homeScreenSubmenu","handleClickOutside","set","cilMenu","Avatar","blueTheme","orangeTheme","greenTheme","clear","subMenueId","subMenueName","updateSubmenuName","borderBottomLeftRadius","borderBottomRightRadius","updateHomeScreenmsg","reload","AppSidebarNav","setSubMenueId","setSubMenueName","getHomeScreenId","setGetHomeScreenId","navLink","badge","navItem","rest","Component","NavLink","userActionId","navGroup","fromCharCode","toggler","pathname","startsWith","AppSidebar","unfoldable","sidebarUnfoldable","menusData","setMenusData","removingHideClass","mainContentMenu","subMenusData","CNavGroup","subMenuDtt","subMenusDttt","formattingSubMenus","CNavItem","cilStar","customClassName","subMenusDt","singleMenu","onVisibleChange","headerdatagroup","linkColumnsRoutes","customFilters","customFilterValue","setCustomFilterValue","exportColumns","setExportColumns","dtt","headDt","filters1","globalFilterValue1","setGlobalFilterValue1","onGlobalFilterChange1","_filters1","RenderCustomFilters","cstFtlrs","uniqueHeaders","worksheetData","floatValue","isNaN","isValid","blob","exportPdf","jsPDF","doc","default","autoTable","save","printTable","openPrintWindow","printWindow","tableContent","generatePrintTableContent","write","close","print","tableRows","contactName","phone","email","contryName","nxtRvwDt","signedDt","expireDt","website","header1","selectionOnly","exportCSV","paginatorTemplate","currentPageReportTemplate","el","submenuClicked","setSubmenuClicked","handleMenuClose","handleParentClick","handleMenuOpen","renderSubMenuItems","urlPath","stopPropagation","handleSubMenuClick","isLast","isActive","hasSubMenus","itemClass","homepath","active","href","paper","renderBreadcrumbItem","excelUploadPopUp","setExcelUploadPopUp","excelFile","setExcelFile","uploadExcelSheet","getResourcesCostData","stateValue","setLoaderTimer","updateMsg","setUpdateMsg","excelSheetValidation","setExcelSheetValidation","confirmationMsg","setConfirmationMsg","disable","setDisabled","uploadFileHandler","SalaryBandUploadSampleFile","resourcesCostListSampleFile","for","fileType","files","excelFormData","FormData","append","secretKey","onFileChangeHandler","setsearching","controller","time","setTime","interval","setInterval","clearInterval","require","reportsHeader","reportId","permission","pdf","columnWidths","colStyles","cellWidth","startY","styles","halign","cellPadding","lineWidth","lineColor","textColor","headStyles","fillColor","alternateRowStyles","rowStyles","tableLineColor","columnStyles","setCheckedData","checkedData","setCheckValidation","checkboxSelect","setCheckboxSelect","selection","onSelectionChange","selectionMode","rowGroupMode","groupRowsBy","rou","openPopup","setOpenPopup","pdfPath","backdrop","setSection","setType","comments","setComments","dashboardType","setDashboardType","pageName","setPagename","SelectSEData","directSETreeData","apiUrl","getDatas","inputValue","list","borderRadius","searchName","pageUrl","otherExecs","savedSections","executives","criticality","setCheckedData1","grp4Items","f","is_write","loggedUserName","checkedData1","projectData","setProjectData","baselineVersion","setBaselineVersion","excludedCols","displayColumns","iconState","dataObject","version_number","version_name","created_by","getProjectOverviewData","versionnumber","versionname","datecreated","createdby","baselineVer","paddingRight","CreatedById","level","tabledata","pprs","ProjectCompareBaselineTable","rowExpand","displayTableData","setDisplayTableData","displayCols","setDisplayCols","FaChevronCircleRight","hideColumns","indexObj","displayRowExpand","attributes","nodeValue","labelCheckArr","headerCell","overflowX","displayRowEdit","setDisplayRowEdit","documentRender","setdocumentRender","SetDate","SetEndDate","category","setcategory","setDepartment","setEmail","division","setDivision","enguagement","setEnguagement","currency","setCurrency","holiday","setHoliday","setWeek","setSupervisor","setResource","resource1","setResource1","resource2","setResource2","resource3","setResource3","setContract","phase","setPhase","ponumber","setponumber","successfulmessage","setSuccessfulmessage","enguagementType","setEnguagementType","service","setService","effort","setEffort","selectedKeys","setSelectedKeys","targetKeys","setTargetKeys","selectedFile","setSelectedFile","projectNamesArr","setProjectNamesArr","uniqueMessage","setUniqueMessage","docType","setDocType","setMail","projectCode","holidayCalendarId","weekCalendarId","approvingCostCenterId","typProjectCatId","typContractTermsCatId","typSchedulingModeId","typTimeEntryModeId","isBillable","isOpenForTime","isOpenForExpenses","plannedStartDt","plannedEndDt","isPrjStatus","UnitOfMeasure","isTaskPlanUpload","currencyId","isUsageReq","isUtilizationReq","preliminaryStartDt","preliminaryEndDt","projectHealthId","prjHealthUpdatedDate","projectdivisionId","projectPhase","source","isDeliverable","sfEngTypeId","serviceOfferingId","businessUnit","divisionId","engagementId","teamLocationId","effortTypeId","projectExecMethodId","loggedId","deliveryManager","primaryManger","projectRequestor","projectApproval","facilitator","pcqaType","clientEmail","PoNumber","resourceFnc","effortTypeFnc","offering_name","displayDocumentRender","getCustomerId","divisionFnc","customer_emails","emailFnc","getCustomer","enguagementFnc","getDivisionId","eid","engagementTypeFnc","conractTermsFnc","getcurrencyId","getEffortId","code","getCode","required","getName","getProjectId","Item","project_category_name","buChange","effort_name","input","getCode1","getUnitsOfMeasureId","description","getCode2","calendar_name","onClear","user","resorseId","cust","listStyle","dataSource","nextTargetKeys","onSelectChange","sourceSelectedKeys","targetSelectedKeys","render","Value","getclientEmail","file","model","btnState","ProjectExpensePopOver","handlePopoverClose","onMouseEnter","onMouseLeave","disableRestoreFocus","resDtl","dateFlag","custRoles","SetCustRoles","getTraining","role_types","roleTypes","resper","setdateFlag","setLinkColumnsRoutes","LinkfromDate","LinktoDate","LinkallocType","LinknoOfHrs","noOfHrs","getResProjectDtls","handleRadioChange","checked","prjRoles","SetPrjRoles","getProjectRoles","reporteeDetails","LinkName","LinkLongTitle","empName","long_title","Dispstar","DisplayStar","skillRating","skill_rating_id","Linkgroup_name","Linkdisplay_name","Linkskill_category","Linkexperience","Linklast_used","Linkskill_status","skill_category","experience","last_used","skill_status","resDtlHierarchy","training","setTraining","dateFlag1","setdateFlag1","Linkcourse","LinkregistrationDate","LinkcompletionDate","course","registrationDate","completionDate","Tooltip","TeamsProfileHierarchy","resId","hierarchyCopy","expandedIds","getAllNodeIds","ids","subRow","firstResId","bool","setBool","useParams","updatedResId","FirstProfileId","firstId","IoIosArrowBack","setArrowBack","employeeData","setEmployeeData","resourceName","setResourceName","errorMsg","setErrorMsg","setResper","issueDetails","setIssueDetails","getResProfileData","getResProfile","resName","upwardHierarchy","setUpwardHierarchy","setResDtl","ResourceID","getResPersonalData","getResPersonalData1","visibleC","setvisiblec","defaultValues","department_id","hierarchyTree","onSearchClick","getEmployeeData1","getUpwardHierarchy1","IoIosArrowForward","cleanedName","designation","empType","gender","emailID","citizenship","gCapacity","joiningDate","res_endDate","user_status","nCapacity","SfOwnerDivision","renewalDate","getResProfileSubContract","external_email","resource_manager","cost_rate","comp_category","eligibility_rehire","external_comp_name","displayHierarchyHead","treeStyles","fill","handletree","onSubmit","content","canHide","rating","updatedDateBody","generateBodyWithTooltip","resourcedata","Id","rowspan","resourcecapType","Name","B","enableGlobalFilter","enableDensityToggle","enableFullScreenToggle","enableColumnFilters","showGlobalFilter","muiSearchTextFieldProps","MarginAnalysisHierarchy","setResName","loading","filteredHierarchy","folderOrder","setFolderOrder","iconStyle","gap","events","popUp","getSearch","SetPopUp","resLocation","setResLocation","roletype","loaderTimer","deletePopUp","setDeletePopUp","updatedMessage","setUpdateMessage","deleteMessage","setDeleteMessage","validMessage","setValidMessage","addrow","setAddRow","successMessage","setSuccessMessage","historyData","setHistoryData","historyPopUp","setHistoryPopUp","salValidation","SetSalValidation","link","max_salary","min_salary","Country_id","roleType","role_type_id","roleCost","role_cost","minSal","maxSal","createdBy","createdDate","created_date","updatedBy","updatedDate","HistoryTable","FlatPrimeReactTableRevenue","DeletePopUp","deleteRecord","alignment","AddRow","initialvalue","addformData","setAddFormData","salaryvalidation","setSalaryValidation","prevprops","keyCode","postNewRecord","Save","setAttribute","cancelIcon","updatedTableData","FileUpload","onRowEditComplete","_category","pagination","paginationperpage","paginationrowsperpageoptions","role_type","editor","editorCallback","resource_cnt","updated_date","getHistory","bodyStyle","rowEditor","UploadExcelSheet","selectedResLocation","setSelectedResLocation","setRoleType","selectedRoleType","setSelectedRoleTypes","dept","ResLocation","filteredlocationData","RoleType","filteredroleTypes","filteredroles","empDetails","setEmpDetails","setAutoCompleteValidation","formEditData","setFormEditData","profiledata","setProfiledata","handleTeamsSelect","user_id","object_id","success","Empname","DisplayTable","loaderState","setLoaderState","setShowVisaDtl","showVisaDtl","visaDetails","setVisaDetails","storevisaDetails","setStroreVisaDetails","resorceName","setResourcename","getVisaDetails","phoneAlign","resVisaStat","resUserId","resNameToolip","resSupNameAlign","resSupName","resDeptToolip","resDept","resLobToolip","resLob","resTitleToolip","resTitle","citizenshipAlign","resCitizenship","resLocationToolip","resRoleAlign","resRole","resNotesAlign","resNotes","visaType","visaNumber","issuedDate","validUpto","resourcelobcategory","selectedReslobcategory","setSelectedReslobcategory","logged","setlogged","setDisplay","resBusinessUnit","resStatus","resBillableType","resLobType","loggedUser","resourcebillableType","selectedResbillable","setSelectedResBillable","getloggeduser","getBusinessUnit","filteredresBillableType","filteredReslobcategory","GlobalCancel","topMenus","loggedResId","setResourceId","teamArr","RProfile","approvalData","setApprovalData","resourceData","setResourceData","teamData","setTeamData","expandedRows","setExpandedRows","loaderOne","setLoaderOne","selectedRows","setSelectedRows","setPopUp","popUpData","setPopUpData","expenseHistory","setExpenseHistory","popUpLoader","setPopUpLoader","selectedRowsData","setSelectedRowsData","isEditClicked","setIsEditClicked","editRowData","setEditRowData","selectedOptionTwo","setSelectedOptionTwo","isCheckedList","setIsCheckedList","setHeaderChecked","message","setMessage","setCount","paymentStatusDropdown","setPaymentStatusDropdown","setIsClassicView","paymentUsers","setPaymentUsers","fetchData","teamRequestsData","resourceExpenseData","approvalRequestsData","teamDataWithSerial","serial","reourceDataWithSerial","datesFomat","minDt","maxDt","amountFormat","container","clientCurrencyCode","viewDetails","expenseId","expense_id","approvalIcon","popoverdata","setPopoverData","approvalField","onchange","drop_down","onMouseOver","approvalFlow","Approval","paymentsField","Payment","Checkbox","newCheckedList","newSelection","selectionIndex","selectedRowData","handleSelectionChange","isRowDisabled","setlist","commentsField","resize","ExpensePopup","totalData","downloadFile","document_id","svn_revision","file_name","stackId","Expense_Type","Incurred","disbursed_amount","Payee","firstName","lastName","dateCreated","disbursedAmount","defaultChecked","is_billable","disbursedAmountField","clientAmountField","client_amount","updatedSelectedRowsData","getPaymentStatusDropdown","statusId","isEdit","updateExpenseButtonState","onRowToggle","onRowExpand","cid","encodeURIComponent","raised_by","status_id","u","rowExpansionTemplate","subRowsData","it","isChecked","isEditData","ll","finalLL","spltArr","updatedList","expense_date","datas","formattedData","clientAmmount","payment","sendSelectedRowsData","cancelRowEdit","expander","stackName","approval","amt","disbursedAmt","clientAmt","createdOn","download","downloadExpenseStack","dropDown","newStatusId","amount","stackStatus","finalRes","addingClass","parentClassList","addingBorder","prevKey","colorsState","setTitle","ContractEndDate","firstDayOfMonth","SetData","searchapidata","setcustomFilters","filterTable","ExpireDtAlign","WebsiteToolTip","rel","NxtRvwDtDtAlign","SignedDtDtAlign","VendorId","LinkTemplateAction","countNw","rFormData","VendorPerformanceTopMaterialTable","openResource","setOpenResource","responseData","setResponseData","colAr","setColAr","openResourceNw","setOpenResourceNw","start","end","endOf","rdata","setRData","vmgPerformance","colArrr","rcount","sortingFn","rowB","rowA","columnId","resourseDetailsTable","round","desiredColumnOrder","wantedValues","colss","extractedValue","renderTopToolbar","table","VendorPerformanceResourceTable","module","modifiedData","sortMode"],"sourceRoot":""}