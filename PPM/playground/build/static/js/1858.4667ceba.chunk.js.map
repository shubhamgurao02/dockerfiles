{"version":3,"file":"static/js/1858.4667ceba.chunk.js","mappings":"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","sources":["views/Dashboard/AllocationDashboardActionTable.js","views/Dashboard/DashboardPopup.js","views/Dashboard/DashboardAllocationTable.js","views/Dashboard/DashboardAllocation.js","views/PrimeReactTableComponent/MaterialReactCollapisbleTable.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport { FilterMatchMode, FilterOperator } from \"primereact/api\";\nimport { DataTable } from \"primereact/datatable\";\nimport { Column } from \"primereact/column\";\nimport \"primeicons/primeicons.css\";\nimport \"primereact/resources/themes/lara-light-indigo/theme.css\";\nimport \"primereact/resources/primereact.css\";\nimport \"primeflex/primeflex.css\";\nimport { InputText } from \"primereact/inputtext\";\nimport \"../PrimeReactTableComponent/PrimeReactTable.scss\";\nimport { Link } from \"react-router-dom\";\nimport { Button } from \"primereact/button\";\nimport jsPDF from \"jspdf\";\n\nrequire(\"jspdf-autotable\");\n\nfunction AllocationDashboardActionTable(props) {\n  const {\n    data,\n    rows,\n    col,\n    headerdatagroup,\n    linkColumns,\n    linkColumnsRoutes,\n    dynamicColumns,\n    headerData,\n    setHeaderData,\n    exportData,\n    customFilters,\n    customFilterValue,\n    setCustomFilterValue,\n  } = props;\n  const [mainData, setMainData] = useState([]);\n  const [bodyData, setBodyData] = useState([]);\n  const [exportColumns, setExportColumns] = useState([]);\n  const dt = useRef(null);\n  useEffect(() => {\n    setMainData(JSON.parse(JSON.stringify(data)));\n  }, [data]);\n\n  useEffect(() => {\n    if (mainData.length > 0) {\n      setHeaderData(mainData[0]);\n      setBodyData(mainData.splice(1));\n\n      let dtt = [];\n      let headDt = mainData[0];\n\n      Object.keys(headDt).forEach((d) => {\n        d != \"StatusId\" &&\n          // ? dtt.push({ title: \"cus\", dataKey: d })\n          dtt.push({ title: headDt[d], dataKey: d });\n      });\n\n      setExportColumns(dtt);\n    }\n  }, [mainData]);\n\n  const filtersData = {\n    contains: { value: null, matchMode: FilterMatchMode.CONTAINS },\n  };\n\n  const [filters1, setFilters1] = useState({\n    global: filtersData[\"contains\"],\n  });\n\n  useEffect(() => {\n    setFilters1({\n      global: filtersData[\"contains\"],\n    });\n  }, [headerData]);\n  const [globalFilterValue1, setGlobalFilterValue1] = useState(\"\");\n\n  const clearFilter1 = () => {\n    initFilters1();\n  };\n\n  const initFilters1 = () => {\n    setGlobalFilterValue1(\"\");\n  };\n\n  const onGlobalFilterChange1 = (e) => {\n    const value = e.target.value;\n    let _filters1 = { ...filters1 };\n    _filters1[\"global\"].value = value;\n    setFilters1(_filters1);\n    setGlobalFilterValue1(value);\n  };\n\n  const RenderCustomFilters = () => {\n    let cstFtlrs = customFilters;\n\n    switch (cstFtlrs[\"type\"]) {\n      case \"select\":\n        return (\n          <select\n            id={cstFtlrs[\"id\"]}\n            onChange={(e) => {\n              setCustomFilterValue(e.target.value);\n            }}\n          >\n            {Object.keys(cstFtlrs[\"data\"]).map((d) => {\n              return (\n                <option\n                  selected={customFilterValue == d ? true : false}\n                  value={d}\n                >\n                  {cstFtlrs[\"data\"][d]}\n                </option>\n              );\n            })}\n          </select>\n        );\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const exportCSV = (selectionOnly) => {\n    dt.current.exportCSV({ selectionOnly });\n  };\n  const saveAsExcelFile = (buffer, fileName) => {\n    import(\"file-saver\").then((module) => {\n      if (module && module.default) {\n        let EXCEL_TYPE =\n          \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8\";\n        let EXCEL_EXTENSION = \".xlsx\";\n        const data1 = new Blob([buffer], { type: EXCEL_TYPE });\n\n        module.default.saveAs(data1, fileName + EXCEL_EXTENSION);\n      }\n    });\n  };\n  const exportExcel = () => {\n    import(\"xlsx\").then((xlsx) => {\n      // let removingUnwantedData = JSON.parse(JSON.stringify(data)).slice(1);\n\n      let wantedCols = Object.keys(data[0]);\n\n      let wantedValues = [];\n\n      let dd = JSON.parse(JSON.stringify(data)).slice(1);\n\n      for (let i = 0; i < dd.length; i++) {\n        const obj = {};\n\n        Object.keys(data[i]).forEach((d) => {\n          if (wantedCols.includes(d)) {\n            obj[data[0][d]] = data[i][d];\n          }\n        });\n        wantedValues.push(obj);\n      }\n\n      const worksheet = xlsx.utils.json_to_sheet(wantedValues.slice(1));\n      const workbook = { Sheets: { data: worksheet }, SheetNames: [\"data\"] };\n      const excelBuffer = xlsx.write(workbook, {\n        bookType: \"xlsx\",\n        type: \"array\",\n      });\n\n      saveAsExcelFile(excelBuffer, \"data\");\n    });\n  };\n  const exportPdf = () => {\n    print();\n    // import(\"jspdf\").then((jsPDF) => {\n    //   import(\"jspdf-autotable\").then(() => {\n    //     const doc = new jsPDF.default(0, 0);\n\n    //     doc.autoTable(exportColumns, data);\n    //     doc.save(\"Data.pdf\");\n    //   });\n    // });\n  };\n\n  const print = () => {\n    const pdf = new jsPDF(\"p\", \"pt\", \"a4\");\n    const columns = exportColumns.map((d) => d.title);\n    let rows = [];\n\n    for (let i = 0; i < data.length; i++) {\n      /*for (var key in json[i]) {\n              var temp = [key, json[i][key]];\n              rows.push(temp);\n            }*/\n      // let temp = [\n      //   json[i].id,\n      //   json[i].start.split(\"T\")[0],\n      //   json[i].duration,\n      //   json[i].name,\n      //   json[i].project,\n      //   json[i].task,\n      //   json[i].comment,\n      // ];\n\n      let temp = exportColumns.map((d) => data[i][d[\"dataKey\"]]);\n\n      rows.push(temp);\n    }\n\n    pdf.text(235, 40, \"Tabla de Prestamo\");\n    pdf.autoTable(columns, rows, {\n      startY: 65,\n      theme: \"grid\",\n      styles: {\n        font: \"times\",\n        halign: \"center\",\n        cellPadding: 3.5,\n        lineWidth: 0.5,\n        lineColor: [0, 0, 0],\n        textColor: [0, 0, 0],\n      },\n      headStyles: {\n        textColor: [0, 0, 0],\n        fontStyle: \"normal\",\n        lineWidth: 0.5,\n        lineColor: [0, 0, 0],\n        fillColor: [166, 204, 247],\n      },\n      alternateRowStyles: {\n        fillColor: [212, 212, 212],\n        textColor: [0, 0, 0],\n        lineWidth: 0.5,\n        lineColor: [0, 0, 0],\n      },\n      rowStyles: {\n        lineWidth: 0.5,\n        lineColor: [0, 0, 0],\n      },\n      tableLineColor: [0, 0, 0],\n    });\n    pdf.save(\"pdf\");\n  };\n\n  const renderHeader1 = () => {\n    return (\n      <div className=\"flex  flex-row-reverse\">\n        {customFilters != undefined && (\n          <span>\n            <RenderCustomFilters />\n          </span>\n        )}\n\n        <div className=\"exportBtn ml-3\">\n          {exportData?.includes(\"CSV\") && (\n            <span\n              className=\"pi pi-file csv\"\n              onClick={() => exportCSV(false)}\n              title=\"CSV\"\n            />\n          )}\n          {exportData?.includes(\"XLS\") && (\n            <span\n              className=\"pi pi-file-excel excel\"\n              onClick={exportExcel}\n              title=\"Export to Excel\"\n            />\n          )}\n          {exportData?.includes(\"PDF\") && (\n            <span\n              className=\"pi pi-file-pdf pdf\"\n              onClick={exportPdf}\n              title=\"PDF\"\n            />\n          )}\n        </div>\n        <span className=\"p-input-icon-left tableGsearch\">\n          <i className=\"pi pi-search\" />\n          <InputText\n            defaultValue={globalFilterValue1}\n            onChange={onGlobalFilterChange1}\n            placeholder=\"Keyword Search\"\n          />\n        </span>\n      </div>\n    );\n  };\n\n  const header1 = renderHeader1();\n\n  return (\n    <div className=\"darkHeader\">\n      {Object.keys(headerData).length > 0 && (\n        <DataTable\n          stripedRows\n          paginatorTemplate=\"RowsPerPageDropdown FirstPageLink PrevPageLink CurrentPageReport NextPageLink LastPageLink\"\n          currentPageReportTemplate=\"{first} to {last} of {totalRecords}\"\n          rowsPerPageOptions={[5, 10, 25, 50]}\n          value={bodyData}\n          paginator\n          showGridlines\n          rows={rows}\n          dataKey=\"id\"\n          filters={filters1}\n          responsiveLayout=\"scroll\"\n          header={header1}\n          emptyMessage=\"No Records found.\"\n          ref={(el) => {\n            dt.current = el;\n          }}\n          className=\"primeReactDataTable AllocationDashboardActionTable\"\n        >\n          {/* <Column header={headerdatagroup} colSpan={col} /> */}\n\n          {dynamicColumns}\n        </DataTable>\n      )}\n    </div>\n  );\n}\n\nexport default AllocationDashboardActionTable;\n","import React, { useState, useEffect } from \"react\";\nimport { CModal } from \"@coreui/react\";\nimport { CModalBody } from \"@coreui/react\";\nimport { CModalHeader } from \"@coreui/react\";\nimport { CModalTitle } from \"@coreui/react\";\nimport { environment } from \"../../environments/environment\";\nimport moment from \"moment\";\nimport axios from \"axios\";\nimport { Column } from \"primereact/column\";\nimport CellRendererPrimeReactDataTable from \"../PrimeReactTableComponent/CellRendererPrimeReactDataTable\";\nimport AllocationDashboardActionTable from \"./AllocationDashboardActionTable\";\nimport \"./DashboardAllocationTable.scss\";\n\nfunction DashboardPopup(props) {\n  const { openPopup, setOpenPopup, resid, resName } = props;\n  const [data, setData] = useState([]);\n  const [headerData, setHeaderData] = useState([]);\n  let rows = 5;\n  const baseUrl = environment.baseUrl;\n\n  useEffect(() => {\n    getActionItemDetails();\n  }, []);\n  const align = (data) => {\n    return (\n      <div className=\"dashboardAllocationTable \">\n        <div\n          className=\"ellipsis\"\n          style={{ textAlign: \"left\", maxWidth: \"400px\", fontSize: \"13px\" }}\n          data-toggle=\"tooltip\"\n          title={data.comments}\n        >\n          {data.comments}\n        </div>\n      </div>\n    );\n  };\n  const created_dt = (data) => {\n    return (\n      <div className=\"dashboardAllocationTable mr-0\">\n        <div className=\"date\" style={{ textAlign: \"center\" }} data-toggle=\"tooltip\"\n          title={data.created_dt}>\n          {data.created_dt}\n        </div>\n      </div>\n    );\n  };\n  const effective_dt = (data) => {\n    return (\n      <div className=\"dashboardAllocationTable mr-0\">\n        <div className=\"date\" style={{ textAlign: \"center\" }} data-toggle=\"tooltip\" title={data.effective_dt}>\n          {data.effective_dt}\n        </div>\n      </div>\n    );\n  };\n  const completed_dt = (data) => {\n    return (\n      <div className=\"dashboardAllocationTable mr-0\">\n        <div className=\"date\" style={{ textAlign: \"center\" }} data-toggle=\"tooltip\" title={data.completed_dt}>\n          {data.completed_dt}\n        </div>\n      </div>\n    );\n  };\n  const entryby = (data) => {\n    return (\n      <div className=\"dashboardAllocationTable \">\n        <div\n          className=\"ellipsis\"\n          style={{ textAlign: \"left\", maxWidth: \"400px\", fontSize: \"13px\" }}\n          data-toggle=\"tooltip\"\n          title={data.entryby}\n        >\n          {data.entryby}\n        </div>\n      </div>\n    );\n  };\n\n  const category = (data) => {\n    return (\n      <div className=\"dashboardAllocationTable \">\n        <div\n          className=\"ellipsis\"\n          style={{ textAlign: \"left\", maxWidth: \"400px\", fontSize: \"13px\" }}\n          data-toggle=\"tooltip\"\n          title={data.lkup_name}\n        >\n          {data.lkup_name}\n        </div>\n      </div>\n    );\n  };\n\n  const dynamicColumns = Object.keys(headerData)?.map((col, i) => {\n    return (\n      <Column\n        sortable\n        key={col}\n        body={\n          col == \"comments\"\n            ? align\n            : col == \"created_dt\"\n              ? created_dt\n              : col == \"effective_dt\"\n                ? effective_dt\n                : col == \"completed_dt\"\n                  ? completed_dt\n                  : col == \"entryby\"\n                    ? entryby\n                    : col == \"lkup_name\" && category\n        }\n        field={col}\n        header={headerData[col]}\n      />\n    );\n  });\n\n  useEffect(() => {\n    data[0] && setHeaderData(JSON.parse(JSON.stringify(data[0])));\n  }, [data]);\n\n  const getActionItemDetails = () => {\n    axios({\n      method: \"get\",\n      url:\n        baseUrl +\n        `/dashboardsms/allocationDashboard/getActionItemDetails?rid=${resid}`,\n    }).then(function (response) {\n      // var resp = response.data;\n      // setData(resp);\n      const GetData = response.data;\n      let dataHeader = [\n        {\n          created_dt: \"Entry Dt\",\n          entryby: \"Entry By\",\n          lkup_name: \"Category\",\n          effective_dt: \"Effective Dt\",\n          completed_dt: \"Completed Dt\",\n          comments: \"Comments\",\n        },\n      ];\n\n      for (let i = 0; i < GetData.length; i++) {\n        GetData[i][\"created_dt\"] =\n          GetData[i][\"created_dt\"] == null\n            ? \"\"\n            : moment(GetData[i][\"created_dt\"]).format(\"DD-MMM-yyyy\");\n        GetData[i][\"completed_dt\"] =\n          GetData[i][\"completed_dt\"] == null\n            ? \"\"\n            : moment(GetData[i][\"completed_dt\"]).format(\"DD-MMM-yyyy\");\n        GetData[i][\"effective_dt\"] =\n          GetData[i][\"effective_dt\"] == null\n            ? \"\"\n            : moment(GetData[i][\"effective_dt\"]).format(\"DD-MMM-yyyy\");\n      }\n\n      let fData = [...dataHeader, ...GetData];\n      setData(fData);\n    });\n  };\n\n  return (\n    <div>\n      {/* <Draggable> */}\n      <CModal\n        visible={openPopup}\n        size=\"xl\"\n        className=\"ui-dialog\"\n        onClose={() => setOpenPopup(false)}\n        backdrop={\"static\"}\n      >\n        <CModalHeader className=\"\">\n          <CModalTitle>\n            <span className=\"\">Action Items of {resName}</span>\n          </CModalTitle>\n        </CModalHeader>\n        <CModalBody>\n          <AllocationDashboardActionTable\n            data={data}\n            rows={rows}\n            dynamicColumns={dynamicColumns}\n            headerData={headerData}\n            setHeaderData={setHeaderData}\n          />\n        </CModalBody>\n      </CModal>\n      {/* </Draggable> */}\n    </div>\n  );\n}\n\nexport default DashboardPopup;\n","import React, { useState, useEffect, useMemo } from \"react\";\nimport MaterialReactTable from \"material-react-table\";\nimport { Button, IconButton } from \"@mui/material\";\n\nimport { AiFillRightCircle } from \"react-icons/ai\";\nimport { CListGroup } from \"@coreui/react\";\nimport { Link } from \"react-router-dom\";\nimport { IoWarningOutline } from \"react-icons/io5\";\nimport fte_active from \"../../assets/images/empstatusIcon/fte_active.png\";\nimport fte_inactive from \"../../assets/images/empstatusIcon/fte_inactive.png\";\nimport fte_notice from \"../../assets/images/empstatusIcon/fte_notice.png\";\nimport subk_active from \"../../assets/images/empstatusIcon/subk_active.png\";\nimport subk_inactive from \"../../assets/images/empstatusIcon/subk_inactive.png\";\nimport subk_notice from \"../../assets/images/empstatusIcon/subk_notice.png\";\nimport DashboardPopup from \"./DashboardPopup\";\nimport \"./DashboardAllocationTable.scss\";\nimport { BiChevronLeft, BiChevronRight } from \"react-icons/bi\";\n\nexport default function DashboardAllocationTable(props) {\n  const { data, expandedCols, colExpandState, viewBy } = props;\n\n  const [nodes, setNodes] = useState([]);\n  const [columns, setColumns] = useState(null);\n  const [hiddenColumns, setHiddenColumns] = useState({});\n  const [colExpFlag, setColumnExpFlag] = useState(false);\n  const [headers, setHeaders] = useState([]);\n  const [linkColumns, setLinkColumns] = useState([]);\n  const [openPopup, setOpenPopup] = useState(false);\n  const [resName, setResName] = useState();\n  const [resid, setResId] = useState();\n\n  const icons = {\n    fte0: (\n      <img\n        src={fte_inactive}\n        alt=\"(fte_inactive_icon)\"\n        style={{ height: \"12px\" }}\n        title=\"Ex-Employee\"\n      />\n    ),\n    fte1: (\n      <img\n        src={fte_active}\n        alt=\"(fte_active_icon)\"\n        style={{ height: \"12px\" }}\n        title=\"Active Employee\"\n      />\n    ),\n    fte2: (\n      <img\n        src={fte_notice}\n        alt=\"(fte_notice_icon)\"\n        style={{ height: \"12px\" }}\n        title=\"Employee in notice period\"\n      />\n    ),\n    subk0: (\n      <img\n        src={subk_inactive}\n        alt=\"(subk_inactive_icon)\"\n        style={{ height: \"12px\" }}\n        title=\"Ex-Contractor\"\n      />\n    ),\n    subk1: (\n      <img\n        src={subk_active}\n        alt=\"(subk_active_icon)\"\n        style={{ height: \"12px\" }}\n        title=\"Active Contractor\"\n      />\n    ),\n    subk2: (\n      <img\n        src={subk_notice}\n        alt=\"(subk_notice_icon)\"\n        style={{ height: \"12px\" }}\n        title=\"Contractor in notice period\"\n      />\n    ),\n  };\n\n  useEffect(() => {\n    getData();\n  }, [data]);\n\n  // useEffect(() => {\n  // }, [minusOneRow]);\n\n  const getData = () => {\n    let tableData = data[1]?.tableData;\n    let columns = null;\n    // tableData.map((d) => d.filter(([key, value]) => !key.includes(\"greyout\")))\n    if (data[0]?.columns?.includes(\"'\")) {\n      columns = data[0]?.columns?.replaceAll(\"'\", \"\");\n    } else {\n      columns = data[0]?.columns;\n    }\n\n    let colArr = columns?.split(\",\");\n\n    let newHeaders = [];\n    let hiddenHeaders = [];\n\n    const obj = {};\n\n    for (let i = 0; i < colArr?.length; i++) {\n      let colVal = colArr[i].trim();\n\n      let firstData = tableData[0];\n      obj[colVal] = firstData[colVal];\n    }\n\n    let headerArray = Object.entries(obj);\n    let unWantedCols = [];\n\n    let filteredHeadersTotal = headerArray.filter(([key, value]) =>\n      key.includes(\"total\")\n    );\n\n    let totalElement = filteredHeadersTotal[0];\n\n    console.log(headerArray, \"headerArray\");\n    let filteredHeaders = headerArray.filter(\n      ([key, value]) =>\n        typeof value === \"string\" &&\n        value.includes(\"^&\") &&\n        !key.includes(\"others\") &&\n        !key.includes(\"nBillUtil\") &&\n        !key.includes(\"billUtil\") &&\n        !key.includes(\"innov\")\n    );\n    console.log(filteredHeaders, \"\");\n    let totalPosition = filteredHeaders.length - 1;\n    filteredHeaders.length > 2\n      ? filteredHeaders.splice(totalPosition, 0, totalElement)\n      : null;\n\n    if (viewBy == \"bu\") {\n      let totalIndex = filteredHeaders.findIndex(([key, value]) =>\n        key.includes(\"total\")\n      );\n      if (totalIndex !== -1) {\n        const totalElement = filteredHeaders.splice(totalIndex, 1)[0]; // Remove the element\n        filteredHeaders.push(totalElement); // Add it to the end\n      }\n    }\n\n    console.log(filteredHeaders, \"filteredHeaders\");\n\n    setHeaders(filteredHeaders);\n\n    filteredHeaders.map(([key, value]) => {\n      if (expandedCols.includes(key)) {\n        hiddenHeaders.push({ [key]: false });\n      }\n    });\n\n    console.log(totalPosition, filteredHeaders, \"filteredHeaders\");\n    setHiddenColumns(Object.assign({}, ...hiddenHeaders));\n    // let C = tableData?.filter((d) => d.id == -1);\n    let minusOneRow = tableData?.filter((d) => d.id === -1);\n    filteredHeaders.map(([key, value], index) => {\n      newHeaders.push({\n        accessorKey: key.includes(\"total\")\n          ? \"total\"\n          : key.lastIndexOf(\"_\") >= 7\n          ? key.split(\"_\")[0] +\n            \"_\" +\n            key.split(\"_\")[1] +\n            \"_\" +\n            key.split(\"_\")[2]\n          : key.includes(\"action\")\n          ? \"action\"\n          : key,\n        header: value.split(\"^&\")[0],\n        enableColumnActions: false,\n        enableHiding: true,\n        Header: ({ column }) => (\n          <div\n            className={\n              key.includes(\"empId\") || key.includes(\"name\")\n                ? \"mixer\"\n                : key.includes(\"emp_cadre\")\n                ? \"sm mixer\"\n                : (key.includes(\"department\") ? \"md mixer\" : \"\") ||\n                  (key.includes(\"supervisor\") ? \"md mixer\" : \"\")\n            }\n            title={value.split(\"^&\")[0]}\n          >\n            {value.split(\"^&\")[0]}{\" \"}\n            {key == colExpandState[2] && viewBy != \"bu\" ? (\n              <IconButton\n                className=\"expandIcon\"\n                onClick={() => {\n                  setColumnExpFlag((prev) => !prev);\n                }}\n                style={{ color: \"black\" }}\n              >\n                {colExpFlag ? <BiChevronLeft /> : <BiChevronRight />}\n              </IconButton>\n            ) : null}\n          </div>\n        ),\n      });\n    });\n\n    // let arr = minusOneRow && minusOneRow[0]\n\n    // function moveObjectElement(currentKey, afterKey, obj) {\n    //     let result = {};\n    //     let val = obj[currentKey];\n    //     delete obj[currentKey];\n    //     let next = -1;\n    //     let i = 0;\n    //     if (typeof afterKey == 'undefined' || afterKey == null) afterKey = '';\n    //     Object.entries(obj).forEach(([k, v]) => {\n    //         if ((afterKey == '' && i == 0) || next == 1) {\n    //             result[currentKey] = val;\n    //             next = 0;\n    //         }\n    //         if (k == afterKey) { next = 1; }\n    //         result[k] = v;\n    //         ++i;\n    //     });\n    //     if (next == 1) {\n    //         result[currentKey] = val;\n    //     }\n    //     if (next !== -1) return result; else return obj;\n    // }\n\n    // function preferredOrder(obj, order) {\n    //     var newObject = {};\n    //     for (var i = 0; i < order.length; i++) {\n    //         if (obj?.hasOwnProperty(order[i])) {\n    //             newObject[order[i]] = obj[order[i]];\n    //         }\n    //     }\n    //     return newObject;\n    // }\n\n    // let final = {}\n    // final = minusOneRow && preferredOrder(arr, [\"2023_03_01_billUtil\", \"2023_03_01_nBillUtil\", \"2023_03_01_innov\", \"2023_03_01_others\"])\n\n    let subHeaders = minusOneRow ? Object.entries(minusOneRow[0]) : null;\n\n    subHeaders?.sort();\n    // subHeaders?.filter(([key, value], index) => value != \"\");\n\n    newHeaders.map((data) => {\n      let i = newHeaders.indexOf(data);\n      let subArray = [];\n      subHeaders.map(([key, value], index) => {\n        // let a = /\\d/.test(key.split(\"_\")[0]);\n        if (\n          // key.includes(\"_\") &&\n          !key.includes(\"greyout\") &&\n          value != null &&\n          key != \"id\"\n          //   (a == true || (a == false && key.split(\"_\")[0] == \"total\"))) ||\n          // (a == false && key.includes(\"action\"))\n        ) {\n          // let subkey = key.includes(\"action\") ? \"action\" : key.split(\"_\");\n          // subkey = key.includes(\"action\")\n          //   ? \"action\"\n          //   : subkey.slice(0, -1).join(\"_\");\n\n          // if (data.accessorKey.includes(subkey))\n          if (key.includes(data.accessorKey) && key !== data.accessorKey) {\n            let obj = {\n              id: key,\n              header: (\n                <div className={key.includes(\"department\") ? \"md\" : \"sm\"}>\n                  {value}\n                </div>\n              ),\n              // value == null || value == 0 ? (\n              //   \"\"\n              // ) : (\n              //   <div\n              //     className={\n              //       !key.includes(\"actionDate\") &&\n              //         !key.includes(\"actionComments\")\n              //         ? \"sm\"\n              //         : key.includes(\"department\") && \"nullCol\"\n              //     }\n              //     title={value}\n              //   >\n              //     {value}\n              //   </div>\n              // ),\n              accessorKey: key,\n              Cell: ({ cell }) => {\n                return (\n                  <div\n                    className={\n                      key.includes(\"_\")\n                        ? key.split(\"_\")[0] == \"total\"\n                          ? \"sm total\"\n                          : key.split(\"_\")[1][1] % 2 == 0\n                          ? \"sm even\"\n                          : \"sm odd\"\n                        : key.includes(\"emp_cadre\")\n                        ? \"sm mixer\"\n                        : cell.row.original.name == \"Total\"\n                        ? \"rowTotal\"\n                        : \"\"\n                    }\n                    style={{\n                      whiteSpace: \"nowrap\",\n                      overflow: \"hidden\",\n                      textOverflow: \"ellipsis\",\n                    }}\n                    title={cell.getValue()}\n                  >\n                    {viewBy != \"bu\" &&\n                    cell.column.id == \"name\" &&\n                    cell.row.original != null ? (\n                      <div className=\"openTable\">\n                        {icons[cell.row.original[\"empStatus\"]]}\n                        <Link\n                          title={cell.getValue()}\n                          to={`/resource/profile/:${cell.row.original.id}`}\n                          target=\"_blank\"\n                          className=\"ellipsis\"\n                          style={{ textDecoration: \"underline\" }}\n                        >\n                          {cell.getValue()}\n                        </Link>\n                        {cell.row.original.actionDate != \"\" && (\n                          <IoWarningOutline\n                            title=\"Show Action Items\"\n                            onClick={() => {\n                              setOpenPopup(true);\n                              setResId(cell.row.original.id);\n                              setResName(cell.row.original.name);\n                            }}\n                            style={{ color: \"orange\", cursor: \"pointer\" }}\n                          />\n                        )}\n                        {console.log(cell.getValue(), \"in link\")}\n                      </div>\n                    ) : (\n                      <div\n                        className={\n                          viewBy == \"bu\" && cell.column.id == \"name\"\n                            ? \"businessUnit\"\n                            : cell.column.id == \"actionComments\"\n                            ? \"ellipsis\"\n                            : \"\"\n                        }\n                      >\n                        {cell.getValue()}\n                      </div>\n                    )}\n                  </div>\n                );\n              },\n            };\n            subArray.push(obj);\n\n            newHeaders[i].columns = subArray;\n          }\n        } else {\n          if (key == data.accessorKey) {\n            let obj = {\n              id: key,\n\n              header: (\n                <div\n                  className={\n                    key.includes(\"supervisor\") || key.includes(\"department\")\n                      ? \"md\"\n                      : \"sm\"\n                  }\n                >\n                  {\" \"}\n                  {value}\n                </div>\n              ),\n              accessorKey: key,\n              Cell: ({ cell }) => {\n                return (\n                  <div\n                    className={\n                      key.includes(\"emp_cadre\")\n                        ? \"sm\"\n                        : key.includes(\"department\") ||\n                          key.includes(\"supervisor\")\n                        ? \"md\"\n                        : cell.row.original.name == \"Total\"\n                        ? \"rowTotal\"\n                        : \"\"\n                    }\n                    style={{\n                      whiteSpace: \"nowrap\",\n                      overflow: \"hidden\",\n                      textOverflow: \"ellipsis\",\n                    }}\n                    title={cell.getValue()}\n                  >\n                    {viewBy != \"bu\" &&\n                    cell.column.id == \"name\" &&\n                    cell.getValue() != \"Total\" &&\n                    cell.row.original != null ? (\n                      <div className=\"openTable\">\n                        {icons[cell.row.original[\"empStatus\"]]}\n                        <Link\n                          className=\"empName ellipsis\"\n                          title={cell.getValue()}\n                          to={`/resource/profile/:${cell.row.original.id}`}\n                          target=\"_blank\"\n                        >\n                          {cell.getValue()}\n                        </Link>\n                        {cell.row.original.actionDate != \"\" && (\n                          <IoWarningOutline\n                            title=\"Show Action Items\"\n                            onClick={() => {\n                              setOpenPopup(true);\n                              setResId(cell.row.original.id);\n                              setResName(cell.row.original.name);\n                            }}\n                            style={{ color: \"orange\", cursor: \"pointer\" }}\n                          />\n                        )}\n                      </div>\n                    ) : (\n                      <div\n                        className={\n                          viewBy == \"bu\" && cell.column.id == \"name\"\n                            ? \"businessUnit\"\n                            : cell.column.id == \"empId\"\n                            ? \"ellipsis\"\n                            : \"\"\n                        }\n                      >\n                        {cell.getValue()}\n                        {console.log(\n                          cell.getValue(),\n                          cell.column.id,\n                          \"in link line 438\"\n                        )}\n                      </div>\n                    )}\n                  </div>\n                );\n                // <div>\n                //     <p>i&nbsp;{cell.getValue()}</p>\n\n                // </div>\n              },\n            };\n            newHeaders[i].columns = [obj];\n          }\n        }\n      });\n    });\n    //     });\n    // });\n    setColumns(newHeaders);\n\n    let values = [];\n    tableData?.map((d) => (d.id !== -1 && d.id !== -2 ? values.push(d) : \"\"));\n\n    setNodes(jsonToTree(values, { children: \"subRows\" }));\n    //   setColumns(resp.data.tableData);\n    // });\n  };\n\n  useEffect(() => {\n    getData();\n    colExpFlag ? setHiddenColumns({}) : colCollapse();\n  }, [colExpFlag]);\n\n  const colCollapse = () => {\n    let hiddenHeaders = [];\n    // refactor this\n    headers.map(([key, value]) => {\n      if (expandedCols.includes(key)) {\n        hiddenHeaders.push({ [key]: false });\n      }\n    });\n\n    setHiddenColumns(Object.assign({}, ...hiddenHeaders));\n  };\n\n  const jsonToTree = (flatArray, options) => {\n    options = {\n      id: \"id\",\n      parentId: \"parentId\",\n      children: \"subRows\",\n      ...options,\n    };\n    const dictionary = {}; // a hash table mapping to the specific array objects with their ids as key\n    const tree = [];\n    const children = options.children;\n    flatArray.forEach((node) => {\n      const nodeId = node[options.id];\n      const nodeParentId = node[options.parentId];\n      // set up current node data in dictionary\n      dictionary[nodeId] = {\n        [children]: [], // init a children property\n        ...node, // add other propertys\n        ...dictionary[nodeId], // children will be replaced if this node already has children property which was set below\n      };\n      dictionary[nodeParentId] = dictionary[nodeParentId] || { [children]: [] }; // if it's not exist in dictionary, init an object with children property\n      dictionary[nodeParentId][children].push(dictionary[nodeId]); // add reference to current node object in parent node object\n    });\n    // find root nodes\n    Object.values(dictionary).forEach((obj) => {\n      if (typeof obj[options.id] === \"undefined\") {\n        tree.push(...obj[children]);\n      }\n    });\n    return tree;\n  };\n\n  return (\n    <div\n      className={\n        viewBy == \"bu\"\n          ? \"materialReactExpandableTable businessUnitTable darkHeader toHead\"\n          : \"materialReactExpandableTable dashboardAllocationTable darkHeader toHead\"\n      }\n    >\n      {columns?.length ? (\n        \n        <MaterialReactTable\n          columns={columns}\n          data={nodes}\n          enableExpandAll={false} //hide expand all double arrow in column header\n          enableExpanding={false}\n          enablePagination={false}\n          enableRowVirtualization\n          enableFullScreenToggle={false}\n          enableDensityToggle={false}\n          enableHiding={false}\n          // enableColumnVisibility={false}\n          enableGlobalFilter={true}\n          enableBottomToolbar={false}\n          enableTopToolbar={true}\n          enableColumnActions={false}\n          enablePinning={false}\n          enableColumnFilters={false}\n          enableSorting={true}\n          // enableGrouping\n          filterFromLeafRows //apply filtering to all rows instead of just parent rows\n          initialState={{\n            showGlobalFilter: true,\n            expanded: false,\n            density: \"compact\",\n            columnVisibility: { ...hiddenColumns },\n            columnPinning: { left: [\"empId\", \"name\"] },\n          }} //expand all rows by default\n          state={{\n            columnVisibility: { ...hiddenColumns },\n            showProgressBars: false,\n          }}\n          paginateExpandedRows={false} //When rows are expanded, do not count sub-rows as number of rows on the page towards pagination\n          defaultColumn={{ minSize: 40, maxSize: 80, size: 45 }} //units are in px\n          muiSearchTextFieldProps={{\n            variant: \"outlined\",\n          }}\n          muiTableContainerProps={{\n            sx: { width: \"auto\", maxWidth: \"fit-content\", maxHeight: \"65vh\" },\n          }}\n          muiTableBodyProps={{\n            sx: {\n              \"&\": {\n                borderRight: \"1px solid #ccc\",\n                borderBottom: \"1px solid #ccc\",\n              },\n              \"& td:first-of-type\": {\n                borderLeft: \"1px solid #ccc\",\n                minWidth: \"100px\",\n              },\n              \"& td\": {\n                // borderTop: \"1px solid #ccc\",\n                borderRight: \"1px solid #ccc\",\n                height: \"22px\",\n                padding: \"0px 5px\",\n                maxWidth: \"150px\",\n              },\n            },\n          }}\n          muiTableHeadProps={{\n            sx: {\n              \"& th\": {\n                borderTop: \"1px solid #ccc\",\n                borderRight: \"1px solid #ccc\",\n                background: \"#f4f4f4 \",\n                padding: \"0 5px\",\n              },\n              \"& th:first-of-type\": {\n                borderLeft: \"1px solid #ccc\",\n                minWidth: \"100px\",\n              },\n            },\n          }}\n          // emptyMessage=\"No data found\"\n        />\n      ) : null}\n      {openPopup && (\n        <DashboardPopup\n          openPopup={openPopup}\n          setOpenPopup={setOpenPopup}\n          resid={resid}\n          resName={resName}\n        />\n      )}\n    </div>\n  );\n}\n","import React, { useState, useEffect, useRef } from \"react\";\nimport { MultiSelect } from \"react-multi-select-component\";\nimport {\n  FaChevronCircleDown,\n  FaChevronCircleUp,\n  FaSearch,\n  FaCheck,\n  FaCaretDown,\n} from \"react-icons/fa\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { CCollapse } from \"@coreui/react\";\nimport { ReactSearchAutocomplete } from \"react-search-autocomplete\";\nimport axios from \"axios\";\nimport Loader from \"../Loader/Loader\";\nimport { environment } from \"../../environments/environment\";\nimport moment from \"moment\";\nimport { Column } from \"primereact/column\";\nimport MaterialReactCollapisbleTable from \"../PrimeReactTableComponent/MaterialReactCollapisbleTable\";\nimport \"./DashboardAllocationTable.scss\";\nimport ExcelJS from \"exceljs\";\nimport CellRendererPrimeReactDataTable from \"../PrimeReactTableComponent/CellRendererPrimeReactDataTable\";\nimport DashboardAllocationTable from \"./DashboardAllocationTable\";\nimport { AiFillWarning } from \"react-icons/ai\";\nimport GlobalValidation from \"../ValidationComponent/GlobalValidation\";\nimport { IoWarningOutline } from \"react-icons/io5\";\nimport { RiFileExcel2Line } from \"react-icons/ri\";\nimport GlobalHelp from \"../PrimeReactTableComponent/GlobalHelp\";\n\nimport ScreenBreadcrumbs from \"../Common/ScreenBreadcrumbs\";\n\nfunction DashboardAllocation() {\n  const [visible, setVisible] = useState(false);\n  const [loader, setLoader] = useState(false);\n  const [item, setItem] = useState([]);\n  const [showWarning, setShowWarning] = useState(false);\n  const [month, setMonth] = useState();\n  const [cheveronIcon, setCheveronIcon] = useState(FaChevronCircleUp);\n  const [departments, setDepartments] = useState([]);\n  const [dataAccess, setDataAccess] = useState([]);\n  const [selectType, setSelectType] = useState(\n    dataAccess == 46\n      ? \"project\"\n      : dataAccess == 690\n        ? \"customer\"\n        : dataAccess == 126 && \"bu\"\n  );\n  const [selectFilter, setSelectFilter] = useState(\"-1\");\n  const [msg, setMsg] = useState(false);\n  const [country, setCountry] = useState([]);\n  const [measure, setMeasure] = useState([\n    { value: \"bill\", label: \"Billable Utilization\" },\n    { value: \"nBill\", label: \"Non-Billable Utilization\" },\n    { value: \"innovation\", label: \"Innovation\" },\n    { value: \"others\", label: \"Others\" },\n  ]);\n  const [selectedDepartments, setSelectedDepartments] = useState([]);\n  const [selectedCountry, setSelectedCountry] = useState([]);\n  const [selectedMeasure, setSelectedMeasure] = useState(measure);\n  const [duration, setDuration] = useState([]);\n  const [date, SetDate] = useState(new Date());\n  const [customer, setCustomer] = useState([]);\n  const [project, setProject] = useState([]);\n  const [resource, setResource] = useState([]);\n  const [manager, setManager] = useState([]);\n  const [details, setDetails] = useState([]);\n  const [searching, setsearching] = useState(false);\n  const [errorMsg, setErrorMsg] = useState(false);\n  const [tableData, setTableData] = useState([]);\n  const [columns, setColumns] = useState([]);\n  const [roles, setRoles] = useState([]);\n  const ref = useRef([]);\n  const abortController = useRef(null);\n  const baseUrl = environment.baseUrl;\n  const [changeCnt, setChangeCnt] = useState([]);\n  const HelpPDFName = \"AllocationDashboard.pdf\";\n  const HelpHeader = \"Allocation Dashboard Help\";\n  console.log(selectType);\n  const [viewBy, setViewBy] = useState(\"\");\n\n  const currentDate = new Date();\n  const year = currentDate.getFullYear();\n  const cumonth = currentDate.getMonth() + 1;\n  const firstDay = new Date(year, cumonth - 1, 1);\n\n  const initialValue = {\n    type:\n      dataAccess == 46\n        ? \"project\"\n        : dataAccess == 641 ||\n          dataAccess == 600 ||\n          dataAccess == 800 ||\n          dataAccess == 700\n          ? \"customer\"\n          : \"customer\",\n    buId: \"\",\n    countryIds: \"\",\n    resType: \"-1\",\n    month: moment(firstDay.toDateString()).format(\"yyyy-MM-DD\"),\n    duration: \"3\",\n    customerId: \"-1\",\n    projectId: \"-1\",\n    resourceId: \"-1\",\n    pmId: \"-1\",\n    measures: \"bill,nBill,innovation,others\",\n    filterMeasure: \"-1\",\n    operator: \"ge\",\n    filterVal: \"-1\",\n    viewType: \"resource\",\n  };\n\n  console.log(dataAccess);\n  const [formData, setFormData] = useState(initialValue);\n\n  const loggedUserId = localStorage.getItem(\"resId\");\n  const [routes, setRoutes] = useState([]);\n  let currentScreenName = [\"Allocation Dashboard\"];\n  let textContent = \"Dashboards\";\n\n  useEffect(() => {\n    getDepartments();\n    getCountries();\n    // getCustomerdata();\n    // getProjectdata();\n    getResourcedata();\n    getManagerdata();\n    // getMenus();\n  }, []);\n  useEffect(() => {\n    getMenus();\n  }, [dataAccess]);\n  useEffect(() => { }, [item]);\n\n  const getMenus = () => {\n    axios({\n      method: \"GET\",\n      url: baseUrl + `/CommonMS/master/getMenus?loggedUserId=${loggedUserId}`,\n    }).then((resp) => {\n      let data = resp.data;\n\n      data.forEach((item) => {\n        if (item.display_name === textContent) {\n          setRoutes([item]);\n        }\n      });\n\n      const allocationDashboardSubMenu = data\n        .find((item) => item.display_name === \"Dashboards\")\n        .subMenus.find(\n          (subMenu) => subMenu.display_name === \"Allocation Dashboard\"\n        );\n\n      // const accessLevel = allocationDashboardSubMenu\n      //   ? allocationDashboardSubMenu.access_level\n      //   : null;\n      // console.log(accessLevel);\n      console.log(allocationDashboardSubMenu.userRoles);\n      const accessLevel =\n        allocationDashboardSubMenu.userRoles.includes(\"690\") &&\n          allocationDashboardSubMenu.userRoles.includes(\"46\")\n          ? 800\n          : allocationDashboardSubMenu.userRoles.includes(\"641\") &&\n            allocationDashboardSubMenu.userRoles.includes(\"46\")\n            ? 700\n            : allocationDashboardSubMenu.userRoles.includes(\"690\") &&\n              allocationDashboardSubMenu.userRoles.includes(\"930\")\n              ? 500\n              : allocationDashboardSubMenu.userRoles.includes(\"641\") &&\n                allocationDashboardSubMenu.userRoles.includes(\"930\")\n                ? 400\n                : allocationDashboardSubMenu.userRoles.includes(\"690\") &&\n                  allocationDashboardSubMenu.userRoles.includes(\"641\")\n                  ? 600\n                  :\n                  allocationDashboardSubMenu.userRoles.includes(\"126\") && allocationDashboardSubMenu.userRoles.includes(\"46\")\n                    ? 126\n                    : allocationDashboardSubMenu.userRoles.includes(\"126\")\n                      ? 126\n                      : allocationDashboardSubMenu.userRoles.includes(\"690\")\n                        ? 690\n                        : allocationDashboardSubMenu.userRoles.includes(\"641\")\n                          ? 641\n                          : allocationDashboardSubMenu.userRoles.includes(\"46\")\n                            ? 46\n                            : allocationDashboardSubMenu.userRoles.includes(\"911\")\n                              ? 911\n                              : null;\n      console.log(accessLevel);\n      setDataAccess(accessLevel);\n      if (accessLevel == 600) {\n        axios\n          .get(\n            baseUrl +\n            `/dashboardsms/allocationDashboard/getCustomers?loggedUserId=${loggedUserId}`\n          )\n          .then((resp) => {\n            setCustomer(resp.data);\n          });\n      } else if (accessLevel == 690 || accessLevel == 800) {\n        axios\n          .get(\n            baseUrl +\n            `/ProjectMS/project/getCustomersByDP?loggedUserId=${loggedUserId}`\n          )\n          .then((resp) => {\n            setCustomer(resp.data);\n          });\n      } else if (accessLevel == 641 || accessLevel == 700) {\n        axios\n          .get(\n            baseUrl +\n            `/ProjectMS/project/getCustomersByCsl?loggedUserId=${loggedUserId}`\n          )\n          .then((resp) => {\n            setCustomer(resp.data);\n          });\n      } else {\n        axios\n          .get(baseUrl + `/customersms/Customers/getCustomers`)\n          .then((resp) => {\n            setCustomer(resp.data);\n          });\n      }\n      if (accessLevel == 600) {\n        axios\n          .get(\n            baseUrl +\n            `/ProjectMS/project/getProjectsbyCslDp?loggedUserId=${Number(loggedUserId) + 1\n            }`\n          )\n          // .get(baseUrl + `/ProjectMS/Audit/getProjectNameandId`)\n          .then((response) => {\n            var resp = response.data;\n\n            setProject(resp);\n          });\n      } else if (accessLevel == 690) {\n        axios\n          .get(\n            baseUrl +\n            `/ProjectMS/project/getProjectsbyDp?loggedUserId=${Number(loggedUserId) + 1\n            }`\n          )\n\n          .then(function (response) {\n            var resp = response.data;\n            setProject(resp);\n          });\n      } else if (accessLevel == 641) {\n        axios\n          .get(\n            baseUrl +\n            `/ProjectMS/project/getProjectsbycsl?loggedUserId=${Number(loggedUserId) + 1\n            }`\n          )\n\n          .then(function (response) {\n            var resp = response.data;\n            setProject(resp);\n          });\n      } else if (accessLevel == 800) {\n        axios\n          .get(\n            baseUrl +\n            `/ProjectMS/project/getProjectsforDPPM?userId=${loggedUserId}&resId=${Number(loggedUserId) + 1\n            }`\n          )\n\n          .then(function (response) {\n            var resp = response.data;\n            setProject(resp);\n          });\n      } else if (accessLevel == 700) {\n        axios\n          .get(\n            baseUrl +\n            `/ProjectMS/project/getProjectsforCSLPM?userId=${loggedUserId}&resId=${Number(loggedUserId) + 1\n            }`\n          )\n\n          .then(function (response) {\n            var resp = response.data;\n            setProject(resp);\n          });\n      } else if (accessLevel == 930) {\n        axios\n          .get(\n            // dataAccess == 690 || dataAccess == 641 || dataAccess == 46\n            //   ?\n            baseUrl +\n            `/ProjectMS/project/getProjectsbyAE?loggedUserId=${Number(loggedUserId) + 1\n            }`\n            // : baseUrl + `/ProjectMS/Audit/getProjectNameandId`\n          )\n\n          .then(function (response) {\n            var resp = response.data;\n            setProject(resp);\n          });\n      } else if (accessLevel == 46) {\n        axios\n          .get(\n            // dataAccess == 690 || dataAccess == 641 || dataAccess == 46\n            //   ?\n            baseUrl +\n            `/ProjectMS/project/getProjectsForAlloc?loggedUserId=${loggedUserId}`\n\n            // : baseUrl + `/ProjectMS/Audit/getProjectNameandId`\n          )\n          .then(function (response) {\n            var resp = response.data;\n            setProject(resp);\n          });\n      } else {\n        axios\n          .get(baseUrl + `/ProjectMS/Audit/getProjectNameandId`)\n\n          .then(function (response) {\n            var resp = response.data;\n            setProject(resp);\n          });\n      }\n\n      if (accessLevel === 46) {\n        setSelectType(\"project\");\n        setFormData((prevData) => ({\n          ...prevData,\n          type: \"project\",\n        }));\n      }\n      if (accessLevel === 126 || accessLevel == 911) {\n        setSelectType(\"bu\");\n        setFormData((prevData) => ({\n          ...prevData,\n          type: \"bu\",\n        }));\n      }\n      if (accessLevel === 641 || accessLevel == 700 || accessLevel == 800) {\n        setSelectType(\"customer\");\n        setFormData((prevData) => ({\n          ...prevData,\n          type: \"customer\",\n        }));\n      }\n    });\n  };\n  console.log(dataAccess);\n  useEffect(() => {\n    getDepartments();\n  }, [selectType]);\n  const getDepartments = async () => {\n    const resp = await axios({\n      url: baseUrl + `/CostMS/cost/getDepartments`,\n    });\n\n    let departments = resp.data;\n    departments.push({ value: 999, label: \"Non-Revenue Units\" });\n    setDepartments(departments);\n    setSelectedDepartments(departments.filter((ele) => ele.value != 999));\n    let filteredDeptData = [];\n    departments.forEach((data) => {\n      if (data.value != 999) {\n        filteredDeptData.push(data.value);\n      }\n    });\n    setFormData((prevVal) => ({\n      ...prevVal,\n      [\"buId\"]: filteredDeptData.toString(),\n    }));\n  };\n\n  const getCountries = () => {\n    axios\n      .get(baseUrl + `/CostMS/cost/getCountries`)\n\n      .then((Response) => {\n        let countries = [];\n\n        let data = Response.data;\n        data.length > 0 &&\n          data.forEach((e) => {\n            let countryObj = {\n              label: e.country_name,\n              value: e.id,\n            };\n            countries.push(countryObj);\n          });\n        setCountry(countries);\n        setChangeCnt(countries);\n        setSelectedCountry(countries);\n      });\n  };\n\n  useEffect(() => {\n    let countryList = [];\n    country.forEach((d) => {\n      countryList.push(d.value);\n    });\n    setFormData((prevVal) => ({\n      ...prevVal,\n      [\"countryIds\"]: countryList.toString(),\n    }));\n  }, [country]);\n\n  const customValueRenderer = (selected, _options) => {\n    return selected.length === country.length ||\n      selected.length === departments.length ||\n      selected.length === measure.length\n      ? \"<< ALL >>\"\n      : selected.length === 0\n        ? \"<< Please Select >>\"\n        : selected.map((label) => {\n          return selected.length > 1 ? label.label + \",\" : label.label;\n        });\n  };\n\n  useEffect(() => {\n    if (dataAccess == 690 || dataAccess == 641 || dataAccess == 46) {\n      // getProjectdata();\n      getManagerdata();\n      getResourcedata();\n      // getCustomerdata();\n    }\n  }, [dataAccess]);\n\n  console.log(dataAccess, \"dataAccess\")\n  // const getProjectdata = () => {\n  //   {\n  //     axios\n  //       .get(\n  //         dataAccess == 690 || dataAccess == 641 || dataAccess == 46\n  //           ? baseUrl +\n  //           `/dashboardsms/allocationDashboard/getProjects?userId=${loggedUserId}`\n  //           : baseUrl + `/ProjectMS/Audit/getProjectNameandId`\n  //       )\n\n  //       .then(function (response) {\n  //         var resp = response.data;\n  //         setProject(resp);\n  //       });\n  //   }\n  // };\n\n  const getResourcedata = () => {\n    axios\n      .get(\n        dataAccess == 690 || dataAccess == 641 || dataAccess == 46\n          ? baseUrl +\n          `/dashboardsms/allocationDashboard/getResources?userId=${loggedUserId}`\n          : baseUrl + `/dashboardsms/allocationDashboard/getAllResources`\n      )\n      .then(function (response) {\n        var resp = response.data;\n        setResource(resp);\n      });\n  };\n\n  const getManagerdata = () => {\n    axios\n      .get(\n        dataAccess == 690 || dataAccess == 641 || dataAccess == 46\n          ? baseUrl +\n          `/CommonMS/master/getprimaryPm?loggedUserId=${loggedUserId}`\n          : baseUrl + `/dashboardsms/allocationDashboard/getManagers`\n      )\n      .then(function (response) {\n        var resp = response.data;\n        setManager(resp);\n      });\n  };\n\n  const handleClick = () => {\n    console.log(formData);\n    setViewBy(formData.viewType);\n    setTableData([]);\n\n    setShowWarning(parseInt(formData.filterVal, 10) > 100);\n    let filteredData = ref.current.filter((d) => d != null);\n    // const loaderTime = setTimeout(() => {\n    //   setsearching(parseInt(formData.filterVal, 10) > 100 ? false : true);\n\n    ref.current = filteredData;\n\n    let valid = GlobalValidation(ref);\n    if (\n      // (formData.filterMeasure != \"-1\"\n      //   && formData.filterVal == \"-1\"\n      // ) ||\n      // formData.filterVal == \"\"\n      (formData.filterMeasure !== \"-1\" && formData.filterVal === \"-1\") ||\n      (formData.filterVal === \"\" && formData.filterMeasure === \"-1\")\n    ) {\n      setShowWarning(true);\n      setTimeout(() => {\n        setShowWarning(false);\n      }, 1000);\n\n      // setsearching(false);\n      return;\n    }\n    console.log(valid, \"---valid\");\n    if (valid == true) {\n      setsearching(false);\n      // setShowWarning(true)\n      setErrorMsg(true);\n      setTimeout(() => {\n        setShowWarning(false);\n        setErrorMsg(false);\n      }, 1000);\n    }\n\n    if (valid || showWarning) {\n      return;\n    }\n\n    if (parseInt(formData.filterVal) > 100) {\n      return;\n    }\n\n    abortController.current = new AbortController();\n    const loaderTime = setTimeout(() => {\n      // setsearching(true)\n      setsearching(parseInt(formData.filterVal, 10) > 100 ? false : true);\n    }, 2000);\n    // setsearching(parseInt(formData.filterVal, 10) > 100 ? false : true);\n    axios({\n      method: \"post\",\n      url: baseUrl + `/dashboardsms/allocationDashboard/getAllocationDashboard`,\n      data: formData,\n      signal: abortController.current.signal,\n    })\n      .then((res) => {\n        // setTableData(res.data)\n        // const GetData = res.data;\n\n        let tabData = res.data.data;\n        //let tabData = detail.filter(data => data.id !== -1)\n        // let cols = res.data.columns.replaceAll(\"'\", \"\").split(\",\");\n        setDetails(tabData);\n        setsearching(false);\n        clearTimeout(loaderTime);\n        let responseObject = {\n          tabData: tabData,\n          reportRunId: res.data.reportRunId,\n        };\n        setMsg(true);\n        return responseObject;\n      })\n      .then((responseObject) => {\n        axios({\n          method: \"get\",\n          url:\n            baseUrl +\n            `/dashboardsms/allocationDashboard/getColumnsData?reportRunId=${responseObject.reportRunId}`,\n        }).then((res1) => {\n          let header = res1.data.val;\n\n          setColumns(header);\n          let fData = [\n            { columns: header },\n            { tableData: [...responseObject.tabData] },\n          ];\n          setsearching(false);\n          clearTimeout(loaderTime);\n          (!valid || !showWarning) && setVisible(!visible);\n\n          visible\n            ? setCheveronIcon(FaChevronCircleUp)\n            : setCheveronIcon(FaChevronCircleDown);\n          setTableData(fData);\n        });\n      })\n      .then((error) => { });\n  };\n\n  // const exportExcel = () => {\n  //   import(\"xlsx\").then((xlsx) => {\n  //     let wantedCols = Object.keys(details[0]);\n  //     let wantedValues = [];\n  //     let dd = JSON.parse(JSON.stringify(details)).slice(1);\n  //     for (let i = 0; i < dd.length; i++) {\n  //       const obj = {};\n  //       Object.keys(details[i]).forEach((d) => {\n  //         if (wantedCols.includes(d)) {\n  //           obj[details[0][d]] = details[i][d];\n  //         }\n  //       });\n  //       wantedValues.push(obj);\n  //     }\n  //     const worksheet = xlsx.utils.json_to_sheet(wantedValues.slice(1));\n  //     const workbook = { Sheets: { data: worksheet }, SheetNames: [\"data\"] };\n  //     const excelBuffer = xlsx.write(workbook, {\n  //       bookType: \"xlsx\",\n  //       type: \"array\",\n  //     });\n  //     saveAsExcelFile(excelBuffer, \"data\");\n  //   });\n  // };\n  const exportExcel = () => {\n    // import(\"xlsx\").then((xlsx) => {\n    let desiredColumnOrder = [];\n    let cols = [];\n    cols = columns.replaceAll(\"'\", \"\");\n    desiredColumnOrder = cols\n      .split(\",\")\n      .filter((col) => !col.includes(\"_greyout\"));\n\n    const wantedValues = details.map((item) => {\n      const obj = {};\n      desiredColumnOrder.forEach((col) => {\n        const value = item[col];\n        if (typeof value === \"string\") {\n          const [extractedValue, ,] = value.split(\"^&\"); // Extract the value from the key metadata\n          obj[col] = extractedValue; // Assign the extracted value to the corresponding column\n        } else {\n          obj[col] = value;\n        }\n      });\n      return obj;\n    });\n\n    // Create an array of objects where each object represents a row\n    const rows = wantedValues.map((item) => {\n      const row = [];\n      desiredColumnOrder.forEach((col) => {\n        row.push(item[col]);\n      });\n      return row;\n    });\n\n    const workbook = new ExcelJS.Workbook();\n    const worksheet = workbook.addWorksheet(\"Data\");\n    wantedValues.forEach((item) => {\n      const row = worksheet.addRow(Object.values(item));\n    });\n\n    const boldRow = [1, 2];\n    boldRow.forEach((index) => {\n      const row = worksheet.getRow(index);\n      row.font = { bold: true };\n    });\n    workbook.xlsx.writeBuffer().then((buffer) => {\n      saveAs(new Blob([buffer]), \"AllocationDashboard.xlsx\");\n    });\n  };\n\n  // const saveAsExcelFile = (buffer, fileName) => {\n  //   import(\"file-saver\").then((module) => {\n  //     if (module && module.default) {\n  //       let EXCEL_TYPE =\n  //         \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8\";\n  //       let EXCEL_EXTENSION = \".xlsx\";\n  //       const data = new Blob([buffer], { type: EXCEL_TYPE });\n  //       module.default.saveAs(\n  //         data,\n  //         fileName + EXCEL_EXTENSION\n  //         // fileName + \"_export_\" + new Date().getTime() + EXCEL_EXTENSION\n  //       );\n  //     }\n  //   });\n  // };\n  console.log(dataAccess);\n  const handleChange = (e) => {\n    const { id, value } = e.target;\n\n    setSelectType(value);\n    setFormData((prev) => ({ ...prev, [\"type\"]: e.target.value }));\n    setFormData((prev) => ({ ...prev, [\"countryIds\"]: \"6,5,3,8,4,7,1,2\" }));\n\n    setSelectedCountry(changeCnt);\n    // setSelectFilter(value)\n    // setFormData((prev) => ({ ...prev, [id]: value }))\n  };\n\n  const ArrowRenderer = ({ expanded }) => (\n    <>\n      {expanded ? (\n        <FaCaretDown className=\"chevronIcon\" />\n      ) : (\n        <FaCaretDown className=\"chevronIcon\" />\n      )}\n    </>\n  );\n  const handleClear = () => {\n    setFormData((prev) => ({ ...prev, customerId: \"-1\" }));\n    setFormData((prev) => ({ ...prev, projectId: \"-1\" }));\n    setFormData((prev) => ({ ...prev, resourceId: \"-1\" }));\n    setFormData((prev) => ({ ...prev, pmId: \"-1\" }));\n  };\n\n  const handleAbort = () => {\n    abortController.current && abortController.current.abort();\n    setsearching(false);\n  };\n\n  useEffect(() => { }, [selectType]);\n\n  return (\n    <div>\n      <div className=\"col-md-12\">\n        <div className=\"pageTitle\">\n          <div className=\"childOne\"></div>\n          <div className=\"childTwo\">\n            <h2>Allocation Dashboard</h2>\n          </div>\n          <div className=\"childThree\"></div>\n        </div>\n      </div>\n      {showWarning ? (\n        <div className=\"statusMsg error\">\n          {\" \"}\n          <AiFillWarning /> Please enter a value less than or equal to 100\n        </div>\n      ) : (\n        \"\"\n      )}\n\n      {errorMsg ? (\n        <div className=\"statusMsg error col-12 mb-2\">\n          <span>\n            <IoWarningOutline />\n            &nbsp;{`Please select valid values for highlighted fields`}\n          </span>\n        </div>\n      ) : (\n        \"\"\n      )}\n      <ScreenBreadcrumbs\n        routes={routes}\n        currentScreenName={currentScreenName}\n      />\n\n      <div className=\"group mb-3 customCard\">\n        <div className=\"col-md-12 collapseHeader\">\n          <h2>Search Filters</h2>\n          <div className=\"helpBtn\">\n            <GlobalHelp pdfname={HelpPDFName} name={HelpHeader} />\n          </div>\n          <div\n            onClick={() => {\n              setVisible(!visible);\n              visible\n                ? setCheveronIcon(FaChevronCircleUp)\n                : setCheveronIcon(FaChevronCircleDown);\n            }}\n          >\n            <span>{cheveronIcon}</span>\n          </div>\n        </div>\n        <CCollapse visible={!visible}>\n          <div className=\"group-content row\">\n            <div className=\"col-md-3 mb-2\">\n              <div className=\"form-group row\">\n                <label className=\"col-4\" htmlFor=\"select\">\n                  Type\n                </label>\n                <span className=\"col-1 p-0\">:</span>\n                <div className=\"col-7\">\n                  <select id=\"type\" onChange={handleChange}>\n                    {dataAccess == 690 ||\n                      dataAccess == 641 ||\n                      dataAccess == 600 ||\n                      dataAccess == 930 ||\n                      dataAccess == 800 ||\n                      dataAccess == 700 ? (\n                      <>\n                        <option value=\"customer\" selected>\n                          Customer\n                        </option>\n                        <option value=\"project\">Project</option>\n                        {/* <option value=\"resource\">Resource</option> */}\n                      </>\n                    ) : (\n                      <>\n                        {dataAccess == 46 ? (\n                          \"\"\n                        ) : (\n                          <option value=\"bu\" selected>\n                            Business Unit\n                          </option>\n                        )}\n                        {dataAccess == 46 ? (\n                          \"\"\n                        ) : (\n                          <option value=\"customer\">Customer</option>\n                        )}\n                        <option value=\"project\">Project</option>\n                        {dataAccess == 46 ? (\n                          \"\"\n                        ) : (\n                          <option value=\"resource\">Resource</option>\n                        )}\n                        {dataAccess == 686 ||\n                          dataAccess == 932 ||\n                          dataAccess == 126 ||\n                          dataAccess == 911 ||\n                          dataAccess == 46 ? (\n                          <option value=\"primaryPm\">Primary PM</option>\n                        ) : (\n                          \"\"\n                        )}\n                      </>\n                    )}\n                    { }\n                  </select>\n                </div>\n              </div>\n            </div>\n            {dataAccess == 690 ||\n              dataAccess == 641 ||\n              dataAccess == 930 ||\n              dataAccess == 600 ||\n              dataAccess == 46 ||\n              dataAccess == 800 ||\n              dataAccess == 700\n              ? \"\"\n              :\n              (selectType == \"bu\" ||\n                selectType == \"customer\") && (\n                <div className=\"col-md-3 mb-2\">\n                  <div className=\"form-group row\">\n                    <label className=\"col-4\" htmlFor=\"email-input\">\n                      BU<span className=\"error-text ml-1\">*</span>\n                    </label>\n                    <span className=\"col-1 p-0\">:</span>\n                    <div\n                      className=\"col-7 multiselect\"\n                      ref={(ele) => {\n                        ref.current[0] = ele;\n                      }}\n                    >\n                      <MultiSelect\n                        ArrowRenderer={ArrowRenderer}\n                        id=\"buId\"\n                        options={departments}\n                        hasSelectAll={true}\n                        isLoading={false}\n                        shouldToggleOnHover={false}\n                        disableSearch={false}\n                        value={selectedDepartments}\n                        valueRenderer={customValueRenderer}\n                        disabled={false}\n                        onChange={(s) => {\n                          setSelectedDepartments(s);\n                          let filteredValues = [];\n                          s.forEach((d) => {\n                            filteredValues.push(d.value);\n                          });\n\n                          setFormData((prevVal) => ({\n                            ...prevVal,\n                            [\"buId\"]: filteredValues.toString(),\n                          }));\n                        }}\n                      />\n                    </div>\n                  </div>\n                </div>\n              )}\n            {console.log(formData.type, \"formData.type \")}\n            {/* {(selectType == \"customer\" && dataAccess == 641) ||\n            dataAccess == 600 ||\n            dataAccess == 641 ||\n            dataAccess == 909 ||\n            dataAccess == 690 ||\n            (selectType == \"customer\" && dataAccess == 690) ||\n            (selectType == \"customer\" && dataAccess == 600) ||\n            (selectType == \"customer\" && dataAccess == 900) ? ( */}\n            {selectType == \"customer\" ? (\n              <div className=\"col-md-3 mb-2\">\n                <div className=\"form-group row\">\n                  <label className=\"col-4\" htmlFor=\"email-input\">\n                    Customer<span className=\"error-text ml-1\">*</span>\n                  </label>\n                  <span className=\"col-1 p-0\">:</span>\n                  <div\n                    className=\"col-7 autocomplete\"\n                    ref={(ele) => {\n                      ref.current[1] = ele;\n                    }}\n                  >\n                    <div className=\"autoComplete-container\">\n                      <ReactSearchAutocomplete\n                        items={customer}\n                        type=\"Text\"\n                        name=\"customerId\"\n                        id=\"customerId\"\n                        className=\"AutoComplete\"\n                        onSelect={(e) => {\n                          setFormData((prevProps) => ({\n                            ...prevProps,\n                            customerId: e.id,\n                          }));\n                        }}\n                        showIcon={false}\n                        onClear={handleClear}\n                        placeholder=\"Type minimum 3 characters\"\n                      />\n                      <span> {item.name}</span>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            ) : (\n              \"\"\n            )}\n\n            {selectType == \"project\" ? (\n              <div className=\"col-md-3 mb-2\">\n                <div className=\"form-group row\">\n                  <label className=\"col-4\" htmlFor=\"email-input\">\n                    Project<span className=\"error-text ml-1\">*</span>\n                  </label>\n                  <span className=\"col-1 p-0\">:</span>\n                  <div\n                    className=\"col-7 autocomplete\"\n                    ref={(ele) => {\n                      ref.current[2] = ele;\n                    }}\n                  >\n                    <div className=\"autoComplete-container \">\n                      <ReactSearchAutocomplete\n                        items={project}\n                        type=\"Text\"\n                        name=\"projectId\"\n                        id=\"projectId\"\n                        className=\"error AutoComplete\"\n                        onSelect={(e) => {\n                          setFormData((prevProps) => ({\n                            ...prevProps,\n                            projectId: e.id,\n                          }));\n                        }}\n                        showIcon={false}\n                        onClear={handleClear}\n                        placeholder=\"Type minimum 3 characters\"\n                      />\n                      <span> {item.name}</span>\n                    </div>\n                    {/* <input type=\"text\" /> */}\n                  </div>\n                </div>\n              </div>\n            ) : (\n              \"\"\n            )}\n            {selectType == \"resource\" ? (\n              <div className=\"col-md-3 mb-2\">\n                <div className=\"form-group row\">\n                  <label className=\"col-4\" htmlFor=\"email-input\">\n                    Resource<span className=\"error-text ml-1\">*</span>\n                  </label>\n                  <span className=\"col-1 p-0\">:</span>\n                  <div\n                    className=\"col-7 autocomplete\"\n                    ref={(ele) => {\n                      ref.current[3] = ele;\n                    }}\n                  >\n                    <div className=\"autoComplete-container \">\n                      <ReactSearchAutocomplete\n                        items={resource}\n                        type=\"Text\"\n                        name=\"resourceId\"\n                        id=\"resourceId\"\n                        className=\"error AutoComplete\"\n                        onSelect={(e) => {\n                          setFormData((prevProps) => ({\n                            ...prevProps,\n                            resourceId: e.id,\n                          }));\n                        }}\n                        showIcon={false}\n                        onClear={handleClear}\n                        placeholder=\"Type minimum 3 characters\"\n                      />\n                      <span> {item.name}</span>\n                    </div>\n                    {/* <input type=\"text\" /> */}\n                  </div>\n                </div>\n              </div>\n            ) : (\n              \"\"\n            )}\n            {selectType == \"primaryPm\" ? (\n              <div className=\"col-md-3 mb-2\">\n                <div className=\"form-group row\">\n                  <label className=\"col-4\" htmlFor=\"email-input\">\n                    Primary PM<span className=\"error-text ml-1\">*</span>\n                  </label>\n                  <span className=\"col-1 p-0\">:</span>\n                  <div\n                    className=\"col-7 autocomplete\"\n                    ref={(ele) => {\n                      ref.current[4] = ele;\n                    }}\n                  >\n                    <div className=\"autoComplete-container \">\n                      <ReactSearchAutocomplete\n                        items={manager}\n                        type=\"Text\"\n                        name=\"pmId\"\n                        id=\"pmId\"\n                        className=\"error AutoComplete\"\n                        onSelect={(e) => {\n                          setFormData((prevProps) => ({\n                            ...prevProps,\n                            pmId: e.id,\n                          }));\n                        }}\n                        showIcon={false}\n                        onClear={handleClear}\n                        placeholder=\"Type minimum 3 characters\"\n                      />\n                      <span> {item.name}</span>\n                    </div>\n                    {/* <input type=\"text\" /> */}\n                  </div>\n                </div>\n              </div>\n            ) : (\n              \"\"\n            )}\n            <div className=\"col-md-3 mb-2\">\n              <div className=\"form-group row\">\n                <label className=\"col-4\" htmlFor=\"email-input\">\n                  Country<span className=\"error-text ml-1\">*</span>\n                </label>\n                <span className=\"col-1 p-0\">:</span>\n                <div\n                  className=\"col-7 multiselect\"\n                  ref={(ele) => {\n                    ref.current[5] = ele;\n                  }}\n                >\n                  <MultiSelect\n                    ArrowRenderer={ArrowRenderer}\n                    id=\"countryIds\"\n                    options={country}\n                    hasSelectAll={true}\n                    value={selectedCountry}\n                    disabled={false}\n                    valueRenderer={customValueRenderer}\n                    onChange={(e) => {\n                      setSelectedCountry(e);\n                      let filteredCountry = [];\n                      e.forEach((d) => {\n                        filteredCountry.push(d.value);\n                      });\n                      setFormData((prevVal) => ({\n                        ...prevVal,\n                        [\"countryIds\"]: filteredCountry.toString(),\n                      }));\n                    }}\n                  />\n                </div>\n              </div>\n            </div>\n            <div className=\"col-md-3 mb-2\">\n              <div className=\"form-group row\">\n                <label className=\"col-4\" htmlFor=\"select\">\n                  Res. Type\n                </label>\n                <span className=\"col-1 p-0\">:</span>\n                <div className=\"col-7\">\n                  <select\n                    id=\"resType\"\n                    onChange={(e) =>\n                      setFormData((prev) => ({\n                        ...prev,\n                        [\"resType\"]: e.target.value,\n                      }))\n                    }\n                  >\n                    <option value=\"-1\">&lt;&lt;ALL&gt;&gt;</option>\n                    <option value=\"fte\">Employee</option>\n                    <option value=\"subk\">Contractors</option>\n                  </select>\n                </div>\n              </div>\n            </div>\n\n            <div className=\"col-md-3 mb-2\">\n              <div className=\"form-group row \">\n                <label className=\"col-4\" htmlFor=\"email-input\">\n                  Month\n                </label>\n                <span className=\"col-1 p-0\">:</span>\n                <div className=\"col-7 datepicker\" style={{ zIndex: 4 }}>\n                  <DatePicker\n                    name=\"month\"\n                    id=\"month\"\n                    onChange={(e) => {\n                      SetDate(e);\n                      setFormData((prev) => ({\n                        ...prev,\n                        [\"month\"]: moment(e).format(\"yyyy-MM-DD\"),\n                      }));\n                      setMonth(e);\n                    }}\n                    selected={date}\n                    dateFormat=\"MMM-yyyy\"\n                    showMonthYearPicker\n                  // onKeyDown={(e) => {\n                  //   e.preventDefault();\n                  // }}\n                  />\n                </div>\n              </div>\n            </div>\n            <div className=\"col-md-3 mb-2\">\n              <div className=\"form-group row\">\n                <label className=\"col-4\" htmlFor=\"select\">\n                  Duration\n                </label>\n                <span className=\"col-1 p-0\">:</span>\n                <div className=\"col-7\">\n                  <select\n                    id=\"duration\"\n                    onSelect={(e) => setDuration(e.target.value)}\n                    onChange={(e) =>\n                      setFormData((prev) => ({\n                        ...prev,\n                        [\"duration\"]: e.target.value,\n                      }))\n                    }\n                  >\n                    <option value=\"1\">1</option>\n                    <option value=\"2\">2</option>\n                    <option value=\"3\" selected>\n                      3\n                    </option>\n                    <option value=\"4\">4</option>\n                    <option value=\"5\">5</option>\n                    <option value=\"6\">6</option>\n                    <option value=\"7\">7</option>\n                    <option value=\"8\">8</option>\n                    <option value=\"9\">9</option>\n                    <option value=\"10\">10</option>\n                    <option value=\"11\">11</option>\n                    <option value=\"12\">12</option>\n                  </select>\n                </div>\n              </div>\n            </div>\n            <div className=\"col-md-3 mb-2\">\n              <div className=\"form-group row\">\n                <label className=\"col-4\" htmlFor=\"email-input\">\n                  Measures<span className=\"error-text ml-1\">*</span>\n                </label>\n                <span className=\"col-1 p-0\">:</span>\n                <div\n                  className=\"col-7 multiselect\"\n                  ref={(ele) => {\n                    ref.current[6] = ele;\n                  }}\n                >\n                  <MultiSelect\n                    ArrowRenderer={ArrowRenderer}\n                    id=\"measures\"\n                    options={measure}\n                    hasSelectAll={true}\n                    value={selectedMeasure}\n                    disabled={false}\n                    valueRenderer={customValueRenderer}\n                    onChange={(e) => {\n                      setSelectedMeasure(e);\n                      let filteredvalue = [];\n                      e.forEach((d) => {\n                        filteredvalue.push(d.value);\n                      });\n                      setFormData((prevVal) => ({\n                        ...prevVal,\n                        [\"measures\"]: filteredvalue.toString(),\n                      }));\n                      setFormData((prev) => ({ ...prev, [\"filterVal\"]: \"-1\" }));\n                      setSelectFilter(\"-1\");\n                    }}\n                  />\n                </div>\n              </div>\n            </div>\n            {selectType == \"bu\" ? (\n              <div className=\"col-md-3 mb-2\">\n                <div className=\"form-group row\">\n                  <label className=\"col-4\" htmlFor=\"select\">\n                    View By\n                  </label>\n                  <span className=\"col-1 p-0\">:</span>\n                  <div className=\"col-7\">\n                    <select\n                      id=\"viewType\"\n                      onChange={(e) =>\n                        setFormData((prev) => ({\n                          ...prev,\n                          [\"viewType\"]: e.target.value,\n                        }))\n                      }\n                    >\n                      <option value=\"resource\" selected>\n                        Resource\n                      </option>\n                      <option value=\"bu\">BU</option>\n                    </select>\n                  </div>\n                </div>\n              </div>\n            ) : (\n              \"\"\n            )}\n            <div className=\"col-md-3 mb-2\">\n              <div className=\"form-group row\">\n                <label className=\"col-4\" htmlFor=\"select\">\n                  Filter By\n                </label>\n                <span className=\"col-1 p-0\">:</span>\n                <div className=\"col-3 pr-0\">\n                  <select\n                    id=\"filterMeasure\"\n                    value={selectFilter}\n                    onChange={(e) => {\n                      setFormData((prev) => ({\n                        ...prev,\n                        [\"filterMeasure\"]: e.target.value,\n                      }));\n                      setFormData((prev) => ({ ...prev, [\"filterVal\"]: \"-1\" }));\n                      setSelectFilter(e.target.value);\n                    }}\n                  >\n                    <option value=\"-1\">&lt;&lt;Please Select&gt;&gt;</option>\n                    {selectedMeasure.map((Item) => (\n                      <option value={Item.value}> {Item.label}</option>\n                    ))}\n                  </select>\n                </div>\n                <div className=\"col-2 pl-1 pr-0\">\n                  <select\n                    id=\"operator\"\n                    className={selectFilter == -1 ? \"disabledFieldStyles\" : \"\"}\n                    disabled={selectFilter == -1}\n                    onChange={(e) =>\n                      setFormData((prev) => ({\n                        ...prev,\n                        [\"operator\"]: e.target.value,\n                      }))\n                    }\n                  >\n                    <option value=\"ge\" selected>\n                      &ge;\n                    </option>\n                    <option value=\"le\">&le;</option>\n                    <option value=\"gt\">&gt;</option>\n                    <option value=\"lt\">&lt;</option>\n                    <option value=\"eq\">=</option>\n                  </select>\n                </div>\n                <div className=\"col-2\">\n                  <input\n                    type=\"text\"\n                    className={\n                      selectFilter == -1\n                        ? \"disabledFieldStyles\"\n                        : showWarning\n                          ? \"warning\"\n                          : \"\"\n                    }\n                    disabled={selectFilter == -1 ? true : false}\n                    value={\n                      selectFilter == -1\n                        ? \"\"\n                        : formData.filterVal == \"-1\"\n                          ? \"\"\n                          : formData.filterVal\n                    }\n                    onChange={(e) => {\n                      const inputValue = e.target.value;\n\n                      const isValidInput = /^\\d*$/.test(inputValue);\n                      // && !inputValue.startsWith(\"0\");\n                      if (isValidInput) {\n                        setFormData((prev) => ({\n                          ...prev,\n                          [\"filterVal\"]: e.target.value,\n                        }));\n                      }\n                    }}\n                    id=\"filterVal\"\n                    maxLength={3}\n                    onKeyPress={(e) => {\n                      e.key === \"\";\n                    }}\n                    onKeyDown={(e) =>\n                      e.keyCode &&\n                      (e.keyCode <= 47 || e.keyCode >= 58) &&\n                      e.keyCode != 8 &&\n                      e.preventDefault()\n                    }\n                  />\n                </div>\n              </div>\n            </div>\n            <div className=\"col-md-12 col-sm-12 col-xs-12 my-2 btn-container center\">\n              <button\n                type=\"button\"\n                className=\"btn btn-primary\"\n                onClick={handleClick}\n              >\n                <FaSearch /> Search{\" \"}\n              </button>\n            </div>\n\n            {/* <div className=\"col-md-12\">\n              <FlatPrimeReactTable data={employeeData} />\n            </div> */}\n          </div>\n        </CCollapse>\n        {searching ? <Loader handleAbort={handleAbort} /> : \"\"}\n      </div>\n      <div className=\"col-12 p-0\">\n        <div className=\"col-12 row mr-0 pr-0\">\n          {msg && (\n            <div className=\"col-10\">\n              <span style={{ fontWeight: \"bold\" }}>B </span>- Billable,{\" \"}\n              <span style={{ fontWeight: \"bold\" }}>NB </span>- Non - Billable,{\" \"}\n              <span style={{ fontWeight: \"bold\" }}>I</span> - Innovation,{\" \"}\n              <span style={{ fontWeight: \"bold\" }}>O</span> - Others\n            </div>\n          )}\n          {msg && (\n            <div className=\"col-2\" align=\" right \">\n              <RiFileExcel2Line\n                size=\"1.5em\"\n                title=\"Export to Excel\"\n                style={{ color: \"green\" }}\n                cursor=\"pointer\"\n                onClick={() => {\n                  exportExcel();\n                }}\n              />\n            </div>\n          )}\n        </div>\n        <DashboardAllocationTable\n          viewBy={viewBy}\n          data={tableData}\n          expandedCols={[\"emp_cadre\", \"department\", \"supervisor\"]}\n          colExpandState={[\"0\", \"1\", \"name\"]}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default DashboardAllocation;\n","import React, { useState, useEffect } from \"react\";\nimport MaterialReactTable from \"material-react-table\";\nimport { IconButton } from \"@mui/material\";\nimport fte_active from \"../../assets/images/empstatusIcon/fte_active.png\";\nimport fte_inactive from \"../../assets/images/empstatusIcon/fte_inactive.png\";\nimport fte_notice from \"../../assets/images/empstatusIcon/fte_notice.png\";\nimport subk_active from \"../../assets/images/empstatusIcon/subk_active.png\";\nimport subk_inactive from \"../../assets/images/empstatusIcon/subk_inactive.png\";\nimport subk_notice from \"../../assets/images/empstatusIcon/subk_notice.png\";\nimport \"./EngagementAllocationsTable.scss\";\nimport { BiChevronLeft, BiChevronRight } from \"react-icons/bi\";\n\nexport default function MaterialReactCollapisbleTable(props) {\n  const icons = {\n    fte0: (\n      <img\n        src={fte_inactive}\n        alt=\"(fte_inactive_icon)\"\n        style={{ height: \"12px\", float: \"left\" }}\n        title=\"Ex-Employee\"\n      />\n    ),\n    fte1: (\n      <img\n        src={fte_active}\n        alt=\"(fte_active_icon)\"\n        style={{ height: \"12px\", float: \"left\" }}\n        title=\"Active Employee\"\n      />\n    ),\n    fte2: (\n      <img\n        src={fte_notice}\n        alt=\"(fte_notice_icon)\"\n        style={{ height: \"12px\", float: \"left\" }}\n        title=\"Employee in notice period\"\n      />\n    ),\n    subk0: (\n      <img\n        src={subk_inactive}\n        alt=\"(subk_inactive_icon)\"\n        style={{ height: \"12px\", float: \"left\" }}\n        title=\"Ex-Contractor\"\n      />\n    ),\n    subk1: (\n      <img\n        src={subk_active}\n        alt=\"(subk_active_icon)\"\n        style={{ height: \"12px\", width: \"auto\", float: \"left\" }}\n        title=\"Active Contractor\"\n        size=\"1em\"\n      />\n    ),\n    subk2: (\n      <img\n        src={subk_notice}\n        alt=\"(subk_notice_icon)\"\n        style={{ height: \"12px\", float: \"left\" }}\n        title=\"Contractor in notice period\"\n      />\n    ),\n  };\n\n  const { data, expandedCols, colExpandState } = props;\n\n  const [nodes, setNodes] = useState([]);\n  const [columns, setColumns] = useState(null);\n  const [hiddenColumns, setHiddenColumns] = useState({});\n  const [colExpFlag, setColumnExpFlag] = useState(false);\n  const [headers, setHeaders] = useState([]);\n\n  const numberWithCommas = (x) => {\n    var number = String(x);\n    if (number.includes(\".\")) {\n      var decimalNumbers = number;\n      var num = Number(decimalNumbers);\n      let FdN =\n        num != null &&\n        num.toLocaleString(\"en-US\", {\n          minimumFractionDigits: 2,\n          maximumFractionDigits: 20,\n        });\n      let final = FdN.split(\".\");\n      final[0] = final[0].replace(/(?<=\\d)(?=(\\d{3})+(?!\\d|\\.))/g, \",\");\n      return final.join(\".\");\n    } else {\n      return (\n        number != null &&\n        parseFloat(number)\n          .toLocaleString(\"en-US\", {\n            minimumFractionDigits: 2,\n            maximumFractionDigits: 20,\n          })\n          .replace(/(?<=\\d)(?=(\\d{3})+(?!\\d|\\.))/g, \",\")\n      );\n    }\n  };\n\n  useEffect(() => {\n    getData();\n  }, [data]);\n  var count = 0;\n\n  const getData = () => {\n    let expandClass = \"\";\n    if (colExpFlag == true && count > 0) {\n      expandClass = \"expanded\";\n    } else {\n      expandClass = \"\";\n    }\n    let tableData = data.tableData;\n    let columns = null;\n\n    if (data?.columns?.includes(\"'\")) {\n      columns = data?.columns?.replaceAll(\"'\", \"\");\n    } else {\n      columns = data?.columns;\n    }\n\n    let colArr = columns?.split(\",\");\n\n    let newHeaders = [];\n    let hiddenHeaders = [];\n\n    const obj = {};\n\n    for (let i = 0; i < colArr?.length; i++) {\n      let colVal = colArr[i].trim();\n\n      let firstData = tableData[0];\n      obj[colVal] = firstData[colVal];\n    }\n\n    let headerArray = Object.entries(obj);\n\n    let filteredHeaders = headerArray.filter(\n      ([key, value]) => typeof value === \"string\" && value.includes(\"^&\")\n    );\n\n    setHeaders(filteredHeaders);\n\n    filteredHeaders.map(([key, value]) => {\n      if (expandedCols.includes(key)) {\n        hiddenHeaders.push({ [key]: false });\n      }\n    });\n\n    setHiddenColumns(Object.assign({}, ...hiddenHeaders));\n\n    filteredHeaders.map(([key, value], index) => {\n      newHeaders.push({\n        accessorKey: key,\n        header: value.split(\"^&\")[0],\n        enableColumnActions: false,\n        enableHiding: true,\n        Header: ({ column }) => (\n          <div>\n            {value.split(\"^&\")[0]}{\" \"}\n            {key == colExpandState[2] ? (\n              <IconButton\n                className=\"expandIcon\"\n                title=\"Show Details\"\n                onClick={() => {\n                  setColumnExpFlag((prev) => !prev);\n                }}\n              >\n                {colExpFlag ? <BiChevronLeft /> : <BiChevronRight />}\n              </IconButton>\n            ) : (\n              \"\"\n            )}\n          </div>\n        ),\n        Cell: ({ cell }) => {\n          return (\n            <div\n              style={{\n                whiteSpace: \"nowrap\",\n                overflow: \"hidden\",\n                textOverflow: \"ellipsis\",\n              }}\n              title={cell.getValue()}\n              className={\n                key.includes(\"_\")\n                  ? key.split(\"_\")[1] % 2 == 0\n                    ? \"\"\n                    : \"odd\"\n                  : key.includes(\"total\")\n                  ? \"total\"\n                  : (key == \"roleName\" || key == \"prjMgr\") && \"projManager\"\n              }\n            >\n              {cell.column.id == \"name\" &&\n              cell.row.original.parentId != null ? (\n                <span className=\"rescolor\">\n                  {icons[cell.row.original[\"empStatus\"]]}\n                  &nbsp;{cell.getValue()}\n                </span>\n              ) : key.includes(\"_\") && key.split(\"_\")[2] ? (\n                numberWithCommas(cell.getValue())\n              ) : key.includes(\"total\") ? (\n                numberWithCommas(cell.getValue())\n              ) : (\n                cell.getValue()\n              )}\n            </div>\n          );\n        },\n      });\n    });\n\n    setColumns(newHeaders);\n    let values = [];\n    tableData?.map((d, i) => (i > 0 && d.id != -1 ? values.push(d) : \"\"));\n    setNodes(jsonToTree(values, { children: \"subRows\" }));\n  };\n\n  // useEffect(() => {\n  //   getData();\n  //   colExpFlag ? setHiddenColumns({}) : colCollapse();\n  // }, [colExpFlag]);\n\n  const expandF = () => {\n    getData();\n  };\n\n  const expandT = () => {\n    count++;\n    getData();\n    setHiddenColumns({});\n  };\n\n  useEffect(() => {\n    colExpFlag ? expandT() : expandF();\n    // getData();\n  }, [colExpFlag]);\n\n  const colCollapse = () => {\n    let hiddenHeaders = [];\n    headers.map(([key, value]) => {\n      if (expandedCols.includes(key)) {\n        hiddenHeaders.push({ [key]: false });\n      }\n    });\n\n    setHiddenColumns(Object.assign({}, ...hiddenHeaders));\n  };\n\n  const jsonToTree = (flatArray, options) => {\n    options = {\n      id: \"uniqueId\",\n      parentId: \"parentId\",\n      children: \"subRows\",\n      ...options,\n    };\n    const dictionary = {};\n    const tree = [];\n    const children = options.children;\n    flatArray.forEach((node) => {\n      const nodeId = node[options.id];\n      const nodeParentId = node[options.parentId];\n      dictionary[nodeId] = {\n        [children]: [],\n        ...node,\n        ...dictionary[nodeId],\n      };\n      dictionary[nodeParentId] = dictionary[nodeParentId] || { [children]: [] };\n      dictionary[nodeParentId][children].push(dictionary[nodeId]);\n    });\n    Object.values(dictionary).forEach((obj) => {\n      if (typeof obj[options.id] === \"undefined\") {\n        tree.push(...obj[children]);\n      }\n    });\n    return tree;\n  };\n\n  return (\n    <div className=\"materialReactExpandableTable engagementAllocationsTable darkHeader\">\n      {columns?.length ? (\n        <MaterialReactTable\n          columns={columns}\n          data={nodes}\n          enableExpandAll={true}\n          enableExpanding\n          enablePagination={false}\n          enableBottomToolbar={false}\n          enableTopToolbar={false}\n          enableColumnActions={false}\n          enableSorting={false}\n          filterFromLeafRows\n          initialState={{\n            expanded: false,\n            density: \"compact\",\n            columnVisibility: { ...hiddenColumns },\n            columnPinning: { right: [\"total\"] },\n          }}\n          state={{ columnVisibility: { ...hiddenColumns } }}\n          defaultColumn={{ minSize: 40, maxSize: 1000, size: 40 }}\n          enableStickyHeader\n          muiTableContainerProps={{\n            sx: {\n              maxHeight: \"70vh\",\n              width: \"auto\",\n              maxWidth: \"fit-content\",\n            },\n          }}\n          muiTableBodyProps={{\n            sx: {\n              \"&\": {},\n              \"& td\": {\n                borderRight: \"1px solid #ccc\",\n                height: \"22px\",\n                fontSize: \"11px\",\n                paddingTop: \"0px\",\n                paddingBottom: \"0px\",\n              },\n            },\n          }}\n          muiTableHeadProps={{\n            sx: {\n              \"& th\": {\n                borderTop: \"1px solid #ccc\",\n                borderRight: \"1px solid #ccc\",\n                background: \"#f4f4f4 \",\n                fontSize: \"13px\",\n                padding: \"0px 8px\",\n              },\n            },\n          }}\n        ></MaterialReactTable>\n      ) : null}\n    </div>\n  );\n}\n"],"names":["require","props","data","rows","dynamicColumns","col","headerdatagroup","linkColumns","linkColumnsRoutes","headerData","setHeaderData","exportData","customFilters","customFilterValue","setCustomFilterValue","useState","mainData","setMainData","bodyData","setBodyData","exportColumns","setExportColumns","dt","useRef","useEffect","JSON","parse","stringify","length","splice","dtt","headDt","Object","keys","forEach","d","push","title","dataKey","filtersData","contains","value","matchMode","FilterMatchMode","global","filters1","setFilters1","globalFilterValue1","setGlobalFilterValue1","onGlobalFilterChange1","e","target","_filters1","RenderCustomFilters","cstFtlrs","id","onChange","map","selected","exportExcel","then","xlsx","wantedCols","wantedValues","dd","slice","obj","i","includes","buffer","fileName","workbook","Sheets","utils","json_to_sheet","SheetNames","excelBuffer","write","bookType","type","module","default","data1","Blob","saveAs","exportPdf","print","pdf","jsPDF","columns","temp","text","autoTable","startY","theme","styles","font","halign","cellPadding","lineWidth","lineColor","textColor","headStyles","fontStyle","fillColor","alternateRowStyles","rowStyles","tableLineColor","save","header1","className","undefined","onClick","selectionOnly","current","exportCSV","defaultValue","placeholder","stripedRows","paginatorTemplate","currentPageReportTemplate","rowsPerPageOptions","paginator","showGridlines","filters","responsiveLayout","header","emptyMessage","ref","el","openPopup","setOpenPopup","resid","resName","setData","baseUrl","environment","getActionItemDetails","align","style","textAlign","maxWidth","fontSize","comments","created_dt","effective_dt","completed_dt","entryby","category","lkup_name","sortable","body","field","axios","method","url","response","GetData","moment","format","fData","visible","size","onClose","backdrop","DashboardAllocationTable","expandedCols","colExpandState","viewBy","nodes","setNodes","setColumns","hiddenColumns","setHiddenColumns","colExpFlag","setColumnExpFlag","headers","setHeaders","setResName","setResId","icons","fte0","src","fte_inactive","alt","height","fte1","fte_active","fte2","fte_notice","subk0","subk_inactive","subk1","subk_active","subk2","subk_notice","getData","tableData","replaceAll","colArr","split","newHeaders","hiddenHeaders","colVal","trim","firstData","headerArray","entries","totalElement","filter","key","console","log","filteredHeaders","totalPosition","totalIndex","findIndex","assign","minusOneRow","index","accessorKey","lastIndexOf","enableColumnActions","enableHiding","Header","column","IconButton","prev","color","subHeaders","sort","indexOf","subArray","Cell","cell","row","original","name","whiteSpace","overflow","textOverflow","getValue","to","actionDate","cursor","textDecoration","values","jsonToTree","children","colCollapse","flatArray","options","parentId","dictionary","tree","node","nodeId","nodeParentId","enableExpandAll","enableExpanding","enablePagination","enableRowVirtualization","enableFullScreenToggle","enableDensityToggle","enableGlobalFilter","enableBottomToolbar","enableTopToolbar","enablePinning","enableColumnFilters","enableSorting","filterFromLeafRows","initialState","showGlobalFilter","expanded","density","columnVisibility","columnPinning","left","state","showProgressBars","paginateExpandedRows","defaultColumn","minSize","maxSize","muiSearchTextFieldProps","variant","muiTableContainerProps","sx","width","maxHeight","muiTableBodyProps","borderRight","borderBottom","borderLeft","minWidth","padding","muiTableHeadProps","borderTop","background","setVisible","item","showWarning","setShowWarning","setMonth","FaChevronCircleUp","cheveronIcon","setCheveronIcon","departments","setDepartments","dataAccess","setDataAccess","selectType","setSelectType","selectFilter","setSelectFilter","msg","setMsg","country","setCountry","label","measure","selectedDepartments","setSelectedDepartments","selectedCountry","setSelectedCountry","selectedMeasure","setSelectedMeasure","setDuration","Date","date","SetDate","customer","setCustomer","project","setProject","resource","setResource","manager","setManager","details","setDetails","searching","setsearching","errorMsg","setErrorMsg","setTableData","abortController","changeCnt","setChangeCnt","setViewBy","currentDate","year","getFullYear","cumonth","getMonth","firstDay","initialValue","buId","countryIds","resType","month","toDateString","duration","customerId","projectId","resourceId","pmId","measures","filterMeasure","operator","filterVal","viewType","formData","setFormData","loggedUserId","localStorage","getItem","routes","setRoutes","getDepartments","getCountries","getResourcedata","getManagerdata","getMenus","resp","display_name","allocationDashboardSubMenu","find","subMenus","subMenu","userRoles","accessLevel","Number","prevData","ele","filteredDeptData","prevVal","toString","Response","countries","countryObj","country_name","countryList","customValueRenderer","_options","ArrowRenderer","handleClear","ScreenBreadcrumbs","currentScreenName","GlobalHelp","pdfname","FaChevronCircleDown","htmlFor","hasSelectAll","isLoading","shouldToggleOnHover","disableSearch","valueRenderer","disabled","s","filteredValues","ReactSearchAutocomplete","items","onSelect","prevProps","showIcon","onClear","filteredCountry","zIndex","dateFormat","showMonthYearPicker","filteredvalue","Item","inputValue","test","maxLength","onKeyPress","onKeyDown","keyCode","preventDefault","parseInt","filteredData","valid","GlobalValidation","setTimeout","AbortController","loaderTime","signal","res","tabData","clearTimeout","responseObject","reportRunId","res1","val","error","Loader","handleAbort","abort","fontWeight","desiredColumnOrder","cols","extractedValue","ExcelJS","worksheet","addWorksheet","addRow","getRow","bold","writeBuffer","MaterialReactCollapisbleTable","float","numberWithCommas","x","number","String","num","final","toLocaleString","minimumFractionDigits","maximumFractionDigits","replace","join","parseFloat","right","enableStickyHeader","paddingTop","paddingBottom"],"sourceRoot":""}