{"version":3,"file":"static/js/29.4032152f.chunk.js","mappings":"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","sources":["views/VendorComponent/VendorOpen.js","views/VendorComponent/VendorOpenAuto.js"],"sourcesContent":["import React, { useRef, useState, useEffect } from \"react\";\nimport { BiSearch } from \"react-icons/bi\";\nimport { IoWarningOutline } from \"react-icons/io5\";\nimport axios from \"axios\";\nimport { environment } from \"../../environments/environment\";\nimport { Link } from \"react-router-dom\";\nimport { GoGraph, GoThreeBars } from \"react-icons/go\";\nimport AutoComplete from \"./VendorOpenAuto\";\nimport Loader from \"../Loader/Loader\";\nimport \"./VendorOpen.scss\";\nimport GlobalHelp from \"../PrimeReactTableComponent/GlobalHelp\";\nimport ScreenBreadcrumbs from \"../Common/ScreenBreadcrumbs\";\nimport { FaSearch } from \"react-icons/fa\";\n\nfunction VendorOpen(props) {\n  const initialValues = {\n    vendor_name: \"\",\n    id: \"\",\n  };\n\n  const { buttonValue } = props;\n  console.log(buttonValue);\n  let container = document.createElement(\"div\");\n\n  // console.log(buttonValue)\n  const [access, setAccess] = useState([]);\n  const [data, setData] = useState([]);\n  const [projectTableData, setProjectTableData] = useState([]);\n  const baseUrl = environment.baseUrl;\n  const [vendorListData, setVendorListData] = useState([]);\n  const [projectData, setProjectData] = useState([]);\n  const loggedUserId = localStorage.getItem(\"resId\");\n  const [autoCompleteData, setAutoCompleteData] = useState([]);\n  const [customerData, setCustomerData] = useState([]);\n  const [customerTableData, setCustomerTableData] = useState([]);\n  const [engagementData, setEngagementData] = useState([]);\n  const [engagementTableData, setEngagementTableData] = useState([]);\n  const [expenseData, setExpenseData] = useState([]);\n  const [expenseTableData, setExpenseTableData] = useState([]);\n  const [accessLevel, setAccessLevel] = useState(false);\n  const [filteredData, setFilteredData] = useState([]);\n\n  const [state, setState] = useState({\n    userId: \"\",\n    ObjectTypeId: \"\",\n    ObjectId: \"\",\n    VisitedOn: \"\",\n  });\n  const [vendorId, setVendorId] = useState(-1);\n  const [projectId, setProjectId] = useState(-1);\n  const [engagementId, setEngagementId] = useState(-1);\n  const [customerId, setCustomerId] = useState(-1);\n  const [expenseId, setExpenseId] = useState(-1);\n  const [validationmessage, setValidationMessage] = useState(false);\n  const [latestData, setLatestData] = useState([]);\n  const [routes, setRoutes] = useState([]);\n  let textContent1 = \"Time & Expenses\";\n  let currentScreenName1 = [\"Expenses\", \"Expense Search History\"];\n  let textContent2 = \"Customers\";\n  let currentScreenName2 = [\"Customers\", \"Customer Search History\"];\n  let textContent3 = \"Delivery\";\n  let currentScreenName3 = [\"Projects\", \"Project Search History\"];\n  let textContent4 = \"Delivery\";\n  let currentScreenName4 = [\"Engagements\", \"Engagement Search History\"];\n  let textContent5 = \"Vendors\";\n  let currentScreenName5 = [\"Vendor Search History\"];\n  const lastDataId = latestData[latestData.length - 1]?.id;\n  console.log(lastDataId, \".........\");\n  const [accessLatest, setAccessLatest] = useState([]);\n  const [autoCompleteValidation, setAutoCompleteValidation] = useState(\"\");\n  const [searching, setsearching] = useState(false);\n  const abortController = useRef(null);\n\n  useEffect(() => {}, [\n    vendorListData,\n    projectData,\n    engagementData,\n    expenseData,\n  ]);\n  console.log(filteredData);\n  useEffect(() => {}, [autoCompleteData]);\n  useEffect(() => {}, [state]);\n  useEffect(() => {}, [\n    vendorId,\n    projectId,\n    engagementId,\n    customerId,\n    expenseId,\n    lastDataId,\n  ]);\n  console.log(validationmessage);\n  useEffect(() => {\n    // getLatestApis();\n    // getAccess();\n  }, []);\n  const fetchdata = () => {\n    axios({\n      method: \"get\",\n      url:\n        baseUrl +\n        `/VendorMS/vendor/getVendorList?userid=${loggedUserId}&objecttypeid=15`,\n    })\n      .then(function (response) {\n        var response = response.data;\n        setData(response);\n        setVendorDataList(response);\n      })\n      .catch(function (response) {});\n  };\n\n  const getdata = () => {\n    axios({\n      method: \"get\",\n      url: baseUrl + `/VendorMS/vendor/getVendorsNameandId`,\n    })\n      .then(function (response) {\n        var resp = response.data;\n        setVendorListData(resp);\n      })\n      .catch(function (response) {});\n  };\n\n  const handleSelect = (vendorId) => {\n    let data = document.getElementsByClassName(\"err\");\n    if (vendorId == null) {\n      if (autoCompleteData.id == null) {\n        setAutoCompleteValidation(\"1px solid rgb(183 1 1) !important\");\n        setValidationMessage(true);\n        return;\n      } else {\n        setValidationMessage(false);\n      }\n      {\n        <Link\n          title=\"Search\"\n          to={`/vendor/vendorDoc/:${autoCompleteData.id}`}\n          target=\"_blank\"\n        ></Link>;\n      }\n      console.log(autoCompleteData.id);\n      axios({\n        method: \"post\",\n        url: baseUrl + `/VendorMS/vendor/updateUserSearchHistory`,\n        data: {\n          userId: loggedUserId,\n          objectId: autoCompleteData.id,\n        },\n        headers: { \"Content-Type\": \"application/json\" },\n      }).then((success) => {\n        console.log(success);\n      });\n    } else {\n      console.log(vendorId);\n\n      axios({\n        method: \"post\",\n        url: baseUrl + `/VendorMS/vendor/updateUserSearchHistory`,\n        data: {\n          userId: loggedUserId,\n          objectId: vendorId,\n        },\n        // headers: { \"Content-Type\": \"application/json\" },\n      }).then((success) => {\n        console.log(success);\n      });\n    }\n  };\n\n  //----------------breadcrumbs--------------\n  console.log(autoCompleteData.id);\n\n  const getMenus = () => {\n    // setMenusData\n\n    axios({\n      method: \"GET\",\n      url: baseUrl + `/CommonMS/master/getMenus?loggedUserId=${loggedUserId}`,\n    }).then((resp) => {\n      let data = resp.data;\n\n      data.forEach((item) => {\n        if (item.display_name === textContent1 && buttonValue == \"Expense\") {\n          setRoutes([item]);\n        } else if (\n          item.display_name === textContent2 &&\n          buttonValue == \"Customer\"\n        ) {\n          setRoutes([item]);\n        } else if (\n          item.display_name === textContent3 &&\n          buttonValue == \"Project\"\n        ) {\n          setRoutes([item]);\n        } else if (\n          item.display_name === textContent4 &&\n          buttonValue == \"Engagement\"\n        ) {\n          setRoutes([item]);\n        } else if (\n          item.display_name === textContent5 &&\n          buttonValue == \"Vendor\"\n        ) {\n          setRoutes([item]);\n        }\n      });\n    });\n  };\n  useEffect(() => {\n    getMenus();\n  }, []);\n\n  /// Project open api calls\n  ////Project table data\n\n  useEffect(() => {\n    switch (buttonValue) {\n      case \"Project\":\n        getProjectTableData();\n        getProjectdata();\n        break;\n      case \"Engagement\":\n        getEngagementTableData();\n        getEngagementData();\n        break;\n      case \"Vendor\":\n        fetchdata();\n        getdata();\n        break;\n      case \"Customer\":\n        getCustomerTableData();\n        getCustomerdata();\n        break;\n      case \"Expense\":\n        getExpenseTableData();\n        getExpenseData();\n      default:\n        break;\n    }\n  }, [buttonValue]);\n\n  ///customer open api calls\n  const getCustomerTableData = () => {\n    axios({\n      method: \"get\",\n      url:\n        baseUrl +\n        `/customersms/Customers/getCustomerList?userid=${loggedUserId}&objecttypeid=2`,\n    })\n      .then((res) => {\n        setCustomerTableData(res.data);\n      })\n      .then((error) => {\n        console.log(\"success\", error);\n      });\n  };\n  // const getLatestApis = () => {\n  //   axios({\n  //     method: \"get\",\n  //     url:\n  //       baseUrl +\n  //       `/ProjectMS/project/getLatestProjects?loggedUserId=${loggedUserId}`,\n  //   })\n  //     .then((res) => {\n  //       setLatestData(res.data);\n  //     })\n  //     .then((error) => {\n  //       console.log(\"success\", error);\n  //     });\n  // };\n\n  const getAccess = (objId) => {\n    axios({\n      method: \"get\",\n      url:\n        baseUrl +\n        `/ProjectMS/project/getProjectAccess?objId=${objId}&loggedUserId=${loggedUserId}`,\n    })\n      .then((response) => {\n        const resp = response.data;\n        // resp.push({ id: \"-1\", name: \"<<ALL>>\" });\n        setAccessLatest(resp);\n      })\n      .catch((error) => {});\n  };\n\n  const getCustomerdata = () => {\n    axios({\n      method: \"get\",\n      url: baseUrl + `/customersms/Customers/getCustomers`,\n    }).then(function (response) {\n      var resp = response.data;\n      setCustomerData(resp);\n    });\n  };\n\n  const handleCustomerSelect = (vendorId) => {\n    console.log(\"customer select\");\n    if (vendorId == null) {\n      let data = document.getElementsByClassName(\"err\");\n      if (autoCompleteData.id == null) {\n        setAutoCompleteValidation(\"1px solid rgb(183 1 1) !important\");\n        setValidationMessage(true);\n        return;\n      } else {\n        setValidationMessage(false);\n      }\n      <Link\n        title=\"Search\"\n        to={`customer/dashboard/:${autoCompleteData.id}`}\n        target=\"_blank\"\n      ></Link>;\n      axios({\n        method: \"post\",\n        url: baseUrl + `/customersms/Customers/updateUserSearchHistory`,\n        data: {\n          userId: loggedUserId,\n          objectId: autoCompleteData.id,\n        },\n        headers: { \"Content-Type\": \"application/json\" },\n      }).then((success) => {});\n    } else {\n      axios({\n        method: \"post\",\n        url: baseUrl + `/customersms/Customers/updateUserSearchHistory`,\n        data: {\n          userId: loggedUserId,\n          objectId: vendorId,\n        },\n        headers: { \"Content-Type\": \"application/json\" },\n      }).then((success) => {});\n    }\n  };\n  //// customers - end\n\n  const getProjectTableData = () => {\n    axios({\n      method: \"get\",\n      url:\n        baseUrl +\n        // `/ProjectMS/Audit/getProjectList?userid=${loggedUserId}&objecttypeid=3`,\n        `/ProjectMS/Audit/getProjectList?userid=${loggedUserId}&objecttypeid=3`,\n    })\n      .then((res) => {\n        setProjectTableData(res.data);\n      })\n      .then((error) => {\n        console.log(\"success\", error);\n      });\n  };\n  ////\n\n  ////Project data\n  const getProjectdata = () => {\n    axios({\n      method: \"get\",\n      url: baseUrl + `/ProjectMS/Audit/getProjectNameandId`,\n    }).then(function (response) {\n      var resp = response.data;\n      setProjectData(resp);\n    });\n  };\n\n  ///project search history\n  const handleProjectSelect = (vendorId) => {\n    let data = document.getElementsByClassName(\"err\");\n    if (vendorId == null) {\n      if (autoCompleteData.id == null) {\n        setAutoCompleteValidation(\"1px solid rgb(183 1 1) !important\");\n        setValidationMessage(true);\n        return;\n      } else {\n        setValidationMessage(false);\n      }\n      <Link\n        title=\"Search\"\n        to={`/project/Overview/:${autoCompleteData.id}`}\n        target=\"_blank\"\n      ></Link>;\n      axios({\n        method: \"post\",\n        url: baseUrl + `/ProjectMS/Audit/updateUserSearchHistory`,\n        data: {\n          userId: loggedUserId,\n          objectId: autoCompleteData.id,\n        },\n        headers: { \"Content-Type\": \"application/json\" },\n      }).then((success) => {});\n    } else {\n      axios({\n        method: \"post\",\n        url: baseUrl + `/ProjectMS/Audit/updateUserSearchHistory`,\n        data: {\n          userId: loggedUserId,\n          objectId: vendorId,\n        },\n        // headers: { \"Content-Type\": \"application/json\" },\n      }).then((success) => {});\n    }\n  };\n\n  // ------EngagementOpen-------------------------------------\n  // const [data1, setData1] = useState([]);\n\n  const getEngagementTableData = () => {\n    axios({\n      method: \"get\",\n      url:\n        baseUrl +\n        `/ProjectMS/Engagement/getEngagementList?userid=${loggedUserId}&objecttypeid=14`,\n    })\n      .then(function (response) {\n        var response = response.data;\n        setEngagementTableData(response);\n      })\n      .catch(function (response) {});\n  };\n\n  const getEngagementData = () => {\n    axios({\n      method: \"get\",\n      url: baseUrl + `/ProjectMS/Engagement/getEngagementNameandId`,\n    })\n      .then(function (response) {\n        var resp = response.data;\n        setEngagementData(resp);\n        console.log(engagementData);\n      })\n      .catch(function (response) {});\n  };\n\n  const handleEngagementSelect = (vendorId) => {\n    let data = document.getElementsByClassName(\"err\");\n    if (vendorId == null) {\n      if (autoCompleteData.id == null) {\n        setAutoCompleteValidation(\"1px solid rgb(183 1 1) !important\");\n        setValidationMessage(true);\n        return;\n      } else {\n        setValidationMessage(false);\n      }\n      {\n        <Link\n          title=\"Search\"\n          to={`/engagement/Dashboard/:${autoCompleteData.id}`}\n          target=\"_blank\"\n        ></Link>;\n      }\n      console.log(autoCompleteData.id);\n      axios({\n        method: \"post\",\n        url: baseUrl + `/ProjectMS/Engagement/updateUserSearchHistory`,\n        data: {\n          userId: loggedUserId,\n          objectId: autoCompleteData.id,\n        },\n        headers: { \"Content-Type\": \"application/json\" },\n      }).then((success) => {\n        console.log(success);\n      });\n    } else {\n      axios({\n        method: \"post\",\n        url: baseUrl + `/ProjectMS/Engagement/updateUserSearchHistory`,\n        data: {\n          userId: loggedUserId,\n          objectId: vendorId,\n        },\n        // headers: { \"Content-Type\": \"application/json\" },\n      }).then((success) => {\n        console.log(success);\n      });\n    }\n  };\n  // ---------------Expense-------------------------------\n\n  const getExpenseTableData = () => {\n    setsearching(false);\n    abortController.current = new AbortController();\n\n    axios({\n      method: \"get\",\n      url:\n        baseUrl +\n        `/timeandexpensesms/ExpenseOpen/gettabledata?userid=${loggedUserId}`,\n      signal: abortController.current.signal,\n\n      // `http://localhost:8090/timeandexpensesms/ExpenseOpen/gettabledata?userid=${loggedUserId}`,\n    })\n      .then(function (response) {\n        var response = response.data;\n        setExpenseTableData(response);\n        setTimeout(() => {\n          setsearching(false);\n        }, 3000);\n      })\n      .catch(function (response) {});\n  };\n\n  const getExpenseData = () => {\n    axios({\n      method: \"get\",\n      url: baseUrl + `/timeandexpensesms/ExpenseOpen/getSearchdata`,\n      // `http://localhost:8090/timeandexpensesms/ExpenseOpen/getSearchdata`,\n    })\n      .then(function (response) {\n        var resp = response.data;\n        resp.push({ id: \"-1\", name: \"<<ALL>>\" });\n        setExpenseData(resp);\n      })\n      .catch(function (response) {});\n  };\n\n  const handleExpenseSelect = (vendorId) => {\n    let data = document.getElementsByClassName(\"err\");\n    if (vendorId == null) {\n      if (autoCompleteData.id == null) {\n        setAutoCompleteValidation(\"1px solid rgb(183 1 1) !important\");\n        setValidationMessage(true);\n        return;\n      } else {\n        setValidationMessage(false);\n      }\n      {\n        <Link\n          title=\"Search\"\n          to={`/engagement/Dashboard/:${autoCompleteData.id}`}\n          target=\"_blank\"\n        ></Link>;\n      }\n      console.log(autoCompleteData.id);\n      axios({\n        method: \"post\",\n        url: baseUrl + `/timeandexpensesms/ExpenseOpen/updateUserSearchHistory`,\n        // `http://localhost:8090/timeandexpensesms/ExpenseOpen/updateUserSearchHistory`,\n        data: {\n          userId: loggedUserId,\n          objectId: autoCompleteData.id,\n        },\n        headers: { \"Content-Type\": \"application/json\" },\n      }).then((success) => {\n        console.log(success);\n      });\n    } else {\n      axios({\n        method: \"post\",\n        url: baseUrl + `/timeandexpensesms/ExpenseOpen/updateUserSearchHistory`,\n        // `http://localhost:8090/timeandexpensesms/ExpenseOpen/updateUserSearchHistory`,\n        data: {\n          userId: loggedUserId,\n          objectId: vendorId,\n        },\n        // headers: { \"Content-Type\": \"application/json\" },\n      }).then((success) => {\n        console.log(success);\n      });\n    }\n  };\n  console.log(access.length);\n  const handleSearchButtonClick = () => {\n    // Set accessLevel to true immediately\n    setAccessLevel(true);\n\n    // Set accessLevel to false after 1000 milliseconds (1 second)\n    setTimeout(() => {\n      setAccessLevel(false);\n    }, 1000);\n  };\n  // -------------------------------------------\n  const handleAbort = () => {\n    abortController.current && abortController.current.abort();\n    setsearching(false);\n  };\n\n  let HelpPDFName;\n  let Headername;\n\n  if (buttonValue === \"Project\") {\n    HelpPDFName = \"OpenProject.pdf\";\n    Headername = \"Project Open Help\";\n  } else if (buttonValue === \"Engagement\") {\n    HelpPDFName = \"Eng.pdf\";\n    Headername = \"Engagement Open Help\";\n  } else if (buttonValue === \"Customer\") {\n    HelpPDFName = \"OpenCustomer.pdf\";\n    Headername = \"Customer Open Help\";\n  } else if (buttonValue === \"Expense\") {\n    HelpPDFName = \"expense.pdf\";\n    Headername = \"Expense Open Help\";\n  } else {\n    buttonValue == \"Vendor\";\n    HelpPDFName = \"OpenVMG.pdf\";\n    Headername = \"Vendor Open Help\";\n  }\n  console.log(validationmessage);\n  return (\n    <div>\n      <div className=\"col-md-12\">\n        <div className=\"pageTitle\">\n          <div className=\"childOne\"></div>\n          <div className=\"childTwo\">\n            <h2> {`${buttonValue} Search History`}</h2>\n          </div>\n          <div className=\"childThree\"></div>\n        </div>\n      </div>\n      {buttonValue == \"Expense\" ? (\n        <ScreenBreadcrumbs\n          routes={routes}\n          currentScreenName={currentScreenName1}\n        />\n      ) : buttonValue == \"Project\" ? (\n        <ScreenBreadcrumbs\n          routes={routes}\n          currentScreenName={currentScreenName3}\n        />\n      ) : buttonValue == \"Customer\" ? (\n        <ScreenBreadcrumbs\n          routes={routes}\n          currentScreenName={currentScreenName2}\n        />\n      ) : buttonValue == \"Vendor\" ? (\n        <ScreenBreadcrumbs\n          routes={routes}\n          currentScreenName={currentScreenName5}\n        />\n      ) : buttonValue == \"Engagement\" ? (\n        <ScreenBreadcrumbs\n          routes={routes}\n          currentScreenName={currentScreenName4}\n        />\n      ) : (\n        \"\"\n      )}\n      {/* {buttonValue == \"Project\" && ( */}\n      <div className=\"helpBtn\" style={{ float: \"right\", paddingTop: \"5px\" }}>\n        <GlobalHelp pdfname={HelpPDFName} name={Headername} />\n      </div>\n\n      <div className=\"body body-bg col-xs-12 col-sm-12 col-md-12 col-lg-12 customCard\">\n        <div className=\"form-group cvu darkHeader\">\n          <div className=\"col-6 my-2 no-padding\">\n            {/* {console.log(projectTableData)} */}\n            {projectTableData.length > 0 ||\n            customerTableData.length > 0 ||\n            engagementTableData.length > 0 ||\n            data.length > 0 ||\n            expenseTableData.length > 0 ? (\n              <table\n                id=\"details\"\n                className=\"col-12 table table-bordered  openTable \" /////customerEngament\n              >\n                <thead>\n                  <tr>\n                    {buttonValue == \"Expense\" ? (\n                      <th\n                        colSpan={4}\n                        className=\"tableheading\"\n                        style={{ backgroundColor: \"#eeeeee\" }}\n                      >\n                        <h6\n                          className=\"text-center m-0\"\n                          style={{ color: \"#187fde\", fontSize: \"15px\" }}\n                        >\n                          {`Recent ${buttonValue} Searches`}\n                        </h6>\n                      </th>\n                    ) : (\n                      <th\n                        colSpan={2}\n                        className=\"tableheading\"\n                        style={{ backgroundColor: \"#eeeeee\" }}\n                      >\n                        <h6\n                          className=\"text-center m-0\"\n                          style={{ color: \"#187fde\", fontSize: \"15px\" }}\n                        >\n                          {`Recent ${buttonValue} Searches`}\n                        </h6>\n                      </th>\n                    )}\n                  </tr>\n                  {buttonValue == \"Expense\" ? (\n                    <tr>\n                      <th>\n                        <h6\n                          className=\"text-center m-0\"\n                          style={{ fontSize: \"13px\" }}\n                        >\n                          <b>Expense</b>\n                        </h6>\n                      </th>\n                      <th>\n                        <h6\n                          className=\"text-center m-0\"\n                          style={{ fontSize: \"13px\" }}\n                        >\n                          <b>Created By</b>\n                        </h6>\n                      </th>\n                      <th>\n                        <h6\n                          className=\"text-center m-0\"\n                          style={{ fontSize: \"13px\" }}\n                        >\n                          <b>Net Amount</b>\n                        </h6>\n                      </th>\n                      <th>\n                        <h6\n                          className=\"text-center m-0\"\n                          style={{ fontSize: \"13px\" }}\n                        >\n                          <b>Status</b>\n                        </h6>\n                      </th>\n                    </tr>\n                  ) : (\n                    <tr>\n                      <th style={{ backgroundColor: \"#eeeeee\" }}>\n                        <h6\n                          className=\"text-center m-0\"\n                          style={{ fontSize: \"13px\" }}\n                        >\n                          {buttonValue}\n                        </h6>\n                      </th>\n                      <th style={{ backgroundColor: \"#eeeeee\" }}>\n                        <h6\n                          className=\"text-center m-0\"\n                          style={{ fontSize: \"13px\" }}\n                        >\n                          Actions\n                        </h6>\n                      </th>\n                    </tr>\n                  )}\n                </thead>\n                <tbody>\n                  {buttonValue == \"Project\" ? (\n                    <>\n                      {projectTableData.map((list) => (\n                        <tr>\n                          <td value={list.id}>\n                            <span\n                              onClick={() => {\n                                {\n                                  accessLatest.length > 0\n                                    ? handleProjectSelect(list.id)\n                                    : console.log(\"lisrr\");\n                                }\n                              }}\n                            >\n                              <Link\n                                data-toggle=\"tooltip\"\n                                title=\"Go To Project Overview\"\n                                to={`/project/Overview/:${list.id}`}\n                                target=\"_blank\"\n                              >\n                                {list.project_name}\n                              </Link>\n                            </span>\n                          </td>\n                          <td>\n                            <center>\n                              <span\n                                onClick={() => {\n                                  handleProjectSelect(list.id);\n                                  setValidationMessage(false);\n                                }}\n                              >\n                                <Link\n                                  data-toggle=\"tooltip\"\n                                  title=\"View Capacity Plan\"\n                                  to={`/project/capacityPlan/:${list.id}`}\n                                  target=\"_blank\"\n                                >\n                                  <GoGraph />\n                                </Link>\n                              </span>\n                              &nbsp;&nbsp;\n                              <span\n                                onClick={() => {\n                                  handleProjectSelect(list.id);\n                                  setValidationMessage(false);\n                                }}\n                              >\n                                <Link\n                                  data-toggle=\"tooltip\"\n                                  title=\"View Task Plan\"\n                                  to={`/project/taskPlan/:${list.id}`}\n                                  target=\"_blank\"\n                                >\n                                  <GoThreeBars />\n                                </Link>\n                              </span>\n                            </center>\n                          </td>\n                        </tr>\n                      ))}\n                    </>\n                  ) : (\n                    <>\n                      {data.map((data) => (\n                        <tr>\n                          <td value={data.id}>\n                            <span\n                              onClick={() => {\n                                handleSelect(data.id);\n                                setValidationMessage(false);\n                              }}\n                            >\n                              <Link\n                                data-toggle=\"tooltip\"\n                                title=\"Go to VMG Dashboard\"\n                                to={`/vendor/vendorDoc/:${data.id}`}\n                                target=\"_blank\"\n                              >\n                                {\" \"}\n                                {data.vendor_name}\n                              </Link>\n                            </span>\n                          </td>\n                          <td align=\"center\">\n                            <span\n                              onClick={() => {\n                                handleSelect(data.id);\n                                setValidationMessage(false);\n                              }}\n                            >\n                              <Link\n                                to={`/vendor/reviews/:${data.id}`}\n                                target=\"_blank\"\n                              >\n                                {\"View Reviews\"}\n                              </Link>\n                            </span>\n                          </td>\n                        </tr>\n                      ))}\n                    </>\n                  )}\n\n                  {/* -----------------------------------engagement open */}\n\n                  {buttonValue == \"Engagement\" ? (\n                    <>\n                      {engagementTableData.map((list) => (\n                        <tr>\n                          <td value={list.id}>\n                            <span\n                              onClick={() => {\n                                handleEngagementSelect(list.id);\n                                setValidationMessage(false);\n                              }}\n                            >\n                              <Link\n                                // className=\"hover-underline-animation\"\n                                data-toggle=\"tooltip\"\n                                title=\"Go To Engagement Overview\"\n                                to={`/engagement/Dashboard/:${list.id}`}\n                                target=\"_blank\"\n                              >\n                                {list.name}\n                              </Link>\n                            </span>\n                          </td>\n                          <td align=\"center\">\n                            <span\n                              onClick={() => {\n                                handleEngagementSelect(list.id);\n                                setValidationMessage(false);\n                              }}\n                            />\n                            <Link\n                              data-toggle=\"tooltip\"\n                              title=\"Go to Engagement Overview\"\n                              to={`/engagement/Dashboard/:${list.id}`}\n                              target=\"_blank\"\n                            >\n                              {\" \"}\n                              {data.name}\n                            </Link>\n                            <span\n                              onClick={() => {\n                                handleEngagementSelect(list.id);\n                                setValidationMessage(false);\n                              }}\n                            >\n                              <Link\n                                // className=\"hover-underline-animation\"\n                                to={`/engagement/projects/:${list.id}`}\n                                target=\"_blank\"\n                              >\n                                {\"View Projects\"}\n                              </Link>\n                            </span>\n                          </td>\n                        </tr>\n                      ))}\n                    </>\n                  ) : (\n                    <>\n                      {customerTableData.map((data) => (\n                        <tr>\n                          <td value={data.id}>\n                            <span\n                              onClick={() => {\n                                handleCustomerSelect(data.id);\n                                setValidationMessage(false);\n                                localStorage.setItem(\n                                  \"customerButtonState\",\n                                  \"Dashboard\"\n                                );\n                              }}\n                            >\n                              <Link\n                                data-toggle=\"tooltip\"\n                                title=\"Go to Customer Dashboard\"\n                                to={`customer/dashboard/:${data.id}`}\n                                target=\"_blank\"\n                              >\n                                {\" \"}\n                                {data.full_name}\n                              </Link>\n                            </span>\n                          </td>\n                          <td align=\"center\">\n                            <span\n                              onClick={() => {\n                                handleSelect(data.id);\n                                setValidationMessage(false);\n                              }}\n                            >\n                              <Link\n                                to={`/customer/engagement/:${data.id}`}\n                                target=\"_blank\"\n                              >\n                                {\"View Engagements\"}\n                              </Link>\n                            </span>\n                          </td>\n                        </tr>\n                      ))}\n                    </>\n                  )}\n                  {buttonValue == \"Expense\" ? (\n                    <>\n                      {console.log(expenseTableData)}\n                      {expenseTableData.map((list) => (\n                        <tr>\n                          <td value={list.id}>\n                            <span\n                              onClick={() => {\n                                handleExpenseSelect(list.id);\n                                setValidationMessage(false);\n                              }}\n                            >\n                              <Link\n                                data-toggle=\"tooltip\"\n                                title=\"Go To Expense Stack\"\n                                to={`/expense/Create/${list.id}`}\n                                target=\"_blank\"\n                              >\n                                {list.Expense}\n                              </Link>\n                            </span>\n                          </td>\n                          <td>\n                            <span>{list.createdBy}</span>\n                          </td>\n                          <td align=\"right\">\n                            <span>\n                              {list.Currency == \"&#8377\"\n                                ? \"₹ \"\n                                : list.Currency == \"&#36\"\n                                ? \"$ \"\n                                : list.Currency == \"&#163\"\n                                ? \"£ \"\n                                : list.Currency == \"&#128\"\n                                ? \"€ \"\n                                : list.Currency == \"C&#36\"\n                                ? \"C$ \"\n                                : list.Currency == \"&#107;&#110;\"\n                                ? \"kn \"\n                                : list.Currency == \"Bds&#36\"\n                                ? \"Bds$ \"\n                                : list.Currency == \"Jordan\"\n                                ? \"Jordan \"\n                                : list.Currency == \"ASUD\"\n                                ? \"ASUD \"\n                                : \"\"}\n                              {list.NetAmount == \"null\" ? (\n                                \" \"\n                              ) : list.Currency == \"&#1583;.&#1573;\" ? (\n                                <>\n                                  {parseFloat(list.NetAmount).toFixed(2)}\n                                  {\" د.إ \"}\n                                </>\n                              ) : (\n                                parseFloat(list.NetAmount).toFixed(2)\n                              )}\n                            </span>\n                          </td>\n                          <td>\n                            <span>{list.Status}</span>\n                          </td>\n                        </tr>\n                      ))}\n                    </>\n                  ) : (\n                    \"\"\n                  )}\n                  {/* ---------------------------------- */}\n                </tbody>\n              </table>\n            ) : (\n              \"\"\n            )}\n\n            <div className=\"body col-xs-12 col-sm-12 col-md-12 col-lg-12  mt-3  no-padding\">\n              {validationmessage ? (\n                <div className=\"statusMsg error col-12 mb-2\">\n                  <span>\n                    <IoWarningOutline />\n                    &nbsp;{`Please select any ${buttonValue}`}\n                  </span>\n                </div>\n              ) : (\n                \"\"\n              )}\n              {/* {accessLevel ? (\n                <div className=\"statusMsg error col-12 mb-2\">\n                  <span>\n                    <IoWarningOutline />\n                    &nbsp;{`Not authorized to any ${buttonValue}`}\n                  </span>\n                </div>\n              ) : (\n                \"\"\n              )} */}\n              {autoCompleteData.id == undefined && accessLevel == true ? (\n                <div className=\"statusMsg error col-12 mb-2\">\n                  <span>\n                    <IoWarningOutline />\n                    &nbsp;{`Please select any ${buttonValue} `}\n                  </span>\n                </div>\n              ) : (\n                \"\"\n              )}\n              <div className=\" group-content  err\">\n                {/* <div className=\"col-4 \"> */}\n                <div className=\"row \">\n                  {/* <div className=\"col-2 p-0\"></div> */}\n                  <div\n                    className={\n                      buttonValue == \"Expense\" ? \"col-3 h6\" : \"col-2 h6\"\n                    }\n                    style={{ fontSize: \"13px\" }}\n                  >\n                    {buttonValue == \"Expense\" ? \"Expense Stack\" : buttonValue}\n                    {buttonValue == \"Expense\" ? (\n                      <span className=\"required error-text ml-1\">* </span>\n                    ) : (\n                      \"\"\n                    )}\n                    :\n                  </div>\n                  <div\n                    className=\"col-6 autoComplete-container\"\n                    id=\"autoComplete\"\n                    style={{ fontSize: \"12px\" }}\n                  >\n                    <AutoComplete\n                      vendorListData={vendorListData}\n                      setAutoCompleteData={setAutoCompleteData}\n                      handleSelect={handleSelect}\n                      buttonValue={buttonValue}\n                      projectData={projectData}\n                      setAccess={setAccess}\n                      customerData={customerData}\n                      filteredData={filteredData}\n                      setFilteredData={setFilteredData}\n                      autoCompleteValidation={autoCompleteValidation}\n                      handleEngagementSelect={handleEngagementSelect}\n                      engagementData={engagementData}\n                      expenseData={expenseData}\n                      handleExpenseSelect={handleExpenseSelect}\n                    />\n                  </div>\n\n                  <div className=\"err col-2\">\n                    {access.length > 0 ? (\n                      <Link\n                        title=\"Search\"\n                        to={\n                          buttonValue == \"Project\"\n                            ? `/project/Overview/:${autoCompleteData.id}`\n                            : buttonValue == \"Engagement\"\n                            ? `/engagement/Dashboard/:${autoCompleteData.id}`\n                            : buttonValue == \"Customer\"\n                            ? `customer/dashboard/:${autoCompleteData.id}`\n                            : buttonValue == \"Expense\"\n                            ? `/expense/Create/${autoCompleteData.id}`\n                            : `/vendor/vendorDoc/:${autoCompleteData.id}`\n                        }\n                        target=\"_blank\"\n                      >\n                        <button\n                          className=\"btn btn-primary \"\n                          onClick={() => {\n                            buttonValue == \"Project\"\n                              ? handleProjectSelect()\n                              : buttonValue == \"Engagement\"\n                              ? handleEngagementSelect()\n                              : buttonValue == \"Vendor\"\n                              ? handleSelect()\n                              : buttonValue == \"Expense\"\n                              ? handleExpenseSelect()\n                              : handleCustomerSelect();\n                          }}\n                        >\n                          <BiSearch /> Search\n                        </button>\n                      </Link>\n                    ) : (\n                      <button\n                        className=\"btn btn-primary \"\n                        onClick={() => {\n                          handleSearchButtonClick();\n                        }}\n                      >\n                        <BiSearch /> Search\n                      </button>\n                    )}\n                    {/* {autoCompleteData.id == undefined ? (\n                      <button\n                        title=\"Search\"\n                        className=\"btn btn-primary\"\n                        style={{ fontSize: \"12px\" }}\n                        onClick={() => {\n                          buttonValue == \"Project\"\n                            ? handleProjectSelect()\n                            : buttonValue == \"Engagement\"\n                            ? handleEngagementSelect()\n                            : buttonValue == \"Vendor\"\n                            ? handleSelect()\n                            : buttonValue == \"Expense\"\n                            ? handleExpenseSelect()\n                            : handleCustomerSelect();\n                        }}\n                      >\n                        <FaSearch /> Search\n                      </button>\n                    ) : (\n                      <Link\n                        title=\"Search\"\n                        to={\n                          buttonValue == \"Project\"\n                            ? `/project/Overview/:${autoCompleteData.id}`\n                            : buttonValue == \"Engagement\"\n                            ? `/engagement/Dashboard/:${autoCompleteData.id}`\n                            : buttonValue == \"Customer\"\n                            ? `customer/dashboard/:${autoCompleteData.id}`\n                            : buttonValue == \"Expense\"\n                            ? `/expense/Create/:${autoCompleteData.id}`\n                            : `/vendor/vendorDoc/:${autoCompleteData.id}`\n                        }\n                        target=\"_blank\"\n                      >\n                        <button\n                          className=\"btn btn-primary \"\n                          onClick={() => {\n                            buttonValue == \"Project\"\n                              ? handleProjectSelect()\n                              : buttonValue == \"Engagement\"\n                              ? handleEngagementSelect()\n                              : buttonValue == \"Vendor\"\n                              ? handleSelect()\n                              : buttonValue == \"Expense\"\n                              ? handleExpenseSelect()\n                              : handleCustomerSelect();\n                          }}\n                        >\n                          <BiSearch /> Search\n                        </button>\n                      </Link>\n                    )} */}\n                  </div>\n                </div>\n                {/* <div className=\"col-1\"></div> */}\n\n                {/* </div> */}\n              </div>\n            </div>\n          </div>\n          {searching ? <Loader handleAbort={handleAbort} /> : \"\"}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default VendorOpen;\n","import React from \"react\";\nimport { ReactSearchAutocomplete } from \"react-search-autocomplete\";\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { environment } from \"../../environments/environment\";\n\nfunction AutoComplete(props) {\n  const {\n    vendorListData,\n    setExpensesLength,\n    setVendorListData,\n    setAutoCompleteData,\n    projectData,\n    customerData,\n    setAccess,\n    buttonValue,\n    setFilteredData,\n    access,\n    filteredData,\n    setAutoId,\n    setAid,\n    aid,\n    setMainAccessData,\n    engagementData,\n    expenseData,\n  } = props;\n  const [item, setItem] = useState([]);\n  const baseUrl = environment.baseUrl;\n  const loggedUserId = localStorage.getItem(\"resId\");\n\n  console.log(buttonValue);\n\n  const handleClear = () => {\n    setAutoCompleteData((prevProps) => ({ ...prevProps, id: null }));\n  };\n\n  console.log(aid, \"auto id's-------\");\n  const getAccess = (a) => {\n    axios({\n      method: \"get\",\n      url:\n        baseUrl +\n        `/CommonMS/master/getTabMenus?ProjectId=${a}&loggedUserId=${loggedUserId}&type=Project&subType=project`,\n    })\n      .then(function (response) {\n        var resp = response.data;\n        // resp.push({ id: \"-1\", name: \"<<ALL>>\" });\n        setAccess(resp);\n      })\n      .catch(function (response) {});\n  };\n  // const [filteredData, setFilteredData] = useState([]);\n  const getMenus = () => {\n    // setMenusData\n\n    axios({\n      method: \"GET\",\n      url: baseUrl + `/CommonMS/master/getMenus?loggedUserId=${loggedUserId}`,\n    }).then((resp) => {\n      let data = resp.data;\n      console.log(data);\n      const projectStatusReportSubMenu = data\n        .find((item) => item.display_name === \"Time & Expenses\")\n        .subMenus.find((subMenu) => subMenu.display_name === \"Expenses\");\n      console.log(projectStatusReportSubMenu);\n      setFilteredData(projectStatusReportSubMenu.userRoles);\n      // Store the filtered objects in the state\n      // if (filteredObjects.length > 0) {\n      //   filteredData(filteredObjects);\n      // }\n    });\n  };\n  // useEffect(() => {\n  //   getMenus();\n  // }, []);\n  console.log(filteredData);\n  const getCustomerAccess = (b) => {\n    axios({\n      method: \"get\",\n      url:\n        baseUrl +\n        `/CommonMS/master/getTabMenus?ProjectId=${b}&loggedUserId=${loggedUserId}&type=Customer&subType=customer`,\n    })\n      .then(function (response) {\n        var resp = response.data;\n        // resp.push({ id: \"-1\", name: \"<<ALL>>\" });\n        setAccess(resp);\n      })\n      .catch(function (response) {});\n  };\n  const getVendorAccess = (v) => {\n    axios({\n      method: \"get\",\n      url:\n        baseUrl +\n        `/CommonMS/master/getTabMenus?ProjectId=${v}&loggedUserId=${loggedUserId}&type=vendor&subType=vmg`,\n    })\n      .then(function (response) {\n        var resp = response.data;\n        // resp.push({ id: \"-1\", name: \"<<ALL>>\" });\n        setAccess(resp);\n      })\n      .catch(function (response) {});\n  };\n  const getEngagementAccess = (c) => {\n    axios({\n      method: \"get\",\n      url:\n        baseUrl +\n        `/CommonMS/master/getTabMenus?ProjectId=${c}&loggedUserId=${loggedUserId}&type=Customer&subType=engagement`,\n    })\n      .then(function (response) {\n        var resp = response.data;\n        // resp.push({ id: \"-1\", name: \"<<ALL>>\" });\n        setAccess(resp);\n      })\n      .catch(function (response) {});\n  };\n  const getExpenseAccess = (c) => {\n    axios({\n      method: \"get\",\n      url:\n        baseUrl +\n        `/timeandexpensesms/ExpenseOpen/getExpenseAuthorized?userid=${\n          Number(loggedUserId) + 1\n        }&expenseId=${c}`,\n      // `/CommonMS/master/getTabMenus?ProjectId=${c}&loggedUserId=${loggedUserId}&type=Expense&subType=Expense`,\n    })\n      .then(function (response) {\n        var resp = response.data;\n        // resp.push({ id: \"-1\", name: \"<<ALL>>\" });\n        setAccess(resp);\n        console.log(resp.length);\n        setExpensesLength(resp.length);\n      })\n      .catch(function (response) {});\n  };\n  useEffect(() => {}, [item]);\n  useEffect(() => {}, [vendorListData]);\n  useEffect(() => {}, [aid]);\n\n  // console.log(aid, \"-------id----------\");\n\n  {\n    return (\n      <>\n        <div className=\"autoComplete-container\">\n          {buttonValue == \"Project\" ? (\n            <>\n              <ReactSearchAutocomplete\n                items={projectData}\n                type=\"Text\"\n                name=\"reviewedBy\"\n                id=\"reviewedBy\"\n                className=\"error AutoComplete\"\n                onSelect={(e) => {\n                  setAutoCompleteData(e);\n                  // setAid(e.id);\n                  getAccess(e.id);\n                }}\n                showIcon={false}\n                onClear={handleClear}\n                placeholder=\"Type minimum 4 characters\"\n              />{\" \"}\n            </>\n          ) : buttonValue == \"Engagement\" ? (\n            <>\n              <ReactSearchAutocomplete\n                items={engagementData}\n                type=\"Text\"\n                name=\"reviewedBy\"\n                id=\"reviewedBy\"\n                className=\"error AutoComplete\"\n                onSelect={(e) => {\n                  setAutoCompleteData(e);\n                  getEngagementAccess(e.id);\n                }}\n                showIcon={false}\n                onClear={handleClear}\n                placeholder=\"Type minimum 4 characters\"\n              />\n            </>\n          ) : buttonValue == \"Customer\" ? (\n            <>\n              <ReactSearchAutocomplete\n                items={customerData}\n                type=\"Text\"\n                name=\"reviewedBy\"\n                id=\"reviewedBy\"\n                className=\"error AutoComplete\"\n                onSelect={(e) => {\n                  setAutoCompleteData(e);\n                  getCustomerAccess(e.id);\n                }}\n                showIcon={false}\n                onClear={handleClear}\n                placeholder=\"Type minimum 4 characters\"\n              />\n            </>\n          ) : buttonValue == \"Expense\" ? (\n            <>\n              <ReactSearchAutocomplete\n                items={expenseData}\n                type=\"Text\"\n                name=\"reviewedBy\"\n                id=\"reviewedBy\"\n                className=\"error AutoComplete\"\n                onSelect={(e) => {\n                  setAutoCompleteData(e);\n                  getExpenseAccess(e.id);\n                  getMenus();\n                }}\n                showIcon={false}\n                onClear={handleClear}\n                placeholder=\"Type minimum 4 characters\"\n              />\n            </>\n          ) : (\n            <ReactSearchAutocomplete\n              items={vendorListData}\n              type=\"Text\"\n              name=\"reviewedBy\"\n              id=\"reviewedBy\"\n              className=\"error AutoComplete\"\n              setVendorListData={setVendorListData}\n              onSelect={(e) => {\n                setAutoCompleteData(e);\n                getVendorAccess(e.id);\n                console.log(e);\n              }}\n              showIcon={false}\n              onClear={handleClear}\n              placeholder=\"Type minimum 4 characters\"\n            />\n          )}\n        </div>\n\n        <span> {item.name}</span>\n      </>\n    );\n  }\n}\n\nexport default AutoComplete;\n"],"names":["props","buttonValue","console","log","document","createElement","useState","access","setAccess","data","setData","projectTableData","setProjectTableData","baseUrl","environment","vendorListData","setVendorListData","projectData","setProjectData","loggedUserId","localStorage","getItem","autoCompleteData","setAutoCompleteData","customerData","setCustomerData","customerTableData","setCustomerTableData","engagementData","setEngagementData","engagementTableData","setEngagementTableData","expenseData","setExpenseData","expenseTableData","setExpenseTableData","accessLevel","setAccessLevel","filteredData","setFilteredData","userId","ObjectTypeId","ObjectId","VisitedOn","state","vendorId","projectId","engagementId","customerId","expenseId","validationmessage","setValidationMessage","latestData","routes","setRoutes","lastDataId","length","id","accessLatest","autoCompleteValidation","setAutoCompleteValidation","searching","setsearching","abortController","useRef","useEffect","handleSelect","getElementsByClassName","axios","method","url","objectId","headers","then","success","resp","forEach","item","display_name","getProjectTableData","getProjectdata","getEngagementTableData","getEngagementData","response","setVendorDataList","catch","getCustomerTableData","getCustomerdata","getExpenseTableData","getExpenseData","HelpPDFName","Headername","res","error","handleCustomerSelect","handleProjectSelect","handleEngagementSelect","current","AbortController","signal","setTimeout","push","name","handleExpenseSelect","className","ScreenBreadcrumbs","currentScreenName","style","float","paddingTop","GlobalHelp","pdfname","colSpan","backgroundColor","color","fontSize","map","list","value","onClick","title","to","target","project_name","vendor_name","align","setItem","full_name","Expense","createdBy","Currency","NetAmount","parseFloat","toFixed","Status","undefined","Loader","handleAbort","abort","setExpensesLength","aid","setAutoId","setAid","setMainAccessData","handleClear","prevProps","ReactSearchAutocomplete","items","type","onSelect","e","a","showIcon","onClear","placeholder","c","b","Number","projectStatusReportSubMenu","find","subMenus","subMenu","userRoles","v"],"sourceRoot":""}