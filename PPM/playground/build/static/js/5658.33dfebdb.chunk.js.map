{"version":3,"file":"static/js/5658.33dfebdb.chunk.js","mappings":"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","sources":["views/Administration/ErrorLogs.js"],"sourcesContent":["import moment from \"moment\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport axios from \"axios\";\nimport { Column } from \"ag-grid-community\";\nimport CellRendererPrimeReactDataTable from \"../PrimeReactTableComponent/CellRendererPrimeReactDataTable\";\nimport { AiFillEdit, AiFillWarning } from \"react-icons/ai\";\nimport Loader from \"../Loader/Loader\";\nimport FlatPrimeReactTable from \"../PrimeReactTableComponent/FlatPrimeReactTable\";\nimport { MdOutlinePlaylistAdd } from \"react-icons/md\";\nimport GlobalCancel from \"../ValidationComponent/GlobalCancel\";\nimport { VscSave } from \"react-icons/vsc\";\nimport { ImCross } from \"react-icons/im\";\nimport GlobalValidation from \"../ValidationComponent/GlobalValidation\";\nimport { BiCheck } from \"react-icons/bi\";\nimport { environment } from \"../../environments/environment\";\nimport ErrorLogGlobalValidation from \"./Errorlogvalidation\";\nimport ErrorLogTable from \"./ErrorLogsTable\";\n\nfunction ErrorLogs() {\n  const ref = useRef([]);\n  const baseUrl = environment.baseUrl;\n  const [unreaddata, setUnreadData] = useState([{}]);\n  const [readdata, setReadData] = useState([{}]);\n  const [headerData, setHeaderData] = useState([]);\n  const [headerData1, setHeaderData1] = useState([]);\n  const [linkColumns, setLinkColumns] = useState([]);\n  const [linkColumnsRoutes, setLinkColumnsRoutes] = useState([]);\n  const [linkColumns1, setLinkColumns1] = useState([]);\n  const [linkColumnsRoutes1, setLinkColumnsRoutes1] = useState([]);\n  const [loader, setLoader] = useState(false);\n  const [searching, setsearching] = useState(false);\n  const [read, setRead] = useState(\"0\");\n  const [id, setId] = useState([]);\n  const [validationMessage, setValidationMessage] = useState(false);\n  const [addmsg, setAddmsg] = useState(false);\n  console.log(id);\n  let rows = 10;\n  // console.log(unreaddata)\n  const loggedUserId = localStorage.getItem(\"resId\");\n  const [date, setDate] = useState(new Date());\n  console.log(date);\n  let date1 = moment(date).format(\"yyyy-MM-DD\");\n  const data = {\n    comments: \"\",\n    reviewed_by: loggedUserId,\n    reviewed_date: date1,\n  };\n  console.log(data);\n  const [message, setMessage] = useState(\"\");\n\n  const [formData, setFormData] = useState(data);\n\n  console.log(formData);\n  const initialValue1 = {};\n  const [tabledata, settabledata] = useState(initialValue1);\n\n  const handleChange = (e) => {\n    const { id, value } = e.target;\n    setFormData((prev) => ({ ...prev, [id]: value }));\n  };\n  const abortController = useRef(null);\n\n  const getData = () => {\n    setLoader(true);\n    abortController.current = new AbortController();\n    axios\n      .get(baseUrl + `/accountingms/ErrorLogs/getErrorLogsUnread`)\n      .then((res) => {\n        const GetData = res.data;\n        for (let i = 0; i < GetData.length; i++) {\n          GetData[i][\"SNo\"] = i + 1;\n          GetData[i][\"createdAt\"] =\n            GetData[i][\"createdAt\"] == null\n              ? \"\"\n              : moment(GetData[i][\"createdAt\"]).format(\"YYYY-MM-DD HH:mm:ss\");\n        }\n        let dataHeaders = [\n          {\n            // SNo: \"S.No\",\n            procName: \"Procedure\",\n            errorDesc: \"Error Description\",\n            createdAt: \"Created Date\",\n            reviewed_by: \"Reviewed By\",\n            reviewed_date: \"Reviewed Date\",\n            comments: \"Comments\",\n          },\n        ];\n        let data = [\"Action\"];\n        setUnreadData(dataHeaders.concat(GetData));\n        setHeaderData(GetData);\n        setTimeout(() => {\n          setLoader(false);\n        }, 3000);\n\n        setsearching(true);\n        setTimeout(() => {\n          setsearching(false);\n        }, 2000);\n        settabledata();\n      })\n      .catch((error) => {});\n  };\n  useEffect(() => {\n    getData();\n  }, []);\n\n  const error = (unreaddata) => {\n    return (\n      <div\n        className=\"ellipsis\"\n        data-toggle=\"tooltip\"\n        title={unreaddata.errorDesc}\n      >\n        {unreaddata.errorDesc}\n      </div>\n    );\n  };\n  const procname = (unreaddata) => {\n    return (\n      <div\n        className=\"ellipsis\"\n        data-toggle=\"tooltip\"\n        title={unreaddata.procName}\n      >\n        {unreaddata.procName}\n      </div>\n    );\n  };\n  const createdAt = (unreaddata) => {\n    return (\n      <div\n        className=\"ellipsis\"\n        data-toggle=\"tooltip\"\n        title={unreaddata.createdAt}\n      >\n        {unreaddata.createdAt}\n      </div>\n    );\n  };\n\n  console.log(unreaddata);\n  const LinkTemplate = (unreaddata) => {\n    let rou = linkColumns[0];\n\n    const onChangeSetDate = (comment, id) => {\n      console.log(comment);\n      settabledata((prev) => ({\n        ...prev,\n        [id]: comment,\n      }));\n    };\n    console.log(tabledata);\n    return (\n      <div\n        className=\"ptTextarea-container\"\n        ref={(ele) => {\n          ref.current[0] = ele;\n        }}\n      >\n        <textarea\n          rows={3}\n          className=\"cancel valid\"\n          id=\"comments\"\n          name=\"comments\"\n          onChange={(e) => {\n            onChangeSetDate(e.target.value, unreaddata.id);\n          }}\n        ></textarea>\n      </div>\n    );\n  };\n  const dynamicColumns = Object.keys(headerData)?.map((col, i) => {\n    return (\n      <Column\n        sortable\n        key={col}\n        body={\n          // col == \"SNo\" ? SnoAlign :\n          (col == \"comments\" && LinkTemplate) ||\n          (col == \"errorDesc\" && error) ||\n          (col == \"procName\" && procname) ||\n          (col == \"createdAt\" && createdAt)\n        }\n        field={col}\n        header={headerData[col]}\n      />\n    );\n  });\n  useEffect(() => {\n    unreaddata[0] && setHeaderData(JSON.parse(JSON.stringify(unreaddata[0])));\n  }, [unreaddata]);\n  //=====================\n  const getData1 = () => {\n    axios\n      .get(baseUrl + `/accountingms/ErrorLogs/getErrorLogsRead`)\n      .then((res) => {\n        const GetData = res.data;\n        console.log(GetData);\n        for (let i = 0; i < GetData.length; i++) {\n          GetData[i][\"SNo\"] = i + 1;\n          GetData[i][\"createdAt\"] =\n            GetData[i][\"createdAt\"] == null\n              ? \"\"\n              : moment(GetData[i][\"createdAt\"]).format(\"DD-MM-YYYY HH:mm:ss\");\n          GetData[i][\"reviewed_date\"] =\n            GetData[i][\"reviewed_date\"] == null\n              ? \"\"\n              : moment(GetData[i][\"reviewed_date\"]).format(\"DD-MM-YYYY\");\n        }\n        let dataHeaders = [\n          {\n            procName: \"Procedure\",\n            errorDesc: \"Error Description\",\n            createdAt: \"Created Date\",\n            reviewedby: \"Reviewed By\",\n            reviewed_date: \"Reviewed Date\",\n            comments: \"Comments\",\n          },\n        ];\n        let data = [\"Action\"];\n        setReadData(dataHeaders.concat(GetData));\n        setHeaderData1(GetData);\n        setsearching(true);\n        setTimeout(() => {\n          setsearching(false);\n        }, 100);\n      })\n      .catch((error) => {});\n  };\n  useEffect(() => {\n    getData1();\n  }, []);\n  const error1 = (readdata) => {\n    return (\n      <div\n        className=\"ellipsis\"\n        data-toggle=\"tooltip\"\n        title={readdata.errorDesc}\n      >\n        {readdata.errorDesc}\n      </div>\n    );\n  };\n  const comments = (readdata) => {\n    return (\n      <div className=\"ellipsis\" data-toggle=\"tooltip\" title={readdata.comments}>\n        {readdata.comments}\n      </div>\n    );\n  };\n  const reviewed_by = (readdata) => {\n    return (\n      <div\n        className=\"ellipsis\"\n        data-toggle=\"tooltip\"\n        title={readdata.reviewedby}\n      >\n        {readdata.reviewedby}\n      </div>\n    );\n  };\n  const reviewed_date = (readdata) => {\n    return (\n      <div\n        className=\"ellipsis\"\n        data-toggle=\"tooltip\"\n        title={readdata.reviewed_date}\n      >\n        {readdata.reviewed_date}\n      </div>\n    );\n  };\n  const procName = (readdata) => {\n    return (\n      <div className=\"ellipsis\" data-toggle=\"tooltip\" title={readdata.procName}>\n        {readdata.procName}\n      </div>\n    );\n  };\n  const createdAt1 = (readdata) => {\n    return (\n      <div\n        className=\"ellipsis\"\n        data-toggle=\"tooltip\"\n        title={readdata.createdAt}\n      >\n        {readdata.createdAt}\n      </div>\n    );\n  };\n\n  // console.log(unreaddata)\n\n  const dynamicColumns1 = Object.keys(headerData1)?.map((col, i) => {\n    return (\n      <Column\n        sortable\n        key={col}\n        body={\n          // col == \"SNo\" ? SnoAlign :\n\n          (col == \"errorDesc\" && error1) ||\n          (col == \"comments\" && comments) ||\n          (col == \"reviewedby\" && reviewed_by) ||\n          (col == \"reviewed_date\" && reviewed_date) ||\n          (col == \"procName\" && procName) ||\n          (col == \"createdAt\" && createdAt1)\n        }\n        field={col}\n        header={headerData1[col]}\n      />\n    );\n  });\n  useEffect(() => {\n    readdata[0] && setHeaderData1(JSON.parse(JSON.stringify(readdata[0])));\n  }, [readdata]);\n  const [inputValue, setInputValue] = useState(\"\");\n  //[==========================Post Comments===================]\n  console.log(id);\n\n  const handleSaveClick = () => {\n    // let valid = ErrorLogGlobalValidation(ref);\n    // console.log(valid);\n\n    // if (valid) {\n    //     setValidationMessage(true);\n    //     return;\n    // }\n    if (\n      tabledata == undefined ||\n      tabledata == null ||\n      tabledata == {} ||\n      tabledata == \"\"\n      // tabledata == \"\"\n    ) {\n      setValidationMessage(true);\n      // return;\n    } else {\n      console.log(\"231.................................\");\n      setValidationMessage(false);\n\n      let data = [];\n      Object.keys(tabledata).forEach((ele) => {\n        const obj = {};\n        (obj[\"id\"] = +ele),\n          (obj[\"reviewed_date\"] = formData.reviewed_date),\n          (obj[\"reviewed_by\"] = +formData.reviewed_by),\n          (obj[\"comments\"] = tabledata[ele]),\n          data.push(obj);\n      });\n\n      axios({\n        method: \"post\",\n        url: baseUrl + `/accountingms/ErrorLogs/updatecomments`,\n        data: data,\n      }).then((error) => {\n        setValidationMessage(false);\n        setAddmsg(true);\n        setTimeout(() => {\n          setAddmsg(false);\n        }, 3000);\n        getData();\n        settabledata();\n        // location.reload();\n        console.log(\"success\", error);\n        window.location.reload();\n      });\n    }\n  };\n  const handleReset = () => {\n    let ele = document.getElementsByClassName(\"cancel\");\n    for (let index = 0; index < ele.length; index++) {\n      console.log(ele[index]);\n      console.log(ele[index].id);\n      console.log(ele[index].value);\n      ele[index].value = null;\n      setValidationMessage(false);\n      setAddmsg(false);\n      settabledata();\n    }\n  };\n  const handleAbort = () => {\n    abortController.current && abortController.current.abort();\n    setLoader(false);\n  };\n  return (\n    <div className=\"col-md-12\">\n      {addmsg ? (\n        <div className=\"statusMsg success\">\n          {\" \"}\n          <span className=\"errMsg\">\n            <BiCheck size=\"1.4em\" /> &nbsp; Comments Saved Successfully\n          </span>\n        </div>\n      ) : (\n        \"\"\n      )}\n      {validationMessage ? (\n        <div className=\"statusMsg error\">\n          <span className=\"error-block\">\n            <AiFillWarning /> &nbsp; No modifications to save\n          </span>\n        </div>\n      ) : (\n        \"\"\n      )}\n      <div className=\"pageTitle\">\n        <div className=\"childOne\"></div>\n        <div className=\"childTwo\">\n          <h2>Error Logs</h2>\n        </div>\n        <div className=\"childThree\"></div>\n      </div>\n      {/* {searching ? <Loader setsearching={setsearching} /> : \"\"} */}\n      <br />\n      <div className=\"col-md-12\">\n        <div className=\"form-check form-check-inline\">\n          <input\n            className=\"form-check-input\"\n            type=\"radio\"\n            id=\"read\"\n            checked={read == 1 ? true : false}\n            // value={1}\n            onChange={(e) => {\n              setRead(\"1\");\n            }}\n          />\n          <label htmlFor=\"yes\">Read</label>\n        </div>\n        <div className=\"form-check form-check-inline\">\n          <input\n            type=\"radio\"\n            className=\"form-check-input\"\n            id=\"unread\"\n            checked={read == 0 ? true : false}\n            value={read}\n            onChange={(e) => {\n              setRead(\"0\");\n            }}\n          />\n          <label htmlFor=\"no\">Unread</label>\n        </div>\n      </div>\n      <br />\n      {/* {searching ? <Loader setsearching={setsearching} /> : \"\"} */}\n      {loader ? (\n        <div className=\"loaderBlock\">\n          <Loader handleAbort={handleAbort} />\n        </div>\n      ) : (\n        \"\"\n      )}\n      {read == 0 ? (\n        <ErrorLogTable\n          data={unreaddata}\n          linkColumns={linkColumns}\n          linkColumnsRoutes={linkColumnsRoutes}\n          dynamicColumns={dynamicColumns}\n          headerData={headerData}\n          setHeaderData={setHeaderData}\n          rows={rows}\n        />\n      ) : searching ? (\n        <Loader setsearching={setsearching} />\n      ) : (\n        <ErrorLogTable\n          data={readdata}\n          linkColumns={linkColumns1}\n          linkColumnsRoutes={linkColumnsRoutes1}\n          dynamicColumns={dynamicColumns1}\n          headerData={headerData1}\n          setHeaderData={setHeaderData1}\n          rows={rows}\n        />\n      )}\n      {read == 0 ? (\n        <div className=\"row\">\n          <div className=\"col-md-12 btn-container center \">\n            <button\n              className=\"btn btn-primary mt-2 mb-2\"\n              onClick={handleSaveClick}\n            >\n              <VscSave />\n              Save\n            </button>\n            <button\n              className=\"btn btn-primary mt-2 mb-2\"\n              onClick={() => handleReset()}\n            >\n              <ImCross />\n              Reset\n            </button>\n          </div>\n        </div>\n      ) : (\n        \"\"\n      )}\n    </div>\n  );\n}\nexport default ErrorLogs;\n"],"names":["ref","useRef","baseUrl","environment","useState","unreaddata","setUnreadData","readdata","setReadData","headerData","setHeaderData","headerData1","setHeaderData1","linkColumns","linkColumnsRoutes","linkColumns1","linkColumnsRoutes1","loader","setLoader","searching","setsearching","read","setRead","id","validationMessage","setValidationMessage","addmsg","setAddmsg","console","log","loggedUserId","localStorage","getItem","Date","date","data","comments","reviewed_by","reviewed_date","moment","format","formData","tabledata","settabledata","abortController","getData","current","AbortController","axios","then","res","GetData","i","length","procName","errorDesc","createdAt","concat","setTimeout","catch","error","useEffect","className","title","procname","LinkTemplate","ele","rows","name","onChange","e","comment","prev","onChangeSetDate","target","value","dynamicColumns","Object","keys","map","col","sortable","body","field","header","JSON","parse","stringify","reviewedby","error1","createdAt1","dynamicColumns1","size","type","checked","htmlFor","handleAbort","abort","onClick","undefined","forEach","obj","push","method","url","window","location","reload","document","getElementsByClassName","index","handleReset"],"sourceRoot":""}