{"version":3,"file":"static/js/7818.7f23de21.chunk.js","mappings":"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","sources":["views/SelectSE/EmployeeElement.js","views/SelectSE/InDirectSE.js","views/SelectSE/SelectedItems.js","views/SelectSE/VirtualTeamRenderer.js","views/SelectSE/VirtualTeams.js","views/SelectSE/DirectSE.js","views/SelectSE/SelectSE.js","views/SelectSE/SelectSEDialogBox.js"],"sourcesContent":["import React, { useRef } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { updateSelectedSEProp } from \"../../reducers/SelectedSEReducer\";\nimport fte_active from \"../../assets/images/empstatusIcon/fte_active.png\";\nimport fte_inactive from \"../../assets/images/empstatusIcon/fte_inactive.png\";\nimport fte_notice from \"../../assets/images/empstatusIcon/fte_notice.png\";\nimport subk_active from \"../../assets/images/empstatusIcon/subk_active.png\";\nimport subk_inactive from \"../../assets/images/empstatusIcon/subk_inactive.png\";\nimport subk_notice from \"../../assets/images/empstatusIcon/subk_notice.png\";\nimport \"./EmployeeElement.scss\";\n\nconst EmployeeElement = (props) => {\n  const { item, propsValue, isInSelected } = props;\n  const icons = {\n    fte0: (\n      <img\n        src={fte_inactive}\n        alt=\"(fte_inactive_icon)\"\n        style={{ height: \"12px\", marginTop: \"-5px\" }}\n        title=\"Ex-Employee\"\n      />\n    ),\n    fte1: (\n      <img\n        src={fte_active}\n        alt=\"(fte_active_icon)\"\n        style={{ height: \"12px\", marginTop: \"-5px\" }}\n        title=\"Active Employee\"\n      />\n    ),\n    fte2: (\n      <img\n        src={fte_notice}\n        alt=\"(fte_notice_icon)\"\n        style={{ height: \"12px\", marginTop: \"-5px\" }}\n        title=\"Employee in notice period\"\n      />\n    ),\n    subk0: (\n      <img\n        src={subk_inactive}\n        alt=\"(subk_inactive_icon)\"\n        style={{ height: \"12px\", marginTop: \"-5px\" }}\n        title=\"Ex-Contractor\"\n      />\n    ),\n    subk1: (\n      <img\n        src={subk_active}\n        alt=\"(subk_active_icon)\"\n        style={{ height: \"12px\", marginTop: \"-5px\" }}\n        title=\"Active Contractor\"\n      />\n    ),\n    subk2: (\n      <img\n        src={subk_notice}\n        alt=\"(subk_notice_icon)\"\n        style={{ height: \"12px\", marginTop: \"-5px\" }}\n        title=\"Contractor in notice period\"\n      />\n    ),\n  };\n\n  const dispatch = useDispatch();\n  const selectedSERedux = useSelector(\n    (state) => state.selectedSEState.selectedSEProp\n  );\n\n  const isChecked = selectedSERedux.some((obj) => obj.id == item.id)\n    ? isInSelected\n      ? true\n      : selectedSERedux.find((obj) => obj.id == item.id).hasOwnProperty(\"key\")\n      ? \"\"\n      : true\n    : false;\n\n  return (\n    <>\n      <span\n        key={item.id}\n        className=\"option col-md-4 employee-element\"\n        style={{\n          whiteSpace: \"nowrap\",\n          overflow: \"hidden\",\n          textOverflow: \"ellipsis\",\n          width: \"170px\",\n          marginTop: \"6px\",\n        }}\n        title={item.salesPersonName ? item.salesPersonName : item.text}\n      >\n        {propsValue == \"EngagementS\" ? (\n          <>\n            <input\n              type=\"checkbox\"\n              id={item.id}\n              name={item.Name}\n              checked={isChecked}\n              onChange={(e) => {\n                const isChecked = e.target.checked;\n                dispatch(updateSelectedSEProp({ item, isChecked }));\n              }}\n              className=\"mr-2\"\n            ></input>\n            <span\n              className=\"button-pointer\"\n              onClick={(event) => {\n                const isChecked = !document.getElementById(item.id).checked;\n                dispatch(updateSelectedSEProp({ item, isChecked }));\n              }}\n              title={item.Name}\n            >\n              {item?.Name}\n            </span>\n          </>\n        ) : (\n          <>\n            {\" \"}\n            <input\n              type=\"checkbox\"\n              id={item.id}\n              name={item.salesPersonName ? item.salesPersonName : item.text}\n              checked={isChecked}\n              onChange={(event) => {\n                const isChecked = event.target.checked;\n                dispatch(updateSelectedSEProp({ item, isChecked }));\n              }}\n            ></input>\n            &nbsp;\n            {icons[item.type]}&nbsp;\n            <span\n              className=\"button-pointer\"\n              onClick={(event) => {\n                const isChecked = !document.getElementById(item.id).checked;\n                dispatch(updateSelectedSEProp({ item, isChecked }));\n              }}\n            >\n              {item.salesPersonName ? item.salesPersonName : item.text}\n            </span>\n          </>\n        )}\n      </span>\n    </>\n  );\n};\n\nexport default EmployeeElement;\n","import { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport EmployeeElement from \"./EmployeeElement\";\n\nexport default function InDirectSE(params) {\n  const { data, input, search, propsValue } = params;\n\n  const [indirectseList, setindirectseList] = useState([]);\n  const selectedSERedux = useSelector(\n    (state) => state.selectedSEState.selectedSEProp\n  );\n\n  useEffect(() => {\n    setindirectseList(() =>\n      input == \"EngagementS\"\n        ? data\n            .filter((item) => {\n              return item.Name.toLowerCase().includes(search);\n            })\n            .map((item) => {\n              return (\n                <EmployeeElement\n                  item={item}\n                  key={item.id}\n                  propsValue={propsValue}\n                />\n              );\n            })\n        : data\n            .filter((item) => {\n              return item.salesPersonName.toLowerCase().includes(search);\n            })\n            .map((item) => {\n              return (\n                <EmployeeElement\n                  item={item}\n                  key={item.id}\n                  propsValue={propsValue}\n                />\n              );\n            })\n    );\n  }, [selectedSERedux, data, search]);\n\n  return (\n    <div\n      className=\"row scroll-container indirectse\"\n      style={{ margin: \"0px\", border: \"1px solid #ccc\", borderRadius: \"3px\" }}\n    >\n      {indirectseList.length === 0 && (\n        <div className=\"col-md-12\" id=\"noExecDiv\">\n          No Executives found\n        </div>\n      )}\n      {indirectseList}\n    </div>\n  );\n}\n","import React from \"react\";\nimport fte_active from \"../../assets/images/empstatusIcon/fte_active.png\";\nimport fte_inactive from \"../../assets/images/empstatusIcon/fte_inactive.png\";\nimport fte_notice from \"../../assets/images/empstatusIcon/fte_notice.png\";\nimport subk_active from \"../../assets/images/empstatusIcon/subk_active.png\";\nimport subk_inactive from \"../../assets/images/empstatusIcon/subk_inactive.png\";\nimport subk_notice from \"../../assets/images/empstatusIcon/subk_notice.png\";\nimport { FaUser } from \"react-icons/fa\";\nimport { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { updateSelectedSEProp } from \"../../reducers/SelectedSEReducer\";\nimport EmployeeElement from \"./EmployeeElement\";\nfunction SelectedItems(props) {\n  const { selectedSEDisp, s1, nonRepeatedData } = props;\n  const [dataList, setDataList] = useState([]);\n  const filteredData = s1.filter((item) => item.key !== \"id\");\n  const [visible, setVisble] = useState(true);\n  const sales = filteredData.salesPersonName;\n  const [checkedItems, setCheckedItems] = useState([]);\n  const selectedSERedux = useSelector(\n    (state) => state.selectedSEState.selectedSEProp\n  );\n  const isShowInactiveChecked = useSelector(\n    (state) => state.selectedSEState.isShowInactiveChecked\n  );\n  const dispatch = useDispatch();\n  const icons = {\n    fte0: (\n      <img\n        src={fte_inactive}\n        alt=\"(fte_inactive_icon)\"\n        style={{ height: \"12px\", marginTop: \"-5px\", marginRight: \"10px\" }}\n        title=\"Ex-Employee\"\n      />\n    ),\n\n    fte1: (\n      <img\n        src={fte_active}\n        alt=\"(fte_active_icon)\"\n        style={{ height: \"12px\", marginTop: \"-5px\", marginRight: \"10px\" }}\n        title=\"Active Employee\"\n      />\n    ),\n\n    fte2: (\n      <img\n        src={fte_notice}\n        alt=\"(fte_notice_icon)\"\n        style={{ height: \"12px\", marginTop: \"-5px\", marginRight: \"10px\" }}\n        title=\"Employee in notice period\"\n      />\n    ),\n\n    subk0: (\n      <img\n        src={subk_inactive}\n        alt=\"(subk_inactive_icon)\"\n        style={{ height: \"12px\", marginTop: \"-5px\", marginRight: \"10px\" }}\n        title=\"Ex-Contractor\"\n      />\n    ),\n\n    subk1: (\n      <img\n        src={subk_active}\n        alt=\"(subk_active_icon)\"\n        style={{ height: \"12px\", marginTop: \"-5px\", marginRight: \"10px\" }}\n        title=\"Active Contractor\"\n      />\n    ),\n\n    subk2: (\n      <img\n        src={subk_notice}\n        alt=\"(subk_notice_icon)\"\n        style={{ height: \"12px\", marginTop: \"-5px\", marginRight: \"10px\" }}\n        title=\"Contractor in notice period\"\n      />\n    ),\n  };\n\n  return (\n    <div className=\"row engScroll\" style={{ width: \"98%\", marginLeft: \"14px\" }}>\n      {selectedSERedux.length === 0 ? (\n        <div className=\"col-md-12\">None Selected</div>\n      ) : (\n        <div\n          style={{\n            display: \"grid\",\n            gridTemplateColumns: \"auto auto auto auto\",\n          }}\n        >\n          {selectedSERedux?.map((item) => {\n            return (\n              <div key={item.id}>\n                <span>\n                  {visible == true && (\n                    <EmployeeElement\n                      item={item}\n                      key={item.id}\n                      propsValue={props.propsValue}\n                      isInSelected={true}\n                    />\n                  )}\n                </span>\n              </div>\n            );\n          })}\n        </div>\n      )}\n    </div>\n  );\n}\nexport default SelectedItems;\n","import { useEffect, useRef } from \"react\";\nimport { useState } from \"react\";\nimport { FaPencilAlt } from \"react-icons/fa\";\nimport { FaSave } from \"react-icons/fa\";\nimport { FaUserPlus } from \"react-icons/fa\";\nimport { FaPlusCircle } from \"react-icons/fa\";\nimport { FaTrash } from \"react-icons/fa\";\nimport { CListGroup, CModalBody } from \"@coreui/react\";\nimport { CModal } from \"@coreui/react\";\nimport { CModalTitle } from \"@coreui/react\";\nimport { CModalHeader } from \"@coreui/react\";\nimport { FaTrashAlt } from \"react-icons/fa\";\nimport { GrFormClose } from \"react-icons/gr\";\nimport { environment } from \"../../environments/environment\";\nimport axios from \"axios\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { updateSelectedSEProp } from \"../../reducers/SelectedSEReducer\";\nimport EmployeeElement from \"./EmployeeElement\";\nimport \"./SelectedSE.scss\";\nimport { ReactSearchAutocomplete } from \"react-search-autocomplete\";\n\nfunction VirtualTeamRenderer({\n  data,\n  employeeElement,\n  setselectedSE,\n  showInactive,\n  getvTeamData,\n  search,\n  newMemberDropdown,\n  propsValue,\n  setValidationMessage,\n  teamMemData,\n}) {\n  const [editTeamName, seteditTeamName] = useState(false);\n  const [addTeamMembr, setaddTeamMembr] = useState(false);\n  const [teamName, setteamName] = useState(data.teamName);\n  const [allTeamSelected, setallTeamSelected] = useState(false);\n  const [virtualTeamValue, setVirtualTeamValue] = useState();\n  const [newMemberSelected, setnewMemberSelected] = useState(0);\n  const [open, setOpen] = useState(false);\n  const selectedSERedux = useSelector(\n    (state) => state.selectedSEState.selectedSEProp\n  );\n  const [isValid, setIsValid] = useState(true); //Ref to hoighligh the Team member select dropdown\n  const isShowInactiveChecked = useSelector(\n    (state) => state.selectedSEState.isShowInactiveChecked\n  );\n  const dispatch = useDispatch();\n  //------------------------------------------------------------------------------------------------------\n\n  const [options, setOptions] = useState([]);\n\n  const handleAutocomplete = () => {\n    const data = newMemberDropdown;\n\n    const newOption = {\n      value: data.props.value,\n      label: data.props.children,\n    };\n\n    setOptions((prevOptions) => [...prevOptions, newOption]);\n  };\n  const selectedRef = useRef(); //Ref to highlight the element based on validation\n\n  useEffect(() => {\n    //When unselected, selectAll button should be unchecked\n    const teamData = data.data;\n    const filteredTeamArray = teamData.filter((dataObj) =>\n      selectedSERedux.some((reduxObj) => dataObj.memId == reduxObj.id)\n    );\n    if (teamData.length == filteredTeamArray.length && teamData.length > 0)\n      setallTeamSelected(true);\n    else setallTeamSelected(false);\n  }, [selectedSERedux]);\n\n  function DeletePopup({ open, setOpen, id, data, getvTeamData }) {\n    const deleteVirtualTeam = (id) => {\n      axios\n        .delete(\n          baseUrl + `/SalesMS/MasterController/deleteVirtualTeam?teamId=${id}`\n        )\n        .then((resp) => {\n          console.log(resp);\n          getvTeamData();\n        })\n        .catch((resp) => {\n          console.log(resp);\n        });\n    };\n    return (\n      <div className=\"reviewLogDeletePopUp\">\n        <CModal\n          size=\"sm\"\n          visible={open}\n          backdrop={\"static\"}\n          alignment=\"center\"\n          onClose={() => {\n            setOpen(false);\n          }}\n        >\n          <CModalHeader className=\"\">\n            <CModalTitle>\n              <span className=\"\">Confirmation</span>\n            </CModalTitle>\n          </CModalHeader>\n          <CModalBody>\n            <span>Are you sure you want to delete the team?</span>\n            <hr />\n            <div\n              style={{\n                display: \"flex\",\n              }}\n            >\n              <button\n                type=\"Ok\"\n                className=\"btn btn-primary\"\n                onClick={() => {\n                  deleteVirtualTeam(data.teamId);\n                  console.log(data);\n                  setOpen(false);\n                }}\n                style={{ marginLeft: \"30%\" }}\n              >\n                <span>Yes</span>\n              </button>\n              <button\n                type=\"Cancel\"\n                className=\"btn btn-secondary mx-2\"\n                onClick={() => {\n                  setOpen(false);\n                }}\n              >\n                <span>No</span>\n              </button>\n            </div>\n          </CModalBody>\n        </CModal>\n        {/* </Draggable> */}\n      </div>\n    );\n  }\n\n  const baseUrl = environment.baseUrl;\n  const editVirtualName = (data) => {\n    const payload = {\n      id: data,\n      teamName: virtualTeamValue,\n    };\n    axios\n      .post(\n        baseUrl + `/SalesMS/MasterController/postSalesVirtualTeamMembers`,\n        payload\n      )\n      .then(() => {\n        getvTeamData();\n        seteditTeamName(false);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n  const writeVirtualTeam = (data) => {\n    const payload = {\n      teamId: data,\n      executiveId: newMemberSelected,\n      createdDate: \"\",\n    };\n    axios\n      .post(baseUrl + `/SalesMS/MasterController/addVirtualMembers`, payload)\n      .then(() => {\n        getvTeamData();\n        seteditTeamName(false);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  const deleteVirtualTeam = (id) => {\n    axios\n      .delete(\n        baseUrl + `/SalesMS/MasterController/deleteVirtualTeam?teamId=${id}`\n      )\n      .then((resp) => {\n        console.log(resp);\n        getvTeamData();\n      })\n      .catch((resp) => {\n        console.log(resp);\n      });\n  };\n\n  const addVirtualTeamMem = (id) => {\n    const payload = {\n      teamId: id,\n      resourceId: newMemberSelected,\n    };\n    axios\n      .post(baseUrl + `/SalesMS/MasterController/addVirtualTeamMember`, payload)\n      .then(() => {\n        getvTeamData();\n        setaddTeamMembr(false);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  const selectAllTeam = (dataArray, isChecked) => {\n    const data = dataArray.map((emp) => {\n      let obj = {\n        type: emp.type,\n        salesPersonName: emp.memName,\n        id: emp.memId,\n        status: emp.status,\n      };\n      return obj;\n    });\n\n    //Redux state update\n    if (isChecked) {\n      const filteredTeamArray = data\n        .filter(\n          (item) => item.status !== (isShowInactiveChecked ? \"\" : \"empInactive\")\n        )\n        .filter(\n          (dataObj) =>\n            !selectedSERedux.some((reduxObj) =>\n              compareObjects(dataObj, reduxObj)\n            )\n        );\n\n      filteredTeamArray.forEach((item) => {\n        dispatch(updateSelectedSEProp({ item, isChecked }));\n      });\n    } else {\n      const filteredTeamArray = data.filter(\n        (item) => item.status !== (isShowInactiveChecked ? \"\" : \"empInactive\")\n      );\n\n      filteredTeamArray.forEach((item) => {\n        dispatch(updateSelectedSEProp({ item, isChecked }));\n      });\n    }\n    if (allTeamSelected) {\n      setselectedSE((prevState) => {\n        const empId = prevState.map((item) => item.id);\n        const newArray = data\n          .filter(\n            (item) =>\n              item.status !== (isShowInactiveChecked ? \"\" : \"empInactive\")\n          )\n          .filter((item) => !empId.includes(item.id));\n        return [...prevState, ...newArray];\n      });\n    } else {\n      setselectedSE((prevState) => {\n        const empId = data.map((item) => item.id);\n        const newArray = prevState.filter((item) => !empId.includes(item.id));\n        return newArray;\n      });\n    }\n    // setallTeamSelected((prevState) => !prevState);\n  };\n\n  // Custom function to compare objects based on id\n  function compareObjects(obj1, obj2) {\n    return obj1.id === obj2.id;\n  }\n  return (\n    <div className=\"section col-md-12  optionList \">\n      <div className=\"selectSEbtnContainer\">\n        <input\n          type=\"checkbox\"\n          id=\"selectAllExec\"\n          onChange={(event) => {\n            const isChecked = event.target.checked;\n            selectAllTeam(data.data, isChecked);\n          }}\n          checked={allTeamSelected}\n        ></input>\n        {!editTeamName == true ? (\n          <label>{data.teamName}</label>\n        ) : (\n          <input\n            ref={selectedRef}\n            id=\"virtualTeamName\"\n            style={{\n              border: `1px solid ${isValid ? \"\" : \"red\"}`,\n              backgroundColor: isValid ? \"transparent\" : \"rgba(255, 0, 0, 0.2)\",\n              color: isValid ? \"\" : \"red\",\n              fontWeight: isValid ? \"normal\" : \"bold\",\n            }}\n            type=\"text\"\n            defaultValue={data.teamName}\n            onChange={(e) => {\n              setVirtualTeamValue(e.target.value);\n            }}\n          />\n        )}\n        {!editTeamName && !addTeamMembr && (\n          <span\n            title=\"Edit Team\"\n            onClick={() => seteditTeamName(true)}\n            className=\"button-pointer\"\n          >\n            <FaPencilAlt />\n          </span>\n        )}\n        {editTeamName && (\n          <span\n            title=\"Save Team\"\n            onClick={() => {\n              const teamName = selectedRef.current.value;\n              if (teamName == data.teamName) {\n                setIsValid(false);\n                setValidationMessage(\"Team Name Already Exists !!\");\n                window.scrollTo({\n                  top: 0,\n                  behavior: \"smooth\", // Use \"auto\" for instant scrolling\n                });\n                setTimeout(() => {\n                  setValidationMessage();\n                  setIsValid(true);\n                }, 3000);\n              } else if (\n                teamName == null ||\n                teamName == \"\" ||\n                teamName.length == 0\n              ) {\n                setIsValid(false);\n                setValidationMessage(\"Please enter Team Name !!\");\n                window.scrollTo({\n                  top: 0,\n                  behavior: \"smooth\", // Use \"auto\" for instant scrolling\n                });\n                setTimeout(() => {\n                  setValidationMessage();\n                  setIsValid(true);\n                }, 3000);\n              } else {\n                editVirtualName(data.teamId);\n              }\n            }}\n          >\n            <FaSave />\n          </span>\n        )}\n        {editTeamName && (\n          <span title=\"Cancel\" onClick={() => seteditTeamName(false)}>\n            <GrFormClose />\n          </span>\n        )}\n        <span className=\"selectSEformBtns\">\n          {!addTeamMembr && !editTeamName && (\n            <span\n              title=\"Add Member to Team\"\n              onClick={() => setaddTeamMembr(true)}\n              className=\"button-pointer\"\n            >\n              <FaPlusCircle />\n            </span>\n          )}\n          {addTeamMembr && (\n            <span title=\"cancel\" onClick={() => setaddTeamMembr(false)}>\n              <GrFormClose />\n            </span>\n          )}\n          {addTeamMembr && (\n            // <span className=\"\">\n            <>\n              <div className=\"autoComplete-container \">\n                <div className={!isValid ? \"error-block\" : \"\"}>\n                  <ReactSearchAutocomplete\n                    className=\"autocomplete\"\n                    items={teamMemData}\n                    placeholder=\"Enter a name\"\n                    type=\"text\"\n                    name=\"name\"\n                    id=\"userId\"\n                    onSelect={(e) => {\n                      setnewMemberSelected(e.resourcesId);\n                    }}\n                    showIcon={false}\n                  />\n                </div>\n              </div>\n              <button\n                type=\"button\"\n                className=\"btn btn-primary btnSE\"\n                onClick={() => {\n                  if (\n                    newMemberSelected == null ||\n                    newMemberSelected == 0 ||\n                    newMemberSelected == undefined\n                  ) {\n                    setIsValid(false);\n                    setValidationMessage(\"Please select a team member !!\");\n                    window.scrollTo({\n                      top: 0,\n                      behavior: \"smooth\", // Use \"auto\" for instant scrolling\n                    });\n                    setTimeout(() => {\n                      setValidationMessage();\n                      setIsValid(true);\n                    }, 3000);\n                  } else {\n                    const isNewMemAlrPres = data.data.some(\n                      (item) => item.memId == newMemberSelected\n                    );\n                    if (isNewMemAlrPres) {\n                      setValidationMessage(\n                        \"Resource already exists in the team !!\"\n                      );\n                      window.scrollTo({\n                        top: 0,\n                        behavior: \"smooth\", // Use \"auto\" for instant scrolling\n                      });\n                      setTimeout(() => {\n                        setValidationMessage();\n                      }, 3000);\n                    } else {\n                      writeVirtualTeam(data.teamId);\n                      getvTeamData();\n                      setaddTeamMembr(false);\n                    }\n                  }\n                }}\n              >\n                Add\n              </button>\n            </>\n          )}\n        </span>\n        {!editTeamName && !addTeamMembr && (\n          <span\n            title=\"Delete Team\"\n            onClick={() => {\n              // deleteVirtualTeam(data.teamId);\n              setOpen(true);\n            }}\n            className=\"button-pointer\"\n          >\n            <FaTrashAlt />\n          </span>\n        )}\n      </div>\n\n      <div className=\"row engScroll virualTeamRender\">\n        {data.data.length === 0 && (\n          <div className=\"col-md-12\" id=\"noExecDiv\">\n            No Members found\n          </div>\n        )}\n        {data.data\n          .filter(\n            (item) =>\n              item.status !== (isShowInactiveChecked ? \"\" : \"empInactive\")\n          )\n          .filter((item) => {\n            return item.memName.toLowerCase().includes(search);\n          })\n          .map((emp) => {\n            let obj = {\n              type: emp.type,\n              salesPersonName: emp.memName,\n              id: emp.memId,\n              status: emp.status,\n            };\n            return (\n              <EmployeeElement\n                item={obj}\n                key={obj.id}\n                propsValue={propsValue}\n              />\n            );\n          })}\n        {/* {open && <deletePopup open={open} setOpen={setOpen} />}\n         */}\n        {open && (\n          <DeletePopup\n            open={open}\n            setOpen={setOpen}\n            data={data}\n            // id={id}\n            getvTeamData={getvTeamData}\n          />\n        )}\n      </div>\n    </div>\n  );\n}\nexport default VirtualTeamRenderer;\n","import { useEffect, useState } from \"react\";\nimport VirtualTeamRenderer from \"./VirtualTeamRenderer\";\nimport { environment } from \"../../environments/environment\";\nimport axios from \"axios\";\n\nexport default function VirtualTeams({\n  employeeElement,\n  setselectedSE,\n  showInactive,\n  getvTeamData,\n  seOptions,\n  vTeamData,\n  search,\n  propsValue,\n  setValidationMessage,\n}) {\n  const [newMemberDropdown, setnewMemberDropdown] = useState([]);\n  const [teamMemData, setTeamMemData] = useState([]);\n\n  const baseUrl = environment.baseUrl;\n\n  const getnewMemberDropdown = () => {\n    axios\n      .get(baseUrl + \"/SalesMS/MasterController/getResources?isActive=1\")\n      .then((resp) => {\n        const data = resp.data;\n        const updatedTeamMemData = data.map((member) => {\n          const teamObj = { ...member };\n          teamObj.name = teamObj.resourceName;\n          delete teamObj.resourceName;\n          return teamObj;\n        });\n\n        setTeamMemData(updatedTeamMemData);\n        const dropdownOptions = data.map((item) => {\n          return (\n            <option key={item.userId} value={item.resourcesId}>\n              {item.resourceName}\n            </option>\n          );\n        });\n        setnewMemberDropdown(dropdownOptions);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  useEffect(() => {\n    getnewMemberDropdown();\n  }, []);\n\n  const array = vTeamData.map((item) => {\n    return (\n      <>\n        <VirtualTeamRenderer\n          key={item.teamId}\n          data={item}\n          employeeElement={employeeElement}\n          setselectedSE={setselectedSE}\n          showInactive={showInactive}\n          getvTeamData={getvTeamData}\n          search={search}\n          seOptions={seOptions}\n          newMemberDropdown={newMemberDropdown}\n          propsValue={propsValue}\n          setValidationMessage={setValidationMessage}\n          teamMemData={teamMemData} //For team member auto search data\n        />\n        <div className=\"col-md-12 nopadding clearfix\"></div>\n      </>\n    );\n  });\n\n  return <div className=\"col-md-12\">{array}</div>;\n}\n","import ChevronRightIcon from \"@mui/icons-material/ChevronRight\";\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\nimport TreeItem, { treeItemClasses, useTreeItem } from \"@mui/lab/TreeItem\";\nimport TreeView from \"@mui/lab/TreeView\";\nimport Box from \"@mui/material/Box\";\nimport Collapse from \"@mui/material/Collapse\";\nimport { alpha, styled } from \"@mui/material/styles\";\nimport SvgIcon from \"@mui/material/SvgIcon\";\nimport Typography from \"@mui/material/Typography\";\nimport { signal } from \"@preact/signals\";\nimport { animated, useSpring } from \"@react-spring/web\";\nimport axios from \"axios\";\nimport clsx from \"clsx\";\nimport { color } from \"highcharts\";\nimport PropTypes from \"prop-types\";\nimport * as React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport {\n  FaPlusSquare,\n  FaUserAlt,\n  FaUserFriends,\n  FaUsers,\n} from \"react-icons/fa\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport fte_active from \"../../assets/images/empstatusIcon/fte_active.png\";\nimport fte_inactive from \"../../assets/images/empstatusIcon/fte_inactive.png\";\nimport fte_notice from \"../../assets/images/empstatusIcon/fte_notice.png\";\nimport subk_active from \"../../assets/images/empstatusIcon/subk_active.png\";\nimport subk_inactive from \"../../assets/images/empstatusIcon/subk_inactive.png\";\nimport subk_notice from \"../../assets/images/empstatusIcon/subk_notice.png\";\nimport { environment } from \"../../environments/environment\";\nimport { updatedirectSETreeData } from \"../../reducers/SelectedSEReducer\";\n\nfunction MinusSquare(props) {\n  return (\n    <SvgIcon\n      className=\"hierarchyCollapseIcon\"\n      fontSize=\"inherit\"\n      style={{ width: 12, height: 12 }}\n      {...props}\n    >\n      <path d=\"M22.047 22.074v0 0-20.147 0h-20.12v0 20.147 0h20.12zM22.047 24h-20.12q-.803 0-1.365-.562t-.562-1.365v-20.147q0-.776.562-1.351t1.365-.575h20.147q.776 0 1.351.575t.575 1.351v20.147q0 .803-.575 1.365t-1.378.562v0zM17.873 11.023h-11.826q-.375 0-.669.281t-.294.682v0q0 .401.294 .682t.669.281h11.826q.375 0 .669-.281t.294-.682v0q0-.401-.294-.682t-.669-.281z\" />\n    </SvgIcon>\n  );\n}\n\nfunction CloseSquare(props) {\n  return (\n    <SvgIcon\n      className=\"close\"\n      fontSize=\"inherit\"\n      style={{ width: 12, height: 12 }}\n      {...props}\n    >\n      <path d=\"M17.485 17.512q-.281.281-.682.281t-.696-.268l-4.12-4.147-4.12 4.147q-.294.268-.696.268t-.682-.281-.281-.682.294-.669l4.12-4.147-4.12-4.147q-.294-.268-.294-.669t.281-.682.682-.281.696 .268l4.12 4.147 4.12-4.147q.294-.268.696-.268t.682.281 .281.669-.294.682l-4.12 4.147 4.12 4.147q.294.268 .294.669t-.281.682zM22.047 22.074v0 0-20.147 0h-20.12v0 20.147 0h20.12zM22.047 24h-20.12q-.803 0-1.365-.562t-.562-1.365v-20.147q0-.776.562-1.351t1.365-.575h20.147q.776 0 1.351.575t.575 1.351v20.147q0 .803-.575 1.365t-1.378.562v0z\" />\n    </SvgIcon>\n  );\n}\n\nfunction PlusSquare(props) {\n  return (\n    <SvgIcon\n      className=\"hierarchyExpandIcon\"\n      fontSize=\"inherit\"\n      style={{ width: 12, height: 12 }}\n      {...props}\n    >\n      <path d=\"M22.047 22.074v0 0-20.147 0h-20.12v0 20.147 0h20.12zM22.047 24h-20.12q-.803 0-1.365-.562t-.562-1.365v-20.147q0-.776.562-1.351t1.365-.575h20.147q.776 0 1.351.575t.575 1.351v20.147q0 .803-.575 1.365t-1.378.562v0zM17.873 12.977h-4.923v4.896q0 .401-.281.682t-.682.281v0q-.375 0-.669-.281t-.294-.682v-4.896h-4.923q-.401 0-.682-.294t-.281-.669v0q0-.401.281-.682t.682-.281h4.923v-4.896q0-.401.294-.682t.669-.281v0q.401 0 .682.281t.281.682v4.896h4.923q.401 0 .682.281t.281.682v0q0 .375-.281.669t-.682.294z\" />\n    </SvgIcon>\n  );\n}\n\nfunction TransitionComponent(props) {\n  const style = useSpring({\n    from: {\n      opacity: 0,\n      transform: \"translate3d(20px,0,0)\",\n    },\n    to: {\n      opacity: props.in ? 1 : 0,\n      transform: `translate3d(${props.in ? 0 : 20}px,0,0)`,\n    },\n  });\n\n  return (\n    <animated.div style={style}>\n      <Collapse {...props} />\n    </animated.div>\n  );\n}\n\nTransitionComponent.propTypes = {\n  in: PropTypes.bool,\n};\nexport default function DirectSE({\n  onSelectSE,\n  setGrpId,\n  accessData,\n  dataAccess,\n}) {\n  const icons = {\n    fte0: (\n      <img\n        src={fte_inactive}\n        alt=\"(fte_inactive_icon)\"\n        style={{ height: \"12px\", marginTop: \"-5px\", marginRight: \"10px\" }}\n        title=\"Ex-Employee\"\n      />\n    ),\n\n    fte1: (\n      <img\n        src={fte_active}\n        alt=\"(fte_active_icon)\"\n        style={{ height: \"12px\", marginTop: \"-5px\", marginRight: \"10px\" }}\n        title=\"Active Employee\"\n      />\n    ),\n\n    fte2: (\n      <img\n        src={fte_notice}\n        alt=\"(fte_notice_icon)\"\n        style={{ height: \"12px\", marginTop: \"-5px\", marginRight: \"10px\" }}\n        title=\"Employee in notice period\"\n      />\n    ),\n\n    subk0: (\n      <img\n        src={subk_inactive}\n        alt=\"(subk_inactive_icon)\"\n        style={{ height: \"12px\", marginTop: \"-5px\", marginRight: \"10px\" }}\n        title=\"Ex-Contractor\"\n      />\n    ),\n\n    subk1: (\n      <img\n        src={subk_active}\n        alt=\"(subk_active_icon)\"\n        style={{ height: \"12px\", marginTop: \"-5px\", marginRight: \"10px\" }}\n        title=\"Active Contractor\"\n      />\n    ),\n\n    subk2: (\n      <img\n        src={subk_notice}\n        alt=\"(subk_notice_icon)\"\n        style={{ height: \"12px\", marginTop: \"-5px\", marginRight: \"10px\" }}\n        title=\"Contractor in notice period\"\n      />\n    ),\n  };\n  console.log(dataAccess);\n  const [hierarchy, setHierarchy] = useState(null);\n  const isShowInactiveChecked = useSelector(\n    (state) => state.selectedSEState.isShowInactiveChecked\n  );\n  const isIndividualChecked = useSelector(\n    (state) => state.selectedSEState.isIndividualChecked\n  );\n  const baseUrl = environment.baseUrl;\n  const [data, setData] = useState([]);\n  const loggedUserId = localStorage.getItem(\"resId\");\n  const dispatch = useDispatch();\n  const [filteredData, setFilteredData] = useState(null);\n  const [select, setSelect] = useState({});\n  const [salesSEData, setSalesSEData] = useState([]);\n  const localSEData = useSelector(\n    (state) => state.selectedSEState.selectedSEProp\n  );\n  const idsWithoutDirectSalesEx = localSEData.map((item) => item.id);\n  const idDirectSalesEx = localSEData\n    .filter((item) => item.key === \"directsalesEx\")\n    .map((item) => item.id);\n  const filteredArray = isShowInactiveChecked\n    ? salesSEData\n    : salesSEData?.filter((item) => item.status !== \"empInactive\");\n  const idToFind = idDirectSalesEx[0];\n  const initialExpandedIds = [\"id\"];\n  const [parentObjInHierarchy, setParentObjInHierarchy] = useState();\n\n  const jsonToTree = (flatArray, options, id) => {\n    setSalesSEData(flatArray);\n    options = {\n      id: \"id\",\n      parentId: \"parent\",\n      children: \"subrows\",\n      ...options,\n    };\n    const dictionary = {}; // a hash table mapping to the specific array objects with their ids as key\n    const tree = [];\n    const children = options.children;\n    flatArray.forEach((node) => {\n      const nodeId = node[options.id];\n      const nodeParentId = node[options.parentId];\n      // set up current node data in dictionary\n      dictionary[nodeId] = {\n        [children]: [], // init a children property\n        ...node, // add other propertys\n        ...dictionary[nodeId], // children will be replaced if this node already has children property which was set below\n      };\n      dictionary[nodeParentId] = dictionary[nodeParentId] || {\n        [children]: [],\n      }; // if it's not exist in dictionary, init an object with children property\n      dictionary[nodeParentId][children].push(dictionary[nodeId]); // add reference to current node object in parent node object\n    });\n    // find root nodes\n    Object.values(dictionary).forEach((obj) => {\n      if (typeof obj[options.id] === \"undefined\") {\n        tree.push(...obj[children]);\n      }\n    });\n    return tree;\n  };\n  useEffect(() => {\n    if (filteredData) {\n      const updatedHierarchy = jsonToTree(filteredData);\n      if (updatedHierarchy.length > 1) {\n        const find = updatedHierarchy.find((obj) => obj.parent == \"#\");\n        find ? setParentObjInHierarchy(find) : \"\";\n      } else setParentObjInHierarchy(updatedHierarchy[0]);\n      setHierarchy(updatedHierarchy);\n    }\n  }, [filteredData]);\n\n  // ==============Use Effects start ====================\n  useEffect(() => {\n    // Filter out items where type is \"fte0\" or \"subk0\"\n    if (data) {\n      isShowInactiveChecked\n        ? setFilteredData(data)\n        : setFilteredData(\n            data.filter((obj) => obj.type !== \"fte0\" && obj.type !== \"subk0\")\n          );\n    }\n  }, [isShowInactiveChecked, data]);\n\n  useEffect(() => {\n    getData();\n  }, []);\n  const CustomContent = React.forwardRef(function CustomContent(props, ref) {\n    const {\n      classes,\n      className,\n      label,\n      nodeId,\n      icon: iconProp,\n      expansionIcon,\n      displayIcon,\n    } = props;\n\n    const {\n      disabled,\n      expanded,\n      selected,\n      focused,\n      handleExpansion,\n      handleSelection,\n      preventSelection,\n    } = useTreeItem(nodeId);\n\n    const icon = iconProp || expansionIcon || displayIcon;\n\n    const handleMouseDown = (event) => {\n      preventSelection(event);\n    };\n\n    const handleExpansionClick = (event) => {\n      handleExpansion(event);\n    };\n\n    const handleSelectionClick = async (event) => {\n      handleSelection(event);\n      let propData = nodeId;\n      let splitdata = propData?.split(\"_\")[2];\n      let projectId = propData?.split(\"_\")[0];\n      let roleId = propData?.split(\"_\")[1];\n    };\n\n    return (\n      <div\n        className={clsx(className, classes.root, {\n          [classes.expanded]: expanded,\n          [classes.selected]: selected,\n          [classes.focused]: focused,\n          [classes.disabled]: disabled,\n        })}\n        onMouseDown={handleMouseDown}\n        ref={ref}\n      >\n        <div onClick={handleExpansionClick} className={classes.iconContainer}>\n          {icon}\n        </div>\n        <Typography\n          onClick={handleSelectionClick}\n          component=\"div\"\n          // className={classes.label}\n        >\n          {label}\n        </Typography>\n      </div>\n    );\n  });\n\n  // ==================Use Effect end================\n\n  //===================Function calls start ===============\n  //check if the selected person has children\n  //If children present, add id into array then again check for children- recursion/loop\n  const findChildrenAndDescendants = (data, parentId) => {\n    const result = [];\n\n    function findChildren(parentId) {\n      for (const item of data) {\n        if (item.parent === parentId) {\n          result.push(item.id);\n          findChildren(item.id);\n        }\n      }\n    }\n    findChildren(parentId);\n    return result;\n  };\n\n  const idsListToBeSent = findChildrenAndDescendants(filteredArray, idToFind);\n  const idsToSend = isIndividualChecked\n    ? [idToFind, ...idsWithoutDirectSalesEx]\n    : [...idsListToBeSent, ...idsWithoutDirectSalesEx, idToFind];\n  const formattedIds = idsToSend.join(\",\");\n\n  useEffect(() => {\n    dispatch(updatedirectSETreeData(formattedIds));\n  }, [formattedIds]);\n\n  function getidList(tree) {\n    let ids = [];\n    tree.map((val) => {\n      ids.push(val.id);\n      if (val.subrows.length > 0) {\n        let x = getidList(val.subrows);\n        ids.push(...x);\n      }\n    });\n    return ids;\n  }\n  function getTree(id) {\n    return hierarchy[0].subrows.filter((val) => val.id == id);\n  }\n  let a1 = document.getElementsByClassName(\"iconContainer\");\n  const [selectedNodeId, setSelectedNodeId] = useState(null);\n\n  const hasChildren = (nodeId) => {\n    const isParent = filteredData.find((obj) => obj.parent == nodeId);\n    return isParent ? true : false;\n  };\n\n  const StyledTreeItem = styled((props) => (\n    <div className=\"hierarchy tree\">\n      <TreeItem\n        ContentComponent={CustomContent} // expanding only when click on plus icon\n        {...props}\n        key={String(props.node?.id)}\n        nodeId={String(props.node?.id)}\n        onClick={(e) => {\n          let temp = getidList(getTree(props.node?.id));\n          setGrpId(temp);\n        }}\n        icon={!hasChildren(props.node?.id) ? <CloseSquare /> : \"\"}\n        label={\n          <Box sx={{ display: \"flex\", alignItems: \"center\", p: 0.5, pr: 0 }}>\n            <Box color=\"inherit\">\n              {props.node?.type == \"Department\" ? (\n                <FaUsers />\n              ) : (\n                icons[props.node?.type]\n              )}\n            </Box>\n            <Typography variant=\"body2\" sx={{ fontWeight: \"inherit\" }}>\n              <span\n                style={{\n                  color: props.node?.text.includes(\"span\")\n                    ? props.node.text.split('\"')[1].split(\":\")[1]\n                    : \"\",\n                }}\n              >\n                <span>\n                  {\" \"}\n                  {props.node?.text.includes(\"span\")\n                    ? props.node?.text\n                        .split('\">')[1]\n                        .split(\"(\")[0]\n                        .replaceAll(\"<b>\", \"\")\n                        .replaceAll(\"</b>\", \"\")\n                    : props.node?.text\n                        .split(\"(\")[0]\n                        .replaceAll(\"<b>\", \"\")\n                        .replaceAll(\"</b>\", \"\")}\n                  {}\n                </span>\n                <span>\n                  {\" \"}\n                  {props.node?.text.split(\"(\")[1] != undefined\n                    ? props.node?.text.split(\"(\")[1].includes(\"span\")\n                      ? \"(\" +\n                        props.node?.text.split(\"(\")[1].replaceAll(\"</span>\", \"\")\n                      : \"(\" + props.node?.text.split(\"(\")[1]\n                    : \"\"}\n                </span>\n              </span>\n            </Typography>\n          </Box>\n        }\n        TransitionComponent={TransitionComponent}\n      >\n        {Array.isArray(props.node?.subrows)\n          ? props.node?.subrows.map((node) => renderTree(node))\n          : console.log(\"coming here?\")}\n      </TreeItem>\n    </div>\n  ))(({ theme }) => ({\n    [`& .${treeItemClasses.iconContainer}`]: {\n      \"& .close\": {\n        opacity: 0.3,\n      },\n    },\n    [`& .${treeItemClasses.group}`]: {\n      marginLeft: 15,\n      paddingLeft: 18,\n      borderLeft: `1px dashed ${alpha(theme.palette.text.primary, 0.4)}`,\n    },\n  }));\n\n  const renderTree = (node) => {\n    return (\n      <div>\n        <StyledTreeItem node={node}></StyledTreeItem>\n      </div>\n    );\n  };\n  console.log(accessData, dataAccess);\n  const getData = () => {\n    axios\n      .get(\n        accessData == 1000 || accessData == 500\n          ? baseUrl +\n              `/CommonMS/master/getDirectSe?loggedUserId=${loggedUserId}&activeId=1`\n          : dataAccess == 690 ||\n            dataAccess == 641 ||\n            dataAccess == 600 ||\n            accessData == 100 ||\n            dataAccess == 909\n          ? baseUrl +\n            `/ProjectMS/project/getdirectHirarchyBasis?loggedUserId=${1}`\n          : baseUrl +\n            `/ProjectMS/project/getdirectHirarchyBasis?loggedUserId=${loggedUserId}`\n      )\n\n      .then((resp) => {\n        const arrayOfDirectSEs = resp.data;\n        const modifiedArray = arrayOfDirectSEs.map((obj) => {\n          try {\n            // Parse the li_attr string as JSON\n            const liAttr = JSON.parse(obj.li_attr);\n\n            // Rename the property from \"sestatus\" to \"status\"\n            if (liAttr.sestatus !== undefined) {\n              obj.status = liAttr.sestatus;\n            }\n\n            // Stringify the modified li_attr object and assign it back to the object\n            obj.li_attr = JSON.stringify(liAttr);\n            obj.key = \"directsalesEx\";\n\n            return obj; // Return the modified object\n          } catch (error) {\n            console.error(`Error processing object: ${error}`);\n            return obj; // Return the original object in case of an error\n          }\n        });\n        setData(modifiedArray);\n      })\n\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n  const handleChange = (event, nodeIds) => {\n    let dttt = [...data];\n    // let filterData = dttt.filter((d) => d.id == nodeIds);\n    const empObject = dttt.find((obj) => obj.id === nodeIds);\n    empObject ? onSelectSE(empObject, event) : \"\";\n    const selected = [];\n    const findSelectedIds = (dttt, parentId) => {\n      dttt.forEach((item) => {\n        if (item.parent === parentId) {\n          selected.push(item.id);\n          setsel(data, item.id);\n        }\n      });\n    };\n  };\n\n  const selectDirect = (e) => {\n    const value = e;\n\n    const emp = data.find((e) => {\n      e.id = value;\n    });\n\n    const obj = {\n      type: emp.type,\n      salesPersonName: emp.text,\n      id: emp.id,\n      status: JSON.parse(emp.li_attr),\n    };\n    onSelectSE(obj);\n  };\n\n  //===================Function calls end ===============\n\n  return (\n    <div>\n      <TreeView\n        aria-label=\"rich object\"\n        ContentComponent={CustomContent}\n        onNodeSelect={handleChange}\n        defaultParentIcon={\n          <div className=\"iconContainer\">\n            <MinusSquare className=\"hierarchyIcons\" />\n          </div>\n        }\n        defaultCollapseIcon={\n          <div className=\"iconContainer\">\n            <MinusSquare className=\"hierarchyIcons\" />\n          </div>\n        }\n        defaultExpandIcon={\n          <div className=\"iconContainer\">\n            <PlusSquare className=\"hierarchyIcons\" />\n          </div>\n        }\n        defaultEndIcon={\n          <div className=\"iconContainer\">\n            <PlusSquare className=\"hierarchyIcons\" />\n          </div>\n        }\n        sx={{\n          \"& .css-1g86id8-MuiTreeItem-content .MuiTreeItem-label\": {\n            width: \"auto\",\n            minwidth: 0,\n          },\n        }}\n        className=\"hierarchyTree\"\n        defaultExpanded={initialExpandedIds}\n      >\n        {hierarchy && renderTree(parentObjInHierarchy)}\n      </TreeView>\n    </div>\n  );\n}\n","import { useState, useEffect, forwardRef, useImperativeHandle } from \"react\";\nimport InDirectSE from \"./InDirectSE\";\nimport SelectedItems from \"./SelectedItems\";\nimport VirtualTeams from \"./VirtualTeams\";\nimport { BiMinusCircle } from \"react-icons/bi\";\nimport {\n  FaAnchor,\n  FaExclamationTriangle,\n  FaHistory,\n  FaPlusCircle,\n  FaSave,\n} from \"react-icons/fa\";\nimport DirectSE from \"./DirectSE\";\nimport fte_active from \"../../assets/images/empstatusIcon/fte_active.png\";\nimport fte_inactive from \"../../assets/images/empstatusIcon/fte_inactive.png\";\nimport fte_notice from \"../../assets/images/empstatusIcon/fte_notice.png\";\nimport subk_active from \"../../assets/images/empstatusIcon/subk_active.png\";\nimport subk_inactive from \"../../assets/images/empstatusIcon/subk_inactive.png\";\nimport subk_notice from \"../../assets/images/empstatusIcon/subk_notice.png\";\nimport { environment } from \"../../environments/environment\";\nimport axios from \"axios\";\nimport \"./SelectedSE.scss\";\nimport { MD5 } from \"crypto-js\";\n\nimport {\n  emptySelectedSEProp,\n  hideIndirectInactive,\n  undoSaveSelectSE,\n  updateIsIndivChecked,\n  updateIsShowInactiveChecked,\n  updateSelectedSEProp,\n} from \"../../reducers/SelectedSEReducer\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Button } from \"@coreui/coreui\";\nimport { CButton } from \"@coreui/react\";\n\nconst SelectSE = forwardRef((props, ref) => {\n  const selectedSERedux = useSelector(\n    (state) => state.selectedSEState.selectedSEProp\n  );\n  const isIndividualChecked = useSelector(\n    (state) => state.selectedSEState.isIndividualChecked\n  );\n  const [validationMessage, setValidationMessage] = useState(\"\");\n\n  // const [accessData, setAccessData] = useState([]);\n\n  const isShowInactiveChecked = useSelector(\n    (state) => state.selectedSEState.isShowInactiveChecked\n  );\n  const dispatch = useDispatch();\n  const input = props.value;\n  const permissions = props.permissions;\n  const setGrpId = props.setGrpId;\n  const SetBulkIds = props.SetBulkIds;\n  const accessData = props.accessData;\n  const dataAccess = props.dataAccess;\n  const setVisible = props.setVisible;\n  const [visible, setVisble] = useState(false);\n  const [seOptions, setSeOptions] = useState([]);\n  const loggedUserId = localStorage.getItem(\"resId\");\n  const baseUrl = environment.baseUrl;\n  const [addVirtualTeam, setAddvirtualTeam] = useState(false);\n  const [virtualTeamName, setVirtualTeamName] = useState([]);\n  const [showInactive, setShowInactive] = useState(false);\n  const [selectedSE, setselectedSE] = useState([]);\n  const [selectedSEDisp, setselectedSEDisp] = useState([]);\n  const [allIndirectSelected, setallIndirectSelected] = useState(false);\n  const [indirectData, setIndirectdata] = useState([]);\n  const [isIndividual, setisIndividual] = useState(false);\n  const [search, setSearch] = useState(\"\");\n  const [filteredIndirectData, setFilteredIndirectData] = useState([]);\n\n  const [vTeamData, setvTeamData] = useState([]);\n\n  const getvTeamData = () => {\n    axios\n      .get(\n        baseUrl +\n          `/SalesMS/MasterController/getVirtualTeamsData?userId=${loggedUserId}`\n      )\n      .then((resp) => {\n        const data = resp.data;\n        setvTeamData(data);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n  const icons = {\n    fte0: (\n      <img\n        src={fte_inactive}\n        alt=\"(fte_inactive_icon)\"\n        style={{ height: \"12px\", marginTop: \"-5px\" }}\n        title=\"Ex-Employee\"\n      />\n    ),\n    fte1: (\n      <img\n        src={fte_active}\n        alt=\"(fte_active_icon)\"\n        style={{ height: \"12px\", marginTop: \"-5px\" }}\n        title=\"Active Employee\"\n      />\n    ),\n    fte2: (\n      <img\n        src={fte_notice}\n        alt=\"(fte_notice_icon)\"\n        style={{ height: \"12px\", marginTop: \"-5px\" }}\n        title=\"Employee in notice period\"\n      />\n    ),\n    subk0: (\n      <img\n        src={subk_inactive}\n        alt=\"(subk_inactive_icon)\"\n        style={{ height: \"12px\", marginTop: \"-5px\" }}\n        title=\"Ex-Contractor\"\n      />\n    ),\n    subk1: (\n      <img\n        src={subk_active}\n        alt=\"(subk_active_icon)\"\n        style={{ height: \"12px\", marginTop: \"-5px\" }}\n        title=\"Active Contractor\"\n      />\n    ),\n    subk2: (\n      <img\n        src={subk_notice}\n        alt=\"(subk_notice_icon)\"\n        style={{ height: \"12px\", marginTop: \"-5px\" }}\n        title=\"Contractor in notice period\"\n      />\n    ),\n  };\n\n  //---------------------------refMethod------------------------------------\n\n  const writeVirtualTeam = () => {\n    const payload = {\n      teamName: virtualTeamName,\n      userId: loggedUserId,\n    };\n    axios\n      .post(baseUrl + `/SalesMS/MasterController/addVirtualTeams`, payload)\n      .then(() => {\n        getvTeamData();\n        setAddvirtualTeam(false);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  useImperativeHandle(ref, () => ({\n    setGlobalState() {\n      localStorage.setItem(\"selectedSE\", JSON.stringify(selectedSE));\n      {\n        props.value == \"EngagementS\"\n          ? \"\"\n          : localStorage.setItem(\"isIndividual\", isIndividual);\n      }\n    },\n    resetTOlocalState() {\n      const localSE =\n        localStorage.getItem(\"selectedSE\") === null\n          ? []\n          : JSON.parse(localStorage.getItem(\"selectedSE\"));\n\n      setselectedSE(localSE);\n      {\n        props.value == \"EngagementS\"\n          ? \"\"\n          : setisIndividual(\n              localStorage.getItem(\"isIndividual\") === \"true\" ? true : false\n            );\n      }\n    },\n  }));\n\n  //---------------------------method------------------------------------------\n\n  const onSelectSE = (item, isChecked) => {\n    dispatch(updateSelectedSEProp({ item, isChecked }));\n    setselectedSE((prevState) => {\n      const filteredData = prevState?.filter(\n        (item) => !item?.hasOwnProperty(\"key\")\n      );\n      const isEmpPresent = filteredData.findIndex((obj) => obj.id === item.id);\n      isEmpPresent !== -1 ? filteredData.splice(isEmpPresent, 1) : \"\";\n      return [...filteredData, item];\n    });\n    setVisble(true);\n  };\n\n  const employeeElement = (item, type) => {\n    return (\n      <span\n        key={item.id}\n        className=\"option col-md-4\"\n        style={{\n          whiteSpace: \"nowrap\",\n          overflow: \"hidden\",\n          textOverflow: \"ellipsis\",\n          width: \"160px\",\n          marginTop: \"6px\",\n        }}\n      >\n        {props.value == \"EngagementS\" ? (\n          <>\n            <input\n              type=\"checkbox\"\n              id={item.id}\n              name={item.Name}\n              checked={selectedSERedux.some((obj) => obj.id == item.id)}\n              onChange={(e) => {\n                const isChecked = e.target.checked;\n                onSelectSE(item, isChecked);\n              }}\n              className=\"mr-2\"\n            ></input>\n            <span title={item.Name}>{item.Name}</span>\n          </>\n        ) : (\n          <>\n            {\" \"}\n            <input\n              type=\"checkbox\"\n              id={item.id}\n              name={item.salesPersonName}\n              checked={selectedSERedux.some((obj) => obj.id == item.id)}\n              onChange={(event) => onSelectSE(item, event.target.checked)}\n            ></input>\n            &nbsp;\n            {icons[item.type]}&nbsp;\n            <span title={item.salesPersonName}>{item.salesPersonName}</span>\n          </>\n        )}\n      </span>\n    );\n  };\n\n  // Custom function to compare objects based on id\n  function compareObjects(obj1, obj2) {\n    return obj1.id === obj2.id;\n  }\n\n  const selectAllIndirect = (isChecked) => {\n    if (isChecked) {\n      filteredIndirectData.forEach((item) => {\n        dispatch(updateSelectedSEProp({ item, isChecked }));\n      });\n      setallIndirectSelected(true);\n    } else {\n      filteredIndirectData.forEach((item) => {\n        dispatch(updateSelectedSEProp({ item, isChecked }));\n      });\n    }\n  };\n\n  const SelectAllCustomers = () => {\n    setselectedSE((prevState) => {\n      const empId = prevState.map((item) => item.id);\n      const newArray = indirectData.filter((item) => !empId.includes(item.id));\n      return [...prevState, ...newArray];\n    });\n  };\n\n  const getIndirectData = () => {\n    {\n      props.value == \"EngagementS\"\n        ? axios\n            .get(baseUrl + `/ProjectMS/Engagement/customerdata`)\n            .then((resp) => {\n              const data = resp.data;\n              setIndirectdata(data);\n            })\n            .catch((resp) => {\n              console.log(resp);\n            })\n        : axios\n            .get(\n              baseUrl +\n                `/SalesMS/MasterController/getInDirectSalesExecutiveTreeData?userId=512`\n            )\n            .then((resp) => {\n              const data = resp.data;\n              console.log(data);\n              data.push({\n                type: \"fte1\",\n                salesPersonName: \"Unassigned\",\n                id: 9999,\n                status: \"empActive\",\n              });\n              setIndirectdata(data);\n            })\n            .catch((resp) => {\n              console.log(resp);\n            });\n    }\n  };\n  const [s1, setS1] = useState([]);\n\n  const nonRepeatedData = s1.reduce((acc, obj) => {\n    const parsedChildren = JSON.parse(obj.props.children);\n    if (parsedChildren.key === \"directsalesEx\") {\n      // Remove any previous objects with the same key\n      acc = acc.filter((item) => {\n        const parsedItemChildren = JSON.parse(item.props.children);\n        return parsedItemChildren.key !== \"directsalesEx\";\n      });\n      acc.push(obj);\n    } else {\n      acc.push(obj);\n    }\n    return acc;\n  }, []);\n  console.log(accessData);\n  //--------------------------------useEffect------------------------------------------\n  useEffect(() => {\n    getvTeamData();\n  }, []);\n\n  useEffect(() => {\n    //When unselected, selectAll button should be unchecked\n    const reduxIndirectData = filteredIndirectData.filter((dataObj) =>\n      selectedSERedux.some((reduxObj) => dataObj.id == reduxObj.id)\n    );\n    if (\n      reduxIndirectData.length == filteredIndirectData.length &&\n      filteredIndirectData.length > 0\n    ) {\n      setallIndirectSelected(true);\n    } else {\n      setallIndirectSelected(false);\n    }\n  }, [selectedSERedux, filteredIndirectData]);\n\n  useEffect(() => {\n    getIndirectData();\n  }, []);\n\n  useEffect(() => {\n    const localSE =\n      localStorage.getItem(\"selectedSE\") === null\n        ? []\n        : JSON.parse(localStorage.getItem(\"selectedSE\"));\n    props.value == \"EngagementS\"\n      ? SelectAllCustomers()\n      : setselectedSE(localSE);\n    props.value == \"EngagementS\"\n      ? \"\"\n      : setisIndividual(\n          localStorage.getItem(\"isIndividual\") === \"true\" ? true : false\n        );\n  }, [indirectData]);\n\n  useEffect(() => {\n    const indirectDataCopy = [...indirectData];\n    if (!isShowInactiveChecked) {\n      var filteredIndirecData = indirectDataCopy.filter(\n        (item) => item.status != \"empInactive\"\n      );\n      if (search) {\n        filteredIndirecData = filteredIndirecData.filter((item) => {\n          return input == \"EngagementS\"\n            ? item.Name.toLowerCase().includes(search)\n            : item.salesPersonName.toLowerCase().includes(search);\n        });\n      }\n\n      setFilteredIndirectData(filteredIndirecData);\n      dispatch(hideIndirectInactive(isShowInactiveChecked));\n    } else {\n      if (search) {\n        var filteredIndirDataCopy = indirectDataCopy.filter((item) => {\n          return input == \"EngagementS\"\n            ? item.Name.toLowerCase().includes(search)\n            : item.salesPersonName.toLowerCase().includes(search);\n        });\n        setFilteredIndirectData(filteredIndirDataCopy);\n      } else setFilteredIndirectData(indirectDataCopy);\n    }\n  }, [isShowInactiveChecked, indirectData, search]);\n\n  return (\n    <div className=\"col-md-12\">\n      <div className=\"col-md-12\">\n        {/* <div className=\"col-md-3 nopadding\">\n                    <input type=\"text\" placeholder=\"type to Search\" onChange={(e) => setSearch(e.target.value.toLowerCase())} style={{ borderRadius: \"5px\" }}></input>\n                </div> */}\n        <div className=\"col-md-12 row\">\n          <div className=\"col-md-4 row\" style={{ marginLeft: \"6px\" }}>\n            <label\n              className=\"col-3\"\n              style={{ display: \"initial\" }}\n              htmlFor=\"engagementName\"\n            >\n              Search\n            </label>\n            <span className=\"col-1 \">:</span>\n            <div className=\"col-6\">\n              <input\n                type=\"text\"\n                placeholder=\"Type to Search\"\n                onChange={(e) => setSearch(e.target.value.toLowerCase())}\n              />\n            </div>\n          </div>\n\n          {props.value == \"EngagementS\" ? (\n            \"\"\n          ) : (\n            <>\n              {\" \"}\n              <div className=\"col-md-2\">\n                <input\n                  type=\"checkbox\"\n                  id=\"showInactive\"\n                  name=\"showInactive\"\n                  onChange={(event) => {\n                    setShowInactive((prevState) => {\n                      return !prevState;\n                    });\n                    dispatch(updateIsShowInactiveChecked());\n                  }}\n                  checked={isShowInactiveChecked}\n                ></input>\n                <label style={{ marginTop: \"-22px\", marginLeft: \"17%\" }}>\n                  Show Inactive\n                </label>\n              </div>\n              <div className=\"col-md-2\">\n                <input\n                  type=\"checkbox\"\n                  id=\"SelectIndividual\"\n                  name=\"SelectIndividual\"\n                  onChange={() => {\n                    setisIndividual((prevState) => !prevState);\n                    dispatch(updateIsIndivChecked());\n                    SetBulkIds(false);\n                  }}\n                  checked={isIndividualChecked}\n                ></input>\n                <label style={{ marginTop: \"-22px\", marginLeft: \"17%\" }}>\n                  Select Individual\n                </label>\n                &nbsp;\n              </div>\n              <div className=\"col-md-4 d-flex justify-content-end\">\n                <CButton\n                  onClick={() => {\n                    dispatch(undoSaveSelectSE(\"undo\"));\n                  }}\n                  style={{ marginRight: \"5px\", padding: \"5px\" }}\n                >\n                  <FaHistory /> Undo\n                </CButton>\n                <CButton\n                  onClick={() => {\n                    dispatch(undoSaveSelectSE(\"save\"));\n                    setVisible(false);\n                  }}\n                  style={{ padding: \"5px\" }}\n                >\n                  <FaSave /> Save\n                </CButton>\n              </div>\n            </>\n          )}\n        </div>\n      </div>\n      {/* <div className=\"col-md-12 clearfix\" style={{ height: '10px' }}></div> */}\n      <div className=\"col-md-4 form-check\" style={{ marginLeft: \"10px\" }}>\n        <input\n          type=\"checkbox\"\n          id=\"SelectedItems\"\n          name=\"SelectedItems\"\n          className=\"form-check-input\"\n          onChange={() => {\n            setselectedSE([]);\n            dispatch(emptySelectedSEProp());\n          }}\n          checked={selectedSERedux.length > 0}\n        ></input>\n        <label className=\"form-check-label\">\n          Selected items <span className=\"col-1 \">:</span>\n        </label>\n      </div>\n      <>\n        <SelectedItems\n          selectedSEDisp={selectedSEDisp}\n          s1={s1}\n          visible={visible}\n          selectedSE={selectedSE}\n          nonRepeatedData={nonRepeatedData}\n          propsValue={props.value}\n        />\n      </>\n      <div className=\"col-md-12 clearfixsss\" style={{ height: \"10px\" }}></div>\n\n      <div className=\"col-md-12 nopadding row\">\n        {props.value == \"EngagementS\" ? (\n          \"\"\n        ) : (\n          <>\n            {\" \"}\n            <div className=\"col-md-4 pr-0 pl-4 mt-0.5\">\n              <label>Direct Sales Executives</label>\n              <div\n                className=\"col-md-9 card customCard selectSeExpand mt-1 scroll-container directse\"\n                style={{ width: \"100%\" }}\n              >\n                <DirectSE\n                  onSelectSE={onSelectSE}\n                  setGrpId={setGrpId}\n                  dataAccess={dataAccess}\n                  accessData={accessData}\n                />\n              </div>\n            </div>\n          </>\n        )}\n\n        <div className=\"col-md-8 customCard\">\n          {accessData == 1000 || accessData == 500 ? (\n            <>\n              <div className=\"col-md-4 form-check\">\n                <input\n                  type=\"checkbox\"\n                  className=\"form-check-input\"\n                  onChange={(event) => selectAllIndirect(event.target.checked)}\n                  checked={allIndirectSelected}\n                  style={{ marginLeft: \"-22px\" }}\n                ></input>\n                <label className=\"form-check-label\">\n                  {props.value == \"EngagementS\"\n                    ? \"All Customers\"\n                    : \"Indirect Sales Executives\"}\n                  <span className=\"col-1 \">:</span>\n                </label>\n              </div>\n\n              <InDirectSE\n                data={filteredIndirectData}\n                input={input}\n                search={search}\n                propsValue={props.value}\n              />\n            </>\n          ) : (\n            \"\"\n          )}\n          {accessData == 1000 ? (\n            <div>\n              <div\n                className=\"selectSEformBtns mb-1 mt-3 \"\n                // style={{ pointerEvents: \"none\" }}\n              >\n                <label className=\"\">Virtual Teams</label>\n\n                {!addVirtualTeam && (\n                  <div\n                    onClick={() => setAddvirtualTeam(true)}\n                    className=\"button-pointer\"\n                    title=\"Add new team\"\n                  >\n                    <FaPlusCircle\n                      className=\"button-pointer\"\n                      title=\"Add new team\"\n                    />\n                  </div>\n                )}\n                {addVirtualTeam && (\n                  <>\n                    <span onClick={() => setAddvirtualTeam(false)}>\n                      <BiMinusCircle />\n                    </span>\n                    <input\n                      placeholder=\"Team Name\"\n                      name=\"teamName\"\n                      id=\"teamName\"\n                      onChange={(e) => {\n                        setVirtualTeamName(e.target.value);\n                      }}\n                    ></input>\n                    <button\n                      className=\"btn btn-primary btnSE\"\n                      type=\"button\"\n                      title=\"Add Team\"\n                      onClick={writeVirtualTeam}\n                    >\n                      <span>Add</span>\n                    </button>\n                  </>\n                )}\n\n                {/* Validation validation */}\n                {validationMessage ? (\n                  <div className=\"statusMsg error\">\n                    <span>\n                      <FaExclamationTriangle />\n                      {` ` + validationMessage}\n                    </span>\n                  </div>\n                ) : (\n                  \"\"\n                )}\n              </div>\n\n              <>\n                <div\n                  className=\"row\"\n                  style={{\n                    margin: \"0px\",\n                    border: \"1px solid rgb(204, 204, 204)\",\n                    borderRadius: \"3px\",\n                  }}\n                >\n                  <div className=\"scroll-container virtualteam\">\n                    <VirtualTeams\n                      employeeElement={employeeElement}\n                      writeVirtualTeam={writeVirtualTeam}\n                      setselectedSE={setselectedSE}\n                      showInactive={showInactive}\n                      search={search}\n                      vTeamData={vTeamData}\n                      setvTeamData={setvTeamData}\n                      getvTeamData={getvTeamData}\n                      propsValue={props.value}\n                      setValidationMessage={setValidationMessage}\n                    />\n                  </div>\n                </div>\n              </>\n            </div>\n          ) : (\n            \"\"\n          )}\n        </div>\n      </div>\n    </div>\n  );\n});\n\nexport default SelectSE;\n","import React, { useRef, useState } from \"react\";\nimport { Modal, Button } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { undoSaveSelectSE } from \"../../reducers/SelectedSEReducer\";\nimport SelectSE from \"./SelectSE\";\n\nexport default function SelectSEDialogBox({\n  value,\n  setVisible,\n  setGrpId,\n  dataAccess,\n  SetBulkIds,\n  visible,\n  pipelinePermission,\n  accessData,\n  selectedSE,\n  setselectedSE,\n  seOptions,\n  setSelectedItems,\n  selectedItems,\n  accessBased,\n}) {\n  const [showConfirmation, setShowConfirmation] = useState(false);\n  const dispatch = useDispatch();\n\n  const selectSERef = useRef(null);\n\n  const handleClose = () => {\n    if (selectedSERedux.length != selectedSELocal.length)\n      setShowConfirmation(true);\n    else setVisible(false);\n  };\n\n  const handleSaveChanges = () => {\n    dispatch(undoSaveSelectSE(\"save\"));\n    setShowConfirmation(false);\n    setVisible(false);\n  };\n\n  const handleCancel = () => {\n    // Close the confirmation dialog\n    setShowConfirmation(false);\n    setVisible(false);\n  };\n\n  const selectedSERedux = useSelector(\n    (state) => state.selectedSEState.selectedSEProp\n  );\n  const selectedSELocal =\n    localStorage.getItem(\"selectedSELocal\") === null\n      ? []\n      : JSON.parse(localStorage.getItem(\"selectedSELocal\"));\n\n  return (\n    <>\n      <Modal show={visible} onHide={handleClose} size=\"xl\" backdrop=\"static\">\n        <Modal.Header closeButton>\n          <Modal.Title>\n            {value === \"EngagementS\" ? \"Select Customers\" : \"Select Executives\"}\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <SelectSE\n            ref={selectSERef}\n            accessData={accessData}\n            value={value}\n            setGrpId={setGrpId}\n            selectedSE={selectedSE}\n            setselectedSE={setselectedSE}\n            dataAccess={dataAccess}\n            SetBulkIds={SetBulkIds}\n            seOptions={seOptions}\n            setSelectedItems={setSelectedItems}\n            pipelinePermission={pipelinePermission}\n            selectedItems={selectedItems}\n            accessBased={accessBased}\n            setVisible={setVisible}\n          />\n        </Modal.Body>\n      </Modal>\n\n      {/* Confirmation Dialog */}\n      <Modal show={showConfirmation} onHide={handleCancel} centered>\n        <Modal.Header closeButton>\n          <Modal.Title>Confirm Changes</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <p>Do you want to save your changes before closing?</p>\n        </Modal.Body>\n        <Modal.Footer className=\"d-flex justify-content-center\">\n          <Button variant=\"primary\" onClick={handleSaveChanges}>\n            Yes, Save\n          </Button>\n          <Button variant=\"secondary\" onClick={handleCancel}>\n            No, Cancel\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n}\n"],"names":["props","item","propsValue","isInSelected","icons","fte0","src","fte_inactive","alt","style","height","marginTop","title","fte1","fte_active","fte2","fte_notice","subk0","subk_inactive","subk1","subk_active","subk2","subk_notice","dispatch","useDispatch","selectedSERedux","useSelector","state","selectedSEState","selectedSEProp","isChecked","some","obj","id","find","hasOwnProperty","className","whiteSpace","overflow","textOverflow","width","salesPersonName","text","type","name","Name","checked","onChange","e","target","updateSelectedSEProp","onClick","event","document","getElementById","InDirectSE","params","data","input","search","useState","indirectseList","setindirectseList","useEffect","filter","toLowerCase","includes","map","margin","border","borderRadius","length","selectedSEDisp","s1","nonRepeatedData","filteredData","key","visible","isShowInactiveChecked","marginLeft","display","gridTemplateColumns","setselectedSE","employeeElement","getvTeamData","showInactive","newMemberDropdown","setValidationMessage","teamMemData","editTeamName","seteditTeamName","addTeamMembr","setaddTeamMembr","teamName","allTeamSelected","setallTeamSelected","virtualTeamValue","setVirtualTeamValue","newMemberSelected","setnewMemberSelected","open","setOpen","isValid","setIsValid","selectedRef","useRef","DeletePopup","size","backdrop","alignment","onClose","axios","baseUrl","then","resp","console","log","catch","deleteVirtualTeam","teamId","teamData","filteredTeamArray","dataObj","reduxObj","memId","environment","dataArray","emp","memName","status","obj2","forEach","prevState","empId","newArray","selectAllTeam","ref","backgroundColor","color","fontWeight","defaultValue","value","current","window","scrollTo","top","behavior","setTimeout","payload","err","editVirtualName","ReactSearchAutocomplete","items","placeholder","onSelect","resourcesId","showIcon","undefined","executiveId","createdDate","writeVirtualTeam","VirtualTeams","seOptions","vTeamData","setnewMemberDropdown","setTeamMemData","updatedTeamMemData","member","teamObj","resourceName","dropdownOptions","userId","array","MinusSquare","SvgIcon","fontSize","d","CloseSquare","PlusSquare","TransitionComponent","useSpring","from","opacity","transform","to","in","Collapse","DirectSE","onSelectSE","setGrpId","accessData","dataAccess","marginRight","hierarchy","setHierarchy","isIndividualChecked","setData","loggedUserId","localStorage","getItem","setFilteredData","salesSEData","setSalesSEData","localSEData","idsWithoutDirectSalesEx","idDirectSalesEx","filteredArray","idToFind","parentObjInHierarchy","setParentObjInHierarchy","updatedHierarchy","flatArray","options","parentId","children","dictionary","tree","node","nodeId","nodeParentId","push","Object","values","jsonToTree","parent","getData","CustomContent","React","classes","label","iconProp","icon","expansionIcon","displayIcon","useTreeItem","disabled","expanded","selected","focused","handleExpansion","handleSelection","preventSelection","handleSelectionClick","propData","split","clsx","root","onMouseDown","iconContainer","Typography","component","idsListToBeSent","result","findChildren","findChildrenAndDescendants","formattedIds","join","getidList","ids","val","subrows","x","updatedirectSETreeData","getElementsByClassName","StyledTreeItem","styled","TreeItem","ContentComponent","String","temp","Box","sx","alignItems","p","pr","variant","replaceAll","Array","isArray","renderTree","theme","treeItemClasses","paddingLeft","borderLeft","alpha","palette","primary","modifiedArray","liAttr","JSON","parse","li_attr","sestatus","stringify","error","TreeView","onNodeSelect","nodeIds","empObject","defaultParentIcon","defaultCollapseIcon","defaultExpandIcon","defaultEndIcon","minwidth","defaultExpanded","forwardRef","validationMessage","permissions","SetBulkIds","setVisible","setVisble","addVirtualTeam","setAddvirtualTeam","virtualTeamName","setVirtualTeamName","setShowInactive","selectedSE","allIndirectSelected","setallIndirectSelected","indirectData","setIndirectdata","isIndividual","setisIndividual","setSearch","filteredIndirectData","setFilteredIndirectData","setvTeamData","useImperativeHandle","setGlobalState","setItem","resetTOlocalState","localSE","isEmpPresent","findIndex","splice","reduce","acc","indirectDataCopy","filteredIndirDataCopy","filteredIndirecData","hideIndirectInactive","htmlFor","updateIsShowInactiveChecked","updateIsIndivChecked","undoSaveSelectSE","padding","emptySelectedSEProp","SelectSEDialogBox","pipelinePermission","setSelectedItems","selectedItems","accessBased","showConfirmation","setShowConfirmation","selectSERef","handleCancel","selectedSELocal","Modal","show","onHide","closeButton","centered","Button"],"sourceRoot":""}