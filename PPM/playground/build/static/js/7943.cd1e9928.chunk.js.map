{"version":3,"file":"static/js/7943.cd1e9928.chunk.js","mappings":"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","sources":["views/DeliveryComponent/EngagementOpen.js","views/DeliveryComponent/EngagementSearchTable.js","views/DeliveryComponent/EngagementSearch.js","views/DeliveryComponent/Delivery.js","views/ProjectComponent/RiskAutocomplete.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\n\n\n\nfunction EngagementOpen() {\n\n\n\n\n\n\n\n\n  return (\n    <div >\n\n\n      <div className=\"body body-bg col-xs-12 col-sm-12 col-md-12 col-lg-12 customCard \">\n        <div\n          className=\"col-md-12 p0\"\n          style={{\n            background: \"#f4f4f4\",\n            padding: \"0px\",\n          }}\n        >\n          <h6\n            style={{\n              color: \"#297AB0\",\n              fontSize: \"18px \",\n              paddingLeft: \"10px\",\n              textAlign: \"center\",\n              margin: \"3px\",\n            }}\n          >\n            Engagement Search History\n          </h6>\n        </div>\n        <div className=\"filtersContainer\">\n          <div className=\"form-group cvu\">\n            <div className=\"col-md-12 no-padding\">\n\n\n\n\n\n\n\n            </div>\n          </div>\n        </div>\n      </div>\n\n\n    </div>\n  )\n\n\n}\nexport default EngagementOpen;","import React, { useEffect, useRef, useState } from \"react\";\nimport { FilterMatchMode, FilterOperator } from \"primereact/api\";\nimport { DataTable } from \"primereact/datatable\";\nimport { Column } from \"primereact/column\";\nimport \"primeicons/primeicons.css\";\nimport \"primereact/resources/themes/lara-light-indigo/theme.css\";\nimport \"primereact/resources/primereact.css\";\nimport \"primeflex/primeflex.css\";\nimport { InputText } from \"primereact/inputtext\";\nimport \"../PrimeReactTableComponent/PrimeReactTable.scss\";\nimport { Link } from \"react-router-dom\";\nimport { Button } from \"primereact/button\";\nimport jsPDF from \"jspdf\";\nimport ExcelJS from \"exceljs\";\n\nrequire(\"jspdf-autotable\");\n\nfunction EngagementSearchTable(props) {\n  const {\n    data,\n    rows,\n    col,\n    headerdatagroup,\n    linkColumns,\n    linkColumnsRoutes,\n    dynamicColumns,\n    headerData,\n    setHeaderData,\n    exportData,\n    customFilters,\n    customFilterValue,\n    setCustomFilterValue,\n  } = props;\n  const [mainData, setMainData] = useState([]);\n  const [bodyData, setBodyData] = useState([]);\n  const [exportColumns, setExportColumns] = useState([]);\n  const dt = useRef(null);\n  useEffect(() => {\n    setMainData(JSON.parse(JSON.stringify(data)));\n  }, [data]);\n\n  useEffect(() => {\n    if (mainData.length > 0) {\n      setHeaderData(mainData[0]);\n      setBodyData(mainData.splice(1));\n\n      let dtt = [];\n      let headDt = mainData[0];\n\n      Object.keys(headDt).forEach((d) => {\n        d != \"StatusId\" &&\n          // ? dtt.push({ title: \"cus\", dataKey: d })\n          dtt.push({ title: headDt[d], dataKey: d });\n      });\n\n      setExportColumns(dtt);\n    }\n  }, [mainData]);\n\n  const filtersData = {\n    contains: { value: null, matchMode: FilterMatchMode.CONTAINS },\n  };\n\n  const [filters1, setFilters1] = useState({\n    global: filtersData[\"contains\"],\n  });\n\n  useEffect(() => {\n    setFilters1({\n      global: filtersData[\"contains\"],\n    });\n  }, [headerData]);\n  const [globalFilterValue1, setGlobalFilterValue1] = useState(\"\");\n\n  const clearFilter1 = () => {\n    initFilters1();\n  };\n\n  const initFilters1 = () => {\n    setGlobalFilterValue1(\"\");\n  };\n\n  const onGlobalFilterChange1 = (e) => {\n    const value = e.target.value;\n    let _filters1 = { ...filters1 };\n    _filters1[\"global\"].value = value;\n    setFilters1(_filters1);\n    setGlobalFilterValue1(value);\n  };\n\n  const RenderCustomFilters = () => {\n    let cstFtlrs = customFilters;\n\n    switch (cstFtlrs[\"type\"]) {\n      case \"select\":\n        return (\n          <select\n            id={cstFtlrs[\"id\"]}\n            onChange={(e) => {\n              setCustomFilterValue(e.target.value);\n            }}\n          >\n            {Object.keys(cstFtlrs[\"data\"]).map((d) => {\n              return (\n                <option\n                  selected={customFilterValue == d ? true : false}\n                  value={d}\n                >\n                  {cstFtlrs[\"data\"][d]}\n                </option>\n              );\n            })}\n          </select>\n        );\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const exportCSV = (selectionOnly) => {\n    dt.current.exportCSV({ selectionOnly });\n  };\n  const saveAsExcelFile = (buffer, fileName) => {\n    import(\"file-saver\").then((module) => {\n      if (module && module.default) {\n        let EXCEL_TYPE =\n          \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8\";\n        let EXCEL_EXTENSION = \".xlsx\";\n        const data1 = new Blob([buffer], { type: EXCEL_TYPE });\n\n        module.default.saveAs(data1, fileName + EXCEL_EXTENSION);\n      }\n    });\n  };\n  const exportExcel = () => {\n    import(\"xlsx\").then((xlsx) => {\n      let wantedCols = [\n        \"EngagementName\",\n        \"Business Unit\",\n        \"Customer\",\n        \"Cost Center\",\n        \"Manager\",\n        \"Sales Executive\",\n        \"Contract Terms\",\n        \"Start Date\",\n        \"End Date\",\n        \"Engagement Company\",\n        \"Status\",\n      ];\n\n      let sortedData = data.slice(1).sort((a, b) => {\n        let columnA = a[\"EngagementName\"];\n        let columnB = b[\"EngagementName\"];\n        if (columnA < columnB) return -1;\n        if (columnA > columnB) return 1;\n        return 0;\n      });\n\n      let wantedValues = [wantedCols]; // Add the header row\n\n      sortedData.forEach((row) => {\n        const rowData = wantedCols.map((col) => {\n          if (row.hasOwnProperty(col)) {\n            if (col === \"Status\") {\n              return row[col] ? \"Active\" : \"Inactive\";\n            }\n            return row[col];\n          }\n          return \"\";\n        });\n\n        wantedValues.push(rowData);\n      });\n\n      const workbook = new ExcelJS.Workbook();\n\n      const worksheet = workbook.addWorksheet(\"data\");\n\n      wantedValues.forEach((item) => {\n        const row = worksheet.addRow(Object.values(item));\n      });\n\n      const boldRow = [1];\n\n      boldRow.forEach((index) => {\n        const row = worksheet.getRow(index);\n\n        row.font = { bold: true };\n      });\n\n      workbook.xlsx.writeBuffer().then((buffer) => {\n        saveAs(new Blob([buffer]), \"Engagement Search.xlsx\");\n      });\n    });\n  };\n\n  const exportPdf = () => {\n    print();\n    // import(\"jspdf\").then((jsPDF) => {\n    //   import(\"jspdf-autotable\").then(() => {\n    //     const doc = new jsPDF.default(0, 0);\n    //     console.log(\"in line 187-------\");\n    //     console.log(data);\n    //     console.log(exportColumns);\n    //     doc.autoTable(exportColumns, data);\n    //     doc.save(\"Data.pdf\");\n    //   });\n    // });\n  };\n\n  const print = () => {\n    const pdf = new jsPDF(\"p\", \"pt\", \"a4\");\n    const columns = exportColumns.map((d) => d.title);\n    let rows = [];\n\n    for (let i = 1; i < data.length; i++) {\n      /*for (var key in json[i]) {\n        var temp = [key, json[i][key]];\n        rows.push(temp);\n      }*/\n      // let temp = [\n      //   json[i].id,\n      //   json[i].start.split(\"T\")[0],\n      //   json[i].duration,\n      //   json[i].name,\n      //   json[i].project,\n      //   json[i].task,\n      //   json[i].comment,\n      // ];\n\n      let temp = exportColumns.map((d) => data[i][d[\"dataKey\"]]);\n\n      rows.push(temp);\n    }\n\n    pdf.text(235, 40, \"Tabla de Prestamo\");\n    pdf.autoTable(columns, rows, {\n      startY: 65,\n      theme: \"grid\",\n      styles: {\n        font: \"times\",\n        halign: \"center\",\n        cellPadding: 3.5,\n        lineWidth: 0.5,\n        lineColor: [0, 0, 0],\n        textColor: [0, 0, 0],\n      },\n      headStyles: {\n        textColor: [0, 0, 0],\n        fontStyle: \"normal\",\n        lineWidth: 0.5,\n        lineColor: [0, 0, 0],\n        fillColor: [166, 204, 247],\n      },\n      alternateRowStyles: {\n        fillColor: [212, 212, 212],\n        textColor: [0, 0, 0],\n        lineWidth: 0.5,\n        lineColor: [0, 0, 0],\n      },\n      rowStyles: {\n        lineWidth: 0.5,\n        lineColor: [0, 0, 0],\n      },\n      tableLineColor: [0, 0, 0],\n    });\n    console.log(pdf.output(\"datauristring\"));\n    pdf.save(\"pdf\");\n  };\n\n  const renderHeader1 = () => {\n    return (\n      <div className=\"flex  flex-row-reverse\">\n        {customFilters != undefined && (\n          <span>\n            <RenderCustomFilters />\n          </span>\n        )}\n\n        <div className=\"exportBtn ml-3\">\n          {exportData?.includes(\"CSV\") && (\n            <span\n              className=\"pi pi-file csv\"\n              onClick={() => exportCSV(false)}\n              title=\"CSV\"\n            />\n          )}\n          {exportData?.includes(\"XLS\") && (\n            <span\n              className=\"pi pi-file-excel excel\"\n              onClick={exportExcel}\n              title=\"Export to Excel\"\n            />\n          )}\n          {exportData?.includes(\"PDF\") && (\n            <span\n              className=\"pi pi-file-pdf pdf\"\n              onClick={exportPdf}\n              title=\"PDF\"\n            />\n          )}\n        </div>\n        <span className=\"p-input-icon-left tableGsearch\">\n          <i className=\"pi pi-search\" />\n          <InputText\n            defaultValue={globalFilterValue1}\n            onChange={onGlobalFilterChange1}\n            placeholder=\"Keyword Search\"\n          />\n        </span>\n      </div>\n    );\n  };\n\n  const header1 = renderHeader1();\n\n  return (\n    <div className=\"darkHeader\">\n      {Object.keys(headerData).length > 0 && (\n        <DataTable\n          paginatorTemplate=\"RowsPerPageDropdown FirstPageLink PrevPageLink CurrentPageReport NextPageLink LastPageLink\"\n          currentPageReportTemplate=\"{first} to {last} of {totalRecords}\"\n          rowsPerPageOptions={[10, 25, 50]}\n          value={bodyData}\n          stripedRows\n          paginator\n          showGridlines\n          rows={rows}\n          dataKey=\"id\"\n          filters={filters1}\n          responsiveLayout=\"scroll\"\n          header={header1}\n          emptyMessage=\"No Records found.\"\n          ref={(el) => {\n            dt.current = el;\n          }}\n          className=\"primeReactDataTable\"\n        >\n          {/* <Column header={headerdatagroup} colSpan={col} /> */}\n\n          {dynamicColumns}\n        </DataTable>\n      )}\n    </div>\n  );\n}\n\nexport default EngagementSearchTable;\n","import React, { useLayoutEffect, useRef } from \"react\";\nimport {\n  FaChevronCircleDown,\n  FaChevronCircleUp,\n  FaSearch,\n  FaCaretDown,\n} from \"react-icons/fa\";\nimport { useState, createContext, useContext } from \"react\";\nimport { useEffect } from \"react\";\nimport \"./EngagementSearch.scss\";\nimport axios from \"axios\";\nimport { environment } from \"../../environments/environment\";\nimport { MultiSelect } from \"react-multi-select-component\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport moment from \"moment\";\nimport { CCollapse } from \"@coreui/react\";\nimport RiskAutoComplete from \"../ProjectComponent/RiskAutocomplete\";\nimport { AiFillWarning } from \"react-icons/ai\";\nimport { AiOutlineUserAdd } from \"react-icons/ai\";\nimport Loader from \"../Loader/Loader\";\nimport { Column } from \"primereact/column\";\nimport SelectCustDialogBox from \"../Customer/SelectCustDialogBox\";\nimport EngagementSearchTable from \"./EngagementSearchTable\";\nimport { Link } from \"react-router-dom\";\nimport { ReactSearchAutocomplete } from \"react-search-autocomplete\";\nimport GlobalHelp from \"../PrimeReactTableComponent/GlobalHelp\";\nimport ScreenBreadcrumbs from \"../Common/ScreenBreadcrumbs\";\n\nfunction EngagementSearch() {\n  const loggedUserId = localStorage.getItem(\"resId\");\n  const ValueContext = createContext(\"EngagementS\");\n  const value = useContext(ValueContext);\n  const [visible, setVisible] = useState(false);\n  const [cheveronIcon, setCheveronIcon] = useState(FaChevronCircleUp);\n  const [ContractTerms, setContractTerms] = useState([]);\n  const [CostCenter, setCostCenter] = useState([]);\n  const [EngCompany, setEngCompany] = useState([]);\n  const [selectedEngCompany, setSelectedEngCompany] = useState([]);\n  const [startDate, setStartDate] = useState();\n  const [endDate, setEndDate] = useState();\n  const [tabledata, SetTableData] = useState([]);\n  const baseUrl = environment.baseUrl;\n  const [item, setItem] = useState([]);\n  const [validationMessage, setValidationMessage] = useState(false);\n  const [searching, setSearching] = useState(false);\n  const [searchTableData, setSearchTableData] = useState([]);\n  const [riskDetails, setRiskDetails] = useState([]);\n  const [salesExecutive, setsalesExecutive] = useState();\n  const [linkColumns, setLinkColumns] = useState([]);\n  const [linkColumnsRoutes, setLinkColumnsRoutes] = useState([]);\n  const [headerData, setHeaderData] = useState([]);\n  const [exportData, setExportData] = useState([]);\n  const [custVisible, setCustVisible] = useState(false);\n  const [customerData, setCustomerData] = useState([]);\n  const [initialLength, setInitialLength] = useState(0);\n  console.log(initialLength, \"initialLength\");\n  const abortController = useRef(null);\n  const HelpPDFName = \"SearchEngagement.pdf\";\n  const Headername = \"Engagement Search Help\";\n  const ref = useRef([]);\n  const [dataAccess, setDataAccess] = useState([]);\n  const [data2, setData2] = useState([]);\n\n  let rows = 25;\n  const initialValue = {\n    engagementName: \"\",\n    engCompany: \"\",\n    costCenter: \"\",\n    customer: \"\",\n    salesExecutive: \"\",\n    contractTerms: \"\",\n    startDate: \"\",\n    endDate: \"\",\n  };\n  const [searchdata, setSearchdata] = useState(initialValue);\n  console.log(searchdata);\n  const [selectedItems, setSelectedItems] = useState([{}]);\n  const CustomerValue = selectedItems?.map((d) => d?.id).toString();\n  useEffect(() => {}, [item], [CustomerValue], [searchdata.customer]);\n  console.log(CustomerValue);\n  const handleInputchange = (event) => {\n    event.preventDefault;\n    const { id, value } = event.target;\n    setSearchdata((prevProps) => ({ ...prevProps, [id]: value }));\n  };\n\n  const handleAbort = () => {\n    abortController.current && abortController.current.abort();\n    setSearching(false);\n  };\n  const selectedEngCust = JSON?.parse(localStorage.getItem(\"selectedEngCust\"))\n    ?.map((d) => d.id)\n    ?.toString();\n  console.log(selectedEngCust);\n  // console.log(selectedEngCust);\n\n  const ArrowRenderer = ({ expanded }) => (\n    <>\n      {expanded ? (\n        <FaCaretDown className=\"chevronIcon\" />\n      ) : (\n        <FaCaretDown className=\"chevronIcon\" />\n      )}\n    </>\n  );\n\n  const [routes, setRoutes] = useState([]);\n  let textContent = \"Delivery\";\n  let currentScreenName = [\"Engagement Search\"];\n\n  useEffect(() => {\n    getMenus();\n  }, []);\n\n  const getMenus = () => {\n    // setMenusData\n\n    axios\n      .get(baseUrl + `/CommonMS/master/getMenus?loggedUserId=${loggedUserId}`)\n      .then((resp) => {\n        const getData = resp.data;\n        setData2(getData);\n\n        getData.forEach((item) => {\n          if (item.display_name === textContent) {\n            setRoutes([item]);\n          }\n        });\n\n        const engagementSearchSubMenu = getData\n          .find((item) => item.display_name === \"Delivery\")\n          .subMenus.find(\n            (subMenu) => subMenu.display_name === \"Engagement Search\"\n          );\n\n        // Extract the access_level value\n        const accessLevel = engagementSearchSubMenu\n          ? engagementSearchSubMenu.access_level\n          : null;\n\n        setDataAccess(accessLevel);\n      });\n  };\n  const handleSearch = async () => {\n    SetTableData([]);\n    console.log(initialLength);\n    console.log(selectedEngCust);\n    console.log(selectedEngCust?.length);\n    if (selectedEngCust?.length == 0 || selectedEngCust == undefined) {\n      console.log(\"<<<<<<<<<<<<<<<first>>>>>>>>>>>>>>>\");\n      let ele = document.getElementsByClassName(\"error\");\n      for (let index = 0; index < ele.length; index++) {\n        ele[index].classList.add(\"error-text\");\n      }\n      setValidationMessage(true);\n      setTimeout(() => {\n        setValidationMessage(false);\n      }, 3000);\n      return;\n    } else {\n      console.log(\"<<<<<<<<<<<<<<<second>>>>>>>>>>>>>>>\");\n      let ele = document.getElementsByClassName(\"error\");\n      for (let index = 0; index < ele.length; index++) {\n        ele[index].classList.remove(\"error-text\");\n      }\n      setValidationMessage(false);\n    }\n    const loaderTime = setTimeout(() => {\n      setSearching(true);\n    }, 2000);\n\n    abortController.current = new AbortController();\n\n    await axios({\n      method: \"post\",\n      url: baseUrl + `/ProjectMS/Engagement/tabledata`,\n      signal: abortController.current.signal,\n      data: {\n        engagementName: searchdata.engagementName,\n        engagementId: \"\",\n        customer: selectedEngCust,\n        salesExecutive: searchdata.salesExecutive,\n        contractTerms: searchdata.contractTerms,\n        costCenter: searchdata.costCenter,\n        startDate: searchdata.startDate,\n        endDate: searchdata.endDate,\n        engCompany: searchdata.engCompany,\n      },\n      headers: { \"Content-Type\": \"application/json\" },\n    }).then((resp) => {\n      let tabledata = resp.data;\n\n      let header = [\n        {\n          EngagementName: \"Engagement Name\",\n          \"Business Unit\": \"Business Unit\",\n          Customer: \"Customer\",\n          \"Cost Center\": \"Cost Center\",\n          Manager: \"Manager\",\n          \"Sales Executive\": \"Sales Executive\",\n          \"Contract Terms\": \"Contract Terms\",\n          \"Start Date\": \"Start Date\",\n          \"End Date\": \"End Date\",\n          \"Engagement Company\": \"Engagement Company\",\n          Status: \"Status\",\n        },\n      ];\n\n      let data = [\"EngagementName\"];\n\n      let linkRoutes = [\"/engagement/Dashboard/:id\"];\n      setLinkColumns(data);\n      setLinkColumnsRoutes(linkRoutes);\n\n      const tableData = tabledata.sort((a, b) =>\n        a.EngagementName.localeCompare(b.EngagementName)\n      );\n      SetTableData(header.concat(tableData));\n      clearTimeout(loaderTime);\n      setSearching(false);\n      setVisible(!visible);\n      visible\n        ? setCheveronIcon(FaChevronCircleUp)\n        : setCheveronIcon(FaChevronCircleDown);\n      setSearchTableData(resp.data);\n    });\n  };\n\n  useEffect(() => {}, [tabledata]);\n\n  const getData = () => {\n    axios({\n      method: \"get\",\n      url: baseUrl + `/ProjectMS/risks/getAssignedData`,\n    }).then(function (response) {\n      var res = response.data;\n      setRiskDetails(res);\n    });\n  };\n  useEffect(() => {\n    getData();\n  }, []);\n\n  const getContractTerms = () => {\n    axios({\n      method: \"get\",\n      url: baseUrl + `/ProjectMS/Engagement/ContractTerms`,\n    })\n      .then(function (response) {\n        var resp = response.data;\n        setContractTerms(resp);\n      })\n      .catch(function (response) {});\n  };\n\n  const getCostCenter = () => {\n    axios({\n      method: \"get\",\n      url: baseUrl + `/ProjectMS/Engagement/CostCenter`,\n    })\n      .then(function (response) {\n        var resp = response.data;\n        const filteredData = resp.filter(\n          (d) =>\n            !(\n              d.name === \"00X: Delivery\" ||\n              d.name === \"000: Delivery\" ||\n              d.name === \"Entire Organization\"\n            )\n        );\n        filteredData.push({ id: -1, name: \"<<ALL>>\" });\n        setCostCenter(filteredData);\n      })\n      .catch(function (response) {});\n  };\n  const getEngCompany = () => {\n    axios({\n      url: baseUrl + `/ProjectMS/Engagement/EngCompany`,\n    }).then((resp) => {\n      setEngCompany(resp.data);\n      setSelectedEngCompany(resp.data);\n    });\n  };\n  const getCustomers = () => {\n    axios\n      .get(\n        dataAccess === 100\n          ? baseUrl +\n              `/CommonMS/master/getCustomersList?loggedUserId=${loggedUserId}`\n          : baseUrl + `/ProjectMS/Engagement/customerdata`\n      )\n\n      .then((resp) => {\n        const data = resp.data;\n        localStorage.setItem(\"selectedEngCust\", JSON.stringify(data));\n        setInitialLength(\n          JSON.parse(localStorage.getItem(\"selectedEngCust\"))?.length\n        );\n      })\n      .catch((resp) => {});\n  };\n\n  useEffect(() => {\n    if (dataAccess === 100) {\n      getCustomers();\n    }\n  }, [dataAccess]);\n\n  useEffect(() => {}, [\n    ContractTerms,\n    EngCompany,\n    CostCenter,\n    selectedEngCompany,\n    tabledata,\n  ]);\n\n  useEffect(() => {\n    setInitialLength(\n      JSON.parse(localStorage.getItem(\"selectedEngCust\"))?.length\n    );\n  }, [custVisible]);\n\n  useEffect(() => {\n    getContractTerms(), getCostCenter(), getEngCompany();\n  }, []);\n\n  const LinkTemplate = (data) => {\n    return (\n      <>\n        <Link\n          to={`/engagement/Dashboard/:${data.id}`}\n          style={{ textDecoration: \"underline\", color: \"accent\" }}\n          target=\"_blank\"\n          data-toggle=\"tooltip\"\n          title={data.EngagementName}\n        >\n          {data.EngagementName}\n        </Link>\n      </>\n    );\n  };\n\n  const BusinessUnit = (data) => {\n    return (\n      <div\n        className=\"ellipsis\"\n        data-toggle=\"tooltip\"\n        title={data[\"Business Unit\"]}\n      >\n        {data[\"Business Unit\"]}\n      </div>\n    );\n  };\n  const Customer = (data) => {\n    return (\n      <div className=\"ellipsis\" data-toggle=\"tooltip\" title={data.Customer}>\n        {data.Customer}\n      </div>\n    );\n  };\n  const Cost_Center = (data) => {\n    return (\n      <div\n        className=\"ellipsis\"\n        data-toggle=\"tooltip\"\n        title={data[\"Cost Center\"]}\n      >\n        {data[\"Cost Center\"]}\n      </div>\n    );\n  };\n  const Manager = (data) => {\n    return (\n      <div className=\"ellipsis\" data-toggle=\"tooltip\" title={data.Manager}>\n        {data.Manager}\n      </div>\n    );\n  };\n  const SalesExecutive = (data) => {\n    return (\n      <div\n        className=\"ellipsis\"\n        data-toggle=\"tooltip\"\n        title={data[\"Sales Executive\"]}\n      >\n        {data[\"Sales Executive\"]}\n      </div>\n    );\n  };\n  const Contract_Terms = (data) => {\n    return (\n      <div\n        className=\"ellipsis\"\n        data-toggle=\"tooltip\"\n        title={data[\"Contract Terms\"]}\n      >\n        {data[\"Contract Terms\"]}\n      </div>\n    );\n  };\n  const StartDate = (data) => {\n    return (\n      <div\n        className=\"ellipsis\"\n        data-toggle=\"tooltip\"\n        title={data[\"Start Date\"]}\n      >\n        {data[\"Start Date\"]}\n      </div>\n    );\n  };\n  const EndDate = (data) => {\n    return (\n      <div className=\"ellipsis\" data-toggle=\"tooltip\" title={data[\"End Date\"]}>\n        {data[\"End Date\"]}\n      </div>\n    );\n  };\n  const EngagementCompany = (data) => {\n    return (\n      <div\n        className=\"ellipsis\"\n        data-toggle=\"tooltip\"\n        title={data[\"Engagement Company\"]}\n      >\n        {data[\"Engagement Company\"]}\n      </div>\n    );\n  };\n  const Status = (data) => {\n    return (\n      <div className=\"ellipsis\" data-toggle=\"tooltip\" title={data.Status}>\n        {data.Status == true ? \"Active\" : \"InActive\"}\n      </div>\n    );\n  };\n  const dynamicColumns = Object.keys(headerData)?.map((col, i) => {\n    return (\n      <Column\n        sortable\n        key={col}\n        body={\n          (col == \"EngagementName\" && LinkTemplate) ||\n          (col == \"Business Unit\" && BusinessUnit) ||\n          (col == \"Customer\" && Customer) ||\n          (col == \"Cost Center\" && Cost_Center) ||\n          (col == \"Manager\" && Manager) ||\n          (col == \"Sales Executive\" && SalesExecutive) ||\n          (col == \"Contract Terms\" && Contract_Terms) ||\n          (col == \"Start Date\" && StartDate) ||\n          (col == \"End Date\" && EndDate) ||\n          (col == \"Engagement Company\" && EngagementCompany) ||\n          (col == \"Status\" && Status)\n        }\n        field={col}\n        header={headerData[col]}\n      />\n    );\n  });\n  useEffect(() => {\n    let imp = [\"XLS\"];\n    setExportData(imp);\n  }, []);\n\n  let CustomerLength = JSON.parse(\n    localStorage.getItem(\"selectedEngCust\")\n  )?.length;\n\n  const generateDropdownLabel = (selectedOptions, allOptions) => {\n    const selectedValues = selectedOptions.map((option) => option.value);\n    const allValues = allOptions.map((item) => item.value);\n\n    if (selectedValues.length === allValues.length) {\n      return \"<< ALL >>\";\n    } else {\n      return selectedOptions.map((option) => option.label).join(\", \");\n    }\n  };\n  return (\n    <div>\n      <div className=\"col-md-12\">\n        {validationMessage ? (\n          <div className=\"statusMsg error\">\n            <AiFillWarning />{\" \"}\n            {\"Please select the valid values for highlighted fields\"}\n          </div>\n        ) : (\n          \"\"\n        )}\n        <div className=\"pageTitle\">\n          <div className=\"childOne\"></div>\n          <div className=\"childTwo\">\n            <h2>Engagement Search</h2>\n          </div>\n          <div className=\"childThree\"></div>\n        </div>\n      </div>\n      <ScreenBreadcrumbs\n        routes={routes}\n        currentScreenName={currentScreenName}\n      />\n      <div className=\"group mb-3 customCard\">\n        <div className=\"col-md-12 collapseHeader\">\n          <h2>Search Filters</h2>\n          <div className=\"helpBtn\">\n            <GlobalHelp pdfname={HelpPDFName} name={Headername} />\n          </div>\n          <div\n            onClick={() => {\n              setVisible(!visible);\n              visible\n                ? setCheveronIcon(FaChevronCircleUp)\n                : setCheveronIcon(FaChevronCircleDown);\n            }}\n          >\n            <span>{cheveronIcon}</span>\n          </div>\n        </div>\n        <CCollapse visible={!visible}>\n          <div className=\"group-content row \">\n            <div className=\"col-md-3 mb-2\">\n              <div className=\"form-group row\">\n                <label className=\"col-5\" htmlFor=\"engagementName\">\n                  Engagement Name\n                </label>\n                <span className=\"col-1 \">:</span>\n                <div className=\"col-6\">\n                  <input\n                    type=\"text\"\n                    id=\"engagementName\"\n                    placeholder=\"\"\n                    onChange={handleInputchange}\n                  />\n                </div>\n              </div>\n            </div>\n            <div className=\"col-md-3 mb-2\">\n              <div className=\"form-group row\">\n                <label className=\"col-5 \" htmlFor=\"customer\">\n                  Customer <span className=\"error-text ml-1\">*</span>\n                </label>\n                <span className=\"col-1 \">:</span>\n                <div\n                  className=\"col-6 textfield\"\n                  ref={(ele) => {\n                    ref.current[0] = ele;\n                  }}\n                  onChange={handleInputchange}\n                  onClick={() => setCustVisible(true)}\n                  style={{\n                    cursor: \"pointer\",\n                  }}\n                >\n                  <div className=\"poBtn textfield \">\n                    <AiOutlineUserAdd className=\"error\" />\n                    <span\n                      type=\"text\"\n                      name=\"customer\"\n                      id=\"customer\"\n                      className=\"error\"\n                    >\n                      {/* {initialLength + \" selected\"} */}\n                      {initialLength == undefined\n                        ? \"Select Customers\"\n                        : initialLength + \" selected\"}\n                    </span>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            <div className=\"col-md-3 mb-2\">\n              <div className=\"form-group row\">\n                <label className=\"col-5 \" htmlFor=\"salesExecutive\">\n                  Sales Executive\n                </label>\n                <span className=\"col-1 \">:</span>\n                <div className=\"col-6 \">\n                  <div className=\"autoComplete-container\">\n                    <ReactSearchAutocomplete\n                      items={riskDetails}\n                      type=\"Text\"\n                      name=\"salesExecutive\"\n                      id=\"salesExecutive\"\n                      riskDetails={riskDetails}\n                      getData={getData}\n                      onClear={(e) => {\n                        setSearchdata((prevProps) => ({\n                          ...prevProps,\n                          [\"salesExecutive\"]: \"\",\n                        }));\n                      }}\n                      placeholder=\"Type minimum 3 characters\"\n                      onSelect={(e) => {\n                        setSearchdata((prevProps) => ({\n                          ...prevProps,\n                          [\"salesExecutive\"]: e.id,\n                        }));\n                      }}\n                      showIcon={false}\n                    />\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className=\"col-md-3 mb-2\">\n              <div className=\"form-group row\">\n                <label className=\"col-5\" htmlFor=\"costCenter\">\n                  Cost Center\n                </label>\n                <span className=\"col-1 \">:</span>\n                <div className=\"col-6\">\n                  <div autoComplete-container reactautocomplete>\n                    <RiskAutoComplete\n                      value={value}\n                      name=\"costCenter\"\n                      id=\"costCenter\"\n                      riskDetails={CostCenter}\n                      setFormData={setSearchdata}\n                      onChange={handleInputchange}\n                    />\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className=\"col-md-3 mb-2\">\n              <div className=\"form-group row\">\n                <label className=\"col-5\" htmlFor=\"contractTerms\">\n                  Contract Terms\n                </label>\n                <span className=\"col-1 \">:</span>\n                <div className=\"col-6\">\n                  <select\n                    id=\"contractTerms\"\n                    name=\"contractTerms \"\n                    onChange={handleInputchange}\n                  >\n                    <option value=\"\"> &lt;&lt;ALL&gt;&gt;</option>\n                    {ContractTerms.map((item, index) => (\n                      <option key={index} value={item.id}>\n                        {item.lkup_name}\n                      </option>\n                    ))}\n                  </select>\n                </div>\n              </div>\n            </div>\n            <div className=\"col-md-3 mb-2\">\n              <div className=\"form-group row\">\n                <label className=\"col-5\" htmlFor=\"startDate\">\n                  Start Date\n                </label>\n                <span className=\"col-1 \">:</span>\n                <div className=\"col-6\">\n                  <DatePicker\n                    name=\"startDate\"\n                    id=\"startDate\"\n                    showMonthDropdown\n                    showYearDropdown\n                    dropdownMode=\"select\"\n                    selected={startDate}\n                    dateFormat=\"dd-MMM-yyyy\"\n                    maxDate={endDate}\n                    onChange={(e) => {\n                      setSearchdata((prev) => ({\n                        ...prev,\n                        [\"startDate\"]: moment(e).format(\"yyyy-MM-DD\"),\n                      }));\n                      setStartDate(e);\n                    }}\n                    onKeyDown={(e) => {\n                      if (e.keyCode === 8 || e.keyCode === 46) {\n                        setSearchdata((prev) => ({\n                          ...prev,\n                          [\"startDate\"]: null,\n                        }));\n                        setStartDate(null);\n                      } else {\n                        e.preventDefault();\n                      }\n                    }}\n                  />\n                </div>\n              </div>\n            </div>\n            <div className=\"col-md-3 mb-2\">\n              <div className=\"form-group row\">\n                <label className=\"col-5\" htmlFor=\"endDate\">\n                  End Date\n                </label>\n                <span className=\"col-1 \">:</span>\n                <div className=\"col-6\">\n                  <DatePicker\n                    name=\"endDate\"\n                    id=\"endDate\"\n                    showMonthDropdown\n                    showYearDropdown\n                    dropdownMode=\"select\"\n                    selected={endDate}\n                    dateFormat=\"dd-MMM-yyyy\"\n                    minDate={startDate}\n                    onChange={(e) => {\n                      setSearchdata((prev) => ({\n                        ...prev,\n                        [\"endDate\"]: moment(e).format(\"yyyy-MM-DD\"),\n                      }));\n                      setEndDate(e);\n                    }}\n                    onKeyDown={(e) => {\n                      if (e.keyCode === 8 || e.keyCode === 46) {\n                        setSearchdata((prev) => ({\n                          ...prev,\n                          [\"endDate\"]: null,\n                        }));\n                        setEndDate(null);\n                      } else {\n                        e.preventDefault();\n                      }\n                    }}\n                  />\n                </div>\n              </div>\n            </div>\n            <div className=\"col-md-3 mb-2\">\n              <div className=\"form-group row\">\n                <label className=\"col-5\" htmlFor=\"engCompany\">\n                  Eng.Company:\n                </label>\n                <span className=\"col-1 \">:</span>\n                <div className=\"col-6\">\n                  <MultiSelect\n                    ArrowRenderer={ArrowRenderer}\n                    id=\"engCompany\"\n                    options={EngCompany}\n                    hasSelectAll={true}\n                    isLoading={false}\n                    shouldToggleOnHover={false}\n                    disableSearch={false}\n                    value={selectedEngCompany}\n                    selected={selectedEngCompany}\n                    valueRenderer={generateDropdownLabel}\n                    disabled={false}\n                    onChange={(e) => {\n                      setSelectedEngCompany(e);\n                      let filteredEngCompany = [];\n                      e.forEach((d) => {\n                        filteredEngCompany.push(d.value);\n                      });\n                      setSearchdata((prevVal) => ({\n                        ...prevVal,\n                        [\"engCompany\"]: filteredEngCompany.toString(),\n                      }));\n                    }}\n                  />\n                </div>\n              </div>\n            </div>\n            <div className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12 btn-container center my-3\">\n              <button\n                type=\"button\"\n                className=\"btn btn-primary\"\n                onClick={handleSearch}\n              >\n                <FaSearch /> Search\n              </button>\n            </div>\n          </div>\n        </CCollapse>\n      </div>\n      {searching ? <Loader handleAbort={handleAbort} /> : \"\"}\n      {validationMessage == true ? (\n        \"\"\n      ) : (\n        <EngagementSearchTable\n          data={tabledata}\n          rows={rows}\n          linkColumns={linkColumns}\n          linkColumnsRoutes={linkColumnsRoutes}\n          dynamicColumns={dynamicColumns}\n          headerData={headerData}\n          setHeaderData={setHeaderData}\n          exportData={exportData}\n        />\n      )}\n      <SelectCustDialogBox\n        visible={custVisible}\n        setVisible={setCustVisible}\n        value={value}\n        setInitialLength={setInitialLength}\n      />\n    </div>\n  );\n}\nexport default EngagementSearch;\n","import React from \"react\";\nimport EngagementOpen from \"./EngagementOpen\";\nimport DeliveryCreate from \"./DeliveryCreate\";\nimport VendorOpen from \"../VendorComponent/VendorOpen\";\nimport { useState } from \"react\";\nimport axios from \"axios\";\nimport { environment } from \"../../environments/environment\";\nimport EngagementSearch from \"./EngagementSearch\";\nimport DeliveryDashboard from \"./DeliveryDashboard\";\nimport EnguagementsProjects from \"./EnagementsProjects\";\nimport { useEffect } from \"react\";\n\nfunction Delivery() {\n  const [btnState, setbtnState] = useState(\"Open\")\n  // const [btnState, setbtnState] = useState(() => {\n  //   // Retrieve the last selected tab from localStorage on component mount\n  //   return localStorage.getItem(\"selectedDeviveryTab\") || \"Open\";\n  // });\n  // const [btnState, setbtnState] = useState(\"risks\")\n  // const [btnState, setbtnState] = useState(\"Issues\")\n  const [buttonValue, setButtonValue] = useState(\"Engagement\");\n  const baseUrl = environment.baseUrl;\n  const loggedUserId = localStorage.getItem(\"resId\");\n  const [permission, setPermission] = useState([]);\n  // useEffect(() => {\n  //   // Save the selected tab to localStorage whenever it changes\n  //   localStorage.setItem(\"selectedDeviveryTab\", btnState);\n  // }, [btnState]);\n  const menus = () => {\n    axios({\n      method: \"GET\",\n      url:\n        baseUrl +\n        `/CommonMS/master/getBenchMtericsMenus?loggedUserId=${loggedUserId}&Cont=engagement`,\n    }).then((res) => {\n      // const data = res.data;\n      const data = res.data;\n\n      console.log(data);\n      setPermission(data);\n      console.log(data);\n    });\n  };\n\n  useEffect(() => {\n    menus();\n  }, []);\n  // /CommonMS/master/getBenchMtericsMenus?loggedUserId=85338843&Cont=engagement\n  return (\n    <div>\n      {/* <div className=\"tabs\">\n        <button\n          className={\n            btnState === \"Create\" ? \"buttonDisplayClick\" : \"buttonDisplay\"\n          }\n          onClick={() => {\n            setbtnState(\"Create\");\n          }}\n        >\n          Creates\n        </button>\n        <button\n          className={\n            btnState === \"Open\" ? \"buttonDisplayClick\" : \"buttonDisplay\"\n          }\n          onClick={() => {\n            setbtnState(\"Open\");\n          }}\n        >\n          Open\n        </button>\n        <button\n          className={\n            btnState === \"Search\" ? \"buttonDisplayClick\" : \"buttonDisplay\"\n          }\n          onClick={() => {\n            setbtnState(\"Search\");\n          }}\n        >\n          Search\n        </button>\n      </div> */}\n      <div className=\"tabs\" style={{ margin: \"3px\" }}>\n        {permission.map((button) => (\n          <button\n            key={button.id}\n            className={\n              btnState === button.display_name.toString()\n                ? \"buttonDisplayClick\"\n                : \"buttonDisplay\"\n            }\n            onClick={() => {\n              setbtnState(button.display_name);\n\n              console.log(button.display_name);\n            }}\n\n            // console.log(first)\n          >\n            {/* clg */}\n\n            {button.display_name}\n          </button>\n        ))}\n      </div>\n      {/* {btnState === \"open\" ? <EngagementOpen /> : \"\"} */}\n      {btnState === \"Create\" ? <DeliveryCreate /> : \"\"}\n      {btnState === \"Open\" ? <VendorOpen buttonValue={buttonValue} /> : \"\"}\n      {btnState === \"Search\" ? <EngagementSearch /> : \"\"}\n    </div>\n  );\n}\nexport default Delivery;\n","import React from \"react\";\nimport { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport { ReactSearchAutocomplete } from \"react-search-autocomplete\";\n\nfunction RiskAutoComplete(props) {\n  const {\n    riskDetails,\n    getData,\n    setFormData,\n    editedData,\n    formEditData,\n    onChangeHandler,\n    refArr,\n    setUsername,\n    name,\n    id,\n    value,\n    onClear,\n    inputSearchString,\n  } = props;\n  const [item, setItem] = useState([]);\n\n  // console.log(\"in line 10\");\n  // console.log(props);\n  // console.log(refArr);\n\n  useEffect(() => {\n    // console.log(item);\n  }, [item]);\n\n  const handleClear = (edit) => {\n    setFormData((prevProps) => ({ ...prevProps, [name]: \"\" }));\n    console.log(name);\n  };\n  useEffect(() => {}, [riskDetails]);\n  // console.log(value);\n  {\n    return (\n      <>\n        <div className=\"autoComplete-container\">\n          {value == \"UpdateBillingRate\" ? (\n            <ReactSearchAutocomplete\n              items={riskDetails}\n              type=\"Text\"\n              name={name}\n              inputSearchString={formEditData?.assigned_to}\n              id={id}\n              className=\"err\"\n              riskDetails={riskDetails}\n              getData={getData}\n              onClear={onClear}\n              placeholder=\"Type minimum 3 characters\"\n              onChange={(e) => {\n                onChangeHandler(e);\n                console.log(\"789------------------------\");\n              }}\n              // setSelectEmployee={setSelectEmployee}\n              onSelect={(e) => {\n                setFormData((prevProps) => ({ ...prevProps, [name]: e.id }));\n\n                setFormData((prevProps) => ({\n                  ...prevProps,\n                  [\"Resname\"]: e.name,\n                }));\n              }}\n              showIcon={false}\n            />\n          ) : value == \"EngagementS\" ? (\n            <ReactSearchAutocomplete\n              items={riskDetails}\n              type=\"Text\"\n              name={name}\n              inputSearchString={formEditData?.assigned_to}\n              id={id}\n              className=\"err\"\n              riskDetails={riskDetails}\n              getData={getData}\n              onClear={handleClear}\n              placeholder=\"Type minimum 3 characters\"\n              onChange={(e) => {\n                onChangeHandler(e);\n              }}\n              // setSelectEmployee={setSelectEmployee}\n              onSelect={(e) => {\n                setFormData((prevProps) => ({ ...prevProps, [name]: e.id }));\n                // console.log(e.id);\n              }}\n              showIcon={false}\n              showNoResults={true}\n              showNoResultsText=\"<<ALL>>\"\n            />\n          ) : (\n            <div\n              className=\"auto autocomplete\"\n              id=\"auto\"\n              ref={(ele) => {\n                if (refArr != undefined) {\n                  refArr.current[0] = ele;\n                }\n              }}\n            >\n              <ReactSearchAutocomplete\n                items={riskDetails}\n                type=\"Text\"\n                name={name}\n                placeholder=\"Type minimum 3 characters\"\n                inputSearchString={inputSearchString}\n                id={id}\n                className=\"err\"\n                onClear={onClear}\n                riskDetails={riskDetails}\n                getData={getData}\n                onChange={(e) => {\n                  onChangeHandler(e);\n                  console.log(\"123---------------\");\n                }}\n                // setSelectEmployee={setSelectEmployee}\n                onSelect={(e) => {\n                  setFormData((prevProps) => ({ ...prevProps, [name]: e.id }));\n                }}\n                showIcon={false}\n              />\n            </div>\n          )}\n        </div>\n        <span>{item.name}</span>\n      </>\n    );\n  }\n}\nexport default RiskAutoComplete;\n"],"names":["require","props","data","rows","dynamicColumns","col","headerdatagroup","linkColumns","linkColumnsRoutes","headerData","setHeaderData","exportData","customFilters","customFilterValue","setCustomFilterValue","useState","mainData","setMainData","bodyData","setBodyData","exportColumns","setExportColumns","dt","useRef","useEffect","JSON","parse","stringify","length","splice","dtt","headDt","Object","keys","forEach","d","push","title","dataKey","filtersData","contains","value","matchMode","FilterMatchMode","global","filters1","setFilters1","globalFilterValue1","setGlobalFilterValue1","onGlobalFilterChange1","e","target","_filters1","RenderCustomFilters","cstFtlrs","id","onChange","map","selected","exportExcel","then","xlsx","wantedCols","sortedData","slice","sort","a","b","columnA","columnB","wantedValues","row","rowData","hasOwnProperty","workbook","ExcelJS","worksheet","addWorksheet","item","addRow","values","index","getRow","font","bold","writeBuffer","buffer","saveAs","Blob","exportPdf","print","pdf","jsPDF","columns","temp","i","text","autoTable","startY","theme","styles","halign","cellPadding","lineWidth","lineColor","textColor","headStyles","fontStyle","fillColor","alternateRowStyles","rowStyles","tableLineColor","console","log","output","save","header1","className","undefined","includes","onClick","selectionOnly","current","exportCSV","defaultValue","placeholder","paginatorTemplate","currentPageReportTemplate","rowsPerPageOptions","stripedRows","paginator","showGridlines","filters","responsiveLayout","header","emptyMessage","ref","el","loggedUserId","localStorage","getItem","ValueContext","createContext","useContext","visible","setVisible","FaChevronCircleUp","cheveronIcon","setCheveronIcon","ContractTerms","setContractTerms","CostCenter","setCostCenter","EngCompany","setEngCompany","selectedEngCompany","setSelectedEngCompany","startDate","setStartDate","endDate","setEndDate","tabledata","SetTableData","baseUrl","environment","validationMessage","setValidationMessage","searching","setSearching","setSearchTableData","riskDetails","setRiskDetails","setLinkColumns","setLinkColumnsRoutes","setExportData","custVisible","setCustVisible","initialLength","setInitialLength","abortController","dataAccess","setDataAccess","setData2","engagementName","engCompany","costCenter","customer","salesExecutive","contractTerms","searchdata","setSearchdata","selectedItems","CustomerValue","toString","handleInputchange","event","preventDefault","prevProps","selectedEngCust","routes","setRoutes","getMenus","axios","resp","getData","display_name","engagementSearchSubMenu","find","subMenus","subMenu","accessLevel","access_level","handleSearch","ele","document","getElementsByClassName","classList","add","setTimeout","remove","loaderTime","AbortController","method","url","signal","engagementId","headers","tableData","EngagementName","localeCompare","Customer","Manager","Status","concat","clearTimeout","FaChevronCircleDown","response","res","setItem","catch","filteredData","filter","name","LinkTemplate","to","style","textDecoration","color","BusinessUnit","Cost_Center","SalesExecutive","Contract_Terms","StartDate","EndDate","EngagementCompany","sortable","body","field","ScreenBreadcrumbs","currentScreenName","GlobalHelp","pdfname","htmlFor","type","cursor","ReactSearchAutocomplete","items","onClear","onSelect","showIcon","reactautocomplete","setFormData","lkup_name","showMonthDropdown","showYearDropdown","dropdownMode","dateFormat","maxDate","prev","moment","format","onKeyDown","keyCode","minDate","ArrowRenderer","expanded","options","hasSelectAll","isLoading","shouldToggleOnHover","disableSearch","valueRenderer","selectedOptions","allOptions","selectedValues","option","allValues","label","join","disabled","filteredEngCompany","prevVal","Loader","handleAbort","abort","SelectCustDialogBox","btnState","setbtnState","buttonValue","permission","setPermission","margin","button","DeliveryCreate","VendorOpen","formEditData","editedData","onChangeHandler","refArr","setUsername","inputSearchString","assigned_to","edit","showNoResults","showNoResultsText"],"sourceRoot":""}