{"version":3,"file":"static/js/8160.46cb44c0.chunk.js","mappings":"qTAuHA,UAjHA,WACE,OAA8BA,EAAAA,EAAAA,UAAS,IAAG,eAAnCC,EAAO,KAAEC,EAAU,KAC1B,GAAsCF,EAAAA,EAAAA,UAAS,IAAG,eAA3CG,EAAW,KAAEC,EAAc,KAClC,GAAkCJ,EAAAA,EAAAA,UAAS,IAAG,eAA5BK,GAAF,KAAc,MAC9B,GAAsDL,EAAAA,EAAAA,UAAS,IAAG,eAA3DM,EAAmB,KAAEC,EAAsB,KAClD,GAAkDP,EAAAA,EAAAA,UAAS,IAAG,eAApCQ,GAAF,KAAsB,MAC9C,GAAoCR,EAAAA,EAAAA,UAAS,IAAG,eAA7BS,GAAF,KAAe,MAUhC,GAAgCT,EAAAA,EAAAA,UAPX,CACnB,SAAY,GACZ,QAAW,EACX,YAAe,KAIqC,eAA/CU,EAAQ,KAAEC,EAAW,KAItBC,EAAUC,EAAAA,EAAAA,QAqDRC,EAAc,yCAAG,6GACJC,IAAM,CACvBC,IAAKJ,EAAO,gCACZ,OAFIK,EAAI,QAINd,EAAcc,EAAKC,MACXC,KAAK,CAAE,MAAS,IAAK,MAAS,sBAC1Cf,EAAeD,GACfI,EAAuBJ,GACnBiB,EAAmB,GACvBjB,EAAYkB,SAAQ,SAAAH,GAClBE,EAAiBD,KAAKD,EAAKI,MAC7B,IACAX,GAAY,SAAAY,GAAO,yBAASA,GAAO,cAAE,cAAiBH,EAAiBI,YAAU,SAvDvDC,KADHC,EAyDJN,EAAiBI,cAxDEd,EAAsB,YAAIgB,GAChEhB,EAAmB,SAAI,IACvBK,IAAM,CACJY,OAAQ,OACRX,IAAMJ,EAAU,4BAChBM,KAAMR,IACLkB,MAAK,SAAAX,GAUN,IARA,IAAIC,EAAOD,EAAKC,KAAKW,qBACjBC,EAAcb,EAAKC,KAAKa,oBAAoBC,MAAM,KAElDC,EAAkB,GAEhBC,EAAW,CAAC,EACZC,EAAS,CAAC,EAEPC,EAAI,EAAGA,EAAIN,EAAYO,OAAO,EAAGD,IAAK,CACD,IAAD,GAAN,IAAjCN,EAAYM,GAAIE,SAAS,QAC3BJ,EAASJ,EAAYM,IAAoB,QAAjB,EAAGN,EAAYM,UAAE,aAAd,EAAgBG,WAAW,gBAAgB,IAAIA,WAAW,IAAI,KACzFJ,EAAOL,EAAYM,IAAM,eAE7B,CAEAH,EAAgBd,KAAKe,GACrBD,EAAgBd,KAAKgB,GAErB1B,EAAcwB,GAId,IAFA,IAAIO,EAAc,GAETJ,EAAI,EAAGA,EAAIlB,EAAKmB,OAAQD,IAAK,CACrBlB,EAAKkB,GAEpB,IAFA,IACMK,EAAU,CAAC,EACTC,EAAE,EAAEA,EAAEZ,EAAYO,OAAO,EAAEK,IACjCD,EAAQX,EAAYY,IAAMxB,EAAKkB,GAAGN,EAAYY,IAEhDF,EAAYrB,KAAKsB,EACnB,CAEF,IAiBiD,kCAzD3B,IAACf,CAyD0B,UAClD,kBAfqB,mCAiCtB,OANAiB,EAAAA,EAAAA,YAAU,WA7ER5B,IAAM,CACJC,IAAKJ,EAAO,8BACXgB,MAAK,SAAAX,GACNf,EAAWe,EAAKC,KAClB,IA2EAJ,IAXAC,IAAM,CACJC,IAAKJ,EAAS,8BACbgB,MAAK,SAAAX,GACN,IAAMC,EAAOD,EAAKC,KAClBb,EAAaa,GACbV,EAAqBU,EACvB,GAOF,GAAG,KAGD,0BACK,SAAC,IAAqB,CAACjB,QAASA,EAASE,YAAaA,EAAaG,oBAAqBA,EAAqBC,uBAAwBA,KAG9I,C","sources":["views/CostComponent/ViewAndUpload.js"],"sourcesContent":["import axios from 'axios';\nimport React, { useEffect, useState } from 'react'\nimport { environment } from '../../environments/environment';\nimport SecretKeyVerification from './SecretKeyVerification';\nimport './CostCss.scss';\n\nfunction ViewAndUpload() {\n  const [country, setCountry] = useState([])\n  const [departments, setDepartments] = useState([])\n  const [roleTypes, setRoleTypes] = useState([])\n  const [selectedDepartments, setSelectedDepartments] = useState([])\n  const [selectedRoleTypes, setSelectedRoleTypes] = useState([]);\n  const [columnData, setColumnData] = useState([])\n\n\n  const initialValue = {\n    \"roleType\": \"\",\n    \"country\": 3,\n    \"departments\": \"\"\n  }\n\n\n  const [formData, setFormData] = useState(initialValue);\n\n\n\n  const baseUrl = environment.baseUrl;\n\n  const getCountries = () => {\n    axios({\n      url: baseUrl + `/CostMS/cost/getCountries`\n    }).then(resp => {\n      setCountry(resp.data);\n    })\n  }\n\n  const roleWiseViewAxios=(initialFilterDeptData)=>{\n    initialFilterDeptData !== undefined ? formData[\"departments\"] = initialFilterDeptData : \"\"\n    formData[\"roleType\"] = '0';\n    axios({\n      method: \"POST\",\n      url:  baseUrl + \"/CostMS/cost/roleWiseView\",\n      data: formData\n    }).then(resp => {\n\n      let data = resp.data.roleWiseComputedCost;\n      let columnsData = resp.data.computedCostColumns.split(\",\");\n      \n      let finalColumnData = [];\n\n      const objFirst = {};\n      const objSec = {};\n\n      for (let i = 0; i < columnsData.length-1; i++) {\n        if((columnsData[i]).includes(\"id\")===false){\n          objFirst[columnsData[i]] = columnsData[i]?.replaceAll(\"_ComputedCost\",\"\").replaceAll(\"_\",\" \");\n          objSec[columnsData[i]] = \"ComputedCost\";\n        }\n      }\n\n      finalColumnData.push(objFirst);\n      finalColumnData.push(objSec);\n\n      setColumnData(finalColumnData);\n\n      let orderedData = [];\n\n      for (let i = 0; i < data.length; i++) {\n        let innerObj = data[i];\n        const objData = {};\n        for(let j=0;j<columnsData.length-1;j++){\n          objData[columnsData[j]] = data[i][columnsData[j]];\n        }\n        orderedData.push(objData);\n      }\n      // setRoleWiseViewState(orderedData);\n    })\n  }\n\n    const getDepartments = async () => {\n    const resp = await axios({\n      url: baseUrl + `/CostMS/cost/getDepartments`\n    })\n    // .then(resp => {\n    let departments = resp.data;\n    departments.push({ \"value\": 999, \"label\": \"Non-Revenue Units\" });\n    setDepartments(departments);\n    setSelectedDepartments(departments);\n    let filteredDeptData = [];\n    departments.forEach(data => {\n      filteredDeptData.push(data.value);\n    });\n    setFormData(prevVal => ({...prevVal,[\"departments\"] : filteredDeptData.toString() }));\n    roleWiseViewAxios((filteredDeptData.toString()));\n  }\n\n  const getRoleTypes = () => {\n    axios({\n      url: baseUrl+ '/CostMS/cost/getRoleTypes'\n    }).then(resp => {\n      const data = resp.data;\n      setRoleTypes(data);\n      setSelectedRoleTypes(data);\n    })\n  }\n\n  useEffect(() => {\n    getCountries();\n    getDepartments();\n    getRoleTypes();\n  }, [])\n\n  return (\n    <div>\n         <SecretKeyVerification country={country} departments={departments} selectedDepartments={selectedDepartments} setSelectedDepartments={setSelectedDepartments} />\n    </div>\n  )\n}\n\nexport default ViewAndUpload"],"names":["useState","country","setCountry","departments","setDepartments","setRoleTypes","selectedDepartments","setSelectedDepartments","setSelectedRoleTypes","setColumnData","formData","setFormData","baseUrl","environment","getDepartments","axios","url","resp","data","push","filteredDeptData","forEach","value","prevVal","toString","undefined","initialFilterDeptData","method","then","roleWiseComputedCost","columnsData","computedCostColumns","split","finalColumnData","objFirst","objSec","i","length","includes","replaceAll","orderedData","objData","j","useEffect"],"sourceRoot":""}