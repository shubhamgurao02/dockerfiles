{"version":3,"file":"static/js/6605.15f24673.chunk.js","mappings":"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","sources":["views/RevenueMetrices/MonthlyForecastRevenuePopUp.js","views/RevenueMetrices/RevenueForecastHierarchy.js","views/RevenueMetrices/ExceptionReportsTable.js","views/RevenueMetrices/RevenueForecastFilters.js","views/RevenueMetrices/RevenueForecast.js"],"sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\nimport { CModal } from \"@coreui/react\";\nimport { CModalBody } from \"@coreui/react\";\nimport { CModalHeader } from \"@coreui/react\";\nimport { CModalTitle } from \"@coreui/react\";\nimport Draggable from \"react-draggable\";\nimport FlatPrimeReactTableRevenue from \"./FlatPrimeReactTableRevenue\";\nimport { useEffect } from \"react\";\nimport \"./MonthlyForecastRevenuePopUp.scss\";\n\nfunction MonthlyForecastRevenuePopUp(props) {\n  const {\n    buttonPopup,\n    setButtonPopup,\n    actionItems,\n    setActionItems,\n    rows,\n    actionTable,\n    handleActionItems,\n  } = props;\n\n  useEffect(() => {\n    handleActionItems();\n  }, [actionTable]);\n  return (\n    <div className=\"col-md-12\">\n      <Draggable>\n        <CModal\n          size=\"xl\"\n          visible={buttonPopup}\n          className=\"ui-dialog \"\n          onClose={() => setButtonPopup(false)}\n        >\n          <CModalHeader className=\"hgt22\">\n            <CModalTitle>\n              <span className=\"ft16\">Action Items</span>\n            </CModalTitle>\n          </CModalHeader>\n          <CModalBody>\n            <div className=\"row\">\n              <div className=\"col-md-12\">\n                <FlatPrimeReactTableRevenue\n                  data={actionItems}\n                  rows={rows}\n                ></FlatPrimeReactTableRevenue>\n              </div>\n            </div>\n          </CModalBody>\n        </CModal>\n      </Draggable>\n    </div>\n  );\n}\nexport default MonthlyForecastRevenuePopUp;\n","import * as React from \"react\";\nimport TreeView from \"@mui/lab/TreeView\";\nimport PropTypes from \"prop-types\";\nimport SvgIcon from \"@mui/material/SvgIcon\";\nimport { alpha, styled } from \"@mui/material/styles\";\nimport TreeItem, { treeItemClasses } from \"@mui/lab/TreeItem\";\nimport Collapse from \"@mui/material/Collapse\";\nimport { useSpring, animated } from \"@react-spring/web\";\nimport { FcOpenedFolder } from \"react-icons/fc\";\n\nfunction MinusSquare(props) {\n  return (\n    <SvgIcon fontSize=\"inherit\" style={{ width: 14, height: 14 }} {...props}>\n      {/* tslint:disable-next-line: max-line-length */}\n      <path d=\"M22.047 22.074v0 0-20.147 0h-20.12v0 20.147 0h20.12zM22.047 24h-20.12q-.803 0-1.365-.562t-.562-1.365v-20.147q0-.776.562-1.351t1.365-.575h20.147q.776 0 1.351.575t.575 1.351v20.147q0 .803-.575 1.365t-1.378.562v0zM17.873 11.023h-11.826q-.375 0-.669.281t-.294.682v0q0 .401.294 .682t.669.281h11.826q.375 0 .669-.281t.294-.682v0q0-.401-.294-.682t-.669-.281z\" />\n    </SvgIcon>\n  );\n}\n\nfunction PlusSquare(props) {\n  return (\n    <SvgIcon fontSize=\"inherit\" style={{ width: 14, height: 14 }} {...props}>\n      {/* tslint:disable-next-line: max-line-length */}\n      <path d=\"M22.047 22.074v0 0-20.147 0h-20.12v0 20.147 0h20.12zM22.047 24h-20.12q-.803 0-1.365-.562t-.562-1.365v-20.147q0-.776.562-1.351t1.365-.575h20.147q.776 0 1.351.575t.575 1.351v20.147q0 .803-.575 1.365t-1.378.562v0zM17.873 12.977h-4.923v4.896q0 .401-.281.682t-.682.281v0q-.375 0-.669-.281t-.294-.682v-4.896h-4.923q-.401 0-.682-.294t-.281-.669v0q0-.401.281-.682t.682-.281h4.923v-4.896q0-.401.294-.682t.669-.281v0q.401 0 .682.281t.281.682v4.896h4.923q.401 0 .682.281t.281.682v0q0 .375-.281.669t-.682.294z\" />\n    </SvgIcon>\n  );\n}\n\nfunction TransitionComponent(props) {\n  const style = useSpring({\n    from: {\n      opacity: 0,\n      transform: \"translate3d(20px,0,0)\",\n    },\n    to: {\n      opacity: props.in ? 1 : 0,\n      transform: `translate3d(${props.in ? 0 : 20}px,0,0)`,\n    },\n  });\n\n  return (\n    <animated.div style={style}>\n      <Collapse {...props} />\n    </animated.div>\n  );\n}\n\nTransitionComponent.propTypes = {\n  /**\n   * Show the component; triggers the enter or exit states\n   */\n  in: PropTypes.bool,\n};\n\nconst StyledTreeItem = styled((props) => (\n  <div>\n    <TreeItem\n      {...props}\n      key={String(props.node.id)}\n      nodeId={String(props.node.id)}\n      label={props.node.full_name}\n      TransitionComponent={TransitionComponent}\n    >\n      {Array.isArray(props.node.subRows)\n        ? props.node.subRows.map((node) => renderTree(node))\n        : console.log(\"coming here?\")}\n    </TreeItem>\n  </div>\n))(({ theme }) => ({\n  [`& .${treeItemClasses.iconContainer}`]: {\n    \"& .close\": {\n      opacity: 0.3,\n    },\n  },\n  [`& .${treeItemClasses.group}`]: {\n    marginLeft: 15,\n    paddingLeft: 18,\n    borderLeft: `1px dashed ${alpha(theme.palette.text.primary, 0.4)}`,\n  },\n}));\n\nconst renderTree = (nodes) => (\n  <div>\n    <StyledTreeItem node={nodes}></StyledTreeItem>\n  </div>\n);\n\nexport default function RevenueForecastHierarchy(props) {\n  const { defaultExpandedRows, data, setHierarchyId, setLabel, setFormData } =\n    props;\n  const jsonToTree = (flatArray, options) => {\n    options = {\n      id: \"id\",\n      parentId: \"parent_id\",\n      children: \"subRows\",\n      ...options,\n    };\n    const dictionary = {}; // a hash table mapping to the specific array objects with their ids as key\n    const tree = [];\n    const children = options.children;\n    flatArray.forEach((node) => {\n      const nodeId = node[options.id];\n      const nodeParentId = node[options.parentId];\n      // set up current node data in dictionary\n      dictionary[nodeId] = {\n        [children]: [], // init a children property\n        ...node, // add other propertys\n        ...dictionary[nodeId], // children will be replaced if this node already has children property which was set below\n      };\n      dictionary[nodeParentId] = dictionary[nodeParentId] || { [children]: [] }; // if it's not exist in dictionary, init an object with children property\n      dictionary[nodeParentId][children].push(dictionary[nodeId]); // add reference to current node object in parent node object\n    });\n    // find root nodes\n    Object.values(dictionary).forEach((obj) => {\n      if (typeof obj[options.id] === \"undefined\") {\n        tree.push(...obj[children]);\n      }\n    });\n    return tree;\n  };\n  const hierarchy = jsonToTree(data);\n  const handleSelect = (event, nodeIds) => {\n    setHierarchyId(nodeIds);\n    setFormData((prevVal) => ({\n      ...prevVal,\n      [\"Name\"]: nodeIds,\n    }));\n    setLabel(event.target.innerHTML);\n  };\n  return (\n    <div className=\"hierarchyTree\">\n      <TreeView\n        aria-label=\"rich object\"\n        defaultExpanded={[defaultExpandedRows]}\n        defaultCollapseIcon={<MinusSquare />}\n        defaultExpandIcon={<PlusSquare />}\n        defaultEndIcon={<FcOpenedFolder />}\n        defaultParentIcon={<FcOpenedFolder />}\n        sx={{\n          \"& .css-1g86id8-MuiTreeItem-content .MuiTreeItem-label\": {\n            width: \"auto\",\n            minwidth: 0,\n          },\n        }}\n        onNodeSelect={handleSelect}\n      >\n        {renderTree(hierarchy[0])}\n      </TreeView>\n    </div>\n  );\n}\n","import React, { useState, useEffect, useRef } from \"react\";\nimport MaterialReactTable from \"material-react-table\";\nimport { IconButton } from \"@mui/material\";\nimport { AiFillLeftCircle, AiFillRightCircle } from \"react-icons/ai\";\nimport { BiChevronRight, BiChevronUp } from \"react-icons/bi\";\n\nexport default function ExceptionReportsTable(props) {\n  const { data, expandedCols, colExpandState } = props;\n\n  const [nodes, setNodes] = useState([]);\n  const [columns, setColumns] = useState(null);\n  const [hiddenColumns, setHiddenColumns] = useState({});\n  const [colExpFlag, setColumnExpFlag] = useState(false);\n  const [headers, setHeaders] = useState([]);\n\n  const numberWithCommas = (x) => {\n    var number = String(x);\n    if (number.includes(\".\")) {\n      if (number.includes(\".00\")) {\n        // var number = parseFloat(x);\n        return number;\n      } else {\n        var decimalNumbers = number;\n        var num = Number(decimalNumbers);\n        let FdN = num != null && num?.toFixed(2);\n        // let final = FdN.split(\".\");\n        // final[0] = final[0]?.replace(/(\\d)(?=(\\d{2})+\\d$)/g, \"$1,\");\n        // final[1] = final[1]?.replace(/(\\d{3})(?=\\d)/g, \"$1,\");\n\n        return FdN;\n      }\n    } else {\n      // var number = parseFloat(x);\n      return number;\n    }\n  };\n\n  useEffect(() => {\n    getData();\n  }, [data?.tableData]);\n  var count = 0;\n  const getData = () => {\n    let expandClass = \"\";\n    if (colExpFlag == true && count > 0) {\n      expandClass = \"expanded\";\n    } else {\n      expandClass = \"\";\n    }\n\n    let tableData = data?.tableData;\n\n    let columns = null;\n\n    if (data?.columnData?.includes(\"'\")) {\n      columns = data?.columnData?.replaceAll(\"'\", \"\");\n    } else {\n      columns = data?.columnData?.replaceAll(\"'\", \"\");\n    }\n\n    let colArr = columns?.split(\",\");\n    let newHeaders = [];\n    let hiddenHeaders = [];\n\n    const obj = {};\n\n    for (let i = 0; i < colArr?.length; i++) {\n      let colVal = colArr[i].trim();\n\n      let firstData = tableData[0];\n      obj[colVal] = firstData[colVal];\n    }\n    let headerArray = Object.entries(obj);\n\n    let filteredHeaders = headerArray.filter(\n      ([key, value]) => typeof value === \"string\"\n    );\n\n    tableData = tableData?.filter((data, index) => index !== 0);\n\n    //setHeaders(filteredHeaders);\n\n    filteredHeaders.map(([key, value]) => {\n      if (expandedCols.includes(key)) {\n        hiddenHeaders.push({ [key]: false });\n      }\n    });\n\n    setHiddenColumns(Object.assign({}, ...hiddenHeaders));\n    setHeaders(columns);\n\n    filteredHeaders.map(([key, value], index) => {\n      newHeaders.push({\n        accessorKey: key,\n        header: value,\n        enableColumnActions: false,\n        enableHiding: true,\n        rowspan: 5,\n\n        Header: ({ column }) => (\n          <div>\n            {value}\n            {key == colExpandState[2] ? (\n              <span className={`expandIcon ${expandClass}`}>\n                <IconButton\n                  //title=\"expandIcon\"\n                  onClick={() => {\n                    setColumnExpFlag((prev) => !prev);\n                  }}\n                >\n                  <BiChevronRight />\n                </IconButton>\n              </span>\n            ) : null}\n          </div>\n        ),\n        Cell: ({ cell }) => {\n          return (\n            <div\n              style={{\n                whiteSpace: \"nowrap\",\n                overflow: \"hidden\",\n                textOverflow: \"ellipsis\",\n              }}\n              title={cell.getValue()}\n            >\n              {cell.column.id.includes(\"gmper\") ||\n              cell.column.id.includes(\"billrate\") ||\n              cell.column.id.includes(\"bill_rate\") ||\n              cell.column.id.includes(\"cost\") ? (\n                <div className=\"align right\">\n                  {numberWithCommas(cell.getValue())}\n                </div>\n              ) : cell.getValue() != null ? (\n                cell.getValue().split(\"^\")[0]\n              ) : (\n                cell.getValue()\n              )}\n            </div>\n          );\n        },\n      });\n    });\n\n    setColumns(newHeaders);\n    setNodes(tableData);\n  };\n\n  const colCollapse = () => {\n    let hiddenHeaders = [];\n    if (headers && Array.isArray(headers)) {\n      headers.forEach(({ key, value }) => {\n        if (expandedCols?.includes(key)) {\n          hiddenHeaders.push({ [key]: false });\n        }\n      });\n    } else if (Array.isArray(expandedCols)) {\n      expandedCols.forEach((key) => {\n        hiddenHeaders.push({ [key]: false });\n      });\n    }\n\n    setHiddenColumns(Object.assign({}, ...hiddenHeaders));\n  };\n\n  useEffect(() => {\n    colExpFlag ? expandT() : expandF();\n    // getData();\n  }, [colExpFlag]);\n  const expandT = () => {\n    count++;\n    getData();\n    setHiddenColumns({});\n  };\n\n  const expandF = () => {\n    getData();\n  };\n\n  return (\n    <div className=\"materialReactExpandableTable engagementAllocationsTable darkHeader\">\n      {nodes?.length ? (\n        <MaterialReactTable\n          columns={columns}\n          data={nodes}\n          enableExpandAll={false}\n          // enableExpanding\n          enablePagination={false}\n          enableBottomToolbar={false}\n          enableTopToolbar={false}\n          enableColumnActions={false}\n          enableSorting={false}\n          filterFromLeafRows\n          initialState={{\n            expanded: false,\n            density: \"compact\",\n            columnVisibility: { ...hiddenColumns },\n            enablePinning: true,\n            columnPinning: { right: [\"total\"] },\n          }}\n          state={{ columnVisibility: { ...hiddenColumns } }}\n          defaultColumn={{ minSize: 40, maxSize: 180, size: 40 }}\n          enableStickyHeader\n          muiTableContainerProps={{\n            sx: {\n              maxHeight: \"50vh\",\n              width: \"100%\",\n            },\n          }}\n          muiTableBodyProps={{\n            sx: {\n              \"&\": {},\n              \"& td\": {\n                borderRight: \"1px solid #ccc\",\n                height: \"22px\",\n                fontSize: \"11px\",\n                paddingTop: \"0px\",\n                paddingBottom: \"0px\",\n              },\n            },\n          }}\n          muiTableHeadProps={{\n            sx: {\n              \"& th\": {\n                borderTop: \"1px solid #ccc\",\n                borderRight: \"1px solid #ccc\",\n                background: \"#f4f4f4 \",\n                fontSize: \"13px\",\n                padding: \"0px 8px\",\n              },\n            },\n          }}\n        />\n      ) : null}\n    </div>\n  );\n}\n","import React, { useRef, useEffect, useState } from \"react\";\nimport moment from \"moment\";\nimport axios from \"axios\";\nimport { environment } from \"../../environments/environment\";\nimport DatePicker from \"react-datepicker\";\nimport { MultiSelect } from \"react-multi-select-component\";\nimport { CCollapse } from \"@coreui/react\";\nimport {\n  FaChevronCircleDown,\n  FaChevronCircleUp,\n  FaSearch,\n  FaCaretDown,\n} from \"react-icons/fa\";\nimport { IoIosArrowBack, IoIosArrowForward } from \"react-icons/io\";\nimport MonthlyForecastRevenuePopUp from \"./MonthlyForecastRevenuePopUp\";\nimport MonthlyForecastRevenueTableComponent from \"./MonthlyForecastRevenueTableComponent\";\nimport MonthlyForecastRevenueCalenderTable from \"./MonthlyForecastRevenueCalenderTable\";\nimport {\n  AiOutlineException,\n  AiOutlineLeftSquare,\n  AiOutlineRightSquare,\n} from \"react-icons/ai\";\nimport Loader from \"../Loader/Loader\";\nimport { RiFileExcel2Line } from \"react-icons/ri\";\nimport RevenueForecastBuTable from \"./RevenueForecastBuTable\";\nimport GlobalValidation from \"../ValidationComponent/GlobalValidation\";\nimport RevenueForecastBuCustomer from \"./RevenueForecastBuCustomer\";\nimport { ReactSearchAutocomplete } from \"react-search-autocomplete\";\nimport RevenueForecastHierarchy from \"./RevenueForecastHierarchy\";\nimport GlobalHelp from \"../PrimeReactTableComponent/GlobalHelp\";\nimport SavedSearchGlobal from \"../PrimeReactTableComponent/SavedSearchGlobal\";\nimport ExceptionReportsTable from \"./ExceptionReportsTable\";\nimport ExcelJS from \"exceljs\";\nimport { setTimeout } from \"core-js\";\nimport { useLocation } from \"react-router-dom\";\nfunction RevenueForecastFilters(props) {\n  const {\n    capType,\n    hierarchyId,\n    mgrId,\n    departments,\n    customer,\n    selectedDepartments,\n    selectedEngCompany,\n    selectedCsl,\n    selectedDp,\n    project,\n    selectedEngLocation,\n    resource,\n    projectname,\n    resourceName,\n    manager,\n    pmname,\n    summaryBy,\n    selectedSummaryBy,\n    financialMeasures,\n    selectview,\n    selectedResLocation,\n    selectedContractTerms,\n    utilizationSummary,\n    benchSummary,\n    CustomerName,\n    displayState,\n    displayStateA,\n    displayStateB,\n    hierarchydata,\n    searchingA,\n    setsearchingA,\n    addHandler,\n    subtractHandler,\n    handleDateChange,\n    resLocation,\n    engCompany,\n    formData,\n    month,\n    contractTerms,\n    csl,\n    dp,\n    selecttype,\n    setSelectType,\n    actionTable,\n    setFormData,\n    setCapType,\n    setMonth,\n    formattedMonth,\n    setSelectView,\n    engLocation,\n    filteredNumbers,\n    setSelectedDepartments,\n    setSelectedResLocation,\n    setSelectedContractorTerms,\n    setSelectedEngCompany,\n    setSelectedCsl,\n    setSelectedDp,\n    setSelectedSummaryBy,\n    setSelectedEngLocation,\n    setValidationMessage,\n    abortController,\n    loggedResourceId,\n    setHierarchyId,\n    setLabel,\n    label,\n    getSearchData,\n    loggedUserId,\n    displayHierarchy,\n    setSearching,\n    searching,\n    pageurl,\n    page_Name,\n    setEditAddmsg,\n    alloctype,\n    setAlloctype,\n    setSelectedalloctype,\n    selectedalloctype,\n    setSelectedFinancialMeasures,\n    selectedFinancialMeasures,\n    setDisplayHierarchy,\n    // savedSaerchid,\n    // filterData,\n    allcontractterms,\n    allengcompanies,\n    allcsl,\n    alldp,\n    setDisplayState,\n    setDisplayStateA,\n    setDisplayStateB,\n    setActionTable,\n    setUtilizationSummary,\n    setBenchSummary,\n    dataAccess,\n    setType,\n    visible,\n    setvisible,\n    cheveronIcon,\n    setCheveronIcon,\n    managerProjects,\n  } = props;\n\n  const ref = useRef([]);\n  const [BURegion, setBURegion] = useState([]);\n  const [BUCustomer, setBUCustomer] = useState([]);\n  const [BUPractice, setBUPractice] = useState([]);\n  const [displayStateC, setDisplayStateC] = useState(false);\n  const [displayStateD, setDisplayStateD] = useState(false);\n  const [displayStateE, setDisplayStateE] = useState(false);\n  const [ArrowBack, setArrowBack] = useState(IoIosArrowBack);\n  const [visibleA, setvisibleA] = useState(false);\n  const [visibleB, setvisibleB] = useState(false);\n  const [visibleC, setvisiblec] = useState(false);\n  const [cheveronIconA, setCheveronIconA] = useState(FaChevronCircleUp);\n  const [cheveronIconB, setCheveronIconB] = useState(FaChevronCircleUp);\n  const value = \"UpdateBillingRate\";\n  let rows = 5;\n  const [buttonPopup, setButtonPopup] = useState(false);\n  const [actionItems, setActionItems] = useState([]);\n  const [actionItemsSearching, setActionItemsSearching] = useState(false);\n  const [item, setItem] = useState([]);\n  const baseUrl = environment.baseUrl;\n  const [exceptionReports, setExceptionReports] = useState([]);\n  const [displayExceptionReports, setDisplayExceptionReports] = useState(false);\n  const [reportsTable, setReportsTable] = useState(false);\n  const [excel, setExcel] = useState([]);\n  const [actionPopup, setActionPopup] = useState(false);\n  const abortControllerRef = useRef(new AbortController());\n  const loggedUserName = localStorage.getItem(\"resName\");\n  let allcsl1;\n  let alldp1;\n  const ArrowRenderer = ({ expanded }) => (\n    <>\n      {expanded ? (\n        <FaCaretDown className=\"chevronIcon\" />\n      ) : (\n        <FaCaretDown className=\"chevronIcon\" />\n      )}\n    </>\n  );\n\n  const location = useLocation();\n  const searchParams = new URLSearchParams(location.search);\n  const savedSaerchid = searchParams.get(\"id\");\n  const [filterData, setFilterData] = useState([]);\n\n  const FilterData = () => {\n    axios({\n      method: \"get\",\n      url:\n        baseUrl +\n        `/dashboardsms/savedsearch/FiltersData?saved_search_id=${\n          savedSaerchid === null ? 0 : savedSaerchid\n        }`,\n    }).then(function (res) {\n      const getData = res.data;\n      setFilterData(getData);\n    });\n  };\n\n  useEffect(() => {\n    FilterData();\n  }, [savedSaerchid]);\n\n  const allocBeyondEndDateResult = exceptionReports[4];\n  const projectsWithoutBUResult = exceptionReports[6];\n  const resRateLessCostResult = exceptionReports[7];\n  const resWithNegGMPerResult = exceptionReports[9];\n  const resWithNoEndDateResult = exceptionReports[3];\n  const resWithZeroRoleCostResult = exceptionReports[8];\n  const resWithZerobillRateResult = exceptionReports[2];\n  const resWithoutBUResult = exceptionReports[1];\n  const resWithoutDesignationResult = exceptionReports[5];\n  const tempMailsResult = exceptionReports[0];\n  useEffect(() => {\n    console.log(\n      \"SS>>\",\n      selectedSummaryBy,\n      \" DP>>\",\n      dp,\n      \" CSL>>\",\n      csl,\n      \" FD>>\",\n      filterData[\"Primary PM\"]\n    );\n\n    if (savedSaerchid && filterData) {\n      setTimeout(() => {\n        handleSavedSearch(); //new api call\n      }, 4000);\n    }\n  }, [filterData, filterData[\"Primary PM\"], dp, csl, selectedSummaryBy]);\n\n  const handleAbort = () => {\n    if (abortController.current.length > 0) {\n      let abort = abortController.current;\n      abort.forEach((d) => d.abort());\n      // abortController.abort();\n    }\n    setsearchingA(false);\n    setDisplayHierarchy(false);\n    setDisplayExceptionReports(false);\n  };\n\n  const handleBuAbort = () => {\n    // Cancel the ongoing requests\n    abortControllerRef.current.abort();\n\n    // Reset your searching state and other UI states as needed\n    setSearching(false);\n  };\n  ////////////////----------Exception Reports--------------////////////////////\n  const ExceptionReports = () => {\n    setExceptionReports([]);\n    setReportsTable(false);\n    setActionPopup(false);\n    const loaderTime = setTimeout(() => {\n      setDisplayExceptionReports(true);\n    }, 2000);\n    setDisplayStateA(false);\n    setDisplayState(false);\n    setDisplayStateB(false);\n    setDisplayStateC(false);\n    setDisplayStateE(false);\n    setDisplayStateD(false);\n    abortController.current[2] = new AbortController();\n    axios({\n      method: \"post\",\n      url: baseUrl + `/revenuemetricsms/metrics/getExceptionReports`,\n      signal: abortController.current[2].signal,\n\n      data: {\n        filterType:\n          formData.type == \"Business Unit\"\n            ? \"businessUnit\"\n            : formData.type == \"Primary PM\"\n            ? \"primaryPm\"\n            : formData.type,\n        contextVal:\n          selecttype == \"Business Unit\"\n            ? formData.BusinessUnit\n            : selecttype == \"customer\"\n            ? formData.Customer\n            : selecttype == \"project\"\n            ? formData.Project\n            : selecttype == \"resource\"\n            ? formData[\"Resource Name\"]\n            : selecttype == \"Primary PM\"\n            ? formData[\"Primary PM\"]\n            : \"\",\n        fromDt: formattedMonth,\n        countries: formData.ResLocation,\n        resType: formData.ResType,\n        cslIds: allcsl,\n        dpIds: alldp,\n        loggedUserId: loggedUserId,\n      },\n    }).then((response) => {\n      setExceptionReports(response.data);\n      setReportsTable(true);\n      setDisplayExceptionReports(false);\n      clearTimeout(loaderTime);\n      let valid = GlobalValidation(ref);\n      setSearching(false);\n      !valid && setvisible(!visible);\n      visible\n        ? setCheveronIcon(FaChevronCircleUp)\n        : setCheveronIcon(FaChevronCircleDown);\n    });\n  };\n  const norecords = (obj1FilterData) => {\n    const emptyObject = {};\n    Object.keys(obj1FilterData[1]).forEach((key, value) => {\n      emptyObject[key] = \"0\";\n\n      if (\n        key == \"name\" ||\n        key == \"id\" ||\n        key == \"uniqueId\" ||\n        key == \"lvl\" ||\n        key == \"parentId\"\n      ) {\n        emptyObject[\"name\"] = \"No Records Found\";\n        emptyObject[\"id\"] = \"999\";\n        emptyObject[\"uniqueId\"] = \"3\";\n        emptyObject[\"lvl\"] = \"1\";\n        emptyObject[\"parentId\"] = null;\n      }\n    });\n\n    obj1FilterData[2] = emptyObject;\n  };\n  const handleResponse = (obj1, obj2, obj3) => {\n    setReportsTable(false);\n\n    if (obj1.data.value?.includes(\"Region\")) {\n      let obj1TableData = obj1.data.tableData;\n      let obj1FilterData = obj1TableData?.filter((d) => d?.id != 999);\n      obj1.data[\"tableData\"] = obj1FilterData;\n\n      if (obj1FilterData.length === 2) {\n        norecords(obj1FilterData);\n        setBURegion(obj1.data);\n      } else {\n        setBURegion(obj1.data);\n      }\n\n      setDisplayStateC(true);\n    } else if (obj1.data.value?.includes(\"Practice\")) {\n      let obj1TData = obj1.data.tableData;\n      let obj1FilterData = obj1TData?.filter((d) => d?.id != 999);\n      obj1.data[\"tableData\"] = obj1FilterData;\n\n      if (obj1FilterData.length === 2) {\n        norecords(obj1FilterData);\n        setBUPractice(obj1.data);\n      } else {\n        setBUPractice(obj1.data);\n      }\n      setDisplayStateD(true);\n    } else if (obj1.data.value?.includes(\"Customer\")) {\n      let obj1TD = obj1.data.tableData;\n      let obj1FilterData = obj1TD?.filter((d) => d?.id != 999);\n      obj1.data[\"tableData\"] = obj1FilterData;\n\n      if (obj1FilterData.length === 2) {\n        norecords(obj1FilterData);\n        setBUCustomer(obj1.data);\n      } else {\n        setBUCustomer(obj1.data);\n      }\n      setDisplayStateE(true);\n    }\n    if (obj2 !== undefined) {\n      if (obj2.data.value?.includes(\"Region\")) {\n        let obj2TableData = obj2.data.tableData;\n        let obj1FilterData = obj2TableData?.filter((d) => d?.id != 999);\n        obj2.data[\"tableData\"] = obj1FilterData;\n        if (obj1FilterData.length === 2) {\n          norecords(obj1FilterData);\n          setBURegion(obj2.data);\n        } else {\n          setBURegion(obj2.data);\n        }\n        setDisplayStateC(true);\n      } else if (obj2.data.value?.includes(\"Practice\")) {\n        let obj2TData = obj2.data.tableData;\n        let obj1FilterData = obj2TData?.filter((d) => d?.id != 999);\n        obj2.data[\"tableData\"] = obj1FilterData;\n\n        if (obj1FilterData.length === 2) {\n          norecords(obj1FilterData);\n          setBUPractice(obj2.data);\n        } else {\n          setBUPractice(obj2.data);\n        }\n        setDisplayStateD(true);\n      } else if (obj2.data.value?.includes(\"Customer\")) {\n        let obj2TD = obj2.data.tableData;\n        let obj1FilterData = obj2TD?.filter((d) => d?.id != 999);\n        obj2.data[\"tableData\"] = obj1FilterData;\n        if (obj1FilterData.length === 2) {\n          norecords(obj1FilterData);\n          setBUCustomer(obj2.data);\n        } else {\n          setBUCustomer(obj2.data);\n        }\n        setDisplayStateE(true);\n      }\n    }\n    if (obj3 !== undefined) {\n      if (obj3.data.value?.includes(\"Region\")) {\n        let obj3TableData = obj3.data.tableData;\n        let obj1FilterData = obj3TableData?.filter((d) => d?.id != 999);\n        obj3.data[\"tableData\"] = obj1FilterData;\n        if (obj1FilterData.length === 2) {\n          norecords(obj1FilterData);\n          setBURegion(obj3.data);\n        } else {\n          setBURegion(obj3.data);\n        }\n        setDisplayStateC(true);\n      } else if (obj3.data.value?.includes(\"Practice\")) {\n        let obj3TData = obj3.data.tableData;\n        let obj1FilterData = obj3TData?.filter((d) => d?.id != 999);\n        obj3.data[\"tableData\"] = obj1FilterData;\n        if (obj1FilterData.length === 2) {\n          norecords(obj1FilterData);\n          setBUPractice(obj3.data);\n        } else {\n          setBUPractice(obj3.data);\n        }\n        setDisplayStateD(true);\n      } else if (obj3.data.value?.includes(\"Customer\")) {\n        let obj3TD = obj3.data.tableData;\n        let obj1FilterData = obj3TD?.filter((d) => d?.id != 999);\n        obj3.data[\"tableData\"] = obj1FilterData;\n        if (obj1FilterData.length === 2) {\n          norecords(obj1FilterData);\n          setBUCustomer(obj3.data);\n        } else {\n          setBUCustomer(obj3.data);\n        }\n        setDisplayStateE(true);\n      }\n    }\n    let valid = GlobalValidation(ref);\n    setSearching(false);\n    !valid && setvisible(!visible);\n    visible\n      ? setCheveronIcon(FaChevronCircleUp)\n      : setCheveronIcon(FaChevronCircleDown);\n  };\n  ///==============For Saved Search ================================\n\n  // useEffect(() => {\n  //   const dpArray = filterData?.Dp?.split(\",\");\n  //   alldp1 = dpArray?.length === dp?.length ? \"-1\" : filterData?.Dp;\n  //   const cslArray = filterData.Csl?.split(\",\");\n  //   allcsl1 = cslArray?.length === csl?.length ? \"-1\" : filterData?.Csl;\n  // }, [dp, csl, filterData?.Dp, filterData?.Csl]);\n\n  const dpArray = filterData?.Dp?.split(\",\");\n  alldp1 = dpArray?.length === dp?.length ? \"-1\" : filterData?.Dp;\n  const cslArray = filterData.Csl?.split(\",\");\n  allcsl1 = cslArray?.length === csl?.length ? \"-1\" : filterData?.Csl;\n  console.log(filterData.summaryBy);\n  const handleSavedSearch = () => {\n    const updateSelectview = filterData.View;\n\n    setSelectView(updateSelectview);\n    setvisibleA(false);\n    setvisibleB(false);\n    setActionTable([]);\n    setUtilizationSummary([]);\n    setBenchSummary([]);\n    setDisplayStateB(false);\n    setDisplayState(false);\n    setDisplayStateA(false);\n    setBURegion([]);\n    setBUPractice([]);\n    setBUCustomer([]);\n    setDisplayStateC(false);\n    setDisplayStateD(false);\n    setDisplayStateE(false);\n    // Cancel the previous requests before making new ones\n    abortControllerRef.current.abort();\n\n    // Create a new AbortController instance for the current search\n    abortControllerRef.current = new AbortController();\n\n    setActionPopup(false);\n    setReportsTable(false);\n    let filteredData = ref.current.filter((d) => d != null);\n\n    ref.current = filteredData;\n\n    let valid = GlobalValidation(ref);\n\n    if (valid == true) {\n      setValidationMessage(true);\n      setTimeout(() => {\n        setValidationMessage(false);\n      }, 3000);\n    }\n\n    if (valid) {\n      return;\n    }\n    if (filterData?.type == \"Hierarchy\") {\n      setvisiblec(true);\n    }\n\n    // (['a','b','c','d']).includes(condition)\n    if (filterData.View === \"consol\") {\n      // setTimeout(() => {\n      //   setSearching(true);\n      // }, 2000);\n      let apiArr = [];\n      const summary = filterData?.summaryBy;\n      const values = selectedSummaryBy.map((item) => {\n        switch (item.value) {\n          case \"Region\":\n            apiArr.push(\n              axios.post(\n                baseUrl + `/revenuemetricsms/metrics/postRegionUtilization`,\n                {\n                  BUIds: filterData?.BusinessUnit,\n                  ResType: filterData.ResType,\n                  FromDt: formattedMonth,\n                  FBy: \"country\",\n                  Countries: filterData.ResLocation,\n                  FMeasure: filterData.Financialmeasures,\n                  SaltKey: \"AAAAB3NzaC1yc2EAAAABJQAAAIEAkwFrmz0JNpn8\",\n                  contTerms:\n                    filterData.ContractTerms ===\n                    \"28,27,752,606,26,25,1024,612,608,609,610,611,750\"\n                      ? \"-1\"\n                      : filterData.ContractTerms,\n                  engComps: filterData.EngCompany,\n                  cslIds: allcsl1,\n                  dpIds: alldp1,\n                  UserId: loggedUserId,\n                },\n                { signal: abortControllerRef.current.signal }\n              )\n            );\n            break;\n\n          case \"Practice\":\n            apiArr.push(\n              axios.post(\n                baseUrl + `/revenuemetricsms/metrics/postBUUtilization`,\n                {\n                  BUIds: filterData.BusinessUnit,\n                  ResType: filterData.ResType,\n                  FromDt: formattedMonth,\n                  FBy: \"country\",\n                  Countries: filterData.ResLocation,\n                  FMeasure: filterData.Financialmeasures,\n                  // SaltKey: \"AAAAB3NzaC1yc2EAAAABJQAAAIEAkwFrmz0JNpn8\",\n                  contTerms:\n                    filterData.ContractTerms ==\n                    \"28,27,752,606,26,25,1024,612,608,609,610,611,750\"\n                      ? \"-1\"\n                      : filterData.ContractTerms,\n                  engComps: filterData.EngCompany,\n                  cslIds: allcsl1,\n                  dpIds: alldp1,\n                  UserId: loggedUserId,\n                },\n                { signal: abortControllerRef.current.signal }\n              )\n            );\n            break;\n\n          case \"Customer\":\n            apiArr.push(\n              axios.post(\n                baseUrl + `/revenuemetricsms/metrics/postCustomerConsolidation`,\n                {\n                  BUIds: filterData.BusinessUnit,\n                  ResType: filterData.ResType,\n                  FromDt: filterData.FromDt,\n                  FBy: \"country\",\n                  Countries: formData.ResLocation,\n                  FMeasure: formData.Financialmeasures,\n                  SaltKey: \"AAAAB3NzaC1yc2EAAAABJQAAAIEAkwFrmz0JNpn8\",\n                  contTerms:\n                    filterData.ContractTerms ===\n                    \"28,27,752,606,26,25,1024,612,608,609,610,611,750\"\n                      ? \"-1\"\n                      : filterData.ContractTerms,\n                  engComps: filterData.EngCompany,\n                  cslIds: allcsl1,\n                  dpIds: alldp1,\n                  UserId: loggedUserId,\n                },\n                { signal: abortControllerRef.current.signal }\n              )\n            );\n            break;\n\n          default:\n            break;\n        }\n        return item.value;\n      });\n\n      axios.all(apiArr).then(\n        axios.spread((obj1, obj2, obj3) => {\n          handleResponse(obj1, obj2, obj3);\n        })\n      );\n    } else {\n      getSearchDataSavedSearch();\n    }\n  };\n\n  const getSearchDataSavedSearch = () => {\n    const loaderTime = setTimeout(() => {\n      setsearchingA(true);\n    }, 2000);\n    abortController.current[1] = new AbortController();\n    axios({\n      method: \"post\",\n      url: baseUrl + `/revenuemetricsms/metrics/search`,\n      signal: abortController.current[1].signal,\n      data: {\n        Typ: filterData.captype,\n        ObjectId:\n          filterData?.type == \"Business Unit\"\n            ? filterData.BusinessUnit\n            : filterData?.type == \"Hierarchy\"\n            ? +filterData?.Name\n            : filterData?.type == \"customer\"\n            ? filterData.Customer\n            : filterData?.type == \"project\"\n            ? filterData.Project\n            : filterData?.type == \"resource\"\n            ? filterData[\"Resource Name\"]\n            : filterData?.type == \"Primary PM\"\n            ? mgrId\n            : \"\",\n        FromDt: formattedMonth,\n        AllocType: filterData.AllocType,\n        FilterType:\n          filterData?.type == \"Primary PM\" ? \"project\" : filterData.type,\n        FBy: \"country\",\n        Countries: filterData.ResLocation,\n        Measure: filterData.measure,\n        ResType: filterData.ResType,\n        FMeasure: filterData.Financialmeasures,\n        PrjSource: filterData.Source,\n        EngCountries: filterData.engLocation,\n        avgFilterType: filterData.Avg,\n        avgFilterVal: filterData.avgtextvalue,\n        contTerms:\n          filterData.ContractTerms ===\n          \"28,27,752,606,26,25,1024,612,608,609,610,611,750\"\n            ? \"-1\"\n            : filterData.ContractTerms,\n        engComps: filterData.EngCompany,\n        SaltKey: \"AAAAB3NzaC1yc2EAAAABJQAAAIEAkwFrmz0JNpn8\",\n        cslIds: allcsl1,\n        dpIds: alldp1,\n        UserId: loggedUserId,\n      },\n    }).then((response) => {\n      let rp = response.data;\n\n      // clearTimeout(loaderTime);\n      setActionTable([]);\n      setActionTable(rp[0]);\n      setUtilizationSummary(response.data[1]);\n      setBenchSummary(response.data[2]);\n      console.log(filterData?.type);\n\n      setTimeout(() => {\n        if (rp.length > 0 && filterData?.type != undefined) {\n          setDisplayStateB(true);\n          setDisplayState(true);\n          setDisplayStateA(true);\n          setSearching(false);\n          setsearchingA(false);\n          let valid = GlobalValidation(ref);\n\n          !valid && setvisible(!visible);\n          visible\n            ? setCheveronIcon(FaChevronCircleUp)\n            : setCheveronIcon(FaChevronCircleDown);\n        }\n      }, 19000);\n    });\n  };\n  //================================================================\n  const handleSearch = () => {\n    setvisibleA(false);\n    setvisibleB(false);\n    setActionTable([]);\n    setUtilizationSummary([]);\n    setBenchSummary([]);\n    setDisplayStateB(false);\n    setDisplayState(false);\n    setDisplayStateA(false);\n    setBURegion([]);\n    setBUPractice([]);\n    setBUCustomer([]);\n    setDisplayStateC(false);\n    setDisplayStateD(false);\n    setDisplayStateE(false);\n    // Cancel the previous requests before making new ones\n    abortControllerRef.current.abort();\n\n    // Create a new AbortController instance for the current search\n    abortControllerRef.current = new AbortController();\n\n    setActionPopup(false);\n    setReportsTable(false);\n    let filteredData = ref.current.filter((d) => d != null);\n\n    ref.current = filteredData;\n\n    let valid = GlobalValidation(ref);\n\n    if (valid == true) {\n      setValidationMessage(true);\n      setTimeout(() => {\n        setValidationMessage(false);\n      }, 3000);\n    }\n\n    if (valid) {\n      return;\n    }\n    if (selecttype == \"Hierarchy\") {\n      setvisiblec(true);\n    }\n\n    // (['a','b','c','d']).includes(condition)\n    if (formData.View == \"consol\") {\n      setTimeout(() => {\n        setSearching(true);\n      }, 2000);\n      let apiArr = [];\n      const values = selectedSummaryBy.map((item) => {\n        switch (item.value) {\n          case \"Region\":\n            apiArr.push(\n              axios.post(\n                baseUrl + `/revenuemetricsms/metrics/postRegionUtilization`,\n                {\n                  BUIds: formData.BusinessUnit,\n                  ResType: formData.ResType,\n                  FromDt: formattedMonth,\n                  FBy: \"country\",\n                  Countries: formData.ResLocation,\n                  FMeasure: formData.Financialmeasures,\n                  SaltKey: \"AAAAB3NzaC1yc2EAAAABJQAAAIEAkwFrmz0JNpn8\",\n                  contTerms: allcontractterms,\n                  engComps: allengcompanies,\n                  cslIds: allcsl,\n                  dpIds: alldp,\n                  UserId: loggedUserId,\n                },\n                { signal: abortControllerRef.current.signal }\n              )\n            );\n            break;\n\n          case \"Practice\":\n            apiArr.push(\n              axios.post(\n                baseUrl + `/revenuemetricsms/metrics/postBUUtilization`,\n                {\n                  BUIds: formData.BusinessUnit,\n                  ResType: formData.ResType,\n                  FromDt: formattedMonth,\n                  FBy: \"country\",\n                  Countries: formData.ResLocation,\n                  FMeasure: formData.Financialmeasures,\n                  // SaltKey: \"AAAAB3NzaC1yc2EAAAABJQAAAIEAkwFrmz0JNpn8\",\n                  contTerms: allcontractterms,\n                  engComps: allengcompanies,\n                  cslIds: allcsl,\n                  dpIds: alldp,\n                  UserId: loggedUserId,\n                },\n                { signal: abortControllerRef.current.signal }\n              )\n            );\n            break;\n\n          case \"Customer\":\n            apiArr.push(\n              axios.post(\n                baseUrl + `/revenuemetricsms/metrics/postCustomerConsolidation`,\n                {\n                  BUIds: formData.BusinessUnit,\n                  ResType: formData.ResType,\n                  FromDt: formattedMonth,\n                  FBy: \"country\",\n                  Countries: formData.ResLocation,\n                  FMeasure: formData.Financialmeasures,\n                  SaltKey: \"AAAAB3NzaC1yc2EAAAABJQAAAIEAkwFrmz0JNpn8\",\n                  contTerms: allcontractterms,\n                  engComps: allengcompanies,\n                  cslIds: allcsl,\n                  dpIds: alldp,\n                  UserId: loggedUserId,\n                },\n                { signal: abortControllerRef.current.signal }\n              )\n            );\n            break;\n\n          default:\n            break;\n        }\n\n        return item.value;\n      });\n\n      axios.all(apiArr).then(\n        axios.spread((obj1, obj2, obj3) => {\n          handleResponse(obj1, obj2, obj3);\n        })\n      );\n    } else {\n      getSearchData();\n    }\n  };\n  const handleChange = (e) => {\n    const { id, value } = e.target;\n    setHierarchyId(e.target.value);\n    setFormData((prevVal) => ({\n      ...prevVal,\n      [\"Name\"]: e.target.value,\n    }));\n    setSelectType(value);\n    setType(value);\n    setSelectView(value);\n    setValidationMessage(false);\n  };\n\n  const handleActionItems = () => {\n    const loaderTime = setTimeout(() => {\n      setActionItemsSearching(true);\n    }, 2000);\n\n    abortController.current = new AbortController();\n\n    axios({\n      method: \"post\",\n      url: baseUrl + `/revenuemetricsms/metrics/getResourceActionItems`,\n      signal: abortController.current.signal,\n      data: {\n        resIds: \"\" + filteredNumbers,\n        fromDt: moment().startOf(\"month\").format(\"YYYY-MM-DD\"),\n        toDt: moment().endOf(\"month\").format(\"YYYY-MM-DD\"),\n      },\n    }).then(function (response) {\n      let tabledata = response.data;\n      let headerData = [\n        {\n          resource: \"Resource\",\n          created_dt: \"Entry Dt\",\n          createdby: \"Entry By\",\n          lkup_name: \"Category\",\n          effective_dt: \"Effective Dt\",\n          completed_dt: \"Completed Dt\",\n          comments: \"Comments\",\n        },\n      ];\n      setActionItems(headerData.concat(response.data));\n\n      setActionItemsSearching(false);\n      clearTimeout(loaderTime);\n    });\n  };\n  const handleOnExport = () => {\n    import(\"xlsx\").then((xlsx) => {\n      let desiredColumnOrder = [];\n      let cols = [];\n      let filename = null;\n      let finalColumns = null;\n      let finalTableData = null;\n      if (excel?.value == \"resWithMailsTemp\") {\n        filename = \"StaffWithInvalidEmailIDReport\";\n        finalColumns = tempMailsResult?.columnData;\n        finalTableData = tempMailsResult?.tableData;\n      } else if (excel?.value == \"resourceWithoutBUMappingTemp\") {\n        filename = \"StaffwithoutBUMappingReport\";\n        finalColumns = resWithoutBUResult?.columnData;\n        finalTableData = resWithoutBUResult?.tableData;\n      } else if (excel?.value == \"resWithZerobillRateResult\") {\n        filename = \"StaffwithnobillrateReport\";\n        finalColumns = resWithZerobillRateResult?.columnData;\n        finalTableData = resWithZerobillRateResult?.tableData;\n      } else if (excel?.value == \"resWithNoEndDateResult\") {\n        filename = \"InactiveStaffwithMissingStartorEndDateReport\";\n        finalColumns = resWithNoEndDateResult?.columnData;\n        finalTableData = resWithNoEndDateResult?.tableData;\n      } else if (excel?.value == \"allocBeyondEndDateResult\") {\n        filename = \"InActiveStaffwithAllocationsafterEndDateReport\";\n        finalColumns = allocBeyondEndDateResult?.columnData;\n        finalTableData = allocBeyondEndDateResult?.tableData;\n      } else if (excel?.value == \"resWithoutDesignationResult\") {\n        filename = \"StaffwithmissingDesignationReport\";\n        finalColumns = resWithoutDesignationResult?.columnData;\n        finalTableData = resWithoutDesignationResult?.tableData;\n      } else if (excel?.value == \"projectsWithoutBUResult\") {\n        filename = \"ProjectswithmissingBUReport\";\n        finalColumns = projectsWithoutBUResult?.columnData;\n        finalTableData = projectsWithoutBUResult?.tableData;\n      } else if (excel?.value == \"resRateLessCostResult\") {\n        filename = \"StaffwithBillratelowerthanCostRateReport\";\n        finalColumns = resRateLessCostResult?.columnData;\n        finalTableData = resRateLessCostResult?.tableData;\n      } else if (excel?.value == \"resWithZeroRoleCostResult\") {\n        filename = \"StaffwithNoCostRateReport\";\n        finalColumns = resWithZeroRoleCostResult?.columnData;\n        finalTableData = resWithZeroRoleCostResult?.tableData;\n      } else if (excel?.value == \"resWithNegGMPerResult\") {\n        filename = \"StaffWithNegativeGMPercentReport\";\n        finalColumns = resWithNegGMPerResult?.columnData;\n        finalTableData = resWithNegGMPerResult?.tableData;\n      } else if (excel == \"ResourceCapacity\") {\n        filename = \"ResourceCapacity\";\n        finalColumns = actionTable?.columns;\n        finalTableData = actionTable?.tableData;\n      }\n      let columns = finalColumns;\n      cols = columns?.replaceAll(\"'\", \"\")?.replaceAll(\"<br>\", \"\");\n      desiredColumnOrder = cols\n        ?.split(\",\")\n        .filter((col) => !col.includes(\"Id\") && !col.includes(\"action_items\"));\n      let filteredColumns = null;\n      if (excel.length !== 0) {\n        filteredColumns = desiredColumnOrder?.filter(\n          (column) => column !== \"resource_id\"\n        );\n      } else {\n        filteredColumns = desiredColumnOrder?.filter(\n          (column) => column !== \"action_items\" && column !== \"Id\"\n        );\n      }\n\n      let data = finalTableData;\n\n      let filteredData = data?.filter(\n        (column) => column !== \"action_items\" && column !== \"Id\"\n      );\n      const splitData = filteredData?.map((obj, index) => {\n        const newObj = {};\n        for (const key in obj) {\n          if (obj.hasOwnProperty(key)) {\n            const value = obj[key];\n            if (index === 0 && value !== null && typeof value === \"string\") {\n              newObj[key] = value.replace(/[_<]br>/g, \" \");\n            } else if (\n              index !== 0 &&\n              value !== null &&\n              typeof value === \"string\" &&\n              (value.includes(\"_\") || value.includes(\".\"))\n            ) {\n              const splitValues = value.split(/[_\\.]/)[0];\n              newObj[key] = splitValues;\n            } else {\n              newObj[key] = value;\n            }\n          }\n        }\n        return newObj;\n      });\n\n      const wantedValues = splitData?.map((item) => {\n        const obj = {};\n        filteredColumns.forEach((col) => {\n          const value = item[col];\n          if (typeof value === \"string\") {\n            const [extractedValue, ,] = value.split(\"^&\"); // Extract the value from the key metadata\n            obj[col] = extractedValue; // Assign the extracted value to the corresponding column\n          } else {\n            obj[col] = value;\n          }\n        });\n        return obj;\n      });\n\n      // Create an array of objects where each object represents a row\n      const rows = wantedValues?.map((item) => {\n        const row = [];\n        filteredColumns.forEach((col) => {\n          row.push(item[col]);\n        });\n        return row;\n      });\n\n      const workbook = new ExcelJS.Workbook();\n\n      const worksheet = workbook.addWorksheet(\"data\");\n\n      wantedValues.forEach((item) => {\n        const row = worksheet.addRow(Object.values(item));\n      });\n\n      const boldRow = [1];\n\n      boldRow.forEach((index) => {\n        const row = worksheet.getRow(index);\n\n        row.font = { bold: true };\n      });\n\n      workbook.xlsx.writeBuffer().then((buffer) => {\n        saveAs(new Blob([buffer]), filename + \".xlsx\");\n      });\n      setExcel([]);\n    });\n  };\n\n  const saveAsExcelFile = (buffer, fileName) => {\n    import(\"file-saver\").then((module) => {\n      if (module && module.default) {\n        let EXCEL_TYPE =\n          \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8\";\n        let EXCEL_EXTENSION = \".xlsx\";\n        const data = new Blob([buffer], { type: EXCEL_TYPE });\n        module.default.saveAs(\n          data,\n          fileName + EXCEL_EXTENSION\n          // fileName + \"_export_\" + new Date().getTime() + EXCEL_EXTENSION\n        );\n      }\n    });\n  };\n  useEffect(() => {}, [item]);\n  const generateDropdownLabel = (selectedOptions, allOptions) => {\n    const selectedValues = selectedOptions.map((option) => option.value);\n    const allValues = allOptions.map((item) => item.value);\n\n    if (selectedValues.length === allValues.length) {\n      return \"<< ALL >>\";\n    } else {\n      return selectedOptions.map((option) => option.label).join(\", \");\n    }\n  };\n  const HelpPDFName = \"MonthlyRevenueForecast.pdf\";\n  const Headername = \"Monthly Revenue Forecast Help\";\n  return (\n    <div className=\"group mb-3 customCard\">\n      <div className=\"group-content row\">\n        {selecttype == \"Hierarchy\" ? (\n          //  || dataAccess == 307\n          <>\n            {visibleC == true ? (\n              <span\n                className=\"backArrow\"\n                onClick={() => {\n                  setvisiblec(!visibleC);\n                  visibleC\n                    ? setArrowBack(IoIosArrowForward)\n                    : setArrowBack(IoIosArrowBack);\n                }}\n              >\n                {visibleC ? <IoIosArrowForward /> : <IoIosArrowBack />}\n              </span>\n            ) : (\n              \"\"\n            )}\n            <div className={\"col-md-2 \"}>\n              <CCollapse visible={!visibleC} setvisiblec=\"false\">\n                {visibleC == false ? (\n                  <h2>\n                    Resources\n                    <span\n                      className=\"backArrow\"\n                      onClick={() => {\n                        setvisiblec(!visibleC);\n                        visibleC\n                          ? setArrowBack(IoIosArrowForward)\n                          : setArrowBack(IoIosArrowBack);\n                      }}\n                    >\n                      {visibleC ? <IoIosArrowForward /> : <IoIosArrowBack />}\n                    </span>\n                  </h2>\n                ) : (\n                  \"\"\n                )}\n                {\n                  <RevenueForecastHierarchy\n                    defaultExpandedRows={String(loggedResourceId)}\n                    data={hierarchydata}\n                    setHierarchyId={setHierarchyId}\n                    setLabel={setLabel}\n                    setFormData={setFormData}\n                  />\n                }\n              </CCollapse>\n            </div>\n          </>\n        ) : (\n          \"\"\n        )}\n        <div\n          className={\n            visibleC == false && selecttype == \"Hierarchy\"\n              ? // dataAccess == 307\n                \"col-10\"\n              : \"col-12\"\n          }\n        >\n          <div className=\"group mb-3 customCard\">\n            <div className=\"col-md-12 collapseHeader\">\n              <h2>Search Filters</h2>\n              <div className=\"helpBtn\">\n                <GlobalHelp pdfname={HelpPDFName} name={Headername} />\n              </div>\n              <div className=\"saveBtn\">\n                <SavedSearchGlobal\n                  setEditAddmsg={setEditAddmsg}\n                  pageurl={pageurl}\n                  page_Name={page_Name}\n                  payload={formData}\n                />\n              </div>{\" \"}\n              &nbsp;\n              <div\n                onClick={() => {\n                  setvisible(!visible);\n                  visible\n                    ? setCheveronIcon(FaChevronCircleUp)\n                    : setCheveronIcon(FaChevronCircleDown);\n                }}\n              >\n                <span>{cheveronIcon}</span>\n              </div>\n            </div>\n\n            <CCollapse visible={!visible} setvisible=\"false\">\n              <div>\n                <div className=\"group-content row\">\n                  <div className=\"col-md-4 mb-2\">\n                    <div className=\"form-group row\">\n                      <label className=\"col-5\" htmlFor=\"Type-select\">\n                        Type\n                      </label>\n                      <span className=\"col-1 p-0\">:</span>\n                      <div className=\"col-6\">\n                        <select\n                          id=\"type\"\n                          onChange={(e) => {\n                            setFormData((prevVal) => ({\n                              ...prevVal,\n                              [\"type\"]: e.target.value,\n                            }));\n                            setSelectedResLocation(resLocation);\n                            setFormData((prevVal) => ({\n                              ...prevVal,\n                              [\"View\"]: \"detail\",\n                            }));\n                            if (e.target.value === \"Hierarchy\") {\n                              setvisiblec(false);\n                            }\n                            setSelectType(e.target.value);\n                            setType(\"Hierarchy\");\n                          }}\n                          value={\n                            savedSaerchid == null\n                              ? formData?.type\n                              : filterData.type\n                          }\n                        >\n                          {dataAccess === 46 ? (\n                            <>\n                              <option id=\"Hierarchy\" value=\"Hierarchy\">\n                                Hierarchy\n                              </option>\n                              <option value=\"project\">Project</option>\n                            </>\n                          ) : dataAccess === 800 || dataAccess == 700 ? (\n                            <>\n                              <option id=\"\" value=\"\">\n                                &lt;&lt;Please Select&gt;&gt;\n                              </option>\n                              <option id=\"Hierarchy\" value=\"Hierarchy\">\n                                Hierarchy\n                              </option>\n                              <option value=\"customer\">Customer</option>\n                              <option value=\"project\">Project</option>\n                            </>\n                          ) : dataAccess === 307 || dataAccess == 428 ? (\n                            <>\n                              <option id=\"\" value=\"\">\n                                &lt;&lt;Please Select&gt;&gt;\n                              </option>\n                              <option id=\"Hierarchy\" value=\"Hierarchy\">\n                                Hierarchy\n                              </option>\n                            </>\n                          ) : (\n                            <>\n                              <option id=\"\" value=\"\">\n                                &lt;&lt;Please Select&gt;&gt;\n                              </option>\n                              <option id=\"Hierarchy\" value=\"Hierarchy\">\n                                Hierarchy\n                              </option>\n                              {dataAccess == 686 ||\n                              dataAccess == 126 ||\n                              dataAccess == 250 ||\n                              dataAccess == 932 ||\n                              dataAccess == 911 ||\n                              dataAccess == 908 ||\n                              dataAccess == 910 ||\n                              dataAccess == 1100 ||\n                              // dataAccess == 932 ||\n                              dataAccess == 307 ? (\n                                <option value=\"Business Unit\">\n                                  Business Unit\n                                </option>\n                              ) : (\n                                \"\"\n                              )}\n                              <option value=\"customer\">Customer</option>\n                              <option value=\"project\">Project</option>\n                              {dataAccess == 686 ||\n                              dataAccess == 126 ||\n                              dataAccess == 250 ||\n                              dataAccess == 932 ||\n                              dataAccess == 908 ||\n                              dataAccess == 910 ||\n                              dataAccess == 911 ? (\n                                <option value=\"resource\">Resource</option>\n                              ) : (\n                                \"\"\n                              )}\n                              {dataAccess == 686 ||\n                              dataAccess == 126 ||\n                              dataAccess == 250 ||\n                              dataAccess == 932 ||\n                              dataAccess == 911 ||\n                              dataAccess == 908 ||\n                              dataAccess == 910 ||\n                              // dataAccess == 932 ||\n                              dataAccess == 307 ? (\n                                <option value=\"Primary PM\">Primary PM</option>\n                              ) : (\n                                \"\"\n                              )}\n                            </>\n                          )}\n                        </select>\n                      </div>\n                    </div>\n                  </div>\n\n                  {(selecttype === \"Business Unit\" && dataAccess == 686) ||\n                  // dataAccess == 908 ||\n                  (dataAccess == 126 &&\n                    selecttype != \"customer\" &&\n                    selecttype != \"project\" &&\n                    selecttype != \"resource\" &&\n                    selecttype != \"Hierarchy\" &&\n                    selecttype != \"Primary PM\") ||\n                  (dataAccess == 250 &&\n                    selecttype != \"customer\" &&\n                    selecttype != \"project\" &&\n                    selecttype != \"Hierarchy\" &&\n                    selecttype != \"resource\" &&\n                    selecttype != \"Primary PM\") ||\n                  (dataAccess == 911 &&\n                    selecttype != \"customer\" &&\n                    selecttype != \"project\" &&\n                    selecttype != \"Hierarchy\" &&\n                    selecttype != \"resource\" &&\n                    selecttype != \"Primary PM\") ||\n                  (dataAccess == 307 &&\n                    selecttype != \"customer\" &&\n                    selecttype != \"project\" &&\n                    selecttype != \"Hierarchy\" &&\n                    selecttype != \"resource\" &&\n                    selecttype != \"Primary PM\") ||\n                  (dataAccess == 1100 &&\n                    selecttype != \"customer\" &&\n                    selecttype != \"project\" &&\n                    selecttype != \"resource\" &&\n                    selecttype != \"Hierarchy\" &&\n                    selecttype != \"Primary PM\") ||\n                  (dataAccess == 1300 &&\n                    selecttype != \"customer\" &&\n                    selecttype != \"project\" &&\n                    selecttype != \"Hierarchy\" &&\n                    selecttype != \"resource\" &&\n                    selecttype != \"Primary PM\") ||\n                  (dataAccess == 1200 &&\n                    selecttype != \"customer\" &&\n                    selecttype != \"project\" &&\n                    selecttype != \"Hierarchy\" &&\n                    selecttype != \"resource\" &&\n                    selecttype != \"Primary PM\") ||\n                  (dataAccess == 932 &&\n                    selecttype != \"customer\" &&\n                    selecttype != \"project\" &&\n                    selecttype != \"Hierarchy\" &&\n                    selecttype != \"resource\" &&\n                    selecttype != \"Primary PM\") ||\n                  (dataAccess == 908 &&\n                    selecttype != \"customer\" &&\n                    selecttype != \"project\" &&\n                    selecttype != \"Hierarchy\" &&\n                    selecttype != \"resource\" &&\n                    selecttype != \"Primary PM\") ||\n                  (dataAccess == 910 &&\n                    selecttype != \"customer\" &&\n                    selecttype != \"project\" &&\n                    selecttype != \"Hierarchy\" &&\n                    selecttype != \"resource\" &&\n                    selecttype != \"Primary PM\") ? (\n                    <div className=\" col-md-4 mb-2\">\n                      <div className=\"form-group row\">\n                        <label className=\"col-5\" htmlFor=\"Business Unit\">\n                          Business Unit\n                          <span className=\"required error-text ml-1\">*</span>\n                        </label>\n                        <span className=\"col-1 p-0\">:</span>\n                        <div\n                          className=\"multiselect col-6\"\n                          ref={(ele) => {\n                            ref.current[0] = ele;\n                          }}\n                        >\n                          <MultiSelect\n                            ArrowRenderer={ArrowRenderer}\n                            id=\"BusinessUnit\"\n                            options={departments}\n                            hasSelectAll={true}\n                            isLoading={false}\n                            shouldToggleOnHover={false}\n                            disableSearch={false}\n                            value={selectedDepartments}\n                            valueRenderer={generateDropdownLabel}\n                            disabled={false}\n                            onChange={(s) => {\n                              setSelectedDepartments(s);\n                              let filteredValues = [];\n                              s.forEach((d) => {\n                                filteredValues.push(d.value);\n                              });\n\n                              setFormData((prevVal) => ({\n                                ...prevVal,\n                                [\"BusinessUnit\"]: filteredValues.toString(),\n                              }));\n                              setValidationMessage(false);\n                            }}\n                          />\n                        </div>\n                      </div>\n                    </div>\n                  ) : selecttype == \"project\" || selecttype == \"customer\" ? (\n                    \"\"\n                  ) : (\n                    \"\"\n                  )}\n\n                  {selecttype == \"Hierarchy\" || dataAccess == 307 ? (\n                    <div className=\"col-md-4 mb-2\">\n                      <div className=\"form-group row\">\n                        <label className=\"col-5\" htmlFor=\"Name\">\n                          Name{\" \"}\n                          <span className=\"required error-text ml-1\"> *</span>\n                        </label>\n                        <span className=\"col-1 p-0\">:</span>\n                        <div className=\"col-6\">\n                          <input\n                            className=\"disableField\"\n                            name=\"Name\"\n                            type=\"text\"\n                            id=\"Name\"\n                            placeholder=\"\"\n                            value={label}\n                            disabled={true}\n                            defaultValue={loggedUserId}\n                            required\n                            readOnly\n                            onChange={handleChange}\n                          />\n                        </div>\n                      </div>\n                    </div>\n                  ) : (\n                    \"\"\n                  )}\n                  {selecttype == \"customer\" ? (\n                    <div className=\"col-md-4 mb-2\">\n                      <div className=\"form-group row\">\n                        <label className=\"col-5\" htmlFor=\"customerName\">\n                          Customer Name\n                          <span className=\"required error-text ml-1\"> *</span>\n                        </label>\n                        <span className=\"col-1 p-0\">:</span>\n                        <div className=\"col-6\">\n                          <div\n                            className=\"autoComplete-container react  reactsearchautocomplete\"\n                            id=\"autocomplete reactautocomplete\"\n                            ref={(ele) => {\n                              ref.current[0] = ele;\n                            }}\n                          >\n                            <ReactSearchAutocomplete\n                              items={customer}\n                              inputSearchString={CustomerName}\n                              type=\"Text\"\n                              name=\"Customer\"\n                              id=\"Customer\"\n                              className=\"err cancel\"\n                              onClear={() => {\n                                setFormData((prevProps) => ({\n                                  ...prevProps,\n                                  Customer: \"\",\n                                }));\n                              }}\n                              placeholder=\"Type minimum 3 characters\"\n                              fuseOptions={{\n                                keys: [\"id\", \"name\", \"cust_code\"],\n                              }}\n                              resultStringKeyName=\"name\"\n                              onSelect={(e) => {\n                                setFormData((prevProps) => ({\n                                  ...prevProps,\n                                  Customer: e.id,\n                                }));\n                              }}\n                              showIcon={false}\n                            />\n                            <span> {item.name}</span>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  ) : (\n                    \"\"\n                  )}\n                  {selecttype == \"project\" ? (\n                    <div className=\"col-md-4 mb-2\">\n                      <div className=\"form-group row\">\n                        <label className=\"col-5\" htmlFor=\"projectName\">\n                          Project Name\n                          <span className=\"required error-text ml-1\"> *</span>\n                        </label>\n                        <span className=\"col-1 p-0\">:</span>\n                        <div className=\" col-6\">\n                          <div\n                            className=\"autoComplete-container react  reactsearchautocomplete\"\n                            id=\"autocomplete reactautocomplete\"\n                            ref={(ele) => {\n                              ref.current[0] = ele;\n                            }}\n                          >\n                            <ReactSearchAutocomplete\n                              items={project}\n                              type=\"Text\"\n                              inputSearchString={projectname}\n                              name=\"Project\"\n                              id=\"Project\"\n                              className=\"err cancel\"\n                              onClear={() => {\n                                setFormData((prevProps) => ({\n                                  ...prevProps,\n                                  Project: \"\",\n                                }));\n                              }}\n                              placeholder=\"Type minimum 3 characters\"\n                              fuseOptions={{ keys: [\"id\", \"name\"] }}\n                              resultStringKeyName=\"name\"\n                              onSelect={(e) => {\n                                setFormData((prevProps) => ({\n                                  ...prevProps,\n                                  Project: e.id,\n                                }));\n                              }}\n                              showIcon={false}\n                            />\n                            <span> {item.name}</span>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  ) : (\n                    \"\"\n                  )}\n                  {selecttype == \"resource\" ? (\n                    <div className=\"col-md-4 mb-2\">\n                      <div className=\"form-group row\">\n                        <label className=\"col-5\" htmlFor=\"Resource Name\">\n                          Resource Name\n                          <span className=\"required error-text ml-1\"> *</span>\n                        </label>\n                        <span className=\"col-1 p-0\">:</span>\n                        <div className=\"col-6 \">\n                          <div\n                            className=\"autoComplete-container react  reactsearchautocomplete\"\n                            id=\"autocomplete reactautocomplete\"\n                            ref={(ele) => {\n                              ref.current[0] = ele;\n                            }}\n                          >\n                            <ReactSearchAutocomplete\n                              items={resource}\n                              inputSearchString={resourceName}\n                              type=\"Text\"\n                              name=\"Resource Name\"\n                              id=\"Resource Name\"\n                              className=\"err cancel\"\n                              onClear={() => {\n                                setFormData((prevProps) => ({\n                                  ...prevProps,\n                                  [\"Resource Name\"]: \"\",\n                                }));\n                              }}\n                              placeholder=\"Type minimum 3 characters\"\n                              fuseOptions={{ keys: [\"id\", \"name\"] }}\n                              resultStringKeyName=\"name\"\n                              onSelect={(e) => {\n                                setFormData((prevProps) => ({\n                                  ...prevProps,\n                                  [\"Resource Name\"]: e.id,\n                                }));\n                              }}\n                              showIcon={false}\n                            />\n                            <span> {item.name}</span>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  ) : (\n                    \"\"\n                  )}\n                  {selecttype == \"Primary PM\" ? (\n                    <div className=\"col-md-4 mb-2\">\n                      <div className=\"form-group row\">\n                        <label className=\"col-5\" htmlFor=\"Primary PM\">\n                          Primary PM\n                          <span className=\"required error-text ml-1\"> *</span>\n                        </label>\n                        <span className=\"col-1 p-0\">:</span>\n                        <div className=\"col-6 \">\n                          <div\n                            className=\"autoComplete-container react  reactsearchautocomplete\"\n                            id=\"autocomplete reactautocomplete\"\n                            ref={(ele) => {\n                              ref.current[0] = ele;\n                            }}\n                          >\n                            <ReactSearchAutocomplete\n                              items={manager}\n                              inputSearchString={pmname}\n                              type=\"Text\"\n                              name=\"Primary PM\"\n                              id=\"Primary PM\"\n                              className=\"err cancel\"\n                              onClear={() => {\n                                setFormData((prevProps) => ({\n                                  ...prevProps,\n                                  [\"Primary PM\"]: \"\",\n                                }));\n                              }}\n                              placeholder=\"Type minimum 3 characters\"\n                              fuseOptions={{ keys: [\"id\", \"name\"] }}\n                              resultStringKeyName=\"name\"\n                              onSelect={(e) => {\n                                setFormData((prevProps) => ({\n                                  ...prevProps,\n                                  [\"Primary PM\"]: e.id,\n                                }));\n                              }}\n                              showIcon={false}\n                            />\n                            <span> {item.name}</span>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  ) : (\n                    \"\"\n                  )}\n                  <div className=\" col-md-4 mb-2\">\n                    <div className=\"form-group row\">\n                      <label className=\"col-5\" htmlFor=\"Res.Location\">\n                        Res.Location\n                      </label>\n                      <span className=\"col-1 p-0\">:</span>\n                      <div className=\"col-6\">\n                        <MultiSelect\n                          ArrowRenderer={ArrowRenderer}\n                          id=\"ResLocation\"\n                          options={resLocation}\n                          hasSelectAll={true}\n                          value={selectedResLocation}\n                          disabled={false}\n                          valueRenderer={generateDropdownLabel}\n                          onChange={(e) => {\n                            setSelectedResLocation(e);\n                            let filteredCountry = [];\n                            e.forEach((d) => {\n                              filteredCountry.push(d.value);\n                            });\n                            setFormData((prevVal) => ({\n                              ...prevVal,\n                              [\"ResLocation\"]: filteredCountry.toString(),\n                            }));\n                          }}\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\" col-md-4 mb-2\">\n                    <div className=\"form-group row\">\n                      <label className=\"col-5\" htmlFor=\"Eng.Company\">\n                        Eng.Company\n                      </label>\n                      <span className=\"col-1 p-0\">:</span>\n                      <div className=\"col-6\">\n                        <MultiSelect\n                          ArrowRenderer={ArrowRenderer}\n                          id=\"EngCompany\"\n                          options={engCompany}\n                          hasSelectAll={true}\n                          isLoading={false}\n                          shouldToggleOnHover={false}\n                          disableSearch={false}\n                          value={selectedEngCompany}\n                          valueRenderer={generateDropdownLabel}\n                          onChange={(e) => {\n                            setSelectedEngCompany(e);\n                            let filteredvalue = [];\n                            e.forEach((d) => {\n                              filteredvalue.push(d.value);\n                            });\n                            setFormData((prevVal) => ({\n                              ...prevVal,\n                              [\"EngCompany\"]: filteredvalue.toString(),\n                            }));\n                          }}\n                          disabled={false}\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\" col-md-4 mb-2\">\n                    <div className=\"form-group row\">\n                      <label className=\"col-5\" htmlFor=\"captype\">\n                        Cap.Type\n                      </label>\n                      <span className=\"col-1 p-0\">:</span>\n                      <div className=\"col-6\">\n                        {formData.View == \"consol\" ? (\n                          <select\n                            id=\" captype\"\n                            name=\" captype\"\n                            className=\"disableField\"\n                            disabled={true}\n                            onChange={(e) => {\n                              setFormData((prev) => ({\n                                ...prev,\n                                [\"captype\"]: e.target.value,\n                                [\"capTypeName\"]: e.target.lkup_name,\n                              }));\n                            }}\n                            value={formData.captype}\n                          >\n                            {capType.map((Item) => (\n                              <option value={Item.value} key={Item.label}>\n                                {Item.label}\n                              </option>\n                            ))}\n                          </select>\n                        ) : (\n                          <select\n                            id=\" captype\"\n                            name=\" captype\"\n                            onChange={(e) => {\n                              setFormData((prev) => ({\n                                ...prev,\n                                [\"captype\"]: e.target.value,\n                              }));\n                              if (\n                                e.target.value === \"capacity\" ||\n                                e.target.value === \"available\"\n                              ) {\n                                setSelectedalloctype(alloctype);\n                              }\n                            }}\n                            value={formData.captype}\n                          >\n                            {capType.map((Item) => (\n                              <option value={Item.value} key={Item.label}>\n                                {Item.label}\n                              </option>\n                            ))}\n                          </select>\n                        )}\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\" col-md-4 mb-2\">\n                    <div className=\"form-group row\">\n                      <label className=\"col-5\" htmlFor=\"Alloc.Type\">\n                        Alloc.Type{\" \"}\n                        <span className=\"required error-text ml-1\">*</span>\n                      </label>\n                      <span className=\"col-1 p-0\">:</span>\n                      <div\n                        className=\"col-6 multiselect\"\n                        ref={(ele) => {\n                          ref.current[1] = ele;\n                        }}\n                      >\n                        {formData.captype == \"capacity\" ||\n                        formData.captype == \"available\" ||\n                        formData.View == \"consol\" ||\n                        selectview === \"consol\" ? (\n                          <MultiSelect\n                            ArrowRenderer={ArrowRenderer}\n                            id=\"AllocType\"\n                            className=\"disableField\"\n                            options={alloctype}\n                            hasSelectAll={true}\n                            value={selectedalloctype}\n                            disabled={true}\n                            selected={selectedalloctype}\n                            valueRenderer={generateDropdownLabel}\n                            onChange={(e) => {\n                              setSelectedalloctype(e);\n                              let filteredvalue = [];\n                              e.forEach((d) => {\n                                filteredvalue.push(d.value);\n                              });\n                              setFormData((prevVal) => ({\n                                ...prevVal,\n                                [\"AllocType\"]: filteredvalue.toString(),\n                              }));\n                              setValidationMessage(false);\n                            }}\n                          />\n                        ) : (\n                          <MultiSelect\n                            ArrowRenderer={ArrowRenderer}\n                            id=\"AllocType\"\n                            className=\"AllocType\"\n                            options={alloctype}\n                            hasSelectAll={true}\n                            value={selectedalloctype}\n                            disabled={false}\n                            selected={selectedalloctype}\n                            valueRenderer={generateDropdownLabel}\n                            onChange={(e) => {\n                              setSelectedalloctype(e);\n                              let filteredvalue = [];\n                              e.forEach((d) => {\n                                filteredvalue.push(d.value);\n                              });\n                              setFormData((prevVal) => ({\n                                ...prevVal,\n                                [\"AllocType\"]: filteredvalue.toString(),\n                              }));\n                              setValidationMessage(false);\n                            }}\n                          />\n                        )}\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\" col-md-4 mb-1\">\n                    <div className=\"form-group row\">\n                      <label className=\"col-5\" htmlFor=\"ResType\">\n                        Res.Type\n                      </label>\n                      <span className=\"col-1 p-0\">:</span>\n                      <div className=\"col-6\">\n                        <select\n                          className=\"ResType\"\n                          id=\"ResType\"\n                          onChange={(e) =>\n                            setFormData((prev) => ({\n                              ...prev,\n                              [\"ResType\"]: e.target.value,\n                            }))\n                          }\n                          value={formData.ResType}\n                        >\n                          <option value=\"all\">&lt;&lt;ALL&gt;&gt;</option>\n                          <option value=\"fte\">Employee</option>\n                          <option value=\"subk\">Contractors</option>\n                        </select>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\" col-md-4 mb-1\">\n                    <div className=\"form-group row\">\n                      <label className=\"col-5\" htmlFor=\"Month\">\n                        Month\n                      </label>\n                      <span className=\"col-1 p-0\">:</span>\n                      <div className=\"col-6\">\n                        <DatePicker\n                          id=\"month\"\n                          selected={month}\n                          onChange={handleDateChange}\n                          dateFormat=\"MMM-yyyy\"\n                          showMonthYearPicker\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"col-md-4 mb-2\">\n                    <div className=\"form-group row\">\n                      <label className=\"col-5\" htmlFor=\"View\">\n                        View\n                      </label>\n                      <span className=\"col-1 p-0\">:</span>\n                      <div className=\"col-6\" id=\"View\">\n                        <div className=\"row px-1\">\n                          <div className=\"col-7\">\n                            {selecttype == \"Hierarchy\" ||\n                            selecttype == \"project\" ||\n                            selecttype == \"resource\" ||\n                            selecttype == \"Primary PM\" ? (\n                              <select\n                                className=\"disableField\"\n                                disabled={true}\n                                id=\"View\"\n                                onChange={(e) => {\n                                  setFormData((prev) => ({\n                                    ...prev,\n                                    [\"View\"]: e.target.value,\n                                  }));\n                                  setSelectView(e.target.value);\n                                }}\n                                value={formData.View}\n                              >\n                                <option value=\"detail\">Resource</option>\n                                {selecttype == \"Business Unit\" ? (\n                                  <option value=\"consol\">Business Unit</option>\n                                ) : (\n                                  \"\"\n                                )}\n                              </select>\n                            ) : (\n                              <select\n                                id=\"View\"\n                                onChange={(e) => {\n                                  setFormData((prev) => ({\n                                    ...prev,\n                                    [\"View\"]: e.target.value,\n                                  }));\n                                  setSelectView(e.target.value);\n                                }}\n                                value={formData.View}\n                              >\n                                <option value=\"detail\">Resource</option>\n                                {selecttype == \"Business Unit\" ? (\n                                  <option value=\"consol\">Business Unit</option>\n                                ) : (\n                                  \"\"\n                                )}\n                              </select>\n                            )}\n                          </div>\n                          <div className=\"col-5\">\n                            {selectview == \"consol\" ||\n                            formData.View == \"consol\" ? (\n                              <select\n                                className=\"measure disableField\"\n                                id=\"measure\"\n                                disabled={true}\n                                value={formData.measure}\n                              >\n                                <option value=\"hrs\">Hrs</option>\n                                <option value=\"percent\">%</option>\n                              </select>\n                            ) : (\n                              <select\n                                className=\"measure\"\n                                id=\"measure\"\n                                onChange={(e) => {\n                                  setFormData((prev) => ({\n                                    ...prev,\n                                    [\"measure\"]: e.target.value,\n                                  }));\n                                }}\n                                value={formData.measure}\n                              >\n                                <option value=\"hrs\">Hrs</option>\n                                <option value=\"percent\">%</option>\n                              </select>\n                            )}\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\" col-md-4 mb-2\">\n                    <div className=\"form-group row\">\n                      <label className=\"col-5\" htmlFor=\"Financialmeasures\">\n                        Financial Measures\n                      </label>\n                      <span className=\"col-1 p-0\">:</span>\n                      <div className=\"col-6\">\n                        <MultiSelect\n                          ArrowRenderer={ArrowRenderer}\n                          id=\"Financialmeasures\"\n                          options={financialMeasures}\n                          hasSelectAll={true}\n                          isLoading={false}\n                          value={selectedFinancialMeasures}\n                          selected={selectedFinancialMeasures}\n                          valueRenderer={generateDropdownLabel}\n                          disableSearch={false}\n                          onChange={(e) => {\n                            setSelectedFinancialMeasures(e);\n                            let filteredvalue = [];\n                            e.forEach((d) => {\n                              filteredvalue.push(d.value);\n                            });\n                            setFormData((prevVal) => ({\n                              ...prevVal,\n                              [\"Financialmeasures\"]: filteredvalue.toString(),\n                            }));\n                          }}\n                          disabled={false}\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\" col-md-4 mb-2\">\n                    <div className=\"form-group row\">\n                      <label className=\"col-5\" htmlFor=\"Contract Terms\">\n                        Contract Terms\n                      </label>\n                      <span className=\"col-1 p-0\">:</span>\n                      <div className=\"col-6\">\n                        <MultiSelect\n                          ArrowRenderer={ArrowRenderer}\n                          id=\"ContractTerms\"\n                          options={contractTerms}\n                          hasSelectAll={true}\n                          value={selectedContractTerms}\n                          isLoading={false}\n                          shouldToggleOnHover={false}\n                          disableSearch={false}\n                          disabled={false}\n                          valueRenderer={generateDropdownLabel}\n                          onChange={(e) => {\n                            setSelectedContractorTerms(e);\n                            let filteredCountry = [];\n                            e.forEach((d) => {\n                              filteredCountry.push(d.value);\n                            });\n                            setFormData((prevVal) => ({\n                              ...prevVal,\n                              [\"ContractTerms\"]: filteredCountry.toString(),\n                            }));\n                          }}\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  {selecttype == \"project\" || selecttype == \"customer\" ? (\n                    <div className=\"col-md-4 mb-2\">\n                      <div className=\"form-group row\">\n                        <label className=\"col-5\" htmlFor=\"Source\">\n                          Source\n                        </label>\n                        <span className=\"col-1 p-0\">:</span>\n                        <div className=\"col-6\">\n                          <select\n                            className=\"Source\"\n                            id=\"Source\"\n                            onChange={(e) => {\n                              setFormData((prev) => ({\n                                ...prev,\n                                [\"Source\"]: e.target.value,\n                              }));\n                            }}\n                            value={formData.Source}\n                          >\n                            <option value=\"-1\">&lt;&lt;ALL&gt;&gt;</option>\n                            <option value=\"PPM\">PPM</option>\n                            <option value=\"Projector\">Projector</option>\n                          </select>\n                        </div>\n                      </div>\n                    </div>\n                  ) : (\n                    \"\"\n                  )}\n                  {selecttype == \"project\" || selecttype == \"customer\" ? (\n                    <div className=\"col-md-4 mb-2\">\n                      <div className=\"form-group row\">\n                        <label className=\"col-5\" htmlFor=\"engLocation\">\n                          Eng.Location\n                        </label>\n                        <span className=\"col-1 \">:</span>\n                        <div className=\"col-6\">\n                          <MultiSelect\n                            ArrowRenderer={ArrowRenderer}\n                            id=\"engLocation\"\n                            options={engLocation}\n                            hasSelectAll={true}\n                            value={selectedEngLocation}\n                            valueRenderer={generateDropdownLabel}\n                            disabled={false}\n                            onChange={(e) => {\n                              setSelectedEngLocation(e);\n                              let filteredCountry = [];\n                              e.forEach((d) => {\n                                filteredCountry.push(d.value);\n                              });\n\n                              if (filteredCountry.length === 8) {\n                                setFormData((prevVal) => ({\n                                  ...prevVal,\n                                  [\"engLocation\"]: \"-1\",\n                                }));\n                                return;\n                              } else {\n                                setFormData((prevVal) => ({\n                                  ...prevVal,\n                                  [\"engLocation\"]: filteredCountry.toString(),\n                                }));\n                              }\n                            }}\n                          />\n                        </div>\n                      </div>\n                    </div>\n                  ) : (\n                    \"\"\n                  )}\n                  {/* {isPmAndAbove.userExists == true ? ( */}\n                  <>\n                    <div className=\" col-md-4 mb-2\">\n                      <div className=\"form-group row\">\n                        <label className=\"col-5\" htmlFor=\"CSL\">\n                          CSL\n                        </label>\n                        <span className=\"col-1 p-0\">:</span>\n                        <div className=\"col-6\">\n                          <MultiSelect\n                            ArrowRenderer={ArrowRenderer}\n                            id=\"Csl\"\n                            options={csl}\n                            hasSelectAll={true}\n                            value={selectedCsl}\n                            shouldToggleOnHover={false}\n                            disableSearch={false}\n                            selected={selectedCsl}\n                            valueRenderer={generateDropdownLabel}\n                            disabled={false}\n                            onChange={(e) => {\n                              setSelectedCsl(e);\n                              let filteredCustomer = [];\n                              e.forEach((d) => {\n                                filteredCustomer.push(d.value);\n                              });\n                              setFormData((prevVal) => ({\n                                ...prevVal,\n                                [\"Csl\"]: filteredCustomer.toString(),\n                              }));\n                            }}\n                          />\n                        </div>\n                      </div>\n                    </div>\n                    <div className=\" col-md-4 mb-2\">\n                      <div className=\"form-group row\">\n                        <label className=\"col-5\" htmlFor=\"DP\">\n                          DP\n                        </label>\n                        <span className=\"col-1 p-0\">:</span>\n                        <div className=\"col-6\">\n                          <MultiSelect\n                            ArrowRenderer={ArrowRenderer}\n                            id=\"Dp\"\n                            options={dp}\n                            hasSelectAll={true}\n                            value={selectedDp}\n                            shouldToggleOnHover={false}\n                            disableSearch={false}\n                            selected={selectedDp}\n                            disabled={false}\n                            valueRenderer={generateDropdownLabel}\n                            onChange={(e) => {\n                              setSelectedDp(e);\n                              let filteredCustomer = [];\n                              e.forEach((d) => {\n                                filteredCustomer.push(d.value);\n                              });\n                              setFormData((prevVal) => ({\n                                ...prevVal,\n                                [\"Dp\"]: filteredCustomer.toString(),\n                              }));\n                            }}\n                          />\n                        </div>\n                      </div>\n                    </div>\n                    {formData.View == \"consol\" &&\n                    selecttype == \"Business Unit\" ? (\n                      <div className=\" col-md-4 mb-2\">\n                        <div className=\"form-group row\">\n                          <label className=\"col-5\" htmlFor=\"SummaryBy\">\n                            Summary By\n                            <span className=\"required error-text ml-1\">*</span>\n                          </label>\n                          <span className=\"col-1 p-0\">:</span>\n                          <div\n                            className=\"col-6 multiselect\"\n                            ref={(ele) => {\n                              ref.current[1] = ele;\n                            }}\n                          >\n                            <MultiSelect\n                              ArrowRenderer={ArrowRenderer}\n                              name=\"summaryBy\"\n                              id=\"summaryBy\"\n                              options={summaryBy}\n                              hasSelectAll={true}\n                              value={selectedSummaryBy}\n                              selected={selectedSummaryBy}\n                              valueRenderer={generateDropdownLabel}\n                              disabled={false}\n                              onChange={(e) => {\n                                setSelectedSummaryBy(e);\n                                let filteredType = [];\n                                e.forEach((d) => {\n                                  filteredType.push(d.value);\n                                });\n                                setFormData((prevVal) => ({\n                                  ...prevVal,\n                                  [\"summaryBy\"]: filteredType.toString(),\n                                }));\n                                setValidationMessage(false);\n                              }}\n                            />\n                          </div>\n                        </div>\n                      </div>\n                    ) : (\n                      \"\"\n                    )}\n                  </>\n                  {/* ) : (\n                    \"\"\n                  )} */}\n                  <div className=\"col-md-12 col-sm-12 col-xs-12 btn-container center my-1\">\n                    <button\n                      type=\"submit\"\n                      id=\"search\"\n                      name=\"search\"\n                      className=\"btn btn-primary\"\n                      onClick={handleSearch}\n                    >\n                      <FaSearch /> Search\n                    </button>\n                    {selecttype == \"Hierarchy\" ? (\n                      \"\"\n                    ) : (\n                      <button\n                        type=\"submit\"\n                        id=\"exceptionReports\"\n                        name=\"exceptionReports\"\n                        className=\"btn btn-primary\"\n                        onClick={ExceptionReports}\n                      >\n                        <AiOutlineException />\n                        {/* <FaFileCircleExclamation /> */}\n                        Exception Reports\n                      </button>\n                    )}\n                  </div>\n                </div>\n              </div>\n            </CCollapse>\n            {selectview == \"consol\" ? (\n              <>\n                {formData.summaryBy?.includes(\"Region\") && displayStateC ? (\n                  <div className=\"my-2\">\n                    <h2>Summary By Region</h2>\n                    <RevenueForecastBuTable\n                      data={BURegion}\n                      expandedCols={[]}\n                      colExpandState={[]}\n                    />\n                  </div>\n                ) : (\n                  \" \"\n                )}\n                {formData.summaryBy?.includes(\"Practice\") && displayStateD ? (\n                  <div className=\"my-2\">\n                    <h2>Summary By Practice</h2>\n                    <RevenueForecastBuTable\n                      data={BUPractice}\n                      expandedCols={[]}\n                      colExpandState={[]}\n                    />\n                  </div>\n                ) : (\n                  \" \"\n                )}\n                {formData.summaryBy?.includes(\"Customer\") && displayStateE ? (\n                  <div className=\"my-2\">\n                    <h2>Summary By Customer</h2>\n                    <RevenueForecastBuCustomer\n                      data={BUCustomer}\n                      expandedCols={[]}\n                      colExpandState={[]}\n                    />\n                  </div>\n                ) : (\n                  \" \"\n                )}\n              </>\n            ) : selectview == \"detail\" ? (\n              utilizationSummary && benchSummary && actionItems ? (\n                <div>\n                  {displayState ? (\n                    <div className=\"mb-2\">\n                      <div className=\"group mb-1 customCard\">\n                        <div className=\"col-md-12 collapseHeader\">\n                          <h2>Utilization Summary</h2>\n                          <div\n                            onClick={() => {\n                              setvisibleA(!visibleA);\n                              visibleA\n                                ? setCheveronIconA(FaChevronCircleUp)\n                                : setCheveronIconA(FaChevronCircleDown);\n                            }}\n                          >\n                            <span style={{ cursor: \"pointer\" }}>\n                              {cheveronIconA}\n                            </span>\n                          </div>\n                        </div>\n                      </div>\n                      <CCollapse visible={!visibleA}>\n                        <MonthlyForecastRevenueTableComponent\n                          data={utilizationSummary}\n                          expandedCols={[]}\n                          colExpandState={[]}\n                        />\n                      </CCollapse>\n                    </div>\n                  ) : (\n                    \"\"\n                  )}\n                  {displayStateA ? (\n                    <div className=\"mb-2\">\n                      <div className=\"group mb-1 customCard\">\n                        <div className=\"col-md-12 collapseHeader\">\n                          <h2>Bench Summary</h2>\n                          <div\n                            onClick={() => {\n                              setvisibleB(!visibleB);\n                              visibleB\n                                ? setCheveronIconB(FaChevronCircleUp)\n                                : setCheveronIconB(FaChevronCircleDown);\n                            }}\n                          >\n                            <span style={{ cursor: \"pointer\" }}>\n                              {cheveronIconB}\n                            </span>\n                          </div>\n                        </div>\n                      </div>\n                      <CCollapse visible={!visibleB}>\n                        <MonthlyForecastRevenueTableComponent\n                          data={benchSummary}\n                          expandedCols={[]}\n                          colExpandState={[]}\n                        />\n                      </CCollapse>\n                    </div>\n                  ) : (\n                    \"\"\n                  )}\n                  {displayStateB ? (\n                    <div className=\"\">\n                      <div className=\"collapseHeader revForcast\">\n                        <div className=\"leftSection\">\n                          <div className=\"legendContainer\">\n                            <div className=\"legend blue\">\n                              <div className=\"legendCircle\"></div>\n                              <div className=\"legendTxt\">Holiday</div>\n                            </div>\n                            <div className=\"legend pink\">\n                              <div className=\"legendCircle\"></div>\n                              <div className=\"legendTxt\">Leave</div>\n                            </div>\n                            <button\n                              id=\"actionItems\"\n                              name=\"actionItems\"\n                              className=\"btn btn-primary\"\n                              onClick={() => {\n                                setButtonPopup(true);\n                                handleActionItems();\n                              }}\n                            >\n                              Action Items\n                            </button>\n                          </div>\n                        </div>\n                        <div className=\"rightSection\">\n                          <label>Avg :</label>\n                          <select\n                            id=\"Avg\"\n                            onChange={(e) =>\n                              setFormData((prev) => ({\n                                ...prev,\n                                [\"Avg\"]: e.target.value,\n                              }))\n                            }\n                          >\n                            <option value=\"\" selected>\n                              {/* &lt;&lt;Please Select&gt;&gt; */}\n                            </option>\n                            <option value=\"ge\">&#8805;</option>\n                            <option value=\"le\">&#8804;</option>\n                            <option value=\"gt\">&#62;</option>\n                            <option value=\"lt\">&#60;</option>\n                            <option value=\"eq\">&#9868;</option>\n                          </select>\n                          <input\n                            id=\"avgtextvalue\"\n                            name=\"avgtextvalue\"\n                            onChange={(e) =>\n                              setFormData((prev) => ({\n                                ...prev,\n                                [\"avgtextvalue\"]: e.target.value,\n                              }))\n                            }\n                          />\n                          %\n                          <span className=\"ml-2 chevronContainer\">\n                            <AiOutlineLeftSquare\n                              cursor=\"pointer\"\n                              size={\"2em\"}\n                              onClick={subtractHandler}\n                            />\n                            <span>{moment(month).format(\"MMM-YYYY\")}</span>\n                            <AiOutlineRightSquare\n                              cursor=\"pointer\"\n                              size={\"2em\"}\n                              onClick={addHandler}\n                            />\n                          </span>\n                          <span>\n                            <RiFileExcel2Line\n                              size=\"1.5em\"\n                              title=\"Export to Excel\"\n                              style={{ color: \"green\", float: \"right\" }}\n                              cursor=\"pointer\"\n                              onClick={(e) => {\n                                setExcel(\"ResourceCapacity\");\n                                handleOnExport();\n                              }}\n                            />\n                          </span>\n                        </div>\n                      </div>\n                      <div className=\"mt-2\">\n                        <MonthlyForecastRevenueCalenderTable\n                          data={actionTable}\n                          expandedCols={[\n                            \"emp_cadre\",\n                            \"BusinessUnit\",\n                            \"Supervisor\",\n                          ]}\n                          colExpandState={[\"0\", \"1\", \"Name\"]}\n                          formData={formData}\n                          setFormData={setFormData}\n                          setCapType={setCapType}\n                          capType={capType}\n                          value={value}\n                          month={month}\n                          setMonth={setMonth}\n                          formattedMonth={formattedMonth}\n                          setsearchingA={setsearchingA}\n                          actionPopup={actionPopup}\n                          setActionPopup={setActionPopup}\n                          dataAccess={dataAccess}\n                        />\n                      </div>\n                    </div>\n                  ) : (\n                    \"\"\n                  )}\n                </div>\n              ) : (\n                \"\"\n              )\n            ) : (\n              \"\"\n            )}\n            {reportsTable ? (\n              <div>\n                <span>\n                  <RiFileExcel2Line\n                    size=\"1.5em\"\n                    title=\"Export to Excel\"\n                    style={{ color: \"green\", float: \"right\" }}\n                    cursor=\"pointer\"\n                    onClick={(e) => {\n                      setExcel(tempMailsResult);\n                      handleOnExport();\n                    }}\n                  />\n                </span>\n                <div className=\"mt-2 mb-2\">\n                  <h2>Staff With Invalid Email ID</h2>\n                  <ExceptionReportsTable\n                    data={tempMailsResult}\n                    expandedCols={[\n                      \"resType\",\n                      \"bu\",\n                      \"country\",\n                      \"project_mgr\",\n                      \"csl\",\n                      \"dp\",\n                    ]}\n                    colExpandState={[\"0\", \"1\", \"resource_name\"]}\n                  />\n                </div>\n                <span>\n                  <RiFileExcel2Line\n                    size=\"1.5em\"\n                    title=\"Export to Excel\"\n                    style={{ color: \"green\", float: \"right\" }}\n                    cursor=\"pointer\"\n                    onClick={(e) => {\n                      setExcel(resWithoutBUResult);\n                      handleOnExport();\n                    }}\n                  />\n                </span>\n                <div className=\"mt-2 mb-2\">\n                  <h2>Staff Without BU Mapping</h2>\n                  <ExceptionReportsTable\n                    data={resWithoutBUResult}\n                    expandedCols={[\n                      \"resType\",\n                      \"bu\",\n                      \"country\",\n                      \"supervisor\",\n                      \"project_mgr\",\n                      \"csl\",\n                      \"dp\",\n                    ]}\n                    colExpandState={[\"0\", \"1\", \"resource_name\"]}\n                  />\n                </div>{\" \"}\n                <span>\n                  <RiFileExcel2Line\n                    size=\"1.5em\"\n                    title=\"Export to Excel\"\n                    style={{ color: \"green\", float: \"right\" }}\n                    cursor=\"pointer\"\n                    onClick={() => {\n                      setExcel(resWithZerobillRateResult);\n                      handleOnExport();\n                    }}\n                  />\n                </span>\n                <div className=\"mt-2 mb-2\">\n                  <h2>Staff with non-billable allocations</h2>\n                  <ExceptionReportsTable\n                    data={resWithZerobillRateResult}\n                    expandedCols={[\n                      \"resType\",\n                      \"bu\",\n                      \"country\",\n                      \"project_mgr\",\n                      \"csl\",\n                      \"dp\",\n                    ]}\n                    colExpandState={[\"0\", \"1\", \"resource_name\"]}\n                  />\n                </div>\n                <span>\n                  <RiFileExcel2Line\n                    size=\"1.5em\"\n                    title=\"Export to Excel\"\n                    style={{ color: \"green\", float: \"right\" }}\n                    cursor=\"pointer\"\n                    onClick={() => {\n                      setExcel(resWithNoEndDateResult);\n                      handleOnExport();\n                    }}\n                  />\n                </span>\n                <div className=\"mt-2 mb-2\">\n                  <h2>Inactive Staff with missing Start/end Dates</h2>\n                  <ExceptionReportsTable\n                    data={resWithNoEndDateResult}\n                    expandedCols={[\n                      \"resType\",\n                      \"bu\",\n                      \"country\",\n                      \"supervisor\",\n                      \"project_mgr\",\n                      \"csl\",\n                      \"dp\",\n                    ]}\n                    colExpandState={[\"0\", \"1\", \"resource_name\"]}\n                  />\n                </div>\n                <span>\n                  <RiFileExcel2Line\n                    size=\"1.5em\"\n                    title=\"Export to Excel\"\n                    style={{ color: \"green\", float: \"right\" }}\n                    cursor=\"pointer\"\n                    onClick={() => {\n                      setExcel(allocBeyondEndDateResult);\n                      handleOnExport();\n                    }}\n                  />\n                </span>\n                <div className=\"mt-2 mb-2\">\n                  <h2>Inactive Staff with Allocations after End Date</h2>\n                  <ExceptionReportsTable\n                    data={allocBeyondEndDateResult}\n                    expandedCols={[\n                      \"resType\",\n                      \"bu\",\n                      \"country\",\n                      \"supervisor\",\n                      \"project_mgr\",\n                      \"csl\",\n                      \"dp\",\n                    ]}\n                    colExpandState={[\"0\", \"1\", \"resource_name\"]}\n                  />\n                </div>\n                <span>\n                  <RiFileExcel2Line\n                    size=\"1.5em\"\n                    title=\"Export to Excel\"\n                    style={{ color: \"green\", float: \"right\" }}\n                    cursor=\"pointer\"\n                    onClick={() => {\n                      setExcel(resWithoutDesignationResult);\n                      handleOnExport();\n                    }}\n                  />\n                </span>\n                <div className=\"mt-2 mb-2\">\n                  <h2>Staff with missing Designation</h2>\n                  <ExceptionReportsTable\n                    data={resWithoutDesignationResult}\n                    expandedCols={[\n                      \"resType\",\n                      \"bu\",\n                      \"country\",\n                      \"supervisor\",\n                      \"project_mgr\",\n                      \"csl\",\n                      \"dp\",\n                      \"designation\",\n                    ]}\n                    colExpandState={[\"0\", \"1\", \"resource_name\"]}\n                  />\n                </div>\n                <span>\n                  <RiFileExcel2Line\n                    size=\"1.5em\"\n                    title=\"Export to Excel\"\n                    style={{ color: \"green\", float: \"right\" }}\n                    cursor=\"pointer\"\n                    onClick={() => {\n                      setExcel(projectsWithoutBUResult);\n                      handleOnExport();\n                    }}\n                  />\n                </span>\n                <div className=\"mt-2 mb-2 \">\n                  <h2>Projects with Missing BU</h2>\n                  <ExceptionReportsTable\n                    data={projectsWithoutBUResult}\n                    expandedCols={[\"bu\", \"country\", \"project_mgr\", \"csl\", \"dp\"]}\n                    colExpandState={[\"0\", \"0\", \"project_code\"]}\n                  />\n                </div>\n                <span>\n                  <RiFileExcel2Line\n                    size=\"1.5em\"\n                    title=\"Export to Excel\"\n                    style={{ color: \"green\", float: \"right\" }}\n                    cursor=\"pointer\"\n                    onClick={() => {\n                      setExcel(resRateLessCostResult);\n                      handleOnExport();\n                    }}\n                  />\n                </span>\n                <div className=\"mt-2 mb-2\">\n                  <h2>Staff with Bill rate lower than Cost Rate</h2>\n                  <ExceptionReportsTable\n                    data={resRateLessCostResult}\n                    expandedCols={[\n                      \"resType\",\n                      \"bu\",\n                      \"country\",\n                      \"project_mgr\",\n                      \"csl\",\n                      \"dp\",\n                    ]}\n                    colExpandState={[\"0\", \"1\", \"resource_name\"]}\n                  />\n                </div>\n                <span>\n                  <RiFileExcel2Line\n                    size=\"1.5em\"\n                    title=\"Export to Excel\"\n                    style={{ color: \"green\", float: \"right\" }}\n                    cursor=\"pointer\"\n                    onClick={() => {\n                      setExcel(resWithZeroRoleCostResult);\n                      handleOnExport();\n                    }}\n                  />\n                </span>\n                <div className=\"mt-2 mb-2\">\n                  <h2>Staff with No Cost Rate</h2>\n                  <ExceptionReportsTable\n                    data={resWithZeroRoleCostResult}\n                    expandedCols={[\n                      \"resType\",\n                      \"bu\",\n                      \"country\",\n                      \"project_mgr\",\n                      \"csl\",\n                      \"dp\",\n                      \"role_type\",\n                      \"designation\",\n                      \"cadre\",\n                    ]}\n                    colExpandState={[\"0\", \"1\", \"resource_name\"]}\n                  />\n                </div>\n              </div>\n            ) : (\n              \"\"\n            )}\n          </div>\n          {searching ? <Loader handleAbort={handleBuAbort} /> : \"\"}\n          {searchingA ? <Loader handleAbort={handleAbort} /> : \"\"}\n          {actionItemsSearching ? <Loader handleAbort={handleAbort} /> : \"\"}\n          {displayHierarchy ? <Loader handleAbort={handleAbort} /> : \"\"}\n          {displayExceptionReports ? <Loader handleAbort={handleAbort} /> : \"\"}\n\n          {buttonPopup ? (\n            <MonthlyForecastRevenuePopUp\n              buttonPopup={buttonPopup}\n              setButtonPopup={setButtonPopup}\n              actionItems={actionItems}\n              setActionItems={setActionItems}\n              rows={rows}\n              actionTable={actionTable}\n              handleActionItems={handleActionItems}\n            />\n          ) : (\n            \" \"\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\nexport default RevenueForecastFilters;\n","import React, { useRef, useEffect, useState, useLayoutEffect } from \"react\";\nimport moment from \"moment\";\nimport axios from \"axios\";\nimport { environment } from \"../../environments/environment\";\nimport RevenueForecastFilters from \"./RevenueForecastFilters\";\nimport { AiFillWarning } from \"react-icons/ai\";\nimport { useLocation } from \"react-router-dom\";\nimport { BiCheck } from \"react-icons/bi\";\nimport ScreenBreadcrumbs from \"../Common/ScreenBreadcrumbs\";\nimport { parseISO } from \"date-fns\";\nimport { FaChevronCircleDown, FaChevronCircleUp } from \"react-icons/fa\";\nimport GlobalValidation from \"../ValidationComponent/GlobalValidation\";\nfunction RevenueForecast() {\n  const [dataAccess, setDataAccess] = useState(690);\n  const [data2, setData2] = useState([]);\n  const loggedUserId = localStorage.getItem(\"resId\");\n  const loggedResourceId = Number(loggedUserId) + 1;\n  const [selecttype, setSelectType] = useState(\n    dataAccess == 600 ||\n      dataAccess == 641 ||\n      dataAccess == 690 ||\n      dataAccess == 930\n      ? \"customer\"\n      : \"Business Unit\"\n  );\n\n  const [type, setType] = useState(\"Hierarchy\");\n  const [capType, setCapType] = useState([\n    { value: \"actualHrs\", label: \"Actual Hrs\" },\n    { value: \"allocations\", label: \"Allocation Hrs\" },\n    { value: \"approvedHrs\", label: \"Approved Hrs\" },\n    { value: \"assigned\", label: \"Assigned Hrs\" },\n    { value: \"available\", label: \"Available Hrs\" },\n    { value: \"capacity\", label: \"Net Capacity Hrs\" },\n    { value: \"unapprovedHrs\", label: \"Unapproved Hrs\" },\n    { value: \"actAppr\", label: \"Variance: Actual - Approved Hrs\" },\n    { value: \"unassigned\", label: \"Variance: Allocation - Assigned Hrs\" },\n    { value: \"allocAct\", label: \"Variance: Allocation - Actual Hrs\" },\n    { value: \"allocAppr\", label: \"Variance: Allocation - Approved Hrs\" },\n    { value: \"assAct\", label: \"Variance: Assigned - Actual Hrs\" },\n    { value: \"assAppr\", label: \"Variance: Assigned - Approved Hrs\" },\n  ]);\n  const [country, setCountry] = useState([]);\n  const [customer, setCustomer] = useState([]);\n  const [departments, setDepartments] = useState([]);\n  const [selectedDepartments, setSelectedDepartments] = useState([]);\n  const [engCompany, setEngCompany] = useState([{}]);\n  const [selectedEngCompany, setSelectedEngCompany] = useState([]);\n  const [csl, setCsl] = useState([]);\n  const [selectedCsl, setSelectedCsl] = useState([]);\n  const [dp, setDp] = useState([]);\n  const [selectedDp, setSelectedDp] = useState([]);\n  const [project, setProject] = useState([]);\n  const [engLocation, setEngLocation] = useState([]);\n  const [selectedEngLocation, setSelectedEngLocation] = useState([]);\n  const [resource, setResource] = useState([]);\n  const [resourceName, setResourceName] = useState(\"\");\n  const [manager, setManager] = useState([]);\n  const [pmname, setPmName] = useState(\"\");\n  const [actionTable, setActionTable] = useState([]);\n  const [summaryBy, setSummaryBy] = useState([\n    { value: \"Region\", label: \"Region\" },\n    { value: \"Practice\", label: \"Practice\" },\n    { value: \"Customer\", label: \"Customer\" },\n  ]);\n  const [selectedSummaryBy, setSelectedSummaryBy] = useState([\n    {\n      label: \"Region\",\n      value: \"Region\",\n    },\n  ]);\n  const [financialMeasures, setFinancialMeasures] = useState([\n    { value: \"capacity\", label: \"Net Capacity\" },\n    { value: \"billAppr\", label: \"Billable Approved Hrs\" },\n    { value: \"billApprNet\", label: \"Billable Approved %\" },\n    { value: \"Revenue\", label: \"Planned Revenue\" },\n    { value: \"AssRevenue\", label: \"Assigned Revenue\" },\n    { value: \"ActRevenue\", label: \"Actual Revenue\" },\n    { value: \"ApprRevenue\", label: \"Approved Revenue\" },\n    { value: \"RecRevenue\", label: \"Recognized Revenue\" },\n    { value: \"AvgCost\", label: \"PR Cost Adjusted (Role)\" },\n    { value: \"NAvgCost\", label: \"PR Cost  (Role)\" },\n    { value: \"AcGM\", label: \"PR GM % Adjusted (Role)\" },\n    { value: \"NAcGM\", label: \"PR GM %  (Role)\" },\n    { value: \"RRCost\", label: \"RR Cost Adjusted (Role)\" },\n    { value: \"NRRCost\", label: \"RR Cost (Role)\" },\n    { value: \"RRGM\", label: \"RR GM % Adjusted (Role)\" },\n    { value: \"NRRGM\", label: \"RR GM % (Role)\" },\n    // { value: \"TrueCost\", label: \"Cost (True)\" },\n    // { value: \"TcGM\", label: \"GM % (True)\" },\n  ]);\n  const [selectedFinancialMeasures, setSelectedFinancialMeasures] = useState([\n    {\n      label: \"Planned Revenue\",\n      value: \"Revenue\",\n    },\n  ]);\n\n  const [selectview, setSelectView] = useState(\"detail\");\n\n  const [resLocation, setResLocation] = useState([{}]);\n  const [selectedResLocation, setSelectedResLocation] = useState([]);\n  const [contractTerms, setContractTerms] = useState([{}]);\n  const [selectedContractTerms, setSelectedContractorTerms] = useState([]);\n  const [tableData, setTableData] = useState([]);\n  const [utilizationSummary, setUtilizationSummary] = useState([]);\n  const [benchSummary, setBenchSummary] = useState([]);\n  const [displayState, setDisplayState] = useState(false);\n  const [displayStateA, setDisplayStateA] = useState(false);\n  const [displayStateB, setDisplayStateB] = useState(false);\n\n  const [searching, setSearching] = useState(false);\n  const [displayHierarchy, setDisplayHierarchy] = useState(false);\n  const [hierarchydata, setHierarchyData] = useState([{}]);\n  const abortController = useRef([]);\n  const [managerProjects, setManagerProject] = useState([]);\n  const [hierarchyId, setHierarchyId] = useState(loggedResourceId);\n  const loggedUserName = localStorage.getItem(\"resName\");\n  const [label, setLabel] = useState(loggedUserName);\n  const [alloctype, setAlloctype] = useState([\n    { value: \"billable\", label: \"Billable\" },\n    { value: \"nonBillUtil\", label: \"Non Billable Utilized\" },\n    { value: \"nonBillShad\", label: \"Non Billable Shadow\" },\n    { value: \"nonBillEnb\", label: \"Non Billable Enabled\" },\n    { value: \"nonBillCliPrep\", label: \"Non Billable Client Prep\" },\n    { value: \"nonBillNonUtil\", label: \"Non Billable Non Utilized\" },\n    { value: \"nonBillInnov\", label: \"Non-billable Innovation\" },\n  ]);\n  const [selectedalloctype, setSelectedalloctype] = useState(alloctype);\n  const [projectname, setProjectName] = useState(\"\");\n  const [visible, setvisible] = useState(false);\n  const [cheveronIcon, setCheveronIcon] = useState(FaChevronCircleUp);\n  const ref = useRef([]);\n\n  const pageurl = \"http://10.11.12.149:3000/#/resource/capacity\";\n  const page_Name = \"Utilization Analysis\";\n  const location = useLocation();\n  const searchParams = new URLSearchParams(location.search);\n  const id = searchParams.get(\"id\");\n  const [editmsg, setEditAddmsg] = useState(false);\n  const [filterData, setFilterData] = useState([]);\n\n  const [routes, setRoutes] = useState([]);\n  let textContent = \"Revenue Metrics\";\n  let currentScreenName = [\"Monthly Revenue Forecast\"];\n\n  useEffect(() => {\n    getMenus();\n  }, [dataAccess]);\n\n  const getMenus = () => {\n    // setMenusData\n\n    axios\n      .get(baseUrl + `/CommonMS/master/getMenus?loggedUserId=${loggedUserId}`)\n      .then((resp) => {\n        // const getData = resp.data;\n        let getData = resp.data.map((menu) => {\n          if (menu.subMenus) {\n            menu.subMenus = menu.subMenus.filter(\n              (subMenu) =>\n                subMenu.display_name !== \"Monthly Revenue Trend\" &&\n                subMenu.display_name !== \"Revenue & Margin Variance\" &&\n                subMenu.display_name !== \"Rev. Projections\" &&\n                subMenu.display_name !== \"Project Timesheet (Deprecated)\" &&\n                subMenu.display_name !== \"Financial Plan & Review\"\n            );\n          }\n          return menu;\n        });\n        setData2(getData);\n\n        getData.forEach((item) => {\n          if (item.display_name === textContent) {\n            setRoutes([item]);\n          }\n        });\n        const revenueForcastSubMenu = getData\n          .find((item) => item.display_name === \"Revenue Metrics\")\n          .subMenus.find(\n            (subMenu) => subMenu.display_name === \"Monthly Revenue Forecast\"\n          );\n\n        const accessLevel = revenueForcastSubMenu\n          ? revenueForcastSubMenu.userRoles.includes(\"911\")\n            ? 911\n            : revenueForcastSubMenu.userRoles.includes(\"126\")\n            ? 126\n            : revenueForcastSubMenu.userRoles.includes(\"908\")\n            ? 908\n            : revenueForcastSubMenu.userRoles.includes(\"910\")\n            ? 910\n            : revenueForcastSubMenu.userRoles.includes(\"911\") &&\n              revenueForcastSubMenu.userRoles.includes(\"46\")\n            ? 1100\n            : revenueForcastSubMenu.userRoles.includes(\"307\") &&\n              revenueForcastSubMenu.userRoles.includes(\"932\")\n            ? 250\n            : revenueForcastSubMenu.userRoles.includes(\"690\") &&\n              revenueForcastSubMenu.userRoles.includes(\"911\")\n            ? 1200\n            : revenueForcastSubMenu.userRoles.includes(\"641\") &&\n              revenueForcastSubMenu.userRoles.includes(\"911\")\n            ? 1300\n            : revenueForcastSubMenu.userRoles.includes(\"690\") &&\n              revenueForcastSubMenu.userRoles.includes(\"46\")\n            ? 800\n            : revenueForcastSubMenu.userRoles.includes(\"641\") &&\n              revenueForcastSubMenu.userRoles.includes(\"46\")\n            ? 700\n            : revenueForcastSubMenu.userRoles.includes(\"690\") &&\n              revenueForcastSubMenu.userRoles.includes(\"641\")\n            ? 600\n            : revenueForcastSubMenu.userRoles.includes(\"690\") &&\n              revenueForcastSubMenu.userRoles.includes(\"930\")\n            ? 500\n            : revenueForcastSubMenu.userRoles.includes(\"641\") &&\n              revenueForcastSubMenu.userRoles.includes(\"930\")\n            ? 400\n            : revenueForcastSubMenu.userRoles.includes(\"690\")\n            ? 690\n            : revenueForcastSubMenu.userRoles.includes(\"641\")\n            ? 641\n            : revenueForcastSubMenu.userRoles.includes(\"932\")\n            ? 932\n            : revenueForcastSubMenu.userRoles.includes(\"46\")\n            ? 46\n            : revenueForcastSubMenu.userRoles.includes(\"686\")\n            ? 686\n            : revenueForcastSubMenu.userRoles.includes(\"930\")\n            ? 930\n            : revenueForcastSubMenu.userRoles.includes(\"307\") && 307\n          : null;\n\n        setDataAccess(accessLevel);\n\n        if (accessLevel == 600 || accessLevel == 500 || accessLevel == 400) {\n          axios\n            .get(\n              baseUrl +\n                `/dashboardsms/allocationDashboard/getCustomers?loggedUserId=${loggedUserId}`\n            )\n            .then((resp) => {\n              setCustomer(resp.data);\n            });\n        } else if (accessLevel == 641 || accessLevel == 700) {\n          axios\n            .get(\n              baseUrl +\n                `/ProjectMS/project/getCustomersByCsl?loggedUserId=${loggedUserId}`\n            )\n            .then((resp) => {\n              setCustomer(resp.data);\n            });\n        } else if (accessLevel == 690 || accessLevel == 800) {\n          axios\n            .get(\n              baseUrl +\n                `/ProjectMS/project/getCustomersByDP?loggedUserId=${loggedUserId}`\n            )\n            .then((resp) => {\n              setCustomer(resp.data);\n            });\n        } else if (accessLevel == 930) {\n          axios\n            .get(\n              baseUrl +\n                `/ProjectMS/project/getCustomersbyAe?loggedUserId=${loggedUserId}`\n            )\n            .then((resp) => {\n              setCustomer(resp.data);\n            });\n        } else {\n          axios\n            .get(baseUrl + `/revenuemetricsms/metrics/customers`)\n            .then((resp) => {\n              setCustomer(resp.data);\n            });\n        }\n        if (accessLevel == 641 || accessLevel == 600) {\n          axios\n            .get(\n              // dataAccess == 641\n              //   ?\n              baseUrl +\n                `/SalesMS/MasterController/getCslDropDownData?userId=102007130`\n              // : baseUrl +\n              //     `/SalesMS/MasterController/getCslDropDownData?userId=${loggedUserId}`\n            )\n            .then((res) => {\n              let custom = [];\n              let data = res.data;\n              const seenPersonNames = new Set();\n\n              data.length > 0 &&\n                // data.forEach((e) => {\n                //   let cslObj = {\n                //     label: e.PersonName,\n                //     value: e.id,\n                //   };\n                //   custom.push(cslObj);\n                // });\n\n                data.forEach((e) => {\n                  if (!seenPersonNames.has(e.PersonName)) {\n                    let cslObj = {\n                      label: e.PersonName,\n                      value: e.id,\n                    };\n                    custom.push(cslObj);\n                    seenPersonNames.add(e.PersonName);\n                  }\n                });\n              // dataAccess == 641\n              //   ? \"\"\n              custom.push({ label: \"UnAssigned\", value: 999 });\n              setCsl(custom);\n              if (id == null) {\n                setSelectedCsl(custom);\n              }\n            });\n        } else {\n          axios\n            .get(\n              baseUrl +\n                `/SalesMS/MasterController/getCslDropDownData?userId=${loggedUserId}`\n            )\n            .then((res) => {\n              let custom = [];\n              let data = res.data;\n              data.length > 0 &&\n                data.forEach((e) => {\n                  let cslObj = {\n                    label: e.PersonName,\n                    value: e.id,\n                  };\n                  custom.push(cslObj);\n                });\n\n              // dataAccess == 641\n              //   ? \"\"\n              custom.push({ label: \"UnAssigned\", value: 999 });\n              setCsl(custom);\n              if (id == null) {\n                setSelectedCsl(custom);\n              }\n            });\n        }\n        if (accessLevel == 600) {\n          axios\n            .get(\n              baseUrl +\n                `/CommonMS/master/getDPDropDownData?userId=${loggedUserId}`\n            )\n            .then((res) => {\n              let custom = [];\n\n              let data = res.data;\n\n              // const seenPersonNames = new Set();\n\n              data.length > 0 &&\n                data.forEach((e) => {\n                  let dpObj = {\n                    label: e.PersonName,\n                    value: e.delivery_partner_id,\n                  };\n                  custom.push(dpObj);\n                });\n\n              // data.forEach((e) => {\n              //   if (!seenPersonNames.has(e.PersonName)) {\n              //     let cslObj = {\n              //       label: e.PersonName,\n              //       value: e.id,\n              //     };\n              //     custom.push(cslObj);\n              //     seenPersonNames.add(e.PersonName);\n              //   }\n              // });\n              // dataAccess == 690\n              //   ? \"\"\n              custom.push({ label: \"UnAssigned\", value: 999 });\n              setDp(custom);\n              if (id == null) {\n                setSelectedDp(custom);\n              }\n              // if (id == null) {\n              // {\n              //   dataAccess != 600 ? \"\" : setSelectedDp(custom);\n              // }\n              // }\n            });\n        } else if (accessLevel == 690) {\n          axios\n            .get(\n              baseUrl +\n                `/CommonMS/master/getDPDropDownData?userId=${loggedUserId}`\n            )\n            .then((res) => {\n              let custom = [];\n\n              let data = res.data;\n              data.length > 0 &&\n                data.forEach((e) => {\n                  let dpObj = {\n                    label: e.PersonName,\n                    value: e.id,\n                  };\n                  custom.push(dpObj);\n                });\n              // dataAccess == 690\n              //   ? \"\"\n              custom.push({ label: \"UnAssigned\", value: 999 });\n              setDp(custom);\n              if (id == null) {\n                setSelectedDp(custom);\n              }\n            });\n        } else {\n          axios\n            .get(\n              baseUrl +\n                `/CommonMS/master/getDPDropDownData?userId=${loggedUserId}`\n            )\n            .then((res) => {\n              let custom = [];\n\n              let data = res.data;\n              data.length > 0 &&\n                data.forEach((e) => {\n                  let dpObj = {\n                    label: e.PersonName,\n                    value: e.id,\n                  };\n                  custom.push(dpObj);\n                });\n              // dataAccess == 690\n              //   ? \"\"\n              custom.push({ label: \"UnAssigned\", value: 999 });\n              setDp(custom);\n              if (id == null) {\n                setSelectedDp(custom);\n              }\n            });\n        }\n\n        if (accessLevel == 600) {\n          axios\n            .get(\n              baseUrl +\n                `/ProjectMS/project/getProjectsbyCslDp?loggedUserId=${\n                  Number(loggedUserId) + 1\n                }`\n            )\n            // .get(baseUrl + `/ProjectMS/Audit/getProjectNameandId`)\n            .then((response) => {\n              var resp = response.data;\n              resp.push({ id: \"-1\", name: \"<<ALL>>\" });\n              setProject(resp);\n            });\n        } else if (accessLevel == 500) {\n          axios\n            .get(\n              baseUrl +\n                `/ProjectMS/project/getProjectsdpae?loggedUserId=${\n                  Number(loggedUserId) + 1\n                }`\n            )\n            // .get(baseUrl + `/ProjectMS/Audit/getProjectNameandId`)\n            .then((response) => {\n              var resp = response.data;\n              resp.push({ id: \"-1\", name: \"<<ALL>>\" });\n              setProject(resp);\n            });\n        } else if (accessLevel == 46) {\n          axios\n            .get(\n              baseUrl +\n                `/ProjectMS/project/getprojectsforPm?userId=${loggedUserId}`\n            )\n            // .get(baseUrl + `/ProjectMS/Audit/getProjectNameandId`)\n            .then((response) => {\n              var resp = response.data;\n              resp.push({ id: \"-1\", name: \"<<ALL>>\" });\n              setProject(resp);\n            });\n        } else if (accessLevel == 400) {\n          axios\n            .get(\n              baseUrl +\n                `/ProjectMS/project/getProjectscslae?loggedUserId=${\n                  Number(loggedUserId) + 1\n                }`\n            )\n            // .get(baseUrl + `/ProjectMS/Audit/getProjectNameandId`)\n            .then((response) => {\n              var resp = response.data;\n              resp.push({ id: \"-1\", name: \"<<ALL>>\" });\n              setProject(resp);\n            });\n        } else if (accessLevel === 930) {\n          // Call the second API\n          axios\n            .get(\n              baseUrl +\n                `/CommonMS/master/getProjectsforAE?loggedUserId=${\n                  Number(loggedUserId) + 1\n                }`\n            )\n            // .get(baseUrl + `/ProjectMS/Audit/getProjectNameandId`)\n            .then((response) => {\n              var resp = response.data;\n              resp.push({ id: \"-1\", name: \"<<ALL>>\" });\n              setProject(resp);\n            });\n        } else if (accessLevel == 690) {\n          axios\n            .get(\n              baseUrl +\n                `/ProjectMS/project/getProjectsbyDp?loggedUserId=${\n                  Number(loggedUserId) + 1\n                }`\n            )\n            // .get(baseUrl + `/ProjectMS/Audit/getProjectNameandId`)\n            .then((response) => {\n              var resp = response.data;\n              resp.push({ id: \"-1\", name: \"<<ALL>>\" });\n              setProject(resp);\n            });\n        } else if (accessLevel == 641) {\n          axios\n            .get(\n              baseUrl +\n                `/ProjectMS/project/getProjectsbycsl?loggedUserId=${\n                  Number(loggedUserId) + 1\n                }`\n            )\n            // .get(baseUrl + `/ProjectMS/Audit/getProjectNameandId`)\n            .then((response) => {\n              var resp = response.data;\n              resp.push({ id: \"-1\", name: \"<<ALL>>\" });\n              setProject(resp);\n            });\n        } else if (accessLevel == 800) {\n          axios\n            .get(\n              baseUrl +\n                `/ProjectMS/project/getProjectsforDPPM?userId=${loggedUserId}&resId=${\n                  Number(loggedUserId) + 1\n                }`\n            )\n\n            .then(function (response) {\n              var resp = response.data;\n              resp.push({ id: \"-1\", name: \"<<ALL>>\" });\n              setProject(resp);\n            });\n        } else if (accessLevel == 700) {\n          axios\n            .get(\n              baseUrl +\n                `/ProjectMS/project/getProjectsforCSLPM?userId=${loggedUserId}&resId=${\n                  Number(loggedUserId) + 1\n                }`\n            )\n\n            .then(function (response) {\n              var resp = response.data;\n              resp.push({ id: \"-1\", name: \"<<ALL>>\" });\n              setProject(resp);\n            });\n        } else {\n          axios\n            .get(baseUrl + `/ProjectMS/Audit/getProjectNameandId`)\n            .then((response) => {\n              var resp = response.data;\n              resp.push({ id: \"-1\", name: \"<<ALL>>\" });\n              setProject(resp);\n            });\n        }\n        if (\n          accessLevel == 700 ||\n          accessLevel == 800 ||\n          accessLevel == 307 ||\n          accessLevel == 931\n        ) {\n          setSelectType(\"Hierarchy\");\n          setFormData((prevData) => ({\n            ...prevData,\n            type: \"Hierarchy\",\n          }));\n        }\n        if (accessLevel == 46 || accessLevel == 428) {\n          setSelectType(\"project\");\n          setFormData((prevData) => ({\n            ...prevData,\n            type: \"project\",\n          }));\n        }\n        if (accessLevel == 641 || accessLevel == 690 || accessLevel == 930) {\n          setSelectType(\"customer\");\n          setFormData((prevData) => ({\n            ...prevData,\n            type: \"customer\",\n          }));\n        }\n        if (\n          accessLevel == 126 ||\n          accessLevel == 686 ||\n          accessLevel == 911 ||\n          accessLevel == 932 ||\n          accessLevel == 1100 ||\n          accessLevel == 1200 ||\n          accessLevel == 1300 ||\n          accessLevel == 908 ||\n          accessLevel == 910\n        ) {\n          setSelectType(\"Business Unit\");\n          setFormData((prevData) => ({\n            ...prevData,\n            type: \"Business Unit\",\n          }));\n        }\n      });\n  };\n\n  const FilterData = () => {\n    axios({\n      method: \"get\",\n      url:\n        baseUrl +\n        `/dashboardsms/savedsearch/FiltersData?saved_search_id=${\n          id === null ? 0 : id\n        }`,\n    }).then(function (res) {\n      const getData = res.data;\n      setFilterData(getData);\n    });\n  };\n\n  useEffect(() => {\n    FilterData();\n  }, [id]);\n\n  //================\n  const [formData, setFormData] = useState({});\n  useEffect(() => {\n    setFormData(() => {\n      if (id != null) {\n        return {\n          type: filterData.type,\n          BusinessUnit: filterData?.BusinessUnit,\n          ResLocation: filterData.ResLocation,\n          EngCompany: filterData.EngCompany,\n          captype: filterData.captype,\n          AllocType: filterData.AllocType,\n          ResType: filterData.ResType,\n          View: filterData.View,\n          measure: filterData.measure,\n          Financialmeasures: filterData.Financialmeasures,\n          ContractTerms: filterData.ContractTerms,\n          Csl: filterData.Csl,\n          Dp: filterData?.Dp,\n          summaryBy: filterData.summaryBy,\n          Source: filterData.Source,\n          engLocation: filterData.engLocation,\n          Customer: filterData.customer,\n          Project: filterData.Project,\n          \"Resource Name\": filterData[\"Resource Name\"],\n          \"Primary PM\": filterData[\"Primary PM\"],\n          Name: filterData.Name,\n          hierarchyId: filterData.hierarchyId,\n          Avg: filterData.Avg,\n          avgtextvalue: filterData.avgtextvalue,\n          capTypeName: filterData.capTypeName,\n          managerProjects: filterData.managerProjects,\n          FromDt: filterData.fromDate,\n        };\n      } else {\n        return {\n          type:\n            id == null\n              ? dataAccess == 641 || dataAccess == 690 || dataAccess == 600\n                ? \"customer\"\n                : \"Business Unit\"\n              : \"Business Unit\",\n\n          BusinessUnit: \"-1\",\n          ResLocation: \"6,5,3,8,7,1,2\",\n          EngCompany: \"-1\",\n          captype: \"capacity\",\n          AllocType:\n            \"billable,nonBillUtil,nonBillShad,nonBillEnb,nonBillCliPrep,nonBillNonUtil,nonBillInnov\",\n          ResType: \"all\",\n          View: \"detail\",\n          measure: \"hrs\",\n          Financialmeasures: \"Revenue\",\n          ContractTerms: \"-1\",\n          Csl: \"-1\",\n          Dp: \"-1\",\n          summaryBy: \"Region\",\n          Source: \"-1\",\n          engLocation: \"-1\",\n          Customer: \"\",\n          Project: \"\",\n          \"Resource Name\": \"\",\n          \"Primary PM\": \"\",\n          Name: hierarchyId,\n          hierarchyId: loggedUserId,\n          Avg: \"\",\n          avgtextvalue: \"\",\n          capTypeName: \"\",\n          managerProjects: \"\",\n          FromDt: \"\",\n        };\n      }\n    });\n  }, [filterData]);\n\n  const [CustomerName, setCustomerName] = useState(\"\");\n  useEffect(() => {\n    if (id != null) {\n      const updatedepartments = departments.filter((values) =>\n        filterData.BusinessUnit?.includes(values.value)\n      );\n      const updateResLocation = resLocation.filter((values) =>\n        filterData.ResLocation?.includes(values.value)\n      );\n      const updateengCompany = engCompany.filter((values) =>\n        formData.EngCompany?.includes(values.value)\n      );\n      const updatecapType = capType.filter(\n        (values) => filterData.captype === values.value\n      );\n\n      const updateAllocType = alloctype?.filter((values) =>\n        filterData.AllocType?.includes(values.value)\n      );\n\n      setSelectedalloctype(updateAllocType);\n      const selectedValues = filterData.Financialmeasures?.split(\",\");\n\n      const updateFinancialMeasures = financialMeasures?.filter(\n        (values) => +formData.Financialmeasures?.includes(values.value)\n      );\n\n      const updateContractTerms = contractTerms.filter((values) =>\n        filterData.ContractTerms?.includes(values.value)\n      );\n\n      const updateDp = dp.filter(\n        (values) => +filterData.Dp?.includes(values.value)\n      );\n      const updatecsl = csl.filter((values) =>\n        filterData?.Csl?.includes(values.value)\n      );\n\n      const updateSummary = summaryBy.filter((values) =>\n        formData.summaryBy?.includes(values.value)\n      );\n\n      const updateCustomerName = customer?.filter((values) =>\n        filterData?.Customer?.includes(values.id)\n      );\n\n      const CustomerNameData = JSON.stringify(\n        updateCustomerName[0]?.name\n      )?.replace(/\"/g, \"\");\n\n      const updatePorjectName = project?.filter((values) =>\n        filterData?.Project?.includes(values.id)\n      );\n      const updatePorjectNameData = JSON.stringify(\n        updatePorjectName[0]?.name\n      )?.replace(/\"/g, \"\");\n\n      const UpdateResourceName = resource.filter(\n        (values) => parseInt(filterData[\"Resource Name\"]) === values.id\n      );\n      const UpdateResourceData = JSON.stringify(\n        UpdateResourceName[0]?.name\n      )?.replace(/\"/g, \"\");\n\n      const updatemanager = manager.filter((values) =>\n        filterData[\"Primary PM\"]?.includes(values.id)\n      );\n\n      const updatePMName = JSON.stringify(updatemanager[0]?.name)?.replace(\n        /\"/g,\n        \"\"\n      );\n\n      const updatename = resource.filter(\n        (values) => parseInt(filterData?.Name) === values.id\n      );\n\n      const updateResName = JSON.stringify(updatename[0]?.name)?.replace(\n        /\"/g,\n        \"\"\n      );\n\n      setLabel(updateResName);\n      setPmName(updatePMName);\n      if (filterData.FromDt !== undefined && filterData.FromDt !== \"\") {\n        const updatedate = filterData.FromDt;\n        // setStartDate2(parseISO(updatedate));\n        setMonth(parseISO(updatedate));\n      }\n\n      const updateengLocation = engLocation.filter((values) =>\n        formData.engLocation?.includes(values.value)\n      );\n\n      const updateSelectview =\n        filterData.type == \"Business Unit\" ||\n        \"Hierarchy\" ||\n        \"customer\" ||\n        \"project\" ||\n        \"resource\" ||\n        \"Primary PM\"\n          ? \"detail\"\n          : \"consol\";\n      setSelectView(updateSelectview);\n      if (filterData?.engLocation == \"-1\") {\n        setSelectedEngLocation(engLocation);\n      } else {\n        setSelectedEngLocation(updateengLocation);\n      }\n      setCustomerName(CustomerNameData);\n      setProjectName(updatePorjectNameData);\n      setResourceName(UpdateResourceData);\n\n      const updaetselecttpe = filterData?.type;\n\n      setSelectedSummaryBy(updateSummary);\n\n      if (filterData.Csl == \"-1\") {\n        setSelectedCsl(csl);\n      } else {\n        setSelectedCsl(updatecsl);\n      }\n\n      if (filterData.Dp === \"-1\") {\n        setSelectedDp(dp);\n      } else {\n        setSelectedDp(updateDp);\n      }\n\n      if (filterData.BusinessUnit == \"-1\") {\n        setSelectedDepartments(departments);\n      } else {\n        setSelectedDepartments(updatedepartments);\n      }\n      setSelectedResLocation(updateResLocation);\n\n      if (formData.EngCompany == \"-1\") {\n        setSelectedEngCompany(engCompany);\n      } else {\n        setSelectedEngCompany(updateengCompany);\n      }\n\n      setSelectedFinancialMeasures(updateFinancialMeasures);\n      if (filterData.ContractTerms == \"-1\") {\n        setSelectedContractorTerms(contractTerms);\n      } else {\n        setSelectedContractorTerms(updateContractTerms);\n      }\n      setSelectType(updaetselecttpe);\n      setType(\"Hierarchy\");\n    }\n  }, [\n    id,\n    alloctype,\n    formData?.type,\n    departments,\n    formData.BusinessUnit,\n    resLocation,\n    formData.ResLocation,\n    engCompany,\n    formData.EngCompany,\n    capType,\n    filterData.captype,\n    formData.AllocType,\n    financialMeasures,\n    formData.Financialmeasures,\n    contractTerms,\n    filterData.contractTerms,\n    formData.ContractTerms,\n    formData.summaryBy,\n    filterData.Dp,\n    formData.captype,\n    formData.engLocation,\n    filterData?.Project,\n    project,\n    filterData.type,\n    formData.Csl,\n    formData.Dp,\n    filterData?.Name,\n    filterData.BusinessUnit,\n  ]);\n\n  const [searchingA, setsearchingA] = useState(false);\n  const [validationmessage, setValidationMessage] = useState(false);\n  const baseUrl = environment.baseUrl;\n  let alldepartments;\n  let allResLocation;\n  let allengcompanies;\n  let allcontractterms;\n  let allcsl;\n  let alldp;\n  const [flag, setFlag] = useState(0);\n\n  const dates = {\n    fromDate: moment().startOf(\"month\").format(\"YYYY-MM-DD\"),\n    toDate: moment().startOf(\"month\").add(\"month\", 0).format(\"YYYY-MM-DD\"),\n  };\n  const [dt, setDt] = useState(dates);\n  const [month, setMonth] = useState(moment(dt.toDate).toDate());\n  let formattedMonth = moment(month).format(\"YYYY-MM-DD\");\n  const newLoggeduserId = Number(loggedUserId) + 1;\n\n  const addHandler = () => {\n    setFlag(1);\n    const newFromDate = moment(dt.fromDate)\n      .add(\"month\", 1)\n      .format(\"YYYY-MM-DD\");\n    const newToDate = moment(dt.toDate).add(\"month\", 1).format(\"YYYY-MM-DD\");\n    setDt({\n      fromDate: newFromDate,\n      toDate: newToDate,\n    });\n    setMonth(moment(newToDate).toDate());\n  };\n  const subtractHandler = () => {\n    setFlag(1);\n    const newFromDate = moment(dt.fromDate)\n      .subtract(\"month\", 1)\n      .format(\"YYYY-MM-DD\");\n    const newToDate = moment(dt.toDate)\n      .subtract(\"month\", 1)\n      .format(\"YYYY-MM-DD\");\n    setDt({\n      fromDate: newFromDate,\n      toDate: newToDate,\n    });\n    setMonth(moment(newToDate).toDate());\n  };\n\n  const handleDateChange = (date) => {\n    setFlag(0);\n    setMonth(date);\n    setDt((prev) => ({\n      ...prev,\n      [\"toDate\"]: moment(date).format(\"YYYY-MM-DD\"),\n    }));\n    setFormData((prev) => ({\n      ...prev,\n      [\"FromDt\"]: moment(date).format(\"YYYY-MM-DD\"),\n    }));\n    formattedMonth = moment(date).format(\"YYYY-MM-DD\");\n  };\n\n  const [mounted, setMounted] = useState(false);\n\n  useEffect(() => {\n    if (flag === 1) {\n      getSearchData();\n    }\n  }, [flag, dt, month]);\n\n  const departmentsArray = formData?.BusinessUnit?.split(\",\");\n  alldepartments =\n    departmentsArray?.length === departments?.length\n      ? \"-1\"\n      : formData?.BusinessUnit;\n\n  const ResLocationArray = formData.ResLocation?.split(\",\");\n\n  allResLocation =\n    ResLocationArray?.length === resLocation.length\n      ? \"-1\"\n      : formData?.ResLocation;\n  const engCompanyArray = formData?.EngCompany?.split(\",\");\n\n  const contracttermsArray = formData?.ContractTerms?.split(\",\");\n\n  allcontractterms =\n    contracttermsArray?.length === contractTerms?.length\n      ? \"-1\"\n      : formData?.ContractTerms;\n\n  allengcompanies =\n    engCompanyArray?.length === engCompany.length ? \"-1\" : formData?.EngCompany;\n\n  const cslArray = formData.Csl?.split(\",\");\n  allcsl = cslArray?.length === csl?.length ? \"-1\" : formData?.Csl;\n\n  const dpArray = formData?.Dp?.split(\",\");\n  alldp = dpArray?.length === dp?.length ? \"-1\" : formData?.Dp;\n\n  ////-----------------Axios for BusinessUnit----------------------------//////\n  const getDepartments = async () => {\n    const resp = await axios({\n      url: baseUrl + `/CostMS/cost/getDepartments`,\n    });\n\n    let departments = resp.data;\n    departments.push({ value: 999, label: \"Non-Revenue Units\" });\n    setDepartments(departments);\n    if (id == null) {\n      setSelectedDepartments(departments.filter((ele) => ele.value >= 0));\n    }\n\n    let filteredDeptData = [];\n    departments.forEach((data) => {\n      if (data.value >= 0) {\n        filteredDeptData.push(data.value);\n      }\n    });\n    setFormData((prevVal) => ({\n      ...prevVal,\n      [\"BusinessUnit\"]: filteredDeptData.toString(),\n    }));\n  };\n\n  ////--------------------Axios for Eng.Company--------------------------//////\n  const getEngCompany = () => {\n    axios({\n      url: baseUrl + `/revenuemetricsms/metrics/getCompany`,\n    }).then((resp) => {\n      let EngCompany = resp.data;\n      setEngCompany(resp.data);\n      setSelectedEngCompany(EngCompany.filter((ele) => ele.value >= 0));\n      let filteredCompanyData = [];\n      EngCompany.forEach((data) => {\n        if (data.value >= 0) {\n          filteredCompanyData.push(data.value);\n        }\n      });\n      setFormData((prevVal) => ({\n        ...prevVal,\n        [\"EngagementCompany\"]: filteredCompanyData.toString(),\n      }));\n    });\n  };\n  ////----------------Axios for Customers---------------------------//////////\n  // const getCustomers = () => {\n  //   axios\n  //     .get(\n  //       dataAccess == 690 || dataAccess == 641 || dataAccess == 909\n  //         ? baseUrl +\n  //             `/dashboardsms/allocationDashboard/getCustomers?loggedUserId=${loggedUserId}`\n  //         : baseUrl + `/revenuemetricsms/metrics/customers`\n  //     )\n  //     .then((resp) => {\n  //       setCustomer(resp.data);\n  //     });\n  // };\n\n  // const getCSL = () => {\n  //   axios\n  //     .get(\n  //       dataAccess == 641\n  //         ? baseUrl + `/CommonMS/master/getCSLDPAE?loggedUserId=${loggedUserId}`\n  //         : baseUrl +\n  //             `/SalesMS/MasterController/getCslDropDownData?userId=${loggedUserId}`\n  //     )\n  //     .then((res) => {\n  //       let custom = [];\n  //       let data = res.data;\n  //       data.length > 0 &&\n  //         data.forEach((e) => {\n  //           let cslObj = {\n  //             label: e.PersonName,\n  //             value: e.id,\n  //           };\n  //           custom.push(cslObj);\n  //         });\n\n  //       dataAccess == 641\n  //         ? \"\"\n  //         : custom.push({ label: \"UnAssigned\", value: 999 });\n  //       setCsl(custom);\n  //       if (id == null) {\n  //         setSelectedCsl(custom);\n  //       }\n  //     });\n  // };\n  //////-------------Axios for DP-----------------------//////\n  // const getDP = () => {\n  //   axios\n  //     .get(\n  //       dataAccess == 690\n  //         ? baseUrl + `/CommonMS/master/getDP?loggedUserId=${loggedUserId}`\n  //         : baseUrl +\n  //             `/CommonMS/master/getDPDropDownData?userId=${loggedUserId}`\n  //     )\n  //     .then((res) => {\n  //       let custom = [];\n\n  //       let data = res.data;\n  //       data.length > 0 &&\n  //         data.forEach((e) => {\n  //           let dpObj = {\n  //             label: e.PersonName,\n  //             value: e.id,\n  //           };\n  //           custom.push(dpObj);\n  //         });\n  //       dataAccess == 690\n  //         ? \"\"\n  //         : custom.push({ label: \"UnAssigned\", value: 999 });\n  //       setDp(custom);\n  //       // if (id == null) {\n  //       setSelectedDp(custom);\n  //       // }\n  //     });\n  // };\n\n  //////---------------Axios for Projects-------------------///////////\n\n  // useEffect(() => {\n  //   getCslDPProjectsData();\n  // }, []);\n\n  ///////-----------Axios for EngLocation--------------------//////////\n  const getEngLocation = () => {\n    axios\n      .get(baseUrl + `/dashboardsms/Dashboard/getCountry`)\n      .then((Response) => {\n        let countries = [];\n        countries.push({ value: 0, label: \"Others\" });\n        let data = Response.data;\n\n        data.length > 0 &&\n          data.forEach((e) => {\n            let countryObj = {\n              label: e.country_name,\n              value: e.id,\n            };\n            countries.push(countryObj);\n          });\n\n        //////////--Alphabetical Sorting--//////////\n        const sortedcities = countries.sort(function (a, b) {\n          var nameA = a.label.toUpperCase();\n          var nameB = b.label.toUpperCase();\n          if (nameA < nameB) {\n            return -1;\n          }\n          if (nameA > nameB) {\n            return 1;\n          }\n          return 0;\n        });\n        //////////------------------------//////////\n        setEngLocation(sortedcities);\n        if (id == null) {\n          setSelectedEngLocation(countries);\n        }\n      });\n  };\n\n  useEffect(() => {\n    let countryList = [];\n    country.forEach((d) => {\n      countryList.push(d.value);\n    });\n    setFormData((prevVal) => ({\n      ...prevVal,\n      [\"Country\"]: countryList.toString(),\n    }));\n  }, [engLocation]);\n  /////////-----------Aios for Resource Name-------------////////////\n  const getData = () => {\n    axios({\n      method: \"get\",\n      url: baseUrl + `/ProjectMS/risks/getAssignedData`,\n    }).then(function (response) {\n      var res = response.data;\n      res.push({ id: \"-1\", name: \"<<ALL>>\" });\n\n      setResource(res);\n    });\n  };\n  ////////------------Axios for Primary PM------------/////////////\n  const getManagerdata = () => {\n    axios({\n      method: \"get\",\n      url: baseUrl + `/dashboardsms/allocationDashboard/getManagers`,\n    }).then(function (response) {\n      var resp = response.data;\n      setManager(resp);\n    });\n  };\n\n  ///////-----------Axios for Res.Location------------///////////\n  const getResLocation = () => {\n    axios({\n      method: \"get\",\n      url: baseUrl + `/revenuemetricsms/metrics/getreslocation`,\n    }).then(function (response) {\n      let ResLocation = response.data;\n      setResLocation(response.data);\n      if (id == null) {\n        setSelectedResLocation(ResLocation.filter((ele) => ele.value >= 0));\n      }\n      let filteredlocationData = [];\n      ResLocation.forEach((data) => {\n        if (data.value >= 0) {\n          filteredlocationData.push(data.value);\n        }\n      });\n      setFormData((prevVal) => ({\n        ...prevVal,\n        [\"ResLocation\"]: filteredlocationData.toString(),\n      }));\n    });\n  };\n  ////////////---------------Axios for ContractorTerms--------------////////////\n  const getContractTerms = () => {\n    axios({\n      method: \"get\",\n      url: baseUrl + `/revenuemetricsms/metrics/getcontractterms`,\n    }).then(function (response) {\n      let ResLocation = response.data;\n      setContractTerms(response.data);\n      if (id == null) {\n        setSelectedContractorTerms(ResLocation.filter((ele) => ele.value >= 0));\n      }\n      let filteredcontracttermsData = [];\n      ResLocation.forEach((data) => {\n        if (data.value >= 0) {\n          filteredcontracttermsData.push(data.value);\n        }\n      });\n      if (id == null) {\n        setFormData((prevVal) => ({\n          ...prevVal,\n          [\"ContractTerms\"]: filteredcontracttermsData.toString(),\n        }));\n      }\n    });\n  };\n\n  ////////----------Axios for ProjectId's of PM-------------/////////\n  const getProjectsByPrimaryMgr = () => {\n    axios\n      .get(\n        baseUrl +\n          `/revenuemetricsms/metrics/getProjectsByPrimaryMgr?mgrId=${\n            id == null ? formData[\"Primary PM\"] : filterData[\"Primary PM\"]\n          }`\n      )\n      .then((response) => {\n        var resp = response.data;\n        setManagerProject(resp);\n      });\n  };\n\n  const d = managerProjects?.map((a) => {\n    a?.object_id;\n    return a.object_id;\n  });\n  const mgrId = d.toString();\n\n  useEffect(() => {\n    if (selecttype == \"Hierarchy\" && id == null) {\n      getResourcehierarchy();\n    }\n  }, [selecttype]);\n\n  useEffect(() => {\n    if (filterData.type == \"Hierarchy\" && id != null) {\n      getResourcehierarchySavedSearch();\n    }\n  }, [filterData.type]);\n  const getResourcehierarchy = () => {\n    const loaderTime = setTimeout(() => {\n      setDisplayHierarchy(true);\n    }, 2000);\n    axios(\n      baseUrl +\n        `/customersms/Customers/getResourcehierarchy?rid=${loggedUserId}`\n    ).then(function (response) {\n      var resp = response.data;\n      setHierarchyData(response.data);\n      setDisplayHierarchy(false);\n      clearTimeout(loaderTime);\n    });\n  };\n  //================For Saved Search========\n  const getResourcehierarchySavedSearch = () => {\n    const loaderTime = setTimeout(() => {\n      setDisplayHierarchy(true);\n    }, 2000);\n    const id = filterData.Name - 1;\n    axios(\n      baseUrl + `/customersms/Customers/getResourcehierarchy?rid=${id}`\n    ).then(function (response) {\n      var resp = response.data;\n      setHierarchyData(response.data);\n      setDisplayHierarchy(false);\n      clearTimeout(loaderTime);\n    });\n  };\n\n  const getSearchData = () => {\n    const loaderTime = setTimeout(() => {\n      setsearchingA(true);\n    }, 2000);\n    abortController.current[1] = new AbortController();\n    const cacheBuster = Math.random();\n    axios({\n      method: \"post\",\n      url:\n        baseUrl + `/revenuemetricsms/metrics/search?cacheBuster=${cacheBuster}`,\n      signal: abortController.current[1].signal,\n      headers: {\n        \"Cache-Control\": \"no-store\",\n        Pragma: \"no-cache\",\n      },\n      data: {\n        Typ: formData.captype,\n        ObjectId:\n          selecttype == \"Business Unit\"\n            ? formData.BusinessUnit\n            : selecttype == \"Hierarchy\"\n            ? hierarchyId\n            : selecttype == \"customer\"\n            ? formData.Customer\n            : selecttype == \"project\"\n            ? formData.Project\n            : selecttype == \"resource\"\n            ? formData[\"Resource Name\"]\n            : selecttype == \"Primary PM\"\n            ? mgrId\n            : \"\",\n        FromDt: formattedMonth,\n        AllocType: formData.AllocType,\n        FilterType: selecttype == \"Primary PM\" ? \"project\" : formData.type,\n        FBy: \"country\",\n        Countries: formData.ResLocation,\n        Measure: formData.measure,\n        ResType: formData.ResType,\n        FMeasure: formData.Financialmeasures,\n        PrjSource: formData.Source,\n        EngCountries: formData.engLocation,\n        avgFilterType: formData.Avg,\n        avgFilterVal: formData.avgtextvalue,\n        contTerms: allcontractterms,\n        engComps: allengcompanies,\n        SaltKey: \"AAAAB3NzaC1yc2EAAAABJQAAAIEAkwFrmz0JNpn8\",\n        cslIds: allcsl,\n        dpIds: alldp,\n        UserId: loggedUserId,\n      },\n    })\n      .then((response) => {\n        let rp = response.data;\n        setsearchingA(false);\n        clearTimeout(loaderTime);\n        setActionTable([]);\n        setDisplayStateB(true);\n        setActionTable(rp[0]);\n        setUtilizationSummary(response.data[1]);\n        setBenchSummary(response.data[2]);\n        if (rp.length > 0) {\n          setDisplayStateB(true);\n          setDisplayState(true);\n          setDisplayStateA(true);\n        }\n        let valid = GlobalValidation(ref);\n        setSearching(false);\n        !valid && setvisible(!visible);\n        visible\n          ? setCheveronIcon(FaChevronCircleUp)\n          : setCheveronIcon(FaChevronCircleDown);\n      })\n      .catch((error) => {\n        console.error(\"An error occurred:\", error);\n      });\n  };\n  const ActionIds = actionTable.tableData?.map((item) => item.Id);\n\n  const filteredNumbers = ActionIds?.filter(\n    (ActionIds) => ![-1, -2, 999].includes(ActionIds)\n  );\n\n  useEffect(() => {\n    if (dataAccess == 690 || dataAccess == 641 || dataAccess == 930) {\n      // getCustomers();\n      // getNewProjects();\n      // getProjectdata();\n      // getCSL();\n      // getDP();\n    }\n  }, [dataAccess]);\n\n  useEffect(() => {\n    getDepartments();\n    getEngCompany();\n    // getCustomers();\n    // getNewProjects();\n    // getCSL();\n    // getDP();\n    // getProjectdata();\n    getEngLocation();\n    getData();\n    getManagerdata();\n    getResLocation();\n    getContractTerms();\n    // getResourcehierarchy();\n    // getIsPmAndAbove();\n  }, []);\n\n  useEffect(() => {\n    getProjectsByPrimaryMgr();\n  }, [formData[\"Primary PM\"], filterData[\"Primary PM\"]]);\n\n  return (\n    <div>\n      {validationmessage ? (\n        <div className=\"statusMsg error\">\n          {\" \"}\n          <AiFillWarning /> Please select valid values for highlighted fields\n        </div>\n      ) : (\n        \"\"\n      )}\n      {editmsg ? (\n        <div className=\"statusMsg success\">\n          <span className=\"errMsg\">\n            <BiCheck size=\"1.4em\" /> &nbsp; Search created successfully.\n          </span>\n        </div>\n      ) : (\n        \"\"\n      )}\n      <div className=\"pageTitle\">\n        <div className=\"childOne\"></div>\n        <div className=\"childTwo\">\n          <h2>Monthly Revenue Forecast</h2>\n        </div>\n        <div className=\"childThree\"></div>\n      </div>\n      <ScreenBreadcrumbs\n        routes={routes}\n        currentScreenName={currentScreenName}\n      />\n\n      <RevenueForecastFilters\n        capType={capType}\n        country={country}\n        setCountry={setCountry}\n        customer={customer}\n        departments={departments}\n        selectedDepartments={selectedDepartments}\n        selectedEngCompany={selectedEngCompany}\n        selectedCsl={selectedCsl}\n        selectedDp={selectedDp}\n        project={project}\n        resourceName={resourceName}\n        pmname={pmname}\n        selectedEngLocation={selectedEngLocation}\n        resource={resource}\n        manager={manager}\n        summaryBy={summaryBy}\n        selectedSummaryBy={selectedSummaryBy}\n        financialMeasures={financialMeasures}\n        selectview={selectview}\n        selectedResLocation={selectedResLocation}\n        selectedContractTerms={selectedContractTerms}\n        tableData={tableData}\n        utilizationSummary={utilizationSummary}\n        benchSummary={benchSummary}\n        displayState={displayState}\n        displayStateA={displayStateA}\n        displayStateB={displayStateB}\n        hierarchydata={hierarchydata}\n        searchingA={searchingA}\n        setsearchingA={setsearchingA}\n        alldepartments={alldepartments}\n        addHandler={addHandler}\n        subtractHandler={subtractHandler}\n        handleDateChange={handleDateChange}\n        setDisplayHierarchy={setDisplayHierarchy}\n        resLocation={resLocation}\n        engCompany={engCompany}\n        formData={formData}\n        month={month}\n        contractTerms={contractTerms}\n        csl={csl}\n        hierarchyId={hierarchyId}\n        dp={dp}\n        projectname={projectname}\n        selecttype={selecttype}\n        setSelectType={setSelectType}\n        setType={setType}\n        type={type}\n        actionTable={actionTable}\n        setActionTable={setActionTable}\n        setUtilizationSummary={setUtilizationSummary}\n        setBenchSummary={setBenchSummary}\n        setFormData={setFormData}\n        setCapType={setCapType}\n        setMonth={setMonth}\n        formattedMonth={formattedMonth}\n        setSelectView={setSelectView}\n        engLocation={engLocation}\n        filteredNumbers={filteredNumbers}\n        setSearching={setSearching}\n        searching={searching}\n        setSelectedDepartments={setSelectedDepartments}\n        setSelectedResLocation={setSelectedResLocation}\n        setSelectedContractorTerms={setSelectedContractorTerms}\n        setSelectedEngCompany={setSelectedEngCompany}\n        setSelectedCsl={setSelectedCsl}\n        setSelectedDp={setSelectedDp}\n        setSelectedSummaryBy={setSelectedSummaryBy}\n        setSelectedEngLocation={setSelectedEngLocation}\n        loggedUserId={loggedUserId}\n        validationmessage={validationmessage}\n        setValidationMessage={setValidationMessage}\n        abortController={abortController}\n        loggedResourceId={loggedResourceId}\n        setHierarchyId={setHierarchyId}\n        setLabel={setLabel}\n        label={label}\n        getSearchData={getSearchData}\n        displayHierarchy={displayHierarchy}\n        visible={visible}\n        setvisible={setvisible}\n        page_Name={page_Name}\n        CustomerName={CustomerName}\n        pageurl={pageurl}\n        setEditAddmsg={setEditAddmsg}\n        alloctype={alloctype}\n        setAlloctype={setAlloctype}\n        setSelectedalloctype={setSelectedalloctype}\n        selectedalloctype={selectedalloctype}\n        selectedFinancialMeasures={selectedFinancialMeasures}\n        setSelectedFinancialMeasures={setSelectedFinancialMeasures}\n        savedSaerchid={id}\n        filterData={filterData}\n        allcontractterms={allcontractterms}\n        allengcompanies={allengcompanies}\n        allcsl={allcsl}\n        alldp={alldp}\n        setDisplayState={setDisplayState}\n        setDisplayStateA={setDisplayStateA}\n        setDisplayStateB={setDisplayStateB}\n        dataAccess={dataAccess}\n        cheveronIcon={cheveronIcon}\n        setCheveronIcon={setCheveronIcon}\n        mgrId={mgrId}\n        managerProjects={managerProjects}\n      />\n    </div>\n  );\n}\n\nexport default RevenueForecast;\n"],"names":["props","buttonPopup","setButtonPopup","actionItems","rows","setActionItems","actionTable","handleActionItems","useEffect","className","size","visible","onClose","FlatPrimeReactTableRevenue","data","MinusSquare","SvgIcon","fontSize","style","width","height","d","PlusSquare","TransitionComponent","useSpring","from","opacity","transform","to","in","Collapse","StyledTreeItem","styled","TreeItem","key","String","node","id","nodeId","label","full_name","Array","isArray","subRows","map","renderTree","console","log","theme","treeItemClasses","marginLeft","paddingLeft","borderLeft","alpha","palette","text","primary","nodes","RevenueForecastHierarchy","defaultExpandedRows","setHierarchyId","setLabel","setFormData","hierarchy","flatArray","options","parentId","children","dictionary","tree","forEach","nodeParentId","push","Object","values","obj","jsonToTree","TreeView","defaultExpanded","defaultCollapseIcon","defaultExpandIcon","defaultEndIcon","defaultParentIcon","sx","minwidth","onNodeSelect","event","nodeIds","prevVal","target","innerHTML","ExceptionReportsTable","expandedCols","colExpandState","useState","setNodes","columns","setColumns","hiddenColumns","setHiddenColumns","colExpFlag","setColumnExpFlag","setHeaders","numberWithCommas","x","number","includes","num","Number","toFixed","getData","tableData","count","expandClass","columnData","replaceAll","colArr","split","newHeaders","hiddenHeaders","i","length","colVal","trim","firstData","filteredHeaders","entries","filter","index","assign","value","accessorKey","header","enableColumnActions","enableHiding","rowspan","Header","column","IconButton","onClick","prev","Cell","cell","whiteSpace","overflow","textOverflow","title","getValue","expandT","expandF","enableExpandAll","enablePagination","enableBottomToolbar","enableTopToolbar","enableSorting","filterFromLeafRows","initialState","expanded","density","columnVisibility","enablePinning","columnPinning","right","state","defaultColumn","minSize","maxSize","enableStickyHeader","muiTableContainerProps","maxHeight","muiTableBodyProps","borderRight","paddingTop","paddingBottom","muiTableHeadProps","borderTop","background","padding","allcsl1","alldp1","capType","mgrId","hierarchyId","departments","customer","selectedDepartments","selectedEngCompany","selectedCsl","selectedDp","project","selectedEngLocation","resource","projectname","resourceName","manager","pmname","summaryBy","selectedSummaryBy","financialMeasures","selectview","selectedResLocation","selectedContractTerms","utilizationSummary","benchSummary","CustomerName","displayState","displayStateA","displayStateB","hierarchydata","searchingA","setsearchingA","addHandler","subtractHandler","handleDateChange","resLocation","engCompany","formData","month","contractTerms","csl","dp","selecttype","setSelectType","setCapType","setMonth","formattedMonth","setSelectView","engLocation","filteredNumbers","setSelectedDepartments","setSelectedResLocation","setSelectedContractorTerms","setSelectedEngCompany","setSelectedCsl","setSelectedDp","setSelectedSummaryBy","setSelectedEngLocation","setValidationMessage","abortController","loggedResourceId","getSearchData","loggedUserId","displayHierarchy","setSearching","searching","pageurl","page_Name","setEditAddmsg","alloctype","setSelectedalloctype","setAlloctype","selectedalloctype","setSelectedFinancialMeasures","selectedFinancialMeasures","setDisplayHierarchy","allcontractterms","allengcompanies","allcsl","alldp","setDisplayState","setDisplayStateA","setDisplayStateB","setActionTable","setUtilizationSummary","setBenchSummary","dataAccess","setType","setvisible","cheveronIcon","setCheveronIcon","ref","managerProjects","useRef","BURegion","setBURegion","BUCustomer","setBUCustomer","BUPractice","setBUPractice","displayStateC","setDisplayStateC","displayStateD","setDisplayStateD","displayStateE","setDisplayStateE","IoIosArrowBack","setArrowBack","visibleA","setvisibleA","visibleB","setvisibleB","visibleC","setvisiblec","FaChevronCircleUp","cheveronIconA","setCheveronIconA","cheveronIconB","setCheveronIconB","actionItemsSearching","setActionItemsSearching","item","baseUrl","environment","exceptionReports","setExceptionReports","displayExceptionReports","setDisplayExceptionReports","reportsTable","setReportsTable","excel","setExcel","actionPopup","setActionPopup","abortControllerRef","AbortController","ArrowRenderer","localStorage","getItem","location","useLocation","savedSaerchid","URLSearchParams","search","get","filterData","setFilterData","axios","method","url","then","res","allocBeyondEndDateResult","projectsWithoutBUResult","resRateLessCostResult","resWithNegGMPerResult","resWithNoEndDateResult","resWithZeroRoleCostResult","resWithZerobillRateResult","resWithoutBUResult","resWithoutDesignationResult","tempMailsResult","setTimeout","handleSavedSearch","handleAbort","current","abort","norecords","obj1FilterData","emptyObject","keys","handleResponse","obj1","obj2","obj3","obj1TableData","obj1TData","obj1TD","undefined","obj2TableData","obj2TData","obj2TD","obj3TableData","obj3TData","obj3TD","valid","GlobalValidation","FaChevronCircleDown","dpArray","Dp","cslArray","Csl","updateSelectview","View","filteredData","type","apiArr","BUIds","BusinessUnit","ResType","FromDt","FBy","Countries","ResLocation","FMeasure","Financialmeasures","SaltKey","contTerms","ContractTerms","engComps","EngCompany","cslIds","dpIds","UserId","signal","getSearchDataSavedSearch","Typ","captype","ObjectId","Name","Customer","Project","AllocType","FilterType","Measure","measure","PrjSource","Source","EngCountries","avgFilterType","Avg","avgFilterVal","avgtextvalue","response","rp","loaderTime","resIds","fromDt","moment","startOf","format","toDt","endOf","created_dt","createdby","lkup_name","effective_dt","completed_dt","comments","concat","clearTimeout","handleOnExport","xlsx","desiredColumnOrder","filename","finalColumns","finalTableData","col","filteredColumns","splitData","newObj","hasOwnProperty","replace","splitValues","wantedValues","extractedValue","workbook","row","ExcelJS","worksheet","addWorksheet","addRow","getRow","font","bold","writeBuffer","buffer","saveAs","Blob","generateDropdownLabel","selectedOptions","allOptions","selectedValues","option","allValues","join","IoIosArrowForward","GlobalHelp","pdfname","name","SavedSearchGlobal","payload","htmlFor","onChange","e","ele","hasSelectAll","isLoading","shouldToggleOnHover","disableSearch","valueRenderer","disabled","s","filteredValues","toString","placeholder","defaultValue","required","readOnly","ReactSearchAutocomplete","items","inputSearchString","onClear","prevProps","fuseOptions","resultStringKeyName","onSelect","showIcon","filteredCountry","filteredvalue","Item","selected","dateFormat","showMonthYearPicker","filteredCustomer","filteredType","filterType","contextVal","countries","resType","RevenueForecastBuTable","RevenueForecastBuCustomer","cursor","MonthlyForecastRevenueTableComponent","color","float","MonthlyForecastRevenueCalenderTable","Loader","setDataAccess","setData2","country","setCountry","setCustomer","setDepartments","setEngCompany","setCsl","setDp","setProject","setEngLocation","setResource","setResourceName","setManager","setPmName","setResLocation","setContractTerms","setHierarchyData","setManagerProject","loggedUserName","setProjectName","editmsg","routes","setRoutes","getMenus","resp","menu","subMenus","subMenu","display_name","revenueForcastSubMenu","find","accessLevel","userRoles","custom","seenPersonNames","Set","has","PersonName","cslObj","add","dpObj","delivery_partner_id","prevData","capTypeName","fromDate","setCustomerName","updatedepartments","updateResLocation","updateengCompany","updateAllocType","updateFinancialMeasures","updateContractTerms","updateDp","updatecsl","updateSummary","updateCustomerName","CustomerNameData","JSON","stringify","updatePorjectName","updatePorjectNameData","UpdateResourceName","parseInt","UpdateResourceData","updatemanager","updatePMName","updatename","updateResName","updatedate","parseISO","updateengLocation","updaetselecttpe","alldepartments","validationmessage","flag","setFlag","dates","toDate","dt","setDt","departmentsArray","ResLocationArray","engCompanyArray","contracttermsArray","getDepartments","filteredDeptData","countryList","a","object_id","getResourcehierarchy","getResourcehierarchySavedSearch","cacheBuster","Math","random","headers","Pragma","catch","error","ActionIds","Id","filteredCompanyData","Response","countryObj","country_name","sortedcities","sort","b","nameA","toUpperCase","nameB","filteredlocationData","filteredcontracttermsData","ScreenBreadcrumbs","currentScreenName","newFromDate","newToDate","subtract","date"],"sourceRoot":""}