{"version":3,"file":"static/js/765.52763ba3.chunk.js","mappings":"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","sources":["views/RevenueMetrices/RevenueProjectionMaterialtable.js","views/RevenueMetrices/RevenueProjectionByCustomer.js","views/RevenueMetrices/RevenueProjections.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport MaterialReactTable from \"material-react-table\";\nimport { IconButton } from \"@mui/material\";\n\nimport { AiFillRightCircle } from \"react-icons/ai\";\nimport fte_active from \"../../assets/images/empstatusIcon/fte_active.png\";\nimport fte_inactive from \"../../assets/images/empstatusIcon/fte_inactive.png\";\nimport fte_notice from \"../../assets/images/empstatusIcon/fte_notice.png\";\nimport subk_active from \"../../assets/images/empstatusIcon/subk_active.png\";\nimport subk_inactive from \"../../assets/images/empstatusIcon/subk_inactive.png\";\nimport subk_notice from \"../../assets/images/empstatusIcon/subk_notice.png\";\nimport { BorderLeft } from \"@material-ui/icons\";\nimport { BiChevronRight } from \"react-icons/bi\";\n// import \"./EngagementAllocationsTable.scss\";\nimport \"./RevenueProjection.scss\";\n\n\nexport default function RevenueProjectionMaterialtable(props) {\n  const icons = {\n    fte0: (\n      <img\n        src={fte_inactive}\n        alt=\"(fte_inactive_icon)\"\n        style={{ height: \"12px\", float: \"left\" }}\n        title=\"Ex-Employee\"\n      />\n    ),\n    fte1: (\n      <img\n        src={fte_active}\n        alt=\"(fte_active_icon)\"\n        style={{ height: \"12px\", float: \"left\" }}\n        title=\"Active Employee\"\n      />\n    ),\n    fte2: (\n      <img\n        src={fte_notice}\n        alt=\"(fte_notice_icon)\"\n        style={{ height: \"12px\", float: \"left\" }}\n        title=\"Employee in notice period\"\n      />\n    ),\n    subk0: (\n      <img\n        src={subk_inactive}\n        alt=\"(subk_inactive_icon)\"\n        style={{ height: \"12px\", float: \"left\" }}\n        title=\"Ex-Contractor\"\n      />\n    ),\n    subk1: (\n      <img\n        src={subk_active}\n        alt=\"(subk_active_icon)\"\n        style={{ height: \"12px\", width: \"auto\", float: \"left\" }}\n        title=\"Active Contractor\"\n        size=\"1em\"\n      />\n    ),\n    subk2: (\n      <img\n        src={subk_notice}\n        alt=\"(subk_notice_icon)\"\n        style={{ height: \"12px\", float: \"left\" }}\n        title=\"Contractor in notice period\"\n      />\n    ),\n  };\n\n  const { data, expandedCols, colExpandState } = props;\n\n  const [nodes, setNodes] = useState([]);\n  const [columns, setColumns] = useState(null);\n  const [hiddenColumns, setHiddenColumns] = useState({});\n  const [colExpFlag, setColumnExpFlag] = useState(false);\n  const [headers, setHeaders] = useState([]);\n\n  const numberWithCommas = (x) => {\n    var number = String(x);\n    if (number.includes(\".\") == true) {\n      var decimalNumbers = number;\n      var num = Number(decimalNumbers);\n      let FdN = num != null && num?.toFixed(1);\n      let final = FdN.split(\".\");\n      final[0] = final[0].replace(/(?<=\\d)(?=(\\d{3})+(?!\\d|\\.))/g, \",\");\n\n      return final.join(\".\");\n    } else {\n      return (\n        number != null && number?.replace(/(?<=\\d)(?=(\\d{3})+(?!\\d|\\.))/g, \",\")\n      );\n    }\n  };\n\n  useEffect(() => {\n    getData();\n  }, [data.tableData]);\n\n  function organizeData(data) {\n    const organizedData = {};\n\n    // Create a mapping of nodes by department ID\n    const departmentIdMap = {};\n\n    data.forEach((node) => {\n      const { lvl, id, departmentId, parentId } = node;\n      if (!departmentIdMap[departmentId]) {\n        departmentIdMap[departmentId] = [];\n      }\n      departmentIdMap[departmentId].push({ lvl, id, parentId, ...node });\n    });\n\n    // Find the root nodes (nodes with level \"0-1\", \"0-2\", \"1-1\", or \"1-2\")\n    const rootNodes = data.filter(\n      (node) =>\n        node.lvl === \"-1\" ||\n        node.lvl === \"0-1\" ||\n        node.lvl === \"0-2\" ||\n        node.lvl === \"1-1\" ||\n        node.lvl === \"1-2\"\n    );\n\n    // Add child nodes to their parent nodes recursively\n    function addSubRows(node) {\n      const children = organizedData[node.id];\n      if (children) {\n        node.subRows = children.map((child) => {\n          addSubRows(child);\n          return child;\n        });\n      }\n    }\n\n    // Handle the special case \"1-2\" and \"2\"\n    rootNodes.forEach((rootNode) => {\n      addSubRows(rootNode);\n      if (rootNode.lvl === \"1-2\") {\n        const { departmentId } = rootNode;\n        if (\n          departmentIdMap[departmentId] &&\n          departmentIdMap[departmentId].length > 0\n        ) {\n          const levelTwoNodes = departmentIdMap[departmentId].filter(\n            (node) => node.lvl === \"2\"\n          );\n          if (levelTwoNodes.length > 0) {\n            rootNode.subRows = levelTwoNodes;\n\n            // Add a third level of subRows for \"3\" nodes\n            levelTwoNodes.forEach((lvl2Node) => {\n              const levelThreeNodes = departmentIdMap[departmentId].filter(\n                (node) =>\n                  node.lvl === \"3\" && node.customerId === lvl2Node.customerId\n              );\n              if (levelThreeNodes.length > 0) {\n                lvl2Node.subRows = levelThreeNodes;\n\n                // Add a fourth level of subRows for \"4\" nodes\n                levelThreeNodes.forEach((lvl3Node) => {\n                  const levelFourNodes = departmentIdMap[departmentId].filter(\n                    (node) =>\n                      node.lvl === \"4\" && node.projectId === lvl3Node.projectId\n                  );\n                  if (levelFourNodes.length > 0) {\n                    lvl3Node.subRows = levelFourNodes;\n                  }\n                });\n              }\n            });\n          }\n        }\n      }\n    });\n\n    return rootNodes;\n  }\n  var count = 0;\n  const getData = () => {\n    let expandClass = \"\";\n\n    if (colExpFlag == true && count > 0) {\n      expandClass = \"expanded\";\n    } else {\n      expandClass = \"\";\n    }\n    let tableData = data.tableData;\n    let columns = null;\n\n    if (data?.columns?.includes(\"'\")) {\n      columns = data?.columns?.replaceAll(\"'\", \"\");\n    } else {\n      columns = data?.columns;\n    }\n\n    let colArr = columns?.split(\",\");\n\n    let newHeaders = [];\n    let hiddenHeaders = [];\n\n    const obj = {};\n\n    for (let i = 0; i < colArr?.length; i++) {\n      let colVal = colArr[i].trim();\n\n      let firstData = tableData[0];\n      obj[colVal] = firstData[colVal];\n    }\n\n    let headerArray = Object.entries(obj);\n\n    let filteredHeaders = headerArray.filter(\n      ([key, value]) => typeof value === \"string\" && value.includes(\"^&\")\n    );\n\n    setHeaders(filteredHeaders);\n\n    filteredHeaders.map(([key, value]) => {\n      if (expandedCols.includes(key)) {\n        hiddenHeaders.push({ [key]: false });\n      }\n    });\n\n    setHiddenColumns(Object.assign({}, ...hiddenHeaders));\n\n    let minusOneRow = tableData?.filter((d) => d.id == -1);\n    filteredHeaders.map(([key, value], index) => {\n      newHeaders.push({\n        accessorKey: key,\n        header: value != null ? value.split(\"^&\")[0] : \"\",\n        enableColumnActions: false,\n        enableHiding: true,\n        Header: ({ column }) => (\n          <div>\n            {value != null ? value.split(\"^&\")[0] : \"\"}{\" \"}\n            {key == colExpandState[2] ? (\n              <span className={`expandIcon ${expandClass}`}>\n                <IconButton\n                  // className=\"expandIcon\"\n                  onClick={() => {\n                    setColumnExpFlag((prev) => !prev);\n                  }}\n                >\n                  <BiChevronRight />\n                </IconButton>\n              </span>\n            ) : null}\n          </div>\n        ),\n      });\n    });\n\n    let subHeaders = minusOneRow && Object.entries(minusOneRow[0]);\n    subHeaders.sort((a, b) => {\n      const keyA = a[0];\n      const keyB = b[0];\n\n      if (keyA.includes(\"rev\") && keyB.includes(\"gm\")) {\n        return -1;\n      } else if (keyA.includes(\"gm\") && keyB.includes(\"rev\")) {\n        return 1;\n      } else {\n        return keyA.localeCompare(keyB);\n      }\n    });\n    newHeaders.map((data) => {\n      let i = newHeaders.indexOf(data);\n      let subArray = [];\n      subHeaders.map(([key, value], index) => {\n        const validStructureRegex =\n          /^(?:\\d{4}_\\d{2}_\\d{2}_(?:month|quarter)_Q\\d)$/;\n\n        const parts = key.split(\"_\").slice(0, -1).join(\"_\");\n\n        let subkey;\n        if (parts.match(validStructureRegex)) {\n          subkey = parts;\n        } else if (key.includes(\"total\")) {\n          subkey = \"total\";\n        } else {\n          subkey = key;\n        }\n\n        if (subkey != null) {\n          if (data.accessorKey.includes(subkey)) {\n            let obj = {\n              id: key,\n              header: value,\n              accessorKey: key,\n              Cell: ({ cell }) => {\n                return (\n                  <div\n                    style={{\n                      whiteSpace: \"nowrap\",\n                      overflow: \"hidden\",\n                      textOverflow: \"ellipsis\",\n                    }}\n                    title={cell.getValue()}\n                    className={\n                      \"lvl:\" +\n                      cell.row.original[\"lvl\"] +\n                      \" \" +\n                      (key.includes(\"_\")\n                        ? key.split(\"_\")[2] % 2 == 0\n                          ? \"even\"\n                          : \"odd\"\n                        : key.includes(\"total\")\n                        ? \"total\"\n                        : \"\")\n                    }\n                  >\n                    {cell.column.id == \"name\" &&\n                    cell.row.original.parentId != null ? (\n                      <span>\n                        {icons[cell.row.original[\"empStatus\"]]}\n                        &nbsp;{cell.getValue().split(\"^&\")[0]}\n                      </span>\n                    ) : key.includes(\"_\") && key.split(\"_\")[2] ? (\n                      <div style={{ float: \"right\" }}>\n                        {numberWithCommas(cell.getValue())}\n                      </div>\n                    ) : key.includes(\"total\") ? (\n                      <div style={{ float: \"right\" }}>\n                        {numberWithCommas(cell.getValue())}\n                      </div>\n                    ) : cell.getValue() == null ? (\n                      \"\"\n                    ) : (\n                      cell.getValue().split(\"^&\")[0]\n                    )}\n                    <div></div>\n                  </div>\n                );\n              },\n            };\n            subArray.push(obj);\n          }\n        }\n      });\n      newHeaders[i].columns = subArray;\n    });\n\n    setColumns(newHeaders);\n    let values = [];\n    tableData?.map((d) => (d.id != -1 && d.id != -2 ? values.push(d) : \"\"));\n    const organizedData = organizeData(values);\n\n    setNodes(organizedData);\n  };\n\n  useEffect(() => {\n    colExpFlag ? expandT() : expandF();\n    // getData();\n  }, [colExpFlag]);\n  const expandT = () => {\n    count++;\n    getData();\n    setHiddenColumns({});\n  };\n\n  const expandF = () => {\n    getData();\n  };\n\n  const colCollapse = () => {\n    let hiddenHeaders = [];\n    headers.map(([key, value]) => {\n      if (expandedCols.includes(key)) {\n        hiddenHeaders.push({ [key]: false });\n      }\n    });\n\n    setHiddenColumns(Object.assign({}, ...hiddenHeaders));\n  };\n\n  const jsonToTree = (flatArray, options) => {\n    options = {\n      id: \"uniqueId\",\n      parentId: \"parentId\",\n      children: \"subRows\",\n      ...options,\n    };\n    const dictionary = {};\n    const tree = [];\n    const children = options.children;\n    flatArray.forEach((node) => {\n      const nodeId = node[options.id];\n      const nodeParentId = node[options.parentId];\n\n      dictionary[nodeId] = {\n        [children]: [],\n        ...node,\n        ...dictionary[nodeId],\n      };\n      dictionary[nodeParentId] = dictionary[nodeParentId] || { [children]: [] };\n      dictionary[nodeParentId][children].push(dictionary[nodeId]);\n    });\n\n    Object.values(dictionary).forEach((obj) => {\n      if (typeof obj[options.id] === \"undefined\") {\n        tree.push(...obj[children]);\n      }\n    });\n    return tree;\n  };\n\n  return (\n    <div className=\"RevenueProjections darkHeader\">\n      {nodes.length ? (\n        <MaterialReactTable\n          columns={columns}\n          data={nodes}\n          enableExpandAll={true}\n          enableExpanding\n          enablePagination={false}\n          enableBottomToolbar={false}\n          enableTopToolbar={false}\n          enableColumnActions={false}\n          enableSorting={false}\n          filterFromLeafRows\n          initialState={{\n            expanded: false,\n            density: \"compact\",\n            columnVisibility: { ...hiddenColumns },\n            columnPinning: { right: [\"total\"] },\n          }}\n          state={{ columnVisibility: { ...hiddenColumns } }}\n          defaultColumn={{ minSize: 40, maxSize: 1000, size: 40 }}\n          enableStickyHeader\n          muiTableContainerProps={{\n            sx: { maxHeight: \"50vh\", width: \"auto\", maxWidth: \"fit-content\" },\n          }}\n          muiTableBodyProps={{\n            sx: {\n              \"&\": {},\n              \"& td\": {\n                borderRight: \"1px solid #ccc\",\n                height: \"22px\",\n                fontSize: \"11px\",\n                paddingTop: \"0px\",\n                paddingBottom: \"0px\",\n              },\n            },\n          }}\n          muiTableHeadProps={{\n            sx: {\n              \"& th\": {\n                borderTop: \"1px solid #ccc\",\n                borderRight: \"1px solid #ccc\",\n                background: \"#f4f4f4 \",\n                fontSize: \"11px\",\n                padding: \"0px 8px\",\n              },\n            },\n          }}\n        />\n      ) : null}\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport MaterialReactTable from \"material-react-table\";\nimport { IconButton } from \"@mui/material\";\n\nimport { AiFillRightCircle } from \"react-icons/ai\";\nimport fte_active from \"../../assets/images/empstatusIcon/fte_active.png\";\nimport fte_inactive from \"../../assets/images/empstatusIcon/fte_inactive.png\";\nimport fte_notice from \"../../assets/images/empstatusIcon/fte_notice.png\";\nimport subk_active from \"../../assets/images/empstatusIcon/subk_active.png\";\nimport subk_inactive from \"../../assets/images/empstatusIcon/subk_inactive.png\";\nimport subk_notice from \"../../assets/images/empstatusIcon/subk_notice.png\";\nimport { BorderLeft } from \"@material-ui/icons\";\nimport { BiChevronRight } from \"react-icons/bi\";\n// import \"./EngagementAllocationsTable.scss\";\n\nexport default function RevenueProjectionByCustomer(props) {\n  const icons = {\n    fte0: (\n      <img\n        src={fte_inactive}\n        alt=\"(fte_inactive_icon)\"\n        style={{ height: \"12px\", float: \"left\" }}\n        title=\"Ex-Employee\"\n      />\n    ),\n    fte1: (\n      <img\n        src={fte_active}\n        alt=\"(fte_active_icon)\"\n        style={{ height: \"12px\", float: \"left\" }}\n        title=\"Active Employee\"\n      />\n    ),\n    fte2: (\n      <img\n        src={fte_notice}\n        alt=\"(fte_notice_icon)\"\n        style={{ height: \"12px\", float: \"left\" }}\n        title=\"Employee in notice period\"\n      />\n    ),\n    subk0: (\n      <img\n        src={subk_inactive}\n        alt=\"(subk_inactive_icon)\"\n        style={{ height: \"12px\", float: \"left\" }}\n        title=\"Ex-Contractor\"\n      />\n    ),\n    subk1: (\n      <img\n        src={subk_active}\n        alt=\"(subk_active_icon)\"\n        style={{ height: \"12px\", width: \"auto\", float: \"left\" }}\n        title=\"Active Contractor\"\n        size=\"1em\"\n      />\n    ),\n    subk2: (\n      <img\n        src={subk_notice}\n        alt=\"(subk_notice_icon)\"\n        style={{ height: \"12px\", float: \"left\" }}\n        title=\"Contractor in notice period\"\n      />\n    ),\n  };\n\n  const { data, expandedCols, colExpandState } = props;\n\n  const [nodes, setNodes] = useState([]);\n  const [columns, setColumns] = useState(null);\n  const [hiddenColumns, setHiddenColumns] = useState({});\n  const [colExpFlag, setColumnExpFlag] = useState(false);\n  const [headers, setHeaders] = useState([]);\n\n  const numberWithCommas = (x) => {\n    var number = String(x);\n    if (number.includes(\".\") == true) {\n      var decimalNumbers = number;\n      var num = Number(decimalNumbers);\n      let FdN = num != null && num?.toFixed(1);\n      let final = FdN.split(\".\");\n      final[0] = final[0].replace(/(?<=\\d)(?=(\\d{3})+(?!\\d|\\.))/g, \",\");\n\n      return final.join(\".\");\n    } else {\n      return (\n        number != null && number?.replace(/(?<=\\d)(?=(\\d{3})+(?!\\d|\\.))/g, \",\")\n      );\n    }\n  };\n\n  useEffect(() => {\n    getData();\n  }, [data.tableData]);\n\n  function organizeData(data) {\n    const organizedData = {};\n\n    // Create a mapping of nodes by department ID\n    const customerIdMap = {};\n\n    data.forEach((node) => {\n      const { lvl, id, customerId, parentId } = node;\n      if (!customerIdMap[customerId]) {\n        customerIdMap[customerId] = [];\n      }\n      customerIdMap[customerId].push({ lvl, id, parentId, ...node });\n    });\n\n    // Find the root nodes (nodes with level \"0-1\", \"0-2\", \"1-1\", or \"1-2\")\n    const rootNodes = data.filter(\n      (node) =>\n        node.lvl === \"-1\" ||\n        node.lvl === \"0-1\" ||\n        node.lvl === \"0-2\" ||\n        node.lvl === \"1-1\" ||\n        node.lvl === \"1-2\"\n    );\n\n    // Add child nodes to their parent nodes recursively\n    function addSubRows(node) {\n      const children = organizedData[node.id];\n      if (children) {\n        node.subRows = children.map((child) => {\n          addSubRows(child);\n          return child;\n        });\n      }\n    }\n\n    // Handle the special case \"1-2\" and \"2\"\n    rootNodes.forEach((rootNode) => {\n      addSubRows(rootNode);\n      if (rootNode.lvl === \"1-2\") {\n        const { customerId } = rootNode;\n        if (customerIdMap[customerId] && customerIdMap[customerId].length > 0) {\n          const levelTwoNodes = customerIdMap[customerId].filter(\n            (node) => node.lvl === \"2\"\n          );\n          if (levelTwoNodes.length > 0) {\n            rootNode.subRows = levelTwoNodes;\n\n            // Add a third level of subRows for \"3\" nodes\n            levelTwoNodes.forEach((lvl2Node) => {\n              const levelThreeNodes = customerIdMap[customerId].filter(\n                (node) =>\n                  node.lvl === \"3\" && node.projectId === lvl2Node.projectId\n              );\n              if (levelThreeNodes.length > 0) {\n                lvl2Node.subRows = levelThreeNodes;\n\n                // Add a fourth level of subRows for \"4\" nodes\n                levelThreeNodes.forEach((lvl3Node) => {\n                  const levelFourNodes = customerIdMap[customerId].filter(\n                    (node) =>\n                      node.lvl === \"4\" &&\n                      node.departmentId === lvl3Node.departmentId\n                  );\n                  if (levelFourNodes.length > 0) {\n                    lvl3Node.subRows = levelFourNodes;\n                  }\n                });\n              }\n            });\n          }\n        }\n      }\n    });\n\n    return rootNodes;\n  }\n  var count = 0;\n  const getData = () => {\n    let expandClass = \"\";\n\n    if (colExpFlag == true && count > 0) {\n      expandClass = \"expanded\";\n    } else {\n      expandClass = \"\";\n    }\n    let tableData = data.tableData;\n    let columns = null;\n\n    if (data?.columns?.includes(\"'\")) {\n      columns = data?.columns?.replaceAll(\"'\", \"\");\n    } else {\n      columns = data?.columns;\n    }\n\n    let colArr = columns?.split(\",\");\n\n    let newHeaders = [];\n    let hiddenHeaders = [];\n\n    const obj = {};\n\n    for (let i = 0; i < colArr?.length; i++) {\n      let colVal = colArr[i].trim();\n\n      let firstData = tableData[0];\n      obj[colVal] = firstData[colVal];\n    }\n\n    let headerArray = Object.entries(obj);\n\n    let filteredHeaders = headerArray.filter(\n      ([key, value]) => typeof value === \"string\" && value.includes(\"^&\")\n    );\n\n    setHeaders(filteredHeaders);\n\n    filteredHeaders.map(([key, value]) => {\n      if (expandedCols.includes(key)) {\n        hiddenHeaders.push({ [key]: false });\n      }\n    });\n\n    setHiddenColumns(Object.assign({}, ...hiddenHeaders));\n\n    let minusOneRow = tableData?.filter((d) => d.id == -1);\n    filteredHeaders.map(([key, value], index) => {\n      newHeaders.push({\n        accessorKey: key,\n        header: value != null ? value.split(\"^&\")[0] : \"\",\n        enableColumnActions: false,\n        enableHiding: true,\n        Header: ({ column }) => (\n          <div>\n            {value != null ? value.split(\"^&\")[0] : \"\"}{\" \"}\n            {key == colExpandState[2] ? (\n              <span className={`expandIcon ${expandClass}`}>\n                <IconButton\n                  onClick={() => {\n                    setColumnExpFlag((prev) => !prev);\n                  }}\n                >\n                  <BiChevronRight />\n                </IconButton>\n              </span>\n            ) : null}\n          </div>\n        ),\n      });\n    });\n\n    let subHeaders = minusOneRow && Object.entries(minusOneRow[0]);\n    subHeaders.sort((a, b) => {\n      const keyA = a[0].toLowerCase();\n      const keyB = b[0].toLowerCase();\n\n      if (keyA.includes(\"call\")) return -1;\n      if (keyB.includes(\"call\")) return 1;\n\n      if (keyA.includes(\"rev\")) return -1;\n      if (keyB.includes(\"rev\")) return 1;\n\n      if (keyA.includes(\"gm\")) return -1;\n      if (keyB.includes(\"gm\")) return 1;\n\n      return keyA.localeCompare(keyB);\n    });\n\n    newHeaders.map((data) => {\n      let i = newHeaders.indexOf(data);\n      let subArray = [];\n      subHeaders.map(([key, value], index) => {\n        const validStructureRegex =\n          /^(?:\\d{4}_\\d{2}_\\d{2}_(?:month|quarter)_Q\\d)$/;\n\n        const parts = key.split(\"_\").slice(0, -1).join(\"_\");\n\n        let subkey;\n        if (parts.match(validStructureRegex)) {\n          subkey = parts;\n        } else if (key.includes(\"total\")) {\n          subkey = \"total\";\n        } else {\n          subkey = key;\n        }\n\n        if (subkey != null) {\n          if (data.accessorKey.includes(subkey)) {\n            let obj = {\n              id: key,\n              header: value,\n              accessorKey: key,\n              Cell: ({ cell }) => {\n                return (\n                  <div\n                    style={{\n                      whiteSpace: \"nowrap\",\n                      overflow: \"hidden\",\n                      textOverflow: \"ellipsis\",\n                    }}\n                    title={cell.getValue()}\n                    className={\n                      \"lvl:\" +\n                      cell.row.original[\"lvl\"] +\n                      \" \" +\n                      (key.includes(\"_\")\n                        ? key.split(\"_\")[2] % 2 == 0\n                          ? \"even\"\n                          : \"odd\"\n                        : key.includes(\"total\")\n                        ? \"total\"\n                        : \"\")\n                    }\n                  >\n                    {cell.column.id == \"name\" &&\n                    cell.row.original.parentId != null ? (\n                      <span>\n                        {icons[cell.row.original[\"empStatus\"]]}\n                        &nbsp;{cell.getValue().split(\"^&\")[0]}\n                      </span>\n                    ) : key.includes(\"_\") && key.split(\"_\")[2] ? (\n                      <div style={{ float: \"right\" }}>\n                        {numberWithCommas(cell.getValue())}\n                      </div>\n                    ) : key.includes(\"total\") ? (\n                      <div style={{ float: \"right\" }}>\n                        {numberWithCommas(cell.getValue())}\n                      </div>\n                    ) : cell.getValue() == null ? (\n                      \"\"\n                    ) : (\n                      cell.getValue().split(\"^&\")[0]\n                    )}\n                    <div></div>\n                  </div>\n                );\n              },\n            };\n            subArray.push(obj);\n          }\n        }\n      });\n      newHeaders[i].columns = subArray;\n    });\n\n    setColumns(newHeaders);\n    let values = [];\n    tableData?.map((d) => (d.id != -1 && d.id != -2 ? values.push(d) : \"\"));\n    const organizedData = organizeData(values);\n\n    setNodes(organizedData);\n  };\n\n  useEffect(() => {\n    colExpFlag ? expandT() : expandF();\n    // getData();\n  }, [colExpFlag]);\n  const expandT = () => {\n    count++;\n    getData();\n    setHiddenColumns({});\n  };\n\n  const expandF = () => {\n    getData();\n  };\n\n  const colCollapse = () => {\n    let hiddenHeaders = [];\n    headers.map(([key, value]) => {\n      if (expandedCols.includes(key)) {\n        hiddenHeaders.push({ [key]: false });\n      }\n    });\n\n    setHiddenColumns(Object.assign({}, ...hiddenHeaders));\n  };\n\n  const jsonToTree = (flatArray, options) => {\n    options = {\n      id: \"uniqueId\",\n      parentId: \"parentId\",\n      children: \"subRows\",\n      ...options,\n    };\n    const dictionary = {};\n    const tree = [];\n    const children = options.children;\n    flatArray.forEach((node) => {\n      const nodeId = node[options.id];\n      const nodeParentId = node[options.parentId];\n      dictionary[nodeId] = {\n        [children]: [],\n        ...node,\n        ...dictionary[nodeId],\n      };\n      dictionary[nodeParentId] = dictionary[nodeParentId] || { [children]: [] };\n      dictionary[nodeParentId][children].push(dictionary[nodeId]);\n    });\n    Object.values(dictionary).forEach((obj) => {\n      if (typeof obj[options.id] === \"undefined\") {\n        tree.push(...obj[children]);\n      }\n    });\n    return tree;\n  };\n\n  return (\n    <div className=\"RevenueProjections darkHeader\">\n      {nodes.length ? (\n        <MaterialReactTable\n          columns={columns}\n          data={nodes}\n          enableExpandAll={true}\n          enableExpanding\n          enablePagination={false}\n          enableBottomToolbar={false}\n          enableTopToolbar={false}\n          enableColumnActions={false}\n          enableSorting={false}\n          filterFromLeafRows\n          initialState={{\n            expanded: false,\n            density: \"compact\",\n            columnVisibility: { ...hiddenColumns },\n            columnPinning: { right: [\"total\"] },\n          }}\n          state={{ columnVisibility: { ...hiddenColumns } }}\n          defaultColumn={{ minSize: 40, maxSize: 1000, size: 40 }}\n          enableStickyHeader\n          muiTableContainerProps={{\n            sx: { maxHeight: \"50vh\", width: \"auto\", maxWidth: \"fit-content\" },\n          }}\n          muiTableBodyProps={{\n            sx: {\n              \"&\": {},\n              \"& td\": {\n                borderRight: \"1px solid #ccc\",\n                height: \"22px\",\n                fontSize: \"11px\",\n                paddingTop: \"0px\",\n                paddingBottom: \"0px\",\n              },\n            },\n          }}\n          muiTableHeadProps={{\n            sx: {\n              \"& th\": {\n                borderTop: \"1px solid #ccc\",\n                borderRight: \"1px solid #ccc\",\n                background: \"#f4f4f4 \",\n                fontSize: \"11px\",\n                padding: \"0px 8px\",\n              },\n            },\n          }}\n        />\n      ) : null}\n    </div>\n  );\n}\n","import React, { useState, useEffect, useRef } from \"react\";\nimport {\n  FaChevronCircleUp,\n  FaChevronCircleDown,\n  FaSearch,\n} from \"react-icons/fa\";\nimport DatePicker from \"react-datepicker\";\nimport moment from \"moment\";\nimport { MultiSelect } from \"react-multi-select-component\";\nimport \"./SelectedSE.scss\";\nimport axios from \"axios\";\nimport { environment } from \"../../environments/environment\";\nimport Loader from \"../Loader/Loader\";\nimport { Details } from \"@mui/icons-material\";\nimport { RiFileExcel2Line } from \"react-icons/ri\";\nimport { BsInfoCircle } from \"react-icons/bs\";\nimport RevenueProjectionMaterialtable from \"./RevenueProjectionMaterialtable\";\nimport RevenueProjectionByCustomer from \"./RevenueProjectionByCustomer\";\nimport SavedSearchGlobal from \"../PrimeReactTableComponent/SavedSearchGlobal\";\nimport GlobalHelp from \"../PrimeReactTableComponent/GlobalHelp\";\nimport { useLocation } from \"react-router-dom\";\nimport { CCollapse } from \"@coreui/react\";\nimport { BiCheck } from \"react-icons/bi\";\nimport ScreenBreadcrumbs from \"../Common/ScreenBreadcrumbs\";\nimport { parseISO } from \"date-fns\";\n\nfunction RevenueProjections() {\n  const [startDate, setStartDate] = useState(() => new Date());\n  const [searching, setsearching] = useState(false);\n  const [business, setBusiness] = useState([]);\n  const [selectedBusiness, setSelectedBusiness] = useState([]);\n  const [country, setCountry] = useState([]);\n  const [selectedCountry, setSelectedCountry] = useState([]);\n  const baseUrl = environment.baseUrl;\n  const [month, setMonth] = useState(moment(moment()).startOf(\"month\")._d);\n  const [cheveronIcon, setCheveronIcon] = useState(FaChevronCircleUp);\n  // const [details, setDetails] = useState([]);\n  const [tableData, setTableData] = useState([]);\n  const [columns, setColumns] = useState([]);\n  const [visible, setVisible] = useState(false);\n  const HelpPDFName = \"REVPROJECTIONS.pdf\";\n  const Header = \"Revenue Projections Help\";\n  const [tableComponent, setTableComponent] = useState(null);\n  const [tableMSG, setTableMSG] = useState(null);\n\n  const initialValue = {\n    BU: \"170,211,123,82,168,207,212,18,213,49,149,208,243\",\n    fromQuater: moment().format(\"YYYY-MM-DD\"),\n    Geolocation: \"4,3,5,1,2\",\n    duration: \"1\",\n    Summary: \"BU\",\n    isExport: 0,\n    // loggedUser: loggedUserId,\n  };\n  const pageurl = \"http://10.11.12.149:3000/#/operational/projections\";\n  const page_Name = \"Revenue Projections\";\n  const location = useLocation();\n  const searchParams = new URLSearchParams(location.search);\n  const id = searchParams.get(\"id\");\n  const [editmsg, setEditAddmsg] = useState(false);\n  const [filterData, setFilterData] = useState([]);\n\n  const [routes, setRoutes] = useState([]);\n  let textContent = \"Revenue Metrics\";\n  let currentScreenName = [\"Revenue Projections\"];\n\n  useEffect(() => {\n    getMenus();\n  }, []);\n\n  const getMenus = () => {\n    // setMenusData\n\n    axios({\n      method: \"GET\",\n      url: baseUrl + `/CommonMS/master/getMenus?loggedUserId=${loggedUserId}`,\n    }).then((resp) => {\n      let data = resp.data;\n\n      data.forEach((item) => {\n        if (item.display_name === textContent) {\n          setRoutes([item]);\n        }\n      });\n    });\n  };\n\n  const FilterData = () => {\n    axios({\n      method: \"get\",\n      url:\n        baseUrl +\n        `/dashboardsms/savedsearch/FiltersData?saved_search_id=${\n          id === null ? 0 : id\n        }`,\n    }).then(function (res) {\n      const getData = res.data;\n      setFilterData(getData);\n      console.log(getData + \"in line 881...\");\n    });\n  };\n\n  useEffect(() => {\n    FilterData();\n  }, []);\n  const [formData, setFormData] = useState({\n    // BU: \"170,211,123,82,168,207,212,18,213,49,149,208\",\n    // fromQuater: moment().format(\"YYYY-MM-DD\"),\n    // Geolocation: \"4,3,5,1,2\",\n    // duration: \"1\",\n    // Summary: \"BU\",\n    // isExport: 0,\n  });\n\n  useEffect(() => {\n    setFormData(() => {\n      if (id != null) {\n        return {\n          BU: filterData.BU,\n          fromQuater: filterData.fromQuater,\n          Geolocation: filterData.Geolocation,\n          duration: filterData.duration,\n          Summary: filterData.Summary,\n          isExport: filterData.isExport,\n        };\n      } else {\n        return {\n          BU: \"170,211,123,82,168,207,212,18,213,49,149,208,243\",\n          fromQuater: moment().format(\"YYYY-MM-DD\"),\n          Geolocation: \"4,3,5,1,2\",\n          duration: \"1\",\n          Summary: \"BU\",\n          isExport: 0,\n        };\n      }\n    });\n  }, [filterData]);\n\n  useEffect(() => {\n    if (id != null) {\n      const updatebusiness = business.filter((values) =>\n        formData.BU?.includes(values.value)\n      );\n\n      const updateGeoLocation = country.filter((values) =>\n        formData.Geolocation?.includes(values.value)\n      );\n      console.log(filterData.fromQuater);\n      if (\n        filterData?.fromQuater !== undefined &&\n        filterData.fromQuater !== \"\"\n      ) {\n        const updatedate = filterData.fromQuater;\n        setMonth(parseISO(updatedate));\n      }\n      setSelectedBusiness(updatebusiness);\n      setSelectedCountry(updateGeoLocation);\n    }\n  }, [\n    id,\n    business,\n    filterData.fromQuater,\n    formData.Geolocation,\n    formData.BU,\n    country,\n  ]);\n\n  useEffect(() => {\n    if (id != null) {\n      setTimeout(() => {\n        getTableData();\n      }, 3000);\n    }\n  }, [formData, tableComponent]);\n  const getBusinessUnit = async () => {\n    const resp = await axios({\n      url: baseUrl + `/CostMS/cost/getDepartments`,\n    });\n\n    let departments = resp.data;\n    departments.push({ value: 0, label: \"Non-Revenue Units\" });\n    setBusiness(departments);\n    if (id == null) {\n      setSelectedBusiness(departments.filter((ele) => ele.value != 0));\n    }\n    let filteredDeptData = [];\n    departments.forEach((data) => {\n      if (data.value != 0) {\n        filteredDeptData.push(data.value);\n      }\n    });\n  };\n  console.log(business);\n  const getGeoLocation = () => {\n    axios\n      .get(baseUrl + `/revenuemetricsms/projections/getGeolocation`)\n      .then((Response) => {\n        let countries = [];\n        let data = Response.data;\n        data.length > 0 &&\n          data.forEach((e) => {\n            let countryObj = {\n              label: e.location_name,\n              value: e.id,\n            };\n            countries.push(countryObj);\n          });\n        setCountry(countries);\n        if (id == null) {\n          setSelectedCountry(countries);\n        }\n      })\n      .catch((error) => console.log(error));\n  };\n  useEffect(() => {\n    getBusinessUnit();\n    getGeoLocation();\n  }, []);\n  const customValueRenderer = (selected, _options) => {\n    return selected.length === business.length\n      ? \"<< ALL >>\"\n      : selected.length === 0\n      ? \"<< Please Select >>\"\n      : selected.map((label) => {\n          return selected.length > 1 ? label.label + \",\" : label.label;\n        });\n  };\n  const loggedUserId = localStorage.getItem(\"resId\");\n  useEffect(() => {\n    console.log(columns);\n  }, [columns]);\n\n  const getTableData = () => {\n    console.log(\"in line 94...........\");\n    // let valid = GlobalValidation(ref);\n    // if (valid) {\n    //   {\n    //     setValidationMessage(true);\n    //   }\n    //   return;\n    // }\n    // if (valid) {\n    //   return;\n    // }\n    const loaderTime = setTimeout(() => {\n      setsearching(true);\n    }, 2000);\n\n    axios({\n      method: \"post\",\n      url:\n        baseUrl +\n        `/revenuemetricsms/projections/postRevenueProjectionsss?Builds=${\n          formData.BU\n        }&GeolocationIds=${formData.Geolocation}&FromDate=${moment(\n          month\n        ).format(\"YYYY-MM-DD\")}&Duration=${formData.duration}&Summary=${\n          formData.Summary\n        }&isExport=0&userId=${loggedUserId}`,\n    }).then((res) => {\n      let cols = res.data.columns?.replaceAll(\"'\", \"\").split(\",\");\n\n      // setDetails(res.data.tableData);\n      // console.log(details);\n      setTableData(res.data);\n      console.log(tableData);\n      setColumns(cols);\n\n      console.log(columns);\n      // setValidationMessage(false);\n      setsearching(false);\n      clearTimeout(loaderTime);\n    });\n  };\n  const ref = useRef([]);\n  const abortController = useRef(null);\n  const handleAbort = () => {\n    abortController.current && abortController.current.abort();\n    setsearching(false);\n  };\n\n  useEffect(() => {\n    if (formData.Summary === \"customer\") {\n      setTableMSG(\n        <>\n          <BsInfoCircle /> All numbers are in $. Call is irrespective of BU.\n        </>\n      );\n\n      setTableComponent(\n        <RevenueProjectionByCustomer\n          data={tableData}\n          expandedCols={[\"emp_cadre\", \"supervisor\"]}\n          colExpandState={[\"0\", \"0\", \"name\"]}\n        />\n      );\n    } else if (formData.Summary === \"BU\") {\n      setTableMSG(\n        <>\n          <BsInfoCircle /> All numbers are in $.\n        </>\n      );\n      setTableComponent(\n        <RevenueProjectionMaterialtable\n          data={tableData}\n          expandedCols={[\"emp_cadre\", \"supervisor\"]}\n          colExpandState={[\"0\", \"0\", \"name\"]}\n        />\n      );\n    }\n  }, [tableData]);\n\n  return (\n    <div>\n      <div>\n        <div className=\"col-md-12\">\n          <div className=\"pageTitle\">\n            <div className=\"childOne\"></div>\n            <div className=\"childTwo\">\n              <h2>Revenue Projections</h2>\n            </div>\n\n            <div className=\"childThree\"></div>\n          </div>\n        </div>\n        <ScreenBreadcrumbs\n          routes={routes}\n          currentScreenName={currentScreenName}\n        />\n\n        <div className=\"group mb-3  customCard\">\n          {editmsg ? (\n            <div className=\"statusMsg success\">\n              <span className=\"errMsg\">\n                <BiCheck size=\"1.4em\" /> &nbsp; Search created successfully.\n              </span>\n            </div>\n          ) : (\n            \"\"\n          )}\n          <div className=\"col-md-12 collapseHeader\">\n            <h2>Search Filters</h2>\n            <div className=\"helpBtn\">\n              <GlobalHelp pdfname={HelpPDFName} name={Header} />\n            </div>\n            <div className=\"saveBtn\">\n              <SavedSearchGlobal\n                setEditAddmsg={setEditAddmsg}\n                pageurl={pageurl}\n                page_Name={page_Name}\n                payload={formData}\n              />\n            </div>\n            &nbsp;\n            <div\n              onClick={() => {\n                setVisible(!visible);\n\n                visible\n                  ? setCheveronIcon(FaChevronCircleUp)\n                  : setCheveronIcon(FaChevronCircleDown);\n              }}\n            >\n              <span>{cheveronIcon}</span>\n            </div>\n          </div>\n          <CCollapse visible={!visible}>\n            <div className=\"group-content row\">\n              <div className=\" col-md-4 mb-2\">\n                <div className=\"form-group row\">\n                  <label className=\"col-5\" htmlFor=\"BU\">\n                    BU <span className=\"required\">*</span>\n                  </label>\n                  <span className=\"col-1\">:</span>\n                  <div className=\"col-6\">\n                    <MultiSelect\n                      id=\"BU\"\n                      options={business}\n                      hasSelectAll={true}\n                      isLoading={false}\n                      shouldToggleOnHover={false}\n                      disableSearch={false}\n                      value={selectedBusiness}\n                      valueRenderer={customValueRenderer}\n                      disabled={false}\n                      onChange={(s) => {\n                        setSelectedBusiness(s);\n                        let filteredValues = [];\n                        s.forEach((d) => {\n                          filteredValues.push(d.value);\n                        });\n\n                        setFormData((prevVal) => ({\n                          ...prevVal,\n                          [\"BU\"]: filteredValues.toString(),\n                        }));\n                      }}\n                    />\n                    {/* <MultiSelect\n                    id=\"BU\"\n                    options={[]}\n                    hasSelectAll={true}\n                    isLoading={false}\n                    shouldToggleOnHover={false}\n                    disableSearch={false}\n                    //   valueRenderer={customValueRenderer}\n                    //   value={selectedRoleTypes}\n                    disabled={false}\n                  /> */}\n                  </div>\n                </div>\n              </div>\n              <div className=\" col-md-4 mb-2\">\n                <div className=\"form-group row\">\n                  <label className=\"col-5\" htmlFor=\"Geolocation\">\n                    Geolocation <span className=\"required\">*</span>\n                  </label>\n                  <span className=\"col-1\">:</span>\n                  <div className=\"col-6\">\n                    <MultiSelect\n                      id=\"Geolocation\"\n                      options={country}\n                      hasSelectAll={true}\n                      value={selectedCountry}\n                      disabled={false}\n                      onChange={(e) => {\n                        setSelectedCountry(e);\n                        let filteredCountry = [];\n                        e.forEach((d) => {\n                          filteredCountry.push(d.value);\n                        });\n                        setFormData((prevVal) => ({\n                          ...prevVal,\n                          [\"Geolocation\"]: filteredCountry.toString(),\n                        }));\n                      }}\n                    />\n                  </div>\n                </div>\n              </div>\n              <div className=\" col-md-4 mb-2\">\n                <div className=\"form-group row\">\n                  <label className=\"col-5\" htmlFor=\"From Quater\">\n                    From Quater <span className=\"required\">*</span>\n                  </label>\n                  <span className=\"col-1\">:</span>\n                  <div className=\"col-6\">\n                    <DatePicker\n                      id=\"month\"\n                      selected={month}\n                      onChange={(e) => {\n                        setMonth(e);\n                        setFormData((prevVal) => ({\n                          ...prevVal,\n                          [\"fromQuater\"]: moment(e).format(\"YYYY-MM-DD\"),\n                        }));\n                      }}\n                      dateFormat=\"MMM-yyyy\"\n                      showMonthYearPicker\n                      onKeyDown={(e) => {\n                        e.preventDefault();\n                      }}\n                    />\n                  </div>\n                </div>\n              </div>\n              <div className=\" col-md-4 mb-2\">\n                <div className=\"form-group row\">\n                  <label className=\"col-5\" htmlFor=\"duration\">\n                    Duration\n                  </label>\n                  <span className=\"col-1\">:</span>\n                  <div className=\"col-6\">\n                    <select\n                      id=\"duration\"\n                      onChange={(e) => {\n                        setFormData((prevVal) => ({\n                          ...prevVal,\n                          [\"duration\"]: e.target.value,\n                        }));\n                      }}\n                      value={formData.duration}\n                    >\n                      <option value={1}>1</option>\n                      <option value={2}>2</option>\n                      <option value={3}>3</option>\n                      <option value={4}>4</option>\n                    </select>\n                  </div>\n                </div>\n              </div>\n              <div className=\" col-md-4 mb-2\">\n                <div className=\"form-group row\">\n                  <label className=\"col-5\" htmlFor=\"Summary\">\n                    Summary\n                  </label>\n                  <span className=\"col-1\">:</span>\n                  <div className=\"col-6\">\n                    <select\n                      id=\"Summary\"\n                      onChange={(e) => {\n                        console.log(e.target.value);\n                        setFormData((prevVal) => ({\n                          ...prevVal,\n                          [\"Summary\"]: e.target.value,\n                        }));\n                      }}\n                      value={formData.Summary}\n                    >\n                      <option value=\"BU\">BU</option>\n                      <option value=\"customer\">Customer</option>\n                    </select>\n                  </div>\n                </div>\n              </div>\n              <div className=\"col-md-12 col-sm-12 col-xs-12 btn-container center my-3\">\n                <button\n                  type=\"submit\"\n                  className=\"btn btn-primary\"\n                  onClick={getTableData}\n                >\n                  Search{\" \"}\n                </button>\n              </div>\n            </div>\n          </CCollapse>\n\n          {searching ? <Loader handleAbort={handleAbort} /> : \"\"}\n\n          <div className=\"col-md-12 clearfix\" style={{ height: \"10px\" }}>\n            <div>\n              <span>\n                <span style={{ color: \"#9d7c42\", fontStyle: \"italic\" }}>\n                  {tableMSG}\n                </span>\n              </span>\n            </div>\n          </div>\n          <div align=\" right \">\n            <RiFileExcel2Line\n              size=\"1.5em\"\n              title=\"Export to Excel\"\n              style={{ color: \"green\" }}\n              cursor=\"pointer\"\n              // onClick={handleOnExport}\n            />\n          </div>\n\n          <div className=\"\">{tableComponent}</div>\n        </div>\n      </div>\n    </div>\n  );\n}\nexport default RevenueProjections;\n"],"names":["RevenueProjectionMaterialtable","props","icons","fte0","src","fte_inactive","alt","style","height","float","title","fte1","fte_active","fte2","fte_notice","subk0","subk_inactive","subk1","subk_active","width","size","subk2","subk_notice","data","expandedCols","colExpandState","useState","nodes","setNodes","columns","setColumns","hiddenColumns","setHiddenColumns","colExpFlag","setColumnExpFlag","setHeaders","numberWithCommas","x","number","String","includes","num","Number","final","toFixed","split","replace","join","organizeData","organizedData","departmentIdMap","forEach","node","lvl","id","departmentId","parentId","push","rootNodes","filter","addSubRows","children","subRows","map","child","rootNode","length","levelTwoNodes","lvl2Node","levelThreeNodes","customerId","lvl3Node","levelFourNodes","projectId","useEffect","getData","tableData","count","expandClass","replaceAll","colArr","newHeaders","hiddenHeaders","obj","i","colVal","trim","firstData","filteredHeaders","Object","entries","value","key","assign","minusOneRow","d","index","accessorKey","header","enableColumnActions","enableHiding","Header","column","className","IconButton","onClick","prev","subHeaders","sort","a","b","keyA","keyB","localeCompare","indexOf","subArray","subkey","parts","slice","match","Cell","cell","whiteSpace","overflow","textOverflow","getValue","row","original","values","expandT","expandF","enableExpandAll","enableExpanding","enablePagination","enableBottomToolbar","enableTopToolbar","enableSorting","filterFromLeafRows","initialState","expanded","density","columnVisibility","columnPinning","right","state","defaultColumn","minSize","maxSize","enableStickyHeader","muiTableContainerProps","sx","maxHeight","maxWidth","muiTableBodyProps","borderRight","fontSize","paddingTop","paddingBottom","muiTableHeadProps","borderTop","background","padding","RevenueProjectionByCustomer","customerIdMap","toLowerCase","Date","searching","setsearching","business","setBusiness","selectedBusiness","setSelectedBusiness","country","setCountry","selectedCountry","setSelectedCountry","baseUrl","environment","moment","startOf","_d","month","setMonth","FaChevronCircleUp","cheveronIcon","setCheveronIcon","setTableData","visible","setVisible","tableComponent","setTableComponent","tableMSG","setTableMSG","location","format","useLocation","URLSearchParams","search","get","editmsg","setEditAddmsg","filterData","setFilterData","routes","setRoutes","getMenus","axios","method","url","loggedUserId","then","resp","item","display_name","res","console","log","formData","setFormData","BU","fromQuater","Geolocation","duration","Summary","isExport","updatebusiness","updateGeoLocation","undefined","updatedate","parseISO","setTimeout","getTableData","getBusinessUnit","departments","label","ele","filteredDeptData","Response","countries","e","countryObj","location_name","catch","error","localStorage","getItem","loaderTime","cols","clearTimeout","abortController","useRef","ScreenBreadcrumbs","currentScreenName","GlobalHelp","pdfname","name","SavedSearchGlobal","pageurl","page_Name","payload","FaChevronCircleDown","htmlFor","options","hasSelectAll","isLoading","shouldToggleOnHover","disableSearch","valueRenderer","selected","_options","disabled","onChange","s","filteredValues","prevVal","toString","filteredCountry","dateFormat","showMonthYearPicker","onKeyDown","preventDefault","target","type","Loader","handleAbort","current","abort","color","fontStyle","align","cursor"],"sourceRoot":""}