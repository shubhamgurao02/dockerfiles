{"version":3,"file":"static/js/6971.b15e8a84.chunk.js","mappings":"gfA0lBA,MA5kBA,SAA0BA,GAiDxB,IAhDA,IAAMC,EAAUC,EAAAA,EAAAA,QAEdC,EAcEH,EAdFG,MACAC,EAaEJ,EAbFI,aACAC,EAYEL,EAZFK,gBACAC,EAWEN,EAXFM,qBACAC,EAUEP,EAVFO,kBAEAC,GAQER,EATFS,gBASET,EARFQ,sBACAE,EAOEV,EAPFU,iBACAC,EAMEX,EANFW,aACAC,EAKEZ,EALFY,WAGAC,GAEEb,EAJFc,aAIEd,EAHFe,UAGEf,EAFFa,WACAG,EACEhB,EADFgB,WAEF,GAAwCC,EAAAA,EAAAA,UAAS,IAAG,eAA7CC,EAAY,KAAEC,EAAe,KACpC,GAA0CF,EAAAA,EAAAA,YAAU,eAA7CG,EAAa,KAAEC,EAAgB,KACtC,GAAkCJ,EAAAA,EAAAA,UAAS,IAAIK,MAAO,eAA/CC,EAAS,KACZC,GAD0B,KACbC,IAAOF,GAAWG,OAAO,eACpCC,EAAeC,aAAaC,QAAQ,SACpCC,EAAiBF,aAAaC,QAAQ,WAC5C,GAA8BZ,EAAAA,EAAAA,WAAS,GAAM,eAAtCc,EAAO,KAAEC,EAAU,KAC1B,GAAqCf,EAAAA,EAAAA,WAAS,GAAK,eAA5CgB,EAAU,KAAEC,EAAc,KACjC,GAA0CjB,EAAAA,EAAAA,WAAS,GAAK,eAAjDkB,GAAa,KAAEC,GAAgB,KACtC,IAAsCnB,EAAAA,EAAAA,WAAS,GAAM,iBAA9CoB,GAAW,MAAEC,GAAc,MAClC,IAA4CrB,EAAAA,EAAAA,WAAS,GAAM,iBAC3D,IADqB,MAAmB,OACRA,EAAAA,EAAAA,UAAS,KAAG,iBAArCsB,GAAQ,MAAEC,GAAW,MAC5B,IAAgCvB,EAAAA,EAAAA,WAAS,GAAM,iBAC/C,IADe,MAAa,OACQA,EAAAA,EAAAA,UAAS,CAAC,IAAE,iBAAzCwB,GAAU,MAAEC,GAAa,MAChC,IAA0BzB,EAAAA,EAAAA,WAAS,GAAM,iBAAlC0B,GAAK,MAAEC,GAAQ,MAMhBC,KALMC,EAAAA,EAAAA,QAAO,IAKL,IAAIxB,MACZyB,GAAa,IAAIzB,KACrBuB,GAAMG,WAAcH,GAAMI,SAAW,GAAK,EAAK,GAAK,GAAK,GAAK,KAO5DC,IALmB,IAAI5B,KACzByB,GAAWC,UAAY,QAIX,IAAI1B,KAAKuB,GAAMG,UAAY,SAEhCG,GAAI,EAAGA,GAAI,EAAGA,KAAK,CAC1B,IAAMC,GAAO,IAAI9B,KAAKuB,GAAMG,UAAgB,GAAJG,GAAS,GAAK,GAAK,KACvDC,GAAOF,KACTA,GAAUE,GAEd,CAEA,IASA,IAAgCnC,EAAAA,EAAAA,UATV,CACpBoC,WAAY,GACZC,UAAW,GACXC,aAAc,GACdC,aAAc,GACdC,SAAU,GACVC,UAAW,KAG0C,iBAAhDC,GAAQ,MAAEC,GAAW,OAE5BC,EAAAA,EAAAA,YAAU,WAAQ,GAAG,CAACF,MAkBtBE,EAAAA,EAAAA,YAAU,WAhBRC,IAAAA,IACO7D,EAAO,uDACX8D,MAAK,SAACC,GACL,IAAIC,EAAO,GACPC,EAAOF,EAASE,KACpBA,EAAKC,OAAS,GACZD,EAAKE,SAAQ,SAACC,GACZ,IAAIC,EAAU,CACZC,MAAOF,EAAEX,UACTc,MAAOH,EAAEI,IAEXR,EAAKS,KAAKJ,EACZ,IACFnD,EAAgB+C,EAClB,GAIJ,GAAG,KAEHL,EAAAA,EAAAA,YAAU,WAAO,IAAD,EACuB,EAAJ,KAAd,QAAf,EAAAzD,EAAa,UAAE,aAAf,EAAiBqD,YAC2C,QAA9D,EAAAkB,SAASC,uBAAuB,4BAA4B,UAAE,OAA9D,EAAgEC,QAChEC,YAAW,WAAO,IAAD,EAE2C,QAD1D,EAAAH,SACGC,uBAAuB,8BAA8B,UAAE,OAD1D,EAEIG,iBACA,SACA,SAAUV,GAAI,IAAD,EACsB,KAAd,QAAf,EAAAjE,EAAa,UAAE,aAAf,EAAiBqD,WACnBpD,EAAgBD,EAAa4E,MAAM,EAAG5E,EAAa+D,QAEvD,IACA,EAEN,GAAG,KAEP,GAAG,CAAC/D,IAEJ,IAkDA,IAAkCa,EAAAA,EAAAA,UAAS,IAAG,iBAUxCgE,IAVU,MAAc,MAUb,SAACC,EAASb,GAGzB,IAFA,IAAIc,EAAUR,SAASC,uBAAuB,SAErCzB,EAAI,EAAGA,EAAIgC,EAAQhB,OAAQhB,IAEZ,IAApB+B,EAAQzB,UACY,MAApByB,EAAQzB,UACgB,IAAxByB,EAAQ1B,cACa,KAArB2B,EAAQhC,GAAGqB,OACU,SAArBW,EAAQhC,GAAGqB,OACU,QAArBW,EAAQhC,GAAGqB,YACUY,IAArBD,EAAQhC,GAAGqB,OAEXW,EAAQhC,GAAGkC,UAAUC,IAAI,eACzBhF,GAAqB,IAGrB6E,EAAQhC,GAAGkC,UAAUE,OAAO,eAMV,IAApBL,EAAQzB,UACgB,gBAAxByB,EAAQ1B,cACgB,IAAxB0B,EAAQ1B,aAERlD,GAAqB,IAErBA,GAAqB,GAErBwD,IAAM,CACJ0B,OAAQ,OACRC,IAAKxF,EAAO,yDACZiE,KAAM,CACJO,GAAI,KACJpB,WAAY6B,EAAQ7B,WACpBqC,WAAYC,SAAShE,GACrBiE,YAAazF,EACb0F,gBAAiBF,SACI,MAAnBT,EAAQY,QAAkB,IAAMZ,EAAQY,SAE1CtC,aAAc/B,IAAOyD,EAAQ1B,cAAc9B,OAAO,cAClD6B,aAAc,KACdE,SAAUyB,EAAQzB,YAGnBM,MAAK,SAACgC,GACLzF,GAAqB,GACrBE,GAAqB,GACrBsE,YAAW,WACTtE,GAAqB,EACvB,GAAG,KACHG,EAAaC,GACboB,GAAW,GACXI,IAAiB,GACjBF,GAAe,EACjB,IACC8D,OAAM,SAACC,GAAY,IAE1B,GAEMC,GAAa,SAAChB,GAClBpB,IAAM,CACJ0B,OAAQ,OACRC,IAAKxF,EAAO,yDACZiE,KAAM,CACJO,GAAW,OAAPS,QAAO,IAAPA,OAAO,EAAPA,EAAST,GACbpB,WAAY5B,IAAc,OAAPyD,QAAO,IAAPA,OAAO,EAAPA,EAAS7B,YAAY3B,OAAO,cAC/CgE,WAAYC,SAAShE,GACrBiE,YAAazF,EACb0F,gBAAiBF,SAAgB,OAAPT,QAAO,IAAPA,OAAO,EAAPA,EAASiB,SACnC3C,aAAc/B,IAAc,OAAPyD,QAAO,IAAPA,OAAO,EAAPA,EAAS1B,cAAc9B,OAAO,cACnD6B,aAAc/B,EACdiC,SAAiB,OAAPyB,QAAO,IAAPA,OAAO,EAAPA,EAASzB,YAEpBM,MAAK,SAACqC,GACPvF,GAAU,GACViE,YAAW,WACTjE,GAAU,EACZ,GAAG,KACHF,EAAaC,GACbN,GAAqB,EACvB,GACF,EA0GM+F,GAAc,WAClBvC,IAAM,CACJ0B,OAAQ,SACRC,IACExF,EAAO,iEACmDsC,MAC3DwB,MAAK,SAACkC,GACP3D,IAAe,GACf5B,GAAiB,GACjBoE,YAAW,WACTpE,GAAiB,EACnB,GAAG,KACHC,EAAaC,EACf,GACF,EAEA,SAAS0F,GAA4BtG,GACnC,IAAQqC,EAAgCrC,EAAhCqC,YAAaC,EAAmBtC,EAAnBsC,eACrB,OACE,0BACE,UAAC,KAAM,CACLiE,QAASlE,EACTmE,KAAK,KACLC,UAAU,YACVC,QAAS,kBAAMpE,GAAe,EAAM,EAAC,WAErC,SAAC,KAAY,CAACmE,UAAU,GAAE,UACxB,SAAC,KAAW,WACV,iBAAMA,UAAU,GAAE,SAAC,4BAGvB,UAAC,KAAU,YACT,wBAAI,mDACJ,iBAAKA,UAAU,4BAA2B,WACxC,oBACExC,KAAK,SACLwC,UAAU,kBACVE,QAAS,WACPN,IACF,EAAE,WAEF,SAAC,MAAY,IAAG,UAAQ,OAChB,IAAI,aAEd,oBACEpC,KAAK,SACLwC,UAAU,oBACVE,QAAS,WACPrE,GAAe,EACjB,EAAE,UAED,KACD,SAAC,MAAO,CAACsE,SAAU,SAAU,UAAQ,iBAOnD,CACA,OACE,iBAAKH,UAAU,aAAY,WACzB,UAAC,IAAS,CACRjC,MAAOpE,EACPyG,SAAS,MACTC,eAAa,EACbC,aAAa,qBACbC,gBAAgB,OAChBC,WAAS,EACTC,KAAM,EACNC,kBA7QoB,SAAC9C,GACzB,IAAI+C,GAAa,OAAOhH,GAClBiH,EAAmBhD,EAAnBgD,QACND,EADyB/C,EAAViD,OACQD,EACvBhH,EAAgB+G,GAChBnC,GAASZ,EAAEgD,SACXrF,GAAW,EACb,EAuQMyE,UAAU,uBACVc,kBAAkB,6FAClBC,0BAA0B,sCAC1BC,mBAAoB,CAAC,GAAI,GAAI,IAAK,WAElC,SAAC,MAAM,CACLC,MAAM,aACNC,MAAM,aACNC,OAAO,aACPC,UAAQ,KAEV,SAAC,MAAM,CAACH,MAAM,YAAYE,OAAO,WAAWC,UAAQ,KACpD,SAAC,MAAM,CACLH,MAAM,YACNE,OAAO,WACPC,UAAQ,EACRC,QAAQ,EACRC,OAAQ,SAACC,GAAO,OA9TM9C,EA8ToB8C,GA5T9C,+BACE,mBACEvD,GAAG,YACHgC,UAAU,SACVwB,KAAK,YACLC,SAAU,SAAC7D,GACTa,EAAQiD,eAAe9D,EAAE+D,OAAO5D,OAChCtD,EAAamH,KAAI,SAACC,GACZA,EAAE7D,IAAMJ,EAAE+D,OAAO5D,QACnBU,EAAiB,QAAa,UAAIoD,EAAE5E,UACpCwB,EAAiB,QAAW,QAAIb,EAAE+D,OAAO5D,MAE7C,GACF,EAAE,SAEW,OAAZtD,QAAY,IAAZA,OAAY,EAAZA,EAAcmH,KAAI,SAACE,EAAMjB,GAAK,OAC7B,mBAEE9C,MAAO+D,EAAK9D,GACZ+D,SAAUD,EAAK9D,IAAMS,EAAQA,QAAQY,QAAuB,SAE3DyC,EAAK7E,WAJD4D,EAKE,QAxBU,IAACpC,CA8T4B,KAEpD,SAAC,MAAM,CACLwC,MAAM,eACNjD,GAAG,eACHmD,OAAO,iBACPG,OAAQ,SAACC,GAAO,OApLF,SAAC5H,EAAc4H,EAAS9C,GAC5C,OACE,gBAAKyC,MAAOvH,EAAaoD,aAAa,UACpC,SAAC,IAAU,CACTiD,UAAS,iBAAiC,IAAtBlG,EAA6B,cAAgB,IACjE0H,KAAK,eACLO,SAAUpH,EACVqD,GAAG,eACHD,MAAOpE,EAAaoD,aACpBN,QAASA,GACTuF,mBAAiB,EACjBC,kBAAgB,EAChBC,aAAa,SACbC,WAAW,cACXV,SAAU,SAAC7D,GACTjE,EAAa+H,eAAe1G,IAAO4C,GAAG3C,OAAO,gBAC3CkC,IAAY,SAACiF,GAAI,yBACZA,GAAI,cACN,eAAiBpH,IAAO4C,GAAG3C,OAAO,eAAa,IAEpDL,EAAiBgD,EACnB,KAIR,CA2J6ByE,CAAcd,EAAQ,EAC3CH,UAAQ,EACRC,QAAQ,EACRiB,gBAAgB,SAChBC,eAAgB,SAACxE,EAAOsD,GACtB,OAAe,OAAXA,QAA8B1C,IAAX0C,IAGC,QAApBA,EAAOmB,SACF,IAAI3H,KAAKkD,IAAU,IAAIlD,KAAKwG,EAAOtD,OACb,QAApBsD,EAAOmB,SACT,IAAI3H,KAAKkD,IAAU,IAAIlD,KAAKwG,EAAOtD,OACvB,WAAVA,GAEP,IAAIlD,KAAKkD,GAAOxB,YAAc,IAAI1B,KAAKwG,EAAOtD,OAAOxB,UAK3D,EACAkG,eACE,gBAAKzC,UAAU,iBAAgB,UAC7B,gBAAKA,UAAU,mBAAkB,UAC/B,SAAC,IAAQ,CACPhC,GAAG,aACH0E,YAAY,gBACZC,UAAU,EACVC,eAAe,SACfC,cAAc,QACdV,WAAW,WACXW,gBAAgB,EAChBC,eAAe,EACfC,UAAU,YACVC,eAAe,EACfjD,UAAU,wBAMpB,SAAC,MAAM,CAACiB,MAAM,eAAeE,OAAO,iBAAiBC,UAAQ,KAC7D,SAAC,MAAM,CACLH,MAAM,WACNG,UAAQ,EACRD,OAAO,WACPG,OAAQ,SAACC,GAAO,OAtME,SAAC5H,GACzB,OACE,+BACE,gBAAKqG,UAAU,oBAAmB,UAChC,kBACEA,UAAS,iBAAiC,IAAtBlG,EAA6B,cAAgB,IAEjE0D,KAAK,OACLQ,GAAG,WACHwD,KAAK,WACLzD,MAAOpE,EAAaqD,SACpByE,SAAU,SAAC7D,GACTjE,EAAa+H,eAAe9D,EAAE+D,OAAO5D,MACvC,OAKV,CAoL6BmF,CAAkB3B,EAAQ,EAC/CF,QAAQ,EACRkB,eAAgB,SAACxE,EAAOsD,GACtB,OAAKA,GAGiBA,EAAO8B,MAAM,KACdC,OAAM,SAACC,GAC1B,QAAIA,EAAOC,aAAevF,EAAMuF,WAAWD,EAAOC,iBAG9CD,EAAOE,WAAaxF,EAAMwF,SAASF,EAAOE,cAG1CF,EAAOG,WAAazF,EAAM0F,SAASJ,EAAOG,WAIhD,GACF,KAGF,SAAC,MAAM,CACLE,MAAO,CAAEC,QAAS,QAClBC,WAAS,EACTzC,OAAO,SACP0C,YAAa,CAAEC,MAAO,MAAOC,SAAU,QACvCC,UAAW,CAAEC,UAAW,UACxB7C,UAAQ,KAIV,SAAC,MAAM,CACL8C,KAnNiB,SAACzF,GACxB,OACE,gBAAKiF,MAAO,CAAES,YAAa,QAAS,SACjC9I,GAAkBoD,EAAQ5B,WACD,IAAxB4B,EAAQ3B,cACgB,IAAxB2B,EAAQ1B,cACa,GAArBjD,GACA,mBAAOsK,OAAO,UAAS,WACrB,kBACE5G,KAAK,WACL4G,OAAO,UACPlE,QAAS,SAACtC,GACR,IAAMyG,EAAYzG,EAAE+D,OAAO2C,QAC3BnI,GAASkI,GACT5I,IAAeS,IACfD,GAAcwC,GACd9C,KAAiBO,IACjBX,GAAWW,GACb,EACAqI,UAAW9F,EACX+F,kBAAmB,SAAC5G,GAAC,OAAKa,EAAQb,EAAEG,MAAM,IACzC,IAAI,QAEP,SAAC,MAAY,CACX0G,MAAM,SACNL,OAAO,UACPlE,QAAS,WACPrE,IAAe,GACfE,GAAY0C,EAAQT,GACtB,OAIJ,IAIR,EA+KQmD,OAAO,SACP6C,UAAW,CAAEC,UAAW,UACxB7C,UAAQ,OAIG,KAAd7G,GAAmC,KAAdA,EACpB,IAEA,iBAAKyF,UAAU,uDAAsD,WACnE,oBACEA,UAAU,kBACV0E,SAAUpJ,EACV4E,QAAS,YAlSA,WACjB,IAAMzC,EAAO,CACXX,aAAc,GACdF,WAAY5B,IAAO,IAAIH,MAAQI,OAAO,eAEtC4B,UAAWxB,EACX0B,aAAc,GACdE,UAAW,GACXD,SAAU,IAER2H,EAAK,GACTA,EAAG1G,KAAKR,GACR7D,EAAgB,GAAD,OAAK+K,GAAG,OAAIhL,KAC3B4B,GAAW,GACXI,IAAiB,GACjBF,GAAe,EACjB,CAmRYmJ,EACF,EAAE,UAED,KACD,SAAC,MAAM,IAAG,UACF,KACV,oBACE5E,UAAU,kBACV0E,SAAUlJ,EACVqJ,QAAQ,YACR3E,QAAS,YAxbN,WAAO,IAAD,EAEuD,QADxE,EAAAhC,SACGC,uBAAuB,4CAA4C,UAAE,OADxE,EAEIC,QACJqB,KACA9D,IAAiB,GACjBF,GAAe,GACfF,GAAW,GACE,GAATW,IACFuD,GAAWzD,GAEf,CA8aY8I,GACAlK,GACF,EAAE,WAEF,SAAC,MAAM,IAAG,WACF,KACV,oBACEoF,UAAU,kBACV0E,SAAUhJ,GACVwE,QAAS,YAzcL,WAAO,IAAD,EAC8C,QAAhE,EAAAhC,SAASC,uBAAuB,8BAA8B,UAAE,OAAhE,EAAkEC,QAClE7C,GAAW,GACXI,IAAiB,GACjBF,GAAe,EACjB,CAqcYsJ,GACAlL,GAAqB,EACvB,EACAqH,MAAO,SACPnB,KAAM,QAAQ,WAEd,SAAC,MAAO,CAACI,SAAU,SAAU,gBAKlCvE,IACC,SAACiE,GAA2B,CAC1BjE,YAAaA,GACbC,eAAgBA,KAGlB,KAIR,E,yCC/KA,MAzZA,SAAsCtC,GAAQ,IAAD,wBAEzCyL,EAkBEzL,EAlBFyL,UACA9H,EAiBE3D,EAjBF2D,SACAC,EAgBE5D,EAhBF4D,YACA8H,EAeE1L,EAfF0L,OACAC,EAcE3L,EAdF2L,UACA1D,EAaEjI,EAbFiI,KACA2D,EAYE5L,EAZF4L,QACAC,EAWE7L,EAXF6L,MACAC,EAUE9L,EAVF8L,SACAC,EASE/L,EATF+L,eACAC,EAQEhM,EARFgM,WACAC,EAOEjM,EAPFiM,QACAC,EAMElM,EANFkM,SACAC,EAKEnM,EALFmM,YACAC,EAIEpM,EAJFoM,YACAC,EAGErM,EAHFqM,oBACAC,EAEEtM,EAFFsM,iBACAtL,EACEhB,EADFgB,WAEF,GAA0CC,EAAAA,EAAAA,WAAS,GAAM,eAAlDsL,EAAa,KAAEC,EAAgB,KAChCvM,EAAUC,EAAAA,EAAAA,QAEhB,SAASuM,EAAiBzM,GACxB,IAAQ0L,EAAwB1L,EAAxB0L,OACR,GADgC1L,EAAhBoM,aACwBnL,EAAAA,EAAAA,UAAS,KAAG,eAA7Cb,EAAY,KAAEC,EAAe,KACpC,GAAoCY,EAAAA,EAAAA,UAAS,IAAG,eAAzCL,EAAU,KAAE8L,EAAa,KAChC,GAA4BzL,EAAAA,EAAAA,WAAS,GAAM,eAApC0L,EAAM,KAAE9L,EAAS,KACxB,GAA0CI,EAAAA,EAAAA,WAAS,GAAM,eAAlD2L,EAAa,KAAElM,EAAgB,KACtC,GAAkDO,EAAAA,EAAAA,WAAS,GAAM,eAA1D4L,EAAiB,KAAErM,EAAoB,KAC9C,GAAkDS,EAAAA,EAAAA,WAAS,GAAM,eAA1DV,EAAiB,KAAED,EAAoB,KAExCK,EAAe,WACnB+L,EAAchB,GACd5H,IAAM,CACJ0B,OAAQ,MACRC,IACExF,EAAO,kEACoDyL,KAC5D3H,MAAK,SAACgC,GACP,IAAI+G,EAAU/G,EAAS7B,KACvB7D,EAAgByM,EAClB,GACF,EAIA,OAHAjJ,EAAAA,EAAAA,YAAU,WACRlD,GACF,GAAG,CAAC+K,KAEF,+BACE,iBAAKjF,UAAU,YAAW,WACxB,2BACGoG,GACC,iBAAKpG,UAAU,oBAAmB,WAChC,SAAC,MAAO,IACP,oCAGH,GAEDkG,GACC,iBAAKlG,UAAU,oBAAmB,WAChC,SAAC,MAAO,IACP,0BAGH,GAEDlG,GACC,iBAAKkG,UAAU,kBAAiB,WAC9B,SAAC,MAAa,IACb,wDAGH,GAEDmG,GACC,gBAAKnG,UAAU,oBAAmB,UAChC,kBAAMA,UAAU,SAAQ,WACtB,SAAC,MAAO,CAACD,KAAK,QAAQuG,YAAa,CAAExC,MAAO,WAAc,IAAI,6CAKlE,OAGJ,gBAAK9D,UAAU,sBAAqB,UAClC,gBAAKA,UAAU,4BAA2B,UACxC,gBAAKA,UAAU,cAAa,UAC1B,kBAAM0D,MAAO,CAAEe,MAAO,WAAY,UAAC,iBAAejD,EAAK,cAI7D,gBAAKxB,UAAU,sBAAqB,UAClC,SAAC,EAAgB,CACftG,MAAOuL,EACP/K,aAAcA,EACdP,aAAcA,EACdC,gBAAiBA,EACjBK,iBAAkBA,EAClBF,qBAAsBA,EACtBI,WAAYA,EACZN,qBAAsBA,EACtBuM,kBAAmBA,EACnBtM,kBAAmBA,EACnBoM,OAAQA,EACR9L,UAAWA,EACXG,WAAYA,UAMxB,CACA,SAASgM,EAAgBhN,GACvB,IAAQ2D,EAA4C3D,EAA5C2D,SAAU+H,EAAkC1L,EAAlC0L,OAAQzD,EAA0BjI,EAA1BiI,KAAM4D,EAAoB7L,EAApB6L,MAAOC,EAAa9L,EAAb8L,SACvC,GAA0C7K,EAAAA,EAAAA,UAAS,IAAG,eAA/CgM,EAAa,KAAEC,EAAgB,KAChCvL,EAAeC,aAAaC,QAAQ,SAC1C,GAA8BZ,EAAAA,EAAAA,UAAS,CACrC,CAAEuD,MAAO,cAAeD,MAAO,kBAC/B,CAAEC,MAAO,WAAYD,MAAO,gBAC5B,CAAEC,MAAO,YAAaD,MAAO,cAC7B,CAAEC,MAAO,cAAeD,MAAO,gBAC/B,CAAEC,MAAO,gBAAiBD,MAAO,kBACjC,CAAEC,MAAO,aAAcD,MAAO,8BAC9B,CAAEC,MAAO,WAAYD,MAAO,2BAC5B,CAAEC,MAAO,YAAaD,MAAO,8BAC7B,CAAEC,MAAO,SAAUD,MAAO,0BAC1B,CAAEC,MAAO,UAAWD,MAAO,4BAC3B,CAAEC,MAAO,UAAWD,MAAO,4BAC3B,eAZK0H,EAAO,KAaRkB,GAboB,KAaL,CACnBC,kBAAmB,MACnBC,gBAAyB,OAAR1J,QAAQ,IAARA,OAAQ,EAARA,EAAU2J,QAC3BC,OAAQ9L,IAAOoK,GAAOnK,OAAO,gBAE/B,GAAwCT,EAAAA,EAAAA,UAASkM,GAAa,eAAvD/M,EAAY,KAAEoN,EAAe,KAChCzB,EAAiBtK,IAAOoK,GAAOnK,OAAO,cAEpC+L,EAAQ,CACZC,SAAUjM,IAAOsK,GAAgB4B,QAAQ,SAASjM,OAAO,cACzDkM,OAAQnM,IAAOsK,GACZ4B,QAAQ,SACRrI,IAAI,QAAS,GACb5D,OAAO,eAEZ,GAAoBT,EAAAA,EAAAA,UAASwM,GAAM,eAA5BrC,EAAE,KAAEyC,EAAK,KAgDhB,GAAgD5M,EAAAA,EAAAA,WAAS,GAAM,eAAxD6M,EAAgB,KAAEC,EAAmB,KAe5C,OAbAlK,EAAAA,EAAAA,YAAU,WACJiK,GAzBJZ,EAAiB,IACjBpJ,IAAM,CACJ0B,OAAQ,OACRC,IAAKxF,EAAO,6CACZiE,KAAM,CACJ8J,IAAK,UACLC,IAAK7N,EAAaiN,gBAClBa,SAAUxC,EACV6B,OAAQnC,EAAGwC,OACXO,UAAW/N,EAAagN,kBACxBgB,UAAW,KACXC,UAAW1K,EAAS2K,cACpBC,SAAU5K,EAAS6K,WACnBC,OAAQ9K,EAAS+K,IACjBC,MAAOhL,EAASiL,GAChBC,OAAQlN,KAEToC,MAAK,SAAUqC,GAChB8G,EAAiB9G,EAAIlC,KACvB,KASE6J,GAAoB,EAExB,GAAG,CACD3N,EAAagN,kBACbhN,EAAaiN,gBACbjC,EAAGwC,OACHE,KAIA,0BACE,iBAAKrH,UAAU,GAAE,WACf,gBAAKA,UAAU,iBAAgB,UAC7B,iBAAKA,UAAU,4BAA2B,WACxC,iBAAKA,UAAU,cAAa,WAC1B,0BAAOwB,KACP,mBACExD,GAAG,kBACHwD,KAAK,kBACL6G,aAAcnL,EAAS2J,QACvBpF,SAAU,SAAC7D,GAAC,OACVmJ,GAAgB,SAAC3E,GAAI,yBAChBA,GAAI,cACN,kBAAoBxE,EAAE+D,OAAO5D,OAAK,GAClC,EACJ,SAEO,OAAPyH,QAAO,IAAPA,OAAO,EAAPA,EAAS5D,KAAI,SAACE,GAAI,OACjB,mBACEC,SAAU7E,EAAS2J,QAAQ9I,MAC3BA,MAAO+D,EAAK/D,MAAM,SAGjB+D,EAAKhE,OAFDgE,EAAKhE,MAGH,OAGb,oBACEkC,UAAU,oBACVhC,GAAG,oBACHyD,SAAU,SAAC7D,GACTmJ,GAAgB,SAAC3E,GAAI,yBAChBA,GAAI,cACN,oBAAsBxE,EAAE+D,OAAO5D,OAAK,GAEzC,EAAE,WAEF,mBAAQA,MAAM,MAAK,SAAC,aACpB,mBAAQA,MAAM,WAAU,SAAC,cACzB,mBAAQA,MAAM,cAAa,SAAC,2BAC5B,mBAAQA,MAAM,cAAa,SAAC,yBAC5B,mBAAQA,MAAM,aAAY,SAAC,0BAC3B,mBAAQA,MAAM,iBAAgB,SAAC,8BAG/B,mBAAQA,MAAM,iBAAgB,SAAC,+BAG/B,mBAAQA,MAAM,eAAc,SAAC,mCAGjC,gBAAKiC,UAAU,eAAc,UAC3B,kBAAMA,UAAU,wBAAuB,WACrC,SAAC,MAAmB,CAClBoE,OAAO,UACPrE,KAAM,MACNG,QA3GQ,WACtBkH,GAAM,SAAChF,GAAI,yBACNA,GAAI,cACN,WAAapH,IAAO2J,EAAGsC,UACrBqB,SAAS,QAAS,GAClBrN,OAAO,eAAa,IAEzBmM,GAAM,SAAChF,GAAI,yBACNA,GAAI,cACN,SAAWpH,IAAO2J,EAAGwC,QAAQmB,SAAS,QAAS,GAAGrN,OAAO,eAAa,GAE3E,KAkGc,0BAAOD,IAAO2J,EAAGwC,QAAQlM,OAAO,eAChC,SAAC,MAAoB,CACnBmJ,OAAO,UACPrE,KAAM,MACNG,QA5HG,WACjBkH,GAAM,SAAChF,GAAI,yBACNA,GAAI,cACN,WAAapH,IAAO2J,EAAGsC,UAAUpI,IAAI,QAAS,GAAG5D,OAAO,eAAa,IAExEmM,GAAM,SAAChF,GAAI,yBACNA,GAAI,cACN,SAAWpH,IAAO2J,EAAGwC,QAAQtI,IAAI,QAAS,GAAG5D,OAAO,eAAa,GAEtE,eAyHM,gBAAK+E,UAAU,YAAW,UACxB,SAACuI,EAAA,EAAoB,CACnBtD,OAAQA,EACRxH,KAAM+I,EACNgC,aAAc,GACdC,eAAgB,GAChBrD,MAAOA,EACPC,SAAUA,EACV1L,aAAcA,UAM1B,CACA,IACMqE,GADO0K,QAAQjD,GACH,iBAAc9G,EAEhC,OACE,iBAAKqB,UAAU,GAAE,WACf,SAAC2I,EAAA,GAAO,CACN3K,GAAIA,GACJ4K,KAAMF,QAAQjD,GACdA,SAAUA,EACVxF,QAASyF,EACTmD,aAAc,CACZC,SAAU,MACVC,WAAY,QAEdC,gBAAiB,CACfF,SAAU,SACVC,WAAY,QACZ,UAEF,iBAAK/I,UAAU,gBAAe,WAC5B,UAACiJ,EAAA,EAAW,YACV,0BAAOzH,KACP,SAAC,MAAG,CAACtB,QAASwF,QAEhB,SAACwD,EAAA,EAAa,WACZ,2BACE,yBACE,SAAC,KAAI,CAACC,GAAE,6BAAwBlE,GAAUtD,OAAO,SAAQ,SAAC,8BAIhC,aAAb,QAAd,EAAApI,EAAM2D,gBAAQ,aAAd,EAAgB2J,SACf,IAEA,yBACE,UAAC,KAAI,CACH3G,QAAS,WACP6F,GAAiB,GACjBJ,GAAY,EACd,EAAE,UACH,kBACiB,IACY,gBAAb,QAAd,EAAApM,EAAM2D,gBAAQ,aAAd,EAAgB2J,SACb,aAC2B,aAAb,QAAd,EAAAtN,EAAM2D,gBAAQ,aAAd,EAAgB2J,SAChB,cAC2B,cAAb,QAAd,EAAAtN,EAAM2D,gBAAQ,aAAd,EAAgB2J,SAChB,aAC2B,gBAAb,QAAd,EAAAtN,EAAM2D,gBAAQ,aAAd,EAAgB2J,SAChB,eAC2B,kBAAb,QAAd,EAAAtN,EAAM2D,gBAAQ,aAAd,EAAgB2J,SAChB,iBAC2B,eAAb,QAAd,EAAAtN,EAAM2D,gBAAQ,aAAd,EAAgB2J,SAChB,4BAC2B,aAAb,QAAd,EAAAtN,EAAM2D,gBAAQ,aAAd,EAAgB2J,SAChB,0BAC2B,cAAb,QAAd,EAAAtN,EAAM2D,gBAAQ,aAAd,EAAgB2J,SAChB,4BAC2B,WAAb,QAAd,EAAAtN,EAAM2D,gBAAQ,aAAd,EAAgB2J,SAChB,wBAC2B,YAAb,QAAd,EAAAtN,EAAM2D,gBAAQ,aAAd,EAAgB2J,SAChB,0BAC2B,YAAb,QAAd,EAAAtN,EAAM2D,gBAAQ,aAAd,EAAgB2J,SAChB,wBACA,SAIV,yBACE,SAAC,KAAI,CACH3G,QAAS,WACP0F,GAAoB,GACpBD,GAAY,EAEd,EAAE,SACH,6BASVE,GACC,SAACG,EAAgB,CACff,OAAQA,EACRC,UAAWA,EACX1D,KAAMA,EACNmE,YAAaA,IAEbG,GACF,SAACS,EAAe,CACdT,cAAeA,EACfC,iBAAkBA,EAClBf,UAAWA,EACX9H,SAAUA,EACVC,YAAaA,EACb8H,OAAQA,EACRC,UAAWA,EACX1D,KAAMA,EACN2D,QAASA,EACTC,MAAOA,EACPC,SAAUA,EACVC,eAAgBA,EAChBC,WAAYA,EACZC,QAASA,EACTG,YAAaA,IAGf,KAIR,E,oKChaA,SAASyD,EAAY7P,GACnB,OACE,SAAC8P,EAAA,GAAO,gBAAClJ,SAAS,UAAUuD,MAAO,CAAEI,MAAO,GAAIwF,OAAQ,KAAU/P,GAAK,cAErE,iBAAMgQ,EAAE,sWAGd,CAEA,SAASC,EAAWjQ,GAClB,OACE,SAAC8P,EAAA,GAAO,gBAAClJ,SAAS,UAAUuD,MAAO,CAAEI,MAAO,GAAIwF,OAAQ,KAAU/P,GAAK,cAErE,iBAAMgQ,EAAE,wfAGd,CAEA,SAASE,EAAoBlQ,GAC3B,IAAMmK,GAAQgG,EAAAA,EAAAA,IAAU,CACtBC,KAAM,CACJC,QAAS,EACTC,UAAW,yBAEbV,GAAI,CACFS,QAASrQ,EAAMuQ,GAAK,EAAI,EACxBD,UAAU,eAAD,OAAiBtQ,EAAMuQ,GAAK,EAAI,GAAE,cAI/C,OACE,SAAC,QAAY,CAACpG,MAAOA,EAAM,UACzB,SAACqG,EAAA,GAAQ,UAAKxQ,KAGpB,CASA,IAAMyQ,GAAiBC,EAAAA,EAAAA,KAAO,SAAC1Q,GAAK,qBAClC,0BACE,mBAAC2Q,EAAA,GAAQ,kBACH3Q,GAAK,IACT4Q,IAAKC,OAAiB,QAAX,EAAC7Q,EAAM8Q,YAAI,aAAV,EAAYrM,IACxBsM,OAAQF,OAAiB,QAAX,EAAC7Q,EAAM8Q,YAAI,aAAV,EAAYrM,IAC3BF,MAAiB,QAAZ,EAAEvE,EAAM8Q,YAAI,aAAV,EAAYE,UACnBd,oBAAqBA,IAEpBe,MAAMC,QAAkB,QAAX,EAAClR,EAAM8Q,YAAI,aAAV,EAAYK,SACb,QADqB,EAC/BnR,EAAM8Q,YAAI,aAAV,EAAYK,QAAQ9I,KAAI,SAACyI,GAAI,OAAKM,EAAWN,EAAK,IAClDO,QAAQC,IAAI,kBAEd,GAbeZ,EAcpB,kBAAGa,EAAK,EAALA,MAAK,mCACFC,EAAAA,EAAAA,eAAkC,CACvC,WAAY,CACVnB,QAAS,OAEZ,sBACMmB,EAAAA,EAAAA,OAA0B,CAC/BC,WAAY,GACZ7G,YAAa,GACb8G,WAAW,cAAD,QAAgBC,EAAAA,EAAAA,IAAMJ,EAAMK,QAAQC,KAAKC,QAAS,OAC7D,KAGGV,EAAa,SAACW,GAAK,OACvB,0BACE,SAACtB,EAAc,CAACK,KAAMiB,KAClB,EAGO,SAASC,EAAkChS,GACxD,IAAQkE,EAASlE,EAATkE,KACRmN,QAAQC,IAAIpN,GACZ,IAiCM+N,EAjCa,SAACC,EAAWlK,GAC7B,IAAKiJ,MAAMC,QAAQgB,GACjB,MAAO,GAETlK,GAAO,QACLvD,GAAI,KACJ0N,SAAU,YACVC,SAAU,WACPpK,GAEL,IAAMqK,EAAa,CAAC,EACdC,EAAO,GACPF,EAAWpK,EAAQoK,SAmBzB,OAlBS,OAATF,QAAS,IAATA,GAAAA,EAAW9N,SAAQ,SAAC0M,GAClB,IAAMC,EAASD,EAAK9I,EAAQvD,IACtB8N,EAAezB,EAAK9I,EAAQmK,UAElCE,EAAWtB,IAAO,0BACfqB,EAAW,IACTtB,GACAuB,EAAWtB,IAEhBsB,EAAWE,GAAgBF,EAAWE,KAAa,UAAOH,EAAW,IACrEC,EAAWE,GAAcH,GAAU1N,KAAK2N,EAAWtB,GACrD,IAEAyB,OAAOC,OAAOJ,GAAYjO,SAAQ,SAACsO,GACF,qBAApBA,EAAI1K,EAAQvD,KACrB6N,EAAK5N,KAAI,MAAT4N,GAAI,OAASI,EAAIN,IAErB,IACOE,CACT,CACkBK,CAAWzO,GAC7BmN,QAAQC,IAAIW,GACZZ,QAAQC,IAAIW,EAAU,IAWtB,IAAMW,EAVN,SAASC,EAAc/B,GACrB,IAAIgC,EAAM,CAACjC,OAAOC,EAAKrM,KAMvB,OALIqM,EAAKK,SAAWL,EAAKK,QAAQhN,OAAS,GACxC2M,EAAKK,QAAQ/M,SAAQ,SAAC2O,GACpBD,EAAIpO,KAAI,MAARoO,GAAG,OAASD,EAAcE,IAC5B,IAEKD,CACT,CAEoBD,CAAcZ,EAAU,IAE5C,OACE,SAACe,EAAA,EAAQ,CACP,aAAW,cACXC,gBAAiBL,EACjBM,qBAAqB,SAACrD,EAAW,IACjCsD,mBAAmB,SAAClD,EAAU,IAC9BmD,GAAI,CACF,wDAAyD,CACvD7I,MAAO,OACP8I,SAAU,IAGd5M,UAAU,gBAAe,SAExB2K,EAAWa,EAAU,KAG5B,CC9FA,OArDA,SAA4CjS,GAUtCA,EARFsT,eAQEtT,EAPFuT,kBAFF,IAGEC,EAMExT,EANFwT,OACAC,EAKEzT,EALFyT,UACAC,EAIE1T,EAJF0T,cAOIjP,GAHFzE,EAHF2T,kBAGE3T,EAFF4T,oBAEE5T,EADF6T,YAGW1E,QAAQqE,GACH,iBAAcpO,GAC1B+G,EAAc,WAClBsH,GAAU,EACZ,EAEA,OACE,gBAAKhN,UAAU,GAAE,UACf,SAAC2I,EAAA,GAAO,CACN3K,GAAIA,EACJ4K,KAAMF,QAAQqE,GACdtH,SAAUsH,EACV9M,QAASyF,EACTmD,aAAc,CACZC,SAAU,MACVC,WAAY,QAEdC,gBAAiB,CACfF,SAAU,SACVC,WAAY,QACZ,UAEF,iBAAK/I,UAAU,iBAAgB,WAC7B,SAACiJ,EAAA,EAAW,WACV,SAAC,MAAG,CAAC/I,QAASwF,OAEhB,SAACwD,EAAA,EAAa,WACZ,2BACG,SACiBvK,GAAjBsO,GACC,SAAC1B,EAAiC,CAAC9N,KAAMwP,IAEzC,eAQhB,E,YCtCe,SAASI,GAAoC9T,GAC1D,IACEkE,EAYElE,EAZFkE,KACA+K,EAWEjP,EAXFiP,aACAC,EAUElP,EAVFkP,eACAvL,EASE3D,EATF2D,SACAC,EAQE5D,EARF4D,YAEAiI,GAME7L,EAPFwE,MAOExE,EANF6L,OACAC,EAKE9L,EALF8L,SACAiI,EAIE/T,EAJF+T,cACAC,EAGEhU,EAHFgU,YACAC,EAEEjU,EAFFiU,eACAjT,EACEhB,EADFgB,WAEF,GAA4BC,EAAAA,EAAAA,UAAS,IAAG,eAAjCyK,EAAM,KAAEC,EAAS,KACxB,GAAwB1K,EAAAA,EAAAA,YAAU,eAA3BgH,EAAI,KAAE2D,EAAO,KACpB,GAA0B3K,EAAAA,EAAAA,UAAS,MAAK,eAAjC8Q,EAAK,KAAEmC,EAAQ,KACtB,GAA8BjT,EAAAA,EAAAA,UAAS,MAAK,eAArCkT,EAAO,KAAEC,EAAU,KAC1B,GAA0CnT,EAAAA,EAAAA,UAAS,CAAC,GAAE,eAA/CoT,EAAa,KAAEC,EAAgB,KACtC,GAAuCrT,EAAAA,EAAAA,WAAS,GAAM,gBAA/CsT,GAAU,MAAEC,GAAgB,MACnC,IAA8BvT,EAAAA,EAAAA,UAAS,IAAG,iBAA1BwT,IAAF,MAAY,OAC1B,IAA4CxT,EAAAA,EAAAA,WAAS,GAAM,iBAApDqS,GAAc,MAAEC,GAAiB,MACxC,IAAgCtS,EAAAA,EAAAA,UAAS,MAAK,iBAAvCiL,GAAQ,MAAEE,GAAW,MAC5B,IAA4BnL,EAAAA,EAAAA,UAAS,MAAK,iBAAnCuS,GAAM,MAAEC,GAAS,MACxB,IAAiDxS,EAAAA,EAAAA,WAAS,GAAM,iBAAzD0S,GAAiB,MAAEC,GAAmB,MACvC3T,GAAUC,EAAAA,EAAAA,QACVwU,IAAkB5R,EAAAA,EAAAA,QAAO,MAC/B,IAAyC7B,EAAAA,EAAAA,UAAS,IAAG,iBAA9CyS,GAAa,MAAEiB,GAAe,MACrC,IAAgD1T,EAAAA,EAAAA,WAAS,GAAM,iBAAxDqL,GAAgB,MAAED,GAAmB,MAEtCuI,GAAQ,CACZC,WACE,gBACEC,IAAKC,EACLC,IAAI,oBACJ7K,MAAO,CAAE4F,OAAQ,QACjBpI,MAAM,oBAGVsN,WACE,gBACEH,IAAKI,EACLF,IAAI,oBACJ7K,MAAO,CAAE4F,OAAQ,QACjBpI,MAAM,8BAGVwN,YACE,gBACEL,IAAKM,EACLJ,IAAI,qBACJ7K,MAAO,CAAE4F,OAAQ,QACjBpI,MAAM,sBAGV0N,aACE,gBACEP,IAAKQ,EACLN,IAAI,sBACJ7K,MAAO,CAAE4F,OAAQ,OAAQwF,UAAW,QACpC5N,MAAM,gBAGV6N,OACE,gBACEV,IAAKW,EACLT,IAAI,uBACJ7K,MAAO,CAAE4F,OAAQ,OAAQwF,UAAW,QACpC5N,MAAM,kBAGV+N,OACE,gBACEZ,IAAKa,EACLX,IAAI,qBACJ7K,MAAO,CAAE4F,OAAQ,OAAQwF,UAAW,QACpC5N,MAAM,iCAINiO,GAAcC,OAAOnC,IAAiB,GAyB5C7P,EAAAA,EAAAA,YAAU,YAEa,IAAnB6P,IACkB,IAAlBA,IACkB,KAAlBA,IACCoC,MAAMpC,KA7BU,WACnBiB,GAAgB,IAChB,IAAMoB,EAAajR,YAAW,WAC5B8O,IAAoB,EACtB,GAAG,KACHc,GAAgBsB,QAAU,IAAIC,gBAC9BnS,IAAM,CACJ0B,OAAQ,MACRC,IACExF,GAAO,kEACoD2V,IAC7DM,OAAQxB,GAAgBsB,QAAQE,SAC/BnS,MAAK,SAACgC,GACP,IAAIoQ,EAAOpQ,EAAS7B,KACdkS,EAAmB,OAAJD,QAAI,IAAJA,OAAI,EAAJA,EAAMrO,QACzB,SAACuO,GAAI,OAAS,OAAJA,QAAI,IAAJA,OAAI,EAAJA,EAAM5R,MAAOoR,OAAOD,IAAe,CAAC,IAEhDjB,GAAgByB,GAChB7C,IAAkB,GAClBK,IAAoB,GACpB0C,aAAaP,EACf,GACF,CASIQ,EAEJ,GAAG,CAAC7C,KAEJ,IAAMG,GAAc,WAClBa,GAAgBsB,SAAWtB,GAAgBsB,QAAQQ,QACnD5C,IAAoB,EACtB,EAEM6C,GAAmB,SAACC,GACxB,IAAIC,EAAS9F,OAAO6F,GACpB,IAA6B,IAAzBC,EAAOzM,SAAS,KAAe,CACjC,IAA+B,IAA3ByM,EAAOzM,SAAS,OAAiB,CAAC,IAAD,EAC/B0M,EAAiBD,EAGjBE,GADa,OADbC,EAAMjB,OAAOe,MACW,QAAP,EAAIE,SAAG,aAAH,EAAKC,QAAQ,KACtBnN,MAAM,KAGtB,OAFAiN,EAAM,GAAKA,EAAM,GAAGG,QAAQ,gCAAiC,KAEtDH,EAAMI,KAAK,IACpB,CACML,EAAiBD,EADf,IAAD,EAEDG,EAEAD,GADa,OADbC,EAAMjB,OAAOe,MACW,QAAP,EAAIE,SAAG,aAAH,EAAKC,QAAQ,KACtBnN,MAAM,KAGtB,OAFAiN,EAAM,GAAKA,EAAM,GAAGG,QAAQ,gCAAiC,KAEtDH,EAAMI,KAAK,IAEtB,CACE,OACY,MAAVN,IAAwB,OAANA,QAAM,IAANA,OAAM,EAANA,EAAQK,QAAQ,gCAAiC,KAGzE,GACAnT,EAAAA,EAAAA,YAAU,WACRqT,IACF,GAAG,CAAChT,EAAKiT,YACT,IAAIC,GAAQ,EACNF,GAAU,WAAO,IAAD,MAChBG,EAAc,GAGhBA,EADgB,GAAd9C,IAAsB6C,GAAQ,EAClB,WAEA,GAEhB,IAEkC,EAF9BD,EAAYjT,EAAKiT,UACjBhD,EAAU,KACN,OAAJjQ,QAAI,IAAJA,GAAa,QAAT,EAAJA,EAAMiQ,eAAO,OAAb,EAAejK,SAAS,KAC1BiK,EAAc,OAAJjQ,QAAI,IAAJA,GAAa,QAAT,EAAJA,EAAMiQ,eAAO,WAAT,EAAJ,EAAemD,WAAW,IAAK,IAEzCnD,EAAc,OAAJjQ,QAAI,IAAJA,OAAI,EAAJA,EAAMiQ,QAGlB,IAAIoD,EAAY,QAAV,EAAGpD,SAAO,aAAP,EAASvK,MAAM,KAEpB4N,EAAS,UAEHpS,GAANmS,IACFC,EAAM,UAJS,CAAC,aAIQ,OAAID,KAO9B,IAJA,IAAIE,EAAa,GACbC,EAAgB,GAEdhF,EAAM,CAAC,EACJvP,EAAI,EAAGA,GAAU,QAAT,EAAGqU,SAAM,aAAN,EAAQrT,QAAQhB,IAAK,CAAC,IAAD,EACnCwU,EAASH,EAAOrU,GAAGyU,OAEnBC,EAAYV,EAAU,GAC1BzE,EAAIiF,GAAUE,EAAUF,EAC1B,CAEA,IAAIG,EAActF,OAAOuF,QAAQrF,GAC7BsF,EAAe,CAAC,KAAM,gBACtBC,EAAkBH,EAAYhQ,QAChC,SAACkI,GAAC,OAAMgI,EAAa9N,SAAS8F,EAAE,GAAG,IAErCyE,GAAWwD,GAEXA,EAAgB5P,KAAI,YAAmB,IAAD,eAAhBuI,EAAG,KAAO,KAC1B3B,EAAa/E,SAAS0G,IACxB8G,EAAchT,MAAK,UAAGkM,GAAM,GAEhC,IAEA0D,EAAiB9B,OAAO0F,OAAM,MAAb1F,OAAM,CAAQ,CAAC,GAAC,OAAKkF,KAEtC,IAAIS,EAAa,OAAThB,QAAS,IAATA,OAAS,EAATA,EAAWrP,QAAO,SAACkI,GAAC,OAAc,GAATA,EAAEoI,EAAQ,IAC3CH,EAAgB5P,KAAI,WAAef,GAAW,IAAD,eAAvBsJ,EAAG,KAAEpM,EAAK,KACjB,OAALA,QAAK,IAALA,GAAAA,EAAOwS,QAAQ,OAAQ,IAC/BS,EAAW/S,KAAK,CACd2T,YAAazH,EACbhJ,OAAQpD,EACR8T,qBAAqB,EACrBC,cAAc,EACdC,QAAS,EAETC,OAAQ,YAAS,EAANC,OAAM,OACf,iBACEjS,UACEmK,EAAI1G,SAAS,SACb0G,EAAI1G,SAAS,UACb0G,EAAI1G,SAAS,aACb0G,EAAI1G,SAAS,WACD,QACL,OAAH0G,QAAG,IAAHA,GAAAA,EAAK1G,SAAS,OAAY,OAAH0G,QAAG,IAAHA,GAAAA,EAAK1G,SAAS,MACrC,sBACG,OAAH0G,QAAG,IAAHA,GAAAA,EAAK1G,SAAS,WACd,gBACG,OAAH0G,QAAG,IAAHA,GAAAA,EAAK1G,SAAS,cACd,mBACG,OAAH0G,QAAG,IAAHA,GAAAA,EAAK1G,SAAS,gBACd,qBACG,OAAH0G,QAAG,IAAHA,GAAAA,EAAK1G,SAAS,aACd,cACG,OAAH0G,QAAG,IAAHA,GAAAA,EAAK1G,SAAS,YACX,OAAH0G,QAAG,IAAHA,GAAAA,EAAK1G,SAAS,SACX,OAAH0G,QAAG,IAAHA,GAAAA,EAAK1G,SAAS,aACX,OAAH0G,QAAG,IAAHA,GAAAA,EAAK1G,SAAS,SACX,OAAH0G,QAAG,IAAHA,GAAAA,EAAK1G,SAAS,cACX,OAAH0G,QAAG,IAAHA,GAAAA,EAAK1G,SAAS,iBACX,OAAH0G,QAAG,IAAHA,GAAAA,EAAK1G,SAAS,eACX,OAAH0G,QAAG,IAAHA,GAAAA,EAAK1G,SAAS,YACX,OAAH0G,QAAG,IAAHA,GAAAA,EAAK1G,SAAS,aACX,OAAH0G,QAAG,IAAHA,GAAAA,EAAK1G,SAAS,aACX,OAAH0G,QAAG,IAAHA,GAAAA,EAAK1G,SAAS,gBACX,OAAH0G,QAAG,IAAHA,GAAAA,EAAK1G,SAAS,UACX,OAAH0G,QAAG,IAAHA,GAAAA,EAAK1G,SAAS,QACX,OAAH0G,QAAG,IAAHA,GAAAA,EAAK1G,SAAS,MACd,QACA,cACL,UAEK,OAAL1F,QAAK,IAALA,GAAAA,EAAO0F,SAAS,SACf,gBAAKvC,MAAOnD,EAAMwS,QAAQ,OAAQ,KAAK,SACpCxS,EAAMwS,QAAQ,OAAQ,QAGzB,gBAAKrP,MAAOnD,EAAM,SAAEA,IAErBoM,GAAO1B,EAAe,IACrB,iBAAMzI,UAAS,qBAAgB4Q,GAAc,UAC3C,SAACsB,EAAA,EACC,CACAhS,QAAS,WACP6N,IAAiB,SAAC3L,GAAI,OAAMA,CAAI,GAClC,EAAE,UAEF,SAAC,MAAc,QAGjB,OACA,GAGZ,IACA,IAAI+P,EACFT,IAAyB,QAAxB,EAAI3F,OAAOuF,QAAQI,EAAE,WAAG,aAApB,EAAsBrQ,QAAO,SAACkI,GAAC,QAAkB,OAAZgI,QAAY,IAAZA,GAAAA,EAAc9N,SAAS8F,EAAE,IAAK,KAI1EyH,EAAWpP,KAAI,SAACnE,GACd,IAAIf,EAAIsU,EAAWoB,QAAQ3U,GAE3B0U,EAAWvQ,KAAI,WAAef,GAAW,IAAD,eAAvBsJ,EAAG,KAAEpM,EAAK,KACzB,GAAIoM,GAAO1M,EAAKmU,YAAa,CAC3B,IAAI3F,EAAM,CACRjO,GAAImM,EACJhJ,QACE,gBACEnB,UACEmK,EAAI1G,SAAS,OAAY,OAAH0G,QAAG,IAAHA,GAAAA,EAAK1G,SAAS,MAChC,sBACA0G,EAAI1G,SAAS,MACb,cACS,IAAT1F,GAAwB,MAATA,QAA0BY,GAATZ,EAChC,GACA,cAENmD,MAAOnD,EAAM,SAEH,MAATA,GAA0B,GAATA,EAAa,KAAOA,IAG1C6T,YAAazH,EAEbkI,KAAM,YAAe,IAAD,IAAXC,EAAI,EAAJA,KACP,OACE,gBACE5O,MAAO,CACL6O,WAAY,SACZC,SAAU,SACVC,aAAc,YACd,SAEiB,QAAlBH,EAAKL,OAAOjU,IAAqC,MAArBsU,EAAKI,IAAIC,UACpC,+BACE,kBAAMzR,MAAOoR,EAAKM,WAAWzP,MAAM,KAAK,GAAG,UACxCgL,GAAMmE,EAAKI,IAAIC,SAASE,KAAK1P,MAAM,KAAK,IAAK,IACnB,SAA1BmP,EAAKI,IAAIC,SAASE,MACjB,cAAG7S,UAAU,cAAa,SAAC,WACC,OAA1BsS,EAAKI,IAAIC,SAASE,MACpB,cAAG7S,UAAU,cAAa,SAAC,UAE3B,SAAC,KAAI,CACHE,QAAS,SAACtC,GACR+H,GAAY/H,EAAEkV,eACdlN,IAAoB,GACpB4H,GAAe,GACbtI,EAAUoN,EAAKI,IAAIC,SAAShB,IAC9BxM,EAAQmN,EAAKI,IAAIC,SAASE,KAAK1P,MAAM,KAAK,GAC5C,EACAO,MAAO,CACLU,OAAQ,WACR,SAEDkO,EAAKM,WAAWzP,MAAM,KAAK,UAKhB,YAAlBmP,EAAKL,OAAOjU,IACY,SAA1BsU,EAAKI,IAAIC,SAASE,MACQ,OAA1BP,EAAKI,IAAIC,SAASE,MACG,MAArBP,EAAKI,IAAIC,UACT,8BACsB,KAAnBL,EAAKM,YACJ,iCACE,iBACE5S,UAAU,qBACVkB,MAAO,mBAE0B,GAAlCoR,EAAKI,IAAIC,SAASI,cACE,MAArBT,EAAKI,IAAIC,UACP,iBACE3S,UAAU,qBACVkB,MAAO,qBAAqB,UAE5B,SAAC,MAAa,OAGhB,iBACElB,UAAU,mBACVkB,MAAO,kBAAkB,UAEzB,SAAC,MAAa,UAKpB,iCACE,iBACElB,UAAU,mBACVkB,MAAO,uBAE0B,GAAlCoR,EAAKI,IAAIC,SAASI,cACE,MAArBT,EAAKI,IAAIC,UACP,iBACE3S,UAAU,mBACVkB,MAAO,kBAAkB,UAEzB,SAAC,MAAa,OAGhB,iBACElB,UAAU,qBACVkB,MAAO,qBAAqB,UAE5B,SAAC,MAAa,WAMJ,cAAlBoR,EAAKL,OAAOjU,IACO,MAArBsU,EAAKI,IAAIC,UACT,iBAAK3S,UAAU,aAAY,UACE,SAA1BsS,EAAKI,IAAIC,SAASE,MACS,OAA1BP,EAAKI,IAAIC,SAASE,OAChB,iBACE7S,UAAU,gBACVE,QAAS,SAACtC,GACRoP,GAAUpP,EAAEkV,eACZ5E,GAAgBoE,EAAKI,IAAIC,SAAShB,GACpC,EACAzQ,MAAO,YACPwC,MAAO,CACLU,OAAQ,WACR,UAEF,SAAC,MAAmB,OAG1B,iBAAMlD,MAAsB,QAAjB,EAAEoR,EAAKM,kBAAU,aAAf,EAAiBzP,MAAM,KAAK,GAAG,SACzC,GAAKmP,EAAKM,YAAc,IAAyB,MAAnBN,EAAKM,WACjB,QADmC,EAClDN,EAAKM,kBAAU,aAAf,EAAiBzP,MAAM,KAAK,GAC5B,QAGa,iBAAnBmP,EAAKL,OAAOjU,IACO,WAApBd,EAAS8V,SACY,OAApB9V,EAAS8V,QAIU,YAAnBV,EAAKL,OAAOjU,IACO,WAApBd,EAAS8V,SACY,OAApB9V,EAAS8V,QAIS,OAAlBV,EAAKL,OAAOjU,IAAkC,MAAnBsU,EAAKM,YAClC,iBAAK5S,UAAU,cAAckB,MAAOoR,EAAKM,WAAW,UACjDN,EAAKM,WAAW,OAEE,MAAnBN,EAAKM,YAC0B,SAAjCN,EAAKM,WAAWzP,MAAM,KAAK,IAC3B,iBACEnD,UAAU,+BACVkB,MAAOoR,EAAKM,WAAWzP,MAAM,KAAK,GAAG,SAEpCmP,EAAKM,WAAWzP,MAAM,KAAK,KAET,MAAnBmP,EAAKM,YACPN,EAAKM,WAAWnP,SAAS,UACxB0G,EAAI1G,SAAS,OACZ0G,EAAI1G,SAAS,OACb0G,EAAI1G,SAAS,QACf,iBACEzD,UAAU,2BACVkB,MAAOoR,EAAKM,WAAWzP,MAAM,KAAK,GAAG,SAEpCmP,EAAKM,WAAWzP,MAAM,KAAK,KAET,YAAnBmP,EAAKM,YACY,eAAnBN,EAAKM,YACL,iBACE5S,UAAU,+BACVkB,MAAOoR,EAAKM,WAAWzP,MAAM,KAAK,GAAG,SAEpCmP,EAAKM,WAAWzP,MAAM,KAAK,KAER,WAApBjG,EAAS8V,SACX7I,EAAI1G,SAAS,aACb,iBAAKwP,MAAM,cAAc/R,MAAOoR,EAAKM,WAAW,UAC7C5C,GAAiBsC,EAAKM,YAAY,OAEhB,MAAnBN,EAAKM,YAAsBzI,EAAI1G,SAAS,OAC1C,iBACEzD,UAAU,kCACVkB,MAAOoR,EAAKM,WAAW,SAEtBN,EAAKM,aAEa,MAAnBN,EAAKM,aACNzI,EAAI1G,SAAS,YAAc0G,EAAI1G,SAAS,UACzC,+BACE,iBAAKvC,MAAO8O,GAAiBsC,EAAKM,YAAY,WAC5C,0BAAM,OACN,iBAAMlP,MAAO,CAAEwP,MAAO,SAAU,SAC7BlD,GAAiBsC,EAAKM,mBAIR,MAAnBN,EAAKM,aACNzI,EAAI1G,SAAS,YAAc0G,EAAI1G,SAAS,UACzC,+BACE,iBAAKvC,MAAO8O,GAAiBsC,EAAKM,YAAY,WAC5C,0BAAM,OACN,iBAAMlP,MAAO,CAAEwP,MAAO,SAAU,SAAE,SAGjB,MAAnBZ,EAAKM,YAAsBzI,EAAI1G,SAAS,gBAC1C,+BACE,iBAAKwP,MAAM,cAAc/R,MAAOoR,EAAKM,WAAW,UAC7C5C,GAAiBsC,EAAKM,YAAY,UAGjB,WAApB1V,EAAS8V,SACX7I,EAAI1G,SAAS,aACb,iBACEwP,MAAM,cACN/R,MAAO8O,GAAiBsC,EAAKM,YAAY,UAExC5C,GAAiBsC,EAAKM,YAAY,OAEf,OAApB1V,EAAS8V,SAAoB7I,EAAI1G,SAAS,aAOtB,OAApBvG,EAAS8V,SAAoB7I,EAAI1G,SAAS,aAN5C,gBACEwP,MAAM,cACN/R,MAAO8O,GAAiBsC,EAAKM,YAAY,SAExC5C,GAAiBsC,EAAKM,cASJ,MAAnBN,EAAKM,aACNzI,EAAI1G,SAAS,OAAS0G,EAAI1G,SAAS,iBACpC,+BACE,iBAAKwP,MAAM,cAAc/R,MAAOoR,EAAKM,WAAW,UAC7C5C,GAAiBsC,EAAKM,YAAY,UAGlB,MAAnBN,EAAKM,YAAsBzI,EAAI1G,SAAS,OAC1C,+BACE,iBAAKwP,MAAM,cAAc/R,MAAOoR,EAAKM,WAAW,UAC7C,EAAE,UAGa,QAAlBN,EAAKL,OAAOjU,IACI,YAAlBsU,EAAKL,OAAOjU,IACZ,iBAAMkD,MAAOoR,EAAKM,WAAW,SAAEN,EAAKM,aACf,MAAnBN,EAAKM,YACW,aAAlBN,EAAKL,OAAOjU,IACZ,iBAAKiV,MAAM,qBAAqB/R,MAAOoR,EAAKM,WAAW,UACpD,IACAN,EAAKM,cAEc,WAApB1V,EAAS8V,SACQ,MAAnBV,EAAKM,YACc,IAAnBN,EAAKM,YACa,OAAlBN,EAAKL,OAAOjU,IACVmM,EAAI1G,SAAS,OACZ0G,EAAI1G,SAAS,OACb0G,EAAI1G,SAAS,MAOd0G,EAAI1G,SAAS,OAAS0G,EAAI1G,SAAS,OACrC,iBAAKwP,MAAM,uBAAuB/R,MAAOoR,EAAKM,WAAW,UACtD,IACAN,EAAKM,cAEY,SAAlBN,EAAKL,OAAOjU,IAAmC,OAAlBsU,EAAKL,OAAOjU,IAC3C,iBAAKiV,MAAM,eAAe/R,MAAOoR,EAAKM,WAAW,UAC9C,IACAN,EAAKM,cAENzI,EAAI1G,SAAS,OACf,iBACEwP,MAAM,kCACN/R,MAAOoR,EAAKM,WAAW,UAEtB,IACAN,EAAKM,cAEa,YAAnBN,EAAKL,OAAOjU,IACd,gBAAKiV,MAAM,UAAU/R,MAAOoR,EAAKM,WAAW,SACzCN,EAAKM,cAGR,iBACEK,MAAM,0BACN/R,MAAOoR,EAAKM,WAAW,UAEtB,IACAN,EAAKM,eAlCR,kBACE5S,UAAU,0BACVkB,MAAOoR,EAAKM,WAAW,UAEtBN,EAAKM,WAAW,QA7HnB,gBAAKK,MAAM,UAAU/R,MAAOoR,EAAKM,WAAW,SACzCN,EAAKM,cAPR,gBAAKK,MAAM,eAAe/R,MAAOoR,EAAKM,WAAW,SAC9CN,EAAKM,cAqKhB,GAGF5B,EAAWtU,GAAGgR,QAAU,CAACzB,EAC3B,CAEF,GACF,IAEA0B,EAAWqD,GAIX,IAAImC,EAAqB,OAATzC,QAAS,IAATA,OAAS,EAATA,EAAWrP,QAAO,SAACkI,GAAC,OAAe,IAAVA,EAAEoI,KAAuB,IAAVpI,EAAEoI,EAAS,IAEnElE,EAAS0F,EACX,GAiBA/V,EAAAA,EAAAA,YAAU,WACR0Q,GAAasF,KAAYC,IAE3B,GAAG,CAACvF,KACJ,IAAMsF,GAAU,WACdzC,KACAF,KACA5C,EAAiB,CAAC,EACpB,EAEMwF,GAAU,WACd5C,IACF,EAUA,OAJArT,EAAAA,EAAAA,YAAU,WACRkQ,GAAc,EAChB,GAAG,CAAChC,KAGF,4BACE,gBAAKtL,UAAU,wDAAuD,SAC9D,OAALsL,QAAK,IAALA,GAAAA,EAAO5N,QACN,SAAC,KAAkB,CACjBgQ,QAASA,EACTjQ,KAAM6N,EACNgI,yBAAyB,EACzBC,kBAAkB,EAClBC,oBAAoB,EACpBC,qBAAqB,EACrBC,wBAAwB,EACxB5B,cAAc,EACd6B,qBAAqB,EACrBC,qBAAqB,EACrBC,kBAAkB,EAClBhC,qBAAqB,EACrBiC,eAAe,EACfC,oBAAkB,EAClBC,aAAc,CACZC,kBAAkB,EAClBC,UAAU,EACVC,QAAS,UACTC,kBAAiB,UAAMxG,IAEzByG,MAAO,CAAED,kBAAiB,UAAMxG,IAEhC0G,cAAe,CAAEC,QAAS,GAAIC,QAAS,IAAMzU,KAAM,IAEnD0U,wBAAyB,CACvB5P,QAAS,YAEX6P,uBAAwB,CACtB/H,GAAI,CAAEgI,UAAW,SAEnBC,kBAAmB,CACjBjI,GAAI,CACF,IAAK,CACHkI,YAAa,iBACbC,aAAc,kBAEhB,OAAQ,CACND,YAAa,iBACbvL,OAAQ,OACRyL,QAAS,aAIfC,kBAAmB,CACjBrI,GAAI,CACF,uBAAwB,CACtBsI,OAAQ,QAEV,OAAQ,CACNC,UAAW,iBACXL,YAAa,iBACbM,WAAY,WACZJ,QAAS,aAKf,OAGLxH,GACC,SAAC,EAA4B,CAC3BtI,OAAQA,EACRC,UAAWA,EACX1D,KAAMA,EACN2D,QAASA,EACTH,UAAWvH,EACX8P,YAAaA,EACbC,eAAgBA,EAChBtQ,SAAUA,EACVC,YAAaA,EACbiI,MAAOA,EACPC,SAAUA,EACVI,SAAUA,GACVC,YAvFY,WAClBC,IAAY,EACd,EAsFQA,YAAaA,GACbE,iBAAkBA,GAClBD,oBAAqBA,GACrBrL,WAAYA,IAGd,IAEDsS,IACDI,GAAcvP,OAAS,QACCiB,GAAxBsO,GAAcvP,QACZ,SAAC,GAAkC,CACjCmP,eAAgBA,GAChBC,kBAAmBA,GACnBG,cAAeA,GACfiB,gBAAiBA,GACjBnB,OAAQA,GACRC,UAAWA,GACXE,kBAAmBA,GACnBC,oBAAqBA,GACrBC,YAAaA,KAGf,IAEDF,IAAoB,SAACkI,GAAA,EAAM,CAAChI,YAAaA,KAAkB,KAGlE,C","sources":["views/FullfimentComponent/ResourceMRFTable.js","views/RevenueMetrices/RevenueForecastCalenderPopUp.js","views/RevenueMetrices/RevenueForecastCalenderHierarchy.js","views/RevenueMetrices/MonthlyForecastTableHierarchyPopUp.js","views/RevenueMetrices/MonthlyForecastRevenueCalenderTable.js"],"sourcesContent":["import React, { useEffect, useRef } from \"react\";\nimport { DataTable } from \"primereact/datatable\";\nimport { Column } from \"ag-grid-community\";\nimport { useState } from \"react\";\nimport axios from \"axios\";\nimport DatePicker from \"react-datepicker\";\nimport { Calendar } from \"primereact/calendar\";\nimport moment from \"moment\";\nimport { environment } from \"../../environments/environment\";\nimport { FaPlus, FaSave } from \"react-icons/fa\";\nimport { ImCross } from \"react-icons/im\";\nimport { AiFillDelete } from \"react-icons/ai\";\nimport { CModal, CModalBody, CModalHeader, CModalTitle } from \"@coreui/react\";\n\nfunction ResourceMRFTable(props) {\n  const baseUrl = environment.baseUrl;\n  const {\n    resid,\n    resourcedata,\n    setResourcedata,\n    setValidationMessage,\n    validationmessage,\n    setResourceName,\n    setSaveActionMessage,\n    setDeleteMessage,\n    handleClick1,\n    employeeid,\n    setsearching,\n    searching,\n    setAddmsg,\n    dataAccess,\n  } = props;\n  const [categorytype, setcategoryType] = useState([]);\n  const [effectivedate, setEffectiveDate] = useState();\n  const [entrydate, setEntryDate] = useState(new Date());\n  let entrydate1 = moment(entrydate).format(\"YYYY-MM-DD\");\n  const loggedUserId = localStorage.getItem(\"resId\");\n  const loggedUserName = localStorage.getItem(\"resName\");\n  const [clicked, setClicked] = useState(false);\n  const [saveCliked, setSaveClicked] = useState(true);\n  const [cancelClicked, setCancelClicked] = useState(true);\n  const [deletePopup, setDeletePopup] = useState(false);\n  const [checkboxenable, setCheckboxEnable] = useState(false);\n  const [deleteid, setDeleteId] = useState(\"\");\n  const [isAdding, setIsAdding] = useState(false);\n  const [editeddata, setEditedData] = useState({});\n  const [check, setCheck] = useState(false);\n  const ref = useRef([]);\n\n  //  var today=new Date()\n  // const lastFriday = new Date(today.getTime() - (today.getDay() + 2) % 7 * 24 * 60 * 60 * 1000);\n\n  const today = new Date();\n  const lastFriday = new Date(\n    today.getTime() - ((today.getDay() + 2) % 7) * 24 * 60 * 60 * 1000\n  );\n  const previousFriday = new Date(\n    lastFriday.getTime() - 7 * 24 * 60 * 60 * 1000\n  );\n\n  // const today = new Date();\n  let minDate = new Date(today.getTime() - 7 * 24 * 60 * 60 * 1000);\n\n  for (let i = 1; i < 7; i++) {\n    const date = new Date(today.getTime() - i * 24 * 60 * 60 * 1000);\n    if (date < minDate) {\n      minDate = date;\n    }\n  }\n\n  const initialValues = {\n    created_dt: \"\",\n    createdby: \"\",\n    completed_dt: \"\",\n    effective_dt: \"\",\n    comments: \"\",\n    lkup_name: \"\",\n  };\n\n  const [formData, setFormData] = useState(initialValues);\n\n  useEffect(() => { }, [formData]);\n  const getcategorytype = () => {\n    axios\n      .get(baseUrl + `/fullfilmentms/resourceoverview/actiontypesbillable`)\n      .then((Response) => {\n        let type = [];\n        let data = Response.data;\n        data.length > 0 &&\n          data.forEach((e) => {\n            let TypeObj = {\n              label: e.lkup_name,\n              value: e.id,\n            };\n            type.push(TypeObj);\n          });\n        setcategoryType(data);\n      });\n  };\n  useEffect(() => {\n    getcategorytype();\n  }, []);\n\n  useEffect(() => {\n    if (resourcedata[0]?.comments == \"\") {\n      document.getElementsByClassName(\"p-row-editor-init p-link\")[0]?.click();\n      setTimeout(() => {\n        document\n          .getElementsByClassName(\"p-row-editor-cancel p-link\")[0]\n          ?.addEventListener(\n            \"click\",\n            function (e) {\n              if (resourcedata[0]?.comments == \"\") {\n                setResourcedata(resourcedata.slice(1, resourcedata.length));\n              }\n            },\n            true\n          );\n      }, 200);\n    }\n  }, [resourcedata]);\n\n  const Reset = () => {\n    document.getElementsByClassName(\"p-row-editor-cancel p-link\")[0]?.click();\n    setClicked(false);\n    setCancelClicked(true);\n    setSaveClicked(true);\n  };\n\n  const Save = () => {\n    document\n      .getElementsByClassName(\"p-row-editor-save-icon pi pi-fw pi-check\")[0]\n      ?.click();\n    EditedData();\n    setCancelClicked(true);\n    setSaveClicked(true);\n    setClicked(false);\n    if (check == true) {\n      EditedData(editeddata);\n    }\n  };\n\n  const CategoryBodyTemplate = (rowData) => {\n    return (\n      <>\n        <select\n          id=\"lkup_name\"\n          className=\"cancel\"\n          name=\"lkup_name\"\n          onChange={(e) => {\n            rowData.editorCallback(e.target.value);\n            categorytype.map((a) => {\n              if (a.id == e.target.value) {\n                rowData[\"rowData\"][\"lkup_name\"] = a.lkup_name;\n                rowData[\"rowData\"][\"type_id\"] = e.target.value;\n              }\n            });\n          }}\n        >\n          {categorytype?.map((Item, index) => (\n            <option\n              key={index}\n              value={Item.id}\n              selected={Item.id == rowData.rowData.type_id ? true : false}\n            >\n              {Item.lkup_name}\n            </option>\n          ))}\n        </select>\n      </>\n    );\n  };\n  const [postdata1, setPostData1] = useState([]);\n  const onRowEditComplete = (e) => {\n    let _resourcedata = [...resourcedata]; // Make a copy of the current state variable\n    let { newData, index } = e;\n    _resourcedata[index] = newData;\n    setResourcedata(_resourcedata);\n    postData(e.newData);\n    setClicked(true);\n  };\n\n  const postData = (rowData, e) => {\n    let adddata = document.getElementsByClassName(\"error\");\n\n    for (let i = 0; i < adddata.length; i++) {\n      if (\n        rowData.comments == \"\" ||\n        rowData.comments == null ||\n        rowData.effective_dt == \"\" ||\n        adddata[i].value === \"\" ||\n        adddata[i].value === \"null\" ||\n        adddata[i].value === \"All\" ||\n        adddata[i].value === undefined\n      ) {\n        adddata[i].classList.add(\"error-block\");\n        setValidationMessage(true);\n        // classList.add(\"error-block\");\n      } else {\n        adddata[i].classList.remove(\"error-block\");\n        // classList.remove(\"error-block\")\n      }\n    }\n\n    if (\n      rowData.comments == \"\" ||\n      rowData.effective_dt == \"Invalid date\" ||\n      rowData.effective_dt == \"\"\n    ) {\n      setValidationMessage(true);\n    } else {\n      setValidationMessage(false);\n\n      axios({\n        method: \"post\",\n        url: baseUrl + `/fullfilmentms/resourceoverview/UpdateActiontableitems`,\n        data: {\n          id: null,\n          created_dt: rowData.created_dt,\n          created_by: parseInt(loggedUserId),\n          resource_id: resid,\n          typ_category_id: parseInt(\n            rowData.type_id == null ? 831 : rowData.type_id\n          ),\n          effective_dt: moment(rowData.effective_dt).format(\"YYYY-MM-DD\"),\n          completed_dt: null,\n          comments: rowData.comments,\n        },\n      })\n        .then((response) => {\n          setValidationMessage(false);\n          setSaveActionMessage(true);\n          setTimeout(() => {\n            setSaveActionMessage(false);\n          }, 3000);\n          handleClick1(employeeid);\n          setClicked(false);\n          setCancelClicked(true);\n          setSaveClicked(true);\n        })\n        .catch((error) => { });\n    }\n  };\n\n  const EditedData = (rowData) => {\n    axios({\n      method: \"post\",\n      url: baseUrl + `/fullfilmentms/resourceoverview/UpdateActiontableitems`,\n      data: {\n        id: rowData?.id,\n        created_dt: moment(rowData?.created_dt).format(\"YYYY-MM-DD\"),\n        created_by: parseInt(loggedUserId),\n        resource_id: resid,\n        typ_category_id: parseInt(rowData?.lkup_id),\n        effective_dt: moment(rowData?.effective_dt).format(\"YYYY-MM-DD\"),\n        completed_dt: entrydate1,\n        comments: rowData?.comments,\n      },\n    }).then((res) => {\n      setAddmsg(true);\n      setTimeout(() => {\n        setAddmsg(false);\n      }, 2000);\n      handleClick1(employeeid);\n      setValidationMessage(false);\n    });\n  };\n\n  const addHandler = () => {\n    const data = {\n      completed_dt: \"\",\n      created_dt: moment(new Date()).format(\"DD-MMM-yyyy\"),\n      // created_dt: \"\",\n      createdby: loggedUserName,\n      effective_dt: \"\",\n      lkup_name: \"\",\n      comments: \"\",\n    };\n    let dt = [];\n    dt.push(data);\n    setResourcedata([...dt, ...resourcedata]);\n    setClicked(true);\n    setCancelClicked(false);\n    setSaveClicked(false);\n  };\n\n  const setDatePicker = (resourcedata, options, rowData) => {\n    return (\n      <div title={resourcedata.effective_dt}>\n        <DatePicker\n          className={`error ${validationmessage === true ? \"error-block\" : \"\"}`}\n          name=\"effective_dt\"\n          selected={effectivedate}\n          id=\"effective_dt\"\n          value={resourcedata.effective_dt}\n          minDate={minDate}\n          showMonthDropdown\n          showYearDropdown\n          dropdownMode=\"select\"\n          dateFormat=\"dd-MMM-yyyy\"\n          onChange={(e) => {\n            resourcedata.editorCallback(moment(e).format(\"DD-MMM-yyyy\")),\n              setFormData((prev) => ({\n                ...prev,\n                [\"effective_dt\"]: moment(e).format(\"yyyy-MM-DD\"),\n              }));\n            setEffectiveDate(e);\n          }}\n        />\n      </div>\n    );\n  };\n\n  const commentstextfiled = (resourcedata) => {\n    return (\n      <>\n        <div className=\"error-block error\">\n          <input\n            className={`error ${validationmessage === true ? \"error-block\" : \"\"\n              }`}\n            type=\"text\"\n            id=\"comments\"\n            name=\"comments\"\n            value={resourcedata.comments}\n            onChange={(e) => {\n              resourcedata.editorCallback(e.target.value);\n            }}\n          />\n        </div>\n      </>\n    );\n  };\n\n  const renderRowActions = (rowData) => {\n    return (\n      <div style={{ paddingLeft: \"55px\" }}>\n        {loggedUserName == rowData.createdby &&\n          rowData.completed_dt == \"\" &&\n          rowData.effective_dt != \"\" &&\n          validationmessage == false ? (\n          <label cursor=\"pointer\">\n            <input\n              type=\"checkbox\"\n              cursor=\"pointer\"\n              onClick={(e) => {\n                const isChecked = e.target.checked;\n                setCheck(isChecked);\n                setSaveClicked(check ? true : false);\n                setEditedData(rowData);\n                setCancelClicked(check ? true : false);\n                setClicked(check ? false : true);\n              }}\n              selection={rowData}\n              onSelectionChange={(e) => rowData(e.value)}\n            />{\" \"}\n            &nbsp;\n            <AiFillDelete\n              color=\"orange\"\n              cursor=\"pointer\"\n              onClick={() => {\n                setDeletePopup(true);\n                setDeleteId(rowData.id);\n              }}\n            />\n          </label>\n        ) : (\n          \"\"\n        )}\n      </div>\n    );\n  };\n\n  const DeleteItems = () => {\n    axios({\n      method: \"delete\",\n      url:\n        baseUrl +\n        `/fullfilmentms/resourceoverview/deleteActionDetails?id=${deleteid}`,\n    }).then((error) => {\n      setDeletePopup(false);\n      setDeleteMessage(true);\n      setTimeout(() => {\n        setDeleteMessage(false);\n      }, 3000);\n      handleClick1(employeeid);\n    });\n  };\n\n  function ResourceOverviewDeletePopup(props) {\n    const { deletePopup, setDeletePopup } = props;\n    return (\n      <div>\n        <CModal\n          visible={deletePopup}\n          size=\"xs\"\n          className=\"ui-dialog\"\n          onClose={() => setDeletePopup(false)}\n        >\n          <CModalHeader className=\"\">\n            <CModalTitle>\n              <span className=\"\">Delete Action Item</span>\n            </CModalTitle>\n          </CModalHeader>\n          <CModalBody>\n            <h6>Are you sure you want to delete Action Item ?</h6>\n            <div className=\"btn-container center my-2\">\n              <button\n                type=\"delete\"\n                className=\"btn btn-primary\"\n                onClick={() => {\n                  DeleteItems();\n                }}\n              >\n                <AiFillDelete /> Delete{\" \"}\n              </button>{\" \"}\n              &nbsp; &nbsp;\n              <button\n                type=\"button\"\n                className=\"btn btn-secondary\"\n                onClick={() => {\n                  setDeletePopup(false);\n                }}\n              >\n                {\" \"}\n                <ImCross fontSize={\"11px\"} /> Cancel{\" \"}\n              </button>\n            </div>\n          </CModalBody>\n        </CModal>\n      </div>\n    );\n  }\n  return (\n    <div className=\"darkHeader\">\n      <DataTable\n        value={resourcedata}\n        editMode=\"row\"\n        showGridlines\n        emptyMessage=\"No Records To View\"\n        scrollDirection=\"both\"\n        paginator\n        rows={5}\n        onRowEditComplete={onRowEditComplete}\n        className=\"primeReactDataTable \" ////customerEngament\n        paginatorTemplate=\"RowsPerPageDropdown FirstPageLink PrevPageLink CurrentPageReport NextPageLink LastPageLink\"\n        currentPageReportTemplate=\"{first} to {last} of {totalRecords}\"\n        rowsPerPageOptions={[10, 25, 50]} //------------->\n      >\n        <Column\n          field=\"created_dt\"\n          title=\"created_dt\"\n          header=\"Entry Date\"\n          sortable\n        />\n        <Column field=\"createdby\" header=\"Entry By\" sortable />\n        <Column\n          field=\"lkup_name\"\n          header=\"Category\"\n          sortable\n          filter={true}\n          editor={(options) => CategoryBodyTemplate(options)}\n        />\n        <Column\n          field=\"effective_dt\"\n          id=\"effective_dt\"\n          header=\"Effective Date\"\n          editor={(options) => setDatePicker(options)}\n          sortable\n          filter={true}\n          filterMatchMode=\"custom\"\n          filterFunction={(value, filter) => {\n            if (filter === null || filter === undefined) {\n              return true;\n            }\n            if (filter.operator === \"lte\") {\n              return new Date(value) <= new Date(filter.value);\n            } else if (filter.operator === \"gte\") {\n              return new Date(value) >= new Date(filter.value);\n            } else if (value === \"equals\") {\n              return (\n                new Date(value).getTime() === new Date(filter.value).getTime()\n              );\n            } else {\n              return true;\n            }\n          }}\n          filterElement={\n            <div className=\"p-field p-grid\">\n              <div className=\"p-col-12 p-md-10\">\n                <Calendar\n                  id=\"event_date\"\n                  placeholder=\"Select a date\"\n                  showIcon={true}\n                  inputClassName=\"p-ml-2\"\n                  selectionMode=\"range\"\n                  dateFormat=\"mm/dd/yy\"\n                  monthNavigator={true}\n                  yearNavigator={true}\n                  yearRange=\"2000:2030\"\n                  showButtonBar={true}\n                  className=\"p-datepicker\"\n                />\n              </div>\n            </div>\n          }\n        />\n        <Column field=\"completed_dt\" header=\"Completed Date\" sortable />\n        <Column\n          field=\"comments\"\n          sortable\n          header=\"Comments\"\n          editor={(options) => commentstextfiled(options)}\n          filter={true}\n          filterFunction={(value, filter) => {\n            if (!filter) {\n              return true;\n            }\n            const filterOptions = filter.split(\" \");\n            return filterOptions.every((option) => {\n              if (option.startsWith && !value.startsWith(option.startsWith)) {\n                return false;\n              }\n              if (option.endsWith && !value.endsWith(option.endsWith)) {\n                return false;\n              }\n              if (option.contains && !value.includes(option.contains)) {\n                return false;\n              }\n              return true;\n            });\n          }}\n        />\n        {/* {(dataAccess == 908 || dataAccess == 307) && ( */}\n        <Column\n          style={{ display: \"none\" }}\n          rowEditor\n          header=\"Action\"\n          headerStyle={{ width: \"10%\", minWidth: \"8rem\" }}\n          bodyStyle={{ textAlign: \"center\" }}\n          sortable\n        />\n        {/* )} */}\n        {/* {(dataAccess == 908 || dataAccess == 307) && ( */}\n        <Column\n          body={renderRowActions}\n          header=\"Action\"\n          bodyStyle={{ textAlign: \"center\" }}\n          sortable\n        ></Column>\n        {/* )} */}\n      </DataTable>\n      {dataAccess == 932 || dataAccess == 307 ? (\n        \"\"\n      ) : (\n        <div className=\"form-group col-md-2 btn-container-events center my-3\">\n          <button\n            className=\"btn btn-primary\"\n            disabled={clicked}\n            onClick={() => {\n              addHandler();\n            }}\n          >\n            {\" \"}\n            <FaPlus /> Add\n          </button>{\" \"}\n          <button\n            className=\"btn btn-primary\"\n            disabled={saveCliked}\n            variant=\"contained\"\n            onClick={() => {\n              Save();\n              setEffectiveDate();\n            }}\n          >\n            <FaSave /> Save\n          </button>{\" \"}\n          <button\n            className=\"btn btn-primary\"\n            disabled={cancelClicked}\n            onClick={() => {\n              Reset();\n              setValidationMessage(false);\n            }}\n            title={\"Cancel\"}\n            size={\"1.4em\"}\n          >\n            <ImCross fontSize={\"11px\"} /> Cancel\n          </button>\n        </div>\n      )}\n\n      {deletePopup ? (\n        <ResourceOverviewDeletePopup\n          deletePopup={deletePopup}\n          setDeletePopup={setDeletePopup}\n        />\n      ) : (\n        \"\"\n      )}\n    </div>\n  );\n}\nexport default ResourceMRFTable;\n","import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { environment } from \"../../environments/environment\";\nimport { Link } from \"react-router-dom\";\nimport moment from \"moment\";\nimport { BiCheck, BiX } from \"react-icons/bi\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport {\n  AiFillWarning,\n  AiOutlineLeftSquare,\n  AiOutlineRightSquare,\n} from \"react-icons/ai\";\nimport ForecastProjectPopUp from \"./ForecastProjectPopUp\";\nimport ResourceMRFTable from \"../FullfimentComponent/ResourceMRFTable\";\nimport { DialogContent, DialogTitle, Popover } from \"@material-ui/core\";\nimport \"../FullfimentComponent/ResourceOverviewTable.scss\";\n\nfunction RevenueForecastCalenderPopUp(props) {\n  const {\n    tabledata,\n    formData,\n    setFormData,\n    linkId,\n    setLinkId,\n    name,\n    setName,\n    month,\n    setMonth,\n    formattedMonth,\n    setCapType,\n    capType,\n    anchorEl,\n    handleClose,\n    setAnchorEl,\n    setActionItemsTable,\n    actionItemsTable,\n    dataAccess,\n  } = props;\n  const [resourcePopUp, setResourcePopUp] = useState(false);\n  const baseUrl = environment.baseUrl;\n\n  function ActionItemsTable(props) {\n    const { linkId, setAnchorEl } = props;\n    const [resourcedata, setResourcedata] = useState([]);\n    const [employeeid, setEmployeeId] = useState(\"\");\n    const [addmsg, setAddmsg] = useState(false);\n    const [deleteMessage, setDeleteMessage] = useState(false);\n    const [saveactionmessage, setSaveActionMessage] = useState(false);\n    const [validationmessage, setValidationMessage] = useState(false);\n\n    const handleClick1 = () => {\n      setEmployeeId(linkId);\n      axios({\n        method: \"get\",\n        url:\n          baseUrl +\n          `/fullfilmentms/resourceoverview/ActionTable?resource_id=${linkId}`,\n      }).then((response) => {\n        let GetData = response.data;\n        setResourcedata(GetData);\n      });\n    };\n    useEffect(() => {\n      handleClick1();\n    }, [linkId]);\n    return (\n      <>\n        <div className=\"col-md-12\">\n          <div>\n            {saveactionmessage ? (\n              <div className=\"statusMsg success\">\n                <BiCheck />\n                {\"Action Item Saved Successfully\"}\n              </div>\n            ) : (\n              \"\"\n            )}\n            {addmsg ? (\n              <div className=\"statusMsg success\">\n                <BiCheck />\n                {\"Updated Successfully\"}\n              </div>\n            ) : (\n              \"\"\n            )}\n            {validationmessage ? (\n              <div className=\"statusMsg error\">\n                <AiFillWarning />\n                {\"Please provide valid values for highlighted values\"}\n              </div>\n            ) : (\n              \"\"\n            )}\n            {deleteMessage ? (\n              <div className=\"statusMsg success\">\n                <span className=\"errMsg\">\n                  <BiCheck size=\"1.4em\" strokeWidth={{ width: \"100px\" }} />{\" \"}\n                  &nbsp; Action Item Deleted successfully\n                </span>\n              </div>\n            ) : (\n              \"\"\n            )}\n          </div>\n          <div className=\"col-md-12 mt-2 mb-2\">\n            <div className=\"collapseHeader revForcast\">\n              <div className=\"leftSection\">\n                <span style={{ color: \"#15a7ea\" }}>Action Items ({name})</span>\n              </div>\n            </div>\n          </div>\n          <div className=\"resourceOverviewEmp\">\n            <ResourceMRFTable\n              resid={linkId}\n              handleClick1={handleClick1}\n              resourcedata={resourcedata}\n              setResourcedata={setResourcedata}\n              setDeleteMessage={setDeleteMessage}\n              setSaveActionMessage={setSaveActionMessage}\n              employeeid={employeeid}\n              setValidationMessage={setValidationMessage}\n              saveactionmessage={saveactionmessage}\n              validationmessage={validationmessage}\n              addmsg={addmsg}\n              setAddmsg={setAddmsg}\n              dataAccess={dataAccess}\n            />\n          </div>\n        </div>\n      </>\n    );\n  }\n  function ResourceRevenue(props) {\n    const { formData, linkId, name, month, setMonth } = props;\n    const [resourceTable, setResourceTable] = useState([]);\n    const loggedUserId = localStorage.getItem(\"resId\");\n    const [capType, setCapType] = useState([\n      { value: \"allocations\", label: \"Allocation Hrs\" },\n      { value: \"assigned\", label: \"Assigned Hrs\" },\n      { value: \"actualHrs\", label: \"Actual Hrs\" },\n      { value: \"approvedHrs\", label: \"Approved Hrs\" },\n      { value: \"unapprovedHrs\", label: \"Unapproved Hrs\" },\n      { value: \"unassigned\", label: \" Allocation - Assigned Hrs\" },\n      { value: \"allocAct\", label: \"Allocation - Actual Hrs\" },\n      { value: \"allocAppr\", label: \" Allocation - Approved Hrs\" },\n      { value: \"assAct\", label: \" Assigned - Actual Hrs\" },\n      { value: \"assAppr\", label: \" Assigned - Approved Hrs\" },\n      { value: \"actAppr\", label: \" Actual - Approved Hrs\" },\n    ]);\n    const initialValue = {\n      resourcealloctype: \"all\",\n      resourcecapType: formData?.captype,\n      FromDt: moment(month).format(\"yyyy-MM-DD\"),\n    };\n    const [resourcedata, SetResourceData] = useState(initialValue);\n    let formattedMonth = moment(month).format(\"yyyy-MM-DD\");\n\n    const dates = {\n      fromDate: moment(formattedMonth).startOf(\"month\").format(\"YYYY-MM-DD\"),\n      toDate: moment(formattedMonth)\n        .startOf(\"month\")\n        .add(\"month\", 0)\n        .format(\"YYYY-MM-DD\"),\n    };\n    const [dt, setDt] = useState(dates);\n\n    const addHandler = () => {\n      setDt((prev) => ({\n        ...prev,\n        [\"fromDate\"]: moment(dt.fromDate).add(\"month\", 1).format(\"YYYY-MM-DD\"),\n      }));\n      setDt((prev) => ({\n        ...prev,\n        [\"toDate\"]: moment(dt.toDate).add(\"month\", 1).format(\"YYYY-MM-DD\"),\n      }));\n    };\n\n    const subtractHandler = () => {\n      setDt((prev) => ({\n        ...prev,\n        [\"fromDate\"]: moment(dt.fromDate)\n          .subtract(\"month\", 1)\n          .format(\"YYYY-MM-DD\"),\n      }));\n      setDt((prev) => ({\n        ...prev,\n        [\"toDate\"]: moment(dt.toDate).subtract(\"month\", 1).format(\"YYYY-MM-DD\"),\n      }));\n    };\n    const getResourceTable = (e) => {\n      setResourceTable([]);\n      axios({\n        method: \"post\",\n        url: baseUrl + `/revenuemetricsms/metrics/getResourceTable`,\n        data: {\n          Src: \"project\",\n          Typ: resourcedata.resourcecapType,\n          ObjectId: linkId,\n          FromDt: dt.toDate,\n          AllocType: resourcedata.resourcealloctype,\n          PrjSource: \"-1\",\n          contTerms: formData.ContractTerms,\n          engComps: formData.EngCompany,\n          cslIds: formData.Csl,\n          dpIds: formData.Dp,\n          UserId: loggedUserId,\n        },\n      }).then(function (res) {\n        setResourceTable(res.data);\n      });\n    };\n\n    const [componentMounted, setComponentMounted] = useState(false);\n\n    useEffect(() => {\n      if (componentMounted) {\n        getResourceTable();\n      } else {\n        setComponentMounted(true);\n      }\n    }, [\n      resourcedata.resourcealloctype,\n      resourcedata.resourcecapType,\n      dt.toDate,\n      componentMounted,\n    ]);\n\n    return (\n      <div>\n        <div className=\"\">\n          <div className=\"col-md-12 mt-2\">\n            <div className=\"collapseHeader revForcast\">\n              <div className=\"leftSection\">\n                <span>{name}</span>\n                <select\n                  id=\"resourcecapType\"\n                  name=\"resourcecapType\"\n                  defaultValue={formData.captype}\n                  onChange={(e) =>\n                    SetResourceData((prev) => ({\n                      ...prev,\n                      [\"resourcecapType\"]: e.target.value,\n                    }))\n                  }\n                >\n                  {capType?.map((Item) => (\n                    <option\n                      selected={formData.captype.value}\n                      value={Item.value}\n                      key={Item.label}\n                    >\n                      {Item.label}\n                    </option>\n                  ))}\n                </select>\n                <select\n                  className=\"resourcealloctype\"\n                  id=\"resourcealloctype\"\n                  onChange={(e) => {\n                    SetResourceData((prev) => ({\n                      ...prev,\n                      [\"resourcealloctype\"]: e.target.value,\n                    }));\n                  }}\n                >\n                  <option value=\"all\">&lt;&lt;ALL&gt;&gt;</option>\n                  <option value=\"billable\">Billable</option>\n                  <option value=\"nonBillUtil\">Non Billable Utilized</option>\n                  <option value=\"nonBillShad\">Non Billable Shadow</option>\n                  <option value=\"nonBillEnb\">Non Billable Enabled</option>\n                  <option value=\"nonBillCliPrep\">\n                    Non Billable Client Prep\n                  </option>\n                  <option value=\"nonBillNonUtil\">\n                    Non Billable Non Utilized\n                  </option>\n                  <option value=\"nonBillInnov\">Non-billable Innovation</option>\n                </select>\n              </div>\n              <div className=\"rightSection\">\n                <span className=\"ml-2 chevronContainer\">\n                  <AiOutlineLeftSquare\n                    cursor=\"pointer\"\n                    size={\"2em\"}\n                    onClick={subtractHandler}\n                  />\n                  <span>{moment(dt.toDate).format(\"MMM-YYYY\")}</span>\n                  <AiOutlineRightSquare\n                    cursor=\"pointer\"\n                    size={\"2em\"}\n                    onClick={addHandler}\n                  />\n                </span>\n              </div>\n            </div>\n          </div>\n          <div className=\"col-md-12\">\n            <ForecastProjectPopUp\n              linkId={linkId}\n              data={resourceTable}\n              expandedCols={[]}\n              colExpandState={[]}\n              month={month}\n              setMonth={setMonth}\n              resourcedata={resourcedata}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n  const open = Boolean(anchorEl);\n  const id = open ? \"my-popver\" : undefined;\n\n  return (\n    <div className=\"\">\n      <Popover\n        id={id}\n        open={Boolean(anchorEl)}\n        anchorEl={anchorEl}\n        onClose={handleClose}\n        anchorOrigin={{\n          vertical: \"top\",\n          horizontal: \"left\",\n        }}\n        transformOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"left\",\n        }}\n      >\n        <div className=\"resourcePopup\">\n          <DialogTitle>\n            <span>{name}</span>\n            <BiX onClick={handleClose} />\n          </DialogTitle>\n          <DialogContent>\n            <ul>\n              <li>\n                <Link to={`/resource/profile/:${linkId}`} target=\"_blank\">\n                  View Resource's Profile\n                </Link>\n              </li>\n              {props.formData?.captype == \"capacity\" ? (\n                \"\"\n              ) : (\n                <li>\n                  <Link\n                    onClick={() => {\n                      setResourcePopUp(true);\n                      setAnchorEl(false);\n                    }}\n                  >\n                    View Resource's{\" \"}\n                    {props.formData?.captype == \"allocations\"\n                      ? \"Allocation\"\n                      : props.formData?.captype == \"assigned\"\n                      ? \"Assignments\"\n                      : props.formData?.captype == \"actualHrs\"\n                      ? \"Actual Hrs\"\n                      : props.formData?.captype == \"approvedHrs\"\n                      ? \"Approved Hrs\"\n                      : props.formData?.captype == \"unapprovedHrs\"\n                      ? \"Unapproved Hrs\"\n                      : props.formData?.captype == \"unassigned\"\n                      ? \"Allocation - Assigned Hrs\"\n                      : props.formData?.captype == \"allocAct\"\n                      ? \"Allocation - Actual Hrs\"\n                      : props.formData?.captype == \"allocAppr\"\n                      ? \"Allocation - Approved Hrs\"\n                      : props.formData?.captype == \"assAct\"\n                      ? \"Assigned - Actual Hrs\"\n                      : props.formData?.captype == \"assAppr\"\n                      ? \"Assigned - Approved Hrs\"\n                      : props.formData?.captype == \"actAppr\"\n                      ? \"Actual - Approved Hrs\"\n                      : \"\"}\n                  </Link>\n                </li>\n              )}\n              <li>\n                <Link\n                  onClick={() => {\n                    setActionItemsTable(true);\n                    setAnchorEl(false);\n                    // handleClick1();\n                  }}\n                >\n                  Action Items\n                </Link>\n              </li>\n            </ul>\n          </DialogContent>\n        </div>\n      </Popover>\n\n      {actionItemsTable ? (\n        <ActionItemsTable\n          linkId={linkId}\n          setLinkId={setLinkId}\n          name={name}\n          setAnchorEl={setAnchorEl}\n        />\n      ) : resourcePopUp ? (\n        <ResourceRevenue\n          resourcePopUp={resourcePopUp}\n          setResourcePopUp={setResourcePopUp}\n          tabledata={tabledata}\n          formData={formData}\n          setFormData={setFormData}\n          linkId={linkId}\n          setLinkId={setLinkId}\n          name={name}\n          setName={setName}\n          month={month}\n          setMonth={setMonth}\n          formattedMonth={formattedMonth}\n          setCapType={setCapType}\n          capType={capType}\n          setAnchorEl={setAnchorEl}\n        />\n      ) : (\n        \"\"\n      )}\n    </div>\n  );\n}\nexport default RevenueForecastCalenderPopUp;\n","import * as React from \"react\";\nimport TreeView from \"@mui/lab/TreeView\";\nimport PropTypes from \"prop-types\";\nimport SvgIcon from \"@mui/material/SvgIcon\";\nimport { alpha, styled } from \"@mui/material/styles\";\nimport TreeItem, { treeItemClasses } from \"@mui/lab/TreeItem\";\nimport Collapse from \"@mui/material/Collapse\";\nimport { useSpring, animated } from \"@react-spring/web\";\n\nfunction MinusSquare(props) {\n  return (\n    <SvgIcon fontSize=\"inherit\" style={{ width: 14, height: 14 }} {...props}>\n      {/* tslint:disable-next-line: max-line-length */}\n      <path d=\"M22.047 22.074v0 0-20.147 0h-20.12v0 20.147 0h20.12zM22.047 24h-20.12q-.803 0-1.365-.562t-.562-1.365v-20.147q0-.776.562-1.351t1.365-.575h20.147q.776 0 1.351.575t.575 1.351v20.147q0 .803-.575 1.365t-1.378.562v0zM17.873 11.023h-11.826q-.375 0-.669.281t-.294.682v0q0 .401.294 .682t.669.281h11.826q.375 0 .669-.281t.294-.682v0q0-.401-.294-.682t-.669-.281z\" />\n    </SvgIcon>\n  );\n}\n\nfunction PlusSquare(props) {\n  return (\n    <SvgIcon fontSize=\"inherit\" style={{ width: 14, height: 14 }} {...props}>\n      {/* tslint:disable-next-line: max-line-length */}\n      <path d=\"M22.047 22.074v0 0-20.147 0h-20.12v0 20.147 0h20.12zM22.047 24h-20.12q-.803 0-1.365-.562t-.562-1.365v-20.147q0-.776.562-1.351t1.365-.575h20.147q.776 0 1.351.575t.575 1.351v20.147q0 .803-.575 1.365t-1.378.562v0zM17.873 12.977h-4.923v4.896q0 .401-.281.682t-.682.281v0q-.375 0-.669-.281t-.294-.682v-4.896h-4.923q-.401 0-.682-.294t-.281-.669v0q0-.401.281-.682t.682-.281h4.923v-4.896q0-.401.294-.682t.669-.281v0q.401 0 .682.281t.281.682v4.896h4.923q.401 0 .682.281t.281.682v0q0 .375-.281.669t-.682.294z\" />\n    </SvgIcon>\n  );\n}\n\nfunction TransitionComponent(props) {\n  const style = useSpring({\n    from: {\n      opacity: 0,\n      transform: \"translate3d(20px,0,0)\",\n    },\n    to: {\n      opacity: props.in ? 1 : 0,\n      transform: `translate3d(${props.in ? 0 : 20}px,0,0)`,\n    },\n  });\n\n  return (\n    <animated.div style={style}>\n      <Collapse {...props} />\n    </animated.div>\n  );\n}\n\nTransitionComponent.propTypes = {\n  /**\n   * Show the component; triggers the enter or exit states\n   */\n  in: PropTypes.bool,\n};\n\nconst StyledTreeItem = styled((props) => (\n  <div>\n    <TreeItem\n      {...props}\n      key={String(props.node?.id)}\n      nodeId={String(props.node?.id)}\n      label={props.node?.full_name}\n      TransitionComponent={TransitionComponent}\n    >\n      {Array.isArray(props.node?.subRows)\n        ? props.node?.subRows.map((node) => renderTree(node))\n        : console.log(\"coming here?\")}\n    </TreeItem>\n  </div>\n))(({ theme }) => ({\n  [`& .${treeItemClasses.iconContainer}`]: {\n    \"& .close\": {\n      opacity: 0.3,\n    },\n  },\n  [`& .${treeItemClasses.group}`]: {\n    marginLeft: 15,\n    paddingLeft: 18,\n    borderLeft: `1px dashed ${alpha(theme.palette.text.primary, 0.4)}`,\n  },\n}));\n\nconst renderTree = (nodes) => (\n  <div>\n    <StyledTreeItem node={nodes}></StyledTreeItem>\n  </div>\n);\n\nexport default function RevvenueForecastCalenderHierarchy(props) {\n  const { data } = props;\n  console.log(data);\n  const jsonToTree = (flatArray, options) => {\n    if (!Array.isArray(flatArray)) {\n      return [];\n    }\n    options = {\n      id: \"id\",\n      parentId: \"parent_id\",\n      children: \"subRows\",\n      ...options,\n    };\n    const dictionary = {}; // a hash table mapping to the specific array objects with their ids as key\n    const tree = [];\n    const children = options.children;\n    flatArray?.forEach((node) => {\n      const nodeId = node[options.id];\n      const nodeParentId = node[options.parentId];\n      // set up current node data in dictionary\n      dictionary[nodeId] = {\n        [children]: [], // init a children property\n        ...node, // add other propertys\n        ...dictionary[nodeId], // children will be replaced if this node already has children property which was set below\n      };\n      dictionary[nodeParentId] = dictionary[nodeParentId] || { [children]: [] }; // if it's not exist in dictionary, init an object with children property\n      dictionary[nodeParentId][children].push(dictionary[nodeId]); // add reference to current node object in parent node object\n    });\n    // find root nodes\n    Object.values(dictionary).forEach((obj) => {\n      if (typeof obj[options.id] === \"undefined\") {\n        tree.push(...obj[children]);\n      }\n    });\n    return tree;\n  };\n  const hierarchy = jsonToTree(data);\n  console.log(hierarchy);\n  console.log(hierarchy[0]);\n  function getAllNodeIds(node) {\n    let ids = [String(node.id)];\n    if (node.subRows && node.subRows.length > 0) {\n      node.subRows.forEach((subRow) => {\n        ids.push(...getAllNodeIds(subRow));\n      });\n    }\n    return ids;\n  }\n\n  const expandedIds = getAllNodeIds(hierarchy[0]);\n\n  return (\n    <TreeView\n      aria-label=\"rich object\"\n      defaultExpanded={expandedIds}\n      defaultCollapseIcon={<MinusSquare />}\n      defaultExpandIcon={<PlusSquare />}\n      sx={{\n        \"& .css-1g86id8-MuiTreeItem-content .MuiTreeItem-label\": {\n          width: \"auto\",\n          minwidth: 0,\n        },\n      }}\n      className=\"hierarchyTree\"\n    >\n      {renderTree(hierarchy[0])}\n    </TreeView>\n  );\n}\n","import React from \"react\";\nimport { BiX } from \"react-icons/bi\";\nimport { DialogContent, DialogTitle, Popover } from \"@material-ui/core\";\n// import \"../VendorComponent/Resources.scss\";\nimport RevvenueForecastCalenderHierarchy from \"./RevenueForecastCalenderHierarchy\";\nimport \"./MonthlyForecastRevenueCalenderTable.scss\";\n\nfunction MonthlyForecastTableHierarchyPopUp(props) {\n  const {\n    hierarchyPopUp,\n    setHierarchyPopUp,\n    anchor,\n    setAnchor,\n    hierarchyData,\n    hierearchyVisible,\n    setHierarchyVisible,\n    handleAbort,\n  } = props;\n\n  const open = Boolean(anchor);\n  const id = open ? \"my-popver\" : undefined;\n  const handleClose = () => {\n    setAnchor(false);\n  };\n\n  return (\n    <div className=\"\">\n      <Popover\n        id={id}\n        open={Boolean(anchor)}\n        anchorEl={anchor}\n        onClose={handleClose}\n        anchorOrigin={{\n          vertical: \"top\",\n          horizontal: \"left\",\n        }}\n        transformOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"left\",\n        }}\n      >\n        <div className=\"hierarchyPopup\">\n          <DialogTitle>\n            <BiX onClick={handleClose} />\n          </DialogTitle>\n          <DialogContent>\n            <div>\n              {\" \"}\n              {hierarchyData != undefined ? (\n                <RevvenueForecastCalenderHierarchy data={hierarchyData} />\n              ) : (\n                \" \"\n              )}\n            </div>\n          </DialogContent>\n        </div>\n      </Popover>\n    </div>\n  );\n}\nexport default MonthlyForecastTableHierarchyPopUp;\n","import React, { useState, useEffect, useRef } from \"react\";\nimport MaterialReactTable from \"material-react-table\";\nimport { IconButton } from \"@mui/material\";\nimport axios from \"axios\";\nimport { environment } from \"../../environments/environment\";\nimport { AiFillLeftCircle, AiFillRightCircle } from \"react-icons/ai\";\nimport { AiFillWarning } from \"react-icons/ai\";\nimport { VscTypeHierarchySub } from \"react-icons/vsc\";\nimport { Link } from \"react-router-dom\";\nimport RevenueForecastCalenderPopUp from \"./RevenueForecastCalenderPopUp\";\nimport fte_active from \"../../assets/images/empstatusIcon/fte_active.png\";\nimport fte_inactive from \"../../assets/images/empstatusIcon/fte_inactive.png\";\nimport fte_notice from \"../../assets/images/empstatusIcon/fte_notice.png\";\nimport subk_active from \"../../assets/images/empstatusIcon/subk_active.png\";\nimport subk_inactive from \"../../assets/images/empstatusIcon/subk_inactive.png\";\nimport subk_notice from \"../../assets/images/empstatusIcon/subk_notice.png\";\nimport \"./MonthlyForecastRevenueCalenderTable.scss\";\nimport MonthlyForecastTableHierarchyPopUp from \"./MonthlyForecastTableHierarchyPopUp\";\nimport Loader from \"../Loader/Loader\";\nimport { BiChevronRight, BiChevronUp } from \"react-icons/bi\";\n\nexport default function MonthlyForecastRevenueCalenderTable(props) {\n  const {\n    data,\n    expandedCols,\n    colExpandState,\n    formData,\n    setFormData,\n    value,\n    month,\n    setMonth,\n    setsearchingA,\n    actionPopup,\n    setActionPopup,\n    dataAccess,\n  } = props;\n  const [linkId, setLinkId] = useState([]);\n  const [name, setName] = useState();\n  const [nodes, setNodes] = useState(null);\n  const [columns, setColumns] = useState(null);\n  const [hiddenColumns, setHiddenColumns] = useState({});\n  const [colExpFlag, setColumnExpFlag] = useState(false);\n  const [headers, setHeaders] = useState([]);\n  const [hierarchyPopUp, setHierarchyPopUp] = useState(false);\n  const [anchorEl, setAnchorEl] = useState(null);\n  const [anchor, setAnchor] = useState(null);\n  const [hierearchyVisible, setHierarchyVisible] = useState(false);\n  const baseUrl = environment.baseUrl;\n  const abortController = useRef(null);\n  const [hierarchyData, setHiearchyData] = useState(\"\");\n  const [actionItemsTable, setActionItemsTable] = useState(false);\n\n  const icons = {\n    fteActive: (\n      <img\n        src={fte_active}\n        alt=\"(fte_active_icon)\"\n        style={{ height: \"12px\" }}\n        title=\"Active Employee\"\n      />\n    ),\n    fteNotice: (\n      <img\n        src={fte_notice}\n        alt=\"(fte_notice_icon)\"\n        style={{ height: \"12px\" }}\n        title=\"Employee in notice period\"\n      />\n    ),\n    subkActive: (\n      <img\n        src={subk_active}\n        alt=\"(subk_active_icon)\"\n        style={{ height: \"12px\" }}\n        title=\"Active Contractor\"\n      />\n    ),\n    fteInactive: (\n      <img\n        src={fte_inactive}\n        alt=\"(fte_inactive_icon)\"\n        style={{ height: \"12px\", marginTop: \"-5px\" }}\n        title=\"Ex-Employee\"\n      />\n    ),\n    subk0: (\n      <img\n        src={subk_inactive}\n        alt=\"(subk_inactive_icon)\"\n        style={{ height: \"12px\", marginTop: \"-5px\" }}\n        title=\"Ex-Contractor\"\n      />\n    ),\n    subk2: (\n      <img\n        src={subk_notice}\n        alt=\"(subk_notice_icon)\"\n        style={{ height: \"12px\", marginTop: \"-5px\" }}\n        title=\"Contractor in notice period\"\n      />\n    ),\n  };\n  const HierarchyId = Number(hierarchyData) - 1;\n  const getHierarchy = () => {\n    setHiearchyData(\"\");\n    const loaderTime = setTimeout(() => {\n      setHierarchyVisible(true);\n    }, 2000);\n    abortController.current = new AbortController();\n    axios({\n      method: \"get\",\n      url:\n        baseUrl +\n        `/customersms/Customers/getResProfileUpwardhierarchy?rid=${HierarchyId}`,\n      signal: abortController.current.signal,\n    }).then((response) => {\n      var resp = response.data;\n      const filteredData = resp?.filter(\n        (item) => item?.id !== Number(HierarchyId) + 1\n      );\n      setHiearchyData(filteredData);\n      setHierarchyPopUp(true);\n      setHierarchyVisible(false);\n      clearTimeout(loaderTime);\n    });\n  };\n\n  useEffect(() => {\n    if (\n      hierarchyData !== -1 &&\n      hierarchyData !== 0 &&\n      hierarchyData !== \"\" &&\n      !isNaN(hierarchyData)\n    ) {\n      getHierarchy();\n    }\n  }, [hierarchyData]);\n\n  const handleAbort = () => {\n    abortController.current && abortController.current.abort();\n    setHierarchyVisible(false);\n  };\n\n  const numberWithCommas = (x) => {\n    var number = String(x);\n    if (number.includes(\".\") === true) {\n      if (number.includes(\".00\") === true) {\n        var decimalNumbers = number;\n        var num = Number(decimalNumbers);\n        let FdN = num != null && num?.toFixed(0);\n        let final = FdN.split(\".\");\n        final[0] = final[0].replace(/(?<=\\d)(?=(\\d{3})+(?!\\d|\\.))/g, \",\");\n\n        return final.join(\".\");\n      } else {\n        var decimalNumbers = number;\n        var num = Number(decimalNumbers);\n        let FdN = num != null && num?.toFixed(2);\n        let final = FdN.split(\".\");\n        final[0] = final[0].replace(/(?<=\\d)(?=(\\d{3})+(?!\\d|\\.))/g, \",\");\n\n        return final.join(\".\");\n      }\n    } else {\n      return (\n        number != null && number?.replace(/(?<=\\d)(?=(\\d{3})+(?!\\d|\\.))/g, \",\")\n      );\n    }\n  };\n  useEffect(() => {\n    getData();\n  }, [data.tableData]);\n  var count = 0;\n  const getData = () => {\n    let expandClass = \"\";\n\n    if (colExpFlag == true && count > 0) {\n      expandClass = \"expanded\";\n    } else {\n      expandClass = \"\";\n    }\n    let tableData = data.tableData;\n    let columns = null;\n    if (data?.columns?.includes(\"'\")) {\n      columns = data?.columns?.replaceAll(\"'\", \"\");\n    } else {\n      columns = data?.columns;\n    }\n\n    let dd = columns?.split(\",\");\n    let Indicators = [\"course_1\"];\n    let colArr = null;\n\n    if (dd != undefined) {\n      colArr = [...Indicators, ...dd];\n    }\n\n    let newHeaders = [];\n    let hiddenHeaders = [];\n\n    const obj = {};\n    for (let i = 0; i < colArr?.length; i++) {\n      let colVal = colArr[i].trim();\n\n      let firstData = tableData[0];\n      obj[colVal] = firstData[colVal];\n    }\n\n    let headerArray = Object.entries(obj);\n    let unWantedCols = [\"Id\", \"action_items\"];\n    let filteredHeaders = headerArray.filter(\n      (d) => !unWantedCols.includes(d[0])\n    );\n    setHeaders(filteredHeaders);\n\n    filteredHeaders.map(([key, value]) => {\n      if (expandedCols.includes(key)) {\n        hiddenHeaders.push({ [key]: false });\n      }\n    });\n\n    setHiddenColumns(Object.assign({}, ...hiddenHeaders));\n\n    let C = tableData?.filter((d) => d.Id == -1);\n    filteredHeaders.map(([key, value], index) => {\n      let A = value?.replace(\"<br>\", \"\");\n      newHeaders.push({\n        accessorKey: key,\n        header: value,\n        enableColumnActions: false,\n        enableHiding: true,\n        rowspan: 5,\n\n        Header: ({ column }) => (\n          <div\n            className={\n              key.includes(\"AcGM\") ||\n              key.includes(\"NAcGM\") ||\n              key.includes(\"NAvgCost\") ||\n              key.includes(\"AvgCost\")\n                ? \"md\" && \"mixer\"\n                : key?.includes(\"_L\") || key?.includes(\"_N\")\n                ? \"disabledDatesColumn\"\n                : key?.includes(\"manager\")\n                ? \"manager mixer\"\n                : key?.includes(\"Supervisor\")\n                ? \"supervisor mixer\"\n                : key?.includes(\"BusinessUnit\")\n                ? \"businessUnit mixer\"\n                : key?.includes(\"emp_cadre\")\n                ? \"cadre mixer\"\n                : key?.includes(\"Revenue\") ||\n                  key?.includes(\"Cost\") ||\n                  key?.includes(\"course_1\") ||\n                  key?.includes(\"Name\") ||\n                  key?.includes(\"emp_cadre\") ||\n                  key?.includes(\"BusinessUnit\") ||\n                  key?.includes(\"Supervisor\") ||\n                  key?.includes(\"manager\") ||\n                  key?.includes(\"capacity\") ||\n                  key?.includes(\"billAppr\") ||\n                  key?.includes(\"billApprNet\") ||\n                  key?.includes(\"Total\") ||\n                  key?.includes(\"Avg\") ||\n                  key?.includes(\"GM\")\n                ? \"mixer\"\n                : \"datesColumn\"\n            }\n          >\n            {value?.includes(\"<br>\") ? (\n              <div title={value.replace(\"<br>\", \" \")}>\n                {value.replace(\"<br>\", \" \")}\n              </div>\n            ) : (\n              <div title={value}>{value}</div>\n            )}\n            {key == colExpandState[2] ? (\n              <span className={`expandIcon ${expandClass}`}>\n                <IconButton\n                  // className=\"expandIcon\"\n                  onClick={() => {\n                    setColumnExpFlag((prev) => !prev);\n                  }}\n                >\n                  <BiChevronRight />\n                </IconButton>\n              </span>\n            ) : null}\n          </div>\n        ),\n      });\n    });\n    let subHeaders =\n      C && Object.entries(C[0])?.filter((d) => !unWantedCols?.includes(d[0]));\n    {\n    }\n\n    newHeaders.map((data) => {\n      let i = newHeaders.indexOf(data);\n\n      subHeaders.map(([key, value], index) => {\n        if (key == data.accessorKey) {\n          let obj = {\n            id: key,\n            header: (\n              <div\n                className={\n                  key.includes(\"_L\") || key?.includes(\"_N\")\n                    ? \"disabledDatesColumn\"\n                    : key.includes(\"_W\")\n                    ? \"datesColumn\"\n                    : value == \"\" || value == null || value == undefined\n                    ? \"\"\n                    : \"datesColumn\"\n                }\n                title={value}\n              >\n                {value == null || value == 0 ? null : value}\n              </div>\n            ),\n            accessorKey: key,\n\n            Cell: ({ cell }) => {\n              return (\n                <div\n                  style={{\n                    whiteSpace: \"nowrap\",\n                    overflow: \"hidden\",\n                    textOverflow: \"ellipsis\",\n                  }}\n                >\n                  {cell.column.id == \"Name\" && cell.row.original != null ? (\n                    <>\n                      <span title={cell.getValue().split(\"_\")[0]}>\n                        {icons[cell.row.original.Name.split(\"_\")[1]]}{\" \"}\n                        {cell.row.original.Name == \"Total\" ? (\n                          <b className=\"align right\"> Total</b>\n                        ) : cell.row.original.Name == \"Avg\" ? (\n                          <b className=\"align right\"> Avg</b>\n                        ) : (\n                          <Link\n                            onClick={(e) => {\n                              setAnchorEl(e.currentTarget);\n                              setActionItemsTable(false);\n                              setActionPopup(true),\n                                setLinkId(cell.row.original.Id);\n                              setName(cell.row.original.Name.split(\"_\")[0]);\n                            }}\n                            style={{\n                              cursor: \"pointer\",\n                            }}\n                          >\n                            {cell.getValue().split(\"_\")[0]}\n                          </Link>\n                        )}\n                      </span>\n                    </>\n                  ) : cell.column.id == \"course_1\" &&\n                    cell.row.original.Name != \"Total\" &&\n                    cell.row.original.Name != \"Avg\" &&\n                    cell.row.original != null ? (\n                    <>\n                      {cell.getValue() == \"1\" ? (\n                        <>\n                          <span\n                            className=\"green legendCircle\"\n                            title={\"ISMS Certified\"}\n                          ></span>\n                          {cell.row.original.action_items == 1 &&\n                          cell.row.original != null ? (\n                            <span\n                              className=\"exclamation orange\"\n                              title={\"Action Items Exist\"}\n                            >\n                              <AiFillWarning />\n                            </span>\n                          ) : (\n                            <span\n                              className=\"exclamation gray\"\n                              title={\"No Action Items\"}\n                            >\n                              <AiFillWarning />\n                            </span>\n                          )}\n                        </>\n                      ) : (\n                        <>\n                          <span\n                            className=\"red legendCircle\"\n                            title={\"ISMS Not Certified\"}\n                          ></span>\n                          {cell.row.original.action_items == 0 &&\n                          cell.row.original != null ? (\n                            <span\n                              className=\"exclamation gray\"\n                              title={\"No Action Items\"}\n                            >\n                              <AiFillWarning />\n                            </span>\n                          ) : (\n                            <span\n                              className=\"exclamation orange\"\n                              title={\"Action Items Exist\"}\n                            >\n                              <AiFillWarning />\n                            </span>\n                          )}\n                        </>\n                      )}\n                    </>\n                  ) : cell.column.id == \"Supervisor\" &&\n                    cell.row.original != null ? (\n                    <div className=\"supervisor\">\n                      {cell.row.original.Name != \"Total\" &&\n                        cell.row.original.Name != \"Avg\" && (\n                          <span\n                            className=\"hierarchyIcon\"\n                            onClick={(e) => {\n                              setAnchor(e.currentTarget);\n                              setHiearchyData(cell.row.original.Id);\n                            }}\n                            title={\"Hierarchy\"}\n                            style={{\n                              cursor: \"pointer\",\n                            }}\n                          >\n                            <VscTypeHierarchySub />\n                          </span>\n                        )}\n                      <span title={cell.getValue()?.split(\"_\")[0]}>\n                        {\"\" + cell.getValue() != \"\" && cell.getValue() != null\n                          ? cell.getValue()?.split(\"_\")[0]\n                          : \"\"}\n                      </span>\n                    </div>\n                  ) : cell.column.id === \"BusinessUnit\" &&\n                    (formData.measure == \"percent\" ||\n                      formData.measure == \"hrs\") ? (\n                    <div class=\"businessUnit\" title={cell.getValue()}>\n                      {cell.getValue()}\n                    </div>\n                  ) : cell.column.id === \"manager\" &&\n                    (formData.measure == \"percent\" ||\n                      formData.measure == \"hrs\") ? (\n                    <div class=\"manager\" title={cell.getValue()}>\n                      {cell.getValue()}\n                    </div>\n                  ) : cell.column.id == \"Avg\" && cell.getValue() != null ? (\n                    <div className=\"align right\" title={cell.getValue()}>\n                      {cell.getValue()}%\n                    </div>\n                  ) : cell.getValue() != null &&\n                    cell.getValue().split(\"_\")[1] == \"leave\" ? (\n                    <span\n                      className=\"pink align right datesColumn\"\n                      title={cell.getValue().split(\"_\")[0]}\n                    >\n                      {cell.getValue().split(\"_\")[0]}\n                    </span>\n                  ) : cell.getValue() != null &&\n                    cell.getValue().includes(\"0.00\") &&\n                    (key.includes(\"_L\") ||\n                      key.includes(\"_W\") ||\n                      key.includes(\"_N\")) ? (\n                    <span\n                      className=\" align right datesColumn\"\n                      title={cell.getValue().split(\"_\")[0]}\n                    >\n                      {cell.getValue().split(\"_\")[0]}\n                    </span>\n                  ) : cell.getValue() == \"0_holday\" ||\n                    cell.getValue() == \"0.00_holday\" ? (\n                    <span\n                      className=\"blue align right datesColumn\"\n                      title={cell.getValue().split(\"_\")[0]}\n                    >\n                      {cell.getValue().split(\"_\")[0]}\n                    </span>\n                  ) : formData.measure == \"percent\" &&\n                    key.includes(\"billAppr\") ? (\n                    <div class=\"align right\" title={cell.getValue()}>\n                      {numberWithCommas(cell.getValue())}%\n                    </div>\n                  ) : cell.getValue() != null && key.includes(\"_W\") ? (\n                    <span\n                      className=\"disabledDatesColumn datesColumn\"\n                      title={cell.getValue()}\n                    >\n                      {cell.getValue()}\n                    </span>\n                  ) : cell.getValue() != null &&\n                    (key.includes(\"Revenue\") || key.includes(\"Cost\")) ? (\n                    <>\n                      <div title={numberWithCommas(cell.getValue())}>\n                        <span>$</span>\n                        <span style={{ float: \"right\" }}>\n                          {numberWithCommas(cell.getValue())}\n                        </span>\n                      </div>\n                    </>\n                  ) : cell.getValue() == null &&\n                    (key.includes(\"Revenue\") || key.includes(\"Cost\")) ? (\n                    <>\n                      <div title={numberWithCommas(cell.getValue())}>\n                        <span>$</span>\n                        <span style={{ float: \"right\" }}>{0}</span>\n                      </div>\n                    </>\n                  ) : cell.getValue() != null && key.includes(\"billApprNet\") ? (\n                    <>\n                      <div class=\"align right\" title={cell.getValue()}>\n                        {numberWithCommas(cell.getValue())} %\n                      </div>\n                    </>\n                  ) : formData.measure == \"percent\" &&\n                    key.includes(\"capacity\") ? (\n                    <div\n                      class=\"align right\"\n                      title={numberWithCommas(cell.getValue())}\n                    >\n                      {numberWithCommas(cell.getValue())}%\n                    </div>\n                  ) : formData.measure == \"hrs\" && key.includes(\"billAppr\") ? (\n                    <div\n                      class=\"align right\"\n                      title={numberWithCommas(cell.getValue())}\n                    >\n                      {numberWithCommas(cell.getValue())}\n                    </div>\n                  ) : formData.measure == \"hrs\" && key.includes(\"capacity\") ? (\n                    <div\n                      class=\"align right\"\n                      title={numberWithCommas(cell.getValue())}\n                    >\n                      {numberWithCommas(cell.getValue())}\n                    </div>\n                  ) : cell.getValue() != null &&\n                    (key.includes(\"GM\") || key.includes(\"billApprNet\")) ? (\n                    <>\n                      <div class=\"align right\" title={cell.getValue()}>\n                        {numberWithCommas(cell.getValue())} %\n                      </div>\n                    </>\n                  ) : cell.getValue() == null && key.includes(\"GM\") ? (\n                    <>\n                      <div class=\"align right\" title={cell.getValue()}>\n                        {0} %\n                      </div>\n                    </>\n                  ) : cell.column.id == \"Name\" ||\n                    cell.column.id == \"course_1\" ? (\n                    <span title={cell.getValue()}>{cell.getValue()}</span>\n                  ) : cell.getValue() != null &&\n                    cell.column.id == \"emp_cadre\" ? (\n                    <div class=\"align center cadre\" title={cell.getValue()}>\n                      {\" \"}\n                      {cell.getValue()}\n                    </div>\n                  ) : formData.measure == \"percent\" &&\n                    cell.getValue() != null &&\n                    cell.getValue() != \"\" &&\n                    cell.column.id != \"Avg\" &&\n                    (!key.includes(\"_L\") ||\n                      !key.includes(\"_W\") ||\n                      !key.includes(\"_N\")) ? (\n                    <span\n                      className=\"align right datesColumn\"\n                      title={cell.getValue()}\n                    >\n                      {cell.getValue()}%\n                    </span>\n                  ) : key.includes(\"_L\") || key.includes(\"_N\") ? (\n                    <div class=\"disabledDatesColumn \" title={cell.getValue()}>\n                      {\" \"}\n                      {cell.getValue()}\n                    </div>\n                  ) : cell.column.id == \"Total\" || cell.column.id == \"Avg\" ? (\n                    <div class=\"align right \" title={cell.getValue()}>\n                      {\" \"}\n                      {cell.getValue()}\n                    </div>\n                  ) : key.includes(\"_W\") ? (\n                    <div\n                      class=\"disabledDatesColumn datesColumn\"\n                      title={cell.getValue()}\n                    >\n                      {\" \"}\n                      {cell.getValue()}\n                    </div>\n                  ) : cell.column.id === \"manager\" ? (\n                    <div class=\"manager\" title={cell.getValue()}>\n                      {cell.getValue()}\n                    </div>\n                  ) : (\n                    <div\n                      class=\"align right datesColumn\"\n                      title={cell.getValue()}\n                    >\n                      {\" \"}\n                      {cell.getValue()}\n                    </div>\n                  )}\n                </div>\n              );\n            },\n          };\n\n          newHeaders[i].columns = [obj];\n        } else {\n        }\n      });\n    });\n\n    setColumns(newHeaders);\n\n    // let values = [];\n\n    let finalData = tableData?.filter((d) => d.Id !== -1 && d.Id !== -2);\n\n    setNodes(finalData);\n  };\n\n  const colCollapse = () => {\n    let hiddenHeaders = [];\n    // refactor this\n    headers.map(([key, value]) => {\n      if (expandedCols.includes(key)) {\n        hiddenHeaders.push({ [key]: false });\n      }\n    });\n\n    setHiddenColumns(Object.assign({}, ...hiddenHeaders));\n  };\n\n  // useEffect(() => {\n  //   colExpFlag ? setHiddenColumns({}) : colCollapse();\n  // }, [colExpFlag]);\n  useEffect(() => {\n    colExpFlag ? expandT() : expandF();\n    // getData();\n  }, [colExpFlag]);\n  const expandT = () => {\n    count++;\n    getData();\n    setHiddenColumns({});\n  };\n\n  const expandF = () => {\n    getData();\n  };\n\n  const handleClose = () => {\n    setAnchorEl(false);\n  };\n\n  useEffect(() => {\n    setsearchingA(false);\n  }, [nodes]);\n\n  return (\n    <div>\n      <div className=\"materialReactExpandableTable calenderTable darkHeader\">\n        {nodes?.length ? (\n          <MaterialReactTable\n            columns={columns}\n            data={nodes}\n            enableRowVirtualization={true}\n            enablePagination={false}\n            enableGlobalFilter={true}\n            enableDensityToggle={false}\n            enableFullScreenToggle={false}\n            enableHiding={false}\n            enableColumnFilters={false}\n            enableBottomToolbar={false}\n            enableTopToolbar={true}\n            enableColumnActions={false}\n            enableSorting={false}\n            filterFromLeafRows //apply filtering to all rows instead of just parent rows\n            initialState={{\n              showGlobalFilter: true,\n              expanded: false,\n              density: \"compact\",\n              columnVisibility: { ...hiddenColumns },\n            }} //expand all rows by default\n            state={{ columnVisibility: { ...hiddenColumns } }}\n            //paginateExpandedRows={false} //When rows are expanded, do not count sub-rows as number of rows on the page towards pagination\n            defaultColumn={{ minSize: 30, maxSize: 1000, size: 30 }} //units are in px\n            // enableStickyHeader\n            muiSearchTextFieldProps={{\n              variant: \"outlined\",\n            }}\n            muiTableContainerProps={{\n              sx: { maxHeight: \"50vh\" }, //give the table a max height\n            }}\n            muiTableBodyProps={{\n              sx: {\n                \"&\": {\n                  borderRight: \"1px solid #ccc\",\n                  borderBottom: \"1px solid #ccc\",\n                },\n                \"& td\": {\n                  borderRight: \"1px solid #ccc\",\n                  height: \"22px\",\n                  padding: \"0px 5px\",\n                },\n              },\n            }}\n            muiTableHeadProps={{\n              sx: {\n                \"tr:nth-of-type(2) th\": {\n                  zIndex: \"auto\",\n                },\n                \"& th\": {\n                  borderTop: \"1px solid #ccc\",\n                  borderRight: \"1px solid #ccc\",\n                  background: \"#f4f4f4 \",\n                  padding: \"0 5px\",\n                },\n              },\n            }}\n          />\n        ) : null}\n      </div>\n\n      {actionPopup ? (\n        <RevenueForecastCalenderPopUp\n          linkId={linkId}\n          setLinkId={setLinkId}\n          name={name}\n          setName={setName}\n          tabledata={data}\n          actionPopup={actionPopup}\n          setActionPopup={setActionPopup}\n          formData={formData}\n          setFormData={setFormData}\n          month={month}\n          setMonth={setMonth}\n          anchorEl={anchorEl}\n          handleClose={handleClose}\n          setAnchorEl={setAnchorEl}\n          actionItemsTable={actionItemsTable}\n          setActionItemsTable={setActionItemsTable}\n          dataAccess={dataAccess}\n        />\n      ) : (\n        \" \"\n      )}\n      {hierarchyPopUp &&\n      hierarchyData.length > 0 &&\n      hierarchyData.length != undefined ? (\n        <MonthlyForecastTableHierarchyPopUp\n          hierarchyPopUp={hierarchyPopUp}\n          setHierarchyPopUp={setHierarchyPopUp}\n          hierarchyData={hierarchyData}\n          setHiearchyData={setHiearchyData}\n          anchor={anchor}\n          setAnchor={setAnchor}\n          hierearchyVisible={hierearchyVisible}\n          setHierarchyVisible={setHierarchyVisible}\n          handleAbort={handleAbort}\n        />\n      ) : (\n        \" \"\n      )}\n      {hierearchyVisible ? <Loader handleAbort={handleAbort} /> : \"\"}\n    </div>\n  );\n}\n"],"names":["props","baseUrl","environment","resid","resourcedata","setResourcedata","setValidationMessage","validationmessage","setSaveActionMessage","setResourceName","setDeleteMessage","handleClick1","employeeid","setAddmsg","setsearching","searching","dataAccess","useState","categorytype","setcategoryType","effectivedate","setEffectiveDate","Date","entrydate","entrydate1","moment","format","loggedUserId","localStorage","getItem","loggedUserName","clicked","setClicked","saveCliked","setSaveClicked","cancelClicked","setCancelClicked","deletePopup","setDeletePopup","deleteid","setDeleteId","editeddata","setEditedData","check","setCheck","today","useRef","lastFriday","getTime","getDay","minDate","i","date","created_dt","createdby","completed_dt","effective_dt","comments","lkup_name","formData","setFormData","useEffect","axios","then","Response","type","data","length","forEach","e","TypeObj","label","value","id","push","document","getElementsByClassName","click","setTimeout","addEventListener","slice","postData","rowData","adddata","undefined","classList","add","remove","method","url","created_by","parseInt","resource_id","typ_category_id","type_id","response","catch","error","EditedData","lkup_id","res","DeleteItems","ResourceOverviewDeletePopup","visible","size","className","onClose","onClick","fontSize","editMode","showGridlines","emptyMessage","scrollDirection","paginator","rows","onRowEditComplete","_resourcedata","newData","index","paginatorTemplate","currentPageReportTemplate","rowsPerPageOptions","field","title","header","sortable","filter","editor","options","name","onChange","editorCallback","target","map","a","Item","selected","showMonthDropdown","showYearDropdown","dropdownMode","dateFormat","prev","setDatePicker","filterMatchMode","filterFunction","operator","filterElement","placeholder","showIcon","inputClassName","selectionMode","monthNavigator","yearNavigator","yearRange","showButtonBar","commentstextfiled","split","every","option","startsWith","endsWith","contains","includes","style","display","rowEditor","headerStyle","width","minWidth","bodyStyle","textAlign","body","paddingLeft","cursor","isChecked","checked","selection","onSelectionChange","color","disabled","dt","addHandler","variant","Save","Reset","tabledata","linkId","setLinkId","setName","month","setMonth","formattedMonth","setCapType","capType","anchorEl","handleClose","setAnchorEl","setActionItemsTable","actionItemsTable","resourcePopUp","setResourcePopUp","ActionItemsTable","setEmployeeId","addmsg","deleteMessage","saveactionmessage","GetData","strokeWidth","ResourceRevenue","resourceTable","setResourceTable","initialValue","resourcealloctype","resourcecapType","captype","FromDt","SetResourceData","dates","fromDate","startOf","toDate","setDt","componentMounted","setComponentMounted","Src","Typ","ObjectId","AllocType","PrjSource","contTerms","ContractTerms","engComps","EngCompany","cslIds","Csl","dpIds","Dp","UserId","defaultValue","subtract","ForecastProjectPopUp","expandedCols","colExpandState","Boolean","Popover","open","anchorOrigin","vertical","horizontal","transformOrigin","DialogTitle","DialogContent","to","MinusSquare","SvgIcon","height","d","PlusSquare","TransitionComponent","useSpring","from","opacity","transform","in","Collapse","StyledTreeItem","styled","TreeItem","key","String","node","nodeId","full_name","Array","isArray","subRows","renderTree","console","log","theme","treeItemClasses","marginLeft","borderLeft","alpha","palette","text","primary","nodes","RevvenueForecastCalenderHierarchy","hierarchy","flatArray","parentId","children","dictionary","tree","nodeParentId","Object","values","obj","jsonToTree","expandedIds","getAllNodeIds","ids","subRow","TreeView","defaultExpanded","defaultCollapseIcon","defaultExpandIcon","sx","minwidth","hierarchyPopUp","setHierarchyPopUp","anchor","setAnchor","hierarchyData","hierearchyVisible","setHierarchyVisible","handleAbort","MonthlyForecastRevenueCalenderTable","setsearchingA","actionPopup","setActionPopup","setNodes","columns","setColumns","hiddenColumns","setHiddenColumns","colExpFlag","setColumnExpFlag","setHeaders","abortController","setHiearchyData","icons","fteActive","src","fte_active","alt","fteNotice","fte_notice","subkActive","subk_active","fteInactive","fte_inactive","marginTop","subk0","subk_inactive","subk2","subk_notice","HierarchyId","Number","isNaN","loaderTime","current","AbortController","signal","resp","filteredData","item","clearTimeout","getHierarchy","abort","numberWithCommas","x","number","decimalNumbers","final","num","toFixed","replace","join","getData","tableData","count","expandClass","replaceAll","dd","colArr","newHeaders","hiddenHeaders","colVal","trim","firstData","headerArray","entries","unWantedCols","filteredHeaders","assign","C","Id","accessorKey","enableColumnActions","enableHiding","rowspan","Header","column","IconButton","subHeaders","indexOf","Cell","cell","whiteSpace","overflow","textOverflow","row","original","getValue","Name","currentTarget","action_items","measure","class","float","finalData","expandT","expandF","enableRowVirtualization","enablePagination","enableGlobalFilter","enableDensityToggle","enableFullScreenToggle","enableColumnFilters","enableBottomToolbar","enableTopToolbar","enableSorting","filterFromLeafRows","initialState","showGlobalFilter","expanded","density","columnVisibility","state","defaultColumn","minSize","maxSize","muiSearchTextFieldProps","muiTableContainerProps","maxHeight","muiTableBodyProps","borderRight","borderBottom","padding","muiTableHeadProps","zIndex","borderTop","background","Loader"],"sourceRoot":""}