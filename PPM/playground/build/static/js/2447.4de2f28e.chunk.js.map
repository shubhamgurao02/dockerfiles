{"version":3,"file":"static/js/2447.4de2f28e.chunk.js","mappings":"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","sources":["views/Administration/TrackerCollapsibleTable.js","views/Administration/TrackerResCollapsibleTable.js","views/Administration/Tracker.js"],"sourcesContent":["import React, { useState, useEffect, useMemo, useRef } from \"react\";\nimport MaterialReactTable from \"material-react-table\";\nimport { Button, IconButton } from \"@mui/material\";\nimport { AiFillRightCircle, AiOutlineInfoCircle } from \"react-icons/ai\";\nimport { Link } from \"react-router-dom\";\nimport { environment } from \"../../environments/environment\";\nimport axios from \"axios\";\nimport { AiOutlineLeftSquare, AiOutlineRightSquare } from \"react-icons/ai\";\nimport moment from \"moment\";\nimport Loader from \"../Loader/Loader\";\n\nexport default function TrackerCollapsibleTable(props) {\n  const { data, expandedCols, colExpandState, dt, openhtml, setOpenhtml } =\n    props;\n  const [nodes, setNodes] = useState([]);\n  const [columns, setColumns] = useState(null);\n  const [hiddenColumns, setHiddenColumns] = useState({});\n  const [colExpFlag, setColumnExpFlag] = useState(false);\n  const [headers, setHeaders] = useState([]);\n  useEffect(() => {\n    getData();\n  }, [data]);\n  const baseUrl = environment.baseUrl;\n  const [tabledata, setTabledata] = useState([{}]);\n  const [loader, setLoader] = useState(false);\n\n  const getDetailsInfo = (id, name) => {\n    setLoader(true);\n    axios({\n      method: \"post\",\n      url: baseUrl + `/administrationms/tracker/getpagenamedata`,\n      data: {\n        page_name: id,\n        toDt: dt.toDate,\n        resId: name,\n      },\n      headers: { \"Content-Type\": \"application/json\" },\n    })\n      .then((res) => {\n        const GetData = res.data;\n        setTabledata(GetData);\n        setLoader(false);\n      })\n      .catch((error) => {});\n    setOpenhtml(true);\n  };\n  const getData = () => {\n    let tableData = data.tableData;\n    let columns = null;\n    if (data?.columns?.includes(\"'\")) {\n      columns = data?.columns?.replaceAll(\"'\", \"\");\n    } else {\n      columns = data?.columns;\n    }\n    let colArr = columns?.split(\",\");\n    let newHeaders = [];\n    let hiddenHeaders = [];\n    const obj = {};\n    for (let i = 0; i < colArr?.length; i++) {\n      let colVal = colArr[i].trim();\n\n      let firstData = tableData;\n      obj[colVal] = firstData[colVal];\n    }\n    let headerArray = Object.entries(obj);\n    let filteredHeaders = headerArray;\n    setHeaders(filteredHeaders);\n\n    filteredHeaders.map(([key, value]) => {\n      if (expandedCols.includes(key)) {\n        hiddenHeaders.push({ [key]: false });\n      }\n      return hiddenHeaders;\n    });\n    setHiddenColumns(Object.assign({}, ...hiddenHeaders));\n    filteredHeaders.map(([key, value], index) => {\n      newHeaders.push({\n        accessorKey: key,\n        header: key,\n        enableColumnActions: false,\n        enableHiding: true,\n        Header: ({ column }) => (\n          <div>\n            {key}\n            {key == \"Resource\" ||\n            key == \"Resource FTE\" ||\n            key == \"Resource Request\" ? (\n              <IconButton\n                className=\"expandIcon\"\n                onClick={() => {\n                  setColumnExpFlag((prev) => !prev);\n                }}\n              >\n                <AiFillRightCircle\n                  title=\"Show Details\"\n                  style={{ fontSize: \"15px\" }}\n                />\n              </IconButton>\n            ) : null}\n          </div>\n        ),\n        Cell: ({ cell }) => {\n          const propertiesToExclude = [\n            \"BusinessUnit\",\n            \"Resource\",\n            \"Supervisor\",\n            \"Resource FTE\",\n            \"Resource Request\",\n            \"Total\",\n          ];\n\n          return (\n            <div title={cell.getValue()}>\n              {propertiesToExclude.includes(cell.column.id) ? (\n                cell.getValue()\n              ) : (\n                <Link\n                  onClick={(e) => {\n                    getDetailsInfo(cell.column.id, cell.row.original.user_id);\n                  }}\n                  style={{\n                    cursor: \"pointer\",\n                  }}\n                >\n                  {cell.getValue()}\n                </Link>\n              )}\n            </div>\n          );\n        },\n      });\n    });\n    setColumns(newHeaders);\n    let values = [];\n    let minusOneRow = [];\n    if (tableData && tableData.length > 0) {\n      tableData.forEach((d) => {\n        if (d && d.Resource && d.Resource.length > 0) {\n          values.push(d);\n        } else {\n          minusOneRow.push(d);\n        }\n      });\n    } else {\n    }\n    let tempData = jsonToTree(values);\n    let finalData = [...tempData];\n    setNodes(finalData);\n  };\n  useEffect(() => {\n    colExpFlag ? setHiddenColumns({}) : colCollapse();\n  }, [colExpFlag]);\n\n  const colCollapse = () => {\n    let hiddenHeaders = [];\n    headers.forEach(([key, value]) => {\n      if (expandedCols.includes(key)) {\n        hiddenHeaders.push({ [key]: false });\n      }\n      return hiddenHeaders;\n    });\n    setHiddenColumns(Object.assign({}, ...hiddenHeaders));\n  };\n  const jsonToTree = (flatArray, options) => {\n    options = {\n      Resource: \"Resource\",\n      Supervisor: \"Supervisor\",\n      children: \"subRows\",\n      ...options,\n    };\n    const dictionary = {}; // a hash table mapping to the specific array objects with their ids as key\n    const tree = [];\n    const children = options.children;\n    flatArray.forEach((node) => {\n      const nodeId = node[options.Resource];\n      const nodeParentId = node[options.Supervisor];\n      // set up current node data in dictionary\n      dictionary[nodeId] = {\n        [children]: [], // init a children property\n        ...node, // add other propertys\n        ...dictionary[nodeId], // children will be replaced if this node already has children property which was set below\n      };\n      dictionary[nodeParentId] = dictionary[nodeParentId] || { [children]: [] }; // if it's not exist in dictionary, init an object with children property\n      dictionary[nodeParentId][children].push(dictionary[nodeId]); // add reference to current node object in parent node object\n    });\n    Object.values(dictionary).forEach((obj) => {\n      if (typeof obj[options.Resource] === \"undefined\") {\n        tree.push(...obj[children]);\n      }\n    });\n    return tree;\n  };\n  const abortController = useRef(null);\n\n  const handleAbort = () => {\n    abortController.current && abortController.current.abort();\n    setLoader(false);\n  };\n  return (\n    <>\n      <div className=\"\" style={{ marginTop: \"20px\" }}>\n        {columns?.length ? (\n          <MaterialReactTable\n            columns={columns}\n            data={nodes}\n            enableExpandAll={true}\n            enableExpanding={false}\n            enablePagination={false}\n            enableRowVirtualization\n            enableBottomToolbar={false}\n            enableTopToolbar={false}\n            enableColumnActions={false}\n            enableSorting={false}\n            filterFromLeafRows\n            enablePinning\n            initialState={{\n              expanded: false,\n              density: \"compact\",\n              columnVisibility: { ...hiddenColumns },\n              columnPinning: { right: [\"total\"], left: [\"name\"] },\n            }}\n            state={{ columnVisibility: { ...hiddenColumns } }}\n            paginateExpandedRows={false}\n            defaultColumn={{ minSize: 40, maxSize: 1000, size: 150 }}\n            muiTableContainerProps={{\n              sx: { maxHeight: \"50vh\", width: \"auto\", maxWidth: \"fit-content\" },\n            }}\n            muiTableBodyProps={{\n              sx: {\n                \"&\": {},\n                \"& td\": {\n                  borderRight: \"1px solid #ccc\",\n                  height: \"22px\",\n                  fontSize: \"11px\",\n                  paddingTop: \"0px\",\n                  paddingBottom: \"0px\",\n                },\n              },\n            }}\n            muiTableHeadProps={{\n              sx: {\n                \"& th\": {\n                  borderTop: \"1px solid #ccc\",\n                  borderRight: \"1px solid #ccc\",\n                  background: \"#f4f4f4 \",\n                  fontSize: \"11px\",\n                  padding: \"0px 8px\",\n                },\n              },\n            }}\n          />\n        ) : null}\n      </div>\n      <div style={{ textAlign: \"right\", fontSize: \"13px\" }}>\n        <span class=\"titleclr\">Alloc DB</span>\n        <span>:Allocation Dashboard</span>\n        <span class=\"titleclr\">BA</span>\n        <span>: Bench Analysis</span>\n        <span class=\"titleclr\">CP</span>\n        <span>:Capacity Plan</span>\n        <span class=\"titleclr\">Comp.D</span>\n        <span>: Competency Dashboard</span>\n        <span class=\"titleclr\">Cust DB </span>\n        <span>: Custom Dashboard</span>\n        <span class=\"titleclr\">DS</span>\n        <span>:Demand & Supply</span>\n        <span class=\"titleclr\">FPR</span>\n        <span>: Financial Plan and Review </span>\n        <span class=\"titleclr\">FS</span>\n        <span>: Forecast and Supply</span>\n        <span class=\"titleclr\">HC&MT</span>\n        <span> : Headcount & Margins Trend</span>{\" \"}\n        <span class=\"titleclr\">IS</span>\n        <span>: Inside Sales</span>\n        <span class=\"titleclr\">MPR Changes</span>\n        <span> : Monthly PR Changes by Day</span>\n        <span class=\"titleclr\">MRF</span>\n        <span>:Monthly Revenue Forecast</span>\n        <span class=\"titleclr\">RD</span>\n        <span>: My Dashboard</span>\n        <span class=\"titleclr\">NBW</span>\n        <span>: NB Work - 4 Prev. Weeks</span>\n        <span class=\"titleclr\">PCQA</span>\n        <span>:PCQA</span>\n        <span class=\"titleclr\">PC</span>\n        <span>:Practice Calls</span>\n        <span class=\"titleclr\">PrjHealth</span>\n        <span> : Project Health </span>\n        <span class=\"titleclr\">GD</span>\n        <span>: Project Status Report</span>\n        <span class=\"titleclr\">PI</span>\n        <span>:Pyramid Index</span>\n        <span class=\"titleclr\">RO</span>\n        <span>:Resource Overview</span>\n        <span class=\"titleclr\">RT</span>\n        <span>:Resource Trending</span>\n        <span class=\"titleclr\">RMA</span>\n        <span>: Revenue & Margin Analysis</span>\n        <span class=\"titleclr\">RMV</span>\n        <span>:Revenue And Margin Variance</span>\n        <span class=\"titleclr\">RAM</span>\n        <span>: Revenue Attainment Metrics </span>\n        <span class=\"titleclr\">RP</span>\n        <span>:Revenue Projections</span>\n        <span class=\"titleclr\">Forecast</span>\n        <span>: RMG Forecast</span>\n        <span class=\"titleclr\">roleAppr</span>\n        <span>:Role Approvals</span>\n        <span class=\"titleclr\">roleGrid</span>\n        <span>:Role Grid </span>\n        <span class=\"titleclr\">roleView</span>\n        <span>: Role View</span>\n        <span class=\"titleclr\">Roles Permissions</span>\n        <span>:Roles Permissions</span>\n        <span class=\"titleclr\">S/W- PR</span>\n        <span>:S/W Plan and Review </span>\n        <span class=\"titleclr\">Oppt</span>\n        <span>:Sales - Opportunities </span>\n        <span class=\"titleclr\">SPM</span>\n        <span>:Sales Performance </span>\n        <span class=\"titleclr\">SPT</span>\n        <span>:Sales Pipeline Trending </span>\n        <span class=\"titleclr\">SSC</span>\n        <span>:Sales ScoreCard </span>\n        <span class=\"titleclr\">SSO</span>\n        <span>:Sales Solutions </span>\n        <span class=\"titleclr\">Service PR</span>\n        <span>:Services Plan and Review </span>\n        <span class=\"titleclr\">SA</span>\n        <span>:Shift Allownaces </span>\n        <span class=\"titleclr\">Subk-CT</span>\n        <span>:Subk Conversion Trend </span>\n        <span class=\"titleclr\">BT-T&M</span>\n        <span>: T&M - Open </span>\n        <span class=\"titleclr\">TP</span>\n        <span>:Task Plan</span>\n        <span class=\"titleclr\">UF</span>\n        <span>:Subk Conversion Trend </span>\n        <span class=\"titleclr\">Subk-CT</span>\n        <span>:Subk Conversion Trend </span>\n        <span class=\"titleclr\">UF</span>\n        <span>:Utilisation - FY </span>\n        <span class=\"titleclr\">Vendors</span>\n        <span>:Vendors</span>\n        <span class=\"titleclr\"> V&U</span>\n        <span>:View And Upload</span>\n        <span class=\"titleclr\"> Management</span>\n        <span>:VMG-Management </span>\n        <span class=\"titleclr\"> Performance</span>\n        <span>:VMG-Performance</span>\n        <span class=\"titleclr\"> WPP</span>\n        <span>:Weekly Pipeline Progress</span>\n      </div>\n      <div>\n        {loader ? <Loader handleAbort={handleAbort} /> : \"\"}\n        {openhtml == true ? (\n          <div\n            className=\"col-14\"\n            style={{ position: \"relative\", bottom: \"-2px\" }}\n          >\n            <table\n              className=\"table table-bordered  \"\n              style={{ border: \"1px solid #ddd\", width: \"40%\" }}\n            >\n              <thead style={{ backgroundColor: \"#eeeeee\" }}>\n                <tr>\n                  <th className=\"text-center\">First Hint</th>\n                  <th className=\"text-center\">Last Hint</th>\n                </tr>\n              </thead>\n              {tabledata?.length == 0 ? (\n                <tr>\n                  <td colSpan={17} align=\"center\">\n                    No Records To View\n                  </td>\n                </tr>\n              ) : (\n                \"\"\n              )}\n              {tabledata.map((data) => (\n                <tbody class=\"context-menu\">\n                  <tr>\n                    <td className=\"text-center\">{data.startTime} </td>\n                    <td className=\"text-center\">{data.endTime}</td>\n                  </tr>\n                </tbody>\n              ))}\n            </table>\n          </div>\n        ) : (\n          \"\"\n        )}\n      </div>\n    </>\n  );\n}\n","import React, { useState, useEffect, useMemo, useRef } from \"react\";\nimport MaterialReactTable from \"material-react-table\";\nimport { Button, IconButton } from \"@mui/material\";\nimport { AiFillRightCircle, AiOutlineInfoCircle } from \"react-icons/ai\";\nimport { Link } from \"react-router-dom\";\nimport { environment } from \"../../environments/environment\";\nimport axios from \"axios\";\nimport { AiOutlineLeftSquare, AiOutlineRightSquare } from \"react-icons/ai\";\nimport moment from \"moment\";\nimport Loader from \"../Loader/Loader\";\nexport default function TrackerResCollapsibleTable(props) {\n  const {\n    data,\n    expandedCols,\n    colExpandState,\n    day,\n    openhtmlRes,\n    setOpenhtmlRes,\n  } = props;\n  const [nodes, setNodes] = useState([]);\n  const [columns, setColumns] = useState(null);\n  const [hiddenColumns, setHiddenColumns] = useState({});\n  const [colExpFlag, setColumnExpFlag] = useState(false);\n  const [headers, setHeaders] = useState([]);\n  useEffect(() => {\n    getData();\n  }, [data]);\n  const baseUrl = environment.baseUrl;\n  const [tabledata, setTabledata] = useState([{}]);\n  // const [openhtml, setOpenhtml] = useState(false);\n  const [loader, setLoader] = useState(false);\n  const getDetailsInfo = (pageNameOnly, name, clickedDate) => {\n    setLoader(true);\n    axios({\n      method: \"post\",\n      url: baseUrl + `/administrationms/tracker/getpagenamedata`,\n      data: {\n        page_name: pageNameOnly,\n        toDt: clickedDate,\n        resId: name,\n      },\n      headers: { \"Content-Type\": \"application/json\" },\n    })\n      .then((res) => {\n        const GetData = res.data;\n        setTabledata(GetData);\n        setLoader(false);\n      })\n      .catch((error) => {});\n    setOpenhtmlRes(true);\n  };\n  const getData = () => {\n    let tableData = data.tableData;\n    let columns = null;\n    if (data?.columns?.includes(\"'\")) {\n      columns = data?.columns?.replaceAll(\"'\", \"\");\n    } else {\n      columns = data?.columns;\n    }\n    let colArr = columns?.split(\",\");\n    let newHeaders = [];\n    let hiddenHeaders = [];\n    const obj = {};\n    for (let i = 0; i < colArr?.length; i++) {\n      let colVal = colArr[i].trim();\n\n      let firstData = tableData;\n      obj[colVal] = firstData[colVal];\n    }\n    let headerArray = Object.entries(obj);\n    let filteredHeaders = headerArray;\n    setHeaders(filteredHeaders);\n\n    filteredHeaders.map(([key, value]) => {\n      if (expandedCols.includes(key)) {\n        hiddenHeaders.push({ [key]: false });\n      }\n    });\n    setHiddenColumns(Object.assign({}, ...hiddenHeaders));\n    filteredHeaders.map(([key, value], index) => {\n      const modifiedKey = key.replace(/_(F|S|M|T|W|T)$/, \"\");\n      newHeaders.push({\n        accessorKey: key,\n        header: modifiedKey,\n        enableColumnActions: false,\n        enableHiding: true,\n        Header: ({ column }) => (\n          <div>\n            {modifiedKey}\n            {key === \"PageName\" ? (\n              <IconButton\n                className=\"expandIcon\"\n                onClick={() => {\n                  setColumnExpFlag((prev) => !prev);\n                }}\n              >\n                <AiFillRightCircle\n                  title=\"Show Details\"\n                  style={{ fontSize: \"15px\" }}\n                />\n              </IconButton>\n            ) : null}\n          </div>\n        ),\n        Cell: ({ cell }) => {\n          const propertiesToExclude = [\n            \"BusinessUnit\",\n            \"PageName\",\n            \"Supervisor\",\n            \"Total\",\n          ];\n          const isExcludedKey = key.endsWith(\"_S\") || key.endsWith(\"_S\");\n          if (isExcludedKey) {\n            return cell.getValue();\n          }\n          const weeks = parseInt(cell.column.id.replace(/_[MTWTF]$/, \"\"));\n          const startDate = new Date(day?.toDate);\n          startDate.setDate(startDate.getDate() + weeks - 1);\n\n          return (\n            <div title={cell.getValue()}>\n              {propertiesToExclude.includes(cell.column.id) ? (\n                cell.getValue()\n              ) : (\n                <Link\n                  onClick={(e) => {\n                    const pageNameOnly = cell.row.original.PageName.replace(\n                      /\\([^)]*\\)/,\n                      \"\"\n                    ).trim();\n                    const clickedDate = startDate.toISOString().split(\"T\")[0];\n                    getDetailsInfo(\n                      pageNameOnly,\n                      cell.row.original.user_id,\n                      clickedDate\n                    );\n                  }}\n                  style={{\n                    cursor: \"pointer\",\n                    textAlign: \"right\",\n                  }}\n                >\n                  {cell.getValue()}\n                </Link>\n              )}\n            </div>\n          );\n        },\n      });\n    });\n    setColumns(newHeaders);\n    let values = [];\n    let minusOneRow = [];\n    if (tableData && tableData.length > 0) {\n      tableData.forEach((d) => {\n        if (d && d.PageName && d.PageName.length > 0) {\n          values.push(d);\n        } else {\n          minusOneRow.push(d);\n        }\n      });\n    } else {\n    }\n    let tempData = jsonToTree(values);\n    let finalData = [...tempData];\n    setNodes(finalData);\n  };\n  useEffect(() => {\n    colExpFlag ? setHiddenColumns({}) : colCollapse();\n  }, [colExpFlag]);\n  const colCollapse = () => {\n    let hiddenHeaders = [];\n    headers.map(([key, value]) => {\n      if (expandedCols.includes(key)) {\n        hiddenHeaders.push({ [key]: false });\n      }\n    });\n    setHiddenColumns(Object.assign({}, ...hiddenHeaders));\n  };\n  ///--------------second table link\n  const jsonToTree = (flatArray, options) => {\n    options = {\n      PageName: \"PageName\",\n      Supervisor: \"Supervisor\",\n      children: \"subRows\",\n      ...options,\n    };\n    const dictionary = {}; // a hash table mapping to the specific array objects with their ids as key\n    const tree = [];\n    const children = options.children;\n    flatArray.forEach((node) => {\n      const nodeId = node[options.PageName];\n      const nodeParentId = node[options.Supervisor];\n      // set up current node data in dictionary\n      dictionary[nodeId] = {\n        [children]: [], // init a children property\n        ...node, // add other propertys\n        ...dictionary[nodeId], // children will be replaced if this node already has children property which was set below\n      };\n      dictionary[nodeParentId] = dictionary[nodeParentId] || { [children]: [] }; // if it's not exist in dictionary, init an object with children property\n      dictionary[nodeParentId][children].push(dictionary[nodeId]); // add reference to current node object in parent node object\n    });\n    Object.values(dictionary).forEach((obj) => {\n      if (typeof obj[options.PageName] === \"undefined\") {\n        tree.push(...obj[children]);\n      }\n    });\n    return tree;\n  };\n  const abortController = useRef(null);\n  const handleAbort = () => {\n    abortController.current && abortController.current.abort();\n    setLoader(false);\n  };\n  return (\n    <>\n      <div\n        // className=\"expandableTableBillableUtilTrend\"\n        className=\"\"\n        style={{ marginTop: \"20px\" }}\n      >\n        {columns?.length ? (\n          <MaterialReactTable\n            columns={columns}\n            data={nodes}\n            enableExpandAll={true}\n            enableExpanding={false}\n            enablePagination={false}\n            enableRowVirtualization\n            enableBottomToolbar={false}\n            enableTopToolbar={false}\n            enableColumnActions={false}\n            enableSorting={false}\n            filterFromLeafRows\n            enablePinning\n            initialState={{\n              expanded: false,\n              density: \"compact\",\n              columnVisibility: { ...hiddenColumns },\n              columnPinning: { right: [\"total\"], left: [\"name\"] },\n            }}\n            state={{ columnVisibility: { ...hiddenColumns } }}\n            paginateExpandedRows={false}\n            defaultColumn={{ minSize: 40, maxSize: 1000, size: 150 }}\n            muiTableContainerProps={{\n              sx: { maxHeight: \"50vh\", width: \"auto\", maxWidth: \"fit-content\" },\n            }}\n            muiTableBodyProps={{\n              sx: {\n                \"&\": {},\n                \"& td\": {\n                  borderRight: \"1px solid #ccc\",\n                  height: \"22px\",\n                  fontSize: \"11px\",\n                  paddingTop: \"0px\",\n                  paddingBottom: \"0px\",\n                },\n              },\n            }}\n            muiTableHeadProps={{\n              sx: {\n                \"& th\": {\n                  borderTop: \"1px solid #ccc\",\n                  borderRight: \"1px solid #ccc\",\n                  background: \"#f4f4f4 \",\n                  fontSize: \"11px\",\n                  padding: \"0px 8px\",\n                },\n              },\n            }}\n          />\n        ) : null}\n      </div>\n      <div style={{ textAlign: \"right\", fontSize: \"13px\" }}>\n        <span class=\"titleclr\">Alloc DB</span>\n        <span>:Allocation Dashboard</span>\n        <span class=\"titleclr\">BA</span>\n        <span>: Bench Analysis</span>\n        <span class=\"titleclr\">CP</span>\n        <span>:Capacity Plan</span>\n        <span class=\"titleclr\">Comp.D</span>\n        <span>: Competency Dashboard</span>\n        <span class=\"titleclr\">Cust DB </span>\n        <span>: Custom Dashboard</span>\n        <span class=\"titleclr\">DS</span>\n        <span>:Demand & Supply</span>\n        <span class=\"titleclr\">FPR</span>\n        <span>: Financial Plan and Review </span>\n        <span class=\"titleclr\">FS</span>\n        <span>: Forecast and Supply</span>\n        <span class=\"titleclr\">HC&MT</span>\n        <span> : Headcount & Margins Trend</span>{\" \"}\n        <span class=\"titleclr\">IS</span>\n        <span>: Inside Sales</span>\n        <span class=\"titleclr\">MPR Changes</span>\n        <span> : Monthly PR Changes by Day</span>\n        <span class=\"titleclr\">MRF</span>\n        <span>:Monthly Revenue Forecast</span>\n        <span class=\"titleclr\">RD</span>\n        <span>: My Dashboard</span>\n        <span class=\"titleclr\">NBW</span>\n        <span>: NB Work - 4 Prev. Weeks</span>\n        <span class=\"titleclr\">PCQA</span>\n        <span>:PCQA</span>\n        <span class=\"titleclr\">PC</span>\n        <span>:Practice Calls</span>\n        <span class=\"titleclr\">PrjHealth</span>\n        <span> : Project Health </span>\n        <span class=\"titleclr\">GD</span>\n        <span>: Project Status Report</span>\n        <span class=\"titleclr\">PI</span>\n        <span>:Pyramid Index</span>\n        <span class=\"titleclr\">RO</span>\n        <span>:Resource Overview</span>\n        <span class=\"titleclr\">RT</span>\n        <span>:Resource Trending</span>\n        <span class=\"titleclr\">RMA</span>\n        <span>: Revenue & Margin Analysis</span>\n        <span class=\"titleclr\">RMV</span>\n        <span>:Revenue And Margin Variance</span>\n        <span class=\"titleclr\">RAM</span>\n        <span>: Revenue Attainment Metrics </span>\n        <span class=\"titleclr\">RP</span>\n        <span>:Revenue Projections</span>\n        <span class=\"titleclr\">Forecast</span>\n        <span>: RMG Forecast</span>\n        <span class=\"titleclr\">roleAppr</span>\n        <span>:Role Approvals</span>\n        <span class=\"titleclr\">roleGrid</span>\n        <span>:Role Grid </span>\n        <span class=\"titleclr\">roleView</span>\n        <span>: Role View</span>\n        <span class=\"titleclr\">Roles Permissions</span>\n        <span>:Roles Permissions</span>\n        <span class=\"titleclr\">S/W- PR</span>\n        <span>:S/W Plan and Review </span>\n        <span class=\"titleclr\">Oppt</span>\n        <span>:Sales - Opportunities </span>\n        <span class=\"titleclr\">SPM</span>\n        <span>:Sales Performance </span>\n        <span class=\"titleclr\">SPT</span>\n        <span>:Sales Pipeline Trending </span>\n        <span class=\"titleclr\">SSC</span>\n        <span>:Sales ScoreCard </span>\n        <span class=\"titleclr\">SSO</span>\n        <span>:Sales Solutions </span>\n        <span class=\"titleclr\">Service PR</span>\n        <span>:Services Plan and Review </span>\n        <span class=\"titleclr\">SA</span>\n        <span>:Shift Allownaces </span>\n        <span class=\"titleclr\">Subk-CT</span>\n        <span>:Subk Conversion Trend </span>\n        <span class=\"titleclr\">BT-T&M</span>\n        <span>: T&M - Open </span>\n        <span class=\"titleclr\">TP</span>\n        <span>:Task Plan</span>\n        <span class=\"titleclr\">UF</span>\n        <span>:Subk Conversion Trend </span>\n        <span class=\"titleclr\">Subk-CT</span>\n        <span>:Subk Conversion Trend </span>\n        <span class=\"titleclr\">UF</span>\n        <span>:Utilisation - FY </span>\n        <span class=\"titleclr\">Vendors</span>\n        <span>:Vendors</span>\n        <span class=\"titleclr\"> V&U</span>\n        <span>:View And Upload</span>\n        <span class=\"titleclr\"> Management</span>\n        <span>:VMG-Management </span>\n        <span class=\"titleclr\"> Performance</span>\n        <span>:VMG-Performance</span>\n        <span class=\"titleclr\"> WPP</span>\n        <span>:Weekly Pipeline Progress</span>\n      </div>\n      <div>\n        {loader ? <Loader handleAbort={handleAbort} /> : \"\"}\n        {openhtmlRes == true ? (\n          <div\n            className=\"col-14\"\n            style={{ position: \"relative\", bottom: \"-2px\" }}\n          >\n            <table\n              className=\"table table-bordered  \"\n              style={{ border: \"1px solid #ddd\", width: \"40%\" }}\n            >\n              <thead style={{ backgroundColor: \"#eeeeee\" }}>\n                <tr>\n                  <th className=\"text-center\">First Hint</th>\n                  <th className=\"text-center\">Last Hint</th>\n                </tr>\n              </thead>\n              {tabledata.length == 0 ? (\n                <tr>\n                  <td colSpan={17} align=\"center\">\n                    No Records To View\n                  </td>\n                </tr>\n              ) : (\n                \"\"\n              )}\n              {tabledata.map((data) => (\n                <tbody class=\"context-menu\">\n                  <tr>\n                    <td className=\"text-center\">{data.startTime} </td>\n                    <td className=\"text-center\">{data.endTime}</td>\n                  </tr>\n                </tbody>\n              ))}\n            </table>\n          </div>\n        ) : (\n          \"\"\n        )}\n      </div>\n    </>\n  );\n}\n","import React, { useState, useEffect, useRef } from \"react\";\nimport DatePicker from \"react-datepicker\";\nimport axios from \"axios\";\nimport moment from \"moment\";\nimport Loader from \"../Loader/Loader\";\nimport { environment } from \"../../environments/environment\";\nimport { MultiSelect } from \"react-multi-select-component\";\nimport { ReactSearchAutocomplete } from \"react-search-autocomplete\";\nimport TrackerCollapsibleTable from \"./TrackerCollapsibleTable\";\nimport { AiOutlineLeftSquare, AiOutlineRightSquare } from \"react-icons/ai\";\nimport { IoWarningOutline } from \"react-icons/io5\";\nimport GlobalValidation from \"../ValidationComponent/GlobalValidation\";\nimport { FaSearch, FaCaretDown, FaCheck, FaPlus, FaSave } from \"react-icons/fa\";\nimport TrackerResCollapsibleTable from \"./TrackerResCollapsibleTable\";\nexport default function Tracker() {\n  const [departments, setDepartments] = useState([]);\n  const [selectedDepartments, setSelectedDepartments] = useState([]);\n  const [ToDate, setToDate] = useState(null);\n  const [depData, setDepData] = useState(\"\");\n  const [data, setData] = useState({});\n  const [isShow, setIsShow] = useState(false);\n  const [resisShow, setResIsShow] = useState(false);\n  const [openhtml, setOpenhtml] = useState(false);\n  const [openhtmlRes, setOpenhtmlRes] = useState(false);\n  const [issueDetails, setIssueDetails] = useState([]);\n  const [selectType, setSelectType] = useState(\"All Reportees\");\n  const [details, setDetails] = useState([]);\n  const [loader, setLoader] = useState(false);\n  const [resourceId, setResourceId] = useState([]);\n  const baseUrl = environment.baseUrl;\n  const loggedUserId = localStorage.getItem(\"resId\");\n  const ref = useRef([]);\n  const dates = {\n    fromDate: moment().format(\"YYYY-MM-DD\"),\n    toDate: moment().add(\"days\", 0).format(\"YYYY-MM-DD\"),\n  };\n  const [dt, setDt] = useState(dates);\n  const ArrowRenderer = ({ expanded }) => (\n    <>\n      {expanded ? (\n        <FaCaretDown className=\"chevronIcon\" />\n      ) : (\n        <FaCaretDown className=\"chevronIcon\" />\n      )}\n    </>\n  );\n  const generateDropdownLabel = (selectedOptions, allOptions) => {\n    const selectedValues = selectedOptions.map((option) => option.value);\n    const allValues = allOptions.map((item) => item.value);\n\n    if (selectedValues.length === allValues.length) {\n      return \"<< ALL >>\";\n    } else {\n      return selectedOptions.map((option) => option.label).join(\", \");\n    }\n  };\n  const abortController = useRef(null);\n\n  const handleAbort = () => {\n    abortController.current && abortController.current.abort();\n    setLoader(false);\n  };\n\n  const getData = () => {\n    axios({\n      method: \"get\",\n      url: baseUrl + `/ProjectMS/Issues/getAssignedData`,\n    }).then(function (response) {\n      var res = response.data;\n      setIssueDetails(res);\n    });\n  };\n  const getDepartments = async () => {\n    const resp = await axios({\n      url: baseUrl + `/administrationms/tracker/getnames`,\n    });\n    let departments = resp.data;\n    setDepartments(departments);\n    setSelectedDepartments(departments.filter((ele) => ele.value != 0));\n    let filteredDeptData = [];\n    departments.forEach((data) => {\n      if (data.value != 0) {\n        filteredDeptData.push(data.value);\n      }\n    });\n    setDepData((prevVal) => ({\n      ...prevVal,\n      [\"screenName\"]: filteredDeptData,\n    }));\n  };\n  /// All Reportees direct indirect reportee\n  const curDate = dt.toDate;\n  const getPageviewcountdetails = (dt) => {\n    const date = curDate;\n    const date1 = dt == undefined ? date : dt;\n    setLoader(true);\n    axios({\n      method: \"post\",\n      url: baseUrl + `/administrationms/tracker/getpageviewcountdetails`,\n      data: {\n        screenName: \"[\" + depData + \"]\",\n        dateStr: date1,\n        loggedUser: parseInt(loggedUserId) + 1,\n        reportType: selectType,\n      },\n      headers: { \"Content-Type\": \"application/json\" },\n    })\n      .then((res) => {\n        let detail = res.data.tableData;\n        let fdata = res.data;\n        let columnsArray = fdata.columns.split(\",\");\n        const columnIndexToRemove = columnsArray.indexOf(\"user_id\");\n        if (columnIndexToRemove !== -1) {\n          columnsArray.splice(columnIndexToRemove, 1);\n        }\n        fdata.columns = columnsArray.join(\",\");\n        fdata.tableData.forEach((rowData) => {\n          for (const key in rowData) {\n            if (rowData[key] === null) {\n              rowData[key] = 0;\n            }\n          }\n        });\n        setDetails(detail);\n\n        setData(fdata);\n        setIsShow(true);\n        setLoader(false);\n      })\n      .then((error) => {});\n  };\n  // RsourceSerach\n  const [resourcedate, setResourceDate] = useState(new Date());\n  let formattedMonth = moment(resourcedate).format(\"yyyy-MM-01\");\n\n  const datesFirst = {\n    fromDate: moment(formattedMonth).startOf(\"month\").format(\"YYYY-MM-01\"),\n    toDate: moment(formattedMonth)\n      .startOf(\"month\")\n      .add(\"month\", 0)\n      .format(\"YYYY-MM-01\"),\n  };\n  const [day, setDay] = useState(datesFirst);\n  const getPageResViewCount = (dt) => {\n    const date = moment(new Date()).format(\"YYYY-MM-01\");\n    const date1 = dt == undefined ? date : dt;\n    setLoader(true);\n    axios({\n      method: \"post\",\n      url: baseUrl + `/administrationms/tracker/GetPageResViewCount`,\n      data: {\n        resId: resourceId.resId,\n        screenName: \"[\" + depData + \"]\",\n        selectedDate: date1,\n        UserId: resourceId.resId + parseInt(1),\n      },\n      headers: { \"Content-Type\": \"application/json\" },\n    })\n      .then((res) => {\n        let detail = res.data.tableData;\n        let fdata = res.data;\n        let columnsArray = fdata.columns.split(\",\");\n        const columnIndexToRemove = columnsArray.indexOf(\"user_id\");\n        if (columnIndexToRemove !== -1) {\n          columnsArray.splice(columnIndexToRemove, 1);\n        }\n        fdata.columns = columnsArray.join(\",\");\n        fdata.tableData.forEach((rowData) => {\n          for (const key in rowData) {\n            if (rowData[key] === null) {\n              rowData[key] = 0;\n            }\n          }\n        });\n        setDetails(detail);\n        setData([]);\n        setData(fdata);\n        setResIsShow(true);\n        setLoader(false);\n      })\n      .then((error) => {});\n  };\n  useEffect(() => {}, [data]);\n\n  const handleChangedata = (e) => {\n    const { id, value } = e.target;\n    setSelectType(value);\n  };\n  useEffect(() => {\n    if (\n      selectType == \"All Reportees\" ||\n      selectType == \"Direct Reportees\" ||\n      selectType == \"InDirect Reportees\" ||\n      selectType == \"Resource Search\"\n    ) {\n      let deptData = selectedDepartments\n        .map((d) => d.label)\n        .reduce(\n          (accumulator, currentValue, index) =>\n            index == 0\n              ? \"'\" + currentValue + \"'\"\n              : accumulator + \",'\" + currentValue + \"'\",\n          initialValue\n        );\n      setDepData(deptData);\n    }\n  }, [selectType, selectedDepartments]);\n  const initialValue = {\n    screenName: \"\",\n  };\n  const [errorMsg, setErrorMsg] = useState(false);\n\n  const handleClick = () => {\n    let valid = GlobalValidation(ref);\n    if (valid) {\n      {\n        setErrorMsg(true);\n        setTimeout(() => {\n          setErrorMsg(false);\n        }, 3000);\n      }\n      return;\n    }\n    if (selectType == \"Resource Search\") {\n      getPageResViewCount();\n      setResIsShow(true);\n      setIsShow(false);\n      setOpenhtml(false);\n    } else {\n      getPageviewcountdetails();\n      setIsShow(true);\n      setResIsShow(false);\n      setOpenhtmlRes(false);\n    }\n  };\n\n  useEffect(() => {\n    getDepartments();\n    getData();\n  }, []);\n\n  const addHandler = () => {\n    setDt((prev) => ({\n      ...prev,\n      [\"fromDate\"]: moment(dt.fromDate).add(\"days\", 1).format(\"YYYY-MM-DD\"),\n    }));\n    setDt((prev) => ({\n      ...prev,\n      [\"toDate\"]: moment(dt.toDate).add(\"days\", 1).format(\"YYYY-MM-DD\"),\n    }));\n    const date = moment(dt.toDate).add(\"days\", 1).format(\"YYYY-MM-DD\");\n    getPageviewcountdetails(date);\n  };\n  const subtracHandler = () => {\n    setDt((prev) => ({\n      ...prev,\n      [\"fromDate\"]: moment(dt.fromDate)\n        .subtract(\"days\", 1)\n        .format(\"YYYY-MM-DD\"),\n    }));\n    setDt((prev) => ({\n      ...prev,\n      [\"toDate\"]: moment(dt.toDate).subtract(\"days\", 1).format(\"YYYY-MM-DD\"),\n    }));\n    const date = moment(dt.toDate).subtract(\"days\", 1).format(\"YYYY-MM-DD\");\n    getPageviewcountdetails(date);\n  };\n  const addHandler1 = () => {\n    const newFromDate = moment(day.fromDate)\n      .add(1, \"month\")\n      .format(\"YYYY-MM-01\");\n    const newToDate = moment(newFromDate).endOf(\"month\").format(\"YYYY-MM-01\");\n    setDay({\n      fromDate: newFromDate,\n      toDate: newToDate,\n    });\n    const date = moment(newFromDate).endOf(\"month\").format(\"YYYY-MM-01\");\n    getPageResViewCount(date);\n  };\n\n  const subtracHandler1 = () => {\n    const newFromDate = moment(day.fromDate)\n      .subtract(1, \"month\")\n      .format(\"YYYY-MM-01\");\n    const newToDate = moment(newFromDate).endOf(\"month\").format(\"YYYY-MM-01\");\n\n    setDay({\n      fromDate: newFromDate,\n      toDate: newToDate,\n    });\n    const date = moment(newFromDate).endOf(\"month\").format(\"YYYY-MM-01\");\n    getPageResViewCount(date);\n  };\n  const handleClear2 = () => {\n    setResourceId((prev) => ({ ...prev, resId: \"\" }));\n  };\n  useEffect(() => {}, [day.toDate, dt]);\n  return (\n    <div>\n      <div className=\"col-md-12\">\n        {errorMsg ? (\n          <div className=\"statusMsg error col-12 mb-2\">\n            <span>\n              <IoWarningOutline />\n              &nbsp;{`Please Select Highlighted field values`}\n            </span>\n          </div>\n        ) : (\n          \"\"\n        )}\n        <div className=\"pageTitle\">\n          <div className=\"childOne\"></div>\n          <div className=\"childTwo\">\n            <h2>Tracker</h2>\n          </div>\n          <div className=\"childThree\"></div>\n        </div>\n      </div>\n      <div className=\"group mb-3 customCard\">\n        <div className=\"col-md-12 collapseHeader\">\n          <h2>Search Filters</h2>\n          &nbsp;\n          <div></div>\n        </div>\n        <div className=\"group-content row\">\n          <div className=\" col-md-3 \">\n            <div className=\"form-group row\">\n              <label className=\"col-5\" htmlFor=\"ResourceType\">\n                Resource Type&nbsp;\n                <span className=\"col-1 p-0 error-text\">*</span>\n              </label>\n              <span className=\"col-1 p-0\">:</span>\n              <div className=\"col-6\">\n                <select\n                  id=\"SelectType\"\n                  name=\"SelectType\"\n                  onChange={handleChangedata}\n                >\n                  <option value=\"All Reportees\">All Reportees</option>\n                  <option value=\"Direct Reportees\">Direct Reportees</option>\n                  <option value=\"InDirect Reportees\">InDirect Reportees</option>\n                  <option value=\"Resource Search\">Resource Search</option>\n                </select>\n              </div>\n            </div>\n          </div>\n          {selectType == \"Resource Search\" ? (\n            <div className=\" col-md-3\">\n              <div className=\"form-group row\">\n                <label className=\"col-5\" htmlFor=\"text-input-inline\">\n                  Resource&nbsp;<span className=\"col-1 p-0 error-text\">*</span>\n                </label>\n                <span className=\"col-1 p-0\">:</span>\n                <div className=\"col-6\">\n                  <div\n                    className=\"autocomplete\"\n                    ref={(ele) => {\n                      ref.current[0] = ele;\n                    }}\n                  >\n                    <div className=\" autoComplete-container\">\n                      <ReactSearchAutocomplete\n                        items={issueDetails}\n                        type=\"Text\"\n                        name=\"resId\"\n                        id=\"resId\"\n                        issueDetails={issueDetails}\n                        onClear={handleClear2}\n                        className=\"AutoComplete\"\n                        onSelect={(e) => {\n                          setResourceId((prevProps) => ({\n                            ...prevProps,\n                            resId: e.id,\n                          }));\n                        }}\n                        showIcon={false}\n                      />\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          ) : (\n            <div className=\" col-md-3 \">\n              <div className=\"form-group row\">\n                <label className=\"col-5\" htmlFor=\"Date\">\n                  Date&nbsp;<span className=\"col-1 p-0 error-text\">*</span>\n                </label>\n                <span className=\"col-1 p-0\">:</span>\n                <div className=\"col-6\">\n                  <DatePicker\n                    name=\"Date\"\n                    selected={ToDate}\n                    id=\"Date\"\n                    dropdownMode=\"select\"\n                    className=\"err cancel\"\n                    dateFormat=\"dd-MMM-yyyy\"\n                    value={moment(dt.toDate).format(\"DD-MMM-YYYY\")}\n                    maxDate={new Date()}\n                    onChange={(e) => {\n                      setDt((prev) => ({\n                        ...prev,\n                        [\"toDate\"]: moment(e).format(\"YYYY-MM-DD\"),\n                      }));\n                      // setToDate(e);\n                    }}\n                    onKeyDown={(e) => {}}\n                    autoComplete=\"false\"\n                  />\n                </div>\n              </div>\n            </div>\n          )}\n          <div className=\" col-md-3 \">\n            <div className=\"form-group row\">\n              <label className=\"col-5\" htmlFor=\"Screen\">\n                Screen&nbsp;<span className=\"col-1 p-0 error-text\">*</span>\n              </label>\n              <span className=\"col-1\">:</span>\n              <div className=\"col-6\">\n                <div\n                  className=\"multiselect\"\n                  ref={(ele) => {\n                    ref.current[1] = ele;\n                  }}\n                >\n                  <MultiSelect\n                    id=\"screenName\"\n                    ArrowRenderer={ArrowRenderer}\n                    options={departments}\n                    hasSelectAll={true}\n                    shouldToggleOnHover={false}\n                    disableSearch={false}\n                    value={selectedDepartments}\n                    valueRenderer={generateDropdownLabel}\n                    disabled={false}\n                    onChange={(s) => {\n                      setSelectedDepartments(s);\n                      let filteredValues = [];\n                      s.forEach((d) => {\n                        filteredValues.push(d.label);\n                      });\n                      setDepData((prevVal) => ({\n                        ...prevVal,\n                        [\"screenName\"]: filteredValues.toString(),\n                      }));\n                    }}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\" col-md-3 \">\n            <div className=\"form-group row\">\n              <label className=\"col-5\" htmlFor=\"Threshold\">\n                Threshold\n              </label>\n              <span className=\"col-1\">:</span>\n              <div className=\"col-6\">\n                <input type=\"text\" className=\"form-control\" id=\"Threshold\" />\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div className=\" form-group col-md-12 col-sm-12 col-xs-12 btn-container center my-3 \">\n          <button\n            type=\"submit\"\n            className=\"btn btn-primary\"\n            onClick={() => {\n              handleClick();\n              setIsShow(false);\n              setResIsShow(false);\n              setOpenhtml(false);\n              setOpenhtmlRes(false);\n            }}\n          >\n            <FaSearch /> Search{\" \"}\n          </button>\n        </div>\n      </div>\n      <div>\n        {loader ? <Loader handleAbort={handleAbort} /> : \"\"}\n\n        {isShow == true ? (\n          <>\n            {\" \"}\n            <div style={{ textAlign: \"center\" }}>\n              <span>\n                <AiOutlineLeftSquare\n                  cursor=\"pointer\"\n                  size={\"2em\"}\n                  onClick={subtracHandler}\n                ></AiOutlineLeftSquare>\n                <span style={{ fontWeight: \"600\" }}>\n                  {moment(dt.toDate).format(\"DD-MMM-YYYY\") ===\n                  moment(new Date()).format(\"DD-MMM-YYYY\") ? (\n                    <>\n                      {moment(dt.toDate).format(\"DD-MMM-YYYY\")}\n                      <AiOutlineRightSquare\n                        cursor=\"not-allowed\" // Change the cursor style to \"not-allowed\" when disabled\n                        size={\"2em\"}\n                        disabled={true} // Add the disabled attribute\n                      ></AiOutlineRightSquare>\n                    </>\n                  ) : (\n                    <>\n                      {moment(dt.toDate).format(\"DD-MMM-YYYY\")}\n                      <AiOutlineRightSquare\n                        cursor=\"pointer\"\n                        size={\"2em\"}\n                        onClick={addHandler}\n                      ></AiOutlineRightSquare>\n                    </>\n                  )}\n                </span>\n              </span>\n            </div>\n            <div className=\"col-12\">\n              <TrackerCollapsibleTable\n                data={data}\n                expandedCols={[\"BusinessUnit\", \"Supervisor\"]}\n                colExpandState={[\"0\", \"0\", \"name\"]}\n                dt={dt}\n                setOpenhtml={setOpenhtml}\n                openhtml={openhtml}\n              />\n            </div>\n          </>\n        ) : (\n          \"\"\n        )}\n        {resisShow == true ? (\n          <>\n            {\" \"}\n            <div style={{ textAlign: \"center\" }}>\n              <span>\n                <AiOutlineLeftSquare\n                  cursor=\"pointer\"\n                  size={\"2em\"}\n                  onClick={subtracHandler1}\n                ></AiOutlineLeftSquare>\n                <span style={{ fontWeight: \"600\" }}>\n                  {moment(day.toDate).format(\"MMM-YYYY\") ===\n                  moment(new Date()).format(\"MMM-YYYY\") ? (\n                    <>\n                      {moment(day.toDate).format(\"MMM-YYYY\")}\n                      <AiOutlineRightSquare\n                        cursor=\"not-allowed\" // Change the cursor style to \"not-allowed\" when disabled\n                        size={\"2em\"}\n                        disabled={true} // Add the disabled attribute\n                      ></AiOutlineRightSquare>\n                    </>\n                  ) : (\n                    <>\n                      {moment(day.toDate).format(\"MMM-YYYY\")}\n                      <AiOutlineRightSquare\n                        cursor=\"pointer\"\n                        size={\"2em\"}\n                        onClick={addHandler1}\n                      ></AiOutlineRightSquare>\n                    </>\n                  )}\n                </span>\n              </span>\n            </div>\n            <div className=\"col-12\">\n              <TrackerResCollapsibleTable\n                data={data}\n                expandedCols={[\"BusinessUnit\", \"Supervisor\"]}\n                colExpandState={[\"0\", \"0\", \"name\"]}\n                day={day}\n                setOpenhtmlRes={setOpenhtmlRes}\n                openhtmlRes={openhtmlRes}\n              />\n            </div>\n          </>\n        ) : (\n          \"\"\n        )}\n      </div>\n    </div>\n  );\n}\n"],"names":["TrackerCollapsibleTable","props","data","expandedCols","dt","colExpandState","openhtml","setOpenhtml","useState","nodes","setNodes","columns","setColumns","hiddenColumns","setHiddenColumns","colExpFlag","setColumnExpFlag","headers","setHeaders","useEffect","getData","baseUrl","environment","tabledata","setTabledata","loader","setLoader","tableData","includes","replaceAll","colArr","split","newHeaders","hiddenHeaders","obj","i","length","colVal","trim","firstData","filteredHeaders","Object","entries","map","key","push","assign","index","accessorKey","header","enableColumnActions","enableHiding","Header","column","IconButton","className","onClick","prev","title","style","fontSize","Cell","cell","getValue","id","e","name","row","original","user_id","axios","method","url","page_name","toDt","toDate","resId","then","res","GetData","catch","error","cursor","values","minusOneRow","forEach","d","Resource","tempData","jsonToTree","finalData","colCollapse","flatArray","options","Supervisor","children","dictionary","tree","node","nodeId","nodeParentId","abortController","useRef","marginTop","enableExpandAll","enableExpanding","enablePagination","enableRowVirtualization","enableBottomToolbar","enableTopToolbar","enableSorting","filterFromLeafRows","enablePinning","initialState","expanded","density","columnVisibility","columnPinning","right","left","state","paginateExpandedRows","defaultColumn","minSize","maxSize","size","muiTableContainerProps","sx","maxHeight","width","maxWidth","muiTableBodyProps","borderRight","height","paddingTop","paddingBottom","muiTableHeadProps","borderTop","background","padding","textAlign","class","Loader","handleAbort","current","abort","position","bottom","border","backgroundColor","colSpan","align","startTime","endTime","TrackerResCollapsibleTable","day","openhtmlRes","setOpenhtmlRes","modifiedKey","replace","endsWith","weeks","parseInt","startDate","Date","setDate","getDate","pageNameOnly","PageName","clickedDate","toISOString","getDetailsInfo","Tracker","departments","setDepartments","selectedDepartments","setSelectedDepartments","ToDate","depData","setDepData","setData","isShow","setIsShow","resisShow","setResIsShow","issueDetails","setIssueDetails","selectType","setSelectType","setDetails","resourceId","setResourceId","loggedUserId","localStorage","getItem","ref","dates","fromDate","moment","format","add","setDt","getDepartments","resp","filter","ele","value","filteredDeptData","prevVal","curDate","getPageviewcountdetails","date1","undefined","screenName","dateStr","loggedUser","reportType","detail","fdata","columnsArray","columnIndexToRemove","indexOf","splice","join","rowData","resourcedate","formattedMonth","datesFirst","startOf","setDay","getPageResViewCount","date","selectedDate","UserId","deptData","label","reduce","accumulator","currentValue","initialValue","errorMsg","setErrorMsg","response","htmlFor","onChange","target","ReactSearchAutocomplete","items","type","onClear","onSelect","prevProps","showIcon","selected","dropdownMode","dateFormat","maxDate","onKeyDown","autoComplete","ArrowRenderer","hasSelectAll","shouldToggleOnHover","disableSearch","valueRenderer","selectedOptions","allOptions","selectedValues","option","allValues","item","disabled","s","filteredValues","toString","GlobalValidation","setTimeout","handleClick","subtract","fontWeight","newFromDate","newToDate","endOf"],"sourceRoot":""}