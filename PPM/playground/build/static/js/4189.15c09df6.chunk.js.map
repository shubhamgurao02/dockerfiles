{"version":3,"file":"static/js/4189.15c09df6.chunk.js","mappings":"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","sources":["../node_modules/highcharts/highcharts-3d.src.js"],"sourcesContent":["/**\n * @license Highcharts JS v10.3.2 (2022-11-28)\n *\n * 3D features for Highcharts JS\n *\n * License: www.highcharts.com/license\n */\n(function (factory) {\n    if (typeof module === 'object' && module.exports) {\n        factory['default'] = factory;\n        module.exports = factory;\n    } else if (typeof define === 'function' && define.amd) {\n        define('highcharts/highcharts-3d', ['highcharts'], function (Highcharts) {\n            factory(Highcharts);\n            factory.Highcharts = Highcharts;\n            return factory;\n        });\n    } else {\n        factory(typeof Highcharts !== 'undefined' ? Highcharts : undefined);\n    }\n}(function (Highcharts) {\n    'use strict';\n    var _modules = Highcharts ? Highcharts._modules : {};\n    function _registerModule(obj, path, args, fn) {\n        if (!obj.hasOwnProperty(path)) {\n            obj[path] = fn.apply(null, args);\n\n            if (typeof CustomEvent === 'function') {\n                window.dispatchEvent(\n                    new CustomEvent(\n                        'HighchartsModuleLoaded',\n                        { detail: { path: path, module: obj[path] }\n                    })\n                );\n            }\n        }\n    }\n    _registerModule(_modules, 'Core/Math3D.js', [_modules['Core/Globals.js'], _modules['Core/Utilities.js']], function (H, U) {\n        /* *\n         *\n         *  (c) 2010-2021 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var deg2rad = H.deg2rad;\n        var pick = U.pick;\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /* eslint-disable max-len */\n        /**\n         * Apply 3-D rotation\n         * Euler Angles (XYZ):\n         *     cosA = cos(Alfa|Roll)\n         *     cosB = cos(Beta|Pitch)\n         *     cosG = cos(Gamma|Yaw)\n         *\n         * Composite rotation:\n         * |          cosB * cosG             |           cosB * sinG            |    -sinB    |\n         * | sinA * sinB * cosG - cosA * sinG | sinA * sinB * sinG + cosA * cosG | sinA * cosB |\n         * | cosA * sinB * cosG + sinA * sinG | cosA * sinB * sinG - sinA * cosG | cosA * cosB |\n         *\n         * Now, Gamma/Yaw is not used (angle=0), so we assume cosG = 1 and sinG = 0, so\n         * we get:\n         * |     cosB    |   0    |   - sinB    |\n         * | sinA * sinB |  cosA  | sinA * cosB |\n         * | cosA * sinB | - sinA | cosA * cosB |\n         *\n         * But in browsers, y is reversed, so we get sinA => -sinA. The general result\n         * is:\n         * |      cosB     |   0    |    - sinB     |     | x |     | px |\n         * | - sinA * sinB |  cosA  | - sinA * cosB |  x  | y |  =  | py |\n         * |  cosA * sinB  |  sinA  |  cosA * cosB  |     | z |     | pz |\n         *\n         * @private\n         * @function rotate3D\n         */\n        /* eslint-enable max-len */\n        /**\n         * Rotates the position as defined in angles.\n         * @private\n         * @param {number} x\n         *        X coordinate\n         * @param {number} y\n         *        Y coordinate\n         * @param {number} z\n         *        Z coordinate\n         * @param {Highcharts.Rotation3DObject} angles\n         *        Rotation angles\n         * @return {Highcharts.Position3DObject}\n         *         Rotated position\n         */\n        function rotate3D(x, y, z, angles) {\n            return {\n                x: angles.cosB * x - angles.sinB * z,\n                y: -angles.sinA * angles.sinB * x + angles.cosA * y -\n                    angles.cosB * angles.sinA * z,\n                z: angles.cosA * angles.sinB * x + angles.sinA * y +\n                    angles.cosA * angles.cosB * z\n            };\n        }\n        /**\n         * Transforms a given array of points according to the angles in chart.options.\n         *\n         * @private\n         * @function Highcharts.perspective\n         *\n         * @param {Array<Highcharts.Position3DObject>} points\n         * The array of points\n         *\n         * @param {Highcharts.Chart} chart\n         * The chart\n         *\n         * @param {boolean} [insidePlotArea]\n         * Whether to verify that the points are inside the plotArea\n         *\n         * @param {boolean} [useInvertedPersp]\n         * Whether to use inverted perspective in calculations\n         *\n         * @return {Array<Highcharts.Position3DObject>}\n         * An array of transformed points\n         *\n         * @requires highcharts-3d\n         */\n        function perspective(points, chart, insidePlotArea, useInvertedPersp) {\n            var options3d = chart.options.chart.options3d, \n                /* The useInvertedPersp argument is used for inverted charts with\n                 * already inverted elements,\n                such as dataLabels or tooltip positions.\n                 */\n                inverted = pick(useInvertedPersp,\n                insidePlotArea ? chart.inverted : false),\n                origin = {\n                    x: chart.plotWidth / 2,\n                    y: chart.plotHeight / 2,\n                    z: options3d.depth / 2,\n                    vd: pick(options3d.depth, 1) * pick(options3d.viewDistance, 0)\n                },\n                scale = chart.scale3d || 1,\n                beta = deg2rad * options3d.beta * (inverted ? -1 : 1),\n                alpha = deg2rad * options3d.alpha * (inverted ? -1 : 1),\n                angles = {\n                    cosA: Math.cos(alpha),\n                    cosB: Math.cos(-beta),\n                    sinA: Math.sin(alpha),\n                    sinB: Math.sin(-beta)\n                };\n            if (!insidePlotArea) {\n                origin.x += chart.plotLeft;\n                origin.y += chart.plotTop;\n            }\n            // Transform each point\n            return points.map(function (point) {\n                var rotated = rotate3D((inverted ? point.y : point.x) - origin.x, (inverted ? point.x : point.y) - origin.y, (point.z || 0) - origin.z,\n                    angles), \n                    // Apply perspective\n                    coordinate = perspective3D(rotated,\n                    origin,\n                    origin.vd);\n                // Apply translation\n                coordinate.x = coordinate.x * scale + origin.x;\n                coordinate.y = coordinate.y * scale + origin.y;\n                coordinate.z = rotated.z * scale + origin.z;\n                return {\n                    x: (inverted ? coordinate.y : coordinate.x),\n                    y: (inverted ? coordinate.x : coordinate.y),\n                    z: coordinate.z\n                };\n            });\n        }\n        /**\n         * Perspective3D function is available in global Highcharts scope because is\n         * needed also outside of perspective() function (#8042).\n         * @private\n         * @function Highcharts.perspective3D\n         *\n         * @param {Highcharts.Position3DObject} coordinate\n         * 3D position\n         *\n         * @param {Highcharts.Position3DObject} origin\n         * 3D root position\n         *\n         * @param {number} distance\n         * Perspective distance\n         *\n         * @return {Highcharts.PositionObject}\n         * Perspective 3D Position\n         *\n         * @requires highcharts-3d\n         */\n        function perspective3D(coordinate, origin, distance) {\n            var projection = ((distance > 0) &&\n                    (distance < Number.POSITIVE_INFINITY)) ?\n                    distance / (coordinate.z + origin.z + distance) :\n                    1;\n            return {\n                x: coordinate.x * projection,\n                y: coordinate.y * projection\n            };\n        }\n        /**\n         * Calculate a distance from camera to points - made for calculating zIndex of\n         * scatter points.\n         *\n         * @private\n         * @function Highcharts.pointCameraDistance\n         *\n         * @param {Highcharts.Dictionary<number>} coordinates\n         * Coordinates of the specific point\n         *\n         * @param {Highcharts.Chart} chart\n         * Related chart\n         *\n         * @return {number}\n         * Distance from camera to point\n         *\n         * @requires highcharts-3d\n         */\n        function pointCameraDistance(coordinates, chart) {\n            var options3d = chart.options.chart.options3d,\n                cameraPosition = {\n                    x: chart.plotWidth / 2,\n                    y: chart.plotHeight / 2,\n                    z: pick(options3d.depth, 1) * pick(options3d.viewDistance, 0) +\n                        options3d.depth\n                }, \n                // Added support for objects with plotX or x coordinates.\n                distance = Math.sqrt(Math.pow(cameraPosition.x - pick(coordinates.plotX,\n                coordinates.x), 2) +\n                    Math.pow(cameraPosition.y - pick(coordinates.plotY,\n                coordinates.y), 2) +\n                    Math.pow(cameraPosition.z - pick(coordinates.plotZ,\n                coordinates.z), 2));\n            return distance;\n        }\n        /**\n         * Calculate area of a 2D polygon using Shoelace algorithm\n         * https://en.wikipedia.org/wiki/Shoelace_formula\n         *\n         * @private\n         * @function Highcharts.shapeArea\n         *\n         * @param {Array<Highcharts.PositionObject>} vertexes\n         * 2D Polygon\n         *\n         * @return {number}\n         * Calculated area\n         *\n         * @requires highcharts-3d\n         */\n        function shapeArea(vertexes) {\n            var area = 0,\n                i,\n                j;\n            for (i = 0; i < vertexes.length; i++) {\n                j = (i + 1) % vertexes.length;\n                area += vertexes[i].x * vertexes[j].y - vertexes[j].x * vertexes[i].y;\n            }\n            return area / 2;\n        }\n        /**\n         * Calculate area of a 3D polygon after perspective projection\n         *\n         * @private\n         * @function Highcharts.shapeArea3d\n         *\n         * @param {Array<Highcharts.Position3DObject>} vertexes\n         * 3D Polygon\n         *\n         * @param {Highcharts.Chart} chart\n         * Related chart\n         *\n         * @param {boolean} [insidePlotArea]\n         * Whether to verify that the points are inside the plotArea\n         *\n         * @return {number}\n         * Calculated area\n         *\n         * @requires highcharts-3d\n         */\n        function shapeArea3D(vertexes, chart, insidePlotArea) {\n            return shapeArea(perspective(vertexes, chart, insidePlotArea));\n        }\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        var Math3D = {\n                perspective: perspective,\n                perspective3D: perspective3D,\n                pointCameraDistance: pointCameraDistance,\n                shapeArea: shapeArea,\n                shapeArea3D: shapeArea3D\n            };\n\n        return Math3D;\n    });\n    _registerModule(_modules, 'Core/Renderer/SVG/SVGElement3D.js', [_modules['Core/Color/Color.js'], _modules['Core/Renderer/SVG/SVGElement.js'], _modules['Core/Utilities.js']], function (Color, SVGElement, U) {\n        /* *\n         *\n         *  (c) 2010-2021 Torstein Honsi\n         *\n         *  Extensions to the SVGRenderer class to enable 3D shapes\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var color = Color.parse;\n        var defined = U.defined,\n            merge = U.merge,\n            objectEach = U.objectEach,\n            pick = U.pick;\n        /* *\n         *\n         *  Constants\n         *\n         * */\n        var SVGElement3D = {};\n        SVGElement3D.base = {\n            /* eslint-disable valid-jsdoc */\n            /**\n             * The init is used by base - renderer.Element\n             * @private\n             */\n            initArgs: function (args) {\n                var elem3d = this,\n                    renderer = elem3d.renderer,\n                    paths = renderer[elem3d.pathType + 'Path'](args),\n                    zIndexes = paths.zIndexes;\n                // build parts\n                elem3d.parts.forEach(function (part) {\n                    var attribs = {\n                            'class': 'highcharts-3d-' + part,\n                            zIndex: zIndexes[part] || 0\n                        };\n                    if (renderer.styledMode) {\n                        if (part === 'top') {\n                            attribs.filter = 'url(#highcharts-brighter)';\n                        }\n                        else if (part === 'side') {\n                            attribs.filter = 'url(#highcharts-darker)';\n                        }\n                    }\n                    elem3d[part] = renderer.path(paths[part])\n                        .attr(attribs)\n                        .add(elem3d);\n                });\n                elem3d.attr({\n                    'stroke-linejoin': 'round',\n                    zIndex: zIndexes.group\n                });\n                // store original destroy\n                elem3d.originalDestroy = elem3d.destroy;\n                elem3d.destroy = elem3d.destroyParts;\n                // Store information if any side of element was rendered by force.\n                elem3d.forcedSides = paths.forcedSides;\n            },\n            /**\n             * Single property setter that applies options to each part\n             * @private\n             */\n            singleSetterForParts: function (prop, val, values, verb, duration, complete) {\n                var elem3d = this,\n                    newAttr = {},\n                    optionsToApply = [null,\n                    null, (verb || 'attr'),\n                    duration,\n                    complete],\n                    hasZIndexes = values && values.zIndexes;\n                if (!values) {\n                    newAttr[prop] = val;\n                    optionsToApply[0] = newAttr;\n                }\n                else {\n                    // It is needed to deal with the whole group zIndexing\n                    // in case of graph rotation\n                    if (hasZIndexes && hasZIndexes.group) {\n                        this.attr({\n                            zIndex: hasZIndexes.group\n                        });\n                    }\n                    objectEach(values, function (partVal, part) {\n                        newAttr[part] = {};\n                        newAttr[part][prop] = partVal;\n                        // include zIndexes if provided\n                        if (hasZIndexes) {\n                            newAttr[part].zIndex = values.zIndexes[part] || 0;\n                        }\n                    });\n                    optionsToApply[1] = newAttr;\n                }\n                return elem3d.processParts.apply(elem3d, optionsToApply);\n            },\n            /**\n             * Calls function for each part. Used for attr, animate and destroy.\n             * @private\n             */\n            processParts: function (props, partsProps, verb, duration, complete) {\n                var elem3d = this;\n                elem3d.parts.forEach(function (part) {\n                    // if different props for different parts\n                    if (partsProps) {\n                        props = pick(partsProps[part], false);\n                    }\n                    // only if something to set, but allow undefined\n                    if (props !== false) {\n                        elem3d[part][verb](props, duration, complete);\n                    }\n                });\n                return elem3d;\n            },\n            /**\n             * Destroy all parts\n             * @private\n             */\n            destroyParts: function () {\n                this.processParts(null, null, 'destroy');\n                return this.originalDestroy();\n            }\n            /* eslint-enable valid-jsdoc */\n        };\n        SVGElement3D.cuboid = merge(SVGElement3D.base, {\n            parts: ['front', 'top', 'side'],\n            pathType: 'cuboid',\n            attr: function (args, val, complete, continueAnimation) {\n                // Resolve setting attributes by string name\n                if (typeof args === 'string' && typeof val !== 'undefined') {\n                    var key = args;\n                    args = {};\n                    args[key] = val;\n                }\n                if (args.shapeArgs || defined(args.x)) {\n                    return this.singleSetterForParts('d', null, this.renderer[this.pathType + 'Path'](args.shapeArgs || args));\n                }\n                return SVGElement.prototype.attr.call(this, args, void 0, complete, continueAnimation);\n            },\n            animate: function (args, duration, complete) {\n                if (defined(args.x) && defined(args.y)) {\n                    var paths = this.renderer[this.pathType + 'Path'](args),\n                        forcedSides = paths.forcedSides;\n                    this.singleSetterForParts('d', null, paths, 'animate', duration, complete);\n                    this.attr({\n                        zIndex: paths.zIndexes.group\n                    });\n                    // If sides that are forced to render changed, recalculate colors.\n                    if (forcedSides !== this.forcedSides) {\n                        this.forcedSides = forcedSides;\n                        if (!this.renderer.styledMode) {\n                            SVGElement3D.cuboid.fillSetter.call(this, this.fill);\n                        }\n                    }\n                }\n                else {\n                    SVGElement.prototype.animate.call(this, args, duration, complete);\n                }\n                return this;\n            },\n            fillSetter: function (fill) {\n                var elem3d = this;\n                elem3d.forcedSides = elem3d.forcedSides || [];\n                elem3d.singleSetterForParts('fill', null, {\n                    front: fill,\n                    // Do not change color if side was forced to render.\n                    top: color(fill).brighten(elem3d.forcedSides.indexOf('top') >= 0 ? 0 : 0.1).get(),\n                    side: color(fill).brighten(elem3d.forcedSides.indexOf('side') >= 0 ? 0 : -0.1).get()\n                });\n                // fill for animation getter (#6776)\n                elem3d.color = elem3d.fill = fill;\n                return elem3d;\n            }\n        });\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return SVGElement3D;\n    });\n    _registerModule(_modules, 'Core/Renderer/SVG/SVGRenderer3D.js', [_modules['Core/Animation/AnimationUtilities.js'], _modules['Core/Color/Color.js'], _modules['Core/Globals.js'], _modules['Core/Math3D.js'], _modules['Core/Renderer/SVG/SVGElement.js'], _modules['Core/Renderer/SVG/SVGElement3D.js'], _modules['Core/Renderer/SVG/SVGRenderer.js'], _modules['Core/Utilities.js']], function (A, Color, H, Math3D, SVGElement, SVGElement3D, SVGRenderer, U) {\n        /* *\n         *\n         *  (c) 2010-2021 Torstein Honsi\n         *\n         *  Extensions to the SVGRenderer class to enable 3D shapes\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var __extends = (this && this.__extends) || (function () {\n                var extendStatics = function (d,\n            b) {\n                    extendStatics = Object.setPrototypeOf ||\n                        ({ __proto__: [] } instanceof Array && function (d,\n            b) { d.__proto__ = b; }) ||\n                        function (d,\n            b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n                return extendStatics(d, b);\n            };\n            return function (d, b) {\n                extendStatics(d, b);\n                function __() { this.constructor = d; }\n                d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n            };\n        })();\n        var animObject = A.animObject;\n        var color = Color.parse;\n        var charts = H.charts,\n            deg2rad = H.deg2rad;\n        var perspective = Math3D.perspective,\n            shapeArea = Math3D.shapeArea;\n        var defined = U.defined,\n            extend = U.extend,\n            merge = U.merge,\n            pick = U.pick;\n        /* *\n         *\n         *  Constants\n         *\n         * */\n        var cos = Math.cos,\n            sin = Math.sin,\n            PI = Math.PI,\n            dFactor = (4 * (Math.sqrt(2) - 1) / 3) / (PI / 2);\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /* eslint-disable valid-jsdoc */\n        /* *\n         *\n         *  Class\n         *\n         * */\n        var SVGRenderer3D = /** @class */ (function (_super) {\n                __extends(SVGRenderer3D, _super);\n            function SVGRenderer3D() {\n                return _super !== null && _super.apply(this, arguments) || this;\n            }\n            /* *\n             *\n             *  Static Functions\n             *\n             * */\n            /** @private */\n            SVGRenderer3D.compose = function (SVGRendererClass) {\n                var svgRendererProto = SVGRendererClass.prototype,\n                    svgRenderer3dProto = SVGRenderer3D.prototype;\n                svgRendererProto.elements3d = SVGElement3D;\n                svgRendererProto.arc3d = svgRenderer3dProto.arc3d;\n                svgRendererProto.arc3dPath = svgRenderer3dProto.arc3dPath;\n                svgRendererProto.cuboid = svgRenderer3dProto.cuboid;\n                svgRendererProto.cuboidPath = svgRenderer3dProto.cuboidPath;\n                svgRendererProto.element3d = svgRenderer3dProto.element3d;\n                svgRendererProto.face3d = svgRenderer3dProto.face3d;\n                svgRendererProto.polyhedron = svgRenderer3dProto.polyhedron;\n                svgRendererProto.toLinePath = svgRenderer3dProto.toLinePath;\n                svgRendererProto.toLineSegments = svgRenderer3dProto.toLineSegments;\n            };\n            /**\n             * Method to construct a curved path. Can 'wrap' around more then 180\n             * degrees.\n             * @private\n             */\n            SVGRenderer3D.curveTo = function (cx, cy, rx, ry, start, end, dx, dy) {\n                var result = [],\n                    arcAngle = end - start;\n                if ((end > start) && (end - start > Math.PI / 2 + 0.0001)) {\n                    result = result.concat(this.curveTo(cx, cy, rx, ry, start, start + (Math.PI / 2), dx, dy));\n                    result = result.concat(this.curveTo(cx, cy, rx, ry, start + (Math.PI / 2), end, dx, dy));\n                    return result;\n                }\n                if ((end < start) && (start - end > Math.PI / 2 + 0.0001)) {\n                    result = result.concat(this.curveTo(cx, cy, rx, ry, start, start - (Math.PI / 2), dx, dy));\n                    result = result.concat(this.curveTo(cx, cy, rx, ry, start - (Math.PI / 2), end, dx, dy));\n                    return result;\n                }\n                return [[\n                        'C',\n                        cx + (rx * Math.cos(start)) -\n                            ((rx * dFactor * arcAngle) * Math.sin(start)) + dx,\n                        cy + (ry * Math.sin(start)) +\n                            ((ry * dFactor * arcAngle) * Math.cos(start)) + dy,\n                        cx + (rx * Math.cos(end)) +\n                            ((rx * dFactor * arcAngle) * Math.sin(end)) + dx,\n                        cy + (ry * Math.sin(end)) -\n                            ((ry * dFactor * arcAngle) * Math.cos(end)) + dy,\n                        cx + (rx * Math.cos(end)) + dx,\n                        cy + (ry * Math.sin(end)) + dy\n                    ]];\n            };\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /** @private */\n            SVGRenderer3D.prototype.toLinePath = function (points, closed) {\n                var result = [];\n                // Put \"L x y\" for each point\n                points.forEach(function (point) {\n                    result.push(['L', point.x, point.y]);\n                });\n                if (points.length) {\n                    // Set the first element to M\n                    result[0][0] = 'M';\n                    // If it is a closed line, add Z\n                    if (closed) {\n                        result.push(['Z']);\n                    }\n                }\n                return result;\n            };\n            /** @private */\n            SVGRenderer3D.prototype.toLineSegments = function (points) {\n                var result = [],\n                    m = true;\n                points.forEach(function (point) {\n                    result.push(m ? ['M', point.x, point.y] : ['L', point.x, point.y]);\n                    m = !m;\n                });\n                return result;\n            };\n            /**\n             * A 3-D Face is defined by it's 3D vertexes, and is only visible if it's\n             * vertexes are counter-clockwise (Back-face culling). It is used as a\n             * polyhedron Element.\n             * @private\n             */\n            SVGRenderer3D.prototype.face3d = function (args) {\n                var renderer = this,\n                    ret = this.createElement('path');\n                ret.vertexes = [];\n                ret.insidePlotArea = false;\n                ret.enabled = true;\n                /* eslint-disable no-invalid-this */\n                ret.attr = function (hash) {\n                    if (typeof hash === 'object' &&\n                        (defined(hash.enabled) ||\n                            defined(hash.vertexes) ||\n                            defined(hash.insidePlotArea))) {\n                        this.enabled = pick(hash.enabled, this.enabled);\n                        this.vertexes = pick(hash.vertexes, this.vertexes);\n                        this.insidePlotArea = pick(hash.insidePlotArea, this.insidePlotArea);\n                        delete hash.enabled;\n                        delete hash.vertexes;\n                        delete hash.insidePlotArea;\n                        var chart = charts[renderer.chartIndex],\n                            vertexes2d = perspective(this.vertexes,\n                            chart,\n                            this.insidePlotArea),\n                            path = renderer.toLinePath(vertexes2d,\n                            true),\n                            area = shapeArea(vertexes2d);\n                        hash.d = path;\n                        hash.visibility = (this.enabled && area > 0) ?\n                            'inherit' : 'hidden';\n                    }\n                    return SVGElement.prototype.attr.apply(this, arguments);\n                };\n                ret.animate = function (params) {\n                    if (typeof params === 'object' &&\n                        (defined(params.enabled) ||\n                            defined(params.vertexes) ||\n                            defined(params.insidePlotArea))) {\n                        this.enabled = pick(params.enabled, this.enabled);\n                        this.vertexes = pick(params.vertexes, this.vertexes);\n                        this.insidePlotArea = pick(params.insidePlotArea, this.insidePlotArea);\n                        delete params.enabled;\n                        delete params.vertexes;\n                        delete params.insidePlotArea;\n                        var chart = charts[renderer.chartIndex],\n                            vertexes2d = perspective(this.vertexes,\n                            chart,\n                            this.insidePlotArea),\n                            path = renderer.toLinePath(vertexes2d,\n                            true),\n                            area = shapeArea(vertexes2d),\n                            visibility = (this.enabled && area > 0) ?\n                                'visible' : 'hidden';\n                        params.d = path;\n                        this.attr('visibility', visibility);\n                    }\n                    return SVGElement.prototype.animate.apply(this, arguments);\n                };\n                /* eslint-enable no-invalid-this */\n                return ret.attr(args);\n            };\n            /**\n             * A Polyhedron is a handy way of defining a group of 3-D faces. It's only\n             * attribute is `faces`, an array of attributes of each one of it's Face3D\n             * instances.\n             * @private\n             */\n            SVGRenderer3D.prototype.polyhedron = function (args) {\n                var renderer = this,\n                    result = this.g(),\n                    destroy = result.destroy;\n                if (!this.styledMode) {\n                    result.attr({\n                        'stroke-linejoin': 'round'\n                    });\n                }\n                result.faces = [];\n                /* eslint-disable no-invalid-this */\n                // destroy all children\n                result.destroy = function () {\n                    for (var i = 0; i < result.faces.length; i++) {\n                        result.faces[i].destroy();\n                    }\n                    return destroy.call(this);\n                };\n                result.attr = function (hash, val, complete, continueAnimation) {\n                    if (typeof hash === 'object' && defined(hash.faces)) {\n                        while (result.faces.length > hash.faces.length) {\n                            result.faces.pop().destroy();\n                        }\n                        while (result.faces.length < hash.faces.length) {\n                            result.faces.push(renderer.face3d().add(result));\n                        }\n                        for (var i = 0; i < hash.faces.length; i++) {\n                            if (renderer.styledMode) {\n                                delete hash.faces[i].fill;\n                            }\n                            result.faces[i].attr(hash.faces[i], null, complete, continueAnimation);\n                        }\n                        delete hash.faces;\n                    }\n                    return SVGElement.prototype.attr.apply(this, arguments);\n                };\n                result.animate = function (params, duration, complete) {\n                    if (params && params.faces) {\n                        while (result.faces.length > params.faces.length) {\n                            result.faces.pop().destroy();\n                        }\n                        while (result.faces.length < params.faces.length) {\n                            result.faces.push(renderer.face3d().add(result));\n                        }\n                        for (var i = 0; i < params.faces.length; i++) {\n                            result.faces[i].animate(params.faces[i], duration, complete);\n                        }\n                        delete params.faces;\n                    }\n                    return SVGElement.prototype.animate.apply(this, arguments);\n                };\n                /* eslint-enable no-invalid-this */\n                return result.attr(args);\n            };\n            /**\n             * return result, generalization\n             * @private\n             * @requires highcharts-3d\n             */\n            SVGRenderer3D.prototype.element3d = function (type, shapeArgs) {\n                // base\n                var ret = this.g();\n                // extend\n                extend(ret, this.elements3d[type]);\n                // init\n                ret.initArgs(shapeArgs);\n                // return\n                return ret;\n            };\n            /**\n             * generelized, so now use simply\n             * @private\n             */\n            SVGRenderer3D.prototype.cuboid = function (shapeArgs) {\n                return this.element3d('cuboid', shapeArgs);\n            };\n            /**\n             * Generates a cuboid path and zIndexes\n             * @private\n             */\n            SVGRenderer3D.prototype.cuboidPath = function (shapeArgs) {\n                var x = shapeArgs.x || 0,\n                    y = shapeArgs.y || 0,\n                    z = shapeArgs.z || 0, \n                    // For side calculation (right/left)\n                    // there is a need for height (and other shapeArgs arguments)\n                    // to be at least 1px\n                    h = shapeArgs.height || 0,\n                    w = shapeArgs.width || 0,\n                    d = shapeArgs.depth || 0,\n                    chart = charts[this.chartIndex],\n                    front,\n                    back,\n                    top,\n                    bottom,\n                    left,\n                    right,\n                    shape,\n                    path1,\n                    path2,\n                    path3,\n                    isFront,\n                    isTop,\n                    isRight,\n                    options3d = chart.options.chart.options3d,\n                    alpha = options3d.alpha, \n                    // Priority for x axis is the biggest,\n                    // because of x direction has biggest influence on zIndex\n                    incrementX = 1000000, \n                    // y axis has the smallest priority in case of our charts\n                    // (needs to be set because of stacking)\n                    incrementY = 10,\n                    incrementZ = 100,\n                    zIndex = 0, \n                    // The 8 corners of the cube\n                    pArr = [{\n                            x: x,\n                            y: y,\n                            z: z\n                        }, {\n                            x: x + w,\n                            y: y,\n                            z: z\n                        }, {\n                            x: x + w,\n                            y: y + h,\n                            z: z\n                        }, {\n                            x: x,\n                            y: y + h,\n                            z: z\n                        }, {\n                            x: x,\n                            y: y + h,\n                            z: z + d\n                        }, {\n                            x: x + w,\n                            y: y + h,\n                            z: z + d\n                        }, {\n                            x: x + w,\n                            y: y,\n                            z: z + d\n                        }, {\n                            x: x,\n                            y: y,\n                            z: z + d\n                        }],\n                    forcedSides = [],\n                    pickShape;\n                // apply perspective\n                pArr = perspective(pArr, chart, shapeArgs.insidePlotArea);\n                /**\n                 * helper method to decide which side is visible\n                 * @private\n                 */\n                function mapSidePath(i) {\n                    // Added support for 0 value in columns, where height is 0\n                    // but the shape is rendered.\n                    // Height is used from 1st to 6th element of pArr\n                    if (h === 0 && i > 1 && i < 6) { // [2, 3, 4, 5]\n                        return {\n                            x: pArr[i].x,\n                            // when height is 0 instead of cuboid we render plane\n                            // so it is needed to add fake 10 height to imitate cuboid\n                            // for side calculation\n                            y: pArr[i].y + 10,\n                            z: pArr[i].z\n                        };\n                    }\n                    // It is needed to calculate dummy sides (front/back) for breaking\n                    // points in case of x and depth values. If column has side,\n                    // it means that x values of front and back side are different.\n                    if (pArr[0].x === pArr[7].x && i >= 4) { // [4, 5, 6, 7]\n                        return {\n                            x: pArr[i].x + 10,\n                            // when height is 0 instead of cuboid we render plane\n                            // so it is needed to add fake 10 height to imitate cuboid\n                            // for side calculation\n                            y: pArr[i].y,\n                            z: pArr[i].z\n                        };\n                    }\n                    // Added dummy depth\n                    if (d === 0 && i < 2 || i > 5) { // [0, 1, 6, 7]\n                        return {\n                            x: pArr[i].x,\n                            // when height is 0 instead of cuboid we render plane\n                            // so it is needed to add fake 10 height to imitate cuboid\n                            // for side calculation\n                            y: pArr[i].y,\n                            z: pArr[i].z + 10\n                        };\n                    }\n                    return pArr[i];\n                }\n                /**\n                 * method creating the final side\n                 * @private\n                 */\n                function mapPath(i) {\n                    return pArr[i];\n                }\n                /**\n                 * First value - path with specific face\n                 * Second  value - added information about side for later calculations.\n                 * Possible second values are 0 for path1, 1 for path2 and -1 for no\n                 * path chosen.\n                 * Third value - string containing information about current side\n                 * of cuboid for forcing side rendering.\n                 * @private\n                 */\n                pickShape = function (verticesIndex1, verticesIndex2, side) {\n                    var ret = [[], -1], \n                        // An array of vertices for cuboid face\n                        face1 = verticesIndex1.map(mapPath),\n                        face2 = verticesIndex2.map(mapPath), \n                        // dummy face is calculated the same way as standard face, but\n                        // if cuboid height is 0 additional height is added so it is\n                        // possible to use this vertices array for visible face\n                        // calculation\n                        dummyFace1 = verticesIndex1.map(mapSidePath),\n                        dummyFace2 = verticesIndex2.map(mapSidePath);\n                    if (shapeArea(face1) < 0) {\n                        ret = [face1, 0];\n                    }\n                    else if (shapeArea(face2) < 0) {\n                        ret = [face2, 1];\n                    }\n                    else if (side) {\n                        forcedSides.push(side);\n                        if (shapeArea(dummyFace1) < 0) {\n                            ret = [face1, 0];\n                        }\n                        else if (shapeArea(dummyFace2) < 0) {\n                            ret = [face2, 1];\n                        }\n                        else {\n                            ret = [face1, 0]; // force side calculation.\n                        }\n                    }\n                    return ret;\n                };\n                // front or back\n                front = [3, 2, 1, 0];\n                back = [7, 6, 5, 4];\n                shape = pickShape(front, back, 'front');\n                path1 = shape[0];\n                isFront = shape[1];\n                // top or bottom\n                top = [1, 6, 7, 0];\n                bottom = [4, 5, 2, 3];\n                shape = pickShape(top, bottom, 'top');\n                path2 = shape[0];\n                isTop = shape[1];\n                // side\n                right = [1, 2, 5, 6];\n                left = [0, 7, 4, 3];\n                shape = pickShape(right, left, 'side');\n                path3 = shape[0];\n                isRight = shape[1];\n                /* New block used for calculating zIndex. It is basing on X, Y and Z\n                position of specific columns. All zIndexes (for X, Y and Z values) are\n                added to the final zIndex, where every value has different priority. The\n                biggest priority is in X and Z directions, the lowest index is for\n                stacked columns (Y direction and the same X and Z positions). Big\n                differences between priorities is made because we need to ensure that\n                even for big changes in Y and Z parameters all columns will be drawn\n                correctly. */\n                if (isRight === 1) {\n                    // It is needed to connect value with current chart width\n                    // for big chart size.\n                    zIndex += incrementX * (chart.plotWidth - x);\n                }\n                else if (!isRight) {\n                    zIndex += incrementX * x;\n                }\n                zIndex += incrementY * (!isTop ||\n                    // Numbers checked empirically\n                    (alpha >= 0 && alpha <= 180 || alpha < 360 && alpha > 357.5) ?\n                    chart.plotHeight - y : 10 + y);\n                if (isFront === 1) {\n                    zIndex += incrementZ * (z);\n                }\n                else if (!isFront) {\n                    zIndex += incrementZ * (1000 - z);\n                }\n                return {\n                    front: this.toLinePath(path1, true),\n                    top: this.toLinePath(path2, true),\n                    side: this.toLinePath(path3, true),\n                    zIndexes: {\n                        group: Math.round(zIndex)\n                    },\n                    forcedSides: forcedSides,\n                    // additional info about zIndexes\n                    isFront: isFront,\n                    isTop: isTop\n                }; // #4774\n            };\n            /** @private */\n            SVGRenderer3D.prototype.arc3d = function (attribs) {\n                var wrapper = this.g(), renderer = wrapper.renderer, customAttribs = ['x', 'y', 'r', 'innerR', 'start', 'end', 'depth'];\n                /**\n                 * Get custom attributes. Don't mutate the original object and return an\n                 * object with only custom attr.\n                 * @private\n                 */\n                function suckOutCustom(params) {\n                    var hasCA = false,\n                        ca = {},\n                        key;\n                    params = merge(params); // Don't mutate the original object\n                    for (key in params) {\n                        if (customAttribs.indexOf(key) !== -1) {\n                            ca[key] = params[key];\n                            delete params[key];\n                            hasCA = true;\n                        }\n                    }\n                    return hasCA ? [ca, params] : false;\n                }\n                attribs = merge(attribs);\n                attribs.alpha = (attribs.alpha || 0) * deg2rad;\n                attribs.beta = (attribs.beta || 0) * deg2rad;\n                // Create the different sub sections of the shape\n                wrapper.top = renderer.path();\n                wrapper.side1 = renderer.path();\n                wrapper.side2 = renderer.path();\n                wrapper.inn = renderer.path();\n                wrapper.out = renderer.path();\n                /* eslint-disable no-invalid-this */\n                // Add all faces\n                wrapper.onAdd = function () {\n                    var parent = wrapper.parentGroup,\n                        className = wrapper.attr('class');\n                    wrapper.top.add(wrapper);\n                    // These faces are added outside the wrapper group because the\n                    // z-index relates to neighbour elements as well\n                    ['out', 'inn', 'side1', 'side2'].forEach(function (face) {\n                        wrapper[face]\n                            .attr({\n                            'class': className + ' highcharts-3d-side'\n                        })\n                            .add(parent);\n                    });\n                };\n                // Cascade to faces\n                ['addClass', 'removeClass'].forEach(function (fn) {\n                    wrapper[fn] = function () {\n                        var args = arguments;\n                        ['top', 'out', 'inn', 'side1', 'side2'].forEach(function (face) {\n                            wrapper[face][fn].apply(wrapper[face], args);\n                        });\n                    };\n                });\n                /**\n                 * Compute the transformed paths and set them to the composite shapes\n                 * @private\n                 */\n                wrapper.setPaths = function (attribs) {\n                    var paths = wrapper.renderer.arc3dPath(attribs),\n                        zIndex = paths.zTop * 100;\n                    wrapper.attribs = attribs;\n                    wrapper.top.attr({ d: paths.top, zIndex: paths.zTop });\n                    wrapper.inn.attr({ d: paths.inn, zIndex: paths.zInn });\n                    wrapper.out.attr({ d: paths.out, zIndex: paths.zOut });\n                    wrapper.side1.attr({ d: paths.side1, zIndex: paths.zSide1 });\n                    wrapper.side2.attr({ d: paths.side2, zIndex: paths.zSide2 });\n                    // show all children\n                    wrapper.zIndex = zIndex;\n                    wrapper.attr({ zIndex: zIndex });\n                    // Set the radial gradient center the first time\n                    if (attribs.center) {\n                        wrapper.top.setRadialReference(attribs.center);\n                        delete attribs.center;\n                    }\n                };\n                wrapper.setPaths(attribs);\n                /**\n                 * Apply the fill to the top and a darker shade to the sides\n                 * @private\n                 */\n                wrapper.fillSetter = function (value) {\n                    var darker = color(value).brighten(-0.1).get();\n                    this.fill = value;\n                    this.side1.attr({ fill: darker });\n                    this.side2.attr({ fill: darker });\n                    this.inn.attr({ fill: darker });\n                    this.out.attr({ fill: darker });\n                    this.top.attr({ fill: value });\n                    return this;\n                };\n                // Apply the same value to all. These properties cascade down to the\n                // children when set to the composite arc3d.\n                ['opacity', 'translateX', 'translateY', 'visibility'].forEach(function (setter) {\n                    wrapper[setter + 'Setter'] = function (value, key) {\n                        wrapper[key] = value;\n                        ['out', 'inn', 'side1', 'side2', 'top'].forEach(function (el) {\n                            wrapper[el].attr(key, value);\n                        });\n                    };\n                });\n                // Override attr to remove shape attributes and use those to set child\n                // paths\n                wrapper.attr = function (params) {\n                    var ca,\n                        paramArr;\n                    if (typeof params === 'object') {\n                        paramArr = suckOutCustom(params);\n                        if (paramArr) {\n                            ca = paramArr[0];\n                            arguments[0] = paramArr[1];\n                            extend(wrapper.attribs, ca);\n                            wrapper.setPaths(wrapper.attribs);\n                        }\n                    }\n                    return SVGElement.prototype.attr.apply(wrapper, arguments);\n                };\n                // Override the animate function by sucking out custom parameters\n                // related to the shapes directly, and update the shapes from the\n                // animation step.\n                wrapper.animate = function (params, animation, complete) {\n                    var paramArr,\n                        from = this.attribs,\n                        to,\n                        anim,\n                        randomProp = ('data-' + Math.random().toString(26).substring(2, 9));\n                    // Attribute-line properties connected to 3D. These shouldn't have\n                    // been in the attribs collection in the first place.\n                    delete params.center;\n                    delete params.z;\n                    delete params.alpha;\n                    delete params.beta;\n                    anim = animObject(pick(animation, this.renderer.globalAnimation));\n                    if (anim.duration) {\n                        paramArr = suckOutCustom(params);\n                        // Params need to have a property in order for the step to run\n                        // (#5765, #7097, #7437)\n                        wrapper[randomProp] = 0;\n                        params[randomProp] = 1;\n                        wrapper[randomProp + 'Setter'] = H.noop;\n                        if (paramArr) {\n                            to = paramArr[0]; // custom attr\n                            anim.step = function (a, fx) {\n                                /**\n                                 * @private\n                                 */\n                                function interpolate(key) {\n                                    return from[key] + (pick(to[key], from[key]) -\n                                        from[key]) * fx.pos;\n                                }\n                                if (fx.prop === randomProp) {\n                                    fx.elem.setPaths(merge(from, {\n                                        x: interpolate('x'),\n                                        y: interpolate('y'),\n                                        r: interpolate('r'),\n                                        innerR: interpolate('innerR'),\n                                        start: interpolate('start'),\n                                        end: interpolate('end'),\n                                        depth: interpolate('depth')\n                                    }));\n                                }\n                            };\n                        }\n                        animation = anim; // Only when duration (#5572)\n                    }\n                    return SVGElement.prototype.animate.call(this, params, animation, complete);\n                };\n                // destroy all children\n                wrapper.destroy = function () {\n                    this.top.destroy();\n                    this.out.destroy();\n                    this.inn.destroy();\n                    this.side1.destroy();\n                    this.side2.destroy();\n                    return SVGElement.prototype.destroy.call(this);\n                };\n                // hide all children\n                wrapper.hide = function () {\n                    this.top.hide();\n                    this.out.hide();\n                    this.inn.hide();\n                    this.side1.hide();\n                    this.side2.hide();\n                };\n                wrapper.show = function (inherit) {\n                    this.top.show(inherit);\n                    this.out.show(inherit);\n                    this.inn.show(inherit);\n                    this.side1.show(inherit);\n                    this.side2.show(inherit);\n                };\n                /* eslint-enable no-invalid-this */\n                return wrapper;\n            };\n            /**\n             * Generate the paths required to draw a 3D arc.\n             * @private\n             */\n            SVGRenderer3D.prototype.arc3dPath = function (shapeArgs) {\n                var cx = shapeArgs.x || 0, // x coordinate of the center\n                    cy = shapeArgs.y || 0, // y coordinate of the center\n                    start = shapeArgs.start || 0, // start angle\n                    end = (shapeArgs.end || 0) - 0.00001, // end angle\n                    r = shapeArgs.r || 0, // radius\n                    ir = shapeArgs.innerR || 0, // inner radius\n                    d = shapeArgs.depth || 0, // depth\n                    alpha = shapeArgs.alpha || 0, // alpha rotation of the chart\n                    beta = shapeArgs.beta || 0; // beta rotation of the chart\n                    // Derived Variables\n                    var cs = Math.cos(start), // cosinus of the start angle\n                    ss = Math.sin(start), // sinus of the start angle\n                    ce = Math.cos(end), // cosinus of the end angle\n                    se = Math.sin(end), // sinus of the end angle\n                    rx = r * Math.cos(beta), // x-radius\n                    ry = r * Math.cos(alpha), // y-radius\n                    irx = ir * Math.cos(beta), // x-radius (inner)\n                    iry = ir * Math.cos(alpha), // y-radius (inner)\n                    dx = d * Math.sin(beta), // distance between top and bottom in x\n                    dy = d * Math.sin(alpha); // distance between top and bottom in y\n                    // TOP\n                    var top = [\n                        ['M',\n                    cx + (rx * cs),\n                    cy + (ry * ss)]\n                    ];\n                top = top.concat(SVGRenderer3D.curveTo(cx, cy, rx, ry, start, end, 0, 0));\n                top.push([\n                    'L', cx + (irx * ce), cy + (iry * se)\n                ]);\n                top = top.concat(SVGRenderer3D.curveTo(cx, cy, irx, iry, end, start, 0, 0));\n                top.push(['Z']);\n                // OUTSIDE\n                var b = (beta > 0 ? Math.PI / 2 : 0),\n                    a = (alpha > 0 ? 0 : Math.PI / 2);\n                var start2 = start > -b ? start : (end > -b ? -b : start),\n                    end2 = end < PI - a ? end : (start < PI - a ? PI - a : end),\n                    midEnd = 2 * PI - a;\n                // When slice goes over bottom middle, need to add both, left and right\n                // outer side. Additionally, when we cross right hand edge, create sharp\n                // edge. Outer shape/wall:\n                //\n                //            -------\n                //          /    ^    \\\n                //    4)   /   /   \\   \\  1)\n                //        /   /     \\   \\\n                //       /   /       \\   \\\n                // (c)=> ====         ==== <=(d)\n                //       \\   \\       /   /\n                //        \\   \\<=(a)/   /\n                //         \\   \\   /   / <=(b)\n                //    3)    \\    v    /  2)\n                //            -------\n                //\n                // (a) - inner side\n                // (b) - outer side\n                // (c) - left edge (sharp)\n                // (d) - right edge (sharp)\n                // 1..n - rendering order for startAngle = 0, when set to e.g 90, order\n                // changes clockwise (1->2, 2->3, n->1) and counterclockwise for\n                // negative startAngle\n                var out = [\n                        ['M',\n                    cx + (rx * cos(start2)),\n                    cy + (ry * sin(start2))]\n                    ];\n                out = out.concat(SVGRenderer3D.curveTo(cx, cy, rx, ry, start2, end2, 0, 0));\n                // When shape is wide, it can cross both, (c) and (d) edges, when using\n                // startAngle\n                if (end > midEnd && start < midEnd) {\n                    // Go to outer side\n                    out.push([\n                        'L', cx + (rx * cos(end2)) + dx, cy + (ry * sin(end2)) + dy\n                    ]);\n                    // Curve to the right edge of the slice (d)\n                    out = out.concat(SVGRenderer3D.curveTo(cx, cy, rx, ry, end2, midEnd, dx, dy));\n                    // Go to the inner side\n                    out.push([\n                        'L', cx + (rx * cos(midEnd)), cy + (ry * sin(midEnd))\n                    ]);\n                    // Curve to the true end of the slice\n                    out = out.concat(SVGRenderer3D.curveTo(cx, cy, rx, ry, midEnd, end, 0, 0));\n                    // Go to the outer side\n                    out.push([\n                        'L', cx + (rx * cos(end)) + dx, cy + (ry * sin(end)) + dy\n                    ]);\n                    // Go back to middle (d)\n                    out = out.concat(SVGRenderer3D.curveTo(cx, cy, rx, ry, end, midEnd, dx, dy));\n                    out.push([\n                        'L', cx + (rx * cos(midEnd)), cy + (ry * sin(midEnd))\n                    ]);\n                    // Go back to the left edge\n                    out = out.concat(SVGRenderer3D.curveTo(cx, cy, rx, ry, midEnd, end2, 0, 0));\n                    // But shape can cross also only (c) edge:\n                }\n                else if (end > PI - a && start < PI - a) {\n                    // Go to outer side\n                    out.push([\n                        'L',\n                        cx + (rx * Math.cos(end2)) + dx,\n                        cy + (ry * Math.sin(end2)) + dy\n                    ]);\n                    // Curve to the true end of the slice\n                    out = out.concat(SVGRenderer3D.curveTo(cx, cy, rx, ry, end2, end, dx, dy));\n                    // Go to the inner side\n                    out.push([\n                        'L', cx + (rx * Math.cos(end)), cy + (ry * Math.sin(end))\n                    ]);\n                    // Go back to the artifical end2\n                    out = out.concat(SVGRenderer3D.curveTo(cx, cy, rx, ry, end, end2, 0, 0));\n                }\n                out.push([\n                    'L',\n                    cx + (rx * Math.cos(end2)) + dx,\n                    cy + (ry * Math.sin(end2)) + dy\n                ]);\n                out = out.concat(SVGRenderer3D.curveTo(cx, cy, rx, ry, end2, start2, dx, dy));\n                out.push(['Z']);\n                // INSIDE\n                var inn = [\n                        ['M',\n                    cx + (irx * cs),\n                    cy + (iry * ss)]\n                    ];\n                inn = inn.concat(SVGRenderer3D.curveTo(cx, cy, irx, iry, start, end, 0, 0));\n                inn.push([\n                    'L',\n                    cx + (irx * Math.cos(end)) + dx,\n                    cy + (iry * Math.sin(end)) + dy\n                ]);\n                inn = inn.concat(SVGRenderer3D.curveTo(cx, cy, irx, iry, end, start, dx, dy));\n                inn.push(['Z']);\n                // SIDES\n                var side1 = [\n                        ['M',\n                    cx + (rx * cs),\n                    cy + (ry * ss)],\n                        ['L',\n                    cx + (rx * cs) + dx,\n                    cy + (ry * ss) + dy],\n                        ['L',\n                    cx + (irx * cs) + dx,\n                    cy + (iry * ss) + dy],\n                        ['L',\n                    cx + (irx * cs),\n                    cy + (iry * ss)],\n                        ['Z']\n                    ];\n                var side2 = [\n                        ['M',\n                    cx + (rx * ce),\n                    cy + (ry * se)],\n                        ['L',\n                    cx + (rx * ce) + dx,\n                    cy + (ry * se) + dy],\n                        ['L',\n                    cx + (irx * ce) + dx,\n                    cy + (iry * se) + dy],\n                        ['L',\n                    cx + (irx * ce),\n                    cy + (iry * se)],\n                        ['Z']\n                    ];\n                // correction for changed position of vanishing point caused by alpha\n                // and beta rotations\n                var angleCorr = Math.atan2(dy, -dx),\n                    angleEnd = Math.abs(end + angleCorr),\n                    angleStart = Math.abs(start + angleCorr),\n                    angleMid = Math.abs((start + end) / 2 + angleCorr);\n                /**\n                 * set to 0-PI range\n                 * @private\n                 */\n                function toZeroPIRange(angle) {\n                    angle = angle % (2 * Math.PI);\n                    if (angle > Math.PI) {\n                        angle = 2 * Math.PI - angle;\n                    }\n                    return angle;\n                }\n                angleEnd = toZeroPIRange(angleEnd);\n                angleStart = toZeroPIRange(angleStart);\n                angleMid = toZeroPIRange(angleMid);\n                // *1e5 is to compensate pInt in zIndexSetter\n                var incPrecision = 1e5,\n                    a1 = angleMid * incPrecision,\n                    a2 = angleStart * incPrecision,\n                    a3 = angleEnd * incPrecision;\n                return {\n                    top: top,\n                    // max angle is PI, so this is always higher\n                    zTop: Math.PI * incPrecision + 1,\n                    out: out,\n                    zOut: Math.max(a1, a2, a3),\n                    inn: inn,\n                    zInn: Math.max(a1, a2, a3),\n                    side1: side1,\n                    // to keep below zOut and zInn in case of same values\n                    zSide1: a3 * 0.99,\n                    side2: side2,\n                    zSide2: a2 * 0.99\n                };\n            };\n            return SVGRenderer3D;\n        }(SVGRenderer));\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return SVGRenderer3D;\n    });\n    _registerModule(_modules, 'Core/Chart/Chart3D.js', [_modules['Core/Color/Color.js'], _modules['Core/Defaults.js'], _modules['Core/Math3D.js'], _modules['Core/Utilities.js']], function (Color, D, Math3D, U) {\n        /* *\n         *\n         *  (c) 2010-2021 Torstein Honsi\n         *\n         *  Extension for 3D charts\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var color = Color.parse;\n        var genericDefaultOptions = D.defaultOptions;\n        var perspective = Math3D.perspective,\n            shapeArea3D = Math3D.shapeArea3D;\n        var addEvent = U.addEvent,\n            isArray = U.isArray,\n            merge = U.merge,\n            pick = U.pick,\n            wrap = U.wrap;\n        var Chart3D;\n        (function (Chart3D) {\n            /* *\n             *\n             *  Interfaces\n             *\n             * */\n            /* *\n             *\n             *  Classes\n             *\n             * */\n            var Composition = /** @class */ (function () {\n                    /* *\n                     *\n                     *  Constructors\n                     *\n                     * */\n                    function Composition(chart) {\n                        this.frame3d = void 0;\n                    this.chart = chart;\n                }\n                /* *\n                 *\n                 *  Functions\n                 *\n                 * */\n                Composition.prototype.get3dFrame = function () {\n                    var chart = this.chart,\n                        options3d = chart.options.chart.options3d,\n                        frameOptions = options3d.frame,\n                        xm = chart.plotLeft,\n                        xp = chart.plotLeft + chart.plotWidth,\n                        ym = chart.plotTop,\n                        yp = chart.plotTop + chart.plotHeight,\n                        zm = 0,\n                        zp = options3d.depth,\n                        faceOrientation = function (vertexes) {\n                            var area = shapeArea3D(vertexes,\n                        chart);\n                        // Give it 0.5 squared-pixel as a margin for rounding errors\n                        if (area > 0.5) {\n                            return 1;\n                        }\n                        if (area < -0.5) {\n                            return -1;\n                        }\n                        return 0;\n                    }, bottomOrientation = faceOrientation([\n                        { x: xm, y: yp, z: zp },\n                        { x: xp, y: yp, z: zp },\n                        { x: xp, y: yp, z: zm },\n                        { x: xm, y: yp, z: zm }\n                    ]), topOrientation = faceOrientation([\n                        { x: xm, y: ym, z: zm },\n                        { x: xp, y: ym, z: zm },\n                        { x: xp, y: ym, z: zp },\n                        { x: xm, y: ym, z: zp }\n                    ]), leftOrientation = faceOrientation([\n                        { x: xm, y: ym, z: zm },\n                        { x: xm, y: ym, z: zp },\n                        { x: xm, y: yp, z: zp },\n                        { x: xm, y: yp, z: zm }\n                    ]), rightOrientation = faceOrientation([\n                        { x: xp, y: ym, z: zp },\n                        { x: xp, y: ym, z: zm },\n                        { x: xp, y: yp, z: zm },\n                        { x: xp, y: yp, z: zp }\n                    ]), frontOrientation = faceOrientation([\n                        { x: xm, y: yp, z: zm },\n                        { x: xp, y: yp, z: zm },\n                        { x: xp, y: ym, z: zm },\n                        { x: xm, y: ym, z: zm }\n                    ]), backOrientation = faceOrientation([\n                        { x: xm, y: ym, z: zp },\n                        { x: xp, y: ym, z: zp },\n                        { x: xp, y: yp, z: zp },\n                        { x: xm, y: yp, z: zp }\n                    ]), defaultShowFront = false, defaultShowBack = true;\n                    var defaultShowBottom = false,\n                        defaultShowTop = false,\n                        defaultShowLeft = false,\n                        defaultShowRight = false;\n                    // The 'default' criteria to visible faces of the frame is looking\n                    // up every axis to decide whenever the left/right//top/bottom sides\n                    // of the frame will be shown\n                    []\n                        .concat(chart.xAxis, chart.yAxis, chart.zAxis)\n                        .forEach(function (axis) {\n                        if (axis) {\n                            if (axis.horiz) {\n                                if (axis.opposite) {\n                                    defaultShowTop = true;\n                                }\n                                else {\n                                    defaultShowBottom = true;\n                                }\n                            }\n                            else {\n                                if (axis.opposite) {\n                                    defaultShowRight = true;\n                                }\n                                else {\n                                    defaultShowLeft = true;\n                                }\n                            }\n                        }\n                    });\n                    var getFaceOptions = function (sources, faceOrientation, defaultVisible) {\n                            var faceAttrs = ['size', 'color', 'visible'], options = {};\n                        for (var i = 0; i < faceAttrs.length; i++) {\n                            var attr = faceAttrs[i];\n                            for (var j = 0; j < sources.length; j++) {\n                                if (typeof sources[j] === 'object') {\n                                    var val = sources[j][attr];\n                                    if (typeof val !== 'undefined' && val !== null) {\n                                        options[attr] = val;\n                                        break;\n                                    }\n                                }\n                            }\n                        }\n                        var isVisible = defaultVisible;\n                        if (options.visible === true || options.visible === false) {\n                            isVisible = options.visible;\n                        }\n                        else if (options.visible === 'auto') {\n                            isVisible = faceOrientation > 0;\n                        }\n                        return {\n                            size: pick(options.size, 1),\n                            color: pick(options.color, 'none'),\n                            frontFacing: faceOrientation > 0,\n                            visible: isVisible\n                        };\n                    };\n                    // docs @TODO: Add all frame options (left, right, top, bottom,\n                    // front, back) to apioptions JSDoc once the new system is up.\n                    var ret = {\n                            axes: {},\n                            // FIXME: Previously, left/right, top/bottom and front/back\n                            // pairs shared size and color.\n                            // For compatibility and consistency sake, when one face have\n                            // size/color/visibility set, the opposite face will default to\n                            // the same values. Also, left/right used to be called 'side',\n                            // so that's also added as a fallback.\n                            bottom: getFaceOptions([frameOptions.bottom,\n                        frameOptions.top,\n                        frameOptions],\n                        bottomOrientation,\n                        defaultShowBottom),\n                            top: getFaceOptions([frameOptions.top,\n                        frameOptions.bottom,\n                        frameOptions],\n                        topOrientation,\n                        defaultShowTop),\n                            left: getFaceOptions([\n                                frameOptions.left,\n                                frameOptions.right,\n                                frameOptions.side,\n                                frameOptions\n                            ],\n                        leftOrientation,\n                        defaultShowLeft),\n                            right: getFaceOptions([\n                                frameOptions.right,\n                                frameOptions.left,\n                                frameOptions.side,\n                                frameOptions\n                            ],\n                        rightOrientation,\n                        defaultShowRight),\n                            back: getFaceOptions([frameOptions.back,\n                        frameOptions.front,\n                        frameOptions],\n                        backOrientation,\n                        defaultShowBack),\n                            front: getFaceOptions([frameOptions.front,\n                        frameOptions.back,\n                        frameOptions],\n                        frontOrientation,\n                        defaultShowFront)\n                        };\n                    // Decide the bast place to put axis title/labels based on the\n                    // visible faces. Ideally, The labels can only be on the edge\n                    // between a visible face and an invisble one. Also, the Y label\n                    // should be one the left-most edge (right-most if opposite).\n                    if (options3d.axisLabelPosition === 'auto') {\n                        var isValidEdge = function (face1,\n                            face2) {\n                                return ((face1.visible !== face2.visible) ||\n                                    (face1.visible &&\n                                        face2.visible &&\n                                        (face1.frontFacing !== face2.frontFacing)));\n                        };\n                        var yEdges = [];\n                        if (isValidEdge(ret.left, ret.front)) {\n                            yEdges.push({\n                                y: (ym + yp) / 2,\n                                x: xm,\n                                z: zm,\n                                xDir: { x: 1, y: 0, z: 0 }\n                            });\n                        }\n                        if (isValidEdge(ret.left, ret.back)) {\n                            yEdges.push({\n                                y: (ym + yp) / 2,\n                                x: xm,\n                                z: zp,\n                                xDir: { x: 0, y: 0, z: -1 }\n                            });\n                        }\n                        if (isValidEdge(ret.right, ret.front)) {\n                            yEdges.push({\n                                y: (ym + yp) / 2,\n                                x: xp,\n                                z: zm,\n                                xDir: { x: 0, y: 0, z: 1 }\n                            });\n                        }\n                        if (isValidEdge(ret.right, ret.back)) {\n                            yEdges.push({\n                                y: (ym + yp) / 2,\n                                x: xp,\n                                z: zp,\n                                xDir: { x: -1, y: 0, z: 0 }\n                            });\n                        }\n                        var xBottomEdges = [];\n                        if (isValidEdge(ret.bottom, ret.front)) {\n                            xBottomEdges.push({\n                                x: (xm + xp) / 2,\n                                y: yp,\n                                z: zm,\n                                xDir: { x: 1, y: 0, z: 0 }\n                            });\n                        }\n                        if (isValidEdge(ret.bottom, ret.back)) {\n                            xBottomEdges.push({\n                                x: (xm + xp) / 2,\n                                y: yp,\n                                z: zp,\n                                xDir: { x: -1, y: 0, z: 0 }\n                            });\n                        }\n                        var xTopEdges = [];\n                        if (isValidEdge(ret.top, ret.front)) {\n                            xTopEdges.push({\n                                x: (xm + xp) / 2,\n                                y: ym,\n                                z: zm,\n                                xDir: { x: 1, y: 0, z: 0 }\n                            });\n                        }\n                        if (isValidEdge(ret.top, ret.back)) {\n                            xTopEdges.push({\n                                x: (xm + xp) / 2,\n                                y: ym,\n                                z: zp,\n                                xDir: { x: -1, y: 0, z: 0 }\n                            });\n                        }\n                        var zBottomEdges = [];\n                        if (isValidEdge(ret.bottom, ret.left)) {\n                            zBottomEdges.push({\n                                z: (zm + zp) / 2,\n                                y: yp,\n                                x: xm,\n                                xDir: { x: 0, y: 0, z: -1 }\n                            });\n                        }\n                        if (isValidEdge(ret.bottom, ret.right)) {\n                            zBottomEdges.push({\n                                z: (zm + zp) / 2,\n                                y: yp,\n                                x: xp,\n                                xDir: { x: 0, y: 0, z: 1 }\n                            });\n                        }\n                        var zTopEdges = [];\n                        if (isValidEdge(ret.top, ret.left)) {\n                            zTopEdges.push({\n                                z: (zm + zp) / 2,\n                                y: ym,\n                                x: xm,\n                                xDir: { x: 0, y: 0, z: -1 }\n                            });\n                        }\n                        if (isValidEdge(ret.top, ret.right)) {\n                            zTopEdges.push({\n                                z: (zm + zp) / 2,\n                                y: ym,\n                                x: xp,\n                                xDir: { x: 0, y: 0, z: 1 }\n                            });\n                        }\n                        var pickEdge = function (edges,\n                            axis,\n                            mult) {\n                                if (edges.length === 0) {\n                                    return null;\n                            }\n                            if (edges.length === 1) {\n                                return edges[0];\n                            }\n                            var projections = perspective(edges,\n                                chart,\n                                false);\n                            var best = 0;\n                            for (var i = 1; i < projections.length; i++) {\n                                if (mult * projections[i][axis] >\n                                    mult * projections[best][axis]) {\n                                    best = i;\n                                }\n                                else if ((mult * projections[i][axis] ===\n                                    mult * projections[best][axis]) &&\n                                    (projections[i].z < projections[best].z)) {\n                                    best = i;\n                                }\n                            }\n                            return edges[best];\n                        };\n                        ret.axes = {\n                            y: {\n                                'left': pickEdge(yEdges, 'x', -1),\n                                'right': pickEdge(yEdges, 'x', +1)\n                            },\n                            x: {\n                                'top': pickEdge(xTopEdges, 'y', -1),\n                                'bottom': pickEdge(xBottomEdges, 'y', +1)\n                            },\n                            z: {\n                                'top': pickEdge(zTopEdges, 'y', -1),\n                                'bottom': pickEdge(zBottomEdges, 'y', +1)\n                            }\n                        };\n                    }\n                    else {\n                        ret.axes = {\n                            y: {\n                                'left': {\n                                    x: xm, z: zm, xDir: { x: 1, y: 0, z: 0 }\n                                },\n                                'right': {\n                                    x: xp, z: zm, xDir: { x: 0, y: 0, z: 1 }\n                                }\n                            },\n                            x: {\n                                'top': {\n                                    y: ym, z: zm, xDir: { x: 1, y: 0, z: 0 }\n                                },\n                                'bottom': {\n                                    y: yp,\n                                    z: zm,\n                                    xDir: { x: 1, y: 0, z: 0 }\n                                }\n                            },\n                            z: {\n                                'top': {\n                                    x: defaultShowLeft ? xp : xm,\n                                    y: ym,\n                                    xDir: defaultShowLeft ?\n                                        { x: 0, y: 0, z: 1 } :\n                                        { x: 0, y: 0, z: -1 }\n                                },\n                                'bottom': {\n                                    x: defaultShowLeft ? xp : xm,\n                                    y: yp,\n                                    xDir: defaultShowLeft ?\n                                        { x: 0, y: 0, z: 1 } :\n                                        { x: 0, y: 0, z: -1 }\n                                }\n                            }\n                        };\n                    }\n                    return ret;\n                };\n                /**\n                 * Calculate scale of the 3D view. That is required to fit chart's 3D\n                 * projection into the actual plotting area. Reported as #4933.\n                 *\n                 * **Note:**\n                 * This function should ideally take the plot values instead of a chart\n                 * object, but since the chart object is needed for perspective it is\n                 * not practical. Possible to make both getScale and perspective more\n                 * logical and also immutable.\n                 *\n                 * @private\n                 * @function getScale\n                 *\n                 * @param {number} depth\n                 * The depth of the chart\n                 *\n                 * @return {number}\n                 * The scale to fit the 3D chart into the plotting area.\n                 *\n                 * @requires highcharts-3d\n                 */\n                Composition.prototype.getScale = function (depth) {\n                    var chart = this.chart,\n                        plotLeft = chart.plotLeft,\n                        plotRight = chart.plotWidth + plotLeft,\n                        plotTop = chart.plotTop,\n                        plotBottom = chart.plotHeight + plotTop,\n                        originX = plotLeft + chart.plotWidth / 2,\n                        originY = plotTop + chart.plotHeight / 2,\n                        bbox3d = {\n                            minX: Number.MAX_VALUE,\n                            maxX: -Number.MAX_VALUE,\n                            minY: Number.MAX_VALUE,\n                            maxY: -Number.MAX_VALUE\n                        };\n                    var corners,\n                        scale = 1;\n                    // Top left corners:\n                    corners = [{\n                            x: plotLeft,\n                            y: plotTop,\n                            z: 0\n                        }, {\n                            x: plotLeft,\n                            y: plotTop,\n                            z: depth\n                        }];\n                    // Top right corners:\n                    [0, 1].forEach(function (i) {\n                        corners.push({\n                            x: plotRight,\n                            y: corners[i].y,\n                            z: corners[i].z\n                        });\n                    });\n                    // All bottom corners:\n                    [0, 1, 2, 3].forEach(function (i) {\n                        corners.push({\n                            x: corners[i].x,\n                            y: plotBottom,\n                            z: corners[i].z\n                        });\n                    });\n                    // Calculate 3D corners:\n                    corners = perspective(corners, chart, false);\n                    // Get bounding box of 3D element:\n                    corners.forEach(function (corner) {\n                        bbox3d.minX = Math.min(bbox3d.minX, corner.x);\n                        bbox3d.maxX = Math.max(bbox3d.maxX, corner.x);\n                        bbox3d.minY = Math.min(bbox3d.minY, corner.y);\n                        bbox3d.maxY = Math.max(bbox3d.maxY, corner.y);\n                    });\n                    // Left edge:\n                    if (plotLeft > bbox3d.minX) {\n                        scale = Math.min(scale, 1 - Math.abs((plotLeft + originX) / (bbox3d.minX + originX)) % 1);\n                    }\n                    // Right edge:\n                    if (plotRight < bbox3d.maxX) {\n                        scale = Math.min(scale, (plotRight - originX) / (bbox3d.maxX - originX));\n                    }\n                    // Top edge:\n                    if (plotTop > bbox3d.minY) {\n                        if (bbox3d.minY < 0) {\n                            scale = Math.min(scale, (plotTop + originY) / (-bbox3d.minY + plotTop + originY));\n                        }\n                        else {\n                            scale = Math.min(scale, 1 - (plotTop + originY) / (bbox3d.minY + originY) % 1);\n                        }\n                    }\n                    // Bottom edge:\n                    if (plotBottom < bbox3d.maxY) {\n                        scale = Math.min(scale, Math.abs((plotBottom - originY) / (bbox3d.maxY - originY)));\n                    }\n                    return scale;\n                };\n                return Composition;\n            }());\n            Chart3D.Composition = Composition;\n            /* *\n             *\n             *  Constants\n             *\n             * */\n            /**\n             * @optionparent\n             * @private\n             */\n            Chart3D.defaultOptions = {\n                chart: {\n                    /**\n                     * Options to render charts in 3 dimensions. This feature requires\n                     * `highcharts-3d.js`, found in the download package or online at\n                     * [code.highcharts.com/highcharts-3d.js](https://code.highcharts.com/highcharts-3d.js).\n                     *\n                     * @since    4.0\n                     * @product  highcharts\n                     * @requires highcharts-3d\n                     */\n                    options3d: {\n                        /**\n                         * Whether to render the chart using the 3D functionality.\n                         *\n                         * @since   4.0\n                         * @product highcharts\n                         */\n                        enabled: false,\n                        /**\n                         * One of the two rotation angles for the chart.\n                         *\n                         * @since   4.0\n                         * @product highcharts\n                         */\n                        alpha: 0,\n                        /**\n                         * One of the two rotation angles for the chart.\n                         *\n                         * @since   4.0\n                         * @product highcharts\n                         */\n                        beta: 0,\n                        /**\n                         * The total depth of the chart.\n                         *\n                         * @since   4.0\n                         * @product highcharts\n                         */\n                        depth: 100,\n                        /**\n                         * Whether the 3d box should automatically adjust to the chart\n                         * plot area.\n                         *\n                         * @since   4.2.4\n                         * @product highcharts\n                         */\n                        fitToPlot: true,\n                        /**\n                         * Defines the distance the viewer is standing in front of the\n                         * chart, this setting is important to calculate the perspective\n                         * effect in column and scatter charts. It is not used for 3D\n                         * pie charts.\n                         *\n                         * @since   4.0\n                         * @product highcharts\n                         */\n                        viewDistance: 25,\n                        /**\n                         * Set it to `\"auto\"` to automatically move the labels to the\n                         * best edge.\n                         *\n                         * @type    {\"auto\"|null}\n                         * @since   5.0.12\n                         * @product highcharts\n                         */\n                        axisLabelPosition: null,\n                        /**\n                         * Provides the option to draw a frame around the charts by\n                         * defining a bottom, front and back panel.\n                         *\n                         * @since    4.0\n                         * @product  highcharts\n                         * @requires highcharts-3d\n                         */\n                        frame: {\n                            /**\n                             * Whether the frames are visible.\n                             */\n                            visible: 'default',\n                            /**\n                             * General pixel thickness for the frame faces.\n                             */\n                            size: 1,\n                            /**\n                             * The bottom of the frame around a 3D chart.\n                             *\n                             * @since    4.0\n                             * @product  highcharts\n                             * @requires highcharts-3d\n                             */\n                            /**\n                             * The color of the panel.\n                             *\n                             * @type      {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n                             * @default   transparent\n                             * @since     4.0\n                             * @product   highcharts\n                             * @apioption chart.options3d.frame.bottom.color\n                             */\n                            /**\n                             * The thickness of the panel.\n                             *\n                             * @type      {number}\n                             * @default   1\n                             * @since     4.0\n                             * @product   highcharts\n                             * @apioption chart.options3d.frame.bottom.size\n                             */\n                            /**\n                             * Whether to display the frame. Possible values are `true`,\n                             * `false`, `\"auto\"` to display only the frames behind the\n                             * data, and `\"default\"` to display faces behind the data\n                             * based on the axis layout, ignoring the point of view.\n                             *\n                             * @sample {highcharts} highcharts/3d/scatter-frame/\n                             *         Auto frames\n                             *\n                             * @type      {boolean|\"default\"|\"auto\"}\n                             * @default   default\n                             * @since     5.0.12\n                             * @product   highcharts\n                             * @apioption chart.options3d.frame.bottom.visible\n                             */\n                            /**\n                             * The bottom of the frame around a 3D chart.\n                             */\n                            bottom: {},\n                            /**\n                             * The top of the frame around a 3D chart.\n                             *\n                             * @extends chart.options3d.frame.bottom\n                             */\n                            top: {},\n                            /**\n                             * The left side of the frame around a 3D chart.\n                             *\n                             * @extends chart.options3d.frame.bottom\n                             */\n                            left: {},\n                            /**\n                             * The right of the frame around a 3D chart.\n                             *\n                             * @extends chart.options3d.frame.bottom\n                             */\n                            right: {},\n                            /**\n                             * The back side of the frame around a 3D chart.\n                             *\n                             * @extends chart.options3d.frame.bottom\n                             */\n                            back: {},\n                            /**\n                             * The front of the frame around a 3D chart.\n                             *\n                             * @extends chart.options3d.frame.bottom\n                             */\n                            front: {}\n                        }\n                    }\n                }\n            };\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /* eslint-disable no-invalid-this, valid-jsdoc */\n            /**\n             * @private\n             */\n            function compose(ChartClass, FxClass) {\n                var chartProto = ChartClass.prototype;\n                var fxProto = FxClass.prototype;\n                /**\n                 * Shorthand to check the is3d flag.\n                 * @private\n                 * @return {boolean}\n                 * Whether it is a 3D chart.\n                 */\n                chartProto.is3d = function () {\n                    return Boolean(this.options.chart.options3d &&\n                        this.options.chart.options3d.enabled); // #4280\n                };\n                chartProto.propsRequireDirtyBox.push('chart.options3d');\n                chartProto.propsRequireUpdateSeries.push('chart.options3d');\n                /**\n                 * Animation setter for matrix property.\n                 * @private\n                 */\n                fxProto.matrixSetter = function () {\n                    var interpolated;\n                    if (this.pos < 1 &&\n                        (isArray(this.start) || isArray(this.end))) {\n                        var start = (this.start ||\n                                [1, 0, 0, 1, 0, 0]),\n                            end = this.end || [1, 0, 0, 1, 0, 0];\n                        interpolated = [];\n                        for (var i = 0; i < 6; i++) {\n                            interpolated.push(this.pos * end[i] + (1 - this.pos) * start[i]);\n                        }\n                    }\n                    else {\n                        interpolated = this.end;\n                    }\n                    this.elem.attr(this.prop, interpolated, null, true);\n                };\n                merge(true, genericDefaultOptions, Chart3D.defaultOptions);\n                addEvent(ChartClass, 'init', onInit);\n                addEvent(ChartClass, 'addSeries', onAddSeries);\n                addEvent(ChartClass, 'afterDrawChartBox', onAfterDrawChartBox);\n                addEvent(ChartClass, 'afterGetContainer', onAfterGetContainer);\n                addEvent(ChartClass, 'afterInit', onAfterInit);\n                addEvent(ChartClass, 'afterSetChartSize', onAfterSetChartSize);\n                addEvent(ChartClass, 'beforeRedraw', onBeforeRedraw);\n                addEvent(ChartClass, 'beforeRender', onBeforeRender);\n                wrap(chartProto, 'isInsidePlot', wrapIsInsidePlot);\n                wrap(chartProto, 'renderSeries', wrapRenderSeries);\n                wrap(chartProto, 'setClassName', wrapSetClassName);\n            }\n            Chart3D.compose = compose;\n            /**\n             * Legacy support for HC < 6 to make 'scatter' series in a 3D chart route to\n             * the real 'scatter3d' series type. (#8407)\n             * @private\n             */\n            function onAddSeries(e) {\n                if (this.is3d()) {\n                    if (e.options.type === 'scatter') {\n                        e.options.type = 'scatter3d';\n                    }\n                }\n            }\n            /**\n             * @private\n             */\n            function onAfterDrawChartBox() {\n                if (this.chart3d &&\n                    this.is3d()) {\n                    var chart = this,\n                        renderer = chart.renderer,\n                        options3d = chart.options.chart.options3d,\n                        frame = chart.chart3d.get3dFrame(),\n                        xm = chart.plotLeft,\n                        xp = chart.plotLeft + chart.plotWidth,\n                        ym = chart.plotTop,\n                        yp = chart.plotTop + chart.plotHeight,\n                        zm = 0,\n                        zp = options3d.depth,\n                        xmm = xm - (frame.left.visible ? frame.left.size : 0),\n                        xpp = xp + (frame.right.visible ? frame.right.size : 0),\n                        ymm = ym - (frame.top.visible ? frame.top.size : 0),\n                        ypp = yp + (frame.bottom.visible ? frame.bottom.size : 0),\n                        zmm = zm - (frame.front.visible ? frame.front.size : 0),\n                        zpp = zp + (frame.back.visible ? frame.back.size : 0),\n                        verb = chart.hasRendered ? 'animate' : 'attr';\n                    chart.chart3d.frame3d = frame;\n                    if (!chart.frameShapes) {\n                        chart.frameShapes = {\n                            bottom: renderer.polyhedron().add(),\n                            top: renderer.polyhedron().add(),\n                            left: renderer.polyhedron().add(),\n                            right: renderer.polyhedron().add(),\n                            back: renderer.polyhedron().add(),\n                            front: renderer.polyhedron().add()\n                        };\n                    }\n                    chart.frameShapes.bottom[verb]({\n                        'class': 'highcharts-3d-frame highcharts-3d-frame-bottom',\n                        zIndex: frame.bottom.frontFacing ? -1000 : 1000,\n                        faces: [{\n                                fill: color(frame.bottom.color).brighten(0.1).get(),\n                                vertexes: [{\n                                        x: xmm,\n                                        y: ypp,\n                                        z: zmm\n                                    }, {\n                                        x: xpp,\n                                        y: ypp,\n                                        z: zmm\n                                    }, {\n                                        x: xpp,\n                                        y: ypp,\n                                        z: zpp\n                                    }, {\n                                        x: xmm,\n                                        y: ypp,\n                                        z: zpp\n                                    }],\n                                enabled: frame.bottom.visible\n                            },\n                            {\n                                fill: color(frame.bottom.color).brighten(0.1).get(),\n                                vertexes: [{\n                                        x: xm,\n                                        y: yp,\n                                        z: zp\n                                    }, {\n                                        x: xp,\n                                        y: yp,\n                                        z: zp\n                                    }, {\n                                        x: xp,\n                                        y: yp,\n                                        z: zm\n                                    }, {\n                                        x: xm,\n                                        y: yp,\n                                        z: zm\n                                    }],\n                                enabled: frame.bottom.visible\n                            },\n                            {\n                                fill: color(frame.bottom.color).brighten(-0.1).get(),\n                                vertexes: [{\n                                        x: xmm,\n                                        y: ypp,\n                                        z: zmm\n                                    }, {\n                                        x: xmm,\n                                        y: ypp,\n                                        z: zpp\n                                    }, {\n                                        x: xm,\n                                        y: yp,\n                                        z: zp\n                                    }, {\n                                        x: xm,\n                                        y: yp,\n                                        z: zm\n                                    }],\n                                enabled: frame.bottom.visible && !frame.left.visible\n                            },\n                            {\n                                fill: color(frame.bottom.color).brighten(-0.1).get(),\n                                vertexes: [{\n                                        x: xpp,\n                                        y: ypp,\n                                        z: zpp\n                                    }, {\n                                        x: xpp,\n                                        y: ypp,\n                                        z: zmm\n                                    }, {\n                                        x: xp,\n                                        y: yp,\n                                        z: zm\n                                    }, {\n                                        x: xp,\n                                        y: yp,\n                                        z: zp\n                                    }],\n                                enabled: frame.bottom.visible && !frame.right.visible\n                            },\n                            {\n                                fill: color(frame.bottom.color).get(),\n                                vertexes: [{\n                                        x: xpp,\n                                        y: ypp,\n                                        z: zmm\n                                    }, {\n                                        x: xmm,\n                                        y: ypp,\n                                        z: zmm\n                                    }, {\n                                        x: xm,\n                                        y: yp,\n                                        z: zm\n                                    }, {\n                                        x: xp,\n                                        y: yp,\n                                        z: zm\n                                    }],\n                                enabled: frame.bottom.visible && !frame.front.visible\n                            },\n                            {\n                                fill: color(frame.bottom.color).get(),\n                                vertexes: [{\n                                        x: xmm,\n                                        y: ypp,\n                                        z: zpp\n                                    }, {\n                                        x: xpp,\n                                        y: ypp,\n                                        z: zpp\n                                    }, {\n                                        x: xp,\n                                        y: yp,\n                                        z: zp\n                                    }, {\n                                        x: xm,\n                                        y: yp,\n                                        z: zp\n                                    }],\n                                enabled: frame.bottom.visible && !frame.back.visible\n                            }]\n                    });\n                    chart.frameShapes.top[verb]({\n                        'class': 'highcharts-3d-frame highcharts-3d-frame-top',\n                        zIndex: frame.top.frontFacing ? -1000 : 1000,\n                        faces: [{\n                                fill: color(frame.top.color).brighten(0.1).get(),\n                                vertexes: [{\n                                        x: xmm,\n                                        y: ymm,\n                                        z: zpp\n                                    }, {\n                                        x: xpp,\n                                        y: ymm,\n                                        z: zpp\n                                    }, {\n                                        x: xpp,\n                                        y: ymm,\n                                        z: zmm\n                                    }, {\n                                        x: xmm,\n                                        y: ymm,\n                                        z: zmm\n                                    }],\n                                enabled: frame.top.visible\n                            },\n                            {\n                                fill: color(frame.top.color).brighten(0.1).get(),\n                                vertexes: [{\n                                        x: xm,\n                                        y: ym,\n                                        z: zm\n                                    }, {\n                                        x: xp,\n                                        y: ym,\n                                        z: zm\n                                    }, {\n                                        x: xp,\n                                        y: ym,\n                                        z: zp\n                                    }, {\n                                        x: xm,\n                                        y: ym,\n                                        z: zp\n                                    }],\n                                enabled: frame.top.visible\n                            },\n                            {\n                                fill: color(frame.top.color).brighten(-0.1).get(),\n                                vertexes: [{\n                                        x: xmm,\n                                        y: ymm,\n                                        z: zpp\n                                    }, {\n                                        x: xmm,\n                                        y: ymm,\n                                        z: zmm\n                                    }, {\n                                        x: xm,\n                                        y: ym,\n                                        z: zm\n                                    }, {\n                                        x: xm,\n                                        y: ym,\n                                        z: zp\n                                    }],\n                                enabled: frame.top.visible && !frame.left.visible\n                            },\n                            {\n                                fill: color(frame.top.color).brighten(-0.1).get(),\n                                vertexes: [{\n                                        x: xpp,\n                                        y: ymm,\n                                        z: zmm\n                                    }, {\n                                        x: xpp,\n                                        y: ymm,\n                                        z: zpp\n                                    }, {\n                                        x: xp,\n                                        y: ym,\n                                        z: zp\n                                    }, {\n                                        x: xp,\n                                        y: ym,\n                                        z: zm\n                                    }],\n                                enabled: frame.top.visible && !frame.right.visible\n                            },\n                            {\n                                fill: color(frame.top.color).get(),\n                                vertexes: [{\n                                        x: xmm,\n                                        y: ymm,\n                                        z: zmm\n                                    }, {\n                                        x: xpp,\n                                        y: ymm,\n                                        z: zmm\n                                    }, {\n                                        x: xp,\n                                        y: ym,\n                                        z: zm\n                                    }, {\n                                        x: xm,\n                                        y: ym,\n                                        z: zm\n                                    }],\n                                enabled: frame.top.visible && !frame.front.visible\n                            },\n                            {\n                                fill: color(frame.top.color).get(),\n                                vertexes: [{\n                                        x: xpp,\n                                        y: ymm,\n                                        z: zpp\n                                    }, {\n                                        x: xmm,\n                                        y: ymm,\n                                        z: zpp\n                                    }, {\n                                        x: xm,\n                                        y: ym,\n                                        z: zp\n                                    }, {\n                                        x: xp,\n                                        y: ym,\n                                        z: zp\n                                    }],\n                                enabled: frame.top.visible && !frame.back.visible\n                            }]\n                    });\n                    chart.frameShapes.left[verb]({\n                        'class': 'highcharts-3d-frame highcharts-3d-frame-left',\n                        zIndex: frame.left.frontFacing ? -1000 : 1000,\n                        faces: [{\n                                fill: color(frame.left.color).brighten(0.1).get(),\n                                vertexes: [{\n                                        x: xmm,\n                                        y: ypp,\n                                        z: zmm\n                                    }, {\n                                        x: xm,\n                                        y: yp,\n                                        z: zm\n                                    }, {\n                                        x: xm,\n                                        y: yp,\n                                        z: zp\n                                    }, {\n                                        x: xmm,\n                                        y: ypp,\n                                        z: zpp\n                                    }],\n                                enabled: frame.left.visible && !frame.bottom.visible\n                            },\n                            {\n                                fill: color(frame.left.color).brighten(0.1).get(),\n                                vertexes: [{\n                                        x: xmm,\n                                        y: ymm,\n                                        z: zpp\n                                    }, {\n                                        x: xm,\n                                        y: ym,\n                                        z: zp\n                                    }, {\n                                        x: xm,\n                                        y: ym,\n                                        z: zm\n                                    }, {\n                                        x: xmm,\n                                        y: ymm,\n                                        z: zmm\n                                    }],\n                                enabled: frame.left.visible && !frame.top.visible\n                            },\n                            {\n                                fill: color(frame.left.color).brighten(-0.1).get(),\n                                vertexes: [{\n                                        x: xmm,\n                                        y: ypp,\n                                        z: zpp\n                                    }, {\n                                        x: xmm,\n                                        y: ymm,\n                                        z: zpp\n                                    }, {\n                                        x: xmm,\n                                        y: ymm,\n                                        z: zmm\n                                    }, {\n                                        x: xmm,\n                                        y: ypp,\n                                        z: zmm\n                                    }],\n                                enabled: frame.left.visible\n                            },\n                            {\n                                fill: color(frame.left.color).brighten(-0.1).get(),\n                                vertexes: [{\n                                        x: xm,\n                                        y: ym,\n                                        z: zp\n                                    }, {\n                                        x: xm,\n                                        y: yp,\n                                        z: zp\n                                    }, {\n                                        x: xm,\n                                        y: yp,\n                                        z: zm\n                                    }, {\n                                        x: xm,\n                                        y: ym,\n                                        z: zm\n                                    }],\n                                enabled: frame.left.visible\n                            },\n                            {\n                                fill: color(frame.left.color).get(),\n                                vertexes: [{\n                                        x: xmm,\n                                        y: ypp,\n                                        z: zmm\n                                    }, {\n                                        x: xmm,\n                                        y: ymm,\n                                        z: zmm\n                                    }, {\n                                        x: xm,\n                                        y: ym,\n                                        z: zm\n                                    }, {\n                                        x: xm,\n                                        y: yp,\n                                        z: zm\n                                    }],\n                                enabled: frame.left.visible && !frame.front.visible\n                            },\n                            {\n                                fill: color(frame.left.color).get(),\n                                vertexes: [{\n                                        x: xmm,\n                                        y: ymm,\n                                        z: zpp\n                                    }, {\n                                        x: xmm,\n                                        y: ypp,\n                                        z: zpp\n                                    }, {\n                                        x: xm,\n                                        y: yp,\n                                        z: zp\n                                    }, {\n                                        x: xm,\n                                        y: ym,\n                                        z: zp\n                                    }],\n                                enabled: frame.left.visible && !frame.back.visible\n                            }]\n                    });\n                    chart.frameShapes.right[verb]({\n                        'class': 'highcharts-3d-frame highcharts-3d-frame-right',\n                        zIndex: frame.right.frontFacing ? -1000 : 1000,\n                        faces: [{\n                                fill: color(frame.right.color).brighten(0.1).get(),\n                                vertexes: [{\n                                        x: xpp,\n                                        y: ypp,\n                                        z: zpp\n                                    }, {\n                                        x: xp,\n                                        y: yp,\n                                        z: zp\n                                    }, {\n                                        x: xp,\n                                        y: yp,\n                                        z: zm\n                                    }, {\n                                        x: xpp,\n                                        y: ypp,\n                                        z: zmm\n                                    }],\n                                enabled: frame.right.visible && !frame.bottom.visible\n                            },\n                            {\n                                fill: color(frame.right.color).brighten(0.1).get(),\n                                vertexes: [{\n                                        x: xpp,\n                                        y: ymm,\n                                        z: zmm\n                                    }, {\n                                        x: xp,\n                                        y: ym,\n                                        z: zm\n                                    }, {\n                                        x: xp,\n                                        y: ym,\n                                        z: zp\n                                    }, {\n                                        x: xpp,\n                                        y: ymm,\n                                        z: zpp\n                                    }],\n                                enabled: frame.right.visible && !frame.top.visible\n                            },\n                            {\n                                fill: color(frame.right.color).brighten(-0.1).get(),\n                                vertexes: [{\n                                        x: xp,\n                                        y: ym,\n                                        z: zm\n                                    }, {\n                                        x: xp,\n                                        y: yp,\n                                        z: zm\n                                    }, {\n                                        x: xp,\n                                        y: yp,\n                                        z: zp\n                                    }, {\n                                        x: xp,\n                                        y: ym,\n                                        z: zp\n                                    }],\n                                enabled: frame.right.visible\n                            },\n                            {\n                                fill: color(frame.right.color).brighten(-0.1).get(),\n                                vertexes: [{\n                                        x: xpp,\n                                        y: ypp,\n                                        z: zmm\n                                    }, {\n                                        x: xpp,\n                                        y: ymm,\n                                        z: zmm\n                                    }, {\n                                        x: xpp,\n                                        y: ymm,\n                                        z: zpp\n                                    }, {\n                                        x: xpp,\n                                        y: ypp,\n                                        z: zpp\n                                    }],\n                                enabled: frame.right.visible\n                            },\n                            {\n                                fill: color(frame.right.color).get(),\n                                vertexes: [{\n                                        x: xpp,\n                                        y: ymm,\n                                        z: zmm\n                                    }, {\n                                        x: xpp,\n                                        y: ypp,\n                                        z: zmm\n                                    }, {\n                                        x: xp,\n                                        y: yp,\n                                        z: zm\n                                    }, {\n                                        x: xp,\n                                        y: ym,\n                                        z: zm\n                                    }],\n                                enabled: frame.right.visible && !frame.front.visible\n                            },\n                            {\n                                fill: color(frame.right.color).get(),\n                                vertexes: [{\n                                        x: xpp,\n                                        y: ypp,\n                                        z: zpp\n                                    }, {\n                                        x: xpp,\n                                        y: ymm,\n                                        z: zpp\n                                    }, {\n                                        x: xp,\n                                        y: ym,\n                                        z: zp\n                                    }, {\n                                        x: xp,\n                                        y: yp,\n                                        z: zp\n                                    }],\n                                enabled: frame.right.visible && !frame.back.visible\n                            }]\n                    });\n                    chart.frameShapes.back[verb]({\n                        'class': 'highcharts-3d-frame highcharts-3d-frame-back',\n                        zIndex: frame.back.frontFacing ? -1000 : 1000,\n                        faces: [{\n                                fill: color(frame.back.color).brighten(0.1).get(),\n                                vertexes: [{\n                                        x: xpp,\n                                        y: ypp,\n                                        z: zpp\n                                    }, {\n                                        x: xmm,\n                                        y: ypp,\n                                        z: zpp\n                                    }, {\n                                        x: xm,\n                                        y: yp,\n                                        z: zp\n                                    }, {\n                                        x: xp,\n                                        y: yp,\n                                        z: zp\n                                    }],\n                                enabled: frame.back.visible && !frame.bottom.visible\n                            },\n                            {\n                                fill: color(frame.back.color).brighten(0.1).get(),\n                                vertexes: [{\n                                        x: xmm,\n                                        y: ymm,\n                                        z: zpp\n                                    }, {\n                                        x: xpp,\n                                        y: ymm,\n                                        z: zpp\n                                    }, {\n                                        x: xp,\n                                        y: ym,\n                                        z: zp\n                                    }, {\n                                        x: xm,\n                                        y: ym,\n                                        z: zp\n                                    }],\n                                enabled: frame.back.visible && !frame.top.visible\n                            },\n                            {\n                                fill: color(frame.back.color).brighten(-0.1).get(),\n                                vertexes: [{\n                                        x: xmm,\n                                        y: ypp,\n                                        z: zpp\n                                    }, {\n                                        x: xmm,\n                                        y: ymm,\n                                        z: zpp\n                                    }, {\n                                        x: xm,\n                                        y: ym,\n                                        z: zp\n                                    }, {\n                                        x: xm,\n                                        y: yp,\n                                        z: zp\n                                    }],\n                                enabled: frame.back.visible && !frame.left.visible\n                            },\n                            {\n                                fill: color(frame.back.color).brighten(-0.1).get(),\n                                vertexes: [{\n                                        x: xpp,\n                                        y: ymm,\n                                        z: zpp\n                                    }, {\n                                        x: xpp,\n                                        y: ypp,\n                                        z: zpp\n                                    }, {\n                                        x: xp,\n                                        y: yp,\n                                        z: zp\n                                    }, {\n                                        x: xp,\n                                        y: ym,\n                                        z: zp\n                                    }],\n                                enabled: frame.back.visible && !frame.right.visible\n                            },\n                            {\n                                fill: color(frame.back.color).get(),\n                                vertexes: [{\n                                        x: xm,\n                                        y: ym,\n                                        z: zp\n                                    }, {\n                                        x: xp,\n                                        y: ym,\n                                        z: zp\n                                    }, {\n                                        x: xp,\n                                        y: yp,\n                                        z: zp\n                                    }, {\n                                        x: xm,\n                                        y: yp,\n                                        z: zp\n                                    }],\n                                enabled: frame.back.visible\n                            },\n                            {\n                                fill: color(frame.back.color).get(),\n                                vertexes: [{\n                                        x: xmm,\n                                        y: ypp,\n                                        z: zpp\n                                    }, {\n                                        x: xpp,\n                                        y: ypp,\n                                        z: zpp\n                                    }, {\n                                        x: xpp,\n                                        y: ymm,\n                                        z: zpp\n                                    }, {\n                                        x: xmm,\n                                        y: ymm,\n                                        z: zpp\n                                    }],\n                                enabled: frame.back.visible\n                            }]\n                    });\n                    chart.frameShapes.front[verb]({\n                        'class': 'highcharts-3d-frame highcharts-3d-frame-front',\n                        zIndex: frame.front.frontFacing ? -1000 : 1000,\n                        faces: [{\n                                fill: color(frame.front.color).brighten(0.1).get(),\n                                vertexes: [{\n                                        x: xmm,\n                                        y: ypp,\n                                        z: zmm\n                                    }, {\n                                        x: xpp,\n                                        y: ypp,\n                                        z: zmm\n                                    }, {\n                                        x: xp,\n                                        y: yp,\n                                        z: zm\n                                    }, {\n                                        x: xm,\n                                        y: yp,\n                                        z: zm\n                                    }],\n                                enabled: frame.front.visible && !frame.bottom.visible\n                            },\n                            {\n                                fill: color(frame.front.color).brighten(0.1).get(),\n                                vertexes: [{\n                                        x: xpp,\n                                        y: ymm,\n                                        z: zmm\n                                    }, {\n                                        x: xmm,\n                                        y: ymm,\n                                        z: zmm\n                                    }, {\n                                        x: xm,\n                                        y: ym,\n                                        z: zm\n                                    }, {\n                                        x: xp,\n                                        y: ym,\n                                        z: zm\n                                    }],\n                                enabled: frame.front.visible && !frame.top.visible\n                            },\n                            {\n                                fill: color(frame.front.color).brighten(-0.1).get(),\n                                vertexes: [{\n                                        x: xmm,\n                                        y: ymm,\n                                        z: zmm\n                                    }, {\n                                        x: xmm,\n                                        y: ypp,\n                                        z: zmm\n                                    }, {\n                                        x: xm,\n                                        y: yp,\n                                        z: zm\n                                    }, {\n                                        x: xm,\n                                        y: ym,\n                                        z: zm\n                                    }],\n                                enabled: frame.front.visible && !frame.left.visible\n                            },\n                            {\n                                fill: color(frame.front.color).brighten(-0.1).get(),\n                                vertexes: [{\n                                        x: xpp,\n                                        y: ypp,\n                                        z: zmm\n                                    }, {\n                                        x: xpp,\n                                        y: ymm,\n                                        z: zmm\n                                    }, {\n                                        x: xp,\n                                        y: ym,\n                                        z: zm\n                                    }, {\n                                        x: xp,\n                                        y: yp,\n                                        z: zm\n                                    }],\n                                enabled: frame.front.visible && !frame.right.visible\n                            },\n                            {\n                                fill: color(frame.front.color).get(),\n                                vertexes: [{\n                                        x: xp,\n                                        y: ym,\n                                        z: zm\n                                    }, {\n                                        x: xm,\n                                        y: ym,\n                                        z: zm\n                                    }, {\n                                        x: xm,\n                                        y: yp,\n                                        z: zm\n                                    }, {\n                                        x: xp,\n                                        y: yp,\n                                        z: zm\n                                    }],\n                                enabled: frame.front.visible\n                            },\n                            {\n                                fill: color(frame.front.color).get(),\n                                vertexes: [{\n                                        x: xpp,\n                                        y: ypp,\n                                        z: zmm\n                                    }, {\n                                        x: xmm,\n                                        y: ypp,\n                                        z: zmm\n                                    }, {\n                                        x: xmm,\n                                        y: ymm,\n                                        z: zmm\n                                    }, {\n                                        x: xpp,\n                                        y: ymm,\n                                        z: zmm\n                                    }],\n                                enabled: frame.front.visible\n                            }]\n                    });\n                }\n            }\n            /**\n             * Add the required CSS classes for column sides (#6018)\n             * @private\n             */\n            function onAfterGetContainer() {\n                if (this.styledMode) {\n                    // Add definitions used by brighter and darker faces of the cuboids.\n                    [{\n                            name: 'darker',\n                            slope: 0.6\n                        }, {\n                            name: 'brighter',\n                            slope: 1.4\n                        }].forEach(function (cfg) {\n                        this.renderer.definition({\n                            tagName: 'filter',\n                            attributes: {\n                                id: 'highcharts-' + cfg.name\n                            },\n                            children: [{\n                                    tagName: 'feComponentTransfer',\n                                    children: [{\n                                            tagName: 'feFuncR',\n                                            attributes: {\n                                                type: 'linear',\n                                                slope: cfg.slope\n                                            }\n                                        }, {\n                                            tagName: 'feFuncG',\n                                            attributes: {\n                                                type: 'linear',\n                                                slope: cfg.slope\n                                            }\n                                        }, {\n                                            tagName: 'feFuncB',\n                                            attributes: {\n                                                type: 'linear',\n                                                slope: cfg.slope\n                                            }\n                                        }]\n                                }]\n                        });\n                    }, this);\n                }\n            }\n            /**\n             * Legacy support for HC < 6 to make 'scatter' series in a 3D chart route to\n             * the real 'scatter3d' series type. (#8407)\n             * @private\n             */\n            function onAfterInit() {\n                var options = this.options;\n                if (this.is3d()) {\n                    (options.series || []).forEach(function (s) {\n                        var type = (s.type ||\n                                options.chart.type ||\n                                options.chart.defaultSeriesType);\n                        if (type === 'scatter') {\n                            s.type = 'scatter3d';\n                        }\n                    });\n                }\n            }\n            /**\n             * @private\n             */\n            function onAfterSetChartSize() {\n                var chart = this,\n                    options3d = chart.options.chart.options3d;\n                if (chart.chart3d &&\n                    chart.is3d()) {\n                    // Add a 0-360 normalisation for alfa and beta angles in 3d graph\n                    if (options3d) {\n                        options3d.alpha = options3d.alpha % 360 +\n                            (options3d.alpha >= 0 ? 0 : 360);\n                        options3d.beta = options3d.beta % 360 +\n                            (options3d.beta >= 0 ? 0 : 360);\n                    }\n                    var inverted = chart.inverted, clipBox = chart.clipBox, margin = chart.margin, x = inverted ? 'y' : 'x', y = inverted ? 'x' : 'y', w = inverted ? 'height' : 'width', h = inverted ? 'width' : 'height';\n                    clipBox[x] = -(margin[3] || 0);\n                    clipBox[y] = -(margin[0] || 0);\n                    clipBox[w] = (chart.chartWidth + (margin[3] || 0) + (margin[1] || 0));\n                    clipBox[h] = (chart.chartHeight + (margin[0] || 0) + (margin[2] || 0));\n                    // Set scale, used later in perspective method():\n                    // getScale uses perspective, so scale3d has to be reset.\n                    chart.scale3d = 1;\n                    if (options3d.fitToPlot === true) {\n                        chart.scale3d = chart.chart3d.getScale(options3d.depth);\n                    }\n                    // Recalculate the 3d frame with every call of setChartSize,\n                    // instead of doing it after every redraw(). It avoids ticks\n                    // and axis title outside of chart.\n                    chart.chart3d.frame3d = chart.chart3d.get3dFrame(); // #7942\n                }\n            }\n            /**\n             * @private\n             */\n            function onBeforeRedraw() {\n                if (this.is3d()) {\n                    // Set to force a redraw of all elements\n                    this.isDirtyBox = true;\n                }\n            }\n            /**\n             * @private\n             */\n            function onBeforeRender() {\n                if (this.chart3d && this.is3d()) {\n                    this.chart3d.frame3d = this.chart3d.get3dFrame();\n                }\n            }\n            /**\n             * @private\n             */\n            function onInit() {\n                if (!this.chart3d) {\n                    this.chart3d = new Composition(this);\n                }\n            }\n            /**\n             * @private\n             */\n            function wrapIsInsidePlot(proceed) {\n                return this.is3d() || proceed.apply(this, [].slice.call(arguments, 1));\n            }\n            /**\n             * Draw the series in the reverse order (#3803, #3917)\n             * @private\n             */\n            function wrapRenderSeries(proceed) {\n                var series,\n                    i = this.series.length;\n                if (this.is3d()) {\n                    while (i--) {\n                        series = this.series[i];\n                        series.translate();\n                        series.render();\n                    }\n                }\n                else {\n                    proceed.call(this);\n                }\n            }\n            /**\n             * @private\n             */\n            function wrapSetClassName(proceed) {\n                proceed.apply(this, [].slice.call(arguments, 1));\n                if (this.is3d()) {\n                    this.container.className += ' highcharts-3d-chart';\n                }\n            }\n        })(Chart3D || (Chart3D = {}));\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API Declarations\n         *\n         * */\n        /**\n         * Note: As of v5.0.12, `frame.left` or `frame.right` should be used instead.\n         *\n         * The side for the frame around a 3D chart.\n         *\n         * @deprecated\n         * @since     4.0\n         * @product   highcharts\n         * @requires  highcharts-3d\n         * @apioption chart.options3d.frame.side\n         */\n        /**\n         * The color of the panel.\n         *\n         * @deprecated\n         * @type      {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n         * @default   transparent\n         * @since     4.0\n         * @product   highcharts\n         * @apioption chart.options3d.frame.side.color\n         */\n        /**\n         * The thickness of the panel.\n         *\n         * @deprecated\n         * @type      {number}\n         * @default   1\n         * @since     4.0\n         * @product   highcharts\n         * @apioption chart.options3d.frame.side.size\n         */\n        ''; // keeps doclets above in JS file\n\n        return Chart3D;\n    });\n    _registerModule(_modules, 'Core/Axis/ZAxis.js', [_modules['Core/Axis/Axis.js'], _modules['Core/Utilities.js']], function (Axis, U) {\n        /* *\n         *\n         *  (c) 2010-2021 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var __extends = (this && this.__extends) || (function () {\n                var extendStatics = function (d,\n            b) {\n                    extendStatics = Object.setPrototypeOf ||\n                        ({ __proto__: [] } instanceof Array && function (d,\n            b) { d.__proto__ = b; }) ||\n                        function (d,\n            b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n                return extendStatics(d, b);\n            };\n            return function (d, b) {\n                extendStatics(d, b);\n                function __() { this.constructor = d; }\n                d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n            };\n        })();\n        var addEvent = U.addEvent,\n            merge = U.merge,\n            pick = U.pick,\n            splat = U.splat;\n        /* *\n         *\n         *  Constants\n         *\n         * */\n        var composedClasses = [];\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /**\n         * @private\n         */\n        function chartAddZAxis(options) {\n            return new ZAxis(this, options);\n        }\n        /**\n         * Get the Z axis in addition to the default X and Y.\n         * @private\n         */\n        function onChartAfterGetAxes() {\n            var _this = this;\n            var zAxisOptions = this.options.zAxis = splat(this.options.zAxis || {});\n            if (!this.is3d()) {\n                return;\n            }\n            this.zAxis = [];\n            zAxisOptions.forEach(function (axisOptions, i) {\n                axisOptions.index = i;\n                // Z-Axis is shown horizontally, so it's kind of a X-Axis\n                axisOptions.isX = true;\n                _this.addZAxis(axisOptions).setScale();\n            });\n        }\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * 3D axis for z coordinates.\n         */\n        var ZAxis = /** @class */ (function (_super) {\n                __extends(ZAxis, _super);\n            /* *\n             *\n             *  Constructor\n             *\n             * */\n            function ZAxis(chart, userOptions) {\n                var _this = _super.call(this,\n                    chart,\n                    userOptions) || this;\n                _this.isZAxis = true;\n                return _this;\n            }\n            /* *\n             *\n             *  Static Properties\n             *\n             * */\n            ZAxis.compose = function (ChartClass) {\n                if (composedClasses.indexOf(ChartClass) === -1) {\n                    composedClasses.push(ChartClass);\n                    addEvent(ChartClass, 'afterGetAxes', onChartAfterGetAxes);\n                    var chartProto = ChartClass.prototype;\n                    chartProto.addZAxis = chartAddZAxis;\n                    chartProto.collectionsWithInit.zAxis = [chartProto.addZAxis];\n                    chartProto.collectionsWithUpdate.push('zAxis');\n                }\n            };\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            ZAxis.prototype.getSeriesExtremes = function () {\n                var _this = this;\n                var chart = this.chart;\n                this.hasVisibleSeries = false;\n                // Reset properties in case we're redrawing (#3353)\n                this.dataMin = this.dataMax = this.ignoreMinPadding = (this.ignoreMaxPadding = void 0);\n                if (this.stacking) {\n                    this.stacking.buildStacks();\n                }\n                // loop through this axis' series\n                this.series.forEach(function (series) {\n                    if (series.visible ||\n                        !chart.options.chart.ignoreHiddenSeries) {\n                        var threshold = series.options.threshold;\n                        _this.hasVisibleSeries = true;\n                        // Validate threshold in logarithmic axes\n                        if (_this.positiveValuesOnly && threshold <= 0) {\n                            threshold = void 0;\n                        }\n                        var zData = series.zData;\n                        if (zData.length) {\n                            _this.dataMin = Math.min(pick(_this.dataMin, zData[0]), Math.min.apply(null, zData));\n                            _this.dataMax = Math.max(pick(_this.dataMax, zData[0]), Math.max.apply(null, zData));\n                        }\n                    }\n                });\n            };\n            /**\n             * @private\n             */\n            ZAxis.prototype.setAxisSize = function () {\n                var chart = this.chart;\n                _super.prototype.setAxisSize.call(this);\n                this.width = this.len = (chart.options.chart.options3d &&\n                    chart.options.chart.options3d.depth) || 0;\n                this.right = chart.chartWidth - this.width - this.left;\n            };\n            /**\n             * @private\n             */\n            ZAxis.prototype.setOptions = function (userOptions) {\n                userOptions = merge({\n                    offset: 0,\n                    lineWidth: 0\n                }, userOptions);\n                // #14793, this used to be set on the prototype\n                this.isZAxis = true;\n                _super.prototype.setOptions.call(this, userOptions);\n                this.coll = 'zAxis';\n            };\n            return ZAxis;\n        }(Axis));\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return ZAxis;\n    });\n    _registerModule(_modules, 'Core/Axis/Axis3DDefaults.js', [], function () {\n        /* *\n         *\n         *  (c) 2010-2021 Torstein Honsi\n         *\n         *  Extenstion for 3d axes\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        /* *\n         *\n         *  Constants\n         *\n         * */\n        /**\n         * @optionparent xAxis\n         */\n        var Axis3DDefaults = {\n                labels: {\n                    /**\n                     * Defines how the labels are be repositioned according to the 3D\n                     * chart orientation.\n                     *\n                     * - `'offset'`: Maintain a fixed horizontal/vertical distance from\n                     *   the tick marks, despite the chart orientation. This is the\n                     *   backwards compatible behavior, and causes skewing of X and Z\n                     *   axes.\n                     *\n                     * - `'chart'`: Preserve 3D position relative to the chart. This\n                     *   looks nice, but hard to read if the text isn't forward-facing.\n                     *\n                     * - `'flap'`: Rotated text along the axis to compensate for the\n                     *   chart orientation. This tries to maintain text as legible as\n                     *   possible on all orientations.\n                     *\n                     * - `'ortho'`: Rotated text along the axis direction so that the\n                     *   labels are orthogonal to the axis. This is very similar to\n                     *   `'flap'`, but prevents skewing the labels (X and Y scaling are\n                     *   still present).\n                     *\n                     * @sample highcharts/3d/skewed-labels/\n                     *         Skewed labels\n                     *\n                     * @since      5.0.15\n                     * @validvalue ['offset', 'chart', 'flap', 'ortho']\n                     * @product    highcharts\n                     * @requires   highcharts-3d\n                     */\n                    position3d: 'offset',\n                    /**\n                     * If enabled, the axis labels will skewed to follow the\n                     * perspective.\n                     *\n                     * This will fix overlapping labels and titles, but texts become\n                     * less legible due to the distortion.\n                     *\n                     * The final appearance depends heavily on `labels.position3d`.\n                     *\n                     * @sample highcharts/3d/skewed-labels/\n                     *         Skewed labels\n                     *\n                     * @since    5.0.15\n                     * @product  highcharts\n                     * @requires highcharts-3d\n                     */\n                    skew3d: false\n                },\n                title: {\n                    /**\n                     * Defines how the title is repositioned according to the 3D chart\n                     * orientation.\n                     *\n                     * - `'offset'`: Maintain a fixed horizontal/vertical distance from\n                     *   the tick marks, despite the chart orientation. This is the\n                     *   backwards compatible behavior, and causes skewing of X and Z\n                     *   axes.\n                     *\n                     * - `'chart'`: Preserve 3D position relative to the chart. This\n                     *   looks nice, but hard to read if the text isn't forward-facing.\n                     *\n                     * - `'flap'`: Rotated text along the axis to compensate for the\n                     *   chart orientation. This tries to maintain text as legible as\n                     *   possible on all orientations.\n                     *\n                     * - `'ortho'`: Rotated text along the axis direction so that the\n                     *   labels are orthogonal to the axis. This is very similar to\n                     *   `'flap'`, but prevents skewing the labels (X and Y scaling are\n                     *   still present).\n                     *\n                     * - `undefined`: Will use the config from `labels.position3d`\n                     *\n                     * @sample highcharts/3d/skewed-labels/\n                     *         Skewed labels\n                     *\n                     * @type     {\"offset\"|\"chart\"|\"flap\"|\"ortho\"|null}\n                     * @since    5.0.15\n                     * @product  highcharts\n                     * @requires highcharts-3d\n                     */\n                    position3d: null,\n                    /**\n                     * If enabled, the axis title will skewed to follow the perspective.\n                     *\n                     * This will fix overlapping labels and titles, but texts become\n                     * less legible due to the distortion.\n                     *\n                     * The final appearance depends heavily on `title.position3d`.\n                     *\n                     * A `null` value will use the config from `labels.skew3d`.\n                     *\n                     * @sample highcharts/3d/skewed-labels/\n                     *         Skewed labels\n                     *\n                     * @type     {boolean|null}\n                     * @since    5.0.15\n                     * @product  highcharts\n                     * @requires highcharts-3d\n                     */\n                    skew3d: null\n                }\n            };\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return Axis3DDefaults;\n    });\n    _registerModule(_modules, 'Core/Axis/Tick3DComposition.js', [_modules['Core/Utilities.js']], function (U) {\n        /* *\n         *\n         *  (c) 2010-2021 Torstein Honsi\n         *\n         *  Extenstion for 3d axes\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var addEvent = U.addEvent,\n            extend = U.extend,\n            wrap = U.wrap;\n        /* *\n         *\n         *  Constants\n         *\n         * */\n        var composedClasses = [];\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /**\n         * @private\n         */\n        function compose(TickClass) {\n            if (composedClasses.indexOf(TickClass) === -1) {\n                composedClasses.push(TickClass);\n                addEvent(TickClass, 'afterGetLabelPosition', onTickAfterGetLabelPosition);\n                wrap(TickClass.prototype, 'getMarkPath', wrapTickGetMarkPath);\n            }\n        }\n        /**\n         * @private\n         */\n        function onTickAfterGetLabelPosition(e) {\n            var axis3D = this.axis.axis3D;\n            if (axis3D) {\n                extend(e.pos, axis3D.fix3dPosition(e.pos));\n            }\n        }\n        /**\n         * @private\n         */\n        function wrapTickGetMarkPath(proceed) {\n            var axis3D = this.axis.axis3D,\n                path = proceed.apply(this,\n                [].slice.call(arguments, 1));\n            if (axis3D) {\n                var start = path[0];\n                var end = path[1];\n                if (start[0] === 'M' && end[0] === 'L') {\n                    var pArr = [\n                            axis3D.fix3dPosition({ x: start[1],\n                        y: start[2],\n                        z: 0 }),\n                            axis3D.fix3dPosition({ x: end[1],\n                        y: end[2],\n                        z: 0 })\n                        ];\n                    return this.axis.chart.renderer.toLineSegments(pArr);\n                }\n            }\n            return path;\n        }\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        var Tick3DAdditions = {\n                compose: compose\n            };\n\n        return Tick3DAdditions;\n    });\n    _registerModule(_modules, 'Core/Axis/Axis3DComposition.js', [_modules['Core/Axis/Axis3DDefaults.js'], _modules['Core/Globals.js'], _modules['Core/Math3D.js'], _modules['Core/Axis/Tick3DComposition.js'], _modules['Core/Utilities.js']], function (Axis3DDefaults, H, Math3D, Tick3D, U) {\n        /* *\n         *\n         *  (c) 2010-2021 Torstein Honsi\n         *\n         *  Extenstion for 3d axes\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var deg2rad = H.deg2rad;\n        var perspective = Math3D.perspective,\n            perspective3D = Math3D.perspective3D,\n            shapeArea = Math3D.shapeArea;\n        var addEvent = U.addEvent,\n            merge = U.merge,\n            pick = U.pick,\n            wrap = U.wrap;\n        /* *\n         *\n         *  Constants\n         *\n         * */\n        var composedClasses = [];\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /**\n         * @private\n         */\n        function onAxisAfterSetOptions() {\n            var axis = this,\n                chart = axis.chart,\n                options = axis.options;\n            if (chart.is3d && chart.is3d() && axis.coll !== 'colorAxis') {\n                options.tickWidth = pick(options.tickWidth, 0);\n                options.gridLineWidth = pick(options.gridLineWidth, 1);\n            }\n        }\n        /**\n         * @private\n         */\n        function onAxisDrawCrosshair(e) {\n            var axis = this;\n            if (axis.chart.is3d() &&\n                axis.coll !== 'colorAxis') {\n                if (e.point) {\n                    e.point.crosshairPos = axis.isXAxis ?\n                        e.point.axisXpos :\n                        axis.len - e.point.axisYpos;\n                }\n            }\n        }\n        /**\n         * @private\n         */\n        function onAxisInit() {\n            var axis = this;\n            if (!axis.axis3D) {\n                axis.axis3D = new Axis3DAdditions(axis);\n            }\n        }\n        /**\n         * Do not draw axislines in 3D.\n         * @private\n         */\n        function wrapAxisGetLinePath(proceed) {\n            var axis = this;\n            // Do not do this if the chart is not 3D\n            if (!axis.chart.is3d() || axis.coll === 'colorAxis') {\n                return proceed.apply(axis, [].slice.call(arguments, 1));\n            }\n            return [];\n        }\n        /**\n         * @private\n         */\n        function wrapAxisGetPlotBandPath(proceed) {\n            // Do not do this if the chart is not 3D\n            if (!this.chart.is3d() || this.coll === 'colorAxis') {\n                return proceed.apply(this, [].slice.call(arguments, 1));\n            }\n            var args = arguments,\n                from = args[1],\n                to = args[2],\n                path = [],\n                fromPath = this.getPlotLinePath({ value: from }),\n                toPath = this.getPlotLinePath({ value: to });\n            if (fromPath && toPath) {\n                for (var i = 0; i < fromPath.length; i += 2) {\n                    var fromStartSeg = fromPath[i],\n                        fromEndSeg = fromPath[i + 1],\n                        toStartSeg = toPath[i],\n                        toEndSeg = toPath[i + 1];\n                    if (fromStartSeg[0] === 'M' &&\n                        fromEndSeg[0] === 'L' &&\n                        toStartSeg[0] === 'M' &&\n                        toEndSeg[0] === 'L') {\n                        path.push(fromStartSeg, fromEndSeg, toEndSeg, \n                        // lineTo instead of moveTo\n                        ['L', toStartSeg[1], toStartSeg[2]], ['Z']);\n                    }\n                }\n            }\n            return path;\n        }\n        /**\n         * @private\n         */\n        function wrapAxisGetPlotLinePath(proceed) {\n            var axis = this,\n                axis3D = axis.axis3D,\n                chart = axis.chart,\n                path = proceed.apply(axis,\n                [].slice.call(arguments, 1));\n            // Do not do this if the chart is not 3D\n            if (axis.coll === 'colorAxis' ||\n                !chart.chart3d ||\n                !chart.is3d()) {\n                return path;\n            }\n            if (path === null) {\n                return path;\n            }\n            var options3d = chart.options.chart.options3d,\n                d = axis.isZAxis ? chart.plotWidth : options3d.depth,\n                frame = chart.chart3d.frame3d,\n                startSegment = path[0],\n                endSegment = path[1];\n            var pArr,\n                pathSegments = [];\n            if (startSegment[0] === 'M' && endSegment[0] === 'L') {\n                pArr = [\n                    axis3D.swapZ({ x: startSegment[1], y: startSegment[2], z: 0 }),\n                    axis3D.swapZ({ x: startSegment[1], y: startSegment[2], z: d }),\n                    axis3D.swapZ({ x: endSegment[1], y: endSegment[2], z: 0 }),\n                    axis3D.swapZ({ x: endSegment[1], y: endSegment[2], z: d })\n                ];\n                if (!this.horiz) { // Y-Axis\n                    if (frame.front.visible) {\n                        pathSegments.push(pArr[0], pArr[2]);\n                    }\n                    if (frame.back.visible) {\n                        pathSegments.push(pArr[1], pArr[3]);\n                    }\n                    if (frame.left.visible) {\n                        pathSegments.push(pArr[0], pArr[1]);\n                    }\n                    if (frame.right.visible) {\n                        pathSegments.push(pArr[2], pArr[3]);\n                    }\n                }\n                else if (this.isZAxis) { // Z-Axis\n                    if (frame.left.visible) {\n                        pathSegments.push(pArr[0], pArr[2]);\n                    }\n                    if (frame.right.visible) {\n                        pathSegments.push(pArr[1], pArr[3]);\n                    }\n                    if (frame.top.visible) {\n                        pathSegments.push(pArr[0], pArr[1]);\n                    }\n                    if (frame.bottom.visible) {\n                        pathSegments.push(pArr[2], pArr[3]);\n                    }\n                }\n                else { // X-Axis\n                    if (frame.front.visible) {\n                        pathSegments.push(pArr[0], pArr[2]);\n                    }\n                    if (frame.back.visible) {\n                        pathSegments.push(pArr[1], pArr[3]);\n                    }\n                    if (frame.top.visible) {\n                        pathSegments.push(pArr[0], pArr[1]);\n                    }\n                    if (frame.bottom.visible) {\n                        pathSegments.push(pArr[2], pArr[3]);\n                    }\n                }\n                pathSegments = perspective(pathSegments, this.chart, false);\n            }\n            return chart.renderer.toLineSegments(pathSegments);\n        }\n        /**\n         * Wrap getSlotWidth function to calculate individual width value for each\n         * slot (#8042).\n         * @private\n         */\n        function wrapAxisGetSlotWidth(proceed, tick) {\n            var axis = this,\n                chart = axis.chart,\n                ticks = axis.ticks,\n                gridGroup = axis.gridGroup;\n            if (axis.categories &&\n                chart.frameShapes &&\n                chart.is3d() &&\n                gridGroup &&\n                tick &&\n                tick.label) {\n                var firstGridLine = (gridGroup.element.childNodes[0].getBBox()),\n                    frame3DLeft = chart.frameShapes.left.getBBox(),\n                    options3d = chart.options.chart.options3d,\n                    origin_1 = {\n                        x: chart.plotWidth / 2,\n                        y: chart.plotHeight / 2,\n                        z: options3d.depth / 2,\n                        vd: (pick(options3d.depth, 1) *\n                            pick(options3d.viewDistance, 0))\n                    },\n                    tickId = tick.pos,\n                    prevTick = ticks[tickId - 1],\n                    nextTick = ticks[tickId + 1];\n                var labelPos = void 0,\n                    prevLabelPos = void 0,\n                    nextLabelPos = void 0;\n                // Check whether the tick is not the first one and previous tick\n                // exists, then calculate position of previous label.\n                if (tickId !== 0 &&\n                    prevTick &&\n                    prevTick.label &&\n                    prevTick.label.xy) {\n                    prevLabelPos = perspective3D({\n                        x: prevTick.label.xy.x,\n                        y: prevTick.label.xy.y,\n                        z: null\n                    }, origin_1, origin_1.vd);\n                }\n                // If next label position is defined, then recalculate its position\n                // basing on the perspective.\n                if (nextTick && nextTick.label && nextTick.label.xy) {\n                    nextLabelPos = perspective3D({\n                        x: nextTick.label.xy.x,\n                        y: nextTick.label.xy.y,\n                        z: null\n                    }, origin_1, origin_1.vd);\n                }\n                labelPos = {\n                    x: tick.label.xy.x,\n                    y: tick.label.xy.y,\n                    z: null\n                };\n                labelPos = perspective3D(labelPos, origin_1, origin_1.vd);\n                // If tick is first one, check whether next label position is\n                // already calculated, then return difference between the first and\n                // the second label. If there is no next label position calculated,\n                // return the difference between the first grid line and left 3d\n                // frame.\n                return Math.abs(prevLabelPos ?\n                    labelPos.x - prevLabelPos.x : nextLabelPos ?\n                    nextLabelPos.x - labelPos.x :\n                    firstGridLine.x - frame3DLeft.x);\n            }\n            return proceed.apply(axis, [].slice.call(arguments, 1));\n        }\n        /**\n         * @private\n         */\n        function wrapAxisGetTitlePosition(proceed) {\n            var pos = proceed.apply(this,\n                [].slice.call(arguments, 1));\n            return this.axis3D ?\n                this.axis3D.fix3dPosition(pos, true) :\n                pos;\n        }\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * Adds 3D support to axes.\n         * @private\n         * @class\n         */\n        var Axis3DAdditions = /** @class */ (function () {\n                /* *\n                 *\n                 *  Constructors\n                 *\n                 * */\n                /**\n                 * @private\n                 */\n                function Axis3DAdditions(axis) {\n                    this.axis = axis;\n            }\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * Extends axis class with 3D support.\n             * @private\n             */\n            Axis3DAdditions.compose = function (AxisClass, TickClass) {\n                Tick3D.compose(TickClass);\n                if (composedClasses.indexOf(AxisClass) === -1) {\n                    composedClasses.push(AxisClass);\n                    merge(true, AxisClass.defaultOptions, Axis3DDefaults);\n                    AxisClass.keepProps.push('axis3D');\n                    addEvent(AxisClass, 'init', onAxisInit);\n                    addEvent(AxisClass, 'afterSetOptions', onAxisAfterSetOptions);\n                    addEvent(AxisClass, 'drawCrosshair', onAxisDrawCrosshair);\n                    var axisProto = AxisClass.prototype;\n                    wrap(axisProto, 'getLinePath', wrapAxisGetLinePath);\n                    wrap(axisProto, 'getPlotBandPath', wrapAxisGetPlotBandPath);\n                    wrap(axisProto, 'getPlotLinePath', wrapAxisGetPlotLinePath);\n                    wrap(axisProto, 'getSlotWidth', wrapAxisGetSlotWidth);\n                    wrap(axisProto, 'getTitlePosition', wrapAxisGetTitlePosition);\n                }\n            };\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * @private\n             * @param {Highcharts.Axis} axis\n             * Related axis.\n             * @param {Highcharts.Position3DObject} pos\n             * Position to fix.\n             * @param {boolean} [isTitle]\n             * Whether this is a title position.\n             * @return {Highcharts.Position3DObject}\n             * Fixed position.\n             */\n            Axis3DAdditions.prototype.fix3dPosition = function (pos, isTitle) {\n                var axis3D = this;\n                var axis = axis3D.axis;\n                var chart = axis.chart;\n                // Do not do this if the chart is not 3D\n                if (axis.coll === 'colorAxis' ||\n                    !chart.chart3d ||\n                    !chart.is3d()) {\n                    return pos;\n                }\n                var alpha = deg2rad * chart.options.chart.options3d.alpha,\n                    beta = deg2rad * chart.options.chart.options3d.beta,\n                    positionMode = pick(isTitle && axis.options.title.position3d,\n                    axis.options.labels.position3d),\n                    skew = pick(isTitle && axis.options.title.skew3d,\n                    axis.options.labels.skew3d),\n                    frame = chart.chart3d.frame3d,\n                    plotLeft = chart.plotLeft,\n                    plotRight = chart.plotWidth + plotLeft,\n                    plotTop = chart.plotTop,\n                    plotBottom = chart.plotHeight + plotTop;\n                var offsetX = 0,\n                    offsetY = 0,\n                    vecX,\n                    vecY = { x: 0,\n                    y: 1,\n                    z: 0 }, \n                    // Indicates that we are labelling an X or Z axis on the \"back\" of\n                    // the chart\n                    reverseFlap = false;\n                pos = axis.axis3D.swapZ({ x: pos.x, y: pos.y, z: 0 });\n                if (axis.isZAxis) { // Z Axis\n                    if (axis.opposite) {\n                        if (frame.axes.z.top === null) {\n                            return {};\n                        }\n                        offsetY = pos.y - plotTop;\n                        pos.x = frame.axes.z.top.x;\n                        pos.y = frame.axes.z.top.y;\n                        vecX = frame.axes.z.top.xDir;\n                        reverseFlap = !frame.top.frontFacing;\n                    }\n                    else {\n                        if (frame.axes.z.bottom === null) {\n                            return {};\n                        }\n                        offsetY = pos.y - plotBottom;\n                        pos.x = frame.axes.z.bottom.x;\n                        pos.y = frame.axes.z.bottom.y;\n                        vecX = frame.axes.z.bottom.xDir;\n                        reverseFlap = !frame.bottom.frontFacing;\n                    }\n                }\n                else if (axis.horiz) { // X Axis\n                    if (axis.opposite) {\n                        if (frame.axes.x.top === null) {\n                            return {};\n                        }\n                        offsetY = pos.y - plotTop;\n                        pos.y = frame.axes.x.top.y;\n                        pos.z = frame.axes.x.top.z;\n                        vecX = frame.axes.x.top.xDir;\n                        reverseFlap = !frame.top.frontFacing;\n                    }\n                    else {\n                        if (frame.axes.x.bottom === null) {\n                            return {};\n                        }\n                        offsetY = pos.y - plotBottom;\n                        pos.y = frame.axes.x.bottom.y;\n                        pos.z = frame.axes.x.bottom.z;\n                        vecX = frame.axes.x.bottom.xDir;\n                        reverseFlap = !frame.bottom.frontFacing;\n                    }\n                }\n                else { // Y Axis\n                    if (axis.opposite) {\n                        if (frame.axes.y.right === null) {\n                            return {};\n                        }\n                        offsetX = pos.x - plotRight;\n                        pos.x = frame.axes.y.right.x;\n                        pos.z = frame.axes.y.right.z;\n                        vecX = frame.axes.y.right.xDir;\n                        // Rotate 90º on opposite edge\n                        vecX = { x: vecX.z, y: vecX.y, z: -vecX.x };\n                    }\n                    else {\n                        if (frame.axes.y.left === null) {\n                            return {};\n                        }\n                        offsetX = pos.x - plotLeft;\n                        pos.x = frame.axes.y.left.x;\n                        pos.z = frame.axes.y.left.z;\n                        vecX = frame.axes.y.left.xDir;\n                    }\n                }\n                if (positionMode === 'chart') {\n                    // Labels preserve their direction relative to the chart\n                    // nothing to do\n                }\n                else if (positionMode === 'flap') {\n                    // Labels are rotated around the axis direction to face the screen\n                    if (!axis.horiz) { // Y Axis\n                        vecX = { x: Math.cos(beta), y: 0, z: Math.sin(beta) };\n                    }\n                    else { // X and Z Axis\n                        var sin = Math.sin(alpha);\n                        var cos = Math.cos(alpha);\n                        if (axis.opposite) {\n                            sin = -sin;\n                        }\n                        if (reverseFlap) {\n                            sin = -sin;\n                        }\n                        vecY = { x: vecX.z * sin, y: cos, z: -vecX.x * sin };\n                    }\n                }\n                else if (positionMode === 'ortho') {\n                    // Labels will be rotated to be ortogonal to the axis\n                    if (!axis.horiz) { // Y Axis\n                        vecX = { x: Math.cos(beta), y: 0, z: Math.sin(beta) };\n                    }\n                    else { // X and Z Axis\n                        var sina = Math.sin(alpha);\n                        var cosa = Math.cos(alpha);\n                        var sinb = Math.sin(beta);\n                        var cosb = Math.cos(beta);\n                        var vecZ = { x: sinb * cosa,\n                            y: -sina,\n                            z: -cosa * cosb };\n                        vecY = {\n                            x: vecX.y * vecZ.z - vecX.z * vecZ.y,\n                            y: vecX.z * vecZ.x - vecX.x * vecZ.z,\n                            z: vecX.x * vecZ.y - vecX.y * vecZ.x\n                        };\n                        var scale = 1 / Math.sqrt(vecY.x * vecY.x + vecY.y * vecY.y + vecY.z * vecY.z);\n                        if (reverseFlap) {\n                            scale = -scale;\n                        }\n                        vecY = {\n                            x: scale * vecY.x, y: scale * vecY.y, z: scale * vecY.z\n                        };\n                    }\n                }\n                else { // positionMode  == 'offset'\n                    // Labels will be skewd to maintain vertical / horizontal offsets\n                    // from axis\n                    if (!axis.horiz) { // Y Axis\n                        vecX = { x: Math.cos(beta), y: 0, z: Math.sin(beta) };\n                    }\n                    else { // X and Z Axis\n                        vecY = {\n                            x: Math.sin(beta) * Math.sin(alpha),\n                            y: Math.cos(alpha),\n                            z: -Math.cos(beta) * Math.sin(alpha)\n                        };\n                    }\n                }\n                pos.x += offsetX * vecX.x + offsetY * vecY.x;\n                pos.y += offsetX * vecX.y + offsetY * vecY.y;\n                pos.z += offsetX * vecX.z + offsetY * vecY.z;\n                var projected = perspective([pos],\n                    axis.chart)[0];\n                if (skew) {\n                    // Check if the label text would be mirrored\n                    var isMirrored = shapeArea(perspective([\n                            pos,\n                            { x: pos.x + vecX.x,\n                        y: pos.y + vecX.y,\n                        z: pos.z + vecX.z },\n                            { x: pos.x + vecY.x,\n                        y: pos.y + vecY.y,\n                        z: pos.z + vecY.z }\n                        ],\n                        axis.chart)) < 0;\n                    if (isMirrored) {\n                        vecX = { x: -vecX.x, y: -vecX.y, z: -vecX.z };\n                    }\n                    var pointsProjected = perspective([\n                            { x: pos.x,\n                        y: pos.y,\n                        z: pos.z },\n                            { x: pos.x + vecX.x,\n                        y: pos.y + vecX.y,\n                        z: pos.z + vecX.z },\n                            { x: pos.x + vecY.x,\n                        y: pos.y + vecY.y,\n                        z: pos.z + vecY.z }\n                        ],\n                        axis.chart);\n                    projected.matrix = [\n                        pointsProjected[1].x - pointsProjected[0].x,\n                        pointsProjected[1].y - pointsProjected[0].y,\n                        pointsProjected[2].x - pointsProjected[0].x,\n                        pointsProjected[2].y - pointsProjected[0].y,\n                        projected.x,\n                        projected.y\n                    ];\n                    projected.matrix[4] -= projected.x * projected.matrix[0] +\n                        projected.y * projected.matrix[2];\n                    projected.matrix[5] -= projected.x * projected.matrix[1] +\n                        projected.y * projected.matrix[3];\n                }\n                return projected;\n            };\n            /**\n             * @private\n             */\n            Axis3DAdditions.prototype.swapZ = function (p, insidePlotArea) {\n                var axis = this.axis;\n                if (axis.isZAxis) {\n                    var plotLeft = insidePlotArea ? 0 : axis.chart.plotLeft;\n                    return {\n                        x: plotLeft + p.z,\n                        y: p.y,\n                        z: p.x - plotLeft\n                    };\n                }\n                return p;\n            };\n            return Axis3DAdditions;\n        }());\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return Axis3DAdditions;\n    });\n    _registerModule(_modules, 'Core/Series/Series3D.js', [_modules['Core/Math3D.js'], _modules['Core/Series/Series.js'], _modules['Core/Utilities.js']], function (Math3D, Series, U) {\n        /* *\n         *\n         *  (c) 2010-2021 Torstein Honsi\n         *\n         *  Extension to the Series object in 3D charts.\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var __extends = (this && this.__extends) || (function () {\n                var extendStatics = function (d,\n            b) {\n                    extendStatics = Object.setPrototypeOf ||\n                        ({ __proto__: [] } instanceof Array && function (d,\n            b) { d.__proto__ = b; }) ||\n                        function (d,\n            b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n                return extendStatics(d, b);\n            };\n            return function (d, b) {\n                extendStatics(d, b);\n                function __() { this.constructor = d; }\n                d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n            };\n        })();\n        var perspective = Math3D.perspective;\n        var addEvent = U.addEvent,\n            extend = U.extend,\n            merge = U.merge,\n            pick = U.pick,\n            isNumber = U.isNumber;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        var Series3D = /** @class */ (function (_super) {\n                __extends(Series3D, _super);\n            function Series3D() {\n                return _super !== null && _super.apply(this, arguments) || this;\n            }\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /* eslint-disable valid-jsdoc */\n            Series3D.prototype.translate = function () {\n                _super.prototype.translate.apply(this, arguments);\n                if (this.chart.is3d()) {\n                    this.translate3dPoints();\n                }\n            };\n            /**\n             * Translate the plotX, plotY properties and add plotZ.\n             * @private\n             */\n            Series3D.prototype.translate3dPoints = function () {\n                var series = this,\n                    seriesOptions = series.options,\n                    chart = series.chart,\n                    zAxis = pick(series.zAxis,\n                    chart.options.zAxis[0]),\n                    rawPoints = [],\n                    rawPoint,\n                    projectedPoints,\n                    projectedPoint,\n                    zValue,\n                    i,\n                    rawPointsX = [],\n                    stack = seriesOptions.stacking ?\n                        (isNumber(seriesOptions.stack) ? seriesOptions.stack : 0) :\n                        series.index || 0;\n                series.zPadding = stack *\n                    (seriesOptions.depth || 0 + (seriesOptions.groupZPadding || 1));\n                for (i = 0; i < series.data.length; i++) {\n                    rawPoint = series.data[i];\n                    if (zAxis && zAxis.translate) {\n                        zValue = zAxis.logarithmic && zAxis.val2lin ?\n                            zAxis.val2lin(rawPoint.z) :\n                            rawPoint.z; // #4562\n                        rawPoint.plotZ = zAxis.translate(zValue);\n                        rawPoint.isInside = rawPoint.isInside ?\n                            (zValue >= zAxis.min &&\n                                zValue <= zAxis.max) :\n                            false;\n                    }\n                    else {\n                        rawPoint.plotZ = series.zPadding;\n                    }\n                    rawPoint.axisXpos = rawPoint.plotX;\n                    rawPoint.axisYpos = rawPoint.plotY;\n                    rawPoint.axisZpos = rawPoint.plotZ;\n                    rawPoints.push({\n                        x: rawPoint.plotX,\n                        y: rawPoint.plotY,\n                        z: rawPoint.plotZ\n                    });\n                    rawPointsX.push(rawPoint.plotX || 0);\n                }\n                series.rawPointsX = rawPointsX;\n                projectedPoints = perspective(rawPoints, chart, true);\n                for (i = 0; i < series.data.length; i++) {\n                    rawPoint = series.data[i];\n                    projectedPoint = projectedPoints[i];\n                    rawPoint.plotX = projectedPoint.x;\n                    rawPoint.plotY = projectedPoint.y;\n                    rawPoint.plotZ = projectedPoint.z;\n                }\n            };\n            /* *\n             *\n             *  Static Properties\n             *\n             * */\n            Series3D.defaultOptions = merge(Series.defaultOptions);\n            return Series3D;\n        }(Series));\n        /* *\n         *\n         *  Compatibility\n         *\n         * */\n        /* eslint-disable no-invalid-this */\n        addEvent(Series, 'afterTranslate', function () {\n            if (this.chart.is3d()) {\n                this.translate3dPoints();\n            }\n        });\n        /* eslint-enable no-invalid-this */\n        extend(Series.prototype, {\n            translate3dPoints: Series3D.prototype.translate3dPoints\n        });\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return Series3D;\n    });\n    _registerModule(_modules, 'Series/Area3D/Area3DSeries.js', [_modules['Core/Math3D.js'], _modules['Core/Series/SeriesRegistry.js'], _modules['Core/Utilities.js']], function (Math3D, SeriesRegistry, U) {\n        /* *\n         *\n         *  (c) 2010-2021 Grzegorz Blachliński\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var perspective = Math3D.perspective;\n        var lineProto = SeriesRegistry.seriesTypes.line.prototype;\n        var pick = U.pick,\n            wrap = U.wrap;\n        /* *\n         *\n         *  Constants\n         *\n         * */\n        var composedClasses = [];\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        function compose(AreaSeriesClass) {\n            if (composedClasses.indexOf(AreaSeriesClass) === -1) {\n                composedClasses.push(AreaSeriesClass);\n                wrap(AreaSeriesClass.prototype, 'getGraphPath', wrapAreaSeriesGetGraphPath);\n            }\n        }\n        function wrapAreaSeriesGetGraphPath(proceed) {\n            var series = this,\n                svgPath = proceed.apply(series,\n                [].slice.call(arguments, 1));\n            // Do not do this if the chart is not 3D\n            if (!series.chart.is3d()) {\n                return svgPath;\n            }\n            var getGraphPath = lineProto.getGraphPath,\n                options = series.options,\n                translatedThreshold = Math.round(// #10909\n                series.yAxis.getThreshold(options.threshold));\n            var bottomPoints = [];\n            if (series.rawPointsX) {\n                for (var i = 0; i < series.points.length; i++) {\n                    bottomPoints.push({\n                        x: series.rawPointsX[i],\n                        y: options.stacking ?\n                            series.points[i].yBottom : translatedThreshold,\n                        z: series.zPadding\n                    });\n                }\n            }\n            var options3d = series.chart.options.chart.options3d;\n            bottomPoints = perspective(bottomPoints, series.chart, true).map(function (point) { return ({ plotX: point.x, plotY: point.y, plotZ: point.z }); });\n            if (series.group && options3d && options3d.depth && options3d.beta) {\n                // Markers should take the global zIndex of series group.\n                if (series.markerGroup) {\n                    series.markerGroup.add(series.group);\n                    series.markerGroup.attr({\n                        translateX: 0,\n                        translateY: 0\n                    });\n                }\n                series.group.attr({\n                    zIndex: Math.max(1, (options3d.beta > 270 || options3d.beta < 90) ?\n                        options3d.depth - Math.round(series.zPadding || 0) :\n                        Math.round(series.zPadding || 0))\n                });\n            }\n            bottomPoints.reversed = true;\n            var bottomPath = getGraphPath.call(series,\n                bottomPoints,\n                true,\n                true);\n            if (bottomPath[0] && bottomPath[0][0] === 'M') {\n                bottomPath[0] = ['L', bottomPath[0][1], bottomPath[0][2]];\n            }\n            if (series.areaPath) {\n                // Remove previously used bottomPath and add the new one.\n                var areaPath = series.areaPath.splice(0,\n                    series.areaPath.length / 2).concat(bottomPath);\n                // Use old xMap in the new areaPath\n                areaPath.xMap = series.areaPath.xMap;\n                series.areaPath = areaPath;\n            }\n            return svgPath;\n        }\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        var Area3DSeries = {\n                compose: compose\n            };\n\n        return Area3DSeries;\n    });\n    _registerModule(_modules, 'Series/Column3D/Column3DComposition.js', [_modules['Series/Column/ColumnSeries.js'], _modules['Core/Globals.js'], _modules['Core/Series/Series.js'], _modules['Core/Math3D.js'], _modules['Core/Series/SeriesRegistry.js'], _modules['Core/Axis/Stacking/StackItem.js'], _modules['Core/Utilities.js']], function (ColumnSeries, H, Series, Math3D, SeriesRegistry, StackItem, U) {\n        /* *\n         *\n         *  (c) 2010-2021 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var columnProto = ColumnSeries.prototype;\n        var svg = H.svg;\n        var perspective = Math3D.perspective;\n        var addEvent = U.addEvent,\n            pick = U.pick,\n            wrap = U.wrap;\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /* eslint-disable no-invalid-this */\n        /**\n         * @private\n         * @param {Highcharts.Chart} chart\n         * Chart with stacks\n         * @param {string} stacking\n         * Stacking option\n         */\n        function retrieveStacks(chart, stacking) {\n            var series = chart.series,\n                stacks = { totalStacks: 0 };\n            var stackNumber,\n                i = 1;\n            series.forEach(function (s) {\n                stackNumber = pick(s.options.stack, (stacking ? 0 : series.length - 1 - s.index)); // #3841, #4532\n                if (!stacks[stackNumber]) {\n                    stacks[stackNumber] = { series: [s], position: i };\n                    i++;\n                }\n                else {\n                    stacks[stackNumber].series.push(s);\n                }\n            });\n            stacks.totalStacks = i + 1;\n            return stacks;\n        }\n        wrap(columnProto, 'translate', function (proceed) {\n            proceed.apply(this, [].slice.call(arguments, 1));\n            // Do not do this if the chart is not 3D\n            if (this.chart.is3d()) {\n                this.translate3dShapes();\n            }\n        });\n        // Don't use justifyDataLabel when point is outsidePlot\n        wrap(Series.prototype, 'justifyDataLabel', function (proceed) {\n            return !(arguments[2].outside3dPlot) ?\n                proceed.apply(this, [].slice.call(arguments, 1)) :\n                false;\n        });\n        columnProto.translate3dPoints = function () { };\n        columnProto.translate3dShapes = function () {\n            var series = this,\n                chart = series.chart,\n                seriesOptions = series.options,\n                depth = seriesOptions.depth,\n                stack = seriesOptions.stacking ?\n                    (seriesOptions.stack || 0) :\n                    series.index, // #4743\n                z = stack * (depth + (seriesOptions.groupZPadding || 1)),\n                borderCrisp = series.borderWidth % 2 ? 0.5 : 0,\n                point2dPos; // Position of point in 2D, used for 3D position calculation\n                if (chart.inverted && !series.yAxis.reversed) {\n                    borderCrisp *= -1;\n            }\n            if (seriesOptions.grouping !== false) {\n                z = 0;\n            }\n            z += (seriesOptions.groupZPadding || 1);\n            series.data.forEach(function (point) {\n                // #7103 Reset outside3dPlot flag\n                point.outside3dPlot = null;\n                if (point.y !== null) {\n                    var shapeArgs_1 = point.shapeArgs, tooltipPos = point.tooltipPos, \n                        // Array for final shapeArgs calculation.\n                        // We are checking two dimensions (x and y).\n                        dimensions = [['x', 'width'], ['y', 'height']], borderlessBase_1; // Crisped rects can have +/- 0.5 pixels offset.\n                        // #3131 We need to check if column is inside plotArea.\n                        dimensions.forEach(function (d) {\n                            borderlessBase_1 = shapeArgs_1[d[0]] - borderCrisp;\n                        if (borderlessBase_1 < 0) {\n                            // If borderLessBase is smaller than 0, it is needed to set\n                            // its value to 0 or 0.5 depending on borderWidth\n                            // borderWidth may be even or odd.\n                            shapeArgs_1[d[1]] +=\n                                shapeArgs_1[d[0]] + borderCrisp;\n                            shapeArgs_1[d[0]] = -borderCrisp;\n                            borderlessBase_1 = 0;\n                        }\n                        if ((borderlessBase_1 + shapeArgs_1[d[1]] >\n                            series[d[0] + 'Axis'].len) &&\n                            // Do not change height/width of column if 0 (#6708)\n                            shapeArgs_1[d[1]] !== 0) {\n                            shapeArgs_1[d[1]] =\n                                series[d[0] + 'Axis'].len -\n                                    shapeArgs_1[d[0]];\n                        }\n                        if (\n                        // Do not remove columns with zero height/width.\n                        (shapeArgs_1[d[1]] !== 0) &&\n                            (shapeArgs_1[d[0]] >=\n                                series[d[0] + 'Axis'].len ||\n                                shapeArgs_1[d[0]] + shapeArgs_1[d[1]] <=\n                                    borderCrisp)) {\n                            // Set args to 0 if column is outside the chart.\n                            for (var key in shapeArgs_1) { // eslint-disable-line guard-for-in\n                                // #13840\n                                shapeArgs_1[key] = key === 'y' ? -9999 : 0;\n                            }\n                            // #7103 outside3dPlot flag is set on Points which are\n                            // currently outside of plot.\n                            point.outside3dPlot = true;\n                        }\n                    });\n                    // Change from 2d to 3d\n                    if (point.shapeType === 'rect') {\n                        point.shapeType = 'cuboid';\n                    }\n                    shapeArgs_1.z = z;\n                    shapeArgs_1.depth = depth;\n                    shapeArgs_1.insidePlotArea = true;\n                    // Point's position in 2D\n                    point2dPos = {\n                        x: shapeArgs_1.x + shapeArgs_1.width / 2,\n                        y: shapeArgs_1.y,\n                        z: z + depth / 2 // The center of column in Z dimension\n                    };\n                    // Recalculate point positions for inverted graphs\n                    if (chart.inverted) {\n                        point2dPos.x = shapeArgs_1.height;\n                        point2dPos.y = point.clientX;\n                    }\n                    // Calculate and store point's position in 3D,\n                    // using perspective method.\n                    point.plot3d = perspective([point2dPos], chart, true, false)[0];\n                    // Translate the tooltip position in 3d space\n                    tooltipPos = perspective([{\n                            x: tooltipPos[0],\n                            y: tooltipPos[1],\n                            z: z + depth / 2 // The center of column in Z dimension\n                        }], chart, true, false)[0];\n                    point.tooltipPos = [tooltipPos.x, tooltipPos.y];\n                }\n            });\n            // store for later use #4067\n            series.z = z;\n        };\n        wrap(columnProto, 'animate', function (proceed) {\n            if (!this.chart.is3d()) {\n                proceed.apply(this, [].slice.call(arguments, 1));\n            }\n            else {\n                var args = arguments,\n                    init = args[1],\n                    yAxis_1 = this.yAxis,\n                    series_1 = this,\n                    reversed_1 = this.yAxis.reversed;\n                if (svg) { // VML is too slow anyway\n                    if (init) {\n                        series_1.data.forEach(function (point) {\n                            if (point.y !== null) {\n                                point.height = point.shapeArgs.height;\n                                point.shapey = point.shapeArgs.y; // #2968\n                                point.shapeArgs.height = 1;\n                                if (!reversed_1) {\n                                    if (point.stackY) {\n                                        point.shapeArgs.y =\n                                            point.plotY +\n                                                yAxis_1.translate(point.stackY);\n                                    }\n                                    else {\n                                        point.shapeArgs.y =\n                                            point.plotY +\n                                                (point.negative ?\n                                                    -point.height :\n                                                    point.height);\n                                    }\n                                }\n                            }\n                        });\n                    }\n                    else { // run the animation\n                        series_1.data.forEach(function (point) {\n                            if (point.y !== null) {\n                                point.shapeArgs.height = point.height;\n                                point.shapeArgs.y = point.shapey; // #2968\n                                // null value do not have a graphic\n                                if (point.graphic) {\n                                    point.graphic[point.outside3dPlot ?\n                                        'attr' :\n                                        'animate'](point.shapeArgs, series_1.options.animation);\n                                }\n                            }\n                        });\n                        // redraw datalabels to the correct position\n                        this.drawDataLabels();\n                    }\n                }\n            }\n        });\n        // In case of 3d columns there is no sense to add this columns to a specific\n        // series group - if series is added to a group all columns will have the same\n        // zIndex in comparison with different series.\n        wrap(columnProto, 'plotGroup', function (proceed, prop, _name, _visibility, _zIndex, parent) {\n            if (prop !== 'dataLabelsGroup') {\n                if (this.chart.is3d()) {\n                    if (this[prop]) {\n                        delete this[prop];\n                    }\n                    if (parent) {\n                        if (!this.chart.columnGroup) {\n                            this.chart.columnGroup =\n                                this.chart.renderer.g('columnGroup').add(parent);\n                        }\n                        this[prop] = this.chart.columnGroup;\n                        this.chart.columnGroup.attr(this.getPlotBox());\n                        this[prop].survive = true;\n                        if (prop === 'group' || prop === 'markerGroup') {\n                            arguments[3] = 'visible';\n                            // For 3D column group and markerGroup should be visible\n                        }\n                    }\n                }\n            }\n            return proceed.apply(this, Array.prototype.slice.call(arguments, 1));\n        });\n        // When series is not added to group it is needed to change setVisible method to\n        // allow correct Legend funcionality. This wrap is basing on pie chart series.\n        wrap(columnProto, 'setVisible', function (proceed, vis) {\n            var series = this;\n            if (series.chart.is3d()) {\n                series.data.forEach(function (point) {\n                    point.visible = point.options.visible = vis =\n                        typeof vis === 'undefined' ?\n                            !pick(series.visible, point.visible) : vis;\n                    series.options.data[series.data.indexOf(point)] =\n                        point.options;\n                    if (point.graphic) {\n                        point.graphic.attr({\n                            visibility: vis ? 'visible' : 'hidden'\n                        });\n                    }\n                });\n            }\n            proceed.apply(this, Array.prototype.slice.call(arguments, 1));\n        });\n        addEvent(ColumnSeries, 'afterInit', function () {\n            if (this.chart.is3d()) {\n                var series = this,\n                    seriesOptions = this.options,\n                    grouping = seriesOptions.grouping,\n                    stacking = seriesOptions.stacking,\n                    reversedStacks = this.yAxis.options.reversedStacks,\n                    z = 0;\n                // @todo grouping === true ?\n                if (!(typeof grouping !== 'undefined' && !grouping)) {\n                    var stacks = retrieveStacks(this.chart,\n                        stacking),\n                        stack = seriesOptions.stack || 0,\n                        i = // position within the stack\n                         void 0; // position within the stack\n                        for (i = 0; i < stacks[stack].series.length; i++) {\n                            if (stacks[stack].series[i] === this) {\n                                break;\n                        }\n                    }\n                    z = (10 * (stacks.totalStacks - stacks[stack].position)) +\n                        (reversedStacks ? i : -i); // #4369\n                    // In case when axis is reversed, columns are also reversed inside\n                    // the group (#3737)\n                    if (!this.xAxis.reversed) {\n                        z = (stacks.totalStacks * 10) - z;\n                    }\n                }\n                seriesOptions.depth = seriesOptions.depth || 25;\n                series.z = series.z || 0;\n                seriesOptions.zIndex = z;\n            }\n        });\n        // eslint-disable-next-line valid-jsdoc\n        /**\n         * @private\n         */\n        function pointAttribs(proceed) {\n            var attr = proceed.apply(this,\n                [].slice.call(arguments, 1));\n            if (this.chart.is3d && this.chart.is3d()) {\n                // Set the fill color to the fill color to provide a smooth edge\n                attr.stroke = this.options.edgeColor || attr.fill;\n                attr['stroke-width'] = pick(this.options.edgeWidth, 1); // #4055\n            }\n            return attr;\n        }\n        // eslint-disable-next-line valid-jsdoc\n        /**\n         * In 3D mode, all column-series are rendered in one main group. Because of that\n         * we need to apply inactive state on all points.\n         * @private\n         */\n        function setState(proceed, state, inherit) {\n            var is3d = this.chart.is3d && this.chart.is3d();\n            if (is3d) {\n                this.options.inactiveOtherPoints = true;\n            }\n            proceed.call(this, state, inherit);\n            if (is3d) {\n                this.options.inactiveOtherPoints = false;\n            }\n        }\n        // eslint-disable-next-line valid-jsdoc\n        /**\n         * In 3D mode, simple checking for a new shape to animate is not enough.\n         * Additionally check if graphic is a group of elements\n         * @private\n         */\n        function hasNewShapeType(proceed) {\n            var args = [];\n            for (var _i = 1; _i < arguments.length; _i++) {\n                args[_i - 1] = arguments[_i];\n            }\n            return this.series.chart.is3d() ?\n                this.graphic && this.graphic.element.nodeName !== 'g' :\n                proceed.apply(this, args);\n        }\n        wrap(columnProto, 'pointAttribs', pointAttribs);\n        wrap(columnProto, 'setState', setState);\n        wrap(columnProto.pointClass.prototype, 'hasNewShapeType', hasNewShapeType);\n        if (SeriesRegistry.seriesTypes.columnRange) {\n            var columnRangeProto = SeriesRegistry.seriesTypes.columnrange.prototype;\n            wrap(columnRangeProto, 'pointAttribs', pointAttribs);\n            wrap(columnRangeProto, 'setState', setState);\n            wrap(columnRangeProto.pointClass.prototype, 'hasNewShapeType', hasNewShapeType);\n            columnRangeProto.plotGroup = columnProto.plotGroup;\n            columnRangeProto.setVisible = columnProto.setVisible;\n        }\n        wrap(Series.prototype, 'alignDataLabel', function (proceed, point, dataLabel, options, alignTo) {\n            var chart = this.chart;\n            // In 3D we need to pass point.outsidePlot option to the justifyDataLabel\n            // method for disabling justifying dataLabels in columns outside plot\n            options.outside3dPlot = point.outside3dPlot;\n            // Only do this for 3D columns and it's derived series\n            if (chart.is3d() &&\n                this.is('column')) {\n                var series = this,\n                    seriesOptions = series.options,\n                    inside = pick(options.inside, !!series.options.stacking),\n                    options3d = chart.options.chart.options3d,\n                    xOffset = point.pointWidth / 2 || 0;\n                var dLPosition = {\n                        x: alignTo.x + xOffset,\n                        y: alignTo.y,\n                        z: series.z + seriesOptions.depth / 2\n                    };\n                if (chart.inverted) {\n                    // Inside dataLabels are positioned according to above\n                    // logic and there is no need to position them using\n                    // non-3D algorighm (that use alignTo.width)\n                    if (inside) {\n                        alignTo.width = 0;\n                        dLPosition.x += point.shapeArgs.height / 2;\n                    }\n                    // When chart is upside down\n                    // (alpha angle between 180 and 360 degrees)\n                    // it is needed to add column width to calculated value.\n                    if (options3d.alpha >= 90 && options3d.alpha <= 270) {\n                        dLPosition.y += point.shapeArgs.width;\n                    }\n                }\n                // dLPosition is recalculated for 3D graphs\n                dLPosition = perspective([dLPosition], chart, true, false)[0];\n                alignTo.x = dLPosition.x - xOffset;\n                // #7103 If point is outside of plotArea, hide data label.\n                alignTo.y = point.outside3dPlot ? -9e9 : dLPosition.y;\n            }\n            proceed.apply(this, [].slice.call(arguments, 1));\n        });\n        // Added stackLabels position calculation for 3D charts.\n        wrap(StackItem.prototype, 'getStackBox', function (proceed, chart, stackItem, x, y, xWidth, h, axis) {\n            var stackBox = proceed.apply(this,\n                [].slice.call(arguments, 1));\n            // Only do this for 3D graph\n            if (chart.is3d() && stackItem.base) {\n                // First element of stackItem.base is an index of base series.\n                var baseSeriesInd = +(stackItem.base).split(',')[0];\n                var columnSeries = chart.series[baseSeriesInd];\n                var options3d = chart.options.chart.options3d;\n                // Only do this if base series is a column or inherited type,\n                // use its barW, z and depth parameters\n                // for correct stackLabels position calculation\n                if (columnSeries &&\n                    columnSeries instanceof SeriesRegistry.seriesTypes.column) {\n                    var dLPosition = {\n                            x: stackBox.x + (chart.inverted ? h : xWidth / 2),\n                            y: stackBox.y,\n                            z: columnSeries.options.depth / 2\n                        };\n                    if (chart.inverted) {\n                        // Do not use default offset calculation logic\n                        // for 3D inverted stackLabels.\n                        stackBox.width = 0;\n                        // When chart is upside down\n                        // (alpha angle between 180 and 360 degrees)\n                        // it is needed to add column width to calculated value.\n                        if (options3d.alpha >= 90 && options3d.alpha <= 270) {\n                            dLPosition.y += xWidth;\n                        }\n                    }\n                    dLPosition = perspective([dLPosition], chart, true, false)[0];\n                    stackBox.x = dLPosition.x - xWidth / 2;\n                    stackBox.y = dLPosition.y;\n                }\n            }\n            return stackBox;\n        });\n        /*\n            @merge v6.2\n            @todo\n            EXTENSION FOR 3D CYLINDRICAL COLUMNS\n            Not supported\n        */\n        /*\n        let defaultOptions = H.getOptions();\n        defaultOptions.plotOptions.cylinder =\n            merge(defaultOptions.plotOptions.column);\n        let CylinderSeries = extendClass(seriesTypes.column, {\n            type: 'cylinder'\n        });\n        seriesTypes.cylinder = CylinderSeries;\n\n        wrap(seriesTypes.cylinder.prototype, 'translate', function (proceed) {\n            proceed.apply(this, [].slice.call(arguments, 1));\n\n            // Do not do this if the chart is not 3D\n            if (!this.chart.is3d()) {\n                return;\n            }\n\n            let series = this,\n                chart = series.chart,\n                options = chart.options,\n                cylOptions = options.plotOptions.cylinder,\n                options3d = options.chart.options3d,\n                depth = cylOptions.depth || 0,\n                alpha = chart.alpha3d;\n\n            let z = cylOptions.stacking ?\n                (this.options.stack || 0) * depth :\n                series._i * depth;\n            z += depth / 2;\n\n            if (cylOptions.grouping !== false) { z = 0; }\n\n            each(series.data, function (point) {\n                let shapeArgs = point.shapeArgs,\n                    deg2rad = H.deg2rad;\n                point.shapeType = 'arc3d';\n                shapeArgs.x += depth / 2;\n                shapeArgs.z = z;\n                shapeArgs.start = 0;\n                shapeArgs.end = 2 * PI;\n                shapeArgs.r = depth * 0.95;\n                shapeArgs.innerR = 0;\n                shapeArgs.depth =\n                    shapeArgs.height * (1 / sin((90 - alpha) * deg2rad)) - z;\n                shapeArgs.alpha = 90 - alpha;\n                shapeArgs.beta = 0;\n            });\n        });\n        */\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * Depth of the columns in a 3D column chart.\n         *\n         * @type      {number}\n         * @default   25\n         * @since     4.0\n         * @product   highcharts\n         * @requires  highcharts-3d\n         * @apioption plotOptions.column.depth\n         */\n        /**\n         * 3D columns only. The color of the edges. Similar to `borderColor`, except it\n         * defaults to the same color as the column.\n         *\n         * @type      {Highcharts.ColorString}\n         * @product   highcharts\n         * @requires  highcharts-3d\n         * @apioption plotOptions.column.edgeColor\n         */\n        /**\n         * 3D columns only. The width of the colored edges.\n         *\n         * @type      {number}\n         * @default   1\n         * @product   highcharts\n         * @requires  highcharts-3d\n         * @apioption plotOptions.column.edgeWidth\n         */\n        /**\n         * The spacing between columns on the Z Axis in a 3D chart.\n         *\n         * @type      {number}\n         * @default   1\n         * @since     4.0\n         * @product   highcharts\n         * @requires  highcharts-3d\n         * @apioption plotOptions.column.groupZPadding\n         */\n        ''; // keeps doclets above in transpiled file\n\n        return ColumnSeries;\n    });\n    _registerModule(_modules, 'Series/Pie3D/Pie3DPoint.js', [_modules['Core/Series/SeriesRegistry.js']], function (SeriesRegistry) {\n        /* *\n         *\n         *  (c) 2010-2021 Torstein Honsi\n         *\n         *  3D pie series\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var __extends = (this && this.__extends) || (function () {\n                var extendStatics = function (d,\n            b) {\n                    extendStatics = Object.setPrototypeOf ||\n                        ({ __proto__: [] } instanceof Array && function (d,\n            b) { d.__proto__ = b; }) ||\n                        function (d,\n            b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n                return extendStatics(d, b);\n            };\n            return function (d, b) {\n                extendStatics(d, b);\n                function __() { this.constructor = d; }\n                d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n            };\n        })();\n        var PiePoint = SeriesRegistry.seriesTypes.pie.prototype.pointClass;\n        /* *\n         *\n         *  Constants\n         *\n         * */\n        var superHaloPath = PiePoint.prototype.haloPath;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        var Pie3DPoint = /** @class */ (function (_super) {\n                __extends(Pie3DPoint, _super);\n            function Pie3DPoint() {\n                /* *\n                 *\n                 *  Properties\n                 *\n                 * */\n                var _this = _super !== null && _super.apply(this,\n                    arguments) || this;\n                _this.series = void 0;\n                return _this;\n                /* eslint-enable valid-jsdoc */\n            }\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /* eslint-disable valid-jsdoc */\n            /**\n             * @private\n             */\n            Pie3DPoint.prototype.haloPath = function () {\n                return this.series.chart.is3d() ?\n                    [] : superHaloPath.apply(this, arguments);\n            };\n            return Pie3DPoint;\n        }(PiePoint));\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return Pie3DPoint;\n    });\n    _registerModule(_modules, 'Series/Pie3D/Pie3DSeries.js', [_modules['Core/Globals.js'], _modules['Series/Pie3D/Pie3DPoint.js'], _modules['Core/Series/SeriesRegistry.js'], _modules['Core/Utilities.js']], function (H, Pie3DPoint, SeriesRegistry, U) {\n        /* *\n         *\n         *  (c) 2010-2021 Torstein Honsi\n         *\n         *  3D pie series\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var __extends = (this && this.__extends) || (function () {\n                var extendStatics = function (d,\n            b) {\n                    extendStatics = Object.setPrototypeOf ||\n                        ({ __proto__: [] } instanceof Array && function (d,\n            b) { d.__proto__ = b; }) ||\n                        function (d,\n            b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n                return extendStatics(d, b);\n            };\n            return function (d, b) {\n                extendStatics(d, b);\n                function __() { this.constructor = d; }\n                d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n            };\n        })();\n        var deg2rad = H.deg2rad,\n            svg = H.svg;\n        var PieSeries = SeriesRegistry.seriesTypes.pie;\n        var extend = U.extend,\n            pick = U.pick;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        var Pie3DSeries = /** @class */ (function (_super) {\n                __extends(Pie3DSeries, _super);\n            function Pie3DSeries() {\n                return _super !== null && _super.apply(this, arguments) || this;\n            }\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /* eslint-disable valid-jsdoc */\n            /**\n             * @private\n             */\n            Pie3DSeries.prototype.addPoint = function () {\n                _super.prototype.addPoint.apply(this, arguments);\n                if (this.chart.is3d()) {\n                    // destroy (and rebuild) everything!!!\n                    this.update(this.userOptions, true); // #3845 pass the old options\n                }\n            };\n            /**\n             * @private\n             */\n            Pie3DSeries.prototype.animate = function (init) {\n                if (!this.chart.is3d()) {\n                    _super.prototype.animate.apply(this, arguments);\n                }\n                else {\n                    var animation = this.options.animation,\n                        attribs = void 0,\n                        center = this.center,\n                        group = this.group,\n                        markerGroup = this.markerGroup;\n                    if (svg) { // VML is too slow anyway\n                        if (animation === true) {\n                            animation = {};\n                        }\n                        // Initialize the animation\n                        if (init) {\n                            // Scale down the group and place it in the center\n                            group.oldtranslateX = pick(group.oldtranslateX, group.translateX);\n                            group.oldtranslateY = pick(group.oldtranslateY, group.translateY);\n                            attribs = {\n                                translateX: center[0],\n                                translateY: center[1],\n                                scaleX: 0.001,\n                                scaleY: 0.001\n                            };\n                            group.attr(attribs);\n                            if (markerGroup) {\n                                markerGroup.attrSetters = group.attrSetters;\n                                markerGroup.attr(attribs);\n                            }\n                            // Run the animation\n                        }\n                        else {\n                            attribs = {\n                                translateX: group.oldtranslateX,\n                                translateY: group.oldtranslateY,\n                                scaleX: 1,\n                                scaleY: 1\n                            };\n                            group.animate(attribs, animation);\n                            if (markerGroup) {\n                                markerGroup.animate(attribs, animation);\n                            }\n                        }\n                    }\n                }\n            };\n            /**\n             * @private\n             */\n            Pie3DSeries.prototype.drawDataLabels = function () {\n                if (this.chart.is3d()) {\n                    var series = this,\n                        chart = series.chart,\n                        options3d_1 = chart.options.chart.options3d;\n                    series.data.forEach(function (point) {\n                        var shapeArgs = point.shapeArgs,\n                            r = shapeArgs.r, \n                            // #3240 issue with datalabels for 0 and null values\n                            a1 = ((shapeArgs.alpha || options3d_1.alpha) * deg2rad),\n                            b1 = ((shapeArgs.beta || options3d_1.beta) * deg2rad),\n                            a2 = ((shapeArgs.start + shapeArgs.end) / 2),\n                            labelPosition = point.labelPosition,\n                            connectorPosition = (labelPosition.connectorPosition),\n                            yOffset = (-r * (1 - Math.cos(a1)) * Math.sin(a2)),\n                            xOffset = r * (Math.cos(b1) - 1) * Math.cos(a2);\n                        // Apply perspective on label positions\n                        [\n                            labelPosition.natural,\n                            connectorPosition.breakAt,\n                            connectorPosition.touchingSliceAt\n                        ].forEach(function (coordinates) {\n                            coordinates.x += xOffset;\n                            coordinates.y += yOffset;\n                        });\n                    });\n                }\n                _super.prototype.drawDataLabels.apply(this, arguments);\n            };\n            /**\n             * @private\n             */\n            Pie3DSeries.prototype.pointAttribs = function (point) {\n                var attr = _super.prototype.pointAttribs.apply(this,\n                    arguments),\n                    options = this.options;\n                if (this.chart.is3d() && !this.chart.styledMode) {\n                    attr.stroke = options.edgeColor || point.color || this.color;\n                    attr['stroke-width'] = pick(options.edgeWidth, 1);\n                }\n                return attr;\n            };\n            /**\n             * @private\n             */\n            Pie3DSeries.prototype.translate = function () {\n                _super.prototype.translate.apply(this, arguments);\n                // Do not do this if the chart is not 3D\n                if (!this.chart.is3d()) {\n                    return;\n                }\n                var series = this,\n                    seriesOptions = series.options,\n                    depth = seriesOptions.depth || 0,\n                    options3d = series.chart.options.chart.options3d,\n                    alpha = options3d.alpha,\n                    beta = options3d.beta,\n                    z = seriesOptions.stacking ?\n                        (seriesOptions.stack || 0) * depth :\n                        series._i * depth;\n                z += depth / 2;\n                if (seriesOptions.grouping !== false) {\n                    z = 0;\n                }\n                series.data.forEach(function (point) {\n                    var shapeArgs = point.shapeArgs,\n                        angle;\n                    point.shapeType = 'arc3d';\n                    shapeArgs.z = z;\n                    shapeArgs.depth = depth * 0.75;\n                    shapeArgs.alpha = alpha;\n                    shapeArgs.beta = beta;\n                    shapeArgs.center = series.center;\n                    angle = (shapeArgs.end + shapeArgs.start) / 2;\n                    point.slicedTranslation = {\n                        translateX: Math.round(Math.cos(angle) *\n                            seriesOptions.slicedOffset *\n                            Math.cos(alpha * deg2rad)),\n                        translateY: Math.round(Math.sin(angle) *\n                            seriesOptions.slicedOffset *\n                            Math.cos(alpha * deg2rad))\n                    };\n                });\n            };\n            /**\n             * @private\n             */\n            Pie3DSeries.prototype.drawTracker = function () {\n                _super.prototype.drawTracker.apply(this, arguments);\n                // Do not do this if the chart is not 3D\n                if (!this.chart.is3d()) {\n                    return;\n                }\n                this.points.forEach(function (point) {\n                    if (point.graphic) {\n                        ['out', 'inn', 'side1', 'side2'].forEach(function (face) {\n                            if (point.graphic) {\n                                point.graphic[face].element.point = point;\n                            }\n                        });\n                    }\n                });\n            };\n            return Pie3DSeries;\n        }(PieSeries));\n        extend(Pie3DSeries.prototype, {\n            pointClass: Pie3DPoint\n        });\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * The thickness of a 3D pie.\n         *\n         * @type      {number}\n         * @default   0\n         * @since     4.0\n         * @product   highcharts\n         * @requires  highcharts-3d\n         * @apioption plotOptions.pie.depth\n         */\n        ''; // keeps doclets above after transpilation\n\n        return Pie3DSeries;\n    });\n    _registerModule(_modules, 'Series/Pie3D/Pie3DComposition.js', [_modules['Series/Pie3D/Pie3DPoint.js'], _modules['Series/Pie3D/Pie3DSeries.js'], _modules['Core/Series/SeriesRegistry.js']], function (Pie3DPoint, Pie3DSeries, SeriesRegistry) {\n        /* *\n         *\n         *  (c) 2010-2021 Torstein Honsi\n         *\n         *  3D pie series\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        /* *\n         *\n         *  Imports\n         *\n         * */\n        /* *\n         *\n         *  Composition\n         *\n         * */\n        SeriesRegistry.seriesTypes.pie.prototype.pointClass.prototype\n            .haloPath = Pie3DPoint.prototype.haloPath;\n        SeriesRegistry.seriesTypes.pie = Pie3DSeries;\n\n    });\n    _registerModule(_modules, 'Series/Scatter3D/Scatter3DPoint.js', [_modules['Series/Scatter/ScatterSeries.js'], _modules['Core/Utilities.js']], function (ScatterSeries, U) {\n        /* *\n         *\n         *  (c) 2010-2021 Torstein Honsi\n         *\n         *  Scatter 3D series.\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var __extends = (this && this.__extends) || (function () {\n                var extendStatics = function (d,\n            b) {\n                    extendStatics = Object.setPrototypeOf ||\n                        ({ __proto__: [] } instanceof Array && function (d,\n            b) { d.__proto__ = b; }) ||\n                        function (d,\n            b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n                return extendStatics(d, b);\n            };\n            return function (d, b) {\n                extendStatics(d, b);\n                function __() { this.constructor = d; }\n                d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n            };\n        })();\n        var defined = U.defined;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        var Scatter3DPoint = /** @class */ (function (_super) {\n                __extends(Scatter3DPoint, _super);\n            function Scatter3DPoint() {\n                /* *\n                 *\n                 *  Properties\n                 *\n                 * */\n                var _this = _super !== null && _super.apply(this,\n                    arguments) || this;\n                _this.options = void 0;\n                _this.series = void 0;\n                return _this;\n            }\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            Scatter3DPoint.prototype.applyOptions = function () {\n                _super.prototype.applyOptions.apply(this, arguments);\n                if (!defined(this.z)) {\n                    this.z = 0;\n                }\n                return this;\n            };\n            return Scatter3DPoint;\n        }(ScatterSeries.prototype.pointClass));\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return Scatter3DPoint;\n    });\n    _registerModule(_modules, 'Series/Scatter3D/Scatter3DSeries.js', [_modules['Core/Math3D.js'], _modules['Series/Scatter3D/Scatter3DPoint.js'], _modules['Series/Scatter/ScatterSeries.js'], _modules['Core/Series/SeriesRegistry.js'], _modules['Core/Utilities.js']], function (Math3D, Scatter3DPoint, ScatterSeries, SeriesRegistry, U) {\n        /* *\n         *\n         *  (c) 2010-2021 Torstein Honsi\n         *\n         *  Scatter 3D series.\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var __extends = (this && this.__extends) || (function () {\n                var extendStatics = function (d,\n            b) {\n                    extendStatics = Object.setPrototypeOf ||\n                        ({ __proto__: [] } instanceof Array && function (d,\n            b) { d.__proto__ = b; }) ||\n                        function (d,\n            b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n                return extendStatics(d, b);\n            };\n            return function (d, b) {\n                extendStatics(d, b);\n                function __() { this.constructor = d; }\n                d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n            };\n        })();\n        var pointCameraDistance = Math3D.pointCameraDistance;\n        var extend = U.extend,\n            merge = U.merge;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * @private\n         * @class\n         * @name Highcharts.seriesTypes.scatter3d\n         *\n         * @augments Highcharts.Series\n         */\n        var Scatter3DSeries = /** @class */ (function (_super) {\n                __extends(Scatter3DSeries, _super);\n            function Scatter3DSeries() {\n                /* *\n                 *\n                 *  Static Properties\n                 *\n                 * */\n                var _this = _super !== null && _super.apply(this,\n                    arguments) || this;\n                /* *\n                 *\n                 *  Properties\n                 *\n                 * */\n                _this.data = void 0;\n                _this.options = void 0;\n                _this.points = void 0;\n                return _this;\n            }\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            Scatter3DSeries.prototype.pointAttribs = function (point) {\n                var attribs = _super.prototype.pointAttribs.apply(this,\n                    arguments);\n                if (this.chart.is3d() && point) {\n                    attribs.zIndex =\n                        pointCameraDistance(point, this.chart);\n                }\n                return attribs;\n            };\n            /**\n             * A 3D scatter plot uses x, y and z coordinates to display values for three\n             * variables for a set of data.\n             *\n             * @sample {highcharts} highcharts/3d/scatter/\n             *         Simple 3D scatter\n             * @sample {highcharts} highcharts/demo/3d-scatter-draggable\n             *         Draggable 3d scatter\n             *\n             * @extends      plotOptions.scatter\n             * @excluding    dragDrop, cluster, boostThreshold, boostBlending\n             * @product      highcharts\n             * @requires     highcharts-3d\n             * @optionparent plotOptions.scatter3d\n             */\n            Scatter3DSeries.defaultOptions = merge(ScatterSeries.defaultOptions, {\n                tooltip: {\n                    pointFormat: 'x: <b>{point.x}</b><br/>y: <b>{point.y}</b><br/>z: <b>{point.z}</b><br/>'\n                }\n            });\n            return Scatter3DSeries;\n        }(ScatterSeries));\n        extend(Scatter3DSeries.prototype, {\n            axisTypes: ['xAxis', 'yAxis', 'zAxis'],\n            // Require direct touch rather than using the k-d-tree, because the\n            // k-d-tree currently doesn't take the xyz coordinate system into\n            // account (#4552)\n            directTouch: true,\n            parallelArrays: ['x', 'y', 'z'],\n            pointArrayMap: ['x', 'y', 'z'],\n            pointClass: Scatter3DPoint\n        });\n        SeriesRegistry.registerSeriesType('scatter3d', Scatter3DSeries);\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * A `scatter3d` series. If the [type](#series.scatter3d.type) option is\n         * not specified, it is inherited from [chart.type](#chart.type).\n         *\n         * scatter3d](#plotOptions.scatter3d).\n         *\n         * @extends   series,plotOptions.scatter3d\n         * @excluding boostThreshold, boostBlending\n         * @product   highcharts\n         * @requires  highcharts-3d\n         * @apioption series.scatter3d\n         */\n        /**\n         * An array of data points for the series. For the `scatter3d` series\n         * type, points can be given in the following ways:\n         *\n         * 1.  An array of arrays with 3 values. In this case, the values correspond\n         * to `x,y,z`. If the first value is a string, it is applied as the name\n         * of the point, and the `x` value is inferred.\n         *\n         *  ```js\n         *     data: [\n         *         [0, 0, 1],\n         *         [1, 8, 7],\n         *         [2, 9, 2]\n         *     ]\n         *  ```\n         *\n         * 3.  An array of objects with named values. The following snippet shows only a\n         * few settings, see the complete options set below. If the total number of data\n         * points exceeds the series'\n         * [turboThreshold](#series.scatter3d.turboThreshold), this option is not\n         * available.\n         *\n         *  ```js\n         *     data: [{\n         *         x: 1,\n         *         y: 2,\n         *         z: 24,\n         *         name: \"Point2\",\n         *         color: \"#00FF00\"\n         *     }, {\n         *         x: 1,\n         *         y: 4,\n         *         z: 12,\n         *         name: \"Point1\",\n         *         color: \"#FF00FF\"\n         *     }]\n         *  ```\n         *\n         * @sample {highcharts} highcharts/chart/reflow-true/\n         *         Numerical values\n         * @sample {highcharts} highcharts/series/data-array-of-arrays/\n         *         Arrays of numeric x and y\n         * @sample {highcharts} highcharts/series/data-array-of-arrays-datetime/\n         *         Arrays of datetime x and y\n         * @sample {highcharts} highcharts/series/data-array-of-name-value/\n         *         Arrays of point.name and y\n         * @sample {highcharts} highcharts/series/data-array-of-objects/\n         *         Config objects\n         *\n         * @type      {Array<Array<number>|*>}\n         * @extends   series.scatter.data\n         * @product   highcharts\n         * @apioption series.scatter3d.data\n         */\n        /**\n         * The z value for each data point.\n         *\n         * @type      {number}\n         * @product   highcharts\n         * @apioption series.scatter3d.data.z\n         */\n        ''; // adds doclets above to transpiled file\n\n        return Scatter3DSeries;\n    });\n    _registerModule(_modules, 'masters/highcharts-3d.src.js', [_modules['Core/Globals.js'], _modules['Core/Renderer/SVG/SVGRenderer3D.js'], _modules['Core/Chart/Chart3D.js'], _modules['Core/Axis/ZAxis.js'], _modules['Core/Axis/Axis3DComposition.js'], _modules['Series/Area3D/Area3DSeries.js']], function (Highcharts, SVGRenderer3D, Chart3D, ZAxis, Axis3DComposition, Area3DSeries) {\n\n        var G = Highcharts;\n        // Compositions\n        SVGRenderer3D.compose(G.SVGRenderer);\n        Chart3D.compose(G.Chart, G.Fx);\n        ZAxis.compose(G.Chart);\n        Axis3DComposition.compose(G.Axis, G.Tick);\n        Area3DSeries.compose(G.seriesTypes.area);\n\n    });\n}));"],"names":["factory","Highcharts","_registerModule","obj","path","args","fn","CustomEvent","window","dispatchEvent","detail","module","_modules","H","U","perspective","points","chart","insidePlotArea","useInvertedPersp","options3d","inverted","pick","origin","x","y","z","vd","scale","beta","deg2rad","alpha","Math","t","C","n","point","b","coordinate","perspective3D","f","cosB","sinB","sinA","cosA","rotated","distance","projection","Number","POSITIVE_INFINITY","shapeArea","vertexes","i","area","j","Math3D","pointCameraDistance","coordinates","c","k","sqrt","pow","shapeArea3D","Color","SVGElement","color","defined","merge","objectEach","SVGElement3D","base","initArgs","elem3d","this","renderer","paths","zIndexes","part","attribs","zIndex","singleSetterForParts","prop","val","values","verb","duration","complete","newAttr","optionsToApply","hasZIndexes","attr","partVal","processParts","props","partsProps","destroyParts","originalDestroy","parts","pathType","continueAnimation","key","animate","forcedSides","styledMode","fill","fillSetter","front","top","side","A","SVGRenderer","__extends","extendStatics","d","Object","setPrototypeOf","__proto__","Array","p","__","constructor","create","prototype","animObject","charts","extend","cos","sin","PI","dFactor","_super","SVGRenderer3D","arguments","SVGRenderer3D.compose","SVGRendererClass","svgRendererProto","svgRenderer3dProto","SVGRenderer3D.curveTo","cx","cy","rx","ry","start","end","dx","dy","result","arcAngle","curveTo","SVGRenderer3D.prototype.toLinePath","closed","SVGRenderer3D.prototype.toLineSegments","m","SVGRenderer3D.prototype.face3d","ret","createElement","ret.attr","hash","enabled","vertexes2d","ret.animate","params","visibility","SVGRenderer3D.prototype.polyhedron","g","destroy","result.destroy","result.attr","result.animate","SVGRenderer3D.prototype.element3d","type","shapeArgs","elements3d","SVGRenderer3D.prototype.cuboid","element3d","SVGRenderer3D.prototype.cuboidPath","mapSidePath","h","pArr","mapPath","w","chartIndex","pickShape","verticesIndex1","verticesIndex2","face1","face2","dummyFace1","dummyFace2","back","path1","shape","path2","bottom","right","left","path3","isRight","incrementX","incrementY","isTop","isFront","incrementZ","toLinePath","group","round","SVGRenderer3D.prototype.arc3d","suckOutCustom","hasCA","ca","customAttribs","wrapper","wrapper.onAdd","parent","className","face","wrapper.setPaths","wrapper.fillSetter","value","darker","side1","side2","inn","out","setter","el","wrapper.attr","paramArr","wrapper.animate","animation","from","randomProp","random","toString","globalAnimation","anim","anim.step","a","fx","interpolate","to","r","innerR","depth","wrapper.destroy","wrapper.hide","hide","wrapper.show","inherit","show","SVGRenderer3D.prototype.arc3dPath","toZeroPIRange","angle","ir","cs","ss","ce","se","irx","iry","end2","midEnd","start2","angleCorr","atan2","angleEnd","abs","angleStart","angleMid","incPrecision","a2","zTop","zOut","max","a1","a3","zInn","zSide1","zSide2","D","Chart3D","genericDefaultOptions","addEvent","isArray","wrap","onAddSeries","e","is3d","onAfterDrawChartBox","chart3d","options","frame","xm","plotLeft","xp","plotWidth","ym","plotTop","yp","plotHeight","zp","xmm","xpp","ymm","ypp","zmm","zm","zpp","hasRendered","frameShapes","faces","onAfterGetContainer","name","slope","cfg","definition","tagName","attributes","id","children","onAfterInit","forEach","s","onAfterSetChartSize","clipBox","margin","chartWidth","chartHeight","scale3d","onBeforeRedraw","isDirtyBox","onBeforeRender","frame3d","get3dFrame","onInit","Composition","wrapIsInsidePlot","proceed","slice","call","wrapRenderSeries","series","length","wrapSetClassName","container","Composition.prototype.get3dFrame","frameOptions","faceOrientation","bottomOrientation","topOrientation","leftOrientation","rightOrientation","frontOrientation","backOrientation","defaultShowBottom","defaultShowTop","defaultShowLeft","defaultShowRight","axis","getFaceOptions","sources","defaultVisible","faceAttrs","isVisible","size","frontFacing","visible","axes","defaultShowBack","defaultShowFront","isValidEdge","yEdges","xDir","xBottomEdges","xTopEdges","zBottomEdges","zTopEdges","pickEdge","edges","mult","projections","best","Composition.prototype.getScale","plotRight","plotBottom","originX","originY","MAX_VALUE","corners","corner","minX","min","maxX","minY","maxY","fitToPlot","viewDistance","axisLabelPosition","compose","ChartClass","FxClass","chartProto","fxProto","chartProto.is3d","fxProto.matrixSetter","pos","interpolated","elem","Axis","chartAddZAxis","ZAxis","onChartAfterGetAxes","_this","zAxisOptions","zAxis","splat","axisOptions","hasOwnProperty","composedClasses","userOptions","ZAxis.compose","ZAxis.prototype.getSeriesExtremes","hasVisibleSeries","dataMin","dataMax","ignoreMinPadding","ignoreMaxPadding","stacking","buildStacks","zData","apply","ZAxis.prototype.setAxisSize","width","len","ZAxis.prototype.setOptions","offset","lineWidth","isZAxis","coll","Axis3DDefaults","labels","position3d","skew3d","title","onTickAfterGetLabelPosition","axis3D","wrapTickGetMarkPath","Tick3DAdditions","TickClass","Tick3D","onAxisAfterSetOptions","onAxisDrawCrosshair","isXAxis","onAxisInit","Axis3DAdditions","wrapAxisGetLinePath","wrapAxisGetPlotBandPath","fromPath","getPlotLinePath","toPath","fromStartSeg","fromEndSeg","toStartSeg","toEndSeg","wrapAxisGetPlotLinePath","startSegment","endSegment","pathSegments","horiz","wrapAxisGetSlotWidth","tick","ticks","gridGroup","categories","firstGridLine","frame3DLeft","origin_1","prevTick","tickId","nextTick","nextLabelPos","prevLabelPos","labelPos","wrapAxisGetTitlePosition","fix3dPosition","Axis3DAdditions.compose","AxisClass","axisProto","Axis3DAdditions.prototype.fix3dPosition","isTitle","positionMode","skew","offsetY","offsetX","vecY","reverseFlap","vecX","v","cosa","projected","pointsProjected","Axis3DAdditions.prototype.swapZ","Series","isNumber","Series3D","Series3D.prototype.translate","translate3dPoints","Series3D.prototype.translate3dPoints","seriesOptions","rawPoints","rawPointsX","zPadding","index","data","rawPoint","zValue","projectedPoints","projectedPoint","SeriesRegistry","wrapAreaSeriesGetGraphPath","svgPath","getGraphPath","lineProto","translatedThreshold","yAxis","bottomPoints","plotX","plotY","plotZ","markerGroup","translateX","translateY","bottomPath","areaPath","Area3DSeries","AreaSeriesClass","ColumnSeries","StackItem","pointAttribs","edgeColor","edgeWidth","setState","state","inactiveOtherPoints","hasNewShapeType","_i","graphic","element","nodeName","columnProto","svg","translate3dShapes","columnProto.translate3dPoints","columnProto.translate3dShapes","point2dPos","borderCrisp","borderlessBase_1","shapeArgs_1","tooltipPos","dimensions","init","yAxis_1","series_1","reversed_1","reversed","_name","_visibility","_zIndex","columnGroup","getPlotBox","vis","grouping","reversedStacks","stacks","retrieveStacks","stackNumber","totalStacks","position","stack","xAxis","columnRangeProto","dataLabel","alignTo","is","inside","xOffset","dLPosition","stackItem","xWidth","stackBox","baseSeriesInd","split","columnSeries","superHaloPath","PiePoint","Pie3DPoint","Pie3DPoint.prototype.haloPath","Pie3DSeries","Pie3DSeries.prototype.addPoint","update","Pie3DSeries.prototype.animate","center","scaleX","scaleY","Pie3DSeries.prototype.drawDataLabels","options3d_1","connectorPosition","labelPosition","yOffset","Pie3DSeries.prototype.pointAttribs","Pie3DSeries.prototype.translate","Pie3DSeries.prototype.drawTracker","pointClass","ScatterSeries","Scatter3DPoint","Scatter3DPoint.prototype.applyOptions","Scatter3DSeries","Scatter3DSeries.prototype.pointAttribs","tooltip","pointFormat","axisTypes","directTouch","parallelArrays","pointArrayMap","Axis3DComposition","Chart","Fx","Tick","seriesTypes","exports","define"],"sourceRoot":""}