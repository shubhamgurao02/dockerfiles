{"version":3,"file":"static/js/5259.e97f1fb8.chunk.js","mappings":"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","sources":["views/Administration/AddNewRolePopUp.js","views/Administration/AddUserRole.js","views/Administration/UpdateBillingRate.js","views/Administration/UpdateTaskStatus.js","views/Administration/Timesheet.js","views/Administration/UpdateBillingPopUp.js","views/Administration/UpdateBillingStatus.js","views/Administration/GMAReport.js","views/Administration/ProjectorAesFlatPrimeReactTable.js","views/Administration/ProjectorAes.js","views/Administration/EngagementDetails.js","views/Administration/TrackerScreenFlatPrimeReactTable.js","views/Administration/TrackerScreensAdder.js","views/Administration/HammerTool.js","views/ProjectComponent/RiskAutocomplete.js"],"sourcesContent":["import axios from \"axios\";\nimport React from \"react\";\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { environment } from \"../../environments/environment\";\nimport { CModal } from \"@coreui/react\";\nimport { CModalBody } from \"@coreui/react\";\nimport CellRendererPrimeReactDataTable from \"../PrimeReactTableComponent/CellRendererPrimeReactDataTable\";\nimport { Column } from \"primereact/column\";\nimport { CModalHeader } from \"@coreui/react\";\nimport { CModalTitle } from \"@coreui/react\";\nimport CheckFlatPrimeReactTable from \"../PrimeReactTableComponent/CheckFlatPrimeReactTable\";\nimport { AiFillWarning } from \"react-icons/ai\";\nimport GlobalValidation from \"../ValidationComponent/GlobalValidation\";\nimport { VscChromeClose } from \"react-icons/vsc\";\nimport FlatPrimeReactTable from \"../PrimeReactTableComponent/FlatPrimeReactTable\";\nimport { ImCross } from \"react-icons/im\";\n\nfunction AddNewRolePopUp(props) {\n  const {\n    buttonPopup,\n    setButtonPopup,\n    formData,\n    setFormData,\n    checkValidation,\n    defaultRole,\n    setCheckValidation,\n    openState,\n    setOpenState,\n    handleRoles,\n    setSuccessfullymsg,\n    successfullymsg,\n  } = props;\n\n  let rows = 10;\n  const [displayDefaultRole, setDisplayDefaultRole] = useState([]);\n  const [checkedData, setCheckedData] = useState([]);\n  console.log(checkedData);\n  const [popuproles, setPopupRoles] = useState([]);\n  const [validationMessage, setValidationMessage] = useState(false);\n  const [popupsubmenus, setPopupSubmenus] = useState([]);\n  const [checkedData1, setCheckedData1] = useState([]);\n  console.log(defaultRole);\n  const [defaultRoleState, setDefaultRoleState] = useState(true);\n  const [defaultPopUpRow, setDefaultPopUpRow] = useState([]);\n  console.log(checkedData1);\n  const [headerdata, setHeaderdata] = useState([]);\n  const [roleDisplayName, setRoleDisplayName] = useState([]);\n  const [roleDisplayId, setRoleDisplayId] = useState([]);\n  const [filteredData, setFilteredData] = useState([]);\n  const [def, setdef] = useState([]);\n  const baseUrl = environment.baseUrl;\n  console.log(displayDefaultRole, defaultRole, roleDisplayName);\n  console.log(roleDisplayName);\n  const PopupRoles = () => {\n    axios({\n      method: \"post\",\n      url: baseUrl + `/administrationms/updatetask/roles`,\n\n      data: {\n        res_id: formData.assigned_to,\n      },\n    }).then((response) => {\n      let respData = response.data;\n      console.log(respData);\n      const filteredEntries = respData.filter((entry) => {\n        return (\n          entry.display_name === \"Finance Admin\" ||\n          entry.display_name === \"Acc Executive\" ||\n          entry.display_name === \"Project Coordinator\" ||\n          entry.display_name === \"Executive Management\" ||\n          entry.display_name === \"RMG Full Access\" ||\n          entry.display_name === \"Finance\" ||\n          entry.display_name === \"Project Manager\" ||\n          entry.display_name === \"CSL\" ||\n          (entry.display_name === \"DP,CL,CSL Access\" && \"DP\") ||\n          entry.display_name === \"PPM Admin access\" ||\n          entry.display_name === \"Software Engineer\"\n        );\n      });\n      console.log(filteredEntries[0].display_name);\n      setDisplayDefaultRole(filteredEntries[0].display_name);\n      const updatedEntries = filteredEntries.map((entry) => {\n        if (entry.display_name === \"DP,CL,CSL Access\") {\n          entry.display_name = \"DP\";\n        } else if (entry.display_name === \"RMG Full Access\") {\n          entry.display_name = \"RMG\";\n        } else if (entry.display_name === \"PPM Admin access\") {\n          entry.display_name = \"Admin\";\n        } else if (entry.display_name === \"Acc Executive\") {\n          entry.display_name = \"Account Executive\";\n        }\n        return entry;\n      });\n      for (let i = 0; i < updatedEntries.length; i++) {\n        updatedEntries[i][\"SNO\"] = i + 1;\n      }\n      let headerData = [{ SNO: \"S.No\", display_name: \"Profiles\" }];\n      let finalDataa = [...headerData, ...updatedEntries];\n      console.log(respData);\n      // setPopupRoles(finalDataa);\n      console.log(finalDataa);\n\n      console.log(updatedEntries);\n      setPopupRoles(finalDataa);\n    });\n  };\n  console.log(displayDefaultRole, defaultRole);\n  useEffect(() => {\n    PopupRoles();\n  }, [formData.assigned_to]);\n  //-----\n  console.log(checkedData);\n\n  const getPopupMenussubmenus = (e) => {\n    // formData[\"resRolesID\"] = checkedData;\n    console.log(checkedData);\n    axios({\n      method: \"post\",\n      url:\n        baseUrl +\n        //  `http://localhost:8096/administrationms/updatetask/assignnewroles?resId=${formData.assigned_to}&roleId=91`,\n        `/administrationms/updatetask/getmenuroles`,\n      data: {\n        roleId: e,\n      },\n    }).then((response) => {\n      console.log(response);\n      let resp = response.data;\n      for (let i = 0; i < resp.length; i++) {\n        {\n          console.log(resp[i].mainmenu);\n        }\n        resp[i][\"mainmenu\"] =\n          resp[i][\"mainmenu\"] == null ? \"Reports\" : resp[i][\"mainmenu\"];\n        resp[i][\"submenu\"] =\n          resp[i][\"submenu\"] == \"Reports\" ? \"\" : resp[i][\"submenu\"];\n      }\n\n      let headerData = [{ mainmenu: \"Menus\", submenu: \"Sub Menus\" }];\n      setPopupSubmenus(headerData.concat(resp));\n      setDefaultPopUpRow(resp[0]);\n      console.log(response.data);\n    });\n  };\n  useEffect(() => {\n    // getPopupMenussubmenus();\n  }, [checkedData]);\n  const defaultSubMemus = (e) => {\n    // formData[\"resRolesID\"] = checkedData;\n    console.log(checkedData);\n    axios({\n      method: \"post\",\n      url:\n        baseUrl +\n        //  `http://localhost:8096/administrationms/updatetask/assignnewroles?resId=${formData.assigned_to}&roleId=91`,\n        `/administrationms/updatetask/menusandsubmenus`,\n      data: {\n        res_id: formData.assigned_to,\n      },\n    }).then((response) => {\n      console.log(response);\n      let resp = response.data;\n      console.log(resp);\n      let headerData = [{ mainmenu: \"Menus\", submenu: \"Sub Menus\" }];\n      //   setdef(headerData.concat(resp));\n      console.log(headerData.concat(resp));\n      setDefaultPopUpRow(headerData.concat(resp));\n      console.log(response.data);\n    });\n  };\n  useEffect(() => {\n    defaultSubMemus();\n  }, []);\n  //----------------Post Assign Roles-----------------\n  console.log(def);\n  const handleConfirm = (e) => {\n    axios({\n      method: \"post\",\n      url:\n        baseUrl +\n        `/administrationms/updatetask/assignnewroles?resId=${formData.assigned_to}&roleId=${roleDisplayId}`,\n    }).then((response) => {\n      handleRoles();\n      //   handleRoles();\n      //   setValidationMessage(true);\n      setSuccessfullymsg(true);\n      setTimeout(() => {\n        setSuccessfullymsg(false);\n      }, 3000);\n    });\n  };\n\n  useEffect(() => {\n    // handleConfirm();\n  }, []);\n  const Profiles = (data) => {\n    return (\n      <div\n        style={{\n          color: \"#15a7ea\",\n          textDecoration: \"underLine\",\n          cursor: \"pointer\",\n          textAlign: \"left\",\n        }}\n        onClick={() => {\n          console.log(data.id);\n          //   setRoleId(data.id);\n          getPopupMenussubmenus(data.id);\n          setRoleDisplayName(data.display_name);\n          setRoleDisplayId(data.id);\n          setOpenState(false);\n          setDefaultRoleState(false);\n        }}\n      >\n        {data.display_name}\n      </div>\n    );\n  };\n  const serial = (data) => {\n    return <div style={{ textAlign: \"center\" }}>{data.SNO}</div>;\n  };\n  const dynamicColumns = Object.keys(headerdata)?.map((col, i) => {\n    return (\n      <Column\n        sortable\n        key={col}\n        body={col == \"display_name\" ? Profiles : col == \"SNO\" && serial}\n        field={col}\n        header={headerdata[col]}\n      />\n    );\n  });\n  console.log(defaultRole, roleDisplayName);\n  return (\n    <div className=\"col-md-12 \">\n      <CModal\n        size=\"lg\"\n        visible={buttonPopup}\n        onClose={() => setButtonPopup(false)}\n      >\n        <CModalHeader className=\"hgt22\" style={{ cursor: \"all-scroll\" }}>\n          <CModalTitle>\n            <span className=\"ft16\">List Of Profiles</span>\n          </CModalTitle>\n        </CModalHeader>\n        <CModalBody>\n          {defaultPopUpRow.length == 1 ? (\n            <div className=\"col-md-6 mt-4\">\n              {openState && (\n                <div className=\" col-md-12\">\n                  <b\n                    className=\"changing1\"\n                    style={{ color: \"#317fb3\", fontSize: \"14px\" }}\n                  >\n                    Menus and Sub Menus for {displayDefaultRole}\n                  </b>\n                </div>\n              )}\n\n              <CellRendererPrimeReactDataTable\n                data={popuproles}\n                rows={rows}\n                dynamicColumns={dynamicColumns}\n                headerData={headerdata}\n                setHeaderData={setHeaderdata}\n              />\n            </div>\n          ) : (\n            <div className=\"profilesListPopUp\">\n              <div className=\"col-md-6\">\n                <div className=\" col-md-12\">\n                  <b\n                    className=\"changing1\"\n                    style={{ color: \"#317fb3\", fontSize: \"14px\" }}\n                  >\n                    Roles to Assign\n                  </b>\n                </div>\n                <CellRendererPrimeReactDataTable\n                  data={popuproles}\n                  rows={rows}\n                  dynamicColumns={dynamicColumns}\n                  headerData={headerdata}\n                  setHeaderData={setHeaderdata}\n                />\n              </div>\n              {/* <p>Menus and Sub Menus for {defaultRole}</p> */}\n\n              {defaultRoleState && (\n                <div className=\"col-md-6\">\n                  <div className=\"col-md-12\">\n                    <b\n                      className=\"changing2\"\n                      style={{ color: \"#317fb3\", fontSize: \"14px\" }}\n                    >\n                      Menus and Sub Menus for {defaultRole}\n                    </b>\n                  </div>\n                  <div\n                    className=\"default\"\n                    style={{\n                      height: \"400px\",\n                      overflowY: \"auto\",\n                    }}\n                  >\n                    <FlatPrimeReactTable\n                      data={defaultPopUpRow}\n                      rows={100}\n                      rowGroupMode={\"rowspan\"}\n                      groupRowsBy={\"mainmenu\"}\n                    />\n                  </div>\n                </div>\n              )}\n\n              {popupsubmenus.length == 1 ? (\n                \"\"\n              ) : (\n                <div className=\"col-md-6\">\n                  <div>\n                    {defaultRoleState == false ? (\n                      <div className=\"col-md-12\">\n                        <b\n                          className=\"changing3\"\n                          style={{ color: \"#317fb3\", fontSize: \"14px\" }}\n                        >\n                          Menus and Sub Menus for {roleDisplayName}\n                        </b>\n                      </div>\n                    ) : (\n                      \"\"\n                    )}\n                    <div\n                      style={{\n                        width: \"calc(100% - 13px)\",\n                        height: \"400px\",\n                        overflowY: \"auto\",\n                      }}\n                    >\n                      <FlatPrimeReactTable\n                        data={popupsubmenus}\n                        rows={100}\n                        rowGroupMode={\"rowspan\"}\n                        groupRowsBy={\"mainmenu\"}\n                        setCheckedData={setCheckedData}\n                      />\n                    </div>\n                  </div>\n                </div>\n              )}\n            </div>\n          )}\n\n          <div className='className=\"col-md-12 col-sm-12 col-xs-12 btn-container center my-3'>\n            <button\n              type=\"button\"\n              className=\"btn btn-primary\"\n              onClick={(e) => {\n                console.log(\"in line 331\");\n                console.log(checkValidation);\n                handleConfirm(e);\n                setButtonPopup(false);\n                // setFormData(prev => ({ ...prev, [e.target.id]: e.target.value }));\n                // setValidationMessage(true);\n              }}\n            >\n              Confirm\n            </button>\n            <button\n              type=\"button\"\n              className=\"btn btn-primary\"\n              onClick={() => {\n                setButtonPopup(false);\n              }}\n            >\n              <ImCross />\n              &nbsp; Cancel\n            </button>\n          </div>\n        </CModalBody>\n      </CModal>\n    </div>\n  );\n}\n\nexport default AddNewRolePopUp;\n","import React, { useState, useEffect, Ref, useRef } from \"react\";\nimport RiskAutoComplete from \"../ProjectComponent/RiskAutocomplete\";\nimport axios from \"axios\";\nimport { environment } from \"../../environments/environment\";\nimport FlatPrimeReactTable from \"../PrimeReactTableComponent/FlatPrimeReactTable\";\n\nimport CellRendererPrimeReactDataTable from \"../PrimeReactTableComponent/CellRendererPrimeReactDataTable\";\n\nimport { CCollapse, CListGroup } from \"@coreui/react\";\nimport {\n  FaChevronCircleUp,\n  FaChevronCircleDown,\n  FaSearch,\n} from \"react-icons/fa\";\nimport { MdPersonAddAlt1 } from \"react-icons/md\";\nimport moment from \"moment\";\nimport { BiCheck } from \"react-icons/bi\";\nimport { AiFillDelete } from \"react-icons/ai\";\n\nimport AddNewRolePopUp from \"./AddNewRolePopUp\";\nimport GlobalHelp from \"../PrimeReactTableComponent/GlobalHelp\";\nimport { Column } from \"primereact/column\";\nimport ScreenBreadcrumbs from \"../Common/ScreenBreadcrumbs\";\n\nfunction AddUserRole() {\n  // const admmsbaseUrl = environment.admmsbaseUrl\n  const baseUrl = environment.baseUrl;\n  // const baseUrl = environment.admmsbaseUrl;\n  let rows = 10;\n  const [riskDetails, setRiskDetails] = useState([]);\n  const [formData, setFormData] = useState({\n    assigned_to: null,\n    resRolesID: \"\",\n  });\n  const [roles, setRoles] = useState([]);\n  const [menus, setMenus] = useState([]);\n  const HelpPDFName = \"AdduserrolesHammerAdministration.pdf\";\n  const HelpHeader = \"Add User Role Help\";\n  const [headerdata, setHeaderdata] = useState([]);\n  const [listdata, setListdata] = useState([]);\n  const [visible, setVisible] = useState(false);\n  const [addVisisble, setAddVisible] = useState(false);\n  const [cheveronIcon, setCheveronIcon] = useState(FaChevronCircleUp);\n  const [buttonPopup, setButtonPopup] = useState(false);\n  const [successfullymsg, setSuccessfullymsg] = useState(false);\n  const [checkValidation, setCheckValidation] = useState([]);\n  const [usersId, setUsersId] = useState([]);\n  const [openState, setOpenState] = useState(false);\n  const [tableState, setTableState] = useState(false);\n  const [deleteMsg, setDeleteMsg] = useState(false);\n  const [roleDisplayName, setRoleDisplayName] = useState([]);\n  const [defaultRoleState, setDefaultRoleState] = useState(true);\n  const [openMenus, setOpenMenus] = useState(false);\n  const [username, setUsername] = useState([]);\n  const [defaultRole, setDefaultRole] = useState([]);\n\n  const loggedUserId = localStorage.getItem(\"resId\");\n  const [routes, setRoutes] = useState([]);\n  let currentScreenName = [\"Hammer Tool\", \"Add User Role\"];\n  let textContent = \"Administration\";\n\n  console.log(roles);\n  const getData = () => {\n    axios({\n      method: \"get\",\n      url: baseUrl + `/ProjectMS/risks/getAssignedData`,\n    }).then(function (response) {\n      var res = response.data;\n      setRiskDetails(res);\n    });\n  };\n  useEffect(() => { getMenus() }, []);\n\n  useEffect(() => {\n    getData();\n  }, []);\n\n  // const [isVisible, setIsVisible] = useState(false)\n  // const handlevisible = ()=>(\n  //   setIsVisible(true)\n  // )\n  const onChangeHandler = (e) => {\n    const { id, value } = e.target;\n    // setIsVisible(true);\n    console.log(\"on Change Handler\");\n    setFormData((prev) => ({ ...prev, [e.target.id]: id }));\n    console.log(\"fck\");\n    console.log(formData);\n    setUsersId(formData);\n    setOpenMenus(false);\n  };\n  //-----------------Table Data List of roles-----------------\n  console.log(username);\n  const [data, setData] = useState([]);\n  // console.log(roles)\n  const handleRoles = (e) => {\n    axios({\n      method: \"post\",\n      url: baseUrl + `/administrationms/updatetask/listofroles`,\n      // headers: { \"Content-Type\": \"application/json\" },\n      data: {\n        res_id: formData.assigned_to,\n      },\n    }).then((response) => {\n      let tabledata = response.data;\n      console.log(tabledata);\n      const filteredEntries = tabledata.filter((entry) => {\n        return (\n          entry.display_name === \"Finance Admin\" ||\n          entry.display_name === \"Acc Executive\" ||\n          entry.display_name === \"Project Coordinator\" ||\n          entry.display_name === \"Executive Management\" ||\n          entry.display_name === \"RMG Full Access\" ||\n          entry.display_name === \"Finance\" ||\n          entry.display_name === \" Project Manager\" ||\n          entry.display_name === \"CSL\" ||\n          entry.display_name === \"DP,CL,CSL Access\" ||\n          entry.display_name === \"PPM Admin access\" ||\n          entry.display_name === \"Software Engineer\" ||\n          entry.display_name === \"Project Manager\"\n        );\n      });\n      const updatedEntries = filteredEntries.map((entry) => {\n        if (entry.display_name === \"DP,CL,CSL Access\") {\n          entry.display_name = \"DP\";\n        } else if (entry.display_name === \"RMG Full Access\") {\n          entry.display_name = \"RMG\";\n        } else if (entry.display_name === \"PPM Admin access\") {\n          entry.display_name = \"Admin\";\n        } else if (entry.display_name === \"Acc Executive\") {\n          entry.display_name = \"Account Executive\";\n        }\n        return entry;\n      });\n      for (let i = 0; i < updatedEntries.length; i++) {\n        updatedEntries[i][\"SNO\"] = i + 1;\n      }\n      console.log(updatedEntries);\n\n      let headerData = [\n        {\n          SNO: \"S.No\",\n          display_name: \"Profiles\",\n          // date_created: \"Created Date\",\n          Action: \"Action\",\n        },\n      ];\n\n      setMenus(headerData.concat(updatedEntries));\n      setDefaultRole(updatedEntries[0]?.display_name);\n      console.log(response.data);\n      setButtonPopup(false);\n      // setSuccessfullymsg(true);\n      // setTimeout(() => {\n      //   setSuccessfullymsg(false);\n      // }, 3000);\n    });\n  };\n  console.log(menus);\n  useEffect(() => {\n    handleRoles();\n\n    console.log(\"in line 98---\");\n    console.log(formData.assigned_to);\n    console.log(formData);\n    if (formData.assigned_to != null) {\n      setTableState(true);\n    }\n    // handleChange();\n  }, [formData.assigned_to]);\n\n  ///----\n  console.log(formData.assigned_to);\n  const handleMenus = (e) => {\n    axios({\n      method: \"post\",\n      url: baseUrl + \"/administrationms/updatetask/menusandsubmenus\",\n      data: {\n        res_id: formData.assigned_to,\n      },\n    }).then((response) => {\n      let resp = response.data;\n\n      for (let i = 0; i < resp.length; i++) {\n        {\n          console.log(resp[i].mainmenu);\n        }\n        resp[i][\"mainmenu\"] =\n          resp[i][\"mainmenu\"] == null ? \"Reports\" : resp[i][\"mainmenu\"];\n        resp[i][\"mainmenu\"] =\n          resp[i][\"mainmenu\"] == resp[i][\"mainmenu\"]\n            ? resp[i][\"mainmenu\"]\n            : resp[i][\"mainmenu\"];\n        // resp[i][\"submenu\"] = resp[i][\"submenu\"] == \"Reports\" ? \"\" : resp[i][\"submenu\"];\n      }\n\n      let headerData = [{ mainmenu: \"Menus\", submenu: \"Sub Menus\" }];\n      setRoles(headerData.concat(resp));\n      console.log(resp);\n    });\n  };\n\n  const getMenus = () => {\n    axios({\n      method: \"GET\",\n      url: baseUrl + `/CommonMS/master/getMenus?loggedUserId=${loggedUserId}`,\n    }).then((resp) => {\n      let getData = resp.data.map((menu) => {\n        if (menu.subMenus) {\n          menu.subMenus = menu.subMenus.filter(\n            (subMenu) =>\n              subMenu.display_name !== \"Roles Permissions\" &&\n              subMenu.display_name !== \"Sales Permissions\" &&\n              subMenu.display_name !== \"Jobs Daily Status\" &&\n              subMenu.display_name !== \"Error Logs\" &&\n              subMenu.id != 27 &&\n              subMenu.display_name !== \"Tracker\" &&\n              subMenu.display_name !== \"Role Costs\" &&\n              subMenu.display_name !== \"Upload Role Costs\" &&\n              subMenu.display_name !== \"Contract Documents\"\n          );\n        }\n        return menu;\n      });\n\n      getData.forEach((item) => {\n        if (item.display_name === textContent) {\n          setRoutes([item]);\n        }\n      });\n    }\n    )\n  }\n  //===========\n\n  //===========\n\n  useEffect(() => {\n    handleMenus();\n  }, [formData.assigned_to]);\n  // http://10.11.12.149:8090/administrationms/updatetask/getmenuroles\n  const menusList = (e) => {\n    axios({\n      method: \"post\",\n      url:\n        baseUrl +\n        //  `http://localhost:8096/administrationms/updatetask/assignnewroles?resId=${formData.assigned_to}&roleId=91`,\n        `/administrationms/updatetask/getmenuroles`,\n      data: {\n        roleId: e,\n      },\n    }).then((response) => {\n      let tabledata = response.data;\n      // setListdata(tabledata);\n      // console.log(tabledata);\n      let headerData = [{ mainmenu: \"Menus\", submenu: \"Sub Menus\" }];\n      setRoles(headerData.concat(tabledata));\n      setOpenMenus(true);\n      // console.log(resp);\n    });\n  };\n\n  console.log(roleDisplayName);\n\n  const DeleteRole = (e) => {\n    console.log();\n    axios({\n      method: \"delete\",\n      url:\n        baseUrl +\n        `/customersms/Customers/deleteRoleId?userId=${Number(formData.assigned_to) - 1\n        }&roleId=${e}`,\n    }).then((error) => {\n      console.log(\"success\", error);\n      let data = error.data;\n      // setDeleteMsg(true);{=}\n      setDeleteMsg(true);\n      setOpenMenus(false);\n      setDefaultRoleState(true);\n      setTimeout(() => {\n        setDeleteMsg(false);\n      }, 3000);\n      handleRoles();\n    });\n  };\n\n  console.log(riskDetails, \"123456\");\n  const roleName = (data) => {\n    console.log(data);\n\n    return (\n      <div\n        style={{\n          color: \"#15a7ea\",\n          textDecoration: \"underLine\",\n          cursor: \"pointer\",\n        }}\n        onClick={() => {\n          console.log(data);\n          menusList(data.id);\n          setRoleDisplayName(data.display_name);\n          setDefaultRoleState(false);\n\n          console.log(\"bandhai---\");\n        }}\n      >\n        {data.display_name}\n      </div>\n    );\n  };\n  const action = (data) => {\n    console.log(data);\n\n    return (\n      <div style={{ color: \"orange\", textAlign: \"center\", tittle: \"delete\" }}>\n        {data.display_name == \"Software Engineer\" ? (\n          <div style={{ cursor: \"not-allowed\" }}>\n            <AiFillDelete />\n          </div>\n        ) : (\n          <AiFillDelete\n            onClick={() => {\n              DeleteRole(data.id);\n              console.log(data.id);\n            }}\n          />\n        )}\n      </div>\n    );\n  };\n  const Serial = (data) => {\n    return <div style={{ textAlign: \"center\" }}>{data.SNO}</div>;\n  };\n  // const createdDate = (data) => {\n  //   return (\n  //     <div style={{ textAlign: \"center\" }}>\n  //       {moment(data.date_created).format(\"DD-MMM-YYYY\")}\n  //     </div>\n  //   );\n  // };\n  const [checkedData, setCheckedData] = useState([]);\n  const dynamicColumns = Object.keys(headerdata)?.map((col, i) => {\n    return (\n      <Column\n        sortable\n        key={col}\n        body={\n          col == \"display_name\"\n            ? roleName\n            : col == \"Action\"\n              ? action\n              : col == \"SNO\" && Serial\n        }\n        field={col}\n        header={headerdata[col]}\n      />\n    );\n  });\n  console.log(roles);\n  return (\n    <div>\n      {successfullymsg ? (\n        <div className=\"statusMsg success\">\n          <span className=\"errMsg\">\n            <BiCheck />\n            &nbsp; Role(s) Saved Successfully\n          </span>\n        </div>\n      ) : (\n        \"\"\n      )}\n      {deleteMsg ? (\n        <div className=\"statusMsg success\">\n          <span className=\"errMsg\">\n            <BiCheck />\n            &nbsp; Role(s) Deleted Successfully\n          </span>\n        </div>\n      ) : (\n        \"\"\n      )}\n      <div>\n        <div className=\"col-md-12\">\n          <div className=\"pageTitle\">\n            <div className=\"childOne\"></div>\n            <div className=\"childTwo\">\n              <h2>Add User Role</h2>\n            </div>\n            <div className=\"childThree\"></div>\n          </div>\n        </div>\n        <ScreenBreadcrumbs\n          routes={routes}\n          currentScreenName={currentScreenName}\n        />\n        <div className=\"group mb-3 customCard\">\n          <div className=\"col-md-12 collapseHeader\">\n            <h2>Search Filters</h2>\n            <div className=\"helpBtn\">\n              <GlobalHelp pdfname={HelpPDFName} name={HelpHeader} />\n            </div>\n            <div\n              onClick={() => {\n                setVisible(!visible);\n                visible\n                  ? setCheveronIcon(FaChevronCircleUp)\n                  : setCheveronIcon(FaChevronCircleDown);\n              }}\n            >\n              <span>{cheveronIcon}</span>\n            </div>\n          </div>\n\n          <CCollapse visible={!visible}>\n            <div className=\" col-md-6 mb-2\">\n              <div className=\"form-group row\">\n                <label className=\"col-3\" htmlFor=\"Resources\">\n                  Resources *\n                </label>\n                <span className=\"col-1 p-0\">:</span>\n                <div className=\"col-6\">\n                  <div className=\"autoComplete-container\">\n                    <RiskAutoComplete\n                      id=\"assigned_to\"\n                      name=\"assigned_to\"\n                      riskDetails={riskDetails}\n                      // setState={setState}\n                      setFormData={setFormData}\n                      // onChange={setDefaultRoleState}\n                      setUsername={setUsername}\n                      onChange={() => {\n                        setDefaultRoleState;\n                        setOpenMenus(false);\n                        onChangeHandler();\n                      }}\n                    />\n                  </div>\n                </div>\n              </div>\n            </div>\n          </CCollapse>\n        </div>\n        {/* {/* </div> */}\n      </div>\n      {tableState ? (\n        <div>\n          <div className=\"row\">\n            <div className=\"col-md-6\">\n              <div\n                className=\"d-flex justify-content-between align-items-center mb-2\"\n                style={{ minHeight: \"28px\" }}\n              >\n                <b style={{ color: \"#317fb3\", fontSize: \"14px\" }}>\n                  List of Profiles for {username}\n                </b>\n                <button\n                  className=\"btn btn-primary\"\n                  onClick={() => {\n                    setButtonPopup(true);\n                    setOpenState(true);\n                  }}\n                >\n                  <MdPersonAddAlt1 /> Assign New Profile\n                </button>\n              </div>\n\n              {/* <FlatPrimeReactTable data={menus} rows={rows} /> */}\n              <div className=\"UserProfileTable\">\n                <CellRendererPrimeReactDataTable\n                  data={menus}\n                  rows={rows}\n                  dynamicColumns={dynamicColumns}\n                  headerData={headerdata}\n                  setHeaderData={setHeaderdata}\n                />\n              </div>\n            </div>\n            {openMenus && (\n              <div className=\"col-md-6\">\n                <div\n                  className=\"d-flex justify-content-between align-items-center mb-2\"\n                  style={{ minHeight: \"28px\" }}\n                >\n                  <b style={{ color: \"#317fb3\", fontSize: \"14px\" }}>\n                    Menus and Sub Menus for {roleDisplayName}\n                  </b>\n                </div>\n                <div style={{ height: \"400px\", overflowY: \"auto\" }}>\n                  {roles.length > 0 ? (\n                    <FlatPrimeReactTable\n                      data={roles}\n                      rows={100}\n                      rowGroupMode={\"rowspan\"}\n                      groupRowsBy={\"mainmenu\"}\n                    />\n                  ) : (\n                    \"\"\n                  )}\n                </div>\n              </div>\n            )}\n            {defaultRoleState && (\n              <div className=\"col-md-6\">\n                {roles.length == 1 ? (\n                  \"\"\n                ) : (\n                  <div\n                    className=\"d-flex justify-content-between align-items-center mb-2\"\n                    style={{ minHeight: \"28px\" }}\n                  >\n                    <b style={{ color: \"#317fb3\", fontSize: \"14px\" }}>\n                      Menus and Sub Menus for {defaultRole}\n                    </b>\n                  </div>\n                )}\n                {roles.length == 1 ? (\n                  \"\"\n                ) : (\n                  <div style={{ height: \"400px\", overflowY: \"auto\" }}>\n                    <FlatPrimeReactTable\n                      data={roles}\n                      rows={100}\n                      rowGroupMode={\"rowspan\"}\n                      groupRowsBy={\"mainmenu\"}\n                    />\n                  </div>\n                )}\n              </div>\n            )}\n          </div>\n        </div>\n      ) : (\n        \"\"\n      )}\n      {buttonPopup ? (\n        <AddNewRolePopUp\n          buttonPopup={buttonPopup}\n          setButtonPopup={setButtonPopup}\n          defaultRole={defaultRole}\n          successfullymsg={successfullymsg}\n          setSuccessfullymsg={setSuccessfullymsg}\n          formData={formData}\n          setFormData={setFormData}\n          checkValidation={checkValidation}\n          setCheckValidation={setCheckValidation}\n          handleRoles={handleRoles}\n          setOpenState={setOpenState}\n          openState={openState}\n        />\n      ) : (\n        \" \"\n      )}\n    </div>\n  );\n}\n\nexport default AddUserRole;\n","import React, { useEffect, useState, useRef } from \"react\";\nimport axios from \"axios\";\nimport { environment } from \"../../environments/environment\";\nimport RiskAutoComplete from \"../ProjectComponent/RiskAutocomplete\";\nimport GlobalValidation from \"../ValidationComponent/GlobalValidation\";\nimport moment from \"moment\";\nimport { CModal } from \"@coreui/react\";\nimport { CModalBody } from \"@coreui/react\";\nimport { CModalHeader, CModalTitle } from \"@coreui/react\";\nimport Draggable from \"react-draggable\";\nimport { BiCheck } from \"react-icons/bi\";\nimport { ImCross } from \"react-icons/im\";\nimport { AiFillWarning } from \"react-icons/ai\";\nimport GlobalCancel from \"../ValidationComponent/GlobalCancel\";\nimport { CCollapse } from \"@coreui/react\";\nimport { AiOutlineCheck } from \"react-icons/ai\";\nimport { AiOutlineClose } from \"react-icons/ai\";\nimport {\n  FaChevronCircleDown,\n  FaChevronCircleUp,\n  FaSearch,\n  FaSave,\n} from \"react-icons/fa\";\nimport ScreenBreadcrumbs from \"../Common/ScreenBreadcrumbs\";\nfunction UpdateBillingRate() {\n  const value = \"UpdateBillingRate\";\n  const baseUrl = environment.baseUrl;\n  const [formData, setFormData] = useState({\n    assigned_to: \"\",\n    Projects: \"\",\n    Roles: \"\",\n    Allocations: \"\",\n    CurrentBillingRate: \"\",\n    BillingRate: \"\",\n    fromDT: \"\",\n    todate: \"\",\n    Resname: \"\",\n  });\n  const [projects, setProjects] = useState([]);\n  const [roles, setRoles] = useState([]);\n  const [allocations, setAllocations] = useState([{}]);\n  const [currentBillingRate, setCurrentBillingRate] = useState({});\n  const [BillingRate, setBillingRate] = useState({});\n  const [riskDetails, setRiskDetails] = useState([]);\n  const [buttonPopup, setButtonPopup] = useState(false);\n  const [addmsg, setAddmsg] = useState(false);\n  const [validationMessage, setValidationMessage] = useState(false);\n  const [errormessage, SetErrorMessage] = useState(false);\n  const [cheveronIcon, setCheveronIcon] = useState(FaChevronCircleUp);\n  const [visible, setVisible] = useState(false);\n  const ref = useRef([]);\n  // const value=\n\n  const loggedUserId = localStorage.getItem(\"resId\");\n  const [routes, setRoutes] = useState([]);\n  let currentScreenName = [\"Hammer Tool\", \"Update Billing Rate\"];\n  let textContent = \"Administration\";\n\n  const currentBillingRateRef = useRef([]);\n  const BillingRateRef = useRef([]);\n\n  const onChangeHandler = (e) => {\n    const inputValue = e.target.value;\n\n    const { id, value } = e.target;\n    const regex = /^[0-9.]*$/;\n\n    // Use a regular expression to validate the input as a number with optional decimal point\n    if (!regex.test(inputValue)) {\n      e.target.value = \"\";\n    }\n    setFormData((prev) => ({ ...prev, [e.target.id]: value }));\n  };\n\n  const getData = () => {\n    axios({\n      method: \"get\",\n      url: baseUrl + `/ProjectMS/risks/getAssignedData`,\n    }).then(function (response) {\n      var res = response.data;\n      setRiskDetails(res);\n    });\n  };\n\n  const getProjectdata = (e) => {\n    axios({\n      method: \"post\",\n      url:\n        baseUrl +\n        `/administrationms/UpdateBillingRate/getProjectdata?ResId=${formData.assigned_to}`,\n    }).then(function (response) {\n      var res = response.data;\n      setProjects(res);\n    });\n  };\n\n  const getRolesdata = (e) => {\n    axios({\n      method: \"post\",\n      url:\n        baseUrl +\n        `/administrationms/UpdateBillingRate/getRolesdata?ResId=${formData.assigned_to}&ProjectId=${formData.Projects}`,\n    }).then(function (response) {\n      var res = response.data;\n      setRoles(res);\n    });\n  };\n\n  const getAllocationsdata = (e) => {\n    axios({\n      method: \"post\",\n      url:\n        baseUrl +\n        `/administrationms/UpdateBillingRate/getAllocationsdata?prjId=${formData.Projects}&roleId=${formData.Roles}&resId=${formData.assigned_to}`,\n    })\n      .then(function (response) {\n        var res = response.data;\n        setAllocations(res);\n      })\n      .catch((error) => { });\n  };\n\n  const Dates = formData.Allocations.split(\"--\");\n  const fromdate = moment(Dates[0]).format(\"yyyy-MM-DD\");\n  const todate = moment(Dates[1]).format(\"yyyy-MM-DD\");\n\n  const getCurrentBillingRate = (e) => {\n    axios({\n      method: \"post\",\n      url:\n        baseUrl +\n        `/administrationms/UpdateBillingRate/getCurrentBillingRate?resId=${formData.assigned_to}&prjId=${formData.Projects}&roleId=${formData.Roles}&fromDT=${fromdate}&toDt=${todate}`,\n    }).then(function (resp) {\n      let res = resp.data[0];\n      setCurrentBillingRate(res);\n\n      if (res?.hourly_rate == undefined || res?.hourly_rate == null) {\n        SetErrorMessage(true);\n        setTimeout(() => {\n          SetErrorMessage(false);\n        }, 3000);\n        return;\n      } else {\n        SetErrorMessage(false);\n      }\n    });\n  };\n  const resetFields = () => {\n    setFormData((prev) => ({\n      ...prev,\n      assigned_to: \"\",\n      Projects: \"\",\n      Roles: \"\",\n      Allocations: \"\",\n      CurrentBillingRate: \"\",\n      BillingRate: \"\",\n      fromDT: \"\",\n      todate: \"\", // Reset the BillingRate field to an empty string or its initial value\n      // Add more fields to reset here if needed\n    }));\n  };\n  const postBillingRate = (e) => {\n    axios({\n      method: \"post\",\n      url:\n        baseUrl +\n        `/administrationms/UpdateBillingRate/UpdateBillRate?resId=${formData.assigned_to}&prjId=${formData.Projects}&roleId=${formData.Roles}&fromDT=${fromdate}&toDt=${todate}&curbillRate=${currentBillingRate?.hourly_rate}&billRate=${formData.BillingRate}`,\n    }).then(function (response) {\n      var res = response.data[0];\n      setCurrentBillingRate(res);\n      setButtonPopup(false);\n      setAddmsg(true);\n      setTimeout(() => {\n        setAddmsg(false);\n      }, 3000);\n      resetFields(); // Reset the fields after a successful save\n      handleCancel();\n    });\n  };\n\n  useEffect(() => {\n    getData();\n    getMenus()\n  }, []);\n\n  useEffect(() => {\n    getProjectdata();\n  }, [formData.assigned_to]);\n\n  useEffect(() => {\n    getRolesdata();\n  }, [formData.Projects]);\n\n  useEffect(() => {\n    getAllocationsdata();\n  }, [formData.Roles]);\n\n  useEffect(() => {\n    getCurrentBillingRate();\n  }, [formData.Allocations]);\n\n  const handleCancel = (e) => {\n    let ele = document.getElementsByClassName(\"cancel\");\n    let valid1 = GlobalCancel(BillingRateRef);\n    let valid = GlobalCancel(ref);\n    if (valid1 || valid) {\n      GlobalCancel(ref);\n      setValidationMessage(false);\n    }\n    setCurrentBillingRate(\"\");\n    for (let index = 0; index < ele.length; index++) {\n      ele[index].value = \"\";\n      if (ele[index].classList.contains(\"autocomplete\")) {\n        ele[\n          index\n        ].children[0].children[0].children[0].children[0].children[1].click();\n      }\n    }\n  };\n  const onChangeResource = () => {\n    let ele = document.getElementsByClassName(\"cancel\");\n    setCurrentBillingRate(\"\");\n\n    for (let index = 0; index < ele.length; index++) {\n      ele[index].value = \"\";\n    }\n  };\n\n  const getMenus = () => {\n    axios({\n      method: \"GET\",\n      url: baseUrl + `/CommonMS/master/getMenus?loggedUserId=${loggedUserId}`,\n    }).then((resp) => {\n      let getData = resp.data.map((menu) => {\n        if (menu.subMenus) {\n          menu.subMenus = menu.subMenus.filter(\n            (subMenu) =>\n              subMenu.display_name !== \"Roles Permissions\" &&\n              subMenu.display_name !== \"Sales Permissions\" &&\n              subMenu.display_name !== \"Jobs Daily Status\" &&\n              subMenu.display_name !== \"Error Logs\" &&\n              subMenu.id != 27 &&\n              subMenu.display_name !== \"Tracker\" &&\n              subMenu.display_name !== \"Role Costs\" &&\n              subMenu.display_name !== \"Upload Role Costs\" &&\n              subMenu.display_name !== \"Contract Documents\"\n          );\n        }\n        return menu;\n      });\n\n      getData.forEach((item) => {\n        if (item.display_name === textContent) {\n          setRoutes([item]);\n        }\n      });\n    }\n    )\n  }\n\n  function UpdateTaskStatusSave(props) {\n    const {\n      postBillingRate,\n      buttonPopup,\n      setButtonPopup,\n      currentBillingRate,\n      BillingRate,\n      setBillingRate,\n    } = props;\n\n    return (\n      <div>\n        <Draggable>\n          <CModal\n            size=\"sm\"\n            visible={buttonPopup}\n            backdrop=\"static\"\n            className=\"ui-dialog \"\n            onClose={() => {\n              setButtonPopup(false);\n            }}\n          >\n            <CModalHeader style={{ cursor: \"all-scroll\" }}>\n              <CModalTitle>\n                <span>Confirmation</span>\n              </CModalTitle>\n            </CModalHeader>\n            <CModalBody>\n              <span>{`Are You Sure..you are updating ${formData?.Resname\n                } bill rate from ${currentBillingRate == undefined\n                  ? currentBillingRate\n                  : currentBillingRate?.hourly_rate\n                } to ${formData.BillingRate == undefined\n                  ? currentBillingRate?.hourly_rate\n                  : formData.BillingRate\n                } ?.`}</span>\n              <div className=\"col-md-12 col-sm-12 col-xs-12 btn-container center my-3\">\n                <button\n                  type=\"delete\"\n                  className=\"btn btn-primary\"\n                  onClick={(e) => {\n                    postBillingRate(e);\n                    setFormData((prev) => ({\n                      ...prev,\n                      [e.target.id]: e.target.value,\n                    }));\n                  }}\n                >\n                  <AiOutlineCheck />\n                  Yes\n                </button>\n\n                <button\n                  type=\"button\"\n                  className=\"btn btn-primary\"\n                  onClick={() => {\n                    setButtonPopup(false);\n                  }}\n                >\n                  <AiOutlineClose />\n                  No\n                </button>\n              </div>\n            </CModalBody>\n          </CModal>\n        </Draggable>\n      </div>\n    );\n  }\n  const handleClick = () => {\n    let valid1 = GlobalValidation(BillingRateRef);\n    let valid = GlobalValidation(ref);\n\n    if (valid || valid1) {\n      setValidationMessage(true);\n      setTimeout(() => {\n        setValidationMessage(false);\n      }, 3000);\n      return;\n    }\n    setButtonPopup(true);\n  };\n  return (\n    <div className=\"col-md-12\">\n      {addmsg ? (\n        <div className=\"statusMsg success\">\n          <BiCheck\n            size=\"1.4em\"\n            color=\"green\"\n            strokeWidth={{ width: \"100px\" }}\n          />\n          &nbsp;\n          {\"Billing Rate per Hour Updated successfully\"}\n        </div>\n      ) : (\n        \"\"\n      )}\n      {errormessage ? (\n        <div className=\"statusMsg error\">\n          <AiFillWarning /> {\"You are not Billable\"}\n        </div>\n      ) : (\n        \"\"\n      )}\n      {validationMessage ? (\n        <div className=\"statusMsg error\">\n          <AiFillWarning />{\" \"}\n          {\"Please select the valid values for highlighted fields\"}\n        </div>\n      ) : (\n        \"\"\n      )}\n      <div>\n        <div className=\"pageTitle\">\n          <div className=\"childOne\"></div>\n          <div className=\"childTwo\">\n            <h2>Update Billing Rate</h2>\n          </div>\n          <div className=\"childThree\"></div>\n        </div>\n        <ScreenBreadcrumbs\n          routes={routes}\n          currentScreenName={currentScreenName}\n        />\n        <div className=\"group my-3 customCard\">\n          <div className=\"col-md-12 collapseHeader\">\n            <h2 style={{ marginLeft: \"6px\" }}>Update Billing Rate</h2>\n            <div\n              style={{ marginRight: \"6px\" }}\n              onClick={() => {\n                setVisible(!visible);\n                visible\n                  ? setCheveronIcon(FaChevronCircleUp)\n                  : setCheveronIcon(FaChevronCircleDown);\n              }}\n            >\n              <span>{cheveronIcon}</span>\n            </div>\n          </div>\n          <CCollapse visible={!visible}>\n            <div className=\"group-content row\">\n              <div className=\" col-md-6 mb-2\">\n                <div className=\" col-md-8\">\n                  <div className=\"form-group row\">\n                    <label className=\"col-5\" htmlFor=\"Resource\">\n                      Resource &nbsp;\n                      <span className=\"required error-text\">*</span>\n                    </label>\n                    <span className=\"col-1 p-0\">:</span>\n                    <div className=\"col-6\">\n                      <div\n                        className=\"autoComplete-container cancel error autocomplete reactautocomplete\"\n                        id=\"autocomplete reactautocomplete\"\n                        ref={(ele) => {\n                          ref.current[0] = ele;\n                        }}\n                        onChange={onChangeResource}\n                      >\n                        <RiskAutoComplete\n                          name=\"assigned_to\"\n                          id=\"assigned_to\"\n                          value={value}\n                          riskDetails={riskDetails}\n                          getData={getData}\n                          setFormData={setFormData}\n                          onChangeHandler={onChangeHandler}\n                        />\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div className=\" col-md-6 mb-2\">\n                <div className=\" col-md-8\">\n                  <div className=\"form-group row\">\n                    <label className=\"col-5\" htmlFor=\"Projects\">\n                      Projects&nbsp;\n                      <span className=\"required error-text\">*</span>\n                    </label>\n                    <span className=\"col-1 p-0\">:</span>\n                    <div className=\"col-6\">\n                      <select\n                        className=\"error enteredDetails cancel text\"\n                        id=\"Projects\"\n                        name=\"Projects\"\n                        onChange={(e) => {\n                          currentBillingRateRef.current[0].value = \"\";\n                          setCurrentBillingRate({});\n                          BillingRateRef.current[0].value = \"\";\n                          setBillingRate({});\n                          // setAllocations([{}]);\n                          setFormData((prev) => ({\n                            ...prev,\n                            [e.target.id]: e.target.value,\n                          }));\n                        }}\n                        ref={(ele) => {\n                          ref.current[1] = ele;\n                        }}\n                      >\n                        <option value=\"\"> &lt;&lt;Please Select&gt;&gt;</option>\n                        {projects.map((Item) => (\n                          <option value={Item.id} key={Item.id}>\n                            {Item.project_name}\n                          </option>\n                        ))}\n                      </select>\n                    </div>\n                  </div>{\" \"}\n                </div>\n              </div>\n              <div className=\" col-md-6 mb-2\">\n                <div className=\" col-md-8\">\n                  <div className=\"form-group row\">\n                    <label className=\"col-5\" htmlFor=\"Roles\">\n                      Roles&nbsp;<span className=\"required error-text\">*</span>\n                    </label>\n                    <span className=\"col-1 p-0\">:</span>\n                    <div className=\"col-6\">\n                      <select\n                        className=\"error enteredDetails cancel text\"\n                        id=\"Roles\"\n                        names=\"Roles\"\n                        onChange={(e) => {\n                          currentBillingRateRef.current[0].value = \"\";\n                          setCurrentBillingRate({});\n                          BillingRateRef.current[0].value = \"\";\n                          setFormData((prev) => ({\n                            ...prev,\n                            [e.target.id]: e.target.value,\n                          }));\n                        }}\n                        ref={(ele) => {\n                          ref.current[2] = ele;\n                        }}\n                      >\n                        <option value=\"\"> &lt;&lt;Please Select&gt;&gt;</option>\n                        {roles.map((Item) => (\n                          <option value={Item.id} key={Item.id}>\n                            {Item.display_name}\n                          </option>\n                        ))}\n                      </select>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div className=\" col-md-6 mb-2\">\n                <div className=\" col-md-8\">\n                  <div className=\"form-group row\">\n                    <label className=\"col-5\" htmlFor=\"Allocations\">\n                      Allocations&nbsp;\n                      <span className=\"required error-text\">*</span>\n                    </label>\n                    <span className=\"col-1 p-0\">:</span>\n                    <div className=\"col-6\">\n                      <select\n                        className=\"error enteredDetails cancel text\"\n                        id=\"Allocations\"\n                        name=\"Allocations\"\n                        onChange={(e) => {\n                          BillingRateRef.current[0].value = \"\";\n                          setFormData((prev) => ({\n                            ...prev,\n                            [e.target.id]: e.target.value,\n                          }));\n                        }}\n                        ref={(ele) => {\n                          ref.current[3] = ele;\n                        }}\n                      >\n                        <option value=\"\"> &lt;&lt;Please Select&gt;&gt;</option>\n                        {allocations.map((Item) => (\n                          <option\n                            value={Item.Allocations}\n                            key={Item.Allocations}\n                          >\n                            {Item.Allocations}\n                          </option>\n                        ))}\n                      </select>\n                    </div>{\" \"}\n                  </div>\n                </div>\n              </div>\n              {console.log(currentBillingRate?.hourly_rate)}\n              <div className=\" col-md-6 mb-2\">\n                <div className=\" col-md-8\">\n                  <div className=\"form-group row\">\n                    <label className=\"col-5\" htmlFor=\"Current Billing Rate\">\n                      Current Billing Rate &nbsp;\n                      <span className=\"required error-text\">*</span>\n                    </label>\n                    <span className=\"col-1 p-0\">:</span>\n                    <div className=\"col-6\">\n                      <input\n                        type=\"text\"\n                        value={currentBillingRate?.hourly_rate}\n                        disabled=\"disabled\"\n                        className=\"Current Billing Rate disableField cancel\"\n                        name=\"CurrentBillingRate\"\n                        id=\"CurrentBillingRate\"\n                        placeholder=\"\"\n                        required\n                        ref={(ele) => {\n                          currentBillingRateRef.current[0] = ele;\n                        }}\n                      />\n                    </div>\n                  </div>{\" \"}\n                </div>\n              </div>\n              <div className=\" col-md-6 mb-2\">\n                <div className=\" col-md-8\">\n                  <div className=\"form-group row\">\n                    <label className=\"col-5 error-text\" htmlFor=\"Billing Rate\">\n                      Billing Rate &nbsp;\n                      <span className=\"required error-text\">*</span>\n                    </label>\n                    <span className=\"col-1 p-0\">:</span>\n                    <div\n                      className=\"col-6 textfield error enteredDetails cancel\"\n                      ref={(ele) => {\n                        BillingRateRef.current[0] = ele;\n                      }}\n                    >\n                      <input\n                        type=\"text\"\n                        className=\"cancel\"\n                        id=\"BillingRate\"\n                        name=\"BillingRate\"\n                        placeholder=\"\"\n                        required\n                        onChange={onChangeHandler}\n                      />\n                    </div>\n                  </div>\n                </div>{\" \"}\n              </div>\n              <div className=\"col-md-12 col-sm-12 col-xs-12 btn-container center my-3\">\n                <button\n                  type=\"submit\"\n                  className=\"btn btn-primary\"\n                  onClick={() => {\n                    handleClick();\n                  }}\n                >\n                  <FaSave /> Save{\" \"}\n                </button>\n                <button\n                  type=\"submit\"\n                  className=\"btn btn-primary\"\n                  onClick={handleCancel}\n                >\n                  <ImCross /> Cancel{\" \"}\n                </button>\n              </div>\n            </div>\n          </CCollapse>\n        </div>\n      </div>\n      {buttonPopup ? (\n        <UpdateTaskStatusSave\n          postBillingRate={postBillingRate}\n          buttonPopup={buttonPopup}\n          setButtonPopup={setButtonPopup}\n          setAddmsg={setAddmsg}\n          setValidationMessage={setValidationMessage}\n          currentBillingRate={currentBillingRate}\n          BillingRate={BillingRate}\n          setBillingRate={setBillingRate}\n        />\n      ) : (\n        \"\"\n      )}\n    </div>\n  );\n}\n\nexport default UpdateBillingRate;\n","import React, { useState, useEffect, useRef } from \"react\";\nimport RiskAutoComplete from \"../ProjectComponent/RiskAutocomplete\";\nimport axios from \"axios\";\nimport { environment } from \"../../environments/environment\";\nimport { CCollapse, CModal } from \"@coreui/react\";\nimport { CModalBody } from \"@coreui/react\";\nimport { CModalHeader } from \"@coreui/react\";\nimport Draggable from \"react-draggable\";\nimport { Fragment } from \"react\";\nimport { VscSave } from \"react-icons/vsc\";\nimport { VscChromeClose } from \"react-icons/vsc\";\nimport { VscCircleSlash } from \"react-icons/vsc\";\nimport { BiCheck } from \"react-icons/bi\";\nimport { ImCross } from \"react-icons/im\";\nimport { FaSave } from \"react-icons/fa\";\nimport { AiFillWarning } from \"react-icons/ai\";\nimport GlobalValidation from \"../ValidationComponent/GlobalValidation\";\nimport GlobalCancel from \"../ValidationComponent/GlobalCancel\";\nimport { AiOutlineCheck } from \"react-icons/ai\";\nimport { AiOutlineClose } from \"react-icons/ai\";\nimport {\n  FaChevronCircleUp,\n  FaChevronCircleDown,\n  FaSearch,\n} from \"react-icons/fa\";\nimport ScreenBreadcrumbs from \"../Common/ScreenBreadcrumbs\";\n\nfunction UpdateTaskStatus() {\n  const [riskDetails, setRiskDetails] = useState([]);\n  const [formData, setFormData] = useState({\n    assigned_to: \"\",\n    project_id: \"\",\n    task_id: \"\",\n    task_status: \"\",\n    prj_id: \"\",\n    statusId: \"\",\n  });\n  const [projects, setProjects] = useState([]);\n  console.log(formData);\n  const [projectId, setProjectId] = useState(0);\n  const [tasklist, setTaskList] = useState([]);\n\n  const [taskstatus, setTaskStatus] = useState([]);\n  // console.log(taskstatus)\n  const baseUrl = environment.baseUrl;\n  // const projectmsbaseUrl = environment.projectmsbaseUrl;\n  // const baseUrl = environment.admmsbaseUrl;\n  const [buttonPopup, setButtonPopup] = useState(false);\n  const [addmsg, setAddmsg] = useState(false);\n  const [validationMessage, setValidationMessage] = useState(false);\n  const [get, setGet] = useState(\"\");\n\n  const [sourceStatus, setSourceStatus] = useState([]);\n  const [destinationStatus, setDestinationStatus] = useState([]);\n  const [visible, setVisible] = useState(false);\n  const [addVisisble, setAddVisible] = useState(false);\n  const [cheveronIcon, setCheveronIcon] = useState(FaChevronCircleUp);\n  //   let ds=destinationStatus[0]?.description;\n  // console.log(destinationStatus[0]?.description)\n  // ds==undefined?sourceStatus[0]?.description:destinationStatus[0]?.description;\n  // console.log(ds)\n\n  const loggedUserId = localStorage.getItem(\"resId\");\n  const [routes, setRoutes] = useState([]);\n  let currentScreenName = [\"Hammer Tool\", \"Update Task Status\"];\n  let textContent = \"Administration\";\n  const ref = useRef([]);\n\n  const getData = () => {\n    axios({\n      method: \"get\",\n      url: baseUrl + `/ProjectMS/risks/getAssignedData`,\n    }).then(function (response) {\n      var res = response.data;\n      setRiskDetails(res);\n    });\n  };\n  useEffect(() => { }, []);\n\n  useEffect(() => {\n    getData();\n    getMenus()\n  }, []);\n\n  const getMenus = () => {\n    axios({\n      method: \"GET\",\n      url: baseUrl + `/CommonMS/master/getMenus?loggedUserId=${loggedUserId}`,\n    }).then((resp) => {\n      let getData = resp.data.map((menu) => {\n        if (menu.subMenus) {\n          menu.subMenus = menu.subMenus.filter(\n            (subMenu) =>\n              subMenu.display_name !== \"Roles Permissions\" &&\n              subMenu.display_name !== \"Sales Permissions\" &&\n              subMenu.display_name !== \"Jobs Daily Status\" &&\n              subMenu.display_name !== \"Error Logs\" &&\n              subMenu.id != 27 &&\n              subMenu.display_name !== \"Tracker\" &&\n              subMenu.display_name !== \"Role Costs\" &&\n              subMenu.display_name !== \"Upload Role Costs\" &&\n              subMenu.display_name !== \"Contract Documents\"\n          );\n        }\n        return menu;\n      });\n\n      getData.forEach((item) => {\n        if (item.display_name === textContent) {\n          setRoutes([item]);\n        }\n      });\n    }\n    )\n  }\n  console.log(formData);\n\n  const onChangeHandler = (e) => {\n    console.log(\"onChange Handler\");\n    const { id, value } = e.target;\n    console.log(\"in line 53\");\n    console.log(id, value);\n    setFormData((prev) => ({ ...prev, [e.target.id]: value }));\n    setProjects();\n    setTaskList();\n\n    // setId();\n  };\n\n  //-----Project\n\n  const handleProjects = (e) => {\n    console.log(e?.target);\n    axios({\n      method: \"post\",\n      url: baseUrl + `/administrationms/updatetask/getproject `,\n      data: {\n        res_id: formData.assigned_to,\n      },\n    }).then((res) => {\n      let pro = res.data;\n      console.log(\"in line 104\");\n      console.log(pro);\n      setProjects(pro);\n      // setProjectId(res[0].data.id);\n      console.log(pro.project_name);\n      // setId();\n      // console.log(id)\n    });\n  };\n\n  const handleTask = (e) => {\n    console.log(e?.target);\n    //const {setProjects,projects} = props\n\n    axios({\n      method: \"post\",\n      url: baseUrl + `/administrationms/updatetask/getTaskList `,\n      data: {\n        res_id: formData.assigned_to,\n        prj_id: e?.target?.value,\n      },\n      // console.log(first)\n    }).then((res) => {\n      let tsk = res.data;\n      setTaskList(tsk);\n      console.log(tsk);\n    });\n  };\n\n  const handleTaskStatus = (e) => {\n    axios({\n      method: \"post\",\n      url: baseUrl + `/administrationms/updatetask/getStatusID `,\n      data: {\n        res_id: formData.assigned_to,\n        prj_id: formData.project_id,\n        task_id: e?.target?.value,\n      },\n    }).then((res) => {\n      let sts = res.data;\n      setTaskStatus(sts);\n      console.log(sts);\n    });\n  };\n\n  useEffect(() => {\n    // handleTaskStatus();\n    handleProjects();\n  }, [formData.assigned_to]);\n\n  useEffect(() => {\n    handleTask();\n  }, [projectId]);\n\n  //--------------StatusID-------------\n\n  const [statusname, setStatusName] = useState([]);\n\n  const StatusID = () => {\n    axios({\n      method: \"get\",\n      url: baseUrl + `/administrationms/updatetask/getstatus`,\n    }).then(function (response) {\n      var res = response.data;\n      setStatusName(res);\n    });\n  };\n  useEffect(() => {\n    StatusID();\n  }, []);\n\n  //------Post--------------\n\n  const handleSaveClick = (e) => {\n    axios({\n      method: \"post\",\n      url:\n        baseUrl +\n        `/administrationms/updatetask/getresource?ResId=${formData.assigned_to\n        }&PrjId=${formData.project_id}&PrjTaskId=${formData.task_id}&StatusId=${destinationStatus[0]?.id == undefined\n          ? sourceStatus[0]?.id\n          : destinationStatus[0]?.id\n        }`,\n\n      // `/administrationms/updatetask/getresource?ResId=${formData.assigned_to}&PrjId=${formData.project${formData.task_id}&StatusId=${formData.statusId}_id}&PrjTaskId=`,\n      // data:\n      // {\n      //   \"res_id\": formData.assigned_to,\n      //   \"PrjId\": formData.project_id,\n      //   \"PrjTaskId\": formData.task_id,\n      //   \"StatusId\": e?.target?.value,\n      // },\n    }).then((error) => {\n      // setTaskStatus();\n\n      setButtonPopup(false);\n      setAddmsg(true);\n      setTimeout(() => {\n        setAddmsg(false);\n      }, 3000);\n    });\n    handleCancel();\n  };\n\n  const handleCancel = (e) => {\n    let ele = document.getElementsByClassName(\"cancel\");\n    setProjects([]);\n    setTaskList([]);\n    setTaskStatus([]);\n\n    console.log(ref);\n    GlobalCancel(ref);\n\n    console.log(ref);\n\n    for (let index = 0; index < ele.length; index++) {\n      console.log(ele[index]);\n      console.log(ele[index].id);\n      console.log(ele[index].value);\n      ele[index].value = \"\";\n      setValidationMessage(false);\n      setAddmsg(false);\n      console.log(ele[index].classList);\n      console.log(ele[index].classList.contains(\"reactautocomplete\"));\n\n      if (ele[index].classList.contains(\"reactautocomplete\")) {\n        console.log(\n          ele[index].children[0].children[0].children[0].children[0].children[0]\n            .children[0].value\n        );\n        ele[\n          index\n        ].children[0].children[0].children[0].children[0].children[0].children[1].click();\n\n        console.log(\n          ele[index].children[0].children[0].children[0].children[0].children[0]\n            .children[0]\n        );\n\n        console.log(ele[index]);\n      }\n    }\n  };\n\n  // let b = document.getElementsByClassName(\"autoComplete\")\n  // b.reset();\n\n  //-----SAVE POPUP-------------\n\n  function UpdateTaskStatusSave(props) {\n    const {\n      handleSaveClick,\n      buttonPopup,\n      setButtonPopup,\n      sourceStatus,\n      destinationStatus,\n    } = props;\n\n    return (\n      <div>\n        <Draggable>\n          <CModal\n            size=\"Default\"\n            visible={buttonPopup}\n            className=\"ui-dialog\"\n            onClose={() => {\n              setButtonPopup(false);\n            }}\n          >\n            <CModalHeader style={{ cursor: \"all-scroll\" }}>\n              <h6 style={{ color: \"#297AB0\" }}>Confirmation</h6>\n            </CModalHeader>\n            <CModalBody>\n              <span>{`Are You Sure...you are updating task status from ${sourceStatus[0]?.description\n                } to ${destinationStatus[0]?.description == undefined\n                  ? sourceStatus[0]?.description\n                  : destinationStatus[0]?.description\n                } ?`}</span>\n              <div className='className=\"col-md-12 col-sm-12 col-xs-12 btn-container center my-3'>\n                <button\n                  type=\"delete\"\n                  className=\"btn btn-primary\"\n                  onClick={(e) => {\n                    handleSaveClick(e);\n                    setFormData((prev) => ({\n                      ...prev,\n                      [e.target.id]: e.target.value,\n                    }));\n                  }}\n                >\n                  {/* <VscSave size=\"1.2em\" />&nbsp;  */}\n                  <AiOutlineCheck />\n                  Yes\n                </button>\n\n                <button\n                  type=\"button\"\n                  className=\"btn btn-primary\"\n                  onClick={() => {\n                    setButtonPopup(false);\n                  }}\n                >\n                  {/* <VscChromeClose size=\"1.2em\" />&nbsp; */}\n                  <AiOutlineClose />\n                  No\n                </button>\n              </div>\n            </CModalBody>\n          </CModal>\n        </Draggable>\n      </div>\n    );\n  }\n\n  const handleClick = () => {\n    console.log(\"in  line 286----\");\n\n    console.log(ref);\n\n    let valid = GlobalValidation(ref);\n\n    console.log(valid);\n\n    if (valid) {\n      setValidationMessage(true);\n\n      // setTimeout(() => {\n      //   setValidationMessage(false);\n      // }, 3000);\n\n      return;\n    }\n\n    setButtonPopup(true);\n    console.log(formData);\n    console.log(taskstatus);\n    console.log();\n    let taskSttus = taskstatus[0]?.statusId;\n\n    let selectedTaskStatus = formData[\"task_status\"];\n    let sourceData = JSON.parse(JSON.stringify(statusname));\n    console.log(sourceData);\n    let destinationData = JSON.parse(JSON.stringify(statusname));\n    console.log(sourceData);\n    let source = sourceData.filter((d) => d.id == taskSttus);\n    let destination = destinationData.filter((d) => d.id == selectedTaskStatus);\n\n    console.log(\"in line 274-----\");\n    console.log(source);\n    console.log(destination);\n    console.log(destination);\n    setSourceStatus(source);\n    setDestinationStatus(destination);\n  };\n\n  //--------------------------------\n\n  return (\n    <div>\n      <div className=\"\">\n        {addmsg ? (\n          <div className=\"statusMsg success\">\n            <span className=\"errMsg\">\n              <BiCheck\n                size=\"1.4em\"\n              // color=\"green\"\n              // strokeWidth={{ width: \"100px\" }}\n              />{\" \"}\n              &nbsp; Task Status Updated Successfully\n            </span>\n          </div>\n        ) : (\n          \"\"\n        )}\n        {validationMessage ? (\n          <div className=\"statusMsg error\">\n            <span className=\"error-block\">\n              <AiFillWarning /> &nbsp; Please select valid values for\n              highlighted fields\n            </span>\n          </div>\n        ) : (\n          \"\"\n        )}\n        <div className=\"col-md-12\">\n          <div className=\"pageTitle\">\n            <div className=\"childOne\"></div>\n            <div className=\"childTwo\">\n              <h2>Update Task Status</h2>\n            </div>\n            <div className=\"childThree\"></div>\n          </div>\n        </div>\n        <ScreenBreadcrumbs\n          routes={routes}\n          currentScreenName={currentScreenName}\n        />\n        <div className=\"group mb-3 customCard\">\n          <div className=\"col-md-12 collapseHeader\">\n            <h2>Update Task Status</h2>\n\n            <div\n              onClick={() => {\n                setVisible(!visible);\n                visible\n                  ? setCheveronIcon(FaChevronCircleUp)\n                  : setCheveronIcon(FaChevronCircleDown);\n              }}\n            >\n              <span>{cheveronIcon}</span>\n            </div>\n          </div>\n          <CCollapse visible={!visible}>\n            <div className=\"group-content row\">\n              <div className=\" col-md-3 mb-2\">\n                <div className=\"form-group row\">\n                  <label\n                    className=\"col-5\"\n                    htmlFor=\"Resource Name\"\n                    title=\"Resource Name\"\n                  >\n                    Resource Name&nbsp; <span className=\"error-text\">*</span>\n                  </label>\n                  <span className=\"col-1 p-0\">:</span>\n                  <div className=\"col-6\">\n                    <div\n                      className=\"autoComplete-container cancel  reactautocomplete\"\n                      ref={(ele) => {\n                        ref.current[0] = ele;\n                      }}\n                    >\n                      <RiskAutoComplete\n                        name=\"assigned_to\"\n                        id=\"assigned_to\"\n                        placeholder=\"Type minimum 3 characters\"\n                        value=\"0\"\n                        riskDetails={riskDetails}\n                        // setState={setState}\n                        getData={getData}\n                        setFormData={setFormData}\n                        onChangeHandler={onChangeHandler}\n                      // refArr = {ref}\n                      />\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div className=\" col-md-3 mb-2\">\n                <div className=\"form-group row\">\n                  <label className=\"col-5\" htmlFor=\"Projects\" title=\"Project\">\n                    Project&nbsp;<span className=\"error-text\">*</span>\n                  </label>\n                  <span className=\"col-1 p-0\">:</span>\n                  <div className=\"col-6\">\n                    <select\n                      className=\"error enteredDetails cancel text\"\n                      id=\"project_id\"\n                      onChange={(e) => {\n                        handleTask(e);\n                        setFormData((prev) => ({\n                          ...prev,\n                          [e.target.id]: e.target.value,\n                        }));\n                      }}\n                      ref={(ele) => {\n                        ref.current[1] = ele;\n                      }}\n                    >\n                      <option value=\"\"> &lt;&lt;Please Select&gt;&gt;</option>\n                      {projects.map((Item) => (\n                        <option value={Item.id} key={Item.id}>\n                          {Item.project_name}\n                        </option>\n                      ))}\n                    </select>\n                  </div>\n                </div>\n              </div>\n              <div className=\" col-md-3 mb-2\">\n                <div className=\"form-group row\">\n                  <label\n                    className=\"col-5\"\n                    htmlFor=\"Task List\"\n                    title=\"Task List\"\n                  >\n                    Task List&nbsp;<span className=\"error-text\">*</span>\n                  </label>\n                  <span className=\"col-1 p-0\">:</span>\n                  <div className=\"col-6\">\n                    <select\n                      className=\"error enteredDetails cancel text\"\n                      name=\"task_id\"\n                      id=\"task_id\"\n                      onChange={(e) => {\n                        handleTaskStatus(e);\n                        setFormData((prev) => ({\n                          ...prev,\n                          [e.target.id]: e.target.value,\n                        }));\n                      }}\n                      ref={(ele) => {\n                        ref.current[2] = ele;\n                      }}\n                    >\n                      <option value=\"\"> &lt;&lt;Please Select&gt;&gt;</option>\n                      {tasklist.map((Item) => (\n                        <option\n                          value={Item.project_task_id}\n                          key={Item.project_task_id}\n                        >\n                          {Item.task_name}\n                        </option>\n                      ))}\n                    </select>\n                  </div>\n                </div>\n              </div>\n              <div className=\" col-md-3 mb-2\">\n                <div className=\"form-group row\">\n                  <label\n                    className=\"col-5\"\n                    htmlFor=\"Task Status\"\n                    title=\"Task Status\"\n                  >\n                    Task Status&nbsp;<span className=\"error-text\">*</span>\n                  </label>\n                  <span className=\"col-1 p-0\">:</span>\n                  <div className=\"col-6\">\n                    <select\n                      className=\"error enteredDetails  cancel text\"\n                      name=\"task_status\"\n                      id=\"task_status\"\n                      onChange={(e) => {\n                        setFormData((prev) => ({\n                          ...prev,\n                          [e.target.id]: e.target.value,\n                        }));\n                      }}\n                      ref={(ele) => {\n                        ref.current[3] = ele;\n                      }}\n                    >\n                      <option value=\"\"> &lt;&lt;Please Select&gt;&gt;</option>\n                      {statusname.map((Item) => (\n                        <option\n                          value={Item.id}\n                          key={Item.id}\n                          selected={\n                            taskstatus[0]?.statusId == Item.id ? true : false\n                          }\n                        >\n                          {Item.lkup_name}\n                        </option>\n                      ))}\n                    </select>\n                  </div>\n                </div>\n              </div>\n              <div className=\"col-md-12 col-sm-12 col-xs-12 btn-container center my-3\">\n                <button\n                  className=\"btn btn-primary\"\n                  onClick={() => {\n                    handleClick();\n                  }}\n                >\n                  <FaSave /> Save{\" \"}\n                </button>\n                <button\n                  className=\"btn btn-primary\"\n                  type=\"reset\"\n                  onClick={handleCancel}\n                >\n                  <ImCross /> Cancel{\" \"}\n                </button>\n              </div>\n            </div>\n          </CCollapse>\n        </div>\n        {buttonPopup ? (\n          <UpdateTaskStatusSave\n            handleSaveClick={handleSaveClick}\n            buttonPopup={buttonPopup}\n            setButtonPopup={setButtonPopup}\n            setAddmsg={setAddmsg}\n            setValidationMessage={setValidationMessage}\n            sourceStatus={sourceStatus}\n            destinationStatus={destinationStatus}\n          />\n        ) : (\n          \"\"\n        )}\n      </div>\n    </div>\n  );\n}\nexport default UpdateTaskStatus;\n","import moment from \"moment\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport axios from \"axios\";\nimport { Column } from \"ag-grid-community\";\nimport { AiFillWarning } from \"react-icons/ai\";\nimport Loader from \"../Loader/Loader\";\nimport GlobalCancel from \"../ValidationComponent/GlobalCancel\";\nimport { VscSave } from \"react-icons/vsc\";\nimport { ImCross } from \"react-icons/im\";\nimport GlobalValidation from \"../ValidationComponent/GlobalValidation\";\nimport { BiCheck } from \"react-icons/bi\";\nimport { environment } from \"../../environments/environment\";\nimport DatePicker from \"react-datepicker\";\nimport { DataTable } from \"primereact/datatable\";\n\nimport { CCollapse } from \"@coreui/react\";\n\nimport {\n  FaChevronCircleDown,\n  FaChevronCircleUp,\n  FaSearch,\n} from \"react-icons/fa\";\nimport GlobalHelp from \"../PrimeReactTableComponent/GlobalHelp\";\nimport ScreenBreadcrumbs from \"../Common/ScreenBreadcrumbs\";\nfunction Timesheet() {\n  const ref = useRef([]);\n  const [unreaddata, setUnreadData] = useState([{}]);\n  const [undata, setUnData] = useState([]);\n\n  const [headerData, setHeaderData] = useState([]);\n\n  const [addmsg, setAddmsg] = useState(false);\n  const [startDate, setStartDate] = useState();\n  const [toDate, setToDate] = useState();\n  const [datatimesheet, setDataTimesheet] = useState([]);\n\n  const [date, SetDate] = useState();\n  const [target, setTarget] = useState();\n  const [dateto, SetDateTo] = useState();\n  const [resourceName, setResourceName] = useState([]);\n  const [ProjectName, setProjectName] = useState([]);\n  const [tasklist, setTaskList] = useState([]);\n  const [loaderState, setLoaderState] = useState(false);\n  const [cheveronIcon, setCheveronIcon] = useState(FaChevronCircleUp);\n  const [visible, setVisible] = useState(false);\n  const [validationMessage, setValidationMessage] = useState(false);\n  const [RejectvalidationMessage, setRejectValidationMessage] = useState(false);\n  const [RejectMessage, setRejectMessage] = useState(false);\n\n  const [validat, setvalidat] = useState(false);\n\n  const [searching, setsearching] = useState(false);\n  const [hrs, setHrs] = useState([{}]);\n\n  const loggedUserId = localStorage.getItem(\"resId\");\n  const [routes, setRoutes] = useState([]);\n  let currentScreenName = [\"Hammer Tool\", \"Timesheet\"];\n  let textContent = \"Administration\";\n\n  const initialValue1 = {};\n  const [tabledata, settabledata] = useState(initialValue1);\n\n  let rows = 10;\n  let date1 = moment(date).format(\"yyyy-MM-DD\");\n\n  const handleChange = (e) => {\n    const { id, value } = e.target;\n    setFormData((prev) => ({ ...prev, [id]: value }));\n  };\n\n  useEffect(() => {\n    getData();\n    getMenus()\n  }, []);\n\n  const getMenus = () => {\n    axios({\n      method: \"GET\",\n      url: baseUrl + `/CommonMS/master/getMenus?loggedUserId=${loggedUserId}`,\n    }).then((resp) => {\n      let getData = resp.data.map((menu) => {\n        if (menu.subMenus) {\n          menu.subMenus = menu.subMenus.filter(\n            (subMenu) =>\n              subMenu.display_name !== \"Roles Permissions\" &&\n              subMenu.display_name !== \"Sales Permissions\" &&\n              subMenu.display_name !== \"Jobs Daily Status\" &&\n              subMenu.display_name !== \"Error Logs\" &&\n              subMenu.id != 27 &&\n              subMenu.display_name !== \"Tracker\" &&\n              subMenu.display_name !== \"Role Costs\" &&\n              subMenu.display_name !== \"Upload Role Costs\" &&\n              subMenu.display_name !== \"Contract Documents\"\n          );\n        }\n        return menu;\n      });\n\n      getData.forEach((item) => {\n        if (item.display_name === textContent) {\n          setRoutes([item]);\n        }\n      });\n    }\n    )\n  }\n  //=====================\n  const getData = () => {\n    axios\n      .get(\n        baseUrl +\n        `/administrationms/timeSheet/postTimeSheet?res_id=${formData.res_id}&prj_id=${formData.prj_id}&FromDate=${formData.FromDate}&ToDate=${formData.ToDate}&task_id=${formData.task_id}`\n      )\n      .then((res) => {\n        const GetData = res.data;\n        for (let i = 0; i < GetData.length; i++) {\n          GetData[i][\"SNo\"] = i + 1;\n          GetData[i][\"createdAt\"] =\n            GetData[i][\"createdAt\"] == null\n              ? \"\"\n              : moment(GetData[i][\"createdAt\"]).format(\"DD-MM-YYYY HH:mm:ss\");\n        }\n        let dataHeaders = [\n          {\n            timesheet_dt: \"Date\",\n            hours: \"Hours\",\n          },\n        ];\n        setUnreadData(dataHeaders.concat(GetData));\n        setHeaderData(GetData);\n\n        setTimeout(() => {\n          setsearching(false);\n        }, 2000);\n        settabledata();\n      })\n      .catch((error) => { });\n  };\n\n  useEffect(() => {\n    getData();\n    setHeaderData();\n  }, []);\n\n  //[==========================Post Comments===================]\n  const handleReject = (e) => {\n    if (\n      tabledata == undefined ||\n      tabledata == null ||\n      tabledata == {} ||\n      hrs === \"\" ||\n      (hrs >= 0 && hrs >= 25)\n    ) {\n      setRejectValidationMessage(true);\n      window.scrollTo({ top: 0, behavior: \"smooth\" }); // Scroll to the top of the page\n\n      setTimeout(() => {\n        setRejectValidationMessage(false);\n      }, 3000);\n    } else {\n      setRejectValidationMessage(false);\n      let data = [];\n      Object?.keys(tabledata)?.forEach((ele) => {\n        setTarget(tabledata[ele]);\n        const obj = {};\n        obj[\"timesheetDt\"] = ele;\n        obj[\"enteredHours\"] = tabledata[ele];\n        obj[\"projectId\"] = formData.prj_id;\n        obj[\"projectTaskId\"] = formData.task_id;\n        obj[\"resource_id\"] = formData.res_id;\n        obj[\"approver_notes\"] = \"\";\n        obj[\"typStatusId\"] = e.target.value == \"Approved\" ? 174 : 172;\n        obj[\"loggedId\"] = formData.res_id;\n        obj[\"updatedById\"] = formData.res_id;\n\n        data.push(obj);\n      });\n\n      axios({\n        method: \"post\",\n        url: baseUrl + `/administrationms/timeSheet/saveTimesheet`,\n        data: data,\n      }).then(function (res) {\n        var resp = res.data;\n        getData();\n        settabledata();\n        setRejectMessage(true);\n        window.scrollTo({ top: 0, behavior: \"smooth\" }); // Scroll to the top of the page\n\n        setTimeout(() => {\n          setRejectMessage(false);\n        }, 2000);\n      });\n    }\n  };\n  const handleSaveClick = (e) => {\n    if (\n      tabledata == undefined ||\n      tabledata == null ||\n      tabledata == {} ||\n      hrs === \"\" ||\n      (hrs >= 0 && hrs >= 25)\n    ) {\n      setValidationMessage(true);\n      window.scrollTo({ top: 0, behavior: \"smooth\" }); // Scroll to the top of the page\n\n      setTimeout(() => {\n        setValidationMessage(false);\n      }, 3000);\n      // return;\n    } else {\n      setValidationMessage(false);\n\n      let data = [];\n      Object?.keys(tabledata)?.forEach((ele) => {\n        setTarget(tabledata[ele]);\n        const obj = {};\n        obj[\"timesheetDt\"] = ele;\n        obj[\"enteredHours\"] = tabledata[ele];\n        obj[\"projectId\"] = formData.prj_id;\n        obj[\"projectTaskId\"] = formData.task_id;\n        obj[\"resource_id\"] = formData.res_id;\n        obj[\"approver_notes\"] = \"\";\n        obj[\"typStatusId\"] = e.target.value == \"Approved\" ? 174 : 172;\n        obj[\"loggedId\"] = formData.res_id;\n        obj[\"updatedById\"] = formData.res_id;\n\n        data.push(obj);\n      });\n\n      axios({\n        method: \"post\",\n        url: baseUrl + `/administrationms/timeSheet/saveTimesheet`,\n        data: data,\n      }).then(function (res) {\n        var resp = res.data;\n        getData();\n        settabledata();\n        setAddmsg(true);\n        window.scrollTo({ top: 0, behavior: \"smooth\" }); // Scroll to the top of the page\n\n        setTimeout(() => {\n          setAddmsg(false);\n        }, 2000);\n      });\n    }\n  };\n  const initialValue = {\n    FromDate: \"\",\n    ToDate: \"\",\n    prj_id: \"\",\n    res_id: \"\",\n    task_id: \"\",\n  };\n  const baseUrl = environment.baseUrl;\n\n  const [formData, setFormData] = useState(initialValue);\n\n  useEffect(() => { }, [formData?.FromDate, formData.ToDate]);\n\n  const getProjectName = () => {\n    axios\n      .get(\n        baseUrl +\n        `/administrationms/timeSheet/getProjectssss?FromDate=${formData?.FromDate}&ToDate=${formData.ToDate}`\n      )\n      .then((Response) => {\n        let data = Response.data;\n        setProjectName(data);\n      })\n      .catch((error) => console.log(error));\n  };\n\n  const getTaskList = () => {\n    axios({\n      method: \"get\",\n      url:\n        baseUrl +\n        `/administrationms/timeSheet/getTaskListTimeSheet?res_id=${formData.res_id}&prj_id=${formData.prj_id}&FromDate=${formData.FromDate}`,\n    }).then((res) => {\n      let tasklist = res.data;\n      setTaskList(tasklist);\n    });\n  };\n\n  const getResourceName = () => {\n    axios\n      .get(baseUrl + `/timeandexpensesms/getResources?PrjId=${formData.prj_id}`)\n      .then((Response) => {\n        let data = Response.data;\n        setResourceName(data);\n      })\n      .catch((error) => console.log(error));\n  };\n\n  const handleClick = () => {\n    GlobalCancel(ref);\n    if (\n      formData.FromDate == \"\" ||\n      formData.ToDate == \"\" ||\n      formData.res_id == \"\" ||\n      formData.prj_id == \"\" ||\n      formData.task_id == \"\"\n    ) {\n      let valid = GlobalValidation(ref);\n\n      if (valid) {\n        {\n          setvalidat(true);\n        }\n        return;\n      }\n    } else {\n      setLoaderState(true);\n      setvalidat(false);\n      setsearching(true);\n    }\n    getData();\n  };\n\n  useEffect(() => {\n    getResourceName();\n    getProjectName();\n    getTaskList();\n  }, [\n    formData.prj_id,\n    formData.task_id,\n    formData.res_id,\n    formData?.FromDate,\n    formData.ToDate,\n  ]);\n\n  const handleReset = () => {\n    let ele = document.getElementsByClassName(\"cancel\");\n    for (let index = 0; index < ele.length; index++) {\n      const initialValue = ele[index].dataset.initialValue;\n      ele[index].value = initialValue; // reset the value to the initial value\n      setValidationMessage(false);\n      setAddmsg(false);\n    }\n  };\n  const onChangeSetDate = (e, rowData) => {\n    setHrs(e);\n\n    if (e === \"\" || (e >= 0 && e <= 24)) {\n      settabledata((prev) => ({\n        ...prev,\n        [rowData.timesheet_dt]: e,\n      }));\n    }\n  };\n  const representComments = (rowData) => {\n    return (\n      <>\n        {rowData.typ_status == 172 ? (\n          <form>\n            <input\n              className=\"cancel\"\n              id=\"hours\"\n              style={{ backgroundColor: \"red\", textAlign: \"center\" }}\n              defaultValue={rowData.hours}\n              data-initial-value={rowData.hours}\n              onChange={(e) => {\n                onChangeSetDate(e.target.value, rowData);\n              }}\n            ></input>\n          </form>\n        ) : rowData.typ_status == 173 && rowData.hours !== 0 ? (\n          <input\n            id=\"hours\"\n            defaultValue={rowData.hours}\n            style={{\n              backgroundColor: \"rgb(79 167 116 / 85%)\",\n              textAlign: \"center\",\n            }}\n            className=\" cancel\"\n            data-initial-value={rowData.hours}\n            // defaultValue={gettimesheet.hours}\n            onChange={(e) => {\n              onChangeSetDate(e.target.value, rowData);\n            }}\n          ></input>\n        ) : (\n          <input\n            id=\"hours\"\n            style={{\n              textAlign: \"center\",\n            }}\n            className=\" cancel\"\n            defaultValue={rowData.hours}\n            data-initial-value={rowData.hours}\n            // value={inputValue}\n            onChange={(e) => {\n              onChangeSetDate(e.target.value, rowData);\n            }}\n          ></input>\n        )}\n      </>\n    );\n  };\n  const represent = (rowData) => {\n    // setHrs(rowData.hours);\n    setUnData(rowData.typ_status);\n\n    return (\n      <span className=\"vertical-align-middle ml-2\">\n        {moment(rowData.timesheet_dt).format(\"DD-MMM-yyyy\")}\n      </span>\n    );\n  };\n  const HelpPDFName = \"PMOTimesheet.pdf\";\n  const Headername = \"Timesheet Help\";\n\n  return (\n    <>\n      <div className=\"col-md-12\">\n        {addmsg ? (\n          <div className=\"statusMsg success\">\n            {\" \"}\n            <span className=\"errMsg\">\n              <BiCheck size=\"1.4em\" /> &nbsp; Time Saved Successfully\n            </span>\n          </div>\n        ) : (\n          \"\"\n        )}\n        {validationMessage ? (\n          <div className=\"statusMsg error\">\n            <span className=\"error-block\">\n              <AiFillWarning /> &nbsp; Please enter valid hours\n            </span>\n          </div>\n        ) : (\n          \"\"\n        )}\n        {validat ? (\n          <div className=\"statusMsg error\">\n            <span className=\"error-block\">\n              <AiFillWarning /> &nbsp; Please select valid values for\n              highlighted fields\n            </span>\n          </div>\n        ) : (\n          \"\"\n        )}\n        {RejectvalidationMessage ? (\n          <div className=\"statusMsg error\">\n            <span className=\"error-block\">\n              <AiFillWarning /> &nbsp; Please save the hours before reject\n            </span>\n          </div>\n        ) : (\n          \"\"\n        )}\n        {RejectMessage ? (\n          <div className=\"statusMsg success\">\n            <span className=\"error-block\">\n              <AiFillWarning /> &nbsp; Time Rejected Successfully\n            </span>\n          </div>\n        ) : (\n          \"\"\n        )}\n        <div className=\"pageTitle\">\n          <div className=\"childOne\"></div>\n          <div className=\"childTwo\">\n            <h2>Timesheet</h2>\n          </div>\n          <div className=\"childThree\"></div>\n        </div>\n        <ScreenBreadcrumbs\n          routes={routes}\n          currentScreenName={currentScreenName}\n        />\n        <div className=\"group mb-3 customCard\">\n          <div className=\"col-md-12 collapseHeader\">\n            <h2>TimeSheet</h2>\n            <div className=\"helpBtn\">\n              <GlobalHelp pdfname={HelpPDFName} name={Headername} />\n            </div>\n\n            <div\n              onClick={() => {\n                setVisible(!visible);\n                visible\n                  ? setCheveronIcon(FaChevronCircleUp)\n                  : setCheveronIcon(FaChevronCircleDown);\n              }}\n            >\n              <span>{cheveronIcon}</span>\n            </div>\n          </div>\n          <CCollapse visible={!visible}>\n            <div className=\"group-content row\">\n              <div className=\" col-md-4 mb-2\">\n                <div className=\"form-group row\">\n                  <label className=\"col-5\" htmlFor=\"From Date\">\n                    From Date <span className=\"error-text\">*</span>\n                  </label>\n                  <span className=\"col-1 p-0\">:</span>\n                  <div className=\"col-6\">\n                    <div\n                      className=\"datepicker\"\n                      ref={(ele) => {\n                        ref.current[0] = ele;\n                      }}\n                    >\n                      <DatePicker\n                        id=\"FromDate\"\n                        autoComplete=\"off\"\n                        selected={startDate}\n                        onChange={(e) => {\n                          setFormData((prev) => ({\n                            ...prev,\n                            [\"FromDate\"]: moment(e).format(\"YYYY-MM-DD\"),\n                          }));\n                          setStartDate(e);\n                        }}\n                        showYearDropdown\n                        showMonthDropdown\n                        dateFormat=\"dd-MMM-yyyy\"\n                        placeholderText=\"Begin Date\"\n                        onKeyDown={(e) => {\n                          e.preventDefault();\n                        }}\n                      />\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div className=\" col-md-4 mb-2\">\n                <div className=\"form-group row\">\n                  <label className=\"col-5\" htmlFor=\"To Date\">\n                    To Date<span className=\"error-text\">*</span>\n                  </label>\n                  <span className=\"col-1 p-0\">:</span>\n                  <div className=\"col-6\">\n                    <div\n                      className=\"datepicker\"\n                      ref={(ele) => {\n                        ref.current[1] = ele;\n                      }}\n                    >\n                      <DatePicker\n                        id=\"ToDate\"\n                        autoComplete=\"off\"\n                        selected={dateto}\n                        onChange={(e) => {\n                          SetDateTo(e);\n                          setFormData((prev) => ({\n                            ...prev,\n                            [\"ToDate\"]: moment(e).format(\"YYYY-MM-DD\"),\n                          }));\n                          setToDate(e);\n                        }}\n                        // minDate={formData?.FromDate}\n                        showYearDropdown\n                        showMonthDropdown\n                        dateFormat=\"dd-MMM-yyyy\"\n                        placeholderText=\"End Date\"\n                        onKeyDown={(e) => {\n                          e.preventDefault();\n                        }}\n                        minDate={startDate}\n                      />\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div className=\" col-md-4 mb-2\">\n                <div className=\"form-group row\">\n                  <label className=\"col-5\" htmlFor=\"Projects\">\n                    Projects<span className=\"error-text\">*</span>\n                  </label>\n                  <span className=\"col-1 p-0\">:</span>\n                  <div className=\"col-6\">\n                    <select\n                      ref={(ele) => {\n                        ref.current[2] = ele;\n                      }}\n                      className=\" text\"\n                      name=\"prj_id\"\n                      id=\"prj_id\"\n                      onChange={handleChange}\n                    >\n                      <option value=\"\"> &lt;&lt;Please Select&gt;&gt;</option>\n                      {ProjectName?.map((Item) => (\n                        <option key={Item.id} value={Item.id}>\n                          {Item.projectName}\n                        </option>\n                      ))}\n                    </select>\n                  </div>\n                </div>\n              </div>\n              <div className=\" col-md-4 mb-2\">\n                <div className=\"form-group row\">\n                  <label className=\"col-5\" htmlFor=\"Resources\">\n                    Resources<span className=\"error-text\">*</span>\n                  </label>\n                  <span className=\"col-1 p-0\">:</span>\n                  <div className=\"col-6\">\n                    <select\n                      ref={(ele) => {\n                        ref.current[3] = ele;\n                      }}\n                      className=\" text\"\n                      id=\"res_id\"\n                      onChange={handleChange}\n                    >\n                      <option value=\"\"> &lt;&lt;Please Select&gt;&gt;</option>\n                      {resourceName?.map((Item) => (\n                        <option key={Item.id} value={Item.id}>\n                          {Item.name}\n                        </option>\n                      ))}\n                    </select>\n                  </div>\n                </div>\n              </div>\n              <div className=\" col-md-4 mb-2\">\n                <div className=\"form-group row\">\n                  <label className=\"col-5\" htmlFor=\"Task List\">\n                    Task List<span className=\"error-text\">*</span>\n                  </label>\n                  <span className=\"col-1 p-0\">:</span>\n                  <div className=\"col-6\">\n                    <select\n                      ref={(ele) => {\n                        ref.current[4] = ele;\n                      }}\n                      className=\" text\"\n                      name=\"task_id\"\n                      id=\"task_id\"\n                      onChange={(e) => {\n                        handleChange(e);\n                      }}\n                    >\n                      <option value=\"\"> &lt;&lt;Please Select&gt;&gt;</option>\n                      {tasklist.map((Item) => (\n                        <option\n                          key={Item.project_task_id}\n                          value={Item.project_task_id}\n                        >\n                          {Item.task_name}\n                        </option>\n                      ))}\n                    </select>\n                  </div>\n                </div>\n              </div>\n              <div className=\"col-md-12 col-sm-12 col-xs-12 btn-container center my-3\">\n                <button\n                  type=\"submit\"\n                  className=\"btn btn-primary\"\n                  onClick={() => handleClick()}\n                >\n                  <FaSearch />\n                  Search{\" \"}\n                </button>\n              </div>\n            </div>\n          </CCollapse>\n        </div>\n      </div>\n      {loaderState ? (\n        <div className=\"col-md-4 darkHeader\">\n          <div className=\"legendContainer\">\n            <div className=\"legend green\">\n              <div className=\"legendCircle \"></div>Approved\n            </div>\n            <div className=\"legend red\">\n              <div className=\"legendCircle \"></div> Rejected\n            </div>\n          </div>\n          {/* <CellRendererPrimeReactDataTable\n            data={unreaddata}\n            dynamicColumns={dynamicColumns}\n            headerData={headerData}\n            setHeaderData={setHeaderData}\n            rows={rows}\n          /> */}\n          {searching ? (\n            <>\n              {\" \"}\n              <Loader setsearching={setsearching} />\n            </>\n          ) : (\n            <>\n              <div>\n                <DataTable\n                  className=\"primeReactDataTable \"\n                  value={headerData}\n                  // paginator\n                  showGridlines\n                  rows={rows}\n                  dataKey=\"id\"\n                  // filters={filters1}\n                  responsiveLayout=\"scroll\"\n                  // header={header1}\n                  emptyMessage=\"No Records found.\"\n                // ref={(el) => {\n                //   dt.current = el;\n                // }}\n                >\n                  <Column\n                    field=\"timesheet_dt\"\n                    header=\"  Date\"\n                    body={represent}\n                    style={{ textAlign: \"center\" }}\n                  ></Column>\n                  <Column\n                    field=\"hours\"\n                    header=\"  Hours\"\n                    body={representComments}\n                    style={{ textAlign: \"center\" }}\n                  ></Column>\n                </DataTable>\n              </div>\n              <div className=\"row\">\n                <div className=\"col-md-12 btn-container center \">\n                  <button\n                    className=\"btn btn-primary mt-2 mb-2\"\n                    value=\"Approved\"\n                    onClick={(e) => {\n                      handleSaveClick(e);\n                    }}\n                  >\n                    <VscSave />\n                    Save\n                  </button>\n                  <button\n                    className=\"btn btn-primary mt-2 mb-2\"\n                    value=\"Reject\"\n                    onClick={(e) => {\n                      handleReject(e);\n                    }}\n                  >\n                    <VscSave />\n                    Reject\n                  </button>\n                  <button\n                    className=\"btn btn-secondary   mt-2 mb-2\"\n                    onClick={(e) => handleReset(e)}\n                  >\n                    <ImCross />\n                    Cancel\n                  </button>\n                </div>\n              </div>{\" \"}\n            </>\n          )}\n        </div>\n      ) : (\n        \"\"\n      )}\n    </>\n  );\n}\nexport default Timesheet;\n","import { CModal, CModalBody, CModalHeader, CModalTitle } from \"@coreui/react\";\nimport axios from \"axios\";\nimport { useEffect, useRef, useState } from \"react\";\nimport { AiFillWarning } from \"react-icons/ai\";\nimport { BiSave } from \"react-icons/bi\";\nimport { ImCross } from \"react-icons/im\";\nimport { environment } from \"../../environments/environment\";\nimport Loader from \"../Loader/Loader\";\nimport GlobalValidation from \"../ValidationComponent/GlobalValidation\";\n\nfunction UpdateBillingPopUp(props) {\n  const ref = useRef([]);\n  const {\n    openPopup,\n    setOpenPopup,\n    type,\n    editdata,\n    status,\n    handleTableData,\n    setAddmsg,\n  } = props;\n\n  const baseUrl = environment.baseUrl;\n  const [validationmessage, setValidationMessage] = useState(false);\n  const [currentStatus, setCurrentStatus] = useState([]);\n  const [details, setDetails] = useState({ updateStatus: \"\" });\n  const [loader, setLoader] = useState(false);\n  const abortController = useRef(null);\n  console.log(currentStatus);\n\n  let billingId = editdata.id;\n  let billingStatus = details.updateStatus;\n\n  const updateStatus = () => {\n    let valid = GlobalValidation(ref);\n    if (valid === true) {\n      setValidationMessage(true);\n    }\n    if (valid) {\n      return;\n    }\n    setLoader(true);\n    abortController.current = new AbortController();\n    axios({\n      method: \"put\",\n      url:\n        baseUrl +\n        `/administrationms/updatetask/updatingStatus?id=${billingId}&status=${billingStatus}`,\n      signal: abortController.current.signal,\n    }).then((resp) => {\n      let update = resp.data;\n      setCurrentStatus(update);\n      handleTableData();\n      setOpenPopup(false);\n      setAddmsg(true);\n      setLoader(false);\n\n      setTimeout(() => {\n        setAddmsg(false);\n        setLoader(false);\n      }, 3000);\n    });\n  };\n\n  useEffect(() => {\n    console.log(\"Status has changed\");\n  }, [status]);\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setDetails((prev) => {\n      return { ...prev, [name]: value };\n    });\n  };\n\n  const handleCancel = (e) => {\n    setValidationMessage(false);\n    setOpenPopup(false);\n  };\n  const handleAbort = () => {\n    abortController.current && abortController.current.abort();\n    setLoader(false);\n  };\n\n  return (\n    <div className=\"col-md-12\">\n      <CModal\n        alignment=\"center\"\n        backdrop=\"static\"\n        visible={openPopup}\n        size=\"lg\"\n        className=\" ui-dialog\"\n        onClose={() => setOpenPopup(false)}\n      >\n        <CModalHeader className=\"\">\n          <CModalTitle>\n            {type == \"add\" ? (\n              <span className=\"\"></span>\n            ) : (\n              <span className=\"\">Update Billing Status </span>\n            )}\n          </CModalTitle>\n        </CModalHeader>\n        <CModalBody>\n          {validationmessage === true ? (\n            <div className=\"group-content row mb-2 \">\n              <div className=\"statusMsg error\">\n                <span className=\"error-block\">\n                  <AiFillWarning /> Please select the valid values for\n                  highlighted fields\n                </span>\n              </div>\n            </div>\n          ) : (\n            \"\"\n          )}\n\n          <div className=\"group-content row \">\n            <div className=\" col-md-6 mb-2\">\n              <div className=\"form-group row\">\n                <label className=\"col-5\" htmlFor=\"Current Status\">\n                  Current Status\n                </label>\n                <span className=\"col-1 \">:</span>\n                <div className=\"col-6\">\n                  <input\n                    type=\"text\"\n                    className=\"disableField\"\n                    id=\"status\"\n                    name=\"status\"\n                    defaultValue={editdata.status}\n                    disabled\n                  />\n                </div>\n              </div>\n            </div>\n            <div className=\" col-md-6 mb-2\">\n              <div className=\"form-group row\">\n                <label className=\"col-5\" htmlFor=\"Customer\">\n                  Update Status <span className=\"error-text ml-1\"> *</span>\n                </label>\n                <span className=\"col-1\">:</span>\n                <div className=\"col-6\">\n                  <select\n                    ref={(ele) => {\n                      ref.current[0] = ele;\n                    }}\n                    className=\"cancel text\"\n                    name=\"updateStatus\"\n                    id=\"updateStatus\"\n                    onChange={handleChange}\n                  >\n                    <option value=\"\"> &lt;&lt;Please Select&gt;&gt;</option>\n                    <option value=\"In PM Review\">In PM Review</option>\n                    <option value=\"PM Rejected\">PM Rejected</option>\n                    <option value=\"In DM Review\">In DM Review</option>\n                    <option value=\"DM Rejected\">DM Rejected</option>\n                    <option value=\"In Finance Review\">In Finance Review</option>\n                    <option value=\"Finance Accepted\">Finance Accepted</option>\n                    <option value=\"Finance Rejected\">Finance Rejected</option>\n                  </select>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\" form-group col-md-12 col-sm-12 col-xs-12 btn-container center mb-2\">\n            <button\n              className=\"btn btn-primary\"\n              type=\"submit\"\n              onClick={() => {\n                updateStatus();\n              }}\n            >\n              <BiSave size={\"1.4em\"} /> Save\n            </button>\n            <button\n              className=\"btn btn-secondary\"\n              onClick={() => {\n                handleCancel();\n              }}\n            >\n              <ImCross /> Cancel\n            </button>\n          </div>\n        </CModalBody>\n      </CModal>\n      {loader ? <Loader handleAbort={handleAbort} /> : \"\"}\n    </div>\n  );\n}\n\nexport default UpdateBillingPopUp;\n","import { CCollapse } from \"@coreui/react\";\nimport axios from \"axios\";\nimport moment from \"moment\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport DatePicker from \"react-datepicker\";\nimport { AiFillEdit, AiFillWarning } from \"react-icons/ai\";\nimport {\n  FaChevronCircleDown,\n  FaChevronCircleUp,\n  FaSearch,\n} from \"react-icons/fa\";\nimport { Column } from \"primereact/column\";\n\nimport { environment } from \"../../environments/environment\";\nimport Loader from \"../Loader/Loader\";\nimport UpdateBillingPopUp from \"./UpdateBillingPopUp\";\nimport GlobalValidation from \"../ValidationComponent/GlobalValidation\";\nimport CellRendererPrimeReactDataTable from \"../PrimeReactTableComponent/CellRendererPrimeReactDataTable\";\nimport { BiCheck } from \"react-icons/bi\";\nimport ScreenBreadcrumbs from \"../Common/ScreenBreadcrumbs\";\n\nfunction UpdateBillingStatus() {\n  const [customer, setCustomer] = useState([]);\n  const baseUrl = environment.baseUrl;\n  const [project, setProject] = useState([{}]);\n  const [visible, setVisible] = useState(false);\n  const [addVisisble, setAddVisible] = useState(false);\n  const [cheveronIcon, setCheveronIcon] = useState(FaChevronCircleUp);\n  const [projectSpare, setProjectSpare] = useState([]);\n  const [projectspar, setProjectspar] = useState([]);\n  console.log(projectspar);\n  const [month, setMonth] = useState(new Date());\n  const [loader, setLoader] = useState(false);\n  const [openPopup, setOpenPopup] = useState(false);\n  const [editdata, setEditData] = useState([]);\n  const [addmsg, setAddmsg] = useState(false);\n  const abortController = useRef(null);\n\n  const [details, setDetails] = useState({\n    customer: \"\",\n    project: \"\",\n    month: \"\",\n  });\n\n  const [data, SetData] = useState([]);\n  const [headerData, setHeaderData] = useState([]);\n  const [linkColumns, setLinkColumns] = useState([]);\n  const [linkColumnsRoutes, setLinkColumnsRoutes] = useState([]);\n\n  let projectId = details.project;\n  const [validationmessage, setValidationMessage] = useState(false);\n\n  const ref = useRef([]);\n\n  let myDate = details.month;\n  console.log(myDate);\n  const Dates = details.month.split(\"-\");\n  const [StartDt, setStartDt] = useState();\n  const [EndDt, setEndDt] = useState();\n\n  var date = new Date();\n  console.log(date);\n  var FromDate = new Date(Dates[0], Dates[1] - 1, 1);\n  const FDate = moment(FromDate).format(\"yyyy-MM-DD\");\n  let StartDate = StartDt == null ? FDate : moment(StartDt).format(\"MM-yyyy\");\n  var lastDay = new Date(Dates[0], Dates[1], 0);\n  const lDate = moment(lastDay).format(\"yyyy-MM-DD\");\n  let EndDate = EndDt == null ? lDate : EndDt;\n\n  const loggedUserId = localStorage.getItem(\"resId\");\n  const [routes, setRoutes] = useState([]);\n  let currentScreenName = [\"Hammer Tool\", \"Update Billing Status\"];\n  let textContent = \"Administration\";\n\n  let customerid = details.customer;\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    let data = projectSpare;\n    setProject(data);\n    setProjectSpare(data);\n    setDetails((prev) => {\n      return { ...prev, [name]: value };\n    });\n  };\n\n  const handleChange1 = (e) => {\n    const { name, value } = e.target;\n    setDetails((prev) => {\n      return { ...prev, [name]: value };\n    });\n  };\n\n  const handleCustomer = () => {\n    axios({\n      method: \"get\",\n      url: baseUrl + `/ProjectMS/Engagement/getCustomerName`,\n    }).then((res) => {\n      let custom = res.data;\n      setCustomer(custom);\n    });\n  };\n\n  const handleProject = () => {\n    axios({\n      method: \"get\",\n      url:\n        baseUrl +\n        `/administrationms/updatetask/getProjectName?cid=${customerid}`,\n    }).then((res) => {\n      let projet = res.data;\n      setProject(projet);\n      setProjectspar(projet);\n    });\n  };\n\n  useEffect(() => {\n    handleProject();\n  }, [customerid]);\n\n  const handleTableData = () => {\n    let valid = GlobalValidation(ref);\n    if (valid === true) {\n      setValidationMessage(true);\n    }\n    if (valid) {\n      return;\n    }\n    setVisible(!visible);\n    setValidationMessage(false);\n    setLoader(true);\n    abortController.current = new AbortController();\n    axios({\n      method: \"get\",\n      url:\n        baseUrl +\n        `/administrationms/updatetask/getFilteredData?cid=${customerid}&prjid=${projectId}&fromDate=${StartDate}&toDate=${EndDate}`,\n      signal: abortController.current.signal,\n    }).then((res) => {\n      const GetData = res.data;\n      for (let i = 0; i < GetData.length; i++) {\n        GetData[i][\"SNo\"] = i + 1;\n        GetData[i][\"from_date\"] =\n          GetData[i][\"from_date\"] == null\n            ? \" \"\n            : moment(GetData[i][\"from_date\"]).format(\"DD-MMM-yyyy\");\n        GetData[i][\"to_date\"] =\n          GetData[i][\"to_date\"] == null\n            ? \" \"\n            : moment(GetData[i][\"to_date\"]).format(\"DD-MMM-yyyy\");\n      }\n      let Headerdata = [\n        {\n          full_name: \"Customer\",\n          project_name: \"Project\",\n          status: \"Current Status\",\n          from_date: \"From Date\",\n          to_date: \"To Date\",\n          Actions: \"Actions\",\n        },\n      ];\n      let data = [\"Actions\"];\n      setLinkColumns(data);\n      setAddVisible(true);\n      setLoader(false);\n      SetData(Headerdata.concat(GetData));\n      setTimeout(() => {\n        setLoader(false);\n      }, 1000);\n    });\n  };\n\n  useEffect(() => {\n    data[0] && setHeaderData(JSON.parse(JSON.stringify(data[0])));\n  }, [data]);\n\n  useEffect(() => {\n    handleCustomer();\n    getMenus()\n  }, []);\n\n  const handleAbort = () => {\n    abortController.current && abortController.current.abort();\n    setLoader(false);\n  };\n\n  const LinkTemplate = (data) => {\n    let rou = linkColumns[0];\n    console.log(rou);\n    return (\n      <div align=\"center\">\n        <>\n          {\n            <AiFillEdit\n              data-toggle=\"tooltip\"\n              title=\"Edit\"\n              color=\"orange\"\n              cursor=\"pointer\"\n              type=\"edit\"\n              size=\"1.2em\"\n              onClick={() => {\n                setEditData(data);\n                setOpenPopup(true);\n              }}\n            />\n          }{\" \"}\n          &nbsp;\n        </>\n      </div>\n    );\n  };\n\n  const changeReqDateTT = (data) => {\n    return (\n      <div data-toggle=\"tooltip\" title={data.status}>\n        {data.status}\n      </div>\n    );\n  };\n  const descriptionTT = (data) => {\n    return (\n      <div className=\"ellipsis\" data-toggle=\"tooltip\" title={data.project_name}>\n        {data.project_name}\n      </div>\n    );\n  };\n  const fullnameTT = (data) => {\n    return (\n      <div className=\"custName ellipsis\" title={data.full_name}>\n        {data.full_name}\n      </div>\n    );\n  };\n  const FromdateTT = (data) => {\n    return (\n      <div className=\"custName ellipsis\" title={data.from_date}>\n        {data.from_date}\n      </div>\n    );\n  };\n  const TodateTT = (data) => {\n    return (\n      <div className=\"custName ellipsis\" title={data.to_date}>\n        {data.to_date}\n      </div>\n    );\n  };\n\n  const getMenus = () => {\n    axios({\n      method: \"GET\",\n      url: baseUrl + `/CommonMS/master/getMenus?loggedUserId=${loggedUserId}`,\n    }).then((resp) => {\n      let getData = resp.data.map((menu) => {\n        if (menu.subMenus) {\n          menu.subMenus = menu.subMenus.filter(\n            (subMenu) =>\n              subMenu.display_name !== \"Roles Permissions\" &&\n              subMenu.display_name !== \"Sales Permissions\" &&\n              subMenu.display_name !== \"Jobs Daily Status\" &&\n              subMenu.display_name !== \"Error Logs\" &&\n              subMenu.id != 27 &&\n              subMenu.display_name !== \"Tracker\" &&\n              subMenu.display_name !== \"Role Costs\" &&\n              subMenu.display_name !== \"Upload Role Costs\" &&\n              subMenu.display_name !== \"Contract Documents\"\n          );\n        }\n        return menu;\n      });\n\n      getData.forEach((item) => {\n        if (item.display_name === textContent) {\n          setRoutes([item]);\n        }\n      });\n    }\n    )\n  }\n  const dynamicColumns = Object.keys(headerData)?.map((col, i) => {\n    return (\n      <Column\n        sortable\n        key={col}\n        body={\n          col == \"Actions\"\n            ? LinkTemplate\n            : (col == \"status\" && changeReqDateTT) ||\n            (col == \"project_name\" && descriptionTT) ||\n            (col == \"full_name\" && fullnameTT) ||\n            (col == \"from_date\" && FromdateTT) ||\n            (col == \"to_date\" && TodateTT)\n        }\n        field={col}\n        header={headerData[col]}\n      />\n    );\n  });\n\n  return (\n    <div>\n      {addmsg ? (\n        <div className=\"statusMsg success\">\n          <BiCheck />\n          {\"Billing Status Updated Successfully.\"}\n        </div>\n      ) : (\n        \"\"\n      )}\n\n      {validationmessage ? (\n        <div className=\"  statusMsg error\">\n          {\" \"}\n          &nbsp;\n          <span className=\"error-block\">\n            <AiFillWarning size=\"1.4em\" strokeWidth={{ width: \"100px\" }} />{\" \"}\n            &nbsp; Please select the valid values for highlighted fields.\n          </span>\n        </div>\n      ) : (\n        \"\"\n      )}\n      <div className=\"col-md-12\">\n        <div className=\"pageTitle\">\n          <div className=\"childOne\"></div>\n          <div className=\"childTwo\">\n            <h2>Update Billing Status</h2>\n          </div>\n          <div className=\"childThree\"></div>\n        </div>\n      </div>\n\n      <ScreenBreadcrumbs\n        routes={routes}\n        currentScreenName={currentScreenName}\n      />\n      <div className=\"group my-3 customCard\">\n        <div className=\"col-md-12 collapseHeader\">\n          <h2 style={{ marginLeft: \"6px\" }}>Search Filters</h2>\n          <div\n            style={{ marginRight: \"6px\" }}\n            onClick={() => {\n              setVisible(!visible);\n              visible\n                ? setCheveronIcon(FaChevronCircleUp)\n                : setCheveronIcon(FaChevronCircleDown);\n            }}\n          >\n            <span>{cheveronIcon}</span>\n          </div>\n        </div>\n        <CCollapse visible={!visible}>\n          <div className=\"group-content row \">\n            <div className=\" col-md-4 mb-2\">\n              <div className=\"form-group row\">\n                <label className=\"col-5\" htmlFor=\"Customer\">\n                  Customer <span className=\"error-text ml-1\">*</span>\n                </label>\n                <span className=\"col-1\">:</span>\n                <div className=\"col-6\">\n                  <select\n                    ref={(ele) => {\n                      ref.current[0] = ele;\n                    }}\n                    className=\"error enteredDetails cancel text\"\n                    name=\"customer\"\n                    id=\"customer_id\"\n                    onChange={handleChange}\n                  >\n                    <option value=\"\"> &lt;&lt;Please Select&gt;&gt;</option>\n                    {customer?.map((Item) => (\n                      <option key={Item.id} value={Item.id}>\n                        {Item.full_name}\n                      </option>\n                    ))}\n                  </select>\n                </div>\n              </div>\n            </div>\n            <div className=\" col-md-4 mb-2\">\n              <div className=\"form-group row\">\n                <label className=\"col-5\" htmlFor=\"Project\">\n                  Projects <span className=\"error-text ml-1\">*</span>\n                </label>\n                <span className=\"col-1\">:</span>\n                <div className=\"col-6\">\n                  <select\n                    className=\"error enteredDetails cancel text ellipsis\"\n                    name=\"project\"\n                    id=\"project_id\"\n                    onChange={handleChange1}\n                    ref={(ele) => {\n                      ref.current[1] = ele;\n                    }}\n                  >\n                    <option value=\"\"> &lt;&lt;Please Select&gt;&gt;</option>\n                    {project?.map((Item) => (\n                      <option key={Item.id} value={Item.id}>\n                        {Item.project_name}\n                      </option>\n                    ))}\n                  </select>\n                </div>\n              </div>\n            </div>\n            <div className=\" col-md-4 mb-3\">\n              <div className=\"form-group row\">\n                <label className=\"col-5\" htmlFor=\"Month\">\n                  Month <span className=\"error-text ml-1\">*</span>\n                </label>\n                <span className=\"col-1\">:</span>\n                <div className=\"col-6\">\n                  <DatePicker\n                    name=\"month\"\n                    id=\"StartDt\"\n                    selected={month}\n                    onChange={(e) => {\n                      setDetails((prev) => ({\n                        ...prev,\n                        [\"month\"]: moment(e).format(\"yyyy-MM\"),\n                      }));\n                      setMonth(e);\n                    }}\n                    dateFormat=\"MMM-yyyy\"\n                    showMonthYearPicker\n                  />\n                </div>\n              </div>\n            </div>\n\n            <div className=\"col-md-12 col-sm-12 col-xs-12 btn-container center \">\n              <button\n                type=\"submit\"\n                className=\"btn btn-primary\"\n                title=\"Search\"\n                onClick={() => {\n                  handleTableData();\n                }}\n              >\n                <FaSearch />\n                Search\n              </button>\n            </div>\n          </div>\n          {loader ? <Loader handleAbort={handleAbort} /> : \"\"}\n        </CCollapse>\n      </div>\n      {addVisisble && (\n        <div\n          className=\"group my-3 customCard updateBillingStatus card graph\"\n          style={{ width: \"100%\", float: \"left\" }}\n        >\n          <CellRendererPrimeReactDataTable\n            data={data}\n            linkColumns={linkColumns}\n            linkColumnsRoutes={linkColumnsRoutes}\n            dynamicColumns={dynamicColumns}\n            headerData={headerData}\n            setHeaderData={setHeaderData}\n            rows={10}\n          />\n          {openPopup ? (\n            <UpdateBillingPopUp\n              openPopup={openPopup}\n              setOpenPopup={setOpenPopup}\n              editdata={editdata}\n              handleTableData={handleTableData}\n              addmsg={addmsg}\n              setAddmsg={setAddmsg}\n            />\n          ) : (\n            \"\"\n          )}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default UpdateBillingStatus;\n","import React, { useEffect, useRef, useState } from \"react\";\nimport {\n  FaChevronCircleDown,\n  FaChevronCircleUp,\n  FaSearch,\n  FaCaretDown,\n} from \"react-icons/fa\";\nimport { CCollapse } from \"@coreui/react\";\nimport DatePicker from \"react-datepicker\";\nimport axios from \"axios\";\nimport moment from \"moment\";\nimport { environment } from \"../../environments/environment\";\nimport { MultiSelect } from \"react-multi-select-component\";\nimport GlobalValidation from \"../ValidationComponent/GlobalValidation\";\nimport { IoWarningOutline } from \"react-icons/io5\";\nimport CellRendererPrimeReactDataTable from \"../PrimeReactTableComponent/CellRendererPrimeReactDataTable\";\nimport { Column } from \"primereact/column\";\nimport GlobalCancel from \"../ValidationComponent/GlobalCancel\";\nimport Loader from \"../Loader/Loader\";\nimport ScreenBreadcrumbs from \"../Common/ScreenBreadcrumbs\";\n\nconst DisplayTable = (props) => {\n  const { data, handleAbort, sortedAndHeader } = props;\n  const [headerData, setHeaderData] = useState([]);\n  const [exportData, setExportData] = useState([]);\n\n  useEffect(() => {\n    data[0] && setHeaderData(JSON.parse(JSON.stringify(data[0])));\n    let imp = [\"XLS\"];\n    setExportData(imp);\n  }, [data]);\n\n  const cslToolip = (data) => {\n    return (\n      <div\n        className=\"ellipsis\"\n        align=\"left\"\n        data-toggle=\"tooltip\"\n        title={data.csl}\n      >\n        {data.csl}\n      </div>\n    );\n  };\n  const resNameToolip = (data) => {\n    return (\n      <div\n        className=\"ellipsis\"\n        align=\"left\"\n        data-toggle=\"tooltip\"\n        title={data.resName}\n      >\n        {data.resName}\n      </div>\n    );\n  };\n  const rescustomerToolip = (data) => {\n    return (\n      <div\n        className=\"ellipsis\"\n        align=\"left\"\n        data-toggle=\"tooltip\"\n        title={data.customer}\n      >\n        {data.customer}\n      </div>\n    );\n  };\n  const dpToolip = (data) => {\n    return (\n      <div\n        className=\"ellipsis\"\n        align=\"left\"\n        data-toggle=\"tooltip\"\n        title={data.dp}\n      >\n        {data.dp}\n      </div>\n    );\n  };\n  const engNameToolip = (data) => {\n    return (\n      <div\n        className=\"ellipsis\"\n        align=\"left\"\n        data-toggle=\"tooltip\"\n        title={data.engName}\n      >\n        {data.engName}\n      </div>\n    );\n  };\n  const projectToolip = (data) => {\n    return (\n      <div\n        className=\"ellipsis\"\n        align=\"left\"\n        data-toggle=\"tooltip\"\n        title={data.project}\n      >\n        {data.project}\n      </div>\n    );\n  };\n\n  const emailToolip = (data) => {\n    return (\n      <div\n        className=\"ellipsis\"\n        align=\"left\"\n        data-toggle=\"tooltip\"\n        title={data.emailId}\n      >\n        {data.emailId}\n      </div>\n    );\n  };\n  const resStDtAlign = (data) => {\n    return (\n      <div align=\"center\" data-toggle=\"tooltip\" title={data.resStDt}>\n        {data.resStDt}\n      </div>\n    );\n  };\n  const resEndDtAlign = (data) => {\n    return (\n      <div align=\"center\" data-toggle=\"tooltip\" title={data.resEndDt}>\n        {data.resEndDt}\n      </div>\n    );\n  };\n  const resindustryAlign = (data) => {\n    return (\n      <div data-toggle=\"tooltip\" title={data.industry}>\n        {data.industry}\n      </div>\n    );\n  };\n  const rescontractTermsAlign = (data) => {\n    return (\n      <div\n        data-toggle=\"tooltip\"\n        className=\"ellipsis\"\n        title={data.contractTerms}\n      >\n        {data.contractTerms}\n      </div>\n    );\n  };\n  const resresLocationAlign = (data) => {\n    return (\n      <div data-toggle=\"tooltip\" title={data.resLocation}>\n        {data.resLocation}\n      </div>\n    );\n  };\n  const monthDtAlign = (data) => {\n    return (\n      <div align=\"center\" data-toggle=\"tooltip\" title={data.month}>\n        {data.month}\n      </div>\n    );\n  };\n  // const revenueAlign = (data) => {\n  //   var nf = new Intl.NumberFormat();\n  //   return (\n  //     <div\n  //       align=\"right\"\n  //       data-toggle=\"tooltip\"\n  //       title={nf.format(parseInt(data.revenue))}\n  //     >\n  //       {nf.format(parseInt(data.revenue))}\n  //     </div>\n  //   );\n  // };\n  const revenueAlign = (data) => {\n    var nf = new Intl.NumberFormat();\n    const roundedRevenue = Math.round(parseFloat(data.revenue)); // Parse as float and round\n    return (\n      <div\n        align=\"right\"\n        data-toggle=\"tooltip\"\n        title={nf.format(roundedRevenue)}\n      >\n        {nf.format(roundedRevenue)}\n      </div>\n    );\n  };\n\n  const dynamicColumns = Object.keys(headerData)?.map((col, i) => {\n    return (\n      <Column\n        sortable\n        key={col}\n        body={\n          col == \"resName\"\n            ? resNameToolip\n            : col == \"customer\"\n              ? rescustomerToolip\n              : col == \"csl\"\n                ? cslToolip\n                : col == \"revenue\"\n                  ? revenueAlign\n                  : col == \"dp\"\n                    ? dpToolip\n                    : col == \"engName\"\n                      ? engNameToolip\n                      : col == \"project\"\n                        ? projectToolip\n                        : col == \"resStDt\"\n                          ? resStDtAlign\n                          : col == \"emailId\"\n                            ? emailToolip\n                            : col == \"resEndDt\"\n                              ? resEndDtAlign\n                              : col == \"industry\"\n                                ? resindustryAlign\n                                : col == \"contractTerms\"\n                                  ? rescontractTermsAlign\n                                  : col == \"resLocation\"\n                                    ? resresLocationAlign\n                                    : col == \"month\" && monthDtAlign\n        }\n        field={col}\n        header={headerData[col]}\n      />\n    );\n  });\n  // const sortedData = [...data]; // Copy the data array\n  // const headerRow = sortedData[0]; // Get the header row\n  // const dataRows = sortedData.slice(1); // Get the data rows\n\n  // dataRows.sort((a, b) => a.customer.localeCompare(b.customer));\n\n  // const sortedAndHeader = [headerRow, ...dataRows];\n  // useEffect(() => {}, [sortedAndHeader]);\n\n  return (\n    <div>\n      <CellRendererPrimeReactDataTable\n        fileName={\" PPM GMA Report\"}\n        data={sortedAndHeader}\n        dynamicColumns={dynamicColumns}\n        headerData={headerData}\n        setHeaderData={setHeaderData}\n        exportData={exportData}\n        rows={10}\n      />\n    </div>\n  );\n};\nfunction GMAReport() {\n  const [cheveronIcon, setCheveronIcon] = useState(FaChevronCircleUp);\n  const [visible, setVisible] = useState(false);\n  const [measure, setMeasure] = useState([]);\n  const [month, setMonth] = useState(new Date());\n  const baseUrl = environment.baseUrl;\n  const [country, setCountry] = useState([]);\n  const [selectedCountry, setSelectedCountry] = useState([]);\n  const [business, setBusiness] = useState([]);\n  const [selectedBusiness, setSelectedBusiness] = useState([]);\n  const [data, setData] = useState([]);\n  const [searching, setSearching] = useState(false);\n  const [validationMessage, setValidationMessage] = useState(false);\n  const [date, SetDate] = useState();\n  const [loaderState, setLoaderState] = useState(false);\n  const [durationOptions, setDurationOptions] = useState(12);\n\n  const [addVisisble, setAddVisible] = useState(false);\n  const ref = useRef([]);\n  var d = new Date();\n  var year = d.getFullYear();\n  var month1 = d.getMonth();\n  var day = d.getDate();\n  var c = new Date(year + 1, month1);\n  var E = new Date(year - 5, month1);\n\n  const loggedUserId = localStorage.getItem(\"resId\");\n  const [routes, setRoutes] = useState([]);\n  let currentScreenName = [\"Hammer Tool\", \"GMA Report\"];\n  let textContent = \"Administration\";\n\n  const abortController = useRef(null);\n  const [selectedDuration, setSelectedDuration] = useState(\"\");\n\n  const initialValue = {\n    month: \"\",\n    duration: \"\",\n    businessUnit: \"170,211,123,82,168,207,212,18,213,49,149,208,243\",\n    measure: \"\",\n    location: \"6,5,3,8,4,7,1,2\",\n  };\n  const [formData, setFormData] = useState(initialValue);\n  const effortTypeFnc = () => {\n    axios({\n      method: \"get\",\n      url: baseUrl + `/administrationms/HammerTool/getMeasures`,\n    })\n      .then((res) => {\n        let data = res.data;\n\n        setMeasure(data);\n      })\n      .catch((error) => { });\n  };\n  const getMenus = () => {\n    axios({\n      method: \"GET\",\n      url: baseUrl + `/CommonMS/master/getMenus?loggedUserId=${loggedUserId}`,\n    }).then((resp) => {\n      let getData = resp.data.map((menu) => {\n        if (menu.subMenus) {\n          menu.subMenus = menu.subMenus.filter(\n            (subMenu) =>\n              subMenu.display_name !== \"Roles Permissions\" &&\n              subMenu.display_name !== \"Sales Permissions\" &&\n              subMenu.display_name !== \"Jobs Daily Status\" &&\n              subMenu.display_name !== \"Error Logs\" &&\n              subMenu.id != 27 &&\n              subMenu.display_name !== \"Tracker\" &&\n              subMenu.display_name !== \"Role Costs\" &&\n              subMenu.display_name !== \"Upload Role Costs\" &&\n              subMenu.display_name !== \"Contract Documents\"\n          );\n        }\n        return menu;\n      });\n\n      getData.forEach((item) => {\n        if (item.display_name === textContent) {\n          setRoutes([item]);\n        }\n      });\n    }\n    )\n  }\n\n  const getCountries = () => {\n    axios\n      .get(baseUrl + `/CostMS/cost/getCountries`)\n      .then((Response) => {\n        let countries = [];\n        let data = Response.data;\n        data.length > 0 &&\n          data.forEach((e) => {\n            let countryObj = {\n              label: e.country_name,\n              value: e.id,\n            };\n            countries.push(countryObj);\n          });\n        setCountry(countries);\n        setSelectedCountry(countries);\n      })\n      .catch((error) => console.log(error));\n  };\n\n  const getBusinessUnit = () => {\n    axios\n      .get(baseUrl + `/CostMS/cost/getDepartments`)\n      .then((Response) => {\n        let countries = [];\n        let data = Response.data;\n        data.length > 0 &&\n          data.forEach((e) => {\n            let countryObj = {\n              label: e.label,\n              value: e.value,\n            };\n            countries.push(countryObj);\n          });\n        setBusiness(countries);\n        setSelectedBusiness(countries);\n      })\n      .catch((error) => console.log(error));\n  };\n\n  const handleClick = () => {\n    GlobalCancel(ref);\n    //setLoaderState(true);\n    const searchInput = document.getElementById(\"searchInput\"); // Replace 'searchInput' with the actual ID of your search input field\n    console.log(searchInput);\n    if (searchInput) {\n      searchInput.value = \"\"; // Clear the search input value\n    }\n\n    if (\n      formData.month == \"\" ||\n      selectedDuration == \"\" ||\n      formData.businessUnit == \"\" ||\n      formData.measure == \"\" ||\n      formData.location == \"\"\n    ) {\n      let valid = GlobalValidation(ref);\n\n      if (valid) {\n        {\n          setValidationMessage(true);\n        }\n        // return;\n      }\n    } else {\n      setValidationMessage(false);\n      setLoaderState(true);\n      abortController.current = new AbortController();\n\n      axios({\n        method: \"post\",\n        url: baseUrl + `/administrationms/HammerTool/getGmaReport`,\n        signal: abortController.current.signal,\n\n        data: {\n          month: formData.month,\n          duration: selectedDuration,\n          businessUnit: formData.businessUnit,\n          measure: formData.measure,\n          location: formData.location,\n        },\n        headers: { \"Content-Type\": \"application/json\" },\n      }).then((response) => {\n        const data = response.data;\n        const Headerdata = [\n          {\n            customer: \"Customer\",\n            project: \"Project\",\n            engName: \"Eng Name\",\n            engCompany: \"Eng Company\",\n            contractTerms: \"Contract Terms\",\n            csl: \"CSL\",\n            dp: \"DP\",\n            industry: \"Industry\",\n            resName: \"Res Name\",\n            emailId: \"Email Id\",\n            resLocation: \"Res Location\",\n            resStDt: \"Res StDt\",\n            resEndDt: \"Res EndDt\",\n            month: \"Month\",\n            revenue: data[0].revenue,\n          },\n        ];\n        let hData = [];\n        let bData = [];\n        let rData = [];\n\n        data.map((element, index) => {\n          if (index == 0) {\n            hData.push(response.data[index]);\n          } else {\n            response.data.map((element) => {\n              if (element == \"id\") {\n                rData.push(element);\n              }\n            });\n            bData.push(response.data[index]);\n          }\n        });\n        setData(Headerdata.concat(bData));\n\n        //setLoaderState(true)\n\n        // setLoaderState(false);\n      });\n      setTimeout(() => {\n        setLoaderState(false);\n        setSearching(true);\n      }, 7000);\n    }\n  };\n  const sortedData = [...data]; // Copy the data array\n  const headerRow = sortedData[0]; // Get the header row\n  const dataRows = sortedData.slice(1); // Get the data rows\n\n  dataRows.sort((a, b) => a.customer.localeCompare(b.customer));\n\n  const sortedAndHeader = [headerRow, ...dataRows];\n  console.log(sortedAndHeader);\n\n  // useEffect(() => {}, [sortedAndHeader]);\n  const handleAbort = () => {\n    abortController.current && abortController.current.abort();\n    setLoaderState(false);\n  };\n  useEffect(() => {\n    effortTypeFnc();\n    getCountries();\n    getBusinessUnit();\n    getMenus()\n  }, []);\n\n  const getMesureId = (e) => {\n    const { value, id } = e.target;\n    setFormData({ ...formData, [id]: value });\n  };\n  const generateDropdownLabel = (selectedOptions, allOptions) => {\n    const selectedValues = selectedOptions.map((option) => option.value);\n    const allValues = allOptions.map((item) => item.value);\n\n    if (selectedValues.length === allValues.length) {\n      return \"<< ALL >>\";\n    } else {\n      return selectedOptions.map((option) => option.label).join(\", \");\n    }\n  };\n  const ArrowRenderer = ({ expanded }) => (\n    <>\n      {expanded ? (\n        <FaCaretDown className=\"chevronIcon\" />\n      ) : (\n        <FaCaretDown className=\"chevronIcon\" />\n      )}\n    </>\n  );\n\n  const handleMonthChange = (selectedMonth) => {\n    setSelectedDuration(\"\");\n\n    const currentMonth = new Date();\n    const monthsDiff =\n      (selectedMonth.getFullYear() - currentMonth.getFullYear()) * 12 +\n      (selectedMonth.getMonth() - currentMonth.getMonth());\n\n    if (monthsDiff < 0) {\n      setDurationOptions(12);\n    } else {\n      setDurationOptions(12 - monthsDiff);\n    }\n    setFormData((prev) => ({\n      ...prev,\n      [\"month\"]: moment(selectedMonth).format(\"yyyy-MM-DD\"),\n    }));\n    SetDate(selectedMonth);\n\n    // setMonth(selectedMonth);\n  };\n  return (\n    <div>\n      <div>\n        <div className=\"col-md-12\">\n          <div className=\"pageTitle\">\n            <div className=\"childOne\"></div>\n            <div className=\"childTwo\">\n              <h2>GMA Report</h2>\n            </div>\n            <div className=\"childThree\"></div>\n          </div>\n        </div>\n        <ScreenBreadcrumbs\n          routes={routes}\n          currentScreenName={currentScreenName}\n        />\n\n        <div className=\"col-md-12  mt-2\">\n          {validationMessage ? (\n            <div className=\"statusMsg error\">\n              {\" \"}\n              <span>\n                {\" \"}\n                <IoWarningOutline /> Please select the valid values for\n                highlighted fields{\" \"}\n              </span>\n            </div>\n          ) : (\n            \"\"\n          )}\n        </div>\n        <div className=\"group mb-3 customCard\">\n          <div className=\"col-md-12 collapseHeader\">\n            <h2>Search Filters</h2>\n            <div\n              onClick={() => {\n                setVisible(!visible);\n                visible\n                  ? setCheveronIcon(FaChevronCircleUp)\n                  : setCheveronIcon(FaChevronCircleDown);\n              }}\n            >\n              <span>{cheveronIcon}</span>\n            </div>\n          </div>\n          <CCollapse visible={!visible}>\n            <div className=\"group-content row\">\n              <div className=\" col-md-4 mb-2\">\n                <div className=\"form-group row\">\n                  <label className=\"col-5\">\n                    Month&nbsp;<span className=\"error-text\"> *</span>\n                  </label>\n                  <span className=\"col-1 p-0\">:</span>\n                  <div className=\"col-6\">\n                    <div\n                      className=\"datepicker\"\n                      ref={(ele) => {\n                        ref.current[0] = ele;\n                      }}\n                    >\n                      <DatePicker\n                        name=\"month\"\n                        id=\"month\"\n                        selected={date}\n                        maxDate={c}\n                        n\n                        onChange={handleMonthChange}\n                        dateFormat=\"MMM-yyyy\"\n                        showMonthYearPicker\n                        placeholderText=\"Start Month\"\n                        onKeyDown={(e) => {\n                          e.preventDefault();\n                        }}\n                        autoComplete=\"off\"\n                      />\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div className=\" col-md-4 mb-2\">\n                <div className=\"form-group row\">\n                  <label className=\"col-5\" htmlFor=\"duration\">\n                    Duration&nbsp; <span className=\"error-text\"> *</span>\n                  </label>\n                  <span className=\"col-1\">:</span>\n                  <div className=\"col-6\">\n                    <select\n                      className=\"error enteredDetails cancel text\"\n                      id=\"duration\"\n                      name=\"duration\"\n                      value={selectedDuration}\n                      onChange={(e) => setSelectedDuration(e.target.value)}\n                      ref={(ele) => {\n                        ref.current[1] = ele;\n                      }}\n                    >\n                      <option value=\"\"> &lt;&lt;Please Select&gt;&gt;</option>\n                      {[...Array(durationOptions)].map((_, index) => (\n                        <option key={index + 1} value={index + 1}>\n                          {index + 1}\n                        </option>\n                      ))}\n                    </select>\n                  </div>\n                </div>\n              </div>\n              <div className=\" col-md-4 mb-2\">\n                <div className=\"form-group row\">\n                  <label className=\"col-5\">\n                    Business Unit&nbsp;<span className=\"error-text\">*</span>\n                  </label>\n                  <span className=\"col-1 p-0\">:</span>\n                  <div\n                    className=\"col-6 multiselect\"\n                    ref={(ele) => {\n                      ref.current[2] = ele;\n                    }}\n                  >\n                    <MultiSelect\n                      id=\"businessUnit\"\n                      ArrowRenderer={ArrowRenderer}\n                      options={business}\n                      hasSelectAll={true}\n                      valueRenderer={generateDropdownLabel}\n                      //shouldToggleOnHover={false}\n                      value={selectedBusiness}\n                      //disableSearch={false}\n                      disabled={false}\n                      // overrideStrings={{\n                      //     selectAllFiltered: \"Select All\",\n                      //     selectSomeItems: \"<< All>>\",\n                      // }}\n                      onChange={(e) => {\n                        setSelectedBusiness(e);\n                        let filteredCountry = [];\n                        e.forEach((d) => {\n                          filteredCountry.push(d.value);\n                        });\n                        setFormData((prevVal) => ({\n                          ...prevVal,\n                          [\"businessUnit\"]: filteredCountry.toString(),\n                        }));\n                      }}\n                    />\n                  </div>\n                </div>\n              </div>\n              <div className=\" col-md-4 mb-2\">\n                <div className=\"form-group row\">\n                  <label className=\"col-5\">\n                    Measures&nbsp;<span className=\"error-text\">*</span>\n                  </label>\n                  <span className=\"col-1 p-0\">:</span>\n                  <div className=\"col-6\">\n                    <select\n                      className=\"text\"\n                      id=\"measure\"\n                      onChange={(e) => getMesureId(e)}\n                      ref={(ele) => {\n                        ref.current[3] = ele;\n                      }}\n                    >\n                      <option value=\"\"> &lt;&lt;Please Select&gt;&gt;</option>\n\n                      <option value=\"638\"> Planned Revenue</option>\n                      <option value=\"965\"> Actual Revenue</option>\n                      <option value=\"639\"> Recognized Revenue</option>\n                      <option value=\"640\"> Resource Direct Cost</option>\n                      <option value=\"641\"> Other Direct Cost</option>\n                    </select>\n                  </div>\n                </div>\n              </div>\n              <div className=\" col-md-4 mb-2\">\n                <div className=\"form-group row\">\n                  <label className=\"col-5\">\n                    Res. Location&nbsp;<span className=\"error-text\">*</span>\n                  </label>\n                  <span className=\"col-1 p-0\">:</span>\n                  <div\n                    className=\"col-6 multiselect\"\n                    ref={(ele) => {\n                      ref.current[4] = ele;\n                    }}\n                  >\n                    <MultiSelect\n                      id=\"location\"\n                      options={country}\n                      hasSelectAll={true}\n                      value={selectedCountry}\n                      disabled={false}\n                      ArrowRenderer={ArrowRenderer}\n                      valueRenderer={generateDropdownLabel}\n                      // overrideStrings={{\n                      //     selectAllFiltered: \"Select All\",\n                      //     selectSomeItems: \"<< All>>\",\n                      // }}\n                      onChange={(e) => {\n                        setSelectedCountry(e);\n                        let filteredCountry = [];\n                        e.forEach((d) => {\n                          filteredCountry.push(d.value);\n                        });\n                        setFormData((prevVal) => ({\n                          ...prevVal,\n                          [\"location\"]: filteredCountry.toString(),\n                        }));\n                      }}\n                    />\n                  </div>\n                </div>\n              </div>\n              <div className=\"col-md-12 col-sm-12 col-xs-12 btn-container center mb-2\">\n                <button\n                  type=\"submit\"\n                  className=\"btn btn-primary\"\n                  title=\"Search\"\n                  onClick={() => handleClick()}\n                >\n                  <FaSearch />\n                  Search\n                </button>\n              </div>\n            </div>\n          </CCollapse>\n        </div>\n        {/* {addVisisble &&\n             <>\n               <div className='group-content row mb-2'>\n              <div class=\"form-group row \">\n                <div className='col-md-3 mt-3'>\n                  <label className='col-3'>Show <select className='col-2'\n                    onChange={(e) => { onChangePractice(e) }}\n                  >\n                    <option value=\"10\">10</option>\n                    <option value=\"15\">15</option>\n                    <option value=\"20\">20</option>\n                    <option value=\"30\">30</option>\n                    <option value=\"50\">50</option>\n                    <option value=\"100\">100</option>\n                  </select> entries\n                  </label>\n                </div>\n                <div className='col-md-7'></div>\n                <div className='col-md-2 mt-2'>\n                  <div class=\"col-5\" ><label>Search:<input type=\"search\" class=\"\" placeholder=\"\"\n                    value={\"\"} aria-controls=\"project_id\" onChange={(e) => handleFilter(e)}\n                  /></label>\n                  </div>\n                </div>\n              </div>\n              \n              </div>\n              <FlatPrimeReactTable data={data} />\n              </>\n              } */}\n      </div>\n      {loaderState ? (\n        <div className=\"loaderBlock\">\n          <Loader handleAbort={handleAbort} />\n        </div>\n      ) : (\n        \"\"\n      )}\n      {searching ? (\n        <DisplayTable\n          data={data}\n          sortedAndHeader={sortedAndHeader}\n          loaderState={loaderState}\n          handleAbort={handleAbort}\n        />\n      ) : (\n        \" \"\n      )}\n    </div>\n  );\n}\n\nexport default GMAReport;\n","import React, { useEffect, useState } from \"react\";\nimport { FilterMatchMode, FilterOperator } from \"primereact/api\";\nimport { DataTable } from \"primereact/datatable\";\nimport { Column } from \"primereact/column\";\nimport \"primeicons/primeicons.css\";\nimport \"primereact/resources/themes/lara-light-indigo/theme.css\";\nimport \"primereact/resources/primereact.css\";\nimport \"primeflex/primeflex.css\";\nimport { InputText } from \"primereact/inputtext\";\nimport \"./ProjectorAes.scss\";\nimport { Link } from \"react-router-dom\";\n\n// C:\\PPM_Rewrite\\PPMRewrite_Local\\PPMRewrite_React\\src\\views\\Administration\\ProjectorAesFlatPrimeReactTable.js\n\nfunction ProjectorAesFlatPrimeReactTable(props) {\n  const {\n    data,\n    rows,\n    col,\n    headerdatagroup,\n    linkColumns,\n    linkColumnsRoutes,\n    rowGroupMode,\n    groupRowsBy,\n  } = props;\n  const [mainData, setMainData] = useState([]);\n  const [headerData, setHeaderData] = useState([]);\n  const [bodyData, setBodyData] = useState([]);\n\n  useEffect(() => {\n    setMainData(JSON.parse(JSON.stringify(data)));\n  }, [data]);\n\n  useEffect(() => {\n    if (mainData.length > 0) {\n      setHeaderData(mainData[0]);\n      setBodyData(mainData.splice(1));\n    }\n  }, [mainData]);\n\n  const filtersData = {\n    contains: { value: null, matchMode: FilterMatchMode.CONTAINS },\n  };\n\n  const [filters1, setFilters1] = useState({\n    global: filtersData[\"contains\"],\n  });\n\n  useEffect(() => {\n    setFilters1({\n      global: filtersData[\"contains\"],\n    });\n  }, [headerData]);\n\n  console.log(\"in line 61\");\n  console.log(filters1);\n  console.log(\"in line 45\");\n  console.log(data);\n\n  const [globalFilterValue1, setGlobalFilterValue1] = useState(\"\");\n\n  const clearFilter1 = () => {\n    initFilters1();\n  };\n\n  const initFilters1 = () => {\n    setGlobalFilterValue1(\"\");\n  };\n\n  const onGlobalFilterChange1 = (e) => {\n    const value = e.target.value;\n    let _filters1 = { ...filters1 };\n\n    console.log(_filters1);\n\n    console.log(_filters1);\n\n    _filters1[\"global\"].value = value;\n\n    setFilters1(_filters1);\n    setGlobalFilterValue1(value);\n  };\n\n  const renderHeader1 = () => {\n    return (\n      <div className=\"flex justify-content-between\">\n        <span></span>\n        <span className=\"p-input-icon-left tableGsearch\">\n          <i className=\"pi pi-search\" />\n          <InputText\n            defaultValue={globalFilterValue1}\n            onChange={onGlobalFilterChange1}\n            placeholder=\"Keyword Search\"\n          />\n        </span>\n      </div>\n    );\n  };\n\n  const LinkTemplate = (data) => {\n    console.log(data);\n    let rou = linkColumnsRoutes[0]?.split(\":\");\n    return (\n      <>\n        <Link target=\"_blank\" to={rou[0] + \":\" + data[rou[1]]}>\n          {data[linkColumns]}\n        </Link>\n      </>\n    );\n  };\n  const ProjName = (data) => {\n    return (\n      <div className=\"ellipsis\" title={data.ProjName}>\n        {data.ProjName}\n      </div>\n    );\n  };\n  const resource = (data) => {\n    return (\n      <div className=\"ellipsis\" title={data.resource}>\n        {data.resource}\n      </div>\n    );\n  };\n\n  const IsActiveChange = (data) => {\n    return (\n      <div className=\"ellipsis\" align=\"center\">\n        {data.isActive == \"-\" ? \"NO\" : data.isActive}\n      </div>\n    );\n  };\n\n  const header1 = renderHeader1();\n\n  const dynamicColumns = Object.keys(headerData)?.map((col, i) => {\n    console.log(col);\n    return (\n      <Column\n        sortable\n        key={col}\n        body={\n          (linkColumns?.includes(col) && LinkTemplate) || col == \"isActive\"\n            ? IsActiveChange\n            : col == \"ProjName\"\n            ? ProjName\n            : col == \"resource\"\n            ? resource\n            : \"\"\n        }\n        field={col}\n        header={headerData[col]}\n      />\n    );\n  });\n\n  return (\n    <div>\n      <div className=\"card\">\n        {Object.keys(headerData).length > 0 && (\n          <DataTable\n            value={bodyData}\n            rowsPerPageOptions={[10, 25, 50]}\n            paginatorTemplate=\"RowsPerPageDropdown FirstPageLink PrevPageLink CurrentPageReport NextPageLink LastPageLink\"\n            currentPageReportTemplate=\"{first} to {last} of {totalRecords}\"\n            paginator\n            showGridlines\n            rows={rows}\n            dataKey=\"id\"\n            filters={filters1}\n            responsiveLayout=\"scroll\"\n            header={header1}\n            emptyMessage=\"No Records found.\"\n            className=\"customerEngament primeReactDataTable\"\n            rowGroupMode={rowGroupMode}\n            groupRowsBy={groupRowsBy}\n          >\n            {/* <Column header={headerdatagroup} colSpan={col} /> */}\n\n            {dynamicColumns}\n          </DataTable>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default ProjectorAesFlatPrimeReactTable;\n","import React from \"react\";\nimport FlatPrimeReactTable from \"../PrimeReactTableComponent/FlatPrimeReactTable\";\nimport { environment } from \"../../environments/environment\";\nimport { MdOutlinePlaylistAdd } from \"react-icons/md\";\nimport axios from \"axios\";\nimport { FaSave } from \"react-icons/fa\";\nimport { useEffect, useState, useRef } from \"react\";\nimport { CModal, CModalHeader, CModalTitle } from \"@coreui/react\";\nimport { ReactSearchAutocomplete } from \"react-search-autocomplete\";\nimport GlobalValidation from \"../ValidationComponent/GlobalValidation\";\nimport { AiFillWarning } from \"react-icons/ai\";\nimport { ImCross } from \"react-icons/im\";\nimport { Column } from \"primereact/column\";\nimport ProjectorAesFlatPrimeReactTable from \"./ProjectorAesFlatPrimeReactTable\";\nimport { BiCheck } from \"react-icons/bi\";\nimport GlobalHelp from \"../PrimeReactTableComponent/GlobalHelp\";\nimport ScreenBreadcrumbs from \"../Common/ScreenBreadcrumbs\";\n\nfunction ProjectorAes() {\n  const [data, setData] = useState([{}]);\n  const [item, setItem] = useState([]);\n  const [successmsg, setSuccessMessage] = useState(false);\n\n  const loggedUserId = localStorage.getItem(\"resId\");\n  const [routes, setRoutes] = useState([]);\n  let currentScreenName = [\"Hammer Tool\", \"Projector AES\"];\n  let textContent = \"Administration\";\n\n  const baseUrl = environment.baseUrl;\n  const [buttonPopup, setButtonPopup] = useState(false);\n  const rows = 25;\n  const getData = () => {\n    axios\n      .get(\n        baseUrl +\n        // `http://localhost:8090/administrationms/getProjectAES`,)\n        `/administrationms/getProjectAES`\n      )\n      .then((res) => {\n        const GetData = res.data;\n        const Headerdata = [\n          {\n            ProjName: \"Projector Name\",\n            resource: \"Resource\",\n            isActive: \"Is Active\",\n          },\n        ];\n        for (let i = 0; i < GetData.length; i++) {\n          GetData[i][\"isActive\"] =\n            GetData[i][\"isActive\"] == null ? \"-\" : GetData[i][\"isActive\"];\n        }\n        setData(Headerdata.concat(GetData));\n        console.log(data);\n      })\n      .catch((error) => {\n        console.log(\"Error :\" + error);\n      });\n  };\n\n  const getMenus = () => {\n    axios({\n      method: \"GET\",\n      url: baseUrl + `/CommonMS/master/getMenus?loggedUserId=${loggedUserId}`,\n    }).then((resp) => {\n      let getData = resp.data.map((menu) => {\n        if (menu.subMenus) {\n          menu.subMenus = menu.subMenus.filter(\n            (subMenu) =>\n              subMenu.display_name !== \"Roles Permissions\" &&\n              subMenu.display_name !== \"Sales Permissions\" &&\n              subMenu.display_name !== \"Jobs Daily Status\" &&\n              subMenu.display_name !== \"Error Logs\" &&\n              subMenu.id != 27 &&\n              subMenu.display_name !== \"Tracker\" &&\n              subMenu.display_name !== \"Role Costs\" &&\n              subMenu.display_name !== \"Upload Role Costs\" &&\n              subMenu.display_name !== \"Contract Documents\"\n          );\n        }\n        return menu;\n      });\n\n      getData.forEach((item) => {\n        if (item.display_name === textContent) {\n          setRoutes([item]);\n        }\n      });\n    }\n    )\n  }\n  useEffect(() => {\n    getData();\n    getMenus()\n  }, []);\n\n  const clickHanlder = () => {\n    console.log(data);\n    setButtonPopup(true);\n    // ProjName\n  };\n\n  const HelpPDFName = \"ProjectorAES.pdf\";\n  const Headername = \"Projector AES Help\";\n  return (\n    <div>\n      <div className=\"col-md-12\">\n        {successmsg ? (\n          <div className=\"statusMsg success\">\n            <span className=\"errMsg\">\n              <BiCheck size=\"1.4em\" strokeWidth={{ width: \"100px\" }} /> &nbsp;\n              Projector name added successfully\n            </span>\n          </div>\n        ) : (\n          \"\"\n        )}\n        <div className=\"pageTitle\">\n          <div className=\"childOne\"></div>\n          <div className=\"childTwo\">\n            <h2>Projector AES</h2>\n          </div>\n          <div className=\"childThree\"></div>\n        </div>\n      </div>\n      <ScreenBreadcrumbs\n        routes={routes}\n        currentScreenName={currentScreenName}\n      />\n      <div className=\"helpBtn\" style={{ float: \"right\", paddingTop: \"5px\" }}>\n        <GlobalHelp pdfname={HelpPDFName} name={Headername} />\n      </div>\n\n      <div className=\"col-6 mt-2 \">\n        <ProjectorAesFlatPrimeReactTable data={data} rows={rows} />\n\n        <center>\n          <button\n            type=\"button\"\n            className=\"btn btn-primary my-2 btn-container  \"\n            onClick={() => {\n              clickHanlder();\n            }}\n          >\n            {\" \"}\n            <MdOutlinePlaylistAdd />\n            Add\n          </button>\n        </center>\n      </div>\n      {buttonPopup ? (\n        <ProjectorAesPOPup\n          buttonPopup={buttonPopup}\n          setButtonPopup={setButtonPopup}\n          setSuccessMessage={setSuccessMessage}\n          data={data}\n        />\n      ) : (\n        \"\"\n      )}\n    </div>\n  );\n\n  function ProjectorAesPOPup(props) {\n    const { buttonPopup, data, setSuccessMessage } = props;\n    const intialValue = { resourceFullName: \"\", userId: \"\", isActive: \"\" };\n    const [formData, setFormData] = useState(intialValue);\n    const [riskDetails, setRiskDetails] = useState([]);\n    const ref = useRef([]);\n    const [validationmessage, setValidationMessage] = useState(false);\n    const [uniquemessage, setUniqueMessage] = useState(false);\n\n    console.log(formData);\n\n    const onSaveClick = () => {\n      // console.log(ref);\n      let valid = GlobalValidation(ref);\n      console.log(valid);\n      if (valid == true) {\n        setValidationMessage(true);\n      }\n      if (valid) {\n        return;\n      }\n\n      let someData = data.some((d) => d.ProjName == formData.resourceFullName);\n      // console.log(someData);\n\n      if (someData) {\n        let ele = document.getElementsByClassName(\"unique\");\n        console.log(ele.length);\n        for (let index = 0; index < ele.length; index++) {\n          ele[index].classList.add(\"error-block\");\n        }\n        setUniqueMessage(true);\n\n        return;\n      }\n      setUniqueMessage(false);\n\n      axios({\n        method: \"post\",\n        url: baseUrl + `/administrationms/createProjectAES`,\n\n        data: formData,\n      }).then(function (res) {\n        var resp = res.data;\n        setFormData(resp);\n        setButtonPopup(false);\n        setSuccessMessage(true);\n        getData();\n        setTimeout(() => {\n          setSuccessMessage(false);\n        }, 3000);\n      });\n      // }\n    };\n\n    const onCancelClick = () => {\n      setButtonPopup(false);\n    };\n\n    const getDataa = () => {\n      axios({\n        method: \"get\",\n        url: baseUrl + `/ProjectMS/risks/getAssignedData`,\n      }).then(function (response) {\n        var res = response.data;\n        setRiskDetails(res);\n        // console.log(\"assigned data\")\n        // console.log(res);\n      });\n    };\n    useEffect(() => { }, [riskDetails]);\n\n    useEffect(() => {\n      getDataa();\n    }, []);\n\n    return (\n      <div className=\"col-md-12\">\n        <CModal\n          visible={buttonPopup}\n          onClose={() => setButtonPopup(false)}\n          size=\"xs\"\n          className=\" ui-dialog\"\n          backdrop={\"static\"}\n        >\n          <CModalHeader className=\"hgt22\">\n            <CModalTitle>\n              <span className=\"ft16\">Projector AES</span>\n            </CModalTitle>\n          </CModalHeader>\n          <div>\n            {validationmessage ? (\n              <div className=\" ml-3 mr-4 statusMsg error\">\n                <AiFillWarning />\n                Please select valid values for highlighted fields\n              </div>\n            ) : (\n              \"\"\n            )}\n            {uniquemessage ? (\n              <div className=\" ml-3 mr-4 statusMsg error\">\n                <AiFillWarning /> Please select unique name\n              </div>\n            ) : (\n              \"\"\n            )}\n\n            <div className=\"group-content row\">\n              <div className=\"form-group row\">\n                {/* <label className=\"col-4 pl-5\">Projector Name <span className=\"col-1 p-0 error-text\">*</span> </label> */}\n                <label className=\"col-4 pl-5\">\n                  Projector Name{\" \"}\n                  <span\n                    className=\"col-1 p-0 error-text\"\n                    style={{ marginLeft: \"5px\" }}\n                  >\n                    *\n                  </span>\n                </label>\n\n                <span className=\"col-1 p-0\">:</span>\n                <span className=\"col-6 pl-0\">\n                  <div\n                    className=\"textfield\"\n                    ref={(ele) => {\n                      ref.current[0] = ele;\n                    }}\n                  >\n                    <input\n                      type=\"text\"\n                      id=\"resourceFullName\"\n                      className=\"validCheck unique\"\n                      onKeyDown={(event) => {\n                        if (event.code == \"Space\" && !formData.resourceFullName)\n                          event.preventDefault();\n                      }}\n                      onChange={(e) => {\n                        setFormData({\n                          ...formData,\n                          [\"resourceFullName\"]: e.target.value,\n                        });\n                        console.log(e.target.value);\n                      }}\n                    ></input>\n                  </div>\n                </span>\n              </div>\n              <br></br>\n              &nbsp;\n              <div className=\"form-group row \">\n                <label className=\"col-4 pl-5 \">\n                  Resource Name{\" \"}\n                  <span\n                    className=\"col-1 p-0 error-text\"\n                    style={{ marginLeft: \"5px\" }}\n                  >\n                    *\n                  </span>\n                </label>\n\n                <span className=\"col-1 p-0\">:</span>\n                <div\n                  className=\"col-6 autocomplete pl-0\"\n                  name=\"Assigned_To\"\n                  id=\"userId\"\n                  ref={(ele) => {\n                    ref.current[1] = ele;\n                  }}\n                >\n                  <div className=\"autoComplete-container react mt-2 \">\n                    <ReactSearchAutocomplete\n                      items={riskDetails}\n                      type=\"Text\"\n                      name=\"Assigned_To\"\n                      id=\"userId\"\n                      placeholder=\"Enter Resource Name\"\n                      riskDetails={riskDetails}\n                      getData={getData}\n                      className=\"AutoComplete\"\n                      onSelect={(e) => {\n                        setFormData((prevProps) => ({\n                          ...prevProps,\n                          userId: e.id,\n                        }));\n                        console.log(e);\n                      }}\n                      showIcon={false}\n                    />\n                    <span>{item.name}</span>\n                    {/* &nbsp; */}\n                  </div>\n                </div>\n              </div>\n              <div className=\"form-group row mt-2\">\n                <label className=\"col-4 pl-5\">Is Active</label>\n                <span className=\"col-1 p-0\">:</span>\n                <span className=\"col-6  pl-0 align-self-center\">\n                  <input\n                    type=\"checkbox\"\n                    onChange={(e) => {\n                      setFormData({\n                        ...formData,\n                        [\"isActive\"]: e.target.value === \"on\" ? \"1\" : \"0\",\n                      });\n                      console.log(e.target.value === \"on\" ? \"1\" : \"0\");\n                    }}\n                    style={{ marginTop: \"5px\" }} // add margin-top here\n                  ></input>\n                </span>\n              </div>\n              &nbsp; &nbsp;\n              <div className=\"col-md-12 col-sm-12 col-xs-12 my-2 btn-container center\">\n                &nbsp; &nbsp;\n                <button\n                  type=\"button\"\n                  className=\"btn btn-primary\"\n                  onClick={onSaveClick}\n                >\n                  <FaSave /> Save{\" \"}\n                </button>\n                <button\n                  type=\"button\"\n                  className=\"btn btn-primary\"\n                  onClick={onCancelClick}\n                >\n                  {\" \"}\n                  <ImCross />\n                  Cancel{\" \"}\n                </button>\n              </div>\n            </div>\n          </div>\n        </CModal>\n      </div>\n    );\n  }\n}\nexport default ProjectorAes;\n","import React from \"react\";\nimport {\n  FaCaretDown,\n  FaSearch,\n  FaChevronCircleUp,\n  FaChevronCircleDown,\n} from \"react-icons/fa\";\nimport { useEffect, useState, useRef } from \"react\";\nimport axios from \"axios\";\nimport { environment } from \"../../environments/environment\";\nimport Loader from \"../Loader/Loader\";\nimport CellRendererPrimeReactDataTable from \"../PrimeReactTableComponent/CellRendererPrimeReactDataTable\";\nimport { MultiSelect } from \"react-multi-select-component\";\nimport { Column } from \"primereact/column\";\nimport GlobalValidation from \"../ValidationComponent/GlobalValidation\";\nimport { IoWarningOutline } from \"react-icons/io5\";\n\nimport { CCollapse, CListGroup } from \"@coreui/react\";\nimport ScreenBreadcrumbs from \"../Common/ScreenBreadcrumbs\";\n\nconst DisplayTable = (props) => {\n  const { data, headerData, setHeaderData } = props;\n  const [exportData, setExportData] = useState([]);\n\n  useEffect(() => {\n    data[0] && setHeaderData(JSON.parse(JSON.stringify(data[0])));\n    let imp = [\"XLS\"];\n    setExportData(imp);\n  }, [data]);\n  const Toggletooltip = (data) => {\n    return (\n      <div\n        data-toggle=\"tooltip\"\n        className=\"ellipsis\"\n        title={data[\"Engagement Name\"]}\n      >\n        {data[\"Engagement Name\"]}\n      </div>\n    );\n  };\n  const Toggletooltip2 = (data) => {\n    return (\n      <div data-toggle=\"tooltip\" className=\"ellipsis\" title={data[\"customer\"]}>\n        {data[\"customer\"]}\n      </div>\n    );\n  };\n  const Toggletooltip3 = (data) => {\n    return (\n      <div\n        data-toggle=\"tooltip\"\n        className=\"ellipsis\"\n        title={data[\"Engagement Company\"]}\n      >\n        {data[\"Engagement Company\"]}\n      </div>\n    );\n  };\n  const Toggletooltip4 = (data) => {\n    return (\n      <div\n        data-toggle=\"tooltip\"\n        className=\"ellipsis\"\n        title={data[\"Sales Executive\"]}\n      >\n        {data[\"Sales Executive\"]}\n      </div>\n    );\n  };\n  const Toggletooltip5 = (data) => {\n    return (\n      <div data-toggle=\"tooltip\" className=\"ellipsis\" title={data[\"CSL\"]}>\n        {data[\"CSL\"]}\n      </div>\n    );\n  };\n  const Toggletooltip6 = (data) => {\n    return (\n      <div data-toggle=\"tooltip\" className=\"ellipsis\" title={data[\"DP\"]}>\n        {data[\"DP\"]}\n      </div>\n    );\n  };\n  const Toggletooltip7 = (data) => {\n    return (\n      <div\n        data-toggle=\"tooltip\"\n        className=\"ellipsis\"\n        title={data[\"Start Date\"]}\n      >\n        {data[\"Start Date\"]}\n      </div>\n    );\n  };\n  const Toggletooltip8 = (data) => {\n    return (\n      <div data-toggle=\"tooltip\" className=\"ellipsis\" title={data[\"End Date\"]}>\n        {data[\"End Date\"]}\n      </div>\n    );\n  };\n\n  const dynamicColumns = Object.keys(headerData)?.map((col, i) => {\n    return (\n      <Column\n        sortable\n        key={col}\n        body={\n          col == \"Engagement Name\"\n            ? Toggletooltip\n            : col == \"customer\"\n              ? Toggletooltip2\n              : col == \"Engagement Company\"\n                ? Toggletooltip3\n                : col == \"Sales Executive\"\n                  ? Toggletooltip4\n                  : col == \"CSL\"\n                    ? Toggletooltip5\n                    : col == \"DP\"\n                      ? Toggletooltip6\n                      : col == \"Start Date\"\n                        ? Toggletooltip7\n                        : col == \"End Date\" && Toggletooltip8\n        }\n        field={col}\n        header={headerData[col]}\n      />\n    );\n  });\n  useEffect(() => {\n    data[0] && setHeaderData(JSON.parse(JSON.stringify(data[0])));\n  }, [data]);\n\n  return (\n    <div>\n      {/* <FlatPrimeReactTable\n             data={data}\n             rows={rows}     \n             /> */}\n      <CellRendererPrimeReactDataTable\n        fileName={\"EngagementDetailsData\"}\n        exportData={exportData}\n        data={data}\n        dynamicColumns={dynamicColumns}\n        headerData={headerData}\n        setHeaderData={setHeaderData}\n        rows={10}\n      />\n    </div>\n  );\n};\n\nfunction EngagementDetails() {\n  const [headerData, setHeaderData] = useState([]);\n  const [data, setData] = useState([{}]);\n  const baseUrl = environment.baseUrl;\n  const [customer, setCustomer] = useState([]);\n\n  const [selectedCustomer, setSelectedCustomer] = useState([]);\n  const [csl, setCsl] = useState([]);\n  const [selectedCsl, setSelectedCsl] = useState([]);\n  const [dp, setDp] = useState([]);\n  const [selectedDp, setSelectedDp] = useState([]);\n  const [searching, setSearching] = useState(false);\n  const [loader, setLoader] = useState(false);\n  const intialValue = { customers: \"-1\", csl: \"-1\", Dp: \"-1\" };\n  const [formData, setFormData] = useState(intialValue);\n  const ref = useRef([]);\n  const [validationmessage, setValidationMessage] = useState(false);\n  const [cheveronIcon, setCheveronIcon] = useState(FaChevronCircleUp);\n  const [visible, setVisible] = useState(false);\n\n  // const [details, setDetails] = useState({ customers: \"\",  csl: \"\",Dp: \"\" })\n  const abortController = useRef(null);\n  const loggedUserId = localStorage.getItem(\"resId\");\n  const [routes, setRoutes] = useState([]);\n  let currentScreenName = [\"Hammer Tool\", \"Engagements Details\"];\n  let textContent = \"Administration\";\n\n  const handleCustomer = () => {\n    axios({\n      method: \"get\",\n      url: baseUrl + `/ProjectMS/Engagement/getCustomerName`,\n    }).then((res) => {\n      let custom = [];\n\n      let data = res.data;\n      data.length > 0 &&\n        data.forEach((e) => {\n          let customerObj = {\n            label: e.full_name,\n            value: e.id,\n          };\n          custom.push(customerObj);\n        });\n\n      setCustomer(custom);\n      setSelectedCustomer(custom);\n    });\n  };\n  useEffect(() => { }, [formData?.customers]);\n\n  const handleCsl = () => {\n    const loggedUser = \"0\";\n    axios({\n      method: \"get\",\n      url:\n        baseUrl +\n        `/SalesMS/MasterController/getCslDropDownData?userId=${loggedUser}`,\n    }).then((res) => {\n      let custom = [];\n\n      let data = res.data;\n      data.length > 0 &&\n        data.forEach((e) => {\n          let cslObj = {\n            label: e.PersonName,\n            value: e.id,\n          };\n          custom.push(cslObj);\n        });\n\n      setCsl(custom);\n      setSelectedCsl(custom);\n    });\n  };\n  const handleDp = () => {\n    const loggedUser = \"0\";\n    axios({\n      method: \"get\",\n      url: baseUrl + `/CommonMS/master/getDPDropDownData?userId=${loggedUser}`,\n    }).then((res) => {\n      let custom = [];\n\n      let data = res.data;\n      data.length > 0 &&\n        data.forEach((e) => {\n          let dpObj = {\n            label: e.PersonName,\n            value: e.id,\n          };\n          custom.push(dpObj);\n        });\n\n      setDp(custom);\n      setSelectedDp(custom);\n    });\n  };\n\n  useEffect(() => {\n    handleCustomer();\n    handleCsl();\n    handleDp();\n    // onSearchClick();\n    getMenus()\n  }, []);\n\n  const getMenus = () => {\n    axios({\n      method: \"GET\",\n      url: baseUrl + `/CommonMS/master/getMenus?loggedUserId=${loggedUserId}`,\n    }).then((resp) => {\n      let getData = resp.data.map((menu) => {\n        if (menu.subMenus) {\n          menu.subMenus = menu.subMenus.filter(\n            (subMenu) =>\n              subMenu.display_name !== \"Roles Permissions\" &&\n              subMenu.display_name !== \"Sales Permissions\" &&\n              subMenu.display_name !== \"Jobs Daily Status\" &&\n              subMenu.display_name !== \"Error Logs\" &&\n              subMenu.id != 27 &&\n              subMenu.display_name !== \"Tracker\" &&\n              subMenu.display_name !== \"Role Costs\" &&\n              subMenu.display_name !== \"Upload Role Costs\" &&\n              subMenu.display_name !== \"Contract Documents\"\n          );\n        }\n        return menu;\n      });\n\n      getData.forEach((item) => {\n        if (item.display_name === textContent) {\n          setRoutes([item]);\n        }\n      });\n    }\n    )\n  }\n  console.log(formData.csl?.length);\n  console.log(formData.Dp?.length);\n  const onSearchClick = () => {\n    let valid = GlobalValidation(ref);\n    if (valid == true) {\n      setValidationMessage(true);\n    }\n    // setValidationMessage(false)\n    if (valid) {\n      return;\n    }\n    setLoader(true);\n    axios({\n      method: \"post\",\n      url:\n        baseUrl +\n        `/administrationms/getEngagementDetails?customers=${formData.customers?.length > 2304 || formData.customers == undefined\n          ? -1\n          : formData.customers\n        }&csl=${formData.csl?.length > 217 || formData.csl == undefined\n          ? -1\n          : formData.csl\n        }&Dp=${formData.Dp?.length > 248 || formData.Dp == undefined\n          ? -1\n          : formData.Dp\n        }`,\n    }).then((res) => {\n      const GetData = res.data;\n      const Headerdata = [\n        {\n          customer: \"Customer\",\n          \"Engagement Name\": \"Engagement Name\",\n          \"Engagement Company\": \"Engagement Company\",\n          \"Sales Executive\": \"Sales Executive\",\n          CSL: \"CSL\",\n          DP: \" DP\",\n          \"Start Date\": \"Start Date\",\n          \"End Date\": \"End Date\",\n        },\n      ];\n      setData(Headerdata.concat(GetData));\n      setTimeout(() => {\n        setLoader(false);\n        setSearching(true);\n        setValidationMessage(false);\n      }, 1000);\n    });\n  };\n  const generateDropdownLabel = (selectedOptions, allOptions) => {\n    const selectedValues = selectedOptions.map((option) => option.value);\n    const allValues = allOptions.map((item) => item.value);\n\n    if (selectedValues.length === allValues.length) {\n      return \"<< ALL >>\";\n    } else {\n      return selectedOptions.map((option) => option.label).join(\", \");\n    }\n  };\n  const ArrowRenderer = ({ expanded }) => (\n    <>\n      {expanded ? (\n        <FaCaretDown className=\"chevronIcon\" />\n      ) : (\n        <FaCaretDown className=\"chevronIcon\" />\n      )}\n    </>\n  );\n  const handleAbort = () => {\n    abortController.current && abortController.current.abort();\n    setLoader(false);\n  };\n  return (\n    <div>\n      <div className=\"col-md-12\">\n        <div className=\"pageTitle\">\n          <div className=\"childOne\"></div>\n          <div className=\"childTwo\">\n            <h2>Engagements Details</h2>\n          </div>\n          <div className=\"childThree\"></div>\n        </div>\n      </div>\n\n      <ScreenBreadcrumbs\n        routes={routes}\n        currentScreenName={currentScreenName}\n      />\n\n      <div className=\"col-md-12  mt-2\">\n        {validationmessage ? (\n          <div className=\"statusMsg error\">\n            {\" \"}\n            <span>\n              {\" \"}\n              <IoWarningOutline /> Please select the valid values for\n              highlighted fields{\" \"}\n            </span>\n          </div>\n        ) : (\n          \"\"\n        )}\n      </div>\n      <div className=\"group mb-3 customCard\">\n        <div className=\"col-md-12 collapseHeader\">\n          <h2>Search Filters</h2>\n\n          <div\n            onClick={() => {\n              setVisible(!visible);\n              visible\n                ? setCheveronIcon(FaChevronCircleUp)\n                : setCheveronIcon(FaChevronCircleDown);\n            }}\n          >\n            <span>{cheveronIcon}</span>\n          </div>\n        </div>\n        <CCollapse visible={!visible}>\n          <div className=\"group-content row\">\n            <div className=\" col-md-4 mb-2\">\n              <div className=\"form-group row\">\n                <label className=\"col-5\" htmlFor=\"Customers\">\n                  Customers&nbsp;<span className=\"col-1 p-0 error-text\">*</span>\n                </label>\n                <span className=\"col-1\">:</span>\n                <div\n                  className=\"col-6 multiselect\"\n                  ref={(ele) => {\n                    ref.current[0] = ele;\n                  }}\n                >\n                  {/* fordropdown */}\n                  {/* <select\n                                name=\"customers\"\n                                id=\"customers\"\n                                onChange={handleChange}\n                            >\n                                <option value=\"-1\"> &lt;&lt;ALL&gt;&gt;</option>\n                                {customer?.map((Item) => (\n                                    <option key={Item.id} value={Item.id}>\n                                        {Item.name}\n                                    </option>\n                                ))}\n                            </select> */}\n\n                  <MultiSelect\n                    ArrowRenderer={ArrowRenderer}\n                    valueRenderer={generateDropdownLabel}\n                    id=\"customers\"\n                    options={customer}\n                    hasSelectAll={true}\n                    value={selectedCustomer}\n                    shouldToggleOnHover={false}\n                    selected={selectedCustomer}\n                    onChange={(e) => {\n                      setSelectedCustomer(e);\n                      let filteredCustomer = [];\n                      e.forEach((d) => {\n                        filteredCustomer.push(d.value);\n                      });\n                      console.log(filteredCustomer.length);\n                      setFormData((prevVal) => ({\n                        ...prevVal,\n                        [\"customers\"]: filteredCustomer.toString(),\n                      }));\n\n                      console.log(formData?.customers);\n                    }}\n                  />\n                </div>\n              </div>\n            </div>\n            <div className=\"col-md-4 mb-2\">\n              <div className=\"form-group row\">\n                <label className=\"col-5\" htmlFor=\"csl\">\n                  CSL&nbsp;<span className=\"col-1 p-0 error-text\">*</span>\n                </label>\n                <span className=\"col-1\">:</span>\n                <div\n                  className=\"col-6 multiselect\"\n                  ref={(ele) => {\n                    ref.current[1] = ele;\n                  }}\n                >\n                  <MultiSelect\n                    ArrowRenderer={ArrowRenderer}\n                    valueRenderer={generateDropdownLabel}\n                    id=\"csl\"\n                    options={csl}\n                    hasSelectAll={true}\n                    value={selectedCsl}\n                    shouldToggleOnHover={false}\n                    disableSearch={false}\n                    selected={selectedCsl}\n                    disabled={false}\n                    onChange={(e) => {\n                      setSelectedCsl(e);\n                      let filteredCustomer = [];\n                      e.forEach((d) => {\n                        filteredCustomer.push(d.value);\n                      });\n                      setFormData((prevVal) => ({\n                        ...prevVal,\n                        [\"csl\"]: filteredCustomer.toString(),\n                      }));\n                    }}\n                  />\n                </div>\n              </div>\n            </div>\n            <div className=\"col-md-4 mb-2\">\n              <div className=\"form-group row\">\n                <label className=\"col-5\" htmlFor=\"Dp\">\n                  DP&nbsp;<span className=\"col-1 p-0 error-text\">*</span>\n                </label>\n                <span className=\"col-1\">:</span>\n                <div\n                  className=\"col-6 multiselect\"\n                  ref={(ele) => {\n                    ref.current[2] = ele;\n                  }}\n                >\n                  <MultiSelect\n                    ArrowRenderer={ArrowRenderer}\n                    valueRenderer={generateDropdownLabel}\n                    id=\"Dp\"\n                    options={dp}\n                    hasSelectAll={true}\n                    value={selectedDp}\n                    shouldToggleOnHover={false}\n                    disableSearch={false}\n                    selected={selectedDp}\n                    disabled={false}\n                    onChange={(e) => {\n                      setSelectedDp(e);\n                      let filteredCustomer = [];\n                      e.forEach((d) => {\n                        filteredCustomer.push(d.value);\n                      });\n                      setFormData((prevVal) => ({\n                        ...prevVal,\n                        [\"Dp\"]: filteredCustomer.toString(),\n                      }));\n                    }}\n                  />\n                </div>\n              </div>\n            </div>\n            <div className=\"col-md-12 col-sm-12 col-xs-12 mt-2 btn-container center \">\n              <button\n                type=\"submit\"\n                className=\"btn btn-primary\"\n                title=\"Search\"\n                onClick={onSearchClick}\n              >\n                <FaSearch />\n                Search\n              </button>\n            </div>\n          </div>\n        </CCollapse>\n      </div>\n      &nbsp;\n      {loader ? <Loader handleAbort={handleAbort} /> : \"\"}\n      {searching ? (\n        <DisplayTable\n          data={data}\n          headerData={headerData}\n          setHeaderData={setHeaderData}\n        />\n      ) : (\n        \" \"\n      )}\n    </div>\n  );\n}\n\nexport default EngagementDetails;\n","import React, { useEffect, useState } from \"react\";\nimport { FilterMatchMode, FilterOperator } from \"primereact/api\";\nimport { DataTable } from \"primereact/datatable\";\nimport { Column } from \"primereact/column\";\nimport \"primeicons/primeicons.css\";\nimport \"primereact/resources/themes/lara-light-indigo/theme.css\";\nimport \"primereact/resources/primereact.css\";\nimport \"primeflex/primeflex.css\";\nimport { InputText } from \"primereact/inputtext\";\nimport \"./TrackerScreenAdder.scss\";\nimport { Link } from \"react-router-dom\";\n\n// C:\\PPM_Rewrite\\PPMRewrite_Local\\PPMRewrite_React\\src\\views\\Administration\\TrackerScreenFlatPrimeReactTable.js\n\nfunction TrackerScreenFlatPrimeReactTable(props) {\n  const {\n    data,\n    rows,\n    col,\n    headerdatagroup,\n    linkColumns,\n    linkColumnsRoutes,\n    rowGroupMode,\n    groupRowsBy,\n  } = props;\n  const [mainData, setMainData] = useState([]);\n  const [headerData, setHeaderData] = useState([]);\n  const [bodyData, setBodyData] = useState([]);\n\n  useEffect(() => {\n    setMainData(JSON.parse(JSON.stringify(data)));\n  }, [data]);\n\n  useEffect(() => {\n    if (mainData.length > 0) {\n      setHeaderData(mainData[0]);\n      setBodyData(mainData.splice(1));\n    }\n  }, [mainData]);\n\n  const filtersData = {\n    contains: { value: null, matchMode: FilterMatchMode.CONTAINS },\n  };\n\n  const [filters1, setFilters1] = useState({\n    global: filtersData[\"contains\"],\n  });\n\n  useEffect(() => {\n    setFilters1({\n      global: filtersData[\"contains\"],\n    });\n  }, [headerData]);\n\n  const [globalFilterValue1, setGlobalFilterValue1] = useState(\"\");\n\n  const clearFilter1 = () => {\n    initFilters1();\n  };\n\n  const initFilters1 = () => {\n    setGlobalFilterValue1(\"\");\n  };\n\n  const onGlobalFilterChange1 = (e) => {\n    const value = e.target.value;\n    let _filters1 = { ...filters1 };\n\n    console.log(_filters1);\n\n    console.log(_filters1);\n\n    _filters1[\"global\"].value = value;\n\n    setFilters1(_filters1);\n    setGlobalFilterValue1(value);\n  };\n\n  const renderHeader1 = () => {\n    return (\n      <div className=\"flex justify-content-between\">\n        <span></span>\n        <span className=\"p-input-icon-left tableGsearch\">\n          <i className=\"pi pi-search\" />\n          <InputText\n            defaultValue={globalFilterValue1}\n            onChange={onGlobalFilterChange1}\n            placeholder=\"Keyword Search\"\n          />\n        </span>\n      </div>\n    );\n  };\n\n  const LinkTemplate = (data) => {\n    console.log(data);\n    let rou = linkColumnsRoutes[0]?.split(\":\");\n    return (\n      <>\n        <Link target=\"_blank\" to={rou[0] + \":\" + data[rou[1]]}>\n          {data[linkColumns]}\n        </Link>\n      </>\n    );\n  };\n  const ScreenName = (data) => {\n    return (\n      <div className=\"ellipsis\" title={data.screenName}>\n        {data.screenName}\n      </div>\n    );\n  };\n  const header1 = renderHeader1();\n\n  const dynamicColumns = Object.keys(headerData)?.map((col, i) => {\n    console.log(col);\n    return (\n      <Column\n        key={col}\n        sortable\n        style={col === \"S.No\" ? { width: \"5%\", textAlign: \"center\" } : {}}\n        body={\n          linkColumns?.includes(col)\n            ? LinkTemplate\n            : col === \"screenName\" && ScreenName\n        }\n        field={col}\n        header={headerData[col]}\n      />\n    );\n  });\n\n  return (\n    <div>\n      <div className=\"card col-6\">\n        {Object.keys(headerData).length > 0 && (\n          <DataTable\n            rowsPerPageOptions={[10, 20, 30]}\n            paginatorTemplate=\"RowsPerPageDropdown FirstPageLink PrevPageLink CurrentPageReport NextPageLink LastPageLink\"\n            currentPageReportTemplate=\"{first} to {last} of {totalRecords}\"\n            value={bodyData}\n            paginator\n            showGridlines\n            rows={rows}\n            dataKey=\"id\"\n            filters={filters1}\n            responsiveLayout=\"scroll\"\n            header={header1}\n            emptyMessage=\"No Records found.\"\n            className=\"customerEngament primeReactDataTable\"\n            rowGroupMode={rowGroupMode}\n            groupRowsBy={groupRowsBy}\n          >\n            {/* <Column header={headerdatagroup} colSpan={col} /> */}\n\n            {dynamicColumns}\n          </DataTable>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default TrackerScreenFlatPrimeReactTable;\n","import React from \"react\";\nimport axios from \"axios\";\nimport { useEffect, useState, useRef } from \"react\";\nimport FlatPrimeReactTable from \"../PrimeReactTableComponent/FlatPrimeReactTable\";\nimport { CModal, CModalHeader, CModalTitle, CModalBody } from \"@coreui/react\";\nimport { MdOutlinePlaylistAdd } from \"react-icons/md\";\nimport CheckFlatPrimeReactTable from \"../PrimeReactTableComponent/CheckFlatPrimeReactTable\";\nimport { environment } from \"../../environments/environment\";\nimport { AiFillWarning } from \"react-icons/ai\";\nimport { ImCross } from \"react-icons/im\";\nimport GlobalValidation from \"../ValidationComponent/GlobalValidation\";\nimport { BiCheck } from \"react-icons/bi\";\nimport CellRendererPrimeReactDataTable from \"../PrimeReactTableComponent/CellRendererPrimeReactDataTable\";\nimport TrackerScreenFlatPrimeReactTable from \"./TrackerScreenFlatPrimeReactTable\";\nimport { FaSave } from \"react-icons/fa\";\nimport ScreenBreadcrumbs from \"../Common/ScreenBreadcrumbs\";\n\nfunction TrackerScreensAdder() {\n  const [data, setData] = useState([{}]);\n  const [buttonPopup, setButtonPopup] = useState(false);\n  const intialValue = { id: \"\", displayName: \"\" };\n  const [formData, setFormData] = useState(intialValue);\n  const [successmsg, setSuccessMessage] = useState(false);\n  const rows = 20;\n  const baseUrl = environment.baseUrl;\n  const value = \"trackerscreensadder\";\n\n  const loggedUserId = localStorage.getItem(\"resId\");\n  const [routes, setRoutes] = useState([]);\n  let currentScreenName = [\"Hammer Tool\", \"Tracker Screen Adder\"];\n  let textContent = \"Administration\";\n\n  const getData = () => {\n    axios\n      .get(\n        baseUrl +\n        // `http://localhost:8090/administrationms/tracker/getTrackerScreens`,\n\n        `/administrationms/tracker/getTrackerScreens`\n      )\n\n      .then((res) => {\n        const GetData = res.data;\n        GetData.forEach((GetData, index) => {\n          GetData[\"S.No\"] = index + 1;\n          GetData[\"id\"] = index;\n        });\n\n        console.log(\"in line 32--------\");\n        console.log(GetData);\n        const Headerdata = [\n          {\n            \"S.No\": \"S.No\",\n            screenName: \"Screen Names\",\n          },\n        ];\n        setData(Headerdata.concat(GetData));\n        // console.log(\"INLINE 31\")\n        console.log(data);\n      })\n      .catch((error) => {\n        console.log(\"Error :\" + error);\n      });\n  };\n  useEffect(() => {\n    getData();\n    getMenus()\n  }, []);\n\n  const getMenus = () => {\n    axios({\n      method: \"GET\",\n      url: baseUrl + `/CommonMS/master/getMenus?loggedUserId=${loggedUserId}`,\n    }).then((resp) => {\n      let getData = resp.data.map((menu) => {\n        if (menu.subMenus) {\n          menu.subMenus = menu.subMenus.filter(\n            (subMenu) =>\n              subMenu.display_name !== \"Roles Permissions\" &&\n              subMenu.display_name !== \"Sales Permissions\" &&\n              subMenu.display_name !== \"Jobs Daily Status\" &&\n              subMenu.display_name !== \"Error Logs\" &&\n              subMenu.id != 27 &&\n              subMenu.display_name !== \"Tracker\" &&\n              subMenu.display_name !== \"Role Costs\" &&\n              subMenu.display_name !== \"Upload Role Costs\" &&\n              subMenu.display_name !== \"Contract Documents\"\n          );\n        }\n        return menu;\n      });\n\n      getData.forEach((item) => {\n        if (item.display_name === textContent) {\n          setRoutes([item]);\n        }\n      });\n    }\n    )\n  }\n\n  const clickHanlder = () => {\n    setButtonPopup(true);\n  };\n  console.log(data);\n\n  return (\n    <div>\n      <div className=\"col-md-12\">\n        {successmsg ? (\n          <div className=\"statusMsg success\">\n            <span className=\"errMsg\">\n              <BiCheck size=\"1.4em\" strokeWidth={{ width: \"100px\" }} /> &nbsp;\n              Tracker screen added successfully\n            </span>\n          </div>\n        ) : (\n          \"\"\n        )}\n\n        <div className=\"pageTitle\">\n          <div className=\"childOne\"></div>\n          <div className=\"childTwo\">\n            <h2>Tracker Screen Adder</h2>\n          </div>\n          <div className=\"childThree\"></div>\n        </div>\n      </div>\n      <ScreenBreadcrumbs\n        routes={routes}\n        currentScreenName={currentScreenName}\n      />\n\n      &nbsp;\n      <TrackerScreenFlatPrimeReactTable data={data} rows={rows} />\n      <div className=\"col-md-6 my-3 btn-container center\">\n        <button\n          type=\"button\"\n          className=\"btn btn-primary\"\n          onClick={() => {\n            clickHanlder();\n          }}\n        >\n          {\" \"}\n          <MdOutlinePlaylistAdd />\n          Add\n        </button>\n      </div>\n      {buttonPopup ? (\n        <TrackerScreensAdderPopUp\n          getData={getData}\n          buttonPopup={buttonPopup}\n          setButtonPopup={setButtonPopup}\n          setSuccessMessage={setSuccessMessage}\n        />\n      ) : (\n        \"\"\n      )}\n    </div>\n  );\n\n  function TrackerScreensAdderPopUp(props) {\n    const [data, setData] = useState([{}]);\n    const { buttonPopup, setButtonpopup, setSuccessMessage, getData } = props;\n    const [checkedData, setCheckedData] = useState([]);\n    const [validationmessage, setValidationMessage] = useState(\"\");\n    // const [successmsg, setSuccessMessage] = useState(false)\n\n    let rows = [10];\n    const getDataa = () => {\n      axios\n        .get(baseUrl + `/administrationms/tracker/getTrackerScreensAdder`)\n\n        .then((res) => {\n          const GetData = res.data;\n\n          for (let i = 0; i < GetData.length; i++) {\n            GetData[i][\"id\"] = i + 1;\n          }\n\n          console.log(GetData);\n\n          const Headerdata = [\n            {\n              display_name: \"Screen Names\",\n            },\n          ];\n          setData(Headerdata.concat(GetData));\n          console.log(\"inline ----------------------\");\n          console.log(data);\n        })\n        .catch((error) => {\n          console.log(\"Error :\" + error);\n        });\n    };\n    useEffect(() => {\n      getDataa();\n    }, []);\n\n    const onCancelClick = () => {\n      setButtonPopup(false);\n    };\n\n    console.log(checkedData);\n    const ref = useRef([]);\n\n    const onConfirmClick = () => {\n      console.log(ref);\n      console.log(checkedData);\n\n      let valid = GlobalValidation(ref);\n      console.log(valid);\n      if (checkedData.length == 0) {\n        setValidationMessage(\n          <div className=\" ml-3 mr-4 statusMsg error\">\n            <AiFillWarning /> Please select atleast one Tracker Screen\n          </div>\n        );\n        return;\n      }\n      setValidationMessage(\"\");\n\n      let Fdata = [];\n      for (let i = 0; i < checkedData.length; i++) {\n        const obj = {};\n        obj[\"id\"] = checkedData[i][\"scrnId\"];\n        obj[\"displayName\"] = checkedData[i][\"display_name\"];\n        Fdata.push(obj);\n      }\n\n      axios({\n        method: \"post\",\n        url:\n          baseUrl +\n          // `http://localhost:8090/administrationms/tracker/insertUserActions`\n          `/administrationms/tracker/insertUserActions`,\n        data: Fdata,\n      }).then(function (res) {\n        var resp = res.data;\n        setFormData(resp);\n        console.log(resp);\n        // setValidationMessage(<div className=\"statusMsg success\">Tracker screen added successfully</div>);\n        // setTimeout(() => {\n        //     setValidationMessage(\"\");\n        // }\n        //     , 3000);\n        setButtonPopup(false);\n        setSuccessMessage(true);\n        getData();\n        setTimeout(() => {\n          setSuccessMessage(false);\n        }, 3000);\n      });\n    };\n    return (\n      <div className=\"col-md-12\">\n        <CModal\n          alignment=\"center\"\n          // backdrop={false}\n          visible={buttonPopup}\n          onClose={() => setButtonPopup(false)}\n          size=\"xs\"\n          className=\" ui-dialog\"\n          backdrop={\"static\"}\n        >\n          <CModalHeader className=\"hgt22\" style={{ cursor: \"all-scroll\" }}>\n            <CModalTitle>\n              <span className=\"ft16\">List of Screens</span>\n            </CModalTitle>\n          </CModalHeader>\n          {validationmessage}\n          <CModalBody>\n            <CheckFlatPrimeReactTable\n              data={data}\n              rows={rows}\n              value={value}\n              checkedData={checkedData}\n              setCheckedData={setCheckedData}\n            />\n          </CModalBody>\n\n          <div className=\"col-md-12 col-sm-12 col-xs-12 my-2 btn-container center\">\n            <button\n              type=\"button\"\n              className=\"btn btn-primary\"\n              onClick={onConfirmClick}\n            >\n              {\" \"}\n              <FaSave /> Confirm{\" \"}\n            </button>\n            <button\n              type=\"button\"\n              className=\"btn btn-primary\"\n              onClick={onCancelClick}\n            >\n              {\" \"}\n              <ImCross />\n              Cancel{\" \"}\n            </button>\n          </div>\n        </CModal>\n      </div>\n    );\n  }\n}\nexport default TrackerScreensAdder;\n","// import React, { useState } from \"react\";\n// import AddUserRole from \"./AddUserRole\";\n// import UpdateBillingRate from \"./UpdateBillingRate\"\n// import UpdateTaskStatus from \"./UpdateTaskStatus\"\n// import Timesheet from \"./Timesheet\"\n// import UpdateBillingStatus from \"./UpdateBillingStatus\"\n// import GMAReport from \"./GMAReport\";\n// import ProjectorAes from \"./ProjectorAes\";\n// import EngagementDetails from \"./EngagementDetails\";\n// import TrackerScreensAdder from \"./TrackerScreensAdder\";\n\n// function HammerTool() {\n//   let topMenus = [\n//     \"Add User Role\",\n//     \"Update Billing Rate\",\n//     \"Update Task Status\",\n//     \"Projector AES\",\n//     \"Timesheet\",\n//     \"Update Billing Status\",\n//     \"Tracker Screens Adder\",\n//     \"Enagagement Details\",\n//     \"GMA Report\",\n//   ];\n\n//   const [buttonState, setButtonState] = useState(topMenus[0]);\n\n//   return (\n\n//     <div>\n//       <div className=\"tabs\">\n//         {topMenus.map((data, index) => {\n//           return (\n//             <button\n//               className={\n//                 buttonState === data ? \"buttonDisplayClick\" : \"buttonDisplay\"\n//               }\n//               onClick={() => {\n//                 setButtonState(data);\n//                 // navigate(\"/home\");\n//               }}\n//               key={index}\n//             >\n//               {data}\n//             </button>\n//           );\n//         })}\n//       </div>\n//       {buttonState === \"Add User Role\" && <AddUserRole />}\n//       {buttonState === \"Update Billing Rate\" && <UpdateBillingRate />}\n//       {buttonState === \"Update Task Status\" && <UpdateTaskStatus />}\n//       {buttonState === \"Timesheet\" && <Timesheet />}\n//       {buttonState === \"Update Billing Status\" && <UpdateBillingStatus />}\n//       {buttonState === \"GMA Report\" && <GMAReport />}\n\n//       {buttonState === \"Projector AES\" && <ProjectorAes />}\n//       {buttonState === \"Enagagement Details\" && <EngagementDetails />}\n//       {buttonState === \"Tracker Screens Adder\" && < TrackerScreensAdder/>}\n//     </div>\n\n//   );\n// }\n\n// export default HammerTool;\n\n// ******************** This code is for when we are refresh at a particular page, it should be with in that page ***********************\nimport React, { useState, useEffect } from \"react\";\nimport AddUserRole from \"./AddUserRole\";\nimport UpdateBillingRate from \"./UpdateBillingRate\";\nimport UpdateTaskStatus from \"./UpdateTaskStatus\";\nimport Timesheet from \"./Timesheet\";\nimport UpdateBillingStatus from \"./UpdateBillingStatus\";\nimport GMAReport from \"./GMAReport\";\nimport ProjectorAes from \"./ProjectorAes\";\nimport EngagementDetails from \"./EngagementDetails\";\nimport TrackerScreensAdder from \"./TrackerScreensAdder\";\nimport axios from \"axios\";\nimport { environment } from \"../../environments/environment\";\nfunction HammerTool() {\n  let topMenus = [\n    \"Add User Role\",\n    \"Update Billing Rate\",\n    \"Update Task Status\",\n    \"Projector AES\",\n    \"Timesheet\",\n    \"Update Billing Status\",\n    \"Tracker Screens Adder\",\n    \"Enagagement Details\",\n    \"GMA Report\",\n  ];\n  const baseUrl = environment.baseUrl;\n  const loggedUserId = localStorage.getItem(\"resId\");\n  const [dataAccess, setDataAccess] = useState([]);\n  const [accessData, setAccessData] = useState([]);\n  const [buttonState, setButtonState] = useState(\n    accessData == 908 || accessData != []\n      ? \"Add User Role\"\n      : \"Update Billing Rate\"\n  );\n  console.log(accessData);\n\n  // const [buttonState, setButtonState] = useState(\n  //   accessData == 908 ? \"Add User Role\" : \"Update Billing Rate\"\n  // );\n  // const getMenus = () => {\n  //   // setMenusData\n\n  //   axios({\n  //     method: \"GET\",\n  //     url: baseUrl + `/CommonMS/master/getMenus?loggedUserId=${loggedUserId}`,\n  //   }).then((resp) => {\n  //     let data = resp.data;\n\n  //     data.forEach((item) => {\n  //       if (item.display_name === textContent) {\n  //         setRoutes([item]);\n  //       }\n  //     });\n  //   });\n  // };\n\n  const tabMenus = () => {\n    axios\n      .get(\n        baseUrl +\n          `/CommonMS/master/getBenchMtericsMenus?loggedUserId=${loggedUserId}&Cont=HTool`\n      )\n      .then((res) => {\n        let dataTabs = res.data;\n        console.log(\n          dataTabs.filter((item) => item.display_name != \"Add User Role\")\n        );\n        axios({\n          method: \"GET\",\n          url:\n            baseUrl + `/CommonMS/master/getMenus?loggedUserId=${loggedUserId}`,\n        }).then((resp) => {\n          let data = resp.data;\n          const hammerToolMenu = data.find(\n            (item) => item.display_name === \"Administration\"\n          );\n\n          console.log(hammerToolMenu?.userRoles);\n          const accessLevel = hammerToolMenu?.userRoles.includes(\"908\")\n            ? 908\n            : null;\n          console.log(accessLevel);\n\n          setAccessData(accessLevel);\n          setDataAccess(\n            accessLevel == 908\n              ? dataTabs\n              : dataTabs.filter((item) => item.display_name != \"Add User Role\")\n          );\n        });\n      });\n  };\n  useEffect(() => {\n    tabMenus();\n  }, [accessData]);\n  return (\n    <div>\n      <div className=\"tabs\">\n        {dataAccess.map((data, index) => {\n          return (\n            <button\n              className={\n                buttonState === data.display_name\n                  ? \"buttonDisplayClick\"\n                  : \"buttonDisplay\"\n              }\n              onClick={() => {\n                setButtonState(data.display_name);\n              }}\n              key={index}\n            >\n              {data.display_name}\n            </button>\n          );\n        })}\n        {/* {dataAccess.map((button) => (\n          <li\n            className={\n              buttonState === button.display_name\n                ? \"buttonDisplayClick\"\n                : \"buttonDisplay\"\n            }\n            onClick={() => {\n              setButtonState(button.display_name);\n            }}\n          >\n            {button.display_name}\n          </li>\n        ))} */}\n      </div>\n      {accessData == 908 && buttonState === \"Add User Role\" && <AddUserRole />}\n      {buttonState === \"Update Billing Rate\" && <UpdateBillingRate />}\n      {buttonState === \"Update Task Status\" && <UpdateTaskStatus />}\n      {buttonState === \"Timesheet\" && <Timesheet />}\n      {buttonState === \"Update Billing Status\" && <UpdateBillingStatus />}\n      {buttonState === \"GMA Report\" && <GMAReport />}\n      {buttonState === \"Projector AES\" && <ProjectorAes />}\n      {buttonState === \"Enagagement Details\" && <EngagementDetails />}\n      {buttonState === \"Tracker Screens Adder\" && <TrackerScreensAdder />}\n    </div>\n  );\n}\n\nexport default HammerTool;\n","import React from \"react\";\nimport { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport { ReactSearchAutocomplete } from \"react-search-autocomplete\";\n\nfunction RiskAutoComplete(props) {\n  const {\n    riskDetails,\n    getData,\n    setFormData,\n    editedData,\n    formEditData,\n    onChangeHandler,\n    refArr,\n    setUsername,\n    name,\n    id,\n    value,\n    onClear,\n    inputSearchString,\n  } = props;\n  const [item, setItem] = useState([]);\n\n  // console.log(\"in line 10\");\n  // console.log(props);\n  // console.log(refArr);\n\n  useEffect(() => {\n    // console.log(item);\n  }, [item]);\n\n  const handleClear = (edit) => {\n    setFormData((prevProps) => ({ ...prevProps, [name]: \"\" }));\n    console.log(name);\n  };\n  useEffect(() => {}, [riskDetails]);\n  // console.log(value);\n  {\n    return (\n      <>\n        <div className=\"autoComplete-container\">\n          {value == \"UpdateBillingRate\" ? (\n            <ReactSearchAutocomplete\n              items={riskDetails}\n              type=\"Text\"\n              name={name}\n              inputSearchString={formEditData?.assigned_to}\n              id={id}\n              className=\"err\"\n              riskDetails={riskDetails}\n              getData={getData}\n              onClear={onClear}\n              placeholder=\"Type minimum 3 characters\"\n              onChange={(e) => {\n                onChangeHandler(e);\n                console.log(\"789------------------------\");\n              }}\n              // setSelectEmployee={setSelectEmployee}\n              onSelect={(e) => {\n                setFormData((prevProps) => ({ ...prevProps, [name]: e.id }));\n\n                setFormData((prevProps) => ({\n                  ...prevProps,\n                  [\"Resname\"]: e.name,\n                }));\n              }}\n              showIcon={false}\n            />\n          ) : value == \"EngagementS\" ? (\n            <ReactSearchAutocomplete\n              items={riskDetails}\n              type=\"Text\"\n              name={name}\n              inputSearchString={formEditData?.assigned_to}\n              id={id}\n              className=\"err\"\n              riskDetails={riskDetails}\n              getData={getData}\n              onClear={handleClear}\n              placeholder=\"Type minimum 3 characters\"\n              onChange={(e) => {\n                onChangeHandler(e);\n              }}\n              // setSelectEmployee={setSelectEmployee}\n              onSelect={(e) => {\n                setFormData((prevProps) => ({ ...prevProps, [name]: e.id }));\n                // console.log(e.id);\n              }}\n              showIcon={false}\n              showNoResults={true}\n              showNoResultsText=\"<<ALL>>\"\n            />\n          ) : (\n            <div\n              className=\"auto autocomplete\"\n              id=\"auto\"\n              ref={(ele) => {\n                if (refArr != undefined) {\n                  refArr.current[0] = ele;\n                }\n              }}\n            >\n              <ReactSearchAutocomplete\n                items={riskDetails}\n                type=\"Text\"\n                name={name}\n                placeholder=\"Type minimum 3 characters\"\n                inputSearchString={inputSearchString}\n                id={id}\n                className=\"err\"\n                onClear={onClear}\n                riskDetails={riskDetails}\n                getData={getData}\n                onChange={(e) => {\n                  onChangeHandler(e);\n                  console.log(\"123---------------\");\n                }}\n                // setSelectEmployee={setSelectEmployee}\n                onSelect={(e) => {\n                  setFormData((prevProps) => ({ ...prevProps, [name]: e.id }));\n                }}\n                showIcon={false}\n              />\n            </div>\n          )}\n        </div>\n        <span>{item.name}</span>\n      </>\n    );\n  }\n}\nexport default RiskAutoComplete;\n"],"names":["props","buttonPopup","setButtonPopup","formData","checkValidation","setFormData","defaultRole","openState","setCheckValidation","setOpenState","handleRoles","setSuccessfullymsg","successfullymsg","useState","displayDefaultRole","setDisplayDefaultRole","checkedData","setCheckedData","console","log","popuproles","setPopupRoles","popupsubmenus","setPopupSubmenus","checkedData1","defaultRoleState","setDefaultRoleState","defaultPopUpRow","setDefaultPopUpRow","headerdata","setHeaderdata","roleDisplayName","setRoleDisplayName","roleDisplayId","setRoleDisplayId","def","baseUrl","environment","useEffect","axios","method","url","data","res_id","assigned_to","then","response","respData","filteredEntries","filter","entry","display_name","updatedEntries","map","i","length","finalDataa","SNO","resp","headerData","mainmenu","submenu","concat","Profiles","style","color","textDecoration","cursor","textAlign","onClick","e","id","roleId","serial","dynamicColumns","Object","keys","col","sortable","body","field","header","className","size","visible","onClose","fontSize","CellRendererPrimeReactDataTable","rows","setHeaderData","height","overflowY","FlatPrimeReactTable","rowGroupMode","groupRowsBy","width","type","setTimeout","riskDetails","setRiskDetails","resRolesID","roles","setRoles","menus","setMenus","setVisible","FaChevronCircleUp","cheveronIcon","setCheveronIcon","setUsersId","tableState","setTableState","deleteMsg","setDeleteMsg","openMenus","setOpenMenus","username","setUsername","setDefaultRole","loggedUserId","localStorage","getItem","routes","setRoutes","getMenus","res","tabledata","Action","menu","subMenus","subMenu","forEach","item","roleName","action","tittle","Number","error","Serial","ScreenBreadcrumbs","currentScreenName","GlobalHelp","pdfname","name","FaChevronCircleDown","htmlFor","onChange","target","value","prev","onChangeHandler","minHeight","Projects","Roles","Allocations","CurrentBillingRate","BillingRate","fromDT","todate","Resname","projects","setProjects","allocations","setAllocations","currentBillingRate","setCurrentBillingRate","setBillingRate","addmsg","setAddmsg","validationMessage","setValidationMessage","errormessage","SetErrorMessage","ref","useRef","currentBillingRateRef","BillingRateRef","inputValue","test","getData","Dates","split","fromdate","moment","format","catch","undefined","hourly_rate","handleCancel","ele","document","getElementsByClassName","valid1","GlobalCancel","valid","index","classList","contains","children","click","UpdateTaskStatusSave","postBillingRate","backdrop","strokeWidth","marginLeft","marginRight","current","Item","project_name","names","disabled","placeholder","required","GlobalValidation","handleClick","project_id","task_id","task_status","prj_id","statusId","projectId","tasklist","setTaskList","taskstatus","setTaskStatus","sourceStatus","setSourceStatus","destinationStatus","setDestinationStatus","handleTask","tsk","pro","statusname","setStatusName","handleSaveClick","description","title","sts","handleTaskStatus","project_task_id","task_name","selected","lkup_name","taskSttus","selectedTaskStatus","sourceData","JSON","parse","stringify","destinationData","source","d","destination","setUnreadData","setUnData","startDate","setStartDate","setToDate","date","setTarget","dateto","SetDateTo","resourceName","setResourceName","ProjectName","setProjectName","loaderState","setLoaderState","RejectvalidationMessage","setRejectValidationMessage","RejectMessage","setRejectMessage","validat","setvalidat","searching","setsearching","hrs","setHrs","settabledata","handleChange","FromDate","ToDate","GetData","timesheet_dt","hours","Response","onChangeSetDate","rowData","autoComplete","showYearDropdown","showMonthDropdown","dateFormat","placeholderText","onKeyDown","preventDefault","minDate","projectName","Loader","showGridlines","dataKey","responsiveLayout","emptyMessage","typ_status","backgroundColor","defaultValue","window","scrollTo","top","behavior","obj","push","handleReject","initialValue","dataset","handleReset","openPopup","setOpenPopup","editdata","status","handleTableData","validationmessage","currentStatus","setCurrentStatus","updateStatus","details","setDetails","loader","setLoader","abortController","billingId","billingStatus","alignment","AbortController","signal","update","handleAbort","abort","customer","setCustomer","project","setProject","addVisisble","setAddVisible","projectSpare","setProjectSpare","projectspar","setProjectspar","Date","month","setMonth","setEditData","SetData","linkColumns","setLinkColumns","linkColumnsRoutes","myDate","StartDt","EndDt","FDate","StartDate","lastDay","lDate","EndDate","customerid","projet","full_name","from_date","to_date","Actions","custom","LinkTemplate","rou","align","changeReqDateTT","descriptionTT","fullnameTT","FromdateTT","TodateTT","showMonthYearPicker","float","DisplayTable","sortedAndHeader","exportData","setExportData","cslToolip","csl","resNameToolip","resName","rescustomerToolip","dpToolip","dp","engNameToolip","engName","projectToolip","emailToolip","emailId","resStDtAlign","resStDt","resEndDtAlign","resEndDt","resindustryAlign","industry","rescontractTermsAlign","contractTerms","resresLocationAlign","resLocation","monthDtAlign","revenueAlign","nf","Intl","NumberFormat","roundedRevenue","Math","round","parseFloat","revenue","fileName","setMeasure","country","setCountry","selectedCountry","setSelectedCountry","business","setBusiness","selectedBusiness","setSelectedBusiness","setData","setSearching","SetDate","durationOptions","setDurationOptions","year","getFullYear","month1","getMonth","c","getDate","selectedDuration","setSelectedDuration","duration","businessUnit","measure","location","sortedData","headerRow","dataRows","slice","sort","a","b","localeCompare","countries","countryObj","label","country_name","generateDropdownLabel","selectedOptions","allOptions","selectedValues","option","allValues","join","ArrowRenderer","expanded","maxDate","n","selectedMonth","currentMonth","monthsDiff","Array","_","options","hasSelectAll","valueRenderer","filteredCountry","prevVal","toString","getMesureId","searchInput","getElementById","headers","Headerdata","engCompany","hData","bData","rData","element","headerdatagroup","mainData","setMainData","bodyData","setBodyData","splice","filtersData","matchMode","FilterMatchMode","global","filters1","setFilters1","globalFilterValue1","setGlobalFilterValue1","onGlobalFilterChange1","_filters1","to","ProjName","resource","IsActiveChange","isActive","header1","includes","rowsPerPageOptions","paginatorTemplate","currentPageReportTemplate","paginator","filters","successmsg","setSuccessMessage","paddingTop","ProjectorAesPOPup","resourceFullName","userId","uniquemessage","setUniqueMessage","event","code","ReactSearchAutocomplete","items","onSelect","prevProps","showIcon","marginTop","some","add","Toggletooltip","Toggletooltip2","Toggletooltip3","Toggletooltip4","Toggletooltip5","Toggletooltip6","Toggletooltip7","Toggletooltip8","selectedCustomer","setSelectedCustomer","setCsl","selectedCsl","setSelectedCsl","setDp","selectedDp","setSelectedDp","customers","Dp","customerObj","cslObj","PersonName","dpObj","shouldToggleOnHover","filteredCustomer","disableSearch","CSL","DP","ScreenName","screenName","displayName","TrackerScreensAdderPopUp","setButtonpopup","CheckFlatPrimeReactTable","Fdata","dataAccess","setDataAccess","accessData","setAccessData","buttonState","setButtonState","dataTabs","hammerToolMenu","find","userRoles","accessLevel","formEditData","editedData","refArr","onClear","inputSearchString","edit","showNoResults","showNoResultsText"],"sourceRoot":""}