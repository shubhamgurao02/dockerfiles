{"version":3,"file":"static/js/2568.e7620909.chunk.js","mappings":"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","sources":["views/CostComponent/RoleWiseComputedCostTable.js","views/CostComponent/CostApproval.js","views/CostComponent/ComputedCostRoleView.js","views/CostComponent/CostApprovalFilters.js","views/CostComponent/RoleView.js"],"sourcesContent":["import { signal } from '@preact/signals';\nimport { element } from 'prop-types';\nimport React, { useEffect, useRef, useState } from 'react'\nimport { AiOutlineHistory } from \"react-icons/ai\";\nimport axios from 'axios';\nimport { environment } from '../../environments/environment';\nimport moment from 'moment';\n\n\nconst checkedData = signal([]);\n\nfunction RoleWiseComputedCostTable(props) {\n    const { roleWiseComputedCostData, getRoleWiseComputedCost, setLoader } = props;\n\n    const loggedUserId = localStorage.getItem(\"resId\");\n    const baseUrl = environment.baseUrl;\n\n\n\n    const [tableData, setTableData] = useState(null)\n    const [checkBoxState, setCheckBoxState] = useState(false)\n    const [approvalStatusBtn, setApprovalStatusBtn] = useState(true)\n    const [succesMsg, setSuccesMsg] = useState(false)\n    // const [checkedData, setCheckedData] = useState([])\n    let columns = [\"check\", \"roleType\", \"department\", \"country_name\", \"computed_cost\"];\n    let historyColumns = [\"computed_cost\", \"effective_start_date\", \"effective_end_date\"];\n    const approvalBtnRef = useRef(null);\n\n    useEffect(() => {\n        RoleWiseTableDataDisplay();\n    }, [roleWiseComputedCostData])\n\n\n\n    const RoleWiseTableDataDisplay = () => {\n        setTableData(() => {\n            return roleWiseComputedCostData.length > 0 ? roleWiseComputedCostData.map((data, index) => {\n                const roleWiseData = data.roleWiseComputedCost;\n                const roleWiseHistoryData = data.roleWiseComputedCostHistory;\n                let tabData = [];\n                columns.forEach((element, innerIndex) => {\n                    switch (element) {\n                        case \"check\":\n                            tabData.push(<td align={\"center\"}>\n                                <input type=\"checkBox\" onClick={(e) => { childCheckBoxHandler(e, roleWiseData) }} />\n                            </td>)\n                            break;\n\n                        case \"computed_cost\":\n                            tabData.push(<td align=\"right\" >{roleWiseData[element]}</td>)\n                            break;\n                        case \"roleType\":\n                            tabData.push(<td>\n                                <span>{roleWiseData[element]}</span>\n                                <span align=\"right\">\n                                    <AiOutlineHistory title={\"Computed Cost History\"} style={{ color: \"blue\", cursor: \"pointer\" }} onClick={(e) => { HistoryHandler(e, index) }} />\n                                </span>\n                            </td>)\n                            break;\n                        default:\n                            tabData.push(<td>{roleWiseData[element]}</td>)\n                            break;\n                    }\n                });\n\n                return <>\n                    <tr id={index} key={index}>{tabData}</tr>\n                    <tr className='hideEle'>\n                        <td colSpan={\"5\"}>\n                            <DisplaySubTable roleWiseHistoryData={roleWiseHistoryData} />\n                        </td>\n                    </tr>\n                </>\n            }) : <td colSpan={\"5\"} align=\"center\">{\"No Rows to Show\"}</td>\n\n        })\n    }\n\n    const DisplaySubTable = (props) => {\n\n        const { roleWiseHistoryData } = props\n\n        const subTableData = roleWiseHistoryData.length > 0 ? roleWiseHistoryData.map((element, outerIndex) => {\n            let subTabData = [];\n            historyColumns.forEach((innerEle, innerIndex) => {\n                // if(innerIndex === 0){\n                //     subTabData.push(<td>{\"\"}</td>)\n                // }\n                switch (innerEle) {\n                    case \"effective_start_date\":\n                        subTabData.push(<td align=\"center\">{element[innerEle] != null ? moment(element[innerEle]).format(\"DD-MMM-yyyy\") : \"N/A\"}</td>)\n                        break;\n                    case \"effective_end_date\":\n                        subTabData.push(<td align=\"center\" >{element[innerEle] != null ? moment(element[innerEle]).format(\"DD-MMM-yyyy\") : \"N/A\"}</td>)\n                        break;\n\n                    default:\n                        subTabData.push(<td align=\"right\" >{element[innerEle]}</td>)\n                        break;\n                }\n            })\n            return <tr>{subTabData}</tr>\n        }) :\n            <td colSpan={\"5\"} align=\"center\">{\"No Rows to Show\"}</td>\n\n        return (\n            <table style={{ width: \"90%\", marginLeft: \"4rem\" }} className='table table-bordered table-striped'>\n                <tbody>\n                    <tr>\n                        {/* <td></td> */}\n                        <th>Computed Cost</th>\n                        <th>Effective From</th>\n                        <th>Effective To</th>\n                    </tr>\n                    {subTableData}\n                </tbody>\n            </table>\n        )\n    }\n\n    const HistoryHandler = (e, index) => {\n        var cls = document.getElementById(index).nextSibling;\n        let clsNames = cls.classList;\n        clsNames.contains(\"hideEle\") ? clsNames.remove(\"hideEle\") : clsNames.add(\"hideEle\");\n    }\n\n\n\n    const childCheckBoxHandler = (e, roleWiseData) => {\n        var checkBoxes = document.getElementsByTagName(\"input\");\n\n        //*****************checkbox handler************* */\n        let checkBoxesData = [];\n\n\n        let checkedBoxData = checkedData.value\n\n        for (var i = 0; i < checkBoxes.length; i++) {\n            if (checkBoxes[i].type == 'checkbox') {\n                i > 0 && checkBoxesData.push(checkBoxes[i].checked);\n            }\n        }\n\n\n\n        const found = checkedBoxData.some(el => el.resource_cost_data_id === roleWiseData.resource_cost_data_id)\n\n\n\n        if (e.target.checked && found === false) {\n            checkedBoxData.push({\n                \"department_id\": roleWiseData.department_id,\n                \"role_type_id\": roleWiseData.role_type_id,\n                \"country_id\": roleWiseData.country_id,\n                \"computed_cost\": roleWiseData.computed_cost,\n                \"resource_cost_data_id\": roleWiseData.resource_cost_data_id\n            });\n        } else if (e.target.checked === false && found) {\n\n            let tempCheckBoxData = checkedBoxData.filter(ele => {\n                return ele.resource_cost_data_id !== roleWiseData.resource_cost_data_id\n            })\n            checkedBoxData = tempCheckBoxData;\n        }\n\n        //    setCheckedData(checkedBoxData);\n        checkedData.value = checkedBoxData;\n\n        var parentCheckBox = document.getElementById(\"parentCheckBox\");\n        if (checkBoxesData.includes(false)) {\n            parentCheckBox.checked = false;\n        } else {\n            parentCheckBox.checked = true;\n        }\n\n        //*****************checkbox handler completed************* */\n\n        enablingOrDisablingBtn();\n\n    }\n\n    const headerCheckBoxHandler = (e) => {\n        var checkBoxes = document.getElementsByTagName(\"input\");\n        const data = roleWiseComputedCostData;\n        let tempCheckData = []\n        if (e.target.checked) {\n            for (var i = 0; i < checkBoxes.length; i++) {\n                if (checkBoxes[i].type == 'checkbox') {\n                    checkBoxes[i].checked = true;\n                }\n                data[i] !== undefined && tempCheckData.push({\n                    \"department_id\": data[i].roleWiseComputedCost.department_id,\n                    \"role_type_id\": data[i].roleWiseComputedCost.role_type_id,\n                    \"country_id\": data[i].roleWiseComputedCost.country_id,\n                    \"computed_cost\": data[i].roleWiseComputedCost.computed_cost,\n                    \"resource_cost_data_id\": data[i].roleWiseComputedCost.resource_cost_data_id\n                })\n            }\n\n            checkedData.value = tempCheckData;\n        } else {\n            for (var i = 0; i < checkBoxes.length; i++) {\n                if (checkBoxes[i].type == 'checkbox') {\n                    checkBoxes[i].checked = false;\n                }\n            }\n            // setCheckedData([]);\n            checkedData.value = [];\n        }\n        // setCheckBoxState(prevVal => e.target.checked);\n        enablingOrDisablingBtn();\n    }\n\n    // useEffect(() => {\n    //     RoleWiseTableDataDisplay();\n    // }, [checkBoxState])\n\n    const approveHandler = () => {\n        approveComputedCost();\n    }\n\n\n    const approveComputedCost = () => {\n\n        const data = {\n            \"computedRoleCostData\": checkedData.value,\n            \"loggedUserId\": loggedUserId\n        }\n\n        setLoader(true);\n\n        axios({\n            method: \"POST\",\n            url: baseUrl + `/CostMS/cost/saveComputedRoleCosts`,\n            data: data\n        }).then(resp => {\n            if (resp.data.status === true) {\n                setLoader(false);\n                setSuccesMsg(true);\n                setTimeout(() => {\n                    setSuccesMsg(false);\n                }, 3000)\n            }\n            getRoleWiseComputedCost();\n        })\n    }\n\n    const enablingOrDisablingBtn = () => {\n        let tempCheckedData = checkedData.value;\n        tempCheckedData.length > 0 ? setApprovalStatusBtn(false) : setApprovalStatusBtn(true);\n        let approvalBtn = approvalBtnRef.current;\n        approvalBtn.disabled ? approvalBtn.classList?.add(\"blockButton\") : approvalBtn.classList?.remove(\"blockButton\");\n    }\n\n\n\n\n\n    return (\n        <div>\n            <div className='col-lg-12 col-md-12 col-sm-12 col-xs-12 mt-1 customCard'>\n                {succesMsg ? <div className='successMsg'><span>Approved Successfully.</span></div> : \"\"}\n                <div id=\"roleApprovals\">\n                    <table className='table table-bordered table-striped'>\n                        <tbody >\n                            <tr className='headerSticky'>\n                                <th><input id=\"parentCheckBox\" type=\"checkBox\" onClick={headerCheckBoxHandler} /></th>\n                                <th>Role Type</th>\n                                <th>Department</th>\n                                <th>Country</th>\n                                <th>Computed Cost</th>\n                            </tr>\n                            {tableData}\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n            <div align=\"center\" className=' col-md-12 mt-2'>\n                <button ref={approvalBtnRef} className={`btn btn-primary ${approvalStatusBtn ? \"disabledIcon\" : \"\"}`} disabled={approvalStatusBtn} onClick={(e) => { approveHandler() }}>Approve</button>\n            </div>\n        </div>\n    )\n}\n\nexport default RoleWiseComputedCostTable","import axios from 'axios';\nimport React, { useEffect, useLayoutEffect, useState } from 'react'\nimport { environment } from '../../environments/environment';\nimport CostApprovalFilters from './CostApprovalFilters'\nimport RoleWiseComputedCostTable from './RoleWiseComputedCostTable';\n\nfunction CostApproval(props) {\n  const { country, departments, selectedDepartments, setSelectedDepartments,\n     roleTypes, selectedRoleTypes, setSelectedRoleTypes,formData,setFormData,\n     getRoleWiseComputedCost,roleWiseComputedCostData,validator,setLoader } = props;\n\n  const baseUrl = environment.baseUrl;\n\n  const costApprovalButtonHandler = () => {\n    getRoleWiseComputedCost();\n  }\n\n  return (\n    <div >\n      <CostApprovalFilters\n        country={country}\n        departments={departments}\n        selectedDepartments={selectedDepartments}\n        setSelectedDepartments={setSelectedDepartments}\n        roleTypes={roleTypes}\n        formData={formData}\n        setFormData={setFormData}\n        selectedRoleTypes={selectedRoleTypes}\n        setSelectedRoleTypes={setSelectedRoleTypes}\n        costApprovalButtonHandler={costApprovalButtonHandler}\n        validator = { validator }\n      />\n\n      <RoleWiseComputedCostTable\n        roleWiseComputedCostData={roleWiseComputedCostData}\n        getRoleWiseComputedCost = {getRoleWiseComputedCost}\n        setLoader = { setLoader }\n      />\n\n    </div>\n  )\n}\n\nexport default CostApproval","import { element } from 'prop-types';\nimport React, { useEffect, useState } from 'react'\n\nfunction ComputedCostRoleView(props) {\n    const { roleWiseViewState, columnData } = props;\n\n    const [tableData, setTableData] = useState([]);\n    const [displayTable, setDisplayTable] = useState(null)\n    const [headerData, setHeaderData] = useState([])\n\n    useEffect(() => {\n        roleWiseViewState !== undefined && setTableData(JSON.parse(JSON.stringify(roleWiseViewState)));\n    }, [roleWiseViewState])\n\n    useEffect(() => {\n        displayTableData();\n        displayHeaderData();\n    }, [tableData])\n\n\n\n    const displayTableData = () => {\n        setDisplayTable(() => {\n            return tableData?.map((element, index) => {\n                let tabData = [];\n                Object.keys(element).forEach((inEle, inInd) => {\n                    if (inEle.includes(\"id\") === false) {\n\n                        if(element[inEle] === null){\n                            tabData.push(<td className='ellpss' title={\"\"} >{\"\"}</td>);    \n                        }else if((inEle.includes(\"Cadre\")) || (inEle.includes(\"Role Type\"))){\n                            tabData.push(<td className='ellpss' title={element[inEle]} >{element[inEle]}</td>);    \n                        }else{\n                            tabData.push(<td className='ellpss' title={element[inEle]} align=\"right\" ><span style={{ float : \"left\" }} >{\"$\"}</span><span align = \"right\">{element[inEle]}</span></td>);\n                        }\n\n                        // tabData.push(<td className='ellpss' title={element[inEle]} >\n                        //         <div>\n                        //             if(element[inEle] !== null && (inEle.includes(\"Cadre\")===false) && (inEle.includes(\"Role Type\")===false)){\n\n                        //             } && <span align=\"left\" >{\"$\"}</span>}<span align=\"right\">{element[inEle] === null ? \"\" : element[inEle]}</span>\n                        //         </div>\n                        //     </td>);\n                    }\n                })\n                return <tr>{tabData}</tr>\n            })\n        })\n    }\n\n    const displayHeaderData = () => {\n        setHeaderData(() => {\n            return columnData.map((element, index) => {\n                let headData = [];\n                Object.keys(element).forEach((inEle, inInd) => {\n\n                    if (index === 0 ) {\n                        headData.push(<th className=\"ellpss\" title={element[inEle]} >{element[inEle]}</th>)\n                    } \n                    // else if (index === 1 && (inInd === 0 || inInd === 1)) {\n                    //     // headData.push(<th>{element[inEle]}</th>)\n                    // } else {\n                    //     headData.push(<th className='ellpss' title={element[inEle]} >{element[inEle]}</th>)\n                    // }\n                })\n                return <tr className='headerSticky'>{headData}</tr>\n            })\n        })\n    }\n\n\n    return (\n        <div >\n            <div className='col-md-12 mt-2' style={{ overflow : \"auto\",maxHeight:\"450px\" }}>\n                <table className='table table-bordered table-striped pipelinetable'>\n                    <tbody>\n                        {headerData}\n                        {displayTable}\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    )\n}\n\nexport default ComputedCostRoleView","import React, { useEffect, useRef, useState } from \"react\";\nimport { MultiSelect } from \"react-multi-select-component\";\nimport GlobalValidation from \"../ValidationComponent/GlobalValidation\";\nimport ComputedCostRoleView from \"./ComputedCostRoleView\";\nimport { AiFillWarning } from \"react-icons/ai\";\n\nfunction CostApprovalFilters(props) {\n  const {\n    country,\n    departments,\n    selectedDepartments,\n    setSelectedDepartments,\n    roleTypes,\n    selectedRoleTypes,\n    setSelectedRoleTypes,\n    costApprovalButtonHandler,\n    formData,\n    setFormData,\n    type,\n    roleWiseViewAxios,\n    roleWiseViewState,\n    columnData,\n    validator,\n  } = props;\n\n  const [warnMsg, setWarnMsg] = useState(\"\");\n\n  const ref = useRef([]);\n\n  const ref1 = useRef([]);\n\n  const FilterChangeHandler = (e) => {\n    const { id, value } = e.target;\n    setFormData((prevVal) => ({ ...prevVal, [id]: value }));\n  };\n\n  useEffect(() => {}, [formData]);\n\n  useEffect(() => {}, [selectedDepartments]);\n\n  const roleWiseView = () => {\n    let refLc = ref.current.filter((d) => d != undefined);\n\n    ref1.current = refLc;\n\n    let valid = GlobalValidation(ref1);\n\n    if (valid) {\n      // validator;\n      setWarnMsg(\n        <div className=\"col-md-12 statusMsg error\">\n          <AiFillWarning />\n          <span>Please Select Mandatory Fields</span>\n        </div>\n      );\n      return;\n    }\n\n    setWarnMsg(\"\");\n\n    roleWiseViewAxios();\n  };\n\n  const preCostApprovalButtonHandler = () => {\n    let refLc = ref.current.filter((d) => d != undefined);\n\n    ref1.current = refLc;\n\n    let valid = GlobalValidation(ref1);\n\n    if (valid) {\n      setWarnMsg(\n        <div className=\"col-md-12 statusMsg error\">\n          <AiFillWarning />\n          <span>Please Select Mandatory Fields</span>\n        </div>\n      );\n      return;\n    }\n\n    setWarnMsg(\"\");\n\n    costApprovalButtonHandler();\n  };\n\n  const customValueRenderer = (selected, _options) => {\n    return selected.length === departments.length\n      ? \"<< ALL >>\"\n      : selected.length === 0\n      ? \"<< Please Select >>\"\n      : selected.map((label) => {\n          return selected.length > 1 ? label.label + \",\" : label.label;\n        });\n  };\n\n  return (\n    <div className=\"col-xs-12 col-sm-12 col-md-12 col-lg-12 customCard\">\n      {/* {validator ? (\n        <div className=\"col-md-12 statusMsg error\">\n          <span>Please Select Mandatory Fields</span>\n        </div>\n      ) : (\n        \"\"\n      )} */}\n\n      {warnMsg}\n\n      <div class=\"group-content row\">\n        {type !== \"roleWiseView\" ? (\n          <div class=\"col-md-3 mb-2\">\n            <div class=\"form-group row\">\n              <label class=\"col-5\" for=\"BuIds\">\n                Role Types<span style={{ color: \"red\" }}>*</span>\n              </label>\n              <span class=\"col-1 p-0\">:</span>\n              <div\n                class=\"col-6 multiselect\"\n                ref={(ele) => {\n                  ref.current[0] = ele;\n                }}\n              >\n                {\" \"}\n                <MultiSelect\n                  id=\"roleTypes\"\n                  options={roleTypes}\n                  hasSelectAll={true}\n                  isLoading={false}\n                  shouldToggleOnHover={false}\n                  disableSearch={false}\n                  valueRenderer={customValueRenderer}\n                  value={selectedRoleTypes}\n                  disabled={false}\n                  onChange={(s) => {\n                    setSelectedRoleTypes(s);\n                    let filteredValues = [];\n                    s.forEach((d) => {\n                      filteredValues.push(d.value);\n                    });\n\n                    setFormData((prevVal) => ({\n                      ...prevVal,\n                      [\"roleType\"]: filteredValues.toString(),\n                    }));\n                  }}\n                />\n              </div>\n            </div>\n          </div>\n        ) : (\n          \"\"\n        )}\n\n        <div class=\"col-md-3 mb-2\">\n          <div class=\"form-group row\">\n            <label class=\"col-5\" for=\"BuIds\">\n              Country <span style={{ color: \"red\" }}>*</span>\n            </label>\n            <span class=\"col-1 p-0\">:</span>\n            <div class=\"col-6\">\n              {\" \"}\n              <select\n                id=\"country\"\n                onChange={(e) => FilterChangeHandler(e)}\n                style={{ width: \"100%\" }}\n              >\n                {country.map((data) => (\n                  <option\n                    key={data.id}\n                    value={data.id}\n                    selected={data.country_name == \"India\" ? true : false}\n                  >\n                    {data.country_name}\n                  </option>\n                ))}\n              </select>\n            </div>\n          </div>\n        </div>\n\n        <div class=\"col-md-3 mb-2\">\n          <div class=\"form-group row\">\n            <label class=\"col-5\" for=\"BuIds\">\n              Business Unit <span style={{ color: \"red\" }}>*</span>\n            </label>\n            <span class=\"col-1 p-0\">:</span>\n            <div\n              class=\"col-6 multiselect\"\n              ref={(ele) => {\n                ref.current[1] = ele;\n              }}\n            >\n              <MultiSelect\n                id=\"businessUnit\"\n                options={departments}\n                hasSelectAll={true}\n                isLoading={false}\n                shouldToggleOnHover={false}\n                disableSearch={false}\n                valueRenderer={customValueRenderer}\n                value={selectedDepartments}\n                disabled={false}\n                onChange={(s) => {\n                  setSelectedDepartments(s);\n                  let filteredValues = [];\n                  s.forEach((d) => {\n                    filteredValues.push(d.value);\n                  });\n\n                  setFormData((prevVal) => ({\n                    ...prevVal,\n                    [\"departments\"]: filteredValues.toString(),\n                  }));\n                }}\n              />\n            </div>\n          </div>\n        </div>\n\n        <div class=\"col-md-12 col-sm-12 col-xs-12 btn-container center my-3 mb-2\">\n          <button\n            type=\"submit\"\n            class=\"btn btn-primary\"\n            title=\"Search\"\n            onClick={() => {\n              type === \"roleWiseView\"\n                ? roleWiseView()\n                : preCostApprovalButtonHandler();\n            }}\n          >\n            Search\n          </button>\n        </div>\n      </div>\n\n      {type === \"roleWiseView\" && columnData.length > 0 && (\n        <ComputedCostRoleView\n          roleWiseViewState={roleWiseViewState}\n          columnData={columnData}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default CostApprovalFilters;\n","import React, { useEffect, useRef, useState } from \"react\";\nimport SecretKeyVerification from \"./SecretKeyVerification\";\n\nimport CostApproval from \"./CostApproval\";\nimport axios from \"axios\";\nimport { environment } from \"../../environments/environment\";\nimport CostApprovalFilters from \"./CostApprovalFilters\";\nimport Loader from \"../Loader/Loader\";\n\nfunction RoleView(props) {\n  let url = window.location.href;\n\n  // const viewRef = useRef(null)\n  const [country, setCountry] = useState([]);\n  const [departments, setDepartments] = useState([]);\n  const [selectedDepartments, setSelectedDepartments] = useState([]);\n  const [roleTypes, setRoleTypes] = useState([]);\n  const [selectedRoleTypes, setSelectedRoleTypes] = useState([]);\n  const [roleWiseViewState, setRoleWiseViewState] = useState([]);\n  const [columnData, setColumnData] = useState([]);\n\n  const [loaderState, setLoaderState] = useState(false);\n\n  const initialValue = {\n    roleType: \"\",\n    country: 3,\n    departments: \"\",\n  };\n\n  const [formData, setFormData] = useState(initialValue);\n  const [validator, setValidator] = useState(false);\n\n  const baseUrl = environment.baseUrl;\n\n  const loggedUserId = localStorage.getItem(\"resId\");\n\n  const getCountries = () => {\n    axios({\n      url: baseUrl + `/CostMS/cost/getCountries`,\n    }).then((resp) => {\n      setCountry(resp.data);\n    });\n  };\n\n  const getRoleTypes = () => {\n    axios({\n      url: baseUrl + \"/CostMS/cost/getRoleTypes\",\n    }).then((resp) => {\n      const data = resp.data;\n      setRoleTypes(data);\n      setSelectedRoleTypes(data);\n    });\n  };\n\n  const getDepartments = async () => {\n    const resp = await axios({\n      url: baseUrl + `/CostMS/cost/getDepartments`,\n    });\n    // .then(resp => {\n    let departments = resp.data;\n    departments.push({ value: 999, label: \"Non-Revenue Units\" });\n    setDepartments(departments);\n    setSelectedDepartments(departments);\n    let filteredDeptData = [];\n    departments.forEach((data) => {\n      filteredDeptData.push(data.value);\n    });\n    setFormData((prevVal) => ({\n      ...prevVal,\n      [\"departments\"]: filteredDeptData.toString(),\n    }));\n    roleWiseViewAxios(filteredDeptData.toString());\n  };\n\n  useEffect(() => {\n    getCountries();\n    getDepartments();\n    getRoleTypes();\n    getIpAddress();\n  }, []);\n\n  useEffect(() => {}, [country, roleTypes, departments]);\n\n  const getIpAddress = async () => {\n    await fetch(\"https://geolocation-db.com/json/\")\n      .then((response) => {\n        return response.json();\n      }, \"jsonp\")\n      .then((res) => {\n        loginHistoryTracks(res.IPv4);\n      })\n      .catch((err) => console.log(err));\n  };\n\n  const loginHistoryTracks = (ipAddress) => {\n    const loginTrackData = {};\n\n    let urlData = url.split(\"#\");\n\n    loginTrackData[\"ipAddress\"] = ipAddress;\n    loginTrackData[\"userId\"] = loggedUserId;\n    loginTrackData[\"url\"] = urlData[1];\n\n    axios({\n      method: \"POST\",\n      url: baseUrl + \"/CostMS/cost/saveLoginTracks\",\n      data: loginTrackData,\n    }).then((resp) => {});\n  };\n\n  const roleWiseViewAxios = (initialFilterDeptData) => {\n    // let buDm = document.getElementById(\"businessUnit\").children[0].children[0];\n    // let buDmCls = buDm.classList;\n\n    initialFilterDeptData !== undefined\n      ? (formData[\"departments\"] = initialFilterDeptData)\n      : \"\";\n    formData[\"roleType\"] = \"0\";\n\n    // if(formData.departments.length === 0 && (buDmCls.contains(\"txtBoxBorderColor\") == false)){\n    //   buDmCls.add(\"txtBoxBorderColor\");\n    //   setValidator(true);\n    //   return;\n    // }else if(formData.departments.length > 0 && (buDmCls.contains(\"txtBoxBorderColor\") == true)){\n    //   buDmCls.remove(\"txtBoxBorderColor\");\n    //   setValidator(false);\n    // }\n\n    setLoaderState(true);\n\n    axios({\n      method: \"POST\",\n      url: baseUrl + \"/CostMS/cost/roleWiseView\",\n      data: formData,\n    }).then((resp) => {\n      let data = resp.data.roleWiseComputedCost;\n      let columnsData = resp.data.computedCostColumns.split(\",\");\n\n      let finalColumnData = [];\n\n      const objFirst = {};\n      const objSec = {};\n\n      for (let i = 0; i < columnsData.length - 1; i++) {\n        if (columnsData[i].includes(\"id\") === false) {\n          objFirst[columnsData[i]] = columnsData[i]\n            ?.replaceAll(\"_ComputedCost\", \"\")\n            .replaceAll(\"_\", \" \");\n          objSec[columnsData[i]] = \"ComputedCost\";\n        }\n      }\n\n      finalColumnData.push(objFirst);\n      finalColumnData.push(objSec);\n\n      setColumnData(finalColumnData);\n\n      let orderedData = [];\n\n      for (let i = 0; i < data.length; i++) {\n        let innerObj = data[i];\n        const objData = {};\n        for (let j = 0; j < columnsData.length - 1; j++) {\n          objData[columnsData[j]] = data[i][columnsData[j]];\n        }\n        orderedData.push(objData);\n      }\n      setRoleWiseViewState(orderedData);\n      setLoaderState(false);\n    });\n  };\n\n  return (\n    <div>\n      <div className=\"col-md-12 pageHeading \">Cost</div>\n      {loaderState ? <Loader /> : \"\"}\n      <div className=\"col-md-12 p0\"></div>\n      {url.includes(\"roleView\") ? (\n        <div>\n          <CostApprovalFilters\n            country={country}\n            departments={departments}\n            selectedDepartments={selectedDepartments}\n            setSelectedDepartments={setSelectedDepartments}\n            roleTypes={roleTypes}\n            selectedRoleTypes={selectedRoleTypes}\n            setSelectedRoleTypes={setSelectedRoleTypes}\n            formData={formData}\n            setFormData={setFormData}\n            type={\"roleWiseView\"}\n            roleWiseViewAxios={roleWiseViewAxios}\n            roleWiseViewState={roleWiseViewState}\n            columnData={columnData}\n            validator={validator}\n          />\n        </div>\n      ) : (\n        \"\"\n      )}\n    </div>\n  );\n}\n\nexport default RoleView;\n"],"names":["checkedData","signal","props","roleWiseComputedCostData","getRoleWiseComputedCost","setLoader","loggedUserId","localStorage","getItem","baseUrl","environment","useState","tableData","setTableData","approvalStatusBtn","setApprovalStatusBtn","succesMsg","setSuccesMsg","columns","historyColumns","approvalBtnRef","useRef","useEffect","RoleWiseTableDataDisplay","length","map","data","index","roleWiseData","roleWiseComputedCost","roleWiseHistoryData","roleWiseComputedCostHistory","tabData","forEach","element","innerIndex","push","align","type","onClick","e","childCheckBoxHandler","title","style","color","cursor","HistoryHandler","id","className","colSpan","DisplaySubTable","subTableData","outerIndex","subTabData","innerEle","moment","format","width","marginLeft","clsNames","document","getElementById","nextSibling","classList","contains","remove","add","checkBoxes","getElementsByTagName","checkBoxesData","checkedBoxData","value","i","checked","found","some","el","resource_cost_data_id","target","department_id","role_type_id","country_id","computed_cost","tempCheckBoxData","filter","ele","parentCheckBox","includes","enablingOrDisablingBtn","approveComputedCost","axios","method","url","then","resp","status","setTimeout","approvalBtn","current","disabled","tempCheckData","undefined","ref","country","departments","selectedDepartments","setSelectedDepartments","roleTypes","selectedRoleTypes","setSelectedRoleTypes","formData","setFormData","validator","CostApprovalFilters","costApprovalButtonHandler","roleWiseViewState","columnData","displayTable","setDisplayTable","headerData","setHeaderData","JSON","parse","stringify","displayTableData","displayHeaderData","Object","keys","inEle","inInd","float","headData","overflow","maxHeight","roleWiseViewAxios","warnMsg","setWarnMsg","ref1","customValueRenderer","selected","_options","label","class","for","options","hasSelectAll","isLoading","shouldToggleOnHover","disableSearch","valueRenderer","onChange","s","filteredValues","d","prevVal","toString","FilterChangeHandler","country_name","refLc","GlobalValidation","roleWiseView","preCostApprovalButtonHandler","window","location","href","setCountry","setDepartments","setRoleTypes","setRoleWiseViewState","setColumnData","loaderState","setLoaderState","roleType","getDepartments","filteredDeptData","getIpAddress","fetch","response","json","res","loginHistoryTracks","IPv4","catch","err","console","log","ipAddress","loginTrackData","urlData","split","initialFilterDeptData","columnsData","computedCostColumns","finalColumnData","objFirst","objSec","replaceAll","orderedData","objData","j"],"sourceRoot":""}