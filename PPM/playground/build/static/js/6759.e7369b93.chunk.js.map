{"version":3,"file":"static/js/6759.e7369b93.chunk.js","mappings":"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","sources":["views/SalesOpportunityComponent/OpportunityTable.js","views/SalesOpportunityComponent/Opportunities.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport React from \"react\";\nimport { FaCircle, FaDochub } from \"react-icons/fa\";\nimport SfPRTable from \"./SfPRTable\";\nimport SfDocuments from \"./SfDocuments\";\n\nfunction OpportunityTable(props) {\n  const { tableData, rrId, searching } = props;\n  const [type, setType] = useState(\"\");\n  const [salesOppoId, setSalesOppoId] = useState(\"\");\n\n  const cols = tableData?.columns?.replace(/'|\\s/g, \"\");\n  const array = cols?.split(\",\");\n  const [oppoName, setOppoName] = useState(\"\");\n  const newArray = tableData?.sfBuckets?.map((item) => {\n    let k = JSON.parse(JSON.stringify(item, array, 4));\n    return k;\n  });\n\n  const [sortColumn, setSortColumn] = useState(null);\n  const [sortDirection, setSortDirection] = useState(\"asc\");\n\n  const handleSort = (columnName) => {\n    if (sortColumn === columnName) {\n      setSortDirection(sortDirection === \"asc\" ? \"desc\" : \"asc\");\n    } else {\n      setSortColumn(columnName);\n      setSortDirection(\"asc\");\n    }\n  };\n\n  const sortTableData = (data) => {\n    if (sortColumn) {\n      data.sort((a, b) => {\n        const columnA = String(a[sortColumn]);\n        const columnB = String(b[sortColumn]);\n\n        if (a.customer === \"Summary\" || b.customer === \"Summary\") {\n          return 0;\n        }\n\n        if (sortDirection === \"asc\") {\n          return columnA.localeCompare(columnB);\n        } else {\n          return columnB.localeCompare(columnA);\n        }\n      });\n    }\n    return data;\n  };\n\n  const updateTableData = () => {\n    const sortedData = sortTableData(newArray);\n    displayTableData(sortedData);\n  };\n\n  useEffect(() => {\n    displayTableData();\n  }, [tableData]);\n\n  useEffect(() => {\n    updateTableData();\n  }, [sortColumn, sortDirection]);\n\n  const [tableHeaders, setTableHeaders] = useState([]);\n  const [tableRows, setTableRows] = useState([]);\n\n  const displayTableData = () => {\n    const headers = [];\n    const rows = [];\n\n    newArray?.forEach((objData, index) => {\n      const tabData = [];\n      Object.keys(objData).forEach((key) => {\n        let unWantedCols = [\n          \"id\",\n          \"lvl\",\n          \"isProspect\",\n          \"pr_id\",\n          \"opp_id\",\n          \"name\",\n        ];\n        if (objData.id === -2 && unWantedCols.indexOf(key) === -1) {\n          let val = objData[key].split(\"^&\");\n\n          let dVal = val[0].includes(\"__\") ? val[0].split(\"__\") : [];\n          headers.push(\n            <th\n              style={{\n                textAlign: \"center\",\n                position: \"sticky\",\n                top: 0,\n                background: \"white\",\n                zIndex: 1,\n                cursor: \"pointer\",\n              }}\n              className=\"fs10\"\n              onClick={() => handleSort(array[index])}\n            >\n              {dVal.length > 0 ? (\n                <div\n                  style={{ fontSize: \"12px\", textAlign: \"center\" }}\n                  title=\"Customer Prospect\"\n                >\n                  <span>\n                    <FaCircle style={{ color: \"green\" }} />\n                    <span>{dVal[2]}</span>\n                    <br />\n                  </span>\n                  <span>\n                    <FaCircle style={{ color: \"purple\" }} />\n                    <span>{dVal[4]}</span>\n                  </span>\n                </div>\n              ) : (\n                <span\n                  className=\"ellipsistd\"\n                  style={{ fontSize: \"12px\" }}\n                  title={val[0]}\n                >\n                  {val[0]}\n                </span>\n              )}\n            </th>\n          );\n        } else if (objData.id === -1 && unWantedCols.indexOf(key) === -1) {\n          objData[key] &&\n            tabData.push(\n              <th className=\"fs10\" style={{ fontSize: \"12px\" }}>\n                {objData[key]}\n              </th>\n            );\n        } else if (objData.id === 0 && unWantedCols.indexOf(key) === -1) {\n          tabData.push(\n            <td\n              className={objData[key] === \"Summary\" ? \"summary\" : \"fs10 trLvl0\"}\n              title={objData[key]}\n              style={{\n                fontSize: \"12px\",\n                backgroundColor: \"\",\n              }}\n            >\n              {key.includes(\"amount\") ? (\n                <div className=\"fs10 elipsis\">\n                  <div\n                    style={{ textAlign: \"right\" }}\n                    className=\"fs10 \"\n                    title={Math.round(objData[key]).toLocaleString(\"en-US\")}\n                  >\n                    <b> {Math.round(objData[key]).toLocaleString(\"en-US\")}</b>\n                  </div>\n                </div>\n              ) : (\n                <b> {objData[key]}</b>\n              )}\n            </td>\n          );\n        } else if (objData.id > 0 && unWantedCols.indexOf(key) === -1) {\n          tabData.push(\n            <td>\n              {key.includes(\"customer\") ? (\n                <div className=\"fs10 ellipsistd\">\n                  {objData.isProspect === 1 ? (\n                    <FaCircle style={{ color: \"purple\" }} title=\"Prospect\" />\n                  ) : (\n                    <FaCircle style={{ color: \"green\" }} title=\"Customer\" />\n                  )}\n                  <span\n                    style={{ marginLeft: \"5px\", fontSize: \"12px\" }}\n                    className=\"fs10 \"\n                    title={objData[key]}\n                  >\n                    {objData[key]}\n                  </span>\n                </div>\n              ) : key.includes(\"amount\") ? (\n                <div className=\"\" style={{ textAlign: \"right\" }}>\n                  <span\n                    style={{\n                      fontSize: \"12px\",\n                    }}\n                    className=\"\"\n                    title={Math.round(objData[key]).toLocaleString(\"en-US\")}\n                  >\n                    {Math.round(objData[key]).toLocaleString(\"en-US\")}\n                  </span>\n                </div>\n              ) : key.includes(\"probability\") ? (\n                <div className=\"fs10 elipsis\">\n                  <span\n                    style={{ marginLeft: \"5px\", fontSize: \"12px\" }}\n                    className=\"fs10 \"\n                    title={objData[key] + \"%\"}\n                  >\n                    {objData[key]}\n                    {\"%\"}\n                  </span>\n                </div>\n              ) : key.includes(\"closedDate\") ? (\n                <div className=\"fs10 elipsis\" style={{ textAlign: \"center\" }}>\n                  <span\n                    style={{ fontSize: \"12px\" }}\n                    className=\"fs10 \"\n                    title={objData[key]}\n                  >\n                    {objData[key]}\n                  </span>\n                </div>\n              ) : key.includes(\"opportunity\") ? (\n                <div className=\"col-md-12 ml-1 row\">\n                  <div\n                    className=\"col-md-9\"\n                    style={{\n                      fontSize: \"12px\",\n                      whiteSpace: \"nowrap\",\n                      overflow: \"hidden\",\n                      textOverflow: \"ellipsis\",\n                      maxWidth: \"100%\",\n                    }}\n                  >\n                    {\" \"}\n                    <a\n                      href={`http://d300000000qxieam.my.salesforce.com/?ec=302&startURL=%2Fvisualforce%2Fsession%3Furl%3Dhttp%253A%252F%252Fd300000000qxieam.lightning.force.com%252Flightning%252Fr%252FOpportunity%252F${objData[\"opp_id\"]}%252Fview`}\n                      target=\"_blank\"\n                      rel=\"noopener noreferrer\"\n                      objData-toggle=\"tooltip\"\n                      title={objData[key]}\n                    >\n                      {objData[key]}\n                    </a>\n                  </div>\n                  <div className=\"col-md-3\">\n                    <i\n                      className=\"cp float-right\"\n                      title=\"View SF Docs\"\n                      style={{ cursor: \"pointer\", float: \"right\" }}\n                      onClick={() => {\n                        setType(objData[\"opp_id\"]);\n                        setSalesOppoId(objData[\"id\"]);\n                        setOppoName(objData[\"opportunity\"]);\n                      }}\n                    >\n                      <FaDochub />\n                    </i>\n                  </div>\n                </div>\n              ) : (\n                <div\n                  className=\"fs10 ellipsistd\"\n                  style={{ fontSize: \"12px\" }}\n                  title={objData[key]}\n                >\n                  {objData[key]}\n                </div>\n              )}\n            </td>\n          );\n        }\n      });\n      rows.push(<tr key={index}>{tabData}</tr>);\n    });\n\n    setTableHeaders(headers);\n    setTableRows(rows);\n  };\n  return (\n    <div>\n      <div\n        className=\"col-md-12\"\n        style={{\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"space-between\",\n          border: \"1px solid #ccc\",\n          padding: \"10px\",\n          borderRadius: \"1px\",\n          backgroundColor: \" rgb(236, 235, 235)\",\n          width: \"100%\",\n        }}\n      >\n        <tr>\n          <th>\n            <h2 style={{ color: \"#2e88c5\", fontSize: \"14px\", margin: 0 }}>\n              Sf Pipeline\n            </h2>\n          </th>\n        </tr>\n      </div>\n      <div className=\"col-lg-12 col-md-12 col-sm-12 no-padding scrollit darkHeader toHead\">\n        <table className=\"table table-bordered table-striped \">\n          <thead>\n            <tr>{tableHeaders}</tr>\n          </thead>\n          <tbody>{tableRows}</tbody>\n        </table>\n      </div>\n\n      {salesOppoId && (\n        <div className=\"col-md-12 mt-3\">\n          <span>\n            <span style={{ color: \"rgb(46, 136, 197)\", fontSize: \"13px\" }}>\n              <b> Sf URL -</b>\n            </span>{\" \"}\n            https://na87.lightning.force.com/lightning/r/Opportunity/{type}/view\n          </span>\n        </div>\n      )}\n\n      {salesOppoId && (\n        <div className=\"col-md-12 mt-3\">\n          <span style={{ color: \"rgb(46, 136, 197)\", fontSize: \"13px\" }}>\n            <b>Sf PR Pipeline - {oppoName}</b>\n          </span>\n        </div>\n      )}\n\n      {salesOppoId && (\n        <SfPRTable salesOppoId={salesOppoId} reportRunId={rrId} type={type} />\n      )}\n\n      {salesOppoId && (\n        <div className=\"col-md-12 mt-2\">\n          <span style={{ color: \"rgb(46, 136, 197)\", fontSize: \"13px\" }}>\n            <b>Sf Documents - {oppoName}</b>\n          </span>\n        </div>\n      )}\n\n      {salesOppoId && <SfDocuments type={type} />}\n    </div>\n  );\n}\nexport default OpportunityTable;\n","import React, { useState } from \"react\";\nimport DatePicker from \"react-datepicker\";\nimport {\n  FaChevronCircleDown,\n  FaChevronCircleUp,\n  FaSearch,\n  FaCaretDown,\n} from \"react-icons/fa\";\nimport GlobalHelp from \"../PrimeReactTableComponent/GlobalHelp\";\nimport { CCollapse } from \"@coreui/react\";\nimport { useEffect } from \"react\";\nimport { BiCheck } from \"react-icons/bi\";\nimport { environment } from \"../../environments/environment\";\nimport moment from \"moment\";\nimport { MultiSelect } from \"react-multi-select-component\";\nimport axios from \"axios\";\nimport Loader from \"../Loader/Loader\";\nimport { Column } from \"primereact/column\";\nimport { useLocation } from \"react-router-dom\";\nimport { useRef } from \"react\";\nimport OpportunityTable from \"./OpportunityTable\";\nimport OpportunityCustomers from \"./OpportunityCustomers\";\nimport GlobalValidation from \"../ValidationComponent/GlobalValidation\";\nimport { AiFillWarning } from \"react-icons/ai\";\nimport CompetencyTable from \"./CompetencyTable\";\nimport OpportunityConsultant from \"./OpportunityConsultant\";\nimport Executive from \"./Executive\";\nimport ScreenBreadcrumbs from \"../Common/ScreenBreadcrumbs\";\nimport SelectCustDialogBox from \"../Customer/SelectCustDialogBox\";\n\nfunction Opportunities() {\n  const [loaderState, setLoaderState] = useState(false);\n  const [startDate, setStartDate] = useState(new Date());\n  const [country, setCountry] = useState([]);\n  const [selectedCountry, setSelectedCountry] = useState([]);\n  const [Type, setType] = useState([]);\n  const [selectedType, setSelectedType] = useState([]);\n  const [searching, setsearching] = useState(false);\n  const [visible, setVisible] = useState(false);\n  const [visibleTable, setVisibleTable] = useState(false);\n  const [data, setData] = useState([]);\n  const [headerData, setHeaderData] = useState([]);\n  const [updatedValue, setUpdatedValue] = useState([]);\n  const defaultDate = () => {\n    const now = new Date();\n    const quarter = Math.floor(now.getMonth() / 3);\n    const firstDate = new Date(now.getFullYear(), quarter * 3, 1);\n    return firstDate.toLocaleDateString(\"en-CA\");\n  };\n\n  const [custVisible, setCustVisible] = useState(false);\n  let flag = 2;\n  const abortController = useRef(null);\n  const ref = useRef([]);\n  const handleAbort = () => {\n    abortController.current && abortController.current.abort();\n    setLoaderState(false);\n  };\n  const [successvalidationmessage, setSuccessvalidationmessage] =\n    useState(false);\n  const HelpPDFName = \"Salesforce Opportunities.pdf\";\n  const header = \"Sales Opportunities Help\";\n  const baseUrl = environment.baseUrl;\n  const [rrId, setRrId] = useState(\"\");\n\n  const location = useLocation();\n  const searchParams = new URLSearchParams(location.search);\n  const id = searchParams.get(\"id\");\n  const [editmsg, setEditAddmsg] = useState(false);\n  const [filterData, setFilterData] = useState([]);\n  const loggedUserId = localStorage.getItem(\"resId\");\n\n  //-----------breadcrumbs------------\n  const [routes, setRoutes] = useState([]);\n  let textContent = \"Sales\";\n  let currentScreenName = [\"Salesforce Opportunities\"];\n\n  const ArrowRenderer = ({ expanded }) => (\n    <>\n      {expanded ? (\n        <FaCaretDown className=\"chevronIcon\" />\n      ) : (\n        <FaCaretDown className=\"chevronIcon\" />\n      )}\n    </>\n  );\n\n  useEffect(() => {\n    getMenus();\n  }, []);\n\n  const getMenus = () => {\n    axios({\n      method: \"GET\",\n      url: baseUrl + `/CommonMS/master/getMenus?loggedUserId=${loggedUserId}`,\n    }).then((resp) => {\n      let data = resp.data.map((menu) => {\n        if (menu.subMenus) {\n          menu.subMenus = menu.subMenus.filter(\n            (subMenu) =>\n              subMenu.display_name !== \"Project Timesheet (Deprecated)\" &&\n              subMenu.display_name !== \"Invoice Details\" &&\n              subMenu.display_name !== \"Accounting\" &&\n              subMenu.display_name !== \"Upload\" &&\n              subMenu.display_name !== \"Practice Calls [Deprecated]\"\n          );\n        }\n\n        return menu;\n      });\n\n      data.forEach((item) => {\n        if (item.display_name === textContent) {\n          setRoutes([item]);\n        }\n      });\n    });\n  };\n\n  const FilterData = () => {\n    axios({\n      method: \"get\",\n      url:\n        baseUrl +\n        `/dashboardsms/savedsearch/FiltersData?saved_search_id=${id === null ? 0 : id\n        }`,\n    }).then(function (res) {\n      const getData = res.data;\n      setFilterData(getData);\n    });\n  };\n\n  useEffect(() => {\n    FilterData();\n  }, []);\n  const [formData, setFormData] = useState({\n    from: moment(defaultDate()).format(\"yyyy-MM-DD\"),\n    customers: \"-1\",\n    duration: \"4\",\n    tags: \"-1\",\n    probability: \">=50\",\n    viewBy: \"oppt\",\n    prLoc: \"-1\",\n    countries: \"-1\",\n    oppType: \"0\",\n    consultants: \"-1\",\n  });\n  const [cheveronIcon, setCheveronIcon] = useState(FaChevronCircleUp);\n  const [business, setBusiness] = useState([]);\n  const [selectedBusiness, setSelectedBusiness] = useState([]);\n  const [consultant, setConsultant] = useState([]);\n  const [selectedConsultant, setSelectedConsultant] = useState([]);\n  useEffect(() => {\n    setFormData(() => {\n      if (id != null) {\n        return {\n          from: filterData.from,\n          customers: filterData.customers == -1 ? -1 : updatedValue.toString(),\n          duration: filterData.duration,\n          tags: filterData.tags,\n          probability: filterData.probability,\n          viewBy: filterData.viewBy,\n          prLoc: filterData.prLoc,\n          countries: filterData.countries,\n          oppType: filterData.oppType,\n          consultants: filterData.consultants,\n        };\n      } else {\n        return {\n          from: moment(defaultDate()).format(\"yyyy-MM-DD\"),\n          customers: \"-1\",\n          duration: \"4\",\n          tags: \"-1\",\n          probability: \">=50\",\n          viewBy: \"oppt\",\n          prLoc: \"-1\",\n          countries: \"-1\",\n          oppType: \"0\",\n          consultants: \"-1\",\n        };\n      }\n    });\n  }, [filterData]);\n  useEffect(() => {\n    if (id != null) {\n      const updatebusiness = business.filter((values) =>\n        formData.tags?.includes(values.label)\n      );\n\n      const updatecountry = country.filter((values) =>\n        formData.countries?.includes(values.value)\n      );\n\n      const updatetype = Type.filter((values) =>\n        formData.prLoc?.includes(values.value)\n      );\n\n      const updateconsultant = consultant.filter((values) =>\n        formData.consultants?.includes(values.value)\n      );\n      if (filterData.from !== undefined && filterData.from !== \"\") {\n        const updatequarter = new Date(filterData.from);\n        updatequarter.setMonth(updatequarter.getMonth() - 3);\n        updatequarter.setFullYear(updatequarter.getFullYear() + 1);\n        setStartDate(updatequarter);\n      }\n      const updateopttype = filterData.oppType;\n      setSelectedType(updatetype);\n      setSelectedConsultant(updateconsultant);\n      setSelectedCountry(updatecountry);\n      setSelectedBusiness(updatebusiness);\n    }\n  }, [\n    id,\n    business,\n    formData.tags,\n    country,\n    formData.countries,\n    consultant,\n    formData.consultants,\n  ]);\n\n  const [selectedItems, setSelectedItems] = useState([{}]);\n  const Customer = selectedItems?.map((d) => d?.id).toString();\n  useEffect(() => { }, [Customer], [filterData.customers]);\n  const selectedCust = JSON.parse(localStorage.getItem(\"selectedCust\"))\n    ?.map((d) => d.id)\n    ?.toString();\n\n  const handleChange1 = (e) => {\n    const { name, value, id } = e.target;\n    if (name == \"Customer\" && value === \"select\") {\n      setCustVisible(true);\n      setFormData((prev) => {\n        return { ...prev, customers: value };\n      });\n    } else if (name == \"Customer\") {\n      setFormData((prev) => {\n        return { ...prev, customers: value };\n      });\n    } else {\n      setFormData((prev) => {\n        return { ...prev, [id]: value };\n      });\n    }\n  };\n\n  const getBusinessUnit = () => {\n    axios\n      .get(baseUrl + `/SalesMS/sales/getSalesOpportunitiesTags`)\n      .then((Response) => {\n        let business = [];\n        let data = Response.data;\n        data.length > 0 &&\n          data.forEach((e) => {\n            let businessobj = {\n              value: e.tag_value,\n              label: e.tag_name,\n            };\n            business.push(businessobj);\n          });\n        setBusiness(business);\n        setSelectedBusiness(business);\n      });\n  };\n  const getConsultants = () => {\n    axios\n      .get(baseUrl + `/SalesMS/sales/getSalesOpportunitiesConsultants`)\n      .then((Response) => {\n        let consultant = [];\n        let data = Response.data;\n\n        data.length > 0 &&\n          data.forEach((e) => {\n            let consultantobj = {\n              value: e.consultant_name,\n              label: e.consultant_name,\n            };\n            consultant.push(consultantobj);\n          });\n        setConsultant(consultant);\n        setSelectedConsultant(consultant);\n      });\n  };\n\n  const getCountries = () => {\n    axios.get(baseUrl + `/CostMS/cost/getCountries`).then((Response) => {\n      let countries = [];\n      let data = Response.data;\n      data.push({ id: 0, country_name: \"Others\" });\n      data.length > 0 &&\n        data.forEach((e) => {\n          let countryObj = {\n            label: e.country_name,\n            value: e.id,\n          };\n          e.country_name == \"NM\" ? \"\" : countries.push(countryObj);\n        });\n      setCountry(countries);\n      if (id == null) {\n        setSelectedCountry(countries);\n      }\n    });\n  };\n\n  const getType = () => {\n    let types = [];\n    types.push(\n      { value: \"Offshore\", label: \"Offshore\" },\n      { value: \"Onshore\", label: \"Onshore\" },\n      { value: \"Landed\", label: \"Landed\" }\n    );\n    setType(types);\n    setSelectedType(types.filter((ele) => ele.value >= \"\"));\n    let filteredType = [];\n    types.forEach((data) => {\n      if (data.value >= \"\") {\n        filteredType.push(data.value);\n      }\n    });\n  };\n  const handleClick = async () => {\n    setTimeout(() => {\n      setLoaderState(true);\n    }, 2000);\n    let filteredData = ref.current.filter((d) => d != null);\n\n    ref.current = filteredData;\n\n    let valid = GlobalValidation(ref);\n    if (valid) {\n      {\n        setSuccessvalidationmessage(true);\n        setLoaderState(false);\n      }\n      return;\n    }\n    setVisibleTable(false);\n\n    abortController.current = new AbortController();\n    axios({\n      method: \"post\",\n      url: baseUrl + `/SalesMS/sales/getSfOppts?loggedUserId=${loggedUserId}`,\n\n      data: {\n        from: moment(formData.from).format(\"yyyy-MM-DD\"),\n        customers: formData.customers == -1 ? -1 : selectedCust,\n        duration: formData.duration,\n        tags:\n          formData.tags ==\n            \"AM | Agile Data Science,AM | Data Science in a Box,AppM | Cloud,AppM | Cloud Native Dev,AppM | DevOps,AppM | Healthcare Integration Kit,AppM | Integration Modernization,AppM | Security,AppM | Test Automation,DT | Data Governance,DT | Data Management,DT | Data Privacy (CCPA/GDPR),IA | Blockchain,IA | Enterprise Automation,IA | Hyperautomation,IA | Process Mining,Ind | Energy & Utilities,Ind | Open Banking,Ind | Quick FHIR,Other | Consulting Field Delivery,Other | Consulting Proposal,Other | Consulting Tied to Innovation,Other | Consulting Tied To Workshop,Other | Consulting Workshop,Other | Data Fabric,Other | Deal Hub Completed,Other | GTM,Other | IBM Cloud Paks,Other | JO Influence,Other | Think Suite 2019\"\n            ? \"-1\"\n            : formData.tags,\n        probability: formData.probability,\n        viewBy: formData.viewBy,\n        prLoc:\n          formData.prLoc == \"Offshore,Onshore,Landed\" ? \"-1\" : formData.prLoc,\n        countries:\n          formData.countries == \"6,5,3,8,7,1,2,0\" ? \"-1\" : formData.countries,\n        oppType: formData.oppType,\n        consultants:\n          formData.consultants ==\n            \"Animesh Jain,Arup Data,Chris Isayan,Craig Breakspear,Greg Pochodaj,Harald Smith,Honda Bhyat,Kris Brown,Michael Gonzales,Michael Hahn,Mike Ryan,Minesh Manilal,Prashant,Rama Yenumula,Salem Hadim,Sandeep Chellingi,Timothy Reilly,Varun Maddula,Venu Polineni,Vishnu Pandit\"\n            ? \"-1\"\n            : formData.consultants,\n      },\n      signal: abortController.current.signal,\n    }).then(function (response) {\n      const responseData = response.data;\n      setData(responseData);\n      setRrId(responseData.reportrunId);\n      setLoaderState(false);\n      setsearching(true);\n      setVisibleTable(true);\n      setSuccessvalidationmessage(false);\n      setTimeout(() => {\n        setLoaderState(false);\n      }, 1000);\n      !valid && setVisible(!visible);\n      visible\n        ? setCheveronIcon(FaChevronCircleUp)\n        : setCheveronIcon(FaChevronCircleDown);\n    });\n  };\n\n  useEffect(() => {\n    data[0] && setHeaderData(JSON.parse(JSON.stringify(data[0])));\n  }, [data]);\n\n  const dynamicColumns = Object.keys(headerData)?.map((col, i) => {\n    return <Column sortable key={col} field={col} header={headerData[col]} />;\n  });\n\n  const onFilterChange = ({ id, value }) => {\n    setFormData((prevState) => {\n      return { ...prevState, [id]: value };\n    });\n  };\n  useEffect(() => {\n    getBusinessUnit();\n    getCountries();\n    getType();\n    getConsultants();\n  }, []);\n\n  const generateDropdownLabel = (selectedOptions, allOptions) => {\n    const selectedValues = selectedOptions.map((option) => option.value);\n    const allValues = allOptions.map((item) => item.value);\n\n    if (selectedValues.length === allValues.length) {\n      return \"<< ALL >>\";\n    } else {\n      return selectedOptions.map((option) => option.label).join(\", \");\n    }\n  };\n\n  return (\n    <div>\n      {successvalidationmessage ? (\n        <div className=\"statusMsg error\">\n          <span>\n            <AiFillWarning /> Please select the valid values for highlighted\n            fields\n          </span>\n        </div>\n      ) : (\n        \"\"\n      )}\n      <div className=\"col-md-12\">\n        <div className=\"pageTitle\">\n          <div className=\"childOne\"></div>\n          <div className=\"childTwo\">\n            <h2>Salesforce Opportunities</h2>\n          </div>\n\n          <div className=\"childThree\"></div>\n        </div>\n      </div>\n      <ScreenBreadcrumbs\n        routes={routes}\n        currentScreenName={currentScreenName}\n      />\n\n      <div className=\"group mb-3 customCard\">\n        {editmsg ? (\n          <div className=\"statusMsg success\">\n            <span className=\"errMsg\">\n              <BiCheck size=\"1.4em\" /> &nbsp; Search created successfully.\n            </span>\n          </div>\n        ) : (\n          \"\"\n        )}\n\n        <div className=\"col-md-12 collapseHeader\">\n          <h2>Search Filters</h2>\n          <div className=\"helpBtn\">\n            <GlobalHelp pdfname={HelpPDFName} name={header} />\n          </div>\n\n          <div\n            onClick={() => {\n              setVisible(!visible);\n\n              visible\n                ? setCheveronIcon(FaChevronCircleUp)\n                : setCheveronIcon(FaChevronCircleDown);\n            }}\n          >\n            <span>{cheveronIcon}</span>\n          </div>\n        </div>\n        <CCollapse visible={!visible}>\n          <div className=\"group-content row\">\n            <div className=\" col-md-3 mb-2\">\n              <div className=\"form-group row\">\n                <label className=\"col-5 ellipsis\" htmlFor=\"OpportunityType\">\n                  Opportunity Type\n                  <span className=\"required error-text\">*</span>\n                </label>\n                <span className=\"col-1 p-0\">:</span>\n                <div className=\"col-6\">\n                  <select\n                    className=\"text\"\n                    id=\"oppType\"\n                    name=\"oppType\"\n                    value={formData.oppType}\n                    // defaultValue={\"0\"}\n                    onChange={(e) => {\n                      const { value, id } = e.target;\n                      setFormData({ ...formData, [id]: value });\n                    }}\n                  >\n                    <option value=\"-1\"> &lt;&lt;ALL&gt;&gt;</option>\n                    <option value=\"0\">Services</option>\n                    <option value=\"1\">Software + Hardware</option>\n                  </select>\n                </div>\n              </div>\n            </div>\n            <div className=\" col-md-3 mb-2\">\n              <div className=\"form-group row\">\n                <label className=\"col-5\" htmlFor=\"FromQuarter\">\n                  From Quarter <span className=\"required error-text\">*</span>\n                </label>\n                <span className=\"col-1 p-0\">:</span>\n                <div className=\"col-6\" style={{ height: \"23px\" }}>\n                  <DatePicker\n                    className=\"disabledFieldLook\"\n                    selected={startDate}\n                    onChange={(e) => {\n                      setStartDate(e);\n                      const date = new Date(e.getTime());\n                      date.setFullYear(date.getFullYear() - 1);\n                      date.setMonth(date.getMonth() + 3);\n                      onFilterChange({\n                        id: \"from\",\n                        value: date.toLocaleDateString(\"en-CA\"),\n                      });\n                    }}\n                    dateFormat=\"'FY' yyyy-QQQ\"\n                    showQuarterYearPicker\n                  />\n                </div>\n              </div>\n            </div>\n            <div className=\" col-md-3 mb-2\">\n              <div className=\"form-group row\">\n                <label className=\"col-5\" htmlFor=\"duration\">\n                  Duration\n                  <span className=\"required error-text\">*</span>\n                </label>\n                <span className=\"col-1 p-0\">:</span>\n                <div className=\"col-6\">\n                  <select\n                    className=\"text\"\n                    id=\"duration\"\n                    // value=\"duration\"\n                    value={formData.duration}\n                    onChange={(e) => {\n                      const { value, id } = e.target;\n                      setFormData({ ...formData, [id]: value });\n                    }}\n                  >\n                    {/* <option value=\"\"> &lt;&lt;Select&gt;&gt;</option> */}\n                    <option value=\"1\">1</option>\n                    <option value=\"2\">2</option>\n                    <option value=\"3\">3</option>\n                    <option value=\"4\" selected>\n                      4\n                    </option>\n                  </select>\n                </div>\n              </div>\n            </div>\n            <div className=\" col-md-3 mb-2\">\n              <div className=\"form-group row\">\n                <label className=\"col-5\" htmlFor=\"Account\">\n                  Account\n                  <span className=\"required error-text\">*</span>\n                </label>\n                <span className=\"col-1 p-0\">:</span>\n                <div className=\"col-6\">\n                  <select\n                    ref={(ele) => {\n                      ref.current[0] = ele;\n                    }}\n                    defaultValue={\"-1\"}\n                    className=\"text\"\n                    id=\"Customer\"\n                    name=\"Customer\"\n                    onChange={handleChange1}\n                  >\n                    {selectedItems.length + \"selected\"}\n                    <option value=\"\"> &lt;&lt;Please Select&gt;&gt;</option>\n                    <option value={-1}> &lt;&lt;ALL&gt;&gt;</option>\n                    <option value=\"select\"> &lt;&lt;Select&gt;&gt;</option>\n                  </select>\n                </div>\n              </div>\n            </div>\n            <div className=\" col-md-3 mb-2\">\n              <div className=\"form-group row\">\n                <label className=\"col-5\" htmlFor=\"probability\">\n                  Probability\n                  <span className=\"required error-text\">*</span>\n                </label>\n                <span className=\"col-1 p-0\">:</span>\n                <div className=\"col-6\">\n                  <select\n                    className=\"text\"\n                    id=\"probability\"\n                    name=\"probability\"\n                    onChange={(e) => {\n                      const { value, id } = e.target;\n                      setFormData({ ...formData, [id]: value });\n                    }}\n                    value={formData.probability}\n                  >\n                    <option value=\"-1\"> &lt;&lt;ALL&gt;&gt;</option>\n                    <option value=\"<50\">&lt;50%</option>\n                    <option value=\">=50\" selected>\n                      &gt;=50%\n                    </option>\n                    <option value=\">=75\">&gt;=75%</option>\n                    <option value=\"=100\">=100%</option>\n                  </select>\n                </div>\n              </div>\n            </div>\n            <div className=\" col-md-3 mb-2\">\n              <div className=\"form-group row\">\n                <label className=\"col-5\" htmlFor=\"Tags\">\n                  Tags <span className=\"required error-text\">*</span>\n                </label>\n                <span className=\"col-1 p-0\">:</span>\n                <div className=\"col-6\">\n                  <div\n                    className=\"multiselect\"\n                    ref={(ele) => {\n                      ref.current[1] = ele;\n                    }}\n                  >\n                    <MultiSelect\n                      ArrowRenderer={ArrowRenderer}\n                      id=\"tags\"\n                      value={selectedBusiness}\n                      options={business}\n                      hasSelectAll={true}\n                      isLoading={false}\n                      shouldToggleOnHover={false}\n                      disableSearch={false}\n                      valueRenderer={generateDropdownLabel}\n                      disabled={false}\n                      onChange={(s) => {\n                        setSelectedBusiness(s);\n                        let filteredValues = [];\n                        s.forEach((d) => {\n                          filteredValues.push(d.label);\n                        });\n                        setFormData((prevVal) => ({\n                          ...prevVal,\n                          [\"tags\"]: filteredValues.toString(),\n                        }));\n                      }}\n                    />\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className=\" col-md-3 mb-2\">\n              <div className=\"form-group row\">\n                <label className=\"col-5\" htmlFor=\"countries\">\n                  Country\n                  <span className=\"required error-text\">*</span>\n                </label>\n                <span className=\"col-1 p-0\">:</span>\n                <div className=\"col-6\">\n                  <div\n                    className=\"multiselect\"\n                    ref={(ele) => {\n                      ref.current[2] = ele;\n                    }}\n                  >\n                    <MultiSelect\n                      ArrowRenderer={ArrowRenderer}\n                      id=\"countries\"\n                      options={country}\n                      hasSelectAll={true}\n                      value={selectedCountry}\n                      isLoading={false}\n                      shouldToggleOnHover={false}\n                      disableSearch={false}\n                      disabled={false}\n                      valueRenderer={generateDropdownLabel}\n                      onChange={(e) => {\n                        setSelectedCountry(e);\n                        let filteredCountry = [];\n                        e.forEach((d) => {\n                          filteredCountry.push(d.value);\n                        });\n                        setFormData((prevVal) => ({\n                          ...prevVal,\n                          [\"countries\"]: filteredCountry.toString(),\n                        }));\n                      }}\n                    />\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className=\" col-md-3 mb-2\">\n              <div className=\"form-group row\">\n                <label className=\"col-5\" htmlFor=\"prLoc\">\n                  PR Location\n                  <span className=\"required error-text\">*</span>\n                </label>\n                <span className=\"col-1 p-0\">:</span>\n                <div className=\"col-6\">\n                  <div\n                    className=\"multiselect\"\n                    ref={(ele) => {\n                      ref.current[3] = ele;\n                    }}\n                  >\n                    <MultiSelect\n                      ArrowRenderer={ArrowRenderer}\n                      id=\"prLoc\"\n                      options={Type.sort((a, b) =>\n                        a.label.localeCompare(b.label)\n                      )}\n                      hasSelectAll={true}\n                      value={selectedType}\n                      disabled={false}\n                      valueRenderer={generateDropdownLabel}\n                      onChange={(e) => {\n                        setSelectedType(e);\n                        let filteredType = [];\n                        e.forEach((d) => {\n                          filteredType.push(d.value);\n                        });\n                        setFormData((prevVal) => ({\n                          ...prevVal,\n                          [\"prLoc\"]: filteredType.toString(),\n                        }));\n                      }}\n                    />\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            <div className=\" col-md-3 mb-2\">\n              <div className=\"form-group row\">\n                <label className=\"col-5\" htmlFor=\"consultants\">\n                  Consultants\n                  <span className=\"required error-text\">*</span>\n                </label>\n                <span className=\"col-1 p-0\">:</span>\n                <div className=\"col-6\">\n                  <div\n                    className=\"multiselect\"\n                    ref={(ele) => {\n                      ref.current[4] = ele;\n                    }}\n                  >\n                    <MultiSelect\n                      ArrowRenderer={ArrowRenderer}\n                      id=\"consultants\"\n                      options={consultant}\n                      hasSelectAll={true}\n                      value={selectedConsultant}\n                      isLoading={false}\n                      shouldToggleOnHover={false}\n                      disableSearch={false}\n                      disabled={false}\n                      valueRenderer={generateDropdownLabel}\n                      onChange={(e) => {\n                        setSelectedConsultant(e);\n                        let filteredCountry = [];\n                        e.forEach((d) => {\n                          filteredCountry.push(d.label);\n                        });\n                        setFormData((prevVal) => ({\n                          ...prevVal,\n                          [\"consultants\"]: filteredCountry.toString(),\n                        }));\n                      }}\n                    />\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className=\" col-md-3 mb-2\">\n              <div className=\"form-group row\">\n                <label className=\"col-5\" htmlFor=\"viewBy\">\n                  View By\n                </label>\n                <span className=\"col-1 p-0\">:</span>\n                <div className=\"col-6\">\n                  <select\n                    defaultValue={\"oppt\"}\n                    className=\"text\"\n                    id=\"viewBy\"\n                    name=\"viewBy\"\n                    onChange={(e) => {\n                      setVisibleTable(false);\n                      const { value, id } = e.target;\n                      setFormData({ ...formData, [id]: value });\n                    }}\n                    value={formData.viewBy}\n                  >\n                    <option value=\"comp\">Competency</option>\n                    <option value=\"consl\">Consultant</option>\n                    <option value=\"cust\">Customer</option>\n                    <option value=\"exec\">Executive</option>\n                    <option value=\"oppt\">Opportunity</option>\n                  </select>\n                </div>\n              </div>\n            </div>\n\n            <div className=\"col-md-12 col-sm-12 col-xs-12 btn-container center my-3 mb-2\">\n              <button\n                type=\"submit\"\n                className=\"btn btn-primary\"\n                title=\"Search\"\n                onClick={() => {\n                  handleClick();\n                }}\n              >\n                <FaSearch />\n                Search\n              </button>\n            </div>\n          </div>\n        </CCollapse>\n      </div>\n      <SelectCustDialogBox\n        flag={flag}\n        visible={custVisible}\n        setVisible={setCustVisible}\n        setSelectedItems={setSelectedItems}\n        selectedItems={selectedItems}\n        setUpdatedValue={setUpdatedValue}\n      />\n\n      {searching && visibleTable && formData.viewBy == \"oppt\" ? (\n        <div>\n          <OpportunityTable\n            tableData={data}\n            rrId={rrId}\n            searching={searching}\n            setsearching={setsearching}\n          />\n        </div>\n      ) : searching && visibleTable && formData.viewBy == \"comp\" ? (\n        <CompetencyTable tableData={data} rrId={rrId} searching={searching} />\n      ) : searching && visibleTable && formData.viewBy == \"cust\" ? (\n        <OpportunityCustomers tableData={data} rrId={rrId} />\n      ) : searching && visibleTable && formData.viewBy == \"consl\" ? (\n        <OpportunityConsultant tableData={data} rrId={rrId} />\n      ) : searching && visibleTable && formData.viewBy == \"exec\" ? (\n        <Executive tableData={data} rrId={rrId} />\n      ) : (\n        \"\"\n      )}\n      {loaderState ? <Loader handleAbort={handleAbort} /> : \"\"}\n    </div>\n  );\n}\nexport default Opportunities;\n"],"names":["props","tableData","rrId","searching","useState","type","setType","salesOppoId","setSalesOppoId","cols","columns","replace","array","split","oppoName","setOppoName","newArray","sfBuckets","map","item","JSON","parse","stringify","sortColumn","setSortColumn","sortDirection","setSortDirection","updateTableData","data","sortedData","sort","a","b","columnA","String","columnB","customer","localeCompare","displayTableData","useEffect","tableHeaders","setTableHeaders","tableRows","setTableRows","headers","rows","forEach","objData","index","tabData","Object","keys","key","unWantedCols","id","indexOf","val","dVal","includes","push","style","textAlign","position","top","background","zIndex","cursor","className","onClick","columnName","length","fontSize","title","color","backgroundColor","Math","round","toLocaleString","isProspect","marginLeft","whiteSpace","overflow","textOverflow","maxWidth","href","target","rel","float","display","alignItems","justifyContent","border","padding","borderRadius","width","margin","SfPRTable","reportRunId","SfDocuments","loaderState","setLoaderState","Date","startDate","setStartDate","country","setCountry","selectedCountry","setSelectedCountry","Type","selectedType","setSelectedType","setsearching","visible","setVisible","visibleTable","setVisibleTable","setData","headerData","setHeaderData","updatedValue","setUpdatedValue","defaultDate","now","quarter","floor","getMonth","getFullYear","toLocaleDateString","custVisible","setCustVisible","abortController","useRef","ref","successvalidationmessage","setSuccessvalidationmessage","baseUrl","environment","setRrId","location","useLocation","URLSearchParams","search","get","editmsg","filterData","setFilterData","loggedUserId","localStorage","getItem","routes","setRoutes","ArrowRenderer","expanded","getMenus","axios","method","url","then","resp","menu","subMenus","filter","subMenu","display_name","res","getData","from","moment","format","customers","duration","tags","probability","viewBy","prLoc","countries","oppType","consultants","formData","setFormData","FaChevronCircleUp","cheveronIcon","setCheveronIcon","business","setBusiness","selectedBusiness","setSelectedBusiness","consultant","setConsultant","selectedConsultant","setSelectedConsultant","toString","updatebusiness","values","label","updatecountry","value","updatetype","updateconsultant","undefined","updatequarter","setMonth","setFullYear","selectedItems","setSelectedItems","Customer","d","selectedCust","handleClick","setTimeout","filteredData","current","valid","GlobalValidation","AbortController","signal","response","responseData","reportrunId","FaChevronCircleDown","col","i","sortable","field","header","Response","e","businessobj","tag_value","tag_name","country_name","countryObj","types","ele","filteredType","getType","consultantobj","consultant_name","generateDropdownLabel","selectedOptions","allOptions","selectedValues","option","allValues","join","ScreenBreadcrumbs","currentScreenName","size","GlobalHelp","pdfname","name","htmlFor","onChange","height","selected","date","getTime","prevState","onFilterChange","dateFormat","showQuarterYearPicker","defaultValue","prev","options","hasSelectAll","isLoading","shouldToggleOnHover","disableSearch","valueRenderer","disabled","s","filteredValues","prevVal","filteredCountry","SelectCustDialogBox","flag","CompetencyTable","OpportunityCustomers","OpportunityConsultant","Executive","Loader","handleAbort","abort"],"sourceRoot":""}