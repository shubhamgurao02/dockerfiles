{"version":3,"file":"static/js/8589.3189bd8b.chunk.js","mappings":"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","sources":["views/RevenueMetrices/MonthlyForecastRevenueTableComponent.js","views/RevenueMetrices/RevenueForecastBuCustomer.js","views/RevenueMetrices/RevenueForecastBuTable.js","views/RevenueMetrices/RevenueForecastInfoPopUp.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport MaterialReactTable from \"material-react-table\";\nimport fte_active from \"../../assets/images/empstatusIcon/fte_active.png\";\nimport subk_active from \"../../assets/images/empstatusIcon/subk_active.png\";\nimport { FaInfoCircle } from \"react-icons/fa\";\nimport RevenueForecastInfoPopUp from \"./RevenueForecastInfoPopUp\";\nimport \"./MonthlyForecastRevenueTableComponent.scss\";\n\nexport default function MonthlyForecastRevenueTableComponent(props) {\n  const icons = {\n    Employee: (\n      <img\n        src={fte_active}\n        alt=\"(fte_active_icon)\"\n        style={{ height: \"12px\" }}\n        title=\"Employee\"\n      />\n    ),\n    Contractor: (\n      <img\n        src={subk_active}\n        alt=\"(subk_active_icon)\"\n        style={{ height: \"12px\" }}\n        title=\"Contractor\"\n      />\n    ),\n  };\n  const { data, expandedCols, colExpandState } = props;\n\n  const [nodes, setNodes] = useState([]);\n  const [columns, setColumns] = useState(null);\n  const [hiddenColumns, setHiddenColumns] = useState({});\n  const [colExpFlag, setColumnExpFlag] = useState(false);\n  const [headers, setHeaders] = useState([]);\n  const [infoPopUp, setInfoPopUp] = useState(false);\n  const [iconName, setIconName] = useState();\n  const [object, setObject] = useState({});\n  const [anchorEl, setAnchorEl] = useState(null);\n\n  const numberWithCommas = (x) => {\n    var number = String(x);\n    if (number.includes(\".\") === true) {\n      if (number.includes(\".00\") === true) {\n        var decimalNumbers = number;\n        var num = Number(decimalNumbers);\n        let FdN = num != null && num?.toFixed(0);\n        let final = FdN.split(\".\");\n        final[0] = final[0].replace(/(?<=\\d)(?=(\\d{3})+(?!\\d|\\.))/g, \",\");\n\n        return final.join(\".\");\n      } else {\n        var decimalNumbers = number;\n        var num = Number(decimalNumbers);\n        let FdN = num != null && num?.toFixed(2);\n        let final = FdN.split(\".\");\n        final[0] = final[0].replace(/(?<=\\d)(?=(\\d{3})+(?!\\d|\\.))/g, \",\");\n\n        return final.join(\".\");\n      }\n    } else {\n      return (\n        number != null && number?.replace(/(?<=\\d)(?=(\\d{3})+(?!\\d|\\.))/g, \",\")\n      );\n    }\n  };\n  useEffect(() => {\n    getData();\n  }, [data]);\n  useEffect(() => {\n    setHeaders(object);\n    setObject(object);\n  }, [object]);\n  const getData = () => {\n    let tableData =\n      data?.utilizationTableData ||\n      data?.benchUtilizationTableData ||\n      data?.tableData;\n    let columns = null;\n    if (\n      data?.benchUtilizationColumns?.includes(\"'\") ||\n      data?.utilizationcolumns?.includes(\"'\") ||\n      data?.columns?.includes(\"'\")\n    ) {\n      columns =\n        data?.benchUtilizationColumns?.replaceAll(\"'\", \"\") ||\n        data?.utilizationcolumns?.replaceAll(\"'\", \"\") ||\n        data?.columns?.replaceAll(\"'\", \"\");\n    } else {\n      columns = data?.benchUtilizationColumns || data?.utilizationcolumns;\n    }\n\n    let colArr = columns?.split(\",\");\n\n    let newHeaders = [];\n    let hiddenHeaders = [];\n    const obj1 = {};\n\n    const obj = {};\n\n    for (let i = 0; i < colArr?.length; i++) {\n      let colVal = colArr[i].trim();\n\n      let firstData = tableData[0];\n      obj[colVal] = firstData[colVal];\n    }\n\n    let headerArray = Object.entries(obj);\n    let unWantedCols = [];\n\n    let filteredHeaders = headerArray.filter(\n      ([key, value]) =>\n        (typeof value === \"string\" && key?.includes(\"name\")) ||\n        key?.includes(\"rcount\") ||\n        key?.includes(\"Hrs\") ||\n        key?.includes(\"capacityGross\") ||\n        key?.includes(\"Revenue\") ||\n        key?.includes(\"GM\") ||\n        key?.includes(\"Cost\")\n    );\n    filteredHeaders.forEach((d) => (obj1[d[1]?.split(\"-\")[0]] = d[0]));\n\n    let newObject = Object.entries(obj1);\n\n    setHiddenColumns(Object.assign({}, ...hiddenHeaders));\n    let minusOneRow = tableData?.filter((d) => d.id == 0);\n\n    newObject?.map(([key, value], index) => {\n      newHeaders.push({\n        accessorKey: value,\n        header: key,\n        enableColumnActions: false,\n        enableHiding: true,\n        Header: ({ column }) => (\n          <div\n            className={\n              value.includes(\"name\")\n                ? \"mixer\"\n                : value.includes(\"rcount\")\n                ? \"mixer\"\n                : \"\"\n            }\n            title={key}\n          >\n            {key}\n\n            {value.includes(\"name\") || value.includes(\"rcount\") ? (\n              \"\"\n            ) : (\n              <FaInfoCircle\n                className=\"tableInfoIcon\"\n                onClick={(e) => {\n                  setAnchorEl(e.currentTarget);\n                  setIconName(key);\n                  setInfoPopUp(true);\n                }}\n              >\n                {\"\"}\n              </FaInfoCircle>\n            )}\n          </div>\n        ),\n      });\n    });\n\n    let subHeaders = minusOneRow ? Object.entries(minusOneRow[0]) : null;\n\n    subHeaders?.sort();\n\n    const revenueOrder = [\n      \"Revenue\",\n      \"AssRevenue\",\n      \"ActRevenue\",\n      \"ApprRevenue\",\n      \"RecRevenue\",\n      \"AvgCost\",\n      \"NAvgCost\",\n      \"RRCost\",\n      \"NRRCost\",\n      \"TrueCost\",\n      \"AcGM\",\n      \"NAcGM\",\n      \"RRGM\",\n      \"NRRGM\",\n      \"TcGM\",\n    ];\n    if (subHeaders !== null) {\n      subHeaders = subHeaders.sort((a, b) => {\n        const indexA = revenueOrder.indexOf(a[0]);\n        const indexB = revenueOrder.indexOf(b[0]);\n        return indexA - indexB;\n      });\n    }\n\n    newHeaders.map((data) => {\n      let i = newHeaders.indexOf(data);\n      let subArray = [];\n      subHeaders.map(([key, value], index) => {\n        let subkey = key.includes(\"GM\")\n          ? \"GM\"\n          : key.includes(\"capacity\") || key.includes(\"gross\")\n          ? \"capacity\"\n          : key.includes(\"allocations\")\n          ? \"allocations\"\n          : key.includes(\"billAlloc\")\n          ? \"billAlloc\"\n          : key.includes(\"billAct\")\n          ? \"billAct\"\n          : key.includes(\"billAss\")\n          ? \"billAss\"\n          : key.includes(\"billAppr\")\n          ? \"billAppr\"\n          : key.includes(\"Cost\")\n          ? \"Cost\"\n          : key.includes(\"Revenue\")\n          ? \"Revenue\"\n          : null;\n\n        if (subkey != null) {\n          if (data.accessorKey.includes(subkey)) {\n            let obj = {\n              id: key,\n              header:\n                value == null || value == 0 ? (\n                  \"\"\n                ) : (\n                  <div className=\"center-align\">\n                    {value == \"PR (Bill+Ovrh)\" ? (\n                      <div title={\"PR (Role)\"}> {\"PR (Role)\"}</div>\n                    ) : value == \"RR\" ? (\n                      <div title={\"RR (Role)\"}> {\"RR (Role)\"}</div>\n                    ) : (\n                      <div title={value}> {value}</div>\n                    )}\n                  </div>\n                ),\n              accessorKey: key,\n              Cell: ({ cell }) => {\n                return (\n                  <span>\n                    {cell.column.id == \"name\" ? (\n                      <span title={cell.getValue()}>\n                        {icons[cell.row.original[\"name\"]]}\n                        <b>{cell.getValue()}</b>\n                      </span>\n                    ) : key.includes(\"Revenue\") || key.includes(\"Cost\") ? (\n                      <>\n                        <div title={numberWithCommas(cell.getValue())}>\n                          <span>\n                            $\n                            <span style={{ float: \"right\" }}>\n                              {numberWithCommas(cell.getValue())}\n                            </span>\n                          </span>\n                        </div>\n                      </>\n                    ) : key.includes(\"GM\") ? (\n                      <div\n                        class=\"align right\"\n                        title={numberWithCommas(cell.getValue())}\n                      >\n                        {numberWithCommas(cell.getValue())}%\n                      </div>\n                    ) : (\n                      <div\n                        class=\"align right\"\n                        title={numberWithCommas(cell.getValue())}\n                      >\n                        {numberWithCommas(cell.getValue())}{\" \"}\n                      </div>\n                    )}\n                  </span>\n                );\n              },\n            };\n            subArray.push(obj);\n\n            newHeaders[i].columns = subArray;\n          }\n        } else {\n          if (data.accessorKey.includes(key)) {\n            let obj = {\n              id: key,\n              header:\n                value == null || value == 0 ? (\n                  <span className=\"center-align\" title={value}>\n                    {value}\n                  </span>\n                ) : (\n                  <div\n                    className={\n                      value.includes(null) || (value.includes(\"\") && \"nullCol\")\n                    }\n                  >\n                    {value == \"PR (Bill+Ovrh)\" ? (\n                      <div title={\"PR (Role)\"}> {\"PR (Role)\"}</div>\n                    ) : value == \"RR\" ? (\n                      <div title={\"RR (Role)\"}> {\"RR (Role)\"}</div>\n                    ) : (\n                      <div title={value}> {value}</div>\n                    )}\n                  </div>\n                ),\n              accessorKey: key,\n              Cell: ({ cell }) => {\n                return (\n                  <span>\n                    {cell.column.id == \"name\" ? (\n                      <span title={cell.getValue()}>\n                        {icons[cell.row.original[\"name\"]]}\n                        <b>{cell.getValue()}</b>\n                      </span>\n                    ) : (\n                      <div\n                        class=\"align right\"\n                        title={numberWithCommas(cell.getValue())}\n                      >\n                        {numberWithCommas(cell.getValue())}\n                      </div>\n                    )}\n                  </span>\n                );\n              },\n            };\n            newHeaders[i].columns = [obj];\n          }\n        }\n      });\n    });\n\n    setColumns(newHeaders);\n\n    let values = [];\n    tableData?.map((d) => (d.id != -1 && d.id != -2 ? values.push(d) : \"\"));\n\n    let tempData = jsonToTree(values, { children: \"subRows\" });\n    setNodes(tempData.slice(1, tempData.length));\n  };\n\n  useEffect(() => {\n    colExpFlag ? setHiddenColumns({}) : colCollapse();\n  }, [colExpFlag]);\n\n  const colCollapse = () => {\n    let hiddenHeaders = [];\n    // refactor this\n    headers.map(([key, value]) => {\n      if (expandedCols.includes(key)) {\n        hiddenHeaders.push({ [key]: false });\n      }\n    });\n\n    setHiddenColumns(Object.assign({}, ...hiddenHeaders));\n  };\n\n  const jsonToTree = (flatArray, options) => {\n    options = {\n      id: \"id\",\n      parentId: \"parentId\",\n      children: \"subRows\",\n      ...options,\n    };\n    const dictionary = {}; // a hash table mapping to the specific array objects with their ids as key\n    const tree = [];\n    const children = options.children;\n    flatArray.forEach((node) => {\n      const nodeId = node[options.id];\n      const nodeParentId = node[options.parentId];\n      // set up current node data in dictionary\n      dictionary[nodeId] = {\n        [children]: [], // init a children property\n        ...node, // add other propertys\n        ...dictionary[nodeId], // children will be replaced if this node already has children property which was set below\n      };\n      dictionary[nodeParentId] = dictionary[nodeParentId] || { [children]: [] }; // if it's not exist in dictionary, init an object with children property\n      dictionary[nodeParentId][children].push(dictionary[nodeId]); // add reference to current node object in parent node object\n    });\n    // find root nodes\n    Object.values(dictionary).forEach((obj) => {\n      if (typeof obj[options.id] === \"undefined\") {\n        tree.push(...obj[children]);\n      }\n    });\n    return tree;\n  };\n  return (\n    <div className=\"materialReactExpandableTable mfrTable darkHeader \">\n      {nodes.length ? (\n        <MaterialReactTable\n          columns={columns}\n          data={nodes}\n          // enableExpandAll={false} //hide expand all double arrow in column header\n          // enableExpanding\n          enablePagination={false}\n          //enableRowVirtualization\n          enableBottomToolbar={false}\n          enableTopToolbar={false}\n          enableColumnActions={false}\n          enableColumnFilterModes={true}\n          enableSorting={false}\n          filterFromLeafRows //apply filtering to all rows instead of just parent rows\n          state={{ columnVisibility: { ...hiddenColumns } }}\n          defaultColumn={{\n            minSize: 40,\n            maxSize: 1000,\n            size: 40,\n          }} //units are in px\n          muiSearchTextFieldProps={{\n            placeholder: `search`,\n            sx: { minWidth: \"300px\" },\n            variant: \"standard\",\n          }}\n          muiTableBodyProps={{\n            sx: {\n              \"&\": {\n                borderRight: \"1px solid #ccc\",\n                borderBottom: \"1px solid #ccc\",\n              },\n              \"& td:first-of-type\": {\n                borderLeft: \"1px solid #ccc\",\n              },\n              \"& td\": {\n                // borderTop: \"1px solid #ccc\",\n                borderRight: \"1px solid #ccc\",\n                height: \"22px\",\n                padding: \"0px 5px\",\n                maxWidth: \"150px\",\n              },\n              \"& td:nth-of-type(even)\": {\n                backgroundColor: \"aliceblue\",\n              },\n            },\n          }}\n          muiTableHeadProps={{\n            sx: {\n              \"& th\": {\n                borderTop: \"1px solid #ccc\",\n                borderRight: \"1px solid #ccc\",\n                background: \"#f4f4f4 \",\n                padding: \"0 5px\",\n              },\n              \"& th:first-of-type\": {\n                borderLeft: \"1px solid #ccc\",\n              },\n            },\n          }}\n        />\n      ) : null}\n      {infoPopUp ? (\n        <RevenueForecastInfoPopUp\n          infoPopUp={infoPopUp}\n          setInfoPopUp={setInfoPopUp}\n          iconName={iconName}\n          setIconName={setIconName}\n          anchorEl={anchorEl}\n          setAnchorEl={setAnchorEl}\n        />\n      ) : (\n        \"\"\n      )}\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport MaterialReactTable from \"material-react-table\";\nimport { IconButton } from \"@mui/material\";\nimport fte_active from \"../../assets/images/empstatusIcon/fte_active.png\";\nimport fte_inactive from \"../../assets/images/empstatusIcon/fte_inactive.png\";\nimport fte_notice from \"../../assets/images/empstatusIcon/fte_notice.png\";\nimport subk_active from \"../../assets/images/empstatusIcon/subk_active.png\";\nimport subk_inactive from \"../../assets/images/empstatusIcon/subk_inactive.png\";\nimport subk_notice from \"../../assets/images/empstatusIcon/subk_notice.png\";\nimport { AiFillRightCircle } from \"react-icons/ai\";\nimport { FaInfoCircle } from \"react-icons/fa\";\nimport \"./RevenueForecastBuCustomer.scss\";\nimport RevenueForecastInfoPopUp from \"./RevenueForecastInfoPopUp\";\nimport { Link } from \"react-router-dom\";\n\nexport default function RevenueForecastBuCustomer(props) {\n  const icons = {\n    Employee: (\n      <img\n        src={fte_active}\n        alt=\"(fte_active_icon)\"\n        style={{ height: \"12px\" }}\n        title=\"Employee\"\n      />\n    ),\n    Contractor: (\n      <img\n        src={subk_active}\n        alt=\"(subk_active_icon)\"\n        style={{ height: \"12px\" }}\n        title=\"Contractor\"\n      />\n    ),\n    fteActive: (\n      <img\n        src={fte_active}\n        alt=\"(fte_active_icon)\"\n        style={{ height: \"12px\" }}\n        title=\"Active Employee\"\n      />\n    ),\n    fteNotice: (\n      <img\n        src={fte_notice}\n        alt=\"(fte_notice_icon)\"\n        style={{ height: \"12px\" }}\n        title=\"Employee in notice period\"\n      />\n    ),\n    fteInactive: (\n      <img\n        src={fte_inactive}\n        alt=\"(fte_inactive_icon)\"\n        style={{ height: \"12px\", marginTop: \"-5px\" }}\n        title=\"Ex-Employee\"\n      />\n    ),\n    subkActive: (\n      <img\n        src={subk_active}\n        alt=\"(subk_active_icon)\"\n        style={{ height: \"12px\" }}\n        title=\"Active Contractor\"\n      />\n    ),\n    subk0: (\n      <img\n        src={subk_inactive}\n        alt=\"(subk_inactive_icon)\"\n        style={{ height: \"12px\", marginTop: \"-5px\" }}\n        title=\"Ex-Contractor\"\n      />\n    ),\n    subk2: (\n      <img\n        src={subk_notice}\n        alt=\"(subk_notice_icon)\"\n        style={{ height: \"12px\" }}\n        title=\"Contractor in notice period\"\n      />\n    ),\n  };\n  const { data, expandedCols, colExpandState } = props;\n  const [nodes, setNodes] = useState([]);\n  const [columns, setColumns] = useState(null);\n  const [hiddenColumns, setHiddenColumns] = useState({});\n  const [colExpFlag, setColumnExpFlag] = useState(false);\n  const [headers, setHeaders] = useState([]);\n  const [object, setObject] = useState({});\n  const [infoPopUp, setInfoPopUp] = useState(false);\n  const [iconName, setIconName] = useState();\n  const [anchorEl, setAnchorEl] = useState(null);\n\n  const numberWithCommas = (x) => {\n    var number = String(x);\n    if (number.includes(\".\")) {\n      if (number.includes(\".00\")) {\n        var number = parseFloat(x);\n        return number?.toLocaleString();\n      } else {\n        var decimalNumbers = number;\n        var num = Number(decimalNumbers);\n        let FdN = num != null && num?.toFixed(2);\n        let final = FdN.split(\".\");\n        final[0] = final[0]?.replace(/(\\d)(?=(\\d{2})+\\d$)/g, \"$1,\");\n        final[1] = final[1]?.replace(/(\\d{3})(?=\\d)/g, \"$1,\");\n\n        return final.join(\".\");\n      }\n    } else {\n      var number = parseFloat(x);\n      return number?.toLocaleString();\n    }\n  };\n  useEffect(() => {\n    numberWithCommas(getData());\n  }, [data]);\n\n  useEffect(() => {\n    setHeaders(object);\n    setObject(object);\n  }, [object]);\n\n  const getData = () => {\n    let tableData = data?.tableData;\n    let columns = null;\n    if (data?.columns?.includes(\"'\")) {\n      columns = data?.columns?.replaceAll(\"'\", \"\");\n    } else {\n      columns = data?.columns;\n    }\n\n    let colArr = columns?.split(\",\");\n\n    let newHeaders = [];\n    let hiddenHeaders = [];\n    const obj1 = {};\n\n    const obj = {};\n\n    //iterate objects and remove \"^&\"\n\n    for (let i = 0; i < colArr?.length; i++) {\n      let colVal = colArr[i].trim();\n\n      let firstData = tableData[0];\n\n      obj[colVal] = firstData[colVal];\n    }\n\n    let headerArray = Object.entries(obj);\n    let unWantedCols = [];\n\n    let filteredHeaders = headerArray.filter(\n      ([key, value]) => typeof value === \"string\" && value.includes(\"^&\")\n    );\n\n    filteredHeaders.forEach((d) => (obj1[d[1].split(\"^&\")[0]] = d[0]));\n\n    let newObject = Object.entries(obj1);\n\n    setHiddenColumns(Object.assign({}, ...hiddenHeaders));\n\n    let minusOneRow = tableData?.filter((d) => d.id == -1);\n\n    newObject?.map(([key, value], index) => {\n      newHeaders.push({\n        accessorKey: value,\n        header: key,\n        enableColumnActions: false,\n        enableHiding: true,\n        Header: ({ column }) => (\n          <div\n            className={\n              value.includes(\"name\")\n                ? \"mixer\"\n                : value.includes(\"rcount\")\n                ? \"mixer\"\n                : \"\"\n            }\n            title={key}\n          >\n            {key}\n            {value == colExpandState[2] ? (\n              <IconButton\n                onClick={() => {\n                  setColumnExpFlag((prev) => !prev);\n                }}\n              >\n                <AiFillRightCircle />\n              </IconButton>\n            ) : value.includes(\"name\") || value.includes(\"rcount\") ? (\n              \"\"\n            ) : (\n              <FaInfoCircle\n                className=\"tableInfoIcon\"\n                onClick={(e) => {\n                  setAnchorEl(e.currentTarget);\n                  setIconName(key);\n                  setInfoPopUp(true);\n                }}\n              >\n                {\"\"}\n              </FaInfoCircle>\n            )}\n          </div>\n        ),\n      });\n    });\n\n    let subHeaders = minusOneRow ? Object.entries(minusOneRow[0]) : null;\n\n    subHeaders?.sort();\n\n    const revenueOrder = [\n      \"Revenue\",\n      \"AssRevenue\",\n      \"ActRevenue\",\n      \"ApprRevenue\",\n      \"RecRevenue\",\n      \"AvgCost\",\n      \"NAvgCost\",\n      \"RRCost\",\n      \"NRRCost\",\n      \"TrueCost\",\n      \"AcGM\",\n      \"NAcGM\",\n      \"RRGM\",\n      \"NRRGM\",\n      \"TcGM\",\n    ];\n\n    if (subHeaders !== null) {\n      subHeaders = subHeaders.sort((a, b) => {\n        const indexA = revenueOrder.indexOf(a[0]);\n        const indexB = revenueOrder.indexOf(b[0]);\n        return indexA - indexB;\n      });\n    }\n\n    newHeaders.map((data) => {\n      let i = newHeaders.indexOf(data);\n      let subArray = [];\n      subHeaders.map(([key, value], index) => {\n        let subkey = key.includes(\"GM\")\n          ? \"GM\"\n          : key.includes(\"capacity\") || key.includes(\"gross\")\n          ? \"capacity\"\n          : key.includes(\"allocations\")\n          ? \"allocations\"\n          : key.includes(\"billAlloc\")\n          ? \"billAlloc\"\n          : key.includes(\"billAct\")\n          ? \"billAct\"\n          : key.includes(\"billAss\")\n          ? \"billAss\"\n          : key.includes(\"billAppr\")\n          ? \"billAppr\"\n          : key.includes(\"Cost\")\n          ? \"Cost\"\n          : key.includes(\"Revenue\")\n          ? \"Revenue\"\n          : null;\n\n        if (subkey != null) {\n          if (data.accessorKey.includes(subkey)) {\n            {\n              let obj = {\n                id: key,\n                header:\n                  value == null || value == 0 ? (\n                    \"\"\n                  ) : (\n                    <div className=\"center-align\">\n                      <div title={value}>{value}</div>\n                    </div>\n                  ),\n                accessorKey: key,\n                Cell: ({ cell }) => {\n                  return (\n                    <span\n                      style={{\n                        whiteSpace: \"nowrap\",\n                        overflow: \"hidden\",\n                        textOverflow: \"ellipsis\",\n                      }}\n                    >\n                      {cell.column.id == \"name\" && cell.row.original != null ? (\n                        <>\n                          <span title={cell.getValue().split(\"^&\")[0]}>\n                            {(cell.row.original.lvl == \"2\" &&\n                              cell.row.original.name != \"Summary\") ||\n                            (cell.row.original.lvl == \"2\" &&\n                              cell.row.original.name == \"Summary\") ? (\n                              cell.row.original.lvl == \"2\" &&\n                              cell.row.original.resTyp.split(\"^&^&\")[0] ==\n                                \"FTE\" ? (\n                                <div>\n                                  {cell.row.original.resTyp.split(\"^&^&\")[0]}\n                                </div>\n                              ) : cell.row.original.lvl == \"2\" &&\n                                cell.row.original.resTyp.split(\"^&^&\")[0] ==\n                                  \"Contractor\" ? (\n                                <div className=\"align right\">\n                                  {cell.row.original.resTyp.split(\"^&^&\")[0]}\n                                </div>\n                              ) : (\n                                <>\n                                  {\n                                    icons[\n                                      cell.row.original.resTyp.split(\"^&^&\")[2]\n                                    ]\n                                  }\n\n                                  <Link\n                                    to={`/resource/profile/:${\n                                      cell.row.original.resTyp.split(\"^&^&\")[3]\n                                    }`}\n                                    target=\"_blank\"\n                                  >\n                                    {cell.row.original.resTyp.split(\"^&^&\")[0]}\n                                  </Link>\n                                </>\n                              )\n                            ) : (\n                              <b>{cell.getValue().split(\"^&\")[0]}</b>\n                            )}\n                          </span>\n                        </>\n                      ) : cell.getValue() != null &&\n                        (key.includes(\"Revenue\") || key.includes(\"Cost\")) ? (\n                        <>\n                          <div title={numberWithCommas(cell.getValue())}>\n                            <span>\n                              $\n                              {cell.row.original.lvl == \"2\" ? (\n                                <div style={{ float: \"right\" }}>\n                                  {numberWithCommas(cell.getValue())}\n                                </div>\n                              ) : (\n                                <b style={{ float: \"right\" }}>\n                                  {numberWithCommas(cell.getValue())}\n                                </b>\n                              )}\n                            </span>\n                          </div>\n                        </>\n                      ) : cell.getValue() != null &&\n                        (key.includes(\"GM\") || key.includes(\"Perc\")) ? (\n                        <>\n                          {cell.row.original.lvl == \"2\" ? (\n                            <div\n                              class=\"align right\"\n                              title={numberWithCommas(cell.getValue())}\n                            >\n                              {numberWithCommas(cell.getValue())} %\n                            </div>\n                          ) : (\n                            <b\n                              class=\"align right\"\n                              title={numberWithCommas(cell.getValue())}\n                            >\n                              {numberWithCommas(cell.getValue())} %\n                            </b>\n                          )}\n                        </>\n                      ) : cell.row.original.lvl == \"2\" ? (\n                        <div\n                          class=\"align right\"\n                          title={numberWithCommas(cell.getValue())}\n                        >\n                          {numberWithCommas(cell.getValue())}\n                        </div>\n                      ) : (\n                        <b\n                          class=\"align right\"\n                          title={numberWithCommas(cell.getValue())}\n                        >\n                          {numberWithCommas(cell.getValue())}\n                        </b>\n                      )}\n                    </span>\n                  );\n                },\n              };\n              subArray.push(obj);\n\n              newHeaders[i].columns = subArray;\n            }\n          }\n        } else {\n          if (data.accessorKey.includes(key)) {\n            let obj = {\n              id: key,\n              header:\n                value == null || value == 0 ? (\n                  \"\"\n                ) : (\n                  <div\n                    className={\n                      value.includes(null) ||\n                      (value.includes(\"\") && \"nullCol\" && \"center-align\")\n                    }\n                  >\n                    <div title={value}>{value}</div>\n                  </div>\n                ),\n              accessorKey: key,\n              Cell: ({ cell }) => {\n                return (\n                  <span\n                    style={{\n                      whiteSpace: \"nowrap\",\n                      overflow: \"hidden\",\n                      textOverflow: \"ellipsis\",\n                    }}\n                  >\n                    {cell.column.id == \"name\" && cell.row.original != null ? (\n                      <>\n                        <span title={cell.getValue().split(\"^&\")[0]}>\n                          {(cell.row.original.lvl == \"2\" &&\n                            cell.row.original.name != \"Summary\") ||\n                          (cell.row.original.lvl == \"2\" &&\n                            cell.row.original.name == \"Summary\") ? (\n                            cell.row.original.lvl == \"2\" &&\n                            cell.row.original.resTyp.split(\"^&^&\")[0] ==\n                              \"FTE\" ? (\n                              <span\n                                style={{\n                                  color: \"rgba(66, 144, 99, 0.9)\",\n                                  float: \"right\",\n                                }}\n                              >\n                                {cell.row.original.resTyp.split(\"^&^&\")[0]}\n                              </span>\n                            ) : cell.row.original.lvl == \"2\" &&\n                              cell.row.original.resTyp.split(\"^&^&\")[0] ==\n                                \"Contractor\" ? (\n                              <span\n                                style={{\n                                  color: \"#f88f2e\",\n                                  float: \"right\",\n                                }}\n                              >\n                                {cell.row.original.resTyp.split(\"^&^&\")[0]}\n                              </span>\n                            ) : (\n                              <>\n                                {\n                                  icons[\n                                    cell.row.original.resTyp.split(\"^&^&\")[2]\n                                  ]\n                                }\n\n                                <Link\n                                  to={`/resource/profile/:${\n                                    cell.row.original.resTyp.split(\"^&^&\")[3]\n                                  }`}\n                                  target=\"_blank\"\n                                >\n                                  {cell.row.original.resTyp.split(\"^&^&\")[0]}\n                                </Link>\n                              </>\n                            )\n                          ) : (\n                            <b>{cell.getValue().split(\"^&\")[0]}</b>\n                          )}\n                        </span>\n                      </>\n                    ) : cell.row.original.lvl == \"2\" ? (\n                      <div\n                        className=\"align right\"\n                        title={numberWithCommas(cell.getValue())}\n                      >\n                        {numberWithCommas(cell.getValue())}\n                      </div>\n                    ) : (\n                      <b\n                        className=\"align right\"\n                        title={numberWithCommas(cell.getValue())}\n                      >\n                        {numberWithCommas(cell.getValue())}\n                      </b>\n                    )}\n                  </span>\n                );\n              },\n            };\n            newHeaders[i].columns = [obj];\n          }\n        }\n      });\n    });\n    setColumns(newHeaders);\n    let values = [];\n    tableData?.map((d) => (d.id != -1 && d.id != -2 ? values.push(d) : \"\"));\n\n    setNodes(jsonToTree(values, { children: \"subRows\" }));\n  };\n\n  useEffect(() => {\n    colExpFlag ? setHiddenColumns({}) : colCollapse();\n  }, [colExpFlag]);\n\n  const colCollapse = () => {\n    let hiddenHeaders = [];\n    // refactor this\n    headers.map(([key, value]) => {\n      if (expandedCols.includes(key)) {\n        hiddenHeaders.push({ [key]: false });\n      }\n    });\n\n    setHiddenColumns(Object.assign({}, ...hiddenHeaders));\n  };\n\n  const jsonToTree = (flatArray, options) => {\n    options = {\n      id: \"uniqueId\",\n      parentId: \"parentId\",\n      children: \"subRows\",\n      ...options,\n    };\n    const dictionary = {}; // a hash table mapping to the specific array objects with their ids as key\n    const tree = [];\n    const children = options.children;\n    flatArray.forEach((node) => {\n      const nodeId = node[options.id];\n      const nodeParentId = node[options.parentId];\n      // set up current node data in dictionary\n      dictionary[nodeId] = {\n        [children]: [], // init a children property\n        ...node, // add other propertys\n        ...dictionary[nodeId], // children will be replaced if this node already has children property which was set below\n      };\n      dictionary[nodeParentId] = dictionary[nodeParentId] || { [children]: [] }; // if it's not exist in dictionary, init an object with children property\n      dictionary[nodeParentId][children].push(dictionary[nodeId]); // add reference to current node object in parent node object\n    });\n    // find root nodes\n    Object.values(dictionary).forEach((obj) => {\n      if (typeof obj[options.id] === \"undefined\") {\n        tree.push(...obj[children]);\n      }\n    });\n    return tree;\n  };\n\n  return (\n    <div className=\"materialReactExpandableTable revenueForecastBuCustomer darkHeader\">\n      {nodes.length ? (\n        <MaterialReactTable\n          columns={columns}\n          data={nodes}\n          enableExpandAll={false} //hide expand all double arrow in column header\n          enableExpanding\n          enablePagination={false}\n          enableRowVirtualization\n          // enableRowVirtualization={true}\n          enableBottomToolbar={false}\n          enableTopToolbar={false}\n          enableColumnActions={false}\n          enableSorting={false}\n          filterFromLeafRows //apply filtering to all rows instead of just parent rows\n          initialState={{\n            expanded: false,\n            density: \"compact\",\n            columnVisibility: { ...hiddenColumns },\n            columnPinning: { right: [\"total\"] },\n          }} //expand all rows by default\n          state={{ columnVisibility: { ...hiddenColumns } }}\n          //paginateExpandedRows={false} //When rows are expanded, do not count sub-rows as number of rows on the page towards pagination\n          defaultColumn={{ minSize: 110, maxSize: 1000, size: 110 }} //units are in px\n          muiTableContainerProps={{\n            sx: {\n              \"&\": {\n                maxHeight: \"40vh\",\n              },\n            },\n          }}\n          muiTableBodyProps={{\n            sx: {\n              \"&\": {\n                borderRight: \"1px solid #ccc\",\n                borderBottom: \"1px solid #ccc\",\n              },\n              \"& td:first-of-type\": {\n                borderLeft: \"1px solid #ccc\",\n              },\n              \"& td\": {\n                // borderTop: \"1px solid #ccc\",\n                borderRight: \"1px solid #ccc\",\n                height: \"22px\",\n                padding: \"0px 5px\",\n                maxWidth: \"150px\",\n              },\n            },\n          }}\n          muiTableHeadProps={{\n            sx: {\n              \"& th\": {\n                borderTop: \"1px solid #ccc\",\n                borderRight: \"1px solid #ccc\",\n                background: \"#f4f4f4 \",\n                padding: \"0 5px\",\n              },\n              \"& th:first-of-type\": {\n                borderLeft: \"1px solid #ccc\",\n              },\n            },\n          }}\n        />\n      ) : null}\n      {infoPopUp ? (\n        <RevenueForecastInfoPopUp\n          infoPopUp={infoPopUp}\n          setInfoPopUp={setInfoPopUp}\n          iconName={iconName}\n          setIconName={setIconName}\n          anchorEl={anchorEl}\n          setAnchorEl={setAnchorEl}\n        />\n      ) : (\n        \"\"\n      )}\n    </div>\n  );\n}\n","import React, { useState, useEffect, useRef } from \"react\";\nimport MaterialReactTable from \"material-react-table\";\nimport { IconButton } from \"@mui/material\";\nimport fte_active from \"../../assets/images/empstatusIcon/fte_active.png\";\nimport fte_inactive from \"../../assets/images/empstatusIcon/fte_inactive.png\";\nimport fte_notice from \"../../assets/images/empstatusIcon/fte_notice.png\";\nimport subk_active from \"../../assets/images/empstatusIcon/subk_active.png\";\nimport subk_inactive from \"../../assets/images/empstatusIcon/subk_inactive.png\";\nimport subk_notice from \"../../assets/images/empstatusIcon/subk_notice.png\";\nimport { AiFillRightCircle } from \"react-icons/ai\";\nimport { FaInfoCircle } from \"react-icons/fa\";\nimport \"./RevenueForecastBuTable.scss\";\nimport RevenueForecastInfoPopUp from \"./RevenueForecastInfoPopUp\";\nimport { Link } from \"react-router-dom\";\n\nexport default function RevenueForecastBuTable(props) {\n  const icons = {\n    Employee: (\n      <img\n        src={fte_active}\n        alt=\"(fte_active_icon)\"\n        style={{ height: \"12px\" }}\n        title=\"Employee\"\n      />\n    ),\n    Contractor: (\n      <img\n        src={subk_active}\n        alt=\"(subk_active_icon)\"\n        style={{ height: \"12px\" }}\n        title=\"Contractor\"\n      />\n    ),\n    fteActive: (\n      <img\n        src={fte_active}\n        alt=\"(fte_active_icon)\"\n        style={{ height: \"12px\" }}\n        title=\"Active Employee\"\n      />\n    ),\n    fteInactive: (\n      <img\n        src={fte_inactive}\n        alt=\"(fte_inactive_icon)\"\n        style={{ height: \"12px\", marginTop: \"-5px\" }}\n        title=\"Ex-Employee\"\n      />\n    ),\n    fteNotice: (\n      <img\n        src={fte_notice}\n        alt=\"(fte_notice_icon)\"\n        style={{ height: \"12px\" }}\n        title=\"Employee in notice period\"\n      />\n    ),\n\n    subkActive: (\n      <img\n        src={subk_active}\n        alt=\"(subk_active_icon)\"\n        style={{ height: \"12px\" }}\n        title=\"Active Contractor\"\n      />\n    ),\n    subk0: (\n      <img\n        src={subk_inactive}\n        alt=\"(subk_inactive_icon)\"\n        style={{ height: \"12px\", marginTop: \"-5px\" }}\n        title=\"Ex-Contractor\"\n      />\n    ),\n    subk2: (\n      <img\n        src={subk_notice}\n        alt=\"(subk_notice_icon)\"\n        style={{ height: \"12px\" }}\n        title=\"Contractor in notice period\"\n      />\n    ),\n  };\n  const { data, expandedCols, colExpandState, setTimeOnSearch, timeOnSearch } =\n    props;\n\n  const [nodes, setNodes] = useState([]);\n  const [columns, setColumns] = useState(null);\n  const [hiddenColumns, setHiddenColumns] = useState({});\n  const [colExpFlag, setColumnExpFlag] = useState(false);\n  const [headers, setHeaders] = useState([]);\n  const [object, setObject] = useState({});\n  const [infoPopUp, setInfoPopUp] = useState(false);\n  const [iconName, setIconName] = useState();\n  const [anchorEl, setAnchorEl] = useState(null);\n\n  const numberWithCommas = (x) => {\n    var number = String(x);\n    if (number.includes(\".\")) {\n      if (number.includes(\".00\")) {\n        var number = parseFloat(x);\n        return number?.toLocaleString();\n      } else {\n        var decimalNumbers = number;\n        var num = Number(decimalNumbers);\n        let FdN = num != null && num?.toFixed(2);\n        let final = FdN.split(\".\");\n        final[0] = final[0]?.replace(/(\\d)(?=(\\d{2})+\\d$)/g, \"$1,\");\n        final[1] = final[1]?.replace(/(\\d{3})(?=\\d)/g, \"$1,\");\n\n        return final.join(\".\");\n      }\n    } else {\n      var number = parseFloat(x);\n      return number?.toLocaleString();\n    }\n  };\n  useEffect(() => {\n    numberWithCommas(getData());\n  }, [data]);\n\n  useEffect(() => {\n    setHeaders(object);\n    setObject(object);\n  }, [object]);\n\n  const getData = () => {\n    let tableData = data?.tableData;\n    let columns = null;\n    if (data?.columns?.includes(\"'\")) {\n      columns = data?.columns?.replaceAll(\"'\", \"\");\n    } else {\n      columns = data?.columns;\n    }\n\n    let colArr = columns?.split(\",\");\n\n    let newHeaders = [];\n    let hiddenHeaders = [];\n    const obj1 = {};\n\n    const obj = {};\n\n    //iterate objects and remove \"^&\"\n\n    for (let i = 0; i < colArr?.length; i++) {\n      let colVal = colArr[i].trim();\n\n      let firstData = tableData[0];\n\n      obj[colVal] = firstData[colVal];\n    }\n\n    let headerArray = Object.entries(obj);\n\n    let unWantedCols = [];\n\n    let filteredHeaders = headerArray.filter(\n      ([key, value]) => typeof value === \"string\" && value.includes(\"^&\")\n    );\n    filteredHeaders.forEach((d) => (obj1[d[1].split(\"^&\")[0]] = d[0]));\n\n    let newObject = Object.entries(obj1);\n\n    setHiddenColumns(Object.assign({}, ...hiddenHeaders));\n    let minusOneRow = tableData?.filter((d) => d.id == -1);\n    newObject?.map(([key, value], index) => {\n      newHeaders.push({\n        accessorKey: value,\n        header: key,\n        enableColumnActions: false,\n        enableHiding: true,\n        Header: ({ column }) => (\n          <div\n            className={\n              value.includes(\"name\")\n                ? \"mixer\"\n                : value.includes(\"rcount\")\n                ? \"mixer\"\n                : \"\"\n            }\n            title={key}\n          >\n            {key}{\" \"}\n            {value == colExpandState[2] ? (\n              <IconButton\n                onClick={() => {\n                  setColumnExpFlag((prev) => !prev);\n                }}\n              >\n                <AiFillRightCircle />\n              </IconButton>\n            ) : value.includes(\"name\") || value.includes(\"rcount\") ? (\n              \"\"\n            ) : (\n              <FaInfoCircle\n                className=\"tableInfoIcon\"\n                onClick={(e) => {\n                  setAnchorEl(e.currentTarget);\n                  setIconName(key);\n                  setInfoPopUp(true);\n                }}\n              >\n                {\"\"}\n              </FaInfoCircle>\n            )}\n          </div>\n        ),\n      });\n    });\n\n    let subHeaders = minusOneRow ? Object.entries(minusOneRow[0]) : null;\n\n    subHeaders?.sort();\n\n    const revenueOrder = [\n      \"Revenue\",\n      \"AssRevenue\",\n      \"ActRevenue\",\n      \"ApprRevenue\",\n      \"RecRevenue\",\n      \"AvgCost\",\n      \"NAvgCost\",\n      \"RRCost\",\n      \"NRRCost\",\n      \"TrueCost\",\n      \"AcGM\",\n      \"NAcGM\",\n      \"RRGM\",\n      \"NRRGM\",\n      \"TcGM\",\n    ];\n    if (subHeaders !== null) {\n      subHeaders = subHeaders.sort((a, b) => {\n        const indexA = revenueOrder.indexOf(a[0]);\n        const indexB = revenueOrder.indexOf(b[0]);\n        return indexA - indexB;\n      });\n    }\n\n    newHeaders.map((data) => {\n      let i = newHeaders.indexOf(data);\n      let subArray = [];\n      subHeaders.map(([key, value], index) => {\n        let subkey = key.includes(\"GM\")\n          ? \"GM\"\n          : key.includes(\"capacity\") || key.includes(\"gross\")\n          ? \"capacity\"\n          : key.includes(\"allocations\")\n          ? \"allocations\"\n          : key.includes(\"billAlloc\")\n          ? \"billAlloc\"\n          : key.includes(\"billAct\")\n          ? \"billAct\"\n          : key.includes(\"billAss\")\n          ? \"billAss\"\n          : key.includes(\"billAppr\")\n          ? \"billAppr\"\n          : key.includes(\"Cost\")\n          ? \"Cost\"\n          : key.includes(\"Revenue\")\n          ? \"Revenue\"\n          : null;\n\n        if (subkey != null) {\n          if (data.accessorKey.includes(subkey)) {\n            {\n              let obj = {\n                id: key,\n                header:\n                  value == null || value == 0 ? (\n                    \"\"\n                  ) : (\n                    <div className=\"center-align\">\n                      <div title={value}> {value}</div>\n                    </div>\n                  ),\n                accessorKey: key,\n                Cell: ({ cell }) => {\n                  return (\n                    <span\n                      style={{\n                        whiteSpace: \"nowrap\",\n                        overflow: \"hidden\",\n                        textOverflow: \"ellipsis\",\n                      }}\n                    >\n                      {cell.column.id == \"name\" && cell.row.original != null ? (\n                        <>\n                          <span title={cell.getValue().split(\"^&\")[0]}>\n                            {(cell.row.original.lvl == \"3\" &&\n                              cell.row.original.keyterm == \"practiceRes\") ||\n                            (cell.row.original.lvl == \"4\" &&\n                              cell.row.original.keyterm == \"countryRes\") ||\n                            (cell.row.original.lvl == \"5\" &&\n                              cell.row.original.keyterm == \"deptRes\") ? (\n                              <>\n                                {icons[cell.row.original[\"resource_type\"]]}{\" \"}\n                                <Link\n                                  to={`/resource/profile/:${\n                                    cell.getValue().split(\"^&\")[3]\n                                  }`}\n                                  target=\"_blank\"\n                                >\n                                  {cell.getValue().split(\"^&\")[0]}\n                                </Link>\n                              </>\n                            ) : (cell.row.original.lvl == \"6\" &&\n                                cell.row.original.name != \"Summary\") ||\n                              (cell.row.original.lvl == \"5\" &&\n                                cell.row.original.keyterm == \"PracticeRes\") ||\n                              (cell.row.original.lvl == \"4\" &&\n                                cell.row.original.keyterm == \"RevTypRes\") ||\n                              (cell.row.original.lvl == \"3\" &&\n                                cell.row.original.keyterm == \"regionRes\") ? (\n                              <>\n                                {\n                                  icons[\n                                    cell.row.original.resTyp.split(\"^&^&\")[2]\n                                  ]\n                                }{\" \"}\n                                <Link\n                                  to={`/resource/profile/:${\n                                    cell.getValue().split(\"^&\")[3]\n                                  }`}\n                                  target=\"_blank\"\n                                >\n                                  {cell.getValue().split(\"^&\")[0]}\n                                </Link>\n                              </>\n                            ) : (\n                              <>{cell.getValue().split(\"^&\")[0]}</>\n                            )}\n                          </span>\n                        </>\n                      ) : (cell.getValue() != null || cell.getValue() != \" \") &&\n                        (key.includes(\"Revenue\") || key.includes(\"Cost\")) ? (\n                        <>\n                          <div title={numberWithCommas(cell.getValue())}>\n                            <span>\n                              $\n                              {cell.row.original.keyterm.includes(\"Res\") ? (\n                                <div style={{ float: \"right\" }}>\n                                  {numberWithCommas(cell.getValue())}\n                                </div>\n                              ) : (\n                                <b style={{ float: \"right\" }}>\n                                  {numberWithCommas(cell.getValue())}\n                                </b>\n                              )}\n                            </span>\n                          </div>\n                        </>\n                      ) : (cell.getValue() != null || cell.getValue() != \" \") &&\n                        (key.includes(\"GM\") || key.includes(\"Perc\")) ? (\n                        <>\n                          {cell.row.original.keyterm.includes(\"Res\") ? (\n                            <div\n                              class=\"align right\"\n                              title={numberWithCommas(cell.getValue())}\n                            >\n                              {numberWithCommas(cell.getValue())} %\n                            </div>\n                          ) : (\n                            <b\n                              class=\"align right\"\n                              title={numberWithCommas(cell.getValue())}\n                            >\n                              {numberWithCommas(cell.getValue())} %\n                            </b>\n                          )}\n                        </>\n                      ) : cell.row.original.keyterm.includes(\"Res\") ? (\n                        <div\n                          class=\"align right\"\n                          title={numberWithCommas(cell.getValue())}\n                        >\n                          {numberWithCommas(cell.getValue())}\n                        </div>\n                      ) : (\n                        <b\n                          class=\"align right\"\n                          title={numberWithCommas(cell.getValue())}\n                        >\n                          {numberWithCommas(cell.getValue())}\n                        </b>\n                      )}\n                    </span>\n                  );\n                },\n              };\n              subArray.push(obj);\n\n              newHeaders[i].columns = subArray;\n            }\n          }\n        } else {\n          if (data.accessorKey.includes(key)) {\n            let obj = {\n              id: key,\n              header:\n                value == null || value == 0 ? (\n                  \"\"\n                ) : (\n                  <div\n                    className={\n                      value.includes(null) ||\n                      (value.includes(\"\") && \"nullCol\" && \"center-align\")\n                    }\n                  >\n                    <div title={value}> {value}</div>\n                  </div>\n                ),\n              accessorKey: key,\n              Cell: ({ cell }) => {\n                return (\n                  <span\n                    style={{\n                      whiteSpace: \"nowrap\",\n                      overflow: \"hidden\",\n                      textOverflow: \"ellipsis\",\n                    }}\n                  >\n                    {cell.column.id == \"name\" && cell.row.original != null ? (\n                      <>\n                        <span title={cell.getValue().split(\"^&\")[0]}>\n                          {(cell.row.original.lvl == \"3\" &&\n                            cell.row.original.keyterm == \"practiceRes\") ||\n                          (cell.row.original.lvl == \"4\" &&\n                            cell.row.original.keyterm == \"countryRes\") ||\n                          (cell.row.original.lvl == \"5\" &&\n                            cell.row.original.keyterm == \"deptRes\") ? (\n                            <>\n                              {icons[cell.row.original[\"resource_type\"]]}{\" \"}\n                              <Link\n                                to={`/resource/profile/:${\n                                  cell.row.original.keyAttr.split(\"-res\")[1]\n                                }`}\n                                target=\"_blank\"\n                              >\n                                {cell.getValue().split(\"^&\")[0]}\n                              </Link>\n                            </>\n                          ) : (cell.row.original.lvl == \"6\" &&\n                              cell.row.original.name != \"Summary\") ||\n                            (cell.row.original.lvl == \"5\" &&\n                              cell.row.original.keyterm == \"PracticeRes\") ||\n                            (cell.row.original.lvl == \"4\" &&\n                              cell.row.original.keyterm == \"RevTypRes\") ||\n                            (cell.row.original.lvl == \"3\" &&\n                              cell.row.original.keyterm == \"regionRes\") ? (\n                            <>\n                              {icons[cell.row.original.resTyp.split(\"^&^&\")[2]]}{\" \"}\n                              <Link\n                                to={`/resource/profile/:${\n                                  cell.row.original.keyAttr.split(\"-res\")[1]\n                                }`}\n                                target=\"_blank\"\n                              >\n                                {cell.getValue().split(\"^&\")[0]}\n                              </Link>\n                            </>\n                          ) : cell.row.original.keyterm.includes(\"Res\") ? (\n                            <div>{cell.getValue().split(\"^&\")[0]}</div>\n                          ) : (\n                            <b>{cell.getValue().split(\"^&\")[0]}</b>\n                          )}\n                        </span>\n                      </>\n                    ) : cell.row.original.keyterm.includes(\"Res\") ? (\n                      <div\n                        class=\"align right\"\n                        title={numberWithCommas(cell.getValue())}\n                      >\n                        {numberWithCommas(cell.getValue())}\n                      </div>\n                    ) : (\n                      <b\n                        class=\"align right\"\n                        title={numberWithCommas(cell.getValue())}\n                      >\n                        {numberWithCommas(cell.getValue())}\n                      </b>\n                    )}\n                  </span>\n                );\n              },\n            };\n            newHeaders[i].columns = [obj];\n          }\n        }\n      });\n    });\n\n    setColumns(newHeaders);\n    let values = [];\n    tableData?.map((d) => (d.id != -1 && d.id != -2 ? values.push(d) : \"\"));\n\n    let convertedJsonToTree = jsonToTree(values, {\n      children: \"subRows\",\n    });\n\n    let finalData = convertedJsonToTree.filter(\n      (d) => (d.lvl > 1 && d.subRows.length == 0) == false\n    );\n\n    setNodes(finalData);\n  };\n  useEffect(() => {\n    colExpFlag ? setHiddenColumns({}) : colCollapse();\n  }, [colExpFlag]);\n\n  const colCollapse = () => {\n    let hiddenHeaders = [];\n    // refactor this\n    headers.map(([key, value]) => {\n      if (expandedCols.includes(key)) {\n        hiddenHeaders.push({ [key]: false });\n      }\n    });\n\n    setHiddenColumns(Object.assign({}, ...hiddenHeaders));\n  };\n\n  const jsonToTree = (flatArray, options) => {\n    options = {\n      id: \"uniqueId\",\n      parentId: \"parentId\",\n      children: \"subRows\",\n      ...options,\n    };\n    const dictionary = {}; // a hash table mapping to the specific array objects with their ids as key\n    const tree = [];\n    const children = options.children;\n    flatArray.forEach((node) => {\n      const nodeId = node[options.id];\n      const nodeParentId = node[options.parentId];\n      // set up current node data in dictionary\n      dictionary[nodeId] = {\n        [children]: [], // init a children property\n        ...node, // add other propertys\n        ...dictionary[nodeId], // children will be replaced if this node already has children property which was set below\n      };\n      dictionary[nodeParentId] = dictionary[nodeParentId] || { [children]: [] }; // if it's not exist in dictionary, init an object with children property\n      dictionary[nodeParentId][children].push(dictionary[nodeId]); // add reference to current node object in parent node object\n    });\n    // find root nodes\n    Object.values(dictionary).forEach((obj) => {\n      if (typeof obj[options.id] === \"undefined\") {\n        tree.push(...obj[children]);\n      }\n    });\n    return tree;\n  };\n\n  const rowVirtualizerInstanceRef = useRef(null);\n  const [isLoading, setIsLoading] = useState(true);\n\n  return (\n    <div className=\"materialReactExpandableTable revenueForecastBuTable darkHeader \">\n      {nodes.length ? (\n        <MaterialReactTable\n          columns={columns}\n          data={nodes}\n          enableExpandAll={false} //hide expand all double arrow in column header\n          enableExpanding\n          enablePagination={false}\n          enableRowVirtualization\n          // enableRowVirtualization={true}\n          enableBottomToolbar={false}\n          enableTopToolbar={false}\n          enableColumnActions={false}\n          enableSorting={false}\n          filterFromLeafRows //apply filtering to all rows instead of just parent rows\n          initialState={{\n            expanded: false,\n            density: \"compact\",\n            columnVisibility: { ...hiddenColumns },\n            columnPinning: { right: [\"total\"] },\n          }} //expand all rows by default\n          rowVirtualizerProps={{\n            onChange: () => {\n              console.log(\n                \"timeOnSearch>\",\n                timeOnSearch,\n                \"new Date().getTime()>\",\n                new Date().getTime()\n              );\n              if (timeOnSearch + 1000 < new Date().getTime()) {\n                setTimeOnSearch(new Date().getTime());\n                setIsLoading(true);\n                setTimeout(() => {\n                  setIsLoading(false);\n                }, 1000);\n              } else {\n                setIsLoading(false);\n              }\n            },\n            // overscan: 20,\n            //// estimateSize: () => 25,\n          }}\n          rowVirtualizerInstanceRef={rowVirtualizerInstanceRef}\n          state={{ isLoading, columnVisibility: { ...hiddenColumns } }}\n          //paginateExpandedRows={false} //When rows are expanded, do not count sub-rows as number of rows on the page towards pagination\n          defaultColumn={{ minSize: 110, maxSize: 1000, size: 110 }} //units are in px\n          muiTableContainerProps={{\n            sx: {\n              \"&\": {\n                maxHeight: \"68vh\",\n              },\n            },\n          }}\n          muiTableBodyProps={{\n            sx: {\n              \"&\": {\n                // borderBottom: \"1px solid #ccc\",\n              },\n              \"& td\": {\n                borderRight: \"1px solid #ccc\",\n                height: \"22px\",\n                fontSize: \"11px\",\n                paddingTop: \"0px\",\n                paddingBottom: \"0px\",\n              },\n            },\n          }}\n          muiTableHeadProps={{\n            sx: {\n              \"& th\": {\n                borderTop: \"1px solid #ccc\",\n                borderRight: \"1px solid #ccc\",\n                background: \"#f4f4f4 \",\n                fontSize: \"11px\",\n              },\n            },\n          }}\n        />\n      ) : null}\n      {infoPopUp ? (\n        <RevenueForecastInfoPopUp\n          infoPopUp={infoPopUp}\n          setInfoPopUp={setInfoPopUp}\n          iconName={iconName}\n          setIconName={setIconName}\n          anchorEl={anchorEl}\n          setAnchorEl={setAnchorEl}\n        />\n      ) : (\n        \"\"\n      )}\n    </div>\n  );\n}\n","import React from \"react\";\nimport { DialogContent, Popover } from \"@material-ui/core\";\nimport \"../VendorComponent/Resources.scss\";\nfunction RevenueForecastInfoPopUp(props) {\n  const { iconName, anchorEl, setAnchorEl } = props;\n  const open = Boolean(anchorEl);\n  const id = open ? \"my-popver\" : undefined;\n  const handleClose = () => {\n    setAnchorEl(false);\n  };\n  return (\n    <div className=\"\">\n      <Popover\n        id={id}\n        open={Boolean(anchorEl)}\n        anchorEl={anchorEl}\n        onClose={handleClose}\n        anchorOrigin={{\n          vertical: \"top\",\n          horizontal: \"left\",\n        }}\n        transformOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"left\",\n        }}\n      >\n        <div className=\"\">\n          <DialogContent>\n            <div>\n              {iconName.includes(\"Capacity\") ? (\n                <div className=\"\">\n                  <p className=\"mb-2\">\n                    <b>Capacity:</b> Total Number of hrs available for\n                    utilization in the period under consideration ( month ){\" \"}\n                    <br />\n                    based on the filter criterion used.\n                  </p>\n\n                  <p className=\"mb-2\">\n                    <b>Gross Capacity:</b> Standard available hrs of resource in\n                    a day * Gross working Days ( Excluding\n                    <br /> weekends & Holidays)\n                  </p>\n\n                  <p className=\"mb-2\">\n                    <b>Net Capacity:</b> Standard available hrs of resource in a\n                    day * Net working days ( Excluding Weekends,\n                    <br /> Holidays and Leaves/Timeoffs) Holidays considered are\n                    based on the holidays listed in resource calender\n                  </p>\n\n                  <p>\n                    <b>Gross%:</b> [ Gross Capacity - Net Capacity ] * 100 /\n                    Gross Capacity\n                  </p>\n                </div>\n              ) : iconName.includes(\"Allocations\") ? (\n                <div className=\"\">\n                  <p className=\"mb-2\">\n                    <b>Total Allocations:</b>Total no of billable & Non billable\n                    planned hrs allocated to resource in capacity <br />\n                    plan\n                  </p>\n\n                  <p className=\"mb-2\">\n                    <b> Net %:</b> Percentage of allocation hrs over Net\n                    Capacity hrs\n                  </p>\n                </div>\n              ) : iconName.includes(\"Bill Alloc\") ? (\n                <div className=\"\">\n                  <p className=\"mb-2\">\n                    <b> Billable Allocations: </b>\n                    Total billable allocation hrs in capacity plan for a\n                    resource.\n                  </p>\n\n                  <p className=\"mb-2\">\n                    <b> Net%:</b> Percentage of Bilable allocation hrs over Net\n                    Capacity hrs\n                  </p>\n                </div>\n              ) : iconName.includes(\"Bill Ass\") ? (\n                <div className=\"\">\n                  <p className=\"mb-2\">\n                    <b> Billable Assigned:</b> Total billable assigned hrs in\n                    task plan for a resource.\n                  </p>\n\n                  <p className=\"mb-2\">\n                    <b> Net %:</b> Percentage of Bilable assignement hrs over\n                    Net Capacity hrs\n                  </p>\n                </div>\n              ) : iconName.includes(\"Bill Act\") ? (\n                <div className=\"\">\n                  <p className=\"mb-2\">\n                    <b> Billable Actuals: </b>Total billable Actuals hrs logged\n                    by resource on a billable task.\n                  </p>\n\n                  <p className=\"mb-2\">\n                    <b> Net %: </b>Percentage of Bilable actual hrs logged over\n                    Net Capacity hrs\n                  </p>\n                </div>\n              ) : iconName.includes(\"Bill Appr\") ? (\n                <div className=\"\">\n                  <p className=\"mb-2\">\n                    <b> Billable Approved:</b> Total billable Actuals hrs of\n                    resource approved by the PM.\n                  </p>\n\n                  <p className=\"mb-2\">\n                    <b> Net %:</b> Percentage of Bilable approved hrs of project\n                    over Net Capacity hrs\n                  </p>\n                </div>\n              ) : iconName.includes(\"Revenue\") ? (\n                <div className=\"\">\n                  <p className=\"mb-2\">\n                    <b> Planned Revenue:</b> Billable allocated hrs * Billing\n                    rate of a resource in project\n                  </p>\n\n                  <p className=\"mb-2\">\n                    <b> Assigned Revenue:</b>Billable assignments on a billable\n                    task * Billing rate of a resource in project\n                  </p>\n\n                  <p className=\"mb-2\">\n                    <b> Actual Revenue:</b> Billable actuals logged * billing\n                    rate of a resource\n                  </p>\n\n                  <p className=\"mb-2\">\n                    <b> Approved Revenue:</b> Billable approved hrs * billing\n                    rate of a resource\n                  </p>\n                </div>\n              ) : iconName.includes(\"Cost\") ? (\n                <div className=\"\">\n                  <p className=\"mb-2\">\n                    <b> Average role cost:</b> average cost rate/hr for a\n                    resource based on his designation, County and Unit. This is\n                    standard rate provided by finance <br />\n                    for all resources\n                  </p>\n\n                  <p className=\"mb-2\">\n                    <b> Role Cost:</b> at Project / Customer level ; Average\n                    role cost of a resource * total <br />\n                    allocations of a resource in project/s\n                  </p>\n\n                  <p className=\"mb-2\">\n                    <b> Role Cost: </b>at other levels ; Average role cost of a\n                    resource * Net capacity hrs\n                    <br /> of a resource\n                  </p>\n                </div>\n              ) : iconName.includes(\"GM\") ? (\n                <div className=\"\">\n                  <b> GM % (Role) :</b> [Planned revenue - Cost (role) ] /\n                  Planned revenue as a %\n                </div>\n              ) : (\n                \"\"\n              )}\n            </div>\n          </DialogContent>\n        </div>\n      </Popover>\n    </div>\n  );\n}\nexport default RevenueForecastInfoPopUp;\n"],"names":["MonthlyForecastRevenueTableComponent","props","icons","Employee","src","fte_active","alt","style","height","title","Contractor","subk_active","data","expandedCols","colExpandState","useState","nodes","setNodes","columns","setColumns","hiddenColumns","setHiddenColumns","colExpFlag","headers","setHeaders","infoPopUp","setInfoPopUp","iconName","setIconName","object","setObject","anchorEl","setAnchorEl","numberWithCommas","x","number","String","includes","decimalNumbers","final","num","Number","toFixed","split","replace","join","useEffect","getData","tableData","utilizationTableData","benchUtilizationTableData","benchUtilizationColumns","utilizationcolumns","replaceAll","colArr","newHeaders","obj1","obj","i","length","colVal","trim","firstData","Object","entries","filter","key","forEach","d","newObject","assign","minusOneRow","id","map","index","value","push","accessorKey","header","enableColumnActions","enableHiding","Header","column","className","onClick","e","currentTarget","subHeaders","sort","revenueOrder","a","b","indexOf","subArray","subkey","Cell","cell","getValue","row","original","float","class","values","tempData","jsonToTree","children","slice","colCollapse","hiddenHeaders","flatArray","options","parentId","dictionary","tree","node","nodeId","nodeParentId","enablePagination","enableBottomToolbar","enableTopToolbar","enableColumnFilterModes","enableSorting","filterFromLeafRows","state","columnVisibility","defaultColumn","minSize","maxSize","size","muiSearchTextFieldProps","placeholder","sx","minWidth","variant","muiTableBodyProps","borderRight","borderBottom","borderLeft","padding","maxWidth","backgroundColor","muiTableHeadProps","borderTop","background","RevenueForecastInfoPopUp","RevenueForecastBuCustomer","fteActive","fteNotice","fte_notice","fteInactive","fte_inactive","marginTop","subkActive","subk0","subk_inactive","subk2","subk_notice","setColumnExpFlag","parseFloat","toLocaleString","IconButton","prev","whiteSpace","overflow","textOverflow","lvl","name","resTyp","to","target","color","enableExpandAll","enableExpanding","enableRowVirtualization","initialState","expanded","density","columnPinning","right","muiTableContainerProps","maxHeight","RevenueForecastBuTable","setTimeOnSearch","timeOnSearch","keyterm","keyAttr","finalData","subRows","rowVirtualizerInstanceRef","useRef","isLoading","setIsLoading","rowVirtualizerProps","onChange","console","log","Date","getTime","setTimeout","fontSize","paddingTop","paddingBottom","Boolean","undefined","open","onClose","anchorOrigin","vertical","horizontal","transformOrigin"],"sourceRoot":""}