{"version":3,"file":"static/js/2556.40e76717.chunk.js","mappings":"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","sources":["views/FullfimentComponent/DemandAndSupplyDemo.js","views/FullfimentComponent/DemandAndSupply.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport MaterialReactTable from \"material-react-table\";\nimport { AiFillRightCircle } from 'react-icons/ai';\nimport { IconButton } from '@material-ui/core';\n\nimport \"./DemandAndSupply.scss\";\nimport { DataTable } from \"primereact/datatable\";\n\nimport { ColDefUtil, Column } from 'ag-grid-community';\nimport axios from 'axios';\nimport { environment } from '../../environments/environment';\nimport Loader from '../Loader/Loader';\n\nexport default function DemandAndSupplyDemo(props) {\n    const { data, colExpandState, cols, expandedCols } = props;\n    const [columns, setColumns] = useState(null);\n    const baseUrl = environment.baseUrl;\n    const [nodes, setNodes] = useState([]);\n    const [hiddenColumns, setHiddenColumns] = useState({});\n    const [colExpFlag, setColumnExpFlag] = useState(false);\n    const [headers, setHeaders] = useState([]);\n    const [headers1, setHeaders1] = useState([]);\n    const [tableState, setTableState] = useState(false);\n    const [tabdata, setTabdata] = useState([]);\n    const [showTable, setShowTable] = useState(false);\n\n    console.log(tabdata)\n    const [loader, setLoader] = useState(false);\n\n    // debugger\n    useEffect(() => {\n        getData();\n    }, [data]);\n\n\n    useEffect(() => {\n        setTableState(true);\n    }, []);\n    // Empty dependency array ensures this effect runs once on mount\n\n    const getData = () => {\n        let tableData = data.tableData;\n        let columns = null;\n        let secondHeaders = tableData?.filter((d) => d.id == \"-4\");\n        let thirdHeaders = tableData?.filter((d) => d.id == \"-1\");\n        if (data?.columns?.includes(\"'\")) {\n            columns = data?.columns?.replaceAll(\"'\", \"\");\n        } else {\n            columns = data?.columns;\n        }\n\n        let colArr = columns?.split(\",\");\n        let newHeaders = [];\n        let hiddenHeaders = [];\n\n        const obj = {};\n        const obj1 = {};\n        // console.log(columns)\n\n\n\n        for (let i = 0; i < colArr?.length; i++) {\n            let colVal = colArr[i].trim();\n            let firstData = tableData[0];\n            obj[colVal] = firstData[colVal];\n        }\n\n        let headerArray = Object.entries(obj);\n\n\n        let filteredHeaders = headerArray.filter(\n            ([key, value]) => typeof value === \"string\" && value.includes(\"^&\")\n        );\n        setHeaders(filteredHeaders);\n\n        // console.log(headers)\n\n        filteredHeaders.map(([key, value]) => {\n            if (expandedCols.includes(key)) {\n                hiddenHeaders.push({ [key]: false });\n            }\n        });\n\n        filteredHeaders.forEach((d) => (obj1[d[1]] = d[0]));\n        let newObject = Object.entries(obj1);\n\n        setHiddenColumns(Object.assign({}, ...hiddenHeaders));\n\n        // console.log(hiddenColumns)\n\n        newObject.map(([value, key], index) => {\n            newHeaders.push({\n                accessorKey:\n                    key.lastIndexOf(\"_\") > 4\n                        ? key.split(\"_\")[0] +\n                        \"_\" +\n                        key.split(\"_\")[1] +\n                        \"_\" +\n                        key.split(\"_\")[2]\n                        : key.includes(\"total\")\n                            ? \"total\"\n                            : key,\n                header: value.split(\"^&\")[0],\n                enableColumnActions: false,\n                enableHiding: true,\n                Header: ({ column }) => (\n                    <div className={key.includes(\"name\") ? \"mixer\" : \"hello\"}>\n                        {value.split(\"^&\")[0]}{\" \"}\n                    </div>\n                ),\n                Cell: ({ cell }) => {\n                    return (\n                        <>\n                            {\" \"}\n                            {\"Helllooooo\"}\n                            <div\n                                className={\n                                    value + \"-\" + key\n\n                                }\n                            >\n                                {cell.column.id == \"name\" &&\n                                    cell.row.original.parentId != null ? (\n                                    <span>\n                                        {icons[cell.row.original[\"empStatus\"]]} {cell.getValue()}{\" \"}\n                                    </span>\n                                ) : (\n                                    cell.getValue()\n                                )}\n                            </div>\n                        </>\n                    );\n                },\n            });\n        });\n\n        // console.log(newObject)\n\n        let subHeaders = secondHeaders ? Object.entries(secondHeaders[0]) : null;\n        let perSubHeaders = thirdHeaders ? Object.entries(thirdHeaders[0]) : null;\n\n        let filteredSubHeaders = subHeaders?.filter(\n            ([key, value]) => typeof value === \"string\" && value.includes(\"^&\")\n        );\n\n        let filteredThirdHeaders = perSubHeaders?.filter(\n            ([key, value]) => typeof value === \"string\" && key.includes(\"_\")\n        );\n\n        filteredSubHeaders?.sort();\n\n        // console.log(subHeaders)\n        // console.log(perSubHeaders)\n        // console.log(filteredThirdHeaders)\n        // console.log(filteredSubHeaders)\n\n        let newSecondRow = [];\n        newHeaders.map((data) => {\n            filteredSubHeaders.map(([key, value]) => {\n                if (key.includes(data.accessorKey)) {\n                    newSecondRow.push([data.accessorKey, value]);\n                }\n            });\n        });\n\n        filteredThirdHeaders?.sort();\n        // console.log(newSecondRow)\n\n\n        let obj3 = [];\n        let finalObj = [];\n\n        newSecondRow.map((d) => {\n            if (obj3[d[0]] == undefined) {\n                let ar = [];\n\n                if (ar.includes(d[1]) == false) {\n                    ar.push(d[1]);\n\n                    finalObj.push(d);\n                }\n\n                obj3[d[0]] = ar;\n            } else {\n                let ar = obj3[d[0]];\n\n                if (ar.includes(d[1]) == false) {\n                    ar.push(d[1]);\n\n                    finalObj.push(d);\n                }\n            }\n        });\n\n\n\n\n        newHeaders.map((data) => {\n            let i = newHeaders.indexOf(data);\n            let subArray = [];\n            finalObj?.map(([key, value]) => {\n                if (key.includes(data.accessorKey)) {\n                    let obj = {\n                        id: key + \"_\" + value,\n                        header: value.split(\"^&\")[0],\n                        accessorKey: key + \"_\" + value,\n                        Cell: ({ cell }) => {\n                            return (\n                                <>\n                                    <div\n                                        className={\n                                            key.split(\"_\")[0] == \"total\"\n                                                ? \"total\"\n                                                : parseInt(key.split(\"_\")[1]) % 2 == 0\n                                                    ? \"even\"\n                                                    : \"odd\"\n                                        }\n                                    >\n                                        <span>\n                                            {cell.column.id == \"name\" ? (\n                                                <span title={cell.getValue()}>\n                                                    {icons[cell.row.original[\"name\"]]} {cell.getValue()}\n                                                </span>\n                                            ) : \"\"}\n                                        </span>\n\n                                    </div>\n                                </>\n                            );\n                        },\n                    };\n                    subArray.push(obj);\n                    newHeaders[i].columns = subArray;\n                } else {\n                    if (!(data.accessorKey.split(\"_\").length > 2)) {\n                        let obj = {\n                            id: data.accessorKey,\n                            header: \"\",\n                            accessorKey: data.accessorKey,\n                            columns: [\n                                {\n                                    id: data.accessorKey,\n                                    header: \"\",\n                                    accessorKey: data.accessorKey,\n                                    Cell: ({ cell }) => {\n                                        return (\n                                            <>\n                                                <div\n                                                    className={\n                                                        key.split(\"_\")[0] == \"total\"\n                                                            ? \"total\"\n                                                            : parseInt(key.split(\"_\")[1]) % 2 == 0\n                                                                ? \"even\"\n                                                                : \"odd\"\n                                                    }\n                                                >\n                                                    {cell.getValue()}\n                                                </div>\n                                            </>\n                                        );\n                                    },\n                                },\n                            ],\n                        };\n                        newHeaders[i].columns = [obj];\n                    }\n                }\n            });\n        });\n\n        const HandelOnclick = (cell, key) => {\n\n            const name = key;\n            const parts = name.split('_'); // Split the string into an array\n            const desiredPart = parts[parts.length - 1]; // Get the last element of the array\n            const buId = cell.row.original.id;\n            let payload = {\n\n                \"buId\": +buId,\n                \"countryId\": 0,\n                \"dateVal\": \"2023-09-01\",\n                \"roleTypeId\": 0,\n                \"typ\": desiredPart,\n                \"userId\": 4452475\n            }\n\n            axios({\n                method: \"post\",\n                url: baseUrl + `/fullfilmentms/demand/getSupplyDemandDetails`,\n                data: payload\n\n            }).then((response) => {\n                console.log(response)\n                const tabDataWithoutFirstElement = response.data.tableData.slice(1);\n                setTabdata(tabDataWithoutFirstElement);\n                setShowTable(true);\n                setLoader(false);\n\n            })\n                .catch((err) => {\n                    console.log(err);\n                });\n        }\n\n        console.log(newHeaders)\n        // console.log(filteredHeaders);\n        // console.log(filteredSubHeaders);\n        // console.log(filteredThirdHeaders);\n        // debugger\n\n        newHeaders.map((data) => {\n            let i = newHeaders.indexOf(data);\n            let thirdSubArray = [];\n            let count = 0;\n            data.columns.map((param) => {\n                // console.log(param.header)\n                let j = newHeaders[i].columns.indexOf(param);\n                newHeaders[i].columns[j].columns = [];\n                count++;\n\n\n                filteredSubHeaders.map(([key, value]) => {\n                    if (key.includes(data.accessorKey)) {\n                        if ((param.header == \"Delta\" && key.includes(\"delta\")) ||\n                            (param.header == \"Bill.Alloc\" && key.includes(\"billAlloc\"))) {\n\n                            let obj1 = {\n                                id: key + \"_\" + value + \"_\" + count,\n                                header: value,\n                                accessorKey: key,\n                                Cell: ({ cell }) => {\n                                    console.log(cell)\n                                    const cellValue = cell.getValue();\n                                    const sanitizedCellValue = cellValue?.includes(\"^&\") ? \"\" : cellValue.includes(\"NaN\") ? \"\" : cellValue;\n                                    return (\n                                        <>\n                                            <div\n                                                className={\n                                                    key.split(\"_\")[0] == \"total\"\n                                                        ? \"total\"\n                                                        : parseInt(key.split(\"_\")[1]) % 2 == 0\n                                                            ? \"even\"\n                                                            : \"odd\"\n                                                }\n                                            >\n                                                {key.includes(\"billAlloc\") ?\n                                                    <span style={{ color: \"#15a7ea\" }} onClick={() => { HandelOnclick(cell, key) }}>{sanitizedCellValue}</span> : sanitizedCellValue}\n                                            </div>\n                                        </>\n                                    );\n                                },\n                            };\n                            newHeaders[i].columns[j].columns.push(obj1);\n\n                        }\n                    }\n                });\n\n\n\n\n\n\n\n                filteredThirdHeaders.map(([key, value]) => {\n                    if (key.includes(data.accessorKey)) {\n                        if (\n                            param.header == \"Demand\"\n                            &&\n                            (key.includes(\"sfa\") || key.includes(\"sfarenewal\") || key.includes(\"manual\") || key.includes(\"demand\"))\n                        ) {\n                            let obj1 = {\n                                id: key + \"_\" + value + \"_\" + count,\n                                header: value,\n                                accessorKey: key,\n                                Cell: ({ cell }) => {\n                                    console.log(key)\n                                    const cellValue = String(cell.getValue());\n                                    const sanitizedCellValue = cellValue?.includes(\"^&\") ? \"\" : cellValue;\n\n                                    return (\n                                        <>\n                                            <div\n                                                className={\n                                                    key.split(\"_\")[0] == \"total\"\n                                                        ? \"total\"\n                                                        : parseInt(key.split(\"_\")[1]) % 2 == 0\n                                                            ? \"even\"\n                                                            : \"odd\"\n                                                }\n                                            >\n                                                {(key.includes(\"sfa\") && sanitizedCellValue > 0) || (key.includes(\"manual\")) ?\n                                                    <span style={{ color: \"#15a7ea\" }} onClick={() => { HandelOnclick(cell, key) }}>{sanitizedCellValue}</span> : sanitizedCellValue\n                                                }\n                                            </div>\n                                        </>\n                                    );\n                                },\n                            };\n                            newHeaders[i].columns[j].columns.push(obj1);\n                        }\n                        if (\n                            param.header == \"Supply\" &&\n                            (key.includes(\"mapped\") || key.includes(\"bench\")\n                                || key.includes(\"training\") || key.includes(\"recrutingfte\")\n                                || key.includes(\"recrutingsubk\")\n                                ||\n                                key.includes(\"demand\")\n\n                            )\n                        ) {\n                            let obj2 = {\n                                id: key + \"_\" + value + \"_\" + count,\n                                header: value,\n                                accessorKey: key,\n                                Cell: ({ cell }) => {\n\n                                    const cellValue = String(cell.getValue());\n                                    const sanitizedCellValue = cellValue?.includes(\"^&\") ? \"\" : cellValue;\n\n                                    return (\n                                        <>\n                                            <div\n                                                className={\n                                                    key.split(\"_\")[0] == \"total\"\n                                                        ? \"total\"\n                                                        : parseInt(key.split(\"_\")[1]) % 2 == 0\n                                                            ? \"even\"\n                                                            : \"odd\"\n                                                }\n                                            >\n                                                {((key.includes(\"bench\") || key.includes(\"training\")) && sanitizedCellValue > 0) ?\n                                                    <span style={{ color: \"#15a7ea\" }} onClick={() => { HandelOnclick(cell, key) }}>{sanitizedCellValue}</span> : sanitizedCellValue\n                                                }\n                                            </div>\n                                        </>\n                                    );\n                                },\n                            };\n                            //  thirdSubArray.push(obj);\n                            newHeaders[i].columns[j].columns.push(obj2);\n\n                            // newHeaders[i].columns[j].columns = thirdSubArray;\n                        }\n\n                        if ((param.header == \"Delta\" && key.includes(\"delta\")) ||\n                            (param.header == \"Bill.Alloc\" && key.includes(\"billAlloc\"))) {\n                            let obj2 = {\n                                id: key + \"_\" + value + \"_\" + count,\n                                header: value,\n                                accessorKey: key,\n                                Cell: ({ cell }) => {\n                                    return (\n                                        <>\n                                            <div\n                                                className={\n                                                    key.split(\"_\")[0] == \"total\"\n                                                        ? \"total\"\n                                                        : parseInt(key.split(\"_\")[1]) % 2 == 0\n                                                            ? \"even\"\n                                                            : \"odd\"\n                                                }\n                                            >\n                                                {\"\"}\n                                            </div>\n                                        </>\n                                    );\n                                },\n                            };\n                            //  thirdSubArray.push(obj);\n                            newHeaders[i].columns[j].columns.push(obj2);\n\n                            // newHeaders[i].columns[j].columns = thirdSubArray;\n                        }\n\n\n                    }\n                });\n\n\n            });\n        });\n\n\n\n\n        setColumns(newHeaders);\n        let values = [];\n        debugger\n        tableData?.map((d) => {\n            if (d.id != -1 && d.id != -3 && d.id != -2 && d.id != -4) {\n                Object.keys(d).forEach((ele) => {\n                    d[ele] =\n                        [\"null\", \"undefined\", \"Supply\", \"^&\", \"false\"].includes(\"\" + d[ele]) == false &&\n                        numberWithCommas(d[ele]);\n                });\n\n                values.push(d);\n            }\n        });\n\n        // console.log(values)\n\n        let C = tableData?.filter((d) => d.id == -2 && d.id == -3);\n\n        setNodes(jsonToTree(values, { children: \"subRows\" }));\n        //   setColumns(resp.data.tableData);\n        // });\n    };\n\n    useEffect(() => { }, [headers1]);\n\n\n    const numberWithCommas = (x) => {\n        var number = String(x);\n        if (number.includes(\".\") == true) {\n            if (number.includes(\".00\") == true) {\n                var decimalNumbers = number;\n                var num = Number(decimalNumbers);\n                let FdN = num != null && num?.toFixed(0);\n                let final = FdN.split(\".\");\n                final[0] = final[0].replace(/(?<=\\d)(?=(\\d{3})+(?!\\d|\\.))/g, \",\");\n\n                return final.join(\".\");\n            } else {\n                var decimalNumbers = number;\n                var num = Number(decimalNumbers);\n                let FdN = num != null && num?.toFixed(0);\n                let final = FdN.split(\".\");\n                final[0] = final[0].replace(/(?<=\\d)(?=(\\d{3})+(?!\\d|\\.))/g, \",\");\n\n                return final.join(\".\");\n            }\n        } else {\n            return (\n                number != null && number?.replace(/(?<=\\d)(?=(\\d{3})+(?!\\d|\\.))/g, \",\")\n            );\n        }\n    };\n    // console.log(newHeaders)\n\n\n    useEffect(() => {\n        colExpFlag ? setHiddenColumns({}) : colCollapse();\n    }, [colExpFlag]);\n\n    const colCollapse = () => {\n        let hiddenHeaders = [];\n        // refactor this\n        headers.map(([key, value]) => {\n            if (expandedCols.includes(key)) {\n                hiddenHeaders.push({ [key]: false });\n            }\n        });\n\n        setHiddenColumns(Object.assign({}, ...hiddenHeaders));\n    };\n\n\n    const jsonToTree = (flatArray, options) => {\n        options = {\n            id: \"uniqueId\",\n            parentId: \"parentId\",\n            children: \"subRows\",\n            ...options,\n        };\n        const dictionary = {}; // a hash table mapping to the specific array objects with their ids as key\n        const tree = [];\n        const children = options.children;\n        flatArray.forEach((node) => {\n            const nodeId = node[options.id];\n            const nodeParentId = node[options.parentId];\n            // set up current node data in dictionary\n            dictionary[nodeId] = {\n                [children]: [], // init a children property\n                ...node, // add other propertys\n                ...dictionary[nodeId], // children will be replaced if this node already has children property which was set below\n            };\n            dictionary[nodeParentId] = dictionary[nodeParentId] || { [children]: [] }; // if it's not exist in dictionary, init an object with children property\n            dictionary[nodeParentId][children].push(dictionary[nodeId]); // add reference to current node object in parent node object\n        });\n        // find root nodes\n        Object.values(dictionary).forEach((obj) => {\n            if (typeof obj[options.id] === \"undefined\") {\n                tree.push(...obj[children]);\n            }\n        });\n        return tree;\n    };\n\n    // console.log(nodes);\n    // console.log(nodes.length);\n    // console.log(columns);\n\n\n\n    return (\n        <div >\n            {tableState ? (\n                <div className='materialReactExpandableTable demandAndSupplyTable'>\n                    <MaterialReactTable\n                        columns={columns}\n                        data={nodes}\n                        enableExpandAll={true} //hide expand all double arrow in column header\n                        enableExpanding\n                        enablePagination={false}\n                        //enableRowVirtualization\n                        enableBottomToolbar={false}\n                        enableTopToolbar={false}\n                        enableColumnActions={false}\n                        enableSorting={false}\n                        // enableRowVirtualization={true}\n                        filterFromLeafRows //apply filtering to all rows instead of just parent rows\n                        initialState={{\n                            expanded: false,\n                            density: \"compact\",\n                            columnVisibility: { ...hiddenColumns },\n                            // enablePinning: true,\n                            columnPinning: {\n                                left: [\n                                    \"mrt-row-expand\",\n                                    \"name\",\n                                    \"project_ct\",\n\n                                    \"emp_cadre\",\n                                    \"supervisor\",\n                                ],\n                            },\n                        }} //expand all rows by default\n                        state={{ columnVisibility: { ...hiddenColumns } }}\n                        //paginateExpandedRows={false} //When rows are expanded, do not count sub-rows as number of rows on the page towards pagination\n                        defaultColumn={{ minSize: 80, maxSize: 150, size: 40 }} //units are in px\n                        // enableStickyHeader\n                        muiTableContainerProps={{\n                            sx: { maxHeight: \"50vh\", width: \"auto\", maxWidth: \"fit-content\" },\n                        }}\n                        muiTableBodyProps={{\n                            sx: {\n                                \"&\": {\n                                    // borderBottom: \"1px solid #ccc\",\n                                },\n                                \"& td\": {\n                                    borderRight: \"1px solid #ccc\",\n                                    height: \"22px\",\n                                    fontSize: \"11px\",\n                                    paddingTop: \"0px\",\n                                    paddingBottom: \"0px\",\n                                },\n                            },\n                        }}\n                        muiTableHeadProps={{\n                            sx: {\n                                \"& th\": {\n                                    borderTop: \"1px solid #ccc\",\n                                    borderRight: \"1px solid #ccc\",\n                                    background: \"#f4f4f4 \",\n                                    fontSize: \"11px\",\n                                    padding: \"0px 8px\",\n                                },\n                            },\n                        }}\n                    />\n\n                </div>\n            ) : \"\"}\n            <br />\n            <div>\n                {showTable ?\n                    <DataTable\n                        value={tabdata}\n                        showGridlines\n                        scrollDirection\n                        rows={10}\n                        paginatorTemplate=\"RowsPerPageDropdown FirstPageLink PrevPageLink CurrentPageReport NextPageLink LastPageLink\"\n                        currentPageReportTemplate=\"{first} to {last} of {totalRecords}\"\n                        rowsPerPageOptions={[10, 25, 50]} //------------->\n                        paginator\n                        dataKey=\"id\"\n                        responsiveLayout=\"scroll\"\n                        emptyMessage={<center>No Records found.</center>}\n\n\n                    >\n\n                        <Column header=\"BU\" field=\"bu\" />\n                        <Column header=\"Loc\" field=\"country\" />\n                        <Column header=\"Role Type\" field=\"roleType\" />\n                        <Column header=\"Account\" field=\"customer\" />\n                        <Column header=\"Opportunity\" field=\"nameval\" />\n                        <Column header=\"Opt. St Dt\" field=\"op_start_dt\" />\n                        <Column header=\"Opt. End Dt\" field=\"op_end_dt\" />\n                        <Column header=\"PR\" field=\"pr\" />\n                        <Column header=\"PR St Dt\" field=\"pr_st_date\" />\n                        <Column header=\"PR End Dt\" field=\"pr_end_date\" />\n                        <Column header=\" PR Amount ($)\" field=\"amount\" />\n                        <Column header=\"Prob(%)\" field=\"probability\" />\n                        <Column header=\"Res. St Dt\" field=\"start_dt\" />\n                        <Column header=\"Res. End Dt\" field=\"end_dt\" />\n                        <Column header=\"Res Role Type\" field=\"res_role_type\" />\n                        <Column header=\"Skills\" field=\"Skill\" />\n                        <Column header=\"Experience\" field=\"Experience\" />\n                        <Column header=\"Hiring Manager\" field=\"hr_name\" />\n                        <Column header=\"DP\" field=\"dp_name\" />\n                        <Column header=\"SOW\" field=\"sow\" />\n                        <Column header=\"Duration(Days)\" field=\"Duration\" />\n                        <Column header=\"Project Type\" field=\"project_type\" />\n                        <Column header=\"Bill Rate\" field=\"bill_rate\" />\n                        <Column header=\"Currency\" field=\"Currency\" />\n                        <Column header=\"I/W\" field=\"iw\" />\n                        <Column header=\"Emp Id\" field=\"emp_no\" />\n                        <Column header=\"Resource\" field=\"resource_name\" />\n                        <Column header=\"Res Type\" field=\"Res_type\" />\n                        <Column header=\"Res Status\" field=\"res_status\" />\n                        <Column header=\"Agening\" field=\"aging\" />\n                        <Column header=\"FL By\" field=\"fl_name\" />\n                        <Column header=\"FL DATE\" field=\"fl_date\" />\n                    </DataTable> : \"\"\n                }\n\n            </div>\n\n        </div>\n    );\n}\n","import React, { useRef, useState } from \"react\";\nimport { MultiSelect } from \"react-multi-select-component\";\nimport DatePicker from \"react-datepicker\";\nimport {\n  FaChevronCircleDown,\n  FaChevronCircleUp,\n  FaSearch,\n  FaCheck,\n  FaCaretDown,\n} from \"react-icons/fa\";\nimport { CCollapse } from \"@coreui/react\";\nimport GlobalHelp from \"../PrimeReactTableComponent/GlobalHelp\";\nimport ScreenBreadcrumbs from \"../Common/ScreenBreadcrumbs\";\nimport { useEffect } from \"react\";\nimport axios from \"axios\";\nimport { environment } from \"../../environments/environment\";\nimport DemandAndSupplyTable from \"./DemandAndSupplyTable\";\nimport DemandAndSupplyDemo from \"./DemandAndSupplyDemo\";\nimport Loader from \"../Loader/Loader\";\nfunction DemandAndSupply() {\n  const baseUrl = environment.baseUrl;\n  const abortController = useRef(null);\n  const [startDate, setStartDate] = useState(new Date());\n  const [visible, setVisible] = useState(false);\n  const [cheveronIcon, setCheveronIcon] = useState(FaChevronCircleUp);\n  const HelpPDFName = \"DemandSupplyRMG.pdf\";\n  const Headername = \"Demand and Supply Help\";\n  const loggedUserId = localStorage.getItem(\"resId\");\n  const [routes, setRoutes] = useState([]);\n  const [showTable, setShowTable] = useState(false);\n  const [business, setBusiness] = useState([]);\n  const [selectedBusiness, setSelectedBusiness] = useState([]);\n  const [selectedCountry, setSelectedCountry] = useState([]);\n  const [country, setCountry] = useState([]);\n  const [tabdata, setTabdata] = useState();\n  const [cols, setCols] = useState([]);\n  const [loader, setLoader] = useState(false);\n\n\n  let textContent = \"Fullfilment\";\n  let currentScreenName = [\"Demand And Supply\"];\n\n\n  const ArrowRenderer = ({ expanded }) => (\n    <>\n      {expanded ? (\n        <FaCaretDown className=\"chevronIcon\" />\n      ) : (\n        <FaCaretDown className=\"chevronIcon\" />\n      )}\n    </>\n  );\n\n  const generateDropdownLabel = (selectedOptions, allOptions) => {\n    const selectedValues = selectedOptions.map((option) => option.value);\n    const allValues = allOptions.map((item) => item.value);\n\n    if (selectedValues.length === allValues.length) {\n      return \"<< ALL >>\";\n    } else {\n      return selectedOptions.map((option) => option.label).join(\", \");\n    }\n  };\n\n  const getCountries = () => {\n    axios\n      .get(baseUrl + `/CostMS/cost/getCountries`)\n      .then((Response) => {\n        let countries = [];\n        let data = Response.data;\n        console.log(data);\n        data.push({ id: 0, country_name: \"<<Others>>\" });\n        data.length > 0 &&\n          data.forEach((e) => {\n            let countryObj = {\n              label: e.country_name,\n              value: e.id,\n            };\n            countries.push(countryObj);\n          });\n        setCountry(countries);\n        if (id == null) {\n          setSelectedCountry(countries);\n        }\n      })\n      .catch((error) => console.log(error));\n  };\n\n  const getBusinessUnit = () => {\n    axios\n      .get(baseUrl + `/CostMS/cost/getDepartments`)\n      .then((Response) => {\n        let countries = [];\n        let data = Response.data;\n        console.log(data);\n        data.push({ value: 0, label: \"Non-Revenue Units\" });\n        data.length > 0 &&\n          data.forEach((e) => {\n            let countryObj = {\n              label: e.label,\n              value: e.value,\n            };\n            countries.push(countryObj);\n          });\n        setBusiness(countries);\n        if (id == null) {\n          setSelectedBusiness(countries);\n        }\n      })\n      .catch((error) => console.log(error));\n  };\n\n\n  useEffect(() => {\n    getBusinessUnit();\n    getCountries();\n  }, []);\n\n  const getMenus = () => {\n    // setMenusData\n    useEffect(() => {\n      getMenus();\n    }, []);\n\n\n    axios({\n      method: \"GET\",\n      url: baseUrl + `/CommonMS/master/getMenus?loggedUserId=${loggedUserId}`,\n    }).then((resp) => {\n      let data = resp.data;\n\n      data.forEach((item) => {\n        if (item.display_name === textContent) {\n          setRoutes([item]);\n        }\n      });\n    });\n  };\n\n  const getData = () => {\n    setLoader(true);\n    abortController.current = new AbortController();\n    let payload = {\n      \"type\": \"view\",\n      \"bu\": \"170,211,123,82,168,207,212,18,213,49,149,208,243\",\n      \"country\": \"-1\",\n      \"skills\": \"-1\",\n      \"month\": \"2023-08-01\",\n      \"duration\": \"2\",\n      \"userId\": \"4452475\"\n    }\n    axios({\n      method: \"post\",\n      url: baseUrl + `/fullfilmentms/demand/getDemandAndSupply`,\n      data: payload\n\n    }).then((response) => {\n      console.log(response)\n      console.log(response.data)\n      let cols = response.data.columns;\n      setCols(cols);\n      setTabdata(response.data);\n      setShowTable(true);\n      setLoader(false);\n    })\n      .catch((err) => {\n        console.log(err);\n      });\n\n  }\n  const handleAbort = () => {\n    abortController.current && abortController.current.abort();\n    setLoader(false);\n  };\n  console.log(\"tabdate......\", tabdata)\n  return (\n    <div>\n      <div className=\"col-md-12\">\n        <div className=\"pageTitle\">\n          <div className=\"childOne\"></div>\n          <div className=\"childTwo\">\n            <h2>Demand And Supply</h2>\n          </div>\n          <div className=\"childThree\"></div>\n        </div>\n      </div>\n      <ScreenBreadcrumbs routes={routes} currentScreenName={currentScreenName} />\n\n      <div className=\"group mb-3 customCard\">\n        <div className=\"col-md-12 collapseHeader\">\n          <h2>Search Filters</h2>\n          <div className=\"helpBtn\">\n            <GlobalHelp pdfname={HelpPDFName} name={Headername} />\n          </div>\n\n          <div\n            onClick={() => {\n              setVisible(!visible);\n\n              visible\n                ? setCheveronIcon(FaChevronCircleUp)\n                : setCheveronIcon(FaChevronCircleDown);\n            }}\n          >\n            <span>{cheveronIcon}</span>\n          </div>\n        </div>\n        {/* <h2>Demand And Supply</h2> */}\n        <CCollapse visible={!visible}>\n          <div className=\"group-content row\">\n            <div className=\" col-md-3 mb-2\">\n              <div className=\"form-group row\">\n                <label className=\"col-5\" htmlFor=\"action\">\n                  Action&nbsp;<span className=\"error-text\">*</span>\n                </label>\n                <span className=\"col-1 p-0\">:</span>\n                <div className=\"col-6\">\n                  <select className=\"text\" id=\"action\">\n                    <option value=\"view\">View</option>\n                    <option value=\"edit\">Edit</option>\n                  </select>\n                </div>\n              </div>\n            </div>\n            <div className=\" col-md-3 mb-2\">\n              <div className=\"form-group row\">\n                <label className=\"col-5\" htmlFor=\"businessUnit\">\n                  BU&nbsp;<span className=\"error-text\">*</span>\n                </label>\n                <span className=\"col-1 p-0\">:</span>\n                <div className=\"col-6\">\n                  <MultiSelect\n                    ArrowRenderer={ArrowRenderer}\n                    valueRenderer={generateDropdownLabel}\n                    id=\"BuIds\"\n                    value={selectedBusiness}\n                    options={business}\n                    hasSelectAll={true}\n                    isLoading={false}\n                    shouldToggleOnHover={false}\n                    disableSearch={false}\n                    overrideStrings={{\n                      selectAllFiltered: \"Select All\",\n                      selectSomeItems: \"<<Please Select>>\",\n                    }}\n                    onChange={(s) => {\n                      setSelectedBusiness(s);\n                      let filteredValues = [];\n                      s.forEach((d) => {\n                        filteredValues.push(d.value);\n                      });\n                    }}\n                    disabled={false}\n                  />\n                </div>\n              </div>\n            </div>\n            <div className=\" col-md-3 mb-2\">\n              <div className=\"form-group row\">\n                <label className=\"col-5\" htmlFor=\"country\">\n                  country&nbsp;<span className=\"error-text\">*</span>\n                </label>\n                <span className=\"col-1 p-0\">:</span>\n                <div className=\"col-6 multiselect\">\n                  <MultiSelect\n                    ArrowRenderer={ArrowRenderer}\n                    valueRenderer={generateDropdownLabel}\n                    id=\"CountryIds\"\n                    options={country}\n                    hasSelectAll={true}\n                    value={selectedCountry}\n                    isLoading={false}\n                    shouldToggleOnHover={false}\n                    disableSearch={false}\n                    overrideStrings={{\n                      selectAllFiltered: \"Select All\",\n                      selectSomeItems: \"<<Please Select>>\",\n                    }}\n\n                    disabled={false}\n                    onChange={(e) => {\n                      setSelectedCountry(e);\n                      let filteredCountry = [];\n                      e.forEach((d) => {\n                        filteredCountry.push(d.value);\n                      });\n                    }}\n                  />\n                </div>\n              </div>\n            </div>\n            <div className=\" col-md-3 mb-2\">\n              <div className=\"form-group row\">\n                <label className=\"col-5\" htmlFor=\"roles\">\n                  Roles&nbsp;<span className=\"error-text\">*</span>\n                </label>\n                <span className=\"col-1 p-0\">:</span>\n                <div className=\"col-6\">\n                  <MultiSelect\n                    id=\"roles\"\n                    options={[]}\n                    hasSelectAll={true}\n                    isLoading={false}\n                    shouldToggleOnHover={false}\n                    disableSearch={false}\n                    //   valueRenderer={customValueRenderer}\n\n                    //   value={selectedRoleTypes}\n\n                    disabled={false}\n                  />\n                </div>\n              </div>\n            </div>\n            <div className=\" col-md-3 mb-2\">\n              <div className=\"form-group row\">\n                <label className=\"col-5\" htmlFor=\"month\">\n                  Month&nbsp;<span className=\"error-text\">*</span>\n                </label>\n                <span className=\"col-1 p-0\">:</span>\n                <div className=\"col-6\">\n                  <DatePicker\n                    selected={startDate}\n                    onChange={(date) => setStartDate(date)}\n                    dateFormat=\"MMM-yyyy\"\n                    showMonthYearPicker\n                  />\n                </div>\n              </div>\n            </div>\n            <div className=\" col-md-3 mb-2\">\n              <div className=\"form-group row\">\n                <label className=\"col-5\" htmlFor=\"duration\">\n                  Duration&nbsp;<span className=\"error-text\">*</span>\n                </label>\n                <span className=\"col-1 p-0\">:</span>\n                <div className=\"col-6\">\n                  <select className=\"text\" id=\"duration\">\n                    <option value=\"1\">1</option>\n                    <option value=\"2\">2</option>\n                    <option value=\"3\">3</option>\n                    <option value=\"4\">4</option>\n                    <option value=\"5\">5</option>\n                    <option value=\"6\">6</option>\n                  </select>\n                </div>\n              </div>\n            </div>\n            <div className=\"col-md-12 col-sm-12 col-xs-12 btn-container center my-3 mb-2\">\n              <button className=\"btn btn-primary \" onClick={getData}>Search</button>\n            </div>\n            {loader ? <Loader handleAbort={handleAbort} /> : \"\"}\n          </div>\n        </CCollapse>\n      </div>\n      {\n        showTable ?\n          <DemandAndSupplyDemo\n            enableRowVirtualization={true}\n            data={tabdata}\n            colExpandState={[\"0\", \"0\", \"name\"]}\n            cols={cols}\n            expandedCols={[\"emp_cadre\", \"supervisor\", \"project_ct\"]}\n\n          // formData={formData}\n          // setFormData={setFormData}\n          /> : \"\"\n\n      }\n    </div>\n  );\n}\n\nexport default DemandAndSupply;\n"],"names":["DemandAndSupplyDemo","props","data","expandedCols","colExpandState","cols","useState","columns","setColumns","baseUrl","environment","nodes","setNodes","hiddenColumns","setHiddenColumns","colExpFlag","headers","setHeaders","headers1","tableState","setTableState","tabdata","setTabdata","showTable","setShowTable","console","log","setLoader","useEffect","getData","tableData","secondHeaders","filter","d","id","thirdHeaders","includes","replaceAll","colArr","split","newHeaders","hiddenHeaders","obj","obj1","i","length","colVal","trim","firstData","filteredHeaders","Object","entries","value","map","key","push","forEach","newObject","assign","index","accessorKey","lastIndexOf","header","enableColumnActions","enableHiding","Header","column","className","Cell","cell","row","original","parentId","icons","getValue","subHeaders","perSubHeaders","filteredSubHeaders","filteredThirdHeaders","sort","newSecondRow","obj3","finalObj","undefined","ar","indexOf","subArray","parseInt","title","HandelOnclick","parts","desiredPart","payload","axios","method","url","then","response","tabDataWithoutFirstElement","slice","catch","err","count","param","j","cellValue","sanitizedCellValue","style","color","onClick","String","obj2","values","keys","ele","numberWithCommas","jsonToTree","children","x","number","decimalNumbers","final","num","Number","toFixed","replace","join","colCollapse","flatArray","options","dictionary","tree","node","nodeId","nodeParentId","enableExpandAll","enableExpanding","enablePagination","enableBottomToolbar","enableTopToolbar","enableSorting","filterFromLeafRows","initialState","expanded","density","columnVisibility","columnPinning","left","state","defaultColumn","minSize","maxSize","size","muiTableContainerProps","sx","maxHeight","width","maxWidth","muiTableBodyProps","borderRight","height","fontSize","paddingTop","paddingBottom","muiTableHeadProps","borderTop","background","padding","showGridlines","scrollDirection","rows","paginatorTemplate","currentPageReportTemplate","rowsPerPageOptions","paginator","dataKey","responsiveLayout","emptyMessage","field","abortController","useRef","Date","startDate","setStartDate","visible","setVisible","FaChevronCircleUp","cheveronIcon","setCheveronIcon","localStorage","getItem","routes","business","setBusiness","selectedBusiness","setSelectedBusiness","selectedCountry","setSelectedCountry","country","setCountry","setCols","loader","ArrowRenderer","generateDropdownLabel","selectedOptions","allOptions","selectedValues","option","allValues","item","label","Response","countries","e","countryObj","error","country_name","ScreenBreadcrumbs","currentScreenName","GlobalHelp","pdfname","name","FaChevronCircleDown","htmlFor","valueRenderer","hasSelectAll","isLoading","shouldToggleOnHover","disableSearch","overrideStrings","selectAllFiltered","selectSomeItems","onChange","s","filteredValues","disabled","filteredCountry","selected","date","dateFormat","showMonthYearPicker","current","AbortController","Loader","handleAbort","abort","enableRowVirtualization"],"sourceRoot":""}