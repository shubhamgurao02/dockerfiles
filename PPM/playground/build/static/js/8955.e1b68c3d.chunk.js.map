{"version":3,"file":"static/js/8955.e1b68c3d.chunk.js","mappings":"urBAutBA,MAlsBA,SAAuCA,GAiDrC,IAhDA,IAAMC,EAAUC,EAAAA,EAAAA,QAEdC,EAcEH,EAdFG,MACAC,EAaEJ,EAbFI,aACAC,EAYEL,EAZFK,gBACAC,EAWEN,EAXFM,qBACAC,EAUEP,EAVFO,kBAEAC,GAQER,EATFS,gBASET,EARFQ,sBACAE,EAOEV,EAPFU,iBACAC,EAMEX,EANFW,aACAC,EAKEZ,EALFY,WAGAC,GAEEb,EAJFc,aAIEd,EAHFe,UAGEf,EAFFa,WACAG,EACEhB,EADFgB,WAEF,GAAwCC,EAAAA,EAAAA,UAAS,IAAG,eAA7CC,EAAY,KAAEC,EAAe,KACpC,GAA0CF,EAAAA,EAAAA,YAAU,eAA7CG,EAAa,KAAEC,EAAgB,KACtC,GAAkCJ,EAAAA,EAAAA,UAAS,IAAIK,MAAO,eAA/CC,EAAS,KACZC,GAD0B,KACbC,IAAOF,GAAWG,OAAO,eACpCC,EAAeC,aAAaC,QAAQ,SACpCC,EAAiBF,aAAaC,QAAQ,WAC5C,GAA8BZ,EAAAA,EAAAA,WAAS,GAAM,eAAtCc,EAAO,KAAEC,EAAU,KAC1B,GAAqCf,EAAAA,EAAAA,WAAS,GAAK,eAA5CgB,EAAU,KAAEC,EAAc,KACjC,GAA0CjB,EAAAA,EAAAA,WAAS,GAAK,eAAjDkB,GAAa,KAAEC,GAAgB,KACtC,IAAsCnB,EAAAA,EAAAA,WAAS,GAAM,iBAA9CoB,GAAW,MAAEC,GAAc,MAClC,IAA4CrB,EAAAA,EAAAA,WAAS,GAAM,iBAC3D,IADqB,MAAmB,OACRA,EAAAA,EAAAA,UAAS,KAAG,iBAArCsB,GAAQ,MAAEC,GAAW,MAC5B,IAAgCvB,EAAAA,EAAAA,WAAS,GAAM,iBAC/C,IADe,MAAa,OACQA,EAAAA,EAAAA,UAAS,CAAC,IAAE,iBAAzCwB,GAAU,MAAEC,GAAa,MAChC,IAA0BzB,EAAAA,EAAAA,WAAS,GAAM,iBAAlC0B,GAAK,MAAEC,GAAQ,MAMhBC,KALMC,EAAAA,EAAAA,QAAO,IAKL,IAAIxB,MACZyB,GAAa,IAAIzB,KACrBuB,GAAMG,WAAcH,GAAMI,SAAW,GAAK,EAAK,GAAK,GAAK,GAAK,KAO5DC,IALmB,IAAI5B,KACzByB,GAAWC,UAAY,QAIX,IAAI1B,KAAKuB,GAAMG,UAAY,SAEhCG,GAAI,EAAGA,GAAI,EAAGA,KAAK,CAC1B,IAAMC,GAAO,IAAI9B,KAAKuB,GAAMG,UAAgB,GAAJG,GAAS,GAAK,GAAK,KACvDC,GAAOF,KACTA,GAAUE,GAEd,CAEA,IASA,IAAgCnC,EAAAA,EAAAA,UATV,CACpBoC,WAAY,GACZC,UAAW,GACXC,aAAc,GACdC,aAAc,GACdC,SAAU,GACVC,UAAW,KAG0C,iBAAhDC,GAAQ,MAAEC,GAAW,OAE5BC,EAAAA,EAAAA,YAAU,WAAQ,GAAG,CAACF,MAkBtBE,EAAAA,EAAAA,YAAU,WAhBRC,IAAAA,IACO7D,EAAO,uDACX8D,MAAK,SAACC,GACL,IAAIC,EAAO,GACPC,EAAOF,EAASE,KACpBA,EAAKC,OAAS,GACZD,EAAKE,SAAQ,SAACC,GACZ,IAAIC,EAAU,CACZC,MAAOF,EAAEX,UACTc,MAAOH,EAAEI,IAEXR,EAAKS,KAAKJ,EACZ,IACFnD,EAAgB+C,EAClB,GAIJ,GAAG,KAEHL,EAAAA,EAAAA,YAAU,WAAO,IAAD,EACuB,EAAJ,KAAd,QAAf,EAAAzD,EAAa,UAAE,aAAf,EAAiBqD,YAC2C,QAA9D,EAAAkB,SAASC,uBAAuB,4BAA4B,UAAE,OAA9D,EAAgEC,QAChEC,YAAW,WAAO,IAAD,EAE2C,QAD1D,EAAAH,SACGC,uBAAuB,8BAA8B,UAAE,OAD1D,EAEIG,iBACA,SACA,SAAUV,GAAI,IAAD,EACsB,KAAd,QAAf,EAAAjE,EAAa,UAAE,aAAf,EAAiBqD,YAEnBpD,EAAgBD,EAAa4E,MAAM,EAAG5E,EAAa+D,SACnDjC,GAAe,GAGnB,IACA,EAEN,GAAG,KAEP,GAAG,CAAC9B,IAEJ,IAuDA,IAAkCa,EAAAA,EAAAA,UAAS,IAAG,iBAUxCgE,IAVU,MAAc,MAUb,SAACC,EAASb,GAGzB,IAFA,IAAIc,EAAUR,SAASC,uBAAuB,SAErCzB,EAAI,EAAGA,EAAIgC,EAAQhB,OAAQhB,IAEZ,IAApB+B,EAAQzB,UACY,MAApByB,EAAQzB,UACgB,IAAxByB,EAAQ1B,cACa,KAArB2B,EAAQhC,GAAGqB,OACU,SAArBW,EAAQhC,GAAGqB,OACU,QAArBW,EAAQhC,GAAGqB,YACUY,IAArBD,EAAQhC,GAAGqB,OAEXW,EAAQhC,GAAGkC,UAAUC,IAAI,eACzBhF,GAAqB,GACrB4B,GAAe,GACfF,GAAW,IAIXmD,EAAQhC,GAAGkC,UAAUE,OAAO,eAMV,IAApBL,EAAQzB,UACgB,gBAAxByB,EAAQ1B,cACgB,IAAxB0B,EAAQ1B,cAERlD,GAAqB,GACrB4B,GAAe,GACfF,GAAW,KAEX1B,GAAqB,GAErBwD,IAAM,CACJ0B,OAAQ,OACRC,IAAKxF,EAAO,yDACZiE,KAAM,CACJO,GAAI,KACJpB,WAAY6B,EAAQ7B,WACpBqC,WAAYC,SAAShE,GACrBiE,YAAazF,EACb0F,gBAAiBF,SACI,MAAnBT,EAAQY,QAAkB,IAAMZ,EAAQY,SAE1CtC,aAAc/B,IAAOyD,EAAQ1B,cAAc9B,OAAO,cAClD6B,aAAc,KACdE,SAAUyB,EAAQzB,YAGnBM,MAAK,SAACgC,GACLzF,GAAqB,GACrBE,GAAqB,GACrBsE,YAAW,WACTtE,GAAqB,EACvB,GAAG,KACHG,EAAaC,GACboB,GAAW,GACXI,IAAiB,GACjBF,GAAe,EACjB,IACC8D,OAAM,SAACC,GAAY,IAE1B,GAEMC,GAAa,SAAChB,GAClBpB,IAAM,CACJ0B,OAAQ,OACRC,IAAKxF,EAAO,yDACZiE,KAAM,CACJO,GAAW,OAAPS,QAAO,IAAPA,OAAO,EAAPA,EAAST,GACbpB,WAAY5B,IAAc,OAAPyD,QAAO,IAAPA,OAAO,EAAPA,EAAS7B,YAAY3B,OAAO,cAC/CgE,WAAYC,SAAShE,GACrBiE,YAAazF,EACb0F,gBAAiBF,SAAgB,OAAPT,QAAO,IAAPA,OAAO,EAAPA,EAASiB,SACnC3C,aAAc/B,IAAc,OAAPyD,QAAO,IAAPA,OAAO,EAAPA,EAAS1B,cAAc9B,OAAO,cACnD6B,aAAc/B,EACdiC,SAAiB,OAAPyB,QAAO,IAAPA,OAAO,EAAPA,EAASzB,YAEpBM,MAAK,SAACqC,GACPvF,GAAU,GACViE,YAAW,WACTjE,GAAU,EACZ,GAAG,KACHF,EAAaC,GACbN,GAAqB,EACvB,GACF,EA6GM+F,GAAc,WAClBvC,IAAM,CACJ0B,OAAQ,SACRC,IACExF,EAAO,iEACmDsC,MAC3DwB,MAAK,SAACkC,GACP3D,IAAe,GACf5B,GAAiB,GACjBoE,YAAW,WACTpE,GAAiB,EACnB,GAAG,KACHC,EAAaC,EACf,GACF,EAEA,SAAS0F,GAA4BtG,GACnC,IAAQqC,EAAgCrC,EAAhCqC,YAAaC,EAAmBtC,EAAnBsC,eACrB,OACE,0BACE,UAAC,KAAM,CACLiE,QAASlE,EACTmE,KAAK,KACLC,UAAU,YACVC,QAAS,kBAAMpE,GAAe,EAAM,EAAC,WAErC,SAAC,KAAY,CAACmE,UAAU,GAAE,UACxB,SAAC,KAAW,WACV,iBAAMA,UAAU,GAAE,SAAC,4BAGvB,UAAC,KAAU,YACT,wBAAI,mDACJ,iBAAKA,UAAU,4BAA2B,WACxC,oBACExC,KAAK,SACLwC,UAAU,kBACVE,QAAS,WACPN,IACF,EAAE,WAEF,SAAC,MAAY,IAAG,UAAQ,OAChB,IAAI,aAEd,oBACEpC,KAAK,SACLwC,UAAU,oBACVE,QAAS,WACPrE,GAAe,EACjB,EAAE,UAED,KACD,SAAC,MAAO,CAACsE,SAAU,SAAU,UAAQ,iBAOnD,CAuFA,OACE,iBAAKH,UAAU,aAAY,WACzB,UAAC,IAAS,CACRjC,MAAOpE,EACPyG,SAAS,MACTC,eAAa,EACbC,aAAa,qBACbC,gBAAgB,OAChBC,WAAS,EACTC,KAAM,GACNC,kBA3WoB,SAAC9C,GACzB,IAAI+C,GAAa,OAAOhH,GAClBiH,EAAmBhD,EAAnBgD,QACND,EADyB/C,EAAViD,OACQD,EACvBhH,EAAgB+G,GAChBnC,GAASZ,EAAEgD,SACXrF,GAAW,EACb,EAqWMyE,UAAU,uBACVc,kBAAkB,6FAClBC,0BAA0B,sCAC1BC,mBAAoB,CAAC,GAAI,GAAI,IAAK,WAElC,SAAC,MAAM,CACLC,MAAM,aACNC,MAAM,aACNC,OAAO,aACPC,UAAQ,EACRC,KA3Ge,SAAC5D,GACtB,OACE,+BACE,kBACEO,GAAG,aACHkD,MAAOzD,EAAKb,WACZmB,MAAON,EAAKb,WACZ0E,UAAQ,EACR9D,KAAK,OACLwC,UAAU,cAIlB,KAiGM,SAAC,MAAM,CAACiB,MAAM,YACZE,OAAO,WAAWC,UAAQ,EAC1BC,KAjGkB,SAAC5D,GACzB,OACE,+BACE,kBACEO,GAAG,YACHkD,MAAOzD,EAAKZ,UACZkB,MAAON,EAAKZ,UACZyE,UAAQ,EACR9D,KAAK,OACLwC,UAAU,cAIlB,KAsFM,SAAC,MAAM,CACLiB,MAAM,YACNE,OAAO,WACPC,UAAQ,EACRG,QAAQ,EACRC,OAAQ,SAACC,GAAO,OAjaMhD,EAiaoBgD,GA/Z9C,+BACE,mBACEzD,GAAG,YACHgC,UAAU,SACV0B,KAAK,YACLC,SAAU,SAAC/D,GACTa,EAAQmD,eAAehE,EAAEiE,OAAO9D,OAChCtD,EAAaqH,KAAI,SAACC,GACZA,EAAE/D,IAAMJ,EAAEiE,OAAO9D,QACnBU,EAAiB,QAAa,UAAIsD,EAAE9E,UACpCwB,EAAiB,QAAW,QAAIb,EAAEiE,OAAO9D,MAE7C,GACF,EAAE,SAEW,OAAZtD,QAAY,IAAZA,OAAY,EAAZA,EAAcqH,KAAI,SAACE,EAAMnB,GAAK,OAC7B,mBAEE9C,MAAOiE,EAAKhE,GACZiE,SAAUD,EAAKhE,IAAMS,EAAQA,QAAQY,QAAuB,SAE3D2C,EAAK/E,WAJD4D,EAKE,QAxBU,IAACpC,CAia4B,EAClD4C,KA3FmB,SAAC5D,GAC1B,OACE,+BACE,kBACEO,GAAG,YACHkD,MAAOzD,EAAKR,UACZc,MAAON,EAAKR,UACZqE,UAAQ,EACR9D,KAAK,OACLwC,UAAU,cAIlB,KAiFM,SAAC,MAAM,CACLiB,MAAM,eACNjD,GAAG,eACHmD,OAAO,iBACPK,OAAQ,SAACC,GAAO,OAjRF,SAAC9H,EAAc8H,EAAShD,GAC5C,OACE,gBAAKyC,MAAOvH,EAAaoD,aAAa,UACpC,SAAC,IAAU,CACTiD,UAAS,iBAAiC,IAAtBlG,EAA6B,cAAgB,IACjE4H,KAAK,eACLO,SAAUtH,EACVqD,GAAG,eACHD,MAAOpE,EAAaoD,aACpBN,QAASA,GACTyF,mBAAiB,EACjBC,kBAAgB,EAChBC,aAAa,SACbC,WAAW,cACXV,SAAU,SAAC/D,GACTjE,EAAaiI,eAAe5G,IAAO4C,GAAG3C,OAAO,gBAC3CkC,IAAY,SAACmF,GAAI,yBACZA,GAAI,cACN,eAAiBtH,IAAO4C,GAAG3C,OAAO,eAAa,IAEpDL,EAAiBgD,EACnB,KAIR,CAwP6B2E,CAAcd,EAAQ,EAC3CJ,KAxDwB,SAAC5D,GAC/B,OACE,+BACE,kBACEO,GAAG,eACHkD,MAAOzD,EAAKV,aACZgB,MAAON,EAAKV,aACZuE,UAAQ,EACR9D,KAAK,OACLwC,UAAU,cAIlB,EA6CQoB,UAAQ,EACRG,QAAQ,EACRiB,gBAAgB,SAChBC,eAAgB,SAAC1E,EAAOwD,GACtB,OAAe,OAAXA,QAA8B5C,IAAX4C,IAGC,QAApBA,EAAOmB,SACF,IAAI7H,KAAKkD,IAAU,IAAIlD,KAAK0G,EAAOxD,OACb,QAApBwD,EAAOmB,SACT,IAAI7H,KAAKkD,IAAU,IAAIlD,KAAK0G,EAAOxD,OACvB,WAAVA,GAEP,IAAIlD,KAAKkD,GAAOxB,YAAc,IAAI1B,KAAK0G,EAAOxD,OAAOxB,UAK3D,EACAoG,eACE,gBAAK3C,UAAU,iBAAgB,UAC7B,gBAAKA,UAAU,mBAAkB,UAC/B,SAAC,IAAQ,CACPhC,GAAG,aACH4E,YAAY,gBACZC,UAAU,EACVC,eAAe,SACfC,cAAc,QACdV,WAAW,WACXW,gBAAgB,EAChBC,eAAe,EACfC,UAAU,YACVC,eAAe,EACfnD,UAAU,wBAMpB,SAAC,MAAM,CAACiB,MAAM,eAAeE,OAAO,iBAClCE,KAjHwB,SAAC5D,GAC/B,OACE,+BACE,kBACEO,GAAG,eACHkD,MAAOzD,EAAKX,aACZiB,MAAON,EAAKX,aACZwE,UAAQ,EACR9D,KAAK,OACLwC,UAAU,cAIlB,EAsGQoB,UAAQ,KACV,SAAC,MAAM,CACLH,MAAM,WACNG,UAAQ,EACRD,OAAO,WACPE,KAtImB,SAAC5D,GAC1B,OACE,+BACE,kBACEO,GAAG,WACHkD,MAAOzD,EAAKT,SACZe,MAAON,EAAKT,SACZsE,UAAQ,EACR9D,KAAK,OACLwC,UAAU,cAIlB,EA2HQwB,OAAQ,SAACC,GAAO,OA1SE,SAAC9H,GACzB,OACE,+BACE,gBAAKqG,UAAU,oBAAmB,UAChC,kBACEA,UAAS,iBAAiC,IAAtBlG,EAA6B,cAAgB,IAEjE0D,KAAK,OACLQ,GAAG,WACH0D,KAAK,WACL3D,MAAOpE,EAAaqD,SACpB2E,SAAU,SAAC/D,GACTjE,EAAaiI,eAAehE,EAAEiE,OAAO9D,MACvC,OAKV,CAwR6BqF,CAAkB3B,EAAQ,EAC/CF,QAAQ,EACRkB,eAAgB,SAAC1E,EAAOwD,GACtB,OAAKA,GAGiBA,EAAO8B,MAAM,KACdC,OAAM,SAACC,GAC1B,QAAIA,EAAOC,aAAezF,EAAMyF,WAAWD,EAAOC,iBAG9CD,EAAOE,WAAa1F,EAAM0F,SAASF,EAAOE,cAG1CF,EAAOG,WAAa3F,EAAM4F,SAASJ,EAAOG,WAIhD,GACF,KAGF,SAAC,MAAM,CACLE,MAAO,CAAEC,QAAS,QAClBC,WAAS,EACT3C,OAAO,SACP4C,YAAa,CAAEC,MAAO,MAAOC,SAAU,QACvCC,UAAW,CAAEC,UAAW,UAExB/C,UAAQ,KAIV,SAAC,MAAM,CACLC,KAxTiB,SAAC5C,GACxB,OACE,gBAAKmF,MAAO,CAAEQ,YAAa,QAAS,SACjC/I,GAAkBoD,EAAQ5B,WACD,IAAxB4B,EAAQ3B,cACgB,IAAxB2B,EAAQ1B,cACa,GAArBjD,GACA,mBAAOuK,OAAO,UAAS,WACrB,kBACE7G,KAAK,WACL6G,OAAO,UACPnE,QAAS,SAACtC,GACR,IAAM0G,EAAY1G,EAAEiE,OAAO0C,QAC3BpI,GAASmI,GACT7I,IAAeS,IACfD,GAAcwC,GACd9C,KAAiBO,IACjBX,GAAWW,GACb,EACAsI,UAAW/F,EACXgG,kBAAmB,SAAC7G,GAAC,OAAKa,EAAQb,EAAEG,MAAM,IACzC,IAAI,QAEP,SAAC,MAAY,CACX2G,MAAM,SACNL,OAAO,UACPnE,QAAS,WACPrE,IAAe,GACfE,GAAY0C,EAAQT,GACtB,OAIJ,IAIR,EAoRQmD,OAAO,SACP+C,UAAW,CAAEC,UAAW,UACxB/C,UAAQ,OAIe,GAA1B7G,EAAW,GAAGoK,SACb,IAEA,iBAAK3E,UAAU,uDAAsD,WACnE,oBACEA,UAAU,kBACVsB,SAAUhG,EACV4F,MAAO,cACPhB,QAAS,YA3YA,WACjBzE,GAAe,GAGf,IAAMgC,EAAO,CACXX,aAAc,GACdF,WAAY5B,IAAO,IAAIH,MAAQI,OAAO,eAEtC4B,UAAWxB,EACX0B,aAAc,GACdE,UAAW,GACXD,SAAU,IAER4H,EAAK,GACTA,EAAG3G,KAAKR,GACR7D,EAAgB,GAAD,OAAKgL,GAAG,OAAIjL,KAC3B4B,GAAW,GACXI,IAAiB,GACjBF,GAAe,EACjB,CAyXYoJ,EACF,EAAE,UAED,KACD,SAAC,MAAM,IAAG,UACF,KACV,oBACE7E,UAAU,kBACVsB,SAAU9F,EACVsJ,QAAQ,YACR5E,QAAS,YA3iBN,WAAO,IAAD,EAEuD,QADxE,EAAAhC,SACGC,uBAAuB,4CAA4C,UAAE,OADxE,EAEIC,QACJqB,KACA9D,IAAiB,GACjBF,GAAe,GAGF,GAATS,IACFuD,GAAWzD,GAEf,CAgiBY+I,GACAnK,GACF,EAAE,WAEF,SAAC,MAAM,IAAG,WACF,KACV,oBACEoF,UAAU,kBACVsB,SAAU5F,GACVwE,QAAS,YA5jBL,WAAO,IAAD,EAC8C,QAAhE,EAAAhC,SAASC,uBAAuB,8BAA8B,UAAE,OAAhE,EAAkEC,QAClE7C,GAAW,GACXI,IAAiB,GACjBF,GAAe,EACjB,CAwjBYuJ,GACAnL,GAAqB,EACvB,EACAqH,MAAO,SACPnB,KAAM,QAAQ,WAEd,SAAC,MAAO,CAACI,SAAU,SAAU,gBAKlCvE,IACC,SAACiE,GAA2B,CAC1BjE,YAAaA,GACbC,eAAgBA,KAGlB,KAIR,ECXA,MAtrBA,SAAkCtC,GAyChC,IAxCA,IAAMC,EAAUC,EAAAA,EAAAA,QAEdC,EAWEH,EAXFG,MACAC,EAUEJ,EAVFI,aACAC,EASEL,EATFK,gBACAC,EAQEN,EARFM,qBACAC,EAOEP,EAPFO,kBACAC,EAMER,EANFQ,qBACAE,EAKEV,EALFU,iBACAC,EAIEX,EAJFW,aACAC,EAGEZ,EAHFY,WACAC,EAEEb,EAFFa,UACA6K,EACE1L,EADF0L,UAEF,GAAwCzK,EAAAA,EAAAA,UAAS,IAAG,eAA7CC,EAAY,KAAEC,EAAe,KACpC,GAA4CF,EAAAA,EAAAA,WAAS,GAAK,eAAnD0K,EAAc,KAAEC,EAAiB,KAExC,GAA0C3K,EAAAA,EAAAA,YAAU,eAA7CG,EAAa,KAAEC,EAAgB,KACtC,GAAkCJ,EAAAA,EAAAA,UAAS,IAAIK,MAAO,eAA/CC,EAAS,KACZC,GAD0B,KACbC,IAAOF,GAAWG,OAAO,eACpCC,EAAeC,aAAaC,QAAQ,SACpCC,EAAiBF,aAAaC,QAAQ,WAC5C,GAA8BZ,EAAAA,EAAAA,WAAS,GAAM,eAAtCc,EAAO,KAAEC,EAAU,KAC1B,GAAqCf,EAAAA,EAAAA,WAAS,GAAK,eAAhCiB,IAAF,KAAgB,MACjC,IAA0CjB,EAAAA,EAAAA,WAAS,GAAK,iBAAlCmB,IAAF,MAAkB,OACtC,IAAsCnB,EAAAA,EAAAA,WAAS,GAAM,iBAA9CoB,GAAW,MAAEC,GAAc,MAClC,IAA4CrB,EAAAA,EAAAA,WAAS,GAAM,iBAC3D,IADqB,MAAmB,OACRA,EAAAA,EAAAA,UAAS,KAAG,iBAArCsB,GAAQ,MAAEC,GAAW,MAC5B,IAAgCvB,EAAAA,EAAAA,WAAS,GAAM,iBAC/C,IADe,MAAa,OACQA,EAAAA,EAAAA,UAAS,CAAC,IAAE,iBAAzCwB,GAAU,MAAEC,GAAa,MAChC,IAA0BzB,EAAAA,EAAAA,WAAS,GAAM,iBAAlC0B,GAAK,MAAEC,GAAQ,MAChBC,GAAQ,IAAIvB,KACZyB,GAAa,IAAIzB,KACrBuB,GAAMG,WAAcH,GAAMI,SAAW,GAAK,EAAK,GAAK,GAAK,GAAK,KAK5DC,IAHmB,IAAI5B,KACzByB,GAAWC,UAAY,QAEX,IAAI1B,KAAKuB,GAAMG,UAAY,SAEhCG,GAAI,EAAGA,GAAI,EAAGA,KAAK,CAC1B,IAAMC,GAAO,IAAI9B,KAAKuB,GAAMG,UAAgB,GAAJG,GAAS,GAAK,GAAK,KACvDC,GAAOF,KACTA,GAAUE,GAEd,CACA,IAQA,IAAgCnC,EAAAA,EAAAA,UARV,CACpBoC,WAAY,GACZwI,QAAS,GACTtI,aAAc,GACdC,aAAc,GACdC,SAAU,GACVC,UAAW,KAE0C,iBAAhDC,GAAQ,MAAEC,GAAW,OAC5BC,EAAAA,EAAAA,YAAU,WAAO,GAAG,CAACF,MAqBrBE,EAAAA,EAAAA,YAAU,WAnBR6H,GAAU,GACV5H,IAAAA,IACO7D,EAAO,uDACX8D,MAAK,SAACC,GACL,IAAIC,EAAO,GACPC,EAAOF,EAASE,KACpBA,EAAKC,OAAS,GACZD,EAAKE,SAAQ,SAACC,GACZ,IAAIC,EAAU,CACZC,MAAOF,EAAEX,UACTc,MAAOH,EAAEI,IAEXR,EAAKS,KAAKJ,EACZ,IACFnD,EAAgB+C,GAChBwH,GAAU,EACZ,IACC1F,OAAM,SAACC,GAAK,OAAK6F,QAAQC,IAAI9F,EAAM,GAIxC,GAAG,IACH,IAAM+F,GAAwB,SAACC,GAC7BC,OAAOC,KAAKF,GAAM7H,SAAQ,SAACgI,GACzB,GAAI,CAAC,GAAI,UAAMhH,EAAW,KAAKgF,SAAS6B,EAAKG,IAG3C,OAFA/L,EAAgBD,EAAa4E,MAAM,SACnChD,GAAW,SAAC+G,GAAI,OAAMA,CAAI,GAG9B,GACF,EACIsD,GAAY1H,SAASC,uBACvB,+CAEE0H,GAAkB3H,SAASC,uBAC7B,+CAEI2H,IAAezJ,EAAAA,EAAAA,QAAO,OAE5Be,EAAAA,EAAAA,YAAU,WAAO,IAAD,MACVoI,EAAO7L,EAAa,GAQxB,GAPY,QAAZ,EAAAiM,GAAU,UAAE,OAAZ,EAActH,iBAAiB,SAAS,WACtCiH,GAAsBC,EACxB,IAEkB,QAAlB,EAAAK,GAAgB,UAAE,OAAlB,EAAoBvH,iBAAiB,SAAS,WAC5CiH,GAAsBC,EACxB,IACiC,KAAd,QAAf,EAAA7L,EAAa,UAAE,aAAf,EAAiBqD,UAAgB,CACnC,IAAM+I,EAAO7H,SAASC,uBACpB,4BACA,GACF4H,EAAKC,aAAa,QAAS,qBAC3BD,EAAK3H,QACLC,YAAW,WACQH,SAASC,uBACxB,4BACA,GACO6H,aAAa,QAAS,YAC/B,IAAMC,EAAa/H,SAASC,uBAC1B,8BACA,GACF8H,EAAWD,aAAa,QAAS,sBACvB,OAAVC,QAAU,IAAVA,GAAAA,EAAY3H,iBACV,SACA,SAAUV,GAAI,IAAD,EACsB,KAAd,QAAf,EAAAjE,EAAa,UAAE,aAAf,EAAiBqD,YACnBpD,EAAgBD,EAAa4E,MAAM,EAAG5E,EAAa+D,SACnDyH,GAAkB,GAClB5J,GAAW,GACX1B,GAAqB,GACrBiM,GAAaI,QAAQC,cAEzB,IACA,EAEJ,GAAG,IACL,CACF,GAAG,CAACxM,IAEJ,IA4DM6E,GAAW,SAACC,EAASb,GA0BH,IAApBa,EAAQzB,UACgB,gBAAxByB,EAAQ1B,cACgB,IAAxB0B,EAAQ1B,cAERsI,QAAQC,IAAI,oCAEZzL,GAAqB,KAErBwL,QAAQC,IAA6B,qCAAzB7G,EAAQzB,UAEpBK,IAAM,CACJ0B,OAAQ,OACRC,IAAKxF,EAAO,yDACZiE,KAAM,CACJO,GAAI,KACJpB,WAAY6B,EAAQ7B,WACpBqC,WAAYC,SAAShE,GACrBiE,YAAazF,EACb0F,gBAAiBF,SACI,MAAnBT,EAAQY,QAAkB,IAAMZ,EAAQY,SAE1CtC,aAAc/B,IAAOyD,EAAQ1B,cAAc9B,OAAO,cAClD6B,aAAc,KACdE,SAAUyB,EAAQzB,YAGnBM,MAAK,SAACgC,GACLvF,GAAqB,GACrBsE,YAAW,WACTtE,GAAqB,EACvB,GAAG,KACHK,GAAU,GACViE,YAAW,WACTjE,GAAU,EACZ,GAAG,KACHiE,YAAW,WACT4G,GAAU,EACZ,GAAG,KAEH/K,EAAaC,GACbwB,IAAiB,GACjBF,IAAe,GACf0J,GAAkB,GAClB5J,GAAW,GACX1B,GAAqB,EACvB,IACC0F,OAAM,SAACC,GACN6F,QAAQC,IAAI9F,EACd,IAEN,EACMC,GAAa,SAAChB,GAEI,IAApBA,EAAQzB,UACgB,gBAAxByB,EAAQ1B,cACgB,IAAxB0B,EAAQ1B,cAERsI,QAAQC,IAAI,oCAEZzL,GAAqB,IAErBwD,IAAM,CACJ0B,OAAQ,OACRC,IAAKxF,EAAO,yDACZiE,KAAM,CACJO,GAAW,OAAPS,QAAO,IAAPA,OAAO,EAAPA,EAAST,GACbpB,WAAY5B,IAAc,OAAPyD,QAAO,IAAPA,OAAO,EAAPA,EAAS7B,YAAY3B,OAAO,eAC/CgE,WAAYC,SAAShE,GACrBiE,YAAazF,EACb0F,gBACgC,MAA9BF,SAAgB,OAAPT,QAAO,IAAPA,OAAO,EAAPA,EAASiB,SACd,IACAR,SAAgB,OAAPT,QAAO,IAAPA,OAAO,EAAPA,EAASiB,SACxB3C,aAAc/B,IAAc,OAAPyD,QAAO,IAAPA,OAAO,EAAPA,EAAS1B,cAAc9B,OAAO,eACnD6B,aAAc/B,EACdiC,SAAiB,OAAPyB,QAAO,IAAPA,OAAO,EAAPA,EAASzB,YAGpBM,MAAK,SAACqC,GACLzF,EAAaC,GACbN,GAAqB,GACrB8B,IAAiB,EACnB,IACC4D,OAAM,SAACC,GAAK,OAAK6F,QAAQC,IAAI9F,EAAM,GAE1C,EA8HMI,GAAc,WAClBvC,IAAM,CACJ0B,OAAQ,SACRC,IACExF,EAAO,iEACmDsC,MAC3DwB,MAAK,SAACkC,GACP3D,IAAe,GACf5B,GAAiB,GACjBoE,YAAW,WACTpE,GAAiB,EACnB,GAAG,KACHC,EAAaC,EACf,GACF,EAEA,SAAS0F,GAA4BtG,GACnC,IAAQqC,EAAgCrC,EAAhCqC,YAAaC,EAAmBtC,EAAnBsC,eACrB,OACE,0BACE,UAAC,KAAM,CACLiE,QAASlE,EACTmE,KAAK,KACLC,UAAU,YACVC,QAAS,kBAAMpE,GAAe,EAAM,EAAC,WAErC,SAAC,KAAY,CAACmE,UAAU,GAAE,UACxB,SAAC,KAAW,WACV,iBAAMA,UAAU,GAAE,SAAC,4BAGvB,UAAC,KAAU,YACT,wBAAI,mDACJ,iBAAKA,UAAU,4BAA2B,WACxC,oBACExC,KAAK,SACLwC,UAAU,kBACVE,QAAS,WACPN,IACF,EAAE,WAEF,SAAC,MAAY,IAAG,UAAQ,OAChB,IAAI,aAEd,oBACEpC,KAAK,SACLwC,UAAU,oBACVE,QAAS,WACPrE,GAAe,EACjB,EAAE,UAED,KACD,SAAC,MAAO,CAACsE,SAAU,SAAU,UAAQ,iBAOnD,CACA,OACE,iBAAKH,UAAU,2BAA0B,WACvC,UAAC,IAAS,CACRA,UAAU,kCACVjC,MAAOpE,EACPyG,SAAS,MACTC,eAAa,EACbC,aAAa,qBACbC,gBAAgB,OAChBC,WAAS,EACTC,KAAM,GACN2F,WAAY,CAAEnC,SAAU,OAAQD,MAAO,QACvCtD,kBA9ToB,SAAC9C,GACzB,IAAI+C,GAAa,OAAOhH,GAClBiH,EAAmBhD,EAAnBgD,QACND,EADyB/C,EAAViD,OACQD,EACvBhH,EAAgB+G,GAChBnC,GAASZ,EAAEgD,SACXrF,GAAW,EACb,EAwTMuF,kBAAkB,6FAClBC,0BAA0B,sCAC1BC,mBAAoB,CAAC,GAAI,GAAI,IAAK,WAElC,SAAC,MAAM,CACLC,MAAM,aACNC,MAAM,aACNC,OAAO,aACPC,UAAQ,EACRwC,MAAO,CAAEI,MAAO,QAChB3C,KAAM,SAAC5C,GAAO,OACZ,gBAAKmF,MAAO,CAAEO,UAAW,UAAW,SACjCnJ,IAAOyD,EAAQ7B,YAAY3B,OAAO,gBAC/B,KAGV,SAAC,MAAM,CAACgG,MAAM,UAAUE,OAAO,WAAWC,UAAQ,KAClD,SAAC,MAAM,CACLH,MAAM,YACNE,OAAO,WACPC,UAAQ,EACRG,QAAQ,EACRC,OAAQ,SAACC,GAAO,OAnXMhD,EAmXoBgD,GAjX9C,+BACE,mBACEzD,GAAG,YACHgC,UAAU,SACV0B,KAAK,YACLC,SAAU,SAAC/D,GACTa,EAAQmD,eAAehE,EAAEiE,OAAO9D,OAChCtD,EAAaqH,KAAI,SAACC,GACZA,EAAE/D,IAAMJ,EAAEiE,OAAO9D,QACnBU,EAAiB,QAAa,UAAIsD,EAAE9E,UACpCwB,EAAiB,QAAW,QAAIb,EAAEiE,OAAO9D,MAE7C,GACF,EAAE,SAEW,OAAZtD,QAAY,IAAZA,OAAY,EAAZA,EAAcqH,KAAI,SAACE,EAAMnB,GAAK,OAC7B,mBAEE9C,MAAOiE,EAAKhE,GACZiE,SAAUD,EAAKhE,IAAMS,EAAQA,QAAQY,QAAuB,SAE3D2C,EAAK/E,WAJD4D,EAKE,QAxBU,IAACpC,CAmX4B,KAEpD,SAAC,MAAM,CACLwC,MAAM,eACNjD,GAAG,eACHmD,OAAO,iBACPK,OAAQ,SAACC,GAAO,OAtMF,SAAC9H,EAAc8H,EAAShD,GAC5C,OAEE,SAAC,IAAU,CACTuB,UAAS,gBACPlG,IAAsBH,EAAa8E,QAAQ1B,aACvC,cACA,IAEN2E,KAAK,eACLO,SAAUtH,EACVqD,GAAG,eACHD,MAAOpE,EAAaoD,aACpBN,QAASA,GACTyF,mBAAiB,EACjBC,kBAAgB,EAChBC,aAAa,SACbC,WAAW,cACXV,SAAU,SAAC/D,GACTjE,EAAaiI,eAAe5G,IAAO4C,GAAG3C,OAAO,gBAC3CkC,IAAY,SAACmF,GAAI,yBACZA,GAAI,cACN,eAAiBtH,IAAO4C,GAAG3C,OAAO,eAAa,IAEpDL,EAAiBgD,EACnB,EACAyI,UAAW,SAACzI,GACVA,EAAE0I,gBACJ,GAIN,CAsK6B/D,CAAcd,EAAQ,EAC3CL,UAAQ,EACRwC,MAAO,CAAEI,MAAO,QAChBzC,QAAQ,EACRF,KAAM,SAAC5C,GAAO,OACZ,gBAAKmF,MAAO,CAAEO,UAAW,UAAW,SACjCnJ,IAAOyD,EAAQ1B,cAAc9B,OAAO,gBACjC,EAERuH,gBAAgB,SAChBC,eAAgB,SAAC1E,EAAOwD,GACtB,OAAe,OAAXA,QAA8B5C,IAAX4C,IAGC,QAApBA,EAAOmB,SACF,IAAI7H,KAAKkD,IAAU,IAAIlD,KAAK0G,EAAOxD,OACb,QAApBwD,EAAOmB,SACT,IAAI7H,KAAKkD,IAAU,IAAIlD,KAAK0G,EAAOxD,OACvB,WAAVA,GAEP,IAAIlD,KAAKkD,GAAOxB,YAAc,IAAI1B,KAAK0G,EAAOxD,OAAOxB,UAK3D,EACAoG,eACE,gBAAK3C,UAAU,iBAAgB,UAC7B,gBAAKA,UAAU,mBAAkB,UAC/B,SAAC,IAAQ,CACPhC,GAAG,aACH4E,YAAY,gBACZC,UAAU,EACVC,eAAe,SACfC,cAAc,QACdV,WAAW,WACXW,gBAAgB,EAChBC,eAAe,EACfC,UAAU,YACVC,eAAe,EACfnD,UAAU,wBAMpB,SAAC,MAAM,CACLiB,MAAM,eACNE,OAAO,iBACPC,UAAQ,EACRwC,MAAO,CAAEI,MAAO,QAChB3C,KAAM,SAAC5C,GAAO,OACZ,gBAAKmF,MAAO,CAAEO,UAAW,UAAW,SACjC1F,EAAQ3B,aACL9B,IAAOyD,EAAQ3B,cAAc7B,OAAO,eACpC,IACA,KAKV,SAAC,MAAM,CACLgG,MAAM,WACNG,UAAQ,EACRD,OAAO,WACPK,OAAQ,SAACC,GAAO,OArOE,SAAC9H,GACzB,OACE,+BACE,0BACE,kBACEqG,UAAS,gBACPlG,IAAsBH,EAAa8E,QAAQzB,SACvC,cACA,IAENQ,KAAK,OACLQ,GAAG,WACH0D,KAAK,WACL3D,MAAOpE,EAAaqD,SACpB2E,SAAU,SAAC/D,GACTjE,EAAaiI,eAAehE,EAAEiE,OAAO9D,MACvC,OAKV,CAgN6BqF,CAAkB3B,EAAQ,EAC/CF,QAAQ,EACRqC,MAAO,CAAEI,MAAO,SAChB3C,KAAM,SAAC5C,GAAO,OACZ,iBACEyC,MAAOzC,EAAQzB,SACf4G,MAAO,CAAEO,UAAW,OAAQN,QAAS,SACrC7D,UAAU,WAAU,SAEnBvB,EAAQzB,UACJ,EAETyF,eAAgB,SAAC1E,EAAOwD,GACtB,OAAKA,GAGiBA,EAAO8B,MAAM,KACdC,OAAM,SAACC,GAC1B,QAAIA,EAAOC,aAAezF,EAAMyF,WAAWD,EAAOC,iBAG9CD,EAAOE,WAAa1F,EAAM0F,SAASF,EAAOE,cAG1CF,EAAOG,WAAa3F,EAAM4F,SAASJ,EAAOG,WAIhD,GACF,KAEF,SAAC,MAAM,CACLE,MAAO,CAAEC,QAAS,OAAQG,MAAO,QACjCF,WAAS,EACT3C,OAAO,SACP4C,YAAa,CAAEC,MAAO,MAAOC,SAAU,QACvCC,UAAW,CAAEC,UAAW,UACxB/C,UAAQ,KAEV,SAAC,MAAM,CACLC,KAtPiB,SAAC5C,GACxB,IAAM8H,EAAiB9H,EAAQ2G,QAAQ/B,MAAM,OAAOmD,KAAK,KAEzD,OADAnB,QAAQC,IAAIjK,GAAkBkL,IAE5B,yBACGlL,GAAkBkL,GACK,IAAxB9H,EAAQ3B,cACiB,KAAzB2B,EAAQ1B,cACN,mBAAOsH,OAAO,UAAS,WACrB,kBACE7G,KAAK,WACL6G,OAAO,UACPnE,QAAS,SAACtC,GACR,IAAM0G,EAAY1G,EAAEiE,OAAO0C,QAC3BpI,GAASmI,GACT7I,KAAeS,IACfD,GAAcwC,GACd9C,KAAiBO,IACjBX,GAAWW,GACb,EACAsI,UAAW/F,EACXgG,kBAAmB,SAAC7G,GAAC,OAAKa,EAAQb,EAAEG,MAAM,IACzC,IAAI,QAEP,SAAC,MAAY,CACX2G,MAAM,SACNL,OAAO,UACPnE,QAAS,WACPrE,IAAe,GACfE,GAAY0C,EAAQT,GACtB,OAIJ,IAIR,EAiNQmD,OAAO,SACP+C,UAAW,CAAEC,UAAW,UACxB/C,UAAQ,QAIZ,iBAAKpB,UAAU,uDAAsD,WACnE,oBACEA,UAAU,kBACVsB,SAAUhG,EACV4E,QAAS,YAtVE,WACPhC,SAASC,uBACjB,gDACA,GAEEC,QAEC9C,IACHC,GAAW,GACX4J,GAAkB,IAEpB,IAAM1H,EAAO,CACXX,aAAc,GACdF,WAAY5B,IAAO,IAAIH,MAAQI,OAAO,eAEtCmK,QAAS/J,EACT0B,aAAc,GACdE,UAAW,GACXD,SAAU,IAER4H,EAAK,GACTA,EAAG3G,KAAKR,GACR7D,EAAgB,GAAD,OAAKgL,GAAG,OAAIjL,KAC3B4B,GAAW,GACXI,IAAiB,GACjBF,IAAe,EACjB,CA6TUoJ,EACF,EAAE,UAED,KACD,SAAC,MAAM,IAAG,UACF,KACV,oBACE7E,UAAU,kBACVsB,SAAU4D,EACVJ,QAAQ,YACR5E,QAAS,YArgBJ,WAAO,IAAD,EAEuD,QADxE,EAAAhC,SACGC,uBAAuB,4CAA4C,UAAE,OADxE,EAEIC,QACJqB,KACA9D,IAAiB,GACjBF,IAAe,GACfF,GAAW,GACE,GAATW,IACFuD,GAAWzD,GAEf,CA2fU+I,GACAnK,GACF,EAAE,WAEF,SAAC,MAAM,IAAG,WACF,KACV,oBACEoF,UAAU,kBACVsB,SAAU4D,EACVhF,QAAS,YAvhBH,WAAO,IAAD,EAClBrG,GAAqB,GAE2C,QAAhE,EAAAqE,SAASC,uBAAuB,8BAA8B,UAAE,OAAhE,EAAkEC,QAClE7C,GAAW,GACXI,IAAiB,GACjBF,IAAe,EACjB,CAihBUuJ,EACF,EACA9D,MAAO,SACPnB,KAAM,QAAQ,WAEd,SAAC,MAAO,CAACI,SAAU,SAAU,gBAIhCvE,IACC,SAACiE,GAA2B,CAC1BjE,YAAaA,GACbC,eAAgBA,KAGlB,KAIR,E,+BC7RA,MAvaA,SAAiCtC,GAC/B,IACEkE,EAeElE,EAfFkE,KACAgD,EAcElH,EAdFkH,KACAgG,EAaElN,EAbFkN,UAKAC,GAQEnN,EAZFoN,IAYEpN,EAXFqN,gBAWErN,EAVFsN,YAUEtN,EATFuN,kBASEvN,EARFmN,gBACAK,EAOExN,EAPFwN,WACAC,EAMEzN,EANFyN,cACAC,EAKE1N,EALF0N,WACAC,EAIE3N,EAJF2N,cACAC,EAGE5N,EAHF4N,kBACAC,EAEE7N,EAFF6N,qBACAC,EACE9N,EADF8N,SAEF,GAAgC7M,EAAAA,EAAAA,UAAS,IAAG,eAArC8M,EAAQ,KAAEC,EAAW,KAC5B,GAAgC/M,EAAAA,EAAAA,UAAS,IAAG,eAArCgN,EAAQ,KAAEC,EAAW,KAC5B,GAA0CjN,EAAAA,EAAAA,UAAS,IAAG,eAAhCkN,GAAF,KAAkB,MAChC9C,GAAKvI,EAAAA,EAAAA,QAAO,OAClBe,EAAAA,EAAAA,YAAU,WACRmK,EAAYI,KAAKC,MAAMD,KAAKE,UAAUpK,IACxC,GAAG,CAACA,KAEJL,EAAAA,EAAAA,YAAU,WACR,GAAIkK,EAAS5J,OAAS,EAAG,CACvBsJ,EAAcM,EAAS,IACvBG,EAAYH,EAASQ,OAAO,IAE5B,IAAIC,EAAM,GACNC,EAASV,EAAS,GAEtB7B,OAAOC,KAAKsC,GAAQrK,SAAQ,SAACgI,GAC3BoC,EAAI9J,KAAK,CAAEiD,MAAOyE,EAAGsC,QAASD,EAAOrC,IACvC,IAEA+B,EAAiBK,EACnB,CACF,GAAG,CAACT,IAEJ,IAAMY,EAAc,CAClBxE,SAAU,CAAE3F,MAAO,KAAMoK,UAAWC,EAAAA,GAAAA,WAGtC,GAAgC5N,EAAAA,EAAAA,UAAS,CACvC6N,OAAQH,EAAsB,WAC9B,eAFKI,EAAQ,KAAEC,EAAW,MAI5BnL,EAAAA,EAAAA,YAAU,WACRmL,EAAY,CACVF,OAAQH,EAAsB,UAElC,GAAG,CAACnB,IACJ,OAAoDvM,EAAAA,EAAAA,UAAS,IAAG,eAAzDgO,EAAkB,KAAEC,EAAqB,KAU1CC,EAAwB,SAAC9K,GAC7B,IAAMG,EAAQH,EAAEiE,OAAO9D,MACnB4K,GAAS,UAAQL,GACrBK,EAAkB,OAAE5K,MAAQA,EAC5BwK,EAAYI,GACZF,EAAsB1K,EACxB,EAEM6K,EAAsB,WAC1B,IAAIC,EAAW3B,EAEf,GACO,WADC2B,EAAe,KAEnB,OACE,mBACE7K,GAAI6K,EAAa,GACjBlH,SAAU,SAAC/D,GACTwJ,EAAqBxJ,EAAEiE,OAAO9D,MAChC,EAAE,SAED0H,OAAOC,KAAKmD,EAAe,MAAG/G,KAAI,SAAC6D,GAClC,OACE,mBACE1D,SAAUkF,GAAqBxB,EAC/B5H,MAAO4H,EAAE,SAERkD,EAAe,KAAElD,IAGxB,KAQV,EAsFMmD,EAAc,WAClB,wCAAexL,MAAK,SAACyL,GAmEnB,IAlEA,IAAMC,EAAUvD,OAAOC,KAAKe,EAAU,IAEhCwC,IADa,OAAO,IAAIC,IAAIF,IACd,CAClB,QACA,WACA,cACA,aACA,MACA,aACA,YACA,QACA,kBACA,YACA,SACA,eACA,WACA,cACA,aACA,aACA,QACA,WACA,UACA,UACA,WACA,UAqBIG,EAAgB1C,EAAU3E,KAAI,SAACsH,GAAI,OACvCH,EAAYnH,KAAI,SAACX,GACf,IAAMpD,EAAQqL,EAAKjI,GAGnB,GAAe,YAAXA,GAAyC,kBAAVpD,EAAoB,CACrD,IAAMsL,EAAaC,WAAWvL,GAC9B,OAAOwL,MAAMF,GAActL,EAAQsL,EAAWG,gBAChD,CACA,MAAe,kBAAXrI,GAA8BnG,OAAO+C,GAAO0L,UACvCzO,OAAO+C,GAAO9C,OAAO,eAErB8C,CAEX,GAAE,IAEE2L,EAAWP,EAAcrH,KAAI,SAACsH,GAAI,OAAK3D,OAAOkE,OAAOP,EAAK,IAC1DQ,EAAW,IAAIC,IAAAA,UACfC,EAAYF,EAASG,aAAa1C,GAG/B3K,EAAI,EAAGA,EAAIgN,EAAShM,OAAQhB,IACvBoN,EAAUE,OAAON,EAAShN,IAGxB,CAAC,GACTiB,SAAQ,SAACkD,GACHiJ,EAAUG,OAAOpJ,GACzBqJ,KAAO,CAAEC,MAAM,EACrB,IACAP,EAASb,KAAKqB,cAAc9M,MAAK,SAAC+M,GAChC,IAAMC,EAAO,IAAIC,KAAK,CAACF,GAAS,CAC9B7M,KAAM,sEAERgN,OAAOF,EAAMjD,EACf,GACF,GACF,EAsHMoD,GAzCS,OAAVxD,QAAU,IAAVA,GAAAA,EAAYtD,SAAS,UActB,iBAAK3D,UAAU,yBAAwB,eACnBrB,GAAjBuI,IACC,2BACE,SAAC0B,EAAmB,OAIxB,gBAAK5I,UAAU,iBAAgB,UAClB,OAAViH,QAAU,IAAVA,OAAU,EAAVA,EAAYtD,SAAS,UACpB,iBACE3D,UAAU,yBACVE,QAAS4I,EACT5H,MAAM,uBAIZ,kBAAMlB,UAAU,iCAAgC,WAC9C,cAAGA,UAAU,kBACb,SAAC,IAAS,CACR0K,aAAclC,EACd7G,SAAU+G,EACV9F,YAAY,0BAOtB,OACE,0BACE,gBAAK5C,UAAU,kBAAiB,SAC7ByF,OAAOC,KAAKqB,GAAYrJ,OAAS,IAChC,SAAC,IAAS,CACRoD,kBAAkB,6FAClBC,0BAA0B,sCAC1BC,mBAAoB,CAAC,GAAI,GAAI,IAC7BjD,MAAOyJ,EACPhH,WAAS,EACTH,eAAa,EACbI,KAAMA,EACNwH,QAAQ,KACR0C,QAASrC,EACTsC,iBAAiB,SACjBzJ,OAAQsJ,EACRnK,cAAc,4BAAQ,sBACtBuK,IAAK,SAACC,GACJlG,EAAGsB,QAAU4E,CACf,EACA9K,UAAU,uBAAuB,SAIhC0G,OAMb,EC49CA,MA31DA,WAAwB,IAAD,EACrB,GAAkClM,EAAAA,EAAAA,UAAS,IAAIK,MAAO,eAA/CkQ,EAAS,KAChB,GAD8B,MACFvQ,EAAAA,EAAAA,WAAS,IAAM,eAApCwQ,EAAM,KAAE5Q,EAAS,KAClBc,EAAeC,aAAaC,QAAQ,SAK1C,GADYJ,IAAO+P,GAAW9P,OAAO,eACGT,EAAAA,EAAAA,UAAS,KAAG,eAA7Cb,EAAY,KAAEC,EAAe,KACpC,GAA0BY,EAAAA,EAAAA,UAAS,IAAG,eAA/Bd,EAAK,KAAEuR,EAAQ,KACtB,GAA8BzQ,EAAAA,EAAAA,WAAS,GAAM,eAAtCsF,EAAO,KAAEoL,EAAU,KAC1B,GAAwC1Q,EAAAA,EAAAA,UAAS2Q,EAAAA,KAAkB,eAA5DC,EAAY,KAAEC,GAAe,KACpC,IAAgC7Q,EAAAA,EAAAA,UAAS,IAAG,iBAArC8Q,GAAQ,MAAEC,GAAW,MAC5B,IAAgD/Q,EAAAA,EAAAA,UAAS,IAAG,iBAArDgR,GAAgB,MAAEC,GAAmB,MAC5C,IAA6BjR,EAAAA,EAAAA,WAAS,GAAM,iBAArCkR,GAAM,MAAEC,GAAU,MACzB,GAA8BC,EAAAA,UAAe,GAAM,iBAAnCC,IAAF,MAAY,OAC1B,IAAwBrR,EAAAA,EAAAA,UAAS,IAAG,iBAA7BiD,GAAI,MAAEqO,GAAO,MACpB,IAA0BtR,EAAAA,EAAAA,UAAS,IAAG,iBAA/BuR,GAAK,MAAEC,GAAQ,MACtB,IAAoCxR,EAAAA,EAAAA,UAAS,IAAG,iBAAzCyM,GAAU,MAAEgF,GAAa,MAChC,IAA8BzR,EAAAA,EAAAA,UAAS,IAAG,iBAAnC0R,GAAO,MAAEC,GAAU,MAC1B,IAA8C3R,EAAAA,EAAAA,UAAS,IAAG,iBAAnD4R,GAAe,MAAEC,GAAkB,MAC1C,IAAkD7R,EAAAA,EAAAA,WAAS,GAAM,iBAAvCT,IAAF,MAAsB,OAC9C,IAAoCS,EAAAA,EAAAA,UAAS,IAAG,iBAAzC8R,GAAU,MAAEC,GAAa,MAChC,IAAqD/R,EAAAA,EAAAA,UAAS,IAAG,iBAA1DgS,GAAmB,MAAEC,GAAqB,MACjD,IAAkCjS,EAAAA,EAAAA,WAAS,GAAM,iBAA1CF,GAAS,MAAED,GAAY,MAC9B,IAAwBG,EAAAA,EAAAA,UAASkS,GAAgB,IAAI7R,OAAQ,iBAAtD8B,GAAI,MAAEgQ,GAAO,MACpB,IAAgDnS,EAAAA,EAAAA,UA2ChD,SAAmCoS,GACjC,IAIMC,GAHoBD,EAAapQ,SAGM,GAAK,EAAK,EAGjDsQ,EACJF,EAAarQ,UARW,MAQCsQ,EAErBE,EAAmB,IAAIlS,KAAKiS,GAClC,OAAOC,CACT,CAvDEC,CAA0BrQ,KAC3B,iBAED,SAAS+P,GAAgB/P,GACvB,IAAMsQ,EAAMtQ,EAAKH,SACX0Q,EAAyB,IAARD,EAAY,EAAIA,EAAM,EACvCE,EAAe,IAAItS,KAAK8B,GAE9B,OADAwQ,EAAaC,QAAQzQ,EAAK0Q,UAAYH,GAC/BC,CACT,CAVuB,MAAqB,MAW5C,QAAwB3S,EAAAA,EAAAA,WAAS,GAAM,iBAAhC8S,GAAI,MAAEC,GAAO,MACpB,IAAsC/S,EAAAA,EAAAA,WAAS,GAAM,iBAA9CgT,GAAW,MAAEC,GAAc,MAClC,IAA0CjT,EAAAA,EAAAA,WAAS,GAAM,iBAAlDkT,GAAa,MAAEzT,GAAgB,MACtC,IAAuCO,EAAAA,EAAAA,UAAS,IAAG,iBAA5CmT,GAAW,MAAE3T,GAAe,MACnC,IAA4BQ,EAAAA,EAAAA,WAAS,GAAM,iBAApCoT,GAAM,MAAE3I,GAAS,MACxB,IAAsCzK,EAAAA,EAAAA,UAAS,IAAG,iBAA3CqM,GAAW,MAClB,IADkC,OACgBrM,EAAAA,EAAAA,UAAS,KAAG,iBAC9D,IADwB,MAAsB,OACNA,EAAAA,EAAAA,UAAS,KAAG,iBAA7CqT,GAAY,MAAEC,GAAe,MACpC,IAAoCtT,EAAAA,EAAAA,UAAS,IAAG,iBAAzCuT,GAAU,MAAEC,GAAa,MAChC,IAAoCxT,EAAAA,EAAAA,UAAS,IAAG,iBAAzCuM,GAAU,MAAEC,GAAa,MAChC,IAAgCxM,EAAAA,EAAAA,UAAS,IAAG,iBAC5C,IADe,MAAa,OACAA,EAAAA,EAAAA,UAAS,KAAG,iBAAzByT,IAAF,MAAW,OACxB,IAAwCzT,EAAAA,EAAAA,WAAS,GAAM,iBAAlC0T,IAAF,MAAiB,OACpC,IAAkC1T,EAAAA,EAAAA,UAAS,IAAG,iBAA5B2T,IAAF,MAAc,OAC9B,IAAoC3T,EAAAA,EAAAA,UAAS,IAAG,iBAAzCL,GAAU,MAAEiU,GAAa,MAChC,IAAkD5T,EAAAA,EAAAA,WAAS,GAAM,iBAA1DV,GAAiB,MAAED,GAAoB,MAC9C,IAAwDW,EAAAA,EAAAA,WAAS,GAAM,iBAAhE6T,GAAoB,MAAEC,GAAuB,MAI9CC,IAAWC,EAAAA,EAAAA,MAEXxQ,GADe,IAAIyQ,gBAAgBF,GAASG,QAC1BC,IAAI,MAC5B,IAAiCnU,EAAAA,EAAAA,WAAS,GAAM,iBAAzCoU,GAAO,MAAEC,GAAa,MAC7B,IAAoCrU,EAAAA,EAAAA,UAAS,IAAG,iBAAzCsU,GAAU,MAAEC,GAAa,MAC1BvV,GAAUC,EAAAA,EAAAA,QACVuV,IAAkB3S,EAAAA,EAAAA,QAAO,MAK/B,IAA8B7B,EAAAA,EAAAA,UAAS,IAAG,iBAAnCyU,GAAO,MAAEC,GAAU,OAe1B9R,EAAAA,EAAAA,YAAU,WACR,IACM+R,EAAuBtB,GAEvB9G,EAHuB8G,GAGWtP,MAAM,EAAG,GAC3CiJ,EAAW2H,EAAqBrH,OAAO,GAE7CsH,GAAerI,GACfsI,GAAa7H,EACf,GAAG,CAACqG,KACJ,QAAsCrT,EAAAA,EAAAA,UACpC,oDACD,iBAFM8U,GAAW,MAAEC,GAAc,MAgB5B1E,IAAMxO,EAAAA,EAAAA,QAAO,KAEnBe,EAAAA,EAAAA,YAAU,WAdRC,IAAM,CACJ0B,OAAQ,MACRC,IACExF,GAAO,gEAEE,OAAPwE,GAAc,EAAIA,MAErBV,MAAK,SAAUqC,GAChB,IAAM6P,EAAU7P,EAAIlC,KACpBsR,GAAcS,EAChB,GAMF,GAAG,IAEH,QAAgChV,EAAAA,EAAAA,UAAS,CACvCiV,MAAO,mDACPC,WAAY,oBACZC,cAAe,KACfC,SAAU5U,IAAO2B,IAAM1B,OAAO,cAC9B4U,SAAU,IACVC,QAAS,uBACTC,SAAU,IACVC,QAAS,MACT1L,UAAW,SACX,iBAVKpH,GAAQ,MAAEC,GAAW,OAW5BC,EAAAA,EAAAA,YAAU,WACRD,IAAY,WACV,OAAU,MAANa,GACK,CACLyR,MAAOX,GAAWW,MAClBC,WAAYZ,GAAWY,WACvBC,cAAeb,GAAWa,cAC1BC,SAAUd,GAAWc,SACrBC,SAAUf,GAAWe,SACrBC,QAAShB,GAAWgB,QACpBC,SAAUjB,GAAWiB,SACrBC,QAASlB,GAAWkB,QACpB1L,UAAWwK,GAAWxK,WAGjB,CACLmL,MAAO,mDACPC,WAAY,oBACZC,cAAe,KACfC,SAAU5U,IAAO2B,IAAM1B,OAAO,cAC9B4U,SAAU,IACVC,QAAS,uBACTC,SAAU,IACVC,QAAS,MACT1L,UAAW,OAGjB,GACF,GAAG,CAACwK,MACJ1R,EAAAA,EAAAA,YAAU,WACR2O,GAAM,IAAM/E,GAAcW,KAAKC,MAAMD,KAAKE,UAAUkE,GAAM,MAE1DE,GADU,CAAC,OAEb,GAAG,CAACF,MACJ3O,EAAAA,EAAAA,YAAU,WACR,GAAU,MAANY,GAAY,CACd,IAAMiS,EAAiB3E,GAAS/J,QAAO,SAACoI,GAAM,aAC9B,QAD8B,EAC5CzM,GAASuS,aAAK,aAAd,EAAgB9L,SAASgG,EAAO5L,MAAM,IAGlCmS,EAAoBhE,GAAQ3K,QAAO,SAACoI,GAAM,aAC3B,QAD2B,EAC9CzM,GAASwS,kBAAU,aAAnB,EAAqB/L,SAASgG,EAAO5L,MAAM,IAGvCoS,EAAmB7D,GAAW/K,QAAO,SAACoI,GAAM,aAC1B,QAD0B,EAChDzM,GAASyS,qBAAa,aAAtB,EAAwBhM,SAASgG,EAAO5L,MAAM,IAEhD0O,GAAsB0D,GACtB9D,GAAmB6D,GACnBzE,GAAoBwE,EACtB,CACF,GAAG,CAACjS,GAAIsN,GAAUY,GAASI,MAE3BlP,EAAAA,EAAAA,YAAU,WACE,MAANY,IACFK,YAAW,WACT+R,IACF,GAAG,IAEP,GAAG,CAACpS,GAAId,KAER,IAsEMhD,GAAe,SAAC8D,GACpBoQ,GAAcpQ,GACdX,IAAM,CACJ0B,OAAQ,MACRC,IACExF,GAAO,qEACuDwE,KAC/DV,MAAK,SAACgC,GAEP,IADA,IAAI+Q,EAAU/Q,EAAS7B,KACdf,EAAI,EAAGA,EAAI2T,EAAQ3S,OAAQhB,IAClC2T,EAAQ3T,GAAiB,aACO,MAA9B2T,EAAQ3T,GAAiB,aACrB,GACA1B,IAAOqV,EAAQ3T,GAAiB,cAAGzB,OAAO,eAEhDoV,EAAQ3T,GAAiB,aACO,MAA9B2T,EAAQ3T,GAAiB,aACrB,GACA1B,IAAOqV,EAAQ3T,GAAiB,cAAGzB,OAAO,eAEhDoV,EAAQ3T,GAAe,WACO,MAA5B2T,EAAQ3T,GAAe,WACnB,GACA1B,IAAOqV,EAAQ3T,GAAe,YAAGzB,OAAO,eAGhDrB,EAAgByW,GAChBC,OAAOC,SAAS,CAAEC,IAAK,KAAMC,SAAU,WAEvCC,cAAa,SAACC,GAAO,OAAKA,EAAU,CAAC,IACrC9W,IAAqB,EACvB,GACF,EACA,IAAkCW,EAAAA,EAAAA,UAAS,IAAG,iBAAvCiM,GAAS,MAAEmK,GAAY,OA+K9BxT,EAAAA,EAAAA,YAAU,WAAO,GAAG,CAAC2O,KACrB,IAAM8E,GAAe,SAACC,GACVjK,GAAY,GACtB,OACE,+BACE,yBAC6B,aAA1BiK,EAAaC,WACZ,iBACE/Q,UAAU,kCACVkB,MAAM,kBACN0C,MAAO,CAAEI,MAAO,SAAU,WAE1B,SAAC,MAAQ,CAAChE,UAAU,UACpB,cACEE,QAAS,SAACtC,GACR5D,GAAgB8W,EAAaE,UAC7B/F,EAAS6F,EAAa9S,IACtB2N,IAAW,GACXzR,GAAa4W,EAAa9S,GAC5B,EAAE,SAEqB,GAAtBd,GAASoH,UACR,IAEA,SAAC,MAAY,CACXvE,KAAK,QACLmB,MAAM,eACNmD,OAAO,cAQR,IAAI,QAET,iBAAMrE,UAAU,WAAWkB,MAAO4P,EAAaE,SAAS,SACrDF,EAAaE,cAGU,cAA1BF,EAAaC,WACf,iBACE/Q,UAAU,kCACVkB,MAAM,oBACN0C,MAAO,CAAEI,MAAO,SAAU,WAE1B,SAAC,MAAQ,CAAChE,UAAU,UACpB,cACEE,QAAS,SAACtC,GACR5D,GAAgB8W,EAAaE,UAC7B/F,EAAS6F,EAAa9S,IACtB2N,IAAW,GACXzR,GAAa4W,EAAa9S,GAC5B,EAAE,SAEqB,GAAtBd,GAASoH,UACR,IAEA,SAAC,MAAY,CACXvE,KAAK,QACLmB,MAAM,eACNmD,OAAO,cAGR,IAAI,QAET,iBAAMrE,UAAU,WAAWkB,MAAO4P,EAAaE,SAAS,SACrDF,EAAaE,cAGW,gBAA3BF,EAAaC,WACd,CACC,iBACA,UACA,gBACA,oBACApN,SAASmN,EAAaG,cAoCI,aAA1BH,EAAaC,WACf,iBACE/Q,UAAU,kCACVkB,MAAM,4BAA2B,WAGjC,gBACEgQ,IAAKC,EACLC,IAAI,oBACJxN,MAAO,CAAEyN,OAAQ,OAAQC,YAAa,QACtCpQ,MAAM,+BAER,cACEhB,QAAS,SAACtC,GACR5D,GAAgB8W,EAAaE,UAC7B/F,EAAS6F,EAAa9S,IACtB2N,IAAW,GACXzR,GAAa4W,EAAa9S,GAC5B,EAAE,SAEqB,GAAtBd,GAASoH,UACR,IAEA,SAAC,MAAY,CACXvE,KAAK,QACLmB,MAAM,eACNmD,OAAO,cAGR,IAAI,QAET,iBAAMrE,UAAU,WAAWkB,MAAO4P,EAAaE,SAAS,SACrDF,EAAaE,cAGU,SAA1BF,EAAaC,WACf,iBACE/Q,UAAU,kCACVkB,MAAM,kBAAiB,WAEvB,SAAC,MAAQ,CAAClB,UAAU,UACpB,cACEE,QAAS,SAACtC,GACR+N,IAAW,GACXzR,GAAa4W,EAAa9S,IAC1BiN,EAAS6F,EAAa9S,IACtBhE,GAAgB8W,EAAaE,SAC/B,EAAE,SAEqB,GAAtB9T,GAASoH,UACR,IAEA,SAAC,MAAY,CACXvE,KAAK,QACLmB,MAAM,eACNmD,OAAO,cAGR,IAAI,QAET,iBAAMrE,UAAU,WAAWkB,MAAO4P,EAAaE,SAAS,SACrDF,EAAaE,eAGhBF,EAAaC,UAiCc,gBAA3BD,EAAaC,WACf,CACE,iBACA,UACA,gBACA,mBACA,YACApN,SAASmN,EAAaG,eACxB,iBAAKjR,UAAU,kCAAkCkB,MAAM,WAAU,WAC/D,gBACEgQ,IAAKK,EACLH,IAAI,sBACJxN,MAAO,CAAEyN,OAAQ,OAAQrN,MAAO,OAAQwN,OAAQ,OAChDtQ,MAAM,iBAER,cACEhB,QAAS,SAACtC,GACR+N,IAAW,GACXzR,GAAa4W,EAAa9S,IAC1BiN,EAAS6F,EAAa9S,IACtBhE,GAAgB8W,EAAaE,SAC/B,EAAE,SAEqB,GAAtB9T,GAASoH,UACR,IAEA,SAAC,MAAY,CACXvE,KAAK,QACLmB,MAAM,eACNmD,OAAO,cAGR,IAAI,QAET,iBAAMrE,UAAU,WAAWkB,MAAO4P,EAAaE,SAAS,SACrDF,EAAaE,cAGW,iBAA3BF,EAAaC,WACf,CACE,iBACA,UACA,gBACA,oBACApN,SAASmN,EAAaG,eACxB,iBAAKjR,UAAU,kCAAkCkB,MAAM,WAAU,WAC/D,gBACEgQ,IAAKO,EACLL,IAAI,oBACJxN,MAAO,CAAEyN,OAAQ,OAAQrN,MAAO,OAAQwN,OAAQ,OAChDtQ,MAAM,mBAER,cACEhB,QAAS,SAACtC,GACR+N,IAAW,GACXzR,GAAa4W,EAAa9S,IAC1BiN,EAAS6F,EAAa9S,IACtBhE,GAAgB8W,EAAaE,SAC/B,EAAE,SAEqB,GAAtB9T,GAASoH,UACR,IAEA,SAAC,MAAY,CACXvE,KAAK,QACLmB,MAAM,eACNmD,OAAO,cAGR,IAAI,QAET,iBAAMrE,UAAU,WAAWkB,MAAO4P,EAAaE,SAAS,SACrDF,EAAaE,cAIlB,KAhNA,iBACEhR,UAAU,kCACVkB,MAAM,kBAAiB,WAEvB,gBAGEgQ,IAAKK,EACLH,IAAI,sBACJxN,MAAO,CAAEyN,OAAQ,QACjBnQ,MAAM,iBAER,cACEhB,QAAS,SAACtC,GACR5D,GAAgB8W,EAAaE,UAC7B/F,EAAS6F,EAAa9S,IACtB2N,IAAW,GACXzR,GAAa4W,EAAa9S,GAC5B,EAAE,SAEqB,GAAtBd,GAASoH,UACR,IAEA,SAAC,MAAY,CACXvE,KAAK,QACLmB,MAAM,eACNmD,OAAO,cAGR,IAAI,QAET,iBAAMrE,UAAU,WAAWkB,MAAO4P,EAAaE,SAAS,SACrDF,EAAaE,iBAqL5B,EAEMU,GAAa,SAACjU,GAClB,OACE,gBACEuC,UAAU,WACV,cAAY,UACZ4D,MAAO,CAAEI,MAAO,OAAQG,UAAW,UACnCjD,MAAOlG,IAAOyC,EAAKkU,UAAU1W,OAAO,eAAe,SAEH,gBAA/CD,IAAOyC,EAAKkU,UAAU1W,OAAO,eAC1B,GACAD,IAAOyC,EAAKkU,UAAU1W,OAAO,gBAGvC,EACM2W,GAAgB,SAACnU,GACrB,OACE,gBACEuC,UAAU,WACV,cAAY,UACZ4D,MAAO,CAAEI,MAAO,QAASG,UAAW,UACpCjD,MAAOlG,IAAOyC,EAAKoU,aAAa5W,OAAO,eAAe,SAEH,gBAAlDD,IAAOyC,EAAKoU,aAAa5W,OAAO,eAC7B,GACAD,IAAOyC,EAAKoU,aAAa5W,OAAO,gBAG1C,EACM6W,GAAkB,SAACrU,GACvB,OACE,gBACEuC,UAAU,WACV,cAAY,UACZ4D,MAAO,CAAEI,MAAO,OAAQG,UAAW,UACnCjD,MAAOlG,IAAOyC,EAAKqU,iBAAiB7W,OAAO,eAAe,SAEH,gBAAtDD,IAAOyC,EAAKqU,iBAAiB7W,OAAO,eACjC,GACAD,IAAOyC,EAAKqU,iBAAiB7W,OAAO,gBAG9C,EACM8W,GAAc,SAACtU,GACnB,OACE,gBAAKuC,UAAU,WAAW,cAAY,UAAUkB,MAAOzD,EAAKuU,YAAY,SACrEvU,EAAKuU,aAGZ,EAEMC,GAAQ,SAACxU,GAEb,OADA4H,QAAQC,IAAI7H,IAEV,gBACEuC,UAAU,WACV,cAAY,UACZ4D,MAAO,CAAEI,MAAO,QAChB9C,MAAOzD,EAAKwU,MAAM,SAEjBxU,EAAKwU,OAGZ,EAEMC,GAAa,SAACzU,GAClB,OACE,gBAAKuC,UAAU,WAAW,cAAY,UAAUkB,MAAOzD,EAAK0U,WAAW,SACpE1U,EAAK0U,YAGZ,EAEMC,GAAW,SAAC3U,GAChB,OACE,gBAAKuC,UAAU,WAAW,cAAY,UAAUkB,MAAOzD,EAAK4U,SAAS,SAClE5U,EAAK4U,UAGZ,EAEMC,GAAM,SAAC7U,GACX,OACE,gBAAKuC,UAAU,WAAW,cAAY,UAAUkB,MAAOzD,EAAK6U,IAAI,SAC7D7U,EAAK6U,KAGZ,EAEMC,GAAa,SAAC9U,GAClB,OACE,gBACEuC,UAAU,WACV4D,MAAO,CAAEO,UAAW,UACpB,cAAY,UACZjD,MAAOzD,EAAK+U,WAAW,SAEtB/U,EAAK+U,YAGZ,EAEMC,GAAY,SAAChV,GACjB,OACE,gBAAKuC,UAAU,WAAW,cAAY,UAAUkB,MAAOzD,EAAKiV,UAAU,SACnEjV,EAAKiV,WAGZ,EAEMC,GAAQ,SAAClV,GACb,OACE,gBAAKuC,UAAU,WAAW,cAAY,UAAUkB,MAAOzD,EAAKkV,MAAM,SAC/DlV,EAAKkV,OAGZ,EAEMC,GAAkB,SAACnV,GACvB,OACE,gBACEuC,UAAU,WACV,cAAY,UACZkB,MAAOzD,EAAKoV,gBAAgB,SAE3BpV,EAAKoV,iBAGZ,EAEMC,GAAU,SAACrV,GACf,OACE,gBACEuC,UAAU,WACV4D,MAAO,CAAEO,UAAW,QAASH,MAAO,QACpC,cAAY,UACZ9C,MAAOzD,EAAKsV,QAAQ,SAEnBtV,EAAKsV,SAGZ,EAEMC,GAAU,SAACvV,GACf,OACE,gBACEuC,UAAU,WACV4D,MAAO,CAAEO,UAAW,SACpB,cAAY,UACZjD,MAAOzD,EAAKwV,QAAQ,SAEnBxV,EAAKwV,SAGZ,EAEMC,GAAW,SAACzV,GAChB,OACE,gBACEuC,UAAU,WACV4D,MAAO,CAAEO,UAAW,SACpB,cAAY,UACZjD,MAAOzD,EAAK0V,SAAS,SAEpB1V,EAAK0V,UAGZ,EACMC,GAAY,SAAC3V,GAEjB,IAAM4V,EAAa5V,EAAK6V,UAAY,IAEpC,OACE,gBACEtT,UAAU,WACV4D,MAAO,CAAEO,UAAW,SACpB,cAAY,UACZjD,MAAOmS,EAAW,SAEjBA,GAGP,EAEME,GAAQ,SAAC9V,GACb,OACE,gBACEuC,UAAU,WACV4D,MAAO,CAAEO,UAAW,SACpB,cAAY,UACZjD,MAAOzD,EAAK+V,MAAM,SAEjB/V,EAAK+V,OAGZ,EAEMC,GAAQ,SAAChW,GACb,OACE,gBACEuC,UAAU,WACV4D,MAAO,CAAEO,UAAW,QAASH,MAAO,QACpC,cAAY,UACZ9C,MAAOzD,EAAKiW,MAAM,SAEjBjW,EAAKiW,OAGZ,EAEMC,GAAa,SAAClW,GAClB,OACE,gBAAKuC,UAAU,WAAW,cAAY,UAAUkB,MAAOzD,EAAKmW,WAAW,SACpEnW,EAAKmW,YAGZ,EAEMC,GAAa,SAACpW,GAClB,OACE,gBAAKuC,UAAU,WAAW,cAAY,UAAUkB,MAAOzD,EAAKqW,WAAW,SACpErW,EAAKqW,YAGZ,EACIC,GAAW,GACTC,GAAiB,SAACjS,EAAGkS,EAAGC,GAC5BH,GAAWhS,EAAEsB,MAAM,KAAK,GAExB,IAAM8Q,EAAO,CAAC,EAEO,QAAnBpS,EAAEsB,MAAM,KAAK,IACM,QAAnBtB,EAAEsB,MAAM,KAAK,IACM,SAAnBtB,EAAEsB,MAAM,KAAK,IACM,SAAnBtB,EAAEsB,MAAM,KAAK,GAEU,QAAnBtB,EAAEsB,MAAM,KAAK,GACf8Q,EAAQ,EAAI,OAEZA,EAAQ,EAAIpS,EAAEsB,MAAM,KAAK,GAG3B8Q,EAAQ,EAAIpS,EAGdoS,EAAQ,EAAIF,EAvsBE,SAACE,EAAMD,GACrB,IAAME,EAAcF,EAAQxS,KAC5B+L,IAAe,GACf,IAAI4G,EAAahW,YAAW,WAC1B4G,IAAU,EACZ,GAAG,KACCqP,EAAIH,EAAKpS,EACb1E,IAAM,CACJ0B,OAAQ,OACRC,IAAKxF,GAAO,gDACZiE,KAAM,CACJgS,MAAO0E,EAAKF,EACZvE,WAAY,KACZ6E,IAAKJ,EAAKpS,EACVgO,SAAU,IACVzL,UAAWpH,GAASoH,UACpBkQ,OAAQtZ,KAGToC,MAAK,SAACgC,GACL2F,IAAU,GACVwP,aAAaJ,GACT/U,EAAWA,EAAS7B,KACxByR,GACEkF,EACE,MACa,QAAZL,GACG,QACY,QAAZA,GACA,QACY,SAAZA,GACA,mBACY,aAAZA,GACA,6BACY,SAAZA,GACA,kBACY,WAAZA,GACA,iBACY,WAAZA,GACA,kBACY,YAAZA,GACA,oBACY,WAAZA,GACA,qBACY,YAAZA,GACA,YACY,YAAZA,GACA,YACY,aAAZA,GACA,kBACY,UAAZA,GACA,gCACY,UAAZA,GACA,iCACY,SAAZA,GACA,sBACY,WAAZA,GACA,wBACY,UAAZA,GACA,gCACY,UAAZA,GACA,sCACY,UAAZA,GACA,uCACY,SAAZA,GACA,4BACY,WAAZA,GACA,8BACY,UAAZA,GACA,gCACY,aAAZA,GACA,iCACY,aAAZA,GACA,uCACY,aAAZA,GACA,wCACY,YAAZA,GACA,6BACY,cAAZA,GACA,+BACA,KAER,IAAIW,EAAa,CACf,CACEzC,MAAO,UACPjB,SAAU,WACVgB,YAAa,cACbG,WAAY,aACZE,SAAU,WACVC,IAAK,eACLE,WAAY,QACZE,UAAW,cACXC,MAAO,QACPE,gBAAiB,cACjBE,QAAS,eACTE,QAAS,eACTE,SAAU,gBACVG,UAAW,gBACXE,MAAO,SACPE,MAAO,eACPE,WAAY,aACZE,WAAY,cACZnC,SAAU,mBACVE,YAAa,wBACbC,gBAAiB,sBA+Bb,UAANwC,GACM,kBAANA,GACK,iBAALA,GACK,kBAALA,GACK,iBAALA,GACK,kBAALA,GACK,kBAALA,GACK,mBAALA,WAGOI,EAAW,GAAGlB,aACdkB,EAAW,GAAG5C,iBAKvB,IAFA,IAAI6C,EAAQ,GACRC,EAAQ,GACH/T,EAAQ,EAAGA,EAAQvB,EAAS5B,OAAQmD,IAC9B,GAATA,GACF8T,EAAM1W,KAAKqB,EAASuB,IACpB+T,EAAM3W,KAAKqB,EAASuB,KAEpB+T,EAAM3W,KAAKqB,EAASuB,IAGxB+P,GApDsB,CACpB,CACEqB,MAAO,SACPjB,SAAU,WACVgB,YAAa,cACbG,WAAY,aACZG,IAAK,eACLE,WAAY,QACZE,UAAW,cACXC,MAAO,QACPE,gBAAiB,cACjBS,UAAW,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","sources":["views/FullfimentComponent/ResourceOverviewEditableTable.js","views/FullfimentComponent/BenchReportEditableTable.js","views/FullfimentComponent/BenchReportSecondTable.js","views/FullfimentComponent/BenchReport.js","views/FullfimentComponent/ResourceOverviewGraphs.js","views/FullfimentComponent/ResourceOverviewTable.js","views/FullfimentComponent/ResourceOverview.js","views/FullfimentComponent/ResourceTrending.js","views/FullfimentComponent/RollOffs.js","views/FullfimentComponent/RollsOffsTable.js","views/FullfimentComponent/BenchMatrics.js","views/FullfimentComponent/ResourceOverviewPopover.js","views/FullfimentComponent/ResourceTrendingDisplayTable.js"],"sourcesContent":["import React, { useEffect, useRef } from \"react\";\nimport { DataTable } from \"primereact/datatable\";\nimport { Column } from \"ag-grid-community\";\nimport { Button } from \"@mui/material\";\nimport { useState } from \"react\";\nimport axios from \"axios\";\nimport DatePicker from \"react-datepicker\";\nimport { Calendar } from \"primereact/calendar\";\nimport moment from \"moment\";\nimport { options } from \"preact\";\nimport { InputText } from \"primereact/inputtext\";\nimport { environment } from \"../../environments/environment\";\nimport { FaPlus, FaSave } from \"react-icons/fa\";\nimport { ImCancelCircle, ImCross } from \"react-icons/im\";\nimport { AiFillDelete, AiOutlinePlusSquare } from \"react-icons/ai\";\nimport { MdOutlineAdd } from \"react-icons/md\";\nimport { TfiSave } from \"react-icons/tfi\";\nimport { CheckBox } from \"@mui/icons-material\";\nimport { CModal, CModalBody, CModalHeader, CModalTitle } from \"@coreui/react\";\nimport GlobalValidation from \"../ValidationComponent/GlobalValidation\";\n\nfunction ResourceOverviewEditableTable(props) {\n  const baseUrl = environment.baseUrl;\n  const {\n    resid,\n    resourcedata,\n    setResourcedata,\n    setValidationMessage,\n    validationmessage,\n    setResourceName,\n    setSaveActionMessage,\n    setDeleteMessage,\n    handleClick1,\n    employeeid,\n    setsearching,\n    searching,\n    setAddmsg,\n    permission,\n  } = props;\n  const [categorytype, setcategoryType] = useState([]);\n  const [effectivedate, setEffectiveDate] = useState();\n  const [entrydate, setEntryDate] = useState(new Date());\n  let entrydate1 = moment(entrydate).format(\"YYYY-MM-DD\");\n  const loggedUserId = localStorage.getItem(\"resId\");\n  const loggedUserName = localStorage.getItem(\"resName\");\n  const [clicked, setClicked] = useState(false);\n  const [saveCliked, setSaveClicked] = useState(true);\n  const [cancelClicked, setCancelClicked] = useState(true);\n  const [deletePopup, setDeletePopup] = useState(false);\n  const [checkboxenable, setCheckboxEnable] = useState(false);\n  const [deleteid, setDeleteId] = useState(\"\");\n  const [isAdding, setIsAdding] = useState(false);\n  const [editeddata, setEditedData] = useState({});\n  const [check, setCheck] = useState(false);\n  const ref = useRef([]);\n\n  //  var today=new Date()\n  // const lastFriday = new Date(today.getTime() - (today.getDay() + 2) % 7 * 24 * 60 * 60 * 1000);\n\n  const today = new Date();\n  const lastFriday = new Date(\n    today.getTime() - ((today.getDay() + 2) % 7) * 24 * 60 * 60 * 1000\n  );\n  const previousFriday = new Date(\n    lastFriday.getTime() - 7 * 24 * 60 * 60 * 1000\n  );\n\n  // const today = new Date();\n  let minDate = new Date(today.getTime() - 7 * 24 * 60 * 60 * 1000);\n\n  for (let i = 1; i < 7; i++) {\n    const date = new Date(today.getTime() - i * 24 * 60 * 60 * 1000);\n    if (date < minDate) {\n      minDate = date;\n    }\n  }\n\n  const initialValues = {\n    created_dt: \"\",\n    createdby: \"\",\n    completed_dt: \"\",\n    effective_dt: \"\",\n    comments: \"\",\n    lkup_name: \"\",\n  };\n\n  const [formData, setFormData] = useState(initialValues);\n\n  useEffect(() => { }, [formData]);\n  const getcategorytype = () => {\n    axios\n      .get(baseUrl + `/fullfilmentms/resourceoverview/actiontypesbillable`)\n      .then((Response) => {\n        let type = [];\n        let data = Response.data;\n        data.length > 0 &&\n          data.forEach((e) => {\n            let TypeObj = {\n              label: e.lkup_name,\n              value: e.id,\n            };\n            type.push(TypeObj);\n          });\n        setcategoryType(data);\n      });\n  };\n  useEffect(() => {\n    getcategorytype();\n  }, []);\n\n  useEffect(() => {\n    if (resourcedata[0]?.comments == \"\") {\n      document.getElementsByClassName(\"p-row-editor-init p-link\")[0]?.click();\n      setTimeout(() => {\n        document\n          .getElementsByClassName(\"p-row-editor-cancel p-link\")[0]\n          ?.addEventListener(\n            \"click\",\n            function (e) {\n              if (resourcedata[0]?.comments == \"\") {\n\n                setResourcedata(resourcedata.slice(1, resourcedata.length));\n                setSaveClicked(true);\n\n              }\n            },\n            true\n          );\n      }, 200);\n    }\n  }, [resourcedata]);\n\n  const Reset = () => {\n    document.getElementsByClassName(\"p-row-editor-cancel p-link\")[0]?.click();\n    setClicked(false);\n    setCancelClicked(true);\n    setSaveClicked(true);\n  };\n\n  const Save = () => {\n    document\n      .getElementsByClassName(\"p-row-editor-save-icon pi pi-fw pi-check\")[0]\n      ?.click();\n    EditedData();\n    setCancelClicked(false);\n    setSaveClicked(false);\n\n    // setClicked(false);\n    if (check == true) {\n      EditedData(editeddata);\n    }\n  };\n  // const Save = () => {\n  //   document\n  //     .getElementsByClassName(\"p-row-editor-save-icon pi pi-fw pi-check\")[0]\n  //     ?.click();\n  // };\n  const CategoryBodyTemplate = (rowData) => {\n    return (\n      <>\n        <select\n          id=\"lkup_name\"\n          className=\"cancel\"\n          name=\"lkup_name\"\n          onChange={(e) => {\n            rowData.editorCallback(e.target.value);\n            categorytype.map((a) => {\n              if (a.id == e.target.value) {\n                rowData[\"rowData\"][\"lkup_name\"] = a.lkup_name;\n                rowData[\"rowData\"][\"type_id\"] = e.target.value;\n              }\n            });\n          }}\n        >\n          {categorytype?.map((Item, index) => (\n            <option\n              key={index}\n              value={Item.id}\n              selected={Item.id == rowData.rowData.type_id ? true : false}\n            >\n              {Item.lkup_name}\n            </option>\n          ))}\n        </select>\n      </>\n    );\n  };\n  const [postdata1, setPostData1] = useState([]);\n  const onRowEditComplete = (e) => {\n    let _resourcedata = [...resourcedata]; // Make a copy of the current state variable\n    let { newData, index } = e;\n    _resourcedata[index] = newData;\n    setResourcedata(_resourcedata);\n    postData(e.newData);\n    setClicked(true);\n  };\n\n  const postData = (rowData, e) => {\n    let adddata = document.getElementsByClassName(\"error\");\n\n    for (let i = 0; i < adddata.length; i++) {\n      if (\n        rowData.comments == \"\" ||\n        rowData.comments == null ||\n        rowData.effective_dt == \"\" ||\n        adddata[i].value === \"\" ||\n        adddata[i].value === \"null\" ||\n        adddata[i].value === \"All\" ||\n        adddata[i].value === undefined\n      ) {\n        adddata[i].classList.add(\"error-block\");\n        setValidationMessage(true);\n        setSaveClicked(true)\n        setClicked(false)\n\n        // classList.add(\"error-block\");\n      } else {\n        adddata[i].classList.remove(\"error-block\");\n        // classList.remove(\"error-block\")\n      }\n    }\n\n    if (\n      rowData.comments == \"\" ||\n      rowData.effective_dt == \"Invalid date\" ||\n      rowData.effective_dt == \"\"\n    ) {\n      setValidationMessage(true);\n      setSaveClicked(true)\n      setClicked(false)\n    } else {\n      setValidationMessage(false);\n\n      axios({\n        method: \"post\",\n        url: baseUrl + `/fullfilmentms/resourceoverview/UpdateActiontableitems`,\n        data: {\n          id: null,\n          created_dt: rowData.created_dt,\n          created_by: parseInt(loggedUserId),\n          resource_id: resid,\n          typ_category_id: parseInt(\n            rowData.type_id == null ? 831 : rowData.type_id\n          ),\n          effective_dt: moment(rowData.effective_dt).format(\"YYYY-MM-DD\"),\n          completed_dt: null,\n          comments: rowData.comments,\n        },\n      })\n        .then((response) => {\n          setValidationMessage(false);\n          setSaveActionMessage(true);\n          setTimeout(() => {\n            setSaveActionMessage(false);\n          }, 3000);\n          handleClick1(employeeid);\n          setClicked(false);\n          setCancelClicked(true);\n          setSaveClicked(true);\n        })\n        .catch((error) => { });\n    }\n  };\n\n  const EditedData = (rowData) => {\n    axios({\n      method: \"post\",\n      url: baseUrl + `/fullfilmentms/resourceoverview/UpdateActiontableitems`,\n      data: {\n        id: rowData?.id,\n        created_dt: moment(rowData?.created_dt).format(\"YYYY-MM-DD\"),\n        created_by: parseInt(loggedUserId),\n        resource_id: resid,\n        typ_category_id: parseInt(rowData?.lkup_id),\n        effective_dt: moment(rowData?.effective_dt).format(\"YYYY-MM-DD\"),\n        completed_dt: entrydate1,\n        comments: rowData?.comments,\n      },\n    }).then((res) => {\n      setAddmsg(true);\n      setTimeout(() => {\n        setAddmsg(false);\n      }, 2000);\n      handleClick1(employeeid);\n      setValidationMessage(false);\n    });\n  };\n\n  const addHandler = () => {\n    setSaveClicked(false);\n\n\n    const data = {\n      completed_dt: \"\",\n      created_dt: moment(new Date()).format(\"DD-MMM-yyyy\"),\n      // created_dt: \"\",\n      createdby: loggedUserName,\n      effective_dt: \"\",\n      lkup_name: \"\",\n      comments: \"\",\n    };\n    let dt = [];\n    dt.push(data);\n    setResourcedata([...dt, ...resourcedata]);\n    setClicked(true);\n    setCancelClicked(false);\n    setSaveClicked(false);\n  };\n\n  const setDatePicker = (resourcedata, options, rowData) => {\n    return (\n      <div title={resourcedata.effective_dt}>\n        <DatePicker\n          className={`error ${validationmessage === true ? \"error-block\" : \"\"}`}\n          name=\"effective_dt\"\n          selected={effectivedate}\n          id=\"effective_dt\"\n          value={resourcedata.effective_dt}\n          minDate={minDate}\n          showMonthDropdown\n          showYearDropdown\n          dropdownMode=\"select\"\n          dateFormat=\"dd-MMM-yyyy\"\n          onChange={(e) => {\n            resourcedata.editorCallback(moment(e).format(\"DD-MMM-yyyy\")),\n              setFormData((prev) => ({\n                ...prev,\n                [\"effective_dt\"]: moment(e).format(\"yyyy-MM-DD\"),\n              }));\n            setEffectiveDate(e);\n          }}\n        />\n      </div>\n    );\n  };\n\n  const commentstextfiled = (resourcedata) => {\n    return (\n      <>\n        <div className=\"error-block error\">\n          <input\n            className={`error ${validationmessage === true ? \"error-block\" : \"\"\n              }`}\n            type=\"text\"\n            id=\"comments\"\n            name=\"comments\"\n            value={resourcedata.comments}\n            onChange={(e) => {\n              resourcedata.editorCallback(e.target.value);\n            }}\n          />\n        </div>\n      </>\n    );\n  };\n\n  const renderRowActions = (rowData) => {\n    return (\n      <div style={{ paddingLeft: \"55px\" }}>\n        {loggedUserName == rowData.createdby &&\n          rowData.completed_dt == \"\" &&\n          rowData.effective_dt != \"\" &&\n          validationmessage == false ? (\n          <label cursor=\"pointer\">\n            <input\n              type=\"checkbox\"\n              cursor=\"pointer\"\n              onClick={(e) => {\n                const isChecked = e.target.checked;\n                setCheck(isChecked);\n                setSaveClicked(check ? true : false);\n                setEditedData(rowData);\n                setCancelClicked(check ? true : false);\n                setClicked(check ? false : true);\n              }}\n              selection={rowData}\n              onSelectionChange={(e) => rowData(e.value)}\n            />{\" \"}\n            &nbsp;\n            <AiFillDelete\n              color=\"orange\"\n              cursor=\"pointer\"\n              onClick={() => {\n                setDeletePopup(true);\n                setDeleteId(rowData.id);\n              }}\n            />\n          </label>\n        ) : (\n          \"\"\n        )}\n      </div>\n    );\n  };\n\n  const DeleteItems = () => {\n    axios({\n      method: \"delete\",\n      url:\n        baseUrl +\n        `/fullfilmentms/resourceoverview/deleteActionDetails?id=${deleteid}`,\n    }).then((error) => {\n      setDeletePopup(false);\n      setDeleteMessage(true);\n      setTimeout(() => {\n        setDeleteMessage(false);\n      }, 3000);\n      handleClick1(employeeid);\n    });\n  };\n\n  function ResourceOverviewDeletePopup(props) {\n    const { deletePopup, setDeletePopup } = props;\n    return (\n      <div>\n        <CModal\n          visible={deletePopup}\n          size=\"xs\"\n          className=\"ui-dialog\"\n          onClose={() => setDeletePopup(false)}\n        >\n          <CModalHeader className=\"\">\n            <CModalTitle>\n              <span className=\"\">Delete Action Item</span>\n            </CModalTitle>\n          </CModalHeader>\n          <CModalBody>\n            <h6>Are you sure you want to delete Action Item ?</h6>\n            <div className=\"btn-container center my-2\">\n              <button\n                type=\"delete\"\n                className=\"btn btn-primary\"\n                onClick={() => {\n                  DeleteItems();\n                }}\n              >\n                <AiFillDelete /> Delete{\" \"}\n              </button>{\" \"}\n              &nbsp; &nbsp;\n              <button\n                type=\"button\"\n                className=\"btn btn-secondary\"\n                onClick={() => {\n                  setDeletePopup(false);\n                }}\n              >\n                {\" \"}\n                <ImCross fontSize={\"11px\"} /> Cancel{\" \"}\n              </button>\n            </div>\n          </CModalBody>\n        </CModal>\n      </div>\n    );\n  }\n  const handleBodyDate = (data) => {\n    return (\n      <>\n        <input\n          id=\"created_dt\"\n          title={data.created_dt}\n          value={data.created_dt}\n          disabled\n          type=\"text\"\n          className=\"ellipsis\"\n        />\n      </>\n    );\n  };\n  // \n  const handleBodyEntryBy = (data) => {\n    return (\n      <>\n        <input\n          id=\"createdby\"\n          title={data.createdby}\n          value={data.createdby}\n          disabled\n          type=\"text\"\n          className=\"ellipsis\"\n        />\n      </>\n    );\n  };\n  const handleBodyCategory = (data) => {\n    return (\n      <>\n        <input\n          id=\"lkup_name\"\n          title={data.lkup_name}\n          value={data.lkup_name}\n          disabled\n          type=\"text\"\n          className=\"ellipsis\"\n        />\n      </>\n    );\n  };\n  const handleBodyComments = (data) => {\n    return (\n      <>\n        <input\n          id=\"comments\"\n          title={data.comments}\n          value={data.comments}\n          disabled\n          type=\"text\"\n          className=\"ellipsis\"\n        />\n      </>\n    );\n  };\n  const handleBodyCompletedDate = (data) => {\n    return (\n      <>\n        <input\n          id=\"completed_dt\"\n          title={data.completed_dt}\n          value={data.completed_dt}\n          disabled\n          type=\"text\"\n          className=\"ellipsis\"\n        />\n      </>\n    );\n  };\n  // \n  const handleBodyEffectiveDate = (data) => {\n    return (\n      <>\n        <input\n          id=\"effective_dt\"\n          title={data.effective_dt}\n          value={data.effective_dt}\n          disabled\n          type=\"text\"\n          className=\"ellipsis\"\n        />\n      </>\n    );\n  };\n  return (\n    <div className=\"darkHeader\">\n      <DataTable\n        value={resourcedata}\n        editMode=\"row\"\n        showGridlines\n        emptyMessage=\"No Records To View\"\n        scrollDirection=\"both\"\n        paginator\n        rows={25}\n        onRowEditComplete={onRowEditComplete}\n        className=\"primeReactDataTable \" ///customerEngament\n        paginatorTemplate=\"RowsPerPageDropdown FirstPageLink PrevPageLink CurrentPageReport NextPageLink LastPageLink\"\n        currentPageReportTemplate=\"{first} to {last} of {totalRecords}\"\n        rowsPerPageOptions={[10, 25, 50]} //------------->\n      >\n        <Column\n          field=\"created_dt\"\n          title=\"created_dt\"\n          header=\"Entry Date\"\n          sortable\n          body={handleBodyDate}\n\n        />\n        <Column field=\"createdby\"\n          header=\"Entry By\" sortable\n          body={handleBodyEntryBy}\n        />\n        <Column\n          field=\"lkup_name\"\n          header=\"Category\"\n          sortable\n          filter={true}\n          editor={(options) => CategoryBodyTemplate(options)}\n          body={handleBodyCategory}\n\n        />\n        <Column\n          field=\"effective_dt\"\n          id=\"effective_dt\"\n          header=\"Effective Date\"\n          editor={(options) => setDatePicker(options)}\n          body={handleBodyEffectiveDate}\n\n          sortable\n          filter={true}\n          filterMatchMode=\"custom\"\n          filterFunction={(value, filter) => {\n            if (filter === null || filter === undefined) {\n              return true;\n            }\n            if (filter.operator === \"lte\") {\n              return new Date(value) <= new Date(filter.value);\n            } else if (filter.operator === \"gte\") {\n              return new Date(value) >= new Date(filter.value);\n            } else if (value === \"equals\") {\n              return (\n                new Date(value).getTime() === new Date(filter.value).getTime()\n              );\n            } else {\n              return true;\n            }\n          }}\n          filterElement={\n            <div className=\"p-field p-grid\">\n              <div className=\"p-col-12 p-md-10\">\n                <Calendar\n                  id=\"event_date\"\n                  placeholder=\"Select a date\"\n                  showIcon={true}\n                  inputClassName=\"p-ml-2\"\n                  selectionMode=\"range\"\n                  dateFormat=\"mm/dd/yy\"\n                  monthNavigator={true}\n                  yearNavigator={true}\n                  yearRange=\"2000:2030\"\n                  showButtonBar={true}\n                  className=\"p-datepicker\"\n                />\n              </div>\n            </div>\n          }\n        />\n        <Column field=\"completed_dt\" header=\"Completed Date\"\n          body={handleBodyCompletedDate}\n\n          sortable />\n        <Column\n          field=\"comments\"\n          sortable\n          header=\"Comments\"\n          body={handleBodyComments}\n\n          editor={(options) => commentstextfiled(options)}\n          filter={true}\n          filterFunction={(value, filter) => {\n            if (!filter) {\n              return true;\n            }\n            const filterOptions = filter.split(\" \");\n            return filterOptions.every((option) => {\n              if (option.startsWith && !value.startsWith(option.startsWith)) {\n                return false;\n              }\n              if (option.endsWith && !value.endsWith(option.endsWith)) {\n                return false;\n              }\n              if (option.contains && !value.includes(option.contains)) {\n                return false;\n              }\n              return true;\n            });\n          }}\n        />\n        {/* {(dataAccess == 908 || dataAccess == 307) && ( */}\n        <Column\n          style={{ display: \"none\" }}\n          rowEditor\n          header=\"Action\"\n          headerStyle={{ width: \"10%\", minWidth: \"8rem\" }}\n          bodyStyle={{ textAlign: \"center\" }}\n\n          sortable\n        />\n        {/* )} */}\n        {/* {(dataAccess == 908 || dataAccess == 307) && ( */}\n        <Column\n          body={renderRowActions}\n          header=\"Action\"\n          bodyStyle={{ textAlign: \"center\" }}\n          sortable\n        ></Column>\n        {/* )} */}\n      </DataTable>\n      {permission[1].is_write == false ? (\n        \"\"\n      ) : (\n        <div className=\"form-group col-md-2 btn-container-events center my-3\">\n          <button\n            className=\"btn btn-primary\"\n            disabled={clicked}\n            title={\"Add new row\"}\n            onClick={() => {\n              addHandler();\n            }}\n          >\n            {\" \"}\n            <FaPlus /> Add\n          </button>{\" \"}\n          <button\n            className=\"btn btn-primary\"\n            disabled={saveCliked}\n            variant=\"contained\"\n            onClick={() => {\n              Save();\n              setEffectiveDate();\n            }}\n          >\n            <FaSave /> Save\n          </button>{\" \"}\n          <button\n            className=\"btn btn-primary\"\n            disabled={cancelClicked}\n            onClick={() => {\n              Reset();\n              setValidationMessage(false);\n            }}\n            title={\"Cancel\"}\n            size={\"1.4em\"}\n          >\n            <ImCross fontSize={\"11px\"} /> Cancel\n          </button>\n        </div>\n      )}\n\n      {deletePopup ? (\n        <ResourceOverviewDeletePopup\n          deletePopup={deletePopup}\n          setDeletePopup={setDeletePopup}\n        />\n      ) : (\n        \"\"\n      )}\n    </div>\n  );\n}\nexport default ResourceOverviewEditableTable;\n","import React, { useEffect, useRef } from \"react\";\nimport { DataTable } from \"primereact/datatable\";\nimport { Column } from \"ag-grid-community\";\nimport { Button } from \"@mui/material\";\nimport { useState } from \"react\";\nimport axios from \"axios\";\nimport DatePicker from \"react-datepicker\";\nimport { Calendar } from \"primereact/calendar\";\nimport moment from \"moment\";\nimport { options } from \"preact\";\nimport { InputText } from \"primereact/inputtext\";\nimport { environment } from \"../../environments/environment\";\nimport { FaPlus, FaSave } from \"react-icons/fa\";\nimport { ImCancelCircle, ImCross } from \"react-icons/im\";\nimport { AiFillDelete, AiOutlinePlusSquare } from \"react-icons/ai\";\nimport { MdOutlineAdd } from \"react-icons/md\";\nimport { TfiSave } from \"react-icons/tfi\";\nimport { CheckBox } from \"@mui/icons-material\";\nimport { CModal, CModalBody, CModalHeader, CModalTitle } from \"@coreui/react\";\nimport GlobalValidation from \"../ValidationComponent/GlobalValidation\";\n\nfunction BenchReportEditableTable(props) {\n  const baseUrl = environment.baseUrl;\n  const {\n    resid,\n    resourcedata,\n    setResourcedata,\n    setValidationMessage,\n    validationmessage,\n    setSaveActionMessage,\n    setDeleteMessage,\n    handleClick1,\n    employeeid,\n    setAddmsg,\n    setLoader,\n  } = props;\n  const [categorytype, setcategoryType] = useState([]);\n  const [buttonDisabled, setButtonDisabled] = useState(true);\n\n  const [effectivedate, setEffectiveDate] = useState();\n  const [entrydate, setEntryDate] = useState(new Date());\n  let entrydate1 = moment(entrydate).format(\"YYYY-MM-DD\");\n  const loggedUserId = localStorage.getItem(\"resId\");\n  const loggedUserName = localStorage.getItem(\"resName\");\n  const [clicked, setClicked] = useState(false);\n  const [saveCliked, setSaveClicked] = useState(true);\n  const [cancelClicked, setCancelClicked] = useState(true);\n  const [deletePopup, setDeletePopup] = useState(false);\n  const [checkboxenable, setCheckboxEnable] = useState(false);\n  const [deleteid, setDeleteId] = useState(\"\");\n  const [isAdding, setIsAdding] = useState(false);\n  const [editeddata, setEditedData] = useState({});\n  const [check, setCheck] = useState(false);\n  const today = new Date();\n  const lastFriday = new Date(\n    today.getTime() - ((today.getDay() + 2) % 7) * 24 * 60 * 60 * 1000\n  );\n  const previousFriday = new Date(\n    lastFriday.getTime() - 7 * 24 * 60 * 60 * 1000\n  );\n  let minDate = new Date(today.getTime() - 7 * 24 * 60 * 60 * 1000);\n\n  for (let i = 1; i < 7; i++) {\n    const date = new Date(today.getTime() - i * 24 * 60 * 60 * 1000);\n    if (date < minDate) {\n      minDate = date;\n    }\n  }\n  const initialValues = {\n    created_dt: \"\",\n    entryby: \"\",\n    completed_dt: \"\",\n    effective_dt: \"\",\n    comments: \"\",\n    lkup_name: \"\",\n  };\n  const [formData, setFormData] = useState(initialValues);\n  useEffect(() => {}, [formData]);\n  const getcategorytype = () => {\n    setLoader(true);\n    axios\n      .get(baseUrl + `/fullfilmentms/resourceoverview/actiontypesbillable`)\n      .then((Response) => {\n        let type = [];\n        let data = Response.data;\n        data.length > 0 &&\n          data.forEach((e) => {\n            let TypeObj = {\n              label: e.lkup_name,\n              value: e.id,\n            };\n            type.push(TypeObj);\n          });\n        setcategoryType(data);\n        setLoader(false);\n      })\n      .catch((error) => console.log(error));\n  };\n  useEffect(() => {\n    getcategorytype();\n  }, []);\n  const removeFirstRowIfEmpty = (prod) => {\n    Object.keys(prod).forEach((d) => {\n      if ([\"\", null, undefined, \" \"].includes(prod[d])) {\n        setResourcedata(resourcedata.slice(1));\n        setClicked((prev) => !prev);\n        return;\n      }\n    });\n  };\n  let sideArrow = document.getElementsByClassName(\n    \"p-paginator-next p-paginator-element p-link\"\n  );\n  let sideDoubleArrow = document.getElementsByClassName(\n    \"p-paginator-last p-paginator-element p-link\"\n  );\n  const componentRef = useRef(null);\n\n  useEffect(() => {\n    let prod = resourcedata[0];\n    sideArrow[0]?.addEventListener(\"click\", function () {\n      removeFirstRowIfEmpty(prod);\n    });\n\n    sideDoubleArrow[0]?.addEventListener(\"click\", function () {\n      removeFirstRowIfEmpty(prod);\n    });\n    if (resourcedata[0]?.comments == \"\") {\n      const icon = document.getElementsByClassName(\n        \"p-row-editor-init p-link\"\n      )[0];\n      icon.setAttribute(\"title\", \"Edit selected row\");\n      icon.click();\n      setTimeout(() => {\n        const saveIcon = document.getElementsByClassName(\n          \"p-row-editor-save p-link\"\n        )[0];\n        saveIcon.setAttribute(\"title\", \"Save row\");\n        const cancelIcon = document.getElementsByClassName(\n          \"p-row-editor-cancel p-link\"\n        )[0];\n        cancelIcon.setAttribute(\"title\", \"Cancel row editing\");\n        cancelIcon?.addEventListener(\n          \"click\",\n          function (e) {\n            if (resourcedata[0]?.comments == \"\") {\n              setResourcedata(resourcedata.slice(1, resourcedata.length));\n              setButtonDisabled(true);\n              setClicked(false);\n              setValidationMessage(false);\n              componentRef.current.forceUpdate();\n            }\n          },\n          true\n        );\n      }, 200);\n    }\n  }, [resourcedata]);\n\n  const Reset = () => {\n    setValidationMessage(false);\n\n    document.getElementsByClassName(\"p-row-editor-cancel p-link\")[0]?.click();\n    setClicked(false);\n    setCancelClicked(true);\n    setSaveClicked(true);\n  };\n  const Save = () => {\n    document\n      .getElementsByClassName(\"p-row-editor-save-icon pi pi-fw pi-check\")[0]\n      ?.click();\n    EditedData();\n    setCancelClicked(true);\n    setSaveClicked(true);\n    setClicked(false);\n    if (check == true) {\n      EditedData(editeddata);\n    }\n  };\n\n  const CategoryBodyTemplate = (rowData) => {\n    return (\n      <>\n        <select\n          id=\"lkup_name\"\n          className=\"cancel\"\n          name=\"lkup_name\"\n          onChange={(e) => {\n            rowData.editorCallback(e.target.value);\n            categorytype.map((a) => {\n              if (a.id == e.target.value) {\n                rowData[\"rowData\"][\"lkup_name\"] = a.lkup_name;\n                rowData[\"rowData\"][\"type_id\"] = e.target.value;\n              }\n            });\n          }}\n        >\n          {categorytype?.map((Item, index) => (\n            <option\n              key={index}\n              value={Item.id}\n              selected={Item.id == rowData.rowData.type_id ? true : false}\n            >\n              {Item.lkup_name}\n            </option>\n          ))}\n        </select>\n      </>\n    );\n  };\n  const onRowEditComplete = (e) => {\n    let _resourcedata = [...resourcedata]; // Make a copy of the current state variable\n    let { newData, index } = e;\n    _resourcedata[index] = newData;\n    setResourcedata(_resourcedata);\n    postData(e.newData);\n    setClicked(true);\n  };\n\n  const postData = (rowData, e) => {\n    // console.log(\"inline179-----------------------\");\n    // let adddata = document.getElementsByClassName(\"error\");\n    // for (let i = 0; i < adddata.length; i++) {\n    //   if (\n    //     rowData.comments == \"\" ||\n    //     rowData.comments == null ||\n    //     rowData.effective_dt == \"\" ||\n    //     adddata[i].value === \"\" ||\n    //     adddata[i].value === \"null\" ||\n    //     adddata[i].value === \"All\" ||\n    //     adddata[i].value === undefined\n    //   ) {\n    //     // adddata[i].classList.add(\"error-block\");\n    //     setValidationMessage(true);\n    //     // console.log(\"inline193-----------------------\");\n\n    //     // classList.add(\"error-block\");\n    //   } else {\n    //     adddata[i].classList.remove(\"error-block\");\n    //     // classList.remove(\"error-block\")\n    //     console.log(\"inline199-----------------------\");\n    //   }\n    // }\n\n    if (\n      rowData.comments == \"\" ||\n      rowData.effective_dt == \"Invalid date\" ||\n      rowData.effective_dt == \"\"\n    ) {\n      console.log(\"inline208-----------------------\");\n\n      setValidationMessage(true);\n    } else {\n      console.log(rowData.comments == \"\" + \"inline-210-----------------------\");\n\n      axios({\n        method: \"post\",\n        url: baseUrl + `/fullfilmentms/resourceoverview/UpdateActiontableitems`,\n        data: {\n          id: null,\n          created_dt: rowData.created_dt,\n          created_by: parseInt(loggedUserId),\n          resource_id: resid,\n          typ_category_id: parseInt(\n            rowData.type_id == null ? 831 : rowData.type_id\n          ),\n          effective_dt: moment(rowData.effective_dt).format(\"YYYY-MM-DD\"),\n          completed_dt: null,\n          comments: rowData.comments,\n        },\n      })\n        .then((response) => {\n          setSaveActionMessage(true);\n          setTimeout(() => {\n            setSaveActionMessage(false);\n          }, 3000);\n          setAddmsg(true);\n          setTimeout(() => {\n            setAddmsg(false);\n          }, 3000);\n          setTimeout(() => {\n            setLoader(false);\n          }, 1000);\n\n          handleClick1(employeeid);\n          setCancelClicked(true);\n          setSaveClicked(true);\n          setButtonDisabled(true);\n          setClicked(false);\n          setValidationMessage(false);\n        })\n        .catch((error) => {\n          console.log(error);\n        });\n    }\n  };\n  const EditedData = (rowData) => {\n    if (\n      rowData.comments == \"\" ||\n      rowData.effective_dt == \"Invalid date\" ||\n      rowData.effective_dt == \"\"\n    ) {\n      console.log(\"inline208-----------------------\");\n\n      setValidationMessage(true);\n    } else {\n      axios({\n        method: \"post\",\n        url: baseUrl + `/fullfilmentms/resourceoverview/UpdateActiontableitems`,\n        data: {\n          id: rowData?.id,\n          created_dt: moment(rowData?.created_dt).format(\"DD-MMM-YYYY\"),\n          created_by: parseInt(loggedUserId),\n          resource_id: resid,\n          typ_category_id:\n            parseInt(rowData?.lkup_id) == null\n              ? 831\n              : parseInt(rowData?.lkup_id),\n          effective_dt: moment(rowData?.effective_dt).format(\"DD-MMM-YYYY\"),\n          completed_dt: entrydate1,\n          comments: rowData?.comments,\n        },\n      })\n        .then((res) => {\n          handleClick1(employeeid);\n          setValidationMessage(false);\n          setCancelClicked(false);\n        })\n        .catch((error) => console.log(error));\n    }\n  };\n  const addHandler = () => {\n    let daa = document.getElementsByClassName(\n      \"p-paginator-first p-paginator-element p-link\"\n    )[0];\n\n    daa.click();\n\n    if (!clicked) {\n      setClicked(true);\n      setButtonDisabled(false);\n    }\n    const data = {\n      completed_dt: \"\",\n      created_dt: moment(new Date()).format(\"DD-MMM-YYYY\"),\n      // created_dt: \"\",\n      entryby: loggedUserName,\n      effective_dt: \"\",\n      lkup_name: \"\",\n      comments: \"\",\n    };\n    let dt = [];\n    dt.push(data);\n    setResourcedata([...dt, ...resourcedata]);\n    setClicked(true);\n    setCancelClicked(false);\n    setSaveClicked(false);\n  };\n\n  const setDatePicker = (resourcedata, options, rowData) => {\n    return (\n      // <div title={resourcedata.effective_dt}>\n      <DatePicker\n        className={`error ${\n          validationmessage && !resourcedata.rowData.effective_dt\n            ? \"error-block\"\n            : \"\"\n        }`}\n        name=\"effective_dt\"\n        selected={effectivedate}\n        id=\"effective_dt\"\n        value={resourcedata.effective_dt}\n        minDate={minDate}\n        showMonthDropdown\n        showYearDropdown\n        dropdownMode=\"select\"\n        dateFormat=\"dd-MMM-yyyy\"\n        onChange={(e) => {\n          resourcedata.editorCallback(moment(e).format(\"DD-MMM-yyyy\")),\n            setFormData((prev) => ({\n              ...prev,\n              [\"effective_dt\"]: moment(e).format(\"yyyy-MM-DD\"),\n            }));\n          setEffectiveDate(e);\n        }}\n        onKeyDown={(e) => {\n          e.preventDefault();\n        }}\n      />\n      // </div>\n    );\n  };\n\n  const commentstextfiled = (resourcedata) => {\n    return (\n      <>\n        <div>\n          <input\n            className={`error ${\n              validationmessage && !resourcedata.rowData.comments\n                ? \"error-block\"\n                : \"\"\n            }`}\n            type=\"text\"\n            id=\"comments\"\n            name=\"comments\"\n            value={resourcedata.comments}\n            onChange={(e) => {\n              resourcedata.editorCallback(e.target.value);\n            }}\n          />\n        </div>\n      </>\n    );\n  };\n\n  const renderRowActions = (rowData) => {\n    const cleanedEntryBy = rowData.entryby.split(/\\s+/).join(\" \");\n    console.log(loggedUserName == cleanedEntryBy);\n    return (\n      <div>\n        {loggedUserName == cleanedEntryBy &&\n        rowData.completed_dt == \"\" &&\n        rowData.effective_dt !== \"\" ? (\n          <label cursor=\"pointer\">\n            <input\n              type=\"checkbox\"\n              cursor=\"pointer\"\n              onClick={(e) => {\n                const isChecked = e.target.checked;\n                setCheck(isChecked);\n                setSaveClicked(check ? true : false);\n                setEditedData(rowData);\n                setCancelClicked(check ? true : false);\n                setClicked(check ? false : true);\n              }}\n              selection={rowData}\n              onSelectionChange={(e) => rowData(e.value)}\n            />{\" \"}\n            &nbsp;\n            <AiFillDelete\n              color=\"orange\"\n              cursor=\"pointer\"\n              onClick={() => {\n                setDeletePopup(true);\n                setDeleteId(rowData.id);\n              }}\n            />\n          </label>\n        ) : (\n          \"\"\n        )}\n      </div>\n    );\n  };\n\n  const DeleteItems = () => {\n    axios({\n      method: \"delete\",\n      url:\n        baseUrl +\n        `/fullfilmentms/resourceoverview/deleteActionDetails?id=${deleteid}`,\n    }).then((error) => {\n      setDeletePopup(false);\n      setDeleteMessage(true);\n      setTimeout(() => {\n        setDeleteMessage(false);\n      }, 3000);\n      handleClick1(employeeid);\n    });\n  };\n\n  function ResourceOverviewDeletePopup(props) {\n    const { deletePopup, setDeletePopup } = props;\n    return (\n      <div>\n        <CModal\n          visible={deletePopup}\n          size=\"xs\"\n          className=\"ui-dialog\"\n          onClose={() => setDeletePopup(false)}\n        >\n          <CModalHeader className=\"\">\n            <CModalTitle>\n              <span className=\"\">Delete Action Item</span>\n            </CModalTitle>\n          </CModalHeader>\n          <CModalBody>\n            <h6>Are you sure you want to delete Action Item ?</h6>\n            <div className=\"btn-container center my-2\">\n              <button\n                type=\"delete\"\n                className=\"btn btn-primary\"\n                onClick={() => {\n                  DeleteItems();\n                }}\n              >\n                <AiFillDelete /> Delete{\" \"}\n              </button>{\" \"}\n              &nbsp; &nbsp;\n              <button\n                type=\"button\"\n                className=\"btn btn-secondary\"\n                onClick={() => {\n                  setDeletePopup(false);\n                }}\n              >\n                {\" \"}\n                <ImCross fontSize={\"11px\"} /> Cancel{\" \"}\n              </button>\n            </div>\n          </CModalBody>\n        </CModal>\n      </div>\n    );\n  }\n  return (\n    <div className=\"p-fluid  mb-2 darkHeader\">\n      <DataTable\n        className=\"primeReactDataTable eventsTable\"\n        value={resourcedata}\n        editMode=\"row\"\n        showGridlines\n        emptyMessage=\"No Records To View\"\n        scrollDirection=\"both\"\n        paginator\n        rows={10}\n        tableStyle={{ minWidth: \"auto\", width: \"auto\" }}\n        onRowEditComplete={onRowEditComplete}\n        paginatorTemplate=\"RowsPerPageDropdown FirstPageLink PrevPageLink CurrentPageReport NextPageLink LastPageLink\"\n        currentPageReportTemplate=\"{first} to {last} of {totalRecords}\"\n        rowsPerPageOptions={[10, 25, 50]} //------------->\n      >\n        <Column\n          field=\"created_dt\"\n          title=\"created_dt\"\n          header=\"Entry Date\"\n          sortable\n          style={{ width: \"30px\" }}\n          body={(rowData) => (\n            <div style={{ textAlign: \"center\" }}>\n              {moment(rowData.created_dt).format(\"DD-MMM-YYYY\")}\n            </div>\n          )}\n        />\n        <Column field=\"entryby\" header=\"Entry By\" sortable />\n        <Column\n          field=\"lkup_name\"\n          header=\"Category\"\n          sortable\n          filter={true}\n          editor={(options) => CategoryBodyTemplate(options)}\n        />\n        <Column\n          field=\"effective_dt\"\n          id=\"effective_dt\"\n          header=\"Effective Date\"\n          editor={(options) => setDatePicker(options)}\n          sortable\n          style={{ width: \"10px\" }}\n          filter={true}\n          body={(rowData) => (\n            <div style={{ textAlign: \"center\" }}>\n              {moment(rowData.effective_dt).format(\"DD-MMM-YYYY\")}\n            </div>\n          )}\n          filterMatchMode=\"custom\"\n          filterFunction={(value, filter) => {\n            if (filter === null || filter === undefined) {\n              return true;\n            }\n            if (filter.operator === \"lte\") {\n              return new Date(value) <= new Date(filter.value);\n            } else if (filter.operator === \"gte\") {\n              return new Date(value) >= new Date(filter.value);\n            } else if (value === \"equals\") {\n              return (\n                new Date(value).getTime() === new Date(filter.value).getTime()\n              );\n            } else {\n              return true;\n            }\n          }}\n          filterElement={\n            <div className=\"p-field p-grid\">\n              <div className=\"p-col-12 p-md-10\">\n                <Calendar\n                  id=\"event_date\"\n                  placeholder=\"Select a date\"\n                  showIcon={true}\n                  inputClassName=\"p-ml-2\"\n                  selectionMode=\"range\"\n                  dateFormat=\"mm/dd/yy\"\n                  monthNavigator={true}\n                  yearNavigator={true}\n                  yearRange=\"2000:2030\"\n                  showButtonBar={true}\n                  className=\"p-datepicker\"\n                />\n              </div>\n            </div>\n          }\n        />\n        <Column\n          field=\"completed_dt\"\n          header=\"Completed Date\"\n          sortable\n          style={{ width: \"30px\" }}\n          body={(rowData) => (\n            <div style={{ textAlign: \"center\" }}>\n              {rowData.completed_dt\n                ? moment(rowData.completed_dt).format(\"DD-MMM-YYYY\")\n                : \"\"}\n            </div>\n          )}\n\n          // Decrease the width here\n        />\n        <Column\n          field=\"comments\"\n          sortable\n          header=\"Comments\"\n          editor={(options) => commentstextfiled(options)}\n          filter={true}\n          style={{ width: \"270px\" }}\n          body={(rowData) => (\n            <span\n              title={rowData.comments}\n              style={{ textAlign: \"left\", display: \"block\" }}\n              className=\"ellipsis\"\n            >\n              {rowData.comments}\n            </span>\n          )}\n          filterFunction={(value, filter) => {\n            if (!filter) {\n              return true;\n            }\n            const filterOptions = filter.split(\" \");\n            return filterOptions.every((option) => {\n              if (option.startsWith && !value.startsWith(option.startsWith)) {\n                return false;\n              }\n              if (option.endsWith && !value.endsWith(option.endsWith)) {\n                return false;\n              }\n              if (option.contains && !value.includes(option.contains)) {\n                return false;\n              }\n              return true;\n            });\n          }}\n        />\n        <Column\n          style={{ display: \"none\", width: \"10px\" }}\n          rowEditor\n          header=\"Action\"\n          headerStyle={{ width: \"10%\", minWidth: \"8rem\" }}\n          bodyStyle={{ textAlign: \"center\" }}\n          sortable\n        />\n        <Column\n          body={renderRowActions}\n          header=\"Action\"\n          bodyStyle={{ textAlign: \"center\" }}\n          sortable\n        ></Column>\n        {/* // )} */}\n      </DataTable>\n      <div className=\"form-group col-md-2 btn-container-events center my-3\">\n        <button\n          className=\"btn btn-primary\"\n          disabled={clicked}\n          onClick={() => {\n            addHandler();\n          }}\n        >\n          {\" \"}\n          <FaPlus /> Add\n        </button>{\" \"}\n        <button\n          className=\"btn btn-primary\"\n          disabled={buttonDisabled}\n          variant=\"contained\"\n          onClick={() => {\n            Save();\n            setEffectiveDate();\n          }}\n        >\n          <FaSave /> Save\n        </button>{\" \"}\n        <button\n          className=\"btn btn-primary\"\n          disabled={buttonDisabled}\n          onClick={() => {\n            Reset();\n          }}\n          title={\"Cancel\"}\n          size={\"1.4em\"}\n        >\n          <ImCross fontSize={\"11px\"} /> Cancel\n        </button>\n      </div>\n\n      {deletePopup ? (\n        <ResourceOverviewDeletePopup\n          deletePopup={deletePopup}\n          setDeletePopup={setDeletePopup}\n        />\n      ) : (\n        \"\"\n      )}\n    </div>\n  );\n}\nexport default BenchReportEditableTable;\n","import React, { useEffect, useRef, useState } from \"react\";\nimport { FilterMatchMode, FilterOperator } from \"primereact/api\";\nimport { DataTable } from \"primereact/datatable\";\nimport { InputText } from \"primereact/inputtext\";\nimport ExcelJS from \"exceljs\";\n\nfunction BenchReportSecondtTable(props) {\n  const {\n    data,\n    rows,\n    excelData,\n    col,\n    headerdatagroup,\n    linkColumns,\n    linkColumnsRoutes,\n    dynamicColumns,\n    headerData,\n    setHeaderData,\n    exportData,\n    customFilters,\n    customFilterValue,\n    setCustomFilterValue,\n    fileName,\n  } = props;\n  const [mainData, setMainData] = useState([]);\n  const [bodyData, setBodyData] = useState([]);\n  const [exportColumns, setExportColumns] = useState([]);\n  const dt = useRef(null);\n  useEffect(() => {\n    setMainData(JSON.parse(JSON.stringify(data)));\n  }, [data]);\n\n  useEffect(() => {\n    if (mainData.length > 0) {\n      setHeaderData(mainData[0]);\n      setBodyData(mainData.splice(1));\n\n      let dtt = [];\n      let headDt = mainData[0];\n\n      Object.keys(headDt).forEach((d) => {\n        dtt.push({ title: d, dataKey: headDt[d] });\n      });\n\n      setExportColumns(dtt);\n    }\n  }, [mainData]);\n\n  const filtersData = {\n    contains: { value: null, matchMode: FilterMatchMode.CONTAINS },\n  };\n\n  const [filters1, setFilters1] = useState({\n    global: filtersData[\"contains\"],\n  });\n\n  useEffect(() => {\n    setFilters1({\n      global: filtersData[\"contains\"],\n    });\n  }, [headerData]);\n  const [globalFilterValue1, setGlobalFilterValue1] = useState(\"\");\n\n  // const clearFilter1 = () => {\n  //   initFilters1();\n  // };\n\n  const initFilters1 = () => {\n    setGlobalFilterValue1(\"\");\n  };\n\n  const onGlobalFilterChange1 = (e) => {\n    const value = e.target.value;\n    let _filters1 = { ...filters1 };\n    _filters1[\"global\"].value = value;\n    setFilters1(_filters1);\n    setGlobalFilterValue1(value);\n  };\n\n  const RenderCustomFilters = () => {\n    let cstFtlrs = customFilters;\n\n    switch (cstFtlrs[\"type\"]) {\n      case \"select\":\n        return (\n          <select\n            id={cstFtlrs[\"id\"]}\n            onChange={(e) => {\n              setCustomFilterValue(e.target.value);\n            }}\n          >\n            {Object.keys(cstFtlrs[\"data\"]).map((d) => {\n              return (\n                <option\n                  selected={customFilterValue == d ? true : false}\n                  value={d}\n                >\n                  {cstFtlrs[\"data\"][d]}\n                </option>\n              );\n            })}\n          </select>\n        );\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  // const exportExcel = () => {\n  //   import(\"xlsx\").then((xlsx) => {\n  //     const headers = Object.keys(data[0]);\n  //     const uniqueHeaders = [...new Set(headers)];\n  //     const headerOrder = [\n  //       \"empId\",\n  //       \"resource\",\n  //       \"designation\",\n  //       \"department\",\n  //       \"LoB\",\n  //       \"cadre_code\",\n  //       \"skillGrps\",\n  //       \"Skill\",\n  //       \"emp_citizenship\",\n  //       \"projected\",\n  //       \"status\",\n  //       \"resAllocType\",\n  //       \"actionDt\",\n  //       \"actionEffDt\",\n  //       \"actionItem\",\n  //       \"supervisor\",\n  //       \"aging\",\n  //       \"customer\",\n  //       \"nectCap\",\n  //       \"billHrs\",\n  //       \"availHrs\",\n  //       \"nbHrs\",\n  //     ];\n  //     const customHeadersMap = {\n  //       empId: \"Emp Id\",\n  //       LoB: \"LoB Category\",\n  //       cadre_code: \"Cadre\",\n  //       skillGrps: \"SkillGroup\",\n  //       Skill: \"Skills\",\n  //       emp_citizenship: \"Citizenship\",\n  //       projected: \"Availability %\",\n  //       actionDt: \"Action Item Date\",\n  //       actionEffDt: \"Action Item Effort Date\",\n  //       customer: \"Customer\",\n  //       nectCap: \"Net Capacity Hrs\",\n  //       billHrs: \"Billable Hrs\",\n  //       availHrs: \"Available Hrs\",\n  //       nbHrs: \"Non Billable Hrs\",\n  //     };\n  //     const worksheetData = data.map((item) =>\n  //       headerOrder.map((header) => {\n  //         const value = item[header];\n  //         const headerLabel = customHeadersMap[header] || header;\n  //         if (header === \"revenue\" && typeof value === \"string\") {\n  //           const floatValue = parseFloat(value);\n  //           return isNaN(floatValue) ? value : floatValue.toLocaleString();\n  //         }\n  //         if (header === \"scheduledDate\" && moment(value).isValid()) {\n  //           return moment(value).format(\"DD-MMM-YYYY\");\n  //         } else {\n  //           return value;\n  //         }\n  //       })\n  //     );\n  //     const dataRows = worksheetData.map((item) => Object.values(item));\n  //     const workbook = new ExcelJS.Workbook();\n  //     const worksheet = workbook.addWorksheet(fileName);\n  //     // Set custom headers in the worksheet\n  //     headerOrder.forEach((header, index) => {\n  //       const headerLabel = customHeadersMap[header] || header;\n  //       worksheet.getCell(1, index + 1).value = headerLabel;\n  //     });\n  //     for (let i = 0; i < dataRows.length; i++) {\n  //       const row = worksheet.addRow(dataRows[i]);\n  //     }\n\n  //     const boldRow = [1];\n  //     boldRow.forEach((index) => {\n  //       const row = worksheet.getRow(index);\n  //       row.font = { bold: true };\n  //     });\n  //     workbook.xlsx.writeBuffer().then((buffer) => {\n  //       const blob = new Blob([buffer], {\n  //         type: \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",\n  //       });\n  //       saveAs(blob, fileName);\n  //     });\n  //   });\n  // };\n  const exportExcel = () => {\n    import(\"xlsx\").then((xlsx) => {\n      const headers = Object.keys(excelData[0]);\n      const uniqueHeaders = [...new Set(headers)];\n      const headerOrder = [\n        \"empId\",\n        \"resource\",\n        \"designation\",\n        \"department\",\n        \"LoB\",\n        \"cadre_code\",\n        \"skillGrps\",\n        \"Skill\",\n        \"emp_citizenship\",\n        \"projected\",\n        \"status\", // Ensure \"status\" is in the headerOrder array\n        \"resAllocType\",\n        \"actionDt\",\n        \"actionEffDt\",\n        \"actionItem\",\n        \"supervisor\",\n        \"aging\",\n        \"customer\",\n        \"nectCap\",\n        \"billHrs\",\n        \"availHrs\",\n        \"nbHrs\",\n      ];\n\n      const customHeadersMap = {\n        empId: \"Emp Id\",\n        LoB: \"LoB Category\",\n        cadre_code: \"Cadre\",\n        skillGrps: \"SkillGroup\",\n        Skill: \"Skills\",\n        emp_citizenship: \"Citizenship\",\n        projected: \"Availability %\",\n        status: \"Status\",\n        resAllocType: \"Resource Allocation type\",\n        actionDt: \"Action Item Date\",\n        actionEffDt: \"Action Item Effort Date\",\n        customer: \"Customer\",\n        nectCap: \"Net Capacity Hrs\",\n        billHrs: \"Billable Hrs\",\n        availHrs: \"Available Hrs\",\n        nbHrs: \"Non Billable Hrs\",\n      };\n      const worksheetData = excelData.map((item) =>\n        headerOrder.map((header) => {\n          const value = item[header];\n          const headerLabel = customHeadersMap[header] || header;\n\n          if (header === \"revenue\" && typeof value === \"string\") {\n            const floatValue = parseFloat(value);\n            return isNaN(floatValue) ? value : floatValue.toLocaleString();\n          }\n          if (header === \"scheduledDate\" && moment(value).isValid()) {\n            return moment(value).format(\"DD-MMM-YYYY\");\n          } else {\n            return value;\n          }\n        })\n      );\n      const dataRows = worksheetData.map((item) => Object.values(item));\n      const workbook = new ExcelJS.Workbook();\n      const worksheet = workbook.addWorksheet(fileName);\n\n      // Skip the initial header row\n      for (let i = 0; i < dataRows.length; i++) {\n        const row = worksheet.addRow(dataRows[i]);\n      }\n\n      const boldRow = [1]; // Bold the new header row (2)\n      boldRow.forEach((index) => {\n        const row = worksheet.getRow(index);\n        row.font = { bold: true };\n      });\n      workbook.xlsx.writeBuffer().then((buffer) => {\n        const blob = new Blob([buffer], {\n          type: \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",\n        });\n        saveAs(blob, fileName);\n      });\n    });\n  };\n\n  const exportPdf = () => {\n    import(\"jspdf\").then((jsPDF) => {\n      import(\"jspdf-autotable\").then(() => {\n        const doc = new jsPDF.default(0, 0);\n        doc.autoTable(exportColumns, data);\n        doc.save(fileName + \".pdf\");\n      });\n    });\n  };\n  // ... Your existing code\n\n  const printTable = () => {\n    openPrintWindow();\n  };\n\n  const openPrintWindow = () => {\n    const printWindow = window.open(\"\", \"_blank\");\n    if (!printWindow) return;\n\n    const tableContent = generatePrintTableContent();\n\n    printWindow.document.write(`\n    <html>\n      <head>\n        <title>Print Table</title>\n        <link rel=\"stylesheet\" type=\"text/css\" href=\"path-to-your-print-styles.css\">\n      </head>\n      <body>\n        <h1>PPM :: VMG Search</h1>\n        ${tableContent}\n      </body>\n    </html>\n  `);\n\n    printWindow.document.close();\n    printWindow.print();\n  };\n\n  const generatePrintTableContent = () => {\n    // Use the 'products' state or any other data you want to print\n    const tableRows = data.map(\n      (data) =>\n        `<tr>\n      <td>${data.vendorId}</td>\n      <td>${data.vendor_name}</td>\n      <td>${data.contactName}</td>\n      <td>${data.phone}</td>\n      <td>${data.email}</td>\n      <td>${data.contryName}</td>\n      <td>${data.nxtRvwDt}</td>\n      <td>${data.signedDt}</td>\n      <td>${data.expireDt}</td>\n      <td>${data.website}</td>\n    </tr>`\n    );\n\n    return `\n    <table>\n      <thead>\n        <tr>\n\n        </tr>\n      </thead>\n      <tbody>\n        ${tableRows.join(\"\")}\n      </tbody>\n    </table>\n  `;\n  };\n\n  // ... Your existing code\n\n  const header = (\n    <div className=\"flex align-items-center justify-content-end gap-2\">\n      {/* ... Your existing export options ... */}\n      {exportData?.includes(\"PRINT\") && (\n        <span\n          className=\"pi pi-print print\"\n          onClick={printTable}\n          title=\"Print\"\n        />\n      )}\n    </div>\n  );\n\n  // ... Your existing code\n\n  const renderHeader1 = () => {\n    return (\n      <div className=\"flex  flex-row-reverse\">\n        {customFilters != undefined && (\n          <span>\n            <RenderCustomFilters />\n          </span>\n        )}\n\n        <div className=\"exportBtn ml-3\">\n          {exportData?.includes(\"XLS\") && (\n            <span\n              className=\"pi pi-file-excel excel\"\n              onClick={exportExcel}\n              title=\"Export to Excel\"\n            />\n          )}\n        </div>\n        <span className=\"p-input-icon-left tableGsearch\">\n          <i className=\"pi pi-search\" />\n          <InputText\n            defaultValue={globalFilterValue1}\n            onChange={onGlobalFilterChange1}\n            placeholder=\"Keyword Search\"\n          />\n        </span>\n      </div>\n    );\n  };\n  const header1 = renderHeader1();\n  return (\n    <div>\n      <div className=\"card darkHeader\">\n        {Object.keys(headerData).length > 0 && (\n          <DataTable\n            paginatorTemplate=\"RowsPerPageDropdown FirstPageLink PrevPageLink CurrentPageReport NextPageLink LastPageLink\"\n            currentPageReportTemplate=\"{first} to {last} of {totalRecords}\"\n            rowsPerPageOptions={[10, 25, 50]} //------------->\n            value={bodyData}\n            paginator\n            showGridlines\n            rows={rows}\n            dataKey=\"id\"\n            filters={filters1}\n            responsiveLayout=\"scroll\"\n            header={header1}\n            emptyMessage={<center>No Records found.</center>}\n            ref={(el) => {\n              dt.current = el;\n            }}\n            className=\"primeReactDataTable \" //// customerEngament\n          >\n            {/* <Column header={headerdatagroup} colSpan={col} /> */}\n\n            {dynamicColumns}\n          </DataTable>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default BenchReportSecondtTable;\n","import React, { useRef, useState } from \"react\";\nimport { MultiSelect } from \"react-multi-select-component\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport {\n  FaChevronCircleDown,\n  FaChevronCircleUp,\n  FaSearch,\n  FaCheck,\n  FaCaretDown,\n} from \"react-icons/fa\";\nimport { CCollapse } from \"@coreui/react\";\n// import fte_notice from \"../../assets/images/empstatusIcon/fte_notice.png\";\nimport { useEffect } from \"react\";\nimport axios from \"axios\";\nimport { environment } from \"../../environments/environment\";\nimport moment from \"moment\";\nimport CellRendererPrimeReactDataTable from \"../PrimeReactTableComponent/CellRendererPrimeReactDataTable\";\nimport { Column } from \"primereact/column\";\nimport BenchReportSummaryTable from \"./BenchReportSummaryTable\";\nimport Loader from \"../Loader/Loader\";\nimport { useLocation } from \"react-router-dom\";\nimport SavedSearchGlobal from \"../PrimeReactTableComponent/SavedSearchGlobal\";\nimport GlobalHelp from \"../PrimeReactTableComponent/GlobalHelp\";\nimport { BiCheck } from \"react-icons/bi\";\nimport fte_active from \"../../assets/images/empstatusIcon/fte_active.png\";\nimport fte_inactive from \"../../assets/images/empstatusIcon/fte_inactive.png\";\nimport fte_notice from \"../../assets/images/empstatusIcon/fte_notice.png\";\nimport subk_active from \"../../assets/images/empstatusIcon/subk_active.png\";\nimport subk_inactive from \"../../assets/images/empstatusIcon/subk_inactive.png\";\nimport subk_notice from \"../../assets/images/empstatusIcon/subk_notice.png\";\nimport { RiFileExcel2Line } from \"react-icons/ri\";\nimport GlobalValidation from \"../ValidationComponent/GlobalValidation\";\nimport ScreenBreadcrumbs from \"../Common/ScreenBreadcrumbs\";\nimport ErrorLogTable from \"../Administration/ErrorLogsTable\";\nimport { VscChecklist } from \"react-icons/vsc\";\nimport { GoPerson } from \"react-icons/go\";\nimport ResourceOverviewEditableTable from \"./ResourceOverviewEditableTable\";\nimport BenchReportEditableTable from \"./BenchReportEditableTable\";\nimport \"./BenchReport.scss\";\nimport { AiFillWarning } from \"react-icons/ai\";\nimport ExcelJS from \"exceljs\";\nimport BenchReportSecondtTable from \"./BenchReportSecondTable\";\n\nfunction BenchReport() {\n  const [startDate, setStartDate] = useState(new Date());\n  const [Addmsg, setAddmsg] = useState(false);\n  const loggedUserId = localStorage.getItem(\"resId\");\n  const loggedUser = loggedUserId;\n  const HelpPDFName = \"RMGBenchReport.pdf\";\n  const HelpHeader = \"Bench Report Help\";\n  let date1 = moment(startDate).format(\"yyyy-MM-DD\");\n  const [resourcedata, setResourcedata] = useState([]);\n  const [resid, setresid] = useState([]);\n  const [visible, setVisible] = useState(false);\n  const [cheveronIcon, setCheveronIcon] = useState(FaChevronCircleUp);\n  const [business, setBusiness] = useState([]);\n  const [selectedBusiness, setSelectedBusiness] = useState([]);\n  const [dispay, setDisplay] = useState(false);\n  const [checked, setChecked] = React.useState(false);\n  const [data, setData] = useState([]);\n  const [data1, setData1] = useState([]);\n  const [exportData, setExportData] = useState([]);\n  const [country, setCountry] = useState([]);\n  const [selectedCountry, setSelectedCountry] = useState([]);\n  const [saveactionmessage, setSaveActionMessage] = useState(false);\n  const [engCountry, setEngCountry] = useState([]);\n  const [setEngSelectCountry, setEngSelectedCountry] = useState([]);\n  const [searching, setsearching] = useState(false);\n  const [date, SetDate] = useState(getLastSaturday(new Date()));\n  const [previousSaturday, setPreviousSaturday] = useState(\n    getSaturdayOfPreviousWeek(date)\n  );\n\n  function getLastSaturday(date) {\n    const day = date.getDay();\n    const daysToSaturday = day === 6 ? 1 : day + 1;\n    const lastSaturday = new Date(date);\n    lastSaturday.setDate(date.getDate() - daysToSaturday);\n    return lastSaturday;\n  }\n  const [open, setOpen] = useState(false);\n  const [loaderState, setLoaderState] = useState(false);\n  const [deleteMessage, setDeleteMessage] = useState(false);\n  const [resourcname, setResourceName] = useState([]);\n  const [loader, setLoader] = useState(false);\n  const [linkColumns, setLinkColumns] = useState([]);\n  const [linkColumnsRoutes, setLinkColumnsRoutes] = useState([]);\n  const [displayTable, setDisplayTable] = useState([]);\n  const [tabHeaders, setTabHeaders] = useState([]);\n  const [headerData, setHeaderData] = useState([]);\n  const [bodyData, setBodyData] = useState([]);\n  const [typeid, setTypeID] = useState([]);\n  const [tableDisplay, setTableDisplay] = useState(false);\n  const [elementId, setElementId] = useState([]);\n  const [employeeid, setEmployeeId] = useState(\"\");\n  const [validationmessage, setValidationMessage] = useState(false);\n  const [validationmessagesum, setValidationMessagesum] = useState(false);\n\n  const pageurl = \"http://10.11.12.149:3000/#/rmg/bench\";\n  const page_Name = \"Bench Report\";\n  const location = useLocation();\n  const searchParams = new URLSearchParams(location.search);\n  const id = searchParams.get(\"id\");\n  const [editmsg, setEditAddmsg] = useState(false);\n  const [filterData, setFilterData] = useState([]);\n  const baseUrl = environment.baseUrl;\n  const abortController = useRef(null);\n  const handleAbort = () => {\n    abortController.current && abortController.current.abort();\n    setLoader(false);\n  };\n  const [heading, setHeading] = useState([]);\n  function getSaturdayOfPreviousWeek(selectedDate) {\n    const dayInMilliseconds = 1000 * 60 * 60 * 24;\n    const selectedDayOfWeek = selectedDate.getDay(); // Sunday: 0, Monday: 1, ..., Saturday: 6\n\n    // Calculate the number of days to subtract to reach the previous Saturday\n    const daysToSubtract = ((selectedDayOfWeek + 1) % 7) + 1;\n\n    // Calculate the milliseconds for the previous Saturday\n    const previousSaturdayMillis =\n      selectedDate.getTime() - daysToSubtract * dayInMilliseconds;\n\n    const previousSaturday = new Date(previousSaturdayMillis);\n    return previousSaturday;\n  }\n  useEffect(() => {\n    const displayTableCopyHead = displayTable;\n    const displayTableCopyBody = displayTable;\n\n    const headerData = displayTableCopyHead.slice(0, 2);\n    const bodyData = displayTableCopyBody.splice(2);\n\n    setTableHeader(headerData);\n    setTableBody(bodyData);\n  }, [displayTable]);\n  const [searchDataB, setSearchDataB] = useState(\n    \"170,211,123,82,168,207,212,18,213,49,149,208,243\"\n  );\n  const FilterData = () => {\n    axios({\n      method: \"get\",\n      url:\n        baseUrl +\n        `/dashboardsms/savedsearch/FiltersData?saved_search_id=${\n          id === null ? 0 : id\n        }`,\n    }).then(function (res) {\n      const getData = res.data;\n      setFilterData(getData);\n    });\n  };\n  const ref = useRef([]);\n\n  useEffect(() => {\n    FilterData();\n  }, []);\n\n  const [formData, setFormData] = useState({\n    BuIds: \"170,211,123,82,168,207,212,18,213,49,149,208,243\",\n    CountryIds: \"6,5,3,8,7,1,2,999\",\n    EngCountryIds: \"-1\",\n    FromDate: moment(date).format(\"yyyy-MM-DD\"),\n    Duration: \"1\",\n    sessKey: \"44524751691400245360\",\n    isExport: \"0\",\n    resType: \"all\",\n    isChecked: \"true\",\n  });\n  useEffect(() => {\n    setFormData(() => {\n      if (id != null) {\n        return {\n          BuIds: filterData.BuIds,\n          CountryIds: filterData.CountryIds,\n          EngCountryIds: filterData.EngCountryIds,\n          FromDate: filterData.FromDate,\n          Duration: filterData.Duration,\n          sessKey: filterData.sessKey,\n          isExport: filterData.isExport,\n          resType: filterData.resType,\n          isChecked: filterData.isChecked,\n        };\n      } else {\n        return {\n          BuIds: \"170,211,123,82,168,207,212,18,213,49,149,208,243\",\n          CountryIds: \"6,5,3,8,7,1,2,999\",\n          EngCountryIds: \"-1\",\n          FromDate: moment(date).format(\"yyyy-MM-DD\"),\n          Duration: \"1\",\n          sessKey: \"44524751691400245360\",\n          isExport: \"0\",\n          resType: \"all\",\n          isChecked: \"true\",\n        };\n      }\n    });\n  }, [filterData]);\n  useEffect(() => {\n    data1[0] && setHeaderData(JSON.parse(JSON.stringify(data1[0])));\n    let imp = [\"XLS\"];\n    setExportData(imp);\n  }, [data1]);\n  useEffect(() => {\n    if (id != null) {\n      const updatebusiness = business.filter((values) =>\n        formData.BuIds?.includes(values.value)\n      );\n\n      const updatereslocation = country.filter((values) =>\n        formData.CountryIds?.includes(values.value)\n      );\n\n      const updateengCountry = engCountry.filter((values) =>\n        formData.EngCountryIds?.includes(values.value)\n      );\n      setEngSelectedCountry(updateengCountry);\n      setSelectedCountry(updatereslocation);\n      setSelectedBusiness(updatebusiness);\n    }\n  }, [id, business, country, engCountry]);\n\n  useEffect(() => {\n    if (id != null) {\n      setTimeout(() => {\n        handleClick();\n      }, 3000);\n    }\n  }, [id, formData]);\n\n  const getBusinessUnit = () => {\n    axios\n      .get(baseUrl + `/CostMS/cost/getDepartments`)\n      .then((Response) => {\n        let departments = Response.data;\n        departments.push({ value: 0, label: \"Non-Revenue Units\" });\n\n        setBusiness(departments);\n        setSelectedBusiness(departments.filter((ele) => ele.value != 0));\n        let filteredDeptData = [];\n        departments.forEach((data) => {\n          if (data.value != 0) {\n            filteredDeptData.push(data.value);\n          }\n        });\n      })\n      .catch((error) => console.log(error));\n  };\n\n  const getCountries = () => {\n    axios\n      .get(baseUrl + `/CostMS/cost/getCountries`)\n      .then((Response) => {\n        let countries = [];\n        let data = Response.data;\n        data.push({ id: 0, country_name: \"<<Others>>\" });\n        data.length > 0 &&\n          data.forEach((e) => {\n            if (e.id !== 4) {\n              let countryObj = {\n                label: e.country_name,\n                value: e.id,\n              };\n\n              countries.push(countryObj);\n            }\n          });\n        setCountry(countries);\n        if (id == null) {\n          setSelectedCountry(countries);\n        }\n      })\n      .catch((error) => console.log(error));\n  };\n\n  const getEngCountries = () => {\n    axios\n      .get(baseUrl + `/CostMS/cost/getCountries`)\n      .then((Response) => {\n        let countries = [];\n        let data = Response.data;\n        data.push({ id: 0, country_name: \"<<Others>>\" });\n        data.length > 0 &&\n          data.forEach((e) => {\n            if (e.id !== 4) {\n              let countryObj = {\n                label: e.country_name,\n                value: e.id,\n              };\n              countries.push(countryObj);\n            }\n          });\n        setEngCountry(countries);\n        if (id == null) {\n          setEngSelectedCountry(countries);\n        }\n      })\n      .catch((error) => console.log(error));\n  };\n\n  const handleClick1 = (id) => {\n    setEmployeeId(id);\n    axios({\n      method: \"get\",\n      url:\n        baseUrl +\n        `/dashboardsms/allocationDashboard/getActionItemDetails?rid=${id}`,\n    }).then((response) => {\n      let GetData = response.data;\n      for (let i = 0; i < GetData.length; i++) {\n        GetData[i][\"completed_dt\"] =\n          GetData[i][\"completed_dt\"] == null\n            ? \"\"\n            : moment(GetData[i][\"completed_dt\"]).format(\"DD-MMM-YYYY\");\n\n        GetData[i][\"effective_dt\"] =\n          GetData[i][\"effective_dt\"] == null\n            ? \"\"\n            : moment(GetData[i][\"effective_dt\"]).format(\"DD-MMM-YYYY\");\n\n        GetData[i][\"created_dt\"] =\n          GetData[i][\"created_dt\"] == null\n            ? \"\"\n            : moment(GetData[i][\"created_dt\"]).format(\"DD-MMM-YYYY\");\n      }\n\n      setResourcedata(GetData);\n      window.scrollTo({ top: 1500, behavior: \"smooth\" });\n\n      setGraphKey1((prevKey) => prevKey + 1);\n      setValidationMessage(false);\n    });\n  };\n  const [excelData, setExcelData] = useState([]);\n  const getData = (temp, element) => {\n    const SummaryData = element.name;\n    setLoaderState(true);\n    let loaderTime = setTimeout(() => {\n      setLoader(true);\n    }, 2000);\n    let t = temp.a;\n    axios({\n      method: \"post\",\n      url: baseUrl + `/fullfilmentms/rolloffs/getBenchReportSummary`,\n      data: {\n        BuIds: temp.b,\n        CountryIds: \"-1\",\n        Typ: temp.a,\n        isExport: \"0\",\n        isChecked: formData.isChecked,\n        UserId: loggedUserId,\n      },\n    })\n      .then((response) => {\n        setLoader(false);\n        clearTimeout(loaderTime);\n        var response = response.data;\n        setHeading(\n          SummaryData +\n            \" -\" +\n            (headName == \"cogs\"\n              ? \" COGS\"\n              : headName == \"over\"\n              ? \" OVRH\"\n              : headName == \"total\"\n              ? \" Total Resources\"\n              : headName == \"fullAlloc\"\n              ? \" Fully Allocated Resources\"\n              : headName == \"bench\"\n              ? \" Complete Bench\"\n              : headName == \"noAlloc\"\n              ? \" No Allocation\"\n              : headName == \"nonDepl\"\n              ? \" Non Deployable\"\n              : headName == \"futAlloc\"\n              ? \" Future Allocated\"\n              : headName == \"blocked\"\n              ? \" Blocked Resources\"\n              : headName == \"backfill\"\n              ? \" Backfill\"\n              : headName == \"training\"\n              ? \" Training\"\n              : headName == \"compBench\"\n              ? \" Complete Bench\"\n              : headName == \"nBCat2\"\n              ? \" Non Billable (8 <= hrs < 20)\"\n              : headName == \"nBCat3\"\n              ? \" Non Billable (20 <= hrs < 40)\"\n              : headName == \"nBFTE\"\n              ? \" Non Billable (FTE)\"\n              : headName == \"nBTotal\"\n              ? \" Non Billable (Total)\"\n              : headName == \"pBCat1\"\n              ? \" Partially Billable (< 8 hrs)\"\n              : headName == \"pBCat2\"\n              ? \" Partially Billable (8 <= hrs < 20)\"\n              : headName == \"pBCat3\"\n              ? \" Partially Billable (20 <= hrs < 40)\"\n              : headName == \"pBFTE\"\n              ? \" Partially Billable (FTE)\"\n              : headName == \"pBTotal\"\n              ? \" Partially Billable (Total)\"\n              : headName == \"nBCat1\"\n              ? \" Non Billable (8 <= hrs < 20)\"\n              : headName == \"innovCat1\"\n              ? \" Innovation Billable (< 8 hrs)\"\n              : headName == \"innovCat2\"\n              ? \" Innovation Billable (8 <= hrs < 20)\"\n              : headName == \"innovCat3\"\n              ? \" Innovation Billable (20 <= hrs < 40)\"\n              : headName == \"innovFTE\"\n              ? \" Innovation Billable (FTE)\"\n              : headName == \"innovTotal\"\n              ? \" Innovation Billable (Total)\"\n              : \"\")\n        );\n        let Headerdata = [\n          {\n            empId: \"Emp. Id\",\n            resource: \"Resource\",\n            designation: \"Designation\",\n            department: \"Department\",\n            customer: \"Customer\",\n            LoB: \"LOB Category\",\n            cadre_code: \"Cadre\",\n            skillGrps: \"Skill Group\",\n            Skill: \"Skill\",\n            emp_citizenship: \"Citizenship\",\n            nectCap: \"Net Cap. Hrs\",\n            billHrs: \"Billable Hrs\",\n            availHrs: \"Available Hrs\",\n            projected: \"Availability%\",\n            aging: \"Ageing\",\n            nbHrs: \"Non Bill Hrs\",\n            supervisor: \"Supervisor\",\n            actionItem: \"Action Item\",\n            actionDt: \"Action Item Date\",\n            actionEffDt: \"Action Item Eff. Date\",\n            futureAllocDate: \"Future Alloc Date\",\n          },\n        ];\n        let ExcelHeaderdata = [\n          {\n            empId: \"Emp Id\",\n            resource: \"Resource\",\n            designation: \"Designation\",\n            department: \"Department\",\n            LoB: \"LoB Category\",\n            cadre_code: \"Cadre\",\n            skillGrps: \"Skill Group\",\n            Skill: \"Skill\",\n            emp_citizenship: \"Citizenship\",\n            projected: \"Availability%\",\n            status: \"Status\",\n            resAllocType: \"Res.Alloc. Type\",\n            actionDt: \"Action Item Date\",\n            actionEffDt: \"Action Item Effective Date\",\n            actionItem: \"Action Item\",\n            supervisor: \"Supervisor\",\n            aging: \"Ageing\",\n            customer: \"Customer\",\n            nectCap: \"Net Cap. Hrs\",\n            billHrs: \"Billable Hrs\",\n            availHrs: \"Available Hrs\",\n            nbHrs: \"Non Bill Hrs\",\n            // futureAllocDate: \"Future Alloc Date\",\n          },\n        ];\n        if (\n          t !== \"bench\" &&\n          t !== \"noAlloc_count\" &&\n          t != \"nonDepl_count\" &&\n          t != \"futAlloc_count\" &&\n          t != \"blocked_count\" &&\n          t != \"backfill_count\" &&\n          t != \"training_count\" &&\n          t != \"compBench_count\"\n        ) {\n          // Remove \"Aging\" and \"futureAllocDate\" properties from the first object in the array\n          delete Headerdata[0].aging;\n          delete Headerdata[0].futureAllocDate;\n        }\n\n        let hData = [];\n        let bData = [];\n        for (let index = 0; index < response.length; index++) {\n          if (index == 0) {\n            hData.push(response[index]);\n            bData.push(response[index]);\n          } else {\n            bData.push(response[index]);\n          }\n        }\n        setExcelData(ExcelHeaderdata.concat(bData));\n        setData1(Headerdata.concat(bData));\n        setOpen(true);\n        // Scroll down by 200 pixels\n\n        setLoaderState(false);\n        setHeaderData(hData);\n        setLoader(false);\n        window.scrollTo({ top: 1500, behavior: \"smooth\" }); // Scroll to the bottom of the page\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  useEffect(() => {}, [data1]);\n  const LinkTemplate = (employeedata) => {\n    let rou = linkColumns[0];\n    return (\n      <>\n        <div>\n          {employeedata.empStatus == \"fteActive\" ? (\n            <div\n              className=\"rollOffTableIcon green ellipsis\"\n              title=\"Active Employee\"\n              style={{ width: \"150px\" }}\n            >\n              <GoPerson className=\"icon\" />\n              <a\n                onClick={(e) => {\n                  setResourceName(employeedata.resource);\n                  setresid(employeedata.id);\n                  setDisplay(true);\n                  handleClick1(employeedata.id);\n                }}\n              >\n                {formData.isChecked == false ? (\n                  \"\"\n                ) : (\n                  <VscChecklist\n                    size=\"1.4em\"\n                    title=\"Action Items\"\n                    cursor=\"pointer\"\n                  />\n                )}\n                {/* <VscChecklist\n                  size=\"1.4em\"\n                  title=\"Action Items\"\n                  cursor=\"pointer\"\n                /> */}\n              </a>{\" \"}\n              &nbsp;\n              <span className=\"ellipsis\" title={employeedata.resource}>\n                {employeedata.resource}\n              </span>\n            </div>\n          ) : employeedata.empStatus == \"subkActive\" ? (\n            <div\n              className=\"rollOffTableIcon amber ellipsis\"\n              title=\"Active Contractor\"\n              style={{ width: \"200px\" }}\n            >\n              <GoPerson className=\"icon\" />\n              <a\n                onClick={(e) => {\n                  setResourceName(employeedata.resource);\n                  setresid(employeedata.id);\n                  setDisplay(true);\n                  handleClick1(employeedata.id);\n                }}\n              >\n                {formData.isChecked == false ? (\n                  \"\"\n                ) : (\n                  <VscChecklist\n                    size=\"1.4em\"\n                    title=\"Action Items\"\n                    cursor=\"pointer\"\n                  />\n                )}\n              </a>{\" \"}\n              &nbsp;\n              <span className=\"ellipsis\" title={employeedata.resource}>\n                {employeedata.resource}\n              </span>\n            </div>\n          ) : employeedata.empStatus === \"fteInactive\" &&\n            ![\n              \"Non Deployable\",\n              \"Blocked\",\n              \"No Allocation\",\n              \"Future Allocated\",\n            ].includes(employeedata.resAllocType) ? (\n            <div\n              className=\"rollOffTableIcon green ellipsis\"\n              title=\"Active Employee\"\n            >\n              <img\n                // src={fte_notice}\n                // alt=\"(fte_notice_icon)\"\n                src={fte_inactive}\n                alt=\"(fte_inactive_icon)\"\n                style={{ height: \"12px\" }}\n                title=\"Ex-Employee\"\n              />\n              <a\n                onClick={(e) => {\n                  setResourceName(employeedata.resource);\n                  setresid(employeedata.id);\n                  setDisplay(true);\n                  handleClick1(employeedata.id);\n                }}\n              >\n                {formData.isChecked == false ? (\n                  \"\"\n                ) : (\n                  <VscChecklist\n                    size=\"1.4em\"\n                    title=\"Action Items\"\n                    cursor=\"pointer\"\n                  />\n                )}\n              </a>{\" \"}\n              &nbsp;\n              <span className=\"ellipsis\" title={employeedata.resource}>\n                {employeedata.resource}\n              </span>\n            </div>\n          ) : employeedata.empStatus == \"fteNotice\" ? (\n            <div\n              className=\"rollOffTableIcon green ellipsis\"\n              title=\"Employee in notice period\"\n            >\n              {/* <GoPerson className=\"icon\" /> */}\n              <img\n                src={fte_notice}\n                alt=\"(fte_notice_icon)\"\n                style={{ height: \"12px\", marginRight: \"10px\" }}\n                title=\"Employee in notice period\"\n              />\n              <a\n                onClick={(e) => {\n                  setResourceName(employeedata.resource);\n                  setresid(employeedata.id);\n                  setDisplay(true);\n                  handleClick1(employeedata.id);\n                }}\n              >\n                {formData.isChecked == false ? (\n                  \"\"\n                ) : (\n                  <VscChecklist\n                    size=\"1.4em\"\n                    title=\"Action Items\"\n                    cursor=\"pointer\"\n                  />\n                )}\n              </a>{\" \"}\n              &nbsp;\n              <span className=\"ellipsis\" title={employeedata.resource}>\n                {employeedata.resource}\n              </span>\n            </div>\n          ) : employeedata.empStatus == \"Bench\" ? (\n            <div\n              className=\"rollOffTableIcon white ellipsis\"\n              title=\"Active Employee\"\n            >\n              <GoPerson className=\"icon\" />\n              <a\n                onClick={(e) => {\n                  setDisplay(true);\n                  handleClick1(employeedata.id);\n                  setresid(employeedata.id);\n                  setResourceName(employeedata.resource);\n                }}\n              >\n                {formData.isChecked == false ? (\n                  \"\"\n                ) : (\n                  <VscChecklist\n                    size=\"1.4em\"\n                    title=\"Action Items\"\n                    cursor=\"pointer\"\n                  />\n                )}\n              </a>{\" \"}\n              &nbsp;\n              <span className=\"ellipsis\" title={employeedata.resource}>\n                {employeedata.resource}\n              </span>\n            </div>\n          ) : employeedata.empStatus == \"subkInactive\" &&\n            ![\n              \"Non Deployable\",\n              \"Blocked\",\n              \"No Allocation\",\n              \"Future Allocated\",\n            ] ? (\n            <div\n              className=\"rollOffTableIcon blueRed ellipsis\"\n              title=\"Active Contractor\"\n            >\n              <GoPerson className=\"icon\" />\n              <a\n                onClick={(e) => {\n                  setResourceName(employeedata.resource);\n                  setresid(employeedata.id);\n                  setDisplay(true);\n                  handleClick1(employeedata.id);\n                }}\n              >\n                {formData.isChecked == false ? (\n                  \"\"\n                ) : (\n                  <VscChecklist\n                    size=\"1.4em\"\n                    title=\"Action Items\"\n                    cursor=\"pointer\"\n                  />\n                )}\n              </a>{\" \"}\n              &nbsp;\n              <span title={employeedata.resource}>{employeedata.resource}</span>\n            </div>\n          ) : employeedata.empStatus === \"fteInactive\" &&\n            [\n              \"Non Deployable\",\n              \"Blocked\",\n              \"No Allocation\",\n              \"Future Allocated\",\n              \"Training\",\n            ].includes(employeedata.resAllocType) ? (\n            <div className=\"rollOffTableIcon white ellipsis\" title=\"Employee\">\n              <img\n                src={fte_inactive}\n                alt=\"(fte_inactive_icon)\"\n                style={{ height: \"16px\", width: \"16px\", margin: \"3px\" }}\n                title=\"Ex-Employee\"\n              />\n              <a\n                onClick={(e) => {\n                  setDisplay(true);\n                  handleClick1(employeedata.id);\n                  setresid(employeedata.id);\n                  setResourceName(employeedata.resource);\n                }}\n              >\n                {formData.isChecked == false ? (\n                  \"\"\n                ) : (\n                  <VscChecklist\n                    size=\"1.4em\"\n                    title=\"Action Items\"\n                    cursor=\"pointer\"\n                  />\n                )}\n              </a>{\" \"}\n              &nbsp;\n              <span className=\"ellipsis\" title={employeedata.resource}>\n                {employeedata.resource}\n              </span>\n            </div>\n          ) : employeedata.empStatus === \"subkInactive\" &&\n            [\n              \"Non Deployable\",\n              \"Blocked\",\n              \"No Allocation\",\n              \"Future Allocated\",\n            ].includes(employeedata.resAllocType) ? (\n            <div className=\"rollOffTableIcon white ellipsis\" title=\"Employee\">\n              <img\n                src={subk_inactive}\n                alt=\"(fte_notice_icon)\"\n                style={{ height: \"16px\", width: \"16px\", margin: \"3px\" }}\n                title=\"Ex-Contractor\"\n              />\n              <a\n                onClick={(e) => {\n                  setDisplay(true);\n                  handleClick1(employeedata.id);\n                  setresid(employeedata.id);\n                  setResourceName(employeedata.resource);\n                }}\n              >\n                {formData.isChecked == false ? (\n                  \"\"\n                ) : (\n                  <VscChecklist\n                    size=\"1.4em\"\n                    title=\"Action Items\"\n                    cursor=\"pointer\"\n                  />\n                )}\n              </a>{\" \"}\n              &nbsp;\n              <span className=\"ellipsis\" title={employeedata.resource}>\n                {employeedata.resource}\n              </span>\n            </div>\n          ) : (\n            \"\"\n          )}\n        </div>\n      </>\n    );\n  };\n\n  const Actiondate = (data) => {\n    return (\n      <div\n        className=\"ellipsis\"\n        data-toggle=\"tooltip\"\n        style={{ width: \"80px\", textAlign: \"center\" }}\n        title={moment(data.actionDt).format(\"DD-MMM-YYYY\")}\n      >\n        {moment(data.actionDt).format(\"DD-MMM-YYYY\") == \"Invalid date\"\n          ? \"\"\n          : moment(data.actionDt).format(\"DD-MMM-YYYY\")}\n      </div>\n    );\n  };\n  const EffectiveDate = (data) => {\n    return (\n      <div\n        className=\"ellipsis\"\n        data-toggle=\"tooltip\"\n        style={{ width: \"125px\", textAlign: \"center\" }}\n        title={moment(data.actionEffDt).format(\"DD-MMM-YYYY\")}\n      >\n        {moment(data.actionEffDt).format(\"DD-MMM-YYYY\") == \"Invalid date\"\n          ? \"\"\n          : moment(data.actionEffDt).format(\"DD-MMM-YYYY\")}\n      </div>\n    );\n  };\n  const futureAllocDate = (data) => {\n    return (\n      <div\n        className=\"ellipsis\"\n        data-toggle=\"tooltip\"\n        style={{ width: \"80px\", textAlign: \"center\" }}\n        title={moment(data.futureAllocDate).format(\"DD-MMM-YYYY\")}\n      >\n        {moment(data.futureAllocDate).format(\"DD-MMM-YYYY\") == \"Invalid date\"\n          ? \"\"\n          : moment(data.futureAllocDate).format(\"DD-MMM-YYYY\")}\n      </div>\n    );\n  };\n  const Designation = (data) => {\n    return (\n      <div className=\"ellipsis\" data-toggle=\"tooltip\" title={data.designation}>\n        {data.designation}\n      </div>\n    );\n  };\n\n  const empId = (data) => {\n    console.log(data);\n    return (\n      <div\n        className=\"ellipsis\"\n        data-toggle=\"tooltip\"\n        style={{ width: \"70px\" }}\n        title={data.empId}\n      >\n        {data.empId}\n      </div>\n    );\n  };\n\n  const Department = (data) => {\n    return (\n      <div className=\"ellipsis\" data-toggle=\"tooltip\" title={data.department}>\n        {data.department}\n      </div>\n    );\n  };\n\n  const Customer = (data) => {\n    return (\n      <div className=\"ellipsis\" data-toggle=\"tooltip\" title={data.customer}>\n        {data.customer}\n      </div>\n    );\n  };\n\n  const LoB = (data) => {\n    return (\n      <div className=\"ellipsis\" data-toggle=\"tooltip\" title={data.LoB}>\n        {data.LoB}\n      </div>\n    );\n  };\n\n  const Cadre_code = (data) => {\n    return (\n      <div\n        className=\"ellipsis\"\n        style={{ textAlign: \"center\" }}\n        data-toggle=\"tooltip\"\n        title={data.cadre_code}\n      >\n        {data.cadre_code}\n      </div>\n    );\n  };\n\n  const SkillGrps = (data) => {\n    return (\n      <div className=\"ellipsis\" data-toggle=\"tooltip\" title={data.skillGrps}>\n        {data.skillGrps}\n      </div>\n    );\n  };\n\n  const Skill = (data) => {\n    return (\n      <div className=\"ellipsis\" data-toggle=\"tooltip\" title={data.Skill}>\n        {data.Skill}\n      </div>\n    );\n  };\n\n  const Emp_citizenship = (data) => {\n    return (\n      <div\n        className=\"ellipsis\"\n        data-toggle=\"tooltip\"\n        title={data.emp_citizenship}\n      >\n        {data.emp_citizenship}\n      </div>\n    );\n  };\n\n  const NectCap = (data) => {\n    return (\n      <div\n        className=\"ellipsis\"\n        style={{ textAlign: \"right\", width: \"80px\" }}\n        data-toggle=\"tooltip\"\n        title={data.nectCap}\n      >\n        {data.nectCap}\n      </div>\n    );\n  };\n\n  const BillHrs = (data) => {\n    return (\n      <div\n        className=\"ellipsis\"\n        style={{ textAlign: \"right\" }}\n        data-toggle=\"tooltip\"\n        title={data.billHrs}\n      >\n        {data.billHrs}\n      </div>\n    );\n  };\n\n  const AvailHrs = (data) => {\n    return (\n      <div\n        className=\"ellipsis\"\n        style={{ textAlign: \"right\" }}\n        data-toggle=\"tooltip\"\n        title={data.availHrs}\n      >\n        {data.availHrs}\n      </div>\n    );\n  };\n  const Projected = (data) => {\n    // Assuming data.projected is a number like 100\n    const percentage = data.projected + \"%\";\n\n    return (\n      <div\n        className=\"ellipsis\"\n        style={{ textAlign: \"right\" }}\n        data-toggle=\"tooltip\"\n        title={percentage}\n      >\n        {percentage}\n      </div>\n    );\n  };\n\n  const Aging = (data) => {\n    return (\n      <div\n        className=\"ellipsis\"\n        style={{ textAlign: \"right\" }}\n        data-toggle=\"tooltip\"\n        title={data.aging}\n      >\n        {data.aging}\n      </div>\n    );\n  };\n\n  const NbHrs = (data) => {\n    return (\n      <div\n        className=\"ellipsis\"\n        style={{ textAlign: \"right\", width: \"80px\" }}\n        data-toggle=\"tooltip\"\n        title={data.nbHrs}\n      >\n        {data.nbHrs}\n      </div>\n    );\n  };\n\n  const Supervisor = (data) => {\n    return (\n      <div className=\"ellipsis\" data-toggle=\"tooltip\" title={data.supervisor}>\n        {data.supervisor}\n      </div>\n    );\n  };\n\n  const ActionItem = (data) => {\n    return (\n      <div className=\"ellipsis\" data-toggle=\"tooltip\" title={data.actionItem}>\n        {data.actionItem}\n      </div>\n    );\n  };\n  let headName = \"\";\n  const onclickHandler = (a, b, element) => {\n    headName = a.split(\"_\")[0];\n\n    const temp = {};\n    if (\n      a.split(\"_\")[0] == \"cogs\" ||\n      a.split(\"_\")[0] == \"over\" ||\n      a.split(\"_\")[0] == \"total\" ||\n      a.split(\"_\")[0] == \"bench\"\n    ) {\n      if (a.split(\"_\")[0] == \"over\") {\n        temp[\"a\"] = \"ovrh\";\n      } else {\n        temp[\"a\"] = a.split(\"_\")[0];\n      }\n    } else {\n      temp[\"a\"] = a;\n    }\n\n    temp[\"b\"] = b;\n    getData(temp, element);\n    setDisplay(false);\n    setOpen(false);\n  };\n\n  const order = [\n    \"id\",\n    \"name\",\n    \"cogs_count\",\n    \"over_head_count\",\n    \"total\",\n    \"fullAlloc_count\",\n    \"bench\",\n    \"noAlloc_count\",\n    \"nonDepl_count\",\n    \"futAlloc_count\",\n    \"blocked_count\",\n    \"backfill_count\",\n    \"training_count\",\n    \"compBench_count\",\n    \"nBCat1_count\",\n    \"nBCat2_count\",\n    \"nBCat3_count\",\n    \"nBFTE_count\",\n    \"nBTotal_count\",\n\n    // \"count\",\n    \"pBCat1_count\",\n    \"pBCat2_count\",\n    \"pBCat3_count\",\n    \"pBFTE_count\",\n    \"pBTotal_count\",\n\n    \"innovCat1_count\",\n    \"innovCat2_count\",\n    \"innovCat3_count\",\n    \"innovFTE_count\",\n    \"innovTotal_count\",\n  ];\n  const [showSummryTable, setShowSummaryTable] = useState(false);\n\n  const handleClick = () => {\n    let valid = GlobalValidation(ref);\n    if (valid) {\n      {\n        setValidationMessagesum(true);\n        setTimeout(() => {\n          setValidationMessagesum(false);\n        }, 3000);\n      }\n      return;\n    }\n    // setsearching(true);\n\n    let loaderTimeout = setTimeout(() => {\n      setLoader(true);\n    }, 2000);\n\n    axios({\n      method: \"post\",\n      url: baseUrl + `/fullfilmentms/rolloffs/getBenchReport`,\n      data: {\n        BuIds: searchDataB,\n        CountryIds: formData.CountryIds,\n        EngCountryIds: formData.EngCountryIds,\n        FromDate: formData.FromDate,\n        Duration: formData.Duration,\n        isExport: 0,\n        resType: formData.resType,\n        isChecked: formData.isChecked,\n        UserId: loggedUserId,\n      },\n      headers: { \"Content-Type\": \"application/json\" },\n    }).then((response) => {\n      const data = response.data.map((obj) => {\n        const newObj = {};\n        order.forEach((key) => {\n          if (obj.hasOwnProperty(key)) {\n            newObj[key] = obj[key];\n          }\n        });\n        return newObj;\n      });\n      const originalData = data;\n      setData(originalData);\n      setLoaderState(false);\n      setLoader(false);\n      setShowSummaryTable(true);\n      clearTimeout(loaderTimeout);\n      setVisible(!visible);\n      visible\n        ? setCheveronIcon(FaChevronCircleUp)\n        : setCheveronIcon(FaChevronCircleDown);\n    });\n    setsearching(false);\n    setValidationMessagesum(false);\n  };\n\n  useEffect(() => {\n    data[0] && setHeaderData(JSON.parse(JSON.stringify(data[0])));\n  }, [data]);\n\n  useEffect(() => {\n    getBusinessUnit();\n    getCountries();\n    getEngCountries();\n  }, []);\n\n  const ArrowRenderer = ({ expanded }) => (\n    <>\n      {expanded ? (\n        <FaCaretDown className=\"chevronIcon\" />\n      ) : (\n        <FaCaretDown className=\"chevronIcon\" />\n      )}\n    </>\n  );\n  const [tableHeader, setTableHeader] = useState([]);\n  const [tableBody, setTableBody] = useState([]);\n  console.log(tableBody);\n  const dynamicColumns = Object.keys(headerData)?.map((col, i) => {\n    return (\n      <Column\n        sortable\n        key={col}\n        body={\n          (col == \"empId\" && empId) ||\n          (col == \"resource\" && LinkTemplate) ||\n          (col == \"actionDt\" && Actiondate) ||\n          (col == \"actionEffDt\" && EffectiveDate) ||\n          (col == \"designation\" && Designation) ||\n          (col == \"department\" && Department) ||\n          (col == \"customer\" && Customer) ||\n          (col == \"LoB\" && LoB) ||\n          (col == \"cadre_code\" && Cadre_code) ||\n          (col == \"skillGrps\" && SkillGrps) ||\n          (col == \"Skill\" && Skill) ||\n          (col == \"emp_citizenship\" && Emp_citizenship) ||\n          (col == \"nectCap\" && NectCap) ||\n          (col == \"billHrs\" && BillHrs) ||\n          (col == \"availHrs\" && AvailHrs) ||\n          (col == \"projected\" && Projected) ||\n          (col == \"aging\" && Aging) ||\n          (col == \"nbHrs\" && NbHrs) ||\n          (col == \"supervisor\" && Supervisor) ||\n          (col == \"actionItem\" && ActionItem) ||\n          (col == \"futureAllocDate\" && futureAllocDate)\n        }\n        field={col}\n        header={headerData[col]}\n      />\n    );\n  });\n  useEffect(() => {\n    data1[0] && setHeaderData(JSON.parse(JSON.stringify(data1[0])));\n  }, [data1]);\n\n  useEffect(() => {\n    if (data.length > 0) {\n      let headers = Object.keys(data[0]).filter((d) => d != \"id\" && d != \"lvl\");\n      setTabHeaders(headers);\n    }\n  }, [data]);\n\n  useEffect(() => {\n    displayTableFnc();\n  }, [tabHeaders]);\n\n  let tabHeader = [\n    \"empId\",\n    \"resource\",\n    \"designation\",\n    \"department\",\n    \"customer\",\n    \"LoB\",\n    \"cadre_code\",\n    \"skillGrps\",\n    \"Skill\",\n    \"emp_citizenship\",\n    \"nectCap\",\n    \"billHrs\",\n    \"availHrs\",\n    \"projected\",\n    \"nbHrs\",\n    \"supervisor\",\n    \"actionItem\",\n    \"actionDt\",\n    \"actionEffDt\",\n  ];\n  const displayTableFnc = () => {\n    setDisplayTable(() => {\n      return data.map((element, index) => {\n        let tabData = [];\n        tabHeaders.forEach((inEle, inInd) => {\n          if (index === 0) {\n            let value = (\"\" + element[inEle]).includes(\"^&\")\n              ? element[inEle].split(\"^&\")\n              : element[inEle];\n            let rowSpanValue = value ? value[1] : \"\";\n            let colSpanValue = value ? value[2] : \"\";\n            if (value) {\n              console.log(value[0]);\n              tabData.push(\n                <th\n                  style={{ textAlign: \"center\" }}\n                  colSpan={colSpanValue}\n                  rowSpan={rowSpanValue}\n                  key={inInd}\n                >\n                  {value[0]}\n                </th>\n              );\n            }\n          } else {\n            if (index === 1) {\n              if (element[inEle]) {\n                tabData.push(\n                  <th\n                    align={inInd > 0 ? \"right\" : \"left\"}\n                    style={{ textAlign: \"center\" }}\n                  >\n                    <span>{element[inEle]}</span>\n                  </th>\n                );\n              }\n            } else {\n              const HeadCount = [\"total\", \"over_head_count\", \"cogs_count\"];\n              const FullyAllocated = [\"fullAlloc_count\", \"bench\"];\n              const BenchZeroAllocation = [\n                \"noAlloc_count\",\n                \"nonDepl_count\",\n                \"futAlloc_count\",\n                \"blocked_count\",\n                \"backfill_count\",\n                \"training_count\",\n                \"compBench_count\",\n              ];\n              const NBL = [\n                \"nBCat1_count\",\n                \"nBCat2_count\",\n                \"nBCat3_count\",\n                \"nBFTE_count\",\n                \"nBTotal_count\",\n              ];\n              const Partial = [\n                \"pBCat1_count\",\n                \"pBCat2_count\",\n                \"pBCat3_count\",\n                \"pBFTE_count\",\n                \"pBTotal_count\",\n              ];\n              const Innovation = [\n                \"innovCat1_count\",\n                \"innovCat2_count\",\n                \"innovCat3_count\",\n                \"innovFTE_count\",\n                \"innovTotal_count\",\n              ];\n\n              let className = HeadCount.includes(inEle)\n                ? \"lightTurquoise\"\n                : FullyAllocated.includes(inEle)\n                ? \"lightBlue\"\n                : BenchZeroAllocation.includes(inEle)\n                ? \"lightPink\"\n                : NBL.includes(inEle)\n                ? \"lemonGreen\"\n                : Partial.includes(inEle)\n                ? \"lightYellow\"\n                : Innovation.includes(inEle)\n                ? \"skyBlue\"\n                : \"\";\n              const number = element[inEle];\n              console.log(number);\n              const roundedNumber =\n                inEle == \"name\" ? number : Math.round(number);\n              console.log(tabData);\n              {\n                data[2].id == 9999 ? (\n                  <tr>\n                    <td align=\"center\">No Records To View</td>\n                  </tr>\n                ) : (\n                  \"\"\n                );\n              }\n\n              {\n                data[2].id !== 9999\n                  ? tabData.push(\n                      <td align={inInd > 0 ? \"right\" : \"center\"}>\n                        <span\n                          className={className}\n                          style={{\n                            cursor:\n                              inInd > 0 && element[inEle] != 0 ? \"pointer\" : \"\",\n                            color:\n                              inInd != 0 && element[inEle] != 0\n                                ? \"#2e88c5\"\n                                : \"\",\n                          }}\n                          onMouseOver={(e) => {\n                            e.target.style.textDecoration =\n                              inInd > 0 && element[inEle] != 0\n                                ? \"underline\"\n                                : \"none\"; // Apply underline when hovering based on condition\n                          }}\n                          onMouseOut={(e) => {\n                            e.target.style.textDecoration = \"none\"; // Remove underline on mouse out\n                          }}\n                          onClick={() => {\n                            inInd > 0 && element[inEle] != 0\n                              ? onclickHandler(\n                                  inEle,\n                                  element.id == 0 ? \"-1\" : element.id,\n                                  element,\n                                  setTypeID(inEle),\n                                  setElementId(element.id),\n                                  setTableDisplay(true)\n                                )\n                              : \"\";\n                          }}\n                        >\n                          {inEle == \"bench\"\n                            ? roundedNumber + \" %\"\n                            : roundedNumber.toLocaleString()}\n                        </span>\n                      </td>\n                    )\n                  : \"\";\n              }\n            }\n          }\n        });\n        return <tr key={index}>{tabData}</tr>;\n      });\n    });\n  };\n\n  const [routes, setRoutes] = useState([]);\n  let textContent = \"Fullfilment\";\n  let currentScreenName = [\"Bench Metrics\"];\n\n  useEffect(() => {\n    getMenus();\n  }, []);\n\n  const getMenus = () => {\n    // setMenusData\n\n    axios({\n      method: \"GET\",\n      url: baseUrl + `/CommonMS/master/getMenus?loggedUserId=${loggedUserId}`,\n    }).then((resp) => {\n      let data = resp.data;\n\n      data.forEach((item) => {\n        if (item.display_name === textContent) {\n          setRoutes([item]);\n        }\n      });\n    });\n  };\n\n  const generateDropdownLabel = (selectedOptions, allOptions) => {\n    const selectedValues = selectedOptions.map((option) => option.value);\n    const allValues = allOptions.map((item) => item.value);\n\n    if (selectedValues.length === allValues.length) {\n      return \"<< ALL >>\";\n    } else {\n      return selectedOptions.map((option) => option.label).join(\", \");\n    }\n  };\n\n  function handleChange(e) {\n    setChecked(e.target.checked);\n    setFormData({ ...formData, [\"isChecked\"]: e.target.checked });\n  }\n\n  const handleDateChange = (event) => {\n    const newSelectedDate = new Date(event);\n\n    const newPreviousSaturday = getLastSaturday(newSelectedDate);\n    newSelectedDate.getDay() == 6\n      ? SetDate(newSelectedDate)\n      : SetDate(newPreviousSaturday);\n    // SetDate(e);\n    setFormData((prev) => ({\n      ...prev,\n      [\"FromDate\"]: moment(\n        newSelectedDate.getDay() == 6 ? newSelectedDate : newPreviousSaturday\n      ).format(\"yyyy-MM-DD\"),\n    }));\n  };\n  const handleOnExport = () => {\n    const excludeProperties = [\"id\"];\n    const headerRow1 = [\n      \"Business Unit\",\n      \"COGS\",\n      \"OVRH\",\n      \"Total\",\n      \"Fully Allocated\",\n      \"Deployable Bench %\",\n      \"No Alloc\",\n      \"Non Depl\",\n      \"Future Alloc\",\n      \"Blocked\",\n      \"Backfill\",\n      \"Training\",\n      \"Total\",\n      \"1 <= hrs < 8\",\n      \"8 <= hrs < 20\",\n      \">= 20 hrs\",\n      \"FTE\",\n      \"Total\",\n      \"1 <= hrs < 8\",\n      \"8 <= hrs < 20\",\n      \"20 <= hrs < 40\",\n      \"FTE\",\n      \"Total\",\n      \"1 <= hrs < 8\",\n      \"8 <= hrs < 20\",\n      \"20 <= hrs < 40\",\n      \"FTE\",\n      \"Total\",\n    ];\n\n    const filteredData = data.slice(2).filter((item, index) => index !== 1);\n\n    const dataRows = filteredData.map((item) => {\n      const filteredItem = Object.fromEntries(\n        Object.entries(item).filter(([key]) => !excludeProperties.includes(key))\n      );\n      return Object.values(filteredItem);\n    });\n\n    const workbook = new ExcelJS.Workbook();\n    const worksheet = workbook.addWorksheet(\"BenchReportConsolidated\");\n    const headerRow = worksheet.addRow(headerRow1);\n\n    for (let i = 0; i < dataRows.length; i++) {\n      const row = worksheet.addRow(dataRows[i]);\n    }\n\n    // Save the workbook\n    workbook.xlsx.writeBuffer().then((buffer) => {\n      saveAs(new Blob([buffer]), \"BenchReportConsolidated.xlsx\");\n    });\n  };\n  console.log(tableHeader);\n  return (\n    <div>\n      {validationmessagesum ? (\n        <div className=\"statusMsg error\">\n          <AiFillWarning />\n          {\"Please provide valid values for highlighted values\"}\n        </div>\n      ) : (\n        \"\"\n      )}\n      <div className=\"col-md-12\">\n        <div className=\"pageTitle\">\n          <div className=\"childOne\"></div>\n          <div className=\"childTwo\">\n            <h2>Bench Report</h2>\n          </div>\n          <div className=\"childThree\"></div>\n        </div>\n      </div>\n      <ScreenBreadcrumbs\n        routes={routes}\n        currentScreenName={currentScreenName}\n      />\n      {loader ? <Loader handleAbort={handleAbort} /> : \"\"}\n\n      {editmsg ? (\n        <div className=\"statusMsg success\">\n          <span className=\"errMsg\">\n            <BiCheck size=\"1.4em\" /> &nbsp; Search created successfully.\n          </span>\n        </div>\n      ) : (\n        \"\"\n      )}\n\n      <div className=\"group mb-3 customCard\">\n        <div className=\"col-md-12 collapseHeader\">\n          <h2>Search Filters</h2>\n          <div className=\"helpBtn\">\n            <GlobalHelp pdfname={HelpPDFName} name={HelpHeader} />\n          </div>\n          <div className=\"saveBtn\">\n            <SavedSearchGlobal\n              setEditAddmsg={setEditAddmsg}\n              pageurl={pageurl}\n              page_Name={page_Name}\n              payload={formData}\n            />\n          </div>\n          &nbsp;\n          <div\n            onClick={() => {\n              setVisible(!visible);\n              visible\n                ? setCheveronIcon(FaChevronCircleUp)\n                : setCheveronIcon(FaChevronCircleDown);\n            }}\n          >\n            <span>{cheveronIcon}</span>\n          </div>\n        </div>\n        <CCollapse visible={!visible}>\n          <div className=\"group-content row\">\n            <div className=\" col-md-3 mb-2\">\n              <div className=\"form-group row\">\n                <label className=\"col-5\" htmlFor=\"BuIds\">\n                  Business Unit&nbsp;<span className=\"error-text\">*</span>\n                </label>\n                <span className=\"col-1 p-0\">:</span>\n                <div className=\"col-6\">\n                  <div\n                    className=\"multiselect\"\n                    ref={(ele) => {\n                      ref.current[0] = ele;\n                    }}\n                  >\n                    <MultiSelect\n                      id=\"BuIds\"\n                      ArrowRenderer={ArrowRenderer}\n                      value={selectedBusiness}\n                      valueRenderer={generateDropdownLabel}\n                      options={business}\n                      hasSelectAll={true}\n                      disabled={false}\n                      onChange={(s) => {\n                        setSelectedBusiness(s);\n                        let filteredValues = [];\n                        s.forEach((d) => {\n                          filteredValues.push(d.value);\n                        });\n                        setFormData((prevVal) => ({\n                          ...prevVal,\n                          [\"BuIds\"]: filteredValues.toString(),\n                        }));\n                        setSearchDataB(filteredValues.toString());\n                      }}\n                    />\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className=\" col-md-3 mb-2\">\n              <div className=\"form-group row\">\n                <label className=\"col-5\" htmlFor=\"CountryIds\">\n                  Res. Location&nbsp;<span className=\"error-text\">*</span>\n                </label>\n                <span className=\"col-1 p-0\">:</span>\n                <div className=\"col-6\">\n                  <div\n                    className=\"multiselect\"\n                    ref={(ele) => {\n                      ref.current[1] = ele;\n                    }}\n                  >\n                    <MultiSelect\n                      id=\"CountryIds\"\n                      options={country}\n                      ArrowRenderer={ArrowRenderer}\n                      valueRenderer={generateDropdownLabel}\n                      hasSelectAll={true}\n                      value={selectedCountry}\n                      isLoading={false}\n                      shouldToggleOnHover={false}\n                      disableSearch={false}\n                      disabled={false}\n                      onChange={(e) => {\n                        setSelectedCountry(e);\n                        let filteredCountry = [];\n                        e.forEach((d) => {\n                          filteredCountry.push(d.value);\n                        });\n                        setFormData((prevVal) => ({\n                          ...prevVal,\n                          [\"CountryIds\"]: filteredCountry.toString(),\n                        }));\n                      }}\n                    />\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className=\" col-md-3 mb-2\">\n              <div className=\"form-group row\">\n                <label className=\"col-6\" htmlFor=\"EngCountryIds\">\n                  Engagement Location\n                </label>\n                <span className=\"col-1 p-0\">:</span>\n                <div className=\"col-5\">\n                  <MultiSelect\n                    id=\"EngCountryIds\"\n                    options={engCountry}\n                    ArrowRenderer={ArrowRenderer}\n                    valueRenderer={generateDropdownLabel}\n                    hasSelectAll={true}\n                    value={setEngSelectCountry}\n                    isLoading={false}\n                    shouldToggleOnHover={false}\n                    disableSearch={false}\n                    disabled={false}\n                    onChange={(e) => {\n                      const selectedValues = e.map((option) => option.value);\n                      setEngSelectedCountry(e);\n                      if (selectedValues.length === engCountry.length) {\n                        let filteredCountry = [];\n                        e.forEach((d) => {\n                          filteredCountry.push(d.value);\n                        });\n                        setFormData((prevVal) => ({\n                          ...prevVal,\n                          [\"EngCountryIds\"]: \"-1\",\n                        }));\n                      } else {\n                        let filteredCountry = [];\n                        e.forEach((d) => {\n                          filteredCountry.push(d.value);\n                        });\n                        setFormData((prevVal) => ({\n                          ...prevVal,\n                          [\"EngCountryIds\"]: selectedValues.toString(),\n                        }));\n                      }\n                    }}\n                  />\n                </div>\n              </div>\n            </div>\n\n            <div className=\" col-md-3 mb-2\">\n              <div className=\"form-group row\">\n                <label className=\"col-5\" htmlFor=\"week\">\n                  Week&nbsp;<span className=\"error-text\">*</span>\n                </label>\n                <span className=\"col-1 p-0\">:</span>\n                <div className=\"col-6\">\n                  <DatePicker\n                    name=\"FromDate\"\n                    value={date}\n                    id=\"FromDate\"\n                    selected={date}\n                    showYearDropdown\n                    showMonthDropdown\n                    onChange={(e) => {\n                      handleDateChange(e);\n                    }}\n                    dateFormat=\"dd-MMM-yy\"\n                    placeholderText=\"\"\n                    dropdownMode=\"select\"\n                    onKeyDown={(e) => {\n                      e.preventDefault();\n                    }}\n                  />\n                </div>\n              </div>\n            </div>\n            <div className=\" col-md-3 mb-2\">\n              <div className=\"form-group row\">\n                <label className=\"col-5\" htmlFor=\"Duration\">\n                  Duration&nbsp;<span className=\"error-text\">*</span>\n                </label>\n                <span className=\"col-1 p-0\">:</span>\n                <div className=\"col-6\">\n                  <select\n                    className=\"text\"\n                    id=\"Duration\"\n                    onChange={(e) => {\n                      const { value, id } = e.target;\n                      setFormData({ ...formData, [id]: value });\n                    }}\n                    value={formData.Duration}\n                  >\n                    <option value=\"1\">1</option>\n                    <option value=\"2\">2</option>\n                    <option value=\"3\">3</option>\n                    <option value=\"4\">4</option>\n                  </select>\n                </div>\n              </div>\n            </div>\n            <div className=\" col-md-3 mb-2\">\n              <div className=\"form-group row\">\n                <label className=\"col-5\" htmlFor=\"resType\">\n                  Res. Type&nbsp;<span className=\"error-text\">*</span>\n                </label>\n                <span className=\"col-1 p-0\">:</span>\n                <div className=\"col-6\">\n                  <select\n                    className=\"text\"\n                    id=\"resType\"\n                    name=\"resType\"\n                    onChange={(e) => {\n                      const { value, id } = e.target;\n                      setFormData({ ...formData, [id]: value });\n                    }}\n                    value={formData.resType}\n                  >\n                    <option value=\"all\"> &lt;&lt;ALL&gt;&gt;</option>\n                    <option value=\"fte\">Employee</option>\n                    <option value=\"subk\">Contractors</option>\n                  </select>\n                </div>\n              </div>\n            </div>\n            <div className=\" col-md-3 mb-2\">\n              <div className=\"form-group row\">\n                <label className=\"col-6\" htmlFor=\"Duration\">\n                  Resources with &gt;1 FTE Allocations\n                </label>\n                <span className=\"col-1 p-0\">:</span>\n                <div className=\"col-5\">\n                  <input\n                    type=\"checkbox\"\n                    id=\"myCheckbox\"\n                    name=\"myCheckbox\"\n                    checked={formData.isChecked}\n                    onChange={handleChange}\n                  />\n                </div>\n              </div>\n            </div>\n            <div className=\"col-md-12 col-sm-12 col-xs-12 btn-container center my-3 mb-2\">\n              <button\n                type=\"submit\"\n                className=\"btn btn-primary\"\n                title=\"Search\"\n                onClick={() => {\n                  handleClick(),\n                    setDisplay(false),\n                    setOpen(false),\n                    setDisplay(false);\n                  setShowSummaryTable(false);\n                  setValidationMessage(false);\n                }}\n              >\n                <FaSearch />\n                Search\n              </button>\n              {/* )} */}\n            </div>\n          </div>\n        </CCollapse>\n      </div>\n\n      {showSummryTable == true ? (\n        <>\n          {\" \"}\n          <div className=\"mt-2\">\n            <RiFileExcel2Line\n              size=\"1.5em\"\n              title=\"Export to Excel\"\n              style={{ color: \"green\", float: \"right\" }}\n              cursor=\"pointer\"\n              onClick={handleOnExport}\n            />{\" \"}\n          </div>\n          <div className=\"benchReportTable darkHeader toHead\">\n            <table\n              className=\"table table-bordered htmlTable\"\n              cellPadding={0}\n              cellSpacing={0}\n              style={{ marginTop: \"7px\" }}\n            >\n              <thead>{tableHeader}</thead>\n              {/* <tbody>\n                {tableBody.length === 1 ? (\n                  <tr>\n                    <td style={{ textAlign: \"center\" }} colSpan={28}>\n                      No Data Found\n                    </td>\n                  </tr>\n                ) : (\n                  tableBody\n                )}\n              </tbody> */}\n              <tbody>\n                {tableBody.length === 1 ? (\n                  <td\n                    style={{ textAlign: \"center\", background: \"#b3bdc7 \" }}\n                    colSpan=\"28\"\n                  >\n                    {\" No Data Found\"}\n                  </td>\n                ) : (\n                  tableBody\n                )}\n              </tbody>\n            </table>\n          </div>\n        </>\n      ) : (\n        \"\"\n      )}\n\n      <div>\n        {open == true ? (\n          <>\n            <div>\n              <b style={{ color: \"#297AB0\", fontSize: \"15px\" }}>{heading}</b>\n              <BenchReportSecondtTable\n                headerData={headerData}\n                data={data1}\n                excelData={excelData}\n                rows={20}\n                loaderState={loaderState}\n                setLoaderState={setLoaderState}\n                dynamicColumns={dynamicColumns}\n                setHeaderData={setHeaderData}\n                exportData={exportData}\n                fileName=\"Bench Report\"\n              />\n            </div>\n          </>\n        ) : (\n          \"\"\n        )}\n      </div>\n      {validationmessage ? (\n        <div className=\"statusMsg error\">\n          <AiFillWarning />\n          {\"Please provide valid values for highlighted values\"}\n        </div>\n      ) : (\n        \"\"\n      )}\n\n      {Addmsg ? (\n        <div className=\"statusMsg success\">\n          <span className=\"errMsg\">\n            <BiCheck size=\"1.4em\" /> &nbsp;Action Item saved successfully\n          </span>\n        </div>\n      ) : (\n        \"\"\n      )}\n      {deleteMessage ? (\n        <div className=\"statusMsg success\">\n          <span className=\"errMsg\">\n            <BiCheck size=\"1.4em\" /> &nbsp;Action Item Deleted successfully\n          </span>\n        </div>\n      ) : (\n        \"\"\n      )}\n      {dispay && (\n        <div className=\"resourceOverviewEmp\">\n          <b style={{ color: \"#297AB0\", fontSize: \"15px\" }}>\n            {\"Action Items (\" + resourcname + \")\"}\n          </b>\n\n          <BenchReportEditableTable\n            resid={resid}\n            resourcedata={resourcedata}\n            setResourcedata={setResourcedata}\n            setResourceName={setResourceName}\n            handleClick1={handleClick1}\n            setDeleteMessage={setDeleteMessage}\n            setSaveActionMessage={setSaveActionMessage}\n            employeeid={employeeid}\n            setValidationMessage={setValidationMessage}\n            searching={searching}\n            validationmessage={validationmessage}\n            setLoader={setLoader}\n            setAddmsg={setAddmsg}\n          />\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default BenchReport;\n","import React from 'react'\nimport Highcharts from 'highcharts'\nimport HighchartsReact from 'highcharts-react-official'\nimport highcharts3d from 'highcharts/highcharts-3d'\nhighcharts3d(Highcharts)\nimport { useState } from 'react';\nimport { format, parseISO, parse } from \"date-fns\";\n\n\nfunction ResourceOverviewGraphs(props) {\n    const { tableData, column, filteredData, allHeaders, alldata } = props\n    const [type, setType] = useState([])\n    //=======================Deployable Bench - Actual=================\n    const fteData = {};\n\n    filteredData?.forEach((data) => {\n        if (data[\"kpi\"].includes(\"Deployable Bench - Actual\")) {\n\n            Object.keys(data).forEach((key) => {\n                if (key.includes(\"count\")) {\n                    const dateKey = key.substring(0, 10);\n                    const date = parseISO(dateKey.replace(/_/g, \"-\"));\n                    const formattedDateKey = format(date, \"dd-MMM-yyyy\");\n                    fteData[formattedDateKey] = data[key];\n                }\n            });\n        }\n    });\n\n    const sortedDates3 = Object.keys(fteData).sort((a, b) => {\n        return new Date(a) - new Date(b);\n    });\n\n    const sortedFteData3 = {};\n    sortedDates3.forEach((date) => {\n        sortedFteData3[date] = fteData[date];\n    });\n    //=================================NBL on projects==\n    const fteData4 = {};\n\n    filteredData?.forEach((data) => {\n        if (data[\"kpi\"].includes(\"NBL on projects\")) {\n            Object.keys(data).forEach((key) => {\n                if (key.includes(\"count\")) {\n                    const dateKey = key.substring(0, 10);\n                    const date = parseISO(dateKey.replace(/_/g, \"-\"));\n                    const formattedDateKey = format(date, \"dd-MMM-yyyy\");\n                    fteData4[formattedDateKey] = data[key];\n                }\n            });\n        }\n    });\n\n    const sortedDates4 = Object.keys(fteData4).sort((a, b) => {\n        return new Date(a) - new Date(b);\n    });\n\n    const sortedData4 = {};\n    sortedDates4.forEach((date) => {\n        sortedData4[date] = fteData4[date];\n    });\n\n    //=============================Bench (Zero Allocation)============\n    const fteData5 = {};\n\n    filteredData?.forEach((data) => {\n        if (data[\"kpi\"].includes(\"Bench (Zero Allocation)\")) {\n\n            Object.keys(data).forEach((key) => {\n                if (key.includes(\"count\")) {\n                    const dateKey = key.substring(0, 10);\n                    const date = parseISO(dateKey.replace(/_/g, \"-\"));\n                    const formattedDateKey = format(date, \"dd-MMM-yyyy\");\n                    fteData5[formattedDateKey] = data[key];\n                }\n            });\n        }\n    });\n\n    const sortedDates5 = Object.keys(fteData5).sort((a, b) => {\n        return new Date(a) - new Date(b);\n    });\n\n    const sortedData5 = {};\n    sortedDates5.forEach((date) => {\n        sortedData5[date] = fteData5[date];\n    });\n\n\n    //==================================================================\n    const fteData1 = {};\n\n    filteredData?.forEach((data) => {\n        if (data[\"kpi\"].includes(\"Resources being billed\")) {\n            Object.keys(data).forEach((key) => {\n                if (key.includes(\"count\")) {\n                    const dateKey = key.substring(0, 10);\n                    const date = parseISO(dateKey.replace(/_/g, \"-\"));\n                    const formattedDateKey = format(date, \"dd-MMM-yyyy\");\n                    fteData1[formattedDateKey] = data[key];\n                }\n            });\n        }\n    });\n\n\n    const sortedDates = Object.keys(fteData1).sort((a, b) => {\n        return new Date(a) - new Date(b);\n    });\n\n    const sortedFteData = {};\n    sortedDates.forEach((date) => {\n        sortedFteData[date] = fteData1[date];\n    });\n\n\n    ///////////////////////////////////////////////////////////////////////////\n\n    const fteData2 = {};\n\n    filteredData?.forEach((data) => {\n        if (data[\"kpi\"].includes(\"Total Billable Resources\")) {\n            Object.keys(data).forEach((key) => {\n                if (key.includes(\"count\")) {\n                    const dateKey = key.substring(0, 10);\n                    const date = parseISO(dateKey.replace(/_/g, \"-\"));\n                    const formattedDateKey = format(date, \"dd-MMM-yyyy\");\n                    fteData2[formattedDateKey] = data[key];\n                }\n            });\n        }\n    });\n\n\n    const sortedDates2 = Object.keys(fteData2).sort((a, b) => {\n        return new Date(a) - new Date(b);\n    });\n\n    const sortedFteData2 = {};\n    sortedDates2.forEach((date) => {\n        sortedFteData2[date] = fteData2[date];\n    });\n\n\n\n    //////////////////////////////////////////////////////////////////////////\n\n    const mergedFteData = Object.assign({}, fteData, fteData1);\n\n    const fteDataChartConfig = {\n        chart: {\n            type: 'column',\n        },\n        title: {\n            text: 'Resource Overview',\n        },\n        exporting: { enabled: true },\n        xAxis: {\n            categories: Object.keys(sortedFteData3),\n            title: {\n                text: 'Weeks',\n            },\n        },\n        yAxis: {\n\n            title: {\n                text: 'Resource Count',\n            },\n        },\n\n        tooltip: {\n            formatter: function () {\n                let tooltipText = '<b>' + this.x + '</b><br/>';\n                this.points.forEach(function (point) {\n                    tooltipText += '<span style=\"color:' + point.color + '\">' + point.series.name + '</span>: <span style=\"text-align: right; display: inline-block\">' + '<b>' + point.y + '</b></span><br/>';\n                });\n                return tooltipText;\n            },\n\n            shared: true,\n            positioner: function (labelWidth, labelHeight, point) {\n                return {\n                    x: point.plotX + this.chart.plotLeft - labelWidth / 2,\n                    y: point.plotY + this.chart.plotTop - labelHeight - 10,\n                };\n            },\n        },\n\n        series: [\n            {\n                name: 'Deployable Bench - Actual',\n                data: Object.values(sortedFteData3).map(value => Number(value)),\n                dataLabels: {\n                    enabled: true,\n                    formatter: function () {\n                        return this.y;\n                    }\n                },\n                marker: {\n                    symbol: 'square'\n                }\n            },\n            {\n                name: 'NBL on projects',\n                data: Object.values(sortedData4).map(value => Number(value)),\n                dataLabels: {\n                    enabled: true,\n                    formatter: function () {\n                        return this.y;\n                    }\n                },\n                marker: {\n                    symbol: 'square'\n                }\n            },\n            {\n                name: 'Bench (Zero Allocation)',\n                data: Object.values(sortedData5).map(value => Number(value)),\n                dataLabels: {\n                    enabled: true,\n                    formatter: function () {\n                        return this.y;\n                    }\n                },\n                marker: {\n                    symbol: 'square'\n                }\n            }\n        ]\n\n\n    };\n\n\n    // console.log(Object.keys(fteData1))\n\n    const fteData1ChartConfig = {\n        chart: {\n            type: 'line',\n        },\n        title: {\n            text: 'Billable vs Billed',\n        },\n        exporting: { enabled: true },\n        xAxis: {\n            categories: Object.keys(sortedFteData),\n            title: {\n                text: 'Weeks',\n            },\n        },\n        yAxis: {\n\n            title: {\n                text: 'Resource Count',\n            },\n        },\n        tooltip: {\n            formatter: function () {\n                return '<b>' + this.x + '</b><br/>' +\n                    this.series.name + ': ' + this.y\n            }\n        },\n        tooltip: {\n\n            formatter: function () {\n\n                let tooltipText = '<b>' + this.x + '</b><br/>';\n\n                this.points.forEach(function (point) {\n\n                    tooltipText += point.series.name + ': ' + point.y + '<br/>';\n\n                });\n\n                return tooltipText;\n\n            },\n\n            shared: true,\n            positioner: function (labelWidth, labelHeight, point) {\n                return {\n                    x: point.plotX + this.chart.plotLeft - labelWidth / 2,\n                    y: point.plotY + this.chart.plotTop - labelHeight - 10,\n                };\n            },\n\n        },\n        series: [\n            {\n                name: 'Total Billable Resources',\n                data: Object.values(sortedFteData2).map(value => Number(value)),\n            },\n            {\n                name: 'Resources Being billed',\n                data: Object.values(sortedFteData).map(value => Number(value)),\n            },\n        ],\n    };\n\n\n    return (\n        <div>\n            <div></div>\n\n            <HighchartsReact\n                highcharts={Highcharts}\n                options={fteData1ChartConfig}\n            />\n            <HighchartsReact\n                highcharts={Highcharts}\n                options={fteDataChartConfig}\n            />\n        </div>\n\n    )\n}\n\nexport default ResourceOverviewGraphs","import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport ResourceOverviewGraphs from \"./ResourceOverviewGraphs\";\nimport { format, parseISO, parse } from \"date-fns\";\nimport { SlExclamation } from \"react-icons/sl\";\nimport { FaInfoCircle } from \"react-icons/fa\";\nimport ResourceOverviewPopover from \"./ResourceOverviewPopover\";\nimport \"./ResourceOverviewTable.scss\";\n\nexport default function ResourceOverviewDisplayTable(props) {\n  const {\n    tableData,\n    column,\n    onClickHandler,\n    setId,\n    setHeaderDate,\n    setTotaldata,\n    setEmpTable,\n  } = props;\n  console.log(props.id);\n  var nf = new Intl.NumberFormat();\n  const currentDate = new Date();\n  const handleClose = () => {\n    setAnchorEl(false);\n  };\n\n  const [infoMessage, setInfoMessage] = useState(\"\");\n\n  const [anchorEl, setAnchorEl] = useState(null);\n  console.log(anchorEl);\n  if (!tableData || !tableData.data) {\n    return <div></div>;\n  }\n\n  // Create a new array without the unwanted kpi_id values\n\n  let allHeaders = [];\n  console.log(allHeaders);\n\n  let alldata = [];\n\n  const filteredData = tableData.data?.reduce((acc, element) => {\n    const { kpi_id, ...rest } = element;\n    if (kpi_id !== -1 && kpi_id !== \"#\") {\n      acc.push({ ...rest, kpi_id });\n    } else {\n      acc.push(element);\n    }\n    return acc;\n  }, []);\n\n  let headerDates = {};\n\n  tableData.data?.forEach((data) => {\n    if (data[\"kpi\"].includes(\"Deployable Bench - Actual\")) {\n      Object.keys(data).forEach((key) => {\n        if (key.includes(\"count\")) {\n          const dateKey = key.substring(0, 10);\n          const date = parseISO(dateKey.replace(/_/g, \"-\"));\n          const formattedDateKey = format(date, \"dd-MMM-yyyy\");\n          headerDates[formattedDateKey] = data[key];\n        }\n      });\n    }\n  });\n\n  const handleInfoClick = (kpi) => {\n    console.log(kpi);\n    const cleanedKpi = kpi.replace(/<\\/?span.*?>/gi, \"\");\n    console.log(cleanedKpi);\n    let message = \"\";\n    if (cleanedKpi.includes(\"Total Resources\")) {\n      message = \"=Sum(Employee+Contractors)\";\n    } else if (cleanedKpi.includes(\"Total Overhead\")) {\n      message = \"=Sum(Org Overhead+Delivery Overhead)\";\n    } else if (cleanedKpi.includes(\"Total Billable Resources \")) {\n      message = \"=Total resources-(Total Overhead+Gardening leave)\";\n    } else if (cleanedKpi.includes(\"Enablement\")) {\n      message =\n        \"*Head Count  is combination of Billable & Non Billable Resources\";\n    } else if (cleanedKpi.includes(\"Serving Notice Period\")) {\n      message =\n        \"=Billable+NBL on projects+Bench (Zero Allocation)+Gardening Leave+Org Overhead+Delivery Overhead\";\n    } else if (\n      cleanedKpi.includes(\"Deployable Bench - Actual\") ||\n      cleanedKpi.includes(\"Deployable Bench (Resource Type)\")\n    ) {\n      message =\n        \"= NBL on projects+Bench (Zero Allocation)+Innovation+Partial Bench\";\n    } else {\n      message = \"No information available for this KPI.\";\n    }\n    setInfoMessage(message);\n  };\n\n  return (\n    <div className=\"col-md-12 my-1 \">\n      <div className=\"statusMsg warning\">\n        <span className=\"bold\">\n          <SlExclamation />\n        </span>\n        &nbsp; For past weeks there is no option to click.\n      </div>\n      <b style={{ color: \"#297ab0\", fontSize: \"15px\" }}> HC Overview </b>\n      <div className=\"darkHeader\">\n        <div className=\"col-md-12 row \" style={{ paddingLeft: \"10px\" }}>\n          <table\n            className=\"table table-bordered table-striped col-6 htmlTable resourceOverview \"\n            style={{ width: \"51%\" }}\n          >\n            <thead>\n              {column?.length > 0 &&\n                filteredData.map((acc, index) => {\n                  let tabData = [];\n                  column.forEach((inEle, columnIndex) => {\n                    if (inEle === \"kpi_id\") {\n                      return;\n                    }\n                    let temp = acc[inEle];\n                    let data = null;\n                    if (\n                      temp != -1 &&\n                      acc.kpi_id == -1 &&\n                      temp?.includes(\"^&\")\n                    ) {\n                      data = acc[inEle].split(\"^&\");\n                    } else if (temp == \"#\") {\n                      acc[inEle] = \"\";\n                    } else if (acc.kpi_id === 0 && temp === 0) {\n                      acc[inEle] = \"\";\n                    } else {\n                      data = acc[index];\n                    }\n                    if (acc.kpi_id === -1) {\n                      tabData.push(\n                        data?.length > 0 ? (\n                          <th\n                            colspan={columnIndex === 1 ? 1 : 2}\n                            rowspan={\n                              temp === \"Resource Category^&0^&2\" ? \"2\" : \"\"\n                            }\n                            style={{\n                              textAlign:\n                                temp === \"Resource Category^&0^&2\"\n                                  ? \"center\"\n                                  : \"left\",\n                              paddingLeft: columnIndex === 1 ? \"14px\" : \"\",\n                            }}\n                          >\n                            {\" \"}\n                            {data?.length > 0 ? data[0] : data}\n                          </th>\n                        ) : null\n                      );\n                      allHeaders.push(acc.kpi);\n                    } else if (acc[inEle]) {\n                      const { kpi_id, ...rest } = acc;\n\n                      const backgroundColor =\n                        index > 1 &&\n                        columnIndex > 1 &&\n                        (Math.floor(columnIndex / 2) % 2 === 0\n                          ? columnIndex % 2 === 0\n                            ? \"#F3D6D6\"\n                            : \"#F3D6D6\"\n                          : columnIndex % 2 === 0\n                            ? \"#BFF5F5\"\n                            : \"#BFF5F5\");\n\n                      tabData.push(\n                        <td\n                          style={{\n                            backgroundColor,\n                            textAlign:\n                              index > 1 && columnIndex > 1 ? \"right\" : \"left\",\n                          }}\n                          className={rest[inEle] === 0 ? \"label\"\n                            : rest[inEle] === \"FTE\" ? \"fteStyle\"\n                              : rest[inEle] === \"Count\" ? \"countStyle\"\n                                : \"\"}\n                        >\n                          <span\n                            // className={columnIndex > 1 && rest[inEle] != 0 ? \"yourClassName\" : \"\"}\n                            style={\n                              columnIndex > 1 &&\n                                rest[inEle] != 0 &&\n                                !rest[inEle].includes(\"FTE\") &&\n                                !rest[inEle].includes(\"Count\")\n                                ? {\n                                  color: \"#15a7ea\",\n                                  textDecoration: \"underline\",\n                                  cursor: \"pointer\",\n                                }\n                                : {}\n                            }\n                            dangerouslySetInnerHTML={{\n                              __html:\n                                rest[inEle].includes(\"FTE\") ||\n                                  rest[inEle].includes(\"Count\")\n                                  ? `<b>${rest[inEle]}</b>`\n                                  : nf.format(parseInt(rest[inEle])) == \"NaN\"\n                                    ? rest[inEle]\n                                    : nf.format(parseInt(rest[inEle])),\n                            }}\n                            onClick={(e) => {\n                              if (columnIndex > 1 && rest[inEle] != 0) {\n                                const inEleArray = inEle\n                                  .replace(\"_fte\", \"\")\n                                  .replace(\"_count\", \"\");\n                                onClickHandler(\n                                  acc.kpi_id,\n                                  setId(acc.kpi_id),\n                                  setEmpTable(false)\n                                );\n\n                                setHeaderDate(inEleArray);\n                                setTotaldata(acc.kpi);\n                              }\n                            }}\n\n\n                          ></span>\n\n                          {(acc.kpi.includes(\"Total Resources\") ||\n                            acc.kpi.includes(\"Total Overhead\") ||\n                            acc.kpi.includes(\"Total Billable Resources\") ||\n                            acc.kpi.includes(\"Enablement\") ||\n                            acc.kpi.includes(\"Serving Notice Period\") ||\n                            acc.kpi.includes(\"Deployable Bench - Actual\") ||\n                            acc.kpi.includes(\n                              \"Deployable Bench (Resource Type)\"\n                            )) &&\n                            columnIndex === 1 && (\n                              <FaInfoCircle\n                                className=\"tableInfoIcon\"\n                                onClick={(e) => {\n                                  handleInfoClick(acc.kpi);\n                                  // setTotaldata(acc.kpi);\n                                  setAnchorEl(e.currentTarget);\n                                }}\n\n                              />\n                            )}\n                        </td>\n                      );\n                      alldata.push(acc[inEle]);\n                    }\n                  });\n\n                  return <tr key={index}>{tabData}</tr>;\n                })}\n            </thead>\n          </table>\n\n          <div className=\"col-6\" style={{ width: \"49%\" }}>\n            <ResourceOverviewGraphs\n              filteredData={filteredData}\n              allHeaders={allHeaders}\n              alldata={alldata}\n            />\n          </div>\n        </div>\n      </div>\n      {anchorEl && (\n        <ResourceOverviewPopover\n          handleClose={handleClose}\n          anchorEl={anchorEl}\n          infoMessage={infoMessage}\n        />\n      )}\n    </div>\n  );\n}\n","import React, { useRef, useState } from \"react\";\nimport { MultiSelect } from \"react-multi-select-component\";\nimport DatePicker from \"react-datepicker\";\nimport {\n  FaChevronCircleDown,\n  FaChevronCircleUp,\n  FaSearch,\n  FaCheck,\n  FaCaretDown,\n} from \"react-icons/fa\";\nimport { CCollapse } from \"@coreui/react\";\nimport axios from \"axios\";\nimport { useEffect } from \"react\";\nimport { environment } from \"../../environments/environment\";\nimport moment from \"moment\";\nimport ResourceOverviewDisplayTable from \"./ResourceOverviewTable\";\nimport { Column } from \"ag-grid-community\";\nimport CellRendererPrimeReactDataTable from \"../PrimeReactTableComponent/CellRendererPrimeReactDataTable\";\nimport { GoPerson } from \"react-icons/go\";\nimport { VscChecklist } from \"react-icons/vsc\";\nimport Loader from \"../Loader/Loader\";\nimport ResourceOverviewEditableTable from \"./ResourceOverviewEditableTable\";\nimport { BiCheck } from \"react-icons/bi\";\nimport fte_notice from \"../../assets/images/empstatusIcon/fte_notice.png\";\nimport ErrorLogTable from \"../Administration/ErrorLogsTable\";\nimport { AiFillWarning } from \"react-icons/ai\";\nimport { useLocation } from \"react-router-dom\";\nimport GlobalHelp from \"../PrimeReactTableComponent/GlobalHelp\";\nimport SavedSearchGlobal from \"../PrimeReactTableComponent/SavedSearchGlobal\";\nimport ScreenBreadcrumbs from \"../Common/ScreenBreadcrumbs\";\n\nfunction ResourceOverview(props) {\n  const { permission } = props;\n  // console.log(permission[1].is_write, \"permission\");\n  const loggedUserId = localStorage.getItem(\"resId\");\n  const loggedUserName = localStorage.getItem(\"resName\");\n  // const [startDate, setStartDate] = useState();\n\n  const HelpPDFName = \"RMGResourceOverview.pdf\";\n  const HelpHeader = \"Resource overview Help\";\n\n  const [visible, setVisible] = useState(false);\n  const [cheveronIcon, setCheveronIcon] = useState(FaChevronCircleUp);\n  const [business, setBusiness] = useState([]);\n  const [selectedBusiness, setSelectedBusiness] = useState([]);\n  const [data, setData] = useState([]);\n  const [employeedata, setEmployeeData] = useState([]);\n  const [id, setId] = useState([]);\n  const [loader, setLoader] = useState(false);\n  const [resid, setresid] = useState([]);\n  const [resourcname, setResourceName] = useState([]);\n  const [resCategory, setResCategory] = useState([]);\n  console.log(resCategory);\n  const [resourcedata, setResourcedata] = useState([]);\n  const [resourceid, setResourceId] = useState(0);\n  const [bodyData, setBodyData] = useState([]);\n  const [headerData, setHeaderData] = useState([]);\n  const [linkColumns, setLinkColumns] = useState([]);\n  const [linkColumnsRoutes, setLinkColumnsRoutes] = useState([]);\n  const [exportData, setExportData] = useState([]);\n  const [employeeid, setEmployeeId] = useState(\"\");\n  const [dispay, setDisplay] = useState(false);\n  const baseUrl = environment.baseUrl;\n  let rows = 25;\n  const [searching, setsearching] = useState(false);\n  const [country, setCountry] = useState([]);\n  const [selectedCountry, setSelectedCountry] = useState([]);\n  // let date1 = moment(startDate).format(\"yyyy-MM-DD\");\n  const [column, setColumn] = useState([]);\n  const [col, setCol] = useState([]);\n  const [tableData, setTableData] = useState([]);\n  const [validationmessage, setValidationMessage] = useState(false);\n  const [displayTableState, setDisplayTableState] = useState(false);\n  const [clicked, setClicked] = useState(false);\n  const [addmsg, setAddmsg] = useState(false);\n  const [empTable, setEmpTable] = useState(false);\n  const [deleteMessage, setDeleteMessage] = useState(false);\n  const [saveactionmessage, setSaveActionMessage] = useState(false);\n  const [headerdate, setHeaderDate] = useState([]);\n  const [totaldata, setTotaldata] = useState([]);\n  useEffect(() => { }, [totaldata]);\n  const tempElement = document.createElement(\"div\");\n  tempElement.innerHTML = totaldata;\n  const extractedText = tempElement.textContent.trim();\n  const ref = useRef([]);\n  const graphRef = useRef(null);\n  const [graphKey, setGraphKey] = useState(0);\n  useEffect(() => {\n    if (graphKey && graphRef.current) {\n      graphRef.current.scrollIntoView({ behavior: \"instant\" });\n    }\n  }, [graphKey]);\n  const graphRef1 = useRef(null);\n  const [graphKey1, setGraphKey1] = useState(0);\n  useEffect(() => {\n    if (graphKey1 && graphRef1.current) {\n      graphRef1.current.scrollIntoView({ behavior: \"instant\" });\n    }\n  }, [graphKey1]);\n\n  const abortController = useRef(null);\n  const ArrowRenderer = ({ expanded }) => (\n    <>\n      {expanded ? (\n        <FaCaretDown className=\"chevronIcon\" />\n      ) : (\n        <FaCaretDown className=\"chevronIcon\" />\n      )}\n    </>\n  );\n\n  const filterMondays = (date) => {\n    return date.getDay() === 6;\n  };\n  const getCurrentSaturday = () => {\n    const now = new Date();\n    const dayOfWeek = now.getDay();\n    const diff = now.getDate() - dayOfWeek + 6; // Add 6 instead of subtracting\n    return new Date(now.setDate(diff));\n  };\n\n  const defaultDate = getCurrentSaturday();\n  const [date, SetDate] = useState(defaultDate);\n  const initialValue = {\n    BuIds: \"170,211,123,82,168,207,212,18,213,49,149,208\",\n    CountryIds: \"-1\",\n    StartDate: moment(date).format(\"yyyy-MM-DD\"),\n    Duration: \"4\",\n    resType: \"0\",\n  };\n  const today = new Date();\n  const lastFriday = new Date(\n    today.getTime() - ((today.getDay() + 1) % 7) * 24 * 60 * 60 * 1000\n  );\n\n  const pageurl = \"http://10.11.12.149:3000/#/rmg/bench\";\n  const page_Name = \"Resource Overview\";\n  const location = useLocation();\n  const searchParams = new URLSearchParams(location.search);\n  const SavedSearchId = searchParams.get(\"id\");\n  const [editmsg, setEditAddmsg] = useState(false);\n  const [filterData, setFilterData] = useState([]);\n\n  const FilterData = () => {\n    axios({\n      method: \"get\",\n      url:\n        baseUrl +\n        `/dashboardsms/savedsearch/FiltersData?saved_search_id=${SavedSearchId === null ? 0 : SavedSearchId\n        }`,\n    }).then(function (res) {\n      const getData = res.data;\n      setFilterData(getData);\n      console.log(getData + \"in line 881...\");\n    });\n  };\n\n  useEffect(() => {\n    FilterData();\n  }, []);\n  const [formData, setFormData] = useState({\n    BuIds: \"170,211,123,82,168,207,212,18,213,49,149,208,243\",\n    CountryIds: \"-1\",\n    StartDate: moment(date).format(\"yyyy-MM-DD\"),\n    Duration: \"4\",\n    resType: \"0\",\n  });\n  const cat = { id: resid, rmg_bench_type_id: \"\" };\n  const [categoryData, setCategoryData] = useState(cat);\n  const [actioncategory, setActioncategory] = useState();\n\n  useEffect(() => {\n    GetEmployees();\n  }, [id, headerdate]);\n  const handleAbort = () => {\n    abortController.current && abortController.current.abort();\n    setLoader(false);\n  };\n\n  const handleChange = (e) => {\n    const { id, value } = e.target;\n    setCategoryData((prev) => ({ ...prev, [id]: value }));\n    axios\n      .post(baseUrl + `/fullfilmentms/resourceoverview/updateResourceAlloc`, {\n        id: resid,\n        rmg_bench_type_id: value,\n      })\n      .then((response) => {\n        axios\n          .post(\n            baseUrl +\n            `/fullfilmentms/resourceoverview/updateRMGResAllocActionItem?resourceId=${resid}`\n          )\n          .then((response) => {\n            setAddmsg(true);\n            setLoader(true);\n            setTimeout(() => {\n              setAddmsg(false);\n              setLoader(false);\n            }, 4000);\n            GetEmployees();\n          })\n          .catch((error) => {\n            console.log(error);\n          });\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n  //=====================\n  const Getcategory = (e) => {\n    axios({\n      method: \"get\",\n      url: baseUrl + `/fullfilmentms/resourceoverview/actionitemtypes`,\n    }).then((res) => {\n      var category = res.data;\n      setActioncategory(category);\n    });\n  };\n  useEffect(() => {\n    Getcategory();\n  }, []);\n\n  //===================Getting ResourceId================\n  const getResourceid = () => {\n    axios({\n      method: \"get\",\n      url: baseUrl + `/ProjectMS/defectphases/getresourceid?id=${loggedUserId}`,\n    }).then(function (response) {\n      var res = response.data;\n      setResourceId(res);\n    });\n  };\n  useEffect(() => {\n    getResourceid();\n  }, [resourceid]);\n  //================\n  const handleClick = async () => {\n    setEmpTable(false);\n    setColumn([]);\n    setTableData([]);\n    const loaderTime = setTimeout(() => {\n      setLoader(true);\n    }, 2000);\n    axios({\n      method: \"post\",\n      url: baseUrl + `/fullfilmentms/resourceoverview/getResourceTrendingData`,\n      data: {\n        // departments:\n        //   formData.BuIds == \"170,211,123,82,168,207,212,18,213,49,149,208,0\" ? \"-1\" : formData.BuIds,\n        departments:\n          formData.BuIds === \"170,211,123,82,168,207,212,18,213,49,149,208,0\" ||\n            formData.BuIds === \"\"\n            ? \"-1\"\n            : formData.BuIds,\n\n        country: formData.CountryIds == \"\" ? \"-1\" : formData.CountryIds,\n        from: formData.StartDate,\n        duration: formData.Duration,\n        resType: formData.resType,\n      },\n      headers: { \"Content-Type\": \"application/json\" },\n    }).then((response) => {\n      const data = response.data;\n      axios({\n        method: \"get\",\n        url:\n          baseUrl +\n          `/fullfilmentms/resourceoverview/getheaders?ReportRunId=${data.reportRunId}`,\n      }).then((res1) => {\n        let header = res1.data.val;\n        let splt = header?.replaceAll(\"'\", \"\");\n        let st = splt?.split(\",\");\n        setCol(st);\n        let newArray = st?.map((element) => element.trim());\n        setColumn(newArray);\n        setClicked(true);\n      });\n\n      setTableData(data);\n      setLoader(false);\n      clearTimeout(loaderTime);\n      setVisible(!visible);\n      visible\n        ? setCheveronIcon(FaChevronCircleUp)\n        : setCheveronIcon(FaChevronCircleDown);\n    });\n    setDisplayTableState(true);\n  };\n\n  const getBusinessUnit = () => {\n    axios\n      .get(baseUrl + `/CostMS/cost/getDepartments`)\n      .then((Response) => {\n        let countries = [];\n        let data = Response.data;\n        // data.push({ value: 243, label: \"Tier2\" });\n        data.push({ value: 999, label: \"Non-Revenue Units\" });\n\n        data.length > 0 &&\n          data.forEach((e) => {\n            let countryObj = {\n              label: e.label,\n              value: e.value,\n            };\n            // e.label == \"Tier2\" ? \"\" : \n            countries.push(countryObj);\n          });\n        setBusiness(countries);\n        setSelectedBusiness(countries.filter((option) => option.value !== 999));\n\n        // setSelectedBusiness(countries);\n      })\n      .catch((error) => console.log(error));\n  };\n\n  //-------------Getting Country-------------\n\n  const getCountries = () => {\n    axios\n      .get(baseUrl + `/CostMS/cost/getCountries`)\n      .then((Response) => {\n        let countries = [];\n        let data = Response.data;\n\n        // data.push({ id: 0, country_name: \"<<Others>>\" });\n        data.length > 0 &&\n          data.forEach((e) => {\n            let countryObj = {\n              label: e.country_name,\n              value: e.id,\n            };\n\n            countries.push(countryObj);\n          });\n        setCountry(countries);\n        setSelectedCountry(countries);\n      })\n      .catch((error) => console.log(error));\n  };\n\n  useEffect(() => {\n    getBusinessUnit();\n    getCountries();\n  }, []);\n\n  useEffect(() => {\n    data[0] && setHeaderData(JSON.parse(JSON.stringify(data[0])));\n  }, [data]);\n\n  useEffect(() => {\n    if (clicked && column.length === 0 && tableData) {\n      let newArray = col.map((element) => element.trim());\n      setColumn(newArray);\n    }\n  }, [clicked, tableData, formData.Duration]);\n\n  const onClickHandler = (a, b) => {\n    // setEmpTable(false)\n    setDisplay(false);\n    setLoader(false);\n    const temp = {};\n    temp[\"a\"] = a;\n    temp[\"b\"] = b;\n    // GetEmployees(temp)\n    // setDisplayTableState(true);\n    // setEmpTable(true)\n    // setEmpTable(true)\n\n    // setGraphKey((prevKey) => prevKey + 1);\n  };\n\n  const GetEmployees = () => {\n    axios({\n      method: \"post\",\n      url:\n        baseUrl +\n        `/fullfilmentms/resourceoverview/getRMGHcDetailsView?kpi=${id}&weekDt=${headerdate}&sessKey=${tableData.sessKey}&reportRunId=${tableData.reportRunId}`,\n    })\n      .then((response) => {\n        const GetData = response.data;\n        for (let i = 0; i < GetData.length; i++) {\n          GetData[i][\"resDOJ\"] =\n            GetData[i][\"resDOJ\"] == null\n              ? \"\"\n              : moment(GetData[i][\"resDOJ\"]).format(\"DD-MMM-YYYY\");\n          GetData[i][\"actionItemDate\"] =\n            GetData[i][\"actionItemDate\"] == null\n              ? \"\"\n              : moment(GetData[i][\"actionItemDate\"]).format(\"DD-MMM-YYYY\");\n          GetData[i][\"actionItemEffDt\"] =\n            GetData[i][\"actionItemEffDt\"] == null\n              ? \"\"\n              : moment(GetData[i][\"actionItemEffDt\"]).format(\"DD-MMM-YYYY\");\n          GetData[i][\"rollOfDate\"] =\n            GetData[i][\"rollOfDate\"] == null\n              ? \"\"\n              : moment(GetData[i][\"rollOfDate\"]).format(\"DD-MMM-YYYY\");\n          GetData[i][\"aging\"] =\n            GetData[i][\"aging\"] == 0 ? \"NA\" : GetData[i][\"aging\"];\n        }\n        let headerData = [\n          {\n            employee_number: \"Emp ID\",\n            resName: \"Emp Name\",\n            resDOJ: \"DOJ\",\n            resCategory: \"Res Cat\",\n            practice: \"Practice\",\n            subPractice: \"SubPractice\",\n            supervisor: \"Supervisor\",\n            projects: \"Projects\",\n            resAlloc: \"Allocs\",\n            rollOfDate: \"Roll of Date\",\n            aging: \"Ageing\",\n            workLocation: \"Work Location\",\n            designation: \"Designation\",\n            resEmail: \"Email\",\n            restType: \"Res Type\",\n            skillName: \"Skills\",\n            actionItem: \"Action   Item\",\n            actionItemDate: \"Action Item Date\",\n            actionItemEffDt: \"Action Item Eff Dt\",\n          },\n        ];\n        let hData = [];\n        let bData = [];\n        for (let index = 0; index < GetData.length; index++) {\n          if (index == 0) {\n            hData.push(GetData[index]);\n          } else {\n            bData.push(GetData[index]);\n          }\n        }\n        setBodyData(bData);\n        const sorting = headerData.concat(bData);\n        const sortedEmpNumber = GetData.sort(function (a, b) {\n          var nameA = a.employee_number.toUpperCase();\n          var nameB = b.employee_number.toUpperCase();\n          if (nameA < nameB) {\n            return -1; //nameA comes first\n          }\n          if (nameA > nameB) {\n            return 1; // nameB comes first\n          }\n          return 0; // names must be equal\n        });\n        setEmpTable(true);\n        setEmployeeData(headerData.concat(sortedEmpNumber));\n        setGraphKey((prevKey) => prevKey + 1);\n        setLoader(false);\n        setTimeout(() => {\n          setLoader(false);\n        }, 100);\n      })\n      .catch(function (error) {\n        setLoader(false);\n      });\n  };\n\n  const EmpId = (employeedata) => {\n    return (\n      <div\n        className=\"ellipsis\"\n        style={{ textAlign: \"center\" }}\n        data-toggle=\"tooltip\"\n        title={employeedata.employee_number}\n      >\n        {employeedata.employee_number}\n      </div>\n    );\n  };\n  const EmpName = (employeedata) => {\n    return (\n      <div\n        className=\"ellipsis\"\n        data-toggle=\"tooltip\"\n        title={employeedata.resName}\n      >\n        {employeedata.resName}\n      </div>\n    );\n  };\n  const DOJ = (employeedata) => {\n    return (\n      <div\n        className=\"ellipsis\"\n        data-toggle=\"tooltip\"\n        title={employeedata.resDOJ}\n      >\n        {employeedata.resDOJ}\n      </div>\n    );\n  };\n  const ResCAt = (employeedata) => {\n    return (\n      <div\n        className=\"ellipsis\"\n        data-toggle=\"tooltip\"\n        title={employeedata.resCategory}\n      >\n        {employeedata.resAlloc >= employeedata.resNetCap\n          ? 'Fully Allocated' : employeedata.resCategory\n        }\n      </div>\n    );\n  };\n  const Practice = (employeedata) => {\n    return (\n      <div\n        className=\"ellipsis\"\n        data-toggle=\"tooltip\"\n        title={employeedata.practice}\n      >\n        {employeedata.practice}\n      </div>\n    );\n  };\n  const SubPractice = (employeedata) => {\n    return (\n      <div\n        className=\"ellipsis\"\n        data-toggle=\"tooltip\"\n        title={employeedata.subPractice}\n      >\n        {employeedata.subPractice}\n      </div>\n    );\n  };\n  const Supervisor = (employeedata) => {\n    return (\n      <div\n        className=\"ellipsis\"\n        data-toggle=\"tooltip\"\n        title={employeedata.supervisor}\n      >\n        {employeedata.supervisor}\n      </div>\n    );\n  };\n  const Projects = (employeedata) => {\n    return (\n      <div\n        className=\"ellipsis\"\n        data-toggle=\"tooltip\"\n        title={employeedata.projects}\n      >\n        {employeedata.projects}\n      </div>\n    );\n  };\n\n\n  const Allocs = (employeedata) => {\n    return (\n      <div\n        className=\"ellipsis\"\n        style={{ textAlign: \"right\" }}\n        data-toggle=\"tooltip\"\n        title={employeedata.resAlloc}\n      >\n        {employeedata.resAlloc}\n      </div>\n    );\n  };\n  const Aging = (employeedata) => {\n    return (\n      <div\n        className=\"ellipsis\"\n        style={{ textAlign: \"right\" }}\n        data-toggle=\"tooltip\"\n        title={employeedata.aging}\n      >\n        {employeedata.aging}\n      </div>\n    );\n  };\n  const WorkLocation = (employeedata) => {\n    return (\n      <div\n        className=\"ellipsis\"\n        data-toggle=\"tooltip\"\n        title={employeedata.workLocation}\n      >\n        {employeedata.workLocation}\n      </div>\n    );\n  };\n  const Designation = (employeedata) => {\n    return (\n      <div\n        className=\"ellipsis\"\n        data-toggle=\"tooltip\"\n        title={employeedata.designation}\n      >\n        {employeedata.designation}\n      </div>\n    );\n  };\n  const ResEmail = (employeedata) => {\n    return (\n      <div\n        className=\"ellipsis\"\n        data-toggle=\"tooltip\"\n        title={employeedata.resEmail}\n      >\n        {employeedata.resEmail}\n      </div>\n    );\n  };\n  const RestType = (employeedata) => {\n    return (\n      <div\n        className=\"ellipsis\"\n        style={{ textAlign: \"center\" }}\n        data-toggle=\"tooltip\"\n        title={employeedata.restType}\n      >\n        {employeedata.restType}\n      </div>\n    );\n  };\n  const SkillName = (employeedata) => {\n    return (\n      <div\n        className=\"ellipsis\"\n        data-toggle=\"tooltip\"\n        title={employeedata.skillName}\n      >\n        {employeedata.skillName}\n      </div>\n    );\n  };\n\n  const ActionItem = (employeedata) => {\n    return (\n      <div\n        className=\"ellipsis\"\n        // style={{ width: '50px !important' }}\n        data-toggle=\"tooltip\"\n        title={employeedata.actionItem}\n      >\n        {employeedata.actionItem}\n      </div>\n    );\n  };\n\n  const ActionItemDate = (employeedata) => {\n    return (\n      <div\n        className=\"ellipsis\"\n        data-toggle=\"tooltip\"\n        style={{ textAlign: \"center\" }}\n\n        title={employeedata.actionItemDate}\n      >\n        {employeedata.actionItemDate}\n      </div>\n    );\n  };\n  const ActionItemEffDt = (employeedata) => {\n    return (\n      <div\n        className=\"ellipsis\"\n        style={{ textAlign: \"center\" }}\n        data-toggle=\"tooltip\"\n        title={employeedata.actionItemEffDt}\n      >\n        {employeedata.actionItemEffDt}\n      </div>\n    );\n  };\n\n  const LinkTemplate = (employeedata) => {\n    let rou = linkColumns[0];\n    return (\n      <>\n        <div\n\n        >\n          {employeedata.isInNotice == 1 ? (\n            <div className=\"rollOffTableIcon green ellipsis\">\n              <img\n                src={fte_notice}\n                alt=\"(fte_notice_icon)\"\n                style={{ height: \"12px\" }}\n                title=\"Employee in notice period\"\n              />\n              <a\n                onClick={(e) => {\n                  handleClick1(employeedata.resId);\n                  setDisplay(true);\n                  setresid(employeedata.resId);\n                  setResourceName(employeedata.resName);\n                  setResCategory(employeedata.resCategory);\n                }}\n              >\n                <VscChecklist\n                  size=\"1.4em\"\n                  title=\"Action Items\"\n                  cursor=\"pointer\"\n                />\n              </a>{\" \"}\n              &nbsp;\n              <span title={employeedata.resName}>{employeedata.resName}</span>\n            </div>\n          ) : employeedata.restType == \"CN Employee\" ? (\n            <div\n              className=\"rollOffTableIcon green ellipsis\"\n              title=\"Active Employee\"\n            >\n              <GoPerson className=\"icon\" />\n              <a\n                onClick={(e) => {\n                  handleClick1(employeedata.resId);\n                  setDisplay(true);\n                  setresid(employeedata.resId);\n                  setResourceName(employeedata.resName);\n                  setResCategory(employeedata.resCategory);\n                }}\n              >\n                <VscChecklist\n                  size=\"1.4em\"\n                  title=\"Action Items\"\n                  cursor=\"pointer\"\n                />\n              </a>{\" \"}\n              &nbsp;\n              <span className=\"ellipsis\" title={employeedata.resName}>\n                {employeedata.resName}\n              </span>\n            </div>\n          ) : employeedata.restType == \"Employed - Full Time\" ? (\n            <div\n              className=\"rollOffTableIcon green ellipsis\"\n              title=\"Active Employee\"\n            >\n              <GoPerson className=\"icon\" />\n              <a\n                onClick={(e) => {\n                  handleClick1(employeedata.resId);\n                  setDisplay(true);\n                  setresid(employeedata.resId);\n                  setResourceName(employeedata.resName);\n                  setResCategory(employeedata.resCategory);\n                }}\n              >\n                <VscChecklist\n                  size=\"1.4em\"\n                  title=\"Action Items\"\n                  cursor=\"pointer\"\n                />\n              </a>{\" \"}\n              &nbsp;\n              <span className=\"ellipsis\" title={employeedata.resName}>\n                {employeedata.resName}\n              </span>\n            </div>\n          ) : employeedata.restType == \"Gardening Leave\" ? (\n            <div\n              className=\"rollOffTableIcon green ellipsis\"\n              title=\"Active Employee\"\n            >\n              <GoPerson className=\"icon\" />\n              <a\n                onClick={(e) => {\n                  handleClick1(employeedata.resId);\n                  setDisplay(true);\n                  setresid(employeedata.resId);\n                  setResourceName(employeedata.resName);\n                  setResCategory(employeedata.resCategory);\n                }}\n              >\n                <VscChecklist\n                  size=\"1.4em\"\n                  title=\"Action Items\"\n                  cursor=\"pointer\"\n                />\n              </a>{\" \"}\n              &nbsp;\n              <span className=\"ellipsis\" title={employeedata.resName}>\n                {employeedata.resName}\n              </span>\n            </div>\n          ) : employeedata.restType == \"Maternity Leave\" ? (\n            <div\n              className=\"rollOffTableIcon green ellipsis\"\n              title=\"Active Employee\"\n            >\n              <GoPerson className=\"icon\" />\n              <a\n                onClick={(e) => {\n                  handleClick1(employeedata.resId);\n                  setDisplay(true);\n                  setresid(employeedata.resId);\n                  setResourceName(employeedata.resName);\n                  setResCategory(employeedata.resCategory);\n                }}\n              >\n                <VscChecklist\n                  size=\"1.4em\"\n                  title=\"Action Items\"\n                  cursor=\"pointer\"\n                />\n              </a>{\" \"}\n              &nbsp;\n              <span className=\"ellipsis\" title={employeedata.resName}>\n                {employeedata.resName}\n              </span>\n            </div>\n          ) : employeedata.restType == \"Contractor\" ? (\n            <div\n              className=\"rollOffTableIcon amber ellipsis\"\n              title=\"Active Contractor\"\n            >\n              <GoPerson className=\"icon\" />\n              <a\n                onClick={(e) => {\n                  handleClick1(employeedata.resId);\n                  setDisplay(true);\n                  setresid(employeedata.resId);\n                  setResourceName(employeedata.resName);\n                  setResCategory(employeedata.resCategory);\n                }}\n              >\n                <VscChecklist\n                  size=\"1.4em\"\n                  title=\"Action Items\"\n                  cursor=\"pointer\"\n                />\n              </a>{\" \"}\n              &nbsp;\n              <span className=\"ellipsis\" title={employeedata.resName}>\n                {employeedata.resName}\n              </span>\n            </div>\n          ) : employeedata.restType == \"UK Employee\" ? (\n            <div\n              className=\"rollOffTableIcon green ellipsis\"\n              title=\"Active Employee\"\n            >\n              <GoPerson className=\"icon\" />\n              <a\n                onClick={(e) => {\n                  handleClick1(employeedata.resId);\n                  setDisplay(true);\n                  setresid(employeedata.resId);\n                  setResourceName(employeedata.resName);\n                  setResCategory(employeedata.resCategory);\n                }}\n              >\n                <VscChecklist\n                  size=\"1.4em\"\n                  title=\"Action Items\"\n                  cursor=\"pointer\"\n                />\n              </a>{\" \"}\n              &nbsp;\n              <span className=\"ellipsis\" title={employeedata.resName}>\n                {employeedata.resName}\n              </span>\n            </div>\n          ) : employeedata.restType == \"Sub-Contractor\" ? (\n            <div\n              className=\"rollOffTableIcon amber ellipsis\"\n              title=\"Active Contractor\"\n            >\n              <GoPerson className=\"icon\" />\n              <a\n                onClick={(e) => {\n                  handleClick1(employeedata.resId);\n                  setDisplay(true);\n                  setresid(employeedata.resId);\n                  setResourceName(employeedata.resName);\n                  setResCategory(employeedata.resCategory);\n                }}\n              >\n                <VscChecklist\n                  size=\"1.4em\"\n                  title=\"Action Items\"\n                  cursor=\"pointer\"\n                />\n              </a>{\" \"}\n              &nbsp;\n              <span title={employeedata.resName}>{employeedata.resName}</span>\n            </div>\n          ) : employeedata.restType == \"US Employee\" ? (\n            <div\n              className=\"rollOffTableIcon green ellipsis\"\n              title=\"Active Employee\"\n            >\n              <GoPerson className=\"icon\" />\n              <a\n                onClick={(e) => {\n                  handleClick1(employeedata.resId);\n                  setDisplay(true);\n                  setresid(employeedata.resId);\n                  setResourceName(employeedata.resName);\n                  setResCategory(employeedata.resCategory);\n                }}\n              >\n                <VscChecklist\n                  size=\"1.4em\"\n                  title=\"Action Items\"\n                  cursor=\"pointer\"\n                />\n              </a>{\" \"}\n              &nbsp;\n              <span title={employeedata.resName}>{employeedata.resName}</span>\n            </div>\n          ) : employeedata.restType == \"DE Employee\" ? (\n            <div\n              className=\"rollOffTableIcon green ellipsis\"\n              title=\"Active Employee\"\n            >\n              <GoPerson className=\"icon\" />\n              <a\n                onClick={(e) => {\n                  handleClick1(employeedata.resId);\n                  setDisplay(true);\n                  setresid(employeedata.resId);\n                  setResourceName(employeedata.resName);\n                  setResCategory(employeedata.resCategory);\n                }}\n              >\n                <VscChecklist size=\"1.4em\" title=\"Action Items\" />\n              </a>{\" \"}\n              &nbsp;\n              <span title={employeedata.resName}>{employeedata.resName}</span>\n            </div>\n          ) : (\n            \"\"\n          )}\n        </div>\n      </>\n    );\n  };\n  const dynamicColumns = Object.keys(headerData)?.map((col, i) => {\n    return (\n      <Column\n        sortable\n        key={col}\n        body={\n          // col == \"SNo\" ? SnoAlign :\n\n          (col == \"resName\" && LinkTemplate) ||\n          (col == \"employee_number\" && EmpId) ||\n          (col == \"resDOJ\" && DOJ) ||\n          (col == \"resCategory\" && ResCAt) ||\n          (col == \"practice\" && Practice) ||\n          (col == \"resAlloc\" && Allocs) ||\n          (col == \"aging\" && Aging) ||\n          (col == \"workLocation\" && WorkLocation) ||\n          (col == \"designation\" && Designation) ||\n          (col == \"resEmail\" && ResEmail) ||\n          (col == \"restType\" && RestType) ||\n          (col == \"skillName\" && SkillName) ||\n          (col == \"actionItem\" && ActionItem) ||\n          (col == \"actionItemDate\" && ActionItemDate) ||\n          (col == \"actionItemEffDt\" && ActionItemEffDt) ||\n          (col == \"subPractice\" && SubPractice) ||\n          (col == \"supervisor\" && Supervisor) ||\n          (col == \"projects\" && Projects)\n          // \n        }\n        field={col}\n        header={headerData[col]}\n      />\n    );\n  });\n  useEffect(() => {\n    employeedata[0] &&\n      setHeaderData(JSON.parse(JSON.stringify(employeedata[0])));\n    let imp = [\"XLS\"];\n    setExportData(imp);\n  }, [employeedata]);\n\n  //=======================Editable Table Api==========================\n  const handleClick1 = (id) => {\n    setLoader(false);\n    const idString = JSON.stringify(id);\n    setEmployeeId(id);\n    axios({\n      method: \"get\",\n      url:\n        baseUrl +\n        `/fullfilmentms/resourceoverview/ActionTable?resource_id=${idString}`,\n      //  baseUrl + `/fullfilmentms/resourceoverview/getresourceactions?resIds=${resid}&fromDt=2020-01-01&toDt=2020-01-01`,\n    }).then((response) => {\n      let GetData = response.data;\n      setResourcedata(GetData);\n      setLoader(false);\n      setGraphKey1((prevKey) => prevKey + 1);\n      setValidationMessage(false);\n    });\n  };\n  //============================================================================\n  const [routes, setRoutes] = useState([]);\n  let textContent = \"Fullfilment\";\n  let currentScreenName = [\"Bench Metrics\", \"Resource Overview\"];\n\n  useEffect(() => {\n    getMenus();\n  }, []);\n\n  const getMenus = () => {\n    // setMenusData\n\n    axios({\n      method: \"GET\",\n      url: baseUrl + `/CommonMS/master/getMenus?loggedUserId=${loggedUserId}`,\n    }).then((resp) => {\n      let data = resp.data;\n\n      data.forEach((item) => {\n        if (item.display_name === textContent) {\n          setRoutes([item]);\n        }\n      });\n    });\n  };\n  const generateDropdownLabel = (selectedOptions, allOptions) => {\n    const selectedValues = selectedOptions.map((option) => option.value);\n    const allValues = allOptions.map((item) => item.value);\n\n    if (selectedValues.length === allValues.length) {\n      return \"<< ALL >>\";\n    } else {\n      return selectedOptions.map((option) => option.label).join(\", \");\n    }\n  };\n  return (\n    <div>\n      <div className=\"col-md-12\">\n        {editmsg ? (\n          <div className=\"statusMsg success\">\n            <span className=\"errMsg\">\n              <BiCheck size=\"1.4em\" /> &nbsp; Search created successfully.\n            </span>\n          </div>\n        ) : (\n          \"\"\n        )}\n        <div className=\"pageTitle\">\n          <div className=\"childOne\"></div>\n          <div className=\"childTwo\">\n            <h2>Resource Overview</h2>\n          </div>\n          <div className=\"childThree\"></div>\n        </div>\n      </div>\n      <ScreenBreadcrumbs\n        routes={routes}\n        currentScreenName={currentScreenName}\n      />\n\n      <div className=\"group mb-3 customCard\">\n        <div className=\"col-md-12 collapseHeader\">\n          <h2>Search Filters</h2>\n          <div className=\"helpBtn\">\n            <GlobalHelp pdfname={HelpPDFName} name={HelpHeader} />\n          </div>\n          <div className=\"saveBtn\">\n            <SavedSearchGlobal\n              setEditAddmsg={setEditAddmsg}\n              pageurl={pageurl}\n              page_Name={page_Name}\n              payload={formData}\n            />\n          </div>\n          &nbsp;\n          <div\n            onClick={() => {\n              setVisible(!visible);\n\n              visible\n                ? setCheveronIcon(FaChevronCircleUp)\n                : setCheveronIcon(FaChevronCircleDown);\n            }}\n          >\n            <span>{cheveronIcon}</span>\n          </div>\n        </div>\n        <CCollapse visible={!visible}>\n          <div className=\"group-content row\">\n            <div className=\" col-md-3 mb-2\">\n              <div className=\"form-group row\">\n                <label className=\"col-5\" htmlFor=\"BuIds\">\n                  Business Unit\n                </label>\n                <span className=\"col-1 p-0\">:</span>\n                <div className=\"col-6\">\n                  <MultiSelect\n                    ArrowRenderer={ArrowRenderer}\n                    valueRenderer={generateDropdownLabel}\n                    id=\"BuIds\"\n                    value={selectedBusiness}\n                    options={business}\n                    hasSelectAll={true}\n                    isLoading={false}\n                    shouldToggleOnHover={false}\n                    disableSearch={false}\n                    overrideStrings={{\n                      selectAllFiltered: \"Select All\",\n                      selectSomeItems: \"<<Please Select>>\",\n                    }}\n                    disabled={false}\n                    onChange={(s) => {\n                      setSelectedBusiness(s);\n                      let filteredValues = [];\n                      s.forEach((d) => {\n                        filteredValues.push(d.value);\n                      });\n                      setFormData((prevVal) => ({\n                        ...prevVal,\n                        [\"BuIds\"]: filteredValues.toString(),\n                      }));\n                    }}\n                  />\n                </div>\n              </div>\n            </div>\n            <div className=\" col-md-3 mb-2\">\n              <div className=\"form-group row\">\n                <label className=\"col-5\" htmlFor=\"country\">\n                  Country\n                </label>\n                <span className=\"col-1 p-0\">:</span>\n                <div className=\"col-6 multiselect\">\n                  <MultiSelect\n                    ArrowRenderer={ArrowRenderer}\n                    valueRenderer={generateDropdownLabel}\n                    id=\"CountryIds\"\n                    options={country}\n                    hasSelectAll={true}\n                    value={selectedCountry}\n                    isLoading={false}\n                    shouldToggleOnHover={false}\n                    disableSearch={false}\n                    disabled={false}\n                    overrideStrings={{\n                      selectAllFiltered: \"Select All\",\n                      selectSomeItems: \"<<Please Select>>\",\n                    }}\n                    onChange={(e) => {\n                      setSelectedCountry(e);\n                      let filteredCountry = [];\n                      e.forEach((d) => {\n                        filteredCountry.push(d.value);\n                      });\n                      setFormData((prevVal) => ({\n                        ...prevVal,\n                        [\"CountryIds\"]: filteredCountry.toString(),\n                      }));\n                    }}\n                  />\n                </div>\n              </div>\n            </div>\n            <div className=\" col-md-3 mb-2\">\n              <div className=\"form-group row\">\n                <label className=\"col-5\" htmlFor=\"startweek\">\n                  Start Week&nbsp;<span className=\"error-text\">*</span>\n                </label>\n                <span className=\"col-1 p-0\">:</span>\n                <div className=\"col-6 datepicker\">\n                  <DatePicker\n                    name=\"StartDate\"\n                    minDate={lastFriday}\n                    id=\"StartDate\"\n                    showMonthDropdown\n                    showYearDropdown\n                    dropdownMode=\"select\"\n                    selected={date}\n                    onChange={(e) => {\n                      setFormData((prev) => ({\n                        ...prev,\n                        [\"StartDate\"]: moment(e).format(\"yyyy-MM-DD\"),\n                      }));\n                      SetDate(e);\n                    }}\n                    filterDate={filterMondays}\n                    dateFormat=\"dd-MMM-yyyy\"\n                    onKeyDown={(e) => {\n                      e.preventDefault();\n                    }}\n                  />\n                </div>\n              </div>\n            </div>\n            <div className=\" col-md-3 mb-2\">\n              <div className=\"form-group row\">\n                <label className=\"col-5\" htmlFor=\"duration\">\n                  Duration&nbsp;<span className=\"error-text\">*</span>\n                </label>\n                <span className=\"col-1 p-0\">:</span>\n                <div className=\"col-6 \">\n                  <select\n                    className=\"text\"\n                    id=\"Duration\"\n                    onChange={(e) => {\n                      const { value, id } = e.target;\n                      setFormData({ ...formData, [id]: value });\n                    }}\n                  >\n                    <option value=\"1\">1</option>\n                    <option value=\"2\">2</option>\n                    <option value=\"3\">3</option>\n                    <option value=\"4\" selected>\n                      4\n                    </option>\n                    <option value=\"5\">5</option>\n                    <option value=\"6\">6</option>\n                  </select>\n                </div>\n              </div>\n            </div>\n            <div className=\" col-md-3 mb-2\">\n              <div className=\"form-group row\">\n                <label className=\"col-5\" htmlFor=\"resType\">\n                  Res. Type\n                </label>\n                <span className=\"col-1 p-0\">:</span>\n                <div className=\"col-6\">\n                  <select\n                    className=\"text\"\n                    id=\"resType\"\n                    name=\"resType\"\n                    onChange={(e) => {\n                      const { value, id } = e.target;\n                      setFormData({ ...formData, [id]: value });\n                    }}\n                  >\n                    <option value=\"all\"> &lt;&lt;ALL&gt;&gt;</option>\n                    <option value=\"1\">Employee</option>\n                    <option value=\"2\">Contractors</option>\n                  </select>\n                </div>\n              </div>\n            </div>\n            <div className=\"col-md-12 col-sm-12 col-xs-12 btn-container center my-3 mb-2\">\n              {searching ? (\n                <button\n                  className=\"btn btn-primary\"\n                  type=\"button\"\n                  style={{ pointerEvents: \"none\" }}\n                >\n                  <span\n                    className=\"spinner-grow spinner-grow-sm\"\n                    role=\"status\"\n                    aria-hidden=\"true\"\n                  ></span>\n                  {loader ? <Loader handleAbort={handleAbort} /> : \"\"}\n                </button>\n              ) : (\n                <button\n                  className=\"btn btn-primary \"\n                  onClick={() => {\n                    handleClick(), setDisplay(false), setEmpTable(false);\n                  }}\n                >\n                  <FaSearch />\n                  Search\n                </button>\n              )}\n            </div>\n          </div>\n        </CCollapse>\n      </div>\n      {displayTableState && (\n        <ResourceOverviewDisplayTable\n          tableData={tableData}\n          column={column}\n          onClickHandler={onClickHandler}\n          setEmpTable={setEmpTable}\n          setId={setId}\n          id={id}\n          setHeaderDate={setHeaderDate}\n          setTotaldata={setTotaldata}\n        />\n      )}\n\n      {loader ? <Loader handleAbort={handleAbort} /> : \"\"}\n      {empTable && (\n        <div ref={graphRef} key={graphKey} className=\"resourceOverviewEmp\">\n          <b style={{ color: \"#297ab0\", fontSize: \"15px\" }}>\n            {extractedText} Details{\" \"}\n          </b>\n          <br />\n          <ErrorLogTable\n            data={employeedata}\n            dynamicColumns={dynamicColumns}\n            headerData={headerData}\n            setHeaderData={setHeaderData}\n            rows={rows}\n            exportData={exportData}\n            fileName=\"Resource Overview\"\n          />\n        </div>\n      )}\n      <br />\n      {dispay && (\n        <div className=\"col-md-12\" ref={graphRef1} key={graphKey1}>\n          {saveactionmessage ? (\n            <div className=\"statusMsg success\">\n              <BiCheck />\n              {\"Action Item Saved Successfully\"}\n            </div>\n          ) : (\n            \"\"\n          )}\n          {addmsg ? (\n            <div className=\"statusMsg success\">\n              <BiCheck />\n              {\"Updated Successfully\"}\n            </div>\n          ) : (\n            \"\"\n          )}\n          {deleteMessage ? (\n            <div className=\"statusMsg success\">\n              <span className=\"errMsg\">\n                <BiCheck size=\"1.4em\" strokeWidth={{ width: \"100px\" }} /> &nbsp;\n                Action Item Deleted successfully\n              </span>\n            </div>\n          ) : (\n            \"\"\n          )}\n          {validationmessage ? (\n            <div className=\"statusMsg error\">\n              <AiFillWarning />\n              {\"Please provide valid values for highlighted values\"}\n            </div>\n          ) : (\n            \"\"\n          )}\n          <div class=\"actionItemStyles\">\n            <div class=\"row\">\n              <div class=\"col-md-4\">\n                <label style={{ color: \"#2e88c5\" }}>\n                  Action Items ({resourcname})\n                </label>\n              </div>\n              <div class=\"col-md-4\">\n                <div className=\"form-group row\">\n                  <div className=\"col-6\">\n                    <label style={{ float: \"right\", color: \"#2e88c5\" }}>\n                      Resource Alloc Category :\n                    </label>\n                  </div>\n                  <div className=\"col-6\">\n                    <select\n                      id=\"ResourceAllocCategory\"\n                      onChange={(e) => handleChange(e)}\n                    >\n                      {actioncategory?.map((item) => (\n                        <option\n                          value={item.id}\n                          key={item.id}\n                          selected={item.lkup_name == resCategory}\n                        >\n                          {item.lkup_name}\n                        </option>\n                      ))}\n                    </select>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"resourceOverviewEmp\">\n            <ResourceOverviewEditableTable\n              resid={resid}\n              resourcedata={resourcedata}\n              setResourcedata={setResourcedata}\n              setResourceName={setResourceName}\n              handleClick1={handleClick1}\n              setDeleteMessage={setDeleteMessage}\n              setSaveActionMessage={setSaveActionMessage}\n              employeeid={employeeid}\n              setValidationMessage={setValidationMessage}\n              searching={searching}\n              validationmessage={validationmessage}\n              setsearching={setsearching}\n              permission={permission}\n            />\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default ResourceOverview;\n","import React, { useState, useEffect, useRef } from \"react\";\nimport { MultiSelect } from \"react-multi-select-component\";\nimport DatePicker from \"react-datepicker\";\nimport { environment } from \"../../environments/environment\";\nimport axios from \"axios\";\nimport moment from \"moment\";\nimport GlobalValidation from \"../ValidationComponent/GlobalValidation\";\n\nimport ResourceTrendingDisplayTable from \"./ResourceTrendingDisplayTable\";\nimport {\n  FaCaretDown,\n  FaChevronCircleDown,\n  FaChevronCircleUp,\n  FaSearch,\n} from \"react-icons/fa\";\nimport { CCollapse } from \"@coreui/react\";\nimport { useLocation } from \"react-router-dom\";\nimport GlobalHelp from \"../PrimeReactTableComponent/GlobalHelp\";\nimport SavedSearchGlobal from \"../PrimeReactTableComponent/SavedSearchGlobal\";\nimport ScreenBreadcrumbs from \"../Common/ScreenBreadcrumbs\";\nimport Loader from \"../Loader/Loader\";\nimport { AiFillWarning } from \"react-icons/ai\";\nfunction ResourceTrending() {\n\n  const [visible, setVisible] = useState(false);\n  const [data, setData] = useState([]);\n  const [cheveronIcon, setCheveronIcon] = useState(FaChevronCircleUp);\n  const [country, setCountry] = useState([]);\n  const [selectedCountry, setSelectedCountry] = useState([]);\n  const [business, setBusiness] = useState([]);\n  const [selectedBusiness, setSelectedBusiness] = useState([]);\n  const [loader, setLoader] = useState(false);\n  const [searching, setsearching] = useState(false);\n  const baseUrl = environment.baseUrl;\n  const [headerData, setHeaderData] = useState([]);\n  const [durationn, setDurationn] = useState(\"\");\n  const [column, setColumn] = useState([]);\n  const [col, setCol] = useState([]);\n  const [tableData, setTableData] = useState([]);\n  const [validationmessage, setValidationMessage] = useState(false);\n  const [displayTableState, setDisplayTableState] = useState(false);\n  const [weekDifference, setWeekDifference] = useState([1, 2, 3, 4]);\n  const [errorMsg, setErrorMsg] = useState(false);\n  const todayy = new Date();\n  const [clicked, setClicked] = useState(false);\n  const HelpPDFName = \"RMGResourceTrending.pdf\";\n  const HelpHeader = \"Resource Trending Help\";\n  const abortController = useRef(null);\n  const [startDate, setStartDate] = useState();\n  let fouthsat = \"\";\n  useEffect(() => {\n    // Calculate the date for the Saturday of the 5th last week\n    const currentDate = new Date();\n    const fifthLastSaturday = new Date(currentDate);\n\n    // Calculate the day of the week (0 = Sunday, 6 = Saturday)\n    const currentDayOfWeek = currentDate.getDay();\n    const daysUntilLastSaturday = (currentDayOfWeek + 1) % 7; // Adding 1 to start from Monday\n    const daysToSubtract = 4 * 7 + daysUntilLastSaturday; // 5 weeks + daysUntilLastSaturday\n\n    fifthLastSaturday.setDate(currentDate.getDate() - daysToSubtract);\n    fouthsat = fifthLastSaturday;\n    setStartDate(fifthLastSaturday);\n  }, []);\n\n  const handleAbort = () => {\n    abortController.current && abortController.current.abort();\n    setLoader(false);\n  };\n\n  function getPreviousWeekSaturday(tod) {\n    const dayOfWeek = tod.getDay();\n    // console.log(dayOfWeek, tod.getDate(), \"dayOfWeek\")\n    const daysSinceSaturday = dayOfWeek >= 5 ? dayOfWeek - 5 : dayOfWeek + 2; // Calculate days since last Saturday\n\n    const lastWeekSaturday = new Date(tod);\n    lastWeekSaturday.setDate(tod.getDate() - daysSinceSaturday);\n\n    return lastWeekSaturday;\n  }\n\n  const previousWeekSaturday = getPreviousWeekSaturday(todayy);\n\n  const initialValue = {\n    BuIds: \"170,211,123,82,168,207,212,18,213,49,149,208\",\n    CountryIds: \"-1\",\n    FromDate: moment(startDate).format(\"yyyy-MM-DD\"),\n    Duration: \"1\",\n    resType: \"0\",\n  };\n  const pageurl = \"http://10.11.12.149:3000/#/rmg/bench\";\n  const page_Name = \"Resource Trending\";\n  const location = useLocation();\n  const searchParams = new URLSearchParams(location.search);\n  const id = searchParams.get(\"id\");\n  const [editmsg, setEditAddmsg] = useState(false);\n  const [filterData, setFilterData] = useState([]);\n  const ref = useRef([]);\n  const ArrowRenderer = ({ expanded }) => (\n    <>\n      {expanded ? (\n        <FaCaretDown className=\"chevronIcon\" />\n      ) : (\n        <FaCaretDown className=\"chevronIcon\" />\n      )}\n    </>\n  );\n\n  const generateDropdownLabel = (selectedOptions, allOptions) => {\n    const selectedValues = selectedOptions.map((option) => option.value);\n    const allValues = allOptions.map((item) => item.value);\n\n    if (selectedValues.length === allValues.length) {\n      return \"<< ALL >>\";\n    } else {\n      return selectedOptions.map((option) => option.label).join(\", \");\n    }\n  };\n  const FilterData = () => {\n    axios({\n      method: \"get\",\n      url:\n        baseUrl +\n        `/dashboardsms/savedsearch/FiltersData?saved_search_id=${id === null ? 0 : id\n        }`,\n    }).then(function (res) {\n      const getData = res.data;\n      setFilterData(getData);\n      console.log(getData + \"in line 881...\");\n    });\n  };\n\n  useEffect(() => {\n    FilterData();\n  }, []);\n  const [formData, setFormData] = useState({\n    BuIds: \"-1\",\n    CountryIds: \"-1\",\n    FromDate: moment(startDate).format(\"yyyy-MM-DD\"),\n    Duration: \"4\",\n    resType: \"0\",\n  });\n  console.log(\"formdate...\", startDate);\n  let date1 = moment(startDate).format(\"yyyy-MM-DD\");\n  useEffect(() => {\n    setFormData(() => {\n      if (id != null) {\n        return {\n          BuIds: filterData.BuIds,\n          CountryIds: filterData.CountryIds,\n          FromDate: filterData.FromDate,\n          Duration: filterData.Duration,\n          resType: filterData.resType,\n        };\n      } else {\n        return {\n          BuIds: \"-1\",\n          CountryIds: \"-1\",\n          FromDate: moment(fouthsat).format(\"yyyy-MM-DD\"),\n          Duration: filterData.Duration,\n          resType: \"0\",\n        };\n      }\n    });\n  }, [filterData]);\n\n  useEffect(() => {\n    if (id != null) {\n      const updatebusiness = business.filter((values) =>\n        formData.BuIds?.includes(values.value)\n      );\n      const updatecountry = country.filter((values) =>\n        formData.CountryIds?.includes(values.value)\n      );\n\n      setSelectedBusiness(updatebusiness);\n      setSelectedCountry(updatecountry);\n      console.log(updatecountry);\n    }\n  }, [id]);\n\n  const calculateWeekDifference = (date) => {\n    const start = moment(date);\n    const end = moment(new Date());\n\n    const daysDifference = end.diff(start, \"days\");\n    let weeksDifference = Math.floor(daysDifference / 7);\n    // weeksDifference += 1;\n    if (weeksDifference > 11) {\n      weeksDifference = 11;\n    }\n    let weekdiff = [];\n    for (let i = 1; i <= weeksDifference; i++) {\n      weekdiff.push(i);\n    }\n\n    setWeekDifference(weekdiff);\n    console.log(\"weeksDifference....\", weeksDifference);\n  };\n\n  const handleClick = async () => {\n    let filterData = ref.current.filter((d) => d != null);\n    ref.current = filterData;\n    let valid = GlobalValidation(ref);\n    console.log(valid);\n    if (valid) {\n      {\n        setValidationMessage(true);\n        setErrorMsg(true);\n      }\n      return;\n    }\n    setErrorMsg(false);\n    setColumn([]);\n    setTableData([]);\n    setsearching(true);\n    setLoader(true);\n    await axios({\n      method: \"post\",\n      url:\n        // `http://localhost:8090/fullfilmentms/resourceTrending/getResourceTrendingData`,\n        baseUrl + `/fullfilmentms/resourceTrending/getResourceTrendingData`,\n      data: {\n        departments: formData.BuIds,\n        country: formData.CountryIds,\n        from: moment(startDate).format(\"yyyy-MM-DD\"),\n        duration: formData.Duration,\n        resType: formData.resType,\n      },\n      headers: { \"Content-Type\": \"application/json\" },\n    }).then((response) => {\n      const data = response.data;\n      axios({\n        method: \"get\",\n        url:\n          baseUrl +\n          `/fullfilmentms/resourceTrending/getheaders?ReportRunId=${data.reportRunId}`,\n        // `http://localhost:8090/fullfilmentms/resourceTrending/getheaders?ReportRunId=${data.reportRunId}`,\n      }).then((res1) => {\n        let header = res1.data.val;\n        let splt = header.replaceAll(\"'\", \"\");\n        let st = splt.split(\",\");\n        setCol(st);\n        let newArray = st.map((element) => element.trim());\n        setColumn(newArray);\n        setClicked(true);\n      });\n      //setValidationMessage(false);\n      setTableData(data);\n      setLoader(false);\n      setVisible(!visible);\n      visible\n        ? setCheveronIcon(FaChevronCircleUp)\n        : setCheveronIcon(FaChevronCircleDown);\n      setsearching(false);\n    });\n    setDisplayTableState(true);\n    setLoader(false);\n    setVisible(!visible);\n    visible\n      ? setCheveronIcon(FaChevronCircleUp)\n      : setCheveronIcon(FaChevronCircleDown);\n  };\n\n  console.log(displayTableState);\n  const getCountries = () => {\n    axios\n      .get(baseUrl + `/CostMS/cost/getCountries`)\n      .then((Response) => {\n        let countries = [];\n        let data = Response.data;\n        console.log(data);\n        data.length > 0 &&\n          data.forEach((e) => {\n            let countryObj = {\n              label: e.country_name,\n              value: e.id,\n            };\n            countries.push(countryObj);\n          });\n        setCountry(countries);\n        if (id == null) {\n          setSelectedCountry(countries);\n        }\n      })\n      .catch((error) => console.log(error));\n  };\n  const getBusinessUnit = () => {\n    axios\n      .get(baseUrl + `/CostMS/cost/getDepartments`)\n      .then((Response) => {\n        let countries = [];\n        let data = Response.data;\n        console.log(data);\n        data.push({ value: 999, label: \"Non-Revenue Units\" });\n        data.length > 0 &&\n          data.forEach((e) => {\n            let countryObj = {\n              label: e.label,\n              value: e.value,\n            };\n            countries.push(countryObj);\n          });\n        setBusiness(countries);\n        if (id == null) {\n          setSelectedBusiness(countries);\n        }\n      })\n      .catch((error) => console.log(error));\n  };\n  console.log(\"dur,,,\", weekDifference);\n  useEffect(() => {\n    data[0] && setHeaderData(JSON.parse(JSON.stringify(data[0])));\n  }, [data]);\n\n  useEffect(() => {\n    if (clicked && column.length === 0 && tableData) {\n      let newArray = col.map((element) => element.trim());\n      setColumn(newArray);\n    }\n  }, [clicked, tableData, formData.Duration]);\n\n  useEffect(() => {\n    getBusinessUnit();\n    getCountries();\n  }, []);\n\n  const loggedUserId = localStorage.getItem(\"resId\");\n  const [routes, setRoutes] = useState([]);\n  let textContent = \"Fullfilment\";\n  let currentScreenName = [\"Bench Metrics\", \"Resource Trending\"];\n\n  useEffect(() => {\n    getMenus();\n  }, []);\n\n  const getMenus = () => {\n    // setMenusData\n\n    axios({\n      method: \"GET\",\n      url: baseUrl + `/CommonMS/master/getMenus?loggedUserId=${loggedUserId}`,\n    }).then((resp) => {\n      let data = resp.data;\n\n      data.forEach((item) => {\n        if (item.display_name === textContent) {\n          setRoutes([item]);\n        }\n      });\n    });\n  };\n\n  const [selectedWeekStart, setSelectedWeekStart] = useState(null);\n\n  // const handleWeekSelect = (weekStartDate) => {\n  //   setSelectedWeekStart(weekStartDate);\n\n  //   const startOfWeek = moment(weekStartDate).startOf('isoWeek');\n  //   const endOfWeek = moment(weekStartDate).endOf('isoWeek');\n\n  //   setFormData((prev) => ({\n  //     ...prev,\n  //     [\"FromDate\"]: startOfWeek.format(\"yyyy-MM-DD\"),\n  //     [\"ToDate\"]: endOfWeek.format(\"yyyy-MM-DD\"),\n  //   }));\n  // };\n\n  const renderCustomDay = (day, selectedDate, dayInFocus) => {\n    const isWeekSelected =\n      selectedWeekStart && moment(day).isSame(selectedWeekStart, \"isoWeek\");\n\n    const isDaySelected =\n      selectedDate && moment(day).isSame(selectedDate, \"day\");\n\n    return (\n      <div\n        className={`custom-day ${isWeekSelected ? \"week-selected\" : \"\"} ${isDaySelected ? \"day-selected\" : \"\"\n          }`}\n        onClick={() => handleWeekSelect(day)}\n      >\n        {day.getDate()}\n      </div>\n    );\n  };\n  return (\n    <div>\n      <div className=\"col-md-12\">\n        <div className=\"pageTitle\">\n          <div className=\"childOne\"></div>\n          <div className=\"childTwo\">\n            <h2>Resource Trending</h2>\n          </div>\n          <div className=\"childThree\"></div>\n        </div>\n      </div>\n      <ScreenBreadcrumbs\n        routes={routes}\n        currentScreenName={currentScreenName}\n      />\n      {errorMsg ? (\n        <div className=\"statusMsg error\">\n          {\" \"}\n          <AiFillWarning /> Please select valid values for highlighted fields\n        </div>\n      ) : (\n        \"\"\n      )}\n      {loader ? <Loader handleAbort={handleAbort} /> : \"\"}\n\n      <div className=\"group mb-3 customCard\">\n        <div className=\"col-md-12 collapseHeader\">\n          <h2>Search Filters</h2>\n          <div className=\"helpBtn\">\n            <GlobalHelp pdfname={HelpPDFName} name={HelpHeader} />\n          </div>\n          <div className=\"saveBtn\">\n            <SavedSearchGlobal\n              setEditAddmsg={setEditAddmsg}\n              pageurl={pageurl}\n              page_Name={page_Name}\n              payload={formData}\n            />\n          </div>\n          &nbsp;\n          <div\n            onClick={() => {\n              setVisible(!visible);\n\n              visible\n                ? setCheveronIcon(FaChevronCircleUp)\n                : setCheveronIcon(FaChevronCircleDown);\n            }}\n          >\n            <span>{cheveronIcon}</span>\n          </div>\n        </div>\n        <CCollapse visible={!visible}>\n          <div className=\"group-content row\">\n            <div className=\" col-md-3 mb-2\">\n              <div className=\"form-group row\">\n                <label className=\"col-5\" htmlFor=\"businessUnit\">\n                  Business Unit\n                </label>\n                <span className=\"col-1 p-0\">:</span>\n                <div className=\"col-6\">\n                  <MultiSelect\n                    ArrowRenderer={ArrowRenderer}\n                    valueRenderer={generateDropdownLabel}\n                    id=\"BuIds\"\n                    value={selectedBusiness}\n                    options={business}\n                    isLoading={false}\n                    shouldToggleOnHover={false}\n                    disableSearch={false}\n                    overrideStrings={{\n                      selectAllFiltered: \"Select All\",\n                      selectSomeItems: \"<<Please Select>>\",\n                    }}\n                    disabled={false}\n                    onChange={(s) => {\n                      setSelectedBusiness(s);\n                      let filteredValues = [];\n                      s.forEach((d) => {\n                        filteredValues.push(d.value);\n                      });\n                      setFormData((prevVal) => ({\n                        ...prevVal,\n                        [\"BuIds\"]: filteredValues.toString(),\n                      }));\n                    }}\n                  />\n                </div>\n              </div>\n            </div>\n            <div className=\" col-md-3 mb-2\">\n              <div className=\"form-group row\">\n                <label className=\"col-5\" htmlFor=\"country\">\n                  Country\n                </label>\n                <span className=\"col-1 p-0\">:</span>\n                <div className=\"col-6 multiselect\">\n                  <MultiSelect\n                    ArrowRenderer={ArrowRenderer}\n                    valueRenderer={generateDropdownLabel}\n                    id=\"CountryIds\"\n                    options={country}\n                    hasSelectAll={true}\n                    value={selectedCountry}\n                    isLoading={false}\n                    shouldToggleOnHover={false}\n                    disableSearch={false}\n                    disabled={false}\n                    overrideStrings={{\n                      selectAllFiltered: \"Select All\",\n                      selectSomeItems: \"<<Please Select>>\",\n                    }}\n                    onChange={(e) => {\n                      setSelectedCountry(e);\n                      let filteredCountry = [];\n                      e.forEach((d) => {\n                        filteredCountry.push(d.value);\n                      });\n                      setFormData((prevVal) => ({\n                        ...prevVal,\n                        [\"CountryIds\"]: filteredCountry.toString(),\n                      }));\n                    }}\n                  />\n                </div>\n              </div>\n            </div>\n            <div className=\" col-md-3 mb-2\">\n              <div className=\"form-group row\">\n                <label className=\"col-5\" htmlFor=\"startweek\">\n                  Start Week<span style={{ color: \"red\" }}>&nbsp;*</span>\n                </label>\n                <span className=\"col-1 p-0\">:</span>\n                <div className=\"col-6\">\n                  <DatePicker\n\n                    showMonthDropdown\n                    showYearDropdown\n                    dropdownMode=\"select\"\n                    selected={startDate}\n                    onChange={(date) => {\n                      calculateWeekDifference(date);\n                      const selectedDate = moment(date);\n                      const dayOfWeek = selectedDate.day();\n                      setDurationn(\"\");\n                      if (dayOfWeek !== 6) {\n                        // Check if selected date is not Saturday\n                        const lastSaturday = selectedDate.clone().day(-1); // Set to last Saturday (0-based index)\n\n                        // Find the last Saturday of the previous week\n                        while (lastSaturday.day() !== 6) {\n                          lastSaturday.subtract(1, \"day\");\n                        }\n\n                        setStartDate(lastSaturday.toDate()); // Set the state to the last Saturday\n\n                        setFormData((prev) => ({\n                          ...prev,\n                          [\"FromDate\"]: lastSaturday.format(\"yyyy-MM-DD\"),\n                        }));\n                      } else {\n                        setStartDate(selectedDate.toDate());\n\n                        setFormData((prev) => ({\n                          ...prev,\n                          [\"FromDate\"]: selectedDate.format(\"yyyy-MM-DD\"),\n                        }));\n                      }\n                    }}\n                    onKeyDown={(e) => {\n                      e.preventDefault();\n                    }}\n                    calendarStartDay={6}\n                    dateFormat=\"dd-MMM-yy\"\n                    maxDate={previousWeekSaturday}\n                  />\n                </div>\n              </div>\n            </div>\n            <div className=\" col-md-3 mb-2\">\n              <div className=\"form-group row\">\n                <label className=\"col-5\" htmlFor=\"duration\">\n                  Duration&nbsp;<span className=\"error-text\">*</span>\n                </label>\n                <span className=\"col-1 p-0\">:</span>\n                <div className=\"col-6\">\n                  <select\n                    className=\"text\"\n                    id=\"Duration\"\n                    onChange={(e) => {\n                      setDurationn(e.target.value);\n                      const { value, id } = e.target;\n                      setFormData({ ...formData, [id]: value });\n                    }}\n                    value={durationn}\n                    ref={(ele) => {\n                      ref.current[0] = ele;\n                    }}\n                  >\n                    <option value=\"\">&lt;&lt; Please Select &gt;&gt;</option>\n                    {weekDifference?.map((d) => (\n                      <option key={d} value={d}>\n                        {d}\n                      </option>\n                    ))}\n                  </select>\n                </div>\n              </div>\n            </div>\n            <div className=\" col-md-3 mb-2\">\n              <div className=\"form-group row\">\n                <label className=\"col-5\" htmlFor=\"resType\">\n                  Res. Type\n                </label>\n                <span className=\"col-1 p-0\">:</span>\n                <div className=\"col-6\">\n                  <select\n                    className=\"text\"\n                    id=\"resType\"\n                    onChange={(e) => {\n                      const { value, id } = e.target;\n                      setFormData({ ...formData, [id]: value });\n                    }}\n                  >\n                    <option value=\"all\"> &lt;&lt;ALL&gt;&gt;</option>\n                    <option value=\"1\">Employee</option>\n                    <option value=\"2\">Contractors</option>\n                  </select>\n                </div>\n              </div>\n            </div>\n            <div className=\"col-md-12 col-sm-12 col-xs-12 btn-container center my-3 mb-2\">\n              {\n                <button\n                  className=\"btn btn-primary \"\n                  onClick={() => handleClick()}\n                >\n                  <FaSearch />\n                  Search\n                </button>\n              }\n            </div>\n          </div>\n        </CCollapse>\n      </div>\n      {displayTableState && (\n        <ResourceTrendingDisplayTable tableData={tableData} column={column} />\n      )}\n    </div>\n  );\n}\n\nexport default ResourceTrending;\n","import React, { useState, useRef, useEffect } from \"react\";\nimport { MultiSelect } from \"react-multi-select-component\";\nimport DatePicker from \"react-datepicker\";\nimport { getTableData } from \"./RollsOffsTable\";\nimport axios from \"axios\";\nimport moment from \"moment/moment\";\nimport { environment } from \"../../environments/environment\";\nimport \"primeicons/primeicons.css\";\nimport \"primereact/resources/themes/lara-light-indigo/theme.css\";\nimport \"primereact/resources/primereact.css\";\nimport \"primeflex/primeflex.css\";\nimport { GoPerson } from \"react-icons/go\";\nimport Loader from \"../Loader/Loader\";\nimport GlobalCancel from \"../ValidationComponent/GlobalCancel\";\nimport fte_inactive from \"../../assets/images/empstatusIcon/fte_inactive.png\";\nimport fte_notice from \"../../assets/images/empstatusIcon/fte_notice.png\";\nimport subk_inactive from \"../../assets/images/empstatusIcon/subk_inactive.png\";\n\nimport {\n  FaChevronCircleDown,\n  FaChevronCircleUp,\n  FaSearch,\n  FaCaretDown,\n} from \"react-icons/fa\";\nimport GlobalValidation from \"../ValidationComponent/GlobalValidation\";\nimport { CCollapse } from \"@coreui/react\";\nimport { Column } from \"primereact/column\";\nimport CellRendererPrimeReactDataTable from \"../PrimeReactTableComponent/CellRendererPrimeReactDataTable\";\nimport { Link } from \"react-router-dom\";\nimport { IoWarningOutline } from \"react-icons/io5\";\nimport \"../FullfimentComponent/RollOffs.scss\";\nimport GlobalHelp from \"../PrimeReactTableComponent/GlobalHelp\";\nimport ScreenBreadcrumbs from \"../Common/ScreenBreadcrumbs\";\n\nfunction RollOffs() {\n  const baseUrl = environment.baseUrl;\n  const [exportData, setExportData] = useState([]);\n  const ref = useRef([]);\n  const [loaderState, setLoaderState] = useState(false);\n  const [startDate, setStartDate] = useState(new Date());\n  const [visible, setVisible] = useState(false);\n  const [cheveronIcon, setCheveronIcon] = useState(FaChevronCircleUp);\n  const [dataAr, setDataAr] = useState([]);\n  const [country, setCountry] = useState([]);\n  const [selectedCountry, setSelectedCountry] = useState([]);\n  const [departments, setDepartments] = useState([]);\n  const [selectedDepartments, setSelectedDepartments] = useState([]);\n  const [monthval, setMonthval] = useState(new Date());\n  const [headerData, setHeaderData] = useState([]);\n  const [linkColumns, setLinkColumns] = useState([]);\n  const [linkColumnsRoutes, setLinkColumnsRoutes] = useState([]);\n  const [columnData, setColumnData] = useState([]);\n  const [columnData2, setColumnData2] = useState([]);\n  const [searching, setsearching] = useState(false);\n  const [validationMessage, setValidationMessage] = useState(false);\n  const abortController = useRef(null);\n  const HelpPDFName = \"RollOffs.pdf\";\n  const HelpHeader = \"Roll Off Help\";\n\n  const filterMondays = (date) => {\n    return date.getDay() === 6; // 0-sunday,1-monday,2-tuesday,3-wednesday,4-thursday,5-friday,6-saturday,7-sunday\n  };\n\n  const getCurrentMonday = () => {\n    const now = new Date();\n    const dayOfWeek = now.getDay();\n    const diff = now.getDate() - dayOfWeek + (dayOfWeek === 0 ? -6 : -1); // If today is Sunday, subtract 6 days to get previous Monday, otherwise add 1 day to get current Monday\n    return new Date(now.setDate(diff));\n  };\n  const defaultDate = getCurrentMonday();\n\n  const [selectedDate, setSelectedDate] = useState(defaultDate);\n\n  const Data = moment(monthval).startOf(\"month\").format(\"yyyy-MM-DD\");\n  const Data1 = moment(startDate).format(\"yyyy-MMM-DD\");\n  const [open, setOpen] = useState(false);\n  let rows = 10;\n\n  useEffect(() => {\n    let imp = [\"XLS\"];\n    setExportData(imp);\n  }, []);\n\n  const LinkTemplate = (data) => {\n    let rou = linkColumnsRoutes[0]?.split(\":\");\n    return (\n      <>\n        <Link\n          target=\"_blank\"\n          to={rou[0] + \":\" + data[rou[1]]}\n          data-toggle=\"tooltip\"\n          title={data.project}\n        >\n          {data[linkColumns[0]]}\n        </Link>\n      </>\n    );\n  };\n\n  const LinkTemplateAction = (data) => {\n    let rou = linkColumnsRoutes[1]?.split(\":\");\n    return (\n      <>\n        <Link\n          target=\"_blank\"\n          to={rou[0] + \":\" + data[rou[1]]}\n          data-toggle=\"tooltip\"\n          title={data.customer}\n        >\n          {data[linkColumns[1]]}\n        </Link>\n      </>\n    );\n  };\n  const rolenameToolip = (data) => {\n    return (\n      <div\n        className=\"ellipsis\"\n        align=\"left\"\n        data-toggle=\"tooltip\"\n        title={data.role_name}\n      >\n        {data.role_name}\n      </div>\n    );\n  };\n  const cslToolip = (data) => {\n    return (\n      <div\n        className=\"ellipsis\"\n        align=\"left\"\n        data-toggle=\"tooltip\"\n        title={data.csl}\n      >\n        {data.csl}\n      </div>\n    );\n  };\n  const dpToolip = (data) => {\n    return (\n      <div\n        className=\"ellipsis\"\n        align=\"left\"\n        data-toggle=\"tooltip\"\n        title={data.dp}\n      >\n        {data.dp}\n      </div>\n    );\n  };\n  const projectcodeToolip = (data) => {\n    return (\n      <div\n        className=\"ellipsis\"\n        align=\"left\"\n        data-toggle=\"tooltip\"\n        title={data.project_code}\n      >\n        {data.project_code}\n      </div>\n    );\n  };\n  const resourceToolip = (data) => {\n    console.log(data, \"dataforicons\");\n    return (\n      <div\n        className=\"ellipsis\"\n        align=\"left\"\n        data-toggle=\"tooltip\"\n        title={data.resource}\n      >\n        <div className=\"legendContainer\" title={data.resource}>\n          {data.resStatus == \"fte1\" ? (\n            <div\n              className=\"rollOffTableIcon green ellipsis\"\n              title=\"Active Employee\"\n            >\n              <GoPerson className=\"icon\" />\n              <span title={data.resource} className=\"ellipsis\">\n                {data.resource}\n              </span>\n            </div>\n          ) : data.resStatus == \"subk1\" ? (\n            <div\n              className=\"rollOffTableIcon amber ellipsis\"\n              title=\"Active Contractor\"\n            >\n              <GoPerson className=\"icon\" />\n              <span title={data.resource}>{data.resource}</span>\n            </div>\n          ) : data.resStatus == \"subk0\" ? (\n            <div className=\"rollOffTableIcon amber\">\n              <img className=\"rollOffTableIcon \"\n                src={subk_inactive}\n                alt=\"(fte_inactive_icon)\"\n                style={{\n                  height: \"12px\",\n                  float: \"left\",\n\n                  marginTop: \"3px\",\n                  marginRight: \"5px\",\n                }}\n                title=\"Ex-Contractor\"\n              />\n              <span title={data.resource}>\n                <span>{data.resource}</span>\n              </span>\n            </div>\n          ) : data.resStatus == \"fte0\" ? (\n            <div className=\"ellipsis\">\n              <img\n                src={fte_inactive}\n                alt=\"(fte_inactive_icon)\"\n                style={{\n                  height: \"12px\",\n                  float: \"left\",\n                  marginTop: \"3px\",\n                  marginRight: \"5px\",\n                }}\n                title=\"Ex-Employee\"\n              ></img>\n\n              <span title={data.resource}>\n                <span>{data.resource}</span>\n              </span>\n            </div>\n          ) : data.resStatus == \"fte2\" ? (\n            <div className=\"ellipsis\">\n              <img\n                src={fte_notice}\n                alt=\"(fte_notice_icon)\"\n                style={{\n                  height: \"12px\",\n                  float: \"left\",\n                  marginTop: \"3px\",\n                  marginRight: \"5px\",\n                }}\n                title=\"Employee in notice period\"\n              />\n\n              <span title={data.resource}>\n                <span>{data.resource}</span>\n              </span>\n            </div>\n          ) : (\n            \"\"\n          )}\n        </div>\n      </div>\n    );\n  };\n  const departmentToolip = (data) => {\n    return (\n      <div\n        className=\"ellipsis\"\n        align=\"left\"\n        data-toggle=\"tooltip\"\n        title={data.department}\n      >\n        {data.department}\n      </div>\n    );\n  };\n  const citizenshipToolip = (data) => {\n    return (\n      <div\n        className=\"ellipsis\"\n        align=\"left\"\n        data-toggle=\"tooltip\"\n        title={data.citizenship}\n      >\n        {data.citizenship}\n      </div>\n    );\n  };\n  const executiveToolip = (data) => {\n    return (\n      <div\n        className=\"ellipsis\"\n        align=\"left\"\n        data-toggle=\"tooltip\"\n        title={data.executive}\n      >\n        {data.executive}\n      </div>\n    );\n  };\n\n  const countryToolip = (data) => {\n    return (\n      <div\n        className=\"ellipsis\"\n        align=\"left\"\n        data-toggle=\"tooltip\"\n        title={data.country}\n      >\n        {data.country}\n      </div>\n    );\n  };\n  const allocenddateTooltip = (data) => {\n    return (\n      <div\n        className=\"ellipsis \"\n        align=\"left\"\n        data-toggle=\"tooltip\"\n        title={moment(data.alloc_end_date).format(\"DD-MMM-yyyy\")}\n      >\n        {data.alloc_end_date == null\n          ? \"\"\n          : data.alloc_end_date == \"\"\n            ? \"\"\n            : data.alloc_end_date == \"No Data Found^&1^&13\"\n              ? \"No Data Found\"\n              : moment(data.alloc_end_date).format(\"DD-MMM-yyyy\")}\n      </div>\n    );\n  };\n  const NextAllocTooltip = (data) => {\n    return (\n      <div\n        className=\"ellipsis \"\n        align=\"left\"\n        data-toggle=\"tooltip\"\n        title={moment(data.nxt_alloc_date).format(\"DD-MMM-yyyy\")}\n      >\n        {data.nxt_alloc_date == null\n          ? \"\"\n          : data.nxt_alloc_date == \"\"\n            ? \"\"\n            : data.nxt_alloc_date == \"No Data Found^&1^&13\"\n              ? \"No Data Found\"\n              : moment(data.nxt_alloc_date).format(\"DD-MMM-yyyy\")}\n      </div>\n    );\n  };\n  const managerTooltip = (data) => {\n    return (\n      <div\n        className=\"ellipsis\"\n        align=\"left\"\n        data-toggle=\"tooltip\"\n        title={data.manager}\n      >\n        {data.manager}\n      </div>\n    );\n  };\n  const actionCommentsTooltip = (data) => {\n    return (\n      <div\n        className=\"ellipsis\"\n        align=\"left\"\n        data-toggle=\"tooltip\"\n        title={data.actionComments}\n      >\n        {data.actionComments}\n      </div>\n    );\n  };\n\n  const dynamicColumns = Object.keys(headerData)?.map((col, i) => {\n    return (\n      <Column\n        sortable\n        key={col}\n        body={\n          col == \"project\"\n            ? LinkTemplate\n            : col == \"customer\"\n              ? LinkTemplateAction\n              : col == \"csl\"\n                ? cslToolip\n                : col == \"dp\"\n                  ? dpToolip\n                  : col == \"project_code\"\n                    ? projectcodeToolip\n                    : col == \"resource\"\n                      ? resourceToolip\n                      : col == \"department\"\n                        ? departmentToolip\n                        : col == \"citizenship\"\n                          ? citizenshipToolip\n                          : col == \"executive\"\n                            ? executiveToolip\n                            : col == \"country\"\n                              ? countryToolip\n                              : col == \"alloc_end_date\"\n                                ? allocenddateTooltip\n                                : col == \"nxt_alloc_date\"\n                                  ? NextAllocTooltip\n                                  : col == \"manager\"\n                                    ? managerTooltip\n                                    : col == \"actionComments\"\n                                      ? actionCommentsTooltip\n                                      : col == \"role_name\" && rolenameToolip\n        }\n        field={col}\n        header={headerData[col]}\n      />\n    );\n  });\n\n  useEffect(() => {\n    data[0] && setHeaderData(JSON.parse(JSON.stringify(data[0])));\n  }, [data]);\n\n  // const customValueRenderer = (selected, _options) => {\n  //   return selected.length === country.length ||\n  //     selected.length === departments.length\n  //     ? \"<< ALL >>\"\n  //     : selected.length === 0\n  //     ? \"<< Please Select >>\"\n  //     : selected.map((label) => {\n  //         return selected.length > 1 ? label.label + \",\" : label.label;\n  //       });\n  // };\n  const initialValue = {\n    BuIds: \"170,211,123,82,168,207,212,18,213,49,149,208,243\",\n    CountryIds: \"6,5,3,8,7,1,2\",\n    type: \"1\",\n    FromDate: moment(selectedDate).format(\"yyyy-MM-DD\"),\n    Duration: \"1\",\n    FutureAlloc: \"0\",\n  };\n  const [formData, setFormData] = useState(initialValue);\n\n  useEffect(() => {\n    let tdata = getTableData();\n\n    setDataAr(tdata);\n  }, []);\n\n  const getCountries = () => {\n    axios\n      .get(baseUrl + `/CostMS/cost/getCountries`)\n\n      .then((Response) => {\n        let countries = [];\n\n        let data = Response.data;\n        data.length > 0 &&\n          data.forEach((e) => {\n            let countryObj = {\n              label: e.country_name,\n              value: e.id,\n            };\n            e.country_name == \"NM\" ? \"\" : countries.push(countryObj);\n          });\n        setCountry(countries);\n        setSelectedCountry(countries);\n      })\n      .catch((error) => console.log(error));\n  };\n\n  useEffect(() => {\n    let countryList = [];\n    country.forEach((d) => {\n      countryList.push(d.value);\n    });\n    setFormData((prevVal) => ({\n      ...prevVal,\n      [\"country\"]: countryList.toString(),\n    }));\n  }, [country]);\n\n  const getDepartments = async () => {\n    const resp = await axios({\n      url: baseUrl + `/CostMS/cost/getDepartments`,\n    });\n\n    let departments = resp.data;\n    setDepartments(departments);\n    setSelectedDepartments(departments.filter((ele) => ele.value != 0));\n    let filteredDeptData = [];\n    departments.forEach((data) => {\n      if (data.value != 0) {\n        filteredDeptData.push(data.value);\n      }\n    });\n    setFormData((prevVal) => ({\n      ...prevVal,\n      [\"BuIds\"]: filteredDeptData.toString(),\n    }));\n  };\n\n  useEffect(() => {\n    getDepartments();\n    getCountries();\n  }, []);\n\n  var data = {\n    BuIds: formData.BuIds,\n    CountryIds: formData.CountryIds,\n    FromDate: moment(selectedDate).format(\"yyyy-MM-DD\"),\n    Duration: formData.Duration,\n    FutureAlloc: formData.FutureAlloc,\n    isExport: \"0\",\n    type: formData.type,\n    monthVal: Data,\n  };\n\n  const handleAbort = () => {\n    abortController.current && abortController.current.abort();\n    setLoaderState(false);\n  };\n\n  const postData = () => {\n    setVisible(!visible);\n    setsearching(true);\n    let valid = GlobalValidation(ref);\n\n    if (formData.BuIds == \"\" || formData.CountryIds == \"\") {\n      if (valid) {\n        {\n          setValidationMessage(true);\n          setTimeout(() => {\n            setValidationMessage(false);\n          }, 3000);\n          setsearching(false);\n        }\n        return;\n      }\n    }\n    setLoaderState(false);\n    abortController.current = new AbortController();\n    !valid && setVisible(!visible);\n\n    axios\n      .post(\n        baseUrl + `/fullfilmentms/rolloffs/postRollOffs`,\n\n        data,\n        {\n          signal: abortController.current.signal,\n        }\n      )\n      .then((res) => {\n        const GetData =\n          res.data[1].alloc_end_date === \"No Data Found^&1^&13\"\n            ? res.data.slice(2)\n            : res.data.slice(1);\n        GlobalCancel(ref);\n\n        let Headerdata1 = [\n          {\n            alloc_end_date: \"Alloc Ends\",\n            resource: \"Resource\",\n            role_name: \"Role\",\n            department: \"Department\",\n            citizenship: \"Citizenship\",\n            country: \"Country\",\n            project: \"Project\",\n            customer: \"Customer\",\n            csl: \"CSL\",\n            dp: \"DP\",\n            project_code: \"Project Code\",\n            manager: \"Project Manager\",\n            executive: \"Eng. Executive\",\n            actionComments: \"Recent Action Item\",\n          },\n        ];\n        let Headerdata2 = [\n          {\n            alloc_end_date: \"Alloc Ends\",\n            nxt_alloc_date: \"Next Alloc\",\n            resource: \"Resource\",\n            role_name: \"Role\",\n            department: \"Department\",\n            citizenship: \"Citizenship\",\n            country: \"Country\",\n            project: \"Project\",\n            customer: \"Customer\",\n            csl: \"CSL\",\n            dp: \"DP\",\n            project_code: \"Project Code\",\n            manager: \"Project Manager\",\n            executive: \"Eng. Executive\",\n            actionComments: \"Recent Action Item\",\n          },\n        ];\n\n        let data = [\"project\", \"customer\"];\n        let linkRoutes = [\n          \"/project/Overview/:projectId\",\n          \"/search/customerSearch/customer/dashboard/:custId\",\n        ];\n        setLinkColumns(data);\n        setLinkColumnsRoutes(linkRoutes);\n\n        setColumnData(Headerdata1.concat(GetData));\n        setColumnData2(Headerdata2.concat(GetData));\n\n        setLoaderState(false);\n        setsearching(false);\n        setTimeout(() => {\n          setLoaderState(false);\n        }, 1000);\n        visible\n          ? setCheveronIcon(FaChevronCircleUp)\n          : setCheveronIcon(FaChevronCircleDown);\n      });\n  };\n\n  const ArrowRenderer = ({ expanded }) => (\n    <>\n      {expanded ? (\n        <FaCaretDown className=\"chevronIcon\" />\n      ) : (\n        <FaCaretDown className=\"chevronIcon\" />\n      )}\n    </>\n  );\n  const loggedUserId = localStorage.getItem(\"resId\");\n  const [routes, setRoutes] = useState([]);\n  let textContent = \"Fullfilment\";\n  let currentScreenName = [\"Bench Metrics\", \"Roll Offs\"];\n\n  useEffect(() => {\n    getMenus();\n  }, []);\n\n  const getMenus = () => {\n    // setMenusData\n\n    axios({\n      method: \"GET\",\n      url: baseUrl + `/CommonMS/master/getMenus?loggedUserId=${loggedUserId}`,\n    }).then((resp) => {\n      let data = resp.data;\n\n      data.forEach((item) => {\n        if (item.display_name === textContent) {\n          setRoutes([item]);\n        }\n      });\n    });\n  };\n\n  const generateDropdownLabel = (selectedOptions, allOptions) => {\n    const selectedValues = selectedOptions.map((option) => option.value);\n    const allValues = allOptions.map((item) => item.value);\n\n    if (selectedValues.length === allValues.length) {\n      return \"<< ALL >>\";\n    } else {\n      return selectedOptions.map((option) => option.label).join(\", \");\n    }\n  };\n  return (\n    <div>\n      <div className=\"col-md-12\">\n        <div className=\"pageTitle\">\n          <div className=\"childOne\"></div>\n          <div className=\"childTwo\">\n            <h2>Roll Offs</h2>\n          </div>\n          <div className=\"childThree\"></div>\n        </div>\n      </div>\n      <ScreenBreadcrumbs\n        routes={routes}\n        currentScreenName={currentScreenName}\n      />\n\n      <div className=\"col-md-12  mt-2\">\n        {validationMessage ? (\n          <div className=\"statusMsg error\">\n            {\" \"}\n            <span>\n              {\" \"}\n              <IoWarningOutline /> Please select the valid values for\n              highlighted fields{\" \"}\n            </span>\n          </div>\n        ) : (\n          \"\"\n        )}\n      </div>\n      <div className=\"group mb-5 customCard\">\n        <div className=\"col-md-12 collapseHeader\">\n          <h2>Search Filters</h2>\n          <div className=\"helpBtn\">\n            <GlobalHelp pdfname={HelpPDFName} name={HelpHeader} />\n          </div>\n          <div\n            onClick={() => {\n              setVisible(!visible);\n\n              visible\n                ? setCheveronIcon(FaChevronCircleUp)\n                : setCheveronIcon(FaChevronCircleDown);\n            }}\n          >\n            <span>{cheveronIcon}</span>\n          </div>\n        </div>\n        <CCollapse visible={!visible}>\n          <div className=\"group-content row\">\n            <div className=\" col-md-3 mb-2\">\n              <div className=\"form-group row\">\n                <label className=\"col-5\" htmlFor=\"BuIds\">\n                  Business Unit&nbsp;<span className=\"error-text\">*</span>\n                </label>\n                <span className=\"col-1 p-0\">:</span>\n                <div className=\"col-6\">\n                  <div\n                    className=\"multiselect\"\n                    ref={(ele) => {\n                      ref.current[0] = ele;\n                    }}\n                  >\n                    <MultiSelect\n                      id=\"BuIds\"\n                      ArrowRenderer={ArrowRenderer}\n                      options={departments}\n                      hasSelectAll={true}\n                      isLoading={false}\n                      shouldToggleOnHover={false}\n                      disableSearch={false}\n                      value={selectedDepartments}\n                      valueRenderer={generateDropdownLabel}\n                      disabled={false}\n                      onChange={(s) => {\n                        setSelectedDepartments(s);\n                        let filteredValues = [];\n                        s.forEach((d) => {\n                          filteredValues.push(d.value);\n                        });\n\n                        setFormData((prevVal) => ({\n                          ...prevVal,\n                          [\"BuIds\"]: filteredValues.toString(),\n                        }));\n                      }}\n                    />\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className=\" col-md-3 mb-2\">\n              <div className=\"form-group row\">\n                <label className=\"col-5\" htmlFor=\"CountryIds\">\n                  Country&nbsp;<span className=\"error-text\">*</span>\n                </label>\n                <span className=\"col-1 p-0\">:</span>\n                <div className=\"col-6\">\n                  <div\n                    className=\"multiselect\"\n                    ref={(ele) => {\n                      ref.current[1] = ele;\n                    }}\n                  >\n                    <MultiSelect\n                      id=\"CountryIds\"\n                      options={country}\n                      ArrowRenderer={ArrowRenderer}\n                      hasSelectAll={true}\n                      value={selectedCountry}\n                      disabled={false}\n                      valueRenderer={generateDropdownLabel}\n                      onChange={(e) => {\n                        setSelectedCountry(e);\n                        let filteredCountry = [];\n                        e.forEach((d) => {\n                          filteredCountry.push(d.value);\n                        });\n                        setFormData((prevVal) => ({\n                          ...prevVal,\n                          [\"CountryIds\"]: filteredCountry.toString(),\n                        }));\n                      }}\n                    />\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className=\" col-md-3 mb-2\">\n              <div className=\"form-group row\">\n                <label className=\"col-5\" htmlFor=\"type\">\n                  Type&nbsp;<span className=\"error-text\">*</span>\n                </label>\n                <span className=\"col-1 p-0\">:</span>\n                <div className=\"col-6\">\n                  <select\n                    className=\"text\"\n                    id=\"type\"\n                    name=\"type\"\n                    defaultValue={1}\n                    onChange={(e) => {\n                      const { value, id } = e.target;\n                      setFormData({ ...formData, [id]: value });\n                    }}\n                  >\n                    <option value=\"1\" selected=\"selected\">\n                      Week\n                    </option>\n                    <option value=\"2\">Month</option>\n                  </select>\n                </div>\n              </div>\n            </div>\n            {formData.type == \"2\" ? (\n              <>\n                {\" \"}\n                <div className=\"col-md-3 mb-2\">\n                  <div className=\"form-group row\">\n                    <label className=\"col-5\" htmlFor=\"StartDt\">\n                      Month&nbsp;<span className=\"error-text\">*</span>\n                    </label>\n                    <span className=\"col-1 p-0\">:</span>\n                    <div className=\"col-6\">\n                      <DatePicker\n                        className=\"monthval\"\n                        id=\"monthval\"\n                        selected={monthval}\n                        dateFormat=\"MMM-yyyy\"\n                        showMonthYearPicker\n                        onChange={(date) => setMonthval(date)}\n                      // isClearable={true}\n                      // onCalendarClose={handleClear}\n                      />\n                    </div>\n                  </div>\n                </div>\n              </>\n            ) : (\n              <>\n                <div className=\" col-md-3 mb-2\">\n                  <div className=\"form-group row\">\n                    <label className=\"col-5\" htmlFor=\"week\">\n                      Week&nbsp;<span className=\"error-text\">*</span>\n                    </label>\n                    <span className=\"col-1 p-0\">:</span>\n                    <div className=\"col-6\">\n                      <DatePicker\n                        className=\"FromDate\"\n                        id=\"FromDate\"\n                        selected={selectedDate}\n                        onChange={(e) => {\n                          setFormData((prev) => ({\n                            ...prev,\n                            [\"FromDate\"]: moment(e).format(\"yyyy-MM-DD\"),\n                          }));\n                          setSelectedDate(e);\n                        }}\n                        onKeyDown={(e) => {\n                          e.preventDefault();\n                        }}\n                        filterDate={filterMondays}\n                        dateFormat=\"dd-MMM-yy\"\n                      />\n                    </div>\n                  </div>\n                </div>\n              </>\n            )}\n            <div className=\" col-md-3 mb-2\">\n              <div className=\"form-group row\">\n                <label className=\"col-5\" htmlFor=\"Duration\">\n                  Duration&nbsp;<span className=\"error-text\">*</span>\n                </label>\n                <span className=\"col-1 p-0\">:</span>\n                <div className=\"col-6\">\n                  <select\n                    className=\"text\"\n                    id=\"Duration\"\n                    name=\"Duration\"\n                    // value={1}\n                    onChange={(e) => {\n                      const { value, id } = e.target;\n                      setFormData({ ...formData, [id]: value });\n                    }}\n                  >\n                    <option value=\"1\">1</option>\n                    <option value=\"2\">2</option>\n                    <option value=\"3\">3</option>\n                    <option value=\"4\">4</option>\n                    <option value=\"5\">5</option>\n                    <option value=\"6\">6</option>\n                    <option value=\"7\">7</option>\n                    <option value=\"8\">8</option>\n                    <option value=\"9\">9</option>\n                    <option value=\"10\">10</option>\n                    <option value=\"11\">11</option>\n                    <option value=\"12\">12</option>\n                  </select>\n                </div>\n              </div>\n            </div>\n            <div className=\" col-md-3 mb-2\">\n              <div className=\"form-group row\">\n                <label className=\"col-5\" htmlFor=\"FutureAlloc\">\n                  Future Alloc.\n                </label>\n                <span className=\"col-1 p-0\">:</span>\n                <div className=\"col-6\">\n                  <select\n                    className=\"text\"\n                    id=\"FutureAlloc\"\n                    name=\"FutureAlloc\"\n                    defaultValue={0}\n                    onChange={(e) => {\n                      const { value, id } = e.target;\n                      setFormData({ ...formData, [id]: value });\n                    }}\n                  >\n                    <option value=\"-1\">&lt;&lt; Please Select &gt;&gt;</option>\n\n                    <option value=\"0\">No</option>\n\n                    <option value=\"1\">Yes</option>\n                  </select>\n                </div>\n              </div>\n            </div>\n            <div className=\"col-md-12 col-sm-12 col-xs-12 btn-container center my-1\">\n              <button\n                type=\"submit\"\n                className=\"btn btn-primary\"\n                title=\"Search\"\n                onClick={postData}\n              >\n                <FaSearch />\n                Search\n              </button>\n            </div>\n            {loaderState ? <Loader handleAbort={handleAbort} /> : \"\"}\n          </div>\n        </CCollapse>\n      </div>\n      <div className=\"col-md-12 resourceOverviewEmp\">\n        <CellRendererPrimeReactDataTable\n          className=\"primeReactDataTable\"\n          data={columnData}\n          linkColumns={linkColumns}\n          linkColumnsRoutes={linkColumnsRoutes}\n          dynamicColumns={dynamicColumns}\n          headerData={headerData}\n          setHeaderData={setHeaderData}\n          exportData={exportData}\n          rows={rows}\n          fileName=\"RollOffs\"\n        />\n      </div>\n      {formData.FutureAlloc == \"0\" && searching ? (\n        <div className=\"col-md-12 resourceOverviewEmp\">\n          <CellRendererPrimeReactDataTable\n            className=\"primeReactDataTable\"\n            data={columnData}\n            linkColumns={linkColumns}\n            linkColumnsRoutes={linkColumnsRoutes}\n            dynamicColumns={dynamicColumns}\n            headerData={headerData}\n            setHeaderData={setHeaderData}\n            exportData={exportData}\n            rows={rows}\n            fileName=\"RollOffs\"\n          />\n        </div>\n      ) : formData.FutureAlloc != \"0\" && searching ? (\n        <div className=\"col-md-12 resourceOverviewEmp\">\n          <CellRendererPrimeReactDataTable\n            className=\"primeReactDataTable\"\n            data={columnData2}\n            linkColumns={linkColumns}\n            linkColumnsRoutes={linkColumnsRoutes}\n            dynamicColumns={dynamicColumns}\n            headerData={headerData}\n            setHeaderData={setHeaderData}\n            exportData={exportData}\n            rows={rows}\n            fileName=\"RollOffs\"\n          />\n        </div>\n      ) : (\n        \"\"\n      )}\n    </div>\n  );\n}\n\nexport default RollOffs;\n"," export function getTableData() {\n    let tabledata=[\n        {\n            allocends : 'Alloc Ends',\n            resource : 'Resource',\n            role : 'Role',\n            department : 'Department',\n            citizenship : 'Citizenship',\n            country :'Country',\n            project : 'Project',\n            customer : 'Customer',\n            csl : 'CSL',\n            dp : 'DP',\n            projectcode : 'Prject Code',\n            projectmanager : 'Project Manager',\n            engexecutive : 'Eng. Executive',\n            recentactionitem : 'Recent Action Item'\n        },\n        {\n            allocends : 'Alloc Ends',\n            resource : 'Resource',\n            role : 'Role',\n            department : 'Department',\n            citizenship : 'Citizenship',\n            country :'Country',\n            project : 'Project',\n            customer : 'Customer',\n            csl : 'CSL',\n            dp : 'DP',\n            projectcode : 'Prject Code',\n            projectmanager : 'Project Manager',\n            engexecutive : 'Eng. Executive',\n            recentactionitem : 'Recent Action Item'\n        }\n\n    ]\n return tabledata\n}\n","import React, { useState, useEffect } from \"react\";\nimport BenchReport from \"./BenchReport\";\nimport ResourceOverview from \"./ResourceOverview\";\nimport ResourceTrending from \"./ResourceTrending\";\nimport RollOffs from \"./RollOffs\";\nimport axios from \"axios\";\nimport { environment } from \"../../environments/environment\";\nfunction BenchMatrix() {\n  // const [buttonState, setButtonState] = useState(() => {\n  //   // Retrieve the last selected tab from localStorage on component mount\n  //   return localStorage.getItem(\"selectedBenchReportTab\") || \"Bench Report\";\n  // });\n  const [buttonState, setButtonState] = useState(\"Bench Report\");\n  const baseUrl = environment.baseUrl;\n  const loggedUserId = localStorage.getItem(\"resId\");\n  const [permission, setPermission] = useState([]);\n  const getMenus = () => {\n    axios\n      .get(\n        baseUrl +\n          `/CommonMS/master/getBenchMtericsMenus?loggedUserId=${loggedUserId}&Cont=bench`\n      )\n      .then((resp) => {\n        const getData = resp.data;\n        setPermission(getData);\n        console.log(getData, \"getData\");\n        console.log(getData);\n      });\n  };\n  useEffect(() => {\n    getMenus();\n  }, []);\n  // useEffect(() => {\n  //   // Save the selected tab to localStorage whenever it changes\n  //   localStorage.setItem(\"selectedBenchReportTab\", buttonState);\n  // }, [buttonState]);\n\n  return (\n    <>\n      <div>\n        <>\n          <div className=\"tabs\">\n            {permission.map((button) => (\n              <button\n                key={button.id}\n                className={\n                  buttonState === button.display_name.toString()\n                    ? \"buttonDisplayClick\"\n                    : \"buttonDisplay\"\n                }\n                onClick={() => {\n                  setButtonState(button.display_name.toString());\n\n                  console.log(button.display_name);\n                }}\n\n                // console.log(first)\n              >\n                {/* clg */}\n\n                {button.display_name}\n              </button>\n            ))}\n          </div>\n        </>\n\n        {buttonState === \"Bench Report\" && <BenchReport />}\n        {buttonState === \"Resource Overview\" && (\n          <ResourceOverview permission={permission} />\n        )}\n        {buttonState === \"Resource Trending\" && <ResourceTrending />}\n        {buttonState === \"Roll Offs\" && <RollOffs />}\n      </div>\n    </>\n  );\n}\n\nexport default BenchMatrix;\n","import { useState } from 'react';\nimport Button from '@mui/material/Button';\nimport Popover from '@mui/material/Popover';\nimport Typography from '@mui/material/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\n\nfunction ResourceOverviewPopover(props) {\n    const { anchorEl, handleClose, name, popoverContent, message, handleInfoClick, infoMessage } = props\n    console.log(infoMessage)\n\n\n    const open = Boolean(anchorEl);\n    const id = open ? 'my-popover' : undefined;\n\n    return (\n        <div>\n            {/* <Button onClick={handleClick}>Open Popover</Button> */}\n            <Popover\n                className='ResourceOverviewPopover'\n                disablePortal={true}\n                arrow={true}\n                open={Boolean(anchorEl)}\n                id={id}\n                // open={open}\n                anchorEl={anchorEl}\n                onClose={handleClose}\n                anchorOrigin={{\n                    vertical: 'top',\n                    horizontal: 'left',\n                }}\n                transformOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'left',\n                }}\n\n            >\n                <Typography sx={{ p: 1 }}>\n\n                    {infoMessage}\n                </Typography>\n            </Popover>\n        </div>\n    );\n}\n\nexport default ResourceOverviewPopover;\n","import React, { useState, useEffect } from 'react'\nimport \"../FullfimentComponent/ResourceTrending.scss\"\nimport ResourceOverviewPopover from './ResourceOverviewPopover';\nimport { FaInfoCircle } from 'react-icons/fa';\n\nexport default function ResourceTrendingDisplayTable(props) {\n  const { tableData, column } = props;\n  const [infoMessage, setInfoMessage] = useState(\"\");\n  const [anchorEl, setAnchorEl] = useState(null);\n  const [totaldata, setTotaldata] = useState(null);\n\n\n  const filteredData = tableData?.data?.map((element) => {\n    const { kpi_id, ...rest } = element;\n    if (kpi_id !== -1 && kpi_id !== '#') {\n      return { ...rest };\n    }\n    return element;\n  });\n\n\n  const handleInfoClick = (kpi) => {\n    console.log(kpi);\n    const cleanedKpi = kpi.replace(/<\\/?span.*?>/gi, \"\");\n    console.log(cleanedKpi);\n    let message = \"\";\n    if (cleanedKpi.includes(\"Total Resources\")) {\n      message = \"=Sum(Employee+Contractors)\";\n    } else if (cleanedKpi.includes(\"Total Overhead\")) {\n      message = \"=Sum(Org Overhead+Delivery Overhead)\";\n    } else if (cleanedKpi.includes(\"Total Billable Resources \")) {\n      message = \"=Total resources-(Total Overhead+Gardening leave)\";\n    } else if (cleanedKpi.includes(\"Enablement\")) {\n      message =\n        \"*Head Count  is combination of Billable & Non Billable Resources\";\n    } else if (cleanedKpi.includes(\"Serving Notice Period\")) {\n      message =\n        \"=Billable+NBL on projects+Bench (Zero Allocation)+Gardening Leave+Org Overhead+Delivery Overhead\";\n    } else if (\n      cleanedKpi.includes(\"Deployable Bench - Actual\") ||\n      cleanedKpi.includes(\"Deployable Bench (Resource Type)\")\n    ) {\n      message =\n        \"= NBL on projects+Bench (Zero Allocation)+Innovation+Partial Bench\";\n    } else {\n      message = \"No information available for this KPI.\";\n    }\n    setInfoMessage(message);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(false);\n  };\n  return (\n    <div>\n      <div className=\"darkHeaders\">\n\n        <b style={{ color: \"#297ab0\", fontSize: \"15px\" }}> HC Overview </b>\n\n        <table\n          style={{ width: \"25%\" }}\n\n          className=\"table table-bordered table-striped col-6 htmlTable RTHeading\"\n        >\n          <tbody>\n            {column.length > 0 && filteredData?.map((element, index) => {\n              let tabData = []\n              column.forEach((inEle, columnIndex) => {\n                let temp = element[inEle];\n                let data = null;\n                if (temp != -1 && element.kpi_id == -1 && temp?.includes(\"^&\")) {\n                  data = (element[inEle]).split(\"^&\");\n                } else if ((temp == \"#\")) {\n                  (element[inEle]) = \"\";\n                } else if ((element.kpi_id === 0 && temp === 0)) {\n                  (element[inEle]) = \"\";\n                }\n                else {\n                  data = element[index];\n\n                }\n                if (element.kpi_id === -1) {\n                  tabData.push(\n                    data?.length > 0 ? <th className='monthClassName' style={{\n                      verticalAlign: \"middle\", textAlign: \"center\", minWidth: columnIndex != 1 && \"90px\"\n                    }}\n                      colspan={columnIndex === 1 ? 1 : 2} rowspan={temp === \"Resource Category^&0^&2\" ? \"2\" : \"\"}> {data?.length > 0 ? (data[0]) : data}</th> : null\n                  );\n                } else if (element.kpi === \"\" && element[inEle] !== \"\") {\n                  tabData.push(\n                    <th className='FteCntClsName' title={element[inEle]}>{element[inEle]}</th>\n                  );\n                }\n\n                else\n                  if (element[inEle]) {\n\n                    const backgroundColor =\n                      index > 1 && columnIndex > 1 &&\n                      (Math.floor(columnIndex / 2) % 2 === 0\n                        ? columnIndex % 2 === 0\n                          ? \"#F3D6D6 \"\n                          : \"#F3D6D6\"\n                        : columnIndex % 2 === 0\n                          ? \"#BFF5F5\"\n                          : \"#BFF5F5\");\n                    // parseInt(data[keys]).toLocaleString(\"en-US\")}\n                    tabData.push(\n                      <td style={{ backgroundColor, textAlign: index > 1 && columnIndex > 1 ? \"right\" : \"left\" }} ><span dangerouslySetInnerHTML={{ __html: parseInt(element[inEle]).toLocaleString(\"en-US\") == \"NaN\" ? element[inEle] : parseInt(element[inEle]).toLocaleString(\"en-US\") }} />\n                        {(element.kpi.includes(\"Total Resources\") ||\n                          element.kpi.includes(\"Total Overhead\") ||\n                          element.kpi.includes(\"Total Billable Resources\") ||\n                          element.kpi.includes(\"Enablement\") ||\n                          element.kpi.includes(\"Serving Notice Period\") ||\n                          element.kpi.includes(\"Deployable Bench - Actual\") ||\n                          element.kpi.includes(\n                            \"Deployable Bench (Resource Type)\"\n                          )) &&\n                          columnIndex === 1 && (\n                            <FaInfoCircle\n                              className=\"tableInfoIcon\"\n                              onClick={(e) => {\n                                handleInfoClick(element.kpi);\n                                setTotaldata(element.kpi);\n                                setAnchorEl(e.currentTarget);\n                              }}\n                            />\n                          )}\n\n\n\n                      </td>\n                    );\n                  }\n              }\n              );\n\n              return <tr key={index} >{tabData}</tr>\n            })}\n          </tbody>\n        </table>\n      </div>\n      {anchorEl && (\n        <ResourceOverviewPopover\n          handleClose={handleClose}\n          anchorEl={anchorEl}\n          infoMessage={infoMessage}\n        />\n      )}\n    </div>\n\n  );\n\n}\n"],"names":["props","baseUrl","environment","resid","resourcedata","setResourcedata","setValidationMessage","validationmessage","setSaveActionMessage","setResourceName","setDeleteMessage","handleClick1","employeeid","setAddmsg","setsearching","searching","permission","useState","categorytype","setcategoryType","effectivedate","setEffectiveDate","Date","entrydate","entrydate1","moment","format","loggedUserId","localStorage","getItem","loggedUserName","clicked","setClicked","saveCliked","setSaveClicked","cancelClicked","setCancelClicked","deletePopup","setDeletePopup","deleteid","setDeleteId","editeddata","setEditedData","check","setCheck","today","useRef","lastFriday","getTime","getDay","minDate","i","date","created_dt","createdby","completed_dt","effective_dt","comments","lkup_name","formData","setFormData","useEffect","axios","then","Response","type","data","length","forEach","e","TypeObj","label","value","id","push","document","getElementsByClassName","click","setTimeout","addEventListener","slice","postData","rowData","adddata","undefined","classList","add","remove","method","url","created_by","parseInt","resource_id","typ_category_id","type_id","response","catch","error","EditedData","lkup_id","res","DeleteItems","ResourceOverviewDeletePopup","visible","size","className","onClose","onClick","fontSize","editMode","showGridlines","emptyMessage","scrollDirection","paginator","rows","onRowEditComplete","_resourcedata","newData","index","paginatorTemplate","currentPageReportTemplate","rowsPerPageOptions","field","title","header","sortable","body","disabled","filter","editor","options","name","onChange","editorCallback","target","map","a","Item","selected","showMonthDropdown","showYearDropdown","dropdownMode","dateFormat","prev","setDatePicker","filterMatchMode","filterFunction","operator","filterElement","placeholder","showIcon","inputClassName","selectionMode","monthNavigator","yearNavigator","yearRange","showButtonBar","commentstextfiled","split","every","option","startsWith","endsWith","contains","includes","style","display","rowEditor","headerStyle","width","minWidth","bodyStyle","textAlign","paddingLeft","cursor","isChecked","checked","selection","onSelectionChange","color","is_write","dt","addHandler","variant","Save","Reset","setLoader","buttonDisabled","setButtonDisabled","entryby","console","log","removeFirstRowIfEmpty","prod","Object","keys","d","sideArrow","sideDoubleArrow","componentRef","icon","setAttribute","cancelIcon","current","forceUpdate","tableStyle","onKeyDown","preventDefault","cleanedEntryBy","join","excelData","dynamicColumns","col","headerdatagroup","linkColumns","linkColumnsRoutes","headerData","setHeaderData","exportData","customFilters","customFilterValue","setCustomFilterValue","fileName","mainData","setMainData","bodyData","setBodyData","setExportColumns","JSON","parse","stringify","splice","dtt","headDt","dataKey","filtersData","matchMode","FilterMatchMode","global","filters1","setFilters1","globalFilterValue1","setGlobalFilterValue1","onGlobalFilterChange1","_filters1","RenderCustomFilters","cstFtlrs","exportExcel","xlsx","headers","headerOrder","Set","worksheetData","item","floatValue","parseFloat","isNaN","toLocaleString","isValid","dataRows","values","workbook","ExcelJS","worksheet","addWorksheet","addRow","getRow","font","bold","writeBuffer","buffer","blob","Blob","saveAs","header1","defaultValue","filters","responsiveLayout","ref","el","startDate","Addmsg","setresid","setVisible","FaChevronCircleUp","cheveronIcon","setCheveronIcon","business","setBusiness","selectedBusiness","setSelectedBusiness","dispay","setDisplay","React","setChecked","setData","data1","setData1","setExportData","country","setCountry","selectedCountry","setSelectedCountry","engCountry","setEngCountry","setEngSelectCountry","setEngSelectedCountry","getLastSaturday","SetDate","selectedDate","daysToSubtract","previousSaturdayMillis","previousSaturday","getSaturdayOfPreviousWeek","day","daysToSaturday","lastSaturday","setDate","getDate","open","setOpen","loaderState","setLoaderState","deleteMessage","resourcname","loader","displayTable","setDisplayTable","tabHeaders","setTabHeaders","setTypeID","setTableDisplay","setElementId","setEmployeeId","validationmessagesum","setValidationMessagesum","location","useLocation","URLSearchParams","search","get","editmsg","setEditAddmsg","filterData","setFilterData","abortController","heading","setHeading","displayTableCopyBody","setTableHeader","setTableBody","searchDataB","setSearchDataB","getData","BuIds","CountryIds","EngCountryIds","FromDate","Duration","sessKey","isExport","resType","updatebusiness","updatereslocation","updateengCountry","handleClick","GetData","window","scrollTo","top","behavior","setGraphKey1","prevKey","setExcelData","LinkTemplate","employeedata","empStatus","resource","resAllocType","src","fte_notice","alt","height","marginRight","fte_inactive","margin","subk_inactive","Actiondate","actionDt","EffectiveDate","actionEffDt","futureAllocDate","Designation","designation","empId","Department","department","Customer","customer","LoB","Cadre_code","cadre_code","SkillGrps","skillGrps","Skill","Emp_citizenship","emp_citizenship","NectCap","nectCap","BillHrs","billHrs","AvailHrs","availHrs","Projected","percentage","projected","Aging","aging","NbHrs","nbHrs","Supervisor","supervisor","ActionItem","actionItem","headName","onclickHandler","b","element","temp","SummaryData","loaderTime","t","Typ","UserId","clearTimeout","Headerdata","hData","bData","status","concat","err","order","showSummryTable","setShowSummaryTable","GlobalValidation","loaderTimeout","obj","newObj","key","hasOwnProperty","FaChevronCircleDown","departments","ele","filteredDeptData","countries","country_name","countryObj","ArrowRenderer","expanded","tableHeader","tableBody","displayTableFnc","tabData","inEle","inInd","rowSpanValue","colSpanValue","colSpan","rowSpan","align","number","roundedNumber","Math","round","onMouseOver","textDecoration","onMouseOut","routes","setRoutes","getMenus","resp","display_name","generateDropdownLabel","selectedOptions","allOptions","selectedValues","allValues","ScreenBreadcrumbs","currentScreenName","Loader","handleAbort","abort","GlobalHelp","pdfname","SavedSearchGlobal","pageurl","page_Name","payload","htmlFor","valueRenderer","hasSelectAll","s","filteredValues","prevVal","toString","isLoading","shouldToggleOnHover","disableSearch","filteredCountry","event","newSelectedDate","newPreviousSaturday","handleDateChange","placeholderText","float","excludeProperties","filteredItem","fromEntries","entries","cellPadding","cellSpacing","marginTop","background","highcharts3d","Highcharts","tableData","column","filteredData","allHeaders","alldata","fteData","dateKey","substring","parseISO","replace","formattedDateKey","sortedDates3","sort","sortedFteData3","fteData4","sortedDates4","sortedData4","fteData5","sortedDates5","sortedData5","fteData1","sortedDates","sortedFteData","fteData2","sortedDates2","sortedFteData2","assign","fteDataChartConfig","chart","text","exporting","enabled","xAxis","categories","yAxis","tooltip","formatter","tooltipText","this","x","points","point","series","y","shared","positioner","labelWidth","labelHeight","plotX","plotLeft","plotY","plotTop","Number","dataLabels","marker","symbol","fteData1ChartConfig","highcharts","ResourceOverviewDisplayTable","onClickHandler","setId","setHeaderDate","setTotaldata","setEmpTable","nf","Intl","NumberFormat","infoMessage","setInfoMessage","anchorEl","setAnchorEl","reduce","acc","kpi_id","rest","headerDates","columnIndex","colspan","rowspan","kpi","backgroundColor","floor","dangerouslySetInnerHTML","__html","inEleArray","cleanedKpi","message","handleInfoClick","currentTarget","ResourceOverviewPopover","handleClose","setEmployeeData","resCategory","setResCategory","resourceid","setResourceId","setColumn","setCol","setTableData","displayTableState","setDisplayTableState","addmsg","empTable","saveactionmessage","headerdate","totaldata","tempElement","createElement","innerHTML","extractedText","textContent","trim","graphRef","graphKey","setGraphKey","scrollIntoView","graphRef1","graphKey1","defaultDate","now","dayOfWeek","diff","getCurrentSaturday","SavedSearchId","StartDate","cat","rmg_bench_type_id","setCategoryData","actioncategory","setActioncategory","GetEmployees","category","from","duration","reportRunId","res1","val","splt","replaceAll","st","newArray","employee_number","resName","resDOJ","practice","subPractice","projects","resAlloc","rollOfDate","workLocation","resEmail","restType","skillName","actionItemDate","actionItemEffDt","sortedEmpNumber","nameA","toUpperCase","nameB","EmpId","DOJ","ResCAt","resNetCap","Practice","SubPractice","Projects","Allocs","WorkLocation","ResEmail","RestType","SkillName","ActionItemDate","ActionItemEffDt","isInNotice","resId","idString","overrideStrings","selectAllFiltered","selectSomeItems","filterDate","pointerEvents","role","strokeWidth","class","handleChange","durationn","setDurationn","weekDifference","setWeekDifference","errorMsg","setErrorMsg","todayy","setStartDate","fouthsat","currentDate","fifthLastSaturday","previousWeekSaturday","tod","daysSinceSaturday","lastWeekSaturday","getPreviousWeekSaturday","updatecountry","valid","start","daysDifference","weeksDifference","weekdiff","calculateWeekDifference","clone","subtract","toDate","calendarStartDay","maxDate","ResourceTrendingDisplayTable","setDataAr","setDepartments","selectedDepartments","setSelectedDepartments","monthval","setMonthval","setLinkColumns","setLinkColumnsRoutes","columnData","setColumnData","columnData2","setColumnData2","validationMessage","getCurrentMonday","setSelectedDate","Data","startOf","rou","to","project","LinkTemplateAction","rolenameToolip","role_name","cslToolip","csl","dpToolip","dp","projectcodeToolip","project_code","resourceToolip","resStatus","departmentToolip","citizenshipToolip","citizenship","executiveToolip","executive","countryToolip","allocenddateTooltip","alloc_end_date","NextAllocTooltip","nxt_alloc_date","managerTooltip","manager","actionCommentsTooltip","actionComments","initialValue","FutureAlloc","allocends","projectcode","projectmanager","engexecutive","recentactionitem","countryList","getDepartments","monthVal","showMonthYearPicker","AbortController","signal","GlobalCancel","CellRendererPrimeReactDataTable","buttonState","setButtonState","setPermission","button","popoverContent","Boolean","disablePortal","arrow","anchorOrigin","vertical","horizontal","transformOrigin","sx","p","verticalAlign"],"sourceRoot":""}