{"version":3,"file":"static/js/554.6b0ccf62.chunk.js","mappings":"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","sources":["views/GovernanceComponent/AuditCpSetup.js","views/GovernanceComponent/AuditCpSetupTable.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport { MultiSelect } from \"react-multi-select-component\";\nimport {\n  FaChevronCircleDown,\n  FaChevronCircleUp,\n  FaSearch,\n  FaCheck,\n  FaSave,\n  FaDownload,\n  FaCaretDown,\n} from \"react-icons/fa\";\nimport { getTableData } from \"./AuditCpSetupTable\";\nimport FlatPrimeReactTable from \"../PrimeReactTableComponent/FlatPrimeReactTable\";\nimport { CCollapse, CModalTitle } from \"@coreui/react\";\nimport axios from \"axios\";\nimport { CModal } from \"@coreui/react\";\nimport { CModalBody } from \"@coreui/react\";\nimport { CModalHeader } from \"@coreui/react\";\nimport Draggable from \"react-draggable\";\nimport DatePicker from \"react-datepicker\";\nimport moment from \"moment\";\nimport { environment } from \"../../environments/environment\";\nimport CellRendererPrimeReactDataTable from \"../PrimeReactTableComponent/CellRendererPrimeReactDataTable\";\nimport { Column } from \"ag-grid-community\";\nimport { AiFillDelete, AiFillEdit, AiFillWarning } from \"react-icons/ai\";\nimport { ImCross } from \"react-icons/im\";\nimport { BiCheck } from \"react-icons/bi\";\nimport GlobalValidation from \"../ValidationComponent/GlobalValidation\";\nimport { RiAddLine, RiInformationLine } from \"react-icons/ri\";\nimport { MdOutlineFileUpload } from \"react-icons/md\";\nimport { FileUpload, Height } from \"@mui/icons-material\";\nimport Loader from \"../Loader/Loader\";\nimport GlobalCancel from \"../ValidationComponent/GlobalCancel\";\nimport { IoInformationCircleOutline } from \"react-icons/io5\";\nimport { IoMdInformationCircleOutline } from \"react-icons/io\";\nconst DeletePopUp = (props) => {\n  const {\n    deletePopup,\n    setDeletePopup,\n    setEditedData,\n    editedData,\n    handleClick,\n    setDeleteMessage,\n    setDelMsg,\n  } = props;\n  const baseUrl = environment.baseUrl;\n  const deleteFnc = () => {\n    axios({\n      method: \"delete\",\n      url:\n        baseUrl +\n        `/governancems/AuditCPSetup/deleteAuditCheckPointsById?id=${editedData.id}`,\n    }).then((res) => {\n      handleClick();\n      setDeletePopup(false);\n      console.log(res.data.status, \"response\");\n      console.log(res.data.message, \"message\");\n      res.data.status == \"true\" ? setDeleteMessage(true) : setDelMsg(true);\n      setTimeout(() => {\n        setDeleteMessage(false);\n        setDelMsg(false);\n      }, 3000);\n    });\n  };\n  return (\n    <div>\n      <Draggable>\n        <CModal\n          visible={deletePopup}\n          size=\"xs\"\n          className=\"ui-dialog\"\n          onClose={() => setDeletePopup(false)}\n        >\n          <CModalHeader className=\"\">\n            <CModalTitle>\n              <span className=\"\">Delete Audit Checkpoint</span>\n            </CModalTitle>\n          </CModalHeader>\n          <CModalBody>\n            <h6>Are you sure you want delete audit checkpoint ?</h6>\n            <div className=\"btn-container center my-2\">\n              <button\n                className=\"btn btn-primary\"\n                onClick={() => {\n                  deleteFnc();\n                }}\n              >\n                <AiFillDelete /> Delete{\" \"}\n              </button>\n              <button\n                className=\"btn btn-secondary\"\n                onClick={() => {\n                  setDeletePopup(false);\n                }}\n              >\n                <ImCross /> Cancel{\" \"}\n              </button>\n            </div>\n          </CModalBody>\n        </CModal>\n      </Draggable>\n    </div>\n  );\n};\nconst EditPopUp = (props) => {\n  const {\n    editPopup,\n    setEditPopup,\n    editId,\n    handleClick,\n    editedData,\n    setEditAddmsg,\n  } = props;\n\n  const [fromDate, SetfromDate] = useState(null);\n  const [from, Setfrom] = useState(null);\n  const [tillDate, SetTillDate] = useState(null);\n  const [editData, setEditData] = useState(null);\n  const [validationMessage, setValidationMessage] = useState(false);\n  const ref = useRef([]);\n  const baseUrl = environment.baseUrl;\n  const [formData, setFormData] = useState(editedData);\n\n  const handleAddClick = () => {\n    GlobalCancel(ref);\n\n    if (editedData.project_type == \"\" || editedData.project_phase == \"\") {\n      let valid = GlobalValidation(ref);\n      if (valid) {\n        {\n          setValidationMessage(true);\n        }\n        return;\n      }\n    } else {\n      setValidationMessage(false);\n      axios({\n        method: \"post\",\n        url: baseUrl + `/governancems/AuditCPSetup/postAuditCheckPoints`,\n        data: {\n          id: editedData.id,\n          projectType: editedData.project_type,\n          projectPhase: editedData.project_phase,\n          checkPoint: editedData.check_point,\n          initiationWeightage: editedData.initiation_weightage,\n          steadyStateWeightage: editedData.steady_state_weightage,\n          closureWeightage: editedData.closure_weightage,\n          isoDetails: editedData.iso_details,\n          isActive: 1,\n          validFrom:\n            formData.validFrom == null\n              ? moment(editedData.valid_from).format(\"yyyy-MM-DD\")\n              : formData.validFrom == \"\"\n              ? \"\"\n              : formData.validFrom,\n          validTill:\n            formData.validTill !== \" \"\n              ? formData.validTill\n              : moment(editedData.valid_till).format(\"yyyy-MM-DD\"),\n        },\n        headers: { \"Content-Type\": \"application/json\" },\n      }).then((response) => {\n        const data = response.data;\n        console.log(\"success\", data);\n        setEditData(data);\n        setEditPopup(false);\n        handleClick();\n        setEditAddmsg(true);\n        setTimeout(() => {\n          setEditAddmsg(false);\n        }, 3000);\n      });\n    }\n  };\n  useEffect(\n    () => {\n      SetfromDate(moment(editedData.valid_from)._d);\n      SetTillDate(\n        editedData.valid_till == \"\" ? \"\" : moment(editedData.valid_till)._d\n      );\n    },\n    [editedData],\n    [formData],\n    [formData.validFrom]\n  );\n\n  return (\n    <div>\n      {/* <Draggable> */}\n      <CModal\n        visible={editPopup}\n        size=\"lg\"\n        className=\"ui-dialog \"\n        onClose={() => setEditPopup(false)}\n        style={{ border: \"0px\" }}\n      >\n        <CModalHeader className=\"hgt22\">\n          <CModalTitle>\n            <span className=\"ft16\">Edit Check Point Dates</span>\n          </CModalTitle>\n        </CModalHeader>\n        <CModalBody>\n          <div>\n            {validationMessage ? (\n              <div className=\"statusMsg error\">\n                {\" \"}\n                <AiFillWarning /> Please select the valid values for highlighted\n                fields{\" \"}\n              </div>\n            ) : (\n              \"\"\n            )}\n            <div className=\"group-content row\">\n              <div className=\"col-6\">\n                <div className=\"form-group row \">\n                  <label className=\"col-5\">\n                    Valid From<span className=\"error-text\">*</span>\n                  </label>\n                  <span className=\"col-1\">:</span>\n                  <span className=\"col-6\">\n                    <div\n                      className=\"datepicker cancel\"\n                      ref={(ele) => {\n                        ref.current[0] = ele;\n                      }}\n                    >\n                      <DatePicker\n                        id=\"validFrom\"\n                        className=\"cancel\"\n                        selected={fromDate}\n                        showMonthDropdown\n                        dateFormat=\"MMM-yyyy\"\n                        showMonthYearPicker\n                        defaultValue={moment(editedData.valid_from)._d}\n                        dropdownMode=\"select\"\n                        onChange={(e) => {\n                          Setfrom(e);\n                          console.log(from, \"line no-----------------date\");\n                          SetfromDate(e);\n                          setFormData((prev) => ({\n                            ...prev,\n                            [\"validFrom\"]: moment(e).format(\"yyyy-MM-DD\"),\n                          }));\n                        }}\n                        onKeyDown={(e) => {}}\n                      />\n                    </div>\n                  </span>\n                </div>\n              </div>\n              <div className=\"col-6\">\n                <div className=\"form-group row \">\n                  <label className=\"col-5\">Valid Till</label>\n                  <span className=\"col-1\">:</span>\n                  <span className=\"col-6\">\n                    <div className=\"datepicker cancel\">\n                      <DatePicker\n                        id=\"validTill\"\n                        className=\"cancel\"\n                        selected={tillDate}\n                        showMonthDropdown\n                        showMonthYearPicker\n                        dateFormat=\"MMM-yyyy\"\n                        // minDate={formData.validFrom}\n                        minDate={fromDate}\n                        defaultValue={moment(editedData.valid_till)._d}\n                        dropdownMode=\"select\"\n                        onChange={(e) => {\n                          SetTillDate(e);\n                          setFormData((prev) => ({\n                            ...prev,\n                            [\"validTill\"]: moment(e).format(\"yyyy-MM-DD\"),\n                          }));\n                        }}\n                        onKeyDown={(e) => {\n                          e.preventDefault();\n                        }}\n                      />\n                    </div>\n                  </span>\n                </div>\n              </div>\n            </div>\n            <div className=\"col-md-12 col-sm-12 col-xs-12 btn-container center my-3 mb-2\">\n              <button\n                className=\"btn btn-primary \"\n                onClick={() => {\n                  handleAddClick();\n                }}\n              >\n                <FaSave />\n                &nbsp;Save{\" \"}\n              </button>\n              <button\n                className=\"btn btn-primary \"\n                onClick={() => {\n                  setEditPopup(false);\n                }}\n              >\n                <ImCross />\n                Cancel\n              </button>\n            </div>\n          </div>\n        </CModalBody>\n      </CModal>\n      {/* </Draggable> */}\n    </div>\n  );\n};\nconst AddPopUp = (props) => {\n  const {\n    addPopup,\n    projectType,\n    projectPhase,\n    setaddPopup,\n    handleClick,\n    setAddmsg,\n  } = props;\n  const [fromDate, SetfromDate] = useState(null);\n  const [tillDate, SetTillDate] = useState(null);\n  const [addData, setAddData] = useState([]);\n  const [monthFrom, setMonthFrom] = useState(new Date());\n  const [monthTill, setMonthTill] = useState(new Date());\n  const [validationMessage, setValidationMessage] = useState(false);\n\n  const ref = useRef([]);\n  const initialValue = {\n    projectType: \"\",\n    projectPhase: \"\",\n    checkPoint: \"\",\n    initiationWeightage: \"\",\n    steadyStateWeightage: \"\",\n    closureWeightage: \"\",\n    isoDetails: \"\",\n    isActive: 1,\n    validFrom: \"\",\n    validTill: \"\",\n  };\n  const [formData, setFormData] = useState(initialValue);\n\n  const baseUrl = environment.baseUrl;\n\n  const handleAddClick = () => {\n    console.log(formData);\n    let valid = GlobalValidation(ref);\n\n    if (valid) {\n      {\n        setValidationMessage(true);\n      }\n      return;\n    }\n    axios({\n      method: \"post\",\n      url: baseUrl + `/governancems/AuditCPSetup/postAuditCheckPoints`,\n      data: {\n        projectType: formData.projectType,\n        projectPhase: formData.projectPhase,\n        checkPoint: formData.checkPoint,\n        initiationWeightage: formData.initiationWeightage,\n        steadyStateWeightage: formData.steadyStateWeightage,\n        closureWeightage: formData.closureWeightage,\n        isoDetails: formData.isoDetails,\n        isActive: 1,\n        validFrom: formData.validFrom,\n        validTill: formData.validTill,\n      },\n      headers: { \"Content-Type\": \"application/json\" },\n    }).then((response) => {\n      const data = response.data;\n      console.log(\"success\", data);\n      setAddData(data);\n      setaddPopup(false);\n      handleClick();\n      setAddmsg(true);\n      setTimeout(() => {\n        setAddmsg(false);\n      }, 3000);\n      setValidationMessage(false);\n    });\n  };\n\n  console.log(formData, \"popup\");\n  const getName = (e) => {\n    const { value, id } = e.target;\n\n    setFormData({ ...formData, value });\n  };\n  return (\n    <div>\n      {/* <Draggable> */}\n      <CModal\n        visible={addPopup}\n        size=\"lg\"\n        className=\"ui-dialog \"\n        onClose={() => setaddPopup(false)}\n        style={{ border: \"0px\" }}\n      >\n        <CModalHeader className=\"hgt22\">\n          <CModalTitle>\n            <span className=\"ft16\">Add Check Point</span>\n          </CModalTitle>\n        </CModalHeader>\n        <CModalBody>\n          <div>\n            {validationMessage ? (\n              <div className=\"statusMsg error\">\n                {\" \"}\n                <AiFillWarning /> Please select the valid values for highlighted\n                fields{\" \"}\n              </div>\n            ) : (\n              \"\"\n            )}\n            <div className=\"group-content row\">\n              <div className=\"form-group row mb-2\">\n                <label className=\"col-5\">\n                  Type<span className=\"error-text\">*</span>\n                </label>\n                <span className=\"col-1 p-0\">:</span>\n                <span className=\"col-6\">\n                  <select\n                    className=\"text textfield\"\n                    id=\"projectType\"\n                    onChange={(e) => {\n                      const { value, id } = e.target;\n                      setFormData({ ...formData, [id]: value });\n                    }}\n                    ref={(ele) => {\n                      ref.current[0] = ele;\n                    }}\n                  >\n                    <option value=\"\"> &lt;&lt;Please Select&gt;&gt;</option>\n                    {projectType.map((Item) => (\n                      <option value={Item.value}> {Item.label}</option>\n                    ))}\n                  </select>\n                </span>\n              </div>\n              <div className=\"form-group row mb-2\">\n                <label className=\"col-5\">\n                  Phase<span className=\"error-text\">*</span>\n                </label>\n                <span className=\"col-1 p-0\">:</span>\n                <span className=\"col-6\">\n                  <select\n                    className=\"text textfield\"\n                    id=\"projectPhase\"\n                    onChange={(e) => {\n                      const { value, id } = e.target;\n                      setFormData({ ...formData, [id]: value });\n                    }}\n                    ref={(ele) => {\n                      ref.current[1] = ele;\n                    }}\n                  >\n                    <option value=\"\"> &lt;&lt;Please Select&gt;&gt;</option>\n                    {projectPhase.map((Item) => (\n                      <option value={Item.value}> {Item.label}</option>\n                    ))}\n                  </select>\n                </span>\n              </div>\n              <div className=\"form-group row mb-2\">\n                <label className=\"col-5\">\n                  Audit Checkpoints<span className=\"error-text\">*</span>\n                </label>\n                <span className=\"col-1 p-0\">:</span>\n                <span\n                  className=\"col-6 textfield\"\n                  ref={(ele) => {\n                    ref.current[2] = ele;\n                  }}\n                >\n                  <input\n                    type=\"Text\"\n                    id=\"checkPoint\"\n                    placeholder=\"Check Point\"\n                    onChange={(e) => {\n                      const { value, id } = e.target;\n                      setFormData((prevVal) => ({\n                        ...prevVal,\n                        [\"checkPoint\"]: value,\n                      }));\n                    }}\n                  />\n                </span>\n              </div>\n              <div className=\"form-group row mb-2\">\n                <label className=\"col-5\">\n                  ISO 9001:2015<span className=\"error-text\">*</span>\n                </label>\n                <span className=\"col-1 p-0\">:</span>\n                <span\n                  className=\"col-6 textfield\"\n                  ref={(ele) => {\n                    ref.current[3] = ele;\n                  }}\n                >\n                  <input\n                    type=\"Text\"\n                    id=\"isoDetails\"\n                    placeholder=\"ISO Details\"\n                    onChange={(e) => {\n                      const { value, id } = e.target;\n                      setFormData((prevVal) => ({\n                        ...prevVal,\n                        [\"isoDetails\"]: value,\n                      }));\n                    }}\n                  />\n                </span>\n              </div>\n              <div className=\"form-group row mb-2\">\n                <label className=\"col-5\">\n                  Initiation Weightage <span className=\"error-text\">*</span>\n                </label>\n                <span className=\"col-1 p-0\">:</span>\n                <span\n                  className=\"col-6 textfield\"\n                  ref={(ele) => {\n                    ref.current[4] = ele;\n                  }}\n                >\n                  <input\n                    type=\"Text\"\n                    id=\"initiationWeightage\"\n                    placeholder=\"Initiation Weightage\"\n                    onChange={(e) => {\n                      const input = e.target.value;\n                      const regex = /^[0-9]*\\.?[0-9]*$/; // Regular expression to match numbers\n\n                      if (!regex.test(input)) {\n                        e.target.value = input.replace(/[^0-9.]/g, \"\"); // Remove non-numeric characters\n                      }\n                      // onChangetext(e);\n                      // const { value, id } = e.target;\n\n                      setFormData((prevVal) => ({\n                        ...prevVal,\n                        [\"initiationWeightage\"]: input,\n                      }));\n                    }}\n                  />\n                </span>\n              </div>\n              <div className=\"form-group row mb-2\">\n                <label className=\"col-5\">\n                  Steady State Weightage<span className=\"error-text\">*</span>\n                </label>\n                <span className=\"col-1 p-0\">:</span>\n                <span\n                  className=\"col-6 textfield\"\n                  ref={(ele) => {\n                    ref.current[5] = ele;\n                  }}\n                >\n                  <input\n                    type=\"Text\"\n                    id=\"steadyStateWeightage\"\n                    placeholder=\"Steady State Weightage\"\n                    // onChange={(e) => {\n                    //   const { value, id } = e.target;\n                    onChange={(e) => {\n                      const input = e.target.value;\n                      const regex = /^[0-9]*\\.?[0-9]*$/; // Regular expression to match numbers\n\n                      if (!regex.test(input)) {\n                        e.target.value = input.replace(/[^0-9.]/g, \"\"); // Remove non-numeric characters\n                      }\n                      setFormData((prevVal) => ({\n                        ...prevVal,\n                        [\"steadyStateWeightage\"]: input,\n                      }));\n                    }}\n                  />\n                </span>\n              </div>\n              <div className=\"form-group row mb-2\">\n                <label className=\"col-5\">\n                  Closure Weightage<span className=\"error-text\">*</span>\n                </label>\n                <span className=\"col-1 p-0\">:</span>\n                <span\n                  className=\"col-6 textfield\"\n                  ref={(ele) => {\n                    ref.current[6] = ele;\n                  }}\n                >\n                  <input\n                    type=\"Text\"\n                    id=\"closureWeightage\"\n                    placeholder=\"Closure Weightage\"\n                    // onChange={(e) => {\n                    //   const { value, id } = e.target;\n                    onChange={(e) => {\n                      const input = e.target.value;\n                      const regex = /^[0-9]*\\.?[0-9]*$/; // Regular expression to match numbers\n\n                      if (!regex.test(input)) {\n                        e.target.value = input.replace(/[^0-9.]/g, \"\"); // Remove non-numeric characters\n                      }\n\n                      setFormData((prevVal) => ({\n                        ...prevVal,\n                        [\"closureWeightage\"]: input,\n                      }));\n                    }}\n                  />\n                </span>\n              </div>\n              <div className=\"form-group row mb-2\">\n                <label className=\"col-5\">\n                  Valid From<span className=\"error-text\">*</span>\n                </label>\n                <span className=\"col-1 p-0\">:</span>\n                <span\n                  className=\"col-6 datepicker\"\n                  ref={(ele) => {\n                    ref.current[7] = ele;\n                  }}\n                >\n                  <DatePicker\n                    name=\"validFrom\"\n                    id=\"validFrom\"\n                    selected={fromDate}\n                    dateFormat=\"MMM-yyyy\"\n                    showMonthYearPicker\n                    onChange={(e) => {\n                      SetfromDate(e);\n                      setFormData((prev) => ({\n                        ...prev,\n                        [\"validFrom\"]: moment(e).format(\"yyyy-MM-DD\"),\n                      }));\n                      setMonthFrom(e);\n                    }}\n                    placeholderText=\"Valid From\"\n                    onKeyDown={(e) => {\n                      e.preventDefault();\n                    }}\n                  />\n                </span>\n              </div>\n              <div className=\"form-group row mb-2\">\n                <label className=\"col-5\">Valid Till</label>\n                <span className=\"col-1 p-0\">:</span>\n                <span className=\"col-6\">\n                  <DatePicker\n                    name=\"validTill\"\n                    id=\"validTill\"\n                    selected={tillDate}\n                    minDate={fromDate}\n                    onChange={(e) => {\n                      SetTillDate(e);\n                      setFormData((prev) => ({\n                        ...prev,\n                        [\"validTill\"]: moment(e).format(\"yyyy-MM-DD\"),\n                      }));\n                      setMonthTill(e);\n                    }}\n                    dateFormat=\"MMM-yyyy\"\n                    showMonthYearPicker\n                    placeholderText=\"Valid Till\"\n                    onKeyDown={(e) => {\n                      e.preventDefault();\n                    }}\n                  />\n                </span>\n              </div>\n              <div className=\"col-md-12\" align=\"center\">\n                {\" \"}\n                <button\n                  type=\"button\"\n                  className=\"btn btn-primary\"\n                  onClick={handleAddClick}\n                >\n                  <FaSave />\n                  &nbsp;Save{\" \"}\n                </button>{\" \"}\n              </div>\n            </div>\n          </div>\n        </CModalBody>\n      </CModal>\n      {/* </Draggable> */}\n    </div>\n  );\n};\nfunction UploadPopUp(props) {\n  const { setUploadPopUp, uploadpopUp, handleClick } = props;\n  const baseUrl = environment.baseUrl;\n  const [dupliMsg, setDupliMsg] = useState([]);\n  const [dupDisplay, setDupDisplay] = useState(false);\n  const [tbaleData, setTbaleData] = useState([]);\n  console.log(dupDisplay);\n  const onFileChangeHandler = (e) => {\n    console.log(\"in on file change handler\");\n    console.log(e.target.files[0], \"e.target.files[0]\");\n    setSelectedFile(e.target.files[0]);\n    console.log(e.target.files[0], \"data\");\n  };\n  const [selectedFile, setSelectedFile] = useState([]);\n  const [key, setKey] = useState(0);\n  const [message, setMessage] = useState(false);\n  const [message1, setMessage1] = useState(false);\n  const loggedUserId = localStorage.getItem(\"resId\");\n  const [tblDis, setTblDis] = useState(false);\n  const [selctErr, setSelctErr] = useState(false);\n  const [empty, setempty] = useState(false);\n\n  const downloadEmployeeData = () => {\n    const docUrl =\n      baseUrl + `/CommonMS/document/downloadFile?documentId=74755190`;\n\n    axios({\n      url: docUrl,\n      method: \"GET\",\n      responseType: \"blob\",\n    }).then((response) => {\n      const contentType = response.headers[\"content-type\"];\n      const extension = \".xlsx\";\n      const blob = new Blob([response.data], { type: contentType });\n      const url = window.URL.createObjectURL(blob);\n      const link = document.createElement(\"a\");\n      link.href = url;\n      link.setAttribute(\"download\", `Audit CheckPoints${extension}`);\n      document.body.appendChild(link);\n      link.click();\n    });\n  };\n  const handleSaveClick = () => {\n    setMessage(false);\n\n    axios\n      .postForm(\n        baseUrl +\n          `/SalesMS/pmo/uploadAuditCheckpoints?loggedUserId=${loggedUserId}`,\n        // `http://localhost:8090/SalesMS/pmo/uploadAuditCheckpoints?loggedUserId=${loggedUserId}`,\n        {\n          file: selectedFile,\n        },\n        {\n          headers: {\n            \"Content-Type\": \"multipart/form-data\",\n          },\n        }\n      )\n      .then((res) => {\n        const data = res.data;\n        setKey((prevKey) => prevKey + 1);\n        setSelectedFile([]);\n        console.log(data);\n\n        if (data.status == \"success\") {\n          setMessage(true);\n          setUploadPopUp(false);\n          handleClick();\n        } else if (data.message == \"Please select a file to upload\") {\n          setSelctErr(true);\n          setTimeout(() => {\n            setSelctErr(false);\n          }, 2000);\n          setMessage(false);\n          setempty(false);\n          setDupDisplay(false);\n          setTblDis(false);\n          console.log(data.Finaldata.data);\n        } else if (\n          data.message == \"Please select a valid file\" ||\n          data.message == \"Unsupported file format\"\n        ) {\n          setempty(true);\n          setSelctErr(false);\n          setMessage(false);\n          setDupDisplay(false);\n          setTblDis(false);\n          console.log(data.Finaldata.data);\n        } else if (data.message == \"Please remove the Duplicates\") {\n          setDupDisplay(true);\n          setempty(false);\n          setSelctErr(false);\n          setMessage(false);\n          setDupliMsg(data.message);\n          setTbaleData(data?.Finaldata?.data);\n          setTblDis(true);\n        } else {\n          setDupliMsg(\"\");\n        }\n        setTimeout(() => {\n          setMessage(false);\n        }, 2000);\n      });\n  };\n\n  return (\n    <div>\n      {/* <Draggable> */}\n      <CModal\n        alignment=\"center\"\n        backdrop=\"static\"\n        size=\"lg\"\n        visible={uploadpopUp}\n        className=\"ui-dialog\"\n        onClose={() => {\n          setUploadPopUp(false);\n        }}\n      >\n        <CModalHeader style={{ cursor: \"all-scroll\" }}>\n          <CModalTitle>\n            <span>Add Check Points</span>\n          </CModalTitle>\n        </CModalHeader>\n        <CModalBody>\n          {message && (\n            <div className=\"statusMsg success\">\n              <BiCheck />\n              {\"Data Uploaded successfully\"}\n            </div>\n          )}\n          {dupDisplay && (\n            <div className=\"statusMsg error\">\n              <AiFillWarning />\n              {dupliMsg}\n            </div>\n          )}\n          {selctErr && (\n            <div className=\"statusMsg error\">\n              <AiFillWarning />\n              {\"Please select a file to upload\"}\n            </div>\n          )}\n          {empty && (\n            <div className=\"statusMsg error\">\n              <AiFillWarning />\n              {\"Please select a valid file\"}\n            </div>\n          )}\n\n          <div className=\"mod-md-12 row\">\n            <div className=\"col-8\">\n              <div\n                className=\"statusMsg warning mb-3\"\n                style={{\n                  color: \"#746d26\",\n                  fontSize: \"12px\",\n                }}\n              >\n                <RiInformationLine /> Click on Template Button to download the\n                audit check list template.\n              </div>\n            </div>\n            <div className=\"col-2\"></div>\n            <div className=\"group-content col-2 row\">\n              <button\n                style={{ marginLeft: \"auto\" }}\n                className=\"btn btn-primary float-end mt-1\"\n                onClick={() => {\n                  downloadEmployeeData();\n                }}\n              >\n                <FaDownload /> Template\n              </button>\n            </div>\n          </div>\n          <div className=\"mod-md-12 row\">\n            <div className=\"col-md-6\">\n              <input\n                key={key}\n                type=\"file\"\n                name=\"file\"\n                className=\"fileUpload unique1 form-control\"\n                id=\"file\"\n                onChange={onFileChangeHandler}\n              />\n            </div>\n            <div className=\"group-content col-2 row mb-2\">\n              <button\n                style={{ marginLeft: \"auto\" }}\n                className=\"btn btn-primary float-end\"\n                onClick={() => {\n                  handleSaveClick();\n                }}\n              >\n                <FileUpload /> Upload\n              </button>\n            </div>\n          </div>\n          <div className=\"mod-md-1\"></div>\n          <div className=\"mod-md-10 row\">\n            {tblDis && (\n              <table\n                className=\"table table-bordered table-striped attainTable \"\n                style={{ width: \"100%\" }}\n              >\n                <thead>\n                  <tr className=\"fs10 \" style={{ backgroundColor: \"#f2f5f6\" }}>\n                    <th style={{ textAlign: \"center\" }} className=\"ellipsis\">\n                      S. No\n                    </th>\n                    <th style={{ textAlign: \"center\" }} className=\"ellipsis\">\n                      Phase\n                    </th>\n                    <th style={{ textAlign: \"center\" }} className=\"ellipsis\">\n                      Type\n                    </th>\n                    <th style={{ textAlign: \"center\" }} className=\"ellipsis\">\n                      Checkpoints\n                    </th>\n                    <th style={{ textAlign: \"center\" }} className=\"ellipsis\">\n                      Iso Details\n                    </th>\n                    <th style={{ textAlign: \"center\" }} className=\"ellipsis\">\n                      Initiation Weightage\n                    </th>\n                    <th style={{ textAlign: \"center\" }} className=\"ellipsis\">\n                      Steady State Weightage\n                    </th>\n                    <th style={{ textAlign: \"center\" }} className=\"ellipsis\">\n                      Closure Weightage{\" \"}\n                    </th>\n                    <th style={{ textAlign: \"center\" }} className=\"ellipsis\">\n                      Comments\n                    </th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {tbaleData?.map((item, index) => (\n                    <tr\n                      key={index}\n                      style={{ backgroundColor: \"rgba(255, 0, 0, 0.1)\" }}\n                    >\n                      <td>{index + 1}</td>\n                      <td>{item.project_type}</td>\n                      <td>{item.project_phase}</td>\n                      <td>{item.checkpoint}</td>\n                      <td>{item.iso_details}</td>\n                      <td style={{ textAlign: \"right\" }}>\n                        {item.initiation_weightage}\n                      </td>\n                      <td style={{ textAlign: \"right\" }}>\n                        {item.steady_state_weightage}\n                      </td>\n                      <td style={{ textAlign: \"right\" }}>\n                        {item.closure_weightage}\n                      </td>\n                      <td>{item.comments}</td>\n                    </tr>\n                  ))}\n                </tbody>\n              </table>\n            )}\n          </div>\n          <div className=\"mod-md-1 ml-2\"></div>\n        </CModalBody>\n      </CModal>\n      {/* </Draggable> */}\n    </div>\n  );\n}\nfunction AuditCpSetup() {\n  const [visible, setVisible] = useState(false);\n  const [cheveronIcon, setCheveronIcon] = useState(FaChevronCircleUp);\n  const [dataAr, setDataAr] = useState([]);\n  const [data, setData] = useState([]);\n  const [projectPhase, setProjectPhase] = useState([]);\n  const [selectedProjectPhase, setSelectedProjectPhase] = useState([]);\n  const [addPopup, setaddPopup] = useState(false);\n  const [editPopup, setEditPopup] = useState(false);\n  const [deletePopup, setDeletePopup] = useState(false);\n  const [projectType, setProjectType] = useState([]);\n  const [selectedProjectType, setSelectedProjectType] = useState([]);\n  const [linkColumns, setLinkColumns] = useState([]);\n  const [linkColumnsRoutes, setLinkColumnsRoutes] = useState([]);\n  const [headerData, setHeaderData] = useState([]);\n  const [type, setType] = useState(\"add\");\n  const [editedData, setEditedData] = useState([]);\n  const [update, setUpdate] = useState(false);\n  const [loader, setLoader] = useState(false);\n  const [addmsg, setAddmsg] = useState(false);\n  const [deleteMessage, setDeleteMessage] = useState(false);\n  const [editmsg, setEditAddmsg] = useState(false);\n  const [editId, setEditId] = useState();\n  const [validationMessage, setValidationMessage] = useState(false);\n  const baseUrl = environment.baseUrl;\n  const [loaderState, setLoaderState] = useState(false);\n  const [uploadpopUp, setUploadPopUp] = useState(false);\n  const abortController = useRef(null);\n  const [delMsg, setDelMsg] = useState(false);\n\n  const ArrowRenderer = ({ expanded }) => (\n    <>\n      {expanded ? (\n        <FaCaretDown className=\"chevronIcon\" />\n      ) : (\n        <FaCaretDown className=\"chevronIcon\" />\n      )}\n    </>\n  );\n\n  const generateDropdownLabel = (selectedOptions, allOptions) => {\n    const selectedValues = selectedOptions.map((option) => option.value);\n\n    const allValues = allOptions.map((item) => item.value);\n\n    if (selectedValues.length === allValues.length) {\n      return \"<< ALL >>\";\n    } else {\n      return selectedOptions.map((option) => option.label).join(\", \");\n    }\n  };\n\n  const ref = useRef([]);\n  const initialValue = {\n    prjType: \"-1\",\n    prjPhase: \"-1\",\n    isSearch: \"1\",\n  };\n  const [formData, setFormData] = useState(initialValue);\n  const handleChange = (e) => {\n    const { id, value } = e.target;\n    setFormData((prev) => ({ ...prev, [id]: value }));\n  };\n  useEffect(() => {}, [editedData]);\n  const getprojectTypeFnc = () => {\n    axios\n      .get(baseUrl + `/governancems/AuditCPSetup/getProjectTypes`)\n      .then((Response) => {\n        let types = [];\n        let data = Response.data;\n        data.length > 0 &&\n          data.forEach((e) => {\n            let countryObj = {\n              label: e.lkup_name,\n              value: e.id,\n            };\n            types.push(countryObj);\n          });\n        setProjectType(types);\n\n        setSelectedProjectType(types);\n      })\n      .catch((error) => console.log(error));\n  };\n  console.log(projectType, \"lione no---------------------322\");\n  const getprojectPhaseFnc = () => {\n    axios\n      .get(baseUrl + `/governancems/AuditCPSetup/getProjectPhase`)\n      .then((Response) => {\n        let phases = [];\n        let data = Response.data;\n        data.length > 0 &&\n          data.forEach((e) => {\n            let countryObj = {\n              label: e.lkup_name,\n              value: e.id,\n            };\n            phases.push(countryObj);\n          });\n        setProjectPhase(phases);\n        setSelectedProjectPhase(phases);\n      })\n      .catch((error) => console.log(error));\n  };\n\n  const handleClick = () => {\n    GlobalCancel(ref);\n    if (formData.prjType == \"\" || formData.prjPhase == \"\") {\n      let valid = GlobalValidation(ref);\n\n      if (valid) {\n        {\n          setValidationMessage(true);\n        }\n        return;\n      }\n    } else {\n      setValidationMessage(false);\n      setLoaderState(true);\n      abortController.current = new AbortController();\n\n      axios({\n        method: \"post\",\n        url: baseUrl + `/governancems/AuditCPSetup/getCustProjects`,\n        signal: abortController.current.signal,\n\n        data: {\n          prjType: formData.prjType,\n          prjPhase: formData.prjPhase,\n          isSearch: 1,\n        },\n        headers: { \"Content-Type\": \"application/json\" },\n      }).then((response) => {\n        const data = response.data;\n        console.log(data, \"line no------48\");\n        const Headerdata = [\n          {\n            sno: \"SNo\",\n            proj_type: \"Type\",\n            proj_phase: \"Phase\",\n            check_point: \"Audit Checkpoints\",\n            iso_details: \"ISO 9001:2015\",\n            initiation_weightage: \"Initiation Weightage\",\n            steady_state_weightage: \"Steady State Weightage\",\n            closure_weightage: \"Closure Weightage\",\n            valid_from: \"Valid From\",\n            valid_till: \"Valid Till\",\n            Action: \"Action\",\n          },\n        ];\n        setLinkColumns(data);\n        var tempData = [];\n        data.forEach(function (d, index) {\n          d[\"sno\"] = index + 1;\n          tempData.push(d);\n        });\n        setData(Headerdata.concat(tempData));\n        setValidationMessage(false);\n        setLoaderState(false);\n      });\n    }\n  };\n  const handleAbort = () => {\n    abortController.current && abortController.current.abort();\n    setLoaderState(false);\n  };\n\n  useEffect(() => {\n    let tdata = getTableData();\n    setDataAr(tdata);\n    handleClick();\n    getprojectPhaseFnc();\n    getprojectTypeFnc();\n  }, []);\n  useEffect(() => {\n    data[0] && setHeaderData(JSON.parse(JSON.stringify(data[0])));\n  }, [data]);\n  const AddPopUPFnc = () => {\n    setaddPopup(true);\n  };\n  const LinkTemplate = (data) => {\n    let rou = linkColumns[0];\n    return (\n      <div align=\"center\">\n        <>\n          {\n            <AiFillEdit\n              data-toggle=\"tooltip\"\n              title=\"Edit Scope\"\n              color=\"black\"\n              cursor=\"pointer\"\n              type=\"edit\"\n              size=\"1.2em\"\n              onClick={() => {\n                setEditedData(data),\n                  setEditId(data.id),\n                  setEditPopup(true),\n                  setType(\"edit\");\n              }}\n            />\n          }{\" \"}\n          &nbsp;\n          {\n            <AiFillDelete\n              className=\"ellipsis\"\n              data-toggle=\"tooltip\"\n              title=\"Delete Scope\"\n              color=\"orange\"\n              cursor=\"pointer\"\n              type=\"delete\"\n              onClick={() => {\n                setEditedData(data), setDeletePopup(true);\n                setType(\"delete\");\n              }}\n            />\n          }\n        </>\n      </div>\n    );\n  };\n\n  const SNo = (data) => {\n    return (\n      <div\n        className=\"ellipsis\"\n        align=\"center\"\n        data-toggle=\"tooltip\"\n        title={data.sno}\n      >\n        {data.sno}\n      </div>\n    );\n  };\n  const typeToolip = (data) => {\n    return (\n      <div className=\"ellipsis\" align=\"left\" title={data.check_point}>\n        {data.check_point}\n      </div>\n    );\n  };\n  const typeToolipProjType = (data) => {\n    return (\n      <div className=\"ellipsis\" align=\"left\" title={data.proj_type}>\n        {data.proj_type}\n      </div>\n    );\n  };\n  const typeToolipProjPhase = (data) => {\n    return (\n      <div className=\"ellipsis\" align=\"left\" title={data.proj_phase}>\n        {data.proj_phase}\n      </div>\n    );\n  };\n  const typeTooltipIsoDetails = (data) => {\n    return (\n      <div className=\"ellipsis\" align=\"left\" title={data.iso_details}>\n        {data.iso_details}\n      </div>\n    );\n  };\n  const typeToolipinitiationWeightage = (data) => {\n    return (\n      <div className=\"ellipsis\" align=\"right\" title={data.initiation_weightage}>\n        {data.initiation_weightage}\n      </div>\n    );\n  };\n  const typeToolipSteadyStateWeightage = (data) => {\n    return (\n      <div\n        className=\"ellipsis\"\n        align=\"right\"\n        title={data.steady_state_weightage}\n      >\n        {data.steady_state_weightage}\n      </div>\n    );\n  };\n  const typeToolipClosureWeightage = (data) => {\n    return (\n      <div className=\"ellipsis\" align=\"right\" title={data.closure_weightage}>\n        {data.closure_weightage}\n      </div>\n    );\n  };\n  const typeToolipValidFrom = (data) => {\n    return (\n      <div className=\"ellipsis\" align=\"Center\" title={data.valid_from}>\n        {data.valid_from}\n      </div>\n    );\n  };\n  const typeToolipValidTill = (data) => {\n    return (\n      <div className=\"ellipsis\" align=\"Center\" title={data.valid_till}>\n        {data.valid_till}\n      </div>\n    );\n  };\n  const dynamicColumns = Object.keys(headerData)?.map((col, i) => {\n    return (\n      <Column\n        sortable\n        key={col}\n        body={\n          col == \"sno\"\n            ? SNo\n            : col == \"iso_details\"\n            ? typeTooltipIsoDetails\n            : col == \"proj_type\"\n            ? typeToolipProjType\n            : col == \"proj_phase\"\n            ? typeToolipProjPhase\n            : col == \"initiation_weightage\"\n            ? typeToolipinitiationWeightage\n            : col == \"steady_state_weightage\"\n            ? typeToolipSteadyStateWeightage\n            : col == \"closure_weightage\"\n            ? typeToolipClosureWeightage\n            : col == \"valid_from\"\n            ? typeToolipValidFrom\n            : col == \"valid_till\"\n            ? typeToolipValidTill\n            : col == \"Action\"\n            ? LinkTemplate\n            : col == \"check_point\" && typeToolip\n        }\n        field={col}\n        header={headerData[col]}\n      />\n    );\n  });\n  console.log(formData, \"line no--------134\");\n\n  return (\n    <>\n      <div>\n        {loader ? <Loader /> : \"\"}\n\n        {deleteMessage ? (\n          <div className=\"statusMsg success\">\n            <BiCheck /> Audit Checkpoint Deleted Successfully !\n          </div>\n        ) : (\n          \"\"\n        )}\n        {delMsg ? (\n          <div className=\"statusMsg error\">\n            <AiFillWarning /> You cannot delete the checkpoint as it is tagged\n            to a project in compliance audit checklist.\n          </div>\n        ) : (\n          \"\"\n        )}\n\n        {addmsg ? (\n          <div className=\"statusMsg success\">\n            <BiCheck /> Check Point Saved Successfully\n          </div>\n        ) : (\n          \"\"\n        )}\n\n        {editmsg ? (\n          <div className=\"statusMsg success\">\n            <BiCheck /> Checkpoint updated successfully\n          </div>\n        ) : (\n          \"\"\n        )}\n\n        {update ? (\n          <div className=\"statusMsg success\">\n            <BiCheck /> Project Scope Updated successfully\n          </div>\n        ) : (\n          \"\"\n        )}\n        {validationMessage ? (\n          <div className=\"statusMsg error\">\n            {\" \"}\n            <AiFillWarning /> Please select the valid values for highlighted\n            fields{\" \"}\n          </div>\n        ) : (\n          \"\"\n        )}\n\n        <div>\n          <div className=\"col-md-12\">\n            <div className=\"pageTitle\">\n              <div className=\"childOne\"></div>\n              <div className=\"childTwo\">\n                <h2>Audit Check Points List</h2>\n              </div>\n              <div className=\"childThree\"></div>\n            </div>\n          </div>\n          <div className=\"group mb-3 customCard\">\n            <div className=\"col-md-12 collapseHeader\">\n              <h2>Search Filters</h2>\n\n              <div\n                onClick={() => {\n                  setVisible(!visible);\n\n                  visible\n                    ? setCheveronIcon(FaChevronCircleUp)\n                    : setCheveronIcon(FaChevronCircleDown);\n                }}\n              >\n                <span>{cheveronIcon}</span>\n              </div>\n            </div>\n            <CCollapse visible={!visible}>\n              <div className=\"group-content row\">\n                <div className=\"col-md-3 mb-2\">\n                  <div className=\"form-group row\">\n                    <label className=\"col-5\" htmlFor=\"projectType\">\n                      Project Type<span className=\"error-text\">*</span>\n                    </label>\n                    <span className=\"col-1 p-0\">:</span>\n                    <div\n                      className=\"col-6 multiselect\"\n                      ref={(ele) => {\n                        ref.current[0] = ele;\n                      }}\n                    >\n                      <MultiSelect\n                        id=\"prjType\"\n                        options={projectType}\n                        hasSelectAll={true}\n                        value={selectedProjectType}\n                        disabled={false}\n                        ArrowRenderer={ArrowRenderer}\n                        valueRenderer={generateDropdownLabel}\n                        overrideStrings={{\n                          selectAllFiltered: \"Select All\",\n                          selectSomeItems: \"<<Please Select>>\",\n                        }}\n                        onChange={(e) => {\n                          setSelectedProjectType(e);\n                          let filteredTypes = [];\n                          e.forEach((d) => {\n                            filteredTypes.push(d.value);\n                          });\n                          setFormData((prevVal) => ({\n                            ...prevVal,\n                            [\"prjType\"]: filteredTypes.toString(),\n                          }));\n                        }}\n                      />\n                    </div>\n                  </div>\n                </div>\n                <div className=\"col-md-3 mb-2\">\n                  <div className=\"form-group row\">\n                    <label className=\"col-5\" htmlFor=\"projectPhase\">\n                      Project Phase <span className=\"error-text\">*</span>\n                    </label>\n                    <span className=\"col-1 p-0\">:</span>\n                    <div\n                      className=\"col-6 multiselect\"\n                      ref={(ele) => {\n                        ref.current[1] = ele;\n                      }}\n                    >\n                      <MultiSelect\n                        id=\"prjPhase\"\n                        options={projectPhase}\n                        hasSelectAll={true}\n                        ArrowRenderer={ArrowRenderer}\n                        valueRenderer={generateDropdownLabel}\n                        value={selectedProjectPhase}\n                        disabled={false}\n                        overrideStrings={{\n                          selectAllFiltered: \"Select All\",\n                          selectSomeItems: \"<< All>>\",\n                        }}\n                        onChange={(e) => {\n                          setSelectedProjectPhase(e);\n                          let filteredPhases = [];\n                          e.forEach((d) => {\n                            filteredPhases.push(d.value);\n                          });\n                          setFormData((prevVal) => ({\n                            ...prevVal,\n                            [\"prjPhase\"]: filteredPhases.toString(),\n                          }));\n                        }}\n                      />\n                    </div>\n                  </div>\n                </div>\n                <div className=\"col-md-12 col-sm-12 col-xs-12 btn-container center my-3 mb-2\">\n                  <button\n                    className=\"btn btn-primary \"\n                    onClick={() => handleClick()}\n                  >\n                    <FaSearch />\n                    Search\n                  </button>\n                </div>\n              </div>\n            </CCollapse>\n          </div>\n        </div>\n\n        <div className=\"col-md-12\">\n          {loaderState ? (\n            <div className=\"loaderBlock\">\n              <Loader handleAbort={handleAbort} />\n            </div>\n          ) : (\n            \"\"\n          )}\n          <CellRendererPrimeReactDataTable\n            data={data}\n            headerData={headerData}\n            dynamicColumns={dynamicColumns}\n            setHeaderData={setHeaderData}\n            linkColumns={linkColumns}\n            linkColumnsRoutes={linkColumnsRoutes}\n            rows={10}\n          />\n          <div className=\"col-md-12 col-sm-12 col-xs-12 btn-container center my-3 mb-2\">\n            <button\n              className=\"btn btn-primary \"\n              onClick={() => {\n                AddPopUPFnc();\n              }}\n            >\n              <RiAddLine /> Add\n            </button>\n            <button\n              className=\"btn btn-primary \"\n              onClick={() => {\n                setUploadPopUp(true);\n              }}\n            >\n              <MdOutlineFileUpload /> Upload\n            </button>\n          </div>\n        </div>\n        {addPopup ? (\n          <AddPopUp\n            addPopup={addPopup}\n            handleChange={handleChange}\n            setaddPopup={setaddPopup}\n            type={type}\n            editedData={editedData}\n            setEditedData={setEditedData}\n            editId={editId}\n            initialValue={initialValue}\n            data={data}\n            formData={formData}\n            setFormData={formData}\n            projectType={projectType}\n            setProjectType={setProjectType}\n            selectedProjectType={selectedProjectType}\n            setSelectedProjectType={setSelectedProjectType}\n            projectPhase={projectPhase}\n            selectedProjectPhase={selectedProjectPhase}\n            setSelectedProjectPhase={setSelectedProjectPhase}\n            handleClick={handleClick}\n            setAddmsg={setAddmsg}\n          />\n        ) : (\n          \"\"\n        )}\n        {editPopup ? (\n          <EditPopUp\n            editPopup={editPopup}\n            setEditPopup={setEditPopup}\n            editId={editId}\n            handleClick={handleClick}\n            data={data}\n            setEditedData={setEditedData}\n            editedData={editedData}\n            setEditAddmsg={setEditAddmsg}\n          />\n        ) : (\n          \"\"\n        )}\n        {deletePopup ? (\n          <DeletePopUp\n            deletePopup={deletePopup}\n            setDeletePopup={setDeletePopup}\n            setEditedData={setEditedData}\n            editedData={editedData}\n            handleClick={handleClick}\n            setDeleteMessage={setDeleteMessage}\n            setDelMsg={setDelMsg}\n          />\n        ) : (\n          \"\"\n        )}\n        {uploadpopUp ? (\n          <UploadPopUp\n            setUploadPopUp={setUploadPopUp}\n            uploadpopUp={uploadpopUp}\n            handleClick={handleClick}\n          />\n        ) : (\n          \"\"\n        )}\n      </div>\n    </>\n  );\n}\n\nexport default AuditCpSetup;\n","export function getTableData() {\n    let tabledata=[\n        {\n          sno : 'SNo',\n          type : 'Type',\n          phase : 'phase',\n          auditCheckpoint : 'Audit Checkpoint',\n          iso : 'ISO 9001:2015',\n          initiationWeightage : 'Initiation Weightage',\n          steadyStateWeightage : 'Steady State Weightage',\n          closureWeightage : 'Closure Weightage',\n          validFrom : 'Valid From',\n          validTill : 'Valid Till',\n          action : 'Action'\n        }\n\n    ]\n return tabledata\n}"],"names":["DeletePopUp","props","deletePopup","setDeletePopup","editedData","setEditedData","handleClick","setDeleteMessage","setDelMsg","baseUrl","environment","visible","size","className","onClose","onClick","axios","method","url","id","then","res","console","log","data","status","message","setTimeout","EditPopUp","editPopup","setEditPopup","editId","setEditAddmsg","useState","fromDate","SetfromDate","from","Setfrom","tillDate","SetTillDate","setEditData","validationMessage","setValidationMessage","ref","useRef","formData","setFormData","useEffect","moment","valid_from","_d","valid_till","validFrom","style","border","ele","current","selected","showMonthDropdown","dateFormat","showMonthYearPicker","defaultValue","dropdownMode","onChange","e","prev","format","onKeyDown","minDate","preventDefault","GlobalCancel","project_type","project_phase","GlobalValidation","projectType","projectPhase","checkPoint","check_point","initiationWeightage","initiation_weightage","steadyStateWeightage","steady_state_weightage","closureWeightage","closure_weightage","isoDetails","iso_details","isActive","validTill","headers","response","handleAddClick","AddPopUp","addPopup","setaddPopup","setAddmsg","setAddData","Date","setMonthFrom","setMonthTill","target","value","map","Item","label","type","placeholder","prevVal","input","test","replace","name","placeholderText","align","UploadPopUp","setUploadPopUp","uploadpopUp","dupliMsg","setDupliMsg","dupDisplay","setDupDisplay","tbaleData","setTbaleData","selectedFile","setSelectedFile","key","setKey","setMessage","loggedUserId","localStorage","getItem","tblDis","setTblDis","selctErr","setSelctErr","empty","setempty","alignment","backdrop","cursor","color","fontSize","marginLeft","docUrl","responseType","contentType","blob","Blob","window","URL","createObjectURL","link","document","createElement","href","setAttribute","body","appendChild","click","downloadEmployeeData","files","file","prevKey","Finaldata","FileUpload","width","backgroundColor","textAlign","item","index","checkpoint","comments","setVisible","FaChevronCircleUp","cheveronIcon","setCheveronIcon","setDataAr","setData","setProjectPhase","selectedProjectPhase","setSelectedProjectPhase","setProjectType","selectedProjectType","setSelectedProjectType","linkColumns","setLinkColumns","linkColumnsRoutes","headerData","setHeaderData","setType","update","loader","addmsg","deleteMessage","editmsg","setEditId","loaderState","setLoaderState","abortController","delMsg","ArrowRenderer","expanded","generateDropdownLabel","selectedOptions","allOptions","selectedValues","option","allValues","length","join","initialValue","prjType","prjPhase","isSearch","AbortController","signal","tempData","forEach","d","push","sno","proj_type","proj_phase","Action","concat","phase","auditCheckpoint","iso","action","Response","phases","countryObj","lkup_name","catch","error","types","JSON","parse","stringify","LinkTemplate","title","SNo","typeToolip","typeToolipProjType","typeToolipProjPhase","typeTooltipIsoDetails","typeToolipinitiationWeightage","typeToolipSteadyStateWeightage","typeToolipClosureWeightage","typeToolipValidFrom","typeToolipValidTill","dynamicColumns","Object","keys","col","i","sortable","field","header","Loader","FaChevronCircleDown","htmlFor","options","hasSelectAll","disabled","valueRenderer","overrideStrings","selectAllFiltered","selectSomeItems","filteredTypes","toString","filteredPhases","handleAbort","abort","CellRendererPrimeReactDataTable","rows","handleChange"],"sourceRoot":""}