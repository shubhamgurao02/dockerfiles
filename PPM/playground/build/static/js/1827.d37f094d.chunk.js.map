{"version":3,"file":"static/js/1827.d37f094d.chunk.js","mappings":"kSAqJA,UAxIA,WACE,OAAkCA,EAAAA,EAAAA,UAAS,IAAIC,MAAO,eAA/CC,EAAS,KAAEC,EAAY,KAC9B,GAA8BH,EAAAA,EAAAA,WAAS,GAAM,eAAtCI,EAAO,KAAEC,EAAU,KAC1B,GAAwCL,EAAAA,EAAAA,UAASM,EAAAA,KAAkB,eAA5DC,EAAY,KAAEC,EAAe,KACpC,GAA4BR,EAAAA,EAAAA,UAAS,IAAG,eAAjCS,EAAM,KAAEC,EAAS,KAWxB,OARAC,EAAAA,EAAAA,YAAU,WAER,IAAIC,GAAMC,EAAAA,EAAAA,KAGVH,EAAUE,EAEZ,GAAG,KAED,4BACE,gBAAKE,UAAU,YAAW,UACxB,iBAAKA,UAAU,YAAW,WACxB,gBAAKA,UAAU,cACf,gBAAKA,UAAU,WAAU,UACvB,wBAAI,yCAEN,gBAAKA,UAAU,qBAGnB,iBAAKA,UAAU,wBAAuB,WACpC,iBAAKA,UAAU,2BAA0B,WACvC,wBAAI,oBAEJ,gBACEC,QAAS,WACPV,GAAYD,GAGRI,EADJJ,EACoBE,EAAAA,IACAU,EAAAA,IACtB,EAAE,UAEF,0BAAOT,UAIX,SAAC,KAAS,CAACH,SAAUA,EAAQ,UAC3B,iBAAKU,UAAU,oBAAmB,WAChC,gBAAKA,UAAU,qBAAoB,UACjC,iBAAKA,UAAU,iBAAgB,WAC7B,kBAAOA,UAAU,QAAQG,QAAQ,YAAW,SAAC,gBAG7C,iBAAMH,UAAU,YAAW,SAAC,OAC5B,gBAAKA,UAAU,QAAO,UACpB,SAAC,IAAU,CACTI,SAAUhB,EACViB,SAAU,SAACC,GAAI,OAAKjB,EAAaiB,EAAK,EACtCC,WAAW,UACXC,qBAAmB,YAK3B,gBAAKR,UAAU,qBAAoB,UACjC,iBAAKA,UAAU,iBAAgB,WAC7B,kBAAOA,UAAU,QAAQG,QAAQ,UAAS,SAAC,cAG3C,iBAAMH,UAAU,YAAW,SAAC,OAC5B,gBAAKA,UAAU,QAAO,UACpB,SAAC,IAAU,CACTI,SAAUhB,EACViB,SAAU,SAACC,GAAI,OAAKjB,EAAaiB,EAAK,EACtCC,WAAW,UACXC,qBAAmB,YAK3B,gBAAKR,UAAU,qBAAoB,UACjC,iBAAKA,UAAU,iBAAgB,WAC7B,kBAAOA,UAAU,QAAQG,QAAQ,aAAY,SAAC,gBAG9C,iBAAMH,UAAU,YAAW,SAAC,OAC5B,gBAAKA,UAAU,QAAO,UACpB,SAAC,KAAW,CACVS,GAAG,QACHC,QAAS,GACTC,cAAc,EACdC,WAAW,EACXC,qBAAqB,EACrBC,eAAe,EAKfC,UAAU,YAKlB,gBAAKf,UAAU,qBAAoB,UACjC,iBAAKA,UAAU,iBAAgB,WAC7B,kBAAOA,UAAU,QAAQG,QAAQ,WAAU,SAAC,cAG5C,iBAAMH,UAAU,YAAW,SAAC,OAC5B,gBAAKA,UAAU,QAAO,UACpB,SAAC,KAAW,CACVS,GAAG,QACHC,QAAS,GACTC,cAAc,EACdC,WAAW,EACXC,qBAAqB,EACrBC,eAAe,EAKfC,UAAU,YAKlB,gBAAKf,UAAU,+DAA8D,UAC3E,mBAAQA,UAAU,mBAAkB,SAAC,sBAK7C,gBAAKA,UAAU,YAAW,UACtB,SAAC,IAAmB,CAACgB,KAAMrB,QAIrC,C,wBCnJO,SAASI,IAgBf,MAfiB,CACV,CACIkB,QAAU,WACVC,SAAW,WACXC,WAAa,aACbC,SAAW,WACXC,QAAU,UACVC,cAAgB,iBAChBC,UAAY,aACZC,UAAY,aACZC,OAAS,UAMrB,C","sources":["views/ReportsComponent/AllocatedandBilledhoursReport.js","views/ReportsComponent/AllocatedandBilledhoursReportTable.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { MultiSelect } from \"react-multi-select-component\";\nimport DatePicker from \"react-datepicker\";\nimport {\n  FaChevronCircleDown,\n  FaChevronCircleUp,\n  FaSearch,\n  FaCheck,\n} from \"react-icons/fa\";\nimport { CCollapse } from \"@coreui/react\";\nimport { getTableData } from \"./AllocatedandBilledhoursReportTable\";\nimport FlatPrimeReactTable from \"../PrimeReactTableComponent/FlatPrimeReactTable\";\n\nfunction AllocatedandBilledhoursReport() {\n  const [startDate, setStartDate] = useState(new Date());\n  const [visible, setVisible] = useState(false);\n  const [cheveronIcon, setCheveronIcon] = useState(FaChevronCircleUp);\n  const [dataAr, setDataAr] = useState([]);\n\n\n  useEffect(() => {\n   \n    let tdata=getTableData();\n   \n    //console.log('ski1',tdata);\n    setDataAr(tdata);\n\n  }, []);\n  return (\n    <div>\n      <div className=\"col-md-12\">\n        <div className=\"pageTitle\">\n          <div className=\"childOne\"></div>\n          <div className=\"childTwo\">\n            <h2>Allocated and Billed hours Report</h2>\n          </div>\n          <div className=\"childThree\"></div>\n        </div>\n      </div>\n      <div className=\"group mb-3 customCard\">\n        <div className=\"col-md-12 collapseHeader\">\n          <h2>Search Filters</h2>\n\n          <div\n            onClick={() => {\n              setVisible(!visible);\n\n              visible\n                ? setCheveronIcon(FaChevronCircleUp)\n                : setCheveronIcon(FaChevronCircleDown);\n            }}\n          >\n            <span>{cheveronIcon}</span>\n          </div>\n        </div>\n        {/* <h2>Allocated and Billed hours Report</h2> */}\n        <CCollapse visible={!visible}>\n          <div className=\"group-content row\">\n            <div className=\"col-md-3 mb-2 mb-2\">\n              <div className=\"form-group row\">\n                <label className=\"col-5\" htmlFor=\"fromMonth\">\n                  From Month\n                </label>\n                <span className=\"col-1 p-0\">:</span>\n                <div className=\"col-6\">\n                  <DatePicker\n                    selected={startDate}\n                    onChange={(date) => setStartDate(date)}\n                    dateFormat=\"MM/yyyy\"\n                    showMonthYearPicker\n                  />\n                </div>\n              </div>\n            </div>\n            <div className=\"col-md-3 mb-2 mb-2\">\n              <div className=\"form-group row\">\n                <label className=\"col-5\" htmlFor=\"toMonth\">\n                  To Month\n                </label>\n                <span className=\"col-1 p-0\">:</span>\n                <div className=\"col-6\">\n                  <DatePicker\n                    selected={startDate}\n                    onChange={(date) => setStartDate(date)}\n                    dateFormat=\"MM/yyyy\"\n                    showMonthYearPicker\n                  />\n                </div>\n              </div>\n            </div>\n            <div className=\"col-md-3 mb-2 mb-2\">\n              <div className=\"form-group row\">\n                <label className=\"col-5\" htmlFor=\"department\">\n                  Department\n                </label>\n                <span className=\"col-1 p-0\">:</span>\n                <div className=\"col-6\">\n                  <MultiSelect\n                    id=\"roles\"\n                    options={[]}\n                    hasSelectAll={true}\n                    isLoading={false}\n                    shouldToggleOnHover={false}\n                    disableSearch={false}\n                    //   valueRenderer={customValueRenderer}\n\n                    //   value={selectedRoleTypes}\n\n                    disabled={false}\n                  />\n                </div>\n              </div>\n            </div>\n            <div className=\"col-md-3 mb-2 mb-2\">\n              <div className=\"form-group row\">\n                <label className=\"col-5\" htmlFor=\"customer\">\n                  Customer\n                </label>\n                <span className=\"col-1 p-0\">:</span>\n                <div className=\"col-6\">\n                  <MultiSelect\n                    id=\"roles\"\n                    options={[]}\n                    hasSelectAll={true}\n                    isLoading={false}\n                    shouldToggleOnHover={false}\n                    disableSearch={false}\n                    //   valueRenderer={customValueRenderer}\n\n                    //   value={selectedRoleTypes}\n\n                    disabled={false}\n                  />\n                </div>\n              </div>\n            </div>\n            <div className=\"col-md-12 col-sm-12 col-xs-12 btn-container center my-3 mb-2\">\n              <button className=\"btn btn-primary \">Search</button>\n            </div>\n          </div>\n        </CCollapse>\n      </div>\n      <div className=\"col-md-12\">\n          <FlatPrimeReactTable data={dataAr}/>\n    </div>\n    </div>\n  );\n}\n\nexport default AllocatedandBilledhoursReport;\n","export function getTableData() {\n    let tabledata=[\n        {\n            emailID : 'Email Id',\n            resource : 'Resource', \n            department : 'Department',\n            customer : 'Customer',\n            project : 'Project',\n            allocationhrs : 'Allocation Hrs',\n            actualhrs : 'Actual Hrs',\n            billedhrs : 'Billed Hrs', \n            source : 'Source'\n           \n        }\n\n    ]\n return tabledata\n}\n"],"names":["useState","Date","startDate","setStartDate","visible","setVisible","FaChevronCircleUp","cheveronIcon","setCheveronIcon","dataAr","setDataAr","useEffect","tdata","getTableData","className","onClick","FaChevronCircleDown","htmlFor","selected","onChange","date","dateFormat","showMonthYearPicker","id","options","hasSelectAll","isLoading","shouldToggleOnHover","disableSearch","disabled","data","emailID","resource","department","customer","project","allocationhrs","actualhrs","billedhrs","source"],"sourceRoot":""}