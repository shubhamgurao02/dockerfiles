{"version":3,"file":"static/js/9799.e7adc58e.chunk.js","mappings":"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","sources":["views/Administration/Errorlogvalidation.js","views/TimeAndExpenses/Expenses/ExpensesAdd.js","views/TimeAndExpenses/Expenses/ExpensesCreateTable.js","views/TimeAndExpenses/Expenses/AddExpensePopup.js","views/TimeAndExpenses/Expenses/ExpensesTypePopUp.js","views/TimeAndExpenses/Expenses/ExpensesCreate.js","views/TimeAndExpenses/Expenses/ExpensesOpen.js","views/TimeAndExpenses/Expenses/NewExpensesOpen.js","views/TimeAndExpenses/Expenses/ExpensesSearch.js","views/TimeAndExpenses/Expenses/ExpensesTypes.js","views/TimeAndExpenses/Expenses/ExpensesView.js","views/TimeAndExpenses/Expenses/Expenses.js"],"sourcesContent":["const ErrorLogGlobalValidation = (props) => {\n    let data = props.current;\n  \n    let finalRes = [];\n  \n    const addingClass = (ele, value) => {\n      if (value == \"\") {\n        ele.classList.add(\"abc\");\n        finalRes.push(true);\n      } else {\n        ele.classList.remove(\"error-block\");\n        finalRes.push(false);\n      }\n    };\n  \n    for (let i = 0; i < data.length; i++) {\n      let parentClassList = data[i].classList;\n  \n      let ele = null;\n  \n      if (parentClassList.contains(\"text\")) {\n        ele = data[i];\n        addingClass(ele, ele.value);\n        //   return;\n      } else if (parentClassList.contains(\"datepicker\")) {\n        let addingBorder = data[i].children[0].children[0];\n        let value = addingBorder.children[0].value;\n        //   ele = data[i];\n        addingClass(addingBorder, value);\n        //   return;\n      } else if (parentClassList.contains(\"multiselect\")) {\n        let addingBorder = data[i].children[0].children[0].children[0];\n        let classListValue = addingBorder.children[0].children[0].classList;\n        let value = classListValue.contains(\"gray\") ? \"\" : \"present\";\n        addingClass(addingBorder, value);\n      } else if (parentClassList.contains(\"textfield\")) {\n        let addingBorder = data[i].children[0];\n        addingClass(addingBorder, addingBorder.value);\n      } else if (parentClassList.contains(\"autocomplete\")) {\n        let addingBorder = data[i].children[0].children[0].children[0];\n        let value = addingBorder.children[0].children[0].value;\n        addingClass(addingBorder, value);\n      } else if (parentClassList.contains(\"reactautocomplete\")) {\n        let addingBorder =\n          data[i].children[0].children[0].children[0].children[0];\n        console.log(addingBorder);\n        let value = addingBorder.children[0].children[0].value;\n  \n        console.log(value);\n  \n        addingClass(addingBorder, value);\n      }\n  \n      // let value = ele.value;\n  \n      // if (ele.type == undefined) {\n      //   value = ele.input.value;\n      //   console.log(value);\n      // }\n      // console.log(ele.classList);\n    }\n  \n    return finalRes.includes(true);\n  };\n  \n  export default ErrorLogGlobalValidation;\n  ","import React, { useState, useEffect, useRef } from \"react\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { environment } from \"../../../environments/environment\";\nimport { FaPlus } from \"react-icons/fa\";\nimport axios from \"axios\";\nimport { BiCheck, BiSave } from \"react-icons/bi\";\nimport { ImCross } from \"react-icons/im\";\nimport { DataTable } from \"primereact/datatable\";\nimport { Column } from \"primereact/column\";\nimport moment from \"moment\";\nimport ErrorLogGlobalValidation from \"../../Administration/Errorlogvalidation\";\nimport { IoWarningOutline } from \"react-icons/io5\";\nimport ScreenBreadcrumbs from \"../../Common/ScreenBreadcrumbs\";\n\nfunction ExpensesAdd() {\n  const [startDate, setStartDate] = useState();\n  const [endDate, setEndDate] = useState();\n  const [currency, setCurrency] = useState([]);\n  const [currencyId, setCurrencyId] = useState([]);\n  const [usd, setUsd] = useState([]);\n  const [localVal, setLocalVal] = useState([]);\n  const [dates, setDates] = useState([]);\n  const [selectedRows, setSelectedRows] = useState([]);\n  const [selectedRowsData, setSelectedRowsData] = useState([]);\n  const [showTable, setShowTable] = useState(false);\n  const [tableDisable, setTableDisable] = useState(false);\n  const [validationMessage, setValidationMessage] = useState(false);\n  const ref = useRef([]);\n  const [message, setMessage] = useState(false);\n  const [currencyName, setCurrencyName] = useState(\"\");\n  const [saveButton, setSaveButton] = useState(true);\n  const [dateCheck, setDateCheck] = useState(false);\n  const [usdCheck, setUsdCheck] = useState(false);\n  const [localCheck, setLocalCheck] = useState(false);\n  const [saveCheck, setSaveCheck] = useState(true);\n  const [tableDataChange, setTableDataChange] = useState(false);\n\n  const baseUrl = environment.baseUrl;\n\n  const loggedUserId = localStorage.getItem(\"resId\");\n  const [routes, setRoutes] = useState([]);\n  let textContent = \"Time & Expenses\";\n  let currentScreenName = [\"Expenses\", \"Add Foreign Exchange Rates\"];\n\n  useEffect(() => {\n    getMenus();\n  }, []);\n\n  const getMenus = () => {\n    // setMenusData\n\n    axios({\n      method: \"GET\",\n      url: baseUrl + `/CommonMS/master/getMenus?loggedUserId=${loggedUserId}`,\n    }).then((resp) => {\n      let data = resp.data;\n\n      data.forEach((item) => {\n        if (item.display_name === textContent) {\n          setRoutes([item]);\n        }\n      });\n    });\n  };\n\n  const handleCurrency = () => {\n    axios({\n      method: \"get\",\n      url: baseUrl + `/ProjectMS/Engagement/getCurrency`,\n    }).then((res) => {\n      let curre = res.data;\n      setCurrency(curre);\n    });\n  };\n\n  useEffect(() => {\n    const name = currency\n      .filter((c) => c.id == currencyId)\n      .map((c) => c.currency);\n    setCurrencyName(name[0]);\n  }, [currencyId]);\n\n  const getDates = (startDate, endDate) => {\n    const dates = [];\n\n    const currentDate = new Date(startDate);\n\n    while (currentDate <= endDate) {\n      const dateString = currentDate.toLocaleDateString(\"en-CA\");\n      dates.push(dateString);\n      currentDate.setDate(currentDate.getDate() + 1);\n    }\n\n    return dates;\n  };\n\n  const handleExchangeTab = () => {\n    let valid = ErrorLogGlobalValidation(ref);\n    if (valid) {\n      {\n        setValidationMessage(true);\n        setTimeout(() => {\n          setValidationMessage(false);\n        }, 3000);\n      }\n      return;\n    }\n    if (endDate.getTime() < startDate.getTime()) {\n      setDateCheck(true);\n      setTimeout(() => {\n        setDateCheck(false);\n      }, 3000);\n      return;\n    }\n    if (isNaN(usd)) {\n      setUsdCheck(true);\n      setTimeout(() => {\n        setUsdCheck(false);\n      }, 3000);\n      return;\n    }\n    if (isNaN(localVal)) {\n      setLocalCheck(true);\n      setTimeout(() => {\n        setLocalCheck(false);\n      }, 3000);\n      return;\n    }\n\n    setDates(getDates(startDate, endDate));\n    setShowTable(true);\n  };\n\n  useEffect(() => {\n    handleCurrency();\n  }, []);\n\n  const handleUSD = (e) => {\n    setUsd(e.target.value);\n  };\n\n  const handleLOCAL = (e) => {\n    setLocalVal(e.target.value);\n  };\n\n  const tableData = dates.map((d, i) => {\n    return {\n      id: i + 1,\n      date: moment(d).format(\"DD-MMM-YYYY\"),\n      usdofvalue: usd,\n      usdinvalue: localVal,\n    };\n  });\n\n  const handleSelection = (e) => {\n    console.log(e.value);\n    setSelectedRows(e.value);\n  };\n\n  const inputOne = (rowData) => {\n    return selectedRows.map((d) => d.id).includes(rowData.id) && saveButton ? (\n      <input\n        type=\"text\"\n        id=\"usd\"\n        defaultValue={rowData.usdofvalue}\n        onChange={(e) => onchange(e, rowData)}\n      />\n    ) : (\n      rowData.usdofvalue\n    );\n  };\n\n  const inputTwo = (rowData) => {\n    return selectedRows.map((d) => d.id).includes(rowData.id) && saveButton ? (\n      <input\n        type=\"text\"\n        id=\"local\"\n        defaultValue={rowData.usdinvalue}\n        onChange={(e) => onchange(e, rowData)}\n      />\n    ) : (\n      <div align=\"right\" style={{ placeContent: \"end\" }}>\n        {rowData.usdinvalue}\n      </div>\n    );\n  };\n\n  useEffect(() => {\n    setSelectedRowsData((prev) => selectedRows);\n  }, [selectedRows]);\n\n  const onchange = (e, rowData) => {\n    const index = selectedRowsData.findIndex(\n      (selectedRowData) => selectedRowData.id === rowData.id\n    );\n\n    const updatedSelectedRowsData = [...selectedRowsData];\n    updatedSelectedRowsData[index] = {\n      ...updatedSelectedRowsData[index],\n      usdofvalue:\n        e.target.id === \"usd\"\n          ? e.target.value\n          : updatedSelectedRowsData[index].usdofvalue,\n      usdinvalue:\n        e.target.id === \"local\"\n          ? e.target.value\n          : updatedSelectedRowsData[index].usdinvalue,\n    };\n    setSelectedRowsData(updatedSelectedRowsData);\n  };\n\n  const closeTable = (e) => {\n    setShowTable(false);\n  };\n\n  useEffect(() => {\n    if (selectedRows.length > 0) {\n      setSaveCheck(false);\n    }\n    console.log(\"selected rows: \", selectedRows);\n  }, [selectedRows]);\n\n  const sendSelectedRowsData = () => {\n    let ele = document.getElementsByClassName(\"cancel\");\n    for (let index = 0; index < ele.length; index++) {\n      ele[index].value = \"\";\n\n      if (ele[index].classList.contains(\"reactautocomplete\")) {\n        ele[\n          index\n        ].children[0].children[0].children[0].children[0].children[0].children[1].click();\n      }\n    }\n\n    console.log(selectedRowsData);\n    const formattedData = selectedRowsData.map((rowData) => ({\n      currencyId: currencyId,\n      date: moment(rowData.date).format(\"YYYY-MM-DD\"),\n      value_of_usd: rowData.usdofvalue,\n      value_in_usd: rowData.usdinvalue,\n    }));\n    console.log(\"formated data: \", formattedData);\n    axios\n      .post(`${baseUrl}/timeandexpensesms/addExpenses`, formattedData, {\n        headers: { \"Content-Type\": \"application/json\" },\n      })\n      .then((res) => {\n        console.log(res.status);\n        console.log(res);\n        if (res.status == 200) {\n          setTableDisable(true);\n          setSaveButton(false);\n          setMessage(true);\n          setSaveCheck(false);\n          var checkboxes = document.getElementsByClassName(\n            \"p-checkbox-box p-component p-highlight\"\n          );\n          checkboxes[0].setAttribute(\"class\", \"p-checkbox-box p-component\");\n          setTimeout(() => {\n            setMessage(false);\n          }, 3000);\n          setTableDataChange(true);\n        }\n      })\n      .catch((er) => console.log(er));\n  };\n\n  let updatedTableData = tableData.map((d) => {\n    let selectedRow = selectedRowsData.find((row) => row.id === d.id);\n    if (selectedRow) {\n      return {\n        ...d,\n        usdofvalue: selectedRow.usdofvalue,\n        usdinvalue: selectedRow.usdinvalue,\n      };\n    } else {\n      return d;\n    }\n  });\n\n  useEffect(() => {\n    if (tableDisable) {\n      setStartDate();\n      setEndDate();\n      console.log(\"first: \", tableDisable);\n    }\n  }, [tableDisable]);\n\n  const isSelectable = () => {\n    return tableDisable ? false : true;\n  };\n\n  return (\n    <div>\n      {validationMessage ? (\n        <div className=\"statusMsg error\">\n          {\" \"}\n          <span>\n            {\" \"}\n            <IoWarningOutline /> Please provide the valid values for required\n            fields fields{\" \"}\n          </span>\n        </div>\n      ) : (\n        \"\"\n      )}\n      {message ? (\n        <div className=\"statusMsg success\">\n          <span>\n            <BiCheck />\n            Foreign Exchange Rates For {currencyName} Saved Successfully\n          </span>\n        </div>\n      ) : (\n        \"\"\n      )}\n      {dateCheck ? (\n        <div className=\"statusMsg error\">\n          {\" \"}\n          <span>\n            {\" \"}\n            <IoWarningOutline /> Please select End Date Greater Than Begin Date{\" \"}\n          </span>\n        </div>\n      ) : (\n        \"\"\n      )}\n      {usdCheck ? (\n        <div className=\"statusMsg error\">\n          {\" \"}\n          <span>\n            {\" \"}\n            <IoWarningOutline /> USD to Local is Invalid{\" \"}\n          </span>\n        </div>\n      ) : (\n        \"\"\n      )}\n      {localCheck ? (\n        <div className=\"statusMsg error\">\n          {\" \"}\n          <span>\n            {\" \"}\n            <IoWarningOutline /> Local to USD is Invalid{\" \"}\n          </span>\n        </div>\n      ) : (\n        \"\"\n      )}\n      <div>\n        <div className=\"col-md-12\">\n          <div className=\"pageTitle\">\n            <div className=\"childOne\"></div>\n            <div className=\"childTwo\">\n              <h2>Add Foreign Exchange Rates</h2>\n            </div>\n            <div className=\"childThree\"></div>\n          </div>\n        </div>\n        <ScreenBreadcrumbs\n          routes={routes}\n          currentScreenName={currentScreenName}\n        />\n\n        <div className=\"group mb-3 customCard\">\n          <div className=\"group-content row\">\n            <div className=\"col-md-4 mb-2\">\n              <div className=\"form-group row\">\n                <label className=\"col-5\" htmlFor=\"country-select\">\n                  Currency<span style={{ color: \"red\" }}>&nbsp;*</span>\n                </label>\n                <span className=\"col-1 p-0\">:</span>\n                <div className=\"col-6\">\n                  <select\n                    id=\"country-select\"\n                    className=\"text cancel\"\n                    ref={(ele) => {\n                      ref.current[0] = ele;\n                    }}\n                    onChange={(e) => {\n                      setCurrencyId(e.target.value);\n                    }}\n                  >\n                    <option value=\"\"> &lt;&lt;Please Select&gt;&gt;</option>\n                    {currency.map((data) =>\n                      data.currency === \"US Dollar(USD)\" ? (\n                        \"\"\n                      ) : (\n                        <option value={data.id}>{data.currency}</option>\n                      )\n                    )}\n                  </select>\n                </div>\n              </div>\n            </div>\n            <div className=\"col-md-4 mb-2\">\n              <div className=\"form-group row\">\n                <label className=\"col-5\" htmlFor=\"email-input\">\n                  Begin Date<span>&nbsp;*</span>\n                </label>\n                <span className=\"col-1 p-0\">:</span>\n                <div className=\"col-6\">\n                  <div\n                    className=\"datepicker position-relative z-3\"\n                    ref={(ele) => {\n                      ref.current[1] = ele;\n                    }}\n                  >\n                    <DatePicker\n                      dateFormat=\"dd-MMM-yyyy\"\n                      selected={startDate}\n                      onChange={(date) => setStartDate(date)}\n                      onKeyDown={(e) => e.preventDefault()}\n                      placeholderText={\"Begin Date\"}\n                      selectsStart\n                    />\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className=\"col-md-4 mb-2\">\n              <div className=\"form-group row\">\n                <label className=\"col-5\" htmlFor=\"email-input\">\n                  End Date<span>&nbsp;*</span>\n                </label>\n                <span className=\"col-1 p-0\">:</span>\n                <div className=\"col-6\">\n                  <div\n                    className=\"datepicker\"\n                    ref={(ele) => {\n                      ref.current[2] = ele;\n                    }}\n                  >\n                    <DatePicker\n                      dateFormat=\"dd-MMM-yyyy\"\n                      selected={endDate}\n                      onChange={(date) => setEndDate(date)}\n                      onKeyDown={(e) => e.preventDefault()}\n                      placeholderText={\"End Date\"}\n                      selectsStart\n                    />\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className=\"col-md-4 mb-2\">\n              <div className=\"form-group row\">\n                <label className=\"col-5\" htmlFor=\"name\">\n                  USD to Local<span> &nbsp;*</span>\n                </label>\n                <span className=\"col-1 p-0\">:</span>\n                <div className=\"col-6\">\n                  <div\n                    className=\"textfield\"\n                    ref={(ele) => {\n                      ref.current[3] = ele;\n                    }}\n                  >\n                    <input\n                      type=\"text\"\n                      className=\"form-control cancel\"\n                      id=\"name\"\n                      placeholder=\"\"\n                      required\n                      onChange={handleUSD}\n                    />\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className=\"col-md-4 mb-2\">\n              <div className=\"form-group row\">\n                <label className=\"col-5\" htmlFor=\"name\">\n                  Local to USD<span> &nbsp;*</span>\n                </label>\n                <span className=\"col-1 p-0\">:</span>\n                <div className=\"col-6\">\n                  <div\n                    className=\"textfield\"\n                    ref={(ele) => {\n                      ref.current[4] = ele;\n                    }}\n                  >\n                    <input\n                      type=\"text\"\n                      className=\"form-control cancel\"\n                      id=\"name\"\n                      placeholder=\"\"\n                      required\n                      onChange={handleLOCAL}\n                    />\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            <div className=\"form-group col-md-12 col-sm-12 col-xs-12 btn-container center my-3 mb-2\">\n              <button\n                type=\"button\"\n                className=\"btn btn-primary\"\n                title=\"Search\"\n                onClick={handleExchangeTab}\n              >\n                <FaPlus /> Add{\" \"}\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n      {showTable ? (\n        <div className=\"darkHeader\">\n          <div className=\"expensesAdd\">\n            <DataTable\n              value={tableDataChange ? updatedTableData : tableData}\n              showGridlines\n              scrollable\n              scrollHeight=\"400px\"\n              selectionMode=\"checkbox\"\n              selection={selectedRows}\n              onSelectionChange={(e) => handleSelection(e)}\n              dataKey=\"id\"\n              isDataSelectable={isSelectable}\n            >\n              <Column\n                selectionMode=\"multiple\"\n                className={tableDisable ? \"not-allowed\" : \"\"}\n              ></Column>\n              <Column field=\"date\" header=\"Date\"></Column>\n              <Column\n                field=\"usdofvalue\"\n                header=\"USD to Local\"\n                body={inputOne}\n                bodyClassName=\"text-right\"\n              ></Column>\n              <Column\n                field=\"usdinvalue\"\n                header=\"Local to USD\"\n                body={inputTwo}\n                bodyClassName=\"text-right\"\n              ></Column>\n            </DataTable>\n          </div>\n\n          <div className=\" form-group col-md-12 col-sm-12 col-xs-12 btn-container center my-3 mb-2\">\n            <button\n              className=\"btn btn-primary\"\n              disabled={saveCheck}\n              onClick={sendSelectedRowsData}\n            >\n              <BiSave /> Save\n            </button>\n            <button className=\"btn btn-secondary\" onClick={closeTable}>\n              <span className=\"logo\">\n                <ImCross /> Close\n              </span>\n            </button>\n          </div>\n        </div>\n      ) : (\n        \"\"\n      )}\n    </div>\n  );\n}\n\nexport default ExpensesAdd;\n","import moment from \"moment\";\nimport React, { useEffect, useState } from \"react\";\nimport { AiFillLeftCircle } from \"react-icons/ai\";\nimport { AiFillRightCircle } from \"react-icons/ai\";\nimport axios from \"axios\";\nimport { environment } from \"../../../environments/environment\";\n\nfunction ExpensesCreateTable(props) {\n  const baseUrl = environment.baseUrl;\n  const {\n    formData,\n    setFormData,\n    projectRenderData,\n    dates,\n    setDates,\n    expenseTypeRenderData,\n    iconState,\n    setRates,\n    setLoader,\n    setWeekData,\n  } = props;\n\n  useEffect(() => {\n    dateHandler();\n  }, [formData]);\n\n  const onClickHandler = (state) => {\n    if (state === \"left\") {\n      const loaderTime = setTimeout(() => {\n        setLoader(true);\n      }, 2000);\n      let endDt = moment(formData.fromDate)\n        .subtract(1, \"days\")\n        .format(\"DD-MMM-yyyy\");\n      axios\n        .get(\n          baseUrl +\n            `/timeandexpensesms/projectExpense/getWeekDays?lastDay=${endDt}`\n        )\n        .then((res) => {\n          setLoader(false);\n          clearTimeout(loaderTime);\n          let strtDt = res.data?.days[0];\n          let endDt = res.data?.days[res.data.days.length - 1];\n\n          setFormData((prev) => ({ ...prev, [\"fromDate\"]: strtDt }));\n\n          setFormData((prev) => ({\n            ...prev,\n            [\"toDate\"]: moment(endDt).endOf(\"day\"),\n          }));\n          setWeekData(res.data);\n          setRates(res.data.rates);\n        })\n        .catch((error) => console.log(error));\n    } else {\n      const loaderTime = setTimeout(() => {\n        setLoader(true);\n      }, 2000);\n      let endDt = moment(formData.toDate).add(7, \"days\").format(\"DD-MMM-yyyy\");\n      axios\n        .get(\n          baseUrl +\n            `/timeandexpensesms/projectExpense/getWeekDays?lastDay=${endDt}`\n        )\n        .then((res) => {\n          setLoader(false);\n          clearTimeout(loaderTime);\n          let strtDt = res.data?.days[0];\n          let endDt = res.data?.days[res.data.days.length - 1];\n\n          setFormData((prev) => ({ ...prev, [\"fromDate\"]: strtDt }));\n\n          setFormData((prev) => ({\n            ...prev,\n            [\"toDate\"]: moment(endDt).endOf(\"day\"),\n          }));\n          setWeekData(res.data);\n          setRates(res.data.rates);\n        })\n        .catch((error) => console.log(error));\n    }\n  };\n\n  const dateHandler = () => {\n    let dt = [];\n\n    let stDt = moment(formData.fromDate);\n    let endDt = moment(formData.toDate);\n\n    while (stDt.isSameOrBefore(endDt, \"day\")) {\n      dt.push(stDt.format(\"YYYY-MM-DD\"));\n      stDt.add(1, \"days\");\n    }\n\n    setDates(dt);\n  };\n\n  return (\n    <div className=\"darkHeader\">\n      <table\n        id=\"details\"\n        className=\"table table-bordered htmlTable expensesCreateTable\"\n      >\n        <thead style={{ backgroundColor: \"#eee\" }}>\n          <tr>\n            <th colSpan={dates.length + 2}>\n              <AiFillLeftCircle\n                title=\"Previous Week\"\n                style={{ cursor: \"pointer\" }}\n                onClick={() => {\n                  onClickHandler(\"left\");\n                }}\n              />\n              {moment(formData.fromDate).format(\"DD-MMM-yyyy\") +\n                \" to \" +\n                moment(formData.toDate).format(\"DD-MMM-yyyy\")}\n              <AiFillRightCircle\n                style={{ cursor: \"pointer\" }}\n                title=\"Next Week\"\n                onClick={() => {\n                  onClickHandler(\"right\");\n                }}\n              />\n            </th>\n          </tr>\n\n          <tr>\n            <th rowSpan={2}>{\"Project/Expense Type\"}</th>\n            {dates.map((d) => (\n              <th>{moment(d).format(\"ddd\")}</th>\n            ))}\n            <th rowSpan={2}>{\"Total\"}</th>\n          </tr>\n\n          <tr>\n            {dates.map((d) => (\n              <th\n                style={{\n                  backgroundColor:\n                    moment(d).format(\"DD-MMM-YYYY\") ==\n                    moment().format(\"DD-MMM-YYYY\")\n                      ? \"#D9FBB3\"\n                      : \"#eeeeee\",\n                  textAlign: \"center\",\n                }}\n              >\n                {moment(d).format(\"DD-MMM\")}\n              </th>\n            ))}\n          </tr>\n        </thead>\n        <tbody>\n          {projectRenderData}\n          {iconState === \"down\" && expenseTypeRenderData}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n\nexport default ExpensesCreateTable;\n","import React, { useEffect, useState } from \"react\";\n\nimport { CModal, CModalBody, CModalHeader, CModalTitle } from \"@coreui/react\";\n\nimport moment from \"moment\";\n\nfunction AddExpensePopup(props) {\n  const {\n    expenseTypePopupState,\n    setExpenseTypePopupState,\n    expenseTypeOptions,\n    setExpenseTypesValues,\n    setSelectedExpenseTypes,\n    selectedExpenseTypes,\n    setIconState,\n    selectAll,\n    setSelectAll,\n    isValuesChecked,\n    setIsValuesChecked,\n  } = props;\n\n  const projectData = {\n    \"Project Name\": expenseTypeOptions?.projectDetails?.projectName,\n    \"Project Manager\": expenseTypeOptions?.primaryManager?.name,\n    \"Start Date\":\n      expenseTypeOptions?.projectDetails?.actualStartDate !== null\n        ? moment(expenseTypeOptions?.projectDetails?.actualStartDate).format(\n            \"DD-MMM-YYYY\"\n          )\n        : \"-\",\n    \"End Date\":\n      expenseTypeOptions?.projectDetails?.actualEndDate !== null\n        ? moment(expenseTypeOptions?.projectDetails?.actualEndDate).format(\n            \"DD-MMM-YYYY\"\n          )\n        : \"-\",\n  };\n\n  useEffect(() => {\n    selectAllExpenseTypeHandler(selectAll);\n  }, [selectAll]);\n\n  const selectAllExpenseTypeHandler = (value) => {\n    const updatedIsValuesChecked = [];\n    Object.keys(isValuesChecked).forEach((element) => {\n      updatedIsValuesChecked[element] = value;\n    });\n    setIsValuesChecked(updatedIsValuesChecked);\n  };\n\n  useEffect(() => {\n    const idList = selectedExpenseTypes.map((it) => it.id);\n    const updatedCheckedList = isValuesChecked;\n    idList.forEach((i) => {\n      updatedCheckedList[i] = true;\n    });\n    setIsValuesChecked(updatedCheckedList);\n  }, []);\n\n  const onAddHandler = () => {\n    setIconState(\"down\");\n    let checkValuesArr = Object.values(isValuesChecked);\n\n    if (checkValuesArr.includes(true)) {\n      let selectedExpenseype = [];\n\n      Object.keys(isValuesChecked).forEach((ele) => {\n        if (isValuesChecked[ele]) {\n          selectedExpenseype.push(ele);\n        }\n      });\n\n      setExpenseTypesValues(selectedExpenseype);\n\n      let selectedExpenseTypesObjs = JSON.parse(\n        JSON.stringify(expenseTypeOptions.expenses)\n      ).filter((ele) => selectedExpenseype.includes(\"\" + ele.id));\n\n      let newSelectedExpenseTypes = selectedExpenseTypes.concat(\n        selectedExpenseTypesObjs.filter(\n          (newExpenseType) =>\n            !selectedExpenseTypes.some(\n              (existingExpenseType) =>\n                existingExpenseType.id === newExpenseType.id\n            )\n        )\n      );\n\n      setSelectedExpenseTypes(newSelectedExpenseTypes);\n    }\n    setExpenseTypePopupState(false);\n  };\n\n  return (\n    <div>\n      <div className=\"col-md-12\">\n        <CModal\n          visible={expenseTypePopupState}\n          size=\"lg\"\n          onClose={() => setExpenseTypePopupState(false)}\n          backdrop={\"static\"}\n        >\n          <CModalHeader className=\"\">\n            <CModalTitle>\n              <span className=\"\">Expense Types</span>\n            </CModalTitle>\n          </CModalHeader>\n          <CModalBody>\n            <div lassName=\"col-md-12\">\n              {expenseTypeOptions.hasOwnProperty(\"projectDetails\") && (\n                <div\n                  className=\"expTypeDiv\"\n                  style={{\n                    backgroundColor: \"#eeeeee\",\n                    padding: \"3px\",\n                    border: \"1px solid #ddd\",\n                  }}\n                >\n                  {Object.keys(projectData).map((d, index) => {\n                    return (\n                      <div className=\"col-md-12 row\" key={index}>\n                        <label className=\"col-md-4\">{d}</label>\n                        <span className=\"col-md-1\">:</span>\n                        <span\n                          className=\"col-md-6 ellipsis\"\n                          title={projectData[d]}\n                        >\n                          {projectData[d]}\n                        </span>\n                      </div>\n                    );\n                  })}\n                </div>\n              )}\n            </div>\n\n            <div className=\"my-3\">\n              <div\n                className=\"col-12\"\n                style={{\n                  backgroundColor: \"#ebebeb\",\n                  display: \"flex\",\n                  alignItems: \"center\",\n                  marginBottom: \"5px\",\n                  padding: \"4px 8px\",\n                }}\n              >\n                <input\n                  type=\"checkbox\"\n                  checked={selectAll}\n                  onChange={(e) => {\n                    setSelectAll((prevSelectAll) => !prevSelectAll);\n                  }}\n                />\n                <strong>&nbsp;{\"  \" + \"Select All\"}</strong>\n              </div>\n              <div className=\"col-12\">\n                <div className=\"row\">\n                  {expenseTypeOptions.expenses.map((d, index) => {\n                    return (\n                      <div className=\"col-md-4\">\n                        <div key={index}>\n                          <input\n                            id={d.id}\n                            type=\"checkbox\"\n                            defaultChecked={selectedExpenseTypes.some(\n                              (i) => i.id == d.id\n                            )}\n                            checked={isValuesChecked[d.id]}\n                            onChange={(e) => {\n                              setIsValuesChecked((prev) => ({\n                                ...prev,\n                                [d.id]: e.target.checked,\n                              }));\n                            }}\n                          />\n                          <span>{\"  \" + d.lkup_name}</span>\n                        </div>\n                      </div>\n                    );\n                  })}\n                </div>\n              </div>\n            </div>\n            <div className=\" form-group col-md-12 col-sm-12 col-xs-1 btn-container center my-2\">\n              <button\n                className=\"btn btn-primary\"\n                type=\"Add\"\n                onClick={() => {\n                  onAddHandler();\n                }}\n              >\n                {\" \"}\n                Add\n              </button>\n            </div>\n          </CModalBody>\n        </CModal>\n      </div>\n    </div>\n  );\n}\n\nexport default AddExpensePopup;\n","import React, { useEffect, useState } from \"react\";\n\nimport { ReactSearchAutocomplete } from \"react-search-autocomplete\";\nimport moment from \"moment\";\nimport Popover from \"@mui/material/Popover\";\nimport { FaTimes } from \"react-icons/fa\";\nimport { BiTrash, BiPlus } from \"react-icons/bi\";\nimport { CModal, CModalBody, CModalHeader, CModalTitle } from \"@coreui/react\";\nimport { IoWarningOutline } from \"react-icons/io5\";\nimport \"./ExpensesTypePopUp.scss\";\n\nfunction ExpensesTypePopUp({\n  expensesTypePopup,\n  setExpensesTypePopup,\n  expenseTypeId,\n  currencyOptionsData,\n  country,\n  cities,\n  carTypes,\n  paidBy,\n  airportList,\n  mobileType,\n  expDate,\n  expenseData,\n  setExpenseData,\n  expInfo,\n  projectId,\n  expName,\n  setFileMap,\n  fileMap,\n  files,\n  setFiles,\n  isExpenseBillable,\n  setExpCurrencySymbol,\n  expCurrencySymbol,\n  id,\n}) {\n  const expenseDataObject = (expenseTypeId) => {\n    switch (expenseTypeId) {\n      case 620:\n        return {\n          noOfNights: 0,\n          subLocation: \"\",\n          restOfWorld: \"\",\n          prjId: projectId,\n          name: expName,\n          expAmt: 0.0,\n        };\n      case 766:\n        return {\n          mobileType: mobileType[0]?.id,\n          prjId: projectId,\n          name: expName,\n          expAmt: 0.0,\n        };\n      case 616:\n        return {\n          peopleAttnd: 0,\n          guestAttnd: 0,\n          empAttnd: 0,\n          prjId: projectId,\n          name: expName,\n          expAmt: 0.0,\n        };\n      case 615:\n        return {\n          noOfMiles: 0,\n          rate: 0,\n          rental: 0,\n          charge: 0,\n          fuelAmount: 0,\n          carType: carTypes[0]?.id,\n          tollCharge: 0,\n          parking: 0,\n          prjId: projectId,\n          name: expName,\n          expAmt: 0.0,\n        };\n      case 621:\n        return {\n          origin: \"\",\n          destination: \"\",\n          ticketFare: 0,\n          addCharges: 0,\n          prjId: projectId,\n          name: expName,\n          expAmt: 0.0,\n          travelType: \"777\",\n          tripType: \"779\",\n        };\n      default:\n        return {\n          date: moment(expDate).format(\"YYYY-MM-DD\"),\n          expTypId: expenseTypeId,\n          paidBy: paidBy[0]?.id,\n          currency: \"448\",\n          location: \"3\",\n          description: \"\",\n          prjId: projectId,\n          name: expName,\n          expAmt: 0.0,\n        };\n    }\n  };\n\n  const [errorMsg, setErrorMsg] = useState(\"\");\n\n  useEffect(() => {\n    if (\n      !expInfo.some((it) => it.expTypId == expenseTypeId && it.date == expDate)\n    ) {\n      const obj = expenseDataObject(expenseTypeId);\n      setExpenseData(obj);\n    }\n  }, []);\n\n  const handleOnChange = (e) => {\n    const { name, value } = e.target;\n\n    setExpenseData((prev) => ({\n      ...prev,\n      date: moment(expDate).format(\"YYYY-MM-DD\"),\n      expTypId: expenseTypeId,\n      description: \"\",\n      [name]: value,\n      prjId: projectId,\n      name: expName,\n    }));\n    // if(name == \"expAmt\"){\n    //   setExpenseData((prev) => ({\n    //     ...prev,\n    //     expAmt:parseFloat(value || 0.00),\n    //   }));\n    // }\n    if (name == \"isBillable\") {\n      setExpenseData((prev) => ({\n        ...prev,\n        isBillable: value == \"on\",\n      }));\n    }\n    if (expenseTypeId.startsWith(\"621\")) {\n      setExpenseData((prev) => ({\n        ...prev,\n        expAmt:\n          parseFloat(prev.ticketFare || 0.0) +\n          parseFloat(prev.addCharges || 0.0),\n        stops: stopsValue,\n      }));\n      if (\n        expenseData?.origin !== undefined &&\n        expenseData?.destination !== undefined &&\n        expenseData.origin === expenseData.destination\n      ) {\n        setErrorMsg(\"Origin and destination cannot be the same.\");\n      } else {\n        setErrorMsg(\"\");\n      }\n    }\n    if (\n      (name === \"noOfMiles\" ||\n        name === \"rate\" ||\n        name === \"tollCharge\" ||\n        name === \"parking\") &&\n      expenseTypeId === \"615\"\n    ) {\n      const noOfMiles = name === \"noOfMiles\" ? value : expenseData.noOfMiles;\n      const rate = name === \"rate\" ? value : expenseData.rate;\n      const calculatedFuelAmount = noOfMiles * rate;\n\n      const tollCharge = parseFloat(expenseData.tollCharge || 0);\n      const parking = parseFloat(expenseData.parking || 0);\n\n      const netAmount = calculatedFuelAmount + tollCharge + parking;\n\n      setExpenseData((prev) => ({\n        ...prev,\n        fuelAmount: calculatedFuelAmount.toFixed(2),\n        expAmt: netAmount.toFixed(2),\n      }));\n    }\n  };\n\n  const handleFileChange = (event) => {\n    const newFiles = Array.from(event.target.files);\n    setFiles((prev) => [...prev, ...newFiles]);\n\n    const newFileMap = { ...fileMap };\n    for (let i = 0; i < newFiles.length; i++) {\n      const file = newFiles[i];\n      const key = `${projectId}_${expenseTypeId}_${moment(expDate).format(\n        \"YYYY-MM-DD\"\n      )}`;\n      if (!newFileMap[key]) {\n        newFileMap[key] = [];\n      }\n      newFileMap[key].push(file.name);\n    }\n\n    setFileMap(newFileMap);\n  };\n\n  const [fileDelPopup, setFileDelPopup] = useState(false);\n  const [deleteFileName, setDeleteFileName] = useState(null);\n\n  const handleFileRemove = (fileName) => {\n    setFileDelPopup(true);\n    setDeleteFileName(fileName);\n  };\n\n  const deleteFile = () => {\n    const newFileMap = { ...fileMap };\n    for (const key in newFileMap) {\n      const index = newFileMap[key].indexOf(deleteFileName);\n      if (index !== -1) {\n        newFileMap[key].splice(index, 1);\n        setFileMap(newFileMap);\n        break; // Assuming each file is unique across keys\n      }\n    }\n\n    const newFiles = files.filter((file) => file.name !== deleteFileName);\n    setFiles(newFiles);\n  };\n\n  useEffect(() => {\n    if (id == undefined) {\n      setExpCurrencySymbol(() => {\n        let container = document.createElement(\"div\");\n        container.innerHTML = currencyOptionsData.find(\n          (item) => item.id == expenseData.currency\n        )?.currencyCode;\n        return container.innerHTML;\n      });\n    }\n  }, [expenseData]);\n\n  const [stops, setStops] = useState([{ id: 1, value: \"\", isFirst: true }]);\n\n  const handleAddStop = () => {\n    const newId = stops.length + 1;\n    const newStop = { id: newId, value: \"\", isFirst: false };\n    setStops([...stops, newStop]);\n  };\n\n  const handleDeleteStop = (id) => {\n    const updatedStops = stops.filter((stop) => stop.id !== id);\n    setStops(updatedStops);\n  };\n\n  const [stopsValue, setStopsValue] = useState(\"\");\n\n  useEffect(() => {\n    const stopsValueString = stops.map((item) => item.value).join(\",\");\n    setStopsValue(stopsValueString);\n  }, [stops]);\n\n  const handleStopChange = (id, newValue) => {\n    const updatedStops = [...stops];\n    updatedStops?.map((stop) => {\n      if (stop.id == id) stop.value = newValue;\n      return stop;\n    });\n    setStops(updatedStops);\n  };\n\n  const inputFields = () => {\n    let excludedValues = [615, 621];\n    return (\n      <div className=\"col-12 row\">\n        <div className=\"col-4 mb-2\">\n          <label>Paid By</label>\n          <select name=\"paidBy\" onChange={handleOnChange}>\n            {paidBy.map((item) => (\n              <option key={item.id} value={item.id}>\n                {item.lkup_name}\n              </option>\n            ))}\n          </select>\n        </div>\n        {!expenseTypeId.includes(\"621\") && (\n          <div className=\"col-4 mb-2\">\n            <label>Country</label>\n            <select name=\"location\" onChange={handleOnChange}>\n              {country.map((d) => (\n                <option value={d.id} selected={d.id == 3}>\n                  {d.country_name}\n                </option>\n              ))}\n              <option value=\"others\">Others</option>\n            </select>\n          </div>\n        )}\n        <div className=\"col-4 mb-2\">\n          <label>Currency</label>\n\n          <select name=\"currency\" onChange={handleOnChange}>\n            {currencyOptionsData.map((d) => (\n              <option value={d.id} selected={d.id == 448}>\n                {d.currency}\n              </option>\n            ))}\n          </select>\n        </div>\n        {expenseTypeId.includes(\"620\") && (\n          <>\n            <div className=\"col-4 mb-2\">\n              <label>No. of nights</label>\n\n              <input\n                type=\"text\"\n                name=\"noOfNights\"\n                onChange={handleOnChange}\n                defaultValue={\n                  expInfo?.find(\n                    (item) =>\n                      item.expTypId == expenseTypeId &&\n                      item.date == moment(expDate).format(\"YYYY-MM-DD\")\n                  )?.noOfNights\n                }\n                onKeyDown={(e) => {\n                  const key = e.key;\n                  const isNumber = /^[0-9]$/.test(key);\n                  const isDecimal = key === \".\";\n                  const isAllowedKey = [\n                    \"Backspace\",\n                    \"Delete\",\n                    \"ArrowLeft\",\n                    \"ArrowRight\",\n                  ].includes(key);\n\n                  if (!isNumber && !isDecimal && !isAllowedKey) {\n                    e.preventDefault();\n                  }\n                }}\n              />\n            </div>\n            <div className=\"col-4 mb-2\">\n              <label>City</label>\n              <div className=\"autoComplete-container\">\n                {\" \"}\n                <ReactSearchAutocomplete\n                  name=\"subLocation\"\n                  id=\"city\"\n                  placeholder=\"search city\"\n                  className=\"AutoComplete \"\n                  type=\"Text\"\n                  items={cities}\n                  showIcon={false}\n                  onSelect={(e) =>\n                    setExpenseData((prev) => ({\n                      ...prev,\n                      subLocation: e.value,\n                    }))\n                  }\n                />\n              </div>\n            </div>\n            <div className=\"col-4 mb-2\">\n              <label>Other City</label>\n\n              <input\n                type=\"text\"\n                name=\"restOfWorld\"\n                onChange={handleOnChange}\n                defaultValue={\n                  expInfo?.find(\n                    (item) =>\n                      item.expTypId == expenseTypeId &&\n                      item.date == moment(expDate).format(\"YYYY-MM-DD\")\n                  )?.restOfWorld\n                }\n              />\n            </div>\n          </>\n        )}\n        {expenseTypeId.includes(\"616\") && (\n          <>\n            <div className=\"col-4 mb-2\">\n              <label>No. of Guests Attended</label>\n\n              <input\n                type=\"text\"\n                name=\"guestAttnd\"\n                onChange={handleOnChange}\n                defaultValue={\n                  expInfo?.find(\n                    (item) =>\n                      item.expTypId == expenseTypeId &&\n                      item.date == moment(expDate).format(\"YYYY-MM-DD\")\n                  )?.guestAttnd\n                }\n                onKeyDown={(e) => {\n                  const key = e.key;\n                  const isNumber = /^[0-9]$/.test(key);\n                  const isDecimal = key === \".\";\n                  const isAllowedKey = [\n                    \"Backspace\",\n                    \"Delete\",\n                    \"ArrowLeft\",\n                    \"ArrowRight\",\n                  ].includes(key);\n\n                  if (!isNumber && !isDecimal && !isAllowedKey) {\n                    e.preventDefault();\n                  }\n                }}\n              />\n            </div>\n            <div className=\"col-4 mb-2\">\n              <label>No. of Prolifics Employees</label>\n\n              <input\n                type=\"text\"\n                name=\"empAttnd\"\n                onChange={handleOnChange}\n                defaultValue={\n                  expInfo?.find(\n                    (item) =>\n                      item.expTypId == expenseTypeId &&\n                      item.date == moment(expDate).format(\"YYYY-MM-DD\")\n                  )?.empAttnd\n                }\n                onKeyDown={(e) => {\n                  const key = e.key;\n                  const isNumber = /^[0-9]$/.test(key);\n                  const isDecimal = key === \".\";\n                  const isAllowedKey = [\n                    \"Backspace\",\n                    \"Delete\",\n                    \"ArrowLeft\",\n                    \"ArrowRight\",\n                  ].includes(key);\n\n                  if (!isNumber && !isDecimal && !isAllowedKey) {\n                    e.preventDefault();\n                  }\n                }}\n              />\n            </div>\n            <div className=\"col-4 mb-2\">\n              <label>Total People Attended</label>\n\n              <input\n                type=\"text\"\n                name=\"peopleAttnd\"\n                readOnly\n                value={\n                  parseInt(expenseData.guestAttnd || 0) +\n                  parseInt(expenseData.empAttnd || 0)\n                }\n                defaultValue={\n                  expInfo?.find(\n                    (item) =>\n                      item.expTypId == expenseTypeId &&\n                      item.date == moment(expDate).format(\"YYYY-MM-DD\")\n                  )?.peopleAttnd\n                }\n              />\n            </div>\n          </>\n        )}\n        {expenseTypeId.includes(\"766\") && (\n          <div className=\"col-4 mb-2\">\n            <label>Type</label>\n\n            <select name=\"mobileType\" onChange={handleOnChange}>\n              {mobileType.map((item) => (\n                <option key={item.id} value={item.id}>\n                  {item.lkup_name}\n                </option>\n              ))}\n            </select>\n          </div>\n        )}\n        {expenseTypeId.includes(\"621\") && (\n          <>\n            <div className=\"col-4 mb-2\">\n              <label>Origin</label>\n\n              <div className=\"autoComplete-container\">\n                {\" \"}\n                <ReactSearchAutocomplete\n                  name=\"origin\"\n                  id=\"city\"\n                  placeholder=\"search city\"\n                  className=\"AutoComplete \"\n                  type=\"Text\"\n                  items={airportList}\n                  showIcon={false}\n                  showClear={false}\n                  onSelect={(e) =>\n                    setExpenseData((prev) => ({ ...prev, origin: e.value }))\n                  }\n                  styling={{\n                    backgroundColor: errorMsg !== \"\" ? \"#F2DEDE\" : \"\",\n                  }}\n                />\n              </div>\n            </div>\n            <div className=\"col-4 mb-2\">\n              <label>Destination</label>\n\n              <div className=\"autoComplete-container\">\n                {\" \"}\n                <ReactSearchAutocomplete\n                  name=\"destination\"\n                  id=\"city\"\n                  placeholder=\"search city\"\n                  className=\"AutoComplete \"\n                  type=\"Text\"\n                  items={airportList}\n                  showIcon={false}\n                  showClear={false}\n                  onSelect={(e) => {\n                    setExpenseData((prev) => ({\n                      ...prev,\n                      destination: e.value,\n                    }));\n                  }}\n                  styling={{\n                    backgroundColor: errorMsg !== \"\" ? \"#F2DEDE\" : \"\",\n                  }}\n                />\n              </div>\n            </div>\n            <div className=\"col-4 mb-2\">\n              <label>Ticket Fare</label>\n\n              <input\n                type=\"text\"\n                name=\"ticketFare\"\n                onChange={handleOnChange}\n                defaultValue={\n                  expInfo?.find(\n                    (item) =>\n                      item.expTypId == expenseTypeId &&\n                      item.date == moment(expDate).format(\"YYYY-MM-DD\")\n                  )?.ticketFare\n                }\n                onKeyDown={(e) => {\n                  const key = e.key;\n                  const isNumber = /^[0-9]$/.test(key);\n                  const isDecimal = key === \".\";\n                  const isAllowedKey = [\n                    \"Backspace\",\n                    \"Delete\",\n                    \"ArrowLeft\",\n                    \"ArrowRight\",\n                  ].includes(key);\n\n                  if (!isNumber && !isDecimal && !isAllowedKey) {\n                    e.preventDefault();\n                  }\n                }}\n              />\n            </div>\n            <div className=\"col-4 mb-2\">\n              <label>Additional Charges</label>\n\n              <input\n                type=\"text\"\n                name=\"addCharges\"\n                onChange={handleOnChange}\n                defaultValue={\n                  expInfo?.find(\n                    (item) =>\n                      item.expTypId == expenseTypeId &&\n                      item.date == moment(expDate).format(\"YYYY-MM-DD\")\n                  )?.addCharges\n                }\n                onKeyDown={(e) => {\n                  const key = e.key;\n                  const isNumber = /^[0-9]$/.test(key);\n                  const isDecimal = key === \".\";\n                  const isAllowedKey = [\n                    \"Backspace\",\n                    \"Delete\",\n                    \"ArrowLeft\",\n                    \"ArrowRight\",\n                  ].includes(key);\n\n                  if (!isNumber && !isDecimal && !isAllowedKey) {\n                    e.preventDefault();\n                  }\n                }}\n              />\n            </div>\n            <div className=\"col-4 mb-2\">\n              <label>Travel Type</label>\n              <span className=\"radioContainer\">\n                <input\n                  type=\"radio\"\n                  name=\"travelType\"\n                  onChange={handleOnChange}\n                  value=\"777\"\n                  defaultChecked\n                />\n                <label>Domestic</label>\n              </span>\n              <span className=\"radioContainer\">\n                <input\n                  type=\"radio\"\n                  name=\"travelType\"\n                  onChange={handleOnChange}\n                  value=\"778\"\n                />\n                <label>International</label>\n              </span>\n            </div>\n\n            <div className=\"col-4 mb-2\">\n              <label>Trip Type</label>\n              <span className=\"radioContainer\">\n                <input\n                  type=\"radio\"\n                  name=\"tripType\"\n                  onChange={handleOnChange}\n                  value=\"779\"\n                  defaultChecked\n                />\n                <label>One Way</label>\n              </span>\n              <span className=\"radioContainer\">\n                <input\n                  type=\"radio\"\n                  name=\"tripType\"\n                  onChange={handleOnChange}\n                  value=\"780\"\n                />\n                <label>Round Trip</label>\n              </span>\n              <span className=\"radioContainer\">\n                <input\n                  type=\"radio\"\n                  name=\"tripType\"\n                  onChange={handleOnChange}\n                  value=\"781\"\n                />\n                <label>Multi-City</label>\n              </span>\n            </div>\n\n            {expenseData.tripType === \"781\" && (\n              <div className=\"mt-2 mb-4 row\">\n                {stops?.map((stop) => (\n                  <div key={stop.id} className=\"col-6 multiStopsContainer\">\n                    <label>{`Stops ${stop.id}`}</label>\n                    <input\n                      type=\"text\"\n                      name={`stop_${stop.id}`}\n                      //defaultValue={stops.find(it=>it.id).value}\n                      onChange={(e) =>\n                        handleStopChange(stop.id, e.target.value)\n                      }\n                    />\n                    {stop.isFirst ? (\n                      <BiPlus\n                        size={\"1.25em\"}\n                        className=\"iconColor\"\n                        onClick={handleAddStop}\n                      />\n                    ) : (\n                      <BiTrash\n                        className=\"iconColor\"\n                        size={\"1.25em\"}\n                        onClick={() => handleDeleteStop(stop.id)}\n                      />\n                    )}\n                  </div>\n                ))}\n              </div>\n            )}\n\n            <div className=\"col-4 mb-2\">\n              <label>Net Amount</label>\n              <div style={{ display: \"flex\" }}>\n                <span>{expCurrencySymbol}</span>\n                <input\n                  className=\"ms-1\"\n                  type=\"text\"\n                  name=\"expAmt\"\n                  style={{ textAlign: \"right\" }}\n                  // value={\n                  //   parseFloat(expenseData.ticketFare || 0.00) +\n                  //   parseFloat(expenseData.addCharges || 0.00)\n                  // }\n                  defaultValue={\n                    expInfo.length > 0\n                      ? expInfo\n                          ?.find(\n                            (item) =>\n                              item.expTypId == expenseTypeId &&\n                              item.date == moment(expDate).format(\"YYYY-MM-DD\")\n                          )\n                          ?.expAmt.toLocaleString(\"en-US\", {\n                            minimumFractionDigits: 2,\n                            maximumFractionDigits: 2,\n                          })\n                      : expenseData?.expAmt?.toLocaleString(\"en-US\", {\n                          minimumFractionDigits: 2,\n                          maximumFractionDigits: 2,\n                        })\n                  }\n                  readOnly\n                />\n              </div>\n            </div>\n          </>\n        )}\n        {expenseTypeId.includes(\"615\") && (\n          <>\n            <div className=\"col-4 mb-2\">\n              <label>Car Type</label>\n\n              <select name=\"carType\" onChange={handleOnChange}>\n                {carTypes.map((item) => (\n                  <option key={item.id} value={item.id}>\n                    {item.lkup_name}\n                  </option>\n                ))}\n              </select>\n            </div>\n            <div className=\"col-4 mb-2\">\n              <label>Toll Charge</label>\n\n              <input\n                type=\"text\"\n                name=\"tollCharge\"\n                onChange={handleOnChange}\n                defaultValue={\n                  expInfo?.find(\n                    (item) =>\n                      item.expTypId == expenseTypeId &&\n                      item.date == moment(expDate).format(\"YYYY-MM-DD\")\n                  )?.tollCharge\n                }\n                onKeyDown={(e) => {\n                  const key = e.key;\n                  const isNumber = /^[0-9]$/.test(key);\n                  const isDecimal = key === \".\";\n                  const isAllowedKey = [\n                    \"Backspace\",\n                    \"Delete\",\n                    \"ArrowLeft\",\n                    \"ArrowRight\",\n                  ].includes(key);\n\n                  if (!isNumber && !isDecimal && !isAllowedKey) {\n                    e.preventDefault();\n                  }\n                }}\n              />\n            </div>\n            <div className=\"col-4 mb-2\">\n              <label>Parking Fee</label>\n\n              <input\n                type=\"text\"\n                name=\"parking\"\n                onChange={handleOnChange}\n                defaultValue={\n                  expInfo?.find(\n                    (item) =>\n                      item.expTypId == expenseTypeId &&\n                      item.date == moment(expDate).format(\"YYYY-MM-DD\")\n                  )?.parking\n                }\n                onKeyDown={(e) => {\n                  const key = e.key;\n                  const isNumber = /^[0-9]$/.test(key);\n                  const isDecimal = key === \".\";\n                  const isAllowedKey = [\n                    \"Backspace\",\n                    \"Delete\",\n                    \"ArrowLeft\",\n                    \"ArrowRight\",\n                  ].includes(key);\n\n                  if (!isNumber && !isDecimal && !isAllowedKey) {\n                    e.preventDefault();\n                  }\n                }}\n              />\n            </div>\n            <div className=\"col-4 mb-2\">\n              <label>No. of kms</label>\n\n              <input\n                type=\"text\"\n                name=\"noOfMiles\"\n                onChange={handleOnChange}\n                defaultValue={\n                  expInfo?.find(\n                    (item) =>\n                      item.expTypId == expenseTypeId &&\n                      item.date == moment(expDate).format(\"YYYY-MM-DD\")\n                  )?.noOfMiles\n                }\n                onKeyDown={(e) => {\n                  const key = e.key;\n                  const isNumber = /^[0-9]$/.test(key);\n                  const isDecimal = key === \".\";\n                  const isAllowedKey = [\n                    \"Backspace\",\n                    \"Delete\",\n                    \"ArrowLeft\",\n                    \"ArrowRight\",\n                  ].includes(key);\n\n                  if (!isNumber && !isDecimal && !isAllowedKey) {\n                    e.preventDefault();\n                  }\n                }}\n              />\n            </div>\n            <div className=\"col-4 mb-2\">\n              <label>Rate per km</label>\n\n              <input\n                type=\"text\"\n                name=\"rate\"\n                onChange={handleOnChange}\n                defaultValue={\n                  expInfo?.find(\n                    (item) =>\n                      item.expTypId == expenseTypeId &&\n                      item.date == moment(expDate).format(\"YYYY-MM-DD\")\n                  )?.rate\n                }\n                onKeyDown={(e) => {\n                  const key = e.key;\n                  const isNumber = /^[0-9]$/.test(key);\n                  const isDecimal = key === \".\";\n                  const isAllowedKey = [\n                    \"Backspace\",\n                    \"Delete\",\n                    \"ArrowLeft\",\n                    \"ArrowRight\",\n                  ].includes(key);\n\n                  if (!isNumber && !isDecimal && !isAllowedKey) {\n                    e.preventDefault();\n                  }\n                }}\n              />\n            </div>\n            <div className=\"col-4 mb-2\">\n              <label>Amount</label>\n\n              <input\n                type=\"text\"\n                name=\"fuelAmount\"\n                value={\n                  parseFloat(expenseData.noOfMiles || 0) *\n                  parseFloat(expenseData.rate || 0)\n                }\n                readOnly\n              />\n            </div>\n            <div className=\"col-4 mb-2\">\n              <label>Net Amount</label>\n              <div style={{ display: \"flex\" }}>\n                <span>{expCurrencySymbol}</span>\n                <input\n                  className=\"ms-1\"\n                  type=\"text\"\n                  name=\"expAmt\"\n                  style={{ textAlign: \"right\" }}\n                  value={\n                    parseFloat(expenseData.tollCharge || 0) +\n                    parseFloat(expenseData.parking || 0) +\n                    parseFloat(expenseData.noOfMiles || 0) *\n                      parseFloat(expenseData.rate || 0)\n                  }\n                  defaultValue={expInfo\n                    ?.find(\n                      (item) =>\n                        item.expTypId == expenseTypeId &&\n                        item.date == moment(expDate).format(\"YYYY-MM-DD\")\n                    )\n                    ?.expAmt.toLocaleString(\"en-US\", {\n                      minimumFractionDigits: 2,\n                      maximumFractionDigits: 2,\n                    })}\n                  readOnly\n                />\n              </div>\n            </div>\n          </>\n        )}\n        {isExpenseBillable == 1 && (\n          <div className=\"row\">\n            <div\n              className=\"col-4 mt-2\"\n              style={{ display: \"flex\", alignItems: \"center\" }}\n            >\n              <input\n                type=\"checkbox\"\n                name=\"isBillable\"\n                onChange={handleOnChange}\n              />\n              <strong className=\"ml-1\">Billable</strong>\n            </div>\n          </div>\n        )}\n        {!excludedValues.some((value) => expenseTypeId.startsWith(value)) && (\n          <div className=\"col-4 mb-2\">\n            <label>Net Amount</label>\n            <div style={{ display: \"flex\" }}>\n              <span>{expCurrencySymbol}</span>\n              <input\n                className=\"ms-1\"\n                type=\"text\"\n                name=\"expAmt\"\n                style={{ textAlign: \"right\" }}\n                defaultValue={\n                  expInfo.length > 0\n                    ? (\n                        expInfo.find(\n                          (item) =>\n                            item.expTypId == expenseTypeId &&\n                            item.date == moment(expDate).format(\"YYYY-MM-DD\")\n                        )?.expAmt || \"\"\n                      ).toLocaleString(\"en-US\", {\n                        minimumFractionDigits: 2,\n                        maximumFractionDigits: 2,\n                      })\n                    : (expenseData?.expAmt || \"\").toLocaleString(\"en-US\", {\n                        minimumFractionDigits: 2,\n                        maximumFractionDigits: 2,\n                      })\n                }\n                onKeyDown={(e) => {\n                  const key = e.key;\n                  const isNumber = /^[0-9]$/.test(key);\n                  const isDecimal = key === \".\";\n                  const isAllowedKey = [\n                    \"Backspace\",\n                    \"Delete\",\n                    \"ArrowLeft\",\n                    \"ArrowRight\",\n                  ].includes(key);\n\n                  if (!isNumber && !isDecimal && !isAllowedKey) {\n                    e.preventDefault();\n                  }\n                }}\n                onChange={handleOnChange}\n              />\n            </div>\n          </div>\n        )}\n        <div className=\"col-12\">\n          <label>Description</label>\n\n          <textarea\n            name=\"description\"\n            onChange={handleOnChange}\n            defaultValue={\n              expInfo.find(\n                (item) =>\n                  item.expTypId == expenseTypeId &&\n                  item.date == moment(expDate).format(\"YYYY-MM-DD\")\n              )?.description\n            }\n          />\n        </div>\n        <label>Add Receipt: </label>\n        <div>\n          <label class=\"file-label\">\n            <input\n              type=\"file\"\n              multiple\n              disabled={expInfo[0]?.status_id !== 634 && id !== undefined}\n              onChange={handleFileChange}\n            />\n            <span>Choose Files</span>\n          </label>\n          {Object.keys(fileMap).map((key, index) => {\n            const [projectIdKey, expenseTypIdKey, dateKey] = key.split(\"_\");\n            if (\n              projectIdKey == projectId &&\n              expenseTypIdKey == expenseTypeId &&\n              dateKey == moment(expDate).format(\"YYYY-MM-DD\")\n            ) {\n              return (\n                <div key={index}>\n                  {fileMap[key].map((fileName, subIndex) => (\n                    <div key={subIndex}>\n                      <BiTrash\n                        className=\"iconColor\"\n                        onClick={() => handleFileRemove(fileName)}\n                      />{\" \"}\n                      <strong>{fileName}</strong>\n                    </div>\n                  ))}\n                </div>\n              );\n            }\n            return null;\n          })}\n        </div>\n      </div>\n    );\n  };\n\n  const FileDeleteConfirmPopup = () => {\n    return (\n      <>\n        <CModal\n          visible={fileDelPopup}\n          style={{ width: \"350px\", marginLeft: \"80px\" }}\n          onClose={() => setFileDelPopup(false)}\n          backdrop={\"static\"}\n          alignment=\"center\"\n        >\n          <CModalHeader className=\"\">\n            <CModalTitle>\n              <span className=\"\">Delete Confirmation</span>\n            </CModalTitle>\n          </CModalHeader>\n          <CModalBody>\n            <span>Are you sure you want to permanently remove this item?</span>\n            <hr />\n            <div\n              style={{\n                display: \"flex\",\n                alignItems: \"center\",\n                justifyContent: \"center\",\n              }}\n            >\n              <button\n                className=\"btn btn-primary\"\n                onClick={() => {\n                  deleteFile();\n                  setFileDelPopup(false);\n                }}\n              >\n                Yes\n              </button>\n              <button\n                className=\"btn btn-secondary mx-2\"\n                onClick={() => setFileDelPopup(false)}\n              >\n                No\n              </button>\n            </div>\n          </CModalBody>\n        </CModal>\n      </>\n    );\n  };\n\n  return (\n    <CModal\n      size=\"lg\"\n      visible={expensesTypePopup}\n      onClose={() => setExpensesTypePopup(false)}\n      backdrop={\"static\"}\n      alignment=\"center\"\n    >\n      <CModalHeader>\n        <CModalTitle></CModalTitle>\n      </CModalHeader>\n      <CModalBody>\n        {errorMsg && (\n          <div className=\"statusMsg error\">\n            <span>\n              <IoWarningOutline /> {errorMsg}\n            </span>\n          </div>\n        )}\n        <div>{inputFields()}</div>\n        <div className=\" form-group col-md-12 col-sm-12 col-xs-1 btn-container center my-2\">\n          <button\n            className=\"btn btn-primary\"\n            onClick={() => setExpensesTypePopup(false)}\n          >\n            Add\n          </button>\n        </div>\n        {fileDelPopup && <FileDeleteConfirmPopup />}\n      </CModalBody>\n    </CModal>\n  );\n}\n\nexport default ExpensesTypePopUp;\n","import React, { useState, useEffect, useRef } from \"react\";\nimport DatePicker from \"react-datepicker\";\nimport axios from \"axios\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { FaPlus, FaSave } from \"react-icons/fa\";\nimport { environment } from \"../../../environments/environment\";\nimport moment from \"moment\";\nimport ExpensesCreateTable from \"./ExpensesCreateTable\";\nimport { BiTrash, BiPlus } from \"react-icons/bi\";\nimport {\n  AiFillCaretDown,\n  AiFillCaretRight,\n  AiFillDelete,\n} from \"react-icons/ai\";\nimport { AiFillPlusCircle } from \"react-icons/ai\";\nimport AddExpensePopup from \"./AddExpensePopup\";\nimport { ImCross } from \"react-icons/im\";\nimport { TiTick } from \"react-icons/ti\";\nimport GlobalHelp from \"../../PrimeReactTableComponent/GlobalHelp\";\nimport ExpensesTypePopUp from \"./ExpensesTypePopUp\";\nimport { BsFillCircleFill } from \"react-icons/bs\";\nimport { ReactSearchAutocomplete } from \"react-search-autocomplete\";\nimport { SlExclamation, SlPaperClip } from \"react-icons/sl\";\nimport { BiCheck } from \"react-icons/bi\";\nimport { IoWarningOutline } from \"react-icons/io5\";\nimport { CModal, CModalBody, CModalHeader, CModalTitle } from \"@coreui/react\";\nimport Loader from \"../../Loader/Loader\";\nimport { useParams, useNavigate, Link } from \"react-router-dom\";\nimport { RiMenuAddLine } from \"react-icons/ri\";\nimport { useDispatch } from \"react-redux\";\nimport { updateExpenseButtonState } from \"../../../reducers/SelectedSEReducer\";\n//import \"./ExpensesTypePopUp.scss\";\n\nfunction ExpensesCreate(props) {\n  const [startDate, setStartDate] = useState(\n    moment().startOf(\"week\").add(1, \"days\")._d\n  );\n\n  const [currencyOptionsData, setCurrencyOptionsData] = useState([]);\n\n  const [projectRenderData, setProjectRenderData] = useState(null);\n\n  const [dates, setDates] = useState([]);\n\n  const [projectData, setProjectData] = useState([]);\n\n  const [expenseTypePopupState, setExpenseTypePopupState] = useState(false);\n\n  const [expenseTypeOptions, setExpenseTypeOptions] = useState({});\n\n  const [expenseTypeRenderData, setExpenseTypeRenderData] = useState(null);\n\n  const [expenseTypesValues, setExpenseTypesValues] = useState([]);\n\n  const [expenseFor, setExpenseFor] = useState(\"3\");\n\n  const [expenseTypeId, setExpenseTypeId] = useState(\"\");\n  const [country, setCountry] = useState([]);\n\n  const [selectedExpenseTypes, setSelectedExpenseTypes] = useState([]);\n\n  const [cities, setCities] = useState([]);\n\n  const [carTypes, setCarTypes] = useState([]);\n  const [rates, setRates] = useState({});\n\n  const [paidBy, setPaidBy] = useState([]);\n\n  const [airportList, setAirportList] = useState([]);\n  const [loader, setLoader] = useState(false);\n\n  const [projectId, setProjectId] = useState();\n\n  const [mobileType, setMobileType] = useState([]);\n  const [currencyCode, setCurrencyCode] = useState(\"&#8377\");\n  const [amountStatusDisplay, setAmountStatusDisplay] = useState(null);\n  const [expInfo, setExpInfo] = useState([]);\n  const [expDate, setExpDate] = useState(null);\n  const [isProjectSelected, setIsProjectSelected] = useState(true);\n  const [message, setMessage] = useState(false);\n\n  const loggedUserId = localStorage.getItem(\"resId\");\n  const handleAbort = props.handleAbort;\n  const setbtnState = props.setbtnState;\n\n  const navigate = useNavigate();\n\n  const { id } = useParams();\n\n  const [stackIdData, setStackIdData] = useState([]);\n  const [tableLoader, setTableLoader] = useState();\n\n  useEffect(() => {\n    setLoader(false);\n    setTableLoader(false);\n    if (id !== undefined) {\n      axios\n        .get(\n          baseUrl +\n            `/timeandexpensesms/projectExpense/create?stackId=${id}&userId=${loggedUserId}`\n        )\n        .then((res) => {\n          setStartDate(\n            moment(res.data[0].expense_date).startOf(\"week\").add(1, \"days\")._d\n          );\n          setStackIdData(res.data);\n        })\n        .catch((error) => console.log(error));\n      setDisplayTableBody(true);\n      setIconState(\"down\");\n      setLoader(false);\n      setTableLoader(true);\n    }\n  }, []);\n\n  const [documents, setDocuments] = useState([]);\n\n  useEffect(() => {\n    if (id !== undefined && stackIdData[0]?.id !== undefined) {\n      axios\n        .get(\n          baseUrl +\n            `/timeandexpensesms/projectExpense/expenseDocuments?expenseId=${stackIdData[0]?.id}`\n        )\n        .then((res) => {\n          setDocuments(res.data);\n          setProjectId(() => stackIdData[0]?.object_id);\n        })\n        .catch((error) => console.log(error));\n    }\n  }, [stackIdData]);\n\n  const [paymentUsers, setPaymentUsers] = useState([]);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await axios.get(\n          baseUrl + `/ProjectMS/projectExpenses/paymentUsers`\n        );\n        const paymentUsers = response.data;\n        setPaymentUsers(paymentUsers);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    fetchData();\n  }, []);\n\n  useEffect(() => {\n    const expTypList = stackIdData?.map((it) => {\n      return { id: it.expense_type_id, lkup_name: it.lkup_name };\n    });\n    setSelectedExpenseTypes(expTypList);\n    const expInfoList = stackIdData?.map((prev) => {\n      return {\n        ...prev,\n        //stackId:id,\n        date: prev.expense_date,\n        prjId: prev.object_id,\n        expTypId: prev.expense_type_id,\n        expAmt: prev.amount,\n        paidBy: prev.paid_by,\n        currency: prev.currency_type_id,\n        description: prev.description,\n        location: prev.location_id,\n        id: prev.id,\n        isActive: prev.is_active,\n        note: prev.note,\n        noOfMiles: prev.no_of_miles,\n        rate: prev.rate,\n        rental: prev.rental,\n        charge: prev.charge,\n        fuelAmount: prev.fuel_amount,\n        carType: prev.car_type_id,\n        tollCharge: prev.toll_charge,\n        parking: prev.parking_fee,\n        peopleAttnd: prev.people_attended,\n        guestAttnd: prev.guests_attended,\n        empAttnd: prev.emp_attended,\n        noOfNights: prev.no_of_nights,\n        subLocation: prev.city_id,\n        restOfWorld: prev.rest_of_world,\n        origin: prev.origin_city_id,\n        destination: prev.destination_city_id,\n        ticketFare: prev.ticket_fare,\n        addCharges: prev.additional_charge,\n        travelType: prev.type_travel_id,\n        tripType: prev.type_trip_id,\n        mobileType: prev.type_id,\n        statusId: prev.status_id,\n      };\n    });\n    setExpInfo(expInfoList);\n    setFiles(documents);\n    setExpCurrencySymbol(() => {\n      let container = document.createElement(\"div\");\n      container.innerHTML = currencyOptionsData?.find(\n        (item) => item.id == stackIdData[0]?.currency_type_id\n      )?.currencyCode;\n      return container.innerHTML;\n    });\n  }, [stackIdData]);\n\n  const initilaValue = {\n    fromDate: \"\",\n    toDate: \"\",\n  };\n\n  const expenseForOptions = [\n    { id: 3, value: \"Project\" },\n    { id: 7, value: \"Business Unit\" },\n  ];\n\n  const [formData, setFormData] = useState(initilaValue);\n  const HelpPDFName = \"CreateExpenseType.pdf\";\n  const HelpHeader = \"Create Expense Report : Draft Help\";\n  const baseUrl = environment.baseUrl;\n\n  const [weekData, setWeekData] = useState({});\n\n  useEffect(() => {\n    currencyOptions();\n    getProjects();\n  }, [expenseFor]);\n\n  useEffect(async () => {\n    const endDt = moment(startDate)\n      .startOf(\"week\")\n      .add(7, \"days\")\n      .format(\"DD-MMM-yyyy\");\n    const loaderTime = setTimeout(() => {\n      setLoader(true);\n    }, 2000);\n    setTableLoader(false);\n    await axios\n      .get(\n        baseUrl +\n          `/timeandexpensesms/projectExpense/getWeekDays?lastDay=${endDt}`\n      )\n      .then((res) => {\n        let strtDt = res.data?.days[0];\n        let endDt = res.data?.days[res.data.days.length - 1];\n\n        setFormData((prev) => ({ ...prev, [\"fromDate\"]: strtDt }));\n\n        setFormData((prev) => ({\n          ...prev,\n          [\"toDate\"]: moment(endDt).endOf(\"day\"),\n        }));\n        setWeekData(res.data);\n        setRates(res.data.rates);\n        setLoader(false);\n        clearTimeout(loaderTime);\n        setTableLoader(true);\n      })\n      .catch((error) => console.log(error));\n  }, [startDate]);\n\n  const currencyOptions = () => {\n    axios\n      .get(baseUrl + \"/ProjectMS/Engagement/getCurrency\")\n      .then((resp) => {\n        setCurrencyOptionsData(resp.data);\n      })\n      .catch((error) => console.log(error));\n  };\n\n  useEffect(() => {\n    getCountries();\n    getCities();\n    getCarTypes();\n    getPaidBy();\n    getAirportList();\n    getMobileType();\n  }, []);\n\n  const [currencySymbol, setCurrencySymbol] = useState(\"&#8377\");\n  const [expCurrencySymbol, setExpCurrencySymbol] = useState(\"&#8377\");\n\n  useEffect(() => {\n    if (id !== undefined) {\n      setCurrencyCode(\n        currencyOptionsData?.find(\n          (it) => it.id === stackIdData[0]?.currency_type_id\n        )?.currencyCode\n      );\n    }\n    setCurrencySymbol(() => {\n      let container = document.createElement(\"div\");\n      container.innerHTML = currencyCode;\n      return container.innerHTML;\n    });\n  }, [currencyCode, stackIdData, currencyOptionsData]);\n\n  const getCountries = () => {\n    axios\n      .get(baseUrl + `/CostMS/cost/getCountries`)\n      .then((res) => {\n        setCountry(res.data);\n      })\n      .catch((error) => console.log(error));\n  };\n\n  const getCities = () => {\n    axios\n      .post(baseUrl + `/timeandexpensesms/projectExpense/getCities?objectId=3`)\n      .then((res) => {\n        const data = res.data;\n        const transformedData = data.map((cityObj) => ({\n          name: cityObj.city,\n          value: cityObj.id.toString(),\n        }));\n        setCities(transformedData);\n      })\n      .catch((error) => console.log(error));\n  };\n\n  const getCarTypes = () => {\n    axios\n      .post(baseUrl + `/timeandexpensesms/projectExpense/carType`)\n      .then((res) => {\n        setCarTypes(res.data);\n      })\n      .catch((error) => console.log(error));\n  };\n\n  const getPaidBy = () => {\n    axios\n      .post(baseUrl + `/timeandexpensesms/projectExpense/paidBy`)\n      .then((res) => {\n        setPaidBy(res.data);\n      })\n      .catch((error) => console.log(error));\n  };\n\n  const getAirportList = () => {\n    axios\n      .post(baseUrl + `/timeandexpensesms/projectExpense/airportList`)\n      .then((res) => {\n        const data = res.data;\n        const transformedData = data.map((cityObj) => ({\n          name: cityObj.name,\n          value: cityObj.id.toString(),\n        }));\n        setAirportList(transformedData);\n      })\n      .catch((error) => console.log(error));\n  };\n\n  const getMobileType = () => {\n    axios\n      .post(baseUrl + `/timeandexpensesms/projectExpense/mobileType`)\n      .then((res) => {\n        setMobileType(res.data);\n      })\n      .catch((error) => console.log(error));\n  };\n\n  const getProjects = () => {\n    const loggedUserId = localStorage.getItem(\"resId\");\n    let type = \"businessUnit\";\n    if (expenseFor == 3) {\n      type = \"projects\";\n    }\n    axios\n      .get(\n        baseUrl +\n          `/timeandexpensesms/projectExpense/getProjects?userId=${loggedUserId}&type=${type}`\n      )\n      .then((resp) => {\n        let projDt = resp.data;\n        setProjectData(projDt);\n      });\n  };\n\n  useEffect(() => {\n    if (formData[\"project\"] != undefined) {\n      getProjectData();\n    }\n  }, [formData]);\n\n  const getProjectData = () => {\n    axios\n      .post(\n        baseUrl +\n          `/timeandexpensesms/projectExpense/getExpenseTypesPopUp/?prjId=${formData[\"project\"]}&expLvlType=${expenseFor}`\n      )\n      .then((res) => {\n        setExpenseTypeOptions(res.data);\n      })\n      .catch((error) => console.log(error));\n  };\n\n  const colorOfApproval = (rowData) => {\n    if (rowData.includes(\"Submitted\")) {\n      return \"#ccc\";\n    } else if (\n      rowData.includes(\"PM Approved\") ||\n      rowData.includes(\"Pending\") ||\n      rowData.includes(\"IT Approved\") ||\n      rowData.includes(\"HR Approved\")\n    ) {\n      return \"#CDE6FE\";\n    } else if (rowData.includes(\"PM Rejected\")) {\n      return \"#e54c53\";\n    } else if (rowData.includes(\"Paid\")) {\n      return \"#D9FBB3\";\n    } else if (rowData.includes(\"Approved To Pay\")) {\n      return \"#0080ff\";\n    } else if (\n      rowData.includes(\"FM Rejected\") ||\n      rowData.includes(\"IT Rejected\") ||\n      rowData.includes(\"HR Rejected\")\n    ) {\n      return \"#e54c53\";\n    } else {\n      return \"\";\n    }\n  };\n\n  const [expensesTypePopup, setExpensesTypePopup] = useState(false);\n\n  const [displayTableBody, setDisplayTableBody] = useState(false);\n\n  const [iconState, setIconState] = useState(\"right\");\n\n  const toggleIcon = () => {\n    setIconState(iconState === \"right\" ? \"down\" : \"right\");\n  };\n\n  const [selectAll, setSelectAll] = useState(false);\n\n  const [isValuesChecked, setIsValuesChecked] = useState({});\n\n  useEffect(() => {\n    const initialIsValuesChecked = {};\n\n    expenseTypeOptions.expenses?.map((obj) => {\n      initialIsValuesChecked[obj.id] = false;\n    });\n\n    setIsValuesChecked(initialIsValuesChecked);\n  }, [expenseTypeOptions]);\n\n  useEffect(() => {\n    if (displayTableBody == true) {\n      sampleFunc();\n    }\n  }, [\n    displayTableBody,\n    expInfo,\n    dates,\n    iconState,\n    currencyCode,\n    rates,\n    stackIdData,\n    currencySymbol,\n  ]);\n\n  const [valueOfUSD, setValueOfUSD] = useState(1);\n  const [rateOfDay, setRateOfDay] = useState();\n  const columnSum = (d) => {\n    setRateOfDay(d);\n    return expInfo\n      .filter((item) => item.date == moment(d).format(\"YYYY-MM-DD\"))\n      .map((i) => parseFloat(i.expAmt))\n      .reduce((acc, cur) => acc + cur, 0) > 0\n      ? `${currencySymbol} ${(\n          expInfo\n            .filter((item) => item.date == moment(d).format(\"YYYY-MM-DD\"))\n            .map((i) => parseFloat(i.expAmt))\n            .reduce((acc, cur) => acc + cur, 0) * valueOfUSD\n        ).toLocaleString(\"en-US\", {\n          minimumFractionDigits: 2,\n          maximumFractionDigits: 2,\n        })}`\n      : \"\";\n  };\n\n  const rowSum = (ele) => {\n    return expInfo\n      .filter((item) => item.expTypId == ele.id)\n      .map((i) => parseFloat(i.expAmt))\n      .reduce((acc, cur) => acc + cur, 0) > 0\n      ? `${currencySymbol}  ${parseFloat(\n          expInfo\n            .filter((item) => item.expTypId == ele.id)\n            .map((i) => parseFloat(i.expAmt))\n            .reduce((acc, cur) => acc + cur, 0) * valueOfUSD\n        ).toLocaleString(\"en-US\", {\n          minimumFractionDigits: 2,\n          maximumFractionDigits: 2,\n        })}`\n      : \"\";\n  };\n\n  const totalSum = () => {\n    return (\n      expInfo\n        .map((item) => parseFloat(item.expAmt))\n        .reduce((acc, cur) => acc + cur, 0) *\n        valueOfUSD >\n        0 &&\n      `${currencySymbol} ${(\n        expInfo\n          .map((item) => parseFloat(item.expAmt))\n          .reduce((acc, cur) => acc + cur, 0) * valueOfUSD\n      ).toLocaleString(\"en-US\", {\n        minimumFractionDigits: 2,\n        maximumFractionDigits: 2,\n      })}`\n    );\n  };\n\n  const [isExpenseBillable, setIsExpenseBillable] = useState(null);\n\n  const sampleFunc = () => {\n    setProjectRenderData(() => {\n      return (\n        <>\n          <tr>\n            <td>\n              <div>\n                <div className=\"expandArrow\">\n                  <input\n                    type=\"checkbox\"\n                    defaultChecked={isProjectSelected}\n                    disabled={\n                      id !== undefined && stackIdData[0]?.status_id !== 634\n                    }\n                    onChange={(event) => {\n                      setIsProjectSelected(event.currentTarget.checked);\n                    }}\n                  />\n                  <span onClick={toggleIcon}>\n                    {iconState === \"right\" ? (\n                      <AiFillCaretRight />\n                    ) : (\n                      <AiFillCaretDown />\n                    )}\n                  </span>\n                </div>\n                <div className=\"expType\">\n                  {id == undefined ? (\n                    <span\n                      title={\n                        projectData?.find((item) => item.id == formData.project)\n                          ?.name\n                      }\n                    >\n                      {\n                        projectData?.find((item) => item.id == formData.project)\n                          ?.name\n                      }\n                    </span>\n                  ) : (\n                    <span\n                      title={\n                        projectData?.find(\n                          (item) => stackIdData[0]?.object_id == item.id\n                        )?.name !== undefined\n                          ? projectData?.find(\n                              (item) => stackIdData[0]?.object_id == item.id\n                            )?.name\n                          : \"Finance\"\n                      }\n                    >\n                      {projectData?.find(\n                        (item) => stackIdData[0]?.object_id == item.id\n                      )?.name !== undefined\n                        ? projectData?.find(\n                            (item) => stackIdData[0]?.object_id == item.id\n                          )?.name\n                        : \"Finance\"}\n                    </span>\n                  )}\n                  {id == undefined || stackIdData[0]?.status_id == 634 ? (\n                    <button\n                      className=\"btn\"\n                      onClick={() => {\n                        setExpenseTypePopupState(() => true);\n                      }}\n                    >\n                      <BiPlus />\n                      Add Expense\n                    </button>\n                  ) : (\n                    \"\"\n                  )}\n                </div>\n              </div>\n            </td>\n\n            {dates.map((d) => (\n              <td>\n                <div style={{ textAlign: \"center\" }}>\n                  {expInfo.length > 0 && <strong>{columnSum(d)}</strong>}\n                </div>\n              </td>\n            ))}\n            <td style={{ textAlign: \"right\" }}>\n              <strong>{totalSum()}</strong>\n            </td>\n          </tr>\n        </>\n      );\n    });\n  };\n\n  const [projectSelectMsg, setProjectSelectMsg] = useState(false);\n  const [addButtonDisable, setAddButtonDisable] = useState(false);\n\n  const addHandler = () => {\n    if (formData.project == undefined) {\n      setProjectSelectMsg(true);\n      setTimeout(() => {\n        setProjectSelectMsg(false);\n      }, 3000);\n      return;\n    }\n    setDisplayTableBody(true);\n    sampleFunc();\n    if (formData.project !== undefined) {\n      setAddButtonDisable(true);\n    }\n  };\n\n  const addSameExpenseType = (expTypeId) => {\n    const expenseTypeIndex = selectedExpenseTypes.findIndex(\n      (item) => item.id === expTypeId\n    );\n\n    if (expenseTypeIndex === -1) {\n      console.error(\"Expense type not found.\");\n      return;\n    }\n\n    const existingExpenses = selectedExpenseTypes.filter(\n      (item) =>\n        item.id.toString().startsWith(expTypeId) && item.id !== expTypeId\n    );\n\n    const nextExpenseNumber = existingExpenses.length + 1;\n    const newExpense = {\n      id: `${expTypeId}_${nextExpenseNumber}`,\n      lkup_name: `${selectedExpenseTypes[expenseTypeIndex].lkup_name} Expense ${nextExpenseNumber}`,\n    };\n\n    selectedExpenseTypes.splice(\n      expenseTypeIndex + nextExpenseNumber,\n      0,\n      newExpense\n    );\n\n    setSelectedExpenseTypes([...selectedExpenseTypes]);\n  };\n\n  const [expName, setExpName] = useState(\"\");\n\n  const [fileMap, setFileMap] = useState({});\n\n  const inputFieldColor = (d) => {\n    return moment(d).format(\"YYYY-MM-DD\") == stackIdData[0]?.expense_date\n      ? colorOfApproval(stackIdData[0]?.approvalStatus)\n      : \"\";\n  };\n\n  const [selectedElement, setSelectedElement] = useState({});\n\n  useEffect(() => {\n    setExpenseTypeRenderData(() => {\n      return (\n        <>\n          {selectedExpenseTypes.length > 0 ? (\n            selectedExpenseTypes?.map((ele) => {\n              const hasNumber = /\\d+$/.test(ele.lkup_name);\n              return (\n                <tr>\n                  <td>\n                    <div className=\"innerRows justify-content-between\">\n                      <span>{ele.lkup_name}</span>\n                      {!hasNumber &&\n                        (id === undefined ||\n                          stackIdData[0]?.status_id === 634) && (\n                          <BiPlus\n                            style={{ cursor: \"pointer\" }}\n                            title=\"Add another expense\"\n                            onClick={() => {\n                              addSameExpenseType(ele.id);\n                            }}\n                          />\n                        )}\n\n                      {id == undefined || stackIdData[0]?.status_id == 634 ? (\n                        <BiTrash\n                          style={{ cursor: \"pointer\" }}\n                          title=\"Delete Expense\"\n                          onClick={() => {\n                            setSelectedElement(ele);\n                            setExpenseDelPopup(true);\n                          }}\n                        />\n                      ) : (\n                        \"\"\n                      )}\n                    </div>\n                  </td>\n\n                  {dates.map((d) => (\n                    <td key={d}>\n                      <div className=\"inputFields\">\n                        <span>\n                          {expInfo.length > 0 && id == undefined\n                            ? expCurrencySymbol\n                            : currencySymbol}\n                        </span>\n                        <input\n                          type=\"text\"\n                          id={ele.id}\n                          readOnly\n                          style={{\n                            textAlign: \"right\",\n                            backgroundColor: `${inputFieldColor(d)}`,\n                          }}\n                          defaultValue={\n                            expInfo.find(\n                              (item) =>\n                                item.expTypId == ele.id &&\n                                item.date == moment(d).format(\"YYYY-MM-DD\")\n                            )?.expAmt > 0\n                              ? expInfo\n                                  .find(\n                                    (item) =>\n                                      item.expTypId == ele.id &&\n                                      item.date ==\n                                        moment(d).format(\"YYYY-MM-DD\")\n                                  )\n                                  ?.expAmt.toLocaleString(\"en-US\", {\n                                    minimumFractionDigits: 2,\n                                    maximumFractionDigits: 2,\n                                  })\n                              : \"\"\n                          }\n                          onClick={(event) => {\n                            let extpd = \"\" + ele.id;\n                            setExpensesTypePopup(true);\n                            setExpenseTypeId(extpd);\n                            setExpDate(d);\n                            if (id == undefined) {\n                              setProjectId(formData.project);\n                            }\n                            setIsExpenseBillable(\n                              () =>\n                                projectData.find(\n                                  (item) => item.id == formData.project\n                                )?.expenseBillable\n                            );\n                            setExpName(ele.lkup_name);\n                          }}\n                          onChange={(e) => {\n                            setExpInfo((prevExpInfo) => {\n                              const updatedExpInfo = [...prevExpInfo];\n                              const dateToFind = moment(d).format(\"YYYY-MM-DD\");\n                              const expTypeIdToFind = ele.id;\n                              const objIndex = updatedExpInfo.findIndex(\n                                (it) =>\n                                  it.date == dateToFind &&\n                                  it.expTypId == expTypeIdToFind\n                              );\n                              updatedExpInfo[objIndex].expAmt = e.target.value;\n                              return updatedExpInfo;\n                            });\n                          }}\n                          onKeyDown={(e) => {\n                            const key = e.key;\n                            const isNumber = /^[0-9]$/.test(key);\n                            const isDecimal = key === \".\";\n                            const isAllowedKey = [\n                              \"Backspace\",\n                              \"Delete\",\n                              \"ArrowLeft\",\n                              \"ArrowRight\",\n                            ].includes(key);\n\n                            if (!isNumber && !isDecimal && !isAllowedKey) {\n                              e.preventDefault();\n                            }\n                          }}\n                          disabled={\n                            moment(d).isBefore(\n                              moment(noteDate(), \"DD-MMMM-YYYY\")\n                            ) ||\n                            (id !== undefined &&\n                              expInfo[0].date !==\n                                moment(d).format(\"YYYY-MM-DD\"))\n                          }\n                        />\n                        {moment(d).format(\"YYYY-MM-DD\") ==\n                          stackIdData[0]?.expense_date &&\n                          id !== undefined &&\n                          documents.length > 0 && (\n                            <SlPaperClip\n                              style={{ cursor: \"pointer\" }}\n                              onClick={() => setDocumentPopup(true)}\n                            />\n                          )}\n                      </div>\n                    </td>\n                  ))}\n                  <td style={{ textAlign: \"right\" }}>\n                    <strong className=\"text-center m-0\">\n                      {expInfo.length > 0 && <span>{rowSum(ele)}</span>}\n                    </strong>\n                  </td>\n                </tr>\n              );\n            })\n          ) : (\n            <tr>\n              <td\n                colSpan={dates.length + 2}\n                className=\"text-center\"\n                style={{ backgroundColor: \"#EEEEEE\" }}\n              >\n                No Expenses\n              </td>\n            </tr>\n          )}\n        </>\n      );\n    });\n  }, [\n    selectedExpenseTypes,\n    currencyCode,\n    expInfo,\n    dates,\n    currencySymbol,\n    expCurrencySymbol,\n    stackIdData,\n  ]);\n\n  const onChangeHandler = (e) => {\n    setFormData((prev) => {\n      return {\n        ...prev,\n        project: e.target.value,\n      };\n    });\n  };\n\n  const [stackAdvance, setStackAdvance] = useState(0.0);\n\n  const [stackDesc, setStackDesc] = useState(\"\");\n\n  const [netAmount, setNetAmount] = useState(0.0);\n\n  useEffect(() => {\n    const nt =\n      valueOfUSD *\n        expInfo\n          .map((item) => parseFloat(item.expAmt))\n          .reduce((acc, cur) => acc + cur, 0) -\n      parseFloat(stackAdvance);\n    setNetAmount(parseFloat(nt));\n  }, [stackAdvance, expInfo]);\n\n  useEffect(() => {\n    setAmountStatusDisplay(() => {\n      return (\n        <>\n          <table className=\"amtTbl Net_table\">\n            <tbody>\n              <tr style={{ backgroundColor: \"#e6ecff\", border: \"0px\" }}>\n                <td>\n                  <strong>Total</strong>\n                </td>\n                <td>: {currencySymbol}</td>\n                <td>\n                  <strong style={{ float: \"right\" }}>\n                    {!isNaN(\n                      expInfo\n                        .map((item) => parseFloat(item.expAmt))\n                        .reduce((acc, cur) => acc + cur, 0) * valueOfUSD\n                    )\n                      ? (\n                          expInfo\n                            .map((item) => parseFloat(item.expAmt))\n                            .reduce((acc, cur) => acc + cur, 0) * valueOfUSD\n                        ).toLocaleString(\"en-US\", {\n                          minimumFractionDigits: 2,\n                          maximumFractionDigits: 2,\n                        })\n                      : \"0.00\"}\n                  </strong>\n                </td>\n              </tr>\n              <tr style={{ backgroundColor: \"#ffffe6\" }}>\n                <td>\n                  <strong>Advance</strong>\n                </td>\n                <td>: {currencySymbol}</td>\n                <td style={{ paddingRight: \"0.25%\" }}>\n                  <input\n                    type=\"text\"\n                    style={{ textAlign: \"right\" }}\n                    defaultValue=\"0.00\"\n                    onChange={(e) => setStackAdvance(e.target.value)}\n                    onKeyDown={(e) => {\n                      const key = e.key;\n                      const isNumber = /^[0-9]$/.test(key);\n                      const isDecimal = key === \".\";\n                      const isAllowedKey = [\n                        \"Backspace\",\n                        \"Delete\",\n                        \"ArrowLeft\",\n                        \"ArrowRight\",\n                      ].includes(key);\n\n                      if (!isNumber && !isDecimal && !isAllowedKey) {\n                        e.preventDefault();\n                      }\n                    }}\n                  />\n                </td>\n              </tr>\n              <tr style={{ backgroundColor: \"#ffe6f3\" }}>\n                <td>\n                  <strong>Net</strong>\n                </td>\n                <td>: {currencySymbol}</td>\n                <td>\n                  <strong style={{ float: \"right\" }}>\n                    {!isNaN(valueOfUSD) &&\n                    !isNaN(parseFloat(stackAdvance || 0)) &&\n                    !isNaN(\n                      expInfo\n                        .map((item) => parseFloat(item.expAmt))\n                        .reduce((acc, cur) => acc + cur, 0)\n                    )\n                      ? (\n                          valueOfUSD *\n                            expInfo\n                              .map((item) => parseFloat(item.expAmt))\n                              .reduce((acc, cur) => acc + cur, 0) -\n                          parseFloat(stackAdvance || 0)\n                        ).toLocaleString(\"en-US\", {\n                          minimumFractionDigits: 2,\n                          maximumFractionDigits: 2,\n                        })\n                      : \"0.00\"}\n                  </strong>\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </>\n      );\n    });\n  }, [currencyCode, expInfo, stackAdvance, currencySymbol]);\n\n  const [expenseData, setExpenseData] = useState({});\n\n  useEffect(() => {\n    if (expensesTypePopup === false) {\n      if (Object.keys(expenseData).length === 0) {\n        return;\n      }\n      const existingItemIndex = expInfo.findIndex(\n        (item) =>\n          item.expTypId === expenseData.expTypId &&\n          item.date === expenseData.date\n      );\n\n      if (existingItemIndex !== -1) {\n        setExpInfo((prev) => {\n          const updatedExpInfo = [...prev];\n          updatedExpInfo[existingItemIndex] = { ...expenseData };\n          return updatedExpInfo;\n        });\n      } else {\n        setExpInfo((prev) => [...prev, { ...expenseData }]);\n      }\n    }\n  }, [expensesTypePopup, expenseData]);\n\n  const [files, setFiles] = useState([]);\n\n  const [isExpProvided, setIsExpProvided] = useState(false);\n\n  const [savedExpense, setSavedExpense] = useState({});\n\n  const [isSaved, setIsSaved] = useState(false);\n  const [isSubmitted, setIsSubmitted] = useState(false);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (isSaved) {\n      navigate(`/expense/Create/${savedExpense.expenseStackId}`);\n      window.location.reload();\n    }\n    if (isSubmitted) {\n      if (paymentUsers.includes(parseInt(loggedUserId))) {\n        dispatch(updateExpenseButtonState(\"Search\"));\n        navigate(`/search/userExpenseHistory`);\n        setbtnState(\"Search\");\n      } else {\n        setTimeout(() => {\n          navigate(`/stackView`);\n        }, 2000);\n      }\n    }\n  }, [isSaved, isSubmitted]);\n\n  const [stackSaveFail, setStackSaveFail] = useState(false);\n\n  const [saveLoader, setSaveLoader] = useState(false);\n\n  const [filesMissing, setFileMissing] = useState(false);\n\n  const saveProjectExpenses = (isSubmitState) => {\n    const finalExpInfo = expInfo.filter((it) => it.expAmt > 0);\n    var finalData = {};\n    if (finalExpInfo.length > 0) {\n      finalData = {\n        isSubmit: isSubmitState,\n        stackId: id !== undefined ? id : \"\",\n        expLvlType: expenseFor,\n        stackDesc: stackDesc,\n        stackAdvance: stackAdvance,\n        netAmount: netAmount,\n        stackCurrency: currencyOptionsData.find(\n          (item) => item.currencyCode == currencyCode\n        ).id,\n        tripId: tripId,\n        redirectToCreate: false,\n        expInfo: finalExpInfo,\n        fileMap: fileMap,\n      };\n\n      if (isSubmitState == 1 && id == undefined) {\n        finalData.stackId = savedExpense.expenseStackId;\n      }\n\n      const formData = new FormData();\n\n      for (let i = 0; i < files.length; i++) {\n        formData.append(\"files\", files[i], files[i].name);\n      }\n\n      formData.append(\"parseParams\", JSON.stringify(finalData));\n\n      if (isSubmitState === 1) {\n        if (files.length > 0 || documents.length > 0) {\n          // Proceed with the API call\n          setSaveLoader(false);\n          axios\n            .post(\n              baseUrl +\n                `/timeandexpensesms/projectExpense/save?userId=${loggedUserId}`,\n              formData,\n              {\n                headers: {\n                  \"Content-Type\": \"multipart/form-data\",\n                },\n              }\n            )\n            .then((res) => {\n              console.log(res);\n              setSavedExpense(res.data);\n              setMessage(true);\n              setTimeout(() => {\n                setMessage(false);\n              }, 3000);\n              setTimeout(() => {\n                setIsSubmitted(true);\n              }, 3000);\n              setSaveLoader(false);\n            })\n            .catch((error) => {\n              setSaveLoader(false);\n              setStackSaveFail(true);\n              setTimeout(() => {\n                setStackSaveFail(false);\n              }, 3000);\n            });\n        } else {\n          setFileMissing(true);\n          setTimeout(() => {\n            setFileMissing(false);\n          }, 3000);\n        }\n      } else if (isSubmitState === 0) {\n        // Proceed with the API call\n        setSaveLoader(false);\n        axios\n          .post(\n            baseUrl +\n              `/timeandexpensesms/projectExpense/save?userId=${loggedUserId}`,\n            formData,\n            {\n              headers: {\n                \"Content-Type\": \"multipart/form-data\",\n              },\n            }\n          )\n          .then((res) => {\n            console.log(res);\n            setSavedExpense(res.data);\n            setMessage(true);\n            setTimeout(() => {\n              setMessage(false);\n            }, 3000);\n            setIsSaved(true);\n            setSaveLoader(false);\n          })\n          .catch((error) => {\n            setSaveLoader(false);\n            setStackSaveFail(true);\n            setTimeout(() => {\n              setStackSaveFail(false);\n            }, 3000);\n          });\n      }\n    } else {\n      setIsExpProvided(true);\n      setTimeout(() => {\n        setIsExpProvided(false);\n      }, 3000);\n    }\n  };\n\n  const [tripId, setTripId] = useState(null);\n  const [tripData, setTripData] = useState([]);\n\n  const handleTripInput = (inputValue) => {\n    const resId = parseInt(loggedUserId) + 1;\n    axios\n      .get(\n        baseUrl +\n          `/timeandexpensesms/projectExpense/tripId?searchStr=${inputValue}&resId=${resId}`\n      )\n      .then((res) => {\n        const data = res.data;\n        const transformedData = data.map((trip) => ({\n          name: trip.label,\n          id: trip.id,\n        }));\n        setTripData(transformedData);\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  const handleSearch = (value) => {\n    const trimmedValue = value.trim();\n    handleTripInput(trimmedValue);\n  };\n\n  const handleSelect = (item) => {\n    setTripId(item.id);\n  };\n\n  const noteDate = () => {\n    const today = moment();\n    const sixMonthsAgo = today.subtract(6, \"months\").add(4, \"days\");\n    return sixMonthsAgo.format(\"DD-MMM-YYYY\");\n  };\n\n  const [deleteMsg, setDeleteMsg] = useState(false);\n  const [deleteMsgSuccess, setDeleteMsgSuccess] = useState(false);\n  const [deletePopup, setDeletePopup] = useState(false);\n  const [expenseDelPopup, setExpenseDelPopup] = useState(false);\n\n  const ExpenseDeleteConfirmPopup = () => {\n    return (\n      <>\n        <CModal\n          visible={expenseDelPopup}\n          style={{ width: \"400px\" }}\n          onClose={() => setExpenseDelPopup(false)}\n          backdrop={\"static\"}\n          alignment=\"center\"\n        >\n          <CModalHeader className=\"\">\n            <CModalTitle>\n              <span className=\"\">Delete Confirmation</span>\n            </CModalTitle>\n          </CModalHeader>\n          <CModalBody>\n            <span>Are you sure you want to permanently remove this item?</span>\n            <hr />\n            <div\n              style={{\n                display: \"flex\",\n                alignItems: \"center\",\n                justifyContent: \"center\",\n              }}\n            >\n              <button\n                className=\"btn btn-primary\"\n                onClick={() => {\n                  setSelectedExpenseTypes((prev) =>\n                    prev.filter(\n                      (item) => item.lkup_name !== selectedElement.lkup_name\n                    )\n                  );\n                  setExpInfo((prev) =>\n                    prev.filter(\n                      (item) => item.name !== selectedElement.lkup_name\n                    )\n                  );\n                  setIsValuesChecked((prev) => ({\n                    ...prev,\n                    [selectedElement.id]: false,\n                  }));\n                  setExpenseDelPopup(false);\n                  setDeleteMsgSuccess(true);\n                  setTimeout(() => {\n                    setDeleteMsgSuccess(false);\n                  }, 3000);\n                }}\n              >\n                Yes\n              </button>\n              <button\n                className=\"btn btn-secondary mx-2\"\n                onClick={() => setExpenseDelPopup(false)}\n              >\n                No\n              </button>\n            </div>\n          </CModalBody>\n        </CModal>\n      </>\n    );\n  };\n\n  const DeleteConfirmPopup = () => {\n    return (\n      <>\n        <CModal\n          visible={deletePopup}\n          style={{ width: \"400px\" }}\n          onClose={() => setDeletePopup(false)}\n          backdrop={\"static\"}\n          alignment=\"center\"\n        >\n          <CModalHeader className=\"\">\n            <CModalTitle>\n              <span className=\"\">Delete Confirmation</span>\n            </CModalTitle>\n          </CModalHeader>\n          <CModalBody>\n            <span>Are you sure you want to remove selected projects ?</span>\n            <hr />\n            <div\n              style={{\n                display: \"flex\",\n                alignItems: \"center\",\n                justifyContent: \"center\",\n              }}\n            >\n              <button\n                className=\"btn btn-primary\"\n                onClick={() => {\n                  setProjectRenderData(null);\n                  setExpenseTypeRenderData(null);\n                  setDisplayTableBody(false);\n                  setDeleteMsgSuccess(true);\n                  setExpInfo([]);\n                  setSelectedExpenseTypes([]);\n                  setTimeout(() => {\n                    setDeleteMsgSuccess(false);\n                  }, 3000);\n                  setDeletePopup(false);\n                  setIsProjectSelected(false);\n                  setStackAdvance(0);\n                  setIsValuesChecked({});\n                  setExpInfo([]);\n                }}\n              >\n                Yes\n              </button>\n              <button\n                className=\"btn btn-secondary mx-2\"\n                onClick={() => setDeletePopup(false)}\n              >\n                No\n              </button>\n            </div>\n          </CModalBody>\n        </CModal>\n      </>\n    );\n  };\n\n  const [documentPopup, setDocumentPopup] = useState(false);\n\n  const DocumentPopup = () => {\n    return (\n      <>\n        <CModal\n          visible={documentPopup}\n          style={{ width: \"300px\", height: \"200px\" }}\n          onClose={() => setDocumentPopup(false)}\n          backdrop={\"static\"}\n          alignment=\"center\"\n        >\n          <CModalHeader>\n            <CModalTitle>\n              <span>Attached Documents</span>\n            </CModalTitle>\n          </CModalHeader>\n          <CModalBody>\n            {documents.map((it) => (\n              <div\n                className=\"mt-2\"\n                style={{ width: \"250px\", border: \"1px solid silver\" }}\n                key={it.id}\n              >\n                <a\n                  href={`${baseUrl}/CommonMS/document/downloadFile?documentId=${it.document_id}&svnRevision=${it.svn_revision}`}\n                >\n                  {it.file_name}\n                </a>\n              </div>\n            ))}\n          </CModalBody>\n        </CModal>\n      </>\n    );\n  };\n\n  return (\n    <div>\n      {message ? (\n        <div className=\"statusMsg success\">\n          <span>\n            <BiCheck style={{ marginTop: \"-2px\" }} />\n            Expense(s) Saved Successfully\n          </span>\n        </div>\n      ) : (\n        \"\"\n      )}\n      {deleteMsg ? (\n        <div className=\"statusMsg error\">\n          <span>\n            <IoWarningOutline style={{ marginTop: \"-2px\" }} /> Please select\n            project(s) to delete\n          </span>\n        </div>\n      ) : (\n        \"\"\n      )}\n      {filesMissing ? (\n        <div className=\"statusMsg error\">\n          <span>\n            <IoWarningOutline style={{ marginTop: \"-2px\" }} /> Receipts are\n            missing for some expenses. Please add receipts to Submit.\n          </span>\n        </div>\n      ) : (\n        \"\"\n      )}\n      {stackSaveFail ? (\n        <div className=\"statusMsg error\">\n          <span>\n            <IoWarningOutline style={{ marginTop: \"-2px\" }} /> Expense save\n            failed.\n          </span>\n        </div>\n      ) : (\n        \"\"\n      )}\n      {isExpProvided ? (\n        <div className=\"statusMsg error\">\n          <span>\n            <IoWarningOutline style={{ marginTop: \"-2px\" }} /> Please provide at\n            least one expense\n          </span>\n        </div>\n      ) : (\n        \"\"\n      )}\n      {projectSelectMsg ? (\n        <div className=\"statusMsg error\">\n          <span>\n            <IoWarningOutline style={{ marginTop: \"-2px\" }} /> Please select a\n            project\n          </span>\n        </div>\n      ) : (\n        \"\"\n      )}\n      {deleteMsgSuccess ? (\n        <div className=\"statusMsg success\">\n          <span>\n            <BiCheck style={{ marginTop: \"-2px\" }} />\n            Expense deleted Successfully\n          </span>\n        </div>\n      ) : (\n        \"\"\n      )}\n      <div className=\"col-md-12\">\n        <div className=\"pageTitle\">\n          <div className=\"childOne\"></div>\n          {id == undefined ? (\n            <div className=\"childTwo\">\n              <h2>Create Expense Report : Draft</h2>\n            </div>\n          ) : (\n            <div className=\"childTwo\">\n              <h2>\n                {stackIdData[0]?.approvalStatus} Expense Report :{\" \"}\n                {stackIdData[0]?.stackName}\n              </h2>\n            </div>\n          )}\n          <div className=\"childThree\"></div>\n        </div>\n      </div>\n      <div className=\"helpBtn\" style={{ float: \"right\", paddingTop: \"5px\" }}>\n        <GlobalHelp pdfname={HelpPDFName} name={HelpHeader} />\n      </div>\n      <div className=\"group mb-3 customCard\">\n        <div className=\"group-content row\">\n          <div className=\"col-md-12 roleTableLegends\">\n            <span style={{ margin: \"0px 0px\" }}>\n              <BsFillCircleFill size={12} color=\"#cccccc\" />\n              Submitted\n            </span>\n            <span style={{ margin: \"0px 6px\" }}>\n              <BsFillCircleFill size={12} color=\"#e54c53\" />\n              Rejected\n            </span>\n            <span style={{ margin: \"0px 6px\" }}>\n              <BsFillCircleFill size={12} color=\"#CDE6FE\" />\n              Approved\n            </span>\n            <span style={{ margin: \"0px 6px\" }}>\n              <BsFillCircleFill size={12} color=\"#0080ff\" />\n              Approved To Pay\n            </span>\n            <span style={{ margin: \"0px 6px\" }}>\n              <BsFillCircleFill size={12} color=\"#D9FBB3\" />\n              Paid\n            </span>\n            <span style={{ margin: \"0px 6px\" }}>\n              <BsFillCircleFill size={12} color=\"#009933\" />\n              Received\n            </span>\n          </div>\n\n          {id == undefined && (\n            <>\n              <div className=\"col-md-3 mb-2\">\n                <div className=\"form-group row \">\n                  <label className=\"col-5\" htmlFor=\"email-input\">\n                    Date\n                  </label>\n                  <span className=\"col-1 p-0 p-0\">:</span>\n                  <div className=\"col-6\">\n                    <DatePicker\n                      selected={startDate}\n                      onChange={(date) => setStartDate(date)}\n                      placeholderText={\"Billing Start Date\"}\n                      dateFormat=\"dd-MMM-yyyy\"\n                      minDate={new Date(noteDate())}\n                    />\n                  </div>\n                </div>\n              </div>\n              <div className=\"col-md-3 mb-2\">\n                <div className=\"form-group row\">\n                  <label className=\"col-5\" htmlFor=\"country-select\">\n                    Expense For\n                  </label>\n                  <span className=\"col-1 p-0 p-0\">:</span>\n                  <div className=\"col-6\">\n                    <select\n                      id=\"country-select\"\n                      onChange={(e) => {\n                        setExpenseFor(e.target.value);\n                      }}\n                      onBlur={() => {\n                        if (expenseFor == 7) {\n                          setFormData((prev) => {\n                            return {\n                              ...prev,\n                              project: projectData[0]?.id,\n                            };\n                          });\n                        }\n                      }}\n                    >\n                      {expenseForOptions.map((d) => (\n                        <option key={d.id} value={d.id}>\n                          {d.value}\n                        </option>\n                      ))}\n                    </select>\n                  </div>\n                </div>\n              </div>\n              {expenseFor == 3 && (\n                <div className=\"col-md-3 mb-2\">\n                  <div className=\"form-group row\">\n                    <label className=\"col-5\" htmlFor=\"country-select\">\n                      Project<span style={{ color: \"red\" }}>*</span>\n                    </label>\n                    <span className=\"col-1 p-0 p-0\">:</span>\n                    <div className=\"col-6\">\n                      <select\n                        id=\"projects\"\n                        onChange={(e) => {\n                          onChangeHandler(e);\n                        }}\n                        disabled={displayTableBody && expenseFor !== 3}\n                        style={{\n                          backgroundColor: projectSelectMsg ? \"#F2DEDE\" : \"\",\n                        }}\n                      >\n                        <option value=\"\">&lt;&lt;Please Select&gt;&gt;</option>\n                        {projectData?.map((d, index) => (\n                          <option key={d.id} value={d.id}>\n                            {d.name}\n                          </option>\n                        ))}\n                      </select>\n                    </div>\n                  </div>\n                </div>\n              )}\n              {expenseFor == 7 && (\n                <div className=\"col-md-3 mb-2\">\n                  <div className=\"form-group row\">\n                    <label className=\"col-5\" htmlFor=\"country-select\">\n                      Business Unit<span style={{ color: \"red\" }}>*</span>\n                    </label>\n                    <span className=\"col-1 p-0 p-0\">:</span>\n                    <div className=\"col-6\">\n                      <select\n                        id=\"projects\"\n                        disabled={expenseFor == 7}\n                        style={{\n                          backgroundColor: projectSelectMsg ? \"#F2DEDE\" : \"\",\n                        }}\n                      >\n                        {projectData?.map((d, index) => (\n                          <option key={d.id} value={d.id}>\n                            {d.name}\n                          </option>\n                        ))}\n                      </select>\n                    </div>\n                  </div>\n                </div>\n              )}\n              <div className=\"col-md-3 mb-2\">\n                <div className=\"form-group row\">\n                  <label className=\"col-5\" htmlFor=\"country-select\">\n                    Currency\n                  </label>\n                  <span className=\"col-1 p-0 p-0\">:</span>\n                  <div className=\"col-6\">\n                    <select\n                      onChange={(e) => {\n                        setCurrencyCode(\n                          () =>\n                            currencyOptionsData.find(\n                              (i) => i.id == e.target.value\n                            ).currencyCode\n                        );\n                        if (id == undefined) {\n                          setValueOfUSD(() => {\n                            const currId = currencyOptionsData?.find(\n                              (item) => item.currencyCode == currencyCode\n                            ).id;\n                            return rates[rateOfDay][currId]?.valueOfUSD;\n                          });\n                        }\n                      }}\n                    >\n                      {currencyOptionsData.map((d) => (\n                        <option value={d.id} selected={d.id == 448}>\n                          {d.currency}\n                        </option>\n                      ))}\n                    </select>\n                  </div>\n                </div>\n              </div>\n              <div className=\"col-md-3 mb-2 mt-2\">\n                <div className=\"form-group row\">\n                  <label className=\"col-5\" htmlFor=\"name\">\n                    Trip\n                  </label>\n                  <span className=\"col-1 p-0 p-0\">:</span>\n                  <div className=\"col-6 autoComplete-container\">\n                    <ReactSearchAutocomplete\n                      name=\"Trip\"\n                      id=\"tripId\"\n                      placeholder=\"Type/Press Space\"\n                      className=\"AutoComplete \"\n                      type=\"Text\"\n                      items={tripData}\n                      showIcon={false}\n                      onSearch={handleSearch}\n                      onSelect={handleSelect}\n                      labelKey=\"label\"\n                      valueKey=\"id\"\n                    />\n                  </div>\n                </div>\n              </div>\n              <div className=\"col-md-3 mb-2 mt-2\">\n                <div className=\"form-group row\">\n                  <label\n                    className=\"col-5 align-self-start\"\n                    htmlFor=\"message-textarea\"\n                  >\n                    Stack Description\n                  </label>\n                  <span className=\"col-1 p-0 p-0\">:</span>\n                  <div className=\"col-6\">\n                    <textarea\n                      style={{ resize: \"none\" }}\n                      rows={2}\n                      className=\"form-control\"\n                      id=\"message-textarea\"\n                      placeholder=\"Please Enter Description\"\n                      required\n                      onChange={(e) => setStackDesc(e.target.value)}\n                    />\n                  </div>\n                </div>\n              </div>\n            </>\n          )}\n        </div>\n        {id == undefined && (\n          <div className=\"d-flex align-items-center justify-content-center\">\n            <div>\n              <button\n                onClick={() => {\n                  addHandler();\n                }}\n                type=\"button\"\n                className=\"btn btn-primary\"\n                title=\"Search\"\n                disabled={addButtonDisable}\n              >\n                <RiMenuAddLine /> Add{\" \"}\n              </button>\n            </div>\n          </div>\n        )}\n      </div>\n\n      <div>\n        {id == undefined ? (\n          <div\n            style={{\n              border: \" 1px solid #fff\",\n              borderRadius: \"5px\",\n              margin: \" 5px 0\",\n              padding: \"2px\",\n              borderColor: \"#d7ae09\",\n              color: \"#d7ae09\",\n              alignItems: \"center\",\n              gap: \"2px\",\n              fontSize: \"13px\",\n            }}\n          >\n            <span className=\"bold\">\n              <SlExclamation\n                style={{ marginLeft: \"15px\", marginRight: \"15px\" }}\n              />{\" \"}\n              Note : &nbsp;\n            </span>\n            <span>You can add expense from {noteDate()}</span>\n          </div>\n        ) : (\n          <div\n            style={{\n              border: \" 1px solid #fff\",\n              borderRadius: \"5px\",\n              margin: \" 5px 0\",\n              padding: \"2px\",\n              borderColor: \"#d7ae09\",\n              color: \"#d7ae09\",\n              alignItems: \"center\",\n              gap: \"2px\",\n              fontSize: \"13px\",\n            }}\n          >\n            <span className=\"bold\">\n              <SlExclamation\n                style={{ marginLeft: \"15px\", marginRight: \"15px\" }}\n              />{\" \"}\n              Note : &nbsp;\n            </span>\n            <span>Changes can't be made once submitted.</span>\n          </div>\n        )}\n\n        {loader ? (\n          <Loader handleAbort={() => setLoader(false)} />\n        ) : (\n          <div className=\"group-content row\">\n            <div className=\"col-md-12\">\n              {tableLoader && (\n                <ExpensesCreateTable\n                  formData={formData}\n                  setFormData={setFormData}\n                  projectRenderData={projectRenderData}\n                  dates={dates}\n                  setDates={setDates}\n                  expenseTypeRenderData={expenseTypeRenderData}\n                  iconState={iconState}\n                  setIconState={setIconState}\n                  setRates={setRates}\n                  setWeekData={setWeekData}\n                  setLoader={setLoader}\n                  loader={loader}\n                />\n              )}\n\n              {expenseTypePopupState && (\n                <AddExpensePopup\n                  expenseTypePopupState={expenseTypePopupState}\n                  setExpenseTypePopupState={setExpenseTypePopupState}\n                  expenseTypeOptions={expenseTypeOptions}\n                  formData={formData}\n                  setFormData={setFormData}\n                  dates={dates}\n                  setExpenseTypeRenderData={setExpenseTypeRenderData}\n                  expenseTypesValues={expenseTypesValues}\n                  setExpenseTypesValues={setExpenseTypesValues}\n                  setExpensesTypePopup={setExpensesTypePopup}\n                  expensesTypePopup={expensesTypePopup}\n                  setExpenseTypeId={setExpenseTypeId}\n                  setSelectedExpenseTypes={setSelectedExpenseTypes}\n                  selectedExpenseTypes={selectedExpenseTypes}\n                  iconState={iconState}\n                  setIconState={setIconState}\n                  isValuesChecked={isValuesChecked}\n                  setIsValuesChecked={setIsValuesChecked}\n                  selectAll={selectAll}\n                  setSelectAll={setSelectAll}\n                />\n              )}\n              {expensesTypePopup && (\n                <ExpensesTypePopUp\n                  expensesTypePopup={expensesTypePopup}\n                  setExpensesTypePopup={setExpensesTypePopup}\n                  expenseTypeId={expenseTypeId}\n                  currencyOptionsData={currencyOptionsData}\n                  country={country}\n                  cities={cities}\n                  carTypes={carTypes}\n                  paidBy={paidBy}\n                  airportList={airportList}\n                  mobileType={mobileType}\n                  expDate={expDate}\n                  setExpenseData={setExpenseData}\n                  expenseData={expenseData}\n                  expInfo={expInfo}\n                  projectId={projectId}\n                  expName={expName}\n                  setFileMap={setFileMap}\n                  fileMap={fileMap}\n                  setRates={setRates}\n                  setFiles={setFiles}\n                  isExpenseBillable={isExpenseBillable}\n                  expCurrencySymbol={expCurrencySymbol}\n                  setExpCurrencySymbol={setExpCurrencySymbol}\n                  files={files}\n                  id={id}\n                />\n              )}\n              {displayTableBody && tableLoader ? amountStatusDisplay : \"\"}\n              {(id == undefined || stackIdData[0]?.status_id == 634) &&\n              tableLoader ? (\n                <div className=\" form-group col-md-12 col-sm-12 col-xs-12 btn-container center my-3 mb-1\">\n                  <button\n                    className=\"btn btn-primary\"\n                    type=\"submit\"\n                    onClick={() => {\n                      saveProjectExpenses(0);\n                    }}\n                  >\n                    <FaSave />\n                    Save\n                  </button>\n                  <button\n                    className=\"btn btn-primary\"\n                    type=\"submit\"\n                    onClick={() => {\n                      saveProjectExpenses(1);\n                    }}\n                  >\n                    <BiCheck />\n                    Submit\n                  </button>\n                  <button\n                    className=\"btn btn-secondary\"\n                    onClick={() => {\n                      if (isProjectSelected) {\n                        setDeletePopup(true);\n                      } else {\n                        setDeleteMsg(true);\n                        setTimeout(() => {\n                          setDeleteMsg(false);\n                        }, 3000);\n                      }\n                    }}\n                  >\n                    <ImCross size={\"11px\"} /> Delete\n                  </button>\n                </div>\n              ) : (\n                \"\"\n              )}\n            </div>\n          </div>\n        )}\n      </div>\n      {saveLoader ? <Loader handleAbort={() => setSaveLoader(false)} /> : \"\"}\n      {deletePopup && <DeleteConfirmPopup />}\n      {documentPopup && <DocumentPopup />}\n      {expenseDelPopup && <ExpenseDeleteConfirmPopup />}\n    </div>\n  );\n}\n\nexport default ExpensesCreate;\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport {\n  FaChevronCircleDown,\n  FaChevronCircleUp,\n  FaSearch,\n  FaCheck,\n  FaPlus,\n} from \"react-icons/fa\";\nimport FlatPrimeReactTable from \"../../PrimeReactTableComponent/FlatPrimeReactTable\";\n\nfunction ExpensesOpen() {\n  const [employeeData, setEmployeeData] = useState([]);\n  useEffect(() => {\n    getapiData();\n  }, []);\n  const getapiData = async () => {\n    const response = await axios.get(\n      `https://jsonplaceholder.typicode.com/comments`\n    );\n    const data = await response.data;\n    setEmployeeData(data);\n  };\n  return (\n    <div>\n      <div className=\"col-md-12\">\n        <div className=\"pageTitle\">\n          <div className=\"childOne\"></div>\n          <div className=\"childTwo\">\n            <h2>Expense Search History</h2>\n          </div>\n          <div className=\"childThree\"></div>\n        </div>\n      </div>\n      <div>\n        <div className=\"group customCard\">\n          <h2>Recent Expense Searches</h2>\n          <div className=\"group-content row\">\n            <div className=\"col-md-12\">\n              <FlatPrimeReactTable data={employeeData} />\n\n              {/* <table\n                className=\"table table-hover table-bordered\"\n                id=\"data-table\"\n              >\n                <thead>\n                  <tr>\n                    <th>Expense</th>\n                    <th>Created By</th>\n                    <th>Net Amount</th>\n                    <th>Status</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  <tr>\n                    <td>ES17434</td>\n                    <td>Doe</td>\n                    <td>$ 100.00</td>\n                    <td>Pending</td>\n                  </tr>\n                  <tr>\n                    <td>ES17439</td>\n                    <td>Doe</td>\n                    <td>$ 101.00</td>\n                    <td>Pending</td>\n                  </tr>\n                  <tr>\n                    <td>ES17438</td>\n                    <td>Smith</td>\n                    <td>$ 102.00</td>\n                    <td>Pending</td>\n                  </tr>\n                </tbody>\n              </table> */}\n            </div>\n          </div>\n        </div>\n      </div>\n      <div>\n        <div className=\"group mb-3 customCard\">\n          <div className=\"group-content row \">\n            <div className=\"col-md-6 mb-2\">\n              <div className=\"form-group row\">\n                <label className=\"col-3\" htmlFor=\"email-input\">\n                  Expense Stack\n                </label>\n                <span className=\"col-1 p-0 p-0 \">:</span>\n                <div className=\"col-6\">\n                  <select id=\"country-select\">\n                    <option value=\"USA\"> Please Select</option>\n                    <option value=\"USA\">PPM</option>\n                    <option value=\"CAN\">Projector</option>\n                    <option value=\"MEX\">Mexico</option>\n                  </select>\n                </div>\n                <div className=\"col-2\">\n                  <button\n                    type=\"button\"\n                    className=\"btn btn-primary\"\n                    title=\"Search\"\n                  >\n                    <FaSearch /> Search{\" \"}\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default ExpensesOpen;\n","import React, { useRef, useState, useEffect } from \"react\";\nimport { BiSearch } from \"react-icons/bi\";\nimport { IoWarningOutline } from \"react-icons/io5\";\nimport axios from \"axios\";\nimport \"./NewExpensesOpen.scss\";\nimport { environment } from \"../../../environments/environment\";\nimport Loader from \"../../Loader/Loader\";\nimport ScreenBreadcrumbs from \"../../Common/ScreenBreadcrumbs\";\nimport AutoComplete from \"../../VendorComponent/VendorOpenAuto\";\nimport GlobalHelp from \"../../PrimeReactTableComponent/GlobalHelp\";\n// import { environment } from \"../../environments/environment\";\nimport { Link } from \"react-router-dom\";\nimport { GoGraph, GoThreeBars } from \"react-icons/go\";\n// import AutoComplete from \"./VendorOpenAuto\";\n// import Loader from \"../Loader/Loader\";\n// import \"./VendorOpen.scss\";\n// import GlobalHelp from \"../PrimeReactTableComponent/GlobalHelp\";\n// import ScreenBreadcrumbs from \"../Common/ScreenBreadcrumbs\";\nimport { FaSearch } from \"react-icons/fa\";\n\nfunction NewExpensesOpen(props) {\n  const initialValues = {\n    vendor_name: \"\",\n    id: \"\",\n  };\n\n  const { buttonValue } = props;\n  let container = document.createElement(\"div\");\n\n  // console.log(buttonValue)\n  const [access, setAccess] = useState([]);\n  const [data, setData] = useState([]);\n  const [projectTableData, setProjectTableData] = useState([]);\n  const baseUrl = environment.baseUrl;\n  const [vendorListData, setVendorListData] = useState([]);\n  const [projectData, setProjectData] = useState([]);\n  const loggedUserId = localStorage.getItem(\"resId\");\n  const [autoCompleteData, setAutoCompleteData] = useState([]);\n  const [customerData, setCustomerData] = useState([]);\n  const [expenseLength, setExpensesLength] = useState([]);\n  const [customerTableData, setCustomerTableData] = useState([]);\n  const [engagementData, setEngagementData] = useState([]);\n  const [engagementTableData, setEngagementTableData] = useState([]);\n  const [expenseData, setExpenseData] = useState([]);\n  const [expenseTableData, setExpenseTableData] = useState([]);\n  const [accessLevel, setAccessLevel] = useState(false);\n  const [filteredData, setFilteredData] = useState([]);\n\n  const [state, setState] = useState({\n    userId: \"\",\n    ObjectTypeId: \"\",\n    ObjectId: \"\",\n    VisitedOn: \"\",\n  });\n  const [vendorId, setVendorId] = useState(-1);\n  const [projectId, setProjectId] = useState(-1);\n  const [engagementId, setEngagementId] = useState(-1);\n  const [customerId, setCustomerId] = useState(-1);\n  const [expenseId, setExpenseId] = useState(-1);\n  const [validationmessage, setValidationMessage] = useState(false);\n  const [latestData, setLatestData] = useState([]);\n  const [routes, setRoutes] = useState([]);\n  let textContent1 = \"Time & Expenses\";\n  let currentScreenName1 = [\"Expenses\", \"Expense Search History\"];\n  let textContent2 = \"Customers\";\n  let currentScreenName2 = [\"Customers\", \"Customer Search History\"];\n  let textContent3 = \"Delivery\";\n  let currentScreenName3 = [\"Projects\", \"Project Search History\"];\n  let textContent4 = \"Delivery\";\n  let currentScreenName4 = [\"Engagements\", \"Engagement Search History\"];\n  let textContent5 = \"Vendors\";\n  let currentScreenName5 = [\"Vendor Search History\"];\n  const lastDataId = latestData[latestData.length - 1]?.id;\n  console.log(lastDataId, \".........\");\n  const [accessLatest, setAccessLatest] = useState([]);\n  const [autoCompleteValidation, setAutoCompleteValidation] = useState(\"\");\n  const [searching, setsearching] = useState(false);\n  const abortController = useRef(null);\n\n  useEffect(() => {}, [\n    vendorListData,\n    projectData,\n    engagementData,\n    expenseData,\n  ]);\n  console.log(filteredData);\n  useEffect(() => {}, [autoCompleteData]);\n  useEffect(() => {}, [state]);\n  useEffect(() => {}, [\n    vendorId,\n    projectId,\n    engagementId,\n    customerId,\n    expenseId,\n    lastDataId,\n  ]);\n  useEffect(() => {\n    // getLatestApis();\n    // getAccess();\n  }, []);\n  const fetchdata = () => {\n    axios({\n      method: \"get\",\n      url:\n        baseUrl +\n        `/VendorMS/vendor/getVendorList?userid=${loggedUserId}&objecttypeid=15`,\n    })\n      .then(function (response) {\n        var response = response.data;\n        setData(response);\n      })\n      .catch(function (response) {});\n  };\n  console.log(expenseLength);\n  const getdata = () => {\n    axios({\n      method: \"get\",\n      url: baseUrl + `/VendorMS/vendor/getVendorsNameandId`,\n    })\n      .then(function (response) {\n        var resp = response.data;\n        setVendorListData(resp);\n      })\n      .catch(function (response) {});\n  };\n\n  const handleSelect = (vendorId) => {\n    let data = document.getElementsByClassName(\"err\");\n    if (vendorId == null) {\n      if (autoCompleteData.id == null) {\n        setAutoCompleteValidation(\"1px solid rgb(183 1 1) !important\");\n        setValidationMessage(true);\n        return;\n      } else {\n        setValidationMessage(false);\n      }\n      {\n        <Link\n          title=\"Search\"\n          to={`/vendor/vendorDoc/:${autoCompleteData.id}`}\n          target=\"_blank\"\n        ></Link>;\n      }\n      console.log(autoCompleteData.id);\n      axios({\n        method: \"post\",\n        url: baseUrl + `/VendorMS/vendor/updateUserSearchHistory`,\n        data: {\n          userId: loggedUserId,\n          objectId: autoCompleteData.id,\n        },\n        headers: { \"Content-Type\": \"application/json\" },\n      }).then((success) => {\n        console.log(success);\n      });\n    } else {\n      console.log(vendorId);\n\n      axios({\n        method: \"post\",\n        url: baseUrl + `/VendorMS/vendor/updateUserSearchHistory`,\n        data: {\n          userId: loggedUserId,\n          objectId: vendorId,\n        },\n        // headers: { \"Content-Type\": \"application/json\" },\n      }).then((success) => {\n        console.log(success);\n      });\n    }\n  };\n\n  //----------------breadcrumbs--------------\n\n  const getMenus = () => {\n    // setMenusData\n\n    axios({\n      method: \"GET\",\n      url: baseUrl + `/CommonMS/master/getMenus?loggedUserId=${loggedUserId}`,\n    }).then((resp) => {\n      let data = resp.data;\n\n      data.forEach((item) => {\n        if (item.display_name === textContent1 && buttonValue == \"Expense\") {\n          setRoutes([item]);\n        }\n      });\n    });\n  };\n  useEffect(() => {\n    getMenus();\n  }, []);\n\n  /// Project open api calls\n  ////Project table data\n\n  useEffect(() => {\n    getExpenseTableData();\n    getExpenseData();\n  }, [buttonValue]);\n\n  const getAccess = (objId) => {\n    axios({\n      method: \"get\",\n      url:\n        baseUrl +\n        `/ProjectMS/project/getProjectAccess?objId=${objId}&loggedUserId=${loggedUserId}`,\n    })\n      .then((response) => {\n        const resp = response.data;\n        // resp.push({ id: \"-1\", name: \"<<ALL>>\" });\n        setAccessLatest(resp);\n      })\n      .catch((error) => {});\n  };\n\n  // ---------------Expense-------------------------------\n\n  const getExpenseTableData = () => {\n    setsearching(false);\n    abortController.current = new AbortController();\n\n    axios({\n      method: \"get\",\n      url:\n        baseUrl +\n        `/timeandexpensesms/ExpenseOpen/gettabledata?userid=${loggedUserId}`,\n      signal: abortController.current.signal,\n\n      // `http://localhost:8090/timeandexpensesms/ExpenseOpen/gettabledata?userid=${loggedUserId}`,\n    })\n      .then(function (response) {\n        var response = response.data;\n        setExpenseTableData(response);\n        setTimeout(() => {\n          setsearching(false);\n        }, 3000);\n      })\n      .catch(function (response) {});\n  };\n\n  const getExpenseData = () => {\n    axios({\n      method: \"get\",\n      url: baseUrl + `/timeandexpensesms/ExpenseOpen/getSearchdata`,\n      // `http://localhost:8090/timeandexpensesms/ExpenseOpen/getSearchdata`,\n    })\n      .then(function (response) {\n        var resp = response.data;\n        resp.push({ id: \"-1\", name: \"<<ALL>>\" });\n        setExpenseData(resp);\n      })\n      .catch(function (response) {});\n  };\n\n  const handleExpenseSelect = (vendorId) => {\n    let data = document.getElementsByClassName(\"err\");\n    if (vendorId == null) {\n      if (autoCompleteData.id == null) {\n        setAutoCompleteValidation(\"1px solid rgb(183 1 1) !important\");\n        setValidationMessage(true);\n        return;\n      } else {\n        setValidationMessage(false);\n      }\n      {\n        <Link\n          title=\"Search\"\n          to={`/engagement/Dashboard/:${autoCompleteData.id}`}\n          target=\"_blank\"\n        ></Link>;\n      }\n      console.log(autoCompleteData.id);\n      axios({\n        method: \"post\",\n        url: baseUrl + `/timeandexpensesms/ExpenseOpen/updateUserSearchHistory`,\n        // `http://localhost:8090/timeandexpensesms/ExpenseOpen/updateUserSearchHistory`,\n        data: {\n          userId: loggedUserId,\n          objectId: autoCompleteData.id,\n        },\n        headers: { \"Content-Type\": \"application/json\" },\n      }).then((success) => {\n        console.log(success);\n      });\n    } else {\n      axios({\n        method: \"post\",\n        url: baseUrl + `/timeandexpensesms/ExpenseOpen/updateUserSearchHistory`,\n        // `http://localhost:8090/timeandexpensesms/ExpenseOpen/updateUserSearchHistory`,\n        data: {\n          userId: loggedUserId,\n          objectId: vendorId,\n        },\n        // headers: { \"Content-Type\": \"application/json\" },\n      }).then((success) => {\n        console.log(success);\n      });\n    }\n  };\n\n  const handleSearchButtonClick = () => {\n    // Set accessLevel to true immediately\n    setAccessLevel(true);\n\n    // Set accessLevel to false after 1000 milliseconds (1 second)\n    setTimeout(() => {\n      setAccessLevel(false);\n    }, 1000);\n  };\n  // -------------------------------------------\n  const handleAbort = () => {\n    abortController.current && abortController.current.abort();\n    setsearching(false);\n  };\n\n  let HelpPDFName;\n  let Headername;\n\n  if (buttonValue === \"Project\") {\n    HelpPDFName = \"OpenProject.pdf\";\n    Headername = \"Project Open Help\";\n  } else if (buttonValue === \"Engagement\") {\n    HelpPDFName = \"Eng.pdf\";\n    Headername = \"Engagement Open Help\";\n  } else if (buttonValue === \"Customer\") {\n    HelpPDFName = \"OpenCustomer.pdf\";\n    Headername = \"Customer Open Help\";\n  } else if (buttonValue === \"Expense\") {\n    HelpPDFName = \"expense.pdf\";\n    Headername = \"Expense Open Help\";\n  } else {\n    buttonValue == \"Vendor\";\n    HelpPDFName = \"OpenVMG.pdf\";\n    Headername = \"Vendor Open Help\";\n  }\n\n  return (\n    <div>\n      <div className=\"col-md-12\">\n        <div className=\"pageTitle\">\n          <div className=\"childOne\"></div>\n          <div className=\"childTwo\">\n            <h2> {`${buttonValue} Search History`}</h2>\n          </div>\n          <div className=\"childThree\"></div>\n        </div>\n      </div>\n      {buttonValue == \"Expense\" ? (\n        <ScreenBreadcrumbs\n          routes={routes}\n          currentScreenName={currentScreenName1}\n        />\n      ) : buttonValue == \"Project\" ? (\n        <ScreenBreadcrumbs\n          routes={routes}\n          currentScreenName={currentScreenName3}\n        />\n      ) : buttonValue == \"Customer\" ? (\n        <ScreenBreadcrumbs\n          routes={routes}\n          currentScreenName={currentScreenName2}\n        />\n      ) : buttonValue == \"Vendor\" ? (\n        <ScreenBreadcrumbs\n          routes={routes}\n          currentScreenName={currentScreenName5}\n        />\n      ) : buttonValue == \"Engagement\" ? (\n        <ScreenBreadcrumbs\n          routes={routes}\n          currentScreenName={currentScreenName4}\n        />\n      ) : (\n        \"\"\n      )}\n      {/* {buttonValue == \"Project\" && ( */}\n      <div className=\"helpBtn\" style={{ float: \"right\", paddingTop: \"5px\" }}>\n        <GlobalHelp pdfname={HelpPDFName} name={Headername} />\n      </div>\n\n      <div className=\"body body-bg col-xs-12 col-sm-12 col-md-12 col-lg-12 customCard \">\n        <div className=\"form-group cvu darkHeader\">\n          <div className=\"col-6 my-2 no-padding\">\n            {/* {console.log(projectTableData)} */}\n            {projectTableData.length > 0 ||\n            customerTableData.length > 0 ||\n            engagementTableData.length > 0 ||\n            expenseTableData.length > 0 ? (\n              <table\n                id=\"details\"\n                className=\"col-12 table table-bordered  openTable \" ////customerEngament\n              >\n                <thead>\n                  <tr>\n                    {buttonValue == \"Expense\" ? (\n                      <th\n                        colSpan={4}\n                        className=\"tableheading\"\n                        style={{ backgroundColor: \"#eeeeee\" }}\n                      >\n                        <h6\n                          className=\"text-center m-0\"\n                          style={{ color: \"#187fde\", fontSize: \"15px\" }}\n                        >\n                          {`Recent ${buttonValue} Searches`}\n                        </h6>\n                      </th>\n                    ) : (\n                      <th\n                        colSpan={2}\n                        className=\"tableheading\"\n                        style={{ backgroundColor: \"#eeeeee\" }}\n                      >\n                        <h6\n                          className=\"text-center m-0\"\n                          style={{ color: \"#187fde\", fontSize: \"15px\" }}\n                        >\n                          {`Recent ${buttonValue} Searches`}\n                        </h6>\n                      </th>\n                    )}\n                  </tr>\n                  {buttonValue == \"Expense\" ? (\n                    <tr>\n                      <th>\n                        <h6\n                          className=\"text-center m-0\"\n                          style={{ fontSize: \"13px\" }}\n                        >\n                          <b>Expense</b>\n                        </h6>\n                      </th>\n                      <th>\n                        <h6\n                          className=\"text-center m-0\"\n                          style={{ fontSize: \"13px\" }}\n                        >\n                          <b>Created By</b>\n                        </h6>\n                      </th>\n                      <th>\n                        <h6\n                          className=\"text-center m-0\"\n                          style={{ fontSize: \"13px\" }}\n                        >\n                          <b>Net Amount</b>\n                        </h6>\n                      </th>\n                      <th>\n                        <h6\n                          className=\"text-center m-0\"\n                          style={{ fontSize: \"13px\" }}\n                        >\n                          <b>Status</b>\n                        </h6>\n                      </th>\n                    </tr>\n                  ) : (\n                    <tr>\n                      <th style={{ backgroundColor: \"#eeeeee\" }}>\n                        <h6\n                          className=\"text-center m-0\"\n                          style={{ fontSize: \"13px\" }}\n                        >\n                          {buttonValue}\n                        </h6>\n                      </th>\n                      <th style={{ backgroundColor: \"#eeeeee\" }}>\n                        <h6\n                          className=\"text-center m-0\"\n                          style={{ fontSize: \"13px\" }}\n                        >\n                          Actions\n                        </h6>\n                      </th>\n                    </tr>\n                  )}\n                </thead>\n                <tbody>\n                  {buttonValue == \"Expense\" ? (\n                    <>\n                      {console.log(expenseTableData)}\n                      {expenseTableData.map((list) => (\n                        <tr>\n                          <td value={list.id}>\n                            <span\n                              onClick={() => {\n                                handleExpenseSelect(list.id);\n                                setValidationMessage(false);\n                              }}\n                            >\n                              <Link\n                                data-toggle=\"tooltip\"\n                                title=\"Go To Expense Stack\"\n                                to={`/expense/Create/${list.id}`}\n                                target=\"_blank\"\n                              >\n                                {list.Expense}\n                              </Link>\n                            </span>\n                          </td>\n                          <td>\n                            <span>{list.createdBy}</span>\n                          </td>\n                          <td align=\"right\">\n                            <span>\n                              {list.Currency == \"&#8377\"\n                                ? \"₹ \"\n                                : list.Currency == \"&#36\"\n                                ? \"$ \"\n                                : list.Currency == \"&#163\"\n                                ? \"£ \"\n                                : list.Currency == \"&#128\"\n                                ? \"€ \"\n                                : list.Currency == \"C&#36\"\n                                ? \"C$ \"\n                                : list.Currency == \"&#107;&#110;\"\n                                ? \"kn \"\n                                : list.Currency == \"Bds&#36\"\n                                ? \"Bds$ \"\n                                : list.Currency == \"Jordan\"\n                                ? \"Jordan \"\n                                : list.Currency == \"ASUD\"\n                                ? \"ASUD \"\n                                : \"\"}\n                              {list.NetAmount == \"null\" ? (\n                                \" \"\n                              ) : list.Currency == \"&#1583;.&#1573;\" ? (\n                                <>\n                                  {parseFloat(list.NetAmount).toFixed(2)}\n                                  {\" د.إ \"}\n                                </>\n                              ) : (\n                                parseFloat(list.NetAmount).toFixed(2)\n                              )}\n                            </span>\n                          </td>\n                          <td>\n                            <span>{list.Status}</span>\n                          </td>\n                        </tr>\n                      ))}\n                    </>\n                  ) : (\n                    \"\"\n                  )}\n                  {/* ---------------------------------- */}\n                </tbody>\n              </table>\n            ) : (\n              \"\"\n            )}\n\n            <div className=\"body col-xs-12 col-sm-12 col-md-12 col-lg-12  mt-3  no-padding\">\n              {validationmessage ? (\n                <div className=\"statusMsg error col-12 mb-2\">\n                  <span>\n                    <IoWarningOutline />\n                    &nbsp;{`Please select any ${buttonValue}`}\n                  </span>\n                </div>\n              ) : (\n                \"\"\n              )}\n              {accessLevel ? (\n                <div className=\"statusMsg error col-12 mb-2\">\n                  <span>\n                    <IoWarningOutline />\n                    &nbsp;{`Not authorized to any ${buttonValue}`}\n                  </span>\n                </div>\n              ) : (\n                \"\"\n              )}\n              <div className=\" group-content  err\">\n                {/* <div className=\"col-4 \"> */}\n                <div className=\"row \">\n                  {/* <div className=\"col-2 p-0\"></div> */}\n                  <div\n                    className={\n                      buttonValue == \"Expense\" ? \"col-3 h6\" : \"col-2 h6\"\n                    }\n                    style={{ fontSize: \"13px\" }}\n                  >\n                    {buttonValue == \"Expense\" ? \"Expense Stack\" : buttonValue}\n                    {buttonValue == \"Expense\" ? (\n                      <span className=\"required error-text ml-1\">* </span>\n                    ) : (\n                      \"\"\n                    )}\n                    :\n                  </div>\n                  <div\n                    className=\"col-6 autoComplete-container\"\n                    id=\"autoComplete\"\n                    style={{ fontSize: \"12px\" }}\n                  >\n                    <AutoComplete\n                      vendorListData={vendorListData}\n                      setAutoCompleteData={setAutoCompleteData}\n                      handleSelect={handleSelect}\n                      buttonValue={buttonValue}\n                      projectData={projectData}\n                      setAccess={setAccess}\n                      customerData={customerData}\n                      filteredData={filteredData}\n                      setFilteredData={setFilteredData}\n                      setExpensesLength={setExpensesLength}\n                      autoCompleteValidation={autoCompleteValidation}\n                      // handleEngagementSelect={handleEngagementSelect}\n                      engagementData={engagementData}\n                      expenseData={expenseData}\n                      handleExpenseSelect={handleExpenseSelect}\n                    />\n                  </div>\n\n                  <div className=\"err col-2\">\n                    {expenseLength > 0 ? (\n                      <Link\n                        title=\"Search\"\n                        to={\n                          buttonValue == \"Expense\" &&\n                          `/expense/Create/${autoCompleteData.id}`\n                        }\n                        target=\"_blank\"\n                      >\n                        <button\n                          className=\"btn btn-primary \"\n                          onClick={() => {\n                            buttonValue == \"Expense\" && handleExpenseSelect();\n                          }}\n                        >\n                          <BiSearch /> Search\n                        </button>\n                      </Link>\n                    ) : (\n                      <button\n                        className=\"btn btn-primary \"\n                        onClick={() => {\n                          handleSearchButtonClick();\n                        }}\n                      >\n                        <BiSearch /> Search\n                      </button>\n                    )}\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          {searching ? <Loader handleAbort={handleAbort} /> : \"\"}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default NewExpensesOpen;\n","import React, { useState, useEffect, useRef } from \"react\";\nimport { MultiSelect } from \"react-multi-select-component\";\nimport DatePicker from \"react-datepicker\";\nimport { DataTable } from \"primereact/datatable\";\nimport { Column } from \"primereact/column\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport axios from \"axios\";\nimport moment from \"moment\";\nimport Loader from \"../../Loader/Loader\";\nimport {\n  FaChevronCircleDown,\n  FaChevronCircleUp,\n  FaSearch,\n  FaSave,\n  FaCaretDown,\n} from \"react-icons/fa\";\nimport { CCollapse } from \"@coreui/react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { FilterMatchMode, FilterOperator } from \"primereact/api\";\nimport { Button } from \"primereact/button\";\nimport { BsFileEarmarkPdf } from \"react-icons/bs\";\nimport { AiFillDelete, AiFillEdit } from \"react-icons/ai\";\nimport { TiCancel } from \"react-icons/ti\";\nimport Draggable from \"react-draggable\";\nimport { CModal } from \"@coreui/react\";\nimport { CModalBody } from \"@coreui/react\";\nimport { CModalHeader } from \"@coreui/react\";\nimport { CModalTitle } from \"@coreui/react\";\nimport { CModalFooter } from \"@coreui/react\";\nimport { environment } from \"../../../environments/environment\";\nimport { BsFillCircleFill } from \"react-icons/bs\";\nimport * as XLSX from \"xlsx\";\nimport { saveAs } from \"file-saver\";\nimport { RiFileExcel2Line } from \"react-icons/ri\";\nimport { SlExclamation } from \"react-icons/sl\";\nimport { CheckBox, SelectAll } from \"@material-ui/icons\";\nimport { BiCheck } from \"react-icons/bi\";\nimport ProjectExpensePopOver from \"../../ProjectComponent/ProjectExpensePopOver\";\nimport GlobalHelp from \"../../PrimeReactTableComponent/GlobalHelp\";\nimport ScreenBreadcrumbs from \"../../Common/ScreenBreadcrumbs\";\nimport { ImCross } from \"react-icons/im\";\nimport { updateExpenseButtonState } from \"../../../reducers/SelectedSEReducer\";\nimport { useDispatch } from \"react-redux\";\n\nfunction ExpensesSearch(props) {\n  //const setbtnState = props.setbtnState;\n  const currentDate = new Date();\n  const initialStartDate = new Date();\n  initialStartDate.setMonth(currentDate.getMonth() - 1);\n  initialStartDate.setDate(initialStartDate.getDate());\n  console.log(initialStartDate);\n  const [startDate, setStartDate] = useState(initialStartDate);\n  const [endDate, setEndDate] = useState(new Date());\n  const [stateDropdown, setStateDropdown] = useState([]);\n  const [paymentDropdown, setPaymentDropdown] = useState([]);\n  const [searchString, setSearchString] = useState(\"\");\n  const [data, setData] = useState([]);\n  const [expandedRows, setExpandedRows] = useState(null);\n  const [loader, setLoader] = useState(false);\n  const [loaderOne, setLoaderOne] = useState(false);\n  const dispatch = useDispatch();\n  const [visible, setVisible] = useState(false);\n  const [cheveronIcon, setCheveronIcon] = useState(FaChevronCircleUp);\n  const [filters, setFilters] = useState({\n    global: { value: null, matchMode: FilterMatchMode.CONTAINS },\n    stackName: { value: null, matchMode: FilterMatchMode.STARTS_WITH },\n    resource: { value: null, matchMode: FilterMatchMode.STARTS_WITH },\n    approval: { value: null, matchMode: FilterMatchMode.STARTS_WITH },\n    projectCode: { value: null, matchMode: FilterMatchMode.STARTS_WITH },\n    projectName: { value: null, matchMode: FilterMatchMode.STARTS_WITH },\n    amt: { value: null, matchMode: FilterMatchMode.STARTS_WITH },\n    payment: { value: null, matchMode: FilterMatchMode.STARTS_WITH },\n    disbursedAmt: { value: null, matchMode: FilterMatchMode.STARTS_WITH },\n    clientAmt: { value: null, matchMode: FilterMatchMode.STARTS_WITH },\n    createdOn: { value: null, matchMode: FilterMatchMode.CONTAINS },\n  });\n  const [globalFilterValue, setGlobalFilterValue] = useState(\"\");\n  const [selectedOptionTwo, setSelectedOptionTwo] = useState();\n  const [isEditClicked, setIsEditClicked] = useState(true);\n  const [editRowData, setEditRowData] = useState({});\n  const [selectedRows, setSelectedRows] = useState([]);\n  const [popUp, setPopUp] = useState(false);\n  const [popUpData, setPopUpData] = useState({});\n  const [expenseHistory, setExpenseHistory] = useState([]);\n  const [popUpLoader, setPopUpLoader] = useState(false);\n  const [selectedRowsData, setSelectedRowsData] = useState([]);\n  const [selectedOption, setSelectedOption] = useState();\n  const [resourceId, setResourceId] = useState(0);\n  const [isCheckedList, setIsCheckedList] = useState([]);\n  const [headerChecked, setHeaderChecked] = useState(true);\n  const [isChecked, setIsChecked] = useState(false);\n  const [isHovered, setIsHovered] = useState(false);\n  const [message, setMessage] = useState(false);\n  const [count, setCount] = useState(0);\n\n  const loggedUserId = localStorage.getItem(\"resId\");\n  const handleAbort = props.handleAbort;\n  const baseUrl = environment.baseUrl;\n  const dropdownRef = useRef();\n  const HelpPDFName = \"SearchExpense.pdf\";\n  const Headername = \"Search Expense Help\";\n  const navigate = useNavigate();\n  const paymentUsers = props.paymentUsers;\n\n  const initialSelectedState = paymentUsers.includes(parseInt(loggedUserId))\n    ? [{ label: \"PM Approved\", value: 628 }]\n    : [];\n  const initialSelectedPayment = paymentUsers.includes(parseInt(loggedUserId))\n    ? [\n        { label: \"Approved To Pay\", value: 631 },\n        { label: \"Paid\", value: 636 },\n        { label: \"Received\", value: 637 },\n        { label: \"Pending\", value: 844 },\n      ]\n    : [];\n\n  const [selectedState, setSelectedState] = useState(initialSelectedState);\n  const [selectedPayment, setSelectedPayment] = useState(\n    initialSelectedPayment\n  );\n\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const handleClose = () => {\n    setAnchorEl(false);\n  };\n\n  const [routes, setRoutes] = useState([]);\n  let textContent = \"Time & Expenses\";\n  let currentScreenName = [\"Expenses\", \"Search Expense\"];\n\n  const getMenus = () => {\n    // setMenusData\n\n    axios({\n      method: \"GET\",\n      url: baseUrl + `/CommonMS/master/getMenus?loggedUserId=${loggedUserId}`,\n    }).then((resp) => {\n      let data = resp.data;\n\n      data.forEach((item) => {\n        if (item.display_name === textContent) {\n          setRoutes([item]);\n        }\n      });\n    });\n  };\n\n  const [dataAccess, setDataAccess] = useState([]);\n  console.log(dataAccess);\n\n  const getDocumentsPermission = () => {\n    axios({\n      method: \"GET\",\n      url:\n        baseUrl +\n        // `/CommonMS/master/getMenus?loggedUserId=${loggedUserId}`,\n        `/CommonMS/master/getBenchMtericsMenus?loggedUserId=${loggedUserId}&Cont=Expense`,\n    }).then((resp) => {\n      let data = resp.data;\n      console.log(data);\n      data.forEach((item) => {\n        if (item.display_name === textContent) {\n          setRoutes([item]);\n        }\n      });\n\n      const ExpenseSubMenu = data.find(\n        (item) => item.display_name === \"Search\"\n      );\n\n      const accessLevel = ExpenseSubMenu ? ExpenseSubMenu.access_level : null;\n      console.log(accessLevel);\n      setDataAccess(accessLevel);\n    });\n  };\n  useEffect(() => {\n    getDocumentsPermission();\n  }, []);\n\n  const getResourceid = () => {\n    axios({\n      method: \"get\",\n      url: baseUrl + `/ProjectMS/defectphases/getresourceid?id=${loggedUserId}`,\n    }).then(function (response) {\n      var res = response.data;\n      setResourceId(res);\n    });\n  };\n  useEffect(() => {\n    getResourceid();\n    getMenus();\n  }, []);\n\n  useEffect(() => {\n    getDropdownOptions();\n  }, []);\n\n  const getDropdownOptions = () => {\n    axios\n      .get(baseUrl + `/timeandexpensesms/expensesSearch/dropdowns`)\n      .then((res) => {\n        let states = [];\n        let paymentStates = [];\n        res.data.state?.forEach((e) => {\n          let stateObj = {\n            label: e.lkup_name,\n            value: e.id,\n          };\n          states.push(stateObj);\n        });\n        res.data.paymentState?.forEach((e) => {\n          let paymentObj = {\n            label: e.lkup_name,\n            value: e.id,\n          };\n          paymentStates.push(paymentObj);\n        });\n        setStateDropdown(states);\n        setPaymentDropdown(paymentStates);\n      })\n      .catch((error) => console.log(error));\n  };\n\n  const ArrowRenderer = ({ expanded }) => (\n    <>\n      {expanded ? (\n        <FaCaretDown className=\"chevronIcon\" />\n      ) : (\n        <FaCaretDown className=\"chevronIcon\" />\n      )}\n    </>\n  );\n\n  const numberWithCommas = (x) => {\n    var number = String(x);\n\n    if (number.includes(\".\")) {\n      var parts = number.split(\".\");\n      var integerPart = parts[0].replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, \"$1,\");\n      var decimalPart = parts[1].padEnd(2, \"0\");\n      return integerPart + \".\" + decimalPart;\n    } else {\n      return number.replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, \"$1,\") + \".00\";\n    }\n  };\n\n  const amountFormat = (rowData) => {\n    let container = document.createElement(\"div\");\n    container.innerHTML = rowData.clientCurrencyCode;\n    return container.innerHTML;\n  };\n\n  const getExpenseReport = () => {\n    const formattedData = {\n      state: selectedState.map((item) => item.value).join(\",\"),\n      paymentState: selectedPayment.map((item) => item.value).join(\",\"),\n      fromDt: moment(startDate).format(\"YYYY-MM-DD\"),\n      toDt: moment(endDate).format(\"YYYY-MM-DD\"),\n      searchString: searchString,\n      userId: loggedUserId,\n    };\n    const loaderTime = setTimeout(() => {\n      setLoader(true);\n    }, 2000);\n    axios\n      .post(\n        baseUrl + `/timeandexpensesms/expensesSearch/expenseReport`,\n        formattedData\n      )\n      .then((res) => {\n        const res1 = res.data;\n        for (let i = 0; i < res1.length; i++) {\n          res1[i][\"createdOn\"] =\n            res1[i][\"createdOn\"] == null\n              ? \"\"\n              : moment(res1[i][\"createdOn\"]).format(\"DD-MMM-YYYY\");\n        }\n        setData(res1);\n        clearTimeout(loaderTime);\n        setLoader(false);\n        setVisible(!visible);\n        visible\n          ? setCheveronIcon(FaChevronCircleUp)\n          : setCheveronIcon(FaChevronCircleDown);\n      })\n      .catch((error) => console.log(error));\n  };\n\n  useEffect(() => {\n    getExpenseReport();\n  }, []);\n\n  const allowExpansion = (rowData) => {\n    return rowData.subrows.length >= 0;\n  };\n\n  const onRowExpand = (e) => {\n    let cid = e.data.projectId;\n    setLoaderOne(false);\n    axios\n      .get(\n        baseUrl +\n          `/ProjectMS/projectExpenses/stackExpenses?stackId=${e.data.stackId}&userId=${loggedUserId}&raisedBy=${e.data.raised_by}&projectId=${cid}&statusId=${e.data.status_id}`\n      )\n      .then((res) => {\n        data.find((u) => u.stackId === e.data.stackId).subrows = res.data;\n        setLoaderOne(false);\n      })\n      .catch((error) => console.log(error));\n  };\n\n  const onGlobalFilterChange = (e) => {\n    const value = e.target.value;\n    let _filters = { ...filters };\n\n    _filters[\"global\"].value = value;\n\n    setFilters(_filters);\n    setGlobalFilterValue(value);\n  };\n\n  const handleOnExport = () => {\n    const labels = {\n      stackName: \"Stack\",\n      resource: \"Resource\",\n      approval: \"Approval Status\",\n      payment: \"Payment Status\",\n      projectName: \"Project\",\n      projectCode: \"Project Code\",\n      amt: \"Incurred\",\n      disbursedAmt: \"Disbursed\",\n      clientAmt: \"Client\",\n      createdOn: \"Created On\",\n    };\n\n    const dataInTable = data.map((item) => {\n      const row = {};\n      Object.keys(labels).forEach((key) => {\n        row[labels[key]] = item[key];\n      });\n      return row;\n    });\n\n    const ExcelJS = require(\"exceljs\");\n    const workbook = new ExcelJS.Workbook();\n    const worksheet = workbook.addWorksheet(\"ExpenseReport\");\n\n    const headerRow = worksheet.addRow(Object.values(labels));\n    headerRow.font = { bold: true };\n\n    dataInTable.forEach((rowData) => {\n      worksheet.addRow(Object.values(rowData));\n    });\n\n    workbook.xlsx.writeBuffer().then((buffer) => {\n      saveAsExcelFile(buffer, \"ExpenseReport.xlsx\");\n    });\n  };\n\n  const addCommas = (value) => {\n    return value.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n  };\n\n  const saveAsExcelFile = (buffer, fileName) => {\n    const blobData = new Blob([buffer], { type: \"application/octet-stream\" });\n    if (typeof window.navigator.msSaveBlob !== \"undefined\") {\n      window.navigator.msSaveBlob(blobData, fileName);\n    } else {\n      const link = document.createElement(\"a\");\n      link.href = window.URL.createObjectURL(blobData);\n      link.download = fileName;\n      link.click();\n      window.URL.revokeObjectURL(link.href);\n    }\n  };\n\n  const paymentStatus = (rowData) => {\n    return editRowData.stackId === rowData.stackId &&\n      paymentUsers.includes(parseInt(loggedUserId)) ? (\n      <div>\n        <select\n          value={selectedOptionTwo}\n          onChange={(e) => setSelectedOptionTwo(e.target.value)}\n        >\n          {rowData.dropDown.map((item) => {\n            const key = Object.keys(item)[0];\n            const label = item[key];\n            return (\n              <option key={key} value={key}>\n                {label}\n              </option>\n            );\n          })}\n        </select>\n      </div>\n    ) : (\n      <div title={rowData.payment}>{rowData.payment}</div>\n    );\n  };\n\n  const approvalStatus = (rowData) => {\n    return editRowData.stackId === rowData.stackId &&\n      !paymentUsers.includes(parseInt(loggedUserId)) ? (\n      <div>\n        <select\n          value={selectedOptionTwo}\n          onChange={(e) => setSelectedOptionTwo(e.target.value)}\n        >\n          {rowData.dropDown.map((item) => {\n            const key = Object.keys(item)[0];\n            const label = item[key];\n            return (\n              <option key={key} value={key}>\n                {label}\n              </option>\n            );\n          })}\n        </select>\n      </div>\n    ) : (\n      <div title={rowData.approval}>{rowData.approval}</div>\n    );\n  };\n\n  const [documentLoader, setDocumentLoader] = useState(false);\n\n  const downloadExpenseStack = async (stackId) => {\n    const link = document.createElement(\"a\");\n    link.href =\n      baseUrl + `/ProjectMS/projectExpenses/downloadStack?stackId=${stackId}`;\n    link.download = \"Expense.pdf\";\n    setDocumentLoader(false);\n    await axios\n      .get(link.href)\n      .then((response) => {\n        if (response.status === 200) {\n          link.click();\n        }\n      })\n      .catch((error) => {\n        console.error(\"An error occurred:\", error);\n        setDocumentFail(true);\n        setTimeout(() => {\n          setDocumentFail(false);\n        }, 3000);\n      });\n    setDocumentLoader(false);\n  };\n\n  const actionField = (rowData) => {\n    return (\n      <>\n        <BsFileEarmarkPdf\n          size={\"1.8em\"}\n          style={{\n            color: \"#428bca\",\n            marginRight: \"10px\",\n            marginLeft: \"-10px\",\n            cursor: \"pointer\",\n          }}\n          onClick={() => downloadExpenseStack(rowData.stackId)}\n        />\n        {(paymentUsers.includes(parseInt(loggedUserId)) &&\n          (rowData.approval === \"PM Approved\" ||\n            rowData.approval === \"Approved to pay\")) ||\n        (!paymentUsers.includes(parseInt(loggedUserId)) &&\n          !rowData.subrows.length > 0 &&\n          rowData.approval === \"Submitted\") ? (\n          <AiFillEdit\n            size={\"1.5em\"}\n            style={{ cursor: \"pointer\", marginRight: \"-15px\" }}\n            color=\"orange\"\n            onClick={(e) => {\n              setIsEditClicked(false);\n              setEditRowData(rowData);\n              // paymentStatus(rowData);\n              setSelectedOptionTwo(Object.keys(rowData.dropDown[0])[0]);\n            }}\n          />\n        ) : (\n          \"\"\n        )}\n      </>\n    );\n  };\n\n  const cancelRowEditOuter = () => {\n    setIsEditClicked(true);\n    setEditRowData({});\n  };\n\n  const expenseDetails = (expenseId) => {\n    axios\n      .get(\n        baseUrl +\n          `/ProjectMS/projectExpenses/expenseHistory?expenseId=${expenseId}`\n      )\n      .then((res) => {\n        setExpenseHistory(res.data);\n        setPopUpLoader(false);\n      })\n      .catch((error) => console.log(error));\n  };\n\n  const viewDetails = (rowData) => {\n    return (\n      <a\n        className=\"linkSty\"\n        onClick={() => {\n          setPopUpLoader(false);\n          expenseDetails(rowData.expense_id);\n          setPopUp(true);\n          setPopUpData(rowData);\n        }}\n      >\n        View\n      </a>\n    );\n  };\n\n  function ExpensePopup(props) {\n    const { popUp, setPopUp, data, totalData } = props;\n\n    const downloadFile = async (document_id, svn_revision, file_name) => {\n      const link = document.createElement(\"a\");\n      link.href =\n        baseUrl +\n        `/CommonMS/document/downloadFile?documentId=${document_id}&svnRevision=${svn_revision}`;\n      link.click();\n    };\n\n    return (\n      <div>\n        {popUpLoader ? (\n          <Loader\n            handleAbort={() => {\n              handleAbort;\n              setPopUpLoader(false);\n            }}\n          />\n        ) : (\n          <CModal\n            visible={popUp}\n            backdrop=\"static\"\n            size=\"lg\"\n            onClose={() => setPopUp(false)}\n          >\n            <CModalHeader style={{ cursor: \"all-scroll\" }}>\n              <CModalTitle>\n                <span className=\"ft16\">Expense Details</span>\n              </CModalTitle>\n            </CModalHeader>\n            <CModalBody>\n              <div className=\"container\">\n                <div className=\"form-group content\">\n                  <div className=\"col-12 row\">\n                    <div className=\"col-6 row\">\n                      <div className=\"col-6\">\n                        <strong>Project</strong>\n                      </div>\n                      <div className=\"col-1\">:</div>\n                      <div className=\"col-5\">\n                        {totalData\n                          .filter((d) => d.stackId === data.id)\n                          .map((d) => d.projectName)}\n                      </div>\n                    </div>\n                    <div className=\"col-6 row\">\n                      <div className=\"col-6\">\n                        <strong>Resource</strong>\n                      </div>\n                      <div className=\"col-1\">:</div>\n                      <div className=\"col-5\">{data.fullName}</div>\n                    </div>\n                    <div className=\"col-6 row\">\n                      <div className=\"col-6\">\n                        <strong>Expense Category</strong>\n                      </div>\n                      <div className=\"col-1\">:</div>\n                      <div className=\"col-5\">{data.Expense_Type}</div>\n                    </div>\n                    <div className=\"col-6 row\">\n                      <div className=\"col-6\">\n                        <strong>Description</strong>\n                      </div>\n                      <div className=\"col-1\">:</div>\n                      <div className=\"col-5\">{data.description}</div>\n                    </div>\n                    <div className=\"col-6 row\">\n                      <div className=\"col-6\">\n                        <strong>Incurred Amount</strong>\n                      </div>\n                      <div className=\"col-1\">:</div>\n                      <div className=\"col-5\">\n                        {amountFormat(data) +\n                          \" \" +\n                          numberWithCommas(data.Incurred)}\n                      </div>\n                    </div>\n                    <div className=\"col-6 row\">\n                      <div className=\"col-6\">\n                        <strong>Disbursed Amount</strong>\n                      </div>\n                      <div className=\"col-1\">:</div>\n                      <div className=\"col-5\">\n                        {amountFormat(data) +\n                          \" \" +\n                          numberWithCommas(data.disbursed_amount)}\n                      </div>\n                    </div>\n                    <div className=\"col-6 row\">\n                      <div className=\"col-6\">\n                        <strong>Paid By</strong>\n                      </div>\n                      <div className=\"col-1\">:</div>\n                      <div className=\"col-5\">{data.Payee}</div>\n                    </div>\n                    <div className=\"col-6 row\">\n                      <div className=\"col-6\">\n                        <strong>Status</strong>\n                      </div>\n                      <div className=\"col-1\">:</div>\n                      <div className=\"col-5\">\n                        {data.Payment == null || data.Payment == \"\"\n                          ? data.Approval\n                          : data.Payment}{\" \"}\n                      </div>\n                    </div>\n                    <div className=\"col-6 row\">\n                      <div className=\"col-6\">\n                        <strong>Receipt(s)</strong>\n                      </div>\n                      <div className=\"col-1\">:</div>\n                      <div className=\"col-5 ellipsis\">\n                        <a\n                          className=\"linkSty\"\n                          onClick={(e) =>\n                            downloadFile(\n                              data.document_id,\n                              data.svn_revision,\n                              data.file_name\n                            )\n                          }\n                          title={data.file_name}\n                        >\n                          {data.file_name}\n                        </a>\n                      </div>\n                    </div>\n                    <div className=\"col-6 row\">\n                      <div className=\"col-6\">\n                        <strong>Approval Workflow</strong>\n                      </div>\n                      <div className=\"col-1\">:</div>\n                      <div className=\"col-5\">\n                        {data.approvalFlow.split(\",\").join(\" >> \").slice(0, -4)}\n                      </div>\n                    </div>\n                    <div className=\"col-6 row\">\n                      <div className=\"col-6\">\n                        <strong>Expense History</strong>\n                      </div>\n                      <div className=\"col-1\">:</div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div\n                style={{\n                  backgroundColor: \"#eee\",\n                  border: \"1px solid #ddd\",\n                  minHeight: \"40px\",\n                  maxHeight: \"100px\",\n                  padding: \"5px 7px\",\n                  overflowY: \"auto\",\n                }}\n                className=\"row h-50\"\n              >\n                {expenseHistory\n                  .filter((d) => d.state != \"Drafted\")\n                  .map((d) => (\n                    <div>\n                      <strong>\n                        {d.state} by {d.firstName} {d.lastName} on{\" \"}\n                        {moment(d.dateCreated).format(\"DD-MMM-YYYY\")}\n                      </strong>\n                      <br />\n                      <div className=\"col-12 row\">\n                        <div className=\"col-6 row\">\n                          <div className=\"col-6\">\n                            <span>Disbursed Amount</span>\n                          </div>\n                          <div className=\"col-1\">:</div>\n                          <div className=\"col-5\">\n                            {amountFormat(data) +\n                              \" \" +\n                              numberWithCommas(d.disbursedAmount)}\n                          </div>\n                        </div>\n                        <div className=\"col-6 row\">\n                          <div className=\"col-6\">\n                            <span>Comment</span>\n                          </div>\n                          <div className=\"col-1\">:</div>\n                          <div className=\"col-5\">\n                            {d.comments == \"\" || d.comments == null\n                              ? \"NA\"\n                              : d.comments}\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  ))}\n              </div>\n            </CModalBody>\n            <CModalFooter>\n              <button\n                className=\"btn btn-primary mx-auto\"\n                onClick={() => setPopUp(false)}\n              >\n                Close\n              </button>\n            </CModalFooter>\n          </CModal>\n        )}\n      </div>\n    );\n  }\n\n  const isBillable = (rowData) => {\n    return selectedRows\n      .map((d) => d.expense_id)\n      .includes(rowData.expense_id) ? (\n      <input\n        type=\"checkbox\"\n        id=\"billable\"\n        defaultChecked={rowData.is_billable}\n        onChange={(e) => onchange(e, rowData)}\n      />\n    ) : rowData.is_billable == false || rowData.is_billable == null ? (\n      \"No\"\n    ) : (\n      \"Yes\"\n    );\n  };\n\n  const disbursedAmountField = (rowData) => {\n    return selectedRows\n      .map((d) => d.expense_id)\n      .includes(rowData.expense_id) ? (\n      <input\n        type=\"text\"\n        id=\"disbursed\"\n        defaultValue={rowData.disbursed_amount}\n        onChange={(e) => onchange(e, rowData)}\n        onKeyDown={(e) => {\n          const key = e.key;\n          const isNumber = /^[0-9]$/.test(key);\n          const isDecimal = key === \".\";\n\n          if (!isNumber && !isDecimal && key !== \"Backspace\") {\n            e.preventDefault();\n          }\n        }}\n      />\n    ) : (\n      <div\n        title={\n          amountFormat(rowData) +\n          \" \" +\n          numberWithCommas(rowData.disbursed_amount)\n        }\n      >\n        {amountFormat(rowData) +\n          \" \" +\n          numberWithCommas(rowData.disbursed_amount)}\n      </div>\n    );\n  };\n\n  const clientAmountField = (rowData) => {\n    return selectedRows\n      .map((d) => d.expense_id)\n      .includes(rowData.expense_id) ? (\n      <input\n        type=\"text\"\n        id=\"client\"\n        defaultValue={rowData.client_amount}\n        onChange={(e) => onchange(e, rowData)}\n        onKeyDown={(e) => {\n          const key = e.key;\n          const isNumber = /^[0-9]$/.test(key);\n          const isDecimal = key === \".\";\n\n          if (!isNumber && !isDecimal && key !== \"Backspace\") {\n            e.preventDefault();\n          }\n        }}\n      />\n    ) : (\n      <div\n        title={\n          amountFormat(rowData) + \" \" + numberWithCommas(rowData.client_amount)\n        }\n      >\n        {amountFormat(rowData) + \" \" + numberWithCommas(rowData.client_amount)}\n      </div>\n    );\n  };\n\n  const approvalIcon = (rowData) => {\n    if (rowData.includes(\"Submitted\")) {\n      return (\n        <span>\n          <BsFillCircleFill style={{ color: \"#ccc\" }} />\n        </span>\n      );\n    } else if (\n      rowData.includes(\"PM Approved\") ||\n      rowData.includes(\"Pending\") ||\n      rowData.includes(\"IT Approved\") ||\n      rowData.includes(\"HR Approved\")\n    ) {\n      return (\n        <span>\n          <BsFillCircleFill style={{ color: \"#CDE6FE\" }} />\n        </span>\n      );\n    } else if (rowData.includes(\"PM Rejected\")) {\n      return (\n        <span>\n          <BsFillCircleFill style={{ color: \"#e54c53\" }} />\n        </span>\n      );\n    } else if (rowData.includes(\"Drafted\")) {\n      return (\n        <span>\n          <BsFillCircleFill style={{ color: \"#EDD4A2\" }} />\n        </span>\n      );\n    } else if (rowData.includes(\"Paid\")) {\n      return (\n        <span>\n          <BsFillCircleFill style={{ color: \"#D9FBB3\" }} />\n        </span>\n      );\n    } else if (rowData.includes(\"Approved To Pay\")) {\n      return (\n        <span>\n          <BsFillCircleFill style={{ color: \"#0080ff\" }} />\n        </span>\n      );\n    } else if (\n      rowData.includes(\"FM Rejected\") ||\n      rowData.includes(\"IT Rejected\") ||\n      rowData.includes(\"HR Rejected\")\n    ) {\n      return (\n        <span>\n          <BsFillCircleFill style={{ color: \"#e54c53\" }} />\n        </span>\n      );\n    } else {\n      return <span></span>;\n    }\n  };\n\n  const [popoverdata, setPopoverData] = useState(\"\");\n\n  const approvalField = (rowData) => {\n    return selectedRows.map((d) => d.expense_id).includes(rowData.expense_id) &&\n      !paymentUsers.includes(parseInt(loggedUserId)) ? (\n      <div>\n        <select onChange={(e) => onchange(e, rowData)} id=\"dropDown\">\n          {rowData.drop_down.map((item) => {\n            const key = Object.keys(item)[0];\n            const label = item[key];\n            return <option value={key}>{label}</option>;\n          })}\n        </select>\n      </div>\n    ) : (\n      <div\n        onMouseOver={(e) => {\n          setAnchorEl(e?.currentTarget);\n          setPopoverData(\n            rowData.approvalFlow.split(\",\").join(\" >> \").slice(0, -4)\n          );\n        }}\n        onMouseLeave={handleClose}\n        className=\"ellipsis\"\n      >\n        {approvalIcon(rowData.Approval)} {rowData.Approval}\n      </div>\n    );\n  };\n  console.log(paymentUsers?.includes(parseInt(loggedUserId)));\n  const paymentsField = (rowData) => {\n    return selectedRows.map((d) => d.expense_id).includes(rowData.expense_id) &&\n      paymentUsers.includes(parseInt(loggedUserId)) ? (\n      <div>\n        <select onChange={(e) => onchange(e, rowData)} id=\"dropDown\">\n          {rowData.drop_down.map((item) => {\n            const key = Object.keys(item)[0];\n            const label = item[key];\n            return <option value={key}>{label}</option>;\n          })}\n        </select>\n      </div>\n    ) : typeof rowData.Payment === \"string\" &&\n      rowData.Payment.trim().length > 0 &&\n      /[a-zA-Z]/.test(rowData.Payment) ? (\n      <span title={rowData.Payment} className=\"ellipsis\">\n        {approvalIcon(rowData.Payment)} {rowData.Payment}\n      </span>\n    ) : (\n      \"\"\n    );\n  };\n\n  const handleSelectionChange = (newSelection) => {\n    setSelectedRows(newSelection);\n  };\n  const Checkbox = (rowData, index) => {\n    return (\n      <>\n        <div>\n          <input\n            className=\"form-check-input\"\n            type=\"checkbox\"\n            id={rowData.id}\n            style={{ height: \"20px\", width: \"20px\", marginLeft: \"5px\" }}\n            checked={selectedRows.some(\n              (item) => item.expense_id === rowData.expense_id\n            )}\n            onChange={(e) => {\n              const newCheckedList = [...isCheckedList];\n              newCheckedList[index] = e.target.checked;\n              setIsCheckedList(newCheckedList);\n\n              rowData.Payment = Object.keys(rowData.drop_down[0])[0];\n              const newSelection = [...selectedRows];\n              if (e.target.checked) {\n                newSelection.push(rowData);\n              } else {\n                const selectionIndex = newSelection.findIndex(\n                  (selectedRowData) =>\n                    selectedRowData.expense_id === rowData.expense_id\n                );\n                if (selectionIndex !== -1) {\n                  newSelection.splice(selectionIndex, 1);\n                }\n              }\n              handleSelectionChange(newSelection);\n            }}\n            disabled={isRowDisabled(rowData)}\n          />\n        </div>\n      </>\n    );\n  };\n  //var list  = [];\n  var [list, setlist] = useState([]);\n  const Checkboxheader = (rowData, index, subRowsData) => {\n    const handleCheckboxChange = (e) => {\n      const isChecked = e.target.checked;\n      setHeaderChecked(isChecked);\n\n      let id = e.target.id;\n\n      let dcc = null;\n\n      if (isChecked) {\n        let isEditData = subRowsData.filter((item) => item.isEdit);\n\n        let ll = list;\n\n        if (isEditData.length != 0) {\n          for (let i = 0; i < isEditData.length; i++) {\n            isEditData[i].Payment = Object.keys(isEditData[i].drop_down[0])[0];\n            ll.push(isEditData[i]);\n            setlist(ll);\n          }\n        }\n\n        let finalLL = ll.map((d) => \"\" + d.id);\n\n        if (count > 0) {\n          if (id.includes(\",\")) {\n            let spltArr = id.split(\",\");\n\n            for (let i = 0; i < spltArr.length; i++) {\n              let ddc = document.getElementById(spltArr[i]);\n              ddc.checked = finalLL.includes(\"\" + spltArr[i]);\n            }\n          } else {\n            dcc = document.getElementById(id);\n            dcc.checked = finalLL.includes(\"\" + id);\n          }\n        }\n        setSelectedRows(() => list);\n      } else {\n        const updatedList = selectedRows.filter(\n          (item) => !subRowsData.includes(item)\n        );\n        setlist(updatedList);\n        setSelectedRows(() => updatedList);\n      }\n      setCount((prev) => prev + 1);\n\n      // Checkbox(rowData, index);\n    };\n\n    return (\n      <>\n        <div className=\"form-check pl-4\">\n          <input\n            className=\"form-check-input\"\n            type=\"checkbox\"\n            id={subRowsData\n              .filter((d) => d.isEdit)\n              .map((d) => d.id)\n              .toString()}\n            style={{ height: \"20px\", width: \"20px\" }}\n            //checked={selectedRows.some(it=>it.stackId === subRowsData[0].id)}\n            checked={\n              selectedRowsData\n                .filter((u) => u.id === subRowsData[0]?.id)\n                .filter((i) => i.isEdit == true).length ===\n                subRowsData.filter((it) => it.isEdit == true).length &&\n              subRowsData.filter((it) => it.isEdit == true).length !== 0\n            }\n            onChange={handleCheckboxChange}\n            disabled={subRowsData.every(isRowDisabled)}\n          />\n        </div>\n      </>\n    );\n  };\n  const commentsField = (rowData) => {\n    return selectedRows\n      .map((d) => d.expense_id)\n      .includes(rowData.expense_id) ? (\n      <textarea\n        id=\"comment\"\n        style={{ resize: \"none\" }}\n        defaultValue={rowData.comments}\n        onChange={(e) => onchange(e, rowData)}\n      />\n    ) : (\n      <div title={rowData.comments} className=\"ellipsis\">\n        {rowData.comments}\n      </div>\n    );\n  };\n\n  useEffect(() => {\n    setSelectedRowsData((prev) => selectedRows);\n  }, [selectedRows]);\n\n  const onchange = (e, rowData) => {\n    const index = selectedRowsData.findIndex(\n      (selectedRowData) => selectedRowData.expense_id === rowData.expense_id\n    );\n\n    const updatedSelectedRowsData = [...selectedRowsData];\n    updatedSelectedRowsData[index] = {\n      ...updatedSelectedRowsData[index],\n      disbursed_amount:\n        e.target.id === \"disbursed\"\n          ? e.target.value\n          : updatedSelectedRowsData[index].disbursed_amount,\n      client_amount:\n        e.target.id === \"client\"\n          ? e.target.value\n          : updatedSelectedRowsData[index].client_amount,\n      comments:\n        e.target.id === \"comment\"\n          ? e.target.value\n          : updatedSelectedRowsData[index].comments,\n      is_billable:\n        e.target.id === \"billable\"\n          ? !updatedSelectedRowsData[index].is_billable\n          : updatedSelectedRowsData[index].is_billable,\n      Payment:\n        e.target.id === \"dropDown\"\n          ? e.target.value\n          : updatedSelectedRowsData[index].Payment,\n    };\n    setSelectedRowsData(updatedSelectedRowsData);\n  };\n\n  const sendSelectedRowsData = (datas) => {\n    let data = selectedRowsData.filter((u) => u.id === datas.stackId);\n    const formattedData = data.map((rowData) => ({\n      expenseId: rowData.expense_id,\n      isBillable: rowData.is_billable == false ? 0 : 1,\n      disbursedAmount: parseFloat(rowData.disbursed_amount),\n      clientAmmount: parseFloat(rowData.client_amount),\n      payment: parseInt(rowData.Payment),\n      comments: rowData.comments,\n      resId: resourceId,\n      stackId: rowData.id,\n    }));\n\n    axios\n      .post(\n        baseUrl + `/ProjectMS/projectExpenses/saveExpenses`,\n        formattedData,\n        {\n          headers: { \"Content-Type\": \"application/json\" },\n        }\n      )\n      .then((res) => {\n        setMessage(true);\n        setTimeout(() => {\n          setMessage(false);\n        }, 3000);\n        setSelectedRows([]);\n        getExpenseReport();\n      })\n      .catch((error) => console.log(error));\n  };\n\n  const saveRowData = () => {\n    const formattedData = {\n      stackId: editRowData.stackId,\n      newStatusId: parseInt(selectedOptionTwo),\n    };\n\n    axios\n      .post(\n        baseUrl + `/ProjectMS/projectExpenses/saveStackExpenses`,\n        formattedData,\n        {\n          headers: { \"Content-Type\": \"application/json\" },\n        }\n      )\n      .then((res) => {\n        setMessage(true);\n        setTimeout(() => {\n          setMessage(false);\n        }, 3000);\n        setEditRowData({});\n        getExpenseReport();\n      })\n      .catch((error) => console.log(error));\n  };\n\n  const cancelRowEdit = (datas) => {\n    const updatedList = selectedRows.filter(\n      (item) => item.id !== datas.stackId\n    );\n    setSelectedRows(updatedList);\n    setlist(updatedList);\n  };\n\n  const handleSelection = (e) => {\n    setSelectedRows(e.value);\n  };\n\n  const generateDropdownLabel = (selectedOptions, allOptions) => {\n    const selectedValues = selectedOptions.map((option) => option.value);\n    const allValues = allOptions.map((item) => item.value);\n\n    if (selectedValues.length === allValues.length) {\n      return \"<< ALL >>\";\n    } else {\n      return selectedOptions.map((option) => option.label).join(\", \");\n    }\n  };\n\n  const isRowDisabled = (rowData) => (rowData.isEdit ? false : true);\n\n  const rowExpansionTemplate = (data) => {\n    return (\n      <>\n        {loaderOne ? <Loader handleAbort={() => setLoaderOne(false)} /> : \"\"}\n        <DataTable\n          value={data.subrows}\n          className=\"primeReactDataTable\"\n          stripedRows\n          sortOrder={1}\n        >\n          {/* {(dataAccess === 1000 || dataAccess === 250) && ( */}\n          <Column\n            style={{ textAlign: \"center\" }}\n            header={(rowData, index) =>\n              Checkboxheader(rowData, index, data.subrows)\n            }\n            body={(rowData, index) => Checkbox(rowData, index)}\n          />\n          {/* )} */}\n          <Column\n            sortable\n            field=\"\"\n            header=\"Name\"\n            body={(rowData) => (\n              <div\n                title={\n                  data.stackId === rowData.id\n                    ? `${data.projectName}(${data.projectCode})`\n                    : \"\"\n                }\n                className=\"ellipsis\"\n              >\n                {data.stackId === rowData.id\n                  ? `${data.projectName}(${data.projectCode})`\n                  : \"\"}\n              </div>\n            )}\n          />\n          <Column\n            sortable\n            field=\"expense_date\"\n            header=\"Date\"\n            body={(rowData) => (\n              <div\n                title={moment(rowData.expense_date).format(\"DD-MMM-yyyy\")}\n                className=\"ellipsis\"\n              >\n                {moment(rowData.expense_date).format(\"DD-MMM-yyyy\")}\n              </div>\n            )}\n          />\n          <Column\n            sortable\n            field=\"Payee\"\n            header=\"Payee\"\n            body={(rowData) => (\n              <div title={rowData.Payee} className=\"ellipsis\">\n                {rowData.Payee}\n              </div>\n            )}\n          />\n          <Column\n            sortable\n            field=\"Expense_Type\"\n            header=\"Expense Type\"\n            body={(rowData) => (\n              <div title={rowData.Expense_Type} className=\"ellipsis\">\n                {rowData.Expense_Type}\n              </div>\n            )}\n          />\n          <Column\n            sortable\n            field=\"is_billable\"\n            style={{ textAlign: \"center\" }}\n            header=\"Billable\"\n            body={isBillable}\n          />\n          <Column\n            sortable\n            field=\"Incurred\"\n            header=\"Incurred\"\n            style={{ textAlign: \"right\" }}\n            body={(rowData) => (\n              <div\n                title={\n                  amountFormat(rowData) +\n                  \" \" +\n                  numberWithCommas(rowData.Incurred)\n                }\n              >\n                {amountFormat(rowData) +\n                  \" \" +\n                  numberWithCommas(rowData.Incurred)}\n              </div>\n            )}\n          />\n          <Column\n            sortable\n            field=\"disbursed_amount\"\n            header=\"Disbursed\"\n            style={{ textAlign: \"right\" }}\n            body={disbursedAmountField}\n          />\n          <Column\n            sortable\n            field=\"client_amount\"\n            header=\"Client\"\n            style={{ textAlign: \"right\" }}\n            body={clientAmountField}\n          />\n          <Column\n            sortable\n            field=\"Approval\"\n            header=\"Approval\"\n            body={approvalField}\n          />\n          <Column\n            sortable\n            field=\"Payment\"\n            header=\"Payment\"\n            body={paymentsField}\n          />\n          <Column\n            sortable\n            field=\"comments\"\n            header=\"Comments\"\n            body={commentsField}\n          />\n          <Column field=\"\" header=\"Details\" body={viewDetails} />\n        </DataTable>\n        {/* {(dataAccess === 1000 || dataAccess === 250) && ( */}\n        <div style={{ display: \"flex\", border: \"1px solid #ECF0F1\" }}>\n          <button\n            style={{ height: \"25px\" }}\n            className=\"btn btn-primary\"\n            data-toggle=\"tooltip\"\n            title=\"Save row\"\n            disabled={\n              selectedRowsData.filter((u) => u.id === data.stackId).length === 0\n            }\n            onClick={() => sendSelectedRowsData(data)}\n          >\n            <FaSave />\n          </button>\n          <button\n            style={{ height: \"25px\" }}\n            className=\"btn btn-primary ms-1 p-1 cancel\"\n            data-toggle=\"tooltip\"\n            title=\"Cancel row editing\"\n            disabled={\n              selectedRowsData.filter((u) => u.id === data.stackId).length === 0\n            }\n            onClick={() => cancelRowEdit(data)}\n          >\n            <ImCross />\n          </button>\n        </div>\n        {/* )} */}\n      </>\n    );\n  };\n\n  return (\n    <div>\n      {message ? (\n        <div className=\"statusMsg success\">\n          <span>\n            <BiCheck />\n            Expense(s) Saved successfully\n          </span>\n        </div>\n      ) : (\n        \"\"\n      )}\n      <>\n        <div className=\"col-md-12\">\n          <div className=\"pageTitle\">\n            <div className=\"childOne\"></div>\n            <div className=\"childTwo\">\n              <h2>Search Expense</h2>\n            </div>\n            <div className=\"childThree\"></div>\n          </div>\n        </div>\n        <ScreenBreadcrumbs\n          routes={routes}\n          currentScreenName={currentScreenName}\n        />\n\n        <div className=\"float-end my-2\">\n          <button\n            type=\"button\"\n            className=\"btn btn-primary\"\n            onClick={() => navigate(\"/stackView\")}\n            title=\"View\"\n          >\n            Stack View\n          </button>\n        </div>\n        <div className=\"group mb-3 customCard\">\n          <div className=\"col-md-12 collapseHeader\">\n            <h2>Search Filters</h2>\n            <div className=\"helpBtn\">\n              <GlobalHelp pdfname={HelpPDFName} name={Headername} />\n            </div>\n            <div\n              onClick={() => {\n                setVisible(!visible);\n\n                visible\n                  ? setCheveronIcon(FaChevronCircleUp)\n                  : setCheveronIcon(FaChevronCircleDown);\n              }}\n            >\n              <span>{cheveronIcon}</span>\n            </div>\n          </div>\n          <CCollapse visible={!visible}>\n            <div className=\"group-content row \">\n              <div className=\"col-md-12 mb-2\">\n                <div className=\"form-group row\">\n                  <label className=\"col-3\">\n                    Search String\n                    <p style={{ fontWeight: \"100\" }}>\n                      (Searches in stack name, project and resource)\n                    </p>\n                  </label>\n                  <span className=\"col-1\">:</span>\n                  <div className=\"col-8\">\n                    <input\n                      type=\"text\"\n                      className=\"form-control\"\n                      id=\"name\"\n                      onChange={(e) => setSearchString(e.target.value)}\n                    />\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"col-md-3 mb-2\">\n                <div className=\"form-group row\">\n                  <label className=\"col-5\" htmlFor=\"country-select\">\n                    Approval Workflow\n                  </label>\n                  <span className=\"col-1 p-0\">:</span>\n                  <div className=\"col-6\">\n                    <MultiSelect\n                      ArrowRenderer={ArrowRenderer}\n                      id=\"roleTypes\"\n                      options={stateDropdown}\n                      hasSelectAll={true}\n                      isLoading={false}\n                      shouldToggleOnHover={false}\n                      disableSearch={false}\n                      value={selectedState}\n                      valueRenderer={generateDropdownLabel}\n                      onChange={(e) => setSelectedState(e)}\n                      disabled={false}\n                    />\n                  </div>\n                </div>\n              </div>\n              <div className=\"col-md-3 mb-2\">\n                <div className=\"form-group row\">\n                  <label className=\"col-5\" htmlFor=\"country-select\">\n                    Payment Workflow\n                  </label>\n                  <span className=\"col-1 p-0\">:</span>\n                  <div className=\"col-6\">\n                    <MultiSelect\n                      ArrowRenderer={ArrowRenderer}\n                      id=\"roleTypes\"\n                      options={paymentDropdown}\n                      hasSelectAll={true}\n                      isLoading={false}\n                      shouldToggleOnHover={false}\n                      disableSearch={false}\n                      value={selectedPayment}\n                      valueRenderer={generateDropdownLabel}\n                      onChange={(e) => setSelectedPayment(e)}\n                      disabled={false}\n                    />\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"col-md-3 mb-2 mt-1\">\n                <div className=\"form-group row \">\n                  <label className=\"col-5\" htmlFor=\"email-input\">\n                    From Date\n                  </label>\n                  <span className=\"col-1 p-0\">:</span>\n                  <div className=\"col-6\">\n                    <DatePicker\n                      selected={startDate}\n                      onChange={(date) => setStartDate(date)}\n                      dateFormat=\"dd-MMM-yyyy\"\n                      placeholderText={\"Billing Start Date\"}\n                      showMonthDropdown\n                      showYearDropdown\n                      dropdownMode=\"select\"\n                      maxDate={endDate}\n                    />\n                  </div>\n                </div>\n              </div>\n              <div className=\"col-md-3 mb-2 mt-1\">\n                <div className=\"form-group row \">\n                  <label className=\"col-5\" htmlFor=\"email-input\">\n                    To Date\n                  </label>\n                  <span className=\"col-1 p-0\">:</span>\n                  <div className=\"col-6\">\n                    <DatePicker\n                      selected={endDate}\n                      dateFormat=\"dd-MMM-yyyy\"\n                      onChange={(date) => setEndDate(date)}\n                      placeholderText={\"Billing Start Date\"}\n                      showMonthDropdown\n                      showYearDropdown\n                      dropdownMode=\"select\"\n                      minDate={startDate}\n                    />\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"col-md-12 col-sm-12 col-xs-12 d-flex align-items-center justify-content-center no-padding center\">\n                <button\n                  type=\"button\"\n                  className=\"btn btn-primary\"\n                  title=\"Search\"\n                  onClick={() => getExpenseReport()}\n                >\n                  <FaSearch /> Search{\" \"}\n                </button>\n              </div>\n            </div>\n          </CCollapse>\n        </div>\n        <div\n          style={{\n            border: \" 1px solid #fff\",\n            borderRadius: \"5px\",\n            margin: \" 5px 0\",\n            padding: \"2px\",\n            backgroundColor: \"rgba(215, 174, 9, 0.1)\",\n            borderColor: \"#d7ae09\",\n            color: \"#d7ae09\",\n            alignItems: \"center\",\n            gap: \"2px\",\n            fontSize: \"13px\",\n          }}\n        >\n          <span className=\"bold\">\n            <SlExclamation /> Note : <br />\n          </span>\n          <div>\n            <li style={{ marginLeft: \"20px\" }}>\n              Hover mouse on expense name to view description.\n            </li>\n            <li style={{ marginLeft: \"20px\" }}>\n              To change status expand the Stack and select checkbox.\n            </li>\n          </div>\n        </div>\n        <div>\n          <div className=\"group customCard\">\n            <div className=\"group-content row\">\n              <div className=\"col-md-12\">\n                <div className=\"flex justify-content-end m-2\">\n                  <label>Search &nbsp;:&nbsp; </label>\n                  <input\n                    value={globalFilterValue}\n                    onChange={onGlobalFilterChange}\n                  />\n                  <RiFileExcel2Line\n                    size=\"1.5em\"\n                    title=\"Export to Excel\"\n                    cursor=\"pointer\"\n                    style={{\n                      color: \"green\",\n                      marginLeft: \"10px\",\n                      marginRight: \"-10px\",\n                    }}\n                    onClick={handleOnExport}\n                  />\n                </div>\n                <div className=\"darkHeader\">\n                  <DataTable\n                    value={data}\n                    className=\"primeReactDataTable \"\n                    showGridlines\n                    stripedRows\n                    expandedRows={expandedRows}\n                    onRowToggle={(e) => setExpandedRows(e.data)}\n                    onRowExpand={onRowExpand}\n                    rowExpansionTemplate={rowExpansionTemplate}\n                    filters={filters}\n                    globalFilterFields={[\n                      \"stackName\",\n                      \"resource\",\n                      \"approval\",\n                      \"projectCode\",\n                      \"projectName\",\n                      \"amt\",\n                      \"payment\",\n                      \"disbursedAmt\",\n                      \"clientAmt\",\n                      \"createdOn\",\n                    ]}\n                    emptyMessage=\"No Expenses\"\n                    paginator\n                    rows={25}\n                    paginationPerPage={5}\n                    paginationRowsPerPageOptions={[5, 15, 25, 50]}\n                    paginationComponentOptions={{\n                      rowsPerPageText: \"Records per page:\",\n                      rangeSeparatorText: \"out of\",\n                    }}\n                    currentPageReportTemplate=\"View {first} - {last} of {totalRecords} \"\n                    paginatorTemplate=\"RowsPerPageDropdown FirstPageLink PrevPageLink CurrentPageReport NextPageLink LastPageLink\"\n                    rowsPerPageOptions={[10, 25, 50]}\n                  >\n                    <Column\n                      expander={allowExpansion}\n                      style={{ width: \"5rem\" }}\n                    />\n                    <Column\n                      sortable\n                      field=\"stackName\"\n                      header=\"Stack\"\n                      body={(rowData) => (\n                        <div title={rowData.stackName}>\n                          <Link\n                            data-toggle=\"tooltip\"\n                            title={rowData.stackName}\n                            to={`/expense/Create/${rowData.stackId}`}\n                            target=\"_blank\"\n                            className=\"linkSty\"\n                            onClick={() => {\n                              //navigate(`/expense/Create/${rowData.stackId}`);\n                              //setbtnState(\"Create\");\n                              dispatch(updateExpenseButtonState(\"Create\"));\n                            }}\n                          >\n                            {rowData.stackName}\n                          </Link>\n                        </div>\n                      )}\n                    />\n                    <Column\n                      sortable\n                      field=\"resource\"\n                      header=\"Resource\"\n                      body={(rowData) => (\n                        <div title={rowData.resource} className=\"ellipsis\">\n                          {rowData.resource}\n                        </div>\n                      )}\n                    />\n                    <Column\n                      sortable\n                      field=\"approval\"\n                      header=\"Approval Status\"\n                      body={approvalStatus}\n                    />\n                    <Column\n                      sortable\n                      field=\"payment\"\n                      header=\"Payment Status\"\n                      body={paymentStatus}\n                    />\n                    <Column\n                      sortable\n                      field=\"projectName\"\n                      header=\"Name\"\n                      body={(rowData) => (\n                        <div title={rowData.projectName} className=\"ellipsis\">\n                          {rowData.projectName}\n                        </div>\n                      )}\n                    />\n                    <Column\n                      sortable\n                      field=\"projectCode\"\n                      header=\"Code\"\n                      body={(rowData) => (\n                        <div title={rowData.projectCode} className=\"ellipsis\">\n                          {rowData.projectCode}\n                        </div>\n                      )}\n                    />\n                    <Column\n                      sortable\n                      field=\"amt\"\n                      header=\"Incurred\"\n                      style={{ textAlign: \"right\" }}\n                      body={(rowData) => (\n                        <div\n                          title={\n                            amountFormat(rowData) +\n                            \" \" +\n                            numberWithCommas(rowData.amt)\n                          }\n                        >\n                          {amountFormat(rowData) +\n                            \" \" +\n                            numberWithCommas(rowData.amt)}\n                        </div>\n                      )}\n                    />\n                    <Column\n                      sortable\n                      field=\"disbursedAmt\"\n                      header=\"Disbursed\"\n                      style={{ textAlign: \"right\" }}\n                      body={(rowData) => (\n                        <div\n                          title={\n                            amountFormat(rowData) +\n                            \" \" +\n                            numberWithCommas(rowData.disbursedAmt)\n                          }\n                        >\n                          {amountFormat(rowData) +\n                            \" \" +\n                            numberWithCommas(rowData.disbursedAmt)}\n                        </div>\n                      )}\n                    />\n                    <Column\n                      sortable\n                      field=\"clientAmt\"\n                      header=\"Client\"\n                      style={{ textAlign: \"right\" }}\n                      body={(rowData) => (\n                        <div\n                          title={\n                            amountFormat(rowData) +\n                            \" \" +\n                            numberWithCommas(rowData.clientAmt)\n                          }\n                        >\n                          {amountFormat(rowData) +\n                            \" \" +\n                            numberWithCommas(rowData.clientAmt)}\n                        </div>\n                      )}\n                    />\n                    <Column\n                      sortable\n                      field=\"createdOn\"\n                      header=\"Created On\"\n                      body={(rowData) => (\n                        <div\n                          title={moment(rowData.createdOn).format(\n                            \"DD-MMM-yyyy\"\n                          )}\n                        >\n                          {moment(rowData.createdOn).format(\"DD-MMM-yyyy\")}\n                        </div>\n                      )}\n                    />\n                    <Column\n                      field=\"\"\n                      header=\"Actions\"\n                      style={{ textAlign: \"center\" }}\n                      body={actionField}\n                    />\n                  </DataTable>\n                </div>\n                {/* {(dataAccess === 1000 || dataAccess === 250) && ( */}\n                <div style={{ display: \"flex\", border: \"1px solid #ECF0F1\" }}>\n                  <button\n                    className=\"btn btn-primary ms-1 p-1\"\n                    data-toggle=\"tooltip\"\n                    title=\"Save row\"\n                    onClick={saveRowData}\n                    disabled={isEditClicked}\n                  >\n                    <FaSave />\n                    Save\n                  </button>\n                  <button\n                    className=\"btn btn-primary ms-1 p-1\"\n                    data-toggle=\"tooltip\"\n                    title=\"Cancel row editing\"\n                    onClick={cancelRowEditOuter}\n                    disabled={isEditClicked}\n                  >\n                    <ImCross fontSize={\"11px\"} />\n                    Cancel\n                  </button>\n                </div>\n                {/* )} */}\n              </div>\n            </div>\n          </div>\n        </div>\n      </>\n      {popUp ? (\n        <ExpensePopup\n          setPopUp={setPopUp}\n          data={popUpData}\n          popUp={popUp}\n          totalData={data}\n        />\n      ) : (\n        \"\"\n      )}\n      {anchorEl && (\n        <ProjectExpensePopOver\n          handleClose={handleClose}\n          anchorEl={anchorEl}\n          rowData={popoverdata}\n        />\n      )}\n      {loader ? <Loader handleAbort={() => setLoader(false)} /> : \"\"}\n      {documentLoader ? (\n        <Loader handleAbort={() => setDocumentLoader(false)} />\n      ) : (\n        \"\"\n      )}\n    </div>\n  );\n}\n\nexport default ExpensesSearch;\n","import React, { useEffect, useState, useRef } from \"react\";\nimport axios from \"axios\";\nimport { AiFillEdit } from \"react-icons/ai\";\nimport { AiFillSave } from \"react-icons/ai\";\nimport { AiFillCloseCircle } from \"react-icons/ai\";\nimport { environment } from \"../../../environments/environment\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { AiFillWarning } from \"react-icons/ai\";\nimport { BiCheck } from \"react-icons/bi\";\nimport { Pagination } from \"@mui/lab\";\nimport { MdOutlineAdd } from \"react-icons/md\";\nimport { TfiSave } from \"react-icons/tfi\";\nimport { ImCross } from \"react-icons/im\";\nimport Loader from \"../../Loader/Loader\";\nimport \"./ExpenseTypes.scss\";\nimport ScreenBreadcrumbs from \"../../Common/ScreenBreadcrumbs\";\nimport { FaPlus, FaSave } from \"react-icons/fa\";\n\nfunction ExpenseTypes() {\n  const [respData, setRespData] = useState([]);\n  const [state, setState] = useState();\n  const [SupervisorValue, setSupervisorValue] = useState(\"\");\n  const [PMValue, setPMValue] = useState();\n  const [HRValue, setHRValue] = useState();\n  const [ITValue, setITValue] = useState();\n  const [LDValue, setLDValue] = useState();\n  const [FinanceValue, setFinanceValue] = useState();\n  const [ProjectValue, setProjectValue] = useState();\n  const [BUValue, setBUValue] = useState();\n  const [OrgValue, setOrgValue] = useState();\n  const [attachmentValue, setattachmentValue] = useState();\n  const [addMessage, setAddMessage] = useState(false);\n  const [editMessage, setEditMessage] = useState(false);\n  const [buttonDisabled, setButtonDisabled] = useState(true);\n  const [valid, setValid] = useState(false);\n  const [displayTable, setDisplayTable] = useState(null);\n  const [editedValue, setEditedValue] = useState(-1);\n  const [displayRowEdit, setDisplayRowEdit] = useState(false);\n  const baseUrl = environment.baseUrl;\n  const [validationMsg, setValidationMsg] = useState(false);\n  const [PageMessageValidation, setPageMessageValidation] = useState(false);\n  const [validateExpenselevels, setValidateExpenselevels] = useState(false);\n\n  const [lkupNameValue, setLkupNameValue] = useState(\"\");\n  const [ActiveValue, setActiveValue] = useState(\"\");\n  const [Supervisordisable, setSupervisordisable] = useState(\"\");\n  const [PMDisable, setPMdisable] = useState(\"\");\n  const [loader, setLoader] = useState(false);\n\n  const initialPage = 1;\n  const abortController = useRef(null);\n\n  const [currentPage, setCurrentPage] = useState(initialPage);\n\n  const loggedUserId = localStorage.getItem(\"resId\");\n  const [routes, setRoutes] = useState([]);\n  const [dataAccess, setDataAccess] = useState([]);\n\n  let textContent = \"Time & Expenses\";\n  let currentScreenName = [\"Expenses\", \"Add Expense Types\"];\n\n  const [getData, setGetData] = useState(19);\n  const [currentItem, setCurrentItem] = useState(0);\n  const [pageCount, setpageCount] = useState(1);\n  const [itemOffSet, setItemOffSet] = useState(0);\n  const itemPerPage = getData;\n  const [startIndex, setStartIndex] = useState(0);\n  const [endIndex, setEndIndex] = useState(itemPerPage);\n  const [finalRow, setFinalRow] = useState(itemPerPage);\n  const totalRows = respData.length;\n  const Firstrow = itemOffSet + 1;\n  useEffect(() => {\n    const startIndex = (currentPage - 1) * itemPerPage;\n    const endIndex = startIndex + itemPerPage;\n    setItemOffSet(startIndex);\n    setStartIndex(startIndex);\n    setEndIndex(endIndex);\n  }, [currentPage, itemPerPage]);\n  const handlePageClick = (event, value) => {\n    setCurrentPage(value);\n  };\n\n  useEffect(() => {\n    const newOffSet = (currentPage - 1) * itemPerPage;\n    setItemOffSet(newOffSet);\n  }, [currentPage, itemPerPage]);\n\n  useEffect(() => {\n    const endOffset = itemOffSet + itemPerPage;\n    const length = respData.slice(itemOffSet, endOffset);\n\n    if (endOffset > totalRows) {\n      setFinalRow(totalRows);\n    } else {\n      setFinalRow(endOffset);\n    }\n    setCurrentItem(length);\n    setpageCount(Math.ceil(respData.length / itemPerPage));\n    displayTableFnc(length);\n  }, [respData, itemOffSet, itemPerPage, getData, pageCount]);\n\n  /////breadcrumbs\n  const getMenus = () => {\n    // setMenusData\n\n    axios({\n      method: \"GET\",\n      url: baseUrl + `/CommonMS/master/getMenus?loggedUserId=${loggedUserId}`,\n    }).then((resp) => {\n      let data = resp.data;\n\n      data.forEach((item) => {\n        if (item.display_name === textContent) {\n          setRoutes([item]);\n        }\n      });\n    });\n  };\n\n  useEffect(() => {\n    getMenus();\n  }, []);\n\n  const getDocumentsPermission = () => {\n    axios({\n      method: \"GET\",\n      url:\n        baseUrl +\n        // `/CommonMS/master/getMenus?loggedUserId=${loggedUserId}`,\n        `/CommonMS/master/getBenchMtericsMenus?loggedUserId=${loggedUserId}&Cont=Expense`,\n    }).then((resp) => {\n      let data = resp.data;\n      data.forEach((item) => {\n        if (item.display_name === textContent) {\n          setRoutes([item]);\n        }\n      });\n\n      const ExpenseSubMenu = data.find(\n        (item) => item.display_name === \"Expense Types\"\n      );\n      // .subMenus.find((subMenu) => subMenu.display_name === \"Fixed Price - Create\");\n\n      const accessLevel = ExpenseSubMenu ? ExpenseSubMenu.access_level : null;\n      setDataAccess(accessLevel);\n    });\n  };\n  useEffect(() => {\n    getDocumentsPermission();\n  }, []);\n\n  ///////////axios for getting Details in to the table/////////////////////\n  const getStakeHoldersDetails = () => {\n    setLoader(false);\n    abortController.current = new AbortController();\n\n    axios({\n      method: \"get\",\n      url: baseUrl + `/timeandexpensesms/ExpenseTypes/getData`,\n      signal: abortController.current.signal,\n    }).then((resp) => {\n      setRespData(resp.data);\n      setLoader(false);\n      setTimeout(() => {\n        setLoader(false);\n      }, 2000);\n    });\n  };\n\n  const handleAbort = () => {\n    abortController.current && abortController.current.abort();\n    setLoader(false);\n  };\n\n  useEffect(() => {\n    getStakeHoldersDetails();\n  }, []);\n\n  useEffect(() => {\n    displayTableFnc();\n  }, [\n    ProjectValue,\n    BUValue,\n    SupervisorValue,\n    lkupNameValue,\n    PMValue,\n    ITValue,\n    HRValue,\n    LDValue,\n    FinanceValue,\n    OrgValue,\n    attachmentValue,\n    ActiveValue,\n  ]);\n  useEffect(() => {\n    displayTableFnc();\n  }, [displayRowEdit, respData, editedValue]);\n  const initialData = []; // Empty array for initial data\n\n  const addRowEditFnc = () => {\n    setDisplayRowEdit(true);\n    if (!valid) {\n      setValid(true);\n      setButtonDisabled(false);\n    }\n    setCurrentPage(initialPage); // Update currentPage to initialPage value\n\n    // Reset the state variables for input fields to empty values\n    setLkupNameValue(\"\");\n    setSupervisorValue(\"\");\n    setPMValue(\"\");\n    setHRValue(\"\");\n    setITValue(\"\");\n    setLDValue(\"\");\n    setFinanceValue(\"\");\n    setProjectValue(\"\");\n    setBUValue(\"\");\n    setOrgValue(\"\");\n    setattachmentValue(\"\");\n    setActiveValue(\"\");\n\n    setRespData([...initialData, ...respData]);\n\n    // Reset the pagination state variables\n    setItemOffSet(0);\n    setStartIndex(0);\n    setEndIndex(itemPerPage);\n    setFinalRow(itemPerPage);\n  };\n\n  // ...\n\n  useEffect(() => {\n    const endOffset = itemOffSet + itemPerPage;\n    const length = respData.slice(itemOffSet, endOffset);\n\n    if (endOffset > totalRows) {\n      setFinalRow(totalRows);\n    } else {\n      setFinalRow(endOffset);\n    }\n    setCurrentItem(length);\n    setpageCount(Math.ceil(respData.length / itemPerPage));\n    displayTableFnc(length);\n  }, [respData, itemOffSet, itemPerPage, pageCount]);\n\n  const closeEditedRowFnc = () => {\n    setDisplayRowEdit((prev) => false);\n    setEditedValue(-1);\n    setValidationMsg(false);\n    setPageMessageValidation(false);\n    setValidateExpenselevels(false);\n    setValid(false);\n    setButtonDisabled(true);\n  };\n\n  const editHandler = (element, index) => {\n    setEditedValue(index);\n    setState(element);\n    setValid(true);\n    setButtonDisabled(false);\n  };\n  let tabHeaders = [\n    \"lkupName\",\n    \"Supervisor\",\n    \"PM\",\n    \"IT\",\n    \"HR\",\n    \"LD\",\n    \"Finance\",\n    \"Project\",\n    \"BU\",\n    \"Org\",\n    \"attachment\",\n    \"isActive\",\n    \"action\",\n  ];\n  function getTitle(value) {\n    if (value === 1) {\n      return \" Approval is required\";\n    } else if (value === 0) {\n      return \" Approval is not required\";\n    } else if (value == true) {\n      return \"True\";\n    } else if (value === false) {\n      return \" False\";\n    } else {\n      return value;\n    }\n  }\n\n  const displayTableFnc = () => {\n    setDisplayTable(() => {\n      let data = respData;\n\n      let fData = [];\n      if (displayRowEdit) {\n        fData = [{ ...tabHeaders }, ...data];\n      } else {\n        fData = respData;\n      }\n\n      const currentData = fData.slice(startIndex, endIndex);\n      return currentData.length === 0 ? (\n        <tr>\n          <td colSpan={17} align=\"center\">\n            No Records Found\n          </td>\n        </tr>\n      ) : (\n        currentData.map((element, index) => {\n          let tabData = [];\n          if (\n            (displayRowEdit && index === 0) ||\n            (editedValue !== -1 && editedValue === index)\n          ) {\n            tabHeaders.forEach((inEle, inInd) => {\n              if (inEle === \"action\") {\n                tabData.push(\n                  <td\n                    key={inInd}\n                    style={{\n                      textAlign: \"center\",\n                    }}\n                    title={element[inEle]}\n                  >\n                    <AiFillSave\n                      title={\"Save\"}\n                      style={{ cursor: \"pointer\" }}\n                      onClick={(e) => {\n                        saveExpenseTypes();\n                      }}\n                    />{\" \"}\n                    &nbsp;\n                    <AiFillCloseCircle\n                      title={\"Cancel\"}\n                      style={{ cursor: \"pointer\" }}\n                      onClick={(e) => {\n                        closeEditedRowFnc();\n                      }}\n                    />\n                  </td>\n                );\n              } else if (inEle === \"lkupName\") {\n                tabData.push(\n                  <td>\n                    <input\n                      id={inEle}\n                      type=\"text\"\n                      className=\"textBxBrdrRd inputCss validateErr \"\n                      defaultValue={element[\"lkupName\"]}\n                      onChange={(e) => {\n                        setLkupNameValue(() => ({\n                          [\"lkupName\"]: e.target.value,\n                        }));\n                      }}\n                    />\n                  </td>\n                );\n              } else if (inEle === \"Supervisor\") {\n                tabData.push(\n                  <td\n                    key={inInd}\n                    style={{\n                      textAlign: \"center\",\n                    }}\n                    title={element[inEle]}\n                  >\n                    <input\n                      type=\"checkbox\"\n                      id={inEle}\n                      className=\"textBxBrdrRd inputCss validateErr disabledIcon\"\n                      defaultChecked={element[\"Supervisor\"] == 1 ? true : false}\n                      disabled={\n                        PMValue?.PM == undefined && element[\"PM\"] == 1\n                          ? true\n                          : PMDisable == true\n                          ? true\n                          : false\n                      }\n                      onChange={(e) => {\n                        setSupervisordisable(e.target.checked);\n                        setSupervisorValue(() => ({\n                          [\"Supervisor\"]: e.target.checked,\n                        }));\n                      }}\n                    />\n                  </td>\n                );\n              } else if (inEle === \"PM\") {\n                tabData.push(\n                  <td\n                    key={inInd}\n                    style={{\n                      textAlign: \"center\",\n                    }}\n                    title={element[inEle]}\n                  >\n                    <input\n                      type=\"checkbox\"\n                      id={inEle}\n                      disabled={\n                        SupervisorValue?.Supervisor == undefined &&\n                        element[\"Supervisor\"] == 1\n                          ? true\n                          : Supervisordisable == true\n                          ? true\n                          : false\n                      }\n                      className=\"textBxBrdrRd inputCss validateErr disabledIcon\"\n                      defaultChecked={element[\"PM\"] == 1 ? true : false}\n                      onChange={(e) => {\n                        setPMdisable(e.target.checked);\n                        setPMValue(() => ({\n                          [\"PM\"]: e.target.checked,\n                        }));\n                      }}\n                    />\n                  </td>\n                );\n              } else if (inEle === \"IT\") {\n                tabData.push(\n                  <td\n                    id={inEle}\n                    key={inInd}\n                    style={{\n                      textAlign: \"center\",\n                    }}\n                    title={element[inEle]}\n                  >\n                    <input\n                      type=\"checkbox\"\n                      id={inEle}\n                      className=\"textBxBrdrRd inputCss editableSelectHeight validateErr\"\n                      defaultChecked={element[\"IT\"] == 1 ? true : false}\n                      onChange={(e) => {\n                        setITValue(() => ({\n                          [\"IT\"]: e.target.checked,\n                        }));\n                      }}\n                    />\n                  </td>\n                );\n              } else if (inEle === \"HR\") {\n                tabData.push(\n                  <td\n                    id={inEle}\n                    key={inInd}\n                    style={{\n                      textAlign: \"center\",\n                    }}\n                    title={element[inEle]}\n                  >\n                    <input\n                      type=\"checkbox\"\n                      id={inEle}\n                      className=\"textBxBrdrRd inputCss editableSelectHeight validateErr\"\n                      defaultChecked={element[\"HR\"] == 1 ? true : false}\n                      onChange={(e) => {\n                        setHRValue(() => ({\n                          [\"HR\"]: e.target.checked,\n                        }));\n                      }}\n                    />\n                  </td>\n                );\n              } else if (inEle === \"LD\") {\n                tabData.push(\n                  <td\n                    id={inEle}\n                    key={inInd}\n                    style={{\n                      textAlign: \"center\",\n                    }}\n                    title={element[inEle]}\n                  >\n                    <input\n                      type=\"checkbox\"\n                      id={inEle}\n                      className=\"textBxBrdrRd inputCss editableSelectHeight validateErr\"\n                      defaultChecked={element[\"LD\"] == 1 ? true : false}\n                      onChange={(e) => {\n                        setLDValue(() => ({\n                          [\"LD\"]: e.target.checked,\n                        }));\n                      }}\n                    />\n                  </td>\n                );\n              } else if (inEle === \"Finance\") {\n                tabData.push(\n                  <td\n                    id={inEle}\n                    key={inInd}\n                    style={{\n                      textAlign: \"center\",\n                    }}\n                    title={element[inEle]}\n                  >\n                    <input\n                      type=\"checkbox\"\n                      id={inEle}\n                      className=\"textBxBrdrRd inputCss editableSelectHeight validateErr\"\n                      defaultChecked={element[\"Finance\"] == 1 ? true : false}\n                      onChange={(e) => {\n                        setFinanceValue(() => ({\n                          [\"Finance\"]: e.target.checked,\n                        }));\n                      }}\n                    />\n                  </td>\n                );\n              } else if (inEle === \"Project\") {\n                tabData.push(\n                  <td\n                    id={inEle}\n                    key={inInd}\n                    style={{\n                      textAlign: \"center\",\n                    }}\n                    title={element[inEle]}\n                  >\n                    <input\n                      type=\"checkbox\"\n                      id={inEle}\n                      className=\"textBxBrdrRd inputCss editableSelectHeight validateErr\"\n                      defaultChecked={element[\"Project\"] == 1 ? true : false}\n                      onChange={(e) => {\n                        setProjectValue((prevValue) => ({\n                          ...prevValue,\n                          Project: e.target.checked,\n                        }));\n                      }}\n                    />\n                  </td>\n                );\n              } else if (inEle === \"BU\") {\n                tabData.push(\n                  <td\n                    id={inEle}\n                    key={inInd}\n                    style={{\n                      textAlign: \"center\",\n                    }}\n                    title={element[inEle]}\n                  >\n                    <input\n                      type=\"checkbox\"\n                      id={inEle}\n                      className=\"textBxBrdrRd inputCss editableSelectHeight validateErr\"\n                      defaultChecked={element[\"BU\"] === 1 ? true : false}\n                      onChange={(e) => {\n                        setBUValue(() => ({\n                          [\"BU\"]: e.target.checked,\n                        }));\n                      }}\n                    />\n                  </td>\n                );\n              } else if (inEle === \"Org\") {\n                tabData.push(\n                  <td\n                    id={inEle}\n                    key={inInd}\n                    style={{\n                      textAlign: \"center\",\n                    }}\n                    title={element[inEle]}\n                  >\n                    <input\n                      type=\"checkbox\"\n                      id={inEle}\n                      className=\"textBxBrdrRd inputCss editableSelectHeight validateErr\"\n                      defaultChecked={element[\"Org\"] == 1 ? true : false}\n                      onChange={(e) => {\n                        setOrgValue(() => ({\n                          [\"Org\"]: e.target.checked,\n                        }));\n                      }}\n                    />\n                  </td>\n                );\n              } else if (inEle === \"attachment\") {\n                tabData.push(\n                  <td\n                    id={inEle}\n                    key={inInd}\n                    style={{\n                      textAlign: \"center\",\n                    }}\n                    title={element[inEle]}\n                  >\n                    <input\n                      type=\"checkbox\"\n                      id={inEle}\n                      className=\"textBxBrdrRd inputCss editableSelectHeight validateErr\"\n                      defaultChecked={element[\"attachment\"] == 1 ? true : false}\n                      onChange={(e) => {\n                        setattachmentValue(() => ({\n                          [\"attachment\"]: e.target.checked,\n                        }));\n                      }}\n                    />\n                  </td>\n                );\n              } else if (inEle === \"isActive\") {\n                tabData.push(\n                  <td\n                    id={inEle}\n                    key={inInd}\n                    style={{\n                      textAlign: \"center\",\n                    }}\n                    title={element[inEle]}\n                  >\n                    <select\n                      id={inEle}\n                      onChange={(e) => {\n                        setActiveValue(e.target.value);\n                      }}\n                    >\n                      <option value=\"1\" selected={element[\"isActive\"] == true}>\n                        True\n                      </option>\n                      <option value=\"0\" selected={element[\"isActive\"] == false}>\n                        False\n                      </option>\n                    </select>\n                  </td>\n                );\n              } else {\n                tabData.push(<td id={inEle}> {element[inEle]}</td>);\n              }\n            });\n          } else {\n            tabHeaders.forEach((inEle, inInd) => {\n              if (inEle == \"action\") {\n                {\n                  // dataAccess === 1000 &&\n                  tabData.push(\n                    <td>\n                      <div align=\"center\">\n                        <span>\n                          <AiFillEdit\n                            style={{ cursor: \"pointer\" }}\n                            title={\"Edit\"}\n                            className=\"pointerCursor\"\n                            onClick={(e) => {\n                              editHandler(element, index);\n                            }}\n                          />\n                        </span>\n                      </div>\n                    </td>\n                  );\n                }\n              } else {\n                tabData.push(\n                  <td\n                    align={inInd > 11 ? \"left\" : inInd > 0 ? \"center\" : \"left\"}\n                    title={getTitle(element[inEle])}\n                  >\n                    {(() => {\n                      switch (element[inEle]) {\n                        case 1:\n                          return \"YES\";\n                        case 0:\n                          return \"X\";\n                        case true:\n                          return \"True\";\n                        case false:\n                          return \"False\";\n                        default:\n                          return String(element[inEle]).trim();\n                      }\n                    })()}\n                  </td>\n                );\n              }\n            });\n          }\n          return <tr key={index}>{tabData}</tr>;\n        })\n      );\n    });\n  };\n\n  const saveExpenseTypes = () => {\n    const data = {\n      id: state?.id,\n      lkup_name:\n        lkupNameValue?.lkupName == undefined\n          ? state?.lkupName\n          : lkupNameValue?.lkupName,\n      is_active:\n        ActiveValue == undefined || ActiveValue == \"\" || ActiveValue == null\n          ? state?.isActive == true\n            ? 1\n            : 0\n          : ActiveValue == true\n          ? 1\n          : 0,\n      is_attachment:\n        attachmentValue?.attachment == undefined\n          ? state?.attachment\n          : attachmentValue?.attachment === true\n          ? 1\n          : 0,\n      sort_order: 1,\n      is_bu:\n        BUValue?.BU == undefined ? state?.BU : BUValue?.BU === true ? 1 : 0,\n      is_org:\n        OrgValue?.Org == undefined\n          ? state?.Org\n          : OrgValue?.Org === true\n          ? 1\n          : 0,\n      is_project:\n        ProjectValue?.Project == undefined\n          ? state?.Project\n          : ProjectValue?.Project === true\n          ? 1\n          : 0,\n      is_editable: 1,\n      Supervisor:\n        SupervisorValue?.Supervisor == undefined\n          ? state?.Supervisor\n          : SupervisorValue?.Supervisor == true\n          ? 1\n          : 0,\n      Finance:\n        FinanceValue?.Finance == undefined\n          ? state?.Finance\n          : FinanceValue?.Finance == true\n          ? 1\n          : 0,\n      PM: PMValue?.PM == undefined ? state?.PM : PMValue?.PM === true ? 1 : 0,\n      IT: ITValue?.IT == undefined ? state?.IT : ITValue?.IT === true ? 1 : 0,\n      HR: HRValue?.HR == undefined ? state?.HR : HRValue?.HR === true ? 1 : 0,\n      LD: LDValue?.LD == undefined ? state?.LD : LDValue?.LD === true ? 1 : 0,\n    };\n\n    if ([undefined, \"\"].includes(data.lkup_name)) {\n      setValidationMsg(true);\n      return;\n    }\n\n    let secondValidation = [\n      data.Supervisor,\n      data.Finance,\n      data.PM,\n      data.IT,\n      data.HR,\n      data.LD,\n    ];\n\n    if (secondValidation.includes(1) == false) {\n      setPageMessageValidation(true);\n      setValidationMsg(false);\n\n      return;\n    }\n\n    let thirdValidation = [data.is_bu, data.is_org, data.is_project];\n\n    if (thirdValidation.includes(1) == false) {\n      setValidateExpenselevels(true);\n      setPageMessageValidation(false);\n      setValidationMsg(false);\n      return;\n    }\n\n    if (editedValue !== -1) {\n      axios({\n        method: \"post\",\n        url: baseUrl + `/timeandexpensesms/ExpenseTypes/postingdata`,\n        data: data,\n      }).then((response) => {\n        getStakeHoldersDetails();\n        setDisplayRowEdit(false);\n        setValidationMsg(false);\n        setPageMessageValidation(false);\n        setEditMessage(true);\n        setTimeout(() => {\n          setEditMessage(false);\n        }, 3000);\n        setEditedValue(-1);\n        setValidateExpenselevels(false);\n        setValid(false);\n        setButtonDisabled(true);\n        setLkupNameValue(\"\");\n        setattachmentValue(\"\");\n        setBUValue(\"\");\n        setOrgValue(\"\");\n        setProjectValue(\"\");\n        setSupervisorValue(\"\");\n        setFinanceValue();\n        setPMValue();\n        setITValue();\n        setHRValue();\n        setLDValue();\n        setPMdisable();\n        setSupervisordisable(\"\");\n        setState();\n      });\n    }\n    if (displayRowEdit == true) {\n      axios({\n        method: \"post\",\n        url: baseUrl + `/timeandexpensesms/ExpenseTypes/postingdata`,\n\n        data: {\n          lkup_name: lkupNameValue?.lkupName,\n          is_active: ActiveValue == \"\" ? 1 : ActiveValue,\n          is_attachment: attachmentValue?.attachment === true ? 1 : 0,\n          sort_order: 1,\n          is_bu: BUValue?.BU === true ? 1 : 0,\n          is_org: OrgValue?.Org === true ? 1 : 0,\n          is_project: ProjectValue?.Project === true ? 1 : 0,\n          is_editable: 1,\n          Supervisor: SupervisorValue?.Supervisor === true ? 1 : 0,\n          Finance: FinanceValue?.Finance == true ? 1 : 0,\n          PM: PMValue?.PM === true ? 1 : 0,\n          IT: ITValue?.IT === true ? 1 : 0,\n          HR: HRValue?.HR === true ? 1 : 0,\n          LD: LDValue?.LD === true ? 1 : 0,\n        },\n      }).then((response) => {\n        getStakeHoldersDetails();\n        setDisplayRowEdit(false);\n        setEditedValue(-1);\n        setValidationMsg(false);\n        setValidateExpenselevels(false);\n        setAddMessage(true);\n        setTimeout(() => {\n          setAddMessage(false);\n        }, 3000);\n        setValid(false);\n        setButtonDisabled(true);\n        setLkupNameValue(\"\");\n        setActiveValue(\"\");\n        setattachmentValue(\"\");\n        setBUValue(\"\");\n        setOrgValue(\"\");\n        setProjectValue(\"\");\n        setSupervisorValue(\"\");\n        setFinanceValue(\"\");\n        setPMValue(\"\");\n        setITValue(\"\");\n        setHRValue(\"\");\n        setLDValue(\"\");\n        setPageMessageValidation(false);\n        setPMdisable(\"\");\n        setSupervisordisable(\"\");\n      });\n    }\n  };\n\n  return (\n    <div>\n      <div className=\"col-md-12  mt-2\">\n        <div className=\"pageTitle\">\n          <div className=\"childOne\"></div>\n          <div className=\"childTwo\">\n            <h2>Add Expense Types</h2>\n          </div>\n          <div className=\"childThree\"></div>\n        </div>\n      </div>\n      <ScreenBreadcrumbs\n        routes={routes}\n        currentScreenName={currentScreenName}\n      />\n\n      {addMessage ? (\n        <div className=\"statusMsg success\">\n          <BiCheck />\n          {\"Expenses Saved Successfully\"}\n        </div>\n      ) : (\n        \"\"\n      )}\n      {editMessage ? (\n        <div className=\"statusMsg success\">\n          <BiCheck />\n          {\"Expenses Updated Successfully\"}\n        </div>\n      ) : (\n        \"\"\n      )}\n      {validationMsg ? (\n        <div className=\"statusMsg error\">\n          <span>\n            <AiFillWarning />\n            &nbsp;\n            {\"Please provide Expense Name\"}\n          </span>\n        </div>\n      ) : (\n        \"\"\n      )}\n      {PageMessageValidation ? (\n        <div className=\"statusMsg error\">\n          <span>\n            <AiFillWarning />\n            &nbsp;\n            {\"Please provide atleast one WorkFlow\"}\n          </span>\n        </div>\n      ) : (\n        \"\"\n      )}\n      {validateExpenselevels ? (\n        <div className=\"statusMsg error\">\n          <span>\n            <AiFillWarning />\n            &nbsp;\n            {\"Please provide atleast one Expense Type Levels\"}\n          </span>\n        </div>\n      ) : (\n        \"\"\n      )}\n\n      <div className=\" customCard \">\n        <div className=\"darkHeader\">\n          <div className=\"col-md-12 no-padding\">\n            {loader ? <Loader handleAbort={handleAbort} /> : \"\"}\n            <table className=\"table table-bordered table-striped expenseTypeTable primeReactDataTable\">\n              <thead>\n                <tr>\n                  <th rowSpan={2} style={{ textAlign: \"center\" }}>\n                    Expense\n                  </th>\n                  <th colSpan={6} style={{ textAlign: \"center\" }}>\n                    Workflow Approvals\n                  </th>\n                  <th colSpan={3} style={{ textAlign: \"center\" }}>\n                    Expense Type Levels\n                  </th>\n                  <th rowSpan={2} style={{ textAlign: \"center\" }}>\n                    Attachment\n                  </th>\n                  <th rowSpan={2} style={{ textAlign: \"center\" }}>\n                    Is Active\n                  </th>\n                  {/* {dataAccess == 1000 && ( */}\n                  <th rowSpan={2} style={{ textAlign: \"center\" }}>\n                    Action\n                  </th>\n                  {/* )} */}\n                </tr>\n                <tr>\n                  <th className=\"pointerCursor\" style={{ textAlign: \"center\" }}>\n                    Supervisor\n                  </th>\n                  <th className=\"pointerCursor\" style={{ textAlign: \"center\" }}>\n                    PM\n                  </th>\n                  <th className=\"pointerCursor\" style={{ textAlign: \"center\" }}>\n                    IT\n                  </th>\n                  <th className=\"pointerCursor\" style={{ textAlign: \"center\" }}>\n                    HR\n                  </th>\n                  <th className=\"pointerCursor\" style={{ textAlign: \"center\" }}>\n                    L&D\n                  </th>\n                  <th className=\"pointerCursor\" style={{ textAlign: \"center\" }}>\n                    Finance\n                  </th>\n                  <th className=\"pointerCursor\" style={{ textAlign: \"center\" }}>\n                    Project\n                  </th>\n                  <th className=\"pointerCursor\" style={{ textAlign: \"center\" }}>\n                    BU\n                  </th>\n                  <th className=\"pointerCursor\" style={{ textAlign: \"center\" }}>\n                    Org\n                  </th>\n                </tr>\n         \n              </thead>\n              <tbody>\n              {displayTable}\n              </tbody>\n            </table>\n          </div>\n        </div>\n        <div\n          className=\"col-md-6 pagination justify-content-center\"\n          style={{ marginLeft: \"283px\" }}\n        >\n          <label style={{ align: \"left\" }}>\n            <Pagination\n              count={Math.ceil(respData.length / itemPerPage)}\n              page={currentPage}\n              onChange={handlePageClick}\n              showFirstButton\n              showLastButton\n            />\n          </label>\n        </div>\n\n        {/* {dataAccess == 1000 && ( */}\n        <>\n          <div className=\"form-group col-md-2 btn-container-events center my-3\">\n            <button\n              className=\"btn btn-primary\"\n              disabled={valid}\n              title={\"Add new row\"}\n              onClick={(e) => {\n                addRowEditFnc();\n              }}\n            >\n              <FaPlus /> Add\n            </button>\n            <button\n              className=\"btn btn-primary\"\n              disabled={buttonDisabled}\n              title={\"Save row\"}\n              onClick={() => {\n                saveExpenseTypes();\n              }}\n            >\n              <FaSave /> Save\n            </button>\n            <button\n              className=\"btn btn-secondary\"\n              title={\"Cancel row editing\"}\n              disabled={buttonDisabled}\n              onClick={(e) => {\n                closeEditedRowFnc();\n              }}\n            >\n              <ImCross fontSize={\"11px\"} /> Cancel\n            </button>\n          </div>\n        </>\n        {/* )} */}\n      </div>\n    </div>\n  );\n}\n\nexport default ExpenseTypes;\n","import React, { useState, useEffect, useRef } from \"react\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { environment } from \"../../../environments/environment\";\nimport moment from \"moment\";\nimport GlobalValidation from \"../../ValidationComponent/GlobalValidation\";\nimport CellRendererPrimeReactDataTable from \"../../PrimeReactTableComponent/CellRendererPrimeReactDataTable\";\nimport { AiFillWarning } from \"react-icons/ai\";\nimport { DataTable } from \"primereact/datatable\";\nimport { Column } from \"primereact/column\";\nimport { FaSearch } from \"react-icons/fa\";\nimport axios from \"axios\";\nimport { BiSearch } from \"react-icons/bi\";\nimport Loader from \"../../Loader/Loader\";\nimport ScreenBreadcrumbs from \"../../Common/ScreenBreadcrumbs\";\n\nfunction ExpensesView() {\n  const [startDate, setStartDate] = useState(\"\");\n  const [loader, setLoader] = useState(false);\n  const abortController = useRef(null);\n  const [endDate, setEndDate] = useState();\n  const [employeeData, setEmployeeData] = useState([]);\n  let [currency, setCurrency] = useState([]);\n  const [validationmessage, setValidationMessage] = useState(false);\n  const [details, setDetails] = useState({\n    currancyId: \"\",\n    startDate: \"\",\n    endDate: \"\",\n  });\n  let [currancyId, setCurrancyId] = useState([]);\n  const [searching, setSearching] = useState(false);\n  const [headerData, setHeaderData] = useState([]);\n  const [vendorNamesArr, setVendorNamesArr] = useState();\n  let rows = 4;\n  const tableStyle = { border: \"1px solid silver\", borderRadius: \"3px\" };\n  const baseUrl = environment.baseUrl;\n\n  const loggedUserId = localStorage.getItem(\"resId\");\n  const [routes, setRoutes] = useState([]);\n  let textContent = \"Time & Expenses\";\n  let currentScreenName = [\"Expenses\", \"View Foreign Exchange Rates\"];\n\n  const getMenus = () => {\n    // setMenusData\n\n    axios({\n      method: \"GET\",\n      url: baseUrl + `/CommonMS/master/getMenus?loggedUserId=${loggedUserId}`,\n    }).then((resp) => {\n      let data = resp.data;\n\n      data.forEach((item) => {\n        if (item.display_name === textContent) {\n          setRoutes([item]);\n        }\n      });\n    });\n  };\n  useEffect(() => {\n    getMenus();\n    getCurrency();\n  }, []);\n  const getapiData = async () => {\n    setSearching(true);\n\n    const response = await axios.get(\n      `${baseUrl}/timeandexpensesms/expenses/getforex?id=${currancyId}&startDate=${moment(\n        startDate\n      ).format(\"yyyy-MM-DD\")}&endDate=${moment(endDate).format(\"yyyy-MM-DD\")}`\n    );\n\n    const data = await response.data;\n    let headerData = [\n      {\n        description: \"Currency\",\n        currency_date: \"Date\",\n        value_of_usd: \"USD to Local\",\n        value_in_usd: \"Local to USD\",\n      },\n    ];\n    setTimeout(() => {\n      setSearching(false);\n      //let fData = [...headerData, ...data];\n\n      setEmployeeData(data);\n      setValidationMessage(false);\n    }, 1000);\n\n    for (let i = 0; i < data.length; i++) {\n      data[i][\"currency_date\"] =\n        data[i][\"currency_date\"] == null\n          ? \"\"\n          : moment(data[i][\"currency_date\"]).format(\"DD-MMM-yyyy\");\n    }\n    setLoader(false);\n  };\n\n  const handleAbort = () => {\n    abortController.current && abortController.current.abort();\n    setLoader(false);\n  };\n  const getCurrency = () => {\n    axios({\n      method: \"get\",\n      url: baseUrl + `/ProjectMS/Engagement/getCurrency`,\n    }).then((res) => {\n      let curre = res.data;\n      setCurrency(curre);\n    });\n  };\n  const changeHandler = () => {\n    let valid = GlobalValidation(ref);\n\n    if (valid == true) {\n      setValidationMessage(true);\n    }\n    abortController.current = new AbortController();\n    if (valid) {\n      return;\n    }\n    setLoader(false);\n    getapiData();\n  };\n  const ref = useRef([]);\n  const LinkTemplate = (data) => {\n    return (\n      <>\n        <div style={{ float: \"left\" }}>{data.value_of_usd}</div>\n      </>\n    );\n  };\n\n  const LinkTemplateAction = (data) => {\n    return (\n      <>\n        <div style={{ float: \"left\" }}>{data.value_in_usd}</div>\n      </>\n    );\n  };\n\n  const dynamicColumns = Object.keys(headerData)?.map((col, i) => {\n    return (\n      <Column\n        sortable\n        key={col}\n        body={\n          col == \"value_of_usd\"\n            ? LinkTemplate\n            : col == \"value_in_usd\" && LinkTemplateAction\n        }\n        field={col}\n        header={headerData[col]}\n      />\n    );\n  });\n\n  console.log(\"data\", employeeData);\n  return (\n    <div>\n      {validationmessage ? (\n        <div className=\"statusMsg error\">\n          {\" \"}\n          <AiFillWarning /> Please Select Highlighted field values\n        </div>\n      ) : (\n        \"\"\n      )}\n      <div>\n        <div className=\"col-md-12\">\n          <div className=\"pageTitle\">\n            <div className=\"childOne\"></div>\n            <div className=\"childTwo\">\n              <h2>View Foreign Exchange Rates</h2>\n            </div>\n            <div className=\"childThree\"></div>\n          </div>\n        </div>\n        <ScreenBreadcrumbs\n          routes={routes}\n          currentScreenName={currentScreenName}\n        />\n\n        <div className=\"group mb-3 customCard\">\n          <div className=\"group-content row\">\n            <div className=\"col-md-4 mb-2\">\n              <div className=\"form-group row\">\n                <label className=\"col-5\" htmlFor=\"country-select\">\n                  Currency<span style={{ color: \"red\" }}>&nbsp;*</span>\n                </label>\n                <span className=\"col-1 p-0\">:</span>\n                <div className=\"col-6\">\n                  <select\n                    id=\"country-select\"\n                    className=\"text\"\n                    ref={(ele) => {\n                      ref.current[0] = ele;\n                    }}\n                    onChange={(e) => {\n                      setCurrancyId(e.target.value);\n                    }}\n                  >\n                    <option value=\"\"> &lt;&lt;Please Select&gt;&gt;</option>\n                    {currency.map((data) =>\n                      data.currency === \"US Dollar(USD)\" ? (\n                        \"\"\n                      ) : (\n                        <option value={data.id}>{data.currency}</option>\n                      )\n                    )}\n                  </select>\n                </div>\n              </div>\n            </div>\n            <div className=\"col-md-4 mb-2\">\n              <div className=\"form-group row\">\n                <label className=\"col-5\" htmlFor=\"email-input\">\n                  Begin Date<span style={{ color: \"red\" }}>&nbsp;*</span>\n                </label>\n                <span className=\"col-1 p-0\">:</span>\n                <div\n                  className=\"col-6 datepicker\"\n                  ref={(ele) => {\n                    ref.current[1] = ele;\n                  }}\n                >\n                  <DatePicker\n                    dropdownMode=\"select\"\n                    dateFormat=\"dd-MMM-yyyy\"\n                    selected={startDate}\n                    onChange={(date) => setStartDate(date)}\n                    placeholderText={\"Begin Date\"}\n                    showMonthDropdown\n                    showYearDropdown\n                  />\n                </div>\n              </div>\n            </div>\n            <div className=\"col-md-4 mb-2\">\n              <div className=\"form-group row\">\n                <label className=\"col-5\" htmlFor=\"email-input\">\n                  End Date<span style={{ color: \"red\" }}>&nbsp;*</span>\n                </label>\n                <span className=\"col-1 p-0\">:</span>\n                <div\n                  className=\"col-6 datepicker\"\n                  ref={(ele) => {\n                    ref.current[2] = ele;\n                  }}\n                >\n                  <DatePicker\n                    dropdownMode=\"select\"\n                    dateFormat=\"dd-MMM-yyyy\"\n                    selected={endDate}\n                    onChange={(date) => setEndDate(date)}\n                    placeholderText={\"End Date\"}\n                    showMonthDropdown\n                    showYearDropdown\n                  />\n                </div>\n              </div>\n            </div>\n            <div className=\"col-md-12 col-sm-12 col-xs-12 no-padding center mb-2\">\n              {\n                <div className=\"col-md-12 col-sm-12 col-xs-12 btn-container center\">\n                  <button\n                    type=\"button\"\n                    className=\"btn btn-primary\"\n                    title=\"Search\"\n                    onClick={(e) => {\n                      changeHandler();\n                    }}\n                  >\n                    <BiSearch /> Search\n                  </button>\n                </div>\n              }\n              {loader ? <Loader handleAbort={handleAbort} /> : \"\"}\n            </div>\n            <div className=\"darkHeader\">\n              <div className=\"col-md-12 \">\n                <DataTable\n                  value={employeeData}\n                  showGridlines\n                  paginator\n                  rows={25}\n                  sortMode=\"multiple\"\n                  style={tableStyle}\n                  tableStyle={{ minWidth: \"50rem\" }}\n                >\n                  <Column\n                    field=\"description\"\n                    header=\"Currency\"\n                    align=\"center\"\n                    sortable\n                    style={{ width: \"25%\" }}\n                  ></Column>\n                  <Column\n                    field=\"currency_date\"\n                    header=\"Date\"\n                    align=\"center\"\n                    sortable\n                    style={{ width: \"25%\" }}\n                  ></Column>\n                  <Column\n                    field=\"value_of_usd\"\n                    header=\"USD to Local\"\n                    align=\"center\"\n                    sortable\n                    style={{ width: \"25%\" }}\n                  ></Column>\n                  <Column\n                    field=\"value_in_usd\"\n                    header=\"Local to USD\"\n                    align=\"center\"\n                    sortable\n                    style={{ width: \"25%\" }}\n                  ></Column>\n                </DataTable>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default ExpensesView;\n","import React, { useState, useEffect, useRef } from \"react\";\nimport VendorOpen from \"../../VendorComponent/VendorOpen\";\nimport ExpensesAdd from \"./ExpensesAdd\";\nimport ExpensesCreate from \"./ExpensesCreate\";\nimport ExpensesOpen from \"./ExpensesOpen\";\nimport NewExpensesOpen from \"./NewExpensesOpen\";\nimport ExpensesSearch from \"./ExpensesSearch\";\nimport ExpensesTypes from \"./ExpensesTypes\";\nimport ExpensesView from \"./ExpensesView\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { environment } from \"../../../environments/environment\";\nimport { useDispatch } from \"react-redux\";\nimport { useSelector } from \"react-redux\";\nimport { updateExpenseButtonState } from \"../../../reducers/SelectedSEReducer\";\nimport ExpenseStackView from \"./ExpenseStackView\";\n\nfunction Expenses(props) {\n  const baseUrl = environment.baseUrl;\n  const loggedUserId = localStorage.getItem(\"resId\");\n\n  // const expenseButtonState = localStorage.getItem(\"expenseButtonStateLocal\")\n  //   ? localStorage.getItem(\"expenseButtonStateLocal\")\n  //   : \"Open\";\n\n  const expenseButtonState = useSelector(\n    (state) => state.selectedSEState.expenseButtonState\n  );\n\n  console.log(expenseButtonState);\n  const [btnState, setbtnState] = useState(expenseButtonState);\n  const [buttonValue, setButtonValue] = useState(\"Expense\");\n  const [permission, setPermission] = useState([]);\n  const dispatch = useDispatch();\n  const state = useLocation();\n  let url = window.location.href;\n  const [Id, setId] = useState(0);\n\n  const navigate = useNavigate();\n\n  const getMenus = () => {\n    // setMenusData\n\n    axios\n      .get(baseUrl + `/CommonMS/master/getMenus?loggedUserId=${loggedUserId}`)\n      .then((resp) => {\n        let getData = resp.data;\n\n        const revenueForcastSubMenu = getData\n          .find((item) => item.display_name === \"Time & Expenses\")\n          .subMenus.find((subMenu) => subMenu.display_name === \"Expenses\");\n\n        const accessLevel = revenueForcastSubMenu\n          ? revenueForcastSubMenu.userRoles.includes(\"690\")\n            ? 690\n            : revenueForcastSubMenu.userRoles.includes(\"641\")\n            ? 641\n            : revenueForcastSubMenu.userRoles.includes(\"932\")\n            ? 932\n            : revenueForcastSubMenu.userRoles.includes(\"46\")\n            ? 46\n            : revenueForcastSubMenu.userRoles.includes(\"126\")\n            ? 126\n            : revenueForcastSubMenu.userRoles.includes(\"919\")\n            ? 919\n            : revenueForcastSubMenu.userRoles.includes(\"686\")\n            ? 686\n            : revenueForcastSubMenu.userRoles.includes(\"930\")\n            ? 930\n            : revenueForcastSubMenu.userRoles.includes(\"307\") && 307\n          : null;\n        axios({\n          method: \"GET\",\n          url:\n            baseUrl +\n            `/CommonMS/master/getBenchMtericsMenus?loggedUserId=${loggedUserId}&Cont=Expense`,\n        }).then((res) => {\n          // const data = res.data;\n          const data = res.data;\n          // .filter((item) => {\n          //   return (\n          //     item.display_name !== \"View Foreign Exchange Rates\" &&\n          //     item.display_name !== \"Add Foreign Exchange Value\"\n          //   );\n          // });\n          console.log(data);\n          console.log(accessLevel);\n          const filteredData = data.filter(\n            (item) => item.display_name != \"Expense Types\"\n          );\n          {\n            accessLevel == 126\n              ? setPermission(filteredData)\n              : setPermission(data);\n          }\n          // setPermission(data);\n          console.log(data);\n          console.log(filteredData);\n        });\n        setDataAccess(accessLevel);\n      });\n  };\n  // const menus = () => {\n  //   axios({\n  //     method: \"GET\",\n  //     url:\n  //       baseUrl +\n  //       `/CommonMS/master/getBenchMtericsMenus?loggedUserId=${loggedUserId}&Cont=Expense`,\n  //   }).then((res) => {\n  //     // const data = res.data;\n  //     const data = res.data;\n  //     // .filter((item) => {\n  //     //   return (\n  //     //     item.display_name !== \"View Foreign Exchange Rates\" &&\n  //     //     item.display_name !== \"Add Foreign Exchange Value\"\n  //     //   );\n  //     // });\n  //     console.log(data);\n  //     setPermission(data);\n  //     console.log(data);\n  //   });\n  // };\n\n  useEffect(() => {\n    // menus();\n    getMenus();\n  }, []);\n\n  useEffect(() => {\n    let stat = state?.state;\n    console.log(state);\n    if (url.includes(\"Create\")) {\n      setbtnState(\"Create\");\n    }\n    let expenseArr = url.split(\":\");\n    setId(expenseArr[expenseArr.length - 1]);\n    stat?.btnState != undefined && setbtnState(stat?.btnState);\n  }, []);\n\n  const abortController = useRef(null);\n  const handleAbort = () => {\n    abortController.current && abortController.current.abort();\n  };\n\n  const [paymentUsers, setPaymentUsers] = useState([]);\n  const [isClassicView, setIsClassicView] = useState(false);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await axios.get(\n          baseUrl + `/ProjectMS/projectExpenses/paymentUsers`\n        );\n        const paymentUsers = response.data;\n        setPaymentUsers(paymentUsers);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    fetchData();\n  }, []);\n  console.log(permission);\n  return (\n    <div>\n      <div>\n        <div className=\"tabs\" style={{ margin: \"3px\" }}>\n          {permission.map((button) => (\n            <button\n              key={button.id}\n              className={\n                btnState === button.display_name.toString()\n                  ? \"buttonDisplayClick\"\n                  : \"buttonDisplay\"\n              }\n              onClick={() => {\n                navigate(\"/search/userExpenseHistory\");\n                if (button.display_name == \"Create\") {\n                  window.location.reload();\n                }\n                setTimeout(() => {\n                  setbtnState(button.display_name.toString());\n                }, 100);\n\n                dispatch(\n                  updateExpenseButtonState(button.display_name.toString())\n                );\n\n                console.log(button.display_name);\n              }}\n            >\n              {button.display_name}\n            </button>\n          ))}\n        </div>\n      </div>\n      {btnState === \"Open\" ? (\n        <NewExpensesOpen buttonValue={buttonValue} setbtnState={setbtnState} />\n      ) : (\n        \"\"\n      )}\n      {btnState === \"Create\" ? (\n        <ExpensesCreate handleAbort={handleAbort} setbtnState={setbtnState} />\n      ) : (\n        \"\"\n      )}\n      {btnState === \"Search\" ? (\n        paymentUsers.includes(parseInt(loggedUserId)) || isClassicView ? (\n          <ExpensesSearch\n            handleAbort={handleAbort}\n            setbtnState={setbtnState}\n            paymentUsers={paymentUsers}\n          />\n        ) : (\n          <ExpenseStackView setIsClassicView={setIsClassicView} />\n        )\n      ) : (\n        \"\"\n      )}\n      {/* {btnState === \"Expense Types\" ? <ExpensesTypes /> : \"\"}\n      {btnState === \"Add Foreign Exchange Value\" ? (\n        <ExpensesAdd />\n      ) : (\n        \"\"\n      )}\n      {btnState === \"View Foreign Exchange Rates\" ? (\n        <ExpensesView />\n      ) : (\n        \"\"\n      )} */}\n      {btnState === \"Expense Types\" ? <ExpensesTypes /> : \"\"}\n      {btnState === \"Add Foreign Exchange Value\" ? <ExpensesAdd /> : \"\"}\n      {btnState === \"View Foreign Exchange Rates\" ? <ExpensesView /> : \"\"}\n    </div>\n  );\n}\nexport default Expenses;\n"],"names":["props","data","current","finalRes","addingClass","ele","value","classList","add","push","remove","i","length","parentClassList","contains","addingBorder","children","console","log","includes","useState","startDate","setStartDate","endDate","setEndDate","currency","setCurrency","currencyId","setCurrencyId","usd","setUsd","localVal","setLocalVal","dates","setDates","selectedRows","setSelectedRows","selectedRowsData","setSelectedRowsData","showTable","setShowTable","tableDisable","setTableDisable","validationMessage","setValidationMessage","ref","useRef","message","setMessage","currencyName","setCurrencyName","saveButton","setSaveButton","dateCheck","setDateCheck","usdCheck","setUsdCheck","localCheck","setLocalCheck","saveCheck","setSaveCheck","tableDataChange","setTableDataChange","baseUrl","environment","loggedUserId","localStorage","getItem","routes","setRoutes","useEffect","getMenus","axios","method","url","then","resp","forEach","item","display_name","name","filter","c","id","map","res","curre","tableData","d","date","moment","format","usdofvalue","usdinvalue","prev","onchange","e","rowData","index","findIndex","selectedRowData","updatedSelectedRowsData","target","updatedTableData","selectedRow","find","row","className","ScreenBreadcrumbs","currentScreenName","htmlFor","style","color","onChange","dateFormat","selected","onKeyDown","preventDefault","placeholderText","selectsStart","type","placeholder","required","title","onClick","ErrorLogGlobalValidation","setTimeout","getTime","isNaN","currentDate","Date","dateString","toLocaleDateString","setDate","getDate","getDates","showGridlines","scrollable","scrollHeight","selectionMode","selection","onSelectionChange","handleSelection","dataKey","isDataSelectable","field","header","body","defaultValue","bodyClassName","align","placeContent","disabled","document","getElementsByClassName","click","formattedData","value_of_usd","value_in_usd","headers","status","setAttribute","catch","er","formData","setFormData","projectRenderData","expenseTypeRenderData","iconState","setRates","setLoader","setWeekData","dateHandler","onClickHandler","state","loaderTime","endDt","fromDate","subtract","clearTimeout","strtDt","days","endOf","rates","error","toDate","dt","stDt","isSameOrBefore","backgroundColor","colSpan","cursor","rowSpan","textAlign","expenseTypePopupState","setExpenseTypePopupState","expenseTypeOptions","setExpenseTypesValues","setSelectedExpenseTypes","selectedExpenseTypes","setIconState","selectAll","setSelectAll","isValuesChecked","setIsValuesChecked","projectData","projectDetails","projectName","primaryManager","actualStartDate","actualEndDate","selectAllExpenseTypeHandler","updatedIsValuesChecked","Object","keys","element","idList","it","updatedCheckedList","visible","size","onClose","backdrop","lassName","hasOwnProperty","padding","border","display","alignItems","marginBottom","checked","prevSelectAll","expenses","defaultChecked","some","lkup_name","values","selectedExpenseype","selectedExpenseTypesObjs","JSON","parse","stringify","newSelectedExpenseTypes","concat","newExpenseType","existingExpenseType","onAddHandler","expensesTypePopup","setExpensesTypePopup","expenseTypeId","currencyOptionsData","country","cities","carTypes","paidBy","airportList","mobileType","expDate","expenseData","setExpenseData","expInfo","projectId","expName","setFileMap","fileMap","files","setFiles","isExpenseBillable","setExpCurrencySymbol","expCurrencySymbol","errorMsg","setErrorMsg","expTypId","obj","noOfNights","subLocation","restOfWorld","prjId","expAmt","peopleAttnd","guestAttnd","empAttnd","noOfMiles","rate","rental","charge","fuelAmount","carType","tollCharge","parking","origin","destination","ticketFare","addCharges","travelType","tripType","location","description","expenseDataObject","handleOnChange","isBillable","startsWith","parseFloat","stops","stopsValue","undefined","calculatedFuelAmount","netAmount","toFixed","handleFileChange","event","newFiles","Array","from","newFileMap","file","key","fileDelPopup","setFileDelPopup","deleteFileName","setDeleteFileName","container","createElement","innerHTML","currencyCode","isFirst","setStops","handleAddStop","newStop","setStopsValue","stopsValueString","join","FileDeleteConfirmPopup","width","marginLeft","alignment","justifyContent","indexOf","splice","deleteFile","country_name","isNumber","test","isDecimal","isAllowedKey","ReactSearchAutocomplete","items","showIcon","onSelect","readOnly","parseInt","showClear","styling","stop","newValue","updatedStops","handleStopChange","handleDeleteStop","toLocaleString","minimumFractionDigits","maximumFractionDigits","class","multiple","status_id","split","projectIdKey","expenseTypIdKey","dateKey","fileName","subIndex","handleFileRemove","inputFields","startOf","_d","setCurrencyOptionsData","setProjectRenderData","setProjectData","setExpenseTypeOptions","setExpenseTypeRenderData","expenseTypesValues","expenseFor","setExpenseFor","setExpenseTypeId","setCountry","setCities","setCarTypes","setPaidBy","setAirportList","loader","setProjectId","setMobileType","setCurrencyCode","amountStatusDisplay","setAmountStatusDisplay","setExpInfo","setExpDate","isProjectSelected","setIsProjectSelected","setbtnState","handleAbort","navigate","useNavigate","useParams","stackIdData","setStackIdData","tableLoader","setTableLoader","expense_date","setDisplayTableBody","documents","setDocuments","object_id","paymentUsers","setPaymentUsers","fetchData","response","expTypList","expense_type_id","expInfoList","amount","paid_by","currency_type_id","location_id","isActive","is_active","note","no_of_miles","fuel_amount","car_type_id","toll_charge","parking_fee","people_attended","guests_attended","emp_attended","no_of_nights","city_id","rest_of_world","origin_city_id","destination_city_id","ticket_fare","additional_charge","type_travel_id","type_trip_id","type_id","statusId","currencyOptions","getProjects","getCountries","getCities","getCarTypes","getPaidBy","getAirportList","getMobileType","currencySymbol","setCurrencySymbol","transformedData","cityObj","city","toString","projDt","getProjectData","displayTableBody","toggleIcon","initialIsValuesChecked","sampleFunc","valueOfUSD","setValueOfUSD","rateOfDay","setRateOfDay","columnSum","reduce","acc","cur","rowSum","setIsExpenseBillable","currentTarget","project","projectSelectMsg","setProjectSelectMsg","addButtonDisable","setAddButtonDisable","setExpName","inputFieldColor","approvalStatus","selectedElement","setSelectedElement","hasNumber","expTypeId","expenseTypeIndex","nextExpenseNumber","newExpense","addSameExpenseType","setExpenseDelPopup","extpd","expenseBillable","prevExpInfo","updatedExpInfo","dateToFind","expTypeIdToFind","objIndex","isBefore","noteDate","setDocumentPopup","stackAdvance","setStackAdvance","stackDesc","setStackDesc","setNetAmount","nt","float","paddingRight","existingItemIndex","isExpProvided","setIsExpProvided","savedExpense","setSavedExpense","isSaved","setIsSaved","isSubmitted","setIsSubmitted","dispatch","useDispatch","expenseStackId","window","reload","updateExpenseButtonState","stackSaveFail","setStackSaveFail","saveLoader","setSaveLoader","filesMissing","setFileMissing","saveProjectExpenses","isSubmitState","finalExpInfo","finalData","isSubmit","stackId","expLvlType","stackCurrency","tripId","redirectToCreate","FormData","append","setTripId","tripData","setTripData","deleteMsg","setDeleteMsg","deleteMsgSuccess","setDeleteMsgSuccess","deletePopup","setDeletePopup","expenseDelPopup","ExpenseDeleteConfirmPopup","DeleteConfirmPopup","documentPopup","DocumentPopup","height","href","document_id","svn_revision","file_name","marginTop","stackName","paddingTop","GlobalHelp","pdfname","margin","minDate","onBlur","onChangeHandler","currId","onSearch","inputValue","resId","trip","label","handleTripInput","trim","labelKey","valueKey","resize","rows","addHandler","borderRadius","borderColor","gap","fontSize","marginRight","Loader","buttonValue","setAccess","projectTableData","vendorListData","autoCompleteData","setAutoCompleteData","customerData","expenseLength","setExpensesLength","customerTableData","engagementData","engagementTableData","expenseTableData","setExpenseTableData","accessLevel","setAccessLevel","filteredData","setFilteredData","userId","ObjectTypeId","ObjectId","VisitedOn","vendorId","engagementId","customerId","expenseId","validationmessage","latestData","lastDataId","autoCompleteValidation","setAutoCompleteValidation","searching","setsearching","abortController","getExpenseTableData","getExpenseData","HelpPDFName","Headername","AbortController","signal","handleExpenseSelect","objectId","success","list","to","Expense","createdBy","Currency","NetAmount","Status","handleSelect","abort","initialStartDate","setMonth","getMonth","stateDropdown","setStateDropdown","paymentDropdown","setPaymentDropdown","searchString","setSearchString","setData","expandedRows","setExpandedRows","loaderOne","setLoaderOne","setVisible","FaChevronCircleUp","cheveronIcon","setCheveronIcon","global","matchMode","FilterMatchMode","resource","approval","projectCode","amt","payment","disbursedAmt","clientAmt","createdOn","filters","setFilters","globalFilterValue","setGlobalFilterValue","selectedOptionTwo","setSelectedOptionTwo","isEditClicked","setIsEditClicked","editRowData","setEditRowData","popUp","setPopUp","popUpData","setPopUpData","expenseHistory","setExpenseHistory","popUpLoader","setPopUpLoader","resourceId","setResourceId","isCheckedList","setIsCheckedList","setHeaderChecked","count","setCount","initialSelectedState","initialSelectedPayment","selectedState","setSelectedState","selectedPayment","setSelectedPayment","React","anchorEl","setAnchorEl","handleClose","textContent","dataAccess","setDataAccess","ExpenseSubMenu","access_level","getDropdownOptions","states","paymentStates","stateObj","paymentState","paymentObj","ArrowRenderer","expanded","numberWithCommas","x","number","String","parts","replace","padEnd","amountFormat","clientCurrencyCode","getExpenseReport","fromDt","toDt","res1","FaChevronCircleDown","saveAsExcelFile","buffer","blobData","Blob","navigator","msSaveBlob","link","URL","createObjectURL","download","revokeObjectURL","documentLoader","setDocumentLoader","downloadExpenseStack","setDocumentFail","viewDetails","expense_id","ExpensePopup","totalData","downloadFile","fullName","Expense_Type","Incurred","disbursed_amount","Payee","Payment","Approval","approvalFlow","slice","minHeight","maxHeight","overflowY","firstName","lastName","dateCreated","disbursedAmount","comments","is_billable","disbursedAmountField","clientAmountField","client_amount","approvalIcon","popoverdata","setPopoverData","approvalField","drop_down","onMouseOver","onMouseLeave","paymentsField","Checkbox","newCheckedList","newSelection","selectionIndex","handleSelectionChange","isRowDisabled","setlist","commentsField","generateDropdownLabel","selectedOptions","allOptions","selectedValues","option","allValues","isEdit","fontWeight","options","hasSelectAll","isLoading","shouldToggleOnHover","disableSearch","valueRenderer","showMonthDropdown","showYearDropdown","dropdownMode","maxDate","_filters","labels","dataInTable","workbook","require","Workbook","worksheet","addWorksheet","addRow","font","bold","xlsx","writeBuffer","stripedRows","onRowToggle","onRowExpand","cid","raised_by","u","subrows","rowExpansionTemplate","sortOrder","subRowsData","isChecked","isEditData","ll","finalLL","spltArr","getElementById","updatedList","every","sortable","datas","clientAmmount","sendSelectedRowsData","cancelRowEdit","globalFilterFields","emptyMessage","paginator","paginationPerPage","paginationRowsPerPageOptions","paginationComponentOptions","rowsPerPageText","rangeSeparatorText","currentPageReportTemplate","paginatorTemplate","rowsPerPageOptions","expander","dropDown","newStatusId","ProjectExpensePopOver","respData","setRespData","setState","SupervisorValue","setSupervisorValue","PMValue","setPMValue","HRValue","setHRValue","ITValue","setITValue","LDValue","setLDValue","FinanceValue","setFinanceValue","ProjectValue","setProjectValue","BUValue","setBUValue","OrgValue","setOrgValue","attachmentValue","setattachmentValue","addMessage","setAddMessage","editMessage","setEditMessage","buttonDisabled","setButtonDisabled","valid","setValid","displayTable","setDisplayTable","editedValue","setEditedValue","displayRowEdit","setDisplayRowEdit","validationMsg","setValidationMsg","PageMessageValidation","setPageMessageValidation","validateExpenselevels","setValidateExpenselevels","lkupNameValue","setLkupNameValue","ActiveValue","setActiveValue","Supervisordisable","setSupervisordisable","PMDisable","setPMdisable","currentPage","setCurrentPage","getData","setCurrentItem","pageCount","setpageCount","itemOffSet","setItemOffSet","itemPerPage","startIndex","setStartIndex","endIndex","setEndIndex","setFinalRow","totalRows","endOffset","Math","ceil","displayTableFnc","getStakeHoldersDetails","initialData","closeEditedRowFnc","tabHeaders","currentData","tabData","inEle","inInd","saveExpenseTypes","PM","Supervisor","prevValue","Project","editHandler","lkupName","is_attachment","attachment","sort_order","is_bu","BU","is_org","Org","is_project","is_editable","Finance","IT","HR","LD","Pagination","page","showFirstButton","showLastButton","employeeData","setEmployeeData","currancyId","setCurrancyId","setSearching","headerData","getCurrency","getapiData","currency_date","LinkTemplate","LinkTemplateAction","col","GlobalValidation","changeHandler","sortMode","tableStyle","minWidth","expenseButtonState","useSelector","selectedSEState","btnState","permission","setPermission","useLocation","setId","revenueForcastSubMenu","subMenus","subMenu","userRoles","stat","expenseArr","isClassicView","setIsClassicView","button","ExpenseStackView","ExpensesTypes"],"sourceRoot":""}