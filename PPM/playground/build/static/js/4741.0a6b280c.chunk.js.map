{"version":3,"file":"static/js/4741.0a6b280c.chunk.js","mappings":"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","sources":["views/ScoreCardComponent/ScoreCardSearchFilter.js","views/ScoreCardComponent/TargetTable.js","views/ScoreCardComponent/SoftwareSummary.js","views/ScoreCardComponent/ServiceSummary.js","views/ScoreCardComponent/Summary.js","views/ScoreCardComponent/TargetCharts.js","views/ScoreCardComponent/TargetRealisedPlanned.js","views/ScoreCardComponent/Csat.js","views/ScoreCardComponent/Risks.js","views/ScoreCardComponent/ProgressOfsw.js","views/ScoreCardComponent/CustomerRealisedRevCategory.js","views/ScoreCardComponent/TopCustByRealRev.js","views/ScoreCardComponent/OpenServicePipeLine.js","views/ScoreCardComponent/RealisedRevByContract.js","views/ScoreCardComponent/FETPlannedByLocation.js","views/ScoreCardComponent/SubKPlannedByLocation.js","views/ScoreCardComponent/PlannedByLocation.js","views/ScoreCardComponent/QBRList.js","views/ScoreCardComponent/HistoricalTrend.js","views/ScoreCardComponent/EffortVariance.js","views/ScoreCardComponent/ScoreCard.js","../node_modules/@mui/icons-material/DownloadForOfflineRounded.js"],"sourcesContent":["import DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport React, { useEffect, useState, useRef } from \"react\";\nimport axios from \"axios\";\nimport { MultiSelect } from \"react-multi-select-component\";\nimport { ReactSearchAutocomplete } from \"react-search-autocomplete\";\nimport SelectSEDialogBox from \"../SelectSE/SelectSEDialogBox\";\n// import { FaSearch } from \"react-icons/fa\";\nimport { environment } from \"../../environments/environment\";\nimport {\n  FaCaretDown,\n  FaChevronCircleDown,\n  FaChevronCircleUp,\n  FaSearch,\n} from \"react-icons/fa\";\nimport { CCollapse, CListGroup } from \"@coreui/react\";\nimport GlobalValidation from \"../ValidationComponent/GlobalValidation\";\nimport Loader from \"../Loader/Loader\";\nimport moment from \"moment\";\nimport { AiFillWarning } from \"react-icons/ai\";\nimport GlobalHelp from \"../PrimeReactTableComponent/GlobalHelp\";\nimport ScreenBreadcrumbs from \"../Common/ScreenBreadcrumbs\";\nimport { BiRefresh } from \"react-icons/bi\";\nimport { useSelector } from \"react-redux\";\n\nexport default function ScoreCardSearchFilter({\n  setScoreCardData,\n  setqbrList,\n  scoreCradPermission,\n  setrisk,\n  setcsat,\n  setHistoricalTrendData,\n  setShowHistoricalTrend,\n  setcardSelector,\n  scoreCardDataPayload,\n  setscoreCardDataPayload,\n}) {\n  //-------------------------------------------------------------------------------------------------------\n\n  const handleOnSelect = (item) => {\n    // the item selected\n    console.log(item);\n  };\n\n  //--------------------------------------------const variable declarations-----------------------------------------------------------\n  const [selectedSE, setselectedSE] = useState(\"<< All SE >>\");\n  const [bulkids, SetBulkIds] = useState(true);\n  const [dataAccess, setDataAccess] = useState([]);\n  // let quter;\n  // quter = (new Date()).getMonth;\n  const [salesEx, setSalesEx] = useState(-2);\n\n  var d = new Date();\n  console.log(d, \"no===================106\");\n  var year = d.getFullYear();\n  var month1 = d.getMonth();\n  var c = new Date(year + 1, month1 + 3);\n  console.log(c, \"-----date\");\n  let newDate = moment(c).format(\"DD-MM-yyyy\");\n  const [startDate, setStartDate] = useState(() => {\n    const currentDate = new Date();\n    const year = currentDate.getFullYear() + 1;\n    const month = currentDate.getMonth() + 1 - 7;\n    return new Date(year, month, 1);\n  });\n\n  const currentQuarter = moment(new Date())\n    .add(1, \"years\")\n    .subtract(6, \"months\")\n    .format(\"yyyy-MM-DD\");\n\n  console.log(new Date(), currentQuarter, \"--currentQuarter\");\n\n  const [selectedSEVal, setSelectedSEVal] = useState(-2);\n\n  const [duration, setduration] = useState([1]);\n  const [visiblepopup, setVisiblepopup] = useState(false);\n  const [viewBy, setViewBy] = useState(\"se\");\n  const [salesExecutiveDropdown, setsalesExecutiveDropdown] = useState([]);\n  const measuresDropdownObject = [\n    { value: 8, label: \"CSAT\" },\n    { value: 3, label: \"Customer Category & Top Projects\" },\n    { value: 7, label: \"Open Service Pipeline\" },\n    { value: 6, label: \"Progress of Services/Software\" },\n    { value: 10, label: \"QBR\" },\n    { value: 5, label: \"Realised, Planned By Location & Resoure Type\" },\n    { value: 4, label: \"Realised Revenue By Contract Terms\" },\n    { value: 9, label: \"Risks\" },\n    { value: 1, label: \"Summary\" },\n    {\n      value: 2,\n      label:\n        \"Target, Realised, Planned, Calls and Variance By Location & Practice\",\n    },\n  ];\n  const [measuresDropdown, setmeasuresDropdown] = useState(\n    measuresDropdownObject\n  );\n  // const [scoreCardDataPayload, setscoreCardDataPayload] = useState({\n  //     \"executives\": \"-2\",\n  //     \"isActive\": true,\n  //     \"measures\": \"-1\",\n  //     \"isSearch\": true,\n  //     \"from\": \"2023-04-01\",\n  //     \"duration\": 1,\n  //     \"type\": \"cu\",\n  //     \"viewby\": \"se\",\n  //     \"cslIds\": -1,\n  //     \"dpIds\": -1,\n  //     \"customerId\": -1,\n  //     \"isIndividual\": false,\n  //     \"key\": 4452475,\n  //     \"opptyActType\": \"-1\"\n  // })\n  const [errorMsg, seterrorMsg] = useState(false);\n  const [loader, setLoader] = useState(false);\n  const [item, setItem] = useState([]);\n  const [grpId, setGrpId] = useState([]);\n\n  const [dispSF, setDispSF] = useState(false);\n  const [cslMultiselectDropdown, setcslMultiselectDropdown] = useState([]);\n  const [selectedCSL, setselectedCSL] = useState([]);\n  const [dpMultiselectDropdown, setdpMultiselectDropdown] = useState([]);\n  const [selectedDP, setselectedDP] = useState([]);\n  const [customerAutocomplete, setcustomerAutocomplete] = useState([]);\n  const [selectedCustomer, setselectedCustomer] = useState([]);\n\n  const [customer, setCustomer] = useState([]);\n  const localSE =\n    localStorage.getItem(\"selectedSELocal\") === null\n      ? []\n      : JSON.parse(localStorage.getItem(\"selectedSELocal\"));\n  const isIndividualChecked =\n    localStorage.getItem(\"isIndividualCheckedLocal\") === null\n      ? false\n      : JSON.parse(localStorage.getItem(\"isIndividualCheckedLocal\"));\n  function transformObjects(data) {\n    return localSE.map((item) => {\n      if (Array.isArray(item)) {\n        const [obj] = item;\n        if (\n          obj &&\n          obj.id &&\n          obj.text &&\n          obj.type === \"fte1\" &&\n          obj.parent === \"id\"\n        ) {\n          return {\n            salesPersonName: obj.text,\n            type: obj.type,\n            id: parseInt(obj.id),\n            status: JSON.parse(obj.li_attr).sestatus || \"empActive\",\n          };\n        }\n      }\n      return item;\n    });\n  }\n  const transformedData = transformObjects();\n  // const unique2 = transformedData.filter((obj, index) => {\n  //   return (\n  //     index === arr2.findIndex((o) => obj.id === o.id && obj.salesPersonName === o.name)\n  //   );\n  // });\n  // console.log(unique2);\n  const filteredData = transformedData\n    .filter((obj, index) => {\n      return index === transformedData.findIndex((o) => obj.id === o.id);\n    })\n    .filter((item) => !Array.isArray(item) || item.length === 0);\n  console.log(filteredData);\n  console.log(transformedData);\n  const idArray = transformedData.map((item) => item.id);\n  const filteredIds = idArray.filter((id) => typeof id === \"number\");\n  console.log(filteredIds, \"love\");\n  const updatedIds = filteredIds.map((id) =>\n    id === \"1717\" || \"3887\" || \"3887\" || \"3977\" || \"4895\" || \"4872942\"\n      ? grpId\n      : id\n  );\n\n  // Flatten the array if grpid is an array of arrays\n  const flattenedIds = updatedIds.flat();\n  console.log(flattenedIds, \"mmmm\");\n  const salesPersonNames =\n    // filteredData.map((item) => item.salesPersonName);\n    filteredData.map((item) => {\n      if (\n        (item.salesPersonName && item.salesPersonName === \"Kirsten Craft\") ||\n        \"Sarat Addanki\" ||\n        \"Satyanarayana Bolli\" ||\n        \"Supervisor Orphans\" ||\n        \"Michelle Shuler\"\n      ) {\n        return `${item.salesPersonName}`;\n      }\n      return item.salesPersonName;\n    });\n\n  const commaSeparatedNames = salesPersonNames.join(\",\");\n  const salesPersonNamesBulk =\n    // filteredData.map((item) => item.salesPersonName);\n    filteredData.map((item) => {\n      if (\n        item.salesPersonName === \"Kirsten Craft\" &&\n        \"Sarat Addanki\" &&\n        \"Satyanarayana Bolli\" &&\n        \"Supervisor Orphans\" &&\n        \"Michelle Shuler\"\n      ) {\n        return `${item.salesPersonName} & team`;\n      }\n      return item.salesPersonName;\n    });\n\n  const commaSeparatedNamesBulk = salesPersonNamesBulk.join(\",\");\n  const salesPersonIds = filteredData.map((item) => item.id);\n  const commaSeparatedIds = salesPersonIds.join(\",\");\n  console.log(transformedData, \"zzzzzzzzz\");\n  const [reportRunId, setreportRunId] = useState(\"\");\n  const [accessData, setAccessData] = useState([]);\n\n  const [visible, setVisible] = useState(false);\n  const [cheveronIcon, setCheveronIcon] = useState(FaChevronCircleUp);\n  const ref = useRef([]);\n  const abortController = useRef(null);\n  const [searching, setsearching] = useState(false);\n  const [sFOwnerDivisionsDropdown, setSFOwnerDivisionsDropdown] = useState([]);\n  const [divExecutive, setDivExecutive] = useState([]);\n  const [selectesFOwnerDivison, setselectesFOwnerDivison] = useState([]);\n  const [division, setDivision] = useState(\"\");\n  const [sediv, setSediv] = useState(\"initial\");\n  console.log(startDate, \"start\");\n\n  //// -------breadcrumbs-----\n  const loggedUserId = localStorage.getItem(\"resId\");\n\n  const [routes, setRoutes] = useState([]);\n  let textContent = \"Sales\";\n  let currentScreenName = [\"Scorecard\"];\n\n  useEffect(() => {\n    getMenus();\n  }, []);\n\n  const getMenus = () => {\n    // setMenusData\n\n    axios({\n      method: \"GET\",\n      url: baseUrl + `/CommonMS/master/getMenus?loggedUserId=${loggedUserId}`,\n    }).then((resp) => {\n      const getData = resp.data;\n      const revenueForcastSubMenu = getData\n        .find((item) => item.display_name === \"Sales\")\n        .subMenus.find((subMenu) => subMenu.display_name === \"Scorecard\");\n      console.log(revenueForcastSubMenu.accessLevel);\n      setAccessData(revenueForcastSubMenu.access_level);\n      const accessLevel = revenueForcastSubMenu\n        ? revenueForcastSubMenu.userRoles.includes(\"690\") &&\n          revenueForcastSubMenu.userRoles.includes(\"641\")\n          ? 600\n          : revenueForcastSubMenu.userRoles.includes(\"690\")\n          ? 690\n          : revenueForcastSubMenu.userRoles.includes(\"641\")\n          ? 641\n          : revenueForcastSubMenu.userRoles.includes(\"932\")\n          ? 932\n          : revenueForcastSubMenu.userRoles.includes(\"46\")\n          ? 46\n          : revenueForcastSubMenu.userRoles.includes(\"126\")\n          ? 126\n          : revenueForcastSubMenu.userRoles.includes(\"919\")\n          ? 919\n          : revenueForcastSubMenu.userRoles.includes(\"686\")\n          ? 686\n          : revenueForcastSubMenu.userRoles.includes(\"909\")\n          ? 909\n          : revenueForcastSubMenu.userRoles.includes(\"307\") && 307\n        : null;\n\n      setDataAccess(accessLevel);\n      if (\n        accessLevel == 690 ||\n        accessLevel == 641 ||\n        accessLevel == 909 ||\n        accessLevel == 600\n      ) {\n        axios({\n          method: \"get\",\n          url:\n            baseUrl +\n            `/dashboardsms/allocationDashboard/getCustomers?loggedUserId=${loggedUserId}`,\n        }).then(function (response) {\n          var resp = response.data;\n          setCustomer(resp);\n        });\n      } else {\n        axios({\n          method: \"get\",\n          url: baseUrl + `/customersms/Customers/getCustomers`,\n        }).then(function (response) {\n          var resp = response.data;\n          setCustomer(resp);\n        });\n      }\n      axios\n        .get(\n          accessLevel == 641 || accessLevel == 600\n            ? baseUrl +\n                `/SalesMS/MasterController/getCslDropDownData?userId=${loggedUserId}`\n            : // `/CommonMS/master/getCSLDPAE?loggedUserId=${loggedUserId}\n\n              baseUrl +\n                `/SalesMS/MasterController/getCslDropDownData?userId=${loggedUserId}`\n        )\n        .then((resp) => {\n          const data = resp.data;\n          let custom = [];\n          const seenPersonNames = new Set();\n\n          // const dropdownOptions = data.map((item) => {\n          //   let obj = {\n          //     value: item.id,\n          //     label: item.PersonName,\n          //   };\n          //   return obj;\n          // });\n          data.forEach((e) => {\n            if (!seenPersonNames.has(e.PersonName)) {\n              let cslObj = {\n                label: e.PersonName,\n                value: e.id,\n              };\n              custom.push(cslObj);\n              seenPersonNames.add(e.PersonName);\n            }\n          });\n          setcslMultiselectDropdown(custom);\n          setselectedCSL(custom);\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n      axios\n        .get(\n          baseUrl + `/CommonMS/master/getDPDropDownData?userId=${loggedUserId}`\n        )\n        .then((resp) => {\n          const data = resp.data;\n          let custom = [];\n          const seenPersonNames = new Set();\n          data.forEach((e) => {\n            if (!seenPersonNames.has(e.PersonName)) {\n              let cslObj = {\n                label: e.PersonName,\n                value: e.id,\n              };\n              custom.push(cslObj);\n              seenPersonNames.add(e.PersonName);\n            }\n          });\n          // const dropdownOptions = data.map((item) => {\n          //   let obj = {\n          //     value: item.id,\n          //     label: item.PersonName,\n          //   };\n          //   return obj;\n          // });\n          setdpMultiselectDropdown(custom);\n          setselectedDP(custom);\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n      let data = resp.data.map((menu) => {\n        if (menu.subMenus) {\n          menu.subMenus = menu.subMenus.filter(\n            (subMenu) =>\n              subMenu.display_name !== \"Project Timesheet (Deprecated)\" &&\n              subMenu.display_name !== \"Invoice Details\" &&\n              subMenu.display_name !== \"Accounting\" &&\n              subMenu.display_name !== \"Upload\" &&\n              subMenu.display_name !== \"Practice Calls [Deprecated]\"\n          );\n        }\n\n        return menu;\n      });\n\n      data.forEach((item) => {\n        if (item.display_name === textContent) {\n          setRoutes([item]);\n        }\n      });\n    });\n  };\n\n  //------------------------methods----------------------------------\n\n  const onFilterChange = ({ id, value }) => {\n    console.log(id + \" \" + value);\n\n    console.log(viewBy, \"viewBy----\");\n    console.log(\n      selectesFOwnerDivison,\n      selectesFOwnerDivison.length,\n      selectesFOwnerDivison.length + parseInt(1),\n      \"selectesFOwnerDivison.length\",\n      sFOwnerDivisionsDropdown.length,\n      \"sFOwnerDivisionsDropdown.length\"\n    );\n    setscoreCardDataPayload((prevState) => {\n      return { ...prevState, [id]: value };\n    });\n    if (id === \"executives\" && value === \"1\") {\n      setVisiblepopup(true);\n    }\n    switch (value) {\n      case \"ne\":\n        setscoreCardDataPayload((prevState) => {\n          return { ...prevState, [\"from\"]: \"2024-01-01\" };\n        });\n        break;\n      case \"tr\":\n        setscoreCardDataPayload((prevState) => {\n          return { ...prevState, [\"from\"]: \"2023-07-01\" };\n        });\n        break;\n\n      case \"se\":\n        setscoreCardDataPayload((prevState) => {\n          return {\n            ...prevState,\n            [\"cslIds\"]: -1,\n            [\"customerId\"]: -1,\n            [\"executives\"]: value,\n          };\n        });\n        break;\n\n      case \"csl\":\n        setscoreCardDataPayload((prevState) => {\n          return {\n            ...prevState,\n            [\"dpIds\"]: -1,\n            [\"customerId\"]: -1,\n            [\"executives\"]: -1,\n          };\n        });\n        break;\n\n      case \"dp\":\n        setscoreCardDataPayload((prevState) => {\n          return {\n            ...prevState,\n            [\"executives\"]: -1,\n            [\"cslIds\"]: -1,\n            [\"customerId\"]: -1,\n          };\n        });\n        break;\n\n      case \"cust\":\n        setscoreCardDataPayload((prevState) => {\n          return { ...prevState, [\"cslIds\"]: -1, [\"dpIds\"]: -1 };\n        });\n        break;\n\n      case \"Divisions\":\n        console.log(\n          selectesFOwnerDivison.length,\n          \"selectesFOwnerDivison.length\",\n          sFOwnerDivisionsDropdown.length,\n          \"sFOwnerDivisionsDropdown.length\"\n        );\n        // if (sFOwnerDivisionsDropdown.length == (selectesFOwnerDivison.length + parseInt(1))) {\n        //     setscoreCardDataPayload((prevState) => {\n        //         return { ...prevState, [\"Divisions\"]: -1, [\"viewby\"]: \"se\", [\"executives\"]: -2 }\n        //     })\n        // }\n        // else {\n        // setSediv(\"Divisions\")\n        setscoreCardDataPayload((prevState) => {\n          return { ...prevState, [\"viewby\"]: \"se\" };\n        });\n\n        // }\n\n        break;\n\n      default:\n        break;\n    }\n  };\n  console.log(division, \"division state\");\n  const [hirarchy, setHirarchy] = useState([]);\n\n  const hirarchyAccess = () => {\n    axios\n\n      .get(\n        baseUrl +\n          `/ProjectMS/project/getHirarchyAccesss?loggedUserId=${loggedUserId}`\n      )\n\n      .then((resp) => {\n        const data = resp.data;\n        console.log(data);\n        setHirarchy(data);\n      })\n\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n  useEffect(() => {\n    hirarchyAccess();\n  }, []);\n  // -----------------------calls----------------------------------\n\n  const baseUrl = environment.baseUrl;\n  useEffect(() => {}, [item]);\n\n  const getsalesExecutiveDropdown = () => {\n    axios\n      .get(baseUrl + \"/SalesMS/MasterController/salesExecutiveData\")\n      .then((resp) => {\n        const data = resp.data;\n        const dropdownOptions = data\n          .filter((item) => item.isActive === 1)\n          .map((item) => {\n            return (\n              <option key={item.id} value={item.val}>\n                {item.lkupName}\n              </option>\n            );\n          });\n        setsalesExecutiveDropdown(dropdownOptions);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  // const getcslMultiselectDropdown = () => {\n  //   // const loggedUser = \"19042\";\n  //   axios\n  //     .get(\n  //       dataAccess == 641\n  //         ? baseUrl +\n  //             `/CommonMS/master/getCSLDPAE?loggedUserId=139715925\n  //       `\n  //         : baseUrl +\n  //             `/SalesMS/MasterController/getCslDropDownData?userId=${loggedUserId}`\n  //     )\n  //     .then((resp) => {\n  //       const data = resp.data;\n  //       const dropdownOptions = data.map((item) => {\n  //         let obj = {\n  //           value: item.id,\n  //           label: item.PersonName,\n  //         };\n  //         return obj;\n  //       });\n  //       setcslMultiselectDropdown(dropdownOptions);\n  //       setselectedCSL(dropdownOptions);\n  //     })\n  //     .catch((err) => {\n  //       console.log(err);\n  //     });\n  // };\n\n  // const getdpMultiselectDropdown = () => {\n  //   // const loggedUser = \"19042\";\n  //   axios\n  //     .get(\n  //       dataAccess == 690\n  //         ? baseUrl + `/CommonMS/master/getDP?loggedUserId=${loggedUserId}`\n  //         : baseUrl +\n  //             `/CommonMS/master/getDPDropDownData?userId=${loggedUserId}`\n  //     )\n  //     .then((resp) => {\n  //       const data = resp.data;\n  //       const dropdownOptions = data.map((item) => {\n  //         let obj = {\n  //           value: item.id,\n  //           label: item.PersonName,\n  //         };\n  //         return obj;\n  //       });\n  //       setdpMultiselectDropdown(dropdownOptions);\n  //       setselectedDP(dropdownOptions);\n  //     })\n  //     .catch((err) => {\n  //       console.log(err);\n  //     });\n  // };\n\n  // const getcustomerSearch = () => {\n  //     console.log(\"here\")\n  //     axios.get(baseUrl + `/CommonMS/master/getFilterCustomers?isAll=false&isLimitedAccess=false&cslUser=0&isActive=true&term=`)\n  //         .then((resp) => {\n  //             const data = resp.data;\n  //             const dropdownOptions = data.map((item) => {\n  //                 let obj = {\n  //                     value: item.id,\n  //                     label: item.full_name\n  //                 }\n  //                 return obj\n  //             })\n  //             setcustomerAutocomplete(dropdownOptions)\n  //             setselectedCustomer(dropdownOptions)\n  //         })\n  //         .catch((err) => {\n  //             console.log(err)\n  //         })\n  // }\n\n  const getSFOwnerDivisionsDropdown = () => {\n    axios\n      .get(baseUrl + `/SalesMS/MasterController/SFOwnerDivisions`)\n      .then((resp) => {\n        const data = resp.data;\n        const dropdownOptions = data.map((item) => {\n          return {\n            value: item.id,\n            label: item.owner_Division,\n          };\n        });\n        setSFOwnerDivisionsDropdown(dropdownOptions);\n        setselectesFOwnerDivison(dropdownOptions);\n        setscoreCardDataPayload((prevState) => {\n          return {\n            ...prevState,\n            [\"Divisions\"]: -1,\n          };\n        });\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  // const getCustomerdata = () => {\n  //   axios({\n  //     method: \"get\",\n  //     url: baseUrl + `/customersms/Customers/getCustomers`,\n  //   }).then(function (response) {\n  //     var resp = response.data;\n  //     setCustomer(resp);\n  //   });\n  // };\n\n  const getExecutivesForOwnerDivision = () => {\n    axios({\n      method: \"get\",\n      url:\n        baseUrl +\n        `/SalesMS/scoreCard/getExecutivesForOwnerDivision?divid=${division}`,\n    })\n      .then(function (response) {\n        let resp = response.data;\n        console.log(resp, \"response\");\n        setDivExecutive(resp);\n        //    setPrjName(resp)\n      })\n      .catch(function (response) {\n        console.log(response);\n      });\n  };\n  const ArrowRenderer = ({ expanded }) => (\n    <>\n      {expanded ? (\n        <FaCaretDown className=\"chevronIcon\" />\n      ) : (\n        <FaCaretDown className=\"chevronIcon\" />\n      )}\n    </>\n  );\n\n  const generateDropdownLabel = (selectedOptions, allOptions) => {\n    const selectedValues = selectedOptions.map((option) => option.value);\n    const allValues = allOptions.map((item) => item.value);\n\n    if (selectedValues.length === allValues.length) {\n      return \"<< ALL >>\";\n    } else {\n      return selectedOptions.map((option) => option.label).join(\", \");\n    }\n  };\n\n  const SelectSEData = useSelector(\n    (state) => state.selectedSEState.directSETreeData\n  );\n  const getscoreCardData = async () => {\n    console.log(scoreCardDataPayload, \"--scoreCardDataPayload\");\n    console.log(scoreCardDataPayload.measures, \"---measures\");\n    setScoreCardData({});\n    setcsat([]);\n    setrisk([]);\n    setqbrList([]);\n    abortController.current = new AbortController();\n    setTimeout(() => {\n      setsearching(true);\n    }, 2000);\n    let filteredData = ref.current.filter((d) => d != null);\n\n    ref.current = filteredData;\n\n    let valid = GlobalValidation(ref);\n    console.log(valid);\n\n    if (valid == true) {\n      setsearching(false);\n      seterrorMsg(true);\n\n      setTimeout(() => {\n        seterrorMsg(false);\n      }, 2000);\n    }\n\n    if (valid) {\n      return;\n    }\n    // setLoader(true);\n    const loaderTime = setTimeout(() => {\n      setsearching(true);\n    }, 2000);\n\n    // !valid && setVisible(!visible);\n\n    let payload = null;\n    payload = scoreCardDataPayload;\n    // ---------------------popup payload-------------------------------------------\n    // payload.executives === \"1\"\n    //   ? flattenedIds.join(\",\") == \"\"\n    //     ? filteredIds.join(\",\")\n    //     : flattenedIds.join(\",\")\n    //   : salesEx,\n    payload[\"executives\"] =\n      payload.executives == \"1\"\n        ? SelectSEData\n        : payload[\"viewby\"] != \"se\"\n        ? -1\n        : salesEx;\n    // (payload.executives = String(\n    //     JSON.parse(localStorage.getItem(\"selectedSE\")).map((item) => {\n    //       return item.id;\n    //     })\n    //   ))\n\n    // ------------------------------------------------------------------------------------\n    console.log(\"in line 304---\");\n\n    scoreCardDataPayload[\"executives\"] =\n      scoreCardDataPayload[\"Divisions\"] == -1 &&\n      scoreCardDataPayload[\"executives\"] == -2 &&\n      (sediv == \"Divisions\" || sediv == \"initial\")\n        ? -2\n        : scoreCardDataPayload[\"Divisions\"] == -1 &&\n          scoreCardDataPayload[\"executives\"] != -2 &&\n          sediv != \"Divisions\"\n        ? scoreCardDataPayload[\"executives\"]\n        : divExecutive;\n\n    console.log(scoreCardDataPayload, sediv, divExecutive, \"after\");\n    await axios({\n      method: \"post\",\n      url: baseUrl + `/SalesMS/scoreCard/scoreCardData`,\n      data: payload,\n      signal: abortController.current.signal,\n    })\n      .then((resp) => {\n        const data = resp.data;\n        setreportRunId(resp.data.reportRunId);\n        setScoreCardData(data);\n        scoreCardDataPayload.type === \"tr\"\n          ? (setShowHistoricalTrend(true), setScoreCardData(data))\n          : setShowHistoricalTrend(false);\n        // setcardSelector(scoreCardDataPayload.measures);\n        clearTimeout(loaderTime);\n        setsearching(false);\n        !valid && setVisible(!visible);\n        visible\n          ? setCheveronIcon(FaChevronCircleUp)\n          : setCheveronIcon(FaChevronCircleDown);\n\n        setDispSF(true);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n    axios\n      .get(baseUrl + `/SalesMS/scoreCard/getScoreCardCSATProjects`)\n      .then((resp) => {\n        const data = resp.data;\n        setcsat(data);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n    axios\n      .get(baseUrl + `/SalesMS/scoreCard/getScoreCardTProjectRisks`)\n      .then((resp) => {\n        const data = resp.data;\n        setrisk(data);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n    axios\n      .get(baseUrl + `/SalesMS/scoreCard/getScoreCardProjectsQBRList`)\n      .then((resp) => {\n        const data = resp.data;\n        setqbrList(data);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n  console.log(accessData);\n  const handleAbort = () => {\n    abortController.current && abortController.current.abort();\n    setsearching(false);\n  };\n\n  const getserviceData = () => {\n    setsearching(false);\n\n    axios\n      .post(baseUrl + `/SalesMS/salesforce/refreshSalesForceData`, {\n        reportRunId: \"\" + reportRunId,\n        for: \"\",\n      })\n      .then((resp) => {\n        const data = resp.data.data;\n        console.log(data);\n        // setTimeout(() => {\n        // setsearching(true);\n        // }, 4000);\n        // setTimeout(() => {\n        setVisible(!visible);\n        visible\n          ? setCheveronIcon(FaChevronCircleUp)\n          : setCheveronIcon(FaChevronCircleDown);\n        getscoreCardData();\n        setsearching(false);\n        // }, 2000);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n  console.log(accessData);\n  // -----------------------------useEffect---------------------------------\n\n  useEffect(() => {\n    getsalesExecutiveDropdown();\n    // getcslMultiselectDropdown();\n    // getdpMultiselectDropdown();\n    // getcustomerSearch()\n    getSFOwnerDivisionsDropdown();\n    // getCustomerdata();\n  }, []);\n  useEffect(() => {\n    getExecutivesForOwnerDivision();\n  }, [division]);\n\n  const handleClear = () => {\n    setscoreCardDataPayload((prev) => ({ ...prev, customerId: \"-1\" }));\n  };\n  const HelpPDFName = \"Scorecard.pdf\";\n  const Headername = \"Scorecard Help\";\n  return (\n    <div>\n      <div className=\"col-md-12\">\n        <div className=\"pageTitle\">\n          <div className=\"childOne\"></div>\n          <div className=\"childTwo\">\n            <h2>Scorecard</h2>\n          </div>\n          <div className=\"childThree\"></div>\n        </div>\n      </div>\n      {errorMsg ? (\n        <div className=\"statusMsg error\">\n          {\" \"}\n          <AiFillWarning /> Please select valid values for highlighted fields\n        </div>\n      ) : (\n        \"\"\n      )}\n      <ScreenBreadcrumbs\n        routes={routes}\n        currentScreenName={currentScreenName}\n      />\n\n      <div className=\"group mb-3  customCard\">\n        <div className=\"col-md-12 collapseHeader\">\n          <h2>Search Filters</h2>\n\n          <div className=\"helpBtn\">\n            <GlobalHelp pdfname={HelpPDFName} name={Headername} />\n            {dispSF && (\n              <h2 onClick={getserviceData} style={{ cursor: \"pointer\" }}>\n                Sf <BiRefresh />\n              </h2>\n            )}\n          </div>\n          <div\n            onClick={() => {\n              setVisible(!visible);\n              visible\n                ? setCheveronIcon(FaChevronCircleUp)\n                : setCheveronIcon(FaChevronCircleDown);\n            }}\n          >\n            <span>{cheveronIcon}</span>\n          </div>\n        </div>\n        <CCollapse visible={!visible}>\n          <div className=\"group-content row\">\n            <div className=\"col-md-3 mb-2\">\n              <div className=\"form-group row\">\n                <label className=\"col-5\">Type </label>\n                <span className=\"col-1 p-0\">:</span>\n\n                <span className=\"col-6\">\n                  <select\n                    id=\"type\"\n                    className=\"col-md-12 col-sm-12 col-xs-12  onLoadEmpty\"\n                    onChange={(e) => {\n                      onFilterChange(e.target);\n                    }}\n                  >\n                    <option value=\"cu\">Current Quarter</option>\n                    <option value=\"tr\">Historical Trend</option>\n                    <option value=\"ne\">Next Quarter</option>\n                  </select>\n                </span>\n              </div>\n            </div>\n            <div className=\" col-md-3 mb-2\">\n              <div className=\"form-group row\">\n                <label className=\"col-5\">View By </label>\n                <span className=\"col-1 p-0\">:</span>\n\n                <span className=\"col-6\">\n                  <div id=\"viewby\">\n                    <select\n                      id=\"viewby\"\n                      className=\"col-md-12 col-sm-12 col-xs-12  onLoadEmpty\"\n                      onChange={(e) => {\n                        onFilterChange(e.target);\n                        setViewBy(e.target.value);\n                        e.target.value == \"Divisions\" && setSediv(\"Divisions\");\n                      }}\n                    >\n                      <option value=\"se\">Executive</option>\n                      {dataAccess == 641 ||\n                      dataAccess == 126 ||\n                      dataAccess == 919 ||\n                      dataAccess == 600 ? (\n                        <option value=\"csl\">CSL</option>\n                      ) : (\n                        \"\"\n                      )}\n                      {dataAccess == 690 ||\n                      dataAccess == 126 ||\n                      dataAccess == 919 ||\n                      dataAccess == 600 ? (\n                        <option value=\"dp\">DP</option>\n                      ) : (\n                        \"\"\n                      )}\n                      <option value=\"cust\">Customer</option>\n                      <option value=\"Divisions\">Owner Division</option>\n                    </select>\n                  </div>\n                </span>\n              </div>\n            </div>\n            {/* <div className=\"col-md-3 col-sm-10 col-xs-12 seDiv\" id=\"execSelDiv\">\n                {/* <div className=\"clearfix\" style={{ height: '10px' }}></div> \n                <div className=\"form-group pui-require\">\n                    <label className=\"col-md-5 col-sm-5 col-xs-5 no-padding\">Type</label>\n                    <span className=\"col-xs-1 bold\">:</span>\n                    <span className=\"col-md-5 col-sm-5 col-xs-5 no-padding\" style={{ height: '23px' }}>\n                        <select id=\"type\" className=\"col-md-12 col-sm-12 col-xs-12  onLoadEmpty\" onChange={(e) => { onFilterChange(e.target) }}>\n                            <option value=\"cu\">Current Quarter</option>\n                            <option value=\"ne\">Next Quarter</option>\n                            <option value=\"tr\">Historical Trend</option>\n\n                        </select>\n                    </span>\n                </div>\n            </div> */}\n\n            {/* <div className=\"col-md-3 col-sm-10 col-xs-12 seDiv\" id=\"execSelDiv\">\n                <div className=\"clearfix\" style={{ height: '10px' }}></div>\n                <div className=\"form-group pui-require\">\n                    <label className=\"col-md-5 col-sm-5 col-xs-5 no-padding\">View By</label>\n                    <span className=\"col-xs-1 bold\">:</span>\n                    <span className=\"col-md-5 col-sm-5 col-xs-5 no-padding\" style={{ height: '23px' }}>\n                        <select id=\"viewby\" className=\"col-md-12 col-sm-12 col-xs-12  onLoadEmpty\" onChange={(e) => { onFilterChange(e.target) }}>\n                            <option value=\"se\">Executive</option>\n                            <option value=\"csl\">CSL</option>\n                            <option value=\"dp\">DP</option>\n                            <option value=\"cust\">Customer</option>\n                        </select>\n                    </span>\n                </div>\n            </div> */}\n\n            {\n              viewBy === \"se\" && (\n                <div className=\" col-md-3 mb-2\">\n                  {/* <div className=\"clearfix\" style={{ height: \"10px\" }}></div> */}\n\n                  <div className=\"form-group row\">\n                    <label className=\"col-5\">\n                      Sales Executive{\" \"}\n                      <span className=\"required error-text ml-1\"> *</span>\n                    </label>\n                    <span className=\"col-1 p-0\">:</span>\n\n                    <span className=\"col-6\">\n                      <div id=\"executives\">\n                        {accessData == 1000 || accessData == 500 ? (\n                          <select\n                            id=\"executives\"\n                            className=\"col-md-12 col-sm-12 col-xs-12  text onLoadEmpty\"\n                            value={\n                              selectedSEVal\n                              // scoreCardDataPayload.executives > 5\n                              //   ? \"1\"\n                              //   : scoreCardDataPayload.executives\n                            }\n                            onChange={(e) => {\n                              onFilterChange(e.target);\n                              setselectedSE(\n                                e.target.options[e.target.selectedIndex].text\n                              );\n                              setSelectedSEVal(e.target.value);\n\n                              setSalesEx(e.target.value);\n                              console.log(\n                                e.target.options[e.target.selectedIndex].text,\n                                \"se value\"\n                              );\n                            }}\n                            ref={(ele) => {\n                              ref.current[0] = ele;\n                            }}\n                          >\n                            <option value=\"\">{\"<< Please select>> \"}</option>\n                            {salesExecutiveDropdown}\n                          </select>\n                        ) : (\n                          <select\n                            id=\"executives\"\n                            className=\"col-md-12 col-sm-12 col-xs-12  text onLoadEmpty\"\n                            value={\n                              selectedSEVal\n                              // scoreCardDataPayload.executives > 5\n                              //   ? \"1\"\n                              //   : scoreCardDataPayload.executives\n                            }\n                            onChange={(e) => {\n                              onFilterChange(e.target);\n                              setselectedSE(\n                                e.target.options[e.target.selectedIndex].text\n                              );\n                              setSelectedSEVal(e.target.value);\n\n                              setSalesEx(e.target.value);\n                              console.log(\n                                e.target.options[e.target.selectedIndex].text,\n                                \"se value\"\n                              );\n                            }}\n                            ref={(ele) => {\n                              ref.current[0] = ele;\n                            }}\n                          >\n                            <option value=\"\">{\"<< Please select>> \"}</option>\n                            <option value=\"1\">Select SE</option>\n                          </select>\n                        )}\n                      </div>\n                    </span>\n                  </div>\n                </div>\n              )\n              // : (\n              //   <div className=\"col-md-3 mb-2\" id=\"execSelDiv\">\n              //     {/* <div className=\"clearfix\" style={{ height: \"10px\" }}></div> */}\n\n              //     <div className=\"form-group row\">\n              //       <label className=\"col-5\">\n              //         Sales Executive <span className=\"error-text\">&nbsp;*</span>\n              //       </label>\n\n              //       <span className=\"col-1 p-0\">:</span>\n\n              //       <span className=\"col-6 textfield\">\n              //         <select\n              //           id=\"executives\"\n              //           className=\"text\"\n              //           value={scoreCardDataPayload.executives}\n              //           onChange={(e) => {\n              //             console.log(e);\n\n              //             onFilterChange(e.target);\n\n              //             console.log(e.target);\n\n              //             setselectedSE(\n              //               e.target.options[e.target.selectedIndex].text\n              //             );\n              //           }}\n              //           ref={(ele) => {\n              //             ref.current[0] = ele;\n              //           }}\n              //         >\n              //           <option value={0}>{\"<< Please select>> \"}</option>\n\n              //           <option value={1}>{\"<< Select SE>> \"}</option>\n              //         </select>\n              //       </span>\n              //     </div>\n              //   </div>\n              // )}\n            }\n\n            {viewBy === \"csl\" && (\n              <div className=\" col-md-3 mb-2\">\n                <div className=\"form-group row\">\n                  <label className=\"col-5\">\n                    CSL<span className=\"required error-text ml-1\"> *</span>\n                  </label>\n                  <span className=\"col-1 p-0\">:</span>\n                  <div\n                    className=\"col-6 multiselect\"\n                    ref={(ele) => {\n                      ref.current[1] = ele;\n                    }}\n                    id=\"CSL\"\n                  >\n                    {/* <div id=\"CSL\"> */}\n                    <MultiSelect\n                      ArrowRenderer={ArrowRenderer}\n                      options={cslMultiselectDropdown}\n                      hasSelectAll={true}\n                      isLoading={false}\n                      valueRenderer={generateDropdownLabel}\n                      shouldToggleOnHover={false}\n                      disableSearch={false}\n                      value={selectedCSL}\n                      disabled={false}\n                      onChange={(s) => {\n                        setselectedCSL(s);\n                        let selected = s.map((item) => {\n                          return item.value;\n                        });\n                        onFilterChange({\n                          id: \"cslIds\",\n                          value: selected.toString(),\n                        });\n                      }}\n                    />\n                    {/* </div> */}\n                  </div>\n                </div>\n              </div>\n            )}\n            {/* </div> <div className=\"col-md-3 col-sm-10 col-xs-12 no-padding\" id=\"CSLDiv\">\n                <div className=\"clearfix\" style={{ height: '10px' }}></div>\n                <div className=\"form-group pui-require\">\n                    <label className=\"col-md-5 col-sm-5 col-xs-5  no-padding\">CSL</label>\n                    <span className=\"col-xs-1 bold \">:</span>\n                    <span className={`col-md-5 col-sm-5 col-xs-5 no-padding ${errorMsg && 'alert alert-danger'}`} style={{ height: '23px' }}>\n                        <MultiSelect\n                            options={cslMultiselectDropdown}\n                            hasSelectAll={true}\n                            isLoading={false}\n                            shouldToggleOnHover={false}\n                            disableSearch={false}\n                            value={selectedCSL}\n                            disabled={false}\n                            onChange={(s) => {\n                                setselectedCSL(s);\n                                let selected = s.map((item) => {\n                                    return item.value\n                                })\n                                onFilterChange({ id: \"cslIds\", value: selected.toString() })\n                            }}\n                        />\n                    </span>\n                </div>\n            </div>} */}\n\n            {viewBy === \"dp\" && (\n              <div className=\" col-md-3 mb-2\">\n                <div className=\"form-group row\">\n                  <label className=\"col-5\">\n                    DP <span className=\"required error-text ml-1\"> *</span>\n                  </label>\n                  <span className=\"col-1 p-0\">:</span>\n\n                  <div\n                    className=\"col-6 multiselect\"\n                    ref={(ele) => {\n                      ref.current[2] = ele;\n                    }}\n                  >\n                    {/* <div id=\"DP\"> */}\n                    <MultiSelect\n                      ArrowRenderer={ArrowRenderer}\n                      valueRenderer={generateDropdownLabel}\n                      options={dpMultiselectDropdown}\n                      hasSelectAll={true}\n                      isLoading={false}\n                      shouldToggleOnHover={false}\n                      disableSearch={false}\n                      value={selectedDP}\n                      disabled={false}\n                      onChange={(s) => {\n                        setselectedDP(s);\n                        let selected = s.map((item) => {\n                          return item.value;\n                        });\n                        onFilterChange({\n                          id: \"dpIds\",\n                          value: selected.toString(),\n                        });\n                      }}\n                    />\n                    {/* </div> */}\n                  </div>\n                </div>\n              </div>\n            )}\n            {/*  <div className=\"col-md-3 col-sm-10 col-xs-12 no-padding\" id=\"CSLDiv\">\n                <div className=\"clearfix\" style={{ height: '10px' }}></div>\n                <div className=\"form-group pui-require\">\n                    <label className=\"col-md-5 col-sm-5 col-xs-5  no-padding\">DP</label>\n                    <span className=\"col-xs-1 bold \">:</span>\n                    <span className={`col-md-5 col-sm-5 col-xs-5 no-padding ${errorMsg && 'alert alert-danger'}`} style={{ height: '23px' }}>\n                        <MultiSelect\n                            options={dpMultiselectDropdown}\n                            hasSelectAll={true}\n                            isLoading={false}\n                            shouldToggleOnHover={false}\n                            disableSearch={false}\n                            value={selectedDP}\n                            disabled={false}\n                            onChange={(s) => {\n                                setselectedDP(s);\n                                let selected = s.map((item) => {\n                                    return item.value\n                                })\n                                onFilterChange({ id: \"cslIds\", value: selected.toString() })\n                            }}\n                        />\n                    </span>\n                </div>\n            </div>} */}\n\n            {viewBy === \"cust\" && (\n              <div className=\" col-md-3 mb-2\">\n                <div className=\"form-group row\">\n                  <label className=\"col-5\">\n                    Customer{\" \"}\n                    <span className=\"required error-text ml-1\"> *</span>{\" \"}\n                  </label>\n                  <span className=\"col-1 p-0\">:</span>\n\n                  <div\n                    className=\"col-6 autocomplete\"\n                    ref={(ele) => {\n                      ref.current[3] = ele;\n                    }}\n                    id=\"Customer\"\n                  >\n                    {/* <div id=\"Customer\"> */}\n                    <div className=\"autoComplete-container\">\n                      <ReactSearchAutocomplete\n                        items={customer}\n                        type=\"Text\"\n                        name=\"customerId\"\n                        id=\"customerId\"\n                        className=\"AutoComplete\"\n                        onSelect={(s) => {\n                          setscoreCardDataPayload((prevProps) => ({\n                            ...prevProps,\n                            customerId: s.id,\n                          }));\n                          // setselectedCustomer(s);\n                          // let selected = s.map((item) => {\n                          //     return item.value\n                          // })\n                          // onFilterChange({\n                          //     id: \"customerId\", value: selected.toString()\n                          //     //  value: a[0].value === undefined ? -1 : a[0].value\n                          // })\n                        }}\n                        showIcon={false}\n                        onClear={handleClear}\n                        placeholder=\"Type minimum 3 characters\"\n                      />\n                      <span> {item.name}</span>\n                    </div>\n                    {/* <MultiSelect\n                                        ArrowRenderer={ArrowRenderer}\n\n                                        options={customerAutocomplete}\n                                        hasSelectAll={true}\n                                        isLoading={false}\n                                        shouldToggleOnHover={false}\n                                        disableSearch={false}\n                                        value={selectedCustomer}\n                                        disabled={false}\n                                        onChange={(s) => {\n                                            // let a = s[s.length - 1] === undefined ? [] : [s[s.length - 1]]\n                                            setselectedCustomer(s);\n                                            let selected = s.map((item) => {\n                                                return item.value\n                                            })\n                                            console.log(s.length)\n                                            onFilterChange({\n                                                id: \"customerId\", value: selected.toString()\n                                                //  value: a[0].value === undefined ? -1 : a[0].value\n                                            })\n                                        }}\n                                    /> */}\n                    {/* </div> */}\n                  </div>\n                </div>\n              </div>\n            )}\n            {/* <div className=\"col-md-3 col-sm-10 col-xs-12 no-padding\" id=\"CSLDiv\">\n                <div className=\"clearfix\" style={{ height: '10px' }}></div>\n                <div className=\"form-group pui-require\">\n                    <label className=\"col-md-5 col-sm-5 col-xs-5  no-padding\">Customer</label>\n                    <span className=\"col-xs-1 bold\">:</span>\n                    <span className={`col-md-5 col-sm-5 col-xs-5 no-padding ${errorMsg && 'alert alert-danger'}`} style={{ height: '23px' }}>\n                        <MultiSelect\n                            options={customerAutocomplete}\n                            hasSelectAll={false}\n                            isLoading={false}\n                            shouldToggleOnHover={false}\n                            disableSearch={false}\n                            value={selectedCustomer}\n                            disabled={false}\n                            onChange={(s) => {\n                                let a = s[s.length - 1] === undefined ? [] : [s[s.length - 1]]\n                                setselectedCustomer(a);\n                                console.log(s.length)\n                                onFilterChange({ id: \"customerId\", value: a[0].value === undefined ? -1 : a[0].value })\n                            }}\n                        />\n                    </span>\n                </div>\n            </div>} */}\n\n            {viewBy === \"Divisions\" && (\n              <div className=\" col-md-3 mb-2\">\n                <div className=\"form-group row\">\n                  <label className=\"col-5\">\n                    Owner Division{\" \"}\n                    <span className=\"required error-text ml-1\"> *</span>\n                  </label>\n                  <span className=\"col-1 p-0\">:</span>\n\n                  <div\n                    className=\"col-6 multiselect\"\n                    ref={(ele) => {\n                      ref.current[4] = ele;\n                    }}\n                  >\n                    <MultiSelect\n                      ArrowRenderer={ArrowRenderer}\n                      valueRenderer={generateDropdownLabel}\n                      options={sFOwnerDivisionsDropdown}\n                      hasSelectAll={true}\n                      isLoading={false}\n                      shouldToggleOnHover={false}\n                      disableSearch={false}\n                      value={selectesFOwnerDivison}\n                      disabled={false}\n                      onChange={(s) => {\n                        setselectesFOwnerDivison(s);\n                        let selected =\n                          s.length == sFOwnerDivisionsDropdown.length\n                            ? -1\n                            : s.map((item) => {\n                                return item.value;\n                              });\n                        setDivision(selected.toString());\n                        onFilterChange({\n                          id: \"Divisions\",\n                          value: selected.toString(),\n                        });\n                      }}\n                    />\n                  </div>\n                </div>\n              </div>\n            )}\n            {scoreCardDataPayload.type !== \"tr\" ? (\n              <div className=\" col-md-3 mb-2\">\n                <div className=\"form-group row\">\n                  <label className=\"col-5\">\n                    Measures{\" \"}\n                    <span className=\"required error-text ml-1\"> *</span>{\" \"}\n                  </label>\n                  <span className=\"col-1 p-0\">:</span>\n\n                  <div\n                    className=\"col-6 multiselect\"\n                    ref={(ele) => {\n                      ref.current[5] = ele;\n                    }}\n                    id=\"Measures\"\n                  >\n                    {/* <div id=\"Measures\"> */}\n                    <MultiSelect\n                      ArrowRenderer={ArrowRenderer}\n                      valueRenderer={generateDropdownLabel}\n                      options={measuresDropdownObject}\n                      hasSelectAll={true}\n                      isLoading={false}\n                      shouldToggleOnHover={false}\n                      disableSearch={false}\n                      value={measuresDropdown}\n                      disabled={false}\n                      onChange={(s) => {\n                        setmeasuresDropdown(s);\n                        let selected = s.map((item) => {\n                          return item.value;\n                        });\n                        onFilterChange({\n                          id: \"measures\",\n                          value: selected.toString(),\n                        });\n                        setcardSelector(selected.toString());\n                      }}\n                    />\n                    {/* </div> */}\n                  </div>\n                </div>\n              </div>\n            ) : (\n              <>\n                <div className=\" col-md-3 mb-2\">\n                  <div className=\"form-group row\">\n                    <label className=\"col-5\">\n                      From Quarter{\" \"}\n                      <span className=\"required error-text ml-1\"> *</span>{\" \"}\n                    </label>\n                    <span className=\"col-1 p-0\">:</span>\n\n                    <span\n                      className=\"col-6 datepicker\"\n                      ref={(ele) => {\n                        ref.current[5] = ele;\n                      }}\n                    >\n                      {/* <div id=\"From Quarter\"> */}\n                      <DatePicker\n                        selected={startDate}\n                        maxDate={moment(currentQuarter)\n                          .endOf(\"quarter\")\n                          .toDate()}\n                        onChange={(e) => {\n                          console.log(\n                            moment(currentQuarter).endOf(\"quarter\").toDate(),\n\n                            moment(e).format(\"yyyy-MM-DD\"),\n                            \"quarter selected\"\n                          );\n                          let quarter =\n                            parseInt(moment(e).format(\"YYYY-MM-DD\")) -\n                            parseInt(3);\n\n                          let selectMonth = moment(e).format(\"MM\");\n                          // console.log(quarter, moment(e).format(\"MM\"), selectMonth, \"selectMonth\")\n\n                          let customMonth = null;\n                          if (parseInt(selectMonth) == 1) {\n                            customMonth = moment(e)\n                              .subtract(1, \"years\")\n                              .add(3, \"months\")\n                              .format(\"yyyy-MM-DD\");\n                          } else if (parseInt(selectMonth) == 4) {\n                            customMonth = moment(e)\n                              .subtract(1, \"years\")\n                              .add(3, \"months\")\n                              .format(\"yyyy-MM-DD\");\n                          } else if (parseInt(selectMonth) == 7) {\n                            customMonth = moment(e)\n                              .subtract(1, \"years\")\n                              .add(3, \"months\")\n                              .format(\"yyyy-MM-DD\");\n                          } else if (parseInt(selectMonth) == 10) {\n                            customMonth = moment(e)\n                              .subtract(9, \"months\")\n                              .format(\"yyyy-MM-DD\");\n                          }\n\n                          console.log(\"in line 777\");\n                          console.log(customMonth);\n\n                          setStartDate(moment(e)._d);\n                          onFilterChange({\n                            id: \"from\",\n                            value: moment(customMonth).format(\"yyyy-MM-DD\"),\n                          });\n\n                          // setduration([]);\n                          let selectedYear = moment(e).format(\"yyyy\");\n                          let currentYear = new Date().getFullYear();\n                          console.log(\n                            selectedYear,\n                            currentYear,\n                            parseInt(moment(customMonth).format(\"MM\")),\n                            \"current year\"\n                          );\n                          if (\n                            selectedYear == currentYear &&\n                            parseInt(moment(customMonth).format(\"MM\")) == 1\n                          ) {\n                            setduration([1, 2, 3]);\n                            console.log([1, 2, 3]);\n                          } else if (\n                            selectedYear == currentYear + parseInt(1) &&\n                            parseInt(moment(customMonth).format(\"MM\")) == 4\n                          ) {\n                            setduration([1, 2]);\n                            console.log([1, 2]);\n                          } else if (\n                            selectedYear == currentYear &&\n                            parseInt(moment(customMonth).format(\"MM\")) == 10\n                          ) {\n                            setduration([1, 2, 3, 4]);\n                            console.log([1, 2, 3, 4]);\n                          } else if (\n                            selectedYear == currentYear &&\n                            parseInt(moment(customMonth).format(\"MM\")) == 7\n                          ) {\n                            setduration([1, 2, 3, 4]);\n                            console.log([1, 2, 3, 4]);\n                          } else if (\n                            selectedYear == currentYear + parseInt(1) &&\n                            parseInt(moment(customMonth).format(\"MM\")) == 7\n                          ) {\n                            setduration([1]);\n                          } else {\n                            setduration([1, 2, 3, 4]);\n                            console.log([1, 2, 3, 4]);\n                          }\n\n                          // for (let index = 1; index <= selectMonth; index++) {\n                          //     console.log(index);\n                          //     setduration(prevState => [...prevState, index]);\n                          // }\n                        }}\n                        dateFormat=\"yyyy, QQQ\"\n                        showQuarterYearPicker\n                        // maxDate={new Date()}\n                      />\n                      {/* </div> */}\n                    </span>\n                  </div>\n                </div>\n                <div className=\" col-md-3 mb-2\">\n                  <div className=\"form-group row\">\n                    <label className=\"col-5\">Duration </label>\n                    <span className=\"col-1 p-0\">:</span>\n\n                    <span className=\"col-6\">\n                      <div id=\"From Quarter\">\n                        <select\n                          id=\"duration\"\n                          name=\"duration\"\n                          className=\"col-md-12 col-sm-12 col-xs-12 \"\n                          defaultValue={\"1\"}\n                          onChange={(e) => {\n                            onFilterChange(e.target);\n                          }}\n                        >\n                          {duration.map((item) => {\n                            return <option value={item}>{item}</option>;\n                          })}\n                        </select>\n                      </div>\n                    </span>\n                  </div>\n                </div>\n              </>\n            )}\n\n            {/* <div className=\"col-md-3 col-sm-10 col-xs-12 seDiv\">\n              <div className=\"clearfix\" style={{ height: '10px' }}></div>\n             <div className=\"form-group pui-require\">\n                 <label className=\"col-md-5 col-sm-5 col-xs-5  no-padding\">Measures</label>\n                <span className=\"col-xs-1 bold\">:</span>\n                   <span className={`col-md-5 col-sm-5 col-xs-5 no-padding ${errorMsg && 'alert alert-danger'}`} style={{ height: '23px' }}>\n                     <MultiSelect\n                          options={measuresDropdownObject}\n                            hasSelectAll={true}\n                            isLoading={false}\n                            shouldToggleOnHover={false}\n                            disableSearch={false}\n                            value={measuresDropdown}\n                            disabled={false}\n                            onChange={(s) => {\n                                setmeasuresDropdown(s);\n                                let selected = s.map  ((item) => {\n                                     return item.value\n                                 })\n                                 onFilterChange({ id: \"measures\", value: selected.toString() })\n                            }}\n                        />\n                    </span>\n                </div>\n            </div>\n                :\n                <>\n                    <div className=\"col-md-3 col-sm-10 col-xs-12 seDiv\" id=\"execSelDiv\">\n                        <div className=\"clearfix\" style={{ height: '10px' }}></div>\n                        <div className=\"form-group pui-require\">\n                         <label className=\"col-md-5 col-sm-5 col-xs-5 no-padding\">From Quarter </label>\n                             <span className=\"col-xs-1 bold\">:</span>\n                           <span className={`col-md-5 col-sm-5 col-xs-5 no-padding ${errorMsg && 'alert alert-danger'}`} style={{ height: '23px' }}>\n                              <DatePicker\n                                  selected={startDate}\n                                  onChange={(e) => {\n                                      console.log(e)\n                                      setStartDate(e)\n                                      onFilterChange({ id: \"from\", value: e.toLocaleDateString('en-CA') })\n                                         let months;\n                                         months = (new Date) - e;\n                                        let maxdur = Math.ceil(months / (1000 * 60 * 60 * 24 * 30 * 4)) > 4 ? 4 : Math.ceil(months / (1000 * 60 * 60 * 24 * 30 * 4));\n                                         setduration([])\n                                         for (let index = 1; index <= maxdur; index++) {\n                                             setduration(prevState => [...prevState, index]);\n                                         }\n                                     }}\n                                     dateFormat=\"yyyy, QQQ\"\n                                     showQuarterYearPicker\n                                     maxDate={new Date()}\n                                 />\n                             </span>\n                         </div>\n                     </div>\n\n                    <div className=\"col-md-3 col-sm-10 col-xs-12 seDiv\">\n                        <div className=\"clearfix\" style={{ height: '12px' }}></div>\n                        <div className=\"form-group pui-require\">\n                            <label className=\"col-md-5 col-sm-5 col-xs-5 no-padding\">Duration</label>\n                            <span className=\"col-xs-1 bold\">:</span>\n                            <span className=\"col-md-5 col-sm-5 col-xs-5 no-padding\" style={{ height: '23px' }}>\n                                <select id=\"duration\" name=\"duration\" className=\"col-md-12 col-sm-12 col-xs-12 \" defaultValue={\"1\"} onChange={(e) => { onFilterChange(e.target) }}>\n                                    {duration.map((item) => {\n                                        return <option value={item}>{item}</option>\n                                    })}\n                                </select>\n                            </span>\n                        </div>\n                    </div>\n                } */}\n            {viewBy === \"se\" && (\n              <div className=\"col-md-12 no-padding section\">\n                {/* <div className=\"clearfix\" style={{ height: '20px' }}></div> */}\n                <div\n                  className=\"seFooter\"\n                  style={{ borderTop: \"1px solid #CCC\" }}\n                >\n                  {/* <div className=\"clearfix\" style={{ height: '5px' }}></div> */}\n                  <span className=\"selectedSE\">\n                    <b>Selected SE : </b>\n                    <span className=\"dynText\">\n                      {selectedSE === \"<< Select SE >>\"\n                        ? localSE.map((item, index) => (\n                            <span key={item.id}>\n                              {isIndividualChecked\n                                ? item.salesPersonName\n                                  ? item.salesPersonName\n                                  : item.text\n                                : item.salesPersonName\n                                ? item.salesPersonName\n                                : item.text + ` & Team`}\n                              {index === localSE.length - 1 ? \"\" : \", \"}\n                            </span>\n                          ))\n                        : selectedSE}\n                    </span>\n                  </span>\n                  {/* <div className=\"clearfix \" style={{ height: '5px' }}></div> */}\n                </div>\n              </div>\n            )}\n\n            {/* <div className=\"col-md-12 no-padding section\">\n                            <div className=\"seFooter\" style={{ borderTop: \"1px solid #CCC\" }}></div>\n                        </div> */}\n\n            <div className=\"col-md-12 col-sm-12 col-xs-12 btn-container center\">\n              {/* <div className=\"clearfix\" style={{ height: '25px' }}></div> */}\n              {/* {searching ?\n                                <button className=\"btn btn-primary\" type=\"button\" disabled >\n                                    <span className=\"spinner-grow spinner-grow-sm\" role=\"status\" aria-hidden=\"true\"></span>\n                                    Loading...\n                                </button> : */}\n              <button\n                type=\"button\"\n                className=\"btn btn-primary\"\n                onClick={getscoreCardData}\n              >\n                <FaSearch /> Search{\" \"}\n              </button>\n              {/* } */}\n            </div>\n            <SelectSEDialogBox\n              visible={visiblepopup}\n              setVisible={setVisiblepopup}\n              setGrpId={setGrpId}\n            />\n          </div>\n        </CCollapse>\n        {searching ? <Loader handleAbort={handleAbort} /> : \"\"}\n      </div>\n    </div>\n  );\n}\n","import Highcharts from \"highcharts\";\nimport HighchartsReact from \"highcharts-react-official\";\nimport { useEffect, useState } from \"react\";\nimport { FaInfoCircle } from \"react-icons/fa\";\nimport highcharts3d from \"highcharts/highcharts-3d\";\nhighcharts3d(Highcharts);\n\nexport default function TargetTable({ targets }) {\n  let xAxis = [];\n  let target = [];\n  let realised = [];\n  let variance = [];\n  let calls = [];\n  let planned = [];\n  const [table, settable] = useState([]);\n  const [summaryChart, setsummaryChart] = useState({});\n\n  useEffect(() => {\n    const tableRenderer =\n      Object.keys(targets).length > 0 &&\n      targets.targets.map((data) => {\n        let tableData = [];\n        const keysArray = [\n          \"category\",\n          \"target\",\n          \"realised\",\n          \"planned\",\n          \"upside\",\n          \"calls\",\n          \"variance\",\n        ];\n        keysArray.forEach((keys) => {\n          if (data[\"id\"] > -1) {\n            switch (keys) {\n              case \"category\":\n                xAxis.push(data[keys]);\n                break;\n              case \"target\":\n                target.push(parseFloat(data[keys]));\n                break;\n              case \"realised\":\n                realised.push(parseFloat(data[keys]));\n                break;\n              case \"planned\":\n                planned.push(parseFloat(Math.abs(data[keys])));\n                break;\n              case \"upside\":\n                calls.push(parseFloat(Math.abs(data[keys])));\n                break;\n              case \"variance\":\n                if (data[keys] > 0) variance.push(parseFloat(data[keys]));\n                else variance.push(0);\n                break;\n              default:\n            }\n          }\n          // console.log(parseInt(data[keys]) < 0 && data[keys].split('-')[1])\n          tableData.push(\n            data.id < 0 ? (\n              <th key={keys} style={{ textAlign: \"center\" }}>\n                {data[keys]}\n              </th>\n            ) : keys != \"category\" ? (\n              <td\n                style={{ textAlign: \"right\" }}\n                data-toggle=\"tooltip\"\n                title={parseInt(data[keys]).toLocaleString(\"en-US\")}\n              >\n                {data[keys] == null\n                  ? \"$\"\n                  : parseInt(data[keys]) >= 0\n                  ? \"$\" + parseInt(data[keys]).toLocaleString(\"en-US\")\n                  : \"-$\" +\n                    parseInt(data[keys]?.split(\"-\")[1]).toLocaleString(\"en-US\")}\n              </td>\n            ) : (\n              <td key={keys}>\n                {data[keys] == null\n                  ? \"$\"\n                  : keys === \"category\"\n                  ? data[keys]\n                  : \"$\" + parseInt(data[keys]).toLocaleString(\"en-US\")}\n              </td>\n            )\n          );\n        });\n        return <tr key={data.id}>{tableData}</tr>;\n      });\n    const summaryChart = {\n      chart: {\n        type: \"column\",\n        width: 600,\n        options3d: {\n          enabled: true,\n          alpha: 8,\n          beta: 12,\n          viewDistance: 25,\n          depth: 70,\n        },\n      },\n      title: {\n        text: \"Target, Realised/Closed, Planned/Upside, Calls and Variance\",\n        style: {\n          fontSize: \"15px\", // Set font size to 16px\n        },\n      },\n      xAxis: {\n        categories: xAxis,\n        labels: { style: { fontSize: \"12px\" } },\n        gridLineWidth: 0.2,\n      },\n      yAxis: [\n        {\n          allowDecimals: false,\n          min: 0,\n          title: {\n            text: \"Target/Realised/Planned/Upside/Variance ($)\",\n          },\n          gridLineWidth: 0.2,\n        },\n      ],\n      tooltip: {\n        formatter: function () {\n          return (\n            \"<b>\" +\n            this.x +\n            \"</b><br/>\" +\n            this.series.name +\n            \": \" +\n            this.y.toLocaleString(\"en-US\") +\n            \"<br/>\"\n          );\n        },\n      },\n      plotOptions: {\n        column: {\n          stacking: \"normal\",\n        },\n      },\n      credits: {\n        enabled: false,\n      },\n      legend: {\n        itemStyle: {\n          fontSize: \"12px\", // Set font size to 12px\n        },\n      },\n      series: [\n        {\n          name: \"Target\",\n          color: \"rgba(34, 167, 240, 1)\",\n          data: target,\n          stack: \"first\",\n          legendIndex: 1,\n        },\n        {\n          name: \"Variance\",\n          color: \"#ff6666\",\n          data: variance,\n          stack: \"second\",\n          legendIndex: 5,\n        },\n        {\n          name: \"Upside\",\n          color: \"#b3b3b3\",\n          data: calls,\n          stack: \"second\",\n          legendIndex: 4,\n        },\n        {\n          name: \"Planned\",\n          color: \"#ffc966\",\n          data: planned,\n          stack: \"second\",\n          legendIndex: 3,\n        },\n        {\n          name: \"Realised\",\n          color: \"#66ff66\",\n          data: realised,\n          stack: \"second\",\n          legendIndex: 2,\n        },\n      ],\n      responsive: {\n        rules: [\n          {\n            condition: {\n              maxWidth: 2000,\n            },\n          },\n        ],\n      },\n    };\n\n    settable(tableRenderer);\n    setsummaryChart(summaryChart);\n    console.log(targets);\n  }, [targets]);\n\n  return (\n    <div className=\"col-md-12 row\">\n      <div className=\"col-md-6 mt-2 \">\n        <HighchartsReact highcharts={Highcharts} options={summaryChart} />\n\n        {/* <HighchartsReact\n                    highcharts={Highcharts}\n                    options={summaryChart}\n                /> */}\n      </div>\n      <div className=\"col-md-6 pt-5 mt-5\">\n        <div\n          style={{ backgroundColor: \"#ffffff\", padding: \"2px\" }}\n          className=\"alert alert-warning\"\n        >\n          <span className=\"ml-2\">\n            {\" \"}\n            <FaInfoCircle size={\"0.8em\"} />\n          </span>\n          <span style={{ fontSize: \"13px\" }}>\n            {\" \"}\n            When Realised Revenue Considered, Upsided &amp; Planned Revenue are\n            not considered\n          </span>\n        </div>\n        <div className=\"darkHeader\">\n          <table className=\"table table-bordered  targetTable\">\n            <thead style={{ fontSize: \"13px\" }}>{table}</thead>\n          </table>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nexport default function SoftwareSummary({ softdata }) {\n  const [table, settable] = useState([]);\n\n  useEffect(() => {\n    const table =\n      Object.keys(softdata).length > 0 &&\n      softdata.oppRecRev.map((data) => {\n        let tableData = [];\n        const keysArray = [\n          \"customer\",\n          \"project\",\n          \"closedamt\",\n          \"upside\",\n          \"calls\",\n        ];\n        const numericals = [\"closedamt\", \"upside\", \"calls\"];\n        keysArray.forEach((keys) => {\n          tableData.push(\n            data.id < 0 ? (\n              keys == \"project\" ? (\n                <th\n                  key={keys}\n                  style={{ textAlign: \"center\", position: \"sticky\", top: 0 }}\n                >\n                  Opportunity\n                </th>\n              ) : (\n                <th\n                  key={keys}\n                  style={{ textAlign: \"center\", position: \"sticky\", top: 0 }}\n                >\n                  {data[keys]}\n                </th>\n              )\n            ) : keys != \"customer\" && keys != \"project\" ? (\n              <td\n                className=\"p-0\"\n                style={{ textAlign: \"right\", width: \"50px\" }}\n                data-toggle=\"tooltip\"\n                title={parseInt(data[keys]).toLocaleString(\"en-US\")}\n              >\n                {\"$\" + parseInt(data[keys]).toLocaleString(\"en-US\")}\n              </td>\n            ) : keys == \"project\" ? (\n              <td\n                className=\"ellipsis\"\n                data-toggle=\"tooltip\"\n                title={data[keys]}\n                key={keys}\n                style={{ maxWidth: \"150px !important\" }}\n              >\n                {/* {numericals.includes(keys) ? \"$\" + (parseInt(data[keys])).toLocaleString('en-US') :  */}\n                <a\n                  href=\"https://d300000000qxieam.my.salesforce.com/?ec=302&startURL=%2Fvisualforce%2Fsession%3Furl%3Dhttps%253A%252F%252Fd300000000qxieam.lightning.force.com%252Flightning%252Fr%252FOpportunity%252F0061W00001UtIfyQAF%252Fview\"\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                  // style={{ textDecoration: \"underline\" }}\n                  data-toggle=\"tooltip\"\n                  title={data[keys]}\n                >\n                  {data[keys]}\n                </a>\n              </td>\n            ) : (\n              <td\n                className=\"ellipsis\"\n                data-toggle=\"tooltip\"\n                title={data[keys]}\n                key={keys}\n              >\n                {data[keys]}\n              </td>\n            )\n          );\n          // keys == \"project\" && <td className=\"\" data-toggle=\"tooltip\" title={data[keys]} key={keys} style={{ width: \"500px\" }}>{(data[keys])}</td>\n        });\n        return <tr key={data.id}>{tableData}</tr>;\n      });\n    settable(table);\n  }, [softdata]);\n\n  return (\n    <div className=\"col-md-12 darkHeader\">\n      <h6 className=\"subHeading\">Software</h6>\n      <div className=\"col-md-12 softSummry\">\n        <table className=\"table table-bordered serviceTable\">\n          <thead style={{ fontSize: \"13px\" }}>{table}</thead>\n        </table>\n      </div>\n    </div>\n  );\n}\n","import { useEffect, useState } from \"react\";\nimport { FaAngleDown, FaAngleRight, FaCircle } from \"react-icons/fa\";\n\nexport default function ServiceSummary({ softdata }) {\n  const [expanded, setexpanded] = useState([]);\n  let onclickchanger = \"obj\";\n  const allExecutives = softdata.prjRecRev\n    ?.filter((item) => item.lvl == 1)\n    .map((item) => item[onclickchanger]);\n  let toggler = 0;\n  const [table, settable] = useState([]);\n  const prosicon = {\n    1: <FaCircle style={{ color: \"purple\" }} />,\n    0: <FaCircle style={{ color: \"green\" }} />,\n  };\n  const clickExpand = (exec) => {\n    if (exec == \"Total\") {\n      setexpanded((prevState) => {\n        return prevState.length == allExecutives.length ? [] : allExecutives;\n      });\n    } else {\n      setexpanded((prevState) => {\n        return prevState.includes(exec)\n          ? prevState.filter((item) => item !== exec)\n          : [...prevState, exec];\n      });\n    }\n  };\n\n  useEffect(() => {\n    const table =\n      Object.keys(softdata).length > 0 &&\n      softdata.prjRecRev.map((data) => {\n        // console.log(softdata, \"----service data\")\n        let tableData = [];\n\n        const keysArray = [\n          \"obj\",\n          \"target\",\n          \"revenue\",\n          \"planned\",\n          \"upside\",\n          \"total\",\n        ];\n        const numericals = [\"revenue\", \"planned\", \"upside\", \"total\"];\n\n        // data.includes(\"target\") && keysArray.push(\"target\")\n        // let toggler = (expanded.includes(data[onclickchanger]) && data[\"lvl\"] !== 2) ? 1 : 0;\n\n        toggler =\n          data[\"lvl\"] == 2\n            ? toggler\n            : expanded.includes(data[onclickchanger])\n            ? 1\n            : 0;\n\n        keysArray.forEach((keys) => {\n          // keys == \"obj\" && console.log(\"in line 13\" + data[keys])\n          data[keys] !== undefined &&\n            tableData.push(\n              data.id < 0 ? (\n                data[keys] == \"Customer/__iconPrj__Proj/__iconOpt__Oppt\" ? (\n                  <th\n                    key={keys}\n                    style={{ textAlign: \"center\", position: \"sticky\", top: 0 }}\n                  >\n                    Customer /<span className=\"mr-1\"> {prosicon[0]}</span> Proj\n                    / <span className=\"mr-1\">{prosicon[1]}</span> Oppt\n                  </th>\n                ) : (\n                  // <th key={keys} style={{ textAlign: \"center\", position: \"sticky\", top: 0 }}><span>{data[keys].split(\"__\")[0]}</span><span className=\"mr-1\"> {prosicon[0]}</span><span>{data[keys].split(\"__\")[2]}</span> <span className=\"mr-1\">{prosicon[1]}</span><span>{data[keys].split(\"__\")[4]}</span></th> :\n                  <th\n                    key={keys}\n                    style={{ textAlign: \"center\", position: \"sticky\", top: 0 }}\n                  >\n                    {data[keys]}\n                  </th>\n                )\n              ) : // keys == \"obj\" && data[keys] == null ? <td key={keys}> null </td> :\n              keys != \"obj\" ? (\n                <td\n                  style={{ textAlign: \"right\" }}\n                  data-toggle=\"tooltip\"\n                  title={parseInt(data[keys]).toLocaleString(\"en-US\")}\n                >\n                  {\"$\" +\n                    (data[keys] !== \"\"\n                      ? parseInt(data[keys]).toLocaleString(\"en-US\")\n                      : \"0\")}\n                </td>\n              ) : (\n                <td\n                  className=\"ellipsis\"\n                  data-toggle=\"tooltip\"\n                  title={data[keys]}\n                  key={keys}\n                  style={{\n                    display: toggler == 0 && data[\"lvl\"] == 2 ? \"none\" : \"\",\n                  }}\n                >\n                  {keys == onclickchanger && data[\"lvl\"] < 2 ? (\n                    <>\n                      <span\n                        style={{ cursor: \"pointer\" }}\n                        onClick={() => {\n                          clickExpand(data[onclickchanger]);\n                          console.log(\"expanded\");\n                        }}\n                      >\n                        {expanded.includes(data[onclickchanger]) ||\n                        expanded.length == allExecutives.length ? (\n                          <FaAngleDown />\n                        ) : (\n                          <FaAngleRight />\n                        )}\n                      </span>\n                    </>\n                  ) : data[\"project\"] != \"\" || data[\"project\"] != null ? (\n                    <span> {prosicon[0]} </span>\n                  ) : (\n                    \"\"\n                  )}\n                  {data[keys]}\n                </td>\n              )\n            );\n        });\n        return (\n          <tr\n            key={data.id}\n            style={{ display: data[\"lvl\"] == 2 && toggler == 0 ? \"none\" : \"\" }}\n          >\n            {tableData}\n          </tr>\n        );\n      });\n    settable(table);\n  }, [softdata?.prjRecRev, expanded]);\n\n  return (\n    <div className=\"col-md-12 darkHeader\">\n      <h6 className=\"subHeading\">Services</h6>\n      {/* {console.log(softdata, \"-----data in service table\")} */}\n      <div className=\"col-md-12 softSummry\">\n        <table className=\"table table-bordered serviceTable\">\n          <thead style={{ fontSize: \"13px\" }}>{table}</thead>\n        </table>\n      </div>\n    </div>\n  );\n}\n","import ScoreCard from \"./ScoreCard.json\";\nimport TargetTable from \"./TargetTable\";\nimport SummarySoftware from \"./SoftwareSummary\";\nimport ServiceSummary from \"./ServiceSummary\";\n\n\nexport default function Summary({ scoreCardData }) {\n\n    console.log(scoreCardData)\n    return (\n        <div className=\"col-md-12  customCard card graph\">\n            <TargetTable targets={scoreCardData} />\n\n            <div className=\"col-md-12 ml-1 row\">\n\n                <div className=\"col-md-6\">\n                    <ServiceSummary softdata={scoreCardData} />\n                </div>\n                <div className=\"col-md-6\">\n                    <SummarySoftware softdata={scoreCardData} />\n                </div>\n            </div>\n\n        </div>\n    );\n}","import React, { useEffect } from 'react'\nimport Highcharts from 'highcharts'\nimport HighchartsReact from 'highcharts-react-official'\nrequire(\"highcharts/modules/exporting\")(Highcharts);\n\nfunction TargetCharts(props) {\n\n    const { chartData } = props\n\n\n    return (\n        <div>\n            <HighchartsReact\n                highcharts={Highcharts}\n                options={chartData}\n            />\n        </div>\n    )\n}\n\nexport default TargetCharts","import React, { useLayoutEffect, useState } from \"react\";\nimport { useRef } from \"react\";\nimport { useEffect } from \"react\";\nimport TargetCharts from \"./TargetCharts\";\nimport Highcharts from \"highcharts\";\nimport HighchartsReact from \"highcharts-react-official\";\nimport highcharts3d from \"highcharts/highcharts-3d\";\nhighcharts3d(Highcharts);\n\nfunction TargetRealisedPlanned(props) {\n  const { targetData, type } = props;\n\n  const categoryData = useRef([]);\n  const [chartData, setChartData] = useState({});\n  const [displayTableData, setDisplayTableData] = useState(null);\n\n  const HandleTableData = () => {\n    let headerTitles = [\n      \"#\",\n      \"Target\",\n      \"Realised\",\n      \"Planned\",\n      \"Upside\",\n      \"Call\",\n      \"Variance\",\n    ];\n    let headerTitlesKeys = [];\n    setDisplayTableData(() => {\n      return targetData.map((d, oIndex) => {\n        let header = [];\n        let dollar = \"$\";\n        headerTitles.forEach((element, index) => {\n          if (d.id == -1) {\n            headerTitlesKeys.push(\n              Object.keys(d).find((key) => d[key] === element)\n            );\n            header.push(\n              <th style={{ textAlign: \"center\", position: \"sticky\", top: 0 }}>\n                {element}\n              </th>\n            );\n          } else {\n            if (headerTitlesKeys[index] != \"category\") {\n              header.push(\n                <td\n                  style={{ textAlign: \"right\" }}\n                  title={\n                    dollar +\n                    \"\" +\n                    parseInt(d[headerTitlesKeys[index]]).toLocaleString(\"en-US\")\n                  }\n                >\n                  {dollar +\n                    \"\" +\n                    parseInt(d[headerTitlesKeys[index]]).toLocaleString(\n                      \"en-US\"\n                    )}\n                </td>\n              );\n            } else {\n              header.push(\n                <td title={d[headerTitlesKeys[index]]}>\n                  {d[headerTitlesKeys[index]]}\n                </td>\n              );\n            }\n          }\n        });\n        return (\n          <tr key={d.id} className={`${d.id === 0 && \"trLvl0\"}`}>\n            {header}\n          </tr>\n        );\n      });\n    });\n  };\n\n  const HandleChartData = () => {\n    let categoryTempData = [];\n\n    let target = [];\n    let realised = [];\n    let planned = [];\n    let upside = [];\n    let variance = [];\n\n    targetData.map((d) => {\n      if (d.id != -1) {\n        categoryTempData.push(d.category);\n        for (let i in d) {\n          switch (i) {\n            case \"target\":\n              target.push(parseInt(d[i]));\n              break;\n            case \"revenue\":\n              realised.push(parseInt(d[i]));\n              break;\n            case \"planned\":\n              planned.push(parseInt(d[i]));\n              break;\n            case \"upside\":\n              upside.push(parseInt(d[i]));\n              break;\n            case \"variance\":\n              variance.push(parseInt(d[i]));\n              break;\n            default:\n          }\n        }\n      }\n    });\n\n    categoryData.current = categoryTempData;\n\n    const chart = {\n      credits: {\n        enabled: false,\n      },\n      chart: {\n        type: \"column\",\n        width: 600,\n        options3d: {\n          enabled: true,\n          alpha: 8,\n          beta: 12,\n          viewDistance: 25,\n          depth: 70,\n        },\n      },\n\n      title: {\n        text: `Target, Realised, Planned , Calls and Variance By ${type}`,\n        style: {\n          fontSize: \"15px\", // Set font size to 16px\n        },\n      },\n\n      xAxis: {\n        categories: categoryData.current,\n        gridLineWidth: 0.2,\n      },\n\n      yAxis: {\n        // reversed: true,\n        allowDecimals: false,\n        min: 0,\n        title: {\n          text: \"Target/Realised/Planned/Upside/Variance ($)\",\n        },\n        gridLineWidth: 0.2,\n      },\n\n      tooltip: {\n        formatter: function () {\n          return (\n            \"<b>\" +\n            this.x +\n            \"</b><br/>\" +\n            this.series.name +\n            \": \" +\n            parseInt(this.y).toLocaleString(\"en-US\") +\n            \"<br/>\"\n          );\n          // 'Total: ' + this.point.stackTotal;\n        },\n      },\n\n      plotOptions: {\n        column: {\n          stacking: \"normal\",\n        },\n      },\n\n      series: [\n        {\n          name: \"Target\",\n          color: \"rgba(34, 167, 240, 1)\",\n          data: target,\n          stack: \"first\",\n          legendIndex: 1,\n        },\n        {\n          name: \"Variance\",\n          color: \"#ff6666\",\n          data: variance,\n          stack: \"second\",\n          legendIndex: 5,\n        },\n        {\n          name: \"Planned\",\n          color: \"#ffc966\",\n          data: planned,\n          stack: \"second\",\n          legendIndex: 3,\n        },\n        {\n          name: \"Realised\",\n          color: \"#66ff66\",\n          data: realised,\n          stack: \"second\",\n          legendIndex: 2,\n        },\n        {\n          name: \"Upside\",\n          color: \"#b3b3b3\",\n          data: upside,\n          stack: \"second\",\n          legendIndex: 4,\n        },\n      ],\n      exporting: {\n        buttons: {\n          contextButton: {\n            symbolStrokeWidth: 1,\n            symbolFill: \"#a4edba\",\n            symbolStroke: \"#330033\",\n          },\n        },\n      },\n      responsive: {\n        rules: [\n          {\n            condition: {\n              maxWidth: 2000,\n            },\n          },\n        ],\n      },\n    };\n    setChartData(chart);\n  };\n\n  useEffect(() => {\n    HandleChartData();\n    HandleTableData();\n  }, []);\n\n  return (\n    <div>\n      <div className=\"col-12 mt-3 customCard card graph darkHeader\">\n        <HighchartsReact highcharts={Highcharts} options={chartData} />\n\n        {/* <div><TargetCharts chartData={chartData} /></div> */}\n        {displayTableData != null ? (\n          <div\n            className=\"mt-2 border border-white\"\n            style={{ maxHeight: \"114px\", overflowY: \"auto\" }}\n          >\n            <table\n              style={{ width: \"100%\" }}\n              className=\"table table-bordered serviceTable\"\n            >\n              <thead style={{ fontSize: \"13px\" }}>{displayTableData}</thead>\n            </table>\n          </div>\n        ) : (\n          \"\"\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default TargetRealisedPlanned;\n","import { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nexport default function Csat({ scoreCardData }) {\n  const [table, settable] = useState([]);\n\n  useEffect(() => {\n    const table1 =\n      Object.keys(scoreCardData).length > 0 &&\n      scoreCardData.map((data) => {\n        let tableData = [];\n        const keysArray = [\n          \"customer\",\n          \"customer_email\",\n          \"project\",\n          \"project_mgr\",\n          \"csat_month_dt\",\n          \"csat_initiated_dt\",\n          \"proj_st_dt\",\n          \"proj_end_dt\",\n          \"status\",\n          \"survey_res\",\n        ];\n        keysArray.forEach((keys) => {\n          tableData.push(\n            data.id < 0 ? (\n              <th key={keys} style={{ textAlign: \"center\", fontSize: \"13px\" }}>\n                {data[keys]}\n              </th>\n            ) : keys == \"project\" ? (\n              <td className=\"ellipsis\" data-toggle=\"tooltip\">\n                <Link\n                  data-toggle=\"tooltip\"\n                  title={data[keys]}\n                  to={`/project/Overview/:${data.obj_id}`}\n                  target=\"_blank\"\n                >\n                  {data[keys]}\n                </Link>\n              </td>\n            ) : (\n              <td\n                key={keys}\n                className=\"ellipsis\"\n                data-toggle=\"tooltip\"\n                style={{\n                  fontSize: \"13px\",\n                  textAlign: keys === \"survey_res\" ? \"right\" : \"left\",\n                }}\n                title={data[keys]}\n              >\n                {data[keys]}\n              </td>\n            )\n          );\n        });\n        return <tr key={data.id}>{tableData}</tr>;\n      });\n    settable(table1);\n  }, [scoreCardData]);\n\n  return (\n    <div className=\"col-md-12  customCard card graph darkHeader\">\n      <div className=\"group-content row\">\n        <h6 className=\"subHeading\">Customer CSAT Project List</h6>\n      </div>\n      <div\n        className=\"col-12 pl-2 pr-2\"\n        style={{ maxHeight: \"300px\", overflowY: \"auto\" }}\n      >\n        <table className=\"table table-bordered csattable \">\n          <thead>{table}</thead>\n        </table>\n      </div>\n    </div>\n  );\n}\n","import { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport ScoreCard from \"./ScoreCard.json\";\nexport default function Risks({ risk }) {\n  const [table, settable] = useState([]);\n\n  useEffect(() => {\n    const table =\n      risk.length > 0 &&\n      risk.map((data) => {\n        const conditions = [\"id\", \"customer_id\", \"obj_id\", \"notes\", \"contxt\"];\n        let tableData = [];\n        const keysArray = [\n          \"customer\",\n          \"project\",\n          \"risk_name\",\n          \"risk_type\",\n          \"risk_source\",\n          \"risk_impact\",\n          \"risk_prob_occurance\",\n          \"risk_value\",\n          \"assigned_to\",\n          \"risk_occured\",\n          \"risk_status\",\n          \"risk_occured_dt\",\n          \"mitigation_dt\",\n          \"created_by\",\n        ];\n        keysArray.forEach((keys) => {\n          !conditions.includes(keys) &&\n            tableData.push(\n              data.id < 0 ? (\n                <>\n                  {keys == \"mitigation_dt\" ? (\n                    <th key={keys} style={{ textAlign: \"center\" }}>\n                      Mitigation Dt\n                    </th>\n                  ) : keys == \"risk_occured_dt\" ? (\n                    <th key={keys} style={{ textAlign: \"center\" }}>\n                      Occurred Dt\n                    </th>\n                  ) : (\n                    <th key={keys} style={{ textAlign: \"center\" }}>\n                      {data[keys]}\n                    </th>\n                  )}\n                </>\n              ) : // data.id < 0 ? <td>No Data Found</td> :\n              keys == \"project\" ? (\n                <td\n                  className=\"ellipsis\"\n                  data-toggle=\"tooltip\"\n                  style={{ fontSize: \"13px\" }}\n                >\n                  <Link\n                    data-toggle=\"tooltip\"\n                    title={data[keys]}\n                    to={`/project/Overview/:${data.obj_id}`}\n                    target=\"_blank\"\n                  >\n                    {data[keys]}\n                  </Link>\n                </td>\n              ) : keys == \"risk_value\" ? (\n                <td\n                  key={keys}\n                  style={{ textAlign: \"right\", fontSize: \"13px\" }}\n                  data-toggle=\"tooltip\"\n                  title={data[keys]}\n                >\n                  {data[keys]}\n                </td>\n              ) : (\n                <td\n                  key={keys}\n                  className=\"ellipsis\"\n                  style={{ fontSize: \"13px\" }}\n                  data-toggle=\"tooltip\"\n                  title={data[keys]}\n                >\n                  {data[keys]}\n                </td>\n              )\n            );\n        });\n        return <tr key={data.id}>{tableData}</tr>;\n      });\n    settable(table);\n  }, [risk]);\n\n  return (\n    <div className=\"col-md-12 darkHeader  customCard card graph\">\n      <div className=\"group-content row\">\n        <h6 className=\"subHeading\">Project Risks</h6>\n      </div>\n      <div className=\"pl-2 pr-2\" style={{ overflowY: \"scroll\" }}>\n        <table className=\"table table-bordered softSummry csattable\">\n          <thead style={{ fontSize: \"13px\", maxWidth: \"12px\" }}>{table}</thead>\n        </table>\n      </div>\n    </div>\n  );\n}\n","import Highcharts from \"highcharts\";\nimport HighchartsReact from \"highcharts-react-official\";\nimport { useEffect, useState } from \"react\";\n\nexport default function ProgressOfsw({ scoreCardData }) {\n  let yServCreated = [];\n  let ySwCreated = [];\n  let yServClosed = [];\n  let ySwClosed = [];\n  let yServLost = [];\n  let ySwLost = [];\n  let yServCreatedCnt = [];\n  let ySwCreatedCnt = [];\n  let yServClosedCnt = [];\n  let ySwClosedCnt = [];\n  let yServLostCnt = [];\n  let ySwLostCnt = [];\n  let xAxis = [];\n  let servCreated = 0,\n    swCreated = 0,\n    servClosed = 0,\n    SwClosed = 0,\n    servLost = 0,\n    SwLost = 0;\n  let servCreatedCntGraph = 0,\n    swCreatedCntGraph = 0,\n    servClosedCntGraph = 0,\n    SwClosedCntGraph = 0,\n    servLostCntGraph = 0,\n    SwLostCntGraph = 0;\n  const [table, settable] = useState([]);\n  const [summaryChart, setsummaryChart] = useState({});\n\n  useEffect(() => {\n    const tableRenderer =\n      Object.keys(scoreCardData).length > 0 &&\n      scoreCardData.custWOWRecRev.map((data) => {\n        let tableData = [];\n        const keysArray = [\n          \"week_no\",\n          \"serv_crated\",\n          \"soft_created\",\n          \"serv_closed\",\n          \"soft_closed\",\n          \"serv_lost\",\n          \"soft_lost\",\n        ];\n        keysArray.forEach((keys) => {\n          if (keys == \"week_no\" && data.id > \"0\") xAxis.push(data[keys]);\n\n          if (keys == \"serv_crated\" && data.id > \"0\") {\n            servCreated = parseFloat(servCreated) + parseFloat(data[keys]);\n            yServCreated.push(parseFloat(servCreated));\n            yServCreatedCnt.push(parseInt(servCreatedCntGraph));\n          }\n          if (keys == \"soft_created\" && data.id > \"0\") {\n            swCreated = parseFloat(swCreated) + parseFloat(data[keys]);\n            ySwCreated.push(parseFloat(swCreated));\n            ySwCreatedCnt.push(parseInt(swCreatedCntGraph));\n          }\n          if (keys == \"serv_closed\" && data.id > \"0\") {\n            servClosed = parseFloat(servClosed) + parseFloat(data[keys]);\n            yServClosed.push(parseFloat(servClosed));\n            yServClosedCnt.push(parseInt(servClosedCntGraph));\n          }\n          if (keys == \"soft_closed\" && data.id > \"0\") {\n            SwClosed = parseFloat(SwClosed) + parseFloat(data[keys]);\n            ySwClosed.push(parseFloat(SwClosed));\n            ySwClosedCnt.push(parseInt(SwClosedCntGraph));\n          }\n          if (keys == \"serv_lost\" && data.id > \"0\") {\n            servLost = parseFloat(servLost) + parseFloat(data[keys]);\n            yServLost.push(parseFloat(servLost));\n            yServLostCnt.push(parseInt(servLostCntGraph));\n          }\n          if (keys == \"soft_lost\" && data.id > \"0\") {\n            SwLost = parseFloat(SwLost) + parseFloat(data[keys]);\n            ySwLost.push(parseFloat(SwLost));\n            ySwLostCnt.push(parseInt(SwLostCntGraph));\n          }\n          keys !== \"week_date\" &&\n            typeof data[keys] === \"string\" &&\n            !keys.includes(\"_cnt\") &&\n            data[keys] !== \"\" &&\n            data[keys] !== \"#\" &&\n            data[keys] !== null &&\n            tableData.push(\n              data.id < 0 ? (\n                <th\n                  key={keys}\n                  colSpan={data[keys].split(\"^&\")[1]}\n                  style={{ textAlign: \"center\" }}\n                >\n                  {data[keys].split(\"^&\")[0]}\n                </th>\n              ) : keys !== \"week_no\" ? (\n                <td key={keys} style={{ textAlign: \"right\" }}>\n                  {\"$\" +\n                    parseInt(data[keys]).toLocaleString(\"en-US\") +\n                    \"(\" +\n                    data[keys + \"_cnt\"] +\n                    \")\"}{\" \"}\n                </td>\n              ) : (\n                <td className=\"ellipsis\" title={data[keys]}>\n                  {\" \"}\n                  {data[keys]}\n                </td>\n              )\n            );\n        });\n        return <tr key={data.id}>{tableData}</tr>;\n      });\n\n    const yAxisAmt = [];\n    const xAxisWeeks = [];\n\n    yAxisAmt.push({\n      name: \"Serv Created\",\n      data: yServCreated,\n      description: yServCreatedCnt,\n    });\n    yAxisAmt.push({\n      name: \"S/W Created\",\n      data: ySwCreated,\n      description: ySwCreatedCnt,\n    });\n    yAxisAmt.push({\n      name: \"Serv Closed\",\n      data: yServClosed,\n      description: yServClosedCnt,\n    });\n    yAxisAmt.push({\n      name: \"S/W Closed\",\n      data: ySwClosed,\n      description: ySwClosedCnt,\n    });\n    yAxisAmt.push({\n      name: \"Serv Lost\",\n      data: yServLost,\n      description: yServLostCnt,\n    });\n    yAxisAmt.push({\n      name: \"S/W Lost\",\n      data: ySwLost,\n      description: ySwLostCnt,\n    });\n\n    const summaryChart = {\n      lang: {\n        thousandsSep: \",\",\n        decimalPoint: \".\",\n      },\n      chart: {\n        type: \"line\",\n        width: 670,\n      },\n      title: {\n        text: \"Progress of Service/Software\",\n        style: {\n          fontSize: \"15px\", // Set font size to 16px\n        },\n      },\n      xAxis: {\n        categories: xAxis,\n        crosshair: true,\n        title: {\n          text: \"Weeks\",\n        },\n      },\n      yAxis: {\n        allowDecimals: true,\n        padding: 1,\n        title: {\n          text: \"Amount\",\n        },\n      },\n      tooltip: {\n        formatter: function () {\n          return (\n            \"<b>\" +\n            this.x +\n            \"</b><br/>\" +\n            this.series.name +\n            \": \" +\n            this.y?.toLocaleString(\"en-US\") +\n            \"<br/>\"\n          );\n        },\n      },\n\n      plotOptions: {\n        series: {\n          label: {\n            connectorAllowed: false,\n          },\n        },\n      },\n      series: yAxisAmt,\n    };\n\n    settable(tableRenderer);\n    setsummaryChart(summaryChart);\n  }, [scoreCardData]);\n\n  return (\n    <div className=\"col-md-12  customCard card graph darkHeader\">\n      <div className=\"col-12 row\">\n        <div className=\"col-6 pr-0\">\n          <HighchartsReact highcharts={Highcharts} options={summaryChart} />\n        </div>\n        <div className=\"col-6 p-0 mt-5\">\n          <div style={{ maxWidth: \"700px\", overflowX: \"auto\" }}>\n            <table className=\"table table-bordered progressOfswTable\">\n              <thead>{table}</thead>\n            </table>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React, { useEffect, useRef, useState } from \"react\";\nimport { AiFillDownCircle } from \"react-icons/ai\";\nimport Highcharts from \"highcharts\";\nimport HighchartsReact from \"highcharts-react-official\";\nimport highcharts3d from \"highcharts/highcharts-3d\";\nimport { FaAngleDown, FaAngleRight } from \"react-icons/fa\";\nhighcharts3d(Highcharts);\n\nfunction CustomerRealisedRevCategory(props) {\n  const { custRelRevCat } = props;\n  const existingAndExisting = useRef(0);\n  const existingAndNew = useRef(0);\n  const newAndNew = useRef(0);\n  const [chartDataProp, setChartDataProp] = useState({});\n  const [displayTableData, setDisplayTableData] = useState([]);\n  let angle = 180;\n  const [expanded, setexpanded] = useState([]);\n  let onclickchanger = \"category\";\n  const allExecutives = custRelRevCat\n    .filter((item) => item.lvl == 1)\n    .map((item) => item[onclickchanger]);\n  let toggler = 0;\n\n  useEffect(() => {\n    handleChartData();\n    // handleTableData();\n  }, []);\n\n  const clickExpand = (exec) => {\n    if (exec == \"All Customers\") {\n      setexpanded((prevState) => {\n        return prevState.length == allExecutives.length ? [] : allExecutives;\n      });\n    } else {\n      setexpanded((prevState) => {\n        return prevState.includes(exec)\n          ? prevState.filter((item) => item !== exec)\n          : [...prevState, exec];\n      });\n    }\n  };\n\n  useEffect(() => {\n    const table = custRelRevCat.map((data) => {\n      let displayData = [];\n\n      let keysArray = [\"category\", \"revenue\", \"planned\", \"calls\", \"total\"];\n\n      //  [\"Customer\", \"Realised\", \"Planned\", \"Upside\", \"Call\"];\n      let headerTitlesKeys = [];\n      toggler =\n        data[\"lvl\"] == 2\n          ? toggler\n          : expanded.includes(data[onclickchanger])\n          ? 1\n          : 0;\n\n      keysArray.forEach((keys) => {\n        // keys == \"obj\" && console.log(\"in line 13\" + data[keys])\n        data[keys] !== undefined &&\n          displayData.push(\n            data.id < 0 ? (\n              <th\n                key={keys}\n                style={{ textAlign: \"center\", position: \"sticky\", top: 0 }}\n              >\n                {data[keys]}\n              </th>\n            ) : // keys == \"obj\" && data[keys] == null ? <td key={keys}> null </td> :\n            keys != \"category\" ? (\n              <td\n                style={{ textAlign: \"right\" }}\n                data-toggle=\"tooltip\"\n                title={parseInt(data[keys]).toLocaleString(\"en-US\")}\n              >\n                {\"$\" +\n                  (data[keys] !== \"\"\n                    ? parseInt(data[keys]).toLocaleString(\"en-US\")\n                    : \"0\")}\n              </td>\n            ) : (\n              <td\n                className=\"ellipsis\"\n                data-toggle=\"tooltip\"\n                title={data[keys]}\n                key={keys}\n                style={{\n                  display: toggler == 0 && data[\"lvl\"] == 2 ? \"none\" : \"\",\n                }}\n              >\n                {keys == onclickchanger && data[\"lvl\"] < 2 && (\n                  <>\n                    <span\n                      style={{ cursor: \"pointer\" }}\n                      onClick={() => {\n                        clickExpand(data[onclickchanger]);\n                        console.log(\"expanded\");\n                      }}\n                    >\n                      {expanded.includes(data[onclickchanger]) ||\n                      expanded.length == allExecutives.length ? (\n                        <FaAngleDown />\n                      ) : (\n                        <FaAngleRight />\n                      )}\n                    </span>\n                  </>\n                )}\n                {data[keys]}\n              </td>\n            )\n          );\n      });\n\n      return (\n        <tr\n          key={data.id}\n          style={{ display: data[\"lvl\"] == 2 && toggler == 0 ? \"none\" : \"\" }}\n        >\n          {displayData}\n        </tr>\n      );\n    });\n    setDisplayTableData(table);\n  }, [custRelRevCat, expanded]);\n\n  const handleChartData = () => {\n    custRelRevCat.map((d) => {\n      //Graph Data\n      if (d.id > 0) {\n        switch (d.category) {\n          case \"Existing & Existing\":\n            existingAndExisting.current = parseInt(d.total);\n            break;\n          case \"Existing & New\":\n            existingAndNew.current = parseInt(d.total);\n            break;\n          case \"New & New\":\n            newAndNew.current = parseInt(d.total);\n            break;\n          default:\n        }\n      }\n    });\n\n    const chartData = {\n      credits: {\n        enabled: false,\n      },\n      chart: {\n        plotBackgroundColor: null,\n        plotBorderWidth: null,\n        plotShadow: false,\n        type: \"pie\",\n        options3d: {\n          enabled: true,\n          alpha: 45,\n          beta: 0,\n        },\n      },\n      title: {\n        text: \"Customer Realised Revenue By Category\",\n        style: {\n          fontSize: \"15px\", // Set font size to 16px\n        },\n      },\n      tooltip: {\n        formatter: function () {\n          return `${this.point.name}<br /><li style=\"color: ${\n            this.point.color\n          }\">&#9679;</li> Rec. Revenue: <b>$${Highcharts.numberFormat(\n            this.point.y,\n            0,\n            \",\",\n            \",\"\n          )}</b> (${Math.round(this.point.percentage * 10) / 10})%`;\n        },\n        // pointFormat: '{series.name}: <b>{point.percentage:.1f}%</b>'\n      },\n      xAxis: {\n        categories: [\"Existing & Existing\", \"Existing & New\", \"New & New\"],\n      },\n      accessibility: {\n        point: {\n          valueSuffix: \"%\",\n        },\n      },\n      plotOptions: {\n        pie: {\n          allowPointSelect: true,\n          cursor: \"pointer\",\n          shadow: true,\n          startAngle: angle,\n          cursor: \"pointer\",\n          depth: 55,\n          size: \"100%\",\n          showInLegend: true,\n          // dataLabels: {\n          //     enabled: true,\n          //     format: '<b>{point.name}</b>: {point.percentage:.1f} %'\n          // }\n        },\n      },\n      series: [\n        {\n          name: \"Rec. Revenue\",\n          colorByPoint: true,\n          data: [\n            {\n              name: \"Existing & Existing\",\n              y: existingAndExisting.current,\n              /* sliced: true, */\n              selected: true,\n              dataLabels: {\n                enabled: true,\n                distance: 10,\n                // format: '<b>{point.name}</b>: <br/>${point.y:,.0f} ({point.percentage:.1f})%'\n                formatter: function () {\n                  return `<b>${\n                    this.point.name\n                  }</b>:<br/>$${Highcharts.numberFormat(\n                    this.point.y,\n                    0,\n                    \",\",\n                    \",\"\n                  )} (${Math.round(this.point.percentage * 10) / 10})%`;\n                },\n              },\n            },\n            {\n              name: \"Existing & New\",\n              y: existingAndNew.current,\n              dataLabels: {\n                enabled: true,\n                distance: 10,\n                formatter: function () {\n                  return `<b>${\n                    this.point.name\n                  }</b>:<br/>$${Highcharts.numberFormat(\n                    this.point.y,\n                    0,\n                    \",\",\n                    \",\"\n                  )} (${Math.round(this.point.percentage * 10) / 10})%`;\n                },\n                // format: '<b>{point.name}</b>: <br/>${point.y:,.0f} ({point.percentage:.1f})%'\n              },\n            },\n            {\n              name: \"New & New\",\n              y: newAndNew.current,\n              dataLabels: {\n                enabled: true,\n                distance: 10,\n                // format: '<b>{point.name}</b>: <br/>${point.y:,.0f} ({point.percentage:.1f})%'\n                formatter: function () {\n                  return `<b>${\n                    this.point.name\n                  }</b>:<br/>$${Highcharts.numberFormat(\n                    this.point.y,\n                    0,\n                    \",\",\n                    \",\"\n                  )} (${Math.round(this.point.percentage * 10) / 10})%`;\n                },\n              },\n            },\n          ],\n        },\n      ],\n    };\n    setChartDataProp(chartData);\n  };\n\n  return (\n    <div className=\"col-12 mt-2  customCard card graph thead\">\n      <div className=\"mr-0\">\n        <HighchartsReact highcharts={Highcharts} options={chartDataProp} />\n      </div>\n      {/* <div><TargetCharts chartData={chartDataProp} /></div> */}\n      {displayTableData != null ? (\n        <div\n          className=\"darkHeader\"\n          style={{ maxHeight: \"111px\", overflowY: \"auto\" }}\n        >\n          <table\n            // style={{ maxHeight: \"50px\", overflowX: \"auto\", marginTop: \"10px\", overflowY: \"auto\" }}\n            className=\"table table-bordered serviceTable \"\n          >\n            <thead style={{ fontSize: \"13px\" }}>{displayTableData}</thead>\n          </table>\n        </div>\n      ) : (\n        \"\"\n      )}\n    </div>\n  );\n}\n\nexport default CustomerRealisedRevCategory;\n","import React, { useEffect, useRef, useState } from \"react\";\nimport TargetCharts from \"./TargetCharts\";\nimport Highcharts from \"highcharts\";\nimport HighchartsReact from \"highcharts-react-official\";\nimport highcharts3d from \"highcharts/highcharts-3d\";\nhighcharts3d(Highcharts);\n\nfunction TopCustByRealRev(props) {\n  const { topCustomerByRealRev, cusRecRev, scoreCardDataPayload } = props;\n  const [chartDataProp, setChartDataProp] = useState({});\n  const [displayTableData, setDisplayTableData] = useState(null);\n  const top1 = useRef(0);\n  const top2to5 = useRef(0);\n  const top6to10 = useRef(0);\n  const top11to20 = useRef(0);\n  const rest = useRef(0);\n  let angle = 180;\n\n  useEffect(() => {\n    handleChartData();\n    handleTableData();\n  }, []);\n\n  const handleTableData = () => {\n    let headerTitles =\n      scoreCardDataPayload.viewby === \"cust\"\n        ? [\"Rank\", \"Project\", \"Realised\", \"Planned\", \"GM\", \"GM%\"]\n        : [\"Rank\", \"Customer\", \"Realised\", \"Planned\", \"Upside\", \"Call\"];\n    let headerTitlesKeys = [];\n    setDisplayTableData(() => {\n      return topCustomerByRealRev.map((d, index) => {\n        let headerData = [];\n        headerTitles.forEach((element, index1) => {\n          if (d.id == -1) {\n            headerTitlesKeys.push(\n              Object.keys(d).find((key) => d[key] === element)\n            );\n\n            headerData.push(\n              <th\n                style={{\n                  textAlign: \"center\",\n                  backgroundColor: \"#f4f4f4\",\n                  position: \"sticky\",\n                  top: 0,\n                }}\n              >\n                {element}\n              </th>\n            );\n          } else {\n            console.log(\n              headerTitlesKeys[index1] == \"customer\" &&\n                headerTitles[index1] == \"Project\" &&\n                d[headerTitlesKeys[index1]],\n              element,\n              \"headerTitles[index1] \"\n            );\n\n            headerData.push(\n              <td\n                style={{\n                  textAlign:\n                    (index1 > 1 && \"right\") ||\n                    (headerTitles[index1] == \"Rank\" && \"center\"),\n                }}\n              >\n                {headerTitles[index1] == \"Rank\"\n                  ? index\n                  : headerTitlesKeys[index1] == \"customer\" &&\n                    element == \"Project\"\n                  ? d[headerTitlesKeys[index1]]\n                  : headerTitles[index1] != \"Customer\" &&\n                    headerTitles[index1] == \"Project\"\n                  ? `${index1 > 1 ? \"$\" : \"\"}` +\n                    parseInt(d[headerTitlesKeys[index1]]).toLocaleString(\n                      \"en-US\"\n                    )\n                  : `${\n                      index1 > 1\n                        ? \"$\" +\n                          parseInt(d[headerTitlesKeys[index1]]).toLocaleString(\n                            \"en-Us\"\n                          )\n                        : d[headerTitlesKeys[index1]]\n                    }`}\n              </td>\n            );\n          }\n        });\n        return index === 1 ? (\n          <>\n            <tr>\n              <td\n                style={{ textAlign: \"center\", backgroundColor: \"#f4f4f4\" }}\n                colSpan={\"6\"}\n              >\n                {\"Top 1 to 10\"}\n              </td>\n            </tr>\n            <tr style={{ backgroundColor: d.color }}>{headerData}</tr>\n          </>\n        ) : index === 11 ? (\n          <>\n            <tr>\n              <td colSpan={\"6\"}></td>\n            </tr>\n            <tr>\n              <td\n                style={{ textAlign: \"center\", backgroundColor: \"#f4f4f4\" }}\n                colSpan={\"6\"}\n              >\n                {\"Top 11 to 20\"}\n              </td>\n            </tr>\n            <tr style={{ backgroundColor: d.color }}>{headerData}</tr>\n          </>\n        ) : (\n          <tr style={{ backgroundColor: d.color }}>{headerData}</tr>\n        );\n      });\n    });\n  };\n\n  const handleChartData = () => {\n    cusRecRev?.map((d) => {\n      switch (d.category) {\n        case \"Top 1\":\n          top1.current = parseInt(d.revenue);\n          break;\n        case \"Top 2-5\":\n          top2to5.current = parseInt(d.revenue);\n          break;\n        case \"Top 6-10\":\n          top6to10.current = parseInt(d.revenue);\n          break;\n        case \"Top 11-20\":\n          top11to20.current = parseInt(d.revenue);\n          break;\n        case \"Rest\":\n          rest.current = parseInt(d.revenue);\n          break;\n        default:\n      }\n    });\n\n    const chartData = {\n      credits: {\n        enabled: false,\n      },\n      chart: {\n        plotBackgroundColor: null,\n        plotBorderWidth: null,\n        plotShadow: false,\n        type: \"pie\",\n        options3d: {\n          enabled: true,\n          alpha: 45,\n          beta: 0,\n        },\n      },\n      title: {\n        text: \"Top Customers By Realised Revenue\",\n        style: {\n          fontSize: \"15px\", // Set font size to 16px\n        },\n      },\n      tooltip: {\n        formatter: function () {\n          return `${this.point.name}<br /><li style=\"color: ${\n            this.point.color\n          }\">&#9679;</li> Rec. Revenue: <b>$${Highcharts.numberFormat(\n            this.point.y,\n            0,\n            \",\",\n            \",\"\n          )}</b> (${Math.round(this.point.percentage * 10) / 10})%`;\n        },\n        // pointFormat: '{series.name}: <b>{point.percentage:.1f}%</b>'\n      },\n      xAxis: {\n        categories: [\"Top 1\", \"Top 2-5\", \"Top 6-10\", \"Top 11-20\", \"Rest\"],\n      },\n      accessibility: {\n        point: {\n          valueSuffix: \"%\",\n        },\n      },\n      plotOptions: {\n        pie: {\n          allowPointSelect: true,\n          cursor: \"pointer\",\n          shadow: true,\n          startAngle: angle,\n          cursor: \"pointer\",\n          depth: 55,\n          size: \"100%\",\n          showInLegend: true,\n          // dataLabels: {\n          //     enabled: true,\n          //     format: '<b>{point.name}</b>: {point.percentage:.1f} %'\n          // }\n        },\n      },\n      series: [\n        {\n          // name: 'Rec. Revenue',\n          colorByPoint: true,\n          data: [\n            {\n              name: \"Top 1\",\n              y: top1.current,\n              /* sliced: true, */\n              selected: true,\n              dataLabels: {\n                enabled: true,\n                distance: 10,\n                formatter: function () {\n                  return `<b>${\n                    this.point.name\n                  }</b>:<br/>$${Highcharts.numberFormat(\n                    this.point.y,\n                    0,\n                    \",\",\n                    \",\"\n                  )} (${Math.round(this.point.percentage * 10) / 10})%`;\n                },\n                // format: '<b>{point.name}</b>: <br/>${point.y:,.0f} ({point.percentage:.1f})%'\n              },\n            },\n            {\n              name: \"Top 2-5\",\n              y: top2to5.current,\n              color: \"#e4d354\",\n              dataLabels: {\n                enabled: true,\n                distance: 10,\n                // format: '<b>{point.name}</b>: <br/>${point.y:,.0f} ({point.percentage:.1f})%'\n                formatter: function () {\n                  return `<b>${\n                    this.point.name\n                  }</b>:<br/>$${Highcharts.numberFormat(\n                    this.point.y,\n                    0,\n                    \",\",\n                    \",\"\n                  )} (${Math.round(this.point.percentage * 10) / 10})%`;\n                },\n              },\n            },\n            {\n              name: \"Top 6-10\",\n              y: top6to10.current,\n              dataLabels: {\n                enabled: true,\n                distance: 10,\n                // format: '<b>{point.name}</b>: <br/>${point.y:,.0f} ({point.percentage:.1f})%'\n                formatter: function () {\n                  return `<b>${\n                    this.point.name\n                  }</b>:<br/>$${Highcharts.numberFormat(\n                    this.point.y,\n                    0,\n                    \",\",\n                    \",\"\n                  )} (${Math.round(this.point.percentage * 10) / 10})%`;\n                },\n              },\n            },\n            {\n              name: \"Top 11-20\",\n              y: top11to20.current,\n              dataLabels: {\n                enabled: true,\n                distance: 10,\n                // format: '<b>{point.name}</b>: <br/>${point.y:,.0f} ({point.percentage:.1f})%'\n                formatter: function () {\n                  return `<b>${\n                    this.point.name\n                  }</b>:<br/>$${Highcharts.numberFormat(\n                    this.point.y,\n                    0,\n                    \",\",\n                    \",\"\n                  )} (${Math.round(this.point.percentage * 10) / 10})%`;\n                },\n              },\n            },\n            {\n              name: \"Rest\",\n              y: rest.current,\n              dataLabels: {\n                enabled: true,\n                distance: 10,\n                // format: '<b>{point.name}</b>: <br/>${point.y:,.0f} ({point.percentage:.1f})%'\n                formatter: function () {\n                  return `<b>${\n                    this.point.name\n                  }</b>:<br/>$${Highcharts.numberFormat(\n                    this.point.y,\n                    0,\n                    \",\",\n                    \",\"\n                  )} (${Math.round(this.point.percentage * 10) / 10})%`;\n                },\n              },\n            },\n          ],\n        },\n      ],\n    };\n    setChartDataProp(chartData);\n  };\n\n  return (\n    <div className=\"col-12 mt-2 customCard card graph darkHeader\">\n      <div className=\"mr-0\">\n        <HighchartsReact highcharts={Highcharts} options={chartDataProp} />\n      </div>\n      {/* <div><TargetCharts chartData={chartDataProp} /></div> */}\n      {displayTableData != null ? (\n        <div style={{ maxHeight: \"111px\", overflowY: \"auto\" }}>\n          <table className=\" table table-bordered serviceTable1\">\n            <thead style={{ fontSize: \"13px\" }}>{displayTableData}</thead>\n          </table>\n        </div>\n      ) : (\n        \"\"\n      )}\n    </div>\n  );\n}\n\nexport default TopCustByRealRev;\n","import { element } from \"prop-types\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { AiFillDownCircle } from \"react-icons/ai\";\nimport { FaCaretDown } from \"react-icons/fa\";\n\nfunction OpenServicePipeLine(props) {\n  const { openOpptys } = props;\n  const displayTableData = useRef([]);\n  const [dispData, setDispData] = useState(null);\n\n  useEffect(() => {\n    displayTableData.current.push(\n      <th style={{ textAlign: \"center\", fontSize: \"13px\" }}>Sales Executive</th>\n    );\n    filterSubHeading();\n  }, []);\n\n  const handleDisplaySubData = (e, d) => {\n    let clsNm = d.lvl + 1 + \"_\" + d.sales_executive;\n    let elements = document.getElementsByClassName(clsNm);\n    for (let i = 0; i < elements.length; i++) {\n      if (elements[i].classList.contains(\"displayRow\")) {\n        elements[i].classList.remove(\"displayRow\");\n      } else {\n        elements[i].classList.add(\"displayRow\");\n      }\n    }\n  };\n\n  const filterSubHeading = async () => {\n    let subHeader = [];\n    let openOpptysTmp = [];\n    openOpptys.map((d, index) => {\n      if (d.id == -1) {\n      } else if (\n        d.lvl == 1 &&\n        (openOpptys[index - 1].lvl == 0 || openOpptys[index - 1].lvl == 2)\n      ) {\n        openOpptysTmp.push(d);\n        openOpptysTmp.push(openOpptys[0]);\n      } else {\n        openOpptysTmp.push(d);\n      }\n    });\n\n    setDispData(() => {\n      let headerTitles = [\n        \"sales_executive\",\n        \"oppt_name\",\n        \"resource_amount\",\n        \"oppt_prob\",\n      ];\n      let subHeaderTitles = [\n        \"Customer\",\n        \"Opportunity\",\n        \"Practice\",\n        \"R. Type\",\n        \"R. Amount\",\n        \"Oppt Amount\",\n        \"Close Date\",\n        \"Prob%\",\n        \"Stage\",\n        \"Next Step\",\n      ];\n      let subHeaderTitlesKeys = [];\n      return openOpptysTmp.map((d, index) => {\n        let tdData = [];\n        if (d.lvl == 1) {\n          headerTitles.forEach((element, headerIndex) => {\n            console.log(element, \"***************\");\n            let val = d[element].includes(\"^&\")\n              ? d[element].split(\"^&\")\n              : d[element];\n            tdData.push(\n              <td\n                style={{ textAlign: d[element].includes(\"^&\") && \"right\" }}\n                colSpan={element == \"sales_executive\" ? 4 : 3}\n              >\n                {d[element].includes(\"^&\") ? (\n                  \"$\" + parseInt(val[0]).toLocaleString(\"en-US\") + \" \" + val[1]\n                ) : (\n                  <span>\n                    <span className=\"mr-1\">\n                      <FaCaretDown />\n                    </span>\n                    {val}\n                  </span>\n                )}\n              </td>\n            );\n          });\n        } else if (d.lvl == 2) {\n          subHeaderTitlesKeys.forEach((element, subDataIndex) => {\n            tdData.push(\n              <td\n                className={\n                  element == \"customer\"\n                    ? \"customer\"\n                    : element == \"oppt_name\"\n                    ? \"oppt\"\n                    : \"\"\n                }\n                data-toggle=\"tooltip\"\n                title={d[element]}\n                colSpan={element == \"oppt_closed_dt\" ? 2 : \"\"}\n                style={{\n                  textAlign:\n                    (element == \"resource_amount\" ||\n                      element == \"oppt_amount\" ||\n                      element == \"oppt_prob\") &&\n                    \"right\",\n                }}\n              >\n                {element == \"resource_amount\" || element == \"oppt_amount\"\n                  ? \"$\" + parseInt(d[element]).toLocaleString(\"en-US\")\n                  : d[element]}\n              </td>\n              // <td colSpan={element == \"oppt_closed_dt\" ? 2 : \"\"}>{d[element]}</td>\n            );\n          });\n        } else if (d.lvl == 0) {\n          subHeaderTitles.forEach((element, subHeaderIndex) => {\n            tdData.push(\n              <th\n                style={{ textAlign: \"center\", fontSize: \"13px\" }}\n                colSpan={element == \"Close Date\" ? 2 : \"\"}\n              >\n                {element}\n              </th>\n            );\n            if (index < 2) {\n              subHeaderTitlesKeys.push(\n                Object.keys(d).find((key) => d[key] == element)\n              );\n            }\n          });\n        }\n        return (\n          <tr\n            key={d.lvl}\n            onClick={(e) => {\n              handleDisplaySubData(e, d);\n            }}\n            className={` ${d.lvl == 1 ? \"trLvl0\" : \"\"} ${\n              d.lvl == 0\n                ? \"displayRow  \" +\n                  openOpptysTmp[index + 1].lvl +\n                  \"_\" +\n                  openOpptysTmp[index + 1].sales_executive\n                : d.lvl == 2\n                ? \"displayRow \" + d.lvl + \"_\" + d.sales_executive\n                : \"\"\n            } `}\n          >\n            {tdData}\n          </tr>\n        );\n      });\n    });\n  };\n\n  return (\n    <div className=\"mt-2 col-md-12 no-padding customCard card graph darkHeader\">\n      <div className=\"group-content row\">\n        <h6 className=\"subHeading\">Open Service Pipeline</h6>\n      </div>\n      <div className=\"pl-2 pr-2\">\n        {dispData != null ? (\n          <table style={{ width: \"100%\" }} className=\"table table-bordered \">\n            <thead style={{ fontSize: \"13px\" }}>\n              <tr style={{ width: \"100%\" }}>\n                <th\n                  colSpan={4}\n                  style={{\n                    textAlign: \"center\",\n                    fontSize: \"13px\",\n                    minWidth: \"300px\",\n                  }}\n                >\n                  Sales Executive\n                </th>\n                <th\n                  colSpan={3}\n                  style={{\n                    textAlign: \"center\",\n                    fontSize: \"13px\",\n                    minWidth: \"300px\",\n                  }}\n                >\n                  High\n                </th>\n                <th\n                  colSpan={3}\n                  style={{\n                    textAlign: \"center\",\n                    fontSize: \"13px\",\n                    minWidth: \"300px\",\n                  }}\n                >\n                  Medium\n                </th>\n                <th\n                  colSpan={3}\n                  style={{\n                    textAlign: \"center\",\n                    fontSize: \"13px\",\n                    minWidth: \"300px\",\n                  }}\n                >\n                  Others\n                </th>\n              </tr>\n              {dispData}\n            </thead>\n          </table>\n        ) : (\n          \"\"\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default OpenServicePipeLine;\n","import ScoreCard from \"./ScoreCard.json\";\nimport TargetCharts from \"./TargetCharts\";\nimport React, { useEffect, useRef, useState, Fragment } from \"react\";\nimport Highcharts from \"highcharts\";\nimport HighchartsReact from \"highcharts-react-official\";\nimport highcharts3d from \"highcharts/highcharts-3d\";\nimport { FaAngleDown, FaAngleRight } from \"react-icons/fa\";\nhighcharts3d(Highcharts);\n\nexport default function RealisedRevByContract(props) {\n  console.log(\"props-------------\");\n  console.log(props);\n  const { custContRecRev, custContRecRevTable } = props;\n  // const {custContRecRevTable} = props.tableData\n  const [chartDataProp, setChartDataProp] = useState({});\n  const [expanded, setexpanded] = useState([]);\n\n  const bms = useRef(0);\n  const bne = useRef(0);\n  const bsa = useRef(0);\n  const btm = useRef(0);\n  const fp = useRef(0);\n  const nbe = useRef(0);\n  let angle = 180;\n  const onclickchanger = \"category\";\n  const allExecutives = custContRecRevTable\n    .filter((item) => item.lvl == 1)\n    .map((item) => item[onclickchanger]);\n  let toggler = 0;\n\n  const clickExpand = (exec) => {\n    if (exec == \"Total\") {\n      setexpanded((prevState) => {\n        return prevState.length == allExecutives.length ? [] : allExecutives;\n      });\n    } else {\n      setexpanded((prevState) => {\n        return prevState.includes(exec)\n          ? prevState.filter((item) => item !== exec)\n          : [...prevState, exec];\n      });\n    }\n  };\n  // console.log(custContRecRevTable)\n  useEffect(() => {\n    handleChartData();\n    // console.log(\"relRevByCon\")\n    // console.log(relRevByCon)\n  }, []);\n\n  const handleDisplaySubData = (e, d) => {\n    let clsNm = d.lvl + 1 + \"_\" + d.sales_executive;\n    let elements = document.getElementsByClassName(clsNm);\n    for (let i = 0; i < elements.length; i++) {\n      if (elements[i].classList.contains(\"displayRow\")) {\n        elements[i].classList.remove(\"displayRow\");\n      } else {\n        elements[i].classList.add(\"displayRow\");\n      }\n    }\n  };\n\n  const custContRecRevTableData = custContRecRevTable?.map((data) => {\n    const conditions = [\"catId\", \"id\", \"lvl\"];\n    let header = [];\n    let checks = \"category,project,revenue,planned,total\";\n    toggler =\n      data[\"lvl\"] == 2\n        ? toggler\n        : expanded.includes(data[onclickchanger])\n        ? 1\n        : 0;\n\n    const custContRecRevArr = checks.split(\",\");\n    for (let ia = 0; ia < custContRecRevArr.length; ia++) {\n      let keys = custContRecRevArr[ia];\n      // for (const keys in data) {\n      data[keys] !== null &&\n        !conditions.some((el) => keys.includes(el)) &&\n        header.push(\n          data.id < 0 ? (\n            <th\n              className={\"pipeth\"}\n              style={{ textAlign: \"center\", position: \"sticky\", top: \"0\" }}\n              key={keys}\n              colSpan={data[keys].split(\"^&\")[2]}\n              rowSpan={data[keys].split(\"^&\")[1]}\n            >\n              {data[keys].split(\"^&\")[0]}\n            </th>\n          ) : keys != \"category\" && keys != \"project\" ? (\n            <td\n              className={data.lvl === \"2\" ? \"clear \" : \" \"}\n              style={{ textAlign: \"right\" }}\n              key={keys}\n              colSpan={data[keys].split(\"^&\")[2]}\n              rowSpan={data[keys].split(\"^&\")[1]}\n            >\n              <Fragment>\n                {data.lvl === \"1\" &&\n                (data.name === \"Closed Amount\" ||\n                  data.name === \"Unclosed Calls\" ||\n                  data.name === \"Upside\" ||\n                  data.name === \"Other Pipeline\") ? (\n                  <FiChevronRight onClick={expCollapse} />\n                ) : (\n                  \"\"\n                )}\n                {/* {data[keys].replaceAll(\"&\" + \"nbsp;\", \" \")}&nbsp; */}\n              </Fragment>\n              {\"$\" + parseInt(data[keys]).toLocaleString(\"en-US\")}\n            </td>\n          ) : keys == \"category\" || keys == \"project\" ? (\n            <td\n              className={data.lvl == \"2\" ? \" clear \" : \"ellipsis\"}\n              key={keys}\n              colSpan={data[keys].split(\"^&\")[2]}\n              rowSpan={data[keys].split(\"^&\")[1]}\n              style={{\n                display: toggler == 0 && data[\"lvl\"] == 2 ? \"none\" : \"\",\n              }}\n            >\n              <Fragment>\n                {((keys == onclickchanger && data[\"lvl\"] < 2) ||\n                  (data[\"category\"] == null && data[\"lvl\"] < 2)) && (\n                  <>\n                    <span\n                      style={{ cursor: \"pointer\" }}\n                      onClick={() => {\n                        clickExpand(data[onclickchanger]);\n                        console.log(\"expanded\");\n                      }}\n                    >\n                      {expanded.includes(data[onclickchanger]) ||\n                      expanded.length == allExecutives.length ? (\n                        <FaAngleDown />\n                      ) : (\n                        <FaAngleRight />\n                      )}\n                    </span>\n                  </>\n                )}\n                {data[\"category\"] == null\n                  ? \"null\"\n                  : data[keys].replaceAll(\"&\" + \"nbsp;\", \" \")}\n                &nbsp;\n              </Fragment>\n            </td>\n          ) : (\n            \"\"\n          )\n        );\n    }\n    return (\n      <tr\n        key={data.id}\n        id={data.id}\n        lvl={data.lvl}\n        style={{ display: data[\"lvl\"] == 2 && toggler == 0 ? \"none\" : \"\" }}\n        onClick={(e) => {\n          handleDisplaySubData(e, data);\n        }}\n      >\n        {header}\n      </tr>\n    );\n  });\n\n  const handleChartData = () => {\n    custContRecRev?.map((d) => {\n      //Graph Data\n      // if (d.id > 0) {\n      switch (d.contterm) {\n        case \"BMS\":\n          bms.current = parseInt(d.total);\n          break;\n        case \"BNE\":\n          bne.current = parseInt(d.total);\n          break;\n        case \"BSA\":\n          bsa.current = parseInt(d.total);\n          break;\n        case \"BTM\":\n          btm.current = parseInt(d.total);\n          break;\n        case \"FP\":\n          fp.current = parseInt(d.total);\n          break;\n        case \"NB-E\":\n          nbe.current = parseInt(d.total);\n        default:\n      }\n      // }\n    });\n\n    const chartData = {\n      chart: {\n        plotBackgroundColor: null,\n        plotBorderWidth: null,\n        plotShadow: false,\n        type: \"pie\",\n        options3d: {\n          enabled: true,\n          alpha: 45,\n          beta: 0,\n        },\n      },\n      title: {\n        text: \"Realised Revenue By Contract Terms\",\n        style: {\n          fontSize: \"15px\", // Set font size to 16px\n        },\n      },\n      tooltip: {\n        formatter: function () {\n          // console.log(this.point, this.point.name, this.point.project, \"this.point\")\n          // return `<b>${this.point.name}</b>: <br /> ${this.point.value} ({this.point.percentage:.1f}%)`\n          return `${this.point.name}<br /><li style=\"color: ${\n            this.point.color\n          }\">&#9679;</li> Rec. Revenue: <b>$${Highcharts.numberFormat(\n            this.point.y,\n            0,\n            \",\",\n            \",\"\n          )}</b> (${Math.round(this.point.percentage * 10) / 10})%`;\n        },\n        // pointFormat: \"{point.description}: $ {point.value} (<b>{point.percentage:.1f}%)</b>\",\n      },\n      xAxis: {\n        categories: [\"BMS\", \"BNE\", \"BSA\", \"BTM\", \"FP\", \"NB-E\"],\n      },\n      accessibility: {\n        point: {\n          valueSuffix: \"%\",\n        },\n      },\n      plotOptions: {\n        pie: {\n          allowPointSelect: true,\n          cursor: \"pointer\",\n          shadow: true,\n          startAngle: angle,\n          cursor: \"pointer\",\n          depth: 55,\n          size: \"100%\",\n          showInLegend: true,\n\n          dataLabels: {\n            enabled: true,\n            // format: '<b>{point.name}</b>: {point.percentage:.1f} %'\n            formatter: function () {\n              return `<b>${point.name}</b>:<br/>$${Highcharts.numberFormat(\n                this.point.y,\n                0,\n                \",\",\n                \",\"\n              )} (${Math.round(this.point.percentage * 10) / 10})%`;\n            },\n          },\n        },\n      },\n      series: [\n        {\n          // name: 'Rec. Revenue',\n          data: custContRecRev.map((item) => ({\n            name: item.category,\n            y: parseInt(item.revenue),\n            color: item.color,\n            customer: item.customer,\n          })),\n          colorByPoint: true,\n          data: [\n            {\n              name: \"BMS\",\n              y: bms.current,\n              /* sliced: true, */\n              selected: true,\n              dataLabels: {\n                enabled: true,\n                distance: 10,\n                formatter: function () {\n                  return `<b>${\n                    this.point.name\n                  }</b>:<br/>$${Highcharts.numberFormat(\n                    this.point.y,\n                    0,\n                    \",\",\n                    \",\"\n                  )} (${Math.round(this.point.percentage * 10) / 10})%`;\n                },\n                // format: '<b>{point.name}</b>: <br/>${point.y:,.0f} ({point.percentage:.1f})%'\n              },\n            },\n            {\n              name: \"BNE\",\n              y: bne.current,\n              dataLabels: {\n                enabled: true,\n                distance: 10,\n                formatter: function () {\n                  return `<b>${\n                    this.point.name\n                  }</b>:<br/>$${Highcharts.numberFormat(\n                    this.point.y,\n                    0,\n                    \",\",\n                    \",\"\n                  )} (${Math.round(this.point.percentage * 10) / 10})%`;\n                },\n                // format: '<b>{point.name}</b>: <br/>${point.y:,.0f} ({point.percentage:.1f})%'\n              },\n            },\n            {\n              name: \"BSA\",\n              y: bsa.current,\n              dataLabels: {\n                enabled: true,\n                distance: 10,\n                formatter: function () {\n                  return `<b>${\n                    this.point.name\n                  }</b>:<br/>$${Highcharts.numberFormat(\n                    this.point.y,\n                    0,\n                    \",\",\n                    \",\"\n                  )} (${Math.round(this.point.percentage * 10) / 10})%`;\n                },\n                // format: '<b>{point.name}</b>: <br/>${point.y:,.0f} ({point.percentage:.1f})%'\n              },\n            },\n            {\n              name: \"BTM\",\n              y: btm.current,\n              dataLabels: {\n                enabled: true,\n                distance: 10,\n                formatter: function () {\n                  return `<b>${\n                    this.point.name\n                  }</b>:<br/>$${Highcharts.numberFormat(\n                    this.point.y,\n                    0,\n                    \",\",\n                    \",\"\n                  )} (${Math.round(this.point.percentage * 10) / 10})%`;\n                },\n                // format: '<b>{point.name}</b>: <br/>${point.y:,.0f} ({point.percentage:.1f})%'\n              },\n            },\n            {\n              name: \"FP\",\n              y: fp.current,\n              dataLabels: {\n                enabled: true,\n                distance: 10,\n                formatter: function () {\n                  return `<b>${\n                    this.point.name\n                  }</b>:<br/>$${Highcharts.numberFormat(\n                    this.point.y,\n                    0,\n                    \",\",\n                    \",\"\n                  )} (${Math.round(this.point.percentage * 10) / 10})%`;\n                },\n                // format: '<b>{point.name}</b>: <br/>${point.y:,.0f} ({point.percentage:.1f})%'\n              },\n            },\n            {\n              name: \"NB-E\",\n              y: nbe.current,\n              dataLabels: {\n                enabled: true,\n                distance: 10,\n                formatter: function () {\n                  return `<b>${\n                    this.point.name\n                  }</b>:<br/>$${Highcharts.numberFormat(\n                    this.point.y,\n                    0,\n                    \",\",\n                    \",\"\n                  )} (${Math.round(this.point.percentage * 10) / 10})%`;\n                },\n                // format: '<b>{point.name}</b>: <br/>${point.y:,.0f} ({point.percentage:.1f})%'\n              },\n            },\n          ],\n        },\n      ],\n    };\n    console.log(\"line 146\");\n    console.log(bms.current);\n    console.log(bne.current);\n    setChartDataProp(chartData);\n  };\n\n  return (\n    <div className=\"mt-2 col-md-12 no-padding darkHeader customCard card graph\">\n      <div className=\"col-12 row\">\n        <div className=\"mt-2 col-md-6 \">\n          <HighchartsReact highcharts={Highcharts} options={chartDataProp} />\n\n          {/* <TargetCharts chartData={chartDataProp} /> */}\n        </div>\n        <div\n          className=\"mt-2 col-md-6\"\n          style={{ maxHeight: \"384px\", overflow: \"auto\" }}\n        >\n          <table className=\"table table-bordered serviceTable \">\n            <thead style={{ fontSize: \"13px\" }}>\n              {custContRecRevTableData}\n            </thead>\n          </table>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import ScoreCard from \"./ScoreCard.json\";\nimport Highcharts from \"highcharts\";\nimport HighchartsReact from \"highcharts-react-official\";\nimport { useEffect, useState } from \"react\";\nimport { FaInfoCircle } from \"react-icons/fa\";\nimport highcharts3d from \"highcharts/highcharts-3d\";\nhighcharts3d(Highcharts);\n\nexport default function FETPlannedByLocation({ ftePlanByLoc }) {\n  let xAxis = [];\n  let target = [];\n  let realised = [];\n  let variance = [];\n  let calls = [];\n  let planned = [];\n  const [table, settable] = useState([]);\n  const [summaryChart, setsummaryChart] = useState({});\n\n  useEffect(() => {\n    const tableRenderer = ftePlanByLoc?.map((data) => {\n      let tableData = [];\n      const keysArray = [\"category\", \"revenue\", \"planned\"];\n      keysArray.forEach((keys) => {\n        if (data[\"id\"] > -1) {\n          switch (keys) {\n            case \"category\":\n              xAxis.push(data[keys]);\n\n              break;\n            case \"planned\":\n              planned.push(parseFloat(data[keys]));\n              break;\n            case \"revenue\":\n              realised.push(parseFloat(data[keys]));\n              break;\n\n            default:\n          }\n        }\n        tableData.push(\n          data.id < 0 ? (\n            <th key={keys} style={{ textAlign: \"center\" }}>\n              {data[keys]}\n            </th>\n          ) : keys == \"planned\" || keys == \"revenue\" ? (\n            <td key={keys} style={{ textAlign: \"right\" }}>\n              {\"$\" + parseInt(data[keys]).toLocaleString(\"en-US\")}\n            </td>\n          ) : (\n            <td key={keys}> {data[keys]}</td>\n          )\n        );\n      });\n      return <tr key={data.id}>{tableData}</tr>;\n    });\n    const summaryChart = {\n      chart: {\n        type: \"column\",\n        width: 500,\n        options3d: {\n          enabled: true,\n          alpha: 8,\n          beta: 12,\n          viewDistance: 25,\n          depth: 70,\n        },\n      },\n      title: {\n        text: \"FTE Realised, Planned By Location\",\n        style: {\n          fontSize: \"15px\", // Set font size to 16px\n        },\n      },\n      xAxis: {\n        categories: xAxis,\n        gridLineWidth: 0.2,\n      },\n      yAxis: [\n        {\n          allowDecimals: false,\n          min: 0,\n          title: {\n            text: \"Realised / Planned ($)\",\n          },\n          gridLineWidth: 0.2,\n        },\n      ],\n      tooltip: {\n        formatter: function () {\n          return (\n            \"<b>\" +\n            this.x +\n            \"</b><br/>\" +\n            this.series.name +\n            \": \" +\n            parseInt(this.y).toLocaleString(\"en-US\") +\n            \"<br/>\"\n          );\n        },\n      },\n      plotOptions: {\n        column: {\n          stacking: \"normal\",\n        },\n      },\n      series: [\n        //     {\n        //      name: 'Target',\n        //      color: \"rgba(34, 167, 240, 1)\",\n        //      data: target,\n        //      stack: 'first',\n        //      legendIndex: 1\n        //  },\n        {\n          name: \"Planned\",\n          color: \"#ffc966\",\n          data: planned,\n          stack: \"second\",\n          legendIndex: 3,\n        },\n        {\n          name: \"Realised\",\n          color: \"#66ff66\",\n          data: realised,\n          stack: \"second\",\n          legendIndex: 2,\n        },\n      ],\n      responsive: {\n        rules: [\n          {\n            condition: {\n              maxWidth: 2000,\n            },\n          },\n        ],\n      },\n    };\n\n    settable(tableRenderer);\n    setsummaryChart(summaryChart);\n  }, [ftePlanByLoc]);\n\n  return (\n    <div className=\"col-12 darkHeader\">\n      <div className=\"col-12 \">\n        <HighchartsReact highcharts={Highcharts} options={summaryChart} />\n      </div>\n      <div className=\"col-12 darkHeader\">\n        <table className=\"table table-bordered serviceTable\">\n          <thead style={{ fontSize: \"13px\" }}>{table}</thead>\n        </table>\n      </div>\n    </div>\n  );\n}\n","import ScoreCard from \"./ScoreCard.json\";\nimport Highcharts from \"highcharts\";\nimport HighchartsReact from \"highcharts-react-official\";\nimport { useEffect, useState } from \"react\";\nimport { FaInfoCircle } from \"react-icons/fa\";\nimport highcharts3d from \"highcharts/highcharts-3d\";\nhighcharts3d(Highcharts);\n\nexport default function SubKPlannedByLocation({ subKPlanByLoc }) {\n  let xAxis = [];\n  let target = [];\n  let realised = [];\n  let variance = [];\n  let calls = [];\n  let planned = [];\n  const [table, settable] = useState([]);\n  const [summaryChart, setsummaryChart] = useState({});\n\n  useEffect(() => {\n    const tableRenderer = subKPlanByLoc?.map((data) => {\n      let tableData = [];\n      const keysArray = [\"category\", \"revenue\", \"planned\"];\n      keysArray.forEach((keys) => {\n        if (data[\"id\"] > -1) {\n          switch (keys) {\n            case \"category\":\n              xAxis.push(data[keys]);\n\n              break;\n            case \"planned\":\n              planned.push(parseFloat(data[keys]));\n              break;\n            case \"revenue\":\n              realised.push(parseFloat(data[keys]));\n              break;\n\n            default:\n          }\n        }\n        tableData.push(\n          data.id < 0 ? (\n            <th key={keys} style={{ textAlign: \"center\" }}>\n              {data[keys]}\n            </th>\n          ) : keys == \"planned\" || keys == \"revenue\" ? (\n            <td key={keys} style={{ textAlign: \"right\" }}>\n              {\"$\" + parseInt(data[keys]).toLocaleString(\"en-US\")}\n            </td>\n          ) : (\n            <td key={keys}>{data[keys]}</td>\n          )\n        );\n      });\n      return <tr key={data.id}>{tableData}</tr>;\n    });\n    const summaryChart = {\n      chart: {\n        type: \"column\",\n        width: 500,\n        options3d: {\n          enabled: true,\n          alpha: 8,\n          beta: 12,\n          viewDistance: 25,\n          depth: 70,\n        },\n      },\n      title: {\n        text: \"SUBK Realised, Planned By Location\",\n        style: {\n          fontSize: \"15px\", // Set font size to 16px\n        },\n      },\n      xAxis: {\n        categories: xAxis,\n        gridLineWidth: 0.2,\n      },\n      yAxis: [\n        {\n          allowDecimals: false,\n          min: 0,\n          title: {\n            text: \"Planned / Realised  ($)\",\n          },\n          gridLineWidth: 0.2,\n        },\n      ],\n      tooltip: {\n        formatter: function () {\n          return (\n            \"<b>\" +\n            this.x +\n            \"</b><br/>\" +\n            this.series.name +\n            \": \" +\n            parseInt(this.y).toLocaleString(\"en-US\") +\n            \"<br/>\"\n          );\n        },\n      },\n      plotOptions: {\n        column: {\n          stacking: \"normal\",\n        },\n      },\n      series: [\n        //     {\n        //      name: 'Target',\n        //      color: \"rgba(34, 167, 240, 1)\",\n        //      data: target,\n        //      stack: 'first',\n        //      legendIndex: 1\n        //  },\n        {\n          name: \"Planned\",\n          color: \"#ffc966\",\n          data: planned,\n          stack: \"second\",\n          legendIndex: 3,\n        },\n        {\n          name: \"Realised\",\n          color: \"#66ff66\",\n          data: realised,\n          stack: \"second\",\n          legendIndex: 2,\n        },\n      ],\n      responsive: {\n        rules: [\n          {\n            condition: {\n              maxWidth: 2000,\n            },\n          },\n        ],\n      },\n    };\n\n    settable(tableRenderer);\n    setsummaryChart(summaryChart);\n  }, [subKPlanByLoc]);\n\n  return (\n    <div className=\"col-12 darkHeader\">\n      <div className=\"col-12 \">\n        <HighchartsReact highcharts={Highcharts} options={summaryChart} />\n      </div>\n      <div className=\"col-12 \">\n        <table className=\"table table-bordered serviceTable\">\n          <thead style={{ fontSize: \"13px\" }}>{table}</thead>\n        </table>\n      </div>\n    </div>\n  );\n}\n","import ScoreCard from \"./ScoreCard.json\";\nimport TargetTable from \"./TargetTable\";\nimport FETPlannedByLocation from \"./FETPlannedByLocation\";\nimport SubKPlannedByLocation from \"./SubKPlannedByLocation\";\n\nexport default function PlannedByLocation(props) {\n\n    const { ftePlanByLoc, subKPlanByLoc } = props\n    return (\n        <div className=\"col-12 mr-0 pr-0 row\" style={{ margin: \"0px\", padding: \"0px\" }}>\n            <div className=\"col-6 pr-0 customCard card graph\">\n                <FETPlannedByLocation ftePlanByLoc={ftePlanByLoc} />\n            </div>\n            {/* <div className=\"col-1\"></div> */}\n            <div className=\"col-6 pl-0 customCard card graph\" >\n                <SubKPlannedByLocation subKPlanByLoc={subKPlanByLoc} />\n            </div>\n\n\n\n        </div>\n    );\n}","import ScoreCard from \"./ScoreCard.json\";\nimport React, { useEffect, useRef, useState, Fragment } from \"react\";\nimport DownloadForOfflineRoundedIcon from \"@mui/icons-material/DownloadForOfflineRounded\";\n\nexport default function QBRListData({ qbrList }) {\n  const serviceTableData = qbrList.map((data) => {\n    const conditions = [\n      \"customer_id\",\n      \"id\",\n      \"obj_id\",\n      \"id\",\n      \"customer_id\",\n      \"id\",\n    ];\n    let header = [];\n    const keysArray = [\n      \"customer\",\n      \"qbr_date\",\n      \"qbr_presenter\",\n      \"qbr_participants\",\n      \"qbr_cust_participants\",\n      \"qbr_present_date\",\n      \"qbr_notes\",\n      \"file\",\n    ];\n\n    // let checks= targetReviewsData.serviceTargetsKeyVal\n    // const servicekeyArr = checks.split(',');\n    //  for (let ia = 0;ia < servicekeyArr.length;ia++) {\n    //   let keys = servicekeyArr[ia];\n\n    // for (const keys in data) {\n    keysArray.forEach((keys) => {\n      // console.log(!data.id.includes(-1) == false)\n      data[keys] !== null\n        ? !conditions.some((el) => keys.includes(el)) &&\n          header.push(\n            data.id < 0 ? (\n              <th\n                className={\"serviceth\"}\n                key={keys}\n                style={{ textAlign: \"center\" }}\n                colSpan={data[keys].split(\"^&\")[2]}\n                rowSpan={data[keys].split(\"^&\")[1]}\n              >\n                {data[keys].split(\"^&\")[0]}\n              </th>\n            ) : (\n              // !data.id.includes(-1) == false ? <td>No Data Found</td> :\n              <td\n                // className={keys.split(\"_\")[0] + \" servicetd\"}\n                // className={keys == \"qbr_notes\" && \"ellipsis\"}\n                key={keys}\n                colSpan={data[keys].split(\"^&\")[2]}\n                rowSpan={data[keys].split(\"^&\")[1]}\n              >\n                {/* {keys !== \"name\"\n                  ?\n                  <Fragment>\n                    <span>{(parseInt(data[keys])).toLocaleString('en-US')}</span>\n                  </Fragment>\n                  : */}\n                {keys == \"file\" &&\n                (data[\"file\"] != null || data[\"file\"] != \"\") ? (\n                  <div\n                    align=\"center\"\n                    data-toggle=\"tooltip\"\n                    title=\"Download Document\"\n                  >\n                    <DownloadForOfflineRoundedIcon\n                      style={{ color: \"#86b558\" }}\n                    />\n                  </div>\n                ) : (\n                  <Fragment>\n                    <span>{data[keys]}</span>\n                    {/* <span>{data[keys]}</span> */}\n                  </Fragment>\n                )}\n                {/* } */}\n              </td>\n            )\n          )\n        : \"\";\n    });\n    return (\n      <>\n        <tr key={data.id}>{header}</tr>\n        {/* <tr><td colSpan={8} align=\"center\">No Data Found</td></tr> */}\n      </>\n    );\n  });\n\n  return (\n    <div className=\"col-md-12  border-box no-padding csattable customCard card graph darkHeader\">\n      <div className=\"group-content\">\n        <div className=\"col-lg-12 col-md-12 col-sm-12 no-padding \">\n          <h6 className=\"subHeading\">Customer QBR List</h6>\n        </div>\n        <table className=\"table table-bordered  \">\n          <thead style={{ fontSize: \"13px\" }}>{serviceTableData}</thead>\n        </table>\n      </div>\n    </div>\n  );\n}\n","import { chart } from \"highcharts\";\nimport React from \"react\";\nimport TargetCharts from \"./TargetCharts\";\n// import histroricalTrendData from \"./histroricalTrendData.json\"\nimport { useEffect } from \"react\";\nimport { useState } from \"react\";\n\nfunction HistoricalTrend(props) {\n  const { historicalTrendData, scoreCardDataPayload } = props;\n  const [targetsData, setTargetsData] = useState([]);\n  const [practRecRev, setPractRecRev] = useState([]);\n  const [locRecRev, setLocRecRev] = useState([]);\n  const [custCatRecRev, setCustCatRecRev] = useState([]);\n  const [custContRecRev, setCustContRecRev] = useState([]);\n  const [locSUBKRecRev, setLocSUBKRecRev] = useState([]);\n  const [locFTERecRev, setLocFTERecRev] = useState([]);\n  const [displayTableData, setDisplayTableData] = useState(null);\n\n  useEffect(() => {\n    console.log(\"in line 11------\");\n    console.log(historicalTrendData.targets);\n    console.log(historicalTrendData);\n    handleChartsData();\n    handleTableData();\n    // customerRecRevTable(historicalTrendData.custRecRevTable);\n  }, [historicalTrendData]);\n\n\n  const handleChartsData = () => {\n    let targetTotalTargets = [];\n    let targetTotalRealised = [];\n    let targetServiceTarget = [];\n    let targetServiceRealised = [];\n    let targetSoftwareTarget = [];\n    let targetSoftwareRealised = [];\n    let targetRangeDescription = [];\n    let xAxis1 = [];\n\n    console.log(\"in line 28-------\");\n    console.log(historicalTrendData.targets);\n\n    historicalTrendData.targets?.map((d) => {\n      console.log(\n        d.qrtr,\n        d.qrtr.substring(0, 4) + \"-\" + d.qrtr.substring(5),\n        \"qrtr\"\n      );\n      targetRangeDescription.push(d.qrtr);\n      switch (d.category) {\n        case \"Total\":\n          targetTotalTargets.push(parseInt(d.target));\n          targetTotalRealised.push(parseInt(d.realised));\n          xAxis1.push(d.qrtr.substring(0, 4) + \"-\" + d.qrtr.substring(5));\n          break;\n        case \"Service\":\n          targetServiceTarget.push(parseInt(d.target));\n          targetServiceRealised.push(parseInt(d.realised));\n          xAxis1.push(d.qrtr.substring(0, 4) + \"-\" + d.qrtr.substring(5));\n\n          break;\n        case \"Software\":\n          targetSoftwareTarget.push(parseInt(d.target));\n          targetSoftwareRealised.push(parseInt(d.realised));\n          xAxis1.push(d.qrtr.substring(0, 4) + \"-\" + d.qrtr.substring(5));\n\n          break;\n        default:\n      }\n    });\n    console.log(xAxis1, \"xaxis\");\n    const chartData1 = {\n      title: {\n        text: \"Target,Realised/Closed By Quarter Trend\",\n      },\n\n      // subtitle: {\n      //     text: 'Source: <a href=\"https://irecusa.org/programs/solar-jobs-census/\" target=\"_blank\">IREC</a>'\n      // },\n\n      yAxis: {\n        tickInterval: 10000000,\n        title: {\n          text: \"Number of Employees\",\n        },\n      },\n      tooltip: {\n        formatter: function () {\n          return (\n            \"<b>\" +\n            this.x +\n            \"</b><br/>\" +\n            this.series.name +\n            \": \" +\n            this.y?.toLocaleString(\"en-US\") +\n            \"<br/>\"\n          );\n        },\n      },\n      xAxis: {\n        type: \"category\",\n        categories: xAxis1,\n        crosshair: true,\n        title: {\n          text: \"Quater\",\n        },\n        accessibility: {\n          rangeDescription: xAxis1.toString(),\n        },\n      },\n\n      legend: {\n        align: \"center\",\n        verticalAlign: \"bottom\",\n        layout: \"horizontal\",\n      },\n\n      plotOptions: {\n        series: {\n          label: {\n            connectorAllowed: false,\n          },\n        },\n      },\n\n      series: [\n        {\n          name: \"Total Targets\",\n          data: targetTotalTargets,\n        },\n        {\n          name: \"Total Realised\",\n          data: targetTotalRealised,\n        },\n        {\n          name: \"Service Target\",\n          data: targetServiceTarget,\n        },\n        {\n          name: \"Service Realised\",\n          data: targetServiceRealised,\n        },\n        {\n          name: \"Software Target\",\n          data: targetSoftwareTarget,\n        },\n        {\n          name: \"Software Realised\",\n          data: targetSoftwareRealised,\n        },\n      ],\n\n      responsive: {\n        rules: [\n          {\n            condition: {\n              maxWidth: 500,\n            },\n            chartOptions: {\n              legend: {\n                layout: \"horizontal\",\n                align: \"center\",\n                verticalAlign: \"bottom\",\n              },\n            },\n          },\n        ],\n      },\n    };\n    setTargetsData(chartData1);\n\n    let pracRecTotalTargets = [];\n    let pracRecTotalRealised = [];\n    let pracRecDACSTarget = [];\n    let pracRecDACSRealised = [];\n    let pracRecIMATarget = [];\n    let pracRecIMARealised = [];\n    let pracRecQATATargets = [];\n    let pracRecQATARealised = [];\n    let pracRecProlificsProductsTargets = [];\n    let pracRecProlificsProductsRealised = [];\n    let pracRecRangeDescription = [];\n    let xAxis2 = [];\n    console.log(\"in line 136-------\");\n    console.log(historicalTrendData.practRecRev);\n\n    historicalTrendData.practRecRev?.map((d) => {\n      pracRecRangeDescription.push(d.qrtr);\n      switch (d.category) {\n        case \"Total\":\n          pracRecTotalTargets.push(parseInt(d.target));\n          pracRecTotalRealised.push(parseInt(d.realised));\n          xAxis2.push(d.qrtr.substring(0, 4) + \"-\" + d.qrtr.substring(5));\n\n          break;\n        case \"DACS\":\n          pracRecDACSTarget.push(parseInt(d.target));\n          pracRecDACSRealised.push(parseInt(d.realised));\n          xAxis2.push(d.qrtr.substring(0, 4) + \"-\" + d.qrtr.substring(5));\n\n          break;\n        case \"IM&A\":\n          pracRecIMATarget.push(parseInt(d.target));\n          pracRecIMARealised.push(parseInt(d.realised));\n          xAxis2.push(d.qrtr.substring(0, 4) + \"-\" + d.qrtr.substring(5));\n\n          break;\n        case \"QA&TA\":\n          pracRecQATATargets.push(parseInt(d.target));\n          pracRecQATARealised.push(parseInt(d.realised));\n          xAxis2.push(d.qrtr.substring(0, 4) + \"-\" + d.qrtr.substring(5));\n\n          break;\n        case \"Prolifics Products\":\n          pracRecProlificsProductsTargets.push(parseInt(d.target));\n          pracRecProlificsProductsRealised.push(parseInt(d.realised));\n          xAxis2.push(d.qrtr.substring(0, 4) + \"-\" + d.qrtr.substring(5));\n\n          break;\n        default:\n      }\n    });\n    console.log(xAxis2, \"xaxiz2\");\n    const chartData2 = {\n      title: {\n        text: \"Target,Realised/Closed Quarter Trend By Practice\",\n      },\n\n      // subtitle: {\n      //     text: 'Source: <a href=\"https://irecusa.org/programs/solar-jobs-census/\" target=\"_blank\">IREC</a>'\n      // },\n\n      yAxis: {\n        tickInterval: 10000000,\n        title: {\n          text: \"Number of Employees\",\n        },\n      },\n      tooltip: {\n        formatter: function () {\n          return (\n            \"<b>\" +\n            this.x +\n            \"</b><br/>\" +\n            this.series.name +\n            \": \" +\n            this.y?.toLocaleString(\"en-US\") +\n            \"<br/>\"\n          );\n        },\n      },\n\n      xAxis: {\n        type: \"category\",\n        categories: xAxis2,\n        crosshair: true,\n        title: {\n          text: \"Quater\",\n        },\n\n        accessibility: {\n          rangeDescription: xAxis2.toString(),\n        },\n      },\n\n      legend: {\n        align: \"center\",\n        verticalAlign: \"bottom\",\n        layout: \"horizontal\",\n      },\n\n      plotOptions: {\n        series: {\n          label: {\n            connectorAllowed: false,\n          },\n        },\n      },\n\n      series: [\n        {\n          name: \"Total Targets\",\n          data: pracRecTotalTargets,\n        },\n        {\n          name: \"Total Realised\",\n          data: pracRecTotalRealised,\n        },\n        {\n          name: \"DACS Target\",\n          data: pracRecDACSTarget,\n        },\n        {\n          name: \"DACS Realised\",\n          data: pracRecDACSRealised,\n        },\n        {\n          name: \"IM&A Target\",\n          data: pracRecIMATarget,\n        },\n        {\n          name: \"IM&A Realised\",\n          data: pracRecIMARealised,\n        },\n        {\n          name: \"QA&TA Target\",\n          data: pracRecQATATargets,\n        },\n        {\n          name: \"QA&TA Realised\",\n          data: pracRecQATARealised,\n        },\n        {\n          name: \"Prolifics Products Target\",\n          data: pracRecProlificsProductsTargets,\n        },\n        {\n          name: \"Prolifics Products Realised\",\n          data: pracRecProlificsProductsRealised,\n        },\n      ],\n\n      responsive: {\n        rules: [\n          {\n            condition: {\n              maxWidth: 500,\n            },\n            chartOptions: {\n              legend: {\n                layout: \"horizontal\",\n                align: \"center\",\n                verticalAlign: \"bottom\",\n              },\n            },\n          },\n        ],\n      },\n    };\n    setPractRecRev(chartData2);\n\n    let locRecrevTotalTargets = [];\n    let locRecrevTotalRealised = [];\n    let locRecrevUKTarget = [];\n    let locRecrevUKRealised = [];\n    let locRecrevUSTarget = [];\n    let locRecrevUSRealised = [];\n    let locRecrevIndiaTargets = [];\n    let locRecrevIndiaRealised = [];\n    let locRecrevGermanyTargets = [];\n    let locRecrevGermanyRealised = [];\n    let locRecrevCanadaTargets = [];\n    let locRecrevCanadaRealised = [];\n    let locRecrevRangeDescription = [];\n    let xAxis3 = [];\n    console.log(\"in line 274------\");\n    console.log(historicalTrendData.locRecRev);\n\n    historicalTrendData.locRecRev?.map((d) => {\n      locRecrevRangeDescription.push(d.qrtr);\n      switch (d.category) {\n        case \"Total\":\n          locRecrevTotalTargets.push(parseInt(d.target));\n          locRecrevTotalRealised.push(parseInt(d.realised));\n          xAxis3.push(d.qrtr.substring(0, 4) + \"-\" + d.qrtr.substring(5));\n\n          break;\n        case \"UK\":\n          locRecrevUKTarget.push(parseInt(d.target));\n          locRecrevUKRealised.push(parseInt(d.realised));\n          xAxis3.push(d.qrtr.substring(0, 4) + \"-\" + d.qrtr.substring(5));\n\n          break;\n        case \"US\":\n          locRecrevUSTarget.push(parseInt(d.target));\n          locRecrevUSRealised.push(parseInt(d.realised));\n          xAxis3.push(d.qrtr.substring(0, 4) + \"-\" + d.qrtr.substring(5));\n\n          break;\n        case \"India\":\n          locRecrevIndiaTargets.push(parseInt(d.target));\n          locRecrevIndiaRealised.push(parseInt(d.realised));\n          xAxis3.push(d.qrtr.substring(0, 4) + \"-\" + d.qrtr.substring(5));\n\n          break;\n        case \"Germany\":\n          locRecrevGermanyTargets.push(parseInt(d.target));\n          locRecrevGermanyRealised.push(parseInt(d.realised));\n          xAxis3.push(d.qrtr.substring(0, 4) + \"-\" + d.qrtr.substring(5));\n\n          break;\n        case \"Canada\":\n          locRecrevCanadaTargets.push(parseInt(d.target));\n          locRecrevCanadaRealised.push(parseInt(d.realised));\n          xAxis3.push(d.qrtr.substring(0, 4) + \"-\" + d.qrtr.substring(5));\n\n          break;\n        default:\n      }\n    });\n\n    const chartData3 = {\n      title: {\n        text: \"Target,Realised/Closed Quarter Trend By Country\",\n      },\n\n      // subtitle: {\n      //     text: 'Source: <a href=\"https://irecusa.org/programs/solar-jobs-census/\" target=\"_blank\">IREC</a>'\n      // },\n\n      yAxis: {\n        tickInterval: 10000000,\n        title: {\n          text: \"Number of Employees\",\n        },\n      },\n\n      tooltip: {\n        formatter: function () {\n          return (\n            \"<b>\" +\n            this.x +\n            \"</b><br/>\" +\n            this.series.name +\n            \": \" +\n            this.y?.toLocaleString(\"en-US\") +\n            \"<br/>\"\n          );\n        },\n      },\n      xAxis: {\n        type: \"category\",\n        categories: xAxis3,\n        crosshair: true,\n        title: {\n          text: \"Quater\",\n        },\n        accessibility: {\n          rangeDescription: xAxis3.toString(),\n        },\n      },\n\n      legend: {\n        align: \"center\",\n        verticalAlign: \"bottom\",\n        layout: \"horizontal\",\n      },\n\n      plotOptions: {\n        series: {\n          label: {\n            connectorAllowed: false,\n          },\n        },\n      },\n\n      series: [\n        {\n          name: \"Total Targets\",\n          data: locRecrevTotalTargets,\n        },\n        {\n          name: \"Total Realised\",\n          data: locRecrevTotalRealised,\n        },\n        {\n          name: \"UK Target\",\n          data: locRecrevUKTarget,\n        },\n        {\n          name: \"UK Realised\",\n          data: locRecrevUKRealised,\n        },\n        {\n          name: \"US Target\",\n          data: locRecrevUSTarget,\n        },\n        {\n          name: \"US Realised\",\n          data: locRecrevUSRealised,\n        },\n        {\n          name: \"India Target\",\n          data: locRecrevIndiaTargets,\n        },\n        {\n          name: \"India Realised\",\n          data: locRecrevIndiaRealised,\n        },\n        {\n          name: \"Germany Target\",\n          data: locRecrevGermanyTargets,\n        },\n        {\n          name: \"Germany Realised\",\n          data: locRecrevGermanyRealised,\n        },\n        {\n          name: \"Canada Target\",\n          data: locRecrevCanadaTargets,\n        },\n        {\n          name: \"Canada Realised\",\n          data: locRecrevCanadaRealised,\n        },\n      ],\n\n      responsive: {\n        rules: [\n          {\n            condition: {\n              maxWidth: 500,\n            },\n            chartOptions: {\n              legend: {\n                layout: \"horizontal\",\n                align: \"center\",\n                verticalAlign: \"bottom\",\n              },\n            },\n          },\n        ],\n      },\n    };\n    setLocRecRev(chartData3);\n\n    //////////////\n\n    let custCatRecRevExistingnExistingRealised = [];\n    let custCatRecRevExistingnNewRealised = [];\n    let custCatRecRevNewnNewRealised = [];\n    let custCatRecRevRangeDescription = [];\n    let xAxis4 = [];\n    console.log(\"in line 274------\");\n    console.log(historicalTrendData.custCatRecRev);\n\n    historicalTrendData.custCatRecRev?.map((d) => {\n      custCatRecRevRangeDescription.push(d.qrtr);\n      switch (d.category) {\n        case \"Existing & Existing\":\n          // custCatRecRevExistingnExistingRealised.push(parseInt(d.target));\n          custCatRecRevExistingnExistingRealised.push(parseInt(d.realised));\n          xAxis4.push(d.qrtr.substring(0, 4) + \"-\" + d.qrtr.substring(5));\n\n          break;\n        case \"Existing & New\":\n          // custCatRecRevExistingnNewRealised.push(parseInt(d.target));\n          custCatRecRevExistingnNewRealised.push(parseInt(d.realised));\n          xAxis4.push(d.qrtr.substring(0, 4) + \"-\" + d.qrtr.substring(5));\n\n          break;\n        case \"New & New\":\n          // locRecrevUSTarget.push(parseInt(d.target));\n          custCatRecRevNewnNewRealised.push(parseInt(d.realised));\n          xAxis4.push(d.qrtr.substring(0, 4) + \"-\" + d.qrtr.substring(5));\n\n          break;\n        default:\n      }\n    });\n\n    const chartData4 = {\n      title: {\n        text: \"Customer Realised Revenue Quarter Trend By Category\",\n      },\n\n      // subtitle: {\n      //     text: 'Source: <a href=\"https://irecusa.org/programs/solar-jobs-census/\" target=\"_blank\">IREC</a>'\n      // },\n\n      yAxis: {\n        tickInterval: 10000000,\n        title: {\n          text: \"Realised\",\n        },\n      },\n      tooltip: {\n        formatter: function () {\n          return (\n            \"<b>\" +\n            this.x +\n            \"</b><br/>\" +\n            this.series.name +\n            \": \" +\n            this.y?.toLocaleString(\"en-US\") +\n            \"<br/>\"\n          );\n        },\n      },\n      xAxis: {\n        type: \"category\",\n        categories: xAxis4,\n        crosshair: true,\n        title: {\n          text: \"Quater\",\n        },\n        accessibility: {\n          rangeDescription: xAxis4.toString(),\n        },\n      },\n\n      legend: {\n        align: \"center\",\n        verticalAlign: \"bottom\",\n        layout: \"horizontal\",\n      },\n\n      plotOptions: {\n        series: {\n          label: {\n            connectorAllowed: false,\n          },\n        },\n      },\n\n      series: [\n        {\n          name: \"Existing & Existing Realised\",\n          data: custCatRecRevExistingnExistingRealised,\n        },\n        {\n          name: \"Existing & New Realised\",\n          data: custCatRecRevExistingnNewRealised,\n        },\n        {\n          name: \"New & New Realised\",\n          data: custCatRecRevNewnNewRealised,\n        },\n      ],\n\n      responsive: {\n        rules: [\n          {\n            condition: {\n              maxWidth: 500,\n            },\n            chartOptions: {\n              legend: {\n                layout: \"horizontal\",\n                align: \"center\",\n                verticalAlign: \"bottom\",\n              },\n            },\n          },\n        ],\n      },\n    };\n    setCustCatRecRev(chartData4);\n\n    let custContRecRevBMSRealised = [];\n    let custContRecRevBNERealised = [];\n    let custContRecRevBSARealised = [];\n    let custContRecRevBTMRealised = [];\n    let custContRecRevFPRealised = [];\n    let custContRecRevRangeDescription = [];\n    let xAxis5 = [];\n    console.log(\"in line 274------\");\n    console.log(historicalTrendData.custContRecRev);\n\n    historicalTrendData.custContRecRev?.map((d) => {\n      custContRecRevRangeDescription.push(d.qrtr);\n      switch (d.category) {\n        case \"BMS\":\n          // custCatRecRevExistingnExistingRealised.push(parseInt(d.target));\n          custContRecRevBMSRealised.push(parseInt(d.realised));\n          xAxis5.push(d.qrtr.substring(0, 4) + \"-\" + d.qrtr.substring(5));\n\n          break;\n        case \"BNE\":\n          // custCatRecRevExistingnNewRealised.push(parseInt(d.target));\n          custContRecRevBNERealised.push(parseInt(d.realised));\n          xAxis5.push(d.qrtr.substring(0, 4) + \"-\" + d.qrtr.substring(5));\n\n          break;\n        case \"BSA\":\n          // locRecrevUSTarget.push(parseInt(d.target));\n          custContRecRevBSARealised.push(parseInt(d.realised));\n          xAxis5.push(d.qrtr.substring(0, 4) + \"-\" + d.qrtr.substring(5));\n\n          break;\n        case \"BTM\":\n          // locRecrevUSTarget.push(parseInt(d.target));\n          custContRecRevBTMRealised.push(parseInt(d.realised));\n          xAxis5.push(d.qrtr.substring(0, 4) + \"-\" + d.qrtr.substring(5));\n\n          break;\n        case \"FP\":\n          // locRecrevUSTarget.push(parseInt(d.target));\n          custContRecRevFPRealised.push(parseInt(d.realised));\n          xAxis5.push(d.qrtr.substring(0, 4) + \"-\" + d.qrtr.substring(5));\n\n          break;\n        default:\n      }\n    });\n\n    const chartData5 = {\n      title: {\n        text: \"Customer Realised Revenue Quarter Trend By ContractTerms\",\n      },\n\n      // subtitle: {\n      //     text: 'Source: <a href=\"https://irecusa.org/programs/solar-jobs-census/\" target=\"_blank\">IREC</a>'\n      // },\n\n      yAxis: {\n        tickInterval: 10000000,\n        title: {\n          text: \"Realised\",\n        },\n      },\n      tooltip: {\n        formatter: function () {\n          return (\n            \"<b>\" +\n            this.x +\n            \"</b><br/>\" +\n            this.series.name +\n            \": \" +\n            this.y?.toLocaleString(\"en-US\") +\n            \"<br/>\"\n          );\n        },\n      },\n\n      xAxis: {\n        type: \"category\",\n        categories: xAxis5,\n        crosshair: true,\n        title: {\n          text: \"Quater\",\n        },\n        accessibility: {\n          rangeDescription: xAxis5.toString(),\n        },\n      },\n\n      legend: {\n        align: \"center\",\n        verticalAlign: \"bottom\",\n        layout: \"horizontal\",\n      },\n\n      plotOptions: {\n        series: {\n          label: {\n            connectorAllowed: false,\n          },\n        },\n      },\n\n      series: [\n        {\n          name: \"BMS Realised\",\n          data: custContRecRevBMSRealised,\n        },\n        {\n          name: \"BNE Realised\",\n          data: custContRecRevBNERealised,\n        },\n        {\n          name: \"BSA Realised\",\n          data: custContRecRevBSARealised,\n        },\n        {\n          name: \"BTM Realised\",\n          data: custContRecRevBTMRealised,\n        },\n        {\n          name: \"FP Realised\",\n          data: custContRecRevFPRealised,\n        },\n      ],\n\n      responsive: {\n        rules: [\n          {\n            condition: {\n              maxWidth: 500,\n            },\n            chartOptions: {\n              legend: {\n                layout: \"horizontal\",\n                align: \"center\",\n                verticalAlign: \"bottom\",\n              },\n            },\n          },\n        ],\n      },\n    };\n    setCustContRecRev(chartData5);\n\n    ////\n\n    let locFTERecRevTotalPlanned = [];\n    let locFTERecRevTotalRealised = [];\n    let locFTERecRevUKPlanned = [];\n    let locFTERecRevUKRealised = [];\n    let locFTERecRevUSPlanned = [];\n    let locFTERecRevUSRealised = [];\n    let locFTERecRevIndiaPlanned = [];\n    let locFTERecRevIndiaRealised = [];\n    let locFTERecRevGermanyPlanned = [];\n    let locFTERecRevGermanyRealised = [];\n    let locFTERecRevCanadaPlanned = [];\n    let locFTERecRevCanadaRealised = [];\n    let locFTERecRevRangeDescription = [];\n    let xAxis6 = [];\n    console.log(\"in line 136-------\");\n    console.log(historicalTrendData.locFTERecRev);\n\n    historicalTrendData.locFTERecRev?.map((d) => {\n      locFTERecRevRangeDescription.push(d.qrtr);\n      switch (d.category) {\n        case \"Total\":\n          locFTERecRevTotalPlanned.push(parseInt(d.planned));\n          locFTERecRevTotalRealised.push(parseInt(d.realised));\n          xAxis6.push(d.qrtr.substring(0, 4) + \"-\" + d.qrtr.substring(5));\n\n          break;\n        case \"UK\":\n          locFTERecRevUKPlanned.push(parseInt(d.planned));\n          locFTERecRevUKRealised.push(parseInt(d.realised));\n          xAxis6.push(d.qrtr.substring(0, 4) + \"-\" + d.qrtr.substring(5));\n\n          break;\n        case \"US\":\n          locFTERecRevUSPlanned.push(parseInt(d.planned));\n          locFTERecRevUSRealised.push(parseInt(d.realised));\n          xAxis6.push(d.qrtr.substring(0, 4) + \"-\" + d.qrtr.substring(5));\n\n          break;\n        case \"India\":\n          locFTERecRevIndiaPlanned.push(parseInt(d.planned));\n          locFTERecRevIndiaRealised.push(parseInt(d.realised));\n          xAxis6.push(d.qrtr.substring(0, 4) + \"-\" + d.qrtr.substring(5));\n\n          break;\n        case \"Germany\":\n          locFTERecRevGermanyPlanned.push(parseInt(d.planned));\n          locFTERecRevGermanyRealised.push(parseInt(d.realised));\n          xAxis6.push(d.qrtr.substring(0, 4) + \"-\" + d.qrtr.substring(5));\n\n          break;\n        case \"Canada\":\n          locFTERecRevCanadaPlanned.push(parseInt(d.planned));\n          locFTERecRevCanadaRealised.push(parseInt(d.realised));\n          xAxis6.push(d.qrtr.substring(0, 4) + \"-\" + d.qrtr.substring(5));\n\n          break;\n        default:\n      }\n    });\n\n    const chartData6 = {\n      title: {\n        text: \"FTE Planned, Realised/Closed Quarter Trend By Country\",\n      },\n\n      // subtitle: {\n      //     text: 'Source: <a href=\"https://irecusa.org/programs/solar-jobs-census/\" target=\"_blank\">IREC</a>'\n      // },\n\n      yAxis: {\n        tickInterval: 10000000,\n        title: {\n          text: \"Number of Employees\",\n        },\n      },\n      tooltip: {\n        formatter: function () {\n          return (\n            \"<b>\" +\n            this.x +\n            \"</b><br/>\" +\n            this.series.name +\n            \": \" +\n            this.y?.toLocaleString(\"en-US\") +\n            \"<br/>\"\n          );\n        },\n      },\n\n      xAxis: {\n        type: \"category\",\n        categories: xAxis6,\n        crosshair: true,\n        title: {\n          text: \"Quater\",\n        },\n        accessibility: {\n          rangeDescription: xAxis6.toString(),\n        },\n      },\n\n      legend: {\n        align: \"center\",\n        verticalAlign: \"bottom\",\n        layout: \"horizontal\",\n      },\n\n      plotOptions: {\n        series: {\n          label: {\n            connectorAllowed: false,\n          },\n        },\n      },\n\n      series: [\n        {\n          name: \"Total Planned\",\n          data: locFTERecRevTotalPlanned,\n        },\n        {\n          name: \"Total Realised\",\n          data: locFTERecRevTotalRealised,\n        },\n        {\n          name: \"UK Planned\",\n          data: locFTERecRevUKPlanned,\n        },\n        {\n          name: \"UK Realised\",\n          data: locFTERecRevUKRealised,\n        },\n        {\n          name: \" US Planned\",\n          data: locFTERecRevUSPlanned,\n        },\n        {\n          name: \"US Realised\",\n          data: locFTERecRevUSRealised,\n        },\n        {\n          name: \"India Planned\",\n          data: locFTERecRevIndiaPlanned,\n        },\n        {\n          name: \" India Realised\",\n          data: locFTERecRevIndiaRealised,\n        },\n        {\n          name: \"Germany Planned\",\n          data: locFTERecRevGermanyPlanned,\n        },\n        {\n          name: \"Germany Realised\",\n          data: locFTERecRevGermanyRealised,\n        },\n        {\n          name: \"Canada Planned\",\n          data: locFTERecRevCanadaPlanned,\n        },\n        {\n          name: \"Canada Realised\",\n          data: locFTERecRevCanadaRealised,\n        },\n      ],\n\n      responsive: {\n        rules: [\n          {\n            condition: {\n              maxWidth: 500,\n            },\n            chartOptions: {\n              legend: {\n                layout: \"horizontal\",\n                align: \"center\",\n                verticalAlign: \"bottom\",\n              },\n            },\n          },\n        ],\n      },\n    };\n    setLocFTERecRev(chartData6);\n\n    /////\n\n    let locSUBKRecRevTotalPlanned = [];\n    let locSUBKRecRevTotalRealised = [];\n    let locSUBKRecRevUKPlanned = [];\n    let locSUBKRecRevUKRealised = [];\n    let locSUBKRecRevUSPlanned = [];\n    let locSUBKRecRevUSRealised = [];\n    let locSUBKRecRevIndiaPlanned = [];\n    let locSUBKRecRevIndiaRealised = [];\n    let locSUBKRecRevGermanyPlanned = [];\n    let locSUBKRecRevGermanyRealised = [];\n    let locSUBKRecRevCanadaPlanned = [];\n    let locSUBKRecRevCanadaRealised = [];\n    let locSUBKRecRevRangeDescription = [];\n    let xAxis7 = [];\n    console.log(\"in line 136-------\");\n    console.log(historicalTrendData.locSUBKRecRev);\n\n    historicalTrendData.locSUBKRecRev?.map((d) => {\n      locSUBKRecRevRangeDescription.push(d.qrtr);\n      switch (d.category) {\n        case \"Total\":\n          locSUBKRecRevTotalPlanned.push(parseInt(d.planned));\n          locSUBKRecRevTotalRealised.push(parseInt(d.realised));\n          xAxis7.push(d.qrtr.substring(0, 4) + \"-\" + d.qrtr.substring(5));\n\n          break;\n        case \"UK\":\n          locSUBKRecRevUKPlanned.push(parseInt(d.planned));\n          locSUBKRecRevUKRealised.push(parseInt(d.realised));\n          xAxis7.push(d.qrtr.substring(0, 4) + \"-\" + d.qrtr.substring(5));\n\n          break;\n        case \"US\":\n          locSUBKRecRevUSPlanned.push(parseInt(d.planned));\n          locSUBKRecRevUSRealised.push(parseInt(d.realised));\n          xAxis7.push(d.qrtr.substring(0, 4) + \"-\" + d.qrtr.substring(5));\n\n          break;\n        case \"India\":\n          locSUBKRecRevIndiaPlanned.push(parseInt(d.planned));\n          locSUBKRecRevIndiaRealised.push(parseInt(d.realised));\n          xAxis7.push(d.qrtr.substring(0, 4) + \"-\" + d.qrtr.substring(5));\n\n          break;\n        case \"Germany\":\n          locSUBKRecRevGermanyPlanned.push(parseInt(d.planned));\n          locSUBKRecRevGermanyRealised.push(parseInt(d.realised));\n          xAxis7.push(d.qrtr.substring(0, 4) + \"-\" + d.qrtr.substring(5));\n\n          break;\n        case \"Canada\":\n          locSUBKRecRevCanadaPlanned.push(parseInt(d.planned));\n          locSUBKRecRevCanadaRealised.push(parseInt(d.realised));\n          xAxis7.push(d.qrtr.substring(0, 4) + \"-\" + d.qrtr.substring(5));\n\n          break;\n        default:\n      }\n    });\n\n    const chartData7 = {\n      title: {\n        text: \"SUBK Planned, Realised/Closed Quarter Trend By Country\",\n      },\n\n      // subtitle: {\n      //     text: 'Source: <a href=\"https://irecusa.org/programs/solar-jobs-census/\" target=\"_blank\">IREC</a>'\n      // },\n\n      yAxis: {\n        tickInterval: 10000000,\n        title: {\n          text: \"Number of Employees\",\n        },\n      },\n      tooltip: {\n        formatter: function () {\n          return (\n            \"<b>\" +\n            this.x +\n            \"</b><br/>\" +\n            this.series.name +\n            \": \" +\n            this.y?.toLocaleString(\"en-US\") +\n            \"<br/>\"\n          );\n        },\n      },\n      xAxis: {\n        type: \"category\",\n        categories: xAxis7,\n        crosshair: true,\n        title: {\n          text: \"Quater\",\n        },\n        accessibility: {\n          rangeDescription: xAxis7.toString(),\n        },\n      },\n\n      legend: {\n        align: \"center\",\n        verticalAlign: \"bottom\",\n        layout: \"horizontal\",\n      },\n\n      plotOptions: {\n        series: {\n          label: {\n            connectorAllowed: false,\n          },\n        },\n      },\n\n      series: [\n        {\n          name: \"Total Planned\",\n          data: locSUBKRecRevTotalPlanned,\n        },\n        {\n          name: \"Total Realised\",\n          data: locSUBKRecRevTotalRealised,\n        },\n        {\n          name: \"UK Planned\",\n          data: locSUBKRecRevUKPlanned,\n        },\n        {\n          name: \"UK Realised\",\n          data: locSUBKRecRevUKRealised,\n        },\n        {\n          name: \" US Planned\",\n          data: locSUBKRecRevUSPlanned,\n        },\n        {\n          name: \"US Realised\",\n          data: locSUBKRecRevUSRealised,\n        },\n        {\n          name: \"India Planned\",\n          data: locSUBKRecRevIndiaPlanned,\n        },\n        {\n          name: \" India Realised\",\n          data: locSUBKRecRevIndiaRealised,\n        },\n        {\n          name: \"Germany Planned\",\n          data: locSUBKRecRevGermanyPlanned,\n        },\n        {\n          name: \"Germany Realised\",\n          data: locSUBKRecRevGermanyRealised,\n        },\n        {\n          name: \"Canada Planned\",\n          data: locSUBKRecRevCanadaPlanned,\n        },\n        {\n          name: \"Canada Realised\",\n          data: locSUBKRecRevCanadaRealised,\n        },\n      ],\n\n      responsive: {\n        rules: [\n          {\n            condition: {\n              maxWidth: 500,\n            },\n            chartOptions: {\n              legend: {\n                layout: \"horizontal\",\n                align: \"center\",\n                verticalAlign: \"bottom\",\n              },\n            },\n          },\n        ],\n      },\n    };\n    setLocSUBKRecRev(chartData7);\n  };\n\n  // const handleTableData = () => {\n  //     let headerTitles = scoreCardDataPayload.viewby == \"cust\" ? [\"Rank\", \"Project\", \"Planned\", \"Realised\", \"GM\", \"GM%\"] : [\"Rank\", \"Customer\", \"Realised\"];\n  //     let headerTitlesKeys = [];\n  //     const filteredData = historicalTrendData.custRecRevTable.filter(item => item.lvl !== \"0\");\n  //     const groupedData = filteredData.reduce((groups, item) => {\n  //         const { cat, ...rest } = item;\n  //         if (!groups[cat]) {\n  //             groups[cat] = [];\n  //         }\n  //         groups[cat].push(rest);\n  //         return groups;\n  //     }, {});\n  //     console.log(groupedData)\n\n  //     setDisplayTableData(() => {\n\n  //         return historicalTrendData.custRecRevTable?.map((d, index) => {\n  //             let headerData = []\n  //             headerTitles.forEach((element, index1) => {\n  //                 // console.log(index, index1, d[\"cat\"], \"d[headerTitlesKeys[index1]]\")\n\n  //                 if (d.id == -1) {\n  //                     headerTitlesKeys.push(Object.keys(d).find(key => d[key] === element));\n  //                     headerData.push(<th style={{ textAlign: \"center\", backgroundColor: \"#f4f4f4\", position: \"sticky\", top: 0 }}>{element}</th>);\n  //                 } else {\n  //                     if (headerTitles[index1] == \"Customer\") {\n  //                         headerData.push(<td style={{ textAlign: index1 > 1 && \"right\" || headerTitles[index1] === \"Rank\" && \"center\" }} >{d[headerTitlesKeys[index1]]}</td>);\n  //                     } else {\n  //                         headerData.push(<td style={{ textAlign: index1 > 1 && \"right\" || headerTitles[index1] == \"Rank\" && \"center\" }} >{headerTitles[index1] == \"Rank\" ? index : (headerTitles[index1] != \"Project\") ? `${index1 > 1 ? \"$\" : \"\"}` + parseInt(d[headerTitlesKeys[index1]]).toLocaleString('en-US') : `${index1 > 1 ? \"$\" : \"\"}` + d[headerTitlesKeys[index1]]}</td>);\n  //                     }\n  //                 }\n  //             })\n  //             return (\n  //                 index === 0 ? <><tr><td style={{ textAlign: \"center\", backgroundColor: \"#f4f4f4\", fontWeight: \"bold\" }} colSpan={\"3\"}>{\"2023-Q4\"}</td></tr><tr style={{ backgroundColor: d.color }} >{headerData}</tr></> : <tr style={{ backgroundColor: d.color }} >{headerData}</tr>\n  //             )\n  //         });\n  //     })\n  // }\n  const handleTableData = () => {\n    let headerTitles =\n      scoreCardDataPayload.viewby === \"cust\"\n        ? [\"Rank\", \"Project\", \"Planned\", \"Realised\", \"GM\", \"GM%\"]\n        : [\"Rank\", \"Customer\", \"Realised\"];\n    let headerTitlesKeys = [];\n    console.log(\n      historicalTrendData?.custRecRevTable?.filter((item) => item.lvl == \"0\")\n    );\n    const filteredData = historicalTrendData?.custRecRevTable?.filter(\n      (item) => item.lvl !== \"0\"\n    );\n    const groupedData = filteredData?.reduce((groups, item) => {\n      const { cat, ...rest } = item;\n      if (!groups[cat]) {\n        groups[cat] =\n          scoreCardDataPayload.viewby == \"cust\"\n            ? [\n              {\n                gm: \"GM\",\n                lvl: \"0\",\n                cat: \"Category\",\n                gmperc: \"GM%\",\n                planned: \"Planned\",\n                id: -1,\n                realised: \"Realised\",\n                customer: \"Project\",\n              },\n            ]\n            : [\n              {\n                lvl: \"0\",\n                customer: \"Customer\",\n                id: -1,\n                realised: \"Realised\",\n                cat: \"Category\",\n              },\n            ];\n      }\n      groups[cat].push({ ...rest, cat });\n      return groups;\n    }, {});\n\n    // const headerObj = groupedData[\"Category\"];\n    // groupedData.map((key, value) => {\n    //     if (key !== \"Category\") {\n    //         groupedData[key].unshift(headerObj);\n    //     }\n    // });\n    console.log(groupedData);\n    const tables =\n      groupedData &&\n      Object.keys(groupedData)?.map((key, tableIndex) => {\n        console.log(key);\n        const tableRows = groupedData[key]?.map((d, index) => {\n          let headerData = [];\n          console.log(headerTitles, \"headerTitles\");\n          headerTitles.forEach((element, index1) => {\n            console.log(d[\"cat\"], element, \"d[cat]\");\n            if (d.id == -1) {\n              headerTitlesKeys.push(\n                Object.keys(d).find((key) => d[key] === element)\n              );\n              headerData.push(\n                <th\n                  key={`header-${index1}`}\n                  style={{\n                    textAlign: \"center\",\n                    backgroundColor: \"#f4f4f4\",\n                    position: \"sticky\",\n                    top: 0,\n                  }}\n                >\n                  {element}\n                </th>\n              );\n              console.log(headerTitlesKeys, element);\n            } else {\n              if (headerTitles[index1] === \"Customer\") {\n                headerData.push(\n                  <td\n                    key={`row-${tableIndex}-${index}-${index1}`}\n                    style={{\n                      textAlign:\n                        index1 > 1\n                          ? \"right\"\n                          : headerTitles[index1] === \"Rank\"\n                            ? \"center\"\n                            : \"left\",\n                    }}\n                  >\n                    {d[headerTitlesKeys[index1]]}\n                  </td>\n                );\n              } else {\n                headerData.push(\n                  <td\n                    key={`row-${tableIndex}-${index}-${index1}`}\n                    style={{\n                      textAlign:\n                        index1 > 1\n                          ? \"right\"\n                          : headerTitles[index1] === \"Rank\"\n                            ? \"center\"\n                            : \"left\",\n                    }}\n                  >\n                    {headerTitles[index1] === \"Rank\"\n                      ? index\n                      : headerTitles[index1] !== \"Project\"\n                        ? (index1 > 1 ? \"$\" : \"\") +\n                        parseInt(d[headerTitlesKeys[index1]]).toLocaleString(\n                          \"en-US\"\n                        )\n                        : (index1 > 1 ? \"$\" : \"\") + d[headerTitlesKeys[index1]]}\n                  </td>\n                );\n              }\n            }\n          });\n          console.log(headerData);\n          console.log(groupedData[key]);\n\n          return (\n            <React.Fragment key={`table-${tableIndex}-row-${index}`}>\n              {index === 0 ? (\n                <tr>\n                  <td\n                    style={{\n                      textAlign: \"center\",\n                      backgroundColor: \"#f4f4f4\",\n                      fontWeight: \"bold\",\n                    }}\n                    colSpan={headerTitles.length}\n                  >\n                    {key}\n                  </td>\n                </tr>\n              ) : null}\n              <tr>{headerData}</tr>\n            </React.Fragment>\n          );\n        });\n\n        return (\n          <table\n            key={`table-${tableIndex}`}\n            className=\"mt-3 ml-2 col-5 table table-bordered custtable\"\n          >\n            <tbody>{tableRows}</tbody>\n          </table>\n        );\n      });\n\n    setDisplayTableData(tables);\n  };\n\n  return (\n    <div className=\"col-12\">\n      {Object.entries(historicalTrendData).length != 0 ?\n        <div>\n          <div className=\"col-12 row\">\n            <div className=\"col-6 mt-2 customCard card graph\">\n              <TargetCharts chartData={targetsData} />\n            </div>\n            <div className=\"col-6 mt-2 customCard card graph\">\n              <TargetCharts chartData={practRecRev} />\n            </div>\n          </div>\n          <div className=\"col-12 row\">\n            <div className=\"col-6 mt-2  customCard card graph\">\n              <TargetCharts chartData={locRecRev} />\n            </div>\n            <div className=\"col-6 mt-2  customCard card graph\">\n              <TargetCharts chartData={custCatRecRev} />\n            </div>\n          </div>\n          <div className=\"col-12 row\">\n            <div className=\"col-6 mt-2  customCard card graph\">\n              <TargetCharts chartData={custContRecRev} />\n            </div>\n            <div className=\"col-6 mt-2  customCard card graph\">\n              <TargetCharts chartData={locFTERecRev} />\n            </div>\n          </div>\n          <div className=\"col-12 row\">\n            <div className=\"col-6 mt-2  customCard card graph\">\n              <TargetCharts chartData={locSUBKRecRev} />\n            </div>\n            <div\n              className=\"col-6 mt-2  customCard card graph\"\n              style={{ maxHeight: \"401px\", overflowY: \"auto\" }}\n            >\n              {/* {displayTableData != null ? */}\n              <b className=\"mt-3 ml-3\" style={{ fontSize: \"15px\" }}>\n                {scoreCardDataPayload.viewby == \"cust\"\n                  ? \"Project Realised Revenue Quarter Trend By Top Projects\"\n                  : \"Customer Realised Revenue Quarter Trend By Top Customers \"}\n              </b>\n              {/* <table\n                        className=\"mt-3 ml-3 col-10 table table-bordered custtable\" >\n                        <thead>\n\n                        </thead>\n                        <tbody> */}\n              <div className=\"col-12\">\n                <div className=\"row\">{displayTableData}</div>\n              </div>\n              {/* </tbody>\n\n                    </table> */}\n              {/* : \"\"} */}\n              {/* <customerRecRevTable tableData={historicalTrendData.custRecRevTable} /> */}\n            </div>\n          </div>\n        </div> : \"\"}\n    </div>\n\n  );\n}\n\nexport default HistoricalTrend;\n","import React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./ScoreCard.scss\";\nexport default function EffortVariance({ effortvar }) {\n  const [table, settable] = useState([]);\n\n  useEffect(() => {\n    const table =\n      effortvar?.length > 0 &&\n      effortvar.map((data) => {\n        const conditions = [\n          \"id\",\n          \"prj_status\",\n          \"ct_term\",\n          \"ct_title\",\n          \"prj_compltn\",\n          \"pln_efforts\",\n          \"eac_efforts\",\n          \"pln_gm\",\n          \"eac_gm\",\n          \"critical_risks\",\n          \"high_risks\",\n        ];\n        let tableData = [];\n        const keysArray = [\n          \"project_name\",\n          \"prj_pm_name\",\n          \"var_efforts\",\n          \"var_gm\",\n        ];\n        let num_gm = Number(data.var_gm);\n        let num_effort = Number(data.var_efforts);\n        keysArray.forEach((keys) => {\n          console.log(typeof data[keys], \"-----type of data keys\");\n          !conditions.includes(keys) &&\n            tableData.push(\n              data.id < 0 ? (\n                <th\n                  key={keys}\n                  style={{ textAlign: \"center\", position: \"sticky\", top: 0 }}\n                >\n                  {data[keys]}\n                </th>\n              ) : keys == \"project_name\" ? (\n                <td\n                  className=\"ellipsis\"\n                  data-toggle=\"tooltip\"\n                  style={{ minWidth: \"150px\" }}\n                >\n                  <div className=\" phTableLegends\" style={{ fontSize: \"13px\" }}>\n                    {data.var_gm <= 5 && data.var_efforts <= 5 ? (\n                      <div className=\"legendContainer align left\">\n                        <div className=\"legend green\">\n                          <div className=\"legendCircle\" title=\"Risk\"></div>\n                          <div className=\"legendTxt\"></div>\n                        </div>\n                      </div>\n                    ) : data.var_gm >= 10 || data.var_efforts >= 10 ? (\n                      <div className=\"legendContainer align left\">\n                        <div className=\"legend red\">\n                          <div className=\"legendCircle\" title=\"Risk\"></div>\n                          <div className=\"legendTxt\"></div>\n                        </div>\n                      </div>\n                    ) : (\n                      <div className=\"legendContainer align left\">\n                        <div className=\"legend amber\">\n                          <div className=\"legendCircle\" title=\"Risk\"></div>\n                          <div className=\"legendTxt\"></div>\n                        </div>\n                      </div>\n                    )}\n                    <Link\n                      style={{\n                        whiteSpace: \"nowrap !important\",\n                        overflow: \"hidden\",\n                        textOverflow: \"ellipsis\",\n                      }}\n                      data-toggle=\"tooltip\"\n                      title={data[keys]}\n                      to={`/project/Overview/:${data.id}`}\n                      target=\"_blank\"\n                    >\n                      {data[keys]}\n                    </Link>\n                  </div>\n                </td>\n              ) : keys == \"var_efforts\" ? (\n                <td style={{ fontSize: \"13px\" }}>\n                  {data.var_efforts <= 5 ? (\n                    <div style={{ color: \"green\", textAlign: \"right\" }}>\n                      {num_effort.toFixed(2)}\n                    </div>\n                  ) : data.var_efforts >= 10 ? (\n                    <div style={{ color: \"red\", textAlign: \"right\" }}>\n                      {num_effort.toFixed(2)}\n                    </div>\n                  ) : (\n                    <div style={{ color: \"#ffbf00\", textAlign: \"right\" }}>\n                      {num_effort.toFixed(2)}\n                    </div>\n                  )}\n                </td>\n              ) : keys == \"var_gm\" ? (\n                <td>\n                  {data.var_gm <= 5 ? (\n                    <div\n                      className=\"mr-1\"\n                      style={{ color: \"green\", textAlign: \"right\" }}\n                    >\n                      {num_gm.toFixed(2)}\n                      {console.log(typeof Number(data.var_gm), \"#####type\")}\n                    </div>\n                  ) : data.var_gm >= 10 ? (\n                    <div style={{ color: \"red\", textAlign: \"right\" }}>\n                      {num_gm.toFixed(2)}\n                    </div>\n                  ) : (\n                    <div style={{ color: \"#ffbf00\", textAlign: \"right\" }}>\n                      {num_gm.toFixed(2)}\n                    </div>\n                  )}\n                </td>\n              ) : (\n                <td\n                  key={keys}\n                  className=\"ellipsis\"\n                  data-toggle=\"tooltip\"\n                  style={{ minWidth: \"120px\" }}\n                  title={data[keys]}\n                >\n                  {data[keys]}\n                </td>\n              )\n            );\n        });\n        return (\n          <tr key={data.id} style={{ fontSize: \"13px\" }}>\n            {tableData}\n          </tr>\n        );\n      });\n    settable(table);\n  }, [effortvar]);\n\n  return (\n    <div className=\"col-md-12  customCard card graph darkHeader\">\n      <div className=\"group-content row\">\n        <div className=\"legendContainer\">\n          <span className=\"font-weight-bold\">Efforts/GM Variance :</span>\n          <div className=\"legend green\">\n            <div className=\"legendTxt t\">10 or Above 10</div>\n          </div>\n          <div className=\"legend amber\">\n            <div className=\"legendTxt t\">Btw 5 and 10 </div>\n          </div>\n          <div className=\"legend red\">\n            <div className=\"legendTxt t\">5 or below 5</div>\n          </div>\n          <div className=\"legendContainer\">\n            <span className=\"font-weight-bold\">Risk :</span>\n\n            <div className=\"legend red\">\n              <div className=\"legendCircle \"></div>\n              <div className=\"legendTxt\">Critical above 1 or High above 5</div>\n            </div>\n            <div className=\"legend amber\">\n              <div className=\"legendCircle\"></div>\n              <div className=\"legendTxt\">2-5 High or 1 Critical </div>\n            </div>\n            <div className=\"legend green\">\n              <div className=\"legendCircle \"></div>\n              <div className=\"legendTxt\">No Critical and High below 2 </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div\n        className=\"col-8 pl-2 pr-2 darkHeader\"\n        style={{ maxHeight: \"500px\", overflowY: \"auto\" }}\n      >\n        <table className=\"table table-bordered softSummry csattable\">\n          <thead style={{ fontSize: \"13px\" }}>{table}</thead>\n        </table>\n      </div>\n    </div>\n  );\n}\n","import ScoreCardSearchFilter from \"./ScoreCardSearchFilter\";\nimport Summary from \"./Summary\";\nimport { environment } from \"../../environments/environment\";\nimport { useState, useEffect } from \"react\";\nimport \"./ScoreCard.scss\";\n// import targetJson from \"./target.json\";\n// import scoreCard from \"./ScoreCard.json\";\nimport TargetRealisedPlanned from \"./TargetRealisedPlanned\";\nimport Csat from \"./Csat\";\nimport Risks from \"./Risks\";\nimport ProgressOfsw from \"./ProgressOfsw\";\n// import { performance, targets, locRecRev, practRecRev, prjRecRev, oppRecRev, custCatRecRev, custRecRev, custRecRevTable, custContRecRev, custWOWRecRev, custContRecRevTable, openOpptys, locSUBKRecRev, locFTERecRev, csatProjList, projRisksList, reportRunId } from \"./ScoreCard.json\"\nimport CustomerRealisedRevCategory from \"./CustomerRealisedRevCategory\";\nimport TopCustByRealRev from \"./TopCustByRealRev\";\nimport OpenServicePipeLine from \"./OpenServicePipeLine\";\nimport RealisedRevByContract from \"./RealisedRevByContract\";\nimport PlannedByLocation from \"./PlannedByLocation\";\nimport QBRList from \"./QBRList\";\nimport HistoricalTrend from \"./HistoricalTrend\";\nimport axios from \"axios\";\n// import histroricalTrendData from \"./histroricalTrendData.json\"\nimport EffortVariance from \"./EffortVariance\";\n\nexport default function ScoreCard() {\n  const baseUrl = environment.baseUrl;\n\n  const [scoreCardData, setScoreCardData] = useState({});\n  const [csat, setcsat] = useState([]);\n  const [risk, setrisk] = useState([]);\n  const [qbrList, setqbrList] = useState([]);\n  const [tableFlag, setTableFlag] = useState();\n  const [targetData, setTargetData] = useState([]);\n  const [targetLocationData, setTargetLocationData] = useState([]);\n  const [custRelRevCat, setCustRelRevCat] = useState([]);\n  const [topCustomerByRealRev, setTopCustomerByRealRev] = useState([]);\n  const [cusRecRev, setCusRecRev] = useState([]);\n  const [openOpptys, setOpenOpptys] = useState([]);\n  const [relRevByCon, setRelRevByCon] = useState([]);\n  const [custContRecRevTable, setCustContRecRevTable] = useState([]);\n  const [showHistoricalTrend, setShowHistoricalTrend] = useState(false);\n  const [historicalTrendData, setHistoricalTrendData] = useState({});\n  const [cardSelector, setcardSelector] = useState(\"-1\");\n  const [subKPlanByLoc, setSubKPlanByLoc] = useState({});\n  const [ftePlanByLoc, setFteKPlanByLoc] = useState({});\n  const loggedUserId = localStorage.getItem(\"resId\");\n  const [data, setData] = useState([]);\n  const [dataAccess, setDataAccess] = useState([]);\n  const [effortvar, setEffortvar] = useState([]);\n  const [scoreCradPermission, setScoreCradPermission] = useState([]);\n  const getMenus = () => {\n    axios\n      .get(baseUrl + `/CommonMS/master/getMenus?loggedUserId=${loggedUserId}`)\n      .then((resp) => {\n        const getData = resp.data;\n        setData(getData);\n        // setDataAccess(accessLevel);\n      });\n  };\n\n  useEffect(() => {\n    const revenueVarianceSubMenu = data\n      ?.find((item) => item.display_name === \"Sales\")\n      ?.subMenus.find(\n        (subMenu) => subMenu.display_name === \"Scorecard\"\n      ).userRoles;\n\n    const accessLevel = revenueVarianceSubMenu\n      ? revenueVarianceSubMenu?.includes(\"690\")\n        ? 690\n        : revenueVarianceSubMenu?.includes(\"641\")\n          ? 641\n          : revenueVarianceSubMenu?.includes(\"930\")\n            ? 930\n            : revenueVarianceSubMenu?.includes(\"46\") && 46\n      : null;\n    setDataAccess(accessLevel);\n    setscoreCardDataPayload({\n      ...scoreCardDataPayload,\n      cslIds: accessLevel == 641 ? Number(loggedUserId) + 1 : \"-1\",\n      dpIds: accessLevel == 690 ? Number(loggedUserId) + 1 : \"-1\",\n      // executives: accessLevel == 690 ? \"\" : -2,\n    });\n  }, [data]);\n\n  useEffect(() => {\n    getMenus();\n  }, []);\n  console.log(dataAccess);\n  const [scoreCardDataPayload, setscoreCardDataPayload] = useState({\n    executives: \"-2\",\n    isActive: true,\n    measures: \"-1\",\n    isSearch: true,\n    from: \"2023-10-01\",\n    duration: 1,\n    type: \"cu\",\n    viewby: \"se\",\n    cslIds: -1,\n    dpIds: -1,\n    customerId: -1,\n    isIndividual: false,\n    key: loggedUserId,\n    opptyActType: \"-1\",\n  });\n\n  useEffect(() => {\n    setTargetData(scoreCardData.practRecRev);\n    setTargetLocationData(scoreCardData.locRecRev);\n    setCustRelRevCat(scoreCardData.custCatRecRev);\n    setTopCustomerByRealRev(scoreCardData.custRecRevTable);\n    setCusRecRev(scoreCardData.custRecRev);\n    setOpenOpptys(scoreCardData.openOpptys);\n    setRelRevByCon(scoreCardData.custContRecRev);\n    setCustContRecRevTable(scoreCardData.custContRecRevTable);\n    setHistoricalTrendData(scoreCardData);\n    setSubKPlanByLoc(scoreCardData.locSUBKRecRev);\n    setFteKPlanByLoc(scoreCardData.locFTERecRev);\n    setEffortvar(scoreCardData.effortvar);\n  }, [\n    scoreCardData,\n    targetData,\n    targetLocationData,\n    custRelRevCat,\n    topCustomerByRealRev,\n    cusRecRev,\n    openOpptys,\n    relRevByCon,\n    custContRecRevTable,\n    historicalTrendData,\n    subKPlanByLoc,\n    ftePlanByLoc,\n    effortvar,\n  ]);\n\n  return (\n    <div className=\"col-lg-12 col-md-12 col-sm-12 no-padding\">\n      {/* <div className=\"pageHeading\">Scorecard</div> */}\n      <ScoreCardSearchFilter\n        setScoreCardData={setScoreCardData}\n        setscoreCardDataPayload={setscoreCardDataPayload}\n        scoreCardDataPayload={scoreCardDataPayload}\n        setqbrList={setqbrList}\n        setrisk={setrisk}\n        scoreCradPermission={scoreCradPermission}\n        setcsat={setcsat}\n        // setHistoricalTrendData={setHistoricalTrendData}\n        setShowHistoricalTrend={setShowHistoricalTrend}\n        setcardSelector={setcardSelector}\n      />\n\n      {/* {console.log(historicalTrendData, cardSelector, \"in scorecard\")} */}\n      {!showHistoricalTrend ? (\n        <div>\n          {(cardSelector.includes(\"-1\") || cardSelector.includes(\"1\")) &&\n            scoreCardData.targets?.length > 0 ? (\n            <div>\n              <Summary scoreCardData={scoreCardData} />\n            </div>\n          ) : (\n            \"\"\n          )}\n\n          <div\n            className=\"col-12 mr-0 pr-0 row\"\n            style={{ margin: \"0px\", padding: \"0px\" }}\n          >\n            <div className=\"col-6 pl-0\">\n              {(cardSelector.includes(\"-1\") || cardSelector.includes(\"2\")) &&\n                targetData?.length > 0 ? (\n                <div>\n                  {\" \"}\n                  <TargetRealisedPlanned\n                    targetData={targetData}\n                    type={\"Practice\"}\n                  />{\" \"}\n                </div>\n              ) : (\n                \"\"\n              )}\n            </div>\n            <div className=\"col-6 pr-0\">\n              {(cardSelector.includes(\"-1\") || cardSelector.includes(\"2\")) &&\n                targetLocationData?.length > 0 ? (\n                <div>\n                  <TargetRealisedPlanned\n                    targetData={targetLocationData}\n                    type={\"Location\"}\n                  />{\" \"}\n                </div>\n              ) : (\n                \"\"\n              )}\n            </div>\n          </div>\n          <div\n            className=\"col-12 mr-0 pr-0 row\"\n            style={{ margin: \"0px\", padding: \"0px\" }}\n          >\n            <div className=\"col-6 pl-0\">\n              {(cardSelector.includes(\"-1\") || cardSelector.includes(\"3\")) &&\n                custRelRevCat?.length > 0 ? (\n                <div>\n                  <CustomerRealisedRevCategory custRelRevCat={custRelRevCat} />\n                </div>\n              ) : (\n                \"\"\n              )}\n            </div>\n            <div className=\"col-6 pr-0\">\n              {(cardSelector.includes(\"-1\") || cardSelector.includes(\"3\")) &&\n                topCustomerByRealRev?.length > 0 &&\n                cusRecRev?.length > 0 ? (\n                <div>\n                  <TopCustByRealRev\n                    topCustomerByRealRev={topCustomerByRealRev}\n                    cusRecRev={cusRecRev}\n                    scoreCardDataPayload={scoreCardDataPayload}\n                  />\n                </div>\n              ) : (\n                \"\"\n              )}\n            </div>\n          </div>\n          <div className=\"col-md-12 no-padding\">\n            <div className=\"col-md-12 no-padding\">\n              {(cardSelector.includes(\"-1\") || cardSelector.includes(\"4\")) &&\n                custContRecRevTable?.length > 0 ? (\n                <div>\n                  <RealisedRevByContract\n                    custContRecRev={relRevByCon}\n                    custContRecRevTable={custContRecRevTable}\n                    type={\"Practice\"}\n                  />{\" \"}\n                </div>\n              ) : (\n                \"\"\n              )}\n            </div>\n          </div>\n          <div className=\"col-md-12 no-padding\">\n            <div className=\"col-md-12 no-padding\">\n              {(cardSelector.includes(\"-1\") || cardSelector.includes(\"5\")) &&\n                (ftePlanByLoc?.length > 0 || subKPlanByLoc?.length > 0) ? (\n                <div>\n                  <PlannedByLocation\n                    ftePlanByLoc={ftePlanByLoc}\n                    subKPlanByLoc={subKPlanByLoc}\n                  />{\" \"}\n                </div>\n              ) : (\n                \"\"\n              )}\n            </div>\n          </div>\n          {(cardSelector.includes(\"-1\") || cardSelector.includes(\"6\")) &&\n            scoreCardData.custWOWRecRev?.length > 0 ? (\n            <ProgressOfsw scoreCardData={scoreCardData} />\n          ) : (\n            \"\"\n          )}\n          {(cardSelector.includes(\"-1\") || cardSelector.includes(\"8\")) &&\n            scoreCardData.csatProjList?.length > 0 ? (\n            <Csat scoreCardData={scoreCardData.csatProjList} />\n          ) : (\n            \"\"\n          )}\n          {(cardSelector.includes(\"-1\") || cardSelector.includes(\"9\")) &&\n            scoreCardData.risks?.length > 0 ? (\n            <Risks risk={scoreCardData.risks} />\n          ) : (\n            \"\"\n          )}\n\n          <div className=\"col-md-12 no-padding\">\n            {(cardSelector.includes(\"-1\") || cardSelector.includes(\"10\")) &&\n              scoreCardData.qbr?.length > 0 ? (\n              <QBRList qbrList={scoreCardData.qbr} />\n            ) : (\n              \"\"\n            )}\n          </div>\n\n          <div className=\"col-md-12 no-padding\">\n            {(cardSelector.includes(\"-1\") || cardSelector.includes(\"9\")) &&\n              effortvar?.length > 0 ? (\n              <EffortVariance effortvar={effortvar} />\n            ) : (\n              \"\"\n            )}\n          </div>\n\n          <div className=\"col-md-12 no-padding\">\n            {(cardSelector.includes(\"-1\") || cardSelector.includes(\"7\")) &&\n              openOpptys?.length > 0 ? (\n              <OpenServicePipeLine openOpptys={openOpptys} />\n            ) : (\n              \"\"\n            )}\n          </div>\n        </div>\n      ) : (\n        <div>\n          <HistoricalTrend\n            historicalTrendData={historicalTrendData}\n            scoreCardDataPayload={scoreCardDataPayload}\n          />\n        </div>\n      )}\n      {/* {console.log(\n        historicalTrendData,\n        \"historicalTrendData\",\n        scoreCardData,\n        \"scoreCardData\"\n      )} */}\n    </div>\n  );\n}\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 2C6.49 2 2 6.49 2 12s4.49 10 10 10 10-4.49 10-10S17.51 2 12 2zm-1 8V7c0-.55.45-1 1-1s1 .45 1 1v3h1.79c.45 0 .67.54.35.85l-2.79 2.79c-.2.2-.51.2-.71 0l-2.79-2.79c-.31-.31-.09-.85.36-.85H11zm5 7H8c-.55 0-1-.45-1-1s.45-1 1-1h8c.55 0 1 .45 1 1s-.45 1-1 1z\"\n}), 'DownloadForOfflineRounded');\nexports.default = _default;"],"names":["ScoreCardSearchFilter","setScoreCardData","setqbrList","setrisk","scoreCradPermission","setcsat","setShowHistoricalTrend","setHistoricalTrendData","setcardSelector","scoreCardDataPayload","setscoreCardDataPayload","useState","selectedSE","setselectedSE","dataAccess","setDataAccess","salesEx","setSalesEx","d","Date","console","log","year","getFullYear","month1","getMonth","c","moment","format","currentDate","month","startDate","setStartDate","currentQuarter","add","subtract","selectedSEVal","setSelectedSEVal","duration","setduration","visiblepopup","setVisiblepopup","viewBy","setViewBy","salesExecutiveDropdown","setsalesExecutiveDropdown","measuresDropdownObject","value","label","measuresDropdown","setmeasuresDropdown","errorMsg","seterrorMsg","item","grpId","setGrpId","dispSF","setDispSF","cslMultiselectDropdown","setcslMultiselectDropdown","selectedCSL","setselectedCSL","dpMultiselectDropdown","setdpMultiselectDropdown","selectedDP","setselectedDP","customer","setCustomer","localSE","localStorage","getItem","JSON","parse","isIndividualChecked","transformedData","map","Array","isArray","obj","id","text","type","parent","salesPersonName","parseInt","status","li_attr","sestatus","filteredData","filter","index","findIndex","o","length","idArray","filteredIds","flattenedIds","flat","salesPersonNames","salesPersonNamesBulk","join","salesPersonIds","reportRunId","setreportRunId","accessData","setAccessData","visible","setVisible","FaChevronCircleUp","cheveronIcon","setCheveronIcon","ref","useRef","abortController","searching","setsearching","sFOwnerDivisionsDropdown","setSFOwnerDivisionsDropdown","divExecutive","setDivExecutive","selectesFOwnerDivison","setselectesFOwnerDivison","division","setDivision","sediv","setSediv","loggedUserId","routes","setRoutes","useEffect","getMenus","axios","method","url","baseUrl","then","resp","revenueForcastSubMenu","data","find","display_name","subMenus","subMenu","accessLevel","access_level","userRoles","includes","response","custom","seenPersonNames","Set","forEach","e","has","PersonName","cslObj","push","catch","err","menu","onFilterChange","prevState","setHirarchy","environment","ArrowRenderer","expanded","className","generateDropdownLabel","selectedOptions","allOptions","selectedValues","option","allValues","SelectSEData","useSelector","state","selectedSEState","directSETreeData","getscoreCardData","measures","current","AbortController","setTimeout","valid","GlobalValidation","loaderTime","payload","executives","signal","clearTimeout","FaChevronCircleDown","dropdownOptions","isActive","val","lkupName","owner_Division","ScreenBreadcrumbs","currentScreenName","GlobalHelp","pdfname","name","onClick","for","style","cursor","onChange","target","options","selectedIndex","ele","hasSelectAll","isLoading","valueRenderer","shouldToggleOnHover","disableSearch","disabled","s","selected","toString","ReactSearchAutocomplete","items","onSelect","prevProps","customerId","showIcon","onClear","prev","placeholder","maxDate","endOf","toDate","selectMonth","customMonth","_d","selectedYear","currentYear","dateFormat","showQuarterYearPicker","defaultValue","borderTop","SelectSEDialogBox","Loader","handleAbort","abort","TargetTable","targets","xAxis","realised","variance","calls","planned","table","settable","summaryChart","setsummaryChart","tableRenderer","Object","keys","tableData","parseFloat","Math","abs","textAlign","title","toLocaleString","split","chart","width","options3d","enabled","alpha","beta","viewDistance","depth","fontSize","categories","labels","gridLineWidth","yAxis","allowDecimals","min","tooltip","formatter","this","x","series","y","plotOptions","column","stacking","credits","legend","itemStyle","color","stack","legendIndex","responsive","rules","condition","maxWidth","highcharts","Highcharts","backgroundColor","padding","size","SoftwareSummary","softdata","oppRecRev","position","top","href","rel","highcharts3d","ServiceSummary","setexpanded","onclickchanger","allExecutives","prjRecRev","lvl","toggler","prosicon","undefined","display","exec","Summary","scoreCardData","require","props","chartData","targetData","categoryData","setChartData","displayTableData","setDisplayTableData","categoryTempData","upside","i","category","exporting","buttons","contextButton","symbolStrokeWidth","symbolFill","symbolStroke","HandleChartData","headerTitles","headerTitlesKeys","oIndex","header","element","key","HandleTableData","maxHeight","overflowY","Csat","table1","to","obj_id","Risks","risk","conditions","ProgressOfsw","yServCreated","ySwCreated","yServClosed","ySwClosed","yServLost","ySwLost","yServCreatedCnt","ySwCreatedCnt","yServClosedCnt","ySwClosedCnt","yServLostCnt","ySwLostCnt","servCreated","swCreated","servClosed","SwClosed","servLost","SwLost","custWOWRecRev","colSpan","yAxisAmt","description","lang","thousandsSep","decimalPoint","crosshair","connectorAllowed","overflowX","custRelRevCat","existingAndExisting","existingAndNew","newAndNew","chartDataProp","setChartDataProp","handleChartData","displayData","total","plotBackgroundColor","plotBorderWidth","plotShadow","point","round","percentage","accessibility","valueSuffix","pie","allowPointSelect","shadow","startAngle","colorByPoint","dataLabels","distance","topCustomerByRealRev","cusRecRev","top1","top2to5","top6to10","top11to20","rest","handleTableData","viewby","headerData","index1","revenue","openOpptys","dispData","setDispData","filterSubHeading","handleDisplaySubData","clsNm","sales_executive","elements","document","getElementsByClassName","classList","contains","remove","openOpptysTmp","subHeaderTitles","subHeaderTitlesKeys","tdData","headerIndex","subDataIndex","subHeaderIndex","minWidth","RealisedRevByContract","custContRecRev","custContRecRevTable","bms","bne","bsa","btm","fp","nbe","custContRecRevTableData","custContRecRevArr","ia","some","el","rowSpan","Fragment","FiChevronRight","expCollapse","replaceAll","contterm","overflow","FETPlannedByLocation","ftePlanByLoc","SubKPlannedByLocation","subKPlanByLoc","PlannedByLocation","margin","QBRListData","serviceTableData","qbrList","align","DownloadForOfflineRounded","historicalTrendData","targetsData","setTargetsData","practRecRev","setPractRecRev","locRecRev","setLocRecRev","custCatRecRev","setCustCatRecRev","setCustContRecRev","locSUBKRecRev","setLocSUBKRecRev","locFTERecRev","setLocFTERecRev","handleChartsData","targetTotalTargets","targetTotalRealised","targetServiceTarget","targetServiceRealised","targetSoftwareTarget","targetSoftwareRealised","targetRangeDescription","xAxis1","qrtr","substring","chartData1","tickInterval","rangeDescription","verticalAlign","layout","chartOptions","pracRecTotalTargets","pracRecTotalRealised","pracRecDACSTarget","pracRecDACSRealised","pracRecIMATarget","pracRecIMARealised","pracRecQATATargets","pracRecQATARealised","pracRecProlificsProductsTargets","pracRecProlificsProductsRealised","pracRecRangeDescription","xAxis2","chartData2","locRecrevTotalTargets","locRecrevTotalRealised","locRecrevUKTarget","locRecrevUKRealised","locRecrevUSTarget","locRecrevUSRealised","locRecrevIndiaTargets","locRecrevIndiaRealised","locRecrevGermanyTargets","locRecrevGermanyRealised","locRecrevCanadaTargets","locRecrevCanadaRealised","locRecrevRangeDescription","xAxis3","chartData3","custCatRecRevExistingnExistingRealised","custCatRecRevExistingnNewRealised","custCatRecRevNewnNewRealised","custCatRecRevRangeDescription","xAxis4","chartData4","custContRecRevBMSRealised","custContRecRevBNERealised","custContRecRevBSARealised","custContRecRevBTMRealised","custContRecRevFPRealised","custContRecRevRangeDescription","xAxis5","chartData5","locFTERecRevTotalPlanned","locFTERecRevTotalRealised","locFTERecRevUKPlanned","locFTERecRevUKRealised","locFTERecRevUSPlanned","locFTERecRevUSRealised","locFTERecRevIndiaPlanned","locFTERecRevIndiaRealised","locFTERecRevGermanyPlanned","locFTERecRevGermanyRealised","locFTERecRevCanadaPlanned","locFTERecRevCanadaRealised","locFTERecRevRangeDescription","xAxis6","chartData6","locSUBKRecRevTotalPlanned","locSUBKRecRevTotalRealised","locSUBKRecRevUKPlanned","locSUBKRecRevUKRealised","locSUBKRecRevUSPlanned","locSUBKRecRevUSRealised","locSUBKRecRevIndiaPlanned","locSUBKRecRevIndiaRealised","locSUBKRecRevGermanyPlanned","locSUBKRecRevGermanyRealised","locSUBKRecRevCanadaPlanned","locSUBKRecRevCanadaRealised","locSUBKRecRevRangeDescription","xAxis7","chartData7","custRecRevTable","groupedData","reduce","groups","cat","gm","gmperc","tables","tableIndex","tableRows","fontWeight","entries","EffortVariance","effortvar","num_gm","Number","var_gm","num_effort","var_efforts","whiteSpace","textOverflow","toFixed","ScoreCard","setTargetData","targetLocationData","setTargetLocationData","setCustRelRevCat","setTopCustomerByRealRev","setCusRecRev","setOpenOpptys","relRevByCon","setRelRevByCon","setCustContRecRevTable","showHistoricalTrend","cardSelector","setSubKPlanByLoc","setFteKPlanByLoc","setData","setEffortvar","revenueVarianceSubMenu","cslIds","dpIds","getData","isSearch","from","isIndividual","opptyActType","custRecRev","csatProjList","risks","qbr","_interopRequireDefault","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx"],"sourceRoot":""}