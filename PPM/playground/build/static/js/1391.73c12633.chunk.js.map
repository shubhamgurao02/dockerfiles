{"version":3,"file":"static/js/1391.73c12633.chunk.js","mappings":"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","sources":["views/TimeAndExpenses/FillTimesheets.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport {\n  FaChevronCircleDown,\n  FaChevronCircleUp,\n  FaSearch,\n} from \"react-icons/fa\";\nimport { BiCheck } from \"react-icons/bi\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport moment from \"moment\";\nimport { CCollapse } from \"@coreui/react\";\nimport { environment } from \"../../environments/environment\";\nimport { IoWarningOutline } from \"react-icons/io5\";\nimport GlobalCancel from \"../ValidationComponent/GlobalCancel\";\nimport axios from \"axios\";\nimport GlobalValidation from \"../ValidationComponent/GlobalValidation\";\nimport Loader from \"../Loader/Loader\";\nimport { FaSave } from \"react-icons/fa\";\nimport { WindowSharp } from \"@mui/icons-material\";\nimport { Column } from \"ag-grid-community\";\nimport { DataTable } from \"primereact/datatable\";\nimport { VscSave } from \"react-icons/vsc\";\nimport { ColumnGroup } from \"primereact/columngroup\";\nimport { Row } from \"primereact/row\";\nimport GlobalHelp from \"../PrimeReactTableComponent/GlobalHelp\";\nimport ScreenBreadcrumbs from \"../Common/ScreenBreadcrumbs\";\nfunction FillTimesheets() {\n  const [dataTime, setDataTime] = useState([]);\n  const [successfullymsg, setSuccessfullymsg] = useState(false);\n  const [successmsg, setSuccessmsg] = useState(false);\n\n  const [visible, setVisible] = useState(false);\n  const [cheveronIcon, setCheveronIcon] = useState(FaChevronCircleUp);\n  const [ProjectName, setProjectName] = useState([]);\n  const [hrs, setHrs] = useState(\"\");\n  const [ResourceN, setResourceN] = useState([]);\n  const [TaskN, setTaskN] = useState([]);\n  const [projectValue, setprojectValue] = useState([]);\n\n  const HelpPDFName = \"PMOTimesheet.pdf\";\n  const Headername = \"Fill Timesheets Help\";\n  const [ResourceName, setResourceName] = useState([]);\n  const [taskName, setTASKName] = useState([]);\n  const [validationMessage, setValidationMessage] = useState(false);\n  const [validation, setValidation] = useState(false);\n  const [taskvalidation, setTaskValidation] = useState(false);\n\n  const [target, setTarget] = useState([]);\n\n  const [routes, setRoutes] = useState([]);\n  let textContent = \"Time & Expenses\";\n  let currentScreenName = [\"Fill Timesheets\"];\n\n  const [loaderState, setLoaderState] = useState(false);\n  const [searching, setSearching] = useState(false);\n  const [timedata, setTimeData] = useState({});\n  const initialValue1 = {};\n  const [tabledata, settabledata] = useState(initialValue1);\n  const now = new Date();\n  const quarter = now.getMonth();\n  const year = now.getFullYear();\n  const dd = new Date(year, quarter - 11);\n  let rows = 25;\n  const abortController = useRef(null);\n\n  const [date, SetDate] = useState(moment(moment().startOf(\"month\"))._d);\n  const ref = useRef([]);\n\n  const initialValue = {\n    FromDate: moment(date).format(\"yyyy-MM-DD\"),\n    // prj_id: \"\",\n    // res_id: \"\",\n    // task_id: \"\",\n  };\n  const baseUrl = environment.baseUrl;\n  const loggedUserId = localStorage.getItem(\"resId\");\n  console.log(loggedUserId);\n\n  const [formData, setFormData] = useState(initialValue);\n  const handleChange = (e) => {\n    const { id, value } = e.target;\n    setTaskValidation(true);\n    setTASKName();\n    setResourceN(value);\n  };\n  const handleChange1 = (e) => {\n    const { id, value } = e.target;\n    setTaskN(value);\n\n    // setFormData((prevVal) => ({ ...prevVal, [\"task_id\"]: value }));\n  };\n\n  const [dataAccess, setDataAccess] = useState([]);\n\n  console.log(dataAccess);\n\n  const getMenus = () => {\n    // setMenusData\n    axios({\n      method: \"GET\",\n      url: baseUrl + `/CommonMS/master/getMenus?loggedUserId=${loggedUserId}`,\n    }).then((resp) => {\n      let data = resp.data;\n\n      data.forEach((item) => {\n        if (item.display_name === textContent) {\n          setRoutes([item]);\n        }\n      });\n      const TMExpensesSubMenu = data\n        .find((item) => item.display_name === \"Time & Expenses\")\n        .subMenus.find((subMenu) => subMenu.display_name === \"Fill Timesheets\");\n\n      // Extract the access_level value\n      const accessLevel = TMExpensesSubMenu\n        ? TMExpensesSubMenu.userRoles.includes(\"690\")\n          ? 690\n          : TMExpensesSubMenu.userRoles.includes(\"641\")\n          ? 641\n          : TMExpensesSubMenu.userRoles.includes(\"46\")\n          ? 46\n          : TMExpensesSubMenu.userRoles.includes(\"930\") && 930\n        : null;\n\n      setDataAccess(accessLevel);\n\n      console.log(accessLevel);\n\n      if (accessLevel == 930) {\n        axios\n          .get(\n            baseUrl +\n              `/CommonMS/master/getProjectsforAE?loggedUserId=${loggedUserId}`\n          )\n          .then((Response) => {\n            let data = Response.data;\n            setProjectName(data);\n          })\n          .catch((error) => console.log(error));\n      } else if (accessLevel == 641 || accessLevel == 690) {\n        axios\n          .get(\n            baseUrl +\n              `/ProjectMS/project/getProjectsbyDp?loggedUserId=${loggedUserId}`\n          )\n          // .then((Response) => {\n          //   let data = Response.data;\n          //   setProjectName(data);\n          // })\n          .then((response) => {\n            var resp = response.data;\n            resp.push({ id: \"-1\", name: \"<<ALL>>\" });\n            setProjectName(resp);\n          })\n          .catch((error) => console.log(error));\n      } else if (accessLevel == 46) {\n        axios\n          .get(\n            baseUrl +\n              `/ProjectMS/project/getProjectsForFillTimeSheets?loggedUserId=${loggedUserId}`\n          )\n          // .then((Response) => {\n          //   let data = Response.data;\n          //   setProjectName(data);\n          // })\n          .then((response) => {\n            var resp = response.data;\n            resp.push({ id: \"-1\", name: \"<<ALL>>\" });\n            setProjectName(resp);\n          })\n          .catch((error) => console.log(error));\n      } else {\n        axios\n          .get(baseUrl + `/timeandexpensesms/getProjectsForAdmin`)\n          .then((Response) => {\n            let data = Response.data;\n            setProjectName(data);\n          })\n          .catch((error) => console.log(error));\n      }\n    });\n  };\n\n  // const getProjectName = () => {\n  //   console.log(dataAccess, \"dataAccess\");\n\n  //   if (dataAccess == 909) {\n  //     axios\n  //       .get(baseUrl + `/CommonMS/master/getProjectsforAE?loggedUserId=${loggedUserId}`)\n  //       .then((Response) => {\n  //         let data = Response.data;\n  //         setProjectName(data);\n  //       })\n  //       .catch((error) => console.log(error));\n  //   }\n  //   else if (dataAccess == 641 || dataAccess == 690) {\n  //     axios\n  //       .get(\n  //         baseUrl +\n  //         `/ProjectMS/project/getProjectsbyDp?loggedUserId=${loggedUserId}`\n  //       )\n  //       // .then((Response) => {\n  //       //   let data = Response.data;\n  //       //   setProjectName(data);\n  //       // })\n  //       .then((response) => {\n  //         var resp = response.data;\n  //         resp.push({ id: \"-1\", name: \"<<ALL>>\" });\n  //         setProjectName(resp);\n  //       })\n  //       .catch((error) => console.log(error));\n  //   }\n  //   else {\n  //     axios\n  //       .get(baseUrl + `/timeandexpensesms/getProjectsForAdmin`)\n  //       .then((Response) => {\n  //         let data = Response.data;\n  //         setProjectName(data);\n  //       })\n  //       .catch((error) => console.log(error));\n  //   }\n  // };\n  const getResourceName = () => {\n    if (projectValue != 0) {\n      axios\n        .get(baseUrl + `/timeandexpensesms/getResources?PrjId=${projectValue}`)\n        .then((Response) => {\n          let data = Response.data;\n          setResourceName(data);\n        })\n        .catch((error) => console.log(error));\n    }\n  };\n  const getTASKName = () => {\n    if (ResourceN != 0) {\n      axios\n        .get(\n          baseUrl +\n            `/timeandexpensesms/getTaskList?resId=${ResourceN}&PrjId=${projectValue}&fromdt=${formData.FromDate}`\n        )\n        .then((Response) => {\n          let data = Response.data;\n          setTASKName(data);\n        })\n        .catch((error) => console.log(error));\n    }\n  };\n  useEffect(() => {\n    // getProjectName();\n    getResourceName();\n    getTASKName();\n  }, [\n    projectValue,\n    formData.FromDate,\n    ResourceN,\n    timedata,\n    dataTime,\n    dataAccess,\n  ]);\n\n  useEffect(() => {\n    getMenus();\n  }, []);\n\n  const getData = () => {\n    let valid = GlobalValidation(ref);\n\n    axios\n      .post(\n        baseUrl +\n          `/timeandexpensesms/getTimesheetTable?resId=${ResourceN}&PrjId=${projectValue}&fromdt=${formData.FromDate}&taskId=${TaskN}`\n      )\n      .then((res) => {\n        const GetData = res.data;\n        for (let i = 0; i < GetData.length; i++) {\n          GetData[i][\"SNo\"] = i + 1;\n          GetData[i][\"createdAt\"] =\n            GetData[i][\"createdAt\"] == null\n              ? \"\"\n              : moment(GetData[i][\"createdAt\"]).format(\"DD-MM-YYYY HH:mm:ss\");\n        }\n\n        console.log(GetData);\n        setDataTime(GetData);\n\n        // setTimeout(() => {\n        setLoaderState(false);\n        setSearching(true);\n        // }, 2000);\n\n        !valid && setVisible(!visible);\n        visible\n          ? setCheveronIcon(FaChevronCircleUp)\n          : setCheveronIcon(FaChevronCircleDown);\n        settabledata();\n      })\n      .catch((error) => {});\n  };\n\n  const handleClick = () => {\n    GlobalCancel(ref);\n\n    let valid = GlobalValidation(ref);\n\n    if (valid) {\n      {\n        setValidationMessage(true);\n      }\n      return;\n    }\n\n    setLoaderState(false);\n    abortController.current = new AbortController();\n    setSearching(false);\n    setValidationMessage(false);\n\n    getData();\n  };\n  const topRef = useRef(null);\n\n  const handleConfirm = (e) => {\n    if (\n      tabledata == undefined ||\n      tabledata == null ||\n      tabledata == {} ||\n      hrs === \"\" ||\n      hrs == 0 ||\n      (hrs >= 0 && hrs >= 25)\n    ) {\n      setValidation(true);\n      window.scrollTo({ top: 0, behavior: \"smooth\" }); // Scroll to the top of the page\n      setTimeout(() => {\n        setValidation(false);\n      }, 6000);\n    } else {\n      setTarget(e.target.value);\n\n      setValidation(false);\n\n      let data = [];\n      Object.keys(tabledata).forEach((ele) => {\n        const obj = {};\n        obj[\"timesheetDt\"] = ele;\n        obj[\"enteredHours\"] = Math.round(tabledata[ele]);\n        obj[\"projectId\"] = projectValue;\n        obj[\"projectTaskId\"] = TaskN;\n        obj[\"resource_id\"] = ResourceN;\n        obj[\"approver_notes\"] = \"\";\n        obj[\"typStatusId\"] = 174;\n\n        obj[\"loggedId\"] = ResourceN;\n\n        obj[\"updatedById\"] = ResourceN;\n\n        data.push(obj);\n      });\n\n      axios({\n        method: \"post\",\n        url: baseUrl + `/administrationms/timeSheet/saveTimesheet`,\n        data: data,\n      }).then(function (res) {\n        var resp = res.data;\n        getData();\n        setLoaderState(false);\n        setSearching(false);\n        setTimeout(() => {\n          setLoaderState(false);\n          setSearching(true);\n        }, 5000);\n        settabledata();\n\n        setSuccessfullymsg(true);\n        window.scrollTo({ top: 0, behavior: \"smooth\" }); // Scroll to the top of the page\n        setTimeout(() => {\n          setSuccessfullymsg(false);\n        }, 3000);\n      });\n    }\n  };\n  const handleConfirmSave = (e) => {\n    setTarget(e.target.value);\n    if (\n      tabledata == undefined ||\n      tabledata == null ||\n      tabledata == {} ||\n      hrs === \"\" ||\n      hrs == 0 ||\n      (hrs >= 0 && hrs >= 25)\n    ) {\n      setValidation(true);\n      window.scrollTo({ top: 0, behavior: \"smooth\" }); // Scroll to the top of the page\n\n      setTimeout(() => {\n        setValidation(false);\n      }, 6000);\n    } else {\n      setValidation(false);\n      let data = [];\n      Object.keys(tabledata).forEach((ele) => {\n        const obj = {};\n        obj[\"timesheetDt\"] = ele;\n        obj[\"enteredHours\"] = tabledata[ele];\n        obj[\"projectId\"] = projectValue;\n        obj[\"projectTaskId\"] = TaskN;\n        obj[\"resource_id\"] = ResourceN;\n        obj[\"approver_notes\"] = \"\";\n        obj[\"typStatusId\"] = 173;\n\n        obj[\"loggedId\"] = ResourceN;\n\n        obj[\"updatedById\"] = ResourceN;\n\n        data.push(obj);\n      });\n\n      axios({\n        method: \"post\",\n        url: baseUrl + `/administrationms/timeSheet/saveTimesheet`,\n        data: data,\n      }).then(function (res) {\n        var resp = res.data;\n\n        getData(resp);\n        settabledata();\n        setSuccessmsg(true);\n        window.scrollTo({ top: 0, behavior: \"smooth\" }); // Scroll to the top of the page\n\n        setTimeout(() => {\n          setSuccessmsg(false);\n        }, 3000);\n      });\n    }\n  };\n  const onchange = (e, rowData) => {\n    setHrs(e);\n\n    if (e === \"\" || (e >= 0 && e <= 24)) {\n      settabledata((prev) => ({\n        ...prev,\n        [rowData.timesheet_dt]: e,\n      }));\n    }\n  };\n\n  const represent = (rowData) => {\n    return (\n      <div align=\"center\">\n        {moment(rowData.timesheet_dt).format(\"DD-MMM-yyyy\")}\n      </div>\n    );\n  };\n  const representComments = (rowData) => {\n    return (\n      <div align=\"center\">\n        {rowData.typ_status == 173 ? (\n          <form>\n            <input\n              id=\"hours\"\n              disabled\n              className=\"approvedHrs\"\n              value={Math.round(rowData.hours)}\n            />\n          </form>\n        ) : rowData.typ_status == 172 ? (\n          <input\n            // disabled={\n            //   dataAccess === 1000 || dataAccess === 100 || dataAccess === 46\n            //     ? false\n            //     : true\n            // }\n            id=\"hours\"\n            style={{ backgroundColor: \"red\", textAlign: \"center\" }}\n            defaultValue={Math.round(rowData.hours)}\n            onChange={(e) => {\n              const roundedValue = Math.round(e.target.value);\n              onchange(roundedValue, rowData);\n            }}\n          />\n        ) : (\n          <input\n            // disabled={\n            //   dataAccess === 1000 || dataAccess === 100 || dataAccess === 46\n            //     ? false\n            //     : true\n            // }\n            id=\"hours\"\n            // maxLength=\"2\"\n            style={{ textAlign: \"center\" }}\n            defaultValue={Math.round(rowData.hours)}\n            onChange={(e) => {\n              const roundedValue = Math.round(e.target.value);\n              onchange(roundedValue, rowData);\n            }}\n          />\n        )}\n      </div>\n    );\n  };\n  const handleAbort = () => {\n    abortController.current && abortController.current.abort();\n    setLoaderState(false);\n  };\n\n  return (\n    <div>\n      <div className=\"col-md-12  mt-2\">\n        {successfullymsg ? (\n          <div className=\"statusMsg success\">\n            <span className=\"errMsg\">\n              <BiCheck />\n              &nbsp;TimeSheet Saved Successfully\n            </span>\n          </div>\n        ) : (\n          \"\"\n        )}\n        {successmsg && target == \"Save\" ? (\n          <div className=\"statusMsg success\">\n            <span className=\"errMsg\">\n              <BiCheck />\n              &nbsp; Timesheet Saved and Approved Successfully\n            </span>\n          </div>\n        ) : (\n          \"\"\n        )}\n        {validationMessage ? (\n          <div className=\"statusMsg error\">\n            {\" \"}\n            <span>\n              {\" \"}\n              <IoWarningOutline /> Please select the valid values for\n              highlighted fields{\" \"}\n            </span>\n          </div>\n        ) : (\n          \"\"\n        )}\n        {validation ? (\n          <div className=\"statusMsg error\" ref={topRef}>\n            {\" \"}\n            <span>\n              {\" \"}\n              <IoWarningOutline /> Please enter the valid hours{\" \"}\n            </span>\n          </div>\n        ) : (\n          \"\"\n        )}\n      </div>\n      <div className=\"col-md-12\">\n        <div className=\"pageTitle\">\n          <div className=\"childOne\"></div>\n          <div className=\"childTwo\">\n            <h2>Fill Timesheets</h2>\n          </div>\n          <div className=\"childThree\"></div>\n        </div>\n      </div>\n      <ScreenBreadcrumbs\n        routes={routes}\n        currentScreenName={currentScreenName}\n      />\n\n      <div className=\"group mb-1 customCard\">\n        <div className=\"col-md-12 collapseHeader\">\n          <h2>Timesheet</h2>\n          <div className=\"helpBtn\">\n            <GlobalHelp pdfname={HelpPDFName} name={Headername} />\n          </div>\n          <div\n            onClick={() => {\n              setVisible(!visible);\n              visible\n                ? setCheveronIcon(FaChevronCircleUp)\n                : setCheveronIcon(FaChevronCircleDown);\n            }}\n          >\n            <span>{cheveronIcon}</span>\n          </div>\n        </div>\n        <CCollapse visible={!visible}>\n          <div className=\"group-content row\">\n            <div className=\"col-md-4 mb-2\">\n              <div className=\"form-group row\">\n                <label className=\"col-5\" htmlFor=\"email-input\">\n                  Month&nbsp;<span className=\"error-text\">*</span>\n                </label>\n                <span className=\"col-1\">:</span>\n                <div className=\"col-6\">\n                  <div\n                    className=\"datepicker\"\n                    ref={(ele) => {\n                      ref.current[0] = ele;\n                    }}\n                  >\n                    <DatePicker\n                      id=\"FromDate\"\n                      selected={date}\n                      minDate={dd}\n                      autoComplete=\"off\"\n                      onChange={(e) => {\n                        SetDate(e);\n                        setFormData((prev) => ({\n                          ...prev,\n                          [\"FromDate\"]: moment(e).format(\"yyyy-MM-DD\"),\n                        }));\n                        setProjectName();\n                        setResourceName();\n                        setTASKName();\n                        setResourceN();\n                        setprojectValue();\n                      }}\n                      dateFormat=\"MMM-yyyy\"\n                      maxDate={now}\n                      showMonthYearPicker\n                      placeholderText=\"Begin Date\"\n                      onKeyDown={(e) => {\n                        e.preventDefault();\n                      }}\n                    />\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            <div className=\"col-md-4 mb-2\">\n              <div className=\"form-group row\">\n                <label className=\"col-5\" htmlFor=\"country-select\">\n                  Projects&nbsp;<span className=\"error-text\">*</span>\n                </label>\n                <span className=\"col-1 p-0\">:</span>\n                <div className=\"col-6\">\n                  <select\n                    ref={(ele) => {\n                      ref.current[1] = ele;\n                    }}\n                    className=\" text\"\n                    name=\"prj_id\"\n                    id=\"prj_id\"\n                    onChange={(e) => {\n                      setprojectValue(e.target.value);\n                      // setFormData((prev) => ({\n                      //   ...prev,\n                      //   [\"prj_id\"]: e.target.value,\n                      // }));\n                      setResourceName();\n                      setTASKName();\n                      setTaskValidation(false);\n                    }}\n                    // onChange={handleChange}\n                  >\n                    <option value=\"\"> &lt;&lt;Please Select&gt;&gt;</option>\n                    {ProjectName?.map((Item) => (\n                      <option key={Item.id} value={Item.id}>\n                        {Item.projectName}\n                      </option>\n                    ))}\n                  </select>\n                  {/* </div> */}\n                </div>\n              </div>\n            </div>\n\n            <div className=\"col-md-4 mb-2\">\n              <div className=\"form-group row\">\n                <label className=\"col-5\" htmlFor=\"country-select\">\n                  Resources&nbsp;<span className=\"error-text\">*</span>\n                </label>\n                <span className=\"col-1\">:</span>\n                <div className=\"col-6\">\n                  <select\n                    ref={(ele) => {\n                      ref.current[2] = ele;\n                    }}\n                    className=\" text\"\n                    id=\"res_id\"\n                    name=\"res_id\"\n                    onChange={handleChange}\n                  >\n                    <option value=\"\"> &lt;&lt;Please Select&gt;&gt;</option>\n                    {ResourceName?.map((Item) => (\n                      <option key={Item.id} value={Item.id}>\n                        {Item.name}\n                      </option>\n                    ))}\n                  </select>\n                </div>\n              </div>\n            </div>\n            <div className=\"col-md-4 mb-2\">\n              <div className=\"form-group row\">\n                <label className=\"col-5\" htmlFor=\"email-input\">\n                  Task List&nbsp;<span className=\"error-text\">*</span>\n                </label>\n                <span className=\"col-1\">:</span>\n                <div className=\"col-6\">\n                  <select\n                    ref={(ele) => {\n                      ref.current[3] = ele;\n                    }}\n                    className=\" text\"\n                    name=\"task_id\"\n                    id=\"task_id\"\n                    onChange={(e) => {\n                      handleChange1(e);\n                    }}\n                  >\n                    <option value=\"\"> &lt;&lt;Please Select&gt;&gt;</option>\n                    {taskName?.map((Item) => (\n                      <option\n                        key={Item.project_task_id}\n                        value={Item.project_task_id}\n                      >\n                        {Item.task_name}\n                      </option>\n                    ))}\n                  </select>\n                  {(taskvalidation && taskName == \"\") || taskName == [] ? (\n                    <div>\n                      {\" \"}\n                      <span>\n                        <b>No Task Found</b>{\" \"}\n                      </span>\n                    </div>\n                  ) : (\n                    \"\"\n                  )}\n                </div>\n              </div>\n            </div>\n\n            <div className=\"col-md-12 col-sm-12 col-xs-12 btn-container center my-1\">\n              <button\n                type=\"submit\"\n                className=\"btn btn-primary\"\n                title=\"Search\"\n                onClick={() => handleClick()}\n              >\n                <FaSearch /> Search{\" \"}\n              </button>\n            </div>\n          </div>\n        </CCollapse>\n\n        {loaderState ? <Loader handleAbort={handleAbort} /> : \"\"}\n        {searching ? (\n          <div className=\"col-md-4 darkHeader\">\n            <div className=\"legendContainer\">\n              <div className=\"legend green\">\n                <div className=\"legendCircle \"></div>Approved\n              </div>\n              <div className=\"legend red\">\n                <div className=\"legendCircle \"></div> Rejected\n              </div>\n            </div>\n\n            <DataTable\n              className=\"primeReactDataTable \"\n              value={dataTime}\n              showGridlines\n              rows={rows}\n              dataKey=\"id\"\n              responsiveLayout=\"scroll\"\n              emptyMessage=\"No Records found.\"\n              style={{\n                align: \"center\",\n              }}\n            >\n              <Column\n                field=\"timesheet_dt\"\n                header=\"  Date\"\n                alignHeader={\"center\"}\n                body={represent}\n              ></Column>\n              <Column\n                field=\"hours\"\n                header=\"Hours\"\n                alignHeader={\"center\"}\n                body={representComments}\n              ></Column>\n            </DataTable>\n            <div className=\"row mt-3\">\n              {/* {dataAccess === 1000 ||\n              dataAccess === 100 ||\n              dataAccess === 46 ? ( */}\n              <div className=\"col-md-12 btn-container center \">\n                <button\n                  className=\"btn btn-primary mt-2 mb-2\"\n                  value=\"Approved\"\n                  onClick={(e) => {\n                    handleConfirm(e);\n                  }}\n                >\n                  <FaSave />\n                  Save\n                </button>\n                <button\n                  className=\"btn btn-primary mt-2 mb-2\"\n                  value=\"Save\"\n                  onClick={(e) => {\n                    handleConfirmSave(e);\n                  }}\n                >\n                  <FaSave />\n                  Save & Approve\n                </button>\n              </div>\n              {/* ) : (\n                \"\"\n              )} */}\n            </div>\n          </div>\n        ) : (\n          \"\"\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default FillTimesheets;\n"],"names":["useState","dataTime","setDataTime","successfullymsg","setSuccessfullymsg","successmsg","setSuccessmsg","visible","setVisible","FaChevronCircleUp","cheveronIcon","setCheveronIcon","ProjectName","setProjectName","hrs","setHrs","ResourceN","setResourceN","TaskN","setTaskN","projectValue","setprojectValue","ResourceName","setResourceName","taskName","setTASKName","validationMessage","setValidationMessage","validation","setValidation","taskvalidation","setTaskValidation","target","setTarget","routes","setRoutes","loaderState","setLoaderState","searching","setSearching","timedata","tabledata","settabledata","now","Date","quarter","getMonth","year","getFullYear","dd","abortController","useRef","moment","startOf","_d","date","SetDate","ref","initialValue","FromDate","format","baseUrl","environment","loggedUserId","localStorage","getItem","console","log","formData","setFormData","dataAccess","setDataAccess","useEffect","axios","then","Response","data","catch","error","method","url","resp","forEach","item","display_name","TMExpensesSubMenu","find","subMenus","subMenu","accessLevel","userRoles","includes","response","push","id","name","getData","valid","GlobalValidation","res","GetData","i","length","FaChevronCircleDown","topRef","onchange","e","rowData","prev","timesheet_dt","className","currentScreenName","pdfname","onClick","htmlFor","ele","current","selected","minDate","autoComplete","onChange","dateFormat","maxDate","showMonthYearPicker","placeholderText","onKeyDown","preventDefault","value","map","Item","projectName","handleChange1","project_task_id","task_name","type","title","GlobalCancel","AbortController","handleAbort","abort","showGridlines","rows","dataKey","responsiveLayout","emptyMessage","style","align","field","header","alignHeader","body","typ_status","disabled","Math","round","hours","backgroundColor","textAlign","defaultValue","roundedValue","undefined","window","scrollTo","top","behavior","setTimeout","Object","keys","obj","handleConfirm","handleConfirmSave"],"sourceRoot":""}