{"version":3,"file":"static/js/6989.61690941.chunk.js","mappings":"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","sources":["views/RevenueMetrices/MarginAnalysisTable.js","views/RevenueMetrices/MarginAnalysisCustIndustry.js","views/RevenueMetrices/MarginAnalysisDP.js","views/RevenueMetrices/MarginAnalysisCSL.js","views/RevenueMetrices/MarginAnalysisSE.js","views/RevenueMetrices/MarginAnalysisCustomer.js","views/RevenueMetrices/MarginAnalysisProject.js","views/RevenueMetrices/MarginAnalysisPopUp.js","views/RevenueMetrices/MarginAnalysisResource.js","views/RevenueMetrices/MarginAnalysis.js"],"sourcesContent":["import React, { useState, useMemo, memo, useRef } from \"react\";\nimport MaterialReactTable from \"material-react-table\";\nimport { useEffect } from \"react\";\nimport \"./HeadCountTableComponent.scss\";\nimport moment from \"moment\";\nimport Loader from \"../Loader/Loader\";\nimport { environment } from \"../../environments/environment\";\nimport { FaChevronCircleRight, FaChevronCircleDown } from \"react-icons/fa\";\nimport axios from \"axios\";\nimport { RiFileExcel2Line } from \"react-icons/ri\";\n\nfunction MarginAnalysisTable(props) {\n  const {\n    tableData,\n    column,\n    departments,\n    selectType,\n    month,\n    searchdata,\n    project,\n    customer,\n    resources,\n    sortBy,\n    laterMeasureLabel,\n    defaultMeasureLabel,\n  } = props;\n  const baseUrl = environment.baseUrl;\n  const abortController = useRef(null);\n  const [loader, setLoader] = useState(false);\n  const name = column[0];\n  const kpi = column[1];\n  const handleAbort = () => {\n    abortController.current && abortController.current.abort();\n    setLoader(false);\n  };\n\n  const dates = column.slice(2).sort();\n\n  const adjustedColumn = [name, kpi, ...dates, \"Total\"];\n  const [data, setData] = useState(adjustedColumn);\n  const [nodes, setNodes] = useState([]);\n  useEffect(() => {\n    setData(props.column);\n  }, [props.column]);\n\n  useEffect(() => {\n    let id = 1;\n    for (let i = 0; i < tableData.length; i++) {\n      tableData[i].id = id;\n      id++;\n      if (id % 10000 == 17) {\n        id += 9984;\n      }\n    }\n\n    setNodes(jsonToTree(tableData));\n  }, [tableData]);\n\n  const Data = moment(month).startOf(\"month\").format(\"yyyy-MM-DD\");\n\n  {\n    /*-------------------------------------For Getting Customer's According to BU------------------------------ */\n  }\n  const HandleInsertedData = (objId, objLabel, innerColumn) => {\n    console.log(\"ghjklkjhgfdsdfghjk\");\n    abortController.current = new AbortController();\n    const loaderTime = setTimeout(() => {\n      setLoader(true);\n    }, 2000);\n    axios({\n      method: \"post\",\n      url:\n        baseUrl +\n        `/revenuemetricsms/RevenueMarginAnalysis/GetFinancialsFinalData`,\n      data: {\n        ownerDivisions: -1,\n        month: Data,\n        duration: searchdata.duration,\n        countries: searchdata.countries,\n        searchType: searchdata.searchType,\n        busUnits: searchdata.busUnits,\n        customers:\n          searchdata.customers == \"select\"\n            ? selectedCust\n            : searchdata.customers,\n        srcType: searchdata.searchType,\n        srcTypeId: objId,\n        tarType: innerColumn,\n        busUnitId: objId,\n        custId: searchdata.custId,\n        prjId: searchdata.prjId,\n        resId: searchdata.resId,\n        measures: searchdata.measures,\n        salesExecId: searchdata.salesExecId,\n        salesExecs: -1,\n        sortBy: searchdata.sortBy,\n        custCountries: searchdata.custCountries,\n        source: searchdata.source,\n        resTyp: searchdata.resTyp,\n        engCountries: searchdata.engCountries,\n        contTerms: searchdata.contTerms,\n        engComp: searchdata.engComp,\n        cslRes: searchdata.cslRes,\n        cslResId: searchdata.cslResId,\n        dpRes: -1,\n        dpResId: searchdata.dpResId,\n        indTypes: -1,\n        indTypesId: searchdata.indTypesId,\n      },\n      signal: abortController.current.signal,\n    })\n      .then((res) => {\n        setLoader(false);\n        clearTimeout(loaderTime);\n        let respData = res.data.data;\n        respData = respData.filter((item) => item.name !== \"\");\n        respData = respData.map((item) => {\n          return {\n            ...item,\n            name: item.name + \"*\" + objId + \"*\" + innerColumn,\n          };\n        });\n        setNodes((prevNodes) => {\n          const grossMarginIndex = prevNodes.findIndex((node) => {\n            return searchdata.measures !=\n              \"1350,638,965,639,640,641,643,644,872,761\"\n              ? node.descr ==\n                  (laterMeasureLabel == \"Head Count\"\n                    ? \"hcsubk\"\n                    : laterMeasureLabel == \"Billable Utilization\"\n                    ? \"busubk\"\n                    : laterMeasureLabel == \"Billed Utilization\"\n                    ? \"bdusubk\"\n                    : laterMeasureLabel) && node.name === objLabel\n              : searchdata.sortBy == -1\n              ? node.kpi === defaultMeasureLabel && node.name === objLabel\n              : sortBy.some(\n                  (Item) =>\n                    node.kpi ===\n                      (Item.id == searchdata.sortBy ? Item.measures : \"\") &&\n                    node.name.split(\"*\")[0] === objLabel\n                );\n            //  node.descr === \"bdusubk\" && node.name === objLabel;\n          });\n\n          if (grossMarginIndex !== -1) {\n            return [\n              ...prevNodes.slice(0, grossMarginIndex + 1),\n              ...respData.map((data, i) => ({ ...data, id: objId + i + 1 })),\n              ...prevNodes.slice(grossMarginIndex + 1),\n            ];\n          } else {\n            return prevNodes;\n          }\n        });\n      })\n      .catch((e) => {\n        setLoader(false);\n      });\n  };\n\n  {\n    /*-------------------------------------For Getting Project's According to Customer------------------------------ */\n  }\n\n  const HandleInsertedData1 = (\n    objId,\n    objLabel,\n    innerColumn,\n    source,\n    custBU\n  ) => {\n    const loaderTime = setTimeout(() => {\n      setLoader(true);\n    }, 2000);\n    abortController.current = new AbortController();\n    axios({\n      method: \"post\",\n      url:\n        baseUrl +\n        `/revenuemetricsms/RevenueMarginAnalysis/GetFinancialsFinalData`,\n      data: {\n        ownerDivisions: -1,\n        month: Data,\n        duration: searchdata.duration,\n        countries: searchdata.countries,\n        searchType: \"BusinessUnit\",\n        busUnits: searchdata.busUnits,\n        customers:\n          searchdata.customers == \"select\"\n            ? selectedCust\n            : searchdata.customers,\n        srcType: source,\n        srcTypeId: objId,\n        tarType: innerColumn,\n        busUnitId: custBU,\n        custId: objId,\n        prjId: searchdata.prjId,\n        resId: searchdata.resId,\n        measures: searchdata.measures,\n        salesExecId: searchdata.salesExecId,\n        salesExecs: -1,\n        sortBy: searchdata.sortBy,\n        custCountries: searchdata.custCountries,\n        source: searchdata.source,\n        resTyp: searchdata.resTyp,\n        engCountries: searchdata.engCountries,\n        contTerms: searchdata.contTerms,\n        engComp: searchdata.engComp,\n        cslRes: searchdata.cslRes,\n        cslResId: searchdata.cslResId,\n        dpRes: -1,\n        dpResId: searchdata.dpResId,\n        indTypes: -1,\n        indTypesId: searchdata.indTypesId,\n      },\n      signal: abortController.current.signal,\n    })\n      .then((res) => {\n        setLoader(false);\n        clearTimeout(loaderTime);\n        let respData = res.data.data;\n        respData = respData.map((item) => {\n          return {\n            ...item,\n            name: item.name + \"*\" + objId + \"*\" + innerColumn + \"*\" + custBU,\n          };\n        });\n        setNodes((prevNodes) => {\n          const grossMarginIndex = prevNodes.findIndex((node) => {\n            return searchdata.sortBy == -1\n              ? node.kpi === defaultMeasureLabel &&\n                  node.name.split(\"*\")[0] === objLabel\n              : sortBy.some(\n                  (Item) =>\n                    node.kpi ===\n                      (Item.id == searchdata.sortBy ? Item.measures : \"\") &&\n                    node.name.split(\"*\")[0] === objLabel\n                );\n          });\n\n          if (grossMarginIndex !== -1) {\n            return [\n              ...prevNodes.slice(0, grossMarginIndex + 1),\n              ...respData.map((data, i) => ({ ...data, id: objId + i + 1 })),\n              ...prevNodes.slice(grossMarginIndex + 1),\n            ];\n          } else {\n            return prevNodes;\n          }\n        });\n      })\n      .catch((e) => {\n        setLoader(false);\n      });\n  };\n\n  const HandleInsertedData2 = (\n    objId,\n    objLabel,\n    innerColumn,\n    source,\n    custBU,\n    custId\n  ) => {\n    const loaderTime = setTimeout(() => {\n      setLoader(true);\n    }, 2000);\n    abortController.current = new AbortController();\n    axios({\n      method: \"post\",\n      url:\n        baseUrl +\n        `/revenuemetricsms/RevenueMarginAnalysis/GetFinancialsFinalData`,\n      data: {\n        ownerDivisions: -1,\n        month: Data,\n        duration: searchdata.duration,\n        countries: searchdata.countries,\n        searchType: \"BusinessUnit\",\n        busUnits: searchdata.busUnits,\n        customers:\n          searchdata.customers == \"select\"\n            ? selectedCust\n            : searchdata.customers,\n        srcType: source,\n        srcTypeId: objId,\n        tarType: innerColumn,\n        busUnitId: custBU,\n        custId: custId,\n        prjId: objId,\n        resId: searchdata.resId,\n        measures: searchdata.measures,\n        salesExecId: searchdata.salesExecId,\n        salesExecs: -1,\n        sortBy: searchdata.sortBy,\n        custCountries: searchdata.custCountries,\n        source: searchdata.source,\n        resTyp: searchdata.resTyp,\n        engCountries: searchdata.engCountries,\n        contTerms: searchdata.contTerms,\n        engComp: searchdata.engComp,\n        cslRes: searchdata.cslRes,\n        cslResId: searchdata.cslResId,\n        dpRes: -1,\n        dpResId: searchdata.dpResId,\n        indTypes: -1,\n        indTypesId: searchdata.indTypesId,\n      },\n      signal: abortController.current.signal,\n    })\n      .then((res) => {\n        setLoader(false);\n        clearTimeout(loaderTime);\n        let respData = res.data.data;\n        respData = respData.map((item) => {\n          return {\n            ...item,\n            name:\n              item.name +\n              \"*\" +\n              objId +\n              \"*\" +\n              innerColumn +\n              \"*\" +\n              custBU +\n              \"*\" +\n              custId,\n          };\n        });\n        setNodes((prevNodes) => {\n          const grossMarginIndex = prevNodes.findIndex((node) => {\n            return searchdata.sortBy == -1\n              ? node.kpi === defaultMeasureLabel &&\n                  node.name.split(\"*\")[0] === objLabel\n              : sortBy.some(\n                  (Item) =>\n                    node.kpi ===\n                      (Item.id == searchdata.sortBy ? Item.measures : \"\") &&\n                    node.name.split(\"*\")[0] === objLabel\n                );\n          });\n\n          if (grossMarginIndex !== -1) {\n            return [\n              ...prevNodes.slice(0, grossMarginIndex + 1),\n              ...respData.map((data, i) => ({ ...data, id: objId + i + 1 })),\n              ...prevNodes.slice(grossMarginIndex + 1),\n            ];\n          } else {\n            return prevNodes;\n          }\n        });\n      })\n      .catch((e) => {\n        setLoader(false);\n      });\n  };\n\n  const HandleInsertedData3 = (\n    objId,\n    objLabel,\n    innerColumn,\n    source,\n    custBU,\n    projectID,\n    custprojectId\n  ) => {\n    const loaderTime = setTimeout(() => {\n      setLoader(true);\n    }, 2000);\n    abortController.current = new AbortController();\n    axios({\n      method: \"post\",\n      url:\n        baseUrl +\n        `/revenuemetricsms/RevenueMarginAnalysis/GetFinancialsFinalData`,\n      data: {\n        ownerDivisions: -1,\n        month: Data,\n        duration: searchdata.duration,\n        countries: searchdata.countries,\n        searchType: \"BusinessUnit\",\n        busUnits: searchdata.busUnits,\n        customers:\n          searchdata.customers == \"select\"\n            ? selectedCust\n            : searchdata.customers,\n        srcType: source,\n        srcTypeId: objId,\n        tarType: innerColumn,\n        busUnitId: custBU,\n        custId: custprojectId,\n        prjId: projectID,\n        resId: -1,\n        measures: searchdata.measures,\n        salesExecId: searchdata.salesExecId,\n        salesExecs: -1,\n        sortBy: searchdata.sortBy,\n        custCountries: searchdata.custCountries,\n        source: searchdata.source,\n        resTyp: searchdata.resTyp,\n        engCountries: searchdata.engCountries,\n        contTerms: searchdata.contTerms,\n        engComp: searchdata.engComp,\n        cslRes: searchdata.cslRes,\n        cslResId: searchdata.cslResId,\n        dpRes: -1,\n        dpResId: searchdata.dpResId,\n        indTypes: -1,\n        indTypesId: searchdata.indTypesId,\n      },\n      signal: abortController.current.signal,\n    })\n      .then((res) => {\n        setLoader(false);\n        clearTimeout(loaderTime);\n        let respData = res.data.data;\n        respData = respData.map((item) => {\n          return {\n            ...item,\n            name: item.name + \"*\" + objId + \"*\" + innerColumn + \"*\" + custBU,\n          };\n        });\n        setNodes((prevNodes) => {\n          const grossMarginIndex = prevNodes.findIndex((node) => {\n            return searchdata.sortBy == -1\n              ? node.kpi === defaultMeasureLabel &&\n                  node.name.split(\"*\")[0] === objLabel\n              : sortBy.some(\n                  (Item) =>\n                    node.kpi ===\n                      (Item.id == searchdata.sortBy ? Item.measures : \"\") &&\n                    node.name.split(\"*\")[0] === objLabel\n                );\n          });\n\n          if (grossMarginIndex !== -1) {\n            return [\n              ...prevNodes.slice(0, grossMarginIndex + 1),\n              ...respData.map((data, i) => ({ ...data, id: objId + i + 1 })),\n              ...prevNodes.slice(grossMarginIndex + 1),\n            ];\n          } else {\n            return prevNodes;\n          }\n        });\n      })\n      .catch((e) => {\n        setLoader(false);\n      });\n  };\n\n  const jsonToTree = (flatArray, options) => {\n    options = {\n      id: \"id\",\n      parentId: \"parentId\",\n      children: \"subRows\",\n      ...options,\n    };\n    const dictionary = {};\n    const tree = [];\n    const children = options.children;\n    flatArray.forEach((node) => {\n      const nodeId = node[options.id];\n      const nodeParentId = node[options.parentId];\n      dictionary[nodeId] = {\n        [children]: [],\n        ...node,\n        ...dictionary[nodeId],\n      };\n      dictionary[nodeParentId] = dictionary[nodeParentId] || { [children]: [] };\n      dictionary[nodeParentId][children].push(dictionary[nodeId]);\n    });\n\n    Object.values(dictionary).forEach((obj) => {\n      if (typeof obj[options.id] === \"undefined\") {\n        tree.push(...obj[children]);\n      }\n    });\n    return tree;\n  };\n\n  const dynamicColumns = [\n    {\n      header: (\n        <div className=\"legendContainer wrap\">\n          <div className=\"legend lightbrown\">\n            <div className=\"legendCircle\"></div>\n            <div className=\"legendTxt\">\n              <b>BU</b>\n            </div>\n          </div>\n          <div className=\"legend darkgreen\">\n            <div className=\"legendCircle\"></div>\n            <div className=\"legendTxt\">\n              <b>Customer</b>\n            </div>\n          </div>\n          <div className=\"legend purple\">\n            <div className=\"legendCircle\"></div>\n            <div className=\"legendTxt\">\n              <b>Project</b>\n            </div>\n          </div>\n          <div className=\"legend brown\">\n            <div className=\"legendCircle\"></div>\n            <div className=\"legendTxt\">\n              <b>Res</b>\n            </div>\n          </div>\n        </div>\n      ),\n      accessorKey: `name`,\n      enableGrouping: false,\n      GroupedCell: ({ cell }) => {\n        if (selectType == \"BusinessUnit\") {\n          //--------------------//----------------------//-----------------------Parent Level (BU)\n          const department = departments.find(\n            (dep) => dep.label === cell.getValue()\n          );\n\n          const [activeIcons, setActiveIcons] = useState({});\n\n          const handleClick = () => {\n            if (department) {\n              const { value, label } = department;\n              const isDataPresent = nodes.some((node) => {\n                return node.name.includes(`*${value}`);\n              });\n\n              if (isDataPresent) {\n                setActiveIcons((prevActiveIcons) => ({\n                  ...prevActiveIcons,\n                  [value]: false,\n                }));\n                setNodes((prevNodes) =>\n                  prevNodes.filter((node) => !node.name.includes(`*${value}`))\n                );\n              } else {\n                setActiveIcons((prevActiveIcons) => ({\n                  ...prevActiveIcons,\n                  [value]: true,\n                }));\n                HandleInsertedData(value, label, \"Customer\");\n              }\n            }\n          };\n\n          //--------------------//----------------------//-----------------------First Child Layer (Customer)\n\n          let custBU;\n          const cust = customer.find((dep) => {\n            if (dep.fullName === cell.getValue().split(\"*\")[0]) {\n              const value = cell.getValue().split(\"*\")[1];\n              custBU = value;\n            }\n            return dep.fullName === cell.getValue().split(\"*\")[0];\n          });\n\n          const [activeIcons1, setActiveIcons1] = useState({});\n\n          const handleClick1 = () => {\n            if (cust) {\n              const { id, fullName } = cust;\n              const isDataPresent = nodes.some((node) => {\n                return node.name.includes(`*${id}`);\n              });\n\n              if (isDataPresent) {\n                setActiveIcons1((prevActiveIcons) => ({\n                  ...prevActiveIcons,\n                  [id]: false,\n                }));\n                setNodes((prevNodes) =>\n                  prevNodes.filter((node) => !node.name.includes(`*${id}`))\n                );\n              } else {\n                setActiveIcons1((prevActiveIcons) => ({\n                  ...prevActiveIcons,\n                  [id]: true,\n                }));\n                HandleInsertedData1(\n                  id,\n                  fullName,\n                  \"Project\",\n                  \"Customer\",\n                  custBU\n                );\n              }\n            }\n          };\n\n          //--------------------//----------------------//-----------------------Second Child Layer (Project)\n\n          let projBU;\n          let custId;\n          const proj = project.find((dep) => {\n            if (dep.name === cell.getValue().split(\"*\")[0]) {\n              const value = cell.getValue().split(\"*\")[3];\n              projBU = value;\n              custId = cell.getValue().split(\"*\")[1];\n            }\n            return dep.name === cell.getValue().split(\"*\")[0];\n          });\n\n          const [activeIcons2, setActiveIcons2] = useState({});\n\n          const handleClick2 = () => {\n            if (proj) {\n              const { id, name } = proj;\n              const isDataPresent = nodes.some((node) => {\n                return node.name.includes(`*${id}`);\n              });\n\n              if (isDataPresent) {\n                setActiveIcons2((prevActiveIcons) => ({\n                  ...prevActiveIcons,\n                  [id]: false,\n                }));\n                setNodes((prevNodes) =>\n                  prevNodes.filter((node) => !node.name.includes(`*${id}`))\n                );\n              } else {\n                setActiveIcons2((prevActiveIcons) => ({\n                  ...prevActiveIcons,\n                  [id]: true,\n                }));\n                HandleInsertedData2(id, name, \"Res\", \"Project\", projBU, custId);\n              }\n            }\n          };\n\n          //--------------------//----------------------//-----------------------Third Child Layer (Resource)\n\n          let resBU;\n          let projectID;\n          let custprojectId;\n          const res = resources.find((dep) => {\n            if (dep.fullName === cell.getValue().split(\"*\")[0]) {\n              const value = cell.getValue().split(\"*\")[3];\n              projectID = cell.getValue().split(\"*\")[1];\n              custprojectId = cell.getValue().split(\"*\")[4];\n              resBU = value;\n            }\n            const fullNameParts = dep.fullName.split(\"*\")[0].split(\" \");\n            const cellValueParts = cell.getValue().split(\"*\")[0].split(\" \");\n\n            return cell.getValue().split(\"*\")[0] == \"\"\n              ? \"\"\n              : cellValueParts.every((value) => fullNameParts.includes(value));\n          });\n\n          const [activeIcons3, setActiveIcons3] = useState({});\n\n          const handleClick3 = () => {\n            if (res) {\n              const { id, fullName } = res;\n              const isDataPresent = nodes.some((node) => {\n                return node.name.includes(`*${id}`);\n              });\n\n              if (isDataPresent) {\n                setActiveIcons3((prevActiveIcons) => ({\n                  ...prevActiveIcons,\n                  [id]: false,\n                }));\n                setNodes((prevNodes) =>\n                  prevNodes.filter((node) => !node.name.includes(`*${id}`))\n                );\n              } else {\n                setActiveIcons3((prevActiveIcons) => ({\n                  ...prevActiveIcons,\n                  [id]: true,\n                }));\n                HandleInsertedData3(\n                  id,\n                  fullName,\n                  \"Leaf\",\n                  \"Res\",\n                  resBU,\n                  projectID,\n                  custprojectId\n                );\n              }\n            }\n          };\n\n          //--------------------//----------------------//-----------------------Execution of the Layers\n          if (department) {\n            const { value } = department;\n            const isActive = activeIcons[value];\n            return (\n              <span\n                style={{ cursor: \"pointer\" }}\n                value={department.value}\n                onClick={() => {\n                  cell.row.original.count == null ? \"\" : handleClick();\n                }}\n                className={\"parent\"}\n              >\n                {cell.row.original.count == null ? (\n                  \"\"\n                ) : isActive ? (\n                  <FaChevronCircleDown />\n                ) : (\n                  <FaChevronCircleRight />\n                )}{\" \"}\n                <b\n                  className=\"buRM\"\n                  title={\n                    department.label +\n                    (cell.row.original.count == null\n                      ? \"\"\n                      : \" (\" + cell.row.original.count + \")\")\n                  }\n                >\n                  {department.label}{\" \"}\n                  {cell.row.original.count == null ||\n                  cell.row.original.count == 0\n                    ? \"\"\n                    : `(` + cell.row.original.count + `)`}\n                </b>\n              </span>\n            );\n          } else if (cust) {\n            const { id } = cust;\n            const isActive1 = activeIcons1[id];\n            return (\n              <span\n                style={{ cursor: \"pointer\" }}\n                value={cust.id}\n                onClick={() => {\n                  handleClick1();\n                }}\n                className={\"parent\"}\n              >\n                {isActive1 ? <FaChevronCircleDown /> : <FaChevronCircleRight />}{\" \"}\n                <b\n                  className=\"custRM\"\n                  title={cust.fullName + \" (\" + cell.row.original.count + \")\"}\n                >\n                  {cust.fullName} ({cell.row.original.count})\n                </b>\n              </span>\n            );\n          } else if (proj) {\n            const { id } = proj;\n            const isActive2 = activeIcons2[id];\n            return (\n              <span\n                style={{ cursor: \"pointer\" }}\n                value={proj.id}\n                onClick={() => {\n                  handleClick2();\n                }}\n                className={\"parent\"}\n              >\n                {isActive2 ? <FaChevronCircleDown /> : <FaChevronCircleRight />}{\" \"}\n                <b\n                  className=\"projRM\"\n                  title={proj.name + \" (\" + cell.row.original.count + \")\"}\n                >\n                  {proj.name} ({cell.row.original.count})\n                </b>\n              </span>\n            );\n          } else if (res) {\n            const { id } = res;\n            const isActive3 = activeIcons3[id];\n            return (\n              <span\n                style={{ cursor: \"pointer\" }}\n                value={res.id}\n                onClick={() => {\n                  handleClick3();\n                }}\n                className={\"parent\"}\n              >\n                {isActive3 ? <FaChevronCircleDown /> : <FaChevronCircleRight />}{\" \"}\n                <b\n                  className=\"resRM\"\n                  title={res.fullName + \" (\" + cell.row.original.count + \")\"}\n                >\n                  {res.fullName}\n                </b>\n              </span>\n            );\n          } else {\n            return (\n              <span\n                className=\"child\"\n                title={\n                  cell.row.original.name === \"\"\n                    ? \"Summary\"\n                    : cell.getValue().split(\"*\")[0] +\n                      \" (\" +\n                      cell.row.original.count +\n                      \")\"\n                }\n              >\n                <b\n                  className={\n                    cell.getValue().split(\"*\")[2] === \"Customer\"\n                      ? \"buRM\"\n                      : cell.getValue().split(\"*\")[2] == \"Project\"\n                      ? \"custRM\"\n                      : cell.getValue().split(\"*\")[2] == \"Res\"\n                      ? \"projRM\"\n                      : cell.getValue().split(\"*\")[2] == \"Leaf\"\n                      ? \"resRM\"\n                      : \"\"\n                  }\n                  style={{\n                    display:\n                      cell.row.original.name == \"\" ||\n                      cell.getValue().split(\"*\")[0] == \"\"\n                        ? \"flex\"\n                        : \"\",\n                    justifyContent:\n                      cell.row.original.name == \"\" ||\n                      cell.getValue().split(\"*\")[0] == \"\"\n                        ? \"center\"\n                        : \"\",\n                  }}\n                >\n                  {cell.row.original.name == \"\" ? (\n                    \"Summary\"\n                  ) : cell.getValue().split(\"*\")[0] == \"\" ? (\n                    \"Summary\"\n                  ) : (\n                    <div onClick={handleClick1}>\n                      <FaChevronCircleRight /> {cell.getValue().split(\"*\")[0]}\n                    </div>\n                  )}{\" \"}\n                  {cell.row.original.count === 0\n                    ? \"\"\n                    : `(${cell.row.original.count})`}\n                </b>{\" \"}\n              </span>\n            );\n          }\n        }\n      },\n    },\n    {\n      header: \"\",\n      accessorKey: `kpi`,\n      Cell: ({ cell }) => {\n        const department = departments.find(\n          (dep) => dep.label === cell.row.original.name\n        );\n\n        const cust = customer.find((dep) => {\n          return dep.fullName === cell.row.original.name.split(\"*\")[0];\n        });\n\n        const proj = project.find((dep) => {\n          return dep.name === cell.row.original.name.split(\"*\")[0];\n        });\n\n        const res = resources.find((dep) => {\n          const fullNameParts = dep.fullName.split(\"*\")[0].split(\" \");\n          const cellValueParts = cell.row.original.name\n            .split(\"*\")[0]\n            .split(\" \");\n\n          return cell.row.original.name.split(\"*\")[0] == \"\"\n            ? \"\"\n            : cellValueParts.every((value) => fullNameParts.includes(value));\n        });\n        if (department) {\n          return (\n            <span>\n              <b className=\"buRMchild\">{cell.getValue()}</b>\n            </span>\n          );\n        } else if (cust) {\n          return (\n            <span>\n              <b className=\"custRMchild\">{cell.getValue()}</b>\n            </span>\n          );\n        } else if (proj) {\n          return (\n            <span>\n              <b className=\"projRMchild\">{cell.getValue()}</b>\n            </span>\n          );\n        } else if (res) {\n          return (\n            <span>\n              <b className=\"resRMchild\">{cell.getValue()}</b>\n            </span>\n          );\n        } else {\n          return (\n            <span>\n              <b\n                className={\n                  cell.row.original.name.split(\"*\")[2] == \"Project\"\n                    ? \"custRMchild\"\n                    : cell.row.original.name.split(\"*\")[2] == \"Res\"\n                    ? \"projRMchild\"\n                    : cell.row.original.name.split(\"*\")[2] == \"Leaf\"\n                    ? \"resRMchild\"\n                    : \"\"\n                }\n              >\n                {cell.getValue()}\n              </b>\n            </span>\n          );\n        }\n      },\n    },\n  ];\n\n  data.forEach((item, index) => {\n    if (index > 1 && item !== \"Total\") {\n      const dateObj = new Date(\n        `${item.slice(0, 4)}-${item.slice(5, 7)}-${item.slice(8, 10)}`\n      );\n\n      const header = dateObj\n        .toLocaleDateString(\"en-US\", { month: \"short\", year: \"numeric\" })\n        .replace(\" \", \"-\");\n      const currentDate = new Date()\n        .toLocaleDateString(\"en-US\", {\n          month: \"short\",\n          year: \"numeric\",\n        })\n        .replace(\" \", \"-\");\n\n      let greenDate = new Date(header) >= new Date(currentDate);\n      dynamicColumns.push({\n        header,\n        accessorKey: `${item}`,\n        className: \"software\",\n        Cell: ({ cell }) => (\n          <span className={greenDate ? \"greenColumn\" : \"\"}>\n            {cell.row.original.kpi == \"Planned Revenue\" ||\n            cell.row.original.kpi == \"Actual Revenue\" ||\n            cell.row.original.kpi == \"Recognized Revenue\" ||\n            cell.row.original.kpi == \"Resource Direct Cost\" ||\n            cell.row.original.kpi == \"Other Direct Cost\" ||\n            cell.row.original.kpi == \"Gross Margin\" ? (\n              <span style={{ display: \"block\", float: \"left\" }}>$</span>\n            ) : (\n              \"\"\n            )}\n            <span style={{ display: \"block\", float: \"right\" }}>\n              {cell.getValue() == null\n                ? 0\n                : cell.getValue()?.toLocaleString(\"en-US\")}\n              {cell.row.original.kpi == \"Gross Margin %\" ||\n              cell.row.original.kpi == \"Billable Utilization\" ||\n              (cell.row.original.kpi == \"FTE\" &&\n                cell.row.original.descr != \"hcfte\") ||\n              (cell.row.original.kpi == \"SUBK\" &&\n                cell.row.original.descr != \"hcsubk\") ||\n              cell.row.original.kpi == \"Billed Utilization\" ? (\n                <span>%</span>\n              ) : (\n                \"\"\n              )}\n            </span>\n          </span>\n        ),\n      });\n    }\n  });\n\n  {\n    /*----------------------------------Total-------------------------------- */\n  }\n\n  const columnIndex = dynamicColumns.length;\n\n  const newColumn = {\n    header: \"Total\",\n    accessorKey: `Total`,\n    Cell: ({ cell }) => (\n      <>\n        {cell.row.original.kpi == \"Planned Revenue\" ||\n        cell.row.original.kpi == \"Actual Revenue\" ||\n        cell.row.original.kpi == \"Recognized Revenue\" ||\n        cell.row.original.kpi == \"Resource Direct Cost\" ||\n        cell.row.original.kpi == \"Other Direct Cost\" ||\n        cell.row.original.kpi == \"Gross Margin\" ? (\n          <span style={{ display: \"block\", float: \"left\" }}>\n            <b>$</b>\n          </span>\n        ) : (\n          \"\"\n        )}\n        <span style={{ display: \"block\", float: \"right\" }} className=\"total\">\n          <b>\n            {cell.getValue()?.toLocaleString(\"en-US\")}\n            {cell.row.original.kpi == \"Gross Margin %\" ||\n            cell.row.original.kpi == \"Billable Utilization\" ||\n            (cell.row.original.kpi == \"FTE\" &&\n              cell.row.original.descr != \"hcfte\") ||\n            (cell.row.original.kpi == \"SUBK\" &&\n              cell.row.original.descr != \"hcsubk\") ||\n            cell.row.original.kpi == \"Billed Utilization\" ? (\n              <span>{cell.getValue() == null ? 0 : \"%\"}</span>\n            ) : (\n              \"\"\n            )}\n          </b>\n        </span>\n      </>\n    ),\n  };\n\n  dynamicColumns.splice(columnIndex, 0, newColumn);\n\n  {\n    /*--------------------------Export Excel---------------------- */\n  }\n\n  const exportExcel = () => {\n    import(\"exceljs\").then((ExcelJS) => {\n      const workbook = new ExcelJS.Workbook();\n      const worksheet = workbook.addWorksheet(\"Revenue Analysis\");\n      let desiredColumnOrder = [];\n      let cols = [];\n      cols = data;\n      desiredColumnOrder = cols;\n      //----------------Months Sorting in order-----------------\n      desiredColumnOrder.sort((colA, colB) => {\n        const [, yearA, monthA] = colA.split(\"_\");\n        const [, yearB, monthB] = colB.split(\"_\");\n\n        if (yearA !== yearB) {\n          return parseInt(yearA) - parseInt(yearB);\n        }\n        return parseInt(monthA) - parseInt(monthB);\n      });\n      const wantedValues = data.concat(nodes).map((item) => {\n        const obj = {};\n        data.forEach((col) => {\n          const value = item[col];\n          console.log(value);\n          if (typeof value === \"string\") {\n            const [extractedValue, ,] = value.split(\"^&\");\n            obj[col] = extractedValue;\n          } else if (typeof value === \"number\") {\n            obj[col] = value.toLocaleString(\"en-US\");\n          } else {\n            obj[col] = value;\n          }\n        });\n\n        if (\"name\" in obj && obj[\"name\"] === \"\") {\n          obj[\"name\"] = \"Summary\";\n        } else if (\n          \"name\" in obj &&\n          obj[\"name\"] !== \"\" &&\n          obj[\"name\"] !== undefined\n        ) {\n          obj[\"name\"] =\n            obj[\"name\"].split(\"*\")[0] == \"\"\n              ? \"Summary\"\n              : obj[\"name\"].split(\"*\")[0];\n        }\n\n        if (\n          obj[\"kpi\"] === \"Planned Revenue\" ||\n          obj[\"kpi\"] === \"Actual Revenue\" ||\n          obj[\"kpi\"] === \"Recognized Revenue\" ||\n          obj[\"kpi\"] === \"Resource Direct Cost\" ||\n          obj[\"kpi\"] === \"Other Direct Cost\" ||\n          obj[\"kpi\"] === \"Gross Margin\"\n        ) {\n          Object.keys(obj).forEach((key) => {\n            if (key !== \"name\" && key !== \"kpi\" && !isNaN(obj[key])) {\n              // obj[key] = `$ ${obj[key]}`;\n              obj[key] = \"$\" + (obj[key] == null ? \"\" : obj[key]);\n            }\n          });\n        } else if (\n          obj[\"kpi\"] === \"Gross Margin %\" ||\n          obj[\"kpi\"] === \"Billable Utilization\" ||\n          obj[\"kpi\"] === \"Billed Utilization\" ||\n          obj[\"kpi\"] === \"SUBK\"\n        ) {\n          Object.keys(obj).forEach((key) => {\n            if (key !== \"name\" && key !== \"kpi\" && !isNaN(obj[key])) {\n              obj[key] = (obj[key] == null ? 0 : obj[key]) + \" %\";\n            }\n          });\n        }\n\n        return obj;\n      });\n\n      const formatMMMYYYY = (dateStr) => {\n        const [year, month, day] = dateStr.split(\"_\");\n        const monthName = new Date(`${year}-${month}-01`).toLocaleString(\n          \"en-us\",\n          { month: \"short\" }\n        );\n        return `${monthName}-${year}`;\n      };\n\n      const formatHeaderKey = (key) => {\n        if (key.match(/^\\d{4}_\\d{2}_\\d{2}$/)) {\n          return formatMMMYYYY(key);\n        }\n        return key;\n      };\n\n      const headerRow = {};\n      Object.keys(wantedValues[0]).forEach((key) => {\n        headerRow[key] =\n          formatHeaderKey(key) == \"name\"\n            ? \"BU  Customer  Project  Res\"\n            : formatHeaderKey(key) == \"kpi\"\n            ? \"\"\n            : formatHeaderKey(key);\n      });\n\n      const filteredValues = wantedValues.filter((item) =>\n        Object.values(item).some(\n          (value) => value !== null && value !== undefined && value !== \"\"\n        )\n      );\n\n      filteredValues.unshift(headerRow);\n\n      const rows = filteredValues.map((item) => {\n        const row = [];\n        desiredColumnOrder.forEach((col) => {\n          row.push(item[col]);\n        });\n        return row;\n      });\n\n      rows.forEach((row) => {\n        worksheet.addRow(row);\n      });\n\n      //--------------bold--------------------\n      [1].forEach((rowIndex) => {\n        const row = worksheet.getRow(rowIndex);\n        row.font = { bold: true };\n      });\n\n      // ----------  Name Merging ---------------------\n      const nameColumnIndex = desiredColumnOrder.indexOf(\"name\");\n\n      let mergeStartIndex = 1;\n      let currentName = rows[0][nameColumnIndex];\n\n      for (let rowIndex = 1; rowIndex < rows.length; rowIndex++) {\n        const row = rows[rowIndex];\n        const rowName = row[nameColumnIndex];\n\n        if (rowName !== currentName) {\n          if (rowIndex - mergeStartIndex > 0) {\n            worksheet.mergeCells(\n              mergeStartIndex + 1,\n              nameColumnIndex,\n              rowIndex,\n              nameColumnIndex\n            );\n          }\n\n          mergeStartIndex = rowIndex;\n          currentName = rowName;\n        }\n      }\n\n      if (rows.length - mergeStartIndex > 0) {\n        worksheet.mergeCells(\n          mergeStartIndex + 1,\n          nameColumnIndex,\n          rows.length,\n          nameColumnIndex\n        );\n      }\n\n      workbook.xlsx.writeBuffer().then((buffer) => {\n        saveAs(new Blob([buffer]), \"Revenue Analysis.xlsx\");\n      });\n    });\n  };\n\n  return (\n    <div className=\"materialReactExpandableTable headCountTable darkHeader\">\n      <div className=\"mb-2\" align=\" right \">\n        <RiFileExcel2Line\n          size=\"1.5em\"\n          title=\"Export to Excel\"\n          style={{ color: \"green\" }}\n          cursor=\"pointer\"\n          onClick={exportExcel}\n        />\n      </div>\n      <MaterialReactTable\n        columns={dynamicColumns}\n        data={nodes}\n        enableExpanding={(column) => column.id === \"name\"}\n        enableRowVirtualization={true}\n        enablePagination={false}\n        enableGlobalFilter={true}\n        enableDensityToggle={false}\n        enableFullScreenToggle={false}\n        enableHiding={false}\n        enableColumnFilters={false}\n        enableBottomToolbar={false}\n        enableTopToolbar={false}\n        enableColumnActions={false}\n        enableSorting={false}\n        filterFromLeafRows\n        initialState={{\n          showGlobalFilter: true,\n          grouping: [\"name\"],\n          expanded: true,\n          density: \"compact\",\n          columnPinning: { right: [\"Total\"] },\n        }} //expand all rows by default\n        muiTableContainerProps={\n          {\n            // sx: { height: \"49vh\", width: \"auto\" },\n          }\n        }\n        muiTableBodyProps={{\n          sx: {\n            \"&\": {\n              borderRight: \"1px solid #ccc\",\n              borderBottom: \"1px solid #ccc\",\n            },\n            \"& td\": {\n              borderRight: \"1px solid #ccc\",\n              height: \"22px\",\n              padding: \"0px 5px\",\n            },\n          },\n        }}\n        muiTableHeadProps={{\n          sx: {\n            \"& th\": {\n              borderTop: \"1px solid #ccc\",\n              borderRight: \"1px solid #ccc\",\n              background: \"#f4f4f4 \",\n              padding: \"0 5px\",\n            },\n          },\n        }}\n      />\n      {loader ? <Loader handleAbort={handleAbort} /> : \"\"}\n    </div>\n  );\n}\n\nexport default MarginAnalysisTable;\n","import React, { useState, useMemo, memo, useRef } from \"react\";\nimport MaterialReactTable from \"material-react-table\";\nimport { useEffect } from \"react\";\nimport \"./HeadCountTableComponent.scss\";\nimport moment from \"moment\";\nimport Loader from \"../Loader/Loader\";\nimport { environment } from \"../../environments/environment\";\nimport { FaChevronCircleRight, FaChevronCircleDown } from \"react-icons/fa\";\nimport axios from \"axios\";\nimport { RiFileExcel2Line } from \"react-icons/ri\";\n\nfunction MarginAnalysisCustIndustry(props) {\n  const {\n    tableData,\n    column,\n    selectType,\n    month,\n    searchdata,\n    project,\n    customer,\n    resources,\n    custIndustry,\n    sortBy,\n    laterMeasureLabel,\n    defaultMeasureLabel,\n  } = props;\n  const baseUrl = environment.baseUrl;\n  const abortController = useRef(null);\n  const [loader, setLoader] = useState(false);\n  const name = column[0];\n  const kpi = column[1];\n  const handleAbort = () => {\n    abortController.current && abortController.current.abort();\n    setLoader(false);\n  };\n\n  const dates = column.slice(2).sort();\n\n  const adjustedColumn = [name, kpi, ...dates, \"Total\"];\n  const [data, setData] = useState(adjustedColumn);\n  const [nodes, setNodes] = useState([]);\n  useEffect(() => {\n    setData(props.column);\n  }, [props.column]);\n\n  useEffect(() => {\n    let id = 1;\n    for (let i = 0; i < tableData.length; i++) {\n      tableData[i].id = id;\n      id++;\n      if (id % 10000 == 17) {\n        id += 9984;\n      }\n    }\n\n    setNodes(jsonToTree(tableData));\n  }, [tableData]);\n\n  const Data = moment(month).startOf(\"month\").format(\"yyyy-MM-DD\");\n\n  {\n    /*-------------------------------------For Getting Customer's According to Customer Industry------------------------------ */\n  }\n  const HandleInsertedData = (objId, objLabel, innerColumn) => {\n    abortController.current = new AbortController();\n    const loaderTime = setTimeout(() => {\n      setLoader(true);\n    }, 2000);\n    axios({\n      method: \"post\",\n      url:\n        baseUrl +\n        `/revenuemetricsms/RevenueMarginAnalysis/GetGMACustIndustryFinancialsFinalData`,\n      data: {\n        ownerDivisions: -1,\n        month: Data,\n        duration: searchdata.duration,\n        countries: searchdata.countries,\n        searchType: searchdata.searchType,\n        busUnits: -1,\n        customers:\n          searchdata.customers == \"select\"\n            ? selectedCust\n            : searchdata.customers,\n        srcType: searchdata.searchType,\n        srcTypeId: objId,\n        tarType: innerColumn,\n        busUnitId: -1,\n        custId: searchdata.custId,\n        prjId: searchdata.prjId,\n        resId: searchdata.resId,\n        measures: searchdata.measures,\n        salesExecId: searchdata.salesExecId,\n        salesExecs: -1,\n        sortBy: searchdata.sortBy,\n        custCountries: searchdata.custCountries,\n        source: searchdata.source,\n        resTyp: searchdata.resTyp,\n        engCountries: searchdata.engCountries,\n        contTerms: searchdata.contTerms,\n        engComp: searchdata.engComp,\n        cslRes: searchdata.cslRes,\n        cslResId: searchdata.cslResId,\n        dpRes: -1,\n        dpResId: searchdata.dpResId,\n        indTypes: searchdata.indTypes,\n        indTypesId: objId,\n      },\n      signal: abortController.current.signal,\n    })\n      .then((res) => {\n        setLoader(false);\n        clearTimeout(loaderTime);\n        let respData = res.data.data;\n        respData = respData.map((item) => {\n          return {\n            ...item,\n            name: item.name + \"*\" + objId + \"*\" + innerColumn,\n          };\n        });\n\n        setNodes((prevNodes) => {\n          const grossMarginIndex = prevNodes.findIndex((node) => {\n            return searchdata.measures !=\n              \"1350,638,965,639,640,641,643,644,872,761\"\n              ? searchdata.sortBy != -1\n                ? sortBy.some(\n                    (Item) =>\n                      node.kpi ===\n                        (Item.id == searchdata.sortBy ? Item.measures : \"\") &&\n                      node.name.split(\"*\")[0] === objLabel\n                  )\n                : node.kpi === defaultMeasureLabel &&\n                  node.name.split(\"*\")[0] === objLabel\n              : searchdata.sortBy == -1\n              ? node.kpi === defaultMeasureLabel &&\n                node.name.split(\"*\")[0] === objLabel\n              : sortBy.some(\n                  (Item) =>\n                    node.kpi ===\n                      (Item.id == searchdata.sortBy ? Item.measures : \"\") &&\n                    node.name.split(\"*\")[0] === objLabel\n                );\n          });\n          if (grossMarginIndex !== -1) {\n            return [\n              ...prevNodes.slice(0, grossMarginIndex + 1),\n              ...respData.map((data, i) => ({ ...data, id: objId + i + 1 })),\n              ...prevNodes.slice(grossMarginIndex + 1),\n            ];\n          } else {\n            return prevNodes;\n          }\n        });\n      })\n      .catch((e) => {\n        setLoader(false);\n      });\n  };\n\n  {\n    /*-------------------------------------For Getting Project's According to Customer------------------------------ */\n  }\n\n  const HandleInsertedData1 = (\n    objId,\n    objLabel,\n    innerColumn,\n    source,\n    custBU\n  ) => {\n    abortController.current = new AbortController();\n    const loaderTime = setTimeout(() => {\n      setLoader(true);\n    }, 2000);\n    axios({\n      method: \"post\",\n      url:\n        baseUrl +\n        `/revenuemetricsms/RevenueMarginAnalysis/GetGMACustIndustryFinancialsFinalData`,\n      data: {\n        ownerDivisions: -1,\n        month: Data,\n        duration: searchdata.duration,\n        countries: searchdata.countries,\n        searchType: \"CustIndustry\",\n        busUnits: -1,\n        customers:\n          searchdata.customers == \"select\"\n            ? selectedCust\n            : searchdata.customers,\n        srcType: source,\n        srcTypeId: objId,\n        tarType: innerColumn,\n        busUnitId: -1,\n        custId: objId,\n        prjId: -1,\n        resId: -1,\n        measures: searchdata.measures,\n        salesExecId: searchdata.salesExecId,\n        salesExecs: -1,\n        sortBy: searchdata.sortBy,\n        custCountries: searchdata.custCountries,\n        source: searchdata.source,\n        resTyp: searchdata.resTyp,\n        engCountries: searchdata.engCountries,\n        contTerms: searchdata.contTerms,\n        engComp: searchdata.engComp,\n        cslRes: searchdata.cslRes,\n        cslResId: searchdata.cslResId,\n        dpRes: -1,\n        dpResId: searchdata.dpResId,\n        indTypes: searchdata.indTypes,\n        indTypesId: custBU,\n      },\n      signal: abortController.current.signal,\n    })\n      .then((res) => {\n        setLoader(false);\n        clearTimeout(loaderTime);\n        let respData = res.data.data;\n        respData = respData.map((item) => {\n          return {\n            ...item,\n            name: item.name + \"*\" + objId + \"*\" + innerColumn + \"*\" + custBU,\n          };\n        });\n        setNodes((prevNodes) => {\n          const grossMarginIndex = prevNodes.findIndex((node) => {\n            return searchdata.measures !=\n              \"1350,638,965,639,640,641,643,644,872,761\"\n              ? searchdata.sortBy != -1\n                ? sortBy.some(\n                    (Item) =>\n                      node.kpi ===\n                        (Item.id == searchdata.sortBy ? Item.measures : \"\") &&\n                      node.name.split(\"*\")[0] === objLabel\n                  )\n                : node.kpi === defaultMeasureLabel &&\n                  node.name.split(\"*\")[0] === objLabel\n              : searchdata.sortBy == -1\n              ? node.kpi === defaultMeasureLabel &&\n                node.name.split(\"*\")[0] === objLabel\n              : sortBy.some(\n                  (Item) =>\n                    node.kpi ===\n                      (Item.id == searchdata.sortBy ? Item.measures : \"\") &&\n                    node.name.split(\"*\")[0] === objLabel\n                );\n          });\n          if (grossMarginIndex !== -1) {\n            return [\n              ...prevNodes.slice(0, grossMarginIndex + 1),\n              ...respData.map((data, i) => ({ ...data, id: objId + i + 1 })),\n              ...prevNodes.slice(grossMarginIndex + 1),\n            ];\n          } else {\n            return prevNodes;\n          }\n        });\n      })\n      .catch((e) => {\n        setLoader(false);\n      });\n  };\n\n  const HandleInsertedData2 = (\n    objId,\n    objLabel,\n    innerColumn,\n    source,\n    custBU,\n    custId\n  ) => {\n    abortController.current = new AbortController();\n    const loaderTime = setTimeout(() => {\n      setLoader(true);\n    }, 2000);\n    axios({\n      method: \"post\",\n      url:\n        baseUrl +\n        `/revenuemetricsms/RevenueMarginAnalysis/GetGMACustIndustryFinancialsFinalData`,\n      data: {\n        ownerDivisions: -1,\n        month: Data,\n        duration: searchdata.duration,\n        countries: searchdata.countries,\n        searchType: \"CustIndustry\",\n        busUnits: -1,\n        customers:\n          searchdata.customers == \"select\"\n            ? selectedCust\n            : searchdata.customers,\n        srcType: source,\n        srcTypeId: objId,\n        tarType: innerColumn,\n        busUnitId: -1,\n        custId: custId,\n        prjId: objId,\n        resId: searchdata.resId,\n        measures: searchdata.measures,\n        salesExecId: searchdata.salesExecId,\n        salesExecs: -1,\n        sortBy: searchdata.sortBy,\n        custCountries: searchdata.custCountries,\n        source: searchdata.source,\n        resTyp: searchdata.resTyp,\n        engCountries: searchdata.engCountries,\n        contTerms: searchdata.contTerms,\n        engComp: searchdata.engComp,\n        cslRes: searchdata.cslRes,\n        cslResId: searchdata.cslResId,\n        dpRes: -1,\n        dpResId: searchdata.dpResId,\n        indTypes: searchdata.indTypes,\n        indTypesId: custBU,\n      },\n      signal: abortController.current.signal,\n    })\n      .then((res) => {\n        setLoader(false);\n        clearTimeout(loaderTime);\n        let respData = res.data.data;\n        respData = respData.map((item) => {\n          return {\n            ...item,\n            name:\n              item.name +\n              \"*\" +\n              objId +\n              \"*\" +\n              innerColumn +\n              \"*\" +\n              custBU +\n              \"*\" +\n              custId,\n          };\n        });\n        setNodes((prevNodes) => {\n          const grossMarginIndex = prevNodes.findIndex((node) => {\n            return searchdata.measures !=\n              \"1350,638,965,639,640,641,643,644,872,761\"\n              ? searchdata.sortBy != -1\n                ? sortBy.some(\n                    (Item) =>\n                      node.kpi ===\n                        (Item.id == searchdata.sortBy ? Item.measures : \"\") &&\n                      node.name.split(\"*\")[0] === objLabel\n                  )\n                : node.kpi === defaultMeasureLabel &&\n                  node.name.split(\"*\")[0] === objLabel\n              : searchdata.sortBy == -1\n              ? node.kpi === defaultMeasureLabel &&\n                node.name.split(\"*\")[0] === objLabel\n              : sortBy.some(\n                  (Item) =>\n                    node.kpi ===\n                      (Item.id == searchdata.sortBy ? Item.measures : \"\") &&\n                    node.name.split(\"*\")[0] === objLabel\n                );\n          });\n          if (grossMarginIndex !== -1) {\n            return [\n              ...prevNodes.slice(0, grossMarginIndex + 1),\n              ...respData.map((data, i) => ({ ...data, id: objId + i + 1 })),\n              ...prevNodes.slice(grossMarginIndex + 1),\n            ];\n          } else {\n            return prevNodes;\n          }\n        });\n      })\n      .catch((e) => {\n        setLoader(false);\n      });\n  };\n\n  const HandleInsertedData3 = (\n    objId,\n    objLabel,\n    innerColumn,\n    source,\n    custBU,\n    projectID,\n    custprojectId\n  ) => {\n    abortController.current = new AbortController();\n    const loaderTime = setTimeout(() => {\n      setLoader(true);\n    }, 2000);\n    axios({\n      method: \"post\",\n      url:\n        baseUrl +\n        `/revenuemetricsms/RevenueMarginAnalysis/GetGMACustIndustryFinancialsFinalData`,\n      data: {\n        ownerDivisions: -1,\n        month: Data,\n        duration: searchdata.duration,\n        countries: searchdata.countries,\n        searchType: \"CustIndustry\",\n        busUnits: -1,\n        customers:\n          searchdata.customers == \"select\"\n            ? selectedCust\n            : searchdata.customers,\n        srcType: source,\n        srcTypeId: objId,\n        tarType: innerColumn,\n        busUnitId: -1,\n        custId: custprojectId,\n        prjId: projectID,\n        resId: -1,\n        measures: searchdata.measures,\n        salesExecId: searchdata.salesExecId,\n        salesExecs: -1,\n        sortBy: searchdata.sortBy,\n        custCountries: searchdata.custCountries,\n        source: searchdata.source,\n        resTyp: searchdata.resTyp,\n        engCountries: searchdata.engCountries,\n        contTerms: searchdata.contTerms,\n        engComp: searchdata.engComp,\n        cslRes: searchdata.cslRes,\n        cslResId: searchdata.cslResId,\n        dpRes: -1,\n        dpResId: searchdata.dpResId,\n        indTypes: searchdata.indTypes,\n        indTypesId: custBU,\n      },\n      signal: abortController.current.signal,\n    })\n      .then((res) => {\n        setLoader(false);\n        clearTimeout(loaderTime);\n        let respData = res.data.data;\n        respData = respData.map((item) => {\n          return {\n            ...item,\n            name: item.name + \"*\" + objId + \"*\" + innerColumn + \"*\" + custBU,\n          };\n        });\n        setNodes((prevNodes) => {\n          const grossMarginIndex = prevNodes.findIndex((node) => {\n            return searchdata.measures !=\n              \"1350,638,965,639,640,641,643,644,872,761\"\n              ? searchdata.sortBy != -1\n                ? sortBy.some(\n                    (Item) =>\n                      node.kpi ===\n                        (Item.id == searchdata.sortBy ? Item.measures : \"\") &&\n                      node.name.split(\"*\")[0].replace(/\\s+/g, \" \") ===\n                        objLabel.replace(/\\s+/g, \" \")\n                  )\n                : node.kpi === defaultMeasureLabel &&\n                  node.name.split(\"*\")[0].replace(/\\s+/g, \" \") ===\n                    objLabel.replace(/\\s+/g, \" \")\n              : searchdata.sortBy == -1\n              ? node.kpi === defaultMeasureLabel &&\n                node.name.split(\"*\")[0].replace(/\\s+/g, \" \") ===\n                  objLabel.replace(/\\s+/g, \" \")\n              : sortBy.some(\n                  (Item) =>\n                    node.kpi ===\n                      (Item.id == searchdata.sortBy ? Item.measures : \"\") &&\n                    node.name.split(\"*\")[0].replace(/\\s+/g, \" \") ===\n                      objLabel.replace(/\\s+/g, \" \")\n                );\n          });\n          if (grossMarginIndex !== -1) {\n            return [\n              ...prevNodes.slice(0, grossMarginIndex + 1),\n              ...respData.map((data, i) => ({ ...data, id: objId + i + 1 })),\n              ...prevNodes.slice(grossMarginIndex + 1),\n            ];\n          } else {\n            return prevNodes;\n          }\n        });\n      })\n      .catch((e) => {\n        setLoader(false);\n      });\n  };\n\n  const jsonToTree = (flatArray, options) => {\n    options = {\n      id: \"id\",\n      parentId: \"parentId\",\n      children: \"subRows\",\n      ...options,\n    };\n    const dictionary = {};\n    const tree = [];\n    const children = options.children;\n    flatArray.forEach((node) => {\n      const nodeId = node[options.id];\n      const nodeParentId = node[options.parentId];\n      dictionary[nodeId] = {\n        [children]: [],\n        ...node,\n        ...dictionary[nodeId],\n      };\n      dictionary[nodeParentId] = dictionary[nodeParentId] || { [children]: [] };\n      dictionary[nodeParentId][children].push(dictionary[nodeId]);\n    });\n\n    Object.values(dictionary).forEach((obj) => {\n      if (typeof obj[options.id] === \"undefined\") {\n        tree.push(...obj[children]);\n      }\n    });\n    return tree;\n  };\n\n  const dynamicColumns = [\n    // for data[0] where accessorKey is name\n    {\n      header: (\n        // <div className=\"header-label\">BU Customer Project Res</div>\n        <div className=\"legendContainer wrap\">\n          <div className=\"legend lightbrown\">\n            <div className=\"legendCircle\"></div>\n            <div className=\"legendTxt\">\n              <b>Customer Industry</b>\n            </div>\n          </div>\n          <div className=\"legend darkgreen\">\n            <div className=\"legendCircle\"></div>\n            <div className=\"legendTxt\">\n              <b>Customer</b>\n            </div>\n          </div>\n          <div className=\"legend purple\">\n            <div className=\"legendCircle\"></div>\n            <div className=\"legendTxt\">\n              <b>Project</b>\n            </div>\n          </div>\n          <div className=\"legend brown\">\n            <div className=\"legendCircle\"></div>\n            <div className=\"legendTxt\">\n              <b>Res</b>\n            </div>\n          </div>\n        </div>\n      ),\n      accessorKey: `name`,\n      enableGrouping: false,\n      GroupedCell: ({ cell }) => {\n        if (selectType == \"CustIndustry\") {\n          //--------------------//----------------------//-----------------------Parent Level (Customer Industry)\n          const updatedCustIndustry = custIndustry.map((item) => {\n            if (item.label === \"Un Assigned\") {\n              return { ...item, label: \"UnAssigned\" };\n            } else if (item.label.trim() === \"\") {\n              return { ...item, label: \"UnAssigned\" };\n            }\n            return item;\n          });\n          const department = updatedCustIndustry.find(\n            (dep) => dep.label === cell.getValue()\n          );\n\n          const [activeIcons, setActiveIcons] = useState({});\n\n          const handleClick = () => {\n            if (department) {\n              const { value, label } = department;\n              const isDataPresent = nodes.some((node) => {\n                return node.name.includes(`*${value}`);\n              });\n\n              if (isDataPresent) {\n                setActiveIcons((prevActiveIcons) => ({\n                  ...prevActiveIcons,\n                  [value]: false,\n                }));\n                setNodes((prevNodes) =>\n                  prevNodes.filter((node) => !node.name.includes(`*${value}`))\n                );\n              } else {\n                setActiveIcons((prevActiveIcons) => ({\n                  ...prevActiveIcons,\n                  [value]: true,\n                }));\n                HandleInsertedData(value, label, \"Customer\");\n              }\n            }\n          };\n\n          //--------------------//----------------------//-----------------------First Child Layer (Customer)\n\n          let custBU;\n          const cust = customer.find((dep) => {\n            if (dep.fullName === cell.getValue().split(\"*\")[0]) {\n              const value = cell.getValue().split(\"*\")[1];\n              custBU = value;\n            }\n            return dep.fullName === cell.getValue().split(\"*\")[0];\n          });\n\n          const [activeIcons1, setActiveIcons1] = useState({});\n\n          const handleClick1 = () => {\n            if (cust) {\n              const { id, fullName } = cust;\n              const isDataPresent = nodes.some((node) => {\n                return node.name.includes(`*${id}`);\n              });\n\n              if (isDataPresent) {\n                setActiveIcons1((prevActiveIcons) => ({\n                  ...prevActiveIcons,\n                  [id]: false,\n                }));\n                setNodes((prevNodes) =>\n                  prevNodes.filter((node) => !node.name.includes(`*${id}`))\n                );\n              } else {\n                setActiveIcons1((prevActiveIcons) => ({\n                  ...prevActiveIcons,\n                  [id]: true,\n                }));\n                HandleInsertedData1(\n                  id,\n                  fullName,\n                  \"Project\",\n                  \"Customer\",\n                  custBU\n                );\n              }\n            }\n          };\n\n          //--------------------//----------------------//-----------------------Second Child Layer (Project)\n\n          let projBU;\n          let custId;\n          const proj = project.find((dep) => {\n            if (dep.name === cell.getValue().split(\"*\")[0]) {\n              const value = cell.getValue().split(\"*\")[3];\n              projBU = value;\n              custId = cell.getValue().split(\"*\")[1];\n            }\n            return (\n              dep.name === cell.getValue().split(\"*\")[0] ||\n              dep.name === cell.getValue().split(\"*\")[0]\n            );\n          });\n\n          const [activeIcons2, setActiveIcons2] = useState({});\n\n          const handleClick2 = () => {\n            if (proj) {\n              const { id, name } = proj;\n              const isDataPresent = nodes.some((node) => {\n                return node.name.includes(`*${id}`);\n              });\n\n              if (isDataPresent) {\n                setActiveIcons2((prevActiveIcons) => ({\n                  ...prevActiveIcons,\n                  [id]: false,\n                }));\n                setNodes((prevNodes) =>\n                  prevNodes.filter((node) => !node.name.includes(`*${id}`))\n                );\n              } else {\n                setActiveIcons2((prevActiveIcons) => ({\n                  ...prevActiveIcons,\n                  [id]: true,\n                }));\n                HandleInsertedData2(id, name, \"Res\", \"Project\", projBU, custId);\n              }\n            }\n          };\n\n          //--------------------//----------------------//-----------------------Third Child Layer (Resource)\n\n          let resBU;\n          let projectID;\n          let custprojectId;\n          const res = resources.find((dep) => {\n            if (dep.fullName === cell.getValue().split(\"*\")[0]) {\n              const value = cell.getValue().split(\"*\")[3];\n              projectID = cell.getValue().split(\"*\")[1];\n              custprojectId = cell.getValue().split(\"*\")[4];\n              resBU = value;\n            }\n            const fullNameParts = dep.fullName.split(\"*\")[0].split(\" \");\n            const cellValueParts = cell.getValue().split(\"*\")[0].split(\" \");\n\n            return cell.getValue().split(\"*\")[0] == \"\"\n              ? \"\"\n              : cellValueParts.every((value) => fullNameParts.includes(value));\n            // return dep.fullName.split(\"_\")[0] === cell.getValue().split(\"_\")[0];\n          });\n\n          const [activeIcons3, setActiveIcons3] = useState({});\n\n          const handleClick3 = () => {\n            if (res) {\n              const { id, fullName } = res;\n              const isDataPresent = nodes.some((node) => {\n                return node.name.includes(`*${id}`);\n              });\n\n              if (isDataPresent) {\n                setActiveIcons3((prevActiveIcons) => ({\n                  ...prevActiveIcons,\n                  [id]: false,\n                }));\n                setNodes((prevNodes) =>\n                  prevNodes.filter((node) => !node.name.includes(`*${id}`))\n                );\n              } else {\n                setActiveIcons3((prevActiveIcons) => ({\n                  ...prevActiveIcons,\n                  [id]: true,\n                }));\n                HandleInsertedData3(\n                  id,\n                  fullName,\n                  \"Leaf\",\n                  \"Res\",\n                  resBU,\n                  projectID,\n                  custprojectId\n                );\n              }\n            }\n          };\n\n          //--------------------//----------------------//-----------------------Execution of the Layers\n          if (department) {\n            const { value } = department;\n            const isActive = activeIcons[value];\n            return (\n              <span\n                style={{ cursor: \"pointer\" }}\n                value={department.value}\n                onClick={() => {\n                  handleClick();\n                }}\n                className={\"parent\"}\n              >\n                {isActive ? <FaChevronCircleDown /> : <FaChevronCircleRight />}{\" \"}\n                <b\n                  className=\"buRM\"\n                  title={\n                    department.label + \" (\" + cell.row.original.count + \")\"\n                  }\n                >\n                  {department.label} ({cell.row.original.count})\n                </b>\n              </span>\n            );\n          } else if (cust) {\n            const { id } = cust;\n            const isActive1 = activeIcons1[id];\n            return (\n              <span\n                style={{ cursor: \"pointer\" }}\n                value={cust.id}\n                onClick={() => {\n                  handleClick1();\n                }}\n                className={\"parent\"}\n              >\n                {isActive1 ? <FaChevronCircleDown /> : <FaChevronCircleRight />}{\" \"}\n                <b\n                  className=\"custRM\"\n                  title={cust.fullName + \" (\" + cell.row.original.count + \")\"}\n                >\n                  {cust.fullName} ({cell.row.original.count})\n                </b>\n              </span>\n            );\n          } else if (proj) {\n            const { id } = proj;\n            const isActive2 = activeIcons2[id];\n            return (\n              <span\n                style={{ cursor: \"pointer\" }}\n                value={proj.id}\n                onClick={() => {\n                  handleClick2();\n                }}\n                className={\"parent\"}\n              >\n                {console.log(cell.row.original)}\n                {isActive2 ? (\n                  <FaChevronCircleDown />\n                ) : (\n                  <FaChevronCircleRight />\n                )}{\" \"}\n                <b\n                  className=\"projRM\"\n                  title={proj.name + \" (\" + cell.row.original.count + \")\"}\n                >\n                  {proj.name} ({cell.row.original.count})\n                </b>\n              </span>\n            );\n          } else if (res) {\n            const { id } = res;\n            const isActive3 = activeIcons3[id];\n            return (\n              <span\n                style={{ cursor: \"pointer\" }}\n                value={res.id}\n                onClick={() => {\n                  handleClick3();\n                }}\n                className={\"parent\"}\n              >\n                {isActive3 ? <FaChevronCircleDown /> : <FaChevronCircleRight />}{\" \"}\n                <b\n                  className=\"resRM\"\n                  title={res.fullName + \" (\" + cell.row.original.count + \")\"}\n                >\n                  {res.fullName}\n                </b>\n              </span>\n            );\n          } else {\n            return (\n              <span\n                className=\"child\"\n                title={\n                  cell.row.original.name === \"\"\n                    ? \"Summary\"\n                    : cell.getValue().split(\"*\")[0] +\n                      \" (\" +\n                      cell.row.original.count +\n                      \")\"\n                }\n              >\n                <b\n                  className={\n                    cell.getValue().split(\"*\")[2] == \"Customer\"\n                      ? \"buRM\"\n                      : cell.getValue().split(\"*\")[2] == \"Project\"\n                      ? \"custRM\"\n                      : cell.getValue().split(\"*\")[2] == \"Res\"\n                      ? \"projRM\"\n                      : cell.getValue().split(\"*\")[2] == \"Leaf\"\n                      ? \"resRM\"\n                      : \"\"\n                  }\n                  style={{\n                    display:\n                      cell.row.original.name == \"\" ||\n                      cell.getValue().split(\"*\")[0] == \"\"\n                        ? \"flex\"\n                        : \"\",\n                    justifyContent:\n                      cell.row.original.name == \"\" ||\n                      cell.getValue().split(\"*\")[0] == \"\"\n                        ? \"center\"\n                        : \"\",\n                  }}\n                >\n                  {cell.row.original.name == \"\" ? (\n                    \"Summary\"\n                  ) : cell.getValue().split(\"*\")[0] == \"\" ? (\n                    \"Summary\"\n                  ) : (\n                    <div onClick={handleClick1}>\n                      <FaChevronCircleRight /> {cell.getValue().split(\"*\")[0]}\n                    </div>\n                  )}{\" \"}\n                  {cell.row.original.count === 0\n                    ? \"\"\n                    : `(${cell.row.original.count})`}\n                </b>{\" \"}\n              </span>\n            );\n          }\n        }\n      },\n    },\n    {\n      header: \"\",\n      accessorKey: `kpi`,\n      Cell: ({ cell }) => {\n        const updatedCustIndustry = custIndustry.map((item) => {\n          if (item.label === \"Un Assigned\") {\n            return { ...item, label: \"UnAssigned\" };\n          } else if (item.label.trim() === \"\") {\n            return { ...item, label: \"UnAssigned\" };\n          }\n          return item;\n        });\n        const department = updatedCustIndustry.find(\n          (dep) => dep.label === cell.row.original.name\n        );\n        const cust = customer.find((dep) => {\n          return dep.fullName === cell.row.original.name.split(\"*\")[0];\n        });\n        const proj = project.find((dep) => {\n          return dep.name === cell.row.original.name.split(\"*\")[0];\n        });\n        const res = resources.find((dep) => {\n          const fullNameParts = dep.fullName.split(\"*\")[0].split(\" \");\n          const cellValueParts = cell.row.original.name\n            .split(\"*\")[0]\n            .split(\" \");\n\n          return cell.row.original.name.split(\"*\")[0] == \"\"\n            ? \"\"\n            : cellValueParts.every((value) => fullNameParts.includes(value));\n        });\n\n        return (\n          <span>\n            <b\n              className={\n                department\n                  ? \"buRMchild\"\n                  : cust\n                  ? \"custRMchild\"\n                  : proj\n                  ? \"projRMchild\"\n                  : res\n                  ? \"resRMchild\"\n                  : cell.row.original.name.split(\"*\")[2] == \"Customer\"\n                  ? \"buRMchild\"\n                  : cell.row.original.name.split(\"*\")[2] == \"Project\"\n                  ? \"custRMchild\"\n                  : cell.row.original.name.split(\"*\")[2] == \"Res\"\n                  ? \"projRMchild\"\n                  : cell.row.original.name.split(\"*\")[2] == \"Leaf\"\n                  ? \"resRMchild\"\n                  : \"\"\n              }\n            >\n              {cell.getValue()}\n            </b>\n          </span>\n        );\n      },\n    },\n  ];\n\n  data.forEach((item, index) => {\n    if (index > 1 && item !== \"Total\") {\n      const dateObj = new Date(\n        `${item.slice(0, 4)}-${item.slice(5, 7)}-${item.slice(8, 10)}`\n      );\n\n      const header = dateObj\n        .toLocaleDateString(\"en-US\", { month: \"short\", year: \"numeric\" })\n        .replace(\" \", \"-\");\n      const currentDate = new Date()\n        .toLocaleDateString(\"en-US\", {\n          month: \"short\",\n          year: \"numeric\",\n        })\n        .replace(\" \", \"-\");\n\n      let greenDate = new Date(header) >= new Date(currentDate);\n      dynamicColumns.push({\n        header,\n        accessorKey: `${item}`,\n        className: \"software\",\n        Cell: ({ cell }) => (\n          <span className={greenDate ? \"greenColumn\" : \"\"}>\n            {cell.row.original.kpi == \"Planned Revenue\" ||\n            cell.row.original.kpi == \"Actual Revenue\" ||\n            cell.row.original.kpi == \"Recognized Revenue\" ||\n            cell.row.original.kpi == \"Resource Direct Cost\" ||\n            cell.row.original.kpi == \"Other Direct Cost\" ||\n            cell.row.original.kpi == \"Gross Margin\" ? (\n              <span style={{ display: \"block\", float: \"left\" }}>$</span>\n            ) : (\n              \"\"\n            )}\n            <span style={{ display: \"block\", float: \"right\" }}>\n              {cell.getValue() == null\n                ? 0\n                : cell.getValue()?.toLocaleString(\"en-US\")}\n              {cell.row.original.kpi == \"Gross Margin %\" ||\n              cell.row.original.kpi == \"Billable Utilization\" ||\n              (cell.row.original.kpi == \"FTE\" &&\n                cell.row.original.descr != \"hcfte\") ||\n              (cell.row.original.kpi == \"SUBK\" &&\n                cell.row.original.descr != \"hcsubk\") ||\n              cell.row.original.kpi == \"Billed Utilization\" ? (\n                <span>%</span>\n              ) : (\n                \"\"\n              )}\n            </span>\n          </span>\n        ),\n      });\n    }\n  });\n\n  {\n    /*----------------------------------Total-------------------------------- */\n  }\n\n  const columnIndex = dynamicColumns.length;\n\n  const newColumn = {\n    header: \"Total\",\n    accessorKey: `Total`,\n    Cell: ({ cell }) => (\n      <>\n        {cell.row.original.kpi == \"Planned Revenue\" ||\n        cell.row.original.kpi == \"Actual Revenue\" ||\n        cell.row.original.kpi == \"Recognized Revenue\" ||\n        cell.row.original.kpi == \"Resource Direct Cost\" ||\n        cell.row.original.kpi == \"Other Direct Cost\" ||\n        cell.row.original.kpi == \"Gross Margin\" ? (\n          <span style={{ display: \"block\", float: \"left\" }}>\n            <b>$</b>\n          </span>\n        ) : (\n          \"\"\n        )}\n        <span style={{ display: \"block\", float: \"right\" }} className=\"total\">\n          <b>\n            {cell.getValue()?.toLocaleString(\"en-US\")}\n            {cell.row.original.kpi == \"Gross Margin %\" ||\n            cell.row.original.kpi == \"Billable Utilization\" ||\n            (cell.row.original.kpi == \"FTE\" &&\n              cell.row.original.descr != \"hcfte\") ||\n            (cell.row.original.kpi == \"SUBK\" &&\n              cell.row.original.descr != \"hcsubk\") ||\n            cell.row.original.kpi == \"Billed Utilization\" ? (\n              <span>{cell.getValue() == null ? 0 : \"%\"}</span>\n            ) : (\n              \"\"\n            )}\n          </b>\n        </span>\n      </>\n    ),\n  };\n\n  dynamicColumns.splice(columnIndex, 0, newColumn);\n  {\n    /*--------------------------Export Excel---------------------- */\n  }\n\n  const exportExcel = () => {\n    import(\"exceljs\").then((ExcelJS) => {\n      const workbook = new ExcelJS.Workbook();\n      const worksheet = workbook.addWorksheet(\"Revenue Analysis\");\n      let desiredColumnOrder = [];\n      let cols = [];\n      cols = data;\n      desiredColumnOrder = cols;\n      //----------------Months Sorting in order-----------------\n      desiredColumnOrder.sort((colA, colB) => {\n        const [, yearA, monthA] = colA.split(\"_\");\n        const [, yearB, monthB] = colB.split(\"_\");\n\n        if (yearA !== yearB) {\n          return parseInt(yearA) - parseInt(yearB);\n        }\n        return parseInt(monthA) - parseInt(monthB);\n      });\n      const wantedValues = data.concat(nodes).map((item) => {\n        const obj = {};\n        data.forEach((col) => {\n          const value = item[col];\n          if (typeof value === \"string\") {\n            const [extractedValue, ,] = value.split(\"^&\");\n            obj[col] = extractedValue;\n          } else if (typeof value === \"number\") {\n            obj[col] = value.toLocaleString(\"en-US\");\n          } else {\n            obj[col] = value;\n          }\n        });\n\n        if (\"name\" in obj && obj[\"name\"] === \"\") {\n          obj[\"name\"] = \"Summary\";\n        } else if (\n          \"name\" in obj &&\n          obj[\"name\"] !== \"\" &&\n          obj[\"name\"] !== undefined\n        ) {\n          obj[\"name\"] =\n            obj[\"name\"].split(\"*\")[0] == \"\"\n              ? \"Summary\"\n              : obj[\"name\"].split(\"*\")[0];\n        }\n\n        if (\n          obj[\"kpi\"] === \"Planned Revenue\" ||\n          obj[\"kpi\"] === \"Actual Revenue\" ||\n          obj[\"kpi\"] === \"Recognized Revenue\" ||\n          obj[\"kpi\"] === \"Resource Direct Cost\" ||\n          obj[\"kpi\"] === \"Other Direct Cost\" ||\n          obj[\"kpi\"] === \"Gross Margin\"\n        ) {\n          Object.keys(obj).forEach((key) => {\n            if (key !== \"name\" && key !== \"kpi\" && !isNaN(obj[key])) {\n              // obj[key] = `$ ${obj[key]}`;\n              obj[key] = \"$\" + (obj[key] == null ? \"\" : obj[key]);\n            }\n          });\n        } else if (\n          obj[\"kpi\"] === \"Gross Margin %\" ||\n          obj[\"kpi\"] === \"Billable Utilization\" ||\n          obj[\"kpi\"] === \"Billed Utilization\" ||\n          obj[\"kpi\"] === \"FTE\" ||\n          obj[\"kpi\"] === \"SUBK\"\n        ) {\n          Object.keys(obj).forEach((key) => {\n            if (key !== \"name\" && key !== \"kpi\" && !isNaN(obj[key])) {\n              obj[key] = (obj[key] == null ? 0 : obj[key]) + \" %\";\n            }\n          });\n        }\n\n        return obj;\n      });\n\n      const formatMMMYYYY = (dateStr) => {\n        const [year, month, day] = dateStr.split(\"_\");\n        const monthName = new Date(`${year}-${month}-01`).toLocaleString(\n          \"en-us\",\n          { month: \"short\" }\n        );\n        return `${monthName}-${year}`;\n      };\n\n      const formatHeaderKey = (key) => {\n        if (key.match(/^\\d{4}_\\d{2}_\\d{2}$/)) {\n          return formatMMMYYYY(key);\n        }\n        return key;\n      };\n\n      const headerRow = {};\n      Object.keys(wantedValues[0]).forEach((key) => {\n        headerRow[key] =\n          formatHeaderKey(key) == \"name\"\n            ? \"Customer  Industry  Customer  Project  Res\"\n            : formatHeaderKey(key) == \"kpi\"\n            ? \"\"\n            : formatHeaderKey(key);\n      });\n\n      const filteredValues = wantedValues.filter((item) =>\n        Object.values(item).some(\n          (value) => value !== null && value !== undefined && value !== \"\"\n        )\n      );\n\n      filteredValues.unshift(headerRow);\n\n      const rows = filteredValues.map((item) => {\n        const row = [];\n        desiredColumnOrder.forEach((col) => {\n          row.push(item[col]);\n        });\n        return row;\n      });\n\n      rows.forEach((row) => {\n        worksheet.addRow(row);\n      });\n\n      //--------------bold--------------------\n      [1].forEach((rowIndex) => {\n        const row = worksheet.getRow(rowIndex);\n        row.font = { bold: true };\n      });\n\n      // ----------  Name Merging ---------------------\n      const nameColumnIndex = desiredColumnOrder.indexOf(\"name\");\n\n      let mergeStartIndex = 1;\n      let currentName = rows[0][nameColumnIndex];\n\n      for (let rowIndex = 1; rowIndex < rows.length; rowIndex++) {\n        const row = rows[rowIndex];\n        const rowName = row[nameColumnIndex];\n\n        if (rowName !== currentName) {\n          if (rowIndex - mergeStartIndex > 0) {\n            worksheet.mergeCells(\n              mergeStartIndex + 1,\n              nameColumnIndex,\n              rowIndex,\n              nameColumnIndex\n            );\n          }\n\n          mergeStartIndex = rowIndex;\n          currentName = rowName;\n        }\n      }\n\n      if (rows.length - mergeStartIndex > 0) {\n        worksheet.mergeCells(\n          mergeStartIndex + 1,\n          nameColumnIndex,\n          rows.length,\n          nameColumnIndex\n        );\n      }\n\n      workbook.xlsx.writeBuffer().then((buffer) => {\n        saveAs(new Blob([buffer]), \"Revenue Analysis.xlsx\");\n      });\n    });\n  };\n\n  return (\n    <div className=\"materialReactExpandableTable headCountTable darkHeader\">\n      <div className=\"mb-2\" align=\" right \">\n        <RiFileExcel2Line\n          size=\"1.5em\"\n          title=\"Export to Excel\"\n          style={{ color: \"green\" }}\n          cursor=\"pointer\"\n          onClick={exportExcel}\n        />\n      </div>\n      <MaterialReactTable\n        columns={dynamicColumns}\n        data={nodes}\n        enableExpanding={(column) => column.id === \"name\"}\n        enableRowVirtualization={true}\n        enablePagination={false}\n        enableGlobalFilter={true}\n        enableDensityToggle={false}\n        enableFullScreenToggle={false}\n        enableHiding={false}\n        enableColumnFilters={false}\n        enableBottomToolbar={false}\n        enableTopToolbar={false}\n        enableColumnActions={false}\n        enableSorting={false}\n        filterFromLeafRows //apply filtering to all rows instead of just parent rows\n        initialState={{\n          showGlobalFilter: true,\n          grouping: [\"name\"],\n          expanded: true,\n          density: \"compact\",\n          columnPinning: { right: [\"Total\"] },\n        }} //expand all rows by default\n        muiTableContainerProps={\n          {\n            // sx: { height: \"49vh\", width: \"auto\" },\n          }\n        }\n        muiTableBodyProps={{\n          sx: {\n            \"&\": {\n              borderRight: \"1px solid #ccc\",\n              borderBottom: \"1px solid #ccc\",\n            },\n            \"& td\": {\n              borderRight: \"1px solid #ccc\",\n              height: \"22px\",\n              padding: \"0px 5px\",\n            },\n          },\n        }}\n        muiTableHeadProps={{\n          sx: {\n            \"& th\": {\n              borderTop: \"1px solid #ccc\",\n              borderRight: \"1px solid #ccc\",\n              background: \"#f4f4f4 \",\n              padding: \"0 5px\",\n            },\n          },\n        }}\n      />\n      {loader ? <Loader handleAbort={handleAbort} /> : \"\"}\n    </div>\n  );\n}\n\nexport default MarginAnalysisCustIndustry;\n","import React, { useState, useMemo, memo, useRef } from \"react\";\nimport MaterialReactTable from \"material-react-table\";\nimport { useEffect } from \"react\";\nimport \"./HeadCountTableComponent.scss\";\nimport moment from \"moment\";\nimport Loader from \"../Loader/Loader\";\nimport { environment } from \"../../environments/environment\";\nimport { FaChevronCircleRight, FaChevronCircleDown } from \"react-icons/fa\";\nimport axios from \"axios\";\nimport { RiFileExcel2Line } from \"react-icons/ri\";\n\nfunction MarginAnalysisDP(props) {\n  const {\n    tableData,\n    column,\n    selectType,\n    month,\n    searchdata,\n    project,\n    customer,\n    resources,\n    dpList,\n    sortBy,\n    laterMeasureLabel,\n    defaultMeasureLabel,\n  } = props;\n  const baseUrl = environment.baseUrl;\n  const abortController = useRef(null);\n  const [loader, setLoader] = useState(false);\n  const name = column[0];\n  const kpi = column[1];\n  const handleAbort = () => {\n    abortController.current && abortController.current.abort();\n    setLoader(false);\n  };\n\n  const dates = column.slice(2).sort();\n\n  const adjustedColumn = [name, kpi, ...dates, \"Total\"];\n  const [data, setData] = useState(adjustedColumn);\n  const [nodes, setNodes] = useState([]);\n  useEffect(() => {\n    setData(props.column);\n  }, [props.column]);\n\n  useEffect(() => {\n    let id = 1;\n    for (let i = 0; i < tableData.length; i++) {\n      tableData[i].id = id;\n      id++;\n      if (id % 10000 == 17) {\n        id += 9984;\n      }\n    }\n\n    setNodes(jsonToTree(tableData));\n  }, [tableData]);\n\n  const Data = moment(month).startOf(\"month\").format(\"yyyy-MM-DD\");\n\n  {\n    /*-------------------------------------For Getting Customer's According to Customer Industry------------------------------ */\n  }\n  const HandleInsertedData = (objId, objLabel, innerColumn) => {\n    abortController.current = new AbortController();\n    const loaderTime = setTimeout(() => {\n      setLoader(true);\n    }, 2000);\n    axios({\n      method: \"post\",\n      url:\n        baseUrl +\n        `/revenuemetricsms/RevenueMarginAnalysis/GetGMADPFinancialsFinalData`,\n      data: {\n        ownerDivisions: -1,\n        month: Data,\n        duration: searchdata.duration,\n        countries: searchdata.countries,\n        searchType: searchdata.searchType,\n        busUnits: -1,\n        customers:\n          searchdata.customers == \"select\"\n            ? selectedCust\n            : searchdata.customers,\n        srcType: searchdata.searchType,\n        srcTypeId: objId,\n        tarType: innerColumn,\n        busUnitId: -1,\n        custId: searchdata.custId,\n        prjId: searchdata.prjId,\n        resId: searchdata.resId,\n        measures: searchdata.measures,\n        salesExecId: searchdata.salesExecId,\n        salesExecs: -1,\n        sortBy: searchdata.sortBy,\n        custCountries: searchdata.custCountries,\n        source: searchdata.source,\n        resTyp: searchdata.resTyp,\n        engCountries: searchdata.engCountries,\n        contTerms: searchdata.contTerms,\n        engComp: searchdata.engComp,\n        cslRes: searchdata.cslRes,\n        cslResId: searchdata.cslResId,\n        dpRes: searchdata.dpRes,\n        dpResId: objId,\n        indTypes: -1,\n        indTypesId: -1,\n      },\n      signal: abortController.current.signal,\n    })\n      .then((res) => {\n        setLoader(false);\n        clearTimeout(loaderTime);\n        let respData = res.data.data;\n        respData = respData.map((item) => {\n          return {\n            ...item,\n            name: item.name + \"*\" + objId + \"*\" + innerColumn,\n          };\n        });\n\n        setNodes((prevNodes) => {\n          const grossMarginIndex = prevNodes.findIndex((node) => {\n            return searchdata.measures !=\n              \"1350,638,965,639,640,641,643,644,872,761\"\n              ? searchdata.sortBy != -1\n                ? sortBy.some(\n                    (Item) =>\n                      node.kpi ===\n                        (Item.id == searchdata.sortBy ? Item.measures : \"\") &&\n                      node.name.split(\"*\")[0] === objLabel\n                  )\n                : node.kpi === defaultMeasureLabel &&\n                  node.name.split(\"*\")[0] === objLabel\n              : searchdata.sortBy == -1\n              ? node.kpi === defaultMeasureLabel &&\n                node.name.split(\"*\")[0] === objLabel\n              : sortBy.some(\n                  (Item) =>\n                    node.kpi ===\n                      (Item.id == searchdata.sortBy ? Item.measures : \"\") &&\n                    node.name.split(\"*\")[0] === objLabel\n                );\n          });\n          if (grossMarginIndex !== -1) {\n            return [\n              ...prevNodes.slice(0, grossMarginIndex + 1),\n              ...respData.map((data, i) => ({ ...data, id: objId + i + 1 })),\n              ...prevNodes.slice(grossMarginIndex + 1),\n            ];\n          } else {\n            return prevNodes;\n          }\n        });\n      })\n      .catch((e) => {\n        setLoader(false);\n      });\n  };\n\n  {\n    /*-------------------------------------For Getting Project's According to Customer------------------------------ */\n  }\n\n  const HandleInsertedData1 = (\n    objId,\n    objLabel,\n    innerColumn,\n    source,\n    custBU\n  ) => {\n    abortController.current = new AbortController();\n    const loaderTime = setTimeout(() => {\n      setLoader(true);\n    }, 2000);\n    axios({\n      method: \"post\",\n      url:\n        baseUrl +\n        `/revenuemetricsms/RevenueMarginAnalysis/GetFinancialsFinalData`,\n      data: {\n        ownerDivisions: -1,\n        month: Data,\n        duration: searchdata.duration,\n        countries: searchdata.countries,\n        searchType: \"DP\",\n        busUnits: -1,\n        customers:\n          searchdata.customers == \"select\"\n            ? selectedCust\n            : searchdata.customers,\n        srcType: source,\n        srcTypeId: objId,\n        tarType: innerColumn,\n        busUnitId: -1,\n        custId: objId,\n        prjId: searchdata.prjId,\n        resId: searchdata.resId,\n        measures: searchdata.measures,\n        salesExecId: -1,\n        salesExecs: -1,\n        sortBy: searchdata.sortBy,\n        custCountries: searchdata.custCountries,\n        source: searchdata.source,\n        resTyp: searchdata.resTyp,\n        engCountries: searchdata.engCountries,\n        contTerms: searchdata.contTerms,\n        engComp: searchdata.engComp,\n        cslRes: searchdata.cslRes,\n        cslResId: searchdata.cslResId,\n        dpRes: searchdata.dpRes,\n        dpResId: custBU,\n        indTypes: -1,\n        indTypesId: -1,\n      },\n      signal: abortController.current.signal,\n    })\n      .then((res) => {\n        setLoader(false);\n        clearTimeout(loaderTime);\n        let respData = res.data.data;\n        respData = respData.map((item) => {\n          return {\n            ...item,\n            name: item.name + \"*\" + objId + \"*\" + innerColumn + \"*\" + custBU,\n          };\n        });\n        setNodes((prevNodes) => {\n          const grossMarginIndex = prevNodes.findIndex((node) => {\n            return searchdata.measures !=\n              \"1350,638,965,639,640,641,643,644,872,761\"\n              ? searchdata.sortBy != -1\n                ? sortBy.some(\n                    (Item) =>\n                      node.kpi ===\n                        (Item.id == searchdata.sortBy ? Item.measures : \"\") &&\n                      node.name.split(\"*\")[0] === objLabel\n                  )\n                : node.kpi === defaultMeasureLabel &&\n                  node.name.split(\"*\")[0] === objLabel\n              : searchdata.sortBy == -1\n              ? node.kpi === defaultMeasureLabel &&\n                node.name.split(\"*\")[0] === objLabel\n              : sortBy.some(\n                  (Item) =>\n                    node.kpi ===\n                      (Item.id == searchdata.sortBy ? Item.measures : \"\") &&\n                    node.name.split(\"*\")[0] === objLabel\n                );\n          });\n          if (grossMarginIndex !== -1) {\n            return [\n              ...prevNodes.slice(0, grossMarginIndex + 1),\n              ...respData.map((data, i) => ({ ...data, id: objId + i + 1 })),\n              ...prevNodes.slice(grossMarginIndex + 1),\n            ];\n          } else {\n            return prevNodes;\n          }\n        });\n      })\n      .catch((e) => {\n        setLoader(false);\n      });\n  };\n\n  const HandleInsertedData2 = (\n    objId,\n    objLabel,\n    innerColumn,\n    source,\n    custBU,\n    custId\n  ) => {\n    abortController.current = new AbortController();\n    const loaderTime = setTimeout(() => {\n      setLoader(true);\n    }, 2000);\n    axios({\n      method: \"post\",\n      url:\n        baseUrl +\n        `/revenuemetricsms/RevenueMarginAnalysis/GetGMADPFinancialsFinalData`,\n      data: {\n        ownerDivisions: -1,\n        month: Data,\n        duration: searchdata.duration,\n        countries: searchdata.countries,\n        searchType: \"DP\",\n        busUnits: -1,\n        customers:\n          searchdata.customers == \"select\"\n            ? selectedCust\n            : searchdata.customers,\n        srcType: source,\n        srcTypeId: objId,\n        tarType: innerColumn,\n        busUnitId: -1,\n        custId: custId,\n        prjId: objId,\n        resId: searchdata.resId,\n        measures: searchdata.measures,\n        salesExecId: -1,\n        salesExecs: -1,\n        sortBy: searchdata.sortBy,\n        custCountries: searchdata.custCountries,\n        source: searchdata.source,\n        resTyp: searchdata.resTyp,\n        engCountries: searchdata.engCountries,\n        contTerms: searchdata.contTerms,\n        engComp: searchdata.engComp,\n        cslRes: searchdata.cslRes,\n        cslResId: searchdata.cslResId,\n        dpRes: searchdata.dpRes,\n        dpResId: custBU,\n        indTypes: -1,\n        indTypesId: -1,\n      },\n      signal: abortController.current.signal,\n    })\n      .then((res) => {\n        setLoader(false);\n        clearTimeout(loaderTime);\n        let respData = res.data.data;\n        respData = respData.map((item) => {\n          return {\n            ...item,\n            name:\n              item.name +\n              \"*\" +\n              objId +\n              \"*\" +\n              innerColumn +\n              \"*\" +\n              custBU +\n              \"*\" +\n              custId,\n          };\n        });\n        setNodes((prevNodes) => {\n          const grossMarginIndex = prevNodes.findIndex((node) => {\n            return searchdata.measures !=\n              \"1350,638,965,639,640,641,643,644,872,761\"\n              ? searchdata.sortBy != -1\n                ? sortBy.some(\n                    (Item) =>\n                      node.kpi ===\n                        (Item.id == searchdata.sortBy ? Item.measures : \"\") &&\n                      node.name.split(\"*\")[0] === objLabel\n                  )\n                : node.kpi === defaultMeasureLabel &&\n                  node.name.split(\"*\")[0] === objLabel\n              : searchdata.sortBy == -1\n              ? node.kpi === defaultMeasureLabel &&\n                node.name.split(\"*\")[0] === objLabel\n              : sortBy.some(\n                  (Item) =>\n                    node.kpi ===\n                      (Item.id == searchdata.sortBy ? Item.measures : \"\") &&\n                    node.name.split(\"*\")[0] === objLabel\n                );\n          });\n          if (grossMarginIndex !== -1) {\n            return [\n              ...prevNodes.slice(0, grossMarginIndex + 1),\n              ...respData.map((data, i) => ({ ...data, id: objId + i + 1 })),\n              ...prevNodes.slice(grossMarginIndex + 1),\n            ];\n          } else {\n            return prevNodes;\n          }\n        });\n      })\n      .catch((e) => {\n        setLoader(false);\n      });\n  };\n\n  const HandleInsertedData3 = (\n    objId,\n    objLabel,\n    innerColumn,\n    source,\n    custBU,\n    projectID,\n    custprojectId\n  ) => {\n    abortController.current = new AbortController();\n    const loaderTime = setTimeout(() => {\n      setLoader(true);\n    }, 2000);\n    axios({\n      method: \"post\",\n      url:\n        baseUrl +\n        `/revenuemetricsms/RevenueMarginAnalysis/GetGMADPFinancialsFinalData`,\n      data: {\n        ownerDivisions: -1,\n        month: Data,\n        duration: searchdata.duration,\n        countries: searchdata.countries,\n        searchType: \"DP\",\n        busUnits: -1,\n        customers:\n          searchdata.customers == \"select\"\n            ? selectedCust\n            : searchdata.customers,\n        srcType: source,\n        srcTypeId: objId,\n        tarType: innerColumn,\n        busUnitId: -1,\n        custId: custprojectId,\n        prjId: projectID,\n        resId: -1,\n        measures: searchdata.measures,\n        salesExecId: searchdata.salesExecId,\n        salesExecs: -1,\n        sortBy: searchdata.sortBy,\n        custCountries: searchdata.custCountries,\n        source: searchdata.source,\n        resTyp: searchdata.resTyp,\n        engCountries: searchdata.engCountries,\n        contTerms: searchdata.contTerms,\n        engComp: searchdata.engComp,\n        cslRes: searchdata.cslRes,\n        cslResId: searchdata.cslResId,\n        dpRes: searchdata.dpRes,\n        dpResId: custBU,\n        indTypes: -1,\n        indTypesId: -1,\n      },\n      signal: abortController.current.signal,\n    })\n      .then((res) => {\n        setLoader(false);\n        clearTimeout(loaderTime);\n        let respData = res.data.data;\n        respData = respData.map((item) => {\n          return {\n            ...item,\n            name: item.name + \"*\" + objId + \"*\" + innerColumn + \"*\" + custBU,\n          };\n        });\n        setNodes((prevNodes) => {\n          const grossMarginIndex = prevNodes.findIndex((node) => {\n            return searchdata.measures !=\n              \"1350,638,965,639,640,641,643,644,872,761\"\n              ? searchdata.sortBy != -1\n                ? sortBy.some(\n                    (Item) =>\n                      node.kpi ===\n                        (Item.id == searchdata.sortBy ? Item.measures : \"\") &&\n                      node.name.split(\"*\")[0].replace(/\\s+/g, \" \") ===\n                        objLabel.replace(/\\s+/g, \" \")\n                  )\n                : node.kpi === defaultMeasureLabel &&\n                  node.name.split(\"*\")[0].replace(/\\s+/g, \" \") ===\n                    objLabel.replace(/\\s+/g, \" \")\n              : searchdata.sortBy == -1\n              ? node.kpi === defaultMeasureLabel &&\n                node.name.split(\"*\")[0].replace(/\\s+/g, \" \") ===\n                  objLabel.replace(/\\s+/g, \" \")\n              : sortBy.some(\n                  (Item) =>\n                    node.kpi ===\n                      (Item.id == searchdata.sortBy ? Item.measures : \"\") &&\n                    node.name.split(\"*\")[0].replace(/\\s+/g, \" \") ===\n                      objLabel.replace(/\\s+/g, \" \")\n                );\n          });\n          if (grossMarginIndex !== -1) {\n            return [\n              ...prevNodes.slice(0, grossMarginIndex + 1),\n              ...respData.map((data, i) => ({ ...data, id: objId + i + 1 })),\n              ...prevNodes.slice(grossMarginIndex + 1),\n            ];\n          } else {\n            return prevNodes;\n          }\n        });\n      })\n      .catch((e) => {\n        setLoader(false);\n      });\n  };\n\n  const jsonToTree = (flatArray, options) => {\n    options = {\n      id: \"id\",\n      parentId: \"parentId\",\n      children: \"subRows\",\n      ...options,\n    };\n    const dictionary = {};\n    const tree = [];\n    const children = options.children;\n    flatArray.forEach((node) => {\n      const nodeId = node[options.id];\n      const nodeParentId = node[options.parentId];\n      dictionary[nodeId] = {\n        [children]: [],\n        ...node,\n        ...dictionary[nodeId],\n      };\n      dictionary[nodeParentId] = dictionary[nodeParentId] || { [children]: [] };\n      dictionary[nodeParentId][children].push(dictionary[nodeId]);\n    });\n\n    Object.values(dictionary).forEach((obj) => {\n      if (typeof obj[options.id] === \"undefined\") {\n        tree.push(...obj[children]);\n      }\n    });\n    return tree;\n  };\n\n  const dynamicColumns = [\n    // for data[0] where accessorKey is name\n    {\n      header: (\n        // <div className=\"header-label\">BU Customer Project Res</div>\n        <div className=\"legendContainer wrap\">\n          <div className=\"legend lightbrown\">\n            <div className=\"legendCircle\"></div>\n            <div className=\"legendTxt\">\n              <b>DP</b>\n            </div>\n          </div>\n          <div className=\"legend darkgreen\">\n            <div className=\"legendCircle\"></div>\n            <div className=\"legendTxt\">\n              <b>Customer</b>\n            </div>\n          </div>\n          <div className=\"legend purple\">\n            <div className=\"legendCircle\"></div>\n            <div className=\"legendTxt\">\n              <b>Project</b>\n            </div>\n          </div>\n          <div className=\"legend brown\">\n            <div className=\"legendCircle\"></div>\n            <div className=\"legendTxt\">\n              <b>Res</b>\n            </div>\n          </div>\n        </div>\n      ),\n      accessorKey: `name`,\n      enableGrouping: false,\n      GroupedCell: ({ cell }) => {\n        if (selectType == \"DP\") {\n          //--------------------//----------------------//-----------------------Parent Level (Delivery Partner)\n\n          const department = dpList.find(\n            (dep) => dep.label === cell.getValue()\n          );\n\n          const [activeIcons, setActiveIcons] = useState({});\n\n          const handleClick = () => {\n            if (department) {\n              const { value, label } = department;\n              const isDataPresent = nodes.some((node) => {\n                return node.name.includes(`*${value}`);\n              });\n\n              if (isDataPresent) {\n                setActiveIcons((prevActiveIcons) => ({\n                  ...prevActiveIcons,\n                  [value]: false,\n                }));\n                setNodes((prevNodes) =>\n                  prevNodes.filter((node) => !node.name.includes(`*${value}`))\n                );\n              } else {\n                setActiveIcons((prevActiveIcons) => ({\n                  ...prevActiveIcons,\n                  [value]: true,\n                }));\n                HandleInsertedData(value, label, \"Customer\");\n              }\n            }\n          };\n\n          //--------------------//----------------------//-----------------------First Child Layer (Customer)\n\n          let custBU;\n          const cust = customer.find((dep) => {\n            if (dep.fullName === cell.getValue().split(\"*\")[0]) {\n              const value = cell.getValue().split(\"*\")[1];\n              custBU = value;\n            }\n            return dep.fullName === cell.getValue().split(\"*\")[0];\n          });\n\n          const [activeIcons1, setActiveIcons1] = useState({});\n\n          const handleClick1 = () => {\n            if (cust) {\n              const { id, fullName } = cust;\n              const isDataPresent = nodes.some((node) => {\n                return node.name.includes(`*${id}`);\n              });\n\n              if (isDataPresent) {\n                setActiveIcons1((prevActiveIcons) => ({\n                  ...prevActiveIcons,\n                  [id]: false,\n                }));\n                setNodes((prevNodes) =>\n                  prevNodes.filter((node) => !node.name.includes(`*${id}`))\n                );\n              } else {\n                setActiveIcons1((prevActiveIcons) => ({\n                  ...prevActiveIcons,\n                  [id]: true,\n                }));\n                HandleInsertedData1(\n                  id,\n                  fullName,\n                  \"Project\",\n                  \"Customer\",\n                  custBU\n                );\n              }\n            }\n          };\n\n          //--------------------//----------------------//-----------------------Second Child Layer (Project)\n\n          let projBU;\n          let custId;\n          const proj = project.find((dep) => {\n            if (dep.name === cell.getValue().split(\"*\")[0]) {\n              const value = cell.getValue().split(\"*\")[3];\n              projBU = value;\n              custId = cell.getValue().split(\"*\")[1];\n            }\n            return (\n              dep.name === cell.getValue().split(\"*\")[0] ||\n              dep.name === cell.getValue().split(\"*\")[0]\n            );\n          });\n          const [activeIcons2, setActiveIcons2] = useState({});\n\n          const handleClick2 = () => {\n            if (proj) {\n              const { id, name } = proj;\n              const isDataPresent = nodes.some((node) => {\n                return node.name.includes(`*${id}`);\n              });\n\n              if (isDataPresent) {\n                setActiveIcons2((prevActiveIcons) => ({\n                  ...prevActiveIcons,\n                  [id]: false,\n                }));\n                setNodes((prevNodes) =>\n                  prevNodes.filter((node) => !node.name.includes(`*${id}`))\n                );\n              } else {\n                setActiveIcons2((prevActiveIcons) => ({\n                  ...prevActiveIcons,\n                  [id]: true,\n                }));\n                HandleInsertedData2(id, name, \"Res\", \"Project\", projBU, custId);\n              }\n            }\n          };\n\n          //--------------------//----------------------//-----------------------Third Child Layer (Resource)\n\n          let resBU;\n          let projectID;\n          let custprojectId;\n          const res = resources.find((dep) => {\n            if (dep.fullName === cell.getValue().split(\"*\")[0]) {\n              const value = cell.getValue().split(\"*\")[3];\n              projectID = cell.getValue().split(\"*\")[1];\n              custprojectId = cell.getValue().split(\"*\")[4];\n              resBU = value;\n            }\n            const fullNameParts = dep.fullName.split(\"*\")[0].split(\" \");\n            const cellValueParts = cell.getValue().split(\"*\")[0].split(\" \");\n\n            return cell.getValue().split(\"*\")[0] == \"\"\n              ? \"\"\n              : cellValueParts.every((value) => fullNameParts.includes(value));\n          });\n\n          const [activeIcons3, setActiveIcons3] = useState({});\n\n          const handleClick3 = () => {\n            if (res) {\n              const { id, fullName } = res;\n              const isDataPresent = nodes.some((node) => {\n                return node.name.includes(`*${id}`);\n              });\n\n              if (isDataPresent) {\n                setActiveIcons3((prevActiveIcons) => ({\n                  ...prevActiveIcons,\n                  [id]: false,\n                }));\n                setNodes((prevNodes) =>\n                  prevNodes.filter((node) => !node.name.includes(`*${id}`))\n                );\n              } else {\n                setActiveIcons3((prevActiveIcons) => ({\n                  ...prevActiveIcons,\n                  [id]: true,\n                }));\n                HandleInsertedData3(\n                  id,\n                  fullName,\n                  \"Leaf\",\n                  \"Res\",\n                  resBU,\n                  projectID,\n                  custprojectId\n                );\n              }\n            }\n          };\n\n          //--------------------//----------------------//-----------------------Execution of the Layers\n          if (department) {\n            const { value } = department;\n            const isActive = activeIcons[value];\n            return (\n              <span\n                style={{ cursor: \"pointer\" }}\n                value={department.value}\n                onClick={() => {\n                  handleClick();\n                }}\n                className={\"parent\"}\n              >\n                {isActive ? <FaChevronCircleDown /> : <FaChevronCircleRight />}{\" \"}\n                <b\n                  className=\"buRM\"\n                  title={\n                    department.label + \" (\" + cell.row.original.count + \")\"\n                  }\n                >\n                  {department.label} ({cell.row.original.count})\n                </b>\n              </span>\n            );\n          } else if (cust) {\n            const { id } = cust;\n            const isActive1 = activeIcons1[id];\n            return (\n              <span\n                style={{ cursor: \"pointer\" }}\n                value={cust.id}\n                onClick={() => {\n                  handleClick1();\n                }}\n                className={\"parent\"}\n              >\n                {isActive1 ? <FaChevronCircleDown /> : <FaChevronCircleRight />}{\" \"}\n                <b\n                  className=\"custRM\"\n                  title={cust.fullName + \" (\" + cell.row.original.count + \")\"}\n                >\n                  {cust.fullName} ({cell.row.original.count})\n                </b>\n              </span>\n            );\n          } else if (proj) {\n            const { id } = proj;\n            const isActive2 = activeIcons2[id];\n            return (\n              <span\n                style={{ cursor: \"pointer\" }}\n                value={proj.id}\n                onClick={() => {\n                  handleClick2();\n                }}\n                className={\"parent\"}\n              >\n                {isActive2 ? <FaChevronCircleDown /> : <FaChevronCircleRight />}{\" \"}\n                <b\n                  className=\"projRM\"\n                  title={proj.name + \" (\" + cell.row.original.count + \")\"}\n                >\n                  {proj.name} ({cell.row.original.count})\n                </b>\n              </span>\n            );\n          } else if (res) {\n            const { id } = res;\n            const isActive3 = activeIcons3[id];\n            return (\n              <span\n                style={{ cursor: \"pointer\" }}\n                value={res.id}\n                onClick={() => {\n                  handleClick3();\n                }}\n                className={\"parent\"}\n              >\n                {isActive3 ? <FaChevronCircleDown /> : <FaChevronCircleRight />}{\" \"}\n                <b\n                  className=\"resRM\"\n                  title={res.fullName + \" (\" + cell.row.original.count + \")\"}\n                >\n                  {res.fullName}\n                </b>\n              </span>\n            );\n          } else {\n            return (\n              <span\n                className=\"child\"\n                title={\n                  cell.row.original.name === \"\"\n                    ? \"Summary\"\n                    : cell.getValue().split(\"*\")[0] +\n                      \" (\" +\n                      cell.row.original.count +\n                      \")\"\n                }\n              >\n                <b\n                  className={\n                    cell.getValue().split(\"*\")[2] == \"Customer\"\n                      ? \"buRM\"\n                      : cell.getValue().split(\"*\")[2] == \"Project\"\n                      ? \"custRM\"\n                      : cell.getValue().split(\"*\")[2] == \"Res\"\n                      ? \"projRM\"\n                      : cell.getValue().split(\"*\")[2] == \"Leaf\"\n                      ? \"resRM\"\n                      : \"\"\n                  }\n                  style={{\n                    display:\n                      cell.row.original.name == \"\" ||\n                      cell.getValue().split(\"*\")[0] == \"\"\n                        ? \"flex\"\n                        : \"\",\n                    justifyContent:\n                      cell.row.original.name == \"\" ||\n                      cell.getValue().split(\"*\")[0] == \"\"\n                        ? \"center\"\n                        : \"\",\n                  }}\n                >\n                  {cell.row.original.name == \"\" ? (\n                    \"Summary\"\n                  ) : cell.getValue().split(\"*\")[0] == \"\" ? (\n                    \"Summary\"\n                  ) : (\n                    <div onClick={handleClick1}>\n                      <FaChevronCircleRight /> {cell.getValue().split(\"*\")[0]}\n                    </div>\n                  )}{\" \"}\n                  {cell.row.original.count === 0\n                    ? \"\"\n                    : `(${cell.row.original.count})`}\n                </b>{\" \"}\n              </span>\n            );\n          }\n        }\n      },\n    },\n    {\n      header: \"\",\n      accessorKey: `kpi`,\n      Cell: ({ cell }) => {\n        const department = dpList.find((dep) => {\n          return dep.label === cell.row.original.name;\n        });\n\n        const cust = customer.find((dep) => {\n          return dep.fullName === cell.row.original.name.split(\"*\")[0];\n        });\n\n        const proj = project.find((dep) => {\n          return dep.name === cell.row.original.name.split(\"*\")[0];\n        });\n\n        const res = resources.find((dep) => {\n          const fullNameParts = dep.fullName.split(\"*\")[0].split(\" \");\n          const cellValueParts = cell.row.original.name\n            .split(\"*\")[0]\n            .split(\" \");\n\n          return cell.row.original.name.split(\"*\")[0] == \"\"\n            ? \"\"\n            : cellValueParts.every((value) => fullNameParts.includes(value));\n        });\n\n        return (\n          <span>\n            <b\n              className={\n                department\n                  ? \"buRMchild\"\n                  : cust\n                  ? \"custRMchild\"\n                  : proj\n                  ? \"projRMchild\"\n                  : res\n                  ? \"resRMchild\"\n                  : cell.row.original.name.split(\"*\")[2] == \"Customer\"\n                  ? \"buRMchild\"\n                  : cell.row.original.name.split(\"*\")[2] == \"Project\"\n                  ? \"custRMchild\"\n                  : cell.row.original.name.split(\"*\")[2] == \"Res\"\n                  ? \"projRMchild\"\n                  : cell.row.original.name.split(\"*\")[2] == \"Leaf\"\n                  ? \"resRMchild\"\n                  : \"\"\n              }\n            >\n              {cell.getValue()}\n            </b>\n          </span>\n        );\n      },\n    },\n  ];\n\n  data.forEach((item, index) => {\n    if (index > 1 && item !== \"Total\") {\n      const dateObj = new Date(\n        `${item.slice(0, 4)}-${item.slice(5, 7)}-${item.slice(8, 10)}`\n      );\n\n      const header = dateObj\n        .toLocaleDateString(\"en-US\", { month: \"short\", year: \"numeric\" })\n        .replace(\" \", \"-\");\n      const currentDate = new Date()\n        .toLocaleDateString(\"en-US\", {\n          month: \"short\",\n          year: \"numeric\",\n        })\n        .replace(\" \", \"-\");\n\n      let greenDate = new Date(header) >= new Date(currentDate);\n      dynamicColumns.push({\n        header,\n        accessorKey: `${item}`,\n        className: \"software\",\n        Cell: ({ cell }) => (\n          <span className={greenDate ? \"greenColumn\" : \"\"}>\n            {cell.row.original.kpi == \"Planned Revenue\" ||\n            cell.row.original.kpi == \"Actual Revenue\" ||\n            cell.row.original.kpi == \"Recognized Revenue\" ||\n            cell.row.original.kpi == \"Resource Direct Cost\" ||\n            cell.row.original.kpi == \"Other Direct Cost\" ||\n            cell.row.original.kpi == \"Gross Margin\" ? (\n              <span style={{ display: \"block\", float: \"left\" }}>$</span>\n            ) : (\n              \"\"\n            )}\n            <span style={{ display: \"block\", float: \"right\" }}>\n              {cell.getValue() == null\n                ? 0\n                : cell.getValue()?.toLocaleString(\"en-US\")}\n              {cell.row.original.kpi == \"Gross Margin %\" ||\n              cell.row.original.kpi == \"Billable Utilization\" ||\n              (cell.row.original.kpi == \"FTE\" &&\n                cell.row.original.descr != \"hcfte\") ||\n              (cell.row.original.kpi == \"SUBK\" &&\n                cell.row.original.descr != \"hcsubk\") ||\n              cell.row.original.kpi == \"Billed Utilization\" ? (\n                <span>%</span>\n              ) : (\n                \"\"\n              )}\n            </span>\n          </span>\n        ),\n      });\n    }\n  });\n\n  {\n    /*----------------------------------Total-------------------------------- */\n  }\n\n  const columnIndex = dynamicColumns.length;\n\n  const newColumn = {\n    header: \"Total\",\n    accessorKey: `Total`,\n    Cell: ({ cell }) => (\n      <>\n        {cell.row.original.kpi == \"Planned Revenue\" ||\n        cell.row.original.kpi == \"Actual Revenue\" ||\n        cell.row.original.kpi == \"Recognized Revenue\" ||\n        cell.row.original.kpi == \"Resource Direct Cost\" ||\n        cell.row.original.kpi == \"Other Direct Cost\" ||\n        cell.row.original.kpi == \"Gross Margin\" ? (\n          <span style={{ display: \"block\", float: \"left\" }}>\n            <b>$</b>\n          </span>\n        ) : (\n          \"\"\n        )}\n        <span style={{ display: \"block\", float: \"right\" }} className=\"total\">\n          <b>\n            {cell.getValue()?.toLocaleString(\"en-US\")}\n            {cell.row.original.kpi == \"Gross Margin %\" ||\n            cell.row.original.kpi == \"Billable Utilization\" ||\n            (cell.row.original.kpi == \"FTE\" &&\n              cell.row.original.descr != \"hcfte\") ||\n            (cell.row.original.kpi == \"SUBK\" &&\n              cell.row.original.descr != \"hcsubk\") ||\n            cell.row.original.kpi == \"Billed Utilization\" ? (\n              <span>{cell.getValue() == null ? 0 : \"%\"}</span>\n            ) : (\n              \"\"\n            )}\n          </b>\n        </span>\n      </>\n    ),\n  };\n\n  dynamicColumns.splice(columnIndex, 0, newColumn);\n  {\n    /*--------------------------Export Excel---------------------- */\n  }\n\n  const exportExcel = () => {\n    import(\"exceljs\").then((ExcelJS) => {\n      const workbook = new ExcelJS.Workbook();\n      const worksheet = workbook.addWorksheet(\"Revenue Analysis\");\n      let desiredColumnOrder = [];\n      let cols = [];\n      cols = data;\n      desiredColumnOrder = cols;\n      //----------------Months Sorting in order-----------------\n      desiredColumnOrder.sort((colA, colB) => {\n        const [, yearA, monthA] = colA.split(\"_\");\n        const [, yearB, monthB] = colB.split(\"_\");\n\n        if (yearA !== yearB) {\n          return parseInt(yearA) - parseInt(yearB);\n        }\n        return parseInt(monthA) - parseInt(monthB);\n      });\n      const wantedValues = data.concat(nodes).map((item) => {\n        const obj = {};\n        data.forEach((col) => {\n          const value = item[col];\n          if (typeof value === \"string\") {\n            const [extractedValue, ,] = value.split(\"^&\");\n            obj[col] = extractedValue;\n          } else if (typeof value === \"number\") {\n            obj[col] = value.toLocaleString(\"en-US\");\n          } else {\n            obj[col] = value;\n          }\n        });\n\n        if (\"name\" in obj && obj[\"name\"] === \"\") {\n          obj[\"name\"] = \"Summary\";\n        } else if (\n          \"name\" in obj &&\n          obj[\"name\"] !== \"\" &&\n          obj[\"name\"] !== undefined\n        ) {\n          obj[\"name\"] =\n            obj[\"name\"].split(\"*\")[0] == \"\"\n              ? \"Summary\"\n              : obj[\"name\"].split(\"*\")[0];\n        }\n\n        if (\n          obj[\"kpi\"] === \"Planned Revenue\" ||\n          obj[\"kpi\"] === \"Actual Revenue\" ||\n          obj[\"kpi\"] === \"Recognized Revenue\" ||\n          obj[\"kpi\"] === \"Resource Direct Cost\" ||\n          obj[\"kpi\"] === \"Other Direct Cost\" ||\n          obj[\"kpi\"] === \"Gross Margin\"\n        ) {\n          Object.keys(obj).forEach((key) => {\n            if (key !== \"name\" && key !== \"kpi\" && !isNaN(obj[key])) {\n              // obj[key] = `$ ${obj[key]}`;\n              obj[key] = \"$\" + (obj[key] == null ? \"\" : obj[key]);\n            }\n          });\n        } else if (\n          obj[\"kpi\"] === \"Gross Margin %\" ||\n          obj[\"kpi\"] === \"Billable Utilization\" ||\n          obj[\"kpi\"] === \"Billed Utilization\" ||\n          obj[\"kpi\"] === \"FTE\" ||\n          obj[\"kpi\"] === \"SUBK\"\n        ) {\n          Object.keys(obj).forEach((key) => {\n            if (key !== \"name\" && key !== \"kpi\" && !isNaN(obj[key])) {\n              obj[key] = (obj[key] == null ? 0 : obj[key]) + \" %\";\n            }\n          });\n        }\n\n        return obj;\n      });\n\n      const formatMMMYYYY = (dateStr) => {\n        const [year, month, day] = dateStr.split(\"_\");\n        const monthName = new Date(`${year}-${month}-01`).toLocaleString(\n          \"en-us\",\n          { month: \"short\" }\n        );\n        return `${monthName}-${year}`;\n      };\n\n      const formatHeaderKey = (key) => {\n        if (key.match(/^\\d{4}_\\d{2}_\\d{2}$/)) {\n          return formatMMMYYYY(key);\n        }\n        return key;\n      };\n\n      const headerRow = {};\n      Object.keys(wantedValues[0]).forEach((key) => {\n        headerRow[key] =\n          formatHeaderKey(key) == \"name\"\n            ? \"DP  Customer  Project  Res\"\n            : formatHeaderKey(key) == \"kpi\"\n            ? \"\"\n            : formatHeaderKey(key);\n      });\n\n      const filteredValues = wantedValues.filter((item) =>\n        Object.values(item).some(\n          (value) => value !== null && value !== undefined && value !== \"\"\n        )\n      );\n\n      filteredValues.unshift(headerRow);\n\n      const rows = filteredValues.map((item) => {\n        const row = [];\n        desiredColumnOrder.forEach((col) => {\n          row.push(item[col]);\n        });\n        return row;\n      });\n\n      rows.forEach((row) => {\n        worksheet.addRow(row);\n      });\n\n      //--------------bold--------------------\n      [1].forEach((rowIndex) => {\n        const row = worksheet.getRow(rowIndex);\n        row.font = { bold: true };\n      });\n\n      // ----------  Name Merging ---------------------\n      const nameColumnIndex = desiredColumnOrder.indexOf(\"name\");\n\n      let mergeStartIndex = 1;\n      let currentName = rows[0][nameColumnIndex];\n\n      for (let rowIndex = 1; rowIndex < rows.length; rowIndex++) {\n        const row = rows[rowIndex];\n        const rowName = row[nameColumnIndex];\n\n        if (rowName !== currentName) {\n          if (rowIndex - mergeStartIndex > 0) {\n            worksheet.mergeCells(\n              mergeStartIndex + 1,\n              nameColumnIndex,\n              rowIndex,\n              nameColumnIndex\n            );\n          }\n\n          mergeStartIndex = rowIndex;\n          currentName = rowName;\n        }\n      }\n\n      if (rows.length - mergeStartIndex > 0) {\n        worksheet.mergeCells(\n          mergeStartIndex + 1,\n          nameColumnIndex,\n          rows.length,\n          nameColumnIndex\n        );\n      }\n\n      workbook.xlsx.writeBuffer().then((buffer) => {\n        saveAs(new Blob([buffer]), \"Revenue Analysis.xlsx\");\n      });\n    });\n  };\n\n  return (\n    <div className=\"materialReactExpandableTable headCountTable darkHeader\">\n      <div className=\"mb-2\" align=\" right \">\n        <RiFileExcel2Line\n          size=\"1.5em\"\n          title=\"Export to Excel\"\n          style={{ color: \"green\" }}\n          cursor=\"pointer\"\n          onClick={exportExcel}\n        />\n      </div>\n      <MaterialReactTable\n        columns={dynamicColumns}\n        data={nodes}\n        enableExpanding={(column) => column.id === \"name\"}\n        enableRowVirtualization={true}\n        enablePagination={false}\n        enableGlobalFilter={true}\n        enableDensityToggle={false}\n        enableFullScreenToggle={false}\n        enableHiding={false}\n        enableColumnFilters={false}\n        enableBottomToolbar={false}\n        enableTopToolbar={false}\n        enableColumnActions={false}\n        enableSorting={false}\n        filterFromLeafRows //apply filtering to all rows instead of just parent rows\n        initialState={{\n          showGlobalFilter: true,\n          grouping: [\"name\"],\n          expanded: true,\n          density: \"compact\",\n          columnPinning: { right: [\"Total\"] },\n        }} //expand all rows by default\n        muiTableContainerProps={\n          {\n            // sx: { height: \"49vh\", width: \"auto\" },\n          }\n        }\n        muiTableBodyProps={{\n          sx: {\n            \"&\": {\n              borderRight: \"1px solid #ccc\",\n              borderBottom: \"1px solid #ccc\",\n            },\n            \"& td\": {\n              borderRight: \"1px solid #ccc\",\n              height: \"22px\",\n              padding: \"0px 5px\",\n            },\n          },\n        }}\n        muiTableHeadProps={{\n          sx: {\n            \"& th\": {\n              borderTop: \"1px solid #ccc\",\n              borderRight: \"1px solid #ccc\",\n              background: \"#f4f4f4 \",\n              padding: \"0 5px\",\n            },\n          },\n        }}\n      />\n      {loader ? <Loader handleAbort={handleAbort} /> : \"\"}\n    </div>\n  );\n}\n\nexport default MarginAnalysisDP;\n","import React, { useState, useRef } from \"react\";\nimport MaterialReactTable from \"material-react-table\";\nimport { useEffect } from \"react\";\nimport \"./HeadCountTableComponent.scss\";\nimport moment from \"moment\";\nimport Loader from \"../Loader/Loader\";\nimport { environment } from \"../../environments/environment\";\nimport { FaChevronCircleRight, FaChevronCircleDown } from \"react-icons/fa\";\nimport axios from \"axios\";\nimport { RiFileExcel2Line } from \"react-icons/ri\";\n\nfunction MarginAnalysisCSL(props) {\n  const {\n    tableData,\n    column,\n    selectType,\n    month,\n    searchdata,\n    project,\n    customer,\n    resources,\n    cslList,\n    sortBy,\n    laterMeasureLabel,\n    defaultMeasureLabel,\n  } = props;\n  const baseUrl = environment.baseUrl;\n  const abortController = useRef(null);\n  const [loader, setLoader] = useState(false);\n  const name = column[0];\n  const kpi = column[1];\n  const handleAbort = () => {\n    abortController.current && abortController.current.abort();\n    setLoader(false);\n  };\n\n  const dates = column.slice(2).sort();\n\n  const adjustedColumn = [name, kpi, ...dates, \"Total\"];\n  const [data, setData] = useState(adjustedColumn);\n  const [nodes, setNodes] = useState([]);\n  useEffect(() => {\n    setData(props.column);\n  }, [props.column]);\n\n  useEffect(() => {\n    let id = 1;\n    for (let i = 0; i < tableData.length; i++) {\n      tableData[i].id = id;\n      id++;\n      if (id % 10000 == 17) {\n        id += 9984;\n      }\n    }\n\n    setNodes(jsonToTree(tableData));\n  }, [tableData]);\n\n  const Data = moment(month).startOf(\"month\").format(\"yyyy-MM-DD\");\n\n  {\n    /*-------------------------------------For Getting Customer's According to Customer Industry------------------------------ */\n  }\n  const HandleInsertedData = (objId, objLabel, innerColumn) => {\n    abortController.current = new AbortController();\n    const loaderTime = setTimeout(() => {\n      setLoader(true);\n    }, 2000);\n    //(\"in Handle Inserted Data .......\");\n    axios({\n      method: \"post\",\n      url:\n        baseUrl +\n        `/revenuemetricsms/RevenueMarginAnalysis/GetGMACSLFinancialsFinalData`,\n      data: {\n        ownerDivisions: -1,\n        month: Data,\n        duration: searchdata.duration,\n        countries: searchdata.countries,\n        searchType: searchdata.searchType,\n        busUnits: -1,\n        customers:\n          searchdata.customers == \"select\"\n            ? selectedCust\n            : searchdata.customers,\n        srcType: searchdata.searchType,\n        srcTypeId: objId,\n        tarType: innerColumn,\n        busUnitId: -1,\n        custId: searchdata.custId,\n        prjId: searchdata.prjId,\n        resId: searchdata.resId,\n        measures: searchdata.measures,\n        salesExecId: searchdata.salesExecId,\n        salesExecs: -1,\n        sortBy: searchdata.sortBy,\n        custCountries: searchdata.custCountries,\n        source: searchdata.source,\n        resTyp: searchdata.resTyp,\n        engCountries: searchdata.engCountries,\n        contTerms: searchdata.contTerms,\n        engComp: searchdata.engComp,\n        cslRes:\n          searchdata.cslRes == -1\n            ? \"104869169,199,235,257,825,881,1115,1165,130391575,91335222,1375,81587,106940587,81651,2627272,2607,2889,96657988,3129,4452476,3887,123558264,112875977,2120153,5019,117718248,5201\"\n            : searchdata.cslRes,\n        cslResId: objId,\n        dpRes: -1,\n        dpResId: -1,\n        indTypes: -1,\n        indTypesId: -1,\n      },\n      signal: abortController.current.signal,\n    })\n      .then((res) => {\n        setLoader(false);\n        clearTimeout(loaderTime);\n        let respData = res.data.data;\n        //(\"respData\", respData);\n        respData = respData.map((item) => {\n          return {\n            ...item,\n            name: item.name + \"*\" + objId + \"*\" + innerColumn,\n          };\n        });\n\n        //(\"respData\", respData);\n        setNodes((prevNodes) => {\n          const grossMarginIndex = prevNodes.findIndex((node) => {\n            return searchdata.measures !=\n              \"1350,638,965,639,640,641,643,644,872,761\"\n              ? searchdata.sortBy != -1\n                ? sortBy.some(\n                    (Item) =>\n                      node.kpi ===\n                        (Item.id == searchdata.sortBy ? Item.measures : \"\") &&\n                      node.name.split(\"*\")[0] === objLabel\n                  )\n                : node.kpi === defaultMeasureLabel &&\n                  node.name.split(\"*\")[0] === objLabel\n              : searchdata.sortBy == -1\n              ? node.kpi === defaultMeasureLabel &&\n                node.name.split(\"*\")[0] === objLabel\n              : sortBy.some(\n                  (Item) =>\n                    node.kpi ===\n                      (Item.id == searchdata.sortBy ? Item.measures : \"\") &&\n                    node.name.split(\"*\")[0] === objLabel\n                );\n          });\n          //(\"grossMarginIndex\", grossMarginIndex);\n          if (grossMarginIndex !== -1) {\n            return [\n              ...prevNodes.slice(0, grossMarginIndex + 1),\n              ...respData.map((data, i) => ({ ...data, id: objId + i + 1 })),\n              ...prevNodes.slice(grossMarginIndex + 1),\n            ];\n          } else {\n            return prevNodes;\n          }\n        });\n      })\n      .catch((e) => {\n        setLoader(false);\n      });\n  };\n\n  {\n    /*-------------------------------------For Getting Project's According to Customer------------------------------ */\n  }\n\n  const HandleInsertedData1 = (\n    objId,\n    objLabel,\n    innerColumn,\n    source,\n    custBU\n  ) => {\n    abortController.current = new AbortController();\n    const loaderTime = setTimeout(() => {\n      setLoader(true);\n    }, 2000);\n    //(\"in Handle Inserted Data 1 .......\");\n    axios({\n      method: \"post\",\n      url:\n        baseUrl +\n        `/revenuemetricsms/RevenueMarginAnalysis/GetFinancialsFinalData`,\n      data: {\n        ownerDivisions: -1,\n        month: Data,\n        duration: searchdata.duration,\n        countries: searchdata.countries,\n        searchType: \"CSL\",\n        busUnits: -1,\n        customers:\n          searchdata.customers == \"select\"\n            ? selectedCust\n            : searchdata.customers,\n        srcType: source,\n        srcTypeId: objId,\n        tarType: innerColumn,\n        busUnitId: -1,\n        custId: objId,\n        prjId: searchdata.prjId,\n        resId: -1,\n        measures: searchdata.measures,\n        salesExecId: searchdata.salesExecId,\n        salesExecs: -1,\n        sortBy: searchdata.sortBy,\n        custCountries: searchdata.custCountries,\n        source: searchdata.source,\n        resTyp: searchdata.resTyp,\n        engCountries: searchdata.engCountries,\n        contTerms: searchdata.contTerms,\n        engComp: searchdata.engComp,\n        cslRes:\n          searchdata.cslRes == -1\n            ? \"104869169,199,235,257,825,881,1115,1165,130391575,91335222,1375,81587,106940587,81651,2627272,2607,2889,96657988,3129,4452476,3887,123558264,112875977,2120153,5019,117718248,5201\"\n            : searchdata.cslRes,\n        cslResId: searchdata.cslResId,\n        dpRes: -1,\n        dpResId: custBU,\n        indTypes: -1,\n        indTypesId: -1,\n      },\n      signal: abortController.current.signal,\n    })\n      .then((res) => {\n        setLoader(false);\n        clearTimeout(loaderTime);\n        let respData = res.data.data;\n        //(\"respData\", respData);\n        respData = respData.map((item) => {\n          return {\n            ...item,\n            name: item.name + \"*\" + objId + \"*\" + innerColumn + \"*\" + custBU,\n          };\n        });\n        setNodes((prevNodes) => {\n          const grossMarginIndex = prevNodes.findIndex((node) => {\n            return searchdata.measures !=\n              \"1350,638,965,639,640,641,643,644,872,761\"\n              ? searchdata.sortBy != -1\n                ? sortBy.some(\n                    (Item) =>\n                      node.kpi ===\n                        (Item.id == searchdata.sortBy ? Item.measures : \"\") &&\n                      node.name.split(\"*\")[0] === objLabel\n                  )\n                : node.kpi === defaultMeasureLabel &&\n                  node.name.split(\"*\")[0] === objLabel\n              : searchdata.sortBy == -1\n              ? node.kpi === defaultMeasureLabel &&\n                node.name.split(\"*\")[0] === objLabel\n              : sortBy.some(\n                  (Item) =>\n                    node.kpi ===\n                      (Item.id == searchdata.sortBy ? Item.measures : \"\") &&\n                    node.name.split(\"*\")[0] === objLabel\n                );\n          });\n          if (grossMarginIndex !== -1) {\n            return [\n              ...prevNodes.slice(0, grossMarginIndex + 1),\n              ...respData.map((data, i) => ({ ...data, id: objId + i + 1 })),\n              ...prevNodes.slice(grossMarginIndex + 1),\n            ];\n          } else {\n            return prevNodes;\n          }\n        });\n      })\n      .catch((e) => {\n        setLoader(false);\n      });\n  };\n\n  const HandleInsertedData2 = (\n    objId,\n    objLabel,\n    innerColumn,\n    source,\n    custBU,\n    custId\n  ) => {\n    abortController.current = new AbortController();\n    const loaderTime = setTimeout(() => {\n      setLoader(true);\n    }, 2000);\n    axios({\n      method: \"post\",\n      url:\n        baseUrl +\n        `/revenuemetricsms/RevenueMarginAnalysis/GetFinancialsFinalData`,\n      data: {\n        ownerDivisions: -1,\n        month: Data,\n        duration: searchdata.duration,\n        countries: searchdata.countries,\n        searchType: \"CSL\",\n        busUnits: -1,\n        customers:\n          searchdata.customers == \"select\"\n            ? selectedCust\n            : searchdata.customers,\n        srcType: source,\n        srcTypeId: objId,\n        tarType: innerColumn,\n        busUnitId: -1,\n        custId: custId,\n        prjId: objId,\n        resId: -1,\n        measures: searchdata.measures,\n        salesExecId: searchdata.salesExecId,\n        salesExecs: -1,\n        sortBy: searchdata.sortBy,\n        custCountries: searchdata.custCountries,\n        source: searchdata.source,\n        resTyp: searchdata.resTyp,\n        engCountries: searchdata.engCountries,\n        contTerms: searchdata.contTerms,\n        engComp: searchdata.engComp,\n        cslRes:\n          searchdata.cslRes == -1\n            ? \"104869169,199,235,257,825,881,1115,1165,130391575,91335222,1375,81587,106940587,81651,2627272,2607,2889,96657988,3129,4452476,3887,123558264,112875977,2120153,5019,117718248,5201\"\n            : searchdata.cslRes,\n        cslResId: searchdata.cslResId,\n        dpRes: -1,\n        dpResId: custBU,\n        indTypes: -1,\n        indTypesId: -1,\n      },\n      signal: abortController.current.signal,\n    })\n      .then((res) => {\n        setLoader(false);\n        clearTimeout(loaderTime);\n        let respData = res.data.data;\n        respData = respData.map((item) => {\n          return {\n            ...item,\n            name:\n              item.name +\n              \"*\" +\n              objId +\n              \"*\" +\n              innerColumn +\n              \"*\" +\n              custBU +\n              \"*\" +\n              custId,\n          };\n        });\n        setNodes((prevNodes) => {\n          const grossMarginIndex = prevNodes.findIndex((node) => {\n            return searchdata.measures !=\n              \"1350,638,965,639,640,641,643,644,872,761\"\n              ? searchdata.sortBy != -1\n                ? sortBy.some(\n                    (Item) =>\n                      node.kpi ===\n                        (Item.id == searchdata.sortBy ? Item.measures : \"\") &&\n                      node.name.split(\"*\")[0] === objLabel\n                  )\n                : node.kpi === defaultMeasureLabel &&\n                  node.name.split(\"*\")[0] === objLabel\n              : searchdata.sortBy == -1\n              ? node.kpi === defaultMeasureLabel &&\n                node.name.split(\"*\")[0] === objLabel\n              : sortBy.some(\n                  (Item) =>\n                    node.kpi ===\n                      (Item.id == searchdata.sortBy ? Item.measures : \"\") &&\n                    node.name.split(\"*\")[0] === objLabel\n                );\n          });\n          if (grossMarginIndex !== -1) {\n            return [\n              ...prevNodes.slice(0, grossMarginIndex + 1),\n              ...respData.map((data, i) => ({ ...data, id: objId + i + 1 })),\n              ...prevNodes.slice(grossMarginIndex + 1),\n            ];\n          } else {\n            return prevNodes;\n          }\n        });\n      })\n      .catch((e) => {\n        setLoader(false);\n      });\n  };\n\n  const HandleInsertedData3 = (\n    objId,\n    objLabel,\n    innerColumn,\n    source,\n    custBU,\n    projectID,\n    custprojectId\n  ) => {\n    abortController.current = new AbortController();\n    const loaderTime = setTimeout(() => {\n      setLoader(true);\n    }, 2000);\n    axios({\n      method: \"post\",\n      url:\n        baseUrl +\n        `/revenuemetricsms/RevenueMarginAnalysis/GetGMACSLFinancialsFinalData`,\n      data: {\n        ownerDivisions: -1,\n        month: Data,\n        duration: searchdata.duration,\n        countries: searchdata.countries,\n        searchType: \"CSL\",\n        busUnits: -1,\n        customers:\n          searchdata.customers == \"select\"\n            ? selectedCust\n            : searchdata.customers,\n        srcType: source,\n        srcTypeId: objId,\n        tarType: innerColumn,\n        busUnitId: -1,\n        custId: custprojectId,\n        prjId: projectID,\n        resId: -1,\n        measures: searchdata.measures,\n        salesExecId: searchdata.salesExecId,\n        salesExecs: -1,\n        sortBy: searchdata.sortBy,\n        custCountries: searchdata.custCountries,\n        source: searchdata.source,\n        resTyp: searchdata.resTyp,\n        engCountries: searchdata.engCountries,\n        contTerms: searchdata.contTerms,\n        engComp: searchdata.engComp,\n        cslRes:\n          searchdata.cslRes == -1\n            ? \"104869169,199,235,257,825,881,1115,1165,130391575,91335222,1375,81587,106940587,81651,2627272,2607,2889,96657988,3129,4452476,3887,123558264,112875977,2120153,5019,117718248,5201\"\n            : searchdata.cslRes,\n        cslResId: searchdata.cslResId,\n        dpRes: -1,\n        dpResId: custBU,\n        indTypes: -1,\n        indTypesId: -1,\n      },\n      signal: abortController.current.signal,\n    })\n      .then((res) => {\n        setLoader(false);\n        clearTimeout(loaderTime);\n        let respData = res.data.data;\n        respData = respData.map((item) => {\n          return {\n            ...item,\n            name: item.name + \"*\" + objId + \"*\" + innerColumn + \"*\" + custBU,\n          };\n        });\n        setNodes((prevNodes) => {\n          const grossMarginIndex = prevNodes.findIndex((node) => {\n            return searchdata.measures !=\n              \"1350,638,965,639,640,641,643,644,872,761\"\n              ? searchdata.sortBy != -1\n                ? sortBy.some(\n                    (Item) =>\n                      node.kpi ===\n                        (Item.id == searchdata.sortBy ? Item.measures : \"\") &&\n                      node.name.split(\"*\")[0].replace(/\\s+/g, \" \") ===\n                        objLabel.replace(/\\s+/g, \" \")\n                  )\n                : node.kpi === defaultMeasureLabel &&\n                  node.name.split(\"*\")[0].replace(/\\s+/g, \" \") ===\n                    objLabel.replace(/\\s+/g, \" \")\n              : searchdata.sortBy == -1\n              ? node.kpi === defaultMeasureLabel &&\n                node.name.split(\"*\")[0].replace(/\\s+/g, \" \") ===\n                  objLabel.replace(/\\s+/g, \" \")\n              : sortBy.some(\n                  (Item) =>\n                    node.kpi ===\n                      (Item.id == searchdata.sortBy ? Item.measures : \"\") &&\n                    node.name.split(\"*\")[0].replace(/\\s+/g, \" \") ===\n                      objLabel.replace(/\\s+/g, \" \")\n                );\n          });\n          if (grossMarginIndex !== -1) {\n            return [\n              ...prevNodes.slice(0, grossMarginIndex + 1),\n              ...respData.map((data, i) => ({ ...data, id: objId + i + 1 })),\n              ...prevNodes.slice(grossMarginIndex + 1),\n            ];\n          } else {\n            return prevNodes;\n          }\n        });\n      })\n      .catch((e) => {\n        setLoader(false);\n      });\n  };\n\n  const jsonToTree = (flatArray, options) => {\n    options = {\n      id: \"id\",\n      parentId: \"parentId\",\n      children: \"subRows\",\n      ...options,\n    };\n    const dictionary = {};\n    const tree = [];\n    const children = options.children;\n    flatArray.forEach((node) => {\n      const nodeId = node[options.id];\n      const nodeParentId = node[options.parentId];\n      dictionary[nodeId] = {\n        [children]: [],\n        ...node,\n        ...dictionary[nodeId],\n      };\n      dictionary[nodeParentId] = dictionary[nodeParentId] || { [children]: [] };\n      dictionary[nodeParentId][children].push(dictionary[nodeId]);\n    });\n\n    Object.values(dictionary).forEach((obj) => {\n      if (typeof obj[options.id] === \"undefined\") {\n        tree.push(...obj[children]);\n      }\n    });\n    return tree;\n  };\n\n  const dynamicColumns = [\n    // for data[0] where accessorKey is name\n    {\n      header: (\n        // <div className=\"header-label\">BU Customer Project Res</div>\n        <div className=\"legendContainer wrap\">\n          <div className=\"legend lightbrown\">\n            <div className=\"legendCircle\"></div>\n            <div className=\"legendTxt\">\n              <b>CSL</b>\n            </div>\n          </div>\n          <div className=\"legend darkgreen\">\n            <div className=\"legendCircle\"></div>\n            <div className=\"legendTxt\">\n              <b>Customer</b>\n            </div>\n          </div>\n          <div className=\"legend purple\">\n            <div className=\"legendCircle\"></div>\n            <div className=\"legendTxt\">\n              <b>Project</b>\n            </div>\n          </div>\n          <div className=\"legend brown\">\n            <div className=\"legendCircle\"></div>\n            <div className=\"legendTxt\">\n              <b>Res</b>\n            </div>\n          </div>\n        </div>\n      ),\n      accessorKey: `name`,\n      enableGrouping: false,\n      GroupedCell: ({ cell }) => {\n        if (selectType == \"CSL\") {\n          //--------------------//----------------------//-----------------------Parent Level (CSL)\n\n          const department = cslList.find(\n            (dep) => dep.label === cell.getValue()\n          );\n\n          const [activeIcons, setActiveIcons] = useState({});\n\n          const handleClick = () => {\n            if (department) {\n              const { value, label } = department;\n              const isDataPresent = nodes.some((node) => {\n                return node.name.includes(`*${value}`);\n              });\n              //(nodes);\n\n              if (isDataPresent) {\n                setActiveIcons((prevActiveIcons) => ({\n                  ...prevActiveIcons,\n                  [value]: false,\n                }));\n                setNodes((prevNodes) =>\n                  prevNodes.filter((node) => !node.name.includes(`*${value}`))\n                );\n              } else {\n                setActiveIcons((prevActiveIcons) => ({\n                  ...prevActiveIcons,\n                  [value]: true,\n                }));\n                HandleInsertedData(value, label, \"Customer\");\n              }\n            }\n          };\n\n          //--------------------//----------------------//-----------------------First Child Layer (Customer)\n\n          let custBU;\n          const cust = customer.find((dep) => {\n            if (dep.fullName === cell.getValue().split(\"*\")[0]) {\n              const value = cell.getValue().split(\"*\")[1];\n              custBU = value;\n            }\n            return dep.fullName === cell.getValue().split(\"*\")[0];\n          });\n\n          const [activeIcons1, setActiveIcons1] = useState({});\n\n          const handleClick1 = () => {\n            //(\"first\");\n            if (cust) {\n              const { id, fullName } = cust;\n              const isDataPresent = nodes.some((node) => {\n                return node.name.includes(`*${id}`);\n              });\n              //(nodes);\n\n              if (isDataPresent) {\n                setActiveIcons1((prevActiveIcons) => ({\n                  ...prevActiveIcons,\n                  [id]: false,\n                }));\n                setNodes((prevNodes) =>\n                  prevNodes.filter((node) => !node.name.includes(`*${id}`))\n                );\n              } else {\n                setActiveIcons1((prevActiveIcons) => ({\n                  ...prevActiveIcons,\n                  [id]: true,\n                }));\n                HandleInsertedData1(\n                  id,\n                  fullName,\n                  \"Project\",\n                  \"Customer\",\n                  custBU\n                );\n              }\n            }\n          };\n\n          //--------------------//----------------------//-----------------------Second Child Layer (Project)\n\n          let projBU;\n          let custId;\n          const proj = project.find((dep) => {\n            if (dep.name === cell.getValue().split(\"*\")[0]) {\n              const value = cell.getValue().split(\"*\")[3];\n              projBU = value;\n              custId = cell.getValue().split(\"*\")[1];\n            }\n            return (\n              dep.name === cell.getValue().split(\"*\")[0] ||\n              dep.name === cell.getValue().split(\"*\")[0]\n            );\n          });\n\n          const [activeIcons2, setActiveIcons2] = useState({});\n\n          const handleClick2 = () => {\n            //(\"Second\");\n            if (proj) {\n              const { id, name } = proj;\n              const isDataPresent = nodes.some((node) => {\n                return node.name.includes(`*${id}`);\n              });\n              //(nodes);\n\n              if (isDataPresent) {\n                setActiveIcons2((prevActiveIcons) => ({\n                  ...prevActiveIcons,\n                  [id]: false,\n                }));\n                setNodes((prevNodes) =>\n                  prevNodes.filter((node) => !node.name.includes(`*${id}`))\n                );\n              } else {\n                setActiveIcons2((prevActiveIcons) => ({\n                  ...prevActiveIcons,\n                  [id]: true,\n                }));\n                HandleInsertedData2(id, name, \"Res\", \"Project\", projBU, custId);\n              }\n            }\n          };\n\n          //--------------------//----------------------//-----------------------Third Child Layer (Resource)\n\n          let resBU;\n          let projectID;\n          let custprojectId;\n          const res = resources.find((dep) => {\n            if (dep.fullName === cell.getValue().split(\"*\")[0]) {\n              const value = cell.getValue().split(\"*\")[3];\n              projectID = cell.getValue().split(\"*\")[1];\n              custprojectId = cell.getValue().split(\"*\")[4];\n              resBU = value;\n            }\n            const fullNameParts = dep.fullName.split(\"*\")[0].split(\" \");\n            const cellValueParts = cell.getValue().split(\"*\")[0].split(\" \");\n\n            return cell.getValue().split(\"*\")[0] == \"\"\n              ? \"\"\n              : cellValueParts.every((value) => fullNameParts.includes(value));\n            // return dep.fullName.split(\"*\")[0] === cell.getValue().split(\"*\")[0];\n          });\n\n          const [activeIcons3, setActiveIcons3] = useState({});\n\n          const handleClick3 = () => {\n            //(\"Third\");\n            if (res) {\n              const { id, fullName } = res;\n              const isDataPresent = nodes.some((node) => {\n                return node.name.includes(`*${id}`);\n              });\n              //(nodes);\n\n              if (isDataPresent) {\n                setActiveIcons3((prevActiveIcons) => ({\n                  ...prevActiveIcons,\n                  [id]: false,\n                }));\n                setNodes((prevNodes) =>\n                  prevNodes.filter((node) => !node.name.includes(`*${id}`))\n                );\n              } else {\n                setActiveIcons3((prevActiveIcons) => ({\n                  ...prevActiveIcons,\n                  [id]: true,\n                }));\n                HandleInsertedData3(\n                  id,\n                  fullName,\n                  \"Leaf\",\n                  \"Res\",\n                  resBU,\n                  projectID,\n                  custprojectId\n                );\n              }\n            }\n          };\n\n          //--------------------//----------------------//-----------------------Execution of the Layers\n          if (department) {\n            const { value } = department;\n            const isActive = activeIcons[value];\n            return (\n              <span\n                style={{ cursor: \"pointer\" }}\n                value={department.value}\n                onClick={() => {\n                  handleClick();\n                }}\n                className={\"parent\"}\n              >\n                {isActive ? <FaChevronCircleDown /> : <FaChevronCircleRight />}{\" \"}\n                <b\n                  className=\"buRM\"\n                  title={\n                    department.label + \" (\" + cell.row.original.count + \")\"\n                  }\n                >\n                  {department.label} ({cell.row.original.count})\n                </b>\n              </span>\n            );\n          } else if (cust) {\n            const { id } = cust;\n            const isActive1 = activeIcons1[id];\n            return (\n              <span\n                style={{ cursor: \"pointer\" }}\n                value={cust.id}\n                onClick={() => {\n                  handleClick1();\n                }}\n                className={\"parent\"}\n              >\n                {isActive1 ? <FaChevronCircleDown /> : <FaChevronCircleRight />}{\" \"}\n                <b\n                  className=\"custRM\"\n                  title={cust.fullName + \" (\" + cell.row.original.count + \")\"}\n                >\n                  {cust.fullName} ({cell.row.original.count})\n                </b>\n              </span>\n            );\n          } else if (proj) {\n            const { id } = proj;\n            const isActive2 = activeIcons2[id];\n            return (\n              <span\n                style={{ cursor: \"pointer\" }}\n                value={proj.id}\n                onClick={() => {\n                  handleClick2();\n                }}\n                className={\"parent\"}\n              >\n                {isActive2 ? <FaChevronCircleDown /> : <FaChevronCircleRight />}{\" \"}\n                <b\n                  className=\"projRM\"\n                  title={proj.name + \" (\" + cell.row.original.count + \")\"}\n                >\n                  {proj.name} ({cell.row.original.count})\n                </b>\n              </span>\n            );\n          } else if (res) {\n            const { id } = res;\n            const isActive3 = activeIcons3[id];\n            return (\n              <span\n                style={{ cursor: \"pointer\" }}\n                value={res.id}\n                onClick={() => {\n                  handleClick3();\n                }}\n                className={\"parent\"}\n              >\n                {isActive3 ? <FaChevronCircleDown /> : <FaChevronCircleRight />}{\" \"}\n                <b\n                  className=\"resRM\"\n                  title={res.fullName + \" (\" + cell.row.original.count + \")\"}\n                >\n                  {res.fullName}\n                </b>\n              </span>\n            );\n          } else {\n            return (\n              <span\n                className=\"child\"\n                title={\n                  cell.row.original.name === \"\"\n                    ? \"Summary\"\n                    : cell.getValue().split(\"*\")[0] +\n                      \" (\" +\n                      cell.row.original.count +\n                      \")\"\n                }\n              >\n                <b\n                  className={\n                    cell.getValue().split(\"*\")[2] == \"Customer\"\n                      ? \"buRM\"\n                      : cell.getValue().split(\"*\")[2] == \"Project\"\n                      ? \"custRM\"\n                      : cell.getValue().split(\"*\")[2] == \"Res\"\n                      ? \"projRM\"\n                      : cell.getValue().split(\"*\")[2] == \"Leaf\"\n                      ? \"resRM\"\n                      : \"\"\n                  }\n                  style={{\n                    display:\n                      cell.row.original.name == \"\" ||\n                      cell.getValue().split(\"*\")[0] == \"\"\n                        ? \"flex\"\n                        : \"\",\n                    justifyContent:\n                      cell.row.original.name == \"\" ||\n                      cell.getValue().split(\"*\")[0] == \"\"\n                        ? \"center\"\n                        : \"\",\n                  }}\n                >\n                  {cell.row.original.name == \"\" ? (\n                    \"Summary\"\n                  ) : cell.getValue().split(\"*\")[0] == \"\" ? (\n                    \"Summary\"\n                  ) : (\n                    <div onClick={handleClick1}>\n                      <FaChevronCircleRight /> {cell.getValue().split(\"*\")[0]}\n                    </div>\n                  )}{\" \"}\n                  {cell.row.original.count === 0\n                    ? \"\"\n                    : `(${cell.row.original.count})`}\n                </b>{\" \"}\n              </span>\n            );\n          }\n        }\n      },\n    },\n    {\n      header: \"\",\n      accessorKey: `kpi`,\n      Cell: ({ cell }) => {\n        const department = cslList.find((dep) => {\n          return dep.label === cell.row.original.name;\n        });\n\n        const cust = customer.find((dep) => {\n          return dep.fullName === cell.row.original.name.split(\"*\")[0];\n        });\n\n        const proj = project.find((dep) => {\n          return dep.name === cell.row.original.name.split(\"*\")[0];\n        });\n\n        const res = resources.find((dep) => {\n          const fullNameParts = dep.fullName.split(\"*\")[0].split(\" \");\n          const cellValueParts = cell.row.original.name\n            .split(\"*\")[0]\n            .split(\" \");\n\n          return cell.row.original.name.split(\"*\")[0] == \"\"\n            ? \"\"\n            : cellValueParts.every((value) => fullNameParts.includes(value));\n        });\n\n        return (\n          <span>\n            <b\n              className={\n                department\n                  ? \"buRM\"\n                  : cust\n                  ? \"custRM\"\n                  : proj\n                  ? \"projRM\"\n                  : res\n                  ? \"resRM\"\n                  : cell.row.original.name.split(\"*\")[2] == \"Customer\"\n                  ? \"buRM\"\n                  : cell.row.original.name.split(\"*\")[2] == \"Project\"\n                  ? \"custRM\"\n                  : cell.row.original.name.split(\"*\")[2] == \"Res\"\n                  ? \"projRM\"\n                  : cell.row.original.name.split(\"*\")[2] == \"Leaf\"\n                  ? \"resRM\"\n                  : \"\"\n              }\n            >\n              {cell.getValue()}\n            </b>\n          </span>\n        );\n      },\n    },\n  ];\n\n  data.forEach((item, index) => {\n    if (index > 1 && item !== \"Total\") {\n      const dateObj = new Date(\n        `${item.slice(0, 4)}-${item.slice(5, 7)}-${item.slice(8, 10)}`\n      );\n\n      const header = dateObj\n        .toLocaleDateString(\"en-US\", { month: \"short\", year: \"numeric\" })\n        .replace(\" \", \"-\");\n      const currentDate = new Date()\n        .toLocaleDateString(\"en-US\", {\n          month: \"short\",\n          year: \"numeric\",\n        })\n        .replace(\" \", \"-\");\n\n      let greenDate = new Date(header) >= new Date(currentDate);\n      dynamicColumns.push({\n        header,\n        accessorKey: `${item}`,\n        className: \"software\",\n        Cell: ({ cell }) => (\n          <span className={greenDate ? \"greenColumn\" : \"\"}>\n            {cell.row.original.kpi == \"Planned Revenue\" ||\n            cell.row.original.kpi == \"Actual Revenue\" ||\n            cell.row.original.kpi == \"Recognized Revenue\" ||\n            cell.row.original.kpi == \"Resource Direct Cost\" ||\n            cell.row.original.kpi == \"Other Direct Cost\" ||\n            cell.row.original.kpi == \"Gross Margin\" ? (\n              <span style={{ display: \"block\", float: \"left\" }}>$</span>\n            ) : (\n              \"\"\n            )}\n            <span style={{ display: \"block\", float: \"right\" }}>\n              {cell.getValue() == null\n                ? 0\n                : cell.getValue()?.toLocaleString(\"en-US\")}\n              {cell.row.original.kpi == \"Gross Margin %\" ||\n              cell.row.original.kpi == \"Billable Utilization\" ||\n              (cell.row.original.kpi == \"FTE\" &&\n                cell.row.original.descr != \"hcfte\") ||\n              (cell.row.original.kpi == \"SUBK\" &&\n                cell.row.original.descr != \"hcsubk\") ||\n              cell.row.original.kpi == \"Billed Utilization\" ? (\n                <span>%</span>\n              ) : (\n                \"\"\n              )}\n            </span>\n          </span>\n        ),\n      });\n    }\n  });\n\n  {\n    /*----------------------------------Total-------------------------------- */\n  }\n\n  const columnIndex = dynamicColumns.length;\n\n  const newColumn = {\n    header: \"Total\",\n    accessorKey: `Total`,\n    Cell: ({ cell }) => (\n      <>\n        {cell.row.original.kpi == \"Planned Revenue\" ||\n        cell.row.original.kpi == \"Actual Revenue\" ||\n        cell.row.original.kpi == \"Recognized Revenue\" ||\n        cell.row.original.kpi == \"Resource Direct Cost\" ||\n        cell.row.original.kpi == \"Other Direct Cost\" ||\n        cell.row.original.kpi == \"Gross Margin\" ? (\n          <span style={{ display: \"block\", float: \"left\" }}>\n            <b>$</b>\n          </span>\n        ) : (\n          \"\"\n        )}\n        <span style={{ display: \"block\", float: \"right\" }} className=\"total\">\n          <b>\n            {cell.getValue()?.toLocaleString(\"en-US\")}\n            {cell.row.original.kpi == \"Gross Margin %\" ||\n            cell.row.original.kpi == \"Billable Utilization\" ||\n            (cell.row.original.kpi == \"FTE\" &&\n              cell.row.original.descr != \"hcfte\") ||\n            (cell.row.original.kpi == \"SUBK\" &&\n              cell.row.original.descr != \"hcsubk\") ||\n            cell.row.original.kpi == \"Billed Utilization\" ? (\n              <span>{cell.getValue() == null ? 0 : \"%\"}</span>\n            ) : (\n              \"\"\n            )}\n          </b>\n        </span>\n      </>\n    ),\n  };\n\n  dynamicColumns.splice(columnIndex, 0, newColumn);\n  {\n    /*--------------------------Export Excel---------------------- */\n  }\n\n  const exportExcel = () => {\n    import(\"exceljs\").then((ExcelJS) => {\n      const workbook = new ExcelJS.Workbook();\n      const worksheet = workbook.addWorksheet(\"Revenue Analysis\");\n      let desiredColumnOrder = [];\n      let cols = [];\n      cols = data;\n      desiredColumnOrder = cols;\n      //----------------Months Sorting in order-----------------\n      desiredColumnOrder.sort((colA, colB) => {\n        const [, yearA, monthA] = colA.split(\"_\");\n        const [, yearB, monthB] = colB.split(\"_\");\n\n        if (yearA !== yearB) {\n          return parseInt(yearA) - parseInt(yearB);\n        }\n        return parseInt(monthA) - parseInt(monthB);\n      });\n      const wantedValues = data.concat(nodes).map((item) => {\n        const obj = {};\n        data.forEach((col) => {\n          const value = item[col];\n          if (typeof value === \"string\") {\n            const [extractedValue, ,] = value.split(\"^&\");\n            obj[col] = extractedValue;\n          } else if (typeof value === \"number\") {\n            obj[col] = value.toLocaleString(\"en-US\");\n          } else {\n            obj[col] = value;\n          }\n        });\n\n        if (\"name\" in obj && obj[\"name\"] === \"\") {\n          obj[\"name\"] = \"Summary\";\n        } else if (\n          \"name\" in obj &&\n          obj[\"name\"] !== \"\" &&\n          obj[\"name\"] !== undefined\n        ) {\n          obj[\"name\"] =\n            obj[\"name\"].split(\"*\")[0] == \"\"\n              ? \"Summary\"\n              : obj[\"name\"].split(\"*\")[0];\n        }\n\n        if (\n          obj[\"kpi\"] === \"Planned Revenue\" ||\n          obj[\"kpi\"] === \"Actual Revenue\" ||\n          obj[\"kpi\"] === \"Recognized Revenue\" ||\n          obj[\"kpi\"] === \"Resource Direct Cost\" ||\n          obj[\"kpi\"] === \"Other Direct Cost\" ||\n          obj[\"kpi\"] === \"Gross Margin\"\n        ) {\n          Object.keys(obj).forEach((key) => {\n            if (key !== \"name\" && key !== \"kpi\" && !isNaN(obj[key])) {\n              // obj[key] = `$ ${obj[key]}`;\n              obj[key] = \"$\" + (obj[key] == null ? \"\" : obj[key]);\n            }\n          });\n        } else if (\n          obj[\"kpi\"] === \"Gross Margin %\" ||\n          obj[\"kpi\"] === \"Billable Utilization\" ||\n          obj[\"kpi\"] === \"Billed Utilization\" ||\n          obj[\"kpi\"] === \"FTE\" ||\n          obj[\"kpi\"] === \"SUBK\"\n        ) {\n          Object.keys(obj).forEach((key) => {\n            if (key !== \"name\" && key !== \"kpi\" && !isNaN(obj[key])) {\n              obj[key] = (obj[key] == null ? 0 : obj[key]) + \" %\";\n            }\n          });\n        }\n\n        return obj;\n      });\n\n      const formatMMMYYYY = (dateStr) => {\n        const [year, month, day] = dateStr.split(\"_\");\n        const monthName = new Date(`${year}-${month}-01`).toLocaleString(\n          \"en-us\",\n          { month: \"short\" }\n        );\n        return `${monthName}-${year}`;\n      };\n\n      const formatHeaderKey = (key) => {\n        if (key.match(/^\\d{4}_\\d{2}_\\d{2}$/)) {\n          return formatMMMYYYY(key);\n        }\n        return key;\n      };\n\n      const headerRow = {};\n      Object.keys(wantedValues[0]).forEach((key) => {\n        headerRow[key] =\n          formatHeaderKey(key) == \"name\"\n            ? \"CSL  Customer  Project  Res\"\n            : formatHeaderKey(key) == \"kpi\"\n            ? \"\"\n            : formatHeaderKey(key);\n      });\n\n      const filteredValues = wantedValues.filter((item) =>\n        Object.values(item).some(\n          (value) => value !== null && value !== undefined && value !== \"\"\n        )\n      );\n\n      filteredValues.unshift(headerRow);\n\n      const rows = filteredValues.map((item) => {\n        const row = [];\n        desiredColumnOrder.forEach((col) => {\n          row.push(item[col]);\n        });\n        return row;\n      });\n\n      rows.forEach((row) => {\n        worksheet.addRow(row);\n      });\n\n      //--------------bold--------------------\n      [1].forEach((rowIndex) => {\n        const row = worksheet.getRow(rowIndex);\n        row.font = { bold: true };\n      });\n\n      // ----------  Name Merging ---------------------\n      const nameColumnIndex = desiredColumnOrder.indexOf(\"name\");\n\n      let mergeStartIndex = 1;\n      let currentName = rows[0][nameColumnIndex];\n\n      for (let rowIndex = 1; rowIndex < rows.length; rowIndex++) {\n        const row = rows[rowIndex];\n        const rowName = row[nameColumnIndex];\n\n        if (rowName !== currentName) {\n          if (rowIndex - mergeStartIndex > 0) {\n            worksheet.mergeCells(\n              mergeStartIndex + 1,\n              nameColumnIndex,\n              rowIndex,\n              nameColumnIndex\n            );\n          }\n\n          mergeStartIndex = rowIndex;\n          currentName = rowName;\n        }\n      }\n\n      if (rows.length - mergeStartIndex > 0) {\n        worksheet.mergeCells(\n          mergeStartIndex + 1,\n          nameColumnIndex,\n          rows.length,\n          nameColumnIndex\n        );\n      }\n\n      workbook.xlsx.writeBuffer().then((buffer) => {\n        saveAs(new Blob([buffer]), \"Revenue Analysis.xlsx\");\n      });\n    });\n  };\n\n  return (\n    <div className=\"materialReactExpandableTable headCountTable darkHeader\">\n      <div className=\"mb-2\" align=\" right \">\n        <RiFileExcel2Line\n          size=\"1.5em\"\n          title=\"Export to Excel\"\n          style={{ color: \"green\" }}\n          cursor=\"pointer\"\n          onClick={exportExcel}\n        />\n      </div>\n      <MaterialReactTable\n        columns={dynamicColumns}\n        data={nodes}\n        enableExpanding={(column) => column.id === \"name\"}\n        enableRowVirtualization={true}\n        enablePagination={false}\n        enableGlobalFilter={true}\n        enableDensityToggle={false}\n        enableFullScreenToggle={false}\n        enableHiding={false}\n        enableColumnFilters={false}\n        enableBottomToolbar={false}\n        enableTopToolbar={false}\n        enableColumnActions={false}\n        enableSorting={false}\n        filterFromLeafRows //apply filtering to all rows instead of just parent rows\n        initialState={{\n          showGlobalFilter: true,\n          grouping: [\"name\"],\n          expanded: true,\n          density: \"compact\",\n          columnPinning: { right: [\"Total\"] },\n        }} //expand all rows by default\n        muiTableContainerProps={\n          {\n            // sx: { height: \"49vh\", width: \"auto\" },\n          }\n        }\n        muiTableBodyProps={{\n          sx: {\n            \"&\": {\n              borderRight: \"1px solid #ccc\",\n              borderBottom: \"1px solid #ccc\",\n            },\n            \"& td\": {\n              borderRight: \"1px solid #ccc\",\n              height: \"22px\",\n              padding: \"0px 5px\",\n            },\n          },\n        }}\n        muiTableHeadProps={{\n          sx: {\n            \"& th\": {\n              borderTop: \"1px solid #ccc\",\n              borderRight: \"1px solid #ccc\",\n              background: \"#f4f4f4 \",\n              padding: \"0 5px\",\n            },\n          },\n        }}\n      />\n      {loader ? <Loader handleAbort={handleAbort} /> : \"\"}\n    </div>\n  );\n}\n\nexport default MarginAnalysisCSL;\n","import React, { useState, useMemo, memo, useRef } from \"react\";\nimport MaterialReactTable from \"material-react-table\";\nimport { useEffect } from \"react\";\nimport \"./HeadCountTableComponent.scss\";\nimport moment from \"moment\";\nimport Loader from \"../Loader/Loader\";\nimport { environment } from \"../../environments/environment\";\nimport { FaChevronCircleRight, FaChevronCircleDown } from \"react-icons/fa\";\nimport axios from \"axios\";\nimport { RiFileExcel2Line } from \"react-icons/ri\";\n\nfunction MarginAnalysisSE(props) {\n  const {\n    tableData,\n    column,\n    selectType,\n    month,\n    searchdata,\n    project,\n    customer,\n    resources,\n    SalesExe,\n    selectedCust,\n    sortBy,\n    laterMeasureLabel,\n    defaultMeasureLabel,\n  } = props;\n  const baseUrl = environment.baseUrl;\n  const abortController = useRef(null);\n  const [loader, setLoader] = useState(false);\n  const name = column[0];\n  const kpi = column[1];\n  const handleAbort = () => {\n    abortController.current && abortController.current.abort();\n    setLoader(false);\n  };\n\n  const dates = column.slice(2).sort();\n\n  const adjustedColumn = [name, kpi, ...dates, \"Total\"];\n  const [data, setData] = useState(adjustedColumn);\n  const [nodes, setNodes] = useState([]);\n  useEffect(() => {\n    setData(props.column);\n  }, [props.column]);\n\n  useEffect(() => {\n    let id = 1;\n    for (let i = 0; i < tableData.length; i++) {\n      tableData[i].id = id;\n      id++;\n      if (id % 10000 == 17) {\n        id += 9984;\n      }\n    }\n\n    setNodes(jsonToTree(tableData));\n  }, [tableData]);\n\n  const Data = moment(month).startOf(\"month\").format(\"yyyy-MM-DD\");\n\n  {\n    /*-------------------------------------For Getting Customer's According to Customer Industry------------------------------ */\n  }\n  const HandleInsertedData = (objId, objLabel, innerColumn) => {\n    abortController.current = new AbortController();\n    const loaderTime = setTimeout(() => {\n      setLoader(true);\n    }, 2000);\n    axios({\n      method: \"post\",\n      url:\n        baseUrl +\n        `/revenuemetricsms/RevenueMarginAnalysis/GetGMASalesExecutiveFinancialsFinalData`,\n      data: {\n        ownerDivisions: -1,\n        month: Data,\n        duration: searchdata.duration,\n        countries: searchdata.countries,\n        searchType: searchdata.searchType,\n        busUnits: -1,\n        customers:\n          searchdata.customers == \"select\"\n            ? selectedCust\n            : searchdata.customers,\n        srcType: searchdata.searchType,\n        srcTypeId: objId,\n        tarType: innerColumn,\n        busUnitId: -1,\n        custId: searchdata.custId,\n        prjId: searchdata.prjId,\n        resId: searchdata.resId,\n        measures: searchdata.measures,\n        salesExecId: objId,\n        salesExecs: searchdata.salesExecs,\n        sortBy: searchdata.sortBy,\n        custCountries: searchdata.custCountries,\n        source: searchdata.source,\n        resTyp: searchdata.resTyp,\n        engCountries: searchdata.engCountries,\n        contTerms: searchdata.contTerms,\n        engComp: searchdata.engComp,\n        cslRes: searchdata.cslRes,\n        cslResId: searchdata.cslResId,\n        dpRes: -1,\n        dpResId: -1,\n        indTypes: -1,\n        indTypesId: -1,\n      },\n      signal: abortController.current.signal,\n    })\n      .then((res) => {\n        setLoader(false);\n        clearTimeout(loaderTime);\n        let respData = res.data.data;\n        respData = respData.map((item) => {\n          return {\n            ...item,\n            name: item.name + \"*\" + objId + \"*\" + innerColumn,\n          };\n        });\n\n        setNodes((prevNodes) => {\n          const grossMarginIndex = prevNodes.findIndex((node) => {\n            return searchdata.measures !=\n              \"1350,638,965,639,640,641,643,644,872,761\"\n              ? searchdata.sortBy != -1\n                ? sortBy.some(\n                    (Item) =>\n                      node.kpi ===\n                        (Item.id == searchdata.sortBy ? Item.measures : \"\") &&\n                      node.name.split(\"*\")[0] === objLabel\n                  )\n                : node.kpi === defaultMeasureLabel &&\n                  node.name.split(\"*\")[0] === objLabel\n              : searchdata.sortBy == -1\n              ? node.kpi === defaultMeasureLabel &&\n                node.name.split(\"*\")[0] === objLabel\n              : sortBy.some(\n                  (Item) =>\n                    node.kpi ===\n                      (Item.id == searchdata.sortBy ? Item.measures : \"\") &&\n                    node.name.split(\"*\")[0] === objLabel\n                );\n          });\n          if (grossMarginIndex !== -1) {\n            return [\n              ...prevNodes.slice(0, grossMarginIndex + 1),\n              ...respData.map((data, i) => ({ ...data, id: objId + i + 1 })),\n              ...prevNodes.slice(grossMarginIndex + 1),\n            ];\n          } else {\n            return prevNodes;\n          }\n        });\n      })\n      .catch((e) => {\n        setLoader(false);\n        console.log(\"Error :\", e);\n      });\n  };\n\n  {\n    /*-------------------------------------For Getting Project's According to Customer------------------------------ */\n  }\n\n  const HandleInsertedData1 = (\n    objId,\n    objLabel,\n    innerColumn,\n    source,\n    custBU\n  ) => {\n    abortController.current = new AbortController();\n    const loaderTime = setTimeout(() => {\n      setLoader(true);\n    }, 2000);\n    axios({\n      method: \"post\",\n      url:\n        baseUrl +\n        `/revenuemetricsms/RevenueMarginAnalysis/GetGMASalesExecutiveFinancialsFinalData`,\n      data: {\n        ownerDivisions: -1,\n        month: Data,\n        duration: searchdata.duration,\n        countries: searchdata.countries,\n        searchType: \"Sales Executive\",\n        busUnits: -1,\n        customers:\n          searchdata.customers == \"select\"\n            ? selectedCust\n            : searchdata.customers,\n        srcType: source,\n        srcTypeId: objId,\n        tarType: innerColumn,\n        busUnitId: -1,\n        custId: objId,\n        prjId: searchdata.prjId,\n        resId: searchdata.resId,\n        measures: searchdata.measures,\n        salesExecId: custBU,\n        salesExecs: searchdata.salesExecs,\n        sortBy: searchdata.sortBy,\n        custCountries: searchdata.custCountries,\n        source: searchdata.source,\n        resTyp: searchdata.resTyp,\n        engCountries: searchdata.engCountries,\n        contTerms: searchdata.contTerms,\n        engComp: searchdata.engComp,\n        cslRes: searchdata.cslRes,\n        cslResId: searchdata.cslResId,\n        dpRes: -1,\n        dpResId: -1,\n        indTypes: -1,\n        indTypesId: -1,\n      },\n      signal: abortController.current.signal,\n    })\n      .then((res) => {\n        setLoader(false);\n        clearTimeout(loaderTime);\n        let respData = res.data.data;\n        respData = respData.map((item) => {\n          return {\n            ...item,\n            name: item.name + \"*\" + objId + \"*\" + innerColumn + \"*\" + custBU,\n            ui: item.id,\n          };\n        });\n        setNodes((prevNodes) => {\n          const grossMarginIndex = prevNodes.findIndex((node) => {\n            return searchdata.measures !=\n              \"1350,638,965,639,640,641,643,644,872,761\"\n              ? searchdata.sortBy != -1\n                ? sortBy.some(\n                    (Item) =>\n                      node.kpi ===\n                        (Item.id == searchdata.sortBy ? Item.measures : \"\") &&\n                      node.name.split(\"*\")[0] === objLabel\n                  )\n                : node.kpi === defaultMeasureLabel &&\n                  node.name.split(\"*\")[0] === objLabel\n              : searchdata.sortBy == -1\n              ? node.kpi === defaultMeasureLabel &&\n                node.name.split(\"*\")[0] === objLabel\n              : sortBy.some(\n                  (Item) =>\n                    node.kpi ===\n                      (Item.id == searchdata.sortBy ? Item.measures : \"\") &&\n                    node.name.split(\"*\")[0] === objLabel\n                );\n          });\n          if (grossMarginIndex !== -1) {\n            return [\n              ...prevNodes.slice(0, grossMarginIndex + 1),\n              ...respData.map((data, i) => ({ ...data, id: objId + i + 1 })),\n              ...prevNodes.slice(grossMarginIndex + 1),\n            ];\n          } else {\n            return prevNodes;\n          }\n        });\n      })\n      .catch((e) => {\n        setLoader(false);\n        console.log(\"Error :\", e);\n      });\n  };\n\n  const HandleInsertedData2 = (\n    objId,\n    objLabel,\n    innerColumn,\n    source,\n    custBU,\n    custId\n  ) => {\n    abortController.current = new AbortController();\n    const loaderTime = setTimeout(() => {\n      setLoader(true);\n    }, 2000);\n    axios({\n      method: \"post\",\n      url:\n        baseUrl +\n        `/revenuemetricsms/RevenueMarginAnalysis/GetGMASalesExecutiveFinancialsFinalData`,\n      data: {\n        ownerDivisions: -1,\n        month: Data,\n        duration: searchdata.duration,\n        countries: searchdata.countries,\n        searchType: \"Sales Executive\",\n        busUnits: -1,\n        customers:\n          searchdata.customers == \"select\"\n            ? selectedCust\n            : searchdata.customers,\n        srcType: source,\n        srcTypeId: objId,\n        tarType: innerColumn,\n        busUnitId: -1,\n        custId: custId,\n        prjId: objId,\n        resId: searchdata.resId,\n        measures: searchdata.measures,\n        salesExecId: custBU,\n        salesExecs: searchdata.salesExecs,\n        sortBy: searchdata.sortBy,\n        custCountries: searchdata.custCountries,\n        source: searchdata.source,\n        resTyp: searchdata.resTyp,\n        engCountries: searchdata.engCountries,\n        contTerms: searchdata.contTerms,\n        engComp: searchdata.engComp,\n        cslRes: searchdata.cslRes,\n        cslResId: searchdata.cslResId,\n        dpRes: -1,\n        dpResId: -1,\n        indTypes: -1,\n        indTypesId: -1,\n      },\n      signal: abortController.current.signal,\n    })\n      .then((res) => {\n        setLoader(false);\n        clearTimeout(loaderTime);\n        let respData = res.data.data;\n        respData = respData.map((item) => {\n          return {\n            ...item,\n            name:\n              item.name +\n              \"*\" +\n              objId +\n              \"*\" +\n              innerColumn +\n              \"*\" +\n              custBU +\n              \"*\" +\n              custId,\n          };\n        });\n        setNodes((prevNodes) => {\n          const grossMarginIndex = prevNodes.findIndex((node) => {\n            console.log(\"first>\", node.ui, \" second>\", objLabel);\n            return searchdata.measures !=\n              \"1350,638,965,639,640,641,643,644,872,761\"\n              ? searchdata.sortBy != -1\n                ? sortBy.some(\n                    (Item) =>\n                      node.kpi ===\n                        (Item.id == searchdata.sortBy ? Item.measures : \"\") &&\n                      objLabel.includes(node.name.split(\"*\")[0]) &&\n                      node.ui == objId\n                  )\n                : node.kpi === defaultMeasureLabel &&\n                  objLabel.includes(node.name.split(\"*\")[0]) &&\n                  node.ui == objId\n              : searchdata.sortBy == -1\n              ? node.kpi === defaultMeasureLabel &&\n                objLabel.includes(node.name.split(\"*\")[0]) &&\n                node.ui == objId\n              : sortBy.some(\n                  (Item) =>\n                    node.kpi ===\n                      (Item.id == searchdata.sortBy ? Item.measures : \"\") &&\n                    objLabel.includes(node.name.split(\"*\")[0]) &&\n                    node.ui == objId\n                );\n          });\n          console.log(grossMarginIndex);\n          if (grossMarginIndex !== -1) {\n            return [\n              ...prevNodes.slice(0, grossMarginIndex + 1),\n              ...respData.map((data, i) => ({ ...data, id: objId + i + 1 })),\n              ...prevNodes.slice(grossMarginIndex + 1),\n            ];\n          } else {\n            return prevNodes;\n          }\n        });\n      })\n      .catch((e) => {\n        setLoader(false);\n        console.log(\"Error :\", e);\n      });\n  };\n\n  const HandleInsertedData3 = (\n    objId,\n    objLabel,\n    innerColumn,\n    source,\n    custBU,\n    projectID,\n    custprojectId\n  ) => {\n    abortController.current = new AbortController();\n    const loaderTime = setTimeout(() => {\n      setLoader(true);\n    }, 2000);\n    axios({\n      method: \"post\",\n      url:\n        baseUrl +\n        `/revenuemetricsms/RevenueMarginAnalysis/GetGMASalesExecutiveFinancialsFinalData`,\n      data: {\n        ownerDivisions: -1,\n        month: Data,\n        duration: searchdata.duration,\n        countries: searchdata.countries,\n        searchType: \"Sales Executive\",\n        busUnits: -1,\n        customers:\n          searchdata.customers == \"select\"\n            ? selectedCust\n            : searchdata.customers,\n        srcType: source,\n        srcTypeId: objId,\n        tarType: innerColumn,\n        busUnitId: -1,\n        custId: custprojectId,\n        prjId: projectID,\n        resId: -1,\n        measures: searchdata.measures,\n        salesExecId: searchdata.salesExecId,\n        salesExecs: searchdata.salesExecs,\n        sortBy: searchdata.sortBy,\n        custCountries: searchdata.custCountries,\n        source: searchdata.source,\n        resTyp: searchdata.resTyp,\n        engCountries: searchdata.engCountries,\n        contTerms: searchdata.contTerms,\n        engComp: searchdata.engComp,\n        cslRes: searchdata.cslRes,\n        cslResId: searchdata.cslResId,\n        dpRes: -1,\n        dpResId: custBU,\n        indTypes: -1,\n        indTypesId: -1,\n      },\n      signal: abortController.current.signal,\n    })\n      .then((res) => {\n        setLoader(false);\n        clearTimeout(loaderTime);\n        let respData = res.data.data;\n        respData = respData.map((item) => {\n          return {\n            ...item,\n            name: item.name + \"*\" + objId + \"*\" + innerColumn + \"*\" + custBU,\n          };\n        });\n        setNodes((prevNodes) => {\n          const grossMarginIndex = prevNodes.findIndex((node) => {\n            return searchdata.measures !=\n              \"1350,638,965,639,640,641,643,644,872,761\"\n              ? searchdata.sortBy != -1\n                ? sortBy.some(\n                    (Item) =>\n                      node.kpi ===\n                        (Item.id == searchdata.sortBy ? Item.measures : \"\") &&\n                      node.name.split(\"*\")[0].replace(/\\s+/g, \" \") ===\n                        objLabel.replace(/\\s+/g, \" \")\n                  )\n                : node.kpi === defaultMeasureLabel &&\n                  node.name.split(\"*\")[0].replace(/\\s+/g, \" \") ===\n                    objLabel.replace(/\\s+/g, \" \")\n              : searchdata.sortBy == -1\n              ? node.kpi === defaultMeasureLabel &&\n                node.name.split(\"*\")[0].replace(/\\s+/g, \" \") ===\n                  objLabel.replace(/\\s+/g, \" \")\n              : sortBy.some(\n                  (Item) =>\n                    node.kpi ===\n                      (Item.id == searchdata.sortBy ? Item.measures : \"\") &&\n                    node.name.split(\"*\")[0].replace(/\\s+/g, \" \") ===\n                      objLabel.replace(/\\s+/g, \" \")\n                );\n          });\n          if (grossMarginIndex !== -1) {\n            return [\n              ...prevNodes.slice(0, grossMarginIndex + 1),\n              ...respData.map((data, i) => ({ ...data, id: objId + i + 1 })),\n              ...prevNodes.slice(grossMarginIndex + 1),\n            ];\n          } else {\n            return prevNodes;\n          }\n        });\n      })\n      .catch((e) => {\n        setLoader(false);\n        console.log(\"Error :\", e);\n      });\n  };\n\n  const jsonToTree = (flatArray, options) => {\n    options = {\n      id: \"id\",\n      parentId: \"parentId\",\n      children: \"subRows\",\n      ...options,\n    };\n    const dictionary = {};\n    const tree = [];\n    const children = options.children;\n    flatArray.forEach((node) => {\n      const nodeId = node[options.id];\n      const nodeParentId = node[options.parentId];\n      dictionary[nodeId] = {\n        [children]: [],\n        ...node,\n        ...dictionary[nodeId],\n      };\n      dictionary[nodeParentId] = dictionary[nodeParentId] || { [children]: [] };\n      dictionary[nodeParentId][children].push(dictionary[nodeId]);\n    });\n\n    Object.values(dictionary).forEach((obj) => {\n      if (typeof obj[options.id] === \"undefined\") {\n        tree.push(...obj[children]);\n      }\n    });\n    return tree;\n  };\n\n  const dynamicColumns = [\n    // for data[0] where accessorKey is name\n    {\n      header: (\n        // <div className=\"header-label\">BU Customer Project Res</div>\n        <div className=\"legendContainer wrap\">\n          <div className=\"legend lightbrown\">\n            <div className=\"legendCircle\"></div>\n            <div className=\"legendTxt\">\n              <b>SE</b>\n            </div>\n          </div>\n          <div className=\"legend darkgreen\">\n            <div className=\"legendCircle\"></div>\n            <div className=\"legendTxt\">\n              <b>Customer</b>\n            </div>\n          </div>\n          <div className=\"legend purple\">\n            <div className=\"legendCircle\"></div>\n            <div className=\"legendTxt\">\n              <b>Project</b>\n            </div>\n          </div>\n          <div className=\"legend brown\">\n            <div className=\"legendCircle\"></div>\n            <div className=\"legendTxt\">\n              <b>Res</b>\n            </div>\n          </div>\n        </div>\n      ),\n      accessorKey: `name`,\n      enableGrouping: false,\n      GroupedCell: ({ cell }) => {\n        if (selectType == \"Sales Executive\") {\n          //--------------------//----------------------//-----------------------Parent Level (Customer Industry)\n\n          const department = SalesExe.find(\n            (dep) => dep.label === cell.getValue()\n          );\n          const [activeIcons, setActiveIcons] = useState({});\n\n          const handleClick = () => {\n            if (department) {\n              const { value, label } = department;\n              const isDataPresent = nodes.some((node) => {\n                return node.name.includes(`*${value}`);\n              });\n\n              if (isDataPresent) {\n                setActiveIcons((prevActiveIcons) => ({\n                  ...prevActiveIcons,\n                  [value]: false,\n                }));\n                setNodes((prevNodes) =>\n                  prevNodes.filter((node) => !node.name.includes(`*${value}`))\n                );\n              } else {\n                setActiveIcons((prevActiveIcons) => ({\n                  ...prevActiveIcons,\n                  [value]: true,\n                }));\n\n                HandleInsertedData(value, label, \"Customer\");\n              }\n            }\n          };\n\n          //--------------------//----------------------//-----------------------First Child Layer (Customer)\n\n          let custBU;\n          const cust = customer.find((dep) => {\n            if (dep.fullName === cell.getValue().split(\"*\")[0]) {\n              const value = cell.getValue().split(\"*\")[1];\n              custBU = value;\n            }\n            return dep.fullName === cell.getValue().split(\"*\")[0];\n          });\n\n          const [activeIcons1, setActiveIcons1] = useState({});\n\n          const handleClick1 = () => {\n            if (cust) {\n              const { id, fullName } = cust;\n              const isDataPresent = nodes.some((node) => {\n                return node.name.includes(`*${id}`);\n              });\n\n              if (isDataPresent) {\n                setActiveIcons1((prevActiveIcons) => ({\n                  ...prevActiveIcons,\n                  [id]: false,\n                }));\n                setNodes((prevNodes) =>\n                  prevNodes.filter((node) => !node.name.includes(`*${id}`))\n                );\n              } else {\n                setActiveIcons1((prevActiveIcons) => ({\n                  ...prevActiveIcons,\n                  [id]: true,\n                }));\n                HandleInsertedData1(\n                  id,\n                  fullName,\n                  \"Project\",\n                  \"Customer\",\n                  custBU\n                );\n              }\n            }\n          };\n\n          //--------------------//----------------------//-----------------------Second Child Layer (Project)\n\n          const proj = project.find((dep) => {\n            return (\n              dep.name === cell.getValue().split(\"*\")[0] ||\n              (dep.name.includes(cell.getValue().split(\"*\")[0]) &&\n                dep.id == cell.row.original.ui)\n            );\n          });\n\n          const [activeIcons2, setActiveIcons2] = useState({});\n\n          const handleClick2 = () => {\n            if (proj) {\n              const { id, name } = proj;\n              const isDataPresent = nodes.some((node) => {\n                return node.name.includes(`*${id}`);\n              });\n\n              if (isDataPresent) {\n                setActiveIcons2((prevActiveIcons) => ({\n                  ...prevActiveIcons,\n                  [id]: false,\n                }));\n                setNodes((prevNodes) =>\n                  prevNodes.filter((node) => !node.name.includes(`*${id}`))\n                );\n              } else {\n                setActiveIcons2((prevActiveIcons) => ({\n                  ...prevActiveIcons,\n                  [id]: true,\n                }));\n                HandleInsertedData2(\n                  id,\n                  name,\n                  \"Res\",\n                  \"Project\",\n                  cell.getValue().split(\"*\")[3],\n                  cell.getValue().split(\"*\")[1]\n                );\n              }\n            }\n          };\n\n          //--------------------//----------------------//-----------------------Third Child Layer (Resource)\n\n          let resBU;\n          let projectID;\n          let custprojectId;\n\n          const res = resources.find((dep) => {\n            const fullNameParts = dep.full_name\n              .split(\"*\")[0]\n              .split(\" \")\n              .filter((part) => part !== \"\");\n            const cellValueParts = cell\n              .getValue()\n              .split(\"*\")[0]\n              .split(\" \")\n              .filter((part) => part !== \"\");\n\n            const match =\n              cell.getValue().split(\"*\")[0] == \"\"\n                ? \"\"\n                : cellValueParts.every((part) => fullNameParts.includes(part));\n\n            if (match) {\n              const value = cell.getValue().split(\"*\")[3];\n              projectID = cell.getValue().split(\"*\")[1];\n              custprojectId = cell.getValue().split(\"*\")[4];\n              resBU = value;\n            }\n\n            return match;\n          });\n\n          const [activeIcons3, setActiveIcons3] = useState({});\n\n          const handleClick3 = () => {\n            if (res) {\n              const { id, full_name } = res;\n              const isDataPresent = nodes.some((node) => {\n                return node.name.includes(`*${id}`);\n              });\n\n              if (isDataPresent) {\n                setActiveIcons3((prevActiveIcons) => ({\n                  ...prevActiveIcons,\n                  [id]: false,\n                }));\n                setNodes((prevNodes) =>\n                  prevNodes.filter((node) => !node.name.includes(`*${id}`))\n                );\n              } else {\n                setActiveIcons3((prevActiveIcons) => ({\n                  ...prevActiveIcons,\n                  [id]: true,\n                }));\n                HandleInsertedData3(\n                  id,\n                  full_name,\n                  \"Leaf\",\n                  \"Res\",\n                  resBU,\n                  projectID,\n                  custprojectId\n                );\n              }\n            }\n          };\n\n          //--------------------//----------------------//-----------------------Execution of the Layers\n          if (department) {\n            const { value } = department;\n            const isActive = activeIcons[value];\n            return (\n              <span\n                style={{ cursor: \"pointer\" }}\n                value={department.value}\n                onClick={() => {\n                  handleClick();\n                }}\n                className={\"parent\"}\n              >\n                {isActive ? <FaChevronCircleDown /> : <FaChevronCircleRight />}{\" \"}\n                <b\n                  className=\"buRM\"\n                  title={\n                    department.label + \" (\" + cell.row.original.count + \")\"\n                  }\n                >\n                  {department.label} ({cell.row.original.count})\n                </b>\n              </span>\n            );\n          } else if (cust) {\n            const { id } = cust;\n            const isActive1 = activeIcons1[id];\n            return (\n              <span\n                style={{ cursor: \"pointer\" }}\n                value={cust.id}\n                onClick={() => {\n                  handleClick1();\n                }}\n                className={\"parent\"}\n              >\n                {isActive1 ? <FaChevronCircleDown /> : <FaChevronCircleRight />}{\" \"}\n                <b\n                  className=\"custBU custRM\"\n                  title={cust.fullName + \" (\" + cell.row.original.count + \")\"}\n                >\n                  {cust.fullName} ({cell.row.original.count})\n                </b>\n              </span>\n            );\n          } else if (proj) {\n            const { id } = proj;\n            const isActive2 = activeIcons2[id];\n            return (\n              <span\n                style={{ cursor: \"pointer\" }}\n                value={proj.id}\n                onClick={() => {\n                  handleClick2();\n                }}\n                className={\"parent\"}\n              >\n                {isActive2 ? <FaChevronCircleDown /> : <FaChevronCircleRight />}{\" \"}\n                <b\n                  className=\"projBU projRM\"\n                  title={proj.name + \" (\" + cell.row.original.count + \")\"}\n                >\n                  {proj.name} ({cell.row.original.count})\n                </b>\n              </span>\n            );\n          } else if (res) {\n            const { id } = res;\n            const isActive3 = activeIcons3[id];\n            return (\n              <span\n                style={{ cursor: \"pointer\" }}\n                value={res.id}\n                onClick={() => {\n                  handleClick3();\n                }}\n                className={\"parent\"}\n              >\n                {isActive3 ? <FaChevronCircleDown /> : <FaChevronCircleRight />}{\" \"}\n                <b\n                  className=\"resBU resRM\"\n                  title={res.full_name + \" (\" + cell.row.original.count + \")\"}\n                >\n                  {res.full_name}\n                </b>\n              </span>\n            );\n          } else {\n            return (\n              <span\n                className=\"child\"\n                title={\n                  cell.row.original.name === \"\"\n                    ? \"Summary\"\n                    : cell.getValue().split(\"*\")[0] +\n                      \" (\" +\n                      cell.row.original.count +\n                      \")\"\n                }\n              >\n                <b\n                  className={\n                    cell.getValue().split(\"*\")[2] == \"Customer\"\n                      ? \"buRM\"\n                      : cell.getValue().split(\"*\")[2] == \"Project\"\n                      ? \"custRM\"\n                      : cell.getValue().split(\"*\")[2] == \"Res\"\n                      ? \"projRM\"\n                      : cell.getValue().split(\"*\")[2] == \"Leaf\"\n                      ? \"resRM\"\n                      : \"\"\n                  }\n                  style={{\n                    display:\n                      cell.row.original.name == \"\" ||\n                      cell.getValue().split(\"*\")[0] == \"\"\n                        ? \"flex\"\n                        : \"\",\n                    justifyContent:\n                      cell.row.original.name == \"\" ||\n                      cell.getValue().split(\"*\")[0] == \"\"\n                        ? \"center\"\n                        : \"\",\n                  }}\n                >\n                  {cell.row.original.name == \"\" ? (\n                    \"Summary\"\n                  ) : cell.getValue().split(\"*\")[0] == \"\" ? (\n                    \"Summary\"\n                  ) : (\n                    <div onClick={handleClick1}>\n                      <FaChevronCircleRight /> {cell.getValue().split(\"*\")[0]}\n                    </div>\n                  )}{\" \"}\n                  {cell.row.original.count === 0\n                    ? \"\"\n                    : `(${cell.row.original.count})`}\n                </b>{\" \"}\n              </span>\n            );\n          }\n        }\n      },\n    },\n    {\n      header: \"\",\n      accessorKey: `kpi`,\n      Cell: ({ cell }) => {\n        const department = SalesExe.find(\n          (dep) => dep.label === cell.row.original.name\n        );\n\n        const cust = customer.find((dep) => {\n          return dep.fullName === cell.row.original.name.split(\"*\")[0];\n        });\n\n        const proj = project.find((dep) => {\n          return (\n            dep.name.includes(cell.row.original.name.split(\"*\")[0]) &&\n            dep.id == cell.row.original.ui\n          );\n        });\n\n        const res = resources.find((dep) => {\n          const fullNameParts = dep.full_name.split(\"*\")[0].split(\" \");\n          const cellValueParts = cell.row.original.name\n            .split(\"*\")[0]\n            .split(\" \");\n\n          return cell.row.original.name.split(\"*\")[0] == \"\"\n            ? \"\"\n            : cellValueParts.every((value) => fullNameParts.includes(value));\n        });\n\n        return (\n          <span>\n            <b\n              className={\n                department\n                  ? \"buRMchild\"\n                  : cust\n                  ? \"custRMchild\"\n                  : proj\n                  ? \"projRMchild\"\n                  : res\n                  ? \"resRMchild\"\n                  : cell.row.original.name.split(\"*\")[2] == \"Customer\"\n                  ? \"buRMchild\"\n                  : cell.row.original.name.split(\"*\")[2] == \"Project\"\n                  ? \"custRMchild\"\n                  : cell.row.original.name.split(\"*\")[2] == \"Res\"\n                  ? \"projRMchild\"\n                  : cell.row.original.name.split(\"*\")[2] == \"Leaf\"\n                  ? \"resRMchild\"\n                  : \"\"\n              }\n            >\n              {cell.getValue()}\n            </b>\n          </span>\n        );\n      },\n    },\n  ];\n\n  data.forEach((item, index) => {\n    if (index > 1 && item !== \"Total\") {\n      const dateObj = new Date(\n        `${item.slice(0, 4)}-${item.slice(5, 7)}-${item.slice(8, 10)}`\n      );\n\n      const header = dateObj\n        .toLocaleDateString(\"en-US\", { month: \"short\", year: \"numeric\" })\n        .replace(\" \", \"-\");\n      const currentDate = new Date()\n        .toLocaleDateString(\"en-US\", {\n          month: \"short\",\n          year: \"numeric\",\n        })\n        .replace(\" \", \"-\");\n\n      let greenDate = new Date(header) >= new Date(currentDate);\n      dynamicColumns.push({\n        header,\n        accessorKey: `${item}`,\n        className: \"software\",\n        Cell: ({ cell }) => (\n          <span className={greenDate ? \"greenColumn\" : \"\"}>\n            {cell.row.original.kpi == \"Planned Revenue\" ||\n            cell.row.original.kpi == \"Actual Revenue\" ||\n            cell.row.original.kpi == \"Recognized Revenue\" ||\n            cell.row.original.kpi == \"Resource Direct Cost\" ||\n            cell.row.original.kpi == \"Other Direct Cost\" ||\n            cell.row.original.kpi == \"Gross Margin\" ? (\n              <span style={{ display: \"block\", float: \"left\" }}>$</span>\n            ) : (\n              \"\"\n            )}\n            <span style={{ display: \"block\", float: \"right\" }}>\n              {cell.getValue() == null\n                ? 0\n                : cell.getValue()?.toLocaleString(\"en-US\")}\n              {cell.row.original.kpi == \"Gross Margin %\" ||\n              cell.row.original.kpi == \"Billable Utilization\" ||\n              (cell.row.original.kpi == \"FTE\" &&\n                cell.row.original.descr != \"hcfte\") ||\n              (cell.row.original.kpi == \"SUBK\" &&\n                cell.row.original.descr != \"hcsubk\") ||\n              cell.row.original.kpi == \"Billed Utilization\" ? (\n                <span>%</span>\n              ) : (\n                \"\"\n              )}\n            </span>\n          </span>\n        ),\n      });\n    }\n  });\n\n  {\n    /*----------------------------------Total-------------------------------- */\n  }\n\n  const columnIndex = dynamicColumns.length;\n\n  const newColumn = {\n    header: \"Total\",\n    accessorKey: `Total`,\n    Cell: ({ cell }) => (\n      <>\n        {cell.row.original.kpi == \"Planned Revenue\" ||\n        cell.row.original.kpi == \"Actual Revenue\" ||\n        cell.row.original.kpi == \"Recognized Revenue\" ||\n        cell.row.original.kpi == \"Resource Direct Cost\" ||\n        cell.row.original.kpi == \"Other Direct Cost\" ||\n        cell.row.original.kpi == \"Gross Margin\" ? (\n          <span style={{ display: \"block\", float: \"left\" }}>\n            <b>$</b>\n          </span>\n        ) : (\n          \"\"\n        )}\n        <span style={{ display: \"block\", float: \"right\" }} className=\"total\">\n          <b>\n            {cell.getValue()?.toLocaleString(\"en-US\")}\n            {cell.row.original.kpi == \"Gross Margin %\" ||\n            cell.row.original.kpi == \"Billable Utilization\" ||\n            (cell.row.original.kpi == \"FTE\" &&\n              cell.row.original.descr != \"hcfte\") ||\n            (cell.row.original.kpi == \"SUBK\" &&\n              cell.row.original.descr != \"hcsubk\") ||\n            cell.row.original.kpi == \"Billed Utilization\" ? (\n              <span>{cell.getValue() == null ? 0 : \"%\"}</span>\n            ) : (\n              \"\"\n            )}\n          </b>\n        </span>\n      </>\n    ),\n  };\n\n  dynamicColumns.splice(columnIndex, 0, newColumn);\n  {\n    /*--------------------------Export Excel---------------------- */\n  }\n\n  const exportExcel = () => {\n    import(\"exceljs\").then((ExcelJS) => {\n      const workbook = new ExcelJS.Workbook();\n      const worksheet = workbook.addWorksheet(\"Revenue Analysis\");\n      let desiredColumnOrder = [];\n      let cols = [];\n      cols = data;\n      desiredColumnOrder = cols;\n      //----------------Months Sorting in order-----------------\n      desiredColumnOrder.sort((colA, colB) => {\n        const [, yearA, monthA] = colA.split(\"_\");\n        const [, yearB, monthB] = colB.split(\"_\");\n\n        if (yearA !== yearB) {\n          return parseInt(yearA) - parseInt(yearB);\n        }\n        return parseInt(monthA) - parseInt(monthB);\n      });\n      const wantedValues = data.concat(nodes).map((item) => {\n        const obj = {};\n        data.forEach((col) => {\n          const value = item[col];\n          if (typeof value === \"string\") {\n            const [extractedValue, ,] = value.split(\"^&\");\n            obj[col] = extractedValue;\n          } else if (typeof value === \"number\") {\n            obj[col] = value.toLocaleString(\"en-US\");\n          } else {\n            obj[col] = value;\n          }\n        });\n\n        if (\"name\" in obj && obj[\"name\"] === \"\") {\n          obj[\"name\"] = \"Summary\";\n        } else if (\n          \"name\" in obj &&\n          obj[\"name\"] !== \"\" &&\n          obj[\"name\"] !== undefined\n        ) {\n          obj[\"name\"] =\n            obj[\"name\"].split(\"*\")[0] == \"\"\n              ? \"Summary\"\n              : obj[\"name\"].split(\"*\")[0];\n        }\n\n        if (\n          obj[\"kpi\"] === \"Planned Revenue\" ||\n          obj[\"kpi\"] === \"Actual Revenue\" ||\n          obj[\"kpi\"] === \"Recognized Revenue\" ||\n          obj[\"kpi\"] === \"Resource Direct Cost\" ||\n          obj[\"kpi\"] === \"Other Direct Cost\" ||\n          obj[\"kpi\"] === \"Gross Margin\"\n        ) {\n          Object.keys(obj).forEach((key) => {\n            if (key !== \"name\" && key !== \"kpi\" && !isNaN(obj[key])) {\n              obj[key] = \"$\" + (obj[key] == null ? \"\" : obj[key]);\n            }\n          });\n        } else if (\n          obj[\"kpi\"] === \"Gross Margin %\" ||\n          obj[\"kpi\"] === \"Billable Utilization\" ||\n          obj[\"kpi\"] === \"Billed Utilization\" ||\n          obj[\"kpi\"] === \"FTE\" ||\n          obj[\"kpi\"] === \"SUBK\"\n        ) {\n          Object.keys(obj).forEach((key) => {\n            if (key !== \"name\" && key !== \"kpi\" && !isNaN(obj[key])) {\n              obj[key] = (obj[key] == null ? 0 : obj[key]) + \" %\";\n            }\n          });\n        }\n\n        return obj;\n      });\n\n      const formatMMMYYYY = (dateStr) => {\n        const [year, month, day] = dateStr.split(\"_\");\n        const monthName = new Date(`${year}-${month}-01`).toLocaleString(\n          \"en-us\",\n          { month: \"short\" }\n        );\n        return `${monthName}-${year}`;\n      };\n\n      const formatHeaderKey = (key) => {\n        if (key.match(/^\\d{4}_\\d{2}_\\d{2}$/)) {\n          return formatMMMYYYY(key);\n        }\n        return key;\n      };\n\n      const headerRow = {};\n      Object.keys(wantedValues[0]).forEach((key) => {\n        headerRow[key] =\n          formatHeaderKey(key) == \"name\"\n            ? \"SE  Customer  Project  Res\"\n            : formatHeaderKey(key) == \"kpi\"\n            ? \"\"\n            : formatHeaderKey(key);\n      });\n\n      const filteredValues = wantedValues.filter((item) =>\n        Object.values(item).some(\n          (value) => value !== null && value !== undefined && value !== \"\"\n        )\n      );\n\n      filteredValues.unshift(headerRow);\n\n      const rows = filteredValues.map((item) => {\n        const row = [];\n        desiredColumnOrder.forEach((col) => {\n          row.push(item[col]);\n        });\n        return row;\n      });\n\n      rows.forEach((row) => {\n        worksheet.addRow(row);\n      });\n\n      //--------------bold--------------------\n      [1].forEach((rowIndex) => {\n        const row = worksheet.getRow(rowIndex);\n        row.font = { bold: true };\n      });\n\n      // ----------  Name Merging ---------------------\n      const nameColumnIndex = desiredColumnOrder.indexOf(\"name\");\n\n      let mergeStartIndex = 1;\n      let currentName = rows[0][nameColumnIndex];\n\n      for (let rowIndex = 1; rowIndex < rows.length; rowIndex++) {\n        const row = rows[rowIndex];\n        const rowName = row[nameColumnIndex];\n\n        if (rowName !== currentName) {\n          if (rowIndex - mergeStartIndex > 0) {\n            worksheet.mergeCells(\n              mergeStartIndex + 1,\n              nameColumnIndex,\n              rowIndex,\n              nameColumnIndex\n            );\n          }\n\n          mergeStartIndex = rowIndex;\n          currentName = rowName;\n        }\n      }\n\n      if (rows.length - mergeStartIndex > 0) {\n        worksheet.mergeCells(\n          mergeStartIndex + 1,\n          nameColumnIndex,\n          rows.length,\n          nameColumnIndex\n        );\n      }\n\n      workbook.xlsx.writeBuffer().then((buffer) => {\n        saveAs(new Blob([buffer]), \"Revenue Analysis.xlsx\");\n      });\n    });\n  };\n\n  return (\n    <div className=\"materialReactExpandableTable headCountTable darkHeader\">\n      <div className=\"mb-2\" align=\" right \">\n        <RiFileExcel2Line\n          size=\"1.5em\"\n          title=\"Export to Excel\"\n          style={{ color: \"green\" }}\n          cursor=\"pointer\"\n          onClick={exportExcel}\n        />\n      </div>\n      <MaterialReactTable\n        columns={dynamicColumns}\n        data={nodes}\n        enableExpanding={(column) => column.id === \"name\"}\n        enableRowVirtualization={true}\n        enablePagination={false}\n        enableGlobalFilter={true}\n        enableDensityToggle={false}\n        enableFullScreenToggle={false}\n        enableHiding={false}\n        enableColumnFilters={false}\n        enableBottomToolbar={false}\n        enableTopToolbar={false}\n        enableColumnActions={false}\n        enableSorting={false}\n        filterFromLeafRows //apply filtering to all rows instead of just parent rows\n        initialState={{\n          showGlobalFilter: true,\n          grouping: [\"name\"],\n          expanded: true,\n          density: \"compact\",\n          columnPinning: { right: [\"Total\"] },\n        }} //expand all rows by default\n        muiTableContainerProps={\n          {\n            // sx: { height: \"49vh\", width: \"auto\" },\n          }\n        }\n        muiTableBodyProps={{\n          sx: {\n            \"&\": {\n              borderRight: \"1px solid #ccc\",\n              borderBottom: \"1px solid #ccc\",\n            },\n            \"& td\": {\n              borderRight: \"1px solid #ccc\",\n              height: \"22px\",\n              padding: \"0px 5px\",\n            },\n          },\n        }}\n        muiTableHeadProps={{\n          sx: {\n            \"& th\": {\n              borderTop: \"1px solid #ccc\",\n              borderRight: \"1px solid #ccc\",\n              background: \"#f4f4f4 \",\n              padding: \"0 5px\",\n            },\n          },\n        }}\n      />\n      {loader ? <Loader handleAbort={handleAbort} /> : \"\"}\n    </div>\n  );\n}\n\nexport default MarginAnalysisSE;\n","import React, { useState, useMemo, memo, useRef } from \"react\";\nimport MaterialReactTable from \"material-react-table\";\nimport { useEffect } from \"react\";\nimport \"./HeadCountTableComponent.scss\";\nimport moment from \"moment\";\nimport Loader from \"../Loader/Loader\";\nimport { environment } from \"../../environments/environment\";\nimport { FaChevronCircleRight, FaChevronCircleDown } from \"react-icons/fa\";\nimport axios from \"axios\";\nimport { RiFileExcel2Line } from \"react-icons/ri\";\n\nfunction MarginAnalysisCustomer(props) {\n  const {\n    tableData,\n    column,\n    departments,\n    selectType,\n    month,\n    searchdata,\n    project,\n    customer,\n    resources,\n    selectedCust,\n    sortBy,\n    laterMeasureLabel,\n    defaultMeasureLabel,\n  } = props;\n  const baseUrl = environment.baseUrl;\n  const abortController = useRef(null);\n  const [loader, setLoader] = useState(false);\n  const name = column[0];\n  const kpi = column[1];\n  const handleAbort = () => {\n    abortController.current && abortController.current.abort();\n    setLoader(false);\n  };\n  console.log(sortBy);\n  const dates = column.slice(2).sort();\n\n  const adjustedColumn = [name, kpi, ...dates, \"Total\"];\n  const [data, setData] = useState(adjustedColumn);\n  const [nodes, setNodes] = useState([]);\n  useEffect(() => {\n    setData(props.column);\n  }, [props.column]);\n\n  useEffect(() => {\n    let id = 1;\n    for (let i = 0; i < tableData.length; i++) {\n      tableData[i].id = id;\n      id++;\n      if (id % 10000 == 17) {\n        id += 9984;\n      }\n    }\n\n    setNodes(jsonToTree(tableData));\n  }, [tableData]);\n\n  const Data = moment(month).startOf(\"month\").format(\"yyyy-MM-DD\");\n\n  {\n    /*-------------------------------------For Getting Customer's According to BU------------------------------ */\n  }\n  const HandleInsertedData = (objId, objLabel, innerColumn) => {\n    abortController.current = new AbortController();\n    const loaderTime = setTimeout(() => {\n      setLoader(true);\n    }, 2000);\n    axios({\n      method: \"post\",\n      url:\n        baseUrl +\n        `/revenuemetricsms/RevenueMarginAnalysis/GetFinancialsFinalData`,\n      data: {\n        ownerDivisions: -1,\n        month: Data,\n        duration: searchdata.duration,\n        countries: searchdata.countries,\n        searchType: searchdata.searchType,\n        busUnits: searchdata.busUnits,\n        customers:\n          searchdata.customers == \"select\"\n            ? selectedCust\n            : searchdata.customers == \"0\"\n            ? searchdata.activeCustomers\n            : searchdata.customers,\n        srcType: searchdata.searchType,\n        srcTypeId: objId,\n        tarType: innerColumn,\n        busUnitId: -1,\n        custId: objId,\n        prjId: searchdata.prjId,\n        resId: searchdata.resId,\n        measures: searchdata.measures,\n        salesExecId: searchdata.salesExecId,\n        salesExecs: -1,\n        sortBy: searchdata.sortBy,\n        custCountries: searchdata.custCountries,\n        source: searchdata.source,\n        resTyp: searchdata.resTyp,\n        engCountries: searchdata.engCountries,\n        contTerms: searchdata.contTerms,\n        engComp: searchdata.engComp,\n        cslRes: searchdata.cslRes,\n        cslResId: searchdata.cslResId,\n        dpRes: -1,\n        dpResId: searchdata.dpResId,\n        indTypes: -1,\n        indTypesId: searchdata.indTypesId,\n      },\n      signal: abortController.current.signal,\n    })\n      .then((res) => {\n        setLoader(false);\n        clearTimeout(loaderTime);\n        let respData = res.data.data;\n        respData = respData.map((item) => {\n          return {\n            ...item,\n            name: item.name + \"*\" + objId + \"*\" + innerColumn,\n            ui: item.id,\n          };\n        });\n        setNodes((prevNodes) => {\n          const grossMarginIndex = prevNodes.findIndex((node) => {\n            return searchdata.measures !=\n              \"1350,638,965,639,640,641,643,644,872,761\"\n              ? searchdata.sortBy != -1\n                ? sortBy.some(\n                    (Item) =>\n                      node.kpi ===\n                        (Item.id == searchdata.sortBy ? Item.measures : \"\") &&\n                      node.name.split(\"*\")[0] === objLabel\n                  )\n                : node.kpi === defaultMeasureLabel &&\n                  node.name.split(\"*\")[0] === objLabel\n              : searchdata.sortBy == -1\n              ? node.kpi === defaultMeasureLabel &&\n                node.name.split(\"*\")[0] === objLabel\n              : sortBy.some(\n                  (Item) =>\n                    node.kpi ===\n                      (Item.id == searchdata.sortBy ? Item.measures : \"\") &&\n                    node.name.split(\"*\")[0] === objLabel\n                );\n          });\n\n          if (grossMarginIndex !== -1) {\n            return [\n              ...prevNodes.slice(0, grossMarginIndex + 1),\n              ...respData.map((data, i) => ({ ...data, id: objId + i + 1 })),\n              ...prevNodes.slice(grossMarginIndex + 1),\n            ];\n          } else {\n            return prevNodes;\n          }\n        });\n      })\n      .catch((e) => {\n        setLoader(false);\n        console.log(\"Error :\", e);\n      });\n  };\n\n  {\n    /*-------------------------------------For Getting Project's According to Customer------------------------------ */\n  }\n\n  const HandleInsertedData1 = (\n    objId,\n    objLabel,\n    innerColumn,\n    source,\n    custBU\n  ) => {\n    abortController.current = new AbortController();\n    const loaderTime = setTimeout(() => {\n      setLoader(true);\n    }, 2000);\n    axios({\n      method: \"post\",\n      url:\n        baseUrl +\n        `/revenuemetricsms/RevenueMarginAnalysis/GetFinancialsFinalData`,\n      data: {\n        ownerDivisions: -1,\n        month: Data,\n        duration: searchdata.duration,\n        countries: searchdata.countries,\n        searchType: \"Customer\",\n        busUnits: searchdata.busUnits,\n        customers:\n          searchdata.customers == \"select\"\n            ? selectedCust\n            : searchdata.customers == \"0\"\n            ? searchdata.activeCustomers\n            : searchdata.customers,\n        srcType: source,\n        srcTypeId: objId,\n        tarType: innerColumn,\n        busUnitId: -1,\n        custId: custBU,\n        prjId: objId,\n        resId: searchdata.resId,\n        measures: searchdata.measures,\n        salesExecId: searchdata.salesExecId,\n        salesExecs: -1,\n        sortBy: searchdata.sortBy,\n        custCountries: searchdata.custCountries,\n        source: searchdata.source,\n        resTyp: searchdata.resTyp,\n        engCountries: searchdata.engCountries,\n        contTerms: searchdata.contTerms,\n        engComp: searchdata.engComp,\n        cslRes: searchdata.cslRes,\n        cslResId: searchdata.cslResId,\n        dpRes: -1,\n        dpResId: searchdata.dpResId,\n        indTypes: -1,\n        indTypesId: searchdata.indTypesId,\n      },\n      signal: abortController.current.signal,\n    })\n      .then((res) => {\n        setLoader(false);\n        clearTimeout(loaderTime);\n        let respData = res.data.data;\n        respData = respData.map((item) => {\n          return {\n            ...item,\n            name: item.name + \"*\" + objId + \"*\" + innerColumn + \"*\" + custBU,\n          };\n        });\n        setNodes((prevNodes) => {\n          const grossMarginIndex = prevNodes.findIndex((node) => {\n            return searchdata.measures !=\n              \"1350,638,965,639,640,641,643,644,872,761\"\n              ? searchdata.sortBy != -1\n                ? sortBy.some(\n                    (Item) =>\n                      node.kpi ===\n                        (Item.id == searchdata.sortBy ? Item.measures : \"\") &&\n                      objLabel.includes(node.name.split(\"*\")[0]) &&\n                      node.ui == objId\n                  )\n                : node.kpi === defaultMeasureLabel &&\n                  objLabel.includes(node.name.split(\"*\")[0]) &&\n                  node.ui == objId\n              : searchdata.sortBy == -1\n              ? node.kpi === defaultMeasureLabel &&\n                objLabel.includes(node.name.split(\"*\")[0]) &&\n                node.ui == objId\n              : sortBy.some(\n                  (Item) =>\n                    node.kpi ===\n                      (Item.id == searchdata.sortBy ? Item.measures : \"\") &&\n                    objLabel.includes(node.name.split(\"*\")[0]) &&\n                    node.ui == objId\n                );\n          });\n\n          if (grossMarginIndex !== -1) {\n            return [\n              ...prevNodes.slice(0, grossMarginIndex + 1),\n              ...respData.map((data, i) => ({ ...data, id: objId + i + 1 })),\n              ...prevNodes.slice(grossMarginIndex + 1),\n            ];\n          } else {\n            return prevNodes;\n          }\n        });\n      })\n      .catch((e) => {\n        setLoader(false);\n        console.log(\"Error :\", e);\n      });\n  };\n\n  const HandleInsertedData2 = (\n    objId,\n    objLabel,\n    innerColumn,\n    source,\n    custBU,\n    custId\n  ) => {\n    abortController.current = new AbortController();\n    const loaderTime = setTimeout(() => {\n      setLoader(true);\n    }, 2000);\n    axios({\n      method: \"post\",\n      url:\n        baseUrl +\n        `/revenuemetricsms/RevenueMarginAnalysis/GetFinancialsFinalData`,\n      data: {\n        ownerDivisions: -1,\n        month: Data,\n        duration: searchdata.duration,\n        countries: searchdata.countries,\n        searchType: \"Customer\",\n        busUnits: searchdata.busUnits,\n        customers:\n          searchdata.customers == \"select\"\n            ? selectedCust\n            : searchdata.customers == \"0\"\n            ? searchdata.activeCustomers\n            : searchdata.customers,\n        srcType: source,\n        srcTypeId: objId,\n        tarType: innerColumn,\n        busUnitId: objId,\n        custId: custBU,\n        prjId: custId,\n        resId: searchdata.resId,\n        measures: searchdata.measures,\n        salesExecId: searchdata.salesExecId,\n        salesExecs: -1,\n        sortBy: searchdata.sortBy,\n        custCountries: searchdata.custCountries,\n        source: searchdata.source,\n        resTyp: searchdata.resTyp,\n        engCountries: searchdata.engCountries,\n        contTerms: searchdata.contTerms,\n        engComp: searchdata.engComp,\n        cslRes: searchdata.cslRes,\n        cslResId: searchdata.cslResId,\n        dpRes: -1,\n        dpResId: searchdata.dpResId,\n        indTypes: -1,\n        indTypesId: searchdata.indTypesId,\n      },\n      signal: abortController.current.signal,\n    })\n      .then((res) => {\n        setLoader(false);\n        clearTimeout(loaderTime);\n        let respData = res.data.data;\n        respData = respData.map((item) => {\n          return {\n            ...item,\n            name:\n              item.name +\n              \"*\" +\n              objId +\n              \"*\" +\n              innerColumn +\n              \"*\" +\n              custBU +\n              \"*\" +\n              custId,\n          };\n        });\n        setNodes((prevNodes) => {\n          const grossMarginIndex = prevNodes.findIndex((node) => {\n            return searchdata.measures !=\n              \"1350,638,965,639,640,641,643,644,872,761\"\n              ? searchdata.sortBy != -1\n                ? sortBy.some(\n                    (Item) =>\n                      node.kpi ===\n                        (Item.id == searchdata.sortBy ? Item.measures : \"\") &&\n                      node.name.split(\"*\")[0] === objLabel\n                  )\n                : node.kpi === defaultMeasureLabel &&\n                  node.name.split(\"*\")[0] === objLabel\n              : searchdata.sortBy == -1\n              ? node.kpi === defaultMeasureLabel &&\n                node.name.split(\"*\")[0] === objLabel\n              : sortBy.some(\n                  (Item) =>\n                    node.kpi ===\n                      (Item.id == searchdata.sortBy ? Item.measures : \"\") &&\n                    node.name.split(\"*\")[0] === objLabel\n                );\n          });\n\n          if (grossMarginIndex !== -1) {\n            return [\n              ...prevNodes.slice(0, grossMarginIndex + 1),\n              ...respData.map((data, i) => ({ ...data, id: objId + i + 1 })),\n              ...prevNodes.slice(grossMarginIndex + 1),\n            ];\n          } else {\n            return prevNodes;\n          }\n        });\n      })\n      .catch((e) => {\n        setLoader(false);\n        console.log(\"Error :\", e);\n      });\n  };\n\n  const HandleInsertedData3 = (\n    objId,\n    objLabel,\n    innerColumn,\n    source,\n    custBU,\n    projectID,\n    custprojectId\n  ) => {\n    abortController.current = new AbortController();\n    const loaderTime = setTimeout(() => {\n      setLoader(true);\n    }, 2000);\n    axios({\n      method: \"post\",\n      url:\n        baseUrl +\n        `/revenuemetricsms/RevenueMarginAnalysis/GetFinancialsFinalData`,\n      data: {\n        ownerDivisions: -1,\n        month: Data,\n        duration: searchdata.duration,\n        countries: searchdata.countries,\n        searchType: \"Customer\",\n        busUnits: searchdata.busUnits,\n        customers:\n          searchdata.customers == \"select\"\n            ? selectedCust\n            : searchdata.customers == \"0\"\n            ? searchdata.activeCustomers\n            : searchdata.customers,\n        srcType: source,\n        srcTypeId: objId,\n        tarType: innerColumn,\n        busUnitId: projectID,\n        custId: custBU,\n        prjId: custprojectId,\n        resId: -1,\n        measures: searchdata.measures,\n        salesExecId: searchdata.salesExecId,\n        salesExecs: -1,\n        sortBy: searchdata.sortBy,\n        custCountries: searchdata.custCountries,\n        source: searchdata.source,\n        resTyp: searchdata.resTyp,\n        engCountries: searchdata.engCountries,\n        contTerms: searchdata.contTerms,\n        engComp: searchdata.engComp,\n        cslRes: searchdata.cslRes,\n        cslResId: searchdata.cslResId,\n        dpRes: -1,\n        dpResId: searchdata.dpResId,\n        indTypes: -1,\n        indTypesId: searchdata.indTypesId,\n      },\n      signal: abortController.current.signal,\n    })\n      .then((res) => {\n        setLoader(false);\n        clearTimeout(loaderTime);\n        let respData = res.data.data;\n        respData = respData.map((item) => {\n          return {\n            ...item,\n            name: item.name + \"*\" + objId + \"*\" + innerColumn + \"*\" + custBU,\n          };\n        });\n        setNodes((prevNodes) => {\n          const grossMarginIndex = prevNodes.findIndex((node) => {\n            return searchdata.measures !=\n              \"1350,638,965,639,640,641,643,644,872,761\"\n              ? searchdata.sortBy != -1\n                ? sortBy.some(\n                    (Item) =>\n                      node.kpi ===\n                        (Item.id == searchdata.sortBy ? Item.measures : \"\") &&\n                      node.name.split(\"*\")[0].replace(/\\s+/g, \" \") ===\n                        objLabel.replace(/\\s+/g, \" \")\n                  )\n                : node.kpi === defaultMeasureLabel &&\n                  node.name.split(\"*\")[0].replace(/\\s+/g, \" \") ===\n                    objLabel.replace(/\\s+/g, \" \")\n              : searchdata.sortBy == -1\n              ? node.kpi === defaultMeasureLabel &&\n                node.name.split(\"*\")[0].replace(/\\s+/g, \" \") ===\n                  objLabel.replace(/\\s+/g, \" \")\n              : sortBy.some(\n                  (Item) =>\n                    node.kpi ===\n                      (Item.id == searchdata.sortBy ? Item.measures : \"\") &&\n                    node.name.split(\"*\")[0].replace(/\\s+/g, \" \") ===\n                      objLabel.replace(/\\s+/g, \" \")\n                );\n          });\n\n          if (grossMarginIndex !== -1) {\n            return [\n              ...prevNodes.slice(0, grossMarginIndex + 1),\n              ...respData.map((data, i) => ({ ...data, id: objId + i + 1 })),\n              ...prevNodes.slice(grossMarginIndex + 1),\n            ];\n          } else {\n            return prevNodes;\n          }\n        });\n      })\n      .catch((e) => {\n        setLoader(false);\n        console.log(\"Error :\", e);\n      });\n  };\n\n  const jsonToTree = (flatArray, options) => {\n    options = {\n      id: \"id\",\n      parentId: \"parentId\",\n      children: \"subRows\",\n      ...options,\n    };\n    const dictionary = {};\n    const tree = [];\n    const children = options.children;\n    flatArray.forEach((node) => {\n      const nodeId = node[options.id];\n      const nodeParentId = node[options.parentId];\n      dictionary[nodeId] = {\n        [children]: [],\n        ...node,\n        ...dictionary[nodeId],\n      };\n      dictionary[nodeParentId] = dictionary[nodeParentId] || { [children]: [] };\n      dictionary[nodeParentId][children].push(dictionary[nodeId]);\n    });\n\n    Object.values(dictionary).forEach((obj) => {\n      if (typeof obj[options.id] === \"undefined\") {\n        tree.push(...obj[children]);\n      }\n    });\n    return tree;\n  };\n\n  const dynamicColumns = [\n    {\n      header: (\n        <div className=\"legendContainer wrap\">\n          <div className=\"legend darkgreen\">\n            <div className=\"legendCircle\"></div>\n            <div className=\"legendTxt\">Customer</div>\n          </div>\n          <div className=\"legend  purple\">\n            <div className=\"legendCircle\"></div>\n            <div className=\"legendTxt\">Project</div>\n          </div>\n          <div className=\"legend  lightbrown\">\n            <div className=\"legendCircle\"></div>\n            <div className=\"legendTxt\">BU</div>\n          </div>\n          <div className=\"legend brown\">\n            <div className=\"legendCircle\"></div>\n            <div className=\"legendTxt\">Res</div>\n          </div>\n        </div>\n      ),\n      accessorKey: `name`,\n      enableGrouping: false,\n      GroupedCell: ({ cell }) => {\n        if (selectType == \"Customer\") {\n          //--------------------//----------------------//-----------------------Parent Level (Customer)\n          const department = customer.find(\n            (dep) => dep.fullName === cell.getValue()\n          );\n\n          const [activeIcons, setActiveIcons] = useState({});\n\n          const handleClick = () => {\n            if (department) {\n              const { id, fullName } = department;\n              const isDataPresent = nodes.some((node) => {\n                return node.name.includes(`*${id}`);\n              });\n\n              if (isDataPresent) {\n                setActiveIcons((prevActiveIcons) => ({\n                  ...prevActiveIcons,\n                  [id]: false,\n                }));\n                setNodes((prevNodes) =>\n                  prevNodes.filter((node) => !node.name.includes(`*${id}`))\n                );\n              } else {\n                setActiveIcons((prevActiveIcons) => ({\n                  ...prevActiveIcons,\n                  [id]: true,\n                }));\n                HandleInsertedData(id, fullName, \"Project\");\n              }\n            }\n          };\n\n          //--------------------//----------------------//-----------------------First Child Layer (Project)\n\n          const cust = project.find((dep) => {\n            return (\n              dep.name === cell.getValue().split(\"*\")[0] ||\n              (dep.name.includes(cell.getValue().split(\"*\")[0]) &&\n                dep.id == cell.row.original.ui)\n            );\n          });\n\n          const [activeIcons1, setActiveIcons1] = useState({});\n\n          const handleClick1 = () => {\n            if (cust) {\n              const { id, name } = cust;\n              const isDataPresent = nodes.some((node) => {\n                return node.name.includes(`*${id}`);\n              });\n\n              if (isDataPresent) {\n                setActiveIcons1((prevActiveIcons) => ({\n                  ...prevActiveIcons,\n                  [id]: false,\n                }));\n                setNodes((prevNodes) =>\n                  prevNodes.filter((node) => !node.name.includes(`*${id}`))\n                );\n              } else {\n                setActiveIcons1((prevActiveIcons) => ({\n                  ...prevActiveIcons,\n                  [id]: true,\n                }));\n                HandleInsertedData1(\n                  id,\n                  name,\n                  \"BusinessUnit\",\n                  \"Project\",\n                  cell.getValue().split(\"*\")[1]\n                );\n              }\n            }\n          };\n\n          //--------------------//----------------------//-----------------------Second Child Layer (BU)\n\n          let projBU;\n          let custId;\n          const proj = departments.find((dep) => {\n            if (dep.label === cell.getValue().split(\"*\")[0]) {\n              const value = cell.getValue().split(\"*\")[3];\n              projBU = value;\n              custId = cell.getValue().split(\"*\")[1];\n            }\n            return (\n              dep.label === cell.getValue().split(\"*\")[0] ||\n              dep.label === cell.getValue().split(\"*\")[0]\n            );\n          });\n\n          const [activeIcons2, setActiveIcons2] = useState({});\n\n          const handleClick2 = () => {\n            if (proj) {\n              const { value, label } = proj;\n              const isDataPresent = nodes.some((node) => {\n                return node.name.includes(`*${value}`);\n              });\n\n              if (isDataPresent) {\n                setActiveIcons2((prevActiveIcons) => ({\n                  ...prevActiveIcons,\n                  [value]: false,\n                }));\n                setNodes((prevNodes) =>\n                  prevNodes.filter((node) => !node.name.includes(`*${value}`))\n                );\n              } else {\n                setActiveIcons2((prevActiveIcons) => ({\n                  ...prevActiveIcons,\n                  [value]: true,\n                }));\n                HandleInsertedData2(\n                  value,\n                  label,\n                  \"Res\",\n                  \"BusinessUnit\",\n                  projBU,\n                  custId\n                );\n              }\n            }\n          };\n\n          // //--------------------//----------------------//-----------------------Third Child Layer (Resource)\n\n          let resBU;\n          let projectID;\n          let custprojectId;\n          const res = resources.find((dep) => {\n            if (dep.full_name === cell.getValue().split(\"*\")[0]) {\n              const value = cell.getValue().split(\"*\")[3];\n              projectID = cell.getValue().split(\"*\")[1];\n              custprojectId = cell.getValue().split(\"*\")[4];\n              resBU = value;\n            }\n            const fullNameParts = dep.full_name\n              .split(\"*\")[0]\n              .split(\" \")\n              .filter((part) => part !== \"\");\n            const cellValueParts = cell\n              .getValue()\n              .split(\"*\")[0]\n              .split(\" \")\n              .filter((part) => part !== \"\");\n\n            return cell.getValue().split(\"*\")[0] == \"\"\n              ? \"\"\n              : cellValueParts.every((value) => fullNameParts.includes(value));\n          });\n\n          const [activeIcons3, setActiveIcons3] = useState({});\n\n          const handleClick3 = () => {\n            if (res) {\n              const { id, full_name } = res;\n              const isDataPresent = nodes.some((node) => {\n                return node.name.includes(`*${id}`);\n              });\n\n              if (isDataPresent) {\n                setActiveIcons3((prevActiveIcons) => ({\n                  ...prevActiveIcons,\n                  [id]: false,\n                }));\n                setNodes((prevNodes) =>\n                  prevNodes.filter((node) => !node.name.includes(`*${id}`))\n                );\n              } else {\n                setActiveIcons3((prevActiveIcons) => ({\n                  ...prevActiveIcons,\n                  [id]: true,\n                }));\n                HandleInsertedData3(\n                  id,\n                  full_name,\n                  \"Leaf\",\n                  \"Res\",\n                  cell.getValue().split(\"*\")[3],\n                  cell.getValue().split(\"*\")[1],\n                  cell.getValue().split(\"*\")[4]\n                );\n              }\n            }\n          };\n\n          //--------------------//----------------------//-----------------------Execution of the Layers\n          if (department) {\n            const { id } = department;\n            const isActive = activeIcons[id];\n            return (\n              <span\n                style={{ cursor: \"pointer\" }}\n                value={department.id}\n                onClick={() => {\n                  handleClick();\n                }}\n                className={\"parent\"}\n              >\n                {isActive ? <FaChevronCircleDown /> : <FaChevronCircleRight />}{\" \"}\n                <b\n                  className=\"custRM\"\n                  title={\n                    department.fullName + \" (\" + cell.row.original.count + \")\"\n                  }\n                >\n                  {department.fullName} ({cell.row.original.count})\n                </b>\n              </span>\n            );\n          } else if (cust) {\n            const { id } = cust;\n            const isActive1 = activeIcons1[id];\n            return (\n              <span\n                style={{ cursor: \"pointer\" }}\n                value={cust.id}\n                onClick={() => {\n                  handleClick1();\n                }}\n                className={\"parent\"}\n              >\n                {isActive1 ? <FaChevronCircleDown /> : <FaChevronCircleRight />}{\" \"}\n                <b\n                  className=\"projRM\"\n                  title={cust.name + \" (\" + cell.row.original.count + \")\"}\n                >\n                  {cell.getValue().split(\"*\")[0] == \"\"\n                    ? \"Summary\"\n                    : \"\" + cust.name + \" (\" + cell.row.original.count + \")\"}\n                </b>\n              </span>\n            );\n          } else if (proj) {\n            const { value } = proj;\n            const isActive2 = activeIcons2[value];\n            return (\n              <span\n                style={{ cursor: \"pointer\" }}\n                value={proj.value}\n                onClick={() => {\n                  handleClick2();\n                }}\n                className={\"parent\"}\n              >\n                {isActive2 ? <FaChevronCircleDown /> : <FaChevronCircleRight />}{\" \"}\n                <b\n                  className=\"buRM\"\n                  title={proj.label + \" (\" + cell.row.original.count + \")\"}\n                >\n                  {proj.label} ({cell.row.original.count})\n                </b>\n              </span>\n            );\n          } else if (res) {\n            const { id } = res;\n            const isActive3 = activeIcons3[id];\n            return (\n              <span\n                style={{ cursor: \"pointer\" }}\n                value={res.id}\n                onClick={() => {\n                  handleClick3();\n                }}\n                className={\"parent\"}\n              >\n                {isActive3 ? <FaChevronCircleDown /> : <FaChevronCircleRight />}{\" \"}\n                <b className=\"resRM\" title={res.full_name}>\n                  {res.full_name}\n                </b>\n              </span>\n            );\n          } else {\n            return (\n              <span\n                className=\"child\"\n                title={\n                  cell.row.original.name === \"\"\n                    ? \"Summary\"\n                    : cell.getValue().split(\"*\")[0] +\n                      \" (\" +\n                      cell.row.original.count +\n                      \")\"\n                }\n              >\n                <b\n                  className={\n                    cell.getValue().split(\"*\")[2] == \"Project\"\n                      ? \"custRM\"\n                      : cell.getValue().split(\"*\")[2] == \"BusinessUnit\"\n                      ? \"projRM\"\n                      : cell.getValue().split(\"*\")[2] == \"Res\"\n                      ? \"buRM\"\n                      : cell.getValue().split(\"*\")[2] == \"Leaf\"\n                      ? \"resRM\"\n                      : \"\"\n                  }\n                  style={{\n                    display:\n                      cell.row.original.name == \"\" ||\n                      cell.getValue().split(\"*\")[0] == \"\"\n                        ? \"flex\"\n                        : \"\",\n                    justifyContent:\n                      cell.row.original.name == \"\" ||\n                      cell.getValue().split(\"*\")[0] == \"\"\n                        ? \"center\"\n                        : \"\",\n                  }}\n                >\n                  {cell.row.original.name == \"\" ? (\n                    \"Summary\"\n                  ) : cell.getValue().split(\"*\")[0] == \"\" ? (\n                    \"Summary\"\n                  ) : (\n                    <div onClick={handleClick1}>\n                      <FaChevronCircleRight /> {cell.getValue().split(\"*\")[0]}\n                    </div>\n                  )}{\" \"}\n                  {cell.row.original.count === 0\n                    ? \"\"\n                    : `(${cell.row.original.count})`}\n                </b>{\" \"}\n              </span>\n            );\n          }\n        }\n      },\n    },\n    {\n      header: \"\",\n      accessorKey: `kpi`,\n      Cell: ({ cell }) => {\n        const department = customer.find(\n          (dep) => dep.fullName === cell.row.original.name\n        );\n\n        const cust = project.find((dep) => {\n          return dep.name === cell.row.original.name.split(\"*\")[0];\n        });\n\n        const proj = departments.find((dep) => {\n          return dep.label === cell.row.original.name.split(\"*\")[0];\n        });\n        const res = resources.find((dep) => {\n          const fullNameParts = dep.full_name.split(\"*\")[0].split(\" \");\n          const cellValueParts = cell.row.original.name\n            .split(\"*\")[0]\n            .split(\" \");\n\n          return cell.row.original.name.split(\"*\")[0] == \"\"\n            ? \"\"\n            : cellValueParts.every((value) => fullNameParts.includes(value));\n        });\n        return (\n          <span>\n            <b\n              className={\n                department\n                  ? \"custRMchild\"\n                  : cust\n                  ? \"projRMchild\"\n                  : proj\n                  ? \"buRMchild\"\n                  : res\n                  ? \"resRMchild\"\n                  : cell.row.original.name.split(\"*\")[2] == \"Project\"\n                  ? \"custRMchild\"\n                  : cell.row.original.name.split(\"*\")[2] == \"BusinessUnit\"\n                  ? \"projRMchild\"\n                  : cell.row.original.name.split(\"*\")[2] == \"Res\"\n                  ? \"buRMchild\"\n                  : cell.row.original.name.split(\"*\")[2] == \"Leaf\"\n                  ? \"resRMchild\"\n                  : \"\"\n              }\n            >\n              {cell.getValue()}\n            </b>\n          </span>\n        );\n      },\n    },\n  ];\n\n  data.forEach((item, index) => {\n    if (index > 1 && item !== \"Total\") {\n      const dateObj = new Date(\n        `${item.slice(0, 4)}-${item.slice(5, 7)}-${item.slice(8, 10)}`\n      );\n\n      const header = dateObj\n        .toLocaleDateString(\"en-US\", { month: \"short\", year: \"numeric\" })\n        .replace(\" \", \"-\");\n      const currentDate = new Date()\n        .toLocaleDateString(\"en-US\", {\n          month: \"short\",\n          year: \"numeric\",\n        })\n        .replace(\" \", \"-\");\n\n      let greenDate = new Date(header) >= new Date(currentDate);\n      dynamicColumns.push({\n        header,\n        accessorKey: `${item}`,\n        className: \"software\",\n        Cell: ({ cell }) => (\n          <span className={greenDate ? \"greenColumn\" : \"\"}>\n            {cell.row.original.kpi == \"Planned Revenue\" ||\n            cell.row.original.kpi == \"Actual Revenue\" ||\n            cell.row.original.kpi == \"Recognized Revenue\" ||\n            cell.row.original.kpi == \"Resource Direct Cost\" ||\n            cell.row.original.kpi == \"Other Direct Cost\" ||\n            cell.row.original.kpi == \"Gross Margin\" ? (\n              <span style={{ display: \"block\", float: \"left\" }}>$</span>\n            ) : (\n              \"\"\n            )}\n            <span style={{ display: \"block\", float: \"right\" }}>\n              {cell.getValue() == null\n                ? 0\n                : cell.getValue()?.toLocaleString(\"en-US\")}\n              {cell.row.original.kpi == \"Gross Margin %\" ||\n              cell.row.original.kpi == \"Billable Utilization\" ||\n              (cell.row.original.kpi == \"FTE\" &&\n                cell.row.original.descr != \"hcfte\") ||\n              (cell.row.original.kpi == \"SUBK\" &&\n                cell.row.original.descr != \"hcsubk\") ||\n              cell.row.original.kpi == \"Billed Utilization\" ? (\n                <span>%</span>\n              ) : (\n                \"\"\n              )}\n            </span>\n          </span>\n        ),\n      });\n    }\n  });\n\n  {\n    /*----------------------------------Total-------------------------------- */\n  }\n\n  const columnIndex = dynamicColumns.length;\n\n  const newColumn = {\n    header: \"Total\",\n    accessorKey: `Total`,\n    Cell: ({ cell }) => (\n      <>\n        {cell.row.original.kpi == \"Planned Revenue\" ||\n        cell.row.original.kpi == \"Actual Revenue\" ||\n        cell.row.original.kpi == \"Recognized Revenue\" ||\n        cell.row.original.kpi == \"Resource Direct Cost\" ||\n        cell.row.original.kpi == \"Other Direct Cost\" ||\n        cell.row.original.kpi == \"Gross Margin\" ? (\n          <span style={{ display: \"block\", float: \"left\" }}>\n            <b>$</b>\n          </span>\n        ) : (\n          \"\"\n        )}\n        <span style={{ display: \"block\", float: \"right\" }} className=\"total\">\n          <b>\n            {cell.getValue()?.toLocaleString(\"en-US\")}\n            {cell.row.original.kpi == \"Gross Margin %\" ||\n            cell.row.original.kpi == \"Billable Utilization\" ||\n            (cell.row.original.kpi == \"FTE\" &&\n              cell.row.original.descr != \"hcfte\") ||\n            (cell.row.original.kpi == \"SUBK\" &&\n              cell.row.original.descr != \"hcsubk\") ||\n            cell.row.original.kpi == \"Billed Utilization\" ? (\n              <span>{cell.getValue() == null ? 0 : \"%\"}</span>\n            ) : (\n              \"\"\n            )}\n          </b>\n        </span>\n      </>\n    ),\n  };\n\n  dynamicColumns.splice(columnIndex, 0, newColumn);\n  {\n    /*--------------------------Export Excel---------------------- */\n  }\n\n  const exportExcel = () => {\n    import(\"exceljs\").then((ExcelJS) => {\n      const workbook = new ExcelJS.Workbook();\n      const worksheet = workbook.addWorksheet(\"Revenue Analysis\");\n      let desiredColumnOrder = [];\n      let cols = [];\n      cols = data;\n      desiredColumnOrder = cols;\n      //----------------Months Sorting in order-----------------\n      desiredColumnOrder.sort((colA, colB) => {\n        const [, yearA, monthA] = colA.split(\"_\");\n        const [, yearB, monthB] = colB.split(\"_\");\n\n        if (yearA !== yearB) {\n          return parseInt(yearA) - parseInt(yearB);\n        }\n        return parseInt(monthA) - parseInt(monthB);\n      });\n      const wantedValues = data.concat(nodes).map((item) => {\n        const obj = {};\n        data.forEach((col) => {\n          const value = item[col];\n          if (typeof value === \"string\") {\n            const [extractedValue, ,] = value.split(\"^&\");\n            obj[col] = extractedValue;\n          } else if (typeof value === \"number\") {\n            obj[col] = value.toLocaleString(\"en-US\");\n          } else {\n            obj[col] = value;\n          }\n        });\n\n        if (\"name\" in obj && obj[\"name\"] === \"\") {\n          obj[\"name\"] = \"Summary\";\n        } else if (\n          \"name\" in obj &&\n          obj[\"name\"] !== \"\" &&\n          obj[\"name\"] !== undefined\n        ) {\n          obj[\"name\"] =\n            obj[\"name\"].split(\"*\")[0] == \"\"\n              ? \"Summary\"\n              : obj[\"name\"].split(\"*\")[0];\n        }\n\n        if (\n          obj[\"kpi\"] === \"Planned Revenue\" ||\n          obj[\"kpi\"] === \"Actual Revenue\" ||\n          obj[\"kpi\"] === \"Recognized Revenue\" ||\n          obj[\"kpi\"] === \"Resource Direct Cost\" ||\n          obj[\"kpi\"] === \"Other Direct Cost\" ||\n          obj[\"kpi\"] === \"Gross Margin\"\n        ) {\n          Object.keys(obj).forEach((key) => {\n            if (key !== \"name\" && key !== \"kpi\" && !isNaN(obj[key])) {\n              // obj[key] = `$ ${obj[key]}`;\n              obj[key] = \"$\" + (obj[key] == null ? \"\" : obj[key]);\n            }\n          });\n        } else if (\n          obj[\"kpi\"] === \"Gross Margin %\" ||\n          obj[\"kpi\"] === \"Billable Utilization\" ||\n          obj[\"kpi\"] === \"Billed Utilization\" ||\n          obj[\"kpi\"] === \"FTE\" ||\n          obj[\"kpi\"] === \"SUBK\"\n        ) {\n          Object.keys(obj).forEach((key) => {\n            if (key !== \"name\" && key !== \"kpi\" && !isNaN(obj[key])) {\n              obj[key] = (obj[key] == null ? 0 : obj[key]) + \" %\";\n            }\n          });\n        }\n\n        return obj;\n      });\n\n      const formatMMMYYYY = (dateStr) => {\n        const [year, month, day] = dateStr.split(\"_\");\n        const monthName = new Date(`${year}-${month}-01`).toLocaleString(\n          \"en-us\",\n          { month: \"short\" }\n        );\n        return `${monthName}-${year}`;\n      };\n\n      const formatHeaderKey = (key) => {\n        if (key.match(/^\\d{4}_\\d{2}_\\d{2}$/)) {\n          return formatMMMYYYY(key);\n        }\n        return key;\n      };\n\n      const headerRow = {};\n      Object.keys(wantedValues[0]).forEach((key) => {\n        headerRow[key] =\n          formatHeaderKey(key) == \"name\"\n            ? \"Customer  Project  BU  Res\"\n            : formatHeaderKey(key) == \"kpi\"\n            ? \"\"\n            : formatHeaderKey(key);\n      });\n\n      const filteredValues = wantedValues.filter((item) =>\n        Object.values(item).some(\n          (value) => value !== null && value !== undefined && value !== \"\"\n        )\n      );\n\n      filteredValues.unshift(headerRow);\n\n      const rows = filteredValues.map((item) => {\n        const row = [];\n        desiredColumnOrder.forEach((col) => {\n          row.push(item[col]);\n        });\n        return row;\n      });\n\n      rows.forEach((row) => {\n        worksheet.addRow(row);\n      });\n\n      //--------------bold--------------------\n      [1].forEach((rowIndex) => {\n        const row = worksheet.getRow(rowIndex);\n        row.font = { bold: true };\n      });\n\n      // ----------  Name Merging ---------------------\n      const nameColumnIndex = desiredColumnOrder.indexOf(\"name\");\n\n      let mergeStartIndex = 1;\n      let currentName = rows[0][nameColumnIndex];\n\n      for (let rowIndex = 1; rowIndex < rows.length; rowIndex++) {\n        const row = rows[rowIndex];\n        const rowName = row[nameColumnIndex];\n\n        if (rowName !== currentName) {\n          if (rowIndex - mergeStartIndex > 0) {\n            worksheet.mergeCells(\n              mergeStartIndex + 1,\n              nameColumnIndex,\n              rowIndex,\n              nameColumnIndex\n            );\n          }\n\n          mergeStartIndex = rowIndex;\n          currentName = rowName;\n        }\n      }\n\n      if (rows.length - mergeStartIndex > 0) {\n        worksheet.mergeCells(\n          mergeStartIndex + 1,\n          nameColumnIndex,\n          rows.length,\n          nameColumnIndex\n        );\n      }\n\n      workbook.xlsx.writeBuffer().then((buffer) => {\n        saveAs(new Blob([buffer]), \"Revenue Analysis.xlsx\");\n      });\n    });\n  };\n  console.log({ nodes: nodes, dynamicColumns: dynamicColumns });\n\n  return (\n    <div className=\"materialReactExpandableTable headCountTable darkHeader\">\n      <div className=\"mb-2\" align=\" right \">\n        <RiFileExcel2Line\n          size=\"1.5em\"\n          title=\"Export to Excel\"\n          style={{ color: \"green\" }}\n          cursor=\"pointer\"\n          onClick={exportExcel}\n        />\n      </div>\n      <MaterialReactTable\n        columns={dynamicColumns}\n        data={nodes}\n        enableExpanding={(column) => column.id === \"name\"}\n        enableRowVirtualization={true}\n        enablePagination={false}\n        enableGlobalFilter={true}\n        enableDensityToggle={false}\n        enableFullScreenToggle={false}\n        enableHiding={false}\n        enableColumnFilters={false}\n        enableBottomToolbar={false}\n        enableTopToolbar={false}\n        enableColumnActions={false}\n        enableSorting={false}\n        filterFromLeafRows //apply filtering to all rows instead of just parent rows\n        initialState={{\n          showGlobalFilter: true,\n          grouping: [\"name\"],\n          expanded: true,\n          density: \"compact\",\n          columnPinning: { right: [\"Total\"] },\n        }} //expand all rows by default\n        muiTableContainerProps={\n          {\n            // sx: { height: \"49vh\", width: \"auto\" },\n          }\n        }\n        muiTableBodyProps={{\n          sx: {\n            \"&\": {\n              borderRight: \"1px solid #ccc\",\n              borderBottom: \"1px solid #ccc\",\n            },\n            \"& td\": {\n              borderRight: \"1px solid #ccc\",\n              height: \"22px\",\n              padding: \"0px 5px\",\n            },\n          },\n        }}\n        muiTableHeadProps={{\n          sx: {\n            \"& th\": {\n              borderTop: \"1px solid #ccc\",\n              borderRight: \"1px solid #ccc\",\n              background: \"#f4f4f4 \",\n              padding: \"0 5px\",\n            },\n          },\n        }}\n      />\n      {loader ? <Loader handleAbort={handleAbort} /> : \"\"}\n    </div>\n  );\n}\n\nexport default MarginAnalysisCustomer;\n","import React, { useState, useMemo, memo, useRef } from \"react\";\nimport MaterialReactTable from \"material-react-table\";\nimport { useEffect } from \"react\";\nimport \"./HeadCountTableComponent.scss\";\nimport moment from \"moment\";\nimport Loader from \"../Loader/Loader\";\nimport { environment } from \"../../environments/environment\";\nimport { FaChevronCircleRight, FaChevronCircleDown } from \"react-icons/fa\";\nimport axios from \"axios\";\nimport { RiFileExcel2Line } from \"react-icons/ri\";\n\nfunction MarginAnalysisProject(props) {\n  const {\n    tableData,\n    column,\n    selectType,\n    month,\n    searchdata,\n    project,\n    resources,\n    sortBy,\n    laterMeasureLabel,\n    defaultMeasureLabel,\n  } = props;\n  const baseUrl = environment.baseUrl;\n  const abortController = useRef(null);\n  const [loader, setLoader] = useState(false);\n  const name = column[0];\n  const kpi = column[1];\n  const handleAbort = () => {\n    abortController.current && abortController.current.abort();\n    setLoader(false);\n  };\n\n  const dates = column.slice(2).sort();\n\n  const adjustedColumn = [name, kpi, ...dates, \"Total\"];\n  const [data, setData] = useState(adjustedColumn);\n  const [nodes, setNodes] = useState([]);\n  useEffect(() => {\n    setData(props.column);\n  }, [props.column]);\n\n  useEffect(() => {\n    let id = 1;\n    for (let i = 0; i < tableData.length; i++) {\n      tableData[i].id = id;\n      id++;\n      if (id % 10000 == 17) {\n        id += 9984;\n      }\n    }\n\n    setNodes(jsonToTree(tableData));\n  }, [tableData]);\n\n  const Data = moment(month).startOf(\"month\").format(\"yyyy-MM-DD\");\n\n  {\n    /*-------------------------------------For Getting Customer's According to BU------------------------------ */\n  }\n  const HandleInsertedData = (objId, objLabel, innerColumn) => {\n    abortController.current = new AbortController();\n    const loaderTime = setTimeout(() => {\n      setLoader(true);\n    }, 2000);\n    axios({\n      method: \"post\",\n      url:\n        baseUrl +\n        `/revenuemetricsms/RevenueMarginAnalysis/GetFinancialsFinalData`,\n      data: {\n        ownerDivisions: -1,\n        month: Data,\n        duration: searchdata.duration,\n        countries: searchdata.countries,\n        searchType: searchdata.searchType,\n        busUnits: -1,\n        customers:\n          searchdata.customers == \"select\"\n            ? selectedCust\n            : searchdata.customers,\n        srcType: searchdata.searchType,\n        srcTypeId: objId,\n        tarType: innerColumn,\n        busUnitId: -1,\n        custId: -1,\n        prjId: objId,\n        resId: searchdata.resId,\n        measures: searchdata.measures,\n        salesExecId: searchdata.salesExecId,\n        salesExecs: -1,\n        sortBy: searchdata.sortBy,\n        custCountries: searchdata.custCountries,\n        source: searchdata.source,\n        resTyp: searchdata.resTyp,\n        engCountries: searchdata.engCountries,\n        contTerms: searchdata.contTerms,\n        engComp: searchdata.engComp,\n        cslRes: searchdata.cslRes,\n        cslResId: searchdata.cslResId,\n        dpRes: -1,\n        dpResId: searchdata.dpResId,\n        indTypes: -1,\n        indTypesId: searchdata.indTypesId,\n      },\n      signal: abortController.current.signal,\n    })\n      .then((res) => {\n        setLoader(false);\n        clearTimeout(loaderTime);\n        let respData = res.data.data;\n        respData = respData.map((item) => {\n          return {\n            ...item,\n            name: item.name + \"*\" + objId + \"*\" + innerColumn,\n          };\n        });\n        setNodes((prevNodes) => {\n          const grossMarginIndex = prevNodes.findIndex((node) => {\n            return searchdata.sortBy == -1\n              ? node.descr === \"Planned Revenue\" && node.name === objLabel\n              : sortBy.some(\n                  (Item) =>\n                    node.kpi ===\n                      (Item.id == searchdata.sortBy ? Item.measures : \"\") &&\n                    node.name.split(\"*\")[0] === objLabel\n                );\n          });\n          if (grossMarginIndex !== -1) {\n            return [\n              ...prevNodes.slice(0, grossMarginIndex + 1),\n              ...respData.map((data, i) => ({ ...data, id: objId + i + 1 })),\n              ...prevNodes.slice(grossMarginIndex + 1),\n            ];\n          } else {\n            return prevNodes;\n          }\n        });\n      })\n      .catch((e) => {\n        setLoader(false);\n        console.log(\"Error :\", e);\n      });\n  };\n\n  {\n    /*-------------------------------------For Getting Project's According to Customer------------------------------ */\n  }\n\n  const HandleInsertedData1 = (\n    objId,\n    objLabel,\n    innerColumn,\n    source,\n    custBU\n  ) => {\n    abortController.current = new AbortController();\n    const loaderTime = setTimeout(() => {\n      setLoader(true);\n    }, 2000);\n    axios({\n      method: \"post\",\n      url:\n        baseUrl +\n        `/revenuemetricsms/RevenueMarginAnalysis/GetFinancialsFinalData`,\n      data: {\n        ownerDivisions: -1,\n        month: Data,\n        duration: searchdata.duration,\n        countries: searchdata.countries,\n        searchType: \"Project\",\n        busUnits: -1,\n        customers:\n          searchdata.customers == \"select\"\n            ? selectedCust\n            : searchdata.customers,\n        srcType: source,\n        srcTypeId: objId,\n        tarType: innerColumn,\n        busUnitId: -1,\n        custId: -1,\n        prjId: custBU,\n        resId: searchdata.resId,\n        measures: searchdata.measures,\n        salesExecId: searchdata.salesExecId,\n        salesExecs: -1,\n        sortBy: searchdata.sortBy,\n        custCountries: searchdata.custCountries,\n        source: searchdata.source,\n        resTyp: searchdata.resTyp,\n        engCountries: searchdata.engCountries,\n        contTerms: searchdata.contTerms,\n        engComp: searchdata.engComp,\n        cslRes: searchdata.cslRes,\n        cslResId: searchdata.cslResId,\n        dpRes: -1,\n        dpResId: searchdata.dpResId,\n        indTypes: -1,\n        indTypesId: searchdata.indTypesId,\n      },\n      signal: abortController.current.signal,\n    })\n      .then((res) => {\n        setLoader(false);\n        clearTimeout(loaderTime);\n        let respData = res.data.data;\n        respData = respData.map((item) => {\n          return {\n            ...item,\n            name: item.name + \"*\" + objId + \"*\" + innerColumn + \"*\" + custBU,\n          };\n        });\n        setNodes((prevNodes) => {\n          const grossMarginIndex = prevNodes.findIndex((node) => {\n            const firstValueWords = node.name\n              .split(\"*\")[0]\n              .replace(/\\s+/g, \" \")\n              .split(\" \");\n            const secondValueWords = objLabel.replace(/\\s+/g, \" \").split(\" \");\n            return searchdata.measures !=\n              \"1350,638,965,639,640,641,643,644,872,761\"\n              ? searchdata.sortBy != -1\n                ? sortBy.some(\n                    (Item) =>\n                      (node.kpi ===\n                        (Item.id == searchdata.sortBy ? Item.measures : \"\") &&\n                        node.name.split(\"*\")[0].replace(/\\s+/g, \" \") ===\n                          objLabel.replace(/\\s+/g, \" \")) ||\n                      firstValueWords.every((word) =>\n                        secondValueWords.includes(word)\n                      )\n                  )\n                : (node.kpi === defaultMeasureLabel &&\n                    node.name.split(\"*\")[0].replace(/\\s+/g, \" \") ===\n                      objLabel.replace(/\\s+/g, \" \")) ||\n                  firstValueWords.every((word) =>\n                    secondValueWords.includes(word)\n                  )\n              : searchdata.sortBy == -1\n              ? (node.kpi === defaultMeasureLabel &&\n                  node.name.split(\"*\")[0].replace(/\\s+/g, \" \") ===\n                    objLabel.replace(/\\s+/g, \" \")) ||\n                firstValueWords.every((word) => secondValueWords.includes(word))\n              : sortBy.some(\n                  (Item) =>\n                    (node.kpi ===\n                      (Item.id == searchdata.sortBy ? Item.measures : \"\") &&\n                      node.name.split(\"*\")[0].replace(/\\s+/g, \" \") ===\n                        objLabel.replace(/\\s+/g, \" \")) ||\n                    firstValueWords.every((word) =>\n                      secondValueWords.includes(word)\n                    )\n                );\n          });\n\n          if (grossMarginIndex !== -1) {\n            return [\n              ...prevNodes.slice(0, grossMarginIndex + 1),\n              ...respData.map((data, i) => ({ ...data, id: objId + i + 1 })),\n              ...prevNodes.slice(grossMarginIndex + 1),\n            ];\n          } else {\n            return prevNodes;\n          }\n        });\n      })\n      .catch((e) => {\n        setLoader(false);\n        console.log(\"Error :\", e);\n      });\n  };\n\n  const jsonToTree = (flatArray, options) => {\n    options = {\n      id: \"id\",\n      parentId: \"parentId\",\n      children: \"subRows\",\n      ...options,\n    };\n    const dictionary = {};\n    const tree = [];\n    const children = options.children;\n    flatArray.forEach((node) => {\n      const nodeId = node[options.id];\n      const nodeParentId = node[options.parentId];\n      dictionary[nodeId] = {\n        [children]: [],\n        ...node,\n        ...dictionary[nodeId],\n      };\n      dictionary[nodeParentId] = dictionary[nodeParentId] || { [children]: [] };\n      dictionary[nodeParentId][children].push(dictionary[nodeId]);\n    });\n\n    Object.values(dictionary).forEach((obj) => {\n      if (typeof obj[options.id] === \"undefined\") {\n        tree.push(...obj[children]);\n      }\n    });\n    return tree;\n  };\n\n  const dynamicColumns = [\n    // for data[0] where accessorKey is name\n    {\n      header: (\n        // <div className=\"header-label\">BU Customer Project Res</div>\n        <div className=\"legendContainer wrap\">\n          <div className=\"legend  purple\">\n            <div className=\"legendCircle\"></div>\n            <div className=\"legendTxt\">Project</div>\n          </div>\n          <div className=\"legend brown\">\n            <div className=\"legendCircle\"></div>\n            <div className=\"legendTxt\">Res</div>\n          </div>\n        </div>\n      ),\n      accessorKey: `name`,\n      enableGrouping: false,\n      GroupedCell: ({ cell }) => {\n        if (selectType == \"Project\") {\n          //--------------------//----------------------//-----------------------Parent Level (Project)\n          const department = project.find(\n            (dep) => dep.name === cell.getValue()\n          );\n\n          const [activeIcons, setActiveIcons] = useState({});\n\n          const handleClick = () => {\n            if (department) {\n              const { id, name } = department;\n              const isDataPresent = nodes.some((node) => {\n                return node.name.includes(`*${id}`);\n              });\n\n              if (isDataPresent) {\n                setActiveIcons((prevActiveIcons) => ({\n                  ...prevActiveIcons,\n                  [id]: false,\n                }));\n                setNodes((prevNodes) =>\n                  prevNodes.filter((node) => !node.name.includes(`*${id}`))\n                );\n              } else {\n                setActiveIcons((prevActiveIcons) => ({\n                  ...prevActiveIcons,\n                  [id]: true,\n                }));\n                HandleInsertedData(id, name, \"Res\");\n              }\n            }\n          };\n\n          //--------------------//----------------------//-----------------------First Child Layer (Res)\n\n          let custBU;\n          const cust = resources.find((dep) => {\n            const fullNameParts = dep.full_name.split(\" \");\n            const cellValueParts = cell.getValue().split(\"*\")[0].split(\" \");\n            if (\n              dep.full_name === cell.getValue().split(\"*\")[0] ||\n              cellValueParts.every((value) => fullNameParts.includes(value))\n            ) {\n              const value = cell.getValue().split(\"*\")[1];\n              custBU = value;\n            }\n            return cell.getValue().split(\"*\")[0] == \"\"\n              ? \"\"\n              : cellValueParts.every((value) => fullNameParts.includes(value));\n            // return dep.fullName === cell.getValue().split(\"*\")[0];\n          });\n\n          const [activeIcons1, setActiveIcons1] = useState({});\n\n          const handleClick1 = () => {\n            if (cust) {\n              const { id, full_name } = cust;\n              const isDataPresent = nodes.some((node) => {\n                return node.name.includes(`*${id}`);\n              });\n\n              if (isDataPresent) {\n                setActiveIcons1((prevActiveIcons) => ({\n                  ...prevActiveIcons,\n                  [id]: false,\n                }));\n                setNodes((prevNodes) =>\n                  prevNodes.filter((node) => !node.name.includes(`*${id}`))\n                );\n              } else {\n                setActiveIcons1((prevActiveIcons) => ({\n                  ...prevActiveIcons,\n                  [id]: true,\n                }));\n                HandleInsertedData1(id, full_name, \"Leaf\", \"Res\", custBU);\n              }\n            }\n          };\n\n          //--------------------//----------------------//-----------------------Execution of the Layers\n          if (department) {\n            const { id } = department;\n            const isActive = activeIcons[id];\n            return (\n              <span\n                style={{ cursor: \"pointer\" }}\n                value={department.id}\n                onClick={() => {\n                  handleClick();\n                }}\n                className={\"parent\"}\n              >\n                {isActive ? <FaChevronCircleDown /> : <FaChevronCircleRight />}{\" \"}\n                <b\n                  className=\"projRM\"\n                  title={department.name + \" (\" + cell.row.original.count + \")\"}\n                >\n                  {department.name} ({cell.row.original.count})\n                </b>\n              </span>\n            );\n          } else if (cust) {\n            const { id } = cust;\n            const isActive1 = activeIcons1[id];\n            return (\n              <span\n                style={{ cursor: \"pointer\" }}\n                value={cust.id}\n                onClick={() => {\n                  handleClick1();\n                }}\n                className={\"parent\"}\n              >\n                {isActive1 ? <FaChevronCircleDown /> : <FaChevronCircleRight />}{\" \"}\n                <b\n                  className=\"resRM\"\n                  title={cust.full_name + \" (\" + cell.row.original.count + \")\"}\n                >\n                  {cust.full_name}\n                </b>\n              </span>\n            );\n          } else {\n            return (\n              <span\n                className=\"child\"\n                title={\n                  cell.row.original.name === \"\"\n                    ? \"Summary\"\n                    : cell.getValue().split(\"*\")[0] +\n                      \" (\" +\n                      cell.row.original.count +\n                      \")\"\n                }\n              >\n                <b\n                  className={\n                    cell.getValue().split(\"*\")[2] == \"Res\"\n                      ? \"projRM\"\n                      : cell.getValue().split(\"*\")[2] == \"Leaf\"\n                      ? \"resRM\"\n                      : \"\"\n                  }\n                  style={{\n                    display:\n                      cell.row.original.name == \"\" ||\n                      cell.getValue().split(\"*\")[0] == \"\"\n                        ? \"flex\"\n                        : \"\",\n                    justifyContent:\n                      cell.row.original.name == \"\" ||\n                      cell.getValue().split(\"*\")[0] == \"\"\n                        ? \"center\"\n                        : \"\",\n                  }}\n                >\n                  {cell.row.original.name == \"\" ? (\n                    \"Summary\"\n                  ) : cell.getValue().split(\"*\")[0] == \"\" ? (\n                    \"Summary\"\n                  ) : (\n                    <div onClick={handleClick1}>\n                      <FaChevronCircleRight /> {cell.getValue().split(\"*\")[0]}\n                    </div>\n                  )}{\" \"}\n                  {cell.row.original.count === 0\n                    ? \"\"\n                    : `(${cell.row.original.count})`}\n                </b>{\" \"}\n              </span>\n            );\n          }\n        }\n      },\n    },\n    {\n      header: \"\",\n      accessorKey: `kpi`,\n      Cell: ({ cell }) => {\n        const department = project.find((dep) => {\n          return dep.name === cell.row.original.name;\n        });\n\n        const cust = resources.find((dep) => {\n          const fullNameParts = dep.full_name.split(\" \");\n          const cellValueParts = cell.row.original.name\n            .split(\"*\")[0]\n            .split(\" \");\n          return cell.row.original.name.split(\"*\")[0] == \"\"\n            ? \"\"\n            : cellValueParts.every((value) => fullNameParts.includes(value));\n        });\n\n        return (\n          <span>\n            <b\n              className={\n                department\n                  ? \"projRM\"\n                  : cust\n                  ? \"resRM\"\n                  : cell.row.original.name.split(\"*\")[2] == \"Res\"\n                  ? \"projRM\"\n                  : cell.row.original.name.split(\"*\")[2] == \"Leaf\"\n                  ? \"resRM\"\n                  : \"\"\n              }\n            >\n              {cell.getValue()}\n            </b>\n          </span>\n        );\n      },\n    },\n  ];\n\n  data.forEach((item, index) => {\n    if (index > 1 && item !== \"Total\") {\n      const dateObj = new Date(\n        `${item.slice(0, 4)}-${item.slice(5, 7)}-${item.slice(8, 10)}`\n      );\n\n      const header = dateObj\n        .toLocaleDateString(\"en-US\", { month: \"short\", year: \"numeric\" })\n        .replace(\" \", \"-\");\n      const currentDate = new Date()\n        .toLocaleDateString(\"en-US\", {\n          month: \"short\",\n          year: \"numeric\",\n        })\n        .replace(\" \", \"-\");\n\n      let greenDate = new Date(header) >= new Date(currentDate);\n      dynamicColumns.push({\n        header,\n        accessorKey: `${item}`,\n        className: \"software\",\n        Cell: ({ cell }) => (\n          <span className={greenDate ? \"greenColumn\" : \"\"}>\n            {cell.row.original.kpi == \"Planned Revenue\" ||\n            cell.row.original.kpi == \"Actual Revenue\" ||\n            cell.row.original.kpi == \"Recognized Revenue\" ||\n            cell.row.original.kpi == \"Resource Direct Cost\" ||\n            cell.row.original.kpi == \"Other Direct Cost\" ||\n            cell.row.original.kpi == \"Gross Margin\" ? (\n              <span style={{ display: \"block\", float: \"left\" }}>$</span>\n            ) : (\n              \"\"\n            )}\n            <span style={{ display: \"block\", float: \"right\" }}>\n              {cell.getValue() == null\n                ? 0\n                : cell.getValue()?.toLocaleString(\"en-US\")}\n              {cell.row.original.kpi == \"Gross Margin %\" ||\n              cell.row.original.kpi == \"Billable Utilization\" ||\n              (cell.row.original.kpi == \"FTE\" &&\n                cell.row.original.descr != \"hcfte\") ||\n              (cell.row.original.kpi == \"SUBK\" &&\n                cell.row.original.descr != \"hcsubk\") ||\n              cell.row.original.kpi == \"Billed Utilization\" ? (\n                <span>%</span>\n              ) : (\n                \"\"\n              )}\n            </span>\n          </span>\n        ),\n      });\n    }\n  });\n\n  {\n    /*----------------------------------Total-------------------------------- */\n  }\n\n  const columnIndex = dynamicColumns.length;\n\n  const newColumn = {\n    header: \"Total\",\n    accessorKey: `Total`,\n    Cell: ({ cell }) => (\n      <>\n        {cell.row.original.kpi == \"Planned Revenue\" ||\n        cell.row.original.kpi == \"Actual Revenue\" ||\n        cell.row.original.kpi == \"Recognized Revenue\" ||\n        cell.row.original.kpi == \"Resource Direct Cost\" ||\n        cell.row.original.kpi == \"Other Direct Cost\" ||\n        cell.row.original.kpi == \"Gross Margin\" ? (\n          <span style={{ display: \"block\", float: \"left\" }}>\n            <b>$</b>\n          </span>\n        ) : (\n          \"\"\n        )}\n        <span style={{ display: \"block\", float: \"right\" }} className=\"total\">\n          <b>\n            {cell.getValue()?.toLocaleString(\"en-US\")}\n            {cell.row.original.kpi == \"Gross Margin %\" ||\n            cell.row.original.kpi == \"Billable Utilization\" ||\n            (cell.row.original.kpi == \"FTE\" &&\n              cell.row.original.descr != \"hcfte\") ||\n            (cell.row.original.kpi == \"SUBK\" &&\n              cell.row.original.descr != \"hcsubk\") ||\n            cell.row.original.kpi == \"Billed Utilization\" ||\n            cell.row.original.kpi == \"SUBK\" ? (\n              <span>{cell.getValue() == null ? 0 : \"%\"}</span>\n            ) : (\n              \"\"\n            )}\n          </b>\n        </span>\n      </>\n    ),\n  };\n\n  dynamicColumns.splice(columnIndex, 0, newColumn);\n  {\n    /*--------------------------Export Excel---------------------- */\n  }\n\n  const exportExcel = () => {\n    import(\"exceljs\").then((ExcelJS) => {\n      const workbook = new ExcelJS.Workbook();\n      const worksheet = workbook.addWorksheet(\"Revenue Analysis\");\n      let desiredColumnOrder = [];\n      let cols = [];\n      cols = data;\n      desiredColumnOrder = cols;\n      //----------------Months Sorting in order-----------------\n      desiredColumnOrder.sort((colA, colB) => {\n        const [, yearA, monthA] = colA.split(\"_\");\n        const [, yearB, monthB] = colB.split(\"_\");\n\n        if (yearA !== yearB) {\n          return parseInt(yearA) - parseInt(yearB);\n        }\n        return parseInt(monthA) - parseInt(monthB);\n      });\n      const wantedValues = data.concat(nodes).map((item) => {\n        const obj = {};\n        data.forEach((col) => {\n          const value = item[col];\n          if (typeof value === \"string\") {\n            const [extractedValue, ,] = value.split(\"^&\");\n            obj[col] = extractedValue;\n          } else if (typeof value === \"number\") {\n            obj[col] = value.toLocaleString(\"en-US\");\n          } else {\n            obj[col] = value;\n          }\n        });\n\n        if (\"name\" in obj && obj[\"name\"] === \"\") {\n          obj[\"name\"] = \"Summary\";\n        } else if (\n          \"name\" in obj &&\n          obj[\"name\"] !== \"\" &&\n          obj[\"name\"] !== undefined\n        ) {\n          obj[\"name\"] =\n            obj[\"name\"].split(\"*\")[0] == \"\"\n              ? \"Summary\"\n              : obj[\"name\"].split(\"*\")[0];\n        }\n\n        if (\n          obj[\"kpi\"] === \"Planned Revenue\" ||\n          obj[\"kpi\"] === \"Actual Revenue\" ||\n          obj[\"kpi\"] === \"Recognized Revenue\" ||\n          obj[\"kpi\"] === \"Resource Direct Cost\" ||\n          obj[\"kpi\"] === \"Other Direct Cost\" ||\n          obj[\"kpi\"] === \"Gross Margin\"\n        ) {\n          Object.keys(obj).forEach((key) => {\n            if (key !== \"name\" && key !== \"kpi\" && !isNaN(obj[key])) {\n              // obj[key] = `$ ${obj[key]}`;\n              obj[key] = \"$\" + (obj[key] == null ? \"\" : obj[key]);\n            }\n          });\n        } else if (\n          obj[\"kpi\"] === \"Gross Margin %\" ||\n          obj[\"kpi\"] === \"Billable Utilization\" ||\n          obj[\"kpi\"] === \"Billed Utilization\" ||\n          obj[\"kpi\"] === \"FTE\" ||\n          obj[\"kpi\"] === \"SUBK\"\n        ) {\n          Object.keys(obj).forEach((key) => {\n            if (key !== \"name\" && key !== \"kpi\" && !isNaN(obj[key])) {\n              obj[key] = (obj[key] == null ? 0 : obj[key]) + \" %\";\n            }\n          });\n        }\n\n        return obj;\n      });\n\n      const formatMMMYYYY = (dateStr) => {\n        const [year, month, day] = dateStr.split(\"_\");\n        const monthName = new Date(`${year}-${month}-01`).toLocaleString(\n          \"en-us\",\n          { month: \"short\" }\n        );\n        return `${monthName}-${year}`;\n      };\n\n      const formatHeaderKey = (key) => {\n        if (key.match(/^\\d{4}_\\d{2}_\\d{2}$/)) {\n          return formatMMMYYYY(key);\n        }\n        return key;\n      };\n\n      const headerRow = {};\n      Object.keys(wantedValues[0]).forEach((key) => {\n        headerRow[key] =\n          formatHeaderKey(key) == \"name\"\n            ? \"Project   Res\"\n            : formatHeaderKey(key) == \"kpi\"\n            ? \"\"\n            : formatHeaderKey(key);\n      });\n\n      const filteredValues = wantedValues.filter((item) =>\n        Object.values(item).some(\n          (value) => value !== null && value !== undefined && value !== \"\"\n        )\n      );\n\n      filteredValues.unshift(headerRow);\n\n      const rows = filteredValues.map((item) => {\n        const row = [];\n        desiredColumnOrder.forEach((col) => {\n          row.push(item[col]);\n        });\n        return row;\n      });\n\n      rows.forEach((row) => {\n        worksheet.addRow(row);\n      });\n\n      //--------------bold--------------------\n      [1].forEach((rowIndex) => {\n        const row = worksheet.getRow(rowIndex);\n        row.font = { bold: true };\n      });\n\n      // ----------  Name Merging ---------------------\n      const nameColumnIndex = desiredColumnOrder.indexOf(\"name\");\n\n      let mergeStartIndex = 1;\n      let currentName = rows[0][nameColumnIndex];\n\n      for (let rowIndex = 1; rowIndex < rows.length; rowIndex++) {\n        const row = rows[rowIndex];\n        const rowName = row[nameColumnIndex];\n\n        if (rowName !== currentName) {\n          if (rowIndex - mergeStartIndex > 0) {\n            worksheet.mergeCells(\n              mergeStartIndex + 1,\n              nameColumnIndex,\n              rowIndex,\n              nameColumnIndex\n            );\n          }\n\n          mergeStartIndex = rowIndex;\n          currentName = rowName;\n        }\n      }\n\n      if (rows.length - mergeStartIndex > 0) {\n        worksheet.mergeCells(\n          mergeStartIndex + 1,\n          nameColumnIndex,\n          rows.length,\n          nameColumnIndex\n        );\n      }\n\n      workbook.xlsx.writeBuffer().then((buffer) => {\n        saveAs(new Blob([buffer]), \"Revenue Analysis.xlsx\");\n      });\n    });\n  };\n\n  return (\n    <div className=\"materialReactExpandableTable headCountTable darkHeader\">\n      <div className=\"mb-2\" align=\" right \">\n        <RiFileExcel2Line\n          size=\"1.5em\"\n          title=\"Export to Excel\"\n          style={{ color: \"green\" }}\n          cursor=\"pointer\"\n          onClick={exportExcel}\n        />\n      </div>\n      <MaterialReactTable\n        columns={dynamicColumns}\n        data={nodes}\n        enableExpanding={(column) => column.id === \"name\"}\n        enableRowVirtualization={true}\n        enablePagination={false}\n        enableGlobalFilter={true}\n        enableDensityToggle={false}\n        enableFullScreenToggle={false}\n        enableHiding={false}\n        enableColumnFilters={false}\n        enableBottomToolbar={false}\n        enableTopToolbar={false}\n        enableColumnActions={false}\n        enableSorting={false}\n        filterFromLeafRows //apply filtering to all rows instead of just parent rows\n        initialState={{\n          showGlobalFilter: true,\n          grouping: [\"name\"],\n          expanded: true,\n          density: \"compact\",\n          columnPinning: { right: [\"Total\"] },\n        }} //expand all rows by default\n        muiTableContainerProps={\n          {\n            // sx: { height: \"49vh\", width: \"auto\" },\n          }\n        }\n        muiTableBodyProps={{\n          sx: {\n            \"&\": {\n              borderRight: \"1px solid #ccc\",\n              borderBottom: \"1px solid #ccc\",\n            },\n            \"& td\": {\n              borderRight: \"1px solid #ccc\",\n              height: \"22px\",\n              padding: \"0px 5px\",\n            },\n          },\n        }}\n        muiTableHeadProps={{\n          sx: {\n            \"& th\": {\n              borderTop: \"1px solid #ccc\",\n              borderRight: \"1px solid #ccc\",\n              background: \"#f4f4f4 \",\n              padding: \"0 5px\",\n            },\n          },\n        }}\n      />\n      {loader ? <Loader handleAbort={handleAbort} /> : \"\"}\n    </div>\n  );\n}\n\nexport default MarginAnalysisProject;\n","import Draggable from \"react-draggable\";\nimport { CModal, CModalBody, CModalHeader, CModalTitle } from \"@coreui/react\";\nimport MarginAnalysisHierarchy from \"./MarginAnalysisHierarchy\";\nimport React, { useState } from \"react\";\n\nfunction MarginAnalysisPopUp(props) {\n  const { showPopup, setShowPopup, setSelectedResource, setResName } = props;\n  const [nodeClicked, setNodeClicked] = useState(\"\");\n  const [validation, setValidation] = useState(false);\n  const handleNodeClicked = (value) => {\n    console.log(value);\n    setNodeClicked(value);\n  };\n  const handelOk = () => {\n    if (nodeClicked == \"\") {\n      setValidation(true);\n    } else {\n      setSelectedResource(nodeClicked);\n      setShowPopup(false);\n      setValidation(false);\n    }\n  };\n\n  return (\n    <div>\n      <CModal\n        visible={showPopup}\n        alignment=\"center\"\n        size=\"md\"\n        onClose={() => {\n          setShowPopup(false);\n          setResName(\"Select Resource\");\n        }}\n        //   onClose={(e) => console.log(setShowPopup)}\n        backdrop={\"static\"}\n      >\n        <CModalHeader className=\"\">\n          <CModalTitle>\n            <span className=\"\">Resource Directory</span>\n          </CModalTitle>\n        </CModalHeader>\n        <CModalBody>\n          <div className=\"col-md-12\">\n            <div className=\"form-group row mb-2\"></div>\n            <MarginAnalysisHierarchy\n              setNodeClicked={handleNodeClicked}\n              validation={validation}\n              setResName={setResName}\n            />\n            <div className=\" form-group col-md-12 col-sm-12 col-xs-12 btn-container center my-3 mb-2\">\n              <button className=\"btn btn-primary\" type=\"ok\" onClick={handelOk}>\n                OK\n              </button>\n            </div>\n          </div>\n        </CModalBody>\n      </CModal>\n    </div>\n  );\n}\n\nexport default MarginAnalysisPopUp;\n","import React, { useState, useMemo, memo, useRef } from \"react\";\nimport MaterialReactTable from \"material-react-table\";\nimport { useEffect } from \"react\";\nimport \"./HeadCountTableComponent.scss\";\nimport moment from \"moment\";\nimport Loader from \"../Loader/Loader\";\nimport { environment } from \"../../environments/environment\";\nimport { FaChevronCircleRight, FaChevronCircleDown } from \"react-icons/fa\";\nimport axios from \"axios\";\nimport { RiFileExcel2Line } from \"react-icons/ri\";\n\nfunction MarginAnalysisResource(props) {\n  const {\n    tableData,\n    column,\n    selectType,\n    month,\n    searchdata,\n    resourceData,\n    sortBy,\n    laterMeasureLabel,\n    defaultMeasureLabel,\n  } = props;\n  const baseUrl = environment.baseUrl;\n  const abortController = useRef(null);\n  const [loader, setLoader] = useState(false);\n  const name = column[0];\n  const kpi = column[1];\n  const handleAbort = () => {\n    abortController.current && abortController.current.abort();\n    setLoader(false);\n  };\n\n  const dates = column.slice(2).sort();\n\n  const adjustedColumn = [name, kpi, ...dates, \"Total\"];\n  const [data, setData] = useState(adjustedColumn);\n  const [nodes, setNodes] = useState([]);\n  useEffect(() => {\n    setData(props.column);\n  }, [props.column]);\n\n  useEffect(() => {\n    let id = 1;\n    for (let i = 0; i < tableData.length; i++) {\n      tableData[i].id = id;\n      id++;\n      if (id % 10000 == 17) {\n        id += 9984;\n      }\n    }\n\n    setNodes(jsonToTree(tableData));\n  }, [tableData]);\n\n  const Data = moment(month).startOf(\"month\").format(\"yyyy-MM-DD\");\n\n  {\n    /*-------------------------------------For Getting Customer's According to BU------------------------------ */\n  }\n  const HandleInsertedData = (objId, objLabel, innerColumn) => {\n    console.log(\"Inside HID\");\n    abortController.current = new AbortController();\n    const loaderTime = setTimeout(() => {\n      setLoader(true);\n    }, 2000);\n    axios({\n      method: \"post\",\n      url:\n        baseUrl +\n        `/revenuemetricsms/RevenueMarginAnalysis/GetFinancialsFinalData`,\n      data: {\n        ownerDivisions: -1,\n        month: Data,\n        duration: searchdata.duration,\n        countries: searchdata.countries,\n        searchType: searchdata.searchType,\n        busUnits: -1,\n        customers:\n          searchdata.customers == \"select\"\n            ? selectedCust\n            : searchdata.customers,\n        srcType: searchdata.searchType,\n        srcTypeId: objId,\n        tarType: innerColumn,\n        busUnitId: -1,\n        custId: -1,\n        prjId: -1,\n        resId: searchdata.resId,\n        measures: searchdata.measures,\n        salesExecId: searchdata.salesExecId,\n        salesExecs: -1,\n        sortBy: searchdata.sortBy,\n        custCountries: searchdata.custCountries,\n        source: searchdata.source,\n        resTyp: searchdata.resTyp,\n        engCountries: searchdata.engCountries,\n        contTerms: searchdata.contTerms,\n        engComp: searchdata.engComp,\n        cslRes: searchdata.cslRes,\n        cslResId: searchdata.cslResId,\n        dpRes: -1,\n        dpResId: searchdata.dpResId,\n        indTypes: -1,\n        indTypesId: searchdata.indTypesId,\n      },\n      signal: abortController.current.signal,\n    })\n      .then((res) => {\n        setLoader(false);\n        clearTimeout(loaderTime);\n        let respData = res.data.data;\n        respData = respData.map((item) => {\n          return {\n            ...item,\n            name: item.name + \"*\" + objId + \"*\" + innerColumn,\n          };\n        });\n        setNodes((prevNodes) => {\n          const grossMarginIndex = prevNodes.findIndex((node) => {\n            const firstValueWords = node.name\n              .split(\"*\")[0]\n              .replace(/\\s+/g, \" \")\n              .split(\" \");\n            const secondValueWords = objLabel.replace(/\\s+/g, \" \").split(\" \");\n            return searchdata.measures !=\n              \"1350,638,965,639,640,641,643,644,872,761\"\n              ? searchdata.sortBy != -1\n                ? sortBy.some(\n                    (Item) =>\n                      (node.kpi ===\n                        (Item.id == searchdata.sortBy ? Item.measures : \"\") &&\n                        node.name.split(\"*\")[0].replace(/\\s+/g, \" \") ===\n                          objLabel.replace(/\\s+/g, \" \")) ||\n                      firstValueWords.every((word) =>\n                        secondValueWords.includes(word)\n                      )\n                  )\n                : (node.kpi === defaultMeasureLabel &&\n                    node.name.split(\"*\")[0].replace(/\\s+/g, \" \") ===\n                      objLabel.replace(/\\s+/g, \" \")) ||\n                  firstValueWords.every((word) =>\n                    secondValueWords.includes(word)\n                  )\n              : searchdata.sortBy == -1\n              ? (node.kpi === defaultMeasureLabel &&\n                  node.name.split(\"*\")[0].replace(/\\s+/g, \" \") ===\n                    objLabel.replace(/\\s+/g, \" \")) ||\n                firstValueWords.every((word) => secondValueWords.includes(word))\n              : sortBy.some(\n                  (Item) =>\n                    (node.kpi ===\n                      (Item.id == searchdata.sortBy ? Item.measures : \"\") &&\n                      node.name.split(\"*\")[0].replace(/\\s+/g, \" \") ===\n                        objLabel.replace(/\\s+/g, \" \")) ||\n                    firstValueWords.every((word) =>\n                      secondValueWords.includes(word)\n                    )\n                );\n          });\n\n          if (grossMarginIndex !== -1) {\n            return [\n              ...prevNodes.slice(0, grossMarginIndex + 1),\n              ...respData.map((data, i) => ({ ...data, id: objId + i + 1 })),\n              ...prevNodes.slice(grossMarginIndex + 1),\n            ];\n          } else {\n            return prevNodes;\n          }\n        });\n      })\n      .catch((e) => {\n        setLoader(false);\n        console.log(\"Error :\", e);\n      });\n  };\n\n  const jsonToTree = (flatArray, options) => {\n    options = {\n      id: \"id\",\n      parentId: \"parentId\",\n      children: \"subRows\",\n      ...options,\n    };\n    const dictionary = {};\n    const tree = [];\n    const children = options.children;\n    flatArray.forEach((node) => {\n      const nodeId = node[options.id];\n      const nodeParentId = node[options.parentId];\n      dictionary[nodeId] = {\n        [children]: [],\n        ...node,\n        ...dictionary[nodeId],\n      };\n      dictionary[nodeParentId] = dictionary[nodeParentId] || { [children]: [] };\n      dictionary[nodeParentId][children].push(dictionary[nodeId]);\n    });\n\n    Object.values(dictionary).forEach((obj) => {\n      if (typeof obj[options.id] === \"undefined\") {\n        tree.push(...obj[children]);\n      }\n    });\n    return tree;\n  };\n\n  const dynamicColumns = [\n    {\n      header: <div className=\"mb-1\">Supervisor/Res</div>,\n      accessorKey: `name`,\n      enableGrouping: false,\n      GroupedCell: ({ cell }) => {\n        if (selectType == \"Resource\") {\n          //--------------------//----------------------//-----------------------Parent Level (Resource)\n          const department = resourceData.find((dep) => {\n            const fullNameParts = dep.full_name.split(\" \");\n            const cellValueParts = cell.getValue().split(\" \");\n\n            return cell.getValue() == \"\"\n              ? \"\"\n              : cellValueParts.every((value) => fullNameParts.includes(value));\n          });\n\n          const [activeIcons, setActiveIcons] = useState({});\n\n          const handleClick = () => {\n            if (department) {\n              const { id, full_name } = department;\n              const isDataPresent = nodes.some((node) => {\n                return node.name.includes(`*${id}`);\n              });\n              console.log(nodes);\n\n              if (isDataPresent) {\n                setActiveIcons((prevActiveIcons) => ({\n                  ...prevActiveIcons,\n                  [id]: false,\n                }));\n                setNodes((prevNodes) =>\n                  prevNodes.filter((node) => !node.name.includes(`*${id}`))\n                );\n              } else {\n                setActiveIcons((prevActiveIcons) => ({\n                  ...prevActiveIcons,\n                  [id]: true,\n                }));\n                HandleInsertedData(id, full_name, \"Leaf\");\n              }\n            }\n          };\n\n          //--------------------//----------------------//-----------------------Execution of the Layers\n          if (department) {\n            const { id } = department;\n            const isActive = activeIcons[id];\n            return (\n              <span\n                style={{ cursor: \"pointer\" }}\n                value={department.id}\n                onClick={() => {\n                  handleClick();\n                }}\n                className={\"parent\"}\n              >\n                {isActive ? <FaChevronCircleDown /> : <FaChevronCircleRight />}{\" \"}\n                <b\n                  title={\n                    department.full_name + \" (\" + cell.row.original.count + \")\"\n                  }\n                >\n                  {department.full_name}\n                </b>\n              </span>\n            );\n          } else {\n            return (\n              <span\n                className=\"child\"\n                title={\n                  cell.row.original.name === \"\"\n                    ? \"Summary\"\n                    : cell.getValue().split(\"*\")[0]\n                }\n              >\n                <b\n                  style={{\n                    display:\n                      cell.row.original.name == \"\" ||\n                      cell.getValue().split(\"*\")[0] == \"\"\n                        ? \"flex\"\n                        : \"\",\n                    justifyContent:\n                      cell.row.original.name == \"\" ||\n                      cell.getValue().split(\"*\")[0] == \"\"\n                        ? \"center\"\n                        : \"\",\n                  }}\n                >\n                  {cell.row.original.name == \"\"\n                    ? \"Summary\"\n                    : cell.getValue().split(\"*\")[0] == \"\"\n                    ? \"Summary\"\n                    : \"\"}\n                </b>{\" \"}\n              </span>\n            );\n          }\n        }\n      },\n    },\n    {\n      header: \"\",\n      accessorKey: `kpi`,\n      Cell: ({ cell }) => (\n        <span>\n          <b>{cell.getValue()}</b>\n        </span>\n      ),\n    },\n  ];\n\n  data.forEach((item, index) => {\n    if (index > 1 && item !== \"Total\") {\n      const dateObj = new Date(\n        `${item.slice(0, 4)}-${item.slice(5, 7)}-${item.slice(8, 10)}`\n      );\n\n      const header = dateObj\n        .toLocaleDateString(\"en-US\", { month: \"short\", year: \"numeric\" })\n        .replace(\" \", \"-\");\n      const currentDate = new Date()\n        .toLocaleDateString(\"en-US\", {\n          month: \"short\",\n          year: \"numeric\",\n        })\n        .replace(\" \", \"-\");\n\n      let greenDate = new Date(header) >= new Date(currentDate);\n      dynamicColumns.push({\n        header,\n        accessorKey: `${item}`,\n        className: \"software\",\n        Cell: ({ cell }) => (\n          <span className={greenDate ? \"greenColumn\" : \"\"}>\n            {cell.row.original.kpi == \"Planned Revenue\" ||\n            cell.row.original.kpi == \"Actual Revenue\" ||\n            cell.row.original.kpi == \"Recognized Revenue\" ||\n            cell.row.original.kpi == \"Resource Direct Cost\" ||\n            cell.row.original.kpi == \"Other Direct Cost\" ||\n            cell.row.original.kpi == \"Gross Margin\" ? (\n              <span style={{ display: \"block\", float: \"left\" }}>$</span>\n            ) : (\n              \"\"\n            )}\n            <span style={{ display: \"block\", float: \"right\" }}>\n              {cell.getValue() == null\n                ? 0\n                : cell.getValue()?.toLocaleString(\"en-US\")}\n              {cell.row.original.kpi == \"Gross Margin %\" ||\n              cell.row.original.kpi == \"Billable Utilization\" ||\n              (cell.row.original.kpi == \"FTE\" &&\n                cell.row.original.descr != \"hcfte\") ||\n              (cell.row.original.kpi == \"SUBK\" &&\n                cell.row.original.descr != \"hcsubk\") ||\n              cell.row.original.kpi == \"Billed Utilization\" ? (\n                <span>%</span>\n              ) : (\n                \"\"\n              )}\n            </span>\n          </span>\n        ),\n      });\n    }\n  });\n\n  {\n    /*----------------------------------Total-------------------------------- */\n  }\n\n  const columnIndex = dynamicColumns.length;\n\n  const newColumn = {\n    header: \"Total\",\n    accessorKey: `Total`,\n    Cell: ({ cell }) => (\n      <>\n        {cell.row.original.kpi == \"Planned Revenue\" ||\n        cell.row.original.kpi == \"Actual Revenue\" ||\n        cell.row.original.kpi == \"Recognized Revenue\" ||\n        cell.row.original.kpi == \"Resource Direct Cost\" ||\n        cell.row.original.kpi == \"Other Direct Cost\" ||\n        cell.row.original.kpi == \"Gross Margin\" ? (\n          <span style={{ display: \"block\", float: \"left\" }}>\n            <b>$</b>\n          </span>\n        ) : (\n          \"\"\n        )}\n        <span style={{ display: \"block\", float: \"right\" }} className=\"total\">\n          <b>\n            {cell.getValue()?.toLocaleString(\"en-US\")}\n            {cell.row.original.kpi == \"Gross Margin %\" ||\n            cell.row.original.kpi == \"Billable Utilization\" ||\n            (cell.row.original.kpi == \"FTE\" &&\n              cell.row.original.descr != \"hcfte\") ||\n            (cell.row.original.kpi == \"SUBK\" &&\n              cell.row.original.descr != \"hcsubk\") ||\n            cell.row.original.kpi == \"Billed Utilization\" ? (\n              <span>{cell.getValue() == null ? 0 : \"%\"}</span>\n            ) : (\n              \"\"\n            )}\n          </b>\n        </span>\n      </>\n    ),\n  };\n\n  dynamicColumns.splice(columnIndex, 0, newColumn);\n\n  {\n    /*--------------------------Export Excel---------------------- */\n  }\n  const exportExcel = () => {\n    import(\"exceljs\").then((ExcelJS) => {\n      const workbook = new ExcelJS.Workbook();\n      const worksheet = workbook.addWorksheet(\"Revenue Analysis\");\n      let desiredColumnOrder = [];\n      let cols = [];\n      cols = data;\n      desiredColumnOrder = cols;\n      //----------------Months Sorting in order-----------------\n      desiredColumnOrder.sort((colA, colB) => {\n        const [, yearA, monthA] = colA.split(\"_\");\n        const [, yearB, monthB] = colB.split(\"_\");\n\n        if (yearA !== yearB) {\n          return parseInt(yearA) - parseInt(yearB);\n        }\n        return parseInt(monthA) - parseInt(monthB);\n      });\n      const wantedValues = data.concat(nodes).map((item) => {\n        const obj = {};\n        data.forEach((col) => {\n          const value = item[col];\n          if (typeof value === \"string\") {\n            const [extractedValue, ,] = value.split(\"^&\");\n            obj[col] = extractedValue;\n          } else if (typeof value === \"number\") {\n            obj[col] = value.toLocaleString(\"en-US\");\n          } else {\n            obj[col] = value;\n          }\n        });\n\n        if (\"name\" in obj && obj[\"name\"] === \"\") {\n          obj[\"name\"] = \"Summary\";\n        } else if (\n          \"name\" in obj &&\n          obj[\"name\"] !== \"\" &&\n          obj[\"name\"] !== undefined\n        ) {\n          obj[\"name\"] =\n            obj[\"name\"].split(\"*\")[0] == \"\"\n              ? \"Summary\"\n              : obj[\"name\"].split(\"*\")[0];\n        }\n\n        if (\n          obj[\"kpi\"] === \"Planned Revenue\" ||\n          obj[\"kpi\"] === \"Actual Revenue\" ||\n          obj[\"kpi\"] === \"Recognized Revenue\" ||\n          obj[\"kpi\"] === \"Resource Direct Cost\" ||\n          obj[\"kpi\"] === \"Other Direct Cost\" ||\n          obj[\"kpi\"] === \"Gross Margin\"\n        ) {\n          Object.keys(obj).forEach((key) => {\n            if (key !== \"name\" && key !== \"kpi\" && !isNaN(obj[key])) {\n              // obj[key] = `$ ${obj[key]}`;\n              obj[key] = \"$\" + (obj[key] == null ? \"\" : obj[key]);\n            }\n          });\n        } else if (\n          obj[\"kpi\"] === \"Gross Margin %\" ||\n          obj[\"kpi\"] === \"Billable Utilization\" ||\n          obj[\"kpi\"] === \"Billed Utilization\" ||\n          obj[\"kpi\"] === \"FTE\" ||\n          obj[\"kpi\"] === \"SUBK\"\n        ) {\n          Object.keys(obj).forEach((key) => {\n            if (key !== \"name\" && key !== \"kpi\" && !isNaN(obj[key])) {\n              obj[key] = (obj[key] == null ? 0 : obj[key]) + \" %\";\n            }\n          });\n        }\n\n        return obj;\n      });\n\n      const formatMMMYYYY = (dateStr) => {\n        const [year, month, day] = dateStr.split(\"_\");\n        const monthName = new Date(`${year}-${month}-01`).toLocaleString(\n          \"en-us\",\n          { month: \"short\" }\n        );\n        return `${monthName}-${year}`;\n      };\n\n      const formatHeaderKey = (key) => {\n        if (key.match(/^\\d{4}_\\d{2}_\\d{2}$/)) {\n          return formatMMMYYYY(key);\n        }\n        return key;\n      };\n\n      const headerRow = {};\n      Object.keys(wantedValues[0]).forEach((key) => {\n        headerRow[key] =\n          formatHeaderKey(key) == \"name\"\n            ? \"Supervisor / Res\"\n            : formatHeaderKey(key) == \"kpi\"\n            ? \"\"\n            : formatHeaderKey(key);\n      });\n\n      const filteredValues = wantedValues.filter((item) =>\n        Object.values(item).some(\n          (value) => value !== null && value !== undefined && value !== \"\"\n        )\n      );\n\n      filteredValues.unshift(headerRow);\n\n      const rows = filteredValues.map((item) => {\n        const row = [];\n        desiredColumnOrder.forEach((col) => {\n          row.push(item[col]);\n        });\n        return row;\n      });\n\n      rows.forEach((row) => {\n        worksheet.addRow(row);\n      });\n\n      //--------------bold--------------------\n      [1].forEach((rowIndex) => {\n        const row = worksheet.getRow(rowIndex);\n        row.font = { bold: true };\n      });\n\n      // ----------  Name Merging ---------------------\n      const nameColumnIndex = desiredColumnOrder.indexOf(\"name\");\n\n      let mergeStartIndex = 1;\n      let currentName = rows[0][nameColumnIndex];\n\n      for (let rowIndex = 1; rowIndex < rows.length; rowIndex++) {\n        const row = rows[rowIndex];\n        const rowName = row[nameColumnIndex];\n\n        if (rowName !== currentName) {\n          if (rowIndex - mergeStartIndex > 0) {\n            worksheet.mergeCells(\n              mergeStartIndex + 1,\n              nameColumnIndex,\n              rowIndex,\n              nameColumnIndex\n            );\n          }\n\n          mergeStartIndex = rowIndex;\n          currentName = rowName;\n        }\n      }\n\n      if (rows.length - mergeStartIndex > 0) {\n        worksheet.mergeCells(\n          mergeStartIndex + 1,\n          nameColumnIndex,\n          rows.length,\n          nameColumnIndex\n        );\n      }\n\n      workbook.xlsx.writeBuffer().then((buffer) => {\n        saveAs(new Blob([buffer]), \"Revenue Analysis.xlsx\");\n      });\n    });\n  };\n\n  return (\n    <div className=\"materialReactExpandableTable headCountTable darkHeader\">\n      <div className=\"mb-2\" align=\" right \">\n        <RiFileExcel2Line\n          size=\"1.5em\"\n          title=\"Export to Excel\"\n          style={{ color: \"green\" }}\n          cursor=\"pointer\"\n          onClick={exportExcel}\n        />\n      </div>\n      <MaterialReactTable\n        columns={dynamicColumns}\n        data={nodes}\n        enableExpanding={(column) => column.id === \"name\"}\n        enableRowVirtualization={true}\n        enablePagination={false}\n        enableGlobalFilter={true}\n        enableDensityToggle={false}\n        enableFullScreenToggle={false}\n        enableHiding={false}\n        enableColumnFilters={false}\n        enableBottomToolbar={false}\n        enableTopToolbar={false}\n        enableColumnActions={false}\n        enableSorting={false}\n        filterFromLeafRows //apply filtering to all rows instead of just parent rows\n        initialState={{\n          showGlobalFilter: true,\n          grouping: [\"name\"],\n          expanded: true,\n          density: \"compact\",\n          columnPinning: { right: [\"Total\"] },\n        }} //expand all rows by default\n        muiTableContainerProps={\n          {\n            // sx: { height: \"49vh\", width: \"auto\" },\n          }\n        }\n        muiTableBodyProps={{\n          sx: {\n            \"&\": {\n              borderRight: \"1px solid #ccc\",\n              borderBottom: \"1px solid #ccc\",\n            },\n            \"& td\": {\n              borderRight: \"1px solid #ccc\",\n              height: \"22px\",\n              padding: \"0px 5px\",\n            },\n          },\n        }}\n        muiTableHeadProps={{\n          sx: {\n            \"& th\": {\n              borderTop: \"1px solid #ccc\",\n              borderRight: \"1px solid #ccc\",\n              background: \"#f4f4f4 \",\n              padding: \"0 5px\",\n            },\n          },\n        }}\n      />\n      {loader ? <Loader handleAbort={handleAbort} /> : \"\"}\n    </div>\n  );\n}\n\nexport default MarginAnalysisResource;\n","import React, { useState, useEffect, useRef } from \"react\";\nimport { MultiSelect } from \"react-multi-select-component\";\nimport axios from \"axios\";\nimport { environment } from \"../../environments/environment\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport moment from \"moment\";\nimport { parseISO } from \"date-fns\";\nimport { ReactSearchAutocomplete } from \"react-search-autocomplete\";\nimport {\n  FaChevronCircleDown,\n  FaChevronCircleUp,\n  FaSearch,\n  FaCaretDown,\n} from \"react-icons/fa\";\nimport { HiUserAdd } from \"react-icons/hi\";\nimport GlobalValidation from \"../ValidationComponent/GlobalValidation\";\nimport MarginAnalysisTable from \"./MarginAnalysisTable\";\nimport MarginAnalysisCustIndustry from \"./MarginAnalysisCustIndustry\";\nimport MarginAnalysisDP from \"./MarginAnalysisDP\";\nimport MarginAnalysisCSL from \"./MarginAnalysisCSL\";\nimport MarginAnalysisSE from \"./MarginAnalysisSE\";\nimport MarginAnalysisCustomer from \"./MarginAnalysisCustomer\";\nimport MarginAnalysisProject from \"./MarginAnalysisProject\";\nimport MarginAnalysisPopUp from \"./MarginAnalysisPopUp\";\nimport MarginAnalysisResource from \"./MarginAnalysisResource\";\nimport { initialValue } from \"./initialData\";\nimport Loader from \"../Loader/Loader\";\nimport { CCollapse } from \"@coreui/react\";\nimport SelectCustDialogBox from \"../Customer/SelectCustDialogBox\";\nimport { AiFillWarning } from \"react-icons/ai\";\nimport { useLocation } from \"react-router-dom\";\nimport GlobalHelp from \"../PrimeReactTableComponent/GlobalHelp\";\nimport SavedSearchGlobal from \"../PrimeReactTableComponent/SavedSearchGlobal\";\nimport { BiCheck } from \"react-icons/bi\";\nimport ScreenBreadcrumbs from \"../Common/ScreenBreadcrumbs\";\nimport { useResize } from \"@react-spring/web\";\n\nfunction MarginAnalysis() {\n  const baseUrl = environment.baseUrl;\n\n  const [customer, setCustomer] = useState([]);\n  const [visible, setVisible] = useState(false);\n  const [cheveronIcon, setCheveronIcon] = useState(FaChevronCircleUp);\n  const [month, setMonth] = useState(\"\");\n  const [departments, setDepartments] = useState([]);\n  const [selectedDepartments, setSelectedDepartments] = useState([]);\n  const [custIndustry, setCustIndustry] = useState([]);\n  const [selectedCustIndustry, setSelectedCustIndustry] = useState([]);\n  const [country, setCountry] = useState([]);\n  const [engCustLocation, setEngCustLocation] = useState([]);\n  const [selectedCountry, setSelectedCountry] = useState([]);\n  const [selectedCustCountry, setSelectedCustCountry] = useState([]);\n  const [selectedEngCountry, setSelectedEngCountry] = useState([]);\n  const [measures, setMeasures] = useState([]);\n  const [selectedMeasures, setSelectedMeasures] = useState([]);\n  const [contractTerms, setContractTerms] = useState([]);\n  const [selectedContractTerms, setSelectedContractTerms] = useState([]);\n  const [SalesExe, setSalesExe] = useState([]);\n  const [selectedSalesExe, setSelectedSalesExe] = useState([]);\n  const [ownerDivision, setOwnerDivision] = useState([]);\n  const [selectedOwnerDivision, setSelectedOwnerDivision] = useState([]);\n  const [engCompany, setEngCompany] = useState([]);\n  const [selectedEngCompany, setSelectedEngCompany] = useState([]);\n  const [cslList, setCslList] = useState([]);\n  const [selectedCslList, setSelectedCslList] = useState([]);\n  const [dpList, setDpList] = useState([]);\n  const [selectedDpList, setSelectedDpList] = useState([]);\n  const [sortBy, setSortBy] = useState([]);\n  const [selectType, setSelectType] = useState(\"BusinessUnit\");\n  const [project, setProject] = useState([]);\n  const [resources, setResources] = useState([]);\n  const [validationmessage, setValidationMessage] = useState(false);\n  const [displayTableState, setDisplayTableState] = useState(false);\n  const ref = useRef([]);\n  const [tableData, setTableData] = useState(null);\n  const [tableKeys, setTableKeys] = useState([]);\n  const [loader, setLoader] = useState(false);\n  const abortController = useRef(null);\n  const [dataAccess, setDataAccess] = useState();\n  const [data2, setData2] = useState([]);\n\n  const [showPopup, setShowPopup] = useState(false);\n  const [custVisible, setCustVisible] = useState(false);\n  const [selectedResource, setSelectedResource] = useState(-1);\n  const [projectname, setProjectName] = useState(\"\");\n  let flag = 3;\n\n  const generateDropdownLabel = (selectedOptions, allOptions) => {\n    const selectedValues = selectedOptions.map((option) => option.value);\n    const allValues = allOptions.map((item) => item.value);\n\n    if (selectedValues.length === allValues.length) {\n      return \"<< ALL >>\";\n    } else {\n      return selectedOptions.map((option) => option.label).join(\", \");\n    }\n  };\n\n  const ArrowRenderer = ({ expanded }) => (\n    <>\n      {expanded ? (\n        <FaCaretDown className=\"chevronIcon\" />\n      ) : (\n        <FaCaretDown className=\"chevronIcon\" />\n      )}\n    </>\n  );\n  const [data, setData] = useState(\"Select Resource\");\n  const [resourceData, setResourceData] = useState([]);\n  console.log(selectType);\n  const getHierarchyData1 = () => {\n    axios({\n      method: \"get\",\n      url:\n        baseUrl + \"/revenuemetricsms/RevenueMarginAnalysis/getResourceFullName\",\n    })\n      .then(function (response) {\n        const resp = response.data;\n        setResourceData(resp);\n      })\n      .catch((err) => { });\n  };\n  console.log(dataAccess);\n  useEffect(() => {\n    getHierarchyData1();\n  }, [selectedResource]);\n\n  useEffect(() => {\n    setSelectedCslList(cslList);\n  }, [selectType]);\n\n  const getHierarchyData = () => {\n    axios({\n      method: \"get\",\n      url: baseUrl + \"/revenuemetricsms/RevenueMarginAnalysis/getReportees2\",\n    })\n      .then(function (response) {\n        const resp = response.data;\n\n        const filteredData = resp.filter((item) => {\n          if (item.parent_id !== null) {\n            return resp.some(\n              (parentItem) =>\n                parentItem &&\n                parentItem !== \"null\" &&\n                parentItem.id === item.parent_id\n            );\n          } else {\n            return true;\n          }\n        });\n        if (selectedResource !== -1) {\n          for (let i = 0; i < filteredData.length - 1; i++) {\n            if (filteredData[i].id == selectedResource) {\n              // setData(filteredData[i].full_name);\n              break;\n            }\n          }\n        }\n\n        setSearchdata((prev) => {\n          return { ...prev, resId: selectedResource };\n        });\n      })\n      .catch((err) => { });\n  };\n\n  useEffect(() => {\n    getHierarchyData();\n  }, [selectedResource]);\n\n  {\n    /*-------------------Getting Customer-------------------- */\n  }\n\n  const getCustomerdata = () => {\n    axios({\n      method: \"get\",\n      url: baseUrl + `/customersms/Customers/getNewCustomerList`,\n    }).then(function (response) {\n      var resp = response.data;\n      setCustomer(resp);\n    });\n  };\n\n  useEffect(() => {\n    getCustomerdata();\n  }, []);\n\n  useEffect(() => {\n    if (tableData && tableData[0]) {\n      const keysToInclude = [\"name\", \"kpi\"].concat(\n        Object.keys(tableData[0]).filter((key) =>\n          key.match(/\\d{4}_\\d{2}_\\d{2}/)\n        )\n      );\n      const sortedKeys = keysToInclude.sort((a, b) => {\n        if (a === \"Total\") return 1;\n        if (b === \"Total\") return -1;\n        const dateA = new Date(a.replace(\"_\", \"-\"));\n        const dateB = new Date(b.replace(\"_\", \"-\"));\n        const formattedDateA = dateA.toLocaleString(\"en-US\", {\n          month: \"short\",\n          year: \"numeric\",\n        });\n        const formattedDateB = dateB.toLocaleString(\"en-US\", {\n          month: \"short\",\n          year: \"numeric\",\n        });\n        return formattedDateA.localeCompare(formattedDateB);\n      });\n      if (!sortedKeys.includes(\"Total\")) {\n        sortedKeys.push(\"Total\");\n      }\n      setTableKeys(sortedKeys);\n    }\n  }, [tableData]);\n\n  const Data = moment(month).startOf(\"month\").format(\"yyyy-MM-DD\");\n  const [multiRoles, setMultiRoles] = useState([]);\n  const pageurl = \"http://10.11.12.149:3000/#/pmo/financials\";\n  const page_Name = \"Gross Margin Analysis\";\n  const location = useLocation();\n  const searchParams = new URLSearchParams(location.search);\n  const id = searchParams.get(\"id\");\n  const [editmsg, setEditAddmsg] = useState(false);\n  const [filterData, setFilterData] = useState([]);\n\n  const loggedUserId = localStorage.getItem(\"resId\");\n  const newLoggeduserId = Number(loggedUserId) + 1;\n\n  const [routes, setRoutes] = useState([]);\n  let textContent = \"Revenue Metrics\";\n  let currentScreenName = [\"Revenue & Margin Analysis\"];\n\n  useEffect(() => {\n    getMenus();\n  }, []);\n\n  const getMenus = () => {\n    axios\n      .get(baseUrl + `/CommonMS/master/getMenus?loggedUserId=${loggedUserId}`)\n      .then((resp) => {\n        let getData = resp.data.map((menu) => {\n          if (menu.subMenus) {\n            menu.subMenus = menu.subMenus.filter(\n              (subMenu) =>\n                subMenu.display_name !== \"Monthly Revenue Trend\" &&\n                subMenu.display_name !== \"Revenue & Margin Variance\" &&\n                subMenu.display_name !== \"Rev. Projections\" &&\n                subMenu.display_name !== \"Project Timesheet (Deprecated)\" &&\n                subMenu.display_name !== \"Financial Plan & Review\"\n            );\n          }\n          return menu;\n        });\n        setData2(getData);\n\n        getData.forEach((item) => {\n          if (item.display_name === textContent) {\n            setRoutes([item]);\n          }\n        });\n\n        const marginSubMenu = getData\n          .find((item) => item.display_name === \"Revenue Metrics\")\n\n          .subMenus.find(\n            (subMenu) => subMenu.display_name === \"Revenue & Margin Analysis\"\n          );\n        console.log(marginSubMenu.userRoles);\n        setMultiRoles(marginSubMenu.userRoles);\n        const accessLevel = marginSubMenu\n          ? marginSubMenu.userRoles.includes(\"911\")\n            ? 911\n            : marginSubMenu.userRoles.includes(\"126\")\n              ? 126\n              : marginSubMenu.userRoles.includes(\"908\")\n                ? 908\n                : marginSubMenu.userRoles.includes(\"910\")\n                  ? 910\n                  : marginSubMenu.userRoles.includes(\"690\") &&\n                    marginSubMenu.userRoles.includes(\"641\")\n                    ? 600\n                    : marginSubMenu.userRoles.includes(\"690\") &&\n                      marginSubMenu.userRoles.includes(\"930\")\n                      ? 500\n                      : marginSubMenu.userRoles.includes(\"641\") &&\n                        marginSubMenu.userRoles.includes(\"930\")\n                        ? 400\n                        : marginSubMenu.userRoles.includes(\"641\")\n                          ? 641\n                          : marginSubMenu.userRoles == 690 && marginSubMenu.userRoles == 641\n                            ? 620\n                            : marginSubMenu.userRoles.includes(\"690\")\n                              ? 690\n                              : marginSubMenu.userRoles.includes(\"930\") && 930\n          : null;\n        console.log(accessLevel, \"----------------------&&&&&&7\");\n        // getProjectdata(accessLevel);\n        setDataAccess(accessLevel);\n        if (accessLevel == 641 || accessLevel == 690 || accessLevel == 930) {\n          setSelectType(\"customer\");\n          setSearchdata((prevData) => ({\n            ...prevData,\n            type: \"customer\",\n          }));\n        }\n        if (accessLevel == 690) {\n          axios\n            .get(\n              // dataAccess == 690 || dataAccess == 641 || dataAccess == 46\n              //   ?\n              baseUrl +\n              `/ProjectMS/project/getProjectsbyDp?loggedUserId=${Number(loggedUserId) + 1\n              }`\n              // : baseUrl + `/ProjectMS/Audit/getProjectNameandId`\n            )\n\n            .then(function (response) {\n              var resp = response.data;\n              setProject(resp);\n            });\n        } else if (accessLevel == 500) {\n          axios\n            .get(\n              baseUrl +\n              `/ProjectMS/project/getProjectsdpae?loggedUserId=${Number(loggedUserId) + 1\n              }`\n            )\n            // .get(baseUrl + `/ProjectMS/Audit/getProjectNameandId`)\n            .then((response) => {\n              var resp = response.data;\n              resp.push({ id: \"-1\", name: \"<<ALL>>\" });\n              setProject(resp);\n            });\n        } else if (accessLevel == 400) {\n          axios\n            .get(\n              baseUrl +\n              `/ProjectMS/project/getProjectscslae?loggedUserId=${Number(loggedUserId) + 1\n              }`\n            )\n            // .get(baseUrl + `/ProjectMS/Audit/getProjectNameandId`)\n            .then((response) => {\n              var resp = response.data;\n              resp.push({ id: \"-1\", name: \"<<ALL>>\" });\n              setProject(resp);\n            });\n        } else if (accessLevel == 600) {\n          axios\n            .get(\n              baseUrl +\n              `/ProjectMS/project/getProjectsbyCslDp?loggedUserId=${Number(loggedUserId) + 1\n              }`\n            )\n            // .get(baseUrl + `/ProjectMS/Audit/getProjectNameandId`)\n            .then((response) => {\n              var resp = response.data;\n\n              setProject(resp);\n            });\n        } else if (accessLevel == 641) {\n          axios\n            .get(\n              // dataAccess == 690 || dataAccess == 641 || dataAccess == 46\n              //   ?\n              baseUrl +\n              `/ProjectMS/project/getProjectsbycsl?loggedUserId=${Number(loggedUserId) + 1\n              }`\n              // : baseUrl + `/ProjectMS/Audit/getProjectNameandId`\n            )\n\n            .then(function (response) {\n              var resp = response.data;\n              setProject(resp);\n            });\n        } else if (accessLevel == 930) {\n          axios\n            .get(\n              // dataAccess == 690 || dataAccess == 641 || dataAccess == 46\n              //   ?\n              baseUrl +\n              `/ProjectMS/project/getProjectsbyAE?loggedUserId=${Number(loggedUserId) + 1\n              }`\n              // : baseUrl + `/ProjectMS/Audit/getProjectNameandId`\n            )\n\n            .then(function (response) {\n              var resp = response.data;\n              setProject(resp);\n            });\n        } else {\n          axios\n            .get(baseUrl + `/ProjectMS/Audit/getProjectNameandId`)\n\n            .then(function (response) {\n              var resp = response.data;\n              setProject(resp);\n            });\n        }\n      });\n  };\n\n  const FilterData = () => {\n    axios({\n      method: \"get\",\n      url:\n        baseUrl +\n        `/dashboardsms/savedsearch/FiltersData?saved_search_id=${id === null ? 0 : id\n        }`,\n    }).then(function (res) {\n      const getData = res.data;\n      setFilterData(getData);\n    });\n  };\n\n  useEffect(() => {\n    FilterData();\n  }, [id]);\n  const [searchdata, setSearchdata] = useState({\n    // ownerDivisions: -1,\n    // month: \"\",\n    // duration: \"\",\n    // countries: \"6,5,3,8,7,1,2\",\n    // searchType: \"BusinessUnit\",\n    // busUnits: \"170,211,123,82,168,207,212,18,213,49,149,208,243\",\n    // customers: -1,\n    // srcType: -1,\n    // srcTypeId: -1,\n    // tarType: \"BusinessUnit\",\n    // busUnitId: -1,\n    // custId: -1,\n    // prjId: -1,\n    // resId: -1,\n    // measures: \"1350,638,965,639,640,641,643,644,872,761\",\n    // salesExecId: -1,\n    // salesExecs:\n    //   \"88932313,3575,139,2119653,191,225,235,257,2119671,57997421,513,523,557,3617428,667,84740633,116105998,55762631,683,82291354,81525,2119701,76287764,2119725,57559815,2639264,81537,24662818,63011834,2119739,2811358,847,2119741,1550816,875,881,905,101477977,57482208,981,57997419,2119775,4849403,2573864,20493348,116106000,2119787,57482210,2119795,68629761,111001131,1165,2639222,1175,130391575,88998194,3414273,1375,1381,56148348,2119837,2119851,81587,1529,4452487,1459,97925857,1461,18910037,2119859,2640070,36786373,1513,2119655,43972990,1635,81601,14398829,69158161,793,1675,2639520,70301986,1717,124117738,1785,97320362,114598022,2167,3007509,112875979,2183,81657,2203,2227,120015604,2119945,47112354,46642168,2257,81659,2119951,2249,4872942,111410,2263,11651218,2119961,2607,2599,2119975,85338848,2725,30134361,2737,112208586,2596928,96657988,3129,658084,4452476,846041,3495,2120031,3617,2120057,1495,2120061,2120063,59144453,2120069,21505179,111399803,3737,3887,3977,2120091,2120095,4065,25313227,81825,111450,112875977,31161422,4095,81871,4721,2120135,2120139,37215300,4729,49413793,2120157,123454586,4937,2120161,2120163,117718248,1753925,30549612,2120177,2120181,117449123,5265,114159851,999999\",\n    // sortBy: -1,\n    // custCountries: -1,\n    // resTyp: -1,\n    // source: -1,\n    // engCountries: -1,\n    // contTerms: -1,\n    // engComp: -1,\n    // cslRes: -1,\n    // cslResId: -1,\n    // dpRes:\n    //   \"189,225,257,871,881,106873978,1115,1165,91335222,1375,81587,131110804,38380211,81651,3129,3217,846041,3887,3905,81825,4455,112875977,1561,49413793,123454586,4935,4937,5201,5211,5269,114159851,50270737,72292702\",\n    // dpResId: -1,\n    // indTypes:\n    //   \"552,178,553,547,555,202,203,204,205,206,557,207,546,208,209,210,211,212,556,545,213,179,214,551,215,216,549,217,554,548,218,1290,219\",\n    // indTypesId: -1,\n    // activeCustomers:\n    //   \"85945152,128283684,72156417,71427353,1551283,123894900,112042055,63975211,1551287,94389335,93991408,1551417,1551294,1551300,134633482,94455983,29063316,94455985,64386786,1842050,1551317,30526094,1551320,110592851,25264701,1551323,16847713,94455987,129937850,58684283,76951255,80753999,112914302,54142249,1552214,1992078,1551346,72694747,1989656,132397598,109428419,117147205,94455988,1552593,36504344,37091493,1551362,1551374,1551376,26087285,116648754,3819459,94854626,1551361,1551380,1551382,104869180,10470456,114461301,97387326,2620532,1891336,1551399,1551909,94854623,62940562,24192899,85945154,94854624,1551980,1551910,128598943,6031468,79877870,13632704,1551916,4293374,128467119,94389332,93991409,94389336,1551929,1551981,112008718,119243358,96591348,59706234,82291358,1551943,1551944,2853559,1551948,1551521,77018196,1551952,1551953,1551955,37091494,63162799,125931702,1551970,63266772,1552007,1552701,1552010,1552011,76951258,94854628,137793502,137793504,94854630,112674610,1551707,76751383,60912954,130225404,1989657,112875982,1552027,1552737,10219672,55697033,63633008,63633007,59821116,51067835,92393453,111974038,44011093,118769156,67834295,132397596,132066225,4511021,8458720,3667922,127640293,84210849,96188256,137399513,111034788,1552049,1552048,23961964,1552052,94788398,1552769,1552097,1552059,1552062,94389337,92859923,18553399,55076417,1552068,90339052,85615658,1552077,61340693,36635688,1552083,1552086,5527406,97121507,85546349,133185522,94720315,1552111,1551863,129404696,2540692,15081811,26143593,13177220,82291362,117718253,2077503,70897083,2082139,94455984,1552145,1552132,137793503,3886568,1551986,97387332,104203600,1552149,1552150,1552161,94720314,2668746,1551965,2838049,2042271,85945151,3284412,11370414,55154318,76154829,97387329,2065901,128226785,2012374,125322705,43624395,3120332,63162798,67129169,41019114,1551753,76951256,95324519,1551956,1552187,1551877,29304173,1552226,1552189,26242008,94455982,94921283,76751379,1552198,9093339,1552200,64386785,3667921,38904085,2540690,124097971,94854629,119173217,21664192,1552217,1552222,58441017,29246005,94389338,85007141,1842057,36244913,76420367,4511022,96055886,1552238,1552240,1552252,39969636,3138503,64955428,76751371,75093305,13632703,7007429,1552261,1551996,112674609,1552268,1956839,97387333,52636336,42255432,120584753,1552276,139446567,137267788,1552521,41317099,69963531,1552292,1552023,1989658,1956840,1552286,1552293,94854625,106471491,1552294,1552304,1552849,96188257,97926363,1552295,5296323,1551648,1552309,94455981,72223410,80080786,24275141,98815571,27730999,99484320,2853561,1552344,1552345,94455989,117682329,59291323,1552363,4511023,94389333,3039808,2612049,1552359,3138502,1552369,2853562,1980150,132397594,94854627,97653997,5527408,98214365,128264227,58638638,90138245,90138244,90138246,90138243,90138241,97386610,95257587,128997124,128333765,1552394,1552395,80080781,90339053,60478567,1552400,1552375,69291961,1552402,27731000,92659540,51469532,29433193,80685749,1552409,106003070,5527409,114529861,2540691,130225403,128699085,44814300,70963563,1760934,43889231,1552418,94920541,97121510,37091495,80685750,57794189,87139275,2308411,52512736,1552430,111602229,61261568,137399515,41019113,94389334,76951261,124522210,1552448,11370415,5168356,139446353,41317098,3280593,52300271,121428211,124386451,97387328,98815570,1552454,1552464,1552468,99417583,52032507,1552484,1552486,1552487,1552489,1552490,1552313,1551938,64155,1552043,1552119,112275293,5550270,66398294,3270030,85945149,137399512,97387327,56952600,1552475,132066226,4950222,130723112,97387330,97320365,1552507,85945150,2620533,105467422,119409379,88932319,97387331,62719516,129153485,60912956,123522147,67530124,112275294,4725319,76751380,65232987,97121508,1552531,1552533,1552539,1552540,38519994,1552541,14791169,91467597,1552545,2612051,1552573,130723113,137399514,122385399,76951259,1552564,2623413,102536503\",\n  });\n  useEffect(() => {\n    setSearchdata(() => {\n      if (id != null) {\n        return {\n          ownerDivisions: filterData.ownerDivisions,\n          month: filterData.month,\n          duration: filterData.duration,\n          countries: filterData.countries,\n          searchType: filterData.searchType,\n          busUnits: filterData.busUnits,\n          customers: filterData.customers,\n          srcType: filterData.srcType,\n          srcTypeId: filterData.srcTypeId,\n          tarType: filterData.tarType,\n          busUnitId: filterData.busUnitId,\n          custId: filterData.custId,\n          prjId: filterData.prjId,\n          resId: filterData.resId,\n          measures: filterData.measures,\n          salesExecId: filterData.salesExecId,\n          salesExecs: filterData.salesExecs,\n          sortBy: filterData.sortBy,\n          custCountries: filterData.custCountries,\n          resTyp: filterData.resTyp,\n          source: filterData.source,\n          engCountries: filterData.engCountries,\n          contTerms: filterData.contTerms,\n          engComp: filterData.engComp,\n          cslRes:\n            dataAccess == 641 || dataAccess == 690\n              ? Number(loggedUserId) + 1\n              : filterData.cslRes,\n          cslResId: filterData.cslResId,\n          dpRes:\n            dataAccess == 641 || dataAccess == 690\n              ? Number(loggedUserId) + 1\n              : filterData.dpRes,\n          dpResId: filterData.dpResId,\n          indTypes: filterData.indTypes,\n          indTypesId: filterData.indTypesId,\n          activeCustomers: filterData.activeCustomers,\n        };\n      } else {\n        return {\n          ownerDivisions: -1,\n          month: \"\",\n          duration: \"\",\n          countries: \"6,5,3,8,7,1,2\",\n          searchType: \"BusinessUnit\",\n          busUnits: \"170,211,123,82,168,207,212,18,213,49,149,208,243\",\n          customers: -1,\n          srcType: -1,\n          srcTypeId: -1,\n          tarType: \"BusinessUnit\",\n          busUnitId: -1,\n          custId: -1,\n          prjId: -1,\n          resId: -1,\n          measures: \"1350,638,965,639,640,641,643,644,872,761\",\n          salesExecId: -1,\n          salesExecs:\n            \"88932313,3575,139,2119653,191,225,235,257,2119671,57997421,513,523,557,3617428,667,84740633,116105998,55762631,683,82291354,81525,2119701,76287764,2119725,57559815,2639264,81537,24662818,63011834,2119739,2811358,847,2119741,1550816,875,881,905,101477977,57482208,981,57997419,2119775,4849403,2573864,20493348,116106000,2119787,57482210,2119795,68629761,111001131,1165,2639222,1175,130391575,88998194,3414273,1375,1381,56148348,2119837,2119851,81587,1529,4452487,1459,97925857,1461,18910037,2119859,2640070,36786373,1513,2119655,43972990,1635,81601,14398829,69158161,793,1675,2639520,70301986,1717,124117738,1785,97320362,114598022,2167,3007509,112875979,2183,81657,2203,2227,120015604,2119945,47112354,46642168,2257,81659,2119951,2249,4872942,111410,2263,11651218,2119961,2607,2599,2119975,85338848,2725,30134361,2737,112208586,2596928,96657988,3129,658084,4452476,846041,3495,2120031,3617,2120057,1495,2120061,2120063,59144453,2120069,21505179,111399803,3737,3887,3977,2120091,2120095,4065,25313227,81825,111450,112875977,31161422,4095,81871,4721,2120135,2120139,37215300,4729,49413793,2120157,123454586,4937,2120161,2120163,117718248,1753925,30549612,2120177,2120181,117449123,5265,114159851,999999\",\n          sortBy: -1,\n          custCountries: -1,\n          resTyp: -1,\n          source: -1,\n          engCountries: -1,\n          contTerms: -1,\n          engComp: -1,\n          cslRes:\n            dataAccess == 641 || dataAccess == 690\n              ? Number(loggedUserId) + 1\n              : -1,\n          cslResId: -1,\n          dpRes:\n            dataAccess == 641 || dataAccess == 690\n              ? Number(loggedUserId) + 1\n              : \"189,225,257,871,881,106873978,1115,1165,91335222,1375,81587,131110804,38380211,81651,3129,3217,846041,3887,3905,81825,4455,112875977,1561,49413793,123454586,4935,4937,5201,5211,5269,114159851,50270737,72292702\",\n          dpResId: -1,\n          indTypes: -1,\n          indTypesId: -1,\n          activeCustomers:\n            \"85945152,128283684,72156417,71427353,1551283,123894900,112042055,63975211,1551287,94389335,93991408,1551417,1551294,1551300,134633482,94455983,29063316,94455985,64386786,1842050,1551317,30526094,1551320,110592851,25264701,1551323,16847713,94455987,129937850,58684283,76951255,80753999,112914302,54142249,1552214,1992078,1551346,72694747,1989656,132397598,109428419,117147205,94455988,1552593,36504344,37091493,1551362,1551374,1551376,26087285,116648754,3819459,94854626,1551361,1551380,1551382,104869180,10470456,114461301,97387326,2620532,1891336,1551399,1551909,94854623,62940562,24192899,85945154,94854624,1551980,1551910,128598943,6031468,79877870,13632704,1551916,4293374,128467119,94389332,93991409,94389336,1551929,1551981,112008718,119243358,96591348,59706234,82291358,1551943,1551944,2853559,1551948,1551521,77018196,1551952,1551953,1551955,37091494,63162799,125931702,1551970,63266772,1552007,1552701,1552010,1552011,76951258,94854628,137793502,137793504,94854630,112674610,1551707,76751383,60912954,130225404,1989657,112875982,1552027,1552737,10219672,55697033,63633008,63633007,59821116,51067835,92393453,111974038,44011093,118769156,67834295,132397596,132066225,4511021,8458720,3667922,127640293,84210849,96188256,137399513,111034788,1552049,1552048,23961964,1552052,94788398,1552769,1552097,1552059,1552062,94389337,92859923,18553399,55076417,1552068,90339052,85615658,1552077,61340693,36635688,1552083,1552086,5527406,97121507,85546349,133185522,94720315,1552111,1551863,129404696,2540692,15081811,26143593,13177220,82291362,117718253,2077503,70897083,2082139,94455984,1552145,1552132,137793503,3886568,1551986,97387332,104203600,1552149,1552150,1552161,94720314,2668746,1551965,2838049,2042271,85945151,3284412,11370414,55154318,76154829,97387329,2065901,128226785,2012374,125322705,43624395,3120332,63162798,67129169,41019114,1551753,76951256,95324519,1551956,1552187,1551877,29304173,1552226,1552189,26242008,94455982,94921283,76751379,1552198,9093339,1552200,64386785,3667921,38904085,2540690,124097971,94854629,119173217,21664192,1552217,1552222,58441017,29246005,94389338,85007141,1842057,36244913,76420367,4511022,96055886,1552238,1552240,1552252,39969636,3138503,64955428,76751371,75093305,13632703,7007429,1552261,1551996,112674609,1552268,1956839,97387333,52636336,42255432,120584753,1552276,139446567,137267788,1552521,41317099,69963531,1552292,1552023,1989658,1956840,1552286,1552293,94854625,106471491,1552294,1552304,1552849,96188257,97926363,1552295,5296323,1551648,1552309,94455981,72223410,80080786,24275141,98815571,27730999,99484320,2853561,1552344,1552345,94455989,117682329,59291323,1552363,4511023,94389333,3039808,2612049,1552359,3138502,1552369,2853562,1980150,132397594,94854627,97653997,5527408,98214365,128264227,58638638,90138245,90138244,90138246,90138243,90138241,97386610,95257587,128997124,128333765,1552394,1552395,80080781,90339053,60478567,1552400,1552375,69291961,1552402,27731000,92659540,51469532,29433193,80685749,1552409,106003070,5527409,114529861,2540691,130225403,128699085,44814300,70963563,1760934,43889231,1552418,94920541,97121510,37091495,80685750,57794189,87139275,2308411,52512736,1552430,111602229,61261568,137399515,41019113,94389334,76951261,124522210,1552448,11370415,5168356,139446353,41317098,3280593,52300271,121428211,124386451,97387328,98815570,1552454,1552464,1552468,99417583,52032507,1552484,1552486,1552487,1552489,1552490,1552313,1551938,64155,1552043,1552119,112275293,5550270,66398294,3270030,85945149,137399512,97387327,56952600,1552475,132066226,4950222,130723112,97387330,97320365,1552507,85945150,2620533,105467422,119409379,88932319,97387331,62719516,129153485,60912956,123522147,67530124,112275294,4725319,76751380,65232987,97121508,1552531,1552533,1552539,1552540,38519994,1552541,14791169,91467597,1552545,2612051,1552573,130723113,137399514,122385399,76951259,1552564,2623413,102536503\",\n        };\n      }\n    });\n  }, [filterData, id]);\n  useEffect(() => {\n    if (id != null) {\n      const updatebusiness = departments.filter((values) =>\n        filterData.busUnits?.includes(values.value)\n      );\n      const updatecountry = country.filter((values) =>\n        filterData.countries?.includes(values.value)\n      );\n      const updatecontractTerms = contractTerms.filter((values) =>\n        searchdata.contTerms?.includes(values.value)\n      );\n\n      const updateengCompany = engCompany.filter((values) =>\n        searchdata.engComp?.includes(values.value)\n      );\n\n      const updatemeasures = measures.filter((values) =>\n        filterData.measures?.includes(values.value)\n      );\n\n      const updatecustenglocation = engCustLocation.filter((values) =>\n        searchdata.custCountries?.includes(values.value)\n      );\n\n      const updateengCustLocation = engCustLocation.filter((values) =>\n        searchdata.engCountries?.includes(values.value)\n      );\n      const updateselecttype = filterData?.searchType;\n      console.log(updateselecttype);\n      const updateprojectname = project?.filter((values) =>\n        searchdata.prjId?.includes(values.id)\n      );\n\n      const projectnamedata = JSON.stringify(\n        updateprojectname[0]?.name\n      )?.replace(/\"/g, \"\");\n\n      const updateSalesExecutive = SalesExe?.filter((values) =>\n        searchdata.salesExecs?.includes(values.value)\n      );\n\n      const progressDataDivisions = filterData.ownerDivisions;\n\n      const divisionsToFilter = progressDataDivisions\n        ? progressDataDivisions.split(\",\").map(Number)\n        : [];\n\n      const updateownerDivision = ownerDivision.filter((values) =>\n        filterData.ownerDivisions?.includes(values.value)\n      );\n\n      const updateDivisionsdata = updateownerDivision.filter((values) =>\n        divisionsToFilter.includes(values.value)\n      );\n\n      const updatecslList = cslList.filter((values) =>\n        searchdata.cslRes?.includes(values.value)\n      );\n\n      const updatedpList = dpList.filter((values) =>\n        searchdata.dpRes?.includes(values.value)\n      );\n\n      const updatecustIndustry = custIndustry.filter((values) =>\n        filterData.indTypes?.includes(values.value)\n      );\n\n      const updateResource = resourceData.filter((values) =>\n        filterData.resId?.includes(values.id)\n      );\n      const updateResource1 = updateResource.filter(\n        (values) => values.id === +searchdata.resId\n      );\n\n      const ResourceName = updateResource1[0]?.full_name;\n\n      setData(ResourceName);\n      if (searchdata?.month !== undefined && searchdata?.month !== \"\") {\n        const updatedate = searchdata?.month;\n\n        setMonth(parseISO(updatedate));\n      }\n\n      setSelectedCustIndustry(updatecustIndustry);\n      setSelectedDpList(updatedpList);\n      setSelectedCslList(updatecslList);\n      setSelectedOwnerDivision(updateDivisionsdata);\n      setSelectedSalesExe(updateSalesExecutive);\n      setSelectedEngCountry(updateengCustLocation);\n      setSelectedCustCountry(updatecustenglocation);\n      setSelectedDepartments(updatebusiness);\n      setSelectedCountry(updatecountry);\n\n      if (searchdata.contTerms === \"-1\") {\n        setSelectedContractTerms(contractTerms);\n      } else {\n        setSelectedContractTerms(updatecontractTerms);\n      }\n\n      if (searchdata.engComp === \"-1\") {\n        setSelectedEngCompany(engCompany);\n      } else {\n        setSelectedEngCompany(updateengCompany);\n      }\n      setSelectedMeasures(updatemeasures);\n      setSelectType(updateselecttype);\n      setProjectName(projectnamedata);\n    }\n  }, [\n    id,\n    searchdata.measures,\n    measures,\n    parseInt(filterData.duration),\n    departments,\n    selectType,\n    engCustLocation,\n    project,\n    searchdata.prjId,\n    engCompany,\n    SalesExe,\n    searchdata.countries,\n    searchdata?.source,\n    searchdata?.month,\n    searchdata.contTerms,\n    country,\n    filterData?.searchType,\n    searchdata.busUnits,\n    filterData.countries,\n    filterData.busUnits,\n    filterData.measures,\n    filterData.resId,\n    filterData.ownerDivisions,\n    filterData.indTypes,\n    searchdata?.duration,\n  ]);\n\n  useEffect(() => {\n    setSearchdata((prev) => {\n      return { ...prev, duration: \"\" };\n    });\n    if (id != null) {\n      setTimeout(() => {\n        handleSearch();\n      }, 4000);\n    }\n  }, [searchdata.month]);\n  //=======================================================\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n\n    if (name == \"searchType\") {\n      setDisplayTableState(false);\n      setSelectType(value);\n    }\n    setSearchdata((prev) => {\n      return { ...prev, [name]: value };\n    });\n  };\n\n  const [selectedItems, setSelectedItems] = useState([{}]);\n  const customers = selectedItems?.map((d) => d?.id).toString();\n\n  useEffect(() => { }, [customers], [searchdata.searchType]);\n\n  const selectedCust = JSON.parse(localStorage.getItem(\"selectedCust\"))\n    ?.map((d) => d.id)\n    ?.toString();\n\n  const handleCust = (e) => {\n    const { id, name, value } = e.target;\n    if (name == \"customers\" && value === \"select\") {\n      setCustVisible(true);\n    }\n    setSearchdata((prev) => {\n      return { ...prev, [name]: value };\n    });\n  };\n\n  {\n    /*--------------Handel Search--------------- */\n  }\n\n  const findLaterMeasureLabel = (measures, selectedMeasures) => {\n    const selectedLabels = selectedMeasures.map((measure) => measure.label);\n    const laterMeasures = measures.filter((measure) =>\n      selectedLabels.includes(measure.label)\n    );\n    const lastLaterMeasure = laterMeasures[laterMeasures.length - 1];\n    return lastLaterMeasure ? lastLaterMeasure.label : \"\";\n  };\n\n  const DefaultMeasureLabel = (measures, selectedMeasures) => {\n    const selectedLabels = selectedMeasures.map((measure) => measure.label);\n\n    if (selectedLabels.includes(\"Planned Revenue\")) {\n      return \"Planned Revenue\";\n    }\n\n    const laterMeasures = measures.filter((measure) =>\n      selectedLabels.includes(measure.label)\n    );\n    const firstSelectedMeasure = laterMeasures[0];\n\n    return firstSelectedMeasure ? firstSelectedMeasure.label : \"\";\n  };\n\n  const laterMeasureLabel = findLaterMeasureLabel(measures, selectedMeasures);\n  const defaultMeasureLabel = DefaultMeasureLabel(measures, selectedMeasures);\n\n  const handleSearch = (e) => {\n    let filteredData = ref.current.filter((d) => d != null);\n    ref.current = filteredData;\n    let valid = GlobalValidation(ref);\n\n    if (valid) {\n      setValidationMessage(true);\n      if (selectType === \"Resource\" && data === \"Select Resource\") {\n        var poBtnElement = document.querySelector(\".poBtn\");\n        if (poBtnElement) {\n          poBtnElement.style.color = \"red\";\n        }\n      }\n      return;\n    }\n\n    if (selectType === \"Resource\" && data === \"Select Resource\") {\n      setValidationMessage(true);\n      var poBtnElement = document.querySelector(\".poBtn\");\n      if (poBtnElement) {\n        poBtnElement.style.color = \"red\";\n      }\n      return;\n    } else if (selectType === \"Resource\" && data !== \"Select Resource\") {\n      setValidationMessage(false);\n      var poBtnElement = document.querySelector(\".poBtn\");\n      if (poBtnElement) {\n        poBtnElement.style.color = \"#187fde\";\n      }\n    }\n    setValidationMessage(false);\n    setDisplayTableState(false);\n    const loaderTime = setTimeout(() => {\n      setLoader(true);\n    }, 2000);\n    abortController.current = new AbortController();\n\n    axios({\n      method: \"post\",\n      url:\n        baseUrl +\n        (selectType == \"CustIndustry\"\n          ? `/revenuemetricsms/RevenueMarginAnalysis/GetGMACustIndustryFinancialsFinalData`\n          : selectType == \"DP\"\n            ? \"/revenuemetricsms/RevenueMarginAnalysis/GetGMADPFinancialsFinalData\"\n            : selectType == \"CSL\"\n              ? \"/revenuemetricsms/RevenueMarginAnalysis/GetGMACSLFinancialsFinalData\"\n              : selectType == \"Sales Executive\"\n                ? \"/revenuemetricsms/RevenueMarginAnalysis/GetGMASalesExecutiveFinancialsFinalData\"\n                : selectType == \"Customer\" ||\n                  selectType == \"Project\" ||\n                  selectType == \"Resource\"\n                  ? \"/revenuemetricsms/RevenueMarginAnalysis/GetFinancialsFinalData\"\n                  : selectType == \"BusinessUnit\" &&\n                    (searchdata.engComp != -1 || searchdata.contTerms != -1)\n                    ? `/revenuemetricsms/RevenueMarginAnalysis/getFinancialsBUSummaryByCTFinalData`\n                    : `/revenuemetricsms/RevenueMarginAnalysis/getFinancialsBUSummarytFinalData`),\n      data: {\n        ownerDivisions:\n          selectType == \"Sales Executive\" ? searchdata.ownerDivisions : -1,\n        month:\n          searchdata.month === \"\" || searchdata.month === \"Invalid date\"\n            ? Data\n            : searchdata.month,\n\n        duration: id !== null ? filterData.duration : searchdata.duration,\n\n        countries: searchdata.countries,\n        searchType: searchdata.searchType,\n        busUnits:\n          selectType == \"BusinessUnit\" || selectType == \"Customer\"\n            ? searchdata.busUnits\n            : -1,\n        customers:\n          searchdata.customers == \"select\"\n            ? selectedCust\n            : searchdata.customers == 0\n              ? searchdata.activeCustomers\n              : searchdata.customers,\n        srcType: searchdata.srcType,\n        srcTypeId: searchdata.srcTypeId,\n        tarType: searchdata.searchType,\n        busUnitId: searchdata.busUnitId,\n        custId: searchdata.custId,\n        prjId: selectType != \"Project\" ? -1 : searchdata.prjId,\n        resId: selectType != \"Resource\" ? -1 : searchdata.resId,\n        measures: searchdata.measures,\n        salesExecId: searchdata.salesExecId,\n        salesExecs:\n          selectType != \"Sales Executive\" ? -1 : searchdata.salesExecs,\n        sortBy: searchdata.sortBy,\n        custCountries: searchdata.custCountries,\n        source: searchdata.source,\n        resTyp: searchdata.resTyp,\n        engCountries: searchdata.engCountries,\n        contTerms: searchdata.contTerms,\n        engComp: searchdata.engComp,\n        cslRes:\n          dataAccess == 641 || dataAccess == 690 || dataAccess == 600\n            ? Number(loggedUserId) + 1\n            : searchdata.cslRes,\n        cslResId: searchdata.cslResId,\n        // dpRes: selectType != \"DP\" ? -1 : searchdata.dpRes,\n        dpRes:\n          dataAccess == 641 || dataAccess == 690 || dataAccess == 600\n            ? Number(loggedUserId) + 1\n            : selectType != \"DP\"\n              ? -1\n              : searchdata.dpRes,\n        dpResId: searchdata.dpResId,\n        indTypes: selectType != \"CustIndustry\" ? -1 : searchdata?.indTypes,\n        indTypesId: searchdata?.indTypesId,\n      },\n      signal: abortController.current.signal,\n    })\n      .then((res) => {\n        let respData = res.data;\n        setLoader(false);\n        clearTimeout(loaderTime);\n        setTableData(respData.data);\n        setDisplayTableState(true);\n        !valid && setVisible(!visible);\n        visible\n          ? setCheveronIcon(FaChevronCircleUp)\n          : setCheveronIcon(FaChevronCircleDown);\n      })\n      .catch((e) => {\n        setLoader(false);\n        clearTimeout(loaderTime);\n      });\n  };\n\n  {\n    /*----------------Getting BU---------------- */\n  }\n\n  const getDepartments = async () => {\n    const resp = await axios({\n      url: baseUrl + `/CostMS/cost/getDepartments`, //13\n    });\n\n    let departments = resp.data;\n    departments = departments.filter((ele) => ele.value >= 0);\n    setDepartments(departments);\n    if (id == null) {\n      setSelectedDepartments(departments.filter((ele) => ele.value >= 0));\n    }\n\n    let filteredDeptData = [];\n    departments.forEach((data) => {\n      filteredDeptData.push(data.value);\n    });\n    setSearchdata((prevVal) => ({\n      ...prevVal,\n      [\"busUnits\"]: filteredDeptData.toString(),\n    }));\n  };\n\n  {\n    /*----------------Getting Customer Industries---------------- */\n  }\n\n  const getCustIndustry = async () => {\n    const resp = await axios({\n      url:\n        baseUrl + `/revenuemetricsms/RevenueMarginAnalysis/getCustomerIndustry`, //34\n    });\n    // 1291\n\n    let departments = resp.data;\n    departments = departments.filter((ele) => ele.value >= 0);\n    setCustIndustry(departments);\n    if (id == null) {\n      setSelectedCustIndustry(departments.filter((ele) => ele.value >= 0));\n    }\n    let filteredDeptData = [];\n    departments.forEach((data) => {\n      filteredDeptData.push(data.value);\n    });\n    setSearchdata((prevVal) => ({\n      ...prevVal,\n      [\"indTypes\"]: filteredDeptData.toString(),\n    }));\n  };\n\n  {\n    /*-------------------------Getting Countries-------------------------*/\n  }\n  const getCountries = () => {\n    axios\n      // .get(baseUrl + `/CostMS/cost/getCountries`)\n      .get(baseUrl + `/CostMS/cost/getCountries`)\n      .then((Response) => {\n        let countries = [];\n        let data = Response.data;\n\n        data.length > 0 &&\n          data.forEach((e) => {\n            if (e && e.id !== 4) {\n              let countryObj = {\n                label: e.country_name,\n                value: e.id,\n              };\n              countries.push(countryObj);\n            }\n          });\n        //////////--Alphabetical Sorting--//////////\n        const sortedcities = countries.sort(function (a, b) {\n          var nameA = a.label.toUpperCase();\n          var nameB = b.label.toUpperCase();\n          if (nameA < nameB) {\n            return -1; //nameA comes first\n          }\n          if (nameA > nameB) {\n            return 1; // nameB comes first\n          }\n          return 0; // names must be equal\n        });\n        //////////------------------------//////////\n        let engCustCountries = countries.concat({\n          label: \"Others\",\n          value: 999,\n        });\n        setCountry(sortedcities);\n        setEngCustLocation(engCustCountries);\n        if (id == null) {\n          setSelectedCountry(countries);\n          setSelectedCustCountry(engCustCountries);\n          setSelectedEngCountry(engCustCountries);\n        }\n      });\n  };\n\n  const handleAbort = () => {\n    abortController.current && abortController.current.abort();\n    setLoader(false);\n  };\n\n  useEffect(() => {\n    let countryList = [];\n    country.forEach((d) => {\n      countryList.push(d.value);\n    });\n    setSearchdata((prevVal) => ({\n      ...prevVal,\n      [\"countries\"]: countryList.toString(),\n    }));\n  }, [country]);\n\n  {\n    /*-------------------------Getting Measure and Sort By-------------------------*/\n  }\n\n  const getMeasure = async () => {\n    const resp = await axios({\n      url: baseUrl + `/revenuemetricsms/RevenueMarginAnalysis/getMeasures`,\n    });\n\n    let measures = [];\n    let data = resp.data;\n\n    data.length > 0 &&\n      data.forEach((e) => {\n        let measuresObj = {\n          label: e.measures,\n          value: e.id,\n        };\n\n        measures.push(measuresObj);\n        setMeasures(measures);\n        if (id == null) {\n          setSelectedMeasures(measures.filter((ele) => ele.value != 0));\n        }\n\n        let filteredMeasuresData = [];\n        measures.forEach((data) => {\n          if (data.value != 0) {\n            filteredMeasuresData.push(data.value);\n          }\n        });\n        setSearchdata((prevVal) => ({\n          ...prevVal,\n          [\"measures\"]: filteredMeasuresData.toString(),\n        }));\n      });\n  };\n\n  const getSortBy = () => {\n    axios({\n      method: \"get\",\n      url: baseUrl + `/revenuemetricsms/RevenueMarginAnalysis/getMeasures`,\n    })\n      .then(function (response) {\n        let resp = response.data;\n        setSortBy(resp);\n      })\n      .catch(function (response) { });\n  };\n\n  {\n    /*-------------------------Getting Contract Terms-------------------------*/\n  }\n  const getContractTerms = async () => {\n    const resp = await axios({\n      url: baseUrl + `/revenuemetricsms/headCountAndTrend/getContractTerms`,\n    });\n\n    let terms = [];\n    let data = resp.data;\n\n    data.length > 0 &&\n      data.forEach((e) => {\n        let termsObj = {\n          label: e.label,\n          value: e.value,\n        };\n\n        terms.push(termsObj);\n        setContractTerms(terms);\n        if (id == null) {\n          setSelectedContractTerms(terms.filter((ele) => ele.value != 0));\n        }\n\n        let filteredContractTermData = [];\n        terms.forEach((data) => {\n          if (data.value != 0) {\n            filteredContractTermData.push(data.value);\n          }\n        });\n        setSearchdata((prevVal) => ({\n          ...prevVal,\n          [\"contractTerm\"]: filteredContractTermData.toString(),\n        }));\n      });\n  };\n\n  {\n    /*-------------------------Getting Eng. Company-------------------------*/\n  }\n  const getEngCompany = async () => {\n    const resp = await axios({\n      url: baseUrl + `/revenuemetricsms/headCountAndTrend/getEngCompany`,\n    });\n\n    let EngComp = [];\n    let data = resp.data;\n\n    data.length > 0 &&\n      data.forEach((e) => {\n        let EngCompObj = {\n          label: e.label,\n          value: e.value,\n        };\n\n        EngComp.push(EngCompObj);\n        let filteredEngCompany = EngComp.filter(\n          (ele) => ![0, 10, 11, 12, 13].includes(ele.value)\n        );\n        setEngCompany(filteredEngCompany);\n        if (id == null) {\n          setSelectedEngCompany(filteredEngCompany);\n        }\n\n        let filteredEngComp = [];\n        EngComp.forEach((data) => {\n          if (data.value != 0) {\n            filteredEngComp.push(data.value);\n          }\n        });\n        setSearchdata((prevVal) => ({\n          ...prevVal,\n          [\"engCompany\"]: filteredEngComp.toString(),\n        }));\n      });\n  };\n\n  {\n    /*-------------------Getting Project-------------------- */\n  }\n  useEffect(() => { }, [dataAccess]);\n  // const getProjectdata = (a) => {\n  //   console.log(a);\n  //   console.log(dataAccess);\n  //   axios\n  //     .get(\n  //       dataAccess == 641 || dataAccess == 690\n  //         ? baseUrl +\n  //             `/ProjectMS/project/getProjectsbyDp?loggedUserId=${newLoggeduserId}`\n  //         : dataAccess == 909\n  //         ? baseUrl +\n  //           `/CommonMS/master/getProjectsforAE?loggedUserId=${\n  //             Number(loggedUserId) + 1\n  //           }`\n  //         : baseUrl + `/revenuemetricsms/RevenueMarginAnalysis/getProjects`\n  //     )\n  //     .then(function (response) {\n  //       var resp = response.data;\n  //       setProject(resp);\n  //     });\n  // };\n  useEffect(() => {\n    if (dataAccess == 690 || dataAccess == 641 || dataAccess == 930) {\n      // getProjectdata();\n    }\n  }, [dataAccess]);\n\n  {\n    /*-------------------Getting Resources-------------------- */\n  }\n\n  const getResourcesdata = () => {\n    axios({\n      method: \"get\",\n      url: baseUrl + `/revenuemetricsms/RevenueMarginAnalysis/getResources`,\n    }).then(function (response) {\n      var resp = response.data;\n      setResources(resp);\n    });\n  };\n\n  {\n    /*-------------------Getting Sales Executive---------------*/\n  }\n\n  const getEngSalesExecutiveList = async () => {\n    const resp = await axios({\n      url:\n        // dataAccess === 490 || dataAccess === 461 ?\n        baseUrl +\n        `/revenuemetricsms/RevenueMarginAnalysis/getEngSalesExecutiveList`,\n      // : baseUrl +\n      // `/ProjectMS/project/getdirectHirarchyBasis?loggedUserId=${loggedUserId}`,\n    });\n\n    let SalesExe = resp.data;\n\n    let sE = [];\n\n    sE.push({ value: 999999, label: \"Unassigned\" });\n\n    SalesExe.length > 0 &&\n      SalesExe.forEach((e) => {\n        let SalesObj = {\n          label: e.salesPersonName,\n          value: e.id,\n        };\n\n        sE.push(SalesObj);\n\n        //////////--Alphabetical Sorting--//////////\n        const sEE = sE.sort(function (a, b) {\n          var nameA = a.label.toUpperCase();\n          var nameB = b.label.toUpperCase();\n          if (nameA < nameB) {\n            return -1; //nameA comes first\n          }\n          if (nameA > nameB) {\n            return 1; // nameB comes first\n          }\n          return 0; // names must be equal\n        });\n        //////////------------------------//////////\n\n        setSalesExe(sEE);\n        if (id == null) {\n          setSelectedSalesExe(sEE.filter((ele) => ele.value >= 0));\n        }\n        let filteredSalesExeData = [];\n        sEE.forEach((data) => {\n          if (data.value != 0) {\n            filteredSalesExeData.push(data.value);\n          }\n        });\n        setSearchdata((prevVal) => ({\n          ...prevVal,\n          [\"SalesExe\"]: filteredSalesExeData.toString(),\n        }));\n      });\n  };\n\n  {\n    /*-------------------------Getting Contract Terms-------------------------*/\n  }\n  const getSFOwnerDivisions = async () => {\n    const resp = await axios({\n      url:\n        baseUrl + `/revenuemetricsms/RevenueMarginAnalysis/getSFOwnerDivisions`,\n    });\n\n    let terms = [];\n    let data = resp.data;\n\n    data.length > 0 &&\n      data.forEach((e) => {\n        let termsObj = {\n          label: e.owner_division,\n          value: e.id,\n        };\n\n        terms.push(termsObj);\n        setOwnerDivision(terms);\n        if (id == null) {\n          setSelectedOwnerDivision(terms.filter((ele) => ele.value != 0));\n        }\n        let filteredOwnerData = [];\n        terms.forEach((data) => {\n          if (data.value != 0) {\n            filteredOwnerData.push(data.value);\n          }\n        });\n        setSearchdata((prevVal) => ({\n          ...prevVal,\n          [\"OwnerDivision\"]: filteredOwnerData.toString(),\n        }));\n      });\n  };\n\n  {\n    /*-------------------------Getting Csl List-------------------------*/\n  }\n  const getCustomerCSLList = async () => {\n    const resp = await axios.get(\n      dataAccess == 641 || dataAccess == 690 || dataAccess == 600\n        ? baseUrl + `/revenuemetricsms/RevenueMarginAnalysis/getCustomerCSLList`\n        : baseUrl + `/revenuemetricsms/RevenueMarginAnalysis/getCustomerCSLList`\n    );\n\n    let terms = [];\n    let data = resp.data;\n\n    data.length > 0 &&\n      data.forEach((e) => {\n        let termsObj = {\n          label: e.PersonName,\n          value: e.id,\n        };\n\n        terms.push(termsObj);\n\n        setCslList(terms);\n        if (id == null) {\n          setSelectedCslList(terms.filter((ele) => ele.value != 0));\n        }\n        let filteredCslList = [];\n        terms.forEach((data) => {\n          if (data.value != 0) {\n            filteredCslList.push(data.value);\n          }\n        });\n        setSearchdata((prevVal) => ({\n          ...prevVal,\n          [\"CslList\"]: filteredCslList.toString(),\n        }));\n      });\n  };\n\n  {\n    /*-------------------------Getting Delivery Partner List-------------------------*/\n  }\n  const getCustomerDelParatnerList = () => {\n    console.log(dataAccess);\n    // axios.get(\n    //   dataAccess == 690\n    //     ? baseUrl + `/CommonMS/master/getDP?loggedUserId=${loggedUserId}`\n    //     : baseUrl + `/administrationms/subkconversiontrend/getdeliverypartner`\n    // );\n    axios\n      .get(\n        dataAccess == 690 || dataAccess == 641 || dataAccess == 600\n          ? baseUrl + `/administrationms/subkconversiontrend/getdeliverypartner`\n          : baseUrl + `/administrationms/subkconversiontrend/getdeliverypartner`\n      )\n      .then(function (response) {\n        let terms = [];\n        let data = response.data;\n\n        data.length > 0 &&\n          data.forEach((e) => {\n            let termsObj = {\n              label: e.PersonName,\n              value: e.id,\n            };\n\n            terms.push(termsObj);\n\n            setDpList(terms);\n            if (id == null) {\n              setSelectedDpList(terms.filter((ele) => ele.value != 0));\n            }\n            let filteredDpList = [];\n            terms.forEach((data) => {\n              if (data.value != 0) {\n                filteredDpList.push(data.value);\n              }\n            });\n            setSearchdata((prevVal) => ({\n              ...prevVal,\n              [\"DpList\"]: filteredDpList.toString(),\n            }));\n          });\n      });\n  };\n\n  useEffect(() => {\n    if (\n      dataAccess == 641 ||\n      dataAccess == 690 ||\n      dataAccess == 930 ||\n      dataAccess == 600\n    ) {\n      getCustomerCSLList();\n      getCustomerDelParatnerList();\n      // getProjectdata();\n    }\n  }, [dataAccess]);\n\n  useEffect(() => {\n    getCustomerDelParatnerList();\n    getCustomerCSLList();\n    getSFOwnerDivisions();\n    getEngSalesExecutiveList();\n    getDepartments();\n    getCountries();\n    getMeasure();\n    getSortBy();\n    getContractTerms();\n    getEngCompany();\n    // getProjectdata();\n    getResourcesdata();\n    getCustIndustry();\n  }, []);\n  const HelpPDFName = \"MarginAnalysis.pdf\";\n  const Headername = \"Revenue Analysis Help\";\n  return (\n    <div>\n      {validationmessage ? (\n        <div className=\"statusMsg error\">\n          {\" \"}\n          <AiFillWarning /> Please select valid values for highlighted fields\n        </div>\n      ) : (\n        \"\"\n      )}\n      <div className=\"pageTitle\">\n        <div className=\"childOne\"></div>\n        <div className=\"childTwo\">\n          <h2>Revenue &amp; Margin Analysis</h2>\n        </div>\n        <div className=\"childThree\"></div>\n      </div>\n      {editmsg ? (\n        <div className=\"statusMsg success\">\n          <span className=\"errMsg\">\n            <BiCheck size=\"1.4em\" /> &nbsp; Search created successfully.\n          </span>\n        </div>\n      ) : (\n        \"\"\n      )}\n      <ScreenBreadcrumbs\n        routes={routes}\n        currentScreenName={currentScreenName}\n      />\n\n      <div className=\"group mb-3 customCard\">\n        <div className=\"col-md-12 collapseHeader\">\n          <h2>Search Filters</h2>\n          <div className=\"helpBtn\">\n            <GlobalHelp pdfname={HelpPDFName} name={Headername} />\n          </div>\n          <div className=\"saveBtn\">\n            <SavedSearchGlobal\n              setEditAddmsg={setEditAddmsg}\n              pageurl={pageurl}\n              page_Name={page_Name}\n              payload={searchdata}\n            />\n          </div>\n          &nbsp;\n          <div\n            onClick={() => {\n              setVisible(!visible);\n              visible\n                ? setCheveronIcon(FaChevronCircleUp)\n                : setCheveronIcon(FaChevronCircleDown);\n            }}\n          >\n            <span>{cheveronIcon}</span>\n          </div>\n        </div>\n\n        <CCollapse visible={!visible}>\n          <div className=\"group-content row\">\n            <div className=\" col-md-3 mb-2\">\n              <div className=\"form-group row\">\n                <label className=\"col-5\" htmlFor=\"Month\">\n                  Start Month{\" \"}\n                  <span className=\"required\">\n                    &nbsp;<span className=\"required error-text\">*</span>\n                  </span>\n                </label>\n                <span className=\"col-1\">:</span>\n                <div\n                  className=\"col-6 datepicker\"\n                  ref={(ele) => {\n                    ref.current[0] = ele;\n                  }}\n                >\n                  <DatePicker\n                    selected={month}\n                    id=\"month\"\n                    // onChange={(date) => setMonth(date)}\n                    onChange={(date) => {\n                      setMonth(date);\n                      setSearchdata((prev) => {\n                        return {\n                          ...prev,\n                          [\"month\"]: moment(date)\n                            .startOf(\"month\")\n                            .format(\"yyyy-MM-DD\"),\n                        };\n                      });\n                    }}\n                    onKeyDown={(e) => {\n                      e.preventDefault();\n                    }}\n                    dateFormat=\"MMM-yyyy\"\n                    showMonthYearPicker\n                    placeholderText=\"Start Month\"\n                  />\n                </div>\n              </div>\n            </div>\n            <div className=\" col-md-3 mb-2\">\n              <div className=\"form-group row\">\n                <label className=\"col-5\" htmlFor=\"duration\">\n                  Duration\n                  <span className=\"required\">\n                    &nbsp;<span className=\"required error-text\">*</span>\n                  </span>\n                </label>\n\n                <span className=\"col-1\">:</span>\n                <div className=\"col-6\">\n                  <select\n                    id=\"duration\"\n                    name=\"duration\"\n                    className=\"text\"\n                    onChange={handleChange}\n                    ref={(ele) => {\n                      ref.current[1] = ele;\n                    }}\n                    value={\n                      id !== null ? filterData.duration : searchdata.duration\n                    }\n                  >\n                    <option value=\"\">&lt;&lt;Please Select&gt;&gt;</option>\n                    <option value={1}>1</option>\n                    <option value={2}>2</option>\n                    <option value={3}>3</option>\n                    <option value={4}>4</option>\n                    <option value={5}>5</option>\n                    <option value={6}>6</option>\n                    <option value={7}>7</option>\n                    <option value={8}>8</option>\n                    <option value={9}>9</option>\n                    <option value={10}>10</option>\n                    <option value={11}>11</option>\n                    <option value={12}>12</option>\n                  </select>\n                </div>\n              </div>\n            </div>\n            <div className=\" col-md-3 mb-2\">\n              <div className=\"form-group row\">\n                <label className=\"col-5\" htmlFor=\"Seacrh Type\">\n                  Search Type\n                  <span className=\"required\">\n                    &nbsp;<span className=\"required error-text\">*</span>\n                  </span>\n                </label>\n                <span className=\"col-1\">:</span>\n                <div className=\"col-6\">\n                  {dataAccess == 911 ||\n                    dataAccess == 931 ||\n                    dataAccess == 908 ||\n                    dataAccess == 126 ? (\n                    <select\n                      id=\"searchType\"\n                      onChange={handleChange}\n                      name=\"searchType\"\n                      className=\"text\"\n                      ref={(ele) => {\n                        ref.current[2] = ele;\n                      }}\n                      value={searchdata.searchType}\n                    >\n                      <option value=\"\">&lt;&lt;Please Select&gt;&gt;</option>\n                      <option value=\"BusinessUnit\">Business Unit</option>\n                      <option value=\"Customer\">Customer</option>\n                      <option value=\"Project\">Project</option>\n                      <option value=\"Resource\">Resource</option>\n                      <option value=\"Sales Executive\">Sales Executive</option>\n                      <option value=\"CSL\">CSL</option>\n                      <option value=\"DP\">Delivery Partner</option>\n                      <option value=\"CustIndustry\">Customer Industry</option>\n                    </select>\n                  ) : dataAccess == 641 ? (\n                    <select\n                      id=\"searchType\"\n                      onChange={handleChange}\n                      name=\"searchType\"\n                      className=\"text\"\n                      ref={(ele) => {\n                        ref.current[2] = ele;\n                      }}\n                      value={searchdata.searchType}\n                    >\n                      <option value=\"\">&lt;&lt;Please Select&gt;&gt;</option>\n\n                      <option value=\"Customer\">Customer</option>\n                      <option value=\"Project\">Project</option>\n                      <option value=\"CSL\">CSL</option>\n                    </select>\n                  ) : dataAccess == 690 ? (\n                    <select\n                      id=\"searchType\"\n                      onChange={handleChange}\n                      name=\"searchType\"\n                      className=\"text\"\n                      ref={(ele) => {\n                        ref.current[2] = ele;\n                      }}\n                      value={searchdata.searchType}\n                    >\n                      <option value=\"\">&lt;&lt;Please Select&gt;&gt;</option>\n\n                      <option value=\"Customer\">Customer</option>\n                      <option value=\"Project\">Project</option>\n                      <option value=\"DP\">Delivery Partner</option>\n                    </select>\n                  ) : dataAccess == 930 ? (\n                    <select\n                      id=\"searchType\"\n                      onChange={handleChange}\n                      name=\"searchType\"\n                      className=\"text\"\n                      ref={(ele) => {\n                        ref.current[2] = ele;\n                      }}\n                      value={searchdata.searchType}\n                    >\n                      <option value=\"\">&lt;&lt;Please Select&gt;&gt;</option>\n\n                      <option value=\"Customer\">Customer</option>\n                      <option value=\"Project\">Project</option>\n                      <option value=\"Sales Executive\">Sales Executive</option>\n                    </select>\n                  ) : (\n                    <select\n                      id=\"searchType\"\n                      onChange={handleChange}\n                      name=\"searchType\"\n                      className=\"text\"\n                      ref={(ele) => {\n                        ref.current[2] = ele;\n                      }}\n                      value={searchdata.searchType}\n                    >\n                      <option value=\"\">&lt;&lt;Please Select&gt;&gt;</option>\n                      <option value=\"BusinessUnit\">Business Unit</option>\n                      <option value=\"Customer\">Customer</option>\n                      <option value=\"Project\">Project</option>\n                      <option value=\"Resource\">Resource</option>\n                      <option value=\"Sales Executive\">Sales Executive</option>\n                      <option value=\"CSL\">CSL</option>\n                      <option value=\"DP\">Delivery Partner</option>\n                      <option value=\"CustIndustry\">Customer Industry</option>\n                    </select>\n                  )}\n                </div>\n              </div>\n            </div>\n            <div className=\" col-md-3 mb-2\">\n              <div className=\"form-group row\"></div>\n            </div>\n            {selectType == \"CSL\" ? (\n              <div className=\" col-md-3 mb-2\">\n                <div className=\"form-group row\">\n                  <label className=\"col-5\" htmlFor=\"CSL\">\n                    CSL{\" \"}\n                    <span className=\"required\">\n                      &nbsp;<span className=\"required error-text\">*</span>\n                    </span>\n                  </label>\n                  <span className=\"col-1\">:</span>\n                  <div\n                    className=\"col-6 multiselect\"\n                    ref={(ele) => {\n                      ref.current[3] = ele;\n                    }}\n                  >\n                    <MultiSelect\n                      ArrowRenderer={ArrowRenderer}\n                      id=\"cslRes\"\n                      options={cslList}\n                      hasSelectAll={true}\n                      isLoading={false}\n                      shouldToggleOnHover={false}\n                      disableSearch={false}\n                      value={selectedCslList}\n                      disabled={false}\n                      onChange={(s) => {\n                        setSelectedCslList(s);\n                        let filteredValues = [];\n                        s.forEach((d) => {\n                          filteredValues.push(d.value);\n                        });\n\n                        setSearchdata((prevVal) => ({\n                          ...prevVal,\n                          [\"cslRes\"]: filteredValues.toString(),\n                        }));\n                      }}\n                      valueRenderer={generateDropdownLabel}\n                    />\n                  </div>\n                </div>\n              </div>\n            ) : (\n              \"\"\n            )}\n            {selectType == \"DP\" ? (\n              <div className=\" col-md-3 mb-2\">\n                <div className=\"form-group row\">\n                  <label className=\"col-5\" htmlFor=\"DP\">\n                    Delivery Partner{\" \"}\n                    <span className=\"required\">\n                      &nbsp;<span className=\"required error-text\">*</span>\n                    </span>\n                  </label>\n                  <span className=\"col-1\">:</span>\n                  <div\n                    className=\"col-6 multiselect\"\n                    ref={(ele) => {\n                      ref.current[3] = ele;\n                    }}\n                  >\n                    <MultiSelect\n                      ArrowRenderer={ArrowRenderer}\n                      id=\"dpRes\"\n                      options={dpList}\n                      hasSelectAll={true}\n                      isLoading={false}\n                      shouldToggleOnHover={false}\n                      disableSearch={false}\n                      value={selectedDpList}\n                      disabled={false}\n                      onChange={(s) => {\n                        setSelectedDpList(s);\n                        let filteredValues = [];\n                        s.forEach((d) => {\n                          filteredValues.push(d.value);\n                        });\n\n                        setSearchdata((prevVal) => ({\n                          ...prevVal,\n                          [\"dpRes\"]: filteredValues.toString(),\n                        }));\n                      }}\n                      valueRenderer={generateDropdownLabel}\n                    />\n                  </div>\n                </div>\n              </div>\n            ) : (\n              \"\"\n            )}\n            {selectType == \"Sales Executive\" ? (\n              <>\n                <div className=\" col-md-3 mb-2\">\n                  <div className=\"form-group row\">\n                    <label className=\"col-5\" htmlFor=\"Sales Executive\">\n                      Sales Executive{\" \"}\n                      <span className=\"required\">\n                        &nbsp;<span className=\"required error-text\">*</span>\n                      </span>\n                    </label>\n                    <span className=\"col-1\">:</span>\n                    <div\n                      className=\"col-6 multiselect\"\n                      ref={(ele) => {\n                        ref.current[3] = ele;\n                      }}\n                    >\n                      <MultiSelect\n                        ArrowRenderer={ArrowRenderer}\n                        id=\"salesExecs\"\n                        options={SalesExe.sort((a, b) =>\n                          a.label.localeCompare(b.label)\n                        )}\n                        hasSelectAll={true}\n                        isLoading={false}\n                        shouldToggleOnHover={false}\n                        disableSearch={false}\n                        value={selectedSalesExe}\n                        disabled={false}\n                        onChange={(s) => {\n                          setSelectedSalesExe(s);\n                          let filteredValues = [];\n                          s.forEach((d) => {\n                            filteredValues.push(d.value);\n                          });\n\n                          setSearchdata((prevVal) => ({\n                            ...prevVal,\n                            [\"salesExecs\"]: filteredValues.toString(),\n                          }));\n                        }}\n                        valueRenderer={generateDropdownLabel}\n                      />\n                    </div>\n                  </div>\n                </div>\n\n                <div className=\" col-md-3 mb-2\">\n                  <div className=\"form-group row\">\n                    <label className=\"col-5\" htmlFor=\"Owner Division\">\n                      Owner Division{\" \"}\n                      <span className=\"required\">\n                        &nbsp;<span className=\"required error-text\">*</span>\n                      </span>\n                    </label>\n                    <span className=\"col-1\">:</span>\n                    <div\n                      className=\"col-6 multiselect\"\n                      ref={(ele) => {\n                        ref.current[4] = ele;\n                      }}\n                    >\n                      <MultiSelect\n                        ArrowRenderer={ArrowRenderer}\n                        id=\"ownerDivisions\"\n                        options={ownerDivision}\n                        hasSelectAll={true}\n                        isLoading={false}\n                        shouldToggleOnHover={false}\n                        disableSearch={false}\n                        value={selectedOwnerDivision}\n                        disabled={false}\n                        onChange={(s) => {\n                          setSelectedOwnerDivision(s);\n                          let filteredValues = [];\n                          s.forEach((d) => {\n                            filteredValues.push(d.value);\n                          });\n\n                          setSearchdata((prevVal) => ({\n                            ...prevVal,\n                            [\"ownerDivisions\"]: filteredValues.toString(),\n                          }));\n                        }}\n                        valueRenderer={generateDropdownLabel}\n                      />\n                    </div>\n                  </div>\n                </div>\n              </>\n            ) : (\n              \"\"\n            )}\n\n            {(dataAccess == 911 &&\n              selectType != \"Customer\" &&\n              selectType != \"Project\" &&\n              selectType != \"Resource\" &&\n              selectType != \"Sales Executive\" &&\n              selectType != \"CustIndustry\") ||\n              (dataAccess == 908 &&\n                selectType != \"Customer\" &&\n                selectType != \"Project\" &&\n                selectType != \"Resource\" &&\n                selectType != \"Sales Executive\" &&\n                selectType != \"CustIndustry\") ||\n              (dataAccess == 910 &&\n                selectType != \"Customer\" &&\n                selectType != \"Project\" &&\n                selectType != \"Resource\" &&\n                selectType != \"Sales Executive\" &&\n                selectType != \"CustIndustry\") ||\n              (dataAccess == 126 &&\n                selectType != \"Customer\" &&\n                selectType != \"Project\" &&\n                selectType != \"Resource\" &&\n                selectType != \"Sales Executive\" &&\n                selectType != \"CustIndustry\") ? (\n              <div className=\" col-md-3 mb-2\">\n                <div className=\"form-group row\">\n                  <label className=\"col-5\" htmlFor=\"Business Unit\">\n                    Business Unit{\" \"}\n                    <span className=\"required\">\n                      &nbsp;<span className=\"required error-text\">*</span>\n                    </span>\n                  </label>\n                  <span className=\"col-1\">:</span>\n                  <div\n                    className=\"col-6 multiselect\"\n                    ref={(ele) => {\n                      ref.current[3] = ele;\n                    }}\n                  >\n                    <MultiSelect\n                      ArrowRenderer={ArrowRenderer}\n                      id=\"busUnits\"\n                      options={departments}\n                      hasSelectAll={true}\n                      isLoading={false}\n                      shouldToggleOnHover={false}\n                      disableSearch={false}\n                      value={selectedDepartments}\n                      disabled={false}\n                      onChange={(s) => {\n                        setSelectedDepartments(s);\n                        let filteredValues = [];\n                        s.forEach((d) => {\n                          filteredValues.push(d.value);\n                        });\n\n                        setSearchdata((prevVal) => ({\n                          ...prevVal,\n                          [\"busUnits\"]: filteredValues.toString(),\n                        }));\n                      }}\n                      valueRenderer={generateDropdownLabel}\n                    />\n                  </div>\n                </div>\n              </div>\n            ) : (\n              \"\"\n            )}\n            {selectType == \"Project\" ? (\n              <div className=\"col-md-3 mb-2\">\n                <div className=\"form-group row\">\n                  <label className=\"col-5\" htmlFor=\"email-input\">\n                    Project&nbsp;<span className=\"error-text ml-1\">*</span>\n                  </label>\n                  <span className=\"col-1 p-0\">:</span>\n                  <div className=\"col-6\">\n                    <div\n                      className=\"autoComplete-container react  reactsearchautocomplete\"\n                      ref={(ele) => {\n                        ref.current[3] = ele;\n                      }}\n                    >\n                      <ReactSearchAutocomplete\n                        items={project}\n                        inputSearchString={projectname}\n                        type=\"Text\"\n                        name=\"prjId\"\n                        id=\"prjId\"\n                        className=\"error AutoComplete\"\n                        onSelect={(e) => {\n                          setSearchdata((prevProps) => ({\n                            ...prevProps,\n                            prjId: e.id,\n                          }));\n                        }}\n                        showIcon={false}\n                        placeholder=\"Type minimum 3 characters\"\n                      />\n                    </div>\n                  </div>\n                </div>\n              </div>\n            ) : selectType == \"Resource\" ? (\n              <div className=\"col-md-3 mb-2\">\n                <div className=\"form-group row\">\n                  <label className=\"col-5\">Resource</label>\n                  <div className=\"col-1\">:</div>\n                  <div\n                    className=\"col-6\"\n                    name=\"Resource\"\n                    style={{ cursor: \"pointer\" }}\n                  >\n                    <span\n                      className=\"Resource poBtn\"\n                      onClick={() => setShowPopup(true)}\n                      style={{\n                        cursor: \"pointer\",\n                        display: \"flow-root\",\n                        /* text-overflow: ellipsis; */\n                        overflow: \"hidden\",\n                        whiteSpace: \"nowrap\",\n                        textOverflow: \"ellipsis\",\n                      }}\n                      title={data}\n                    >\n                      <HiUserAdd />\n                      {data}\n                    </span>\n                  </div>\n                </div>\n              </div>\n            ) : (\n              \"\"\n            )}\n            {selectType == \"Customer\" ? (\n              <>\n                <div className=\" col-md-3 mb-2\">\n                  <div className=\"form-group row\">\n                    <label className=\"col-5\" htmlFor=\"Customer\">\n                      Customer{\" \"}\n                      <span className=\"required\">\n                        &nbsp;<span className=\"required error-text\">*</span>\n                      </span>\n                    </label>\n                    <span className=\"col-1\">:</span>\n                    <div className=\"col-6\">\n                      {dataAccess == 690 ||\n                        dataAccess == 641 ||\n                        dataAccess == 930 ||\n                        dataAccess == 600 ||\n                        dataAccess == 500 ||\n                        dataAccess == 400 ? (\n                        <select\n                          id=\"customers\"\n                          name=\"customers\"\n                          onChange={handleCust}\n                          // defaultValue={-1}\n                          value={searchdata.customers}\n                        >\n                          {selectedItems.length + \"selected\"}\n                          <option value=\"\">\n                            {\" \"}\n                            &lt;&lt;Please Select&gt;&gt;\n                          </option>\n\n                          <option value=\"select\">Select</option>\n                        </select>\n                      ) : (\n                        <select\n                          id=\"customers\"\n                          name=\"customers\"\n                          onChange={handleCust}\n                          // defaultValue={-1}\n                          value={searchdata.customers}\n                        >\n                          {selectedItems.length + \"selected\"}\n                          <option value={-1}> &lt;&lt;All&gt;&gt;</option>\n                          <option value={0} selected>\n                            Active Customers\n                          </option>\n                          <option value=\"select\">Select</option>\n                        </select>\n                      )}\n                    </div>\n                  </div>\n                </div>\n\n                <div className=\" col-md-3 mb-2\">\n                  <div className=\"form-group row\">\n                    <label className=\"col-5\" htmlFor=\"Cust.Location\">\n                      Cust.Location{\" \"}\n                      <span className=\"required\">\n                        &nbsp;<span className=\"required error-text\">*</span>\n                      </span>\n                    </label>\n                    <span className=\"col-1\">:</span>\n                    <div\n                      className=\"col-6 multiselect\"\n                      ref={(ele) => {\n                        ref.current[selectType == \"Customer\" ? 4 : \"\"] = ele;\n                      }}\n                    >\n                      <MultiSelect\n                        ArrowRenderer={ArrowRenderer}\n                        id=\"custCountries\"\n                        name=\"custCountries\"\n                        options={engCustLocation}\n                        hasSelectAll={true}\n                        value={selectedCustCountry}\n                        disabled={false}\n                        onChange={(e) => {\n                          setSelectedCustCountry(e);\n                          let filteredCountry = [];\n                          e.forEach((d) => {\n                            filteredCountry.push(d.value);\n                          });\n                          setSearchdata((prevVal) => ({\n                            ...prevVal,\n                            [\"custCountries\"]: filteredCountry.toString(),\n                          }));\n                        }}\n                        valueRenderer={generateDropdownLabel}\n                      />\n                    </div>\n                  </div>\n                </div>\n\n                <div className=\" col-md-3 mb-2\">\n                  <div className=\"form-group row\">\n                    <label className=\"col-5\" htmlFor=\"Eng.Location\">\n                      Eng.Location{\" \"}\n                      <span className=\"required\">\n                        &nbsp;<span className=\"required error-text\">*</span>\n                      </span>\n                    </label>\n                    <span className=\"col-1\">:</span>\n                    <div\n                      className=\"col-6 multiselect\"\n                      ref={(ele) => {\n                        ref.current[selectType == \"Customer\" ? 5 : \"\"] = ele;\n                      }}\n                    >\n                      <MultiSelect\n                        ArrowRenderer={ArrowRenderer}\n                        id=\"engCountries\"\n                        name=\"engCountries\"\n                        options={engCustLocation}\n                        hasSelectAll={true}\n                        value={selectedEngCountry}\n                        disabled={false}\n                        onChange={(e) => {\n                          setSelectedEngCountry(e);\n                          let filteredCountry = [];\n                          e.forEach((d) => {\n                            filteredCountry.push(d.value);\n                          });\n                          setSearchdata((prevVal) => ({\n                            ...prevVal,\n                            [\"engCountries\"]: filteredCountry.toString(),\n                          }));\n                        }}\n                        valueRenderer={generateDropdownLabel}\n                      />\n                    </div>\n                  </div>\n                </div>\n              </>\n            ) : (\n              \"\"\n            )}\n            {selectType == \"CustIndustry\" ? (\n              <div className=\" col-md-3 mb-2\">\n                <div className=\"form-group row\">\n                  <label className=\"col-5\" htmlFor=\"Customer Industry\">\n                    Customer Industry{\" \"}\n                    <span className=\"required\">\n                      &nbsp;<span className=\"required error-text\">*</span>\n                    </span>\n                  </label>\n                  <span className=\"col-1\">:</span>\n                  <div\n                    className=\"col-6 multiselect\"\n                    ref={(ele) => {\n                      ref.current[3] = ele;\n                    }}\n                  >\n                    <MultiSelect\n                      ArrowRenderer={ArrowRenderer}\n                      id=\"indTypes\"\n                      options={custIndustry}\n                      hasSelectAll={true}\n                      isLoading={false}\n                      shouldToggleOnHover={false}\n                      disableSearch={false}\n                      value={selectedCustIndustry}\n                      disabled={false}\n                      onChange={(s) => {\n                        setSelectedCustIndustry(s);\n                        let filteredValues = [];\n                        s.forEach((d) => {\n                          filteredValues.push(d.value);\n                        });\n\n                        setSearchdata((prevVal) => ({\n                          ...prevVal,\n                          [\"indTypes\"]: filteredValues.toString(),\n                        }));\n                      }}\n                      valueRenderer={generateDropdownLabel}\n                    />\n                  </div>\n                </div>\n              </div>\n            ) : (\n              \"\"\n            )}\n            <div className=\" col-md-3 mb-2\">\n              <div className=\"form-group row\">\n                <label className=\"col-5\" htmlFor=\"resTyp\">\n                  Res.Type\n                  <span className=\"required\">\n                    &nbsp;<span className=\"required error-text\">*</span>\n                  </span>\n                </label>\n                <span className=\"col-1\">:</span>\n                <div className=\"col-6\">\n                  <select\n                    id=\"resTyp\"\n                    name=\"resTyp\"\n                    className=\"text\"\n                    onChange={handleChange}\n                    value={searchdata.resTyp}\n                  >\n                    <option value=\"-1\">&lt;&lt;All&gt;&gt;</option>\n                    <option value=\"subK\">Contractor</option>\n                    <option value=\"fte\">Employee</option>\n                  </select>\n                </div>\n              </div>\n            </div>\n            <div className=\" col-md-3 mb-2\">\n              <div className=\"form-group row\">\n                <label className=\"col-5\" htmlFor=\"Res.Location\">\n                  Res.Location{\" \"}\n                  <span className=\"required\">\n                    &nbsp;<span className=\"required error-text\">*</span>\n                  </span>\n                </label>\n                <span className=\"col-1\">:</span>\n                <div\n                  className=\"col-6 multiselect\"\n                  ref={(ele) => {\n                    ref.current[\n                      selectType == \"BusinessUnit\" ||\n                        selectType == \"Project\" ||\n                        selectType == \"CSL\" ||\n                        selectType == \"DP\" ||\n                        selectType == \"CustIndustry\"\n                        ? 4\n                        : selectType == \"Customer\"\n                          ? 6\n                          : selectType == \"Resource\"\n                            ? 2\n                            : selectType == \"Sales Executive\"\n                              ? 5\n                              : 3\n                    ] = ele;\n                  }}\n                >\n                  <MultiSelect\n                    ArrowRenderer={ArrowRenderer}\n                    id=\"countries\"\n                    name=\"countries\"\n                    options={country}\n                    hasSelectAll={true}\n                    value={selectedCountry}\n                    disabled={false}\n                    onChange={(e) => {\n                      setSelectedCountry(e);\n                      let filteredCountry = [];\n                      e.forEach((d) => {\n                        filteredCountry.push(d.value);\n                      });\n                      setSearchdata((prevVal) => ({\n                        ...prevVal,\n                        [\"countries\"]: filteredCountry.toString(),\n                      }));\n                    }}\n                    valueRenderer={generateDropdownLabel}\n                  />\n                </div>\n              </div>\n            </div>\n            {selectType == \"BusinessUnit\" ||\n              selectType == \"Customer\" ||\n              selectType == \"Project\" ? (\n              <>\n                <div className=\" col-md-3 mb-2\">\n                  <div className=\"form-group row\">\n                    <label className=\"col-5\" htmlFor=\"Contract Terms\">\n                      Contract Terms{\" \"}\n                      <span className=\"required\">\n                        &nbsp;<span className=\"required error-text\">*</span>\n                      </span>\n                    </label>\n                    <span className=\"col-1\">:</span>\n                    <div\n                      className=\"col-6 multiselect\"\n                      ref={(ele) => {\n                        ref.current[\n                          selectType == \"BusinessUnit\" ||\n                            selectType == \"Project\"\n                            ? 5\n                            : selectType == \"Customer\"\n                              ? 7\n                              : \"\"\n                        ] = ele;\n                      }}\n                    >\n                      <MultiSelect\n                        ArrowRenderer={ArrowRenderer}\n                        id=\"contTerms\"\n                        name=\"contTerms\"\n                        options={contractTerms}\n                        hasSelectAll={true}\n                        isLoading={false}\n                        shouldToggleOnHover={false}\n                        disableSearch={false}\n                        value={selectedContractTerms}\n                        disabled={false}\n                        onChange={(s) => {\n                          setSelectedContractTerms(s);\n                          let filteredValues = [];\n                          s.forEach((d) => {\n                            filteredValues.push(d.value);\n                          });\n\n                          setSearchdata((prevVal) => ({\n                            ...prevVal,\n                            [\"contTerms\"]: filteredValues.toString(),\n                          }));\n                        }}\n                        valueRenderer={generateDropdownLabel}\n                      />\n                    </div>\n                  </div>\n                </div>\n                <div className=\" col-md-3 mb-2\">\n                  <div className=\"form-group row\">\n                    <label className=\"col-5\" htmlFor=\"Eng.Company\">\n                      Eng.Company{\" \"}\n                      <span className=\"required\">\n                        &nbsp;<span className=\"required error-text\">*</span>\n                      </span>\n                    </label>\n                    <span className=\"col-1\">:</span>\n                    <div\n                      className=\"col-6 multiselect\"\n                      ref={(ele) => {\n                        ref.current[\n                          selectType == \"BusinessUnit\" ||\n                            selectType == \"Project\"\n                            ? 6\n                            : selectType == \"Customer\"\n                              ? 8\n                              : \"\"\n                        ] = ele;\n                      }}\n                    >\n                      <MultiSelect\n                        ArrowRenderer={ArrowRenderer}\n                        id=\"engComp\"\n                        name=\"engComp\"\n                        options={engCompany}\n                        hasSelectAll={true}\n                        isLoading={false}\n                        shouldToggleOnHover={false}\n                        disableSearch={false}\n                        value={selectedEngCompany}\n                        disabled={false}\n                        onChange={(s) => {\n                          setSelectedEngCompany(s);\n                          let filteredValues = [];\n                          s.forEach((d) => {\n                            filteredValues.push(d.value);\n                          });\n\n                          setSearchdata((prevVal) => ({\n                            ...prevVal,\n                            [\"engComp\"]: filteredValues.toString(),\n                          }));\n                        }}\n                        valueRenderer={generateDropdownLabel}\n                      />\n                    </div>\n                  </div>\n                </div>\n              </>\n            ) : (\n              \"\"\n            )}\n            <div className=\" col-md-3 mb-2\">\n              <div className=\"form-group row\">\n                <label className=\"col-5\" htmlFor=\"Measures\">\n                  Measures{\" \"}\n                  <span className=\"required\">\n                    &nbsp;<span className=\"required error-text\">*</span>\n                  </span>\n                </label>\n                <span className=\"col-1\">:</span>\n                <div\n                  className=\"col-6 multiselect\"\n                  ref={(ele) => {\n                    ref.current[\n                      selectType == \"BusinessUnit\" || selectType == \"Project\"\n                        ? 7\n                        : selectType == \"Customer\"\n                          ? 9\n                          : selectType == \"Resource\"\n                            ? 3\n                            : selectType == \"Sales Executive\"\n                              ? 6\n                              : selectType == \"CSL\" ||\n                                selectType == \"DP\" ||\n                                selectType == \"CustIndustry\"\n                                ? 5\n                                : 4\n                    ] = ele;\n                  }}\n                >\n                  <MultiSelect\n                    ArrowRenderer={ArrowRenderer}\n                    id=\"measures\"\n                    name=\"measures\"\n                    options={measures.sort((a, b) =>\n                      a.label.localeCompare(b.label)\n                    )}\n                    hasSelectAll={true}\n                    isLoading={false}\n                    shouldToggleOnHover={false}\n                    disableSearch={false}\n                    value={selectedMeasures}\n                    disabled={false}\n                    onChange={(s) => {\n                      setSelectedMeasures(s);\n                      let filteredValues = [];\n                      s.forEach((d) => {\n                        filteredValues.push(d.value);\n                      });\n\n                      setSearchdata((prevVal) => ({\n                        ...prevVal,\n                        [\"measures\"]: filteredValues.toString(),\n                      }));\n                    }}\n                    valueRenderer={generateDropdownLabel}\n                  />\n                </div>\n              </div>\n            </div>\n            {selectType == \"Customer\" ||\n              selectType == \"Project\" ||\n              selectType == \"Sales Executive\" ||\n              selectType == \"CSL\" ||\n              selectType == \"DP\" ||\n              selectType == \"CustIndustry\" ? (\n              <>\n                <div className=\" col-md-3 mb-2\">\n                  <div className=\"form-group row\">\n                    <label className=\"col-5\" htmlFor=\"Source\">\n                      Source{\" \"}\n                      <span className=\"required\">\n                        &nbsp;<span className=\"required error-text\">*</span>\n                      </span>\n                    </label>\n                    <span className=\"col-1\">:</span>\n                    <div className=\"col-6\">\n                      <select\n                        id=\"source\"\n                        name=\"source\"\n                        defaultValue={searchdata?.source}\n                        onChange={handleChange}\n                      >\n                        <option value={-1}>&lt;&lt;All&gt;&gt;</option>\n                        <option value=\"PPM\">PPM</option>\n                        <option value=\"Projector\">Projector</option>\n                      </select>\n                    </div>\n                  </div>\n                </div>\n              </>\n            ) : (\n              \"\"\n            )}\n            <div className=\" col-md-3 mb-2\">\n              <div className=\"form-group row\">\n                <label className=\"col-5\" htmlFor=\"Sort By\">\n                  Sort By\n                  <span className=\"required\">\n                    &nbsp;<span className=\"required error-text\">*</span>\n                  </span>\n                </label>\n                <span className=\"col-1\">:</span>\n                <div className=\"col-6\">\n                  <select\n                    onChange={handleChange}\n                    name=\"sortBy\"\n                    id=\"sortBy\"\n                    value={searchdata.sortBy}\n                  >\n                    <option value=\"-1\">Default</option>\n                    {selectedMeasures.map((Item) => (\n                      <option value={Item.value}> {Item.label}</option>\n                    ))}\n                  </select>\n                </div>\n              </div>\n            </div>\n            <div className=\"col-md-12 btn-container center my-3\">\n              <button\n                type=\"submit\"\n                className=\"btn btn-primary\"\n                onClick={() => {\n                  handleSearch();\n                }}\n              >\n                <FaSearch /> Search{\" \"}\n              </button>\n              {loader ? <Loader handleAbort={handleAbort} /> : \"\"}\n            </div>\n          </div>\n        </CCollapse>\n        {displayTableState &&\n          (selectType == \"BusinessUnit\" ? (\n            <MarginAnalysisTable\n              searchdata={searchdata}\n              tableData={tableData}\n              column={tableKeys}\n              selectType={selectType}\n              month={month}\n              departments={departments}\n              customer={customer}\n              resources={resources}\n              project={project}\n              sortBy={sortBy}\n              laterMeasureLabel={laterMeasureLabel}\n              defaultMeasureLabel={defaultMeasureLabel}\n            />\n          ) : selectType == \"CustIndustry\" ? (\n            <MarginAnalysisCustIndustry\n              searchdata={searchdata}\n              tableData={tableData}\n              column={tableKeys}\n              selectType={selectType}\n              month={month}\n              customer={customer}\n              resources={resources}\n              project={project}\n              custIndustry={custIndustry}\n              sortBy={sortBy}\n              laterMeasureLabel={laterMeasureLabel}\n              defaultMeasureLabel={defaultMeasureLabel}\n            />\n          ) : selectType == \"DP\" ? (\n            <MarginAnalysisDP\n              searchdata={searchdata}\n              tableData={tableData}\n              column={tableKeys}\n              selectType={selectType}\n              month={month}\n              customer={customer}\n              resources={resources}\n              project={project}\n              dpList={dpList}\n              sortBy={sortBy}\n              laterMeasureLabel={laterMeasureLabel}\n              defaultMeasureLabel={defaultMeasureLabel}\n            />\n          ) : selectType == \"CSL\" ? (\n            <MarginAnalysisCSL\n              searchdata={searchdata}\n              tableData={tableData}\n              column={tableKeys}\n              selectType={selectType}\n              month={month}\n              customer={customer}\n              resources={resources}\n              project={project}\n              cslList={cslList}\n              sortBy={sortBy}\n              laterMeasureLabel={laterMeasureLabel}\n              defaultMeasureLabel={defaultMeasureLabel}\n            />\n          ) : selectType == \"Sales Executive\" ? (\n            <MarginAnalysisSE\n              searchdata={searchdata}\n              tableData={tableData}\n              column={tableKeys}\n              selectType={selectType}\n              month={month}\n              customer={customer}\n              resources={resourceData}\n              project={project}\n              SalesExe={SalesExe}\n              sortBy={sortBy}\n              selectedCust={selectedCust}\n              laterMeasureLabel={laterMeasureLabel}\n              defaultMeasureLabel={defaultMeasureLabel}\n            />\n          ) : selectType == \"Customer\" ? (\n            <MarginAnalysisCustomer\n              searchdata={searchdata}\n              tableData={tableData}\n              column={tableKeys}\n              selectType={selectType}\n              month={month}\n              customer={customer}\n              resources={resourceData}\n              project={project}\n              departments={departments}\n              sortBy={sortBy}\n              selectedCust={selectedCust}\n              laterMeasureLabel={laterMeasureLabel}\n              defaultMeasureLabel={defaultMeasureLabel}\n            />\n          ) : selectType == \"Project\" ? (\n            <MarginAnalysisProject\n              searchdata={searchdata}\n              tableData={tableData}\n              column={tableKeys}\n              selectType={selectType}\n              month={month}\n              resources={resourceData}\n              project={project}\n              sortBy={sortBy}\n              laterMeasureLabel={laterMeasureLabel}\n              defaultMeasureLabel={defaultMeasureLabel}\n            />\n          ) : selectType == \"Resource\" ? (\n            <MarginAnalysisResource\n              searchdata={searchdata}\n              tableData={tableData}\n              column={tableKeys}\n              selectType={selectType}\n              month={month}\n              resourceData={resourceData}\n              sortBy={sortBy}\n              laterMeasureLabel={laterMeasureLabel}\n              defaultMeasureLabel={defaultMeasureLabel}\n            />\n          ) : (\n            \"\"\n          ))}\n      </div>\n      <SelectCustDialogBox\n        visible={custVisible}\n        setVisible={setCustVisible}\n        setSelectedItems={setSelectedItems}\n        selectedItems={selectedItems}\n        flag={flag}\n        dataAccess={dataAccess}\n      />\n      {showPopup ? (\n        <MarginAnalysisPopUp\n          showPopup={showPopup}\n          setShowPopup={setShowPopup}\n          setSelectedResource={setSelectedResource}\n          setResName={setData}\n        />\n      ) : (\n        \"\"\n      )}\n    </div>\n  );\n}\n\nexport default MarginAnalysis;\n"],"names":["props","tableData","column","departments","selectType","month","searchdata","project","customer","resources","sortBy","laterMeasureLabel","defaultMeasureLabel","baseUrl","environment","abortController","useRef","useState","loader","setLoader","name","kpi","dates","slice","sort","adjustedColumn","data","setData","nodes","setNodes","useEffect","id","i","length","jsonToTree","Data","moment","startOf","format","flatArray","options","parentId","children","dictionary","tree","forEach","node","nodeId","nodeParentId","push","Object","values","obj","dynamicColumns","header","className","accessorKey","enableGrouping","GroupedCell","cell","custBU","projBU","custId","resBU","projectID","custprojectId","department","find","dep","label","getValue","activeIcons","setActiveIcons","handleClick","value","some","includes","prevActiveIcons","prevNodes","filter","objId","objLabel","innerColumn","console","log","current","AbortController","loaderTime","setTimeout","axios","method","url","ownerDivisions","duration","countries","searchType","busUnits","customers","selectedCust","srcType","srcTypeId","tarType","busUnitId","prjId","resId","measures","salesExecId","salesExecs","custCountries","source","resTyp","engCountries","contTerms","engComp","cslRes","cslResId","dpRes","dpResId","indTypes","indTypesId","signal","then","res","clearTimeout","respData","item","map","grossMarginIndex","findIndex","descr","Item","split","catch","e","HandleInsertedData","cust","fullName","activeIcons1","setActiveIcons1","handleClick1","HandleInsertedData1","proj","activeIcons2","setActiveIcons2","handleClick2","HandleInsertedData2","fullNameParts","cellValueParts","every","activeIcons3","setActiveIcons3","handleClick3","HandleInsertedData3","isActive","style","cursor","onClick","row","original","count","title","isActive1","isActive2","isActive3","display","justifyContent","Cell","index","Date","toLocaleDateString","year","replace","currentDate","greenDate","float","toLocaleString","columnIndex","newColumn","splice","align","size","color","ExcelJS","workbook","Workbook","worksheet","addWorksheet","desiredColumnOrder","colA","colB","yearA","monthA","yearB","monthB","parseInt","wantedValues","concat","col","extractedValue","undefined","keys","key","isNaN","formatHeaderKey","match","dateStr","monthName","formatMMMYYYY","headerRow","filteredValues","unshift","rows","addRow","rowIndex","getRow","font","bold","nameColumnIndex","indexOf","mergeStartIndex","currentName","rowName","mergeCells","xlsx","writeBuffer","buffer","saveAs","Blob","columns","enableExpanding","enableRowVirtualization","enablePagination","enableGlobalFilter","enableDensityToggle","enableFullScreenToggle","enableHiding","enableColumnFilters","enableBottomToolbar","enableTopToolbar","enableColumnActions","enableSorting","filterFromLeafRows","initialState","showGlobalFilter","grouping","expanded","density","columnPinning","right","muiTableContainerProps","muiTableBodyProps","sx","borderRight","borderBottom","height","padding","muiTableHeadProps","borderTop","background","Loader","handleAbort","abort","custIndustry","trim","dpList","cslList","SalesExe","ui","full_name","part","activeCustomers","firstValueWords","secondValueWords","word","showPopup","setShowPopup","setSelectedResource","setResName","nodeClicked","setNodeClicked","validation","setValidation","visible","alignment","onClose","backdrop","MarginAnalysisHierarchy","type","resourceData","isDataPresent","setCustomer","setVisible","FaChevronCircleUp","cheveronIcon","setCheveronIcon","setMonth","setDepartments","selectedDepartments","setSelectedDepartments","setCustIndustry","selectedCustIndustry","setSelectedCustIndustry","country","setCountry","engCustLocation","setEngCustLocation","selectedCountry","setSelectedCountry","selectedCustCountry","setSelectedCustCountry","selectedEngCountry","setSelectedEngCountry","setMeasures","selectedMeasures","setSelectedMeasures","contractTerms","setContractTerms","selectedContractTerms","setSelectedContractTerms","setSalesExe","selectedSalesExe","setSelectedSalesExe","ownerDivision","setOwnerDivision","selectedOwnerDivision","setSelectedOwnerDivision","engCompany","setEngCompany","selectedEngCompany","setSelectedEngCompany","setCslList","selectedCslList","setSelectedCslList","setDpList","selectedDpList","setSelectedDpList","setSortBy","setSelectType","setProject","setResources","validationmessage","setValidationMessage","displayTableState","setDisplayTableState","ref","setTableData","tableKeys","setTableKeys","dataAccess","setDataAccess","setData2","custVisible","setCustVisible","selectedResource","projectname","setProjectName","generateDropdownLabel","selectedOptions","allOptions","selectedValues","option","allValues","join","ArrowRenderer","setResourceData","response","resp","err","filteredData","parent_id","parentItem","setSearchdata","prev","sortedKeys","a","b","dateA","dateB","formattedDateA","formattedDateB","localeCompare","setMultiRoles","location","useLocation","URLSearchParams","search","get","editmsg","setEditAddmsg","filterData","setFilterData","loggedUserId","localStorage","getItem","Number","routes","setRoutes","getMenus","getData","menu","subMenus","subMenu","display_name","marginSubMenu","userRoles","accessLevel","prevData","updatebusiness","updatecountry","updatecontractTerms","updateengCompany","updatemeasures","updatecustenglocation","updateengCustLocation","updateselecttype","updateprojectname","projectnamedata","JSON","stringify","updateSalesExecutive","progressDataDivisions","divisionsToFilter","updateDivisionsdata","updatecslList","updatedpList","updatecustIndustry","ResourceName","updatedate","parseISO","handleSearch","handleChange","target","selectedItems","setSelectedItems","d","toString","parse","handleCust","selectedLabels","measure","laterMeasures","lastLaterMeasure","findLaterMeasureLabel","firstSelectedMeasure","DefaultMeasureLabel","valid","GlobalValidation","poBtnElement","document","querySelector","FaChevronCircleDown","getDepartments","ele","filteredDeptData","prevVal","getCustIndustry","countryList","getMeasure","measuresObj","filteredMeasuresData","getContractTerms","terms","termsObj","filteredContractTermData","getEngCompany","EngComp","EngCompObj","filteredEngCompany","filteredEngComp","getEngSalesExecutiveList","sE","SalesObj","salesPersonName","sEE","nameA","toUpperCase","nameB","filteredSalesExeData","getSFOwnerDivisions","owner_division","filteredOwnerData","getCustomerCSLList","PersonName","filteredCslList","getCustomerDelParatnerList","filteredDpList","Response","countryObj","country_name","sortedcities","engCustCountries","ScreenBreadcrumbs","currentScreenName","GlobalHelp","pdfname","SavedSearchGlobal","pageurl","page_Name","payload","htmlFor","selected","onChange","date","onKeyDown","preventDefault","dateFormat","showMonthYearPicker","placeholderText","hasSelectAll","isLoading","shouldToggleOnHover","disableSearch","disabled","s","valueRenderer","ReactSearchAutocomplete","items","inputSearchString","onSelect","prevProps","showIcon","placeholder","overflow","whiteSpace","textOverflow","filteredCountry","defaultValue","SelectCustDialogBox","flag"],"sourceRoot":""}