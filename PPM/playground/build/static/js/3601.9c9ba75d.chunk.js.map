{"version":3,"file":"static/js/3601.9c9ba75d.chunk.js","mappings":"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","sources":["views/RevenueMetrices/RevenueByIndustrySecondTable.js","views/RevenueMetrices/RevenueIndustryCollapsibleTable.js","views/RevenueMetrices/RevenueIndustry.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport { FilterMatchMode, FilterOperator } from \"primereact/api\";\nimport { DataTable } from \"primereact/datatable\";\nimport \"primeicons/primeicons.css\";\nimport \"primereact/resources/themes/lara-light-indigo/theme.css\";\nimport \"primereact/resources/primereact.css\";\nimport \"primeflex/primeflex.css\";\nimport { InputText } from \"primereact/inputtext\";\nimport \"./RevenueIndustrySecondTable.scss\";\n\nfunction RevenueByIndustrySecondTable(props) {\n  const {\n    data,\n    rows,\n    col,\n    headerdatagroup,\n    linkColumns,\n    linkColumnsRoutes,\n    dynamicColumns,\n    headerData,\n    setHeaderData,\n    exportData,\n    customFilters,\n    customFilterValue,\n    setCustomFilterValue,\n  } = props;\n  const [mainData, setMainData] = useState([]);\n  const [bodyData, setBodyData] = useState([]);\n  console.log(bodyData, \"bodyData\");\n  const [exportColumns, setExportColumns] = useState([]);\n  const dt = useRef(null);\n  useEffect(() => {\n    setMainData(JSON.parse(JSON.stringify(data)));\n  }, [data]);\n\n  useEffect(() => {\n    if (mainData.length > 0) {\n      setHeaderData(mainData[0]);\n      setBodyData(mainData.splice(1));\n\n      let dtt = [];\n      let headDt = mainData[0];\n\n      Object.keys(headDt).forEach((d) => {\n        dtt.push({ title: d, dataKey: headDt[d] });\n      });\n\n      setExportColumns(dtt);\n    }\n  }, [mainData]);\n\n  const filtersData = {\n    contains: { value: null, matchMode: FilterMatchMode.CONTAINS },\n  };\n\n  const [filters1, setFilters1] = useState({\n    global: filtersData[\"contains\"],\n  });\n\n  useEffect(() => {\n    setFilters1({\n      global: filtersData[\"contains\"],\n    });\n  }, [headerData]);\n  const [globalFilterValue1, setGlobalFilterValue1] = useState(\"\");\n\n  const clearFilter1 = () => {\n    initFilters1();\n  };\n\n  const initFilters1 = () => {\n    setGlobalFilterValue1(\"\");\n  };\n\n  const onGlobalFilterChange1 = (e) => {\n    const value = e.target.value;\n    let _filters1 = { ...filters1 };\n    _filters1[\"global\"].value = value;\n    setFilters1(_filters1);\n    setGlobalFilterValue1(value);\n  };\n\n  const RenderCustomFilters = () => {\n    let cstFtlrs = customFilters;\n\n    switch (cstFtlrs[\"type\"]) {\n      case \"select\":\n        return (\n          <select\n            id={cstFtlrs[\"id\"]}\n            onChange={(e) => {\n              setCustomFilterValue(e.target.value);\n            }}\n          >\n            {Object.keys(cstFtlrs[\"data\"]).map((d) => {\n              return (\n                <option\n                  selected={customFilterValue == d ? true : false}\n                  value={d}\n                >\n                  {cstFtlrs[\"data\"][d]}\n                </option>\n              );\n            })}\n          </select>\n        );\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const exportCSV = (selectionOnly) => {\n    dt.current.exportCSV({ selectionOnly });\n  };\n  const saveAsExcelFile = (buffer, fileName) => {\n    import(\"file-saver\").then((module) => {\n      if (module && module.default) {\n        let EXCEL_TYPE =\n          \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8\";\n        let EXCEL_EXTENSION = \".xlsx\";\n        const data1 = new Blob([buffer], { type: EXCEL_TYPE });\n        module.default.saveAs(\n          data1,\n          fileName + \"_export_\" + new Date().getTime() + EXCEL_EXTENSION\n        );\n      }\n    });\n  };\n  const exportExcel = () => {\n    import(\"xlsx\").then((xlsx) => {\n      const worksheet = xlsx.utils.json_to_sheet(data);\n      const workbook = { Sheets: { data: worksheet }, SheetNames: [\"data\"] };\n      const excelBuffer = xlsx.write(workbook, {\n        bookType: \"xlsx\",\n        type: \"array\",\n      });\n      saveAsExcelFile(excelBuffer, \"data\");\n    });\n  };\n  const exportPdf = () => {\n    import(\"jspdf\").then((jsPDF) => {\n      import(\"jspdf-autotable\").then(() => {\n        const doc = new jsPDF.default(0, 0);\n        doc.autoTable(exportColumns, data);\n        doc.save(\"Data.pdf\");\n      });\n    });\n  };\n  const renderHeader1 = () => {\n    return (\n      <>\n        <div className=\"flex  flex-row\">\n          <span\n            style={{ paddingTop: \"3px\", fontSize: \"13px\", color: \"#4f8fad\" }}\n          >\n            Customer Ranking By Revenue\n          </span>\n          <div\n            className=\"flex  flex-row-reverse \"\n            style={{ paddingLeft: \"44%\" }}\n          >\n            {customFilters != undefined && (\n              <span>\n                <RenderCustomFilters />\n              </span>\n            )}\n\n            <div className=\"exportBtn ml-3\">\n              {exportData?.includes(\"CSV\") && (\n                <span\n                  className=\"pi pi-file csv\"\n                  onClick={() => exportCSV(false)}\n                  title=\"CSV\"\n                />\n              )}\n              {exportData?.includes(\"XLS\") && (\n                <span\n                  className=\"pi pi-file-excel excel\"\n                  onClick={exportExcel}\n                  title=\"XLS\"\n                />\n              )}\n              {exportData?.includes(\"PDF\") && (\n                <span\n                  className=\"pi pi-file-pdf pdf\"\n                  onClick={exportPdf}\n                  title=\"PDF\"\n                />\n              )}\n            </div>\n            <span className=\"p-input-icon-left tableGsearch\">\n              <i className=\"pi pi-search\" />\n              <InputText\n                defaultValue={globalFilterValue1}\n                onChange={onGlobalFilterChange1}\n                placeholder=\"Keyword Search\"\n              />\n            </span>\n          </div>\n        </div>\n      </>\n    );\n  };\n\n  const header1 = renderHeader1();\n\n  return (\n    <div>\n      <div className=\"darkHeader toHead\">\n        {Object.keys(headerData).length > 0 && (\n          <DataTable\n            className=\"primeReactDataTable\"\n            value={bodyData}\n            paginator\n            showGridlines\n            rows={rows}\n            dataKey=\"id\"\n            filters={filters1}\n            responsiveLayout=\"scroll\"\n            header={header1}\n            emptyMessage=\"No Records found.\"\n            ref={(el) => {\n              dt.current = el;\n            }}\n            currentPageReportTemplate=\"View {first} - {last} of {totalRecords} \"\n            paginatorTemplate=\"RowsPerPageDropdown FirstPageLink PrevPageLink CurrentPageReport NextPageLink LastPageLink\"\n            rowsPerPageOptions={[5, 10, 15, 20, 25, 30, 35, 40]}\n            paginationPerPage={5}\n            paginationRowsPerPageOptions={[5, 15, 25, 50]}\n            paginationComponentOptions={{\n              rowsPerPageText: \"Records per page:\",\n              rangeSeparatorText: \"out of\",\n            }}\n          >\n            {dynamicColumns}\n          </DataTable>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default RevenueByIndustrySecondTable;\n","import React, { useState, useEffect, useMemo } from \"react\";\nimport MaterialReactTable from \"material-react-table\";\nimport { Button, IconButton } from \"@mui/material\";\n\nimport { AiFillRightCircle } from \"react-icons/ai\";\nimport { CListGroup } from \"@coreui/react\";\nimport { GoPerson } from \"react-icons/go\";\nimport \"./RevenueIndustryCollapsibleTable.scss\";\nimport { CellComp } from \"ag-grid-community\";\nexport default function RevenueIndustryCollapsibleTable(props) {\n  const { data, expandedCols, colExpandState } = props;\n\n  const [nodes, setNodes] = useState([]);\n  const [columns, setColumns] = useState(null);\n  const [hiddenColumns, setHiddenColumns] = useState({});\n  const [colExpFlag, setColumnExpFlag] = useState(false);\n  const [headers, setHeaders] = useState([]);\n  let newHeaders = [];\n  let summaryHeaders = [];\n\n  const numberWithCommas = (x) => {\n    return x?.toString().replace(/\\B(?<!\\.\\d*)(?=(\\d{3})+(?!\\d))/g, \",\");\n  };\n\n  useEffect(() => {\n    getData();\n  }, [data]);\n\n  const getData = () => {\n    let tableData = data?.tableData;\n    let columns = null;\n\n    if (data?.columns?.includes(\"'\")) {\n      columns = data?.columns?.replaceAll(\"'\", \"\");\n    } else {\n      columns = data?.columns;\n    }\n\n    let colArr = columns?.split(\",\");\n\n    let hiddenHeaders = [];\n\n    const obj = {};\n\n    for (let i = 0; i < colArr?.length; i++) {\n      let colVal = colArr[i].trim();\n\n      let firstData = tableData[0];\n      obj[colVal] = firstData[colVal];\n    }\n    let headerArray = Object.entries(obj);\n\n    // =====================removing unwanted headers==============================\n\n    let unWantedCols = [\n      \"id\",\n      \"industryId\",\n      \"industry\",\n      \"customerId\",\n      \"customer\",\n      \"lvl\",\n      \"keyAttr\",\n      \"parentAttr\",\n      \"total_rr_sort\",\n    ];\n    let filteredHeaders = headerArray.filter(\n      (d) =>\n        !unWantedCols.includes(d[0]) &&\n        !d[0]?.includes(\"gmperc\") &&\n        !d[0]?.includes(\"rr\")\n    );\n\n    // ======================================================================================\n\n    setHeaders(filteredHeaders);\n\n    filteredHeaders.map(([key, value]) => {\n      if (expandedCols.includes(key)) {\n        hiddenHeaders.push({ [key]: false });\n      }\n    });\n\n    setHiddenColumns(Object.assign({}, ...hiddenHeaders));\n\n    let minusOneRoww = tableData?.filter((d) => d.id == -1);\n    let summaryRow = tableData?.filter((d) => d.id == 0);\n\n    filteredHeaders.map(([key, value], index) => {\n      newHeaders.push({\n        accessorKey: key,\n        header: value,\n        enableColumnActions: false,\n        enableHiding: true,\n        Header: ({ column }) => (\n          <div className={key.includes(\"dispName\") && \"mixer\"}>\n            {value}\n            {key == colExpandState[2] ? (\n              <IconButton\n                onClick={() => {\n                  setColumnExpFlag((prev) => !prev);\n                }}\n              >\n                <AiFillRightCircle />\n              </IconButton>\n            ) : null}\n          </div>\n        ),\n      });\n    });\n\n    let subHeaders = minusOneRoww ? Object.entries(minusOneRoww[0]) : null;\n    summaryHeaders = summaryRow ? Object.entries(summaryRow[0]) : null;\n\n    subHeaders?.sort();\n    summaryHeaders?.sort();\n\n    newHeaders.map((data) => {\n      let i = newHeaders.indexOf(data);\n      let subArray = [];\n      subHeaders.map(([key, value], index) => {\n        let a = /\\d/.test(key.split(\"_\")[0]);\n\n        if (\n          (key.includes(\"_\") &&\n            (a == true || (a == false && key.split(\"_\")[0] == \"total\"))) ||\n          (a == false && key.includes(\"action\"))\n        ) {\n          let subkey = key.includes(\"action\") ? \"action\" : key.split(\"_\");\n          subkey = key.includes(\"action\")\n            ? \"action\"\n            : subkey.slice(0, -1).join(\"_\");\n          if (data.accessorKey.includes(subkey)) {\n            let obj = {\n              id: key,\n              header: value == null || value == 0 ? \"\" : value,\n              accessorKey: key,\n              enableSorting: true,\n              sortDescFirst:\n                key.includes(\"rr\") && !key.includes(\"perc\") ? true : false,\n            };\n            subArray.push(obj);\n            newHeaders[i].columns = subArray;\n          }\n        } else {\n          if (key == data.accessorKey) {\n            let obj = {\n              id: key,\n              header: value == null || value == 0 ? \"\" : value,\n              accessorKey: key,\n              enableSorting: true,\n              sortDescFirst:\n                key.includes(\"rr\") && !key.includes(\"perc\") ? true : false,\n            };\n            newHeaders[i].columns = [obj];\n          }\n        }\n      });\n    });\n\n    const renderValue = (value, key) => {\n      return (\n        <div title={numberWithCommas(value)}>\n          <div className=\"ParentExpandedTxt\">\n            {key.includes(\"gmperc\") ? (\n              <b className=\"RevByIndustryFonts\">\n                {numberWithCommas(value) + \"%\"}\n              </b>\n            ) : key.includes(\"rrperc\") ? (\n              <b className=\"RevByIndustryFonts\">\n                {numberWithCommas(value) + \"%\"}\n              </b>\n            ) : key.includes(\"gmperc\") || key.includes(\"rrperc\") ? (\n              numberWithCommas(value) + \"%\"\n            ) : key == \"dispName\" && value == \"Summary\" ? (\n              <b className=\"RevByIndustryFonts\">{value}</b>\n            ) : (\n              numberWithCommas(value)\n            )}\n          </div>\n        </div>\n      );\n    };\n\n    newHeaders.map((headers) => {\n      headers.columns.map((column) => {\n        summaryHeaders.map(([key, value]) => {\n          if (key == column.accessorKey) {\n            column.columns = [\n              {\n                id: key,\n                header: renderValue(value, key),\n                accessorKey: key,\n                Cell: ({ cell }) => {\n                  return (\n                    <div\n                      style={{\n                        justifyContent: key == \"dispName\" ? \"left\" : \"right\",\n                        whiteSpace: \"nowrap\",\n                        overflow: \"hidden\",\n                        textOverflow: \"ellipsis\",\n                      }}\n                      title={numberWithCommas(cell.getValue())}\n                    >\n                      {cell.column.id == \"name\" &&\n                      cell.row.original.parentId != null ? (\n                        <span>\n                          <div className=\"ChildExpandedTxt\">\n                            {numberWithCommas(cell.getValue())}\n                          </div>\n                        </span>\n                      ) : (\n                        <div\n                          className={\n                            cell.row.original.parentId != null\n                              ? \"ChildExpandedTxt\"\n                              : \"ParentExpandedTxt\"\n                          }\n                        >\n                          {key.includes(\"gmperc\") &&\n                          cell.row.original.dispName == \"Summary\" ? (\n                            <b className=\"RevByIndustryFonts\">\n                              {numberWithCommas(cell.getValue()) + \"%\"}\n                            </b>\n                          ) : key.includes(\"rrperc\") &&\n                            cell.row.original.dispName == \"Summary\" ? (\n                            <b className=\"RevByIndustryFonts\">\n                              {numberWithCommas(cell.getValue()) + \"%\"}\n                            </b>\n                          ) : key.includes(\"gmperc\") ||\n                            key.includes(\"rrperc\") ? (\n                            numberWithCommas(cell.getValue()) + \"%\"\n                          ) : key == \"dispName\" &&\n                            cell.getValue() == \"Summary\" ? (\n                            <b\n                              className=\"RevByIndustryFonts\"\n                              style={{ textAlign: \"left\", color: \"red\" }}\n                            >\n                              {cell.getValue()}\n                            </b>\n                          ) : cell.row.original.dispName == \"Summary\" ? (\n                            <b className=\"RevByIndustryFonts\">\n                              {numberWithCommas(cell.getValue())}\n                            </b>\n                          ) : (\n                            numberWithCommas(cell.getValue())\n                          )}\n                        </div>\n                      )}\n                    </div>\n                  );\n                },\n              },\n            ];\n          }\n        });\n      });\n    });\n\n    setColumns(newHeaders);\n    let values = [];\n    let minusOneRow = [];\n\n    tableData?.map((d) =>\n      d.id !== -1 && d.id !== 0 ? values.push(d) : minusOneRow.push(d)\n    );\n\n    let tempData = jsonToTree(values, { children: \"subRows\" });\n\n    let finalData = [...tempData.slice(2, tempData.length)];\n    setNodes(finalData);\n    // =================================================================================\n  };\n\n  useEffect(() => {\n    colExpFlag ? setHiddenColumns({}) : colCollapse();\n  }, [colExpFlag]);\n\n  const colCollapse = () => {\n    let hiddenHeaders = [];\n    headers.map(([key, value]) => {\n      if (expandedCols.includes(key)) {\n        hiddenHeaders.push({ [key]: false });\n      }\n    });\n\n    setHiddenColumns(Object.assign({}, ...hiddenHeaders));\n  };\n\n  const jsonToTree = (flatArray, options) => {\n    options = {\n      id: \"id\",\n      parentId: \"parentId\",\n      children: \"subRows\",\n      ...options,\n    };\n    const dictionary = {};\n    const tree = [];\n    const children = options.children;\n    flatArray.forEach((node) => {\n      const nodeId = node[options.id];\n      const nodeParentId = node[options.parentId];\n      dictionary[nodeId] = {\n        [children]: [],\n        ...node,\n        ...dictionary[nodeId],\n      };\n      dictionary[nodeParentId] = dictionary[nodeParentId] || { [children]: [] };\n      dictionary[nodeParentId][children].push(dictionary[nodeId]);\n    });\n    Object.values(dictionary).forEach((obj) => {\n      if (typeof obj[options.id] === \"undefined\") {\n        tree.push(...obj[children]);\n      }\n    });\n    return tree;\n  };\n\n  const initialSortingState = () => {\n    let initialSortids = [];\n    columns?.map((column) => {\n      column?.columns.map((col) => {\n        col.accessorKey.includes(\"total_rr\") &&\n        !col?.accessorKey.includes(\"perc\")\n          ? initialSortids.push({ id: col.accessorKey, desc: true })\n          : \"\";\n      });\n    });\n    return initialSortids;\n  };\n\n  const sortColumns = (cols) => {\n    let sortedColumns = cols;\n\n    let sort_key = [\"Rec. Rev ($)\", \"GM ($)\", \"GM (%)\", \"Rec.Rev (%)\"];\n    let topHeaders = summaryHeaders;\n    sortedColumns.map((column) => {\n      column.columns.sort(\n        (a, b) => sort_key.indexOf(a.header) - sort_key.indexOf(b.header)\n      );\n    });\n    return sortedColumns;\n  };\n\n  return (\n    <div className=\"RevByIndustryTable darkHeader toHead\">\n      {nodes.length ? (\n        <MaterialReactTable\n          columns={sortColumns(columns)}\n          data={nodes}\n          enableExpandAll={true}\n          enableExpanding\n          enablePagination={false}\n          enableSortingRemoval={true}\n          enableBottomToolbar={false}\n          enableTopToolbar={false}\n          enableColumnActions={false}\n          enableSorting={true}\n          filterFromLeafRows\n          initialState={{\n            expanded: false,\n            density: \"compact\",\n            columnVisibility: { ...hiddenColumns },\n            enablePinning: true,\n            columnPinning: { left: [\"mrt-row-expand\", \"dispName\"] },\n            sorting: initialSortingState(),\n          }}\n          state={{ columnVisibility: { ...hiddenColumns } }}\n          defaultColumn={{ minSize: 40, maxSize: 1000, size: 40 }}\n          muiTableBodyProps={{\n            sx: {\n              \"&\": {},\n              \"& td\": {\n                borderRight: \"1px solid #ccc\",\n                height: \"22px\",\n                fontSize: \"11px\",\n                paddingTop: \"0px\",\n                paddingBottom: \"0px\",\n              },\n              \"& td:first-of-type\": {\n                borderLeft: \"1px solid #ccc\",\n                minWidth: \"60px\",\n              },\n            },\n          }}\n          muiTableHeadProps={{\n            sx: {\n              \"& th\": {\n                borderTop: \"1px solid #ccc\",\n                borderRight: \"1px solid #ccc\",\n                background: \"#f4f4f4 \",\n                fontSize: \"11px\",\n              },\n              \"& th:first-of-type\": {\n                borderLeft: \"1px solid #ccc\",\n                minWidth: \"60px\",\n              },\n            },\n          }}\n        />\n      ) : null}\n    </div>\n  );\n}\n","import React, { useState, useRef, useEffect } from \"react\";\nimport {\n  FaChevronCircleDown,\n  FaChevronCircleUp,\n  FaSearch,\n} from \"react-icons/fa\";\nimport DatePicker from \"react-datepicker\";\nimport axios from \"axios\";\nimport moment from \"moment\";\nimport Loader from \"../Loader/Loader\";\nimport { RiFileExcel2Line } from \"react-icons/ri\";\nimport GlobalValidation from \"../ValidationComponent/GlobalValidation\";\nimport RevenueByIndustrySecondTable from \"./RevenueByIndustrySecondTable\";\nimport RevenueIndustryCollapsibleTable from \"./RevenueIndustryCollapsibleTable\";\nimport Highcharts from \"highcharts\";\nimport HighchartsReact from \"highcharts-react-official\";\nimport highcharts3d from \"highcharts/highcharts-3d\";\nimport { Column } from \"primereact/column\";\nimport { Tooltip } from \"primereact/tooltip\";\nimport { environment } from \"../../environments/environment\";\nimport { AiFillWarning } from \"react-icons/ai\";\nimport { CCollapse } from \"@coreui/react\";\nimport GlobalHelp from \"../PrimeReactTableComponent/GlobalHelp\";\nimport ScreenBreadcrumbs from \"../Common/ScreenBreadcrumbs\";\nimport \"./RevenueIndustrySecondTable.scss\";\nimport { WidthFull } from \"@mui/icons-material\";\n\nhighcharts3d(Highcharts);\n\nfunction RevenueIndustry() {\n  const [month, setMonth] = useState(null);\n\n  const [details, setDetails] = useState([]);\n  const [columns, setColumns] = useState([]);\n  const [visible, setVisible] = useState(false);\n  const [searching, setsearching] = useState(false);\n  const [search, setSearch] = useState(false);\n  const [validationmessage, setValidationMessage] = useState(false);\n  const [visible1, setVisible1] = useState(false);\n  const [cheveronIcon, setCheveronIcon] = useState(FaChevronCircleUp);\n\n  const ref = useRef([]);\n\n  const [graphData, setGraphData] = useState([]);\n  const [graphData2, setGraphData2] = useState([]);\n\n  const [chartDataProp, setChartDataProp] = useState({});\n  const [chartDataProp2, setChartDataProp2] = useState({});\n  const [duration, setDuration] = useState([]);\n\n  const [count, setCount] = useState(0);\n\n  const abortController = useRef(null);\n\n  useEffect(() => {}, [count]);\n\n  const initialvalue = {\n    indTypes: \"\",\n    month: \"\",\n    Duration: \"\",\n  };\n  const [formData, setFormData] = useState(initialvalue);\n\n  const [tableData, setTableData] = useState([]);\n  let angle = 180;\n  const [secondTabData, setSecondTabData] = useState([]);\n\n  const [bodyData, setBodyData] = useState([]);\n  const [headerData, setHeaderData] = useState([]);\n  const loggedUserId = localStorage.getItem(\"resId\");\n\n  const baseUrl = environment.baseUrl;\n\n  //----------------------breadcrumbs----------------------\n\n  const [routes, setRoutes] = useState([]);\n  let textContent = \"Revenue Metrics\";\n  let currentScreenName = [\"Revenue By Industry\"];\n\n  useEffect(() => {\n    getMenus();\n  }, []);\n\n  const getMenus = () => {\n    axios({\n      method: \"GET\",\n      url: baseUrl + `/CommonMS/master/getMenus?loggedUserId=${loggedUserId}`,\n    }).then((resp) => {\n      let getData = resp.data.map((menu) => {\n        if (menu.subMenus) {\n          menu.subMenus = menu.subMenus.filter(\n            (subMenu) =>\n              subMenu.display_name !== \"Monthly Revenue Trend\" &&\n              subMenu.display_name !== \"Revenue & Margin Variance\" &&\n              subMenu.display_name !== \"Rev. Projections\" &&\n              subMenu.display_name !== \"Project Timesheet (Deprecated)\" &&\n              subMenu.display_name !== \"Financial Plan & Review\"\n          );\n        }\n        return menu;\n      });\n      // setData2(getData);\n\n      getData.forEach((item) => {\n        if (item.display_name === textContent) {\n          setRoutes([item]);\n        }\n      });\n    });\n  };\n\n  var maxDate = new Date();\n  var year = maxDate.getFullYear();\n  var month1 = maxDate.getMonth();\n\n  var maxDate = new Date(year, month1 + 11);\n\n  const calculateDuration = (e) => {\n    let currentMon = moment();\n    let selectedMon = moment(e);\n\n    let monthDifference = currentMon.diff(selectedMon, \"months\");\n\n    formData[\"Duration\"] = monthDifference;\n\n    let dr = [];\n\n    for (let i = 1; i <= monthDifference; i++) {\n      i < 13 && dr.push(i);\n    }\n\n    setDuration(dr);\n  };\n\n  useEffect(() => {\n    let mon = null;\n\n    let subMon = null;\n\n    let current = moment().format(\"MM\");\n\n    let finalMonth = null;\n\n    if (current >= 1 && current <= 3) {\n      mon = moment().format(\"MM\");\n      subMon = mon - 1;\n      finalMonth = moment().subtract(subMon, \"months\");\n    } else if (current >= 4 && current <= 6) {\n      mon = moment().format(\"MM\");\n      subMon = mon - 4;\n      finalMonth = moment().subtract(subMon, \"months\");\n    } else if (current >= 7 && current <= 9) {\n      mon = moment().format(\"MM\");\n      subMon = mon - 7;\n      finalMonth = moment().subtract(subMon, \"months\");\n    } else if (current >= 10 && current <= 12) {\n      mon = moment().format(\"MM\");\n      subMon = mon - 10;\n      finalMonth = moment().subtract(subMon, \"months\");\n    }\n\n    finalMonth = finalMonth.subtract(5, \"months\")._d;\n\n    setMonth(finalMonth);\n\n    formData[\"month\"] = finalMonth;\n\n    calculateDuration(finalMonth);\n  }, []);\n\n  const onSearchClick = async (e) => {\n    setTableData([]);\n    let valid = GlobalValidation(ref);\n    if (valid) {\n      {\n        setValidationMessage(true);\n      }\n      return;\n    }\n    if (valid) {\n      return;\n    }\n\n    // =================================for table=================================================\n    const loaderTime = setTimeout(() => {\n      setsearching(true);\n    }, 2000);\n    setSearch(false);\n\n    abortController.current = new AbortController();\n\n    const obj = {\n      indTypes: \"\",\n      FromDate: moment(formData.month).startOf(\"month\").format(\"YYYY-MM-DD\"),\n      Duration: formData.Duration,\n      UserId: loggedUserId,\n    };\n\n    const res = await axios({\n      method: \"post\",\n      url: baseUrl + `/revenuemetricsms/industry/postRevenueByIndustry`,\n      signal: abortController.current.signal,\n\n      data: obj,\n    });\n    let detail = res.data.tableData;\n    let cols = res.data.columns?.replaceAll(\"'\", \"\").split(\",\");\n    setDetails(detail);\n    setTableData(res.data);\n    setColumns(cols);\n    setValidationMessage(false);\n    setsearching(false);\n    clearTimeout(loaderTime);\n    //=========================for first graph====================================\n    if (res !== undefined && res.status === 200) {\n      const response = await axios.get(\n        baseUrl + `/revenuemetricsms/industry/postRevenueByTopIndustry`\n      );\n      let resp = response.data;\n      console.log(response, \"response\");\n      setGraphData(resp);\n      handleChartData(resp);\n      setVisible(true);\n\n      // // ==========================for second graph======================================\n      if (response != undefined && response.status === 200) {\n        const cacheBuster = Math.random();\n        const responseTwo = await axios.get(\n          baseUrl +\n            `/revenuemetricsms/industry/postRevenueByTopIndustryTypeGraph?cacheBuster=${cacheBuster}`\n        );\n        let rep = responseTwo.data;\n        setGraphData2(rep);\n        handleChartData2(rep);\n        setVisible(true);\n      }\n    }\n\n    // //  =============================== for second table ===============================\n\n    const responseThree = await axios({\n      method: \"get\",\n      url: baseUrl + `/revenuemetricsms/industry/postRevenueByTopIndustryType`,\n    });\n    let respons = responseThree.data;\n\n    let hData = [];\n    let bData = [];\n\n    let Headerdata = [\n      {\n        SNo: \"Rank\",\n        resource_name: \"Customer\",\n        val: \"Rec.Revenue($)\",\n        gm: \"GM($)\",\n        gmperc: \"GM(%)\",\n        rrperc: \"RR(%)\",\n      },\n    ];\n\n    for (let i = 0; i < respons.length; i++) {\n      respons[i][\"SNo\"] = i + 0;\n      if (i == 0) {\n        hData.push(respons[i]);\n      } else {\n        bData.push(respons[i]);\n      }\n    }\n\n    let d1 = Headerdata.concat(bData);\n\n    const updatedData = d1?.map((item) => {\n      const key = isNaN(item.key) ? item.key : parseFloat(item.key);\n      const val = isNaN(item.val) ? item.val : parseFloat(item.val);\n      const gm = isNaN(item.gm) ? item.gm : parseFloat(item.gm);\n      const gmperc = isNaN(item.gmperc) ? item.gmperc : parseFloat(item.gmperc);\n      const rrperc = isNaN(item.rrperc) ? item.rrperc : parseFloat(item.rrperc);\n\n      return {\n        ...item,\n        key: key !== undefined ? key.toLocaleString(\"en-US\") : undefined,\n        val: val !== undefined ? val.toLocaleString(\"en-US\") : undefined,\n        gm: gm !== undefined ? gm.toLocaleString(\"en-US\") : undefined,\n        gmperc:\n          gmperc !== undefined\n            ? gmperc == \"GM(%)\"\n              ? gmperc\n              : gmperc + \"%\"\n            : undefined,\n        rrperc:\n          rrperc !== undefined\n            ? rrperc == \"RR(%)\"\n              ? rrperc\n              : rrperc + \"%\"\n            : undefined,\n      };\n    });\n\n    setSecondTabData(updatedData);\n    setSearch(true);\n    setBodyData(bData);\n\n    !valid && setVisible1(!visible1);\n    visible1\n      ? setCheveronIcon(FaChevronCircleUp)\n      : setCheveronIcon(FaChevronCircleDown);\n  };\n  const RankAlign = (data) => {\n    return (\n      <div\n        className=\"ellipsis text-center\"\n        style={{ maxWidth: \"80px\", backgroundColor: data.color }}\n        data-toggle=\"tooltip\"\n        title={data.SNo}\n      >\n        {data.SNo}\n      </div>\n    );\n  };\n\n  const ResourceAlign = (data) => {\n    return (\n      <div\n        style={{ backgroundColor: data.color }}\n        className=\"ellipsis\"\n        data-toggle=\"tooltip\"\n        title={data.resource_name}\n      >\n        {data.resource_name}\n      </div>\n    );\n  };\n  const ValAlign = (data) => {\n    return (\n      <div\n        className=\"ellipsis\"\n        style={{ textAlign: \"right\", backgroundColor: data.color }}\n        data-toggle=\"tooltip\"\n        title={data.val}\n      >\n        {data.val}\n      </div>\n    );\n  };\n  const gmAlign = (data) => {\n    return (\n      <div\n        className=\"ellipsis\"\n        style={{ textAlign: \"right\", backgroundColor: data.color }}\n        data-toggle=\"tooltip\"\n        title={data.gm}\n      >\n        {data.gm}\n      </div>\n    );\n  };\n  const gmpercAlign = (data) => {\n    console.log(\n      data.color +\n        \">>>>>\" +\n        `ellipsis revenueInd ${\n          data.color == \"#7cb5ec\"\n            ? \"blue\"\n            : data.color == \"#e4d354\"\n            ? \"yellow\"\n            : data.color == \"#90ed7d\"\n            ? \"green\"\n            : data.color == \"#f7a35c\"\n            ? \"orange\"\n            : \"brown-red\"\n        }`\n    );\n\n    return (\n      <div\n        className={`ellipsis revenueInd ${\n          data.color == \"#7cb5ec\"\n            ? \"blue\"\n            : data.color == \"#e4d354\"\n            ? \"yellow\"\n            : data.color == \"#90ed7d\"\n            ? \"green\"\n            : data.color == \"#f7a35c\"\n            ? \"orange\"\n            : \"brown-red\"\n        }`}\n        style={{ textAlign: \"right\" }}\n        data-toggle=\"tooltip\"\n        title={data.gmperc}\n      >\n        {data.gmperc}\n      </div>\n    );\n  };\n  const rrpercAlign = (data) => {\n    return (\n      <div\n        className=\"ellipsis\"\n        style={{ textAlign: \"right\", backgroundColor: data.color }}\n        data-toggle=\"tooltip\"\n        title={data.rrperc}\n      >\n        {data.rrperc}\n      </div>\n    );\n  };\n\n  const dynamicColumns = Object.keys(headerData)?.map((col, i) => {\n    const headerAlignClassName =\n      headerData[col] === \"Customer\"\n        ? \"customerHeaderAlign\"\n        : headerData[col] === \"GM($)\"\n        ? \"gmAlign\"\n        : \"defaultHeaderAlign\";\n\n    return (\n      <Column\n        key={col}\n        body={\n          col === \"SNo\"\n            ? RankAlign\n            : (col === \"resource_name\" && ResourceAlign) ||\n              (col === \"val\" && ValAlign) ||\n              (col === \"gm\" && gmAlign) ||\n              (col === \"gmperc\" && gmpercAlign) ||\n              (col === \"rrperc\" && rrpercAlign)\n        }\n        title={headerData[col]}\n        field={col}\n        header={\n          <span className={headerAlignClassName}>\n            <span>{headerData[col]}</span>\n          </span>\n        }\n      />\n    );\n  });\n\n  // ----------------------------------------for second graph ----------------------------------------------------------------\n\n  const handleChartData = (graphData) => {\n    const chartData = {\n      credits: {\n        enabled: false,\n      },\n      chart: {\n        type: \"pie\",\n        options3d: {\n          enabled: true,\n          alpha: 45,\n          beta: 0,\n        },\n      },\n      lang: {\n        thousandsSep: \",\",\n      },\n      title: {\n        text: \"Top Industry By Rec.Rev.\",\n        align: \"center\",\n      },\n      tooltip: {\n        pointFormat: \"{point.resource_name}: <b>{point.percentage:.1f}%</b>\",\n      },\n      plotOptions: {\n        pie: {\n          cursor: \"pointer\",\n          shadow: true,\n          startAngle: angle,\n          cursor: \"pointer\",\n          depth: 55,\n          size: \"100%\",\n          showInLegend: true,\n        },\n      },\n      series: [\n        {\n          data: graphData?.map((item) => ({\n            name: item.cat,\n            y: parseInt(item.val),\n            color: item.color,\n            resource_name: item.resource_name,\n          })),\n          allowPointSelect: true,\n          cursor: \"pointer\",\n          dataLabels: {\n            enabled: true,\n            distance: 10,\n            formatter: function () {\n              return `<b>${this.point.name}</b>:<br/>$${Highcharts.numberFormat(\n                this.point.y,\n                0,\n                \",\",\n                \",\"\n              )} (${Math.round(this.point.percentage * 10) / 10})%`;\n            },\n          },\n        },\n      ],\n    };\n\n    setChartDataProp(chartData);\n  };\n  // ----------------------------------------------------------------------------------------------------------\n  // --------------------------------for first graph -------------------------------------------------------------------\n\n  const handleChartData2 = (graphData2) => {\n    let top1 = null;\n    let top2to5 = null;\n    let top6to10 = null;\n    let top11to20 = null;\n    let top21to40 = null;\n    let rest = null;\n\n    graphData2.map((d) => {\n      if (d.lvl != \"-1\") {\n        graphData2.push(d.cat);\n\n        switch (d.cat) {\n          case \"Top 1\":\n            top1 = parseInt(d.val);\n            break;\n          case \"Top 2-5\":\n            top2to5 = parseInt(d.val);\n            break;\n          case \"Top 6-10\":\n            top6to10 = parseInt(d.val);\n            break;\n          case \"Top 11-20\":\n            top11to20 = parseInt(d.val);\n            break;\n          case \"Top 21-40\":\n            top21to40 = parseInt(d.val);\n            break;\n          case \"Rest\":\n            rest = parseInt(d.val);\n            break;\n          default:\n        }\n      }\n    });\n\n    const chartData2 = {\n      credits: {\n        enabled: false,\n      },\n      chart: {\n        plotBackgroundColor: null,\n        plotBorderWidth: null,\n        plotShadow: false,\n        type: \"pie\",\n        options3d: {\n          enabled: true,\n          alpha: 45,\n          beta: 0,\n        },\n      },\n      title: {\n        text: \"Top Customers By Rec.Rev.\",\n      },\n      tooltip: {\n        pointFormat: \"{series.name}: <b>{point.percentage:.1f}%</b>\",\n      },\n      xAxis: {\n        categories: [\n          \"Top 1\",\n          \"Top 2-5\",\n          \"Top 6-10\",\n          \"Top 11-20\",\n          \"Top 21-40\",\n          \"Rest\",\n        ],\n      },\n      accessibility: {\n        point: {\n          valueSuffix: \"%\",\n        },\n      },\n      plotOptions: {\n        pie: {\n          allowPointSelect: true,\n          cursor: \"pointer\",\n          shadow: true,\n          startAngle: angle,\n          cursor: \"pointer\",\n          depth: 55,\n          size: \"100%\",\n          showInLegend: true,\n        },\n      },\n      series: [\n        {\n          colorByPoint: true,\n          data: [\n            {\n              name: \"Top 1\",\n              y: top1,\n              selected: true,\n              dataLabels: {\n                enabled: true,\n                distance: 10,\n                formatter: function () {\n                  return `<b>${\n                    this.point.name\n                  }</b>:<br/>$${Highcharts.numberFormat(\n                    this.point.y,\n                    0,\n                    \",\",\n                    \",\"\n                  )} (${Math.round(this.point.percentage * 10) / 10})%`;\n                },\n              },\n            },\n            {\n              name: \"Top 2-5\",\n              color: \"#e4d354\",\n              y: top2to5,\n              dataLabels: {\n                enabled: true,\n                distance: 10,\n                formatter: function () {\n                  return `<b>${\n                    this.point.name\n                  }</b>:<br/>$${Highcharts.numberFormat(\n                    this.point.y,\n                    0,\n                    \",\",\n                    \",\"\n                  )} (${Math.round(this.point.percentage * 10) / 10})%`;\n                },\n              },\n            },\n            {\n              name: \"Top 6-10\",\n              y: top6to10,\n              dataLabels: {\n                enabled: true,\n                distance: 10,\n                formatter: function () {\n                  return `<b>${\n                    this.point.name\n                  }</b>:<br/>$${Highcharts.numberFormat(\n                    this.point.y,\n                    0,\n                    \",\",\n                    \",\"\n                  )} (${Math.round(this.point.percentage * 10) / 10})%`;\n                },\n              },\n            },\n            {\n              name: \"Top 11-20\",\n              y: top11to20,\n              dataLabels: {\n                enabled: true,\n                distance: 10,\n                formatter: function () {\n                  return `<b>${\n                    this.point.name\n                  }</b>:<br/>$${Highcharts.numberFormat(\n                    this.point.y,\n                    0,\n                    \",\",\n                    \",\"\n                  )} (${Math.round(this.point.percentage * 10) / 10})%`;\n                },\n              },\n            },\n            {\n              name: \"Top 21-40\",\n              color: \"#e5a4a4\",\n              y: top21to40,\n              dataLabels: {\n                enabled: true,\n                distance: 10,\n                formatter: function () {\n                  return `<b>${\n                    this.point.name\n                  }</b>:<br/>$${Highcharts.numberFormat(\n                    this.point.y,\n                    0,\n                    \",\",\n                    \",\"\n                  )} (${Math.round(this.point.percentage * 10) / 10})%`;\n                },\n              },\n            },\n            {\n              name: \"Rest\",\n              y: rest,\n              dataLabels: {\n                enabled: true,\n                distance: 10,\n                formatter: function () {\n                  return `<b>${\n                    this.point.name\n                  }</b>:<br/>$${Highcharts.numberFormat(\n                    this.point.y,\n                    0,\n                    \",\",\n                    \",\"\n                  )} (${Math.round(this.point.percentage * 10) / 10})%`;\n                },\n              },\n            },\n          ],\n        },\n      ],\n    };\n\n    setChartDataProp2(chartData2);\n  };\n  const handleAbort = () => {\n    abortController.current && abortController.current.abort();\n    setsearching(false);\n  };\n\n  const exportExcel = () => {\n    import(\"xlsx\").then((xlsx) => {\n      const columnsToExclude = [\n        \"id\",\n        \"industryId\",\n        \"industry\",\n        \"customerId\",\n        \"lvl\",\n        \"keyAttr\",\n        \"parentAttr\",\n        \"total_rr_sort\",\n      ];\n\n      const filteredColumns = columns.filter(\n        (col) => !columnsToExclude.includes(col)\n      );\n\n      const wantedValues = details\n        .filter((item) => item.id !== -2)\n        .map((item) => {\n          const obj = {};\n          filteredColumns.forEach((col) => {\n            const value = item[col];\n            if (typeof value === \"string\") {\n              const [extractedValue, ,] = value.split(\"^&\");\n              obj[col] = extractedValue;\n            } else {\n              obj[col] = value;\n            }\n          });\n          return obj;\n        });\n\n      const rows = wantedValues.map((item) => {\n        const row = [];\n        filteredColumns.forEach((col) => {\n          row.push(item[col]);\n        });\n        return row;\n      });\n\n      const worksheet = xlsx.utils.aoa_to_sheet([...rows]);\n      const workbook = { Sheets: { data: worksheet }, SheetNames: [\"data\"] };\n      const excelBuffer = xlsx.write(workbook, {\n        bookType: \"xlsx\",\n        type: \"array\",\n      });\n\n      saveAsExcelFile(excelBuffer, \"RevenueByIndustry\");\n    });\n  };\n\n  const saveAsExcelFile = (buffer, fileName) => {\n    import(\"file-saver\").then((module) => {\n      if (module && module.default) {\n        let EXCEL_TYPE =\n          \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8\";\n        let EXCEL_EXTENSION = \".xlsx\";\n        const data = new Blob([buffer], { type: EXCEL_TYPE });\n        module.default.saveAs(data, fileName + EXCEL_EXTENSION);\n      }\n    });\n  };\n\n  const HelpPDFName = \"Revenue By Industry.pdf\";\n  const Headername = \"Revenue By Industry Help\";\n  return (\n    <div>\n      {validationmessage ? (\n        <div className=\"statusMsg error\">\n          {\" \"}\n          <AiFillWarning /> Please select valid values for highlighted fields\n        </div>\n      ) : (\n        \"\"\n      )}\n      <div className=\"col-md-12\">\n        <div className=\"pageTitle\">\n          <div className=\"childOne\"></div>\n          <div className=\"childTwo\">\n            <h2>Revenue By Industry</h2>\n          </div>\n          <div className=\"childThree\"></div>\n        </div>\n      </div>\n      <ScreenBreadcrumbs\n        routes={routes}\n        currentScreenName={currentScreenName}\n      />\n      <div className=\"group mb-3 customCard  mt-2\">\n        <div className=\"col-md-12 collapseHeader\">\n          <h2>Search Filters</h2>\n          <div className=\"helpBtn\">\n            <GlobalHelp pdfname={HelpPDFName} name={Headername} />\n          </div>\n          &nbsp;\n          <div\n            onClick={() => {\n              setVisible1(!visible1);\n              visible1\n                ? setCheveronIcon(FaChevronCircleUp)\n                : setCheveronIcon(FaChevronCircleDown);\n            }}\n          >\n            <span>{cheveronIcon}</span>\n          </div>\n        </div>\n        <CCollapse visible={!visible1}>\n          <div className=\"group-content row\">\n            <div className=\" col-md-4 mb-2\">\n              <div className=\"form-group row\">\n                <label className=\"col-4\" htmlFor=\"Duration\">\n                  Month&nbsp;\n                  <span className=\"col-1 p-0 error-text\">*</span>\n                </label>\n                <span className=\"col-1 p-0\">:</span>\n                <div className=\"col-6 industryDatePicker\">\n                  <DatePicker\n                    id=\"month\"\n                    selected={month}\n                    onChange={(e) => {\n                      setCount((prev) => prev + 1);\n                      const elementToChange =\n                        document.getElementById(\"Duration\");\n                      elementToChange.value = 0;\n                      calculateDuration(e);\n                      setFormData((prev) => ({\n                        ...prev,\n                        [\"month\"]: moment(e).format(\"yyyy-MM-DD\"),\n                      }));\n\n                      setMonth(e);\n                    }}\n                    maxDate={moment().subtract(1, \"months\")._d}\n                    minDate={\n                      moment().subtract(10, \"years\").subtract(1, \"months\")._d\n                    }\n                    dateFormat=\"MMM-yyyy\"\n                    showMonthYearPicker\n                  />\n                </div>\n              </div>\n            </div>\n            <div className=\" col-md-4 mb-2\">\n              <div className=\"form-group row\">\n                <label className=\"col-4\" htmlFor=\"Duration\">\n                  Duration&nbsp;\n                  <span className=\"col-1 p-0 error-text\">*</span>\n                </label>\n                <span className=\"col-1\">:</span>\n                <div className=\"col-6\">\n                  <select\n                    className=\"text cancel\"\n                    id=\"Duration\"\n                    name=\"Duration\"\n                    onChange={(e) => {\n                      const { value, id } = e.target;\n\n                      setFormData({ ...formData, [id]: value });\n                    }}\n                    ref={(ele) => {\n                      ref.current[formData.Duration == \"\" ? 0 : \"\"] = ele;\n                    }}\n                  >\n                    <option value=\"\"> &lt;&lt;Please Select&gt;&gt;</option>\n                    {duration.map((d) => (\n                      <option\n                        selected={\n                          formData.Duration == d && count == 0 ? true : false\n                        }\n                        value={d}\n                      >\n                        {d}\n                      </option>\n                    ))}\n                  </select>\n                </div>\n              </div>\n            </div>\n            <div className=\"col-md-12 col-sm-12 col-xs-12 btn-container center my-3 \">\n              <button\n                type=\"submit\"\n                className=\"btn btn-primary\"\n                onClick={() => {\n                  onSearchClick();\n                }}\n              >\n                <FaSearch /> Search\n              </button>\n            </div>\n          </div>\n        </CCollapse>\n      </div>\n\n      {searching ? <Loader handleAbort={handleAbort} /> : \"\"}\n\n      {search == true ? (\n        <div className=\"mb-2\" align=\" right \">\n          <RiFileExcel2Line\n            size=\"1.5em\"\n            title=\"Export to Excel\"\n            style={{ color: \"green\" }}\n            cursor=\"pointer\"\n            onClick={exportExcel}\n          />\n          <br />\n        </div>\n      ) : (\n        \"\"\n      )}\n      <RevenueIndustryCollapsibleTable\n        data={tableData}\n        expandedCols={[]}\n        colExpandState={[]}\n      />\n\n      <div className=\"col-12 row\">&nbsp;</div>\n\n      {/***************************************Chart**************************************** */}\n      {visible && search ? (\n        <>\n          <div className=\"col-md-12 no-padding row d-flex justify-content-between ms-1\">\n            <div className=\"col-md-6 customCard card graph \">\n              <HighchartsReact\n                highcharts={Highcharts}\n                options={chartDataProp2}\n              />\n            </div>\n\n            <div className=\"col-md-6 customCard card graph \">\n              <HighchartsReact\n                highcharts={Highcharts}\n                options={chartDataProp}\n              />\n            </div>\n          </div>\n          {/***************************************Chart**************************************** */}\n        </>\n      ) : (\n        \"\"\n      )}\n      {search && (\n        <div className=\"col-12 row ms-1\">\n          <div className=\"col-6 topCust mt-2\">\n            <RevenueByIndustrySecondTable\n              data={secondTabData}\n              dynamicColumns={dynamicColumns}\n              headerData={headerData}\n              setHeaderData={setHeaderData}\n              rows={20}\n            />\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default RevenueIndustry;\n"],"names":["props","data","rows","dynamicColumns","col","headerdatagroup","linkColumns","linkColumnsRoutes","headerData","setHeaderData","exportData","customFilters","customFilterValue","setCustomFilterValue","useState","mainData","setMainData","bodyData","setBodyData","console","log","exportColumns","setExportColumns","dt","useRef","useEffect","JSON","parse","stringify","length","splice","dtt","headDt","Object","keys","forEach","d","push","title","dataKey","filtersData","contains","value","matchMode","FilterMatchMode","global","filters1","setFilters1","globalFilterValue1","setGlobalFilterValue1","onGlobalFilterChange1","e","target","_filters1","RenderCustomFilters","cstFtlrs","id","onChange","map","selected","exportExcel","then","xlsx","buffer","fileName","workbook","Sheets","utils","json_to_sheet","SheetNames","excelBuffer","write","bookType","type","module","default","data1","Blob","saveAs","Date","getTime","exportPdf","jsPDF","doc","autoTable","save","header1","className","style","paddingTop","fontSize","color","paddingLeft","undefined","includes","onClick","selectionOnly","current","exportCSV","defaultValue","placeholder","paginator","showGridlines","filters","responsiveLayout","header","emptyMessage","ref","el","currentPageReportTemplate","paginatorTemplate","rowsPerPageOptions","paginationPerPage","paginationRowsPerPageOptions","paginationComponentOptions","rowsPerPageText","rangeSeparatorText","RevenueIndustryCollapsibleTable","expandedCols","colExpandState","nodes","setNodes","columns","setColumns","hiddenColumns","setHiddenColumns","colExpFlag","setColumnExpFlag","headers","setHeaders","newHeaders","summaryHeaders","numberWithCommas","x","toString","replace","getData","tableData","replaceAll","colArr","split","hiddenHeaders","obj","i","colVal","trim","firstData","headerArray","entries","unWantedCols","filteredHeaders","filter","key","assign","minusOneRoww","summaryRow","index","accessorKey","enableColumnActions","enableHiding","Header","column","IconButton","prev","subHeaders","sort","indexOf","subArray","a","test","subkey","slice","join","enableSorting","sortDescFirst","renderValue","Cell","cell","justifyContent","whiteSpace","overflow","textOverflow","getValue","row","original","parentId","dispName","textAlign","values","minusOneRow","tempData","jsonToTree","children","finalData","colCollapse","flatArray","options","dictionary","tree","node","nodeId","nodeParentId","cols","sortedColumns","sort_key","b","sortColumns","enableExpandAll","enableExpanding","enablePagination","enableSortingRemoval","enableBottomToolbar","enableTopToolbar","filterFromLeafRows","initialState","expanded","density","columnVisibility","enablePinning","columnPinning","left","sorting","initialSortids","desc","initialSortingState","state","defaultColumn","minSize","maxSize","size","muiTableBodyProps","sx","borderRight","height","paddingBottom","borderLeft","minWidth","muiTableHeadProps","borderTop","background","highcharts3d","Highcharts","month","setMonth","details","setDetails","visible","setVisible","searching","setsearching","search","setSearch","validationmessage","setValidationMessage","visible1","setVisible1","FaChevronCircleUp","cheveronIcon","setCheveronIcon","setGraphData","setGraphData2","chartDataProp","setChartDataProp","chartDataProp2","setChartDataProp2","duration","setDuration","count","setCount","abortController","indTypes","Duration","formData","setFormData","setTableData","secondTabData","setSecondTabData","loggedUserId","localStorage","getItem","baseUrl","environment","routes","setRoutes","getMenus","axios","method","url","resp","menu","subMenus","subMenu","display_name","item","year","maxDate","getFullYear","month1","getMonth","calculateDuration","currentMon","moment","selectedMon","monthDifference","diff","dr","subMon","format","finalMonth","subtract","_d","onSearchClick","valid","GlobalValidation","loaderTime","setTimeout","AbortController","FromDate","startOf","UserId","signal","res","detail","clearTimeout","status","response","handleChartData","cacheBuster","Math","random","responseTwo","rep","handleChartData2","responseThree","respons","hData","bData","Headerdata","SNo","resource_name","val","gm","gmperc","rrperc","d1","concat","updatedData","isNaN","parseFloat","toLocaleString","FaChevronCircleDown","RankAlign","maxWidth","backgroundColor","ResourceAlign","ValAlign","gmAlign","gmpercAlign","rrpercAlign","headerAlignClassName","body","field","graphData","chartData","credits","enabled","chart","options3d","alpha","beta","lang","thousandsSep","text","align","tooltip","pointFormat","plotOptions","pie","cursor","shadow","startAngle","series","name","cat","y","parseInt","allowPointSelect","dataLabels","distance","formatter","this","point","round","percentage","graphData2","top1","top2to5","top6to10","top11to20","top21to40","rest","lvl","chartData2","plotBackgroundColor","plotBorderWidth","plotShadow","xAxis","categories","accessibility","valueSuffix","colorByPoint","saveAsExcelFile","ScreenBreadcrumbs","currentScreenName","GlobalHelp","pdfname","htmlFor","document","getElementById","minDate","dateFormat","showMonthYearPicker","ele","Loader","handleAbort","abort","columnsToExclude","filteredColumns","extractedValue","aoa_to_sheet","highcharts"],"sourceRoot":""}