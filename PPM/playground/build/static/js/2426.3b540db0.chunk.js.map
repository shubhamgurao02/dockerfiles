{"version":3,"file":"static/js/2426.3b540db0.chunk.js","mappings":"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","sources":["../node_modules/@mui/icons-material/esm/Done.js","../node_modules/@mui/icons-material/esm/Block.js","../node_modules/@mui/icons-material/esm/Warning.js","views/RevenueMetrices/RevenueVarianceMaterialTable.js","views/RevenueMetrices/RevenueMarginMultiselect.js","views/RevenueMetrices/RevenueVariance.js"],"sourcesContent":["import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M9 16.2 4.8 12l-1.4 1.4L9 19 21 7l-1.4-1.4L9 16.2z\"\n}), 'Done');","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zM4 12c0-4.42 3.58-8 8-8 1.85 0 3.55.63 4.9 1.69L5.69 16.9C4.63 15.55 4 13.85 4 12zm8 8c-1.85 0-3.55-.63-4.9-1.69L18.31 7.1C19.37 8.45 20 10.15 20 12c0 4.42-3.58 8-8 8z\"\n}), 'Block');","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M1 21h22L12 2 1 21zm12-3h-2v-2h2v2zm0-4h-2v-4h2v4z\"\n}), 'Warning');","import React, { useState, useEffect } from \"react\";\nimport MaterialReactTable from \"material-react-table\";\nimport { IconButton } from \"@mui/material\";\n\nimport { AiFillRightCircle } from \"react-icons/ai\";\nimport fte_active from \"../../assets/images/empstatusIcon/fte_active.png\";\nimport fte_inactive from \"../../assets/images/empstatusIcon/fte_inactive.png\";\nimport fte_notice from \"../../assets/images/empstatusIcon/fte_notice.png\";\nimport subk_active from \"../../assets/images/empstatusIcon/subk_active.png\";\nimport subk_inactive from \"../../assets/images/empstatusIcon/subk_inactive.png\";\nimport subk_notice from \"../../assets/images/empstatusIcon/subk_notice.png\";\nimport \"./RevenueVarianceMaterialTable.scss\";\nimport { Done, Block, Warning } from \"@mui/icons-material\";\nexport default function RevenueVarianceMaterialTable(props) {\n  const icons = {\n    fte0: (\n      <img\n        src={fte_inactive}\n        alt=\"(fte_inactive_icon)\"\n        style={{ height: \"12px\" }}\n        title=\"Ex-Employee\"\n      />\n    ),\n    fte1: (\n      <img\n        src={fte_active}\n        alt=\"(fte_active_icon)\"\n        style={{ height: \"12px\" }}\n        title=\"Active Employee\"\n      />\n    ),\n    fte2: (\n      <img\n        src={fte_notice}\n        alt=\"(fte_notice_icon)\"\n        style={{ height: \"12px\" }}\n        title=\"Employee in notice period\"\n      />\n    ),\n    subk0: (\n      <img\n        src={subk_inactive}\n        alt=\"(subk_inactive_icon)\"\n        style={{ height: \"12px\" }}\n        title=\"Ex-Contractor\"\n      />\n    ),\n    subk1: (\n      <img\n        src={subk_active}\n        alt=\"(subk_active_icon)\"\n        style={{ height: \"12px\" }}\n        title=\"Active Contractor\"\n      />\n    ),\n    subk2: (\n      <img\n        src={subk_notice}\n        alt=\"(subk_notice_icon)\"\n        style={{ height: \"12px\" }}\n        title=\"Contractor in notice period\"\n      />\n    ),\n  };\n\n  const { data, expandedCols, colExpandState, setRowCount } = props;\n\n  const [nodes, setNodes] = useState([]);\n  const [columns, setColumns] = useState(null);\n  const [hiddenColumns, setHiddenColumns] = useState({});\n  const [colExpFlag, setColumnExpFlag] = useState(false);\n\n  const [headers, setHeaders] = useState([]);\n  const [headers1, setHeaders1] = useState([]);\n\n  const columnName = \"name\";\n  const nameRowCount = nodes.filter(\n    (row) => row[columnName] !== null && row[columnName] !== \"\"\n  ).length;\n  setRowCount(nameRowCount > 0 ? nameRowCount - 1 : 0);\n\n  useEffect(() => {\n    getData();\n  }, [data]);\n  const expandT = () => {\n    count++;\n    getData();\n    // setHiddenColumns({});\n  };\n  const expandF = () => {\n    getData();\n    // colCollapse()\n  };\n  useEffect(() => {\n    colExpFlag ? expandT() : expandF();\n  }, [colExpFlag]);\n  var count = 0;\n  const getData = () => {\n    let expandColumnClass = \"\";\n    let IconExpand = \"\";\n\n    if (colExpFlag == true && count > 0) {\n      expandColumnClass = \"expandedColumns\";\n      IconExpand = \"expanded\";\n    } else {\n      expandColumnClass = \"\";\n      IconExpand = \"\";\n    }\n    let tableData = data.tableData;\n\n    setHeaders1(data.columns?.replaceAll(\"'\", \"\").split(\",\"));\n\n    let columns = null;\n    let secondHeaders = tableData?.filter((d) => d.id == \"-2\");\n    let thirdHeaders = tableData?.filter((d) => d.id === \"-1\");\n    console.log(thirdHeaders);\n    if (data?.columns?.includes(\"'\")) {\n      columns = data?.columns?.replaceAll(\"'\", \"\");\n    } else {\n      columns = data?.columns;\n    }\n    let colArr = columns?.split(\",\");\n    let newHeaders = [];\n    let hiddenHeaders = [];\n\n    const obj = {};\n    const obj1 = {};\n    const obj2 = {};\n\n    for (let i = 0; i < colArr?.length; i++) {\n      let colVal = colArr[i].trim();\n      let firstData = tableData[0];\n      obj[colVal] = firstData[colVal];\n    }\n\n    let headerArray = Object.entries(obj);\n\n    let filteredHeaders = headerArray.filter(\n      ([key, value]) => typeof value === \"string\" && value.includes(\"^&\")\n    );\n\n    setHeaders(filteredHeaders);\n\n    filteredHeaders.map(([key, value]) => {\n      if (expandedCols.includes(key)) {\n        hiddenHeaders.push({ [key]: false });\n      }\n    });\n\n    filteredHeaders.forEach((d) => (obj1[d[1]] = d[0]));\n    let newObject = Object.entries(obj1);\n\n    setHiddenColumns(Object.assign({}, ...hiddenHeaders));\n\n    const getLegendIcon = (empStatus) => {\n      // Define icon components directly\n      if (empStatus === \"active\") {\n        return <Done style={{ fontSize: 12 }} />;\n      } else if (empStatus === \"inactive\") {\n        return <Block style={{ fontSize: 12 }} />;\n      } else if (empStatus === \"notice\") {\n        return <Warning style={{ fontSize: 12 }} />;\n      }\n\n      // Return a default icon if empStatus doesn't match any known value\n      return null;\n    };\n\n    newObject.map(([value, key], index) => {\n      newHeaders.push({\n        accessorKey:\n          key.lastIndexOf(\"_\") > 7\n            ? key.split(\"_\")[0] +\n              \"_\" +\n              key.split(\"_\")[1] +\n              \"_\" +\n              key.split(\"_\")[2]\n            : key.includes(\"total\")\n            ? \"total\"\n            : key,\n        header: value.split(\"^&\")[0],\n        enableColumnActions: false,\n        enableHiding: true,\n        Header: ({ column }) => (\n          <div\n            className={\n              key.includes(\"name\")\n                ? \"mixer\"\n                : key == \"project_ct\" ||\n                  key == \"emp_cadre\" ||\n                  key == \"supervisor\"\n                ? expandColumnClass\n                : \"hello\"\n            }\n          >\n            {value.split(\"^&\")[0]}{\" \"}\n            {key == colExpandState[2] ? (\n              <span className={`expandIcon ${IconExpand}`}>\n                <IconButton\n                  //className=\"expandIcon\"\n                  onClick={() => {\n                    setColumnExpFlag((prev) => !prev);\n                  }}\n                >\n                  <AiFillRightCircle />\n                </IconButton>\n              </span>\n            ) : null}\n          </div>\n        ),\n        Cell: ({ cell }) => {\n          const cellValue = cell.getValue();\n\n          const formattedValue = isNaN(cellValue)\n            ? \"N/A\"\n            : numberWithCommas(cellValue);\n          const icn = icons[row[\"empStatus\"]];\n          return (\n            <div\n              className={\n                value + \"-\" + key\n                // key.includes(\"_\")\n                //   ? key.split(\"_\")[1] % 2 == 0\n                //     ? \"even\"\n                //     : \"odd\"\n                //   : key.includes(\"total\") && \"total\"\n              }\n              title={cell.getValue()}\n            >\n              {getLegendIcon(cell.row.original[\"empStatus\"])}{\" \"}\n              {cell.column.id === \"name\" &&\n              cell.row.original.parentId !== null ? (\n                <span>{formattedValue}</span>\n              ) : (\n                formattedValue\n              )}\n            </div>\n          );\n        },\n      });\n    });\n\n    let subHeaders = secondHeaders ? Object.entries(secondHeaders[0]) : null;\n    let perSubHeaders = thirdHeaders ? Object.entries(thirdHeaders[0]) : null;\n    let filteredSubHeaders = subHeaders?.filter(\n      ([key, value]) => typeof value === \"string\" && value.includes(\"^&\")\n    );\n    console.log(perSubHeaders);\n\n    let filteredThirdHeaders = perSubHeaders?.filter(\n      ([key, value]) => typeof value === \"string\" && key.includes(\"_\")\n    );\n\n    filteredSubHeaders?.sort();\n\n    let newSecondRow = [];\n    newHeaders.map((data) => {\n      filteredSubHeaders.map(([key, value]) => {\n        if (key.includes(data.accessorKey)) {\n          newSecondRow.push([data.accessorKey, value]);\n        }\n      });\n    });\n\n    let obj3 = [];\n    let finalObj = [];\n\n    newSecondRow.map((d) => {\n      if (obj3[d[0]] == undefined) {\n        let ar = [];\n\n        if (ar.includes(d[1]) == false) {\n          ar.push(d[1]);\n\n          finalObj.push(d);\n        }\n\n        obj3[d[0]] = ar;\n      } else {\n        let ar = obj3[d[0]];\n\n        if (ar.includes(d[1]) == false) {\n          ar.push(d[1]);\n\n          finalObj.push(d);\n        }\n      }\n    });\n\n    if (props.formData.View === \"0\") {\n      if (finalObj.length === 12) {\n        for (let i = 0, j = 2; i < finalObj.length; i = i + 3, j = j + 3) {\n          let temp = finalObj[i];\n          finalObj[i] = finalObj[j];\n          finalObj[j] = temp;\n        }\n      } else if (finalObj.length === 8) {\n        let thirdVal = finalObj[2][1];\n        if (thirdVal === \"Margin^&1^&4\") {\n          for (let i = 0, j = 1; i < finalObj.length; i += 2, j = i + 1) {\n            let temp = finalObj[i];\n            finalObj[i] = finalObj[j];\n            finalObj[j] = temp;\n          }\n        }\n      }\n    }\n\n    newHeaders.map((data) => {\n      let i = newHeaders.indexOf(data);\n      let subArray = [];\n      finalObj?.map(([key, value]) => {\n        if (key.includes(data.accessorKey)) {\n          let obj = {\n            id: key + \"_\" + value,\n            header: value.split(\"^&\")[0],\n            accessorKey: key + \"_\" + value,\n            Cell: ({ cell }) => {\n              return (\n                <>\n                  <div\n                    className={\n                      key.split(\"_\")[0] == \"total\"\n                        ? \"total\"\n                        : parseInt(key.split(\"_\")[1]) % 2 == 0\n                        ? \"even\"\n                        : \"odd\"\n                    }\n                  >\n                    <span>\n                      {cell.column.id == \"name\" ? (\n                        <span title={cell.getValue()}>\n                          {icons[cell.row.original[\"name\"]]} {cell.getValue()}\n                        </span>\n                      ) : value.includes(\"\") ? (\n                        <>\n                          <div\n                            class=\"align right\"\n                            title={numberWithCommas(cell.getValue())}\n                          >\n                            {/* {numberWithCommas(cell.getValue())} */}\n                          </div>\n                        </>\n                      ) : (\n                        <div\n                          class=\"align right\"\n                          title={numberWithCommas(cell.getValue())}\n                        >\n                          {numberWithCommas(cell.getValue())}{\" \"}\n                        </div>\n                      )}\n                    </span>\n                    {cell.getValue()}\n                  </div>\n                </>\n              );\n            },\n          };\n          subArray.push(obj);\n          newHeaders[i].columns = subArray;\n        } else {\n          if (!(data.accessorKey.split(\"_\").length > 2)) {\n            let obj = {\n              id: data.accessorKey,\n              header: \"\",\n              accessorKey: data.accessorKey,\n              columns: [\n                {\n                  id: data.accessorKey,\n                  header: \"\",\n                  accessorKey: data.accessorKey,\n                  Cell: ({ cell }) => {\n                    return (\n                      <>\n                        <div\n                          className={\n                            key.split(\"_\")[0] == \"total\"\n                              ? \"total\"\n                              : parseInt(key.split(\"_\")[1]) % 2 == 0\n                              ? \"even\"\n                              : \"odd\"\n                          }\n                          title={cell.getValue()}\n                        >\n                          {/* {icons[cell.row.original[\"name\"]]} {cell.getValue()} */}\n                          {cell.getValue()}\n                        </div>\n                      </>\n                    );\n                  },\n                },\n              ],\n            };\n            newHeaders[i].columns = [obj];\n          }\n        }\n      });\n    });\n\n    // newHeaders.map((data) => {\n    //   // Check if this is the \"Hours\" section\n    //   if (data.accessorKey === \"Hours\") {\n    //     // Rearrange the columns within the \"Hours\" section\n    //     const newColumnsOrder = [\n    //       \"Bill Alloc\",\n    //       \"Allocs Wk Var\",\n    //       \"Bill Actual\",\n    //       \"Actuals Wk Var\",\n    //       \"Variance\",\n    //       \"Variance%\",\n    //     ];\n\n    //     // Rearrange the columns based on the new order\n    //     data.columns.sort((a, b) => {\n    //       const indexA = newColumnsOrder.indexOf(a.header);\n    //       const indexB = newColumnsOrder.indexOf(b.header);\n    //       return indexA - indexB;\n    //     });\n    //   }\n    // });\n\n    newHeaders.map((data) => {\n      let i = newHeaders.indexOf(data);\n      let count = 0;\n      data.columns.map((param) => {\n        let j = newHeaders[i].columns.indexOf(param);\n        newHeaders[i].columns[j].columns = [];\n        count++;\n        filteredThirdHeaders.map(([key, value]) => {\n          if (key.includes(data.accessorKey)) {\n            if (\n              param.header == \"Margin\" &&\n              (key.includes(\"GM\") || key.includes(\"marVariance\"))\n            ) {\n              let obj1 = {\n                id: key + \"_\" + value + \"_\" + count,\n                header: value,\n                accessorKey: key,\n                Cell: ({ cell }) => {\n                  return (\n                    <>\n                      <div\n                        className={\n                          key.split(\"_\")[0] == \"total\"\n                            ? \"total\"\n                            : parseInt(key.split(\"_\")[1]) % 2 == 0\n                            ? \"even\"\n                            : \"odd\"\n                        }\n                        title={cell.getValue()}\n                      >\n                        {cell.getValue()}\n                      </div>\n                    </>\n                  );\n                },\n              };\n              newHeaders[i].columns[j].columns.push(obj1);\n            }\n            if (\n              param.header == \"Revenue\" &&\n              (key.includes(\"Rev\") || key.includes(\"revVariance\"))\n            ) {\n              let obj2 = {\n                id: key + \"_\" + value + \"_\" + count,\n                header: value,\n                accessorKey: key,\n                Cell: ({ cell }) => {\n                  return (\n                    <>\n                      <div\n                        className={\n                          key.split(\"_\")[0] == \"total\"\n                            ? \"total\"\n                            : parseInt(key.split(\"_\")[1]) % 2 == 0\n                            ? \"even\"\n                            : \"odd\"\n                        }\n                        title={cell.getValue()}\n                      >\n                        {cell.getValue()}\n                      </div>\n                    </>\n                  );\n                },\n              };\n              //  thirdSubArray.push(obj);\n              newHeaders[i].columns[j].columns.push(obj2);\n\n              // newHeaders[i].columns[j].columns = thirdSubArray;\n            }\n            // else if(param.header == \"Hours\" && !key.includes('Rev') && !(key.includes('GM') || key.includes('variance'))){\n            if (\n              param.header == \"Hours\" &&\n              (key.includes(\"bill\") || key.includes(\"_variance\"))\n            ) {\n              let obj3 = {\n                id: key + \"_\" + value + \"_\" + count,\n                header: value,\n                accessorKey: key,\n                Cell: ({ cell }) => {\n                  return (\n                    <>\n                      <div\n                        className={\n                          key.split(\"_\")[0] == \"total\"\n                            ? \"total\"\n                            : parseInt(key.split(\"_\")[1]) % 2 == 0\n                            ? \"even\"\n                            : \"odd\"\n                        }\n                        title={cell.getValue()}\n                      >\n                        {cell.getValue()}\n                      </div>\n                    </>\n                  );\n                },\n              };\n\n              // let filteredObj = obj.filter(\n              //   ([key, value]) =>  key.includes('bill')\n              // );\n              // thirdSubArray.push(obj);\n              newHeaders[i].columns[j].columns.push(obj3);\n\n              // newHeaders[i].columns[j].columns = thirdSubArray;\n              //}\n            }\n            // newHeaders[i].columns[j].columns = thirdSubArray;\n          }\n        });\n      });\n    });\n\n    setColumns(newHeaders);\n    let values = [];\n\n    tableData?.map((d) => {\n      if (d.id != -1 && d.id != -3 && d.id != -2) {\n        Object.keys(d).forEach((ele) => {\n          d[ele] =\n            ([\"null\", \"undefined\"].includes(\"\" + d[ele]) == false &&\n              isNaN(d[ele])) ||\n            d[ele] === \"\" ||\n            d[ele] === null\n              ? d[ele]\n              : parseInt(d[ele]).toLocaleString(\"en-US\");\n        });\n\n        if (d.empStatus != null && d.empStatus != \"\") {\n          d.name = (\n            <div title={d.resource}>\n              {icons[d.empStatus]}\n              {d.resource}\n            </div>\n          );\n        } else {\n          d.name = <div title={d.name}>{d.name}</div>;\n        }\n        values.push(d);\n      }\n    });\n\n    let C = tableData?.filter((d) => d.id == -2 && d.id == -3);\n    let noData = tableData?.filter((d) => d.id == 999);\n    let A = jsonToTree(values, { children: \"subRows\" });\n    // setNodes(A.slice(1, A.length));\n    setNodes(jsonToTree(values, { children: \"subRows\" }));\n\n    // setColumns(data.tableData);\n    // });\n  };\n\n  useEffect(() => {}, [headers1]);\n\n  const reorderedThirdHeaders =\n    headers1 && typeof headers1 === \"Array\"\n      ? Object.keys(headers1)\n          .filter((key) => thirdHeaders.hasOwnProperty(key))\n          .reduce((acc, key) => ({ ...acc, [key]: thirdHeaders[key] }), [])\n      : [];\n\n  const numberWithCommas = (x) => {\n    var number = String(x);\n    if (number.includes(\".\") == true) {\n      if (number.includes(\".00\") == true) {\n        var decimalNumbers = number;\n        var num = Number(decimalNumbers);\n        let FdN = num != null && num?.toFixed(0);\n        let final = FdN.split(\".\");\n        final[0] = final[0].replace(/(?<=\\d)(?=(\\d{3})+(?!\\d|\\.))/g, \",\");\n\n        return final.join(\".\");\n      } else {\n        var decimalNumbers = number;\n        var num = Number(decimalNumbers);\n        let FdN = num != null && num?.toFixed(0);\n        let final = FdN.split(\".\");\n        final[0] = final[0].replace(/(?<=\\d)(?=(\\d{3})+(?!\\d|\\.))/g, \",\");\n\n        return final.join(\".\");\n      }\n    } else {\n      return (\n        number != null && number?.replace(/(?<=\\d)(?=(\\d{3})+(?!\\d|\\.))/g, \",\")\n      );\n    }\n  };\n\n  // const numberWithCommas = (x) => {\n  //   return x.toString().replace(/\\B(?<!\\.\\d*)(?=(\\d{3})+(?!\\d))/g, \",\");\n  // };\n\n  useEffect(() => {\n    colExpFlag ? setHiddenColumns({}) : colCollapse();\n  }, [colExpFlag]);\n\n  const colCollapse = () => {\n    let hiddenHeaders = [];\n    // refactor this\n    headers.map(([key, value]) => {\n      if (expandedCols.includes(key)) {\n        hiddenHeaders.push({ [key]: false });\n      }\n    });\n\n    setHiddenColumns(Object.assign({}, ...hiddenHeaders));\n  };\n\n  // const sortColumns = (cols) => {\n  //   let sortedColumns = cols;\n  //   let sort_keyHours = ['Bill Alloc', 'Allocs Wk Var', 'Bill Actual', 'Actuals Wk Var', 'Variance', 'Variance%'];\n  //   sortedColumns.map((column) => {\n  //     column.columns.map(col => {\n  //       if(col.header == \"Hours\"){\n  //         col.columns.sort(\n  //           (a, b) => sort_keyHours.indexOf(a.header) - sort_keyHours.indexOf(b.header),\n  //         )\n  //       }\n  //     })\n  //   });\n  // }\n\n  const jsonToTree = (flatArray, options) => {\n    options = {\n      id: \"uniqueId\",\n      parentId: \"parentId\",\n      children: \"subRows\",\n      ...options,\n    };\n    const dictionary = {}; // a hash table mapping to the specific array objects with their ids as key\n    const tree = [];\n    const children = options.children;\n    flatArray.forEach((node) => {\n      const nodeId = node[options.id];\n      const nodeParentId = node[options.parentId];\n\n      dictionary[nodeId] = {\n        [children]: [],\n        ...node,\n        ...dictionary[nodeId],\n      };\n      dictionary[nodeParentId] = dictionary[nodeParentId] || { [children]: [] }; // if it's not exist in dictionary, init an object with children property\n      dictionary[nodeParentId][children].push(dictionary[nodeId]); // add reference to current node object in parent node object\n    });\n    // find root nodes\n    Object.values(dictionary).forEach((obj) => {\n      if (typeof obj[options.id] === \"undefined\") {\n        tree.push(...obj[children]);\n      }\n    });\n    return tree;\n  };\n\n  return (\n    <div className=\"materialReactExpandableTable RevenueVarianceTable darkHeader toHead\">\n      {nodes?.length ? (\n        <MaterialReactTable\n          columns={columns}\n          data={nodes}\n          enableExpandAll={true} //hide expand all double arrow in column header\n          enableExpanding\n          enablePagination={false}\n          enableBottomToolbar={false}\n          enableTopToolbar={false}\n          enableColumnActions={false}\n          enableSorting={false}\n          // enableRowVirtualization={true}\n\n          filterFromLeafRows //apply filtering to all rows instead of just parent rows\n          initialState={{\n            expanded: false,\n            density: \"compact\",\n            columnVisibility: { ...hiddenColumns },\n            // enablePinning: true,\n            columnPinning: {\n              left: [\n                \"mrt-row-expand\",\n                \"name\",\n                \"project_ct\",\n\n                \"emp_cadre\",\n                \"supervisor\",\n              ],\n            },\n          }} //expand all rows by default\n          state={{ columnVisibility: { ...hiddenColumns } }}\n          //paginateExpandedRows={false} //When rows are expanded, do not count sub-rows as number of rows on the page towards pagination\n          // defaultColumn={{ minSize: 80, maxSize: 150, size: 40 }} //units are in px\n          // enableStickyHeader\n          muiTableContainerProps={{\n            sx: { maxHeight: \"50vh\", width: \"auto\", maxWidth: \"fit-content\" },\n          }}\n          muiTableBodyProps={{\n            sx: {\n              \"&\": {\n                // borderBottom: \"1px solid #ccc\",\n              },\n              \"& td\": {\n                borderRight: \"1px solid #ccc\",\n                height: \"22px\",\n                fontSize: \"11px\",\n                paddingTop: \"0px\",\n                paddingBottom: \"0px\",\n\n                // textAlign: \"right\",\n                // (cell) =>\n                //   // Check if the content of the cell can be converted to a number\n                //   !isNaN(parseFloat(cell)) && isFinite(cell) ? \"right\" : \"left\",\n              },\n            },\n          }}\n          muiTableHeadProps={{\n            sx: {\n              \"& th\": {\n                borderTop: \"1px solid #ccc\",\n                borderRight: \"1px solid #ccc\",\n                background: \"#f4f4f4 \",\n                fontSize: \"11px\",\n                padding: \"0px 8px\",\n              },\n            },\n          }}\n          // localization={{\n          //   noRecordsToDisplay: (\n          //     <span style={{ fontWeight: \"bold\" }}>No records found</span>\n          //   ),\n          // }}\n        ></MaterialReactTable>\n      ) : (\n        \"\"\n      )}\n    </div>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport { MultiSelect } from \"primereact/multiselect\";\n\nfunction RevenueMarginMultiselect(props) {\n  const {\n    setFormData,\n    formData,\n    measuresValidation,\n    setMeasuresValidation,\n    setSelectedCities,\n    selectedCities,\n  } = props;\n  console.log(formData);\n  console.log(formData.measures);\n\n  const groupedCities = [\n    {\n      label: \"Hours\",\n      code: \"Hou\",\n      items: [\n        { label: \"Bill Alloc\", value: \"billAlloc\" },\n        { label: \"Bill Actual\", value: \"billAct\" },\n        { label: \"Variance\", value: \"variance\" },\n        { label: \"Variance %\", value: \"variancePer\" },\n      ],\n    },\n    {\n      label: \"Revenue\",\n      code: \"Rev\",\n      items: [\n        { label: \"Planned\", value: \"plRev\" },\n        { label: \"Actual\", value: \"actRev\" },\n        { label: \"Variance\", value: \"revVariance\" },\n        { label: \"Variance %\", value: \"revVariancePer\" },\n        { label: \"MOM\", value: \"plMOM\" },\n        { label: \"MOM %\", value: \"plMOMPerc\" },\n      ],\n    },\n    {\n      label: \"Margin\",\n      code: \"Mar\",\n      items: [\n        { label: \"Planned GM\", value: \"plGM\" },\n        { label: \"Actual GM\", value: \"actGM\" },\n        { label: \"Variance\", value: \"marVariance\" },\n        { label: \"Variance %\", value: \"marVariancePer\" },\n      ],\n    },\n  ];\n  const allOptionValues = groupedCities.flatMap((group) =>\n    group.items.map((item) => item.value)\n  );\n\n  // setFormData((prev) => ({\n  //   ...prev,\n  //   measures: allOptionValues,\n  // }));\n  // setSelectedCities(\n  //   formData.measures.length === 0 ? allOptionValues : formData.measures\n  // );\n\n  useEffect(() => {\n    setFormData((prev) => ({\n      ...prev,\n      measures: allOptionValues,\n    }));\n  }, []);\n\n  const customValueRenderer = (selected) => {\n    return selected.length === groupedCities.length\n      ? \"<< ALL >>\"\n      : selected.length === 0\n      ? \"<< Please Select >>\"\n      : selected.map((label) => {\n          return selected.label > 1 ? label.label + \",\" : label.label;\n        });\n  };\n  const groupedItemTemplate = (option) => {\n    return (\n      <div className=\"flex align-items-center\">\n        <div>{option?.label}</div>\n      </div>\n    );\n  };\n\n  const isAllSelected = formData.measures.length === groupedCities.length;\n\n  const placeholderText = isAllSelected ? \"All  Selected\" : \"Please Select\";\n  return (\n    <>\n      <MultiSelect\n        value={formData.measures}\n        // defaultValue={ allOptionValues}\n        options={groupedCities}\n        // className=\"primeMultiSelectCustomIcon\"\n        className={` ${\n          measuresValidation ? \"error-block\" : \"primeMultiSelectCustomIcon\"\n        }`} // ArrowRenderer={ArrowRenderer}\n        valueRenderer={() => {\n          customValueRenderer;\n        }}\n        placeholder={placeholderText}\n        onChange={(e) => {\n          console.log(e?.value);\n          setFormData((prev) => ({\n            ...prev,\n            measures: e?.value,\n          }));\n          //   setSelectedCities(e?.value);\n        }}\n        maxSelectedLabels={3}\n        optionLabel=\"label\"\n        optionGroupLabel=\"label\"\n        optionGroupChildren=\"items\"\n        optionGroupTemplate={groupedItemTemplate}\n        optionTemplate={(option) => (\n          <div>\n            {option.label} - {option.value}\n          </div>\n        )} // Value rendere\n        // display=\"chip\"\n      />\n    </>\n  );\n}\n\nexport default RevenueMarginMultiselect;\n","import React, { useState, useEffect, useRef } from \"react\";\nimport axios from \"axios\";\nimport DatePicker from \"react-datepicker\";\nimport { MultiSelect } from \"react-multi-select-component\";\nimport { ReactSearchAutocomplete } from \"react-search-autocomplete\";\nimport { environment } from \"../../environments/environment\";\nimport moment from \"moment\";\nimport * as XLSX from \"xlsx\";\nimport { RiFileExcel2Line } from \"react-icons/ri\";\nimport { BsInfoCircle } from \"react-icons/bs\";\nimport \"./RevenueVarianceMaterialTable.scss\";\nimport {\n  FaChevronCircleDown,\n  FaChevronCircleUp,\n  FaCaretDown,\n  FaSearch,\n} from \"react-icons/fa\";\nimport { CCollapse } from \"@coreui/react\";\nimport Loader from \"../Loader/Loader\";\nimport RevenueVarianceMaterialTable from \"./RevenueVarianceMaterialTable\";\nimport SelectCustDialogBox from \"../Customer/SelectCustDialogBox\";\n\nimport GlobalValidation from \"../ValidationComponent/GlobalValidation\";\nimport RevenueMarginMultiselect from \"./RevenueMarginMultiselect\";\n\nimport { BiError } from \"react-icons/bi\";\nimport GlobalHelp from \"../PrimeReactTableComponent/GlobalHelp\";\nimport SavedSearchGlobal from \"../PrimeReactTableComponent/SavedSearchGlobal\";\nimport { useLocation } from \"react-router-dom\";\nimport ScreenBreadcrumbs from \"../Common/ScreenBreadcrumbs\";\n\nfunction RevenueVariance() {\n  const loggedUserId = localStorage.getItem(\"resId\");\n  const baseUrl = environment.baseUrl;\n\n  const [ActualDate, setActualDate] = useState(new Date());\n  const [measuresValidation, setMeasuresValidation] = useState(false);\n  const [csl, setCsl] = useState([]);\n  // const [selectedCsl, setSelectedCsl] = useState([]);\n  const [Company, setCompany] = useState([]);\n  const [month, setMonth] = useState(moment(moment()).startOf(\"month\")._d);\n  const [engCompany, setEngCompany] = useState([]);\n  const [dataAccess, setDataAccess] = useState();\n  const [data2, setData2] = useState([]);\n  const [rowCount, setRowCount] = useState(0);\n\n  const abortController = useRef(null);\n  let variance = 1;\n\n  const ArrowRenderer = ({ expanded }) => (\n    <>\n      {expanded ? (\n        <FaCaretDown className=\"chevronIcon\" />\n      ) : (\n        <FaCaretDown className=\"chevronIcon\" />\n      )}\n    </>\n  );\n  const [filterData, setFilterData] = useState([]);\n  const location = useLocation();\n  const searchParams = new URLSearchParams(location.search);\n  const id = searchParams.get(\"id\");\n  const pageurl = \"http://10.11.12.149:3000/#/pmo/revenueLeak\";\n  const page_Name = \"Plan Variance\";\n  const [editmsg, setEditAddmsg] = useState(false);\n  const FilterData = () => {\n    axios({\n      method: \"get\",\n      url:\n        baseUrl +\n        `/dashboardsms/savedsearch/FiltersData?saved_search_id=${\n          id === null ? 0 : id\n        }`,\n    }).then(function (res) {\n      const getData = res.data;\n      setFilterData(getData);\n    });\n  };\n\n  useEffect(() => {\n    FilterData();\n  }, []);\n\n  const initialValue = {\n    resBusinessUnit: [],\n    resType: \"-1\",\n    location: [],\n    resBillableType: \"0,1,2\",\n    loggedUser: loggedUserId,\n    contractterms: [],\n    Customer: \"-1\",\n    csl: [],\n    Dp: [],\n    assignedto: \"-1\",\n    eng: [],\n    View: \"0\",\n    Duration: \"3\",\n    FromDate: \"\",\n    actualdate: moment(ActualDate).format(\"YYYY-MM-DD\"),\n    Summary: \"bu\",\n    measures: [],\n  };\n\n  const [formData, setFormData] = useState(initialValue);\n  const [contractterms, setContractTerms] = useState([]);\n  const [visible, setVisible] = useState(false);\n  const [cheveronIcon, setCheveronIcon] = useState(FaChevronCircleUp);\n  const [business, setBusiness] = useState([]);\n  const [country, setCountry] = useState([]);\n  // const [selectcontractterms, setSelectContractTerms] = useState([]);\n  const [dp, setDp] = useState([]);\n  const [selectedDp, setSelectedDp] = useState([]);\n  const [issueDetails, setIssueDetails] = useState([]);\n  const [details, setDetails] = useState([]);\n  const [tableData, setTableData] = useState([]);\n  const [validationmessage, setValidationMessage] = useState(false);\n  const [columns, setColumns] = useState([]);\n  const [searching, setsearching] = useState(false);\n  const [loader, setLoader] = useState(false);\n  const [custVisible, setCustVisible] = useState(false);\n  const [custData, setcustData] = useState([]);\n  const [item, setItem] = useState([]);\n  const [selectedCities, setSelectedCities] = useState(null);\n  const [activeCustomers, setActiveCustomers] = useState([]);\n  const [activeCustomersList, setActiveCustomersList] = useState([]);\n  const [showTable, setShowTable] = useState(false);\n\n  const [warnMsg, setWarnMsg] = useState(\"\");\n  let flag = 0;\n  const ref = useRef([]);\n  const tableCoulmns = tableData.columns;\n  const regex = /\\d{4}_\\d{2}_\\d{2}_(billWkAlloc)/g;\n  const regexp = /\\d{4}_\\d{2}_\\d{2}_(billWkAct)/g;\n  const matches = tableCoulmns?.match(regex);\n  const matchess = tableCoulmns?.match(regexp);\n\n  //----------------------breadcrumbs----------------------\n\n  const [routes, setRoutes] = useState([]);\n  let textContent = \"Revenue Metrics\";\n  let currentScreenName = [\"Revenue And Margin Variance\"];\n\n  useEffect(() => {\n    getMenus();\n  }, []);\n\n  const getMenus = () => {\n    axios\n      .get(baseUrl + `/CommonMS/master/getMenus?loggedUserId=${loggedUserId}`)\n      .then((resp) => {\n        const getData = resp.data;\n        setData2(getData);\n\n        getData.forEach((item) => {\n          if (item.display_name === textContent) {\n            setRoutes([item]);\n          }\n        });\n        const revenueVarianceSubMenu = getData\n          .find((item) => item.display_name === \"Revenue Metrics\")\n          .subMenus.find(\n            (subMenu) => subMenu.display_name === \"Revenue & Margin Variance\"\n          );\n\n        const accessLevel = revenueVarianceSubMenu\n          ? revenueVarianceSubMenu.userRoles\n          : null;\n        setDataAccess(accessLevel);\n      });\n  };\n\n  useEffect(() => {\n    if (dataAccess == 641 || dataAccess == 690) {\n      handleCsl();\n      handleDp();\n    }\n  }, [dataAccess]);\n\n  const resourceData = () => {\n    axios({\n      method: \"get\",\n      url: baseUrl + `/ProjectMS/Issues/getAssignedData`,\n    }).then(function (response) {\n      var res = response.data;\n      setIssueDetails(res);\n    });\n  };\n  const handleCsl = () => {\n    const loggedUser = \"0\";\n    axios\n      .get(\n        dataAccess == 641\n          ? baseUrl + `/CommonMS/master/getCSLDPAE?loggedUserId=${loggedUserId}`\n          : baseUrl +\n              `/SalesMS/MasterController/getCslDropDownData?userId=${loggedUser}`\n      )\n      .then((res) => {\n        let custom = [];\n\n        let data = res.data;\n        data.length > 0 &&\n          data.forEach((e) => {\n            let cslObj = {\n              label: e.PersonName,\n              value: e.id,\n            };\n            custom.push(cslObj);\n          });\n\n        setCsl(custom);\n\n        setFormData((prevVal) => ({\n          ...prevVal,\n          [\"csl\"]: custom,\n        }));\n      });\n  };\n  const handleDp = () => {\n    const loggedUser = \"0\";\n    axios\n      .get(\n        dataAccess == 690\n          ? baseUrl + `/CommonMS/master/getDP?loggedUserId=${loggedUserId}`\n          : baseUrl + `/CommonMS/master/getDPDropDownData?userId=${loggedUser}`\n      )\n      .then((res) => {\n        let custom = [];\n        let data = res.data;\n        data.length > 0 &&\n          data.forEach((e) => {\n            let dpObj = {\n              label: e.PersonName,\n              value: e.id,\n            };\n            custom.push(dpObj);\n          });\n\n        setDp(custom);\n        setSelectedDp(custom);\n\n        setFormData((prevVal) => ({\n          ...prevVal,\n          [\"Dp\"]: custom,\n        }));\n      });\n  };\n\n  const getContractterms = () => {\n    axios\n      .get(baseUrl + `/customersms/Customersearch/getInvoicecontractterms`)\n      .then((Response) => {\n        let countries = [];\n        let fdata = Response.data;\n        fdata.length > 0 &&\n          fdata.forEach((e) => {\n            let contractobj = {\n              label: e.lkup_name,\n              value: e.id,\n            };\n            countries.push(contractobj);\n          });\n        setContractTerms(countries);\n        // setSelectContractTerms(countries);\n        setFormData((prevVal) => ({\n          ...prevVal,\n          [\"contractterms\"]: countries,\n        }));\n      });\n  };\n  const getCountries = () => {\n    axios.get(baseUrl + `/CostMS/cost/getCountries`).then((Response) => {\n      let countries = [];\n      let data = Response.data;\n      data.length > 0 &&\n        data.forEach((e) => {\n          let countryObj = {\n            label: e.country_name,\n            value: e.id,\n          };\n          countries.push(countryObj);\n        });\n      setCountry(countries);\n      const filteredCountries = countries.filter(\n        (country) => country.value !== 4\n      );\n      setFormData((prevVal) => ({\n        ...prevVal,\n        [\"location\"]: filteredCountries,\n      }));\n      // setSelectedCountry(countries);\n    });\n  };\n  const getBusinessUnit = async () => {\n    const resp = await axios({\n      url: baseUrl + `/CostMS/cost/getDepartments`,\n    });\n\n    let departments = resp.data;\n    departments.push({ value: 999, label: \"Non-Revenue Units\" });\n    setBusiness(departments);\n\n    setFormData((prevVal) => ({\n      ...prevVal,\n      [\"resBusinessUnit\"]: departments.filter((ele) => ele.value != 999),\n    }));\n\n    let filteredDeptData = [];\n    departments.forEach((data) => {\n      if (data.value != 999) {\n        filteredDeptData.push(data.value);\n      }\n    });\n  };\n  let businessLength = formData?.resBusinessUnit.length;\n\n  const handleEngCompany = () => {\n    axios\n      .get(baseUrl + `/ProjectMS/Engagement/getEngagementCompanay`)\n      .then((Response) => {\n        let comp = [];\n        let data = Response.data;\n        data.length > 0 &&\n          data.forEach((e) => {\n            let compObj = {\n              label: e.Company,\n              value: e.id,\n            };\n            comp.push(compObj);\n          });\n        setEngCompany(comp);\n        setCompany(comp);\n        setFormData((prevVal) => ({\n          ...prevVal,\n          [\"eng\"]: comp,\n        }));\n      });\n  };\n\n  const getActiveCustomers = () => {\n    axios\n      .get(\n        baseUrl +\n          `/revenuemetricsms/projections/geActiveCustomerList?BuIds=${formData[\n            \"resBusinessUnit\"\n          ]\n            .map((d) => d.value)\n            .toString()}`\n      )\n      .then((res) => {\n        let customersObj = [];\n        setActiveCustomersList(res.data);\n        let customers = res.data;\n        customers.length > 0 &&\n          customers.forEach((e) => {\n            let custObj = {\n              label: e.fullName,\n              value: e.id,\n            };\n            customersObj.push(custObj);\n          });\n        let activeCustomerValues = customersObj.map((customer) =>\n          customer.value.toString()\n        );\n        setActiveCustomers(activeCustomerValues);\n      });\n  };\n\n  useEffect(() => {\n    getBusinessUnit();\n    getCountries();\n    getContractterms();\n    resourceData();\n    handleCsl();\n    handleDp();\n    handleEngCompany();\n  }, []);\n  useEffect(() => {\n    getActiveCustomers();\n  }, [formData[\"resBusinessUnit\"]]);\n  const customValueRenderer = (selected) => {\n    return selected.length === business.length ||\n      selected.length === country.length ||\n      selected.length === Company.length\n      ? \"<< ALL >>\"\n      : selected.length === 0\n      ? \"<< Please Select >>\"\n      : selected.map((label) => {\n          return selected.length > 1 ? label.label + \",\" : label.label;\n        });\n  };\n  const handleAbort = () => {\n    abortController.current && abortController.current.abort();\n    setsearching(false);\n  };\n\n  //No Records Found==============\n\n  const norecords = (detail) => {\n    console.log(detail?.length);\n    const emptyObject = {};\n    if (detail?.length === 3) {\n      Object.keys(detail[2]).forEach((key, value) => {\n        emptyObject[key] = \"0\";\n\n        if (\n          key === \"resource\" ||\n          key === \"id\" ||\n          key === \"uniqueId\" ||\n          key === \"lvl\" ||\n          key === \"parentId\"\n        ) {\n          emptyObject[\"resource\"] = \"No Records Found\";\n          emptyObject[\"id\"] = \"999\";\n          emptyObject[\"uniqueId\"] = \"3\";\n          emptyObject[\"lvl\"] = \"1\";\n          emptyObject[\"parentId\"] = null;\n        }\n      });\n      detail[3] = emptyObject;\n    }\n  };\n\n  //================\n\n  const getTableData = () => {\n    setTableData([]);\n    let bool = GlobalValidation(ref);\n    if (bool) {\n      setWarnMsg(\n        <div class=\"statusMsg error\">\n          <BiError />\n          {\"Please select valid values for highlighted fields\"}\n        </div>\n      );\n      return;\n    }\n\n    !bool ? measuresValidation && setVisible(!visible) : \"\";\n\n    setWarnMsg(\"\");\n\n    const obj = {};\n    // JSON.parse(JSON.stringify(formData));\n\n    obj[\"buIds\"] = formData[\"resBusinessUnit\"].map((d) => d.value).toString();\n\n    obj[\"countryIds\"] = formData[\"location\"].map((d) => d.value).toString();\n\n    obj[\"resTyp\"] = formData[\"resTyp\"];\n    obj[\"month\"] =\n      formData[\"View\"] == 0\n        ? // moment(formData[\"month\"]).startOf(\"month\").format(\"YYYY-MM-DD\")\n          moment(month).format(\"YYYY-MM-DD\")\n        : null;\n    obj[\"duration\"] = formData[\"View\"] == 0 ? formData[\"Duration\"] : null;\n    obj[\"atd\"] = formData[\"View\"] == 1 ? formData[\"actualdate\"] : null;\n    // formData[\"actualdate\"];\n    // obj[\"measures\"] = formData[\"measures\"]?.map((d) => d.value).toString();\n    obj[\"measures\"] = formData[\"measures\"].toString();\n    obj[\"resType\"] = formData[\"resType\"];\n    obj[\"customerIds\"] =\n      formData[\"Customer\"] == \"select\"\n        ? selectedCust\n        : formData[\"Customer\"] == \"0\"\n        ? activeCustomers.toString()\n        : formData[\"Customer\"];\n    obj[\"resourceId\"] = formData[\"assignedto\"];\n    obj[\"summary\"] = formData[\"Summary\"];\n    obj[\"cslIds\"] =\n      dataAccess === 641\n        ? Number(loggedUserId) + 1\n        : Object.keys(formData[\"csl\"]).length == csl.length\n        ? \"-1\"\n        : formData[\"csl\"].map((d) => d.value).toString();\n    obj[\"dpIds\"] =\n      dataAccess == 690\n        ? Number(loggedUserId) + 1\n        : Object.keys(formData[\"Dp\"]).length == dp.length\n        ? \"-1\"\n        : formData[\"Dp\"].map((d) => d.value).toString();\n    obj[\"contTerms\"] =\n      Object.keys(formData[\"contractterms\"]).length == contractterms.length\n        ? \"-1\"\n        : formData[\"contractterms\"].map((d) => d.value).toString();\n    obj[\"engComp\"] =\n      Object.keys(formData[\"eng\"]).length == Company.length\n        ? \"-1\"\n        : formData[\"eng\"].map((d) => d.value).toString();\n    obj[\"isExport\"] = 0;\n    obj[\"userId\"] = loggedUserId;\n\n    if (\n      formData.measures == \"\" ||\n      formData.measures == 0 ||\n      formData.measures == []\n    ) {\n      setMeasuresValidation(true);\n    } else {\n      setMeasuresValidation(false);\n      const loaderTime = setTimeout(() => {\n        setsearching(true);\n      }, 2000);\n      setLoader(false);\n      axios({\n        method: \"post\",\n        url: baseUrl + `/revenuemetricsms/projections/postRevenueMargin`,\n        // url: `http://localhost:8090/revenuemetricsms/projections/postRevenueMargin`,\n        data: obj,\n      }).then((res) => {\n        let detail = res.data.tableData;\n        let cols = res.data.columns?.replaceAll(\"'\", \"\").split(\",\");\n        setDetails(detail);\n        norecords(detail);\n        setTableData(res.data);\n        setColumns(cols);\n        setValidationMessage(false);\n        setTimeout(() => {\n          // setsearching(false);\n          setLoader(true);\n        }, 1000);\n        setsearching(false);\n        setShowTable(true);\n        clearTimeout(loaderTime);\n        setVisible(!visible);\n        visible\n          ? setCheveronIcon(FaChevronCircleUp)\n          : setCheveronIcon(FaChevronCircleDown);\n      });\n    }\n  };\n  const handleOnExport = () => {\n    var wb = XLSX?.utils?.book_new(),\n      ws = XLSX?.utils?.json_to_sheet(tableData);\n    XLSX.utils.book_append_sheet(wb, ws, \"EngagementAllocations.xlsx\");\n    XLSX.writeFile(wb, \"EngagementAllocations.xlsx\");\n  };\n\n  const handleChange1 = (e) => {\n    const { id, name, value } = e.target;\n    if (name == \"Customer\" && value === \"select\") {\n      setCustVisible(true);\n      // setFormData((prev) => {\n      //   return { ...prev, [name]: selectedCust };\n      // });\n    }\n    setcustData();\n    setFormData((prev) => {\n      return { ...prev, [name]: value };\n    });\n    // selectedCust();\n  };\n  const [selectedItems, setSelectedItems] = useState([{}]);\n  const Customer = selectedItems?.map((d) => d?.id).toString();\n  useEffect(() => {}, [item], [Customer], [formData.serarchVals]);\n\n  const getcustData1 = () => {\n    axios\n      .get(baseUrl + `/CommonMS/master/geActiveCustomerList`)\n      .then((resp) => {\n        const data = resp.data;\n        setcustData(data);\n      })\n      .catch((resp) => {});\n  };\n\n  useEffect(() => {\n    let dd = document.getElementsByClassName(\"search-wrapper searchWrapper \");\n\n    let value = null;\n\n    // for (let i = 0; i < dd[0].children.length - 1; i++) {\n    //   if (i == 0) {\n    //     value = dd[0].children[i].innerText;\n    //   }\n\n    //   if (i < dd[0].children.length - 2) {\n    //     dd[0].children[i].remove();\n    //   }\n\n    //   if (i == dd[0].children.length - 2) {\n    //     dd[0].children[i].value = value;\n    //   }\n    // }\n  }, [formData.measures]);\n\n  useEffect(() => {\n    getcustData1();\n  }, [item]);\n\n  const selectedCust = JSON.parse(localStorage.getItem(\"selectedCust\"))\n    ?.map((d) => d.id)\n    ?.toString();\n\n  const exportExcel = () => {\n    import(\"xlsx\").then((xlsx) => {\n      let desiredColumnOrder = [];\n      let cols = [];\n\n      const wantedValues = details.map((item) => {\n        const obj = {};\n        columns.forEach((col) => {\n          const value = item[col];\n          if (typeof value === \"string\") {\n            const [extractedValue, ,] = value.split(\"^&\"); // Extract the value from the key metadata\n            obj[col] = extractedValue; // Assign the extracted value to the corresponding column\n          } else {\n            obj[col] = value;\n          }\n        });\n        return obj;\n      });\n\n      // Create an array of objects where each object represents a row\n      const rows = wantedValues.map((item) => {\n        const row = [];\n        columns.forEach((col) => {\n          row.push(item[col]);\n        });\n        return row;\n      });\n\n      // Create the worksheet\n      const worksheet = xlsx.utils.aoa_to_sheet([...rows]);\n\n      // Create the workbook\n      const workbook = { Sheets: { data: worksheet }, SheetNames: [\"data\"] };\n\n      // Convert the workbook to an Excel buffer\n      const excelBuffer = xlsx.write(workbook, {\n        bookType: \"xlsx\",\n        type: \"array\",\n      });\n\n      saveAsExcelFile(excelBuffer, \"MonthlyRevenueVariance\");\n    });\n  };\n  const saveAsExcelFile = (buffer, fileName) => {\n    import(\"file-saver\").then((module) => {\n      if (module && module.default) {\n        let EXCEL_TYPE =\n          \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8\";\n        let EXCEL_EXTENSION = \".xlsx\";\n        const data = new Blob([buffer], { type: EXCEL_TYPE });\n        module.default.saveAs(\n          data,\n          fileName + \"_export_\" + new Date().getTime() + EXCEL_EXTENSION\n        );\n      }\n    });\n  };\n  const HelpPDFName = \"RevenueMarginVariance.pdf\";\n  const Headername = \"Revenue And Margin Variance Help\";\n  const generateDropdownLabel = (selectedOptions, allOptions) => {\n    const selectedValues = selectedOptions.map((option) => option.value);\n    const allValues = allOptions.map((item) => item.value);\n\n    if (selectedValues.length === allValues.length) {\n      return \"<< ALL >>\";\n    } else {\n      return selectedOptions.map((option) => option.label).join(\", \");\n    }\n  };\n  return (\n    <div>\n      {measuresValidation ? (\n        <div className=\"statusMsg error \"> Please select Measures</div>\n      ) : (\n        \"\"\n      )}\n      {warnMsg}\n      <div className=\"col-md-12\">\n        <div className=\"pageTitle\">\n          <div className=\"childOne\"></div>\n          <div className=\"childTwo\">\n            <h2>Revenue And Margin Variance</h2>\n          </div>\n          <div className=\"childThree\"></div>\n        </div>\n      </div>\n      <ScreenBreadcrumbs\n        routes={routes}\n        currentScreenName={currentScreenName}\n      />\n\n      <div className=\"group mb-3 customCard\">\n        <div className=\"col-md-12 collapseHeader\">\n          <h2>Search Filters</h2>\n          <div className=\"helpBtn\">\n            <GlobalHelp pdfname={HelpPDFName} name={Headername} />\n          </div>\n          <div className=\"saveBtn\">\n            <SavedSearchGlobal\n              setEditAddmsg={setEditAddmsg}\n              pageurl={pageurl}\n              page_Name={page_Name}\n              payload={formData}\n            />\n          </div>{\" \"}\n          &nbsp;\n          <div\n            onClick={() => {\n              setVisible(!visible);\n              visible\n                ? setCheveronIcon(FaChevronCircleUp)\n                : setCheveronIcon(FaChevronCircleDown);\n            }}\n          >\n            <span>{cheveronIcon}</span>\n          </div>\n        </div>\n        <CCollapse visible={!visible}>\n          <div className=\"group-content row\">\n            <div className=\" col-md-3 mb-2\">\n              <div className=\"form-group row\">\n                <label className=\"col-5\" htmlFor=\"BU\">\n                  BU <span className=\"required error-text\">*</span>\n                </label>\n                <span className=\"col-1 p-0\">:</span>\n                <div\n                  className=\"col-6 multiselect\"\n                  ref={(ele) => {\n                    ref.current[0] = ele;\n                  }}\n                >\n                  <MultiSelect\n                    ArrowRenderer={ArrowRenderer}\n                    // valueRenderer={generateDropdownLabel}\n                    id=\"resBusinessUnit\"\n                    options={business}\n                    hasSelectAll={true}\n                    isLoading={false}\n                    shouldToggleOnHover={false}\n                    disableSearch={false}\n                    value={formData.resBusinessUnit}\n                    valueRenderer={() => {\n                      customValueRenderer(formData.resBusinessUnit);\n                    }}\n                    disabled={false}\n                    onChange={(s) => {\n                      // setSelectedBusiness(s);\n                      let filteredValues = [];\n                      s.forEach((d) => {\n                        filteredValues.push(d.value);\n                      });\n                      setFormData((prevVal) => ({\n                        ...prevVal,\n                        [\"resBusinessUnit\"]: s,\n                      }));\n                    }}\n                  />\n                </div>\n              </div>\n            </div>\n            <div className=\" col-md-3 mb-2\">\n              <div className=\"form-group row\">\n                <label className=\"col-5\" htmlFor=\"Country\">\n                  Country <span className=\"required error-text\">*</span>\n                </label>\n                <span className=\"col-1 p-0\">:</span>\n                <div\n                  className=\"col-6 multiselect\"\n                  ref={(ele) => {\n                    ref.current[1] = ele;\n                  }}\n                >\n                  <MultiSelect\n                    ArrowRenderer={ArrowRenderer}\n                    valueRenderer={generateDropdownLabel}\n                    id=\"location\"\n                    options={country}\n                    hasSelectAll={true}\n                    value={formData.location}\n                    disabled={false}\n                    onChange={(e) => {\n                      // setSelectedCountry(e);\n                      // let filteredCountry = [];\n                      // e.forEach((d) => {\n                      //   filteredCountry.push(d.value);\n                      // });\n                      setFormData((prevVal) => ({\n                        ...prevVal,\n                        [\"location\"]: e,\n                      }));\n                    }}\n                  />\n                </div>\n              </div>\n            </div>\n            <div className=\" col-md-3 mb-2\">\n              <div className=\"form-group row\">\n                <label className=\"col-5\" htmlFor=\"Customer\">\n                  Customer<span className=\"required error-text\">*</span>\n                </label>\n                <span className=\"col-1 p-0\">:</span>\n                <div className=\"col-6\">\n                  <select\n                    name=\"Customer\"\n                    id=\"searchType\"\n                    onChange={handleChange1}\n                    className=\"text\"\n                    ref={(ele) => {\n                      ref.current[2] = ele;\n                    }}\n                  >\n                    {selectedItems.length + \"selected\"}\n                    <option value=\"-1\">{\"<< ALL >>\"}</option>\n                    <option value=\"0\">Active Customer</option>\n                    <option value=\"select\">Select</option>\n                  </select>\n                </div>\n              </div>\n            </div>\n            <div className=\" col-md-3 mb-2\">\n              <div className=\"form-group row\">\n                <label className=\"col-5\" htmlFor=\"Res.Type\">\n                  Res.Type<span className=\"required error-text\">*</span>\n                </label>\n                <span className=\"col-1 p-0\">:</span>\n                <div className=\"col-6\">\n                  <select\n                    id=\"resType\"\n                    className=\"text\"\n                    ref={(ele) => {\n                      ref.current[3] = ele;\n                    }}\n                    onChange={(e) => {\n                      setFormData((prevVal) => ({\n                        ...prevVal,\n                        [\"resType\"]: e.target.value,\n                      }));\n                    }}\n                  >\n                    <option value=\"-1\">{\"<< ALL >>\"}</option>\n                    <option value=\"fte\">Employee</option>\n                    <option value=\"subk\">Contractor</option>\n                  </select>\n                </div>\n              </div>\n            </div>\n            <div className=\" col-md-3 mb-2\">\n              <div className=\"form-group row\">\n                <label className=\"col-5\" htmlFor=\"View\">\n                  View<span className=\"required error-text\">*</span>\n                </label>\n                <span className=\"col-1 p-0\">:</span>\n                <div className=\"col-6\">\n                  <select\n                    id=\"View\"\n                    onChange={(e) => {\n                      setFormData((prevVal) => ({\n                        ...prevVal,\n                        [\"View\"]: e.target.value,\n                      }));\n                    }}\n                  >\n                    <option value=\"0\">By Month</option>\n                    <option value=\"1\">Actual Till Date</option>\n                  </select>\n                </div>\n              </div>\n            </div>\n\n            {formData.View == \"1\" ? (\n              <div className=\" col-md-3 mb-2\">\n                <div className=\"form-group row\">\n                  <label className=\"col-5\" htmlFor=\"Actual Till\">\n                    Actual Till\n                  </label>\n                  <span className=\"col-1 p-0\">:</span>\n                  <div className=\"col-6 ActualTillRevenue\">\n                    <DatePicker\n                      id=\"actualdate\"\n                      autoComplete=\"off\"\n                      selected={ActualDate}\n                      onChange={(e) => {\n                        setFormData((prev) => ({\n                          ...prev,\n                          [\"actualdate\"]: moment(e).format(\"yyyy-MM-DD\"),\n                        }));\n                        setActualDate(e);\n                      }}\n                      dateFormat=\"dd-MMM-yyyy\"\n                      placeholderText=\"Begin Date\"\n                      onKeyDown={(e) => {\n                        e.preventDefault();\n                      }}\n                    />\n                  </div>\n                </div>\n              </div>\n            ) : (\n              <div className=\" col-md-3 mb-2\">\n                <div className=\"form-group row\">\n                  <label className=\"col-5\" htmlFor=\"Month\">\n                    Month\n                  </label>\n                  <span className=\"col-1 p-0\">:</span>\n                  <div className=\"col-6\">\n                    <DatePicker\n                      id=\"month\"\n                      selected={month}\n                      onChange={(e) => {\n                        setMonth(e);\n                      }}\n                      dateFormat=\"MMM-yyyy\"\n                      showMonthYearPicker\n                      onKeyDown={(e) => {\n                        e.preventDefault();\n                      }}\n                    />\n                  </div>\n                </div>\n              </div>\n            )}\n            {formData.View != \"1\" ? (\n              <div className=\" col-md-3 mb-2\">\n                <div className=\"form-group row\">\n                  <label className=\"col-5\" htmlFor=\"Duration\">\n                    Duration\n                  </label>\n                  <span className=\"col-1 p-0\">:</span>\n                  <div className=\"col-6\">\n                    <select\n                      id=\"Duration\"\n                      onChange={(e) => {\n                        setFormData((prevVal) => ({\n                          ...prevVal,\n                          [\"Duration\"]: e.target.value,\n                        }));\n                      }}\n                    >\n                      <option value={1}>1</option>\n                      <option value={2}>2</option>\n                      <option value={3} selected>\n                        3\n                      </option>\n                      <option value={4}>4</option>\n                      <option value={5}>5</option>\n                      <option value={6}>6</option>\n                      <option value={7}>7</option>\n                      <option value={8}>8</option>\n                      <option value={9}>9</option>\n                      <option value={10}>10</option>\n                      <option value={11}>11</option>\n                      <option value={12}>12</option>\n                    </select>\n                  </div>\n                </div>\n              </div>\n            ) : (\n              \"\"\n            )}\n            <div className=\" col-md-3 mb-2\">\n              <div className=\"form-group row\">\n                <label className=\"col-5\" htmlFor=\"Measures\">\n                  Measures <span className=\"required error-text\">*</span>\n                </label>\n                <span className=\"col-1 p-0\">:</span>\n                <div className=\" col-6\">\n                  <RevenueMarginMultiselect\n                    selectedCities={selectedCities}\n                    setMeasuresValidation={setMeasuresValidation}\n                    measuresValidation={measuresValidation}\n                    setSelectedCities={setSelectedCities}\n                    setFormData={setFormData}\n                    formData={formData}\n                  />\n                </div>\n              </div>\n            </div>\n            <div className=\" col-md-3 mb-2\">\n              <div className=\"form-group row\">\n                <label className=\"col-5\" htmlFor=\"Summary\">\n                  Summary\n                </label>\n                <span className=\"col-1 p-0\">:</span>\n                <div className=\"col-6\">\n                  <select\n                    id=\"Summary\"\n                    onChange={(e) => {\n                      setFormData((prevVal) => ({\n                        ...prevVal,\n                        [\"Summary\"]: e.target.value,\n                      }));\n                    }}\n                  >\n                    <option value=\"bu\">BU</option>\n                    <option value=\"customer\">Customer</option>\n                    <option value=\"resource\">Resource</option>\n                  </select>\n                </div>\n              </div>\n            </div>\n            <div className=\" col-md-3 mb-2\">\n              <div className=\"form-group row\">\n                <label className=\"col-5\" htmlFor=\"Contact Terms\">\n                  Contract Terms <span className=\"required error-text\">*</span>\n                </label>\n                <span className=\"col-1 p-0\">:</span>\n                <div\n                  className=\"col-6 multiselect\"\n                  ref={(ele) => {\n                    ref.current[3] = ele;\n                  }}\n                >\n                  <MultiSelect\n                    ArrowRenderer={ArrowRenderer}\n                    valueRenderer={generateDropdownLabel}\n                    id=\"contractterms\"\n                    options={contractterms}\n                    hasSelectAll={true}\n                    value={formData.contractterms}\n                    disabled={false}\n                    onChange={(e) => {\n                      // setSelectContractTerms(e);\n                      let filteredCountry = [];\n                      // e.forEach((d) => {\n                      //   filteredCountry.push(d.value);\n                      // });\n                      setFormData((prevVal) => ({\n                        ...prevVal,\n                        [\"contractterms\"]: e,\n                      }));\n                    }}\n                  />\n                </div>\n              </div>\n            </div>\n            <div className=\" col-md-3 mb-2\">\n              <div className=\"form-group row\">\n                <label className=\"col-5\" htmlFor=\"CSL\">\n                  CSL <span className=\"required error-text\">*</span>\n                </label>\n                <span className=\"col-1 p-0\">:</span>\n                <div\n                  className=\"col-6 multiselect\"\n                  ref={(ele) => {\n                    ref.current[4] = ele;\n                  }}\n                >\n                  <MultiSelect\n                    ArrowRenderer={ArrowRenderer}\n                    valueRenderer={generateDropdownLabel}\n                    id=\"csl\"\n                    options={csl}\n                    hasSelectAll={true}\n                    value={formData.csl}\n                    shouldToggleOnHover={false}\n                    disableSearch={false}\n                    // selected={selectedCsl}\n                    disabled={false}\n                    onChange={(e) => {\n                      // setSelectedCsl(e);\n                      // let filteredCustomer = [];\n                      // e.forEach((d) => {\n                      //   filteredCustomer.push(d.value);\n                      // });\n                      setFormData((prevVal) => ({\n                        ...prevVal,\n                        [\"csl\"]: e,\n                      }));\n                    }}\n                  />\n                </div>\n              </div>\n            </div>\n            <div className=\" col-md-3 mb-2\">\n              <div className=\"form-group row\">\n                <label className=\"col-5\" htmlFor=\"DP\">\n                  DP <span className=\"required error-text\">*</span>\n                </label>\n                <span className=\"col-1 p-0\">:</span>\n                <div\n                  className=\"col-6 multiselect\"\n                  ref={(ele) => {\n                    ref.current[5] = ele;\n                  }}\n                >\n                  <MultiSelect\n                    ArrowRenderer={ArrowRenderer}\n                    valueRenderer={generateDropdownLabel}\n                    id=\"Dp\"\n                    options={dp}\n                    hasSelectAll={true}\n                    value={formData.Dp}\n                    shouldToggleOnHover={false}\n                    disableSearch={false}\n                    // selected={selectedDp}\n                    disabled={false}\n                    onChange={(e) => {\n                      // setSelectedDp(e);\n                      // let filteredCustomer = [];\n                      // e.forEach((d) => {\n                      //   filteredCustomer.push(d.value);\n                      // });\n                      setFormData((prevVal) => ({\n                        ...prevVal,\n                        [\"Dp\"]: e,\n                      }));\n                    }}\n                  />\n                </div>\n              </div>\n            </div>\n            <div className=\" col-md-3 mb-2\">\n              <div className=\"form-group row\">\n                <label className=\"col-5\" htmlFor=\"Resource\">\n                  Resource\n                </label>\n                <span className=\"col-1 p-0\">:</span>\n                <div className=\"col-6\">\n                  <div className=\"autoComplete-container\">\n                    <ReactSearchAutocomplete\n                      items={issueDetails}\n                      type=\"text\"\n                      name=\"assignedto\"\n                      id=\"assignedto\"\n                      placeholder=\"Type minimum 3 characters\"\n                      issueDetails={issueDetails}\n                      resourceData={resourceData}\n                      className=\"AutoComplete\"\n                      onSelect={(e) => {\n                        setFormData((prevVal) => ({\n                          ...prevVal,\n                          assignedto: e.id,\n                        }));\n                      }}\n                      onClear={() => {\n                        setFormData((prevVal) => ({\n                          ...prevVal,\n                          assignedto: -1, // Clear the assignedto field by setting it to an empty value\n                        }));\n                      }}\n                      showIcon={false}\n                    />\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className=\" col-md-3 mb-2\">\n              <div className=\"form-group row\">\n                <label className=\"col-5\" htmlFor=\"Eng.Company\">\n                  Eng.Company <span className=\"required error-text\">*</span>\n                </label>\n                <span className=\"col-1 p-0\">:</span>\n                <div\n                  className=\"col-6 multiselect\"\n                  ref={(ele) => {\n                    ref.current[6] = ele;\n                  }}\n                >\n                  <MultiSelect\n                    ArrowRenderer={ArrowRenderer}\n                    valueRenderer={generateDropdownLabel}\n                    id=\"eng\"\n                    options={Company}\n                    hasSelectAll={true}\n                    value={formData.eng}\n                    disabled={false}\n                    shouldToggleOnHover={false}\n                    onChange={(e) => {\n                      // setEngCompany(e);\n                      // let filteredCountry = [];\n                      // e.forEach((d) => {\n                      //   filteredCountry.push(d.value);\n                      // });\n                      setFormData((prevVal) => ({\n                        ...prevVal,\n                        [\"eng\"]: e,\n                      }));\n                    }}\n                  />\n                </div>\n              </div>\n            </div>\n            {/* <div className=\" col-md-3 mb-2\">\n              <RevenueMarginMultiselect\n                selectedCities={selectedCities}\n                setSelectedCities={setSelectedCities}\n                setFormData={setFormData}\n                formData={formData}\n              />\n            </div> */}\n            <div className=\"col-md-12 col-sm-12 col-xs-12 btn-container center my-3\">\n              <button\n                type=\"submit\"\n                className=\"btn btn-primary\"\n                onClick={getTableData}\n              >\n                <FaSearch /> Search{\" \"}\n              </button>\n            </div>\n          </div>\n        </CCollapse>\n        {searching ? (\n          <Loader setsearching={setsearching} handleAbort={handleAbort} />\n        ) : (\n          \"\"\n        )}\n      </div>\n      {loader ? (\n        <div className=\"col-md-12   \">\n          <div className=\"highlightHeading\">\n            <span>\n              No. of{\" \"}\n              {formData.Summary == \"bu\"\n                ? \"BUs\"\n                : formData.Summary == \"customer\"\n                ? \"Customers\"\n                : formData.Summary == \" resource\"\n                ? \"Resources\"\n                : \"\"}\n              : <b>{rowCount}</b>\n            </span>\n          </div>\n\n          <div className=\"col-md-12 \">\n            <div align=\" right \">\n              <RiFileExcel2Line\n                size=\"1.5em\"\n                title=\"Export to Excel\"\n                style={{ color: \"green\" }}\n                cursor=\"pointer\"\n                onClick={exportExcel}\n              />\n            </div>\n            <div>\n              <span>\n                {matches || matchess ? (\n                  <span style={{ color: \"#9d7c42\", fontStyle: \"italic\" }}>\n                    <BsInfoCircle /> Allocs Wk Var and Actuals Wk Var: Indicates\n                    the variance from recent Saturday numbers, Month Over Month\n                    (MOM) = Month - Prev Month\n                  </span>\n                ) : (\n                  \"\"\n                )}\n              </span>\n            </div>\n          </div>\n        </div>\n      ) : (\n        \"\"\n      )}\n\n      <div className=\"col-md-12 EngagementDetails\">\n        <RevenueVarianceMaterialTable\n          enableRowVirtualization={true}\n          data={tableData}\n          expandedCols={[\"emp_cadre\", \"supervisor\", \"project_ct\"]}\n          colExpandState={[\"0\", \"0\", \"name\"]}\n          formData={formData}\n          setFormData={setFormData}\n          setRowCount={setRowCount}\n        />\n      </div>\n\n      <SelectCustDialogBox\n        flag={flag}\n        variance={variance}\n        visible={custVisible}\n        setVisible={setCustVisible}\n        setSelectedItems={setSelectedItems}\n        selectedItems={selectedItems}\n        dataAccess={dataAccess}\n        activeCustomersList={activeCustomersList}\n      />\n    </div>\n  );\n}\n\nexport default RevenueVariance;\n"],"names":["createSvgIcon","_jsx","d","RevenueVarianceMaterialTable","props","icons","fte0","src","fte_inactive","alt","style","height","title","fte1","fte_active","fte2","fte_notice","subk0","subk_inactive","subk1","subk_active","subk2","subk_notice","data","expandedCols","colExpandState","setRowCount","useState","nodes","setNodes","columns","setColumns","hiddenColumns","setHiddenColumns","colExpFlag","setColumnExpFlag","headers","setHeaders","headers1","setHeaders1","columnName","nameRowCount","filter","row","length","useEffect","getData","count","expandColumnClass","IconExpand","tableData","replaceAll","split","secondHeaders","id","thirdHeaders","console","log","includes","colArr","newHeaders","hiddenHeaders","obj","obj1","i","colVal","trim","firstData","filteredHeaders","Object","entries","value","map","key","push","forEach","newObject","assign","index","accessorKey","lastIndexOf","header","enableColumnActions","enableHiding","Header","column","className","IconButton","onClick","prev","Cell","empStatus","cell","cellValue","getValue","formattedValue","isNaN","numberWithCommas","original","Done","fontSize","Block","Warning","parentId","subHeaders","perSubHeaders","filteredSubHeaders","filteredThirdHeaders","sort","newSecondRow","obj3","finalObj","undefined","ar","formData","View","j","temp","indexOf","subArray","parseInt","class","param","obj2","values","keys","ele","toLocaleString","name","resource","jsonToTree","children","hasOwnProperty","reduce","acc","x","number","String","decimalNumbers","final","num","Number","toFixed","replace","join","colCollapse","flatArray","options","dictionary","tree","node","nodeId","nodeParentId","enableExpandAll","enableExpanding","enablePagination","enableBottomToolbar","enableTopToolbar","enableSorting","filterFromLeafRows","initialState","expanded","density","columnVisibility","columnPinning","left","state","muiTableContainerProps","sx","maxHeight","width","maxWidth","muiTableBodyProps","borderRight","paddingTop","paddingBottom","muiTableHeadProps","borderTop","background","padding","setFormData","measuresValidation","setMeasuresValidation","setSelectedCities","selectedCities","measures","groupedCities","label","code","items","allOptionValues","flatMap","group","item","placeholderText","valueRenderer","placeholder","onChange","e","maxSelectedLabels","optionLabel","optionGroupLabel","optionGroupChildren","optionGroupTemplate","option","optionTemplate","loggedUserId","localStorage","getItem","baseUrl","environment","Date","ActualDate","setActualDate","csl","setCsl","Company","setCompany","moment","startOf","_d","month","setMonth","setEngCompany","dataAccess","setDataAccess","setData2","rowCount","abortController","useRef","ArrowRenderer","setFilterData","location","useLocation","URLSearchParams","search","get","setEditAddmsg","axios","method","url","then","res","initialValue","resBusinessUnit","resType","resBillableType","loggedUser","contractterms","Customer","Dp","assignedto","eng","Duration","FromDate","actualdate","format","Summary","setContractTerms","visible","setVisible","FaChevronCircleUp","cheveronIcon","setCheveronIcon","business","setBusiness","country","setCountry","dp","setDp","setSelectedDp","issueDetails","setIssueDetails","details","setDetails","setTableData","setValidationMessage","searching","setsearching","loader","setLoader","custVisible","setCustVisible","setcustData","activeCustomers","setActiveCustomers","activeCustomersList","setActiveCustomersList","setShowTable","warnMsg","setWarnMsg","ref","tableCoulmns","matches","match","matchess","routes","setRoutes","getMenus","resp","display_name","revenueVarianceSubMenu","find","subMenus","subMenu","accessLevel","userRoles","handleCsl","handleDp","resourceData","response","custom","cslObj","PersonName","prevVal","dpObj","getBusinessUnit","departments","filteredDeptData","Response","countries","countryObj","country_name","filteredCountries","fdata","contractobj","lkup_name","comp","compObj","toString","customersObj","customers","custObj","fullName","activeCustomerValues","customer","selectedItems","setSelectedItems","serarchVals","document","getElementsByClassName","catch","selectedCust","JSON","parse","saveAsExcelFile","buffer","fileName","module","default","Blob","type","saveAs","getTime","generateDropdownLabel","selectedOptions","allOptions","selectedValues","allValues","ScreenBreadcrumbs","currentScreenName","GlobalHelp","pdfname","SavedSearchGlobal","pageurl","page_Name","payload","FaChevronCircleDown","htmlFor","current","hasSelectAll","isLoading","shouldToggleOnHover","disableSearch","selected","disabled","s","filteredValues","target","autoComplete","dateFormat","onKeyDown","preventDefault","showMonthYearPicker","ReactSearchAutocomplete","onSelect","onClear","showIcon","bool","GlobalValidation","loaderTime","setTimeout","detail","cols","emptyObject","norecords","clearTimeout","Loader","handleAbort","abort","align","size","color","cursor","xlsx","wantedValues","col","extractedValue","rows","workbook","Sheets","utils","aoa_to_sheet","SheetNames","excelBuffer","write","bookType","fontStyle","enableRowVirtualization","SelectCustDialogBox","flag","variance"],"sourceRoot":""}