{"version":3,"file":"static/js/9770.a9357a8b.chunk.js","mappings":"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","sources":["views/FullfimentComponent/SubkconversionSecondTable.js","views/FullfimentComponent/SubkConversionTable.js","views/FullfimentComponent/SubkConversionTrend.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { FilterMatchMode } from \"primereact/api\";\nimport { DataTable } from \"primereact/datatable\";\nimport { Column } from \"primereact/column\";\nimport \"primeicons/primeicons.css\";\nimport \"primereact/resources/themes/lara-light-indigo/theme.css\";\nimport \"primereact/resources/primereact.css\";\nimport \"primeflex/primeflex.css\";\nimport \"../PrimeReactTableComponent/PrimeReactTable.scss\";\nimport { InputText } from \"primereact/inputtext\";\nimport \"../FullfimentComponent/SubkConversionTrend.scss\";\n\nfunction SubkconversionSecondTable(props) {\n  const { data, rows } = props;\n  const [mainData, setMainData] = useState([]);\n  const [headerData, setHeaderData] = useState([]);\n  const [bodyData, setBodyData] = useState([]);\n\n  useEffect(() => {\n    setMainData(JSON.parse(JSON.stringify(data)));\n  }, [data]);\n\n  // console.log(mainData);\n  useEffect(() => {\n    if (mainData.length > 0) {\n      setHeaderData(mainData[0]);\n      setBodyData(mainData.splice(1));\n    }\n  }, [mainData]);\n\n  const filtersData = {\n    contains: { value: null, matchMode: FilterMatchMode.CONTAINS },\n  };\n\n  const [filters1, setFilters1] = useState({\n    global: filtersData[\"contains\"],\n  });\n\n  useEffect(() => {\n    setFilters1({\n      global: filtersData[\"contains\"],\n    });\n  }, [headerData]);\n\n  // console.log(\"in line 61\");\n  // console.log(filters1);\n  // console.log(\"in line 45\");\n  // console.log(data);\n\n  const financialImpactTT = (data) => {\n    return (\n      <div className=\"ellipsis\" data-toggle=\"tooltip\" title={data.customer}>\n        {data.customer}\n      </div>\n    );\n  };\n  const ChangeDept = (data) => {\n    return (\n      <div className=\"ellipsis\" data-toggle=\"tooltip\" title={data.department}>\n        {data.department}\n      </div>\n    );\n  };\n  const ChangeDp = (data) => {\n    return (\n      <div className=\"ellipsis\" data-toggle=\"tooltip\" title={data.dp}>\n        {data.dp}\n      </div>\n    );\n  };\n  const ChangeCsl = (data) => {\n    return (\n      <div className=\"ellipsis\" data-toggle=\"tooltip\" title={data.csl}>\n        {data.csl}\n      </div>\n    );\n  };\n  const ChangeEmpNumber = (data) => {\n    return (\n      <div\n        className=\"ellipsis\"\n        data-toggle=\"tooltip\"\n        title={data.employee_number}\n      >\n        {data.employee_number}\n      </div>\n    );\n  };\n  const ChangeprjMgr = (data) => {\n    return (\n      <div className=\"ellipsis\" data-toggle=\"tooltip\" title={data.prjMgr}>\n        {data.prjMgr}\n      </div>\n    );\n  };\n  const ChangeStrtDate = (data) => {\n    return (\n      <div\n        className=\"ellipsis\"\n        data-toggle=\"tooltip\"\n        title={data.allocation_start_dt}\n      >\n        {data.allocation_start_dt}\n      </div>\n    );\n  };\n  const ChangeEndDate = (data) => {\n    return (\n      <div\n        className=\"ellipsis\"\n        data-toggle=\"tooltip\"\n        title={data.allocation_end_dt}\n      >\n        {data.allocation_end_dt}\n      </div>\n    );\n  };\n  const ChangeProjects = (data) => {\n    return (\n      <div className=\"ellipsis\" data-toggle=\"tooltip\" title={data.projects}>\n        {data.projects}\n      </div>\n    );\n  };\n  const ChangeName = (data) => {\n    return (\n      <div\n        className=\"ellipsis\"\n        data-toggle=\"tooltip\"\n        title={data.resource_name}\n      >\n        {data.resource_name}\n      </div>\n    );\n  };\n  const ChangeDate = (data) => {\n    return (\n      <div className=\"ellipsis\" data-toggle=\"tooltip\" title={data.start_date}>\n        {data.start_date}\n      </div>\n    );\n  };\n  const ChangeSuper = (data) => {\n    return (\n      <div className=\"ellipsis\" data-toggle=\"tooltip\" title={data.supervisor}>\n        {data.supervisor}\n      </div>\n    );\n  };\n\n  // console.log(headerData);\n  const dynamicColumns = Object.keys(headerData)?.map((col, i) => {\n    return (\n      <Column\n        key={col}\n        body={\n          (col == \"customer\" && financialImpactTT) ||\n          (col == \"department\" && ChangeDept) ||\n          (col == \"dp\" && ChangeDp) ||\n          (col == \"csl\" && ChangeCsl) ||\n          (col == \"employee_number\" && ChangeEmpNumber) ||\n          (col == \"prjMgr\" && ChangeprjMgr) ||\n          (col == \"allocation_start_dt\" && ChangeStrtDate) ||\n          (col == \"allocation_end_dt\" && ChangeEndDate) ||\n          (col == \"projects\" && ChangeProjects) ||\n          (col == \"resource_name\" && ChangeName) ||\n          (col == \"start_date\" && ChangeDate) ||\n          (col == \"supervisor\" && ChangeSuper)\n        }\n        field={col}\n        header={headerData[col]}\n      ></Column>\n    );\n  });\n\n  const [globalFilterValue1, setGlobalFilterValue1] = useState(\"\");\n\n  const onGlobalFilterChange1 = (e) => {\n    const value = e.target.value;\n    let _filters1 = { ...filters1 };\n\n    // console.log(_filters1);\n\n    // console.log(_filters1);\n\n    _filters1[\"global\"].value = value;\n\n    setFilters1(_filters1);\n    setGlobalFilterValue1(value);\n  };\n\n  const renderHeader1 = () => {\n    return (\n      <div className=\"flex  flex-row-reverse\">\n        <span></span>\n        <span className=\"p-input-icon-left tableGsearch\">\n          <i className=\"pi pi-search\" />\n          <InputText\n            defaultValue={globalFilterValue1}\n            onChange={onGlobalFilterChange1}\n            placeholder=\"Keyword Search\"\n          />\n        </span>\n      </div>\n    );\n  };\n\n  const header1 = renderHeader1();\n\n  return (\n    <div>\n      <div\n        className=\" customCard card graph my-4 darkHeader\"\n        style={{ width: \"100%\", float: \"left\" }}\n      >\n        {Object.keys(headerData).length > 0 && (\n          <DataTable\n            paginatorTemplate=\"RowsPerPageDropdown FirstPageLink PrevPageLink CurrentPageReport NextPageLink LastPageLink\"\n            currentPageReportTemplate=\"{first} - {last} of {totalRecords}\"\n            rowsPerPageOptions={[10, 25, 50]}\n            value={bodyData}\n            paginator\n            showGridlines\n            rows={rows}\n            dataKey=\"id\"\n            filters={filters1}\n            header={header1}\n            responsiveLayout=\"scroll\"\n            emptyMessage=\"No Records found.\"\n            className=\"customerEngament primeReactDataTable subkcelltab\"\n          >\n            {dynamicColumns}\n          </DataTable>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default SubkconversionSecondTable;\n","import axios from \"axios\";\nimport React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport Loader from \"../Loader/Loader\";\nimport SubkconversionSecondTable from \"./SubkconversionSecondTable\";\n\nfunction SubkConversionTable(props) {\n  const { myCol, myCol1, formData, data1 } = props;\n  const [loader, setLoader] = useState(false);\n\n  const initialValue = {\n    CountryIds: \"6,5,3,8,7,1,2\",\n    colVal: myCol,\n    searchType: formData.searchType,\n    UserId: 0,\n    FromDate: formData.month,\n    Duration: formData.duration,\n    serarchVals: myCol1,\n    isExport: 0,\n  };\n\n  const searchHandle = () => {\n    axios({\n      method: \"post\",\n      // url: baseUrl + `/administrationms/subkconversiontrend/GetFteHCResDtls`,\n      data: initialValue,\n    })\n      .then(function (response) {\n        var response = response.data;\n\n        // let hData = [];\n        // let bData = [];\n        // for (let index = 0; index < response.length; index++) {\n        //     if (index == 0) {\n        //         hData.push(response[index]);\n        //     } else {\n        //         bData.push(response[index]);\n        //     }\n        // }\n        // setData(Headerdata.concat(bData));\n        // setBodyData(bData);\n        // setSearchApiData(bData);\n        // setLoader(true)\n        // setLoader(false);\n\n        // setTimeout(() => {\n        //   setLoader(false);\n        // }, 1000);\n      })\n      .catch(function (response) {\n        console.log(response);\n      });\n  };\n\n  useEffect(() => {\n    searchHandle();\n  }, []);\n\n  // console.log(data1);\n\n  return (\n    <div>\n      {loader ? <Loader /> : \"\"}\n      <SubkconversionSecondTable data={data1} rows={10} />\n    </div>\n  );\n}\nexport default SubkConversionTable;\n","import React, { useEffect, useRef, useState } from \"react\";\nimport DatePicker from \"react-datepicker\";\nimport { MultiSelect } from \"react-multi-select-component\";\nimport {\n  FaCaretDown,\n  FaChevronCircleDown,\n  FaChevronCircleUp,\n  FaSearch,\n} from \"react-icons/fa\";\nimport { CCollapse } from \"@coreui/react\";\nimport axios from \"axios\";\nimport { environment } from \"../../environments/environment\";\nimport moment from \"moment\";\nimport { AiFillWarning } from \"react-icons/ai\";\nimport { ReactSearchAutocomplete } from \"react-search-autocomplete\";\nimport Loader from \"../Loader/Loader\";\nimport SubkConversionTable from \"./SubkConversionTable\";\nimport SelectCustDialogBox from \"../Customer/SelectCustDialogBox\";\nimport GlobalValidation from \"../ValidationComponent/GlobalValidation\";\nimport { BiCheck } from \"react-icons/bi\";\nimport ScreenBreadcrumbs from \"../Common/ScreenBreadcrumbs\";\n\nfunction SubkConversionTrend() {\n  const baseUrl = environment.baseUrl;\n  const selectRef = useRef(null);\n  const [business, setBusiness] = useState([]);\n  const [selectedBusiness, setSelectedBusiness] = useState([]);\n  const [country, setCountry] = useState([]);\n  const [selectedCountry, setSelectedCountry] = useState([]);\n  const [selectType, setSelectType] = useState(\"BusinessUnit\");\n  const [project, setProject] = useState([]);\n  const [visible, setVisible] = useState(false);\n  const [cheveronIcon, setCheveronIcon] = useState(FaChevronCircleUp);\n  const [validationmessage, setValidationMessage] = useState(false);\n  const [item, setItem] = useState([]);\n  const [loader, setLoader] = useState(false);\n  const [csl, setCsl] = useState([]);\n  const [selectedCsl, setSelectedCsl] = useState([]);\n  const [delivery, setDelivery] = useState([]);\n  const [selectedDelivery, setSelectedDelivery] = useState([]);\n  const [tableopen, setTableOpen] = useState(false);\n  var date = new Date();\n  var firstDay = new Date(date.getFullYear(), date.getMonth() - 4, 1);\n  console.log(firstDay);\n  const [month, setMonth] = useState(moment(moment().startOf(\"month\"))._d);\n\n  var maxDate = new Date();\n  var year = maxDate.getFullYear();\n  var month1 = maxDate.getMonth();\n  var minDate = new Date(year, month1 - 11);\n  var maxDate = new Date(year, month1 + 11);\n\n  const [data, setData] = useState([]);\n  const [data1, setData1] = useState([]);\n  const [searching, setsearching] = useState(false);\n  console.log(searching);\n  const [open, setOpen] = useState(false);\n  const [headerData, setHeaderData] = useState([]);\n  const [bodyData, setBodyData] = useState([]);\n  const [displayTable, setDisplayTable] = useState(null);\n  const [tabHeaders, setTabHeaders] = useState([]);\n  const [tableTitle, srtTableTitle] = useState();\n  const [custVisible, setCustVisible] = useState(false);\n  const [refresh, setRefresh] = useState(false);\n\n  const ref = useRef([]);\n  const abortController = useRef(null);\n\n  const [duration, setDuration] = useState([]);\n\n  const ArrowRenderer = ({ expanded }) => (\n    <>\n      {expanded ? (\n        <FaCaretDown className=\"chevronIcon\" />\n      ) : (\n        <FaCaretDown className=\"chevronIcon\" />\n      )}\n    </>\n  );\n\n  const initialValue = {\n    month: moment(new Date()).startOf(\"month\").format(\"YYYY-MM-DD\"),\n    duration: \"1\",\n    countries: \"6,5,3,8,7,1,2\",\n    searchType: \"BusinessUnit\",\n    busUnits: \"BusinessUnit\",\n    isExport: \"0\",\n    UserId: \"512\",\n  };\n  const [formData, setFormData] = useState(initialValue);\n  const getAbsoluteMonths = (momentDate) => {\n    let mont = Number(moment(momentDate).format(\"MM\"));\n    let yea = Number(moment(momentDate).format(\"YYYY\"));\n    return mont + yea * 12;\n  };\n\n  const calculateDuration = (e) => {\n    let startMonths = getAbsoluteMonths(e);\n    let endMonths = getAbsoluteMonths(moment());\n    let monthDifference = endMonths - startMonths;\n    monthDifference += 1;\n    let dr = [];\n    for (let i = 1; i <= monthDifference; i++) {\n      dr.push(i);\n    }\n    setDuration(dr);\n  };\n\n  useEffect(() => {\n    calculateDuration(month);\n  }, []);\n\n  const getBusinessUnit = () => {\n    axios.get(baseUrl + `/CostMS/cost/getDepartments`).then((Response) => {\n      let countries = [];\n      let data = Response.data;\n      data.length > 0 &&\n        data.forEach((e) => {\n          let countryObj = {\n            label: e.label,\n            value: e.value,\n          };\n          countries.push(countryObj);\n        });\n      setBusiness(countries);\n      let filteredDeptData = [];\n      countries.push({ value: 999, label: \"Non-Revenue Units\" });\n      countries.forEach((data) => {\n        if (data.value != 0) {\n          filteredDeptData.push(data.value);\n        }\n      });\n      setSelectedBusiness(countries.filter((ele) => ele.value != 0));\n      setFormData((prevVal) => ({\n        ...prevVal,\n        [\"busUnits\"]: filteredDeptData.toString(),\n      }));\n    });\n  };\n\n  const getCountries = () => {\n    axios.get(baseUrl + `/CostMS/cost/getCountries`).then((Response) => {\n      let countries = [];\n      let data = Response.data;\n      data.length > 0 &&\n        data.forEach((e) => {\n          let countryObj = {\n            label: e.country_name,\n            value: e.id,\n          };\n          if (e.country_name !== \"NM\") {\n            countries.push(countryObj);\n          }\n        });\n      setCountry(countries);\n      let filteredDeptData = [];\n      countries.forEach((data) => {\n        if (data.value != 0) {\n          filteredDeptData.push(data.value);\n        }\n      });\n      setSelectedCountry(countries);\n      setFormData((prevVal) => ({\n        ...prevVal,\n        [\"countries\"]: filteredDeptData.toString(),\n      }));\n    });\n  };\n\n  const getDeliveryPartners = () => {\n    axios\n      .get(baseUrl + `/administrationms/subkconversiontrend/getdeliverypartner`)\n      .then((Response) => {\n        let deliver = [];\n        let data = Response.data;\n        data.length > 0 &&\n          data.forEach((e) => {\n            let deliverObj = {\n              label: e.PersonName,\n              value: e.id,\n            };\n            deliver.push(deliverObj);\n          });\n        setDelivery(deliver);\n        setSelectedDelivery(deliver.filter((ele) => ele.value != 0));\n        let filteredDelivery = [];\n        deliver.forEach((data) => {\n          if (data.value != 0) {\n            filteredDelivery.push(data.value);\n          }\n        });\n        setFormData((prevVal) => ({\n          ...prevVal,\n          [\"DP\"]: filteredDelivery.toString(),\n        }));\n      });\n  };\n\n  const getProjectdata = () => {\n    axios({\n      method: \"get\",\n      url: baseUrl + `/ProjectMS/Audit/getProjectNameandId`,\n    }).then(function (response) {\n      var resp = response.data;\n      setProject(resp);\n    });\n  };\n\n  const handleCsl = () => {\n    const loggedUserId = localStorage.getItem(\"resId\");\n    axios({\n      method: \"get\",\n      url:\n        baseUrl +\n        `/SalesMS/MasterController/getCslDropDownData?userId=${loggedUserId}`,\n    }).then((res) => {\n      let custom = [];\n      let data = res.data;\n      data.length > 0 &&\n        data.forEach((e) => {\n          let cslObj = {\n            label: e.PersonName,\n            value: e.id,\n          };\n          custom.push(cslObj);\n        });\n      setCsl(custom);\n      setSelectedCsl(custom.filter((ele) => ele.value != 0));\n      let filteredCsl = [];\n      custom.forEach((data) => {\n        if (data.value != 0) {\n          filteredCsl.push(data.value);\n        }\n      });\n      setFormData((prevVal) => ({\n        ...prevVal,\n        [\"csl\"]: filteredCsl.toString(),\n      }));\n    });\n  };\n\n  useEffect(() => {\n    getBusinessUnit();\n    getCountries();\n    getProjectdata();\n    handleCsl();\n    getDeliveryPartners();\n  }, [item]);\n\n  const handleChange = (e) => {\n    const { id, value } = e.target;\n    setOpen(false);\n    setSelectType(value);\n    setFormData({ ...formData, [id]: value });\n  };\n\n  const handleChange1 = (e) => {\n    const { name, value } = e.target;\n    if (name == \"Customer\" && value === \"select\") {\n      setCustVisible(true);\n    }\n    setFormData((prev) => {\n      return { ...prev, [name]: value };\n    });\n  };\n\n  useEffect(() => {\n    if (data.length > 0) {\n      let headers = Object.keys(data[0])\n        .filter((d) => d != \"id\" && d != \"lvl\")\n        .sort();\n      headers.splice(0, 0, headers.splice(headers.length - 2, 1)[0]);\n\n      setTabHeaders(headers);\n    }\n  }, [data]);\n\n  const GetFteHCResDtls = (val) => {\n    axios({\n      method: \"post\",\n      url: baseUrl + `/administrationms/subkconversiontrend/GetFteHCResDtls`,\n      data: {\n        FromDate: formData.month,\n        Duration: formData.duration,\n        CountryIds: formData.countries,\n        searchType: formData.searchType,\n        serarchVals:\n          val.b == 0\n            ? data\n                .filter((d) => d.id > 0)\n                .map((d) => d.id > 0 && d.id)\n                .toString()\n            : val.b,\n        isExport: 0,\n        UserId: 0,\n        colVal: val.a,\n      },\n    }).then((response) => {\n      var response = response.data;\n      let Headerdata = [\n        {\n          employee_number: \"Emp ID\",\n          resource_name: \"Name\",\n          start_date: \"DOJ\",\n          department: \"Department\",\n          projects: \"Projects\",\n          customer: \"Customers\",\n          supervisor: \"Supervisor\",\n          prjMgr: \"Project Manager\",\n          csl: \"CSL\",\n          dp: \"DP\",\n          allocation_start_dt: \"Alloc Start Date\",\n          allocation_end_dt: \"Alloc End Date\",\n        },\n      ];\n      let hData = [];\n      let bData = [];\n      for (let index = 0; index < response.length; index++) {\n        if (index == 0) {\n          hData.push(response[index]);\n        } else {\n          bData.push(response[index]);\n        }\n      }\n      setData1(Headerdata.concat(bData));\n      setLoader(false);\n      setTimeout(() => {\n        setRefresh(false);\n        setOpen(true);\n        setLoader(false);\n      }, 1000);\n      setHeaderData(hData);\n      setBodyData(bData);\n    });\n  };\n\n  const [myCol, setMyCol] = useState(\"\");\n  const [myCol1, setMyCol1] = useState(\"\");\n\n  const onclickHandler = (a, b) => {\n    setTableOpen(true);\n    setRefresh(false);\n    const temp = {};\n    temp[\"a\"] = a;\n    temp[\"b\"] = b;\n    setMyCol(a);\n    setMyCol1(b);\n    GetFteHCResDtls(temp);\n    srtTableTitle(a);\n  };\n\n  useEffect(() => {\n    console.log(myCol);\n  }, [myCol, myCol1]);\n\n  useEffect(() => {\n    console.log(data);\n  }, [data]);\n\n  const displayTableFnc = () => {\n    setDisplayTable(() => {\n      return data.map((element, index) => {\n        let tabData = [];\n        tabHeaders.forEach((inEle, inInd) => {\n          if (index === 0) {\n            let value = (\"\" + element[inEle]).includes(\"^&1\")\n              ? element[inEle].replaceAll(\"^&1\", \" \")\n              : element[inEle];\n            tabData.push(\n              <th\n                key={inInd}\n                style={{\n                  textAlign: \"center\",\n                  backgroundColor: \"#eeeeee\",\n                }}\n                title={element[inEle]}\n              >\n                {value}\n              </th>\n            );\n          } else {\n            if (index === 1) {\n              tabData.push(\n                <td align={inInd > 0 ? \"right\" : \"left\"}>\n                  <b>\n                    {inEle == \"avarage\" ? (\n                      <span\n                        onClick={() => {\n                          inInd > 0 && element[inEle] != 0\n                            ? onclickHandler(inEle, element.id)\n                            : null;\n                        }}\n                        title={element[inEle]}\n                      >\n                        {element[inEle]}\n                      </span>\n                    ) : (\n                      <span\n                        style={{\n                          cursor:\n                            inInd > 0 && element[inEle] != 0 ? \"pointer\" : \"\",\n                          color:\n                            inInd != 0 && element[inEle] != 0 ? \"#2e88c5\" : \"\",\n                          textDecoration:\n                            inInd != 0 && element[inEle] != 0\n                              ? \"underline\"\n                              : null,\n                        }}\n                        onClick={() => {\n                          inInd > 0 && element[inEle] != 0\n                            ? onclickHandler(inEle, element.id)\n                            : null;\n                        }}\n                        title={element[inEle]}\n                      >\n                        {element[inEle]}\n                      </span>\n                    )}\n                  </b>\n                </td>\n              );\n            } else {\n              tabData.push(\n                <td align={inInd > 0 ? \"right\" : \"left\"}>\n                  {inEle == \"avarage\" ? (\n                    <span\n                      onClick={() => {\n                        inInd > 0 && element[inEle] != 0\n                          ? onclickHandler(inEle, element.id)\n                          : null;\n                      }}\n                      title={element[inEle]}\n                    >\n                      {element[inEle]}\n                    </span>\n                  ) : (\n                    <span\n                      style={{\n                        cursor:\n                          inInd > 0 && element[inEle] != 0 ? \"pointer\" : \"\",\n                        color:\n                          inInd != 0 && element[inEle] != 0 ? \"#2e88c5\" : \"\",\n                        textDecoration:\n                          inInd != 0 && element[inEle] != 0 ? \"underline\" : \"\",\n                      }}\n                      onClick={() => {\n                        inInd > 0 && element[inEle] != 0\n                          ? onclickHandler(inEle, element.id)\n                          : null;\n                      }}\n                      title={element[inEle]}\n                    >\n                      {element[inEle]}\n                    </span>\n                  )}\n                </td>\n              );\n            }\n          }\n        });\n        return (\n          <tr\n            style={{ backgroundColor: index === 1 ? \"#f5d5a7 \" : \"#d8eaeac4\" }}\n            key={index}\n          >\n            {tabData}\n          </tr>\n        );\n      });\n    });\n  };\n\n  useEffect(() => {\n    displayTableFnc();\n  }, [tabHeaders]);\n\n  const [selectedItems, setSelectedItems] = useState([{}]);\n  const Customer = selectedItems?.map((d) => d?.id).toString();\n\n  useEffect(() => {}, [item], [Customer], [formData.serarchVals]);\n\n  const [columns, setColumns] = useState([]);\n  console.log(columns);\n  const [details, setDetails] = useState([]);\n  console.log(details);\n\n  const selectedCust = JSON.parse(localStorage.getItem(\"selectedCust\"))\n    ?.map((d) => d.id)\n    ?.toString();\n\n  const handleClick = () => {\n    setTableOpen(false);\n    let filteredData = ref.current.filter((d) => d != null);\n\n    ref.current = filteredData;\n\n    let valid = GlobalValidation(ref);\n\n    if (valid == true) {\n      setValidationMessage(true);\n    }\n    if (valid) {\n      return;\n    }\n\n    setsearching(true);\n    setLoader(false);\n    abortController.current = new AbortController();\n\n    axios({\n      method: \"post\",\n      url: baseUrl + `/administrationms/subkconversiontrend/getFteHCount`,\n      signal: abortController.current.signal,\n\n      data: {\n        FromDate: moment(formData.month).startOf(\"month\").format(\"YYYY-MM-DD\"),\n        Duration: formData.duration,\n        CountryIds: formData.countries,\n        searchType: formData.searchType,\n        serarchVals:\n          selectType == \"BusinessUnit\"\n            ? formData.busUnits\n            : selectType == \"DP\"\n            ? formData.DP\n            : selectType == \"CSL\"\n            ? formData.csl\n            : selectType == \"Project\"\n            ? formData.Project\n            : selectType == \"Customer\" && formData.Customer == 0\n            ? 0\n            : selectType == \"Customer\" && formData.Customer == -1\n            ? -1\n            : selectedCust,\n        isExport: 0,\n        UserId: 512,\n      },\n      headers: { \"Content-Type\": \"application/json\" },\n    }).then((response) => {\n      const data = response.data;\n      setData(data);\n      !valid && setVisible(!visible);\n      visible\n        ? setCheveronIcon(FaChevronCircleUp)\n        : setCheveronIcon(FaChevronCircleDown);\n      let detail = response.data;\n      setDetails(detail);\n\n      axios({\n        method: \"get\",\n      }).then((res1) => {\n        let header = res1.data.val;\n        let splt = header.replaceAll('\"', \"\");\n        let st = splt.replaceAll(\"`\", \"\");\n        let columnArray = st.split(\",\");\n        let colArr = columnArray\n          .map((d) => d.replaceAll(\"'\", \"\"))\n          .filter((d) => d != \"id\");\n\n        setColumns(colArr);\n      });\n      setsearching(false);\n      setValidationMessage(false);\n      setLoader(false);\n      setTimeout(() => {\n        setLoader(false);\n      }, 1000);\n    });\n  };\n\n  useEffect(() => {\n    console.log(selectType);\n  }, [selectType]);\n\n  const handleAbort = () => {\n    abortController.current && abortController.current.abort();\n    setLoader(false);\n  };\n\n  const loggedUserId = localStorage.getItem(\"resId\");\n  const [routes, setRoutes] = useState([]);\n  let textContent = \"Fullfilment\";\n  let currentScreenName = [\"Subk Conversion Trend\"];\n\n  useEffect(() => {\n    getMenus();\n  }, []);\n\n  const getMenus = () => {\n    // setMenusData\n\n    axios({\n      method: \"GET\",\n      url: baseUrl + `/CommonMS/master/getMenus?loggedUserId=${loggedUserId}`,\n    }).then((resp) => {\n      let data = resp.data;\n\n      data.forEach((item) => {\n        if (item.display_name === textContent) {\n          setRoutes([item]);\n        }\n      });\n    });\n  };\n\n  const generateDropdownLabel = (selectedOptions, allOptions) => {\n    const selectedValues = selectedOptions.map((option) => option.value);\n    const allValues = allOptions.map((item) => item.value);\n\n    if (selectedValues.length === allValues.length) {\n      return \"<< ALL >>\";\n    } else {\n      return selectedOptions.map((option) => option.label).join(\", \");\n    }\n  };\n\n  return (\n    <div>\n      {validationmessage ? (\n        <div className=\"statusMsg error\">\n          {\" \"}\n          <AiFillWarning /> Please select valid values for highlighted fields\n        </div>\n      ) : (\n        \"\"\n      )}\n\n      <div className=\"col-md-12\">\n        <div className=\"pageTitle\">\n          <div className=\"childOne\"></div>\n          <div className=\"childTwo\">\n            <h2>Subk Conversion Trend</h2>\n          </div>\n          <div className=\"childThree\"></div>\n        </div>\n      </div>\n      <ScreenBreadcrumbs\n        routes={routes}\n        currentScreenName={currentScreenName}\n      />\n\n      <div className=\"group mb-3 customCard \">\n        <div className=\"col-md-12 collapseHeader\">\n          <h2>Search Filters</h2>\n\n          <div\n            onClick={() => {\n              setVisible(!visible);\n\n              visible\n                ? setCheveronIcon(FaChevronCircleUp)\n                : setCheveronIcon(FaChevronCircleDown);\n            }}\n          >\n            {cheveronIcon}\n          </div>\n        </div>\n        <CCollapse visible={!visible}>\n          <div className=\"group-content row\">\n            <div className=\" col-md-3 mb-2\">\n              <div className=\"form-group row\">\n                <label className=\"col-5\" htmlFor=\"Month\">\n                  Start Month&nbsp;<span className=\"error-text\">*</span>\n                </label>\n                <span className=\"col-1\">:</span>\n                <div className=\"col-6\">\n                  <DatePicker\n                    name=\"month\"\n                    id=\"StartDt\"\n                    minDate={minDate}\n                    selected={month}\n                    onChange={(e) => {\n                      const elementToChange =\n                        document.getElementById(\"duration\");\n                      elementToChange.value = 0;\n                      calculateDuration(e);\n                      setFormData((prev) => ({\n                        ...prev,\n                        [\"month\"]: moment(e).format(\"yyyy-MM-DD\"),\n                      }));\n                      setMonth(e);\n                    }}\n                    dateFormat=\"MMM-yyyy\"\n                    maxDate={new Date()}\n                    onKeyDown={(e) => {\n                      e.preventDefault();\n                    }}\n                    showMonthYearPicker\n                  />\n                </div>\n              </div>\n            </div>\n\n            <div className=\" col-md-3 mb-2\">\n              <div className=\"form-group row\">\n                <label className=\"col-5\" htmlFor=\"duration\">\n                  Duration&nbsp;\n                  <span className=\"error-text\">*</span>\n                </label>\n                <span className=\"col-1 p-0\">:</span>\n                <div className=\"col-6\">\n                  <select\n                    ref={(ele) => {\n                      ref.current[0] = ele;\n                    }}\n                    className=\"text\"\n                    id=\"duration\"\n                    onChange={(e) => {\n                      const { value, id } = e.target;\n                      setFormData({ ...formData, [id]: value });\n                    }}\n                  >\n                    <option value=\"0\"> &lt;&lt;Please Select&gt;&gt;</option>\n                    {duration.map((d) => (\n                      <option value={d} selected={d === 1}>\n                        {d}\n                      </option>\n                    ))}\n                  </select>\n                </div>\n              </div>\n            </div>\n\n            <div className=\" col-md-3 mb-2\">\n              <div className=\"form-group row\">\n                <label className=\"col-5\" htmlFor=\"searchType\">\n                  {\" \"}\n                  Search Type&nbsp;\n                  <span className=\"required error-text\">*</span>\n                </label>\n                <span className=\"col-1 p-0\">:</span>\n                <div className=\"col-6\">\n                  <select\n                    className=\"cancel text\"\n                    name=\"searchType\"\n                    id=\"searchType\"\n                    onChange={handleChange}\n                    ref={(ele) => {\n                      ref.current[1] = ele;\n                    }}\n                  >\n                    <option value=\"\"> &lt;&lt;Please Select&gt;&gt;</option>\n                    <option value=\"BusinessUnit\" selected>\n                      Business Unit\n                    </option>\n                    <option value=\"Customer\">Customer</option>\n                    <option value=\"Project\">Project</option>\n                    <option value=\"CSL\">CSL</option>\n                    <option value=\"DP\">Delivery Partner</option>\n                  </select>\n                </div>\n              </div>\n            </div>\n            {selectType == \"BusinessUnit\" ? (\n              <div className=\" col-md-3 mb-2\">\n                <div className=\"form-group row\">\n                  <label className=\"col-5\" htmlFor=\"busUnits\">\n                    Business Unit&nbsp;\n                    <span className=\"error-text\">*</span>\n                  </label>\n                  <span className=\"col-1 p-0\">:</span>\n                  <div\n                    className=\"col-6 multiselect\"\n                    ref={(ele) => {\n                      ref.current[3] = ele;\n                    }}\n                  >\n                    <MultiSelect\n                      ArrowRenderer={ArrowRenderer}\n                      id=\"busUnits\"\n                      options={business}\n                      hasSelectAll={true}\n                      value={selectedBusiness}\n                      disabled={false}\n                      isLoading={false}\n                      shouldToggleOnHover={false}\n                      valueRenderer={generateDropdownLabel}\n                      onChange={(e) => {\n                        setSelectedBusiness(e);\n                        let filteredCountry = [];\n                        e.forEach((d) => {\n                          filteredCountry.push(d.value);\n                        });\n                        setFormData((prevVal) => ({\n                          ...prevVal,\n                          [\"busUnits\"]: filteredCountry.toString(),\n                        }));\n                      }}\n                    />\n                  </div>\n                </div>\n              </div>\n            ) : (\n              \"\"\n            )}\n\n            {selectType == \"Customer\" ? (\n              <div className=\" col-md-3 mb-2\">\n                <div className=\"form-group row\">\n                  <label className=\"col-5\" htmlFor=\"Customer\">\n                    Customer&nbsp;\n                    <span className=\"error-text\">*</span>\n                  </label>\n                  <span className=\"col-1 p-0\">:</span>\n                  <div className=\"col-6\">\n                    <select\n                      className=\"cancel Text\"\n                      name=\"Customer\"\n                      id=\"Customer\"\n                      onChange={handleChange1}\n                    >\n                      {selectedItems.length + \"selected\"}\n                      <option value={-1}> &lt;&lt;All&gt;&gt;</option>\n                      <option value={0} selected>\n                        Active Customers\n                      </option>\n                      <option value=\"select\">Select</option>\n                    </select>\n                  </div>\n                </div>\n              </div>\n            ) : (\n              \"\"\n            )}\n\n            {selectType == \"Project\" ? (\n              <div className=\"col-md-3 mb-2\">\n                <div className=\"form-group row\">\n                  <label className=\"col-5\" htmlFor=\"email-input\">\n                    Project<span className=\"error-text ml-1\">*</span>\n                  </label>\n                  <span className=\"col-1 p-0\">:</span>\n                  <div className=\"col-6\">\n                    <div\n                      className=\"autoComplete-container react  reactsearchautocomplete\"\n                      id=\"autocomplete reactautocomplete\"\n                      ref={(ele) => {\n                        ref.current[4] = ele;\n                      }}\n                    >\n                      <ReactSearchAutocomplete\n                        items={project}\n                        type=\"Text\"\n                        name=\"Project\"\n                        id=\"Project\"\n                        className=\"error AutoComplete\"\n                        onSelect={(e) => {\n                          setFormData((prevProps) => ({\n                            ...prevProps,\n                            Project: e.id,\n                          }));\n                        }}\n                        showIcon={false}\n                        placeholder=\"Type/Press space to get the list\"\n                      />\n                      <span>{item.name}</span>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            ) : (\n              \"\"\n            )}\n\n            {selectType == \"CSL\" ? (\n              <div className=\" col-md-3 mb-2\">\n                <div className=\"form-group row\">\n                  <label className=\"col-5\" htmlFor=\"csl\">\n                    CSL&nbsp;\n                    <span className=\"error-text\">*</span>\n                  </label>\n                  <span className=\"col-1 p-0\">:</span>\n                  <div\n                    className=\"col-6 multiselect\"\n                    ref={(ele) => {\n                      ref.current[5] = ele;\n                    }}\n                  >\n                    <MultiSelect\n                      ArrowRenderer={ArrowRenderer}\n                      id=\"csl\"\n                      options={csl}\n                      hasSelectAll={true}\n                      value={selectedCsl}\n                      shouldToggleOnHover={false}\n                      valueRenderer={generateDropdownLabel}\n                      disableSearch={false}\n                      selected={selectedCsl}\n                      disabled={false}\n                      isLoading={false}\n                      onChange={(e) => {\n                        setSelectedCsl(e);\n                        let filteredCustomer = [];\n                        e.forEach((d) => {\n                          filteredCustomer.push(d.value);\n                        });\n                        setFormData((prevVal) => ({\n                          ...prevVal,\n                          [\"csl\"]: filteredCustomer.toString(),\n                        }));\n                      }}\n                    />\n                  </div>\n                </div>\n              </div>\n            ) : (\n              \"\"\n            )}\n\n            {selectType == \"DP\" ? (\n              <div className=\" col-md-3 mb-2\">\n                <div className=\"form-group row\">\n                  <label className=\"col-5\" htmlFor=\"DP\">\n                    Delivery Partner&nbsp;\n                    <span className=\"error-text\">*</span>\n                  </label>\n                  <span className=\"col-1 p-0\">:</span>\n                  <div\n                    className=\"col-6 multiselect\"\n                    ref={(ele) => {\n                      ref.current[6] = ele;\n                    }}\n                  >\n                    <MultiSelect\n                      ArrowRenderer={ArrowRenderer}\n                      id=\"DP\"\n                      options={delivery}\n                      hasSelectAll={true}\n                      isLoading={false}\n                      valueRenderer={generateDropdownLabel}\n                      value={selectedDelivery}\n                      selected={selectedDelivery}\n                      disabled={false}\n                      disableSearch={false}\n                      shouldToggleOnHover={false}\n                      onChange={(e) => {\n                        setSelectedDelivery(e);\n                        let filteredDelivery = [];\n                        e.forEach((d) => {\n                          filteredDelivery.push(d.value);\n                        });\n                        setFormData((prevVal) => ({\n                          ...prevVal,\n                          [\"DP\"]: filteredDelivery.toString(),\n                        }));\n                      }}\n                    />\n                  </div>\n                </div>\n              </div>\n            ) : (\n              \"\"\n            )}\n\n            <div className=\" col-md-3 mb-3\">\n              <div className=\"form-group row\">\n                <label className=\"col-5\" htmlFor=\"ResLocation\">\n                  Res. Location&nbsp;<span className=\"error-text\">*</span>\n                </label>\n                <span className=\"col-1 p-0\">:</span>\n                <div\n                  className=\" multiselect col-6\"\n                  ref={(ele) => {\n                    ref.current[7] = ele;\n                  }}\n                >\n                  <MultiSelect\n                    ArrowRenderer={ArrowRenderer}\n                    id=\"countries\"\n                    name=\"ResLocation\"\n                    options={country}\n                    hasSelectAll={true}\n                    value={selectedCountry}\n                    valueRenderer={generateDropdownLabel}\n                    isLoading={false}\n                    shouldToggleOnHover={false}\n                    disableSearch={false}\n                    disabled={false}\n                    onChange={(e) => {\n                      setSelectedCountry(e);\n                      let filteredCountry = [];\n                      e.forEach((d) => {\n                        filteredCountry.push(d.value);\n                      });\n                      setFormData((prevVal) => ({\n                        ...prevVal,\n                        [\"countries\"]: filteredCountry.toString(),\n                      }));\n                    }}\n                  />\n                </div>\n              </div>\n            </div>\n            <div className=\"col-md-12 col-sm-12 col-xs-12  btn-container center\">\n              <button\n                type=\"submit\"\n                className=\"btn btn-primary \"\n                onClick={() => {\n                  handleClick();\n                }}\n              >\n                <FaSearch /> Search{\" \"}\n              </button>\n            </div>\n          </div>\n          {loader ? <Loader handleAbort={handleAbort} /> : \"\"}\n          {refresh ? <Loader handleAbort={handleAbort} /> : \"\"}\n        </CCollapse>\n      </div>\n\n      <div className=\"SubkTable\">\n        <table\n          className=\"table table-bordered customCard   my-2 darkHeader toHead\"\n          style={{ width: \"auto\", marginTop: \"-11px\", float: \"left\" }}\n        >\n          <thead>{displayTable}</thead>\n        </table>\n      </div>\n\n      <SelectCustDialogBox\n        visible={custVisible}\n        setVisible={setCustVisible}\n        setSelectedItems={setSelectedItems}\n        selectedItems={selectedItems}\n      />\n\n      {open === true && tableopen ? (\n        <SubkConversionTable\n          myCol={myCol}\n          myCol1={myCol1}\n          data1={data1}\n          refresh={refresh}\n          setRefresh={setRefresh}\n          headerData={headerData}\n          setBodyData={setBodyData}\n          bodyDataa={bodyData}\n          tableTitle={tableTitle}\n          formData={formData}\n          rows={5}\n        />\n      ) : (\n        \"\"\n      )}\n    </div>\n  );\n}\n\nexport default SubkConversionTrend;\n"],"names":["props","data","rows","useState","mainData","setMainData","headerData","setHeaderData","bodyData","setBodyData","useEffect","JSON","parse","stringify","length","splice","filtersData","contains","value","matchMode","FilterMatchMode","global","filters1","setFilters1","financialImpactTT","className","title","customer","ChangeDept","department","ChangeDp","dp","ChangeCsl","csl","ChangeEmpNumber","employee_number","ChangeprjMgr","prjMgr","ChangeStrtDate","allocation_start_dt","ChangeEndDate","allocation_end_dt","ChangeProjects","projects","ChangeName","resource_name","ChangeDate","start_date","ChangeSuper","supervisor","dynamicColumns","Object","keys","map","col","i","body","field","header","globalFilterValue1","setGlobalFilterValue1","onGlobalFilterChange1","e","target","_filters1","header1","defaultValue","onChange","placeholder","style","width","float","paginatorTemplate","currentPageReportTemplate","rowsPerPageOptions","paginator","showGridlines","dataKey","filters","responsiveLayout","emptyMessage","myCol","myCol1","formData","data1","loader","initialValue","CountryIds","colVal","searchType","UserId","FromDate","month","Duration","duration","serarchVals","isExport","axios","method","then","response","catch","console","log","Loader","baseUrl","environment","useRef","business","setBusiness","selectedBusiness","setSelectedBusiness","country","setCountry","selectedCountry","setSelectedCountry","selectType","setSelectType","project","setProject","visible","setVisible","FaChevronCircleUp","cheveronIcon","setCheveronIcon","validationmessage","setValidationMessage","item","setLoader","setCsl","selectedCsl","setSelectedCsl","delivery","setDelivery","selectedDelivery","setSelectedDelivery","tableopen","setTableOpen","date","Date","firstDay","getFullYear","getMonth","moment","startOf","_d","setMonth","year","maxDate","month1","minDate","setData","setData1","searching","setsearching","open","setOpen","displayTable","setDisplayTable","tabHeaders","setTabHeaders","tableTitle","srtTableTitle","custVisible","setCustVisible","refresh","setRefresh","ref","abortController","setDuration","ArrowRenderer","expanded","format","countries","busUnits","setFormData","getAbsoluteMonths","momentDate","Number","calculateDuration","startMonths","monthDifference","dr","push","Response","forEach","countryObj","label","filteredDeptData","filter","ele","prevVal","toString","country_name","id","url","resp","loggedUserId","localStorage","getItem","res","custom","cslObj","PersonName","filteredCsl","handleCsl","deliver","deliverObj","filteredDelivery","headers","d","sort","setMyCol","setMyCol1","onclickHandler","a","b","val","temp","hData","bData","index","concat","setTimeout","element","tabData","inEle","inInd","includes","replaceAll","textAlign","backgroundColor","align","onClick","cursor","color","textDecoration","selectedItems","setSelectedItems","Customer","columns","setColumns","details","setDetails","selectedCust","handleAbort","current","abort","routes","setRoutes","getMenus","display_name","generateDropdownLabel","selectedOptions","allOptions","selectedValues","option","allValues","join","ScreenBreadcrumbs","currentScreenName","FaChevronCircleDown","htmlFor","name","selected","document","getElementById","prev","dateFormat","onKeyDown","preventDefault","showMonthYearPicker","options","hasSelectAll","disabled","isLoading","shouldToggleOnHover","valueRenderer","filteredCountry","ReactSearchAutocomplete","items","type","onSelect","prevProps","Project","showIcon","disableSearch","filteredCustomer","filteredData","valid","GlobalValidation","AbortController","signal","DP","detail","res1","colArr","split","handleClick","marginTop","SelectCustDialogBox","bodyDataa"],"sourceRoot":""}