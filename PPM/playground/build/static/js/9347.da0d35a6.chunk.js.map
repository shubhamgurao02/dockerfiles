{"version":3,"file":"static/js/9347.da0d35a6.chunk.js","mappings":"qdAaAA,EAAQ,OAyWR,MAvWA,SAAiCC,GAC/B,IACEC,EAcED,EAdFC,KACAC,EAaEF,EAbFE,KAKAC,GAQEH,EAZFI,IAYEJ,EAXFK,gBAWEL,EAVFM,YAUEN,EATFO,kBASEP,EARFG,gBACAK,EAOER,EAPFQ,WACAC,EAMET,EANFS,cACAC,EAKEV,EALFU,WACAC,EAIEX,EAJFW,cACAC,EAGEZ,EAHFY,kBACAC,EAEEb,EAFFa,qBACAC,EACEd,EADFc,SAEF,GAAgCC,EAAAA,EAAAA,UAAS,IAAG,eAArCC,EAAQ,KAAEC,EAAW,KAC5B,GAAgCF,EAAAA,EAAAA,UAAS,IAAG,eAArCG,EAAQ,KAAEC,EAAW,KAC5B,GAA0CJ,EAAAA,EAAAA,UAAS,IAAG,eAA/CK,EAAa,KAAEC,EAAgB,KAChCC,GAAKC,EAAAA,EAAAA,QAAO,OAClBC,EAAAA,EAAAA,YAAU,WACRP,EAAYQ,KAAKC,MAAMD,KAAKE,UAAU1B,IACxC,GAAG,CAACA,KAEJuB,EAAAA,EAAAA,YAAU,WACR,GAAIR,EAASY,OAAS,EAAG,CACvBnB,EAAcO,EAAS,IACvBG,EAAYH,EAASa,OAAO,IAE5B,IAAIC,EAAM,GACNC,EAASf,EAAS,GAEtBgB,OAAOC,KAAKF,GAAQG,SAAQ,SAACC,GACtB,YAALA,GAEEL,EAAIM,KAAK,CAAEC,MAAON,EAAOI,GAAIG,QAASH,GAC1C,IAEAd,EAAiBS,EACnB,CACF,GAAG,CAACd,IAEJ,IAAMuB,EAAc,CAClBC,SAAU,CAAEC,MAAO,KAAMC,UAAWC,EAAAA,GAAAA,WAGtC,GAAgC5B,EAAAA,EAAAA,UAAS,CACvC6B,OAAQL,EAAsB,WAC9B,eAFKM,EAAQ,KAAEC,EAAW,MAI5BtB,EAAAA,EAAAA,YAAU,WACRsB,EAAY,CACVF,OAAQL,EAAsB,UAElC,GAAG,CAAC/B,IACJ,IAiNIuC,EAjNJ,GAAoDhC,EAAAA,EAAAA,UAAS,IAAG,eAAzDiC,EAAkB,KAAEC,EAAqB,KAU1CC,EAAwB,SAACC,GAC7B,IAAMV,EAAQU,EAAEC,OAAOX,MACnBY,GAAS,UAAQR,GACrBQ,EAAkB,OAAEZ,MAAQA,EAC5BK,EAAYO,GACZJ,EAAsBR,EACxB,EAEMa,EAAsB,WAC1B,IAAIC,EAAW5C,EAEf,GACO,WADC4C,EAAe,KAEnB,OACE,mBACEC,GAAID,EAAa,GACjBE,SAAU,SAACN,GACTtC,EAAqBsC,EAAEC,OAAOX,MAChC,EAAE,SAEDT,OAAOC,KAAKsB,EAAe,MAAGG,KAAI,SAACvB,GAClC,OACE,mBACEwB,SAAU/C,GAAqBuB,EAC/BM,MAAON,EAAE,SAERoB,EAAe,KAAEpB,IAGxB,KAQV,EAkBMyB,EAAc,WAClB,wCAAeC,MAAK,SAACC,GACnB,IAAMC,EAAU/B,OAAOC,KAAKhC,EAAK,IAC3B+D,GAAa,OAAO,IAAIC,IAAIF,IAC5BG,EAAgBjE,EAAKyD,KAAI,SAACS,GAAI,OAClCH,EAAcN,KAAI,SAACU,GAAM,OAAKD,EAAKC,EAAO,GAAC,IAKvCC,EAAW,CAAEC,OAAQ,CAAErE,KAHX6D,EAAKS,MAAMC,cAAcN,EAAe,CACxDO,YAAY,KAEkCC,WAAY,CAAC,UAvBzC,SAACC,EAAQ7D,GAC/B,6CAAqB+C,MAAK,SAACe,GACzB,GAAIA,GAAUA,EAAOC,QAAS,CAC5B,IAGMC,EAAQ,IAAIC,KAAK,CAACJ,GAAS,CAAEK,KAFjC,oFAIFJ,EAAOC,QAAQI,OAAOH,EAAOhE,EAHP,QAIxB,CACF,GACF,CAiBIoE,CAJoBpB,EAAKqB,MAAMd,EAAU,CACvCe,SAAU,OACVJ,KAAM,UAEqBlE,EAC/B,GACF,EAEMuE,EAAY,WAChBC,GAWF,EAEMA,EAAQ,WAKZ,IAJA,IAAMC,EAAM,IAAIC,EAAAA,QAAM,IAAK,KAAM,MAC3BC,EAAUrE,EAAcsC,KAAI,SAACvB,GAAC,OAAKA,EAAEE,KAAK,IAC5CnC,EAAO,GAAG,cAiBZ,IAAIwF,EAAOtE,EAAcsC,KAAI,SAACvB,GAAC,OAAKlC,EAAK0F,GAAGxD,EAAW,QAAE,IAEzDjC,EAAKkC,KAAKsD,EACZ,EAlBSC,EAAI,EAAGA,EAAI1F,EAAK2B,OAAQ+D,IAAG,KAmBpC,IAAMC,EAAe,CAAC,GAAI,GAAI,GAAI,IAAK,KACvCL,EAAIM,KAAK,IAAK,GAAI,qBAClBN,EAAIO,UAAUL,EAASvF,EAAM,CAC3B6F,OAAQ,GACRC,MAAO,OACPC,OAAQ,CACNC,KAAM,QACNC,OAAQ,SACRC,YAAa,IACbC,UAAW,GACXC,UAAW,CAAC,EAAG,EAAG,GAClBC,UAAW,CAAC,EAAG,EAAG,IAEpBC,WAAY,CACVD,UAAW,CAAC,EAAG,EAAG,GAClBE,UAAW,SACXJ,UAAW,GACXC,UAAW,CAAC,EAAG,EAAG,GAClBI,UAAW,CAAC,IAAK,IAAK,MAExBC,mBAAoB,CAClBD,UAAW,CAAC,IAAK,IAAK,KACtBH,UAAW,CAAC,EAAG,EAAG,GAClBF,UAAW,GACXC,UAAW,CAAC,EAAG,EAAG,IAEpBM,UAAW,CACTP,UAAW,GACXC,UAAW,CAAC,EAAG,EAAG,IAEpBO,eAAgB,CAAC,EAAG,EAAG,GACvBC,aAAc,CACZ,EAAG,CAAEC,UAAWnB,EAAa,IAC7B,EAAG,CAAEmB,UAAWnB,EAAa,IAC7B,EAAG,CAAEmB,UAAWnB,EAAa,IAC7B,EAAG,CAAEmB,UAAWnB,EAAa,IAC7B,EAAG,CAAEmB,UAAWnB,EAAa,OAGjCL,EAAIyB,KAAK,MACX,EA8CMC,GA1CF,iBAAKC,UAAU,yBAAwB,eACnBC,GAAjBxG,IACC,2BACE,SAAC2C,EAAmB,OAIxB,iBAAK4D,UAAU,iBAAgB,WAClB,OAAVxG,QAAU,IAAVA,OAAU,EAAVA,EAAY0G,SAAS,UACpB,iBACEF,UAAU,iBACVG,QAAS,kBAhIFC,GAgIkB,OA/HnChG,EAAGiG,QAAQC,UAAU,CAAEF,cAAAA,IADP,IAACA,CAgIwB,EAC/BjF,MAAM,SAGC,OAAV3B,QAAU,IAAVA,OAAU,EAAVA,EAAY0G,SAAS,UACpB,iBACEF,UAAU,yBACVG,QAASzD,EACTvB,MAAM,qBAGC,OAAV3B,QAAU,IAAVA,OAAU,EAAVA,EAAY0G,SAAS,UACpB,iBACEF,UAAU,qBACVG,QAAShC,EACThD,MAAM,YAIZ,kBAAM6E,UAAU,iCAAgC,WAC9C,cAAGA,UAAU,kBACb,SAAC,IAAS,CACRO,aAAczE,EACdS,SAAUP,EACVwE,YAAY,yBAsEtB,OA5DE3E,EADE9C,EAAK,GAAG0H,WAER,UAAC,IAAW,YACV,UAAC,IAAG,YACF,SAAC,IAAM,CAACvD,OAAO,GAAGwD,QAAS,MAC3B,SAAC,IAAM,CAACxD,OAAO,kBAAkBwD,QAAS,KAC1C,SAAC,IAAM,CAACxD,OAAO,gBAAgBwD,QAAS,KACxC,SAAC,IAAM,CAACxD,OAAO,GAAGwD,QAAS,QAE7B,UAAC,IAAG,YACF,SAAC,IAAM,CAACxD,OAAO,OAAOyD,UAAQ,EAACC,MAAM,kBACrC,SAAC,IAAM,CAAC1D,OAAO,eAAeyD,UAAQ,EAACC,MAAM,kBAC7C,SAAC,IAAM,CAAC1D,OAAO,kBAAkByD,UAAQ,EAACC,MAAM,oBAChD,SAAC,IAAM,CAAC1D,OAAO,kBAAkByD,UAAQ,EAACC,MAAM,qBAChD,SAAC,IAAM,CAAC1D,OAAO,gBAAgByD,UAAQ,EAACC,MAAM,eAC9C,SAAC,IAAM,CAAC1D,OAAO,aAAayD,UAAQ,EAACC,MAAM,mBAC3C,SAAC,IAAM,CAAC1D,OAAO,MAAMyD,UAAQ,EAACC,MAAM,eACpC,SAAC,IAAM,CAAC1D,OAAO,WAAWyD,UAAQ,EAACC,MAAM,cACzC,SAAC,IAAM,CAAC1D,OAAO,YAAYyD,UAAQ,EAACC,MAAM,sBAC1C,SAAC,IAAM,CAAC1D,OAAO,aAAayD,UAAQ,EAACC,MAAM,oBAC3C,SAAC,IAAM,CAAC1D,OAAO,YAAYyD,UAAQ,EAACC,MAAM,qBAC1C,SAAC,IAAM,CAAC1D,OAAO,aAAayD,UAAQ,EAACC,MAAM,mBAC3C,SAAC,IAAM,CAAC1D,OAAO,SAASyD,UAAQ,EAACC,MAAM,uBACvC,SAAC,IAAM,CAAC1D,OAAO,WAAWyD,UAAQ,EAACC,MAAM,yBACzC,SAAC,IAAM,CAAC1D,OAAO,SAASyD,UAAQ,EAACC,MAAM,qBACvC,SAAC,IAAM,CAAC1D,OAAO,WAAWyD,UAAQ,EAACC,MAAM,uBACzC,SAAC,IAAM,CAAC1D,OAAO,YAAYyD,UAAQ,EAACC,MAAM,qBAM9C,UAAC,IAAW,YACV,UAAC,IAAG,YACF,SAAC,IAAM,CAAC1D,OAAO,GAAGwD,QAAS,MAC3B,SAAC,IAAM,CAACxD,OAAO,kBAAkBwD,QAAS,KAC1C,SAAC,IAAM,CAACxD,OAAO,gBAAgBwD,QAAS,KACxC,SAAC,IAAM,CAACxD,OAAO,GAAGwD,QAAS,QAE7B,UAAC,IAAG,YACF,SAAC,IAAM,CAACxD,OAAO,OAAOyD,UAAQ,EAACC,MAAM,kBACrC,SAAC,IAAM,CAAC1D,OAAO,eAAeyD,UAAQ,EAACC,MAAM,kBAC7C,SAAC,IAAM,CAAC1D,OAAO,kBAAkByD,UAAQ,EAACC,MAAM,oBAChD,SAAC,IAAM,CAAC1D,OAAO,kBAAkByD,UAAQ,EAACC,MAAM,qBAChD,SAAC,IAAM,CAAC1D,OAAO,gBAAgByD,UAAQ,EAACC,MAAM,eAC9C,SAAC,IAAM,CAAC1D,OAAO,aAAayD,UAAQ,EAACC,MAAM,mBAC3C,SAAC,IAAM,CAAC1D,OAAO,MAAMyD,UAAQ,EAACC,MAAM,eACpC,SAAC,IAAM,CAAC1D,OAAO,WAAWyD,UAAQ,EAACC,MAAM,cACzC,SAAC,IAAM,CAAC1D,OAAO,YAAYyD,UAAQ,EAACC,MAAM,sBAC1C,SAAC,IAAM,CAAC1D,OAAO,aAAayD,UAAQ,EAACC,MAAM,oBAC3C,SAAC,IAAM,CAAC1D,OAAO,YAAYyD,UAAQ,EAACC,MAAM,qBAC1C,SAAC,IAAM,CAAC1D,OAAO,aAAayD,UAAQ,EAACC,MAAM,mBAC3C,SAAC,IAAM,CAAC1D,OAAO,SAASyD,UAAQ,EAACC,MAAM,uBACvC,SAAC,IAAM,CAAC1D,OAAO,WAAWyD,UAAQ,EAACC,MAAM,yBACzC,SAAC,IAAM,CAAC1D,OAAO,SAASyD,UAAQ,EAACC,MAAM,qBACvC,SAAC,IAAM,CAAC1D,OAAO,WAAWyD,UAAQ,EAACC,MAAM,6BAO/C,gBAAKZ,UAAU,aAAY,SACxBlF,OAAOC,KAAKzB,GAAYoB,OAAS,IAChC,SAAC,IAAS,CACRmG,aAAW,EACXC,kBAAkB,6FAClBC,0BAA0B,sCAC1BC,mBAAoB,CAAC,GAAI,GAAI,IAC7BC,kBAAmBpF,EACnBN,MAAOvB,EACPkH,WAAS,EACTC,eAAa,EACbnI,KAAMA,EACNoC,QAAQ,KACRgG,QAASzF,EACT0F,iBAAiB,SACjBnE,OAAQ6C,EACRuB,aAAa,oBACbC,IAAK,SAACC,GACJpH,EAAGiG,QAAUmB,CACf,EACAxB,UAAU,yCAAwC,SAIjD/G,KAKX,E,WCzWAJ,EAAQ,OA8SR,MA5SA,SAA8CC,GAC5C,IACEC,EAcED,EAdFC,KACAC,EAaEF,EAbFE,KAKAC,GAQEH,EAZFI,IAYEJ,EAXFK,gBAWEL,EAVFM,YAUEN,EATFO,kBASEP,EARFG,gBACAK,EAOER,EAPFQ,WACAC,EAMET,EANFS,cACAC,EAKEV,EALFU,WACAC,EAIEX,EAJFW,cACAC,EAGEZ,EAHFY,kBACAC,EAEEb,EAFFa,qBACAC,EACEd,EADFc,SAEF,GAAgCC,EAAAA,EAAAA,UAAS,IAAG,eAArCC,EAAQ,KAAEC,EAAW,KAC5B,GAAgCF,EAAAA,EAAAA,UAAS,IAAG,eAArCG,EAAQ,KAAEC,EAAW,KAC5B,GAA0CJ,EAAAA,EAAAA,UAAS,IAAG,eAA/CK,EAAa,KAAEC,EAAgB,KAChCC,GAAKC,EAAAA,EAAAA,QAAO,OAClBC,EAAAA,EAAAA,YAAU,WACRP,EAAYQ,KAAKC,MAAMD,KAAKE,UAAU1B,IACxC,GAAG,CAACA,IAEJ0I,QAAQC,IAAI3I,IAEZuB,EAAAA,EAAAA,YAAU,WACR,GAAIR,EAASY,OAAS,EAAG,CACvBnB,EAAcO,EAAS,IACvBG,EAAYH,EAASa,OAAO,IAE5B,IAAIC,EAAM,GACNC,EAASf,EAAS,GAEtBgB,OAAOC,KAAKF,GAAQG,SAAQ,SAACC,GACtB,YAALA,GAEEL,EAAIM,KAAK,CAAEC,MAAON,EAAOI,GAAIG,QAASH,GAC1C,IAEAd,EAAiBS,EACnB,CACF,GAAG,CAACd,IAEJ,IAAMuB,EAAc,CAClBC,SAAU,CAAEC,MAAO,KAAMC,UAAWC,EAAAA,GAAAA,WAGtC,GAAgC5B,EAAAA,EAAAA,UAAS,CACvC6B,OAAQL,EAAsB,WAC9B,eAFKM,EAAQ,KAAEC,EAAW,MAI5BtB,EAAAA,EAAAA,YAAU,WACRsB,EAAY,CACVF,OAAQL,EAAsB,UAElC,GAAG,CAAC/B,IACJ,OAAoDO,EAAAA,EAAAA,UAAS,IAAG,eAAzDiC,EAAkB,KAAEC,EAAqB,KAU1CC,EAAwB,SAACC,GAC7B,IAAMV,EAAQU,EAAEC,OAAOX,MACnBY,GAAS,UAAQR,GACrBQ,EAAkB,OAAEZ,MAAQA,EAC5BK,EAAYO,GACZJ,EAAsBR,EACxB,EAEMa,EAAsB,WAC1B,IAAIC,EAAW5C,EAEf,GACO,WADC4C,EAAe,KAEnB,OACE,mBACEC,GAAID,EAAa,GACjBE,SAAU,SAACN,GACTtC,EAAqBsC,EAAEC,OAAOX,MAChC,EAAE,SAEDT,OAAOC,KAAKsB,EAAe,MAAGG,KAAI,SAACvB,GAClC,OACE,mBACEwB,SAAU/C,GAAqBuB,EAC/BM,MAAON,EAAE,SAERoB,EAAe,KAAEpB,IAGxB,KAQV,EAkBMyB,EAAc,WAClB,wCAAeC,MAAK,SAACC,GACnB,IAAMC,EAAU/B,OAAOC,KAAKhC,EAAK,IAC3B+D,GAAa,OAAO,IAAIC,IAAIF,IAC5BG,EAAgBjE,EAAKyD,KAAI,SAACS,GAAI,OAClCH,EAAcN,KAAI,SAACU,GAAM,OAAKD,EAAKC,EAAO,GAAC,IAKvCC,EAAW,CAAEC,OAAQ,CAAErE,KAHX6D,EAAKS,MAAMC,cAAcN,EAAe,CACxDO,YAAY,KAEkCC,WAAY,CAAC,UAtBzC,SAACC,EAAQ7D,GAC/B,6CAAqB+C,MAAK,SAACe,GACzB,GAAIA,GAAUA,EAAOC,QAAS,CAC5B,IAGM5E,EAAO,IAAI8E,KAAK,CAACJ,GAAS,CAAEK,KAFhC,oFAGFJ,EAAOC,QAAQI,OAAOhF,EAAMa,EAFN,QAGxB,CACF,GACF,CAiBIoE,CAJoBpB,EAAKqB,MAAMd,EAAU,CACvCe,SAAU,OACVJ,KAAM,UAEqBlE,EAC/B,GACF,EAEMuE,EAAY,WAChBC,GAWF,EAEMA,EAAQ,WAKZ,IAJA,IAAMC,EAAM,IAAIC,EAAAA,QAAM,IAAK,KAAM,MAC3BC,EAAUrE,EAAcsC,KAAI,SAACvB,GAAC,OAAKA,EAAEE,KAAK,IAC5CnC,EAAO,GAAG,cAiBZ,IAAIwF,EAAOtE,EAAcsC,KAAI,SAACvB,GAAC,OAAKlC,EAAK0F,GAAGxD,EAAW,QAAE,IAEzDjC,EAAKkC,KAAKsD,EACZ,EAlBSC,EAAI,EAAGA,EAAI1F,EAAK2B,OAAQ+D,IAAG,KAmBpC,IAAMC,EAAe,CAAC,GAAI,GAAI,GAAI,IAAK,KACvCL,EAAIM,KAAK,IAAK,GAAI,qBAClBN,EAAIO,UAAUL,EAASvF,EAAM,CAC3B6F,OAAQ,GACRC,MAAO,OACPC,OAAQ,CACNC,KAAM,QACNC,OAAQ,SACRC,YAAa,IACbC,UAAW,GACXC,UAAW,CAAC,EAAG,EAAG,GAClBC,UAAW,CAAC,EAAG,EAAG,IAEpBC,WAAY,CACVD,UAAW,CAAC,EAAG,EAAG,GAClBE,UAAW,SACXJ,UAAW,GACXC,UAAW,CAAC,EAAG,EAAG,GAClBI,UAAW,CAAC,IAAK,IAAK,MAExBC,mBAAoB,CAClBD,UAAW,CAAC,IAAK,IAAK,KACtBH,UAAW,CAAC,EAAG,EAAG,GAClBF,UAAW,GACXC,UAAW,CAAC,EAAG,EAAG,IAEpBM,UAAW,CACTP,UAAW,GACXC,UAAW,CAAC,EAAG,EAAG,IAEpBO,eAAgB,CAAC,EAAG,EAAG,GACvBC,aAAc,CACZ,EAAG,CAAEC,UAAWnB,EAAa,IAC7B,EAAG,CAAEmB,UAAWnB,EAAa,IAC7B,EAAG,CAAEmB,UAAWnB,EAAa,IAC7B,EAAG,CAAEmB,UAAWnB,EAAa,IAC7B,EAAG,CAAEmB,UAAWnB,EAAa,OAGjC+C,QAAQC,IAAIrD,EAAIsD,OAAO,kBACvBtD,EAAIyB,KAAK,MACX,EA8CMC,GA1CF,iBAAKC,UAAU,yBAAwB,eACnBC,GAAjBxG,IACC,2BACE,SAAC2C,EAAmB,OAIxB,iBAAK4D,UAAU,iBAAgB,WAClB,OAAVxG,QAAU,IAAVA,OAAU,EAAVA,EAAY0G,SAAS,UACpB,iBACEF,UAAU,iBACVG,QAAS,kBAjIFC,GAiIkB,OAhInChG,EAAGiG,QAAQC,UAAU,CAAEF,cAAAA,IADP,IAACA,CAiIwB,EAC/BjF,MAAM,SAGC,OAAV3B,QAAU,IAAVA,OAAU,EAAVA,EAAY0G,SAAS,UACpB,iBACEF,UAAU,yBACVG,QAASzD,EACTvB,MAAM,qBAGC,OAAV3B,QAAU,IAAVA,OAAU,EAAVA,EAAY0G,SAAS,UACpB,iBACEF,UAAU,qBACVG,QAAShC,EACThD,MAAM,YAIZ,kBAAM6E,UAAU,iCAAgC,WAC9C,cAAGA,UAAU,kBACb,SAAC,IAAS,CACRO,aAAczE,EACdS,SAAUP,EACVwE,YAAY,yBAStB,OACE,gBAAKR,UAAU,aAAY,SACxBlF,OAAOC,KAAKzB,GAAYoB,OAAS,IAChC,SAAC,IAAS,CACRmG,aAAW,EACXC,kBAAkB,6FAClBC,0BAA0B,sCAC1BC,mBAAoB,CAAC,GAAI,GAAI,IAC7BzF,MAAOvB,EACPkH,WAAS,EACTC,eAAa,EACbnI,KAAMA,EACNoC,QAAQ,KACRgG,QAASzF,EACT0F,iBAAiB,SACjBnE,OAAQ6C,EACRuB,aAAa,oBACbC,IAAK,SAACC,GACJpH,EAAGiG,QAAUmB,CACf,EACAxB,UAAU,sBAAqB,SAI9B/G,KAKX,ECMA,MA7SA,SAA4BH,GACuCA,EAAzD8I,SAD0B,IAAD,EACf7I,EAA+CD,EAA/CC,KAAMK,EAAyCN,EAAzCM,YAAaC,EAA4BP,EAA5BO,kBAAmBwI,EAAS/I,EAAT+I,KAExD,GAAoChI,EAAAA,EAAAA,UAAS,IAAG,eAAzCP,EAAU,KAAEC,EAAa,KAChC,GAAoCM,EAAAA,EAAAA,UAAS,IAAG,eAAzCL,EAAU,KAAEsI,EAAa,MAEhCxH,EAAAA,EAAAA,YAAU,WACRvB,EAAK,IAAMQ,EAAcgB,KAAKC,MAAMD,KAAKE,UAAU1B,EAAK,MAExD+I,EADU,CAAC,OAEb,GAAG,CAAC/I,IAEYgJ,EAAAA,EAAAA,QAwEhB,IAxEA,IAwEStD,EAAI,EAAGA,EAAI1F,EAAK2B,OAAQ+D,MAMjCnE,EAAAA,EAAAA,YAAU,WACR,GACC,IACH,IAAM0H,EAAuB,SAACjJ,GAC5B,OACE,gBAAKiH,UAAU,WAAW,cAAY,UAAU7E,MAAOpC,EAAKkJ,YAAY,SACrElJ,EAAKkJ,aAGZ,EACMC,EAAiB,SAACnJ,GACtB,OACE,gBACEiH,UAAU,WACV,cAAY,UACZ7E,MAAOpC,EAAKoJ,gBAAgB,SAE3BpJ,EAAKoJ,iBAGZ,EACMC,EAAkB,SAACrJ,GACvB,OACE,gBACEiH,UAAU,WACV,cAAY,UACZ7E,MAAOpC,EAAKsJ,cAAc,SAEzBtJ,EAAKsJ,eAGZ,EACMC,EAAiB,SAACvJ,GACtB,OACE,gBAAKiH,UAAU,WAAW,cAAY,UAAU7E,MAAOpC,EAAKwJ,SAAS,SAClExJ,EAAKwJ,UAGZ,EACMC,EAAa,SAACzJ,GAClB,OACE,gBAAKiH,UAAU,WAAW,cAAY,UAAU7E,MAAOpC,EAAK0J,aAAa,SACtE1J,EAAK0J,cAGZ,EACMC,EAAgB,SAAC3J,GACrB,OACE,gBACE4J,MAAM,SACNC,MAAO,CAAEC,MAAO,QAChB1H,MAAOpC,EAAK+J,iBAAiB,SAE5B/J,EAAK+J,kBAGZ,EACMC,EAAc,SAAChK,GACnB,OACE,gBAAK4J,MAAM,SAASC,MAAO,CAAEC,MAAO,QAAU1H,MAAOpC,EAAKiK,eAAe,SACtEjK,EAAKiK,gBAGZ,EACMC,EAAgB,SAAClK,GACrB,OACE,gBAAK4J,MAAM,OAAOC,MAAO,CAAEC,MAAO,QAAU1H,MAAOpC,EAAKmK,gBAAgB,SACrEnK,EAAKmK,iBAGZ,EACMC,EAAc,SAACpK,GACnB,OACE,gBAAK4J,MAAM,OAAOC,MAAO,CAAEC,MAAO,QAAU1H,MAAOpC,EAAKqK,cAAc,SACnErK,EAAKqK,eAGZ,EACMC,EAAgB,SAACtK,GACrB,OACE,gBAAK4J,MAAM,QAAQxH,MAAOpC,EAAK0H,UAAU,SACtC1H,EAAK0H,WAGZ,EAEM6C,EAAiB,SAACvK,GACtB,OACE,gBAAK4J,MAAM,QAAQxH,MAAOpC,EAAKwK,kBAAkB,SACpB,MAA1BxK,EAAKwK,kBAA4B,EAAIxK,EAAKwK,mBAGjD,EACMC,EAAmB,SAACzK,GACxB,OACE,gBAAK4J,MAAM,QAAQxH,MAAOpC,EAAK0K,oBAAoB,SACpB,MAA5B1K,EAAK0K,oBAA8B,EAAI1K,EAAK0K,qBAGnD,EAEMC,EAAiB,SAAC3K,GACtB,OACE,gBAAK4J,MAAM,QAAQxH,MAAOpC,EAAK4K,gBAAgB,SACpB,MAAxB5K,EAAK4K,gBAA0B,EAAI5K,EAAK4K,iBAG/C,EACMC,EAAmB,SAAC7K,GACxB,OACE,gBAAK4J,MAAM,QAAQxH,MAAOpC,EAAK8K,kBAAkB,SACpB,MAA1B9K,EAAK8K,kBAA4B,EAAI9K,EAAK8K,mBAGjD,EACMC,EAAe,SAAC/K,GAAU,IAAD,EACzBgL,EAA0B,QAAvB,EAAG1K,EAAkB,UAAE,aAApB,EAAsB2K,MAAM,KACtC,OACE,+BACE,SAAC,KAAI,CACH9H,OAAO,SACP+H,GAAIF,EAAI,GAAK,IAAMhL,EAAKgL,EAAI,IAC5B5I,MAAOpC,EAAKmL,aAAa,SAExBnL,EAAKK,EAAY,OAI1B,EACMH,EAAwC,QAA1B,EAAG6B,OAAOC,KAAKzB,UAAW,aAAvB,EAAyBkD,KAAI,SAACtD,EAAKuF,GACxD,OACE,SAAC,IAAM,CACLkC,UAAQ,EAERwD,KACS,qBAAPjL,EACI0K,EACO,mBAAP1K,EACAwK,EACO,uBAAPxK,EACAsK,EACO,qBAAPtK,EACAoK,EACO,iBAAPpK,EACAiK,EACO,mBAAPjK,EACA+J,EACO,kBAAP/J,EACA6J,EACO,oBAAP7J,EACAwJ,EACO,gBAAPxJ,EACAsJ,EACO,YAAPtJ,EACAoJ,EACO,iBAAPpJ,EACAkJ,EACO,mBAAPlJ,EACAgJ,EACO,aAAPhJ,EACAmK,EACO,eAAPnK,EACA8I,EACO,gBAAP9I,GAAyB4K,EAE/BlD,MAAO1H,EACPgE,OAAQ5D,EAAWJ,IAjCdA,EAoCX,IAiBA,OACE,0BACY,IAAT2I,GACC,SAACuC,EAAyB,CACxBrL,KAAMA,EACNE,eAAgBA,EAChBK,WAAYA,EACZC,cAAeA,EACfC,WAAYA,EACZR,KAAM,MAGR,SAAC,EAAoC,CACnCD,KAAMA,EACNE,eAAgBA,EAChBK,WAAYA,EACZC,cAAeA,EACfC,WAAYA,EACZR,KAAM,GACNY,SAAS,oBAKnB,E,uDCkhBA,MA3zBA,WACE,IAAMyK,EAAeC,aAAaC,QAAQ,SAC1C,GAA8B1K,EAAAA,EAAAA,WAAS,GAAM,eAAtC2K,EAAO,KAAEC,EAAU,KAC1B,GAAwC5K,EAAAA,EAAAA,UAAS6K,EAAAA,KAAkB,eAA5DC,EAAY,KAAEC,EAAe,KACpC,GAA4B/K,EAAAA,EAAAA,WAAS,GAAM,eAApCgL,EAAM,KAAEC,EAAS,KACxB,GAAkCjL,EAAAA,EAAAA,WAAS,GAAM,eAA1CkL,EAAS,KAAEC,EAAY,KAC9B,GAAgCnL,EAAAA,EAAAA,UAAS,IAAG,eAArCoL,EAAQ,KAAEC,EAAW,KAC5B,GAAgCrL,EAAAA,EAAAA,UAAS,IAAG,eAArC0I,EAAQ,KAAE4C,EAAW,KAC5B,GAA4BtL,EAAAA,EAAAA,UAAS,IAAG,eAAjCuL,EAAM,KAAEC,EAAS,KACxB,GAAgCxL,EAAAA,EAAAA,UAAS,IAAG,eAArCyL,EAAQ,KAAEC,EAAW,KAC5B,GAA8C1L,EAAAA,EAAAA,UAAS,IAAG,eAAnD2L,EAAe,KAAEC,EAAkB,KAE1C,GAAsC5L,EAAAA,EAAAA,UAAS,IAAG,gBAA3C6L,GAAW,MAAEC,GAAc,MAClC,IAAwC9L,EAAAA,EAAAA,UAAS,IAAG,iBAA7C+L,GAAY,MAAEC,GAAe,MACpC,IAA8ChM,EAAAA,EAAAA,UAAS,IAAG,iBAAnDiM,GAAe,MAAEC,GAAkB,MAC1C,IAAwBlM,EAAAA,EAAAA,UAAS,CAAC,CAAC,IAAG,iBAA/Bd,GAAI,MAAEiN,GAAO,MACpB,IAAgDnM,EAAAA,EAAAA,UAAS,IAAG,iBAArDoM,GAAgB,MAAEC,GAAmB,MAC5C,IAAsCrM,EAAAA,EAAAA,UAAS,IAAG,iBAA3CT,GAAW,MAAE+M,GAAc,MAClC,IAAwBtM,EAAAA,EAAAA,WAAS,GAAM,iBAAhCgI,GAAI,MAAEuE,GAAO,MACpB,IAAkDvM,EAAAA,EAAAA,UAAS,IAAG,iBAAvDR,GAAiB,MAAEgN,GAAoB,MACxCC,GAAUvE,EAAAA,EAAAA,QACVwE,IAAkBlM,EAAAA,EAAAA,QAAO,MAoB/B,IAAgCR,EAAAA,EAAAA,UAhBX,CACnB2M,YAAa,GACbC,SAAU,EACVC,UAAW,gDACXnE,UAAW,EACXoE,cAAe,KACff,aAAc,EACdgB,GAAI,KACJC,aAAc,KACdC,eAAgB,KAChBC,cAAe,0BACfC,IAAK,EACLC,kBAAmB,EACnBC,eAAgB,GAChBC,SAAU,IAE0C,iBAA/CvF,GAAQ,MAAEwF,GAAW,MAM5B,IAA0BvN,EAAAA,EAAAA,UALP,CACjBwN,UAAW,KACXC,MAAO,GACPC,MAAO,IAEqC,iBA+MxCC,IA/MM,MAAU,MA+MF,SAACC,GAIfC,MAAMC,QAAQF,IACPA,EAAIG,KAAK,MAGpBC,IAAM,CACJC,OAAQ,MACRC,IACEzB,GAAO,6DAC+C1E,GAAS8E,aAChE/J,MAAK,SAACqL,GACP,IAAIC,EAASD,EAAIjP,KACjBoM,EAAY8C,EACd,GACF,GAEMC,GAAqB,WACzBL,IAAM,CACJC,OAAQ,MACRC,IAAKzB,GAAO,qCAEX3J,MAAK,SAACqL,GACL,IAAI5C,EAAS4C,EAAIjP,KACjB4M,GAAeP,EACjB,IACC+C,OAAM,SAACC,GAAW,GACvB,EAuBMC,GAAa,WACjBR,IAAM,CACJC,OAAQ,OACRC,IAAKzB,GAAO,4CACZvN,KAAM,CACJsO,UAAW,KACXC,MAAO,GACPC,MAAO,GAET1K,QAAS,CAAE,eAAgB,sBAC1BF,MAAK,SAAC2L,GACP,IAAMvP,EAAOuP,EAASvP,KAEtBsM,EAAUtM,EACZ,GACF,GACAuB,EAAAA,EAAAA,YAAU,WApHRuN,IAAAA,IACOvB,GAAO,+BACX3J,MAAK,SAAC4L,GACL,IAAIC,EAAY,GACZzP,EAAOwP,EAASxP,KACpBA,EAAKmC,KAAK,CAAEK,MAAO,IAAKkN,MAAO,sBAC/B1P,EAAK2B,OAAS,GACZ3B,EAAKiC,SAAQ,SAACiB,GACZ,IAAIyM,EAAa,CACfD,MAAOxM,EAAEwM,MACTlN,MAAOU,EAAEV,OAEXiN,EAAUtN,KAAKwN,EACjB,IAEFxD,EAAYsD,GACZ,IAAIG,EAAkBpO,KAAKC,MAAMD,KAAKE,UAAU+N,IAAYI,QAC1D,SAAC3N,GAAC,OAA8C,GAAzCA,EAAEwN,MAAMvI,SAAS,oBAA6B,IAGvDgG,GAAoByC,EACtB,IACCR,OAAM,SAACC,GAAK,OAAK3G,QAAQC,IAAI0G,EAAM,IAgGtCZ,KACAU,KAxCAL,IAAM,CACJC,OAAQ,MACRC,IAAKzB,GAAO,kDAEX3J,MAAK,SAACqL,GACL,IAAIjP,EAAOiP,EAAIjP,KACf8M,GAAgB9M,EAClB,IACCoP,OAAM,SAACC,GAAW,IAGrBP,IAAM,CACJC,OAAQ,MACRC,IAAKzB,GAAO,qDAEX3J,MAAK,SAACqL,GACL,IAAIjP,EAAOiP,EAAIjP,KACfgN,GAAmBhN,EACrB,IACCoP,OAAM,SAACC,GAAW,IAwBrBC,KAjGAR,IAAAA,IACOvB,GAAO,kDACX3J,MAAK,SAAC4L,GACL,IAAIC,EAAY,GACZzP,EAAOwP,EAASxP,KACpBA,EAAK2B,OAAS,GACZ3B,EAAKiC,SAAQ,SAACiB,GACZ,IAAIyM,EAAa,CACfD,MAAOxM,EAAE4M,UACTtN,MAAOU,EAAEK,IAEXkM,EAAUtN,KAAKwN,EACjB,IACFnD,EAAYiD,GAEZ,IAAIG,EAAkBpO,KAAKC,MAAMD,KAAKE,UAAU+N,IAAYI,QAC1D,SAAC3N,GAAC,OAAyC,GAApCA,EAAEwN,MAAMvI,SAAS,eAAwB,IAGlDuF,EAAmBkD,EACrB,IACCR,OAAM,SAACC,GAAK,OAAK3G,QAAQC,IAAI0G,EAAM,GA8ExC,GAAG,KACH9N,EAAAA,EAAAA,YAAU,WACRkN,IACF,GAAG,CAAC5F,GAAS8E,YAEb,IAIMoC,GAAgB,SAAH,GAAc,EAARC,SAAQ,OAC/B,+BAEI,SAAC,MAAW,CAAC/I,UAAU,iBAIxB,EASL,IAA4BnG,EAAAA,EAAAA,UAAS,IAAG,iBAAjCmP,GAAM,MAAEC,GAAS,OAIxB3O,EAAAA,EAAAA,YAAU,WACR4O,IACF,GAAG,IAEH,IAAMA,GAAW,WACfrB,IAAM,CACJC,OAAQ,MACRC,IAAKzB,GAAO,iDAA6CjC,KACxD1H,MAAK,SAACwM,GACIA,EAAKpQ,KAEXiC,SAAQ,SAACiC,GAdA,aAeRA,EAAKmM,cACPH,GAAU,CAAChM,GAEf,GACF,GACF,EAEMoM,GAAwB,SAACC,EAAiBC,GAC9C,IAAMC,EAAiBF,EAAgB9M,KAAI,SAACiN,GAAM,OAAKA,EAAOlO,KAAK,IAE7DmO,EAAYH,EAAW/M,KAAI,SAACS,GAAI,OAAKA,EAAK1B,KAAK,IAErD,OAAIiO,EAAe9O,SAAWgP,EAAUhP,OAC/B,YAEA4O,EAAgB9M,KAAI,SAACiN,GAAM,OAAKA,EAAOhB,KAAK,IAAEb,KAAK,KAE9D,EACA,OACE,4BACE,iBAAK5H,UAAU,YAAW,WACxB,iBAAKA,UAAU,YAAW,WACxB,gBAAKA,UAAU,cACf,gBAAKA,UAAU,WAAU,UACvB,wBAAI,sBAEN,gBAAKA,UAAU,mBAEjB,SAAC2J,EAAA,EAAiB,CAChBX,OAAQA,GACRY,kBA5CgB,CAAC,wBA+CrB,iBAAK5J,UAAU,wBAAuB,WACpC,iBAAKA,UAAU,2BAA0B,WACvC,wBAAI,oBACJ,gBAAKA,UAAU,UAAS,UACtB,SAAC6J,EAAA,EAAU,CAACC,QAlYF,oBAkYwBC,KAjYzB,2BAmYX,gBACE5J,QAAS,WACPsE,GAAYD,GAERI,EADJJ,EACoBE,EAAAA,IACAsF,EAAAA,IACtB,EAAE,UAEF,0BAAOrF,UAGX,SAAC,KAAS,CAACH,SAAUA,EAAQ,UAC3B,iBAAKxE,UAAU,oBAAmB,WAChC,gBAAKA,UAAU,iBAAgB,UAC7B,iBAAKA,UAAU,iBAAgB,WAC7B,kBAAOA,UAAU,QAAQiK,QAAQ,cAAa,SAAC,kBAG/C,iBAAMjK,UAAU,YAAW,SAAC,OAC5B,gBAAKA,UAAU,QAAO,UACpB,kBACElC,KAAK,OACLkC,UAAU,eACV1D,GAAG,cACHkE,aAAW,EACXjE,SAAU,SAACN,IApGb,SAACA,GACf,MAAsBA,EAAEC,OAAhBX,EAAK,EAALA,MAAS,EAAFe,GACf8K,IAAY,kBAAKxF,IAAQ,IAAE4E,YAAajL,IAC1C,CAkGoB2O,CAAQjO,EACV,YAKR,gBAAK+D,UAAU,iBAAgB,UAC7B,iBAAKA,UAAU,iBAAgB,WAC7B,kBAAOA,UAAU,QAAQiK,QAAQ,UAAS,SAAC,aAG3C,iBAAMjK,UAAU,YAAW,SAAC,OAC5B,gBAAKA,UAAU,QAAO,UACpB,gBAAKA,UAAU,yBAAwB,UACrC,SAAC,EAAAmK,wBAAuB,CACtBC,MAAOhF,EACPtH,KAAK,OACLiM,KAAK,UACLzN,GAAG,UACH0D,UAAU,MACVqK,YAAa,CAAEtP,KAAM,CAAC,KAAM,YAC5BuP,oBAAoB,UAEpBC,SAAUnF,EACViD,WAAYA,GACZmC,SAAU,SAACvO,GACTmL,IAAY,SAACqD,GAAS,yBACjBA,GAAS,IACZhE,QAASxK,EAAEK,IAAE,GAEjB,EACAoO,UAAU,EACVC,QAvHA,WAClBvD,IAAY,SAACwD,GAAI,yBAAWA,GAAI,IAAEnE,QAAS,MAAI,GACjD,cA2HU,gBAAKzG,UAAU,iBAAgB,UAC7B,iBAAKA,UAAU,iBAAgB,WAC7B,kBAAOA,UAAU,QAAQiK,QAAQ,YAAW,SAAC,mBAG7C,iBAAMjK,UAAU,YAAW,SAAC,OAC5B,gBAAKA,UAAU,QAAO,UACpB,SAAC,KAAW,CACV1D,GAAG,YACHuO,QAAS5F,EACT6F,cAAc,EACdvP,MAAO0K,GACP6C,cAAeA,GACfiC,UAAU,EACVC,gBAAiB,CACfC,kBAAmB,aACnBC,gBAAiB,YAEnB3O,SAAU,SAACN,GACTiK,GAAoBjK,GACpB,IAAIkP,EAAkB,GACtBlP,EAAEjB,SAAQ,SAACC,GACTkQ,EAAgBjQ,KAAKD,EAAEM,MACzB,IACA6L,IAAY,SAACgE,GAAO,yBACfA,GAAO,cACT,YAAcD,EAAgBE,YAAU,IAE3C7D,GAAY2D,EACd,EACAG,cAAejC,aAKvB,gBAAKrJ,UAAU,iBAAgB,UAC7B,iBAAKA,UAAU,iBAAgB,WAC7B,kBAAOA,UAAU,QAAQiK,QAAQ,WAAU,SAAC,cAG5C,iBAAMjK,UAAU,YAAW,SAAC,OAC5B,gBAAKA,UAAU,QAAO,UACpB,oBACEA,UAAU,GACV1D,GAAG,WACHC,SAAU,SAACN,GACT,MAAsBA,EAAEC,OAAhBX,EAAK,EAALA,MAAOe,EAAE,EAAFA,GACf8K,IAAY,kBAAKxF,IAAQ,cAAGtF,EAAKf,IACnC,EAAE,WAEF,mBAAQA,MAAM,KAAI,SAAC,aAClBgH,EAAS/F,KAAI,SAAC+O,GAAI,OACjB,oBAAQhQ,MAAOgQ,EAAKC,WAAW,UAAC,IAAED,EAAKE,YAAmB,eAMpE,gBAAKzL,UAAU,iBAAgB,UAC7B,iBAAKA,UAAU,iBAAgB,WAC7B,kBAAOA,UAAU,QAAQiK,QAAQ,gBAAe,SAAC,oBAGjD,iBAAMjK,UAAU,YAAW,SAAC,OAC5B,gBAAKA,UAAU,QAAO,UACpB,oBACE1D,GAAG,gBACHC,SAAU,SAACN,GACT,MAAsBA,EAAEC,OAAhBX,EAAK,EAALA,MAAOe,EAAE,EAAFA,GACf8K,IAAY,kBAAKxF,IAAQ,cAAGtF,EAAKf,IACnC,EAAE,WAEF,mBAAQA,MAAM,OAAM,SAAC,aACrB,mBAAQA,MAAM,MAAK,SAAC,SACpB,mBAAQA,MAAM,YAAW,SAAC,yBAKlC,gBAAKyE,UAAU,iBAAgB,UAC7B,iBAAKA,UAAU,iBAAgB,WAC7B,kBAAOA,UAAU,QAAQiK,QAAQ,eAAc,SAAC,mBAGhD,iBAAMjK,UAAU,YAAW,SAAC,OAC5B,gBAAKA,UAAU,QAAO,UACpB,oBACE1D,GAAG,eACHC,SAAU,SAACN,GACT,MAAsBA,EAAEC,OAAhBX,EAAK,EAALA,MAAOe,EAAE,EAAFA,GACToP,EAA0B,MAAVnQ,EAAgB,KAAOA,EAC7C6L,IAAY,kBAAKxF,IAAQ,cAAGtF,EAAKoP,IACnC,EAAE,WAEF,mBAAQnQ,MAAM,IAAG,SAAC,aACjBqK,GAAapJ,KAAI,SAAC+O,GAAI,OACrB,oBAAQhQ,MAAOgQ,EAAKjP,GAAG,UAAC,IAAEiP,EAAK1C,YAAmB,eAM5D,gBAAK7I,UAAU,iBAAgB,UAC7B,iBAAKA,UAAU,iBAAgB,WAC7B,kBAAOA,UAAU,QAAQiK,QAAQ,KAAI,SAAC,SAGtC,iBAAMjK,UAAU,YAAW,SAAC,OAC5B,gBAAKA,UAAU,QAAO,UACpB,oBACE1D,GAAG,KACHC,SAAU,SAACN,GACT,MAAsBA,EAAEC,OAAhBX,EAAK,EAALA,MAAOe,EAAE,EAAFA,GACf8K,IAAY,kBAAKxF,IAAQ,cAAGtF,EAAKf,IACnC,EAAE,UACH,kBAEC,mBAAQA,MAAM,OAAM,SAAC,aACrB,mBAAQA,MAAM,IAAG,SAAC,oBAClB,mBAAQA,MAAM,IAAG,SAAC,iCAK1B,gBAAKyE,UAAU,iBAAgB,UAC7B,iBAAKA,UAAU,iBAAgB,WAC7B,kBAAOA,UAAU,QAAQiK,QAAQ,eAAc,SAAC,mBAGhD,iBAAMjK,UAAU,YAAW,SAAC,OAC5B,gBAAKA,UAAU,QAAO,UACpB,oBACE1D,GAAG,eAKHC,SAAU,SAACN,GACT,MAAsBA,EAAEC,OAAhBX,EAAK,EAALA,MAAOe,EAAE,EAAFA,GACToP,EAA0B,SAAVnQ,EAAmB,KAAOA,EAChD6L,IAAY,kBAAKxF,IAAQ,cAAGtF,EAAKoP,IACnC,EAAE,WAEF,mBAAQnQ,MAAM,OAAM,SAAC,aACrB,mBAAQA,MAAM,MAAK,SAAC,iBACpB,mBAAQA,MAAM,MAAK,SAAC,YACpB,mBAAQA,MAAM,MAAK,SAAC,eACpB,mBAAQA,MAAM,MAAK,SAAC,6BAK5B,gBAAKyE,UAAU,iBAAgB,UAC7B,iBAAKA,UAAU,iBAAgB,WAC7B,kBAAOA,UAAU,SAASiK,QAAQ,iBAAgB,SAAC,qBAGnD,iBAAMjK,UAAU,YAAW,SAAC,OAC5B,gBAAKA,UAAU,QAAO,UACpB,oBACE1D,GAAG,iBAKHC,SAAU,SAACN,GACT,MAAsBA,EAAEC,OAAhBX,EAAK,EAALA,MAAOe,EAAE,EAAFA,GACToP,EAA0B,QAAVnQ,EAAkB,KAAOA,EAC/C6L,IAAY,kBAAKxF,IAAQ,cAAGtF,EAAKoP,IACnC,EAAE,WAEF,mBAAQnQ,MAAM,MAAK,SAAC,aACnBuK,GAAgBtJ,KAAI,SAAC+O,GAAI,OACxB,oBAAQhQ,MAAOgQ,EAAKjP,GAAG,UAAC,IAAEiP,EAAK1C,YAAmB,eAM5D,gBAAK7I,UAAU,iBAAgB,UAC7B,iBAAKA,UAAU,iBAAgB,WAC7B,kBAAOA,UAAU,QAAQiK,QAAQ,gBAAe,SAAC,oBAGjD,iBAAMjK,UAAU,YAAW,SAAC,OAC5B,gBAAKA,UAAU,QAAO,UACpB,SAAC,KAAW,CACV1D,GAAG,gBACHuO,QAASvF,EACTwF,cAAc,EACdhC,cAAeA,GACfvN,MAAOiK,EACPuF,UAAU,EACVC,gBAAiB,CACfC,kBAAmB,aACnBC,gBAAiB,YAEnB3O,SAAU,SAACN,GACTwJ,EAAmBxJ,GACnB,IAAIkP,EAAkB,GACtBlP,EAAEjB,SAAQ,SAACC,GACTkQ,EAAgBjQ,KAAKD,EAAEM,MACzB,IACA6L,IAAY,SAACgE,GAAO,yBACfA,GAAO,cACT,gBAAkBD,EAAgBE,YAAU,GAEjD,EACAC,cAAejC,aAKvB,gBAAKrJ,UAAU,iBAAgB,UAC7B,iBAAKA,UAAU,iBAAgB,WAC7B,kBAAOA,UAAU,QAAQiK,QAAQ,MAAK,SAAC,SAGvC,iBAAMjK,UAAU,YAAW,SAAC,OAC5B,gBAAKA,UAAU,QAAO,UACpB,oBACE1D,GAAG,MACHC,SAAU,SAACN,GACT,MAAsBA,EAAEC,OAAhBX,EAAK,EAALA,MAAOe,EAAE,EAAFA,GACf8K,IAAY,kBAAKxF,IAAQ,cAAGtF,EAAKf,IACnC,EAAE,WAEF,mBAAQA,MAAM,IAAIkB,SAAS,WAAU,SAAC,QAGtC,mBAAQlB,MAAM,IAAG,SAAC,mBAK1B,gBAAKyE,UAAU,iBAAgB,UAC7B,iBAAKA,UAAU,iBAAgB,WAC7B,kBAAOA,UAAU,QAAQiK,QAAQ,WAAU,SAAC,eAG5C,iBAAMjK,UAAU,YAAW,SAAC,OAC5B,gBAAKA,UAAU,QAAO,UACpB,oBACE1D,GAAG,WACHC,SAAU,SAACN,GACT,MAAsBA,EAAEC,OAAhBX,EAAK,EAALA,MAAOe,EAAE,EAAFA,GACf8K,IAAY,kBAAKxF,IAAQ,cAAGtF,EAAKf,IACnC,EAAE,WAEF,mBAAQA,MAAM,IAAG,SAAC,QAClB,mBAAQA,MAAM,IAAIkB,SAAS,WAAU,SAAC,mBAO9C,gBAAKuD,UAAU,iBAAgB,UAC7B,iBAAKA,UAAU,iBAAgB,WAC7B,kBAAOA,UAAU,SAASiK,QAAQ,oBAAmB,SAAC,wBAGtD,iBAAMjK,UAAU,YAAW,SAAC,OAC5B,gBAAKA,UAAU,QAAO,UACpB,oBACE1D,GAAG,oBACHC,SAAU,SAACN,GACT,MAAsBA,EAAEC,OAAhBX,EAAK,EAALA,MAAOe,EAAE,EAAFA,GACToP,EAA0B,SAAVnQ,GAAoB,EAAIA,EAC9C6L,IAAY,kBAAKxF,IAAQ,cAAGtF,EAAKoP,IACnC,EAAE,WAEF,mBAAQnQ,MAAM,OAAM,SAAC,aACrB,mBAAQA,MAAM,IAAIkB,SAAS,WAAU,SAAC,YAGtC,mBAAQlB,MAAM,IAAG,SAAC,cAClB,mBAAQA,MAAM,IAAG,SAAC,6BAK1B,gBAAKyE,UAAU,iBAAgB,UAC7B,iBAAKA,UAAU,iBAAgB,WAC7B,kBAAOA,UAAU,QAAQiK,QAAQ,cAAa,SAAC,sBAG/C,iBAAMjK,UAAU,YAAW,SAAC,OAC5B,gBAAKA,UAAU,QAAO,UACpB,gBAAKA,UAAU,yBAAwB,UACrC,SAAC,EAAAmK,wBAAuB,CACtBC,MAAO1E,GACP5H,KAAK,OACLiM,KAAK,iBACLzN,GAAG,iBACH0D,UAAU,MACVqK,YAAa,CAAEtP,KAAM,CAAC,KAAM,SAC5BuP,oBAAoB,OAEpBC,SAAU7E,GACVwC,mBAAoBA,GACpBsC,SAAU,SAACvO,GACTmL,IAAY,SAACqD,GAAS,yBACjBA,GAAS,IACZvD,eAAgBjL,EAAEK,IAAE,GAExB,EACAoO,UAAU,EACVC,QA9aC,WACnBvD,IAAY,SAACwD,GAAI,yBAAWA,GAAI,IAAE1D,eAAgB,MAAI,GACxD,cAmbU,gBAAKlH,UAAU,0DAAyD,UACtE,oBACElC,KAAK,SACLkC,UAAU,kBACVG,QAzuBM,WAClB,IAAMwL,EAAaC,YAAW,WAC5B9G,GAAU,EACZ,GAAG,KAEHyB,GAAgBlG,QAAU,IAAIwL,gBAE9BhE,IAAM,CACJC,OAAQ,OACRC,IAAKzB,GAAO,sCACZwF,OAAQvF,GAAgBlG,QAAQyL,OAEhC/S,KAAM,CACJyN,YAAa5E,GAAS4E,YACtBC,QAAS7E,GAAS6E,QAClBC,UAAW9E,GAAS8E,UACpBnE,SAAUX,GAASW,SACnBoE,cAAe/E,GAAS+E,cACxBf,aAAchE,GAASgE,aACvBgB,GAAIhF,GAASgF,GACbC,aAAcjF,GAASiF,aACvBC,eAAgBlF,GAASkF,eACzBC,cAAenF,GAASmF,cACxBC,IAAKpF,GAASoF,IACdC,kBAAmBrF,GAASqF,kBAC5BC,eAAgBtF,GAASsF,gBAE3BrK,QAAS,CAAE,eAAgB,sBAC1BF,MAAK,SAAC2L,GACP,IAAMvP,EAAOuP,EAASvP,KActB,GAZAA,EAAKgT,MAAK,SAACC,EAAGC,GACZ,IAAMC,EAAQF,EAAEvJ,aAAa0J,cACvBC,EAAQH,EAAExJ,aAAa0J,cAC7B,OAAID,EAAQE,GACF,EAENF,EAAQE,EACH,EAEF,CACT,IAEyB,GAArBxK,GAASuF,UAAiC,GAAhBvF,GAASoF,IAAU,CAC/CZ,IAAQ,GAmBRJ,GAjBiB,CACf,CACEvD,aAAc,OACdyB,aAAc,eACdjC,YAAa,kBACbE,gBAAiB,kBACjBkK,UAAW,gBACXhK,cAAe,aACfiK,UAAW,MACX/J,SAAU,WACVO,iBAAkB,YAClBE,eAAgB,aAChBE,gBAAiB,YACjBE,cAAe,aACf3C,UAAW,cAGI8L,OAAOxT,IAC1ByT,aAAab,GACblH,GAAYD,GAERI,EADJJ,EACoBE,EAAAA,IACAsF,EAAAA,IAEtB,MAAO,GAAyB,GAArBpI,GAASuF,UAAiC,GAAhBvF,GAASoF,IAAU,CACtDZ,IAAQ,GA4BRJ,GArBiB,CACf,CACEvD,aAAc,OACdyB,aAAc,eACdjC,YAAa,kBACbE,gBAAiB,kBACjBkK,UAAW,gBACXhK,cAAe,aACfiK,UAAW,MACX/J,SAAU,WACVO,iBAAkB,YAClBE,eAAgB,aAChBE,gBAAiB,YACjBE,cAAe,aACfG,kBAAmB,SACnBE,oBAAqB,WACrBE,gBAAiB,SACjBE,kBAAmB,WACnBpD,UAAW,cAGI8L,OAAOxT,IAC1ByT,aAAab,EACf,MAAO,GAAyB,GAArB/J,GAASuF,UAAiC,GAAhBvF,GAASoF,IAAU,CACtDZ,IAAQ,GAsBRJ,GApBiB,CACf,CACEvD,aAAc,OACdyB,aAAc,eACdjC,YAAa,kBACbE,gBAAiB,kBACjBkK,UAAW,gBACXhK,cAAe,aACfiK,UAAW,MACX/J,SAAU,WACVO,iBAAkB,YAClBE,eAAgB,aAChBE,gBAAiB,YACjBE,cAAe,aACfG,kBAAmB,SACnBE,oBAAqB,WACrBE,gBAAiB,SACjBE,kBAAmB,aAGJ0I,OAAOxT,IAC1ByT,aAAab,EACf,KAAO,CAiBL3F,GAhBiB,CACf,CACEvD,aAAc,OACdyB,aAAc,eACdjC,YAAa,kBACbE,gBAAiB,kBACjBkK,UAAW,gBACXhK,cAAe,aACfiK,UAAW,MACX/J,SAAU,WACVO,iBAAkB,YAClBE,eAAgB,aAChBE,gBAAiB,YACjBE,cAAe,eAGAmJ,OAAOxT,IAC1ByT,aAAab,EACf,CAGAxF,GAFY,CAAC,iBAGbE,GAFiB,CAAC,kCAGlBrB,GAAa,EACf,GACF,EAilBmC,WAErB,SAAC,MAAQ,IAAG,UAAQ,cAK3BH,GAAS,SAAC4H,EAAA,EAAM,CAACC,YAvlBJ,WAClBnG,GAAgBlG,SAAWkG,GAAgBlG,QAAQsM,QACnD7H,GAAU,EACZ,IAolBuD,OAEnD,gBAAK9E,UAAU,iBAAgB,UAC7B,iBACEA,UAAU,oBACQ,WAElB,SAAC,MAAa,IAAG,2FAKpB+E,GACC,SAAC,EAAkB,CACjBnD,SAAUA,GACV7I,KAAMA,GACNK,YAAaA,GACbC,kBAAmBA,GACnBwI,KAAMA,KAGR,MAIR,E,UC50Be,SAAS,EAAC/I,GACvB,IAAQ8T,EAAsB9T,EAAtB8T,kBACR,OACE,gBAAK5M,UAAU,gBAAe,SACE,IAA7B4M,EAAkBlS,QACjB,gBAAKsF,UAAU,YAAW,SAAC,mBAK3B,kBAAOlC,KAAK,cAIpB,C,sEC4ZA,GA3ZiB+O,EAAAA,EAAAA,aAAW,SAAC/T,EAAOyI,GAClC,IAAMuL,EAAQhU,EAAMyC,MACZqR,EAAsB9T,EAAtB8T,kBACRnL,QAAQC,IAAIoL,GACZ,IAAMxG,EAAUvE,EAAAA,EAAAA,QAChB,GAAwClI,EAAAA,EAAAA,WAAS,GAAM,eAAhDkT,EAAY,KAAEC,EAAe,KACpC,GAAoCnT,EAAAA,EAAAA,UAAS,IAAG,eAAzCoT,EAAU,KAAEC,EAAa,KAChC,GAA4CrT,EAAAA,EAAAA,UAAS,IAAG,eAAjDsT,EAAc,KAAEC,EAAiB,KACxC,GAAsDvT,EAAAA,EAAAA,WAAS,GAAM,eAA9DwT,EAAmB,KAAEC,EAAsB,KAClD,GAAwCzT,EAAAA,EAAAA,UAAS,IAAG,eAA7C0T,EAAY,KAAEC,EAAe,KACpC,GAAwC3T,EAAAA,EAAAA,WAAS,GAAM,eAAhD4T,EAAY,KAAEC,EAAe,KACpC,GAA4B7T,EAAAA,EAAAA,UAAS,IAAG,eAAjC8T,EAAM,KAAEC,EAAS,KACxBnM,QAAQC,IAAI5I,EAAMyC,OAElBkG,QAAQC,IAAI,iBACZD,QAAQC,IAAIkL,GACZnL,QAAQC,IAAI5I,EAAM8T,mBAElBnL,QAAQC,IAAIuL,GACZxL,QAAQC,IAAIkL,GAEZ,IAAMiB,EAAQ,CACZC,MACE,gBACEC,IAAKC,EACLC,IAAI,sBACJrL,MAAO,CAAEsL,OAAQ,QACjB/S,MAAM,gBAGVgT,MACE,gBACEJ,IAAKK,EACLH,IAAI,oBACJrL,MAAO,CAAEsL,OAAQ,QACjB/S,MAAM,oBAGVkT,MACE,gBACEN,IAAKO,EACLL,IAAI,oBACJrL,MAAO,CAAEsL,OAAQ,QACjB/S,MAAM,8BAGVoT,OACE,gBACER,IAAKS,EACLP,IAAI,uBACJrL,MAAO,CAAEsL,OAAQ,QACjB/S,MAAM,kBAGVsT,OACE,gBACEV,IAAKW,EACLT,IAAI,qBACJrL,MAAO,CAAEsL,OAAQ,QACjB/S,MAAM,sBAGVwT,OACE,gBACEZ,IAAKa,EACLX,IAAI,qBACJrL,MAAO,CAAEsL,OAAQ,QACjB/S,MAAM,kCAOZ0T,EAAAA,EAAAA,qBAAoBtN,GAAK,iBAAO,CAC9BuN,eAAc,WACZxK,aAAayK,QAAQ,aAAcxU,KAAKE,UAAUwS,IAEjC,eAAfnU,EAAMyC,OAEF+I,aAAayK,QAAQ,eAAgBtB,EAE7C,EACAuB,kBAAiB,WACf,IAAMC,EACmC,OAAvC3K,aAAaC,QAAQ,cACjB,GACAhK,KAAKC,MAAM8J,aAAaC,QAAQ,eACtC2I,EAAc+B,GAEG,eAAfnW,EAAMyC,OAEFmS,EAC2C,SAAzCpJ,aAAaC,QAAQ,gBAG/B,EACD,IAGD,IAAM2K,EAAa,SAACC,GAClB1N,QAAQC,IAAI,0BAA2ByN,GAEvCjC,GAAc,SAACkC,GACb,OAAOA,EAAUC,MAAK,SAAC7N,GAAE,OAAKA,EAAGlF,KAAO6S,EAAI7S,EAAE,IAC1C8S,EAAUxG,QAAO,SAAC3L,GAChB,OAAOA,EAAKX,KAAO6S,EAAI7S,EACzB,IAAE,kBACE8S,GAAS,CAAED,GACrB,GACF,EAEMG,EAAkB,SAACH,GACvB,OACE,iBAEEnP,UAAU,kBACV4C,MAAO,CACL2M,WAAY,SACZC,SAAU,SACVC,aAAc,YACd,SAEc,eAAf3W,EAAMyC,OACL,iCACE,kBACEuC,KAAK,WACLxB,GAAI6S,EAAI7S,GACRyN,KAAMoF,EAAIpF,KACVxN,SAAU,SAACN,GAAC,OAAKiT,EAAWC,EAAI,EAChCO,QAASzC,EAAWoC,MAAK,SAAC7N,GAAE,OAAKA,EAAGlF,KAAO6S,EAAI7S,EAAE,IACjD0D,UAAU,UAEZ,iBAAM7E,MAAOgU,EAAIQ,KAAK,SAAER,EAAIQ,WAG9B,gCACG,KACD,kBACE7R,KAAK,WACLxB,GAAI6S,EAAI7S,GACRyN,KAAMoF,EAAIS,gBACVrT,SAAU,SAACN,GAAC,OAAKiT,EAAWC,EAAI,EAChCO,QAASzC,EAAWoC,MAAK,SAAC7N,GAAE,OAAKA,EAAGlF,KAAO6S,EAAI7S,EAAE,MAC1C,OAERuR,EAAMsB,EAAIrR,MAAM,QACjB,iBAAM3C,MAAOgU,EAAIS,gBAAgB,SAAET,EAAIS,sBAhCtCT,EAAI7S,GAqCf,EACAmF,QAAQC,IAAI,0DACZD,QAAQC,IAAIuL,GAqHZ,OAvDA3S,EAAAA,EAAAA,YAAU,WACR8S,GAAkB,WAChB,MAAsB,eAAftU,EAAMyC,MACTqR,EACGhE,QAAO,SAAC3L,GACP,OAAOA,EAAK8M,IAEd,IACCvN,KAAI,SAACS,GACJ,OAAOqS,EAAgBrS,EACzB,IACF2P,EACGhE,QAAO,SAAC3L,GACP,OAAOA,EAAK2S,eAEd,IACCpT,KAAI,SAACS,GACJ,OAAOqS,EAAgBrS,EACzB,GACR,SACuBgD,GAAvBnH,EAAM+W,eAA8B/W,EAAMgX,iBAAiB7C,EAC7D,GAAG,CAACA,EAAYU,IAGC,eAAf7U,EAAMyC,QAEFjB,EAAAA,EAAAA,YAAU,WACR4S,GAAc,SAACkC,GACb,OAAOA,EAAUxG,QAAO,SAACpH,GAAE,MAAmB,cAAdA,EAAGuO,MAAsB,GAC3D,GACF,GAAG,CAAChD,KAGVzS,EAAAA,EAAAA,YAAU,WAxDS,eAAfxB,EAAMyC,MACFsM,IAAAA,IACOvB,EAAO,sCACX3J,MAAK,SAACwM,GACL,IAAMpQ,EAAOoQ,EAAKpQ,KAClByU,EAAgBzU,EAClB,IACCoP,OAAM,SAACgB,GACN1H,QAAQC,IAAIyH,EACd,IACFtB,IAAAA,IACOvB,EAAO,yCACX3J,MAAK,SAACwM,GACL,IAAMpQ,EAAOoQ,EAAKpQ,KAClByU,EAAgBzU,EAClB,IACCoP,OAAM,SAACgB,GACN1H,QAAQC,IAAIyH,EACd,GA2CV,GAAG,KAEH7O,EAAAA,EAAAA,YAAU,WACR,IAAM2U,EACmC,OAAvC3K,aAAaC,QAAQ,cACjB,GACAhK,KAAKC,MAAM8J,aAAaC,QAAQ,eACvB,eAAfzL,EAAMyC,OAhFN2R,GAAc,SAACkC,GACb,IAAMY,EAAQZ,EAAU5S,KAAI,SAACS,GAAI,OAAKA,EAAKX,EAAE,IACvC2T,EAAW1C,EAAa3E,QAAO,SAAC3L,GAAI,OAAM+S,EAAM9P,SAASjD,EAAKX,GAAG,IACvE,MAAM,GAAN,eAAW8S,IAAS,OAAKa,GAC3B,IACA3C,GAAuB,IA6EnBJ,EAAc+B,GACH,eAAfnW,EAAMyC,OAEFmS,EAC2C,SAAzCpJ,aAAaC,QAAQ,gBAE7B,GAAG,CAACgJ,KAGF,iBAAKvN,UAAU,YAAW,WACxB,iBAAKA,UAAU,YAAW,WAIxB,gBAAKA,UAAU,gBAAe,UAC5B,iBAAKA,UAAU,iBAAgB,WAC7B,kBAAOA,UAAU,QAAQiK,QAAQ,iBAAgB,SAAC,YAGlD,iBAAMjK,UAAU,SAAQ,SAAC,OACzB,gBAAKA,UAAU,QAAO,UACpB,kBACElC,KAAK,OACL0C,YAAY,iBACZjE,SAAU,SAACN,GAAC,OAAK2R,EAAU3R,EAAEC,OAAOX,MAAM2U,cAAc,WAMhD,eAAfpX,EAAMyC,MACL,IAEA,gCACG,KACD,iBAAKyE,UAAU,WAAU,WACvB,2BAAO,kBAAqB,QAC5B,kBACElC,KAAK,WACLxB,GAAG,eACHyN,KAAK,eACLxN,SAAU,WACRyQ,GAAgB,SAACoC,GACf,OAAQA,CACV,GACF,EACAM,QAAS3C,IACF,WAGX,iBAAK/M,UAAU,WAAU,WACvB,2BAAO,sBAAyB,QAChC,kBACElC,KAAK,WACLxB,GAAG,mBACHyN,KAAK,mBACLxN,SAAU,kBAAMmR,GAAgB,SAAC0B,GAAS,OAAMA,CAAS,GAAC,EAC1DM,QAASjC,IACF,iBAOjB,iBAAKzN,UAAU,sBAAqB,WAClC,kBACElC,KAAK,WACLxB,GAAG,gBACHyN,KAAK,gBACL/J,UAAU,mBACVzD,SAAU,WACR2Q,EAAc,GAChB,EACAwC,QAASzC,EAAWvS,OAAS,KAE/B,mBAAOsF,UAAU,mBAAkB,UAAC,mBACnB,iBAAMA,UAAU,SAAQ,SAAC,aAG5C,+BACE,SAACmQ,EAAqB,CACpBhD,eAAgBA,EAChBP,kBAAmBA,OAGvB,gBAAK5M,UAAU,wBAAwB4C,MAAO,CAAEsL,OAAQ,WAExD,iBAAKlO,UAAU,sBAAqB,UAClB,eAAflH,EAAMyC,MACL,IAEA,gCACG,KACD,gBAAKyE,UAAU,eAAc,UAC3B,gBAAKA,UAAU,oCAMrB,iBAAKA,UAAU,uBAAsB,WACnC,iBAAKA,UAAU,sBAAqB,WAClC,kBACElC,KAAK,WACLkC,UAAU,mBACVzD,SArNc,WACxBkF,QAAQC,IAAI5I,EAAMyC,OAed2R,EAdHG,EAciB,SAAC+B,GACb,IAAMY,EAAQzC,EAAa/Q,KAAI,SAACS,GAAI,OAAKA,EAAKX,EAAE,IAEhD,OADiB8S,EAAUxG,QAAO,SAAC3L,GAAI,OAAM+S,EAAM9P,SAASjD,EAAKX,GAAG,GAEtE,EAjBc,SAAC8S,GACb,IAAMY,EAAQZ,EAAU5S,KAAI,SAACS,GAAI,OAAKA,EAAKX,EAAE,IACvC2T,EACY,gBAAhBnX,EAAMyC,MACFgS,EAAa3E,QAAO,SAAC3L,GAAI,OAAM+S,EAAM9P,SAASjD,EAAKX,GAAG,IACtDiR,EACG3E,QACC,SAAC3L,GAAI,OACHA,EAAK8S,UAAYhD,EAAe,GAAK,cAAc,IAEtDnE,QAAO,SAAC3L,GAAI,OAAM+S,EAAM9P,SAASjD,EAAKX,GAAG,IAClD,MAAM,GAAN,eAAW8S,IAAS,OAAKa,GAC3B,GAMJ3C,GAAuB,SAAC8B,GAAS,OAAMA,CAAS,GAClD,EAgMYM,QAASrC,KAEX,mBAAOrN,UAAU,mBAAkB,UACjB,eAAflH,EAAMyC,MACH,gBACA,uCACJ,iBAAMyE,UAAU,SAAQ,SAAC,aAG7B,yBAUA,gBAAKA,UAAU,qBAAqB4C,MAAO,CAAEsL,OAAQ,UACrC,eAAfpV,EAAMyC,MACL,IAEA,gCACG,KACD,gBAAKyE,UAAU,yCAc7B,I,sBC5Ze,SAASoQ,EAAkB,GAOtC,IANF7U,EAAK,EAALA,MACAiJ,EAAO,EAAPA,QACAC,EAAU,EAAVA,WACAqL,EAAgB,EAAhBA,iBACAlD,EAAiB,EAAjBA,kBACAiD,EAAa,EAAbA,cAMMQ,GAAchW,EAAAA,EAAAA,QAAO,MACrBiW,GAAWC,EAAAA,EAAAA,MACjB,OACE,+BACE,UAAC,KAAM,CACL/L,QAASA,EACTgM,QAAS,kBAAM/L,GAAW,EAAM,EAChCgM,KAAK,KACL,WAEA,SAAC,KAAY,WACX,SAAC,KAAW,UACA,eAATlV,EAAyB,mBAAqB,yBAGnD,SAAC,KAAU,WACT,SAAC,EAAc,CACbgG,IAAK8O,EACL9U,MAAOA,EACPuU,iBAAkBA,EAClBD,cAAeA,EACfjD,kBAAmBA,MAGb,eAATrR,EACC,IAEA,UAAC,KAAY,YACX,SAAC,KAAO,CACN4E,QAAS,WACPmQ,GAASI,EAAAA,EAAAA,IAAiB,SAC1BL,EAAYhQ,QAAQ2O,mBACtB,EAAE,SACH,UAGD,SAAC,KAAO,CACN7O,QAAS,WACPkQ,EAAYhQ,QAAQyO,iBACpBwB,GAASI,EAAAA,EAAAA,IAAiB,SAC1BjM,GAAW,EACb,EAAE,SACH,gBAQb,C,yFCydA,OAlhBA,SAAwB,GACb,EAATkM,UACY,EAAZC,aACI,EAAJ7X,KACQ,EAAR8X,SAUE,IAAD,EATDC,EAAU,EAAVA,WACAC,EAAS,EAATA,UAGAC,GAFQ,EAARC,SACY,EAAZC,aACe,EAAfF,iBACAG,EAAiB,EAAjBA,kBAEAC,GADS,EAATC,UACY,EAAZD,cACAE,EAAY,EAAZA,aAEA,GAA0BzX,EAAAA,EAAAA,UAAS,IAAG,eAEtC,GAFY,KAAU,MAEUA,EAAAA,EAAAA,UAAS,KAAG,eAA3B0X,GAAF,KAAa,MAC5B,GAAkC1X,EAAAA,EAAAA,UAAS,IAAG,eAAvC2X,EAAS,KAAEC,EAAY,KAC9B,GAAoC5X,EAAAA,EAAAA,UAAS,IAAG,eAAzCP,EAAU,KAAEC,EAAa,KAChC,GAAoCM,EAAAA,EAAAA,UAAS,IAAG,eAC1CyM,GADW,KAAe,KAChBvE,EAAAA,EAAAA,SAChB,GAAsClI,EAAAA,EAAAA,WAAS,GAAM,eAA9C6X,EAAW,KAClB,GADkC,MACA7X,EAAAA,EAAAA,UAAS,KAAG,eAA5B8X,GAAF,KAAc,MAC9B,GAAsC9X,EAAAA,EAAAA,WAAS,GAAM,eAA9C+X,EAAW,KAAEC,EAAc,KAClC,GAAoChY,EAAAA,EAAAA,UAAS,IAAG,eAChD,GADiB,KAAe,MACJA,EAAAA,EAAAA,UAAS,KAAG,eAOxC,GAPa,KAAW,MAOYA,EAAAA,EAAAA,UALjB,CACjByC,GAAI,GACJwV,cAAe,GACfC,cAAe,MAEuC,eAAjDC,GAAU,KACjB,IADgC,MACJnY,EAAAA,EAAAA,UAASmY,KAAW,iBAAjCC,IAAF,MAAW,OAGxB,IAAkCpY,EAAAA,EAAAA,WAAS,GAAM,iBAA1CqY,GAAS,MAAEC,GAAY,MAgJ9B,IAAkBtY,EAAAA,EAAAA,UAAS,IAAG,iBAAtB,MAAM,OACdS,EAAAA,EAAAA,YAAU,WACRyW,EAAU,IAAMxX,EAAcgB,KAAKC,MAAMD,KAAKE,UAAUsW,EAAU,KACpE,GAAG,CAACA,IAEJ,IAAMjN,GAAe,SAAC/K,GACpB,OACE,+BACE,gBACE6J,MAAO,CACLwP,MAAO,SACPC,UAAW,SACXC,OAAQ,SACRC,OAAQ,WACR,UAGF,SAAC,OAAY,CACX,cAAY,UACZpX,MAAM,SAENgF,QAAS,WA1DjB0R,GAAe,GA6DLJ,EAAa1Y,EAAKuD,GAEpB,OAKV,EAqBMkW,GAAuB,SAACzZ,GAC5B,OACE,8BACyB,QAAtBA,EAAK+Y,eACJ,yBAAK,eAEL,oBACExV,GAAG,gBAEHC,SAAU,SAACN,IA5BJ,SAACA,EAAGlD,GACnB,MAAuB,OAADkD,QAAC,IAADA,OAAC,EAADA,EAAGC,OAAf,EAAFI,GAAS,EAALf,MAOZoW,GAAa,SAACc,GAAQ,OACZ,OAARA,QAAQ,IAARA,OAAQ,EAARA,EAAUjW,KAAI,SAACS,GAAI,OACjBA,EAAKX,KAAOvD,EAAKuD,IAAE,kBAAQW,GAAI,IAAEyV,UAAU,IAASzV,CAAI,GACzD,IAGHmU,GAAa,SAACxG,GAAI,+BACbA,GAAI,cACN7R,EAAKuD,GAAM,OAADL,QAAC,IAADA,GAAS,QAAR,EAADA,EAAGC,cAAM,WAAR,EAAD,EAAWX,OAAK,GAE/B,CAWYoX,CAAS1W,EAAGlD,EACd,EAIAwH,aAAcxH,EAAK+Y,cAAc,WAWjC,mBACEvW,MAAM,OACNkB,SAAqC,QAA3BwV,GAAUH,cACpB,SACD,SAGD,mBACEvW,MAAM,OACNkB,SAAqC,QAA3BwV,GAAUH,cAEpB,SACD,iBAGD,mBACEvW,MAAM,OACNkB,SAAqC,QAA3BwV,GAAUH,cAEpB,SACD,kBAOX,EAEMc,GAAgB,SAAC7Z,GACrB,OACE,gBAAKoC,MAAO2V,EAAY9Q,UAAU,sBAAqB,SACpD8Q,GAGP,EACM+B,GAAa,SAAC9Z,GAClB,OACE,gBACE,cAAY,UACZoC,MAAOpC,EAAK+Z,kBACZ9S,UAAU,sBAAqB,SAE9BjH,EAAK+Z,mBAGZ,EACMC,GAAa,SAACha,GAClB,OACE,gBACE6J,MAAO,CAAEyP,UAAW,UACpBW,GAAC,EACD7X,MAAO8X,IAAOla,EAAKma,cAAcC,OAAO,eAAe,SAEtDF,IAAOla,EAAKma,cAAcC,OAAO,gBAGxC,EACMC,GAAgB,SAACra,GACrB,OACE,gBACE6J,MAAO,CAAEyP,UAAW,UACpBlX,MAAO8X,IAAOla,EAAKsa,UAAUF,OAAO,eAAe,SAElDF,IAAOla,EAAKsa,UAAUF,OAAO,gBAGpC,EAEMG,GAAgB,SAACva,GACrB,OACE,gBACE6J,MAAO,CAAEyP,UAAW,UACpBlX,MACyB,gBAAvBpC,EAAKwa,eACD,GACAN,IAAOla,EAAKwa,gBAAgBJ,OAAO,eACxC,SAEuB,MAAvBpa,EAAKwa,eACF,GACAN,IAAOla,EAAKwa,gBAAgBJ,OAAO,gBAG7C,EAEMK,GAAS,SAACza,GACd,OACE,gBAAK,cAAY,UAAUoC,MAAOpC,EAAK0a,OAAO,SAC3C1a,EAAK0a,QAGZ,EAEMC,GAAW,SAAC3a,GAChB,OAAO,gBAAK6J,MAAO,CAAEyP,UAAW,UAAW,SAAEtZ,EAAK4a,KACpD,EACM1a,GAAwC,QAA1B,EAAG6B,OAAOC,KAAKzB,UAAW,aAAvB,EAAyBkD,KAAI,SAACtD,EAAKuF,GACxD,OACE,SAAC,IAAM,CACLkC,UAAQ,EAERwD,KACS,MAAPjL,EACI4K,GACO,iBAAP5K,EACAsZ,GACO,kBAAPtZ,EACA0Z,GACO,gBAAP1Z,EACA6Z,GACO,YAAP7Z,EACAka,GACO,kBAAPla,EACAoa,GACO,UAAPpa,EACAsa,GACO,OAAPta,EACAwa,GACO,qBAAPxa,GAA8B2Z,GAEpCjS,MAAO1H,EACPgE,OAAQ5D,EAAWJ,IArBdA,EAwBX,IACA,SAAS0a,GAAa9a,GACpB,IAAQ8Y,EAA8C9Y,EAA9C8Y,YAAaC,EAAiC/Y,EAAjC+Y,eAAgBgC,EAAiB/a,EAAjB+a,aACrC,OACE,gBAAK7T,UAAU,uBAAsB,UAEnC,UAAC,KAAM,CACLwE,QAASoN,EACTnB,KAAK,KACLzQ,UAAU,YACVwQ,QAAS,kBAAMqB,GAAe,EAAM,EAAC,WAErC,SAAC,KAAY,CAACjP,MAAO,CAAE2P,OAAQ,cAAe,UAC5C,SAAC,KAAW,WACV,iBAAMvS,UAAU,GAAE,SAAC,6BAGvB,UAAC,KAAU,YACT,iBAAM4C,MAAO,CAAEyP,UAAW,UAAW,SAAC,uDAGtC,iBAAKrS,UAAU,0DAAyD,WACtE,oBAEElC,KAAK,SACLkC,UAAU,kBACVG,QAAS,WACP0T,IACAhC,GAAe,EACjB,EAAE,WAEF,SAAC,OAAc,IAAG,MACd,QAEN,oBAEE/T,KAAK,SACLkC,UAAU,kBACVG,QAAS,WACP0R,GAAe,EACjB,EAAE,WAEF,SAAC,OAAc,IAAG,KACf,iBAQjB,CAEA,OACE,4BACE,2BACGV,GACC,iBAAKnR,UAAU,kBAAiB,UAC7B,KACD,4BACG,KACD,SAAC,MAAgB,IAAG,4CAIxB,GAEDgR,GACC,gBAAKhR,UAAU,oBAAmB,UAChC,kBAAMA,UAAU,SAAQ,WACtB,SAAC,MAAO,IAAG,6CAKf,GAED0R,GACC,gBAAK1R,UAAU,kBAAiB,UAC9B,kBAAMA,UAAU,SAAQ,WACtB,SAAC,OAAa,IAAG,6CAKrB,GAGDkS,IACC,gBAAKlS,UAAU,oBAAmB,UAChC,kBAAMA,UAAU,SAAQ,WACtB,SAAC,MAAO,IAAG,+CAKf,IAEF,4BACE,iBACEA,UAAU,aACV4C,MAAO,CAAEwP,MAAO,UAAW0B,WAAY,QAAS,SACjD,mBAID,SAACC,EAAA,EAA+B,CAC9Bhb,KAAMgY,EACN/X,KArcC,CAAC,IAscFC,eAAgBA,GAChBK,WAAYA,EACZC,cAAeA,QAGnB,iBAAKyG,UAAU,0DAAyD,UACrE,KACD,oBACEA,UAAU,kBACVG,QAAS,WASPmR,GACF,EAAE,WAEF,SAAC,MAAM,IAAG,iBAIfM,GACC,SAACgC,GAAY,CACXhC,YAAaA,EACbC,eAAgBA,EAChBgC,aAvWa,WACnB1B,IAAa,GACbtK,IAAAA,OACUvB,EAAO,iDAA6CkL,IAC3D7U,MAAK,SAACqL,GACL,IAAMgM,EAAMhM,EAAIjP,KAChBwY,EAAYyC,GAEZ7B,IAAa,GACbvG,YAAW,WACTuG,IAAa,EACf,GAAG,IACL,GACJ,IA6VM,KAIR,E,+DCfA,OAxfA,SAA0BrZ,GAAQ,IAAD,EAC/B,GAAkCe,EAAAA,EAAAA,WAAS,GAAM,eAA1C8W,EAAS,KAAEC,EAAY,KAC9B,GAA0B/W,EAAAA,EAAAA,UAAS,IAAG,eAA/Boa,EAAK,KAAEC,EAAQ,KACtB,GAAgCra,EAAAA,EAAAA,UAAS,IAAG,eAArCgX,EAAQ,KAAEsD,EAAW,KAC5B,GAAoCta,EAAAA,EAAAA,UAAS,IAAG,eAAzCiX,EAAU,KAAEsD,EAAa,KAChC,GAAsCva,EAAAA,EAAAA,UAAS,IAAG,eAA9Bwa,GAAF,KAAgB,MAClC,GAAgCxa,EAAAA,EAAAA,UAAS,IAAG,eAArCoX,EAAQ,KAAEqD,EAAW,KACtBhO,EAAUvE,EAAAA,EAAAA,QAChB,GAAoClI,EAAAA,EAAAA,UAAS,IAAG,eAAzC0a,EAAU,KAAEC,EAAa,KAChC,GAAsC3a,EAAAA,EAAAA,WAAS,GAAM,eAA9C+X,EAAW,KAAEC,EAAc,KAC1B4C,EAA4D3b,EAA5D2b,KAAMC,EAAsD5b,EAAtD4b,QAASrN,EAA6CvO,EAA7CuO,UAAwBsN,GAAqB7b,EAAlC0N,YAAkC1N,EAArB6b,kBAC/C,GAAwB9a,EAAAA,EAAAA,UAAS,CAAC,CAAC,IAAG,eAA/Bd,EAAI,KAAEiN,EAAO,KACpB,GAAkCnM,EAAAA,EAAAA,UAAS,CAAC,CAAC,IAAG,gBAAzCkX,GAAS,MAAE6D,GAAY,MAC9B,IAAgC/a,EAAAA,EAAAA,UAAS,MAAK,iBAAvCgb,GAAQ,MAAEC,GAAW,MAEtBC,GAAc,WAClBD,IAAY,EACd,EAYME,IAVYC,EAAAA,EAAAA,GAAW,CAC3BC,OAAQ,CACNC,SAAU,WACVC,IAAK,QACLC,UAAW,OAEbC,UAAW,CACTC,OAAQ,6BAGIC,GAIhB,IAA8B3b,EAAAA,EAAAA,UAAS,IAAG,iBA0CpCiK,IA1CQ,MAAY,MA0CL,SAAC/K,GAGpB,OAFAqb,EAAcrb,EAAK0c,UACnBnB,EAAYvb,EAAK2c,YAEf,+BACE,iBAGEva,MAAOpC,EAAK4c,SACZ/S,MAAO,CAAE2P,OAAQ,UAAWF,UAAW,SAAUD,MAAO,WACxDjS,QAAS,WACPyQ,GAAa,GACbM,GAAiB,OAAJnY,QAAI,IAAJA,OAAI,EAAJA,EAAM6c,OACnBzB,EAAYpb,EAAK6c,OACjBxB,EAAcrb,EAAK0c,UACnBnB,EAAYvb,EAAK2c,UACnB,EAAE,UAEF,gBAAK9S,MAAO,CAAEyP,UAAW,UAAW,SACf,IAAlBtZ,EAAK4c,SAAiB5c,EAAK4c,SAAW,QAKjD,GACMzE,GAAe,SAAC5U,QACT2D,IAAP3D,GACFuL,IAAAA,IAEIvB,EAAO,iEACqDhK,IAG7DK,MAAK,SAACqL,GACL,IAAM6N,EAAU7N,EAAIjP,KAChBkP,EAAS,GACb4N,EAAQ7a,SAAQ,SAAC8a,GACf,IAAIC,EAAM,CACRxa,MAAOua,EAAQxZ,IAEjB2L,EAAO/M,KAAK6a,EAEd,IAEA,IAAK,IAAItX,EAAI,EAAGA,EAAIoX,EAAQnb,OAAQ+D,IAClCoX,EAAQpX,GAAQ,IAAIA,EAAI,EAE1B,IAAI8V,EAAa,CACf,CACEZ,IAAK,OACLF,OAAQ,SACRP,aAAc,eACdG,SAAU,WACVE,eAAgB,iBAChBT,kBAAmB,oBACnBkD,eAAgB,aAChBlE,cAAe,SACfxV,GAAI,WAIRsY,GAAaL,EAAWhI,OAAOsJ,IAG/BjB,GACEL,EAAWhI,OACTsJ,EAAQrZ,KAAI,SAACS,GAAI,yBAAWA,GAAI,IAAEyV,UAAU,GAAK,KAGvD,GAEN,GACApY,EAAAA,EAAAA,YAAU,WAlGRuN,IAAAA,IACOvB,EAAO,qDAAiDe,IAE5D1K,MAAK,SAACqL,GAeL,IAdA,IAAM6N,EAAU7N,EAAIjP,KAcX0F,EAAI,EAAGA,EAAIoX,EAAQnb,OAAQ+D,IAClCoX,EAAQpX,GAAa,SACO,GAA1BoX,EAAQpX,GAAa,SAAS,GAAKoX,EAAQpX,GAAa,SAE5DuH,EAhBiB,CACf,CACEiQ,IAAK,OACLC,UAAW,cACXR,UAAW,SACXS,SAAU,OACVV,SAAU,WACVE,SAAU,eACVS,SAAU,SACVC,SAAU,aAOK9J,OAAOsJ,GAC5B,IACC1N,OAAM,SAACC,GAAW,IAtCrBP,IAAM,CACJC,OAAQ,MACRC,IACEzB,EAAO,4DAC8Ce,KAEtD1K,MAAK,SAAU2L,GACd,IAAIa,EAAOb,EAASvP,KACpBsb,EAAelL,EACjB,IACChB,OAAM,SAAUG,GAAW,IAyG9B4I,IACF,GAAG,IAEH,IAAMoF,GAAqB,SAACvd,GAC1B,OACE,+BACE,iBACEiH,UAAU,uBACV,cAAY,UACZ7E,MAAOpC,EAAKqd,SACZxT,MAAO,CAAE2P,OAAQ,UAAWF,UAAW,SAAUD,MAAO,WACxDjS,QAAS,SAAClE,GACRsa,KACArC,EAASnb,EAAKkb,OACda,GAAY7Y,EAAEua,cAChB,EAAE,UAEF,gBAAK5T,MAAO,CAAEyP,UAAW,UAAW,SAAEtZ,EAAKqd,cAInD,EAEM1C,GAAW,SAAC3a,GAChB,OAAO,gBAAK6J,MAAO,CAAEyP,UAAW,UAAW,SAAEtZ,EAAKkd,KACpD,EACMQ,GAAW,SAAC1d,GAChB,OACE,iBACEiH,UAAU,uBACV,cAAY,UACZ7E,MAAOpC,EAAKsd,SAAS,SAEpBtd,EAAKsd,UAGZ,EACMK,GAAW,SAAC3d,GAChB,OACE,iBACEiH,UAAU,uBACV,cAAY,UACZ7E,MAAOpC,EAAK0c,SAAS,SAEpB1c,EAAK0c,UAGZ,EACMkB,GAAU,SAAC5d,GACf,OACE,iBACEiH,UAAU,uBACV,cAAY,UACZ7E,MAAOpC,EAAKod,SAAS,SAEpBpd,EAAKod,UAGZ,EACMS,GAAS,SAAC7d,GACd,OACE,iBACEiH,UAAU,uBACV,cAAY,UACZ7E,MAAOpC,EAAK2c,UAAU,SAErB3c,EAAK2c,WAGZ,EACMmB,GAAU,SAAC9d,GACf,OACE,gBACEiH,UAAU,uBACV,cAAY,UACZ7E,MAAOpC,EAAKmd,UACZtT,MAAO,CAAEyP,UAAW,UAAW,SAE9BtZ,EAAKmd,WAGZ,EACM7R,GAAeC,aAAaC,QAAQ,SAE1C,IAAkC1K,EAAAA,EAAAA,UADZ,CAAC,GACkC,iBAAlDwX,GAAS,MAAED,GAAY,MAC9B,IAAkDvX,EAAAA,EAAAA,WAAS,GAAM,iBAA1DsX,GAAiB,MAAE2F,GAAoB,MAC9C,IAA8Cjd,EAAAA,EAAAA,WAAS,GAAM,iBAAtDmX,GAAe,MAAE+F,GAAkB,MACpCC,GAAmBC,OAAO5S,IAAgB,EAoE1CpL,GAAwC,QAA1B,EAAG6B,OAAOC,KAAKwZ,UAAW,aAAvB,EAAyB/X,KAAI,SAACtD,EAAKuF,GACxD,OACE,SAAC,IAAM,CACLkC,UAAQ,EAERwD,KACS,YAAPjL,EACI4K,GACO,YAAP5K,EACAod,GACO,OAAPpd,EACAwa,GACO,YAAPxa,EACAud,GACO,YAAPvd,EACAwd,GACO,YAAPxd,EACAyd,GACO,aAAPzd,EACA2d,GACO,aAAP3d,GAAsB0d,GAE5BhW,MAAO1H,EACPgE,OAAQqX,EAAWrb,IAnBdA,EAsBX,IAEMqd,GAAqB,WACzB1E,GAAe,EACjB,EACA,SAAS+B,GAAa9a,IACFmc,EAAAA,EAAAA,GAAW,CAC3BC,OAAQ,CACNC,SAAU,WACVC,IAAK,QACLC,UAAW,OAEbC,UAAW,CACTC,OAAQ,6BAGIC,GAI+B1c,EAAvC8Y,YAAuC9Y,EAA1B+Y,eAfO,IAAD,EAeUoC,EAAUnb,EAAVmb,MAE/BiD,EAAiB,OAALjD,QAAK,IAALA,GAAiB,QAAZ,EAALA,EAAOjQ,MAAM,YAAI,WAAZ,EAAL,EAAmBxH,KAAI,SAACS,GAAI,OAAS,OAAJA,QAAI,IAAJA,OAAI,EAAJA,EAAM+G,MAAM,IAAI,IAE1D,OAATkT,QAAS,IAATA,GAAAA,EAAW1a,KAAI,SAACP,GAAO,IAEvB,IAmBMK,EADO6a,QAAQtC,IACH,kBAAe5U,EACjC,OACE,0BACE,SAACmX,EAAA,GACC,CACAC,eAAe,EACfC,OAAO,EACPC,KAAMJ,QAAQtC,IACdvY,GAAIA,EACJkb,SAAU,KAEV3C,SAAUA,GACVrE,QAASuE,GACT0C,aAAc,CACZC,SAAU,SACVC,WAAY,QAEdC,gBAAiB,CACfF,SAAU,SACVC,WAAY,QAEd3X,UAAU,oBAAmB,UAE7B,4BACE,iBAAKA,UAAU,gBAAe,WAC5B,0BACE,uBAAG,iBAGL,iBAAMG,QAAS4U,GAAaxC,OAAO,UAAS,SAAC,eAI/C,eAAIvS,UAAU,eAAc,SACZ,MAAbkX,GACC,yBACE,cACE,cAAY,UAEZhb,OAAO,SAAQ,SAChB,gBAKM,OAATgb,QAAS,IAATA,OAAS,EAATA,EAAW1a,KAAI,SAACP,GAAC,OACf,yBACE,cACE+D,UAAU,UACVG,QAAS,kBApEG,SAAC7D,EAAIub,GACjC,IAAMC,EACJxR,EAAO,qDAAiDhK,GAE1DuL,IAAM,CACJE,IAAK+P,EACLhQ,OAAQ,MACRiQ,aAAc,SACbpb,MAAK,SAAC2L,GACP,IAAMP,EAAMiQ,OAAOC,IAAIC,gBAAgB,IAAIra,KAAK,CAACyK,EAASvP,QACpDof,EAAOC,SAASC,cAAc,KACpCF,EAAKG,KAAOvQ,EACZoQ,EAAKI,aAAa,WAAYV,GAC9BO,SAASjU,KAAKqU,YAAYL,GAC1BA,EAAKM,OACP,GACF,CAoDiCC,CAAsBzc,EAAE,GAAIA,EAAE,GAAG,EAAC,SAEhDA,EAAE,MAEF,YAQrB,CACA,OACE,UAAC,KAAM,CACLuI,QAASiQ,EACThE,KAAK,KAELD,QAAS,kBAAMkE,GAAQ,EAAM,EAC7BiE,SAAU,SACVnB,SAAU,KACVxC,QAAS,CACP4D,MAAO5D,GAAQE,QACf,WAEF,SAAC,KAAY,CAAClV,UAAU,QAAQ4C,MAAO,CAAE2P,OAAQ,cAAe,UAC9D,SAAC,KAAW,WACV,kBAAMvS,UAAU,OAAM,UAAC,kBACW,OAAhB2U,QAAgB,IAAhBA,OAAgB,EAAhBA,EAAkBnO,oBAIxC,UAAC,KAAU,YAGT,SAACuN,EAAA,EAA+B,CAC9Bhb,KAAMA,EACNC,KA9aK,GA+aLC,eAAgBA,GAChBK,WAAYib,EACZhb,cAAeib,EAEf5a,SAAS,oBAEVib,IACC,SAACjB,GAAY,CACXhC,YAAaA,EACbC,eAAgBA,EAChBoC,MAAOA,EACPc,YAAaA,KAGf,GAEDpE,IACC,SAACkI,GAEC,CACAvH,aApPW,WACnB,GAAkB,OAAdD,SAAoCpR,IAAdoR,GACxByF,IAAqB,QAChB,GAAsC,IAAlChc,OAAOC,KAAKsW,IAAW3W,OAChCoc,IAAqB,OAChB,CAAC,IAAD,EACLC,IAAmB,GAGEhG,GAAUnI,QAAO,SAAC3L,GAAI,OAAS,OAAJA,QAAI,IAAJA,OAAI,EAAJA,EAAMyV,QAAQ,IAA9D,IAEI3Z,EAAO,GACL,OAAN+B,aAAM,IAANA,QAAuB,QAAjB,EAANA,OAAQC,KAAKsW,WAAU,OAAvB,EAAyBrW,SAAQ,SAAC8d,GAChC,IAAM/C,EAAM,CAAC,EACbA,EAAQ,IAAK+C,EACb/C,EAAmB,eAAK1E,GAAUyH,GAClC/C,EAAmB,eAAKiB,GAExBje,EAAKmC,KAAK6a,EACZ,IAEAlO,IAAAA,KACQvB,EAAO,4CAAgDvN,GAC5D4D,MAAK,SAACqL,GACgBA,EAAIjP,KAGzB+d,IAAqB,GAErBC,IAAmB,GACnBnL,YAAW,WACTmL,IAAmB,EACrB,GAAG,KAEH7F,GAAaL,GACbO,GAAa,KACf,IACCjJ,OAAM,SAACC,GACN3G,QAAQ2G,MAAM,qBAAsBA,EACtC,GACJ,CACF,EA4MUiJ,UAAWA,GACXD,aAAcA,GACdD,kBAAmBA,GACnBH,gBAAiBA,GACjBE,aAAcA,GACdqD,WAAYA,EACZC,cAAeA,EACfzb,KAAMA,EACN8X,SAAUA,EACVC,WAAYA,EACZG,SAAUA,EACVF,UAAWA,UAQvB,E,uBCxbA,OArFA,SAA0BjY,GACxB,IACEigB,EAUEjgB,EAVFigB,YACAC,EASElgB,EATFkgB,QACA5R,EAQEtO,EARFsO,YAGA6R,GAKEngB,EAPFkZ,WAOElZ,EANFogB,aAMEpgB,EALFmgB,iBACAE,EAIErgB,EAJFqgB,OACApP,EAGEjR,EAHFiR,KACAzN,EAEExD,EAFFwD,GACAf,EACEzC,EADFyC,MAGF,GAAwB1B,EAAAA,EAAAA,UAAS,IAAG,eAA7BoD,EAAI,KAAS,MAEpB3C,EAAAA,EAAAA,YAAU,WAAO,GAAG,CAAC2C,KACrB3C,EAAAA,EAAAA,YAAU,WAAO,GAAG,CAACye,IAErB,IAAMK,EAAiB9U,aAAaC,QAAQ,WAI1C,OAHmBD,aAAaC,QAAQ,UAItC,iCACE,gBAAKvE,UAAU,yBAAwB,SAC3B,qBAATzE,GACC,SAAC,EAAA4O,wBAAuB,CACtBC,MAAO2O,EACPjb,KAAK,OACLub,SAAO,EACPtP,KAAMA,EACNuP,kBAAmBF,EACnB9c,GAAIA,EACJ0D,UAAU,MACV+Y,YAAaA,EACbC,QAASA,EAETzc,SAAU,SAACN,GACTgd,EAAgBhd,EAClB,EAEAuO,SAAU,SAACvO,GACTmL,GAAY,SAACqD,GAAS,yBAAWA,GAAS,cAAGV,EAAO9N,EAAEK,IAAE,GAC1D,EACAoO,UAAU,KAGZ,gBACE1K,UAAU,oBACV1D,GAAG,OACHiF,IAAK,SAACuX,QACU7Y,GAAVkZ,IACFA,EAAO9Y,QAAQ,GAAKyY,EAExB,EAAE,UAEF,SAAC,EAAA3O,wBAAuB,CACtBC,MAAO2O,EACPjb,KAAK,OACLiM,KAAMA,EACNwP,aAAa,MACbD,kBAAmBF,EACnB9c,GAAIA,EACJ0D,UAAU,MACV+Y,YAAaA,EACbC,QAASA,EACTzc,SAAU,SAACN,GACTgd,EAAgBhd,EAClB,EAEAuO,SAAU,SAACvO,GACTmL,GAAY,SAACqD,GAAS,yBAAWA,GAAS,cAAGV,EAAO9N,EAAEK,IAAE,GAC1D,EACAoO,UAAU,SAMlB,0BAAOzN,EAAK8M,SAIpB,E,YCvEY,IAAIyP,KA+dhB,OA7dA,SAAsB1gB,GACpB,IAUMkc,GAVYC,EAAAA,EAAAA,GAAW,CAC3BC,OAAQ,CACNC,SAAU,WACVC,IAAK,QACLC,UAAW,OAEbC,UAAW,CACTC,OAAQ,6BAGIC,GAGd+B,EAQEze,EARFye,KACAkC,EAOE3gB,EAPF2gB,QACApS,EAMEvO,EANFuO,UAEAsN,EAIE7b,EAJF6b,iBAGA+E,GACE5gB,EAFF6gB,QAEE7gB,EADF4gB,WAGF,GAAgC7f,EAAAA,EAAAA,UAAS,IAAG,eAArC+f,EAAQ,KAAEC,EAAW,KAE5B,GAAgChgB,EAAAA,EAAAA,UAAS,CAAC,CAAC,IAAG,eAA7BuN,GAAF,KAAa,MAC5B,GAAsCvN,EAAAA,EAAAA,UAAS,IAAG,eAA3Ckf,EAAW,KAAEe,EAAc,KAC5BzV,EAAeC,aAAaC,QAAQ,SAC1C,GAAkC1K,EAAAA,EAAAA,UAAS,IAAG,eAAvCkgB,EAAS,KAAEC,EAAY,KACxB1T,EAAUvE,EAAAA,EAAAA,QAChB,GAA4BlI,EAAAA,EAAAA,UAAS,IAAG,eAAjC4Z,EAAM,KAAEwG,EAAS,KACxB,GAAgCpgB,EAAAA,EAAAA,UAAS,IAAG,eAArCqgB,EAAQ,KAAEC,EAAW,KAC5B,GAAwBtgB,EAAAA,EAAAA,YAAU,eAArBmM,GAAF,KAAS,MACpB,GAAgCnM,EAAAA,EAAAA,UAAS,IAAG,eAArC4C,EAAQ,KAAE2d,EAAW,KAC5B,GAA0CvgB,EAAAA,EAAAA,UAAS,IAAG,gBAA/CwgB,GAAa,MAAEC,GAAgB,MACtC,IAA8BzgB,EAAAA,EAAAA,UAAS,IAAG,iBAA1B0gB,IAAF,MAAY,OAC1B,IAA0B1gB,EAAAA,EAAAA,WAAS,GAAM,iBAAlC2gB,GAAK,MAAEC,GAAQ,MACtB,IAAgD5gB,EAAAA,EAAAA,UAAS,IAAG,iBAC5D,IADuB,MAAqB,OACEA,EAAAA,EAAAA,WAAS,IAAM,iBAAtD6gB,GAAe,MAAEC,GAAkB,MAC1C,IAA0C9gB,EAAAA,EAAAA,UAAS,IAAG,iBAEhDmd,IAFc,MAAkB,MAEbC,OAAO5S,GAAgB,GAC1C9C,IAAMlH,EAAAA,EAAAA,QAAO,IAEnB,IAA8BR,EAAAA,EAAAA,UAAS,IAAG,iBAAnC+gB,GAAO,MAAEC,GAAU,MAEpB3J,GAAe,WACnBrJ,IAAAA,IACOvB,EAAO,qDAAiDe,IAE5D1K,MAAK,SAACqL,GACL,IAAM6N,EAAU7N,EAAIjP,KAEpBiN,EAAQ6P,EACV,IACC1N,OAAM,SAACC,GAAW,GACvB,GAEA9N,EAAAA,EAAAA,YAAU,WACR4W,IACF,GAAG,KAiEH5W,EAAAA,EAAAA,YAAU,WAAO,IAAD,EACiB,KAAhB,QAAX,EAAAsf,EAAS,UAAE,aAAX,EAAakB,cACf1C,SAAS2C,uBAAuB,4BAA4B,GAAGtC,QAC/D7M,YAAW,WAAO,IAAD,EAE2C,QAD1D,EAAAwM,SACG2C,uBAAuB,8BAA8B,UAAE,OAD1D,EAEIC,iBACA,SACA,SAAU/e,GAAI,IAAD,EACoB,KAAhB,QAAX,EAAA2d,EAAS,UAAE,aAAX,EAAakB,aACfjB,EAAYD,EAASqB,MAAM,EAAGrB,EAASlf,QAE3C,IACA,EAEN,GAAG,KAGP,GAAG,CAACkf,IAEJ,IAAMsB,GAAsB,SAACtB,EAAUuB,GACrC,OACE,kBACErd,KAAK,OACLxB,GAAE,iBAAY6e,GACdnb,UAAS,gBACP0a,IAA4B,OAARd,QAAQ,IAARA,GAAAA,EAAUnG,OAA0B,GAAjB,gBAEzClX,SAAU,SAACN,GACT,IAAMmf,GAAc,OAAOR,IAC3BQ,EAAeD,EAASA,WAAS,kBAC5BC,EAAeD,EAASA,WAAS,IACpC1H,OAAQxX,EAAEC,OAAOX,QAEnBsf,GAAWO,GACXnB,EAAUmB,EACZ,GAGN,EACMC,GAAqB,SAACzB,EAAUuB,GACpC,OACE,kBACErd,KAAK,OACLxB,GAAE,yBAAoB6e,GACtB5e,SAAU,SAACN,GACT,IAAMmf,GAAc,OAAOR,IAC3BQ,EAAeD,EAASA,WAAS,kBAC5BC,EAAeD,EAASA,WAAS,IACpCG,YAAarf,EAAEC,OAAOX,QAExBsf,GAAWO,EACb,GAGN,EACMG,GAAiB,SAAC1Q,EAASsQ,GAAc,IAAD,EACtCK,EAAyC,QAA7B,EAAGZ,GAAQO,EAASA,iBAAS,aAA1B,EAA4BM,KAEjD,OACE,gBAAKzb,UAAU,sBAAqB,UAClC,SAAC,KAAU,CACT0b,kBAAgB,EAChBC,mBAAiB,EACjBC,aAAa,SACb5b,UAAS,eACP0a,KAAoBc,EAAe,eAAiB,IAEtDK,QAAS,IAAIrC,KACbsC,WAAW,cACXrf,SAAU+e,EAAe,IAAIhC,KAAKgC,GAAgB,KAClDO,UAAW,SAAC9f,GAAC,OAAKA,EAAE+f,gBAAgB,EACpCzf,SAAU,SAACkf,GACT,IAAML,GAAc,OAAOR,IAC3BQ,EAAeD,EAASA,WAAS,kBAC5BC,EAAeD,EAASA,WAAS,IACpCM,KAAMA,IAERZ,GAAWO,GACXpB,EAAaoB,EACf,EACAa,OAAO,QACPC,gBAAgB,eAIxB,EAEMC,GAAe,WACnBtU,IAAM,CACJC,OAAQ,MACRC,IAAKzB,EAAO,qCACX3J,MAAK,SAAU2L,GAChB,IAAIN,EAAMM,EAASvP,KACnB+gB,EAAe9R,EACjB,GACF,EAkEA,OAhEA1N,EAAAA,EAAAA,YAAU,WAAO,GAAG,KAEpBA,EAAAA,EAAAA,YAAU,WACR6hB,IACF,GAAG,KA6DD,0BACE,0BACE,UAAC,KAAM,CACL3X,QAAS+S,EACT9G,KAAK,KAELD,QAAS,kBAAMiJ,GAAQ,EAAM,EAC7Bd,SAAU,SACVnB,SAAU,KACVxC,QAAS,CACP4D,MAAO5D,EAAQE,QACf,WAEF,SAAC,KAAY,CAAClV,UAAU,GAAE,UACxB,SAAC,KAAW,WACV,kBAAMA,UAAU,GAAE,UAAC,kBACe,OAAhB2U,QAAgB,IAAhBA,OAAgB,EAAhBA,EAAkBnO,oBAIxC,SAAC,KAAU,WACT,iBAAKxG,UAAU,YAAW,UACvB0a,IACC,gBAAK1a,UAAU,qBAAoB,UACjC,6BACE,SAAC,OAAa,IAAG,OAEhB,8DAIL,IAEF,iBAAKA,UAAU,oBAAmB,WAChC,gBAAKA,UAAU,iBAAgB,UAC7B,iBAAKA,UAAU,iBAAgB,WAC7B,mBAAOA,UAAU,QAAQiK,QAAQ,iBAAgB,UAAC,qBAEhD,iBAAMjK,UAAU,sBAAqB,SAAC,UAExC,iBAAMA,UAAU,YAAW,SAAC,OAC5B,iBAAMA,UAAU,SAAQ,UACtB,gBACEA,UAAU,qEACV1D,GAAG,iCACHiF,IAAK,SAACuX,GACJvX,GAAIlB,QAAQ,GAAKyY,CACnB,EAAE,UAEF,SAACsD,GAAmB,CAClBrS,KAAK,cACLzN,GAAG,cACHf,MAzUV,oBA0UUwd,YAAaA,EACboD,aAAcA,GACd/U,YAAaA,EACb6R,gBAnHA,SAAChd,GACvB,MAAsBA,EAAEC,OAAhBI,EAAE,EAAFA,GAAS,EAALf,MACZ6L,GAAY,SAACwD,GAAI,yBAAWA,GAAI,cAAG3O,EAAEC,OAAOI,GAAKA,GAAE,GACrD,EAiHwBgd,kBAAmBjV,cAM7B,gBAAKrE,UAAU,iBAAgB,UAC7B,iBAAKA,UAAU,iBAAgB,WAC7B,kBAAOA,UAAU,QAAQiK,QAAQ,iBAAgB,SAAC,YAGlD,iBAAMjK,UAAU,YAAW,SAAC,OAC5B,iBAAMA,UAAU,SAAQ,UACtB,kBACElC,KAAK,OACLiM,KAAK,QAEL/J,UAAU,iCACV1D,GAAG,OACHC,SArGO,SAACN,GAC5Bqe,GAAiBre,EAAEC,OAAOmgB,MAAM,IAChC9B,GAAWte,EAAEC,OAAOmgB,MAAM,GAAGtS,KAC/B,YAuGc,iBAAK/J,UAAU,MAAK,WAClB,gBAAKA,UAAU,WAAU,UACvB,2BAAO,iBAET,gBAAKA,UAAU,QAAQ4C,MAAO,CAAEC,MAAO,QAAS,SAAC,OAGjD,gBAAK7C,UAAU,WAAU,UACvB,qBACElC,KAAK,OACL0C,YAAY,qBACZjE,SAAU,SAACN,GACTke,EAAYle,EAAEC,OAAOX,MACvB,aAKR,iCACE,iBACEyE,UAAU,aACV4C,MAAO,CAAEwP,MAAO,UAAW0B,WAAY,QAAS,SACjD,mBAID,gBAAK9T,UAAU,qBAAoB,UACjC,gBAAKA,UAAU,gCAA+B,UAC5C,UAAC,IAAS,CACRA,UAAU,gEACVzE,MAAOqe,EACP0C,SAAS,MACTtjB,KAAM,KACNujB,UAAW9f,EACX+f,kBAAmB,SAACvgB,GAAC,OAAKme,EAAYne,EAAEV,MAAM,EAC9CH,QAAQ,KACR+F,eAAa,EACbN,aAAW,EACX4b,aAAa,QACbpb,iBAAiB,SACjBC,aAAa,oBAAmB,WAEhC,SAAC,IAAM,CACLV,MAAM,SACN1D,OAAO,SACPiH,KAAM,SAACyW,EAASO,GAAQ,OACtBD,GAAoBN,EAASO,EAAS,EAExCvY,MAAO,CAAEC,MAAO,UAElB,SAAC,IAAM,CACLjC,MAAM,OACN1D,OAAO,WACPiH,KAAM,SAACyW,EAASO,GAAQ,OACtBI,GAAeX,EAASO,EAAS,EAEnCvY,MAAO,CAAEC,MAAO,UAGlB,SAAC,IAAM,CACLjC,MAAM,mBACN1D,OAAO,qBACPiH,KAAM,SAACyW,EAASO,GAAQ,OACtBE,GAAmBT,EAASO,EAAS,EAGvCvY,MAAO,CAAEC,MAAO,UAElB,SAAC,IAAM,CACLjC,MAAM,SACN1D,OAAO,SACPiH,KAtKH,SAACpL,EAAMoiB,GACxB,OACE,SAAC,OAAY,CACX/I,MAAM,SACNzP,MAAM,SACNxH,MAAO,gBACPgF,QAAS,YAZG,SAACuc,GACjB,IAAMC,GAAe,OAAO/C,GAC5B+C,EAAgBhiB,OAAO+hB,EAAO,GAC9B7C,EAAY8C,EACd,CASQC,CAAUzB,EAASA,SACrB,GAGN,EA4JsBvY,MAAO,CAAEC,MAAO,MAAOwP,UAAW,oBAM1C,iBAAKrS,UAAU,uDAAsD,WACnE,oBACEA,UAAU,kBAEV7E,MAAO,cACPgF,QA1NC,SAACya,GACbJ,IACHC,IAAS,GAEX,IAAM1hB,EAAO,CACX0a,OAAQ,GACRgI,KAAM,GACNoB,iBAAkB,GAClBvgB,GAAIkd,KAAKsD,OAGP1iB,EAAK,GACTA,EAAGc,KAAKnC,GAGN0a,GAAU,SACAxT,GAAVwT,GACW,IAAVA,GAA6B,IAAbsG,QACJ9Z,GAAb8Z,GACAA,GAAa,IAEbY,IAAmB,GACnBd,EAAY,GAAD,OAAKzf,MAEhBugB,IAAmB,GACnBd,GAAY,SAACkD,GAAY,wBAASA,GAAY,CAAE3iB,GAAK,IAEzD,EA+LsC,WAEpB,SAAC,MAAM,IAAG,WAGZ,oBACEkC,GAAG,SACH0D,UAAU,kBACVG,QAAS,YA9YR,WAGjB,IAFY6c,EAAAA,GAAAA,GAAiBzb,IAO3B,OAJAoZ,IAAmB,QACnB/O,YAAW,WACT+O,IAAmB,EACrB,GAAG,KAGL,IAAMsC,EAAiBrC,GAAQpe,KAAI,SAAC0gB,GAAG,MAAM,CAC3CzJ,OAAQyJ,EAAIzJ,OACZgI,KAAMxI,IAAOiK,EAAIzB,MAAMtI,OAAO,cAC9BmI,YAAa4B,EAAI5B,YAElB,IACK6B,GAAO,QACX9V,UAAWqS,EAAUpd,GACrB8gB,QAAS1D,EAAU2D,aACnBpM,UAAWyI,EAAU4D,UACrBC,YAAa7D,EAAU6D,YACvBC,SAAUxG,GACV2C,QAAS1G,IAAOyG,EAAU+D,eAAetK,OAAO,cAChDrC,WAA4B,OAAhB6D,QAAgB,IAAhBA,OAAgB,EAAhBA,EAAkB7D,WAC9BuF,SAAU6D,EACVwD,WAAYrZ,EACZsZ,QAASV,GAAc,aACXjG,IAGdnP,IAAAA,SAEIvB,EAAO,iCACP,CACE+V,MAAOhC,GACPuD,MAAOrjB,KAAKE,UAAU0iB,IAExB,CACEtgB,QAAS,CACP,eAAgB,yBAIrBF,MAAK,SAACqL,GACL,IAAMjP,EAAOiP,EAAIjP,KAEjBmY,KAEAuI,GAAQ,GACRoE,cAAc9kB,EAAK+Y,eACnBgM,cAAc/kB,GACd0hB,IAAS,GACT1D,oBAAmB,GAEnBnL,YAAW,WACTmL,oBAAmB,EACrB,GAAG,IACL,IACC5O,OAAM,SAACC,GACN,GAEN,CAkVoB2V,EACF,EAAE,WAEF,SAAC,MAAM,IAAG,8BAU9B,E,sBC9ZA,I,SA3EgC,SAACjlB,GAC/B,IACE8hB,EASE9hB,EATF8hB,QACAoD,EAQEllB,EARFklB,YAEArJ,EAME7b,EANF6b,iBAEAsJ,EAIEnlB,EAJFmlB,gBACAC,EAGEplB,EAHFolB,0BACAC,EAEErlB,EAFFqlB,YACAC,EACEtlB,EADFslB,eAGF,GAAwCvkB,EAAAA,EAAAA,UACtC+gB,EAAQ6C,cAAgB,IAAIjE,KAAKoB,EAAQ6C,eAAiB,MAC3D,eAFMjC,EAAY,KAAE6C,EAAe,KA4B9BC,EACJ3J,IAAqBiG,EAAQvT,WAAa4W,EACtC,cACA,GACN,OACE,0BACE,gBAAKje,UAAS,sCAAwC,UACpD,SAAC,KAAU,CACT+J,KAAK,iBACL/J,UAAS,gBAAWse,GACpBhiB,GAAG,iBACHG,SAAU+e,EACV+C,aAAa,MACbhiB,SAAU,SAACN,GACgB,OAAP2e,QAAO,IAAPA,GAAAA,EAAS0C,WAtCZ,SAAC7B,EAAM+C,EAAUnX,GACxCgX,EAAgB5C,GAChByC,EAA0BzC,GAC1BuC,GAAY,SAACvL,GAAQ,yBAChBA,GAAQ,cACV+L,GAAQ,kBACJ/L,EAAS+L,IAAS,IACrBhD,aAAcC,EACd+C,SAAUA,EACVnX,UAAWA,KAAS,IAGxB,IAAMoX,EAAaN,EAAYO,IAAIrX,GACnC,GAAIoX,EAAY,CACd,IAAME,GAAS,kBACVF,GAAU,IACbhB,cAAehC,IAEXmD,EAAoB,IAAIC,IAAIV,GAElCS,EAAkBE,IAAIH,EAAUriB,GAAIqiB,GACpCP,EAAeQ,EACjB,CACF,CAkBUG,CADa9iB,EADW,OAAP2e,QAAO,IAAPA,OAAO,EAAPA,EAAS4D,SAEc,OAAP5D,QAAO,IAAPA,OAAO,EAAPA,EAASte,GAC5C,EACAuf,QAAS,IAAIrC,KACbsC,WAAW,cACXC,UAAW,SAAC9f,GACVA,EAAE+f,gBACJ,EACAN,kBAAgB,EAChBC,mBAAiB,EACjBC,aAAa,SACbhZ,MAAO,CAAEyP,UAAW,eAK9B,GCvCM2M,GAAmB,CACvB,CAAEvW,MAAO,gBAAiBlN,MAAO,QACjC,CAAEkN,MAAO,cAAelN,MAAO,QAC/B,CAAEkN,MAAO,oBAAqBlN,MAAO,SAg1CvC,OA70CA,WAA2B,IAAD,IAGlBM,GACJ,UAAC,IAAW,YACV,UAAC,IAAG,YACF,SAAC,IAAM,CAACqB,OAAO,SAAS+hB,QAAS,KACjC,SAAC,IAAM,CACL/hB,OAAO,kBACPwD,QAAS,EACTkC,MAAO,CAAEyP,UAAW,aAEtB,SAAC,IAAM,CAACnV,OAAO,cAAc+hB,QAAS,KACtC,SAAC,IAAM,CAAC/hB,OAAO,iBAAiBwD,QAAS,KACzC,SAAC,IAAM,CAACxD,OAAO,SAAS+hB,QAAS,QAGnC,UAAC,IAAG,YACF,SAAC,IAAM,CAAC/hB,OAAO,eAAe0D,MAAM,cAAczF,MAAM,iBACxD,SAAC,IAAM,CAAC+B,OAAO,qBAAqB0D,MAAM,kBAC1C,SAAC,IAAM,CAAC1D,OAAO,WAAW0D,MAAM,cAChC,SAAC,IAAM,CAAC1D,OAAO,gBAAgB0D,MAAM,eACrC,SAAC,IAAM,CAAC1D,OAAO,cAAc0D,MAAM,gBACnC,SAAC,IAAM,CAAC1D,OAAO,gBAAgB0D,MAAM,kBACrC,SAAC,IAAM,CAAC1D,OAAO,cAAc0D,MAAM,wBAInCse,GACJ,UAAC,IAAW,YACV,UAAC,IAAG,YACF,SAAC,IAAM,CACLhiB,OAAO,kBACPwD,QAAS,EACTkC,MAAO,CAAEyP,UAAW,aAEtB,SAAC,IAAM,CAACnV,OAAO,iBAAiBwD,QAAS,KACzC,SAAC,IAAM,CAACxD,OAAO,SAAS+hB,QAAS,QAGnC,UAAC,IAAG,YACF,SAAC,IAAM,CAAC/hB,OAAO,eAAe0D,MAAM,cAAczF,MAAM,iBACxD,SAAC,IAAM,CAAC+B,OAAO,qBAAqB0D,MAAM,kBAC1C,SAAC,IAAM,CAAC1D,OAAO,WAAW0D,MAAM,cAChC,SAAC,IAAM,CAAC1D,OAAO,gBAAgB0D,MAAM,eACrC,SAAC,IAAM,CAAC1D,OAAO,cAAc0D,MAAM,gBAEnC,SAAC,IAAM,CAAC1D,OAAO,iBAAiB0D,MAAM,mBACtC,SAAC,IAAM,CAAC1D,OAAO,iBAAiB0D,MAAM,oBACtC,SAAC,IAAM,CAAC1D,OAAO,WAAW0D,MAAM,cAChC,SAAC,IAAM,CAAC1D,OAAO,WAAW0D,MAAM,mBAOtC,GADY,IAAI4Y,MACkB3f,EAAAA,EAAAA,WAAS,IAAM,eAA1CslB,EAAS,KAAEC,EAAY,KAC9B,GAAwCvlB,EAAAA,EAAAA,WAAS,GAAM,eAAhDwlB,EAAY,KAAEC,EAAe,KACpC,GAAkDzlB,EAAAA,EAAAA,UAAS,IAAG,eAAvD+S,EAAiB,KAAE2S,EAAoB,KACxClb,EAAeC,aAAaC,QAAQ,SAC1C,GAAsB1K,EAAAA,EAAAA,WAAU,GAAE,eAA3B2lB,EAAG,KAAEC,EAAM,KAClB,GAAsC5lB,EAAAA,EAAAA,UAAS,IAAG,eAA3CT,EAAW,KAAE+M,EAAc,KAClC,GAAkDtM,EAAAA,EAAAA,UAAS,IAAG,eAAvDR,GAAiB,KAAEgN,GAAoB,KAC9C,IAAkCxM,EAAAA,EAAAA,UAAS,IAAG,iBAAvC6lB,GAAS,MAAEC,GAAY,MAC9B,IAA4B9lB,EAAAA,EAAAA,UAAS,IAAG,iBAAzBoY,IAAF,MAAW,OACxB,IAAsCpY,EAAAA,EAAAA,WAAS,GAAM,iBAA9C+lB,GAAW,MAAEC,GAAc,MAElC,IAAgDhmB,EAAAA,EAAAA,UAAS,IAAG,iBAArDimB,GAAgB,MAAEC,GAAmB,MAC5C,IAAoClmB,EAAAA,EAAAA,UAAS,IAAG,iBAAzCL,GAAU,MAAEsI,GAAa,MAChC,IAAkDjI,EAAAA,EAAAA,WAAS,GAAM,iBAA1DmmB,GAAiB,MAAEC,GAAoB,MAC9C,IAA8CpmB,EAAAA,EAAAA,WAAS,GAAM,iBAAtD6gB,GAAe,MAAEC,GAAkB,MAC1C,IAA8C9gB,EAAAA,EAAAA,UAAS,IAAG,iBAAnDokB,GAAe,MAAEiC,GAAkB,MAC1C,IAAwCrmB,EAAAA,EAAAA,WAAS,GAAM,iBAAhDsmB,GAAY,MAAEC,GAAe,MACpC,IAA0BvmB,EAAAA,EAAAA,UAASmlB,IAAiB,iBAA7CqB,GAAK,MAAEC,GAAQ,MACtB,IAA4CzmB,EAAAA,EAAAA,UAAS,IAAG,iBAAjD0mB,GAAc,MAMrB,IANwC,OAMR1mB,EAAAA,EAAAA,UAJX,CACnB2mB,eAAgB,GAChBC,iBAAkB,MAEkC,iBAA/C7e,GAAQ,MAAEwF,GAAW,MAE5B,IAA0CvN,EAAAA,EAAAA,UAAS,CAAC,CAAC,IAAG,iBAAjDgW,GAAa,MAAEC,GAAgB,MAEhC4Q,GAAwB,OAAb7Q,SAAa,IAAbA,QAAa,EAAbA,GAAerT,KAAI,SAACvB,GAAC,OAAM,OAADA,QAAC,IAADA,OAAC,EAADA,EAAGqB,EAAE,IAAE+O,YAElD/Q,EAAAA,EAAAA,YAAU,WAAO,GAAG,CAAComB,IAAW,CAAC9e,GAAS+e,cAE1C,QAAwB9mB,EAAAA,EAAAA,WAAS,GAAM,iBAAhC0d,GAAI,MAAEkC,GAAO,MACpB,IAAsC5f,EAAAA,EAAAA,WAAU,GAAE,iBAA3C2M,GAAW,MAAEoa,GAAc,MAClC,IAAwC/mB,EAAAA,EAAAA,UAAS,GAAE,iBAA5C+L,GAAY,MAAEC,GAAe,MACpC,IAA0ChM,EAAAA,EAAAA,WAAU,GAAE,iBAA/C8M,GAAa,MAAEka,GAAgB,MACtC,IAAwChnB,EAAAA,EAAAA,WAAU,GAAE,iBAA7CinB,GAAY,MAAEC,GAAe,MACpC,IAAwBlnB,EAAAA,EAAAA,WAAS,GAAM,iBAAhC4a,GAAI,MAAEC,GAAO,MACpB,IAA8B7a,EAAAA,EAAAA,WAAS,GAAM,iBAAtC2K,GAAO,MAAEC,GAAU,MAC1B,IAAwC5K,EAAAA,EAAAA,UAAS6K,EAAAA,KAAkB,iBAA5DC,GAAY,MAAEC,GAAe,MACpC,IAAgC/K,EAAAA,EAAAA,UAAS,IAAG,iBAArCmnB,GAAQ,MAAEC,GAAW,MAC5B,IAA4BpnB,EAAAA,EAAAA,UAAS,IAAG,iBAAjCqnB,GAAM,MAAEC,GAAS,MAElB5a,KADMlM,EAAAA,EAAAA,QAAO,KACKA,EAAAA,EAAAA,QAAO,OAG/B,IAA0DR,EAAAA,EAAAA,UAAS,CACjEunB,YAAa,IACb,iBAEF,IAJ4B,MAA0B,OAI1BvnB,EAAAA,EAAAA,WAAS,IAAM,iBAApCgL,GAAM,MAAEC,GAAS,MACxB,IAAkCjL,EAAAA,EAAAA,WAAS,GAAM,iBAA1CkL,GAAS,MAAEC,GAAY,MAC9B,IAAmDnL,EAAAA,EAAAA,WAAS,GAAM,iBAAxCwnB,IAAF,MAAuB,OAE/C,IAAkCxnB,EAAAA,EAAAA,UAAS,IAAG,iBAAvCynB,GAAS,MAAEC,GAAY,MAC9B,IAA8B1nB,EAAAA,EAAAA,UAAS2nB,EAAAA,KAAU,iBAA1CC,GAAO,MAAEC,GAAU,MAC1B,IAAwB7nB,EAAAA,EAAAA,UAAS8nB,EAAAA,KAAO,iBAAjCC,GAAI,MAAEC,GAAO,MACpB,IAA8BhoB,EAAAA,EAAAA,UAAS,IAAG,iBAAnC4M,GAAO,MAAEqb,GAAU,MAC1B,IAA6CjoB,EAAAA,EAAAA,YAAU,iBAA9BkoB,IAAF,MAAkB,OACzC,IAAkCloB,EAAAA,EAAAA,UAAS,IAAG,iBAAvCwN,GAAS,MAAE2a,GAAY,MAC9B,IAAgCnoB,EAAAA,EAAAA,UAAS,IAAG,iBAA3BsL,IAAF,MAAa,OACtBmB,GAAUvE,EAAAA,EAAAA,QACVkgB,GAAW,CACfC,OAAQ,IAEV,IAA4CroB,EAAAA,EAAAA,UAASooB,IAAS,iBAAvDE,GAAc,MAAEC,GAAiB,MACxC,IAAgCvoB,EAAAA,EAAAA,UAAS,IAAG,iBAArCoL,GAAQ,MAAEC,GAAW,MAC5B,IAAgDrL,EAAAA,EAAAA,UAAS,IAAG,iBAArDoM,GAAgB,MAAEC,GAAmB,MAC5C,IAAgDrM,EAAAA,EAAAA,WAAU,GAAE,iBAArDwoB,GAAgB,MAAEC,GAAmB,MAC5C,IAAwBzoB,EAAAA,EAAAA,UAAS,IAAG,iBAA7Bd,GAAI,MAAEiN,GAAO,MACpB,IAAoCnM,EAAAA,EAAAA,UAAS,MAAK,iBAA3C0oB,GAAU,MAAEC,GAAa,MAChC,IAAoC3oB,EAAAA,EAAAA,WAAU,GAAE,iBAAzC2R,GAAU,MAAEiX,GAAa,MAChC,IAA8C5oB,EAAAA,EAAAA,YAAU,iBAAjD6oB,GAAe,MACtB,IAD0C,OACR7oB,EAAAA,EAAAA,aAAU,iBAArC6f,GAAS,MAAEiJ,GAAY,MAE9B,IAAoC9oB,EAAAA,EAAAA,UAAS,IAAG,iBAA7BN,IAAF,MAAe,OAChC,IAA8BM,EAAAA,EAAAA,YAAU,iBAAjC8f,GAAO,MAEd,IAF0B,OAEI9f,EAAAA,EAAAA,UAAS,CACrC6B,OAAQ,CAAEH,MAAO,KAAMC,UAAWC,EAAAA,GAAAA,UAClCsO,KAAM,CACJ6Y,SAAUC,EAAAA,GAAAA,IACVC,YAAa,CAAC,CAAEvnB,MAAO,KAAMC,UAAWC,EAAAA,GAAAA,eAE1C,eAAgB,CACdmnB,SAAUC,EAAAA,GAAAA,IACVC,YAAa,CAAC,CAAEvnB,MAAO,KAAMC,UAAWC,EAAAA,GAAAA,eAE1CsnB,eAAgB,CAAExnB,MAAO,KAAMC,UAAWC,EAAAA,GAAAA,IAC1CsU,OAAQ,CACN6S,SAAUC,EAAAA,GAAAA,GACVC,YAAa,CAAC,CAAEvnB,MAAO,KAAMC,UAAWC,EAAAA,GAAAA,aAE1C,iBAfK2F,GAAO,MAAE4hB,GAAU,MAiB1B,IAAgDnpB,EAAAA,EAAAA,UAAS,MAAK,iBAAvD8a,GAAgB,MAAEsO,GAAmB,OAE5C3oB,EAAAA,EAAAA,YAAU,WACRvB,GAAK,IAAMQ,GAAcgB,KAAKC,MAAMD,KAAKE,UAAU1B,GAAK,MAExD+I,GADU,CAAC,OAEb,GAAG,CAAC/I,KACJ,IAyCMmqB,GAA+D,QAAnD,EAAG3oB,KAAKC,MAAM8J,aAAaC,QAAQ,wBAAgB,OACjD,QADiD,EAAhD,EACjB/H,KAAI,SAACvB,GAAC,OAAKA,EAAEqB,EAAE,WAAC,WADiD,EAAhD,EAEjB+O,WAyBE3O,GAAc,WAClB,wCAAeC,MAAK,SAACC,GACnB,IAAMC,EAAU/B,OAAOC,KAAKhC,GAAK,IAE3B+D,GAAa,OAAO,IAAIC,IAAIF,IAElCC,EAAcqmB,QAoBd,IAlBA,IAAMnmB,EAAgBjE,GAAKyD,KAAI,SAACS,GAAI,OAClCH,EAAcN,KAAI,SAACU,GACjB,IAAM3B,EAAQ0B,EAAKC,GAEnB,MAAe,kBAAXA,GAA8B+V,IAAO1X,GAAO6nB,UACvCnQ,IAAO1X,GAAO4X,OAAO,eAErB5X,CAEX,GAAE,IAGE8nB,EAAWrmB,EAAcR,KAAI,SAACS,GAAI,OAAKnC,OAAOwoB,OAAOrmB,EAAK,IAE1DE,EAAW,IAAIomB,IAAAA,UAEfC,EAAYrmB,EAASsmB,aAAa,4BAE/BhlB,EAAI,EAAGA,EAAI4kB,EAAS3oB,OAAQ+D,IACvB+kB,EAAUE,OAAOL,EAAS5kB,IAGxB,CAAC,GAETzD,SAAQ,SAAC0hB,GACH8G,EAAUG,OAAOjH,GAEzB1d,KAAO,CAAE4kB,MAAM,EACrB,IAEAzmB,EAASP,KAAKinB,cAAclnB,MAAK,SAACc,GAChC,IAAMqmB,EAAO,IAAIjmB,KAAK,CAACJ,GAAS,CAC9BK,KAAM,sEAGRC,OAAO+lB,EAAM,2BACf,GACF,GACF,EAgCM5mB,GA5Be,WACnB,IAAM3B,EAAQ6F,GAAgB,OAAIA,GAAgB,OAAE7F,MAAQ,GAE5D,OACE,iBAAKyE,UAAU,yBAAwB,WACrC,gBAAKA,UAAU,iBAAgB,UAClB,OAAVxG,SAAU,IAAVA,QAAU,EAAVA,GAAY0G,SAAS,UACpB,iBACEF,UAAU,yBACVG,QAASzD,GACTvB,MAAM,uBAIZ,kBAAM6E,UAAU,oBAAmB,WACjC,cAAGA,UAAU,kBACb,SAAC,IAAS,CACRlC,KAAK,SACL8E,MAAO,CAAEmhB,MAAO,SAChBxoB,MAAOA,GAAS,GAChBgB,SAAU,SAACN,GAAC,OA1GO,SAAC+nB,GAC5B,IAAMzoB,EAAQyoB,EAAM9nB,OAAOX,MACvB0oB,GAAQ,UAAQ7iB,IAEpB6iB,EAAiB,OAAE1oB,MAAQA,EAE3BynB,GAAWiB,EACb,CAmG2BC,CAAqBjoB,EAAE,EACxCuE,YAAY,uBAKtB,CAEe2jB,GAETC,GAAiB,WACrBvc,IAAM,CACJC,OAAQ,MACRC,IAAKzB,GAAO,kDACX3J,MAAK,SAAU2L,GAChB,IAAIa,EAAOb,EAASvP,KACpB+oB,GAAW3Y,EACb,GACF,EA2DM6P,GAAU,WAIdnR,IAAM,CACJC,OAAQ,OACRC,IAAKzB,GAAO,gCACZvN,KAAM,CACJsrB,OAAQ7E,EACR8E,MAAOjC,GACPkC,QAAuB,UAAd/Y,GAAyB0X,IAAgB1X,GAClDgZ,UAAW5e,GACX2c,WACkB,QAAhBzB,GACI2D,GACc,IAAdlC,GACA,KACAA,GACNzB,aAAcA,GACd4D,UAAW/d,GACXge,OAAoB,IAAZ3D,IAAkB,EAAI/N,IAAO+N,IAAU7N,OAAO,cACtDyR,KAAgB,IAAV1D,IAAgB,EAAIjO,IAAOiO,IAAQ/N,OAAO,cAChD0R,WAAqC,IAAzB1C,GAAeD,QAAgB,EAAIC,GAAeD,UAE/DvlB,MAAK,SAAC2L,GAmBP,IAlBA,IAAIuN,EAAUvN,EAASvP,KAAKA,KAkBnB0F,EAAI,EAAGA,EAAIoX,EAAQnb,OAAQ+D,IAClCoX,EAAQpX,GAAiB,aACO,MAA9BoX,EAAQpX,GAAiB,aACrB,GACAwU,IAAO4C,EAAQpX,GAAiB,cAAG0U,OAAO,eAChD0C,EAAQpX,GAAmB,eACO,MAAhCoX,EAAQpX,GAAmB,eACvB,IACAwU,IAAO4C,EAAQpX,GAAmB,gBAAG0U,OAAO,eAGpDnN,GA1BiB,CACf,CACEiQ,IAAK,OACLzP,YAAa,eACbse,aAAc,qBACdviB,SAAU,WACVwiB,UAAW,gBACXC,eAAgB,cAChBzC,WAAY,cACZ0C,aAAc,gBACdxH,cAAe,cACfyH,YAAa,KAeE3Y,OAAOsJ,IAG1B1P,EAFY,CAAC,gBAGbE,GAFiB,CAAC,uBAGlBkb,GAAa1L,GAEb/Q,IAAU,GAGVL,IAAYD,IAERI,GADJJ,GACoBE,EAAAA,IACAsF,EAAAA,KACpBhF,IAAa,EAEf,GACF,GACA1K,EAAAA,EAAAA,YAAU,WACRvB,GAAK,IAAMQ,GAAcgB,KAAKC,MAAMD,KAAKE,UAAU1B,GAAK,KAC1D,GAAG,CAACA,MAEJuB,EAAAA,EAAAA,YAAU,WArPRuN,IAAAA,IACOvB,GAAO,yCACX3J,MAAK,SAACwM,GACL,IAAIsC,EAAY,GAEZ1S,EAAOoQ,EAAKpQ,KAEhBA,EAAK2B,OAAS,GACZ3B,EAAKiC,SAAQ,SAACiB,GACZ,IAAIyM,EAAa,CACfD,MAAOxM,EAAEkpB,SACT5pB,MAAOU,EAAEK,IAGXmP,EAAUvQ,KAAKwN,EACjB,IACFvD,GAAYsG,EAEd,IACCtD,OAAM,SAACC,GAAK,OAAK3G,QAAQC,IAAI0G,EAAM,IAoOtCgc,KAxRAvc,IAAAA,IACOvB,GAAO,+BACX3J,MAAK,SAAC4L,GACL,IAAIC,EAAY,GACZzP,EAAOwP,EAASxP,KACpBA,EAAK2B,OAAS,GACZ3B,EAAKiC,SAAQ,SAACiB,GACZ,IAAIyM,EAAa,CACfD,MAAOxM,EAAEwM,MACTlN,MAAOU,EAAEV,OAEXiN,EAAUtN,KAAKwN,EACjB,IACFxD,GAAYsD,GACZtC,GAAoBsC,EACtB,IACCL,OAAM,SAACC,GAAK,OAAK3G,QAAQC,IAAI0G,EAAM,IA0QtCgd,IACF,GAAG,IAEH,IAAMA,GAAuB,WAC3Bvd,IAAAA,IACOvB,GAAU,yCACd3J,MAAK,SAACwM,GACL,IAAMpQ,EAAOoQ,EAAKpQ,KAClBA,EAAKgT,MAAK,SAACC,EAAGC,GAAC,OAAKD,EAAEjC,KAAOkC,EAAElC,IAAI,IACnC,IAAMsb,EAAkBtsB,EAAKyD,KAAI,SAACS,GAChC,OACE,mBAA0B1B,MAAO0B,EAAKqoB,YAAY,SAC/CroB,EAAK8M,MADK9M,EAAKilB,OAItB,IACA3C,EAAqB8F,EACvB,IACCld,OAAM,SAACod,GAAS,GACrB,EAEMC,GAAgB,CAAC,EACvB,IAAgC3rB,EAAAA,EAAAA,UAAS2rB,IAAc,iBAAhDC,GAAQ,MAAEzH,GAAW,MAG5B,IAAgCnkB,EAAAA,EAAAA,UADV,CAAC,GACgC,iBAAtC6rB,IAAF,MAAa,OAC5B,IAAoD7rB,EAAAA,EAAAA,UAAS,IAAG,iBAAzD8rB,GAAkB,MAAEC,GAAqB,MAChD,IAA4D/rB,EAAAA,EAAAA,UAAS,IAAG,iBAAjEgsB,GAAsB,MAAE3H,GAAyB,MACxD,IAAsCrkB,EAAAA,EAAAA,YAAU,iBAChD,IADkB,MAAgB,OACIA,EAAAA,EAAAA,UAAS,IAAIglB,MAAM,iBAAlDV,GAAW,MAAEC,GAAc,MAC5BtV,GAAgB,SAAH,GAAc,EAARC,SAAQ,OAC/B,+BAEI,SAAC,MAAW,CAAC/I,UAAU,iBAIxB,EAOCykB,GALiBpE,GAAM7jB,KAAI,SAACspB,GAAY,OAC5CA,EAAavqB,MAAM8P,UAAU,IAIKzD,KAAK,KAoJnCme,GAAe,SAACnL,GACpB,OACE,gBAAKzf,MAAOyf,EAAQrY,SAAUvC,UAAU,WAAU,SAC/C4a,EAAQrY,UAGf,GA0CAjI,EAAAA,EAAAA,YAAU,WAAO,GAAG,CAACmrB,KAErB,IA0DMO,GAAe,SAACjtB,GAAU,IAAD,EACzBgL,EAA0B,QAAvB,EAAG1K,GAAkB,UAAE,aAApB,EAAsB2K,MAAM,KACtC,OACE,+BACE,SAAC,KAAI,CACH9H,OAAO,SACP+H,GAAIF,EAAI,GAAK,IAAMhL,EAAKuD,GACxB,cAAY,UACZnB,MAAOpC,EAAKyN,YAAY,SAEvBzN,EAAKK,EAAY,OAI1B,EAEM6sB,GAAa,SAACltB,GAClB,OACE,gBAAKiH,UAAU,YAAW,UACxB,iBAAK4C,MAAO,CAAEsjB,QAAS,OAAQ3T,OAAQ,WAAY,WACjD,gBAAK3P,MAAO,CAAEujB,SAAU,QAAS,SACZ,QAAlBptB,EAAKukB,WAAyC,QAAlBvkB,EAAKukB,WAChC,gBACEnd,QAAS,WACP0hB,GAAQF,EAAAA,KACRgB,GAAa5pB,GACbipB,GAAajpB,EAAKuD,IAElBmd,IAAQ,EACV,EACAte,MAAM,mBAAkB,SAEvBymB,KAED,QAEN,gBACEzhB,QAAS,WACPuhB,GAAWF,EAAAA,KACXQ,GAAajpB,EAAKuD,IAClBoY,IAAQ,EACV,EACAvZ,MAAM,eAAc,SAEnBsmB,SAKX,EAEMpY,GAAwB,SAACC,EAAiBC,GAC9C,IAAMC,EAAiBF,EAAgB9M,KAAI,SAACiN,GAAM,OAAKA,EAAOlO,KAAK,IAC7DmO,EAAYH,EAAW/M,KAAI,SAACS,GAAI,OAAKA,EAAK1B,KAAK,IAErD,OAAIiO,EAAe9O,SAAWgP,EAAUhP,OAC/B,YAEA4O,EAAgB9M,KAAI,SAACiN,GAAM,OAAKA,EAAOhB,KAAK,IAAEb,KAAK,KAE9D,EAQA,OACE,2BACGuX,GACC,gBAAKnf,UAAU,oBAAmB,UAChC,kBAAMA,UAAU,SAAQ,WACtB,SAAC,MAAO,IAAG,oCAKf,GAEDmgB,IACC,iBAAKngB,UAAU,kBAAiB,UAC7B,KACD,4BACG,KACD,SAAC,MAAgB,IAAG,2DAKxB,GAEDggB,IACC,iBAAKhgB,UAAU,kBAAiB,UAC7B,KACD,4BACG,KACD,SAAC,MAAgB,IAAG,kCAIxB,GAED0a,IACC,iBAAK1a,UAAU,kBAAiB,UAC7B,KACD,4BACG,KACD,SAAC,MAAgB,IAAG,mCAIxB,IAEF,gBAAKA,UAAU,YAAW,UACxB,iBAAKA,UAAU,YAAW,WACxB,gBAAKA,UAAU,cACf,gBAAKA,UAAU,WAAU,UACvB,wBAAI,uBAEN,gBAAKA,UAAU,qBAGnB,iBAAKA,UAAU,wBAAuB,WACpC,iBAAKA,UAAU,2BAA0B,WACvC,wBAAI,oBACJ,gBAAKA,UAAU,UAAS,UACtB,SAAC6J,EAAA,EAAU,CAACC,QAh3BF,oBAg3BwBC,KA/2BzB,2BAi3BX,gBACE5J,QAAS,WACPsE,IAAYD,IAERI,GADJJ,GACoBE,EAAAA,IACAsF,EAAAA,IACtB,EAAE,UAEF,0BAAOrF,WAGX,UAAC,KAAS,CAACH,SAAUA,GAAQ,WAC3B,iBAAKxE,UAAU,oBAAmB,WAChC,gBAAKA,UAAU,iBAAgB,UAC7B,iBAAKA,UAAU,iBAAgB,WAC7B,kBAAOA,UAAU,QAAQiK,QAAQ,cAAa,SAAC,kBAG/C,iBAAMjK,UAAU,YAAW,SAAC,OAC5B,gBAAKA,UAAU,QAAO,UACpB,kBACElC,KAAK,OACLkC,UAAU,eACV1D,GAAG,SACHkE,aAAW,EACXjE,SAAU,SAACN,GACTwjB,EAAOxjB,EAAEC,OAAOX,MAClB,YAKR,gBAAKyE,UAAU,iBAAgB,UAC7B,iBAAKA,UAAU,iBAAgB,WAC7B,kBAAOA,UAAU,QAAQiK,QAAQ,iBAAgB,SAAC,qBAGlD,iBAAMjK,UAAU,YAAW,SAAC,OAE5B,gBAAKA,UAAU,QAAO,UACpB,gBAAKA,UAAU,0BAAyB,UACtC,iBAAMA,UAAU,OAAO1D,GAAG,OAAM,UAC9B,gBAAK0D,UAAU,yBAAwB,UACrC,SAAC,EAAAmK,wBAAuB,CACtBC,MAAO3D,GACP3I,KAAK,OACLiM,KAAK,aACLzN,GAAG,aACHmK,QAASA,GACTlK,SAAU,SAACN,IArwBX,SAACA,GACvB,IAAMmqB,EAAanqB,EAAEC,OAAOX,MAE5B,EAAsBU,EAAEC,OAAZX,GAAF,EAAFe,GAAS,EAALf,OACE,YAGH8qB,KAAKD,KACdnqB,EAAEC,OAAOX,MAAQ,IAEnB6mB,IAAkB,SAACxX,GAAI,yBAAWA,GAAI,cAAG3O,EAAEC,OAAOI,GAAKf,GAAK,GAC9D,CA2vB0B0d,CAAgBhd,EAClB,EACAmoB,eAAgBA,GAChBpkB,UAAU,eACVQ,YAAY,4BAIZkK,UAAU,EACVF,SAAU,SAACvO,GACTmmB,IAAkB,SAAC3X,GAAS,yBACvBA,GAAS,IACZyX,OAAQjmB,EAAEK,IAAE,GAEhB,kBAQd,gBAAK0D,UAAU,iBAAgB,UAC7B,iBAAKA,UAAU,iBAAgB,WAC7B,kBAAOA,UAAU,QAAQiK,QAAQ,KAAI,SAAC,QAGtC,iBAAMjK,UAAU,YAAW,SAAC,OAE5B,gBAAKA,UAAU,oBAAmB,UAChC,SAAC,KAAW,CACV8I,cAAeA,GACfxM,GAAG,eACHuO,QAAS5F,GACT6F,cAAc,EACdQ,cAAejC,GACf9N,MAAO0K,GACP8E,UAAU,EACVxO,SAAU,SAAC+pB,GACTpgB,GAAoBogB,GACpB,IAAIC,EAAiB,GACrBD,EAAEtrB,SAAQ,SAACC,GACTsrB,EAAerrB,KAAKD,EAAEM,MACxB,IACAkG,QAAQC,IAAI6kB,GACZjE,GACEiE,EAAe7rB,QAAU,IACpB,EACD6rB,EAAelb,WAEvB,YAMR,gBAAKrL,UAAU,iBAAgB,UAC7B,iBAAKA,UAAU,iBAAgB,WAC7B,mBAAOA,UAAU,QAAQiK,QAAQ,WAAU,UAAC,gBAC5B,iBAAMjK,UAAU,aAAY,SAAC,UAE7C,iBAAMA,UAAU,YAAW,SAAC,OAC5B,gBAAKA,UAAU,QAAO,UACpB,oBACE+J,KAAK,WACLzN,GAAG,WACHC,SAxLI,SAACN,GACrB,MAA4BA,EAAEC,OAAlB6N,GAAF,EAAFzN,GAAQ,EAAJyN,MAAMxO,EAAK,EAALA,MACN,YAARwO,GAAgC,WAAVxO,GACxBskB,IAAe,GAEjB4C,GAAcxmB,EAAEC,OAAOX,MACzB,EAkL0C,UAEvBsU,GAAcnV,OAAS,YACxB,mBAAQa,MAAM,KAAI,SAAC,aACnB,mBAAQA,MAAM,KAAI,SAAC,iBACnB,mBAAQA,MAAM,SAAQ,SAAC,sBAK/B,gBAAKyE,UAAU,iBAAgB,UAC7B,iBAAKA,UAAU,iBAAgB,WAC7B,kBAAOA,UAAU,QAAQiK,QAAQ,eAAc,SAAC,mBAGhD,iBAAMjK,UAAU,YAAW,SAAC,OAC5B,gBAAKA,UAAU,QAAO,UACpB,oBACE1D,GAAG,eACHC,SAAU,SAACN,GACT4J,GAAgB5J,EAAEC,OAAOX,MAC3B,EAAE,WAEF,mBAAQA,MAAM,OAAM,SAAE,aACtB,mBAAQA,MAAM,IAAIkB,UAAQ,WAAC,iBAG3B,mBAAQlB,MAAM,IAAG,SAAC,eAClB,mBAAQA,MAAM,IAAG,SAAC,uBAK1B,gBAAKyE,UAAU,iBAAgB,UAC7B,iBAAKA,UAAU,iBAAgB,WAC7B,kBAAOA,UAAU,QAAQiK,QAAQ,gBAAe,SAAC,oBAGjD,iBAAMjK,UAAU,YAAW,SAAC,OAC5B,gBAAKA,UAAU,QAAO,UACpB,oBACE1D,GAAG,gBACHC,SAAU,SAACN,GACT4kB,GAAiB5kB,EAAEC,OAAOX,MAC5B,EAAE,WAEF,mBAAQA,MAAM,KAAI,SAAC,aACnB,mBAAQA,MAAM,MAAK,SAAC,SACpB,mBAAQA,MAAM,YAAW,SAAC,yBAKlC,gBAAKyE,UAAU,iBAAgB,UAC7B,iBAAKA,UAAU,iBAAgB,WAC7B,kBAAOA,UAAU,QAAQiK,QAAQ,eAAc,SAAC,mBAGhD,iBAAMjK,UAAU,YAAW,SAAC,OAC5B,gBAAKA,UAAU,QAAO,UACpB,oBACE1D,GAAG,eACHC,SAAU,SAACN,GACT8kB,GAAgB9kB,EAAEC,OAAOX,MAC3B,EAAE,WAEF,mBAAQA,MAAM,KAAI,SAAC,cACnB,mBAAQA,MAAM,OAAM,SAAC,qBACrB,mBAAQA,MAAM,OAAM,SAAC,eACrB,mBAAQA,MAAM,OAAM,SAAC,aACrB,mBAAQA,MAAM,OAAM,SAAC,wBAKZ,QAAhBulB,IACC,iCACE,gBAAK9gB,UAAU,iBAAgB,UAC7B,iBAAKA,UAAU,iBAAgB,WAC7B,mBAAOA,UAAU,QAAQiK,QAAQ,aAAY,UAAC,iBAC7B,iBAAMjK,UAAU,aAAY,SAAC,UAE9C,iBAAMA,UAAU,YAAW,SAAC,OAC5B,gBAAKA,UAAU,QAAO,UACpB,4BACE,SAAC,KAAU,CACT+J,KAAK,WACLwU,aAAa,MACbjiB,GAAG,WACHsf,aAAa,SACbnf,SAAUukB,GACVhhB,UAAS,WAAMmgB,GAAe,cAAgB,IAC9CrE,WAAW,cACX0K,QAAS,IAAIhN,KACbuC,UAAW,SAAC9f,GACVA,EAAE+f,gBACJ,EACAzf,SAAU,SAACN,GACTglB,GAAYhlB,EACd,EACA0f,mBAAiB,EACjBD,kBAAgB,IACf,eAKX,gBAAK1b,UAAU,iBAAgB,UAC7B,iBAAKA,UAAU,iBAAgB,WAC7B,mBAAOA,UAAU,QAAQiK,QAAQ,aAAY,UAAC,eAC/B,iBAAMjK,UAAU,aAAY,SAAC,UAE5C,iBAAMA,UAAU,YAAW,SAAC,OAC5B,gBAAKA,UAAU,QAAO,UACpB,4BACE,SAAC,KAAU,CACT+J,KAAK,SACLzN,GAAG,SACHsf,aAAa,SACb2C,aAAa,MACb9hB,SAAUykB,GACVlhB,UAAS,WAAMmgB,GAAe,cAAgB,IAC9CrE,WAAW,cACXD,QAASmF,GACTwF,QAAS,IAAIhN,KACbuC,UAAW,SAAC9f,GACVA,EAAE+f,gBACJ,EACAzf,SAAU,SAACN,GACTklB,GAAUllB,EACZ,EACAyf,kBAAgB,EAChBC,mBAAiB,IAChB,iBAOb,GAGe,QAAhBmF,IACC,gBAAK9gB,UAAU,iBAAgB,UAC7B,iBAAKA,UAAU,iBAAgB,WAC7B,mBAAOA,UAAU,QAAQiK,QAAQ,aAAY,UAC1C,IAAI,kBAGP,iBAAMjK,UAAU,YAAW,SAAC,OAE5B,gBAAKA,UAAU,oBAAmB,UAChC,SAAC,KAAW,CACVzE,MAAO8kB,GACPxV,QAASmU,GACTxe,YAAY,kBACZ0lB,QAAQ,OACR5a,cAAejC,GACfP,cAAeA,GACfvM,SAAU,SAAC+pB,GACThG,GAASgG,GACT,IAAIC,EAAiB,GACrBD,EAAEtrB,SAAQ,SAACC,GACTsrB,EAAerrB,KAAKD,EAAEM,MACxB,GACF,YAMR,gBAAKyE,UAAU,iBAAgB,UAC7B,iBAAKA,UAAU,iBAAgB,WAC7B,kBAAOA,UAAU,QAAQiK,QAAQ,aAAY,SAAC,iBAG9C,iBAAMjK,UAAU,YAAW,SAAC,OAC5B,gBAAKA,UAAU,QAAO,UACpB,oBACE1D,GAAG,aACHC,SAAU,SAACN,GACTumB,GAAcvmB,EAAEC,OAAOX,MACzB,EAAE,WAEF,mBAAQA,MAAM,OAAM,SAAC,mBACrB,mBAAQA,MAAM,OAAM,SAAC,iBACrB,mBAAQA,MAAM,OAAM,SAAC,iCAM/B,gBAAKyE,UAAU,0DAAyD,UACtE,oBACElC,KAAK,SACLkC,UAAU,kBACVG,QA52BM,WACG,SAAjB2gB,GACe,KAAbE,IAA8B,KAAXE,GACrBd,IAAgB,IAIhBA,IAAgB,GAChBiB,IAAsB,GAEtBzV,YAAW,WACT9G,IAAU,GAEV8G,YAAW,WACToN,KACAlU,IAAU,EACZ,GAAG,IACL,GAAG,KAEH6V,IAAmB,KAGrBsF,IAAqB,GACrBjb,IAAa,GAGb4G,YAAW,WACT9G,IAAU,GAEV8G,YAAW,WACToN,KACAlU,IAAU,EACZ,GAAG,IACL,GAAG,KAEH6V,IAAmB,IAgBrByH,GAAkBH,GACpB,EAwzBmC,WAErB,SAAC,MAAQ,IAAG,UAAQ,YAKzBpd,IAAS,SAAC4H,EAAA,EAAM,CAACC,YAv3BN,WAClBnG,GAAgBlG,SAAWkG,GAAgBlG,QAAQsM,QACnD7H,IAAU,EACZ,IAo3ByD,SAGpDC,IAA8B,SAAjB+b,IACZ,iBAAK9gB,UAAU,aAAY,WACzB,UAAC,IAAS,CACRA,UAAU,2CACVc,kBAAkB,6FAClBC,0BAA0B,sCAC1BC,mBAAoB,CAAC,GAAI,GAAI,IAC7BzF,MAAO+lB,GACPpgB,WAAS,EACTlI,KAAM,GACNkE,OAAQA,GACRkE,QAASA,GACTqlB,SAAU,SAACxqB,GAAC,OAAK+mB,GAAW/mB,EAAEmF,QAAQ,EACtCmb,UAAW5H,GACX6H,kBAAmB,SAACvgB,GAAC,OAAKgnB,GAAqB,OAADhnB,QAAC,IAADA,OAAC,EAADA,EAAGV,MAAM,EACvDmrB,cAAc,SACdtrB,QAAQ,KACR+F,eAAa,EAGbG,aAAa,sBAGbL,kBAAmBpF,EAAY,WAE/B,SAAC,IAAM,CAAC+E,MAAM,UAAUuD,KAtnBb,SAACpL,GACpB,IAAI4tB,EAAgB,KA0CpB,OApCEA,EAHA5tB,EAAK0kB,cAAgBxK,IAAO,IAAIuG,MAAQrG,OAAO,gBAC5B,QAAlBpa,EAAKukB,WAAyC,QAAlBvkB,EAAKukB,YAGhC,gBAAKtd,UAAU,+BAA8B,UAC3C,gBAAKA,UAAU,aAAY,UACzB,gBAAKA,UAAU,eAAe7E,MAAM,OAAM,UACxC,4BACE,gBAAK6E,UAAU,eAAe2C,MAAM,YACpC,gBAAK3C,UAAU,uBAOzBjH,EAAK0kB,eAAiBxK,IAAO,IAAIuG,MAAQrG,OAAO,eAC7B,QAAlBpa,EAAKukB,WAAyC,QAAlBvkB,EAAKukB,WAchC,gBAAKtd,UAAU,+BAA8B,UAC3C,iBAAKA,UAAU,eAAc,WAC3B,gBAAKA,UAAU,eAAe7E,MAAM,UACpC,gBAAK6E,UAAU,oBAdnB,gBAAKA,UAAU,+BAA8B,UAC3C,gBAAKA,UAAU,eAAc,UAC3B,iBAAKA,UAAU,eAAe7E,MAAM,OAAM,WACxC,gBAAK6E,UAAU,eAAe2C,MAAM,YACpC,gBAAK3C,UAAU,sBAelB,gBAAKA,UAAU,WAAU,SAAE2mB,GACpC,KA2kBU,SAAC,IAAM,CAAC/lB,MAAM,cAAcuD,KAAM6hB,MAClC,SAAC,IAAM,CAACplB,MAAM,eAAegC,MAAO,CAAEyP,UAAW,aACjD,SAAC,IAAM,CAACzR,MAAM,WAAWuD,KAAM4hB,MAC/B,SAAC,IAAM,CAACnlB,MAAM,eACd,SAAC,IAAM,CAACA,MAAM,iBAAiBgC,MAAO,CAAEyP,UAAW,aACnD,SAAC,IAAM,CAACzR,MAAM,gBACd,SAAC,IAAM,CAACA,MAAM,eAAeuD,KA9hBrB,SAACpL,GAMjB,OALAkZ,GAAUlZ,EAAKukB,WACfyE,GAAiBhpB,EAAK0kB,eACtBmD,GAAe7nB,EAAKyN,aACpBmZ,GAAa5mB,EAAKylB,WAGhB,+BACE,oBACEliB,GAAG,mBACHC,SAAU,SAACN,GAAO,IAAD,GA/BF,SAAC2qB,EAAapI,EAAUnX,GAC7C0Y,GAAoB6G,GACpB5I,IAAY,SAACvL,GAAQ,yBAChBA,GAAQ,cACV+L,EAAW,CACVlB,UAAWsJ,EACXpI,SAAUA,EACVnX,UAAWA,IACZ,IAGH,IAAMwf,EAAS,IAAIhI,IAAIV,IACjB2I,GAAuB,kBACxBnS,IAAgB,IACnB2I,UAAWsJ,IAEbC,EAAO/H,IAAIgI,EAAwBxqB,GAAIwqB,GACvC1I,GAAeyI,EACjB,CAgBUE,CAF0B,OAAD9qB,QAAC,IAADA,GAAS,QAAR,EAADA,EAAGC,cAAM,WAAR,EAAD,EAAWX,MACf,OAAJxC,QAAI,IAAJA,OAAI,EAAJA,EAAMylB,SACwB,OAAJzlB,QAAI,IAAJA,OAAI,EAAJA,EAAMuD,GACnD,EACAiE,aAAkB,OAAJxH,QAAI,IAAJA,OAAI,EAAJA,EAAMukB,UAAU,WAE9B,mBAAQ/hB,MAAM,OAAM,SAAC,qBACrB,mBAAQA,MAAM,OAAM,SAAC,eACrB,mBAAQA,MAAM,OAAM,SAAC,aACrB,mBAAQA,MAAM,OAAM,SAAC,kBAI7B,KAugBU,SAAC,IAAM,CAACqF,MAAM,gBAAgBuD,KArgBnB,SAACyW,GACpB,OACE,gBAAK5a,UAAU,aAAY,UACzB,SAAC,GAAuB,CACtB2a,mBAAoBA,GACpBgL,mBAAoBA,GACpBjL,gBAAiBA,GACjBwD,0BAA2BA,GAC3BvJ,iBAAkBA,GAClBwJ,YAAaA,GACbC,eAAgBA,GAChBH,gBAAiBA,GAEjB7W,YAAaA,GACbxF,SAAUA,GACV6jB,SAAUA,GACVzH,YAAaA,GACbpD,QAASA,EACTte,GAAG,gBAEH0D,UAAW4a,EAAQ5a,UAGnB0lB,YAAaA,GACb5J,WAAW,cACXI,gBAAgB,eAChBR,kBAAgB,EAChBC,mBAAiB,KAIzB,KAueU,SAAC,IAAM,CACLxX,KAAM8hB,GACNrjB,MAAO,CAAEyP,UAAW,SAAU8T,SAAU,cAI5C,gBAAKnmB,UAAU,UACf,gBAAKA,UAAU,0DAAyD,UACtE,oBACElC,KAAK,SACLkC,UAAU,kBACVG,QA/uBS,WACnB,IAAIpH,EAAO,GAEX,GACwB,KAArB+mB,IAAqD,IAA1B+F,SACF5lB,GAA1B4lB,IAC0B,MAA1BA,GAEA5F,IAAqB,GACrBrU,YAAW,WACTqU,IAAqB,EACvB,GAAG,KAEHjI,OAAOgP,SAAS,CACd5R,IAAK,EACL6R,SAAU,eAEP,CAAC,IAAD,EACLhH,IAAqB,GACf,OAANnlB,aAAM,IAANA,QAAsB,QAAhB,EAANA,OAAQC,KAAK0qB,WAAS,OAAtB,EAAwBzqB,SAAQ,SAAC8d,GAC/B,QAAgC7Y,IAA5BwlB,GAAS3M,GAAKzR,UAAyB,CAAC,IAAD,YACnC6f,EAAe5F,GAAU6F,MAC7B,SAAClqB,GAAI,OAAKA,EAAKuhB,WAAaiH,GAAS3M,GAAK0F,QAAQ,IAEpDoH,GAAsBH,GAAS3M,GAAK2C,MACpC,IAAM1F,EAAM,CAAC,EACbA,EAAQ,IAAK+C,EACb/C,EAAe,UAAiB,QAAhB,EAAG0P,GAAS3M,UAAI,aAAb,EAAezR,UAElC0O,EAAmB,mBACc9V,IAAlB,QAAb,EAAAwlB,GAAS3M,UAAI,aAAb,EAAe0C,cACC,OAAZ0L,QAAY,IAAZA,OAAY,EAAZA,EAAczJ,cACdxK,IAAoB,QAAd,EAACwS,GAAS3M,UAAI,aAAb,EAAe0C,cAAcrI,OAAO,cAChD4C,EAAa,SAAKwM,GAChBxM,EAAc,SACe,OAAf,QAAb,EAAA0P,GAAS3M,UAAI,aAAb,EAAewE,iBACard,IAAf,QAAb,EAAAwlB,GAAS3M,UAAI,aAAb,EAAewE,WACC,OAAZ4J,QAAY,IAAZA,OAAY,EAAZA,EAAc5J,YACA,QAAd,EAACmI,GAAS3M,UAAI,aAAb,EAAewE,WACrBvH,EAAc,UAAK1R,EACpBtL,EAAKmC,KAAK6a,EACd,CACF,IAEA,IAAIqR,GAAkB,EACtBjJ,GAAYnjB,SAAQ,SAACO,EAAO8rB,GAC1B,IAAMC,EAAuB/rB,EAAMkiB,cACnCyC,GAAmB3kB,EAAMkiB,eAGE,OAAzB6J,GACyB,KAAzBA,QACyBrnB,IAAzBqnB,IAEAF,GAAkB,EAEtB,IAEKA,EAOHvf,IAAM,CACJC,OAAQ,OACRC,IAAKzB,GAAO,0CACZvN,KAAMA,IAEL4D,MAAK,SAACqL,GACgBA,EAAIjP,KAEzBgnB,GAAoB,IACpB7B,GAA0B,IAC1BvD,IAAmB,GACnByE,GAAa,GACbpa,IAAa,GACbF,IAAU,GAGVkT,OAAOgP,SAAS,CACd5R,IAAK,EACL6R,SAAU,WAEZjO,KACAgF,GAAYwH,IACZ5Z,YAAW,WACTwT,GAAa,GACbpa,IAAa,GACbF,IAAU,EACZ,GAAG,IACL,IACCqD,OAAM,SAACC,GACN3G,QAAQC,IAAI,iBAAkB0G,EAChC,KApCFuS,IAAmB,GACnB3C,OAAOgP,SAAS,CACd5R,IAAK,EACL6R,SAAU,WAoChB,CACF,EA4oBkC,WAEtB,SAAC,MAAM,IAAG,QAAM,YAKtB,GAEe,QAAhBnG,IACC,gBAAK9gB,UAAU,aAAY,UACzB,UAAC,IAAS,CACRA,UAAU,2CACVc,kBAAkB,6FAClBC,0BAA0B,sCAC1BC,mBAAoB,CAAC,GAAI,GAAI,IAC7BzF,MAAO+lB,GACPpgB,WAAS,EACTlI,KAAM,GACNkE,OAAQA,GACRkE,QAASA,GACTqlB,SAAU,SAACxqB,GAAC,OAAK+mB,GAAW/mB,EAAEmF,QAAQ,EACtCmb,UAAW5H,GACX6H,kBAAmB,SAACvgB,GAAC,OAAKgnB,GAAqB,OAADhnB,QAAC,IAADA,OAAC,EAADA,EAAGV,MAAM,EACvDmrB,cAAc,SACdtrB,QAAQ,KACR+F,eAAa,EAGbG,aAAa,sBAGbL,kBAAmBie,EAAkB,WAGrC,SAAC,IAAM,CAACte,MAAM,cAAcuD,KAAM6hB,MAClC,SAAC,IAAM,CAACplB,MAAM,eAAegC,MAAO,CAAEyP,UAAW,aACjD,SAAC,IAAM,CAACzR,MAAM,WAAWuD,KAAM4hB,MAC/B,SAAC,IAAM,CAACnlB,MAAM,eACd,SAAC,IAAM,CAACA,MAAM,gBACd,SAAC,IAAM,CACL1D,OAAO,WACP0D,MAAM,gBACNuD,KAjoBU,SAACyW,GACrB,OACE,gBACEhY,MAAO,CAAEyP,UAAW,UACpBlX,MAAOyf,EAAQ6C,cACfzd,UAAU,WAAU,SAEnBiT,IAAO2H,EAAQ6C,eAAetK,OAAO,gBAG5C,KAynBU,SAAC,IAAM,CAACvS,MAAM,iBAAiBuD,KAxnBnB,SAACyW,GACrB,OACE,gBACEhY,MAAO,CAAEyP,UAAW,UACpBlX,MAAOyf,EAAQoK,eACfhlB,UAAU,WAAU,SAEnBiT,IAAO2H,EAAQoK,gBAAgB7R,OAAO,gBAG7C,KA+mBU,SAAC,IAAM,CAACjW,OAAO,WAAW0D,MAAM,cAChC,SAAC,IAAM,CAAC1D,OAAO,WAAW0D,MAAM,cAGhC,SAAC,IAAM,CACLuD,KAAM8hB,GACNrjB,MAAO,CAAEyP,UAAW,SAAU8T,SAAU,eAK9C,GAED1R,IACC,SAAC8S,GAAkB,CACjB9S,KAAMA,GACNC,QAASA,GACTsN,aAAcA,GACd3a,UAAWA,GACXb,YAAaA,GACbkZ,UAAWA,GACX/K,iBAAkBA,KAGpB,GAED4C,IACC,SAAC,GAAY,CACXmC,UAAWA,GACX6G,eAAgBA,GAChBmC,gBAAiBA,GACjBH,WAAYA,GACZhL,KAAMA,GACNkC,QAASA,GACTuI,aAAcA,GACd3a,UAAWA,GACXb,YAAaA,GACbkZ,UAAWA,GACX/K,iBAAkBA,GAClBgF,QAASA,GACT7U,UAAWA,KAGb,IAEF,SAAC,EAAiB,CAChBN,QAAS6a,EACT5a,WAAY6a,EACZ1S,kBAAmBA,IAClB,KACH,SAAC4a,GAAA,EAAmB,CAClBC,SA9wCS,EA+wCTjjB,QAASob,GACTnb,WAAYob,GACZ/P,iBAAkBA,GAClBD,cAAeA,OAIvB,EC/wCA,OAlGA,WACE,OAAgChW,EAAAA,EAAAA,UAAS,QAAO,eAAzC6tB,EAAQ,KAAEC,EAAW,KAK5B,GAAsC9tB,EAAAA,EAAAA,UAAS,WAAU,eAAlD+tB,EAAW,KACZthB,GAD4B,KAClBvE,EAAAA,EAAAA,SACVsC,EAAeC,aAAaC,QAAQ,SAC1C,GAAoC1K,EAAAA,EAAAA,UAAS,IAAG,eAEhD,GAFiB,KAAe,MAEIA,EAAAA,EAAAA,UAAS,KAAG,eAAzCguB,EAAU,KAAEC,EAAa,MAuBhCxtB,EAAAA,EAAAA,YAAU,WArBRuN,IAAM,CACJC,OAAQ,MAERC,IACEzB,EAAO,6DAC+CjC,EAAY,mBACnE1H,MAAK,SAACqL,GACP,IAAMjP,EAAOiP,EAAIjP,KACjB0I,QAAQC,IAAI3I,GAQZ+uB,EAPwB/uB,GAQxB0I,QAAQC,IAAI3I,EACd,GAKF,GAAG,IAEH,IAmBMgvB,EAAcF,EAEpB,GAAwBhuB,EAAAA,EAAAA,UAASkuB,GAAY,eAC7C,GADW,KAAS,MAC4BluB,EAAAA,EAAAA,WAAS,IAAM,eAM/D,OANuB,KAAqB,KAI5C4H,QAAQC,IAAImmB,IAGV,4BACE,0BACE,gBAAK7nB,UAAU,OAAM,SAClB6nB,EAAWrrB,KAAI,SAACwrB,GAAM,OACrB,mBAEEhoB,UACE0nB,IAAaM,EAAO5e,aAAaiC,WAC7B,qBACA,gBAENlL,QAAS,WACPwnB,EAAYK,EAAO5e,aAAaiC,YAChC5J,QAAQC,IAAIsmB,EAAO5e,aACrB,EACF,SAGG4e,EAAO5e,cAbH4e,EAAO1rB,GAcL,QAID,SAAborB,IAAuB,SAACO,EAAA,EAAU,CAACL,YAAaA,IACnC,WAAbF,IAAyB,SAACQ,EAAA,QAAa,CAACN,YAAaA,IACxC,WAAbF,IAAyB,SAAC,EAAa,IAC1B,YAAbA,IAA0B,SAAC,GAAc,MAGhD,EC1FA,OAVA,WACE,OACE,0BACC,iBAAK1nB,UAAU,YAAW,UAAC,KAAC,SAAC,GAAoB,QAKtD,C,4DCFA,IAPA,SAAoBmoB,GAClB,IAAItd,EAAUud,UAAU1tB,OAAS,QAAsBuF,IAAjBmoB,UAAU,GAAmBA,UAAU,GAAK,CAAC,EACnF,OAAOC,EAAAA,EAAAA,GAAyBF,GAAiBG,EAAAA,EAAAA,SAAS,CACxDC,aAAcA,EAAAA,GACb1d,GACL,C","sources":["views/ProjectComponent/ProjectSearchCellRenderer.js","views/ProjectComponent/ProjectSearchCellRendererNormalTable.js","views/ProjectComponent/ProjectSearchTable.js","views/ProjectComponent/ProjectSearch.js","views/ProjectComponent/CustomerSelectedItems.js","views/ProjectComponent/SelectCutomer.js","views/ProjectComponent/CustomerDialogBox.js","views/ProjectComponent/ProjectReviewPopUp.js","views/ProjectComponent/ProjectReviewTable.js","views/ProjectComponent/ReviewsAutocomplete.js","views/ProjectComponent/ReviewLogAdd.js","views/ProjectComponent/ProjectReviewDateComponent.js","views/ProjectComponent/ProjectReviews.js","views/ProjectComponent/InitialParentProject.js","views/ProjectComponent/ParentProject.js","../node_modules/@material-ui/core/esm/styles/makeStyles.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport { FilterMatchMode, FilterOperator } from \"primereact/api\";\nimport { DataTable } from \"primereact/datatable\";\nimport { Column } from \"primereact/column\";\n\nimport { InputText } from \"primereact/inputtext\";\nimport { ColumnGroup } from \"primereact/columngroup\";\nimport { Row } from \"primereact/row\";\n\nimport { Link } from \"react-router-dom\";\nimport { Button } from \"primereact/button\";\nimport jsPDF from \"jspdf\";\n\nrequire(\"jspdf-autotable\");\n\nfunction ProjectSearchCellRender(props) {\n  const {\n    data,\n    rows,\n    col,\n    headerdatagroup,\n    linkColumns,\n    linkColumnsRoutes,\n    dynamicColumns,\n    headerData,\n    setHeaderData,\n    exportData,\n    customFilters,\n    customFilterValue,\n    setCustomFilterValue,\n    fileName,\n  } = props;\n  const [mainData, setMainData] = useState([]);\n  const [bodyData, setBodyData] = useState([]);\n  const [exportColumns, setExportColumns] = useState([]);\n  const dt = useRef(null);\n  useEffect(() => {\n    setMainData(JSON.parse(JSON.stringify(data)));\n  }, [data]);\n\n  useEffect(() => {\n    if (mainData.length > 0) {\n      setHeaderData(mainData[0]);\n      setBodyData(mainData.splice(1));\n\n      let dtt = [];\n      let headDt = mainData[0];\n\n      Object.keys(headDt).forEach((d) => {\n        d != \"StatusId\" &&\n          // ? dtt.push({ title: \"cus\", dataKey: d })\n          dtt.push({ title: headDt[d], dataKey: d });\n      });\n\n      setExportColumns(dtt);\n    }\n  }, [mainData]);\n\n  const filtersData = {\n    contains: { value: null, matchMode: FilterMatchMode.CONTAINS },\n  };\n\n  const [filters1, setFilters1] = useState({\n    global: filtersData[\"contains\"],\n  });\n\n  useEffect(() => {\n    setFilters1({\n      global: filtersData[\"contains\"],\n    });\n  }, [headerData]);\n  const [globalFilterValue1, setGlobalFilterValue1] = useState(\"\");\n\n  const clearFilter1 = () => {\n    initFilters1();\n  };\n\n  const initFilters1 = () => {\n    setGlobalFilterValue1(\"\");\n  };\n\n  const onGlobalFilterChange1 = (e) => {\n    const value = e.target.value;\n    let _filters1 = { ...filters1 };\n    _filters1[\"global\"].value = value;\n    setFilters1(_filters1);\n    setGlobalFilterValue1(value);\n  };\n\n  const RenderCustomFilters = () => {\n    let cstFtlrs = customFilters;\n\n    switch (cstFtlrs[\"type\"]) {\n      case \"select\":\n        return (\n          <select\n            id={cstFtlrs[\"id\"]}\n            onChange={(e) => {\n              setCustomFilterValue(e.target.value);\n            }}\n          >\n            {Object.keys(cstFtlrs[\"data\"]).map((d) => {\n              return (\n                <option\n                  selected={customFilterValue == d ? true : false}\n                  value={d}\n                >\n                  {cstFtlrs[\"data\"][d]}\n                </option>\n              );\n            })}\n          </select>\n        );\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const exportCSV = (selectionOnly) => {\n    dt.current.exportCSV({ selectionOnly });\n  };\n  const saveAsExcelFile = (buffer, fileName) => {\n    import(\"file-saver\").then((module) => {\n      if (module && module.default) {\n        let EXCEL_TYPE =\n          \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8\";\n        let EXCEL_EXTENSION = \".xlsx\";\n        const data1 = new Blob([buffer], { type: EXCEL_TYPE });\n\n        module.default.saveAs(data1, fileName + EXCEL_EXTENSION);\n      }\n    });\n  };\n\n  const exportExcel = () => {\n    import(\"xlsx\").then((xlsx) => {\n      const headers = Object.keys(data[0]);\n      const uniqueHeaders = [...new Set(headers)]; // Remove duplicates\n      const worksheetData = data.map((item) =>\n        uniqueHeaders.map((header) => item[header])\n      );\n      const worksheet = xlsx.utils.json_to_sheet(worksheetData, {\n        skipHeader: true,\n      });\n      const workbook = { Sheets: { data: worksheet }, SheetNames: [\"data\"] };\n      const excelBuffer = xlsx.write(workbook, {\n        bookType: \"xlsx\",\n        type: \"array\",\n      });\n      saveAsExcelFile(excelBuffer, fileName);\n    });\n  };\n\n  const exportPdf = () => {\n    print();\n    // import(\"jspdf\").then((jsPDF) => {\n    //   import(\"jspdf-autotable\").then(() => {\n    //     const doc = new jsPDF.default(0, 0);\n    //     console.log(\"in line 187-------\");\n    //     console.log(data);\n    //     console.log(exportColumns);\n    //     doc.autoTable(exportColumns, data);\n    //     doc.save(\"Data.pdf\");\n    //   });\n    // });\n  };\n\n  const print = () => {\n    const pdf = new jsPDF(\"p\", \"pt\", \"a4\");\n    const columns = exportColumns.map((d) => d.title);\n    let rows = [];\n\n    for (let i = 1; i < data.length; i++) {\n      /*for (var key in json[i]) {\n              var temp = [key, json[i][key]];\n              rows.push(temp);\n            }*/\n      // let temp = [\n      //   json[i].id,\n      //   json[i].start.split(\"T\")[0],\n      //   json[i].duration,\n      //   json[i].name,\n      //   json[i].project,\n      //   json[i].task,\n      //   json[i].comment,\n      // ];\n\n      let temp = exportColumns.map((d) => data[i][d[\"dataKey\"]]);\n\n      rows.push(temp);\n    }\n    const columnWidths = [90, 90, 90, 100, 130]; // Set the widths of the columns here\n    pdf.text(235, 40, \"Tabla de Prestamo\");\n    pdf.autoTable(columns, rows, {\n      startY: 65,\n      theme: \"grid\",\n      styles: {\n        font: \"times\",\n        halign: \"center\",\n        cellPadding: 3.5,\n        lineWidth: 0.5,\n        lineColor: [0, 0, 0],\n        textColor: [0, 0, 0],\n      },\n      headStyles: {\n        textColor: [0, 0, 0],\n        fontStyle: \"normal\",\n        lineWidth: 0.5,\n        lineColor: [0, 0, 0],\n        fillColor: [166, 204, 247],\n      },\n      alternateRowStyles: {\n        fillColor: [212, 212, 212],\n        textColor: [0, 0, 0],\n        lineWidth: 0.5,\n        lineColor: [0, 0, 0],\n      },\n      rowStyles: {\n        lineWidth: 0.5,\n        lineColor: [0, 0, 0],\n      },\n      tableLineColor: [0, 0, 0],\n      columnStyles: {\n        0: { cellWidth: columnWidths[0] },\n        1: { cellWidth: columnWidths[1] },\n        2: { cellWidth: columnWidths[2] },\n        3: { cellWidth: columnWidths[3] },\n        4: { cellWidth: columnWidths[4] },\n      },\n    });\n    pdf.save(\"pdf\");\n  };\n\n  const renderHeader1 = () => {\n    return (\n      <div className=\"flex  flex-row-reverse\">\n        {customFilters != undefined && (\n          <span>\n            <RenderCustomFilters />\n          </span>\n        )}\n\n        <div className=\"exportBtn ml-3\">\n          {exportData?.includes(\"CSV\") && (\n            <span\n              className=\"pi pi-file csv\"\n              onClick={() => exportCSV(false)}\n              title=\"CSV\"\n            />\n          )}\n          {exportData?.includes(\"XLS\") && (\n            <span\n              className=\"pi pi-file-excel excel\"\n              onClick={exportExcel}\n              title=\"Export to Excel\"\n            />\n          )}\n          {exportData?.includes(\"PDF\") && (\n            <span\n              className=\"pi pi-file-pdf pdf\"\n              onClick={exportPdf}\n              title=\"PDF\"\n            />\n          )}\n        </div>\n        <span className=\"p-input-icon-left tableGsearch\">\n          <i className=\"pi pi-search\" />\n          <InputText\n            defaultValue={globalFilterValue1}\n            onChange={onGlobalFilterChange1}\n            placeholder=\"Keyword Search\"\n          />\n        </span>\n      </div>\n    );\n  };\n\n  const header1 = renderHeader1();\n  let headerGroup;\n  if (data[0].team_size) {\n    headerGroup = (\n      <ColumnGroup>\n        <Row>\n          <Column header=\"\" colSpan={12} />\n          <Column header=\"Contractor(FTE)\" colSpan={2} />\n          <Column header=\"Employee(FTE)\" colSpan={2} />\n          <Column header=\"\" colSpan={1} />\n        </Row>\n        <Row>\n          <Column header=\"Code\" sortable field=\"project_code\" />\n          <Column header=\"Project Name\" sortable field=\"project_name\" />\n          <Column header=\"Project Manager\" sortable field=\"lastYearProfit\" />\n          <Column header=\"Sales Executive\" sortable field=\"sales_executive\" />\n          <Column header=\"Project Stage\" sortable field=\"prj_stage\" />\n          <Column header=\"Primary BU\" sortable field=\"business_unit\" />\n          <Column header=\"PO#\" sortable field=\"po_number\" />\n          <Column header=\"Customer\" sortable field=\"customer\" />\n          <Column header=\"Pln St Dt\" sortable field=\"planned_start_dt\" />\n          <Column header=\"Pln End Dt\" sortable field=\"planned_end_dt\" />\n          <Column header=\"Act St Dt\" sortable field=\"actual_start_dt\" />\n          <Column header=\"Act End Dt\" sortable field=\"actual_end_dt\" />\n          <Column header=\"Onsite\" sortable field=\"contractor_onsite\" />\n          <Column header=\"Offshore\" sortable field=\"contractor_offshore\" />\n          <Column header=\"Onsite\" sortable field=\"employee_onsite\" />\n          <Column header=\"Offshore\" sortable field=\"employee_offshore\" />\n          <Column header=\"Team Size\" sortable field=\"team_size\" />\n        </Row>\n      </ColumnGroup>\n    );\n  } else {\n    headerGroup = (\n      <ColumnGroup>\n        <Row>\n          <Column header=\"\" colSpan={12} />\n          <Column header=\"Contractor(FTE)\" colSpan={2} />\n          <Column header=\"Employee(FTE)\" colSpan={2} />\n          <Column header=\"\" colSpan={1} />\n        </Row>\n        <Row>\n          <Column header=\"Code\" sortable field=\"project_code\" />\n          <Column header=\"Project Name\" sortable field=\"project_name\" />\n          <Column header=\"Project Manager\" sortable field=\"lastYearProfit\" />\n          <Column header=\"Sales Executive\" sortable field=\"sales_executive\" />\n          <Column header=\"Project Stage\" sortable field=\"prj_stage\" />\n          <Column header=\"Primary BU\" sortable field=\"business_unit\" />\n          <Column header=\"PO#\" sortable field=\"po_number\" />\n          <Column header=\"Customer\" sortable field=\"customer\" />\n          <Column header=\"Pln St Dt\" sortable field=\"planned_start_dt\" />\n          <Column header=\"Pln End Dt\" sortable field=\"planned_end_dt\" />\n          <Column header=\"Act St Dt\" sortable field=\"actual_start_dt\" />\n          <Column header=\"Act End Dt\" sortable field=\"actual_end_dt\" />\n          <Column header=\"Onsite\" sortable field=\"contractor_onsite\" />\n          <Column header=\"Offshore\" sortable field=\"contractor_offshore\" />\n          <Column header=\"Onsite\" sortable field=\"employee_onsite\" />\n          <Column header=\"Offshore\" sortable field=\"employee_offshore\" />\n          {/* <Column header=\"Team Size\" sortable field=\"team_size\" /> */}\n        </Row>\n      </ColumnGroup>\n    );\n  }\n  return (\n    <div className=\"darkHeader\">\n      {Object.keys(headerData).length > 0 && (\n        <DataTable\n          stripedRows\n          paginatorTemplate=\"RowsPerPageDropdown FirstPageLink PrevPageLink CurrentPageReport NextPageLink LastPageLink\"\n          currentPageReportTemplate=\"{first} to {last} of {totalRecords}\"\n          rowsPerPageOptions={[10, 25, 50]}\n          headerColumnGroup={headerGroup}\n          value={bodyData}\n          paginator\n          showGridlines\n          rows={rows}\n          dataKey=\"id\"\n          filters={filters1}\n          responsiveLayout=\"scroll\"\n          header={header1}\n          emptyMessage=\"No Records found.\"\n          ref={(el) => {\n            dt.current = el;\n          }}\n          className=\"primeReactDataTable projectSearchTable\"\n        >\n          {/* <Column header={headerdatagroup} colSpan={col} /> */}\n\n          {dynamicColumns}\n        </DataTable>\n      )}\n    </div>\n  );\n}\n\nexport default ProjectSearchCellRender;\n","import React, { useEffect, useRef, useState } from \"react\";\nimport { FilterMatchMode, FilterOperator } from \"primereact/api\";\nimport { DataTable } from \"primereact/datatable\";\nimport { Column } from \"primereact/column\";\n\nimport { InputText } from \"primereact/inputtext\";\n\nimport { Link } from \"react-router-dom\";\nimport { Button } from \"primereact/button\";\nimport jsPDF from \"jspdf\";\n\nrequire(\"jspdf-autotable\");\n\nfunction ProjectSearchCellRendererNormalTable(props) {\n  const {\n    data,\n    rows,\n    col,\n    headerdatagroup,\n    linkColumns,\n    linkColumnsRoutes,\n    dynamicColumns,\n    headerData,\n    setHeaderData,\n    exportData,\n    customFilters,\n    customFilterValue,\n    setCustomFilterValue,\n    fileName,\n  } = props;\n  const [mainData, setMainData] = useState([]);\n  const [bodyData, setBodyData] = useState([]);\n  const [exportColumns, setExportColumns] = useState([]);\n  const dt = useRef(null);\n  useEffect(() => {\n    setMainData(JSON.parse(JSON.stringify(data)));\n  }, [data]);\n\n  console.log(data);\n\n  useEffect(() => {\n    if (mainData.length > 0) {\n      setHeaderData(mainData[0]);\n      setBodyData(mainData.splice(1));\n\n      let dtt = [];\n      let headDt = mainData[0];\n\n      Object.keys(headDt).forEach((d) => {\n        d != \"StatusId\" &&\n          // ? dtt.push({ title: \"cus\", dataKey: d })\n          dtt.push({ title: headDt[d], dataKey: d });\n      });\n\n      setExportColumns(dtt);\n    }\n  }, [mainData]);\n\n  const filtersData = {\n    contains: { value: null, matchMode: FilterMatchMode.CONTAINS },\n  };\n\n  const [filters1, setFilters1] = useState({\n    global: filtersData[\"contains\"],\n  });\n\n  useEffect(() => {\n    setFilters1({\n      global: filtersData[\"contains\"],\n    });\n  }, [headerData]);\n  const [globalFilterValue1, setGlobalFilterValue1] = useState(\"\");\n\n  const clearFilter1 = () => {\n    initFilters1();\n  };\n\n  const initFilters1 = () => {\n    setGlobalFilterValue1(\"\");\n  };\n\n  const onGlobalFilterChange1 = (e) => {\n    const value = e.target.value;\n    let _filters1 = { ...filters1 };\n    _filters1[\"global\"].value = value;\n    setFilters1(_filters1);\n    setGlobalFilterValue1(value);\n  };\n\n  const RenderCustomFilters = () => {\n    let cstFtlrs = customFilters;\n\n    switch (cstFtlrs[\"type\"]) {\n      case \"select\":\n        return (\n          <select\n            id={cstFtlrs[\"id\"]}\n            onChange={(e) => {\n              setCustomFilterValue(e.target.value);\n            }}\n          >\n            {Object.keys(cstFtlrs[\"data\"]).map((d) => {\n              return (\n                <option\n                  selected={customFilterValue == d ? true : false}\n                  value={d}\n                >\n                  {cstFtlrs[\"data\"][d]}\n                </option>\n              );\n            })}\n          </select>\n        );\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const exportCSV = (selectionOnly) => {\n    dt.current.exportCSV({ selectionOnly });\n  };\n\n  const saveAsExcelFile = (buffer, fileName) => {\n    import(\"file-saver\").then((module) => {\n      if (module && module.default) {\n        let EXCEL_TYPE =\n          \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8\";\n        let EXCEL_EXTENSION = \".xlsx\";\n        const data = new Blob([buffer], { type: EXCEL_TYPE });\n        module.default.saveAs(data, fileName + EXCEL_EXTENSION);\n      }\n    });\n  };\n\n  const exportExcel = () => {\n    import(\"xlsx\").then((xlsx) => {\n      const headers = Object.keys(data[0]);\n      const uniqueHeaders = [...new Set(headers)]; // Remove duplicates\n      const worksheetData = data.map((item) =>\n        uniqueHeaders.map((header) => item[header])\n      );\n      const worksheet = xlsx.utils.json_to_sheet(worksheetData, {\n        skipHeader: true,\n      });\n      const workbook = { Sheets: { data: worksheet }, SheetNames: [\"data\"] };\n      const excelBuffer = xlsx.write(workbook, {\n        bookType: \"xlsx\",\n        type: \"array\",\n      });\n      saveAsExcelFile(excelBuffer, fileName);\n    });\n  };\n\n  const exportPdf = () => {\n    print();\n    // import(\"jspdf\").then((jsPDF) => {\n    //   import(\"jspdf-autotable\").then(() => {\n    //     const doc = new jsPDF.default(0, 0);\n    //     console.log(\"in line 187-------\");\n    //     console.log(data);\n    //     console.log(exportColumns);\n    //     doc.autoTable(exportColumns, data);\n    //     doc.save(\"Data.pdf\");\n    //   });\n    // });\n  };\n\n  const print = () => {\n    const pdf = new jsPDF(\"p\", \"pt\", \"a4\");\n    const columns = exportColumns.map((d) => d.title);\n    let rows = [];\n\n    for (let i = 1; i < data.length; i++) {\n      /*for (var key in json[i]) {\n              var temp = [key, json[i][key]];\n              rows.push(temp);\n            }*/\n      // let temp = [\n      //   json[i].id,\n      //   json[i].start.split(\"T\")[0],\n      //   json[i].duration,\n      //   json[i].name,\n      //   json[i].project,\n      //   json[i].task,\n      //   json[i].comment,\n      // ];\n\n      let temp = exportColumns.map((d) => data[i][d[\"dataKey\"]]);\n\n      rows.push(temp);\n    }\n    const columnWidths = [90, 90, 90, 100, 130]; // Set the widths of the columns here\n    pdf.text(235, 40, \"Tabla de Prestamo\");\n    pdf.autoTable(columns, rows, {\n      startY: 65,\n      theme: \"grid\",\n      styles: {\n        font: \"times\",\n        halign: \"center\",\n        cellPadding: 3.5,\n        lineWidth: 0.5,\n        lineColor: [0, 0, 0],\n        textColor: [0, 0, 0],\n      },\n      headStyles: {\n        textColor: [0, 0, 0],\n        fontStyle: \"normal\",\n        lineWidth: 0.5,\n        lineColor: [0, 0, 0],\n        fillColor: [166, 204, 247],\n      },\n      alternateRowStyles: {\n        fillColor: [212, 212, 212],\n        textColor: [0, 0, 0],\n        lineWidth: 0.5,\n        lineColor: [0, 0, 0],\n      },\n      rowStyles: {\n        lineWidth: 0.5,\n        lineColor: [0, 0, 0],\n      },\n      tableLineColor: [0, 0, 0],\n      columnStyles: {\n        0: { cellWidth: columnWidths[0] },\n        1: { cellWidth: columnWidths[1] },\n        2: { cellWidth: columnWidths[2] },\n        3: { cellWidth: columnWidths[3] },\n        4: { cellWidth: columnWidths[4] },\n      },\n    });\n    console.log(pdf.output(\"datauristring\"));\n    pdf.save(\"pdf\");\n  };\n\n  const renderHeader1 = () => {\n    return (\n      <div className=\"flex  flex-row-reverse\">\n        {customFilters != undefined && (\n          <span>\n            <RenderCustomFilters />\n          </span>\n        )}\n\n        <div className=\"exportBtn ml-3\">\n          {exportData?.includes(\"CSV\") && (\n            <span\n              className=\"pi pi-file csv\"\n              onClick={() => exportCSV(false)}\n              title=\"CSV\"\n            />\n          )}\n          {exportData?.includes(\"XLS\") && (\n            <span\n              className=\"pi pi-file-excel excel\"\n              onClick={exportExcel}\n              title=\"Export to Excel\"\n            />\n          )}\n          {exportData?.includes(\"PDF\") && (\n            <span\n              className=\"pi pi-file-pdf pdf\"\n              onClick={exportPdf}\n              title=\"PDF\"\n            />\n          )}\n        </div>\n        <span className=\"p-input-icon-left tableGsearch\">\n          <i className=\"pi pi-search\" />\n          <InputText\n            defaultValue={globalFilterValue1}\n            onChange={onGlobalFilterChange1}\n            placeholder=\"Keyword Search\"\n          />\n        </span>\n      </div>\n    );\n  };\n\n  const header1 = renderHeader1();\n\n  return (\n    <div className=\"darkHeader\">\n      {Object.keys(headerData).length > 0 && (\n        <DataTable\n          stripedRows\n          paginatorTemplate=\"RowsPerPageDropdown FirstPageLink PrevPageLink CurrentPageReport NextPageLink LastPageLink\"\n          currentPageReportTemplate=\"{first} to {last} of {totalRecords}\"\n          rowsPerPageOptions={[10, 25, 50]}\n          value={bodyData}\n          paginator\n          showGridlines\n          rows={rows}\n          dataKey=\"id\"\n          filters={filters1}\n          responsiveLayout=\"scroll\"\n          header={header1}\n          emptyMessage=\"No Records found.\"\n          ref={(el) => {\n            dt.current = el;\n          }}\n          className=\"primeReactDataTable\"\n        >\n          {/* <Column header={headerdatagroup} colSpan={col} /> */}\n\n          {dynamicColumns}\n        </DataTable>\n      )}\n    </div>\n  );\n}\n\nexport default ProjectSearchCellRendererNormalTable;\n// C:\\PPM_Rewrite\\PPM_Rewrite_New\\PPMRewrite_React\\src\\views\\ProjectComponent\\ProjectSearchCellRendererNormalTable.js\n","import React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { environment } from \"../../environments/environment\";\n// import FlatPrimeReactTable from \"../PrimeReactTableComponent/FlatPrimeReactTable\";\n// import \"primeicons/primeicons.css\";\n// import \"primereact/resources/themes/lara-light-indigo/theme.css\";\n// import \"primereact/resources/primereact.css\";\n// import \"primeflex/primeflex.css\";\nimport CellRendererPrimeReactDataTable from \"../PrimeReactTableComponent/CellRendererPrimeReactDataTable\";\nimport ProjectSearchCellRenderer from \"./ProjectSearchCellRenderer\";\n\nimport { Column } from \"primereact/column\";\nimport { Link } from \"react-router-dom\";\nimport ProjectSearchCellRendererNormalTable from \"./ProjectSearchCellRendererNormalTable\";\n\nfunction ProjectSearchTable(props) {\n  const { formData, data, linkColumns, linkColumnsRoutes, flag } = props;\n  // const [data, setData] = useState([{}]);\n  const [headerData, setHeaderData] = useState([]);\n  const [exportData, setExportData] = useState([]);\n\n  useEffect(() => {\n    data[0] && setHeaderData(JSON.parse(JSON.stringify(data[0])));\n    let imp = [\"XLS\"];\n    setExportData(imp);\n  }, [data]);\n\n  const baseUrl = environment.baseUrl;\n\n  // const getData = () => {\n  //   axios({\n  //     method: \"post\",\n  //     url: `http://localhost:8090/ProjectMS/project/getProjectSearch`,\n  //     data: {\n  //       projectName: formData.projectName,\n  //       manager: formData.manager,\n  //       primaryBu: formData.primaryBu,\n  //       customer: formData.customer,\n  //       projectSource: formData.projectSource,\n  //       projectStage: formData.projectStage,\n  //       po: formData.po,\n  //       teamLocation: formData.teamLocation,\n  //       engagementType: formData.engagementType,\n  //       contractTeams: formData.contractTeams,\n  //       FTE: formData.FTE,\n  //       currentAllocation: formData.currentAllocation,\n  //       PCQAFacilitaor: formData.PCQAFacilitaor,\n  //     },\n  //     headers: { \"Content-Type\": \"application/json\" },\n  //   }).then((response) => {\n  //     const data = response.data;\n  //     let dataHeader = [\n  //       {\n  //         project_code: \"Code\",\n  //         project_name: \"Project Name\",\n  //         prj_manager: \"Project Manager\",\n  //         sales_executive: \"Sales Executive\",\n  //         prj_stage: \"Project Stage\",\n  //         business_unit: \"Primary_BU\",\n  //         po_number: \"PO#\",\n  //         customer: \"Customer\",\n  //         planned_start_dt: \"Pln St Dt\",\n  //         planned_end_dt: \"Pln End Dt\",\n  //         actual_start_dt: \"Act St Dt\",\n  //         actual_end_dt: \"Act End Dt\",\n  //         team_size: \"Team Size\",\n  //       },\n  //     ];\n  //     console.log(data, \"line no-------55\");\n  //     setData(dataHeader.concat(data));\n  //     //setData(data);\n  //     //setSearching(true);\n  //   });\n  //   // setTimeout(() => {\n\n  //   //     setLoaderState(false)\n\n  //   // }, 1000);\n  // };\n\n  // const getData = () => {\n  //     // axios.get(baseUrl + `/customersms/Customers/getEngagementRisks?cid=98214365`)\n  //     axios.get(``)\n  //         .then(res => {\n  //             const GetData = res.data;\n  //             let dataHeader = [{\n  //                 project_Code: \"Code\", project_name: \"Project Name\", Project_manager: \"Project Manager\", Sales_executive: \"Sales Executive\", project_stage: \"Project Stage\",\n  //                 Primary_bu: \"Primary_BU\", po: \"PO#\", customer: \"Customer\", pln_st_Dt: \"Pln St Dt\", pln_end_Dt: \"Pln End Dt\", act_st_Dt: \"Act St Dt\",\n  //                 act_end_Dt: \"Act End Dt\", team_size: \"Team Size\"\n  //             }]\n\n  //             setData(dataHeader.concat(GetData));\n  //             console.log(data)\n  //         })\n  //         .catch(error => {\n  //             console.log(\"Error :\" + error);\n  //         }\n  //         )\n  // }\n  for (let i = 1; i < data.length; i++) {\n    // data[i][\"Risk_occurred\"] = data[i][\"Risk_occurred\"] == true ? \"Yes\" : \"No\"\n    // data[i][\"risk_occured_date\"] = data[i][\"risk_occured_date\"] == null ? \"\" : moment(\"risk_occured_date\").format('DD-MMM-yyyy')\n    // data[i][\"mitigation_date\"] = data[i][\"mitigation_date\"] == null ? \"\" : moment(\"mitigation_date\").format('DD-MMM-yyyy')\n  }\n\n  useEffect(() => {\n    // getData();\n  }, []);\n  const projectManagerToolip = (data) => {\n    return (\n      <div className=\"ellipsis\" data-toggle=\"tooltip\" title={data.prj_manager}>\n        {data.prj_manager}\n      </div>\n    );\n  };\n  const salesExeToolip = (data) => {\n    return (\n      <div\n        className=\"ellipsis\"\n        data-toggle=\"tooltip\"\n        title={data.sales_executive}\n      >\n        {data.sales_executive}\n      </div>\n    );\n  };\n  const primartBuToolip = (data) => {\n    return (\n      <div\n        className=\"ellipsis\"\n        data-toggle=\"tooltip\"\n        title={data.business_unit}\n      >\n        {data.business_unit}\n      </div>\n    );\n  };\n  const customerToolip = (data) => {\n    return (\n      <div className=\"ellipsis\" data-toggle=\"tooltip\" title={data.customer}>\n        {data.customer}\n      </div>\n    );\n  };\n  const codeToolip = (data) => {\n    return (\n      <div className=\"ellipsis\" data-toggle=\"tooltip\" title={data.project_code}>\n        {data.project_code}\n      </div>\n    );\n  };\n  const plnStartAlign = (data) => {\n    return (\n      <div\n        align=\"center\"\n        style={{ width: \"87px\" }}\n        title={data.planned_start_dt}\n      >\n        {data.planned_start_dt}\n      </div>\n    );\n  };\n  const plnEndAlign = (data) => {\n    return (\n      <div align=\"center\" style={{ width: \"87px\" }} title={data.planned_end_dt}>\n        {data.planned_end_dt}\n      </div>\n    );\n  };\n  const actStartAlign = (data) => {\n    return (\n      <div align=\"left\" style={{ width: \"87px\" }} title={data.actual_start_dt}>\n        {data.actual_start_dt}\n      </div>\n    );\n  };\n  const actEndAlign = (data) => {\n    return (\n      <div align=\"left\" style={{ width: \"87px\" }} title={data.actual_end_dt}>\n        {data.actual_end_dt}\n      </div>\n    );\n  };\n  const teamSizeAlign = (data) => {\n    return (\n      <div align=\"right\" title={data.team_size}>\n        {data.team_size}\n      </div>\n    );\n  };\n\n  const contractOnsite = (data) => {\n    return (\n      <div align=\"right\" title={data.contractor_onsite}>\n        {data.contractor_onsite == null ? 0 : data.contractor_onsite}\n      </div>\n    );\n  };\n  const contractOffShore = (data) => {\n    return (\n      <div align=\"right\" title={data.contractor_offshore}>\n        {data.contractor_offshore == null ? 0 : data.contractor_offshore}\n      </div>\n    );\n  };\n\n  const employeeOnsite = (data) => {\n    return (\n      <div align=\"right\" title={data.employee_onsite}>\n        {data.employee_onsite == null ? 0 : data.employee_onsite}\n      </div>\n    );\n  };\n  const employeeOffShore = (data) => {\n    return (\n      <div align=\"right\" title={data.employee_offshore}>\n        {data.employee_offshore == null ? 0 : data.employee_offshore}\n      </div>\n    );\n  };\n  const LinkTemplate = (data) => {\n    let rou = linkColumnsRoutes[0]?.split(\":\");\n    return (\n      <>\n        <Link\n          target=\"_blank\"\n          to={rou[0] + \":\" + data[rou[1]]}\n          title={data.project_name}\n        >\n          {data[linkColumns[0]]}\n        </Link>\n      </>\n    );\n  };\n  const dynamicColumns = Object.keys(headerData)?.map((col, i) => {\n    return (\n      <Column\n        sortable\n        key={col}\n        body={\n          col == \"employee_offshore\"\n            ? employeeOffShore\n            : col == \"employee_onsite\"\n            ? employeeOnsite\n            : col == \"contractor_offshore\"\n            ? contractOffShore\n            : col == \"contractor_onsite\"\n            ? contractOnsite\n            : col == \"actual_end_dt\"\n            ? actEndAlign\n            : col == \"actual_start_dt\"\n            ? actStartAlign\n            : col == \"planned_end_dt\"\n            ? plnEndAlign\n            : col == \"planned_start_dt\"\n            ? plnStartAlign\n            : col == \"project_code\"\n            ? codeToolip\n            : col == \"customer\"\n            ? customerToolip\n            : col == \"business_unit\"\n            ? primartBuToolip\n            : col == \"sales_executive\"\n            ? salesExeToolip\n            : col == \"team_size\"\n            ? teamSizeAlign\n            : col == \"prj_manager\"\n            ? projectManagerToolip\n            : col == \"project_name\" && LinkTemplate\n        }\n        field={col}\n        header={headerData[col]}\n      />\n    );\n  });\n\n  // return (\n  //   <div>\n\n  //     {/* <CellRendererPrimeReactDataTable\n  //       data={data}\n  //       dynamicColumns={dynamicColumns}\n  //       headerData={headerData}\n  //       setHeaderData={setHeaderData}\n  //       exportData={exportData}\n  //       rows={10}\n  //     /> */}\n\n  //   </div>\n  // );\n\n  return (\n    <div>\n      {flag === true ? (\n        <ProjectSearchCellRenderer\n          data={data}\n          dynamicColumns={dynamicColumns}\n          headerData={headerData}\n          setHeaderData={setHeaderData}\n          exportData={exportData}\n          rows={25}\n        />\n      ) : (\n        <ProjectSearchCellRendererNormalTable\n          data={data}\n          dynamicColumns={dynamicColumns}\n          headerData={headerData}\n          setHeaderData={setHeaderData}\n          exportData={exportData}\n          rows={25}\n          fileName=\"Project Search\"\n        />\n      )}\n    </div>\n  );\n}\nexport default ProjectSearchTable;\n","import React, { useEffect, useRef, useState } from \"react\";\nimport {\n  FaCaretDown,\n  FaChevronCircleDown,\n  FaChevronCircleUp,\n  FaSearch,\n} from \"react-icons/fa\";\nimport { CCollapse } from \"@coreui/react\";\nimport Loader from \"../Loader/Loader\";\n\nimport ProjectSearchTable from \"./ProjectSearchTable\";\nimport { MultiSelect } from \"react-multi-select-component\";\nimport axios from \"axios\";\nimport { environment } from \"../../environments/environment\";\nimport { ReactSearchAutocomplete } from \"react-search-autocomplete\";\nimport { SlExclamation } from \"react-icons/sl\";\nimport GlobalHelp from \"../PrimeReactTableComponent/GlobalHelp\";\nimport ScreenBreadcrumbs from \"../Common/ScreenBreadcrumbs\";\n\nfunction ProjectSearch() {\n  const loggedUserId = localStorage.getItem(\"resId\");\n  const [visible, setVisible] = useState(false);\n  const [cheveronIcon, setCheveronIcon] = useState(FaChevronCircleUp);\n  const [loader, setLoader] = useState(false);\n  const [searching, setSearching] = useState(false);\n  const [business, setBusiness] = useState([]);\n  const [customer, setCustomer] = useState([]);\n  const [manger, setManger] = useState([]);\n  const [contract, setContract] = useState([]);\n  const [SelectdContract, setSelectdContract] = useState([]);\n\n  const [facilitator, setFacilitator] = useState([]);\n  const [projectStage, setProjectStage] = useState([]);\n  const [enguagementType, setEnguagementType] = useState([]);\n  const [data, setData] = useState([{}]);\n  const [selectedBusiness, setSelectedBusiness] = useState([]);\n  const [linkColumns, setLinkColumns] = useState([]);\n  const [flag, setFlag] = useState(false);\n  const [linkColumnsRoutes, setLinkColumnsRoutes] = useState([]);\n  const baseUrl = environment.baseUrl;\n  const abortController = useRef(null);\n  const HelpPDFName = \"SearchProject.pdf\";\n  const Headername = \"Project Search Help\";\n\n  const initialValue = {\n    projectName: \"\",\n    manager: -1,\n    primaryBu: \" 170,211,123,82,168,207,212,18,213,49,149,208\",\n    customer: -1,\n    projectSource: null,\n    projectStage: 1,\n    po: null,\n    teamLocation: null,\n    engagementType: null,\n    contractTeams: \"28,27,752,606,26,25,750\",\n    FTE: 0,\n    currentAllocation: 1,\n    PCQAFacilitaor: \"\",\n    teamsize: 1,\n  };\n  const [formData, setFormData] = useState(initialValue);\n  const autoValues = {\n    projectId: null,\n    resId: \"\",\n    isAll: 1,\n  };\n  const [value, setValue] = useState(autoValues);\n  const handleClick = () => {\n    const loaderTime = setTimeout(() => {\n      setLoader(true);\n    }, 2000);\n\n    abortController.current = new AbortController();\n\n    axios({\n      method: \"post\",\n      url: baseUrl + `/ProjectMS/project/getProjectSearch`,\n      signal: abortController.current.signal,\n\n      data: {\n        projectName: formData.projectName,\n        manager: formData.manager,\n        primaryBu: formData.primaryBu,\n        customer: formData.customer,\n        projectSource: formData.projectSource,\n        projectStage: formData.projectStage,\n        po: formData.po,\n        teamLocation: formData.teamLocation,\n        engagementType: formData.engagementType,\n        contractTeams: formData.contractTeams,\n        FTE: formData.FTE,\n        currentAllocation: formData.currentAllocation,\n        PCQAFacilitaor: formData.PCQAFacilitaor,\n      },\n      headers: { \"Content-Type\": \"application/json\" },\n    }).then((response) => {\n      const data = response.data;\n\n      data.sort((a, b) => {\n        const nameA = a.project_code.toUpperCase();\n        const nameB = b.project_code.toUpperCase();\n        if (nameA < nameB) {\n          return -1;\n        }\n        if (nameA > nameB) {\n          return 1;\n        }\n        return 0;\n      });\n\n      if (formData.teamsize == 1 && formData.FTE == 0) {\n        setFlag(false);\n\n        let dataHeader = [\n          {\n            project_code: \"Code\",\n            project_name: \"Project Name\",\n            prj_manager: \"Project Manager\",\n            sales_executive: \"Sales Executive\",\n            prj_stage: \"Project Stage\",\n            business_unit: \"Primary_BU\",\n            po_number: \"PO#\",\n            customer: \"Customer\",\n            planned_start_dt: \"Pln St Dt\",\n            planned_end_dt: \"Pln End Dt\",\n            actual_start_dt: \"Act St Dt\",\n            actual_end_dt: \"Act End Dt\",\n            team_size: \"Team Size\",\n          },\n        ];\n        setData(dataHeader.concat(data));\n        clearTimeout(loaderTime);\n        setVisible(!visible);\n        visible\n          ? setCheveronIcon(FaChevronCircleUp)\n          : setCheveronIcon(FaChevronCircleDown);\n        // }, 100);\n      } else if (formData.teamsize == 1 && formData.FTE == 1) {\n        setFlag(true);\n        let dataHeader1 = [\n          {\n            contractor_onsite: \"Contractor\",\n            employee_offshore: \"Employee\",\n          },\n        ];\n        let dataHeader = [\n          {\n            project_code: \"Code\",\n            project_name: \"Project Name\",\n            prj_manager: \"Project Manager\",\n            sales_executive: \"Sales Executive\",\n            prj_stage: \"Project Stage\",\n            business_unit: \"Primary_BU\",\n            po_number: \"PO#\",\n            customer: \"Customer\",\n            planned_start_dt: \"Pln St Dt\",\n            planned_end_dt: \"Pln End Dt\",\n            actual_start_dt: \"Act St Dt\",\n            actual_end_dt: \"Act End Dt\",\n            contractor_onsite: \"Onsite\",\n            contractor_offshore: \"Offshore\",\n            employee_onsite: \"Onsite\",\n            employee_offshore: \"Offshore\",\n            team_size: \"Team Size\",\n          },\n        ];\n        setData(dataHeader.concat(data));\n        clearTimeout(loaderTime);\n      } else if (formData.teamsize == 0 && formData.FTE == 1) {\n        setFlag(true);\n\n        let dataHeader = [\n          {\n            project_code: \"Code\",\n            project_name: \"Project Name\",\n            prj_manager: \"Project Manager\",\n            sales_executive: \"Sales Executive\",\n            prj_stage: \"Project Stage\",\n            business_unit: \"Primary_BU\",\n            po_number: \"PO#\",\n            customer: \"Customer\",\n            planned_start_dt: \"Pln St Dt\",\n            planned_end_dt: \"Pln End Dt\",\n            actual_start_dt: \"Act St Dt\",\n            actual_end_dt: \"Act End Dt\",\n            contractor_onsite: \"Onsite\",\n            contractor_offshore: \"Offshore\",\n            employee_onsite: \"Onsite\",\n            employee_offshore: \"Offshore\",\n          },\n        ];\n        setData(dataHeader.concat(data));\n        clearTimeout(loaderTime);\n      } else {\n        let dataHeader = [\n          {\n            project_code: \"Code\",\n            project_name: \"Project Name\",\n            prj_manager: \"Project Manager\",\n            sales_executive: \"Sales Executive\",\n            prj_stage: \"Project Stage\",\n            business_unit: \"Primary_BU\",\n            po_number: \"PO#\",\n            customer: \"Customer\",\n            planned_start_dt: \"Pln St Dt\",\n            planned_end_dt: \"Pln End Dt\",\n            actual_start_dt: \"Act St Dt\",\n            actual_end_dt: \"Act End Dt\",\n          },\n        ];\n        setData(dataHeader.concat(data));\n        clearTimeout(loaderTime);\n      }\n      let data1 = [\"project_name\"];\n      let linkRoutes = [\"/project/Overview/:project_id\"];\n      setLinkColumns(data1);\n      setLinkColumnsRoutes(linkRoutes);\n      setSearching(true);\n    });\n  };\n  const handleAbort = () => {\n    abortController.current && abortController.current.abort();\n    setLoader(false);\n  };\n  const getBusinessUnit = () => {\n    axios\n      .get(baseUrl + `/CostMS/cost/getDepartments`)\n      .then((Response) => {\n        let countries = [];\n        let data = Response.data;\n        data.push({ value: 999, label: \"Non-Revenue Units\" });\n        data.length > 0 &&\n          data.forEach((e) => {\n            let countryObj = {\n              label: e.label,\n              value: e.value,\n            };\n            countries.push(countryObj);\n          });\n\n        setBusiness(countries);\n        let defaultSelected = JSON.parse(JSON.stringify(countries)).filter(\n          (d) => d.label.includes(\"Non-Revenue Units\") == false\n        );\n\n        setSelectedBusiness(defaultSelected);\n      })\n      .catch((error) => console.log(error));\n  };\n  const getcontractTerms = () => {\n    axios\n      .get(baseUrl + `/ProjectMS/ProjectScopeChange/getContractTerms`)\n      .then((Response) => {\n        let countries = [];\n        let data = Response.data;\n        data.length > 0 &&\n          data.forEach((e) => {\n            let countryObj = {\n              label: e.lkup_name,\n              value: e.id,\n            };\n            countries.push(countryObj);\n          });\n        setContract(countries);\n\n        let defaultSelected = JSON.parse(JSON.stringify(countries)).filter(\n          (d) => d.label.includes(\"Non-billable\") == false\n        );\n\n        setSelectdContract(defaultSelected);\n      })\n      .catch((error) => console.log(error));\n  };\n  const customerFnc = (ids) => {\n    // const string = ids.join(\", \");\n    let string = \"\";\n\n    if (Array.isArray(ids)) {\n      string = ids.join(\", \");\n    }\n\n    axios({\n      method: \"get\",\n      url:\n        baseUrl +\n        `/ProjectMS/ProjectScopeChange/getAllCustomers?buid=${formData.primaryBu}`,\n    }).then((res) => {\n      let custom = res.data;\n      setCustomer(custom);\n    });\n  };\n\n  const fcqaFacilitatorFnc = () => {\n    axios({\n      method: \"get\",\n      url: baseUrl + `/ProjectMS/risks/getAssignedData`,\n    })\n      .then((res) => {\n        let manger = res.data;\n        setFacilitator(manger);\n      })\n      .catch((error) => {});\n  };\n  const projectStageFnc = () => {\n    axios({\n      method: \"get\",\n      url: baseUrl + `/ProjectMS/ProjectScopeChange/getProjectStage`,\n    })\n      .then((res) => {\n        let data = res.data;\n        setProjectStage(data);\n      })\n      .catch((error) => {});\n  };\n  const enguagementTypeFnc = () => {\n    axios({\n      method: \"get\",\n      url: baseUrl + `/ProjectMS/ProjectScopeChange/getEnguagementType`,\n    })\n      .then((res) => {\n        let data = res.data;\n        setEnguagementType(data);\n      })\n      .catch((error) => {});\n  };\n  const managerFnc = () => {\n    axios({\n      method: \"post\",\n      url: baseUrl + `/ProjectMS/project/getResListForAutoCmplt`,\n      data: {\n        projectId: null,\n        resId: \"\",\n        isAll: 1,\n      },\n      headers: { \"Content-Type\": \"application/json\" },\n    }).then((response) => {\n      const data = response.data;\n\n      setManger(data);\n    });\n  };\n  useEffect(() => {\n    getBusinessUnit();\n    customerFnc();\n    fcqaFacilitatorFnc();\n    projectStageFnc();\n    enguagementTypeFnc();\n    managerFnc();\n    getcontractTerms();\n  }, []);\n  useEffect(() => {\n    customerFnc();\n  }, [formData.primaryBu]);\n\n  const getName = (e) => {\n    const { value, id } = e.target;\n    setFormData({ ...formData, projectName: value });\n  };\n  const ArrowRenderer = ({ expanded }) => (\n    <>\n      {expanded ? (\n        <FaCaretDown className=\"chevronIcon\" />\n      ) : (\n        <FaCaretDown className=\"chevronIcon\" />\n      )}\n    </>\n  );\n\n  const handleClear = () => {\n    setFormData((prev) => ({ ...prev, manager: null }));\n  };\n  const handleClear2 = () => {\n    setFormData((prev) => ({ ...prev, PCQAFacilitaor: null }));\n  };\n  const [routes, setRoutes] = useState([]);\n  let textContent = \"Delivery\";\n  let currentScreenName = [\"Project Search\"];\n\n  useEffect(() => {\n    getMenus();\n  }, []);\n\n  const getMenus = () => {\n    axios({\n      method: \"GET\",\n      url: baseUrl + `/CommonMS/master/getMenus?loggedUserId=${loggedUserId}`,\n    }).then((resp) => {\n      let data = resp.data;\n\n      data.forEach((item) => {\n        if (item.display_name === textContent) {\n          setRoutes([item]);\n        }\n      });\n    });\n  };\n\n  const generateDropdownLabel = (selectedOptions, allOptions) => {\n    const selectedValues = selectedOptions.map((option) => option.value);\n\n    const allValues = allOptions.map((item) => item.value);\n\n    if (selectedValues.length === allValues.length) {\n      return \"<< ALL >>\";\n    } else {\n      return selectedOptions.map((option) => option.label).join(\", \");\n    }\n  };\n  return (\n    <div>\n      <div className=\"col-md-12\">\n        <div className=\"pageTitle\">\n          <div className=\"childOne\"></div>\n          <div className=\"childTwo\">\n            <h2>Project Search</h2>\n          </div>\n          <div className=\"childThree\"></div>\n        </div>\n        <ScreenBreadcrumbs\n          routes={routes}\n          currentScreenName={currentScreenName}\n        />\n      </div>\n      <div className=\"group mb-3 customCard\">\n        <div className=\"col-md-12 collapseHeader\">\n          <h2>Search Filters</h2>\n          <div className=\"helpBtn\">\n            <GlobalHelp pdfname={HelpPDFName} name={Headername} />\n          </div>\n          <div\n            onClick={() => {\n              setVisible(!visible);\n              visible\n                ? setCheveronIcon(FaChevronCircleUp)\n                : setCheveronIcon(FaChevronCircleDown);\n            }}\n          >\n            <span>{cheveronIcon}</span>\n          </div>\n        </div>\n        <CCollapse visible={!visible}>\n          <div className=\"group-content row\">\n            <div className=\" col-md-3 mb-2\">\n              <div className=\"form-group row\">\n                <label className=\"col-5\" htmlFor=\"projectname\">\n                  Project Name\n                </label>\n                <span className=\"col-1 p-0\">:</span>\n                <div className=\"col-6\">\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    id=\"projectName\"\n                    placeholder\n                    onChange={(e) => {\n                      getName(e);\n                    }}\n                  />\n                </div>\n              </div>\n            </div>\n            <div className=\" col-md-3 mb-2\">\n              <div className=\"form-group row\">\n                <label className=\"col-5\" htmlFor=\"manager\">\n                  Manager\n                </label>\n                <span className=\"col-1 p-0\">:</span>\n                <div className=\"col-6\">\n                  <div className=\"autoComplete-container\">\n                    <ReactSearchAutocomplete\n                      items={manger}\n                      type=\"Text\"\n                      name=\"manager\"\n                      id=\"manager\"\n                      className=\"err\"\n                      fuseOptions={{ keys: [\"id\", \"ResName\"] }}\n                      resultStringKeyName=\"ResName\"\n                      // placeholder=\"Type minimum 3 characters to get the list\"\n                      resource={manger}\n                      managerFnc={managerFnc}\n                      onSelect={(e) => {\n                        setFormData((prevProps) => ({\n                          ...prevProps,\n                          manager: e.id,\n                        }));\n                      }}\n                      showIcon={false}\n                      onClear={handleClear}\n                    />\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className=\" col-md-3 mb-2\">\n              <div className=\"form-group row\">\n                <label className=\"col-5\" htmlFor=\"primaryBu\">\n                  Business Unit\n                </label>\n                <span className=\"col-1 p-0\">:</span>\n                <div className=\"col-6\">\n                  <MultiSelect\n                    id=\"primaryBu\"\n                    options={business}\n                    hasSelectAll={true}\n                    value={selectedBusiness}\n                    ArrowRenderer={ArrowRenderer}\n                    disabled={false}\n                    overrideStrings={{\n                      selectAllFiltered: \"Select All\",\n                      selectSomeItems: \"<< All>>\",\n                    }}\n                    onChange={(e) => {\n                      setSelectedBusiness(e);\n                      let filteredCountry = [];\n                      e.forEach((d) => {\n                        filteredCountry.push(d.value);\n                      });\n                      setFormData((prevVal) => ({\n                        ...prevVal,\n                        [\"primaryBu\"]: filteredCountry.toString(),\n                      }));\n                      customerFnc(filteredCountry);\n                    }}\n                    valueRenderer={generateDropdownLabel}\n                  />\n                </div>\n              </div>\n            </div>\n            <div className=\" col-md-3 mb-2\">\n              <div className=\"form-group row\">\n                <label className=\"col-5\" htmlFor=\"customer\">\n                  Customer\n                </label>\n                <span className=\"col-1 p-0\">:</span>\n                <div className=\"col-6\">\n                  <select\n                    className=\"\"\n                    id=\"customer\"\n                    onChange={(e) => {\n                      const { value, id } = e.target;\n                      setFormData({ ...formData, [id]: value });\n                    }}\n                  >\n                    <option value=\"-1\"> &lt;&lt;ALL&gt;&gt;</option>\n                    {customer.map((Item) => (\n                      <option value={Item.customerId}> {Item.customers}</option>\n                    ))}\n                  </select>\n                </div>\n              </div>\n            </div>\n            <div className=\" col-md-3 mb-2\">\n              <div className=\"form-group row\">\n                <label className=\"col-5\" htmlFor=\"projectsource\">\n                  Project Source\n                </label>\n                <span className=\"col-1 p-0\">:</span>\n                <div className=\"col-6\">\n                  <select\n                    id=\"projectSource\"\n                    onChange={(e) => {\n                      const { value, id } = e.target;\n                      setFormData({ ...formData, [id]: value });\n                    }}\n                  >\n                    <option value=\"null\">&lt;&lt;ALL&gt;&gt;</option>\n                    <option value=\"PPM\">PPM</option>\n                    <option value=\"Projector\">Projector</option>\n                  </select>\n                </div>\n              </div>\n            </div>\n            <div className=\" col-md-3 mb-2\">\n              <div className=\"form-group row\">\n                <label className=\"col-5\" htmlFor=\"projectstage\">\n                  Project Stage\n                </label>\n                <span className=\"col-1 p-0\">:</span>\n                <div className=\"col-6\">\n                  <select\n                    id=\"projectStage\"\n                    onChange={(e) => {\n                      const { value, id } = e.target;\n                      const selectedValue = value === \"1\" ? null : value; // Check if \"-1\" is selected and set selectedValue accordingly\n                      setFormData({ ...formData, [id]: selectedValue });\n                    }}\n                  >\n                    <option value=\"1\"> &lt;&lt;ALL&gt;&gt;</option>\n                    {projectStage.map((Item) => (\n                      <option value={Item.id}> {Item.lkup_name}</option>\n                    ))}\n                  </select>\n                </div>\n              </div>\n            </div>\n            <div className=\" col-md-3 mb-2\">\n              <div className=\"form-group row\">\n                <label className=\"col-5\" htmlFor=\"po\">\n                  PO#\n                </label>\n                <span className=\"col-1 p-0\">:</span>\n                <div className=\"col-6\">\n                  <select\n                    id=\"po\"\n                    onChange={(e) => {\n                      const { value, id } = e.target;\n                      setFormData({ ...formData, [id]: value });\n                    }}\n                  >\n                    With PO Number\n                    <option value=\"null\">&lt;&lt;ALL&gt;&gt;</option>\n                    <option value=\"1\">With PO Number</option>\n                    <option value=\"0\">Without PO Number</option>\n                  </select>\n                </div>\n              </div>\n            </div>\n            <div className=\" col-md-3 mb-2\">\n              <div className=\"form-group row\">\n                <label className=\"col-5\" htmlFor=\"teamlocation\">\n                  Team Location\n                </label>\n                <span className=\"col-1 p-0\">:</span>\n                <div className=\"col-6\">\n                  <select\n                    id=\"teamLocation\"\n                    // onChange={(e) => {\n                    //   const { value, id } = e.target;\n                    //   setFormData({ ...formData, [id]: value });\n                    // }}\n                    onChange={(e) => {\n                      const { value, id } = e.target;\n                      const selectedValue = value === \"null\" ? null : value;\n                      setFormData({ ...formData, [id]: selectedValue });\n                    }}\n                  >\n                    <option value=\"null\">&lt;&lt;ALL&gt;&gt;</option>\n                    <option value=\"361\">Client Site</option>\n                    <option value=\"362\">Onsite</option>\n                    <option value=\"363\">Off Shore</option>\n                    <option value=\"364\">Blended Shore</option>\n                  </select>\n                </div>\n              </div>\n            </div>\n            <div className=\" col-md-3 mb-2\">\n              <div className=\"form-group row\">\n                <label className=\"col-5 \" htmlFor=\"engagementtype\">\n                  Engagement Type\n                </label>\n                <span className=\"col-1 p-0\">:</span>\n                <div className=\"col-6\">\n                  <select\n                    id=\"engagementType\"\n                    // onChange={(e) => {\n                    //   const { value, id } = e.target;\n                    //   setFormData({ ...formData, [id]: value });\n                    // }}\n                    onChange={(e) => {\n                      const { value, id } = e.target;\n                      const selectedValue = value === \"All\" ? null : value;\n                      setFormData({ ...formData, [id]: selectedValue });\n                    }}\n                  >\n                    <option value=\"All\"> &lt;&lt;ALL&gt;&gt;</option>\n                    {enguagementType.map((Item) => (\n                      <option value={Item.id}> {Item.lkup_name}</option>\n                    ))}\n                  </select>\n                </div>\n              </div>\n            </div>\n            <div className=\" col-md-3 mb-2\">\n              <div className=\"form-group row\">\n                <label className=\"col-5\" htmlFor=\"contractterms\">\n                  Contract Terms\n                </label>\n                <span className=\"col-1 p-0\">:</span>\n                <div className=\"col-6\">\n                  <MultiSelect\n                    id=\"contractTeams\"\n                    options={contract}\n                    hasSelectAll={true}\n                    ArrowRenderer={ArrowRenderer}\n                    value={SelectdContract}\n                    disabled={false}\n                    overrideStrings={{\n                      selectAllFiltered: \"Select All\",\n                      selectSomeItems: \"<< All>>\",\n                    }}\n                    onChange={(e) => {\n                      setSelectdContract(e);\n                      let filteredCountry = [];\n                      e.forEach((d) => {\n                        filteredCountry.push(d.value);\n                      });\n                      setFormData((prevVal) => ({\n                        ...prevVal,\n                        [\"contractTeams\"]: filteredCountry.toString(),\n                      }));\n                    }}\n                    valueRenderer={generateDropdownLabel}\n                  />\n                </div>\n              </div>\n            </div>\n            <div className=\" col-md-3 mb-2\">\n              <div className=\"form-group row\">\n                <label className=\"col-5\" htmlFor=\"fte\">\n                  FTE\n                </label>\n                <span className=\"col-1 p-0\">:</span>\n                <div className=\"col-6\">\n                  <select\n                    id=\"FTE\"\n                    onChange={(e) => {\n                      const { value, id } = e.target;\n                      setFormData({ ...formData, [id]: value });\n                    }}\n                  >\n                    <option value=\"0\" selected=\"selected\">\n                      No\n                    </option>\n                    <option value=\"1\">Yes</option>\n                  </select>\n                </div>\n              </div>\n            </div>\n            <div className=\" col-md-3 mb-2\">\n              <div className=\"form-group row\">\n                <label className=\"col-5\" htmlFor=\"teamsize\">\n                  Team Size\n                </label>\n                <span className=\"col-1 p-0\">:</span>\n                <div className=\"col-6\">\n                  <select\n                    id=\"teamsize\"\n                    onChange={(e) => {\n                      const { value, id } = e.target;\n                      setFormData({ ...formData, [id]: value });\n                    }}\n                  >\n                    <option value=\"0\">No</option>\n                    <option value=\"1\" selected=\"selected\">\n                      Yes\n                    </option>\n                  </select>\n                </div>\n              </div>\n            </div>\n            <div className=\" col-md-3 mb-2\">\n              <div className=\"form-group row\">\n                <label className=\"col-5 \" htmlFor=\"currentallocation\">\n                  Current Allocation\n                </label>\n                <span className=\"col-1 p-0\">:</span>\n                <div className=\"col-6\">\n                  <select\n                    id=\"currentAllocation\"\n                    onChange={(e) => {\n                      const { value, id } = e.target;\n                      const selectedValue = value === \"null\" ? -1 : value;\n                      setFormData({ ...formData, [id]: selectedValue });\n                    }}\n                  >\n                    <option value=\"null\">&lt;&lt;ALL&gt;&gt;</option>\n                    <option value=\"1\" selected=\"selected\">\n                      Active\n                    </option>\n                    <option value=\"2\">InActive</option>\n                    <option value=\"3\">No Allocation</option>\n                  </select>\n                </div>\n              </div>\n            </div>\n            <div className=\" col-md-3 mb-2\">\n              <div className=\"form-group row\">\n                <label className=\"col-5\" htmlFor=\"facilitator\">\n                  PCQA Facilitator\n                </label>\n                <span className=\"col-1 p-0\">:</span>\n                <div className=\"col-6\">\n                  <div className=\"autoComplete-container\">\n                    <ReactSearchAutocomplete\n                      items={facilitator}\n                      type=\"Text\"\n                      name=\"PCQAFacilitaor\"\n                      id=\"PCQAFacilitaor\"\n                      className=\"err\"\n                      fuseOptions={{ keys: [\"id\", \"name\"] }}\n                      resultStringKeyName=\"name\"\n                      // placeholder=\"Type minimum 3 characters to get the list\"\n                      resource={facilitator}\n                      fcqaFacilitatorFnc={fcqaFacilitatorFnc}\n                      onSelect={(e) => {\n                        setFormData((prevProps) => ({\n                          ...prevProps,\n                          PCQAFacilitaor: e.id,\n                        }));\n                      }}\n                      showIcon={false}\n                      onClear={handleClear2}\n                    />\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            <div className=\"col-md-12 col-sm-12 col-xs-12 my-2 btn-container center\">\n              <button\n                type=\"button\"\n                className=\"btn btn-primary\"\n                onClick={handleClick}\n              >\n                <FaSearch /> Search{\" \"}\n              </button>\n            </div>\n          </div>\n        </CCollapse>\n        {loader ? <Loader handleAbort={handleAbort} /> : \"\"}\n      </div>\n      <div className=\"col-md-12 my-1\">\n        <div\n          className=\"statusMsg\n                    warning\"\n        >\n          <SlExclamation />\n          Note: Values for projector projects are for Jan-17 to +6 months from\n          current month.\n        </div>\n      </div>\n      {searching ? (\n        <ProjectSearchTable\n          formData={formData}\n          data={data}\n          linkColumns={linkColumns}\n          linkColumnsRoutes={linkColumnsRoutes}\n          flag={flag}\n        />\n      ) : (\n        \" \"\n      )}\n    </div>\n  );\n}\n\nexport default ProjectSearch;\n","export default function (props) {\n  const { newMemberDropdown } = props;\n  return (\n    <div className=\"row engScroll\">\n      {newMemberDropdown.length === 0 ? (\n        <div className=\"col-md-12\">None Selected</div>\n      ) : (\n        // newMemberDropdown\n        // {newMemberDropdown}\n\n        <input type=\"checkbox\"></input>\n      )}\n    </div>\n  );\n}\n","import { useState, useEffect, forwardRef, useImperativeHandle } from \"react\";\n// import InDirectSE from \"./InDirectSE\";\nimport CustomerSelectedItems from \"./CustomerSelectedItems\";\n// import VirtualTeams from \"./VirtualTeams\";\n// import DirectSE from \"./DirectSE\";\nimport fte_active from \"../../assets/images/empstatusIcon/fte_active.png\";\nimport fte_inactive from \"../../assets/images/empstatusIcon/fte_inactive.png\";\nimport fte_notice from \"../../assets/images/empstatusIcon/fte_notice.png\";\nimport subk_active from \"../../assets/images/empstatusIcon/subk_active.png\";\nimport subk_inactive from \"../../assets/images/empstatusIcon/subk_inactive.png\";\nimport subk_notice from \"../../assets/images/empstatusIcon/subk_notice.png\";\nimport { environment } from \"../../environments/environment\";\nimport axios from \"axios\";\n// import \"./SelectedSE.scss\";\n\nconst SelectSE = forwardRef((props, ref) => {\n  const input = props.value;\n  const { newMemberDropdown } = props;\n  console.log(input);\n  const baseUrl = environment.baseUrl;\n  const [showInactive, setShowInactive] = useState(false);\n  const [selectedSE, setselectedSE] = useState([]);\n  const [selectedSEDisp, setselectedSEDisp] = useState([]);\n  const [allIndirectSelected, setallIndirectSelected] = useState(false);\n  const [indirectData, setIndirectdata] = useState([]);\n  const [isIndividual, setisIndividual] = useState(false);\n  const [search, setSearch] = useState(\"\");\n  console.log(props.value);\n\n  console.log(\"in line 29---\");\n  console.log(newMemberDropdown);\n  console.log(props.newMemberDropdown);\n\n  console.log(selectedSE);\n  console.log(newMemberDropdown);\n\n  const icons = {\n    fte0: (\n      <img\n        src={fte_inactive}\n        alt=\"(fte_inactive_icon)\"\n        style={{ height: \"12px\" }}\n        title=\"Ex-Employee\"\n      />\n    ),\n    fte1: (\n      <img\n        src={fte_active}\n        alt=\"(fte_active_icon)\"\n        style={{ height: \"12px\" }}\n        title=\"Active Employee\"\n      />\n    ),\n    fte2: (\n      <img\n        src={fte_notice}\n        alt=\"(fte_notice_icon)\"\n        style={{ height: \"12px\" }}\n        title=\"Employee in notice period\"\n      />\n    ),\n    subk0: (\n      <img\n        src={subk_inactive}\n        alt=\"(subk_inactive_icon)\"\n        style={{ height: \"12px\" }}\n        title=\"Ex-Contractor\"\n      />\n    ),\n    subk1: (\n      <img\n        src={subk_active}\n        alt=\"(subk_active_icon)\"\n        style={{ height: \"12px\" }}\n        title=\"Active Contractor\"\n      />\n    ),\n    subk2: (\n      <img\n        src={subk_notice}\n        alt=\"(subk_notice_icon)\"\n        style={{ height: \"12px\" }}\n        title=\"Contractor in notice period\"\n      />\n    ),\n  };\n\n  //---------------------------refMethod------------------------------------\n\n  useImperativeHandle(ref, () => ({\n    setGlobalState() {\n      localStorage.setItem(\"selectedSE\", JSON.stringify(selectedSE));\n      {\n        props.value == \"EngagementS\"\n          ? \"\"\n          : localStorage.setItem(\"isIndividual\", isIndividual);\n      }\n    },\n    resetTOlocalState() {\n      const localSE =\n        localStorage.getItem(\"selectedSE\") === null\n          ? []\n          : JSON.parse(localStorage.getItem(\"selectedSE\"));\n      setselectedSE(localSE);\n      {\n        props.value == \"EngagementS\"\n          ? \"\"\n          : setisIndividual(\n              localStorage.getItem(\"isIndividual\") === \"true\" ? true : false\n            );\n      }\n    },\n  }));\n\n  //---------------------------method------------------------------------------\n  const onSelectSE = (emp) => {\n    console.log(\"***********************\", emp);\n\n    setselectedSE((prevState) => {\n      return prevState.some((el) => el.id === emp.id)\n        ? prevState.filter((item) => {\n            return item.id !== emp.id;\n          })\n        : [...prevState, emp];\n    });\n  };\n\n  const employeeElement = (emp) => {\n    return (\n      <span\n        key={emp.id}\n        className=\"option col-md-3\"\n        style={{\n          whiteSpace: \"nowrap\",\n          overflow: \"hidden\",\n          textOverflow: \"ellipsis\",\n        }}\n      >\n        {props.value == \"EngagementS\" ? (\n          <>\n            <input\n              type=\"checkbox\"\n              id={emp.id}\n              name={emp.name}\n              onChange={(e) => onSelectSE(emp)}\n              checked={selectedSE.some((el) => el.id === emp.id)}\n              className=\"mr-2\"\n            ></input>\n            <span title={emp.Name}>{emp.Name}</span>\n          </>\n        ) : (\n          <>\n            {\" \"}\n            <input\n              type=\"checkbox\"\n              id={emp.id}\n              name={emp.salesPersonName}\n              onChange={(e) => onSelectSE(emp)}\n              checked={selectedSE.some((el) => el.id === emp.id)}\n            ></input>\n            &nbsp;\n            {icons[emp.type]}&nbsp;\n            <span title={emp.salesPersonName}>{emp.salesPersonName}</span>\n          </>\n        )}\n      </span>\n    );\n  };\n  console.log(\"------------------------------------------------------\");\n  console.log(selectedSE);\n\n  const selectAllIndirect = () => {\n    console.log(props.value);\n    !allIndirectSelected\n      ? setselectedSE((prevState) => {\n          const empId = prevState.map((item) => item.id);\n          const newArray =\n            props.value === \"EngagementS\"\n              ? indirectData.filter((item) => !empId.includes(item.id))\n              : indirectData\n                  .filter(\n                    (item) =>\n                      item.status !== (showInactive ? \"\" : \"empInactive\")\n                  )\n                  .filter((item) => !empId.includes(item.id));\n          return [...prevState, ...newArray];\n        })\n      : setselectedSE((prevState) => {\n          const empId = indirectData.map((item) => item.id);\n          const newArray = prevState.filter((item) => !empId.includes(item.id));\n          return newArray;\n        });\n    setallIndirectSelected((prevState) => !prevState);\n  };\n\n  const SelectAllCustomers = () => {\n    setselectedSE((prevState) => {\n      const empId = prevState.map((item) => item.id);\n      const newArray = indirectData.filter((item) => !empId.includes(item.id));\n      return [...prevState, ...newArray];\n    });\n    setallIndirectSelected(true);\n  };\n\n  // props.value==\"EngagementS\"? SelectAllCustomers():\"\"\n\n  const getIndirectData = () => {\n    {\n      props.value == \"EngagementS\"\n        ? axios\n            .get(baseUrl + `/ProjectMS/Engagement/customerdata`)\n            .then((resp) => {\n              const data = resp.data;\n              setIndirectdata(data);\n            })\n            .catch((resp) => {\n              console.log(resp);\n            })\n        : axios\n            .get(baseUrl + `/ProjectMS/Engagement/getCustomerName`)\n            .then((resp) => {\n              const data = resp.data;\n              setIndirectdata(data);\n            })\n            .catch((resp) => {\n              console.log(resp);\n            });\n    }\n  };\n\n  //--------------------------------useEffect------------------------------------------\n  useEffect(() => {\n    setselectedSEDisp(() => {\n      return props.value == \"EngagementS\"\n        ? newMemberDropdown\n            .filter((item) => {\n              return item.name;\n              //   .toLowerCase().includes(search);\n            })\n            .map((item) => {\n              return employeeElement(item);\n            })\n        : newMemberDropdown\n            .filter((item) => {\n              return item.salesPersonName;\n              //   \\.toLowerCase().includes(search);\n            })\n            .map((item) => {\n              return employeeElement(item);\n            });\n    });\n    props.selectedItems != undefined && props.setSelectedItems(selectedSE);\n  }, [selectedSE, search]);\n\n  {\n    props.value == \"EngagementS\"\n      ? \"\"\n      : useEffect(() => {\n          setselectedSE((prevState) => {\n            return prevState.filter((el) => el.status === \"empActive\");\n          });\n        }, [showInactive]);\n  }\n\n  useEffect(() => {\n    getIndirectData();\n\n    {\n    }\n  }, []);\n\n  useEffect(() => {\n    const localSE =\n      localStorage.getItem(\"selectedSE\") === null\n        ? []\n        : JSON.parse(localStorage.getItem(\"selectedSE\"));\n    props.value == \"EngagementS\"\n      ? SelectAllCustomers()\n      : setselectedSE(localSE);\n    props.value == \"EngagementS\"\n      ? \"\"\n      : setisIndividual(\n          localStorage.getItem(\"isIndividual\") === \"true\" ? true : false\n        );\n  }, [indirectData]);\n\n  return (\n    <div className=\"col-md-12\">\n      <div className=\"col-md-12\">\n        {/* <div className=\"col-md-3 nopadding\">\n                    <input type=\"text\" placeholder=\"type to Search\" onChange={(e) => setSearch(e.target.value.toLowerCase())} style={{ borderRadius: \"5px\" }}></input>\n                </div> */}\n        <div className=\"col-md-5 mb-2\">\n          <div className=\"form-group row\">\n            <label className=\"col-3\" htmlFor=\"engagementName\">\n              Search\n            </label>\n            <span className=\"col-1 \">:</span>\n            <div className=\"col-6\">\n              <input\n                type=\"text\"\n                placeholder=\"type to Search\"\n                onChange={(e) => setSearch(e.target.value.toLowerCase())}\n              />\n            </div>\n          </div>\n        </div>\n\n        {props.value == \"EngagementS\" ? (\n          \"\"\n        ) : (\n          <>\n            {\" \"}\n            <div className=\"col-md-3\">\n              <label>Show Inactive</label>&nbsp;\n              <input\n                type=\"checkbox\"\n                id=\"showInactive\"\n                name=\"showInactive\"\n                onChange={() => {\n                  setShowInactive((prevState) => {\n                    return !prevState;\n                  });\n                }}\n                checked={showInactive}\n              ></input>\n              &nbsp;\n            </div>\n            <div className=\"col-md-3\">\n              <label>Select Individual</label>&nbsp;\n              <input\n                type=\"checkbox\"\n                id=\"SelectIndividual\"\n                name=\"SelectIndividual\"\n                onChange={() => setisIndividual((prevState) => !prevState)}\n                checked={isIndividual}\n              ></input>\n              &nbsp;\n            </div>\n          </>\n        )}\n      </div>\n      {/* <div className=\"col-md-12 clearfix\" style={{ height: '10px' }}></div> */}\n      <div className=\"col-md-4 form-check\">\n        <input\n          type=\"checkbox\"\n          id=\"SelectedItems\"\n          name=\"SelectedItems\"\n          className=\"form-check-input\"\n          onChange={() => {\n            setselectedSE([]);\n          }}\n          checked={selectedSE.length > 0}\n        ></input>\n        <label className=\"form-check-label\">\n          Selected Items <span className=\"col-1 \">:</span>\n        </label>\n      </div>\n      <>\n        <CustomerSelectedItems\n          selectedSEDisp={selectedSEDisp}\n          newMemberDropdown={newMemberDropdown}\n        />\n      </>\n      <div className=\"col-md-12 clearfixsss\" style={{ height: \"10px\" }}></div>\n\n      <div className=\"col-md-12 nopadding\">\n        {props.value == \"EngagementS\" ? (\n          \"\"\n        ) : (\n          <>\n            {\" \"}\n            <div className=\"col-md-3 pr0\">\n              <div className=\"col-md-12 card customCard\">\n                {/* <DirectSE onSelectSE={onSelectSE} showInactive={showInactive} /> */}\n              </div>\n            </div>\n          </>\n        )}\n        <div className=\"col-md-12 customCard\">\n          <div className=\"col-md-6 form-check\">\n            <input\n              type=\"checkbox\"\n              className=\"form-check-input\"\n              onChange={selectAllIndirect}\n              checked={allIndirectSelected}\n            ></input>\n            <label className=\"form-check-label\">\n              {props.value == \"EngagementS\"\n                ? \"All Customers\"\n                : \"Select All Indirect Sales Executive\"}\n              <span className=\"col-1 \">:</span>\n            </label>\n          </div>\n          <>\n            {/* <InDirectSE\n              employeeElement={employeeElement}\n              selectedSE={selectedSE}\n              data={indirectData}\n              input={input}\n              showInactive={showInactive}\n              search={search}\n            /> */}\n          </>\n          <div className=\"col-md-12 clearfix\" style={{ height: \"20px\" }}></div>\n          {props.value == \"EngagementS\" ? (\n            \"\"\n          ) : (\n            <>\n              {\" \"}\n              <div className=\"col-md-12 card customCard\">\n                {/* <VirtualTeams\n                  employeeElement={employeeElement}\n                  setselectedSE={setselectedSE}\n                  showInactive={showInactive}\n                  search={search}\n                /> */}\n              </div>\n            </>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n});\n\nexport default SelectSE;\n","// import SelectSE from \"./SelectSE\";\nimport SelectCustomer from \"./SelectCutomer\";\nimport { useRef } from \"react\";\nimport { CModal } from \"@coreui/react\";\nimport { CModalBody } from \"@coreui/react\";\nimport { CModalFooter } from \"@coreui/react\";\nimport { CModalHeader } from \"@coreui/react\";\nimport { CModalTitle } from \"@coreui/react\";\nimport { CButton } from \"@coreui/react\";\nimport { useDispatch } from \"react-redux\";\nimport { undoSaveSelectSE } from \"../../reducers/SelectedSEReducer\";\n\nexport default function SelectSEDialogBox({\n  value,\n  visible,\n  setVisible,\n  setSelectedItems,\n  newMemberDropdown,\n  selectedItems,\n}) {\n  const vars = {\n    \"--cui-modal-color\": \"red\",\n  };\n\n  const selectSERef = useRef(null);\n  const dispatch = useDispatch();\n  return (\n    <>\n      <CModal\n        visible={visible}\n        onClose={() => setVisible(false)}\n        size=\"xl\"\n        // style={vars}\n      >\n        <CModalHeader>\n          <CModalTitle>\n            {value == \"EngagementS\" ? \"Select Customers\" : \"Select Executives\"}\n          </CModalTitle>\n        </CModalHeader>\n        <CModalBody>\n          <SelectCustomer\n            ref={selectSERef}\n            value={value}\n            setSelectedItems={setSelectedItems}\n            selectedItems={selectedItems}\n            newMemberDropdown={newMemberDropdown}\n          />\n        </CModalBody>\n        {value == \"EngagementS\" ? (\n          \"\"\n        ) : (\n          <CModalFooter>\n            <CButton\n              onClick={() => {\n                dispatch(undoSaveSelectSE(\"undo\"));\n                selectSERef.current.resetTOlocalState();\n              }}\n            >\n              Undo\n            </CButton>\n            <CButton\n              onClick={() => {\n                selectSERef.current.setGlobalState();\n                dispatch(undoSaveSelectSE(\"save\"));\n                setVisible(false);\n              }}\n            >\n              Save\n            </CButton>\n          </CModalFooter>\n        )}\n      </CModal>\n    </>\n  );\n}\n","import React from \"react\";\nimport { CModal, CModalBody, CModalHeader, CModalTitle } from \"@coreui/react\";\nimport CellRendererPrimeReactDataTable from \"../PrimeReactTableComponent/CellRendererPrimeReactDataTable\";\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { AiFillDelete } from \"react-icons/ai\";\nimport { Column } from \"primereact/column\";\nimport { environment } from \"../../environments/environment\";\nimport { BiCheck } from \"react-icons/bi\";\nimport { BiError } from \"react-icons/bi\";\nimport { AiFillWarning } from \"react-icons/ai\";\nimport { FaSave } from \"react-icons/fa\";\nimport moment from \"moment\";\nimport ProjectReviewLog from \"./ProjectReviewTable\";\nimport { IoWarningOutline } from \"react-icons/io5\";\nimport { AiOutlineCheck } from \"react-icons/ai\";\nimport { AiOutlineClose } from \"react-icons/ai\";\nfunction ReviewLogPopup({\n  openPopup,\n  setOpenPopup,\n  data,\n  updateId,\n  reviewerId,\n  countData,\n  statusId,\n  getCountData,\n  successfullymsg,\n  validationmessage,\n  tabledata,\n  settabledata,\n  updateStatus,\n}) {\n  const [rowId, setRowId] = useState([]);\n  // const [countData, setCountData] = useState([]);\n  const [deleteid, setDeleteId] = useState([]);\n  const [deletedId, setDeletedId] = useState([]);\n  const [headerData, setHeaderData] = useState([]);\n  const [selectedId, setSelectedId] = useState([]);\n  const baseUrl = environment.baseUrl;\n  const [sameDisplay, setSameDisplay] = useState(false);\n  const [dataRowId, setDataRowId] = useState([]);\n  const [deletePopup, setDeletePopup] = useState(false);\n  const [taskstatus, setTaskStatus] = useState([]);\n  const [select, setSelect] = useState([]);\n\n  const searchdata = {\n    id: \"\",\n    action_status: \"\",\n    updated_by_id: \"\",\n  };\n  const [editedData, setEditedData] = useState(searchdata);\n  const [status, setStatus] = useState(editedData);\n\n  // const [successfullymsg, setSuccessfullymsg] = useState(false);\n  const [deleteMsg, setDeleteMsg] = useState(false);\n\n  let rows = [10];\n\n  // const updateStatus = (count) => {\n  //   console.log(count);\n  //   setSuccessfullymsg(false);\n  // const updateStatus = () => {\n  //   console.log(tabledata);\n  //   if (\n  //     Object.keys(tabledata)?.length === 0 ||\n  //     tabledata === null ||\n  //     tabledata === undefined\n  //   ) {\n  //     setvalidationmessage(true);\n  //   } else {\n  //     setSuccessfullymsg(false);\n\n  //     // Filter the array to include only modified rows\n  //     const modifiedRows = countData.filter((item) => item?.modified);\n  //     console.log(modifiedRows);\n\n  //     let data = [];\n  //     Object?.keys(tabledata)?.forEach((ele) => {\n  //       const obj = {};\n  //       obj[\"id\"] = +ele;\n  //       obj[\"action_status\"] = +tabledata[ele];\n  //       obj[\"updated_by_id\"] = +loggedResourceId;\n  //       console.log(tabledata);\n  //       console.log(tabledata[ele]);\n  //       console.log(ele);\n  //       data.push(obj);\n  //       console.log(data);\n  //     });\n  //     axios\n  //       .post(baseUrl + `/ProjectMS/project/updateActionItemStatus`, data)\n  //       .then((res) => {\n  //         const data = res.data;\n\n  //         setTaskStatus(data.action_status);\n\n  //         setUpdateData(data);\n  //         setvalidationmessage(false);\n  //         setSuccessfullymsg(true);\n  //         setTimeout(() => {\n  //           setSuccessfullymsg(false);\n  //         }, 3000);\n  //         getCountData();\n  //         settabledata();\n  //       })\n  //       .catch((error) => {});\n  //   }\n  // };\n  // const updateStatus = () => {\n  //   console.log(tabledata);\n\n  //   // Check if tabledata is null or undefined\n  //   if (tabledata === null || tabledata === undefined) {\n  //     setvalidationmessage(true);\n  //   } else if (Object.keys(tabledata).length === 0) {\n  //     // Check if tabledata is an empty object\n  //     setvalidationmessage(true);\n  //   } else {\n  //     setSuccessfullymsg(false);\n\n  //     // Filter the array to include only modified rows\n  //     const modifiedRows = countData.filter((item) => item?.modified);\n  //     console.log(modifiedRows);\n\n  //     let data = [];\n  //     Object?.keys(tabledata)?.forEach((ele) => {\n  //       const obj = {};\n  //       obj[\"id\"] = +ele;\n  //       obj[\"action_status\"] = +tabledata[ele];\n  //       obj[\"updated_by_id\"] = +loggedResourceId;\n  //       console.log(tabledata);\n  //       console.log(tabledata[ele]);\n  //       console.log(ele);\n  //       data.push(obj);\n  //       console.log(data);\n  //     });\n\n  //     axios\n  //       .post(baseUrl + `/ProjectMS/project/updateActionItemStatus`, data)\n  //       .then((res) => {\n  //         const responseData = res.data; // Avoid naming conflict with 'data'\n\n  //         setTaskStatus(responseData.action_status);\n\n  //         // Update other states here...\n  //         setvalidationmessage(false);\n\n  //         setSuccessfullymsg(true);\n  //         setTimeout(() => {\n  //           setSuccessfullymsg(false);\n  //         }, 3000);\n\n  //         getCountData(updateId);\n  //         settabledata(null); // You may want to reset the tabledata after the update\n  //       })\n  //       .catch((error) => {\n  //         console.error(\"An error occurred:\", error);\n  //       });\n  //   }\n  // };\n\n  const issueDeleteHandler = () => {\n    setDeletePopup(true);\n  };\n  const statusname = [\n    {\n      value: 1058,\n      id: \"New\",\n      label: \"85\",\n    },\n    {\n      value: 1059,\n      id: \"In Progress\",\n      label: \"86\",\n    },\n    {\n      value: 1060,\n      label: \"87\",\n      id: \"Completed\",\n    },\n  ];\n  const deleteAction = () => {\n    setDeleteMsg(false);\n    axios\n      .delete(baseUrl + `/ProjectMS/project/deleteStatusItem?id=${deletedId}`)\n      .then((res) => {\n        const del = res.data;\n        setDeleteId(del);\n        // getCountData();\n        setDeleteMsg(true);\n        setTimeout(() => {\n          setDeleteMsg(false);\n        }, 3000);\n      });\n  };\n\n  // useEffect(() => {\n  //   getCountData();\n  // }, []);\n  const [r, setr] = useState([]);\n  useEffect(() => {\n    countData[0] && setHeaderData(JSON.parse(JSON.stringify(countData[0])));\n  }, [countData]);\n\n  const LinkTemplate = (data) => {\n    return (\n      <>\n        <div\n          style={{\n            color: \"orange\",\n            textAlign: \"center\",\n            tittle: \"delete\",\n            cursor: \"pointer\",\n          }}\n        >\n          {/* <button>Delete</button> */}\n          <AiFillDelete\n            data-toggle=\"tooltip\"\n            title=\"Delete\"\n            // onClick={deleteAction}\n            onClick={() => {\n              issueDeleteHandler();\n\n              setDeletedId(data.id);\n              // getCountData();\n            }}\n          />\n        </div>\n      </>\n    );\n  };\n\n  const onchange = (e, data) => {\n    const { id, value } = e?.target;\n    // setDataRowId((prevData) => ({\n    //   ...prevData,\n    //   [data.id]: e?.target?.value,\n    // }));\n\n    // Mark the data as modified\n    setDataRowId((prevData) =>\n      prevData?.map((item) =>\n        item.id === data.id ? { ...item, modified: true } : item\n      )\n    );\n\n    settabledata((prev) => ({\n      ...prev,\n      [data.id]: e?.target?.value,\n    }));\n  };\n  const LinkTemplateDropdown = (data) => {\n    return (\n      <>\n        {data.action_status == \"1060\" ? (\n          <div>Completed</div>\n        ) : (\n          <select\n            id=\"action_status\"\n            // defaultValue={}\n            onChange={(e) => {\n              onchange(e, data);\n            }}\n            // onChange={(e) => {\n            //   onchange(e, data); // Call the onchange function with the event and data\n            // }}\n            defaultValue={data.action_status}\n          >\n            {/* {statusname.map((Item) => (\n          <option\n            value={Item.value}\n            selected={Item.value == editedData[0]?.action_status ? true : false}\n          >\n            {Item.id}\n          </option>\n          \n        ))} */}\n            <option\n              value=\"1058\"\n              selected={setStatus.action_status == \"1058\"}\n              // selected={1058 == editedData[0]?.action_status ? true : false}\n            >\n              New\n            </option>\n            <option\n              value=\"1059\"\n              selected={setStatus.action_status == \"1059\"}\n\n              // selected={status}\n            >\n              In Progress\n            </option>\n            <option\n              value=\"1060\"\n              selected={setStatus.action_status == \"1060\"}\n\n              // selected={1060 == editedData[2]?.action_status ? true : false}\n            >\n              Completed\n            </option>\n          </select>\n        )}\n      </>\n    );\n  };\n\n  const LinkDataProps = (data) => {\n    return (\n      <div title={reviewerId} className=\"ellipsis tooltip-ex\">\n        {reviewerId}\n      </div>\n    );\n  };\n  const RevComents = (data) => {\n    return (\n      <div\n        data-toggle=\"tooltip\"\n        title={data.reviewer_comments}\n        className=\"ellipsis tooltip-ex\"\n      >\n        {data.reviewer_comments}\n      </div>\n    );\n  };\n  const LinkMoment = (data) => {\n    return (\n      <div\n        style={{ textAlign: \"center\" }}\n        x\n        title={moment(data.date_created).format(\"DD-MMM-YYYY\")}\n      >\n        {moment(data.date_created).format(\"DD-MMM-YYYY\")}\n      </div>\n    );\n  };\n  const LinkMomentDue = (data) => {\n    return (\n      <div\n        style={{ textAlign: \"center\" }}\n        title={moment(data.due_date).format(\"DD-MMM-YYYY\")}\n      >\n        {moment(data.due_date).format(\"DD-MMM-YYYY\")}\n      </div>\n    );\n  };\n\n  const completedDate = (data) => {\n    return (\n      <div\n        style={{ textAlign: \"center\" }}\n        title={\n          data.completed_date == \"Invalid date\"\n            ? \"\"\n            : moment(data.completed_date).format(\"DD-MMM-YYYY\")\n        }\n      >\n        {data.completed_date == null\n          ? \"\"\n          : moment(data.completed_date).format(\"DD-MMM-YYYY\")}\n      </div>\n    );\n  };\n\n  const Action = (data) => {\n    return (\n      <div data-toggle=\"tooltip\" title={data.action}>\n        {data.action}\n      </div>\n    );\n  };\n\n  const SerialNo = (data) => {\n    return <div style={{ textAlign: \"center\" }}>{data.SNo}</div>;\n  };\n  const dynamicColumns = Object.keys(headerData)?.map((col, i) => {\n    return (\n      <Column\n        sortable\n        key={col}\n        body={\n          col == \"id\"\n            ? LinkTemplate\n            : col == \"action_status\"\n            ? LinkTemplateDropdown\n            : col == \"action_statuss\"\n            ? LinkDataProps\n            : col == \"date_created\"\n            ? LinkMoment\n            : col == \"due_date\"\n            ? LinkMomentDue\n            : col == \"completed_date\"\n            ? completedDate\n            : col == \"action\"\n            ? Action\n            : col == \"SNo\"\n            ? SerialNo\n            : col == \"reviewer_comments\" && RevComents\n        }\n        field={col}\n        header={headerData[col]}\n      />\n    );\n  });\n  function ReviewReport(props) {\n    const { deletePopup, setDeletePopup, deleteAction } = props;\n    return (\n      <div className=\"deletePopUpReviewLog\">\n        {/* <Draggable> */}\n        <CModal\n          visible={deletePopup}\n          size=\"sm\"\n          className=\"ui-dialog\"\n          onClose={() => setDeletePopup(false)}\n        >\n          <CModalHeader style={{ cursor: \"all-scroll\" }}>\n            <CModalTitle>\n              <span className=\"\">Delete Confirmation</span>\n            </CModalTitle>\n          </CModalHeader>\n          <CModalBody>\n            <span style={{ textAlign: \"center\" }}>\n              Are you sure you want to delete the Action Item ?\n            </span>\n            <div className=\"col-md-12 col-sm-12 col-xs-12 btn-container center my-3\">\n              <button\n                // style={{ border: \"1px solid black\" }}\n                type=\"delete\"\n                className=\"btn btn-primary\" // onClick={deleteAction}\n                onClick={() => {\n                  deleteAction();\n                  setDeletePopup(false);\n                }}\n              >\n                <AiOutlineCheck />\n                Yes{\" \"}\n              </button>\n              <button\n                // style={{ border: \"1px solid black\" }}\n                type=\"button\"\n                className=\"btn btn-primary\"\n                onClick={() => {\n                  setDeletePopup(false);\n                }}\n              >\n                <AiOutlineClose />\n                No{\" \"}\n              </button>\n            </div>\n          </CModalBody>\n        </CModal>\n        {/* </Draggable> */}\n      </div>\n    );\n  }\n\n  return (\n    <div>\n      <div>\n        {validationmessage ? (\n          <div className=\"statusMsg error\">\n            {\" \"}\n            <span>\n              {\" \"}\n              <IoWarningOutline /> Please Change Status Before Saving\n            </span>\n          </div>\n        ) : (\n          \"\"\n        )}\n        {successfullymsg ? (\n          <div className=\"statusMsg success\">\n            <span className=\"errMsg\">\n              <BiCheck />\n              &nbsp; Action status saved successfully\n            </span>\n          </div>\n        ) : (\n          \"\"\n        )}\n        {sameDisplay ? (\n          <div className=\"statusMsg error\">\n            <span className=\"errMsg\">\n              <AiFillWarning />\n              &nbsp; Action status saved successfully\n            </span>\n          </div>\n        ) : (\n          \"\"\n        )}\n\n        {deleteMsg ? (\n          <div className=\"statusMsg success\">\n            <span className=\"errMsg\">\n              <BiError />\n              &nbsp; Action status Deleted successfully\n            </span>\n          </div>\n        ) : (\n          \"\"\n        )}\n        <div>\n          <span\n            className=\"ft16 mt-3 \"\n            style={{ color: \"#297AB0\", fontWeight: \"bold\" }}\n          >\n            Action Items:\n          </span>\n          {/* <FlatPrimeReactTable rows={rows} data={countData} /> */}\n          <CellRendererPrimeReactDataTable\n            data={countData}\n            rows={rows}\n            dynamicColumns={dynamicColumns}\n            headerData={headerData}\n            setHeaderData={setHeaderData}\n          />\n        </div>\n        <div className=\"col-md-12 col-sm-12 col-xs-12 my-2 btn-container center\">\n          {\" \"}\n          <button\n            className=\"btn btn-primary\"\n            onClick={() => {\n              // {\n              //   status.action_status == \"\" ||\n              //   status.action_status == undefined ||\n              //   status.action_status == \"null\"\n              //     ? setSameDisplay(true)\n              //     : updateStatus();\n              // }\n              // setEditedData(data);\n              updateStatus();\n            }}\n          >\n            <FaSave /> Save\n          </button>\n        </div>\n      </div>\n      {deletePopup ? (\n        <ReviewReport\n          deletePopup={deletePopup}\n          setDeletePopup={setDeletePopup}\n          deleteAction={deleteAction}\n        />\n      ) : (\n        \"\"\n      )}\n    </div>\n  );\n}\nexport default ReviewLogPopup;\n","import React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { CModal } from \"@coreui/react\";\nimport { CModalBody } from \"@coreui/react\";\nimport { CModalHeader } from \"@coreui/react\";\nimport { CModalTitle } from \"@coreui/react\";\nimport { Popover, makeStyles } from \"@material-ui/core\";\nimport { Link } from \"react-router-dom\";\n// import ReviewLogPopup from \"../ProjectComponent/ReviewLogPopup\";\nimport ProjectReviewPopUp from \"./ProjectReviewPopUp\";\nimport { MdOutlinePlaylistAdd } from \"react-icons/md\";\nimport { environment } from \"../../environments/environment\";\nimport FlatPrimeReactTable from \"../PrimeReactTableComponent/FlatPrimeReactTable\";\nimport CellRendererPrimeReactDataTable from \"../PrimeReactTableComponent/CellRendererPrimeReactDataTable\";\nimport \"primeicons/primeicons.css\";\nimport \"primereact/resources/themes/lara-light-indigo/theme.css\";\nimport \"primereact/resources/primereact.css\";\nimport \"primeflex/primeflex.css\";\nimport { Dialog } from \"primereact/dialog\";\nimport { Column } from \"primereact/column\";\nimport Item from \"antd/lib/list/Item\";\nimport * as XLSX from \"xlsx\";\nimport Draggable from \"react-draggable\";\nimport { Typography } from \"antd\";\nimport { ImCross, ImCrying } from \"react-icons/im\";\n\nfunction ProjectReviewLog(props) {\n  const [openPopup, setOpenPopup] = useState(false);\n  const [docId, setDocId] = useState([]);\n  const [updateId, setUpdateId] = useState(\"\");\n  const [reviewerId, setReviewerId] = useState(\"\");\n  const [projectData, setProjectData] = useState([]);\n  const [statusId, setStatusId] = useState(\"\");\n  const baseUrl = environment.baseUrl;\n  const [headerdata, setHeaderdata] = useState([]);\n  const [deletePopup, setDeletePopup] = useState(false);\n  const { view, setView, projectId, projectName, selectedCustomer } = props;\n  const [data, setData] = useState([{}]);\n  const [countData, setCountData] = useState([{}]);\n  const [anchorEl, setAnchorEl] = useState(null);\n\n  const handleClose = () => {\n    setAnchorEl(false);\n  };\n  //\n  const useStyles = makeStyles({\n    dialog: {\n      position: \"absolute\",\n      top: \"250px\",\n      minHeight: \"18%\",\n    },\n    textField: {\n      border: \"1px solid rgb(159 13 13)\",\n    },\n  });\n  const classes = useStyles();\n  //   const classes = useStyles();\n\n  const rows = 10;\n  const [dataDoc, setDataDoc] = useState([]);\n  const getProjectOverviewData = () => {\n    axios({\n      method: \"get\",\n      url:\n        baseUrl +\n        `/ProjectMS/Audit/projectOverviewDetails?projectId=${projectId}`,\n    })\n      .then(function (response) {\n        let resp = response.data;\n        setProjectData(resp);\n      })\n      .catch(function (response) {});\n  };\n\n  const getData = () => {\n    axios\n      .get(baseUrl + `/ProjectMS/project/reviewHistory?projectId=${projectId}`)\n\n      .then((res) => {\n        const GetData = res.data;\n\n        let headerdata = [\n          {\n            sno: \"S.No\",\n            review_dt: \"Review Date\",\n            review_st: \"Status\",\n            rev_type: \"Type\",\n            reviewer: \"Reviewer\",\n            actItems: \"Action Items\",\n            docCount: \"Report\",\n            comments: \"Comments\",\n          },\n        ];\n        for (let i = 0; i < GetData.length; i++) {\n          GetData[i][\"docCount\"] =\n            GetData[i][\"docCount\"] == 0 ? \"\" : GetData[i][\"docCount\"];\n        }\n        setData(headerdata.concat(GetData));\n      })\n      .catch((error) => {});\n  };\n  const LinkTemplate = (data) => {\n    setReviewerId(data.reviewer);\n    setStatusId(data.review_st);\n    return (\n      <>\n        <span\n          // className=\" ellipsis tooltip-ex\"\n          // data-toggle=\"tooltip\"\n          title={data.actItems}\n          style={{ cursor: \"pointer\", textAlign: \"center\", color: \"#2E88C5\" }}\n          onClick={() => {\n            setOpenPopup(true);\n            getCountData(data?.prhId);\n            setUpdateId(data.prhId);\n            setReviewerId(data.reviewer);\n            setStatusId(data.review_st);\n          }}\n        >\n          <div style={{ textAlign: \"center\" }}>\n            {data.actItems !== 0 ? data.actItems : \"\"}\n          </div>\n        </span>\n      </>\n    );\n  };\n  const getCountData = (id) => {\n    if (id !== undefined) {\n      axios\n        .get(\n          baseUrl +\n            `/ProjectMS/project/projectreviewlogTableInfo?ProjectId=${id}`\n        )\n\n        .then((res) => {\n          const GetData = res.data;\n          let custom = [];\n          GetData.forEach((element) => {\n            let obj = {\n              value: element.id,\n            };\n            custom.push(obj);\n            // setRowId(custom);\n          });\n\n          for (let i = 0; i < GetData.length; i++) {\n            GetData[i][\"SNo\"] = i + 1;\n          }\n          let headerdata = [\n            {\n              SNo: \"S.No\",\n              action: \"Action\",\n              date_created: \"Created Date\",\n              due_date: \"Due Date\",\n              completed_date: \"Completed Date\",\n              reviewer_comments: \"Reviewer Comments\",\n              action_statuss: \"Created By\",\n              action_status: \"Status\",\n              id: \"Action\",\n            },\n          ];\n          // setSelect(GetData[0]?.action_status);\n          setCountData(headerdata.concat(GetData));\n          // setCount(GetData);\n          // setEditedData(GetData);\n          setCountData(\n            headerdata.concat(\n              GetData.map((item) => ({ ...item, modified: false }))\n            )\n          );\n        });\n    }\n  };\n  useEffect(() => {\n    getData();\n    getProjectOverviewData();\n    getCountData();\n  }, []);\n\n  const LinkTemplateAction = (data) => {\n    return (\n      <>\n        <span\n          className=\" ellipsis tooltip-ex\"\n          data-toggle=\"tooltip\"\n          title={data.docCount}\n          style={{ cursor: \"pointer\", textAlign: \"center\", color: \"#2E88C5\" }}\n          onClick={(e) => {\n            issueDeleteHandler();\n            setDocId(data.docId);\n            setAnchorEl(e.currentTarget);\n          }}\n        >\n          <div style={{ textAlign: \"center\" }}>{data.docCount}</div>\n        </span>\n      </>\n    );\n  };\n\n  const SerialNo = (data) => {\n    return <div style={{ textAlign: \"center\" }}>{data.sno}</div>;\n  };\n  const Comments = (data) => {\n    return (\n      <span\n        className=\" ellipsis tooltip-ex\"\n        data-toggle=\"tooltip\"\n        title={data.comments}\n      >\n        {data.comments}\n      </span>\n    );\n  };\n  const Reviewer = (data) => {\n    return (\n      <span\n        className=\" ellipsis tooltip-ex\"\n        data-toggle=\"tooltip\"\n        title={data.reviewer}\n      >\n        {data.reviewer}\n      </span>\n    );\n  };\n  const RevType = (data) => {\n    return (\n      <span\n        className=\" ellipsis tooltip-ex\"\n        data-toggle=\"tooltip\"\n        title={data.rev_type}\n      >\n        {data.rev_type}\n      </span>\n    );\n  };\n  const Status = (data) => {\n    return (\n      <span\n        className=\" ellipsis tooltip-ex\"\n        data-toggle=\"tooltip\"\n        title={data.review_st}\n      >\n        {data.review_st}\n      </span>\n    );\n  };\n  const RevDate = (data) => {\n    return (\n      <div\n        className=\" ellipsis tooltip-ex\"\n        data-toggle=\"tooltip\"\n        title={data.review_dt}\n        style={{ textAlign: \"center\" }}\n      >\n        {data.review_dt}\n      </div>\n    );\n  };\n  const loggedUserId = localStorage.getItem(\"resId\");\n  const initialValue1 = {};\n  const [tabledata, settabledata] = useState(initialValue1);\n  const [validationmessage, setvalidationmessage] = useState(false);\n  const [successfullymsg, setSuccessfullymsg] = useState(false);\n  const loggedResourceId = Number(loggedUserId) + 1;\n\n  const updateStatus = () => {\n    if (tabledata === null || tabledata === undefined) {\n      setvalidationmessage(true);\n    } else if (Object.keys(tabledata).length === 0) {\n      setvalidationmessage(true);\n    } else {\n      setSuccessfullymsg(false);\n\n      // Filter the array to include only modified rows\n      const modifiedRows = countData.filter((item) => item?.modified);\n\n      let data = [];\n      Object?.keys(tabledata)?.forEach((ele) => {\n        const obj = {};\n        obj[\"id\"] = +ele;\n        obj[\"action_status\"] = +tabledata[ele];\n        obj[\"updated_by_id\"] = +loggedResourceId;\n\n        data.push(obj);\n      });\n\n      axios\n        .post(baseUrl + `/ProjectMS/project/updateActionItemStatus`, data)\n        .then((res) => {\n          const responseData = res.data; // Avoid naming conflict with 'data'\n\n          // Update other states here...\n          setvalidationmessage(false);\n\n          setSuccessfullymsg(true);\n          setTimeout(() => {\n            setSuccessfullymsg(false);\n          }, 3000);\n\n          getCountData(updateId);\n          settabledata(null); // You may want to reset the tabledata after the update\n        })\n        .catch((error) => {\n          console.error(\"An error occurred:\", error);\n        });\n    }\n  };\n  // const LinkTemplate = (data) => {\n  //   console.log(data);\n  //   return (\n  //     <>\n  //       <span\n  //         className=\" ellipsis tooltip-ex\"\n  //         data-toggle=\"tooltip\"\n  //         title={data.actItems}\n  //         style={{ cursor: \"pointer\", textAlign: \"center\", color: \"#2E88C5\" }}\n  //         onClick={() => {\n  //           consoledData();\n  //           setUpdateId(data.prhId);\n  //           setReviewerId(data.reviewer);\n  //           setStatusId(data.review_st);\n  //         }}\n  //       >\n  //         <div style={{ textAlign: \"center\" }}>\n  //           {data.actItems != 0 ? data.actItems : \"\"}\n  //         </div>\n  //       </span>\n  //     </>\n  //   );\n  // };\n\n  const dynamicColumns = Object.keys(headerdata)?.map((col, i) => {\n    return (\n      <Column\n        sortable\n        key={col}\n        body={\n          col == \"actItems\"\n            ? LinkTemplate\n            : col == \"docCount\"\n            ? LinkTemplateAction\n            : col == \"sno\"\n            ? SerialNo\n            : col == \"comments\"\n            ? Comments\n            : col == \"reviewer\"\n            ? Reviewer\n            : col == \"rev_type\"\n            ? RevType\n            : col == \"review_dt\"\n            ? RevDate\n            : col == \"review_st\" && Status\n        }\n        field={col}\n        header={headerdata[col]}\n      />\n    );\n  });\n\n  const issueDeleteHandler = () => {\n    setDeletePopup(true);\n  };\n  function ReviewReport(props) {\n    const useStyles = makeStyles({\n      dialog: {\n        position: \"absolute\",\n        top: \"250px\",\n        minHeight: \"18%\",\n      },\n      textField: {\n        border: \"1px solid rgb(159 13 13)\",\n      },\n    });\n    const classes = useStyles();\n\n    // const classes = useStyles();\n\n    const { deletePopup, setDeletePopup, docId } = props;\n\n    const dataArray = docId?.split(\",\")?.map((item) => item?.split(\":\"));\n\n    dataArray?.map((e) => {});\n\n    const downloadEmployeeData1 = (id, filename) => {\n      const docUrl =\n        baseUrl + `/CommonMS/document/downloadFile?documentId=${id}`;\n\n      axios({\n        url: docUrl,\n        method: \"GET\",\n        responseType: \"blob\",\n      }).then((response) => {\n        const url = window.URL.createObjectURL(new Blob([response.data]));\n        const link = document.createElement(\"a\");\n        link.href = url;\n        link.setAttribute(\"download\", filename); //or any other extension\n        document.body.appendChild(link);\n        link.click();\n      });\n    };\n\n    const open = Boolean(anchorEl);\n    const id = open ? \"my-popover\" : undefined;\n    return (\n      <div>\n        <Popover\n          // className=\"ResourceOverviewPopover\"\n          disablePortal={true}\n          arrow={true}\n          open={Boolean(anchorEl)}\n          id={id}\n          maxWidth={\"lg\"}\n          // open={open}\n          anchorEl={anchorEl}\n          onClose={handleClose}\n          anchorOrigin={{\n            vertical: \"bottom\",\n            horizontal: \"left\",\n          }}\n          transformOrigin={{\n            vertical: \"bottom\",\n            horizontal: \"left\",\n          }}\n          className=\"primeReactPopover\"\n        >\n          <div>\n            <div className=\"popoverHeader\">\n              <div>\n                <b>Documents</b>\n              </div>\n\n              <span onClick={handleClose} cursor=\"pointer\">\n                ✕\n              </span>\n            </div>\n            <ul className=\"popoverLinks\">\n              {dataArray == null ? (\n                <li>\n                  <a\n                    data-toggle=\"tooltip\"\n                    // to={`/document/downloadFile?docume`}\n                    target=\"_blank\"\n                  >\n                    undefined\n                  </a>\n                </li>\n              ) : (\n                dataArray?.map((e) => (\n                  <li>\n                    <a\n                      className=\"linkSty\"\n                      onClick={() => downloadEmployeeData1(e[0], e[1])}\n                    >\n                      {e[1]}\n                    </a>\n                  </li>\n                ))\n              )}\n            </ul>\n          </div>\n        </Popover>\n      </div>\n    );\n  }\n  return (\n    <CModal\n      visible={view}\n      size=\"xl\"\n      //   className=\"reviewLogDeletePopUp\"\n      onClose={() => setView(false)}\n      backdrop={\"static\"}\n      maxWidth={\"md\"}\n      classes={{\n        paper: classes.dialog,\n      }}\n    >\n      <CModalHeader className=\"hgt22\" style={{ cursor: \"all-scroll\" }}>\n        <CModalTitle>\n          <span className=\"ft16\">\n            Review History:{selectedCustomer?.projectName}\n          </span>\n        </CModalTitle>\n      </CModalHeader>\n      <CModalBody>\n        {/* <FlatPrimeReactTable data={data} rows={rows} /> */}\n\n        <CellRendererPrimeReactDataTable\n          data={data}\n          rows={rows}\n          dynamicColumns={dynamicColumns}\n          headerData={headerdata}\n          setHeaderData={setHeaderdata}\n          // exportData={exportData}\n          fileName=\"Project Reviews\"\n        />\n        {anchorEl ? (\n          <ReviewReport\n            deletePopup={deletePopup}\n            setDeletePopup={setDeletePopup}\n            docId={docId}\n            handleClose={handleClose}\n          />\n        ) : (\n          \"\"\n        )}\n        {openPopup && (\n          <ProjectReviewPopUp\n            // openPopup={openPopup}\n            //  setOpenPopup={setOpenPopup}\n            updateStatus={updateStatus}\n            tabledata={tabledata}\n            settabledata={settabledata}\n            validationmessage={validationmessage}\n            successfullymsg={successfullymsg}\n            getCountData={getCountData}\n            headerdata={headerdata}\n            setHeaderdata={setHeaderdata}\n            data={data}\n            updateId={updateId}\n            reviewerId={reviewerId}\n            statusId={statusId}\n            countData={countData}\n          />\n        )}\n      </CModalBody>\n    </CModal>\n\n    // </div>\n  );\n}\nexport default ProjectReviewLog;\n","import React from \"react\";\nimport { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport { ReactSearchAutocomplete } from \"react-search-autocomplete\";\n\nfunction RiskAutoComplete(props) {\n  const {\n    riskDetails,\n    getData,\n    setFormData,\n    editedData,\n    formEditData,\n    onChangeHandler,\n    refArr,\n    name,\n    id,\n    value,\n  } = props;\n\n  const [item, setItem] = useState([]);\n\n  useEffect(() => {}, [item]);\n  useEffect(() => {}, [riskDetails]);\n\n  const loggedUserName = localStorage.getItem(\"resName\");\n  const loggedUserId = localStorage.getItem(\"resId\");\n\n  {\n    return (\n      <>\n        <div className=\"autoComplete-container\">\n          {value == \"UpdateBillingRate\" ? (\n            <ReactSearchAutocomplete\n              items={riskDetails}\n              type=\"Text\"\n              autocom\n              name={name}\n              inputSearchString={loggedUserName}\n              id={id}\n              className=\"err\"\n              riskDetails={riskDetails}\n              getData={getData}\n              // placeholder={loggedUserName}\n              onChange={(e) => {\n                onChangeHandler(e);\n              }}\n              // setSelectEmployee={setSelectEmployee}\n              onSelect={(e) => {\n                setFormData((prevProps) => ({ ...prevProps, [name]: e.id }));\n              }}\n              showIcon={false}\n            />\n          ) : (\n            <div\n              className=\"auto autocomplete\"\n              id=\"auto\"\n              ref={(ele) => {\n                if (refArr != undefined) {\n                  refArr.current[0] = ele;\n                }\n              }}\n            >\n              <ReactSearchAutocomplete\n                items={riskDetails}\n                type=\"Text\"\n                name={name}\n                autocomplete=\"off\"\n                inputSearchString={loggedUserName}\n                id={id}\n                className=\"err\"\n                riskDetails={riskDetails}\n                getData={getData}\n                onChange={(e) => {\n                  onChangeHandler(e);\n                }}\n                // setSelectEmployee={setSelectEmployee}\n                onSelect={(e) => {\n                  setFormData((prevProps) => ({ ...prevProps, [name]: e.id }));\n                }}\n                showIcon={false}\n              />\n            </div>\n          )}\n        </div>\n\n        <span>{item.name}</span>\n      </>\n    );\n  }\n}\nexport default RiskAutoComplete;\n","import React, { useEffect, useState, useRef } from \"react\";\nimport { DataTable } from \"primereact/datatable\";\nimport { Column } from \"primereact/column\";\nimport axios from \"axios\";\nimport { environment } from \"../../environments/environment\";\nimport moment from \"moment\";\nimport DatePicker from \"react-datepicker\";\nimport { TextField, makeStyles } from \"@material-ui/core\";\nimport { CModal } from \"@coreui/react\";\nimport { CModalBody } from \"@coreui/react\";\nimport { CModalHeader } from \"@coreui/react\";\nimport ReviewsAutocomplete from \"./ReviewsAutocomplete\";\nimport { CModalTitle } from \"@coreui/react\";\nimport { FaPlus, FaSave } from \"react-icons/fa\";\nimport { AiFillDelete, AiFillWarning } from \"react-icons/ai\";\nimport GlobalValidation from \"../ValidationComponent/GlobalValidation\";\nimport \"./ProjectReviews.scss\";\n\nconst now = new Date();\n\nfunction ReviewLogAdd(props) {\n  const useStyles = makeStyles({\n    dialog: {\n      position: \"absolute\",\n      top: \"250px\",\n      minHeight: \"18%\",\n    },\n    textField: {\n      border: \"1px solid rgb(159 13 13)\",\n    },\n  });\n  const classes = useStyles();\n  const value = \"UpdateBillingRate\";\n  const {\n    open,\n    setOpen,\n    projectId,\n\n    selectedCustomer,\n\n    revDate,\n    totaldata,\n  } = props;\n\n  const [products, setProducts] = useState([]);\n\n  const [formData, setFormData] = useState([{}]);\n  const [riskDetails, setRiskDetails] = useState([]);\n  const loggedUserId = localStorage.getItem(\"resId\");\n  const [startDate, setStartDate] = useState([]);\n  const baseUrl = environment.baseUrl;\n  const [action, setAction] = useState(\"\");\n  const [commnets, setCommnets] = useState(\"\");\n  const [data, setData] = useState();\n  const [selected, setSelected] = useState([]);\n  const [selectedFile1, setSelectedFile1] = useState([]);\n  const [filName, setFilName] = useState([]);\n  const [valid, setValid] = useState(false);\n  const [projecthistoryid, setprojecthistoryid] = useState(\"\");\n  const [validateproject, setValidateproject] = useState(false);\n  const [reviewhistory, setreviewhistory] = useState([]);\n\n  const loggedResourceId = Number(loggedUserId) + 1;\n  const ref = useRef([]);\n\n  const [rowData, setRowData] = useState([]); // State to store row data'\n\n  const getCountData = () => {\n    axios\n      .get(baseUrl + `/ProjectMS/project/reviewHistory?projectId=${projectId}`)\n\n      .then((res) => {\n        const GetData = res.data;\n\n        setData(GetData);\n      })\n      .catch((error) => {});\n  };\n\n  useEffect(() => {\n    getCountData();\n  }, []);\n\n  const SubmitData = () => {\n    let valid = GlobalValidation(ref);\n\n    if (valid) {\n      setValidateproject(true);\n      setTimeout(() => {\n        setValidateproject(false);\n      }, 3000);\n      return;\n    }\n    const dynamicActions = rowData.map((row) => ({\n      action: row.action,\n      date: moment(row.date).format(\"YYYY-MM-DD\"),\n      revComments: row.revComments,\n      // ... Other properties ...\n    }));\n    const payload = {\n      projectId: totaldata.id,\n      revType: totaldata.reviewTypeId,\n      statusId: +totaldata.revStatus,\n      curRevHisId: totaldata.curRevHisId,\n      curRevId: loggedResourceId,\n      revDate: moment(totaldata.scheduledDate).format(\"YYYY-MM-DD\"),\n      reviewerId: selectedCustomer?.reviewerId,\n      comments: commnets,\n      loggedUser: loggedUserId,\n      actions: dynamicActions,\n      reviewerId: loggedResourceId,\n    };\n\n    axios\n      .postForm(\n        baseUrl + `/ProjectMS/project/saveReviews`,\n        {\n          files: selectedFile1,\n          model: JSON.stringify(payload),\n        },\n        {\n          headers: {\n            \"Content-Type\": \"multipart/form-data\",\n          },\n        }\n      )\n      .then((res) => {\n        const data = res.data;\n\n        getCountData();\n        // getReviewHistoryData();\n        setOpen(false);\n        setTaskStatus(data.action_status);\n        setUpdateData(data);\n        setValid(false);\n        setSuccessfullymsg(true);\n\n        setTimeout(() => {\n          setSuccessfullymsg(false);\n        }, 2000);\n      })\n      .catch((error) => {\n        // Handle error\n      });\n  };\n\n  useEffect(() => {\n    if (products[0]?.event_name == \"\") {\n      document.getElementsByClassName(\"p-row-editor-init p-link\")[0].click();\n      setTimeout(() => {\n        document\n          .getElementsByClassName(\"p-row-editor-cancel p-link\")[0]\n          ?.addEventListener(\n            \"click\",\n            function (e) {\n              if (products[0]?.event_name == \"\") {\n                setProducts(products.slice(1, products.length));\n              }\n            },\n            true\n          );\n      }, 200);\n      setAction;\n    }\n  }, [products]);\n\n  const textEditorEventName = (products, rowIndex) => {\n    return (\n      <input\n        type=\"text\"\n        id={`action-${rowIndex}`}\n        className={`error${\n          validateproject && !products?.action ? \" error-block\" : \"\"\n        }`}\n        onChange={(e) => {\n          const updatedRowData = [...rowData];\n          updatedRowData[rowIndex.rowIndex] = {\n            ...updatedRowData[rowIndex.rowIndex],\n            action: e.target.value,\n          };\n          setRowData(updatedRowData);\n          setAction(updatedRowData);\n        }}\n      />\n    );\n  };\n  const textEditorComments = (products, rowIndex) => {\n    return (\n      <input\n        type=\"text\"\n        id={`reviewComments-${rowIndex}`}\n        onChange={(e) => {\n          const updatedRowData = [...rowData];\n          updatedRowData[rowIndex.rowIndex] = {\n            ...updatedRowData[rowIndex.rowIndex],\n            revComments: e.target.value,\n          };\n          setRowData(updatedRowData);\n        }}\n      />\n    );\n  };\n  const textEditorDate = (options, rowIndex) => {\n    const selectedDate = rowData[rowIndex.rowIndex]?.date;\n\n    return (\n      <div className=\"ReviewLogDatepicker\">\n        <DatePicker\n          showYearDropdown\n          showMonthDropdown\n          dropdownMode=\"select\"\n          className={`error${\n            validateproject && !selectedDate ? \" error-block\" : \"\"\n          }`}\n          minDate={new Date()}\n          dateFormat=\"dd-MMM-yyyy\"\n          selected={selectedDate ? new Date(selectedDate) : null}\n          onKeyDown={(e) => e.preventDefault()}\n          onChange={(date) => {\n            const updatedRowData = [...rowData];\n            updatedRowData[rowIndex.rowIndex] = {\n              ...updatedRowData[rowIndex.rowIndex],\n              date: date,\n            };\n            setRowData(updatedRowData);\n            setStartDate(updatedRowData);\n          }}\n          locale=\"en-GB\"\n          placeholderText=\"From Date\"\n        />\n      </div>\n    );\n  };\n\n  const getDataRisks = () => {\n    axios({\n      method: \"get\",\n      url: baseUrl + `/ProjectMS/risks/getAssignedData`,\n    }).then(function (response) {\n      var res = response.data;\n      setRiskDetails(res);\n    });\n  };\n\n  useEffect(() => {}, []);\n\n  useEffect(() => {\n    getDataRisks();\n  }, []);\n\n  const onChangeHandler = (e) => {\n    const { id, value } = e.target;\n    setFormData((prev) => ({ ...prev, [e.target.id]: id }));\n  };\n\n  const addHandler = (rowData) => {\n    if (!valid) {\n      setValid(true);\n    }\n    const data = {\n      action: \"\",\n      date: \"\",\n      Reviewercomments: \"\",\n      id: Date.now(), // Assign a unique identifier to the row\n    };\n\n    let dt = [];\n    dt.push(data);\n\n    if (\n      action == [] ||\n      action == undefined ||\n      (action == \"\" && startDate == \"\") ||\n      startDate == undefined ||\n      startDate == []\n    ) {\n      setValidateproject(true);\n      setProducts([...dt]);\n    } else {\n      setValidateproject(false);\n      setProducts((prevProducts) => [...prevProducts, dt]);\n    }\n  };\n\n  const onFileChangeHandler1 = (e) => {\n    setSelectedFile1(e.target.files[0]);\n    setFilName(e.target.files[0].name);\n  };\n\n  const deleteRow = (index) => {\n    const updatedProducts = [...products];\n    updatedProducts.splice(index, 1);\n    setProducts(updatedProducts);\n  };\n\n  const deleteicon = (data, rowIndex) => {\n    return (\n      <AiFillDelete\n        color=\"orange\"\n        align=\"center\"\n        title={\"Delete Action\"}\n        onClick={() => {\n          deleteRow(rowIndex.rowIndex);\n        }}\n      />\n    );\n  };\n\n  return (\n    <div>\n      <div>\n        <CModal\n          visible={open}\n          size=\"lg\"\n          //   className=\"reviewLogDeletePopUp\"\n          onClose={() => setOpen(false)}\n          backdrop={\"static\"}\n          maxWidth={\"lg\"}\n          classes={{\n            paper: classes.dialog,\n          }}\n        >\n          <CModalHeader className=\"\">\n            <CModalTitle>\n              <span className=\"\">\n                Design Review :{selectedCustomer?.projectName}\n              </span>\n            </CModalTitle>\n          </CModalHeader>\n          <CModalBody>\n            <div className=\"col-md-12\">\n              {validateproject ? (\n                <div className=\"statusMsg error p0\">\n                  <span>\n                    <AiFillWarning />\n                    &nbsp;\n                    {\"Please provide the valid values for highlighted fields\"}\n                  </span>\n                </div>\n              ) : (\n                \"\"\n              )}\n              <div className=\"group-content row\">\n                <div className=\" col-md-6 mb-2\">\n                  <div className=\"form-group row\">\n                    <label className=\"col-4\" htmlFor=\"projectmanager\">\n                      Reviewer Name&nbsp;\n                      <span className=\"required error-text\">*</span>\n                    </label>\n                    <span className=\"col-1 p-0\">:</span>\n                    <span className=\"col-7 \">\n                      <div\n                        className=\"autoComplete-container cancel error autocomplete reactautocomplete\"\n                        id=\"autocomplete reactautocomplete\"\n                        ref={(ele) => {\n                          ref.current[0] = ele;\n                        }}\n                      >\n                        <ReviewsAutocomplete\n                          name=\"assigned_to\"\n                          id=\"assigned_to\"\n                          value={value}\n                          riskDetails={riskDetails}\n                          getDataRisks={getDataRisks}\n                          setFormData={setFormData}\n                          onChangeHandler={onChangeHandler}\n                          inputSearchString={loggedUserId}\n                        />\n                      </div>\n                    </span>\n                  </div>\n                </div>\n                <div className=\" col-md-6 mb-2\">\n                  <div className=\"form-group row\">\n                    <label className=\"col-4\" htmlFor=\"projectmanager\">\n                      Report\n                    </label>\n                    <span className=\"col-1 p-0\">:</span>\n                    <span className=\"col-7 \">\n                      <input\n                        type=\"file\"\n                        name=\"docId\"\n                        // id=\"docId\"\n                        className=\"fileUpload form-control cancel\"\n                        id=\"file\"\n                        onChange={onFileChangeHandler1}\n                      />\n                    </span>\n                  </div>\n                </div>\n                <div className=\"row\">\n                  <div className=\"col-md-2\">\n                    <label>Comments </label>\n                  </div>\n                  <div className=\"col-1\" style={{ width: \"33px\" }}>\n                    :\n                  </div>\n                  <div className=\"col-md-7\">\n                    <textarea\n                      type=\"text\"\n                      placeholder=\"Type Comments here\"\n                      onChange={(e) => {\n                        setCommnets(e.target.value);\n                      }}\n                    ></textarea>\n                  </div>\n                </div>\n              </div>\n              <>\n                <span\n                  className=\"ft16 mt-3 \"\n                  style={{ color: \"#297AB0\", fontWeight: \"bold\" }}\n                >\n                  Action Items:\n                </span>\n\n                <div className=\"card p-fluid  mb-2\">\n                  <div className=\"customercard  darkHeader mt-2\">\n                    <DataTable\n                      className=\"primeReactDataTable invoicingSearchTable    reportsPrimeTable\"\n                      value={products}\n                      editMode=\"row\"\n                      rows={1500}\n                      selection={selected}\n                      onSelectionChange={(e) => setSelected(e.value)}\n                      dataKey=\"id\"\n                      showGridlines\n                      stripedRows\n                      scrollHeight=\"400px\"\n                      responsiveLayout=\"scroll\"\n                      emptyMessage=\"No Records found.\"\n                    >\n                      <Column\n                        field=\"action\"\n                        header=\"Action\"\n                        body={(rowData, rowIndex) =>\n                          textEditorEventName(rowData, rowIndex)\n                        }\n                        style={{ width: \"20%\" }}\n                      ></Column>\n                      <Column\n                        field=\"date\"\n                        header=\"Due Date\"\n                        body={(rowData, rowIndex) =>\n                          textEditorDate(rowData, rowIndex)\n                        }\n                        style={{ width: \"20%\" }}\n                      />\n\n                      <Column\n                        field=\"Reviewercomments\"\n                        header=\" Reviewer Comments\"\n                        body={(rowData, rowIndex) =>\n                          textEditorComments(rowData, rowIndex)\n                        }\n                        // editor={(options) => textEditorComments(options)}\n                        style={{ width: \"20%\" }}\n                      ></Column>\n                      <Column\n                        field=\"delete\"\n                        header=\"Action\"\n                        body={deleteicon}\n                        style={{ width: \"15%\", textAlign: \"center\" }}\n                      ></Column>\n                    </DataTable>\n                  </div>\n                </div>\n\n                <div className=\"form-group col-md-2 btn-container-events center my-3\">\n                  <button\n                    className=\"btn btn-primary\"\n                    // disabled={valid}\n                    title={\"Add new row\"}\n                    onClick={addHandler}\n                  >\n                    <FaPlus /> Add\n                  </button>\n\n                  <button\n                    id=\"submit\"\n                    className=\"btn btn-primary\"\n                    onClick={() => {\n                      SubmitData();\n                    }}\n                  >\n                    <FaSave /> Submit\n                  </button>\n                </div>\n              </>\n            </div>\n          </CModalBody>\n        </CModal>\n      </div>\n    </div>\n  );\n}\n\nexport default ReviewLogAdd;\n","import { PostAdd } from \"@mui/icons-material\";\nimport React, { useState, useEffect } from \"react\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport \"./ProjectReviews.scss\";\n\nconst ProjectReviewDatePicker = (props) => {\n  const {\n    rowData,\n    setpostData,\n\n    selectedCustomer,\n\n    reviewdatevalid,\n    setselecteddatevalidation,\n    changedRows,\n    setChangedRows,\n  } = props;\n\n  const [selectedDate, setSelectedDate] = useState(\n    rowData.scheduledDate ? new Date(rowData.scheduledDate) : null\n  );\n\n  const handleDateChange = (date, reviewId, projectId) => {\n    setSelectedDate(date);\n    setselecteddatevalidation(date);\n    setpostData((prevData) => ({\n      ...prevData,\n      [reviewId]: {\n        ...prevData[reviewId],\n        selectedDate: date,\n        reviewId: reviewId,\n        projectId: projectId,\n      },\n    }));\n    const currentRow = changedRows.get(projectId);\n    if (currentRow) {\n      const updateRow = {\n        ...currentRow,\n        scheduledDate: date,\n      };\n      const updateChangedRows = new Map(changedRows);\n\n      updateChangedRows.set(updateRow.id, updateRow);\n      setChangedRows(updateChangedRows);\n    }\n  };\n  const rowClassName =\n    selectedCustomer === rowData.projectId && reviewdatevalid\n      ? \"error-block\"\n      : \"\";\n  return (\n    <div>\n      <div className={`datepicker projectReviewDatepciker `}>\n        <DatePicker\n          name=\"scheduled_date\"\n          className={`error ${rowClassName}`}\n          id=\"scheduled_date\"\n          selected={selectedDate}\n          autoComplete=\"off\"\n          onChange={(e) => {\n            const revStatus = rowData?.revStatus;\n            const reviewId = rowData?.reviewId;\n            const date = e;\n            handleDateChange(date, reviewId, rowData?.id);\n          }}\n          minDate={new Date()}\n          dateFormat=\"dd-MMM-yyyy\"\n          onKeyDown={(e) => {\n            e.preventDefault();\n          }}\n          showYearDropdown\n          showMonthDropdown\n          dropdownMode=\"select\"\n          style={{ textAlign: \"center\" }}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default ProjectReviewDatePicker;\n","import React, { useState, useEffect, useRef } from \"react\";\nimport { FilterMatchMode, FilterOperator } from \"primereact/api\";\nimport { DataTable } from \"primereact/datatable\";\nimport { BiCheck } from \"react-icons/bi\";\nimport { Link } from \"react-router-dom\";\nimport CustomerDialogBox from \"./CustomerDialogBox\";\nimport { InputText } from \"primereact/inputtext\";\nimport { IoWarningOutline } from \"react-icons/io5\";\nimport GlobalCancel from \"../ValidationComponent/GlobalCancel\";\nimport GlobalValidation from \"../ValidationComponent/GlobalValidation\";\nimport { Column } from \"primereact/column\";\nimport ExcelJS from \"exceljs\";\n\nimport {\n  FaChevronCircleDown,\n  FaChevronCircleUp,\n  FaSearch,\n  FaPlus,\n  FaHistory,\n  FaSave,\n  FaCaretDown,\n} from \"react-icons/fa\";\n\nimport moment from \"moment/moment\";\nimport ProjectReviewTable from \"./ProjectReviewTable\";\nimport { CCollapse } from \"@coreui/react\";\nimport Loader from \"../Loader/Loader\";\nimport { ColumnGroup } from \"primereact/columngroup\";\nimport { Row } from \"primereact/row\";\nimport ReviewLogAdd from \"./ReviewLogAdd\";\nimport \"../../App.scss\";\nimport { ReactSearchAutocomplete } from \"react-search-autocomplete\";\nimport axios from \"axios\";\nimport { environment } from \"../../environments/environment\";\nimport { MultiSelect } from \"react-multi-select-component\";\nimport SelectCustDialogBox from \"../Customer/SelectCustDialogBox\";\nimport GlobalHelp from \"../PrimeReactTableComponent/GlobalHelp\";\nimport DatePicker from \"react-datepicker\";\nimport ProjectReviewDatePicker from \"./ProjectReviewDateComponent\";\n\nconst stateSelectItems = [\n  { label: \"Design Review\", value: \"1021\" },\n  { label: \"Code Review\", value: \"1022\" },\n  { label: \"Management Review\", value: \"1023\" },\n];\n\nfunction ProjectReviews() {\n  const HelpPDFName = \"ReviewProject.pdf\";\n  const Headername = \"Project Review Help\";\n  const headerGroup = (\n    <ColumnGroup>\n      <Row>\n        <Column header=\"Status\" rowSpan={2} />\n        <Column\n          header=\"Project Details\"\n          colSpan={4}\n          style={{ textAlign: \"center\" }}\n        />\n        <Column header=\"Last Review\" rowSpan={2} />\n        <Column header=\"Scheduled Date\" colSpan={3} />\n        <Column header=\"Action\" rowSpan={2} />\n      </Row>\n\n      <Row>\n        <Column header=\"Project Name\" field=\"projectName\" title=\"projectName\" />\n        <Column header=\"Project Start Date\" field=\"prjStartDate\" />\n        <Column header=\"Customer\" field=\"customer\" />\n        <Column header=\"Project Stage\" field=\"prjStatus\" />\n        <Column header=\"Review Type\" field=\"reviewType\" />\n        <Column header=\"Review Status\" field=\"revStatusDtl\" />\n        <Column header=\"Review Date\" field=\"scheduledDate\" />\n      </Row>\n    </ColumnGroup>\n  );\n  const reviewheaderGroup = (\n    <ColumnGroup>\n      <Row>\n        <Column\n          header=\"Project Details\"\n          colSpan={4}\n          style={{ textAlign: \"center\" }}\n        />\n        <Column header=\"Review Details\" colSpan={5} />\n        <Column header=\"Action\" rowSpan={2} />\n      </Row>\n\n      <Row>\n        <Column header=\"Project Name\" field=\"projectName\" title=\"projectName\" />\n        <Column header=\"Project Start Date\" field=\"prjStartDate\" />\n        <Column header=\"Customer\" field=\"customer\" />\n        <Column header=\"Project Stage\" field=\"prjStatus\" />\n        <Column header=\"Review Type\" field=\"reviewType\" />\n        {/* <Column header=\"Review Status\" field=\"revStatusDtl\" /> */}\n        <Column header=\"Scheduled Date\" field=\"scheduledDate\" />\n        <Column header=\"Completed Date\" field=\"lastReviewDate\" />\n        <Column header=\"Reviewer\" field=\"reviewer\" />\n        <Column header=\"Comments\" field=\"comments\" />\n      </Row>\n    </ColumnGroup>\n  );\n  let variance = 1;\n\n  const now = new Date();\n  const [updateMsg, setUpdateMsg] = useState(false);\n  const [visiblepopup, setVisiblepopup] = useState(false);\n  const [newMemberDropdown, setnewMemberDropdown] = useState([]);\n  const loggedUserId = localStorage.getItem(\"resId\");\n  const [cid, setCid] = useState(-1);\n  const [linkColumns, setLinkColumns] = useState([]);\n  const [linkColumnsRoutes, setLinkColumnsRoutes] = useState([]);\n  const [historyId, setHistoryId] = useState([]);\n  const [status, setStatus] = useState([]);\n  const [custVisible, setCustVisible] = useState(false);\n\n  const [selectedRowsData, setSelectedRowsData] = useState(\"\");\n  const [exportData, setExportData] = useState([]);\n  const [validationMessage, setValidationMessage] = useState(false);\n  const [validateproject, setValidateproject] = useState(false);\n  const [reviewdatevalid, setreviewdatevalid] = useState(\"\");\n  const [validproject, setValidProject] = useState(false);\n  const [state, setState] = useState(stateSelectItems);\n  const [revStatusvalue, setRevStatusvalue] = useState(\"\");\n\n  const initialValue = {\n    scheduled_date: \"\",\n    review_status_id: \"\",\n  };\n  const [formData, setFormData] = useState(initialValue);\n\n  const [selectedItems, setSelectedItems] = useState([{}]);\n\n  const Customer = selectedItems?.map((d) => d?.id).toString();\n\n  useEffect(() => {}, [Customer], [formData.serarchVals]);\n\n  const [open, setOpen] = useState(false);\n  const [projectName, setProjectname] = useState(-1);\n  const [projectStage, setProjectStage] = useState(1);\n  const [projectSource, setProjectSource] = useState(-1);\n  const [reviewStatus, setReviewStatus] = useState(-1);\n  const [view, setView] = useState(false);\n  const [visible, setVisible] = useState(false);\n  const [cheveronIcon, setCheveronIcon] = useState(FaChevronCircleUp);\n  const [fromdate, setFromDate] = useState(\"\");\n  const [toDate, setToDate] = useState(\"\");\n  const ref = useRef([]);\n  const abortController = useRef(null);\n\n  // const [scheduledDateValidation, setScheduleDateValidation] = useState(false);\n  const [summaryDatagetPayload, setsummaryDatagetPayload] = useState({\n    executives: -2,\n  });\n\n  const [loader, setLoader] = useState(false);\n  const [searching, setSearching] = useState(false);\n  const [reviewSatussearch, setReviewStatussearch] = useState(false);\n\n  const [tableData, setTableData] = useState([]);\n  const [history, setHistory] = useState(FaHistory);\n  const [plus, setPlus] = useState(FaPlus);\n  const [manager, setManager] = useState([]);\n  const [scheduledDateval, setscheduledDate] = useState();\n  const [projectId, setProjectId] = useState([]);\n  const [customer, setCustomer] = useState([]);\n  const baseUrl = environment.baseUrl;\n  const initialV = {\n    userId: \"\",\n  };\n  const [customerSelect, setCustomerSelect] = useState(initialV);\n  const [business, setBusiness] = useState([]);\n  const [selectedBusiness, setSelectedBusiness] = useState([]);\n  const [searchDepartment, setSearchDepartment] = useState(-1);\n  const [data, setData] = useState([]);\n  const [reviewType, setReviewType] = useState(1021);\n  const [customerId, setcustomerId] = useState(-1);\n  const [reviewTypevalue, setReviewTypevalue] = useState();\n  const [totaldata, settotalData] = useState();\n\n  const [headerData, setHeaderData] = useState([]);\n  const [revDate, setRevDate] = useState();\n\n  const [filters, setFilters] = useState({\n    global: { value: null, matchMode: FilterMatchMode.CONTAINS },\n    name: {\n      operator: FilterOperator.AND,\n      constraints: [{ value: null, matchMode: FilterMatchMode.STARTS_WITH }],\n    },\n    \"country.name\": {\n      operator: FilterOperator.AND,\n      constraints: [{ value: null, matchMode: FilterMatchMode.STARTS_WITH }],\n    },\n    representative: { value: null, matchMode: FilterMatchMode.IN },\n    status: {\n      operator: FilterOperator.OR,\n      constraints: [{ value: null, matchMode: FilterMatchMode.EQUALS }],\n    },\n  });\n\n  const [selectedCustomer, setSelectedCustomer] = useState(null);\n\n  useEffect(() => {\n    data[0] && setHeaderData(JSON.parse(JSON.stringify(data[0])));\n    let imp = [\"XLS\"];\n    setExportData(imp);\n  }, [data]);\n  const onChangeHandler = (e) => {\n    const inputValue = e.target.value;\n\n    const { id, value } = e.target;\n    const regex = /^[0-9.]*$/;\n\n    // Use a regular expression to validate the input as a number with optional decimal point\n    if (!regex.test(inputValue)) {\n      e.target.value = \"\";\n    }\n    setCustomerSelect((prev) => ({ ...prev, [e.target.id]: value }));\n  };\n  const getBusinessUnit = () => {\n    axios\n      .get(baseUrl + `/CostMS/cost/getDepartments`)\n      .then((Response) => {\n        let countries = [];\n        let data = Response.data;\n        data.length > 0 &&\n          data.forEach((e) => {\n            let countryObj = {\n              label: e.label,\n              value: e.value,\n            };\n            countries.push(countryObj);\n          });\n        setBusiness(countries);\n        setSelectedBusiness(countries);\n      })\n      .catch((error) => console.log(error));\n  };\n\n  const onGlobalFilterChange = (event) => {\n    const value = event.target.value;\n    let _filters = { ...filters };\n\n    _filters[\"global\"].value = value;\n\n    setFilters(_filters);\n  };\n\n  const selectedCust = JSON.parse(localStorage.getItem(\"selectedCust\"))\n    ?.map((d) => d.id)\n    ?.toString();\n\n  const getcustData = () => {\n    axios\n      .get(baseUrl + `/CommonMS/master/geActiveCustomerList`)\n      .then((resp) => {\n        let customers = [];\n\n        let data = resp.data;\n\n        data.length > 0 &&\n          data.forEach((e) => {\n            let countryObj = {\n              label: e.fullName,\n              value: e.id,\n            };\n\n            customers.push(countryObj);\n          });\n        setCustomer(customers);\n        // setSelectCustomer(customers);\n      })\n      .catch((error) => console.log(error));\n  };\n\n  const exportExcel = () => {\n    import(\"xlsx\").then((xlsx) => {\n      const headers = Object.keys(data[0]);\n\n      const uniqueHeaders = [...new Set(headers)]; // Remove duplicates\n\n      uniqueHeaders.shift(); // Remove the first element (1st column header)\n\n      const worksheetData = data.map((item) =>\n        uniqueHeaders.map((header) => {\n          const value = item[header];\n\n          if (header === \"scheduledDate\" && moment(value).isValid()) {\n            return moment(value).format(\"DD-MMM-YYYY\");\n          } else {\n            return value;\n          }\n        })\n      );\n\n      const dataRows = worksheetData.map((item) => Object.values(item));\n\n      const workbook = new ExcelJS.Workbook();\n\n      const worksheet = workbook.addWorksheet(\"ProjectSearchResultsData\");\n\n      for (let i = 0; i < dataRows.length; i++) {\n        const row = worksheet.addRow(dataRows[i]);\n      }\n\n      const boldRow = [1];\n\n      boldRow.forEach((index) => {\n        const row = worksheet.getRow(index);\n\n        row.font = { bold: true };\n      });\n\n      workbook.xlsx.writeBuffer().then((buffer) => {\n        const blob = new Blob([buffer], {\n          type: \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",\n        });\n\n        saveAs(blob, \"ProjectSearchResultsData\");\n      });\n    });\n  };\n\n  // has context menu\n\n  const renderHeader = () => {\n    const value = filters[\"global\"] ? filters[\"global\"].value : \"\";\n\n    return (\n      <div className=\"flex  flex-row-reverse\">\n        <div className=\"exportBtn ml-3\">\n          {exportData?.includes(\"XLS\") && (\n            <span\n              className=\"pi pi-file-excel excel\"\n              onClick={exportExcel}\n              title=\"Export to Excel\"\n            />\n          )}\n        </div>\n        <span className=\"p-input-icon-left\">\n          <i className=\"pi pi-search\" />\n          <InputText\n            type=\"search\"\n            style={{ float: \"right\" }}\n            value={value || \"\"}\n            onChange={(e) => onGlobalFilterChange(e)}\n            placeholder=\"Global Search\"\n          />\n        </span>\n      </div>\n    );\n  };\n\n  const header = renderHeader();\n\n  const getManagerdata = () => {\n    axios({\n      method: \"get\",\n      url: baseUrl + `/dashboardsms/allocationDashboard/getManagers`,\n    }).then(function (response) {\n      var resp = response.data;\n      setManager(resp);\n    });\n  };\n  const handleAbort = () => {\n    abortController.current && abortController.current.abort();\n    setLoader(false);\n  };\n  const handleClick = () => {\n    if (reviewStatus === \"1019\") {\n      if (fromdate === \"\" || toDate === \"\") {\n        setValidProject(true);\n      } else {\n        // Both fromdate and toDate are filled, validation passes\n\n        setValidProject(false);\n        setReviewStatussearch(false);\n        // setLoader(true);\n        setTimeout(() => {\n          setLoader(true);\n          // Use another setTimeout to fetch data after 2 seconds\n          setTimeout(() => {\n            getData(); // Fetch data after 2 seconds\n            setLoader(false); // Hide the loader when data is loaded\n          }, 1000); // 2-second delay for data fetching\n        }, 1000);\n        // getData();\n        setValidateproject(false);\n      }\n    } else if (fromdate !== \"\" || toDate !== \"\" || reviewStatus != \"1019\") {\n      setValidationMessage(false);\n      setSearching(false);\n\n      // setLoader(true);\n      setTimeout(() => {\n        setLoader(true);\n        // Use another setTimeout to fetch data after 2 seconds\n        setTimeout(() => {\n          getData(); // Fetch data after 2 seconds\n          setLoader(false); // Hide the loader when data is loaded\n        }, 1000); // 2-second delay for data fetching\n      }, 1000);\n      // getData();\n      setValidateproject(false);\n    } else {\n      setValidationMessage(false);\n      setSearching(false);\n      // setLoader(true);\n      setTimeout(() => {\n        setLoader(true);\n        // Use another setTimeout to fetch data after 2 seconds\n        setTimeout(() => {\n          getData(); // Fetch data after 2 seconds\n          setLoader(false); // Hide the loader when data is loaded\n        }, 1000); // 2-second delay for data fetching\n      }, 1000);\n      // getData();\n      setValidateproject(false);\n    }\n    setCustomerSelect(initialV);\n  };\n\n  const getData = () => {\n    // = async () => {\n    //   await\n\n    axios({\n      method: \"post\",\n      url: baseUrl + `/governancems/pcqa/getreviews`,\n      data: {\n        prjStr: cid,\n        buIds: searchDepartment,\n        custIds: customerId == \"select\" ? selectedCust : +customerId,\n        prjStage: +projectStage,\n        reviewType:\n          reviewStatus == \"1019\"\n            ? resultString\n            : reviewType == \"\"\n            ? 1021\n            : reviewType,\n        reviewStatus: reviewStatus,\n        prjSource: projectSource,\n        fromDt: fromdate == \"\" ? -1 : moment(fromdate).format(\"YYYY-MM-DD\"),\n        toDt: toDate == \"\" ? -1 : moment(toDate).format(\"YYYY-MM-DD\"),\n        prjManager: customerSelect.userId == \"\" ? -1 : customerSelect.userId,\n      },\n    }).then((response) => {\n      let GetData = response.data.data;\n\n      // setData(response.data.data)\n      let headerdata = [\n        {\n          sno: \"S.No\",\n          projectName: \"Project Name\",\n          prjStartDate: \"Project Start Date\",\n          customer: \"Customer\",\n          prjStatus: \"Project Stage\",\n          lastReviewDate: \"Last Review\",\n          reviewType: \"Review Type\",\n          revStatusDtl: \"Review Status\",\n          scheduledDate: \"Review Date\",\n          Risk_status: \"\",\n        },\n      ];\n\n      for (let i = 0; i < GetData.length; i++) {\n        GetData[i][\"prjStartDate\"] =\n          GetData[i][\"prjStartDate\"] == null\n            ? \"\"\n            : moment(GetData[i][\"prjStartDate\"]).format(\"DD-MMM-yyyy\");\n        GetData[i][\"lastReviewDate\"] =\n          GetData[i][\"lastReviewDate\"] == null\n            ? \" \"\n            : moment(GetData[i][\"lastReviewDate\"]).format(\"DD-MMM-yyyy\");\n      }\n\n      setData(headerdata.concat(GetData));\n      let data1 = [\"projectName\"];\n      let linkRoutes = [`/project/Overview/`];\n      setLinkColumns(data1);\n      setLinkColumnsRoutes(linkRoutes);\n      setTableData(GetData);\n      // setTimeout(() => {\n      setLoader(false);\n\n      // }, 5000);\n      setVisible(!visible);\n      visible\n        ? setCheveronIcon(FaChevronCircleUp)\n        : setCheveronIcon(FaChevronCircleDown);\n      setSearching(true);\n      //   setTableData(data);\n    });\n  };\n  useEffect(() => {\n    data[0] && setHeaderData(JSON.parse(JSON.stringify(data[0])));\n  }, [data]);\n\n  useEffect(() => {\n    getcustData();\n    getManagerdata();\n    getBusinessUnit();\n    getnewMemberDropdown();\n  }, []);\n\n  const getnewMemberDropdown = () => {\n    axios\n      .get(baseUrl + \"/ProjectMS/Engagement/getCustomerName\")\n      .then((resp) => {\n        const data = resp.data;\n        data.sort((a, b) => a.name > b.name);\n        const dropdownOptions = data.map((item) => {\n          return (\n            <option key={item.userId} value={item.resourcesId}>\n              {item.name}\n            </option>\n          );\n        });\n        setnewMemberDropdown(dropdownOptions);\n      })\n      .catch((err) => {});\n  };\n\n  const initialValue1 = {};\n  const [postData, setpostData] = useState(initialValue1);\n\n  const initialValue2 = {};\n  const [dateData, setDateData] = useState(initialValue2);\n  const [selectedvalidation, setselectedValidation] = useState(\"\");\n  const [selecteddatevalidation, setselecteddatevalidation] = useState(\"\");\n  const [isDateValid, setIsDateValid] = useState();\n  const [changedRows, setChangedRows] = useState(new Map());\n  const ArrowRenderer = ({ expanded }) => (\n    <>\n      {expanded ? (\n        <FaCaretDown className=\"chevronIcon\" />\n      ) : (\n        <FaCaretDown className=\"chevronIcon\" />\n      )}\n    </>\n  );\n  const selectedValues = state.map((selectedItem) =>\n    selectedItem.value.toString()\n  );\n\n  // Join the array elements into a single string with double quotes\n  const resultString = selectedValues.join(\",\");\n\n  const updateStatus = () => {\n    let data = [];\n\n    if (\n      (selectedRowsData === \"\" && selecteddatevalidation == \"\") ||\n      selecteddatevalidation == undefined ||\n      selecteddatevalidation == null\n    ) {\n      setValidationMessage(true);\n      setTimeout(() => {\n        setValidationMessage(false);\n      }, 3000);\n\n      window.scrollTo({\n        top: 0,\n        behavior: \"smooth\",\n      });\n    } else {\n      setValidationMessage(false);\n      Object?.keys(postData)?.forEach((ele) => {\n        if (postData[ele].projectId !== undefined) {\n          const matchingItem = tableData.find(\n            (item) => item.reviewId === postData[ele].reviewId\n          );\n          setselectedValidation(postData[ele].date);\n          const obj = {};\n          obj[\"id\"] = +ele;\n          obj[\"projectId\"] = postData[ele]?.projectId;\n          // obj[\"completed_date\"] = \"2023-12-01\";\n          obj[\"scheduledDate\"] =\n            postData[ele]?.selectedDate == undefined\n              ? matchingItem?.scheduledDate\n              : moment(postData[ele]?.selectedDate).format(\"YYYY-MM-DD\");\n          (obj[\"revType\"] = +reviewType),\n            (obj[\"statusId\"] =\n              postData[ele]?.revStatus == null ||\n              postData[ele]?.revStatus == undefined\n                ? matchingItem?.revStatus\n                : +postData[ele]?.revStatus),\n            (obj[\"loggedId\"] = +loggedUserId),\n            data.push(obj);\n        }\n      });\n\n      let isDateValidTemp = true;\n      changedRows.forEach((value, key) => {\n        const updatedScheduledDate = value.scheduledDate;\n        setreviewdatevalid(value.scheduledDate);\n\n        if (\n          updatedScheduledDate === null ||\n          updatedScheduledDate === \"\" ||\n          updatedScheduledDate === undefined\n        ) {\n          isDateValidTemp = false;\n        }\n      });\n\n      if (!isDateValidTemp) {\n        setValidateproject(true);\n        window.scrollTo({\n          top: 0,\n          behavior: \"smooth\",\n        });\n      } else {\n        axios({\n          method: \"post\",\n          url: baseUrl + `/ProjectMS/project/updateReviewProjects`,\n          data: data,\n        })\n          .then((res) => {\n            const responseData = res.data;\n\n            setSelectedRowsData(\"\");\n            setselecteddatevalidation(\"\");\n            setValidateproject(false);\n            setUpdateMsg(true);\n            setSearching(false);\n            setLoader(true);\n\n            // setpostData({});\n            window.scrollTo({\n              top: 0,\n              behavior: \"smooth\", // Use \"auto\" for instant scrolling\n            });\n            getData();\n            setpostData(initialValue1);\n            setTimeout(() => {\n              setUpdateMsg(false);\n              setSearching(true);\n              setLoader(false);\n            }, 2000);\n          })\n          .catch((error) => {\n            console.log(\"Response Data:\", error); // Log the response data\n          });\n      }\n      //Else default will be true\n    }\n  };\n\n  const LinkTemplate = (data) => {\n    let legendElement = null;\n\n    if (\n      data.scheduledDate < moment(new Date()).format(\"YYYY-MM-DD\") &&\n      (data.revStatus == \"1018\" || data.revStatus == \"1017\")\n    ) {\n      legendElement = (\n        <div className=\"legendContainer align center\">\n          <div className=\"legend red\">\n            <div className=\"legendCircle\" title=\"Risk\">\n              <div>\n                <div className=\"legendCircle\" align=\"center\"></div>\n                <div className=\"legendTxt\"></div>\n              </div>\n            </div>\n          </div>\n        </div>\n      );\n    } else if (\n      data.scheduledDate == moment(new Date()).format(\"YYYY-MM-DD\") &&\n      (data.revStatus == \"1018\" || data.revStatus == \"1017\")\n    ) {\n      legendElement = (\n        <div className=\"legendContainer align center\">\n          <div className=\"legend amber\">\n            <div className=\"legendCircle\" title=\"Risk\">\n              <div className=\"legendCircle\" align=\"center\"></div>\n              <div className=\"legendTxt\"></div>\n            </div>\n          </div>\n        </div>\n      );\n    } else {\n      legendElement = (\n        <div className=\"legendContainer align center\">\n          <div className=\"legend green\">\n            <div className=\"legendCircle\" title=\"Risk\"></div>\n            <div className=\"legendTxt\"></div>\n          </div>\n        </div>\n      );\n    }\n    return <div className=\"ellipsis\">{legendElement}</div>;\n  };\n  const Customerbody = (rowData) => {\n    return (\n      <div title={rowData.customer} className=\"ellipsis\">\n        {rowData.customer}\n      </div>\n    );\n  };\n  const ScheduledDate = (rowData) => {\n    return (\n      <div\n        style={{ textAlign: \"center\" }}\n        title={rowData.scheduledDate}\n        className=\"ellipsis\"\n      >\n        {moment(rowData.scheduledDate).format(\"DD-MMM-YYYY\")}\n      </div>\n    );\n  };\n  const CompletedDate = (rowData) => {\n    return (\n      <div\n        style={{ textAlign: \"center\" }}\n        title={rowData.lastReviewDate}\n        className=\"ellipsis\"\n      >\n        {moment(rowData.lastReviewDate).format(\"DD-MMM-YYYY\")}\n      </div>\n    );\n  };\n  const onchangeStatus = (statusValue, reviewId, projectId) => {\n    setSelectedRowsData(statusValue);\n    setpostData((prevData) => ({\n      ...prevData,\n      [reviewId]: {\n        revStatus: statusValue,\n        reviewId: reviewId,\n        projectId: projectId,\n      },\n    }));\n\n    const newMap = new Map(changedRows);\n    const updatedSelectedCustomer = {\n      ...selectedCustomer,\n      revStatus: statusValue,\n    };\n    newMap.set(updatedSelectedCustomer.id, updatedSelectedCustomer);\n    setChangedRows(newMap);\n  };\n  useEffect(() => {}, [postData]);\n\n  const selecttag = (data) => {\n    setStatus(data.revStatus);\n    setscheduledDate(data.scheduledDate);\n    setProjectname(data.projectName);\n    setHistoryId(data.reviewId);\n\n    return (\n      <>\n        <select\n          id=\"review_status_id\"\n          onChange={(e) => {\n            const review_status_id = e?.target?.value;\n            const reviewId = data?.reviewId;\n            onchangeStatus(review_status_id, reviewId, data?.id);\n          }}\n          defaultValue={data?.revStatus}\n        >\n          <option value=\"1016\">To be Scheduled</option>\n          <option value=\"1017\">Scheduled</option>\n          <option value=\"1018\">Delayed</option>\n          <option value=\"1019\">Completed</option>\n        </select>\n      </>\n    );\n  };\n\n  const selectedDate = (rowData) => {\n    return (\n      <div className=\"datepicker\">\n        <ProjectReviewDatePicker\n          setValidateproject={setValidateproject}\n          selectedvalidation={selectedvalidation}\n          validateproject={validateproject}\n          setselecteddatevalidation={setselecteddatevalidation}\n          selectedCustomer={selectedCustomer}\n          changedRows={changedRows}\n          setChangedRows={setChangedRows}\n          reviewdatevalid={reviewdatevalid}\n          // reviewStatusChangedMap={reviewStatusChangedMap}\n          setFormData={setFormData}\n          formData={formData}\n          postData={postData}\n          setpostData={setpostData}\n          rowData={rowData}\n          id=\"scheduledDate\"\n          // className=\"cancel\"\n          className={rowData.className}\n          // setDisable={setDisable}\n          // setIsModified={setIsModified}\n          setDateData={setDateData}\n          dateFormat=\"dd-MMM-yyyy\"\n          placeholderText=\"Select Month\"\n          showYearDropdown\n          showMonthDropdown\n        />\n      </div>\n    );\n  };\n  const redirectLink = (data) => {\n    let rou = linkColumnsRoutes[0]?.split(\":\");\n    return (\n      <>\n        <Link\n          target=\"_blank\"\n          to={rou[0] + \":\" + data.id}\n          data-toggle=\"tooltip\"\n          title={data.projectName}\n        >\n          {data[linkColumns[0]]}\n        </Link>\n      </>\n    );\n  };\n\n  const popUpIcons = (data) => {\n    return (\n      <div className=\"col-md-12\">\n        <div style={{ display: \"flex\", cursor: \"pointer\" }}>\n          <div style={{ minWidth: \"20px\" }}>\n            {data.revStatus == \"1018\" || data.revStatus == \"1017\" ? (\n              <div\n                onClick={() => {\n                  setPlus(FaPlus);\n                  settotalData(data);\n                  setProjectId(data.id);\n\n                  setOpen(true);\n                }}\n                title=\"Add Action Items\"\n              >\n                {plus}\n              </div>\n            ) : null}\n          </div>\n          <div\n            onClick={() => {\n              setHistory(FaHistory);\n              setProjectId(data.id);\n              setView(true);\n            }}\n            title=\"Show History\"\n          >\n            {history}\n          </div>\n        </div>\n      </div>\n    );\n  };\n\n  const generateDropdownLabel = (selectedOptions, allOptions) => {\n    const selectedValues = selectedOptions.map((option) => option.value);\n    const allValues = allOptions.map((item) => item.value);\n\n    if (selectedValues.length === allValues.length) {\n      return \"<< ALL >>\";\n    } else {\n      return selectedOptions.map((option) => option.label).join(\", \");\n    }\n  };\n  const handleChange1 = (e) => {\n    const { id, name, value } = e.target;\n    if (name == \"Customer\" && value === \"select\") {\n      setCustVisible(true);\n    }\n    setcustomerId(e.target.value);\n  };\n  return (\n    <div>\n      {updateMsg ? (\n        <div className=\"statusMsg success\">\n          <span className=\"errMsg\">\n            <BiCheck />\n            &nbsp; Data Saved Successfully\n          </span>\n        </div>\n      ) : (\n        \"\"\n      )}\n      {validproject ? (\n        <div className=\"statusMsg error\">\n          {\" \"}\n          <span>\n            {\" \"}\n            <IoWarningOutline /> Please select valid values for highlighted\n            fields\n          </span>\n        </div>\n      ) : (\n        \"\"\n      )}\n      {validationMessage ? (\n        <div className=\"statusMsg error\">\n          {\" \"}\n          <span>\n            {\" \"}\n            <IoWarningOutline /> No modifications to save\n          </span>\n        </div>\n      ) : (\n        \"\"\n      )}\n      {validateproject ? (\n        <div className=\"statusMsg error\">\n          {\" \"}\n          <span>\n            {\" \"}\n            <IoWarningOutline /> Please select Review Date\n          </span>\n        </div>\n      ) : (\n        \"\"\n      )}\n      <div className=\"col-md-12\">\n        <div className=\"pageTitle\">\n          <div className=\"childOne\"></div>\n          <div className=\"childTwo\">\n            <h2>Project Reviews</h2>\n          </div>\n          <div className=\"childThree\"></div>\n        </div>\n      </div>\n      <div className=\"form-group customCard\">\n        <div className=\"col-md-12 collapseHeader\">\n          <h2>Search Filters</h2>\n          <div className=\"helpBtn\">\n            <GlobalHelp pdfname={HelpPDFName} name={Headername} />\n          </div>\n          <div\n            onClick={() => {\n              setVisible(!visible);\n              visible\n                ? setCheveronIcon(FaChevronCircleUp)\n                : setCheveronIcon(FaChevronCircleDown);\n            }}\n          >\n            <span>{cheveronIcon}</span>\n          </div>\n        </div>\n        <CCollapse visible={!visible}>\n          <div className=\"group-content row\">\n            <div className=\" col-md-3 mb-2\">\n              <div className=\"form-group row\">\n                <label className=\"col-5\" htmlFor=\"projectname\">\n                  Project Name\n                </label>\n                <span className=\"col-1 p-0\">:</span>\n                <div className=\"col-6\">\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    id=\"prjStr\"\n                    placeholder\n                    onChange={(e) => {\n                      setCid(e.target.value);\n                    }}\n                  />\n                </div>\n              </div>\n            </div>\n            <div className=\" col-md-3 mb-2\">\n              <div className=\"form-group row\">\n                <label className=\"col-5\" htmlFor=\"projectmanager\">\n                  Project Manager\n                </label>\n                <span className=\"col-1 p-0\">:</span>\n\n                <div className=\"col-6\">\n                  <div className=\"autoComplete-container \">\n                    <span className=\"auto\" id=\"auto\">\n                      <div className=\"autoComplete-container\">\n                        <ReactSearchAutocomplete\n                          items={manager}\n                          type=\"Text\"\n                          name=\"assignedto\"\n                          id=\"assignedto\"\n                          manager={manager}\n                          onChange={(e) => {\n                            onChangeHandler(e);\n                          }}\n                          getManagerdata={getManagerdata}\n                          className=\"AutoComplete\"\n                          placeholder=\"Type minimum 3 Characters\"\n                          // onSelect={(e) => {\n                          //   setCustomerSelect(e.id);\n                          // }}\n                          showIcon={false}\n                          onSelect={(e) => {\n                            setCustomerSelect((prevProps) => ({\n                              ...prevProps,\n                              userId: e.id,\n                            }));\n                          }}\n                        />\n                      </div>\n                    </span>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className=\" col-md-3 mb-2\">\n              <div className=\"form-group row\">\n                <label className=\"col-5\" htmlFor=\"bu\">\n                  BU\n                </label>\n                <span className=\"col-1 p-0\">:</span>\n\n                <div className=\"col-6 multiselect\">\n                  <MultiSelect\n                    ArrowRenderer={ArrowRenderer}\n                    id=\"businessUnit\"\n                    options={business}\n                    hasSelectAll={true}\n                    valueRenderer={generateDropdownLabel}\n                    value={selectedBusiness}\n                    disabled={false}\n                    onChange={(s) => {\n                      setSelectedBusiness(s);\n                      let filteredValues = [];\n                      s.forEach((d) => {\n                        filteredValues.push(d.value);\n                      });\n                      console.log(filteredValues);\n                      setSearchDepartment(\n                        filteredValues.length >= 13\n                          ? -1\n                          : filteredValues.toString()\n                      );\n                    }}\n                  />\n                </div>\n              </div>\n            </div>\n\n            <div className=\" col-md-3 mb-2\">\n              <div className=\"form-group row\">\n                <label className=\"col-5\" htmlFor=\"customer\">\n                  Customer&nbsp;<span className=\"error-text\">*</span>\n                </label>\n                <span className=\"col-1 p-0\">:</span>\n                <div className=\"col-6\">\n                  <select\n                    name=\"Customer\"\n                    id=\"Customer\"\n                    onChange={handleChange1}\n                  >\n                    {selectedItems.length + \"selected\"}\n                    <option value=\"-1\">&lt;&lt;ALL&gt;&gt;</option>\n                    <option value=\"-1\">BU Customer</option>\n                    <option value=\"select\">Select</option>\n                  </select>\n                </div>\n              </div>\n            </div>\n            <div className=\" col-md-3 mb-2\">\n              <div className=\"form-group row\">\n                <label className=\"col-5\" htmlFor=\"projectstage\">\n                  Project Stage\n                </label>\n                <span className=\"col-1 p-0\">:</span>\n                <div className=\"col-6\">\n                  <select\n                    id=\"projectstage\"\n                    onChange={(e) => {\n                      setProjectStage(e.target.value);\n                    }}\n                  >\n                    <option value=\"null\">{\"<<ALL>>\"}</option>\n                    <option value=\"1\" selected>\n                      In Progress\n                    </option>\n                    <option value=\"2\">Completed</option>\n                    <option value=\"4\">On Hold</option>\n                  </select>\n                </div>\n              </div>\n            </div>\n            <div className=\" col-md-3 mb-2\">\n              <div className=\"form-group row\">\n                <label className=\"col-5\" htmlFor=\"projectsource\">\n                  Project Source\n                </label>\n                <span className=\"col-1 p-0\">:</span>\n                <div className=\"col-6\">\n                  <select\n                    id=\"projectsource\"\n                    onChange={(e) => {\n                      setProjectSource(e.target.value);\n                    }}\n                  >\n                    <option value=\"-1\">&lt;&lt;ALL&gt;&gt;</option>\n                    <option value=\"PPM\">PPM</option>\n                    <option value=\"Projector\">Projector</option>\n                  </select>\n                </div>\n              </div>\n            </div>\n            <div className=\" col-md-3 mb-2\">\n              <div className=\"form-group row\">\n                <label className=\"col-5\" htmlFor=\"reviewstatus\">\n                  Review Status\n                </label>\n                <span className=\"col-1 p-0\">:</span>\n                <div className=\"col-6\">\n                  <select\n                    id=\"reviewstatus\"\n                    onChange={(e) => {\n                      setReviewStatus(e.target.value);\n                    }}\n                  >\n                    <option value=\"-1\"> &lt;&lt;ALL&gt;&gt;</option>\n                    <option value=\"1016\">To be Scheduled</option>\n                    <option value=\"1017\">Scheduled</option>\n                    <option value=\"1018\">Delayed</option>\n                    <option value=\"1019\">Completed</option>\n                  </select>\n                </div>\n              </div>\n            </div>\n            {reviewStatus == \"1019\" ? (\n              <>\n                <div className=\" col-md-3 mb-2\">\n                  <div className=\"form-group row\">\n                    <label className=\"col-5\" htmlFor=\"reviewtype\">\n                      From Date&nbsp;<span className=\"error-text\">*</span>\n                    </label>\n                    <span className=\"col-1 p-0\">:</span>\n                    <div className=\"col-6\">\n                      <div>\n                        <DatePicker\n                          name=\"fromdate\"\n                          autoComplete=\"off\"\n                          id=\"fromdate\"\n                          dropdownMode=\"select\"\n                          selected={fromdate}\n                          className={` ${validproject ? \"error-block\" : \"\"}`}\n                          dateFormat=\"dd-MMM-yyyy\"\n                          maxDate={new Date()}\n                          onKeyDown={(e) => {\n                            e.preventDefault();\n                          }}\n                          onChange={(e) => {\n                            setFromDate(e);\n                          }}\n                          showMonthDropdown\n                          showYearDropdown\n                        />{\" \"}\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                <div className=\" col-md-3 mb-2\">\n                  <div className=\"form-group row\">\n                    <label className=\"col-5\" htmlFor=\"reviewtype\">\n                      To Date&nbsp;<span className=\"error-text\">*</span>\n                    </label>\n                    <span className=\"col-1 p-0\">:</span>\n                    <div className=\"col-6\">\n                      <div>\n                        <DatePicker\n                          name=\"todate\"\n                          id=\"todate\"\n                          dropdownMode=\"select\"\n                          autoComplete=\"off\"\n                          selected={toDate}\n                          className={` ${validproject ? \"error-block\" : \"\"}`}\n                          dateFormat=\"dd-MMM-yyyy\"\n                          minDate={fromdate}\n                          maxDate={new Date()}\n                          onKeyDown={(e) => {\n                            e.preventDefault();\n                          }}\n                          onChange={(e) => {\n                            setToDate(e);\n                          }}\n                          showYearDropdown\n                          showMonthDropdown\n                        />{\" \"}\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </>\n            ) : (\n              \"\"\n            )}\n\n            {reviewStatus == \"1019\" ? (\n              <div className=\" col-md-3 mb-2\">\n                <div className=\"form-group row\">\n                  <label className=\"col-5\" htmlFor=\"reviewtype\">\n                    {\" \"}\n                    Review Type\n                  </label>\n                  <span className=\"col-1 p-0\">:</span>\n\n                  <div className=\"col-6 multiselect\">\n                    <MultiSelect\n                      value={state}\n                      options={stateSelectItems}\n                      placeholder=\"Select state...\"\n                      display=\"chip\"\n                      valueRenderer={generateDropdownLabel}\n                      ArrowRenderer={ArrowRenderer}\n                      onChange={(s) => {\n                        setState(s);\n                        let filteredValues = [];\n                        s.forEach((d) => {\n                          filteredValues.push(d.value);\n                        });\n                      }}\n                    />\n                  </div>\n                </div>\n              </div>\n            ) : (\n              <div className=\" col-md-3 mb-2\">\n                <div className=\"form-group row\">\n                  <label className=\"col-5\" htmlFor=\"reviewtype\">\n                    Review Type\n                  </label>\n                  <span className=\"col-1 p-0\">:</span>\n                  <div className=\"col-6\">\n                    <select\n                      id=\"reviewtype\"\n                      onChange={(e) => {\n                        setReviewType(e.target.value);\n                      }}\n                    >\n                      <option value=\"1021\">Design Review</option>\n                      <option value=\"1022\">Code Review</option>\n                      <option value=\"1023\">Management Review</option>\n                    </select>\n                  </div>\n                </div>\n              </div>\n            )}\n            <div className=\"col-md-12 col-sm-12 col-xs-12 my-2 btn-container center\">\n              <button\n                type=\"button\"\n                className=\"btn btn-primary\"\n                onClick={handleClick}\n              >\n                <FaSearch /> Search{\" \"}\n              </button>\n            </div>\n          </div>\n\n          {loader ? <Loader handleAbort={handleAbort} /> : \"\"}\n        </CCollapse>\n      </div>\n      {searching && reviewStatus !== \"1019\" ? (\n        <div className=\"darkHeader\">\n          <DataTable\n            className=\"primeReactDataTable invoicingSearchTable\" ////customerEngament\n            paginatorTemplate=\"RowsPerPageDropdown FirstPageLink PrevPageLink CurrentPageReport NextPageLink LastPageLink\"\n            currentPageReportTemplate=\"{first} to {last} of {totalRecords}\"\n            rowsPerPageOptions={[10, 25, 50]}\n            value={tableData}\n            paginator\n            rows={10}\n            header={header}\n            filters={filters}\n            onFilter={(e) => setFilters(e.filters)}\n            selection={selectedCustomer}\n            onSelectionChange={(e) => setSelectedCustomer(e?.value)}\n            selectionMode=\"single\"\n            dataKey=\"id\"\n            showGridlines\n            // stateStorage=\"session\"\n            // stateKey=\"dt-state-demo-local\"\n            emptyMessage=\"No Records To View.\"\n            // tableStyle={{ minWidth: \"50rem\" }}\n            // tableStyle={{ minWidth: \"auto\", width: \"auto\" }}\n            headerColumnGroup={headerGroup}\n          >\n            <Column field=\"product\" body={LinkTemplate} />\n            <Column field=\"projectName\" body={redirectLink} />\n            <Column field=\"prjStartDate\" style={{ textAlign: \"center\" }} />\n            <Column field=\"customer\" body={Customerbody} />\n            <Column field=\"prjStatus\" />\n            <Column field=\"lastReviewDate\" style={{ textAlign: \"center\" }} />\n            <Column field=\"reviewType\" />\n            <Column field=\"revStatusDtl\" body={selecttag} />\n            <Column field=\"scheduledDate\" body={selectedDate} />\n            <Column\n              body={popUpIcons}\n              style={{ textAlign: \"center\", minWidth: \"30px\" }}\n            />\n          </DataTable>\n\n          <div className=\"card\"></div>\n          <div className=\"col-md-12 col-sm-12 col-xs-12 my-2 btn-container center\">\n            <button\n              type=\"button\"\n              className=\"btn btn-primary\"\n              onClick={updateStatus}\n            >\n              <FaSave /> Save{\" \"}\n            </button>\n          </div>\n        </div>\n      ) : (\n        \"\"\n      )}\n      {reviewStatus == \"1019\" ? (\n        <div className=\"darkHeader\">\n          <DataTable\n            className=\"primeReactDataTable invoicingSearchTable\" ////customerEngament\n            paginatorTemplate=\"RowsPerPageDropdown FirstPageLink PrevPageLink CurrentPageReport NextPageLink LastPageLink\"\n            currentPageReportTemplate=\"{first} to {last} of {totalRecords}\"\n            rowsPerPageOptions={[10, 25, 50]}\n            value={tableData}\n            paginator\n            rows={10}\n            header={header}\n            filters={filters}\n            onFilter={(e) => setFilters(e.filters)}\n            selection={selectedCustomer}\n            onSelectionChange={(e) => setSelectedCustomer(e?.value)}\n            selectionMode=\"single\"\n            dataKey=\"id\"\n            showGridlines\n            // stateStorage=\"session\"\n            // stateKey=\"dt-state-demo-local\"\n            emptyMessage=\"No Records To View.\"\n            // tableStyle={{ minWidth: \"50rem\" }}\n            // tableStyle={{ minWidth: \"auto\", width: \"auto\" }}\n            headerColumnGroup={reviewheaderGroup}\n          >\n            {/* <Column field=\"product\" body={LinkTemplate} /> */}\n            <Column field=\"projectName\" body={redirectLink} />\n            <Column field=\"prjStartDate\" style={{ textAlign: \"center\" }} />\n            <Column field=\"customer\" body={Customerbody} />\n            <Column field=\"prjStatus\" />\n            <Column field=\"reviewType\" />\n            <Column\n              header=\"Reviewer\"\n              field=\"scheduledDate\"\n              body={ScheduledDate}\n            />\n            <Column field=\"lastReviewDate\" body={CompletedDate} />\n            <Column header=\"Reviewer\" field=\"reviewer\" />\n            <Column header=\"Comments\" field=\"comments\" />\n            {/* <Column field=\"revStatusDtl\" body={selecttag} /> */}\n\n            <Column\n              body={popUpIcons}\n              style={{ textAlign: \"center\", minWidth: \"30px\" }}\n            />\n          </DataTable>\n        </div>\n      ) : (\n        \"\"\n      )}\n      {view ? (\n        <ProjectReviewTable\n          view={view}\n          setView={setView}\n          setProjectId={setProjectId}\n          projectId={projectId}\n          projectName={projectName}\n          historyId={historyId}\n          selectedCustomer={selectedCustomer}\n        />\n      ) : (\n        \"\"\n      )}\n      {open ? (\n        <ReviewLogAdd\n          totaldata={totaldata}\n          revStatusvalue={revStatusvalue}\n          reviewTypevalue={reviewTypevalue}\n          reviewType={reviewType}\n          open={open}\n          setOpen={setOpen}\n          setProjectId={setProjectId}\n          projectId={projectId}\n          projectName={projectName}\n          historyId={historyId}\n          selectedCustomer={selectedCustomer}\n          revDate={revDate}\n          setLoader={setLoader}\n        />\n      ) : (\n        \"\"\n      )}\n      <CustomerDialogBox\n        visible={visiblepopup}\n        setVisible={setVisiblepopup}\n        newMemberDropdown={newMemberDropdown}\n      />{\" \"}\n      <SelectCustDialogBox\n        variance={variance}\n        visible={custVisible}\n        setVisible={setCustVisible}\n        setSelectedItems={setSelectedItems}\n        selectedItems={selectedItems}\n      />\n    </div>\n  );\n}\nexport default ProjectReviews;\n","import React, { useState, useEffect } from \"react\";\nimport VendorOpen from \"../VendorComponent/VendorOpen\";\nimport ProjectCreate from \"./ProjectCreate\";\nimport ProjectSearch from \"./ProjectSearch\";\nimport ProjectReviews from \"./ProjectReviews\";\nimport axios from \"axios\";\nimport { environment } from \"../../environments/environment\";\n// import './Parent.scss';\n\nfunction InitialParentProject() {\n  const [btnState, setbtnState] = useState(\"Open\");\n  // const [btnState, setbtnState] = useState(() => {\n  //   // Retrieve the last selected tab from localStorage on component mount\n  //   return localStorage.getItem(\"selectedIntialParentProjectTab\") || \"Open\";\n  // });\n  const [buttonValue, setButtonValue] = useState(\"Project\");\n  const baseUrl = environment.baseUrl;\n  const loggedUserId = localStorage.getItem(\"resId\");\n  const [tabButtons, setTabButtons] = useState([]);\n\n  const [permission, setPermission] = useState([]);\n  const menus = () => {\n    axios({\n      method: \"GET\",\n\n      url:\n        baseUrl +\n        `/CommonMS/master/getBenchMtericsMenus?loggedUserId=${loggedUserId}&Cont=project`,\n    }).then((res) => {\n      const data = res.data;\n      console.log(data);\n      const filteredObjects = data\n      // .filter(\n      //   (obj) => obj.display_name !== \"Reviews\"\n      // );\n\n      // Push the remaining objects into the state\n      // setFilteredData(filteredObjects);\n      setPermission(filteredObjects);\n      console.log(data);\n    });\n  };\n\n  useEffect(() => {\n    menus();\n  }, []);\n\n  const renderDisplayNames = (permission) => {\n    return (\n      <div>\n        {permission.map((item) => (\n          <div key={item.id}>{item.display_name}</div>\n        ))}\n      </div>\n    );\n  };\n\n  // useEffect(() => {\n  //   // Save the selected tab to localStorage whenever it changes\n  //   localStorage.setItem(\"selectedIntialParentProjectTab\", btnState);\n  // }, [btnState]);\n\n  // const App = () => {\n  //   const dataArray = permission;\n  // };\n\n  const initialData = permission;\n\n  const [data, setData] = useState(initialData);\n  const [showDisplayNames, setShowDisplayNames] = useState(false);\n  const toggleDisplayNames = () => {\n    setShowDisplayNames((prevState) => !prevState);\n  };\n  console.log(permission);\n\n  return (\n    <div>\n      <div>\n        <div className=\"tabs\">\n          {permission.map((button) => (\n            <button\n              key={button.id}\n              className={\n                btnState === button.display_name.toString()\n                  ? \"buttonDisplayClick\"\n                  : \"buttonDisplay\"\n              }\n              onClick={() => {\n                setbtnState(button.display_name.toString());\n                console.log(button.display_name);\n              }}\n            // console.log(first)\n            >\n              {/* clg */}\n              {button.display_name}\n            </button>\n          ))}\n        </div>\n      </div>\n      {btnState === \"Open\" && <VendorOpen buttonValue={buttonValue} />}\n      {btnState === \"Create\" && <ProjectCreate buttonValue={buttonValue} />}\n      {btnState === \"Search\" && <ProjectSearch />}\n      {btnState === \"Reviews\" && <ProjectReviews />}\n    </div>\n  );\n}\n\nexport default InitialParentProject;\n","import React from 'react'\nimport InitialParentProject from './InitialParentProject'\n\n\n\nfunction ParentProject() {\n  return (\n    <div>\n     <div className=\"col-md-12\"> <InitialParentProject/></div>\n    \n     \n    </div>\n  )\n}\n\nexport default ParentProject","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { makeStyles as makeStylesWithoutDefault } from '@material-ui/styles';\nimport defaultTheme from './defaultTheme';\n\nfunction makeStyles(stylesOrCreator) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return makeStylesWithoutDefault(stylesOrCreator, _extends({\n    defaultTheme: defaultTheme\n  }, options));\n}\n\nexport default makeStyles;"],"names":["require","props","data","rows","dynamicColumns","col","headerdatagroup","linkColumns","linkColumnsRoutes","headerData","setHeaderData","exportData","customFilters","customFilterValue","setCustomFilterValue","fileName","useState","mainData","setMainData","bodyData","setBodyData","exportColumns","setExportColumns","dt","useRef","useEffect","JSON","parse","stringify","length","splice","dtt","headDt","Object","keys","forEach","d","push","title","dataKey","filtersData","contains","value","matchMode","FilterMatchMode","global","filters1","setFilters1","headerGroup","globalFilterValue1","setGlobalFilterValue1","onGlobalFilterChange1","e","target","_filters1","RenderCustomFilters","cstFtlrs","id","onChange","map","selected","exportExcel","then","xlsx","headers","uniqueHeaders","Set","worksheetData","item","header","workbook","Sheets","utils","json_to_sheet","skipHeader","SheetNames","buffer","module","default","data1","Blob","type","saveAs","saveAsExcelFile","write","bookType","exportPdf","print","pdf","jsPDF","columns","temp","i","columnWidths","text","autoTable","startY","theme","styles","font","halign","cellPadding","lineWidth","lineColor","textColor","headStyles","fontStyle","fillColor","alternateRowStyles","rowStyles","tableLineColor","columnStyles","cellWidth","save","header1","className","undefined","includes","onClick","selectionOnly","current","exportCSV","defaultValue","placeholder","team_size","colSpan","sortable","field","stripedRows","paginatorTemplate","currentPageReportTemplate","rowsPerPageOptions","headerColumnGroup","paginator","showGridlines","filters","responsiveLayout","emptyMessage","ref","el","console","log","output","formData","flag","setExportData","environment","projectManagerToolip","prj_manager","salesExeToolip","sales_executive","primartBuToolip","business_unit","customerToolip","customer","codeToolip","project_code","plnStartAlign","align","style","width","planned_start_dt","plnEndAlign","planned_end_dt","actStartAlign","actual_start_dt","actEndAlign","actual_end_dt","teamSizeAlign","contractOnsite","contractor_onsite","contractOffShore","contractor_offshore","employeeOnsite","employee_onsite","employeeOffShore","employee_offshore","LinkTemplate","rou","split","to","project_name","body","ProjectSearchCellRenderer","loggedUserId","localStorage","getItem","visible","setVisible","FaChevronCircleUp","cheveronIcon","setCheveronIcon","loader","setLoader","searching","setSearching","business","setBusiness","setCustomer","manger","setManger","contract","setContract","SelectdContract","setSelectdContract","facilitator","setFacilitator","projectStage","setProjectStage","enguagementType","setEnguagementType","setData","selectedBusiness","setSelectedBusiness","setLinkColumns","setFlag","setLinkColumnsRoutes","baseUrl","abortController","projectName","manager","primaryBu","projectSource","po","teamLocation","engagementType","contractTeams","FTE","currentAllocation","PCQAFacilitaor","teamsize","setFormData","projectId","resId","isAll","customerFnc","ids","Array","isArray","join","axios","method","url","res","custom","fcqaFacilitatorFnc","catch","error","managerFnc","response","Response","countries","label","countryObj","defaultSelected","filter","lkup_name","ArrowRenderer","expanded","routes","setRoutes","getMenus","resp","display_name","generateDropdownLabel","selectedOptions","allOptions","selectedValues","option","allValues","ScreenBreadcrumbs","currentScreenName","GlobalHelp","pdfname","name","FaChevronCircleDown","htmlFor","getName","ReactSearchAutocomplete","items","fuseOptions","resultStringKeyName","resource","onSelect","prevProps","showIcon","onClear","prev","options","hasSelectAll","disabled","overrideStrings","selectAllFiltered","selectSomeItems","filteredCountry","prevVal","toString","valueRenderer","Item","customerId","customers","selectedValue","loaderTime","setTimeout","AbortController","signal","sort","a","b","nameA","toUpperCase","nameB","prj_stage","po_number","concat","clearTimeout","Loader","handleAbort","abort","newMemberDropdown","forwardRef","input","showInactive","setShowInactive","selectedSE","setselectedSE","selectedSEDisp","setselectedSEDisp","allIndirectSelected","setallIndirectSelected","indirectData","setIndirectdata","isIndividual","setisIndividual","search","setSearch","icons","fte0","src","fte_inactive","alt","height","fte1","fte_active","fte2","fte_notice","subk0","subk_inactive","subk1","subk_active","subk2","subk_notice","useImperativeHandle","setGlobalState","setItem","resetTOlocalState","localSE","onSelectSE","emp","prevState","some","employeeElement","whiteSpace","overflow","textOverflow","checked","Name","salesPersonName","selectedItems","setSelectedItems","status","empId","newArray","toLowerCase","CustomerSelectedItems","SelectSEDialogBox","selectSERef","dispatch","useDispatch","onClose","size","undoSaveSelectSE","openPopup","setOpenPopup","updateId","reviewerId","countData","successfullymsg","statusId","getCountData","validationmessage","settabledata","tabledata","updateStatus","setDeleteId","deletedId","setDeletedId","sameDisplay","setDataRowId","deletePopup","setDeletePopup","action_status","updated_by_id","editedData","setStatus","deleteMsg","setDeleteMsg","color","textAlign","tittle","cursor","LinkTemplateDropdown","prevData","modified","onchange","LinkDataProps","RevComents","reviewer_comments","LinkMoment","x","moment","date_created","format","LinkMomentDue","due_date","completedDate","completed_date","Action","action","SerialNo","SNo","ReviewReport","deleteAction","fontWeight","CellRendererPrimeReactDataTable","del","docId","setDocId","setUpdateId","setReviewerId","setProjectData","setStatusId","headerdata","setHeaderdata","view","setView","selectedCustomer","setCountData","anchorEl","setAnchorEl","handleClose","classes","makeStyles","dialog","position","top","minHeight","textField","border","useStyles","reviewer","review_st","actItems","prhId","GetData","element","obj","action_statuss","sno","review_dt","rev_type","docCount","comments","LinkTemplateAction","issueDeleteHandler","currentTarget","Comments","Reviewer","RevType","Status","RevDate","setvalidationmessage","setSuccessfullymsg","loggedResourceId","Number","dataArray","Boolean","Popover","disablePortal","arrow","open","maxWidth","anchorOrigin","vertical","horizontal","transformOrigin","filename","docUrl","responseType","window","URL","createObjectURL","link","document","createElement","href","setAttribute","appendChild","click","downloadEmployeeData1","backdrop","paper","ProjectReviewPopUp","ele","riskDetails","getData","onChangeHandler","formEditData","refArr","loggedUserName","autocom","inputSearchString","autocomplete","Date","setOpen","totaldata","revDate","products","setProducts","setRiskDetails","startDate","setStartDate","setAction","commnets","setCommnets","setSelected","selectedFile1","setSelectedFile1","setFilName","valid","setValid","validateproject","setValidateproject","rowData","setRowData","event_name","getElementsByClassName","addEventListener","slice","textEditorEventName","rowIndex","updatedRowData","textEditorComments","revComments","textEditorDate","selectedDate","date","showYearDropdown","showMonthDropdown","dropdownMode","minDate","dateFormat","onKeyDown","preventDefault","locale","placeholderText","getDataRisks","ReviewsAutocomplete","files","editMode","selection","onSelectionChange","scrollHeight","index","updatedProducts","deleteRow","Reviewercomments","now","prevProducts","GlobalValidation","dynamicActions","row","payload","revType","reviewTypeId","revStatus","curRevHisId","curRevId","scheduledDate","loggedUser","actions","model","setTaskStatus","setUpdateData","SubmitData","setpostData","reviewdatevalid","setselecteddatevalidation","changedRows","setChangedRows","setSelectedDate","rowClassName","autoComplete","reviewId","currentRow","get","updateRow","updateChangedRows","Map","set","handleDateChange","stateSelectItems","rowSpan","reviewheaderGroup","updateMsg","setUpdateMsg","visiblepopup","setVisiblepopup","setnewMemberDropdown","cid","setCid","historyId","setHistoryId","custVisible","setCustVisible","selectedRowsData","setSelectedRowsData","validationMessage","setValidationMessage","setreviewdatevalid","validproject","setValidProject","state","setState","revStatusvalue","scheduled_date","review_status_id","Customer","serarchVals","setProjectname","setProjectSource","reviewStatus","setReviewStatus","fromdate","setFromDate","toDate","setToDate","executives","setReviewStatussearch","tableData","setTableData","FaHistory","history","setHistory","FaPlus","plus","setPlus","setManager","setscheduledDate","setProjectId","initialV","userId","customerSelect","setCustomerSelect","searchDepartment","setSearchDepartment","reviewType","setReviewType","setcustomerId","reviewTypevalue","settotalData","operator","FilterOperator","constraints","representative","setFilters","setSelectedCustomer","selectedCust","shift","isValid","dataRows","values","ExcelJS","worksheet","addWorksheet","addRow","getRow","bold","writeBuffer","blob","float","event","_filters","onGlobalFilterChange","renderHeader","getManagerdata","prjStr","buIds","custIds","prjStage","resultString","prjSource","fromDt","toDt","prjManager","prjStartDate","prjStatus","lastReviewDate","revStatusDtl","Risk_status","fullName","getnewMemberDropdown","dropdownOptions","resourcesId","err","initialValue1","postData","setDateData","selectedvalidation","setselectedValidation","selecteddatevalidation","selectedItem","Customerbody","redirectLink","popUpIcons","display","minWidth","inputValue","test","s","filteredValues","maxDate","onFilter","selectionMode","legendElement","statusValue","newMap","updatedSelectedCustomer","onchangeStatus","scrollTo","behavior","matchingItem","find","isDateValidTemp","key","updatedScheduledDate","ProjectReviewTable","SelectCustDialogBox","variance","btnState","setbtnState","buttonValue","permission","setPermission","initialData","button","VendorOpen","ProjectCreate","stylesOrCreator","arguments","makeStylesWithoutDefault","_extends","defaultTheme"],"sourceRoot":""}