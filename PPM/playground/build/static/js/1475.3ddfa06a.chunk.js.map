{"version":3,"file":"static/js/1475.3ddfa06a.chunk.js","mappings":"siBAsDA,EAjD0B,SAACA,GACzB,IAAQC,EAAqDD,EAArDC,QAASC,EAA4CF,EAA5CE,WAAYC,EAAgCH,EAAhCG,cAAeC,EAAiBJ,EAAjBI,aAE5C,GAA0BC,EAAAA,EAAAA,UAAS,MAAK,eAAjCC,EAAK,KAAEC,EAAQ,KACAC,IAAOP,EAAQQ,eAAgB,cAAcC,OACjE,YAiBF,OAdAC,EAAAA,EAAAA,YAAU,WAGR,GADAJ,EAASN,EAAQQ,eAAiB,IAAIG,KAAKX,EAAQQ,gBAAkB,IACjER,EAAQQ,eACV,KAEA,EAFWR,EAAQQ,eAEaI,MAAM,KAAI,eAAnCC,EAAI,KAAEC,EAAK,KAAEC,EAAG,KACJ,UAAM,IAAIJ,KAAKE,EAAMC,EAAQ,EAAGC,GAAKC,eACtD,UACA,CAAEF,MAAO,UACV,YAAID,EAN4B,CAQrC,GAAG,CAACb,EAASA,EAAQQ,kBAGnB,0BACE,gBAAKS,UAAU,aAAY,UACzB,SAAC,IAAU,CACTC,KAAK,QACLC,GAAG,QACHF,UAAU,SACVG,SAAUf,EACVgB,QAAS,IAAIV,KAAKX,EAAQQ,gBAC1Bc,SAAU,SAACC,GACTpB,EAAaoB,EAAGvB,GAChBM,EAASiB,GACTtB,GAAW,GACXC,GAAc,EAChB,EACAsB,WAAW,WACXC,UAAW,SAACF,GACVA,EAAEG,gBACJ,EACAC,gBAAgB,eAChBC,qBAAmB,OAK7B,E,iCCksCA,MAvtCA,WAAwB,IAAD,IACrB,GAA8BxB,EAAAA,EAAAA,WAAS,GAAM,eAAtCyB,EAAO,KAAEC,EAAU,KAC1B,GAAwC1B,EAAAA,EAAAA,UAAS2B,EAAAA,KAAkB,eAA5DC,EAAY,KAAEC,EAAe,KAC9BC,EAAUC,EAAAA,EAAAA,QAChB,GAAgC/B,EAAAA,EAAAA,UAAS,IAAG,eAA3BgC,GAAF,KAAa,MAC5B,GAA4ChC,EAAAA,EAAAA,UAAS,IAAG,eAAjCiC,GAAF,KAAmB,MACxC,GAAgCjC,EAAAA,EAAAA,UAAS,IAAG,eAArCkC,EAAQ,KAAEC,EAAW,KAC5B,GAAwCnC,EAAAA,EAAAA,UAAS,IAAG,eAA7CoC,GAAY,KAAEC,GAAe,KACpC,IAA8BrC,EAAAA,EAAAA,UAAS,IAAG,iBAAnCsC,GAAO,MAAEC,GAAU,MAC1B,IAA8CvC,EAAAA,EAAAA,UAAS,IAAG,iBAAnDwC,GAAe,MAAEC,GAAkB,MAC1C,IAAsCzC,EAAAA,EAAAA,WAAS,GAAM,iBAA9C0C,GAAW,MAAEC,GAAc,MAClC,IAAkC3C,EAAAA,EAAAA,WAAS,GAAM,iBAA1C4C,GAAS,MAAEC,GAAY,MAC9B,IAAgC7C,EAAAA,EAAAA,UAAS,IAAG,iBAArC8C,GAAQ,MAAEC,GAAW,MAC5B,IAA8C/C,EAAAA,EAAAA,UAAS,IAAG,iBAAnDgD,GAAc,MAAEC,GAAmB,MAC1C,IAAkCjD,EAAAA,EAAAA,UAAS,CAAC,CAAC,IAAG,iBAAzCkD,GAAS,MAAEC,GAAY,MAC9B,IAAkDnD,EAAAA,EAAAA,UAAS,IAAG,iBAApCoD,IAAF,MAAsB,OAC9C,IAAwCpD,EAAAA,EAAAA,UAAS,IAAG,iBAA7CqD,GAAY,MAAEC,GAAe,MACpC,IAAgDtD,EAAAA,EAAAA,UAAS,IAAG,iBAArDuD,GAAgB,MAAEC,GAAmB,MACtCC,GAAMF,GAAiBG,KAAI,SAACC,GAAI,OAAKA,EAAK5C,EAAE,IAAE6C,KAAK,KACzD,IAA4B5D,EAAAA,EAAAA,UAAS,IAAG,iBAAzB6D,IAAF,MAAW,OACxB,IAAoC7D,EAAAA,EAAAA,WAAS,GAAM,iBAA5C8D,GAAU,MAAEhE,GAAa,MAChC,IAAwCE,EAAAA,EAAAA,WAAS,GAAM,iBAAhD+D,GAAY,MAAEC,GAAe,MACpC,IAAwChE,EAAAA,EAAAA,UAAS,MAAK,iBACtD,IADmB,MAAiB,OACEA,EAAAA,EAAAA,WAAS,IAAM,iBAA9CiE,GAAW,MAAEC,GAAc,MAClC,IAAgClE,EAAAA,EAAAA,UAAS,IAAG,iBAA3BmE,IAAF,MAAa,OAC5B,IAAwBnE,EAAAA,EAAAA,UAAS,IAAG,iBAA7B2D,GAAI,MACX,IADoB,OAC8B3D,EAAAA,EAAAA,WAAS,IAAM,iBAA1DoE,GAAiB,MAAEC,GAAoB,MACxCC,IAAMC,EAAAA,EAAAA,QAAO,IACnB,IAAkDvE,EAAAA,EAAAA,UAAS,IAAG,iBAAvDwE,GAAiB,MAAEC,GAAoB,MAC9C,IAA8BzE,EAAAA,EAAAA,UAAS,CACrC0E,OAAQ,CAAEC,MAAO,KAAMC,UAAWC,EAAAA,GAAAA,YAClC,iBAFKC,GAAO,MAAEC,GAAU,MAG1B,IAA8B/E,EAAAA,EAAAA,WAAS,GAAK,iBAA5BH,IAAF,MAAY,OAC1B,IAAgCG,EAAAA,EAAAA,WAAS,GAAM,iBAAxCgF,GAAQ,MAAEC,GAAW,MACtBC,IAAkBX,EAAAA,EAAAA,QAAO,MAC/B,IAA0BvE,EAAAA,EAAAA,UAAS,IAAG,iBAAxBmF,IAAF,MAAU,OACtB,IAAgCnF,EAAAA,EAAAA,UAAS,GAAE,iBAApCoF,GAAQ,MAAEC,GAAW,MAC5B,IAAkCrF,EAAAA,EAAAA,UAAS,IAAG,iBAAvCsF,GAAS,MAAEC,GAAY,MAC9B,IAA0BvF,EAAAA,EAAAA,UAAS,IAAG,iBAA/BwF,GAAK,MAAEC,GAAQ,MAYtB,IAAgCzF,EAAAA,EAAAA,UARX,CACnB0F,QAAS,GACTC,WAAY,SACZC,KAAM,GACNC,MAAO,KACPC,KAAM,KACNC,KAAM,KAE8C,iBAA/CC,GAAQ,MAAEC,GAAW,MAEtBC,GAAeC,aAAaC,QAAQ,SAE1C,IAA4BpG,EAAAA,EAAAA,UAAS,IAAG,iBAAjCqG,GAAM,MAAEC,GAAS,OAIxBhG,EAAAA,EAAAA,YAAU,WACRiG,IACF,GAAG,IAEH,IAAMA,GAAW,WAGfC,IAAM,CACJC,OAAQ,MACRC,IAAK5E,EAAO,iDAA6CoE,MACxDS,MAAK,SAACC,GACIA,EAAKC,KAEXC,SAAQ,SAACnD,GAhBA,cAiBRA,EAAKoD,cACPT,GAAU,CAAC3C,GAEf,GACF,GACF,EAEMqD,GAAc,WAElB,IADA,IAAIC,EAAc,GACTC,EAAI,EAAGA,EAAIhE,GAAUiE,OAAQD,IAAK,CAezC,IAdA,IAAME,EAAM,CAAC,EAEPC,EAAS,CACbvG,KAAM,WACNwG,QAAS,MACTC,OAAQ,mBACRC,aAAc,oBACdpH,eAAgB,wBAChBqH,iBAAkB,iBAGdC,EAAOC,OAAOD,KAAKL,GACrBO,EAAiB,GAEZV,EAAI,EAAGA,EAAIQ,EAAKP,OAAQD,IAC/BU,EAAeC,KAAKR,EAAOK,EAAKR,KAGlC,IAAK,IAAIY,EAAI,EAAGA,EAAIJ,EAAKP,OAAQW,IAAK,CACpC,IAAMC,EAAML,EAAKI,GACjB,GAAY,mBAARC,EAA0B,CAC5B,IAAMC,EAAY9E,GAAUgE,GAAGa,GACzBE,EAAgBD,EAAYE,GAAWF,GAAa,GAC1DZ,EAAIC,EAAOU,IAAQE,CACrB,MACEb,EAAIC,EAAOU,IAAQ7E,GAAUgE,GAAGa,EAEpC,CAEAd,EAAYY,KAAKT,EACnB,CAEA,IAAIe,EAAKC,EAAAA,MAAAA,SAAoBnB,GAC3BoB,EAAKD,EAAAA,MAAAA,cAAyBnB,GAEhCmB,EAAAA,MAAAA,kBAA6BD,EAAIE,EAAI,0BAErCD,EAAAA,UAAeD,EAAI,yBACrB,EAEMD,GAAa,SAACF,GAClB,IAAMM,EAAO,IAAI/H,KAAKyH,GAMtB,MALmB,WAAO,IAAMM,EAAKC,WAAWC,OAC7C,GACF,YAAIF,EAAK1H,eAAe,UAAW,CAClCF,MAAO,UACP,YAAI4H,EAAKG,cAEb,EAEMC,GAA+D,QAAnD,EAAGC,KAAKC,MAAMzC,aAAaC,QAAQ,wBAAgB,OACjD,QADiD,EAAhD,EACjB1C,KAAI,SAACmF,GAAC,OAAKA,EAAE9H,EAAE,WAAC,WADiD,EAAhD,EAEjB+H,YAiCJxI,EAAAA,EAAAA,YAAU,WATRkG,IAAAA,IACO1E,EAAO,yCACX6E,MAAK,SAACC,GACL,IAAMC,EAAOD,EAAKC,KAClB1C,GAAY0C,EACd,IACCkC,OAAM,SAACnC,GAAU,GAKtB,GAAG,CAACjD,KAEJ,IAYA,IAA0C3D,EAAAA,EAAAA,UAAS,CAAC,CAAC,IAAG,iBAAjDgJ,GAAa,MAAEC,GAAgB,MAChCC,GAAwB,OAAbF,SAAa,IAAbA,QAAa,EAAbA,GAAetF,KAAI,SAACmF,GAAC,OAAM,OAADA,QAAC,IAADA,OAAC,EAADA,EAAG9H,EAAE,IAAE+H,YAElDxI,EAAAA,EAAAA,YAAU,WAAO,GAAG,CAACqD,IAAO,CAACuF,IAAW,CAAClD,GAASmD,cAElD,IAoGMC,GAAW,yCAAG,mGACZ5C,IAAM,CACVC,OAAQ,MACRC,IAAK5E,EAAO,qCACX6E,MAAK,SAAC0C,GACP,IAAIC,EAASD,EAAIxC,KACjB1E,EAAYmH,EACd,IAAG,KAAD,sCACH,kBARgB,mCAUjB,IAAwCtJ,EAAAA,EAAAA,UAAS,IAAG,iBAA/BuJ,IAAF,MAAiB,QAWpCjJ,EAAAA,EAAAA,YAAU,WA7KRkG,IAAAA,IACO1E,EAAO,yCACX6E,MAAK,SAACC,GACL,IAAI4C,EAAY,GAEZ3C,EAAOD,EAAKC,KAEhBA,EAAKM,OAAS,GACZN,EAAKC,SAAQ,SAAC3F,GACZ,IAAIsI,EAAa,CACfC,MAAOvI,EAAEwI,SACThF,MAAOxD,EAAEJ,IAGXyI,EAAU3B,KAAK4B,EACjB,IACFzH,EAAYwH,GACZvH,EAAkBuH,EACpB,IA6JFJ,KA1HA5C,IAAM,CACJC,OAAQ,MACRC,IACE5E,EAAO,8DACgDoE,MACxDS,MAAK,SAACiD,GACP,IAAIC,EAAc,GACdC,EAAU,GACVjD,EAAO+C,EAAS/C,KACpBA,EAAKgB,KAAK,CAAE9G,GAAI,EAAGgJ,WAAY,eAC/BlD,EAAKM,OAAS,GACZN,EAAKC,SAAQ,SAAC3F,GACZ,IAAIsI,EAAa,CACfC,MAAOvI,EAAE4I,WACTpF,MAAOxD,EAAEJ,IAEX8I,EAAYhC,KAAK4B,GACjBK,EAAQjC,KAAK4B,EAAW9E,MAC1B,IACFpC,GAAWsH,GACXpH,GAAmBoH,GACnB,IAAMG,EAAkBF,EAAQlG,KAAK,KACrC2B,GAAayE,EACf,IAwDAxD,IAAAA,IACO1E,EAAO,4DACX6E,MAAK,SAACiD,GACL,IAAIK,EAAU,GACVC,EAAa,GACbrD,EAAO+C,EAAS/C,KACpBA,EAAKgB,KAAK,CAAE9G,GAAI,EAAGgJ,WAAY,eAC/BlD,EAAKM,OAAS,GACZN,EAAKC,SAAQ,SAAC3F,GACZ,IAAIgJ,EAAa,CAAET,MAAOvI,EAAE4I,WAAYpF,MAAOxD,EAAEJ,IACjDkJ,EAAQpC,KAAKsC,GACbD,EAAWrC,KAAKsC,EAAWxF,MAC7B,IACF5B,GAAYkH,GACZhH,GAAoBgH,GACpB,IAAMG,EAAkBF,EAAWtG,KAAK,KACxC6B,GAAS2E,EACX,IAeF5D,IAAM,CACJC,OAAQ,MACRC,IAAK5E,EAAO,qCACX6E,MAAK,SAAU0D,GAChB,IAAIhB,EAAMgB,EAASxD,KACnB0C,GAAgBF,EAClB,GASF,GAAG,IAEH,IAAMiB,GAAuB,SAACnJ,GAC5B,IAAMwD,EAAQxD,EAAEoJ,OAAO5F,MACnB6F,GAAQ,UAAQ1F,IAEpB0F,EAAiB,OAAE7F,MAAQA,EAE3BI,GAAWyF,GACX/F,GAAqBE,EACvB,EA2BIkC,GAAO,CACTnB,QAASgD,GACT/C,WAAYK,GAASL,WACrBC,KAAMI,GAASJ,KACfC,MAAOG,GAASH,OAASP,GAAY,KAAOU,GAASH,MACrDC,KAAME,GAASF,MAAQN,GAAQ,KAAOQ,GAASF,KAC/CC,KAAMC,GAASD,MAGjB,IAA4B/F,EAAAA,EAAAA,UAAS,IAAG,iBAAzByK,IAAF,MAAW,OAElBC,GAAW,WACf,IAAIC,EAAerG,GAAIsG,QAAQC,QAAO,SAAChC,GAAC,OAAU,MAALA,CAAS,IAEtDvE,GAAIsG,QAAUD,EAEd,IAAIG,GAAQC,EAAAA,EAAAA,GAAiBzG,IAE7B,GAAIwG,EAQF,OANEzG,IAAqB,GACrBxB,IAAa,QACbmI,YAAW,WACT3G,IAAqB,EACvB,GAAG,KAKP1B,IAAe,GACfuC,GAAgB0F,QAAU,IAAIK,gBAE9BzE,IAAM,CACJC,OAAQ,OACRC,IAAK5E,EAAO,wCACZoJ,OAAQhG,GAAgB0F,QAAQM,OAChCrE,KAAAA,KACCF,MAAK,SAAC0C,GAEP,IADA,IAAM8B,EAAU9B,EAAIxC,KACXK,EAAI,EAAGA,EAAIiE,EAAQhE,OAAQD,IAClCiE,EAAQjE,GAAY,QACO,IAAzBiE,EAAQjE,GAAY,QAAU,GAAKiE,EAAQjE,GAAY,QAEzDiE,EAAQjE,GAAW,OACO,IAAxBiE,EAAQjE,GAAW,OAAU,GAAKiE,EAAQjE,GAAW,OAEvDiE,EAAQjE,GAAiB,aACO,IAA9BiE,EAAQjE,GAAiB,aAAU,GAAKiE,EAAQjE,GAAiB,aAEnEiE,EAAQjE,GAAqB,iBACO,IAAlCiE,EAAQjE,GAAqB,iBACzB,GACAiE,EAAQjE,GAAqB,iBAEnCiE,EAAQjE,GAAmB,eACQ,KAAjCiE,EAAQjE,GAAmB,eACvB,GACA/G,IAAOgL,EAAQjE,GAAmB,gBAAG7G,OAAO,cAapDoK,GAXiB,CACf,CACE3J,KAAM,WACNwG,QAAS,MACTC,OAAQ,mBACRC,aAAc,oBACdpH,eAAgB,wBAChBqH,iBAAkB,kBAID2D,OAAOD,IAC5BhI,GAAagI,GACb/H,GAAqB+H,GACrBxI,IAAe,GACfE,IAAa,GACbwC,IAAY,SAACgG,GAAO,OAAKA,EAAU,CAAC,IAEpCL,YAAW,WACTrI,IAAe,EACjB,GAAG,MACFmI,GAASpJ,GAAYD,GAElBI,EADJJ,EACoBE,EAAAA,IACA2J,EAAAA,IACtB,GACF,GASAhL,EAAAA,EAAAA,YAAU,WACRkD,IAAoB,SAAC+H,GAAI,OAAKlI,EAAY,GAC5C,GAAG,CAACA,KAEJ,IAAMmI,GAAW,SAACrK,EAAGvB,GACnB,IAAM6L,EAAQlI,GAAiBmI,WAC7B,SAACC,GAAe,OAAKA,EAAgB5K,KAAOnB,EAAQmB,EAAE,IAElD6K,GAAuB,OAAOrI,IACpCqI,EAAwBH,IAAM,kBACzBG,EAAwBH,IAAM,IACjCI,MAAO1K,EAAEJ,KAEXyC,GAAoBoI,EACtB,EAsCM7L,GAAe,SAACoB,EAAGvB,GACvB,IAAM6L,EAAQlI,GAAiBmI,WAC7B,SAACC,GAAe,OAAKA,EAAgB5K,KAAOnB,EAAQmB,EAAE,IAGlD6K,GAAuB,OAAOrI,IACpCqI,EAAwBH,IAAM,kBACzBG,EAAwBH,IAAM,IACjCrL,eAAgBD,IAAOgB,GAAGd,OAAO,gBAEnCmD,GAAoBoI,EACtB,EAEME,GAAuB,WAC3B,GAAkB,GAAdhI,GAYF,OAXAzB,IACE,4BACE,SAAC,MAAa,CAAC0J,MAAO,CAAEC,UAAW,UAAY,8CAKnDhB,YAAW,WACT3I,GAAgB,KAClB,GAAG,KAIL,IAAM4J,EAAgB1I,GAAiBG,KAAI,SAAC9D,GAAO,MAAM,CACvDmB,GAAInB,EAAQmB,GACZ8K,MAAOjM,EAAQiM,MACfK,kBAAmBtM,EAAQuM,KAE3BC,cAAexM,EAAQwM,cAEvBrG,KAAMnG,EAAQyM,eAEdjM,eAAgBR,EAAQQ,eACzB,IAEDoG,IAAM,CACJC,OAAQ,OACRC,IAAK5E,EAAO,wCACZ+E,KAAMoF,IACLtF,MAAK,SAAC0C,GACW,KAAdA,EAAIiD,SACN9F,IAAAA,KAEI1E,EAAO,6DAEP,CAAE4D,QAASjC,KAEZkD,MAAK,SAAC0D,GACLkC,QAAQC,IAAInC,EAASxD,KACvB,IACCkC,OAAM,SAAC0D,GACNF,QAAQE,MAAMA,EAChB,IACFzI,IAAgB,GAChBiB,IAAY,GACZnF,IAAc,GACduC,IAAgB,GAChB2I,YAAW,WACT3I,IAAgB,EAClB,GAAG,KACH2I,YAAW,WACT/F,IAAY,EACd,GAAG,KACHyF,KAEJ,GACF,EAEMgC,IAlPF,iBAAK7L,UAAU,mBAAkB,WAC/B,SAAC,IAAS,CACRA,UAAU,eACV8D,MAAOH,GACPtD,SAAUoJ,GACVqC,YAAY,oBAGd,cACEC,MAAM,6BACNC,QAAS7F,GACT,kBAAgB,MAChB8F,MAAM,wBA6OdxM,EAAAA,EAAAA,YAAU,WACJyD,KACFT,GAAgB,IAChBU,IAAgB,GAChB0G,KAEJ,GAAG,CAAC3G,KAmNH,IAMD,IAAMgJ,GAAgB,SAAH,GAAc,EAARC,SAAQ,OAC/B,+BAEI,SAAC,MAAW,CAACnM,UAAU,iBAIxB,EAUCoM,GAAwB,SAACC,EAAiBC,GAC9C,IAAMC,EAAiBF,EAAgBxJ,KAAI,SAAC2J,GAAM,OAAKA,EAAO1I,KAAK,IAC7D2I,EAAYH,EAAWzJ,KAAI,SAACC,GAAI,OAAKA,EAAKgB,KAAK,IAErD,OAAIyI,EAAejG,SAAWmG,EAAUnG,OAC/B,YAEA+F,EAAgBxJ,KAAI,SAAC2J,GAAM,OAAKA,EAAO3D,KAAK,IAAE9F,KAAK,KAE9D,EAEA,OACE,2BACGxB,KAAgB,gBAAKvB,UAAU,kBAAiB,SAAEuB,KAClDgC,IACC,iBAAKvD,UAAU,kBAAiB,UAC7B,KACD,4BACG,KACD,SAAC,MAAgB,IAAG,yDACb,UAIX,GAEDmE,IACC,iBAAKnE,UAAU,oBAAmB,WAChC,SAAC,MAAO,IACP,kCAGH,IAEF,gBAAKA,UAAU,YAAW,UACxB,iBAAKA,UAAU,YAAW,WACxB,gBAAKA,UAAU,cACf,gBAAKA,UAAU,WAAU,UACvB,wBAAI,oBAEN,gBAAKA,UAAU,qBAGnB,SAAC0M,EAAA,EAAiB,CAChBlH,OAAQA,GACRmH,kBAvyBkB,CAAC,mBA0yBrB,iBAAK3M,UAAU,wBAAuB,WACpC,iBAAKA,UAAU,2BAA0B,WACvC,wBAAI,oBACJ,gBAAKA,UAAU,UAAS,UACtB,SAAC4M,EAAA,EAAU,CAACC,QA9zBF,sBA8zBwB5M,KA7zBzB,wBA+zBX,gBACE+L,QAAS,WACPnL,GAAYD,GAGRI,EADJJ,EACoBE,EAAAA,IACA2J,EAAAA,IACtB,EAAE,UAEF,0BAAO1J,UAGX,SAAC,KAAS,CAACH,SAAUA,EAAQ,UAC3B,iBAAKZ,UAAU,oBAAmB,WAChC,gBAAKA,UAAU,iBAAgB,UAC7B,iBAAKA,UAAU,iBAAgB,WAC7B,mBAAOA,UAAU,QAAQ8M,QAAQ,YAAW,UAAC,iBAC5B,iBAAM9M,UAAU,aAAY,SAAC,UAE9C,iBAAMA,UAAU,YAAW,SAAC,OAC5B,gBAAKA,UAAU,QAAO,UACpB,oBACEyD,IAAK,SAACsJ,GACJtJ,GAAIsG,QAAQ,GAAKgD,CACnB,EACA/M,UAAU,cACVC,KAAK,kBACLC,GAAG,aACHG,SAztBI,SAACC,GACrB,MAA4BA,EAAEoJ,OAAlBzJ,GAAF,EAAFC,GAAQ,EAAJD,MAAM6D,EAAK,EAALA,MACN,mBAAR7D,GAAuC,WAAV6D,IAC/BT,IAAe,IACf2J,EAAAA,EAAAA,GAAavJ,KAEfH,KACA8B,IAAY,SAACsF,GACX,OAAO,kBAAKA,GAAI,cAAGzK,EAAO6D,GAC5B,GACF,EA+sB0C,UAEvBqE,GAAc7B,OAAS,YACxB,mBAAQxC,MAAM,GAAE,SAAC,wBAEjB,mBAAQA,MAAM,SAAQ,SAAC,+BAK/B,gBAAK9D,UAAU,iBAAgB,UAC7B,iBAAKA,UAAU,iBAAgB,WAC7B,kBAAOA,UAAU,QAAQ8M,QAAQ,aAAY,SAAC,kBAG9C,iBAAM9M,UAAU,YAAW,SAAC,OAC5B,gBAAKA,UAAU,QAAO,UACpB,oBACEE,GAAG,aACHD,KAAK,aACLgN,aAAc,SACd5M,SAAU,SAACC,GACT,MAAsBA,EAAEoJ,OAAhB5F,EAAK,EAALA,MAAO5D,EAAE,EAAFA,GACfkF,IAAY,kBAAKD,IAAQ,cAAGjF,EAAK4D,IACnC,EAAE,WAEF,mBAAQA,MAAM,KAAI,SAAC,aACnB,mBAAQA,MAAM,SAAQ,SAAC,wBACvB,mBAAQA,MAAM,WAAU,SAAC,8BAKjC,gBAAK9D,UAAU,iBAAgB,UAC7B,iBAAKA,UAAU,iBAAgB,WAC7B,mBAAOA,UAAU,QAAQ8M,QAAQ,mBAAkB,UAAC,oBAChC,QAEpB,iBAAM9M,UAAU,YAAW,SAAC,OAE5B,gBAAKA,UAAU,+BAA8B,UAC3C,SAAC,EAAAkN,wBAAuB,CACtBlN,UAAU,GACVmN,MAAO9L,EACP+L,KAAK,OACLnN,KAAK,OACLC,GAAG,OACHmN,UAAQ,EACRC,YAAa,CAAEzG,KAAM,CAAC,KAAM,SAC5B0G,oBAAoB,OACpBlM,SAAUA,EACVyK,YAAY,4BACZvD,YAAaA,GACbiF,SAAU,SAAClN,GACT8E,IAAY,SAACqI,GAAS,yBACjBA,GAAS,IACZ1I,KAAMzE,EAAEJ,IAAE,GAEd,EACAwN,QApJI,WACpBtI,IAAY,SAACsF,GAAI,yBAAWA,GAAI,IAAE3F,KAAM,IAAE,GAC5C,EAmJkB4I,UAAU,YAMlB,gBAAK3N,UAAU,iBAAgB,UAC7B,iBAAKA,UAAU,iBAAgB,WAC7B,mBAAOA,UAAU,QAAQ8M,QAAQ,MAAK,UAAC,WAC5B,iBAAM9M,UAAU,aAAY,SAAC,UAExC,iBAAMA,UAAU,YAAW,SAAC,OAC5B,gBAAKA,UAAU,QAAO,UACpB,gBACEA,UAAU,cACVyD,IAAK,SAACsJ,GACJtJ,GAAIsG,QAAQ,GAAKgD,CACnB,EAAE,UAEF,SAAC,KAAW,CACVb,cAAeA,GACfhM,GAAG,QACH0N,QAASnM,GACToM,cAAc,EACdC,WAAW,EACXC,qBAAqB,EACrBC,eAAe,EACflK,MAAOnC,GACPsM,cAAe7B,GACfiB,UAAU,EACVhN,SAAU,SAAC6N,GACTtM,GAAmBsM,GACnB,IAAIC,EAAkB,GACtBD,EAAEjI,SAAQ,SAAC+B,GACTmG,EAAgBnH,KAAKgB,EAAElE,MACzB,GAKF,cAMV,gBAAK9D,UAAU,iBAAgB,UAC7B,iBAAKA,UAAU,iBAAgB,WAC7B,mBAAOA,UAAU,QAAQ8M,QAAQ,kBAAiB,UAAC,wBAC3B,iBAAM9M,UAAU,aAAY,SAAC,UAErD,iBAAMA,UAAU,YAAW,SAAC,OAC5B,gBAAKA,UAAU,QAAO,UACpB,gBACEA,UAAU,cACVyD,IAAK,SAACsJ,GACJtJ,GAAIsG,QAAQ,GAAKgD,CACnB,EAAE,UAEF,SAAC,KAAW,CACVb,cAAeA,GACfhM,GAAG,OACH0N,QAAS3L,GACT4L,cAAc,EACdC,WAAW,EACXhK,MAAO3B,GACP8L,cAAe7B,GACf2B,qBAAqB,EACrBC,eAAe,EACfX,UAAU,EACVhN,SAAU,SAACC,GACT8B,GAAoB9B,GACpB,IAAI6N,EAAkB,GACtB7N,EAAE2F,SAAQ,SAAC+B,GACTmG,EAAgBnH,KAAKgB,EAAElE,MACzB,IACAsB,IAAY,SAACgJ,GAAO,yBACfA,GAAO,cACT,OAASD,EAAgBlG,YAAU,GAExC,cAOV,gBAAKjI,UAAU,iBAAgB,UAC7B,iBAAKA,UAAU,iBAAgB,WAC7B,mBAAOA,UAAU,QAAQ8M,QAAQ,mBAAkB,UAAC,gBACpC,QAEhB,iBAAM9M,UAAU,YAAW,SAAC,OAE5B,gBAAKA,UAAU,+BAA8B,UAC3C,SAAC,EAAAkN,wBAAuB,CACtBlN,UAAU,GACVmN,MAAO9L,EACP+L,KAAK,OACLnN,KAAK,OACLC,GAAG,OACHmN,UAAQ,EACRC,YAAa,CAAEzG,KAAM,CAAC,KAAM,SAC5B0G,oBAAoB,OACpBlM,SAAUA,EACVyK,YAAY,4BACZvD,YAAaA,GACbiF,SAAU,SAAClN,GACT8E,IAAY,SAACqI,GAAS,yBACjBA,GAAS,IACZvI,KAAM5E,EAAEJ,IAAE,GAEd,EACAyN,UAAU,EACVD,QApQI,WACpBtI,IAAY,SAACsF,GAAI,yBAAWA,GAAI,IAAExF,KAAM,IAAE,GAC5C,YAwQU,gBAAKlF,UAAU,qDAAoD,SAChE6B,IACC,SAACwM,EAAA,EAAM,CAACC,YA/tBF,WAClBjK,GAAgB0F,SAAW1F,GAAgB0F,QAAQwE,QACnDzM,IAAe,EACjB,KA8tBc,oBACEsL,KAAK,SACLpN,UAAU,kBACViM,MAAM,SACND,QAAS,WACPnC,KACApH,GAAgB,IAChBU,IAAgB,EAClB,EAAE,WAEF,SAAC,MAAQ,IAAG,uBAQxB,mBAECpB,KACC,gBACE/B,UAAU,sCACVkL,MAAO,CAAEC,UAAW,QAAS,UAE7B,UAAC,IAAS,CACRrH,MAAOzB,GACPrC,UAAU,sBACVwO,cAAc,WACdC,UAAWjM,GACXkM,SAAS,MACTC,KAAM,GACNC,eAAa,EACbC,WAAS,EACTC,kBAAmB,EACnBC,6BAA8B,CAAC,EAAG,GAAI,GAAI,IAC1CC,2BAA4B,CAC1BC,gBAAiB,oBACjBC,mBAAoB,UAEtBC,QAAQ,KACR9B,SAAUnK,GACVkM,kBAAmB,SAAC9O,GAAC,OA/qBP,SAACA,GACvBmC,GAAgBnC,EAAEwD,OACdxD,EAAEwD,OACJ9E,IAAW,EAEf,CA0qBoCqQ,CAAgB/O,EAAE,EAC5C2D,QAASA,GACT4H,OAAQA,GACRyD,aAAa,gBACbC,0BAA0B,2CAC1BC,kBAAkB,6FAClBC,mBAAoB,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,IAAI,WAG5C,SAAC,IAAM,CACLjB,cAAc,WACdkB,YAAa,CAAEC,MAAO,OAAQC,QAAS,YACvCC,KAAM,SAAC9Q,GAAO,OAAK,IAAI,KAGzB,SAAC,IAAM,CACL+Q,MAAM,OACNjE,OAAO,WACPgE,KA/iBK,SAAC9Q,GAChB,OAAOyD,GAAaK,KAAI,SAACmF,GAAC,OAAKA,EAAE9H,EAAE,IAAE6P,SAAShR,EAAQmB,KACpD,SAAC,KAAI,CACH+L,MAAOlN,EAAQkB,KACf+P,GAAE,qDAAgDjR,EAAQmB,IAC1DwJ,OAAO,SAAQ,SAEd3K,EAAQkB,MAWf,EA8hBYgQ,UAAQ,KAEV,SAAC,IAAM,CACLH,MAAM,UACNjE,OAAO,MACPgE,KAjiBK,SAAC9Q,GAChB,OAAOyD,GAAaK,KAAI,SAACmF,GAAC,OAAKA,EAAE9H,EAAE,IAAE6P,SAAShR,EAAQmB,KACpD,gBAAKF,UAAU,gCAA+B,UAC5C,SAAC,EAAAkN,wBAAuB,CACtBlN,UAAU,SACVmN,MAAO9L,EACPnB,GAAG,QACHD,KAAK,QACLiQ,kBAAsC,MAAnBnR,EAAQ0H,QAAkB,GAAK1H,EAAQ0H,QAC1D+G,SAAU,SAAClN,GACTqK,GAASrK,EAAGvB,GACZC,IAAW,GACXC,IAAc,EAChB,EACAyO,QAAS,SAACpN,GAAC,OApZC,SAACA,EAAGvB,GACtB,IAAMgM,EAA0BrI,GAAiBG,KAAI,SAACsN,GACpD,OAAIA,EAAIjQ,KAAOnB,EAAQmB,IACd,kBAAKiQ,GAAG,IAAEnF,MAAO,OAEnBmF,CACT,IAEAxN,GAAoBoI,GACpB/L,IAAW,GACXC,IAAc,EAChB,CAyYwBmR,CAAY9P,EAAGvB,EAAQ,EACvC+M,YAAY,iBACZ6B,UAAU,OAId,kBACE3N,UAAU,qBACVoN,KAAK,OACLnB,MAAOlN,EAAQ0H,QACfqF,YAAY,iBACZhI,MAAO/E,EAAQ0H,QACf4J,UAAQ,EACRC,QAAS,SAACC,GAAK,OAAKA,EAAM7G,OAAO8G,MAAM,GAG7C,EAogBYP,UAAQ,KAEV,SAAC,IAAM,CACLH,MAAM,SACNjE,OAAO,mBACPgE,KAvgBO,SAAC9Q,GAClB,OAAOyD,GAAaK,KAAI,SAACmF,GAAC,OAAKA,EAAE9H,EAAE,IAAE6P,SAAShR,EAAQmB,KACpD,gBAAKF,UAAU,yBAAwB,UACrC,SAAC,EAAAkN,wBAAuB,CACtBlN,UAAU,SACVmN,MAAO9L,EACPnB,GAAG,oBACHD,KAAK,oBACLiQ,kBAAqC,MAAlBnR,EAAQ2H,OAAiB,GAAK3H,EAAQ2H,OACzD8G,SAAU,SAAClN,IAxLD,SAACA,EAAGvB,GACpB,IAAM6L,EAAQlI,GAAiBmI,WAC7B,SAACC,GAAe,OAAKA,EAAgB5K,KAAOnB,EAAQmB,EAAE,IAElD6K,GAAuB,OAAOrI,IACpCqI,EAAwBH,IAAM,kBACzBG,EAAwBH,IAAM,IACjCU,KAAMhL,EAAEJ,KAEVyC,GAAoBoI,EACtB,CA+KU0F,CAAUnQ,EAAGvB,GACbC,IAAW,GACXC,IAAc,EAChB,EACAyO,QAAS,SAACpN,GAAC,OAvaE,SAACA,EAAGvB,GACvB,IAAMgM,EAA0BrI,GAAiBG,KAAI,SAACsN,GACpD,OAAIA,EAAIjQ,KAAOnB,EAAQmB,IACd,kBAAKiQ,GAAG,IAAE7E,KAAM,OAElB6E,CACT,IAEAxN,GAAoBoI,GACpB/L,IAAW,GACXC,IAAc,EAChB,CA4ZwByR,CAAapQ,EAAGvB,EAAQ,EACxC+M,YAAY,iBACZ6B,UAAU,OAId,kBACE3N,UAAU,qBACVoN,KAAK,OACLnB,MAAOlN,EAAQ2H,OACfoF,YAAY,iBACZhI,MAAO/E,EAAQ2H,OACf2J,UAAQ,EACRC,QAAS,SAACC,GAAK,OAAKA,EAAM7G,OAAO8G,MAAM,GAG7C,EA0eYP,UAAQ,EACR5P,SAAU,SAACC,GAAC,OAAKqK,GAASrK,EAAGvB,QAAQ,KAEvC,SAAC,IAAM,CACL+Q,MAAM,eACNjE,OAAO,oBACPgE,KA9eM,SAAC9Q,GAEjB,OADAiE,GAAUjE,EAAQ4R,OACXnO,GAAaK,KAAI,SAACmF,GAAC,OAAKA,EAAE9H,EAAE,IAAE6P,SAAShR,EAAQmB,KACpD,gBAAKF,UAAU,yBAAwB,UACrC,SAAC,EAAAkN,wBAAuB,CACtBlN,UAAU,SACVmN,MAAO9L,EACPnB,GAAG,gBACHD,KAAK,gBACLiQ,kBAC0B,MAAxBnR,EAAQ4H,aAAuB,GAAK5H,EAAQ4H,aAE9C6G,SAAU,SAAClN,IA/MD,SAACA,EAAGvB,GACpB,IAAM6L,EAAQlI,GAAiBmI,WAC7B,SAACC,GAAe,OAAKA,EAAgB5K,KAAOnB,EAAQmB,EAAE,IAElD6K,GAAuB,OAAOrI,IACpCqI,EAAwBH,IAAM,kBACzBG,EAAwBH,IAAM,IACjCW,cAAejL,EAAEJ,KAEnByC,GAAoBoI,EACtB,CAsMU6F,CAAUtQ,EAAGvB,GAEbC,IAAW,GACXC,IAAc,EAChB,EACAyO,QAAS,SAACpN,GAAC,OA9bE,SAACA,EAAGvB,GACvB,IAAMgM,EAA0BrI,GAAiBG,KAAI,SAACsN,GACpD,OAAIA,EAAIjQ,KAAOnB,EAAQmB,IACd,kBAAKiQ,GAAG,IAAE5E,cAAe,OAE3B4E,CACT,IAEAxN,GAAoBoI,GACpB/L,IAAW,GACXC,IAAc,EAChB,CAmbwB4R,CAAavQ,EAAGvB,EAAQ,EACxC+M,YAAY,iBACZ6B,UAAU,OAId,kBACE3N,UAAU,qBACVoN,KAAK,OACLnB,MAAOlN,EAAQ4H,aACfmF,YAAY,iBACZhI,MAAO/E,EAAQ4H,aACf0J,UAAQ,EACRC,QAAS,SAACC,GAAK,OAAKA,EAAM7G,OAAO8G,MAAM,GAG7C,EA6cYP,UAAQ,EACR5P,SAAU,SAACC,GAAC,OAAKqK,GAASrK,EAAGvB,QAAQ,KAEvC,SAAC,IAAM,CACL+Q,MAAM,iBACNjE,OAAO,wBACPgE,KA/aa,SAAC9Q,GACxB,OAAOyD,GAAaK,KAAI,SAACmF,GAAC,OAAKA,EAAE9H,EAAE,IAAE6P,SAAShR,EAAQmB,KACpD,gBAAKF,UAAU,aAAY,UACzB,SAAC,EAAiB,CAChBjB,QAASA,EACTkB,KAAK,QACLC,GAAG,QACHF,UAAU,SACVhB,WAAYA,GACZC,cAAeA,GACfC,aAAcA,GACdqB,WAAW,WACXG,gBAAgB,eAChBC,qBAAmB,OAIvB,kBACEX,UAAU,qBACVoN,KAAK,OACLnB,MAC4B,IAA1BlN,EAAQQ,eACJ,GACAD,IAAOP,EAAQQ,gBAAgBC,OAAO,YAE5CsM,YAAY,eACZhI,MAC4B,IAA1B/E,EAAQQ,eACJ,GACAD,IAAOP,EAAQQ,gBAAgBC,OAAO,YAE5C6Q,UAAQ,EACRC,QAAS,SAACC,GAAK,OAAKA,EAAM7G,OAAO8G,MAAM,GAG7C,EA6YYP,UAAQ,EACR5P,SAAU,SAACC,GAAC,OAAKqK,GAASrK,EAAGvB,QAAQ,KAEvC,SAAC,IAAM,CACL+Q,MAAM,mBACNjE,OAAO,gBACPgE,KAzdM,SAAC9Q,GAEjB,OADAuF,GAASvF,GACFyD,GAAaK,KAAI,SAACmF,GAAC,OAAKA,EAAE9H,EAAE,IAAE6P,SAAShR,EAAQmB,KACpD,gBAAKF,UAAU,yBAAwB,UACrC,SAAC,EAAAkN,wBAAuB,CACtBlN,UAAU,SACVmN,MAAO9L,EACPnB,GAAG,OACHD,KAAK,OACLiQ,kBAC8B,MAA5BnR,EAAQ6H,iBAA2B,GAAK7H,EAAQ6H,iBAElD4G,SAAU,SAAClN,IAtOD,SAACA,EAAGvB,GACpB,IAAM6L,EAAQlI,GAAiBmI,WAC7B,SAACC,GAAe,OAAKA,EAAgB5K,KAAOnB,EAAQmB,EAAE,IAElD6K,GAAuB,OAAOrI,IACpCqI,EAAwBH,IAAM,kBACzBG,EAAwBH,IAAM,IACjCY,eAAgBlL,EAAEJ,KAEpByC,GAAoBoI,EACtB,CA6NU+F,CAAUxQ,EAAGvB,GACbC,IAAW,GACXC,IAAc,EAChB,EACAyO,QAAS,SAACpN,GAAC,OAndE,SAACA,EAAGvB,GACvB,IAAMgM,EAA0BrI,GAAiBG,KAAI,SAACsN,GACpD,OAAIA,EAAIjQ,KAAOnB,EAAQmB,IACd,kBAAKiQ,GAAG,IAAE3E,eAAgB,OAE5B2E,CACT,IAEAxN,GAAoBoI,GACpB/L,IAAW,GACXC,IAAc,EAChB,CAwcwB8R,CAAazQ,EAAGvB,EAAQ,EACxC4O,UAAU,EACV7B,YAAY,sBAIhB,kBACE9L,UAAU,qBACVoN,KAAK,OACLnB,MAAOlN,EAAQ6H,iBACfkF,YAAY,iBACZhI,MAAO/E,EAAQ6H,iBACfyJ,UAAQ,EACRC,QAAS,SAACC,GAAK,OAAKA,EAAM7G,OAAO8G,MAAM,GAG7C,EAybYP,UAAQ,EACR5P,SAAU,SAACC,GAAC,OAAKqK,GAASrK,EAAGvB,QAAQ,KAIrC,SAAC,IAAM,CACL8M,OAAQ,WACN,OACE,gBAAKX,MAAO,CAAE8F,WAAY,MAAOrB,MAAO,QAAS,SAAC,eAItD,EACAG,MAAM,SACND,KAhaC,SAAC9Q,GACd,OAAOyD,GAAaK,KAAI,SAACmF,GAAC,OAAKA,EAAE9H,EAAE,IAAE6P,SAAShR,EAAQmB,KACpD,+BACE,SAAC,MAAM,CACLF,UAAU,GACViR,KAAK,QACLhF,MAAM,OACNiF,MAAM,OACNlF,QAASf,GACTkG,OAAO,eAIX,gBAAKpF,MAAM,qBAAoB,UAC7B,SAAC,MAAM,CAACmF,MAAM,OAAOD,KAAK,WAGhC,EAgZcvB,YAAa,CAAEC,MAAO,QACtByB,UAAW,CAAEC,UAAW,cA7DvB9M,OAmEX,iBAAKvE,UAAU,kCAAiC,UAChC,GAAb+B,IAAqBM,GAAUiE,OAAS,GACvC,oBACEtG,UAAU,kBACVoN,KAAK,SACLpB,QAAS,WACPf,IACF,EAAE,WAEF,SAAC,MAAM,CAACgB,MAAM,SAAS,UAIzB,GAEY,GAAblK,IAAqBM,GAAUiE,OAAS,GACvC,oBACEtG,UAAU,kBACVoN,KAAK,QACLpB,QAAS,SAAC1L,GAAC,OAroBnBmC,GAAgB,SAChBU,IAAgB,EAooBsB,EAAC,WAE/B,SAAC,MAAO,CAAC8I,MAAM,UAAU,WAI3B,OAGJ,SAACqF,EAAA,EAAmB,CAClBC,KAtqCK,EAuqCL3Q,QAASwC,GACTvC,WAAYwC,GACZ+E,iBAAkBA,GAClBD,cAAeA,OAIvB,C","sources":["views/Customer/CustomerRoleEffectiveDate.js","views/Customer/RoleMapping.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport DatePicker from \"react-datepicker\";\nimport moment from \"moment\";\nimport { useEffect } from \"react\";\n\nconst InputSixComponent = (props) => {\n  const { rowData, setDisable, setIsModified, onchangeDate } = props;\n\n  const [date1, setDate1] = useState(null);\n  const formattedDate = moment(rowData.effectiveMonth, \"YYYY-MM-DD\").format(\n    \"MMM-yyyy\"\n  );\n\n  useEffect(() => {\n    // setDate1(() => new Date(rowData.effectiveMonth));\n    setDate1(rowData.effectiveMonth ? new Date(rowData.effectiveMonth) : \"\");\n    if (rowData.effectiveMonth) {\n      let date = rowData.effectiveMonth;\n\n      const [year, month, day] = date.split(\"-\");\n      const formattedDate = `${new Date(year, month - 1, day).toLocaleString(\n        \"default\",\n        { month: \"short\" }\n      )}-${year}`;\n    }\n  }, [rowData, rowData.effectiveMonth]);\n\n  return (\n    <div>\n      <div className=\"datepicker\">\n        <DatePicker\n          name=\"month\"\n          id=\"month\"\n          className=\"cancel\"\n          selected={date1}\n          minDate={new Date(rowData.effectiveMonth)}\n          onChange={(e) => {\n            onchangeDate(e, rowData);\n            setDate1(e);\n            setDisable(false);\n            setIsModified(true);\n          }}\n          dateFormat=\"MMM-yyyy\"\n          onKeyDown={(e) => {\n            e.preventDefault();\n          }}\n          placeholderText=\"Select Month\"\n          showMonthYearPicker\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default InputSixComponent;\n","import React, { useEffect, useRef, useState } from \"react\";\nimport { DataTable } from \"primereact/datatable\";\nimport moment from \"moment\";\nimport { Column } from \"primereact/column\";\nimport { MultiSelect } from \"react-multi-select-component\";\nimport {\n  FaChevronCircleDown,\n  FaChevronCircleUp,\n  FaSearch,\n  FaCaretDown,\n} from \"react-icons/fa\";\nimport { CCollapse } from \"@coreui/react\";\nimport { environment } from \"../../environments/environment\";\nimport axios from \"axios\";\nimport { ReactSearchAutocomplete } from \"react-search-autocomplete\";\nimport Loader from \"../Loader/Loader\";\nimport { BiCheck, BiReset, BiSave } from \"react-icons/bi\";\nimport { FilterMatchMode } from \"primereact/api\";\nimport { InputText } from \"primereact/inputtext\";\nimport { Link } from \"react-router-dom\";\nimport SelectCustDialogBox from \"../Customer/SelectCustDialogBox\";\nimport GlobalValidation from \"../ValidationComponent/GlobalValidation\";\nimport { IoWarningOutline } from \"react-icons/io5\";\nimport { AiFillWarning } from \"react-icons/ai\";\nimport \"../Customer/Rolemapping.scss\";\nimport GlobalCancel from \"../ValidationComponent/GlobalCancel\";\nimport InputSixComponent from \"./CustomerRoleEffectiveDate\";\nimport * as XLSX from \"xlsx\";\nimport GlobalHelp from \"../PrimeReactTableComponent/GlobalHelp\";\nimport ScreenBreadcrumbs from \"../Common/ScreenBreadcrumbs\";\n\nfunction RoleMapping() {\n  const [visible, setVisible] = useState(false);\n  const [cheveronIcon, setCheveronIcon] = useState(FaChevronCircleUp);\n  const baseUrl = environment.baseUrl;\n  const [customer, setCustomer] = useState([]);\n  const [selectCustomer, setSelectCustomer] = useState([]);\n  const [resource, setResource] = useState([]);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [country, setCountry] = useState([]);\n  const [selectedCountry, setSelectedCountry] = useState([]);\n  const [loaderState, setLoaderState] = useState(false);\n  const [searching, setsearching] = useState(false);\n  const [delivery, setDelivery] = useState([]);\n  const [selectDelivery, setSelectedDelivery] = useState([]);\n  const [tableData, setTableData] = useState([{}]);\n  const [previousTableData, setPreviousTableData] = useState([]);\n  const [selectedRows, setSelectedRows] = useState([]);\n  const [selectedRowsData, setSelectedRowsData] = useState([]);\n  const Ids = selectedRowsData.map((item) => item.id).join(\",\");\n  const [cslId1, setCslId1] = useState(\"\");\n  const [isModified, setIsModified] = useState(false);\n  const [tableDisable, setTableDisable] = useState(false);\n  const [globalFilter, setGlobalFilter] = useState(null);\n  const [custVisible, setCustVisible] = useState(false);\n  const [custData, setcustData] = useState([]);\n  const [item, setItem] = useState([]);\n  const [validationMessage, setValidationMessage] = useState(false);\n  const ref = useRef([]);\n  const [globalFilterValue, setGlobalFilterValue] = useState(\"\");\n  const [filters, setFilters] = useState({\n    global: { value: null, matchMode: FilterMatchMode.CONTAINS },\n  });\n  const [disable, setDisable] = useState(true);\n  const [proposal, setProposal] = useState(false);\n  const abortController = useRef(null);\n  const [reset, setReset] = useState([]);\n  const [tableKey, setTableKey] = useState(0);\n  const [dropCslId, setDropCslId] = useState([]);\n  const [dpIds, setDpIds] = useState([]);\n  let flag = 1;\n  const HelpPDFName = \"MappingCustomer.pdf\";\n  const HelpHeader = \"Customer Mapping\";\n  const initialValue = {\n    CustIds: \"\",\n    CustStatus: \"active\",\n    AeId: \"\",\n    CslId: \"-1\",\n    DpId: \"-1\",\n    awId: \"\",\n  };\n  const [formData, setFormData] = useState(initialValue);\n\n  const loggedUserId = localStorage.getItem(\"resId\");\n\n  const [routes, setRoutes] = useState([]);\n  let textContent = \"Customers\";\n  let currentScreenName = [\"Role Mapping\"];\n\n  useEffect(() => {\n    getMenus();\n  }, []);\n\n  const getMenus = () => {\n    // setMenusData\n\n    axios({\n      method: \"GET\",\n      url: baseUrl + `/CommonMS/master/getMenus?loggedUserId=${loggedUserId}`,\n    }).then((resp) => {\n      let data = resp.data;\n\n      data.forEach((item) => {\n        if (item.display_name === textContent) {\n          setRoutes([item]);\n        }\n      });\n    });\n  };\n\n  const exportExcel = () => {\n    let dataInTable = [];\n    for (let i = 0; i < tableData.length; i++) {\n      const obj = {};\n\n      const labels = {\n        name: \"Customer\",\n        cslName: \"CSL\",\n        dpName: \"Delivery Partner\",\n        salesExeName: \"Account Executive\",\n        effectiveMonth: \"Effective Start Month\",\n        accountOwnerName: \"Account Owner\",\n      };\n\n      const keys = Object.keys(labels);\n      let modifiedValues = [];\n\n      for (let i = 0; i < keys.length; i++) {\n        modifiedValues.push(labels[keys[i]]);\n      }\n\n      for (let j = 0; j < keys.length; j++) {\n        const key = keys[j];\n        if (key === \"effectiveMonth\") {\n          const dateValue = tableData[i][key];\n          const formattedDate = dateValue ? formatDate(dateValue) : \"\";\n          obj[labels[key]] = formattedDate;\n        } else {\n          obj[labels[key]] = tableData[i][key];\n        }\n      }\n\n      dataInTable.push(obj);\n    }\n\n    var wb = XLSX.utils.book_new(dataInTable),\n      ws = XLSX.utils.json_to_sheet(dataInTable);\n\n    XLSX.utils.book_append_sheet(wb, ws, \"RoleMappingReport.xlsx\");\n\n    XLSX.writeFile(wb, \"RoleMappingReport.xlsx\");\n  };\n\n  const formatDate = (dateValue) => {\n    const date = new Date(dateValue);\n    const formattedDate = `${(\"0\" + date.getDate()).slice(\n      -2\n    )}-${date.toLocaleString(\"default\", {\n      month: \"short\",\n    })}-${date.getFullYear()}`;\n    return formattedDate;\n  };\n\n  const selectedCust = JSON.parse(localStorage.getItem(\"selectedCust\"))\n    ?.map((d) => d.id)\n    ?.toString();\n  const getcustData = () => {\n    axios\n      .get(baseUrl + `/CommonMS/master/geActiveCustomerList`)\n      .then((resp) => {\n        let customers = [];\n\n        let data = resp.data;\n\n        data.length > 0 &&\n          data.forEach((e) => {\n            let countryObj = {\n              label: e.fullName,\n              value: e.id,\n            };\n\n            customers.push(countryObj);\n          });\n        setCustomer(customers);\n        setSelectCustomer(customers);\n      });\n  };\n\n  const getcustData1 = () => {\n    axios\n      .get(baseUrl + `/CommonMS/master/geActiveCustomerList`)\n      .then((resp) => {\n        const data = resp.data;\n        setcustData(data);\n      })\n      .catch((resp) => {});\n  };\n\n  useEffect(() => {\n    getcustData1();\n  }, [item]);\n\n  const handleChange1 = (e) => {\n    const { id, name, value } = e.target;\n    if (name == \"Select Customer\" && value === \"select\") {\n      setCustVisible(true);\n      GlobalCancel(ref);\n    }\n    setcustData();\n    setFormData((prev) => {\n      return { ...prev, [name]: value };\n    });\n  };\n\n  const [selectedItems, setSelectedItems] = useState([{}]);\n  const Customer = selectedItems?.map((d) => d?.id).toString();\n\n  useEffect(() => {}, [item], [Customer], [formData.serarchVals]);\n\n  const handleCsl = () => {\n    axios({\n      method: \"get\",\n      url:\n        baseUrl +\n        `/SalesMS/MasterController/getCslDropDownData?userId=${loggedUserId}`,\n    }).then((Response) => {\n      let departments = [];\n      let deptIds = [];\n      let data = Response.data;\n      data.push({ id: 0, PersonName: \"UnAssigned\" });\n      data.length > 0 &&\n        data.forEach((e) => {\n          let countryObj = {\n            label: e.PersonName,\n            value: e.id,\n          };\n          departments.push(countryObj);\n          deptIds.push(countryObj.value);\n        });\n      setCountry(departments);\n      setSelectedCountry(departments);\n      const formattedString = deptIds.join(\",\");\n      setDropCslId(formattedString);\n    });\n  };\n\n  const handleClear = (e, rowData) => {\n    const updatedSelectedRowsData = selectedRowsData.map((row) => {\n      if (row.id === rowData.id) {\n        return { ...row, cslId: null };\n      }\n      return row;\n    });\n\n    setSelectedRowsData(updatedSelectedRowsData);\n    setDisable(true);\n    setIsModified(true);\n  };\n\n  const handleClear1 = (e, rowData) => {\n    const updatedSelectedRowsData = selectedRowsData.map((row) => {\n      if (row.id === rowData.id) {\n        return { ...row, dpId: null };\n      }\n      return row;\n    });\n\n    setSelectedRowsData(updatedSelectedRowsData);\n    setDisable(true);\n    setIsModified(true);\n  };\n\n  const handleClear2 = (e, rowData) => {\n    const updatedSelectedRowsData = selectedRowsData.map((row) => {\n      if (row.id === rowData.id) {\n        return { ...row, salesPersonId: null };\n      }\n      return row;\n    });\n\n    setSelectedRowsData(updatedSelectedRowsData);\n    setDisable(true);\n    setIsModified(true);\n  };\n\n  const handleClear3 = (e, rowData) => {\n    const updatedSelectedRowsData = selectedRowsData.map((row) => {\n      if (row.id === rowData.id) {\n        return { ...row, accountOwnerId: null };\n      }\n      return row;\n    });\n\n    setSelectedRowsData(updatedSelectedRowsData);\n    setDisable(true);\n    setIsModified(true);\n  };\n\n  const getDeliveryPartners = () => {\n    axios\n      .get(baseUrl + `/administrationms/subkconversiontrend/getdeliverypartner`)\n      .then((Response) => {\n        let deliver = [];\n        let deliveryId = [];\n        let data = Response.data;\n        data.push({ id: 0, PersonName: \"UnAssigned\" });\n        data.length > 0 &&\n          data.forEach((e) => {\n            let deliverObj = { label: e.PersonName, value: e.id };\n            deliver.push(deliverObj);\n            deliveryId.push(deliverObj.value);\n          });\n        setDelivery(deliver);\n        setSelectedDelivery(deliver);\n        const formattedDelIds = deliveryId.join(\",\");\n        setDpIds(formattedDelIds);\n      });\n  };\n\n  const resourceFnc = async () => {\n    await axios({\n      method: \"get\",\n      url: baseUrl + `/ProjectMS/risks/getAssignedData`,\n    }).then((res) => {\n      let manger = res.data;\n      setResource(manger);\n    });\n  };\n\n  const [issueDetails, setIssueDetails] = useState([]);\n  const getData = () => {\n    axios({\n      method: \"get\",\n      url: baseUrl + `/ProjectMS/risks/getAssignedData`,\n    }).then(function (response) {\n      var res = response.data;\n      setIssueDetails(res);\n    });\n  };\n\n  useEffect(() => {\n    getcustData();\n    resourceFnc();\n    handleCsl();\n    getDeliveryPartners();\n    getData();\n  }, []);\n\n  const onGlobalFilterChange = (e) => {\n    const value = e.target.value;\n    let _filters = { ...filters };\n\n    _filters[\"global\"].value = value;\n\n    setFilters(_filters);\n    setGlobalFilterValue(value);\n  };\n\n  const renderHeader = () => {\n    return (\n      <div className=\"primeTableSearch\">\n        <InputText\n          className=\"globalFilter\"\n          value={globalFilterValue}\n          onChange={onGlobalFilterChange}\n          placeholder=\"Keyword Search\"\n        />\n\n        <i\n          class=\"pi pi-file-excel exportBtn\"\n          onClick={exportExcel}\n          data-pr-tooltip=\"XLS\"\n          title=\"Export to Excel\"\n        ></i>\n      </div>\n    );\n  };\n\n  const handleAbort = () => {\n    abortController.current && abortController.current.abort();\n    setLoaderState(false);\n  };\n\n  var data = {\n    CustIds: selectedCust,\n    CustStatus: formData.CustStatus,\n    AeId: formData.AeId,\n    CslId: formData.CslId == dropCslId ? \"-1\" : formData.CslId,\n    DpId: formData.DpId == dpIds ? \"-1\" : formData.DpId,\n    awId: formData.awId,\n  };\n\n  const [xlData, setXlData] = useState([]);\n\n  const postData = () => {\n    let filteredData = ref.current.filter((d) => d != null);\n\n    ref.current = filteredData;\n\n    let valid = GlobalValidation(ref);\n\n    if (valid) {\n      {\n        setValidationMessage(true);\n        setsearching(false);\n        setTimeout(() => {\n          setValidationMessage(false);\n        }, 3000);\n      }\n      return;\n    }\n\n    setLoaderState(false);\n    abortController.current = new AbortController();\n\n    axios({\n      method: \"post\",\n      url: baseUrl + `/customersms/Customers/getRoleMapping`,\n      signal: abortController.current.signal,\n      data,\n    }).then((res) => {\n      const GetData = res.data;\n      for (let i = 0; i < GetData.length; i++) {\n        GetData[i][\"cslName\"] =\n          GetData[i][\"cslName\"] == \"\" ? \"\" : GetData[i][\"cslName\"];\n\n        GetData[i][\"dpName\"] =\n          GetData[i][\"dpName\"] == \"\" ? \"\" : GetData[i][\"dpName\"];\n\n        GetData[i][\"salesExeName\"] =\n          GetData[i][\"salesExeName\"] == \"\" ? \"\" : GetData[i][\"salesExeName\"];\n\n        GetData[i][\"accountOwnerName\"] =\n          GetData[i][\"accountOwnerName\"] == \"\"\n            ? \"\"\n            : GetData[i][\"accountOwnerName\"];\n\n        GetData[i][\"effectiveMonth\"] =\n          GetData[i][\"effectiveMonth\"] === \"\"\n            ? \"\"\n            : moment(GetData[i][\"effectiveMonth\"]).format(\"YYYY-MM-DD\");\n      }\n      let Headerdata = [\n        {\n          name: \"Customer\",\n          cslName: \"CSL\",\n          dpName: \"Delivery Partner\",\n          salesExeName: \"Account Executive\",\n          effectiveMonth: \"Effective Start Month\",\n          accountOwnerName: \"Account Owner\",\n        },\n      ];\n\n      setXlData(Headerdata.concat(GetData));\n      setTableData(GetData);\n      setPreviousTableData(GetData);\n      setLoaderState(false);\n      setsearching(true);\n      setTableKey((prevKey) => prevKey + 1);\n\n      setTimeout(() => {\n        setLoaderState(false);\n      }, 1000);\n      !valid && setVisible(!visible);\n      visible\n        ? setCheveronIcon(FaChevronCircleUp)\n        : setCheveronIcon(FaChevronCircleDown);\n    });\n  };\n\n  const handleSelection = (e) => {\n    setSelectedRows(e.value);\n    if (e.value) {\n      setDisable(false);\n    }\n  };\n\n  useEffect(() => {\n    setSelectedRowsData((prev) => selectedRows);\n  }, [selectedRows]);\n\n  const onchange = (e, rowData) => {\n    const index = selectedRowsData.findIndex(\n      (selectedRowData) => selectedRowData.id === rowData.id\n    );\n    const updatedSelectedRowsData = [...selectedRowsData];\n    updatedSelectedRowsData[index] = {\n      ...updatedSelectedRowsData[index],\n      cslId: e.id,\n    };\n    setSelectedRowsData(updatedSelectedRowsData);\n  };\n\n  const onchange1 = (e, rowData) => {\n    const index = selectedRowsData.findIndex(\n      (selectedRowData) => selectedRowData.id === rowData.id\n    );\n    const updatedSelectedRowsData = [...selectedRowsData];\n    updatedSelectedRowsData[index] = {\n      ...updatedSelectedRowsData[index],\n      dpId: e.id,\n    };\n    setSelectedRowsData(updatedSelectedRowsData);\n  };\n\n  const onchange2 = (e, rowData) => {\n    const index = selectedRowsData.findIndex(\n      (selectedRowData) => selectedRowData.id === rowData.id\n    );\n    const updatedSelectedRowsData = [...selectedRowsData];\n    updatedSelectedRowsData[index] = {\n      ...updatedSelectedRowsData[index],\n      salesPersonId: e.id,\n    };\n    setSelectedRowsData(updatedSelectedRowsData);\n  };\n\n  const onchange3 = (e, rowData) => {\n    const index = selectedRowsData.findIndex(\n      (selectedRowData) => selectedRowData.id === rowData.id\n    );\n    const updatedSelectedRowsData = [...selectedRowsData];\n    updatedSelectedRowsData[index] = {\n      ...updatedSelectedRowsData[index],\n      accountOwnerId: e.id,\n    };\n    setSelectedRowsData(updatedSelectedRowsData);\n  };\n\n  const onchangeDate = (e, rowData) => {\n    const index = selectedRowsData.findIndex(\n      (selectedRowData) => selectedRowData.id === rowData.id\n    );\n\n    const updatedSelectedRowsData = [...selectedRowsData];\n    updatedSelectedRowsData[index] = {\n      ...updatedSelectedRowsData[index],\n      effectiveMonth: moment(e).format(\"yyyy-MM-DD\"),\n    };\n    setSelectedRowsData(updatedSelectedRowsData);\n  };\n\n  const sendSelectedRowsData = () => {\n    if (isModified == false) {\n      setErrorMessage(\n        <div>\n          <AiFillWarning style={{ marginTop: \"-3px\" }} />\n          &nbsp;No Modifications found to save\n        </div>\n      );\n\n      setTimeout(() => {\n        setErrorMessage(null);\n      }, 3000);\n\n      return;\n    }\n    const formattedData = selectedRowsData.map((rowData) => ({\n      id: rowData.id,\n      cslId: rowData.cslId,\n      deliveryPartnerId: rowData.dpId,\n\n      salesPersonId: rowData.salesPersonId,\n\n      awId: rowData.accountOwnerId,\n\n      effectiveMonth: rowData.effectiveMonth,\n    }));\n\n    axios({\n      method: \"post\",\n      url: baseUrl + `/customersms/Customers/putRoleMapping`,\n      data: formattedData,\n    }).then((res) => {\n      if (res.status == 200) {\n        axios\n          .post(\n            baseUrl +\n              `/customersms/Customers/updateCustomerStakeholdersToProject`,\n            { CustIds: Ids }\n          )\n          .then((response) => {\n            console.log(response.data);\n          })\n          .catch((error) => {\n            console.error(error);\n          });\n        setTableDisable(true);\n        setProposal(true);\n        setIsModified(false);\n        setErrorMessage(false);\n        setTimeout(() => {\n          setErrorMessage(false);\n        }, 2000);\n        setTimeout(() => {\n          setProposal(false);\n        }, 3000);\n        postData();\n      }\n    });\n  };\n\n  const header = renderHeader();\n\n  const handleReset = () => {\n    setSelectedRows([]);\n    setTableDisable(false);\n  };\n\n  useEffect(() => {\n    if (tableDisable) {\n      setSelectedRows([]);\n      setTableDisable(false);\n      postData();\n    }\n  }, [tableDisable]);\n  const inputOne = (rowData) => {\n    return selectedRows.map((d) => d.id).includes(rowData.id) ? (\n      <Link\n        title={rowData.name}\n        to={`/search/customerSearch/customer/dashboard/:${rowData.id}`}\n        target=\"_blank\"\n      >\n        {rowData.name}\n      </Link>\n    ) : (\n      <Link\n        title={rowData.name}\n        to={`/search/customerSearch/customer/dashboard/:${rowData.id}`}\n        target=\"_blank\"\n      >\n        {rowData.name}\n      </Link>\n    );\n  };\n\n  const inputTwo = (rowData) => {\n    return selectedRows.map((d) => d.id).includes(rowData.id) ? (\n      <div className=\"autoComplete-container cancel\">\n        <ReactSearchAutocomplete\n          className=\"cancel\"\n          items={resource}\n          id=\"cslId\"\n          name=\"cslId\"\n          inputSearchString={rowData.cslName == null ? \"\" : rowData.cslName}\n          onSelect={(e) => {\n            onchange(e, rowData);\n            setDisable(false);\n            setIsModified(true);\n          }}\n          onClear={(e) => handleClear(e, rowData)}\n          placeholder=\"Type to Search\"\n          showIcon={false}\n        />\n      </div>\n    ) : (\n      <input\n        className=\"cursor-not-allowed\"\n        type=\"text\"\n        title={rowData.cslName}\n        placeholder=\"Type to Search\"\n        value={rowData.cslName}\n        readOnly\n        onFocus={(event) => event.target.blur()}\n      />\n    );\n  };\n\n  const inputThree = (rowData) => {\n    return selectedRows.map((d) => d.id).includes(rowData.id) ? (\n      <div className=\"autoComplete-container\">\n        <ReactSearchAutocomplete\n          className=\"cancel\"\n          items={resource}\n          id=\"deliveryPartnerId\"\n          name=\"deliveryPartnerId\"\n          inputSearchString={rowData.dpName == null ? \"\" : rowData.dpName}\n          onSelect={(e) => {\n            onchange1(e, rowData);\n            setDisable(false);\n            setIsModified(true);\n          }}\n          onClear={(e) => handleClear1(e, rowData)}\n          placeholder=\"Type to Search\"\n          showIcon={false}\n        />\n      </div>\n    ) : (\n      <input\n        className=\"cursor-not-allowed\"\n        type=\"text\"\n        title={rowData.dpName}\n        placeholder=\"Type to Search\"\n        value={rowData.dpName}\n        readOnly\n        onFocus={(event) => event.target.blur()}\n      />\n    );\n  };\n\n  const inputFour = (rowData) => {\n    setCslId1(rowData.cslid);\n    return selectedRows.map((d) => d.id).includes(rowData.id) ? (\n      <div className=\"autoComplete-container\">\n        <ReactSearchAutocomplete\n          className=\"cancel\"\n          items={resource}\n          id=\"salesPersonId\"\n          name=\"salesPersonId\"\n          inputSearchString={\n            rowData.salesExeName == null ? \"\" : rowData.salesExeName\n          }\n          onSelect={(e) => {\n            onchange2(e, rowData);\n\n            setDisable(false);\n            setIsModified(true);\n          }}\n          onClear={(e) => handleClear2(e, rowData)}\n          placeholder=\"Type to Search\"\n          showIcon={false}\n        />\n      </div>\n    ) : (\n      <input\n        className=\"cursor-not-allowed\"\n        type=\"text\"\n        title={rowData.salesExeName}\n        placeholder=\"Type to Search\"\n        value={rowData.salesExeName}\n        readOnly\n        onFocus={(event) => event.target.blur()}\n      />\n    );\n  };\n  const inputFive = (rowData) => {\n    setReset(rowData);\n    return selectedRows.map((d) => d.id).includes(rowData.id) ? (\n      <div className=\"autoComplete-container\">\n        <ReactSearchAutocomplete\n          className=\"cancel\"\n          items={resource}\n          id=\"awId\"\n          name=\"awId\"\n          inputSearchString={\n            rowData.accountOwnerName == null ? \"\" : rowData.accountOwnerName\n          }\n          onSelect={(e) => {\n            onchange3(e, rowData);\n            setDisable(false);\n            setIsModified(true);\n          }}\n          onClear={(e) => handleClear3(e, rowData)}\n          showIcon={false}\n          placeholder=\"Type to Search\"\n        />\n      </div>\n    ) : (\n      <input\n        className=\"cursor-not-allowed\"\n        type=\"text\"\n        title={rowData.accountOwnerName}\n        placeholder=\"Type to Search\"\n        value={rowData.accountOwnerName}\n        readOnly\n        onFocus={(event) => event.target.blur()}\n      />\n    );\n  };\n\n  const AnotherComponent = (rowData) => {\n    return selectedRows.map((d) => d.id).includes(rowData.id) ? (\n      <div className=\"datepicker\">\n        <InputSixComponent\n          rowData={rowData}\n          name=\"month\"\n          id=\"month\"\n          className=\"cancel\"\n          setDisable={setDisable}\n          setIsModified={setIsModified}\n          onchangeDate={onchangeDate}\n          dateFormat=\"MMM-yyyy\"\n          placeholderText=\"Select Month\"\n          showMonthYearPicker\n        />\n      </div>\n    ) : (\n      <input\n        className=\"cursor-not-allowed\"\n        type=\"text\"\n        title={\n          rowData.effectiveMonth == \"\"\n            ? \"\"\n            : moment(rowData.effectiveMonth).format(\"MMM-yyyy\")\n        }\n        placeholder=\"Select Month\"\n        value={\n          rowData.effectiveMonth == \"\"\n            ? \"\"\n            : moment(rowData.effectiveMonth).format(\"MMM-yyyy\")\n        }\n        readOnly\n        onFocus={(event) => event.target.blur()}\n      />\n    );\n  };\n\n  const Action = (rowData) => {\n    return selectedRows.map((d) => d.id).includes(rowData.id) ? (\n      <>\n        <BiSave\n          className=\"\"\n          size=\"1.5em\"\n          title=\"Save\"\n          color=\"blue\"\n          onClick={sendSelectedRowsData}\n          cursor=\"pointer\"\n        />\n      </>\n    ) : (\n      <div class=\"cursor-not-allowed\">\n        <BiSave color=\"#666\" size=\"1.5em\" />\n      </div>\n    );\n  };\n\n  <InputText\n    value={globalFilter}\n    onChange={(e) => setGlobalFilter(e.target.value)}\n    placeholder=\"Search\"\n  />;\n\n  const ArrowRenderer = ({ expanded }) => (\n    <>\n      {expanded ? (\n        <FaCaretDown className=\"chevronIcon\" />\n      ) : (\n        <FaCaretDown className=\"chevronIcon\" />\n      )}\n    </>\n  );\n\n  const handleClearAe = () => {\n    setFormData((prev) => ({ ...prev, AeId: \"\" }));\n  };\n  const handleClearAo = () => {\n    setFormData((prev) => ({ ...prev, awId: \"\" }));\n  };\n\n  const generateDropdownLabel = (selectedOptions, allOptions) => {\n    const selectedValues = selectedOptions.map((option) => option.value);\n    const allValues = allOptions.map((item) => item.value);\n\n    if (selectedValues.length === allValues.length) {\n      return \"<< ALL >>\";\n    } else {\n      return selectedOptions.map((option) => option.label).join(\", \");\n    }\n  };\n\n  return (\n    <div>\n      {errorMessage && <div className=\"statusMsg error\">{errorMessage}</div>}\n      {validationMessage ? (\n        <div className=\"statusMsg error\">\n          {\" \"}\n          <span>\n            {\" \"}\n            <IoWarningOutline /> Please select the valid values for highlighted\n            fields{\" \"}\n          </span>\n        </div>\n      ) : (\n        \"\"\n      )}\n      {proposal ? (\n        <div className=\"statusMsg success\">\n          <BiCheck />\n          {\"Proposal saved successfully.\"}\n        </div>\n      ) : (\n        \"\"\n      )}\n      <div className=\"col-md-12\">\n        <div className=\"pageTitle\">\n          <div className=\"childOne\"></div>\n          <div className=\"childTwo\">\n            <h2>Role Mapping</h2>\n          </div>\n          <div className=\"childThree\"></div>\n        </div>\n      </div>\n      <ScreenBreadcrumbs\n        routes={routes}\n        currentScreenName={currentScreenName}\n      />\n\n      <div className=\"group mb-2 customCard\">\n        <div className=\"col-md-12 collapseHeader\">\n          <h2>Search Filters</h2>\n          <div className=\"helpBtn\">\n            <GlobalHelp pdfname={HelpPDFName} name={HelpHeader} />\n          </div>\n          <div\n            onClick={() => {\n              setVisible(!visible);\n\n              visible\n                ? setCheveronIcon(FaChevronCircleUp)\n                : setCheveronIcon(FaChevronCircleDown);\n            }}\n          >\n            <span>{cheveronIcon}</span>\n          </div>\n        </div>\n        <CCollapse visible={!visible}>\n          <div className=\"group-content row\">\n            <div className=\" col-md-3 mb-2\">\n              <div className=\"form-group row\">\n                <label className=\"col-5\" htmlFor=\"customers\">\n                  Customers&nbsp;<span className=\"error-text\">*</span>\n                </label>\n                <span className=\"col-1 p-0\">:</span>\n                <div className=\"col-6\">\n                  <select\n                    ref={(ele) => {\n                      ref.current[0] = ele;\n                    }}\n                    className=\"text cancel\"\n                    name=\"Select Customer\"\n                    id=\"searchType\"\n                    onChange={handleChange1}\n                  >\n                    {selectedItems.length + \"selected\"}\n                    <option value=\"\"> &lt;&lt;Please Select&gt;&gt;</option>\n\n                    <option value=\"select\">Select Customer</option>\n                  </select>\n                </div>\n              </div>\n            </div>\n            <div className=\" col-md-3 mb-2\">\n              <div className=\"form-group row\">\n                <label className=\"col-5\" htmlFor=\"custstatus\">\n                  Cust. Status\n                </label>\n                <span className=\"col-1 p-0\">:</span>\n                <div className=\"col-6\">\n                  <select\n                    id=\"CustStatus\"\n                    name=\"CustStatus\"\n                    defaultValue={\"active\"}\n                    onChange={(e) => {\n                      const { value, id } = e.target;\n                      setFormData({ ...formData, [id]: value });\n                    }}\n                  >\n                    <option value=\"-1\">&lt;&lt;All&gt;&gt;</option>\n                    <option value=\"active\">Having Allocations</option>\n                    <option value=\"inactive\">No Allocations</option>\n                  </select>\n                </div>\n              </div>\n            </div>\n            <div className=\" col-md-3 mb-2\">\n              <div className=\"form-group row\">\n                <label className=\"col-6\" htmlFor=\"accountexecutive\">\n                  Account Executive{\" \"}\n                </label>\n                <span className=\"col-1 p-0\">:</span>\n\n                <div className=\"col-5 autoComplete-container\">\n                  <ReactSearchAutocomplete\n                    className=\"\"\n                    items={resource}\n                    type=\"Text\"\n                    name=\"AeId\"\n                    id=\"AeId\"\n                    disabled\n                    fuseOptions={{ keys: [\"id\", \"name\"] }}\n                    resultStringKeyName=\"name\"\n                    resource={resource}\n                    placeholder=\"Type minimum 3 characters\"\n                    resourceFnc={resourceFnc}\n                    onSelect={(e) => {\n                      setFormData((prevProps) => ({\n                        ...prevProps,\n                        AeId: e.id,\n                      }));\n                    }}\n                    onClear={handleClearAe}\n                    showIcon={false}\n                  />\n                </div>\n              </div>\n            </div>\n\n            <div className=\" col-md-3 mb-2\">\n              <div className=\"form-group row\">\n                <label className=\"col-5\" htmlFor=\"csl\">\n                  CSL&nbsp;<span className=\"error-text\">*</span>\n                </label>\n                <span className=\"col-1 p-0\">:</span>\n                <div className=\"col-6\">\n                  <div\n                    className=\"multiselect\"\n                    ref={(ele) => {\n                      ref.current[1] = ele;\n                    }}\n                  >\n                    <MultiSelect\n                      ArrowRenderer={ArrowRenderer}\n                      id=\"CslId\"\n                      options={country}\n                      hasSelectAll={true}\n                      isLoading={false}\n                      shouldToggleOnHover={false}\n                      disableSearch={false}\n                      value={selectedCountry}\n                      valueRenderer={generateDropdownLabel}\n                      disabled={false}\n                      onChange={(s) => {\n                        setSelectedCountry(s);\n                        let filteredCountry = [];\n                        s.forEach((d) => {\n                          filteredCountry.push(d.value);\n                        });\n                        (prevVal) => ({\n                          ...prevVal,\n                          [\"CslId\"]: filteredCountry.toString(),\n                        });\n                      }}\n                    />\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className=\" col-md-3 mb-2\">\n              <div className=\"form-group row\">\n                <label className=\"col-5\" htmlFor=\"deliverypartner\">\n                  Delivery Partner&nbsp;<span className=\"error-text\">*</span>\n                </label>\n                <span className=\"col-1 p-0\">:</span>\n                <div className=\"col-6\">\n                  <div\n                    className=\"multiselect\"\n                    ref={(ele) => {\n                      ref.current[2] = ele;\n                    }}\n                  >\n                    <MultiSelect\n                      ArrowRenderer={ArrowRenderer}\n                      id=\"DpId\"\n                      options={delivery}\n                      hasSelectAll={true}\n                      isLoading={false}\n                      value={selectDelivery}\n                      valueRenderer={generateDropdownLabel}\n                      shouldToggleOnHover={false}\n                      disableSearch={false}\n                      disabled={false}\n                      onChange={(e) => {\n                        setSelectedDelivery(e);\n                        let filteredCountry = [];\n                        e.forEach((d) => {\n                          filteredCountry.push(d.value);\n                        });\n                        setFormData((prevVal) => ({\n                          ...prevVal,\n                          [\"DpId\"]: filteredCountry.toString(),\n                        }));\n                      }}\n                    />\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            <div className=\" col-md-3 mb-2\">\n              <div className=\"form-group row\">\n                <label className=\"col-5\" htmlFor=\"accountexecutive\">\n                  Account Owner{\" \"}\n                </label>\n                <span className=\"col-1 p-0\">:</span>\n\n                <div className=\"col-6 autoComplete-container\">\n                  <ReactSearchAutocomplete\n                    className=\"\"\n                    items={resource}\n                    type=\"Text\"\n                    name=\"awId\"\n                    id=\"awId\"\n                    disabled\n                    fuseOptions={{ keys: [\"id\", \"name\"] }}\n                    resultStringKeyName=\"name\"\n                    resource={resource}\n                    placeholder=\"Type minimum 3 characters\"\n                    resourceFnc={resourceFnc}\n                    onSelect={(e) => {\n                      setFormData((prevProps) => ({\n                        ...prevProps,\n                        awId: e.id,\n                      }));\n                    }}\n                    showIcon={false}\n                    onClear={handleClearAo}\n                  />\n                </div>\n              </div>\n            </div>\n\n            <div className=\"col-md-12 col-sm-12 col-xs-12 btn-container center\">\n              {loaderState ? (\n                <Loader handleAbort={handleAbort} />\n              ) : (\n                <button\n                  type=\"submit\"\n                  className=\"btn btn-primary\"\n                  title=\"Search\"\n                  onClick={() => {\n                    postData();\n                    setSelectedRows([]);\n                    setTableDisable(false);\n                  }}\n                >\n                  <FaSearch />\n                  Search\n                </button>\n              )}\n            </div>\n          </div>\n        </CCollapse>\n      </div>\n      <div></div>\n\n      {searching && (\n        <div\n          className=\"p-fluid roleMappingTable darkHeader\"\n          style={{ marginTop: \"-2px\" }}\n        >\n          <DataTable\n            value={tableData}\n            className=\"primeReactDataTable\"\n            selectionMode=\"checkbox\"\n            selection={selectedRows}\n            editMode=\"row\"\n            rows={25}\n            showGridlines\n            paginator\n            paginationPerPage={5}\n            paginationRowsPerPageOptions={[5, 15, 25, 50]}\n            paginationComponentOptions={{\n              rowsPerPageText: \"Records per page:\",\n              rangeSeparatorText: \"out of\",\n            }}\n            dataKey=\"id\"\n            disabled={tableDisable}\n            onSelectionChange={(e) => handleSelection(e)}\n            filters={filters}\n            header={header}\n            emptyMessage=\"No Data Found\"\n            currentPageReportTemplate=\"View {first} - {last} of {totalRecords} \"\n            paginatorTemplate=\"RowsPerPageDropdown FirstPageLink PrevPageLink CurrentPageReport NextPageLink LastPageLink\"\n            rowsPerPageOptions={[5, 10, 15, 20, 25, 30]}\n            key={tableKey}\n          >\n            <Column\n              selectionMode=\"multiple\"\n              headerStyle={{ width: \"3rem\", padding: \"0px 22px\" }}\n              body={(rowData) => null}\n            ></Column>\n\n            <Column\n              field=\"name\"\n              header=\"Customer\"\n              body={inputOne}\n              sortable\n            ></Column>\n            <Column\n              field=\"cslName\"\n              header=\"CSL\"\n              body={inputTwo}\n              sortable\n            ></Column>\n            <Column\n              field=\"dpName\"\n              header=\"Delivery Partner\"\n              body={inputThree}\n              sortable\n              onChange={(e) => onchange(e, rowData)}\n            ></Column>\n            <Column\n              field=\"salesExeName\"\n              header=\"Account Executive\"\n              body={inputFour}\n              sortable\n              onChange={(e) => onchange(e, rowData)}\n            ></Column>\n            <Column\n              field=\"effectiveMonth\"\n              header=\"Effective Start Month\"\n              body={AnotherComponent}\n              sortable\n              onChange={(e) => onchange(e, rowData)}\n            ></Column>\n            <Column\n              field=\"accountOwnerName\"\n              header=\"Account Owner\"\n              body={inputFive}\n              sortable\n              onChange={(e) => onchange(e, rowData)}\n            ></Column>\n\n            {\n              <Column\n                header={() => {\n                  return (\n                    <div style={{ marginLeft: \"-2%\", width: \"107%\" }}>\n                      Action Item\n                    </div>\n                  );\n                }}\n                field=\"action\"\n                body={Action}\n                headerStyle={{ width: \"80px\" }}\n                bodyStyle={{ textAlign: \"center\" }}\n              ></Column>\n            }\n          </DataTable>\n        </div>\n      )}\n      <div className=\"btn-container center  mt-2 my-3\">\n        {searching == true && tableData.length > 0 ? (\n          <button\n            className=\"btn btn-primary\"\n            type=\"submit\"\n            onClick={() => {\n              sendSelectedRowsData();\n            }}\n          >\n            <BiSave title=\"Save\" />\n            Save\n          </button>\n        ) : (\n          \"\"\n        )}\n        {searching == true && tableData.length > 0 ? (\n          <button\n            className=\"btn btn-primary\"\n            type=\"Reset\"\n            onClick={(e) => handleReset(e)}\n          >\n            <BiReset title=\"Reset\" />\n            Reset\n          </button>\n        ) : (\n          \"\"\n        )}\n      </div>\n      <SelectCustDialogBox\n        flag={flag}\n        visible={custVisible}\n        setVisible={setCustVisible}\n        setSelectedItems={setSelectedItems}\n        selectedItems={selectedItems}\n      />\n    </div>\n  );\n}\n\nexport default RoleMapping;\n"],"names":["props","rowData","setDisable","setIsModified","onchangeDate","useState","date1","setDate1","moment","effectiveMonth","format","useEffect","Date","split","year","month","day","toLocaleString","className","name","id","selected","minDate","onChange","e","dateFormat","onKeyDown","preventDefault","placeholderText","showMonthYearPicker","visible","setVisible","FaChevronCircleUp","cheveronIcon","setCheveronIcon","baseUrl","environment","setCustomer","setSelectCustomer","resource","setResource","errorMessage","setErrorMessage","country","setCountry","selectedCountry","setSelectedCountry","loaderState","setLoaderState","searching","setsearching","delivery","setDelivery","selectDelivery","setSelectedDelivery","tableData","setTableData","setPreviousTableData","selectedRows","setSelectedRows","selectedRowsData","setSelectedRowsData","Ids","map","item","join","setCslId1","isModified","tableDisable","setTableDisable","custVisible","setCustVisible","setcustData","validationMessage","setValidationMessage","ref","useRef","globalFilterValue","setGlobalFilterValue","global","value","matchMode","FilterMatchMode","filters","setFilters","proposal","setProposal","abortController","setReset","tableKey","setTableKey","dropCslId","setDropCslId","dpIds","setDpIds","CustIds","CustStatus","AeId","CslId","DpId","awId","formData","setFormData","loggedUserId","localStorage","getItem","routes","setRoutes","getMenus","axios","method","url","then","resp","data","forEach","display_name","exportExcel","dataInTable","i","length","obj","labels","cslName","dpName","salesExeName","accountOwnerName","keys","Object","modifiedValues","push","j","key","dateValue","formattedDate","formatDate","wb","XLSX","ws","date","getDate","slice","getFullYear","selectedCust","JSON","parse","d","toString","catch","selectedItems","setSelectedItems","Customer","serarchVals","resourceFnc","res","manger","setIssueDetails","customers","countryObj","label","fullName","Response","departments","deptIds","PersonName","formattedString","deliver","deliveryId","deliverObj","formattedDelIds","response","onGlobalFilterChange","target","_filters","setXlData","postData","filteredData","current","filter","valid","GlobalValidation","setTimeout","AbortController","signal","GetData","concat","prevKey","FaChevronCircleDown","prev","onchange","index","findIndex","selectedRowData","updatedSelectedRowsData","cslId","sendSelectedRowsData","style","marginTop","formattedData","deliveryPartnerId","dpId","salesPersonId","accountOwnerId","status","console","log","error","header","placeholder","class","onClick","title","ArrowRenderer","expanded","generateDropdownLabel","selectedOptions","allOptions","selectedValues","option","allValues","ScreenBreadcrumbs","currentScreenName","GlobalHelp","pdfname","htmlFor","ele","GlobalCancel","defaultValue","ReactSearchAutocomplete","items","type","disabled","fuseOptions","resultStringKeyName","onSelect","prevProps","onClear","showIcon","options","hasSelectAll","isLoading","shouldToggleOnHover","disableSearch","valueRenderer","s","filteredCountry","prevVal","Loader","handleAbort","abort","selectionMode","selection","editMode","rows","showGridlines","paginator","paginationPerPage","paginationRowsPerPageOptions","paginationComponentOptions","rowsPerPageText","rangeSeparatorText","dataKey","onSelectionChange","handleSelection","emptyMessage","currentPageReportTemplate","paginatorTemplate","rowsPerPageOptions","headerStyle","width","padding","body","field","includes","to","sortable","inputSearchString","row","handleClear","readOnly","onFocus","event","blur","onchange1","handleClear1","cslid","onchange2","handleClear2","onchange3","handleClear3","marginLeft","size","color","cursor","bodyStyle","textAlign","SelectCustDialogBox","flag"],"sourceRoot":""}