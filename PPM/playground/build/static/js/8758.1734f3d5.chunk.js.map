{"version":3,"file":"static/js/8758.1734f3d5.chunk.js","mappings":"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","sources":["views/SalesUpload/SalesUploadMapping.js","views/SalesUpload/SalesUploadSigningsTargets.js","views/SalesUpload/SalesUploadSoftwareTargets.js","views/SalesUpload/SalesUploadParent.js"],"sourcesContent":["import { CCollapse } from \"@coreui/react\";\nimport React, { useState } from \"react\";\nimport {\n  FaChevronCircleDown,\n  FaChevronCircleUp,\n  FaSearch,\n  FaCaretDown,\n  FaDownload,\n} from \"react-icons/fa\";\nimport axios from \"axios\";\nimport { environment } from \"../../environments/environment\";\nimport { FileUpload } from \"@mui/icons-material\";\nimport { ImCross } from \"react-icons/im\";\nconst SalesUploadMapping = (props) => {\n  const {\n    setMessageSoftware,\n    setMessageMapping,\n    setMessage,\n    setMessageMappingWrong,\n    setUploadMessageMapping,\n    setUploadMessageTarget,\n    setUploadMessageSigning,\n    setUploadMessageSoftware,\n    setMessage1,\n    setMessageSignings,\n    setMessageSigningsWrong,\n    setMessageSoftwareWrong,\n  } = props;\n  const loggedUserId = localStorage.getItem(\"resId\");\n  const baseUrl = environment.baseUrl;\n  const [visible, setVisible] = useState(false);\n  const [cheveronIcon, setCheveronIcon] = useState(FaChevronCircleUp);\n  const onFileChangeHandler = (e) => {\n    setSelectedFile(e.target.files[0]);\n  };\n  const [selectedFile, setSelectedFile] = useState([]);\n  const [key, setKey] = useState(0);\n  const downloadEmployeeData = () => {\n    const docUrl =\n      baseUrl + `/CommonMS/document/downloadFile?documentId=64452520`;\n\n    axios({\n      url: docUrl,\n      method: \"GET\",\n      responseType: \"blob\",\n    }).then((response) => {\n      const contentType = response.headers[\"content-type\"];\n      const extension = \".xlsx\";\n      const blob = new Blob([response.data], { type: contentType });\n      const url = window.URL.createObjectURL(blob);\n      const link = document.createElement(\"a\");\n      link.href = url;\n      link.setAttribute(\n        \"download\",\n        `Sales Mapping Upload Template${extension}`\n      );\n      document.body.appendChild(link);\n      link.click();\n    });\n  };\n  const handleSaveClick = () => {\n    setMessageMapping(false);\n    setUploadMessageTarget(false);\n    axios\n      .postForm(\n        baseUrl +\n          `/SalesMS/pmo/uploadSalesTargets/?loggedUserId=${loggedUserId}&type=custForecast&upload=1`,\n        {\n          fileUpload: selectedFile,\n        },\n        {\n          headers: {\n            \"Content-Type\": \"multipart/form-data\",\n          },\n        }\n      )\n      .then((res) => {\n        setMessageMapping(true);\n        setMessageMappingWrong(false);\n        setUploadMessageMapping(false);\n        setTimeout(() => {\n          setMessageMapping(false);\n        }, 3000);\n        setKey((prevKey) => prevKey + 1);\n        setSelectedFile([]);\n      });\n  };\n  const handleCancelClick = () => {\n    setKey((prevKey) => prevKey + 1);\n  };\n\n  const errorDisp = () => {\n    setMessageMappingWrong(true);\n    setMessageMapping(false);\n    setUploadMessageMapping(false);\n    setUploadMessageTarget(false);\n    setUploadMessageSigning(false);\n    setUploadMessageSoftware(false);\n    setTimeout(() => {\n      setMessageMappingWrong(false);\n    }, 3000);\n    setKey((prevKey) => prevKey + 1);\n    setSelectedFile([]);\n  };\n  const noFile = () => {\n    setMessageSignings(false);\n    setMessageSoftware(false);\n    setUploadMessageMapping(true);\n    setMessage(false);\n    setMessage1(false);\n    setMessageSigningsWrong(false),\n      setMessageSoftwareWrong(false),\n      setMessageMappingWrong(false);\n    setMessageMapping(false);\n    setUploadMessageTarget(false);\n    setUploadMessageSigning(false);\n    setUploadMessageSoftware(false);\n    setTimeout(() => {\n      setUploadMessageMapping(false);\n    }, 3000);\n  };\n\n  return (\n    <>\n      <div className=\"group customCard\">\n        <div className=\"col-md-12 collapseHeader\">\n          <h2\n            style={{ cursor: \"pointer\" }}\n            onClick={() => {\n              setVisible(!visible);\n            }}\n          >\n            Mappings\n          </h2>\n\n          <div\n            onClick={() => {\n              setVisible(!visible);\n\n              visible\n                ? setCheveronIcon(FaChevronCircleUp)\n                : setCheveronIcon(FaChevronCircleDown);\n            }}\n          >\n            <span>{cheveronIcon}</span>\n          </div>\n        </div>\n        <CCollapse visible={!visible}>\n          <div className=\"group-content row\">\n            <div className=\"col-md-12 mb-2 row\">\n              <label className=\"col-2\" htmlFor=\"text-input-inline\">\n                <strong>\n                  Upload Mappings <span className=\"error-text\">*</span>\n                </strong>\n              </label>\n              <span className=\"col-1 p-0\">:</span>\n              <div className=\"col-2\">\n                <input\n                  key={key}\n                  type=\"file\"\n                  name=\"file\"\n                  className=\"fileUpload unique1 form-control\"\n                  id=\"file\"\n                  onChange={onFileChangeHandler}\n                />\n              </div>\n              <div className=\"col-7 d-flex align-items-center\">\n                <button\n                  className=\"btn btn-primary mr-2\"\n                  title=\"Save\"\n                  onClick={() => {\n                    selectedFile.name?.includes(\"Sales Mapping Upload Template\")\n                      ? handleSaveClick()\n                      : selectedFile.name == undefined\n                      ? noFile()\n                      : errorDisp();\n                  }}\n                >\n                  <FileUpload /> Upload\n                </button>\n                <button\n                  className=\"btn btn-secondary\"\n                  title=\"cancel\"\n                  onClick={handleCancelClick}\n                >\n                  <ImCross /> Cancel\n                </button>\n                <button\n                  style={{ marginLeft: \"auto\" }}\n                  className=\"btn btn-primary\"\n                  title={\"Dowload Upload Mappings Template \"}\n                  onClick={() => {\n                    downloadEmployeeData();\n                  }}\n                >\n                  <FaDownload />\n                  Download Template\n                </button>\n              </div>\n              <div></div>\n            </div>\n          </div>\n        </CCollapse>\n      </div>\n    </>\n  );\n};\n\nexport default SalesUploadMapping;\n","import { CCollapse } from \"@coreui/react\";\nimport React, { useState } from \"react\";\nimport {\n  FaChevronCircleDown,\n  FaChevronCircleUp,\n  FaSearch,\n  FaCaretDown,\n  FaDownload,\n} from \"react-icons/fa\";\nimport axios from \"axios\";\nimport { environment } from \"../../environments/environment\";\nimport { FileUpload } from \"@mui/icons-material\";\nimport { ImCross } from \"react-icons/im\";\n\nfunction SalesUploadSigningsTargets(props) {\n  const {\n    setMessageSoftware,\n    setMessageSignings,\n    setMessage,\n    setMessageSigningsWrong,\n    setUploadMessageMapping,\n    setUploadMessageSoftware,\n    setUploadMessageTarget,\n    setUploadMessageSigning,\n    setMessageMappingWrong,\n    setMessage1,\n    uploadMessageSoftware,\n    setMessageSoftwareWrong,\n    setMessageMapping,\n  } = props;\n  const loggedUserId = localStorage.getItem(\"resId\");\n  const baseUrl = environment.baseUrl;\n  const [visible, setVisible] = useState(false);\n  const [cheveronIcon, setCheveronIcon] = useState(FaChevronCircleUp);\n  const onFileChangeHandler = (e) => {\n    setSelectedFile(e.target.files[0]);\n  };\n  const [selectedFile, setSelectedFile] = useState([]);\n  const [key, setKey] = useState(0);\n  const downloadEmployeeData = () => {\n    const docUrl =\n      baseUrl + `/CommonMS/document/downloadFile?documentId=97855678`;\n    axios({\n      url: docUrl,\n      method: \"GET\",\n      responseType: \"blob\",\n    }).then((response) => {\n      const contentType = response.headers[\"content-type\"];\n      const extension = \".xlsx\";\n      const blob = new Blob([response.data], { type: contentType });\n      const url = window.URL.createObjectURL(blob);\n      const link = document.createElement(\"a\");\n      link.href = url;\n      link.setAttribute(\n        \"download\",\n        `Sales Signings Target Upload Template${extension}`\n      );\n      document.body.appendChild(link);\n      link.click();\n    });\n  };\n\n  const handleSaveClick = () => {\n    setMessageSignings(false);\n    axios\n      .postForm(\n        baseUrl +\n          `/SalesMS/pmo/uploadSalesTargets/?loggedUserId=${loggedUserId}&type=signingsTargets&upload=1`,\n        {\n          fileUpload: selectedFile,\n        },\n        {\n          headers: {\n            \"Content-Type\": \"multipart/form-data\",\n          },\n        }\n      )\n      .then((res) => {\n        setMessageSignings(true);\n        setMessageSigningsWrong(false);\n        setUploadMessageSigning(false);\n        setTimeout(() => {\n          setMessageSignings(false);\n        }, 3000);\n        setKey((prevKey) => prevKey + 1);\n        setSelectedFile([]);\n      });\n  };\n  const handleCancelClick = () => {\n    setKey((prevKey) => prevKey + 1);\n  };\n\n  const errorDisp = () => {\n    setMessageSigningsWrong(true);\n    setMessageSignings(false);\n    setUploadMessageSigning(false);\n    setUploadMessageTarget(false);\n    setUploadMessageSoftware(false);\n    setUploadMessageSigning(false);\n    setTimeout(() => {\n      setMessageSigningsWrong(false);\n    }, 3000);\n    setKey((prevKey) => prevKey + 1);\n    setSelectedFile([]);\n  };\n  const noFile = () => {\n    setMessageSoftware(false);\n    setMessage(false);\n    setMessageSignings(false);\n    setUploadMessageMapping(false);\n    setUploadMessageSigning(true);\n    setMessageSigningsWrong(false);\n    setMessageSignings(false);\n    setMessage1(false);\n    setMessageMapping(false);\n    setMessageMappingWrong(false);\n    setMessageSoftwareWrong(false);\n    setUploadMessageTarget(false);\n    setUploadMessageSoftware(false);\n    setTimeout(() => {\n      setUploadMessageSigning(false);\n    }, 3000);\n  };\n  return (\n    <>\n      <div className=\"group customCard\">\n        <div className=\"col-md-12 collapseHeader\">\n          <h2\n            style={{ cursor: \"pointer\" }}\n            onClick={() => {\n              setVisible(!visible);\n            }}\n          >\n            Signings Targets\n          </h2>\n\n          <div\n            onClick={() => {\n              setVisible(!visible);\n\n              visible\n                ? setCheveronIcon(FaChevronCircleUp)\n                : setCheveronIcon(FaChevronCircleDown);\n            }}\n          >\n            <span>{cheveronIcon}</span>\n          </div>\n        </div>\n        <CCollapse visible={!visible}>\n          <div className=\"group-content row\">\n            <div className=\"col-md-12 mb-2 row\">\n              <label className=\"col-2\" htmlFor=\"text-input-inline\">\n                <strong>\n                  Upload Signings Targets<span className=\"error-text\">*</span>\n                </strong>\n              </label>\n              <span className=\"col-1 p-0\">:</span>\n              <div className=\"col-2\">\n                <input\n                  key={key}\n                  type=\"file\"\n                  name=\"file\"\n                  className=\"fileUpload unique1 form-control\"\n                  id=\"file\"\n                  onChange={onFileChangeHandler}\n                />\n              </div>\n              <div className=\"col-7 d-flex align-items-center\">\n                <button\n                  className=\"btn btn-primary mr-2\"\n                  title=\"Save\"\n                  onClick={() => {\n                    selectedFile.name?.includes(\n                      \"Sales Signings Target Upload\"\n                    ) ||\n                    selectedFile.name?.includes(\n                      \"Sales Software Target Upload Template\"\n                    )\n                      ? handleSaveClick()\n                      : selectedFile.name == undefined\n                      ? noFile()\n                      : errorDisp();\n                  }}\n                >\n                  <FileUpload /> Upload\n                </button>\n                <button\n                  className=\"btn btn-secondary\"\n                  title=\"cancel\"\n                  onClick={handleCancelClick}\n                >\n                  <ImCross />\n                  Cancel\n                </button>\n                <button\n                  style={{ marginLeft: \"auto\" }}\n                  className=\"btn btn-primary float-end\"\n                  title={\"Dowload Upload Signings Targets Template\"}\n                  onClick={() => {\n                    downloadEmployeeData();\n                  }}\n                >\n                  <FaDownload /> Download Template\n                </button>\n              </div>\n              <div></div>\n            </div>\n          </div>\n        </CCollapse>\n      </div>\n    </>\n  );\n}\n\nexport default SalesUploadSigningsTargets;\n","import { CCollapse } from \"@coreui/react\";\nimport React, { useState } from \"react\";\nimport {\n  FaChevronCircleDown,\n  FaChevronCircleUp,\n  FaSearch,\n  FaCaretDown,\n  FaDownload,\n} from \"react-icons/fa\";\nimport axios from \"axios\";\nimport { environment } from \"../../environments/environment\";\nimport { FileUpload } from \"@mui/icons-material\";\nimport { ImCross } from \"react-icons/im\";\nfunction SalesUploadSoftwareTargets(props) {\n  const {\n    setMessageSigningsWrong,\n    setMessageSoftware,\n    setMessage,\n    setMessageSoftwareWrong,\n    setMessageMappingWrong,\n    setUploadMessageSoftware,\n    setMessageSignings,\n    setMessage1,\n    uploadMessageSoftware,\n    uploadMessageTarget,\n    uploadMessageMapping,\n    uploadMessageSigning,\n    setUploadMessageSigning,\n    setMessageMapping,\n  } = props;\n  const loggedUserId = localStorage.getItem(\"resId\");\n  const baseUrl = environment.baseUrl;\n  const [visible, setVisible] = useState(false);\n  const [cheveronIcon, setCheveronIcon] = useState(FaChevronCircleUp);\n  const onFileChangeHandler = (e) => {\n    setSelectedFile(e.target.files[0]);\n  };\n  const [selectedFile, setSelectedFile] = useState([]);\n  const [key, setKey] = useState(0);\n  const downloadEmployeeData = () => {\n    const docUrl =\n      baseUrl + `/CommonMS/document/downloadFile?documentId=97855677`;\n\n    axios({\n      url: docUrl,\n      method: \"GET\",\n      responseType: \"blob\",\n    }).then((response) => {\n      const contentType = response.headers[\"content-type\"];\n      const extension = \".xlsx\";\n      const blob = new Blob([response.data], { type: contentType });\n      const url = window.URL.createObjectURL(blob);\n      const link = document.createElement(\"a\");\n      link.href = url;\n      link.setAttribute(\n        \"download\",\n        `Sales Software Target Upload Template${extension}`\n      );\n      document.body.appendChild(link);\n      link.click();\n    });\n  };\n  const handleSaveClick = () => {\n    setMessageSoftware(false);\n    axios\n      .postForm(\n        baseUrl +\n          `/SalesMS/pmo/uploadSalesTargets/?loggedUserId=${loggedUserId}&type=swTargets&upload=1`,\n        {\n          // .postForm(\n          //   `http://localhost:8098/SalesMS/pmo/uploadSalesTargets/?loggedUserId=${loggedUserId}&type=swTargets&upload=1`,\n          //   {\n          fileUpload: selectedFile,\n        },\n        {\n          headers: {\n            \"Content-Type\": \"multipart/form-data\",\n          },\n        }\n      )\n      .then((res) => {\n        setMessageSoftware(true);\n        setMessageSoftwareWrong(false);\n        setUploadMessageSoftware(false);\n        setTimeout(() => {\n          setMessageSoftware(false);\n        }, 3000);\n        setKey((prevKey) => prevKey + 1);\n        setSelectedFile([]);\n      });\n  };\n  const handleCancelClick = () => {\n    setKey((prevKey) => prevKey + 1);\n    setSelectedFile([]);\n  };\n  const errorDisp = () => {\n    setMessageSoftwareWrong(true);\n    setMessageSoftware(false);\n\n    setMessage1(false);\n    setTimeout(() => {\n      setMessageSoftwareWrong(false);\n    }, 3000);\n\n    setKey((prevKey) => prevKey + 1);\n    setSelectedFile([]);\n  };\n\n  const noFile = () => {\n    setMessageSigningsWrong(false);\n    setMessageSoftware(false);\n    setUploadMessageSigning(false);\n    setMessage(false);\n    setUploadMessageSoftware(true);\n    setMessageSoftwareWrong(false);\n    setMessageSoftware(false);\n    setMessageSignings(false);\n    setMessage1(false);\n    setMessageMappingWrong(false);\n    setMessageMapping(false);\n    setMessageSignings(false);\n    setTimeout(() => {\n      setUploadMessageSoftware(false);\n    }, 3000);\n  };\n  return (\n    <>\n      <div className=\"group mb-5 customCard\">\n        <div className=\"col-md-12 collapseHeader\">\n          <h2\n            style={{ cursor: \"pointer\" }}\n            onClick={() => {\n              setVisible(!visible);\n            }}\n          >\n            Software Targets\n          </h2>\n\n          <div\n            onClick={() => {\n              setVisible(!visible);\n\n              visible\n                ? setCheveronIcon(FaChevronCircleUp)\n                : setCheveronIcon(FaChevronCircleDown);\n            }}\n          >\n            <span>{cheveronIcon}</span>\n          </div>\n        </div>\n        <CCollapse visible={!visible}>\n          <div className=\"group-content row\">\n            <div className=\"col-md-12 mb-2 row\">\n              <label className=\"col-2\" htmlFor=\"text-input-inline\">\n                <strong>\n                  Upload Software Targets<span className=\"error-text\">*</span>\n                </strong>\n              </label>\n              <span className=\"col-1 p-0\">:</span>\n              <div className=\"col-2\">\n                <input\n                  key={key}\n                  type=\"file\"\n                  name=\"file\"\n                  className=\"fileUpload unique1 form-control\"\n                  id=\"file\"\n                  onChange={onFileChangeHandler}\n                />\n              </div>\n              <div className=\"col-7 d-flex align-items-center\">\n                <button\n                  className=\"btn btn-primary mr-2\"\n                  title=\"Save\"\n                  onClick={() => {\n                    selectedFile.name?.includes(\n                      \"Sales Software Target Upload Template\"\n                    ) ||\n                    selectedFile.name?.includes(\"Sales Signings Target Upload\")\n                      ? handleSaveClick()\n                      : selectedFile.name == undefined\n                      ? noFile()\n                      : errorDisp();\n                  }}\n                >\n                  <FileUpload /> Upload\n                </button>\n                <button\n                  className=\"btn btn-secondary\"\n                  title=\"cancel\"\n                  onClick={handleCancelClick}\n                >\n                  <ImCross />\n                  Cancel\n                </button>\n                <button\n                  style={{ marginLeft: \"auto\" }}\n                  className=\"btn btn-primary float-end\"\n                  title={\"Downlod Upload Software Targets Template\"}\n                  onClick={() => {\n                    downloadEmployeeData();\n                  }}\n                >\n                  <FaDownload /> Download Template\n                </button>\n              </div>\n              <div></div>\n            </div>\n          </div>\n        </CCollapse>\n      </div>\n    </>\n  );\n}\n\nexport default SalesUploadSoftwareTargets;\n","import { CCollapse } from \"@coreui/react\";\nimport React, { useEffect, useState } from \"react\";\nimport {\n  FaChevronCircleDown,\n  FaChevronCircleUp,\n  FaSearch,\n  FaCaretDown,\n  FaArrowLeft,\n  FaDownload,\n} from \"react-icons/fa\";\nimport SalesUploadMapping from \"./SalesUploadMapping\";\nimport SalesUploadSigningsTargets from \"./SalesUploadSigningsTargets\";\nimport SalesUploadSoftwareTargets from \"./SalesUploadSoftwareTargets\";\nimport axios from \"axios\";\nimport { environment } from \"../../environments/environment\";\nimport { FileUpload } from \"@mui/icons-material\";\nimport { ImCross, ImDownload3 } from \"react-icons/im\";\nimport { BiCheck, BiLeftArrowAlt } from \"react-icons/bi\";\nimport { Link } from \"react-router-dom\";\nimport { MdWarning } from \"react-icons/md\";\nimport { AiFillWarning } from \"react-icons/ai\";\nimport ScreenBreadcrumbs from \"../Common/ScreenBreadcrumbs\";\n\nfunction SalesUploadParent() {\n  const [message, setMessage] = useState(false);\n  const [message1, setMessage1] = useState(false);\n  const [messageMappingWrong, setMessageMappingWrong] = useState(false);\n  const [messageSigningsWrong, setMessageSigningsWrong] = useState(false);\n  const [messageSoftwareWrong, setMessageSoftwareWrong] = useState(false);\n  const [messageMapping, setMessageMapping] = useState(false);\n  const [messageSignings, setMessageSignings] = useState(false);\n  const [messageSoftware, setMessageSoftware] = useState(false);\n  const [uploadMessageTarget, setUploadMessageTarget] = useState(false);\n  const [uploadMessageMapping, setUploadMessageMapping] = useState(false);\n  const [uploadMessageSigning, setUploadMessageSigning] = useState(false);\n  const [uploadMessageSoftware, setUploadMessageSoftware] = useState(false);\n\n  const loggedUserId = localStorage.getItem(\"resId\");\n  const baseUrl = environment.baseUrl;\n  const [visible, setVisible] = useState(false);\n  const [cheveronIcon, setCheveronIcon] = useState(FaChevronCircleUp);\n  const onFileChangeHandler = (e) => {\n    setSelectedFile(e.target.files[0]);\n  };\n  const [selectedFile, setSelectedFile] = useState([]);\n  const [key, setKey] = useState(0);\n\n  //-----------breadcrumbs------------\n  const [routes, setRoutes] = useState([]);\n  let textContent = \"Sales\";\n  let currentScreenName = [\"Upload\"];\n\n  useEffect(() => {\n    getMenus();\n  }, []);\n\n  const getMenus = () => {\n    // setMenusData\n\n    axios({\n      method: \"GET\",\n      url: baseUrl + `/CommonMS/master/getMenus?loggedUserId=${loggedUserId}`,\n    }).then((resp) => {\n      let data = resp.data;\n\n      data.forEach((item) => {\n        if (item.display_name === textContent) {\n          setRoutes([item]);\n        }\n      });\n    });\n  };\n\n  const downloadEmployeeData = () => {\n    const docUrl =\n      baseUrl + `/CommonMS/document/downloadFile?documentId=64452521`;\n\n    axios({\n      url: docUrl,\n      method: \"GET\",\n      responseType: \"blob\",\n    }).then((response) => {\n      const contentType = response.headers[\"content-type\"];\n      const extension = \".xlsx\";\n      const blob = new Blob([response.data], { type: contentType });\n      const url = window.URL.createObjectURL(blob);\n      const link = document.createElement(\"a\");\n      link.href = url;\n      link.setAttribute(\"download\", `Sales Target Upload Template${extension}`);\n      document.body.appendChild(link);\n      link.click();\n    });\n  };\n  const handleSaveClick = () => {\n    setMessage(false);\n\n    axios\n      .postForm(\n        baseUrl +\n          `/SalesMS/pmo/uploadSalesTargets/?loggedUserId=${loggedUserId}&type=target&upload=1`,\n        {\n          fileUpload: selectedFile,\n        },\n        {\n          headers: {\n            \"Content-Type\": \"multipart/form-data\",\n          },\n        }\n      )\n      .then((res) => {\n        setKey((prevKey) => prevKey + 1);\n        setSelectedFile([]);\n        setMessage(true);\n        setMessage1(false);\n        setUploadMessageTarget(false);\n        setTimeout(() => {\n          setMessage(false);\n        }, 2000);\n      });\n  };\n  const handleCancelClick = () => {\n    setKey((prevKey) => prevKey + 1);\n  };\n\n  const errorDisp = () => {\n    setMessage1(true);\n    setMessage(false);\n    setUploadMessageTarget(false);\n    setTimeout(() => {\n      setMessage1(false);\n    }, 3000);\n\n    setKey((prevKey) => prevKey + 1);\n    setSelectedFile([]);\n  };\n\n  const noFile = () => {\n    setUploadMessageTarget(true);\n    setMessageMappingWrong(false);\n    setMessageSigningsWrong(false);\n    setMessageSoftwareWrong(false);\n    setMessageMapping(false);\n    setMessageSignings(false);\n    setMessageSoftware(false);\n    setMessage(false);\n    setMessage1(false);\n    setUploadMessageMapping(false);\n    setUploadMessageSigning(false);\n    setUploadMessageSoftware(false);\n    setTimeout(() => {\n      setUploadMessageTarget(false);\n    }, 3000);\n  };\n\n  return (\n    <>\n      {message && (\n        <div className=\"statusMsg success\">\n          <BiCheck />\n          {\"Data Uploaded successfully\"}\n        </div>\n      )}\n      {message1 && (\n        <div className=\"statusMsg error\">\n          <AiFillWarning />\n          {\"Data Uploading failed\"}\n        </div>\n      )}\n      {uploadMessageTarget && (\n        <div className=\"statusMsg error\">\n          <AiFillWarning />\n          {\"Please Select a file to Upload\"}\n        </div>\n      )}\n      {messageMapping && (\n        <div className=\"statusMsg success\">\n          <BiCheck />\n          {\"Data Uploaded successfully\"}\n        </div>\n      )}\n      {messageMappingWrong && (\n        <div className=\"statusMsg error\">\n          <AiFillWarning />\n          {\"Unsupported file template\"}\n        </div>\n      )}\n      {uploadMessageMapping && (\n        <div className=\"statusMsg error\">\n          <AiFillWarning />\n          {\"Please Select a file to Upload\"}\n        </div>\n      )}\n      {messageSignings && (\n        <div className=\"statusMsg success\">\n          <BiCheck />\n          {\"Data Uploaded successfully\"}\n        </div>\n      )}\n      {messageSigningsWrong && (\n        <div className=\"statusMsg error\">\n          <AiFillWarning />\n          {\"Data Uploading failed\"}\n        </div>\n      )}\n      {uploadMessageSigning && (\n        <div className=\"statusMsg error\">\n          <AiFillWarning />\n          {\"Please Select a file to Upload\"}\n        </div>\n      )}\n      {messageSoftware && (\n        <div className=\"statusMsg success\">\n          <BiCheck />\n          {\"Data Uploaded successfully\"}\n        </div>\n      )}\n      {messageSoftwareWrong && (\n        <div className=\"statusMsg error\">\n          <AiFillWarning />\n          {\"Data Uploading failed\"}\n        </div>\n      )}\n      {uploadMessageSoftware && (\n        <div className=\"statusMsg error\">\n          <AiFillWarning />\n          {\"Please Select a file to Upload\"}\n        </div>\n      )}\n      <div className=\"col-md-12 \">\n        <div className=\"pageTitle\">\n          <div className=\"childOne\"></div>\n          <div className=\"childTwo\">\n            <h2> Sales Upload</h2>\n          </div>\n          <div className=\"childThree\"></div>\n        </div>\n      </div>\n      <ScreenBreadcrumbs\n        routes={routes}\n        currentScreenName={currentScreenName}\n      />\n\n      <div className=\"group  customCard\">\n        <div className=\"col-md-12\">\n          <button\n            className=\"btn btn-primary mb-2 mt-2\"\n            title=\"Go Back\"\n            onClick={() => {\n              window.location.href = \"/#/pmo/salesTargets\";\n            }}\n          >\n            <FaArrowLeft /> Go Back\n          </button>\n        </div>\n        <div className=\"col-md-12 collapseHeader\">\n          <div className=\"col-md-10\">\n            <h2\n              style={{ cursor: \"pointer\", align: \"left\" }}\n              onClick={() => {\n                setVisible(!visible);\n              }}\n            >\n              Targets\n            </h2>\n          </div>\n          <div\n            className=\"col-md-2\"\n            style={{ textAlign: \"end\" }}\n            onClick={() => {\n              setVisible(!visible);\n\n              visible\n                ? setCheveronIcon(FaChevronCircleUp)\n                : setCheveronIcon(FaChevronCircleDown);\n            }}\n          >\n            <span>{cheveronIcon}</span>\n          </div>\n        </div>\n        <CCollapse visible={!visible}>\n          <div className=\"group-content row\">\n            {/* <div className=\"col-md-12\">\n             \n            </div> */}\n            <div className=\"col-md-12 mb-2 row\">\n              <label className=\"col-2\" htmlFor=\"text-input-inline\">\n                <strong>\n                  Upload Targets<span className=\"error-text\">*</span>\n                </strong>\n              </label>\n              <span className=\"col-1 p-0\">:</span>\n              <div className=\"col-2\">\n                <input\n                  key={key}\n                  type=\"file\"\n                  name=\"file\"\n                  className=\"fileUpload unique1 form-control\"\n                  id=\"file\"\n                  onChange={onFileChangeHandler}\n                />\n              </div>\n              <div className=\"col-7 d-flex align-items-center\">\n                <button\n                  className=\"btn btn-primary mr-2\"\n                  title=\"Save\"\n                  onClick={() => {\n                    selectedFile.name?.includes(\"Sales Target Upload Template\")\n                      ? handleSaveClick()\n                      : selectedFile.name == undefined\n                      ? noFile()\n                      : errorDisp();\n                  }}\n                >\n                  <FileUpload /> Upload\n                </button>\n                <button\n                  className=\"btn btn-secondary\"\n                  title=\"cancel\"\n                  onClick={handleCancelClick}\n                >\n                  <ImCross />\n                  Cancel\n                </button>\n                <button\n                  style={{ marginLeft: \"auto\" }}\n                  className=\"btn btn-primary float-end\"\n                  title={\"Dowload Sales Upload Targets Template\"}\n                  onClick={() => {\n                    downloadEmployeeData();\n                  }}\n                >\n                  <FaDownload /> Download Template\n                </button>\n                {/* <button\n                  style={{ marginLeft: \"auto\" }}\n                  title={\"Dowload Sales Upload Targets Template \"}\n                  className=\"btn btn-primary\"\n                  onClick={() => {\n                    downloadEmployeeData();\n                  }}\n                >\n                  <FaDownload />\n                  Download <br></br>Template\n                </button> */}\n              </div>\n              <div></div>\n            </div>\n          </div>\n        </CCollapse>\n      </div>\n      <SalesUploadMapping\n        setMessageSoftware={setMessageSoftware}\n        setMessageSignings={setMessageSignings}\n        setMessage1={setMessage1}\n        setMessage={setMessage}\n        setMessageMapping={setMessageMapping}\n        setUploadMessageMapping={setUploadMessageMapping}\n        setUploadMessageSigning={setUploadMessageSigning}\n        setUploadMessageSoftware={setUploadMessageSoftware}\n        setUploadMessageTarget={setUploadMessageTarget}\n        setMessageMappingWrong={setMessageMappingWrong}\n        setMessageSigningsWrong={setMessageSigningsWrong}\n        setMessageSoftwareWrong={setMessageSoftwareWrong}\n      />\n      <SalesUploadSigningsTargets\n        setMessageSoftware={setMessageSoftware}\n        setMessageSignings={setMessageSignings}\n        setMessageMapping={setMessageMapping}\n        setMessage={setMessage}\n        setUploadMessageTarget={setUploadMessageTarget}\n        setUploadMessageMapping={setUploadMessageMapping}\n        setUploadMessageSigning={setUploadMessageSigning}\n        setUploadMessageSoftware={setUploadMessageSoftware}\n        uploadMessageSoftware={uploadMessageSoftware}\n        setMessage1={setMessage1}\n        setMessageSigningsWrong={setMessageSigningsWrong}\n        setMessageMappingWrong={setMessageMappingWrong}\n        setMessageSoftwareWrong={setMessageSoftwareWrong}\n      />\n      <SalesUploadSoftwareTargets\n        setMessage1={setMessage1}\n        setMessage={setMessage}\n        setMessageMapping={setMessageMapping}\n        setMessageSoftware={setMessageSoftware}\n        setUploadMessageMapping={setUploadMessageMapping}\n        setUploadMessageSigning={setUploadMessageSigning}\n        setUploadMessageSoftware={setUploadMessageSoftware}\n        setUploadMessageTarget={setUploadMessageTarget}\n        uploadMessageSoftware={uploadMessageSoftware}\n        uploadMessageTarget={uploadMessageTarget}\n        uploadMessageMapping={uploadMessageMapping}\n        uploadMessageSigning={uploadMessageSigning}\n        setMessageSoftwareWrong={setMessageSoftwareWrong}\n        setMessageSigningsWrong={setMessageSigningsWrong}\n        setMessageMappingWrong={setMessageMappingWrong}\n        setMessageSignings={setMessageSignings}\n      />\n    </>\n  );\n}\n\nexport default SalesUploadParent;\n"],"names":["props","setMessageSoftware","setMessageMapping","setMessage","setMessageMappingWrong","setUploadMessageMapping","setUploadMessageTarget","setUploadMessageSigning","setUploadMessageSoftware","setMessage1","setMessageSignings","setMessageSigningsWrong","setMessageSoftwareWrong","loggedUserId","localStorage","getItem","baseUrl","environment","useState","visible","setVisible","FaChevronCircleUp","cheveronIcon","setCheveronIcon","selectedFile","setSelectedFile","key","setKey","className","style","cursor","onClick","FaChevronCircleDown","htmlFor","type","name","id","onChange","e","target","files","title","includes","axios","fileUpload","headers","then","res","setTimeout","prevKey","undefined","FileUpload","marginLeft","docUrl","url","method","responseType","response","contentType","blob","Blob","data","window","URL","createObjectURL","link","document","createElement","href","setAttribute","body","appendChild","click","downloadEmployeeData","uploadMessageSoftware","uploadMessageTarget","uploadMessageMapping","uploadMessageSigning","message","message1","messageMappingWrong","messageSigningsWrong","messageSoftwareWrong","messageMapping","messageSignings","messageSoftware","routes","setRoutes","useEffect","getMenus","resp","forEach","item","display_name","ScreenBreadcrumbs","currentScreenName","location","align","textAlign"],"sourceRoot":""}