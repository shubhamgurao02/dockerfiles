{"version":3,"file":"static/js/573.6755ae9d.chunk.js","mappings":"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","sources":["views/GovernanceComponent/NPSSurveyDataTable.js","views/GovernanceComponent/NPSSurveyQuestions.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Column } from \"primereact/column\";\nimport { DataTable } from \"primereact/datatable\";\n// import { NPSSurveyQuestionsData } from \"./NPSSurveyQuestionsData\";\nimport { ColumnGroup } from \"primereact/columngroup\";\nimport { Row } from \"primereact/row\";\nimport \"primeflex/primeflex.css\";\nimport { Button } from \"primereact/button\";\nimport { FaSave } from \"react-icons/fa\";\nimport DatePicker from \"react-datepicker\";\nimport { TiCancel } from \"react-icons/ti\";\nimport { environment } from \"../../environments/environment\";\nimport \"./NPSSurveyQuesDataTable.scss\";\n\nimport axios from \"axios\";\nimport moment from \"moment\";\nimport { MdOutlineAdd, MdOutlinePlaylistAdd } from \"react-icons/md\";\nimport { AiFillWarning } from \"react-icons/ai\";\nimport { TfiSave } from \"react-icons/tfi\";\nimport { ImCross } from \"react-icons/im\";\nimport { BiCheck } from \"react-icons/bi\";\n\nfunction NPSSurveyDataTable() {\n  const [Data, setData] = useState([]);\n  const [subRowData, setSubRowData] = useState([]);\n  const [expandedRows, setExpandedRows] = useState(null);\n  const [flag, setFlag] = useState(false);\n  const [neastedFlag, setNeastedflag] = useState(false);\n  const [quesRange, setQuesRange] = useState([]);\n  const [addmsg, setAddmsg] = useState(false);\n  const [addinnermsg, setAddinnermsg] = useState(false);\n  const [surveyquesArr, setSurveyquesArr] = useState();\n  const [emptyMessage, setEmptyMessage] = useState(false);\n  const [uniqueMessage, setUniqueMessage] = useState(false);\n  const [clicked, setClicked] = useState(false);\n  const [saveCliked, setSaveClicked] = useState(true);\n  const [cancelClicked, setCancelClicked] = useState(true);\n  const [saveQue, setSaveQue] = useState(\"\");\n  const [saveInnerQue, setSaveInnerQue] = useState(\"\");\n  const [isModified, setIsModified] = useState(false);\n  const [isinnerModified, setIsinnerModified] = useState(false);\n  const [click, setClick] = useState(false);\n  const [saveClik, setSaveClick] = useState(true);\n  const [cancelClick, setCancelClick] = useState(true);\n  const [addFormData, setAadFormData] = useState({\n    survey_name: \"\",\n    type: \"NPV\",\n  });\n\n  const [addNestedFormData, setAddNeastedFormData] = useState({\n    pcqa_csat_survey_id: \"\",\n    question: \"\",\n    question_code: \"\",\n    // question_range: \"0\",\n    // status: 1,\n  });\n\n  const baseUrl = environment.baseUrl;\n\n  useEffect(() => {\n    getTableData();\n    getQuestionRange();\n    getSurveyquesArr();\n  }, []);\n  console.log(\n    addNestedFormData + \"...................................addNestedFormData\"\n  );\n  const getSurveyquesArr = () => {\n    axios({\n      method: \"get\",\n      url: baseUrl + `/governancems/Csat/getNPVsurvey`,\n    })\n      .then(function (response) {\n        let resp = response.data;\n        setSurveyquesArr(resp);\n      })\n      .catch(function (error) {});\n  };\n\n  const getTableData = () => {\n    axios({\n      method: \"get\",\n      url: baseUrl + `/governancems/Csat/getNPSques`,\n    })\n      .then(function (response) {\n        var resp = response.data;\n        setData(resp);\n      })\n      .catch(function (response) {});\n  };\n\n  const getQuestionRange = () => {\n    axios({\n      method: \"get\",\n      url: baseUrl + `/governancems/Csat/getQuestionRange`,\n    })\n      .then(function (response) {\n        var resp = response.data;\n        setQuesRange(resp);\n      })\n      .catch(function (response) {});\n  };\n  const saveNpvSurveyQuestion = () => {\n    let someDataa = surveyquesArr.some(\n      (d) => d.survey_name == addFormData.survey_name\n    );\n    if (Data != undefined) {\n      if (someDataa) {\n        let ele = document.getElementsByName(\"survey_name\");\n        for (let index = 0; index < ele.length; index++) {\n          ele[index].classList.add(\"error-block\");\n        }\n        setUniqueMessage(true);\n        setSaveClick(false);\n        setCancelClick(false);\n        setClick(true);\n        setTimeout(() => {\n          setUniqueMessage(false);\n        }, 3000);\n        return;\n      }\n    }\n    if (addFormData.survey_name == \"\" || addFormData.survey_name == \" \") {\n      let ele = document.getElementsByName(\"survey_name\");\n      for (let index = 0; index < ele.length; index++) {\n        ele[index].classList.add(\"error-block\");\n      }\n      // addFormData.survey_name;\n      setEmptyMessage(true);\n      setTimeout(() => {\n        setEmptyMessage(false);\n      }, 3000);\n      return;\n    }\n\n    axios({\n      method: \"post\",\n      url: baseUrl + `/governancems/Csat/saveNpvSurvey`,\n      data: addFormData,\n    }).then((error) => {\n      getTableData();\n      getSurveyquesArr();\n      setFlag(false);\n      setSaveQue(addFormData.survey_name);\n      setAddmsg(true);\n      setTimeout(() => {\n        setAddmsg(false);\n      }, 3000);\n      setSaveClick(true);\n      setCancelClick(true);\n      setClick(false);\n    });\n  };\n  console.log(addNestedFormData);\n  const saveNpvInnerSurveyQue = () => {\n    // let someDataa = surveyquesArr.some((d) => {\n    //   return d.subrows.some((a) => {\n    //     if (addNestedFormData.pcqa_csat_survey_id == a.pcqa_csat_survey_id)\n    //       return a.question == addNestedFormData?.question;\n    //   });\n    // });\n    // if (Data != undefined) {\n    //   if (someDataa) {\n    //     let ele = document.getElementsByName(\"question\");\n    //     for (let index = 0; index < ele.length; index++) {\n    //       ele[index].classList.add(\"error-block\");\n    //     }\n\n    //     setUniqueMessage(true);\n    //     setClicked(true);\n    //     setCancelClicked(true);\n    //     setSaveClicked(true);\n    //     // setValidationMessage(false);\n    //     setTimeout(() => {\n    //       setUniqueMessage(false);\n    //     }, 3000);\n    //     return;\n    //   }\n    // }\n    if (\n      addNestedFormData.question == \"\" ||\n      addNestedFormData.question == \" \" ||\n      addNestedFormData.question == undefined\n    ) {\n      let ele = document.getElementsByName(\"question\");\n      for (let index = 0; index < ele.length; index++) {\n        ele[index].classList.add(\"error-block\");\n      }\n      // addFormData.survey_name;\n      // let ele = document.getElementsByName(\"question\");\n      // for (let index = 0; index < ele.length; index++) {\n      //   ele[index].classList.add(\"error-block\");\n      // }\n      setEmptyMessage(true);\n      setSaveClicked(false);\n      setCancelClicked(false);\n      setClicked(true);\n      setTimeout(() => {\n        setEmptyMessage(false);\n      }, 3000);\n      return;\n    }\n\n    axios({\n      method: \"post\",\n      url: baseUrl + \"/governancems/Csat/saveNpvInnerSurveyQue\",\n      data: {\n        pcqa_csat_survey_id: addNestedFormData?.pcqa_csat_survey_id,\n        question: addNestedFormData?.question,\n        question_code: \"\",\n        question_range:\n          addNestedFormData?.question_range == undefined\n            ? \"0\"\n            : addNestedFormData?.question_range,\n        status: 1,\n      },\n    }).then((error) => {\n      getTableData();\n      getSurveyquesArr();\n      setNeastedflag(false);\n      setSaveInnerQue(addNestedFormData.question);\n      setAddNeastedFormData((prev) => ({ ...prev, question_range: \"0\" }));\n      setAddinnermsg(true);\n      setTimeout(() => {\n        setAddinnermsg(false);\n      }, 3000);\n    });\n    setSaveClicked(true);\n    setClicked(false);\n    setCancelClicked(true);\n    setAddNeastedFormData({});\n  };\n\n  let count = Data.length;\n\n  const handleAddFormChange = (event) => {\n    event.preventDefault();\n\n    const fieldName = event.target.getAttribute(\"name\");\n    const fieldValue = event.target.value.trim();\n\n    const newFormData = { ...addFormData };\n    newFormData[fieldName] = fieldValue;\n\n    setAadFormData(newFormData);\n    setIsModified(true);\n  };\n  const handleIsModifiedChange = () => {\n    setIsModified(false);\n    setClick(true);\n    setCancelClick(false);\n    setSaveClick(false);\n    // setClicked(true);\n    // setCancelClicked(false);\n    // setSaveClicked(false);\n  };\n  const handleIsModified = () => {\n    setIsinnerModified(false);\n    setClicked(true);\n    setCancelClicked(false);\n    setSaveClicked(false);\n  };\n  const handleAddNestedFormChange = (event) => {\n    event.preventDefault();\n\n    const fieldName = event.target.getAttribute(\"name\");\n    const fieldValue = event.target.value.trim();\n\n    const newFormData = { ...addNestedFormData };\n    newFormData[fieldName] = fieldValue;\n\n    setAddNeastedFormData(newFormData);\n    setIsinnerModified(true);\n  };\n\n  const Reset = () => {\n    document.getElementsByClassName(\"p-row-editor-cancel p-link\")[0]?.click();\n\n    setClicked(false);\n    setCancelClicked(true);\n    setSaveClicked(true);\n  };\n  const Reset1 = () => {\n    document.getElementsByClassName(\"p-row-editor-cancel p-link\")[0]?.click();\n    setCancelClick(true);\n    setClick(false);\n    setSaveClick(true);\n  };\n  const addHandler = () => {\n    // setIsAdding(true);\n\n    setClicked(true);\n    setCancelClicked(false);\n    setSaveClicked(false);\n  };\n  const addHandler1 = () => {\n    // setIsAdding(true);\n\n    setClick(true);\n    setCancelClick(false);\n    setSaveClick(false);\n  };\n  const Save = () => {\n    document\n      .getElementsByClassName(\"p-row-editor-save-icon pi pi-fw pi-check\")[0]\n      ?.click();\n    // EditedData();\n    // setCancelClicked(true);\n    // setSaveClicked(true);\n    // setClicked(false);\n    // EditedData(editeddata);\n  };\n\n  // const handleAddFormSubmit = (event) => {\n  //   event.preventDefault();\n  //   count++;\n  //   const newData = {\n  //     id: count,\n  //     name: addFormData.name,\n  //     date: addFormData.date,\n\n  //     subrow: [null],\n  //   };\n\n  //   const newDatas = [...Data, newData];\n  //   setData(newDatas);\n  // };\n\n  // const handleAddNestedFormSubmit = (event) => {\n  //   event.preventDefault();\n\n  //   const newNestedData = {\n  //     question: addNestedFormData.question,\n  //     range: addNestedFormData.range,\n  //   };\n\n  //   const newNestedDatas = { ...subRowData, newNestedData };\n\n  //   setSubRowData(newNestedDatas);\n  //   console.log(subRowData);\n  // };\n\n  const allowExpansion = (rowData) => {\n    return rowData.subrows?.length >= 0;\n  };\n  const representDate = (data) => {\n    return (\n      <div title={moment(data.date).format(\"DD-MMM-YYYY\")}>\n        {moment(data.date).format(\"DD-MMM-YYYY\")}\n      </div>\n    );\n  };\n\n  // let headerGroup = (\n  //   <ColumnGroup>\n  //     <Row>\n  //       <Column />\n  //       {/* <Column\n  //         header=\"Survey/Question\"\n  //         alignHeader={\"center\"}\n  //         style={{ width: \"65rem\" }}\n  //       /> */}\n  //       <Column\n  //         header=\"Created On\"\n  //         alignHeader={\"center\"}\n  //         style={{ width: \"15rem\" }}\n  //       />\n  //       <Column\n  //         header=\"Question Range\"\n  //         alignHeader={\"center\"}\n  //         style={{ width: \"20rem\" }}\n  //       />\n  //     </Row>\n  //   </ColumnGroup>\n  // );\n\n  const questionTooltip = (data) => {\n    return (\n      <div data-toggle=\"tooltip\" title={data.survey_name}>\n        {data.survey_name}\n      </div>\n    );\n  };\n\n  const question = (data) => {\n    return (\n      <div data-toggle=\"tooltip\" title={data.question}>\n        {data.question}\n      </div>\n    );\n  };\n\n  const questionRange = (data) => {\n    return (\n      <div\n        style={{ textAlign: \"right\" }}\n        data-toggle=\"tooltip\"\n        title={data.question_range}\n      >\n        {data.question_range}\n      </div>\n    );\n  };\n\n  const handleForm = (\n    <div className=\"newEntryFields\">\n      <form className=\"col-md-12\">\n        <div className=\"row px-1 py-2\">\n          <div className=\"col-9\">\n            <input\n              type=\"text\"\n              name=\"survey_name\"\n              required\n              onChange={handleAddFormChange}\n              placeholder=\"Enter Survey Question\"\n            />\n          </div>\n          <div className=\"col-3\">\n            <DatePicker\n              name=\"date\"\n              id=\"date\"\n              className=\"disableField\"\n              selected={new Date()}\n              // selected={editedData?.Due_Date}\n              // selected={editedData && 'Due_Date' in editedData && editedData.Due_Date}\n              dateFormat=\"dd-MMM-yyyy\"\n              showMonthDropdown\n              disabled\n              showYearDropdown\n            />\n          </div>\n        </div>\n      </form>\n    </div>\n  );\n\n  const handleNestedForm = (\n    <div className=\"newEntryFields\">\n      <form className=\"col-md-12\">\n        <div className=\"row px-1 py-2\">\n          <div className=\"col-9\">\n            <input\n              type=\"text\"\n              name=\"question\"\n              required\n              onChange={handleAddNestedFormChange}\n              placeholder=\"Enter Survey Question\"\n            />\n          </div>\n          <div className=\"col-3\">\n            <select\n              name=\"question_range\"\n              id=\"question_range\"\n              onChange={handleAddNestedFormChange}\n            >\n              {quesRange.map((Item) => (\n                <option value={Item.val}> {Item.lkup_name}</option>\n              ))}\n            </select>\n          </div>\n        </div>\n      </form>\n    </div>\n  );\n\n  let rowExpansionTemplate = (data) => {\n    return (\n      <div>\n        <DataTable\n          value={data.subrows}\n          responsiveLayout=\"scroll\"\n          header={null}\n          className=\"p-grid innercsat \"\n          pagination={data.subrows.length > 0}\n          paginator={data.subrows.length > 0}\n          rows={10}\n          paginationPerPage={5}\n          paginationRowsPerPageOptions={[5, 15, 25, 50]}\n          paginationComponentOptions={{\n            rowsPerPageText: \"Records per page:\",\n            rangeSeparatorText: \"out of\",\n          }}\n        >\n          <Column field=\"question\" body={question} />\n          {/* <Column/> */}\n          <Column field=\"question_range\" body={questionRange} />\n        </DataTable>\n        <>{setSubRowData(data.subrow)}</>\n        <div className=\"newTableEntry\">\n          <div>{neastedFlag === true && <span>{handleNestedForm}</span>}</div>\n        </div>\n        <div className=\"tableBottomButtons btn-container-events center\">\n          <button\n            className=\"btn btn-primary p-1\"\n            data-toggle=\"tooltip\"\n            title=\"Add new row\"\n            disabled={clicked}\n            onClick={() => {\n              setNeastedflag(true);\n              addHandler();\n              setAddNeastedFormData((prev) => ({\n                ...prev,\n                [\"pcqa_csat_survey_id\"]: data.id,\n              }));\n            }}\n          >\n            <MdOutlineAdd size={\"1.2em\"} /> Add\n          </button>\n          <button\n            className=\"btn btn-primary p-1\"\n            disabled={saveCliked}\n            onClick={() => {\n              saveNpvInnerSurveyQue();\n              Save();\n            }}\n            data-toggle=\"tooltip\"\n            title=\"Save row\"\n          >\n            <TfiSave size={\"0.7em\"} />\n            <span className=\"ml-1\"> Save </span>\n\n            {/* <FaSave /> */}\n          </button>\n          <button\n            className=\"btn btn-primary p-1\"\n            onClick={() => {\n              setNeastedflag(false);\n              Reset();\n            }}\n            data-toggle=\"tooltip\"\n            disabled={cancelClicked}\n            title=\"Cancel row editing\"\n          >\n            <ImCross size={\"0.6em\"} />\n            <span className=\"ml-1\">Cancel</span>\n\n            {/* <TiCancel size={\"1em\"} /> */}\n          </button>\n        </div>\n      </div>\n    );\n  };\n\n  return (\n    <React.Fragment>\n      <div className=\"col-md-12  \">\n        {uniqueMessage ? (\n          <div className=\"statusMsg error\">\n            {\" \"}\n            <AiFillWarning /> Please give Unique name\n          </div>\n        ) : (\n          \"\"\n        )}\n      </div>\n      {isModified && handleIsModifiedChange()}\n      {isinnerModified && handleIsModified()}\n\n      <div className=\"col-md-12  \">\n        {emptyMessage ? (\n          <div className=\"statusMsg error\">\n            {\" \"}\n            <AiFillWarning /> Please select the valid values for highlighted\n            fields\n          </div>\n        ) : (\n          \"\"\n        )}\n      </div>\n      <div className=\"col-md-12  \">\n        {addmsg ? (\n          <div className=\"statusMsg success\">\n            {\" \"}\n            <BiCheck />\n            {/* {saveQue} survey question saved successfully */}\n            Survey Question {saveQue} created successfully\n          </div>\n        ) : (\n          \"\"\n        )}\n      </div>\n      <div className=\"col-md-12 \">\n        {addinnermsg ? (\n          <div className=\"statusMsg success\">\n            {\" \"}\n            <BiCheck />\n            {/* {saveInnerQue} survey question saved successfully */}\n            Survey Question {saveInnerQue} created successfully.\n          </div>\n        ) : (\n          \"\"\n        )}\n      </div>\n\n      <div className=\"npsSurveyTable darkHeader toHead\">\n        <DataTable\n          value={Data}\n          className=\"primeReactDataTable \" ////customerEngament\n          paginatorTemplate=\"RowsPerPageDropdown FirstPageLink PrevPageLink CurrentPageReport NextPageLink LastPageLink\"\n          currentPageReportTemplate=\"{first} to {last} of {totalRecords}\"\n          rowsPerPageOptions={[15, 25, 50]}\n          showGridlines\n          // headerColumnGroup={headerGroup}\n          expandedRows={expandedRows}\n          onRowToggle={(e) => setExpandedRows(e.data)}\n          rowExpansionTemplate={rowExpansionTemplate}\n          pagination={Data.length > 0}\n          paginator={Data.length > 0}\n          rows={15}\n          // paginationPerPage={5}\n          // paginationRowsPerPageOptions={[5, 15, 25, 50]}\n          // paginationComponentOptions={{\n          //   rowsPerPageText: \"Records per page:\",\n          //   rangeSeparatorText: \"out of\",\n          // }}\n        >\n          <Column expander={allowExpansion} />\n          <Column\n            field=\"survey_name\"\n            header=\"Survey/Question\"\n            sortable\n            // header={Data.survey_name}\n            body={questionTooltip}\n            alignHeader={\"center\"}\n          />\n\n          <Column\n            field=\"date\"\n            sortable\n            header=\"Created On\"\n            body={representDate}\n            alignHeader={\"center\"}\n          />\n          <Column header=\"Question Range\" sortable alignHeader={\"center\"} />\n        </DataTable>\n        <div className=\"newTableEntry\">\n          {flag === true && <span>{handleForm}</span>}\n        </div>\n\n        <div className=\"tableBottomButtons btn-container-events center\">\n          <button\n            className=\"btn btn-primary p-1\"\n            data-toggle=\"tooltip\"\n            title=\"Add new row\"\n            disabled={click}\n            // style={{ cursor: click == true ? \"not-allowed\" : \"pointer\" }}\n            onClick={() => {\n              setFlag(true);\n              addHandler1();\n            }}\n          >\n            <MdOutlineAdd size={\"1.2em\"} /> Add\n          </button>\n          <button\n            className=\"btn btn-primary p-1\"\n            disabled={saveClik}\n            onClick={() => {\n              saveNpvSurveyQuestion();\n              Save();\n            }}\n            data-toggle=\"tooltip\"\n            title=\"Save row\"\n          >\n            <TfiSave size={\"0.7em\"} />\n            <span className=\"ml-1\"> Save </span>\n\n            {/* <FaSave /> */}\n          </button>\n          <button\n            className=\"btn btn-primary p-1\"\n            disabled={cancelClick}\n            onClick={() => {\n              setFlag(false);\n              Reset1();\n            }}\n            data-toggle=\"tooltip\"\n            title=\"Cancel row editing\"\n          >\n            <ImCross size={\"0.6em\"} />\n            <span className=\"ml-1\">Cancel</span>\n\n            {/* <TiCancel size={\"1em\"} /> */}\n          </button>\n        </div>\n      </div>\n      {/* </div> */}\n    </React.Fragment>\n  );\n}\n\nexport default NPSSurveyDataTable;\n","import React, { useState, useEffect } from \"react\";\nimport { NPSSurveyQuestionsData } from \"./NPSSurveyQuestionsData\";\nimport DataTable from \"react-data-table-component\";\nimport NPSSurveyDataTable from \"./NPSSurveyDataTable\";\n\nfunction NPSSurveyQuestions() {\n\n\n\n  return (\n    <>\n      <div className=\"col-md-12\">\n        <div className=\"pageTitle\">\n          <div className=\"childOne\"></div>\n          <div className=\"childTwo\">\n            <h2>NPS Survey Questions</h2>\n          </div>\n          <div className=\"childThree\"></div>\n        </div>\n      </div>\n\n      <NPSSurveyDataTable />\n\n    </>\n  );\n}\n\nexport default NPSSurveyQuestions;\n"],"names":["useState","Data","setData","setSubRowData","expandedRows","setExpandedRows","flag","setFlag","neastedFlag","setNeastedflag","quesRange","setQuesRange","addmsg","setAddmsg","addinnermsg","setAddinnermsg","surveyquesArr","setSurveyquesArr","emptyMessage","setEmptyMessage","uniqueMessage","setUniqueMessage","clicked","setClicked","saveCliked","setSaveClicked","cancelClicked","setCancelClicked","saveQue","setSaveQue","saveInnerQue","setSaveInnerQue","isModified","setIsModified","isinnerModified","setIsinnerModified","click","setClick","saveClik","setSaveClick","cancelClick","setCancelClick","survey_name","type","addFormData","setAadFormData","pcqa_csat_survey_id","question","question_code","addNestedFormData","setAddNeastedFormData","baseUrl","environment","useEffect","getTableData","getQuestionRange","getSurveyquesArr","console","log","axios","method","url","then","response","resp","data","catch","error","length","handleAddNestedFormChange","event","preventDefault","fieldName","target","getAttribute","fieldValue","value","trim","newFormData","Save","document","getElementsByClassName","title","questionRange","style","textAlign","question_range","handleForm","className","name","required","onChange","placeholder","id","selected","Date","dateFormat","showMonthDropdown","disabled","showYearDropdown","handleNestedForm","map","Item","val","lkup_name","paginatorTemplate","currentPageReportTemplate","rowsPerPageOptions","showGridlines","onRowToggle","e","rowExpansionTemplate","subrows","responsiveLayout","header","pagination","paginator","rows","paginationPerPage","paginationRowsPerPageOptions","paginationComponentOptions","rowsPerPageText","rangeSeparatorText","field","body","subrow","onClick","prev","size","undefined","ele","getElementsByName","index","classList","add","setTimeout","status","saveNpvInnerSurveyQue","Reset","expander","rowData","sortable","alignHeader","moment","date","format","someDataa","some","d","saveNpvSurveyQuestion","Reset1"],"sourceRoot":""}