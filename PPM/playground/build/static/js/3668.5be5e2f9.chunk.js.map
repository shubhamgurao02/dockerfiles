{"version":3,"file":"static/js/3668.5be5e2f9.chunk.js","mappings":"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","sources":["views/Customer/EmailPopUP.js","views/Customer/CustomerCreate.js","views/Customer/InitialCustomerComponent.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport { MdOutlinePlaylistAdd } from \"react-icons/md\";\nimport { AiFillDelete, AiFillWarning } from \"react-icons/ai\";\nimport { CModal, CModalBody, CModalHeader, CModalTitle } from \"@coreui/react\";\nimport { BiSave } from \"react-icons/bi\";\n\nfunction isValidEmail(email) {\n  // Basic email format validation using a regular expression\n  const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n  return emailRegex.test(email);\n}\n\nfunction EmailPopUp(props) {\n  const {\n    clickButtonPopUp,\n    setClickButtonPopUp,\n    handleChange1,\n    handleAddEmail,\n    setDetails,\n    addList,\n    setAddList,\n    finalState1,\n    setDisplayTextEmails,\n    displayTextEmails,\n    setFinalState1,\n  } = props;\n\n  const [displayState1, setDisplayState1] = useState(null);\n  const [validationmessage, setValidationMessage] = useState(\"\");\n\n  const [mailObjState, setMailObjState] = useState({});\n\n  const addHandler = () => {\n    const emailInput = ref.current[0].querySelector(\"input\");\n    const email = emailInput.value.trim();\n\n    if (!email) {\n      setValidationMessage(\"Please Provide Email\");\n      setTimeout(() => {\n        setValidationMessage(\"\");\n      }, 3000);\n      return;\n    }\n\n    if (!isValidEmail(email)) {\n      setValidationMessage(\"Please Provide Proper Email\");\n      setTimeout(() => {\n        setValidationMessage(\"\");\n      }, 3000);\n      return;\n    }\n\n    setMailObjState((prev) => ({ ...prev, [email]: email }));\n    setFinalState1((prev) => ({ ...prev, [email]: email }));\n\n    handleAddEmail();\n    DisplayList();\n    emailInput.value = \"\";\n  };\n\n  const handleSubmit = () => {\n    setClickButtonPopUp(false);\n  };\n\n  useEffect(() => {\n    DisplayList();\n  }, [finalState1]);\n\n  // const checkedData = (e, data) => {\n  //   let initialData = displayTextEmails;\n  //   if (e.target.checked) {\n  //     initialData.push(data);\n  //   } else {\n  //     let index = initialData.indexOf(data);\n  //     initialData.splice(index, 1);\n  //   }\n\n  //   setDisplayTextEmails(initialData);\n  // };\n\n  const DisplayList = () => {\n    if (finalState1 === undefined || finalState1 === null) {\n      return null;\n    }\n\n    setDisplayState1(() => {\n      return Object.keys(finalState1).map((d, i) => {\n        return (\n          <div key={i}>\n            {/* <input\n              // type=\"checkbox\"\n              onClick={(e) => {\n                checkedData(e, finalState1[d]);\n              }}\n            /> */}\n            {finalState1[d]}\n            <AiFillDelete\n              onClick={() => {\n                delete finalState1[d];\n                DisplayList();\n              }}\n            />\n          </div>\n        );\n      });\n    });\n  };\n\n  const ref = useRef([]);\n  return (\n    <div>\n      <CModal\n        alignment=\"center\"\n        backdrop=\"static\"\n        size=\"sm\"\n        visible={clickButtonPopUp}\n        onClose={() => {\n          setClickButtonPopUp(false);\n        }}\n      >\n        <CModalHeader className=\"hgt22\" style={{ cursor: \"all-scroll\" }}>\n          <CModalTitle>\n            <span className=\"ft16\"> Client Email </span>\n          </CModalTitle>\n        </CModalHeader>\n        <CModalBody>\n          {validationmessage && (\n            <div className=\"statusMsg error\">\n              <AiFillWarning /> {validationmessage}\n            </div>\n          )}\n          <div className=\"group-content row\">\n            <div className=\" col-md-12 row mb-2\">\n              <div className=\"col-md-8\">\n                <div\n                  className=\"textfield\"\n                  ref={(ele) => {\n                    ref.current[0] = ele;\n                  }}\n                >\n                  <input\n                    className=\"col-md-12\"\n                    type=\"email\"\n                    id=\"customerEmails\"\n                    name=\"customerEmails\"\n                    placeholder=\"Enter Email\"\n                    onChange={(e) => {\n                      handleChange1(e);\n                    }}\n                  ></input>\n                </div>\n              </div>\n              <button\n                type=\"submit\"\n                className=\"btn btn-primary col-4\"\n                onClick={() => {\n                  addHandler();\n                }}\n              >\n                <i className=\"fa fa-plus\" aria-hidden=\"true\"></i>\n                <MdOutlinePlaylistAdd /> Add\n              </button>\n            </div>\n            {/* {Object.keys(mailObjState).map((d) => d)} */}\n            <div className=\"row\">{displayState1}</div>\n            {/* <div className=\"col-md-1\"></div> */}\n            {/* <button\n              className=\" col-md-4 btn btn-primary\"\n              onClick={handleSubmit}\n            >\n              <BiSave /> Select\n            </button> */}\n          </div>\n        </CModalBody>\n      </CModal>\n    </div>\n  );\n}\n\nexport default EmailPopUp;\n","import axios from \"axios\";\nimport React, { useState } from \"react\";\nimport { useEffect, useLayoutEffect } from \"react\";\nimport { BiCheck, BiSave } from \"react-icons/bi\";\nimport { RiProfileLine } from \"react-icons/ri\";\nimport { environment } from \"../../environments/environment\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport moment from \"moment\";\nimport { ReactSearchAutocomplete } from \"react-search-autocomplete\";\nimport { MdAddBox, MdAddCircleOutline } from \"react-icons/md\";\nimport { useRef } from \"react\";\nimport PONumberPopup from \"../DeliveryComponent/PONumberPopup\";\nimport EmailPopUp from \"./EmailPopUP\";\nimport GlobalValidation from \"../ValidationComponent/GlobalValidation\";\nimport { VscSave } from \"react-icons/vsc\";\nimport { ImCross } from \"react-icons/im\";\nimport { Navigate, useNavigate } from \"react-router-dom\";\nimport RiskAutoComplete from \"../ProjectComponent/RiskAutocomplete\";\nimport GlobalCancel from \"../ValidationComponent/GlobalCancel\";\nimport { AiFillWarning } from \"react-icons/ai\";\nimport ScreenBreadcrumbs from \"../Common/ScreenBreadcrumbs\";\nimport { FaSave } from \"react-icons/fa\";\n\nfunction CustomerCreate() {\n  const [logged, setlogged] = useState([]);\n  const [allCustomers, setAllCustomers] = useState([]);\n  const loggedUserId = localStorage.getItem(\"resId\");\n  const baseUrl = environment.baseUrl;\n  const [engagementType, setEngagementType] = useState([]);\n  const [contract, setContract] = useState([]);\n  const [paymentTerm, setPaymentTerm] = useState([]);\n  const [invoiceCycle, setInvoiceCycle] = useState([]);\n  const [invoiceCulture, setInvoiceCulture] = useState([]);\n  const [invoiceTemplate, setInvoiceTemplate] = useState([]);\n  const [invoiceTime, setInvoiceTime] = useState([]);\n  const [engCompany, setEngCompany] = useState([]);\n  const [currency, setCurrency] = useState([]);\n  const [contractModel, setContractModel] = useState([]);\n  const [projectcategory, setProjectCategory] = useState([]);\n  const [resource, setResource] = useState([]);\n  const [resource1, setResource1] = useState([]);\n  const [resource2, setResource2] = useState([]);\n  const [resource3, setResource3] = useState([]);\n  const [resource4, setResource4] = useState([]);\n  const [resource5, setResource5] = useState([]);\n  const [resource6, setResource6] = useState([]);\n  const [resource7, setResource7] = useState([]);\n  const [resource8, setResource8] = useState([]);\n  const [resource9, setResource9] = useState([]);\n  const [resource10, setResource10] = useState([]);\n  const [resource11, setResource11] = useState([]);\n  const [resource12, setResource12] = useState([]);\n  const [resource13, setResource13] = useState([]);\n  const [resource14, setResource14] = useState([]);\n  const navigate = useNavigate();\n  const [month, setMonth] = useState();\n\n  const [salesTerritories, setSalesTerritories] = useState([]);\n  const [classification, setClassification] = useState([]);\n  const [industryType, setIndustryType] = useState([]);\n  const [size, setSize] = useState([]);\n  const [buttonPopup, setButtonPopup] = useState(false);\n  const [addList, setAddList] = useState([{}]);\n  const [addList1, setAddList1] = useState([{}]);\n  const [data, setData] = useState();\n  const [zip, setZip] = useState();\n  const [countryId, setcountryId] = useState([]);\n  const [cCountryId, setcCountryId] = useState([]);\n  const [sName, setSName] = useState([]);\n  const [cCName, setCCName] = useState();\n  const [states, setStates] = useState([]);\n  const [finalstates, setFinalStates] = useState([]);\n  const [cities, setCities] = useState([]);\n  const [finalcities, setFinalCities] = useState([]);\n  const [EndDt, setEndDt] = useState();\n  const [StartDt, setStartDt] = useState();\n  const [postDetails, setPostDetails] = useState([]);\n  const [clickButtonPopUp, setClickButtonPopUp] = useState(false);\n  const [successvalidationmessage, setSuccessvalidationmessage] =\n    useState(false);\n  const [message, setMessage] = useState(false);\n  const [displayCountry, setDisplayCountry] = useState();\n  const [displayTextEmails, setDisplayTextEmails] = useState([]);\n  const [cust, setCust] = useState(0);\n  const [uniqueMessage, setUniqueMessage] = useState(false);\n  const intialOnChangeState = {\n    poNumber: \"\",\n  };\n  const intialOnChangeState1 = {\n    customerEmails: \"\",\n  };\n  const [finalState, setFinalState] = useState({});\n  const [finalState1, setFinalState1] = useState({});\n  const [onChangeState, setOnChangeState] = useState(intialOnChangeState);\n  const [onChangeState1, setOnChangeState1] = useState(intialOnChangeState1);\n  const [selectedValue, setSelectedValue] = useState(\"\");\n  const handleChangeCustom = (e) => {\n    setSelectedValue(e.target.value);\n  };\n\n  const [details, setDetails] = useState({\n    loggedId: loggedUserId,\n    fullName: \"\",\n    salesPersonId: \"\",\n    cslId: \"\",\n    cslHeadId: \"\",\n    acslId: \"\",\n    salesTerritoryId: \"\",\n    typProjCatId: \"\",\n    typIndustryId: \"\",\n    typCustStatusId: \"\",\n    website: \"http://\",\n    sfAccountLink: \"http://\",\n    phone: \"\",\n    fax: \"\",\n    size: \"\",\n    custReferenceable: \"\",\n    typClassificationId: \"\",\n    cCountryId: \"\",\n    countryId: \"\",\n    clientPartnerId: \"\",\n    clId: \"\",\n    deliveryPartnerId: \"\",\n    deliveryPartnerHeadId: \"\",\n    engagementPartnerId: \"\",\n    customerEmails: \"\",\n    talentPartnerId: \"\",\n    projectCoordinatorId: \"\",\n    sqaId: \"\",\n    accountOwnerId: \"\",\n    isNewCustomer: \"0\",\n    dName: \"\",\n    address: \"\",\n    contact: \"\",\n    dStateId: \"\",\n    dCityId: \"\",\n    zipCode: \"\",\n    eName: \"\",\n    engagementModelId: \"\",\n    startDt: \"\",\n    endDt: \"\",\n    managerId: \"\",\n    executiveId: \"\",\n    companyCostCenterId: \"\",\n    engagementStatusId: \"1\",\n    eCurrency: \"\",\n    sow: \"\",\n    sfOpportunityLink: \"\",\n    contModelId: \"\",\n    eState: \"\",\n    eCity: \"\",\n    attn: \"\",\n    paymentTermsId: \"\",\n    invoiceCycleId: \"\",\n    invoiceCultureId: \"\",\n    invoiceTemplateId: \"\",\n    invoiceTimeId: \"\",\n    billingInstructions: \"\",\n    clientMessage: \"\",\n    contractTermId: \"\",\n    costContractTermId: \"\",\n    revenueRecognitionId: \"\",\n    customerDiscount: \"\",\n    emailTemplateId: \"\",\n    toEmails: \"\",\n    ccEmails: \"\",\n    bccEmails: \"\",\n    ciInvoiceForId: \"652\",\n    ciCurrencyId: \"\",\n    isExpenseBillable: \"1\",\n    ciDiscountPercent: \"\",\n    poNumber: \"\",\n    resourceId: \"\",\n    month: \"\",\n    companyId: \"\",\n  });\n\n  const getloggeduser = () => {\n    axios\n      .get(baseUrl + `/ProjectMS/Audit/getloggeduser?loggedId=${loggedUserId}`)\n      .then((Response) => {\n        let data = Response.data;\n        setlogged(data);\n        setDetails((prev) => ({ ...prev, resourceId: data }));\n      });\n  };\n  const getAllCustomers = () => {\n    axios\n      .get(baseUrl + `/customersms/Customers/getAllCustomers`)\n      .then((Response) => {\n        let data = Response.data;\n        setAllCustomers(data);\n      });\n  };\n\n  const getAbsoluteMonths = (momentDate) => {\n    let mont = Number(moment(momentDate).format(\"MM\"));\n    let yea = Number(moment(momentDate).format(\"YYYY\"));\n    return mont + yea * 12;\n  };\n\n  const calculateDuration = (e) => {\n    let startMonths = getAbsoluteMonths(e);\n    let endMonths = getAbsoluteMonths(moment());\n    let monthDifference = endMonths - startMonths;\n    monthDifference += 1;\n    let dr = [];\n    for (let i = 1; i <= monthDifference; i++) {\n      dr.push(i);\n    }\n  };\n\n  useEffect(() => {\n    calculateDuration(month);\n  }, []);\n\n  const handleAdd = () => {\n    let data = finalState;\n    data[Object.keys(data).length] = onChangeState[\"poNumber\"];\n    setFinalState(data);\n    setAddList([...addList, { poNumber: \"\" }]);\n  };\n\n  const handleAddEmail = () => {\n    let data1 = finalState1;\n    data1[Object.keys(data1).length] = onChangeState1[\"customerEmails\"];\n    // setFinalState1(data1);\n    setAddList1([...addList1, { customerEmails: \"\" }]);\n  };\n\n  useEffect(() => {}, [addList1]);\n\n  const handleChange = (e) => {\n    const { id, name, value } = e.target;\n\n    onChangeState[id] = value;\n\n    setDetails((prev) => {\n      return { ...prev, [id]: value };\n    });\n\n    setZip(details.zipCode == \"\" ? \"\" : details.zipCode);\n    setData(details.address == \"\" ? \"\" : details.address);\n  };\n\n  const handleChange5 = (e) => {\n    const { id, options } = e.target;\n\n    const selectedValues = Array.from(options)\n      .filter((option) => option.selected)\n      .map((option) => option.value)\n      .join(\",\"); // Join the selected values with a comma\n\n    setDetails((prev) => ({\n      ...prev,\n      [id]: selectedValues,\n    }));\n  };\n\n  const handleChange4 = (e) => {\n    const { id, name, value } = e.target;\n    details[(id, name)] = value;\n  };\n  const handleChange1 = (e) => {\n    const { id, name, value } = e.target;\n    onChangeState1[id] = value;\n    details[(id, name)] = value;\n  };\n\n  const handleChange2 = (e) => {\n    const { id, name, value } = e.target;\n    details[(id, name)] = value;\n  };\n\n  //////////////////////////////////////Country-State-City//////////////////////////////////////\n\n  useLayoutEffect(() => {\n    let tempStates = states;\n    let countryId = details.countryId;\n    let fStates = tempStates.filter((d) => d.countryId == countryId);\n    setFinalStates(fStates);\n\n    let tempCities = cities;\n    let stateId = details.stateId;\n    let fCountries = tempCities.filter((d) => d.stateId == stateId);\n    setFinalCities(fCountries);\n  }, [states, cities]);\n\n  const getcountryId = () => {\n    axios({\n      url: baseUrl + `/CostMS/cost/getCountries`,\n    }).then((resp) => {\n      const filteredData = resp.data.filter(\n        (item) => item.country_name !== \"NM\"\n      );\n      setcountryId(filteredData);\n    });\n  };\n\n  const getcCountryId = () => {\n    axios({\n      url: baseUrl + `/CostMS/cost/getCountries`,\n    }).then((resp) => {\n      const filteredData = resp.data.filter(\n        (item) => item.country_name !== \"NM\"\n      );\n      setcCountryId(filteredData);\n    });\n  };\n\n  const getStates = () => {\n    axios({\n      url: baseUrl + `/VendorMS/vendor/states`,\n    }).then((resp) => {\n      setStates(resp.data);\n    });\n  };\n\n  const getCities = () => {\n    axios({\n      url: baseUrl + `/VendorMS/vendor/cities`,\n    }).then((resp) => {\n      setCities(resp.data);\n    });\n  };\n\n  const [cName, setCName] = useState([]);\n  const countryHandler = (e) => {\n    let statesData = JSON.parse(JSON.stringify(states));\n    let countryData = JSON.parse(JSON.stringify(countryId));\n    // setCName((prev) => ({ ...prev, [\"country_name\"]: value }));\n    // setCName(e.target.value);\n    // setCName(countryId);\n    {\n      countryData.map((s) => {\n        if (s.id == e.target.value) {\n          setCName(s.country_name);\n        }\n      });\n    }\n\n    let fData = statesData\n      .filter((d) => d.countryId == e.target.value)\n      .sort((a, b) => {\n        b.state - a.state;\n      });\n\n    //////////--Alphabetical Sorting--//////////\n    const sortedstate = fData.sort(function (a, b) {\n      var nameA = a.state.toUpperCase();\n      var nameB = b.state.toUpperCase();\n      if (nameA < nameB) {\n        return -1; //nameA comes first\n      }\n      if (nameA > nameB) {\n        return 1; // nameB comes first\n      }\n      return 0; // names must be equal\n    });\n    //////////----------------------//////////\n\n    setFinalStates(sortedstate);\n    const { id, name, value } = e.target;\n    setDetails((prev) => ({ ...prev, [id]: value }));\n    setDisplayCountry(details.countryId);\n  };\n\n  const stateHandler = (e) => {\n    let citiesData = JSON.parse(JSON.stringify(cities));\n    let Finalcities = JSON.parse(JSON.stringify(finalstates));\n    let fData = citiesData.filter((d) => d.stateId == e.target.value);\n    {\n      Finalcities.map((d) => {\n        if (d.id == e.target.value) {\n          setSName(d.state);\n          setDetails((prev) => ({ ...prev, eState: d.state }));\n        }\n      });\n    }\n\n    //////////--Alphabetical Sorting--//////////\n    const sortedcities = fData.sort(function (a, b) {\n      var nameA = a.city.toUpperCase();\n      var nameB = b.city.toUpperCase();\n      if (nameA < nameB) {\n        return -1; //nameA comes first\n      }\n      if (nameA > nameB) {\n        return 1; // nameB comes first\n      }\n      return 0; // names must be equal\n    });\n    //////////------------------------//////////\n\n    setFinalCities(sortedcities);\n    const { id, value } = e.target;\n    setDetails((prev) => ({ ...prev, [id]: value }));\n  };\n  const cityIdHandler = (e) => {\n    let citiesData = JSON.parse(JSON.stringify(cities));\n    {\n      citiesData.map((c) => {\n        if (c.id == e.target.value) {\n          setCCName(c.city);\n          setDetails((prev) => ({ ...prev, eCity: c.city }));\n        }\n      });\n    }\n    const { id, value } = e.target;\n    setDetails((prev) => ({ ...prev, [id]: value }));\n  };\n\n  const handleContractModel = () => {\n    axios({\n      method: \"get\",\n      url: baseUrl + `/ProjectMS/Engagement/getContractModel`,\n    }).then((res) => {\n      let custom = res.data;\n      setContractModel(custom);\n    });\n  };\n\n  const handleEngagementType = () => {\n    axios({\n      method: \"get\",\n      url: baseUrl + `/ProjectMS/Engagement/getEngagementType`,\n    }).then((res) => {\n      let engtype = res.data;\n      const filteredData = engtype.filter(\n        (item) => item.id !== 356 && item.id !== 355\n      );\n      setEngagementType(filteredData);\n    });\n  };\n\n  const handleContract = () => {\n    axios({\n      method: \"get\",\n      url: baseUrl + `/ProjectMS/Engagement/getContractTerms`,\n    }).then((res) => {\n      let contact = res.data;\n      const filterData1 = contact.filter((item) => item.id !== 612);\n      setContract(filterData1);\n    });\n  };\n\n  const handlePaymentTerm = () => {\n    axios({\n      method: \"get\",\n      url: baseUrl + `/ProjectMS/Engagement/getPaymentTerms`,\n    }).then((res) => {\n      let payterm = res.data;\n      setPaymentTerm(payterm);\n    });\n  };\n\n  const handleInvoiceCycle = () => {\n    axios({\n      method: \"get\",\n      url: baseUrl + `/ProjectMS/Engagement/getInvoiceCycle`,\n    }).then((res) => {\n      let invcycle = res.data;\n      setInvoiceCycle(invcycle);\n    });\n  };\n\n  const handleInvoiceCulture = () => {\n    axios({\n      method: \"get\",\n      url: baseUrl + `/ProjectMS/Engagement/getInvoiceCulture`,\n    }).then((res) => {\n      let inculture = res.data;\n      setInvoiceCulture(inculture);\n    });\n  };\n\n  const handleInvoiceTemplate = () => {\n    axios({\n      method: \"get\",\n      url: baseUrl + `/ProjectMS/Engagement/getInvoiceTemplate`,\n    }).then((res) => {\n      let invtemp = res.data;\n      setInvoiceTemplate(invtemp);\n    });\n  };\n\n  const handleInvoiceTime = () => {\n    axios({\n      method: \"get\",\n      url: baseUrl + `/ProjectMS/Engagement/getInvoiceTime`,\n    }).then((res) => {\n      let intime = res.data;\n      setInvoiceTime(intime);\n    });\n  };\n\n  const handleCurrency = () => {\n    axios({\n      method: \"get\",\n      url: baseUrl + `/ProjectMS/Engagement/getCurrency`,\n    }).then((res) => {\n      let curre = res.data;\n      setCurrency(curre);\n    });\n  };\n\n  const handleEngCompany = () => {\n    axios({\n      method: \"get\",\n      url: baseUrl + `/ProjectMS/Engagement/getEngagementCompanay`,\n    }).then((res) => {\n      let compay = res.data;\n      const filterData = compay.filter(\n        (item) =>\n          item.id !== 13 && item.id !== 12 && item.id !== 11 && item.id !== 10\n      );\n      setEngCompany(filterData);\n    });\n  };\n\n  const handleProjectCategory = () => {\n    axios({\n      method: \"get\",\n      url: baseUrl + `/ProjectMS/Engagement/getAllProjectCategorys`,\n    }).then((res) => {\n      let manger = res.data;\n      setProjectCategory(manger);\n    });\n  };\n\n  const resourceFnc = async () => {\n    await axios({\n      method: \"get\",\n      url: baseUrl + `/ProjectMS/risks/getAssignedData`,\n    }).then((res) => {\n      let manger = res.data;\n\n      setResource(manger);\n      setResource1(manger);\n      setResource2(manger);\n      setResource3(manger);\n      setResource4(manger);\n      setResource5(manger);\n      setResource6(manger);\n      setResource7(manger);\n      setResource8(manger);\n      setResource9(manger);\n      setResource10(manger);\n      setResource11(manger);\n      setResource12(manger);\n      setResource13(manger);\n      setResource14(manger);\n    });\n  };\n  const handleSalesTerritories = () => {\n    axios({\n      method: \"get\",\n      url: baseUrl + `/ProjectMS/Engagement/getSalesTerritories`,\n    }).then((res) => {\n      let manger = res.data;\n      setSalesTerritories(manger);\n    });\n  };\n\n  const handleClassification = () => {\n    axios({\n      method: \"get\",\n      url: baseUrl + `/ProjectMS/Engagement/getClassification`,\n    }).then((res) => {\n      let manger = res.data;\n      setClassification(manger);\n    });\n  };\n\n  const handleIndustryType = () => {\n    axios({\n      method: \"get\",\n      url: baseUrl + `/ProjectMS/Engagement/getIndustryType`,\n    }).then((res) => {\n      let manger = res.data;\n      setIndustryType(manger);\n    });\n  };\n\n  const handleSize = () => {\n    axios({\n      method: \"get\",\n      url: baseUrl + `/ProjectMS/Engagement/getSize`,\n    }).then((res) => {\n      let manger = res.data;\n      setSize(manger);\n    });\n  };\n\n  const getid = () => {\n    axios({\n      method: \"get\",\n      url: baseUrl + `/ProjectMS/Engagement/getcustomerid`,\n    }).then((res) => {\n      let cust = res.data;\n      setCust(cust);\n    });\n  };\n\n  useEffect(() => {}, [cust], [cName]);\n\n  const handlePostDetails = () => {\n    let filteredData = ref.current.filter((d) => d != null);\n\n    ref.current = filteredData;\n\n    let valid = GlobalValidation(ref);\n    if (valid) {\n      {\n        setSuccessvalidationmessage(true);\n      }\n      return;\n    }\n\n    let customerNamesArr = allCustomers.filter((d) => d !== null);\n    let someDataa = customerNamesArr.some(\n      (d) => d.full_name == details.fullName\n    );\n\n    if (someDataa) {\n      let ele = document.getElementsByClassName(\"unique\");\n      for (let index = 0; index < ele.length; index++) {\n        ele[index].classList.add(\"error-block\");\n      }\n\n      setUniqueMessage(true);\n      setSuccessvalidationmessage(false);\n      setTimeout(() => {\n        setUniqueMessage(false);\n      }, 3000);\n      return;\n    }\n\n    let finalObj = details;\n\n    finalObj[\"customerEmails\"] = Object.values(finalState1).toString();\n\n    // setDetails((prev) => ({ ...prev, [prev.customerEmails]: Object.values(finalState1) }))\n\n    axios({\n      method: \"post\",\n      url: `/ProjectMS/Engagement/postEngagementsCusDetails`,\n      // url: `http://localhost:8090/ProjectMS/Engagement/postEngagementsCusDetails`,\n      data: details,\n    }).then(function (res) {\n      var resp = res.data;\n      setPostDetails(resp);\n      setMessage(true);\n      window.scrollTo({ top: 0, behavior: \"smooth\" });\n      setSuccessvalidationmessage(false);\n      setTimeout(() => {\n        setMessage(false);\n\n        window.open(\n          `/#/search/customerSearch/customer/dashboard/:${resp.status.id}`,\n          `_self`\n        );\n      }, 1000);\n    });\n  };\n  const ref = useRef([]);\n\n  const handleCancel1 = () => {\n    let ele = document.getElementsByClassName(\"cancel\");\n    for (let index = 0; index < ele.length; index++) {\n      ele[index].value = \"\";\n\n      if (ele[index].classList.contains(\"reactautocomplete\")) {\n        ele[\n          index\n        ].children[0].children[0].children[0].children[0].children[0].children[1]?.click();\n      }\n    }\n  };\n  const handleCancel = (e) => {\n    let ele = document.getElementsByClassName(\"cancel\");\n\n    GlobalCancel(ref);\n    setSuccessvalidationmessage(false);\n\n    for (let index = 0; index < ele.length; index++) {\n      ele[index].value = \"\";\n\n      if (ele[index].classList.contains(\"reactautocomplete\")) {\n        ele[\n          index\n        ].children[0].children[0].children[0].children[0].children[0].children[1]?.click();\n      }\n    }\n  };\n\n  const clickHanlderPopUp = () => {\n    setButtonPopup(true);\n  };\n  const clickButtonHandlerPopUp = () => {\n    setClickButtonPopUp(true);\n  };\n\n  useEffect(() => {\n    handleEngagementType();\n    handleContract();\n    getloggeduser();\n    getcountryId();\n    getStates();\n    getCities();\n    getAllCustomers();\n    getcCountryId();\n    getid();\n  }, []);\n\n  useEffect(() => {\n    handleProjectCategory();\n    handleSalesTerritories();\n    handleClassification();\n    handleIndustryType();\n    handleSize();\n  }, []);\n\n  useEffect(() => {\n    resourceFnc();\n  }, []);\n\n  useEffect(() => {\n    handlePaymentTerm();\n    handleInvoiceCycle();\n    handleInvoiceCulture();\n    handleInvoiceTemplate();\n    handleInvoiceTime();\n  }, []);\n\n  useEffect(() => {\n    handleCurrency();\n    handleEngCompany();\n    handleContractModel();\n  }, []);\n\n  useEffect(() => {}, [postDetails]);\n\n  const handleNewCustomerChange = (e) => {\n    setDetails((prev) => ({ ...prev, [\"isNewCustomer\"]: \"1\" }));\n  };\n\n  const handleExistingCustomerChange = (e) => {\n    setDetails((prev) => ({ ...prev, [\"isNewCustomer\"]: \"0\" }));\n  };\n\n  const handleIsBillableChange = (e) => {\n    setDetails((prev) => ({ ...prev, [\"isExpenseBillable\"]: \"1\" }));\n  };\n\n  const handleNoBillableChange = (e) => {\n    setDetails((prev) => ({ ...prev, [\"isExpenseBillable\"]: \"0\" }));\n  };\n\n  const handleClear = () => {\n    setDetails((prev) => ({ ...prev, salesPersonId: \"\" }));\n  };\n\n  const handleClear1 = () => {\n    setDetails((prev) => ({ ...prev, clientPartnerId: \"\" }));\n  };\n\n  const handleClear2 = () => {\n    setDetails((prev) => ({ ...prev, engagementPartnerId: \"\" }));\n  };\n\n  const handleClear3 = () => {\n    setDetails((prev) => ({ ...prev, clId: \"\" }));\n  };\n\n  const handleClear4 = () => {\n    setDetails((prev) => ({ ...prev, cslHeadId: \"\" }));\n  };\n\n  const handleClear5 = () => {\n    setDetails((prev) => ({ ...prev, cslId: \"\" }));\n  };\n\n  const handleClear6 = () => {\n    setDetails((prev) => ({ ...prev, acslId: \"\" }));\n  };\n\n  const handleClear7 = () => {\n    setDetails((prev) => ({ ...prev, deliveryPartnerHeadId: \"\" }));\n  };\n\n  const handleClear8 = () => {\n    setDetails((prev) => ({ ...prev, deliveryPartnerId: \"\" }));\n  };\n\n  const handleClear9 = () => {\n    setDetails((prev) => ({ ...prev, talentPartnerId: \"\" }));\n  };\n\n  const handleClear10 = () => {\n    setDetails((prev) => ({ ...prev, projectCoordinatorId: \"\" }));\n  };\n\n  const handleClear11 = () => {\n    setDetails((prev) => ({ ...prev, sqaId: \"\" }));\n  };\n\n  const handleClear12 = () => {\n    setDetails((prev) => ({ ...prev, managerId: \"\" }));\n  };\n\n  const handleClear13 = () => {\n    setDetails((prev) => ({ ...prev, executiveId: \"\" }));\n  };\n\n  const handleClear14 = () => {\n    setDetails((prev) => ({ ...prev, accountOwnerId: \"\" }));\n  };\n  const onChangeHandler = (e) => {\n    setDetails((prevProps) => ({\n      ...prevProps,\n      salesPersonId: e.id,\n    }));\n  };\n  const onChangeHandler1 = (e) => {\n    setDetails((prevProps) => ({\n      ...prevProps,\n      clientPartnerId: e.id,\n    }));\n  };\n\n  const [routes, setRoutes] = useState([]);\n  let textContent = \"Customers\";\n  let currentScreenName = [\"Create Customer\"];\n\n  useEffect(() => {\n    getMenus();\n  }, []);\n\n  const getMenus = () => {\n    // setMenusData\n\n    axios({\n      method: \"GET\",\n      url: baseUrl + `/CommonMS/master/getMenus?loggedUserId=${loggedUserId}`,\n    }).then((resp) => {\n      let data = resp.data;\n\n      data.forEach((item) => {\n        if (item.display_name === textContent) {\n          setRoutes([item]);\n        }\n      });\n    });\n  };\n\n  return (\n    <div>\n      <div className=\"col-md-12\">\n        <div className=\"pageTitle\">\n          <div className=\"childOne\"></div>\n          <div className=\"childTwo\">\n            <h2>Create Customer</h2>\n          </div>\n          <div className=\"childThree\"></div>\n        </div>\n      </div>\n      <ScreenBreadcrumbs\n        routes={routes}\n        currentScreenName={currentScreenName}\n      />\n      {message ? (\n        <div className=\"statusMsg success\">\n          <span>\n            <BiCheck />\n            customer created successfully\n          </span>\n        </div>\n      ) : (\n        \"\"\n      )}\n      {successvalidationmessage ? (\n        <div className=\"statusMsg error\">\n          <span>\n            <AiFillWarning /> Please select the valid values for highlighted\n            fields\n          </span>\n        </div>\n      ) : (\n        \"\"\n      )}\n      {uniqueMessage ? (\n        <div className=\"statusMsg error\">\n          {\" \"}\n          <AiFillWarning /> Customer is already exist with this name\n        </div>\n      ) : (\n        \"\"\n      )}\n      <div className=\"mb-3 mt-2 container-fluid   customCard cancel\">\n        <div className=\"group-content row\">\n          <div className=\"col-md-9\">\n            <div className=\"row\">\n              <div className=\"form-group col-md-8 mb-2\">\n                <label htmlFor=\"fullName\">\n                  Customer Name <span className=\"error-text\">*</span>\n                </label>\n                <div\n                  className=\"textfield\"\n                  ref={(ele) => {\n                    ref.current[0] = ele;\n                  }}\n                >\n                  <input\n                    type=\"text\"\n                    className=\"unique cancel\"\n                    name=\"fullName\"\n                    id=\"fullName\"\n                    onChange={handleChange2}\n                  />\n                </div>\n              </div>\n              <div className=\"form-group col-md-4 mb-2\">\n                <label htmlFor=\"typCustStatusId\">\n                  Customer Status&nbsp;<span className=\"error-text\">*</span>\n                </label>\n                <select\n                  ref={(ele) => {\n                    ref.current[1] = ele;\n                  }}\n                  className=\"text cancel\"\n                  name=\"typCustStatusId\"\n                  id=\"typCustStatusId\"\n                  onChange={handleChange}\n                >\n                  <option value=\"\"> &lt;&lt;Please Select&gt;&gt;</option>\n                  <option value={160}>New</option>\n                  <option value={161}>Active</option>\n                  <option value={162}>InActive</option>\n                </select>\n              </div>\n              <div className=\"form-group col-md-4 mb-2\">\n                <label htmlFor=\"size\">Size</label>\n                <select\n                  className=\"cancel\"\n                  name=\"size\"\n                  id=\"size\"\n                  onChange={handleChange4}\n                >\n                  <option value=\"\"> &lt;&lt;Please Select&gt;&gt;</option>\n                  {size.map((Item, index) => (\n                    <option key={index} value={Item.id}>\n                      {Item.lkup_name}\n                    </option>\n                  ))}\n                </select>\n              </div>\n              <div className=\"form-group col-md-4 mb-2\">\n                <label htmlFor=\"salesTerritoryId\">\n                  Sales Territory&nbsp;<span className=\"error-text\">*</span>\n                </label>\n                <select\n                  ref={(ele) => {\n                    ref.current[2] = ele;\n                  }}\n                  className=\"text cancel\"\n                  name=\"salesTerritoryId\"\n                  id=\"salesTerritoryId\"\n                  onChange={handleChange}\n                >\n                  <option value=\"\"> &lt;&lt;Please Select&gt;&gt;</option>\n                  {salesTerritories\n                    .sort((a, b) => a.full_name.localeCompare(b.full_name))\n                    .map((Item, index) => (\n                      <option key={index} value={Item.id}>\n                        {Item.full_name}\n                      </option>\n                    ))}\n                </select>\n              </div>\n\n              <div className=\"form-group col-md-4 mb-2\">\n                <label htmlFor=\"typIndustryId\">\n                  Industry type&nbsp;<span className=\"error-text\">*</span>\n                </label>\n                <select\n                  ref={(ele) => {\n                    ref.current[3] = ele;\n                  }}\n                  className=\"text cancel\"\n                  id=\"typIndustryId\"\n                  name=\"typIndustryId\"\n                  onChange={handleChange}\n                >\n                  <option value=\"\"> &lt;&lt;Please Select&gt;&gt;</option>\n                  {industryType\n                    .sort((a, b) => a.lkup_name.localeCompare(b.lkup_name))\n                    .map((Item, index) => (\n                      <option key={index} value={Item.id}>\n                        {Item.lkup_name}\n                      </option>\n                    ))}\n                </select>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"form-group col-md-3 mb-2\">\n            <label htmlFor=\"typProjCatId\" class=\"srk\">\n              Project Category&nbsp;<span className=\"error-text\">*</span>\n            </label>\n            <select\n              ref={(ele) => {\n                ref.current[4] = ele;\n              }}\n              className=\"auto text  cancel\"\n              name=\"typProjCatId\"\n              id=\"typProjCatId\"\n              onChange={handleChange}\n              multiple\n              // size={5}\n              // value={details.typProjCatId}\n            >\n              {projectcategory.map((Item, index) => (\n                <option key={index} value={Item.id}>\n                  {Item.project_category_name}\n                </option>\n              ))}\n            </select>\n          </div>\n\n          <div className=\"form-group col-md-3 mb-2\">\n            <label htmlFor=\"salesPersonId\">\n              Sales Executive&nbsp;<span className=\"error-text\">*</span>\n            </label>\n            <div\n              className=\"autoComplete-container cancel  reactautocomplete\"\n              ref={(ele) => {\n                ref.current[5] = ele;\n              }}\n            >\n              <RiskAutoComplete\n                riskDetails={resource}\n                setFormData={setDetails}\n                getData={resourceFnc}\n                value=\"0\"\n                type=\"Text\"\n                name=\"salesPersonId\"\n                id=\"salesPersonId\"\n                placeholder=\"Type minimum 3 characters to get the list\"\n                onClear={handleClear}\n                onChangeHandler={onChangeHandler}\n              />\n            </div>\n          </div>\n\n          <div className=\"form-group col-md-3 mb-2\">\n            <label htmlFor=\"Month\">\n              Effective Month&nbsp;<span className=\"error-text\">*</span>\n            </label>\n            <div\n              className=\"datepicker\"\n              ref={(ele) => {\n                ref.current[6] = ele;\n              }}\n            >\n              <DatePicker\n                name=\"month\"\n                id=\"month\"\n                className=\"cancel\"\n                placeholderText=\"month\"\n                selected={month}\n                // showMonthDropdown\n                // showYearDropdown\n                onChange={(e) => {\n                  calculateDuration(e);\n                  setDetails((prev) => ({\n                    ...prev,\n                    [\"month\"]: moment(e).format(\"yyyy-MM-DD\"),\n                  }));\n                  setMonth(e);\n                }}\n                dateFormat=\"MMM-yyyy\"\n                onKeyDown={(e) => {\n                  e.preventDefault();\n                }}\n                showMonthYearPicker\n              />\n            </div>\n          </div>\n\n          <div className=\"form-group col-md-3 mb-2\">\n            <label htmlFor=\"clientPartnerId\">Client Partner</label>\n            <div className=\"autoComplete-container cancel  reactautocomplete\">\n              <RiskAutoComplete\n                riskDetails={resource1}\n                setFormData={setDetails}\n                getData={resourceFnc}\n                value=\"0\"\n                type=\"Text\"\n                name=\"clientPartnerId\"\n                id=\"clientPartnerId\"\n                placeholder=\"Type minimum 3 characters to get the list\"\n                onChangeHandler={onChangeHandler1}\n                onClear={handleClear1}\n                showIcon={false}\n              />\n            </div>\n          </div>\n\n          <div className=\"form-group col-md-3 mb-2\">\n            <label htmlFor=\"engagementPartnerId\">Engagement Partner</label>\n            <div className=\"autoComplete-container cancel  reactautocomplete\">\n              <RiskAutoComplete\n                riskDetails={resource2}\n                setFormData={setDetails}\n                getData={resourceFnc}\n                value=\"0\"\n                type=\"Text\"\n                name=\"engagementPartnerId\"\n                id=\"engagementPartnerId\"\n                placeholder=\"Type minimum 3 characters to get the list\"\n                onChangeHandler={(e) => {\n                  setDetails((prevProps) => ({\n                    ...prevProps,\n                    engagementPartnerId: e.id,\n                  }));\n                }}\n                onClear={handleClear2}\n                showIcon={false}\n              />\n            </div>\n          </div>\n          <div className=\"form-group col-md-3 mb-2\">\n            <label htmlFor=\"clId\">Competency Lead</label>\n            <div className=\"autoComplete-container cancel  reactautocomplete\">\n              <RiskAutoComplete\n                riskDetails={resource3}\n                setFormData={setDetails}\n                getData={resourceFnc}\n                value=\"0\"\n                type=\"Text\"\n                name=\"clId\"\n                id=\"clId\"\n                placeholder=\"Type minimum 3 characters to get the list\"\n                onChangeHandler={(e) => {\n                  setDetails((prevProps) => ({\n                    ...prevProps,\n                    clId: e.id,\n                  }));\n                }}\n                onClear={handleClear3}\n                showIcon={false}\n              />\n            </div>\n          </div>\n          <div className=\"form-group col-md-3 mb-2\">\n            <label htmlFor=\"cslHeadId\">CSL Head</label>\n            <div className=\"autoComplete-container cancel  reactautocomplete\">\n              <RiskAutoComplete\n                riskDetails={resource4}\n                setFormData={setDetails}\n                getData={resourceFnc}\n                value=\"0\"\n                type=\"Text\"\n                name=\"cslHeadId\"\n                id=\"cslHeadId\"\n                placeholder=\"Type minimum 3 characters to get the list\"\n                onChangeHandler={(e) => {\n                  setDetails((prevProps) => ({\n                    ...prevProps,\n                    cslHeadId: e.id,\n                  }));\n                }}\n                onClear={handleClear4}\n                showIcon={false}\n              />\n            </div>\n          </div>\n          <div className=\"form-group col-md-3 mb-2\">\n            <label htmlFor=\"cslId\">CSL</label>\n            <div className=\"autoComplete-container cancel  reactautocomplete\">\n              <RiskAutoComplete\n                riskDetails={resource5}\n                setFormData={setDetails}\n                getData={resourceFnc}\n                value=\"0\"\n                type=\"Text\"\n                name=\"cslId\"\n                id=\"cslId\"\n                placeholder=\"Type minimum 3 characters to get the list\"\n                onChangeHandler={(e) => {\n                  setDetails((prevProps) => ({\n                    ...prevProps,\n                    cslId: e.id,\n                  }));\n                }}\n                onClear={handleClear5}\n                showIcon={false}\n              />\n            </div>\n          </div>\n          <div className=\"form-group col-md-3 mb-2\">\n            <label htmlFor=\"acslId\">Associate CSL</label>\n            <div className=\"autoComplete-container cancel  reactautocomplete\">\n              <RiskAutoComplete\n                riskDetails={resource6}\n                setFormData={setDetails}\n                getData={resourceFnc}\n                value=\"0\"\n                type=\"Text\"\n                name=\"acslId\"\n                id=\"acslId\"\n                placeholder=\"Type minimum 3 characters to get the list\"\n                onChangeHandler={(e) => {\n                  setDetails((prevProps) => ({\n                    ...prevProps,\n                    acslId: e.id,\n                  }));\n                }}\n                onClear={handleClear6}\n                showIcon={false}\n              />\n            </div>\n          </div>\n          <div className=\"form-group col-md-3 mb-2\">\n            <label htmlFor=\"deliveryPartnerHeadId\">Delivery Partner Head</label>\n            <div className=\"autoComplete-container cancel  reactautocomplete\">\n              <RiskAutoComplete\n                riskDetails={resource7}\n                setFormData={setDetails}\n                getData={resourceFnc}\n                value=\"0\"\n                type=\"Text\"\n                name=\"deliveryPartnerHeadId\"\n                id=\"deliveryPartnerHeadId\"\n                placeholder=\"Type minimum 3 characters to get the list\"\n                onChangeHandler={(e) => {\n                  setDetails((prevProps) => ({\n                    ...prevProps,\n                    deliveryPartnerHeadId: e.id,\n                  }));\n                }}\n                onClear={handleClear7}\n                showIcon={false}\n              />\n            </div>\n          </div>\n          <div className=\"form-group col-md-3 mb-2\">\n            <label htmlFor=\"deliveryPartnerId\">Delivery Partner</label>\n            <div className=\"autoComplete-container cancel  reactautocomplete\">\n              <RiskAutoComplete\n                riskDetails={resource8}\n                setFormData={setDetails}\n                getData={resourceFnc}\n                value=\"0\"\n                type=\"Text\"\n                name=\"deliveryPartnerId\"\n                id=\"deliveryPartnerId\"\n                placeholder=\"Type minimum 3 characters to get the list\"\n                onChangeHandler={(e) => {\n                  setDetails((prevProps) => ({\n                    ...prevProps,\n                    deliveryPartnerId: e.id,\n                  }));\n                }}\n                onClear={handleClear8}\n                showIcon={false}\n              />\n            </div>\n          </div>\n          <div className=\"form-group col-md-3 mb-2\">\n            <label htmlFor=\"talentPartnerId\">Talent Partner</label>\n            <div className=\"autoComplete-container cancel  reactautocomplete\">\n              <RiskAutoComplete\n                riskDetails={resource9}\n                setFormData={setDetails}\n                getData={resourceFnc}\n                value=\"0\"\n                type=\"Text\"\n                name=\"talentPartnerId\"\n                id=\"talentPartnerId\"\n                placeholder=\"Type minimum 3 characters to get the list\"\n                onChangeHandler={(e) => {\n                  setDetails((prevProps) => ({\n                    ...prevProps,\n                    talentPartnerId: e.id,\n                  }));\n                }}\n                onClear={handleClear9}\n                showIcon={false}\n              />\n            </div>\n          </div>\n          <div className=\"form-group col-md-3 mb-2\">\n            <label htmlFor=\"projectCoordinatorId\">Project co-ordinator</label>\n            <div className=\"autoComplete-container cancel  reactautocomplete\">\n              <RiskAutoComplete\n                riskDetails={resource10}\n                setFormData={setDetails}\n                getData={resourceFnc}\n                value=\"0\"\n                type=\"Text\"\n                name=\"projectCoordinatorId\"\n                id=\"projectCoordinatorId\"\n                placeholder=\"Type minimum 3 characters to get the list\"\n                onChangeHandler={(e) => {\n                  setDetails((prevProps) => ({\n                    ...prevProps,\n                    projectCoordinatorId: e.id,\n                  }));\n                }}\n                onClear={handleClear10}\n                showIcon={false}\n              />\n            </div>\n          </div>\n          <div className=\"form-group col-md-3 mb-2\">\n            <label htmlFor=\"sqaId\">SQA</label>\n            <div className=\"autoComplete-container cancel  reactautocomplete\">\n              <RiskAutoComplete\n                riskDetails={resource11}\n                setFormData={setDetails}\n                getData={resourceFnc}\n                value=\"0\"\n                type=\"Text\"\n                name=\"sqaId\"\n                id=\"sqaId\"\n                placeholder=\"Type minimum 3 characters to get the list\"\n                onChangeHandler={(e) => {\n                  setDetails((prevProps) => ({\n                    ...prevProps,\n                    sqaId: e.id,\n                  }));\n                }}\n                onClear={handleClear11}\n                showIcon={false}\n              />\n            </div>\n          </div>\n          <div className=\"form-group col-md-3 mb-2\">\n            <label htmlFor=\"cCountryId\">Country</label>\n\n            <select\n              name=\"cCountryId\"\n              className=\"cancel\"\n              id=\"cCountryId\"\n              onChange={(e) => handleChange(e)}\n            >\n              <option value=\"\"> &lt;&lt;Please Select&gt;&gt;</option>\n              {cCountryId.map((Item, index) => (\n                <option key={index} value={Item.id}>\n                  {Item.country_name}\n                </option>\n              ))}\n            </select>\n          </div>\n          <div className=\"form-group col-md-3 mb-2\">\n            <label htmlFor=\"typClassificationId\">Classification</label>\n            <select\n              name=\"typClassificationId\"\n              className=\"cancel\"\n              id=\"typClassificationId\"\n              onChange={handleChange}\n            >\n              <option value=\"\"> &lt;&lt;Please Select&gt;&gt;</option>\n              {classification.map((Item, index) => (\n                <option key={index} value={Item.id}>\n                  {Item.lkup_name}\n                </option>\n              ))}\n            </select>\n          </div>\n          <div className=\"form-group col-md-3 mb-2\">\n            <label htmlFor=\"ciDiscountPercent\">Discount (%)</label>\n            <input\n              type=\"text\"\n              className=\" cancel\"\n              id=\"ciDiscountPercent\"\n              name=\"ciDiscountPercent\"\n              maxLength={6}\n              onKeyDown={(e) =>\n                e.keyCode &&\n                (e.keyCode <= 47 || e.keyCode >= 58) &&\n                e.keyCode != 8 &&\n                e.preventDefault()\n              }\n              required\n              onChange={handleChange}\n            />\n          </div>\n          <div className=\"form-group col-md-3 mb-2\">\n            <label htmlFor=\"currencyId\">Customer Currency</label>\n            <select\n              className=\"cancel\"\n              id=\"ciCurrencyId\"\n              name=\"ciCurrencyId\"\n              onChange={handleChange}\n            >\n              <option value=\"\"> &lt;&lt;Please Select&gt;&gt;</option>\n              {currency.map((Item, index) => (\n                <option key={index} value={Item.id}>\n                  {Item.currency}\n                </option>\n              ))}\n            </select>\n          </div>\n          <div className=\"form-group col-md-3 mb-2\">\n            <label htmlFor=\"website\">Website</label>\n            <input\n              type=\"text\"\n              name=\"website\"\n              className=\" cancel\"\n              id=\"website\"\n              required\n              onChange={handleChange}\n            />\n          </div>\n          <div className=\"form-group col-md-3 mb-2\">\n            <label htmlFor=\"phone\">Phone</label>\n            <input\n              type=\"text\"\n              name=\"phone\"\n              className=\" cancel\"\n              id=\"phone\"\n              maxLength={15}\n              onKeyDown={(e) =>\n                e.keyCode &&\n                (e.keyCode <= 47 || e.keyCode >= 58) &&\n                e.keyCode != 8 &&\n                e.preventDefault()\n              }\n              onChange={handleChange}\n            />\n          </div>\n          <div className=\"form-group col-md-3 mb-2\">\n            <label htmlFor=\"fax\">Fax Number</label>\n            <input\n              type=\"text\"\n              className=\" cancel\"\n              id=\"fax\"\n              name=\"fax\"\n              maxLength={15}\n              onKeyDown={(e) =>\n                e.keyCode &&\n                (e.keyCode <= 47 || e.keyCode >= 58) &&\n                e.keyCode != 8 &&\n                e.preventDefault()\n              }\n              onChange={handleChange}\n            />\n          </div>\n          <div className=\" col-md-3\">\n            <label htmlFor=\"isExpenseBillable\">Expense Billable</label>\n            <div className=\"form-check form-check-inline\">\n              <input\n                className=\"form-check-input cancel\"\n                type=\"radio\"\n                value=\"1\"\n                name=\"isExpenseBillable\"\n                id=\"isExpenseBillable\"\n                onChange={handleIsBillableChange}\n                checked={details[\"isExpenseBillable\"] === \"1\"}\n              />\n              <label className=\"form-check-label cancel\" htmlFor=\"yes\">\n                Yes\n              </label>\n            </div>\n            <div className=\"form-check form-check-inline cancel\">\n              <input\n                className=\"form-check-input cancel\"\n                type=\"radio\"\n                value=\"0\"\n                name=\"isExpenseBillable\"\n                id=\"isExpenseBillable\"\n                onChange={handleNoBillableChange}\n                checked={details[\"isExpenseBillable\"] === \"0\"}\n              />\n              <label className=\"form-check-label cancel\" htmlFor=\"no\">\n                No\n              </label>\n            </div>\n          </div>\n          <div className=\"form-group col-md-3 mb-2\">\n            <label htmlFor=\"sfAccountLink\">SF Account Link</label>\n            <input\n              type=\"text\"\n              name=\"sfAccountLink\"\n              className=\" cancel\"\n              id=\"sfAccountLink\"\n              onChange={handleChange}\n            />\n          </div>\n          <div className=\"form-group col-md-3 mb-2\">\n            <label htmlFor=\"customerEmails\">Customer Email</label>\n            <div className=\"row\">\n              <div className=\"col-md-10\">\n                <input\n                  type=\"text\"\n                  name=\"customerEmails\"\n                  className=\"disableField\"\n                  id=\"customerEmails\"\n                  value={Object.values(finalState1).toString()}\n                  disabled\n                  onChange={handleChange1}\n                />\n              </div>\n              <div className=\"col-md-1\">\n                <MdAddBox\n                  cursor=\"pointer\"\n                  onClick={() => {\n                    clickButtonHandlerPopUp();\n                  }}\n                />\n              </div>\n            </div>\n          </div>\n\n          <div className=\"form-group col-md-3 mb-2\">\n            <label htmlFor=\"custReferenceable\">\n              Is this customer referenceable?\n            </label>\n            <select\n              id=\"custReferenceable\"\n              className=\"cancel\"\n              name=\"custReferenceable\"\n              onChange={handleChange}\n            >\n              <option value=\"\"> &lt;&lt;Please Select&gt;&gt;</option>\n              <option value={1}>Yes</option>\n              <option value={2}>No</option>\n            </select>\n          </div>\n\n          <div className=\"form-group col-md-3 mb-2\">\n            <label htmlFor=\"accountOwnerId\">Account Owner</label>\n            <div className=\"autoComplete-container cancel  reactautocomplete\">\n              <RiskAutoComplete\n                riskDetails={resource14}\n                setFormData={setDetails}\n                getData={resourceFnc}\n                value=\"0\"\n                type=\"Text\"\n                name=\"accountOwnerId\"\n                id=\"accountOwnerId\"\n                // className=\"err cancel\"\n                //fuseOptions={{ keys: [\"id\", \"name\"] }}\n                //resultStringKeyName=\"name\"\n                //resource1={resource1}\n                // resourceFnc={resourceFnc}\n                placeholder=\"Type minimum 3 characters to get the list\"\n                //placeholder=\"\"=\"\"\n                onChangeHandler={(e) => {\n                  setDetails((prevProps) => ({\n                    ...prevProps,\n                    accountOwnerId: e.id,\n                  }));\n                }}\n                onClear={handleClear14}\n                showIcon={false}\n              />\n            </div>\n          </div>\n\n          <div className=\"col-md-3\">\n            <label htmlFor=\"isNewCustomer\">New Logo</label>\n            <div className=\"form-check form-check-inline\">\n              <input\n                className=\"form-check-input cancel\"\n                type=\"radio\"\n                value=\"1\"\n                name=\"isNewCustomer\"\n                id=\"isNewCustomerYes\"\n                checked={details[\"isNewCustomer\"] === \"1\"}\n                onChange={handleNewCustomerChange}\n              />\n              <label\n                className=\"form-check-label cancel\"\n                htmlFor=\"isNewCustomerYes\"\n              >\n                Yes\n              </label>\n            </div>\n            <div className=\"form-check form-check-inline cancel\">\n              <input\n                className=\"form-check-input cancel\"\n                type=\"radio\"\n                value=\"0\"\n                name=\"isNewCustomer\"\n                id=\"isNewCustomerNo\"\n                checked={details[\"isNewCustomer\"] === \"0\"}\n                onChange={handleExistingCustomerChange}\n              />\n              <label\n                className=\"form-check-label cancel\"\n                htmlFor=\"isNewCustomerNo\"\n              >\n                No\n              </label>\n            </div>\n          </div>\n        </div>\n      </div>{\" \"}\n      <div className=\"mb-3 mt-2 container-fluid   customCard\">\n        <h2>Divisions</h2>\n        <div className=\"group-content row\">\n          <div className=\"form-group col-md-3 mb-2\">\n            <label htmlFor=\"dName\">\n              Name&nbsp;<span className=\"error-text\">*</span>\n            </label>\n            <div\n              className=\"textfield\"\n              ref={(ele) => {\n                ref.current[7] = ele;\n              }}\n            >\n              <input\n                type=\"text\"\n                className=\"cancel\"\n                id=\"dName\"\n                name=\"dName\"\n                required\n                onChange={handleChange}\n              />\n            </div>\n          </div>\n          <div className=\"form-group col-md-3 mb-2\">\n            <label htmlFor=\"address\">\n              Address Line&nbsp;<span className=\"error-text\">*</span>\n            </label>\n            <div\n              className=\"textfield\"\n              ref={(ele) => {\n                ref.current[8] = ele;\n              }}\n            >\n              <input\n                type=\"text\"\n                className=\"cancel\"\n                id=\"address\"\n                name=\"address\"\n                required\n                onChange={(e) => {\n                  handleChange1(e);\n                }}\n              />\n            </div>\n          </div>\n          <div className=\"col-md-3 mb-2\">\n            <label>\n              Country&nbsp;<span className=\"error-text\">*</span>\n            </label>\n            <div>\n              <select\n                ref={(ele) => {\n                  ref.current[9] = ele;\n                }}\n                id=\"countryId\"\n                name=\"countryId\"\n                style={{ width: \"100%\", height: \"25px\" }}\n                className=\"text err cancel\"\n                onChange={(e) => {\n                  countryHandler(e);\n                }}\n              >\n                <option key=\"\" value=\"\">\n                  {\"<<Please Select>>\"}\n                </option>\n                {countryId\n                  .sort((a, b) => {\n                    return b.country_name - a.country_name;\n                  })\n                  .map((data, index) => (\n                    <option\n                      key={data.id}\n                      id=\"countryId\"\n                      value={data.id}\n                      selected={details?.countryId == data.id ? true : false}\n                    >\n                      {data.country_name}\n                    </option>\n                  ))}\n              </select>\n            </div>\n          </div>\n          <div className=\"col-md-3 mb-2\">\n            <label>\n              State/Province&nbsp;<span className=\"error-text\">*</span>\n            </label>\n            <div>\n              <select\n                ref={(ele) => {\n                  ref.current[10] = ele;\n                }}\n                id=\"dStateId\"\n                name=\"dStateId\"\n                style={{ width: \"100%\", height: \"25px\" }}\n                className=\"text err cancel\"\n                onChange={(e) => {\n                  stateHandler(e);\n                }}\n                required\n              >\n                <option key=\"\" value=\"\">\n                  {\"<<Please Select>>\"}\n                </option>\n                {finalstates\n                  .sort((a, b) => {\n                    return b.stateId - a.stateId;\n                  })\n                  .map((data1, index) => (\n                    <option\n                      key={data1.country}\n                      id=\"dStateId\"\n                      value={data1.id}\n                      // selected={details?.stateId == data1.id ? true : false}\n                      defaultValue={details?.stateId}\n                    >\n                      {data1.state}\n                    </option>\n                  ))}\n              </select>\n            </div>\n          </div>\n          <div className=\"col-md-3 mb-2\">\n            <label>\n              City&nbsp;<span className=\"error-text\">*</span>\n            </label>\n            <div>\n              <select\n                ref={(ele) => {\n                  ref.current[11] = ele;\n                }}\n                id=\"dCityId\"\n                name=\"dCityId\"\n                style={{ width: \"100%\", height: \"25px\" }}\n                className=\"text cancel err\"\n                onChange={cityIdHandler}\n              >\n                <option key=\"\" value=\"\">\n                  {\"<<Please Select>>\"}\n                </option>\n                {finalcities\n                  .sort((a, b) => {\n                    return b.cityId - a.cityId;\n                  })\n                  .map((data2) => (\n                    <option\n                      key={data2.state}\n                      id=\"dCityId\"\n                      // selected={details?.cityId == data2.id ? true : false}\n                      value={data2.id}\n                    >\n                      {data2.city == \"\" ? \"\" : data2.city}\n                    </option>\n                  ))}\n              </select>\n            </div>\n          </div>\n          <div className=\"form-group col-md-3 mb-2\">\n            <label htmlFor=\"zippostalcode\">ZIP/Postal Code</label>\n            <input\n              name=\"zipCode\"\n              type=\"text\"\n              className=\"cancel\"\n              id=\"zipCode\"\n              //placeholder=\"\"=\"\"\n              maxLength={12}\n              // onChange={handleChange}\n              // onChange={(e) => {\n              //   handleChange1(e);\n              // }}\n              // onKeyDown={(e) => {\n              //   e.preventDefault();\n              // }}\n\n              onKeyDown={(e) =>\n                e.keyCode &&\n                (e.keyCode <= 47 || e.keyCode >= 58) &&\n                e.keyCode != 8 &&\n                e.preventDefault()\n              }\n              onChange={handleChange}\n            />\n          </div>\n          <div className=\"form-group col-md-3 mb-2\">\n            <label htmlFor=\"contactnumber\">Contact Number</label>\n            <input\n              name=\"contact\"\n              type=\"text\"\n              className=\"cancel\"\n              id=\"contact\"\n              //placeholder=\"\"\n              maxLength={20}\n              onKeyDown={(e) =>\n                e.keyCode &&\n                (e.keyCode <= 47 || e.keyCode >= 58) &&\n                e.keyCode != 8 &&\n                e.preventDefault()\n              }\n              onChange={handleChange}\n            />\n          </div>\n        </div>\n      </div>\n      <div className=\"mb-3 mt-2 container-fluid   customCard\">\n        <h2>Engagement</h2>\n        <div className=\"group-content row\">\n          <div className=\"form-group col-md-3 mb-2\">\n            <label htmlFor=\"name\">\n              Name&nbsp;<span className=\"error-text\">*</span>\n            </label>\n            <div\n              className=\"textfield cancel\"\n              ref={(ele) => {\n                ref.current[12] = ele;\n              }}\n            >\n              <input\n                name=\"eName\"\n                type=\"text\"\n                className=\"cancel\"\n                id=\"eName\"\n                //placeholder=\"\"\n                required\n                onChange={handleChange}\n              />\n            </div>\n          </div>\n          <div className=\"form-group col-md-3 mb-2\">\n            <label htmlFor=\"engagementModelId\">\n              Engagement Type&nbsp;<span className=\"error-text\">*</span>\n            </label>\n            <select\n              ref={(ele) => {\n                ref.current[13] = ele;\n              }}\n              className=\"text cancel\"\n              id=\"engagementModelId\"\n              name=\"engagementModelId\"\n              onChange={handleChange}\n            >\n              <option value=\"\"> &lt;&lt;Please Select&gt;&gt;</option>\n              {engagementType.map((Item, index) => (\n                <option key={index} value={Item.id}>\n                  {Item.engagementType}\n                </option>\n              ))}\n            </select>\n          </div>\n          <div className=\"form-group col-md-3 mb-2\">\n            <label htmlFor=\"startDt\">\n              Start Date&nbsp;<span className=\"error-text\">*</span>\n            </label>\n            <div\n              className=\"datepicker\"\n              ref={(ele) => {\n                ref.current[14] = ele;\n              }}\n            >\n              <DatePicker\n                name=\"startDt\"\n                selected={StartDt}\n                id=\"startDt\"\n                className=\"err cancel\"\n                dateFormat=\"dd-MMM-yyyy\"\n                showMonthDropdown\n                showYearDropdown\n                dropdownMode=\"select\"\n                onChange={(e) => {\n                  setDetails((prev) => ({\n                    ...prev,\n                    [\"startDt\"]: moment(e).format(\"yyyy-MM-DD\"),\n                  }));\n                  setStartDt(e);\n                }}\n                onKeyDown={(e) => {\n                  e.preventDefault();\n                }}\n                autoComplete=\"false\"\n              />\n            </div>\n          </div>\n          <div className=\"form-group col-md-3 mb-2\">\n            <label htmlFor=\"endDt\">End Date</label>\n            <DatePicker\n              name=\"endDt\"\n              // selected={EndDt}\n              selected={details.endDt === \"\" ? \"\" : new Date(details.endDt)}\n              id=\"endDt\"\n              className=\"err cancel\"\n              dateFormat=\"dd-MMM-yyyy\"\n              showMonthDropdown\n              showYearDropdown\n              minDate={StartDt ? StartDt : undefined}\n              dropdownMode=\"select\"\n              onChange={(e) => {\n                setDetails((prev) => ({\n                  ...prev,\n                  [\"endDt\"]: moment(e).format(\"yyyy-MM-DD\"),\n                }));\n                setEndDt(e);\n              }}\n              autoComplete=\"false\"\n            />\n          </div>\n          <div className=\"form-group col-md-3 mb-2\">\n            <label htmlFor=\"manager \">\n              Manager&nbsp;<span className=\"error-text\">*</span>\n            </label>\n            <div\n              className=\"autoComplete-container cancel  reactautocomplete\"\n              ref={(ele) => {\n                ref.current[15] = ele;\n              }}\n            >\n              <RiskAutoComplete\n                riskDetails={resource12}\n                setFormData={setDetails}\n                getData={resourceFnc}\n                value=\"0\"\n                type=\"Text\"\n                name=\"managerId\"\n                id=\"managerId\"\n                //fuseOptions={{ keys: [\"id\", \"name\"] }}\n                //resultStringKeyName=\"name\"\n                //resource1={resource1}\n                // resourceFnc={resourceFnc}\n                placeholder=\"Type minimum 3 characters to get the list\"\n                onChangeHandler={(e) => {\n                  setDetails((prevProps) => ({\n                    ...prevProps,\n                    managerId: e.id,\n                  }));\n                }}\n                onClear={handleClear12}\n                showIcon={false}\n              />\n            </div>\n          </div>\n          <div className=\"form-group col-md-3 mb-2\">\n            <label htmlFor=\"executive \">\n              Sales Executive&nbsp;<span className=\"error-text\">*</span>\n            </label>\n            <div\n              className=\"autoComplete-container cancel  reactautocomplete\"\n              ref={(ele) => {\n                ref.current[16] = ele;\n              }}\n            >\n              <RiskAutoComplete\n                riskDetails={resource13}\n                setFormData={setDetails}\n                getData={resourceFnc}\n                value=\"0\"\n                type=\"Text\"\n                name=\"executiveId\"\n                id=\"executiveId\"\n                // className=\"error AutoComplete cancel\"\n                //fuseOptions={{ keys: [\"id\", \"name\"] }}\n                //resultStringKeyName=\"name\"\n                //resource1={resource1}\n                // resourceFnc={resourceFnc}\n                placeholder=\"Type minimum 3 characters to get the list\"\n                // //placeholder=\"\"=\"\"\n                onChangeHandler={(e) => {\n                  setDetails((prevProps) => ({\n                    ...prevProps,\n                    executiveId: e.id,\n                  }));\n                }}\n                onClear={handleClear13}\n                showIcon={false}\n              />\n              {/* </div> */}\n            </div>\n          </div>\n          <div className=\"form-group col-md-3 mb-2\">\n            <label htmlFor=\"contModelId\">Contract Model</label>\n            <select\n              className=\"cancel\"\n              name=\"contModelId\"\n              id=\"contModelId\"\n              onChange={(e) => handleChange(e)}\n            >\n              <option value=\"\"> &lt;&lt;Please Select&gt;&gt;</option>\n              {contractModel\n                .sort((a, b) => a.lkup_name.localeCompare(b.lkup_name))\n                .map((Item, index) => (\n                  <option key={index} value={Item.id}>\n                    {Item.lkup_name}\n                  </option>\n                ))}\n            </select>\n          </div>\n          <div className=\"form-group col-md-3 mb-2\">\n            <label htmlFor=\"companyCostCenter\">Cost Center </label>\n            <>\n              <span className=\"companyCostCenter\" id=\"companyCostCenterId\">\n                <div className=\"poBtn\" style={{ cursor: \"pointer\" }}>\n                  <MdAddCircleOutline />\n                  <span className=\"companyCostCenter\">Select Cost Center</span>\n                </div>\n              </span>\n            </>\n            {/* <input\n              type=\"text\"\n              name=\"companyCostCenterId\"\n              className=\"cancel\"\n              id=\"companyCostCenterId\"\n              //placeholder=\"\"\n              required\n              onChange={handleChange}\n            /> */}\n          </div>\n          <div className=\"form-group col-md-3 mb-2\">\n            <label htmlFor=\"status\">Status</label>\n            <select\n              className=\"\"\n              id=\"engagementStatusId\"\n              name=\"engagementStatusId\"\n              onChange={handleChange}\n            >\n              {/* <option value=\"\"> &lt;&lt;Please Select&gt;&gt;</option> */}\n              <option value=\"1\" selected>\n                Active\n              </option>\n              <option value=\"2\">InActive</option>\n            </select>\n          </div>\n          <div className=\"form-group col-md-3 mb-2\">\n            <label htmlFor=\"currency\">\n              Currency&nbsp;<span className=\"error-text\">*</span>\n            </label>\n            <select\n              className=\"text cancel\"\n              id=\"eCurrency\"\n              name=\"eCurrency\"\n              onChange={(e) => handleChange(e)}\n              ref={(ele) => {\n                ref.current[17] = ele;\n              }}\n            >\n              <option value=\"\"> &lt;&lt;Please Select&gt;&gt;</option>\n              {currency.map((Item, index) => (\n                <option key={index} value={Item.id}>\n                  {Item.currency}\n                </option>\n              ))}\n            </select>\n          </div>\n          <div className=\"form-group col-md-3 mb-2\">\n            <label htmlFor=\"sow\">SOW</label>\n            <input\n              type=\"text\"\n              name=\"sow\"\n              className=\"cancel\"\n              id=\"sow\"\n              //placeholder=\"\"\n              onChange={handleChange}\n            />\n          </div>\n          <div className=\"form-group col-md-3 mb-2\">\n            <label htmlFor=\"sfOpportunityLink\">\n              Salesforce Opportunity Link\n            </label>\n            <input\n              type=\"text\"\n              name=\"sfOpportunityLink\"\n              className=\"cancel\"\n              id=\"sfOpportunityLink\"\n              onChange={handleChange}\n            />\n          </div>\n          <div className=\"form-group col-md-3 mb-2\">\n            <label htmlFor=\"poNumber\">PO Number</label>\n            <div className=\"poBtn\" id=\"poNumber\">\n              <MdAddCircleOutline />\n              <span\n                className=\"poNumber\"\n                style={{ cursor: \"pointer\" }}\n                onClick={() => {\n                  clickHanlderPopUp();\n                }}\n              >\n                Add/Edit PO Number\n              </span>\n            </div>\n          </div>\n\n          <div className=\"form-group col-md-3 mb-2\">\n            <label htmlFor=\"companyId\">\n              Eng.Company&nbsp;<span className=\"error-text\">*</span>\n            </label>\n            <select\n              className=\"text cancel\"\n              name=\"companyId\"\n              id=\"companyId\"\n              onChange={(e) => handleChange(e)}\n              ref={(ele) => {\n                ref.current[18] = ele;\n              }}\n            >\n              <option value=\"\"> &lt;&lt;Please Select&gt;&gt;</option>\n              {engCompany\n                .sort((a, b) => a.Company.localeCompare(b.Company))\n                .map((Item, index) => (\n                  <option key={index} value={Item.id}>\n                    {\" \"}\n                    {Item.Company}\n                  </option>\n                ))}\n            </select>\n          </div>\n          <div className=\"group mb-3 container-fluid   customCard\">\n            <h2>\n              <RiProfileLine /> Billing Information\n            </h2>\n            <div className=\"row cancel\">\n              <div className=\"col-md-4\">\n                <h2>Bill to Details</h2>\n                <div className=\"group-content row\">\n                  <div className=\"mb-2 col-md-12\">\n                    <div className=\"form-group row\">\n                      <label className=\"col-md-5\" htmlFor=\"name\">\n                        Attn.\n                      </label>\n                      <span className=\"col-1 \">:</span>\n                      <div className=\"col-6\">\n                        <input\n                          type=\"text\"\n                          className=\" cancel\"\n                          id=\"attn\"\n                          name=\"attn\"\n                          onChange={handleChange}\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"mb-2 col-md-12\">\n                    <div className=\"form-group row\">\n                      <label className=\"col-5\" htmlFor=\"name-input-inline\">\n                        Address Line\n                      </label>\n                      <span className=\"col-1 \">:</span>\n                      <div className=\"col-6\">\n                        <p className=\"col-6\" id=\"name-input-inline\">\n                          {data}\n                        </p>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"mb-2 col-md-12\">\n                    <div className=\"form-group row\">\n                      <label className=\"col-5\" htmlFor=\"name-input-inline\">\n                        City\n                      </label>\n                      <span className=\"col-1 \">:</span>\n                      <div className=\"col-6\">\n                        <p className=\"col-12\" id=\"name-input-inline\">\n                          {cCName}\n                        </p>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"mb-2 col-md-12\">\n                    <div className=\"form-group row\">\n                      <label className=\"col-5\" htmlFor=\"name-input-inline\">\n                        State/Province\n                      </label>\n                      <span className=\"col-1 \">:</span>\n                      <div className=\"col-6\">\n                        <p className=\"col-12\" id=\"name-input-inline\">\n                          {sName}\n                        </p>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"mb-2 col-md-12\">\n                    <div className=\"form-group row\">\n                      <label className=\"col-5\" htmlFor=\"name-input-inline\">\n                        ZIP/Postal Code\n                      </label>\n                      <span className=\"col-1 \">:</span>\n                      <div className=\"col-6\">\n                        <p className=\"col-6\" id=\"name-input-inline\">\n                          {zip}\n                        </p>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"mb-2 col-md-12\">\n                    <div className=\"form-group row\">\n                      <label className=\"col-5\" htmlFor=\"name-input-inline\">\n                        Country\n                      </label>\n                      <span className=\"col-1 \">:</span>\n                      <div className=\"col-6\">\n                        <p className=\"col-6\" id=\"name-input-inline\">\n                          {cName}\n                        </p>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"col-md-8\">\n                <h2>Invoice Details</h2>\n                <div className=\"row cancel\">\n                  <div className=\"col-md-6 mt-2\">\n                    <div className=\" row \">\n                      <div className=\" col-md-12\">\n                        <div className=\"frmo-group row mb-2\">\n                          <label className=\"col-5\" htmlFor=\"paymentTermsId\">\n                            {\" \"}\n                            Payment Terms&nbsp;\n                            <span className=\"error-text\">*</span>\n                          </label>\n                          <span className=\"col-1\">:</span>\n                          <div className=\"col-6\">\n                            <select\n                              ref={(ele) => {\n                                ref.current[19] = ele;\n                              }}\n                              className=\"text cancel\"\n                              name=\"paymentTermsId\"\n                              id=\"paymentTermsId\"\n                              onChange={(e) => handleChange(e)}\n                            >\n                              <option value=\"\">\n                                {\" \"}\n                                &lt;&lt;Please Select&gt;&gt;\n                              </option>\n                              {paymentTerm.map((Item, index) => (\n                                <option key={index} value={Item.id}>\n                                  {Item.paymentTerms}\n                                </option>\n                              ))}\n                            </select>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                    <div className=\" row \">\n                      <div className=\" col-md-12 \">\n                        <div className=\"frmo-group row mb-2\">\n                          <label className=\"col-5\" htmlFor=\"invoiceCycleId\">\n                            {\" \"}\n                            Invoice Cycle&nbsp;\n                            <span className=\"error-text\">*</span>\n                          </label>\n                          <span className=\"col-1\">:</span>\n                          <div className=\"col-6\">\n                            <div className=\"d-flex\">\n                              {details.invoiceCycleId === \"754\" && (\n                                <div className=\"mr-2\">\n                                  <select\n                                    className=\"error enteredDetails cancel text\"\n                                    name=\"invoiceCycleId\"\n                                    id=\"invoiceCycleId\"\n                                    onChange={(e) => handleChange(e)}\n                                    ref={(ele) => {\n                                      ref.current[20] = ele;\n                                    }}\n                                  >\n                                    <option value=\"\">\n                                      &lt;&lt;Please Select&gt;&gt;\n                                    </option>\n                                    {invoiceCycle?.map((Item) => (\n                                      <option\n                                        key={Item.lkup_type_group_id}\n                                        selected={\n                                          Item.id == details.invoiceCycleId\n                                            ? true\n                                            : false\n                                        }\n                                        value={Item.id}\n                                      >\n                                        {Item.invoiceCycle}\n                                      </option>\n                                    ))}\n                                  </select>\n                                </div>\n                              )}\n                              {details.invoiceCycleId === \"754\" && (\n                                <div>\n                                  <select\n                                    className=\"error enteredDetails cancel text\"\n                                    // name=\"custom\"\n                                    // id=\"custom\"\n                                    // value={details.invoiceCycleId}\n                                    value={selectedValue}\n                                    onChange={(e) => handleChangeCustom(e)}\n                                    ref={(ele) => {\n                                      ref.current[20] = ele;\n                                    }}\n                                  >\n                                    <option value=\"\">\n                                      {\"<<Please Select>>\"}\n                                    </option>\n                                    {[...Array(31)].map((_, index) => (\n                                      <option\n                                        key={index + 1}\n                                        value={index + 1}\n                                        // selected={\n                                        //   index + 1 ===\n                                        //   parseInt(details.invoiceCycleId)\n                                        // }\n                                      >\n                                        {index + 1}\n                                      </option>\n                                    ))}\n                                  </select>\n                                </div>\n                              )}\n                            </div>\n                            {details.invoiceCycleId !== \"754\" && (\n                              <select\n                                className=\"error enteredDetails cancel text\"\n                                name=\"invoiceCycleId\"\n                                id=\"invoiceCycleId\"\n                                onChange={(e) => handleChange(e)}\n                                ref={(ele) => {\n                                  ref.current[20] = ele;\n                                }}\n                              >\n                                <option value=\"\">\n                                  &lt;&lt;Please Select&gt;&gt;\n                                </option>\n                                {invoiceCycle?.map((Item) => (\n                                  <option\n                                    key={Item.lkup_type_group_id}\n                                    selected={\n                                      Item.id == details.invoiceCycleId\n                                        ? true\n                                        : false\n                                    }\n                                    value={Item.id}\n                                  >\n                                    {Item.invoiceCycle}\n                                  </option>\n                                ))}\n                              </select>\n                            )}\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n\n                    <div className=\" row \">\n                      <div className=\" col-md-12 \">\n                        <div className=\"form-group row mb-2\">\n                          <label className=\"col-5\" htmlFor=\"invoiceCultureId\">\n                            Invoice Culture&nbsp;\n                            <span className=\"error-text\">*</span>\n                          </label>\n                          <span className=\"col-1 \">:</span>\n                          <div className=\"col-6\">\n                            <select\n                              ref={(ele) => {\n                                ref.current[21] = ele;\n                              }}\n                              className=\"text cancel\"\n                              name=\"invoiceCultureId\"\n                              id=\"invoiceCultureId\"\n                              onChange={(e) => handleChange(e)}\n                            >\n                              <option value=\"\">\n                                {\" \"}\n                                &lt;&lt;Please Select&gt;&gt;\n                              </option>\n                              {invoiceCulture.map((Item, index) => (\n                                <option key={index} value={Item.id}>\n                                  {Item.invoiceTime}\n                                </option>\n                              ))}\n                            </select>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n\n                    <div className=\" row \">\n                      <div className=\" col-md-12 \">\n                        <div className=\"form-group row mb-2\">\n                          <label className=\"col-5\" htmlFor=\"templateId\">\n                            {\" \"}\n                            Invoice Template&nbsp;\n                            <span className=\"error-text\">*</span>\n                          </label>\n                          <span className=\"col-1 \">:</span>\n                          <div className=\"col-6\">\n                            <select\n                              ref={(ele) => {\n                                ref.current[22] = ele;\n                              }}\n                              className=\"text cancel\"\n                              name=\"invoiceTemplateId\"\n                              id=\"invoiceTemplateId\"\n                              onChange={(e) => handleChange(e)}\n                            >\n                              <option value=\"\">\n                                {\" \"}\n                                &lt;&lt;Please Select&gt;&gt;\n                              </option>\n                              {invoiceTemplate.map((Item, index) => (\n                                <option key={index} value={Item.id}>\n                                  {Item.invoiceTemplate}\n                                </option>\n                              ))}\n                            </select>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                    <div className=\" row \">\n                      <div className=\" col-md-12 \">\n                        <div className=\"form-group row mb-2\">\n                          <label className=\"col-5\" htmlFor=\"timeId\">\n                            Invoice Time&nbsp;\n                            <span className=\"error-text\">*</span>\n                          </label>\n                          <span className=\"col-1\">:</span>\n                          <div className=\"col-6\">\n                            <select\n                              ref={(ele) => {\n                                ref.current[23] = ele;\n                              }}\n                              className=\"text cancel\"\n                              name=\"invoiceTimeId\"\n                              id=\"invoiceTimeId\"\n                              onChange={(e) => handleChange(e)}\n                            >\n                              <option value=\"\">\n                                {\" \"}\n                                &lt;&lt;Please Select&gt;&gt;\n                              </option>\n                              {invoiceTime.map((Item, index) => (\n                                <option key={index} value={Item.id}>\n                                  {Item.invoiceTime}\n                                </option>\n                              ))}\n                            </select>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n\n                  <div className=\"col-md-6\">\n                    <div className=\"row \">\n                      <div className=\"col-md-12 mt-2\">\n                        <label htmlFor=\"billingInstructions\">\n                          Billing Instructions\n                        </label>\n                        <textarea\n                          type=\"text\"\n                          className=\"cancel\"\n                          name=\"billingInstructions\"\n                          id=\"billingInstructions\"\n                          rows={3}\n                          required\n                          onChange={handleChange}\n                        />\n                      </div>\n                    </div>\n                    <div className=\"row \">\n                      <div className=\"form-group col-md-12\">\n                        <label htmlFor=\"clientMessage\">Client Message</label>\n                        <textarea\n                          className=\"cancel\"\n                          name=\"clientMessage\"\n                          id=\"clientMessage\"\n                          //placeholder=\"\"=\"\"\n                          rows={2}\n                          required\n                          defaultValue={\"\"}\n                          onChange={handleChange}\n                        />\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            <div className=\"row\">\n              <div className=\"col-md-4 group mb-3 container-fluid   customCard\">\n                <div className=\"group-content row \">\n                  <h2>Contract</h2>\n                  <div className=\" row \">\n                    <div className=\"mb-2 col-md-12\">\n                      <div className=\"form-group row\">\n                        <label\n                          className=\"col-5\"\n                          htmlFor=\"Contract Terms -select\"\n                        >\n                          {\" \"}\n                          Contract Terms&nbsp;\n                          <span className=\"error-text\">*</span>\n                        </label>\n                        <span className=\"col-1 \">:</span>\n                        <div className=\"col-6\">\n                          <select\n                            ref={(ele) => {\n                              ref.current[24] = ele;\n                            }}\n                            className=\"text cancel\"\n                            name=\"contractTermId\"\n                            id=\"contractTermId\"\n                            onChange={(e) => handleChange(e)}\n                          >\n                            <option value=\"\">\n                              {\" \"}\n                              &lt;&lt;Please Select&gt;&gt;\n                            </option>\n                            {contract.map((Item, index) => (\n                              <option key={index} value={Item.id}>\n                                {Item.contractTerm}\n                              </option>\n                            ))}\n                          </select>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\" row \">\n                    <div className=\"mb-2 col-md-12\">\n                      <div className=\"form-group row\">\n                        <label\n                          className=\"col-5\"\n                          htmlFor=\"Cost Contract Terms-select\"\n                        >\n                          {\" \"}\n                          Cost Contract Terms\n                        </label>\n                        <span className=\"col-1 \">:</span>\n                        <div className=\"col-6\">\n                          <select\n                            className=\"cancel\"\n                            name=\"costContractTermId\"\n                            id=\"costContractTermId\"\n                            onChange={(e) => handleChange(e)}\n                          >\n                            <option value=\"\">\n                              {\" \"}\n                              &lt;&lt;Please Select&gt;&gt;\n                            </option>\n                            {contract.map((Item, index) => (\n                              <option key={index} value={Item.id}>\n                                {Item.contractTerm}\n                              </option>\n                            ))}\n                          </select>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n\n                  <div className=\" row \">\n                    <div className=\"mb-2 col-md-12\">\n                      <div className=\"form-group row\">\n                        <label\n                          className=\"col-5\"\n                          htmlFor=\"Revenue Recognization -select\"\n                        >\n                          {\" \"}\n                          Revenue Recognization{\" \"}\n                        </label>\n                        <span className=\"col-1 \">:</span>\n                        <div className=\"col-6\">\n                          <select\n                            className=\"cancel\"\n                            name=\"revenueRecognitionId\"\n                            id=\"revenueRecognitionId\"\n                            onChange={handleChange}\n                          >\n                            <option value=\"\">\n                              {\" \"}\n                              &lt;&lt;Please Select&gt;&gt;\n                            </option>\n                            <option value={1}>Revenue Recognization 1</option>\n                            <option value={2}>Revenue Recognization 2</option>\n                          </select>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n\n                  <div className=\" row \">\n                    <div className=\"mb-2 col-md-12\">\n                      <div className=\"form-group row\">\n                        <label className=\"col-5\" htmlFor=\"customerDiscount\">\n                          {\" \"}\n                          Discount (%)\n                        </label>\n                        <span className=\"col-1 \">:</span>\n\n                        <div className=\"col-6\">\n                          <input\n                            type=\"text\"\n                            className=\"cancel\"\n                            name=\"customerDiscount\"\n                            id=\"customerDiscount\"\n                            maxLength={6}\n                            onKeyDown={(e) =>\n                              e.keyCode &&\n                              (e.keyCode <= 47 || e.keyCode >= 58) &&\n                              e.keyCode != 8 &&\n                              e.preventDefault()\n                            }\n                            onChange={handleChange}\n                          />\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"col-md-4 group mb-3 container-fluid   customCard\">\n                <div className=\"group-content row \">\n                  <h2>Tax Structure</h2>\n                  <div className=\" row \">\n                    <div className=\"mb-2 col-md-12 \">\n                      <div className=\"form-group row\">\n                        <label className=\"col-5\" htmlFor=\"percentage\">\n                          Tax Type 1\n                        </label>\n                        <span className=\"col-1 \">:</span>\n                        <div className=\"col-2\">\n                          <input\n                            type=\"text\"\n                            name=\"percentage\"\n                            className=\"cancel\"\n                            id=\"percentage\"\n                          />\n                        </div>\n                        <div className=\"col-2 row\">\n                          <input\n                            type=\"text\"\n                            className=\"cancel\"\n                            id=\"percentage\"\n                            name=\"percentage\"\n                          />\n                        </div>\n                        <span class=\"col-2 ml-2 row\">%</span>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\" row \">\n                    <div className=\"mb-2 col-md-12\">\n                      <div className=\"form-group row\">\n                        <label className=\"col-5\" htmlFor=\"percentage\">\n                          Tax Type 2\n                        </label>\n                        <span className=\"col-1\">:</span>\n                        <div className=\"col-2 \">\n                          <input\n                            type=\"text\"\n                            name=\"percentage\"\n                            className=\"cancel\"\n                            id=\"percentage\"\n                          />\n                        </div>\n                        <div className=\"col-2 row\">\n                          <input\n                            type=\"text\"\n                            className=\" cancel\"\n                            id=\"percentage\"\n                            name=\"percentage\"\n                          />\n                        </div>\n                        <span className=\"col-2 ml-2 row\">%</span>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\" row \">\n                    <div className=\"mb-2 col-md-12 \">\n                      <div className=\"form-group row\">\n                        <label className=\"col-5\" htmlFor=\"percentage\">\n                          Tax Type 3\n                        </label>\n                        <span className=\"col-1 \">:</span>\n                        <div className=\"col-2\">\n                          <input\n                            type=\"text\"\n                            name=\"percentage\"\n                            className=\" cancel\"\n                            id=\"percentage\"\n                          />\n                        </div>\n                        <div className=\"col-2 row\">\n                          <input\n                            type=\"text\"\n                            className=\" cancel\"\n                            id=\"percentage\"\n                            name=\"percentage\"\n                          />\n                        </div>\n                        <span className=\"col-2 ml-2 row\">%</span>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div className=\"col-md-4 group mb-3 container-fluid   customCard\">\n                <div className=\"group-content row\">\n                  <h2>Mailing Details</h2>\n                  <div className=\" row \">\n                    <div className=\"mb-2 col-md-12 \">\n                      <div className=\"form-group row\">\n                        <label className=\"col-5\" htmlFor=\"toEmails\">\n                          To\n                        </label>\n                        <span className=\"col-1 \">:</span>\n                        <div className=\"col-6\">\n                          <input\n                            type=\"text\"\n                            name=\"toEmails\"\n                            className=\"cancel\"\n                            id=\"toEmails\"\n                            onChange={handleChange}\n                          />\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n\n                  <div className=\"row \">\n                    <div className=\"mb-2 col-md-12 \">\n                      <div className=\"form-group row\">\n                        <label className=\"col-5\" htmlFor=\"ccEmails\">\n                          CC\n                        </label>\n                        <span className=\"col-1 \">:</span>\n                        <div className=\"col-6\">\n                          <input\n                            type=\"text\"\n                            name=\"ccEmails\"\n                            className=\"cancel\"\n                            id=\"ccEmails\"\n                            onChange={handleChange}\n                          />\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\" row \">\n                    <div className=\"mb-2 col-md-12 \">\n                      <div className=\"form-group row\">\n                        <label className=\"col-5\" htmlFor=\"bccEmails\">\n                          BCC\n                        </label>\n                        <span className=\"col-1 \">:</span>\n                        <div className=\"col-6\">\n                          <input\n                            type=\"text\"\n                            name=\"bccEmails\"\n                            className=\"cancel\"\n                            id=\"bccEmails\"\n                            onChange={handleChange}\n                          />\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\" row \">\n                    <div className=\"mb-2 col-md-12\">\n                      <div className=\"form-group row\">\n                        <label className=\"col-5\" htmlFor=\"emailTemplateId\">\n                          Email Template\n                        </label>\n                        <span className=\"col-1 \">:</span>\n                        <div className=\"col-6\">\n                          <select\n                            className=\"cancel\"\n                            id=\"emailTemplateId\"\n                            name=\"emailTemplateId\"\n                            onChange={handleChange}\n                          >\n                            <option value=\"\">\n                              {\" \"}\n                              &lt;&lt;Please Select&gt;&gt;\n                            </option>\n                          </select>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\" form-group col-md-12 col-sm-12 col-xs-12 btn-container center my-3\">\n        <button\n          className=\"btn btn-primary\"\n          type=\"submit\"\n          onClick={() => {\n            handlePostDetails();\n          }}\n        >\n          <FaSave /> Save\n        </button>\n        <button\n          className=\"btn btn-secondary\"\n          // onClick={() => {\n          //   handleCancel2();\n          // }}\n          onClick={() => {\n            navigate(`/customer/create`, {\n              state: { btnState: \"create\" },\n            });\n            window.location.reload();\n          }}\n        >\n          <ImCross fontSize={\"11px\"} />\n          Cancel\n        </button>\n      </div>\n      {buttonPopup ? (\n        <PONumberPopup\n          buttonPopup={buttonPopup}\n          setButtonPopup={setButtonPopup}\n          handleChange2={handleChange}\n          handleAdd={handleAdd}\n          addList={addList}\n          setAddList={setAddList}\n          finalState={finalState}\n        />\n      ) : (\n        \"\"\n      )}\n      {clickButtonPopUp ? (\n        <EmailPopUp\n          clickButtonPopUp={clickButtonPopUp}\n          setClickButtonPopUp={setClickButtonPopUp}\n          handleChange1={handleChange1}\n          handleAddEmail={handleAddEmail}\n          addList1={addList1}\n          setAddList1={setAddList1}\n          finalState1={finalState1}\n          details={details}\n          setDetails={setDetails}\n          setDisplayTextEmails={setDisplayTextEmails}\n          displayTextEmails={displayTextEmails}\n          setFinalState1={setFinalState1}\n        />\n      ) : (\n        \"\"\n      )}\n    </div>\n  );\n}\n\nexport default CustomerCreate;\n","import React, { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport Search from \"../Customer/Search\";\nimport CustomerCreate from \"./CustomerCreate\";\nimport CustomersTopMenus from \"./CustomersTopMenus\";\nimport axios from \"axios\";\nimport { environment } from \"../../environments/environment\";\nimport VendorOpen from \"../VendorComponent/VendorOpen\";\n\nfunction InitialCustomerComponent() {\n  const navigate = useNavigate();\n  const baseUrl = environment.baseUrl;\n  const loggedUserId = localStorage.getItem(\"resId\");\n\n  const [buttonState, setButtonState] = useState(\"Search\");\n  // const [buttonState, setButtonState] = useState(() => {\n  //   // Retrieve the last selected tab from localStorage on component mount\n  //   return localStorage.getItem(\"selectedCustomersTab\") || \"Search\";\n  // });\n\n  const [buttonValue, setButtonValue] = useState(\"Customer\");\n  const [tabNames, setTabNames] = useState([]);\n\n  const [permission, setPermission] = useState([]);\n  const getMenus = () => {\n    axios\n      .get(\n        baseUrl +\n          `/CommonMS/master/getBenchMtericsMenus?loggedUserId=${loggedUserId}&Cont=customer`\n      )\n      .then((resp) => {\n        const getData = resp.data;\n        setPermission(getData);\n      });\n  };\n  useEffect(() => {\n    getMenus();\n  }, []);\n\n  // useEffect(() => {\n  //   // Save the selected tab to localStorage whenever it changes\n  //   localStorage.setItem(\"selectedCustomersTab\", buttonState);\n  // }, [buttonState]);\n  \n  return (\n    <div>\n      <div className=\"tabs\">\n        {permission.map((button) => (\n          <button\n            key={button.id}\n            className={\n              buttonState === button.display_name.toString()\n                ? \"buttonDisplayClick\"\n                : \"buttonDisplay\"\n            }\n            onClick={() => {\n              setButtonState(button.display_name.toString());\n            }}\n          >\n            {/* clg */}\n\n            {button.display_name}\n          </button>\n        ))}\n        {/* {permission[0]?.display_name != undefined ? (\n          <button\n            className={\n              buttonState === \"search\" ? \"buttonDisplayClick\" : \"buttonDisplay\"\n            }\n            onClick={() => {\n              setButtonState(\"search\");\n            }}\n          >\n            {permission[0]?.display_name}\n          </button>\n        ) : (\n          \"\"\n        )}\n\n        {permission[1]?.display_name != undefined ? (\n          <button\n            className={\n              buttonState === \"create\" ? \"buttonDisplayClick\" : \"buttonDisplay\"\n            }\n            onClick={() => {\n              setButtonState(\"create\");\n            }}\n          >\n            {permission[1]?.display_name}\n          </button>\n        ) : (\n          \"\"\n        )}\n\n        {permission[2]?.display_name != undefined ? (\n          <button\n            className={\n              buttonState === \"open\" ? \"buttonDisplayClick\" : \"buttonDisplay\"\n            }\n            onClick={() => {\n              setButtonState(\"open\");\n            }}\n          >\n            {permission[2]?.display_name}\n          </button>\n        ) : (\n          \"\"\n        )} */}\n      </div>\n      {buttonState === \"Search\" && <Search />}\n      {buttonState === \"Create\" && <CustomerCreate />}\n      {buttonState === \"Open\" && <VendorOpen buttonValue={buttonValue} />}\n    </div>\n  );\n}\n\nexport default InitialCustomerComponent;\n"],"names":["props","clickButtonPopUp","setClickButtonPopUp","handleChange1","handleAddEmail","finalState1","setDetails","addList","setAddList","setFinalState1","setDisplayTextEmails","displayTextEmails","useState","displayState1","setDisplayState1","validationmessage","setValidationMessage","setMailObjState","useEffect","DisplayList","undefined","Object","keys","map","d","i","onClick","ref","useRef","alignment","backdrop","size","visible","onClose","className","style","cursor","ele","current","type","id","name","placeholder","onChange","e","emailInput","querySelector","email","value","trim","test","isValidEmail","prev","setTimeout","addHandler","setlogged","allCustomers","setAllCustomers","loggedUserId","localStorage","getItem","baseUrl","environment","engagementType","setEngagementType","contract","setContract","paymentTerm","setPaymentTerm","invoiceCycle","setInvoiceCycle","invoiceCulture","setInvoiceCulture","invoiceTemplate","setInvoiceTemplate","invoiceTime","setInvoiceTime","engCompany","setEngCompany","currency","setCurrency","contractModel","setContractModel","projectcategory","setProjectCategory","resource","setResource","resource1","setResource1","resource2","setResource2","resource3","setResource3","resource4","setResource4","resource5","setResource5","resource6","setResource6","resource7","setResource7","resource8","setResource8","resource9","setResource9","resource10","setResource10","resource11","setResource11","resource12","setResource12","resource13","setResource13","resource14","setResource14","navigate","useNavigate","month","setMonth","salesTerritories","setSalesTerritories","classification","setClassification","industryType","setIndustryType","setSize","buttonPopup","setButtonPopup","addList1","setAddList1","data","setData","zip","setZip","countryId","setcountryId","cCountryId","setcCountryId","sName","setSName","cCName","setCCName","states","setStates","finalstates","setFinalStates","cities","setCities","finalcities","setFinalCities","setEndDt","StartDt","setStartDt","postDetails","setPostDetails","successvalidationmessage","setSuccessvalidationmessage","message","setMessage","setDisplayCountry","cust","setCust","uniqueMessage","setUniqueMessage","finalState","setFinalState","poNumber","onChangeState","customerEmails","onChangeState1","selectedValue","setSelectedValue","loggedId","fullName","salesPersonId","cslId","cslHeadId","acslId","salesTerritoryId","typProjCatId","typIndustryId","typCustStatusId","website","sfAccountLink","phone","fax","custReferenceable","typClassificationId","clientPartnerId","clId","deliveryPartnerId","deliveryPartnerHeadId","engagementPartnerId","talentPartnerId","projectCoordinatorId","sqaId","accountOwnerId","isNewCustomer","dName","address","contact","dStateId","dCityId","zipCode","eName","engagementModelId","startDt","endDt","managerId","executiveId","companyCostCenterId","engagementStatusId","eCurrency","sow","sfOpportunityLink","contModelId","eState","eCity","attn","paymentTermsId","invoiceCycleId","invoiceCultureId","invoiceTemplateId","invoiceTimeId","billingInstructions","clientMessage","contractTermId","costContractTermId","revenueRecognitionId","customerDiscount","emailTemplateId","toEmails","ccEmails","bccEmails","ciInvoiceForId","ciCurrencyId","isExpenseBillable","ciDiscountPercent","resourceId","companyId","details","getAbsoluteMonths","momentDate","Number","moment","format","calculateDuration","startMonths","monthDifference","dr","push","handleChange","target","useLayoutEffect","tempStates","fStates","filter","tempCities","stateId","fCountries","cName","setCName","resourceFnc","axios","method","url","then","res","manger","filteredData","item","filterData1","Response","resp","country_name","payterm","invcycle","inculture","invtemp","intime","curre","filterData","custom","routes","setRoutes","getMenus","forEach","display_name","ScreenBreadcrumbs","currentScreenName","htmlFor","Item","index","lkup_name","sort","a","b","full_name","localeCompare","class","multiple","project_category_name","riskDetails","setFormData","getData","onClear","onChangeHandler","prevProps","placeholderText","selected","dateFormat","onKeyDown","preventDefault","showMonthYearPicker","showIcon","maxLength","keyCode","required","checked","values","toString","disabled","width","height","statesData","JSON","parse","stringify","s","sortedstate","state","nameA","toUpperCase","nameB","countryHandler","citiesData","Finalcities","fData","sortedcities","city","stateHandler","data1","defaultValue","country","c","cityId","data2","showMonthDropdown","showYearDropdown","dropdownMode","autoComplete","Date","minDate","Company","paymentTerms","lkup_type_group_id","handleChangeCustom","Array","_","rows","contractTerm","GlobalValidation","some","document","getElementsByClassName","length","classList","add","window","scrollTo","top","behavior","open","status","handlePostDetails","btnState","location","reload","fontSize","PONumberPopup","handleChange2","handleAdd","buttonState","setButtonState","buttonValue","permission","setPermission","button","Search","VendorOpen"],"sourceRoot":""}