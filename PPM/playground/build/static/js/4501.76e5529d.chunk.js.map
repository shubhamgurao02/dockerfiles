{"version":3,"file":"static/js/4501.76e5529d.chunk.js","mappings":"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","sources":["views/Administration/JobsDailyStatus.js","../node_modules/antd/lib/table/Column.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport DatePicker from \"react-datepicker\";\nimport { MultiSelect } from \"react-multi-select-component\";\nimport axios from \"axios\";\nimport { environment } from \"../../environments/environment\";\nimport CellRendererPrimeReactDataTable from \"../PrimeReactTableComponent/CellRendererPrimeReactDataTable\";\nimport Column from \"antd/lib/table/Column\";\nimport moment from \"moment\";\nimport { CCollapse } from \"@coreui/react\";\nimport GlobalValidation from \"../ValidationComponent/GlobalValidation\";\n\nimport {\n  FaChevronCircleDown,\n  FaChevronCircleUp,\n  FaSearch,\n  FaCaretDown,\n} from \"react-icons/fa\";\nimport { AiFillWarning } from \"react-icons/ai\";\nimport Loader from \"../Loader/Loader\";\nimport GlobalHelp from \"../PrimeReactTableComponent/GlobalHelp\";\nfunction JobsDailyStatus() {\n  const [visible, setVisible] = useState(false);\n  const ref = useRef([]);\n  const [loader, setLoader] = useState(false);\n  const [validationmessage, setValidationMessage] = useState(false);\n  let rows = 10;\n  const HelpPDFName = \"JobdailystatusAdministration.pdf\";\n  const HelpHeader = \"Job Daily Status Help\";\n  const [startDate, setStartDate] = useState(new Date());\n  let date1 = moment(startDate).format(\"yyyy-MM-DD\");\n  const [endDate, setEndDate] = useState(new Date());\n  let date2 = moment(endDate).format(\"yyyy-MM-DD\");\n  const [jobtit, setJobtit] = useState([]);\n  const [headerData, setHeaderData] = useState([]);\n  const [selectedjobtit, setSelectedjobtit] = useState([]);\n  const [searchDataB, setSearchDataB] = useState(\n    \"3,4,37,38,17,18,19,8,9,10,11,13,14,15,16,32,36\"\n  );\n  const baseUrl = environment.baseUrl;\n  const [data, setData] = useState([]);\n  const [status, setStatus] = useState(\"0,1\");\n  const [cheveronIcon, setCheveronIcon] = useState(FaChevronCircleUp);\n\n  console.log(\"axios multiselect--------------------\", searchDataB);\n  const JobTitle = () => {\n    axios\n      .get(baseUrl + `/reportms/report/getJobTitle`)\n      .then((res) => {\n        let data = res.data;\n        let jobtitlelist = [];\n        console.log(data);\n        data.length > 0 &&\n          data.forEach((e) => {\n            let dpObj = {\n              label: e.jobTitle,\n              value: e.id,\n            };\n            jobtitlelist.push(dpObj);\n          });\n\n        setJobtit(jobtitlelist);\n        setSelectedjobtit(jobtitlelist);\n      })\n      .catch((error) => console.log(error));\n  };\n\n  useEffect(() => {\n    JobTitle();\n  }, []);\n  const abortController = useRef(null);\n\n  const getData = () => {\n    let valid = GlobalValidation(ref);\n    console.log(valid);\n    if (valid == true) {\n      setValidationMessage(true);\n    } else {\n      setLoader(true);\n      abortController.current = new AbortController();\n\n      // // setValidationMessage(false)\n      // if (valid) {\n      //   return;\n      // }\n      console.log(selectedjobtit);\n      console.log(status);\n      axios\n        .get(\n          `${baseUrl}/reportms/report/getjobsDailyStatus?status=${status}&fromdate=${date1}&todate=${date2}&jobid=${searchDataB}`\n        )\n\n        .then((res) => {\n          const GetData = res.data;\n          let headerdata = [\n            {\n              job_name: \"Job Name\",\n              run_date: \"Run Date\",\n              run_time: \"Run Time\",\n              duration: \"Duration\",\n              status: \" Status\",\n            },\n          ];\n          for (let i = 0; i < GetData.length; i++) {\n            GetData[i][\"run_date\"] =\n              GetData[i][\"run_date\"] == null\n                ? \"\"\n                : moment(GetData[i][\"run_date\"]).format(\"DD-MMM-yyyy\");\n          }\n\n          setData(headerdata.concat(GetData));\n          setValidationMessage(false);\n          console.log(GetData);\n          setTimeout(() => {\n            setLoader(false);\n          }, 300);\n        })\n        .catch((error) => {\n          console.log(\"Error :\" + error);\n        });\n    }\n  };\n\n  const LinkTemplate = (data) => {\n    return <span>{data.status === 0 ? \"Failure\" : \"Success\"}</span>;\n  };\n\n  const jobNameAlign = (data) => {\n    return (\n      <div className=\"ellipsis\" title={data.job_name}>\n        {data.job_name}\n      </div>\n    );\n  };\n  const runDateAlign = (data) => {\n    return <div title={data.run_date}>{data.run_date}</div>;\n  };\n  const runTimeAlign = (data) => {\n    return <div title={data.run_time}>{data.run_time}</div>;\n  };\n\n  const DurationAlign = (data) => {\n    return <div title={data.duration}>{data.duration}</div>;\n  };\n  const dynamicColumns = Object.keys(headerData)?.map((col, i) => {\n    return (\n      <Column\n        sortable\n        key={col}\n        body={\n          col == \"status\"\n            ? LinkTemplate\n            : col === \"job_name\"\n            ? jobNameAlign\n            : col == \"run_date\"\n            ? runDateAlign\n            : col == \"run_time\"\n            ? runTimeAlign\n            : col == \"duration\" && DurationAlign\n        }\n        field={col}\n        header={headerData[col]}\n      />\n    );\n  });\n\n  console.log(data);\n\n  const generateDropdownLabel = (selectedOptions, allOptions) => {\n    const selectedValues = selectedOptions.map((option) => option.value);\n    const allValues = allOptions.map((item) => item.value);\n\n    if (selectedValues.length === allValues.length) {\n      return \"<< ALL >>\";\n    } else {\n      return selectedOptions.map((option) => option.label).join(\", \");\n    }\n  };\n  const ArrowRenderer = ({ expanded }) => (\n    <>\n      {expanded ? (\n        <FaCaretDown className=\"chevronIcon\" />\n      ) : (\n        <FaCaretDown className=\"chevronIcon\" />\n      )}\n    </>\n  );\n  const handleAbort = () => {\n    abortController.current && abortController.current.abort();\n    setLoader(false);\n  };\n  return (\n    <div>\n      <div>\n        <div className=\"col-md-12\">\n          <div className=\"pageTitle\">\n            <div className=\"childOne\"></div>\n            <div className=\"childTwo\">\n              <h2>Jenkins Jobs Daily Status</h2>\n            </div>\n            <div className=\"childThree\"></div>\n          </div>\n        </div>\n        {validationmessage ? (\n          <div className=\" ml-3 mr-4 statusMsg error\">\n            <AiFillWarning /> Please select valid values for highlighted fields\n          </div>\n        ) : (\n          \"\"\n        )}\n        <div className=\"group mb-3 customCard\">\n          <div className=\"col-md-12 collapseHeader\">\n            <h2>Search Filters</h2>\n            <div className=\"helpBtn\">\n              <GlobalHelp pdfname={HelpPDFName} name={HelpHeader} />\n            </div>\n            <div\n              onClick={() => {\n                setVisible(!visible);\n                visible\n                  ? setCheveronIcon(FaChevronCircleUp)\n                  : setCheveronIcon(FaChevronCircleDown);\n              }}\n            >\n              <span>{cheveronIcon}</span>\n            </div>\n          </div>\n          <CCollapse visible={!visible}>\n            <div className=\"group-content row\">\n              <div className=\" col-md-3 mb-2\">\n                <div className=\"form-group row\">\n                  <label className=\"col-5\" htmlFor=\"From Date\">\n                    From Date<span className=\"col-1 p-0 error-text\">*</span>\n                  </label>\n                  <span className=\"col-1 p-0\">:</span>\n                  <div className=\"col-6\">\n                    <DatePicker\n                      showMonthDropdown\n                      showYearDropdown\n                      selected={startDate}\n                      maxDate={new Date()}\n                      onChange={(date) => {\n                        setStartDate(moment(date)._d);\n                      }}\n                      onKeyDown={(e) => {\n                        e.preventDefault();\n                      }}\n                      dateFormat=\"dd-MMM-yyyy\"\n                    />\n                  </div>\n                </div>\n              </div>\n              <div className=\" col-md-3 mb-2\">\n                <div className=\"form-group row\">\n                  <label className=\"col-5\" htmlFor=\"To Date\">\n                    To Date<span className=\"col-1 p-0 error-text\">*</span>\n                  </label>\n                  <span className=\"col-1 p-0\">:</span>\n                  <div className=\"col-6\">\n                    <DatePicker\n                      showMonthDropdown\n                      showYearDropdown\n                      selected={endDate}\n                      minDate={startDate}\n                      maxDate={new Date()}\n                      onChange={(date) => setEndDate(moment(date)._d)}\n                      dateFormat=\"dd-MMM-yyyy\"\n                      onKeyDown={(e) => {\n                        e.preventDefault();\n                      }}\n                    />\n                  </div>\n                </div>\n              </div>\n              <div className=\" col-md-3 mb-2\">\n                <div className=\"form-group row\">\n                  <label className=\"col-5\" htmlFor=\"Job Title\">\n                    Job Title<span className=\"col-1 p-0 error-text\">*</span>\n                  </label>\n                  <span className=\"col-1 p-0\">:</span>\n                  <div\n                    className=\"col-6 multiselect\"\n                    ref={(ele) => {\n                      ref.current[0] = ele;\n                    }}\n                  >\n                    <MultiSelect\n                      id=\"buId\"\n                      ArrowRenderer={ArrowRenderer}\n                      valueRenderer={generateDropdownLabel}\n                      options={jobtit}\n                      hasSelectAll={true}\n                      value={selectedjobtit}\n                      onChange={(e) => {\n                        setSelectedjobtit(e);\n                        let filterB = [];\n                        e.forEach((d) => {\n                          filterB.push(d.value);\n                        });\n                        setSearchDataB(filterB.toString());\n                      }}\n                    />\n                  </div>\n                </div>\n              </div>\n              <div className=\" col-md-3 mb-2\">\n                <div className=\"form-group row\">\n                  <label className=\"col-5\" htmlFor=\"Job Status\">\n                    Job Status\n                  </label>\n                  <span className=\"col-1 p-0\">:</span>\n                  <div className=\"col-6\">\n                    <select\n                      id=\"Job Status\"\n                      onChange={(e) => {\n                        console.log(e.target.value);\n                        setStatus(e.target.value);\n                      }}\n                    >\n                      <option value=\"0,1\">{\"<<Please Select>>\"}</option>\n                      <option value=\"1\">Success</option>\n                      <option value=\"0\">Failure</option>\n                    </select>\n                  </div>\n                </div>\n              </div>{\" \"}\n              <div className=\"col-md-12 col-sm-12 col-xs-12 btn-container center my-3\">\n                <button\n                  type=\"submit\"\n                  className=\"btn btn-primary\"\n                  onClick={getData}\n                >\n                  <FaSearch /> Search{\"\"}\n                </button>\n              </div>\n            </div>\n          </CCollapse>\n        </div>\n      </div>\n      {loader ? <Loader handleAbort={handleAbort} /> : \"\"}\n      {/* {refresh ? <Loader /> : \"\"} */}\n      <div>\n        <CellRendererPrimeReactDataTable\n          data={data}\n          dynamicColumns={dynamicColumns}\n          headerData={headerData}\n          setHeaderData={setHeaderData}\n          rows={rows}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default JobsDailyStatus;\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n/* istanbul ignore next */\n/** This is a syntactic sugar for `columns` prop. So HOC will not work on this. */\n// eslint-disable-next-line no-unused-vars\nfunction Column(_) {\n  return null;\n}\nvar _default = Column;\nexports[\"default\"] = _default;"],"names":["useState","visible","setVisible","ref","useRef","loader","setLoader","validationmessage","setValidationMessage","Date","startDate","setStartDate","date1","moment","format","endDate","setEndDate","date2","jobtit","setJobtit","headerData","setHeaderData","selectedjobtit","setSelectedjobtit","searchDataB","setSearchDataB","baseUrl","environment","data","setData","status","setStatus","FaChevronCircleUp","cheveronIcon","setCheveronIcon","console","log","useEffect","axios","then","res","jobtitlelist","length","forEach","e","dpObj","label","jobTitle","value","id","push","catch","error","abortController","LinkTemplate","jobNameAlign","className","title","job_name","runDateAlign","run_date","runTimeAlign","run_time","DurationAlign","duration","dynamicColumns","Object","keys","map","col","i","sortable","body","field","header","pdfname","name","onClick","FaChevronCircleDown","htmlFor","showMonthDropdown","showYearDropdown","selected","maxDate","onChange","date","_d","onKeyDown","preventDefault","dateFormat","minDate","ele","current","ArrowRenderer","expanded","valueRenderer","selectedOptions","allOptions","selectedValues","option","allValues","item","join","options","hasSelectAll","filterB","d","toString","target","type","valid","GlobalValidation","AbortController","GetData","concat","setTimeout","handleAbort","abort","rows","exports","_default","_"],"sourceRoot":""}