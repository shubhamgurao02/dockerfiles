{"version":3,"file":"static/js/1817.b5d4b5cb.chunk.js","mappings":"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","sources":["views/ReveiwsComponent/SalesReviewsCustomer.js","views/ReveiwsComponent/SelectSESalesDialogBox.js","views/ServiceComponent/DisplayPopup.js","views/ServiceComponent/SFButtons.js","views/ServiceComponent/TargetDisplayPopup.js","views/ServiceComponent/ServiceTargetTable.js","views/ServiceComponent/SigningTargets.js","views/ServiceComponent/CustomerMapping.js","views/ServiceComponent/CustomerTargets.js","views/ServiceComponent/Service.js","views/ServiceComponent/ServiceSearchFilters.js","views/ServiceComponent/ViewTable.js"],"sourcesContent":["import { useState, useEffect, forwardRef, useImperativeHandle } from \"react\";\nimport CustomerListRender from \"../Customer/CustomerListRender\";\nimport SelectedItems from \"../Customer/SelectedItems\";\nimport { environment } from \"../../environments/environment\";\nimport axios from \"axios\";\n\nconst SalesReviewsCustomer = forwardRef((props, ref) => {\n  const baseUrl = environment.baseUrl;\n  const [selectedEngCust, setSelectedEngCust] = useState([]);\n  const [selectedCustDisp, setselectedCustDisp] = useState([]);\n  const [allIndirectSelected, setallIndirectSelected] = useState(false);\n  const [custData, setcustData] = useState([]);\n  const [search, setSearch] = useState(\"\");\n  //---------------------------refMethod------------------------------------\n\n  useImperativeHandle(ref, () => ({\n    setGlobalState() {\n      localStorage.setItem(\"selectedEngCust\", JSON.stringify(selectedEngCust));\n    },\n    resetTOlocalState() {\n      const localSE =\n        localStorage.getItem(\"selectedEngCust\") === null\n          ? []\n          : JSON.parse(localStorage.getItem(\"selectedEngCust\"));\n      setSelectedEngCust(localSE);\n      localSE.length === custData?.length\n        ? setallIndirectSelected(true)\n        : setallIndirectSelected(false);\n    },\n  }));\n\n  //---------------------------method------------------------------------------\n  const onSelectCust = (emp) => {\n    setSelectedEngCust((prevState) => {\n      return prevState.some((el) => el.id === emp.id)\n        ? prevState.filter((item) => {\n            return item.id !== emp.id;\n          })\n        : [...prevState, emp];\n    });\n  };\n\n  const employeeElement = (emp) => {\n    return (\n      <div key={emp.id} className=\"option col-md-3 ellipsis row\">\n        <div className=\"col-md-2\" style={{ marginTop: \"3px\", width: \"10px\" }}>\n          {\" \"}\n          <input\n            type=\"checkbox\"\n            id={emp.id}\n            style={{\n              whiteSpace: \"nowrap\",\n              overflow: \"hidden\",\n              textOverflow: \"ellipsis\",\n              marginTop: \"-2px\",\n            }}\n            onChange={(e) => onSelectCust(emp)}\n            checked={selectedEngCust.some((el) => el.id === emp.id)}\n            className=\"mr-2\"\n          ></input>\n        </div>\n\n        <div\n          className=\" col-md-10 customerRoleMap\"\n          style={{\n            width: \"215px\",\n            overflow: \"hidden\",\n            textOverflow: \"ellipsis\",\n            whiteSpace: \"nowrap\",\n          }}\n          title={emp.fullName}\n        >\n          {emp.fullName}\n        </div>\n      </div>\n    );\n  };\n\n  const selectAllIndirect = () => {\n    !allIndirectSelected\n      ? setSelectedEngCust((prevState) => {\n          const empId = prevState.map((item) => item.id);\n          const newArray = custData.filter((item) => !empId.includes(item.id));\n          return [...prevState, ...newArray];\n        })\n      : setSelectedEngCust((prevState) => {\n          const empId = custData.map((item) => item.id);\n          const newArray = prevState.filter((item) => !empId.includes(item.id));\n          return newArray;\n        });\n    setallIndirectSelected((prevState) => !prevState);\n  };\n\n  const getcustData = () => {\n    axios\n      .get(baseUrl + `/ProjectMS/project/activeSalesReviewsCustomers`)\n\n      .then((resp) => {\n        const data = resp.data;\n        console.log(\"respone--\" + data.length);\n        console.log(data);\n        setcustData(data);\n      })\n      .catch((resp) => {\n        console.log(resp);\n      });\n  };\n  //--------------------------------useEffect------------------------------------------\n  useEffect(() => {\n    setselectedCustDisp(() => {\n      return selectedEngCust\n        .filter((item) => {\n          return item.fullName?.toLowerCase().includes(search);\n        })\n        .map((item) => {\n          return employeeElement(item);\n        });\n    });\n  }, [selectedEngCust, search]);\n\n  useEffect(() => {\n    getcustData();\n  }, []);\n\n  useEffect(() => {\n    const localSE =\n      localStorage.getItem(\"selectedEngCust\") === null\n        ? []\n        : JSON.parse(localStorage.getItem(\"selectedEngCust\"));\n    setSelectedEngCust(localSE);\n    custData?.length == localSE?.length\n      ? setallIndirectSelected(true)\n      : setallIndirectSelected(false);\n  }, [custData]);\n\n  return (\n    <div className=\"col-md-12 \">\n      <div className=\"col-md-12 mb-2\">\n        <div className=\"col-md-5 \">\n          <div className=\"form-group row\">\n            <label className=\"col-3\" htmlFor=\"engagementName\">\n              Search\n            </label>\n            <span className=\"col-1 \">:</span>\n            <div className=\"col-6\">\n              <input\n                type=\"text\"\n                placeholder=\"minimum 3 characters\"\n                onChange={(e) => setSearch(e.target.value.toLowerCase())}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"col-md-4 form-check\">\n        <input\n          type=\"checkbox\"\n          id=\"SelectedItems\"\n          name=\"SelectedItems\"\n          className=\"form-check-input\"\n          onChange={() => {\n            setSelectedEngCust([]);\n            setallIndirectSelected(false);\n          }}\n          checked={selectedEngCust.length > 0}\n        ></input>\n        <label className=\"form-check-label\">\n          Selected Items<span className=\"col-1\">:</span>\n        </label>\n      </div>\n\n      <>\n        <div className=\"col-md-12 my-3 \">\n          <SelectedItems selectedCustDisp={selectedCustDisp} />\n        </div>\n      </>\n\n      <div className=\"col-md-6 form-check\">\n        <input\n          type=\"checkbox\"\n          className=\"form-check-input\"\n          onChange={selectAllIndirect}\n          checked={allIndirectSelected}\n        ></input>{\" \"}\n        <label className=\"form-check-label\">\n          All Customers<span className=\"col-1\">:</span>\n        </label>\n        &nbsp;\n      </div>\n      <>\n        <CustomerListRender\n          employeeElement={employeeElement}\n          selectedCust={selectedEngCust}\n          data={custData}\n          search={search}\n        />\n      </>\n    </div>\n  );\n});\n\nexport default SalesReviewsCustomer;\n","\nimport { useRef, useState } from \"react\";\nimport { CModal } from \"@coreui/react\";\nimport { CModalBody } from \"@coreui/react\";\nimport { CModalFooter } from \"@coreui/react\";\nimport { CModalHeader } from \"@coreui/react\";\nimport { CModalTitle } from \"@coreui/react\";\nimport { CButton } from \"@coreui/react\";\nimport { RiSave3Line } from \"react-icons/ri\";\nimport { FaUndo } from \"react-icons/fa\";\nimport { ImCross } from \"react-icons/im\";\nimport SalesReviewsCustomer from \"./SalesReviewsCustomer\";\n\n\nexport default function SelectSESalesDialogBox({\n  visible,\n  setVisible,\n  setSelectedItems,\n  selectedItems,\n  value,\n  buttonPopup,\n  setButtonPopup,\n  buttonPopup1,\n  setButtonPopup1,\n}) {\n  const CustomerRef = useRef(null);\n\n  function CustomerPopUp(props) {\n    const { setVisible, buttonPopup, setButtonPopup } = props;\n    return (\n      <div>\n        <CModal\n          visible={buttonPopup}\n          alignment=\"center\"\n          backdrop=\"static\"\n          size=\"sm\"\n        >\n          <CModalHeader closeButton={false}>\n            <div className=\"row\">\n              <CModalTitle>\n                <div>Confirmation</div>\n              </CModalTitle>\n            </div>\n            <div>\n              {\" \"}\n              <button\n                className=\"btn float end\"\n                type=\"popup\"\n                onClick={() => setButtonPopup(() => false)}\n              >\n                <ImCross />\n              </button>\n            </div>\n          </CModalHeader>\n          <CModalBody>\n            <h6>Save changes ?</h6>\n            <div className=\"col-md-12 col-sm-12 col-xs-12 btn-container center my-3\">\n              <button\n                type=\"delete\"\n                className=\"btn btn-primary\"\n                onClick={() => {\n                  setVisible(false);\n                  setButtonPopup(() => true);\n                }}\n              >\n                Yes\n              </button>\n\n              <button\n                type=\"button\"\n                className=\"btn btn-primary\"\n                onClick={() => {\n                  setVisible(false);\n                  setButtonPopup(() => false);\n                }}\n              >\n                No\n              </button>\n            </div>\n          </CModalBody>\n        </CModal>\n      </div>\n    );\n  }\n\n  return (\n    <>\n      <div>\n        <CModal\n          alignment=\"center\"\n          backdrop=\"static\"\n          visible={visible}\n          onClose={() => setVisible(false)}\n          size=\"xl\"\n        >\n          <CModalHeader closeButton={false}>\n            <div className=\"row\">\n              <CModalTitle>\n                {\" \"}\n                {value == \"SalesReviews\" ? (\n                  <div style={{ fontSize: \"15px\" }}>Select Customers</div>\n                ) : (\n                  <div>Select Customers / Prospects</div>\n                )}\n              </CModalTitle>{\" \"}\n            </div>\n            {value == \"SalesReviews\" ? (\n              <div>\n                {\" \"}\n                <button\n                  className=\"btn float end\"\n                  type=\"popup\"\n                  onClick={() => setVisible(false)}\n                >\n                  <ImCross />\n                </button>\n              </div>\n            ) : (\n              <div>\n                {\" \"}\n                <button\n                  className=\"btn float end\"\n                  type=\"popup\"\n                  onClick={() => {\n                    setButtonPopup((prev) => !prev);\n                  }}\n                >\n                  <ImCross />\n                </button>\n              </div>\n            )}\n          </CModalHeader>\n          <CModalBody>\n            <SalesReviewsCustomer\n              ref={CustomerRef}\n              setSelectedItems={setSelectedItems}\n              selectedItems={selectedItems}\n            />\n          </CModalBody>\n\n          <CModalFooter>\n            <div className=\" form-group col-md-12 col-sm-12 col-xs-12 btn-container center my-2\">\n              <CButton\n                color=\"primary\"\n                title=\"Save Changes\"\n                onClick={() => {\n                  CustomerRef.current.setGlobalState();\n                  setVisible(false);\n                  setButtonPopup1(() => true);\n                }}\n              >\n                <RiSave3Line />\n                Save\n              </CButton>\n              <CButton\n                color=\"primary\"\n                title=\"Undo Changes\"\n                onClick={() => {\n                  CustomerRef.current.resetTOlocalState();\n                }}\n              >\n                <FaUndo size=\"1.0em\" title=\"Undo Chages\" />\n                Undo\n              </CButton>\n            </div>\n          </CModalFooter>\n        </CModal>\n      </div>\n\n      {buttonPopup && value !== \"SalesReviews\" ? (\n        <CustomerPopUp\n          buttonPopup={buttonPopup}\n          setButtonPopup={setButtonPopup}\n          setVisible={setVisible}\n        />\n      ) : (\n        \"\"\n      )}\n    </>\n  );\n}\n","import React from \"react\";\nimport ReactQuill from \"react-quill\";\nimport { CModal } from \"@coreui/react\";\nimport { CModalBody } from \"@coreui/react\";\nimport { CModalHeader } from \"@coreui/react\";\nimport { CModalTitle } from \"@coreui/react\";\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { environment } from \"../../environments/environment\";\n\nimport axios from \"axios\";\nimport { FaSave } from \"react-icons/fa\";\nimport { ImCross } from \"react-icons/im\";\n\nconst DisplayPopup = (props) => {\n  const { openPopup, setOpenPopup, Vdata, rowData, accessData } = props;\n  const [notesData, setNotesData] = useState({});\n  const [value, setValue] = useState(\"\");\n  const baseUrl = environment.baseUrl;\n\n  const editorToolBar = {\n    toolbar: [\n      [\n        { header: [false, 1, 2, 3, 4, 5, 6] },\n        // {tooltip:[\"ee\"]},\n        // { size: [] },\n        { font: [] },\n        { color: [] },\n        { bold: { tooltip: \"Bold (Ctrl+B)\" } },\n        \"italic\",\n        \"underline\",\n        { list: \"ordered\" },\n        { list: \"bullet\" },\n        { script: \"sub\" },\n        { script: \"super\" },\n        { indent: \"-1\" },\n        { indent: \"+1\" },\n        { align: null },\n        { align: \"center\" },\n        { align: \"right\" },\n        \"strike\",\n        \"link\",\n        \"code-block\",\n        \"clean\",\n      ],\n    ],\n  };\n  const getNotesData = () => {\n    axios({\n      method: \"get\",\n      url: baseUrl + `/SalesMS/services/getExecutiveNotes?rid=${rowData.id}`,\n    }).then((res) => {\n      var resp = res.data;\n      setNotesData(resp);\n      const defaultNotes = resp[0]?.notes || \"\";\n      setValue(defaultNotes);\n    });\n  };\n\n  const saveNotesData = () => {\n    const cleanedNotes = value.replace(/<\\/?[^>]+(>|$)/g, \"\");\n    const requestData = {\n      resId: rowData.id,\n      notes: cleanedNotes,\n      loggedUserId: localStorage.getItem(\"resId\"),\n    };\n    axios({\n      method: \"POST\",\n      url: baseUrl + `/SalesMS/pmo/savenotes`,\n      data: requestData,\n    }).then((resp) => {\n      var data = resp.data;\n      setNotesData(data);\n      setOpenPopup(false);\n    });\n  };\n\n  useEffect(() => {\n    getNotesData();\n  }, []);\n\n  return (\n    <div>\n      <CModal\n        visible={openPopup}\n        size=\"xl\"\n        onClose={() => setOpenPopup(false)}\n        backdrop={\"static\"}\n      >\n        <CModalHeader className=\"\" style={{ cursor: \"all-scroll\" }}>\n          <CModalTitle>\n            {/* <span className='' > Notes - {rowData.executive} </span> */}\n            <span className=\"\">\n              {\" \"}\n              Notes -{\" \"}\n              {(\"\" + rowData.executive).includes(\"^&\")\n                ? rowData.customerTmp\n                : rowData.customer?.split(\"^&\")[1] || rowData.executive}\n            </span>{\" \"}\n          </CModalTitle>\n        </CModalHeader>\n        <CModalBody>\n          {accessData === 1000 ? (\n            <ReactQuill\n              className=\"\"\n              theme=\"snow\"\n              value={value}\n              name=\"notes\"\n              id=\"editor-container\"\n              onChange={(e) => {\n                setValue(e);\n              }}\n              modules={editorToolBar}\n            />\n          ) : (\n            <ReactQuill\n              className=\"\"\n              theme=\"snow\"\n              value={value}\n              name=\"notes\"\n              id=\"editor-container\"\n              onChange={(e) => {\n                setValue(e);\n              }}\n              modules={editorToolBar}\n              readOnly={true}\n              style={{ cursor: \"not-allowed\" }}\n            />\n          )}\n\n          {accessData === 1000 ? (\n            <div className=\"col-md-12 col-sm-12 col-xs-12 my-2 btn-container center\">\n              <button\n                type=\"button\"\n                className=\"btn btn-primary\"\n                onClick={() => {\n                  saveNotesData();\n                }}\n              >\n                <FaSave />\n                Save{\" \"}\n              </button>\n              <button\n                type=\"button\"\n                className=\"btn btn-primary\"\n                // onClick={setOpenPopup(false)}\n                onClick={() => {\n                  setOpenPopup(false);\n                }}\n              >\n                <ImCross fontSize={\"11px\"} />\n                Cancel{\" \"}\n              </button>\n            </div>\n          ) : (\n            \"\"\n          )}\n        </CModalBody>\n      </CModal>\n    </div>\n  );\n};\nexport default DisplayPopup;\n","import axios from \"axios\";\nimport { useState } from \"react\";\nimport { environment } from \"../../environments/environment\";\nimport Loader from \"../Loader/Loader\";\nimport { useRef } from \"react\";\nexport default function SFButtons({\n  showSFpipeline,\n  setshowSFpipeline,\n  reportRunId,\n  componentSelector,\n  setRefreshButton,\n  refreshButton,\n}) {\n  const [loader, setLoader] = useState(false);\n  const abortController = useRef(null);\n\n  const handleAbort = () => {\n    abortController.current && abortController.current.abort();\n    setLoader(false);\n  };\n  // const[services, setServices] = useState([])\n  const baseUrl = environment.baseUrl;\n  const getserviceSFData = () => {\n    const loaderTime = setTimeout(() => {\n      setLoader(true);\n    }, 2000);\n    abortController.current = new AbortController();\n    axios({\n      method: \"post\",\n      url: baseUrl + `/SalesMS/salesforce/refreshSalesForceData`,\n      signal: abortController.current.signal,\n      data: {\n        reportRunId: \"\" + reportRunId,\n        for: \"Services\",\n      },\n    })\n      .then((resp) => {\n        const data = resp.data.status;\n        setLoader(false);\n        setRefreshButton(data);\n        clearTimeout(loaderTime);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  const handleHideShowPipeline = () => {\n    setshowSFpipeline((prevState) => !prevState);\n  };\n\n  return (\n    <div>\n      {componentSelector !== \"custTarget\" && (\n        <div className=\"col-4 row \" style={{}}>\n          <button\n            id=\"sfData\"\n            className=\"col-4 btn btn-primary mr-2\"\n            style={{\n              width: \"auto\",\n              fontWeight: \"bold\",\n            }}\n            onClick={handleHideShowPipeline}\n          >\n            {showSFpipeline ? \"Hide Sf Pipeline\" : \"Show Sf Pipeline\"}\n          </button>\n          <button\n            id=\"refreshData\"\n            className=\"col-4 btn btn-primary\"\n            style={{\n              width: \"auto\",\n              fontWeight: \"bold\",\n            }}\n            onClick={() => {\n              getserviceSFData();\n            }}\n          >\n            Refresh Sf Data\n          </button>\n        </div>\n      )}\n      {loader ? <Loader handleAbort={handleAbort} /> : \"\"}\n    </div>\n  );\n}\n","import React from \"react\";\nimport ReactQuill from \"react-quill\";\nimport { CModal } from \"@coreui/react\";\nimport { CModalBody } from \"@coreui/react\";\nimport { CModalHeader } from \"@coreui/react\";\nimport { CModalTitle } from \"@coreui/react\";\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { environment } from \"../../environments/environment\";\n\nimport axios from \"axios\";\nimport { FaSave } from \"react-icons/fa\";\nimport { ImCross } from \"react-icons/im\";\n\nconst TargetDisplayPopup = (props) => {\n  const { openPopup, setOpenPopup, Vdata, rowData, accessData } = props;\n  const [notesData, setNotesData] = useState({});\n  const [value, setValue] = useState(\"\");\n  const baseUrl = environment.baseUrl;\n\n  const editorToolBar = {\n    toolbar: [\n      [\n        { header: [false, 1, 2, 3, 4, 5, 6] },\n        // {tooltip:[\"ee\"]},\n        // { size: [] },\n        { font: [] },\n        { color: [] },\n        { bold: { tooltip: \"Bold (Ctrl+B)\" } },\n        \"italic\",\n        \"underline\",\n        { list: \"ordered\" },\n        { list: \"bullet\" },\n        { script: \"sub\" },\n        { script: \"super\" },\n        { indent: \"-1\" },\n        { indent: \"+1\" },\n        { align: null },\n        { align: \"center\" },\n        { align: \"right\" },\n        \"strike\",\n        \"link\",\n        \"code-block\",\n        \"clean\",\n      ],\n    ],\n  };\n  const getNotesData = () => {\n    axios({\n      method: \"get\",\n      url: baseUrl + `/SalesMS/services/getExecutiveNotes?rid=${rowData.id}`,\n    }).then((res) => {\n      var resp = res.data;\n      setNotesData(resp);\n      const defaultNotes = resp[0]?.notes || \"\";\n      setValue(defaultNotes);\n    });\n  };\n\n  const saveNotesData = () => {\n    const cleanedNotes = value.replace(/<\\/?[^>]+(>|$)/g, \"\");\n    const requestData = {\n      resId: rowData.id,\n      notes: cleanedNotes,\n      loggedUserId: localStorage.getItem(\"resId\"),\n    };\n    axios({\n      method: \"POST\",\n      url: baseUrl + `/SalesMS/pmo/savenotes`,\n      data: requestData,\n    }).then((resp) => {\n      var data = resp.data;\n      setNotesData(data);\n      setOpenPopup(false);\n    });\n  };\n\n  useEffect(() => {\n    getNotesData();\n  }, []);\n\n  return (\n    <div>\n      <CModal\n        visible={openPopup}\n        size=\"xl\"\n        onClose={() => setOpenPopup(false)}\n        backdrop={\"static\"}\n      >\n        <CModalHeader className=\"\" style={{ cursor: \"all-scroll\" }}>\n          <CModalTitle>\n            <span className=\"\">\n              {\" \"}\n              Notes - {rowData.executive.split(\"^&\")[0]}{\" \"}\n            </span>\n          </CModalTitle>\n        </CModalHeader>\n        <CModalBody>\n          {accessData === 1000 ? (\n            <ReactQuill\n              className=\"\"\n              theme=\"snow\"\n              value={value}\n              name=\"notes\"\n              // data-toggle=\"tooltip\"\n              // title={\"link\"}\n              defaultValue={notesData[0]?.notes}\n              id=\"editor-container\"\n              onChange={(e) => {\n                setValue(e);\n              }}\n              modules={editorToolBar}\n            />\n          ) : (\n            <ReactQuill\n              className=\"\"\n              theme=\"snow\"\n              value={value}\n              name=\"notes\"\n              // data-toggle=\"tooltip\"\n              // title={\"link\"}\n              defaultValue={notesData[0]?.notes}\n              id=\"editor-container\"\n              modules={editorToolBar}\n              readOnly={true}\n              style={{ cursor: \"not-allowed\" }}\n            />\n          )}\n          {accessData === 1000 ? (\n            <div className=\"col-md-12 col-sm-12 col-xs-12 my-2 btn-container center\">\n              <button\n                type=\"button\"\n                className=\"btn btn-primary\"\n                onClick={() => {\n                  saveNotesData();\n                }}\n              >\n                <FaSave />\n                Save{\" \"}\n              </button>\n              <button\n                type=\"button\"\n                className=\"btn btn-primary\"\n                // onClick={setOpenPopup(false)}\n                onClick={() => {\n                  setOpenPopup(false);\n                }}\n              >\n                <ImCross fontSize={\"11px\"} />\n                Cancel{\" \"}\n              </button>\n            </div>\n          ) : (\n            \"\"\n          )}\n        </CModalBody>\n      </CModal>\n    </div>\n  );\n};\nexport default TargetDisplayPopup;\n","// import ServiceTargetData from './TargetData.json';\nimport { FaSave } from \"react-icons/fa\";\nimport {\n  FaChevronCircleRight,\n  FaChevronCircleLeft,\n  FaCaretDown,\n  FaCaretRight,\n  FaCircle,\n} from \"react-icons/fa\";\nimport { environment } from \"../../environments/environment\";\nimport { Fragment, useState, useEffect } from \"react\";\nimport fte_active from \"../../assets/images/empstatusIcon/fte_active.png\";\nimport fte_inactive from \"../../assets/images/empstatusIcon/fte_inactive.png\";\nimport fte_notice from \"../../assets/images/empstatusIcon/fte_notice.png\";\nimport subk_active from \"../../assets/images/empstatusIcon/subk_active.png\";\nimport subk_inactive from \"../../assets/images/empstatusIcon/subk_inactive.png\";\nimport subk_notice from \"../../assets/images/empstatusIcon/subk_notice.png\";\nimport axios from \"axios\";\nimport { MdOutlineEditNote } from \"react-icons/md\";\nimport { FiRotateCcw } from \"react-icons/fi\";\nimport { RiFileExcel2Line } from \"react-icons/ri\";\nimport ExcelJS from \"exceljs\";\nimport \"./ServiceTargetTable.scss\";\nimport SFButtons from \"./SFButtons\";\nimport TargetDisplayPopup from \"./TargetDisplayPopup\";\n\nconst ServiceTargetTable = ({\n  serviceData,\n  coloumnArray,\n  reportRunId,\n  setMessage,\n  accessData,\n  setMessage1,\n  hirarchy,\n  setshowSFpipeline,\n  showSFpipeline,\n  componentSelector,\n  setRefreshButton,\n  refreshButton\n}) => {\n  const baseUrl = environment.baseUrl;\n  const [serTargetData, setSerTargetData] = useState([]);\n  const [serTargetDataKeys, setSerTargetDataKeys] = useState([]);\n  const [serTargetObj, setSerTargetObj] = useState([]);\n  const [expanded, setexpanded] = useState([]);\n  const [colexpanded, setcolexpanded] = useState([]);\n  const [openPopup, setOpenPopup] = useState(false);\n  const [rowData, setRowData] = useState({});\n  const loggedUserId = localStorage.getItem(\"resId\");\n  const [serviceTargetTableData, setServiceTargetTableData] = useState(null);\n  const [serviceTargetTableData1, setServiceTargetTableData1] = useState(null);\n\n  const allexe = serTargetData\n    ?.filter((item) => item.lvl === 1)\n    .map((item) => item.executive);\n\n  let toggler = 0;\n  let coltoggler = 0;\n  const icons = {\n    fte0: (\n      <img\n        src={fte_inactive}\n        alt=\"(fte_inactive_icon)\"\n        style={{ height: \"12px\" }}\n        title=\"Ex-Employee\"\n      />\n    ),\n    fte1: (\n      <img\n        src={fte_active}\n        alt=\"(fte_active_icon)\"\n        style={{ height: \"12px\" }}\n        title=\"Active Employee\"\n      />\n    ),\n    fte2: (\n      <img\n        src={fte_notice}\n        alt=\"(fte_notice_icon)\"\n        style={{ height: \"12px\" }}\n        title=\"Employee in notice period\"\n      />\n    ),\n    subk0: (\n      <img\n        src={subk_inactive}\n        alt=\"(subk_inactive_icon)\"\n        style={{ height: \"12px\" }}\n        title=\"Ex-Contractor\"\n      />\n    ),\n    subk1: (\n      <img\n        src={subk_active}\n        alt=\"(subk_active_icon)\"\n        style={{ height: \"12px\" }}\n        title=\"Active Contractor\"\n      />\n    ),\n    subk2: (\n      <img\n        src={subk_notice}\n        alt=\"(subk_notice_icon)\"\n        style={{ height: \"12px\" }}\n        title=\"Contractor in notice period\"\n      />\n    ),\n  };\n\n  //  useEffect(() => {\n  //       let temp = JSON.parse(JSON.stringify(serviceData.slice(0, 250)));\n  //       setSerTargetData(temp);\n  //       setSerTargetDataKeys(coloumnArray)\n  //   }, [serviceData, coloumnArray])\n\n  useEffect(() => {\n    setSerTargetData(JSON.parse(JSON.stringify(serviceData)));\n    setSerTargetDataKeys(coloumnArray);\n  }, [serviceData, coloumnArray]);\n\n  useEffect(() => {\n    tableDisplayHandlerHeader();\n    tableDisplayHandler();\n  }, [serTargetData, expanded]);\n\n  useEffect(() => {\n    setexpanded([]);\n    setcolexpanded([]);\n  }, [serviceData]);\n\n  const prosicon = {\n    1: <FaCircle size={\"0.8em\"} style={{ color: \"purple\" }} />,\n    0: <FaCircle size={\"0.8em\"} style={{ color: \"green\" }} />,\n  };\n\n  const onSerTargetEnter = (e, i) => {\n    const { value, id } = e.target;\n    setSerTargetData((prevState) => {\n      const newState = [...prevState];\n      newState[i][id] = value;\n      return newState;\n    });\n  };\n\n  const onSerTargetUpdate = (e, pAtt, i, executive, practiceId, countryId) => {\n    const { value, id } = e.target;\n    const quarGrp = e.target.getAttribute(\"data-qua\");\n    const year = id.split(\"_\")[0];\n    const quarter = id.split(\"_\")[1];\n    const quarChecker =\n      quarter === \"Q1\" ||\n      quarter === \"Q2\" ||\n      quarter === \"Q3\" ||\n      quarter === \"Q4\"\n        ? \"quar\"\n        : \"month\";\n\n    const keysData =\n      \"id,executive,execStatus,supervisor,practiceId,practice,countryId,country,lvl,count,isEdit,keyAttr,parentAttr,isActive,2023_Q2_target,2022_07_01_target,2022_08_01_target,2022_09_01_target,2023_Q3_target,2022_10_01_target,2022_11_01_target,2022_12_01_target,2023_Q4_target,2023_01_01_target,2023_02_01_target,2023_03_01_target,2024_Q1_target,2023_04_01_target,2023_05_01_target,2023_06_01_target,total_target,\";\n    const keysDataArr = keysData?.split(\",\");\n    const searchIndex = keysDataArr.findIndex((data) => data === id);\n    let splitId = id.split(\"_\");\n    let months = null;\n\n    switch (splitId[1]) {\n      case \"Q1\":\n        months = [4, 5, 6];\n        break;\n      case \"Q2\":\n        months = [7, 8, 9];\n        break;\n\n      case \"Q3\":\n        months = [10, 11, 12];\n        break;\n\n      case \"Q4\":\n        months = [1, 2, 3];\n        break;\n\n      default:\n        break;\n    }\n\n    let currIndexKeys = Object.keys(serTargetData[i]);\n\n    let finalKey = [];\n\n    if (months != null) {\n      for (let i = 0; i < months.length; i++) {\n        if ((\"\" + months[i]).length == 1) {\n          months[i] = \"_0\" + months[i] + \"_01_\" + splitId[2];\n        }\n      }\n\n      months.map((ele) => {\n        let ky = currIndexKeys.filter((d) => d.includes(ele));\n        finalKey.push(ky);\n      });\n    }\n\n    setSerTargetData((prevState) => {\n      const exeSumIndex = prevState.findIndex(\n        (element) => element.keyAttr === pAtt\n      );\n\n      if (quarChecker === \"quar\") {\n        // row Total\n        let total = 0;\n        Object.keys(prevState[i]).forEach((d) => {\n          if (d.includes(\"Q\")) {\n            total = total + parseInt(prevState[i][d]);\n          }\n        });\n        prevState[i][\"total_target\"] = total;\n\n        let execName = prevState[i][\"executive\"];\n        let splitedExecName = prevState[i][\"executive\"].split(\"^&\");\n        let topCount = prevState\n          .filter((d) => d.executive == execName)\n          .filter((d, i) => i > 0)\n          .map((d) => d[id])\n          .reduce((acc, curr) => parseInt(acc) + parseInt(curr), 0);\n        let topCount1 = prevState\n          .filter((d) => d.executive.includes(splitedExecName[0]))\n          .filter((d) => d.lvl > 2)\n          .map((d) => d[id])\n          .reduce((acc, curr) => parseInt(acc) + parseInt(curr), 0);\n        let totalTargetTopCount = prevState\n          .filter((d) => d.lvl == 3)\n          .map((d) => d[\"total_target\"])\n          .reduce((acc, curr) => parseInt(acc) + parseInt(curr), 0);\n        let totalTargetsubCount = prevState\n          .filter((d) => d.executive.includes(splitedExecName[0]))\n          .filter((d) => d.lvl > 2)\n          .map((d) => d[\"total_target\"])\n          .reduce((acc, curr) => parseInt(acc) + parseInt(curr), 0);\n        let totalTargetsubCountCust = prevState\n          .filter((d) => d.executive == execName)\n          .filter((d, i) => i > 0)\n          .map((d) => d[\"total_target\"])\n          .reduce((acc, curr) => parseInt(acc) + parseInt(curr), 0);\n        let summaryQuarterCount = prevState\n          .filter((d) => d.lvl == 3)\n          .map((d) => d[id])\n          .reduce((acc, curr) => parseInt(acc) + parseInt(curr), 0);\n\n        // for 3 months summation\n\n        var monVal = Math.floor(value / 3);\n        prevState[i][finalKey[0]] = monVal;\n        prevState[i][finalKey[1]] = monVal;\n        prevState[i][finalKey[2]] = monVal + (value % 3);\n\n        let monthOneSummaryCount = prevState\n          .filter((d) => d.lvl == 3)\n          .map((d) => d[finalKey[0]])\n          .reduce((acc, curr) => parseInt(acc) + parseInt(curr), 0);\n        let monthTwoSummaryCount = prevState\n          .filter((d) => d.lvl == 3)\n          .map((d) => d[finalKey[1]])\n          .reduce((acc, curr) => parseInt(acc) + parseInt(curr), 0);\n        let monthThreeSummaryCount = prevState\n          .filter((d) => d.lvl == 3)\n          .map((d) => d[finalKey[2]])\n          .reduce((acc, curr) => parseInt(acc) + parseInt(curr), 0);\n\n        prevState[1][finalKey[0]] = monthOneSummaryCount;\n        prevState[1][finalKey[1]] = monthTwoSummaryCount;\n        prevState[1][finalKey[2]] = monthThreeSummaryCount;\n\n        let monthOneTopCount = prevState\n          .filter((d) => d.executive == execName)\n          .filter((d, i) => i > 0)\n          .map((d) => d[finalKey[0]])\n          .reduce((acc, curr) => parseInt(acc) + parseInt(curr), 0);\n        let monthTwoTopCount = prevState\n          .filter((d) => d.executive == execName)\n          .filter((d, i) => i > 0)\n          .map((d) => d[finalKey[1]])\n          .reduce((acc, curr) => parseInt(acc) + parseInt(curr), 0);\n        let monthThreeTopCount = prevState\n          .filter((d) => d.executive == execName)\n          .filter((d, i) => i > 0)\n          .map((d) => d[finalKey[2]])\n          .reduce((acc, curr) => parseInt(acc) + parseInt(curr), 0);\n\n        prevState[exeSumIndex][finalKey[0]] = monthOneTopCount;\n        prevState[exeSumIndex][finalKey[1]] = monthTwoTopCount;\n        prevState[exeSumIndex][finalKey[2]] = monthThreeTopCount;\n\n        // lvl2 quarter count\n        prevState[exeSumIndex][id] = topCount;\n        prevState[1][\"total_target\"] = totalTargetTopCount;\n        prevState[1][id] = summaryQuarterCount;\n\n        // finalKey\n        // summary for all executives\n        let monthOneTopCount1 = prevState\n          .filter((d) => d.executive.includes(splitedExecName[0]))\n          .filter((d) => d.lvl > 2)\n          .map((d) => d[finalKey[0]])\n          .reduce((acc, curr) => parseInt(acc) + parseInt(curr), 0);\n        let monthTwoTopCount1 = prevState\n          .filter((d) => d.executive.includes(splitedExecName[0]))\n          .filter((d) => d.lvl > 2)\n          .map((d) => d[finalKey[1]])\n          .reduce((acc, curr) => parseInt(acc) + parseInt(curr), 0);\n        let monthThreeTopCount1 = prevState\n          .filter((d) => d.executive.includes(splitedExecName[0]))\n          .filter((d) => d.lvl > 2)\n          .map((d) => d[finalKey[2]])\n          .reduce((acc, curr) => parseInt(acc) + parseInt(curr), 0);\n\n        let arr = prevState;\n        for (let i = 0; i < arr.length; i++) {\n          if (arr[i][\"executive\"] == splitedExecName[0] + \"^&  \") {\n            arr[i][id] = topCount1;\n            arr[i][\"total_target\"] = totalTargetsubCount;\n            arr[i][finalKey[0]] = monthOneTopCount1;\n            arr[i][finalKey[1]] = monthTwoTopCount1;\n            arr[i][finalKey[2]] = monthThreeTopCount1;\n          }\n        }\n\n        prevState[exeSumIndex][\"total_target\"] = totalTargetsubCountCust;\n      } else if (quarChecker === \"month\") {\n        let q1months = [4, 5, 6];\n        let q2months = [7, 8, 9];\n        let q3months = [10, 11, 12];\n        let q4months = [1, 2, 3];\n        let date = null;\n        let q = e.target.id;\n        let array = q.split(\"_\");\n        let month = array[1];\n\n        let quarters;\n\n        if (q1months.includes(+month)) {\n          quarters = \"Q1\";\n          date = q1months;\n        } else if (q2months.includes(+month)) {\n          quarters = \"Q2\";\n          date = q2months;\n        } else if (q3months.includes(+month)) {\n          quarters = \"Q3\";\n          date = q3months;\n        } else if (q4months.includes(+month)) {\n          quarters = \"Q4\";\n          date = q4months;\n        }\n\n        let Qualtertotal = 0;\n        let quaterId = null;\n        Object.keys(prevState[i]).forEach((d) => {\n          if (\n            (d.includes(0) ||\n              d.includes(1) ||\n              d.includes(2) ||\n              d.includes(3) ||\n              d.includes(4) ||\n              d.includes(5) ||\n              d.includes(6) ||\n              d.includes(7) ||\n              d.includes(8) ||\n              d.includes(9)) &&\n            !d.includes(\"Q\")\n          ) {\n            let array = d.split(\"_\");\n            let valueAtIndex1 = array[1];\n            let result = valueAtIndex1.startsWith(0)\n              ? valueAtIndex1.substring(1)\n              : valueAtIndex1;\n            if (result != null && date?.includes(+result)) {\n              Qualtertotal = Qualtertotal + parseInt(prevState[i][d]);\n            }\n          }\n          if (d.includes(quarters)) {\n            quaterId = d;\n          }\n        });\n        prevState[i][quaterId] = Qualtertotal;\n\n        let total = 0;\n        Object.keys(prevState[i]).forEach((d) => {\n          if (d.includes(\"Q\")) {\n            total = total + parseInt(prevState[i][d]);\n          }\n        });\n\n        prevState[i][\"total_target\"] = total;\n        let execName = prevState[i][\"executive\"];\n        let splitedExecName = prevState[i][\"executive\"].split(\"^&\");\n\n        let montopCount = prevState\n          .filter((d) => d.executive == execName)\n          .filter((d, i) => i > 0)\n          .map((d) => d[id])\n          .reduce((acc, curr) => parseInt(acc) + parseInt(curr), 0);\n        let montopCount1 = prevState\n          .filter((d) => d.executive.includes(splitedExecName[0]))\n          .filter((d) => d.lvl > 2)\n          .map((d) => d[id])\n          .reduce((acc, curr) => parseInt(acc) + parseInt(curr), 0);\n        let montotalTargetTopCount = prevState\n          .filter((d) => d.lvl == 3)\n          .map((d) => d[\"total_target\"])\n          .reduce((acc, curr) => parseInt(acc) + parseInt(curr), 0);\n        let montotalTargetsubCount = prevState\n          .filter((d) => d.executive.includes(splitedExecName[0]))\n          .filter((d) => d.lvl > 2)\n          .map((d) => d[\"total_target\"])\n          .reduce((acc, curr) => parseInt(acc) + parseInt(curr), 0);\n        let montotalTargetsubCountCust = prevState\n          .filter((d) => d.executive == execName)\n          .filter((d, i) => i > 0)\n          .map((d) => d[\"total_target\"])\n          .reduce((acc, curr) => parseInt(acc) + parseInt(curr), 0);\n        let monsummaryQuarterCount = prevState\n          .filter((d) => d.lvl == 3)\n          .map((d) => d[id])\n          .reduce((acc, curr) => parseInt(acc) + parseInt(curr), 0);\n\n        prevState[exeSumIndex][id] = montopCount;\n        prevState[exeSumIndex][\"total_target\"] = montotalTargetsubCountCust;\n        prevState[1][\"total_target\"] = montotalTargetTopCount;\n        prevState[1][id] = monsummaryQuarterCount;\n\n        prevState[1][quaterId] = prevState\n          .filter((d) => d.lvl == 3)\n          .map((d) => d[quaterId])\n          .reduce((acc, curr) => parseInt(acc) + parseInt(curr), 0);\n        let monQuartTopCount1 = prevState\n          .filter((d) => d.executive.includes(splitedExecName[0]))\n          .filter((d) => d.lvl > 2)\n          .map((d) => d[quaterId])\n          .reduce((acc, curr) => parseInt(acc) + parseInt(curr), 0);\n        prevState[exeSumIndex][quaterId] = prevState\n          .filter((d) => d.executive == execName)\n          .filter((d, i) => i > 0)\n          .map((d) => d[quaterId])\n          .reduce((acc, curr) => parseInt(acc) + parseInt(curr), 0);\n\n        let arr = prevState;\n        for (let i = 0; i < arr.length; i++) {\n          if (arr[i][\"executive\"] == splitedExecName[0] + \"^&  \") {\n            arr[i][id] = montopCount1;\n            arr[i][\"total_target\"] = montotalTargetsubCount;\n            arr[i][quaterId] = monQuartTopCount1;\n          }\n        }\n      }\n      return [...prevState];\n    });\n\n    const targetDataArray = [];\n\n    const createTargetData = (month, value) => ({\n      executiveId: \"\" + executive,\n      customerId: \"undefined\",\n      prospectId: \"\",\n      practiceId: \"\" + practiceId,\n      countryId: \"\" + countryId,\n      month,\n      typ: \"target\",\n      val: parseInt(value),\n      comments: \"\",\n      isOverridden: false,\n    });\n\n    if (quarChecker === \"quar\") {\n      const monthsMap = {\n        Q1: [\n          `${parseInt(year) - 1}-04-01`,\n          `${parseInt(year) - 1}-05-01`,\n          `${parseInt(year) - 1}-06-01`,\n        ],\n        Q2: [\n          `${parseInt(year) - 1}-07-01`,\n          `${parseInt(year) - 1}-08-01`,\n          `${parseInt(year) - 1}-09-01`,\n        ],\n        Q3: [\n          `${parseInt(year) - 1}-10-01`,\n          `${parseInt(year) - 1}-11-01`,\n          `${parseInt(year) - 1}-12-01`,\n        ],\n        Q4: [\n          `${parseInt(year)}-01-01`,\n          `${parseInt(year)}-02-01`,\n          `${parseInt(year)}-03-01`,\n        ],\n      };\n      const months = monthsMap[quarter];\n      const valuePerMonth = Math.floor(value / 3);\n\n      months.forEach((month, index) => {\n        const targetValue =\n          valuePerMonth + (index === months.length - 1 ? value % 3 : 0);\n        targetDataArray.push(createTargetData(month, targetValue));\n      });\n    } else if (quarChecker === \"month\") {\n      const month = year + \"_\" + id.split(\"_\")[1] + \"_01\";\n      targetDataArray.push(createTargetData(month, value));\n    }\n    setSerTargetObj((prevState) => {\n      return [...prevState, ...targetDataArray];\n    });\n  };\n\n  const clickRowExpand = (exe) => {\n    if (exe === \"Summary\") {\n      setexpanded((prevState) => {\n        return prevState.length === allexe.length ? [] : allexe;\n      });\n    } else {\n      setexpanded((prevState) => {\n        return prevState.includes(exe)\n          ? prevState.filter((item) => item !== exe)\n          : [...prevState, exe];\n      });\n    }\n  };\n\n  //----------------------call-----------------------------------\n  const clickExpandcols = (quartr) => {\n    setcolexpanded((prevState) => {\n      return prevState?.includes(quartr)\n        ? prevState?.filter((item) => item !== quartr)\n        : [...prevState, quartr];\n    });\n  };\n\n  const saveSerTargetDetails = () => {\n    const modifiedData = serTargetObj.some((item) => item.val !== 0);\n    if (modifiedData) {\n      axios\n        .post(\n          baseUrl +\n            `/SalesMS/services/saveSalesTargets?loggedUserId=${loggedUserId}&reportRunId=${reportRunId}`,\n          serTargetObj\n        )\n        .then((resp) => {\n          setMessage(true);\n          setTimeout(() => {\n            setMessage(false);\n          }, 3000);\n        })\n        .catch((err) => {\n          // Handle error\n        });\n    } else {\n      setMessage1(true);\n      setTimeout(() => {\n        setMessage1(false);\n      }, 3000);\n    }\n  };\n\n  const resetClickHandler = () => {\n    let emptyClassList = document.getElementsByClassName(\"empty\");\n    for (let i = 0; i < emptyClassList.length; i++) {\n      let splitData = emptyClassList[i].id.split(\"__\");\n      let row = parseInt(splitData[1]);\n      let col = splitData[2];\n      emptyClassList[i].value = serTargetData[row][col];\n    }\n    setSerTargetData(serviceData);\n    setSerTargetObj([]);\n  };\n\n  useEffect(() => {\n    tableDisplayHandlerHeader();\n    tableDisplayHandler();\n  }, [colexpanded]);\n\n  // ----------------table renderer-------------------------\n\n  const tableDisplayHandlerHeader = () => {\n    setServiceTargetTableData1(() => {\n      return serTargetData?.map((data, i) => {\n        let headspanner = \"\";\n        const conditions = [\n          \"id\",\n          \"count\",\n          \"countryId\",\n          \"execStatus\",\n          \"isEdit\",\n          \"keyAttr\",\n          \"lvl\",\n          \"parentAttr\",\n          \"practiceId\",\n          \"supervisor\",\n        ];\n        const nonIntegersvals = [\"executive\", \"country\", \"total_target\"];\n        const expandableCols = [\"country\"];\n        const horizontalcolexpands = [\"target\"];\n\n        let header = [];\n        toggler =\n          data[\"lvl\"] === 2 || data[\"lvl\"] === 3\n            ? toggler\n            : expanded.includes(data.executive)\n            ? 1\n            : 0;\n\n        for (const keys in data) {\n          if (keys.includes(\"Q\")) {\n            coltoggler = colexpanded.includes(keys.split(\"_\")[1]) ? 1 : 0;\n          }\n\n          !conditions.includes(keys) &&\n            (expanded.length > 0 ? true : !expandableCols.includes(keys)) &&\n            header.push(\n              data.id < 0 && (\n                <th\n                  key={keys}\n                  style={{\n                    textAlign: \"center\",\n                    display:\n                      coltoggler === 0 &&\n                      horizontalcolexpands?.some((item) =>\n                        keys?.includes(item)\n                      ) &&\n                      !(keys?.includes(\"Q\") || keys?.includes(\"total\"))\n                        ? \"none\"\n                        : \"\",\n                  }}\n                >\n                  {data[keys]?.split(\"^&\")[0]}\n                  {data.id === -2 && data[keys]?.includes(\"Quart\") && (\n                    <span\n                      onClick={() => {\n                        clickExpandcols(keys.split(\"_\")[1]);\n                      }}\n                    >\n                      {colexpanded.includes(keys.split(\"_\")[1]) ? (\n                        <FaChevronCircleLeft\n                          size={\"0.8em\"}\n                          title=\"Hide Details\"\n                          style={{ cursor: \"pointer\", marginLeft: \"5px\" }}\n                        />\n                      ) : (\n                        <FaChevronCircleRight\n                          size={\"0.8em\"}\n                          title=\"Show Details\"\n                          style={{ cursor: \"pointer\", marginLeft: \"5px\" }}\n                        />\n                      )}\n                    </span>\n                  )}\n                </th>\n              )\n            );\n          headspanner = keys;\n        }\n        return (\n          <tr key={data.keyAttr + data.executive + data.countryId}>{header}</tr>\n        );\n      });\n    });\n  };\n\n  const tableDisplayHandler = () => {\n    setServiceTargetTableData(() => {\n      return serTargetData?.map((data, i) => {\n        let headspanner = \"\";\n        const conditions = [\n          \"id\",\n          \"count\",\n          \"countryId\",\n          \"execStatus\",\n          \"isEdit\",\n          \"keyAttr\",\n          \"lvl\",\n          \"parentAttr\",\n          \"practiceId\",\n          \"supervisor\",\n        ];\n        const nonIntegersvals = [\"executive\", \"country\", \"total_target\"];\n        const expandableCols = [\"country\"];\n        const horizontalcolexpands = [\"target\"];\n\n        let header = [];\n        toggler =\n          data[\"lvl\"] === 2 || data[\"lvl\"] === 3\n            ? toggler\n            : expanded.includes(data.executive)\n            ? 1\n            : 0;\n\n        for (const keys in data) {\n          if (keys.includes(\"Q\")) {\n            coltoggler = colexpanded.includes(keys.split(\"_\")[1]) ? 1 : 0;\n          }\n          !conditions.includes(keys) &&\n            (expanded.length > 0 ? true : !expandableCols.includes(keys)) &&\n            header.push(\n              <td\n                key={keys}\n                className={\n                  keys.includes(\"executive\")\n                    ? \"executive\"\n                    : keys.includes(\"Q\")\n                    ? keys.split(\"_\")[1][1] % 2 == 0\n                      ? \"even\"\n                      : \"odd\"\n                    : keys.includes(\"total\")\n                    ? \"total\"\n                    : keys.includes(\"0\")\n                    ? keys.split(\"_\")[1] % 2 == 0\n                      ? \"innereven\"\n                      : \"innerodd\"\n                    : \"\"\n                }\n                style={{\n                  display:\n                    (toggler === 0 &&\n                      (data[\"lvl\"] === 2 || data[\"lvl\"] === 3)) ||\n                    (coltoggler === 0 &&\n                      horizontalcolexpands.some((item) =>\n                        keys.includes(item)\n                      ) &&\n                      !(keys.includes(\"Q\") || keys.includes(\"total\")))\n                      ? \"none\"\n                      : \"\",\n                }}\n              >\n                {nonIntegersvals.includes(keys) ? (\n                  <Fragment>\n                    <span\n                      onClick={() => {\n                        clickRowExpand(data.executive);\n                      }}\n                    >\n                      {(data[\"lvl\"] === 1 || data[\"lvl\"] === 0) &&\n                        keys === \"executive\" &&\n                        (expanded.includes(data.executive) ||\n                        (data.executive === \"Summary\" &&\n                          expanded.length === allexe.length) ? (\n                          <FaCaretDown\n                            size={\"1.2em\"}\n                            title=\"Collapse\"\n                            style={{ cursor: \"pointer\", color: \"#428bca\" }}\n                          />\n                        ) : (\n                          <FaCaretRight\n                            size={\"1.2em\"}\n                            title=\"Expand\"\n                            style={{ cursor: \"pointer\", color: \"#428bca\" }}\n                          />\n                        ))}\n                    </span>\n\n                    {keys === \"executive\" ? (\n                      data[\"lvl\"] === 2 || data[\"lvl\"] === 3 ? (\n                        <div\n                          style={{\n                            paddingLeft: data[\"lvl\"] === 3 ? \"30px\" : \"\",\n                          }}\n                        >\n                          {data[\"lvl\"] === 3 && <span>{prosicon[0]}</span>}\n\n                          <span\n                            className={\n                              (keys === \"executive\" && data[\"lvl\"] === 2) ||\n                              data[\"lvl\"] === 3\n                                ? \"collapsedRow\"\n                                : \"\"\n                            }\n                            title={data[keys]?.split(\"^&\")[1]}\n                            style={{\n                              fontWeight: data[\"lvl\"] === 3 ? \" \" : \"normal\",\n                              paddingRight:\n                                data[\"lvl\"] === 3 ? \"60px\" : \"110px\",\n                            }}\n                          >\n                            {(\"\" + data[keys]).includes(\"^&\")\n                              ? data[keys]?.split(\"^&\")[1]\n                              : data[keys]}\n                          </span>\n                        </div>\n                      ) : (\n                        <div>\n                          {icons[data[\"execStatus\"]]}\n                          <span\n                            title={\n                              (\"\" + data[keys]).includes(\"^&\")\n                                ? data[keys]?.split(\"^&\")[0]\n                                : data[keys]\n                            }\n                          >\n                            {(\"\" + data[keys]).includes(\"^&\")\n                              ? data[keys]?.split(\"^&\")[0]\n                              : data[keys]}\n                          </span>\n\n                          <span title=\"Notes\">\n                            {keys == \"executive\" &&\n                            data[keys] !== \"Summary\" &&\n                            data[keys] != \"<< Unassigned >>\" ? (\n                              <MdOutlineEditNote\n                                style={{ float: \"right\", cursor: \"pointer\" }}\n                                size={\"1.5em\"}\n                                onClick={() => {\n                                  setOpenPopup(true);\n                                  setRowData(data);\n                                }}\n                              />\n                            ) : (\n                              \"\"\n                            )}\n                          </span>\n                        </div>\n                      )\n                    ) : data[\"lvl\"] === 1 ? (\n                      <span\n                        className={\n                          keys === \"country\" && data[\"lvl\"] === 1\n                            ? \"countryName\"\n                            : \"\"\n                        }\n                      >\n                        {isNaN(parseFloat(data[keys]))\n                          ? data[keys]\n                          : parseFloat(data[keys]).toLocaleString(\"en-US\")}\n                      </span>\n                    ) : (\n                      <span>\n                        {isNaN(parseFloat(data[keys]))\n                          ? data[keys]\n                          : parseFloat(data[keys]).toLocaleString(\"en-US\")}\n                      </span>\n                    )}\n                  </Fragment>\n                ) : (\n                  <Fragment>\n                    {data[\"lvl\"] === 3 && accessData == 1000 ? (\n                      <input\n                        type=\"number\"\n                        id={keys}\n                        value={serTargetData[i][keys]}\n                        onChange={(e) => {\n                          if (e.target.value === \"\") {\n                            e.target.value = \"0\";\n                            onSerTargetUpdate(\n                              e,\n                              data.parentAttr,\n                              i,\n                              data.id,\n                              data.practiceId,\n                              data.countryId\n                            );\n                          }\n                          onSerTargetEnter(e, i);\n                        }}\n                        onBlur={(e) => {\n                          onSerTargetUpdate(\n                            e,\n                            data.parentAttr,\n                            i,\n                            data.id,\n                            data.practiceId,\n                            data.countryId\n                          );\n                        }}\n                      ></input>\n                    ) : (\n                      <span>\n                        {data[keys] === \" \"\n                          ? \"\"\n                          : parseInt(data[keys]).toLocaleString(\"en-US\")}{\" \"}\n                      </span>\n                    )}\n                  </Fragment>\n                )}\n              </td>\n            );\n          headspanner = keys;\n        }\n        return data.id !== -2 ? (\n          <tr key={data.keyAttr + data.executive + data.countryId}>{header}</tr>\n        ) : null;\n      });\n    });\n  };\n\n  const handleOnExport = () => {\n    const excludeProperties = [\n      \"id\",\n      \"customerId\",\n      \"isProspect\",\n      \"practiceId\",\n      \"countryId\",\n      \"execStatus\",\n      \"lvl\",\n      \"count\",\n      \"isEdit\",\n      \"keyAttr\",\n      \"parentAttr\",\n      \"isActive\",\n    ];\n\n    const headerRow1 = Object.keys(serviceData[0])\n      .filter((key) => !excludeProperties.includes(key))\n      .map((key) => {\n        if (key === \"customer\") {\n          const val = serviceData[0][key].split(\"^&\");\n          let dVal = val[0].includes(\"__\") ? val[0].split(\"__\") : [];\n          return dVal[2] + dVal[4];\n        }\n        const val = serviceData[0][key].split(\"^&\");\n        return val[0];\n      });\n\n    const filteredData = serviceData\n      .slice(1)\n      .map((item) => {\n        const filteredItem = Object.fromEntries(\n          Object.entries(item).filter(\n            ([key]) => !excludeProperties.includes(key)\n          )\n        );\n        return filteredItem;\n      });\n\n    const dataRows = filteredData.map((item) => Object.values(item));\n\n    const workbook = new ExcelJS.Workbook();\n    const worksheet = workbook.addWorksheet(\"SalesTarget\");\n    const headerRow = worksheet.addRow(headerRow1);\n\n    for (let i = 0; i < dataRows.length; i++) {\n      const row = worksheet.addRow(dataRows[i]);\n    }\n    const boldRow = [1];\n    boldRow.forEach((index) => {\n      const row = worksheet.getRow(index);\n      row.font = { bold: true };\n    });\n\n    // Save the workbook\n    workbook.xlsx.writeBuffer().then((buffer) => {\n      saveAs(new Blob([buffer]), \"SalesTarget.xlsx\");\n    });\n  };\n\n  return (\n    <div>\n      <div className=\"\">\n        <RiFileExcel2Line\n          size=\"1.5em\"\n          title=\"Export to Excel\"\n          style={{ color: \"green\", float: \"right\" }}\n          cursor=\"pointer\"\n          onClick={handleOnExport}\n        />\n        <b\n          style={{\n            float: \"right\",\n            paddingRight: \"640px\",\n            fontSize: \"17px\",\n            color: \"#297ab0\",\n          }}\n        >\n          Targets\n        </b>\n        {serviceData.length > 0 && (\n          <SFButtons\n            reportRunId={reportRunId}\n            showSFpipeline={showSFpipeline}\n            setshowSFpipeline={setshowSFpipeline}\n            componentSelector={componentSelector}\n            setRefreshButton={setRefreshButton}\n            refreshButton={refreshButton}\n          />\n        )}\n      </div>\n\n      <div className=\"serviceCompTargetTable darkHeader toHead\">\n        <table\n          className=\"table table-bordered htmlTable\"\n          cellPadding={0}\n          cellSpacing={0}\n        >\n          <thead>{serviceTargetTableData1}</thead>\n          <tbody>{serviceTargetTableData}</tbody>\n        </table>\n      </div>\n\n      {accessData === 1000 ? (\n        <div className=\"btn-container center my-3 mb-2\">\n          {/* <div className=\"clearfix\" style={{ height: '25px' }}></div> */}\n          <button\n            type=\"button\"\n            className=\"btn btn-primary\"\n            style={{\n              width: \"80px\",\n              fontWeight: \"bold\",\n              color: \"white\",\n            }}\n            onClick={saveSerTargetDetails}\n          >\n            <FaSave />\n            Save{\" \"}\n          </button>\n          <button\n            type=\"button\"\n            className=\"btn btn-primary\"\n            style={{\n              width: \"80px\",\n              fontWeight: \"bold\",\n              color: \"white\",\n            }}\n            onClick={() => {\n              resetClickHandler();\n            }}\n          >\n            <FiRotateCcw style={{ color: \"white\" }} />\n            Reset{\" \"}\n          </button>\n        </div>\n      ) : (\n        \"\"\n      )}\n      {openPopup ? (\n        <TargetDisplayPopup\n          openPopup={openPopup}\n          setOpenPopup={setOpenPopup}\n          Vdata={serviceData}\n          accessData={accessData}\n          rowData={rowData}\n        />\n      ) : (\n        \"\"\n      )}\n    </div>\n  );\n};\nexport default ServiceTargetTable;\n","import React from \"react\";\nimport { signal } from \"@preact/signals\";\nimport { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport axios from \"axios\";\nimport { MdOutlineEditNote } from \"react-icons/md\";\nimport DisplayPopup from \"./DisplayPopup\";\n\nimport fte_active from \"../../assets/images/empstatusIcon/fte_active.png\";\nimport fte_inactive from \"../../assets/images/empstatusIcon/fte_inactive.png\";\nimport fte_notice from \"../../assets/images/empstatusIcon/fte_notice.png\";\nimport subk_active from \"../../assets/images/empstatusIcon/subk_active.png\";\nimport subk_inactive from \"../../assets/images/empstatusIcon/subk_inactive.png\";\nimport subk_notice from \"../../assets/images/empstatusIcon/subk_notice.png\";\nimport { environment } from \"../../environments/environment\";\nimport { FaSave } from \"react-icons/fa\";\nimport { FiRotateCcw } from \"react-icons/fi\";\nimport { RiFileExcel2Line } from \"react-icons/ri\";\nimport ExcelJS from \"exceljs\";\nimport \"./SigningTargets.scss\";\nimport SFButtons from \"./SFButtons\";\n\nfunction SigningTargets(props) {\n  const {\n    serviceData,\n    reportRunId,\n    accessData,\n    coloumnArray,\n    serviceDataCall,\n    setMessageSgng,\n    setMessage1,\n    setshowSFpipeline,\n    showSFpipeline,\n    componentSelector,\n    setRefreshButton,\n    refreshButton\n  } = props;\n  const [displaySigningTargets, setDisplaySigningTargets] = useState(null);\n  const [displaySigningTargets1, setDisplaySigningTargets1] = useState(null);\n  const [signingTargetsData, setSigningTargetsData] = useState(\n    JSON.parse(JSON.stringify(serviceData))\n  );\n  const [signingTargetsDataTemp, setSigningTargetsDataTemp] = useState(\n    JSON.parse(JSON.stringify(serviceData))\n  );\n  let columnArray = coloumnArray?.filter(\n    (d) => d?.includes(\"sgtarget\") || d?.includes(\"executive\")\n  );\n  // [\"executive\", \"2023_Q1_sgtarget\", \"2023_Q2_sgtarget\", \"2023_Q3_sgtarget\", \"2023_Q4_sgtarget\", \"total_sgtarget\"]\n  const [saveSalesTargets, setSaveSalesTargets] = useState([]);\n  const [openPopup, setOpenPopup] = useState(false);\n  const [rowData1, setRowData1] = useState({});\n\n  const icons = {\n    fte0: (\n      <img\n        src={fte_inactive}\n        alt=\"(fte_inactive_icon)\"\n        style={{ height: \"12px\" }}\n        title=\"Ex-Employee\"\n      />\n    ),\n    fte1: (\n      <img\n        src={fte_active}\n        alt=\"(fte_active_icon)\"\n        style={{ height: \"12px\" }}\n        title=\"Active Employee\"\n      />\n    ),\n    fte2: (\n      <img\n        src={fte_notice}\n        alt=\"(fte_notice_icon)\"\n        style={{ height: \"12px\" }}\n        title=\"Employee in notice period\"\n      />\n    ),\n    subk0: (\n      <img\n        src={subk_inactive}\n        alt=\"(subk_inactive_icon)\"\n        style={{ height: \"12px\" }}\n        title=\"Ex-Contractor\"\n      />\n    ),\n    subk1: (\n      <img\n        src={subk_active}\n        alt=\"(subk_active_icon)\"\n        style={{ height: \"12px\" }}\n        title=\"Active Contractor\"\n      />\n    ),\n    subk2: (\n      <img\n        src={subk_notice}\n        alt=\"(subk_notice_icon)\"\n        style={{ height: \"12px\" }}\n        title=\"Contractor in notice period\"\n      />\n    ),\n  };\n\n  const loggedUserId = localStorage.getItem(\"resId\");\n  const baseUrl = environment.baseUrl;\n  // const baseUrl = \"http://localhost:8090\"\n\n  useEffect(() => {\n    setSigningTargetsData(JSON.parse(JSON.stringify(serviceData)));\n  }, [serviceData, reportRunId, coloumnArray]);\n\n  useEffect(() => {\n    displayTableHandlerBody();\n    displayTableHandlerHeader();\n  }, [signingTargetsData]);\n\n  useEffect(() => {}, [saveSalesTargets]);\n\n  const displayTableHandlerHeader = () => {\n    setDisplaySigningTargets1(() => {\n      return signingTargetsData.map((data, index) => {\n        let tabData = [];\n        columnArray?.forEach((inEle, inIndex) => {\n          if (data.id === -2) {\n            tabData.push(\n              <th>\n                {data[inEle] !== undefined && data[inEle].split(\"^&1\")[0]}\n              </th>\n            );\n          }\n        });\n        return <tr>{tabData}</tr>;\n      });\n    });\n  };\n\n  const displayTableHandlerBody = () => {\n    setDisplaySigningTargets(() => {\n      return signingTargetsData.map((data, index) => {\n        if (data.lvl === 999) {\n          // Special case for LVL 999, only display executive in the center.\n          return (\n            <tr key={index}>\n              <td\n                style={{ textAlign: \"center\", backgroundColor: \"white\" }}\n                colSpan={columnArray.length}\n                className=\"trLvl0\"\n              >\n                {data.executive}\n              </td>\n            </tr>\n          );\n        }\n        let tabData = [];\n        columnArray?.forEach((inEle, inIndex) => {\n          if (data.id === 0) {\n            tabData.push(\n              inIndex === 0 ? (\n                <td className=\"trLvl0\">{data[inEle]}</td>\n              ) : (\n                <td className=\"trLvl0\" align=\"right\">\n                  {data[inEle] !== null\n                    ? parseInt(data[inEle]).toLocaleString(\"en-US\")\n                    : \"\"}\n                </td>\n              )\n            );\n          } else if (data[inEle] !== \"Summary\" && inIndex === 0) {\n            tabData.push(\n              <td className=\"trLvl1\" title={data[inEle]}>\n                <div>\n                  {icons[data[\"execStatus\"]]} <span>{data[inEle]}</span>\n                  <MdOutlineEditNote\n                    title=\"Notes\"\n                    style={{ float: \"right\", cursor: \"pointer\" }}\n                    size={\"1.5em\"}\n                    onClick={() => {\n                      setOpenPopup(true);\n                      setRowData1(data);\n                    }}\n                  />\n                </div>\n              </td>\n            );\n          } else {\n            tabData.push(\n              inIndex === 0 || inIndex === columnArray.length - 1 ? (\n                <td\n                  className={\n                    inIndex === columnArray.length - 1\n                      ? \"summaryTotalColor\"\n                      : \"trLvl1\"\n                  }\n                >\n                  {data[inEle] !== null\n                    ? parseInt(data[inEle]).toLocaleString(\"en-US\")\n                    : \"\"}\n                </td>\n              ) : (\n                <td className={inIndex % 2 === 0 ? \"evenColor\" : \"oddColor\"}>\n                  {accessData === 1000 ? (\n                    <input\n                      className=\"textStyle\"\n                      id={data.id + \"__\" + index + \"__\" + inEle}\n                      type=\"text\"\n                      style={{ textAlign: \"right\", fontSize: \"12px\" }}\n                      onKeyPress={(e) => {\n                        onKeyPress(e);\n                      }}\n                      onChange={(e) => {\n                        onChangeHandler(\n                          e,\n                          data,\n                          inEle,\n                          index,\n                          data.id + \"__\" + index + \"__\" + inEle\n                        );\n                      }}\n                      onBlur={(e) => {\n                        if (e.target.value === \"\") {\n                          e.target.value = \"0\";\n                          onChangeHandler(\n                            e,\n                            data,\n                            inEle,\n                            index,\n                            data.id + \"__\" + index + \"__\" + inEle\n                          );\n                        }\n                        calculateTotalHandler();\n                      }}\n                      defaultValue={\n                        data[inEle].match(/\\d+/)\n                          ? parseInt(data[inEle]).toLocaleString(\"en-IN\")\n                          : data[inEle]\n                      }\n                    />\n                  ) : (\n                    <span>\n                      {data[inEle].match(/\\d+/)\n                        ? parseInt(data[inEle]).toLocaleString(\"en-IN\")\n                        : data[inEle]}\n                    </span>\n                  )}\n                </td>\n              )\n            );\n          }\n        });\n        return data.id !== -2 ? <tr>{tabData}</tr> : null;\n      });\n    });\n  };\n\n  const onKeyPress = (e) => {\n    var code = e.which ? e.which : e.keyCode;\n    if (code == 8 || code == 46 || code == 37 || code == 39) {\n      return e.key;\n    } else if (code < 48 || code > 57) {\n      return e.preventDefault();\n    } else return e.key;\n  };\n\n  const calculateTotalHandler = () => {\n    signingTargetsData.forEach((data, index) => {\n      columnArray.forEach((ele, inInd) => {\n        if (data.id === 0) {\n          switch (ele) {\n            case columnArray[1]:\n              data[columnArray[1]] = summaryColumnTotal(columnArray[1]);\n              break;\n\n            case columnArray[2]:\n              data[columnArray[2]] = summaryColumnTotal(columnArray[2]);\n              break;\n\n            case columnArray[3]:\n              data[columnArray[3]] = summaryColumnTotal(columnArray[3]);\n              break;\n\n            case columnArray[4]:\n              data[columnArray[4]] = summaryColumnTotal(columnArray[4]);\n              break;\n\n            case columnArray[5]:\n              data[columnArray[5]] = rowTotal(data);\n              break;\n\n            default:\n              break;\n          }\n        } else if (data.id > 0) {\n          switch (ele) {\n            case columnArray[5]:\n              data[columnArray[5]] = rowTotal(data);\n              break;\n\n            default:\n              break;\n          }\n        }\n      });\n    });\n    displayTableHandlerBody();\n  };\n\n  const summaryColumnTotal = (keyName) => {\n    var sum = 0;\n    signingTargetsData.forEach((element, calInd) => {\n      if (element.id > 0) {\n        sum = sum + parseInt(element[keyName]);\n      }\n    });\n    return sum;\n  };\n\n  const rowTotal = (rowData) => {\n    var sum = 0;\n    columnArray.forEach((element, calInd) => {\n      if (calInd > 0 && calInd < columnArray.length - 1) {\n        sum = sum + parseInt(rowData[element]);\n      }\n    });\n    return sum;\n  };\n\n  const onChangeHandler = (e, data, inEle, index, elementId) => {\n    let ele = document.getElementById(elementId).classList;\n    const formattedValue = e.target.value\n      .replace(/\\D/g, \"\")\n      .replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n    e.target.value = formattedValue;\n    if (serviceData[index][inEle] !== e.target.value) {\n      !ele.contains(\"empty\") && ele.add(\"empty\");\n    } else {\n      ele.contains(\"empty\") && ele.remove(\"empty\");\n    }\n    let tempSalesData = saveSalesTargets;\n    const obj = { executiveId: \"\", month: \"\", typ: \"\", val: \"\", comments: \"\" };\n    obj[\"executiveId\"] = data.id;\n    let monthArr = inEle.split(\"_\");\n\n    let monthNum = \"\";\n    if (monthArr[1] === \"Q1\") {\n      monthNum = \"04\";\n      monthArr[0] = (parseInt(monthArr[0]) - 1).toString();\n    } else if (monthArr[1] === \"Q2\") {\n      monthNum = \"07\";\n      monthArr[0] = (parseInt(monthArr[0]) - 1).toString();\n    } else if (monthArr[1] === \"Q3\") {\n      monthNum = \"10\";\n      monthArr[0] = (parseInt(monthArr[0]) - 1).toString();\n    } else if (monthArr[1] === \"Q4\") {\n      monthNum = \"01\";\n    }\n    let month = monthArr[0] + \"-\" + monthNum + \"-\" + \"01\";\n    obj[\"month\"] = month;\n    obj[\"typ\"] = monthArr[2];\n    obj[\"val\"] = e.target.value.replace(/,/g, \"\");\n    let val = tempSalesData.some(\n      (datas) =>\n        datas.executiveId === obj.executiveId &&\n        datas.month === obj.month &&\n        datas.typ === obj.typ\n    );\n    if (val) {\n      tempSalesData.forEach((data, index1) => {\n        if (\n          data.executiveId === obj.executiveId &&\n          data.month === obj.month &&\n          data.typ === obj.typ\n        ) {\n          data[\"val\"] = e.target.value.replace(/,/g, \"\");\n        }\n      });\n    } else {\n      tempSalesData.push(obj);\n    }\n    setSaveSalesTargets(tempSalesData);\n\n    data[inEle] = e.target.value.replace(/,/g, \"\");\n  };\n\n  const saveSalesTargetsAxiosCall = () => {\n    let saveSalesTargetData = saveSalesTargets;\n    const finalData = {};\n\n    saveSalesTargetData.forEach((element, index) => {\n      finalData[index] = element;\n    });\n\n    axios({\n      method: \"POST\",\n      url:\n        baseUrl +\n        `/SalesMS/services/saveSalesSigningTargets?loggedUserId=${loggedUserId}&reportRunId=${reportRunId}`,\n      data: finalData,\n    }).then((resp) => {\n      setMessageSgng(true);\n      setTimeout(() => {\n        setMessageSgng(false);\n      }, 3000);\n      serviceDataCall.current();\n    });\n  };\n\n  const saveClickHandler = () => {\n    let emptyClassList = document.getElementsByClassName(\"empty\");\n    if (emptyClassList.length > 0) {\n      saveSalesTargetsAxiosCall();\n    } else {\n      setMessage1(true);\n      setTimeout(() => {\n        setMessage1(false);\n      }, 4000);\n    }\n  };\n\n  const resetClickHandler = () => {\n    let emptyClassList = document.getElementsByClassName(\"empty\");\n    for (let i = 0; i < emptyClassList.length; i++) {\n      let splitData = emptyClassList[i].id.split(\"__\");\n      // emptyClassList[i].value = serviceData[splitData[1]][splitData[2]];\n      const originalValue = serviceData[splitData[1]][splitData[2]];\n      emptyClassList[i].value = originalValue.match(/\\d+/)\n        ? parseInt(originalValue).toLocaleString(\"en-IN\")\n        : originalValue;\n    }\n    setSigningTargetsData(JSON.parse(JSON.stringify(serviceData)));\n    displayTableHandlerBody();\n    setSaveSalesTargets([]);\n  };\n\n  const handleOnExport = () => {\n    const excludeProperties = [\n      \"id\",\n      \"customerId\",\n      \"isProspect\",\n      \"practiceId\",\n      \"countryId\",\n      \"execStatus\",\n      \"lvl\",\n      \"count\",\n      \"isEdit\",\n      \"keyAttr\",\n      \"parentAttr\",\n      \"isActive\",\n    ];\n\n    const headerRow1 = Object.keys(serviceData[0])\n      .filter((key) => !excludeProperties.includes(key))\n      .map((key) => {\n        if (key === \"customer\") {\n          const val = serviceData[0][key].split(\"^&\");\n          let dVal = val[0].includes(\"__\") ? val[0].split(\"__\") : [];\n          return dVal[2] + dVal[4];\n        }\n        const val = serviceData[0][key].split(\"^&\");\n        return val[0];\n      });\n\n    const filteredData = serviceData\n      .slice(1)\n      .map((item) => {\n        const filteredItem = Object.fromEntries(\n          Object.entries(item).filter(\n            ([key]) => !excludeProperties.includes(key)\n          )\n        );\n        return filteredItem;\n      });\n\n    const dataRows = filteredData.map((item) => Object.values(item));\n\n    const workbook = new ExcelJS.Workbook();\n    const worksheet = workbook.addWorksheet(\"SalesTarget\");\n    const headerRow = worksheet.addRow(headerRow1);\n\n    for (let i = 0; i < dataRows.length; i++) {\n      const row = worksheet.addRow(dataRows[i]);\n    }\n    const boldRow = [1];\n    boldRow.forEach((index) => {\n      const row = worksheet.getRow(index);\n      row.font = { bold: true };\n    });\n\n    // Save the workbook\n    workbook.xlsx.writeBuffer().then((buffer) => {\n      saveAs(new Blob([buffer]), \"SalesTarget.xlsx\");\n    });\n  };\n\n  return (\n    <div>\n      <div className=\"\">\n        <RiFileExcel2Line\n          size=\"1.5em\"\n          title=\"Export to Excel\"\n          style={{ color: \"green\", float: \"right\" }}\n          cursor=\"pointer\"\n          onClick={handleOnExport}\n        />\n        <b\n          style={{\n            float: \"right\",\n            paddingRight: \"610px\",\n            fontSize: \"17px\",\n            color: \"#297ab0\",\n          }}\n        >\n          Signings Targets\n        </b>\n        {serviceData.length > 0 && (\n          <SFButtons\n            reportRunId={reportRunId}\n            showSFpipeline={showSFpipeline}\n            setshowSFpipeline={setshowSFpipeline}\n            componentSelector={componentSelector}\n            setRefreshButton={setRefreshButton}\n            refreshButton={refreshButton}\n          />\n        )}\n      </div>\n      <div className=\"scrollit mt-1\">\n        <div className=\"signingTargetsTable darkHeader toHead\">\n          <table\n            className=\"table table-bordered htmlTable\"\n            cellPadding={0}\n            cellSpacing={0}\n          >\n            <thead>{displaySigningTargets1}</thead>\n            <tbody>{displaySigningTargets}</tbody>\n          </table>\n        </div>\n      </div>\n      {accessData === 1000 ? (\n        <div className=\"col-lg-12 col-md-12 col-sm-12 btn-container center my-3 mb-2\">\n          <button\n            className=\"btn btn-primary\"\n            style={{\n              width: \"80px\",\n              fontWeight: \"bold\",\n              color: \"white\",\n            }}\n            onClick={() => {\n              saveClickHandler();\n            }}\n          >\n            <FaSave />\n            Save\n          </button>\n          <button\n            className=\"btn btn-primary\"\n            style={{\n              width: \"80px\",\n              fontWeight: \"bold\",\n              color: \"white\",\n            }}\n            onClick={() => {\n              resetClickHandler();\n            }}\n          >\n            <FiRotateCcw style={{ color: \"white\" }} />\n            Reset\n          </button>\n        </div>\n      ) : (\n        \"\"\n      )}\n      {openPopup ? (\n        <DisplayPopup\n          openPopup={openPopup}\n          setOpenPopup={setOpenPopup}\n          Vdata={serviceData}\n          rowData={rowData1}\n        />\n      ) : (\n        \"\"\n      )}\n    </div>\n  );\n}\n\nexport default SigningTargets;\n","import customerMappingjsonData from \"./CustomerMapping.json\";\nimport { FaSave } from \"react-icons/fa\";\nimport { environment } from \"../../environments/environment\";\nimport { Fragment, useState, useEffect, createRef } from \"react\";\nimport fte_active from \"../../assets/images/empstatusIcon/fte_active.png\";\nimport fte_inactive from \"../../assets/images/empstatusIcon/fte_inactive.png\";\nimport fte_notice from \"../../assets/images/empstatusIcon/fte_notice.png\";\nimport subk_active from \"../../assets/images/empstatusIcon/subk_active.png\";\nimport subk_inactive from \"../../assets/images/empstatusIcon/subk_inactive.png\";\nimport subk_notice from \"../../assets/images/empstatusIcon/subk_notice.png\";\nimport {\n  FaAngleDown,\n  FaAngleLeft,\n  FaCircle,\n  FaAngleRight,\n} from \"react-icons/fa\";\nimport axios from \"axios\";\n\nconst CustomerMapping = (props) => {\n  const { serviceData, reportRunId, coloumnArray, serviceDataCall } = props;\n\n  const [customerTargetData, setcustomerTargetData] = useState([]);\n  const [customerTargetDataKeys, setcustomerTargetDataKeys] = useState([]);\n  const [expanded, setexpanded] = useState([]);\n\n  const allexe = customerTargetData\n    ?.filter((item) => item.lvl === 1)\n    .map((item) => item.practice);\n  const [colexpanded, setcolexpanded] = useState([]);\n  let toggler = 0;\n  let coltoggler = 0;\n  const icons = {\n    fte0: (\n      <img\n        src={fte_inactive}\n        alt=\"(fte_inactive_icon)\"\n        style={{ height: \"12px\" }}\n        title=\"Ex-Employee\"\n      />\n    ),\n    fte1: (\n      <img\n        src={fte_active}\n        alt=\"(fte_active_icon)\"\n        style={{ height: \"12px\" }}\n        title=\"Active Employee\"\n      />\n    ),\n    fte2: (\n      <img\n        src={fte_notice}\n        alt=\"(fte_notice_icon)\"\n        style={{ height: \"12px\" }}\n        title=\"Employee in notice period\"\n      />\n    ),\n    subk0: (\n      <img\n        src={subk_inactive}\n        alt=\"(subk_inactive_icon)\"\n        style={{ height: \"12px\" }}\n        title=\"Ex-Contractor\"\n      />\n    ),\n    subk1: (\n      <img\n        src={subk_active}\n        alt=\"(subk_active_icon)\"\n        style={{ height: \"12px\" }}\n        title=\"Active Contractor\"\n      />\n    ),\n    subk2: (\n      <img\n        src={subk_notice}\n        alt=\"(subk_notice_icon)\"\n        style={{ height: \"12px\" }}\n        title=\"Contractor in notice period\"\n      />\n    ),\n  };\n  // ----------------Method start-------------------------\n\n  useEffect(() => {\n    setcustomerTargetData(serviceData);\n    setcustomerTargetDataKeys(coloumnArray);\n  }, [serviceData, coloumnArray]);\n\n  const clickRowExpand = (exe) => {\n    if (exe === \"Summary\") {\n      setexpanded((prevState) => {\n        return prevState.length === allexe.length ? [] : allexe;\n      });\n    } else {\n      setexpanded((prevState) => {\n        return prevState.includes(exe)\n          ? prevState.filter((item) => item !== exe)\n          : [...prevState, exe];\n      });\n    }\n  };\n\n  const clickExpandcols = (quartr) => {\n    setcolexpanded((prevState) => {\n      return prevState.includes(quartr)\n        ? prevState.filter((item) => item !== quartr)\n        : [...prevState, quartr];\n    });\n  };\n  //----------------------call-----------------------------------\n\n  const saveCustMappingDetails = () => {\n    axios\n      .post(\n        baseUrl +\n          `/SalesMS/services/saveSalesCustomerMapping?loggedUserId=55543&reportRunId=` +\n          reportRunId,\n        serTargetObj\n      )\n      .then((resp) => {\n        console.log(resp);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n  // ----------------table renderer-------------------------\n  const serviceTargetTableData = customerTargetData?.map((data, i) => {\n    const conditions = [\n      \"count\",\n      \"countryId\",\n      \"customerId\",\n      \"id\",\n      \"isEdit\",\n      \"isProspect\",\n      \"keyAttr\",\n      \"lvl\",\n      \"parentAttr\",\n      \"practiceId\",\n    ];\n    const nonIntegersvals = [\n      \"practice\",\n      \"country\",\n      \"customer\",\n      \"total_target\",\n      \"total_custForecast\",\n    ];\n    const expandableCols = [\"customer\"];\n    const horizontalcolexpands = [\n      \"target\",\n      \"call\",\n      \"custForecast\",\n      \"sf\",\n      \"pl\",\n      \"rr\",\n      \"attperc\",\n    ];\n    let headspanner = \"\";\n\n    let header = [];\n    toggler =\n      data[\"lvl\"] === 2 || data[\"lvl\"] === 3\n        ? toggler\n        : expanded.includes(data.practice)\n        ? 1\n        : 0;\n\n    for (const keys in data) {\n      if (keys.includes(\"Q\")) {\n        coltoggler = colexpanded.includes(keys.split(\"_\")[1]) ? 1 : 0;\n      }\n      data?.id < 0 && console.log(keys);\n\n      data[keys] !== null &&\n        !conditions.includes(keys) &&\n        (expanded.length > 0 ? true : !expandableCols.includes(keys)) &&\n        header.push(\n          data.id < 0 ? (\n            // ((data.id === -2 || data.id === -1 && (keys.includes(\"total\") ? (keys.split(\"_\")[0] !== (headspanner.split(\"_\")[0])) : (keys.split(\"_\")[1] !== headspanner.split(\"_\")[1]) || keys.includes(\"executive\") || keys.includes(\"country\") || keys.includes(\"customer\"))) || data.id === -1) && (data[keys] !== \"\") &&\n            // <th\n            //     className={\"targetth \" + data[keys].split(\"^&\")[3]}\n            //     key={keys}\n            //     rowSpan={data[keys].split(\"^&\")[1]}\n            //     colSpan={data[keys].split(\"^&\")[2]}\n            //     style={{ display: (coltoggler === 0 && ((horizontalcolexpands.some((item) => keys.includes(item))) && !(keys.includes(\"Q\") || keys.includes(\"total\")))) ? \"none\" : \"\" }}\n            // >\n            //     {data[keys].split(\"^&\")[0]}\n            //     {data.id === -2 && data[keys].includes(\"Quart\") && <span onClick={() => { clickExpandcols(keys.split(\"_\")[1]) }}>{colexpanded.includes(keys.split(\"_\")[1]) ? <FaAngleLeft /> : <FaAngleRight />}</span>}\n            // </th>\n\n            <th\n              className={\"targetth \" + data[keys].split(\"^&\")[3]}\n              key={keys}\n              style={{\n                display:\n                  coltoggler === 0 &&\n                  (keys.includes(\"target\") || keys.includes(\"custForecast\")) &&\n                  !(keys.includes(\"Q\") || keys.includes(\"total\"))\n                    ? \"none\"\n                    : \"\",\n              }}\n              // colSpan={data[keys].split(\"^&\")[2]}\n              // rowSpan={data[keys].split(\"^&\")[1]}\n            >\n              {data[keys].split(\"^&\")[0]}\n              {data.id === -2 && data[keys].includes(\"Quart\") && (\n                <span\n                  onClick={() => {\n                    clickExpandcols(keys.split(\"_\")[1]);\n                  }}\n                >\n                  {colexpanded.includes(keys.split(\"_\")[1]) ? (\n                    <FaAngleLeft />\n                  ) : (\n                    <FaAngleRight />\n                  )}\n                </span>\n              )}\n            </th>\n          ) : (\n            <td\n              key={keys}\n              data-lvl={data.lvl}\n              data-qua={customerTargetData[0][keys]?.split(\"^&\")[4]}\n              className={\"custMaptd \" + keys.split(\"_\")[1] + \" \" + keys}\n              style={{\n                display:\n                  (toggler === 0 && (data[\"lvl\"] === 2 || data[\"lvl\"] === 3)) ||\n                  (coltoggler === 0 &&\n                    (keys.includes(\"target\") ||\n                      keys.includes(\"custForecast\")) &&\n                    !(keys.includes(\"Q\") || keys.includes(\"total\")))\n                    ? \"none\"\n                    : \"\",\n              }}\n            >\n              {nonIntegersvals.includes(keys) ? (\n                <Fragment>\n                  <span\n                    onClick={() => {\n                      clickRowExpand(data.practice);\n                    }}\n                  >\n                    {(data[\"lvl\"] === 1 || data[\"lvl\"] === 0) &&\n                      keys === \"practice\" &&\n                      (expanded.includes(data.practice) ||\n                      (data.practice === \"Summary\" &&\n                        expanded?.length === allexe?.length) ? (\n                        <FaAngleDown />\n                      ) : (\n                        <FaAngleRight />\n                      ))}\n                  </span>\n\n                  {keys === \"practice\" ? (\n                    data[\"lvl\"] === 2 || data[\"lvl\"] === 3 ? (\n                      <span>{data[keys].split(\"^&\")[1]}</span>\n                    ) : (\n                      <span>\n                        {icons[data[\"practice\"]]} {data[keys].split(\"^&\")[0]}\n                      </span>\n                    )\n                  ) : (\n                    <span>{data[keys]}</span>\n                  )}\n                </Fragment>\n              ) : (\n                <Fragment>\n                  {data[\"lvl\"] === 3 ? (\n                    <input\n                      type=\"number\"\n                      id={keys}\n                      value={data[keys]}\n                      // onChange={(e) => { onSerTargetEnter(e, i) }}\n                      // onBlur={(e) => { onSerTargetUpdate(e, data.parentAttr, i, data.id,data.practiceId,data.countryId) }}\n                    ></input>\n                  ) : (\n                    <span>\n                      {data[keys] === \" \"\n                        ? \"\"\n                        : parseInt(data[keys]).toLocaleString(\"en-US\")}\n                    </span>\n                  )}\n                </Fragment>\n              )}\n            </td>\n            // <td key={keys}\n            //     className={\n            //         (keys.includes(\"executive\") ? \"executive\" : keys.includes(\"Q\") ? keys.split(\"_\")[1][1] % 2 == 0 ? \"even\" : \"odd\" : keys.includes(\"total\") ? \"total\"\n            //             : keys.includes(\"0\") ? keys.split(\"_\")[1] % 2 == 0 ? \"innereven\" : \"innerodd\" : \"\")\n\n            //     }\n            //     style={{ display: (toggler === 0 && (data[\"lvl\"] === 2 || data[\"lvl\"] === 3)) || (coltoggler === 0 && ((horizontalcolexpands.some((item) => keys.includes(item))) && !(keys.includes(\"Q\") || keys.includes(\"total\")))) ? \"none\" : \"\" }}>\n            //     {nonIntegersvals.includes(keys)\n            //         ?\n            //         <Fragment>\n            //             <span onClick={() => { clickRowExpand(data.executive) }}>{((data[\"lvl\"] === 1 || data[\"lvl\"] === 0) && keys === \"executive\") && ((expanded.includes(data.executive) || (data.executive === \"Summary\" && (expanded.length === allexe.length))) ? <FaAngleDown /> : <FaAngleRight />)}</span>\n\n            //             {keys === \"executive\" ?\n            //                 (\n            //                     (data[\"lvl\"] === 2 || data[\"lvl\"] === 3)\n            //                         ?\n            //                         (<span>{data[keys].split(\"^&\")[1]}</span>)\n\n            //                         :\n            //                         <span>{icons[data[\"execStatus\"]]} {data[keys].split(\"^&\")[0]}</span>\n            //                 )\n            //                 :\n\n            //                 <span>{data[keys]}</span>\n            //             }\n            //             {/* {keys == \"total_target\" ?\n            //                 <span>{(data[keys] === \" \" ? \"\" : (parseInt(data[keys])).toLocaleString('en-US'))}</span> : \"\"} */}\n\n            //         </Fragment>\n            //         :\n            //         <Fragment>\n            //             {(data[\"lvl\"] === 3)\n            //                 ?\n            //                 <input type=\"number\" id={keys} value={data[keys]} data-qua={serTargetData[0][keys].split(\"^&\")[4]}\n            //                     onChange={(e) => { onSerTargetEnter(e, i) }}\n            //                     onBlur={(e) => { onSerTargetUpdate(e, data.parentAttr, i, data.id, data.practiceId, data.countryId) }}\n            //                 ></input>\n            //                 :\n\n            //                 <span>{(data[keys] === \" \" ? \"\" : (parseInt(data[keys])).toLocaleString('en-US'))}</span>\n            //             }\n\n            //         </Fragment>\n\n            //     }\n            //     {nonIntegersvals.includes(keys)\n            //         ?\n            //         <Fragment>\n            //             {/* {keys === \"country\" && <span>{data[keys]}</span>} */}\n            //             {keys === \"executive\" && data[keys] !== \"Summary\" ? <MdOutlineEditNote style={{ float: \"right\" }} size={\"1.5em\"} onClick={() => { setOpenPopup(true); setRowData(data); console.log(data) }} /> : \"\"}\n            //         </Fragment> : \"\"}\n            // </td>\n          )\n        );\n      headspanner = keys;\n    }\n    return (\n      <tr\n        key={data.keyAttr + data.practice + data.customer}\n        data-lvl={data.lvl}\n      >\n        {header}\n      </tr>\n    );\n  });\n\n  return (\n    <div className=\"col-lg-12 col-md-12 col-sm-12  customCard\">\n      <div className=\"col-lg-12 col-md-12 col-sm-12 no-padding custMapTablePrnt scrollit darkHeader\">\n        <table className=\"table table-bordered  \">\n          <tbody>{serviceTargetTableData}</tbody>\n        </table>\n      </div>\n      <div className=\"col-md-12 col-sm-12 col-xs-12 no-padding center\">\n        {/* <button type=\"button\" className=\"btn btn-primary\" onClick={saveCustMappingDetails}><FaSave /> Save </button> */}\n        {/* <button type=\"button\" className=\"btn btn-primary\"  ><BiReset />Reset </button> */}\n      </div>\n    </div>\n  );\n};\n\nexport default CustomerMapping;\n","import axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport { environment } from \"../../environments/environment\";\nimport fte_active from \"../../assets/images/empstatusIcon/fte_active.png\";\nimport fte_inactive from \"../../assets/images/empstatusIcon/fte_inactive.png\";\nimport fte_notice from \"../../assets/images/empstatusIcon/fte_notice.png\";\nimport subk_active from \"../../assets/images/empstatusIcon/subk_active.png\";\nimport subk_inactive from \"../../assets/images/empstatusIcon/subk_inactive.png\";\nimport subk_notice from \"../../assets/images/empstatusIcon/subk_notice.png\";\nimport { FaCircle, FaSave } from \"react-icons/fa\";\nimport { FiRotateCcw } from \"react-icons/fi\";\nimport { RiFileExcel2Line } from \"react-icons/ri\";\nimport ExcelJS from \"exceljs\";\nimport Loader from \"../Loader/Loader\";\nimport \"./CustomerTargets.scss\";\n\nfunction CustomerTargets(props) {\n  const {\n    serviceData,\n    reportRunId,\n    coloumnArray,\n    serviceDataCall,\n    setMessageCust,\n    accessData,\n    setMessage1,\n  } = props;\n  const [customerTargetsData, setCustomerTargetsData] = useState(\n    JSON.parse(JSON.stringify(serviceData))\n  );\n  const [displayTable, setDisplayTable] = useState(null);\n  const [loader, setLoader] = useState(false);\n  const [savesCustTargetData, setSavesCustTargetData] = useState([]);\n  const [displayTableHead, setDisplayTableHead] = useState(null);\n  let columnsData = [];\n\n  const loggedUserId = localStorage.getItem(\"resId\");\n  const baseUrl = environment.baseUrl;\n\n  useEffect(() => {\n    setCustomerTargetsData(JSON.parse(JSON.stringify(serviceData)));\n  }, [serviceData, reportRunId]);\n\n  useEffect(() => {\n    displayTableHeader();\n    displayTableData();\n  }, [customerTargetsData]);\n\n  const icons = {\n    fte0: (\n      <img\n        src={fte_inactive}\n        alt=\"(fte_inactive_icon)\"\n        style={{ height: \"12px\" }}\n        title=\"Ex-Employee\"\n      />\n    ),\n    fte1: (\n      <img\n        src={fte_active}\n        alt=\"(fte_active_icon)\"\n        style={{ height: \"12px\" }}\n        title=\"Active Employee\"\n      />\n    ),\n    fte2: (\n      <img\n        src={fte_notice}\n        alt=\"(fte_notice_icon)\"\n        style={{ height: \"12px\" }}\n        title=\"Employee in notice period\"\n      />\n    ),\n    subk0: (\n      <img\n        src={subk_inactive}\n        alt=\"(subk_inactive_icon)\"\n        style={{ height: \"12px\" }}\n        title=\"Ex-Contractor\"\n      />\n    ),\n    subk1: (\n      <img\n        src={subk_active}\n        alt=\"(subk_active_icon)\"\n        style={{ height: \"12px\" }}\n        title=\"Active Contractor\"\n      />\n    ),\n    subk2: (\n      <img\n        src={subk_notice}\n        alt=\"(subk_notice_icon)\"\n        style={{ height: \"12px\" }}\n        title=\"Contractor in notice period\"\n      />\n    ),\n  };\n\n  const onKeyPress = (e) => {\n    var code = e.which ? e.which : e.keyCode;\n    if (code == 8 || code == 46 || code == 37 || code == 39) {\n      return e.key;\n    } else if (code < 48 || code > 57) {\n      return e.preventDefault();\n    } else return e.key;\n  };\n\n  const displayTableHeader = () => {\n    setDisplayTableHead(() => {\n      return customerTargetsData.map((objData, index) => {\n        let tabData = [];\n        Object.keys(objData).forEach((key, nestedIndex) => {\n          let unWantedCols = [\n            \"count\",\n            \"countryId\",\n            \"customerId\",\n            \"id\",\n            \"isEdit\",\n            \"isProspect\",\n            \"keyAttr\",\n            \"lvl\",\n            \"parentAttr\",\n            \"practiceId\",\n            \"execStatus\",\n          ];\n          if (objData.id === -2 && unWantedCols.indexOf(key) == -1) {\n            let val = objData[key].split(\"^&\");\n            let dVal = val[0].includes(\"__\") ? val[0].split(\"__\") : [];\n            tabData.push(\n              <th\n                style={{ position: \"sticky\" }}\n                rowSpan={val[1]}\n                colSpan={val[2]}\n              >\n                {dVal.length > 0 ? (\n                  <div>\n                    <span>\n                      <FaCircle size={\"0.8em\"} style={{ color: \"green\" }} />\n                      <span>{dVal[2]}</span>\n                    </span>\n                    <span>\n                      <FaCircle size={\"0.8em\"} style={{ color: \"purple\" }} />\n                      <span>{dVal[4]}</span>\n                    </span>\n                  </div>\n                ) : (\n                  val[0]\n                )}\n              </th>\n            );\n          } else if (objData.id === -1 && unWantedCols.indexOf(key) == -1) {\n            objData[key] && tabData.push(<th>{objData[key]}</th>);\n          } else {\n          }\n        });\n        return <tr key={index}>{tabData}</tr>;\n      });\n    });\n  };\n\n  const formatNumberWithCommas = (number) => {\n    return number.toLocaleString(\"en-US\");\n  };\n\n  const displayTableData = () => {\n    setLoader(true);\n    setDisplayTable(() => {\n      return customerTargetsData.map((objData, index) => {\n        if (objData.lvl === 999) {\n          // Special case for LVL 999, only display executive in the center.\n          return (\n            <tr key={index}>\n              <td\n                style={{\n                  textAlign: \"center\",\n                  backgroundColor: \"white\",\n                  fontSize: \"14px\",\n                  color: \"black\",\n                }}\n                colSpan={24}\n              >\n                {objData.executive}\n              </td>\n            </tr>\n          );\n        }\n        if (objData.lvl === -2 || objData.lvl === -1) {\n          // Skip rendering the row for lvl -2 and -1\n          return null;\n        }\n        let tabData = [];\n        Object.keys(objData).forEach((key, nestedIndex) => {\n          let unWantedCols = [\n            \"count\",\n            \"countryId\",\n            \"customerId\",\n            \"id\",\n            \"isEdit\",\n            \"isProspect\",\n            \"keyAttr\",\n            \"lvl\",\n            \"parentAttr\",\n            \"practiceId\",\n            \"execStatus\",\n          ];\n\n          if (objData.id === 0 && unWantedCols.indexOf(key) == -1) {\n            tabData.push(\n              <td\n                style={{\n                  textAlign: !isNaN(parseFloat(objData[key]))\n                    ? \"right\"\n                    : \"left\",\n                }}\n              >\n                {isNaN(parseFloat(objData[key]))\n                  ? objData[key]\n                  : parseFloat(objData[key]).toLocaleString(\"en-US\")}\n              </td>\n            );\n          } else if (objData.id > 0 && unWantedCols.indexOf(key) == -1) {\n            let trLvl1Clr = [\"executive\", \"practice\", \"country\", \"customer\"];\n            tabData.push(\n              <td\n                className={` ${\n                  trLvl1Clr.indexOf(key) != -1\n                    ? \"trLvl1\"\n                    : key.includes(\"total_custForecast\")\n                    ? \"total\"\n                    : key.includes(\"custForecast\") &&\n                      !key.includes(\"total\") &&\n                      nestedIndex % 2 == 0\n                    ? \"innereven\"\n                    : \"innerodd\"\n                }`}\n              >\n                {key.includes(\"custForecast\") &&\n                !key.includes(\"total\") &&\n                accessData === 1000 ? (\n                  <input\n                    className=\"textStyle\"\n                    type=\"text\"\n                    id={objData.id + \"__\" + index + \"__\" + key}\n                    onKeyPress={(e) => {\n                      onKeyPress(e);\n                    }}\n                    onChange={(e) => {\n                      onChangeHandler(\n                        e,\n                        objData,\n                        index,\n                        key,\n                        objData.id + \"__\" + index + \"__\" + key\n                      );\n                    }}\n                    onBlur={(e) => {\n                      if (e.target.value === \"\") {\n                        e.target.value = \"0\";\n                        onChangeHandler(\n                          e,\n                          objData,\n                          index,\n                          key,\n                          objData.id + \"__\" + index + \"__\" + key\n                        );\n                      }\n                      onBlurHandler();\n                    }}\n                    defaultValue={\n                      objData[key].match(/\\d+/)\n                        ? parseInt(objData[key]).toLocaleString(\"en-IN\")\n                        : objData[key]\n                    }\n                  />\n                ) : key.includes(\"customer\") ? (\n                  <div title={objData[key]}>\n                    {objData.isProspect === 1 ? (\n                      <FaCircle size={\"0.8em\"} style={{ color: \"purple\" }} />\n                    ) : (\n                      <FaCircle size={\"0.8em\"} style={{ color: \"green\" }} />\n                    )}\n                    <span>{objData[key]}</span>\n                  </div>\n                ) : key.includes(\"executive\") ? (\n                  <div>\n                    {objData.executive != \"<< Unassigned >>\" ? (\n                      <>{icons[objData[\"execStatus\"]]}</>\n                    ) : (\n                      <></>\n                    )}\n                    <span title={objData[key]}>{objData[key]}</span>\n                  </div>\n                ) : (\n                  <div\n                    title={objData[key]}\n                    style={{\n                      textAlign: !isNaN(parseFloat(objData[key]))\n                        ? \"right\"\n                        : \"left\",\n                    }}\n                  >\n                    {isNaN(parseFloat(objData[key]))\n                      ? objData[key]\n                      : parseFloat(objData[key]).toLocaleString(\"en-US\")}\n                  </div>\n                )}\n              </td>\n            );\n          }\n        });\n        return <tr key={index}>{tabData}</tr>;\n      });\n    });\n    setLoader(false);\n  };\n\n  const onChangeHandler = (e, objData, index, key, elementId) => {\n    let ele = document.getElementById(elementId).classList;\n    const formattedValue = e.target.value\n      .replace(/\\D/g, \"\")\n      .replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n    e.target.value = formattedValue;\n    if (serviceData[index][key] !== e.target.value) {\n      !ele.contains(\"empty\") && ele.add(\"empty\");\n    } else {\n      ele.contains(\"empty\") && ele.remove(\"empty\");\n    }\n    let tempCustData = savesCustTargetData;\n    const userObjData = {\n      executiveId: \"\",\n      customerId: 0,\n      prospectId: 0,\n      practiceId: \"\",\n      countryId: \"\",\n      month: \"\",\n      typ: \"\",\n      val: \"\",\n      comments: \"\",\n      isOverridden: \"\",\n    };\n    userObjData[\"executiveId\"] = objData.id;\n    if (objData.isProspect === 1) {\n      userObjData[\"prospectId\"] = objData.customerId;\n    } else {\n      userObjData[\"customerId\"] = objData.customerId;\n    }\n    userObjData[\"practiceId\"] = objData.practiceId;\n    userObjData[\"countryId\"] = objData.countryId;\n    let urMonth = key.split(\"_\");\n    userObjData[\"month\"] = urMonth[0] + \"-\" + urMonth[1] + \"-\" + urMonth[2];\n    //objData[\"month\"] = urMonth[0] + \"-\" + urMonth[1] + \"-\" + urMonth[2];\n    userObjData[\"typ\"] = \"custForecast\";\n    userObjData[\"val\"] = e.target.value.replace(/,/g, \"\");\n    userObjData[\"comments\"] = \"\";\n    userObjData[\"isOverridden\"] = false;\n    let val = tempCustData.some(\n      (datas) =>\n        datas.executiveId === userObjData.executiveId &&\n        //&& datas.prospectId === objData.prospectId\n        datas.customerId === userObjData.customerId &&\n        datas.practiceId === userObjData.practiceId &&\n        datas.countryId === userObjData.countryId &&\n        datas.month === userObjData.month\n      //&& datas.typ === objData.typ\n    );\n    if (val) {\n      tempCustData.forEach((element, index1) => {\n        if (\n          element.executiveId === userObjData.executiveId &&\n          //&& element.prospectId === objData.prospectId\n          element.customerId === userObjData.customerId &&\n          element.practiceId === userObjData.practiceId &&\n          element.countryId === userObjData.countryId &&\n          element.month === userObjData.month\n          //&& element.typ === objData.typ\n        ) {\n          element[\"val\"] = e.target.value.replace(/,/g, \"\");\n        }\n      });\n    } else {\n      tempCustData.push(userObjData);\n    }\n    setSavesCustTargetData(tempCustData);\n    objData[key] = e.target.value.replace(/,/g, \"\");\n  };\n\n  const saveCustomersTargetsAxiosCall = () => {\n    let saveCustomerTgrtData = savesCustTargetData;\n    const finalData = [];\n    saveCustomerTgrtData.forEach((element, index) => {\n      finalData[index] = element;\n    });\n\n    axios({\n      method: \"POST\",\n      url:\n        baseUrl +\n        `/SalesMS/services/saveSalesCustomerMapping?loggedUserId=${loggedUserId}&reportRunId=${reportRunId}`,\n      data: finalData,\n    }).then((resp) => {\n      setMessageCust(true);\n      setTimeout(() => {\n        setMessageCust(false);\n      }, 8000);\n      serviceDataCall.current();\n    });\n  };\n\n  const onBlurHandler = () => {\n    customerTargetsData.forEach((data, index) => {\n      Object.keys(data).forEach((key) => {\n        if (\n          data.id === 0 &&\n          key.includes(\"custForecast\") &&\n          !key.includes(\"total\")\n        ) {\n          data[key] = summaryColumnTotal(key);\n        } else if (\n          data.id >= 0 &&\n          key.includes(\"custForecast\") &&\n          key.includes(\"total\")\n        ) {\n          data[key] = rowTotal(key, data);\n        }\n      });\n    });\n    displayTableData();\n  };\n\n  const summaryColumnTotal = (keyName) => {\n    var sum = 0;\n    customerTargetsData.forEach((element, calInd) => {\n      if (element.id > 0) {\n        sum = sum + parseInt(element[keyName]);\n      }\n    });\n    return sum;\n  };\n\n  const rowTotal = (key, rowData) => {\n    var sum = 0;\n    Object.keys(rowData).forEach((element) => {\n      if (element.includes(\"custForecast\") && element !== key) {\n        sum = sum + parseInt(rowData[element]);\n      }\n    });\n    return sum;\n  };\n\n  const saveClickHandler = () => {\n    let emptyClassList = document.getElementsByClassName(\"empty\");\n    if (emptyClassList.length > 0) {\n      saveCustomersTargetsAxiosCall();\n    } else {\n      setMessage1(true);\n      setTimeout(() => {\n        setMessage1(false);\n      }, 4000);\n    }\n  };\n\n  const resetClickHandler = () => {\n    let emptyClassList = document.getElementsByClassName(\"empty\");\n    for (let i = 0; i < emptyClassList.length; i++) {\n      let splitData = emptyClassList[i].id.split(\"__\");\n      const originalValue = serviceData[splitData[1]][splitData[2]];\n      emptyClassList[i].value = originalValue.match(/\\d+/)\n        ? parseInt(originalValue).toLocaleString(\"en-IN\")\n        : originalValue;\n    }\n    setCustomerTargetsData(JSON.parse(JSON.stringify(serviceData)));\n    displayTableData();\n    setSavesCustTargetData([]);\n  };\n\n  const handleOnExport = () => {\n    const excludeProperties = [\n      \"id\",\n      \"customerId\",\n      \"isProspect\",\n      \"practiceId\",\n      \"countryId\",\n      \"execStatus\",\n      \"lvl\",\n      \"count\",\n      \"isEdit\",\n      \"keyAttr\",\n      \"parentAttr\",\n      \"isActive\",\n    ];\n    const headerRow1 = Object.keys(customerTargetsData[0])\n      .filter((key) => !excludeProperties.includes(key))\n      .map((key) => {\n        if (key === \"customer\") {\n          const val = customerTargetsData[0][key].split(\"^&\");\n          let dVal = val[0].includes(\"__\") ? val[0].split(\"__\") : [];\n          return dVal[2] + dVal[4];\n        }\n        const val = customerTargetsData[0][key].split(\"^&\");\n        return val[0];\n      });\n\n    const filteredData = customerTargetsData\n      .slice(1)\n      .map((item) => {\n        const filteredItem = Object.fromEntries(\n          Object.entries(item).filter(\n            ([key]) => !excludeProperties.includes(key)\n          )\n        );\n        return filteredItem;\n      });\n\n    const dataRows = filteredData.map((item) => Object.values(item));\n\n    const workbook = new ExcelJS.Workbook();\n    const worksheet = workbook.addWorksheet(\"SalesTarget\");\n    const headerRow = worksheet.addRow(headerRow1);\n\n    for (let i = 0; i < dataRows.length; i++) {\n      const row = worksheet.addRow(dataRows[i]);\n    }\n    const boldRow = [1];\n    boldRow.forEach((index) => {\n      const row = worksheet.getRow(index);\n      row.font = { bold: true };\n    });\n\n    // Save the workbook\n    workbook.xlsx.writeBuffer().then((buffer) => {\n      saveAs(new Blob([buffer]), \"SalesTarget.xlsx\");\n    });\n  };\n\n  return (\n    <>\n      {loader ? (\n        <Loader handleAbort={() => setLoader(false)} />\n      ) : (\n        <div>\n          <RiFileExcel2Line\n            size=\"1.5em\"\n            title=\"Export to Excel\"\n            style={{ color: \"green\", float: \"right\", marginBottom: \"10px\" }}\n            cursor=\"pointer\"\n            onClick={handleOnExport}\n          />\n\n          <div className=\"customerTargetsTable darkHeader toHead\">\n            <table\n              className=\"table table-bordered htmlTable\"\n              cellPadding={0}\n              cellSpacing={0}\n            >\n              <thead>{displayTableHead}</thead>\n              <tbody>{displayTable}</tbody>\n            </table>\n          </div>\n          {accessData === 1000 ? (\n            <div className=\"col-lg-12 col-md-12 col-sm-12 btn-container center my-3 mb-2\">\n              <button\n                className=\"btn btn-primary mr4\"\n                style={{\n                  width: \"80px\",\n                  fontWeight: \"bold\",\n                  color: \"white\",\n                }}\n                onClick={() => {\n                  saveClickHandler();\n                }}\n              >\n                <FaSave />\n                Save\n              </button>\n              <button\n                className=\"btn btn-primary mr4 \"\n                style={{\n                  width: \"80px\",\n                  fontWeight: \"bold\",\n                  color: \"white\",\n                }}\n                onClick={() => {\n                  resetClickHandler();\n                }}\n              >\n                <FiRotateCcw style={{ color: \"white\" }} />\n                Reset\n              </button>\n            </div>\n          ) : (\n            \"\"\n          )}\n        </div>\n      )}\n    </>\n  );\n}\n\nexport default CustomerTargets;\n","import { useRef, useState } from \"react\";\nimport ServiceSearchFilters from \"./ServiceSearchFilters\";\nimport ServiceTargetTable from \"./ServiceTargetTable\";\nimport SigningTargets from \"./SigningTargets\";\nimport CustomerMapping from \"./CustomerMapping\";\nimport ViewTable from \"./ViewTable\";\nimport SFButtons from \"./SFButtons\";\nimport SfPipeline from \"./SfPipeline\";\nimport axios from \"axios\";\nimport { environment } from \"../../environments/environment\";\nimport \"./Service.scss\";\nimport { useEffect } from \"react\";\nimport CustomerTargets from \"./CustomerTargets\";\nimport { BiCheck, BiError } from \"react-icons/bi\";\n\nexport default function Service() {\n  const serviceDataCall = useRef(null);\n  const [Sfpipeline, setSfpipeline] = useState([]);\n\n  const [reportRunId, setreportRunId] = useState(\"\");\n  const [coloumnArray, setcoloumnArray] = useState([]);\n  const [serviceData, setserviceData] = useState([]);\n  const [componentSelector, setcomponentSelector] = useState(\"\");\n  const [Summary, setSummary] = useState(\"Executive\");\n  const [showSFpipeline, setshowSFpipeline] = useState(false);\n  const messageRef = useRef(null);\n  const [ViewBy, setViewBy] = useState();\n  const [message, setMessage] = useState(false);\n  const [message1, setMessage1] = useState(false);\n  const [messageCust, setMessageCust] = useState(false);\n  const [messageSgng, setMessageSgng] = useState(false);\n  const [search, setSearch] = useState(false);\n  const [hirarchy, setHirarchy] = useState([]);\n  const loggedUserId = localStorage.getItem(\"resId\");\n  const baseUrl = environment.baseUrl;\n  const [accessData, setAccessData] = useState([]);\n  const [refreshButton, setRefreshButton] = useState(\"\");\n\n  const hirarchyAccess = () => {\n    axios\n\n      .get(\n        baseUrl +\n          `/ProjectMS/project/getHirarchyAccesss?loggedUserId=${loggedUserId}`\n      )\n\n      .then((resp) => {\n        const data = resp.data;\n        setHirarchy(data);\n      })\n\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n  useEffect(() => {\n    hirarchyAccess();\n  }, []);\n  useEffect(() => {\n    getMenus();\n  }, []);\n\n  const getMenus = () => {\n    // setMenusData\n\n    axios({\n      method: \"GET\",\n      url: baseUrl + `/CommonMS/master/getMenus?loggedUserId=${loggedUserId}`,\n    }).then((resp) => {\n      let data = resp.data;\n\n      const projectStatusReportSubMenu = data\n        .find((item) => item.display_name === \"Sales\")\n        .subMenus.find(\n          (subMenu) => subMenu.display_name === \"Services Plan & Review\"\n        );\n      setAccessData(projectStatusReportSubMenu.access_level);\n    });\n  };\n  const handleCloseTable = () => {\n    setshowSFpipeline(false);\n  };\n\n  useEffect(() => {}, [componentSelector]);\n\n  useEffect(() => {}, [serviceData]);\n\n  useEffect(() => {\n    if (message || message1 || messageCust || messageSgng) {\n      window.scrollTo({\n        top: 0,\n        behavior: \"smooth\",\n      });\n    }\n  }, [message, message1, messageCust, messageSgng]);\n\n  return (\n    <div ref={messageRef}>\n      {message && (\n        <div className=\"statusMsg success\">\n          <BiCheck />\n          Target Saved successfully\n        </div>\n      )}\n      {message1 && (\n        <div className=\"statusMsg error\">\n          <BiError />\n          No modification to save\n        </div>\n      )}\n      {messageCust && (\n        <div className=\"statusMsg success\">\n          <BiCheck />\n          Mapping Saved successfully\n        </div>\n      )}\n\n      {messageSgng && (\n        <div className=\"statusMsg success\">\n          <BiCheck />\n          Signing Targets Saved successfully\n        </div>\n      )}\n\n      <ServiceSearchFilters\n        setreportRunId={setreportRunId}\n        setcoloumnArray={setcoloumnArray}\n        setserviceData={setserviceData}\n        serviceData={serviceData}\n        setcomponentSelector={setcomponentSelector}\n        setSummary={setSummary}\n        serviceDataCall={serviceDataCall}\n        setSfpipeline={setSfpipeline}\n        SfPipeline={SfPipeline}\n        setshowSFpipeline={setshowSFpipeline}\n        setViewBy={setViewBy}\n        setSearch={setSearch}\n        hirarchy={hirarchy}\n        setRefreshButton={setRefreshButton}\n        refreshButton={refreshButton}\n      />\n      {componentSelector === \"analytics\" &&\n        Summary === \"Executive\" &&\n        search && (\n          <ViewTable\n            Vdata={serviceData}\n            onclickchanger={\"executive\"}\n            expandableCols={[\"customer\", \"country\"]}\n            ViewBy={ViewBy}\n            setViewBy={setViewBy}\n            setshowSFpipeline={setshowSFpipeline}\n            showSFpipeline={showSFpipeline}\n            reportRunId={reportRunId}\n            serviceData={serviceData}\n            componentSelector={componentSelector}\n            setRefreshButton={setRefreshButton}\n            refreshButton={refreshButton}\n          />\n        )}\n      {componentSelector === \"analytics\" &&\n        Summary === \"Practice\" &&\n        search && (\n          <ViewTable\n            Vdata={serviceData}\n            onclickchanger={\"practice\"}\n            expandableCols={[\"customer\", \"country\"]}\n            ViewBy={ViewBy}\n            setViewBy={setViewBy}\n            setshowSFpipeline={setshowSFpipeline}\n            showSFpipeline={showSFpipeline}\n            reportRunId={reportRunId}\n            serviceData={serviceData}\n            componentSelector={componentSelector}\n            setRefreshButton={setRefreshButton}\n            refreshButton={refreshButton}\n          />\n        )}\n      {componentSelector === \"analytics\" && Summary === \"Country\" && search && (\n        <ViewTable\n          Vdata={serviceData}\n          onclickchanger={\"country\"}\n          expandableCols={[\"practice\"]}\n          ViewBy={ViewBy}\n          setViewBy={setViewBy}\n          setshowSFpipeline={setshowSFpipeline}\n          showSFpipeline={showSFpipeline}\n          reportRunId={reportRunId}\n          serviceData={serviceData}\n          componentSelector={componentSelector}\n          setRefreshButton={setRefreshButton}\n          refreshButton={refreshButton}\n        />\n      )}\n      {componentSelector === \"analytics\" &&\n        Summary === \"Customer\" &&\n        search && (\n          <ViewTable\n            Vdata={serviceData}\n            onclickchanger={\"customer\"}\n            expandableCols={[\"practice\", \"country\"]}\n            ViewBy={ViewBy}\n            setViewBy={setViewBy}\n            setshowSFpipeline={setshowSFpipeline}\n            showSFpipeline={showSFpipeline}\n            reportRunId={reportRunId}\n            serviceData={serviceData}\n            componentSelector={componentSelector}\n            setRefreshButton={setRefreshButton}\n            refreshButton={refreshButton}\n          />\n        )}\n      {componentSelector === \"analytics\" &&\n        Summary === \"Account Owner\" &&\n        search && (\n          <ViewTable\n            Vdata={serviceData}\n            onclickchanger={\"executive\"}\n            expandableCols={[\"CSL\", \"acc_type\", \"Coverage\"]}\n            ViewBy={ViewBy}\n            setViewBy={setViewBy}\n            setshowSFpipeline={setshowSFpipeline}\n            showSFpipeline={showSFpipeline}\n            reportRunId={reportRunId}\n            serviceData={serviceData}\n            componentSelector={componentSelector}\n            setRefreshButton={setRefreshButton}\n            refreshButton={refreshButton}\n          />\n        )}\n      {componentSelector === \"target\" && search && (\n        <ServiceTargetTable\n          serviceData={serviceData}\n          accessData={accessData}\n          coloumnArray={coloumnArray}\n          reportRunId={reportRunId}\n          setMessage={setMessage}\n          setMessage1={setMessage1}\n          setshowSFpipeline={setshowSFpipeline}\n          showSFpipeline={showSFpipeline}\n          hirarchy={hirarchy}\n          componentSelector={componentSelector}\n          setRefreshButton={setRefreshButton}\n          refreshButton={refreshButton}\n        />\n      )}\n      {componentSelector === \"sgtarget\" && search && (\n        <SigningTargets\n          serviceData={serviceData}\n          reportRunId={reportRunId}\n          accessData={accessData}\n          coloumnArray={coloumnArray}\n          serviceDataCall={serviceDataCall}\n          setMessageSgng={setMessageSgng}\n          setMessage1={setMessage1}\n          setshowSFpipeline={setshowSFpipeline}\n          showSFpipeline={showSFpipeline}\n          componentSelector={componentSelector}\n          hirarchy={hirarchy}\n          setRefreshButton={setRefreshButton}\n          refreshButton={refreshButton}\n        />\n      )}\n      {componentSelector === \"custTarget\" && search && (\n        <CustomerTargets\n          serviceData={serviceData}\n          reportRunId={reportRunId}\n          coloumnArray={coloumnArray}\n          accessData={accessData}\n          serviceDataCall={serviceDataCall}\n          setMessageCust={setMessageCust}\n          setMessage1={setMessage1}\n        />\n      )}\n      {componentSelector === \"custForecast\" && search && (\n        <CustomerMapping\n          serviceData={serviceData}\n          reportRunId={reportRunId}\n          accessData={accessData}\n          coloumnArray={coloumnArray}\n          serviceDataCall={serviceDataCall}\n        />\n      )}\n      {showSFpipeline && search && (\n        <SfPipeline\n          reportRunId={String(reportRunId)}\n          summval={Summary}\n          onCloseTable={handleCloseTable}\n          SfPipeline={SfPipeline}\n          setSfpipeline={SfPipeline}\n        />\n      )}\n    </div>\n  );\n}\n","import DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport React, { useEffect, useState, useRef } from \"react\";\nimport axios from \"axios\";\nimport { environment } from \"../../environments/environment\";\nimport {\n  FaCaretDown,\n  FaChevronCircleDown,\n  FaChevronCircleUp,\n  FaSearch,\n} from \"react-icons/fa\";\nimport { parseISO } from \"date-fns\";\n\nimport SelectSEDialogBox from \"../SelectSE/SelectSEDialogBox\";\nimport { MultiSelect } from \"react-multi-select-component\";\nimport { CCollapse } from \"@coreui/react\";\nimport GlobalValidation from \"../ValidationComponent/GlobalValidation\";\nimport moment from \"moment\";\nimport Loader from \"../Loader/Loader\";\nimport { BiCheck } from \"react-icons/bi\";\nimport SavedSearchGlobal from \"../PrimeReactTableComponent/SavedSearchGlobal\";\nimport { AiFillWarning } from \"react-icons/ai\";\nimport { useLocation } from \"react-router-dom\";\nimport ViewTable from \"./ViewTable\";\nimport Service from \"./Service\";\nimport SelectCustDialogBox from \"../Customer/SelectCustDialogBox\";\nimport SelectSESalesDialogBox from \"../ReveiwsComponent/SelectSESalesDialogBox\";\nimport GlobalHelp from \"../PrimeReactTableComponent/GlobalHelp\";\nimport ScreenBreadcrumbs from \"../Common/ScreenBreadcrumbs\";\nimport { array } from \"prop-types\";\nimport { useSelector } from \"react-redux\";\nexport default function ServiceSearchFilters(props) {\n  const {\n    setreportRunId,\n    setcoloumnArray,\n    setserviceData,\n    SfPipeline,\n    setSfPipeline,\n    setshowSFpipeline,\n    hirarchy,\n    setSummary,\n    setcomponentSelector,\n    serviceDataCall,\n    setViewBy,\n    ViewBy,\n    setSearch,\n    reportRunId,\n    refreshButton,\n    setRefreshButton,\n  } = props;\n  const loggedUserId = localStorage.getItem(\"resId\");\n  const [custVisible, setCustVisible] = useState(false);\n  const [collectedProspect, setCollectedProspect] = useState([]);\n  const abortController = useRef(null);\n  const handleAbort = () => {\n    abortController.current && abortController.current.abort();\n  };\n  const [selectedItems, setSelectedItems] = useState([{}]);\n  const Customer = selectedItems?.map((d) => d?.id).toString();\n  const [selectedProspects, setSelectedProspects] = useState(\"\");\n  const [selectedCustomers, setSelectedCustomers] = useState(\"0\");\n  const location = useLocation();\n  const searchParams = new URLSearchParams(location.search);\n  const id = searchParams.get(\"id\");\n  const value = \"select\";\n  const [popupIsLoading, setPopupIsLoading] = useState(false);\n  const [resCountry, setResCountry] = useState([]);\n  const baseUrl = environment.baseUrl;\n  const pageurl = \"http://10.11.12.149:3000/#/pmo/salesTargets\";\n  const page_Name = \"Sales\";\n  const defaultDate = () => {\n    const now = new Date();\n    const quarter = Math.floor(now.getMonth() / 3);\n    const firstDate = new Date(now.getFullYear(), quarter * 3, 1);\n    return firstDate.toLocaleDateString(\"en-CA\");\n  };\n  //======Saved Search=======\n  const SelectSEData = useSelector(\n    (state) => state.selectedSEState.directSETreeData\n  );\n\n  const [filterData, setFilterData] = useState([]);\n  const [onchange, setOnchange] = useState(false);\n  const [change, SetChange] = useState(false);\n\n  const FilterData = () => {\n    axios({\n      method: \"get\",\n      url:\n        baseUrl +\n        `/dashboardsms/savedsearch/FiltersData?saved_search_id=${\n          id === null ? 0 : id\n        }`,\n    }).then(function (res) {\n      const getData = res.data;\n      setFilterData(getData);\n    });\n  };\n\n  useEffect(() => {\n    FilterData();\n    setSelectedProspects(\n      JSON.parse(localStorage.getItem(\"selectedEngCust\"))\n        ?.map((d) => d.id)\n        ?.toString()\n    );\n    setSelectedCustomers(\n      JSON.parse(localStorage.getItem(\"selectedEngCustOne\"))\n        ?.map((d) => d.id)\n        ?.toString()\n    );\n  }, []);\n  const [servicesPayload, setservicesPayload] = useState({});\n  useEffect(() => {\n    setservicesPayload(() => {\n      if (id != null) {\n        return {\n          mode: filterData?.mode,\n          from: filterData?.from,\n          duration: filterData?.duration,\n          measures:\n            filterData?.measures == \"\" ? \"target,call\" : filterData?.measures,\n          viewByTime: filterData?.viewByTime,\n          Divisions: filterData?.Divisions,\n          monthsel: filterData?.monthsel,\n          executives: filterData?.executives,\n          isActive: filterData?.isActive,\n          isIndividual: filterData?.isIndividual,\n          customers: filterData?.customers == \"\" ? \"-1\" : filterData?.customers,\n          customerType: filterData?.customerType,\n          prospects: filterData?.prospects,\n          practices: filterData?.practices,\n          countries: filterData?.countries,\n          type: filterData?.type,\n          summary: filterData?.summary,\n          aelocation: filterData?.aelocation,\n          engComp: filterData?.engComp,\n          key: filterData?.key,\n          selectExecs: filterData?.selectExecs,\n          fyear: filterData?.fyear,\n          accType: filterData?.accType,\n          accOwner: filterData?.accOwner,\n          newCust: filterData?.newCust,\n          showBy: filterData?.showBy,\n          vendors: filterData?.vendors,\n          optType: filterData?.optType,\n          quarter: filterData?.quarter,\n          status: filterData?.status,\n          duration2: filterData?.duration2,\n          divisions: filterData?.divisions,\n        };\n      } else {\n        return {\n          mode: \"view\",\n          from: moment(defaultDate()).format(\"yyyy-MM-DD\"),\n          duration: \"4\",\n          measures: \"target,call\",\n          viewByTime: \"quarter\",\n          Divisions: \"-1\",\n          monthsel: moment(new Date()).startOf(\"month\").format(\"YYYY-MM-DD\"),\n          executives: \"-2\",\n          isActive: \"true\",\n          isIndividual: \"false\",\n          customers: \"-1\",\n          customerType: \"-1\",\n          prospects: \"-1\",\n          practices: \"1,3,4,6,999\",\n          countries: \"6,5,3,8,7,1,2,4\",\n          type: \"analytics\",\n          summary: \"Executive\",\n          aelocation: \"-1\",\n          engComp: \"-1\",\n          key: String(new Date().getTime()),\n          selectExecs: \"\",\n          accType: \"-1\",\n          accOwner: \"-1\",\n          newCust: \"-1\",\n          showBy: \"-1\",\n          vendors: \"-1\",\n          optType: \"-1\",\n          quarter: \"-1\",\n          status: \"-1\",\n          duration2: \"-1\",\n          divisions: \"-1\",\n        };\n      }\n    });\n  }, [filterData, id]);\n\n  //=======\n  const [editmsg, setEditAddmsg] = useState(false);\n\n  const localSE =\n    localStorage.getItem(\"selectedSELocal\") === null\n      ? []\n      : JSON.parse(localStorage.getItem(\"selectedSELocal\"));\n\n  const isIndividualChecked =\n    localStorage.getItem(\"isIndividualCheckedLocal\") === null\n      ? false\n      : JSON.parse(localStorage.getItem(\"isIndividualCheckedLocal\"));\n  const [visible, setVisible] = useState(false);\n  const [visiblepopup, setVisiblepopup] = useState(false);\n  const [cheveronIcon, setCheveronIcon] = useState(FaChevronCircleUp);\n  const ref = useRef([]);\n  const [date, SetDate] = useState(new Date());\n  const loggedUser = \"0\";\n  const [dp, setDp] = useState([]);\n\n  const [selectedDp, setSelectedDp] = useState([]);\n\n  const [errorMsg, setErrorMsg] = useState(false);\n  const [actionSelector, setActionSelector] = useState(\"analytics\");\n  const [action, setAction] = useState(false);\n  const [newMemberDropdown, setnewMemberDropdown] = useState([]);\n  const [selectedSE, setselectedSE] = useState(\"<< All SE >>\");\n\n  const [selectedSEVal, setSelectedSEVal] = useState(-2);\n  const [accessData, setAccessData] = useState([]);\n  const [salesExecutiveDropdown, setsalesExecutiveDropdown] = useState([]);\n  const [sFOwnerDivisionsDropdown, setSFOwnerDivisionsDropdown] = useState([]);\n  const [selectesFOwnerDivison, setselectesFOwnerDivison] = useState(\n    sFOwnerDivisionsDropdown\n  );\n  const [engComp, setengComp] = useState([]);\n\n  const [selectedengComp, setselectedengComp] = useState([]);\n\n  const [country, setcountry] = useState([]);\n  const [selectedcountry, setselectedcountry] = useState([]);\n  const [cData, setCData] = useState([]);\n  const [selectCDData, setSelectCDData] = useState([]);\n  const [selectCusData, setselectCusData] = useState([]);\n  const [resSelectedCountry, setResSelectedCountry] = useState([]);\n  const [practice, setpractice] = useState([]);\n  const [loader, setLoader] = useState(false);\n  const [account, setAccount] = useState([]);\n  const [selectedpractice, setselectedpractice] = useState([]);\n  const [searching, setsearching] = useState(false);\n  const [startDate, setStartDate] = useState(() => {\n    const date = new Date();\n    date.setFullYear(date.getFullYear() + 1);\n    date.setMonth(date.getMonth() - 3);\n    return date;\n  });\n\n  const measures = [\n    { value: \"target\", label: \"Targets\" },\n    { value: \"sgtrgt\", label: \"Signings target\" },\n    { value: \"custForecast\", label: \"Customer Mapping\" },\n    { value: \"call\", label: \"Calls\" },\n    { value: \"estRev\", label: \"Est. Revenue\" },\n    { value: \"sf\", label: \"Sf Revenue\" },\n    { value: \"pl\", label: \"Planned Revenue\" },\n    { value: \"rr\", label: \"Recognized Revenue\" },\n    { value: \"at\", label: \"Attainment %\" },\n    { value: \"sgns\", label: \"signings\" },\n  ];\n\n  const [selectedmeasures, setselectedmeasures] = useState([\n    { value: \"target\", label: \"Targets\" },\n    { value: \"call\", label: \"Calls\" },\n  ]);\n\n  //// -------breadcrumbs-----\n\n  const [routes, setRoutes] = useState([]);\n  let textContent = \"Sales\";\n  let currentScreenName = [\"Services Plan and Review\"];\n\n  useEffect(() => {\n    getMenus();\n  }, []);\n\n  const getMenus = () => {\n    // setMenusData\n\n    axios({\n      method: \"GET\",\n      url: baseUrl + `/CommonMS/master/getMenus?loggedUserId=${loggedUserId}`,\n    }).then((resp) => {\n      let data = resp.data.map((menu) => {\n        if (menu.subMenus) {\n          menu.subMenus = menu.subMenus.filter(\n            (subMenu) =>\n              subMenu.display_name !== \"Project Timesheet (Deprecated)\" &&\n              subMenu.display_name !== \"Invoice Details\" &&\n              subMenu.display_name !== \"Accounting\" &&\n              subMenu.display_name !== \"Upload\" &&\n              subMenu.display_name !== \"Practice Calls [Deprecated]\"\n          );\n        }\n\n        return menu;\n      });\n      // setAccessData(data);\n      data.forEach((item) => {\n        if (item.display_name === textContent) {\n          setRoutes([item]);\n        }\n      });\n      const projectStatusReportSubMenu = data\n        .find((item) => item.display_name === \"Sales\")\n        .subMenus.find(\n          (subMenu) => subMenu.display_name === \"Services Plan & Review\"\n        );\n      setAccessData(projectStatusReportSubMenu.access_level);\n    });\n  };\n\n  //////-------------Axios for Account owner-----------------------//////\n  const getDP = () => {\n    axios({\n      method: \"get\",\n      url: baseUrl + `/ProjectMS/Engagement/getAccountOwner`,\n      // url: baseUrl + `/CommonMS/master/getDPDropDownData?userId=${loggedUser}`,\n    }).then((res) => {\n      let custom = [];\n\n      let data = res.data;\n\n      data.length > 0 &&\n        data.forEach((e) => {\n          let dpObj = {\n            label: e.Name,\n            value: e.account_owner_id,\n          };\n          custom.push(dpObj);\n        });\n      custom.push({ label: \"UnAssigned\", value: 999 });\n      setDp(custom);\n      setSelectedDp(custom);\n    });\n  };\n  //==================================================\n\n  useEffect(() => {\n    if (id != null) {\n      const updatedValues = sFOwnerDivisionsDropdown.filter((values) =>\n        servicesPayload.Divisions?.includes(parseInt(values.value))\n      );\n\n      const progressDataDivisions = filterData.Divisions;\n      const divisionsToFilter = progressDataDivisions\n        ? progressDataDivisions.split(\",\").map(Number)\n        : [];\n\n      const updateDivisionsdata = sFOwnerDivisionsDropdown.filter((values) =>\n        divisionsToFilter.includes(values.value)\n      );\n\n      const updateCountry = country.filter((values) =>\n        filterData?.countries?.includes(parseInt(values.value))\n      );\n      const updateeng = engComp.filter((values) =>\n        servicesPayload.engComp?.includes(parseInt(values.value))\n      );\n\n      const updatemeasures = measures.filter((values) =>\n        filterData.measures?.includes(values.value)\n      );\n\n      const updatePractice = practice?.filter((values) =>\n        filterData?.practices?.includes(values.value)\n      );\n\n      const updateaelocation = country.filter((values) =>\n        servicesPayload?.aelocation?.includes(values.value)\n      );\n\n      if (filterData.from !== undefined && filterData.from !== \"\") {\n        const updatequarter = new Date(filterData.from);\n        updatequarter.setMonth(updatequarter.getMonth() - 3);\n        updatequarter.setFullYear(updatequarter.getFullYear() + 1);\n        setStartDate(updatequarter);\n      }\n\n      const updateSE = servicesPayload?.executives;\n      const updateAction = filterData?.type;\n      const updateAccounttype = servicesPayload.accType;\n      if (filterData.from !== undefined && filterData.from !== \"\") {\n        const updatedate = filterData.from;\n        console.log(updatedate);\n        SetDate(parseISO(updatedate));\n      }\n\n      setActionSelector(updateAction);\n      setAccount(updateAccounttype);\n      if (servicesPayload.executives?.length > 3) {\n        setSelectedSEVal(\"1\");\n      } else {\n        setSelectedSEVal(updateSE);\n      }\n\n      const updateAccountOwner = dp?.filter((values) =>\n        filterData?.accOwner?.includes(values.value)\n      );\n\n      setSelectedDp(updateAccountOwner);\n      setselectedpractice(updatePractice);\n      if (filterData.Divisions == \"-1\") {\n        setselectesFOwnerDivison(sFOwnerDivisionsDropdown);\n      } else {\n        setselectesFOwnerDivison(updateDivisionsdata);\n      }\n      if (\n        servicesPayload?.type === \"analytics\" &&\n        servicesPayload?.aelocation != \"-1\"\n      ) {\n        setselectedcountry(updateaelocation);\n        setResSelectedCountry(resCountry);\n      } else {\n        setResSelectedCountry(resCountry);\n        setselectedcountry(country);\n      }\n      if (\n        servicesPayload.type == \"custTarget\" &&\n        filterData?.countries != \"6,5,3,8,7,1,2\"\n      ) {\n        setselectedcountry(updateCountry);\n      }\n\n      if (servicesPayload.type == \"target\") {\n        setResSelectedCountry(updateCountry);\n      }\n\n      setcomponentSelector(actionSelector);\n      setselectedmeasures(updatemeasures);\n\n      if (servicesPayload?.engComp == -1) {\n        setselectedengComp(engComp);\n      } else {\n        setselectedengComp(updateeng);\n      }\n\n      if (filterData.executives === \"-1\") {\n        const dataExActive = \"<< Active SE >>\";\n        setselectedSE(dataExActive);\n      } else if (filterData.executives === \"-3\") {\n        const dataExInactive = \"<< InActive SE >>\";\n        setselectedSE(dataExInactive);\n      } else if (filterData.executives === \"1\") {\n        const dataSelectSe = \"<< Select SE >>\";\n        setselectedSE(dataSelectSe);\n      } else if (filterData.executives === \"-2\") {\n        const dataAllSe = \"<< All SE >>\";\n        setselectedSE(dataAllSe);\n      } else if (filterData?.executives?.length > 3) {\n        const dataAllSe = \"<< Select SE >>\";\n        setselectedSE(dataAllSe);\n      }\n    }\n  }, [\n    id,\n    servicesPayload.Divisions,\n    (servicesPayload.aelocation == servicesPayload.aelocation) ==\n    \"1,2,3,5,6,7,8,4\"\n      ? \"-1\"\n      : servicesPayload.aelocation,\n    servicesPayload.engComp,\n    sFOwnerDivisionsDropdown,\n    country,\n    engComp,\n    filterData.countries,\n    practice,\n    filterData?.type,\n    servicesPayload.type,\n    filterData?.from,\n    servicesPayload.practices,\n    servicesPayload.accOwner,\n    filterData.accOwner,\n    dp,\n    // selectedDp,\n  ]);\n\n  useEffect(() => {\n    if (id != null) {\n      setTimeout(() => {\n        serviceSearchValidatorSavedSearch();\n      }, 4000);\n    }\n  }, [servicesPayload]);\n\n  //================================================\n\n  const ArrowRenderer = ({ expanded }) => (\n    <>\n      {expanded ? (\n        <FaCaretDown className=\"chevronIcon\" />\n      ) : (\n        <FaCaretDown className=\"chevronIcon\" />\n      )}\n    </>\n  );\n\n  //------------------------methods----------------------------------\n  const [viewByVal, setViewByVal] = useState();\n  const onFilterChange = ({ id, value }) => {\n    if (id == \"summary\") {\n      setservicesPayload((prevState) => {\n        return {\n          ...prevState,\n          [id]: \"aelocation\",\n          aelocation: -1,\n        };\n      });\n    }\n    if (id == \"viewByTime\") {\n      setViewByVal(value);\n      setservicesPayload((prevState) => {\n        return {\n          ...prevState,\n          [id]: value,\n          duration: value === \"quarter\" ? \"4\" : \"6\",\n        };\n      });\n    }\n    setservicesPayload((prevState) => {\n      return { ...prevState, [id]: value };\n    });\n\n    if (id === \"executives\" && value === \"1\") {\n      setVisiblepopup(true);\n    }\n\n    if (id === \"from\") {\n      setservicesPayload((prevState) => {\n        return { ...prevState, fyear: moment(value).format(\"yyyy-MM-DD\") };\n      });\n    }\n\n    if (id === \"type\") {\n      setservicesPayload((prevState) => {\n        return {\n          ...prevState,\n          viewByTime: \"quarter\",\n          countries: \"6,5,3,8,7,1,2\",\n          customers: \"-1\",\n          customerType: \"-1\",\n          practices: \"1,3,4,6\",\n          aelocation: \"-1\",\n          engComp: \"-1\",\n          executives: \"-2\",\n          duration: \"4\",\n          aelocation: \"-1\",\n        };\n      });\n      switch (value) {\n        case \"target\":\n          setservicesPayload((prevState) => {\n            return {\n              ...prevState,\n              mode: \"edit\",\n              summary: \"none\",\n              measures: \"\",\n              prospects: \"\",\n              from: moment(defaultDate()).format(\"yyyy-MM-DD\"),\n              aelocation: \"-1\",\n            };\n          });\n\n          break;\n        case \"sgtarget\":\n          setservicesPayload((prevState) => {\n            return {\n              ...prevState,\n              mode: \"sgtargets\",\n              summary: \"Executive\",\n              measures: -1,\n              countries: -1,\n              practices: -1,\n              monthsel: moment(new Date())\n                .startOf(\"month\")\n                .format(\"YYYY-MM-DD\"),\n              from: \"2023-04-01\",\n              fyear: \"2023-04-01\",\n              aelocation: \"-1\",\n              // from: moment(defaultDate()).format(\"yyyy-MM-DD\"),\n              // fyear: moment(defaultDate()).format(\"yyyy-MM-DD\"),\n              prospects: -1,\n            };\n          });\n\n          break;\n        case \"custForecast\":\n          setservicesPayload((prevState) => {\n            return {\n              ...prevState,\n              mode: \"edit\",\n              summary: \"none\",\n              measures: \"custForecast,target\",\n              prospects: \"0\",\n            };\n          });\n          break;\n        case \"custTarget\":\n          setservicesPayload((prevState) => {\n            return {\n              ...prevState,\n              mode: \"edit\",\n              summary: \"none\",\n              measures: \"ccustForecast\",\n              // customerType: \"1\",\n              from: moment(defaultDate()).format(\"yyyy-MM-DD\"),\n              prospects: selectedProspects,\n              // customers:-1,\n              customers: selectedCustomers == \"\" ? \"\" : selectedCustomers,\n              selectExecs: localSE\n                .map((item) => item.salesPersonName)\n                .join(\", \"),\n            };\n          });\n          break;\n        case \"analytics\":\n          setservicesPayload((prevState) => {\n            return {\n              ...prevState,\n              mode: \"view\",\n              summary: \"Executive\",\n              measures: \"target,call\",\n              prospects: \"-1\",\n            };\n          });\n\n          break;\n\n        default:\n          break;\n      }\n    }\n  };\n\n  useEffect(() => {\n    if (refreshButton == \"success\") {\n      getserviceData();\n      setRefreshButton(\"\");\n    }\n  }, [refreshButton]);\n\n  const generateDropdownLabel = (selectedOptions, allOptions) => {\n    const selectedValues = selectedOptions.map((option) => option.value);\n    const allValues = allOptions.map((item) => item.value);\n\n    if (selectedValues.length === allValues.length) {\n      return \"<< ALL >>\";\n    } else {\n      return selectedOptions.map((option) => option.label).join(\", \");\n    }\n  };\n\n  const serviceSearchValidator = () => {\n    setViewBy(viewByVal);\n    setLoader(true);\n    let payload = servicesPayload;\n\n    let filteredData = ref.current.filter((d) => d != null);\n\n    ref.current = filteredData;\n\n    let valid = GlobalValidation(ref);\n\n    if (valid == true) {\n      setsearching(false);\n      setErrorMsg(true);\n    }\n\n    if (valid) {\n      // setValidator(true);\n      // setErrorMsg(true)\n      return;\n    }\n    // !valid && setVisible(!visible);\n\n    payload.executives === \"0\" ||\n    (payload.executives === \"1\" &&\n      (localStorage.getItem(\"selectedSELocal\") === null ||\n        localStorage.getItem(\"selectedSELocal\") === undefined ||\n        localStorage.getItem(\"selectedSELocal\") === \"[]\")) ||\n    (payload.customers === \"1\" &&\n      (localStorage.getItem(\"selectedCust\") === null ||\n        localStorage.getItem(\"selectedCust\") === undefined ||\n        localStorage.getItem(\"selectedCust\") === \"[]\"))\n      ? setErrorMsg(true)\n      : getserviceData(payload);\n\n    setTimeout(() => {\n      setLoader(false);\n    }, 2000);\n  };\n\n  const serviceSearchValidatorSavedSearch = () => {\n    setViewBy(viewByVal);\n    setLoader(true);\n    let payload = servicesPayload;\n\n    let filteredData = ref.current.filter((d) => d != null);\n\n    ref.current = filteredData;\n\n    let valid = GlobalValidation(ref);\n\n    if (valid == true) {\n      setsearching(false);\n      setErrorMsg(true);\n    }\n\n    if (valid) {\n      // setValidator(true);\n      // setErrorMsg(true)\n      return;\n    }\n    // !valid && setVisible(!visible);\n\n    payload.executives === \"0\" ||\n    (payload.executives === \"1\" &&\n      (localStorage.getItem(\"selectedSELocal\") === null ||\n        localStorage.getItem(\"selectedSELocal\") === undefined ||\n        localStorage.getItem(\"selectedSELocal\") === \"[]\")) ||\n    (payload.customers === \"1\" &&\n      (localStorage.getItem(\"selectedCust\") === null ||\n        localStorage.getItem(\"selectedCust\") === undefined ||\n        localStorage.getItem(\"selectedCust\") === \"[]\"))\n      ? setErrorMsg(true)\n      : getserviceDataSavedSearch(payload);\n\n    setTimeout(() => {\n      setLoader(false);\n    }, 2000);\n  };\n\n  // -----------------------calls----------------------------------\n\n  const getnewMemberDropdown = () => {\n    axios\n      .get(baseUrl + \"/SalesMS/MasterController/getResources?isActive=0\")\n      .then((resp) => {\n        const data = resp.data;\n        data.sort((a, b) => a.resourceName > b.resourceName);\n        const dropdownOptions = data.map((item) => {\n          return (\n            <option key={item.userId} value={item.resourcesId}>\n              {item.resourceName}\n            </option>\n          );\n        });\n        setnewMemberDropdown(dropdownOptions);\n      })\n      .catch((err) => {});\n  };\n\n  const getsalesExecutiveDropdown = () => {\n    axios\n      .get(baseUrl + \"/SalesMS/MasterController/salesExecutiveData\")\n      .then((resp) => {\n        const data = resp.data;\n        const dropdownOptions = data\n          .filter((item) => item.isActive === 1)\n          .map((item) => {\n            return (\n              <option key={item.id} value={item.val}>\n                {item.lkupName}\n              </option>\n            );\n          });\n        setsalesExecutiveDropdown(dropdownOptions);\n      })\n      .catch((err) => {});\n  };\n\n  const getSFOwnerDivisionsDropdown = () => {\n    axios\n      .get(baseUrl + `/SalesMS/MasterController/SFOwnerDivisions`)\n      .then((resp) => {\n        const data = resp.data;\n        const dropdownOptions = data.map((item) => {\n          return {\n            value: item.id,\n            label: item.owner_Division,\n          };\n        });\n        setSFOwnerDivisionsDropdown(dropdownOptions);\n        if (id == null) {\n          setselectesFOwnerDivison(dropdownOptions);\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n  const getengCompanyDropdown = () => {\n    axios\n      .get(baseUrl + `/CommonMS/master/getCompany`)\n      .then((resp) => {\n        const data = resp.data;\n        const dropdownOptions = data.map((item) => {\n          return {\n            value: item.id,\n            label: item.company_name,\n          };\n        });\n        setengComp(dropdownOptions);\n        if (id == null) {\n          setselectedengComp(dropdownOptions);\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n  const getcountryDropdown = () => {\n    axios\n      .get(baseUrl + `/CommonMS/master/getCountries`)\n      .then((resp) => {\n        const data = resp.data;\n        data.push({ id: 4, country_name: \"Others\" });\n        const filteredData = data\n          .filter((item) => item.country_name !== \"NM\")\n          .sort((a, b) => {\n            if (a.country_name === \"Others\") return 1;\n            if (b.country_name === \"Others\") return -1;\n            return a.country_name.localeCompare(b.country_name);\n          });\n\n        const dropdownOptions = filteredData.map((item) => {\n          return {\n            value: item.id,\n            label: item.country_name,\n          };\n        });\n\n        setResCountry(dropdownOptions.filter((item) => item.label != \"Others\"));\n        setcountry(dropdownOptions);\n        if (id == null) {\n          setselectedcountry(dropdownOptions);\n          setCData(dropdownOptions);\n          setSelectCDData(dropdownOptions);\n          setselectCusData(dropdownOptions);\n          setResSelectedCountry(\n            dropdownOptions.filter((item) => item.label != \"Others\")\n          );\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n  const getPracticeDropdown = () => {\n    axios\n      .get(baseUrl + `/CommonMS/master/getDepartments`)\n      .then((resp) => {\n        const data = resp.data;\n        const dropdownOptions = data.map((item) => {\n          return {\n            value: item.id,\n            label: item.group_name,\n          };\n        });\n        setpractice(dropdownOptions);\n        if (id == null) {\n          setselectedpractice(dropdownOptions);\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  const getserviceData = () => {\n    setSearch(false);\n    setserviceData([]);\n    let payload = null;\n    payload = servicesPayload;\n    const loaderTime = setTimeout(() => {\n      if (id == null) {\n        setsearching(true);\n      }\n    }, 2000);\n    setErrorMsg(false);\n    if (id == null) {\n      payload[\"aelocation\"] =\n        payload.summary === \"Account Owner\"\n          ? -1\n          : // : payload.summary == \"Customer\" && change == false && onchange == true\n          // ? -1\n          payload.aelocation === \"6,5,3,8,7,1,2,4\"\n          ? -1\n          : payload.aelocation;\n\n      payload.executives =\n        payload.executives == \"1\" ? SelectSEData : payload.executives;\n    }\n\n    payload.prospects =\n      JSON.parse(localStorage.getItem(\"selectedEngCust\"))\n        ?.map((d) => d.id)\n        .toString() == \"\"\n        ? \"-1\"\n        : JSON.parse(localStorage.getItem(\"selectedEngCust\"))\n            ?.map((d) => d.id)\n            .toString();\n    payload.customers =\n      JSON.parse(localStorage.getItem(\"selectedEngCustOne\"))\n        ?.map((d) => d.id)\n        .toString() == \"\"\n        ? \"0\"\n        : JSON.parse(localStorage.getItem(\"selectedEngCustOne\"))\n            ?.map((d) => d.id)\n            .toString();\n\n    axios\n      .post(baseUrl + `/SalesMS/services/getSalesTargets`, payload)\n      .then((resp) => {\n        const data = resp.data.data;\n        setSearch(true);\n        const reportRunId = resp.data.reportRunId;\n        let array = [];\n        setsearching(false);\n\n        switch (actionSelector) {\n          case \"target\":\n            array = resp.data.SalesTargets?.split(\",\");\n            // array = Object.keys(data[0])\n            break;\n\n          case \"sgtarget\":\n            array = resp.data.SalesSigningTargets?.split(\",\");\n            break;\n\n          case \"custForecast\":\n            array = resp.data.CustomerForecasts?.split(\",\");\n            break;\n\n          case \"custTarget\":\n            array = resp.data.CustomerTargets?.split(\",\");\n            break;\n\n          case \"analytics\":\n            array = resp.data.analytics?.split(\",\");\n            break;\n\n          default:\n            break;\n        }\n        setcoloumnArray(array);\n        const newArray = data.map((item) => {\n          let k = JSON.parse(JSON.stringify(item, array, 4));\n          return k;\n        });\n        setSummary(payload.summary);\n        setcomponentSelector(actionSelector);\n        setserviceData(newArray);\n        setsearching(false);\n        clearTimeout(loaderTime);\n        setreportRunId(reportRunId);\n        setVisible(!visible);\n        !valid && visible\n          ? setCheveronIcon(FaChevronCircleUp)\n          : setCheveronIcon(FaChevronCircleDown);\n        setsearching(false);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n  //=========================Saved Search=====================\n  const getserviceDataSavedSearch = () => {\n    setSearch(false);\n    setserviceData([]);\n    let payload = null;\n    payload = servicesPayload;\n    const loaderTime = setTimeout(() => {\n      if (id == null) {\n        setsearching(true);\n      }\n    }, 2000);\n    setErrorMsg(false);\n    if (id == null) {\n      payload[\"aelocation\"] =\n        payload.summary === \"Account Owner\"\n          ? -1\n          : // : payload.summary == \"Customer\" && change == false && onchange == true\n          // ? -1\n          payload.aelocation === \"6,5,3,8,7,1,2,4\"\n          ? -1\n          : payload.aelocation;\n\n      payload.executives =\n        payload.executives == \"1\" ? SelectSEData : payload?.executives;\n    }\n\n    payload.prospects =\n      filterData.prospects == \"\" ? \"-1\" : filterData.prospects;\n    payload.customers = filterData.customers == \"\" ? \"0\" : filterData.customers;\n\n    axios\n      .post(baseUrl + `/SalesMS/services/getSalesTargets`, payload)\n      .then((resp) => {\n        const data = resp.data.data;\n        setSearch(true);\n        const reportRunId = resp.data.reportRunId;\n        let array = [];\n        setsearching(false);\n\n        switch (actionSelector) {\n          case \"target\":\n            array = resp.data.SalesTargets?.split(\",\");\n            // array = Object.keys(data[0])\n            break;\n\n          case \"sgtarget\":\n            array = resp.data.SalesSigningTargets?.split(\",\");\n            break;\n\n          case \"custForecast\":\n            array = resp.data.CustomerForecasts?.split(\",\");\n            break;\n\n          case \"custTarget\":\n            array = resp.data.CustomerTargets?.split(\",\");\n            break;\n\n          case \"analytics\":\n            array = resp.data.analytics?.split(\",\");\n            break;\n\n          default:\n            break;\n        }\n        setcoloumnArray(array);\n        const newArray = data.map((item) => {\n          let k = JSON.parse(JSON.stringify(item, array, 4));\n          return k;\n        });\n        setSummary(payload.summary);\n        setcomponentSelector(actionSelector);\n        setserviceData(newArray);\n        setsearching(false);\n        clearTimeout(loaderTime);\n        setreportRunId(reportRunId);\n        setVisible(!visible);\n        !valid && visible\n          ? setCheveronIcon(FaChevronCircleUp)\n          : setCheveronIcon(FaChevronCircleDown);\n        setsearching(false);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  // -----------------------------useEffect---------------------------------\n\n  useEffect(() => {\n    getsalesExecutiveDropdown();\n    getSFOwnerDivisionsDropdown();\n    getengCompanyDropdown();\n    getcountryDropdown();\n    getPracticeDropdown();\n    getnewMemberDropdown();\n    getDP();\n  }, []);\n\n  useEffect(() => {\n    serviceDataCall.current = getserviceData;\n  }, [servicesPayload]);\n\n  const handleChange1 = (e) => {\n    const { id, name, value } = e.target;\n    if (name == \"Select Customer\" && value === \"1\") {\n      setCustVisible(true);\n      setPopupIsLoading(true);\n      setservicesPayload((prevState) => {\n        return {\n          ...prevState,\n          customerType: \"1\",\n          prospects: JSON.parse(localStorage.getItem(\"selectedEngCust\"))\n            ?.map((d) => d.id)\n            .toString(),\n          customers: JSON.parse(localStorage.getItem(\"selectedEngCustOne\"))\n            ?.map((d) => d.id)\n            .toString(),\n        };\n      });\n      //GlobalCancel(ref);\n    } else {\n      setservicesPayload((prevState) => {\n        return {\n          ...prevState,\n          customerType: \"-1\",\n          customers: \"\",\n          prospects: \"\",\n        };\n      });\n    }\n  };\n\n  const HelpPDFName = \"Services Plan and Review.pdf\";\n  const Headername = \"Services Plan and Review Help\";\n\n  return (\n    <div>\n      <div className=\"col-md-12\">\n        <div className=\"pageTitle\">\n          <div className=\"childOne\"></div>\n          <div className=\"childTwo\">\n            <h2>Services Plan and Review</h2>\n          </div>\n          <div className=\"childThree\"></div>\n        </div>\n      </div>\n      <ScreenBreadcrumbs\n        routes={routes}\n        currentScreenName={currentScreenName}\n      />\n\n      {errorMsg ? (\n        <div className=\"statusMsg error\">\n          {\" \"}\n          <AiFillWarning /> Please select valid values for highlighted fields\n        </div>\n      ) : (\n        \"\"\n      )}\n      {editmsg ? (\n        <div className=\"statusMsg success\">\n          <span className=\"errMsg\">\n            <BiCheck size=\"1.4em\" /> &nbsp; Search created successfully.\n          </span>\n        </div>\n      ) : (\n        \"\"\n      )}\n\n      <div className=\"group customCard\">\n        <div className=\"col-md-12 collapseHeader\">\n          <h2>Search Filters</h2>\n          <div className=\"helpBtn\">\n            <GlobalHelp pdfname={HelpPDFName} name={Headername} />\n          </div>\n          <div className=\"col-md-0 saveBtn\">\n            <SavedSearchGlobal\n              setEditAddmsg={setEditAddmsg}\n              pageurl={pageurl}\n              page_Name={page_Name}\n              payload={servicesPayload}\n            />\n          </div>{\" \"}\n          &nbsp;&nbsp;\n          <div\n            onClick={() => {\n              setVisible(!visible);\n              visible\n                ? setCheveronIcon(FaChevronCircleUp)\n                : setCheveronIcon(FaChevronCircleDown);\n            }}\n          >\n            <span>{cheveronIcon}</span>\n          </div>\n        </div>\n        <CCollapse visible={!visible}>\n          <div className=\"group-content row\">\n            <div className=\"col-md-4 mb-2\" id=\"execSelDiv\">\n              <div className=\"form-group row\">\n                <label className=\"col-5\">Action</label>\n                <span className=\"col-1 p-0\">:</span>\n                <span className=\"col-6\">\n                  <select\n                    id=\"type\"\n                    className=\"col-md-12 col-sm-12 col-xs-12 \"\n                    value={actionSelector}\n                    onChange={(e) => {\n                      setselectedSE(\"<< All SE >>\");\n                      onFilterChange(e.target);\n                      setActionSelector(e.target.value);\n                      setSelectedSEVal(-2);\n                    }}\n                  >\n                    <option value={\"custTarget\"}>{\"Customer Targets\"}</option>\n                    <option value={\"sgtarget\"}>{\"Signings Targets\"}</option>\n                    <option value={\"target\"}>{\"Targets\"}</option>\n                    <option value={\"analytics\"}>{\"View\"}</option>\n                  </select>\n                </span>\n              </div>\n            </div>\n\n            {[\"analytics\"].includes(actionSelector) && (\n              <div className=\"col-md-4 mb-2\">\n                <div className=\"form-group row\">\n                  <label className=\"col-5\">View By</label>\n                  <span className=\"col-1 p-0\">:</span>\n                  <span className=\"col-6\">\n                    <select\n                      id=\"viewByTime\"\n                      name=\"duration\"\n                      className=\"col-md-12 col-sm-12 col-xs-12 \"\n                      value={servicesPayload.viewByTime}\n                      onChange={(e) => {\n                        onFilterChange(e.target);\n                      }}\n                    >\n                      <option value=\"month\">Month</option>\n                      <option value=\"quarter\">Quarter</option>\n                    </select>\n                  </span>\n                </div>\n              </div>\n            )}\n\n            {[\"sgtarget\"].includes(actionSelector) && (\n              <div className=\"col-md-4 mb-2\">\n                <div className=\"form-group row\" id=\"week-picker-wrapper\">\n                  <label className=\"col-5\">Financial Year</label>\n                  <span className=\"col-1 p-0\">:</span>\n                  <span className=\"col-6\">\n                    <DatePicker\n                      selected={startDate}\n                      onChange={(e) => {\n                        setStartDate(e);\n                        const date = new Date(e.getTime());\n                        date.setFullYear(date.getFullYear());\n                        date.setMonth(date.getMonth() + 3);\n                        const selectedYear = e.getFullYear();\n                        const nextYear = selectedYear + 1;\n                        const nextYearDate = new Date(e.getTime());\n                        nextYearDate.setFullYear(nextYear);\n\n                        setStartDate(nextYearDate); // Update the startDate state to display the next year\n                        onFilterChange({\n                          id: \"from\",\n                          value: moment(date).format(\"yyyy-MM-DD\"),\n                          //  date.toLocaleDateString('en-US')\n                        });\n                      }}\n                      dateFormat=\"'FY' yyyy\"\n                      showYearPicker\n                    />\n                  </span>\n                </div>\n              </div>\n            )}\n\n            {[\n              \"target\",\n              \"custForecast\",\n              \"custTarget\",\n              \"custTarget\",\n              \"analytics\",\n            ].includes(actionSelector) &&\n              servicesPayload.viewByTime == \"quarter\" && (\n                <div className=\"col-md-4 mb-2\">\n                  <div className=\"form-group row\" id=\"week-picker-wrapper\">\n                    <label className=\"col-5\">\n                      From Quarter\n                      <span className=\"required error-text ml-1\"> *</span>\n                    </label>\n                    <span className=\"col-1 p-0\">:</span>\n                    <span\n                      className=\"col-6 datepicker \"\n                      ref={(ele) => {\n                        ref.current[0] = ele;\n                      }}\n                    >\n                      <DatePicker\n                        className=\"disabledFieldLook\"\n                        selected={startDate}\n                        onChange={(e) => {\n                          setStartDate(e);\n                          const date = new Date(e.getTime());\n                          date.setFullYear(date.getFullYear() - 1);\n                          date.setMonth(date.getMonth() + 3);\n                          onFilterChange({\n                            id: \"from\",\n                            value: date.toLocaleDateString(\"en-CA\"),\n                          });\n                        }}\n                        dateFormat=\"'FY' yyyy-QQQ\"\n                        showQuarterYearPicker\n                      />\n                    </span>\n                  </div>\n                </div>\n              )}\n\n            {servicesPayload.viewByTime == \"month\" && (\n              <div className=\"col-md-4 mb-2\">\n                <div className=\"form-group row \">\n                  <label className=\"col-5\" htmlFor=\"email-input\">\n                    From Month\n                    <span className=\"required error-text ml-1\"> *</span>\n                  </label>\n                  <span className=\"col-1 p-0\">:</span>\n                  <div className=\"col-6 datepicker\" style={{ zIndex: 4 }}>\n                    <DatePicker\n                      onChange={(e) => {\n                        setStartDate(e);\n                        const date = new Date(e.getTime());\n                        date.setFullYear(date.getFullYear());\n                        date.setMonth(date.getMonth());\n                        onFilterChange({\n                          id: \"monthsel\",\n                          value: date.toLocaleDateString(\"en-CA\"),\n                        });\n\n                        SetDate(e);\n                      }}\n                      selected={date}\n                      dateFormat=\"MMM-yyyy\"\n                      showMonthYearPicker\n                      onKeyDown={(e) => {\n                        e.preventDefault();\n                      }}\n                    />\n                  </div>\n                </div>\n              </div>\n            )}\n\n            {[\"target\", \"custForecast\", \"custTarget\", \"analytics\"].includes(\n              actionSelector\n            ) &&\n              servicesPayload.viewByTime === \"quarter\" && (\n                <div className=\"col-md-4 mb-2\">\n                  <div className=\"form-group row\">\n                    <label className=\"col-5\">Duration</label>\n                    <span className=\"col-1 p-0\">:</span>\n\n                    <span className=\"col-6\">\n                      <select\n                        id=\"duration\"\n                        name=\"duration\"\n                        className=\"col-md-12 col-sm-12 col-xs-12 \"\n                        defaultValue={\"4\"}\n                        value={servicesPayload.duration}\n                        onChange={(e) => {\n                          onFilterChange(e.target);\n                        }}\n                      >\n                        <option value=\"1\">1</option>\n                        <option value=\"2\">2</option>\n                        <option value=\"3\">3</option>\n                        <option value=\"4\">4</option>\n                      </select>\n                    </span>\n                  </div>\n                </div>\n              )}\n            {servicesPayload.viewByTime === \"month\" && (\n              <div className=\"col-md-4 mb-2\">\n                <div className=\"form-group row\">\n                  <label className=\"col-5\">Duration</label>\n                  <span className=\"col-1 p-0\">:</span>\n                  <span className=\"col-6\">\n                    <select\n                      id=\"duration\"\n                      name=\"duration\"\n                      className=\"col-md-12 col-sm-12 col-xs-12 \"\n                      // defaultValue={\"6\"}\n                      onChange={(e) => {\n                        onFilterChange(e.target);\n                      }}\n                      value={servicesPayload.duration}\n                    >\n                      <option value=\"1\">1</option>\n                      <option value=\"2\">2</option>\n                      <option value=\"3\">3</option>\n                      <option value=\"4\">4</option>\n                      <option value=\"5\">5</option>\n                      <option value=\"6\">6</option>\n                      <option value=\"7\">7</option>\n                      <option value=\"8\">8</option>\n                      <option value=\"9\">9</option>\n                      <option value=\"10\">10</option>\n                      <option value=\"11\">11</option>\n                      <option value=\"12\">12</option>\n                    </select>\n                  </span>\n                </div>\n              </div>\n            )}\n\n            {[\"target\", \"sgtarget\", \"custTarget\", \"analytics\"].includes(\n              actionSelector\n            ) && (\n              <div className=\"col-md-4 mb-2\" id=\"execSelDiv\">\n                <div className=\"form-group row\">\n                  <label className=\"col-5\">\n                    Sales Executive\n                    <span className=\"required error-text ml-1\"> *</span>\n                  </label>\n                  <span className=\"col-1 p-0\">:</span>\n                  <span className=\"col-6 \">\n                    <div>\n                      {accessData === 1000 || accessData === 500 ? (\n                        <select\n                          id=\"executives\"\n                          className=\"col-md-12 col-sm-12 col-xs-12 text\"\n                          value={selectedSEVal}\n                          onChange={(e) => {\n                            onFilterChange(e.target);\n                            setselectedSE(\n                              e.target.options[e.target.selectedIndex].text\n                            );\n\n                            setSelectedSEVal(e.target.value);\n                          }}\n                          ref={(ele) => {\n                            ref.current[1] = ele;\n                          }}\n                          disabled={servicesPayload.summary == \"Account Owner\"}\n                        >\n                          <option value=\"null\">{\"<< Please select>> \"}</option>\n                          {salesExecutiveDropdown}\n                        </select>\n                      ) : (\n                        <select\n                          id=\"executives\"\n                          className=\"col-md-12 col-sm-12 col-xs-12 text\"\n                          value={selectedSEVal}\n                          onChange={(e) => {\n                            onFilterChange(e.target);\n                            setselectedSE(\n                              e.target.options[e.target.selectedIndex].text\n                            );\n\n                            setSelectedSEVal(e.target.value);\n                          }}\n                          ref={(ele) => {\n                            ref.current[1] = ele;\n                          }}\n                          disabled={servicesPayload.summary == \"Account Owner\"}\n                        >\n                          <option value=\"null\">{\"<< Please select>> \"}</option>\n                          <option value=\"1\">Select SE</option>\n                        </select>\n                      )}\n                    </div>\n                  </span>\n                </div>\n              </div>\n            )}\n\n            {[\"target\", \"custForecast\", \"custTarget\", \"analytics\"].includes(\n              actionSelector\n            ) && (\n              <div className=\"col-md-4 mb-2\">\n                <div className=\"form-group row \">\n                  <label className=\"col-5\">\n                    Practice<span className=\"required error-text ml-1\"> *</span>\n                  </label>\n                  <span className=\"col-1 p-0\">:</span>\n                  <span\n                    className=\"col-6 multiselect \"\n                    ref={(ele) => {\n                      ref.current[2] = ele;\n                    }}\n                  >\n                    <MultiSelect\n                      className=\"disableField\"\n                      ArrowRenderer={ArrowRenderer}\n                      options={practice.sort((a, b) =>\n                        a.label.localeCompare(b.label)\n                      )}\n                      hasSelectAll={true}\n                      isLoading={false}\n                      shouldToggleOnHover={false}\n                      disableSearch={false}\n                      value={selectedpractice}\n                      valueRenderer={generateDropdownLabel}\n                      disabled={servicesPayload.mode == \"view\"}\n                      onChange={(s) => {\n                        setselectedpractice(s);\n                        let selected = s.map((item) => {\n                          return item.value;\n                        });\n                        onFilterChange({\n                          id: \"practices\",\n                          value: selected.toString(),\n                        });\n                      }}\n                    />\n                  </span>\n                </div>\n              </div>\n            )}\n\n            {[\"target\", \"custForecast\", \"analytics\"].includes(\n              actionSelector\n            ) && (\n              <div className=\"col-md-4 mb-2\">\n                <div className=\"form-group row\">\n                  <label className=\"col-5\">\n                    Res Location\n                    <span className=\"required error-text ml-1\"> *</span>\n                  </label>\n                  <span className=\"col-1 p-0\">:</span>\n                  <span\n                    className=\"col-6 multiselect\"\n                    ref={(ele) => {\n                      ref.current[3] = ele;\n                    }}\n                  >\n                    <MultiSelect\n                      className=\"disableField\"\n                      ArrowRenderer={ArrowRenderer}\n                      options={resCountry}\n                      hasSelectAll={true}\n                      isLoading={false}\n                      shouldToggleOnHover={false}\n                      disableSearch={false}\n                      // value={selectedcountry}\n                      value={resSelectedCountry}\n                      valueRenderer={generateDropdownLabel}\n                      disabled={servicesPayload.mode == \"view\"}\n                      onChange={(s) => {\n                        setResSelectedCountry(s);\n                        let selected = s.map((item) => {\n                          return item.value;\n                        });\n                        onFilterChange({\n                          id: \"countries\",\n                          value: selected.toString(),\n                        });\n                      }}\n                    />\n                  </span>\n                </div>\n              </div>\n            )}\n\n            {[\"custForecast\", \"custTarget\"].includes(actionSelector) && (\n              <div className=\"col-md-4 mb-2\" id=\"execSelDiv\">\n                <div className=\"form-group row\">\n                  <label className=\"col-5\">Customer</label>\n                  <span className=\"col-1 p-0\">:</span>\n                  <span className=\"col-6\">\n                    <select\n                      ref={(ele) => {\n                        ref.current[0] = ele;\n                      }}\n                      className=\"text cancel\"\n                      name=\"Select Customer\"\n                      id=\"searchType\"\n                      onChange={handleChange1}\n                      value={servicesPayload?.customerType}\n                    >\n                      {selectedItems.length + \"selected\"}\n                      <option value=\"-1\"> &lt;&lt;ALL&gt;&gt;</option>\n\n                      <option value=\"1\">Select</option>\n                    </select>\n                  </span>\n                </div>\n              </div>\n            )}\n\n            {[\"target\", \"custForecast\", \"analytics\"].includes(\n              actionSelector\n            ) && (\n              <div className=\"col-md-4 mb-2\" id=\"execSelDiv\">\n                <div className=\"form-group row\">\n                  <label className=\"col-5\">Summary</label>\n                  <span className=\"col-1 p-0\">:</span>\n                  <span className=\"col-6 \">\n                    <select\n                      id=\"summary\"\n                      className=\"col-md-12 col-sm-12 col-xs-12 \"\n                      value={servicesPayload.summary}\n                      onChange={(e) => {\n                        setOnchange(true);\n                        onFilterChange(e.target);\n                        setSelectCDData(cData);\n                        setselectCusData(cData);\n                      }}\n                      // disabled={servicesPayload.summary === \"aelocation\"}\n                    >\n                      {(actionSelector === \"analytics\" ||\n                        actionSelector === \"custForecast\") && (\n                        <option value=\"Account Owner\">Account Owner</option>\n                      )}\n                      {(actionSelector === \"analytics\" ||\n                        actionSelector === \"custForecast\") && (\n                        <option value=\"Customer\">Customer</option>\n                      )}\n                      {actionSelector === \"analytics\" && (\n                        <option value=\"Executive\">Executive</option>\n                      )}\n                      {(actionSelector === \"target\" ||\n                        actionSelector === \"custForecast\") && (\n                        <option value=\"none\">&lt;&lt; None &gt;&gt;</option>\n                      )}\n                      {(actionSelector === \"target\" ||\n                        actionSelector === \"custForecast\") && (\n                        <option value=\"country\"> Country </option>\n                      )}\n\n                      {/* {actionSelector === \"analytics\" && <option value=\"Practice\">Practice</option>} */}\n                      {/* {<option value=\"Country\">Country</option>} */}\n                    </select>\n                  </span>\n                </div>\n              </div>\n            )}\n\n            {[\"analytics\"].includes(actionSelector) && (\n              <div className=\"col-md-4 mb-2\">\n                <div className=\"form-group row\">\n                  <label className=\"col-5\">\n                    Measures<span className=\"required error-text ml-1\"> *</span>\n                  </label>\n                  <span className=\"col-1 p-0\">:</span>\n                  <span\n                    className=\"col-6 multiselect\"\n                    ref={(ele) => {\n                      ref.current[4] = ele;\n                    }}\n                  >\n                    <MultiSelect\n                      ArrowRenderer={ArrowRenderer}\n                      options={measures.sort((a, b) =>\n                        a.label.localeCompare(b.label)\n                      )}\n                      hasSelectAll={true}\n                      isLoading={false}\n                      shouldToggleOnHover={false}\n                      disableSearch={false}\n                      value={selectedmeasures}\n                      valueRenderer={generateDropdownLabel}\n                      disabled={false}\n                      onChange={(s) => {\n                        setselectedmeasures(s);\n                        let selected = s.map((item) => {\n                          return item.value;\n                        });\n                        onFilterChange({\n                          id: \"measures\",\n                          value: selected.toString(),\n                        });\n                      }}\n                    />\n                  </span>\n                </div>\n              </div>\n            )}\n\n            {[\n              \"target\",\n              \"sgtarget\",\n              \"custForecast\",\n              \"custTarget\",\n              \"analytics\",\n            ].includes(actionSelector) && (\n              <div className=\"col-md-4 mb-2\">\n                <div className=\"form-group row\">\n                  <label className=\"col-5\">\n                    Owner Division\n                    <span className=\"required error-text ml-1\"> *</span>\n                  </label>\n                  <span className=\"col-1 p-0\">:</span>\n                  <span\n                    className=\"col-6 multiselect\"\n                    ref={(ele) => {\n                      ref.current[5] = ele;\n                    }}\n                  >\n                    <MultiSelect\n                      ArrowRenderer={ArrowRenderer}\n                      options={sFOwnerDivisionsDropdown}\n                      hasSelectAll={true}\n                      isLoading={false}\n                      shouldToggleOnHover={false}\n                      disableSearch={false}\n                      value={selectesFOwnerDivison}\n                      valueRenderer={generateDropdownLabel}\n                      disabled={false}\n                      onChange={(s) => {\n                        setselectesFOwnerDivison(s);\n                        // setSelectAllOwnerDivisions(false);\n                        let selected = s.map((item) => {\n                          return item.value;\n                        });\n                        onFilterChange({\n                          id: \"Divisions\",\n                          value:\n                            selected.toString() ==\n                            sFOwnerDivisionsDropdown\n                              .map((item) => item.value)\n                              .join(\",\")\n                              ? \"-1\"\n                              : selected.toString(),\n                        });\n                      }}\n                    />\n                  </span>\n                </div>\n              </div>\n            )}\n\n            {[\"custTarget\"].includes(actionSelector) && (\n              <div className=\"col-md-4 mb-2\">\n                <div className=\"form-group row\">\n                  <label className=\"col-5\">Country</label>\n                  <span className=\"col-1 p-0\">:</span>\n                  <span className=\"col-6\">\n                    <MultiSelect\n                      ArrowRenderer={ArrowRenderer}\n                      options={country}\n                      hasSelectAll={true}\n                      isLoading={false}\n                      shouldToggleOnHover={false}\n                      disableSearch={false}\n                      value={selectedcountry}\n                      valueRenderer={generateDropdownLabel}\n                      disabled={false}\n                      onChange={(s) => {\n                        setselectedcountry(s);\n                        let selected = s.map((item) => {\n                          return item.value;\n                        });\n                        onFilterChange({\n                          id: \"countries\",\n                          value: selected.toString(),\n                        });\n                      }}\n                    />\n                  </span>\n                </div>\n              </div>\n            )}\n\n            {[\"custForecast\"].includes(actionSelector) && (\n              <div className=\"col-md-4 mb-2\" id=\"execSelDiv\">\n                <div className=\"form-group row\">\n                  <label className=\"col-5\">Sales Executive</label>\n                  <span className=\"col-1 p-0\">:</span>\n                  <span className=\"col-6 \">\n                    <select\n                      id=\"executives\"\n                      className=\"col-md-12 col-sm-12 col-xs-12\"\n                      onChange={(e) => {\n                        onFilterChange(e.target);\n                        setselectedSE(\n                          e.target.options[e.target.selectedIndex].text\n                        );\n                      }}\n                    >\n                      <option value={0}>{\"<< Please select>> \"}</option>\n                      {newMemberDropdown}\n                    </select>\n                  </span>\n                </div>\n              </div>\n            )}\n\n            {[\"analytics\"].includes(actionSelector) && (\n              <div className=\"col-md-4 mb-2\">\n                <div className=\"form-group row\">\n                  <label className=\"col-5\">\n                    AE Location\n                    <span className=\"required error-text ml-1\"> *</span>\n                  </label>\n                  <span className=\"col-1 p-0\">:</span>\n                  <span\n                    className=\"col-6 multiselect\"\n                    ref={(ele) => {\n                      ref.current[6] = ele;\n                    }}\n                  >\n                    <MultiSelect\n                      className=\"disableField\"\n                      ArrowRenderer={ArrowRenderer}\n                      options={country}\n                      hasSelectAll={true}\n                      isLoading={false}\n                      shouldToggleOnHover={false}\n                      disableSearch={false}\n                      value={\n                        id === null\n                          ? servicesPayload.summary === \"Account Owner\"\n                            ? cData\n                            : servicesPayload.summary === \"Executive\" &&\n                              onchange\n                            ? selectCDData\n                            : servicesPayload.summary === \"Customer\" && onchange\n                            ? selectCusData\n                            : selectedcountry\n                          : selectedcountry\n                      }\n                      valueRenderer={generateDropdownLabel}\n                      disabled={servicesPayload.summary == \"Account Owner\"}\n                      onChange={(s) => {\n                        SetChange(true);\n                        setselectedcountry(s);\n                        setSelectCDData(s);\n                        setselectCusData(s);\n                        let selected = s.map((item) => {\n                          return item.value;\n                        });\n                        onFilterChange({\n                          id: \"aelocation\",\n                          value:\n                            selected.toString() ==\n                            country.map((item) => item.value).join(\",\")\n                              ? \"-1\"\n                              : selected.toString(),\n                        });\n                      }}\n                    />\n                  </span>\n                </div>\n              </div>\n            )}\n\n            {[\"analytics\"].includes(actionSelector) && (\n              <div className=\"col-md-4 mb-2\">\n                <div className=\"form-group row\">\n                  <label className=\"col-5\">\n                    Eng.Company\n                    <span className=\"required error-text ml-1\"> *</span>\n                  </label>\n                  <span className=\"col-1 p-0\">:</span>\n                  <span\n                    className=\"col-6 multiselect\"\n                    ref={(ele) => {\n                      ref.current[7] = ele;\n                    }}\n                  >\n                    <MultiSelect\n                      ArrowRenderer={ArrowRenderer}\n                      options={engComp.sort((a, b) =>\n                        a.label.localeCompare(b.label)\n                      )}\n                      hasSelectAll={true}\n                      isLoading={false}\n                      shouldToggleOnHover={false}\n                      disableSearch={false}\n                      value={selectedengComp}\n                      valueRenderer={generateDropdownLabel}\n                      disabled={false}\n                      onChange={(s) => {\n                        setselectedengComp(s);\n                        let selected = s.map((item) => {\n                          return item.value;\n                        });\n                        onFilterChange({\n                          id: \"engComp\",\n                          value:\n                            selected.toString() ==\n                            engComp.map((item) => item.value).join(\",\")\n                              ? \"-1\"\n                              : selected.toString(),\n                        });\n                      }}\n                    />\n                  </span>\n                </div>\n              </div>\n            )}\n            {servicesPayload?.summary == \"Account Owner\" && (\n              <div className=\"col-md-4 mb-2\">\n                <div className=\"form-group row\">\n                  <label className=\"col-5\">\n                    Account Owner\n                    <span className=\"required error-text ml-1\"> *</span>\n                  </label>\n                  <span className=\"col-1 p-0\">:</span>\n                  <span\n                    className=\"col-6 multiselect\"\n                    ref={(ele) => {\n                      ref.current[8] = ele;\n                    }}\n                  >\n                    <MultiSelect\n                      ArrowRenderer={ArrowRenderer}\n                      id=\"accOwner\"\n                      options={dp}\n                      hasSelectAll={true}\n                      value={selectedDp}\n                      valueRenderer={generateDropdownLabel}\n                      shouldToggleOnHover={false}\n                      disableSearch={false}\n                      // selected={selectedDp}\n                      disabled={false}\n                      onChange={(s) => {\n                        setSelectedDp(s);\n                        let selected = s.map((item) => {\n                          return item.value;\n                        });\n                        console.log(selected, \"selected\");\n                        onFilterChange({\n                          id: \"accOwner\",\n                          value:\n                            selected.toString() ==\n                            dp.map((item) => item.value).join(\",\")\n                              ? \"-1\"\n                              : selected.toString(),\n                        });\n                      }}\n                    />\n                  </span>\n                </div>\n              </div>\n            )}\n\n            {[\"analytics\"].includes(actionSelector) && (\n              <div className=\"col-md-4 mb-2\">\n                <div className=\"form-group row\">\n                  <label className=\"col-5\">Account Type</label>\n                  <span className=\"col-1 p-0\">:</span>\n                  <span className=\"col-6 \">\n                    <select\n                      id=\"accType\"\n                      className=\"col-md-12 col-sm-12 col-xs-12 \"\n                      value={account}\n                      onChange={(e) => {\n                        onFilterChange(e.target);\n                        setAccount(e.target.value);\n                      }}\n                    >\n                      <option value={-1}>{\"ALL\"}</option>\n                      <option value={1}>{\"Current Account\"}</option>\n                      <option value={2}>{\"New Logo\"}</option>\n                    </select>\n                  </span>\n                </div>\n              </div>\n            )}\n\n            <div className=\"col-md-12 no-padding section\">\n              <div className=\"seFooter\" style={{ borderTop: \"1px solid #CCC\" }}>\n                <span className=\"selectedSE\">\n                  <b>Selected SE : </b>\n                  <span className=\"dynText\">\n                    {selectedSE === \"<< Select SE >>\"\n                      ? localSE.map((item, index) => (\n                          <span key={item.id}>\n                            {isIndividualChecked\n                              ? item.salesPersonName\n                                ? item.salesPersonName\n                                : item.text\n                              : item.salesPersonName\n                              ? item.salesPersonName\n                              : item.text + ` & Team`}\n                            {index === localSE.length - 1 ? \"\" : \", \"}\n                          </span>\n                        ))\n                      : selectedSE}\n                  </span>\n                </span>\n              </div>\n            </div>\n\n            <div className=\"col-md-12 col-sm-12 col-xs-12 my-2 btn-container center\">\n              <button\n                type=\"submit\"\n                className=\"btn btn-primary\"\n                onClick={() => {\n                  serviceSearchValidator();\n                  setshowSFpipeline(false);\n                }}\n              >\n                <FaSearch /> Search\n              </button>\n            </div>\n            <SelectCustDialogBox\n              visible={custVisible}\n              setVisible={setCustVisible}\n              value={value}\n              setCollectedProspect={setCollectedProspect}\n              setPopupIsLoading={setPopupIsLoading}\n              executiveIds={localSE.map((item) => item.id)}\n            />\n            <SelectSEDialogBox\n              visible={visiblepopup}\n              setVisible={setVisiblepopup}\n              accessData={accessData}\n            />\n          </div>\n        </CCollapse>\n      </div>\n      {searching && <Loader handleAbort={() => setsearching(false)} />}\n\n      <>\n        {popupIsLoading == true ? (\n          <div className=\"loader\">\n            <div className=\"loader-animation\" style={{ textAlign: \"center\" }}>\n              <>\n                <Loader handleAbort={handleAbort} />\n              </>\n            </div>\n          </div>\n        ) : (\n          \"\"\n        )}\n      </>\n    </div>\n  );\n}\n","import Vdata from \"./Vdata.json\";\nimport {\n  FaChevronCircleRight,\n  FaChevronCircleLeft,\n  FaCaretDown,\n  FaCaretRight,\n  FaCircle,\n} from \"react-icons/fa\";\nimport { useState, useEffect } from \"react\";\nimport fte_active from \"../../assets/images/empstatusIcon/fte_active.png\";\nimport fte_inactive from \"../../assets/images/empstatusIcon/fte_inactive.png\";\nimport fte_notice from \"../../assets/images/empstatusIcon/fte_notice.png\";\nimport subk_active from \"../../assets/images/empstatusIcon/subk_active.png\";\nimport subk_inactive from \"../../assets/images/empstatusIcon/subk_inactive.png\";\nimport subk_notice from \"../../assets/images/empstatusIcon/subk_notice.png\";\nimport { MdOutlineEditNote } from \"react-icons/md\";\nimport DisplayPopup from \"./DisplayPopup\";\nimport { RiFileExcel2Line } from \"react-icons/ri\";\nimport ExcelJS from \"exceljs\";\nimport \"./ViewTable.scss\";\nimport SFButtons from \"./SFButtons\";\n\nexport default function ViewTable({\n  Vdata,\n  onclickchanger,\n  expandableCols,\n  ViewBy,\n  setshowSFpipeline,\n  showSFpipeline,\n  reportRunId,\n  serviceData,\n  componentSelector,\n  setRefreshButton,\n  refreshButton,\n}) {\n  const icons = {\n    fte0: (\n      <img\n        src={fte_inactive}\n        alt=\"(fte_inactive_icon)\"\n        style={{ height: \"12px\" }}\n        title=\"Ex-Employee\"\n      />\n    ),\n    fte1: (\n      <img\n        src={fte_active}\n        alt=\"(fte_active_icon)\"\n        style={{ height: \"12px\" }}\n        title=\"Active Employee\"\n      />\n    ),\n    fte2: (\n      <img\n        src={fte_notice}\n        alt=\"(fte_notice_icon)\"\n        style={{ height: \"12px\" }}\n        title=\"Employee in notice period\"\n      />\n    ),\n    subk0: (\n      <img\n        src={subk_inactive}\n        alt=\"(subk_inactive_icon)\"\n        style={{ height: \"12px\" }}\n        title=\"Ex-Contractor\"\n      />\n    ),\n    subk1: (\n      <img\n        src={subk_active}\n        alt=\"(subk_active_icon)\"\n        style={{ height: \"12px\" }}\n        title=\"Active Contractor\"\n      />\n    ),\n    subk2: (\n      <img\n        src={subk_notice}\n        alt=\"(subk_notice_icon)\"\n        style={{ height: \"12px\" }}\n        title=\"Contractor in notice period\"\n      />\n    ),\n  };\n  const prosicon = {\n    1: <FaCircle size={\"0.8em\"} style={{ color: \"purple\" }} />,\n    0: <FaCircle size={\"0.8em\"} style={{ color: \"green\" }} />,\n  };\n\n  const [expanded, setexpanded] = useState([]);\n  const [expandedTwo, setexpandedTwo] = useState([]);\n  const allExecutives = Vdata?.filter((item) => item.lvl === 1).map(\n    (item) => item[onclickchanger]\n  );\n  const allExecutivestwo = Vdata?.filter((item) => item.lvl === 2).map(\n    (item) => item[onclickchanger]\n  );\n\n  const [colexpanded, setcolexpanded] = useState([]);\n  const [openPopup, setOpenPopup] = useState(false);\n  const [rowData, setRowData] = useState({});\n\n  const clickExpand = (exec) => {\n    if (exec === \"Summary\") {\n      setexpanded((prevState) => {\n        return prevState.length === allExecutives.length &&\n          expandedTwo.length === allExecutivestwo.length\n          ? []\n          : allExecutives;\n      });\n      setexpandedTwo((prevState) => {\n        return prevState.length === allExecutivestwo.length\n          ? []\n          : allExecutivestwo;\n      });\n    } else {\n      setexpanded((prevState) => {\n        return prevState.includes(exec)\n          ? prevState.filter((item) => item !== exec)\n          : [...prevState, exec];\n      });\n      if (expandedTwo.length > 0) {\n        const exTwo = expandedTwo.filter(element => !element.split(\"^&\")[0].includes(exec));\n\n        setexpandedTwo(exTwo);\n      }\n    }\n  };\n  const clickExpandTwo = (exec) => {\n    setexpandedTwo((prevState) => {\n      return prevState.includes(exec)\n      ? prevState.filter((element) => !element.includes(exec))\n      : [...prevState, exec];\n    });\n  };\n\n  const clickExpandcols = (quartr) => {\n    setcolexpanded((prevState) => {\n      return prevState.includes(quartr)\n        ? prevState.filter((item) => item !== quartr)\n        : [...prevState, quartr];\n    });\n  };\n\n  useEffect(() => {\n    setexpanded([]);\n    setexpandedTwo([]);\n    setcolexpanded([]);\n  }, [Vdata]);\n\n  let toggler = 0;\n  let togglerNw = 0;\n  let coltoggler = 0;\n  let headspanner = \"\";\n  const horizontalcolexpands = [\n    \"target\",\n    \"call\",\n    \"custForecast\",\n    \"sf\",\n    \"pl\",\n    \"rr\",\n    \"sgns\",\n    \"attperc\",\n    \"est\",\n    \"sgtrgt\",\n  ];\n  const conditions = [\n    \"id\",\n    \"customerId\",\n    \"execStatus\",\n    \"supervisor\",\n    \"salesExecId\",\n    \"salesExec\",\n    \"customerTmp\",\n    \"salesExecStatus\",\n    \"practiceId\",\n    \"countryId\",\n    \"isProspect\",\n    \"lvl\",\n    \"count\",\n    \"isEdit\",\n    \"keyAttr\",\n    \"parentAttr\",\n  ];\n\n  const tableHead = Vdata?.map((row, index) => {\n    const rowArray = [];\n\n    toggler =\n      row[\"lvl\"] === 2\n        ? toggler\n        : expanded.includes(row[onclickchanger])\n        ? 1\n        : 0;\n\n    if (row[\"lvl\"] === 3) {\n      togglerNw = togglerNw;\n      toggler = 0;\n    } else {\n      if (expandedTwo.includes(row[onclickchanger])) {\n        togglerNw = 1;\n      } else {\n        togglerNw = 0;\n      }\n    }\n\n    for (const key in row) {\n      if (key.includes(\"Q\")) {\n        coltoggler = colexpanded.includes(key.split(\"_\")[1]) ? 1 : 0;\n      }\n\n      !conditions.includes(key) &&\n        (expandedTwo.length < 0\n          ? true\n          : !expandableCols.includes(key) ||\n            (expandedTwo.length > 0 && key.includes(\"Coverage\"))\n          ? true\n          : !expandableCols.includes(key) ||\n            (expandedTwo.length > 0 && key.includes(\"CSL\"))\n          ? true\n          : !expandableCols.includes(key) ||\n            (expandedTwo.length > 0 && key.includes(\"acc_type\"))\n          ? true\n          : !expandableCols.includes(key)) &&\n        rowArray.push(\n          ((row.id === -2 &&\n            (key.includes(\"total\")\n              ? key.split(\"_\")[0] !== headspanner.split(\"_\")[0]\n              : key.split(\"_\")[1] !== headspanner.split(\"_\")[1] ||\n                key.includes(\"executive\") ||\n                key.includes(\"customer\") ||\n                key.includes(\"country\") ||\n                key.includes(\"CSL\"))) ||\n            row.id === -1) &&\n            row[key] !== \"\" && (\n              <th\n                className={\n                  key === \"CSL\"\n                    ? \"cslStyl\"\n                    : key === \"Coverage\"\n                    ? \"covStyl\"\n                    : key === \"acc_type\"\n                    ? \"accTypeStyl\"\n                    : \"\"\n                }\n                key={`${key}_${index}`}\n                rowSpan={row[key]?.split(\"^&\")[1]}\n                colSpan={row[key]?.split(\"^&\")[2]}\n                style={{\n                  textAlign: \"center\",\n                  display:\n                    coltoggler === 0 &&\n                    horizontalcolexpands.some((item) => key.includes(item)) &&\n                    !(key.includes(\"Q\") || key.includes(\"total\")) &&\n                    ViewBy != \"month\"\n                      ? \"none\"\n                      : \"\",\n                }}\n              >\n                {key === \"customer\" ? (\n                  <span>\n                    {prosicon[row[\"isProspect\"]]}\n                    Customer\n                    {prosicon[1]}\n                    Prospect <br />\n                    Sales Executive\n                  </span>\n                ) : row[key].includes(\"Account Owner\") ? (\n                  <span>\n                    AccountOwner /\n                    <br />\n                    {prosicon[row[\"isProspect\"]]}&nbsp; Customer&nbsp;\n                    {prosicon[1]}&nbsp; Prospect\n                  </span>\n                ) : (\n                  <span>{\n                    row[key] === \"Cust Map ($)\"\n                    ? <span>{\"Customer\"}<br/> {\"Targets ($)\"}</span>\n                    : row[key] === \"SG Target ($)\" || row[key] === \" SG Target ($)\" \n                    ? <span>{\"Signing\"}<br/> {\"Targets ($)\"}</span>\n                    : row[key] === \"Target ($)\"\n                    ?<span>{\"Revenue\"}<br/> {\"Targets ($)\"}</span>\n                    : row[key] === \"Sf Rev ($)\"\n                    ? <span>{\"Sf\"}<br/> {\"Revenue ($)\"}</span>\n                    : row[key] === \"Planned Rev ($)\"\n                    ? <span>{\"Planned\"}<br/> {\"Rev ($)\"}</span>\n                    : row[key] === \"Recognized Rev ($)\"\n                    ? <span>{\"Recognized\"}<br/> {\"Rev ($)\"}</span>\n                    : row[key] === \"Estimate Rev ($)\"\n                    ? <span>{\"Estimate\"}<br/> {\"Rev ($)\"}</span>\n                    : row[key].split(\"^&\")[0] \n                  }                  \n                  </span>\n                )}\n\n                {row.id === -2 && row[key].includes(\"Quart\") && (\n                  <span\n                    onClick={() => {\n                      clickExpandcols(key.split(\"_\")[1]);\n                    }}\n                  >\n                    {colexpanded.includes(key.split(\"_\")[1]) ? (\n                      <FaChevronCircleLeft\n                        size={\"0.8em\"}\n                        title=\"Hide Details\"\n                        style={{ cursor: \"pointer\", marginLeft: \"5px\" }}\n                      />\n                    ) : (\n                      <FaChevronCircleRight\n                        size={\"0.8em\"}\n                        title=\"Show Details\"\n                        style={{ cursor: \"pointer\", marginLeft: \"5px\" }}\n                      />\n                    )}\n                  </span>\n                )}\n              </th>\n            )\n        );\n      headspanner = key;\n    }\n    return (\n      <tr\n        key={`${row.customerId}_${row.countryId}_${row.parentAttr}_${row.executive}_${row.practiceId}_${row.practice}_${row.keyAttr}_${row.lvl}_${row.count}_${row.supervisor}_${row.execStatus}_${row.id}`}\n      >\n        {rowArray}\n      </tr>\n    );\n  });\n\n  const tableData = Vdata?.filter(\n    (row) => row.lvl !== -1 && row.lvl !== -2\n  ).map((row, index) => {\n    const rowArray = [];\n\n    function hasProperty(row, propertyName) {\n      return propertyName in row;\n    }\n\n    let propertyName = \"customer\";\n\n    let result = hasProperty(row, propertyName);\n    if (result == false) {\n      if (row[\"lvl\"] === 2) {\n        togglerNw = 0;\n        toggler = expanded.includes(row[onclickchanger].split(\"^&\")[0]) ? 1 : 0;\n      }\n      else if (row[\"lvl\"] === 3) {\n        toggler = 0;\n        togglerNw = expandedTwo.includes(row[onclickchanger]) ? 1 : 0;\n      }\n      else {\n        toggler = 0;\n        togglerNw = 0;\n      }\n    } else {\n      toggler =\n        row[\"lvl\"] === 3\n          ? toggler\n          : expanded.includes(row[onclickchanger])\n            ? 1\n            : 0;\n    }\n\n\n    for (const key in row) {\n      if (key.includes(\"Q\")) {\n        coltoggler = colexpanded.includes(key.split(\"_\")[1]) ? 1 : 0;\n      }\n      if (row[\"lvl\"] === 999) {\n        if (key === \"executive\") {\n          rowArray.push(\n            <td\n              key={`${key}_${index}`}\n              colSpan={Object.keys(row).length - 1}\n              style={{\n                textAlign: \"center\",\n                backgroundColor: \"white\",\n                fontSize: \"14px\",\n              }}\n            >\n              {row[key].split(\"^&\")[0]}{\" \"}\n            </td>\n          );\n        } else if (key === \"customer\") {\n          rowArray.push(\n            <td\n              key={`${key}_${index}`}\n              colSpan={Object.keys(row).length - 1}\n              style={{\n                textAlign: \"center\",\n                backgroundColor: \"white\",\n                fontSize: \"14px\",\n              }}\n            >\n              {row[key].split(\"^&\")[1]}{\" \"}\n            </td>\n          );\n        }\n      } else {\n        !conditions.includes(key) &&\n          (expandedTwo.length < 0\n            ? true\n            : !expandableCols.includes(key) ||\n              (expandedTwo.length > 0 && key.includes(\"Coverage\"))\n            ? true\n            : !expandableCols.includes(key) ||\n              (expandedTwo.length > 0 && key.includes(\"CSL\"))\n            ? true\n            : !expandableCols.includes(key) ||\n              (expandedTwo.length > 0 && key.includes(\"acc_type\"))\n            ? true\n            : !expandableCols.includes(key)) &&\n          rowArray.push(\n            <td\n              key={`${key}_${index}`}\n              className={\n                key.includes(\"executive\")\n                  ? \"executive\"\n                  : key.includes(\"Q\")\n                  ? key.split(\"_\")[1][1] % 2 == 0\n                    ? \"even\"\n                    : \"odd\"\n                  : key.includes(\"total\")\n                  ? \"total\"\n                  : key.includes(\"0\")\n                  ? key.split(\"_\")[1] % 2 == 0\n                    ? \"innereven\"\n                    : \"innerodd\"\n                  : key === \"CSL\" && row[\"lvl\"] === 1 \n                  ? \"cslStyl2\"\n                  : key === \"Coverage\" && row[\"lvl\"] === 1 \n                  ? \"covStyl2\"\n                  : key === \"acc_type\" && row[\"lvl\"] === 1 \n                  ? \"accTypeStyl2\"\n                  : key === \"CSL\"\n                  ? \"cslStyl\"\n                  : key === \"Coverage\"\n                  ? \"covStyl\"\n                  : key === \"acc_type\"\n                  ? \"accTypeStyl\"\n                  : \"\"\n              }\n              style={{\n                display:\n                  (toggler === 0 &&\n                    togglerNw == 0 &&\n                    (row[\"lvl\"] === 2 || row[\"lvl\"] === 3)) ||\n                  (coltoggler === 0 &&\n                    horizontalcolexpands.some((item) => key.includes(item)) &&\n                    !(key.includes(\"Q\") || key.includes(\"total\")) &&\n                    ViewBy != \"month\")\n                    ? \"none\"\n                    : \"\",\n              }}\n            >\n              <div>\n                {key === onclickchanger && row[\"lvl\"] < 2 && (\n                  <>\n                    <span onClick={() => clickExpand(row[onclickchanger])}>\n                      {expanded.includes(row[onclickchanger]) ||\n                      (expanded.length === allExecutives.length &&\n                        expandedTwo.length === allExecutivestwo.length) ? (\n                        <FaCaretDown\n                          size={\"1.2em\"}\n                          title=\"Collapse\"\n                          style={{ cursor: \"pointer\", color: \"#428bca\" }}\n                        />\n                      ) : (\n                        <FaCaretRight\n                          size={\"1.2em\"}\n                          title=\"Expand\"\n                          style={{ cursor: \"pointer\", color: \"#428bca\" }}\n                        />\n                      )}\n                    </span>\n                    <span>{icons[row[\"execStatus\"]]}</span>\n                  </>\n                )}\n                {key === onclickchanger &&\n                (row[\"lvl\"] === 2 || row[\"lvl\"] === 3) ? (\n                  <>\n                    <span\n                      className={\n                        key === \"executive\" && row[\"lvl\"] === 2\n                          ? \"parentRow\"\n                          : \"\" || row[\"lvl\"] === 3\n                          ? \"collapsedRow\"\n                          : \"\"\n                      }\n                    >\n                      {key === \"customer\" &&\n                      row[\"customer\"] !== \"  \" &&\n                      row[\"customer\"] == \"Summary\"\n                        ? prosicon[row[\"isProspect\"]]\n                        : \"\" ||\n                          (key === \"executive\" &&\n                            row[\"customer\"] !== \"  \" &&\n                            row[\"customer\"] &&\n                            row[key].includes(\"Account Owner\") !== \"Summary\")\n                        ? prosicon[row[\"isProspect\"]]\n                        : \"\"}\n                      {key === onclickchanger && row[\"lvl\"] === 0}\n                    </span>\n\n                    {/* customer Table */}\n                    <>\n                      {(key === \"customer\" && (\n                        <>\n                          {icons[row[\"execStatus\"]]}{\" \"}\n                          <span\n                            style={{\n                              whiteSpace: \"nowrap\",\n                              textOverflow: \"ellipsis\",\n                              overflow: \"hidden\",\n                            }}\n                            title={row[key]?.split(\"^&\")[1]}\n                          >\n                            {row[\"customer\"]?.split(\"^&\")[1]}\n                          </span>\n                          <span\n                            style={{\n                              marginLeft: \"auto\",\n                              cursor: \"pointer\",\n                              float: \"right\",\n                            }}\n                          >\n                            {\" \"}\n                            {key === \"customer\" &&\n                            row[key] !== \"Summary\" &&\n                            row[key] !== \"<< Unassigned >>\" ? (\n                              <MdOutlineEditNote\n                                title=\"Notes\"\n                                size={\"1.5em\"}\n                                onClick={() => {\n                                  setOpenPopup(true);\n                                  setRowData(row);\n                                }}\n                              />\n                            ) : (\n                              \"\"\n                            )}\n                          </span>\n                        </>\n                      )) || (\n                        <span title={row[\"customer\"]?.split(\"^&\")[0]}>\n                          {\" \"}\n                          {key === \"executive\" &&\n                            row[\"customer\"]?.split(\"^&\")[0]}\n                        </span>\n                      )}\n                    </>\n                  </>\n                ) : (key === onclickchanger || key === \"country\") &&\n                  row[\"lvl\"] === 3 ? (\n                  \"\"\n                ) : (\n                  <>\n                    <span>\n                      {key == \"customer\" &&\n                      row[\"customer\"] !== \"  \" &&\n                      row[\"customer\"] !== \"Summary\"\n                        ? prosicon[row[\"isProspect\"]]\n                        : \"\"}\n                    </span>\n                    <span\n                      title={\n                        row[key] === \" \"\n                          ? \" \"\n                          : isNaN(row[key])\n                          ? row[key]\n                          : parseInt(row[key]).toLocaleString(\"en-US\")\n                      }\n                    >\n                      {row[key] === \" \"\n                        ? \" \"\n                        : isNaN(row[key])\n                        ? row[key]\n                        : parseInt(row[key]).toLocaleString(\"en-US\")}\n                    </span>\n                    <span>\n                      {\" \"}\n                      {key === \"executive\" &&\n                      !row[\"customerTmp\"] &&\n                      row[key] !== \"Summary\" &&\n                      row[key] !== \"<< Unassigned >>\" ? (\n                        <MdOutlineEditNote\n                          title=\"Notes\"\n                          size={\"1.5em\"}\n                          onClick={() => {\n                            setOpenPopup(true);\n                            setRowData(row);\n                          }}\n                        />\n                      ) : (\n                        \"\"\n                      )}\n                    </span>{\" \"}\n                  </>\n                )}\n              </div>\n\n              {/* AccountOwner */}\n              <span\n                style={{\n                  whiteSpace: \"nowrap\",\n                  textOverflow: \"ellipsis\",\n                  overflow: \"hidden\",\n                }}\n                className={\n                  key === \"executive\" && row[\"lvl\"] === 2\n                    ? \"collapsedRow2\"\n                    : \"\" || row[\"lvl\"] === 3\n                    ? \"collapsedRow3\"\n                    : \"\"\n                }\n              >\n                {key === \"executive\" && row[\"lvl\"] === 2 ? (\n                  <span\n                    style={{ paddingLeft: \"22px\" }}\n                    title={row[\"salesExec\"]}\n                  >\n                    <span onClick={() => clickExpandTwo(row[onclickchanger])}>\n                      {expandedTwo.includes(row[onclickchanger]) ||\n                          expandedTwo.length === allExecutivestwo.length ? ( \n                        <FaCaretDown\n                          size={\"1.2em\"}\n                          title=\"Collapse\"\n                          style={{ cursor: \"pointer\", color: \"#428bca\" }}\n                        />\n                      ) : (\n                        <FaCaretRight\n                          size={\"1.2em\"}\n                          title=\"Expand\"\n                          style={{ cursor: \"pointer\", color: \"#428bca\" }}\n                        />\n                      )}\n                    </span>\n                    {row[\"salesExec\"]}\n                  </span>\n                ) : key === \"executive\" && row[\"lvl\"] === 3 ? (\n                  <>\n                    <div style={{ paddingLeft: \"38px\", fontWeight: \"normal\" }}>\n                      {key === \"executive\" &&\n                      row[\"lvl\"] !== 2 &&\n                      row[\"salesExec\"] !== \"  \" &&\n                      !row[\"customer\"] &&\n                      row[\"salesExec\"] !== \"Summary\" &&\n                      row[\"lvl\"] !== 2\n                        ? prosicon[row[\"isProspect\"]]\n                        : null}\n\n                      <span\n                        style={{\n                          whiteSpace: \"nowrap\",\n                          textOverflow: \"ellipsis\",\n                          overflow: \"hidden\",\n                        }}\n                        title={row[\"customerTmp\"]}\n                      >\n                        {row[\"customerTmp\"]}\n                      </span>\n                      <span\n                        style={{\n                          marginLeft: \"auto\",\n                          cursor: \"pointer\",\n                          float: \"right\",\n                        }}\n                      >\n                        <span>\n                          {row[\"customerTmp\"] && row[\"lvl\"] !== 2 && (\n                            <span>\n                              {\" \"}\n                              <MdOutlineEditNote\n                                size={\"1.5em\"}\n                                title=\"Notes\"\n                                onClick={() => {\n                                  setOpenPopup(true);\n                                  setRowData(row);\n                                }}\n                              />\n                            </span>\n                          )}\n                        </span>\n                      </span>\n                    </div>\n                  </>\n                ) : (\n                  \"\"\n                )}\n              </span>\n            </td>\n          );\n        headspanner = key;\n      }\n    }\n    return (\n      <tr\n        key={`${row.customerId}_${row.countryId}_${row.parentAttr}_${row.executive}_${row.practiceId}_${row.practice}_${row.keyAttr}_${row.lvl}_${row.count}_${row.supervisor}_${row.execStatus}_${row.id}`}\n      >\n        {rowArray}\n      </tr>\n    );\n  });\n\n  const handleOnExport = () => {\n    const excludeProperties = [\n      \"id\",\n      \"customerId\",\n      \"isProspect\",\n      \"practiceId\",\n      \"countryId\",\n      \"execStatus\",\n      \"lvl\",\n      \"count\",\n      \"isEdit\",\n      \"keyAttr\",\n      \"parentAttr\",\n      \"isActive\",\n      \"salesExecId\",\n      \"salesExecStatus\",\n    ];\n\n    const headerRow1 = Object.keys(Vdata[0])\n      .filter((key) => !excludeProperties.includes(key))\n      .map((key) => {\n        if (key === \"customer\") {\n          const val = Vdata[0][key].split(\"^&\");\n          let dVal = val[0].includes(\"__\") ? val[0].split(\"__\") : [];\n          return dVal[2] + dVal[4];\n        }\n        const val = Vdata[0][key].split(\"^&\");\n        return val[0];\n      });\n\n    const filteredData = Vdata.slice(1)\n      .map((item) => {\n        const filteredItem = Object.fromEntries(\n          Object.entries(item).filter(\n            ([key]) => !excludeProperties.includes(key)\n          )\n        );\n        return filteredItem;\n      });\n\n    const dataRows = filteredData.map((item) => Object.values(item));\n\n    const workbook = new ExcelJS.Workbook();\n    const worksheet = workbook.addWorksheet(\"SalesTarget\");\n    const headerRow = worksheet.addRow(headerRow1);\n\n    for (let i = 0; i < dataRows.length; i++) {\n      const row = worksheet.addRow(dataRows[i]);\n    }\n    const boldRow = [1];\n    boldRow.forEach((index) => {\n      const row = worksheet.getRow(index);\n      row.font = { bold: true };\n    });\n\n    // Save the workbook\n    workbook.xlsx.writeBuffer().then((buffer) => {\n      saveAs(new Blob([buffer]), \"SalesTarget.xlsx\");\n    });\n  };\n\n  return (\n    <div>\n      <div className=\"row\">\n        <div className=\"col-12\">\n          <RiFileExcel2Line\n            size=\"1.5em\"\n            title=\"Export to Excel\"\n            style={{ color: \"green\", float: \"right\" }}\n            cursor=\"pointer\"\n            onClick={handleOnExport}\n          />\n          {serviceData.length > 0 && (\n            <SFButtons\n              reportRunId={reportRunId}\n              showSFpipeline={showSFpipeline}\n              setshowSFpipeline={setshowSFpipeline}\n              componentSelector={componentSelector}\n              setRefreshButton={setRefreshButton}\n              refreshButton={refreshButton}\n            />\n          )}\n        </div>\n      </div>\n\n      <div className=\"serviceViewTable darkHeader toHead\">\n        <table\n          className=\"table table-bordered htmlTable\"\n          cellPadding={0}\n          cellSpacing={0}\n        >\n          <thead>{tableHead}</thead>\n          <tbody>{tableData}</tbody>\n        </table>\n      </div>\n      {openPopup ? (\n        <DisplayPopup\n          openPopup={openPopup}\n          setOpenPopup={setOpenPopup}\n          Vdata={Vdata}\n          rowData={rowData}\n        />\n      ) : (\n        \"\"\n      )}\n    </div>\n  );\n}\n"],"names":["forwardRef","props","ref","baseUrl","environment","useState","selectedEngCust","setSelectedEngCust","selectedCustDisp","setselectedCustDisp","allIndirectSelected","setallIndirectSelected","custData","setcustData","search","setSearch","useImperativeHandle","setGlobalState","localStorage","setItem","JSON","stringify","resetTOlocalState","localSE","getItem","parse","length","employeeElement","emp","className","style","marginTop","width","type","id","whiteSpace","overflow","textOverflow","onChange","e","prevState","some","el","filter","item","onSelectCust","checked","title","fullName","useEffect","toLowerCase","includes","map","axios","then","resp","data","console","log","catch","htmlFor","placeholder","target","value","name","SelectedItems","empId","newArray","CustomerListRender","selectedCust","SelectSESalesDialogBox","visible","setVisible","setSelectedItems","selectedItems","buttonPopup","setButtonPopup","setButtonPopup1","buttonPopup1","CustomerRef","useRef","CustomerPopUp","alignment","backdrop","size","closeButton","onClick","onClose","fontSize","prev","color","current","openPopup","setOpenPopup","rowData","Vdata","accessData","setNotesData","setValue","editorToolBar","toolbar","header","font","bold","tooltip","list","script","indent","align","method","url","res","defaultNotes","notes","cursor","executive","customerTmp","customer","split","theme","modules","readOnly","cleanedNotes","replace","requestData","resId","loggedUserId","saveNotesData","SFButtons","showSFpipeline","setshowSFpipeline","reportRunId","componentSelector","setRefreshButton","refreshButton","loader","setLoader","abortController","fontWeight","loaderTime","setTimeout","AbortController","signal","for","status","clearTimeout","err","getserviceSFData","handleAbort","abort","notesData","defaultValue","serviceData","coloumnArray","setMessage","setMessage1","hirarchy","serTargetData","setSerTargetData","setSerTargetDataKeys","serTargetObj","setSerTargetObj","expanded","setexpanded","colexpanded","setcolexpanded","setRowData","serviceTargetTableData","setServiceTargetTableData","serviceTargetTableData1","setServiceTargetTableData1","allexe","lvl","toggler","coltoggler","icons","fte0","src","fte_inactive","alt","height","fte1","fte_active","fte2","fte_notice","subk0","subk_inactive","subk1","subk_active","subk2","subk_notice","tableDisplayHandlerHeader","tableDisplayHandler","prosicon","onSerTargetUpdate","pAtt","i","practiceId","countryId","year","getAttribute","quarter","quarChecker","keysData","splitId","findIndex","months","currIndexKeys","Object","keys","finalKey","ele","ky","d","push","exeSumIndex","element","keyAttr","total","forEach","parseInt","execName","splitedExecName","topCount","reduce","acc","curr","topCount1","totalTargetTopCount","totalTargetsubCount","totalTargetsubCountCust","summaryQuarterCount","monVal","Math","floor","monthOneSummaryCount","monthTwoSummaryCount","monthThreeSummaryCount","monthOneTopCount","monthTwoTopCount","monthThreeTopCount","monthOneTopCount1","monthTwoTopCount1","monthThreeTopCount1","arr","quarters","q1months","q2months","q3months","q4months","date","month","Qualtertotal","quaterId","valueAtIndex1","result","startsWith","substring","montopCount","montopCount1","montotalTargetTopCount","montotalTargetsubCount","montotalTargetsubCountCust","monsummaryQuarterCount","monQuartTopCount1","targetDataArray","createTargetData","executiveId","customerId","prospectId","typ","val","comments","isOverridden","Q1","Q2","Q3","Q4","valuePerMonth","index","targetValue","conditions","expandableCols","horizontalcolexpands","textAlign","display","quartr","marginLeft","nonIntegersvals","Fragment","exe","paddingLeft","paddingRight","float","isNaN","parseFloat","toLocaleString","parentAttr","newState","onSerTargetEnter","onBlur","excludeProperties","headerRow1","key","dVal","dataRows","slice","fromEntries","entries","values","workbook","ExcelJS","worksheet","addWorksheet","addRow","getRow","xlsx","writeBuffer","buffer","saveAs","Blob","cellPadding","cellSpacing","emptyClassList","document","getElementsByClassName","splitData","row","col","resetClickHandler","serviceDataCall","setMessageSgng","displaySigningTargets","setDisplaySigningTargets","displaySigningTargets1","setDisplaySigningTargets1","signingTargetsData","setSigningTargetsData","columnArray","saveSalesTargets","setSaveSalesTargets","rowData1","setRowData1","displayTableHandlerBody","displayTableHandlerHeader","tabData","inEle","inIndex","undefined","backgroundColor","colSpan","onKeyPress","onChangeHandler","calculateTotalHandler","match","code","which","keyCode","preventDefault","inInd","summaryColumnTotal","rowTotal","keyName","sum","calInd","elementId","getElementById","classList","formattedValue","contains","add","remove","tempSalesData","obj","monthArr","monthNum","toString","datas","index1","saveClickHandler","finalData","saveSalesTargetsAxiosCall","originalValue","DisplayPopup","customerTargetData","setcustomerTargetData","setcustomerTargetDataKeys","practice","setMessageCust","customerTargetsData","setCustomerTargetsData","displayTable","setDisplayTable","savesCustTargetData","setSavesCustTargetData","displayTableHead","setDisplayTableHead","displayTableHeader","displayTableData","objData","nestedIndex","unWantedCols","indexOf","position","rowSpan","onBlurHandler","isProspect","tempCustData","userObjData","urMonth","saveCustomersTargetsAxiosCall","Loader","marginBottom","Service","setSfpipeline","setreportRunId","setcoloumnArray","setserviceData","setcomponentSelector","Summary","setSummary","messageRef","ViewBy","setViewBy","message","message1","messageCust","messageSgng","setHirarchy","setAccessData","getMenus","projectStatusReportSubMenu","find","display_name","subMenus","subMenu","access_level","window","scrollTo","top","behavior","ServiceSearchFilters","SfPipeline","ViewTable","onclickchanger","String","summval","onCloseTable","setSfPipeline","custVisible","setCustVisible","setCollectedProspect","selectedProspects","setSelectedProspects","selectedCustomers","setSelectedCustomers","location","useLocation","URLSearchParams","get","popupIsLoading","setPopupIsLoading","resCountry","setResCountry","defaultDate","now","Date","getMonth","getFullYear","toLocaleDateString","SelectSEData","useSelector","state","selectedSEState","directSETreeData","filterData","setFilterData","onchange","setOnchange","SetChange","getData","servicesPayload","setservicesPayload","mode","from","duration","measures","viewByTime","Divisions","monthsel","executives","isActive","isIndividual","customers","customerType","prospects","practices","countries","summary","aelocation","engComp","selectExecs","fyear","accType","accOwner","newCust","showBy","vendors","optType","duration2","divisions","moment","format","startOf","getTime","editmsg","setEditAddmsg","isIndividualChecked","visiblepopup","setVisiblepopup","FaChevronCircleUp","cheveronIcon","setCheveronIcon","SetDate","dp","setDp","selectedDp","setSelectedDp","errorMsg","setErrorMsg","actionSelector","setActionSelector","newMemberDropdown","setnewMemberDropdown","selectedSE","setselectedSE","selectedSEVal","setSelectedSEVal","salesExecutiveDropdown","setsalesExecutiveDropdown","sFOwnerDivisionsDropdown","setSFOwnerDivisionsDropdown","selectesFOwnerDivison","setselectesFOwnerDivison","setengComp","selectedengComp","setselectedengComp","country","setcountry","selectedcountry","setselectedcountry","cData","setCData","selectCDData","setSelectCDData","selectCusData","setselectCusData","resSelectedCountry","setResSelectedCountry","setpractice","account","setAccount","selectedpractice","setselectedpractice","searching","setsearching","setFullYear","setMonth","startDate","setStartDate","label","selectedmeasures","setselectedmeasures","routes","setRoutes","menu","progressDataDivisions","divisionsToFilter","Number","updateDivisionsdata","updateCountry","updateeng","updatemeasures","updatePractice","updateaelocation","updatequarter","updateSE","updateAction","updateAccounttype","updatedate","parseISO","updateAccountOwner","serviceSearchValidatorSavedSearch","ArrowRenderer","viewByVal","setViewByVal","onFilterChange","salesPersonName","join","getserviceData","generateDropdownLabel","selectedOptions","allOptions","selectedValues","option","allValues","payload","filteredData","valid","GlobalValidation","getserviceDataSavedSearch","array","SalesTargets","SalesSigningTargets","CustomerForecasts","CustomerTargets","analytics","FaChevronCircleDown","dropdownOptions","lkupName","owner_Division","company_name","country_name","sort","a","b","localeCompare","group_name","resourceName","resourcesId","userId","custom","dpObj","Name","account_owner_id","currentScreenName","pdfname","pageurl","page_Name","selected","nextYear","nextYearDate","dateFormat","showYearPicker","showQuarterYearPicker","zIndex","showMonthYearPicker","onKeyDown","options","selectedIndex","text","disabled","hasSelectAll","isLoading","shouldToggleOnHover","disableSearch","valueRenderer","s","borderTop","serviceSearchValidator","executiveIds","expandedTwo","setexpandedTwo","allExecutives","allExecutivestwo","togglerNw","headspanner","tableHead","rowArray","count","supervisor","execStatus","tableData","propertyName","hasProperty","exec","exTwo","clickExpand"],"sourceRoot":""}