{"version":3,"file":"static/js/1934.1d83e42d.chunk.js","mappings":"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","sources":["views/TimeAndExpenses/FixedPriceCreateTable.js","views/TimeAndExpenses/FixedPriceCreate.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { FilterMatchMode } from \"primereact/api\";\nimport { DataTable } from \"primereact/datatable\";\nimport { Column } from \"primereact/column\";\nimport \"primeicons/primeicons.css\";\nimport \"primereact/resources/themes/lara-light-indigo/theme.css\";\nimport \"primereact/resources/primereact.css\";\nimport \"primeflex/primeflex.css\";\nimport { InputText } from \"primereact/inputtext\";\nimport \"../PrimeReactTableComponent/PrimeReactTable.scss\";\n\nfunction FixedPriceCreateTable(props) {\n  const {\n    data,\n    rows,\n    setCheckedData,\n    setSelectedData,\n    checkboxSelect,\n    setCheckboxSelect,\n    dataAccess,\n  } = props;\n  const [mainData, setMainData] = useState([]);\n  const [headerData, setHeaderData] = useState([]);\n  const [bodyData, setBodyData] = useState([]);\n\n  const handleChange = (e) => {\n    let data = e.value;\n    let fData = data.map((d) => d.id);\n    let SData = data.map((d) => d.status);\n    setSelectedData(SData);\n    setCheckedData(fData);\n\n    setCheckboxSelect(e.value);\n  };\n\n  useEffect(() => {\n    setMainData(JSON.parse(JSON.stringify(data)));\n  }, [data]);\n\n  useEffect(() => {\n    if (mainData.length > 0) {\n      setHeaderData(mainData[0]);\n      setBodyData(mainData.splice(1));\n    }\n  }, [mainData]);\n\n  useEffect(() => {}, [headerData]);\n\n  useEffect(() => {}, [bodyData]);\n\n  const filtersData = {\n    contains: { value: null, matchMode: FilterMatchMode.CONTAINS },\n  };\n\n  const [filters1, setFilters1] = useState({\n    global: filtersData[\"contains\"],\n  });\n\n  useEffect(() => {\n    setFilters1({\n      global: filtersData[\"contains\"],\n    });\n  }, [headerData]);\n\n  const [globalFilterValue1, setGlobalFilterValue1] = useState(\"\");\n\n  const clearFilter1 = () => {\n    initFilters1();\n  };\n\n  const initFilters1 = () => {\n    setGlobalFilterValue1(\"\");\n  };\n\n  const onGlobalFilterChange1 = (e) => {\n    const value = e.target.value;\n    let _filters1 = { ...filters1 };\n\n    _filters1[\"global\"].value = value;\n\n    setFilters1(_filters1);\n    setGlobalFilterValue1(value);\n  };\n  const generateBodyWithTooltip = (field) => (data) =>\n    (\n      <div className=\"ellipsis\" title={`${data[field]}`}>\n        {data[field] == \"\" || data[field] == null ? \"NA\" : data[field]}\n      </div>\n    );\n\n  const renderHeader1 = () => {\n    return (\n      <div className=\"flex justify-content-between\">\n        <span></span>\n        <span className=\"p-input-icon-left tableGsearch\">\n          <i className=\"pi pi-search\" />\n          <InputText\n            defaultValue={globalFilterValue1}\n            onChange={onGlobalFilterChange1}\n            placeholder=\"Keyword Search\"\n            style={{ textAlign: \"center\", verticalAlign: \"middle\" }}\n          />\n        </span>\n      </div>\n    );\n  };\n\n  const header1 = renderHeader1();\n\n  const dynamicColumns = Object.keys(headerData)?.map((col, i) => {\n    let body;\n\n    body = generateBodyWithTooltip(col);\n\n    return (\n      <Column\n        sortable\n        key={col}\n        body={body}\n        field={col}\n        header={headerData[col]}\n      />\n    );\n  });\n\n  return (\n    <div className=\"darkHeader\">\n      {Object.keys(headerData).length > 0 && (\n        <DataTable\n          className=\" primeReactDataTable\" ////customerEngament\n          paginatorTemplate=\"RowsPerPageDropdown FirstPageLink PrevPageLink CurrentPageReport NextPageLink LastPageLink\"\n          currentPageReportTemplate=\"{first} to {last} of {totalRecords}\"\n          rowsPerPageOptions={[10, 25, 50]}\n          value={bodyData}\n          paginator\n          showGridlines\n          rows={rows}\n          dataKey=\"id\"\n          filters={filters1}\n          responsiveLayout=\"scroll\"\n          header={header1}\n          emptyMessage=\"No Data found.\"\n          selection={checkboxSelect}\n          onSelectionChange={(e) => handleChange(e)}\n        >\n          {dataAccess === 1000 && (\n            <Column selectionMode=\"multiple\" className=\"align center\" />\n          )}\n          {dynamicColumns}\n        </DataTable>\n      )}\n    </div>\n  );\n}\n\nexport default FixedPriceCreateTable;\n","import React, { useState, useEffect, useRef } from \"react\";\nimport {\n  FaChevronCircleDown,\n  FaChevronCircleUp,\n  FaCheck,\n} from \"react-icons/fa\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { CCollapse } from \"@coreui/react\";\nimport axios from \"axios\";\nimport moment from \"moment\";\nimport { environment } from \"../../environments/environment\";\nimport GlobalValidation from \"../ValidationComponent/GlobalValidation\";\nimport { BiCheck } from \"react-icons/bi\";\nimport Loader from \"../Loader/Loader\";\nimport FixedPriceCreateTable from \"./FixedPriceCreateTable\";\nimport { AiFillWarning } from \"react-icons/ai\";\nimport GlobalHelp from \"../PrimeReactTableComponent/GlobalHelp\";\nimport ScreenBreadcrumbs from \"../Common/ScreenBreadcrumbs\";\nimport { ImCross } from \"react-icons/im\";\n\nfunction FixedPriceCreate(props) {\n  const [checkboxSelect, setCheckboxSelect] = useState([]);\n  const [checkedData, setCheckedData] = useState([]);\n  const [selectedData, setSelectedData] = useState([]);\n  const [state, setState] = useState({\n    prjId: \"\",\n    TsName: \"\",\n    StartDt: \"\",\n    EndDt: \"\",\n    month: \"\",\n  });\n  const [StartDt, setStartDt] = useState();\n  const [EndDt, setEndDt] = useState();\n  const [BillingCycle, setBillingCycle] = useState(\"null\");\n  const [visible, setVisible] = useState(false);\n  const [cheveronIcon, setCheveronIcon] = useState(FaChevronCircleUp);\n  const [data, setData] = useState([]);\n  const [addmsg, setAddmsg] = useState(false);\n  const [searching, setsearching] = useState(false);\n  const [message, setMessage] = useState([]);\n  const [validationMessage, setValidationMessage] = useState(false);\n  const [deleteMessage, setDeleteMessage] = useState(false);\n  const [projectvalidation, setProjectValidation] = useState(false);\n  const [isEndDateEnabled, setIsEndDateEnabled] = useState(true);\n  const abortController = useRef(null);\n\n  const loggedUserId = localStorage.getItem(\"resId\");\n  const [routes, setRoutes] = useState([]);\n  let textContent = \"Time & Expenses\";\n  let currentScreenName = [\"Fixed Price - Create\"];\n\n  const baseUrl = environment.baseUrl;\n  const ref = useRef([]);\n  const value = \"FixedPrice-Create\";\n  let rows = 25;\n  const HelpPDFName = \"FixedPriceCreateTimesheet.pdf\";\n  const Header = \"Generate Billing Timesheet Help\";\n  var date = new Date();\n  var FromDate = new Date(date.getFullYear(), date.getMonth(), 1);\n  const FDate = moment(FromDate).format(\"yyyy-MM-DD\");\n  let StartDate =\n    StartDt == null ? FDate : moment(StartDt).format(\"yyyy-MM-DD\");\n  var lastDay = new Date(date.getFullYear(), date.getMonth() + 1, 0);\n  const lDate = moment(lastDay).format(\"yyyy-MM-DD\");\n  let EndDate =\n    BillingCycle == \"Monthly\"\n      ? moment(StartDt).endOf(\"month\").format(\"yyyy-MM-DD\")\n      : EndDt == null\n      ? lDate\n      : moment(EndDt).format(\"yyyy-MM-DD\");\n\n  const handleChange = (event) => {\n    event.preventDefault();\n    const { name, value } = event.target;\n    setState((prevProps) => ({ ...prevProps, [name]: value }));\n  };\n\n  const [dataAccess, setDataAccess] = useState([]);\n  console.log(dataAccess);\n\n  // ----------------------axios for getting details in to the table----------------------------------\n  const gettabledata = () => {\n    StartDate = moment(StartDt).startOf(\"month\").format(\"yyyy-MM-DD\");\n    EndDate = moment(StartDt).endOf(\"month\").format(\"yyyy-MM-DD\");\n\n    setsearching(false);\n    abortController.current = new AbortController();\n\n    axios({\n      method: \"Get\",\n      url:\n        baseUrl +\n        `/timeandexpensesms/fixedprice/gettabledata?fromdate=${StartDate}&todate=${EndDate}`,\n      signal: abortController.current.signal,\n    }).then((resp) => {\n      let tabledata = resp.data;\n      let header = [\n        {\n          Department: \"Department\",\n          Customer: \"Customer\",\n          Project: \"Project\",\n          status: \"Status\",\n        },\n      ];\n      let hData = header.concat(tabledata);\n      setData(hData);\n      setTimeout(() => {\n        setsearching(false);\n      }, 1000);\n    });\n  };\n\n  useEffect(() => {\n    gettabledata();\n  }, [BillingCycle == \"Monthly\" && StartDt != null ? StartDt : \" \"]);\n\n  useEffect(() => {\n    gettabledata();\n  }, []);\n\n  //axios for creating new timesheet\n  const handleCreate = async () => {\n    let filteredData = ref.current.filter((d) => d != null);\n\n    ref.current = filteredData;\n\n    let valid = GlobalValidation(ref);\n    !valid ? checkedData.length != 0 && setVisible(!visible) : \"\";\n\n    if (valid) {\n      setValidationMessage(true);\n      setTimeout(() => {\n        setValidationMessage(false);\n      }, 3000);\n      return;\n    } else if (checkedData.length == 0) {\n      setProjectValidation(true);\n      setTimeout(() => {\n        setProjectValidation(false);\n      }, 3000);\n      return;\n    } else {\n      visible\n        ? setCheveronIcon(FaChevronCircleUp)\n        : setCheveronIcon(FaChevronCircleDown);\n      state[\"prjId\"] = checkedData.toString();\n      state[\"EndDt\"] = moment(StartDt).endOf(\"month\").format(\"yyyy-MM-DD\");\n      axios({\n        method: \"post\",\n        url: baseUrl + `/timeandexpensesms/fixedprice/posttimesheet`,\n          \n        data: state,\n      }).then((resp) => {\n        setMessage(resp.data[0].message.split(\"-\")[1]);\n        setAddmsg(true);\n        setTimeout(() => {\n          setAddmsg(false);\n        }, 3000);\n        setCheckboxSelect([]);\n        if (message.includes(\"already exists\")) {\n          return;\n        } else {\n          gettabledata();\n        }\n      });\n    }\n  };\n\n  const getMenus = () => {\n    axios({\n      method: \"GET\",\n      url: baseUrl + `/CommonMS/master/getMenus?loggedUserId=${loggedUserId}`,\n    }).then((resp) => {\n      let data = resp.data;\n\n      data.forEach((item) => {\n        if (item.display_name === textContent) {\n          setRoutes([item]);\n        }\n      });\n      const TMExpensesSubMenu = data\n        .find((item) => item.display_name === \"Time & Expenses\")\n        .subMenus.find(\n          (subMenu) => subMenu.display_name === \"Fixed Price - Create\"\n        );\n\n      const accessLevel = TMExpensesSubMenu\n        ? TMExpensesSubMenu.access_level\n        : null;\n      console.log(\"Access Level:\", accessLevel);\n\n      setDataAccess(accessLevel);\n    });\n  };\n\n  useEffect(() => {\n    getMenus();\n  }, []);\n  //axios for deleting the timesheet\n\n  const deletetimesheet = () => {\n    state[\"prjId\"] = checkedData;\n    let filteredData = ref.current.filter((d) => d != null);\n    ref.current = filteredData;\n    let valid = GlobalValidation(ref);\n    if (valid) {\n      setValidationMessage(true);\n      setTimeout(() => {\n        setValidationMessage(false);\n      }, 3000);\n      return;\n    } else if (checkedData.length == 0) {\n      setProjectValidation(true);\n      setTimeout(() => {\n        setProjectValidation(false);\n      }, 3000);\n      return;\n    }\n\n    axios({\n      method: \"delete\",\n      url:\n        baseUrl +\n        `/timeandexpensesms/fixedprice/deletetimesheet?fromdate=${StartDate}&project_id=${checkedData}`,\n    }).then((resp) => {\n      setDeleteMessage(true);\n      setTimeout(() => {\n        setDeleteMessage(false);\n      }, 3000);\n      setCheckboxSelect([]);\n      gettabledata();\n    });\n  };\n\n  const handleAbort = () => {\n    abortController.current && abortController.current.abort();\n    setsearching(false);\n  };\n  return (\n    <div>\n      <div className=\"col-md-12\">\n        {deleteMessage && selectedData == \"pending\" ? (\n          <div className=\"statusMsg error\">\n            <AiFillWarning />\n            {\"Cannot delete billing timesheet in pending status\"}\n          </div>\n        ) : deleteMessage ? (\n          <div className=\"statusMsg success\">\n            <BiCheck\n              size=\"1.4em\"\n              color=\"green\"\n              strokeWidth={{ width: \"100px\" }}\n            />\n            &nbsp;\n            {\"Billing TimeSheet Deleted Successfully\"}\n          </div>\n        ) : projectvalidation ? (\n          <div className=\"statusMsg error\">\n            <AiFillWarning />\n            {\"Please Select Project\"}\n          </div>\n        ) : validationMessage ? (\n          <div className=\"statusMsg error\">\n            <AiFillWarning />\n            {\"Please select the valid values for highlighted fields\"}\n          </div>\n        ) : addmsg && message.includes(\"already exists\") ? (\n          <div className=\"statusMsg error\">\n            <AiFillWarning />\n            {message}\n          </div>\n        ) : addmsg ? (\n          <div className=\"statusMsg success\">\n            <BiCheck\n              size=\"1.4em\"\n              color=\"green\"\n              strokeWidth={{ width: \"100px\" }}\n            />\n            &nbsp;\n            {message}\n          </div>\n        ) : (\n          \"\"\n        )}\n\n        <div className=\"pageTitle\">\n          <div className=\"childOne\"></div>\n          <div className=\"childTwo\">\n            <h2>Generate Billing Timesheet</h2>\n          </div>\n          <div className=\"childThree\"></div>\n        </div>\n      </div>\n      <ScreenBreadcrumbs\n        routes={routes}\n        currentScreenName={currentScreenName}\n      />\n\n      <div className=\"group mb-5 customCard\">\n        <div className=\"col-md-12 collapseHeader\">\n          <h2>Search Filters</h2>\n          <div className=\"helpBtn\">\n            <GlobalHelp pdfname={HelpPDFName} name={Header} />\n          </div>\n          <div\n            onClick={() => {\n              setVisible(!visible);\n              visible\n                ? setCheveronIcon(FaChevronCircleUp)\n                : setCheveronIcon(FaChevronCircleDown);\n            }}\n          >\n            <span>{cheveronIcon}</span>\n          </div>\n        </div>\n        <CCollapse visible={!visible}>\n          <div className=\"group-content row mb-2\">\n            <div className=\"col-md-3 mb-2\">\n              <div className=\"form-group row\">\n                <label className=\"col-5\" htmlFor=\"BillingCycle\">\n                  Billing Cycle\n                </label>\n                <span className=\"col-1 p-0\">:</span>\n                <div className=\"col-6\">\n                  <select\n                    id=\"BillingCycle\"\n                    name=\"BillingCycle\"\n                    defaultValue={null}\n                    onChange={(e) => {\n                      setBillingCycle(e.target.value);\n                    }}\n                  >\n                    <option value=\"null\">\n                      &lt;&lt; Please Select &gt;&gt;{\" \"}\n                    </option>\n                    <option value=\"Monthly\">Monthly</option>\n                    <option value=\"Weekly\">Weekly</option>\n                    <option value=\"Bi-Weekly\">Bi-Weekly</option>\n                  </select>\n                </div>\n              </div>\n            </div>\n            <div className=\"col-md-3 mb-2\">\n              <div className=\"form-group row\">\n                <label className=\"col-5\" htmlFor=\"TsName\">\n                  Timesheet Name\n                </label>\n                <span className=\"col-1 p-0\">:</span>\n                <div className=\"col-6\">\n                  <input\n                    name=\"TsName\"\n                    type=\"text\"\n                    id=\"TsName\"\n                    placeholder=\"\"\n                    required\n                    onChange={handleChange}\n                    value={state.TsName}\n                  />\n                </div>\n              </div>\n            </div>\n            {BillingCycle == \"Bi-Weekly\" ? (\n              <>\n                <div className=\"col-md-3 mb-2\">\n                  <div className=\"form-group row\">\n                    <label className=\"col-5\" htmlFor=\"StartDt\">\n                      Billing Start Date&nbsp;\n                      <span className=\"required error-text\">*</span>\n                    </label>\n                    <span className=\"col-1 p-0\">:</span>\n                    <div\n                      className=\" datepicker col-6\"\n                      ref={(ele) => {\n                        ref.current[0] = ele;\n                      }}\n                    >\n                      <DatePicker\n                        className=\"StartDt\"\n                        showMonthDropdown\n                        showYearDropdown\n                        dropdownMode=\"select\"\n                        selected={StartDt}\n                        onChange={(e) => {\n                          setState((prev) => ({\n                            ...prev,\n                            [\"StartDt\"]: moment(e).format(\"yyyy-MM-DD\"),\n                            [\"EndDt\"]: moment(StartDt)\n                              .add(13, \"days\")\n                              .format(\"yyyy-MM-DD\"),\n                          }));\n                          setStartDt(e);\n                          setIsEndDateEnabled(false);\n                        }}\n                        placeholderText={\"Billing Start Date\"}\n                        dateFormat=\"dd-MMM-yyyy\"\n                      />\n                    </div>\n                  </div>\n                </div>\n                <div className=\"col-md-3 mb-2\">\n                  <div className=\"form-group row\">\n                    <label className=\"col-5\" htmlFor=\"EndDt\">\n                      Billing End Date&nbsp;\n                      <span className=\"required error-text\">*</span>\n                    </label>\n                    <span className=\"col-1 p-0\">:</span>\n                    <div\n                      className=\" datepicker col-6\"\n                      ref={(ele) => {\n                        ref.current[1] = ele;\n                      }}\n                    >\n                      <DatePicker\n                        className={\n                          StartDt?.length != 0 ? \"invoicedisable\" : \"EndDt\"\n                        }\n                        selected={\n                          state.StartDt === \"\"\n                            ? EndDt\n                            : moment(StartDt).add(13, \"days\")._d\n                        }\n                        onChange={(e) => {\n                          setState((prev) => ({\n                            ...prev,\n                            [\"EndDt\"]: moment(e).format(\"yyyy-MM-DD\"),\n                          }));\n                          setEndDt(e);\n                        }}\n                        showMonthDropdown\n                        showYearDropdown\n                        dropdownMode=\"select\"\n                        placeholderText={\"Billing End Date\"}\n                        dateFormat=\"dd-MMM-yyyy\"\n                        disabled={!isEndDateEnabled}\n                      />\n                    </div>\n                  </div>\n                </div>\n              </>\n            ) : BillingCycle == \"Weekly\" ? (\n              <>\n                <div className=\"col-md-3 mb-2\">\n                  <div className=\"form-group row\">\n                    <label className=\"col-5\" htmlFor=\"StartDt\">\n                      Billing Start Date&nbsp;\n                      <span className=\"required error-text\">*</span>\n                    </label>\n                    <span className=\"col-1 p-0\">:</span>\n                    <div\n                      className=\" datepicker col-6\"\n                      ref={(ele) => {\n                        ref.current[0] = ele;\n                      }}\n                    >\n                      <DatePicker\n                        className=\"StartDt\"\n                        showMonthDropdown\n                        showYearDropdown\n                        dropdownMode=\"select\"\n                        selected={StartDt}\n                        onChange={(e) => {\n                          setState((prev) => ({\n                            ...prev,\n                            [\"StartDt\"]: moment(e).format(\"yyyy-MM-DD\"),\n                            [\"EndDt\"]: moment(StartDt)\n                              .add(6, \"days\")\n                              .format(\"yyyy-MM-DD\"),\n                          }));\n                          setStartDt(e);\n                          setIsEndDateEnabled(false);\n                        }}\n                        placeholderText={\"Billing Start Date\"}\n                        dateFormat=\"dd-MMM-yyyy\"\n                      />\n                    </div>\n                  </div>\n                </div>\n                <div className=\"col-md-3 mb-2\">\n                  <div className=\"form-group row \">\n                    <label className=\"col-5\" htmlFor=\"EndDt\">\n                      Billing End Date&nbsp;\n                      <span className=\"required error-text\">*</span>\n                    </label>\n                    <span className=\" datepicker col-1 p-0\">:</span>\n                    <div\n                      className=\"datepicker col-6\"\n                      ref={(ele) => {\n                        ref.current[1] = ele;\n                      }}\n                    >\n                      <DatePicker\n                        className=\"EndDt\"\n                        showMonthDropdown\n                        showYearDropdown\n                        dropdownMode=\"select\"\n                        selected={\n                          state.StartDt == \"\"\n                            ? EndDt\n                            : moment(StartDt).add(6, \"days\")._d\n                        }\n                        onChange={(e) => {\n                          setState((prev) => ({\n                            ...prev,\n                            [\"EndDt\"]: moment(e).format(\"yyyy-MM-DD\"),\n                          }));\n                          setEndDt(e);\n                        }}\n                        placeholderText={\"Billing End Date\"}\n                        dateFormat=\"dd-MMM-yyyy\"\n                        disabled={!isEndDateEnabled}\n                      />\n                    </div>\n                  </div>\n                </div>\n              </>\n            ) : BillingCycle == \"Monthly\" ? (\n              <>\n                <div className=\"col-md-3 mb-2\">\n                  <div className=\"form-group row\">\n                    <label className=\"col-5\" htmlFor=\"StartDt\">\n                      Month&nbsp;\n                      <span className=\"required error-text\">*</span>\n                    </label>\n                    <span className=\"col-1 p-0\">:</span>\n                    <div\n                      className=\" datepicker col-6\"\n                      ref={(ele) => {\n                        ref.current[0] = ele;\n                      }}\n                    >\n                      <DatePicker\n                        className=\"StartDt\"\n                        selected={StartDt}\n                        onChange={(e) => {\n                          setState((prev) => ({\n                            ...prev,\n                            [\"StartDt\"]: moment(e).format(\"yyyy-MM-DD\"),\n                          }));\n                          setStartDt(e);\n                          gettabledata();\n                          setIsEndDateEnabled(false);\n                        }}\n                        placeholderText={\"Billing Start Date\"}\n                        dateFormat=\"MMM-yyyy\"\n                        showMonthYearPicker\n                      />\n                    </div>\n                  </div>\n                </div>\n              </>\n            ) : (\n              <>\n                <div className=\"col-md-3 mb-2\">\n                  <div className=\"form-group row\">\n                    <label className=\"col-5\" htmlFor=\"StartDt\">\n                      Billing Start Date&nbsp;\n                      <span className=\"required error-text\">*</span>\n                    </label>\n                    <span className=\"  col-1 p-0\">:</span>\n                    <div\n                      className=\" datepicker col-6\"\n                      ref={(ele) => {\n                        ref.current[0] = ele;\n                      }}\n                    >\n                      <DatePicker\n                        className=\"StartDt\"\n                        showMonthDropdown\n                        showYearDropdown\n                        dropdownMode=\"select\"\n                        selected={StartDt}\n                        minDate={StartDt}\n                        onChange={(e) => {\n                          setState((prev) => ({\n                            ...prev,\n                            [\"StartDt\"]: moment(e).format(\"yyyy-MM-DD\"),\n                          }));\n                          setStartDt(e);\n                          setIsEndDateEnabled(false);\n                        }}\n                        placeholderText={\"Billing Start Date\"}\n                        dateFormat=\"dd-MMM-yyyy\"\n                      />\n                    </div>\n                  </div>\n                </div>{\" \"}\n                <div className=\"col-md-3 mb-2\">\n                  <div className=\"form-group row\">\n                    <label className=\"col-5\" htmlFor=\"EndDt\">\n                      Billing End Date&nbsp;\n                      <span className=\"required error-text\">*</span>\n                    </label>\n                    <span className=\"col-1 p-0\">:</span>\n                    <div\n                      className=\"datepicker col-6\"\n                      ref={(ele) => {\n                        ref.current[1] = ele;\n                      }}\n                    >\n                      <DatePicker\n                        className=\"EndDt\"\n                        showMonthDropdown\n                        showYearDropdown\n                        minDate={EndDt}\n                        dropdownMode=\"select\"\n                        selected={EndDt}\n                        onChange={(e) => {\n                          setState((prev) => ({\n                            ...prev,\n                            [\"EndDt\"]: moment(e).format(\"yyyy-MM-DD\"),\n                          }));\n                          setEndDt(e);\n                        }}\n                        placeholderText={\"Billing End Date\"}\n                        dateFormat=\"dd-MMM-yyyy\"\n                        {...(BillingCycle != \"\" ? (\n                          <>disabled={!isEndDateEnabled}</>\n                        ) : (\n                          \"\"\n                        ))}\n                      />\n                    </div>\n                  </div>\n                </div>\n              </>\n            )}\n            {dataAccess === 1000 ? (\n              <div className=\"col-md-12 col-sm-12 col-xs-12 btn-container center my-2 \">\n                <button\n                  type=\"button\"\n                  className=\"btn btn-primary\"\n                  title=\"Search\"\n                  onClick={handleCreate}\n                >\n                  <FaCheck /> Create{\" \"}\n                </button>\n                <button\n                  type=\"button\"\n                  className=\"btn btn-sm btn-secondary\"\n                  title=\"Cancel\"\n                  onClick={deletetimesheet}\n                >\n                  <ImCross fontSize={\"11px\"} /> Cancel{\" \"}\n                </button>\n              </div>\n            ) : (\n              \"\"\n            )}\n          </div>\n        </CCollapse>\n        <div className=\"mt-2\">\n          <FixedPriceCreateTable\n            data={data}\n            setCheckedData={setCheckedData}\n            value={value}\n            rows={rows}\n            selectedData={selectedData}\n            setSelectedData={setSelectedData}\n            checkboxSelect={checkboxSelect}\n            setCheckboxSelect={setCheckboxSelect}\n            dataAccess={dataAccess}\n          />\n          {searching ? <Loader handleAbort={handleAbort} /> : \"\"}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default FixedPriceCreate;\n"],"names":["props","data","rows","setCheckedData","setSelectedData","checkboxSelect","setCheckboxSelect","dataAccess","useState","mainData","setMainData","headerData","setHeaderData","bodyData","setBodyData","useEffect","JSON","parse","stringify","length","splice","filtersData","contains","value","matchMode","FilterMatchMode","global","filters1","setFilters1","globalFilterValue1","setGlobalFilterValue1","onGlobalFilterChange1","e","target","_filters1","header1","className","defaultValue","onChange","placeholder","style","textAlign","verticalAlign","dynamicColumns","Object","keys","map","col","i","body","field","title","sortable","header","paginatorTemplate","currentPageReportTemplate","rowsPerPageOptions","paginator","showGridlines","dataKey","filters","responsiveLayout","emptyMessage","selection","onSelectionChange","fData","d","id","SData","status","handleChange","selectionMode","checkedData","selectedData","prjId","TsName","StartDt","EndDt","month","state","setState","setStartDt","setEndDt","BillingCycle","setBillingCycle","visible","setVisible","FaChevronCircleUp","cheveronIcon","setCheveronIcon","setData","addmsg","setAddmsg","searching","setsearching","message","setMessage","validationMessage","setValidationMessage","deleteMessage","setDeleteMessage","projectvalidation","setProjectValidation","isEndDateEnabled","setIsEndDateEnabled","abortController","useRef","loggedUserId","localStorage","getItem","routes","setRoutes","baseUrl","environment","ref","date","Date","FromDate","getFullYear","getMonth","FDate","moment","format","StartDate","lastDay","lDate","EndDate","endOf","setDataAccess","console","log","gettabledata","startOf","current","AbortController","axios","method","url","signal","then","resp","tabledata","hData","Department","Customer","Project","concat","setTimeout","handleCreate","filteredData","filter","valid","GlobalValidation","FaChevronCircleDown","toString","split","includes","forEach","item","display_name","TMExpensesSubMenu","find","subMenus","subMenu","accessLevel","access_level","size","color","strokeWidth","width","ScreenBreadcrumbs","currentScreenName","GlobalHelp","pdfname","name","onClick","htmlFor","type","required","event","preventDefault","prevProps","ele","showMonthDropdown","showYearDropdown","dropdownMode","selected","prev","add","placeholderText","dateFormat","_d","disabled","showMonthYearPicker","minDate","fontSize","Loader","handleAbort","abort"],"sourceRoot":""}