{"version":3,"file":"static/js/4109.c41c3edb.chunk.js","mappings":"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","sources":["views/Customer/FinancialsTable.js","views/Customer/Financials.js"],"sourcesContent":["import React, { useState, useRef } from \"react\";\nimport MaterialReactTable from \"material-react-table\";\nimport { useEffect } from \"react\";\nimport moment from \"moment\";\nimport Loader from \"../Loader/Loader\";\nimport { environment } from \"../../environments/environment\";\nimport { FaChevronCircleRight, FaChevronCircleDown } from \"react-icons/fa\";\nimport axios from \"axios\";\nimport \"./FinancialsTable.scss\";\n\nexport default function FinancialsTable(props) {\n  const [projectId, setProjectId] = useState();\n  const {\n    tableData,\n    column,\n    departments,\n    month,\n    startDate,\n    duration,\n    customerId,\n    project,\n    customer,\n    resources,\n  } = props;\n  // console.log(column, \"column>>>>>>>>>>>>>>\")\n  const baseUrl = environment.baseUrl;\n  const abortController = useRef(null);\n  const [loader, setLoader] = useState(false);\n  const name = column[0];\n  const kpi = column[1];\n  const handleAbort = () => {\n    abortController.current && abortController.current.abort();\n    setLoader(false);\n  };\n\n  // console.log(\"slice>>>\", column.slice(2).sort())\n  const dates = column.slice(2).sort();\n  // console.log(dates, \"dates........\")\n  const adjustedColumn = [name, kpi, ...dates, \"Total\"];\n  const [data, setData] = useState(adjustedColumn);\n  // console.log(\"column>>>>>>>>>>>\", adjustedColumn)\n\n  const [nodes, setNodes] = useState([]);\n  useEffect(() => {\n    setData(adjustedColumn);\n  }, [props.column]);\n  useEffect(() => {\n    let id = 1;\n    for (let i = 0; i < tableData?.length; i++) {\n      tableData[i].id = id;\n      id++;\n      if (id % 10000 == 17) {\n        id += 9984;\n      }\n    }\n\n    setNodes(jsonToTree(tableData));\n  }, [tableData]);\n\n  const jsonToTree = (flatArray, options) => {\n    options = {\n      id: \"id\",\n      parentId: \"parentId\",\n      children: \"subRows\",\n      ...options,\n    };\n    const dictionary = {};\n    const tree = [];\n    const children = options.children;\n    flatArray.forEach((node) => {\n      const nodeId = node[options.id];\n      const nodeParentId = node[options.parentId];\n      dictionary[nodeId] = {\n        [children]: [],\n        ...node,\n        ...dictionary[nodeId],\n      };\n      dictionary[nodeParentId] = dictionary[nodeParentId] || { [children]: [] };\n      dictionary[nodeParentId][children].push(dictionary[nodeId]);\n    });\n\n    Object.values(dictionary).forEach((obj) => {\n      if (typeof obj[options.id] === \"undefined\") {\n        tree.push(...obj[children]);\n      }\n    });\n    return tree;\n  };\n\n  {\n    /*-------------------------------------For Getting Customer's According to BU------------------------------ */\n  }\n\n  const HandleInsertedData = (objId, objLabel, innerColumn) => {\n    abortController.current = new AbortController();\n\n    axios({\n      method: \"post\",\n      url: baseUrl + \"/customersms/Financials/getFinancials\",\n\n      data: {\n        indTypesId: -1,\n        indTypes: -1,\n        dpResId: -1,\n        dpRes: -1,\n        cslResId: -1,\n        cslRes: -1,\n        engComp: -1,\n        contTerms: -1,\n        engCountries: -1,\n        source: -1,\n        resTyp: -1,\n        custCountries: -1,\n        sortBy: -1,\n        salesExecs: -1,\n        salesExecId: -1,\n        measures: -1,\n        resId: -1,\n        prjId: -1,\n        custId: customerId,\n        busUnitId: -1,\n        tarType: \"Project\",\n        srcTypeId: customerId,\n        srcType: \"Customer\",\n        customers: customerId,\n        busUnits: -1,\n        searchType: \"Customer\",\n        countries: -1,\n        duration: duration,\n        month: startDate,\n        ownerDivisions: -1,\n        direction: \"\",\n      },\n\n      signal: abortController.current.signal,\n    })\n      .then((res) => {\n        setLoader(false);\n\n        let respData = res.data.data;\n\n        respData = respData.map((item) => {\n          return {\n            ...item,\n\n            name: item.name + \"_\" + objId + \"_\" + innerColumn,\n          };\n        });\n\n        setNodes((prevNodes) => {\n          const grossMarginIndex = prevNodes.findIndex((node) => {\n            return node.descr === \"Planned Revenue\" && node.name === objLabel;\n          });\n\n          if (grossMarginIndex !== -1) {\n            return [\n              ...prevNodes.slice(0, grossMarginIndex + 1),\n\n              ...respData.map((data, i) => ({ ...data, id: objId + i + 1 })),\n\n              ...prevNodes.slice(grossMarginIndex + 1),\n            ];\n          } else {\n            return prevNodes;\n          }\n        });\n      })\n\n      .catch((e) => {\n        setLoader(false);\n\n        console.log(\"Error :\", e);\n      });\n  };\n\n  useEffect(() => {\n    HandleInsertedData();\n  }, []);\n\n  const HandleInsertedData1 = (\n    objId,\n    objLabel,\n    innerColumn,\n    source,\n    custBU\n  ) => {\n    setProjectId(objId);\n    abortController.current = new AbortController();\n    axios({\n      method: \"post\",\n      url:\n        baseUrl +\n        `/revenuemetricsms/RevenueMarginAnalysis/GetFinancialsFinalData`,\n      data: {\n        indTypesId: -1,\n        indTypes: -1,\n        dpResId: -1,\n        dpRes: -1,\n        cslResId: -1,\n        cslRes: -1,\n        engComp: -1,\n        contTerms: -1,\n        engCountries: -1,\n        source: -1,\n        resTyp: -1,\n        custCountries: -1,\n        sortBy: -1,\n        salesExecs: -1,\n        salesExecId: -1,\n        measures: -1,\n        resId: -1,\n        prjId: objId,\n        custId: custBU,\n        busUnitId: -1,\n        tarType: \"BusinessUnit\",\n        srcTypeId: objId,\n        srcType: \"Project\",\n        customers: custBU,\n        busUnits: -1,\n        searchType: \"Customer\",\n        countries: -1,\n        duration: duration,\n        month: startDate,\n        ownerDivisions: -1,\n      },\n      signal: abortController.current.signal,\n    })\n      .then((res) => {\n        setLoader(false);\n        let respData = res.data.data;\n        respData = respData.map((item) => {\n          return {\n            ...item,\n            name: item.name + \"_\" + objId + \"_\" + innerColumn + \"_\" + custBU,\n          };\n        });\n        setNodes((prevNodes) => {\n          const grossMarginIndex = prevNodes.findIndex((node) => {\n            return (\n              node.kpi === \"Planned Revenue\" &&\n              node.name.split(\"_\")[0] === objLabel\n            );\n          });\n          if (grossMarginIndex !== -1) {\n            return [\n              ...prevNodes.slice(0, grossMarginIndex + 1),\n              ...respData.map((data, i) => ({ ...data, id: objId + i + 1 })),\n              ...prevNodes.slice(grossMarginIndex + 1),\n            ];\n          } else {\n            return prevNodes;\n          }\n        });\n      })\n      .catch((e) => {\n        setLoader(false);\n        console.log(\"Error :\", e);\n      });\n  };\n  useEffect(() => {\n    HandleInsertedData1();\n  }, []);\n\n  const HandleInsertedData2 = (\n    objId,\n    objLabel,\n    innerColumn,\n    source,\n    custBU,\n    custId\n  ) => {\n    abortController.current = new AbortController();\n    axios({\n      method: \"post\",\n      url: baseUrl + `/customersms/Financials/getFinancials`,\n      data: {\n        indTypesId: -1,\n        indTypes: -1,\n        dpResId: -1,\n        dpRes: -1,\n        cslResId: -1,\n        cslRes: -1,\n        engComp: -1,\n        contTerms: -1,\n        engCountries: -1,\n        source: -1,\n        resTyp: -1,\n        custCountries: -1,\n        sortBy: -1,\n        salesExecs: -1,\n        salesExecId: -1,\n        measures: -1,\n        resId: -1,\n        prjId: projectId,\n        custId: custBU,\n        busUnitId: objId,\n        tarType: \"Res\",\n        srcTypeId: objId,\n        srcType: \"BusinessUnit\",\n        customers: custBU,\n        busUnits: -1,\n        searchType: \"Customer\",\n        countries: -1,\n        duration: duration,\n        month: startDate,\n        ownerDivisions: -1,\n      },\n      signal: abortController.current.signal,\n    })\n      .then((res) => {\n        setLoader(false);\n        let respData = res.data.data;\n        respData = respData.map((item) => {\n          return {\n            ...item,\n            name:\n              item.name +\n              \"_\" +\n              objId +\n              \"_\" +\n              innerColumn +\n              \"_\" +\n              custBU +\n              \"_\" +\n              custId,\n          };\n        });\n        setNodes((prevNodes) => {\n          const grossMarginIndex = prevNodes.findIndex((node) => {\n            return (\n              node.kpi === \"Planned Revenue\" &&\n              node.name.split(\"_\")[0] === objLabel\n            );\n          });\n          if (grossMarginIndex !== -1) {\n            return [\n              ...prevNodes.slice(0, grossMarginIndex + 1),\n              ...respData.map((data, i) => ({ ...data, id: objId + i + 1 })),\n              ...prevNodes.slice(grossMarginIndex + 1),\n            ];\n          } else {\n            return prevNodes;\n          }\n        });\n      })\n      .catch((e) => {\n        setLoader(false);\n        console.log(\"Error :\", e);\n      });\n  };\n\n  useEffect(() => {\n    HandleInsertedData2();\n  }, []);\n\n  const HandleInsertedData3 = (\n    objId,\n    objLabel,\n    innerColumn,\n    source,\n    custBU,\n    projectID,\n    custprojectId\n  ) => {\n    abortController.current = new AbortController();\n    axios({\n      method: \"post\",\n      url: baseUrl + `/customersms/Financials/getFinancials`,\n      data: {\n        indTypesId: -1,\n        indTypes: -1,\n        dpResId: -1,\n        dpRes: -1,\n        cslResId: -1,\n        cslRes: -1,\n        engComp: -1,\n        contTerms: -1,\n        engCountries: -1,\n        source: -1,\n        resTyp: -1,\n        custCountries: -1,\n        sortBy: -1,\n        salesExecs: -1,\n        salesExecId: -1,\n        measures: -1,\n        resId: -1,\n        prjId: custprojectId,\n        custId: custBU,\n        busUnitId: projectID,\n        tarType: innerColumn,\n        srcTypeId: objId,\n        srcType: source,\n        customers: custBU,\n        busUnits: -1,\n        searchType: \"Customer\",\n        countries: -1,\n        duration: duration,\n        month: startDate,\n        ownerDivisions: -1,\n      },\n      signal: abortController.current.signal,\n    })\n      .then((res) => {\n        setLoader(false);\n        let respData = res.data.data;\n        respData = respData.map((item) => {\n          return {\n            ...item,\n            name: item.name + \"_\" + objId + \"_\" + innerColumn + \"_\" + custBU,\n          };\n        });\n        setNodes((prevNodes) => {\n          const grossMarginIndex = prevNodes.findIndex((node) => {\n            return (\n              node.kpi === \"Planned Revenue\" &&\n              node.name.split(\"_\")[0].replace(/\\s+/g, \" \") ===\n                objLabel.replace(/\\s+/g, \" \")\n            );\n          });\n          if (grossMarginIndex !== -1) {\n            return [\n              ...prevNodes.slice(0, grossMarginIndex + 1),\n              ...respData.map((data, i) => ({ ...data, id: objId + i + 1 })),\n              ...prevNodes.slice(grossMarginIndex + 1),\n            ];\n          } else {\n            return prevNodes;\n          }\n        });\n      })\n      .catch((e) => {\n        setLoader(false);\n        console.log(\"Error :\", e);\n      });\n  };\n\n  useEffect(() => {\n    HandleInsertedData3();\n  }, []);\n\n  const dynamicColumns = [\n    {\n      header: (\n        // <div className=\"header-label\">BU Customer Project Res</div>\n        <div className=\"legendContainer wrap\">\n          <div className=\"legend green\">\n            <div className=\"legendCircle\"></div>\n            <div className=\"legendTxt\">\n              <b>Customer</b>\n            </div>\n          </div>\n          <div className=\"legend\">\n            <div\n              className=\"legendCircle\"\n              style={{ backgroundColor: \"#800080\" }}\n            ></div>\n            <div className=\"legendTxt\">\n              <b>Project</b>\n            </div>\n          </div>\n\n          <div className=\"legend \">\n            <div\n              className=\"legendCircle\"\n              style={{ backgroundColor: \"#e17658\" }}\n            ></div>\n            <div className=\"legendTxt\">\n              <b>BU</b>\n            </div>\n          </div>\n\n          <div className=\"legend black\">\n            <div className=\"legendCircle\"></div>\n            <div className=\"legendTxt\">\n              <b>Res</b>\n            </div>\n          </div>\n        </div>\n      ),\n      accessorKey: `name`,\n      enableGrouping: false,\n      GroupedCell: ({ cell }) => {\n        const department = customer.find(\n          (dep) => dep.fullName === cell.getValue()\n        );\n\n        const [activeIcons, setActiveIcons] = useState({});\n\n        const handleClick = () => {\n          if (department) {\n            const { id, fullName } = department;\n\n            const isDataPresent = nodes.some((node) => {\n              return node.name.includes(`_${id}`);\n            });\n            if (isDataPresent) {\n              setActiveIcons((prevActiveIcons) => ({\n                ...prevActiveIcons,\n\n                [id]: false,\n              }));\n\n              setNodes((prevNodes) =>\n                prevNodes.filter((node) => !node.name.includes(`_${id}`))\n              );\n            } else {\n              setActiveIcons((prevActiveIcons) => ({\n                ...prevActiveIcons,\n\n                [id]: true,\n              }));\n\n              setLoader(false);\n\n              HandleInsertedData(id, fullName, \"Project\");\n            }\n          }\n        };\n\n        //--------------------//----------------------//-----------------------First Child Layer (Project)\n\n        let custBU;\n\n        const cust = project.find((dep) => {\n          if (dep.name === cell.getValue().split(\"_\")[0]) {\n            const value = cell.getValue().split(\"_\")[1];\n\n            custBU = value;\n          }\n\n          return dep.name === cell.getValue().split(\"_\")[0];\n        });\n\n        const [activeIcons1, setActiveIcons1] = useState({});\n\n        const handleClick1 = () => {\n          if (cust) {\n            const { id, name } = cust;\n\n            const isDataPresent = nodes.some((node) => {\n              return node.name.includes(`_${id}`);\n            });\n            if (isDataPresent) {\n              setActiveIcons1((prevActiveIcons) => ({\n                ...prevActiveIcons,\n\n                [id]: false,\n              }));\n\n              setNodes((prevNodes) =>\n                prevNodes.filter((node) => !node.name.includes(`_${id}`))\n              );\n            } else {\n              setActiveIcons1((prevActiveIcons) => ({\n                ...prevActiveIcons,\n\n                [id]: true,\n              }));\n\n              setLoader(false);\n\n              HandleInsertedData1(id, name, \"BusinessUnit\", \"Customer\", custBU);\n            }\n          }\n        };\n\n        // //--------------------//----------------------//-----------------------Second Child Layer (BU)\n\n        let projBU;\n        let custId;\n        const proj = departments.find((dep) => {\n          if (dep.label === cell.getValue().split(\"_\")[0]) {\n            const value = cell.getValue().split(\"_\")[3];\n            projBU = value;\n            custId = cell.getValue().split(\"_\")[1];\n          }\n          return (\n            dep.label.split(\"_\")[0] === cell.getValue().split(\"_\")[0] ||\n            dep.label.split(\"_\")[0] === cell.getValue().split(\"_\")[0]\n          );\n        });\n\n        const [activeIcons2, setActiveIcons2] = useState({});\n\n        const handleClick2 = () => {\n          if (proj) {\n            const { value, label } = proj;\n            const isDataPresent = nodes.some((node) => {\n              return node.name.includes(`_${value}`);\n            });\n            if (isDataPresent) {\n              setActiveIcons2((prevActiveIcons) => ({\n                ...prevActiveIcons,\n                [value]: false,\n              }));\n              setNodes((prevNodes) =>\n                prevNodes.filter((node) => !node.name.includes(`_${value}`))\n              );\n            } else {\n              setActiveIcons2((prevActiveIcons) => ({\n                ...prevActiveIcons,\n                [value]: true,\n              }));\n              setLoader(false);\n              HandleInsertedData2(\n                value,\n                label,\n                \"Res\",\n                \"BusinessUnit\",\n                projBU,\n                custId\n              );\n            }\n          }\n        };\n\n        // //--------------------//----------------------//-----------------------Third Child Layer (Resource)\n\n        let resBU;\n        let projectID;\n        let custprojectId;\n        const res = resources.find((dep) => {\n          if (dep.fullName === cell.getValue().split(\"_\")[0]) {\n            const value = cell.getValue().split(\"_\")[3];\n            projectID = cell.getValue().split(\"_\")[1];\n            custprojectId = cell.getValue().split(\"_\")[4];\n            resBU = value;\n          }\n          // console.log(\"cel>>>\", cell.getValue().split(\"_\")[0])\n          // return dep.fullName.split(\"_\")[0].trim() === cell.getValue().split(\"_\")[0].trim();\n          return dep.fullName.split(\"_\")[0] === cell.getValue().split(\"_\")[0];\n        });\n\n        const [activeIcons3, setActiveIcons3] = useState({});\n\n        const handleClick3 = () => {\n          if (res) {\n            const { id, fullName } = res;\n            const isDataPresent = nodes.some((node) => {\n              return node.name.includes(`_${id}`);\n            });\n            if (isDataPresent) {\n              setActiveIcons3((prevActiveIcons) => ({\n                ...prevActiveIcons,\n                [id]: false,\n              }));\n              setNodes((prevNodes) =>\n                prevNodes.filter((node) => !node.name.includes(`_${id}`))\n              );\n            } else {\n              setActiveIcons3((prevActiveIcons) => ({\n                ...prevActiveIcons,\n                [id]: true,\n              }));\n              setLoader(false);\n              HandleInsertedData3(\n                id,\n                fullName,\n                \"Leaf\",\n                \"Res\",\n                resBU,\n                projectID,\n                custprojectId\n              );\n            }\n          }\n        };\n\n        if (department) {\n          const { id } = department;\n          const isActive = activeIcons[id];\n          return (\n            <span\n              style={{ cursor: \"pointer\" }}\n              value={department.id}\n              onClick={() => {\n                handleClick();\n              }}\n              className={\"parent\"}\n            >\n              {isActive ? <FaChevronCircleDown /> : <FaChevronCircleRight />}{\" \"}\n              <b\n                style={{ color: \"rgba(66, 144, 99, 0.9)\" }}\n                title={\n                  department.fullName + \" (\" + cell.row.original.count + \")\"\n                }\n              >\n                {department.fullName} ({cell.row.original.count})\n              </b>\n            </span>\n          );\n        } else if (cust) {\n          const { id } = cust;\n\n          const isActive1 = activeIcons1[id];\n\n          return (\n            <span\n              style={{ cursor: \"pointer\" }}\n              value={cust.id}\n              onClick={() => {\n                handleClick1();\n              }}\n              className={\"parent\"}\n            >\n              {cell.row.original.name.split(\"_\")[0] == \"\" ? (\n                \"Summary\"\n              ) : (\n                <>\n                  {isActive1 ? (\n                    <FaChevronCircleDown />\n                  ) : (\n                    <FaChevronCircleRight />\n                  )}{\" \"}\n                  <b\n                    style={{ color: \"purple\" }}\n                    title={cust.name + \" (\" + cell.row.original.count + \")\"}\n                  >\n                    {cell.getValue().split(\"_\")[0] == \"\" ? (\n                      <div style={{ justifyContent: \"center\" }}>Summary</div>\n                    ) : (\n                      \"\" + cust.name + \"(\" + cell.row.original.count + \")\"\n                    )}\n                  </b>\n                </>\n              )}\n            </span>\n          );\n        } else if (proj) {\n          const { value } = proj;\n          const isActive2 = activeIcons2[value];\n          return (\n            <span\n              style={{ cursor: \"pointer\" }}\n              value={proj.value}\n              onClick={() => {\n                handleClick2();\n              }}\n              className={\"parent\"}\n            >\n              {isActive2 ? <FaChevronCircleDown /> : <FaChevronCircleRight />}{\" \"}\n              <b\n                style={{ color: \"#e17658\" }}\n                title={proj.label + \" (\" + cell.row.original.count + \")\"}\n              >\n                {proj.label} ({cell.row.original.count})\n              </b>\n            </span>\n          );\n        } else if (res) {\n          const { id } = res;\n          const isActive3 = activeIcons3[id];\n          return (\n            <span\n              style={{ cursor: \"pointer\" }}\n              value={res.id}\n              onClick={() => {\n                handleClick3();\n              }}\n              className={\"parent\"}\n            >\n              {isActive3 ? <FaChevronCircleDown /> : <FaChevronCircleRight />}{\" \"}\n              <b style={{ color: \"#333\" }} title={res.fullName}>\n                {res.fullName}\n              </b>\n            </span>\n          );\n        } else {\n          return (\n            <span\n              className=\"child\"\n              style={{\n                color:\n                  cell.getValue().split(\"_\")[2] === \"Customer\"\n                    ? \"rgba(66, 144, 99, 0.9)\"\n                    : \"\",\n                display: \"flex\",\n                justifyContent: \"center\",\n              }}\n              title={\n                cell.row.original.name === \"\"\n                  ? \"Summary\"\n                  : cell.getValue().split(\"_\")[0] +\n                    \" (\" +\n                    cell.row.original.count +\n                    \")\"\n              }\n            >\n              <b\n                style={{\n                  color:\n                    cell.getValue().split(\"_\")[2] == \"Project\"\n                      ? \"rgba(66, 144, 99, 0.9)\"\n                      : cell.getValue().split(\"_\")[2] == \"BusinessUnit\"\n                      ? \"purple\"\n                      : cell.getValue().split(\"_\")[2] == \"Res\"\n                      ? \"#e17658\"\n                      : cell.getValue().split(\"_\")[2] == \"Leaf\"\n                      ? \"#333\"\n                      : \"\",\n                }}\n                className=\"summary\"\n              >\n                {cell.row.original.name == \"\" ? (\n                  \"Summary\"\n                ) : cell.getValue().split(\"_\")[0] == \"\" ? (\n                  \"Summary\"\n                ) : (\n                  <div onClick={handleClick1}>\n                    <FaChevronCircleRight /> {cell.getValue().split(\"_\")[0]}\n                  </div>\n                )}{\" \"}\n                {cell.getValue().split(\"_\")[2] == \"Leaf\"\n                  ? \"\"\n                  : \"(\" + cell.row.original.count + \")\"}\n              </b>{\" \"}\n            </span>\n          );\n        }\n      },\n    },\n    {\n      header: \"\",\n      accessorKey: `kpi`,\n      Cell: ({ cell }) => {\n        // console.log(\"Data>>>\", cell.row.original.name)\n        const department = customer.find((dep) => {\n          return dep.fullName === cell.row.original.name;\n        });\n\n        const cust = project.find((dep) => {\n          return dep.name === cell.row.original.name.split(\"_\")[0];\n        });\n\n        const proj = departments.find((dep) => {\n          return (\n            dep.label.split(\"_\")[0] === cell.row.original.name.split(\"_\")[0]\n          );\n        });\n\n        const res = resources.find((dep) => {\n          return (\n            dep.fullName.split(\"_\")[0] === cell.row.original.name.split(\"_\")[0]\n          );\n        });\n\n        return (\n          <span className=\"kpi\">\n            <b\n              style={{\n                color: department\n                  ? \"rgba(66, 144, 99, 0.9)\"\n                  : cust\n                  ? \"purple\"\n                  : proj\n                  ? \"#e17658\"\n                  : res\n                  ? \"#333\"\n                  : cell.row.original.name.split(\"_\")[2] == \"Project\"\n                  ? \"rgba(66, 144, 99, 0.9)\"\n                  : cell.row.original.name.split(\"_\")[2] == \"BusinessUnit\"\n                  ? \"purple\"\n                  : cell.row.original.name.split(\"_\")[2] == \"Res\"\n                  ? \"#e17658\"\n                  : cell.row.original.name.split(\"_\")[2] == \"Leaf\"\n                  ? \"#333\"\n                  : \"\",\n              }}\n            >\n              {cell.getValue()}\n            </b>\n          </span>\n        );\n      },\n    },\n  ];\n\n  data.forEach((item, index) => {\n    if (index > 1 && item !== \"Total\") {\n      const dateObj = new Date(\n        `${item.slice(0, 4)}-${item.slice(5, 7)}-${item.slice(8, 10)}`\n      );\n      const header = dateObj\n        .toLocaleDateString(\"en-US\", { month: \"short\", year: \"numeric\" })\n        .replace(\" \", \"-\");\n\n      dynamicColumns?.push({\n        header,\n        accessorKey: `${item}`,\n        className: \"software\",\n        Cell: ({ cell }) => (\n          <span>\n            {cell.row.original.kpi == \"Planned Revenue\" ||\n            cell.row.original.kpi == \"Actual Revenue\" ||\n            cell.row.original.kpi == \"Recognized Revenue\" ||\n            cell.row.original.kpi == \"Resource Direct Cost\" ||\n            cell.row.original.kpi == \"Other Direct Cost\" ||\n            cell.row.original.kpi == \"Gross Margin\" ? (\n              <span style={{ display: \"block\", float: \"left\" }}>$</span>\n            ) : (\n              \"\"\n            )}\n            <span style={{ display: \"block\", float: \"right\" }}>\n              {cell.getValue() == null\n                ? 0\n                : cell.getValue()?.toLocaleString(\"en-US\")}\n              {cell.row.original.kpi == \"Gross Margin %\" ||\n              cell.row.original.kpi == \"Billable Utilization\" ||\n              cell.row.original.kpi == \"FTE\" ||\n              cell.row.original.kpi == \"SUBK\" ||\n              cell.row.original.kpi == \"Billed Utilization\" ||\n              cell.row.original.kpi == \"SUBK\" ? (\n                <span>%</span>\n              ) : (\n                \"\"\n              )}\n            </span>\n          </span>\n        ),\n      });\n      // console.log(\"dynamicColumns>>>>\", dynamicColumns)\n    }\n  });\n\n  {\n    /*----------------------------------Total-------------------------------- */\n  }\n\n  const columnIndex = dynamicColumns.length;\n  const newColumn = {\n    header: <b>Total</b>,\n    accessorKey: `Total`,\n    Cell: ({ cell }) => (\n      <>\n        {cell.row.original.kpi == \"Planned Revenue\" ||\n        cell.row.original.kpi == \"Actual Revenue\" ||\n        cell.row.original.kpi == \"Recognized Revenue\" ||\n        cell.row.original.kpi == \"Resource Direct Cost\" ||\n        cell.row.original.kpi == \"Other Direct Cost\" ||\n        cell.row.original.kpi == \"Gross Margin\" ? (\n          <span style={{ display: \"block\", float: \"left\" }}>\n            <b>$</b>\n          </span>\n        ) : (\n          \"\"\n        )}\n        <span style={{ display: \"block\", float: \"right\" }} className=\"total\">\n          <b>\n            {cell.getValue()?.toLocaleString(\"en-US\")}\n            {cell.row.original.kpi == \"Gross Margin %\" ||\n            cell.row.original.kpi == \"Billable Utilization\" ||\n            cell.row.original.kpi == \"FTE\" ||\n            cell.row.original.kpi == \"SUBK\" ||\n            cell.row.original.kpi == \"Billed Utilization\" ||\n            cell.row.original.kpi == \"SUBK\" ? (\n              <span>{cell.getValue() == null ? 0 : \"%\"}</span>\n            ) : (\n              \"\"\n            )}\n          </b>\n        </span>\n      </>\n    ),\n  };\n\n  dynamicColumns.splice(columnIndex, 0, newColumn);\n\n  // console.log(\"nodes.........\", nodes)\n\n  return (\n    <div className=\"materialReactExpandableTable financialTable darkHeader\">\n      <MaterialReactTable\n        columns={dynamicColumns}\n        data={nodes}\n        enableExpanding={(column) => column.id === \"name\"}\n        enablePagination={false}\n        enableGlobalFilter={true}\n        enableDensityToggle={false}\n        enableFullScreenToggle={false}\n        enableHiding={false}\n        enableColumnFilters={false}\n        enableBottomToolbar={false}\n        enableTopToolbar={false}\n        enableColumnActions={false}\n        enableSorting={true}\n        filterFromLeafRows //apply filtering to all rows instead of just parent rows\n        initialState={{\n          showGlobalFilter: true,\n          grouping: [\"name\"],\n          expanded: true,\n          density: \"compact\",\n          columnPinning: { right: [\"Total\"] },\n        }} //expand all rows by default\n        muiTableContainerProps={{\n          sx: { width: \"auto\" },\n        }}\n        muiTableBodyProps={{\n          sx: {\n            \"&\": {\n              borderRight: \"1px solid #ccc\",\n              borderBottom: \"1px solid #ccc\",\n            },\n            \"& td\": {\n              // borderTop: \"1px solid #ccc\",\n              borderRight: \"1px solid #ccc\",\n              height: \"22px\",\n              padding: \"0px 5px\",\n              minWidth: \"60px\",\n              width: \"60px\",\n              maxWidth: \"60px\",\n            },\n          },\n        }}\n        muiTableHeadProps={{\n          sx: {\n            \"& th\": {\n              borderTop: \"1px solid #ccc\",\n              borderRight: \"1px solid #ccc\",\n              background: \"#f4f4f4 \",\n              padding: \"0 5px\",\n              minWidth: \"60px\",\n              width: \"60px\",\n              maxWidth: \"60px\",\n              verticalAlign: \"middle\",\n            },\n          },\n        }}\n      />\n      {loader ? <Loader handleAbort={handleAbort} /> : \"\"}\n    </div>\n  );\n}\n","import React, { useState, useEffect, useRef } from \"react\";\nimport DatePicker from \"react-datepicker\";\nimport moment from \"moment\";\nimport \"../FullfimentComponent/ResourceOverviewTable.scss\";\nimport {\n  FaChevronCircleDown,\n  FaChevronCircleLeft,\n  FaChevronCircleRight,\n  FaChevronCircleUp,\n  FaSearch,\n} from \"react-icons/fa\";\nimport { CCollapse } from \"@coreui/react\";\nimport axios from \"axios\";\nimport { environment } from \"../../environments/environment\";\nimport FinancialsTable from \"./FinancialsTable\";\nimport { SystemUpdateOutlined } from \"@material-ui/icons\";\nimport MaterialReactTable from \"material-react-table\";\nimport { DataTable } from \"primereact/datatable\";\nimport { Column } from \"primereact/column\";\nimport Loader from \"../Loader/Loader\";\nimport GlobalValidation from \"../ValidationComponent/GlobalValidation\";\nimport { AiFillWarning } from \"react-icons/ai\";\nimport ScreenBreadcrumbs from \"../Common/ScreenBreadcrumbs\";\nfunction Financials(props) {\n  const { customerId } = props;\n  const ref = useRef([]);\n  const [validationMessage, setValidationMessage] = useState(false);\n\n  const baseUrl = environment.baseUrl;\n  const currentYear = new Date().getFullYear();\n  const [loader, setLoader] = useState(false);\n  const firstDayOfYear = new Date(currentYear, 0, 1);\n  var firstmonth = firstDayOfYear.getMonth() + 1;\n\n  var currmonth = new Date().getMonth() + 1;\n  const diff = currmonth - 6;\n  var smonth;\n\n  if (diff < 0) {\n    smonth = new Date(currentYear, 0, 1);\n  } else {\n    smonth = new Date(currentYear, diff, 1);\n  }\n\n  const [startDate, setStartDate] = useState(smonth);\n  const [duration, setDuration] = useState();\n  const currentMonth = new Date().getMonth() + 1;\n  const [durationn, setDurationn] = useState(6);\n\n  // useEffect(() => {\n  //   setDurationn()\n  // }, [durationn])\n  const [TabData, setTabData] = useState();\n  const [NoTabData, setNoTabData] = useState();\n  // const calculateDuration = (e) => {\n  //   let startMonths = getAbsoluteMonths(e);\n  //   const year = startMonths.year;\n  //   let endMonths = getAbsoluteMonths(moment());\n\n  //   if (year !== endMonths.year) {\n  //     const startOfYear = moment().startOf('year');\n  //     const startOfYearMonths = getAbsoluteMonths(startOfYear);\n  //     let monthDifference = endMonths - startOfYearMonths;\n  //   }\n  //   let monthDifference = endMonths - startMonths;\n  //   monthDifference += 1;\n  //   let dr = [];\n  //   for (let i = 1; i <= monthDifference; i++) {\n  //     dr.push(i);\n  //   }\n  //   setDuration(dr);\n  // };\n\n  const loggedUserId = localStorage.getItem(\"resId\");\n\n  const [routes, setRoutes] = useState([]);\n  let textContent = \"Customers\";\n  let currentScreenName = [\"Customer Gross Margin Analysis\"];\n\n  useEffect(() => {\n    getMenus();\n  }, []);\n\n  const getMenus = () => {\n    // setMenusData\n\n    axios({\n      method: \"GET\",\n      url: baseUrl + `/CommonMS/master/getMenus?loggedUserId=${loggedUserId}`,\n    }).then((resp) => {\n      let data = resp.data;\n\n      data.forEach((item) => {\n        if (item.display_name === textContent) {\n          setRoutes([item]);\n        }\n      });\n    });\n  };\n\n  const calculateDuration = (e) => {\n    const startMonths = getAbsoluteMonths(e);\n    const endMonths = getAbsoluteMonths(moment());\n    const givenDate = new Date(e);\n    const givenYear = givenDate.getFullYear();\n\n    const currentYear = new Date().getFullYear();\n\n    let monthDifference;\n    if (givenYear !== currentYear) {\n      monthDifference = 5;\n    } else if (endMonths.totalMonths - startMonths.totalMonths > 5) {\n      // monthDifference = endMonths.totalMonths - startMonths.totalMonths;\n      monthDifference = 5;\n    } else {\n      monthDifference = endMonths.totalMonths - startMonths.totalMonths;\n    }\n\n    monthDifference += 1;\n    let dr = [];\n    for (let i = 1; i <= monthDifference; i++) {\n      dr.push(i);\n    }\n\n    setDuration(dr);\n  };\n  const initialValue = {\n    ownerDivisions: -1,\n    month: moment(startDate).format(\"yyyy-MM-DD\"),\n    duration: duration,\n    countries: -1,\n    searchType: \"Customer\",\n    busUnits: -1,\n    customers: customerId,\n    srcType: -1,\n    srcTypeId: -1,\n    tarType: \"Customer\",\n    busUnitId: -1,\n    custId: -1,\n    prjId: -1,\n    resId: -1,\n    measures: -1,\n    salesExecId: -1,\n    salesExecs: -1,\n    sortBy: -1,\n    custCountries: -1,\n    resTyp: -1,\n    source: -1,\n    engCountries: -1,\n    contTerms: -1,\n    engComp: -1,\n    cslRes: -1,\n    cslResId: -1,\n    dpRes: -1,\n    dpResId: -1,\n    indTypes: -1,\n    indTypesId: -1,\n  };\n  const [searchdata, setSearchdata] = useState(initialValue);\n  const [project, setProject] = useState([]);\n  const abortController = useRef(null);\n  const [value, onChange] = useState(new Date());\n  const [visible, setVisible] = useState(false);\n  const [cheveronIcon, setCheveronIcon] = useState(FaChevronCircleUp);\n  const [month, setMonth] = useState(moment(moment().subtract(5, \"months\"))._d);\n  const [tableData, setTableData] = useState(null);\n  const [displayTableState, setDisplayTableState] = useState(false);\n  const [tableKeys, setTableKeys] = useState([]);\n  const [resources, setResources] = useState([]);\n  const [resources1, setResources1] = useState([]);\n  const [customer, setCustomer] = useState([]);\n  const [vendorData, setvendorData] = useState([]);\n  const [departments, setDepartments] = useState([]);\n  const getAbsoluteMonths = (momentDate) => {\n    let mont = Number(moment(momentDate).format(\"MM\"));\n    let yea = Number(moment(momentDate).format(\"YYYY\"));\n    let totalMonths = mont + yea * 12;\n\n    return {\n      totalMonths: totalMonths,\n      year: Math.floor(totalMonths / 12),\n      month: totalMonths % 12,\n    };\n  };\n  const handleAbort = () => {\n    abortController.current && abortController.current.abort();\n    setLoader(false);\n  };\n  useEffect(() => {\n    setLoader(false);\n    setTimeout(() => {\n      setDurationn(6);\n      handleSearch();\n    }, 3000);\n  }, []);\n\n  useEffect(() => {\n    calculateDuration(month);\n  }, []);\n\n  const getCustomerdata = () => {\n    axios({\n      method: \"get\",\n      url: baseUrl + `/customersms/Customers/getNewCustomerList`,\n    }).then(function (response) {\n      var resp = response.data;\n      setCustomer(resp);\n    });\n  };\n\n  const getResourcesdata1 = () => {\n    axios({\n      method: \"get\",\n\n      url: baseUrl + `/revenuemetricsms/RevenueMarginAnalysis/getResources`,\n    }).then(function (response) {\n      var resp = response.data;\n\n      setResources1(resp);\n    });\n  };\n\n  const getResourcesdata = () => {\n    axios({\n      method: \"get\",\n      url: baseUrl + `/revenuemetricsms/RevenueMarginAnalysis/getResources`,\n    }).then(function (response) {\n      var resp = response.data;\n      setResources(resp);\n    });\n  };\n\n  const getProjectdata = () => {\n    axios({\n      method: \"get\",\n      url: baseUrl + `/revenuemetricsms/RevenueMarginAnalysis/getProjects`,\n    }).then(function (response) {\n      var resp = response.data;\n      setProject(resp);\n    });\n  };\n\n  const getDepartments = async () => {\n    const resp = await axios({\n      url: baseUrl + `/CostMS/cost/getDepartments`, //13\n    });\n\n    let departments = resp.data;\n    departments = departments.filter((ele) => ele.value >= 0);\n\n    setDepartments(departments);\n\n    // setSelectedDepartments(departments.filter((ele) => ele.value >= 0));\n\n    let filteredDeptData = [];\n\n    departments.forEach((data) => {\n      filteredDeptData.push(data.value);\n    });\n\n    setSearchdata((prevVal) => ({\n      ...prevVal,\n\n      [\"busUnits\"]: filteredDeptData.toString(),\n    }));\n  };\n\n  useEffect(() => {\n    getCustomerdata();\n    getResourcesdata();\n    getProjectdata();\n    getDepartments();\n    getResourcesdata1();\n  }, []);\n\n  const handleSearch = (e) => {\n    setTableData([]);\n\n    // setTableKeys([])\n    abortController.current = new AbortController();\n    let valid = GlobalValidation(ref);\n    if (valid) {\n      setValidationMessage(true);\n\n      // setTimeout(() => {\n      //   setValidationMessage(false);\n      // }, 3000);\n\n      return;\n    }\n\n    setValidationMessage(false);\n    // !valid && setVisible(!visible);\n    // visible\n    //   ? setCheveronIcon(FaChevronCircleUp)\n    //   : setCheveronIcon(FaChevronCircleDown);\n    const loaderTime = setTimeout(() => {\n      setLoader(true);\n    }, 2000);\n    axios({\n      method: \"post\",\n      url: baseUrl + \"/customersms/Financials/getFinancials\",\n      //url: 'http://localhost:8099/customersms/Financials/getFinancials',\n      data: {\n        ownerDivisions: -1,\n        month: moment(startDate).format(\"yyyy-MM-DD\"),\n        duration: durationn,\n        countries: -1,\n        searchType: \"Customer\",\n        busUnits: -1,\n        customers: customerId,\n        srcType: -1,\n        srcTypeId: -1,\n        tarType: \"Customer\",\n        busUnitId: -1,\n        custId: -1,\n        prjId: -1,\n        resId: -1,\n        measures: -1,\n        salesExecId: -1,\n        salesExecs: -1,\n        sortBy: -1,\n        custCountries: -1,\n        resTyp: -1,\n        source: -1,\n        engCountries: -1,\n        contTerms: -1,\n        engComp: -1,\n        cslRes: -1,\n        cslResId: -1,\n        dpRes: -1,\n        dpResId: -1,\n        indTypes: -1,\n        indTypesId: -1,\n      },\n    })\n      .then((res) => {\n        let respData = res.data.data;\n        const plannedRevenueData = respData.filter(\n          (obj) => obj.descr === \"Planned Revenue\" && obj.name !== \"\"\n        );\n\n        setTableData(plannedRevenueData);\n        setDisplayTableState(true);\n        setResources(respData);\n        setNoTabData(res.data.data);\n        // plset();\n        clearTimeout(loaderTime);\n        !valid && setVisible(!visible);\n        visible\n          ? setCheveronIcon(FaChevronCircleUp)\n          : setCheveronIcon(FaChevronCircleDown);\n      })\n      .catch((e) => {\n        setLoader(false);\n      });\n\n    axios({\n      method: \"post\",\n      url: baseUrl + \"/customersms/Financials/getvendors\",\n      data: {\n        month: moment(startDate).format(\"yyyy-MM-DD\"),\n        duration: durationn,\n        customers: customerId,\n      },\n    })\n      .then((response) => {\n        const apiData = response.data;\n        // const tabData = [\n        //   {\n        //     vendor: apiData.vendor_name,\n        //     id: apiData.id,\n        //     total: apiData.Total,\n        //     ...Object.entries(apiData).reduce((acc, [key, value]) => {\n        //       if (key !== \"vendor_name\" && key !== \"closed_amount\") {\n        //         acc[key] = value;\n        //       }\n        //       return acc;\n        //     }, {})\n        //   },\n        // ];\n        setTabData(apiData ? [apiData] : []);\n        setvendorData(\"\");\n      })\n      .catch();\n  };\n\n  useEffect(() => {\n    if (tableData && tableData[0]) {\n      const keysToInclude = [\"name\", \"kpi\"].concat(\n        Object.keys(tableData[0]).filter((key) =>\n          key.match(/\\d{4}_\\d{2}_\\d{2}/)\n        )\n      );\n      const sortedKeys = keysToInclude.sort((a, b) => {\n        if (a === \"Total\") return 1;\n        if (b === \"Total\") return -1;\n        const dateA = new Date(a.replace(\"_\", \"-\"));\n        const dateB = new Date(b.replace(\"_\", \"-\"));\n        const formattedDateA = dateA.toLocaleString(\"en-US\", {\n          month: \"short\",\n          year: \"numeric\",\n        });\n        const formattedDateB = dateB.toLocaleString(\"en-US\", {\n          month: \"short\",\n          year: \"numeric\",\n        });\n        return formattedDateA.localeCompare(formattedDateB);\n      });\n      if (!sortedKeys.includes(\"Total\")) {\n        sortedKeys.push(\"Total\");\n      }\n      setTableKeys(sortedKeys);\n    } else if (NoTabData && NoTabData[0]) {\n      const keysToInclude = [\"name\", \"kpi\"].concat(\n        Object.keys(NoTabData[0]).filter((key) =>\n          key.match(/\\d{4}_\\d{2}_\\d{2}/)\n        )\n      );\n      const sortedKeys = keysToInclude.sort((a, b) => {\n        if (a === \"Total\") return 1;\n        if (b === \"Total\") return -1;\n        const dateA = new Date(a.replace(\"_\", \"-\"));\n        const dateB = new Date(b.replace(\"_\", \"-\"));\n        const formattedDateA = dateA.toLocaleString(\"en-US\", {\n          month: \"short\",\n          year: \"numeric\",\n        });\n        const formattedDateB = dateB.toLocaleString(\"en-US\", {\n          month: \"short\",\n          year: \"numeric\",\n        });\n        return formattedDateA.localeCompare(formattedDateB);\n      });\n      if (!sortedKeys.includes(\"Total\")) {\n        sortedKeys.push(\"Total\");\n      }\n      setTableKeys(sortedKeys);\n    }\n  }, [tableData, NoTabData]);\n  const maxDate = new Date();\n  const renderColumns = () => {\n    if (TabData.length === 0) {\n      return null;\n    }\n\n    const dateKeys = Object.keys(TabData[0])\n      .filter((key) => key.match(/^\\d{4}_\\d{2}_\\d{2}$/)) // Filter date keys in the format 'YYYY_MM_DD'\n      .sort(); // Sort date keys in ascending order\n\n    const columns = [];\n\n    // Check if all cells have null values\n\n    columns.push(<Column key=\"vendor\" header=\"Vendor\" />);\n\n    // Add blank column\n    columns.push(<Column key=\"blank\" field=\"\" header=\"\" />);\n\n    dateKeys.forEach((dateKey, index) => {\n      const columnStyle = {\n        minWidth: \"60px\",\n        maxWidth: \"60px\",\n        backgroundColor:\n          index === dateKeys.length - 1 ? \"aliceblue\" : \"transparent\",\n      };\n      columns.push(\n        <Column\n          key={dateKey}\n          field={dateKey}\n          header={formatDateKey(dateKey)}\n          style={columnStyle}\n        />\n      );\n    });\n\n    // Add Total column\n    columns.push(<Column key=\"total\" field=\"Total\" header=\"Total\" />);\n\n    return columns;\n  };\n\n  const formatDateKey = (dateKey) => {\n    const parts = dateKey.split(\"_\");\n    const year = parts[0];\n    const month = parseInt(parts[1], 10);\n    const monthName = new Date(year, month - 1, 1).toLocaleString(\"default\", {\n      month: \"short\",\n    });\n    return `${monthName}-${year}`;\n  };\n\n  return (\n    <div>\n      <div className=\"col-md-12\">\n        <div className=\"pageTitle\">\n          <div className=\"childOne\"></div>\n          <div className=\"childTwo\">\n            <h2>Customer Gross Margin Analysis</h2>\n          </div>\n          <div className=\"childThree\"></div>\n        </div>\n      </div>\n\n      <ScreenBreadcrumbs\n        routes={routes}\n        currentScreenName={currentScreenName}\n      />\n      {validationMessage ? (\n        <div className=\"statusMsg error\">\n          <span className=\"error-block\">\n            <AiFillWarning /> &nbsp; Please select valid values for highlighted\n            fields\n          </span>\n        </div>\n      ) : (\n        \"\"\n      )}\n      <div className=\"group mb-3 customCard\">\n        <div className=\"col-md-12 collapseHeader\">\n          <h2>Search Filters</h2>\n          <div\n            onClick={() => {\n              setVisible(!visible);\n              visible\n                ? setCheveronIcon(FaChevronCircleUp)\n                : setCheveronIcon(FaChevronCircleDown);\n            }}\n          >\n            <span>{cheveronIcon}</span>\n          </div>\n        </div>\n        <CCollapse visible={!visible}>\n          <div className=\"group-content row\">\n            <div className=\" col-md-3 mb-2\">\n              <div className=\"form-group row\">\n                <label className=\"col-5\" htmlFor=\"fy\">\n                  Start Month <span style={{ color: \"red\" }}>*</span>\n                </label>\n                <span className=\"col-1 p-0\">:</span>\n                <div className=\"col-6\">\n                  <div\n                  // className=\" datepicker col-6\"\n                  // ref={(ele) => {\n                  //   ref.current[0] = ele;\n                  // }}\n                  >\n                    <DatePicker\n                      selected={startDate}\n                      onChange={(date) => {\n                        setStartDate(date);\n                        calculateDuration(date);\n                        setMonth(date);\n                        setDurationn(\"\");\n                        setSearchdata((prev) => ({\n                          ...prev,\n                          duration: \"\",\n                        }));\n                      }}\n                      maxDate={maxDate}\n                      dateFormat=\"MMM-yyyy\"\n                      showMonthYearPicker\n                    />\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className=\" col-md-3 mb-2\">\n              <div className=\"form-group row\">\n                <label className=\"col-5\" htmlFor=\"duration\">\n                  Duration <span style={{ color: \"red\" }}>*</span>\n                </label>\n                <span className=\"col-1 p-0\">:</span>\n                <div className=\"col-6\">\n                  <select\n                    className=\"error enteredDetails cancel text\"\n                    id=\"duration\"\n                    value={durationn}\n                    onChange={(event) => {\n                      setDurationn(event.target.value);\n                    }}\n                    ref={(ele) => {\n                      ref.current[0] = ele;\n                    }}\n                  >\n                    <option value=\"\">&lt;&lt; Please Select &gt;&gt;</option>\n                    {duration?.map((d) => (\n                      <option key={d} value={d}>\n                        {d}\n                      </option>\n                    ))}\n                  </select>\n                </div>\n              </div>\n            </div>\n            <div className=\"col-md-12 col-sm-12 col-xs-12 btn-container center my-2\">\n              <button\n                type=\"submit\"\n                className=\"btn btn-primary\"\n                onClick={() => {\n                  handleSearch();\n                }}\n              >\n                <FaSearch /> Search{\" \"}\n              </button>\n              <div>{loader ? <Loader handleAbort={handleAbort} /> : \"\"}</div>\n            </div>\n          </div>\n        </CCollapse>\n        {/* <div> <FaChevronCircleRight style={{ float: \"right\" }}\n          onClick={() => {\n\n            handleSearch(\"plus\");\n          }}\n        />\n          <FaChevronCircleLeft style={{ float: \"right\" }}\n            onClick={() => {\n\n              handleSearch(\"minus\");\n            }}\n          />\n\n        </div> */}\n      </div>\n      <div>\n        {\" \"}\n        {displayTableState && (\n          <FinancialsTable\n            startDate={moment(startDate).format(\"yyyy-MM-DD\")}\n            duration={durationn}\n            customerId={customerId}\n            tableData={tableData}\n            column={tableKeys}\n            month={month}\n            searchdata={searchdata}\n            customer={customer}\n            resources={resources1}\n            departments={departments}\n            project={project}\n          />\n        )}\n      </div>\n      <br></br>\n      <div className=\"primeReactDataTable darkHeader\">\n        {displayTableState && (\n          <div className=\" primeReactDataTable financialSecondTable\">\n            <DataTable\n              className=\"resourceOverviewEmp\"\n              stripedRows\n              showGridlines\n              value={vendorData}\n              emptyMessage=\"No Data Found\"\n            >\n              {renderColumns()}\n            </DataTable>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default Financials;\n"],"names":["FinancialsTable","props","useState","projectId","setProjectId","tableData","column","departments","startDate","month","duration","customerId","project","customer","resources","baseUrl","environment","abortController","useRef","loader","setLoader","name","kpi","dates","slice","sort","adjustedColumn","data","setData","nodes","setNodes","useEffect","id","i","length","jsonToTree","flatArray","options","parentId","children","dictionary","tree","forEach","node","nodeId","nodeParentId","push","Object","values","obj","HandleInsertedData","objId","objLabel","innerColumn","current","AbortController","axios","method","url","indTypesId","indTypes","dpResId","dpRes","cslResId","cslRes","engComp","contTerms","engCountries","source","resTyp","custCountries","sortBy","salesExecs","salesExecId","measures","resId","prjId","custId","busUnitId","tarType","srcTypeId","srcType","customers","busUnits","searchType","countries","ownerDivisions","direction","signal","then","res","respData","map","item","prevNodes","grossMarginIndex","findIndex","descr","catch","e","console","log","HandleInsertedData1","custBU","split","HandleInsertedData2","HandleInsertedData3","projectID","custprojectId","replace","dynamicColumns","header","className","style","backgroundColor","accessorKey","enableGrouping","GroupedCell","projBU","resBU","cell","department","find","dep","fullName","getValue","activeIcons","setActiveIcons","cust","value","activeIcons1","setActiveIcons1","handleClick1","some","includes","prevActiveIcons","filter","proj","label","activeIcons2","setActiveIcons2","activeIcons3","setActiveIcons3","isActive","cursor","onClick","handleClick","color","title","row","original","count","isActive1","justifyContent","isActive2","handleClick2","isActive3","handleClick3","display","Cell","index","Date","toLocaleDateString","year","float","toLocaleString","columnIndex","newColumn","splice","columns","enableExpanding","enablePagination","enableGlobalFilter","enableDensityToggle","enableFullScreenToggle","enableHiding","enableColumnFilters","enableBottomToolbar","enableTopToolbar","enableColumnActions","enableSorting","filterFromLeafRows","initialState","showGlobalFilter","grouping","expanded","density","columnPinning","right","muiTableContainerProps","sx","width","muiTableBodyProps","borderRight","borderBottom","height","padding","minWidth","maxWidth","muiTableHeadProps","borderTop","background","verticalAlign","Loader","handleAbort","abort","smonth","ref","validationMessage","setValidationMessage","currentYear","getFullYear","diff","getMonth","setStartDate","setDuration","durationn","setDurationn","TabData","setTabData","NoTabData","setNoTabData","loggedUserId","localStorage","getItem","routes","setRoutes","getMenus","resp","display_name","calculateDuration","monthDifference","startMonths","getAbsoluteMonths","endMonths","moment","totalMonths","dr","initialValue","format","searchdata","setSearchdata","setProject","visible","setVisible","FaChevronCircleUp","cheveronIcon","setCheveronIcon","subtract","_d","setMonth","setTableData","displayTableState","setDisplayTableState","tableKeys","setTableKeys","setResources","resources1","setResources1","setCustomer","vendorData","setvendorData","setDepartments","momentDate","Number","Math","floor","setTimeout","handleSearch","getDepartments","ele","filteredDeptData","prevVal","toString","response","valid","GlobalValidation","loaderTime","plannedRevenueData","clearTimeout","FaChevronCircleDown","apiData","sortedKeys","concat","keys","key","match","a","b","dateA","dateB","formattedDateA","formattedDateB","localeCompare","maxDate","formatDateKey","dateKey","parts","parseInt","monthName","ScreenBreadcrumbs","currentScreenName","htmlFor","selected","onChange","date","prev","dateFormat","showMonthYearPicker","event","target","d","type","stripedRows","showGridlines","emptyMessage","dateKeys","field","columnStyle","renderColumns"],"sourceRoot":""}