{"version":3,"file":"static/js/4162.b8851c34.chunk.js","mappings":"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","sources":["views/Customer/UploadRoleCost.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nimport DatePicker from \"react-datepicker\";\nimport FlatPrimeReactTable from \"../PrimeReactTableComponent/FlatPrimeReactTable\";\nimport { getTableData } from \"./UploadRoleCostTable\";\n\nimport \"primeicons/primeicons.css\";\nimport \"primereact/resources/themes/lara-light-indigo/theme.css\";\nimport \"primereact/resources/primereact.css\";\nimport \"primeflex/primeflex.css\";\nimport axios from \"axios\";\nimport { Column } from \"primereact/column\";\n\nimport CellRendererPrimeReactDataTable from \"../PrimeReactTableComponent/CellRendererPrimeReactDataTable\";\nimport moment from \"moment\";\nimport { ImCross, ImDownload3, ImUpload3 } from \"react-icons/im\";\nimport { FaFileAlt } from \"react-icons/fa\";\nimport { environment } from \"../../environments/environment\";\n\nfunction UploadRoleCost() {\n  const [startDate, setStartDate] = useState(new Date());\n  const [tableData, setTableData] = useState([]);\n  const [dataAr, setDataAr] = useState([]);\n  const [data, setData] = useState([]);\n  const [headerData, setHeaderData] = useState([]);\n  const baseUrl = environment.baseUrl;\n\n  let rows = 10;\n\n  const getData = () => {\n    axios\n      .get(baseUrl + `/administrationms/roleCosts/getUploadRoleCosts`)\n      .then((res) => {\n        const GetData = res.data;\n\n        let dataHeader = [\n          {\n            date_created: \"Uploaded Date\",\n            Name: \"Uploaded By\",\n            file_name: \"File\",\n            typ_status_id: \"Status\",\n          },\n        ];\n        setData(dataHeader.concat(GetData));\n      });\n  };\n\n  useEffect(() => {\n    data[0] && setHeaderData(JSON.parse(JSON.stringify(data[0])));\n  }, [data]);\n\n  const CreatedDate = (data) => {\n    return (\n      <div\n        className=\"ellipsis\"\n        align=\"left\"\n        data-toggle=\"tooltip\"\n        title={moment(data.date_created).format(\"DD-MM-yyyy HH:mm:ss\")}\n      >\n        {data.date_created == null\n          ? \"\"\n          : data.date_created == \"\"\n          ? \"\"\n          : moment(data.date_created).format(\"DD-MM-yyyy HH:mm:ss\")}\n      </div>\n    );\n  };\n\n  const UploadedBy = (data) => {\n    return (\n      <div\n        className=\"ellipsis\"\n        align=\"left\"\n        data-toggle=\"tooltip\"\n        title={data.Name}\n      >\n        {data.Name == null ? \"\" : data.Name == \"\" ? \"\" : data.Name}\n      </div>\n    );\n  };\n\n  const FileName = (data) => {\n    return (\n      <div\n        className=\"ellipsis\"\n        align=\"left\"\n        data-toggle=\"tooltip\"\n        title={data.file_name}\n      >\n        {data.file_name == null\n          ? \"\"\n          : data.file_name == \"\"\n          ? \"\"\n          : data.file_name}\n      </div>\n    );\n  };\n\n  const Status = (data) => {\n    return (\n      <div\n        className=\"ellipsis\"\n        align=\"left\"\n        data-toggle=\"tooltip\"\n        title={\n          data.typ_status_id == null\n            ? \"\"\n            : data.typ_status_id == \"\"\n            ? \"\"\n            : data.typ_status_id == 962\n            ? \"Success\"\n            : data.typ_status_id == 963\n            ? \"Failed\"\n            : data.typ_status_id == 964\n            ? \"Partial Success\"\n            : \"\"\n        }\n      >\n        {data.typ_status_id == null\n          ? \"\"\n          : data.typ_status_id == \"\"\n          ? \"\"\n          : data.typ_status_id == 962\n          ? \"Success\"\n          : data.typ_status_id == 963\n          ? \"Failed\"\n          : data.typ_status_id == 964\n          ? \"Partial Success\"\n          : \"\"}\n      </div>\n    );\n  };\n\n  const dynamicColumns = Object.keys(headerData)?.map((col, i) => {\n    return (\n      <Column\n        sortable\n        key={col}\n        body={\n          col == \"date_created\"\n            ? CreatedDate\n            : col == \"typ_status_id\"\n            ? Status\n            : col == \"Name\"\n            ? UploadedBy\n            : col == \"file_name\"\n            ? FileName\n            : \"\"\n        }\n        field={col}\n        header={headerData[col]}\n      />\n    );\n  });\n\n  const [file, setFile] = useState(null);\n  function handleFileChange(event) {\n    setFile(event.target.files[0]);\n  }\n\n  function handleReset() {\n    setFile(null);\n    // reset the value of the input element\n    document.getElementById(\"file-input\").value = \"\";\n  }\n\n  useEffect(() => {\n    getData();\n  }, []);\n\n  return (\n    <div>\n      <div className=\"col-md-12\">\n        <div className=\"pageTitle\">\n          <div className=\"childOne\"></div>\n          <div className=\"childTwo\">\n            <h2>Upload Role Costs</h2>\n          </div>\n          <div className=\"childThree\"></div>\n        </div>\n      </div>\n      <div className=\"group mb-3 customCard px-2 py-3\">\n        <div className=\"row\">\n          <div className=\"col-md-4 mb-2\">\n            <div className=\"form-group row\">\n              <label className=\"col-5\" htmlFor=\"frommonth\">\n                From Month <span className=\"required error-text\">*</span>\n              </label>\n              <span className=\"col-1 p-0\">:</span>\n              <div className=\"col-6\">\n                <DatePicker\n                  selected={startDate}\n                  onChange={(date) => setStartDate(date)}\n                  dateFormat=\"MMM-yyyy\"\n                  showMonthYearPicker\n                />\n              </div>\n            </div>\n          </div>\n          <div className=\" col-md-4 mb-2\">\n            <div className=\"form-group row\">\n              <label className=\"col-4\" htmlFor=\"uploadfile\">\n                Upload File <span className=\"required error-text\">*</span>\n              </label>\n              <span className=\"col-1 p-0\">:</span>\n              <div className=\"col-7\">\n                <input\n                  type=\"file\"\n                  className=\"fileUpload form-control\"\n                  id=\"uploadfile\"\n                  placeholder\n                  required\n                  onChange={handleFileChange}\n                />\n              </div>\n            </div>\n          </div>\n          <div className=\"col-md-4 mb-2 \">\n            <button type=\"submit\" className=\"btn btn-primary float-end\">\n              <ImDownload3 /> Download Template\n            </button>\n          </div>\n        </div>\n        <div className=\"btn-container center mt-2\">\n          <button type=\"submit\" className=\"btn btn-primary\">\n            <FaFileAlt />\n            Review\n          </button>\n          <button type=\"submit\" className=\"btn btn-primary\">\n            <ImUpload3 /> Upload\n          </button>\n          <button type=\"reset\" className=\"btn btn-light\" onClick={handleReset}>\n            <ImCross /> Cancel\n          </button>\n        </div>\n      </div>\n      <div className=\"col-md-12\">\n        <div className=\"pageTitle\">\n          <div className=\"childOne\">\n            <h2>Uploaded History</h2>\n          </div>\n          <div className=\"childTwo\"></div>\n          <div className=\"childThree\"></div>\n        </div>\n      </div>\n      <div className=\"col-md-12\">\n        <CellRendererPrimeReactDataTable\n          data={data}\n          // linkColumns={linkColumns}\n          // linkColumnsRoutes={linkColumnsRoutes}\n          dynamicColumns={dynamicColumns}\n          headerData={headerData}\n          setHeaderData={setHeaderData}\n          rows={rows}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default UploadRoleCost;\n"],"names":["useState","Date","startDate","setStartDate","data","setData","headerData","setHeaderData","baseUrl","environment","useEffect","JSON","parse","stringify","CreatedDate","className","align","title","moment","date_created","format","UploadedBy","Name","FileName","file_name","Status","typ_status_id","dynamicColumns","Object","keys","map","col","i","sortable","body","field","header","setFile","axios","then","res","GetData","concat","htmlFor","selected","onChange","date","dateFormat","showMonthYearPicker","type","id","placeholder","required","event","target","files","onClick","document","getElementById","value","rows"],"sourceRoot":""}