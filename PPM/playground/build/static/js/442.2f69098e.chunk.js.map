{"version":3,"file":"static/js/442.2f69098e.chunk.js","mappings":"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","sources":["views/Customer/InnovationMaterialTable.js","views/Customer/InnovationDashboard.js","views/PrimeReactTableComponent/MaterialReactCollapisbleTable.js","../node_modules/@material-ui/core/esm/Typography/Typography.js","../node_modules/@material-ui/core/esm/DialogTitle/DialogTitle.js"],"sourcesContent":["import React, { useState, useEffect, useMemo } from \"react\";\nimport MaterialReactTable from \"material-react-table\";\nimport { Button, IconButton } from \"@mui/material\";\nimport fte_active from \"../../assets/images/empstatusIcon/fte_active.png\";\nimport fte_inactive from \"../../assets/images/empstatusIcon/fte_inactive.png\";\nimport fte_notice from \"../../assets/images/empstatusIcon/fte_notice.png\";\nimport subk_active from \"../../assets/images/empstatusIcon/subk_active.png\";\nimport subk_inactive from \"../../assets/images/empstatusIcon/subk_inactive.png\";\nimport subk_notice from \"../../assets/images/empstatusIcon/subk_notice.png\";\nimport { AiFillRightCircle } from \"react-icons/ai\";\nimport { CListGroup } from \"@coreui/react\";\nimport { GoPerson } from \"react-icons/go\";\n// import \"./VendorPerformance.scss\";\nimport \"../PrimeReactTableComponent/PrimeReactTable.scss\";\n\nexport default function InnovationMaterialTable(props) {\n  const { data, expandedCols, colExpandState } = props;\n  const [nodes, setNodes] = useState([]);\n  const [columns, setColumns] = useState(null);\n  const [hiddenColumns, setHiddenColumns] = useState({});\n  const [colExpFlag, setColumnExpFlag] = useState(false);\n  const [headers, setHeaders] = useState([]);\n  const icons = {\n    fte0: (\n      <img\n        src={fte_inactive}\n        alt=\"(fte_inactive_icon)\"\n        style={{ height: \"12px\" }}\n        title=\"Ex-Employee\"\n      />\n    ),\n    fte1: (\n      <img\n        src={fte_active}\n        alt=\"(fte_active_icon)\"\n        style={{ height: \"12px\" }}\n        title=\"Active Employee\"\n      />\n    ),\n    fte2: (\n      <img\n        src={fte_notice}\n        alt=\"(fte_notice_icon)\"\n        style={{ height: \"12px\" }}\n        title=\"Employee in notice period\"\n      />\n    ),\n    subk0: (\n      <img\n        src={subk_inactive}\n        alt=\"(subk_inactive_icon)\"\n        style={{ height: \"12px\" }}\n        title=\"Ex-Contractor\"\n      />\n    ),\n    subk1: (\n      <img\n        src={subk_active}\n        alt=\"(subk_active_icon)\"\n        style={{ height: \"12px\" }}\n        title=\"Active Contractor\"\n      />\n    ),\n    subk2: (\n      <img\n        src={subk_notice}\n        alt=\"(subk_notice_icon)\"\n        style={{ height: \"12px\" }}\n        title=\"Contractor in notice period\"\n      />\n    ),\n  };\n\n  // const numberWithCommas = (x) => {\n  //   return x\n  //     ?.toLocaleString(undefined, {\n  //       minimumFractionDigits: 2,\n  //       maximumFractionDigits: 2,\n  //       useGrouping: true,\n  //     })\n  //     .replace(/(?<=\\d)(?=(\\d{3})+(?!\\d|\\.))/g, \",\");\n  // };\n  const numberWithCommas = (x) => {\n    var number = String(x);\n\n    if (number.includes(\".\") == true) {\n      var decimalNumbers = number;\n      var num = Number(decimalNumbers);\n      let FdN = num != null && num?.toFixed(1);\n      let final = FdN.split(\".\");\n      final[0] = final[0].replace(/(?<=\\d)(?=(\\d{3})+(?!\\d|\\.))/g, \",\");\n\n      return final.join(\".\");\n    } else {\n      return (\n        number != null && number?.replace(/(?<=\\d)(?=(\\d{3})+(?!\\d|\\.))/g, \",\")\n      );\n    }\n  };\n\n  useEffect(() => {\n    getData();\n  }, [data]);\n\n  const getData = () => {\n    let tableData = data.tableData;\n    let columns = null;\n\n    if (data?.columns?.includes(\"'\")) {\n      columns = data?.columns?.replaceAll(\"'\", \"\");\n    } else {\n      columns = data?.columns;\n    }\n\n    let colArr = columns?.split(\",\");\n\n    let newHeaders = [];\n    let hiddenHeaders = [];\n\n    const obj = {};\n\n    for (let i = 0; i < colArr?.length; i++) {\n      let colVal = colArr[i].trim();\n\n      let firstData = tableData[0];\n      obj[colVal] = firstData[colVal];\n    }\n\n    let headerArray = Object.entries(obj);\n\n    let unWantedCols = [\n      \"id\",\n      \"theme\",\n      \"solution\",\n      \"projectId\",\n      \"empStatus\",\n      \"lvl\",\n      \"count\",\n      \"keyAttr\",\n      \"gitURL\",\n      \"uniqueId\",\n      \"parentId\",\n      \"empStatus\",\n      \"project\",\n      \"resource\",\n      \"themeId\",\n      \"solutionId\",\n    ];\n\n    let filteredHeaders = headerArray.filter(\n      (d) =>\n        !unWantedCols.includes(d[0]) &&\n        !d[0].includes(\"Alloc\") &&\n        !d[0].includes(\"rdc\")\n      // && d[0].includes(\"_\")\n\n      // !d[0].includes(\"Alloc\")\n    );\n\n    // let filteredHeaders = headerArray.filter(\n    //   ([key, value]) => typeof value === \"string\" && value.includes(\"^&\")\n    // );\n\n    setHeaders(filteredHeaders);\n\n    filteredHeaders.map(([key, value]) => {\n      if (expandedCols.includes(key)) {\n        hiddenHeaders.push({ [key]: false });\n      }\n    });\n\n    setHiddenColumns(Object.assign({}, ...hiddenHeaders));\n\n    let minusOneRow = tableData?.filter((d) => d.id == -1);\n\n    filteredHeaders.map(([key, value], index) => {\n      newHeaders.push({\n        accessorKey: key,\n        // header: value?.split(\"^&\")[0],\n        header: value,\n        enableColumnActions: false,\n        enableHiding: true,\n        Header: ({ column }) => (\n          <div>\n            {value.split(\"^&\")[0]}\n            {/* {value}{\" \"} */}\n            {key == colExpandState[2] ? (\n              <IconButton\n                onClick={() => {\n                  setColumnExpFlag((prev) => !prev);\n                }}\n              >\n                <AiFillRightCircle />\n              </IconButton>\n            ) : null}\n          </div>\n        ),\n        // Cell: ({cell}) => (\n        //  <div>\n        //   {key === \"empStatus\" && cell.getValues(\"fte1\")? <GoPerson/>:\"\"}\n        //  </div>\n        // )\n      });\n    });\n    let subHeaders = minusOneRow && Object.entries(minusOneRow[0]);\n    subHeaders?.sort();\n\n    newHeaders.map((data) => {\n      let i = newHeaders.indexOf(data);\n      let subArray = [];\n      subHeaders.map(([key, value], index) => {\n        let a = /\\d/.test(key.split(\"_\")[0]);\n        if (\n          key.includes(\"_\") &&\n          (a == true || (a == false && key.split(\"_\")[0] == \"total\"))\n        ) {\n          let subkey = key.includes(\"action\") ? \"action\" : key.split(\"_\");\n          subkey = key.includes(\"action\")\n            ? \"action\"\n            : subkey.slice(0, -1).join(\"_\");\n\n          if (data.accessorKey.includes(subkey)) {\n            let obj = {\n              id: key,\n              header:\n                value == null || value == 0 ? (\n                  \"\"\n                ) : (\n                  <div\n                    className={\n                      !key.includes(\"actionDate\") &&\n                      !key.includes(\"actionComments\")\n                        ? \"sm\"\n                        : key.includes(\"department\") && \"nullCol\"\n                    }\n                  >\n                    {value}\n                  </div>\n                ),\n              accessorKey: key,\n              Cell: ({ cell }) => {\n                {\n                  cell.row.original.resource != \"\" && \"\";\n                }\n                return (\n                  <div\n                    className={\n                      key.includes(\"_\")\n                        ? key.split(\"_\")[0] == \"total\"\n                          ? \"total\"\n                          : key.split(\"_\")[1][1] % 2 == 0\n                          ? \"even\"\n                          : \"odd\"\n                        : key.includes(\"emp_cadre\") && \"sm mixer\"\n                    }\n                  >\n                    {cell.column.id == \"name\" &&\n                    cell.row.original != null &&\n                    (cell.row.original.name != null ||\n                      cell.row.original.name != \"Summary\") ? (\n                      <>\n                        {icons[cell.row.original[\"empStatus\"]]}\n\n                        {cell.getValue()}\n                      </>\n                    ) : (\n                      numberWithCommas(cell.getValue())\n                    )}\n                  </div>\n                );\n              },\n            };\n            subArray.push(obj);\n\n            newHeaders[i].columns = subArray;\n          }\n        } else {\n          if (key == data.accessorKey) {\n            let obj = {\n              id: key,\n              header: value == null || value == 0 ? \"\" : <div>{value}</div>,\n              accessorKey: key,\n              Cell: ({ cell }) => {\n                return (\n                  <div\n                    className={\n                      key.includes(\"_\")\n                        ? key.split(\"_\")[0] == \"total\"\n                          ? \"total\"\n                          : key.split(\"_\")[1][1] % 2 == 0\n                          ? \"even\"\n                          : \"odd\"\n                        : // : \"\"\n                          key.includes(\"emp_cadre\") && \"mixer\"\n                    }\n                  >\n                    {cell.column.id == \"name\" &&\n                    cell.row.original != null &&\n                    (cell.row.original.name != null ||\n                      cell.row.original.name != \"Summary\") ? (\n                      <>\n                        {icons[cell.row.original[\"empStatus\"]]}\n\n                        {cell.getValue()}\n                      </>\n                    ) : (\n                      numberWithCommas(cell.getValue())\n                    )}\n                  </div>\n                );\n                // <div>\n                //     <p>i&nbsp;{cell.getValue()}</p>\n\n                // </div>\n              },\n            };\n            newHeaders[i].columns = [obj];\n          }\n        }\n      });\n    });\n    setColumns(newHeaders);\n\n    let values = [];\n    tableData?.map((d) => (d.id != -2 && d.id != -3 ? values.push(d) : \"\"));\n\n    let tempData = jsonToTree(values, { children: \"subRows\" });\n    setNodes(tempData.slice(1, tempData.length));\n  };\n\n  useEffect(() => {\n    colExpFlag ? setHiddenColumns({}) : colCollapse();\n  }, [colExpFlag]);\n\n  const colCollapse = () => {\n    let hiddenHeaders = [];\n    // refactor this\n    headers.map(([key, value]) => {\n      if (expandedCols.includes(key)) {\n        hiddenHeaders.push({ [key]: false });\n      }\n    });\n\n    setHiddenColumns(Object.assign({}, ...hiddenHeaders));\n  };\n\n  const jsonToTree = (flatArray, options) => {\n    options = {\n      id: \"uniqueId\",\n      parentId: \"parentId\",\n      children: \"subRows\",\n      ...options,\n    };\n    const dictionary = {}; // a hash table mapping to the specific array objects with their ids as key\n    const tree = [];\n    const children = options.children;\n    flatArray.forEach((node) => {\n      const nodeId = node[options.id];\n      const nodeParentId = node[options.parentId];\n      // set up current node data in dictionary\n      dictionary[nodeId] = {\n        [children]: [], // init a children property\n        ...node, // add other propertys\n        ...dictionary[nodeId], // children will be replaced if this node already has children property which was set below\n      };\n      dictionary[nodeParentId] = dictionary[nodeParentId] || { [children]: [] }; // if it's not exist in dictionary, init an object with children property\n      dictionary[nodeParentId][children].push(dictionary[nodeId]); // add reference to current node object in parent node object\n    });\n    // find root nodes\n    Object.values(dictionary).forEach((obj) => {\n      if (typeof obj[options.id] === \"undefined\") {\n        tree.push(...obj[children]);\n      }\n    });\n    return tree;\n  };\n\n  return (\n    <div className=\"\">\n      {nodes.length ? (\n        <MaterialReactTable\n          columns={columns}\n          data={nodes}\n          enableExpandAll={true} //hide expand all double arrow in column header\n          enableExpanding\n          enablePagination={false}\n          //enableRowVirtualization\n          enableBottomToolbar={false}\n          enableTopToolbar={false}\n          enableColumnActions={false}\n          enableSorting={false}\n          filterFromLeafRows //apply filtering to all rows instead of just parent rows\n          initialState={{\n            expanded: false,\n            density: \"compact\",\n            columnVisibility: { ...hiddenColumns },\n            // enablePinning: true,\n            columnPinning: { left: [\"mrt-row-expand\", \"name\"] },\n          }} //expand all rows by default\n          state={{ columnVisibility: { ...hiddenColumns } }}\n          //paginateExpandedRows={false} //When rows are expanded, do not count sub-rows as number of rows on the page towards pagination\n          defaultColumn={{ minSize: 40, maxSize: 1000, size: 40 }} //units are in px\n          muiTableBodyProps={{\n            sx: {\n              \"&\": {\n                borderRight: \"1px solid #ccc\",\n                borderBottom: \"1px solid #ccc\",\n              },\n              \"& td\": {\n                borderTop: \"1px solid #ccc\",\n                borderRight: \"1px solid #ccc\",\n                fontSize: \"12px\",\n                height: \"10px\",\n                lineHeight: \"1\",\n                paddingTop: \"0px\",\n                paddingBottom: \"0px\",\n              },\n              \"& td:nth-of-type(2)\": {\n                width: \"230px\",\n                maxWidth: \"230px\",\n              },\n              \"& tr:first-of-type td\": {\n                background: \"#f5d5a7 \",\n              },\n            },\n          }}\n          muiTableHeadProps={{\n            sx: {\n              \"& th\": {\n                borderTop: \"1px solid #ccc\",\n                borderRight: \"1px solid #ccc\",\n                background: \"#f4f4f4 \",\n                fontSize: \"12px\",\n              },\n              \"& th:nth-of-type(2)\": {\n                width: \"230px\",\n                maxWidth: \"230px\",\n              },\n            },\n          }}\n        />\n      ) : null}\n    </div>\n  );\n}\n","import React, { useEffect, useRef, useState } from \"react\";\nimport DatePicker from \"react-datepicker\";\nimport { MultiSelect } from \"react-multi-select-component\";\nimport {\n  FaChevronCircleDown,\n  FaChevronCircleUp,\n  FaSearch,\n} from \"react-icons/fa\";\nimport { CCollapse } from \"@coreui/react\";\nimport axios from \"axios\";\nimport moment from \"moment\";\nimport GlobalValidation from \"../ValidationComponent/GlobalValidation\";\nimport { environment } from \"../../environments/environment\";\nimport Loader from \"../Loader/Loader\";\nimport MaterialReactCollapisbleTable from \"../PrimeReactTableComponent/MaterialReactCollapisbleTable\";\nimport { AiFillWarning } from \"react-icons/ai\";\nimport InnovationDashboardTable from \"./InnovationDashboardTable\";\nimport MonthlyForecastRevenueCalenderTable from \"../RevenueMetrices/MonthlyForecastRevenueCalenderTable\";\nimport VendorPerformanceTopMaterialTable from \"../VendorComponent/VendorPerformanceTopMaterialTable\";\nimport InnovationMaterialTable from \"./InnovationMaterialTable\";\nfunction InnovationDashboard() {\n  const [startDate, setStartDate] = useState(new Date());\n  const [value, onChange] = useState(new Date());\n  const [visible, setVisible] = useState(false);\n  const [cheveronIcon, setCheveronIcon] = useState(FaChevronCircleUp);\n  const [country, setCountry] = useState([]);\n  const [selectedCountry, setSelectedCountry] = useState([]);\n  const [Type, setType] = useState([]);\n  const [selectedType, setSelectedType] = useState([]);\n  const [searching, setsearching] = useState(false);\n  const [details, setDetails] = useState([]);\n  const [columns, setColumns] = useState([]);\n  const [validationmessage, setValidationMessage] = useState(false);\n  const loggedUserId = localStorage.getItem(\"resId\");\n\n  const baseUrl = environment.baseUrl;\n\n  const ref = useRef([]);\n\n  const initialValue = {\n    countryIds: \"6,5,3,8,7,1,2\",\n    StartDt: moment(new Date()).format(\"yyyy-MM-DD\"),\n    duration: \"2\",\n    measures: \"Alloc,Act,rdc\",\n    userId: loggedUserId,\n  };\n\n  const [state, setState] = useState(initialValue);\n  const [tableData, setTableData] = useState([]);\n\n  const getCountries = () => {\n    axios\n      .get(baseUrl + `/CostMS/cost/getCountries`)\n\n      .then((Response) => {\n        let countries = [];\n\n        let data = Response.data;\n        data.length > 0 &&\n          data.forEach((e) => {\n            let countryObj = {\n              label: e.country_name,\n              value: e.id,\n            };\n            {\n              e.country_name == \"NM\" ? \"\" : countries.push(countryObj);\n            }\n          });\n        setCountry(countries);\n        setSelectedCountry(countries);\n      });\n  };\n\n  const getType = () => {\n    let types = [];\n    types.push(\n      { value: \"Alloc\", label: \"Allocations\" },\n      { value: \"Act\", label: \"Actuals\" },\n      { value: \"rdc\", label: \"RDC\" }\n    );\n    setType(types);\n    setSelectedType(types.filter((ele) => ele.value >= \"\"));\n    let filteredType = [];\n    types.forEach((data) => {\n      if (data.value >= \"\") {\n        filteredType.push(data.value);\n      }\n    });\n  };\n\n  const customValueRenderer = (selected, _options) => {\n    return selected.length === country.length\n      ? // selected.length === departments.length\n        \"<< ALL >>\"\n      : selected.length === 0\n      ? \"<< Please Select >>\"\n      : selected.map((label) => {\n          return selected.length > 1 ? label.label + \",\" : label.label;\n        });\n  };\n\n  const getTableData = () => {\n    let valid = GlobalValidation(ref);\n    if (valid) {\n      {\n        setValidationMessage(true);\n      }\n      return;\n    }\n    if (valid) {\n      return;\n    }\n    setsearching(true);\n    axios({\n      method: \"post\",\n      // url: `http://localhost:8090/UtilityMS/getInnovationInvestment?countryIds=${state.countryIds}&month=${state.StartDt}&duration=${state.duration}&measures=${state.measures}`,\n      url: baseUrl + `/UtilityMS/getInnovationInvestment`,\n      // url: `http://localhost:8090/UtilityMS/getInnovationInvestment`,\n\n      // data: {\n      //   countryIds: \"6,5,3,8,7,1,2\",\n      //   month: \"2023-03-13\",\n      //   duration: \"2\",\n      //   measures: \"Alloc,Act,rdc\",\n      //   UserId: \"512\",\n      // },\n      data: {\n        countryIds: state.countryIds,\n        month: state.StartDt,\n        duration: state.duration,\n        measures: state.measures,\n        userId: loggedUserId,\n      },\n    }).then((res) => {\n      let detail = res.data.tableData;\n      let cols = res.data.columns?.replaceAll(\"'\", \"\").split(\",\");\n      setDetails(detail);\n      setTableData(res.data);\n      setColumns(cols);\n      setValidationMessage(false);\n      setTimeout(() => {\n        setsearching(false);\n      }, 1000);\n    });\n  };\n\n  useEffect(() => {\n    getCountries();\n    getType();\n  }, []);\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setState((prev) => {\n      return { ...prev, [name]: value };\n    });\n  };\n\n  return (\n    <div>\n      {validationmessage ? (\n        <div className=\"statusMsg error\">\n          {\" \"}\n          <AiFillWarning /> Please select valid values for highlighted fields\n        </div>\n      ) : (\n        \"\"\n      )}\n      <div className=\"col-md-12\">\n        <div className=\"pageTitle\">\n          <div className=\"childOne\"></div>\n          <div className=\"childTwo\">\n            <h2>Innovation Investment</h2>\n          </div>\n          <div className=\"childThree\"></div>\n        </div>\n      </div>\n      <div className=\"group mb-3 customCard\">\n        <div className=\"col-md-12 collapseHeader\">\n          <h2>Search Filters</h2>\n          <div\n            onClick={() => {\n              setVisible(!visible);\n              visible\n                ? setCheveronIcon(FaChevronCircleUp)\n                : setCheveronIcon(FaChevronCircleDown);\n            }}\n          >\n            <span>{cheveronIcon}</span>\n          </div>\n        </div>\n        <CCollapse visible={!visible}>\n          <div className=\"group-content row\">\n            <div className=\" col-md-3 mb-2\">\n              <div className=\"form-group row\">\n                <label className=\"col-5\" htmlFor=\"country\">\n                  Country&nbsp;<span className=\"error-text\">*</span>\n                </label>\n                <span className=\"col-1 p-0\">:</span>\n                <div\n                  className=\"col-6 multiselect\"\n                  ref={(ele) => {\n                    ref.current[0] = ele;\n                  }}\n                >\n                  <MultiSelect\n                    id=\"countryIds\"\n                    options={country}\n                    hasSelectAll={true}\n                    value={selectedCountry}\n                    disabled={false}\n                    valueRenderer={customValueRenderer}\n                    onChange={(e) => {\n                      setSelectedCountry(e);\n                      let filteredCountry = [];\n                      e.forEach((d) => {\n                        filteredCountry.push(d.value);\n                      });\n                      setState((prevVal) => ({\n                        ...prevVal,\n                        [\"countryIds\"]: filteredCountry.toString(),\n                      }));\n                    }}\n                  />\n                </div>\n              </div>\n            </div>\n            <div className=\" col-md-3 mb-2\">\n              <div className=\"form-group row\">\n                <label className=\"col-5\" htmlFor=\"startweek\">\n                  Start Week&nbsp;<span className=\"error-text\">*</span>\n                </label>\n                <span className=\"col-1 p-0\">:</span>\n                <div className=\"col-6\">\n                  <DatePicker\n                    className=\"StartDt\"\n                    selected={startDate}\n                    onChange={(e) => {\n                      setState((prev) => ({\n                        ...prev,\n                        [\"StartDt\"]: moment(e).format(\"yyyy-MM-DD\"),\n                      }));\n                      setStartDate(e);\n                    }}\n                    dateFormat=\"dd-MMM-yyyy\"\n                  />\n                </div>\n              </div>\n            </div>\n            <div className=\" col-md-3 mb-2\">\n              <div className=\"form-group row\">\n                <label className=\"col-5\" htmlFor=\"Duration\">\n                  Duration\n                </label>\n                <span className=\"col-1 p-0\">:</span>\n                <div className=\"col-6\">\n                  <select\n                    className=\"text\"\n                    id=\"duration\"\n                    name=\"duration\"\n                    defaultValue={2}\n                    onChange={handleChange}\n                  >\n                    <option value=\"1\">1</option>\n                    <option value=\"2\">2</option>\n                    <option value=\"3\">3</option>\n                    <option value=\"4\">4</option>\n                    <option value=\"5\">5</option>\n                    <option value=\"6\">6</option>\n                    <option value=\"7\">7</option>\n                    <option value=\"8\">8</option>\n                    <option value=\"9\">9</option>\n                    <option value=\"10\">10</option>\n                    <option value=\"11\">11</option>\n                    <option value=\"12\">12</option>\n                  </select>\n                </div>\n              </div>\n            </div>\n            <div className=\" col-md-3 mb-2\">\n              <div className=\"form-group row\">\n                <label className=\"col-5\" htmlFor=\"measures\">\n                  Measures\n                </label>\n                <span className=\"col-1 p-0\">:</span>\n                <div className=\"col-6\">\n                  <MultiSelect\n                    id=\"measures\"\n                    options={Type}\n                    hasSelectAll={true}\n                    value={selectedType}\n                    disabled={false}\n                    onChange={(e) => {\n                      setSelectedType(e);\n                      let filteredType = [];\n                      e.forEach((d) => {\n                        filteredType.push(d.value);\n                      });\n                      setState((prevVal) => ({\n                        ...prevVal,\n                        [\"measures\"]: filteredType.toString(),\n                      }));\n                    }}\n                  />\n                </div>\n              </div>\n            </div>\n            <div className=\"col-md-12 col-sm-12 col-xs-12 btn-container center my-2\">\n              <button\n                type=\"submit\"\n                className=\"btn btn-primary\"\n                onClick={getTableData}\n              >\n                <FaSearch /> Search{\" \"}\n              </button>\n            </div>\n          </div>\n          {searching ? <Loader setsearching={setsearching} /> : \"\"}\n        </CCollapse>\n\n        <div className=\"col-md-12\">\n          {/* MaterialReactCollapisbleTable */}\n          {/* InnovationDashboardTable */}\n          <InnovationMaterialTable\n            data={tableData}\n            expandedCols={[\"supervisor\", \"emp_cadre\"]}\n            colExpandState={[\"0\", \"0\", \"name\"]}\n          />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default InnovationDashboard;\n","import React, { useState, useEffect } from \"react\";\nimport MaterialReactTable from \"material-react-table\";\nimport { IconButton } from \"@mui/material\";\nimport fte_active from \"../../assets/images/empstatusIcon/fte_active.png\";\nimport fte_inactive from \"../../assets/images/empstatusIcon/fte_inactive.png\";\nimport fte_notice from \"../../assets/images/empstatusIcon/fte_notice.png\";\nimport subk_active from \"../../assets/images/empstatusIcon/subk_active.png\";\nimport subk_inactive from \"../../assets/images/empstatusIcon/subk_inactive.png\";\nimport subk_notice from \"../../assets/images/empstatusIcon/subk_notice.png\";\nimport \"./EngagementAllocationsTable.scss\";\nimport { BiChevronLeft, BiChevronRight } from \"react-icons/bi\";\n\nexport default function MaterialReactCollapisbleTable(props) {\n  const icons = {\n    fte0: (\n      <img\n        src={fte_inactive}\n        alt=\"(fte_inactive_icon)\"\n        style={{ height: \"12px\", float: \"left\" }}\n        title=\"Ex-Employee\"\n      />\n    ),\n    fte1: (\n      <img\n        src={fte_active}\n        alt=\"(fte_active_icon)\"\n        style={{ height: \"12px\", float: \"left\" }}\n        title=\"Active Employee\"\n      />\n    ),\n    fte2: (\n      <img\n        src={fte_notice}\n        alt=\"(fte_notice_icon)\"\n        style={{ height: \"12px\", float: \"left\" }}\n        title=\"Employee in notice period\"\n      />\n    ),\n    subk0: (\n      <img\n        src={subk_inactive}\n        alt=\"(subk_inactive_icon)\"\n        style={{ height: \"12px\", float: \"left\" }}\n        title=\"Ex-Contractor\"\n      />\n    ),\n    subk1: (\n      <img\n        src={subk_active}\n        alt=\"(subk_active_icon)\"\n        style={{ height: \"12px\", width: \"auto\", float: \"left\" }}\n        title=\"Active Contractor\"\n        size=\"1em\"\n      />\n    ),\n    subk2: (\n      <img\n        src={subk_notice}\n        alt=\"(subk_notice_icon)\"\n        style={{ height: \"12px\", float: \"left\" }}\n        title=\"Contractor in notice period\"\n      />\n    ),\n  };\n\n  const { data, expandedCols, colExpandState } = props;\n\n  const [nodes, setNodes] = useState([]);\n  const [columns, setColumns] = useState(null);\n  const [hiddenColumns, setHiddenColumns] = useState({});\n  const [colExpFlag, setColumnExpFlag] = useState(false);\n  const [headers, setHeaders] = useState([]);\n\n  const numberWithCommas = (x) => {\n    var number = String(x);\n    if (number.includes(\".\")) {\n      var decimalNumbers = number;\n      var num = Number(decimalNumbers);\n      let FdN =\n        num != null &&\n        num.toLocaleString(\"en-US\", {\n          minimumFractionDigits: 2,\n          maximumFractionDigits: 20,\n        });\n      let final = FdN.split(\".\");\n      final[0] = final[0].replace(/(?<=\\d)(?=(\\d{3})+(?!\\d|\\.))/g, \",\");\n      return final.join(\".\");\n    } else {\n      return (\n        number != null &&\n        parseFloat(number)\n          .toLocaleString(\"en-US\", {\n            minimumFractionDigits: 2,\n            maximumFractionDigits: 20,\n          })\n          .replace(/(?<=\\d)(?=(\\d{3})+(?!\\d|\\.))/g, \",\")\n      );\n    }\n  };\n\n  useEffect(() => {\n    getData();\n  }, [data]);\n  var count = 0;\n\n  const getData = () => {\n    let expandClass = \"\";\n    if (colExpFlag == true && count > 0) {\n      expandClass = \"expanded\";\n    } else {\n      expandClass = \"\";\n    }\n    let tableData = data.tableData;\n    let columns = null;\n\n    if (data?.columns?.includes(\"'\")) {\n      columns = data?.columns?.replaceAll(\"'\", \"\");\n    } else {\n      columns = data?.columns;\n    }\n\n    let colArr = columns?.split(\",\");\n\n    let newHeaders = [];\n    let hiddenHeaders = [];\n\n    const obj = {};\n\n    for (let i = 0; i < colArr?.length; i++) {\n      let colVal = colArr[i].trim();\n\n      let firstData = tableData[0];\n      obj[colVal] = firstData[colVal];\n    }\n\n    let headerArray = Object.entries(obj);\n\n    let filteredHeaders = headerArray.filter(\n      ([key, value]) => typeof value === \"string\" && value.includes(\"^&\")\n    );\n\n    setHeaders(filteredHeaders);\n\n    filteredHeaders.map(([key, value]) => {\n      if (expandedCols.includes(key)) {\n        hiddenHeaders.push({ [key]: false });\n      }\n    });\n\n    setHiddenColumns(Object.assign({}, ...hiddenHeaders));\n\n    filteredHeaders.map(([key, value], index) => {\n      newHeaders.push({\n        accessorKey: key,\n        header: value.split(\"^&\")[0],\n        enableColumnActions: false,\n        enableHiding: true,\n        Header: ({ column }) => (\n          <div>\n            {value.split(\"^&\")[0]}{\" \"}\n            {key == colExpandState[2] ? (\n              <IconButton\n                className=\"expandIcon\"\n                title=\"Show Details\"\n                onClick={() => {\n                  setColumnExpFlag((prev) => !prev);\n                }}\n              >\n                {colExpFlag ? <BiChevronLeft /> : <BiChevronRight />}\n              </IconButton>\n            ) : (\n              \"\"\n            )}\n          </div>\n        ),\n        Cell: ({ cell }) => {\n          return (\n            <div\n              style={{\n                whiteSpace: \"nowrap\",\n                overflow: \"hidden\",\n                textOverflow: \"ellipsis\",\n              }}\n              title={cell.getValue()}\n              className={\n                key.includes(\"_\")\n                  ? key.split(\"_\")[1] % 2 == 0\n                    ? \"\"\n                    : \"odd\"\n                  : key.includes(\"total\")\n                  ? \"total\"\n                  : (key == \"roleName\" || key == \"prjMgr\") && \"projManager\"\n              }\n            >\n              {cell.column.id == \"name\" &&\n              cell.row.original.parentId != null ? (\n                <span className=\"rescolor\">\n                  {icons[cell.row.original[\"empStatus\"]]}\n                  &nbsp;{cell.getValue()}\n                </span>\n              ) : key.includes(\"_\") && key.split(\"_\")[2] ? (\n                numberWithCommas(cell.getValue())\n              ) : key.includes(\"total\") ? (\n                numberWithCommas(cell.getValue())\n              ) : (\n                cell.getValue()\n              )}\n            </div>\n          );\n        },\n      });\n    });\n\n    setColumns(newHeaders);\n    let values = [];\n    tableData?.map((d, i) => (i > 0 && d.id != -1 ? values.push(d) : \"\"));\n    setNodes(jsonToTree(values, { children: \"subRows\" }));\n  };\n\n  // useEffect(() => {\n  //   getData();\n  //   colExpFlag ? setHiddenColumns({}) : colCollapse();\n  // }, [colExpFlag]);\n\n  const expandF = () => {\n    getData();\n  };\n\n  const expandT = () => {\n    count++;\n    getData();\n    setHiddenColumns({});\n  };\n\n  useEffect(() => {\n    colExpFlag ? expandT() : expandF();\n    // getData();\n  }, [colExpFlag]);\n\n  const colCollapse = () => {\n    let hiddenHeaders = [];\n    headers.map(([key, value]) => {\n      if (expandedCols.includes(key)) {\n        hiddenHeaders.push({ [key]: false });\n      }\n    });\n\n    setHiddenColumns(Object.assign({}, ...hiddenHeaders));\n  };\n\n  const jsonToTree = (flatArray, options) => {\n    options = {\n      id: \"uniqueId\",\n      parentId: \"parentId\",\n      children: \"subRows\",\n      ...options,\n    };\n    const dictionary = {};\n    const tree = [];\n    const children = options.children;\n    flatArray.forEach((node) => {\n      const nodeId = node[options.id];\n      const nodeParentId = node[options.parentId];\n      dictionary[nodeId] = {\n        [children]: [],\n        ...node,\n        ...dictionary[nodeId],\n      };\n      dictionary[nodeParentId] = dictionary[nodeParentId] || { [children]: [] };\n      dictionary[nodeParentId][children].push(dictionary[nodeId]);\n    });\n    Object.values(dictionary).forEach((obj) => {\n      if (typeof obj[options.id] === \"undefined\") {\n        tree.push(...obj[children]);\n      }\n    });\n    return tree;\n  };\n\n  return (\n    <div className=\"materialReactExpandableTable engagementAllocationsTable darkHeader\">\n      {columns?.length ? (\n        <MaterialReactTable\n          columns={columns}\n          data={nodes}\n          enableExpandAll={true}\n          enableExpanding\n          enablePagination={false}\n          enableBottomToolbar={false}\n          enableTopToolbar={false}\n          enableColumnActions={false}\n          enableSorting={false}\n          filterFromLeafRows\n          initialState={{\n            expanded: false,\n            density: \"compact\",\n            columnVisibility: { ...hiddenColumns },\n            columnPinning: { right: [\"total\"] },\n          }}\n          state={{ columnVisibility: { ...hiddenColumns } }}\n          defaultColumn={{ minSize: 40, maxSize: 1000, size: 40 }}\n          enableStickyHeader\n          muiTableContainerProps={{\n            sx: {\n              maxHeight: \"70vh\",\n              width: \"auto\",\n              maxWidth: \"fit-content\",\n            },\n          }}\n          muiTableBodyProps={{\n            sx: {\n              \"&\": {},\n              \"& td\": {\n                borderRight: \"1px solid #ccc\",\n                height: \"22px\",\n                fontSize: \"11px\",\n                paddingTop: \"0px\",\n                paddingBottom: \"0px\",\n              },\n            },\n          }}\n          muiTableHeadProps={{\n            sx: {\n              \"& th\": {\n                borderTop: \"1px solid #ccc\",\n                borderRight: \"1px solid #ccc\",\n                background: \"#f4f4f4 \",\n                fontSize: \"13px\",\n                padding: \"0px 8px\",\n              },\n            },\n          }}\n        ></MaterialReactTable>\n      ) : null}\n    </div>\n  );\n}\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      margin: 0\n    },\n\n    /* Styles applied to the root element if `variant=\"body2\"`. */\n    body2: theme.typography.body2,\n\n    /* Styles applied to the root element if `variant=\"body1\"`. */\n    body1: theme.typography.body1,\n\n    /* Styles applied to the root element if `variant=\"caption\"`. */\n    caption: theme.typography.caption,\n\n    /* Styles applied to the root element if `variant=\"button\"`. */\n    button: theme.typography.button,\n\n    /* Styles applied to the root element if `variant=\"h1\"`. */\n    h1: theme.typography.h1,\n\n    /* Styles applied to the root element if `variant=\"h2\"`. */\n    h2: theme.typography.h2,\n\n    /* Styles applied to the root element if `variant=\"h3\"`. */\n    h3: theme.typography.h3,\n\n    /* Styles applied to the root element if `variant=\"h4\"`. */\n    h4: theme.typography.h4,\n\n    /* Styles applied to the root element if `variant=\"h5\"`. */\n    h5: theme.typography.h5,\n\n    /* Styles applied to the root element if `variant=\"h6\"`. */\n    h6: theme.typography.h6,\n\n    /* Styles applied to the root element if `variant=\"subtitle1\"`. */\n    subtitle1: theme.typography.subtitle1,\n\n    /* Styles applied to the root element if `variant=\"subtitle2\"`. */\n    subtitle2: theme.typography.subtitle2,\n\n    /* Styles applied to the root element if `variant=\"overline\"`. */\n    overline: theme.typography.overline,\n\n    /* Styles applied to the root element if `variant=\"srOnly\"`. Only accessible to screen readers. */\n    srOnly: {\n      position: 'absolute',\n      height: 1,\n      width: 1,\n      overflow: 'hidden'\n    },\n\n    /* Styles applied to the root element if `align=\"left\"`. */\n    alignLeft: {\n      textAlign: 'left'\n    },\n\n    /* Styles applied to the root element if `align=\"center\"`. */\n    alignCenter: {\n      textAlign: 'center'\n    },\n\n    /* Styles applied to the root element if `align=\"right\"`. */\n    alignRight: {\n      textAlign: 'right'\n    },\n\n    /* Styles applied to the root element if `align=\"justify\"`. */\n    alignJustify: {\n      textAlign: 'justify'\n    },\n\n    /* Styles applied to the root element if `nowrap={true}`. */\n    noWrap: {\n      overflow: 'hidden',\n      textOverflow: 'ellipsis',\n      whiteSpace: 'nowrap'\n    },\n\n    /* Styles applied to the root element if `gutterBottom={true}`. */\n    gutterBottom: {\n      marginBottom: '0.35em'\n    },\n\n    /* Styles applied to the root element if `paragraph={true}`. */\n    paragraph: {\n      marginBottom: 16\n    },\n\n    /* Styles applied to the root element if `color=\"inherit\"`. */\n    colorInherit: {\n      color: 'inherit'\n    },\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      color: theme.palette.primary.main\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      color: theme.palette.secondary.main\n    },\n\n    /* Styles applied to the root element if `color=\"textPrimary\"`. */\n    colorTextPrimary: {\n      color: theme.palette.text.primary\n    },\n\n    /* Styles applied to the root element if `color=\"textSecondary\"`. */\n    colorTextSecondary: {\n      color: theme.palette.text.secondary\n    },\n\n    /* Styles applied to the root element if `color=\"error\"`. */\n    colorError: {\n      color: theme.palette.error.main\n    },\n\n    /* Styles applied to the root element if `display=\"inline\"`. */\n    displayInline: {\n      display: 'inline'\n    },\n\n    /* Styles applied to the root element if `display=\"block\"`. */\n    displayBlock: {\n      display: 'block'\n    }\n  };\n};\nvar defaultVariantMapping = {\n  h1: 'h1',\n  h2: 'h2',\n  h3: 'h3',\n  h4: 'h4',\n  h5: 'h5',\n  h6: 'h6',\n  subtitle1: 'h6',\n  subtitle2: 'h6',\n  body1: 'p',\n  body2: 'p'\n};\nvar Typography = /*#__PURE__*/React.forwardRef(function Typography(props, ref) {\n  var _props$align = props.align,\n      align = _props$align === void 0 ? 'inherit' : _props$align,\n      classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'initial' : _props$color,\n      component = props.component,\n      _props$display = props.display,\n      display = _props$display === void 0 ? 'initial' : _props$display,\n      _props$gutterBottom = props.gutterBottom,\n      gutterBottom = _props$gutterBottom === void 0 ? false : _props$gutterBottom,\n      _props$noWrap = props.noWrap,\n      noWrap = _props$noWrap === void 0 ? false : _props$noWrap,\n      _props$paragraph = props.paragraph,\n      paragraph = _props$paragraph === void 0 ? false : _props$paragraph,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'body1' : _props$variant,\n      _props$variantMapping = props.variantMapping,\n      variantMapping = _props$variantMapping === void 0 ? defaultVariantMapping : _props$variantMapping,\n      other = _objectWithoutProperties(props, [\"align\", \"classes\", \"className\", \"color\", \"component\", \"display\", \"gutterBottom\", \"noWrap\", \"paragraph\", \"variant\", \"variantMapping\"]);\n\n  var Component = component || (paragraph ? 'p' : variantMapping[variant] || defaultVariantMapping[variant]) || 'span';\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, variant !== 'inherit' && classes[variant], color !== 'initial' && classes[\"color\".concat(capitalize(color))], noWrap && classes.noWrap, gutterBottom && classes.gutterBottom, paragraph && classes.paragraph, align !== 'inherit' && classes[\"align\".concat(capitalize(align))], display !== 'initial' && classes[\"display\".concat(capitalize(display))]),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Typography.propTypes = {\n  /**\n   * Set the text-align on the component.\n   */\n  align: PropTypes.oneOf(['inherit', 'left', 'center', 'right', 'justify']),\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['initial', 'inherit', 'primary', 'secondary', 'textPrimary', 'textSecondary', 'error']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   * Overrides the behavior of the `variantMapping` prop.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * Controls the display type\n   */\n  display: PropTypes.oneOf(['initial', 'block', 'inline']),\n\n  /**\n   * If `true`, the text will have a bottom margin.\n   */\n  gutterBottom: PropTypes.bool,\n\n  /**\n   * If `true`, the text will not wrap, but instead will truncate with a text overflow ellipsis.\n   *\n   * Note that text overflow can only happen with block or inline-block level elements\n   * (the element needs to have a width in order to overflow).\n   */\n  noWrap: PropTypes.bool,\n\n  /**\n   * If `true`, the text will have a bottom margin.\n   */\n  paragraph: PropTypes.bool,\n\n  /**\n   * Applies the theme typography styles.\n   */\n  variant: PropTypes.oneOf(['h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'subtitle1', 'subtitle2', 'body1', 'body2', 'caption', 'button', 'overline', 'srOnly', 'inherit']),\n\n  /**\n   * The component maps the variant prop to a range of different HTML element types.\n   * For instance, subtitle1 to `<h6>`.\n   * If you wish to change that mapping, you can provide your own.\n   * Alternatively, you can use the `component` prop.\n   */\n  variantMapping: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTypography'\n})(Typography);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Typography from '../Typography';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    margin: 0,\n    padding: '16px 24px',\n    flex: '0 0 auto'\n  }\n};\nvar DialogTitle = /*#__PURE__*/React.forwardRef(function DialogTitle(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$disableTypogra = props.disableTypography,\n      disableTypography = _props$disableTypogra === void 0 ? false : _props$disableTypogra,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"disableTypography\"]);\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other), disableTypography ? children : /*#__PURE__*/React.createElement(Typography, {\n    component: \"h2\",\n    variant: \"h6\"\n  }, children));\n});\nprocess.env.NODE_ENV !== \"production\" ? DialogTitle.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the children won't be wrapped by a typography component.\n   * For instance, this can be useful to render an h4 instead of the default h2.\n   */\n  disableTypography: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiDialogTitle'\n})(DialogTitle);"],"names":["InnovationMaterialTable","props","data","expandedCols","colExpandState","useState","nodes","setNodes","columns","setColumns","hiddenColumns","setHiddenColumns","colExpFlag","setColumnExpFlag","headers","setHeaders","icons","fte0","src","fte_inactive","alt","style","height","title","fte1","fte_active","fte2","fte_notice","subk0","subk_inactive","subk1","subk_active","subk2","subk_notice","numberWithCommas","x","number","String","includes","num","Number","final","toFixed","split","replace","join","useEffect","getData","tableData","replaceAll","colArr","newHeaders","hiddenHeaders","obj","i","length","colVal","trim","firstData","headerArray","Object","entries","unWantedCols","filteredHeaders","filter","d","map","key","push","assign","minusOneRow","id","index","value","accessorKey","header","enableColumnActions","enableHiding","Header","column","onClick","prev","subHeaders","sort","indexOf","subArray","a","test","subkey","slice","className","Cell","cell","row","original","resource","name","getValue","values","tempData","jsonToTree","children","colCollapse","flatArray","options","parentId","dictionary","tree","forEach","node","nodeId","nodeParentId","enableExpandAll","enableExpanding","enablePagination","enableBottomToolbar","enableTopToolbar","enableSorting","filterFromLeafRows","initialState","expanded","density","columnVisibility","columnPinning","left","state","defaultColumn","minSize","maxSize","size","muiTableBodyProps","sx","borderRight","borderBottom","borderTop","fontSize","lineHeight","paddingTop","paddingBottom","width","maxWidth","background","muiTableHeadProps","Date","startDate","setStartDate","visible","setVisible","FaChevronCircleUp","cheveronIcon","setCheveronIcon","country","setCountry","selectedCountry","setSelectedCountry","Type","setType","selectedType","setSelectedType","searching","setsearching","setDetails","validationmessage","setValidationMessage","loggedUserId","localStorage","getItem","baseUrl","environment","ref","useRef","initialValue","countryIds","StartDt","moment","format","duration","measures","userId","setState","setTableData","axios","then","Response","countries","e","countryObj","label","country_name","types","ele","filteredType","getType","FaChevronCircleDown","htmlFor","current","hasSelectAll","disabled","valueRenderer","selected","_options","onChange","filteredCountry","prevVal","toString","dateFormat","defaultValue","target","type","valid","GlobalValidation","method","url","month","res","detail","cols","setTimeout","Loader","MaterialReactCollapisbleTable","float","toLocaleString","minimumFractionDigits","maximumFractionDigits","parseFloat","IconButton","whiteSpace","overflow","textOverflow","right","enableStickyHeader","muiTableContainerProps","maxHeight","padding","defaultVariantMapping","h1","h2","h3","h4","h5","h6","subtitle1","subtitle2","body1","body2","Typography","React","_props$align","align","classes","_props$color","color","component","_props$display","display","_props$gutterBottom","gutterBottom","_props$noWrap","noWrap","_props$paragraph","paragraph","_props$variant","variant","_props$variantMapping","variantMapping","other","_objectWithoutProperties","Component","_extends","clsx","root","concat","capitalize","withStyles","theme","margin","typography","caption","button","overline","srOnly","position","alignLeft","textAlign","alignCenter","alignRight","alignJustify","marginBottom","colorInherit","colorPrimary","palette","primary","main","colorSecondary","secondary","colorTextPrimary","text","colorTextSecondary","colorError","error","displayInline","displayBlock","DialogTitle","_props$disableTypogra","disableTypography","flex"],"sourceRoot":""}