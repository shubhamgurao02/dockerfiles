{"version":3,"file":"static/js/1481.d3f609d8.chunk.js","mappings":"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","sources":["views/ProjectInvoiceDetailsComponent/PrimeReactSampleTable.js","views/ProjectInvoiceDetailsComponent/ProjectInvoiceDetails.js","views/ProjectInvoiceDetailsComponent/ProjectInvoiceDetailsFilters.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { FilterMatchMode, FilterOperator } from \"primereact/api\";\nimport { DataTable } from \"primereact/datatable\";\nimport { Column } from \"primereact/column\";\nimport \"primeicons/primeicons.css\";\nimport \"primereact/resources/themes/lara-light-indigo/theme.css\";\nimport \"primereact/resources/primereact.css\";\nimport \"primeflex/primeflex.css\";\nimport { Button } from \"primereact/button\";\nimport { InputText } from \"primereact/inputtext\";\n// import \"./DemoTable.scss\";\n\nfunction PrimeReactSampleTable(props) {\n  const { data } = props;\n\n  const [filters1, setFilters1] = useState({\n    //   invoiceName: { value: null, matchMode: FilterMatchMode.CONTAINS },\n    invoiceName: { value: null, matchMode: FilterMatchMode.CONTAINS },\n    grossMargin: { value: null, matchMode: FilterMatchMode.CONTAINS },\n    project: { value: null, matchMode: FilterMatchMode.CONTAINS },\n    customer: { value: null, matchMode: FilterMatchMode.CONTAINS },\n    invMonth: { value: null, matchMode: FilterMatchMode.CONTAINS },\n    netInv: { value: null, matchMode: FilterMatchMode.CONTAINS },\n  });\n  const [globalFilterValue1, setGlobalFilterValue1] = useState(\"\");\n\n  const clearFilter1 = () => {\n    initFilters1();\n  };\n\n  const initFilters1 = () => {\n    setFilters1({\n      //   invoiceName: { value: null, matchMode: FilterMatchMode.CONTAINS },\n      invoiceName: { value: null, matchMode: FilterMatchMode.CONTAINS },\n      grossMargin: { value: null, matchMode: FilterMatchMode.CONTAINS },\n      project: { value: null, matchMode: FilterMatchMode.CONTAINS },\n      customer: { value: null, matchMode: FilterMatchMode.CONTAINS },\n      invMonth: { value: null, matchMode: FilterMatchMode.CONTAINS },\n      netInv: { value: null, matchMode: FilterMatchMode.CONTAINS },\n      //   project: {\n      //     operator: FilterOperator.AND,\n      //     constraints: [],\n      //   },\n      //   customer: {\n      //     operator: FilterOperator.AND,\n      //     constraints: [{ value: null, matchMode: FilterMatchMode.STARTS_WITH }],\n      //   },\n      //   invMonth: {\n      //     operator: FilterOperator.AND,\n      //     constraints: [{ value: null, matchMode: FilterMatchMode.STARTS_WITH }],\n      //   },\n      //   netInv: {\n      //     operator: FilterOperator.AND,\n      //     constraints: [{ value: null, matchMode: FilterMatchMode.STARTS_WITH }],\n      //   },\n      //   representative: { value: null, matchMode: FilterMatchMode.IN },\n      //   date: {\n      //     operator: FilterOperator.AND,\n      //     constraints: [{ value: null, matchMode: FilterMatchMode.DATE_IS }],\n      //   },\n      //   balance: {\n      //     operator: FilterOperator.AND,\n      //     constraints: [{ value: null, matchMode: FilterMatchMode.EQUALS }],\n      //   },\n      //   status: {\n      //     operator: FilterOperator.OR,\n      //     constraints: [{ value: null, matchMode: FilterMatchMode.EQUALS }],\n      //   },\n      //   activity: { value: null, matchMode: FilterMatchMode.BETWEEN },\n      //   verified: { value: null, matchMode: FilterMatchMode.EQUALS },\n    });\n    setGlobalFilterValue1(\"\");\n  };\n\n  const onGlobalFilterChange1 = (e) => {\n    const value = e.target.value;\n    let _filters1 = { ...filters1 };\n\n    console.log(_filters1);\n\n    _filters1[\"invoiceName\"].value = value;\n\n    setFilters1(_filters1);\n    setGlobalFilterValue1(value);\n  };\n\n  const renderHeader1 = () => {\n    return (\n      <div className=\"flex justify-content-between\">\n        <span></span>\n        <span className=\"p-input-icon-left tableGsearch\">\n          <i className=\"pi pi-search\" />\n          <InputText\n            defaultValue={globalFilterValue1}\n            onChange={onGlobalFilterChange1}\n            placeholder=\"Keyword Search\"\n          />\n        </span>\n        {/* <Button\n          type=\"button\"\n          icon=\"pi pi-filter-slash\"\n          label=\"Clear\"\n          className=\"p-button-outlined tableClear\"\n          onClick={clearFilter1}\n        /> */}\n      </div>\n    );\n  };\n\n  const header1 = renderHeader1();\n  return (\n    <div>\n      <div className=\"card\">\n        {/* <h5>Filter Menu</h5>\n        <p>Filters are displayed in an overlay.</p> */}\n        <DataTable\n          value={data}\n          paginator\n          //   className=\"p-datatable-customers\"\n          showGridlines\n          rows={10}\n          dataKey=\"id\"\n          //   scrollable\n          //   scrollDirection=\"both\"\n          //   header=\"Small Table\"\n          //   size=\"small\"\n          filters={filters1}\n          //   loading={loading1}\n          responsiveLayout=\"scroll\"\n          header={header1}\n          emptyMessage=\"No Data found.\"\n        >\n          <Column\n            field=\"grossMargin\"\n            header=\"Gross Margin\"\n            // filter\n            // filterPlaceholder=\"Search by name\"\n            // style={{ minWidth: \"12rem\" }}\n            style={{ width: \"160px\" }}\n            sortable\n            frozen\n          />\n\n          <Column\n            field=\"invoiceName\"\n            header=\"Invoice Name\"\n            // style={{ minWidth: \"8rem\" }}\n            // body={verifiedBodyTemplate}\n            // filter\n            style={{ width: \"200px\" }}\n            sortable\n            frozen\n            // filterElement={verifiedFilterTemplate}\n          />\n          <Column field=\"project\" header=\"Project\" sortable />\n          <Column field=\"customer\" header=\"Customer\" sortable />\n          <Column field=\"invMonth\" header=\"Inv Month\" sortable />\n          <Column field=\"netInv\" header=\"Net Inv\" sortable />\n          <Column field=\"project\" header=\"Project\" sortable />\n          <Column field=\"customer\" header=\"Customer\" sortable />\n          <Column field=\"invMonth\" header=\"Inv Month\" sortable />\n          <Column field=\"netInv\" header=\"Net Inv\" sortable />\n          {/* <Column field=\"project\" header=\"Project\" sortable />\n          <Column field=\"customer\" header=\"Customer\" sortable />\n          <Column field=\"invMonth\" header=\"Inv Month\" sortable />\n          <Column field=\"netInv\" header=\"Net Inv\" sortable />\n          <Column field=\"project\" header=\"Project\" sortable />\n          <Column field=\"customer\" header=\"Customer\" sortable />\n          <Column field=\"invMonth\" header=\"Inv Month\" sortable />\n          <Column field=\"netInv\" header=\"Net Inv\" sortable /> */}\n        </DataTable>\n      </div>\n    </div>\n  );\n}\n\nexport default PrimeReactSampleTable;\n","import React, { useState } from \"react\";\nimport FlatPrimeReactTable from \"../PrimeReactTableComponent/FlatPrimeReactTable\";\nimport PrimeReactSampleTable from \"./PrimeReactSampleTable\";\nimport ProjectInvoiceDetailsFilters from \"./ProjectInvoiceDetailsFilters\";\n// import SampleComponent from \"./SampleComponent\";\n\n\nfunction ProjectInvoiceDetails() {\n  const [data, setData] = useState([]);\n\n  console.log(\"in linee 9\");\n  console.log(data);\n\n  return (\n    <div>\n      <ProjectInvoiceDetailsFilters setData={setData} />\n      {/* <SampleComponent /> */}\n      {/* <PrimeReactSampleTable data={data} /> */}\n      <FlatPrimeReactTable data={data} />\n    </div>\n  );\n}\n\nexport default ProjectInvoiceDetails;\n","import axios from \"axios\";\nimport moment from \"moment\";\nimport React, { useEffect, useState } from \"react\";\nimport DatePicker from \"react-datepicker\";\nimport { MultiSelect } from \"react-multi-select-component\";\nimport { environment } from \"../../environments/environment\";\nimport ProjectInvoiceDetailsTable from \"./ProjectInvoiceDetailsTable\";\n\nfunction ProjectInvoiceDetailsFilters(props) {\n  const { setData } = props;\n\n  const dates = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\n\n  const baseUrl = environment.baseUrl;\n\n  const [invoiceStatusData, setInvoiceStatusData] = useState([]);\n  const [customers, setCustomers] = useState([]);\n  const [selectedCustomers, setSelectedCustomers] = useState([]);\n  const [projectData, setProjectData] = useState([]);\n  const [selectedProjects, setSelectedProjects] = useState([]);\n  const [projectInvoiceDetails, setProjectInvoiceDetails] = useState([]);\n\n  const initialValue = {\n    viewType: 1,\n    from: \"2022-04-01\",\n    duration: 1,\n    invStage: -1,\n    customers: -1,\n    projects: -1,\n    reportId: 29,\n  };\n  const [formData, setFormData] = useState(initialValue);\n\n  useEffect(() => {\n    getInvoiceStatusData();\n    getCustomersData();\n    getProjectInvoiceDetails();\n  }, []);\n\n  useEffect(() => {\n    setData(projectInvoiceDetails);\n  }, [projectInvoiceDetails]);\n\n  const getInvoiceStatusData = () => {\n    axios({\n      url: baseUrl + `/CostMS/projectInvoice/projectInvoiceStatus`,\n    }).then((resp) => {\n      setInvoiceStatusData(resp.data);\n    });\n  };\n\n  const getCustomersData = () => {\n    axios({\n      url: baseUrl + `/CostMS/projectInvoice/customers`,\n    }).then((resp) => {\n      setCustomers(resp.data);\n    });\n  };\n\n  const getCustomersByProjectsData = () => {\n    console.log(selectedCustomers);\n    axios({\n      url:\n        baseUrl +\n        `/CostMS/projectInvoice/projectsByCustomers?customerId=${selectedCustomers[0]?.value}`,\n    }).then((resp) => {\n      setProjectData(resp.data);\n    });\n  };\n\n  const getProjectInvoiceDetails = () => {\n    axios({\n      method: \"POST\",\n      url: baseUrl + `/CostMS/projectInvoice/getProjectInvoiceDetails`,\n      data: formData,\n    }).then((resp) => {\n      setProjectInvoiceDetails(resp.data);\n    });\n  };\n\n  useEffect(() => {\n    getCustomersByProjectsData();\n  }, [selectedCustomers]);\n\n  const searchClickHandler = () => {\n    console.log(formData);\n    getProjectInvoiceDetails();\n  };\n\n  return (\n    <div>\n      <div className=\"group  customCard\">\n        <h2>Search Filters</h2>\n        <div className=\"group-content row\">\n          <div className=\" col-md-4\">\n            <div className=\"form-group row mb-2\">\n              <label className=\"col-5\" htmlFor=\"viewBy\">\n                View By *\n              </label>\n              <span className=\"col-1\">:</span>\n              <div className=\"col-6\">\n                <select id=\"viewType\">\n                  <option value={1}>{\"Projects\"}</option>\n                  <option value={2}>{\"Customers\"}</option>\n                </select>\n              </div>\n            </div>\n          </div>\n          <div className=\" col-md-4\">\n            <div className=\"form-group row mb-2\">\n              <label className=\"col-5\" htmlFor=\"startMonth\">\n                Start Month *\n              </label>\n              <span className=\"col-1\">:</span>\n              <div className=\"col-6\">\n                <DatePicker\n                  id=\"from\"\n                  selected={new Date()}\n                  onChange={(e) => {\n                    console.log(e);\n                    //   handleChangeDate(e);\n                  }}\n                  maxDate={new Date()}\n                  dateFormat=\"MMM-yyyy\"\n                  showMonthYearPicker\n                />\n              </div>\n            </div>\n          </div>\n          <div className=\" col-md-4\">\n            <div className=\"form-group row mb-2\">\n              <label className=\"col-5\" htmlFor=\"duration\">\n                Duration\n              </label>\n              <span className=\"col-1\">:</span>\n              <div className=\"col-6\">\n                <select\n                  id=\"duration\"\n                  onChange={(e) => {\n                    console.log(e.target.value);\n                  }}\n                >\n                  {dates.map((d, index) => (\n                    <option key={index} value={d}>\n                      {d}\n                    </option>\n                  ))}\n                </select>\n              </div>\n            </div>\n          </div>\n          <div className=\" col-md-4\">\n            <div className=\"form-group row mb-2\">\n              <label className=\"col-5\" htmlFor=\"invoiceStatus\">\n                Invoice Status *\n              </label>\n              <span className=\"col-1\">:</span>\n              <div className=\"col-6\">\n                <MultiSelect\n                  id=\"invStage\"\n                  options={invoiceStatusData}\n                  hasSelectAll={true}\n                  isLoading={false}\n                  shouldToggleOnHover={false}\n                  disableSearch={false}\n                  value={[]}\n                  disabled={false}\n                  onChange={(s) => {\n                    // setSelectedDepartments(s);\n                    // let filteredDeptData = [];\n                    // s?.forEach((element) => {\n                    //     filteredDeptData.push(element.value);\n                    // });\n                    // filtersData.businessUnit = filteredDeptData.toString();\n                  }}\n                />\n              </div>\n            </div>\n          </div>\n          <div className=\" col-md-4\">\n            <div className=\"form-group row mb-2\">\n              <label className=\"col-5\" htmlFor=\"customer\">\n                Customer *\n              </label>\n              <span className=\"col-1\">:</span>\n              <div className=\"col-6\">\n                <MultiSelect\n                  id=\"customers\"\n                  options={customers}\n                  hasSelectAll={true}\n                  isLoading={false}\n                  shouldToggleOnHover={false}\n                  disableSearch={false}\n                  value={selectedCustomers}\n                  disabled={false}\n                  onChange={(s) => {\n                    setSelectedCustomers(s);\n                    // setSelectedDepartments(s);\n                    // let filteredDeptData = [];\n                    // s?.forEach((element) => {\n                    //     filteredDeptData.push(element.value);\n                    // });\n                    // filtersData.businessUnit = filteredDeptData.toString();\n                  }}\n                />\n              </div>\n            </div>\n          </div>\n          <div className=\" col-md-4\">\n            <div className=\"form-group row mb-2\">\n              <label className=\"col-5\" htmlFor=\"project\">\n                Project *\n              </label>\n              <span className=\"col-1\">:</span>\n              <div className=\"col-6\">\n                <MultiSelect\n                  id=\"projects\"\n                  options={projectData}\n                  hasSelectAll={true}\n                  isLoading={false}\n                  shouldToggleOnHover={false}\n                  disableSearch={false}\n                  value={[]}\n                  disabled={false}\n                  onChange={(s) => {\n                    setSelectedProjects(s);\n                    // let filteredDeptData = [];\n                    // s?.forEach((element) => {\n                    //     filteredDeptData.push(element.value);\n                    // });\n                    // filtersData.businessUnit = filteredDeptData.toString();\n                  }}\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"col-12\" align=\"center\">\n          <button className=\"btn btn-primary\" onClick={searchClickHandler}>\n            Search\n          </button>\n        </div>\n        <div className=\"col-12\">\n          {/* <ProjectInvoiceDetailsTable\n            projectInvoiceDetails={projectInvoiceDetails}\n          /> */}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default ProjectInvoiceDetailsFilters;\n"],"names":["useState","data","setData","console","log","ProjectInvoiceDetailsFilters","FlatPrimeReactTable","props","baseUrl","environment","invoiceStatusData","setInvoiceStatusData","customers","setCustomers","selectedCustomers","setSelectedCustomers","projectData","setProjectData","setSelectedProjects","projectInvoiceDetails","setProjectInvoiceDetails","viewType","from","duration","invStage","projects","reportId","formData","useEffect","getInvoiceStatusData","getCustomersData","getProjectInvoiceDetails","axios","url","then","resp","method","value","getCustomersByProjectsData","className","htmlFor","id","selected","Date","onChange","e","maxDate","dateFormat","showMonthYearPicker","target","map","d","index","options","hasSelectAll","isLoading","shouldToggleOnHover","disableSearch","disabled","s","align","onClick"],"sourceRoot":""}