{"version":3,"file":"static/js/9548.1e689d03.chunk.js","mappings":"0SAMe,SAASA,EAAuB,GAK3C,IAAD,EAJDC,EAAiB,EAAjBA,kBACAC,EAAW,EAAXA,YACAC,EAAQ,EAARA,SACAC,EAAI,EAAJA,KAEMC,EAAUC,EAAAA,EAAAA,QAChB,GAA0DC,EAAAA,EAAAA,UAAS,CAAC,GAAE,eAA/DC,EAAqB,KAAEC,EAAwB,KAOtD,GAAwBF,EAAAA,EAAAA,WAAS,GAAM,eAAhCG,EAAI,KAAEC,EAAO,KACdC,GAAkBC,EAAAA,EAAAA,QAAO,OA8B/BC,EAAAA,EAAAA,YAAU,WA1BRH,GAAQ,GACRC,EAAgBG,QAAU,IAAIC,gBAE9BC,IAAM,CACJC,OAAQ,OACRC,IAAKd,EAAO,2CACZe,KAAM,CACJC,YAAapB,EACbG,KAAMA,EACNF,YAAa,GAAKA,GAEpBoB,OAAQV,EAAgBG,QAAQO,SAE/BC,MAAK,SAACC,GACL,IAAMJ,EAAOI,EAAKJ,KAClBX,EAAyBW,GACzBT,GAAQ,GACRc,OAAOC,SAAS,CAAEC,IAAK,KAAMC,SAAU,UACzC,IACCC,OAAM,SAACC,GACNC,QAAQC,IAAIF,EACd,GAOJ,GAAG,CAAC1B,EAAMH,EAAmBC,IAE7B,IAMM+B,EAAoD,QAA7B,EAAGzB,EAAsBY,YAAI,aAA1B,EAA4Bc,KAAI,SAACd,GAC/D,IAAMe,EAAa,CAAC,MAEpB,GAAkB,yBAAdf,EAAKgB,KACP,OACE,yBACE,eAAIC,QAAS,GAAIC,UAAU,cAAa,SAAC,oBAU/C,IAJA,IAAIC,EAAS,GAEPC,EADOhC,EAAsBiC,mBACbC,MAAM,KAAK,aAG/B,IAAIC,EAAOH,EAAOI,GAEH,OAAfxB,EAAKuB,KACFR,EAAWU,MAAK,SAACC,GAAE,OAAKH,EAAKI,SAASD,EAAG,KAC1CP,EAAOS,KACL5B,EAAK6B,GAAK,GACR,eACEX,UAAWK,EAAKD,MAAM,KAAK,GAAK,YAEhCL,QAASjB,EAAKuB,GAAMD,MAAM,MAAM,GAChCQ,QAAS9B,EAAKuB,GAAMD,MAAM,MAAM,GAChCS,MAAO/B,EAAKuB,GAAMD,MAAM,MAAM,GAAG,SAEhCtB,EAAKuB,GAAMD,MAAM,MAAM,IALnBC,IAQP,gBACEL,UAAWK,EAAKD,MAAM,KAAK,GAAK,aAAeC,EAAKD,MAAM,KAAK,GAE/DL,QAASjB,EAAKuB,GAAMD,MAAM,MAAM,GAChCQ,QAAS9B,EAAKuB,GAAMD,MAAM,MAAM,GAChCS,MAAO/B,EAAKuB,GAAM,UAER,SAATA,GACC,SAAC,EAAAS,SAAQ,WACP,iBAAMD,MAAOE,SAASjC,EAAKuB,IAAOW,eAAe,SAAS,SACvDD,SAASjC,EAAKuB,IAAOW,eAAe,cAIzC,UAAC,EAAAF,SAAQ,YACP,qBACA,iBAAMd,UAAU,GAAGa,MAAO/B,EAAKuB,GAAMD,MAAM,MAAM,GAAG,SACjDtB,EAAKuB,GAAMD,MAAM,MAAM,QAI7BC,EAAKI,SAAS,4BACfJ,EAAKI,SAAS,8BACdJ,EAAKI,SAAS,8BACdJ,EAAKI,SAAS,8BACdJ,EAAKI,SAAS,8BACZ,SAAC,EAAAK,SAAQ,WACP,0BAAM,SAGR,KA5BGT,GAiCf,EApDSC,EAAK,EAAGA,EAAKJ,EAAOe,OAAQX,IAAI,IAqDzC,OAAO,wBAAmBL,GAAVnB,EAAK6B,GACvB,IAEA,OACE,iBAAKX,UAAU,gDAA+C,WAC5D,gBAAKA,UAAU,4CAA2C,UACxD,yBACW,WAARlC,EAAoB,UAAY,WAAW,uBAAqB,KACjE,iBAAMoD,MAAO,CAAEC,MAAO,WAAY,SAAEtD,IAAgB,qBAGvDO,GAAO,SAACgD,EAAA,EAAM,CAACC,YAtFA,WAClB/C,EAAgBG,SAAWH,EAAgBG,QAAQ6C,QACnDjD,GAAQ,EACV,IAmFmD,IAC/C,gBAAK2B,UAAU,aAAY,UACzB,kBAAOA,UAAU,0DAAyD,UACxE,2BAAQL,UAKlB,C,iFCiNA,EAvVwB,SAAH,GAAqC,IAA/B4B,EAAc,EAAdA,eAAgBC,EAAO,EAAPA,QACzC,GAAwBvD,EAAAA,EAAAA,UAAS,IAAG,eAA7BH,EAAI,KAAE2D,EAAO,KACpB,GAAgCxD,EAAAA,EAAAA,UAAS,IAAG,eAArCJ,EAAQ,KAAE6D,EAAW,KAC5B,GAAkDzD,EAAAA,EAAAA,UAAS,IAAG,eAAvDN,EAAiB,KAAEgE,EAAoB,KAC9C,GAAwC1D,EAAAA,EAAAA,WAAS,GAAM,eAAhD2D,EAAY,KAAEC,EAAe,KAE9BC,EAAQ,CACZC,MACE,gBACEC,IAAKC,EACLC,IAAI,sBACJhB,MAAO,CAAEiB,OAAQ,QACjBtB,MAAM,gBAGVuB,MACE,gBACEJ,IAAKK,EACLH,IAAI,oBACJhB,MAAO,CAAEiB,OAAQ,QACjBtB,MAAM,oBAGVyB,MACE,gBACEN,IAAKO,EACLL,IAAI,oBACJhB,MAAO,CAAEiB,OAAQ,QACjBtB,MAAM,8BAGV2B,OACE,gBACER,IAAKS,EACLP,IAAI,uBACJhB,MAAO,CAAEiB,OAAQ,QACjBtB,MAAM,kBAGV6B,OACE,gBACEV,IAAKW,EACLT,IAAI,qBACJhB,MAAO,CAAEiB,OAAQ,QACjBtB,MAAM,sBAGV+B,OACE,gBACEZ,IAAKa,EACLX,IAAI,qBACJhB,MAAO,CAAEiB,OAAQ,QACjBtB,MAAM,iCAQNiC,EAAsBvB,EAAezC,KAAKc,KAAI,SAACd,GAMnD,IALA,IAAMe,EAAa,CAAC,KAAM,WAAY,aAAc,cAChDI,EAAS,GAEPC,EADOqB,EAAeA,eACNnB,MAAM,KAAK,aAG/B,IAAIC,EAAOH,EAAOI,GAEH,OAAfxB,EAAKuB,KACFR,EAAWU,MAAK,SAACC,GAAE,OAAKH,EAAKI,SAASD,EAAG,KAC1CP,EAAOS,KACL5B,EAAK6B,GAAK,GACR,eACEX,UAAW,aAEXD,QAASjB,EAAKuB,GAAMD,MAAM,MAAM,GAChCQ,QAAS9B,EAAKuB,GAAMD,MAAM,MAAM,GAChCS,MAAO/B,EAAKuB,GAAMD,MAAM,OAAO,GAAG,SAExB,cAATC,GACC,SAAC,EAAAS,SAAQ,WACP,0BAAOhC,EAAKuB,GAAMD,MAAM,MAAM,QAGhC,UAAC,EAAAU,SAAQ,WACNhC,EAAKuB,GAAMD,MAAM,MAAM,IACxB,iBAAKJ,UAAU,cAAa,WAC1B,cAAGA,UAAU,KAAKa,MAAM,UAAS,SAAC,OAGlC,0BAAM,aACN,cAAGb,UAAU,UAAUa,MAAM,WAAU,SAAC,OAGxC,0BAAM,oBApBPR,GA0BP,GAGR,EAtCSC,EAAK,EAAGA,EAAKJ,EAAOe,OAAQX,IAAI,IAuCzC,OAAO,wBAAmBL,GAAVnB,EAAK6B,GACvB,IACMoC,EAA0BxB,EAAezC,KAAKc,KAAI,SAACd,GAQvD,IAPA,IAAMe,EAAa,CAAC,KAAM,WAAY,aAAc,cAEhDmD,EAAO,GAGL9C,EADOqB,EAAeA,eACNnB,MAAM,KAAK,aAG/B,IAAIC,EAAOH,EAAOI,GAEH,OAAfxB,EAAKuB,KACFR,EAAWU,MAAK,SAACC,GAAE,OAAKH,EAAKI,SAASD,EAAG,KAC1CwC,EAAKtC,KACH5B,EAAK6B,IAAM,GACT,gBACEX,UAAWK,EAAKD,MAAM,KAAK,GAAK,aAAeC,EAAKD,MAAM,KAAK,GAE/DL,QAASjB,EAAKuB,GAAMD,MAAM,MAAM,GAChCQ,QAAS9B,EAAKuB,GAAMD,MAAM,MAAM,GAChCS,MAAO/B,EAAKuB,GAAM,UAER,cAATA,GACC,SAAC,EAAAS,SAAQ,WACP,iBAAMD,MAAOE,SAASjC,EAAKuB,IAAOW,eAAe,SAAS,SACvDD,SAASjC,EAAKuB,IAAOW,eAAe,cAIzC,SAAC,EAAAF,SAAQ,UACK,WAAXU,GACC,iCACE,kBAAMxB,UAAU,gBAAe,UAC5B8B,EAAMhD,EAAiB,YAAG,IAAEA,EAAKuB,GAAMD,MAAM,MAAM,OAEtD,iBAAMJ,UAAU,cAAa,UAC3B,iBACEA,UAAU,UACViD,QAAS,WACPxB,EAAQ,YACRC,EAAY5C,EAAgB,WAC5B6C,EAAqB7C,EAAS,IAC9B+C,GAAgB,EAClB,EAAE,UAEF,cAAG7B,UAAU,KAAKa,MAAM,WAAU,SAAC,aAM5B,YAAXW,GACF,iCACE,kBAAMxB,UAAU,gBAAe,UAC5B8B,EAAMhD,EAAiB,YAAG,IAAEA,EAAKuB,GAAMD,MAAM,MAAM,OAEtD,iBAAMJ,UAAU,cAAa,UAC3B,iBACEA,UAAU,UACViD,QAAS,WACPxB,EAAQ,WACRC,EAAY5C,EAAgB,WAC5B6C,EAAqB7C,EAAS,IAC9B+C,GAAgB,EAClB,EAAE,UAEF,cAAG7B,UAAU,KAAKa,MAAM,UAAS,SAAC,cAOxC,iCACE,iBAAKb,UAAU,gBAAe,UAC3B8B,EAAMhD,EAAiB,aACxB,0BAAOA,EAAKuB,GAAMD,MAAM,MAAM,SAEhC,iBAAKJ,UAAU,cAAa,WAC1B,iBACEA,UAAU,UACViD,QAAS,WACPxB,EAAQ,WACRC,EAAY5C,EAAgB,WAE5B6C,EAAqB7C,EAAS,IAC9B+C,GAAgB,EAClB,EAAE,UAEF,cAAG7B,UAAU,KAAKa,MAAM,UAAS,SAAC,SAIpC,iBACEb,UAAU,UACViD,QAAS,WACPxB,EAAQ,YACRC,EAAY5C,EAAgB,WAC5B6C,EAAqB7C,EAAS,IAC9B+C,GAAgB,EAClB,EAAE,UAEF,cAAG7B,UAAU,KAAKa,MAAM,WAAU,SAAC,gBAS9CR,EAAKI,SAAS,4BACbJ,EAAKI,SAAS,6BACdJ,EAAKI,SAAS,uBACdJ,EAAKI,SAAS,sBACdJ,EAAKI,SAAS,sBACdJ,EAAKI,SAAS,uBACdJ,EAAKI,SAAS,uBACdJ,EAAKI,SAAS,sBACdJ,EAAKI,SAAS,uBACdJ,EAAKI,SAAS,sBACd,SAAC,EAAAK,SAAQ,WACP,0BAAM,SAGR,KA5GGT,GAgHP,GAGR,EA5HSC,EAAK,EAAGA,EAAKJ,EAAOe,OAAQX,IAAI,IA6HzC,OAAO,wBAAmB0C,GAAVlE,EAAK6B,GACvB,IA6DA,OACE,4BACE,gBAAKX,UAAU,mCAAkC,UAC/C,2BACE,SAAC,MAAgB,CACfkD,KAAK,QACLrC,MAAM,kBACNK,MAAO,CAAEC,MAAO,QAASgC,MAAO,SAChCC,OAAO,UACPH,QApEU,WAClB,IAAII,EAAqB,GACrBC,EAAO,GACXA,EAAO/B,EAAeA,eAAegC,WAAW,IAAK,IACrDF,EAAqBC,EAAKlD,MAAM,KAEhC,IAgBMoD,EAhBejC,EAAezC,KAAKc,KAAI,SAAC6D,GAC5C,IAAMC,EAAM,CAAC,EAYb,OAXAL,EAAmBM,SAAQ,SAACC,GAC1B,GAAY,eAARA,GAAgC,OAARA,GAAwB,QAARA,EAAe,CACzD,IAAMC,EAAQJ,EAAKG,GACnB,GAAqB,kBAAVC,EAAoB,CAC7B,MAA4BA,EAAMzD,MAAM,MAAjC0D,GAAsC,YAAxB,GACrBJ,EAAIE,GAAOE,CACb,MACEJ,EAAIE,GAAOC,CAEf,CACF,IACOH,CACT,IAE0B9D,KAAI,SAAC6D,GAC7B,IAAMM,EAAM,GAYZ,OAXAV,EAAmBM,SAAQ,SAACC,GAEhB,aAARA,GACQ,OAARA,GACQ,aAARA,GACQ,QAARA,GACQ,eAARA,GAEAG,EAAIrD,KAAK+C,EAAKG,GAElB,IACOG,CACT,IAGMC,EAAYC,SAASC,aAAa,oBAIxCV,EAAKG,SAAQ,SAACF,GACAO,EAAUG,OAAOC,OAAOC,OAAOZ,GAC7C,IAEgB,CAAC,GACTE,SAAQ,SAACW,GACHN,EAAUO,OAAOD,GACzBE,KAAO,CAAEC,MAAM,EACrB,IAGAR,SAASS,KAAKC,cAAc1F,MAAK,SAAC2F,GAChCC,OAAO,IAAIC,KAAK,CAACF,IAAU,uBAC7B,GACF,SAeI,iBAAK5E,UAAU,4CAA2C,WACxD,gBACEA,UAAU,sFACVkB,MAAO,CAAE6D,UAAW,QAAS,UAE7B,mBACE/E,UAAU,gDACVgF,YAAa,EACbC,YAAa,EAAE,WAEf,2BAAQnC,KACR,2BAAQC,SAIXnB,IACC,SAAClE,EAAsB,CACrBC,kBAAmBA,EACnBC,YAAa2D,EAAe3D,YAC5BC,SAAUA,EACVC,KAAMA,SAMlB,E,oNCxUe,SAASoH,EAAuB,GAI3C,IAHFC,EAAiB,EAAjBA,kBACAC,EAAY,EAAZA,aACAC,EAAU,EAAVA,WAKMtH,EAAUC,EAAAA,EAAAA,QACVsH,EACwC,OAA5CC,aAAaC,QAAQ,mBACjB,GACAC,KAAKC,MAAMH,aAAaC,QAAQ,oBACtC,GAAoCvH,EAAAA,EAAAA,UAAS,IAAG,eAAzC0H,EAAU,KAAEC,EAAa,KAC1BC,GAAWC,EAAAA,EAAAA,MAEXnF,EADe,IAAIoF,gBAAgBF,EAASG,QAC1BC,IAAI,MAG5B,GAAiChI,EAAAA,EAAAA,WAAS,GAAM,eAAzCiI,EAAO,KAAEC,EAAa,KAIvBC,EACiD,OAArDb,aAAaC,QAAQ,6BAEjBC,KAAKC,MAAMH,aAAaC,QAAQ,8BActChH,EAAAA,EAAAA,YAAU,WAZRG,IAAM,CACJC,OAAQ,MACRC,IACEd,EAAO,gEAEE,OAAP4C,EAAc,EAAIA,KAErB1B,MAAK,SAAUoH,GAChB,IAAMC,EAAUD,EAAIvH,KACpB8G,EAAcU,EAChB,GAIF,GAAG,IAEH,OAAkCrI,EAAAA,EAAAA,WAAS,GAAM,eAA1CsI,EAAS,KAAEC,EAAY,KAC9B/G,QAAQC,IAAI6G,GACZ,OAA4DtI,EAAAA,EAAAA,UAAS,IAAG,eAAjEwI,EAAsB,KAAEC,EAAyB,KACxD,GAAwCzI,EAAAA,EAAAA,WAAU,GAAE,eAA7C0I,EAAY,KAAEC,EAAe,KACpC,GAAoC3I,EAAAA,EAAAA,UAAS,gBAAe,eAArD4I,GAAU,KAAEC,GAAa,KAEhC,IAA0C7I,EAAAA,EAAAA,WAAU,GAAE,iBAA/C8I,GAAa,MAAEC,GAAgB,MAEtC,IAA8B/I,EAAAA,EAAAA,WAAS,GAAM,iBAAtCgJ,GAAO,MAAEC,GAAU,MAC1B,IAAwCjJ,EAAAA,EAAAA,UAASkJ,EAAAA,KAAkB,iBAA5DC,GAAY,MAAEC,GAAe,MACpC,IAAoCpJ,EAAAA,EAAAA,WAAS,GAAM,iBAA5CqJ,GAAU,MAAEC,GAAa,MAChC,IAAgCtJ,EAAAA,EAAAA,UAAS,IAAG,iBAArCuJ,GAAQ,MAAEC,GAAW,MAC5B,IAA8CxJ,EAAAA,EAAAA,UAAS,IAAG,iBAAnDyJ,GAAe,MAAEC,GAAkB,MAC1C,IAAkD1J,EAAAA,EAAAA,WAAS,GAAM,iBAA1D2J,GAAiB,MAAEC,GAAoB,MAExCC,IAAMvJ,EAAAA,EAAAA,QAAO,IACnB,IAAkCN,EAAAA,EAAAA,UAAS,IAAI8J,MAAO,iBAA/CC,GAAS,MAAEC,GAAY,MACxB3J,IAAkBC,EAAAA,EAAAA,QAAO,MACzB2J,GAAeC,IAAOH,IAAWI,QAAQC,IAAI,EAAG,QAAQC,SACxDC,GAAOJ,IAAOH,IAAWQ,OAAO,cAAcpI,MAAM,KAAK,GAEzDqI,GAAKN,IAAO,CAAEI,KAAAA,GAAMG,MAAOA,IAC9BC,QAAQ,SACRH,OAAO,cAEV,IAA4BvK,EAAAA,EAAAA,UAASwK,IAAG,iBAAjCG,GAAM,MAAEC,GAAS,MAExB,IAA0D5K,EAAAA,EAAAA,UAAS,CAUjE,GACA,iBAXK6K,GAAqB,MAAEC,GAAwB,OAYtDvK,EAAAA,EAAAA,YAAU,WACRuK,IAAyB,WACvB,OAAU,MAANpI,EACK,CACLqI,WAAsB,OAAVrD,QAAU,IAAVA,OAAU,EAAVA,EAAYqD,WACxBC,SAAoB,OAAVtD,QAAU,IAAVA,OAAU,EAAVA,EAAYsD,SACtBC,aAAwB,OAAVvD,QAAU,IAAVA,OAAU,EAAVA,EAAYuD,aAC1BC,KAAgB,OAAVxD,QAAU,IAAVA,OAAU,EAAVA,EAAYwD,KAClBC,SAAoB,OAAVzD,QAAU,IAAVA,OAAU,EAAVA,EAAYyD,SACtBC,OAAkB,OAAV1D,QAAU,IAAVA,OAAU,EAAVA,EAAY0D,OACpBC,UAAqB,OAAV3D,QAAU,IAAVA,OAAU,EAAVA,EAAY2D,UACvBC,UAAqB,OAAV5D,QAAU,IAAVA,OAAU,EAAVA,EAAY4D,UACvBC,YAAuB,OAAV7D,QAAU,IAAVA,OAAU,EAAVA,EAAY6D,YACzBC,UAAqB,OAAV9D,QAAU,IAAVA,OAAU,EAAVA,EAAY8D,WAGlB,CACLT,YAAa,EACbC,SAAU,OACVC,aAAc,QACdC,KAAMP,GACNQ,SAAU,IACVC,OAAQ,KACRC,UAAW,KACXC,UAAW,KACXC,YAAa,GACbC,UAAW,KAGjB,GACF,GAAG,CAAC9D,KAEJnH,EAAAA,EAAAA,YAAU,WACR,GAAU,MAANmC,EAAY,CAAC,IAAD,IACR+I,EAAkBlC,GAASmC,QAAO,SAACtF,GAAM,aACd,QADc,EAC7CyE,GAAsBW,iBAAS,aAA/B,EAAiChJ,SAASM,SAASsD,EAAOR,OAAO,IAE7D+F,EAAwBd,GAAsBW,UAE9CI,EAAoBD,EACtBA,EAAsBxJ,MAAM,KAAKR,IAAIkK,QACrC,GACEC,EAAsBL,EAAgBC,QAAO,SAACtF,GAAM,OACxDwF,EAAkBpJ,SAAS4D,EAAOR,MAAM,IAEpCmG,EAAiBrE,EAAW0D,OAElC,QAAyBY,KAAX,OAAVtE,QAAU,IAAVA,OAAU,EAAVA,EAAYwD,OAA0C,KAApBxD,EAAWwD,KAAa,CAC5D,IAAMe,EAAavE,EAAWwD,KAG9BlB,IAAakC,EAAAA,EAAAA,SAASD,GACxB,CACA,GAA8B,OAA1BvE,EAAWqD,WAAqB,CAElClC,GADqB,kBAEvB,MAAO,GAA8B,OAA1BnB,EAAWqD,WAAqB,CAEzClC,GADuB,oBAEzB,MAAO,GAA8B,MAA1BnB,EAAWqD,WAAoB,CAExClC,GADqB,kBAEvB,MAAO,GAA8B,OAA1BnB,EAAWqD,WAAqB,CAEzClC,GADkB,eAEpB,MAAO,IAAc,OAAVnB,QAAU,IAAVA,GAAsB,QAAZ,EAAVA,EAAYqD,kBAAU,WAAZ,EAAV,EAAwB/H,QAAS,EAAG,CAE7C6F,GADkB,kBAEpB,CACA,IAAMsD,EAAUtB,GAAsBE,YACb,QAArB,EAAArD,EAAWqD,kBAAU,aAArB,EAAuB/H,QAAS,EAClC+F,GAAiB,KAEjBA,GAAiBoD,GAEU,OAAf,OAAVzE,QAAU,IAAVA,OAAU,EAAVA,EAAY8D,WACd9B,GAAmBH,IAEnBG,GAAmBoC,GAErBnD,EAAgBoD,EAClB,CACF,GAAG,CAACrJ,EAAI6G,GAAUsB,GAAsBW,UAAqB,OAAV9D,QAAU,IAAVA,OAAU,EAAVA,EAAY8D,aAE/DjL,EAAAA,EAAAA,YAAU,WACE,MAANmC,GACF0J,YAAW,WACTC,IACF,GAAG,IAEP,GAAG,CAAC3J,EAAImI,MACRtK,EAAAA,EAAAA,YAAU,WACR+L,KAEAC,IACF,GAAG,KAEHhM,EAAAA,EAAAA,YAAU,WAuBR,GACC,CAACwJ,KAGJ,IAAMyC,GAAelF,aAAaC,QAAQ,SACpCkF,GAAOnF,aAAaC,QAAQ,QAClC/F,QAAQC,IAAIgL,IAEZ,QAA4BzM,EAAAA,EAAAA,UAAS,IAAG,iBAAjC0M,GAAM,MAAEC,GAAS,OAIxBpM,EAAAA,EAAAA,YAAU,WACRqM,IACF,GAAG,IAEH,IAAMA,GAAW,WAGflM,IAAM,CACJC,OAAQ,MACRC,IAAKd,EAAO,iDAA6C0M,MACxDxL,MAAK,SAACC,GACP,IAAIJ,EAAOI,EAAKJ,KAAKc,KAAI,SAACkL,GAYxB,OAXIA,EAAKC,WACPD,EAAKC,SAAWD,EAAKC,SAASpB,QAC5B,SAACqB,GAAO,MACmB,mCAAzBA,EAAQC,cACiB,oBAAzBD,EAAQC,cACiB,eAAzBD,EAAQC,cACiB,WAAzBD,EAAQC,cACiB,gCAAzBD,EAAQC,YAA8C,KAIrDH,CACT,IAEAhM,EAAK6E,SAAQ,SAACF,GA7BA,UA8BRA,EAAKwH,cACPL,GAAU,CAACnH,GAEf,IACA,IAAMyH,EAA6BpM,EAChCqM,MAAK,SAAC1H,GAAI,MAA2B,UAAtBA,EAAKwH,YAAwB,IAC5CF,SAASI,MACR,SAACH,GAAO,MAA8B,+BAAzBA,EAAQC,YAA6C,IAEtEG,GAAcF,EAA2BG,aAC3C,GACF,EAgCMC,GAAiB,SAAH,GAAuB,IAAjB3K,EAAE,EAAFA,GAAIkD,EAAK,EAALA,MACjB,eAAPlD,GAAiC,MAAVkD,GACzBqD,IAAW,GAEb6B,IAAyB,SAACwC,GACxB,OAAO,kBAAKA,GAAS,cAAG5K,EAAKkD,GAC/B,GACF,EAUA,IAAgC5F,EAAAA,EAAAA,UAAS,IAAG,iBAA3BuN,IAAF,MAAa,OAC5B,IAAoCvN,EAAAA,EAAAA,UAAS,IAAG,iBAAzCwN,GAAU,MAAEL,GAAa,OAmBhC5M,EAAAA,EAAAA,YAAU,WAhBRG,IAAAA,IAGIZ,EAAO,6DACiD0M,KAGzDxL,MAAK,SAACC,GACL,IAAMJ,EAAOI,EAAKJ,KAClB0M,GAAY1M,EACd,IAECS,OAAM,SAACC,GACNC,QAAQC,IAAIF,EACd,GAIJ,GAAG,IACH,IAkCM+K,GAA4B,WAChC5L,IAAAA,IACOZ,EAAU,gDACdkB,MAAK,SAACC,GACL,IACMwM,EADOxM,EAAKJ,KAEf6K,QAAO,SAAClG,GAAI,OAAuB,IAAlBA,EAAKwF,QAAc,IACpCrJ,KAAI,SAAC6D,GACJ,OACE,mBAAsBI,MAAOJ,EAAKkI,IAAI,SACnClI,EAAKmI,UADKnI,EAAK9C,GAItB,IACF+F,EAA0BgF,EAC5B,IACCnM,OAAM,SAACC,GACNC,QAAQC,IAAIF,EACd,GACJ,EACMgL,GAAmB,WACvB7L,IAAAA,IACOZ,EAAO,wCACXkB,MAAK,SAAC4M,GACL,IAAItC,EAAY,GACZzK,EAAO+M,EAAS/M,KAEpBA,EAAKmC,OAAS,GACZnC,EAAK6E,SAAQ,SAACmI,GACZ,IAAIC,EAAa,CACfC,MAAOF,EAAEG,eACTpI,MAAOiI,EAAEnL,IAEX4I,EAAU7I,KAAKqL,EACjB,IACFtE,GAAY8B,GACZ5B,GAAmB4B,EACrB,IACChK,OAAM,SAAC2M,GAAK,OAAKzM,QAAQC,IAAIwM,EAAM,GACxC,EACMC,IAAeC,EAAAA,EAAAA,KACnB,SAACC,GAAK,OAAKA,EAAMC,gBAAgBC,gBAAgB,IAEnD9M,QAAQC,IAAIyM,IACZ,IAAMK,GAAoB,WACxB,IAAIC,GAAQC,EAAAA,EAAAA,GAAiB5E,IAEvB6E,EAAatC,YAAW,WAC5B7D,GAAa,EACf,GAAG,KAEHlI,GAAgBG,QAAU,IAAIC,gBAE9B0G,GAAa,GACb0D,GAAsBE,WACiB,MAAhB,OAArBF,SAAqB,IAArBA,QAAqB,EAArBA,GAAuBE,YACnBmD,GACqB,OAArBrD,SAAqB,IAArBA,QAAqB,EAArBA,GAAuBE,WAC7BrK,IAAM,CACJC,OAAQ,OACRC,IAAKd,EAAO,wCACZe,KAAMgK,GACN9J,OAAQV,GAAgBG,QAAQO,SAE/BC,MAAK,SAACC,GACL,IAAMJ,EAAOI,EAAKJ,KAClB0H,GAAa,GACboG,aAAaD,GACbxH,EAAkBrG,GAEdA,EAAKA,KAAKmC,OAAS,IACrBmE,GAAa,GACboB,GAAa,KAEdiG,GAASlF,IAAeD,IAErBD,GADJC,GACoBH,EAAAA,IACA0F,EAAAA,KACpBxH,EAAWsB,GACXkB,IAAqB,GACrBrB,GAAa,EACf,IACCjH,OAAM,SAACC,GACNC,QAAQC,IAAIF,EACd,GAEJ,EAEM8K,GAA+B,WACnC,IAAImC,GAAQC,EAAAA,EAAAA,GAAiB5E,IAC7BtB,GAAa,GACblI,GAAgBG,QAAU,IAAIC,gBAE9B0G,GAAa,GACb0D,GAAsBE,WACiB,MAAhB,OAArBF,SAAqB,IAArBA,QAAqB,EAArBA,GAAuBE,YACnBmD,GACqB,OAArBrD,SAAqB,IAArBA,QAAqB,EAArBA,GAAuBE,WAC7BrK,IAAM,CACJC,OAAQ,OACRC,IAAKd,EAAO,wCACZe,KAAMgK,GACN9J,OAAQV,GAAgBG,QAAQO,SAE/BC,MAAK,SAACC,GACL,IAAMJ,EAAOI,EAAKJ,KAClB0H,GAAa,GAEbrB,EAAkBrG,GAEdA,EAAKA,KAAKmC,OAAS,IACrBmE,GAAa,GACboB,GAAa,KAEdiG,GAASlF,IAAeD,IAErBD,GADJC,GACoBH,EAAAA,IACA0F,EAAAA,KACpBxH,EAAWsB,GACXkB,IAAqB,EACvB,IACCtI,OAAM,SAACC,GACNC,QAAQC,IAAIF,EACd,GAEJ,EAkBA,OACE,4BACE,yBACGoI,IACC,iBAAK5H,UAAU,kBAAiB,UAC7B,KACD,SAAC,MAAa,IAAG,yDACV,OAGT,MAGJ,iBAAKA,UAAU,YAAW,WACxB,gBAAKA,UAAU,cACf,gBAAKA,UAAU,WAAU,UACvB,wBAAI,kCAEN,gBAAKA,UAAU,mBAEjB,SAAC8M,EAAA,EAAiB,CAChBnC,OAAQA,GACRoC,kBAvTkB,CAAC,gCA0TpB7G,GACC,gBAAKlG,UAAU,oBAAmB,UAChC,kBAAMA,UAAU,SAAQ,WACtB,SAAC,MAAO,CAACkD,KAAK,UAAU,0CAI5B,IAGF,iBAAKlD,UAAU,yBAAwB,WACrC,iBAAKA,UAAU,4BAA2B,WACxC,wBAAI,oBACJ,gBAAKA,UAAU,UAAS,UACtB,SAACgN,EAAA,EAAU,CAACC,QAxhBF,iCAwhBwBnN,KAvhBzB,uCA0hBX,gBAAKE,UAAU,UAAUkB,MAAO,CAAEgM,YAAa,OAAQ,UACrD,SAACC,EAAA,EAAiB,CAChBnN,UAAU,0BACVmG,cAAeA,EACfiH,QAnhBI,iDAohBJC,UAnhBM,QAohBNC,QAASxE,QAGb,gBACE7F,QAAS,WACPsE,IAAeD,IAEXD,GADJC,GACoBH,EAAAA,IACA0F,EAAAA,IACtB,EAAE,UAEF,0BAAOzF,WAGX,SAAC,KAAS,CAACH,SAAUK,GAAW,UAC9B,iBAAKtH,UAAU,oBAAmB,WAChC,gBAAKA,UAAU,aAAaW,GAAG,aAAY,UACzC,iBAAKX,UAAU,iBAAgB,WAC7B,mBAAOA,UAAU,QAAO,UAAC,oBACP,iBAAMA,UAAU,aAAY,SAAC,cAE/C,iBAAMA,UAAU,YAAW,SAAC,OAC5B,iBAAMA,UAAU,kBAAiB,SAChB,KAAdyL,IAAoC,KAAdA,IACrB,oBACE9K,GAAG,aACHX,UAAU,OACV6D,MAAOkD,GACPwG,SAAU,SAACzB,GACTR,GAAeQ,EAAE0B,QAEjBxG,GAAiB8E,EAAE0B,OAAO3J,OAC1BiD,GACEgF,EAAE0B,OAAOC,QAAQ3B,EAAE0B,OAAOE,eAAeC,MAE3C5E,IAAyB,SAAC6E,GAAO,yBAC5BA,GAAO,cACT,aAAe9B,EAAE0B,OAAO3J,OAAK,GAElC,EACAiE,IAAK,SAAC+F,GACJ/F,GAAIrJ,QAAQ,GAAKoP,CACnB,EAAE,WAEF,mBAAQhK,MAAO,GAAG,SAAE,wBACnB4C,MAGH,oBACE9F,GAAG,aACHX,UAAU,OACV6D,MAAOkD,GACPwG,SAAU,SAACzB,GACTR,GAAeQ,EAAE0B,QACjBxG,GAAiB8E,EAAE0B,OAAO3J,OAC1BiD,GACEgF,EAAE0B,OAAOC,QAAQ3B,EAAE0B,OAAOE,eAAeC,KAE7C,EACA7F,IAAK,SAAC+F,GACJ/F,GAAIrJ,QAAQ,GAAKoP,CACnB,EAAE,WAEF,mBAAQhK,MAAO,GAAG,SAAE,yBACpB,mBAAQA,MAAM,IAAG,SAAC,yBAO5B,gBAAK7D,UAAU,aAAY,UACzB,iBAAKA,UAAU,iBAAiBW,GAAG,sBAAqB,WACtD,mBAAOX,UAAU,QAAO,UAAC,kBACT,iBAAMA,UAAU,aAAY,SAAC,cAE7C,iBAAMA,UAAU,YAAW,SAAC,OAC5B,gBAAKA,UAAU,8BAA6B,UAC1C,gBACEA,UAAU,mCACV8H,IAAK,SAAC+F,GACJ/F,GAAIrJ,QAAQ,GAAKoP,CACnB,EAAE,UAEF,SAAC,IAAU,CACTlN,GAAG,YACHmN,SAAU5F,GACVqF,SAAU,SAACzB,GACT7D,GAAa6D,GApXhB,SAAH,GAAuB,IAAjBnL,EAAE,EAAFA,GAAIkD,EAAK,EAALA,MAClB0E,EAAOJ,IAAOtE,GAAO2E,OAAO,cAAcpI,MAAM,KAAK,GAOrDqI,EAAKN,IAAO,CAAEI,KAAAA,EAAMG,MAAOA,IAC9BC,QAAQ,SACRH,OAAO,cACVK,GAAUJ,GACVM,IAAyB,SAACwC,GACxB,OAAO,kBAAKA,GAAS,cAAG5K,EAAKwH,IAAOM,GAAID,OAAO,eACjD,IACW,eAAP7H,GAAiC,MAAVkD,GACzBqD,IAAW,EAEf,CAmWsB6G,CAAW,CACTpN,GAAI,OACJkD,MAAOiI,EAAEkC,mBAAmB,UAEhC,EACAC,WAAY,YACZC,gBAAc,cAOxB,gBAAKlO,UAAU,aAAY,UACzB,iBAAKA,UAAU,iBAAgB,WAC7B,mBAAOA,UAAU,QAAO,UAAC,YACf,iBAAMA,UAAU,aAAY,SAAC,cAEvC,iBAAMA,UAAU,YAAW,SAAC,OAC5B,gBAAKA,UAAU,SAASkB,MAAO,CAAEiB,OAAQ,QAAS,UAChD,oBACExB,GAAG,WACHb,KAAK,WAELgO,SAAS,IACTP,SAAU,SAACzB,GACTR,GAAeQ,EAAE0B,OACnB,EACA1F,IAAK,SAAC+F,GACJ/F,GAAIrJ,QAAQ,GAAKoP,CACnB,EACAhK,MAA4B,OAArBiF,SAAqB,IAArBA,QAAqB,EAArBA,GAAuBM,SAAS,WAEvC,mBAAQvF,MAAM,IAAG,SAAC,OAClB,mBAAQA,MAAM,IAAG,SAAC,OAClB,mBAAQA,MAAM,IAAG,SAAC,OAClB,mBAAQA,MAAM,IAAIiK,UAAQ,WAAC,iBAQnC,gBAAK9N,UAAU,aAAY,UACzB,iBAAKA,UAAU,iBAAgB,WAC7B,mBAAOA,UAAU,QAAO,UAAC,cACX,KACZ,SAAC,MAAY,CACXA,UAAU,WACVa,MAAM,+BAGV,iBAAMb,UAAU,YAAW,SAAC,OAC5B,iBAAMA,UAAU,SAAQ,UACtB,oBACEW,GAAG,SACHb,KAAK,WAELyN,SAAU,SAACzB,GACTlF,EAAgBkF,EAAE0B,OAAO3J,OACH,WAAlBiI,EAAE0B,OAAO3J,MACXkF,IAAyB,SAACwC,GACxB,OAAO,kBAAKA,GAAS,cAAG,YAAc,KACxC,IAEAxC,IAAyB,SAACwC,GACxB,OAAO,kBAAKA,GAAS,cAAG,YAAc,MACxC,IAEoB,YAAlBO,EAAE0B,OAAO3J,MACXkF,IAAyB,SAACwC,GACxB,OAAO,kBAAKA,GAAS,cAAG,YAAc,KACxC,IAEAxC,IAAyB,SAACwC,GACxB,OAAO,kBAAKA,GAAS,cAAG,YAAc,MACxC,IAGFD,GAAeQ,EAAE0B,OACnB,EACA1F,IAAK,SAAC+F,GACJ/F,GAAIrJ,QAAQ,GAAKoP,CACnB,EACAhK,MAA4B,OAArBiF,SAAqB,IAArBA,QAAqB,EAArBA,GAAuBO,OAAO,WAErC,mBAAQ1I,GAAI,EAAGkD,MAAO,UAAU,SAC7B,aAEH,mBAAQlD,IAAK,EAAGkD,MAAO,KAAK,SACzB,kBAEH,mBAAQlD,GAAI,EAAGkD,MAAO,WAAW,SAC9B,wBAMX,gBAAK7D,UAAU,aAAY,UACzB,iBAAKA,UAAU,iBAAgB,WAC7B,mBAAOA,UAAU,QAAO,UAAC,kBACT,iBAAMA,UAAU,aAAY,SAAC,cAE7C,iBAAMA,UAAU,YAAW,SAAC,OAC5B,iBACEA,UAAU,oBACV8H,IAAK,SAAC+F,GACJ/F,GAAIrJ,QAAQ,GAAKoP,CACnB,EAAE,UAEF,SAAC,KAAW,CACVM,cAhfI,SAAH,GAAc,EAARC,SAAQ,OAC/B,+BAEI,SAAC,MAAW,CAACpO,UAAU,iBAIxB,EA0eaW,GAAG,YACH8M,QAASjG,GACT6G,cAAc,EACdxK,MAAO6D,GACP4G,UAAU,EACVC,gBAAiB,CACfC,kBAAmB,aACnBC,gBAAiB,YAEnBlB,SAAU,SAACzB,GACTnE,GAAmBmE,GACnB,IAAI4C,EAAkB,GACtB5C,EAAEnI,SAAQ,SAACgL,GACTD,EAAgBhO,KAAKiO,EAAE9K,MACzB,IACAkF,IAAyB,SAAC6E,GAAO,yBAC5BA,GAAO,cACT,YAAcc,EAAgBE,YAAU,GAE7C,EACAC,cA1RY,SAACC,EAAiBC,GAC9C,IAAMC,EAAiBF,EAAgBlP,KAAI,SAACqP,GAAM,OAAKA,EAAOpL,KAAK,IAE7DqL,EAAYH,EAAWnP,KAAI,SAAC6D,GAAI,OAAKA,EAAKI,KAAK,IAErD,OAAImL,EAAe/N,SAAWiO,EAAUjO,OAC/B,YAEA6N,EAAgBlP,KAAI,SAACqP,GAAM,OAAKA,EAAOjD,KAAK,IAAEmD,KAAK,KAE9D,WAqR4B,aAAjBxI,IACC,gBAAK3G,UAAU,aAAY,UACzB,iBAAKA,UAAU,iBAAgB,WAC7B,kBAAOA,UAAU,QAAO,SAAC,cACzB,iBAAMA,UAAU,YAAW,SAAC,OAC5B,gBAAKA,UAAU,QAAO,UACpB,oBACEW,GAAG,YACHb,KAAK,YAELyN,SAAU,SAACzB,GACTrM,QAAQC,IAAIoM,EAAE0B,QACd,MAAsB1B,EAAE0B,OAAhB3J,EAAK,EAALA,MAAOlD,EAAE,EAAFA,GACfoI,IAAyB,SAACwC,GACxB,OAAO,kBAAKA,GAAS,cAAG5K,EAAKkD,GAC/B,GACF,EACAA,MAA4B,OAArBiF,SAAqB,IAArBA,QAAqB,EAArBA,GAAuBQ,UAAU,WAExC,mBAAQzF,MAAO,EAAGlD,GAAI,EAAE,SACrB,UAEH,mBAAQkD,MAAO,EAAGlD,GAAI,EAAE,SACrB,UAEH,mBAAQkD,MAAO,EAAGlD,GAAI,EAAE,SACrB,WAEH,mBAAQkD,MAAO,EAAGlD,GAAI,EAAE,SACrB,wBAEH,mBAAQkD,MAAO,IAAKlD,GAAI,IAAI,SACzB,qBAQK,YAAjBgG,IACC,gBAAK3G,UAAU,aAAY,UACzB,iBAAKA,UAAU,iBAAgB,WAC7B,kBAAOA,UAAU,QAAO,SAAC,aACzB,iBAAMA,UAAU,YAAW,SAAC,OAC5B,gBAAKA,UAAU,QAAO,UACpB,oBACEW,GAAG,YACHb,KAAK,YAELyN,SAAU,SAACzB,GACT,MAAsBA,EAAE0B,OAAhB3J,EAAK,EAALA,MAAOlD,EAAE,EAAFA,GACfoI,IAAyB,SAACwC,GACxB,OAAO,kBAAKA,GAAS,cAAG5K,EAAKkD,GAC/B,GACF,EACAA,MAA4B,OAArBiF,SAAqB,IAArBA,QAAqB,EAArBA,GAAuBS,UAAU,WAExC,mBAAQ1F,MAAM,IAAG,SAAC,YAClB,mBAAQA,MAAM,IAAG,SAAC,aAClB,mBAAQA,MAAM,IAAG,SAAC,WAClB,mBAAQA,MAAM,IAAG,SAAC,YAClB,mBAAQA,MAAM,IAAG,SAAC,YAClB,mBAAQA,MAAM,IAAG,SAAC,SAClB,mBAAQA,MAAM,IAAG,SAAC,QAClB,mBAAQA,MAAM,IAAG,SAAC,kBAO5B,gBAAK7D,UAAU,UAAS,UACtB,gBAAKA,UAAU,WAAU,UACvB,kBAAMA,UAAU,aAAY,WAC1B,uBAAG,oBACH,iBAAMA,UAAU,UAAS,SACP,oBAAf6G,GACGvB,EAAQ1F,KAAI,SAAC6D,EAAMa,GAAK,OACtB,4BACG8B,EACG3C,EAAK2L,gBACH3L,EAAK2L,gBACL3L,EAAKkK,KACPlK,EAAK2L,gBACL3L,EAAK2L,gBACL3L,EAAKkK,KAAI,UACZrJ,IAAUgB,EAAQrE,OAAS,EAAI,GAAK,OAR5BwC,EAAK9C,GAST,IAETkG,aAMZ,gBAAK7G,UAAU,kCAEf,gBAAKA,UAAU,iEAAgE,UAC7E,oBACElC,KAAK,SACLkC,UAAU,kBACViD,QA3iBoB,WAChCuD,GAAa,GACb,IAAIiG,GAAQC,EAAAA,EAAAA,GAAiB5E,IAO7B,GACuC,KAArCgB,GAAsBE,YACc,KAApCF,GAAsBW,WACgB,MAArCX,GAAsBE,aACwB,OAA5CzD,aAAaC,QAAQ,yBACwByE,IAA5C1E,aAAaC,QAAQ,oBACuB,OAA5CD,aAAaC,QAAQ,oBACzB,CAGA,GAAIiH,EAIF,YAFE5E,IAAqB,GAIvBA,IAAqB,EAEzB,MACE2E,IAEJ,EA6gBiD,WAEnC,SAAC,MAAQ,IAAG,UAAQ,cAK3BjG,GAAY,SAACnF,EAAA,EAAM,CAACC,YAlZP,WAClB/C,GAAgBG,SAAWH,GAAgBG,QAAQ6C,QACnDkF,GAAa,EACf,IA+Y0D,OAGtD,SAAC6I,EAAA,QAAiB,CAChBpI,QAASA,GACTC,WAAYA,GACZuE,WAAYA,OAIpB,CCt5Be,SAAS6D,IACtB,OAAkCrR,EAAAA,EAAAA,YAAU,eAArCsR,EAAS,KAAEnK,EAAY,KAC9B,GAA4CnH,EAAAA,EAAAA,YAAU,eAA/CsD,EAAc,KAAE4D,EAAiB,KACxC,GAA8BlH,EAAAA,EAAAA,UAAS,IAAG,eAAnCuD,EAAO,KAAE6D,EAAU,KACVrH,EAAAA,EAAAA,QACKuH,aAAaC,QAAQ,SAG1C,OACE,gBAAKxF,UAAU,mCAAkC,UAC/C,iBAAKA,UAAU,2CAA0C,WACvD,SAACkF,EAAsB,CACrBC,kBAAmBA,EACnBC,aAAcA,EACdC,WAAYA,IAEbkK,IACC,SAAC,EAAe,CAAChO,eAAgBA,EAAgBC,QAASA,QAMpE,C","sources":["views/AttainmentComponent/AttainmentDetailsTable.js","views/AttainmentComponent/AttainmentTable.js","views/AttainmentComponent/AttainmentSearchFilter.js","views/AttainmentComponent/Attainment.js"],"sourcesContent":["import AttainmentDetails from \"./AttainmentDetails.json\";\nimport axios from \"axios\";\nimport { useEffect, useState, Fragment, useRef } from \"react\";\nimport { environment } from \"../../environments/environment\";\nimport Loader from \"../Loader/Loader\";\n\nexport default function AttainmentDetailsTable({\n  attinmentDtlsData,\n  reportRunId,\n  execName,\n  type,\n}) {\n  const baseUrl = environment.baseUrl;\n  const [attainmentDetailsData, setAttainmentDetailsData] = useState({});\n\n  const attainDetailsDataPayload = {\n    executiveId: attinmentDtlsData,\n    type: type,\n    reportRunId: \"\" + reportRunId,\n  };\n  const [open, setOpen] = useState(false);\n  const abortController = useRef(null);\n  //----------------------call-----------------------------------\n\n  const getAttainmentDetailsData = () => {\n    setOpen(false);\n    abortController.current = new AbortController();\n\n    axios({\n      method: \"post\",\n      url: baseUrl + `/SalesMS/attainment/getAttainmentDetails`,\n      data: {\n        executiveId: attinmentDtlsData,\n        type: type,\n        reportRunId: \"\" + reportRunId,\n      },\n      signal: abortController.current.signal,\n    })\n      .then((resp) => {\n        const data = resp.data;\n        setAttainmentDetailsData(data);\n        setOpen(false);\n        window.scrollTo({ top: 1500, behavior: \"smooth\" }); // Scroll to the bottom of the page\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  //----------------------useEffect----------------------\n\n  useEffect(() => {\n    getAttainmentDetailsData();\n  }, [type, attinmentDtlsData, reportRunId]);\n\n  const handleAbort = () => {\n    abortController.current && abortController.current.abort();\n    setOpen(false);\n  };\n  //---------------------------logic-----------------------------\n\n  const attainmentDtlsTableData = attainmentDetailsData.data?.map((data) => {\n    const conditions = [\"id\"];\n\n    if (data.name === \"No Data Found^&1^&16\") {\n      return (\n        <tr>\n          <td colSpan={20} className=\"noTableData\">\n            No Data Found\n          </td>\n        </tr>\n      );\n    }\n    let header = [];\n    let checks = attainmentDetailsData.attainmentDtlsData;\n    const keyArr = checks.split(\",\");\n\n    for (let ia = 0; ia < keyArr.length; ia++) {\n      let keys = keyArr[ia];\n\n      data[keys] !== null &&\n        !conditions.some((el) => keys.includes(el)) &&\n        header.push(\n          data.id < 0 ? (\n            <th\n              className={keys.split(\"_\")[0] + \" attainth\"}\n              key={keys}\n              colSpan={data[keys].split(\"^&\")[2]}\n              rowSpan={data[keys].split(\"^&\")[1]}\n              title={data[keys].split(\"^&\")[0]}\n            >\n              {data[keys].split(\"^&\")[0]}\n            </th>\n          ) : (\n            <td\n              className={keys.split(\"_\")[0] + \" attaintd \" + keys.split(\"_\")[1]}\n              key={keys}\n              colSpan={data[keys].split(\"^&\")[2]}\n              rowSpan={data[keys].split(\"^&\")[1]}\n              title={data[keys]}\n            >\n              {keys !== \"name\" ? (\n                <Fragment>\n                  <span title={parseInt(data[keys]).toLocaleString(\"en-US\")}>\n                    {parseInt(data[keys]).toLocaleString(\"en-US\")}\n                  </span>\n                </Fragment>\n              ) : (\n                <Fragment>\n                  <span></span>\n                  <span className=\"\" title={data[keys].split(\"^&\")[0]}>\n                    {data[keys].split(\"^&\")[0]}\n                  </span>\n                </Fragment>\n              )}\n              {keys.includes(\"total_service_attainPer\") ||\n              keys.includes(\"2024_Q4_service_attainPer\") ||\n              keys.includes(\"2024_Q3_service_attainPer\") ||\n              keys.includes(\"2024_Q2_service_attainPer\") ||\n              keys.includes(\"2024_Q1_service_attainPer\") ? (\n                <Fragment>\n                  <span> %</span>\n                </Fragment>\n              ) : (\n                \"\"\n              )}\n            </td>\n          )\n        );\n    }\n    return <tr key={data.id}>{header}</tr>;\n  });\n\n  return (\n    <div className=\"col-lg-12 col-md-12 col-sm-12 mt10 no-padding\">\n      <div className=\"col-lg-12 col-md-12 col-sm-12 no-padding \">\n        <b>\n          {type == \"country\" ? \"Country\" : \"Practice\"} wise Attainments of{\" \"}\n          <span style={{ color: \"#297ab0\" }}>{execName}</span> for Services\n        </b>\n      </div>\n      {open ? <Loader handleAbort={handleAbort} /> : \"\"}\n      <div className=\"darkHeader\">\n        <table className=\"table table-bordered table-striped attainprogresstable \">\n          <thead>{attainmentDtlsTableData}</thead>\n        </table>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport Attainment from \"./Attainment.json\";\nimport { Fragment, useState } from \"react\";\nimport { FiChevronRight } from \"react-icons/fi\";\nimport AttainmentDetailsTable from \"./AttainmentDetailsTable\";\nimport fte_active from \"../../assets/images/empstatusIcon/fte_active.png\";\nimport fte_inactive from \"../../assets/images/empstatusIcon/fte_inactive.png\";\nimport fte_notice from \"../../assets/images/empstatusIcon/fte_notice.png\";\nimport subk_active from \"../../assets/images/empstatusIcon/subk_active.png\";\nimport subk_inactive from \"../../assets/images/empstatusIcon/subk_inactive.png\";\nimport subk_notice from \"../../assets/images/empstatusIcon/subk_notice.png\";\nimport { RiFileExcel2Line } from \"react-icons/ri\";\nimport * as XLSX from \"xlsx\";\nimport \"./AttainmentTable.scss\";\n// import ExcelJS from \"exceljs\";\nconst AttainmentTable = ({ attainmentData, display }) => {\n  const [type, setType] = useState(\"\");\n  const [execName, setexecName] = useState(\"\");\n  const [attinmentDtlsData, setAttinmentDtlsData] = useState(\"\");\n  const [displayTable, setDisplayTable] = useState(false);\n\n  const icons = {\n    fte0: (\n      <img\n        src={fte_inactive}\n        alt=\"(fte_inactive_icon)\"\n        style={{ height: \"12px\" }}\n        title=\"Ex-Employee\"\n      />\n    ),\n    fte1: (\n      <img\n        src={fte_active}\n        alt=\"(fte_active_icon)\"\n        style={{ height: \"12px\" }}\n        title=\"Active Employee\"\n      />\n    ),\n    fte2: (\n      <img\n        src={fte_notice}\n        alt=\"(fte_notice_icon)\"\n        style={{ height: \"12px\" }}\n        title=\"Employee in notice period\"\n      />\n    ),\n    subk0: (\n      <img\n        src={subk_inactive}\n        alt=\"(subk_inactive_icon)\"\n        style={{ height: \"12px\" }}\n        title=\"Ex-Contractor\"\n      />\n    ),\n    subk1: (\n      <img\n        src={subk_active}\n        alt=\"(subk_active_icon)\"\n        style={{ height: \"12px\" }}\n        title=\"Active Contractor\"\n      />\n    ),\n    subk2: (\n      <img\n        src={subk_notice}\n        alt=\"(subk_notice_icon)\"\n        style={{ height: \"12px\" }}\n        title=\"Contractor in notice period\"\n      />\n    ),\n  };\n  // ----------------Method start-------------------------\n\n  // ----------------table renderer-------------------------\n\n  const attainmentTableData = attainmentData.data.map((data) => {\n    const conditions = [\"id\", \"isActive\", \"execStatus\", \"supervisor\"];\n    let header = [];\n    let checks = attainmentData.attainmentData;\n    const keyArr = checks.split(\",\");\n\n    for (let ia = 0; ia < keyArr.length; ia++) {\n      let keys = keyArr[ia];\n\n      data[keys] !== null &&\n        !conditions.some((el) => keys.includes(el)) &&\n        header.push(\n          data.id < 0 ? (\n            <th\n              className={\" attainth \"}\n              key={keys}\n              colSpan={data[keys].split(\"^&\")[2]}\n              rowSpan={data[keys].split(\"^&\")[1]}\n              title={data[keys].split(\"^&1\")[0]}\n            >\n              {keys !== \"executive\" ? (\n                <Fragment>\n                  <span>{data[keys].split(\"^&\")[0]}</span>\n                </Fragment>\n              ) : (\n                <Fragment>\n                  {data[keys].split(\"^&\")[0]}\n                  <div className=\"cpContainer\">\n                    <i className=\"cp\" title=\"Country\">\n                      C\n                    </i>\n                    <span>Country</span>\n                    <i className=\"cp ml-2\" title=\"Practice\">\n                      P\n                    </i>\n                    <span>Practice</span>\n                  </div>\n                </Fragment>\n              )}\n            </th>\n          ) : (\n            \"\"\n          )\n        );\n    }\n    return <tr key={data.id}>{header}</tr>;\n  });\n  const attainmentTableDataBody = attainmentData.data.map((data) => {\n    const conditions = [\"id\", \"isActive\", \"execStatus\", \"supervisor\"];\n\n    let body = [];\n\n    let checks = attainmentData.attainmentData;\n    const keyArr = checks.split(\",\");\n\n    for (let ia = 0; ia < keyArr.length; ia++) {\n      let keys = keyArr[ia];\n\n      data[keys] !== null &&\n        !conditions.some((el) => keys.includes(el)) &&\n        body.push(\n          data.id >= 0 ? (\n            <td\n              className={keys.split(\"_\")[0] + \" attaintd \" + keys.split(\"_\")[1]}\n              key={keys}\n              colSpan={data[keys].split(\"^&\")[2]}\n              rowSpan={data[keys].split(\"^&\")[1]}\n              title={data[keys]}\n            >\n              {keys !== \"executive\" ? (\n                <Fragment>\n                  <span title={parseInt(data[keys]).toLocaleString(\"en-US\")}>\n                    {parseInt(data[keys]).toLocaleString(\"en-US\")}\n                  </span>\n                </Fragment>\n              ) : (\n                <Fragment>\n                  {display == \"country\" ? (\n                    <>\n                      <span className=\"executiveName\">\n                        {icons[data[\"execStatus\"]]} {data[keys].split(\"^&\")[0]}\n                      </span>\n                      <span className=\"cpContainer\">\n                        <span\n                          className=\"iconsty\"\n                          onClick={() => {\n                            setType(\"practice\");\n                            setexecName(data[\"executive\"]);\n                            setAttinmentDtlsData(data[\"id\"]);\n                            setDisplayTable(true);\n                          }}\n                        >\n                          <i className=\"cp\" title=\"practice\">\n                            P\n                          </i>\n                        </span>\n                      </span>\n                    </>\n                  ) : display == \"practice\" ? (\n                    <>\n                      <span className=\"executiveName\">\n                        {icons[data[\"execStatus\"]]} {data[keys].split(\"^&\")[0]}\n                      </span>\n                      <span className=\"cpContainer\">\n                        <span\n                          className=\"iconsty\"\n                          onClick={() => {\n                            setType(\"country\");\n                            setexecName(data[\"executive\"]);\n                            setAttinmentDtlsData(data[\"id\"]);\n                            setDisplayTable(true);\n                          }}\n                        >\n                          <i className=\"cp\" title=\"country\">\n                            C\n                          </i>\n                        </span>\n                      </span>\n                    </>\n                  ) : (\n                    <>\n                      <div className=\"executiveName\">\n                        {icons[data[\"execStatus\"]]}\n                        <span>{data[keys].split(\"^&\")[0]}</span>\n                      </div>\n                      <div className=\"cpContainer\">\n                        <span\n                          className=\"iconsty\"\n                          onClick={() => {\n                            setType(\"country\");\n                            setexecName(data[\"executive\"]);\n\n                            setAttinmentDtlsData(data[\"id\"]);\n                            setDisplayTable(true);\n                          }}\n                        >\n                          <i className=\"cp\" title=\"Country\">\n                            C\n                          </i>\n                        </span>\n                        <span\n                          className=\"iconsty\"\n                          onClick={() => {\n                            setType(\"practice\");\n                            setexecName(data[\"executive\"]);\n                            setAttinmentDtlsData(data[\"id\"]);\n                            setDisplayTable(true);\n                          }}\n                        >\n                          <i className=\"cp\" title=\"Practice\">\n                            P\n                          </i>\n                        </span>\n                      </div>\n                    </>\n                  )}\n                </Fragment>\n              )}\n              {keys.includes(\"total_service_attainPer\") ||\n                keys.includes(\"total_software_attainPer\") ||\n                keys.includes(\"software_attainPer\") ||\n                keys.includes(\"service_attainPer\") ||\n                keys.includes(\"service_attainPer\") ||\n                keys.includes(\"software_attainPer\") ||\n                keys.includes(\"software_attainPer\") ||\n                keys.includes(\"service_attainPer\") ||\n                keys.includes(\"software_attainPer\") ||\n                keys.includes(\"service_attainPer\") ? (\n                <Fragment>\n                  <span> %</span>\n                </Fragment>\n              ) : (\n                \"\"\n              )}\n            </td>\n          ) : (\n            \"\"\n          )\n        );\n    }\n    return <tr key={data.id}>{body}</tr>;\n  });\n\n  const exportExcel = () => {\n    let desiredColumnOrder = [];\n    let cols = [];\n    cols = attainmentData.attainmentData.replaceAll(\"'\", \"\");\n    desiredColumnOrder = cols.split(\",\");\n\n    const wantedValues = attainmentData.data.map((item) => {\n      const obj = {};\n      desiredColumnOrder.forEach((col) => {\n        if (col !== \"execStatus\" && col !== \"id\" && col !== \"lvl\") {\n          const value = item[col];\n          if (typeof value === \"string\") {\n            const [extractedValue, ,] = value.split(\"^&\"); // Extract the value from the key metadata\n            obj[col] = extractedValue; // Assign the extracted value to the corresponding column\n          } else {\n            obj[col] = value;\n          }\n        }\n      });\n      return obj;\n    }); // Create an array of objects where each object represents a row\n\n    const rows = wantedValues.map((item) => {\n      const row = [];\n      desiredColumnOrder.forEach((col) => {\n        if (\n          col !== \"isActive\" &&\n          col !== \"id\" &&\n          col !== \"helpText\" &&\n          col !== \"lvl\" &&\n          col !== \"execStatus\"\n        ) {\n          row.push(item[col]);\n        }\n      });\n      return row;\n    });\n\n    // const workbook = new ExcelJS.Workbook(); // Create a new ExcelJS workbook\n    const worksheet = workbook.addWorksheet(\"Sales Attainment\"); // Add a worksheet\n\n    // Add data rows\n\n    rows.forEach((item) => {\n      const row = worksheet.addRow(Object.values(item));\n    });\n\n    const boldRow = [1];\n    boldRow.forEach((index) => {\n      const row = worksheet.getRow(index);\n      row.font = { bold: true };\n    });\n\n    // Save the workbook\n    workbook.xlsx.writeBuffer().then((buffer) => {\n      saveAs(new Blob([buffer]), \"SalesAttainment.xlsx\");\n    });\n  };\n\n  return (\n    <div>\n      <div className=\"exportBtn ml-3 mb-1 align right \">\n        <span>\n          <RiFileExcel2Line\n            size=\"1.5em\"\n            title=\"Export to Excel\"\n            style={{ color: \"green\", float: \"right\" }}\n            cursor=\"pointer\"\n            onClick={exportExcel}\n          />\n        </span>\n      </div>\n      <div className=\"col-lg-12 col-md-12 col-sm-12  customCard\">\n        <div\n          className=\"col-lg-12 col-md-12 col-sm-12 no-padding attainTablePrnt scrollit darkHeader toHead\"\n          style={{ maxHeight: \"80vh\" }}\n        >\n          <table\n            className=\"table table-bordered table-striped htmlTable \"\n            cellPadding={0}\n            cellSpacing={0}\n          >\n            <thead>{attainmentTableData}</thead>\n            <thead>{attainmentTableDataBody}</thead>\n          </table>\n        </div>\n\n        {displayTable && (\n          <AttainmentDetailsTable\n            attinmentDtlsData={attinmentDtlsData}\n            reportRunId={attainmentData.reportRunId}\n            execName={execName}\n            type={type}\n          />\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default AttainmentTable;\n","import DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { environment } from \"../../environments/environment\";\nimport {\n  FaCaretDown,\n  FaChevronCircleDown,\n  FaChevronCircleUp,\n  FaInfoCircle,\n  FaSearch,\n} from \"react-icons/fa\";\nimport SavedSearchGlobal from \"../PrimeReactTableComponent/SavedSearchGlobal\";\nimport SelectSEDialogBox from \"../SelectSE/SelectSEDialogBox\";\nimport { CCollapse } from \"@coreui/react\";\nimport moment from \"moment\";\nimport { MultiSelect } from \"react-multi-select-component\";\nimport Loader from \"../Loader/Loader\";\nimport { useRef } from \"react\";\nimport GlobalValidation from \"../ValidationComponent/GlobalValidation\";\nimport { AiFillWarning } from \"react-icons/ai\";\nimport { BiCheck } from \"react-icons/bi\";\nimport { useLocation } from \"react-router-dom\";\nimport GlobalHelp from \"../PrimeReactTableComponent/GlobalHelp\";\nimport ScreenBreadcrumbs from \"../Common/ScreenBreadcrumbs\";\nimport { parseISO } from \"date-fns\";\nimport { useSelector } from \"react-redux\";\n\nexport default function AttainmentSearchFilter({\n  setAttainmentData,\n  setTableFlag,\n  setDisplay,\n}) {\n  const HelpPDFName = \"Revenue Attainment Metrics.pdf\";\n  const Headername = \"Revenue Attainment Metrics Help\";\n\n  const baseUrl = environment.baseUrl;\n  const localSE =\n    localStorage.getItem(\"selectedSELocal\") === null\n      ? []\n      : JSON.parse(localStorage.getItem(\"selectedSELocal\"));\n  const [filterData, setFilterData] = useState([]);\n  const location = useLocation();\n  const searchParams = new URLSearchParams(location.search);\n  const id = searchParams.get(\"id\");\n  const pageurl = \"http://10.11.12.149:3000/#/pmo/salesAttainment\";\n  const page_Name = \"Sales\";\n  const [editmsg, setEditAddmsg] = useState(false);\n  // const isIndividualChecked = useSelector(\n  //   (state) => state.selectedSEState.isIndividualChecked\n  // );\n  const isIndividualChecked =\n    localStorage.getItem(\"isIndividualCheckedLocal\") === null\n      ? false\n      : JSON.parse(localStorage.getItem(\"isIndividualCheckedLocal\"));\n  const FilterData = () => {\n    axios({\n      method: \"get\",\n      url:\n        baseUrl +\n        `/dashboardsms/savedsearch/FiltersData?saved_search_id=${\n          id === null ? 0 : id\n        }`,\n    }).then(function (res) {\n      const getData = res.data;\n      setFilterData(getData);\n    });\n  };\n  useEffect(() => {\n    FilterData();\n  }, []);\n\n  const [searching, setsearching] = useState(false);\n  console.log(searching);\n  const [salesExecutiveDropdown, setsalesExecutiveDropdown] = useState([]);\n  const [viewSelector, setViewSelector] = useState(-1);\n  const [selectedSE, setselectedSE] = useState(\"<< All SE >>\");\n\n  const [selectedSEVal, setSelectedSEVal] = useState(-2);\n\n  const [visible, setVisible] = useState(false);\n  const [cheveronIcon, setCheveronIcon] = useState(FaChevronCircleUp);\n  const [visibleCol, setvisibleCol] = useState(false);\n  const [division, setDivision] = useState([]);\n  const [SelectdDivision, setSelectdDivision] = useState([]);\n  const [validationMessage, setValidationMessage] = useState(false);\n\n  const ref = useRef([]);\n  const [startDate, setStartDate] = useState(new Date());\n  const abortController = useRef(null);\n  const nextYearDate = moment(startDate).clone().add(1, \"year\").toDate();\n  const year = moment(startDate).format(\"yyyy-MM-DD\").split(\"-\")[0];\n  const month = 4;\n  const dd = moment({ year, month: month - 1 })\n    .startOf(\"month\")\n    .format(\"YYYY-MM-DD\");\n\n  const [stDate, setStDate] = useState(dd);\n\n  const [attainmentDataPayload, setAttainmentDataPayload] = useState({\n    // executives: -2,\n    // isActive: \"true\",\n    // isIndividual: \"false\",\n    // from: stDate,\n    // duration: \"4\",\n    // showBy: \"-1\",\n    // practices: \"-1\",\n    // countries: \"-1\",\n    // selectExecs: \"\",\n    // Divisions: \"-1\",\n  });\n  useEffect(() => {\n    setAttainmentDataPayload(() => {\n      if (id != null) {\n        return {\n          executives: filterData?.executives,\n          isActive: filterData?.isActive,\n          isIndividual: filterData?.isIndividual,\n          from: filterData?.from,\n          duration: filterData?.duration,\n          showBy: filterData?.showBy,\n          practices: filterData?.practices,\n          countries: filterData?.countries,\n          selectExecs: filterData?.selectExecs,\n          Divisions: filterData?.Divisions,\n        };\n      } else {\n        return {\n          executives: -2,\n          isActive: \"true\",\n          isIndividual: \"false\",\n          from: stDate,\n          duration: \"4\",\n          showBy: \"-1\",\n          practices: \"-1\",\n          countries: \"-1\",\n          selectExecs: \"\",\n          Divisions: \"-1\",\n        };\n      }\n    });\n  }, [filterData]);\n\n  useEffect(() => {\n    if (id != null) {\n      const updateDivisions = division.filter((values) =>\n        attainmentDataPayload.Divisions?.includes(parseInt(values.value))\n      );\n      const progressDataDivisions = attainmentDataPayload.Divisions;\n\n      const divisionsToFilter = progressDataDivisions\n        ? progressDataDivisions.split(\",\").map(Number)\n        : [];\n      const updateDivisionsdata = updateDivisions.filter((values) =>\n        divisionsToFilter.includes(values.value)\n      );\n      const updateselector = filterData.showBy;\n\n      if (filterData?.from !== undefined && filterData.from !== \"\") {\n        const updatedate = filterData.from;\n\n        // setStartDate2(parseISO(updatedate));\n        setStartDate(parseISO(updatedate));\n      }\n      if (filterData.executives === \"-1\") {\n        const dataExActive = \"<< Active SE >>\";\n        setselectedSE(dataExActive);\n      } else if (filterData.executives === \"-3\") {\n        const dataExInactive = \"<< InActive SE >>\";\n        setselectedSE(dataExInactive);\n      } else if (filterData.executives === \"1\") {\n        const dataSelectSe = \"<< Select SE >>\";\n        setselectedSE(dataSelectSe);\n      } else if (filterData.executives === \"-2\") {\n        const dataAllSe = \"<< All SE >>\";\n        setselectedSE(dataAllSe);\n      } else if (filterData?.executives?.length > 3) {\n        const dataAllSe = \"<< Select SE >>\";\n        setselectedSE(dataAllSe);\n      }\n      const sevalue = attainmentDataPayload.executives;\n      if (filterData.executives?.length > 3) {\n        setSelectedSEVal(\"1\");\n      } else {\n        setSelectedSEVal(sevalue);\n      }\n      if (filterData?.Divisions == \"-1\") {\n        setSelectdDivision(division);\n      } else {\n        setSelectdDivision(updateDivisionsdata);\n      }\n      setViewSelector(updateselector);\n    }\n  }, [id, division, attainmentDataPayload.Divisions, filterData?.Divisions]);\n\n  useEffect(() => {\n    if (id != null) {\n      setTimeout(() => {\n        getAttainmentDataSavedSearch();\n      }, 2000);\n    }\n  }, [id, attainmentDataPayload]);\n  useEffect(() => {\n    getsalesExecutiveDropdown();\n    // getSFOwnerDivisionsDropdown()\n    getOwnerDivision();\n  }, []);\n\n  useEffect(() => {\n    // let startEle = document.getElementById(\"startDate\");\n    // console.log(\"in line 64-----\");\n    // console.log(startDate);\n    // console.log(startEle.value);\n    // setTimeout(() => {\n    //   startEle.value = \"FY \" + startEle.value;\n    // }, 100);\n    // console.log(startEle.value);\n    // let subValue = ref.current[1].children[0].children[0].children[0];\n    // // subValue.innerHTML = \"FY \" + subValue.value;\n    // console.log(subValue.value);\n    // subValue.value = \"abhsdj\"\n    // let inputValue2 = document.querySelector(\n    //   \".react-datepicker__input-container\"\n    // ).value;\n    // document.getElementById(\"output\").innerHTML =\n    //   \"Input Value 1: \" + inputValue1 + \" Input Value 2: \" + inputValue2;\n    // let a = document.getElementsByClassName(\n    //   \"react-datepicker__input-container\"\n    // )[0]?.children[0];\n    // console.log(a);\n    // a.value = \"FY\" + moment(startDate).format(\"yyyy\");\n    // console.log(a);\n  }, [startDate]);\n\n  //// -------breadcrumbs-----\n  const loggedUserId = localStorage.getItem(\"resId\");\n  const seId = localStorage.getItem(\"seId\");\n  console.log(seId);\n\n  const [routes, setRoutes] = useState([]);\n  let textContent = \"Sales\";\n  let currentScreenName = [\"Revenue Attainment Metrics\"];\n\n  useEffect(() => {\n    getMenus();\n  }, []);\n\n  const getMenus = () => {\n    // setMenusData\n\n    axios({\n      method: \"GET\",\n      url: baseUrl + `/CommonMS/master/getMenus?loggedUserId=${loggedUserId}`,\n    }).then((resp) => {\n      let data = resp.data.map((menu) => {\n        if (menu.subMenus) {\n          menu.subMenus = menu.subMenus.filter(\n            (subMenu) =>\n              subMenu.display_name !== \"Project Timesheet (Deprecated)\" &&\n              subMenu.display_name !== \"Invoice Details\" &&\n              subMenu.display_name !== \"Accounting\" &&\n              subMenu.display_name !== \"Upload\" &&\n              subMenu.display_name !== \"Practice Calls [Deprecated]\"\n          );\n        }\n\n        return menu;\n      });\n\n      data.forEach((item) => {\n        if (item.display_name === textContent) {\n          setRoutes([item]);\n        }\n      });\n      const projectStatusReportSubMenu = data\n        .find((item) => item.display_name === \"Sales\")\n        .subMenus.find(\n          (subMenu) => subMenu.display_name === \"Revenue Attainment Metrics\"\n        );\n      setAccessData(projectStatusReportSubMenu.access_level);\n    });\n  };\n  //------------------------methods----------------------------------\n\n  const ArrowRenderer = ({ expanded }) => (\n    <>\n      {expanded ? (\n        <FaCaretDown className=\"chevronIcon\" />\n      ) : (\n        <FaCaretDown className=\"chevronIcon\" />\n      )}\n    </>\n  );\n\n  const DateChange = ({ id, value }) => {\n    const year = moment(value).format(\"yyyy-MM-DD\").split(\"-\")[0];\n\n    // const month = moment(new Date())\n    //   .format(\"yyyy-MM-DD\")\n\n    //   .split(\"-\")[1];\n    const month = 4;\n    const dd = moment({ year, month: month - 1 })\n      .startOf(\"month\")\n      .format(\"YYYY-MM-DD\");\n    setStDate(dd);\n    setAttainmentDataPayload((prevState) => {\n      return { ...prevState, [id]: moment(dd).format(\"yyyy-MM-DD\") };\n    });\n    if (id === \"executives\" && value === \"1\") {\n      setVisible(true);\n    }\n  };\n  const onFilterChange = ({ id, value }) => {\n    if (id === \"executives\" && value === \"1\") {\n      setVisible(true);\n    }\n    setAttainmentDataPayload((prevState) => {\n      return { ...prevState, [id]: value };\n    });\n  };\n  // const onChange1 = ({ id, value, eventPhase }) => {\n  //   console.log(id + \" \" + value, \" \" + eventPhase);\n  //   setAttainmentDataPayload((prevState) => {\n  //     return { ...prevState, [id]: eventPhase };\n  //   });\n  //   if (id === \"executives\" && value === \"1\") {\n  //     setVisible(true);\n  //   }\n  // };\n  const [hirarchy, setHirarchy] = useState([]);\n  const [accessData, setAccessData] = useState([]);\n\n  const hirarchyAccess = () => {\n    axios\n\n      .get(\n        baseUrl +\n          `/ProjectMS/project/getHirarchyAccesss?loggedUserId=${loggedUserId}`\n      )\n\n      .then((resp) => {\n        const data = resp.data;\n        setHirarchy(data);\n      })\n\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n  useEffect(() => {\n    hirarchyAccess();\n  }, []);\n  const attainmentSearchValidator = () => {\n    setsearching(false);\n    let valid = GlobalValidation(ref);\n\n    // if (valid) {\n    //   return;\n    // }\n    // !valid && setvisibleCol(!visibleCol);\n\n    if (\n      attainmentDataPayload.executives === \"\" ||\n      attainmentDataPayload.Divisions === \"\" ||\n      (attainmentDataPayload.executives === \"1\" &&\n        (localStorage.getItem(\"selectedSELocal\") === null ||\n          localStorage.getItem(\"selectedSELocal\") === undefined ||\n          localStorage.getItem(\"selectedSELocal\") === \"[]\"))\n    ) {\n      // let valid = GlobalValidation(ref);\n\n      if (valid) {\n        {\n          setValidationMessage(true);\n        }\n        return;\n      } else {\n        setValidationMessage(false);\n      }\n    } else {\n      getAttainmentData();\n    }\n  };\n\n  // -----------------------calls----------------------------------\n\n  const getsalesExecutiveDropdown = () => {\n    axios\n      .get(baseUrl + \"/SalesMS/MasterController/salesExecutiveData\")\n      .then((resp) => {\n        const data = resp.data;\n        const dropdownOptions = data\n          .filter((item) => item.isActive === 1)\n          .map((item) => {\n            return (\n              <option key={item.id} value={item.val}>\n                {item.lkupName}\n              </option>\n            );\n          });\n        setsalesExecutiveDropdown(dropdownOptions);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n  const getOwnerDivision = () => {\n    axios\n      .get(baseUrl + `/SalesMS/attainment/getOwnerDivision`)\n      .then((Response) => {\n        let countries = [];\n        let data = Response.data;\n\n        data.length > 0 &&\n          data.forEach((e) => {\n            let countryObj = {\n              label: e.owner_division,\n              value: e.id,\n            };\n            countries.push(countryObj);\n          });\n        setDivision(countries);\n        setSelectdDivision(countries);\n      })\n      .catch((error) => console.log(error));\n  };\n  const SelectSEData = useSelector(\n    (state) => state.selectedSEState.directSETreeData\n  );\n  console.log(SelectSEData);\n  const getAttainmentData = () => {\n    let valid = GlobalValidation(ref);\n\n    const loaderTime = setTimeout(() => {\n      setsearching(true);\n    }, 2000);\n\n    abortController.current = new AbortController();\n\n    setTableFlag(false);\n    attainmentDataPayload.executives =\n      attainmentDataPayload?.executives == \"1\"\n        ? SelectSEData\n        : attainmentDataPayload?.executives;\n    axios({\n      method: \"post\",\n      url: baseUrl + `/SalesMS/attainment/getAttainmentData`,\n      data: attainmentDataPayload,\n      signal: abortController.current.signal,\n    })\n      .then((resp) => {\n        const data = resp.data;\n        setsearching(false);\n        clearTimeout(loaderTime);\n        setAttainmentData(data);\n\n        if (data.data.length > 0) {\n          setTableFlag(true);\n          setsearching(false);\n        }\n        !valid && setvisibleCol(!visibleCol);\n        visibleCol\n          ? setCheveronIcon(FaChevronCircleUp)\n          : setCheveronIcon(FaChevronCircleDown);\n        setDisplay(viewSelector);\n        setValidationMessage(false);\n        setsearching(false);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n    // setAttainmentData(ReviewsData)\n  };\n\n  const getAttainmentDataSavedSearch = () => {\n    let valid = GlobalValidation(ref);\n    setsearching(true);\n    abortController.current = new AbortController();\n\n    setTableFlag(false);\n    attainmentDataPayload.executives =\n      attainmentDataPayload?.executives == \"1\"\n        ? SelectSEData\n        : attainmentDataPayload?.executives;\n    axios({\n      method: \"post\",\n      url: baseUrl + `/SalesMS/attainment/getAttainmentData`,\n      data: attainmentDataPayload,\n      signal: abortController.current.signal,\n    })\n      .then((resp) => {\n        const data = resp.data;\n        setsearching(false);\n\n        setAttainmentData(data);\n\n        if (data.data.length > 0) {\n          setTableFlag(true);\n          setsearching(false);\n        }\n        !valid && setvisibleCol(!visibleCol);\n        visibleCol\n          ? setCheveronIcon(FaChevronCircleUp)\n          : setCheveronIcon(FaChevronCircleDown);\n        setDisplay(viewSelector);\n        setValidationMessage(false);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n    // setAttainmentData(ReviewsData)\n  };\n  const handleAbort = () => {\n    abortController.current && abortController.current.abort();\n    setsearching(false);\n  };\n  // -----------------------------useEffect---------------------------------\n\n  const generateDropdownLabel = (selectedOptions, allOptions) => {\n    const selectedValues = selectedOptions.map((option) => option.value);\n\n    const allValues = allOptions.map((item) => item.value);\n\n    if (selectedValues.length === allValues.length) {\n      return \"<< ALL >>\";\n    } else {\n      return selectedOptions.map((option) => option.label).join(\", \");\n    }\n  };\n  return (\n    <div>\n      <div>\n        {validationMessage ? (\n          <div className=\"statusMsg error\">\n            {\" \"}\n            <AiFillWarning /> Please select the valid values for highlighted\n            fields{\" \"}\n          </div>\n        ) : (\n          \"\"\n        )}\n      </div>\n      <div className=\"pageTitle\">\n        <div className=\"childOne\"></div>\n        <div className=\"childTwo\">\n          <h2>Revenue Attainment Metrics</h2>\n        </div>\n        <div className=\"childThree\"></div>\n      </div>\n      <ScreenBreadcrumbs\n        routes={routes}\n        currentScreenName={currentScreenName}\n      />\n\n      {editmsg ? (\n        <div className=\"statusMsg success\">\n          <span className=\"errMsg\">\n            <BiCheck size=\"1.4em\" /> &nbsp; Search created successfully.\n          </span>\n        </div>\n      ) : (\n        \"\"\n      )}\n\n      <div className=\"group mb-3 customCard \">\n        <div className=\"col-md-12 collapseHeader \">\n          <h2>Search Filters</h2>\n          <div className=\"helpBtn\">\n            <GlobalHelp pdfname={HelpPDFName} name={Headername} />\n          </div>\n\n          <div className=\"saveBtn\" style={{ marginRight: \"6px\" }}>\n            <SavedSearchGlobal\n              className=\"btnAttainMent btnAttain\"\n              setEditAddmsg={setEditAddmsg}\n              pageurl={pageurl}\n              page_Name={page_Name}\n              payload={attainmentDataPayload}\n            />\n          </div>\n          <div\n            onClick={() => {\n              setvisibleCol(!visibleCol);\n              visibleCol\n                ? setCheveronIcon(FaChevronCircleUp)\n                : setCheveronIcon(FaChevronCircleDown);\n            }}\n          >\n            <span>{cheveronIcon}</span>\n          </div>\n        </div>\n        <CCollapse visible={!visibleCol}>\n          <div className=\"group-content row\">\n            <div className=\"col-4 mb-2\" id=\"execSelDiv\">\n              <div className=\"form-group row\">\n                <label className=\"col-5\">\n                  Sales Executive <span className=\"error-text\">&nbsp;*</span>\n                </label>\n                <span className=\"col-1 p-0\">:</span>\n                <span className=\"col-6 textfield\">\n                  {accessData == 1000 || accessData == 500 ? (\n                    <select\n                      id=\"executives\"\n                      className=\"text\"\n                      value={selectedSEVal}\n                      onChange={(e) => {\n                        onFilterChange(e.target);\n\n                        setSelectedSEVal(e.target.value);\n                        setselectedSE(\n                          e.target.options[e.target.selectedIndex].text\n                        );\n                        setAttainmentDataPayload((prevVal) => ({\n                          ...prevVal,\n                          [\"executives\"]: e.target.value,\n                        }));\n                      }}\n                      ref={(ele) => {\n                        ref.current[0] = ele;\n                      }}\n                    >\n                      <option value={\"\"}>{\"<< Please select>> \"}</option>\n                      {salesExecutiveDropdown}\n                    </select>\n                  ) : (\n                    <select\n                      id=\"executives\"\n                      className=\"text\"\n                      value={selectedSEVal}\n                      onChange={(e) => {\n                        onFilterChange(e.target);\n                        setSelectedSEVal(e.target.value);\n                        setselectedSE(\n                          e.target.options[e.target.selectedIndex].text\n                        );\n                      }}\n                      ref={(ele) => {\n                        ref.current[0] = ele;\n                      }}\n                    >\n                      <option value={\"\"}>{\"<< Please select>> \"}</option>\n                      <option value=\"1\">Select SE</option>\n                    </select>\n                  )}\n                </span>\n              </div>\n            </div>\n\n            <div className=\"col-4 mb-2\">\n              <div className=\"form-group row\" id=\"week-picker-wrapper\">\n                <label className=\"col-5\">\n                  Financial Year<span className=\"error-text\">&nbsp;*</span>\n                </label>\n                <span className=\"col-1 p-0\">:</span>\n                <div className=\"col-6 datepickerAttainment \">\n                  <div\n                    className=\"datepicker attainTableDate after\"\n                    ref={(ele) => {\n                      ref.current[1] = ele;\n                    }}\n                  >\n                    <DatePicker\n                      id=\"startDate\"\n                      selected={nextYearDate}\n                      onChange={(e) => {\n                        setStartDate(e);\n                        DateChange({\n                          id: \"from\",\n                          value: e.toLocaleDateString(\"en-CA\"),\n                        });\n                      }}\n                      dateFormat={\"'FY' yyyy\"}\n                      showYearPicker\n                    />\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            <div className=\"col-4 mb-2\">\n              <div className=\"form-group row\">\n                <label className=\"col-5\">\n                  Quarters<span className=\"error-text\">&nbsp;*</span>\n                </label>\n                <span className=\"col-1 p-0\">:</span>\n                <div className=\"col-6 \" style={{ height: \"23px\" }}>\n                  <select\n                    id=\"duration\"\n                    name=\"duration\"\n                    //className=\"col-md-12 col-sm-12 col-xs-12 \"\n                    selected=\"4\"\n                    onChange={(e) => {\n                      onFilterChange(e.target);\n                    }}\n                    ref={(ele) => {\n                      ref.current[2] = ele;\n                    }}\n                    value={attainmentDataPayload?.duration}\n                  >\n                    <option value=\"1\">1</option>\n                    <option value=\"2\">2</option>\n                    <option value=\"3\">3</option>\n                    <option value=\"4\" selected>\n                      4\n                    </option>\n                  </select>\n                </div>\n              </div>\n            </div>\n\n            <div className=\"col-4 mb-2\">\n              <div className=\"form-group row\">\n                <label className=\"col-5\">\n                  Target Type{\" \"}\n                  <FaInfoCircle\n                    className=\"infoIcon\"\n                    title=\"For Services type only\"\n                  />\n                </label>\n                <span className=\"col-1 p-0\">:</span>\n                <span className=\"col-6 \">\n                  <select\n                    id=\"showBy\"\n                    name=\"division\"\n                    // className=\"col-md-12 col-sm-12 col-xs-12 \"\n                    onChange={(e) => {\n                      setViewSelector(e.target.value);\n                      if (e.target.value == \"country\") {\n                        setAttainmentDataPayload((prevState) => {\n                          return { ...prevState, [\"countries\"]: \"6\" };\n                        });\n                      } else {\n                        setAttainmentDataPayload((prevState) => {\n                          return { ...prevState, [\"countries\"]: \"-1\" };\n                        });\n                      }\n                      if (e.target.value == \"practice\") {\n                        setAttainmentDataPayload((prevState) => {\n                          return { ...prevState, [\"practices\"]: \"1\" };\n                        });\n                      } else {\n                        setAttainmentDataPayload((prevState) => {\n                          return { ...prevState, [\"practices\"]: \"-1\" };\n                        });\n                      }\n\n                      onFilterChange(e.target);\n                    }}\n                    ref={(ele) => {\n                      ref.current[3] = ele;\n                    }}\n                    value={attainmentDataPayload?.showBy}\n                  >\n                    <option id={1} value={\"country\"}>\n                      {\"Country\"}\n                    </option>\n                    <option id={-1} value={\"-1\"}>\n                      {\"Organization\"}\n                    </option>\n                    <option id={0} value={\"practice\"}>\n                      {\"Practice\"}\n                    </option>\n                  </select>\n                </span>\n              </div>\n            </div>\n            <div className=\"col-4 mb-2\">\n              <div className=\"form-group row\">\n                <label className=\"col-5\">\n                  Owner Division<span className=\"error-text\">&nbsp;*</span>\n                </label>\n                <span className=\"col-1 p-0\">:</span>\n                <span\n                  className=\"col-6 multiselect\"\n                  ref={(ele) => {\n                    ref.current[3] = ele;\n                  }}\n                >\n                  <MultiSelect\n                    ArrowRenderer={ArrowRenderer}\n                    id=\"Divisions\"\n                    options={division}\n                    hasSelectAll={true}\n                    value={SelectdDivision}\n                    disabled={false}\n                    overrideStrings={{\n                      selectAllFiltered: \"Select All\",\n                      selectSomeItems: \"<< All>>\",\n                    }}\n                    onChange={(e) => {\n                      setSelectdDivision(e);\n                      let filteredCountry = [];\n                      e.forEach((d) => {\n                        filteredCountry.push(d.value);\n                      });\n                      setAttainmentDataPayload((prevVal) => ({\n                        ...prevVal,\n                        [\"Divisions\"]: filteredCountry.toString(),\n                      }));\n                    }}\n                    valueRenderer={generateDropdownLabel}\n                  />\n                </span>\n              </div>\n            </div>\n            {viewSelector === \"practice\" && (\n              <div className=\"col-4 mb-2\">\n                <div className=\"form-group row\">\n                  <label className=\"col-5\">Practice</label>\n                  <span className=\"col-1 p-0\">:</span>\n                  <div className=\"col-6\">\n                    <select\n                      id=\"practices\"\n                      name=\"practices\"\n                      // className=\"col-md-12 col-sm-12 col-xs-12 \"\n                      onChange={(e) => {\n                        console.log(e.target);\n                        const { value, id } = e.target;\n                        setAttainmentDataPayload((prevState) => {\n                          return { ...prevState, [id]: value };\n                        });\n                      }}\n                      value={attainmentDataPayload?.practices}\n                    >\n                      <option value={1} id={1}>\n                        {\"DACS\"}\n                      </option>\n                      <option value={3} id={3}>\n                        {\"IM&A\"}\n                      </option>\n                      <option value={4} id={4}>\n                        {\"QA&TA\"}\n                      </option>\n                      <option value={6} id={6}>\n                        {\"Prolifics Products\"}\n                      </option>\n                      <option value={999} id={999}>\n                        {\"Others\"}\n                      </option>\n                    </select>\n                  </div>\n                </div>\n              </div>\n            )}\n\n            {viewSelector === \"country\" && (\n              <div className=\"col-4 mb-2\">\n                <div className=\"form-group row\">\n                  <label className=\"col-5\">Country</label>\n                  <span className=\"col-1 p-0\">:</span>\n                  <div className=\"col-6\">\n                    <select\n                      id=\"countries\"\n                      name=\"countries\"\n                      // className=\"col-md-12 col-sm-12 col-xs-12 \"\n                      onChange={(e) => {\n                        const { value, id } = e.target;\n                        setAttainmentDataPayload((prevState) => {\n                          return { ...prevState, [id]: value };\n                        });\n                      }}\n                      value={attainmentDataPayload?.countries}\n                    >\n                      <option value=\"6\">Canada</option>\n                      <option value=\"5\">Germany</option>\n                      <option value=\"3\">India</option>\n                      <option value=\"8\">Jordan</option>\n                      <option value=\"4\">Others</option>\n                      <option value=\"7\">UAE</option>\n                      <option value=\"1\">UK</option>\n                      <option value=\"2\">US</option>\n                    </select>\n                  </div>\n                </div>\n              </div>\n            )}\n\n            <div className=\"col-12 \">\n              <div className=\"seFooter\">\n                <span className=\"selectedSE\">\n                  <b>Selected SE : </b>\n                  <span className=\"dynText\">\n                    {selectedSE === \"<< Select SE >>\"\n                      ? localSE.map((item, index) => (\n                          <span key={item.id}>\n                            {isIndividualChecked\n                              ? item.salesPersonName\n                                ? item.salesPersonName\n                                : item.text\n                              : item.salesPersonName\n                              ? item.salesPersonName\n                              : item.text + ` & Team`}\n                            {index === localSE.length - 1 ? \"\" : \", \"}\n                          </span>\n                        ))\n                      : selectedSE}\n                  </span>\n                </span>\n              </div>\n            </div>\n\n            <div className=\"col-md-12 no-padding section\"></div>\n\n            <div className=\"col-md-12 col-sm-12 col-xs-12 my-2 search btn-container center\">\n              <button\n                type=\"button\"\n                className=\"btn btn-primary\"\n                onClick={attainmentSearchValidator}\n              >\n                <FaSearch /> Search{\" \"}\n              </button>\n            </div>\n          </div>\n        </CCollapse>\n        {searching ? <Loader handleAbort={handleAbort} /> : \"\"}\n      </div>\n\n      <SelectSEDialogBox\n        visible={visible}\n        setVisible={setVisible}\n        accessData={accessData}\n      />\n    </div>\n  );\n}\n","import AttainmentTable from \"./AttainmentTable\";\nimport { useState, useEffect } from \"react\";\nimport AttainmentSearchFilter from \"./AttainmentSearchFilter\";\nimport \"./Attainment.scss\";\nimport axios from \"axios\";\nimport { environment } from \"../../environments/environment\";\n\nexport default function Attainment() {\n  const [tableFlag, setTableFlag] = useState();\n  const [attainmentData, setAttainmentData] = useState();\n  const [display, setDisplay] = useState([]);\n  const baseUrl = environment.baseUrl;\n  const loggedUserId = localStorage.getItem(\"resId\");\n\n\n  return (\n    <div className=\"col-md-12  border-box no-padding\">\n      <div className=\"col-lg-12 col-md-12 col-sm-12 no-padding\">\n        <AttainmentSearchFilter\n          setAttainmentData={setAttainmentData}\n          setTableFlag={setTableFlag}\n          setDisplay={setDisplay}\n        />\n        {tableFlag && (\n          <AttainmentTable attainmentData={attainmentData} display={display} />\n        )}\n        {/* <AttainmentTable /> */}\n      </div>\n    </div>\n  );\n}\n"],"names":["AttainmentDetailsTable","attinmentDtlsData","reportRunId","execName","type","baseUrl","environment","useState","attainmentDetailsData","setAttainmentDetailsData","open","setOpen","abortController","useRef","useEffect","current","AbortController","axios","method","url","data","executiveId","signal","then","resp","window","scrollTo","top","behavior","catch","err","console","log","attainmentDtlsTableData","map","conditions","name","colSpan","className","header","keyArr","attainmentDtlsData","split","keys","ia","some","el","includes","push","id","rowSpan","title","Fragment","parseInt","toLocaleString","length","style","color","Loader","handleAbort","abort","attainmentData","display","setType","setexecName","setAttinmentDtlsData","displayTable","setDisplayTable","icons","fte0","src","fte_inactive","alt","height","fte1","fte_active","fte2","fte_notice","subk0","subk_inactive","subk1","subk_active","subk2","subk_notice","attainmentTableData","attainmentTableDataBody","body","onClick","size","float","cursor","desiredColumnOrder","cols","replaceAll","rows","item","obj","forEach","col","value","extractedValue","row","worksheet","workbook","addWorksheet","addRow","Object","values","index","getRow","font","bold","xlsx","writeBuffer","buffer","saveAs","Blob","maxHeight","cellPadding","cellSpacing","AttainmentSearchFilter","setAttainmentData","setTableFlag","setDisplay","localSE","localStorage","getItem","JSON","parse","filterData","setFilterData","location","useLocation","URLSearchParams","search","get","editmsg","setEditAddmsg","isIndividualChecked","res","getData","searching","setsearching","salesExecutiveDropdown","setsalesExecutiveDropdown","viewSelector","setViewSelector","selectedSE","setselectedSE","selectedSEVal","setSelectedSEVal","visible","setVisible","FaChevronCircleUp","cheveronIcon","setCheveronIcon","visibleCol","setvisibleCol","division","setDivision","SelectdDivision","setSelectdDivision","validationMessage","setValidationMessage","ref","Date","startDate","setStartDate","nextYearDate","moment","clone","add","toDate","year","format","dd","month","startOf","stDate","setStDate","attainmentDataPayload","setAttainmentDataPayload","executives","isActive","isIndividual","from","duration","showBy","practices","countries","selectExecs","Divisions","updateDivisions","filter","progressDataDivisions","divisionsToFilter","Number","updateDivisionsdata","updateselector","undefined","updatedate","parseISO","sevalue","setTimeout","getAttainmentDataSavedSearch","getsalesExecutiveDropdown","getOwnerDivision","loggedUserId","seId","routes","setRoutes","getMenus","menu","subMenus","subMenu","display_name","projectStatusReportSubMenu","find","setAccessData","access_level","onFilterChange","prevState","setHirarchy","accessData","dropdownOptions","val","lkupName","Response","e","countryObj","label","owner_division","error","SelectSEData","useSelector","state","selectedSEState","directSETreeData","getAttainmentData","valid","GlobalValidation","loaderTime","clearTimeout","FaChevronCircleDown","ScreenBreadcrumbs","currentScreenName","GlobalHelp","pdfname","marginRight","SavedSearchGlobal","pageurl","page_Name","payload","onChange","target","options","selectedIndex","text","prevVal","ele","selected","DateChange","toLocaleDateString","dateFormat","showYearPicker","ArrowRenderer","expanded","hasSelectAll","disabled","overrideStrings","selectAllFiltered","selectSomeItems","filteredCountry","d","toString","valueRenderer","selectedOptions","allOptions","selectedValues","option","allValues","join","salesPersonName","SelectSEDialogBox","Attainment","tableFlag"],"sourceRoot":""}