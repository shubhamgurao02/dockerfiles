{"version":3,"file":"static/js/5282.5937005f.chunk.js","mappings":"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","sources":["views/SoftwareComponent/DisplayPopUpEditNote.js","views/SoftwareComponent/TargetTable.js","views/SoftwareComponent/SoftwareSearchFilter.js","views/SoftwareComponent/DocumentTable.js","views/SoftwareComponent/DetailsTable.js","views/SoftwareComponent/WoWChart.js","views/SoftwareComponent/WowDisplayPopUp.js","views/SoftwareComponent/WoWTable.js","views/SoftwareComponent/ViewDetailsSearchFilters.js","views/SoftwareComponent/ViewTable.js","views/SoftwareComponent/Software.js","../node_modules/@mui/icons-material/DownloadForOfflineRounded.js"],"sourcesContent":["import React from \"react\";\nimport ReactQuill from \"react-quill\";\nimport { CModal } from \"@coreui/react\";\nimport { CModalBody } from \"@coreui/react\";\nimport { CModalHeader } from \"@coreui/react\";\nimport { CModalTitle } from \"@coreui/react\";\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { environment } from \"../../environments/environment\";\n\nimport axios from \"axios\";\nimport { FaSave } from \"react-icons/fa\";\nimport { ImCross } from \"react-icons/im\";\n\nconst DisplayPopUpEditNote = (props) => {\n  const { openPopup, setOpenPopup, accessData, Vdata, rowData, popupValue } =\n    props;\n  const [notesData, setNotesData] = useState({});\n  const [value, setValue] = useState(\"\");\n  const baseUrl = environment.baseUrl;\n\n  const editorToolBar = {\n    toolbar: [\n      [\n        { header: [false, 1, 2, 3, 4, 5, 6] },\n        // {tooltip:[\"ee\"]},\n        // { size: [] },\n        { font: [] },\n        { color: [] },\n        { bold: { tooltip: \"Bold (Ctrl+B)\" } },\n        \"italic\",\n        \"underline\",\n        { list: \"ordered\" },\n        { list: \"bullet\" },\n        { script: \"sub\" },\n        { script: \"super\" },\n        { indent: \"-1\" },\n        { indent: \"+1\" },\n        { align: null },\n        { align: \"center\" },\n        { align: \"right\" },\n        \"strike\",\n        \"link\",\n        \"code-block\",\n        \"clean\",\n      ],\n    ],\n  };\n  const getNotesData = () => {\n    axios({\n      method: \"get\",\n      url: baseUrl + `/SalesMS/services/getExecutiveNotes?rid=${rowData.id}`,\n    }).then((res) => {\n      var resp = res.data;\n      setNotesData(resp);\n      const defaultNotes = resp[0]?.notes || \"\";\n      setValue(defaultNotes);\n    });\n  };\n\n  const saveNotesData = () => {\n    const cleanedNotes = value.replace(/<\\/?[^>]+(>|$)/g, \"\");\n    const requestData = {\n      resId: rowData.id,\n      notes: cleanedNotes,\n      loggedUserId: localStorage.getItem(\"resId\"),\n    };\n    axios({\n      method: \"POST\",\n      url: baseUrl + `/SalesMS/pmo/savenotes`,\n      data: requestData,\n    }).then((resp) => {\n      var data = resp.data;\n      setNotesData(data);\n      setOpenPopup(false);\n    });\n  };\n\n  useEffect(() => {\n    getNotesData();\n  }, []);\n\n  return (\n    <div>\n      <CModal\n        visible={openPopup}\n        size=\"xl\"\n        onClose={() => setOpenPopup(false)}\n        backdrop={\"static\"}\n      >\n        <CModalHeader className=\"\" style={{ cursor: \"all-scroll\" }}>\n          <CModalTitle>\n            <span className=\"\">\n              Notes -{\" \"}\n              {popupValue === \"ViewTable\" ? rowData?.executive : rowData?.name}\n            </span>\n          </CModalTitle>\n        </CModalHeader>\n        <CModalBody>\n          {accessData === 1000 ? (\n            <ReactQuill\n              className=\"\"\n              theme=\"snow\"\n              value={value}\n              name=\"notes\"\n              // data-toggle=\"tooltip\"\n              // title={\"link\"}\n              defaultValue={notesData[0]?.notes}\n              id=\"editor-container\"\n              onChange={(e) => {\n                setValue(e);\n              }}\n              modules={editorToolBar}\n            />\n          ) : (\n            <ReactQuill\n              className=\"\"\n              theme=\"snow\"\n              value={value}\n              name=\"notes\"\n              // data-toggle=\"tooltip\"\n              // title={\"link\"}\n              defaultValue={notesData[0]?.notes}\n              id=\"editor-container\"\n              // onChange={(e) => {\n              //   setValue(e);\n              // }}\n              modules={editorToolBar}\n              readOnly={true}\n              style={{ cursor: \"not-allowed\" }}\n            />\n          )}\n\n          {/* {popupValue === \"TargetTable\" ? ( */}\n          {accessData === 1000 && (\n            <div className=\"col-md-12 col-sm-12 col-xs-12 my-2 btn-container center\">\n              <button\n                type=\"button\"\n                className=\"btn btn-primary\"\n                onClick={() => {\n                  saveNotesData();\n                }}\n              >\n                <FaSave />\n                Save{\" \"}\n              </button>\n              <button\n                type=\"button\"\n                className=\"btn btn-primary\"\n                // onClick={setOpenPopup(false)}\n                onClick={() => {\n                  setOpenPopup(false);\n                }}\n              >\n                <ImCross fontSize={\"11px\"} />\n                Cancel{\" \"}\n              </button>\n            </div>\n          )}\n        </CModalBody>\n      </CModal>\n    </div>\n  );\n};\nexport default DisplayPopUpEditNote;\n","import React from \"react\";\nimport { Fragment, useState, useEffect, createRef } from \"react\";\nimport { FiChevronRight } from \"react-icons/fi\";\nimport TargetTableData from \"./TargetTableData.json\";\nimport {\n  FaAngleRight,\n  FaAngleLeft,\n  FaChevronCircleLeft,\n  FaChevronCircleRight,\n} from \"react-icons/fa\";\nimport { CModal } from \"@coreui/react\";\nimport { makeStyles } from \"@material-ui/core\";\nimport { CModalBody } from \"@coreui/react\";\nimport { CModalHeader } from \"@coreui/react\";\nimport { CModalTitle } from \"@coreui/react\";\nimport { FiRotateCcw } from \"react-icons/fi\";\nimport fte_active from \"../../assets/images/empstatusIcon/fte_active.png\";\nimport fte_inactive from \"../../assets/images/empstatusIcon/fte_inactive.png\";\nimport fte_notice from \"../../assets/images/empstatusIcon/fte_notice.png\";\nimport subk_active from \"../../assets/images/empstatusIcon/subk_active.png\";\nimport subk_inactive from \"../../assets/images/empstatusIcon/subk_inactive.png\";\nimport subk_notice from \"../../assets/images/empstatusIcon/subk_notice.png\";\nimport { FaAngleDown } from \"react-icons/fa\";\nimport axios from \"axios\";\nimport { environment } from \"../../environments/environment\";\nimport { BiReset } from \"react-icons/bi\";\nimport { FaSave } from \"react-icons/fa\";\nimport ExcelJS from \"exceljs\";\n\nimport { MdOutlineEditNote } from \"react-icons/md\";\n\nimport DisplayPopUpEditNote from \"./DisplayPopUpEditNote\";\nimport { RiFileExcel2Line } from \"react-icons/ri\";\n\nfunction tableRendere({\n  selectedSe,\n  reportId,\n  selectedSE,\n  setSelectedSE,\n  buttonAction,\n  setData,\n  data,\n  hirarchy,\n  accessData,\n  tableData,\n  loader,\n  setTableData,\n  headerData,\n  setHeaderData,\n  fdate,\n  setLoader,\n  setErrorMessage,\n  getData1,\n}) {\n  const [openPopup, setOpenPopup] = useState(false);\n  const [rowData, setRowData] = useState({});\n  const [seOptions, setSeOptions] = useState([]);\n  const [expanded, setexpanded] = useState([]);\n  const [targetCatId, setTargetCatId] = useState([]);\n  const [coloumnArray, setColoumnArray] = useState([]);\n  const [colexpanded, setcolexpanded] = useState([]);\n  let coltoggler = 0;\n  const popupValue = \"TargetTable\";\n  const [wirteData, setWriteData] = useState();\n  const loggedUserId = localStorage.getItem(\"resId\");\n  const [serTargetData, setSerTargetData] = useState([]);\n  const [serviceTargetTableData, setServiceTargetTableData] = useState(null);\n  const [serviceTargetTableData1, setServiceTargetTableData1] = useState(null);\n  const [serTargetDataKeys, setSerTargetDataKeys] = useState([]);\n  const [editedData, setEditedData] = useState([]);\n  const [serTargetObj, setSerTargetObj] = useState({});\n  const [targetId, setTargetId] = useState({});\n  let toggler = 0;\n  const icons = {\n    fte0: (\n      <img\n        src={fte_inactive}\n        alt=\"(fte_inactive_icon)\"\n        style={{ height: \"12px\" }}\n        title=\"Ex-Employee\"\n      />\n    ),\n    fte1: (\n      <img\n        src={fte_active}\n        alt=\"(fte_active_icon)\"\n        style={{ height: \"12px\" }}\n        title=\"Active Employee\"\n      />\n    ),\n    fte2: (\n      <img\n        src={fte_notice}\n        alt=\"(fte_notice_icon)\"\n        style={{ height: \"12px\" }}\n        title=\"Employee in notice period\"\n      />\n    ),\n    subk0: (\n      <img\n        src={subk_inactive}\n        alt=\"(subk_inactive_icon)\"\n        style={{ height: \"12px\" }}\n        title=\"Ex-Contractor\"\n      />\n    ),\n    subk1: (\n      <img\n        src={subk_active}\n        alt=\"(subk_active_icon)\"\n        style={{ height: \"12px\" }}\n        title=\"Active Contractor\"\n      />\n    ),\n    subk2: (\n      <img\n        src={subk_notice}\n        alt=\"(subk_notice_icon)\"\n        style={{ height: \"12px\" }}\n        title=\"Contractor in notice period\"\n      />\n    ),\n  };\n\n  const baseUrl = environment.baseUrl;\n  const [targetData, setTargetData] = useState([]);\n\n  const [targetObj, setTargetObj] = useState({});\n\n  // ----------------Method start-------------------------\n  const onTargetEnter = (e, i) => {\n    const { value, id } = e.target;\n    setTargetData((prevState) => {\n      prevState[i][id] = value;\n      return [...prevState];\n    });\n  };\n\n  const str = `'${tableData.GetSalesSWTargets}'`;\n\n  const formattedData = `'${tableData.GetSalesSWTargets}'`;\n\n  const arr = str?.slice(1, -1)?.split(\",\");\n  const filteredKeysArray = arr?.filter(\n    (key) =>\n      key !== \"id\" &&\n      key !== \"execStatus\" &&\n      key !== \"count\" &&\n      key !== \"isActive\" &&\n      key !== \"isEdit\" &&\n      key !== \"keyAttr\" &&\n      key !== \"lvl\" &&\n      key !== \"parentAttr\" &&\n      key !== \"targetCat\" &&\n      key !== \"targetCatId\" &&\n      key !== \"executive\"\n  );\n\n  const seDropDown = () => {\n    axios\n      .get(\n        baseUrl +\n          `/CommonMS/master/getSalesRoleAcess?loggedUserId=${loggedUserId}`\n      )\n      .then((res) => {\n        const data = res.data;\n        setSeOptions(data[0].is_create);\n      });\n  };\n  useEffect(() => {\n    seDropDown();\n  }, []);\n\n  //----------------------call-----------------------------------\n  const [datawrite, setDatawrite] = useState();\n  const getVendorList = () => {\n    axios\n      .get(\n        baseUrl +\n          `/SalesMS/software/getSalesWriteAccess?loggedUserId=${loggedUserId}`\n      )\n      .then((res) => {\n        const data = res.data;\n\n        setWriteData(data[0].result);\n        setDatawrite(data[0].result);\n      });\n  };\n  useEffect(() => {\n    getVendorList();\n  }, [datawrite]);\n\n  const saveTargetDetails = () => {\n    // const modifiedData = serTargetObj.length === 0;\n    // if (modifiedData) {\n\n    axios\n      .post(\n        baseUrl +\n          `/SalesMS/software/saveSWTargets?loggedUserId=${loggedUserId}&reportRunId=${serTargetData.reportRunId}`,\n        serTargetObj\n      )\n      .then((resp) => {\n        getData1();\n      })\n      .catch((err) => {\n        // Handle error\n        console.log(err);\n      });\n    // // } else {\n    // //   // ...\n    // //   setErrorMessage(true);\n    // //   setTimeout(() => {\n    // //     setErrorMessage(false);\n    // //   }, 3000);\n    // }\n  };\n\n  // ----------------table renderer-------------------------\n  const clickExpandcols = (quartr) => {\n    setcolexpanded((prevState) => {\n      return prevState.includes(quartr)\n        ? prevState.filter((item) => item !== quartr)\n        : [...prevState, quartr];\n    });\n  };\n\n  const clickRowExpand = (exe) => {\n    if (exe === \"Summary\") {\n      setexpanded((prevState) => {\n        return prevState.length === allexe.length ? [] : allexe;\n      });\n    } else {\n      setexpanded((prevState) => {\n        return prevState.includes(exe)\n          ? prevState.filter((item) => item !== exe)\n          : [...prevState, exe];\n      });\n    }\n  };\n  const onSerTargetEnter = (e, i) => {\n    const { value, id } = e.target;\n    const newData = [...prevState.data];\n    newData[i][keys] = value;\n    setSerTargetData({ ...serTargetData, data: newData });\n  };\n\n  let inputdata = \"0\";\n  const upddateSertargetData = (\n    e,\n    pAtt,\n    i,\n    executive,\n    targetCat,\n    targetCatId,\n    keyAttr\n  ) => {\n    let toBeUpdatedSerTarget = { ...serTargetData };\n    let data = toBeUpdatedSerTarget.data;\n    const { value, id } = e.target;\n    inputdata = value;\n    const quarGrp = e.target.getAttribute(\"data-qua\");\n    const year = id.split(\"_\")[0];\n    const quarter = id.split(\"_\")[1];\n    const quarChecker =\n      quarter === \"Q1\" ||\n      quarter === \"Q2\" ||\n      quarter === \"Q3\" ||\n      quarter === \"Q4\"\n        ? \"quar\"\n        : \"month\";\n    // Clone the object at the specified index\n    const updatedData = { ...data[i] };\n    updatedData[id] = value;\n\n    // Update the object at the specified index in the original data array\n    data[i] = updatedData;\n    const keysData =\n      \"id,executive,execStatus,lvl,count,targetCat,targetCatId,name,isEdit,keyAttr,parentAttr,isActive,2023_Q2_target,2022_07_01_target,2022_08_01_target,2022_09_01_target,2023_Q3_target,2022_10_01_target,2022_11_01_target,2022_12_01_target,2023_Q4_target,2023_01_01_target,2023_02_01_target,2023_03_01_target,2024_Q1_target,2023_04_01_target,2023_05_01_target,2023_06_01_target,total_target,\";\n    const keysDataArr = keysData?.split(\",\");\n    const searchIndex = keysDataArr.findIndex((data) => data === id);\n    let splitId = id.split(\"_\");\n    let months = null;\n\n    switch (splitId[1]) {\n      case \"Q1\":\n        months = [4, 5, 6];\n        break;\n      case \"Q2\":\n        months = [7, 8, 9];\n        break;\n\n      case \"Q3\":\n        months = [10, 11, 12];\n        break;\n\n      case \"Q4\":\n        months = [1, 2, 3];\n        break;\n\n      default:\n        break;\n    }\n    let currIndexKeys = Object.keys(data[i]);\n    let finalKey = [];\n\n    if (months != null) {\n      for (let i = 0; i < months.length; i++) {\n        if ((\"\" + months[i]).length == 1) {\n          months[i] = \"_0\" + months[i] + \"_01_\" + splitId[2];\n        }\n      }\n      months.map((ele) => {\n        let ky = currIndexKeys.filter((d) => d.includes(ele));\n        finalKey.push(ky);\n      });\n    }\n    const exeSumIndex = data.findIndex((element) => element.keyAttr === pAtt);\n    if (quarChecker === \"quar\") {\n      let total = 0;\n      Object.keys(data[i]).forEach((d) => {\n        if (d.includes(\"Q\")) {\n          total = total + parseInt(data[i][d]);\n        }\n      });\n      data[i][\"total_target\"] = total;\n      let execName = data[i][\"executive\"];\n      let topCount = data\n        .filter((d) => d.executive == execName)\n        .filter((d, i) => i > 0)\n        .map((d) => d[id])\n        .reduce((acc, curr) => parseInt(acc) + parseInt(curr), 0);\n      let totalTargetsubCountCust = data\n        .filter((d) => d.executive == execName)\n        .filter((d, i) => i > 0)\n        .map((d) => d[\"total_target\"])\n        .reduce((acc, curr) => parseInt(acc) + parseInt(curr), 0);\n      let summaryQuarterCount = data\n        .filter((d) => d.lvl == 2)\n        .map((d) => d[id])\n        .reduce((acc, curr) => parseInt(acc) + parseInt(curr), 0);\n      let totalTargetTopCount = data\n        .filter((d) => d.lvl == 2)\n        .map((d) => d[\"total_target\"])\n        .reduce((acc, curr) => parseInt(acc) + parseInt(curr), 0);\n      data[exeSumIndex][id] = topCount;\n      data[exeSumIndex][\"total_target\"] = totalTargetsubCountCust;\n      data[1][\"total_target\"] = totalTargetTopCount;\n      data[1][id] = summaryQuarterCount;\n\n      var monVal = Math.floor(value / 3);\n      data[i][finalKey[0]] = monVal;\n      data[i][finalKey[1]] = monVal;\n      data[i][finalKey[2]] = monVal + (value % 3);\n\n      let monthOneSummaryCount = data\n        .filter((d) => d.lvl == 2)\n        .map((d) => d[finalKey[0]])\n        .reduce((acc, curr) => parseInt(acc) + parseInt(curr), 0);\n      let monthTwoSummaryCount = data\n        .filter((d) => d.lvl == 2)\n        .map((d) => d[finalKey[1]])\n        .reduce((acc, curr) => parseInt(acc) + parseInt(curr), 0);\n      let monthThreeSummaryCount = data\n        .filter((d) => d.lvl == 2)\n        .map((d) => d[finalKey[2]])\n        .reduce((acc, curr) => parseInt(acc) + parseInt(curr), 0);\n\n      data[1][finalKey[0]] = monthOneSummaryCount;\n      data[1][finalKey[1]] = monthTwoSummaryCount;\n      data[1][finalKey[2]] = monthThreeSummaryCount;\n\n      let monthOneTopCount = data\n        .filter((d) => d.executive == execName)\n        .filter((d, i) => i > 0)\n        .map((d) => d[finalKey[0]])\n        .reduce((acc, curr) => parseInt(acc) + parseInt(curr), 0);\n      let monthTwoTopCount = data\n        .filter((d) => d.executive == execName)\n        .filter((d, i) => i > 0)\n        .map((d) => d[finalKey[1]])\n        .reduce((acc, curr) => parseInt(acc) + parseInt(curr), 0);\n      let monthThreeTopCount = data\n        .filter((d) => d.executive == execName)\n        .filter((d, i) => i > 0)\n        .map((d) => d[finalKey[2]])\n        .reduce((acc, curr) => parseInt(acc) + parseInt(curr), 0);\n\n      data[exeSumIndex][finalKey[0]] = monthOneTopCount;\n      data[exeSumIndex][finalKey[1]] = monthTwoTopCount;\n      data[exeSumIndex][finalKey[2]] = monthThreeTopCount;\n    } else if (quarChecker === \"month\") {\n      let q1months = [4, 5, 6];\n      let q2months = [7, 8, 9];\n      let q3months = [10, 11, 12];\n      let q4months = [1, 2, 3];\n      let date = null;\n      let q = e.target.id;\n      let array = q.split(\"_\");\n      let month = array[1];\n      let quarters;\n      if (q1months.includes(+month)) {\n        quarters = \"Q1\";\n        date = q1months;\n      } else if (q2months.includes(+month)) {\n        quarters = \"Q2\";\n        date = q2months;\n      } else if (q3months.includes(+month)) {\n        quarters = \"Q3\";\n        date = q3months;\n      } else if (q4months.includes(+month)) {\n        quarters = \"Q4\";\n        date = q4months;\n      }\n      let Qualtertotal = 0;\n      let quaterId = null;\n      Object.keys(data[i]).forEach((d) => {\n        if (\n          (d.includes(0) ||\n            d.includes(1) ||\n            d.includes(2) ||\n            d.includes(3) ||\n            d.includes(4) ||\n            d.includes(5) ||\n            d.includes(6) ||\n            d.includes(7) ||\n            d.includes(8) ||\n            d.includes(9)) &&\n          !d.includes(\"Q\")\n        ) {\n          let array = d.split(\"_\");\n          let valueAtIndex1 = array[1];\n          let result = valueAtIndex1.startsWith(0)\n            ? valueAtIndex1.substring(1)\n            : valueAtIndex1;\n          if (result != null && date?.includes(+result)) {\n            Qualtertotal = Qualtertotal + parseInt(data[i][d]);\n          }\n        }\n        if (d.includes(quarters)) {\n          quaterId = d;\n        }\n      });\n      data[i][quaterId] = Qualtertotal;\n\n      let total = 0;\n      Object.keys(data[i]).forEach((d) => {\n        if (d.includes(\"Q\")) {\n          total = total + parseInt(data[i][d]);\n        }\n      });\n      data[i][\"total_target\"] = total;\n      let execName = data[i][\"executive\"];\n      let splitedExecName = data[i][\"executive\"].split(\"^&\");\n\n      let montopCount = data\n        .filter((d) => d.executive == execName)\n        .filter((d, i) => i > 0)\n        .map((d) => d[id])\n        .reduce((acc, curr) => parseInt(acc) + parseInt(curr), 0);\n      let montotalTargetTopCount = data\n        .filter((d) => d.lvl == 2)\n        .map((d) => d[\"total_target\"])\n        .reduce((acc, curr) => parseInt(acc) + parseInt(curr), 0);\n      let montotalTargetsubCount = data\n        .filter((d) => d.executive?.includes(splitedExecName[0]))\n        .filter((d) => d.lvl > 2)\n        .map((d) => d[\"total_target\"])\n        .reduce((acc, curr) => parseInt(acc) + parseInt(curr), 0);\n      let montotalTargetsubCountCust = data\n        .filter((d) => d.executive == execName)\n        .filter((d, i) => i > 0)\n        .map((d) => d[\"total_target\"])\n        .reduce((acc, curr) => parseInt(acc) + parseInt(curr), 0);\n      let monsummaryQuarterCount = data\n        .filter((d) => d.lvl == 2)\n        .map((d) => d[id])\n        .reduce((acc, curr) => parseInt(acc) + parseInt(curr), 0);\n\n      data[exeSumIndex][id] = montopCount;\n      data[exeSumIndex][\"total_target\"] = montotalTargetsubCountCust;\n      data[1][\"total_target\"] = montotalTargetTopCount;\n      data[1][id] = monsummaryQuarterCount;\n\n      data[1][quaterId] = data\n        .filter((d) => d.lvl == 2)\n        .map((d) => d[quaterId])\n        .reduce((acc, curr) => parseInt(acc) + parseInt(curr), 0);\n\n      data[exeSumIndex][quaterId] = data\n        .filter((d) => d.executive == execName)\n        .filter((d, i) => i > 0)\n        .map((d) => d[quaterId])\n        .reduce((acc, curr) => parseInt(acc) + parseInt(curr), 0);\n\n      let arr = data;\n      for (let i = 0; i < arr.length; i++) {\n        if (arr[i][\"executive\"] == splitedExecName[0] + \"^&  \") {\n          arr[i][\"total_target\"] = montotalTargetsubCount;\n        }\n      }\n      console.log(arr);\n    }\n    const newState = { ...serTargetData, data: data };\n    setSerTargetData({ ...serTargetData, data: data });\n    //============To Post The data ==================\n    const targetDataArray = [];\n    const parts = targetCatId.split(\"-\");\n\n    // Find the part that starts with a number\n    let targetCatId1 = \"\";\n    for (const part of parts) {\n      if (!isNaN(parseInt(part))) {\n        targetCatId1 = part;\n        break;\n      }\n    }\n    const createTargetData = (month, value) => ({\n      executiveId: executive,\n      month,\n      typ: \"target\",\n      val: parseInt(value),\n      targetCatId: parseInt(targetCatId1),\n      reportRunId: serTargetData.reportRunId,\n    });\n\n    if (quarChecker === \"quar\") {\n      const monthsMap = {\n        Q1: [\n          `${parseInt(year) - 1}-04-01`,\n          `${parseInt(year) - 1}-05-01`,\n          `${parseInt(year) - 1}-06-01`,\n        ],\n        Q2: [\n          `${parseInt(year) - 1}-07-01`,\n          `${parseInt(year) - 1}-08-01`,\n          `${parseInt(year) - 1}-09-01`,\n        ],\n        Q3: [\n          `${parseInt(year) - 1}-10-01`,\n          `${parseInt(year) - 1}-11-01`,\n          `${parseInt(year) - 1}-12-01`,\n        ],\n        Q4: [\n          `${parseInt(year)}-01-01`,\n          `${parseInt(year)}-02-01`,\n          `${parseInt(year)}-03-01`,\n        ],\n      };\n      const months = monthsMap[quarter];\n      const valuePerMonth = Math.floor(value / 3);\n\n      months.forEach((month, index) => {\n        const targetValue =\n          valuePerMonth + (index === months.length - 1 ? value % 3 : 0);\n        targetDataArray.push(createTargetData(month, targetValue));\n      });\n    } else if (quarChecker === \"month\") {\n      const month = year + \"_\" + id.split(\"_\")[1] + \"_01\";\n      targetDataArray.push(createTargetData(month, value));\n    }\n    // setSerTargetObj({ ...serTargetObj, data: targetDataArray });\n    setSerTargetObj((prevState) => {\n      // Check if prevState is defined and has a \"data\" property\n      if (prevState && prevState.data) {\n        // Concatenate the existing \"data\" array with targetDataArray\n        prevState.data = [...prevState.data, ...targetDataArray];\n        return prevState;\n      } else {\n        // If prevState is not defined or doesn't have a \"data\" property, create a new object\n        return { data: [...targetDataArray] };\n      }\n    });\n  };\n\n  const onSerTargetUpdate = (\n    e,\n    pAtt,\n    i,\n    executive,\n    targetCat,\n    targetCatId,\n    keyAttr\n  ) => {\n    upddateSertargetData(\n      e,\n      pAtt,\n      i,\n      executive,\n      targetCat,\n      targetCatId,\n      keyAttr\n    );\n  };\n\n  useEffect(() => {\n    setSerTargetData(JSON.parse(JSON.stringify(tableData)));\n  }, [tableData]);\n\n  const [table, settable] = useState([]);\n\n  useEffect(() => {\n    const nonIntegersvals = [\"executive\", \"name\"];\n    const expandableCols = [\"total_target\"];\n    const horizontalcolexpands = [\"target\", \"call\"];\n    let headspanner = \"\";\n    // toggler =\n    //   data[\"lvl\"] === 2 || data[\"lvl\"] === 3\n    //     ? toggler\n    //     : expanded.includes(data.executive)\n    //     ? 1\n    //     : 0;\n    const setTargetDataTemp = { ...serTargetData };\n    const table1 =\n      Object.keys(setTargetDataTemp).length > 0 &&\n      setTargetDataTemp?.data?.map((data, i) => {\n        let table = [];\n        const conditions = [\n          \"id\",\n          \"execStatus\",\n          \"count\",\n          \"isActive\",\n          \"isEdit\",\n          \"keyAttr\",\n          \"lvl\",\n          \"parentAttr\",\n          \"targetCat\",\n          \"targetCatId\",\n          \"executive\",\n        ];\n        const keysArray = filteredKeysArray;\n        keysArray.forEach((keys) => {\n          if (keys.includes(\"Q\")) {\n            coltoggler = colexpanded.includes(keys.split(\"_\")[1]) ? 1 : 0;\n          }\n          table.push(\n            data.id < 0 ? (\n              <th\n                className={\n                  (keys.split(\"_\")[3] === \"targetFirstTh\"\n                    ? \"\"\n                    : keys.split(\"_\")[2]) + \" targetth targetFirstTh\"\n                }\n                key={keys}\n                colSpan={data[keys]?.split(\"^&\")[2]}\n                rowSpan={data[keys]?.split(\"^&\")[1]}\n                style={{\n                  display:\n                    coltoggler === 0 &&\n                    horizontalcolexpands?.some((item) =>\n                      keys?.includes(item)\n                    ) &&\n                    !(keys?.includes(\"Q\") || keys?.includes(\"total\"))\n                      ? \"none\"\n                      : \"\",\n                  textAlign: \"center\",\n                }}\n                title={data[keys].split(\"^\")[0]}\n              >\n                {data.id === -2 && data[keys]?.includes(\"Quart\") ? (\n                  <span\n                    onClick={() => {\n                      clickExpandcols(keys.split(\"_\")[1]);\n                    }}\n                  >\n                    {colexpanded.includes(keys.split(\"_\")[1]) ? (\n                      <div title={data[keys].split(\"^\")[0]}>\n                        <FaChevronCircleLeft\n                          size={\"0.8em\"}\n                          title=\"Hide Details\"\n                          style={{ cursor: \"pointer\", float: \"right\" }}\n                        />\n                        {data[keys].split(\"^\")[0]}\n                      </div>\n                    ) : (\n                      <div title={data[keys].split(\"^\")[0]}>\n                        <FaChevronCircleRight\n                          size={\"0.8em\"}\n                          title=\"Show Details\"\n                          style={{ cursor: \"pointer\", float: \"right\" }}\n                        />\n                        {data[keys].split(\"^\")[0]}\n                      </div>\n                    )}\n                  </span>\n                ) : (\n                  <span> {data[keys]?.split(\"^\")[0]}</span>\n                )}\n              </th>\n            ) : (\n              <td\n                key={keys}\n                className={\n                  keys.includes(\"executive\")\n                    ? \"executive\"\n                    : keys.includes(\"Q\")\n                    ? keys.split(\"_\")[1][1] % 2 == 0\n                      ? \"even\"\n                      : \"odd\"\n                    : keys.includes(\"total\")\n                    ? \"total\"\n                    : keys.includes(\"0\")\n                    ? keys.split(\"_\")[1] % 2 == 0\n                      ? \"innereven\"\n                      : \"innerodd\"\n                    : keys.includes(\"lvl\" != 2)\n                    ? \"summer\"\n                    : \"winter\"\n                }\n                title={data[keys]}\n                style={{\n                  display:\n                    coltoggler === 0 &&\n                    horizontalcolexpands.some((item) => keys.includes(item)) &&\n                    !(keys.includes(\"Q\") || keys.includes(\"total\"))\n                      ? \"none\"\n                      : \"\",\n                  // textAlign: keys.split(\"_\")[1] % 2 !== 0 ? \"end\": \"\"\n                  textAlign: typeof data[keys] === \"number\" ? \"right\" : \"\",\n                }}\n              >\n                {nonIntegersvals.includes(keys) ? (\n                  <Fragment>\n                    {data[\"lvl\"] == 2 || data[\"name\"] === \"summary\" ? (\n                      <td\n                        className=\"ellipsis oddd summaryTraget\"\n                        data-toggle=\"tooltip\"\n                        style={{ fontWeight: \"bold\" }}\n                        title={data[keys].toLocaleString(\"en-IN\")}\n                      >\n                        {isNaN(parseFloat(data[keys]))\n                          ? data[keys]\n                          : parseFloat(data[keys]).toLocaleString(\"en-US\")}\n                      </td>\n                    ) : (\n                      <div>\n                        <span>{icons[data[\"execStatus\"]]}</span>{\" \"}\n                        {/* <span>{data[keys]}</span> */}\n                        {data.keyAttr !== \"summary\" && (\n                          <MdOutlineEditNote\n                            style={{ float: \"right\", cursor: \"pointer\" }}\n                            title=\"Notes\"\n                            size={\"1.5em\"}\n                            onClick={() => {\n                              setOpenPopup(true);\n                              setRowData(data);\n                            }}\n                          />\n                        )}\n                        <span\n                          className=\"reddd\"\n                          style={{ fontWeight: \"bold\" }}\n                          title={data[keys].toLocaleString(\"en-IN\")}\n                        >\n                          {isNaN(parseFloat(data[keys]))\n                            ? data[keys]\n                            : parseFloat(data[keys]).toLocaleString(\"en-US\")}\n                        </span>\n                      </div>\n                    )}\n                  </Fragment>\n                ) : (\n                  <Fragment>\n                    {data.lvl === 2 &&\n                    keys !== \"total_target\" &&\n                    accessData === 1000 ? (\n                      <input\n                        type=\"text\"\n                        id={keys}\n                        // defaultValue={\n                        //   data[keys].match(/\\d+/)\n                        //     ? parseInt(data[keys]).toLocaleString(\"en-IN\")\n                        //     : data[keys]\n                        // }\n\n                        value={serTargetData.data[i][keys]}\n                        onChange={(e) => {\n                          const inputValue =\n                            e.target.value.trim() === \"\" ? \"0\" : e.target.value;\n                          const newData = [...serTargetData.data]; // Create a copy of the data array\n                          newData[i][keys] = inputValue; // Update the specific value\n                          setSerTargetData({ ...serTargetData, data: newData });\n                          setTargetId(data.targetCatId);\n                          // Update the state\n                        }}\n                        onBlur={(e) => {\n                          onSerTargetUpdate(\n                            e,\n                            data.parentAttr,\n                            i,\n                            data.id,\n                            data.targetCatId,\n                            // data.targetCat,\n                            data.keyAttr\n                          );\n                          onSerTargetEnter(e, i);\n                          setTargetId(data.targetCatId);\n                        }}\n                        style={{ textAlign: \"right\" }}\n                      ></input>\n                    ) : (\n                      <span>\n                        {\" \"}\n                        {isNaN(parseFloat(data[keys]))\n                          ? data[keys]\n                          : parseFloat(data[keys]).toLocaleString(\"en-US\")}\n                      </span>\n                    )}\n                  </Fragment>\n                )}\n              </td>\n            )\n          );\n          headspanner = keys;\n        });\n        return <tr key={data.id}>{table} </tr>;\n      });\n    settable(table1);\n  }, [serTargetData, colexpanded]);\n\n  useEffect(() => {\n    console.log(serTargetData);\n  }, [serTargetData]);\n\n  useEffect(() => {}, [table]);\n  const resetClickHandler = () => {\n    let emptyClassList = document.getElementsByClassName(\"empty\");\n    for (let i = 0; i < emptyClassList.length; i++) {\n      let splitData = emptyClassList[i].id.split(\"__\");\n      let row = parseInt(splitData[1]);\n      let col = splitData[2];\n      emptyClassList[i].value = serTargetData.data[row][col];\n    }\n    setSerTargetData(tableData);\n    setSerTargetObj([]);\n  };\n  const [openSave, setOpenSave] = useState(false);\n  function SavePopup(props) {\n    const { openSave, setOpenSave, saveTargetDetails } = props;\n    return (\n      <div className=\"reviewLogDeletePopUp\">\n        <CModal size=\"sm\" visible={openSave} onClose={() => setOpenSave(false)}>\n          <CModalHeader className=\"\">\n            <CModalTitle>\n              <span className=\"\">Save Targets</span>\n            </CModalTitle>\n          </CModalHeader>\n          <CModalBody>\n            Targets will change with new values provided, Are you sure ?\n            <div className=\"row\" style={{ marginTop: \"10px\" }}>\n              <button\n                style={{ marginLeft: \"95px\" }}\n                type=\"submit\"\n                className=\"btn btn-primary col-2\"\n                onClick={() => {\n                  saveTargetDetails();\n                  setOpenSave(false);\n                }}\n              >\n                <span style={{ paddingLeft: \"6px\" }}>Yes</span>\n              </button>\n              <button\n                style={{ marginLeft: \"20px\" }}\n                type=\"submit\"\n                className=\"btn btn-primary col-2\"\n                onClick={() => {\n                  setOpenSave(false);\n                }}\n              >\n                <span style={{ paddingLeft: \"6px\" }}>No</span>\n              </button>\n            </div>\n          </CModalBody>\n        </CModal>\n      </div>\n    );\n  }\n\n  // Define a custom sorting function to sort based on quarters\n\n  const handleOnExport = () => {\n    const excludeProperties = [\n      \"id\",\n      \"execStatus\",\n      \"lvl\",\n      \"count\",\n      \"isEdit\",\n      \"keyAttr\",\n      \"parentAttr\",\n      \"isActive\",\n    ];\n    const data = tableData.data;\n    const workbook = new ExcelJS.Workbook();\n    const worksheet = workbook.addWorksheet(\"SalesTarget\");\n\n    const dynamicDateKeys = Object.keys(data[0]).filter((key) =>\n      key.includes(\"_target\")\n    );\n\n    const order = [\n      \"Q1\",\n      \"04\",\n      \"05\",\n      \"06\",\n      \"Q2\",\n      \"07\",\n      \"08\",\n      \"09\",\n      \"Q3\",\n      \"10\",\n      \"11\",\n      \"12\",\n      \"Q4\",\n      \"01\",\n      \"02\",\n      \"03\",\n    ];\n\n    const sortedDynamicDateKeys = dynamicDateKeys.sort((a, b) => {\n      const [aPart1, aPart2] = a.split(\"_\")[1].split(\"-\");\n      const [bPart1, bPart2] = b.split(\"_\")[1].split(\"-\");\n      const aIndex = order.indexOf(aPart1) * 100 + order.indexOf(aPart2);\n      const bIndex = order.indexOf(bPart1) * 100 + order.indexOf(bPart2);\n      return aIndex - bIndex;\n    });\n\n    const totalTargetIndex = sortedDynamicDateKeys.indexOf(\"total_target\");\n\n    if (totalTargetIndex !== -1) {\n      sortedDynamicDateKeys.splice(totalTargetIndex, 1);\n      sortedDynamicDateKeys.push(\"total_target\");\n    }\n\n    const headerRow = worksheet.addRow([\n      \"Sales Executive\",\n      ...sortedDynamicDateKeys,\n    ]);\n\n    // Add data rows\n    // Add data rows\n    for (let i = 1; i < data.length; i++) {\n      const rowData = data[i];\n      const filteredItem = Object.fromEntries(\n        Object.entries(rowData).filter(\n          ([key]) => !excludeProperties.includes(key)\n        )\n      );\n\n      const values = [\n        filteredItem.name,\n        ...sortedDynamicDateKeys.map((dateKey) => filteredItem[dateKey]),\n      ];\n\n      const row = worksheet.addRow(values);\n\n      // Adjust alignment for all columns except the first one (index 1)\n      for (\n        let colIndex = 2;\n        colIndex <= sortedDynamicDateKeys.length + 1;\n        colIndex++\n      ) {\n        const column = worksheet.getColumn(colIndex);\n        column.alignment = { horizontal: \"right\" };\n      }\n    }\n\n    const boldRow = [1];\n    boldRow.forEach((index) => {\n      const row = worksheet.getRow(index);\n      row.font = { bold: true };\n    });\n\n    // Save the workbook\n    workbook.xlsx.writeBuffer().then((buffer) => {\n      saveAs(new Blob([buffer]), \"SalesTarget.xlsx\");\n    });\n  };\n\n  return (\n    <div className=\"col-lg-12 col-md-12 col-sm-12  customCard\">\n      <div className=\"col-lg-12 col-md-12 col-sm-12 no-padding targetTablePrnt scrollit \">\n        <RiFileExcel2Line\n          size=\"1.5em\"\n          title=\"Export to Excel\"\n          style={{\n            color: \"green\",\n            float: \"right\",\n            marginTop: \"24px\",\n            fontSize: \"16px\",\n          }}\n          cursor=\"pointer\"\n          onClick={handleOnExport}\n        />\n        <span>\n          <b style={{ color: \"#297ab0\", fontSize: \"15px\" }}>Targets</b>\n        </span>\n\n        <div\n          className=\"mainTargetTable darkHeader\"\n          style={{ width: \"94%\", maxHeight: \"400px\", overflow: \"auto\" }}\n        >\n          <table\n            className=\"table table-bordered table-striped targetTable scrollit \"\n            style={{ width: \"auto\" }}\n          >\n            <thead>{table}</thead>\n          </table>\n        </div>\n      </div>\n      <div className=\"col-md-12 col-sm-12 col-xs-12 no-padding center\">\n        <div className=\"clearfix\" style={{ height: \"25px\" }}></div>\n\n        {buttonAction && accessData === 1000 ? (\n          <div className=\"col-md-12 col-sm-12 col-xs-12 no-padding btn-container center my-3 mb-2\">\n            {/* <div className=\"clearfix\" style={{ height: '25px' }}></div> */}\n\n            <button\n              type=\"button\"\n              className=\"btn btn-primary\"\n              // onClick={saveTargetDetails}\n              onClick={() => setOpenSave(true)}\n            >\n              <FaSave />\n              Save{\" \"}\n            </button>\n            <button\n              type=\"button\"\n              className=\"btn btn-primary\"\n              // onClick={getInsideSalesProgressDetails}\n              onClick={() => {\n                resetClickHandler();\n              }}\n            >\n              <FiRotateCcw style={{ color: \"white\" }} />\n              Reset{\" \"}\n            </button>\n          </div>\n        ) : (\n          \"\"\n        )}\n        {/* <button type=\"button\" className=\"btn btn-primary\" onClick={getInsideSalesProgressDetails} ><BiReset />Reset </button> */}\n      </div>\n      {openPopup ? (\n        <DisplayPopUpEditNote\n          openPopup={openPopup}\n          accessData={accessData}\n          setOpenPopup={setOpenPopup}\n          Vdata={tableData}\n          rowData={rowData}\n          popupValue={popupValue}\n        />\n      ) : (\n        \"\"\n      )}\n      {openSave ? (\n        <SavePopup\n          openSave={openSave}\n          setOpenSave={setOpenSave}\n          saveTargetDetails={saveTargetDetails}\n        />\n      ) : (\n        \"\"\n      )}\n    </div>\n  );\n}\n\nexport default tableRendere;\n","import DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport React, { useEffect, useState, useRef } from \"react\";\nimport axios from \"axios\";\nimport { AiFillWarning } from \"react-icons/ai\";\nimport { FaChevronCircleUp, FaChevronCircleDown } from \"react-icons/fa\";\nimport Loader from \"../Loader/Loader\";\nimport { CCollapse } from \"@coreui/react\";\nimport GlobalValidation from \"../ValidationComponent/GlobalValidation\";\nimport { FaCaretDown } from \"react-icons/fa\";\nimport moment from \"moment\";\nimport { environment } from \"../../environments/environment\";\nimport { FaSearch } from \"react-icons/fa\";\nimport SelectSEDialogBox from \"../SelectSE/SelectSEDialogBox\";\nimport { MultiSelect } from \"react-multi-select-component\";\nimport { BiCheck } from \"react-icons/bi\";\nimport TargetTable from \"./TargetTable.js\";\nimport ScreenBreadcrumbs from \"../Common/ScreenBreadcrumbs\";\nimport { useDispatch } from \"react-redux\";\nimport {\n  setReportRunIdRedux,\n  updateQuaterDate,\n  updatedOwnerDivisions,\n  updatedSalesExectiveId,\n  updatedVedorNameWithId,\n  updatedVendorId,\n} from \"../../reducers/SelectedSEReducer\";\nimport { useSelector } from \"react-redux\";\nimport GlobalHelp from \"../PrimeReactTableComponent/GlobalHelp\";\nimport SavedSearchGlobal from \"../PrimeReactTableComponent/SavedSearchGlobal\";\nimport { useLocation } from \"react-router-dom\";\nexport default function SoftwareSearchFilters({\n  softwareData,\n  setTargetReviewsData,\n  setTableFlag,\n  setSelector,\n  showDetails,\n  setShowDetails,\n  setSoftwareData,\n  setWowDisplay,\n  fdate,\n  setFdate,\n  reportRunId,\n  setreportRunId,\n  setwowtype,\n  qdate,\n  setQdate,\n  setTargetDataKeys,\n  viewDisplay,\n  setViewDisplay,\n  wowDate,\n  setWOwDate,\n  setData,\n  data,\n  tableData,\n  setTableData,\n  headerData,\n  setHeaderData,\n  setViewSlesId,\n}) {\n  const location = useLocation();\n  const searchParams = new URLSearchParams(location.search);\n  const id = searchParams.get(\"id\");\n  const [p1data, setp1Data] = useState([]);\n  const [selectedp1, setSelectedp1] = useState([]);\n  const [resetVendor, setResetVendor] = useState([]);\n  const [vendor1, setVendor1] = useState(\n    \"AllSight,AWS,Azure,BIGID,Blue Whale,Boomi,Breakwater,Cleanslate,Collibra,Cyberark,Data Bricks,Data Sentinel,Data.World,DataRobot,dbt Labs,Delinea,Denodo,DiscoverAlpha,EDB,Evolveware,HCL America Inc,IBM,IBM - IM&A,IBM - SI,IBM – AWS,IBM – Azure,IBM – SI,IM&A Other SW,IM&A-Data Fabric,ImageAccess,Informatica,Intellective/Vega,Jedox,Manta,Manta MS Purview Bridge,Mendix,Meta Integration (Miti),Microsoft,MongoDB,MQAttach,MuleSoft,myInvenio,New Relic,Okta,OneTrust,Prolifics - Effecta/SLA/BA360,Prolifics - PPMweb,Qlik,Quest,RedHat,Rocket,Senzing,SI - Other SW,Snowflake,SoftwareAG,SWOne,Talend,Testing Other (HP),Tricentis,UiPath,Unassigned\"\n  );\n\n  const [filterData, setFilterData] = useState([]);\n  const FilterData = () => {\n    axios({\n      method: \"get\",\n      url:\n        baseUrl +\n        `/dashboardsms/savedsearch/FiltersData?saved_search_id=${\n          id === null ? 0 : id\n        }`,\n    }).then(function (res) {\n      const getData = res.data;\n      setFilterData(getData);\n    });\n  };\n  useEffect(() => {\n    FilterData();\n  }, []);\n  const [softwarePayload, setSoftwarePayload] = useState({});\n  useEffect(() => {\n    setSoftwarePayload(() => {\n      if (id != null) {\n        return {\n          mode: filterData?.mode,\n          from: filterData.from,\n          duration: filterData?.duration,\n          vendors: filterData.vendors,\n          divisions: filterData.divisions,\n          // executives: salesSE,\n          executives: filterData.executives,\n          salesId: filterData.salesId,\n          isActive: filterData.isActive,\n          isIndividual: filterData.isIndividual,\n          type: filterData?.type,\n          key: \"1662974432015\",\n          selectExecs: filterData.selectExecs,\n          saveSE: \"true\",\n          optType: filterData.optType,\n          quarter: filterData.quarter,\n          status: filterData.status,\n          duration2: filterData.duration2,\n          measures: filterData.measures,\n          monthsel: filterData.monthsel,\n          viewByTime: filterData.viewByTime,\n          fyear: filterData.fyear,\n          customers: filterData.customers,\n          prospects: filterData.prospects,\n          practices: filterData.practices,\n          countries: filterData.countries,\n          customerType: filterData.customerType,\n          summary: filterData.summary,\n          showBy: filterData.showBy,\n          aelocation: filterData.aelocation,\n          engComp: filterData.engComp,\n          Divisions: filterData.Divisions,\n          accOwner: filterData.accOwner,\n          newCust: filterData.newCust,\n          accType: filterData.accType,\n        };\n      } else {\n        return {\n          mode: \"view\",\n          from: moment(quarterdate).format(\"YYYY-MM-DD\"),\n          duration: duration,\n          vendors: vendor1,\n          divisions: division,\n          // executives: salesSE,\n          executives: salesEx == 1 ? executiveIdPayload : salesEx,\n          salesId: salesexecutiveid,\n          isActive: \"true\",\n          isIndividual:\n            isIndividualChecked.length == 0 ? \"false\" : isIndividualChecked,\n          type: \"view\",\n          key: \"1662974432015\",\n          selectExecs: Salesexecutivename,\n          saveSE: \"true\",\n          optType: -1,\n          quarter: -1,\n          status: -1,\n          duration2: -1,\n          measures: -1,\n          monthsel: -1,\n          viewByTime: -1,\n          fyear: -1,\n          customers: -1,\n          prospects: -1,\n          practices: -1,\n          countries: -1,\n          customerType: -1,\n          summary: -1,\n          showBy: -1,\n          aelocation: -1,\n          engComp: -1,\n          Divisions: -1,\n          accOwner: -1,\n          newCust: -1,\n          accType: -1,\n        };\n      }\n    });\n  }, [filterData]);\n  console.log(filterData);\n  console.log(softwarePayload);\n\n  function formatDate(date) {\n    const options = {\n      weekday: \"short\",\n      day: \"numeric\",\n      month: \"short\",\n      // Change to \"numeric\" to remove leading zeros\n      year: \"numeric\",\n    };\n    // const formattedDate = date\n    //   .toLocaleString(\"en-IN\", options)\n    //   .replace(\",\", \"\");\n    // return `${formattedDate} 00:00:00 GMT+0530 (India Standard Time)`;\n    const formattedDate = date?.toLocaleString(\"en-IN\", options);\n    return `${formattedDate} 00:00:00 GMT+0530 (India Standard Time)`;\n  }\n\n  useEffect(() => {\n    if (id != null) {\n      const updateAction = filterData?.type;\n      const updateSalesExcetive = filterData?.executives;\n      const excludedValues = filterData?.vendors; // Trim each value\n\n      const updateVendors = p1data?.filter((item) => {\n        // Check if item.value is included in the excludedValues array\n        return excludedValues.includes(item.value);\n      });\n      const progressDataDivisions = filterData.divisions;\n      const divisionsToFilter = progressDataDivisions\n        ? progressDataDivisions?.split(\",\").map(Number)\n        : [];\n      const updatedOwnerDivisions = sFOwnerDivisionsDropdown.filter(\n        (values) => {\n          return divisionsToFilter?.includes(values.value);\n        }\n      );\n      if (filterData.from !== undefined && filterData.from !== \"\") {\n        const updatequarter = new Date(filterData.from);\n        updatequarter.setMonth(updatequarter.getMonth() - 3);\n        updatequarter.setFullYear(updatequarter.getFullYear() + 1);\n        setStartDate(updatequarter);\n      }\n      const updateDuration = softwarePayload.duration;\n      const integerValues = updatedOwnerDivisions.map((item) =>\n        parseInt(item.value)\n      );\n      const commaSeparatedValues = filterData.divisions;\n      const vendorvalues = filterData.vendors;\n      const fromDateView = filterData.from;\n      if (filterData.type != \"target\") {\n        setVendor1(vendorvalues);\n        setDivision(commaSeparatedValues);\n        setDuration(updateDuration);\n        setSelectedp1(updateVendors);\n      }\n      if (filterData.type == \"view\") {\n        setQuarterDate(fromDateView);\n      }\n      const showby = filterData.showBy;\n      const financeYearTarget = filterData?.from;\n      const inputDate = filterData?.from;\n      const fiscalYearStartDate = moment(inputDate)\n        .startOf(\"year\")\n        .month(3) // April is month 3 (0-indexed)\n        .date(1); // Set the day to 1st\n      fiscalYearStartDate.subtract(1, \"years\");\n      const From = fiscalYearStartDate.format(\"YYYY-MM-DD\");\n      const finalDate = moment(financeYearTarget).format(\"ddd MMM DD YYYY\");\n      const addinst = `${finalDate} 00:00:00 GMT+0530 (India Standard Time)`;\n      const FinalDate = moment(addinst).toDate();\n      const oneYearLater = moment(FinalDate).add(1, \"year\").toDate();\n      console.log(FinalDate);\n      console.log(From);\n      if (filterData.type == \"target\") {\n        setStDate(From);\n        setSalesEx(updateSalesExcetive);\n        setFinancialYearDate(oneYearLater);\n      }\n\n      if (filterData.divisions == \"-1\") {\n        setselectesFOwnerDivison(sFOwnerDivisionsDropdown);\n      } else {\n        setselectesFOwnerDivison(updatedOwnerDivisions);\n      }\n\n      if (filterData.executives === \"-1\") {\n        const dataExActive = \"<< Active SE >>\";\n        setselectedSE(dataExActive);\n      } else if (filterData.executives === \"-3\") {\n        const dataExInactive = \"<< InActive SE >>\";\n        setselectedSE(dataExInactive);\n      } else if (filterData.executives === \"1\") {\n        const dataSelectSe = \"<< Select SE >>\";\n        setselectedSE(dataSelectSe);\n      } else if (filterData.executives === \"-2\") {\n        const dataAllSe = \"<< All SE >>\";\n        setselectedSE(dataAllSe);\n      }\n      setActionSelector(updateAction);\n      setSelectedSEVal(updateSalesExcetive);\n      setShowByValue(showby);\n    }\n  }, [\n    id,\n    filterData?.type,\n    filterData?.executives,\n    filterData?.vendors,\n    filterData.divisions,\n    p1data,\n    filterData?.from,\n    filterData?.showBy,\n  ]);\n  useEffect(() => {\n    if (id != null) {\n      const data = filterData.type;\n      setActionSelector(data);\n    }\n  }, [id, filterData.type]);\n  const [wirteData, setWriteData] = useState([]);\n  const [salesEx, setSalesEx] = useState(-2);\n  const [division, setDivision] = useState(-1);\n  const abortController = useRef(null);\n  const baseUrl = environment.baseUrl;\n  const loggedUserId = localStorage.getItem(\"resId\");\n  const [salesSE, setSalesSE] = useState(-2);\n  const [reportId, setReportId] = useState([]);\n  const [fydata, setFydata] = useState(\"2023-04-01\");\n  const [grpId, setGrpId] = useState([]);\n  const [accessData, setAccessData] = useState([]);\n  const [financeYear, setFinanceYear] = useState([]);\n  const [targetOpen, setTargetOpen] = useState(false);\n  const [duration, setDuration] = useState(\"4\");\n  const controller = new AbortController();\n  const ref = useRef([]);\n  const dispatch = useDispatch();\n  const [viewsalesexectiveid, setViewSalesExectiveId] = useState(salesEx);\n\n  useEffect(() => {\n    setViewSalesExectiveId(formattedIds);\n  }, [salesEx]);\n\n  const [financeYears, setFinanceYears] = useState(new Date(financeYear));\n\n  const SelectSEData = useSelector(\n    (state) => state.selectedSEState.directSETreeData\n  );\n  const localSE =\n    localStorage.getItem(\"selectedSELocal\") === null\n      ? []\n      : JSON.parse(localStorage.getItem(\"selectedSELocal\"));\n\n  const isSalesPresentThenId = localSE.findIndex((obj) => obj.key);\n  const [salesexecutiveid, setsalesExecutiveId] = useState(\"\");\n  const [Salesexecutivename, setsalesExecutiveName] = useState(\"\");\n  const [salesindividualid, setSalesIndividualId] = useState(0);\n  const [salesindividualName, setSalesIndividualName] = useState(\"\");\n  useEffect(() => {\n    if (isSalesPresentThenId !== -1) {\n      const salesId = localSE[isSalesPresentThenId].id;\n      const salespersonname = localSE[isSalesPresentThenId].text + ` & Team`;\n      if (salesEx == 1) {\n        setsalesExecutiveName(salespersonname);\n        setsalesExecutiveId(salesId);\n      }\n    }\n  }, [isSalesPresentThenId, salesEx]); // Run this effect only when isSalesPresentThenId changes\n\n  const idsWithoutDirectSalesEx = localSE.map((item) => item.id);\n  const idDirectSalesEx = localSE\n    .filter((item) => item.key === \"directsalesEx\")\n    .map((item) => item.id);\n  const nameWithoutDirectSalesEx = localSE\n    .filter((item) => !item.key || item.key !== \"directsalesEx\")\n    .map((item) => item.salesPersonName);\n  const formattedIds = idsWithoutDirectSalesEx.join(\",\");\n  const formattedName = nameWithoutDirectSalesEx.join(\",\");\n  const SalesExecutiveNames = Salesexecutivename + formattedName;\n  useEffect(() => {\n    if (salesEx === 1) {\n      setSalesIndividualId(formattedIds);\n      setViewSalesExectiveId(formattedIds);\n      setSalesIndividualName(SalesExecutiveNames);\n    }\n  }, [salesEx]);\n\n  useEffect(() => {\n    dispatch(updatedSalesExectiveId(salesEx));\n  }, [salesEx]);\n\n  const isIndividualChecked = useSelector(\n    (state) => state.selectedSEState.isIndividualChecked\n  );\n  function transformObjects(data) {\n    return localSE.map((item) => {\n      if (Array.isArray(item)) {\n        const [obj] = item;\n        if (\n          obj &&\n          obj.id &&\n          obj.text &&\n          obj.type === \"fte1\" &&\n          obj.parent === \"id\"\n        ) {\n          return {\n            salesPersonName: obj.text,\n            type: obj.type,\n            id: parseInt(obj.id),\n            status: JSON.parse(obj.li_attr).sestatus || \"empActive\",\n          };\n        }\n      }\n      return item;\n    });\n  }\n\n  const generateDropdownLabel = (selectedOptions, allOptions) => {\n    const selectedValues = selectedOptions.map((option) => option.value);\n    const allValues = allOptions.map((item) => item.value);\n\n    if (selectedValues.length === allValues.length) {\n      return \"<< ALL >>\";\n    } else {\n      return selectedOptions.map((option) => option.label).join(\", \");\n    }\n  };\n\n  const transformedData = transformObjects(data);\n  const filteredData = transformedData\n    .filter((obj, index) => {\n      return index === transformedData.findIndex((o) => obj.id === o.id);\n    })\n    .filter((item) => !Array.isArray(item) || item.length === 0);\n  const idArray = transformedData.map((item) => item.id);\n  const filteredIds = idArray.filter((id) => typeof id === \"number\");\n  const updatedIds = filteredIds.map((id) =>\n    id === \"1717\" || \"3887\" || \"3887\" || \"3977\" || \"4895\" || \"4872942\"\n      ? grpId\n      : id\n  );\n  const salesPersonNames = filteredData.map((item) => {\n    if (\n      (item.salesPersonName && item.salesPersonName === \"Kirsten Craft\") ||\n      \"Sarat Addanki\" ||\n      \"Satyanarayana Bolli\" ||\n      \"Supervisor Orphans\" ||\n      \"Michelle Shuler\"\n    ) {\n      return `${item.salesPersonName}`;\n    }\n    return item.salesPersonName;\n  });\n\n  const commaSeparatedNames = salesPersonNames.join(\",\");\n  const salesPersonNamesBulk = filteredData.map((item) => {\n    if (\n      item.salesPersonName === \"Kirsten Craft\" &&\n      \"Sarat Addanki\" &&\n      \"Satyanarayana Bolli\" &&\n      \"Supervisor Orphans\" &&\n      \"Michelle Shuler\"\n    ) {\n      return `${item.salesPersonName} & team`;\n    }\n    return item.salesPersonName;\n  });\n\n  const commaSeparatedNamesBulk = salesPersonNamesBulk.join(\",\");\n  const salesPersonIds = filteredData.map((item) => item.id);\n  const commaSeparatedIds = salesPersonIds.join(\",\");\n  const [visible, setVisible] = useState(false);\n  const [loader, setLoader] = useState(false);\n  const [buttonAction, setButtonAction] = useState(false);\n  const pageurl = \"http://10.11.12.149:3000/#/pmo/salesSoftwares\";\n  const page_Name = \"Sales\";\n  const [startDate, setStartDate] = useState(() => {\n    const date = new Date();\n    date.setFullYear(date.getFullYear() + 1);\n    date.setMonth(date.getMonth() - 3);\n    return date;\n  });\n  const [selectedSEVal, setSelectedSEVal] = useState(-2);\n  const [editmsg, setEditAddmsg] = useState(false);\n  const [errorMsg, setErrorMsg] = useState(false);\n  const [actionSelector, setActionSelector] = useState(\"view\");\n  const [selectedVendorData, setSelectedVendorData] = useState([]);\n  const [vendorData, setVendorData] = useState([]);\n  const [vendors, setVendors] = useState(\"\");\n  const [vendorDropdown, setvendorDropdown] = useState([]);\n  const [selectedvendor, setselectedvendor] = useState([]);\n  const [selectedSE, setselectedSE] = useState(\"<< All SE >>\");\n  console.log(selectedSE);\n  const [salesExecutiveDropdown, setsalesExecutiveDropdown] = useState([]);\n  const [sFOwnerDivisionsDropdown, setSFOwnerDivisionsDropdown] = useState([]);\n  const [selectesFOwnerDivison, setselectesFOwnerDivison] = useState([]);\n  const [searching, setsearching] = useState(false);\n  const selectedDate = new Date();\n  const [showbyvalue, setShowByValue] = useState(\"week\");\n  const nextYearDate = moment(startDate).clone().add(1, \"year\").toDate();\n  const currentDate = new Date();\n  const oneYearLater = new Date(\n    currentDate.getFullYear() + 1,\n    currentDate.getMonth(),\n    currentDate.getDate()\n  );\n  useEffect(() => {\n    dispatch(updatedVendorId(vendor1));\n    dispatch(updatedVedorNameWithId(selectedp1));\n    dispatch(updatedOwnerDivisions(selectesFOwnerDivison));\n  }, [vendor1, selectedp1, selectesFOwnerDivison]);\n  const [FinancialYearDate, setFinancialYearDate] = useState(oneYearLater);\n  const year = moment(startDate).format(\"yyyy-MM-DD\").split(\"-\")[0];\n  const month = 1;\n  const dd = moment({ year, month: month - 1 })\n    .startOf(\"month\")\n    .format(\"YYYY-MM-DD\");\n  const [stDate, setStDate] = useState(\"2023-04-01\");\n  const DateChange = ({ id, value }) => {\n    const year = moment(value).format(\"yyyy-MM-DD\").split(\"-\")[0];\n    const month = 4;\n    const dd = moment({ year, month: month - 1 })\n      .startOf(\"month\")\n      .format(\"YYYY-MM-DD\");\n\n    setStDate(dd);\n    setWOwDate(dd);\n    setSoftwarePayload((prevState) => {\n      return { ...prevState, [\"from\"]: moment(dd).format(\"yyyy-MM-DD\") };\n    });\n    if (id === \"executives\" && value === \"1\") {\n      setVisible(true);\n    }\n  };\n  const defaultDate = () => {\n    const now = new Date();\n    const quarter = Math.floor(now.getMonth() / 3);\n    const firstDate = new Date(now.getFullYear(), quarter * 3, 1);\n    return firstDate.toLocaleDateString(\"en-CA\");\n  };\n\n  // Create a new Date object with the initial date\n  let initialDate = financeYears; // Replace this with your desired initial date\n\n  let daysToSubtract = 9;\n  initialDate.setDate(initialDate.getDate() - daysToSubtract);\n  let monthsToSubtract = 4;\n  initialDate.setMonth(initialDate.getMonth() - monthsToSubtract);\n  let yearsToSubtract = 0;\n  initialDate.setFullYear(initialDate.getFullYear() - yearsToSubtract);\n\n  const [wowadata, setwowDatapaylaod] = useState([]);\n  const [viewwData, setviewDataPayload] = useState([]);\n  const [targetDataaPayload, settargetDataPayload] = useState([]);\n\n  const ArrowRenderer = ({ expanded }) => (\n    <>\n      {expanded ? (\n        <FaCaretDown className=\"chevronIcon\" />\n      ) : (\n        <FaCaretDown className=\"chevronIcon\" />\n      )}\n    </>\n  );\n  const getWriteAcess = () => {\n    axios.get(baseUrl + `/SalesMS/software/getSalesVendors`).then((res) => {\n      const data = res.data;\n      let custom = [];\n\n      data.forEach((e) => {\n        let dpObj = {\n          label: e.vendor,\n          // value: e.id,\n        };\n        custom.push(dpObj);\n      });\n\n      setVendorData(custom);\n      setSelectedVendorData(custom);\n      // setAdata(data);\n    });\n  };\n\n  const practice1 = () => {\n    axios.get(baseUrl + `/SalesMS/software/getSalesVendors`).then((res) => {\n      const data = res.data;\n      let custom = [];\n\n      data.forEach((e) => {\n        let dpObj = {\n          label: e.vendor,\n          value: e.vendor,\n        };\n        custom.push(dpObj);\n      });\n\n      // Check if the item with the label \"Prolifics - Jam/Panther/XMLink\" exists in the options\n      const initialSelection = custom.some(\n        (item) => item.value === \"Prolifics - Jam/Panther/XMLink\"\n      )\n        ? custom.filter(\n            (item) => item.value !== \"Prolifics - Jam/Panther/XMLink\"\n          )\n        : custom;\n\n      setp1Data(custom);\n      setSelectedp1(initialSelection);\n      setResetVendor(initialSelection);\n    });\n  };\n\n  //// -------breadcrumbs-----\n\n  const [routes, setRoutes] = useState([]);\n  let textContent = \"Sales\";\n  let currentScreenName = [\"S/W Plan and Review\"];\n\n  useEffect(() => {\n    getMenus();\n  }, []);\n\n  const getMenus = () => {\n    axios({\n      method: \"GET\",\n      url: baseUrl + `/CommonMS/master/getMenus?loggedUserId=${loggedUserId}`,\n    }).then((resp) => {\n      let data = resp.data.map((menu) => {\n        if (menu.subMenus) {\n          menu.subMenus = menu.subMenus.filter(\n            (subMenu) =>\n              subMenu.display_name !== \"Project Timesheet (Deprecated)\" &&\n              subMenu.display_name !== \"Invoice Details\" &&\n              subMenu.display_name !== \"Accounting\" &&\n              subMenu.display_name !== \"Upload\" &&\n              subMenu.display_name !== \"Practice Calls [Deprecated]\"\n          );\n        }\n        return menu;\n      });\n\n      data.forEach((item) => {\n        if (item.display_name === textContent) {\n          setRoutes([item]);\n        }\n      });\n      const projectStatusReportSubMenu = data\n        .find((item) => item.display_name === \"Sales\")\n        .subMenus.find(\n          (subMenu) => subMenu.display_name === \"S/W Plan & Review\"\n        );\n      setAccessData(projectStatusReportSubMenu.access_level);\n    });\n  };\n\n  useEffect(() => {\n    getWriteAcess();\n    practice1();\n  }, []);\n  {\n    wirteData == loggedUserId ? \"sai Bandhavi\" : \"sai Teja\";\n  }\n\n  const array = wirteData;\n\n  const arrayToString = array.join(\",\");\n\n  const firstData = \"a,b,c,d\";\n  const secondData = \"e,f,g,a\";\n  const dataArray = wirteData;\n  const isIdPresent = dataArray.some((item) => item.user_id === +loggedUserId);\n  const isAnyElementPresent = () => {\n    const firstDataElements = firstData.split(\",\");\n    const secondDataElements = secondData.split(\",\");\n\n    for (let i = 0; i < secondDataElements.length; i++) {\n      if (firstDataElements.includes(secondDataElements[i])) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  const [quarterdate, setQuarterDate] = useState(() => {\n    const today = new Date();\n    const year = today.getFullYear();\n    const quarter = Math.floor((today.getMonth() + 3) / 3); // Calculate current quarter\n    const startMonth = (quarter - 1) * 3; // Start month of the quarter\n    const startDate = new Date(year, startMonth, 1); // Start date of the quarter\n    return startDate;\n  });\n  //---------------------------------------Values----------------------------------------------\n\n  const executiveIdPayload = SelectSEData;\n  const targetDataPayload = {\n    mode: \"edit\",\n    from: fydata,\n    duration: \"4\",\n    vendors: \"-1\",\n    divisions: \"-1\",\n    executives: \"0\",\n    isActive: \"true\",\n    isIndividual:\n      isIndividualChecked.length == 0 ? \"false\" : isIndividualChecked,\n    type: \"target\",\n    key: \"1662978029003\",\n    selectExecs: \"-2\",\n    saveSE: \"true\",\n    customers: -1,\n    prospects: -1,\n    practices: -1,\n    countries: -1,\n    customerType: -1,\n    summary: -1,\n    showBy: -1,\n    optType: -1,\n    quarter: -1,\n    status: -1,\n    duration2: -1,\n    monthsel: -1,\n    viewByTime: -1,\n    fyear: -1,\n    aelocation: -1,\n    engComp: -1,\n    Divisions: -1,\n    accOwner: -1,\n    newCust: -1,\n    accType: -1,\n    measures: -1,\n  };\n\n  const wowDataPayload = {\n    mode: \"wow\",\n    from: moment(quarterdate).format(\"YYYY-MM-DD\"),\n    duration: duration,\n    vendors: vendor1,\n    divisions: division,\n    executives: salesEx == 1 ? formattedIds : salesEx,\n    type: \"wow\",\n    subType: \"detail\",\n    isActive: \"true\",\n    isIndividual:\n      isIndividualChecked.length == 0 ? \"false\" : isIndividualChecked,\n    saveSE: \"false\",\n    selectExecs: \"\",\n    showBy: showbyvalue,\n    optType: -1,\n    quarter: -1,\n    status: -1,\n    duration2: -1,\n    measures: -1,\n    monthsel: -1,\n    viewByTime: -1,\n    fyear: -1,\n    customers: -1,\n    prospects: -1,\n    practices: -1,\n    countries: -1,\n    customerType: -1,\n    summary: -1,\n    aelocation: -1,\n    engComp: -1,\n    Divisions: -1,\n    accOwner: -1,\n    newCust: -1,\n    accType: -1,\n  };\n  const newStartDate = moment(startDate);\n\n  const viewDataPayload = {\n    mode: \"view\",\n    from: moment(quarterdate).format(\"YYYY-MM-DD\"),\n    duration: duration,\n    vendors: vendor1,\n    divisions: division,\n    // executives: salesSE,\n    executives: salesEx == 1 ? executiveIdPayload : salesEx,\n    salesId: salesexecutiveid,\n    isActive: \"true\",\n    isIndividual:\n      isIndividualChecked.length == 0 ? \"false\" : isIndividualChecked,\n    type: \"view\",\n    key: \"1662974432015\",\n    selectExecs: Salesexecutivename,\n    saveSE: \"true\",\n    optType: -1,\n    quarter: -1,\n    status: -1,\n    duration2: -1,\n    measures: -1,\n    monthsel: -1,\n    viewByTime: -1,\n    fyear: -1,\n    customers: -1,\n    prospects: -1,\n    practices: -1,\n    countries: -1,\n    customerType: -1,\n    summary: -1,\n    showBy: -1,\n    aelocation: -1,\n    engComp: -1,\n    Divisions: -1,\n    accOwner: -1,\n    newCust: -1,\n    accType: -1,\n  };\n  //------------------------methods---------------------------------\n\n  const onFilterChange = ({ id, value }) => {\n    setQdate(value);\n    setFdate(value);\n\n    // switch (id) {\n    //   case \"executives\":\n    //     settargetDataPayload((prevState) => {\n    //       return { ...prevState, [id]: value };\n    //     });\n    //     setwowDatapaylaod((prevState) => {\n    //       return { ...prevState, [id]: value };\n    //     });\n    //     setviewDataPayload((prevState) => {\n    //       return { ...prevState, [id]: value };\n    //     });\n\n    //     break;\n    //   case \"vendors\":\n    //     setwowDatapaylaod((prevState) => {\n    //       return { ...prevState, [id]: value };\n    //     });\n    //     setviewDataPayload((prevState) => {\n    //       return { ...prevState, [id]: value };\n    //     });\n    //     break;\n    //   case \"division\":\n    //     setwowDatapaylaod((prevState) => {\n    //       return { ...prevState, [id]: value };\n    //     });\n    //     setviewDataPayload((prevState) => {\n    //       return { ...prevState, [id]: value };\n    //     });\n    //     break;\n    //   case \"from\":\n    //     settargetDataPayload((prevState) => {\n    //       return { ...prevState, [id]: value };\n    //     });\n    //     setwowDatapaylaod((prevState) => {\n    //       return { ...prevState, [id]: value };\n    //     });\n    //     setviewDataPayload((prevState) => {\n    //       return { ...prevState, [id]: value };\n    //     });\n\n    //     break;\n    //   case \"duration\":\n    //     setviewDataPayload((prevState) => {\n    //       return { ...prevState, [id]: value };\n    //     });\n    //     break;\n    //   case \"showBy\":\n    //     setwowDatapaylaod((prevState) => {\n    //       return { ...prevState, [id]: value };\n    //     });\n    //     break;\n\n    //   default:\n    //     break;\n    // }\n\n    setSoftwarePayload((prevState) => {\n      return { ...prevState, [id]: value };\n    });\n\n    let SelectSEData1 = SelectSEData.slice(0, -1);\n    switch (value) {\n      case \"view\":\n        setSoftwarePayload((prevState) => {\n          return {\n            ...prevState,\n            mode: \"view\",\n            from: moment(quarterdate).format(\"YYYY-MM-DD\"),\n            duration: duration,\n            vendors: vendor1,\n            divisions: division,\n            executives: salesEx == 1 ? executiveIdPayload : salesEx,\n            salesId: salesexecutiveid,\n            isIndividual:\n              isIndividualChecked.length == 0 ? \"false\" : isIndividualChecked,\n            type: \"view\",\n            selectExecs: Salesexecutivename,\n          };\n        });\n        break;\n\n      case \"target\":\n        setSoftwarePayload((prevState) => {\n          return {\n            ...prevState,\n            mode: \"edit\",\n            from: stDate,\n            duration: \"4\",\n            vendors:\n              \"AllSight,AWS,Azure,BIGID,Breakwater,Cleanslate,Collibra,Data Bricks,Data Sentinel,Data.World,DataRobot,dbt Labs,Denodo,DiscoverAlpha,EDB,Evolveware,HCL America Inc,IBM,IBM - IM&A,IBM - SI,IBM – AWS,IBM – Azure,IBM – SI,IM&A Other SW,IM&A-Data Fabric,ImageAccess,Informatica,Intellective/Vega,Jedox,Manta,Manta MS Purview Bridge,Mendix,Meta Integration (Miti),Microsoft,MongoDB,MQAttach,MuleSoft,myInvenio,New Relic,Okta,OneTrust,Prolifics - Effecta/SLA/BA360,Prolifics - Jam/Panther/XMLink,Prolifics - PPMweb,Qlik,Quest,RedHat,Rocket,Senzing,SI - Other SW,Snowflake,SWOne,Talend,Testing Other (HP),Tricentis,UiPath,Unassigned\",\n            divisions: \"-1\",\n            // executives: \"-2\",\n            executives: salesEx == 1 ? SelectSEData1 : salesEx,\n            isActive: \"true\",\n            isIndividual:\n              isIndividualChecked.length == 0 ? \"false\" : isIndividualChecked,\n            type: \"target\",\n            key: \"1662978029003\",\n            selectExecs: SalesExecutiveNames,\n            salesId: salesexecutiveid,\n          };\n        });\n\n        break;\n      case \"wow\":\n        setSoftwarePayload((prevState) => {\n          return {\n            ...prevState,\n            mode: \"wow\",\n            from: moment(quarterdate).format(\"YYYY-MM-DD\"),\n            duration: duration,\n            vendors: vendor1,\n            divisions: division,\n            executives: salesEx == 1 ? formattedIds : salesEx,\n            type: \"wow\",\n            subType: \"detail\",\n            isActive: \"true\",\n            isIndividual:\n              isIndividualChecked.length == 0 ? \"false\" : isIndividualChecked,\n            saveSE: \"false\",\n            selectExecs: \"\",\n            showBy: showbyvalue,\n          };\n        });\n    }\n\n    if (id === \"executives\" && value === \"1\") {\n      setVisible(true);\n    }\n  };\n\n  const softwareSearchValidator = () => {\n    setShowDetails(false);\n    let payload = id != null ? softwarePayload : viewDataPayload;\n    let filteredData = ref.current.filter((d) => d != null);\n\n    ref.current = filteredData;\n\n    let valid = GlobalValidation(ref);\n\n    if (valid == true) {\n      setsearching(false);\n      setErrorMsg(true);\n    }\n\n    if (valid) {\n      // setValidator(true);\n      // setErrorMsg(true)\n      return;\n    }\n    switch (actionSelector) {\n      case \"target\":\n        payload = targetDataPayload;\n        break;\n\n      case \"view\":\n        payload = viewDataPayload;\n        break;\n\n      case \"wow\":\n        payload = wowDataPayload;\n        break;\n\n      default:\n        break;\n    }\n    payload.executives === \"1\"\n      ? (payload.executives = String(\n          JSON.parse(localStorage.getItem(\"selectedSELocal\")).map((item) => {\n            return item.id;\n          })\n        ))\n      : \"\";\n    payload.executives === \"1\"\n      ? (payload.isActive = JSON.parse(\n          localStorage.getItem(\"isIndividualCheckedLocal\")\n        ))\n      : \"\";\n    payload.customers === \"1\" &&\n    (localStorage.getItem(\"selectedCust\") === null ||\n      localStorage.getItem(\"selectedCust\") === undefined ||\n      localStorage.getItem(\"selectedCust\") === \"[]\")\n      ? setErrorMsg(true)\n      : getSoftwareData();\n    setShowDetails(true);\n  };\n\n  // -----------------------calls----------------------------------\n\n  const getvendor = () => {\n    axios\n      .get(baseUrl + \"/CommonMS/master/getSalesVendors\")\n      .then((resp) => {\n        const data = resp.data;\n        const dropdownOptions = data.map((item) => {\n          return {\n            value: item,\n            label: item,\n          };\n        });\n        setvendorDropdown(dropdownOptions);\n        setselectedvendor(dropdownOptions);\n        setwowDatapaylaod((prevState) => {\n          return {\n            ...prevState,\n            [\"vendors\"]: String(dropdownOptions.map((item) => item.value)),\n          };\n        });\n        setviewDataPayload((prevState) => {\n          return {\n            ...prevState,\n            [\"vendors\"]: String(dropdownOptions.map((item) => item.value)),\n          };\n        });\n        settargetDataPayload((prevState) => {\n          return {\n            ...prevState,\n            [\"vendors\"]: String(dropdownOptions.map((item) => item.value)),\n          };\n        });\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  const getsalesExecutiveDropdown = () => {\n    axios\n      .get(baseUrl + \"/SalesMS/MasterController/salesExecutiveData\")\n      .then((resp) => {\n        const data = resp.data;\n        const dropdownOptions = data\n          .filter((item) => item.isActive === 1)\n          .map((item) => {\n            return (\n              <option key={item.id} value={item.val}>\n                {item.lkupName}\n              </option>\n            );\n          });\n        setsalesExecutiveDropdown(dropdownOptions);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n  const handleAbort = () => {\n    abortController.current && abortController.current.abort();\n    setLoader(false);\n  };\n  const getSFOwnerDivisionsDropdown = () => {\n    axios\n      .get(baseUrl + `/SalesMS/MasterController/SFOwnerDivisions`)\n      .then((resp) => {\n        const data = resp.data;\n        const dropdownOptions = data.map((item) => {\n          return {\n            value: item.id,\n            label: item.owner_Division,\n          };\n        });\n        setSFOwnerDivisionsDropdown(dropdownOptions);\n        setselectesFOwnerDivison(dropdownOptions);\n        setwowDatapaylaod((prevState) => {\n          return {\n            ...prevState,\n            [\"divisions\"]: String(dropdownOptions.map((item) => item.value)),\n          };\n        });\n        setviewDataPayload((prevState) => {\n          return {\n            ...prevState,\n            [\"divisions\"]: String(dropdownOptions.map((item) => item.value)),\n          };\n        });\n        settargetDataPayload((prevState) => {\n          return {\n            ...prevState,\n            [\"divisions\"]: String(dropdownOptions.map((item) => item.value)),\n          };\n        });\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  const quarterToMonth = {\n    Q1: \"04\",\n    Q2: \"07\",\n    Q3: \"10\",\n    Q4: \"01\",\n  };\n\n  function calculateStartDate(quarterString) {\n    const match = quarterString?.match(/^(\\d{4})-Q(\\d)$/);\n    if (match) {\n      let year = parseInt(match[1], 10);\n      const quarter = parseInt(match[2], 10);\n\n      // Handle Q4, incrementing the year\n      if (quarter === 4) {\n        year++;\n      }\n\n      const month = quarterToMonth[`Q${quarter}`];\n      const day = \"01\";\n      return `${year}-${month}-${day}`;\n    }\n    return null; // Handle invalid input gracefully\n  }\n\n  function subtractYearFromDate(dateString) {\n    const currentDate = new Date(dateString);\n    currentDate.setFullYear(currentDate.getFullYear() - 1);\n\n    const year = currentDate.getFullYear();\n    const month = String(currentDate.getMonth() + 1).padStart(2, \"0\");\n    const day = String(currentDate.getDate()).padStart(2, \"0\");\n\n    return `${year}-${month}-${day}`;\n  }\n\n  const getSoftwareData = () => {\n    let payload = id != null ? softwarePayload : viewDataPayload;\n    switch (actionSelector) {\n      case \"target\":\n        payload = id != null ? softwarePayload : targetDataPayload;\n        break;\n\n      case \"view\":\n        payload = id != null ? softwarePayload : viewDataPayload;\n        break;\n\n      case \"wow\":\n        payload = id != null ? softwarePayload : wowDataPayload;\n        break;\n\n      default:\n        break;\n    }\n    setsearching(false);\n    // setTableFlag(false)\n    setErrorMsg(false);\n    payload.executives === \"1\"\n      ? (payload.executives = String(\n          JSON.parse(localStorage.getItem(\"selectedSELocal\")).map((item) => {\n            return item.id;\n          })\n        ))\n      : \"\";\n    payload.customers === \"1\"\n      ? (payload.customers = String(\n          JSON.parse(localStorage.getItem(\"selectedCust\")).map((item) => {\n            return item.id;\n          })\n        ))\n      : \"\";\n\n    axios\n      .post(baseUrl + `/SalesMS/software/getSalesSoftwareData`, payload)\n      .then((resp) => {\n        setLoader(false);\n        const data = resp.data.data;\n        const reportRunId = resp.data.reportRunId;\n\n        if (actionSelector == \"view\") {\n          const allQuarter = data\n            ?.filter((item) => item.lvl === 1)\n            .map((item) => {\n              return { quat: item.quarter, date: item.date };\n            });\n          const Date = allQuarter[0]?.quat; // Assuming allQuarter is an array of quarter strings\n          const formattedDate = calculateStartDate(Date);\n          const updatedDate = subtractYearFromDate(formattedDate);\n          dispatch(updateQuaterDate(updatedDate));\n        }\n\n        dispatch(setReportRunIdRedux(reportRunId));\n        let array = [];\n        switch (actionSelector) {\n          case \"target\":\n            array = resp.data.swTargets?.split(\",\");\n            break;\n          case \"view\":\n            array = [\n              \"id\",\n              \"quarter\",\n              \"executive\",\n              \"execStatus\",\n              \"country\",\n              // \"date\",\n              \"target\",\n              \"oppAmount\",\n              \"calls\",\n              \"upside\",\n              \"gap\",\n              \"lvl\",\n              \"closedAmount\",\n              \"isActive\",\n            ];\n            break;\n          case \"wow\":\n            array =\n              wowDataPayload.showBy === \"week\"\n                ? [\n                    \"id\",\n                    \"weekno\",\n                    \"date\",\n                    \"executive\",\n                    \"execStatus\",\n                    \"supervisor\",\n                    \"target\",\n                    \"oppAmount\",\n                    \"calls\",\n                    \"upside\",\n                    \"gap\",\n                    \"closedAmount\",\n                    \"lvl\",\n                    \"count\",\n                  ]\n                : [\n                    \"id\",\n                    \"executive\",\n                    \"weekno\",\n                    \"date\",\n                    \"execStatus\",\n                    \"target\",\n                    \"oppAmount\",\n                    \"clls\",\n                    \"upside\",\n                    \"gap\",\n                    \"closedAmount\",\n                    \"lvl\",\n                    \"count\",\n                    \"supervisor\",\n                  ];\n            setwowtype(wowDataPayload.showBy);\n            break;\n\n          default:\n            break;\n        }\n        const newArray = data.map((item) => {\n          let k = JSON.parse(JSON.stringify(item, array, 4));\n          return k;\n        });\n        setSoftwareData(newArray);\n        setreportRunId(reportRunId);\n        setsearching(false);\n        setWowDisplay(true);\n        setViewDisplay(true);\n        setTargetDataKeys(resp.data.swTargets);\n        setVisibleC(!visibleC);\n        visibleC\n          ? setCheveronIcon(FaChevronCircleUp)\n          : setCheveronIcon(FaChevronCircleDown);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  const getData1 = () => {\n    let valid = GlobalValidation(ref);\n\n    if (valid == true) {\n      setsearching(false);\n      setErrorMsg(true);\n    }\n    setErrorMsg(false);\n    setLoader(true);\n    setButtonAction(false);\n    let SelectSEData1 = SelectSEData.slice(0, -1);\n    let date = \"\";\n    if (id != null) {\n      const fromDate = filterData?.from; // Use provided date or stDate if id is null\n      const fromDateObj = new Date(fromDate);\n\n      // Add one year\n      fromDateObj.setFullYear(fromDateObj.getFullYear());\n      // Calculate the quarter month\n      const currentMonth = fromDateObj.getMonth();\n      if (currentMonth < 0 || currentMonth > 11) {\n        // Handle invalid month, e.g., set it to January\n        fromDateObj.setMonth(0);\n      } else {\n        const nextQuarterMonth = Math.ceil((currentMonth + 1) / 3) * 3;\n        fromDateObj.setMonth(nextQuarterMonth);\n      }\n\n      const resultDate = fromDateObj.toISOString().slice(0, 10);\n      console.log(\"Modified Date:\", resultDate);\n      date = resultDate;\n    }\n    console.log(date);\n    axios({\n      method: \"post\",\n      url: baseUrl + `/SalesMS/services/getSalesTargetsSW`,\n      data: {\n        mode: \"edit\",\n        from: id == null ? stDate : date,\n        duration: \"4\",\n        vendors:\n          \"AllSight,AWS,Azure,BIGID,Breakwater,Cleanslate,Collibra,Data Bricks,Data Sentinel,Data.World,DataRobot,dbt Labs,Denodo,DiscoverAlpha,EDB,Evolveware,HCL America Inc,IBM,IBM - IM&A,IBM - SI,IBM – AWS,IBM – Azure,IBM – SI,IM&A Other SW,IM&A-Data Fabric,ImageAccess,Informatica,Intellective/Vega,Jedox,Manta,Manta MS Purview Bridge,Mendix,Meta Integration (Miti),Microsoft,MongoDB,MQAttach,MuleSoft,myInvenio,New Relic,Okta,OneTrust,Prolifics - Effecta/SLA/BA360,Prolifics - Jam/Panther/XMLink,Prolifics - PPMweb,Qlik,Quest,RedHat,Rocket,Senzing,SI - Other SW,Snowflake,SWOne,Talend,Testing Other (HP),Tricentis,UiPath,Unassigned\",\n        divisions: division,\n        // executives: \"-2\",\n        executives: salesEx == 1 ? SelectSEData1 : salesEx,\n        isActive: \"true\",\n        isIndividual:\n          isIndividualChecked.length == 0 ? \"false\" : isIndividualChecked,\n        type: \"target\",\n        key: \"1662978029003\",\n        selectExecs: SalesExecutiveNames,\n        salesId: salesexecutiveid,\n        saveSE: \"true\",\n        customers: -1,\n        prospects: -1,\n        practices: -1,\n        countries: -1,\n        customerType: -1,\n        summary: -1,\n        showBy: -1,\n        optType: -1,\n        quarter: -1,\n        status: -1,\n        duration2: -1,\n        monthsel: -1,\n        viewByTime: -1,\n        fyear: -1,\n        aelocation: -1,\n        engComp: -1,\n        Divisions: -1,\n        accOwner: -1,\n        newCust: -1,\n        accType: -1,\n        measures: -1,\n      },\n\n      headers: { \"Content-Type\": \"application/json\" },\n      // signal: abortController.current.signal,\n    }).then((response) => {\n      const data = response.data;\n      setTableData(data);\n      setReportId(data.reportRunId);\n      setHeaderData(data.summary[0]);\n      setData(data.data);\n      setTargetOpen(true);\n      setLoader(false);\n      !valid && setVisibleC(!visibleC);\n      visibleC\n        ? setCheveronIcon(FaChevronCircleUp)\n        : setCheveronIcon(FaChevronCircleDown);\n      setButtonAction(true);\n    });\n  };\n\n  // -----------------------------useEffect---------------------------------\n  useEffect(() => {\n    getsalesExecutiveDropdown();\n    getSFOwnerDivisionsDropdown();\n    // getSoftwareData();\n    getvendor();\n  }, []);\n\n  useEffect(() => {\n    setSelector(actionSelector);\n  }, [softwareData]);\n  const [visibleC, setVisibleC] = useState(false);\n  const [cheveronIcon, setCheveronIcon] = useState(FaChevronCircleUp);\n  const [errormessage, setErrorMessage] = useState(false);\n  const HelpPDFName = \"SW Plan and Review.pdf\";\n  const Headername = \"S/W Plan and Review Help\";\n  // const [editmsg, setEditAddmsg] = useState(false);\n\n  const resetFilters = () => {\n    const date = new Date();\n    date.setFullYear(date.getFullYear() + 1);\n    date.setMonth(date.getMonth() - 3);\n    // Reset the values of all filters to their initial values here\n    setStartDate(date); // Reset start date to initial value\n    setFinancialYearDate(oneYearLater);\n\n    const data = -2;\n\n    setSelectedSEVal(data); // Reset selected sales executive value to initial value\n    // setSelectedp1(vendor1);\n    setSelectedp1(resetVendor);\n    setselectedSE(\"<< All SE >>\");\n    setSalesEx(data);\n    setVendor1(\n      \"AllSight,AWS,Azure,BIGID,Boomi,Breakwater,Cleanslate,Collibra,Cyberark,Data Bricks,Data Sentinel,Data.World,DataRobot,dbt Labs,Delinea,Denodo,DiscoverAlpha,EDB,Evolveware,HCL America Inc,IBM,IBM - IM&A,IBM - SI,IBM – AWS,IBM – Azure,IBM – SI,IM&A Other SW,IM&A-Data Fabric,ImageAccess,Informatica,Intellective/Vega,Jedox,Manta,Manta MS Purview Bridge,Mendix,Meta Integration (Miti),Microsoft,MongoDB,MQAttach,MuleSoft,myInvenio,New Relic,Okta,OneTrust,Prolifics - Effecta/SLA/BA360,Prolifics - PPMweb,Qlik,Quest,RedHat,Rocket,Senzing,SI - Other SW,Snowflake,SoftwareAG,SWOne,Talend,Testing Other (HP),Tricentis,UiPath,Unassigned\"\n    );\n\n    setselectesFOwnerDivison(sFOwnerDivisionsDropdown);\n    const dropdown = sFOwnerDivisionsDropdown.label;\n    setDivision(dropdown);\n  };\n\n  useEffect(() => {\n    if ((id !== null) & (softwarePayload.type != \"target\")) {\n      setTimeout(() => {\n        softwareSearchValidator();\n      }, 3000);\n    }\n  }, [softwarePayload]);\n\n  useEffect(() => {\n    if (id != null && softwarePayload.type === \"target\") {\n      setTimeout(() => {\n        getData1();\n      }, 3000);\n    }\n  }, [softwarePayload]);\n  return (\n    <div>\n      {loader ? <Loader handleAbort={handleAbort} /> : \"\"}\n      <div className=\"col-md-12\">\n        <div className=\"pageTitle\">\n          <div className=\"childOne\"></div>\n          <div className=\"childTwo\">\n            <h2>S/W Plan and Review</h2>\n          </div>\n          <div className=\"childThree\"></div>\n        </div>\n      </div>\n      <ScreenBreadcrumbs\n        routes={routes}\n        currentScreenName={currentScreenName}\n      />\n      <div>{}</div>\n\n      {errorMsg ? (\n        <div className=\"statusMsg error\">\n          {\" \"}\n          <AiFillWarning /> Please select valid values for highlighted fields\n        </div>\n      ) : (\n        \"\"\n      )}\n      {errormessage ? (\n        <div className=\"statusMsg error\">\n          {\" \"}\n          <AiFillWarning />\n          No Modifications to Save\n        </div>\n      ) : (\n        \"\"\n      )}\n      {editmsg ? (\n        <div className=\"statusMsg success\">\n          <span className=\"errMsg\">\n            <BiCheck size=\"1.4em\" /> &nbsp; Search created successfully.\n          </span>\n        </div>\n      ) : (\n        \"\"\n      )}\n      <div className=\"group customCard\">\n        <div className=\"col-md-12 collapseHeader\">\n          <h2>Search Filters</h2>\n          <div className=\"helpBtn\">\n            <GlobalHelp pdfname={HelpPDFName} name={Headername} />\n          </div>\n          <div className=\"col-md-0 saveBtn\">\n            <SavedSearchGlobal\n              setEditAddmsg={setEditAddmsg}\n              pageurl={pageurl}\n              page_Name={page_Name}\n              payload={softwarePayload}\n            />\n          </div>{\" \"}\n          &nbsp;&nbsp;\n          <div\n            onClick={() => {\n              setVisibleC(!visibleC);\n\n              visible\n                ? setCheveronIcon(FaChevronCircleUp)\n                : setCheveronIcon(FaChevronCircleDown);\n            }}\n          >\n            <span>{cheveronIcon}</span>\n          </div>\n        </div>\n        <CCollapse visible={!visibleC}>\n          <div className=\"group-content row\">\n            <div className=\"col-md-4 mb-2\" id=\"execSelDiv\">\n              <div className=\"form-group row\">\n                <label className=\"col-5\">Action</label>\n                <span className=\"col-1 p-0\">:</span>\n                <span className={`col-6 `} style={{ height: \"23px\" }}>\n                  <select\n                    id=\"type\"\n                    value={actionSelector}\n                    className=\"col-md-12 col-sm-12 col-xs-12 \"\n                    onChange={(e) => {\n                      resetFilters();\n                      onFilterChange(e.target);\n                      setActionSelector(e.target.value);\n                      {\n                        e.target.value === \"\";\n                      }\n                    }}\n                  >\n                    <option value={\"target\"}>{\"Targets\"}</option>\n                    <option value={\"view\"}>{\"View\"}</option>\n                    <option value={\"wow\"}>{\"WoW\"}</option>\n                  </select>\n                </span>\n              </div>\n            </div>\n\n            <div className=\"col-md-4 mb-2\" id=\"execSelDiv\">\n              <div className=\"form-group row\">\n                <label className=\"col-5 \">\n                  Sales Executive{\" \"}\n                  <span className=\"required error-text ml-1\"> *</span>\n                </label>\n                <span className=\"col-1 p-0\">:</span>\n                <span className=\"col-6 textfield\">\n                  {accessData === 1000 || accessData === 500 ? (\n                    <select\n                      id=\"executives\"\n                      className=\"text\"\n                      value={selectedSEVal}\n                      onChange={(e) => {\n                        onFilterChange({\n                          id: \"executives\",\n                          value: e.target.value,\n                        });\n                        setSelectedSEVal(e.target.value);\n                        setSalesEx(e.target.value);\n                        setViewSlesId(e.target.value);\n                        setselectedSE(\n                          e.target.options[e.target.selectedIndex].text\n                        );\n                      }}\n                      ref={(ele) => {\n                        ref.current[0] = ele;\n                      }}\n                    >\n                      <option value={\"\"}>{\"<< Please select>> \"}</option>\n                      {salesExecutiveDropdown}\n                    </select>\n                  ) : (\n                    <select\n                      id=\"executives\"\n                      className=\"text\"\n                      value={selectedSEVal}\n                      onChange={(e) => {\n                        onFilterChange({\n                          id: \"executives\",\n                          value: e.target.value,\n                        });\n                        setSelectedSEVal(e.target.value);\n                        setSalesEx(e.target.value);\n                        setViewSlesId(e.target.value);\n                        setselectedSE(\n                          e.target.options[e.target.selectedIndex].text\n                        );\n                      }}\n                      ref={(ele) => {\n                        ref.current[0] = ele;\n                      }}\n                    >\n                      <option value={\"\"}>{\"<< Please select>> \"}</option>\n                      <option value=\"1\">Select SE</option>\n                    </select>\n                  )}\n                </span>\n              </div>\n            </div>\n\n            {actionSelector === \"target\" && (\n              <div className=\"col-md-4 mb-2\">\n                <div className=\"form-group row\" id=\"week-picker-wrapper\">\n                  <label className=\"col-5\">\n                    Financial Year{\" \"}\n                    <span className=\"required error-text ml-1\"> *</span>\n                  </label>\n                  <span className=\"col-1 p-0\">:</span>\n                  <span\n                    className=\"col-6 datepicker targetDatepicker\"\n                    ref={(ele) => {\n                      ref.current[1] = ele;\n                    }}\n                  >\n                    <DatePicker\n                      id=\"startDate\"\n                      selected={FinancialYearDate}\n                      onChange={(e) => {\n                        const oneYearLater = new Date(\n                          e.getFullYear() + 1,\n                          e.getMonth(),\n                          e.getDate()\n                        );\n                        setStartDate(e);\n                        setFinancialYearDate(oneYearLater);\n                        DateChange({\n                          id: \"from\",\n                          value: e.toLocaleDateString(\"en-CA\"),\n                        });\n                        onFilterChange({\n                          id: \"from\",\n                          value: e.toLocaleDateString(\"en-CA\"),\n                        });\n                      }}\n                      dateFormat=\"'FY' yyyy\"\n                      showYearPicker\n                      yearDropdownItemNumber={4}\n                    />\n                  </span>\n                </div>\n              </div>\n            )}\n\n            {(actionSelector === \"view\" || actionSelector === \"wow\") && (\n              <div className=\"col-md-4 mb-2\">\n                <div className=\"form-group row\">\n                  <label className=\"col-5\">\n                    Vendors <span className=\"required error-text ml-1\"> *</span>\n                  </label>\n                  <span className=\"col-1 p-0\">:</span>\n                  <span\n                    className=\"col-6 multiselect\"\n                    style={{ height: \"23px\" }}\n                    ref={(ele) => {\n                      ref.current[2] = ele;\n                    }}\n                  >\n                    <MultiSelect\n                      ArrowRenderer={ArrowRenderer}\n                      id=\"vendors\"\n                      options={p1data}\n                      hasSelectAll={true}\n                      value={selectedp1}\n                      disabled={false}\n                      valueRenderer={generateDropdownLabel}\n                      onChange={(e) => {\n                        setSelectedp1(e);\n                        let filterPractice = [];\n                        e.forEach((d) => {\n                          filterPractice.push(d.value);\n                        });\n                        setVendor1(filterPractice.toString());\n                        onFilterChange({\n                          id: \"vendors\",\n                          value: filterPractice.toString(),\n                        });\n                      }}\n                    />\n                  </span>\n                </div>\n              </div>\n            )}\n\n            {(actionSelector === \"view\" || actionSelector === \"wow\") && (\n              <div className=\"col-md-4 mb-2\">\n                <div className=\"clearfix\" style={{ height: \"12px\" }}></div>\n                <div className=\"form-group row\">\n                  <label className=\"col-5\">\n                    Owner Division{\" \"}\n                    <span className=\"required error-text ml-1\"> *</span>\n                  </label>\n                  <span className=\"col-1 p-0\">:</span>\n                  <span\n                    className=\"col-6 multiselect\"\n                    style={{ height: \"23px\" }}\n                    ref={(ele) => {\n                      ref.current[3] = ele;\n                    }}\n                  >\n                    <MultiSelect\n                      ArrowRenderer={ArrowRenderer}\n                      valueRenderer={generateDropdownLabel}\n                      options={sFOwnerDivisionsDropdown}\n                      hasSelectAll={true}\n                      isLoading={false}\n                      shouldToggleOnHover={false}\n                      disableSearch={false}\n                      value={selectesFOwnerDivison}\n                      disabled={false}\n                      onChange={(e) => {\n                        setselectesFOwnerDivison(e);\n                        let filterPractice = [];\n                        e.forEach((d) => {\n                          filterPractice.push(d.value);\n                        });\n                        setDivision(filterPractice.toString());\n                        onFilterChange({\n                          id: \"divisions\",\n                          value: filterPractice.toString(),\n                        });\n                      }}\n                    />\n                  </span>\n                </div>\n              </div>\n            )}\n\n            {(actionSelector === \"view\" || actionSelector === \"wow\") && (\n              <div className=\"col-md-4 mb-2\">\n                <div className=\"clearfix\" style={{ height: \"10px\" }}></div>\n                <div className=\"form-group row\" id=\"week-picker-wrapper\">\n                  <label className=\"col-5\">\n                    From Quarter{\" \"}\n                    <span className=\"required error-text ml-1\"> *</span>\n                  </label>\n                  <span className=\"col-1 p-0\">:</span>\n                  <span\n                    className=\"col-6 datepicker\"\n                    style={{ height: \"23px\" }}\n                    ref={(ele) => {\n                      ref.current[4] = ele;\n                    }}\n                  >\n                    <DatePicker\n                      selected={startDate}\n                      onChange={(e) => {\n                        setStartDate(e);\n                        const date = new Date(e.getTime());\n                        date.setFullYear(date.getFullYear() - 1);\n                        date.setMonth(date.getMonth() + 3);\n                        setQuarterDate(date);\n                        onFilterChange({\n                          id: \"from\",\n                          value: date.toLocaleDateString(\"en-CA\"),\n                        });\n                      }}\n                      dateFormat=\"'FY' yyyy-QQQ\"\n                      showQuarterYearPicker\n                    />\n                  </span>\n                </div>\n              </div>\n            )}\n            {actionSelector === \"view\" && (\n              <div className=\"col-md-4 mb-2\">\n                <div className=\"clearfix\" style={{ height: \"12px\" }}></div>\n                <div className=\"form-group row\">\n                  <label className=\"col-5\">Duration</label>\n                  <span className=\"col-1 p-0\">:</span>\n                  <span className=\"col-6\" style={{ height: \"23px\" }}>\n                    <select\n                      id=\"duration\"\n                      name=\"duration\"\n                      className=\"col-md-12 col-sm-12 col-xs-12 \"\n                      // defaultValue={\"4\"}\n                      value={softwarePayload?.duration}\n                      onChange={(e) => {\n                        setDuration(e.target.value);\n                        onFilterChange(e.target);\n                      }}\n                    >\n                      <option value=\"1\">1</option>\n                      <option value=\"2\">2</option>\n                      <option value=\"3\">3</option>\n                      <option value=\"4\">4</option>\n                    </select>\n                  </span>\n                </div>\n              </div>\n            )}\n\n            {actionSelector === \"wow\" && (\n              <div className=\"col-md-4 mb-2\">\n                <div className=\"clearfix\" style={{ height: \"12px\" }}></div>\n                <div className=\"form-group row\">\n                  <label className=\"col-5\">Show By</label>\n                  <span className=\"col-1 p-0\">:</span>\n                  <span className=\"col-6\" style={{ height: \"23px\" }}>\n                    <select\n                      id=\"showBy\"\n                      name=\"showBy\"\n                      className=\"col-md-12 col-sm-12 col-xs-12 \"\n                      value={showbyvalue}\n                      onChange={(e) => {\n                        setShowByValue(e.target.value);\n                        onFilterChange({\n                          id: \"showBy\",\n                          value: e.target.value,\n                        });\n                      }}\n                    >\n                      <option value=\"week\">Week</option>\n                      <option value=\"exec\">Sales Executive</option>\n                    </select>\n                  </span>\n                </div>\n              </div>\n            )}\n\n            <div className=\"col-md-12 no-padding section\">\n              <div className=\"seFooter\" style={{ borderTop: \"1px solid #CCC\" }}>\n                {\" \"}\n                <span className=\"selectedSE\">\n                  <b>Selected SE : </b>\n                  <span className=\"dynText\">\n                    {selectedSE === \"<< Select SE >>\"\n                      ? localSE.map((item, index) => (\n                          <span key={item.id}>\n                            {isIndividualChecked\n                              ? item.salesPersonName\n                                ? item.salesPersonName\n                                : item.text\n                              : item.salesPersonName\n                              ? item.salesPersonName\n                              : item.text + ` & Team`}\n                            {index === localSE.length - 1 ? \"\" : \", \"}\n                          </span>\n                        ))\n                      : selectedSE}\n                  </span>\n                </span>\n                <div className=\"clearfix \" style={{ height: \"5px\" }}></div>\n              </div>\n            </div>\n\n            {actionSelector == \"target\" ? (\n              <div className=\"col-md-12 col-sm-12 col-xs-12 my-2 search btn-container center\">\n                <button\n                  type=\"submit\"\n                  className=\"btn btn-primary\"\n                  onClick={(e) => {\n                    getData1();\n                    setTargetOpen(false);\n                    setWowDisplay(false);\n                    setShowDetails(false);\n                  }}\n                >\n                  <FaSearch /> Search{\" \"}\n                </button>\n              </div>\n            ) : (\n              <div className=\"col-md-12 col-sm-12 col-xs-12 my-2 search btn-container center\">\n                <button\n                  type=\"submit\"\n                  className=\"btn btn-primary\"\n                  onClick={(e) => {\n                    softwareSearchValidator();\n                    setWowDisplay(false);\n                    setTargetOpen(false);\n                    setViewDisplay(false);\n                  }}\n                >\n                  <FaSearch /> Search{\" \"}\n                </button>\n              </div>\n            )}\n            <SelectSEDialogBox\n              visible={visible}\n              setVisible={setVisible}\n              setGrpId={setGrpId}\n              accessData={accessData}\n            />\n          </div>\n        </CCollapse>\n        <br />\n        {targetOpen && (\n          <>\n            {/* <span>\n              <b style={{ color: \"#297ab0\", fontSize: \"15px\" }}>Targets</b>\n            </span> */}\n            <TargetTable\n              data={data}\n              setData={setData}\n              tableData={tableData}\n              buttonAction={buttonAction}\n              reportId={reportId}\n              setTableData={setTableData}\n              headerData={headerData}\n              loader={loader}\n              setHeaderData={setHeaderData}\n              setErrorMessage={setErrorMessage}\n              getData1={getData1}\n              accessData={accessData}\n            />\n          </>\n        )}\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport axios from \"axios\";\nimport { useEffect, useState, Fragment, useRef } from \"react\";\nimport { environment } from \"../../environments/environment\";\nimport Loader from \"../Loader/Loader\";\nimport DownloadForOfflineRoundedIcon from \"@mui/icons-material/DownloadForOfflineRounded\";\n\nexport default function DocumentTable(props) {\n  const { docId, sfDocs } = props;\n  const [open, setOpen] = useState(false);\n  const baseUrl = environment.baseUrl;\n  const abortController = useRef(null);\n\n  const handleAbort = () => {\n    abortController.current && abortController.current.abort();\n    setOpen(false);\n  };\n\n  return (\n    <div className=\"darkHeader\">\n      <table\n        className=\"table table-bordered table-striped attainTable \"\n        style={{ width: \"50%\" }}\n      >\n        <thead>\n          <tr className=\"fs10\">\n            <th className=\"\">Document Name</th>\n            <th style={{ textAlign: \"center\" }}>Action</th>\n          </tr>\n        </thead>\n        <tbody>\n          {sfDocs?.data && sfDocs.data.length > 0 ? (\n            sfDocs.data.map((doc) => (\n              <tr key={doc.docId}>\n                <td>{doc.name}</td>\n                <td style={{ textAlign: \"center\" }}>\n                  {doc.type == \"DocLInk\" ? (\n                    <a\n                      href={\n                        baseUrl +\n                        `/SalesMS/sales/downloadDoc?docId=${doc.docId}&type=${doc.docType}`\n                      }\n                    >\n                      <div title=\"Download Document\">\n                        <DownloadForOfflineRoundedIcon\n                          style={{ color: \"#6c9842\" }}\n                        />\n                      </div>\n                    </a>\n                  ) : (\n                    \"\"\n                  )}\n                </td>\n              </tr>\n            ))\n          ) : (\n            <tr>\n              <td colSpan=\"2\" style={{ textAlign: \"center\" }}>\n                No Document Found\n              </td>\n            </tr>\n          )}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n","import { Fragment, useState } from \"react\";\nimport fte_active from \"../../assets/images/empstatusIcon/fte_active.png\";\nimport fte_inactive from \"../../assets/images/empstatusIcon/fte_inactive.png\";\nimport fte_notice from \"../../assets/images/empstatusIcon/fte_notice.png\";\nimport subk_active from \"../../assets/images/empstatusIcon/subk_active.png\";\nimport subk_inactive from \"../../assets/images/empstatusIcon/subk_inactive.png\";\nimport subk_notice from \"../../assets/images/empstatusIcon/subk_notice.png\";\nimport {\n  FaAngleRight,\n  FaCaretDown,\n  FaCaretRight,\n  FaDochub,\n} from \"react-icons/fa\";\nimport { FaAngleDown } from \"react-icons/fa\";\nimport { FaCircle } from \"react-icons/fa\";\nimport React from \"react\";\nimport { RiDeleteBin5Fill, RiFileExcel2Line } from \"react-icons/ri\";\nimport ExcelJS from \"exceljs\";\nimport DocumentTable from \"./DocumentTable\";\nimport { MdDescription } from \"react-icons/md\";\nimport { useRef } from \"react\";\nimport Loader from \"../Loader/Loader\";\nimport axios from \"axios\";\nimport { environment } from \"../../environments/environment\";\nimport { useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\n\nexport default function ViewDetailsTable({\n  viewDetailsData,\n  srchQuat,\n  executive,\n  SalesExecutive,\n  filterExectiveName,\n  filtertrue,\n  getviewDetailsData,\n  setCust,\n  cust,\n}) {\n  console.log(cust);\n  const allcust = viewDetailsData\n    .filter((item) => item.lvl === 1)\n    .map((item) => item.customer);\n\n  const expandData = useSelector((state) => state.selectedSEState.actionData);\n  console.log(expandData);\n  useEffect(() => {\n    const data = cust?.[0];\n    setexpanded([data]);\n  }, [cust]);\n\n  const [expanded, setexpanded] = useState([]);\n  const prosicon = {\n    1: <FaCircle style={{ color: \"#9567c2\" }} />,\n    0: <FaCircle style={{ color: \"#539a71\" }} />,\n  };\n\n  const FilterName = filterExectiveName[0]?.label;\n  const [docId, setDocId] = useState([]);\n  const baseUrl = environment.baseUrl;\n  const [open, setOpen] = useState(false);\n  const [oppoName, setOppoName] = useState(\"\");\n\n  const [sfDocs, setSfDocs] = useState([]);\n  const [docDisplay, setDocDisplay] = useState(false);\n  const abortController = useRef(null);\n\n  const handleAbort = () => {\n    abortController.current && abortController.current.abort();\n    setOpen(false);\n  };\n  const getSfDocuments = (id) => {\n    const loaderTime = setTimeout(() => {\n      setOpen(true);\n    }, 2000);\n    abortController.current = new AbortController();\n\n    axios({\n      method: \"post\",\n      url: baseUrl + `/SalesMS/sales/getSFOppDocs`,\n      data: {\n        oppId: id,\n      },\n    }).then((resp) => {\n      const data = resp.data;\n      setSfDocs(data.data);\n      setDocDisplay(true);\n      setOpen(false);\n      clearTimeout(loaderTime);\n      window.scrollTo({ top: 1500, behavior: \"smooth\" });\n    });\n  };\n\n  const deleteOpportunity = (id) => {\n    setOpen(false);\n    axios({\n      method: \"delete\",\n      url: baseUrl + `/SalesMS/software/deleteOpportunity?id=${id}`,\n    }).then((resp) => {\n      getviewDetailsData();\n      setOpen(false);\n    });\n  };\n\n  const clickExpand = (cust) => {\n    if (cust === \"Summary\") {\n      setexpanded((prevState) => {\n        return prevState.length === allcust.length ? [] : allcust;\n      });\n    } else {\n      setexpanded((prevState) => {\n        return prevState.includes(cust)\n          ? prevState.filter((item) => item !== cust)\n          : [...prevState, cust];\n      });\n    }\n  };\n\n  let toggler = 0;\n  const icons = {\n    fte0: (\n      <img\n        src={fte_inactive}\n        alt=\"(fte_inactive_icon)\"\n        style={{ height: \"12px\" }}\n        title=\"Ex-Employee\"\n      />\n    ),\n    fte1: (\n      <img\n        src={fte_active}\n        alt=\"(fte_active_icon)\"\n        style={{ height: \"12px\" }}\n        title=\"Active Employee\"\n      />\n    ),\n    fte2: (\n      <img\n        src={fte_notice}\n        alt=\"(fte_notice_icon)\"\n        style={{ height: \"12px\" }}\n        title=\"Employee in notice period\"\n      />\n    ),\n    subk0: (\n      <img\n        src={subk_inactive}\n        alt=\"(subk_inactive_icon)\"\n        style={{ height: \"12px\" }}\n        title=\"Ex-Contractor\"\n      />\n    ),\n    subk1: (\n      <img\n        src={subk_active}\n        alt=\"(subk_active_icon)\"\n        style={{ height: \"12px\" }}\n        title=\"Active Contractor\"\n      />\n    ),\n    subk2: (\n      <img\n        src={subk_notice}\n        alt=\"(subk_notice_icon)\"\n        style={{ height: \"12px\" }}\n        title=\"Contractor in notice period\"\n      />\n    ),\n  };\n  const heads = viewDetailsData.map((data) => {\n    const conditions = [\n      \"lvl\",\n      \"execStatus\",\n      \"customerId\",\n      \"oppId\",\n      \"sfOppId\",\n      \"id\",\n      \"isActive\",\n      \"executive_division\",\n      \"supervisor\",\n      \"isProspect\",\n      \"count\",\n      \"isEdit\",\n      \"isDeleted\",\n      \"keyAttr\",\n      \"parentAttr\",\n      \"add_to_call\",\n    ];\n    const Integersvals = [\"upside\", \"oppAmount\", \"calls\", \"closedAmount\"];\n    const exexitives = [\"executive\"];\n    const expandableCols = [\n      \"opportunity\",\n      \"vendor\",\n      \"probability\",\n      \"closeDate\",\n      \"week\",\n      \"comments\",\n    ];\n    const expandOpp = [\"opportunity\"];\n    let header = [];\n\n    toggler =\n      data[\"lvl\"] === 2 || data[\"lvl\"] === 3\n        ? toggler\n        : expanded?.includes(data.customer)\n        ? 1\n        : 0;\n    for (const keys in data) {\n      !conditions?.includes(keys) &&\n        (expanded?.length > 0 ? true : !expandableCols?.includes(keys)) &&\n        header.push(\n          data.id < 0 ? (\n            <th\n              className={keys + \" pipeth \"}\n              key={keys}\n              title={data[keys]}\n              style={{ textAlign: keys === \"opportunity\" ? \"center\" : \"\" }}\n            >\n              {data[keys] ===\n              \"Sales Executive /<br>__iconCust__ Customer __iconProsp__ Prospect\" ? (\n                <div className=\"d-flex align-items-center justify-content-center gap-1\">\n                  <span title={data[keys]}>{data[keys].split(\"/\")[0]}</span> /\n                  <FaCircle\n                    style={{\n                      color: \"#539a71\",\n                    }}\n                  />\n                  {data[keys].split(\"_\")[4]}\n                  <FaCircle\n                    style={{ color: \"#9567c2\", marginLeft: \"5px\" }}\n                  />{\" \"}\n                  {data[keys].split(\"_\")[8]}\n                </div>\n              ) : (\n                \"\"\n              )}\n\n              {Integersvals.includes(keys) ? (\n                <React.Fragment>\n                  <div\n                    title={\n                      data[keys] === \"Amount ($)\"\n                        ? \"Pipeline ($)\"\n                        : data[keys] === \"Closed Amt ($)\"\n                        ? \"Closed ($)\"\n                        : data[keys].split(\"/\")[0]\n                    }\n                  >\n                    {data[keys] === \"Amount ($)\"\n                      ? \"Pipeline ($)\"\n                      : data[keys] === \"Closed Amt ($)\"\n                      ? \"Closed ($)\"\n                      : data[keys].split(\"/\")[0]}\n                  </div>\n                  {data[keys].split(\"_\")[4]}\n                  {data[keys].split(\"_\")[8]}\n                </React.Fragment>\n              ) : (\n                \"\"\n              )}\n              {expandOpp.includes(keys) ? (\n                <Fragment>\n                  {keys === \"opportunity\" ? (\n                    <div title={data[keys]}>\n                      {data[keys].split(\"<br>\")[0]}\n                      <br />\n                      <FaCircle style={{ color: \"#539a71\" }} /> Add to Call\n                    </div>\n                  ) : (\n                    <div title={data[keys]}>{data[keys]}</div>\n                  )}\n                </Fragment>\n              ) : (\n                \"\"\n              )}\n\n              {expandableCols.includes(keys) && keys !== \"opportunity\" ? (\n                <Fragment>\n                  <div title={data[keys]}>{data[keys]}</div>\n                </Fragment>\n              ) : (\n                \"\"\n              )}\n            </th>\n          ) : (\n            <td\n              key={keys}\n              style={{\n                display:\n                  toggler === 0 && (data[\"lvl\"] === 2 || data[\"lvl\"] === 3)\n                    ? \"none\"\n                    : \"\",\n                textAlign:\n                  keys === \"calls\" ||\n                  keys === \"closedAmount\" ||\n                  keys === \"gap\" ||\n                  keys === \"oppAmount\" ||\n                  keys === \"target\" ||\n                  keys === \"upside\" ||\n                  keys === \"probability\"\n                    ? \"end\"\n                    : \"\",\n              }}\n              title={data[keys]}\n            >\n              {Integersvals.includes(keys) ? (\n                <Fragment>\n                  <span\n                    title={parseInt(data[keys]).toLocaleString(\"en-US\")}\n                    style={{ textAlign: \"end\" }}\n                  >\n                    {data[keys] === \" \"\n                      ? data[keys]\n                      : parseInt(data[keys]).toLocaleString(\"en-US\") === \"NaN\"\n                      ? \" \"\n                      : parseInt(data[keys]).toLocaleString(\"en-US\")}\n                  </span>\n                  &nbsp;\n                </Fragment>\n              ) : (\n                <Fragment>\n                  <span\n                    onClick={() => {\n                      clickExpand(data?.customer);\n                    }}\n                  >\n                    {(data[\"lvl\"] === 1 || data[\"lvl\"] === 0) &&\n                      keys === \"customer\" &&\n                      (expanded?.includes(data.customer) ||\n                      (data.customer === \"Summary\" &&\n                        expanded?.length === allcust?.length) ? (\n                        <FaCaretDown\n                          FaCaretDown\n                          style={{ cursor: \"pointer\" }}\n                          title=\"Collapse all\"\n                        />\n                      ) : (\n                        <FaCaretRight\n                          style={{ cursor: \"pointer\" }}\n                          title=\"Expand all\"\n                        />\n                      ))}\n                  </span>\n                  {data[keys] ===\n                  \"__iconCust__ Customer __iconProsp__ Prospect\" ? (\n                    <React.Fragment>\n                      <FaCircle\n                        style={{ color: \"#539a71\", marginTop: \"-2px\" }}\n                      />\n                      {data[keys].split(\"_\")[4]}\n                      <FaCircle\n                        style={{ color: \"#9567c2\", marginTop: \"-2px\" }}\n                      />{\" \"}\n                      {data[keys].split(\"_\")[8]}\n                    </React.Fragment>\n                  ) : (\n                    \"\"\n                  )}\n                  {keys === \"customer\" &&\n                    (data[\"lvl\"] === 2 || data[\"lvl\"] === 3 ? (\n                      data[\"lvl\"] === 2 && (\n                        <span\n                          style={{ paddingLeft: \"20px\", fontWeight: \"100\" }}\n                        >\n                          <FaCircle\n                            style={{\n                              color:\n                                data[\"isProspect\"] === 1 ? \"#9567c2\" : \"green\",\n                            }}\n                          />\n                          &nbsp;\n                          {data[keys].split(\"^&\")[1]}\n                        </span>\n                      )\n                    ) : (\n                      <span style={{ textAlign: \"end\" }}>\n                        {icons[data[\"execStatus\"]]} &nbsp;\n                        {data[keys]}\n                      </span>\n                    ))}\n                </Fragment>\n              )}\n              {expandableCols.includes(keys) && keys !== \"opportunity\" ? (\n                <Fragment>\n                  {keys === \"probability\" && data[\"lvl\"] == 3\n                    ? `${data[keys]} %`\n                    : data[keys]}\n                </Fragment>\n              ) : (\n                \" \"\n              )}\n              {expandOpp.includes(keys) ? (\n                <Fragment>\n                  {data[\"opportunity\"] === \" \" ? (\n                    <span></span>\n                  ) : (\n                    <span>\n                      {data[\"add_to_call\"] === \"1\" &&\n                      data[\"isProspect\"] !== \"1\" ? (\n                        <FaCircle\n                          style={{\n                            color: data[\"isProspect\"] === \"1\" ? \"\" : \"green\",\n                          }}\n                        />\n                      ) : (\n                        \"\"\n                      )}\n                      &nbsp;\n                      <a\n                        href={`https://login.salesforce.com/?ec=302&startURL=%2F0068Z00001dYQcTQAW`}\n                        target=\"_blank\"\n                        title={data[keys]}\n                      >\n                        {data[keys]}\n                      </a>\n                      <i\n                        className=\"cp float-right\"\n                        title=\"View SF Docs\"\n                        style={{\n                          cursor: \"pointer\",\n                          float: \"right\",\n                        }}\n                        onClick={() => {\n                          getSfDocuments(data.sfOppId);\n                          setDocId(data?.sfOppId);\n                          setOppoName(data.opportunity);\n                        }}\n                      >\n                        <MdDescription />\n                      </i>\n                      <i\n                        title=\"Delete opportunity\"\n                        onClick={() => {\n                          deleteOpportunity(data.oppId);\n                        }}\n                      >\n                        {data[\"isDeleted\"] === \"1\" ? (\n                          <RiDeleteBin5Fill\n                            style={{\n                              cursor: \"pointer\",\n                              float: \"right\",\n                              marginTop: \"5px\",\n                            }}\n                          />\n                        ) : (\n                          \"\"\n                        )}\n                      </i>\n                    </span>\n                  )}\n                </Fragment>\n              ) : (\n                \" \"\n              )}\n            </td>\n          )\n        );\n    }\n\n    return (\n      <tr\n        className={data.opportunity == \" \" && data.lvl === 1 ? \"pink\" : \"red \"}\n        key={data.id + data.oppId + data.customerId + data.sfOppId}\n      >\n        {header}\n      </tr>\n    );\n  });\n\n  const handleOnExport = () => {\n    const customColumnOrder = [\n      { key: \"executive_division\", headers: [\"Division\"] },\n      { key: \"customer\", headers: [\"Sales Executive\", \"Customer\"] },\n      { key: \"supervisor\", headers: [\"Supervisor\"] },\n      { key: \"opportunity\", headers: [\"Opportunity Add To Call\"] },\n      { key: \"isDeleted\", headers: [\"Deletable\"] },\n      { key: \"vendor\", headers: [\"Vendor\"] },\n      { key: \"probability\", headers: [\"Prob %\"] },\n      { key: \"closeDate\", headers: [\"Close Date\"] },\n      { key: \"oppAmount\", headers: [\"Amount ($)\"] },\n      { key: \"calls\", headers: [\"Call ($)\"] },\n      { key: \"upside\", headers: [\"Upside ($)\"] },\n      { key: \"closedAmount\", headers: [\"Closed Amt ($)\"] },\n      { key: \"week\", headers: [\"Week Updated\"] },\n      { key: \"comments\", headers: [\"Comments\"] },\n    ];\n\n    const dataKeys = Object.keys(viewDetailsData[0]);\n    const keyValues = {};\n    customColumnOrder.forEach(({ key }) => {\n      keyValues[key] = viewDetailsData.slice(1).map((item) => {\n        const value = item[key]; // Handle empty values if necessary\n        return value?.split(\"^&\"); // Split the value based on the delimiter \"^&\"\n      });\n    });\n\n    // Combine the split values with the corresponding headers\n    const customColumnHeaders = customColumnOrder\n      .map(({ key, headers }) => {\n        if (key === \"customer\") {\n          return headers.map((header, index) => ({\n            key: key,\n            header: header,\n            values: keyValues[key].map((value) => value[index]),\n          }));\n        } else {\n          return { key: key, header: headers[0] };\n        }\n      })\n      .flat();\n    const filteredData = viewDetailsData\n      .slice(1)\n      .filter(\n        (item) => item.lvl !== 1 && item.lvl !== 2 && item.opportunity != \"\"\n      )\n      .map((item) => {\n        const filteredItem = Object.fromEntries(\n          Object.entries(item).filter(([key]) => dataKeys.includes(key))\n        );\n        if (\n          filteredItem[\"oppAmount\"] === \"\" ||\n          filteredItem[\"oppAmount\"] === \"0.00\"\n        ) {\n          filteredItem[\"oppAmount\"] = 0;\n        }\n        if (filteredItem[\"calls\"] === \" \" || filteredItem[\"calls\"] === \"0.00\") {\n          filteredItem[\"calls\"] = 0;\n        }\n        if (filteredItem[\"upside\"] === \"\" || filteredItem[\"upside\"] == \"0.00\") {\n          filteredItem[\"upside\"] = 0;\n        }\n        if (\n          filteredItem[\"closedAmount\"] === \" \" ||\n          filteredItem[\"closedAmount\"] === \"0.00\"\n        ) {\n          filteredItem[\"closedAmount\"] = 0;\n        }\n        if (filteredItem[\"isDeleted\"] === \"0\") {\n          filteredItem[\"isDeleted\"] = \"No\";\n        }\n        if (filteredItem[\"isDeleted\"] === \"1\") {\n          filteredItem[\"isDeleted\"] = \"Yes\";\n        }\n\n        return filteredItem;\n      });\n    const workbook = new ExcelJS.Workbook();\n    const worksheet = workbook.addWorksheet(\"SalesSoftware\");\n    const headerRow = worksheet.addRow(\n      customColumnHeaders.map(({ header }) => header)\n    );\n\n    for (let i = 0; i < customColumnHeaders.length; i++) {\n      const key = customColumnHeaders[i].key;\n      if (key === \"customer\") {\n        const values = customColumnHeaders[i].values;\n        worksheet.getColumn(i + 1).values = [\n          headerRow.getCell(i + 1).value,\n          ...values,\n        ];\n      } else {\n        const values = filteredData.map((item) => item[key]);\n        worksheet.getColumn(i + 1).values = [\n          headerRow.getCell(i + 1).value,\n          ...values,\n        ];\n      }\n    }\n    const leftAlignedColumns = [\n      \"oppAmount\",\n      \"calls\",\n      \"upside\",\n      \"closedAmount\",\n      \"probability\",\n    ];\n    leftAlignedColumns.forEach((key) => {\n      const columnIndex = customColumnHeaders.findIndex(\n        (header) => header.key === key\n      );\n      if (columnIndex !== -1) {\n        const column = worksheet.getColumn(columnIndex + 1);\n        column.alignment = { horizontal: \"right\" };\n      }\n    });\n    const boldRow = [1];\n    boldRow.forEach((index) => {\n      const row = worksheet.getRow(index);\n      row.font = { bold: true };\n    });\n    workbook.xlsx.writeBuffer().then((buffer) => {\n      saveAs(new Blob([buffer]), \"SalesSoftware.xlsx\");\n    });\n  };\n\n  return (\n    <div className=\"col-lg-12 col-md-12 col-sm-12 customCard\">\n      {open ? <Loader handleAbort={handleAbort} /> : \"\"}\n      {FilterName !== undefined &&\n        filterExectiveName?.length == 1 &&\n        filtertrue == true && (\n          <div className=\"\" style={{ display: \"flex\", alignItems: \"center\" }}>\n            <span style={{ margin: \"0 5px\" }}>\n              Calls Summary of &nbsp;\n              <b style={{ color: \"#297ab0\", fontSize: \"15px\" }}>{FilterName}</b>\n            </span>\n            <span style={{ margin: \"0 3px\" }}>for :</span>\n            <span>\n              <b style={{ color: \"#297ab0\", fontSize: \"15px\" }}>{FilterName}</b>\n            </span>\n            <span style={{ margin: \"0 3px\" }}>for :</span>\n            <span>\n              <b style={{ color: \"#297ab0\", fontSize: \"15px\" }}>\n                {srchQuat.quat}{\" \"}\n              </b>\n            </span>\n          </div>\n        )}\n      {filterExectiveName?.length > 1 && filtertrue == true && (\n        <div className=\"\" style={{ display: \"flex\", alignItems: \"center\" }}>\n          <span style={{ margin: \"0 5px\" }}>\n            Calls Summary of Selected Executives for :&nbsp;\n            <b style={{ color: \"#297ab0\", fontSize: \"15px\" }}>\n              {srchQuat.quat}\n            </b>\n          </span>{\" \"}\n        </div>\n      )}\n      <div className=\"d-flex align-items-center justify-content-between mb-2\">\n        {filtertrue == false && (\n          <div>\n            <p>\n              Details of SE :{\" \"}\n              <b style={{ color: \"#297ab0\", fontSize: \"15px\" }}>{\"<<ALL>>\"}</b>{\" \"}\n              for :{\" \"}\n              <b style={{ color: \"#297ab0\", fontSize: \"15px\" }}>\n                {srchQuat.quat}\n              </b>\n            </p>\n            <p className=\"d-flex align-items-center\">\n              <span\n                style={{ color: \"#ffcfcf\" }}\n                className=\"fa fa-circle me-1\"\n                title=\"Leave\"\n              >\n                <FaCircle fontSize={\"10px\"} />\n              </span>\n              These opportunities can be deleted\n            </p>\n          </div>\n        )}\n        <RiFileExcel2Line\n          size=\"1.5em\"\n          title=\"Export to Excel\"\n          style={{\n            color: \"green\",\n            fontSize: \"16px\",\n          }}\n          cursor=\"pointer\"\n          onClick={handleOnExport}\n        />\n      </div>\n\n      <div\n        className=\"darkHeader\"\n        style={{\n          // maxWidth: \"fit-content\",\n          paddingRight: \"0px !important\",\n          maxHeight: \"400px\",\n          overflowY: \"scroll\",\n          width: \"100%\",\n        }}\n      >\n        <table\n          className=\"table table-bordered viewSecondTable\"\n          style={{ width: \"100%\" }}\n        >\n          <thead>{heads}</thead>\n        </table>\n      </div>\n      {docDisplay && (\n        <div className=\"col-md-12 mt-2\">\n          <span>\n            <b style={{ color: \"black\" }}> Sf Documents -</b>\n            <b style={{ color: \"rgb(46, 136, 197)\", fontSize: \"13px\" }}>\n              {oppoName}\n            </b>\n          </span>\n        </div>\n      )}\n      {docDisplay == true ? (\n        <DocumentTable docId={docId} sfDocs={sfDocs} />\n      ) : (\n        \"\"\n      )}\n    </div>\n  );\n}\n","import Highcharts from \"highcharts\";\nimport HighchartsReact from \"highcharts-react-official\";\n\nexport default function WOWChart({ yAxisAmt, xAxis, executive, WOW }) {\n  const summaryChart = {\n    lang: {\n      thousandsSep: \",\",\n      decimalPoint: \".\",\n    },\n    chart: {\n      type: \"line\",\n      width: 670,\n    },\n    title: {\n      text:\n        \"WoW Summary Analysis \" + (executive === \"\" ? \"\" : \"of \") + executive,\n    },\n    xAxis: {\n      categories: xAxis,\n      crosshair: true,\n      title: {\n        text: \"Weeks\",\n      },\n    },\n    yAxis: {\n      allowDecimals: true,\n      padding: 1,\n      title: {\n        text: \"Amount\",\n      },\n    },\n\n    tooltip: {\n      formatter: function () {\n        const formattedValue = Highcharts.numberFormat(this.y, 0, \".\", \",\");\n        return `${this.x} <br/>${this.series.name} ${formattedValue} `;\n      },\n    },\n\n    plotOptions: {\n      series: {\n        label: {\n          connectorAllowed: false,\n        },\n      },\n    },\n    series: yAxisAmt,\n  };\n  return (\n    <div className=\"col-lg-12 col-md-12 col-sm-12 customCard\">\n      <HighchartsReact highcharts={Highcharts} options={summaryChart} />\n    </div>\n  );\n}\n","import React from \"react\";\nimport ReactQuill from \"react-quill\";\nimport { CModal } from \"@coreui/react\";\nimport { CModalBody } from \"@coreui/react\";\nimport { CModalHeader } from \"@coreui/react\";\nimport { CModalTitle } from \"@coreui/react\";\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { environment } from \"../../environments/environment\";\n\nimport axios from \"axios\";\nimport { ImCross } from \"react-icons/im\";\nimport { FaSave } from \"react-icons/fa\";\n\nconst WowDisplayPopUp = (props) => {\n  const { openPopup, setOpenPopup, WOW, rowData } = props;\n  const [deptId, setdeptId] = useState([]);\n  const [selectedDeptid, setSelectedDeptId] = useState([]);\n  const [searchDataB, setSearchDataB] = useState([]);\n  const [notesData, setNotesData] = useState({});\n  const [value, setValue] = useState(\"\");\n  const baseUrl = environment.baseUrl;\n\n  const editorToolBar = {\n    toolbar: [\n      [\n        { header: [false, 1, 2, 3, 4, 5, 6] },\n        // {tooltip:[\"ee\"]},\n        // { size: [] },\n        { font: [] },\n        { color: [] },\n        { bold: { tooltip: \"Bold (Ctrl+B)\" } },\n        \"italic\",\n        \"underline\",\n        { list: \"ordered\" },\n        { list: \"bullet\" },\n        { script: \"sub\" },\n        { script: \"super\" },\n        { indent: \"-1\" },\n        { indent: \"+1\" },\n        { align: null },\n        { align: \"center\" },\n        { align: \"right\" },\n        \"strike\",\n        \"link\",\n        \"code-block\",\n        \"clean\",\n      ],\n    ],\n  };\n  const getNotesData = () => {\n    axios({\n      method: \"get\",\n      url: baseUrl + `/SalesMS/services/getExecutiveNotes?rid=${rowData.id}`,\n    }).then((res) => {\n      var resp = res.data;\n      setNotesData(resp);\n      const defaultNotes = resp[0]?.notes || \"\";\n      setValue(defaultNotes);\n    });\n  };\n\n  const saveNotesData = () => {\n    const cleanedNotes = value.replace(/<\\/?[^>]+(>|$)/g, \"\");\n    const requestData = {\n      resId: rowData.id,\n      notes: cleanedNotes,\n      loggedUserId: localStorage.getItem(\"resId\"),\n    };\n    axios({\n      method: \"POST\",\n      url: baseUrl + `/SalesMS/pmo/savenotes`,\n      data: requestData,\n    }).then((resp) => {\n      var data = resp.data;\n      setNotesData(data);\n      setOpenPopup(false);\n    });\n  };\n\n  useEffect(() => {\n    getNotesData();\n  }, []);\n\n  return (\n    <div>\n      {console.log(\"in popup\")}\n      <CModal\n        visible={openPopup}\n        size=\"xl\"\n        onClose={() => setOpenPopup(false)}\n        backdrop={\"static\"}\n      >\n        <CModalHeader className=\"\" style={{ cursor: \"all-scroll\" }}>\n          <CModalTitle>\n            <span className=\"\"> Notes - {rowData.executive} </span>\n          </CModalTitle>\n        </CModalHeader>\n        <CModalBody>\n          {console.log(notesData)}\n          {console.log(notesData[0]?.notes)}\n          <ReactQuill\n            className=\"\"\n            theme=\"snow\"\n            value={value}\n            name=\"notes\"\n            // data-toggle=\"tooltip\"\n            // title={\"link\"}\n            defaultValue={notesData[0]?.notes}\n            id=\"editor-container\"\n            onChange={(e) => {\n              setValue(e);\n            }}\n            modules={editorToolBar}\n          />\n          <div className=\"col-md-12 col-sm-12 col-xs-12 my-2 btn-container center\">\n            <button\n              type=\"button\"\n              className=\"btn btn-primary\"\n              onClick={() => {\n                saveNotesData();\n              }}\n            >\n              <FaSave />\n              Save{\" \"}\n            </button>\n            <button\n              type=\"button\"\n              className=\"btn btn-primary\"\n              // onClick={setOpenPopup(false)}\n              onClick={() => {\n                setOpenPopup(false);\n              }}\n            >\n              <ImCross fontSize={\"11px\"} />\n              Cancel{\" \"}\n            </button>\n          </div>\n        </CModalBody>\n      </CModal>\n    </div>\n  );\n};\nexport default WowDisplayPopUp;\n","import { Fragment, useEffect, useRef, useState } from \"react\";\nimport ViewDetailsTable from \"./DetailsTable\";\nimport fte_active from \"../../assets/images/empstatusIcon/fte_active.png\";\nimport fte_inactive from \"../../assets/images/empstatusIcon/fte_inactive.png\";\nimport fte_notice from \"../../assets/images/empstatusIcon/fte_notice.png\";\nimport subk_active from \"../../assets/images/empstatusIcon/subk_active.png\";\nimport subk_inactive from \"../../assets/images/empstatusIcon/subk_inactive.png\";\nimport subk_notice from \"../../assets/images/empstatusIcon/subk_notice.png\";\nimport { FaCaretDown, FaCaretRight } from \"react-icons/fa\";\n\nimport WOWChart from \"./WoWChart\";\nimport { MdOutlineEditNote } from \"react-icons/md\";\nimport axios from \"axios\";\nimport { environment } from \"../../environments/environment\";\nimport { BsFillExclamationCircleFill } from \"react-icons/bs\";\nimport WowDisplayPopUp from \"./WowDisplayPopUp\";\nimport Loader from \"../Loader/Loader\";\nimport { RiFileExcel2Line } from \"react-icons/ri\";\nimport ExcelJS from \"exceljs\";\n\nexport default function WoWTable({ WOW, wowtype, wowDate, setWOwDate }) {\n  const baseUrl = environment.baseUrl;\n  const allWeek = WOW.filter((item) => item.lvl === 1).map((item) => {\n    return { week: item.weekno, date: item.date };\n  });\n  const allexec = WOW.filter((item) => item.lvl === 1).map(\n    (item) => item.executive\n  );\n\n  const [vendorDropdown, setvendorDropdown] = useState([]);\n  const [openPopup, setOpenPopup] = useState(false);\n  const [rowData, setRowData] = useState({});\n  const [sFOwnerDivisionsDropdown, setSFOwnerDivisionsDropdown] = useState([]);\n  const [executive, setexecutive] = useState(\"\");\n  const [expanded, setexpanded] = useState([]);\n  const [expandedexec, setexpandedexec] = useState([]);\n  const [viewDetailsData, setviewDetailsData] = useState([]);\n  const [weekselected, setweekselected] = useState(\"\");\n  const [exid, setexid] = useState(\"\");\n  const [loader, setLoader] = useState(false);\n  const clickExpand = (week) => {\n    if (week === \"Week\") {\n      setexpanded((prevState) => {\n        return prevState.length === allWeek.length\n          ? []\n          : allWeek.map((item) => item.week);\n      });\n    } else {\n      setexpanded((prevState) => {\n        return prevState.includes(week)\n          ? prevState.filter((item) => item !== week)\n          : [...prevState, week];\n      });\n    }\n  };\n  const clickExpandexec = (exec) => {\n    if (exec === \"Sales Executive\") {\n      setexpandedexec((prevState) => {\n        return prevState.length === allexec.length ? [] : allexec;\n      });\n    } else {\n      setexpandedexec((prevState) => {\n        return prevState.includes(exec)\n          ? prevState.filter((item) => item !== exec)\n          : [...prevState, exec];\n      });\n    }\n  };\n\n  let toggler = 0;\n  const icons = {\n    fte0: (\n      <img\n        src={fte_inactive}\n        alt=\"(fte_inactive_icon)\"\n        style={{ height: \"12px\" }}\n        title=\"Ex-Employee\"\n      />\n    ),\n    fte1: (\n      <img\n        src={fte_active}\n        alt=\"(fte_active_icon)\"\n        style={{ height: \"12px\" }}\n        title=\"Active Employee\"\n      />\n    ),\n    fte2: (\n      <img\n        src={fte_notice}\n        alt=\"(fte_notice_icon)\"\n        style={{ height: \"12px\" }}\n        title=\"Employee in notice period\"\n      />\n    ),\n    subk0: (\n      <img\n        src={subk_inactive}\n        alt=\"(subk_inactive_icon)\"\n        style={{ height: \"12px\" }}\n        title=\"Ex-Contractor\"\n      />\n    ),\n    subk1: (\n      <img\n        src={subk_active}\n        alt=\"(subk_active_icon)\"\n        style={{ height: \"12px\" }}\n        title=\"Active Contractor\"\n      />\n    ),\n    subk2: (\n      <img\n        src={subk_notice}\n        alt=\"(subk_notice_icon)\"\n        style={{ height: \"12px\" }}\n        title=\"Contractor in notice period\"\n      />\n    ),\n  };\n\n  const getvendor = () => {\n    axios\n      .get(baseUrl + \"/CommonMS/master/getSalesVendors\")\n      .then((resp) => {\n        const data = resp.data;\n        const dropdownOptions = data.map((item) => {\n          return {\n            value: item,\n            label: item,\n          };\n        });\n        setvendorDropdown(dropdownOptions);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  const getSFOwnerDivisionsDropdown = () => {\n    axios\n      .get(baseUrl + `/SalesMS/MasterController/SFOwnerDivisions`)\n      .then((resp) => {\n        const data = resp.data;\n        setSFOwnerDivisionsDropdown(() => String(data.map((item) => item.id)));\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n  const viewDetailsDataPayload = {\n    mode: \"view\",\n    from: \"2023-07-01\",\n    vendors: vendorDropdown,\n    divisions: sFOwnerDivisionsDropdown,\n    executives: exid,\n    type: \"wow\",\n    detail: \"true\",\n    saveSE: \"false\",\n    reportRunId: \"205010\",\n    optType: -1,\n    quarter: -1,\n    status: -1,\n    duration2: -1,\n    measures: -1,\n    monthsel: -1,\n    viewByTime: -1,\n    fyear: -1,\n    customers: -1,\n    prospects: -1,\n    practices: -1,\n    countries: -1,\n    customerType: -1,\n    summary: -1,\n    showBy: \"week\",\n    aelocation: -1,\n    engComp: -1,\n    Divisions: -1,\n    accOwner: -1,\n    newCust: -1,\n    accType: -1,\n  };\n\n  const getviewDetailsData = () => {\n    setLoader(false);\n    axios\n      .post(\n        baseUrl + `/SalesMS/software/getSalesSoftwareDataDetails`,\n        viewDetailsDataPayload\n      )\n      .then((resp) => {\n        const data = resp.data.data;\n        setLoader(false);\n        const array = [\n          \"id\",\n          \"executive_division\",\n          \"execStatus\",\n          \"supervisor\",\n          \"customerId\",\n          \"customer\",\n          \"isProspect\",\n          \"oppId\",\n          \"sfOppId\",\n          \"opportunity\",\n          \"vendor\",\n          \"probability\",\n          \"closeDate\",\n          \"oppAmount\",\n          \"calls\",\n          \"upside\",\n          \"closedAmount\",\n          \"week\",\n          \"comments\",\n          \"lvl\",\n          \"count\",\n          \"isEdit\",\n          \"isDeleted\",\n          \"keyAttr\",\n          \"parentAttr\",\n          \"add_to_call\",\n          \"isActive\",\n        ];\n        const newArray = data.map((item) => {\n          let k = JSON.parse(JSON.stringify(item, array, 4));\n          return k;\n        });\n\n        setviewDetailsData(newArray);\n        setreportRunId(resp.data.reportRunId);\n        // setsearching(false);\n      })\n      .catch((resp) => {});\n  };\n\n  const openPipeline = [];\n  const calls = [];\n  const closedAmount = [];\n  const upside = [];\n  const target = [];\n  const xAxis = [];\n\n  const weekheads = WOW.map((data) => {\n    if (executive === data.executive && data.id > 0) {\n      openPipeline.push(parseInt(data.oppAmount));\n      calls.push(parseInt(data.calls));\n      closedAmount.push(parseInt(data.closedAmount));\n      upside.push(parseInt(data.upside));\n      target.push(parseInt(data.target));\n      xAxis.push(data.weekno);\n    }\n    const conditions = [\n      \"lvl\",\n      \"execStatus\",\n      \"id\",\n      \"count\",\n      \"date\",\n      \"supervisor\",\n    ];\n    const nonIntegers = [\"weekno\", \"executive\", \"executive\"];\n    const expandableCols = [\"executive\"];\n    let header = [];\n\n    toggler =\n      data[\"lvl\"] === 2 ? toggler : expanded.includes(data.weekno) ? 1 : 0;\n\n    for (const keys in data) {\n      !conditions.includes(keys) &&\n        (expanded.length > 0 ? true : !expandableCols.includes(keys)) &&\n        header.push(\n          data.id < 0 ? (\n            <th\n              className={keys + \" pipeth wowFirstTh\"}\n              key={keys}\n              title={data[keys]}\n            >\n              <span\n                onClick={() => {\n                  clickExpand(data.weekno);\n                }}\n                title={data[keys]}\n              >\n                {keys === \"weekno\" &&\n                  (expanded.length === allWeek.length ? (\n                    <FaCaretDown\n                      style={{ cursor: \"pointer\" }}\n                      title=\"Collapse all\"\n                    />\n                  ) : (\n                    <FaCaretRight\n                      style={{ cursor: \"pointer\" }}\n                      title=\"Expand all\"\n                    />\n                  ))}\n              </span>\n              {data[keys]}\n            </th>\n          ) : (\n            <td\n              className=\"wowdata\"\n              key={keys}\n              title={data[keys]}\n              style={{\n                display: toggler === 0 && data[\"lvl\"] === 2 ? \"none\" : \"\",\n                textAlign:\n                  keys === \"calls\" ||\n                  keys === \"closedAmount\" ||\n                  keys === \"gap\" ||\n                  keys === \"oppAmount\" ||\n                  keys === \"target\" ||\n                  keys === \"upside\"\n                    ? \"end\"\n                    : \"\",\n              }}\n            >\n              {nonIntegers.includes(keys) ? (\n                <Fragment>\n                  {keys === \"executive\" && (\n                    <span>{icons[data[\"execStatus\"]]}</span>\n                  )}\n                  &nbsp;\n                  <span\n                    className=\"expanddata\"\n                    onClick={() => {\n                      clickExpand(data.weekno);\n                    }}\n                  >\n                    {data[\"lvl\"] === 1 &&\n                      keys === \"weekno\" &&\n                      (expanded.includes(data.weekno) ? (\n                        <FaCaretDown\n                          style={{ cursor: \"pointer\" }}\n                          title=\"Collapse\"\n                        />\n                      ) : (\n                        <FaCaretRight\n                          style={{ cursor: \"pointer\" }}\n                          title=\"Expand\"\n                        />\n                      ))}\n                  </span>\n                  {(keys === \"weekno\" || keys === \"executive\") &&\n                  data[\"lvl\"] === 2 ? (\n                    \"\"\n                  ) : (\n                    <span>{data[keys]}</span>\n                  )}\n                  {keys === \"executive\" &&\n                    data[\"lvl\"] === 2 &&\n                    data[\"executive\"] !== \"\" && (\n                      // <d>\n                      <span\n                        className=\"linkSty\"\n                        onClick={() => {\n                          setexecutive(data.executive);\n                          setweekselected({\n                            quat: data.weekno,\n                            date: data.date,\n                          });\n                          setexid(data.id);\n                        }}\n                      >\n                        {data[keys]}\n\n                        <MdOutlineEditNote\n                          style={{ float: \"right\", cursor: \"pointer\" }}\n                          size={\"1.5em\"}\n                          title=\"Notes\"\n                          onClick={() => {\n                            setOpenPopup(true);\n                            setRowData(data);\n                          }}\n                        />\n                      </span>\n                    )}\n                  {keys == \"executive\" &&\n                    data[\"lvl\"] === 1 &&\n                    data[\"executive\"] !== \"\" && (\n                      <MdOutlineEditNote\n                        style={{ float: \"right\", cursor: \"pointer\" }}\n                        size={\"1.5em\"}\n                        title=\"Notes\"\n                        onClick={() => {\n                          setexecutive(data.executive);\n                          setweekselected({\n                            quat: data.weekno,\n                            date: data.date,\n                          });\n                          setexid(data.id);\n                          {\n                            data[keys];\n                          }\n                        }}\n                      />\n                    )}\n                </Fragment>\n              ) : (\n                <Fragment>\n                  <span>{parseInt(data[keys]).toLocaleString(\"en-US\")}</span>\n                  &nbsp;\n                </Fragment>\n              )}\n            </td>\n          )\n        );\n    }\n\n    return (\n      <tr\n        className=\"wowtableData\"\n        // style={{ backgroundColor: \"red\" }}\n        style={{ backgroundColor: data.executive ? \"\" : \"#d4e7fb\" }}\n        key={data.id + data.weekno + data.date + data.executive}\n      >\n        {header}\n      </tr>\n    );\n  });\n\n  const execheads = WOW.map((data) => {\n    const conditions = [\n      \"lvl\",\n      \"execStatus\",\n      \"id\",\n      \"count\",\n      \"date\",\n      \"supervisor\",\n    ];\n    const nonIntegers = [\"weekno\", \"executive\", \"executive\"];\n    const expandableCols = [\"weekno\"];\n    let header = [];\n\n    toggler =\n      data[\"lvl\"] === 2\n        ? toggler\n        : expandedexec.includes(data.executive)\n        ? 1\n        : 0;\n\n    for (const keys in data) {\n      !conditions.includes(keys) &&\n        (expandedexec.length > 0 ? true : !expandableCols.includes(keys)) &&\n        header.push(\n          data.id < 0 ? (\n            <th\n              className={keys + \" pipeth wowFirstTh\"}\n              key={keys}\n              title={data[keys]}\n            >\n              <span\n                onClick={() => {\n                  clickExpandexec(data.executive);\n                }}\n                title={data[keys]}\n              >\n                {keys === \"executive\" &&\n                  (expandedexec.length === allexec.length ? (\n                    <FaCaretDown\n                      style={{ cursor: \"pointer\" }}\n                      title=\"Collapse\"\n                    />\n                  ) : (\n                    <FaCaretRight\n                      style={{ cursor: \"pointer\" }}\n                      title=\"Expand\"\n                    />\n                  ))}\n              </span>\n              {data[keys]}\n            </th>\n          ) : (\n            <td\n              key={keys}\n              title={data[keys]}\n              style={{\n                display: toggler === 0 && data[\"lvl\"] === 2 ? \"none\" : \"\",\n                textAlign:\n                  keys === \"calls\" ||\n                  keys === \"closedAmount\" ||\n                  keys === \"gap\" ||\n                  keys === \"oppAmount\" ||\n                  keys === \"target\" ||\n                  keys === \"upside\"\n                    ? \"end\"\n                    : \"\",\n              }}\n            >\n              {nonIntegers.includes(keys) ? (\n                <Fragment>\n                  {keys === \"executive\" && data[\"lvl\"] !== 2 && (\n                    <span>\n                      {\" \"}\n                      &nbsp;\n                      <span>\n                        <MdOutlineEditNote\n                          style={{ float: \"right\", cursor: \"pointer\" }}\n                          size={\"1.5em\"}\n                          title=\"Notes\"\n                          onClick={() => {\n                            setOpenPopup(true);\n                            setRowData(data);\n                          }}\n                        />\n                      </span>\n                    </span>\n                  )}\n                  <span> </span>\n                  <span\n                    onClick={() => {\n                      clickExpandexec(data.executive);\n                    }}\n                    title={data[keys]}\n                  >\n                    {/* Check for specific conditions and render appropriate icons */}\n                    {data[\"lvl\"] === 1 && keys === \"executive\" && (\n                      <Fragment>\n                        {expandedexec.includes(data.executive) ? (\n                          <FaCaretDown\n                            style={{ cursor: \"pointer\" }}\n                            title=\"Collapse\"\n                          />\n                        ) : (\n                          <FaCaretRight\n                            style={{ cursor: \"pointer\" }}\n                            title=\"Expand\"\n                          />\n                        )}\n                        &nbsp;\n                        <span>{icons[data[\"execStatus\"]]}</span>\n                      </Fragment>\n                    )}\n                  </span>{\" \"}\n                  &nbsp;\n                  {keys === \"executive\" && data[\"lvl\"] === 2 ? (\n                    \"\"\n                  ) : (\n                    <span>\n                      <span title={data[keys]}>{data[keys]}</span>\n                    </span>\n                  )}\n                </Fragment>\n              ) : (\n                <Fragment>\n                  <span>{parseInt(data[keys]).toLocaleString(\"en-US\")}</span>\n                  &nbsp;\n                </Fragment>\n              )}\n            </td>\n          )\n        );\n    }\n\n    return (\n      <tr\n        className={data.lvl == 1 ? \"pink\" : \"red\"}\n        style={{ backgroundColor: data.executive ? \"\" : \"#d4e7fb\" }}\n        key={data.id + data.weekno + data.date + data.executive}\n      >\n        {header}\n      </tr>\n    );\n  });\n  const heads = wowtype === \"week\" ? weekheads : execheads;\n\n  const yAxisAmt = [];\n  yAxisAmt.push({\n    name: \"Open Pipeline\",\n    data: openPipeline,\n    description: openPipeline,\n  });\n  yAxisAmt.push({\n    name: \"Calls\",\n    data: calls,\n    description: calls,\n  });\n  yAxisAmt.push({\n    name: \"Closed Amount\",\n    data: closedAmount,\n    description: closedAmount,\n  });\n  yAxisAmt.push({\n    name: \"Upside\",\n    data: upside,\n    description: upside,\n  });\n  yAxisAmt.push({\n    name: \"Target\",\n    data: target,\n    description: target,\n  });\n\n  useEffect(() => {\n    getviewDetailsData();\n    setLoader(false);\n  }, [weekselected, executive, exid]);\n\n  useEffect(() => {\n    getvendor();\n    getSFOwnerDivisionsDropdown();\n  }, []);\n  const exportExcel = () => {\n    import(\"xlsx\").then((xlsx) => {\n      const worksheet = xlsx.utils.json_to_sheet(WOW);\n      const workbook = { Sheets: { data: worksheet }, SheetNames: [\"data\"] };\n      const excelBuffer = xlsx.write(workbook, {\n        bookType: \"xlsx\",\n        type: \"array\",\n      });\n      saveAsExcelFile(excelBuffer, \"SalesSoftware\");\n    });\n  };\n  const saveAsExcelFile = (buffer, fileName) => {\n    import(\"file-saver\").then((module) => {\n      if (module && module.default) {\n        let EXCEL_TYPE =\n          \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8\";\n        let EXCEL_EXTENSION = \".xlsx\";\n        const data = new Blob([buffer], {\n          type: EXCEL_TYPE,\n        });\n\n        module.default.saveAs(\n          data,\n          fileName + \"_export_\" + new Date().getTime() + EXCEL_EXTENSION\n        );\n      }\n    });\n  };\n  const handleOnExport = () => {\n    const excludeProperties = [\"date\", \"lvl\", \"count\", \"execStatus\", \"id\"];\n\n    const columnHeaders = [\n      \"Week\",\n      \"Sales Executive\",\n      \"Supervisor\",\n      \"Target ($)\",\n      \"Open Pipeline ($)\",\n      \"Calls ($)\",\n      \"Upside ($)\",\n      \"Gap ($)\",\n      \"Closed Amt ($)\",\n    ];\n\n    const headerRow1 = columnHeaders;\n\n    const filteredData = WOW?.slice(1)\n      .filter((item) => item.executive != \"\")\n      .map((item) => {\n        const filteredItem = Object.fromEntries(\n          Object.entries(item).filter(\n            ([key]) => !excludeProperties.includes(key)\n          )\n        );\n        if (filteredItem[\"weekno\"]) {\n          const dateParts = filteredItem[\"weekno\"].split(\"-\");\n          if (dateParts.length === 3) {\n            const day = dateParts[0];\n            const month = dateParts[1];\n            const year = dateParts[2]; // Get the last 2 digits of the year\n            filteredItem[\"weekno\"] = `${day}-${month}-${year}`;\n          }\n        }\n\n        return filteredItem;\n      });\n\n    // Sort the data by \"weekno\" in descending order\n    filteredData.sort((a, b) => {\n      const weekA = new Date(b.weekno);\n      const weekB = new Date(a.weekno);\n      return weekA - weekB;\n    });\n\n    const dataRows = filteredData.map((item) => Object.values(item));\n\n    const workbook = new ExcelJS.Workbook();\n    const worksheet = workbook.addWorksheet(\"SalesSoftware\");\n    const headerRow = worksheet.addRow(headerRow1);\n    const rightAlignColumns = [3, 4, 5, 6, 7, 8]; // Adjust these indices accordingly\n\n    for (let i = 0; i < dataRows.length; i++) {\n      const row = worksheet.addRow(dataRows[i]);\n\n      // Adjust alignment for specific columns\n      for (let colIndex = 1; colIndex <= headerRow1.length; colIndex++) {\n        const column = worksheet.getColumn(colIndex);\n        if (rightAlignColumns.includes(colIndex - 1)) {\n          column.alignment = { horizontal: \"right\" };\n        }\n      }\n    }\n\n    // for (let i = 0; i < dataRows.length; i++) {\n    //   const row = worksheet.addRow(dataRows[i]);\n    // }\n\n    const boldRow = [1];\n    boldRow.forEach((index) => {\n      const row = worksheet.getRow(index);\n      row.font = { bold: true };\n    });\n\n    // Save the workbook\n    workbook.xlsx.writeBuffer().then((buffer) => {\n      saveAs(new Blob([buffer]), \"SalesSoftware.xlsx\");\n    });\n  };\n  //=============Sales Export Data=======================\n\n  const handleOnExport1 = () => {\n    const excludeProperties = [\"date\", \"lvl\", \"count\", \"execStatus\", \"id\"];\n\n    const columnHeaders = [\n      \"Sales Executive\",\n      \"Supervisor\",\n      \"Week\",\n      \"Target ($)\",\n      \"Open Pipeline ($)\",\n      \"Calls ($)\",\n      \"Upside ($)\",\n      \"Gap ($)\",\n      \"Closed Amt ($)\",\n    ];\n\n    const filteredData = WOW?.slice(1)\n      .filter((item) => item.executive != \"\" && item.lvl !== 1)\n      .map((item) => {\n        const filteredItem = Object.fromEntries(\n          Object.entries(item).filter(\n            ([key]) => !excludeProperties.includes(key)\n          )\n        );\n        if (filteredItem[\"weekno\"]) {\n          const dateParts = filteredItem[\"weekno\"].split(\"-\");\n          if (dateParts.length === 3) {\n            const day = dateParts[0];\n            const month = dateParts[1];\n            const year = dateParts[2]; // Get the last 2 digits of the year\n            filteredItem[\"weekno\"] = `${day}-${month}-${year}`;\n          }\n        }\n\n        return filteredItem;\n      });\n    filteredData.sort((a, b) => {\n      // Compare the \"executive\" properties in alphabetical order\n      const executiveA = a.executive?.toLowerCase(); // Convert to lowercase for case-insensitive sorting\n      const executiveB = b.executive?.toLowerCase();\n\n      if (executiveA < executiveB) {\n        return -1;\n      }\n      if (executiveA > executiveB) {\n        return 1;\n      }\n\n      // If \"executive\" is equal, sort by \"weekno\" in descending order\n      const weekA = new Date(b.weekno);\n      const weekB = new Date(a.weekno);\n\n      if (weekA < weekB) {\n        return -1;\n      }\n      if (weekA > weekB) {\n        return 1;\n      }\n\n      return 0;\n    });\n\n    const dataRows = filteredData.map((item) => [\n      item[\"executive\"],\n      item[\"supervisor\"],\n      item[\"weekno\"],\n      item[\"target\"],\n      item[\"oppAmount\"],\n      item[\"calls\"],\n      item[\"upside\"],\n      item[\"gap\"],\n      item[\"closedAmount\"],\n    ]);\n\n    const workbook = new ExcelJS.Workbook();\n    const worksheet = workbook.addWorksheet(\"SalesSoftware\");\n    const headerRow = worksheet.addRow(columnHeaders);\n\n    const rightAlignColumns = [3, 4, 5, 6, 7, 8, 9]; // Adjust these indices accordingly\n\n    for (let i = 0; i < dataRows.length; i++) {\n      const row = worksheet.addRow(dataRows[i]);\n\n      // Adjust alignment for specific columns\n      for (let colIndex = 1; colIndex <= columnHeaders.length; colIndex++) {\n        const column = worksheet.getColumn(colIndex);\n        if (rightAlignColumns.includes(colIndex - 1)) {\n          column.alignment = { horizontal: \"right\" };\n        }\n      }\n    }\n\n    const boldRow = [1];\n    boldRow.forEach((index) => {\n      const row = worksheet.getRow(index);\n      row.font = { bold: true };\n    });\n\n    // Save the workbook\n    workbook.xlsx.writeBuffer().then((buffer) => {\n      saveAs(new Blob([buffer]), \"SalesSoftware.xlsx\");\n    });\n  };\n\n  // Call the function to start the export\n\n  const abortController = useRef(null);\n\n  const handleAbort = () => {\n    abortController.current && abortController.current.abort();\n    setLoader(false);\n  };\n  return (\n    <div>\n      {loader ? <Loader handleAbort={handleAbort} /> : \"\"}\n\n      <div className=\"col-lg-12 col-md-12 col-sm-12 customCard\">\n        <button\n          type=\"button\"\n          className=\"btn btn-primary\"\n          onClick={() => {\n            // setLoader(true);\n            // getviewDetailsData();\n            // setTimeout(() => {\n            //   setLoader(false);\n            // }, 4000);\n          }}\n        >\n          {\" \"}\n          Refresh SF Data{\" \"}\n        </button>\n        <div className=\"col-md-12 clearfix\" style={{ height: \"10px\" }}></div>\n        <div>\n          <span>\n            <span style={{ color: \"#9d7c42\", fontStyle: \"italic\" }}>\n              <BsFillExclamationCircleFill />\n              <span>\n                {\" \"}\n                Note : Snapshot for the week is created every monday at 07:30 PM\n                IST and Last day{\" \"}\n                <span>\n                  {\" \"}\n                  {wowtype === \"week\" ? (\n                    <RiFileExcel2Line\n                      size=\"1.5em\"\n                      title=\"Export to Excel\"\n                      style={{\n                        color: \"green\",\n                        marginLeft: \"4%\",\n                        fontSize: \"16px\",\n                      }}\n                      cursor=\"pointer\"\n                      onClick={handleOnExport}\n                    />\n                  ) : (\n                    <RiFileExcel2Line\n                      size=\"1.5em\"\n                      title=\"Export to Excel\"\n                      style={{\n                        color: \"green\",\n                        marginLeft: \"4%\",\n                        fontSize: \"16px\",\n                      }}\n                      cursor=\"pointer\"\n                      onClick={handleOnExport1}\n                    />\n                  )}\n                </span>{\" \"}\n                <div>of the quarter updated to reflect final actuals.</div>\n              </span>\n            </span>\n\n            <span style={{ color: \"#9d7c42\", fontStyle: \"italic\" }}>\n              <BsFillExclamationCircleFill />\n              Note : Data was accurate from FY 2021-Q2\n            </span>\n          </span>\n        </div>\n        <div className=\"col-md-12 clearfix\" style={{ height: \"10px\" }}></div>\n        <div\n          className=\"darkHeader\"\n          style={{\n            maxWidth: \"fit-content\",\n            paddingRight: \"0px !important\",\n            maxHeight: \"400px\",\n            overflowY: \"scroll\",\n          }}\n        >\n          {WOW.length > 2 ? (\n            <table\n              className=\"table table-bordered table-striped  \"\n              style={{ width: \"auto\" }}\n            >\n              <thead>{heads}</thead>\n            </table>\n          ) : (\n            <table\n              className=\"table table-bordered table-striped firstViewTable \"\n              style={{ width: \"auto\" }}\n            >\n              {\" \"}\n              <thead>\n                <th title=\"Week\">Week</th>\n                <th> Target ($)</th>\n                <th>Open Pipeline ($)</th>\n                <th>Calls ($)</th>\n                <th> Upside ($)</th>\n                <th>Gap ($)</th>\n                <th>Closed Amt ($)</th>\n              </thead>\n              <tbody>\n                {/* <div style={{ marginRight: \"45%\" }}>No Data Found</div> */}\n                <td></td>\n                <td></td>\n                <td></td>\n                <td>No Data Found</td>\n                <td></td>\n                <td></td>\n                <td></td>\n                <td></td>\n              </tbody>\n            </table>\n          )}\n        </div>\n      </div>\n      {wowtype === \"week\" && xAxis.length != 0 ? (\n        <WOWChart\n          yAxisAmt={yAxisAmt}\n          xAxis={xAxis}\n          executive={executive}\n          WOW={WOW}\n        />\n      ) : (\n        \"\"\n      )}\n      {viewDetailsData.length > 0 && wowtype === \"week\" && (\n        <ViewDetailsTable\n          viewDetailsData={viewDetailsData}\n          srchQuat={weekselected}\n          executive={executive}\n        />\n      )}\n      {openPopup ? (\n        <WowDisplayPopUp\n          openPopup={openPopup}\n          setOpenPopup={setOpenPopup}\n          WOW={WOW}\n          rowData={rowData}\n        />\n      ) : (\n        \"\"\n      )}\n    </div>\n  );\n}\n","import { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { FaSearch, FaCaretDown } from \"react-icons/fa\";\nimport { environment } from \"../../environments/environment\";\nimport { MultiSelect } from \"react-multi-select-component\";\nimport Loader from \"../Loader/Loader\";\nimport { useRef } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport moment from \"moment\";\nimport GlobalValidation from \"../ValidationComponent/GlobalValidation\";\nimport { updateActionData } from \"../../reducers/SelectedSEReducer\";\n\nexport default function ViewDetailsSearchFilters({\n  setreportRunId,\n  SalesExecutive,\n  setviewDetailsData,\n  allQuarter,\n  srchQuat,\n  setsrchQuat,\n  executive,\n  qdata,\n  setQdata,\n  reportRunId,\n  viewsalesid,\n  setFilterExectiveName,\n  setFiltertrue,\n  cust,\n  setCust,\n}) {\n  //-------------------------var decs--------------------------------\n  const baseUrl = environment.baseUrl;\n  const ref = useRef([]);\n  const [searching, setsearching] = useState(false);\n  const vendor = useSelector((state) => state.selectedSEState.vendorId);\n  const vendorName = useSelector(\n    (state) => state.selectedSEState.vendorNamewithId\n  );\n  const ownerDivisions = useSelector(\n    (state) => state.selectedSEState.ownerDivisions\n  );\n\n  const OwnerValues = ownerDivisions.map((item) => item.value).join(\",\");\n\n  const [selectedSalesE, setselectedSalesE] = useState(SalesExecutive);\n  const [vendorDropdown, setvendorDropdown] = useState([]);\n  const [selectedvendor, setselectedvendor] = useState(vendorName);\n  const [ownerDivison, setOwnerDiviosn] = useState(OwnerValues);\n  const [vendor1, setVendor1] = useState(vendor);\n  const SelectSEData = useSelector(\n    (state) => state.selectedSEState.directSETreeData\n  );\n  const executiveId = useSelector(\n    (state) => state.selectedSEState.salesExectiveId\n  );\n  const combinedData = [SelectSEData, executiveId];\n  const concatenatedString = combinedData.join(\",\");\n  const [seData, setSeData] = useState(executiveId);\n  const [sFOwnerDivisionsDropdown, setSFOwnerDivisionsDropdown] = useState([]);\n  const [selectesFOwnerDivison, setselectesFOwnerDivison] =\n    useState(ownerDivisions);\n  const [errorMsg, setErrorMsg] = useState(false);\n  const abortController = useRef(null);\n  const [loader2, setLoader2] = useState(false);\n  const QuaterDate = useSelector((state) => state.selectedSEState.quaterDate);\n\n  const [date, setDate] = useState(QuaterDate);\n  const handleAbort = () => {\n    abortController.current && abortController.current.abort();\n    setLoader2(false);\n  };\n  const reportRunIdRedux = useSelector(\n    (state) => state.selectedSEState.reportRunId\n  );\n  const [viewDetailsDataPayload, setviewDetailsDataPayload] = useState({\n    executives: seData,\n    from: date,\n    type: \"view\",\n    detail: true,\n    reportRunId: reportRunIdRedux,\n    optType: \"neglected\",\n    vendors: vendor1,\n    saveSE: false,\n    divisions: \"109\",\n  });\n  //-----------------------------methods--------------------------------\n  const onFilterChange = ({ id, value }) => {\n    setviewDetailsDataPayload((prevState) => {\n      return { ...prevState, [id]: value };\n    });\n    if (id === \"executives\" && value === \"1\") {\n      setVisible(true);\n    }\n  };\n  const viewDetailsSearchValidator = () => {\n    // viewDetailsDataPayload.executives === \"\" ||\n    // viewDetailsDataPayload.vendors === \"\" ||\n    // viewDetailsDataPayload.divisions === \"\" ||\n    // viewDetailsDataPayload.from === \"\"\n    //   ? setErrorMsg(true)\n    // :\n    getviewDetailsData();\n  };\n\n  //-------------------------------calls-----------------------------------\n  const getSFOwnerDivisionsDropdown = () => {\n    axios\n      .get(baseUrl + `/SalesMS/MasterController/SFOwnerDivisions`)\n      .then((resp) => {\n        const data = resp.data;\n        const dropdownOptions = data.map((item) => {\n          return {\n            value: item.id,\n            label: item.owner_Division,\n          };\n        });\n        setSFOwnerDivisionsDropdown(dropdownOptions);\n        // setselectesFOwnerDivison(dropdownOptions);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  const getvendor = () => {\n    axios\n      .get(baseUrl + \"/CommonMS/master/getSalesVendors\")\n      .then((resp) => {\n        const data = resp.data;\n        const dropdownOptions = data.map((item) => {\n          return {\n            value: item,\n            label: item,\n          };\n        });\n        const initialSelection = dropdownOptions.some(\n          (item) => item.value === \"Prolifics - Jam/Panther/XMLink\"\n        )\n          ? dropdownOptions.filter(\n              (item) => item.value !== \"Prolifics - Jam/Panther/XMLink\"\n            )\n          : dropdownOptions;\n        setvendorDropdown(dropdownOptions);\n        // setselectedvendor(initialSelection);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n  const dispatch = useDispatch();\n\n  const getviewDetailsData = () => {\n    let valid = GlobalValidation(ref);\n\n    if (valid == true) {\n      setsearching(false);\n      // setErrorMsg(true);\n    }\n\n    if (valid) {\n      // setValidator(true);\n      // setErrorMsg(true)\n      return;\n    }\n    setErrorMsg(false);\n\n    setLoader2(false);\n    setErrorMsg(false);\n    const executiveIdPayload =\n      SelectSEData == \"\"\n        ? \"2064731,139715916,123791883,3575,139,191,225,235,257,57997421,513,523,3617428,667,81525,2119701,76287764,57559815,825,2811358,2119741,881,905,120820778,981,57997419,4849403,20493348,116106000,2119787,2119795,88470523,128367163,1165,2639222,130391575,88998194,1375,1381,2119837,2119851,81587,1529,97925857,18910037,2640070,2119655,43972990,793,1675,2639520,70301986,1717,38380211,124117738,1785,97320362,114598022,106940587,2167,3007509,2227,2119945,47112354,46642168,2257,2119951,2249,4872942,2263,11651218,2119961,2607,2737,112208586,2596928,96657988,3129,658084,4452476,3283,846041,3495,2120031,3617,2120057,1495,2120063,2120069,3665,21505179,111399803,3737,3887,3977,2120091,4065,25313227,123558264,81825,111450,112875977,31161422,4095,81871,49413793,2120157,123454586,123558274,4937,2120161,2120163,117718248,30549612,2120177,5265,114159851,9999\"\n        : SelectSEData;\n    axios({\n      method: \"post\",\n      url: baseUrl + `/SalesMS/software/getSalesSoftwareDataDetails`,\n      data: {\n        executives: seData == \"1\" ? executiveIdPayload : seData,\n        from: date,\n        type: \"view\",\n        detail: true,\n        reportRunId: reportRunIdRedux,\n        optType: \"neglected\",\n        vendors: vendor1,\n        saveSE: false,\n        divisions: ownerDivison,\n        mode: -1,\n        duration: -1,\n        measures: -1,\n        customers: -1,\n        prospects: -1,\n        practices: -1,\n        countries: -1,\n        customerType: -1,\n        summary: -1,\n        showBy: \"-1\",\n        quarter: -1,\n        status: -1,\n        duration2: -1,\n        monthsel: -1,\n        viewByTime: -1,\n        fyear: -1,\n        aelocation: -1,\n        engComp: -1,\n        Divisions: -1,\n        accOwner: -1,\n        newCust: -1,\n        accType: -1,\n      },\n    })\n      .then((resp) => {\n        setLoader2(false);\n\n        const data = resp.data.data;\n        const array = [\n          \"id\",\n          \"executive_division\",\n          \"execStatus\",\n          \"supervisor\",\n          \"customerId\",\n          \"customer\",\n          \"isProspect\",\n          \"oppId\",\n          \"sfOppId\",\n          \"opportunity\",\n          \"vendor\",\n          \"probability\",\n          \"closeDate\",\n          \"oppAmount\",\n          \"calls\",\n          \"upside\",\n          \"closedAmount\",\n          \"week\",\n          \"comments\",\n          \"lvl\",\n          \"count\",\n          \"isEdit\",\n          \"isDeleted\",\n          \"keyAttr\",\n          \"parentAttr\",\n          \"add_to_call\",\n          \"isActive\",\n        ];\n        const newArray = data.map((item) => {\n          let k = JSON.parse(JSON.stringify(item, array, 4));\n          return k;\n        });\n        const allcust = newArray\n          .filter((item) => item.lvl === 1)\n          .map((item) => item.customer);\n        setCust(allcust);\n        dispatch(updateActionData(allcust));\n        setviewDetailsData(newArray);\n        setreportRunId(resp.data.reportRunId);\n        setsearching(false);\n      })\n      .catch((resp) => {});\n  };\n  useEffect(() => {\n    getvendor();\n    getSFOwnerDivisionsDropdown();\n  }, []);\n\n  useEffect(() => {\n    setviewDetailsDataPayload((prevState) => {\n      return { ...prevState, [\"from\"]: srchQuat.date };\n    });\n  }, [srchQuat]);\n\n  useEffect(() => {\n    getviewDetailsData();\n  }, [QuaterDate]);\n\n  // useEffect(() => {\n  //   srchQuat.date === viewDetailsDataPayload.from ? getviewDetailsData() : \"\";\n  // }, [viewDetailsDataPayload]);\n  const ArrowRenderer = ({ expanded }) => (\n    <>\n      {expanded ? (\n        <FaCaretDown className=\"chevronIcon\" />\n      ) : (\n        <FaCaretDown className=\"chevronIcon\" />\n      )}\n    </>\n  );\n  const generateDropdownLabel = (selectedOptions, allOptions) => {\n    const selectedValues = selectedOptions.map((option) => option.value);\n    const allValues = allOptions.map((item) => item.value);\n\n    if (selectedValues.length === allValues.length) {\n      return \"<< ALL >>\";\n    } else {\n      return selectedOptions.map((option) => option.label).join(\", \");\n    }\n  };\n  return (\n    <div className=\"col-lg-12 col-md-12 col-sm-12 customCard grayBg pb-2 mt-3\">\n      {errorMsg && (\n        <div className=\"alert alert-danger\">\n          <span>\n            <strong>\n              <em className=\"icon\" data-icon=\"\"></em>\n            </strong>\n            Please select valid values for highlighted fields\n          </span>\n        </div>\n      )}\n      {loader2 ? <Loader handleAbort={handleAbort} /> : \"\"}\n\n      <div className=\"group-content row\">\n        <div className=\"col-md-3 mb-2\">\n          <div className=\"clearfix\" style={{ height: \"10px\" }}></div>\n          <div className=\"form-group row\">\n            <label className=\"col-5\">\n              Quarter <span className=\"required error-text ml-1\"> *</span>\n            </label>\n            <span className=\"col-1 p-0\">:</span>\n            <span className=\"col-6 textfield\">\n              <select\n                id=\"from\"\n                value={srchQuat.quat}\n                onChange={(e) => {\n                  onFilterChange(e.target);\n                  setsrchQuat(e.target);\n                  const [year, quarter] = e.target.value.split(\"-\");\n                  const quarterToMonth = {\n                    Q1: \"04\",\n                    Q2: \"07\",\n                    Q3: \"10\",\n                    Q4: \"01\", // Increment the year for Q4\n                  };\n                  const month = quarterToMonth[quarter];\n                  const day = \"01\";\n                  const date1 = `${year - 1}-${month}-${day}`;\n                  setDate(date1);\n                }}\n                ref={(ele) => {\n                  ref.current[0] = ele;\n                }}\n              >\n                {allQuarter.map((item) => (\n                  <option key={item.date} value={item.date}>\n                    {item.quat}\n                  </option>\n                ))}\n              </select>\n            </span>\n          </div>\n        </div>\n        <div className=\"col-md-3 mb-2\">\n          <div className=\"clearfix\" style={{ height: \"10px\" }}></div>\n          <div className=\"form-group row\">\n            <label className=\"col-5\">\n              Sales Executive{\" \"}\n              <span className=\"required error-text ml-1\"> *</span>\n            </label>\n            <span className=\"col-1 p-0\">:</span>\n            <span\n              className=\"col-6 multiselect\"\n              ref={(ele) => {\n                ref.current[1] = ele;\n              }}\n            >\n              <MultiSelect\n                id=\"executives\"\n                ArrowRenderer={ArrowRenderer}\n                valueRenderer={generateDropdownLabel}\n                options={SalesExecutive}\n                hasSelectAll={true}\n                isLoading={false}\n                shouldToggleOnHover={false}\n                disableSearch={false}\n                value={selectedSalesE}\n                disabled={false}\n                onChange={(e) => {\n                  setselectedSalesE(e);\n                  let filterPractice = [];\n                  e.forEach((d) => {\n                    filterPractice.push(d.value);\n                  });\n                  setSeData(filterPractice.toString());\n                  setFilterExectiveName(e);\n                }}\n              />\n            </span>\n          </div>\n        </div>\n        <div className=\"col-md-3 mb-2\">\n          <div className=\"clearfix\" style={{ height: \"10px\" }}></div>\n          <div className=\"form-group row\">\n            <label className=\"col-5\">\n              Vendor <span className=\"required error-text ml-1\"> *</span>\n            </label>\n            <span className=\"col-1  p-0\">:</span>\n            <span\n              className=\"col-6 multiselect\"\n              ref={(ele) => {\n                ref.current[2] = ele;\n              }}\n            >\n              <MultiSelect\n                ArrowRenderer={ArrowRenderer}\n                valueRenderer={generateDropdownLabel}\n                id=\"practiceId\"\n                options={vendorDropdown}\n                hasSelectAll={true}\n                value={selectedvendor}\n                disabled={false}\n                onChange={(e) => {\n                  setselectedvendor(e);\n                  let filterPractice = [];\n                  e.forEach((d) => {\n                    filterPractice.push(d.value);\n                  });\n\n                  setVendor1(filterPractice.toString());\n                }}\n              />\n            </span>\n          </div>\n        </div>\n        <div className=\"col-md-3 mb-2\">\n          <div className=\"clearfix\" style={{ height: \"10px\" }}></div>\n          <div className=\"form-group row\">\n            <label className=\"col-5\">\n              Owner Division{\" \"}\n              <span className=\"required error-text ml-1\"> *</span>\n            </label>\n            <span className=\"col-1 p-0\">:</span>\n            <span\n              className=\"col-6 multiselect\"\n              ref={(ele) => {\n                ref.current[3] = ele;\n              }}\n            >\n              <MultiSelect\n                ArrowRenderer={ArrowRenderer}\n                valueRenderer={generateDropdownLabel}\n                options={sFOwnerDivisionsDropdown}\n                hasSelectAll={true}\n                isLoading={false}\n                shouldToggleOnHover={false}\n                disableSearch={false}\n                value={selectesFOwnerDivison}\n                disabled={false}\n                onChange={(e) => {\n                  setselectesFOwnerDivison(e);\n                  let filterPractice = [];\n                  e.forEach((d) => {\n                    filterPractice.push(d.value);\n                  });\n\n                  setOwnerDiviosn(filterPractice.toString());\n                }}\n              />\n            </span>\n          </div>\n        </div>\n      </div>\n      <div className=\"col-md-12 col-sm-12 col-xs-12 my-2 search btn-container center\">\n        <button\n          type=\"button\"\n          className=\"btn btn-primary\"\n          // onClick={viewDetailsSearchValidator}\n          onClick={() => {\n            viewDetailsSearchValidator();\n            setFiltertrue(true);\n          }}\n        >\n          <FaSearch /> Search{\" \"}\n        </button>\n      </div>\n    </div>\n  );\n}\n","import { Fragment, useRef, useState } from \"react\";\nimport ViewDetailsTable from \"./DetailsTable\";\nimport ViewDetailsSearchFilters from \"./ViewDetailsSearchFilters\";\nimport fte_active from \"../../assets/images/empstatusIcon/fte_active.png\";\nimport fte_inactive from \"../../assets/images/empstatusIcon/fte_inactive.png\";\nimport fte_notice from \"../../assets/images/empstatusIcon/fte_notice.png\";\nimport subk_active from \"../../assets/images/empstatusIcon/subk_active.png\";\nimport subk_inactive from \"../../assets/images/empstatusIcon/subk_inactive.png\";\nimport subk_notice from \"../../assets/images/empstatusIcon/subk_notice.png\";\nimport { FaAngleRight, FaCaretDown, FaCaretRight } from \"react-icons/fa\";\nimport { FaAngleDown } from \"react-icons/fa\";\nimport { MdOutlineEditNote } from \"react-icons/md\";\nimport DisplayPopUpEditNote from \"./DisplayPopUpEditNote\";\nimport Loader from \"../Loader/Loader\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport axios from \"axios\";\nimport { environment } from \"../../environments/environment\";\nimport moment from \"moment\";\nimport { useEffect } from \"react\";\nimport {\n  updateDateForSE,\n  updateNeglected,\n} from \"../../reducers/SelectedSEReducer\";\n\nexport default function ViewTable({\n  VT,\n  qdata,\n  setQdata,\n  viewDisplay,\n  setViewDisplay,\n  reportRunId,\n  viewsalesid,\n}) {\n  const [serviceData, setServiceData] = useState([]);\n  const [rowData, setRowData] = useState([]);\n  const [viewDetailsData, setviewDetailsData] = useState([]);\n  const [filterExectiveName, setFilterExectiveName] = useState(\"\");\n  const [filtertrue, setFiltertrue] = useState(false);\n  const allQuarter = VT?.filter((item) => item.lvl === 1).map((item) => {\n    return { quat: item.quarter, date: item.date };\n  });\n  const dispatch = useDispatch();\n  const [expandSecond, setExpandSecond] = useState(false);\n  const [cust, setCust] = useState([]);\n\n  const [srchQuat, setsrchQuat] = useState(() =>\n    allQuarter.length > 0 ? allQuarter[0] : {}\n  );\n\n  const [executive, setexecutive] = useState(\"-1\");\n  const [openPopup, setOpenPopup] = useState(false);\n  const [quarterData, setQuarterData] = useState([]);\n  const popupValue = \"ViewTable\";\n  const [expanded, setexpanded] = useState([]);\n  const [loader, setLoader] = useState(false);\n  const abortController = useRef(null);\n  const updateddate = useSelector((state) => state.selectedSEState.dateForSe);\n  const executiveId = useSelector(\n    (state) => state.selectedSEState.salesExectiveId\n  );\n  const [seData, setSeData] = useState(executiveId);\n  const reportRunIdRedux = useSelector(\n    (state) => state.selectedSEState.reportRunId\n  );\n  const [date, setDate] = useState(() => {\n    const today = new Date();\n    const year = today.getFullYear();\n    const quarter = Math.floor((today.getMonth() + 3) / 3); // Calculate current quarter\n    const startMonth = (quarter - 1) * 3; // Start month of the quarter\n    const startDate = new Date(year, startMonth, 1); // Start date of the quarter\n\n    return startDate;\n  });\n  const ownerDivisions = useSelector(\n    (state) => state.selectedSEState.ownerDivisions\n  );\n  const OwnerValues = ownerDivisions?.map((item) => item.value).join(\",\");\n  const [ownerDivison, setOwnerDiviosn] = useState(OwnerValues);\n  const vendor = useSelector((state) => state.selectedSEState.vendorId);\n  const [vendor1, setVendor1] = useState(vendor);\n  const handleAbort = () => {\n    abortController.current && abortController.current.abort();\n    setLoader(false);\n  };\n  const baseUrl = environment.baseUrl;\n  //=============For Rrfresh========================================\n  const getserviceData = () => {\n    const loaderTime = setTimeout(() => {\n      setLoader(true);\n    }, 2000);\n    abortController.current = new AbortController();\n    axios({\n      method: \"post\",\n      url: baseUrl + `/SalesMS/salesforce/refreshSalesForceData`,\n      signal: abortController.current.signal,\n      data: {\n        reportRunId: \"\" + reportRunIdRedux,\n        for: \"Software\",\n      },\n    })\n      .then((resp) => {\n        const data = resp.data.data;\n        setLoader(false);\n        clearTimeout(loaderTime);\n        getviewDetailsData();\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  const getviewDetailsData = (id, date, neglatedData) => {\n    setLoader(false);\n    axios({\n      method: \"post\",\n      url: baseUrl + `/SalesMS/software/getSalesSoftwareDataDetails`,\n      data: {\n        executives: id == undefined || id === \"1\" ? -1 : id,\n        from: moment(date).format(\"YYYY-MM-DD\"),\n        type: \"view\",\n        detail: true,\n        reportRunId: reportRunIdRedux,\n        optType: neglatedData,\n        vendors: vendor1,\n        saveSE: false,\n        divisions: ownerDivison,\n        mode: -1,\n        duration: -1,\n        measures: -1,\n        customers: -1,\n        prospects: -1,\n        practices: -1,\n        countries: -1,\n        customerType: -1,\n        summary: -1,\n        showBy: \"-1\",\n        quarter: -1,\n        status: -1,\n        duration2: -1,\n        monthsel: -1,\n        viewByTime: -1,\n        fyear: -1,\n        aelocation: -1,\n        engComp: -1,\n        Divisions: -1,\n        accOwner: -1,\n        newCust: -1,\n        accType: -1,\n      },\n    })\n      .then((resp) => {\n        const data = resp.data.data;\n        const array = [\n          \"id\",\n          \"executive_division\",\n          \"execStatus\",\n          \"supervisor\",\n          \"customerId\",\n          \"customer\",\n          \"isProspect\",\n          \"oppId\",\n          \"sfOppId\",\n          \"opportunity\",\n          \"vendor\",\n          \"probability\",\n          \"closeDate\",\n          \"oppAmount\",\n          \"calls\",\n          \"upside\",\n          \"closedAmount\",\n          \"week\",\n          \"comments\",\n          \"lvl\",\n          \"count\",\n          \"isEdit\",\n          \"isDeleted\",\n          \"keyAttr\",\n          \"parentAttr\",\n          \"add_to_call\",\n          \"isActive\",\n        ];\n        const newArray = data.map((item) => {\n          let k = JSON.parse(JSON.stringify(item, array, 4));\n          return k;\n        });\n\n        const allcust = newArray\n          .filter((item) => item.lvl === 1)\n          .map((item) => item.customer);\n        setCust(allcust);\n        setviewDetailsData(newArray);\n        setLoader(false);\n      })\n      .catch((resp) => {});\n  };\n  const SalesExecutive = VT.filter((item) => item.lvl === 2).map((item) => {\n    let obj = {\n      label: item.executive,\n      value: item.id,\n    };\n    return obj;\n  });\n  const clickExpand = (qurt) => {\n    if (qurt === \"Summary\") {\n      setexpanded((prevState) => {\n        return prevState.length === allQuarter.length\n          ? []\n          : allQuarter.map((item) => item.quat);\n      });\n    } else {\n      setexpanded((prevState) => {\n        return prevState.includes(qurt)\n          ? prevState.filter((item) => item !== qurt)\n          : [...prevState, qurt];\n      });\n    }\n  };\n\n  let toggler = 0;\n  const icons = {\n    fte0: (\n      <img\n        src={fte_inactive}\n        alt=\"(fte_inactive_icon)\"\n        style={{ height: \"12px\" }}\n        title=\"Ex-Employee\"\n      />\n    ),\n    fte1: (\n      <img\n        src={fte_active}\n        alt=\"(fte_active_icon)\"\n        style={{ height: \"12px\" }}\n        title=\"Active Employee\"\n      />\n    ),\n    fte2: (\n      <img\n        src={fte_notice}\n        alt=\"(fte_notice_icon)\"\n        style={{ height: \"12px\" }}\n        title=\"Employee in notice period\"\n      />\n    ),\n    subk0: (\n      <img\n        src={subk_inactive}\n        alt=\"(subk_inactive_icon)\"\n        style={{ height: \"12px\" }}\n        title=\"Ex-Contractor\"\n      />\n    ),\n    subk1: (\n      <img\n        src={subk_active}\n        alt=\"(subk_active_icon)\"\n        style={{ height: \"12px\" }}\n        title=\"Active Contractor\"\n      />\n    ),\n    subk2: (\n      <img\n        src={subk_notice}\n        alt=\"(subk_notice_icon)\"\n        style={{ height: \"12px\" }}\n        title=\"Contractor in notice period\"\n      />\n    ),\n  };\n  const heads = VT.map((data) => {\n    const conditions = [\n      \"lvl\",\n      \"execStatus\",\n      \"isActive\",\n      \"country\",\n      \"date\",\n      \"id\",\n    ];\n    const nonIntegers = [\"quarter\", \"summary\"];\n    const nonIntegerIcons = [\"executive\"];\n    let header = [];\n\n    toggler =\n      data[\"lvl\"] === 2 ? toggler : expanded.includes(data.quarter) ? 1 : 0;\n\n    for (const keys in data) {\n      data[keys] !== null &&\n        !conditions.includes(keys) &&\n        keys !== (expanded.length > 0 ? \"\" : \"executive\") &&\n        header.push(\n          data.id < 0 ? (\n            <th className={keys + \" pipeth wowFirstTh\"} key={keys}>\n              <b>\n                {\" \"}\n                {data[keys] === \"Amount ($)\"\n                  ? \"Pipeline ($)\"\n                  : data[keys] === \"Closed Amt ($)\"\n                  ? \"Closed ($)\"\n                  : data[keys]}\n              </b>\n            </th>\n          ) : (\n            <td\n              key={keys}\n              style={{\n                display: toggler === 0 && data[\"lvl\"] === 2 ? \"none\" : \"\",\n                textAlign:\n                  keys === \"calls\" ||\n                  keys === \"closedAmount\" ||\n                  keys === \"gap\" ||\n                  keys === \"oppAmount\" ||\n                  keys === \"target\" ||\n                  keys === \"upside\"\n                    ? \"end\"\n                    : \"\",\n              }}\n              title={data[keys]}\n            >\n              {nonIntegerIcons.includes(keys) ? (\n                <Fragment>\n                  {keys === \"executive\" && data[\"executive\"] === \"\" ? (\n                    \"\"\n                  ) : (\n                    <span>\n                      {icons[data[\"execStatus\"]]}\n                      &nbsp;\n                      <MdOutlineEditNote\n                        style={{ float: \"right\", cursor: \"pointer\" }}\n                        size={\"1.5em\"}\n                        onClick={() => {\n                          setOpenPopup(true);\n                          setRowData(data);\n                        }}\n                        title={data[keys]}\n                      />\n                      <span\n                        style={{ color: \"#2e88c5\", cursor: \"pointer\" }}\n                        onClick={() => {\n                          const originalQuarter = data.quarter;\n                          const [year, quarter] = originalQuarter?.split(\"-\");\n                          const quarterToMonth = {\n                            Q1: \"04\",\n                            Q2: \"07\",\n                            Q3: \"10\",\n                            Q4: \"01\",\n                          };\n                          const month = quarterToMonth[quarter];\n                          const quarterYear = parseInt(year);\n                          const yearForQuarter =\n                            quarter === \"Q3\" ||\n                            quarter === \"Q1\" ||\n                            quarter === \"Q2\"\n                              ? quarterYear - 1\n                              : quarterYear;\n                          const formattedDate = `${yearForQuarter}-${month}-01`;\n                          dispatch(updateNeglected(true));\n                          const id = data.id;\n                          const neglatedData = \"neglected\";\n                          getviewDetailsData(id, formattedDate, neglatedData);\n                          setExpandSecond(true);\n                        }}\n                      >\n                        {data[keys]}\n                      </span>\n                    </span>\n                  )}\n                </Fragment>\n              ) : (\n                \" \"\n              )}\n              {nonIntegers.includes(keys) ? (\n                <Fragment>\n                  <span\n                    onClick={() => {\n                      clickExpand(data.quarter);\n                    }}\n                    title={data[keys]}\n                    style={{ fontWeight: \"bold\" }}\n                  >\n                    {data[\"lvl\"] === 0 &&\n                      keys === \"quarter\" &&\n                      (expanded.includes(data.quarter) ||\n                      expanded.length === allQuarter.length ? (\n                        <span>\n                          {\" \"}\n                          <> </>{\" \"}\n                          <FaCaretDown\n                            style={{ color: \"#428bca\", cursor: \"pointer\" }}\n                          />\n                          {data[keys]}\n                        </span>\n                      ) : (\n                        <span style={{ fontWeight: \"bold\" }}>\n                          <FaCaretRight\n                            style={{ color: \"#428bca\", cursor: \"pointer\" }}\n                            title=\"Expand all\"\n                          />\n                          {data[keys]}\n                        </span>\n                      ))}\n                    {data[\"lvl\"] === 1 &&\n                      keys === \"quarter\" &&\n                      (expanded.includes(data.quarter) ||\n                      expanded.length === allQuarter.length ? (\n                        <span>\n                          {\" \"}\n                          <> </>{\" \"}\n                          <FaCaretDown\n                            style={{ color: \"#428bca\", cursor: \"pointer\" }}\n                            title=\"Collapse all\"\n                          />\n                          {/* {data[keys]} */}\n                        </span>\n                      ) : (\n                        <span>\n                          <FaCaretRight\n                            style={{ color: \"#428bca\", cursor: \"pointer\" }}\n                            title=\"Expand all\"\n                          />\n                          {/* {data[keys]} */}\n                        </span>\n                      ))}\n                  </span>\n\n                  {keys === \"quarter\" && data.quarter !== \"Summary\"\n                    ? data[\"lvl\"] === 1 && (\n                        <span\n                          className=\"linkSty\"\n                          onClick={() => {\n                            setexecutive(-1);\n                            setsrchQuat({\n                              quat: data.quarter,\n                              date: data.date,\n                            });\n                            const originalQuarter = data.quarter;\n                            const [year, quarter] = originalQuarter.split(\"-\");\n                            const quarterToMonth = {\n                              Q1: \"04\",\n                              Q2: \"07\",\n                              Q3: \"10\",\n                              Q4: \"01\",\n                            };\n                            const month = quarterToMonth[quarter];\n                            const quarterYear = parseInt(year);\n                            const yearForQuarter =\n                              quarter === \"Q3\" ||\n                              quarter === \"Q1\" ||\n                              quarter === \"Q2\"\n                                ? quarterYear - 1\n                                : quarterYear;\n                            const formattedDate = `${yearForQuarter}-${month}-01`;\n\n                            dispatch(updateNeglected(false));\n                            dispatch(updateDateForSE(formattedDate));\n                            const neglatedData = -1;\n                            getviewDetailsData(\n                              data.id,\n                              formattedDate,\n                              neglatedData\n                            );\n                          }}\n                          title={data[keys]}\n                        >\n                          {data[keys]}\n                        </span>\n                      )\n                    : \"\"}\n                </Fragment>\n              ) : (\n                <Fragment>\n                  <span title={parseInt(data[keys]).toLocaleString(\"en-US\")}>\n                    {parseInt(data[keys]).toLocaleString(\"en-US\") == \"NaN\"\n                      ? \"\"\n                      : parseInt(data[keys]).toLocaleString(\"en-US\")}\n                  </span>\n                  &nbsp;\n                </Fragment>\n              )}\n            </td>\n          )\n        );\n    }\n\n    return (\n      <tr\n        className={data.executive == \"\" ? \"pink\" : \"red \"}\n        key={data.id + data.quarter}\n      >\n        {header}\n      </tr>\n    );\n  });\n\n  return (\n    <div className=\"col-lg-12 col-md-12 col-sm-12 customCard\">\n      <button\n        type=\"button\"\n        className=\"btn btn-primary\"\n        style={{ marginBottom: \"1%\" }}\n        onClick={() => {\n          // setLoader(true);\n          getserviceData();\n          // setTimeout(() => {\n          //   setLoader(false);\n          // }, 4000);\n        }}\n      >\n        {\" \"}\n        Refresh SF Data{\" \"}\n      </button>\n      {loader ? <Loader handleAbort={handleAbort} /> : \"\"}\n      <div\n        className=\"darkHeader\"\n        style={{\n          overflowY: \"auto\",\n          maxWidth: \"fit-content\",\n          paddingRight: \"0px !important\",\n          maxHeight: \"400px\",\n        }}\n      >\n        <table\n          className=\"table table-bordered  firstViewTable\"\n          style={{ width: \"auto\" }}\n        >\n          <thead>{heads}</thead>\n        </table>\n      </div>\n\n      {VT.length > 2 && (\n        <>\n          <ViewDetailsSearchFilters\n            setviewDetailsData={setviewDetailsData}\n            SalesExecutive={SalesExecutive}\n            allQuarter={allQuarter}\n            setQuarterData={setQuarterData}\n            quarterData={quarterData}\n            srchQuat={srchQuat}\n            setsrchQuat={setsrchQuat}\n            qdata={qdata}\n            setQdata={setQdata}\n            executive={executive}\n            reportRunId={reportRunId}\n            viewsalesid={viewsalesid}\n            setFilterExectiveName={setFilterExectiveName}\n            setFiltertrue={setFiltertrue}\n            setCust={setCust}\n            cust={cust}\n          />\n          <ViewDetailsTable\n            viewDetailsData={viewDetailsData}\n            srchQuat={srchQuat}\n            executive={executive}\n            SalesExecutive={SalesExecutive}\n            filterExectiveName={filterExectiveName}\n            filtertrue={filtertrue}\n            getviewDetailsData={getviewDetailsData}\n            setCust={setCust}\n            cust={cust}\n          />\n        </>\n      )}\n\n      {openPopup ? (\n        <DisplayPopUpEditNote\n          openPopup={openPopup}\n          setOpenPopup={setOpenPopup}\n          Vdata={serviceData}\n          rowData={rowData}\n          popupValue={popupValue}\n        />\n      ) : (\n        \"\"\n      )}\n    </div>\n  );\n}\n","import SoftwareSearchFilter from \"./SoftwareSearchFilter\";\nimport \"./Software.scss\";\nimport { useState } from \"react\";\n// import TargetTable from \"./TargetTable.js\";\nimport WoWTable from \"./WoWTable.js\";\nimport ViewTable from \"./ViewTable\";\nimport { useEffect } from \"react\";\nimport axios from \"axios\";\nimport { environment } from \"../../environments/environment\";\nimport { useSelector } from \"react-redux\";\nexport default function Software() {\n  const baseUrl = environment.baseUrl;\n  const loggedUserId = localStorage.getItem(\"resId\");\n  const [softwareData, setSoftwareData] = useState([]);\n  const [reportRunId, setreportRunId] = useState(0);\n  const [tableFlag, setTableFlag] = useState();\n  const [showDetails, setShowDetails] = useState(false);\n  const [selector, setSelector] = useState(\"target\");\n  const [wowDisplay, setWowDisplay] = useState(false);\n  const [reportId, setReportId] = useState([]);\n  const [wowDate, setWOwDate] = useState([]);\n  const [wowtype, setwowtype] = useState(\"week\");\n  const [viewDisplay, setViewDisplay] = useState(false);\n  const [targetDataKeys, setTargetDataKeys] = useState([]);\n  const [tableData, setTableData] = useState([]);\n  const [data, setData] = useState([]);\n  const [headerData, setHeaderData] = useState([]);\n  const [qdate, setQdate] = useState(\"2023-04-01\");\n  const [fdate, setFdate] = useState(\"2024-04-01\");\n  const [viewsalesid, setViewSlesId] = useState(\"\");\n  const reportRunIdRedux = useSelector(\n    (state) => state.selectedSEState.reportRunId\n  );\n\n  return (\n    <div className=\"col-lg-12 col-md-12 col-sm-12 no-padding\">\n      <SoftwareSearchFilter\n        setSoftwareData={setSoftwareData}\n        setWowDisplay={setWowDisplay}\n        setTableFlag={setTableFlag}\n        setSelector={setSelector}\n        setreportRunId={setreportRunId}\n        reportRunId={reportRunId}\n        softwareData={softwareData}\n        setTableData={setTableData}\n        headerData={headerData}\n        setHeaderData={setHeaderData}\n        data={data}\n        setData={setData}\n        wowDate={wowDate}\n        setWOwDate={setWOwDate}\n        tableData={tableData}\n        showDetails={showDetails}\n        setShowDetails={setShowDetails}\n        setwowtype={setwowtype}\n        setTargetDataKeys={setTargetDataKeys}\n        qdate={qdate}\n        // VT={softwareData}\n        fdate={fdate}\n        setFdate={setFdate}\n        setQdate={setQdate}\n        setViewDisplay={setViewDisplay}\n        viewDisplay={viewDisplay}\n        setViewSlesId={setViewSlesId}\n      />\n\n      {selector === \"wow\" && wowDisplay && (\n        <WoWTable\n          WOW={softwareData}\n          wowtype={wowtype}\n          wowDate={wowDate}\n          setWOwDate={setWOwDate}\n        />\n      )}\n      {selector === \"view\" &&\n        viewDisplay &&\n        reportRunIdRedux != 0 &&\n        showDetails == true ? (\n        <ViewTable\n          VT={softwareData}\n          qdate={qdate}\n          setQdate={setQdate}\n          setViewDisplay={setViewDisplay}\n          viewDisplay={viewDisplay}\n          showDetails={showDetails}\n          setShowDetails={setShowDetails}\n          reportRunId={reportRunId}\n          viewsalesid={viewsalesid}\n        />\n      ) : (\n        \"\"\n      )}\n    </div>\n  );\n}\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 2C6.49 2 2 6.49 2 12s4.49 10 10 10 10-4.49 10-10S17.51 2 12 2zm-1 8V7c0-.55.45-1 1-1s1 .45 1 1v3h1.79c.45 0 .67.54.35.85l-2.79 2.79c-.2.2-.51.2-.71 0l-2.79-2.79c-.31-.31-.09-.85.36-.85H11zm5 7H8c-.55 0-1-.45-1-1s.45-1 1-1h8c.55 0 1 .45 1 1s-.45 1-1 1z\"\n}), 'DownloadForOfflineRounded');\nexports.default = _default;"],"names":["props","openPopup","setOpenPopup","accessData","rowData","Vdata","popupValue","useState","notesData","setNotesData","value","setValue","baseUrl","environment","editorToolBar","toolbar","header","font","color","bold","tooltip","list","script","indent","align","useEffect","axios","method","url","id","then","res","resp","data","defaultNotes","notes","visible","size","onClose","backdrop","className","style","cursor","executive","name","theme","defaultValue","onChange","e","modules","readOnly","type","onClick","cleanedNotes","replace","requestData","resId","loggedUserId","localStorage","getItem","saveNotesData","fontSize","selectedSe","reportId","selectedSE","setSelectedSE","buttonAction","setData","hirarchy","tableData","getData1","loader","setTableData","headerData","setHeaderData","fdate","setLoader","setErrorMessage","setRowData","setSeOptions","colexpanded","setcolexpanded","coltoggler","setWriteData","serTargetData","setSerTargetData","serTargetObj","setSerTargetObj","setTargetId","icons","fte0","src","fte_inactive","alt","height","title","fte1","fte_active","fte2","fte_notice","subk0","subk_inactive","subk1","subk_active","subk2","subk_notice","str","GetSalesSWTargets","arr","slice","split","filteredKeysArray","filter","key","is_create","datawrite","setDatawrite","result","onSerTargetEnter","i","target","newData","prevState","keys","onSerTargetUpdate","pAtt","targetCat","targetCatId","keyAttr","getAttribute","year","quarter","quarChecker","updatedData","splitId","findIndex","months","currIndexKeys","Object","finalKey","length","map","ele","ky","d","includes","push","exeSumIndex","element","total","forEach","parseInt","execName","topCount","reduce","acc","curr","totalTargetsubCountCust","summaryQuarterCount","lvl","totalTargetTopCount","monVal","Math","floor","monthOneSummaryCount","monthTwoSummaryCount","monthThreeSummaryCount","monthOneTopCount","monthTwoTopCount","monthThreeTopCount","quarters","q1months","q2months","q3months","q4months","date","month","Qualtertotal","quaterId","valueAtIndex1","startsWith","substring","splitedExecName","montopCount","montotalTargetTopCount","montotalTargetsubCount","montotalTargetsubCountCust","monsummaryQuarterCount","console","log","targetDataArray","parts","targetCatId1","part","isNaN","createTargetData","executiveId","typ","val","reportRunId","Q1","Q2","Q3","Q4","valuePerMonth","index","targetValue","upddateSertargetData","JSON","parse","stringify","table","settable","nonIntegersvals","horizontalcolexpands","setTargetDataTemp","table1","colSpan","rowSpan","display","some","item","textAlign","quartr","float","Fragment","fontWeight","toLocaleString","parseFloat","inputValue","trim","onBlur","parentAttr","openSave","setOpenSave","SavePopup","saveTargetDetails","marginTop","marginLeft","paddingLeft","excludeProperties","workbook","ExcelJS","worksheet","addWorksheet","dynamicDateKeys","order","sortedDynamicDateKeys","sort","a","b","aPart1","aPart2","bPart1","bPart2","indexOf","totalTargetIndex","splice","addRow","filteredItem","fromEntries","entries","values","dateKey","colIndex","getColumn","alignment","horizontal","getRow","xlsx","writeBuffer","buffer","saveAs","Blob","width","maxHeight","overflow","emptyClassList","document","getElementsByClassName","splitData","row","col","resetClickHandler","catch","err","SoftwareSearchFilters","softwareData","setSelector","setTargetReviewsData","setTableFlag","setShowDetails","showDetails","setSoftwareData","setWowDisplay","setFdate","setreportRunId","setwowtype","setQdate","qdate","setTargetDataKeys","setViewDisplay","viewDisplay","setWOwDate","wowDate","setViewSlesId","location","useLocation","URLSearchParams","search","get","p1data","setp1Data","selectedp1","setSelectedp1","resetVendor","setResetVendor","vendor1","setVendor1","filterData","setFilterData","getData","softwarePayload","setSoftwarePayload","mode","from","duration","vendors","divisions","executives","salesId","isActive","isIndividual","selectExecs","saveSE","optType","status","duration2","measures","monthsel","viewByTime","fyear","customers","prospects","practices","countries","customerType","summary","showBy","aelocation","engComp","Divisions","accOwner","newCust","accType","moment","quarterdate","format","division","salesEx","executiveIdPayload","salesexecutiveid","isIndividualChecked","Salesexecutivename","updateAction","updateSalesExcetive","excludedValues","updateVendors","progressDataDivisions","divisionsToFilter","Number","updatedOwnerDivisions","sFOwnerDivisionsDropdown","undefined","updatequarter","Date","setMonth","getMonth","setFullYear","getFullYear","setStartDate","updateDuration","commaSeparatedValues","vendorvalues","fromDateView","setDivision","setDuration","setQuarterDate","showby","financeYearTarget","inputDate","fiscalYearStartDate","startOf","subtract","From","finalDate","addinst","FinalDate","toDate","oneYearLater","add","setStDate","setSalesEx","setFinancialYearDate","setselectesFOwnerDivison","setselectedSE","setActionSelector","setSelectedSEVal","setShowByValue","wirteData","abortController","useRef","setReportId","fydata","grpId","setGrpId","setAccessData","financeYear","targetOpen","setTargetOpen","ref","AbortController","dispatch","useDispatch","setViewSalesExectiveId","formattedIds","financeYears","SelectSEData","useSelector","state","selectedSEState","directSETreeData","localSE","isSalesPresentThenId","obj","setsalesExecutiveId","setsalesExecutiveName","setSalesIndividualId","setSalesIndividualName","salespersonname","text","idsWithoutDirectSalesEx","nameWithoutDirectSalesEx","salesPersonName","join","formattedName","SalesExecutiveNames","updatedSalesExectiveId","generateDropdownLabel","selectedOptions","allOptions","selectedValues","option","allValues","label","transformedData","Array","isArray","parent","li_attr","sestatus","filteredData","o","filteredIds","setVisible","setButtonAction","startDate","selectedSEVal","editmsg","setEditAddmsg","errorMsg","setErrorMsg","actionSelector","setSelectedVendorData","setVendorData","setvendorDropdown","setselectedvendor","salesExecutiveDropdown","setsalesExecutiveDropdown","setSFOwnerDivisionsDropdown","selectesFOwnerDivison","setsearching","showbyvalue","currentDate","clone","getDate","updatedVendorId","updatedVedorNameWithId","FinancialYearDate","stDate","initialDate","setDate","setwowDatapaylaod","setviewDataPayload","settargetDataPayload","ArrowRenderer","expanded","routes","setRoutes","getMenus","menu","subMenus","subMenu","display_name","projectStatusReportSubMenu","find","access_level","custom","dpObj","vendor","initialSelection","user_id","today","targetDataPayload","wowDataPayload","subType","viewDataPayload","onFilterChange","SelectSEData1","softwareSearchValidator","payload","current","valid","GlobalValidation","String","getSoftwareData","quarterToMonth","updatedDate","dateString","padStart","day","subtractYearFromDate","quarterString","match","calculateStartDate","quat","updateQuaterDate","setReportRunIdRedux","array","swTargets","newArray","setVisibleC","visibleC","setCheveronIcon","FaChevronCircleUp","FaChevronCircleDown","fromDate","fromDateObj","currentMonth","nextQuarterMonth","ceil","resultDate","toISOString","headers","response","dropdownOptions","lkupName","owner_Division","cheveronIcon","errormessage","setTimeout","Loader","handleAbort","abort","ScreenBreadcrumbs","currentScreenName","GlobalHelp","pdfname","SavedSearchGlobal","pageurl","page_Name","dropdown","resetFilters","options","selectedIndex","selected","dd","DateChange","toLocaleDateString","dateFormat","showYearPicker","yearDropdownItemNumber","hasSelectAll","disabled","valueRenderer","filterPractice","toString","isLoading","shouldToggleOnHover","disableSearch","getTime","showQuarterYearPicker","borderTop","SelectSEDialogBox","TargetTable","DocumentTable","docId","sfDocs","doc","href","docType","DownloadForOfflineRounded","ViewDetailsTable","viewDetailsData","srchQuat","filterExectiveName","SalesExecutive","filtertrue","getviewDetailsData","cust","setCust","allcust","customer","expandData","actionData","setexpanded","FilterName","setDocId","open","setOpen","oppoName","setOppoName","setSfDocs","docDisplay","setDocDisplay","getSfDocuments","loaderTime","oppId","clearTimeout","window","scrollTo","top","behavior","clickExpand","toggler","heads","conditions","Integersvals","expandableCols","expandOpp","FaCaretDown","sfOppId","opportunity","customerId","alignItems","margin","customColumnOrder","dataKeys","keyValues","customColumnHeaders","flat","headerRow","getCell","columnIndex","paddingRight","overflowY","WOWChart","yAxisAmt","xAxis","summaryChart","WOW","lang","thousandsSep","decimalPoint","chart","categories","crosshair","yAxis","allowDecimals","padding","formatter","formattedValue","Highcharts","this","y","x","series","plotOptions","connectorAllowed","highcharts","WoWTable","wowtype","allWeek","week","weekno","allexec","vendorDropdown","setexecutive","expandedexec","setexpandedexec","setviewDetailsData","weekselected","setweekselected","exid","setexid","clickExpandexec","exec","viewDetailsDataPayload","detail","openPipeline","calls","closedAmount","upside","weekheads","oppAmount","nonIntegers","backgroundColor","execheads","description","fontStyle","headerRow1","dateParts","dataRows","rightAlignColumns","column","columnHeaders","executiveA","toLowerCase","executiveB","weekA","weekB","maxWidth","ViewDetailsSearchFilters","allQuarter","setsrchQuat","setFilterExectiveName","qdata","setQdata","viewsalesid","setFiltertrue","vendorId","vendorName","vendorNamewithId","ownerDivisions","OwnerValues","selectedSalesE","setselectedSalesE","selectedvendor","ownerDivison","setOwnerDiviosn","salesExectiveId","seData","setSeData","loader2","setLoader2","QuaterDate","quaterDate","reportRunIdRedux","setviewDetailsDataPayload","updateActionData","date1","ViewTable","VT","serviceData","setExpandSecond","quarterData","setQuarterData","dateForSe","neglatedData","nonIntegerIcons","originalQuarter","quarterYear","formattedDate","updateNeglected","qurt","updateDateForSE","marginBottom","signal","for","getserviceData","Software","selector","wowDisplay","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx"],"sourceRoot":""}