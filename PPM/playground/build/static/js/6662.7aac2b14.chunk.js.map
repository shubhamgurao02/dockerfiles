{"version":3,"file":"static/js/6662.7aac2b14.chunk.js","mappings":"gaAWA,SAASA,EAAYC,GACnB,OACE,SAACC,EAAA,GAAO,gBAACC,SAAS,UAAUC,MAAO,CAAEC,MAAO,GAAIC,OAAQ,KAAUL,GAAK,cACrE,iBAAMM,EAAE,sWAGd,CAEA,SAASC,EAAWP,GAClB,OACE,SAACC,EAAA,GAAO,gBAACC,SAAS,UAAUC,MAAO,CAAEC,MAAO,GAAIC,OAAQ,KAAUL,GAAK,cACrE,iBAAMM,EAAE,wfAGd,CAEA,SAASE,EAAoBR,GAC3B,IAAMG,GAAQM,EAAAA,EAAAA,IAAU,CACtBC,KAAM,CACJC,QAAS,EACTC,UAAW,yBAEbC,GAAI,CACFF,QAASX,EAAMc,GAAK,EAAI,EACxBF,UAAU,eAAD,OAAiBZ,EAAMc,GAAK,EAAI,GAAE,cAI/C,OACE,SAAC,QAAY,CAACX,MAAOA,EAAM,UACzB,SAACY,EAAA,GAAQ,UAAKf,KAGpB,CAMA,IAAMgB,GAAiBC,EAAAA,EAAAA,KAAO,SAACjB,GAAW,IAAD,UACvC,OACE,0BACE,mBAACkB,EAAA,GAAQ,kBACHlB,GAAK,IACTmB,IAAKC,OAAY,OAALpB,QAAK,IAALA,GAAW,QAAN,EAALA,EAAOqB,YAAI,WAAN,EAAL,EAAaC,IACzBC,OAAQH,OAAY,OAALpB,QAAK,IAALA,GAAW,QAAN,EAALA,EAAOqB,YAAI,WAAN,EAAL,EAAaC,IAC5BE,MAAY,OAALxB,QAAK,IAALA,GAAW,QAAN,EAALA,EAAOqB,YAAI,WAAN,EAAL,EAAaI,YACpBjB,oBAAqBA,IAEpBkB,MAAMC,QAAa,OAAL3B,QAAK,IAALA,GAAW,QAAN,EAALA,EAAOqB,YAAI,WAAN,EAAL,EAAaO,SACnB,OAAL5B,QAAK,IAALA,GAAW,QAAN,EAALA,EAAOqB,YAAI,WAAN,EAAL,EAAaO,QAAQC,KAAI,SAACR,GAAI,OAAKS,EAAWT,EAAK,IACnD,KAIZ,GAhBuBJ,EAgBpB,kBAAGc,EAAK,EAALA,MAAK,mCACFC,EAAAA,EAAAA,eAAkC,CACvC,WAAY,CACVrB,QAAS,OAEZ,sBACMqB,EAAAA,EAAAA,OAA0B,CAC/BC,WAAY,GACZC,YAAa,GACbC,WAAW,cAAD,QAAgBC,EAAAA,EAAAA,IAAML,EAAMM,QAAQC,KAAKC,QAAS,OAC7D,KAGGT,EAAa,SAACU,GAAK,OACvB,0BACE,SAACxB,EAAc,CAACK,KAAMmB,KADdpB,OAAY,OAALoB,QAAK,IAALA,OAAK,EAALA,EAAOlB,IAElB,EAEO,SAASmB,EAAuBzC,GAC7C,IACE0C,EAKE1C,EALF0C,oBACAC,EAIE3C,EAJF2C,KACAC,EAGE5C,EAHF4C,UACAC,EAEE7C,EAFF6C,eACAC,EACE9C,EADF8C,mBAgCFC,EAAAA,EAAAA,YAAU,WAAO,GAAG,CAACF,IA8BrB,IAAIG,EAvBJ,SAAwBC,EAAWC,GACjC,IAAMF,EAAoBC,EAAUE,QAClC,SAACC,GAAI,MAA0B,QAArBA,EAAK3B,WAAqB,IAmBtC,OAhBAuB,EAAkBK,MAAK,SAACC,EAAGC,GACzB,IAAMC,EAASN,EAAYO,QAAQH,EAAE7B,aAC/BiC,EAASR,EAAYO,QAAQF,EAAE9B,aACrC,OAAgB,IAAZ+B,IAA6B,IAAZE,EACZF,EAASE,GACK,IAAZF,GACD,GACa,IAAZE,EACF,EAEFJ,EAAE7B,YAAYkC,cAAcJ,EAAE9B,YACvC,IAEuBuB,EAAkBG,QAAO,SAACC,GAAI,OACnDA,EAAK3B,aAAemB,EAAaQ,EAAK3B,YAAc,UAAa,EAAE,IAE9DuB,CACT,CACwBY,CA3DL,SAACC,EAAWC,GAC7BA,GAAO,QACLxC,GAAI,KACJyC,SAAU,YACVC,SAAU,WACPF,GAEL,IAAMG,EAAa,CAAC,EACdC,EAAO,GACPF,EAAWF,EAAQE,SAiBzB,OAhBAH,EAAUM,SAAQ,SAAC9C,GACjB,IAAME,EAASF,EAAKyC,EAAQxC,IACtB8C,EAAe/C,EAAKyC,EAAQC,UAClCE,EAAW1C,IAAO,0BACfyC,EAAW,IACT3C,GACA4C,EAAW1C,IAEhB0C,EAAWG,GAAgBH,EAAWG,KAAa,UAAOJ,EAAW,IACrEC,EAAWG,GAAcJ,GAAUK,KAAKJ,EAAW1C,GACrD,IACA+C,OAAOC,OAAON,GAAYE,SAAQ,SAACK,GACF,qBAApBA,EAAIV,EAAQxC,KACrB4C,EAAKG,KAAI,MAATH,GAAI,OAASM,EAAIR,IAErB,IACOE,CACT,CAIkBO,CAAW9B,GA4BqB,CAChD,aACA,qCACA,UACA,aAGI+B,EAAY,CAChBC,QAAS,OACTC,WAAY,SACZC,IAAK,OAGP,OACE,SAACC,EAAA,EAAQ,CACP,aAAW,aACXC,gBAAiB,CAACrC,GAClBsC,qBACE,iBAAK7E,MAAOuE,EAAU,WACpB,SAAC3E,EAAW,KACZ,0BAAM,OACN,SAAC,MAAc,IAAI,OAGvBkF,mBACE,iBAAK9E,MAAOuE,EAAU,WACpB,SAACnE,EAAU,KACX,0BAAM,OACN,SAAC,MAAc,IAAI,OAGvB2E,gBAAgB,SAAC,MAAc,IAC/BC,mBAAmB,SAAC,MAAc,IAClCC,GAAI,CACF,wDAAyD,CACvDhF,MAAO,OACPiF,SAAU,IAGdC,UAAU,gBACVC,aAnEiB,SAACC,EAAOC,GAC3B3C,EAAkB2C,EACpB,EAiE+B,SAE1BzC,EAAkBnB,KAAI,SAACuB,GAAI,OAAKtB,EAAWsB,EAAK,KAGvD,CClDA,MA7IA,SAAwBpD,GACtB,IACE0F,EAWE1F,EAXF0F,UACAC,EAUE3F,EAVF2F,aACA/C,EASE5C,EATF4C,UACAgD,EAQE5F,EARF4F,cACAC,EAOE7F,EAPF6F,eACAC,EAME9F,EANF8F,YACAC,EAKE/F,EALF+F,eACAC,EAIEhG,EAJFgG,kBACAC,EAGEjG,EAHFiG,kBACAC,EAEElG,EAFFkG,WACAC,EACEnG,EADFmG,kBAEIC,EAAeC,aAAaC,QAAQ,SACpCC,EAAUC,EAAAA,EAAAA,QAChB,GAAwBC,EAAAA,EAAAA,UAAS,IAAG,eAAvBC,GAAF,KAAS,MACpB,GAAwBD,EAAAA,EAAAA,UAAS,IAAG,eAAvBE,GAAF,KAAS,MAEpB,GAA4CF,EAAAA,EAAAA,UAAS,MAAK,eAAnD5D,EAAc,KAAEC,EAAiB,KA4DxC,OACE,0BACE,gBAAKwC,UAAU,YAAW,UACxB,UAAC,KAAM,CACLsB,QAASlB,EACTmB,KAAK,KACLC,QAAS,kBAAMnB,GAAa,EAAM,EAClCoB,SAAU,SAAS,WAEnB,SAAC,KAAY,CAACzB,UAAU,GAAE,UACxB,SAAC,KAAW,WACV,iBAAMA,UAAU,GAAE,SAAC,kBAGvB,UAAC,KAAU,YACT,iBAAKA,UAAU,sBAAqB,WAClC,gBAAKA,UAAU,2BAA0B,UACvC,wBAAI,wBAGJ,SAAC7C,EAAsB,CACrBC,oBAAqBtB,OAAOwB,GAC5BD,KAAMiD,EACNC,eAAgBA,EAChBjD,UAAWA,EACXC,eAAgBA,EAChBC,kBAAmBA,QAIzB,iBAAKwC,UAAU,qEAAoE,WACjF,mBACEA,UAAU,kBACV0B,KAAK,MACLC,MAAM,MACNC,QAAS,YA7FE,WACvBlB,GAAkB,GAClB,IAAMmB,EAAgBzF,MAAMC,QAAQmE,GAChCA,EAAYjE,KAAI,SAACuF,GAAG,OAAKC,SAASD,EAAI,IACtC,GAEJE,IAAM,CACJC,OAAQ,OACRC,IAAKjB,EAAO,gDACZ5D,KAAM,CACJyD,aAAcA,EACdqB,OAAQN,EACRO,YAAa7E,KAGd8E,MAAK,SAAUC,GACd,IAAIC,EAAOD,EAASjF,KACpB+D,EAAQmB,GACR3B,IACAH,EAAe,GACjB,IACC+B,OAAM,SAAUC,GAAQ,IACxBC,SAAQ,WACPC,YAAW,WACTjC,GAAkB,EACpB,GAAG,IACL,GACJ,CAmEgBkC,GACAvC,GAAa,GACbQ,GAAkB,EACpB,EAAE,SACH,UAGD,mBACEb,UAAU,kBACV0B,KAAK,kBACLC,MAAM,MACNC,QAAS,YA5EE,WACvBjB,GAAkB,GAClB,IAAMkB,EAAgBzF,MAAMC,QAAQmE,GAChCA,EAAYjE,KAAI,SAACuF,GAAG,OAAKC,SAASD,EAAI,IACtC,GAEJE,IAAM,CACJC,OAAQ,OACRC,IAAKjB,EAAO,gDACZ5D,KAAM,CACJyD,aAAcA,EACdqB,OAAQN,EACRO,YAAa7E,KAGd8E,MAAK,SAAUC,GACd,IAAIC,EAAOD,EAASjF,KACpBoD,EAAe,IACfY,EAAQkB,GACR3B,GACF,IACC4B,OAAM,SAAUC,GAAQ,IACxBC,SAAQ,WACPC,YAAW,WACThC,GAAkB,EACpB,GAAG,IACL,GACJ,CAkDgBkC,GACAxC,GAAa,GACbQ,GAAkB,EACpB,EAAE,SACH,qBASf,C,0KChGA,MA1CA,SAAsBnG,GAClB,IAAQoI,EAAuCpI,EAAvCoI,aAAcC,EAAyBrI,EAAzBqI,QAASC,EAAgBtI,EAAhBsI,YAC/B,GAAwB7B,EAAAA,EAAAA,UAAS,IAAG,eAA7BrD,EAAI,KACLmF,GADc,MACHC,EAAAA,EAAAA,QAAO,OAYpB,OAXJzF,EAAAA,EAAAA,YAAU,WACN0F,QAAQC,IAAItF,EAChB,GAAG,CAACA,KAOJL,EAAAA,EAAAA,YAAU,WAAQ,GAAG,CAACqF,KAGd,iCACI,gBAAK9C,UAAU,0BAAyB,UAChC,iBAAMA,UAAU,OAAOhE,GAAG,OAAM,UACxB,SAAC,EAAAqH,wBAAuB,CACpBC,MAAOR,EACPpB,KAAK,OACL6B,IAAKN,EACLO,KAAK,aACLxH,GAAG,aACH8G,aAAcA,EACdC,QAASA,EACT/C,UAAU,eAIVyD,SAAU,SAACC,GAAQV,GAAY,SAACW,GAAS,yBAAWA,GAAS,IAAE,WAAcD,EAAE1H,IAAE,IAAMmH,QAAQC,IAAIM,EAAG,EACtGE,QAxBZ,WAChBZ,GAAY,SAAAa,GAAI,yBAAUA,GAAI,IAAE,WAAc,MAAI,GACtD,EAuBgCC,UAAU,SAI9B,0BAAQhG,EAAK0F,SAI7B,E,uIC8oDA,MA7qDA,SAAkB9I,GAChB,IACE0F,EAaE1F,EAbF0F,UACAC,EAYE3F,EAZF2F,aAEAqB,GAUEhH,EAXFqJ,oBAWErJ,EAVFgH,MAGAsC,GAOEtJ,EATFuJ,OASEvJ,EARFwJ,cAQExJ,EAPFsJ,YACAG,EAMEzJ,EANFyJ,aAEAC,GAIE1J,EALF2J,OAKE3J,EAJF0J,WACAE,EAGE5J,EAHF4J,WACAC,EAEE7J,EAFF6J,YACAjH,EACE5C,EADF4C,UAEIwD,EAAeC,aAAaC,QAAQ,SACpCwD,EAAiBzD,aAAaC,QAAQ,WAC5CmC,QAAQC,IAAIY,EAAWS,UACvB,OAA0BtD,EAAAA,EAAAA,UAAS,IAAIuD,KAAe,OAAVV,QAAU,IAAVA,OAAU,EAAVA,EAAYS,WAAU,eAClE,GADY,KAAU,MACgBtD,EAAAA,EAAAA,UAAS,KAAG,eAA9BwD,GAAF,KAAgB,MAClC,GAAuCxD,EAAAA,EAAAA,UAAS,IAAG,eAA5CyD,EAAY,KAAEC,EAAc,KACnC,GAAsC1D,EAAAA,EAAAA,UAAS,IAAG,eAA3C2D,EAAW,KAAEC,EAAc,KAClC,GAA4B5D,EAAAA,EAAAA,UAAS,IAAG,eAAjC6D,EAAM,KAAEC,EAAS,KACxB,GAAkC9D,EAAAA,EAAAA,UAAS,IAAG,eAAvC+D,EAAS,KAAEC,EAAY,KAC9B,GAAwChE,EAAAA,EAAAA,UAAS,IAAG,eAA7C2B,EAAY,KAAEsC,EAAe,KACpC,GAA8BjE,EAAAA,EAAAA,UAAS,MAAK,gBAArCkE,GAAO,MAAEC,GAAU,MAC1B,IAA0BnE,EAAAA,EAAAA,UAAS,IAAG,iBAA/BoE,GAAK,MAAEC,GAAQ,MACtB,IAAoCrE,EAAAA,EAAAA,YAAU,iBAA3BsE,IAAF,MAAe,OAChC,IAA8BtE,EAAAA,EAAAA,YAAU,iBAAxBuE,IAAF,MAAY,OAC1B,IAAkDvE,EAAAA,EAAAA,WAAS,GAAM,iBAA1DwE,GAAiB,MAAEC,GAAoB,MAC9C,IAA4CzE,EAAAA,EAAAA,UAAS,IAAG,iBAClDF,IADe,MAAmB,MACxBC,EAAAA,EAAAA,SACV7D,GAAO,CACXwI,UAAWvI,EACXwI,YAAa,GACbC,OAAQ,GACRf,OAAQ,IACRxB,KAAM,GACNwC,QAAS,GACTC,SAAU,KACVC,WAAY,KACZC,YAAarF,EACbsF,cAAe5B,EACf6B,YAAa,GACbC,SAAU,IAGNC,QACsBC,GAA1BxC,EAAqB,UACK,MAA1BA,EAAqB,UACK,IAA1BA,EAAqB,UAAO,kBACnB3G,IAAI,IAAEoJ,IAAK,KAAC,kBACZpJ,IAAI,IAAEoJ,IAAKzC,EAAqB,SAAI,EAAI,IAEnD,IAAgC7C,EAAAA,EAAAA,UAASoF,IAAgB,iBAAlDG,GAAQ,MAAE1D,GAAW,MAE5BG,QAAQC,IAAIsD,GAASD,KACrB,QAA4BtF,EAAAA,EAAAA,WAAS,GAAM,iBAC3C,IADa,MAAW,OACgBA,EAAAA,EAAAA,UAAS6C,IAAW,iBAArD2C,GAAY,MAAEC,GAAe,MACpC,IAAsDzF,EAAAA,EAAAA,UAAS6C,GAAW,iBAAnE6C,GAAmB,MAC1B,IADkD,OAC1B1F,EAAAA,EAAAA,WAAS,IAAK,iBAA/B2F,GAAI,MAAEC,GAAO,MACpB5D,QAAQC,IAAI0D,IAEZ,QAAkC3F,EAAAA,EAAAA,UAAS,IAAG,iBAAvC6F,GAAS,MAAEC,GAAY,MAC9B,IAAgC9F,EAAAA,EAAAA,UAAS,IAAG,iBAArC+F,GAAQ,MAAEC,GAAW,MAC5B,IAAgChG,EAAAA,EAAAA,UAAS,IAAG,iBAArCiG,GAAQ,MAAEC,GAAW,MAC5B,IAA4BlG,EAAAA,EAAAA,UAAS,IAAG,iBAAjCmG,GAAM,MAAEC,GAAS,MACxB,IAAkCpG,EAAAA,EAAAA,UAAS,IAAG,iBAAvCqG,GAAS,MAAEC,GAAY,MAC9B,IAAgCtG,EAAAA,EAAAA,UAAS,IAAG,iBAArCuG,GAAQ,MAAEC,GAAW,MAC5B,IAAwBxG,EAAAA,EAAAA,UAAS,IAAG,iBAAvByG,IAAF,MAAS,OACpB,IAAuCzG,EAAAA,EAAAA,UAAS,IAAG,iBAA5C0G,GAAY,MAAEC,GAAc,MACnC,IAAoC3G,EAAAA,EAAAA,UAAS,IAAG,iBAAzC4G,GAAU,MAAEC,GAAa,MAChC,IAA4B7G,EAAAA,EAAAA,UAAS,IAAG,iBACxC,IADa,MAAW,OACQA,EAAAA,EAAAA,UAAS,KAAG,iBAArC8G,GAAQ,MAAEC,GAAW,MAC5B/E,QAAQC,IAAIY,GACZ,IAAMT,IAAML,EAAAA,EAAAA,QAAO,IASnB,IADciF,IAAOA,MAASC,YAAYC,OAAO,eACzBlH,EAAAA,EAAAA,UAAS,KAAG,iBAA7BrD,GAAI,MAAS,OACpBL,EAAAA,EAAAA,YAAU,WACR0F,QAAQC,IAAItF,GACd,GAAG,CAACA,MAGJL,EAAAA,EAAAA,YAAU,WACR6K,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,IACF,GAAG,IAGH,IAAMd,GAAiB,SAAC5E,GACtBP,QAAQC,IAAI,qBACZpB,IAAM,CACJC,OAAQ,MACRC,IAAKjB,GAAO,qCACXoB,MAAK,SAACgH,GACP,IAAIvD,EAAcuD,EAAIhM,KACtBwH,EAAeiB,EACjB,GACF,EAGMyC,GAAiB,SAAC7E,GACtB1B,IAAM,CACJC,OAAQ,MACRC,IAAKjB,GAAO,qCACXoB,MAAK,SAACgH,GACP,IAAIvE,EAAcuE,EAAIhM,KACtB0H,EAAeD,EACjB,GACF,EAGM0D,GAAgB,SAAC9E,GACrB1B,IAAM,CACJC,OAAQ,MACRC,IAAKjB,GAAO,oCACXoB,MAAK,SAACgH,GACP,IAAIrE,EAASqE,EAAIhM,KACjB4H,EAAUD,GACV7B,QAAQC,IAAI4B,EACd,GACF,EAGMyD,GAAmB,SAAC/E,GACxB1B,IAAM,CACJC,OAAQ,MACRC,IAAKjB,GAAO,uCACXoB,MAAK,SAACgH,GACP,IAAIrE,EAASqE,EAAIhM,KACjB8H,EAAaH,GACb7B,QAAQC,IAAI4B,EACd,GACF,EAGMjC,GAAU,WACdI,QAAQC,IAAI,eACZpB,IAAM,CACJC,OAAQ,MACRC,IAAKjB,GAAO,sCACXoB,MAAK,SAAUC,GAChB,IAAI+G,EAAM/G,EAASjF,KACnB+H,EAAgBiE,GAChBlG,QAAQC,IAAI,iBACZD,QAAQC,IAAIiG,EACd,GACF,GACA5L,EAAAA,EAAAA,YAAU,WAAO,GAAG,CAACqF,KACrBrF,EAAAA,EAAAA,YAAU,WACRsF,IACF,GAAG,IAGH,IAAM2F,GAAa,SAAChF,GAClB1B,IAAM,CACJC,OAAQ,MACRC,IAAKjB,GAAO,qCACXoB,MAAK,SAACgH,GACP,IAAIC,EAAUD,EAAIhM,KAClBsH,EAAe2E,EACjB,GACF,EAkBMX,GAAe,SAACjF,GACpB1B,IAAM,CACJC,OAAQ,MACRC,IAAKjB,GAAO,oDAAgD3D,KAC3D+E,MAAK,SAACgH,GACP,IAAIE,EAAYF,EAAIhM,KACpB4J,GAAasC,EACf,GACF,EAEMX,GAAqB,WACzB5G,IAAM,CACJC,OAAQ,MACRC,IAAKjB,GAAO,yCACXoB,MAAK,SAACgH,GACP,IAAIG,EAAkBH,EAAIhM,KAC1B8J,GAAYqC,EACd,GACF,EAEMX,GAAoB,WACxB7G,IAAM,CACJC,OAAQ,MACRC,IAAKjB,GAAO,wCACXoB,MAAK,SAACgH,GACP,IAAII,EAAiBJ,EAAIhM,KACzBgK,GAAYoC,EACd,GACF,EAEMX,GAAkB,WACtB9G,IAAM,CACJC,OAAQ,MACRC,IAAKjB,GAAO,sCACXoB,MAAK,SAACgH,GACP,IAAIK,EAAeL,EAAIhM,KACvBkK,GAAUmC,EACZ,GACF,EAEMX,GAAqB,WACzB/G,IAAM,CACJC,OAAQ,MACRC,IAAKjB,GAAO,yCACXoB,MAAK,SAACgH,GACP,IAAIM,EAAkBN,EAAIhM,KAC1BoK,GAAakC,EACf,GACF,EAEMX,GAAoB,WACxBhH,IAAM,CACJC,OAAQ,MACRC,IAAKjB,GAAO,wCACXoB,MAAK,SAACgH,GACP,IAAIO,EAAiBP,EAAIhM,KACzBsK,GAAYiC,EACd,GACF,EAEMX,GAAe,WACnBjH,IAAM,CACJC,OAAQ,MACRC,IAAKjB,GAAO,mCACXoB,MAAK,SAACgH,GACP,IAAIQ,EAAYR,EAAIhM,KACpBuK,GAAQiC,EACV,GACF,EAEMX,GAAoB,WACxBlH,IAAM,CACJC,OAAQ,MACRC,IAAKjB,GAAO,wCACXoB,MAAK,SAACgH,GACP,IAAIS,EAAiBT,EAAIhM,KACzByK,GAAegC,EACjB,GACF,EAEMX,GAAsB,WAC1BnH,IAAM,CACJC,OAAQ,MACRC,IAAKjB,GAAO,0CACXoB,MAAK,SAACgH,GACP,IAAIU,EAAmBV,EAAIhM,KAC3B2K,GAAc+B,EAChB,GACF,EAYMX,GAAoB,WACxBpH,IAAM,CACJC,OAAQ,MACRC,IAAKjB,GAAO,wCACXoB,MAAK,SAACgH,GACP,IAAIW,EAAiBX,EAAIhM,KACzB6K,GAAY8B,EACd,GACF,EACMC,GAAgB,CACpBC,QAAS,CACP,CACE,CAAEC,OAAQ,EAAC,EAAO,EAAG,EAAG,EAAG,EAAG,EAAG,IAGjC,CAAEC,KAAM,IACR,CAAEC,MAAO,IACT,CAAEC,KAAM,CAAEC,QAAS,kBACnB,SACA,YACA,CAAEC,KAAM,UAAWD,QAAS,iBAC5B,CAAEC,KAAM,UACR,CAAEC,OAAQ,OACV,CAAEA,OAAQ,SACV,CAAEC,OAAQ,MACV,CAAEA,OAAQ,MACV,CAAEC,MAAO,MACT,CAAEA,MAAO,UACT,CAAEA,MAAO,SACT,SACA,OACA,aACA,WAIAC,GAAe,SAAClH,GACpB,MAAsBA,EAAEmH,OAAhB7O,EAAE,EAAFA,GAAIuJ,EAAK,EAALA,MACZvC,IAAY,SAACa,GAAI,yBAAWA,GAAI,cAAG7H,EAAKuJ,GAAK,GAC/C,EAEA,IAA0CpE,EAAAA,EAAAA,WAAS,GAAM,iBAAlD2J,GAAa,MAAEC,GAAgB,MAuNhCC,GAAgB,SAAC9K,GAEK,iBAEH+K,KAAK/K,EAAMrE,MAEhCqE,EAAMgL,gBAEV,EAIA,OAFA/H,QAAQC,IAAc,OAAVY,QAAU,IAAVA,OAAU,EAAVA,EAAYmH,YAGtB,gBAAKnL,UAAU,YAAW,UAExB,UAAC,KAAM,CACLsB,QAASlB,EACTmB,KAAK,KACLC,QAAS,kBAAMnB,GAAa,EAAM,EAClCoB,SAAU,SAAS,WAEnB,SAAC,KAAY,CAACzB,UAAU,GAAGnF,MAAO,CAAEuQ,OAAQ,cAAe,UACzD,UAAC,KAAW,WACT,IACA,GACQ,OAAR1J,GACC,iBAAM1B,UAAU,GAAE,SAAC,eAEnB,iBAAMA,UAAU,GAAE,SAAC,uBAIzB,SAAC,KAAU,WACT,iBAAKA,UAAU,qBAAoB,WACjC,2BACG8K,IACC,iBAAK9K,UAAU,kBAAiB,WAC9B,SAAC,MAAa,CAACuB,KAAK,WACpB,0BAAM,iCAGR,GAEDoE,IACC,iBAAK3F,UAAU,kBAAiB,WAC9B,SAAC,MAAa,CAACuB,KAAK,WACpB,0BAAM,6DAKR,MAGHgD,EAAYhI,KAAI,SAACiO,GAAI,OACpB,gBAAKxK,UAAU,iBAAgB,UAC7B,iBAAKA,UAAU,iBAAiBhE,GAAG,UAAS,WAC1C,kBAAOgE,UAAU,QAAO,SAAC,aACzB,kBAAOA,UAAU,YAAW,SAAC,OAC7B,kBAAOA,UAAU,QAAO,UACX,OAAVgE,QAAU,IAAVA,GAAAA,EAAYmH,WACX,kBACEzJ,KAAK,OACL1B,UAAU,eACVwD,KAAK,UACLxH,GAAIsB,EACJ+N,UAAU,EACV9F,MAAOiF,EAAKc,YACZC,SAAU,SAAC7H,GAAC,OAAKkH,GAAalH,EAAE,WAepC,KAER,gBAAK1D,UAAU,iBAAgB,UAC7B,iBAAKA,UAAU,iBAAiBhE,GAAG,OAAM,WACvC,mBAAOgE,UAAU,QAAO,UAAC,cACb,iBAAMA,UAAU,mBAAkB,SAAC,UAE/C,kBAAOA,UAAU,YAAW,SAAC,OAC7B,gBACEA,UAAU,kBACVuD,IAAK,SAACiI,GACJjI,GAAIkI,QAAQ,GAAKD,CACnB,EAAE,SAEO,OAAR9J,GACC,kBACE1B,UAAU,eACV0B,KAAK,OACL1F,GAAG,OACH0P,YAAY,oBACZC,UAAW,GACXC,UAAW,SAAC1L,GAEQ,SAAdA,EAAM2L,MAAoBnF,GAASlD,MACrCtD,EAAMgL,gBACV,EAEA1H,KAAK,OACLsI,UAAQ,EACRP,SAAU,SAAC7H,GAAC,OAAKkH,GAAalH,EAAE,KAGlC,gCACG,IACyB,MAAf,OAAVM,QAAU,IAAVA,OAAU,EAAVA,EAAYmH,YACX,kBACEnL,UAAU,gBACV0B,KAAK,OACL8B,KAAK,OACLxH,GAAG,OAMH+P,aAAwB,OAAV/H,QAAU,IAAVA,OAAU,EAAVA,EAAYgI,WAC1BT,SAAU,SAAC7H,GACTkD,IAAgB,SAAC/C,GAAI,yBAChBA,GAAI,cACN,aAAeH,EAAEmH,OAAOtF,OAAK,IAE9BwB,IAAQ,EACZ,KAGF,kBACErF,KAAK,OACL2J,UAAU,EACVK,YAAY,oBACZK,aAAwB,OAAV/H,QAAU,IAAVA,OAAU,EAAVA,EAAYgI,wBAQxC,gBAAKhM,UAAU,iBAAgB,UAC7B,iBAAKA,UAAU,iBAAiBhE,GAAG,cAAa,WAC9C,mBAAOgE,UAAU,SAAQ,UAAC,eACb,iBAAMA,UAAU,kBAAiB,SAAC,UAE/C,kBAAOA,UAAU,YAAW,SAAC,OAC7B,kBAAOA,UAAU,SAAQ,SACd,OAAR0B,GACC,oBACE1B,UAAU,sBACVwD,KAAK,cACLxH,GAAG,cACHuP,SAAU,SAAC7H,GAAC,OAAKkH,GAAalH,EAAE,EAAC,WAEjC,oBAAQ6B,MAAM,MAAK,UAChB,IAAI,uBAGNX,EAAarI,KAAI,SAAC0P,GAAI,OACrB,oBAAQ1G,MAAO0G,EAAKjQ,GAAG,UAAC,IAAEiQ,EAAKC,YAAmB,QAItD,8BAC4B,MAAf,OAAVlI,QAAU,IAAVA,OAAU,EAAVA,EAAYmH,YACX,oBACEnL,UAAU,uBACVwD,KAAK,cACLxH,GAAG,cACHuP,SAAU,SAAC7H,GAAC,OACVkD,IAAgB,SAAC/C,GAAI,yBAChBA,GAAI,cACN,cAAgBH,EAAEmH,OAAOtF,OAAK,GAC9B,EACJ,WAED,oBAAQA,MAAM,MAAK,UAChB,IAAI,uBAGNX,EAAarI,KAAI,SAAC0P,GAAI,OACrB,oBACE1G,MAAO0G,EAAKjQ,GACZmQ,SACEF,EAAKjQ,KAAgB,OAAVgI,QAAU,IAAVA,OAAU,EAAVA,EAAYoI,aAGxB,UAEA,IACAH,EAAKC,YACC,QAIb,oBACElM,UAAU,kBACVqL,UAAU,EACV7H,KAAK,cACLxH,GAAG,cACHuP,SAAU,SAAC7H,GAAC,OACVkD,IAAgB,SAAC/C,GAAI,yBAChBA,GAAI,cACN,cAAgBH,EAAEmH,OAAOtF,OAAK,GAC9B,EACJ,WAED,oBAAQA,MAAM,MAAK,UAChB,IAAI,uBAGNX,EAAarI,KAAI,SAAC0P,GAAI,OACrB,oBACE1G,MAAO0G,EAAKjQ,GACZmQ,SACEF,EAAKjQ,KAAgB,OAAVgI,QAAU,IAAVA,OAAU,EAAVA,EAAYoI,aAGxB,UAEA,IACAH,EAAKC,YACC,iBASzB,gBAAKlM,UAAU,iBAAgB,UAC7B,iBAAKA,UAAU,iBAAiBhE,GAAG,SAAQ,WACzC,mBAAOgE,UAAU,QAAO,UAAC,gBACX,iBAAMA,UAAU,kBAAiB,SAAC,UAEhD,kBAAOA,UAAU,YAAW,SAAC,OAC7B,kBAAOA,UAAU,SAAQ,SACd,OAAR0B,GACC,oBACE1B,UAAU,sBACVwD,KAAK,SACLxH,GAAG,SACHuP,SAAU,SAAC7H,GAAC,OAAKkH,GAAalH,EAAE,EAAC,WAEjC,oBAAQ6B,MAAM,MAAK,UAChB,IAAI,uBAGNT,EAAYvI,KAAI,SAAC0P,GAAI,OACpB,oBAAQ1G,MAAO0G,EAAKjQ,GAAG,UAAC,IAAEiQ,EAAKC,YAAmB,QAItD,8BAC4B,MAAf,OAAVlI,QAAU,IAAVA,OAAU,EAAVA,EAAYmH,YACX,oBACEnL,UAAU,sBACVwD,KAAK,SACLxH,GAAG,SACHuP,SAAU,SAAC7H,GAAC,OACVkD,IAAgB,SAAC/C,GAAI,yBAChBA,GAAI,cACN,YAAcH,EAAEmH,OAAOtF,OAAK,GAC5B,EACJ,WAED,oBAAQA,MAAM,MAAK,UAChB,IAAI,uBAGNT,EAAYvI,KAAI,SAAC0P,GAAI,OACpB,oBACE1G,MAAO0G,EAAKjQ,GACZmQ,SACEF,EAAKjQ,KAAgB,OAAVgI,QAAU,IAAVA,OAAU,EAAVA,EAAYqI,WACxB,UAEA,IACAJ,EAAKC,YACC,QAIb,oBACElM,UAAU,iBACVqL,UAAU,EACV7H,KAAK,SACLxH,GAAG,SACHuP,SAAU,SAAC7H,GAAC,OACVkD,IAAgB,SAAC/C,GAAI,yBAChBA,GAAI,cACN,YAAcH,EAAEmH,OAAOtF,OAAK,GAC5B,EACJ,WAED,oBAAQA,MAAM,MAAK,UAChB,IAAI,uBAGNT,EAAYvI,KAAI,SAAC0P,GAAI,OACpB,oBACE1G,MAAO0G,EAAKjQ,GACZmQ,SACEF,EAAKjQ,KAAgB,OAAVgI,QAAU,IAAVA,OAAU,EAAVA,EAAYqI,WACxB,UAEA,IACAJ,EAAKC,YACC,iBASzB,gBAAKlM,UAAU,iBAAgB,UAC7B,iBAAKA,UAAU,iBAAiBhE,GAAG,SAAQ,WACzC,kBAAOgE,UAAU,QAAO,SAAC,YACzB,kBAAOA,UAAU,YAAW,SAAC,OAC7B,kBAAOA,UAAU,QAAO,SACb,OAAR0B,GACC,mBACE1B,UAAU,yBACVwD,KAAK,SACLxH,GAAG,SACHuP,SAAU,SAAC7H,GAAC,OAAKkH,GAAalH,EAAE,EAChC2H,UAAU,EAAK,UAEf,oBAAQ9F,MAAM,QAAQvJ,GAAG,QAAO,UAC7B,IAAI,WAIkB,MAAf,OAAVgI,QAAU,IAAVA,OAAU,EAAVA,EAAYmH,YACd,mBACEnL,UAAU,aACVwD,KAAK,SACLxH,GAAG,SACHuP,SAAU,SAAC7H,GAAC,OACVkD,IAAgB,SAAC/C,GAAI,yBAChBA,GAAI,cACN,YAAcH,EAAEmH,OAAOtF,OAAK,GAC5B,EACJ,SAEAL,EAAU3I,KAAI,SAAC0P,GAAI,OAClB,oBACE1G,MAAO0G,EAAKjQ,GACZmQ,SACEF,EAAKjQ,KAAgB,OAAVgI,QAAU,IAAVA,OAAU,EAAVA,EAAYmH,WACxB,UAEA,IACAc,EAAKC,YACC,MAGc,MAAf,OAAVlI,QAAU,IAAVA,OAAU,EAAVA,EAAYmH,YACd,mBACEnL,UAAU,aACVwD,KAAK,SACLxH,GAAG,SACHuP,SAAU,SAAC7H,GAAC,OACVkD,IAAgB,SAAC/C,GAAI,yBAChBA,GAAI,cACN,YAAcH,EAAEmH,OAAOtF,OAAK,GAC5B,EACJ,SAEA2B,GAAS3K,KAAI,SAAC0P,GAAI,OACjB,oBACE1G,MAAO0G,EAAKjQ,GACZmQ,SACEF,EAAKjQ,KAAgB,OAAVgI,QAAU,IAAVA,OAAU,EAAVA,EAAYmH,WACxB,UAEA,IACAc,EAAKC,YACC,MAGc,MAAf,OAAVlI,QAAU,IAAVA,OAAU,EAAVA,EAAYmH,YACd,mBACEnL,UAAU,aACVwD,KAAK,SACLxH,GAAG,SACHuP,SAAU,SAAC7H,GAAC,OACVkD,IAAgB,SAAC/C,GAAI,yBAChBA,GAAI,cACN,YAAcH,EAAEmH,OAAOtF,OAAK,GAC5B,EACJ,SAEA+B,GAAO/K,KAAI,SAAC0P,GAAI,OACf,oBACE1G,MAAO0G,EAAKjQ,GACZmQ,SACEF,EAAKjQ,KAAgB,OAAVgI,QAAU,IAAVA,OAAU,EAAVA,EAAYmH,WACxB,UAEA,IACAc,EAAKC,YACC,MAGc,MAAf,OAAVlI,QAAU,IAAVA,OAAU,EAAVA,EAAYmH,YACd,mBACEnL,UAAU,aACVwD,KAAK,SACLxH,GAAG,SACHuP,SAAU,SAAC7H,GAAC,OACVkD,IAAgB,SAAC/C,GAAI,yBAChBA,GAAI,cACN,YAAcH,EAAEmH,OAAOtF,OAAK,GAC5B,EACJ,SAEAiC,GAAUjL,KAAI,SAAC0P,GAAI,OAClB,oBACE1G,MAAO0G,EAAKjQ,GACZmQ,SACEF,EAAKjQ,KAAgB,OAAVgI,QAAU,IAAVA,OAAU,EAAVA,EAAYmH,WACxB,UAEA,IACAc,EAAKC,YACC,MAGc,MAAf,OAAVlI,QAAU,IAAVA,OAAU,EAAVA,EAAYmH,YACd,mBACEnL,UAAU,aACVwD,KAAK,SACLxH,GAAG,SACHuP,SAAU,SAAC7H,GAAC,OACVkD,IAAgB,SAAC/C,GAAI,yBAChBA,GAAI,cACN,YAAcH,EAAEmH,OAAOtF,OAAK,GAC5B,EACJ,SAEAmC,GAASnL,KAAI,SAAC0P,GAAI,OACjB,oBACE1G,MAAO0G,EAAKjQ,GACZmQ,SACEF,EAAKjQ,KAAgB,OAAVgI,QAAU,IAAVA,OAAU,EAAVA,EAAYmH,WACxB,UAEA,IACAc,EAAKC,YACC,MAGc,MAAf,OAAVlI,QAAU,IAAVA,OAAU,EAAVA,EAAYmH,YACd,mBACEnL,UAAU,aACVwD,KAAK,SACLxH,GAAG,SACHuP,SAAU,SAAC7H,GAAC,OACVkD,IAAgB,SAAC/C,GAAI,yBAChBA,GAAI,cACN,YAAcH,EAAEmH,OAAOtF,OAAK,GAC5B,EACJ,SAEAsC,GAAatL,KAAI,SAAC0P,GAAI,OACrB,oBACE1G,MAAO0G,EAAKjQ,GACZmQ,SACEF,EAAKjQ,KAAgB,OAAVgI,QAAU,IAAVA,OAAU,EAAVA,EAAYmH,WACxB,UAEA,IACAc,EAAKC,YACC,MAGc,MAAf,OAAVlI,QAAU,IAAVA,OAAU,EAAVA,EAAYmH,YACd,mBACEnL,UAAU,aACVwD,KAAK,SACLxH,GAAG,SACHuP,SAAU,SAAC7H,GAAC,OACVkD,IAAgB,SAAC/C,GAAI,yBAChBA,GAAI,cACN,YAAcH,EAAEmH,OAAOtF,OAAK,GAC5B,EACJ,SAEA0C,GAAS1L,KAAI,SAAC0P,GAAI,OACjB,oBACE1G,MAAO0G,EAAKjQ,GACZmQ,SACEF,EAAKjQ,KAAgB,OAAVgI,QAAU,IAAVA,OAAU,EAAVA,EAAYmH,WACxB,UAEA,IACAc,EAAKC,YACC,MAGc,MAAf,OAAVlI,QAAU,IAAVA,OAAU,EAAVA,EAAYmH,YACd,mBACEnL,UAAU,aACVwD,KAAK,SACLxH,GAAG,SACHuP,SAAU,SAAC7H,GAAC,OACVkD,IAAgB,SAAC/C,GAAI,yBAChBA,GAAI,cACN,YAAcH,EAAEmH,OAAOtF,OAAK,GAC5B,EACJ,SAEAwC,GAAWxL,KAAI,SAAC0P,GAAI,OACnB,oBACE1G,MAAO0G,EAAKjQ,GACZmQ,SACEF,EAAKjQ,KAAgB,OAAVgI,QAAU,IAAVA,OAAU,EAAVA,EAAYmH,WACxB,UAEA,IACAc,EAAKC,YACC,MAGc,MAAf,OAAVlI,QAAU,IAAVA,OAAU,EAAVA,EAAYmH,YACd,mBACEnL,UAAU,aACVwD,KAAK,SACLxH,GAAG,SACHuP,SAAU,SAAC7H,GAAC,OACVkD,IAAgB,SAAC/C,GAAI,yBAChBA,GAAI,cACN,YAAcH,EAAEmH,OAAOtF,OAAK,GAC5B,EACJ,SAEA6B,GAAS7K,KAAI,SAAC0P,GAAI,OACjB,oBACE1G,MAAO0G,EAAKjQ,GACZmQ,SACEF,EAAKjQ,KAAgB,OAAVgI,QAAU,IAAVA,OAAU,EAAVA,EAAYmH,WACxB,UAEA,IACAc,EAAKC,YACC,MAGc,MAAf,OAAVlI,QAAU,IAAVA,OAAU,EAAVA,EAAYmH,YACd,mBACEnL,UAAU,aACVqL,UAAU,EACV7H,KAAK,SACLxH,GAAG,SACHuP,SAAU,SAAC7H,GAAC,OACVkD,IAAgB,SAAC/C,GAAI,yBAChBA,GAAI,cACN,YAAcH,EAAEmH,OAAOtF,OAAK,GAC5B,EACJ,SAEAP,EAAOzI,KAAI,SAAC0P,GAAI,OACf,oBACE1G,MAAO0G,EAAKjQ,GACZmQ,SACEF,EAAKjQ,KAAgB,OAAVgI,QAAU,IAAVA,OAAU,EAAVA,EAAYmH,WACxB,UAEA,IACAc,EAAKC,YACC,OAIb,mBACElM,UAAU,aACVwD,KAAK,SACLxH,GAAG,SACHuP,SAAU,SAAC7H,GAAC,OACVkD,IAAgB,SAAC/C,GAAI,yBAChBA,GAAI,cACN,YAAcH,EAAEmH,OAAOtF,OAAK,GAC5B,EACJ,SAEAP,EAAOzI,KAAI,SAAC0P,GAAI,OACf,oBACE1G,MAAO0G,EAAKjQ,GACZmQ,SACEF,EAAKjQ,KAAgB,OAAVgI,QAAU,IAAVA,OAAU,EAAVA,EAAYmH,WACxB,UAEA,IACAc,EAAKC,YACC,cAOrB,gBAAKlM,UAAU,iBAAgB,UAC7B,iBAAKA,UAAU,iBAAiBhE,GAAG,UAAS,WAC1C,kBAAOgE,UAAU,QAAO,SAAC,cACzB,kBAAOA,UAAU,YAAW,SAAC,OAC7B,gBAAKA,UAAU,SAAQ,UACrB,gBAAKA,UAAU,aAAY,SAChB,OAAR0B,GACC,SAAC,IAAU,CACT8B,KAAK,UACLxH,GAAG,UACHmQ,SAAU9G,GACViH,WAAW,cACXC,mBAAiB,EACjBC,kBAAgB,EAChBC,aAAa,SACbC,QAAS,IAAIhI,KACb6G,SAAU,SAAC7H,GACTV,IAAY,SAACa,GAAI,yBACZA,GAAI,cACN,UAAYsE,IAAOzE,GAAG2E,OAAO,eAAa,IAE7ClF,QAAQC,IAAIM,GACZ4B,GAAW5B,EACb,EACAkI,UAAW,SAAClI,GACVA,EAAEwH,iBACe,GAAbxH,EAAEiJ,SACJjJ,EAAEwH,gBAEN,KAGF,8BAC4B,MAAf,OAAVlH,QAAU,IAAVA,OAAU,EAAVA,EAAYmH,YACX,SAAC,IAAU,CACT3H,KAAK,UACLxH,GAAG,UACHmQ,cAC8B3F,GAA5BG,GAAuB,SACnB,GACAwB,IAAOxB,GAAuB,UAAGiG,GAEvCN,WAAW,cACXO,WAAY1E,MAAS2E,SACrBP,mBAAiB,EACjBC,kBAAgB,EAChBE,QAAS,IAAIhI,KACb+H,aAAa,SAEblB,SAAU,SAAC7H,GACTkD,IAAgB,SAAC/C,GAAI,yBAChBA,GAAI,cACN,WAAasE,IAAOzE,GAAG2E,OAAO,eAAa,IAE9ClF,QAAQC,IAAIM,EACd,EACAkI,UAAW,SAAClI,GACVA,EAAEwH,gBACJ,KAGF,SAAC,IAAU,CACT1H,KAAK,UACLxH,GAAG,UACHmQ,cAC8B3F,GAA5BG,GAAuB,SACnB,GACAwB,IAAOxB,GAAuB,UAAGiG,GAEvCN,WAAW,cACXC,mBAAiB,EACjBlB,UAAU,EACVmB,kBAAgB,EAChBE,QAAS,IAAIhI,KACb+H,aAAa,SAEblB,SAAU,SAAC7H,GACTkD,IAAgB,SAAC/C,GAAI,yBAChBA,GAAI,cACN,WAAasE,IAAOzE,GAAG2E,OAAO,eAAa,IAE9ClF,QAAQC,IAAIM,EACd,EACAkI,UAAW,SAAClI,GACVA,EAAEwH,gBACJ,gBAShB,gBAAKlL,UAAU,iBAAgB,UAC7B,iBAAKA,UAAU,iBAAgB,WAC7B,kBAAOA,UAAU,QAAO,SAAC,iBACzB,kBAAOA,UAAU,YAAW,SAAC,OAC7B,gBAAKA,UAAU,QAAO,SACX,OAAR0B,GACC,iCACE,gBAAK1B,UAAU,yBAAwB,UACrC,SAAC,EAAAqD,wBAAuB,CACtBC,MAAOR,EACPpB,KAAK,OACL8B,KAAK,aACLxH,GAAG,aACH0P,YAAY,4BACZ1L,UAAU,eACV4L,UAAWZ,GACXlI,aAAcA,EACdC,QAASA,GACTU,SAAU,SAACC,GAEPV,IAAY,SAACW,GAAS,yBACjBA,GAAS,IACZuC,WAAYxC,EAAE1H,IAAE,IAIlBgH,IAAY,SAACW,GAAS,yBACjBA,GAAS,IACZqB,OAAQ,KAAG,GAGjB,EACAlB,UAAU,OAGd,0BAAOhG,GAAK0F,WAGd,8BAE6B,MAAf,OAAVQ,QAAU,IAAVA,OAAU,EAAVA,EAAYmH,YACV,gBAAKnL,UAAU,yBAAwB,UACrC,SAAC,EAAAqD,wBAAuB,CACtBC,MAAOR,EACPpB,KAAK,OACL8B,KAAK,aACLxH,GAAG,aACHgE,UAAU,cACV8C,aAAcA,EACdC,QAASA,GACT6I,UAAWZ,GAEXvH,SAAU,SAACC,GACTP,QAAQC,IAAIM,GACZkD,IAAgB,SAAC/C,GAAI,yBAChBA,GAAI,cACN,WAAaH,EAAE1H,IAAE,IAEpByJ,GAAc/B,EAAE1H,GAClB,EACAuP,SAAU,SAAC7H,GACTkD,IAAgB,SAAC/C,GAAI,yBAChBA,GAAI,cACN,WAAaH,EAAE1H,IAAE,GAEtB,EACA8H,UAAU,EACViJ,kBAA6B,OAAV/I,QAAU,IAAVA,OAAU,EAAVA,EAAYgJ,iBAKnC,gBAAKhN,UAAU,yBAAwB,UACrC,gBAAKA,UAAU,gCAA+B,UAC5C,kBACE+L,aAAwB,OAAV/H,QAAU,IAAVA,OAAU,EAAVA,EAAYgJ,YAC1B1J,MAAOR,EACPpB,KAAK,OACL2J,UAAU,EACV7H,KAAK,aACLxH,GAAG,6BAavB,gBAAKgE,UAAU,iBAAgB,UAC7B,iBAAKA,UAAU,iBAAiBhE,GAAG,MAAK,WACtC,kBAAOgE,UAAU,QAAO,SAAC,cACzB,kBAAOA,UAAU,YAAW,SAAC,OAC7B,gBAAKA,UAAU,SAAQ,UACrB,gBAAKA,UAAU,MAAK,SACT,OAAR0B,GACC,iCACE,iBACE1B,UAAU,QACVuL,SAAU,SAAC7H,GACTgC,GAAW,KACX1C,IAAY,SAACa,GAAI,yBAAWA,GAAI,cAAG,MAAQ,KAAG,GAChD,EAAE,WAEF,kBACE7D,UAAU,mBACViN,QAAQ,MACRvL,KAAK,QACL6D,MAAM,IACN/B,KAAK,MACLxH,GAAG,MACHkR,QAA4B,KAAnBxG,GAAc,MACvB,QAEF,iBAAM1G,UAAU,mBAAkB,SAAC,QAAW,QAEhD,iBACEA,UAAU,QACVuL,SAAU,SAAC7H,GACTgC,GAAW,KACX1C,IAAY,SAACa,GAAI,yBAAWA,GAAI,cAAG,MAAQ,KAAG,GAChD,EAAE,WAEF,kBACE7D,UAAU,mBACViN,QAAQ,KACRvL,KAAK,QACL8B,KAAK,MACLxH,GAAG,MACHuJ,MAAM,IACN2H,QAA4B,KAAnBxG,GAAc,MACvB,QAEF,iBAAM1G,UAAU,mBAAkB,SAAC,cAIvC,8BAC4B,MAAf,OAAVgE,QAAU,IAAVA,OAAU,EAAVA,EAAYmH,YACX,iCACE,iBACEnL,UAAU,SACVuL,SAAU,SAAC7H,GACTkD,IAAgB,SAAC/C,GAAI,yBAChBA,GAAI,cACN,WAAa,KAAG,GAErB,EAAE,WAEF,kBACE7D,UAAU,mBACViN,QAAQ,MACRvL,KAAK,QACL6D,MAAM,IACN/B,KAAK,WACLxH,GAAG,WACHkR,QAC8B,KAA5BvG,GAAuB,WAEzB,QAEF,0BAAM,QAAW,QAEnB,iBACE3G,UAAU,SACVuL,SAAU,SAAC7H,GACTkD,IAAgB,SAAC/C,GAAI,yBAChBA,GAAI,cACN,WAAa,KAAG,GAErB,EAAE,WAEF,kBACE7D,UAAU,mBACViN,QAAQ,KACRvL,KAAK,QACL8B,KAAK,WACLxH,GAAG,WACHuJ,MAAM,IACN2H,QAC8B,KAA5BvG,GAAuB,WAEzB,QAEF,0BAAM,cAIV,iCACE,iBACE3G,UAAU,SACVqL,UAAU,EACV,WAEA,kBACErL,UAAU,mBACViN,QAAQ,MACRvL,KAAK,QACL6D,MAAM,IACN/B,KAAK,WACLxH,GAAG,WACHkR,QAC8B,KAA5BvG,GAAuB,WAEzB,QAEF,0BAAM,YAER,iBAAK3G,UAAU,SAASqL,UAAU,EAAK,WACrC,kBACErL,UAAU,mBACViN,QAAQ,KACRvL,KAAK,QACL8B,KAAK,WACLxH,GAAG,WACHuJ,MAAM,IACN2H,QAC8B,KAA5BvG,GAAuB,WAEzB,QAEF,0BAAM,yBAUxB,gBAAK3G,UAAU,iBAAgB,UAC7B,iBAAKA,UAAU,iBAAiBhE,GAAG,YAAW,WAC5C,kBAAOgE,UAAU,QAAO,SAAC,gBACzB,kBAAOA,UAAU,YAAW,SAAC,OAC7B,kBAAOA,UAAU,SAAQ,SACd,OAAR0B,GACC,kBACE1B,UAAU,eACV0B,KAAK,OACL1F,GAAG,YACHmR,UAAQ,EACRpB,aAAcvH,EACd6G,UAAU,KAGZ,kBACE3J,KAAK,OACL1B,UAAU,eACVwD,KAAK,YACLxH,GAAG,YACHmR,UAAQ,EACRpB,aAAwB,OAAV/H,QAAU,IAAVA,OAAU,EAAVA,EAAYoJ,WAC1B/B,UAAU,YAOpB,gBAAKrL,UAAU,aAAY,UACzB,gBAAKA,UAAU,iBAAgB,UAC7B,gBAAKA,UAAU,iBAAiBhE,GAAG,cAAa,UAC9C,mBAAOgE,UAAU,gBAAe,UAAC,qBACd,iBAAMA,UAAU,kBAAiB,SAAC,gBAK3D,gBACEA,UAAU,4BACVuD,IAAK,SAACiI,GACJjI,GAAIkI,QAAQ,GAAKD,CACnB,EAAE,SAEO,OAAR9J,GACC,gBAAK1B,UAAU,GAAE,UACf,SAAC,IAAU,CACTA,UAAU,GACVvD,MAAM,OACN8I,MAAOA,GACP/B,KAAK,cAILxH,GAAG,mBACHuP,SAAU,SAAC7H,GACT8B,GAAS9B,GACTV,IAAY,SAACa,GAAI,yBACZA,GAAI,cACN,cAAgB0B,IAAK,GAE1B,EAEA8H,QAASpD,QAIb,8BAC4B,MAAf,OAAVjG,QAAU,IAAVA,OAAU,EAAVA,EAAYmH,YACX,0BACE,SAAC,IAAU,CACTnL,UAAU,GACVvD,MAAM,OAINsP,aAAwB,OAAV/H,QAAU,IAAVA,OAAU,EAAVA,EAAYqC,YAC1B7C,KAAK,cACLxH,GAAG,mBACHuP,SAAU,SAAC7H,GACT8B,GAAS9B,GACTkD,IAAgB,SAAC/C,GAAI,yBAChBA,GAAI,cACN,cAAgBH,GAAC,GAEtB,EACA2J,QAASpD,QAIb,gBAAKoB,UAAU,EAAK,UAClB,SAAC,IAAU,CACTrL,UAAU,GACVvD,MAAM,OACN4O,UAAU,EACV8B,UAAU,EACV3J,KAAK,cACLxH,GAAG,cACH+P,aAAwB,OAAV/H,QAAU,IAAVA,OAAU,EAAVA,EAAYqC,YAC1BgH,QAASpD,YAOrB,gBAAKjK,UAAU,aAAY,UACzB,gBAAKA,UAAU,YAAW,UACxB,gBAAKA,UAAU,iBAAiBhE,GAAG,WAAU,UAC3C,kBAAOgE,UAAU,aAAY,SAAC,oBAIpC,gBAAKA,UAAU,eAAc,SAClB,OAAR0B,GACC,qBACEiK,UAAW,IACX2B,KAAK,IACLC,KAAM,IACN/J,KAAK,WACLxH,GAAG,WACH0P,YAAY,qBACZH,SAAU,SAAC7H,GAAC,OAAKkH,GAAalH,EAAE,KAGlC,8BAC4B,MAAf,OAAVM,QAAU,IAAVA,OAAU,EAAVA,EAAYmH,YACX,qBACEQ,UAAW,IACX2B,KAAK,IACLC,KAAM,IACN/J,KAAK,WACLxH,GAAG,WACH0P,YAAY,qBACZK,aAAwB,OAAV/H,QAAU,IAAVA,OAAU,EAAVA,EAAYwJ,SAC1BjC,SAAU,SAAC7H,GAAC,OACVkD,IAAgB,SAAC/C,GAAI,yBAChBA,GAAI,cACN,WAAaH,EAAEmH,OAAOtF,OAAK,GAC3B,KAIP,qBACEoG,UAAW,IACX2B,KAAK,IACLC,KAAM,IACN/J,KAAK,WACLxH,GAAG,WACH0P,YAAY,qBACZL,UAAU,EACVU,aAAwB,OAAV/H,QAAU,IAAVA,OAAU,EAAVA,EAAYwJ,SAC1BjC,SAAU,SAAC7H,GAAC,OACVkD,IAAgB,SAAC/C,GAAI,yBAChBA,GAAI,cACN,WAAaH,EAAEmH,OAAOtF,OAAK,GAC3B,SAOf,gBAAKvF,UAAU,0DAAyD,SAC7D,OAAR0B,GACC,oBACEA,KAAK,SACL1B,UAAU,kBACV4B,QAAS,YA3yCF,WACrBuB,QAAQC,IAAIsD,IACZ,IAAI+G,EAAYzG,GAAU0G,MAAK,SAAC1S,GAAC,OAAKA,EAAEwI,MAAQkD,GAASlD,IAAI,IAG7D,GAFAL,QAAQC,IAAIqK,GAERA,EAAW,CACbtK,QAAQC,IAAI,WACZ,IAAIoI,EAAMmC,SAASC,uBAAuB,UAC1CzK,QAAQC,IAAIoI,EAAIqC,QAChB,IAAK,IAAIC,EAAQ,EAAGA,EAAQtC,EAAIqC,OAAQC,IACtCtC,EAAIsC,GAAOC,UAAUC,IAAI,eAU3B,OARA7K,QAAQC,IAAIoI,GAEZT,IAAiB,GACjBnF,IAAqB,QAErBjD,YAAW,WACT,GACC,IAEL,CACA,IAAI8K,EAAJ,CAIA,IAFA,IAAIQ,EAAUN,SAASC,uBAAuB,SAErCM,EAAI,EAAGA,EAAID,EAAQJ,OAAQK,IAClC/K,QAAQC,IAAI6K,EAAQC,GAAG3I,OAED,IAApB0I,EAAQC,GAAG3I,OACS,QAApB0I,EAAQC,GAAG3I,OACS,OAApB0I,EAAQC,GAAG3I,YACSiB,GAApByH,EAAQC,GAAG3I,OAEX0I,EAAQC,GAAGH,UAAUC,IAAI,eACzBpI,IAAqB,GACrBmF,IAAiB,KAIjBkD,EAAQC,GAAGH,UAAUI,OAAO,eAE5BvI,IAAqB,IAazB,IAAIpC,EAAOkD,GAASlD,KAChBsC,EAAcY,GAASZ,YACvBC,EAASW,GAASX,OAClBM,EAAcK,GAASL,YAE3B,GACErH,OAAOC,OAAO,CAAEuE,KAAAA,EAAMsC,YAAAA,EAAaC,OAAAA,EAAQM,YAAAA,IAAe+H,SAAS,IAKnE,OAFAxI,IAAqB,QACrBqI,EAAQC,GAAGH,UAAUI,OAAO,eAI9BvI,IAAqB,GACrB,IAAIyI,GAAQC,EAAAA,EAAAA,GAAiB/K,IAC7BqC,IAAqB,GACrBzC,QAAQC,IAAIiL,GAERA,EACFzI,IAAqB,IAKvBA,IAAqB,GAErB5D,IAAM,CACJC,OAAQ,OACRC,IAAKjB,GAAO,0CACZ5D,KAAMqJ,KACLrE,MAAK,SAACI,GACPmD,IAAqB,GACrBzC,QAAQC,IAAI,UAAWX,GACvBpC,GAAa,GACb8D,IACAC,GAAU,GACVzB,YAAW,WACTyB,GAAU,EACZ,GAAG,IACL,IAzEqB,CA0EvB,CA4sCkBmK,EACF,EAAE,WAEF,SAAC,MAAM,IAAG,OACL,QAGP,8BAC4B,MAAf,OAAVvK,QAAU,IAAVA,OAAU,EAAVA,EAAYmH,YACX,oBACEzJ,KAAK,SACL1B,UAAU,kBACV4B,QAAS,YArtCL,WACtBuB,QAAQC,IAAIuD,IAEZ,IAAI8G,EAAYzG,GAAU0G,MAAK,SAAC1S,GAAC,OAAKA,EAAEwI,MAAQmD,GAAaqF,UAAU,IAQvE,GANA7I,QAAQC,IACNqK,GACU,GAAR3G,IACAH,GAAaqF,YAAcnF,GAAoBmF,WACjDlF,IAGA2G,GACQ,GAAR3G,IACAH,GAAaqF,YAAcnF,GAAoBmF,WAC/C,CAEA,IADA,IAAIR,EAAMmC,SAASC,uBAAuB,UACjCE,EAAQ,EAAGA,EAAQtC,EAAIqC,OAAQC,IACtCtC,EAAIsC,GAAOC,UAAUC,IAAI,eAO3B,OALAjD,IAAiB,QAEjBpI,YAAW,WACT,GACC,IAEL,CAEAQ,QAAQC,IAAIuD,IACZxD,QAAQC,IAAI9F,GAIZ,IAFA,IAAI2Q,EAAUN,SAASC,uBAAuB,SAErCM,EAAI,EAAGA,EAAID,EAAQJ,OAAQK,IAClC/K,QAAQC,IAAI6K,EAAQC,GAAG3I,OAED,IAApB0I,EAAQC,GAAG3I,OACS,QAApB0I,EAAQC,GAAG3I,OACS,OAApB0I,EAAQC,GAAG3I,YACSiB,GAApByH,EAAQC,GAAG3I,OAEX0I,EAAQC,GAAGH,UAAUC,IAAI,eACzBpI,IAAqB,KAIrBqI,EAAQC,GAAGH,UAAUI,OAAO,eAE5BvI,IAAqB,IAGzB,IAAIpC,EAAOmD,GAAanD,KACpBsC,EAAca,GAAab,YAC3BC,EAASY,GAAaZ,OACtBM,EAAcM,GAAaN,YAE/B,GACErH,OAAOC,OAAO,CAAEuE,KAAAA,EAAMsC,YAAAA,EAAaC,OAAAA,EAAQM,YAAAA,IAAe+H,SAAS,KACnD,gBAAhB/H,EAEAT,IAAqB,OAJvB,CAOAA,IAAqB,GACrB,IAAIyI,GAAQC,EAAAA,EAAAA,GAAiB/K,IAE7BJ,QAAQC,IAAIiL,GAERA,EACFzI,IAAqB,IAIvBA,IAAqB,GACrB5D,IAAM,CACJC,OAAQ,OACRC,IAAKjB,GAAO,0CACZ5D,KAAM,CACJrB,GAAI2K,GAAa3K,GACjB6J,UAAWvI,EACX8I,cAAeO,GAAayG,WAC5BpH,QAASW,GAAalC,SACtBjB,KAAMmD,GAAaqF,WACnBvF,KAC4B,IAA1BE,GAAaV,SACT,KAC0B,IAA1BU,GAAaV,SACb,IACAU,GAAaV,SAEnBK,SAAUK,GAAa6G,SACvBrH,YAAaQ,GAAa6H,cAC1BnI,YAAaM,GAAaN,YAC1BH,WAAYS,GAAa8H,SACzB3I,YAAaa,GAAayF,YAC1BrG,OAAQY,GAAa0F,UACrBrH,OAC4B,KAA1B2B,GAAawE,WAA6C,MAAzBxE,GAAa8H,SAC1C,IACA9H,GAAawE,aAEpB9I,MAAK,SAACI,GACPU,QAAQC,IAAI,UAAWX,GACvBpC,GAAa,GACb8D,IACAG,GAAW,GACX3B,YAAW,WACT2B,GAAW,EACb,GAAG,IACL,IA/CA,CAgDF,CAwmCsBoK,EACF,EAAE,WAEF,SAAC,MAAM,IAAG,OACL,QAGP,oBACEhN,KAAK,SACL1B,UAAU,kBACVnF,MAAO,CAAEuQ,OAAQ,WAAY,WAE7B,SAAC,MAAM,IAAG,OACL,oBAY3B,E,iECz4BA,MAvxBA,SAAuB1Q,GAAQ,IAAD,IACpB4C,EAAyB5C,EAAzB4C,UAAWqR,EAAcjU,EAAdiU,UACnBxL,QAAQC,IAAIuL,GACZxL,QAAQC,IAAgB,QAAb,EAACuL,EAAU,UAAE,aAAZ,EAAcC,UAC1B,IACM3N,EAAUC,EAAAA,EAAAA,QAChB,GAAsBC,EAAAA,EAAAA,UAAS,GAAE,eAA1B0N,EAAG,KAAEC,EAAM,KAClB,GAA0C3N,EAAAA,EAAAA,WAAS,GAAM,eAAlD4N,EAAa,KAAEC,EAAgB,KACtC,GAA4B7N,EAAAA,EAAAA,WAAS,GAAM,eAApCkD,EAAM,KAAED,EAAS,KACxB,GAA8BjD,EAAAA,EAAAA,WAAS,GAAM,eAAtC8N,EAAO,KAAE3K,EAAU,KAC1B,GAAkCnD,EAAAA,EAAAA,UAAS,IAAG,eAC9C,GADgB,KAAc,MACIA,EAAAA,EAAAA,UAAS,KAAG,eAAvC+N,EAAS,KAChB,GAD8B,MACJ/N,EAAAA,EAAAA,UAAS,QAAM,eACzC,GADY,KAAU,MACgBA,EAAAA,EAAAA,UAAS,KAAG,eAA3C2E,EAAW,KAAEjB,EAAc,KAClC,GAAsC1D,EAAAA,EAAAA,UAAS,IAAG,gBAA3C2D,GAAW,MAAEC,GAAc,MAClC,IAA4B5D,EAAAA,EAAAA,UAAS,IAAG,iBAAjC6D,GAAM,MAAEC,GAAS,MACxB,IAAkC9D,EAAAA,EAAAA,UAAS,IAAG,iBAA5BgO,IAAF,MAAc,OAC9B,IAAkChO,EAAAA,EAAAA,UAAS,IAAG,iBAAvCiO,GAAS,MAAEC,GAAY,MAC9B,IAA4BlO,EAAAA,EAAAA,WAAS,GAAM,iBAApCmO,GAAM,MAAEC,GAAS,MACxB,IAAkCpO,EAAAA,EAAAA,WAAS,GAAM,iBAA1Cf,GAAS,MAAEC,GAAY,MAC9B,IAAsCc,EAAAA,EAAAA,WAAS,GAAM,iBAA9CqO,GAAW,MAAEC,GAAc,MAClC,IAA8BtO,EAAAA,EAAAA,WAAS,GAAM,iBAAtCG,GAAO,MAAEoO,GAAU,MAC1B,IAAwCvO,EAAAA,EAAAA,UAASwO,EAAAA,KAAkB,iBAA5DC,GAAY,MAAEC,GAAe,MACpC,IAAwC1O,EAAAA,EAAAA,UAAS,IAAG,iBAA7C2B,GAAY,MAAEsC,GAAe,MACpC,IAA0CjE,EAAAA,EAAAA,UAAS,IAAG,iBAA/C2O,GAAa,MAAEC,GAAgB,MACtC5M,QAAQC,IAAI0M,IACZ,QAAwB3O,EAAAA,EAAAA,UAAS,IAAG,iBAAvB6O,IAAF,MAAS,OACpB,IAAwB7O,EAAAA,EAAAA,UAAS,OAAM,iBAAhCO,GAAI,MAAEuO,GAAO,MACpB,IAAsD9O,EAAAA,EAAAA,UAAS,IAAG,iBAA3D4C,GAAmB,MAAEmM,GAAsB,MAC5CC,GAAa,CACjBtK,UAAWvI,EACXwI,YAAa,KACbC,OAAQ,KACRf,OAAQ,KACRxB,KAAM,KACNiD,IAAK,KACLP,WAAY,KACZkK,UAAW,KACXpK,QAAS,MAEX,IAAoC7E,EAAAA,EAAAA,UAASgP,IAAW,iBAAjDnM,GAAU,MAAEE,GAAa,MAChC,IAAgC/C,EAAAA,EAAAA,UAASgP,IAAW,iBAA7CzJ,GAAQ,MAAE1D,GAAW,MAC5B,IAA4B7B,EAAAA,EAAAA,YAAU,iBAA/B8C,GAAM,MAAEoM,GAAS,MAExB,IADuBtP,aAAaC,QAAQ,YACNG,EAAAA,EAAAA,UAAS,KAAG,iBAA3CoD,GAAW,MAAE+L,GAAc,MAClC,IAAoCnP,EAAAA,EAAAA,UAAS,IAAG,iBAAzCoP,GAAU,MAAEC,GAAa,MAChC,IAAsCrP,EAAAA,EAAAA,UAAS,IAAG,iBAA3CsP,GAAW,MAAEC,GAAc,MAClC,IAAkDvP,EAAAA,EAAAA,UAAS,IAAG,iBAAvDwP,GAAiB,MACxB,IAD8C,OACtBxP,EAAAA,EAAAA,UAAS,KAAG,iBAA7BrD,GAAI,MAELgD,IAFc,MAECC,aAAaC,QAAQ,UAG1C,IAA4BG,EAAAA,EAAAA,UAAS,IAAG,iBAAjCyP,GAAM,MAAEC,GAAS,OAIxBpT,EAAAA,EAAAA,YAAU,WACRqT,IACF,GAAG,IAEH,IAAMA,GAAW,WAGf9O,IAAM,CACJC,OAAQ,MACRC,IAAKjB,EAAO,iDAA6CH,MACxDuB,MAAK,SAACE,GACIA,EAAKlF,KAEXwB,SAAQ,SAACf,GAhBA,aAiBRA,EAAKiT,cACPF,GAAU,CAAC/S,GAEf,GACF,GACF,EACAqF,QAAQC,IAAIwN,IAEZ,IAAMI,GAAarC,EAAUsC,MAAK,SAACnT,GAAI,MAA2B,WAAtBA,EAAKiT,YAAyB,IAC1E5N,QAAQC,IAAc,OAAV4N,SAAU,IAAVA,QAAU,EAAVA,GAAYpC,SAAU,QAClC,IAAMsC,IAAkBhO,EAAAA,EAAAA,QAAO,MAMzBiO,GAAW,SAAC/B,GAChB,OAAO,gBAAKzE,MAAM,SAAQ,SAAEyE,EAAUgC,KACxC,EACMC,GAAY,SAACjC,GACjB,OACE,gBACEpP,UAAU,WACV,cAAY,UACZ2B,MAAOyN,EAAUpD,WAAW,SAE3BoD,EAAUpD,YAGjB,EACMsF,GAAc,SAAClC,GACnB,OACE,gBACEpP,UAAU,WACV,cAAY,UACZ2B,MAAOyN,EAAUkC,YAAY,SAE5BlC,EAAUkC,aAGjB,EACMC,GAAS,SAACnC,GACd,OACE,gBAAKpP,UAAU,WAAW,cAAY,UAAU2B,MAAOyN,EAAUmC,OAAO,SACrEnC,EAAUmC,QAGjB,EACMC,GAAc,SAACpC,GACnB,OACE,gBACEpP,UAAU,WACV,cAAY,UACZ2B,MAAOyN,EAAUqC,aAAa,SAE7BrC,EAAUqC,cAGjB,EACMC,GAAa,SAACtC,GAClB,OACE,gBACEpP,UAAU,WACV,cAAY,UACZ2B,MAAOyN,EAAUpC,YAAY,SAE5BoC,EAAUpC,aAGjB,EACM2E,GAAU,SAACvC,GACf,OACE,gBACEpP,UAAU,WACV,cAAY,UACZ2B,MAAOyN,EAAUnJ,SAAS,SAEH,GAAtBmJ,EAAUnJ,SAAmB,MAAQ,MAG5C,EACM2L,GAAY,SAACxC,GACjB,OACE,gBACEpP,UAAU,WACV,cAAY,UACZ2B,MAAOyN,EAAUhC,WAAW,SAE3BgC,EAAUhC,YAGjB,EACMI,GAAW,SAAC4B,GAChB,OACE,gBACEpP,UAAU,WACV,cAAY,UACZ2B,MAAOyN,EAAU5B,SAAS,SAEzB4B,EAAU5B,UAGjB,EACMqE,GAAU,SAACzC,GACf,OACE,gBACEpP,UAAU,WACV,cAAY,UACZ2B,MAAOwG,IAAOiH,EAAU3K,UAAU4D,OAAO,eAAe,SAEjC,MAAtB+G,EAAU3K,SACP,GACA0D,IAAOiH,EAAU3K,UAAU4D,OAAO,gBAG5C,GAEA5K,EAAAA,EAAAA,YAAU,WAAO,GAAG,CAACK,MAErBL,EAAAA,EAAAA,YAAU,WACRqU,IACF,GAAG,KAEHrU,EAAAA,EAAAA,YAAU,WAAO,GAAG,CAACuG,KAErB,IAAM8N,GAAkB,WACtB9P,IAAM,CACJC,OAAQ,MACRC,IAAKjB,EAAO,iCAEXoB,MAAK,SAAUC,GACVA,EAAWA,EAASjF,KACxB6S,GAAuB5N,EACzB,IACCE,OAAM,SAAUF,GAAW,GAChC,GACA7E,EAAAA,EAAAA,YAAU,WAAO,GAAG,CAACsG,MACrBtG,EAAAA,EAAAA,YAAU,WACR6K,KACAC,KACAwJ,KACA5N,KACA6N,IACF,GAAG,IAEH,IAAMjP,GAAU,WACdf,IAAM,CACJC,OAAQ,MACRC,IAAKjB,EAAO,sCACXoB,MAAK,SAAUC,GAChB,IAAI+G,EAAM/G,EAASjF,KACnB+H,GAAgBiE,EAClB,GACF,GACA5L,EAAAA,EAAAA,YAAU,WAAO,GAAG,CAACqF,MAErBrF,EAAAA,EAAAA,YAAU,WACRsF,IACF,GAAG,KAWHtF,EAAAA,EAAAA,YAAU,WARRuE,IAAM,CACJC,OAAQ,MACRC,IAAKjB,EAAO,uCACXoB,MAAK,SAAUC,GAChB,IAAI+G,EAAM/G,EAASjF,KACnB0S,GAAiB1G,EACnB,GAIF,GAAG,IAEH,IAAMlF,GAAe,WACnBoL,IAAU,GAEVvN,IAAM,CACJC,OAAQ,OACRC,IAAKjB,EAAO,uCACZ5D,KAAMqJ,KAELrE,MAAK,SAACgH,GAEL,IADA,IAAM4I,EAAU5I,EAAIhM,KACX6Q,EAAI,EAAGA,EAAI+D,EAAQpE,OAAQK,IAClC+D,EAAQ/D,GAAQ,IAAIA,EAAI,EAkB1BwC,GADgB,CAAC,WAEjBrB,GAjBkB,CAChB,CACE+B,IAAK,OACLpF,WAAY,aACZsF,YAAa,cACbC,OAAQ,SACR9M,SAAU,WACVgN,aAAc,eACdzE,YAAa,cACb/G,SAAU,WACVmH,WAAY,aACZI,SAAU,WACV0E,OAAQ,WAKaC,OAAOF,IAChC9C,GAAa9F,EAAIhM,MACjB2S,GAAQ3G,EAAIhM,MACZkS,IAAU,GACVG,IAAYpO,IAERuO,GADJvO,GACoBqO,EAAAA,IACAyC,EAAAA,IACtB,IACC/P,MAAK,SAACI,GAAW,GACtB,EAEM6F,GAAiB,WACrBtG,IAAM,CACJC,OAAQ,MACRC,IAAKjB,EAAO,qCACXoB,MAAK,SAACgH,GACP,IAAIvD,EAAcuD,EAAIhM,KACtBwH,EAAeiB,EACjB,GACF,EACMyC,GAAiB,WACrBvG,IAAM,CACJC,OAAQ,MACRC,IAAKjB,EAAO,qCACXoB,MAAK,SAACgH,GACP,IAAIvE,EAAcuE,EAAIhM,KACtB0H,GAAeD,EACjB,GACF,EACMiN,GAAY,WAChB/P,IAAM,CACJC,OAAQ,MACRC,IAAKjB,EAAO,gCACXoB,MAAK,SAACgH,GACP,IAAIrE,EAASqE,EAAIhM,KACjB4H,GAAUD,EACZ,GACF,EACM4F,GAAe,SAAClH,GACpB,MAAsBA,EAAEmH,OAAhB7O,EAAE,EAAFA,GAAIuJ,EAAK,EAALA,MACZvC,IAAY,SAACa,GAAI,yBAAWA,GAAI,cAAG7H,EAAc,QAATuJ,EAAkB,KAAOA,GAAK,GACxE,EAIM8M,GAAe,SAACjD,GAAe,IAAD,EACxBqB,GAAY,GAGtB,OASE,gBAAK9F,MAAM,SAAQ,SACU,IAAd,QAAZ,EAAAgE,EAAU,UAAE,aAAZ,EAAcC,WACb,iCACE,SAAC,MAAU,CACTvE,MAAM,SACN3I,KAAK,OACLH,KAAK,QACLoJ,MAAM,SACN/I,QAAS,WACPsC,GAAckL,GACdiB,GAAUjB,EAAUpT,IACpBqE,IAAa,GACb4P,GAAQ,OACV,IACA,QAEF,SAAC,MAAY,CACX5F,MAAM,SACN1I,MAAO,SACPC,QAAS,WACP0Q,GAAmBlD,EAAUpT,GAC/B,QAIJ,iCACE,SAAC,MAAU,CACTqO,MAAM,SACN3I,KAAK,OACLH,KAAK,QACLoJ,MAAM,SACN9P,MAAO,CAAEuQ,OAAQ,iBACjB,QAEF,SAAC,MAAY,CACXf,MAAM,SACN1I,MAAO,SACP3B,UAAU,6BACVqL,UAAU,EACVxQ,MAAO,CAAEuQ,OAAQ,cAAe/P,QAAS,cAMrD,EAEMkX,GAAwC,QAA1B,EAAGvT,OAAOwT,KAAKjC,WAAW,aAAvB,EAAyBhU,KAAI,SAACkW,EAAKvE,GACxD,OACE,SAAC,MAAM,CACLwE,UAAQ,EAERC,KACS,OAAPF,EACItB,GACQ,YAAPsB,GAAqBd,IACd,eAAPc,GAAwBnB,IACjB,UAAPmB,GAAmBlB,IACZ,eAAPkB,GAAwBnB,IACjB,gBAAPmB,GAAyBjB,IAClB,cAAPiB,GAAuBb,IAChB,YAAPa,GAAqBjF,IACd,eAAPiF,GAAwBf,IAEjB,cAAPe,GAAuBpB,IAChB,YAAPoB,GAAqBZ,IACd,UAAPY,GAAmBJ,GAE1BO,MAAOH,EACPtI,OAAQoG,GAAWkC,IAlBdA,EAqBX,KAEAhV,EAAAA,EAAAA,YAAU,WACR2R,GAAU,IAAMoB,GAAcqC,KAAKC,MAAMD,KAAKE,UAAU3D,GAAU,KACpE,GAAG,CAACA,KAGJ,IAAM4C,GAAyB,WAC7BhQ,IAAM,CACJC,OAAQ,MACRC,IACEjB,EAAO,4DAC8C3D,KAEtD+E,MAAK,SAAUC,GACd,IAAIC,EAAOD,EAASjF,KACpBiT,GAAe/N,EAEjB,IACCC,OAAM,SAAUF,GAAW,GAChC,EAgBMgQ,GAAqB,SAACtW,GAC1ByT,IAAe,GACfX,EAAO9S,EACT,EACA,IAAoCmF,EAAAA,EAAAA,UAAS,IAAG,iBAAzC6R,GAAU,MAAEC,GAAa,MAShC,SAASC,GAAYxY,GACnB,IAAQyY,EAA6CzY,EAA7CyY,YAAa3D,EAAgC9U,EAAhC8U,YAAaC,EAAmB/U,EAAnB+U,eAClC,OACE,0BACE,UAAC,KAAM,CACLnO,QAASkO,EACTjO,KAAK,KACLvB,UAAU,YACVwB,QAAS,kBAAMiO,GAAe,EAAM,EAAC,WAErC,SAAC,KAAY,CAACzP,UAAU,GAAE,UACxB,SAAC,KAAW,WACV,iBAAMA,UAAU,GAAE,SAAC,8BAGvB,UAAC,KAAU,YACT,wBAAI,6CACJ,iBAAKA,UAAU,4BAA2B,WACxC,oBACE0B,KAAK,SACL1B,UAAU,kBACV4B,QAAS,WACPuR,GACF,EAAE,WAEF,SAAC,MAAY,IAAG,UAAQ,OAChB,IAAI,aAEd,oBACEzR,KAAK,SACL1B,UAAU,oBACV4B,QAAS,WACP6N,GAAe,EACjB,EAAE,UAED,KACD,SAAC,MAAO,IAAG,UAAQ,iBAOjC,CACA,OApDAhS,EAAAA,EAAAA,YAAU,WAERwV,GADU,CAAC,OAEb,GAAG,KAkDD,2BACGlE,GACC,iBAAK/O,UAAU,oBAAmB,WAChC,SAAC,MAAO,IACP,gCAGH,GAEDqE,GACC,iBAAKrE,UAAU,oBAAmB,WAChC,SAAC,MAAO,IACP,8BAGH,GAEDiP,GACC,iBAAKjP,UAAU,oBAAmB,WAChC,SAAC,MAAO,IACP,+BAGH,IAEF,4BACE,gBAAKA,UAAU,YAAW,UACxB,iBAAKA,UAAU,YAAW,UACvBuE,GAAYhI,KAAI,SAACiO,GAAI,OACpB,gBAAKxK,UAAU,WAAU,UACvB,wBAAKwK,EAAKc,eACN,KAER,gBAAKtL,UAAU,WAAU,UACvB,wBAAI,cAEN,gBAAKA,UAAU,qBAGnB,SAACoT,EAAA,EAAiB,CAChBxC,OAAQA,GACRyC,kBAregB,CAAC,WAAY,OAAQ,aAAc,aAuerD,iBAAKrT,UAAU,uBAAsB,WACnC,iBAAKA,UAAU,2BAA0B,WACvC,wBAAI,oBACJ,gBACE4B,QAAS,WACP8N,IAAYpO,IAERuO,GADJvO,GACoBqO,EAAAA,IACAyC,EAAAA,IACtB,EAAE,UAEF,0BAAOxC,WAGX,UAAC,KAAS,CAACtO,SAAUA,GAAQ,WAC3B,iBAAKtB,UAAU,oBAAmB,WAChC,gBAAKA,UAAU,iBAAgB,UAC7B,iBAAKA,UAAU,kBAAkBhE,GAAG,cAAa,WAC/C,kBAAOgE,UAAU,QAAO,SAAC,kBACzB,kBAAOA,UAAU,YAAW,SAAC,OAC7B,kBAAOA,UAAU,QAAO,UACtB,oBACEA,UAAU,eACVhE,GAAG,cACHuP,SAAU,SAAC7H,GAAC,OAAKkH,GAAalH,EAAE,EAAC,WAEjC,mBAAQ6B,MAAM,OAAM,SAAC,aACpBO,EAAYvJ,KAAI,SAAC0P,GAAI,OACpB,oBAAQ1G,MAAO0G,EAAKjQ,GAAG,UAAC,IAAEiQ,EAAKC,YAAmB,eAM5D,gBAAKlM,UAAU,iBAAgB,UAC7B,iBAAKA,UAAU,iBAAiBhE,GAAG,SAAQ,WACzC,kBAAOgE,UAAU,QAAO,SAAC,kBACzB,kBAAOA,UAAU,YAAW,SAAC,OAC7B,kBAAOA,UAAU,QAAO,UACtB,oBACEA,UAAU,eACVhE,GAAG,SACHuP,SAAU,SAAC7H,GAAC,OAAKkH,GAAalH,EAAE,EAAC,WAEjC,mBAAQ6B,MAAM,OAAM,SAAC,aACpBT,GAAYvI,KAAI,SAAC0P,GAAI,OACpB,oBAAQ1G,MAAO0G,EAAKjQ,GAAG,UAAC,IAAEiQ,EAAKC,YAAmB,eAM5D,gBAAKlM,UAAU,iBAAgB,UAC7B,iBAAKA,UAAU,kBAAkBhE,GAAG,SAAQ,WAC1C,kBAAOgE,UAAU,QAAO,SAAC,aACzB,kBAAOA,UAAU,YAAW,SAAC,OAC7B,kBAAOA,UAAU,QAAO,UACtB,oBACEA,UAAU,eACVhE,GAAG,SACHuP,SAAU,SAAC7H,GAAC,OAAKkH,GAAalH,EAAE,EAAC,WAEjC,mBAAQ6B,MAAM,OAAM,SAAC,aACpBP,GAAOzI,KAAI,SAAC0P,GAAI,OACf,oBAAQ1G,MAAO0G,EAAKjQ,GAAG,UAAC,IAAEiQ,EAAKC,YAAmB,eAM5D,gBAAKlM,UAAU,gBAAe,UAC5B,iBAAKA,UAAU,iBAAiBhE,GAAG,OAAM,WACvC,kBAAOgE,UAAU,QAAO,SAAC,gBACzB,kBAAOA,UAAU,YAAW,SAAC,OAC7B,kBAAOA,UAAU,QAAO,UACtB,kBACE0B,KAAK,OACL8B,KAAK,OACLxH,GAAG,OACHuP,SAAU,SAAC7H,GACT,MAAsBA,EAAEmH,OAAZtF,GAAF,EAAFvJ,GAAS,EAALuJ,OACZvC,IAAY,SAACa,GAAI,yBACZA,GAAI,cACN,OAAkB,IAAT0B,EAAc,KAAOA,GAAK,GAExC,YAKR,gBAAKvF,UAAU,gBAAe,UAC5B,iBAAKA,UAAU,iBAAiBhE,GAAG,MAAK,WACtC,kBAAOgE,UAAU,QAAO,SAAC,cACzB,kBAAOA,UAAU,YAAW,SAAC,OAC7B,kBAAOA,UAAU,QAAO,UACtB,oBACEA,UAAU,eACVhE,GAAG,MACHuP,SAAU,SAAC7H,GAAC,OAAKkH,GAAalH,EAAE,EAAC,WAEjC,mBAAQ6B,MAAM,OAAM,SAAC,cACrB,oBAAQA,MAAM,IAAIvJ,GAAG,IAAG,UACrB,IAAI,MACD,QAEN,oBAAQuJ,MAAM,IAAIvJ,GAAG,IAAG,UACrB,IAAI,KACF,kBAMb,gBAAKgE,UAAU,gBAAe,UAC5B,iBAAKA,UAAU,iBAAiBhE,GAAG,aAAY,WAC7C,kBAAOgE,UAAU,QAAO,SAAC,iBACzB,kBAAOA,UAAU,YAAW,SAAC,OAC7B,gBAAKA,UAAU,SAAQ,UACrB,gBAAKA,UAAU,yBAAwB,UACrC,SAAC,EAAY,CACXhE,GAAG,aACHwH,KAAK,aACLV,aAAcA,GACdE,YAAaA,GACbD,QAASA,GAETwI,SAAU,SAAC7H,GACT,MAAsBA,EAAEmH,OAAhB7O,EAAE,EAAFA,GAAS,EAALuJ,MACZvC,IAAY,SAACa,GAAI,yBACZA,GAAI,cACN,aAAqB,IAAN7H,EAAW,KAAOA,GAAE,GAExC,cAMV,gBAAKgE,UAAU,gBAAe,UAC5B,iBAAKA,UAAU,iBAAiBhE,GAAG,YAAW,WAC5C,kBAAOgE,UAAU,QAAO,SAAC,iBACzB,kBAAOA,UAAU,YAAW,SAAC,OAC7B,gBAAKA,UAAU,QAAO,UACpB,gBAAKA,UAAU,yBAAwB,UACrC,SAAC,EAAAqD,wBAAuB,CACtBC,MAAOwM,GACP9T,GAAG,YACHwH,KAAK,YACLC,SAAU,SAAC6P,GACTtQ,IAAY,SAACW,GAAS,yBACjBA,GAAS,IACZyM,UAAWkD,EAAatX,IAAE,GAE9B,EACA8H,UAAU,EACVF,QAtPF,WAClBZ,IAAY,SAACa,GAAI,yBAAWA,GAAI,IAAEuM,UAAW,MAAI,GACnD,cA0PY,gBAAKpQ,UAAU,4BAA2B,UACxC,oBACE0B,KAAK,SACL1B,UAAU,kBACVuF,MAAO2J,EACPtN,QAAS,WAtYvBuC,IAsY0C,EAAC,WAE7B,SAAC,MAAQ,IAAG,UAAQ,YAIzBmL,IAAS,SAACiE,EAAA,EAAM,CAACC,YAxnBR,WAClBtC,GAAgBzF,SAAWyF,GAAgBzF,QAAQgI,QACnDlE,IAAU,EACZ,IAqnB2D,UAGrD,gBAAKvP,UAAU,aAAY,UACzB,gBAAKA,UAAU,GAAE,UACf,iBAAKA,UAAU,uBAAsB,WACnC,SAAC,IAAa,CACZ3C,KAAM+R,GACN9B,KA9sBH,GA+sBGmD,YAAaA,GACbE,kBAAmBA,GACnB4B,eAAgBA,GAChBhC,WAAYA,GACZC,cAAeA,GACfwC,WAAYA,GACZU,SAAS,oBASe,KAAf,OAAV1C,SAAU,IAAVA,QAAU,EAAVA,GAAYpC,WACX,gBAAK5O,UAAU,0DAAyD,UACtE,oBACE0B,KAAK,SACL1B,UAAU,kBACV4B,QAAS,WACPvB,IAAa,GACb4P,GAAQ,MACV,EAAE,WAEF,SAAC,MAAM,IAAG,WAKd,UAKP7P,IACC,SAAC,EAAQ,CACPA,UAAWA,GACXC,aAAcA,GACd0D,oBAAqBA,GACrBrC,KAAMA,GACNyC,aAAcA,GACdF,OAAQA,GACRI,OAAQA,EACRD,UAAWA,EACX6K,QAASA,EACT3K,WAAYA,EACZJ,cAAeA,GACfF,WAAYA,GACZO,YAAaA,GACbjH,UAAWA,IAGb,GAEDkS,IACC,SAAC0D,GAAW,CACVC,YAlWU,WAClBnR,IAAM,CACJC,OAAQ,SACRC,IAAKjB,EAAO,kDAA8C4N,GAC1DxR,KAAMwR,IACLxM,MAAK,SAACI,GACPqM,EAAO,GACP3K,KACAsL,IAAe,GACfT,GAAiB,GACjBrM,YAAW,WACTqM,GAAiB,EACnB,GAAG,IACL,GACF,EAqVUQ,YAAaA,GACbC,eAAgBA,KAGlB,QAKV,EC5vBA,I,WC6zCA,MAp2CA,SAA6B/U,GAAQ,IAAD,EAC5BoG,EAAeC,aAAaC,QAAQ,SAE1C,GADuBD,aAAaC,QAAQ,YACRG,EAAAA,EAAAA,UAAS,IAAE,eAAxCwS,EAAU,KAAEC,EAAa,KAC1B3S,EAAUC,EAAAA,EAAAA,QAChB,GAA0BC,EAAAA,EAAAA,UAAS,IAAG,eAA/BoE,EAAK,KAAEC,EAAQ,KAEpBpF,EAWE1F,EAXF0F,UACAC,EAUE3F,EAVF2F,aACA8D,EASEzJ,EATFyJ,aACAiL,EAQE1U,EARF0U,UACA1N,EAOEhH,EAPFgH,KACAsC,EAMEtJ,EANFsJ,WACAI,EAKE1J,EALF0J,UACAE,EAIE5J,EAJF4J,WACAhH,EAGE5C,EAHF4C,UAEAiH,GACE7J,EAFFuJ,OAEEvJ,EADF6J,aAEF,GAA4BpD,EAAAA,EAAAA,UAAS,IAAG,eAAjC0S,EAAM,KAAEC,EAAS,KACxB,GAAgC3S,EAAAA,EAAAA,UAAS,IAAG,eAArC4S,EAAQ,KAAEC,EAAW,KAC5B,GAAgC7S,EAAAA,EAAAA,UAAS,IAAG,eAArC8S,EAAQ,KAAEC,EAAW,KAC5B,GAA4B/S,EAAAA,EAAAA,UAAS,IAAG,eAAjC6D,EAAM,KAAEC,EAAS,KACxB,GAA0C9D,EAAAA,EAAAA,UAAS,IAAG,gBAA/CgT,GAAa,MAAEC,GAAgB,MACtC,IAAkCjT,EAAAA,EAAAA,UAAS,IAAG,iBAAvCkT,GAAS,MAAEC,GAAY,MAC9B,IAA4BnT,EAAAA,EAAAA,UAAS,CACnCmI,QAAS,GACT3H,MAAO,GACP4S,uBAAwB,GACxBC,gCAAiC,GACjCC,YAAa,GACbC,YAAa,GACbtI,YAAa,GACbjB,UAAW,GACXwJ,YAAa,GACbtO,YAAa,GACbuO,iBAAkB,KAClB,iBACF,IAba,MAAW,OAagBzT,EAAAA,EAAAA,UAAS,KAAG,iBAA7C0T,GAAY,MAAEC,GAAe,MACpC,IAAsD3T,EAAAA,EAAAA,UAAS,IAAG,iBAAtC+O,IAAF,MAAwB,OAClD,IAA0C/O,EAAAA,EAAAA,WAAS,GAAM,iBACzD,IADoB,MAAkB,OACYA,EAAAA,EAAAA,WAAS,IAAM,iBAA1DwE,GAAiB,MAAEC,GAAoB,MAE9C,IAA8BzE,EAAAA,EAAAA,WAAS,GAAM,iBAAtCG,GAAO,MAAEoO,GAAU,MAC1B,IAAwCvO,EAAAA,EAAAA,UAAS,IAAG,iBAA7C2B,GAAY,MAAEsC,GAAe,MAC9B7B,IAAML,EAAAA,EAAAA,QAAO,IACnB,IAAwB/B,EAAAA,EAAAA,UAAS,IAAG,iBAA7BrD,GAAI,MACX,IADoB,OACsBqD,EAAAA,EAAAA,WAAS,IAAM,iBAAlD2J,GAAa,MAAEC,GAAgB,MACtC,IAAsD5J,EAAAA,EAAAA,UAAS6C,GAAW,iBAAnE6C,GAAmB,MAAwB,OAElDpJ,EAAAA,EAAAA,YAAU,WACR0F,QAAQC,IAAItF,GACd,GAAG,CAACA,KAEJ,QAA0CqD,EAAAA,EAAAA,UAAS,IAAG,iBAA/C4T,GAAa,MAAEC,GAAgB,OAuBtCvX,EAAAA,EAAAA,YAAU,WATR0F,QAAQC,IAAI,eACZpB,IAAM,CACJC,OAAQ,MACRC,IAAKjB,EAAO,mDAA+CH,KAC1DuB,MAAK,SAAUC,GAChB,IAAI+G,EAAM/G,EAASjF,KACnBuW,EAAcvK,EAChB,GAIF,GAAG,CAACsK,IAEJ,IAAMtW,IAAI,GACRwI,UAAWvI,EACXqE,MAAO,GACPyK,YAAa,GACbsI,YAAa,GACbvJ,UAAW,GACXwJ,YAAa,GACbtO,YAAa,GACbkO,uBAAwB,GACxBC,gCAAiC,GACjCI,iBAAkB,GAClBK,YAAa,KAAE,uBACF,KAAE,mBACN,IAAE,GAEb,IAAgC9T,EAAAA,EAAAA,UAAS9D,IAAK,iBAAvCqJ,GAAQ,MAAE1D,GAAW,MAC5B,IAAwC7B,EAAAA,EAAAA,UAAS6C,GAAW,iBAArD2C,GAAY,MAAEC,GAAe,OAEpCnJ,EAAAA,EAAAA,YAAU,WAAO,GAAG,CAACkJ,KAErB,IAyDMuO,GAAwB,WAC5BlT,IAAM,CACJC,OAAQ,OACRC,IACEjB,EAAO,yDAC2C3D,EAAS,yBAC5D+E,MAAK,SAACgH,GACP,IAAIgL,EAAYhL,EAAIhM,KACpBiX,GAAaD,GACblR,QAAQC,IAAIiR,EACd,GACF,GA4CA5W,EAAAA,EAAAA,YAAU,WAAO,GAAG,CAACqF,MAErBrF,EAAAA,EAAAA,YAAU,WAbR0F,QAAQC,IAAI,eACZpB,IAAM,CACJC,OAAQ,MACRC,IAAKjB,EAAO,sCACXoB,MAAK,SAAUC,GAChB,IAAI+G,EAAM/G,EAASjF,KACnB+H,GAAgBiE,GAChBlG,QAAQC,IAAI,iBACZD,QAAQC,IAAIiG,EACd,GAMF,GAAG,IAEH,IAAMY,GAAgB,CACpBC,QAAS,CACP,CACE,CAAEC,OAAQ,EAAC,EAAO,EAAG,EAAG,EAAG,EAAG,EAAG,IACjC,CAAEE,MAAO,IACT,OACA,SACA,YACA,CAAEG,KAAM,UAAW7I,MAAO,WAC1B,CAAE6I,KAAM,SAAU7I,MAAO,UACzB,CAAE8I,OAAQ,OACV,CAAEA,OAAQ,SACV,CAAEC,OAAQ,MACV,CAAEA,OAAQ,MACV,CAAEC,MAAO,MACT,CAAEA,MAAO,UACT,CAAEA,MAAO,SACT,SACA,OACA,QACA,aACA,WAwGN,IAAwBxJ,EAAAA,EAAAA,WAAS,GAAK,iBAA/B2F,GAAI,MAAEC,GAAO,MAuGd6D,GAAe,SAAClH,GACpB,MAAsBA,EAAEmH,OAAhB7O,EAAE,EAAFA,GAAIuJ,EAAK,EAALA,MACZvC,IAAY,SAACa,GAAI,yBAAWA,GAAI,cAAG7H,EAAKuJ,GAAK,IAC7CvC,IAAY,SAACa,GAAI,yBAAWA,GAAI,cAAG,cAAgB8P,GAAU,IAC7D/M,IAAgB,SAAC/C,GAAI,yBAAWA,GAAI,cAAG,cAAgB8P,GAAU,GACnE,GACAlW,EAAAA,EAAAA,YAAU,WAAO,GAAG,CAAC4W,MACrB5W,EAAAA,EAAAA,YAAU,WACRyX,IACF,GAAG,KAEHzX,EAAAA,EAAAA,YAAU,WApWRuE,IAAM,CACJC,OAAQ,MACRC,IAAKjB,EAAO,4CACXoB,MAAK,SAACgH,GACP,IAAI8L,EAAQ9L,EAAIhM,KAChByW,EAAUqB,EACZ,IAKAnT,IAAM,CACJC,OAAQ,MACRC,IAAKjB,EAAO,wCACXoB,MAAK,SAACgH,GACP,IAAI0K,EAAW1K,EAAIhM,KACnB2W,EAAYD,EACd,IAKA/R,IAAM,CACJC,OAAQ,MACRC,IAAKjB,EAAO,wCACXoB,MAAK,SAACgH,GACP,IAAI4K,EAAW5K,EAAIhM,KACnB6W,EAAYD,EAEd,IAKAjS,IAAM,CACJC,OAAQ,MACRC,IAAKjB,EAAO,sCACXoB,MAAK,SAACgH,GACP,IAAIrE,EAASqE,EAAIhM,KACjB4H,EAAUD,EAEZ,IAKAhD,IAAM,CACJC,OAAQ,MACRC,IAAKjB,EAAO,6CACXoB,MAAK,SAACgH,GACP,IAAI8K,EAAgB9K,EAAIhM,KACxB+W,GAAiBD,EACnB,IAmBAnS,IAAM,CACJC,OAAQ,MACRC,IAAKjB,EAAO,uCACXoB,MAAK,SAACgH,GACP,IAAItF,EAAsBsF,EAAIhM,KAC9B6S,GAAuBnM,EACzB,IAKA/B,IAAM,CACJC,OAAQ,MACRC,IAAKjB,EAAO,4CACXoB,MAAK,SAACgH,GACP,IAAIwL,EAAexL,EAAIhM,KACvByX,GAAgBD,EAClB,GAoRF,GAAG,IAEH1R,QAAQC,IAAIY,EAAWoR,YACvBjS,QAAQC,IAAIuD,IACZ,IAAM0O,GAAe,SAACvX,GACpB,OACE,gBAAKkC,UAAU,iBAAgB,UAC7B,kBAAMA,UAAU,cAAa,UAC1BlC,EAAKwX,QAAQ,MAAE,0BAAOxX,EAAKyX,iBAAsB,QAI1D,EAEA,OACE,gBAAKvV,UAAU,YAAW,UACxB,UAAC,KAAM,CACLsB,QAASlB,EACTmB,KAAK,KACLC,QAAS,kBAAMnB,GAAa,EAAM,EAClCoB,SAAU,SAAS,WAEnB,SAAC,KAAY,WACX,SAAC,KAAW,UACD,OAARC,GACC,0BAAM,mBAEN,0BAAM,qBAIZ,SAAC,KAAU,WACT,iBAAK1B,UAAU,oBAAmB,WAChC,2BACG8K,IACC,iBAAK9K,UAAU,kBAAiB,WAC9B,SAAC,MAAa,CAACuB,KAAK,WACpB,0BAAM,iCAGR,GAEDoE,IACC,gBAAK3F,UAAU,kBAAiB,UAC9B,4BACG,KACD,SAAC,MAAa,IAAG,8DAKrB,MAGHuE,EAAYhI,KAAI,SAACiO,GAAI,OACpB,gBAAKxK,UAAU,iBAAgB,UAC7B,iBAAKA,UAAU,kBAAkBhE,GAAG,UAAS,WAC3C,kBAAOiR,QAAQ,SAAQ,SAAC,aAExB,kBAAOjN,UAAU,IAAG,UAClB,kBACE0B,KAAK,OACL1B,UAAU,eACVhE,GAAIsB,EACJ+N,UAAU,EACV9F,MAAOiF,EAAKc,YACZC,SAAU,SAAC7H,GAAC,OAAKkH,GAAalH,EAAE,UAIlC,KAER,iBAAK1D,UAAU,uBAAuBhE,GAAG,QAAO,WAC9C,mBAAOiR,QAAQ,aAAY,UACxB,IAAI,oBACa,iBAAMjN,UAAU,WAAU,SAAC,UAEtC,OAAR0B,GACC,kBACE1B,UAAU,gBACV0B,KAAK,OACL8B,KAAK,QACLxH,GAAG,QACH0P,YAAY,QACZH,SAAU,SAAC7H,GAAC,OAAKkH,GAAalH,EAAE,KAGlC,8BAC2B,KAAxBM,EAAWmH,WACV,kBACEnL,UAAU,SACV0B,KAAK,OACLqK,aAAwB,OAAV/H,QAAU,IAAVA,OAAU,EAAVA,EAAYrC,MAC1B4J,SAAU,SAAC7H,GACTkD,IAAgB,SAAC/C,GAAI,yBAChBA,GAAI,cACN,QAAUH,EAAEmH,OAAOtF,OAAK,IAEzBwB,IAAQ,EACZ,KAGF,kBACE/G,UAAU,SACVqL,UAAU,EACV3J,KAAK,OACLqK,aAAwB,OAAV/H,QAAU,IAAVA,OAAU,EAAVA,EAAYrC,MAC1B4J,SAAU,SAAC7H,GAAC,OACVkD,IAAgB,SAAC/C,GAAI,yBAChBA,GAAI,cACN,QAAUH,EAAEmH,OAAOtF,OAAK,GACxB,UAOf,iBAAKvF,UAAU,uBAAuBhE,GAAG,yBAAwB,WAC/D,mBAAOiR,QAAQ,aAAY,UAAC,aACf,iBAAMjN,UAAU,aAAY,SAAC,WAE1C,kBAAOiN,QAAQ,aAAY,SAChB,OAARvL,GACC,iBAAK1B,UAAU,YAAW,WACxB,oBACEA,UAAU,mCACVwD,KAAK,yBACLxH,GAAG,yBACHuP,SAAU,SAAC7H,GAAC,OAAKkH,GAAalH,EAAE,EAChCH,IAAK,SAACiI,GACJjI,GAAIkI,QAAQ,GAAKD,CACnB,EAAE,WAEF,oBAAQjG,MAAM,MAAK,UAChB,IAAI,uBAGNsO,EAAOtX,KAAI,SAAC0P,GAAI,OACf,oBAAQ1G,MAAO0G,EAAKjQ,GAAG,UAAC,IAAEiQ,EAAKuJ,YAAmB,OAE5C,QAGZ,8BAC2B,KAAxBxR,EAAWmH,WACV,oBACEnL,UAAU,QACVhE,GAAG,yBACHwH,KAAK,yBACL+H,SAAU,SAAC7H,GAAC,OACVkD,IAAgB,SAAC/C,GAAI,yBAChBA,GAAI,cACN,yBAA2BH,EAAEmH,OAAOtF,OAAK,GACzC,EACJ,WAED,oBAAQA,MAAM,MAAK,UAChB,IAAI,uBAGNsO,EAAOtX,KAAI,SAAC0P,GAAI,OACf,oBACE1G,MAAO0G,EAAKjQ,GACZmQ,SACEF,EAAKjQ,KAAgB,OAAVgI,QAAU,IAAVA,OAAU,EAAVA,EAAYuQ,wBAGxB,UAEA,IACAtI,EAAKuJ,YACC,QAIb,oBACExV,UAAU,QACVqL,UAAU,EACVrP,GAAG,yBACHwH,KAAK,yBACL+H,SAAU,SAAC7H,GAAC,OACVkD,IAAgB,SAAC/C,GAAI,yBAChBA,GAAI,cACN,yBAA2BH,EAAEmH,OAAOtF,OAAK,GACzC,EACJ,WAED,oBAAQA,MAAM,MAAK,UAChB,IAAI,uBAGNsO,EAAOtX,KAAI,SAAC0P,GAAI,OACf,oBACE1G,MAAO0G,EAAKjQ,GACZmQ,SACEF,EAAKjQ,KAAgB,OAAVgI,QAAU,IAAVA,OAAU,EAAVA,EAAYuQ,wBAGxB,UAEA,IACAtI,EAAKuJ,YACC,eAQvB,iBAAKxV,UAAU,sBAAqB,WAClC,kBAAOiN,QAAQ,aAAY,SAAC,oBAC5B,kBAAOA,QAAQ,aAAY,SAChB,OAARvL,GACC,gBAAK1B,UAAU,YAAW,UACxB,oBACEA,UAAU,YACVhE,GAAG,kCACHuP,SAAU,SAAC7H,GAAC,OAAKkH,GAAalH,EAAE,EAAC,WAEjC,oBAAQ6B,MAAM,MAAK,UAChB,IAAI,uBAGN4O,GAAc5X,KAAI,SAAC0P,GAAI,OACtB,oBAAQ1G,MAAO0G,EAAKjQ,GAAG,UAAC,IAAEiQ,EAAKuJ,YAAmB,UAKxD,8BAC2B,KAAxBxR,EAAWmH,WACV,oBACEnL,UAAU,YACVwD,KAAK,kCACLxH,GAAG,kCACHuP,SAAU,SAAC7H,GAAC,OACVkD,IAAgB,SAAC/C,GAAI,yBAChBA,GAAI,cACN,kCAAoCH,EAAEmH,OAAOtF,OAAK,GAClD,EACJ,WAED,oBAAQA,MAAM,MAAK,UAChB,IAAI,uBAGN4O,GAAc5X,KAAI,SAAC0P,GAAI,OACtB,oBACE1G,MAAO0G,EAAKjQ,GACZmQ,SACEF,EAAKjQ,KACK,OAAVgI,QAAU,IAAVA,OAAU,EAAVA,EAAYwQ,iCAGb,UAEA,IACAvI,EAAKuJ,YACC,QAIb,oBACExV,UAAU,YACVqL,UAAU,EACV7H,KAAK,kCACLxH,GAAG,kCACHuP,SAAU,SAAC7H,GAAC,OACVkD,IAAgB,SAAC/C,GAAI,yBAChBA,GAAI,cACN,kCAAoCH,EAAEmH,OAAOtF,OAAK,GAClD,EACJ,WAED,oBAAQA,MAAM,MAAK,UAChB,IAAI,uBAGN4O,GAAc5X,KAAI,SAAC0P,GAAI,OACtB,oBACE1G,MAAO0G,EAAKjQ,GACZmQ,SACEF,EAAKjQ,KACK,OAAVgI,QAAU,IAAVA,OAAU,EAAVA,EAAYwQ,iCAGb,UAEA,IACAvI,EAAKuJ,YACC,eAQvB,iBAAKxV,UAAU,sBAAsBhE,GAAG,mBAAkB,WACxD,mBAAOiR,QAAQ,aAAY,UAAC,6BACC,iBAAMjN,UAAU,WAAU,SAAC,WAExD,kBAAOiN,QAAQ,aAAY,SAChB,OAARvL,GACC,iBAAK1B,UAAU,YAAW,WACxB,oBACEA,UAAU,mBACVwD,KAAK,mBACLxH,GAAG,mBACHuP,SAAU,SAAC7H,GAAC,OAAKkH,GAAalH,EAAE,EAAC,WAEjC,oBAAQ6B,MAAM,MAAK,UAChB,IAAI,uBAGNsP,GAAatY,KAAI,SAAC0P,GAAI,OACrB,oBAAQ1G,MAAO0G,EAAKjQ,GAAG,UAAC,IAAEiQ,EAAKC,YAAmB,OAE5C,QAGZ,8BAC2B,KAAxBlI,EAAWmH,WACV,oBACEnL,UAAU,mBACVwD,KAAK,mBACLxH,GAAG,mBACH+P,aAAwB,OAAV/H,QAAU,IAAVA,OAAU,EAAVA,EAAY4Q,iBAC1BrJ,SAAU,SAAC7H,GAAC,OACVkD,IAAgB,SAAC/C,GAAI,yBAChBA,GAAI,cACN,mBAAqBH,EAAEmH,OAAOtF,OAAK,GACnC,EACJ,WAED,oBAAQA,MAAM,MAAK,UAChB,IAAI,uBAGNsP,GAAatY,KAAI,SAAC0P,GAAI,OACrB,oBACE1G,MAAO0G,EAAKjQ,GACZmQ,SACEF,EAAKjQ,KAAgB,OAAVgI,QAAU,IAAVA,OAAU,EAAVA,EAAY4Q,kBAGxB,UAEA,IACA3I,EAAKC,YACC,QAIb,oBACElM,UAAU,oBACVqL,UAAU,EACV7H,KAAK,mBACLxH,GAAG,mBACH+P,aAAwB,OAAV/H,QAAU,IAAVA,OAAU,EAAVA,EAAY4Q,iBAC1BrJ,SAAU,SAAC7H,GAAC,OACVkD,IAAgB,SAAC/C,GAAI,yBAChBA,GAAI,cACN,mBAAqBH,EAAEmH,OAAOtF,OAAK,GACnC,EACJ,WAED,oBAAQA,MAAM,MAAK,UAChB,IAAI,uBAGNsP,GAAatY,KAAI,SAAC0P,GAAI,OACrB,oBACE1G,MAAO0G,EAAKjQ,GACZmQ,SACEF,EAAKjQ,KAAgB,OAAVgI,QAAU,IAAVA,OAAU,EAAVA,EAAY4Q,kBAGxB,UAEA,IACA3I,EAAKC,YACC,eAQvB,iBAAKlM,UAAU,sBAAsBhE,GAAG,cAAa,WACnD,kBAAOiR,QAAQ,aAAY,SAAC,eAC5B,kBAAOA,QAAQ,aAAY,SAChB,OAARvL,GACC,iBAAK1B,UAAU,YAAW,WACxB,oBACEA,UAAU,YACVwD,KAAK,cACLxH,GAAG,cACHuP,SAAU,SAAC7H,GAAC,OAAKkH,GAAalH,EAAE,EAAC,WAEjC,oBAAQ6B,MAAM,MAAK,UAChB,IAAI,uBAGNwO,EAASxX,KAAI,SAAC0P,GAAI,OACjB,oBAAQ1G,MAAO0G,EAAKjQ,GAAG,UAAC,IAAEiQ,EAAKC,YAAmB,OAE5C,QAGZ,8BAC2B,KAAxBlI,EAAWmH,WACV,oBACEnL,UAAU,YACVwD,KAAK,cACLxH,GAAG,cACHuP,SAAU,SAAC7H,GAAC,OACVkD,IAAgB,SAAC/C,GAAI,yBAChBA,GAAI,cACN,cAAgBH,EAAEmH,OAAOtF,OAAK,GAC9B,EACJ,WAED,oBAAQA,MAAM,MAAK,UAChB,IAAI,uBAGNwO,EAASxX,KAAI,SAAC0P,GAAI,OACjB,oBACE1G,MAAO0G,EAAKjQ,GACZmQ,SACEF,EAAKjQ,KAAgB,OAAVgI,QAAU,IAAVA,OAAU,EAAVA,EAAY0Q,aACxB,UAEA,IACAzI,EAAKC,YACC,QAIb,oBACElM,UAAU,YACVqL,UAAU,EACV7H,KAAK,cACLxH,GAAG,cACHuP,SAAU,SAAC7H,GAAC,OACVkD,IAAgB,SAAC/C,GAAI,yBAChBA,GAAI,cACN,cAAgBH,EAAEmH,OAAOtF,OAAK,GAC9B,EACJ,WAED,oBAAQA,MAAM,MAAK,UAChB,IAAI,uBAGNwO,EAASxX,KAAI,SAAC0P,GAAI,OACjB,oBACE1G,MAAO0G,EAAKjQ,GACZmQ,SACEF,EAAKjQ,KAAgB,OAAVgI,QAAU,IAAVA,OAAU,EAAVA,EAAY0Q,aACxB,UAEA,IACAzI,EAAKC,YACC,eAQvB,iBAAKlM,UAAU,sBAAsBhE,GAAG,cAAa,WACnD,kBAAOiR,QAAQ,aAAY,SAAC,eAC5B,kBAAOA,QAAQ,aAAY,SAChB,OAARvL,GACC,gBAAK1B,UAAU,YAAW,UACxB,oBACEA,UAAU,YACVwD,KAAK,cACLxH,GAAG,cACHuP,SAAU,SAAC7H,GAAC,OAAKkH,GAAalH,EAAE,EAAC,WAEjC,oBAAQ6B,MAAM,MAAK,UAChB,IAAI,uBAGN0O,EAAS1X,KAAI,SAAC0P,GAAI,OACjB,oBAAQ1G,MAAO0G,EAAKjQ,GAAG,UAAC,IAAEiQ,EAAKC,YAAmB,UAKxD,8BAC2B,KAAxBlI,EAAWmH,WACV,oBACEnL,UAAU,YACVhE,GAAG,cACHwH,KAAK,cACL+H,SAAU,SAAC7H,GAAC,OACVkD,IAAgB,SAAC/C,GAAI,yBAChBA,GAAI,cACN,cAAgBH,EAAEmH,OAAOtF,OAAK,GAC9B,EACJ,WAED,oBAAQA,MAAM,MAAK,UAChB,IAAI,uBAGN0O,EAAS1X,KAAI,SAAC0P,GAAI,OACjB,oBACE1G,MAAO0G,EAAKjQ,GACZmQ,SACEF,EAAKjQ,KAAgB,OAAVgI,QAAU,IAAVA,OAAU,EAAVA,EAAYoI,aACxB,UAEA,IACAH,EAAKC,YACC,QAIb,oBACElM,UAAU,YACVqL,UAAU,EACVrP,GAAG,cACHwH,KAAK,cACL+H,SAAU,SAAC7H,GAAC,OACVkD,IAAgB,SAAC/C,GAAI,yBAChBA,GAAI,cACN,cAAgBH,EAAEmH,OAAOtF,OAAK,GAC9B,EACJ,WAED,oBAAQA,MAAM,MAAK,UAChB,IAAI,uBAGN0O,EAAS1X,KAAI,SAAC0P,GAAI,OACjB,oBACE1G,MAAO0G,EAAKjQ,GACZmQ,SACEF,EAAKjQ,KAAgB,OAAVgI,QAAU,IAAVA,OAAU,EAAVA,EAAYoI,aACxB,UAEA,IACAH,EAAKC,YACC,eAQvB,iBAAKlM,UAAU,sBAAsBhE,GAAG,YAAW,WACjD,mBAAOiR,QAAQ,aAAY,UAAC,cACd,iBAAMjN,UAAU,WAAU,SAAC,WAEzC,kBAAOiN,QAAQ,aAAajR,GAAG,YAAW,SAC/B,OAAR0F,GACC,iBAAK1B,UAAU,YAAW,WACxB,oBACEA,UAAU,oBACVwD,KAAK,YACLxH,GAAG,YACHuP,SAAU,SAAC7H,GAAC,OAAKkH,GAAalH,EAAE,EAAC,WAEjC,oBAAQ6B,MAAM,MAAK,UAChB,IAAI,uBAGNP,EAAOzI,KAAI,SAAC0P,GAAI,OACf,oBAAQ1G,MAAO0G,EAAKjQ,GAAG,UAAC,IAAEiQ,EAAKC,YAAmB,OAE5C,QAGZ,8BAC2B,KAAxBlI,EAAWmH,WACV,mBACEnL,UAAU,kBACVuL,SAAU,SAAC7H,GAAC,OACVkD,IAAgB,SAAC/C,GAAI,yBAChBA,GAAI,cACN,YAAcH,EAAEmH,OAAOtF,OAAK,GAC5B,EACJ,SAEAP,EAAOzI,KAAI,SAAC0P,GAAI,OACf,oBACE1G,MAAO0G,EAAKjQ,GACZmQ,SACEF,EAAKjQ,KAAgB,OAAVgI,QAAU,IAAVA,OAAU,EAAVA,EAAYmH,WACxB,UAEA,IACAc,EAAKC,YACC,OAIb,mBACElM,UAAU,kBACVqL,UAAU,EACVE,SAAU,SAAC7H,GAAC,OACVkD,IAAgB,SAAC/C,GAAI,yBAChBA,GAAI,cACN,YAAcH,EAAEmH,OAAOtF,OAAK,GAC5B,EACJ,SAEAP,EAAOzI,KAAI,SAAC0P,GAAI,OACf,oBACE1G,MAAO0G,EAAKjQ,GACZmQ,SACEF,EAAKjQ,KAAgB,OAAVgI,QAAU,IAAVA,OAAU,EAAVA,EAAYmH,WACxB,UAEA,IACAc,EAAKC,YACC,cAQvB,iBAAKlM,UAAU,sBAAsBhE,GAAG,cAAa,WACnD,kBAAOiR,QAAQ,aAAY,SAAC,gBACnB,OAARvL,GACC,iCACE,gBAAK1B,UAAU,yBAAwB,UACrC,0BACE,SAAC,EAAAqD,wBAAuB,CACtBC,MAAO+Q,GACP3S,KAAK,OACL8B,KAAK,cACLxH,GAAG,cACHgE,UAAU,eACVqU,UAAWA,GACXa,sBAAuBA,GACvBO,YAAa,CACXjD,KAAM,CAAC,KAAM,UAAW,mBAE1BkD,oBAAoB,UACpBL,aAAcA,GACd5R,SAAU,SAACC,GACTV,IAAY,SAACa,GAAI,yBACZA,GAAI,IACP8Q,YAAajR,EAAE1H,IAAE,GAErB,EACA8H,UAAU,SAIhB,0BAAOhG,GAAKwX,UAAgB,QAG9B,8BAC2B,KAAxBtR,EAAWmH,WACV,gBAAKnL,UAAU,yBAAwB,UACrC,SAAC,EAAAqD,wBAAuB,CACtBC,MAAO+Q,GACP3S,KAAK,OACL8B,KAAK,cACLxH,GAAG,cACHgE,UAAU,cACVqU,UAAWA,GACXa,sBAAuBA,GACvBO,YAAa,CACXjD,KAAM,CAAC,KAAM,UAAW,mBAE1BkD,oBAAoB,UACpBL,aAAcA,GACd5R,SAAU,SAACC,GACTkD,IAAgB,SAAC/C,GAAI,yBAChBA,GAAI,IACP8Q,YAAajR,EAAE1H,IAAE,IAEnBmH,QAAQC,IAAIM,EAAE1H,GAChB,EACAuP,SAAU,SAAC7H,GACTkD,IAAgB,SAAC/C,GAAI,yBAChBA,GAAI,IACP8Q,YAAajR,EAAE1H,IAAE,GAErB,EACA8H,UAAU,EACViJ,kBAC4B,OAAhB,OAAV/I,QAAU,IAAVA,OAAU,EAAVA,EAAYoR,YACR,GACU,OAAVpR,QAAU,IAAVA,OAAU,EAAVA,EAAYoR,gBAMtB,gBAAKpV,UAAU,uBAAsB,UACnC,kBACEsD,MAAO+Q,GACP3S,KAAK,OACL8B,KAAK,cACLxH,GAAG,cACH+P,aAC4B,OAAhB,OAAV/H,QAAU,IAAVA,OAAU,EAAVA,EAAYoR,YACR,GACU,OAAVpR,QAAU,IAAVA,OAAU,EAAVA,EAAYoR,WAElBpV,UAAU,cACVqU,UAAWA,GACXhJ,UAAU,YAOtB,iBAAKrL,UAAU,uBAAsB,WACnC,gBAAKA,UAAU,WACf,gBAAKA,UAAU,gBAAgBhE,GAAG,cAAa,UAC7C,mBAAOiR,QAAQ,aAAY,UAAC,0BAE1B,iBAAM0I,MAAM,sBAAqB,SAAC,gBAIxC,gBACE3V,UAAU,wBACVuD,IAAK,SAACiI,GACJjI,GAAIkI,QAAQ,GAAKD,CACnB,EAAE,SAEO,OAAR9J,GACC,0BACE,SAAC,IAAU,CACT1B,UAAU,GACVvD,MAAM,OACNT,GAAG,cACHuJ,MAAOA,EACP/B,KAAK,cACL+H,SAAU,SAAC7H,GACT8B,EAAS9B,GACTV,IAAY,SAACa,GAAI,yBACZA,GAAI,cACN,cAAgB0B,GAAK,GAE1B,EACA8H,QAASpD,QAKb,8BAC2B,KAAxBjG,EAAWmH,WACV,0BACE,SAAC,IAAU,CACTnL,UAAU,GACVvD,MAAM,OAENsP,aAAwB,OAAV/H,QAAU,IAAVA,OAAU,EAAVA,EAAYqC,YAC1B7C,KAAK,cACLxH,GAAG,mBACHuP,SAAU,SAAC7H,GACT8B,EAAS9B,GACTkD,IAAgB,SAAC/C,GAAI,yBAChBA,GAAI,cACN,cAAgBH,GAAC,GAEtB,EACA2J,QAASpD,QAIb,gBAAKpP,MAAO,CAAEuQ,OAAQ,WAAY,UAChC,SAAC,IAAU,CACTpL,UAAU,GACVvD,MAAM,OACN4O,UAAU,EACV8B,UAAU,EACVpB,aAAwB,OAAV/H,QAAU,IAAVA,OAAU,EAAVA,EAAYqC,YAC1B7C,KAAK,cACLxH,GAAG,mBACHuP,SAAU,SAAC7H,GACT8B,EAAS9B,GACTkD,IAAgB,SAAC/C,GAAI,yBAChBA,GAAI,cACN,cAAgBH,GAAC,GAEtB,EACA2J,QAASpD,YAOrB,iBAAKjK,UAAU,2CAA0C,WACvD,gBAAKA,UAAU,YAAW,UACxB,gBAAKA,UAAU,yBAAwB,UACrC,2BACE,SAAC,MAAkB,IAAG,sBAM5B,iBAAKA,UAAU,iBAAgB,UACJ,KAAxBgE,EAAWmH,WACV,oBACEzJ,KAAK,SACL1B,UAAU,kBACV2B,MAAM,MACNC,QAAS,kBAAM8N,IAAW,EAAK,EAAC,UAE/B,KACD,SAAC,MAAM,IAAG,MACN,QAGN,oBACEhO,KAAK,SACL7G,MAAO,CAAEuQ,OAAQ,WACjBpL,UAAU,kBACV2B,MAAM,MAAK,UAEV,KACD,SAAC,MAAM,IAAG,MACN,OAIPL,KACC,iCACE,2BAAO,2CACP,2BAAO,qBACP,kBACEI,KAAK,OACLkU,UAAQ,EACRpS,KAAK,QACLxH,GAAG,QACH6Z,OAAO,mCACPtK,SA3uCK,SAACrL,GACxB,IAAM4V,EAAQ5V,EAAM2K,OAAOiL,MACrBC,EAAqB3Z,MAAMhB,KAAK0a,GAClCC,EAAmBlI,QAAU,GAC/BmH,GAAiBe,IAEjBC,MAAM,8CACN9V,EAAM2K,OAAOtF,MAAQ,KAEzB,KAouCkB,wBACGwP,GAAcxY,KAAI,SAAC0Z,GAAI,OACtB,wBAAqBA,EAAKzS,MAAjByS,EAAKzS,KAAsB,OAGxC,kBAAOxD,UAAU,0BAAyB,UACxC,eAAGA,UAAU,aAAY,UAAC,4DAEa,aAM7C,gBAAKA,UAAU,2EAA0E,SAC9E,OAAR0B,GACC,oBACEA,KAAK,SACL1B,UAAU,kBACV4B,QAAS,YA5jCP,WACpBuB,QAAQC,IAAIsD,IACZvD,QAAQC,IAAIY,GACZb,QAAQC,IAAIgM,GACZ,IAAInB,EAAUN,SAASC,uBAAuB,SAE1CH,EAAY2B,EAAU1B,MAAK,SAAC1S,GAAC,OAAKA,EAAE2G,QAAU+E,GAAS/E,KAAK,IAGhE,GAFAwB,QAAQC,IAAIqK,GAERA,EAAW,CACbtK,QAAQC,IAAI,WACZ,IAAIoI,EAAMmC,SAASC,uBAAuB,UAC1CzK,QAAQC,IAAIoI,EAAIqC,QAChB,IAAK,IAAIC,EAAQ,EAAGA,EAAQtC,EAAIqC,OAAQC,IACtCtC,EAAIsC,GAAOC,UAAUC,IAAI,eAU3B,OARA7K,QAAQC,IAAIoI,GAEZT,IAAiB,GACjBnF,IAAqB,QAErBjD,YAAW,WACT,GACC,IAEL,CACA,IAAI8K,EAAJ,CACA,IAAK,IAAIS,EAAI,EAAGA,EAAID,EAAQJ,OAAQK,IAEZ,IAApBD,EAAQC,GAAG3I,OACS,QAApB0I,EAAQC,GAAG3I,OACS,OAApB0I,EAAQC,GAAG3I,YACSiB,GAApByH,EAAQC,GAAG3I,OAEX0I,EAAQC,GAAGH,UAAUC,IAAI,eAEzBpI,IAAqB,GACrBmF,IAAiB,KAEjBkD,EAAQC,GAAGH,UAAUI,OAAO,eAE5BvI,IAAqB,IAYzB,IAAIpC,EAAOkD,GAAS/E,MAChBuU,EAAQxP,GAAS6N,uBACjB4B,EAASzP,GAASkO,iBAClBvO,EAAcK,GAASL,YACvBrB,EAAS0B,GAASyE,UAEtB,GACEnM,OAAOC,OAAO,CAAEuE,KAAAA,EAAM0S,MAAAA,EAAOC,OAAAA,EAAQ9P,YAAAA,EAAarB,OAAAA,IAAUoJ,SAAS,IAIrE,OAFAxI,IAAqB,QACrBqI,EAAQC,GAAGH,UAAUI,OAAO,eAI9B,IAAIE,GAAQC,EAAAA,EAAAA,GAAiB/K,IAE7BJ,QAAQC,IAAIiL,GAERA,EACFzI,IAAqB,IAIvBA,IAAqB,GACrB5D,IAAM,CACJC,OAAQ,OACRC,IAAKjB,EAAO,0CACZ5D,KAAMqJ,KACLrE,MAAK,SAACI,GACPmD,IAAqB,GACrBzC,QAAQC,IAAI,UAAWX,GACvBpC,GAAa,GACb8D,IACAC,GAAU,GACVzB,YAAW,WACTyB,GAAU,EACZ,GAAG,IACL,IAhEqB,CAiEvB,CAk+BsBgS,EACF,EAAE,WAEF,SAAC,MAAwB,IAAG,aACf,QAGf,gCACG,IACwB,KAAxBpS,EAAWmH,WACV,oBACEzJ,KAAK,SACL1B,UAAU,kBACV4B,QA5+BD,WACrBuB,QAAQC,IAAIY,GACZ,IAAIiK,EAAUN,SAASC,uBAAuB,SAE1CH,EAAY2B,EAAU1B,MAAK,SAAC1S,GAAC,OAAKA,EAAE2G,QAAUgF,GAAahF,KAAK,IAIpE,GAHAwB,QAAQC,IAAIqK,GAIVA,GACQ,GAAR3G,IACAH,GAAahF,OAASkF,GAAoBlF,MAC1C,CACAwB,QAAQC,IAAI,WACZ,IAAIoI,EAAMmC,SAASC,uBAAuB,UAC1CzK,QAAQC,IAAIoI,EAAIqC,QAChB,IAAK,IAAIC,EAAQ,EAAGA,EAAQtC,EAAIqC,OAAQC,IACtCtC,EAAIsC,GAAOC,UAAUC,IAAI,eAU3B,OARA7K,QAAQC,IAAIoI,GAEZT,IAAiB,GACjBnF,IAAqB,QAErBjD,YAAW,WACT,GACC,IAEL,CACA,IAAK,IAAIuL,EAAI,EAAGA,EAAID,EAAQJ,OAAQK,IAEZ,IAApBD,EAAQC,GAAG3I,OACS,QAApB0I,EAAQC,GAAG3I,OACS,OAApB0I,EAAQC,GAAG3I,YACSiB,GAApByH,EAAQC,GAAG3I,OAEX0I,EAAQC,GAAGH,UAAUC,IAAI,eAEzBpI,IAAqB,GACrBmF,IAAiB,KAEjBkD,EAAQC,GAAGH,UAAUI,OAAO,eAE5BvI,IAAqB,IAGzB,IAAIpC,EAAOmD,GAAahF,MACpBuU,EAAQvP,GAAa4N,uBACrB4B,EAASxP,GAAaiO,iBAEtByB,GADkB1P,GAAa2P,iBAChB3P,GAAaN,aAE5BrH,OAAOC,OAAO,CAAEuE,KAAAA,EAAM0S,MAAAA,EAAOC,OAAAA,EAAQE,aAAAA,IAAgBjI,SAAS,MAIlEjL,QAAQC,IAAIuD,IACZxD,QAAQC,IAAIuD,GAAarJ,WAEzBsI,IAAqB,GAKrB5D,IAAM,CACJC,OAAQ,OACRC,IAAKjB,EAAO,0CACZ5D,KAAM,CACJrB,GAAI2K,GAAa3K,GACjB6J,UAAWvI,EACXqE,MAAOgF,GAAahF,MACpB4S,uBAAwB5N,GAAa4N,uBACrCC,gCACE7N,GAAa6N,gCACfpI,YAAazF,GAAayF,YAC1BsI,YAAa/N,GAAa+N,YAC1BvJ,UAAWxE,GAAawE,UACxBwJ,YAC+B,KAA7BhO,GAAagO,YACC,OAAV3Q,QAAU,IAAVA,OAAU,EAAVA,EAAYoR,WACZzO,GAAagO,YAEnBM,YAAatB,EACbtN,YAC8B,IAA5BM,GAAaN,YAAoBd,EAAQoB,GAAaN,YACxDkQ,WAAY5P,GAAa4P,WACzB3B,iBAAkBjO,GAAaiO,oBAEhCvS,MAAK,SAACI,GACPmD,IAAqB,GACrBvF,GAAa,GACb8C,QAAQC,IAAI,UAAWX,GACvBpC,GAAa,GACb8D,IACAG,GAAW,GACX3B,YAAW,WACT2B,GAAW,EACb,GAAG,IAEL,IACF,EAw4BgD,WAExB,SAAC,MAAwB,IAAG,SACrB,QAGT,oBACE5C,KAAK,SACL1B,UAAU,kBACVnF,MAAO,CAAEuQ,OAAQ,WAAY,WAE7B,SAAC,MAAwB,IAAG,SACrB,2BAiBjC,E,sBCpjBA,MAxyBA,SAAwB1Q,GACCqG,aAAaC,QAAQ,WADd,IAAD,EAErB1D,EAAyB5C,EAAzB4C,UAAWqR,EAAcjU,EAAdiU,UAEb1N,EAAUC,EAAAA,EAAAA,QAChB,GAAkCC,EAAAA,EAAAA,UAAS,IAAG,eAC9C,GADgB,KAAc,MACJA,EAAAA,EAAAA,UAAS,QAAM,eACzC,GADY,KAAU,MACYA,EAAAA,EAAAA,UAAS,KAAG,eAA5BgO,GAAF,KAAc,MAC9B,GAAkChO,EAAAA,EAAAA,UAAS,IAAG,eAAvCiO,EAAS,KAAEC,EAAY,KAC9BlM,QAAQC,IAAIgM,EAAUoH,iBACtB,OAA4BrV,EAAAA,EAAAA,WAAS,GAAM,eAApCmO,EAAM,KAAEC,EAAS,KACxB,GAAwBpO,EAAAA,EAAAA,UAAS,IAAG,eAAvB6O,GAAF,KAAS,MACpB,GAA4B7O,EAAAA,EAAAA,YAAU,eAA/B8C,EAAM,KAAEoM,EAAS,KACxB,GAAkClP,EAAAA,EAAAA,WAAS,GAAM,eAA1Cf,EAAS,KAAEC,EAAY,KAC9B,GAAkCc,EAAAA,EAAAA,UAAS,IAAG,eAAvC+N,EAAS,KAChB,GAD8B,MACA/N,EAAAA,EAAAA,WAAS,IAAM,eAAtCG,EAAO,KAAEoO,GAAU,KAC1B,IAAwCvO,EAAAA,EAAAA,UAASwO,EAAAA,KAAkB,iBAA5DC,GAAY,MAAEC,GAAe,MACpC,IAA4B1O,EAAAA,EAAAA,UAAS,IAAG,iBAAjC0S,GAAM,MAAEC,GAAS,MACxB,IAAgC3S,EAAAA,EAAAA,UAAS,IAAG,iBAArC4S,GAAQ,MAAEC,GAAW,MAC5B,IAAgC7S,EAAAA,EAAAA,UAAS,IAAG,iBAArC8S,GAAQ,MAAEC,GAAW,MAC5B,IAA4B/S,EAAAA,EAAAA,UAAS,IAAG,iBAAjC6D,GAAM,MAAEC,GAAS,MACxB,IAA0C9D,EAAAA,EAAAA,UAAS,IAAG,iBAA/CgT,GAAa,MAAEC,GAAgB,MACtC,IAAkCjT,EAAAA,EAAAA,UAAS,IAAG,iBAAvCkT,GAAS,MAAEC,GAAY,MAC9B,IAA4BnT,EAAAA,EAAAA,UAAS,IAAG,iBACxC,IADa,MAAW,OAC8BA,EAAAA,EAAAA,UAAS,KAAG,iBAA3D4C,GAAmB,MAAEmM,GAAsB,MAClD,IAAsC/O,EAAAA,EAAAA,UAAS,IAAG,iBAA3CoD,GAAW,MAAE+L,GAAc,MAC5BH,GAAa,CACjBtK,UAAWvI,EACXqE,MAA2B,KAC3B4S,uBAAwB,KACxBC,gCAAiC,KACjCE,YAAa,KACbtI,YAAa,KACbjB,UAAW,KACXwJ,YAAa,KACbM,YAAa,KACbsB,WAAY,KACZlQ,YAAa,MAEf,IAAgClF,EAAAA,EAAAA,UAASgP,IAAW,iBAA7CzJ,GAAQ,MAAE1D,GAAW,MAC5B,IAAoC7B,EAAAA,EAAAA,UAASgP,IAAW,iBAAjDnM,GAAU,MAAEE,GAAa,MAChC,IAAwB/C,EAAAA,EAAAA,UAAS,OAAM,iBAAhCO,GAAI,MAAEuO,GAAO,MACpB,IAA8B9O,EAAAA,EAAAA,WAAS,GAAM,iBAAtC8N,GAAO,MAAE3K,GAAU,MAC1B,IAA4BnD,EAAAA,EAAAA,WAAS,GAAM,iBAApCkD,GAAM,MAAED,GAAS,MACxB,IAA8BjD,EAAAA,EAAAA,UAAS,IAAG,iBAAnCsV,GAAO,MAAEC,GAAU,MAC1B,IAA0BvV,EAAAA,EAAAA,UAAS,UAAS,iBAC5C,IADY,MAAU,OACcA,EAAAA,EAAAA,UAAS,KAAG,iBAAzCoP,GAAU,MAAEC,GAAa,MAChC,IAAsCrP,EAAAA,EAAAA,UAAS,IAAG,iBAA3CsP,GAAW,MAAEC,GAAc,MAClC,IAAkDvP,EAAAA,EAAAA,UAAS,IAAG,iBAAvDwP,GAAiB,MACxB,IAD8C,OACNxP,EAAAA,EAAAA,UAAS,KAAG,iBAA7C2B,GAAY,MAAEsC,GAAe,MACpC,IAAoCjE,EAAAA,EAAAA,YAAU,iBAA3ByS,IAAF,MAAe,OAC1B1C,IAAkBhO,EAAAA,EAAAA,QAAO,OAM/BzF,EAAAA,EAAAA,YAAU,WAAQ,GAAG,CAACuG,MACtBvG,EAAAA,EAAAA,YAAU,WAAQ,GAAG,CAACsG,KAGtBZ,QAAQC,IAAIgM,GACZ,IAAM+B,GAAW,SAAC/B,GAChB,OAAO,gBAAKzE,MAAM,SAAQ,SAAEyE,EAAUgC,KACxC,EACMJ,GAAarC,EAAUsC,MAAK,SAACnT,GAAI,MAA2B,YAAtBA,EAAKiT,YAA0B,IAErEpP,GAAQ,SAACyN,GACb,OACE,gBAAKpP,UAAU,WAAW,cAAY,UAAU2B,MAAOyN,EAAUzN,MAAM,SACpEyN,EAAUzN,OAGjB,EACMwT,GAAQ,SAAC/F,GACb,OACE,gBAAKpP,UAAU,WAAW,cAAY,UAAU2B,MAAOyN,EAAU+F,MAAM,SACpE/F,EAAU+F,OAGjB,EACMwB,GAAgB,SAACvH,GACrB,OACE,gBACEpP,UAAU,WACV,cAAY,UACZ2B,MAAOyN,EAAU+E,cAAc,SAE9B/E,EAAU+E,eAGjB,EACMyC,GAAY,SAACxH,GACjB,OACE,gBACEpP,UAAU,WACV,cAAY,UACZ2B,MAAOyN,EAAU2E,SAAS,SAEzB3E,EAAU2E,UAGjB,EACM8C,GAAW,SAACzH,GAChB,OACE,gBACEpP,UAAU,WACV,cAAY,UACZ2B,MAAOyN,EAAU6E,SAAS,SAEzB7E,EAAU6E,UAGjB,EACM1C,GAAS,SAACnC,GACd,OACE,gBAAKpP,UAAU,WAAW,cAAY,UAAU2B,MAAOyN,EAAUpK,OAAO,SACrEoK,EAAUpK,QAGjB,EACM8R,GAAa,SAAC1H,GAClB,OACE,gBACEpP,UAAU,WACV,cAAY,UACZ2B,MAAOyN,EAAUgG,WAAW,SAE3BhG,EAAUgG,YAGjB,EACM2B,GAAa,SAAC3H,GAClB,OACE,gBACEpP,UAAU,WACV,cAAY,UACZ2B,MAAOyN,EAAU4H,WAAW,SAE3B5H,EAAU4H,YAGjB,EACMC,GAAc,SAAC7H,GACnB,OACE,gBACEpP,UAAU,WACV,cAAY,UACZ2B,MAAOyN,EAAUkH,iBAAiB,SAEjClH,EAAUkH,kBAGjB,EAeMjB,GAAe,SAACvX,GACpB,OACE,gBAAKkC,UAAU,iBAAgB,UAC7B,kBAAMA,UAAU,cAAa,UAC1BlC,EAAKwX,QAAQ,MAAE,0BAAOxX,EAAKyX,iBAAsB,QAI1D,EAuDML,GAAwB,WAC5BlT,IAAM,CACJC,OAAQ,OACRC,IACEjB,EAAO,yDAC2C3D,EAAS,yBAC5D+E,MAAK,SAACgH,GACP,IAAI6N,EAAW7N,EAAIhM,KACnBiX,GAAa4C,GACb/T,QAAQC,IAAIiG,EAAIhM,KAClB,GAEF,GAYAI,EAAAA,EAAAA,YAAU,WAAQ,GAAG,CAAC4W,MACtB5W,EAAAA,EAAAA,YAAU,WAAQ,GAAG,CAACgZ,KAGtB,IAAM3V,GAAeC,aAAaC,QAAQ,SAE1C,IAA4BG,EAAAA,EAAAA,UAAS,IAAG,iBAAjCyP,GAAM,MAAEC,GAAS,OAIxBpT,EAAAA,EAAAA,YAAU,WACRqT,IACF,GAAG,IAEH,IAAMA,GAAW,WAGf9O,IAAM,CACJC,OAAQ,MACRC,IAAKjB,EAAO,iDAA6CH,MACxDuB,MAAK,SAACE,GACIA,EAAKlF,KAEXwB,SAAQ,SAACf,GAhBA,aAiBRA,EAAKiT,cACPF,GAAU,CAAC/S,GAEf,GACF,GACF,GAeAL,EAAAA,EAAAA,YAAU,WAAQ,GAAG,CAACqF,MAEtBrF,EAAAA,EAAAA,YAAU,WAbR0F,QAAQC,IAAI,eACZpB,IAAM,CACJC,OAAQ,MACRC,IAAKjB,EAAO,sCACXoB,MAAK,SAAUC,GAChB,IAAI+G,EAAM/G,EAASjF,KACnB+H,GAAgBiE,GAChBlG,QAAQC,IAAI,iBACZD,QAAQC,IAAIiG,EACd,GAMF,GAAG,IAEH,QAAoClI,EAAAA,EAAAA,UAAS,IAAG,iBAAzC6R,GAAU,MAAEC,GAAa,OAChCxV,EAAAA,EAAAA,YAAU,WAERwV,GADU,CAAC,OAEb,GAAG,KAEHxV,EAAAA,EAAAA,YAAU,WApIRuE,IAAM,CACJC,OAAQ,MACRC,IAAKjB,EAAO,4CACXoB,MAAK,SAACgH,GACP,IAAI8L,EAAQ9L,EAAIhM,KAChByW,GAAUqB,EACZ,IAKAnT,IAAM,CACJC,OAAQ,MACRC,IAAKjB,EAAO,wCACXoB,MAAK,SAACgH,GACP,IAAI8N,EAAU9N,EAAIhM,KAClB2W,GAAYmD,EACd,IAKAnV,IAAM,CACJC,OAAQ,MACRC,IAAKjB,EAAO,wCACXoB,MAAK,SAACgH,GACP,IAAI+N,EAAU/N,EAAIhM,KAClB6W,GAAYkD,EACd,IAKApV,IAAM,CACJC,OAAQ,MACRC,IAAKjB,EAAO,sCACXoB,MAAK,SAACgH,GACP,IAAIgO,EAAQhO,EAAIhM,KAChB4H,GAAUoS,EACZ,IAIArV,IAAM,CACJC,OAAQ,MACRC,IAAKjB,EAAO,6CACXoB,MAAK,SAACgH,GACP,IAAIiO,EAAejO,EAAIhM,KACvB+W,GAAiBkD,EACnB,IAvEAtV,IAAM,CACJC,OAAQ,MACRC,IAAKjB,EAAO,uCAEXoB,MAAK,SAAUE,GACd,IAAIgV,EAAqBhV,EAAKlF,KAC9B6S,GAAuBqH,EACzB,IACC/U,OAAM,SAAUgV,GAAO,IAyJ1BrT,KACA+Q,KAzEAlT,IAAM,CACJC,OAAQ,OACRC,IAAKjB,EAAO,6CACXoB,MAAK,SAACgH,GACP,IAAIoO,EAASpO,EAAIhM,KACjBqZ,GAAWe,GACXtU,QAAQC,IAAIqT,GACd,IAoEAzE,IACF,GAAG,IAGH,IAAM7N,GAAe,WACnBoL,GAAU,GAEVvN,IAAM,CACJC,OAAQ,OACRC,IAAKjB,EAAO,4CACZ5D,KAAMqJ,KAELrE,MAAK,SAACgH,GACL,IAAM4I,EAAU5I,EAAIhM,KACpB8F,QAAQC,IAAIiG,EAAIhM,MAEhB,IAAK,IAAI6Q,EAAI,EAAGA,EAAI+D,EAAQpE,OAAQK,IAClC+D,EAAQ/D,GAAQ,IAAIA,EAAI,EAIxB+D,EAAQ/D,GAAqB,iBAAI+D,EAAQ/D,GAAgB,YAAEwJ,QACzD,kBACA,IAoBJhH,GADgB,CAAC,WAGjBvN,QAAQC,IAAI6O,GAEZ5C,EArBkB,CAChB,CACE+B,IAAK,OACLzP,MAAO,eACPwT,MAAO,QACPhB,cAAe,iBACfJ,SAAU,WACVE,SAAU,WACVjP,OAAQ,SACRoQ,WAAY,cACZ4B,WAAY,cACZV,iBAAkB,qBAClBC,WAAY,aACZrE,OAAQ,WAQaC,OAAOF,IAChC9O,QAAQC,IAAIiG,EAAIhM,MAEhB8R,EAAa9F,EAAIhM,MACjB2S,EAAQ3G,EAAIhM,MACZuW,GAAc3B,EAAQuE,iBACtBrT,QAAQC,IAAI6O,EAAQuE,iBACpBjH,GAAU,GACVG,IAAYpO,GAERuO,GADJvO,EACoBqO,EAAAA,IACAyC,EAAAA,IACtB,IACC/P,MAAK,SAACI,GACLU,QAAQC,IAAI,UAAWX,EACzB,GACJ,EACMmI,GAAe,SAAClH,GACpB,MAAsBA,EAAEmH,OAAhB7O,EAAE,EAAFA,GAAIuJ,EAAK,EAALA,MACZvC,IAAY,SAACa,GAAI,yBAAWA,GAAI,cAAG7H,EAAc,QAATuJ,EAAkB,KAAOA,GAAK,IACtEpC,QAAQC,IAAIsD,GACd,EAKM2L,GAAe,SAACjD,GAAe,IAAD,EACxBqB,GAAY,GACtB,OACE,+BAYE,gBAAK9F,MAAM,SAAQ,SACU,IAAd,QAAZ,EAAAgE,EAAU,UAAE,aAAZ,EAAcC,WAEb,+BACE,SAAC,MAAU,CACTjN,MAAM,OACN0I,MAAM,SACNe,OAAO,UACP1J,KAAK,OACLH,KAAK,QACLK,QAAS,WACPsC,GAAckL,GACdiB,EAAUjB,EAAUpT,IACpBqE,GAAa,GACb4P,GAAQ,OACV,OAIJ,+BACE,SAAC,MAAU,CACT5F,MAAM,SACN3I,KAAK,OACLH,KAAK,QACLoJ,MAAM,SACN9P,MAAO,CAAEuQ,OAAQ,sBAS/B,EAEMmH,GAAwC,QAA1B,EAAGvT,OAAOwT,KAAKjC,WAAW,aAAvB,EAAyBhU,KAAI,SAACkW,EAAKvE,GACxD,OACE,SAAC,MAAM,CACLwE,UAAQ,EAERC,KACU,OAAPF,GAAgBtB,IACT,SAAPsB,GAAkB9Q,IACX,SAAP8Q,GAAkB0C,IACX,iBAAP1C,GAA0BkE,IACnB,YAAPlE,GAAqBmE,IACd,YAAPnE,GAAqBoE,IACd,UAAPpE,GAAmBlB,IACZ,cAAPkB,GAAuBqE,IAChB,cAAPrE,GAAuBsE,IAChB,oBAAPtE,GAA6BwE,IACtB,UAAPxE,GAAmBJ,GAEtBO,MAAOH,EACPtI,OAAQoG,GAAWkC,IAfdA,EAkBX,IACMT,GAAyB,WAC7BhQ,IAAM,CACJC,OAAQ,MACRC,IACEjB,EAAO,4DAC8C3D,KAEtD+E,MAAK,SAAUC,GACd,IAAIC,EAAOD,EAASjF,KACpB8F,QAAQC,IAAIb,GACZ+N,GAAe/N,EAEjB,IACCC,OAAM,SAAUF,GACfa,QAAQC,IAAId,EACd,GACJ,EACMqV,GAAc,WAClB3U,IAAY,SAACW,GAAS,yBAAWA,GAAS,IAAEsR,YAAa,MAAI,IAC7DjS,IAAY,SAACW,GAAS,yBAAWA,GAAS,IAAEgR,YAAa,MAAI,IAC7D,IAAMiD,EAAajK,SAASkK,eAAe,SAAStS,MAC9CuS,EAAmC,KAAtBF,EAAWG,OAAgBH,EAAa,KAC3D5U,IAAY,SAACW,GAAS,yBAAWA,GAAS,IAAEhC,MAAOmW,GAAU,GAC/D,EACA,OACE,2BACGzT,IACC,iBAAKrE,UAAU,oBAAmB,WAChC,SAAC,MAAO,CAACuB,KAAK,QAAQ8I,MAAM,UAAU,IAAE,+BAG1C,GAED4E,IACC,iBAAKjP,UAAU,oBAAmB,WAChC,SAAC,MAAO,CAACuB,KAAK,QAAQ8I,MAAM,UAAU,IAAE,gCAG1C,IAEF,4BACE,gBAAKrK,UAAU,aAAY,UACzB,iBAAKA,UAAU,YAAW,UACvBuE,GAAYhI,KAAI,SAACiO,GAAI,OACpB,gBAAKxK,UAAU,WAAU,UACvB,wBAAKwK,EAAKc,eACN,KAER,gBAAKtL,UAAU,WAAU,UACvB,wBAAI,sBAEN,gBAAKA,UAAU,qBAGnB,SAACoT,EAAA,EAAiB,CAChBxC,OAAQA,GACRyC,kBArQgB,CAAC,WAAY,OAAQ,aAAc,qBAuQrD,iBAAKrT,UAAU,wBAAuB,WACpC,iBAAKA,UAAU,2BAA0B,WACvC,wBAAI,oBACJ,gBACE4B,QAAS,WACP8N,IAAYpO,GAERuO,GADJvO,EACoBqO,EAAAA,IACAyC,EAAAA,IACtB,EAAE,UAEF,0BAAOxC,WAIX,UAAC,KAAS,CAAC5P,UAAU,oBAAoBsB,SAAUA,EAAQ,WACzD,iBAAKtB,UAAU,sBAAsBhE,GAAG,QAAO,WAC7C,kBAAOiR,QAAQ,aAAY,SAAC,kBAC5B,mBAAOA,QAAQ,YAAW,WACxB,kBACEvL,KAAK,OACL8B,KAAK,QACLxH,GAAG,QACHuP,SAAU,SAAC7H,GACT,MAAsBA,EAAEmH,OAAZtF,GAAF,EAAFvJ,GAAS,EAALuJ,OACZvC,IAAY,SAACa,GAAI,yBACZA,GAAI,cACN,QAAmB,IAAT0B,EAAc,KAAOA,GAAK,GAEzC,IACC,WAGP,iBAAKvF,UAAU,sBAAsBhE,GAAG,yBAAwB,WAC9D,kBAAOiR,QAAQ,aAAY,SAAC,WAC5B,oBACEjN,UAAU,IACVhE,GAAG,yBACHwH,KAAK,yBACL+H,SAAU,SAAC7H,GAAC,OAAKkH,GAAalH,EAAE,EAAC,WAEjC,mBAAQ6B,MAAM,OAAM,SAAC,uBACpBsO,GAAOtX,KAAI,SAAC0P,GAAI,OACf,oBAAQ1G,MAAO0G,EAAKjQ,GAAG,UAAC,IAAEiQ,EAAKuJ,YAAmB,WAIxD,iBACExV,UAAU,sBACVhE,GAAG,kCAAiC,WAEpC,kBAAOiR,QAAQ,aAAY,SAAC,oBAC5B,oBACEjN,UAAU,IACVhE,GAAG,kCACHwH,KAAK,kCACL+H,SAAU,SAAC7H,GAAC,OAAKkH,GAAalH,EAAE,EAAC,WAEjC,mBAAQ6B,MAAM,OAAM,SAAC,uBACpB4O,GAAc5X,KAAI,SAAC0P,GAAI,OACtB,oBAAQ1G,MAAO0G,EAAKjQ,GAAG,UAAC,IAAEiQ,EAAKuJ,YAAmB,WAIxD,iBAAKxV,UAAU,sBAAsBhE,GAAG,cAAa,WACnD,kBAAOiR,QAAQ,aAAY,SAAC,cAC5B,oBACEjN,UAAU,GACVhE,GAAG,cACHwH,KAAK,WACL+H,SAAU,SAAC7H,GAAC,OAAKkH,GAAalH,EAAE,EAAC,WAEjC,mBAAQ6B,MAAM,OAAM,SAAC,uBACpBwO,GAASxX,KAAI,SAAC0P,GAAI,OACjB,oBAAQ1G,MAAO0G,EAAKjQ,GAAG,UAAC,IAAEiQ,EAAKC,YAAmB,WAIxD,iBAAKlM,UAAU,sBAAsBhE,GAAG,cAAa,WACnD,kBAAOiR,QAAQ,aAAY,SAAC,cAC5B,oBACEjN,UAAU,IACVhE,GAAG,cACHwH,KAAK,WACL+H,SAAU,SAAC7H,GAAC,OAAKkH,GAAalH,EAAE,EAAC,WAEjC,mBAAQ6B,MAAM,OAAM,SAAC,uBACpB0O,GAAS1X,KAAI,SAAC0P,GAAI,OACjB,oBAAQ1G,MAAO0G,EAAKjQ,GAAG,UAAC,IAAEiQ,EAAKC,YAAmB,WAIxD,iBAAKlM,UAAU,sBAAsBhE,GAAG,YAAW,WACjD,kBAAOiR,QAAQ,aAAY,SAAC,YAC5B,oBACEjN,UAAU,IACVhE,GAAG,SACHwH,KAAK,SACL+H,SAAU,SAAC7H,GAAC,OAAKkH,GAAalH,EAAE,EAAC,WAEjC,mBAAQ6B,MAAM,OAAM,SAAC,uBACpBP,GAAOzI,KAAI,SAAC0P,GAAI,OACf,oBAAQ1G,MAAO0G,EAAKjQ,GAAG,UAAC,IAAEiQ,EAAKC,YAAmB,WAIxD,iBAAKlM,UAAU,2BAA2BhE,GAAG,cAAa,WACxD,kBAAOiR,QAAQ,aAAY,SAAC,iBAC5B,gBAAKjN,UAAU,yBAAwB,UACrC,SAAC,EAAAqD,wBAAuB,CACtBC,MAAO+Q,GACP3S,KAAK,OACL8B,KAAK,cACLxH,GAAG,cACHqY,UAAWA,GACXa,sBAAuBA,GACvB3J,SAAU,SAAC7H,GAAC,OAAKkH,GAAalH,EAAE,EAChC+R,YAAa,CAAEjD,KAAM,CAAC,KAAM,UAAW,mBACvCkD,oBAAoB,UACpBL,aAAcA,GACdzR,QAAS+T,GACTlU,SAAU,SAACC,GACTV,IAAY,SAACW,GAAS,yBACjBA,GAAS,IACZgR,YAAqB,IAARjR,EAAE1H,GAAW,KAAO0H,EAAE1H,IAAE,GAEzC,EACA8H,UAAU,UAIhB,iBAAK9D,UAAU,2BAA2BhE,GAAG,cAAa,WACxD,kBAAOiR,QAAQ,aAAY,SAAC,iBAC5B,gBAAKjN,UAAU,yBAAwB,UACrC,SAAC,EAAAqD,wBAAuB,CACtBC,MAAO+Q,GACP3S,KAAK,OACL8B,KAAK,cACLxH,GAAG,cACHgE,UAAU,MACVqU,UAAWA,GACXzQ,QAAS+T,GAETzC,sBAAuBA,GACvBO,YAAa,CAAEjD,KAAM,CAAC,KAAM,UAAW,mBACvCkD,oBAAoB,UACpBL,aAAcA,GAGd5R,SAAU,SAACC,GACTV,IAAY,SAACa,GAAI,yBACZA,GAAI,IACPoR,YAAqB,IAARvR,EAAE1H,GAAW,KAAO0H,EAAE1H,IAAE,IAEvCmH,QAAQC,IAAIM,EAAE1H,GAChB,EACA8H,UAAU,UAIhB,iBAAK9D,UAAU,2BAA2BhE,GAAG,cAAa,WACxD,kBAAOiR,QAAQ,aAAY,SAAC,wBAC5B,kBAAOA,QAAQ,aAAY,UACzB,kBACEvL,KAAK,OACL8B,KAAK,cACLxH,GAAG,cACHuP,SAAU,SAAC7H,GACT,MAAsBA,EAAEmH,OAAZtF,GAAF,EAAFvJ,GAAS,EAALuJ,OACZvC,IAAY,SAACa,GAAI,yBACZA,GAAI,cACN,cAAyB,IAAT0B,EAAc,KAAOA,GAAK,GAE/C,UAIN,iBAAKvF,UAAU,2BAA2BhE,GAAG,aAAY,WACvD,kBAAOiR,QAAQ,aAAY,SAAC,gBAC5B,kBAAOjN,UAAU,aAAY,UAC3B,kBACE0B,KAAK,OACL8B,KAAK,aACLxH,GAAG,aACHuP,SAAU,SAAC7H,GACT,MAAsBA,EAAEmH,OAAZtF,GAAF,EAAFvJ,GAAS,EAALuJ,OACZvC,IAAY,SAACa,GAAI,yBACZA,GAAI,cACN,aAAwB,IAAT0B,EAAc,KAAOA,GAAK,GAE9C,UAIN,gBAAKvF,UAAU,2EAA0E,UACvF,oBACE0B,KAAK,SACL1B,UAAU,kBACV2B,MAAM,SACN4D,MAAO2J,EACPtN,QAAS,kBA/UrBuB,QAAQC,IAAIsD,SACZvC,IA8UwC,EAAC,WAE7B,SAAC,MAAQ,IAAG,UAAQ,SAGvBmL,GAAS,SAACiE,EAAA,EAAM,CAACC,YAtqBR,WAClBtC,GAAgBzF,SAAWyF,GAAgBzF,QAAQgI,QACnDlE,GAAU,EACZ,IAmqB2D,UAGrD,gBAAKvP,UAAU,wBAAuB,UACpC,gBAAKA,UAAU,GAAE,UACf,gBAAKA,UAAU,uBAAsB,UACnC,SAACgY,EAAA,EAA+B,CAC9B3a,KAAM+R,EACNqB,YAAaA,GACbE,kBAAmBA,GACnB4B,eAAgBA,GAChBhC,WAAYA,GACZjD,KA3qBH,GA4qBGkD,cAAeA,GACfwC,WAAYA,GACZU,SAAS,8BAcnB,iBAAK1T,UAAU,0DAAyD,UACrEmD,QAAQC,IAAI4N,KAEa,KAAf,OAAVA,SAAU,IAAVA,QAAU,EAAVA,GAAYpC,WACX,oBACElN,KAAK,SACL1B,UAAU,kBACV4B,QAAS,WACPvB,GAAa,GACb4P,GAAQ,MACV,EAAE,WAEF,SAAC,MAAM,IAAG,SAIZ,MAQH7P,GACC,SAAC,EAAmB,CAClBA,UAAWA,EACX6D,OAAQA,EACR5D,aAAcA,EACd6D,cAAeA,GACfC,aAAcA,GACdH,WAAYA,GACZtC,KAAMA,GACNuN,QAASA,GACT3K,WAAYA,GACZD,OAAQA,GACR+K,UAAWA,EACXhL,UAAWA,GACXL,oBAAqBA,GACrBzG,UAAWA,EACXiH,YAAaA,KAGf,KAIR,EC/CA,MA7vBA,SAAmB7J,GACf,IAAQ0F,EAAqJ1F,EAArJ0F,UAAWC,EAA0I3F,EAA1I2F,aAAc/C,EAA4H5C,EAA5H4C,UAAWoE,EAAiHhH,EAAjHgH,KAA6BsC,GAAoFtJ,EAA3GuJ,OAA2GvJ,EAAnGwJ,cAAmGxJ,EAApFsJ,YAAYG,EAAwEzJ,EAAxEyJ,aAAsBC,GAAkD1J,EAA1D2J,OAA0D3J,EAAlD0J,WAAWE,EAAuC5J,EAAvC4J,WAAuBC,GAAgB7J,EAA3B0U,UAA2B1U,EAAhB6J,aAGvIzD,EAAeC,aAAaC,QAAQ,SACpCwD,EAAiBzD,aAAaC,QAAQ,WAGtCC,EAAUC,EAAAA,EAAAA,QAChB,GAA0BC,EAAAA,EAAAA,UAAS,IAAG,eAA/BoE,EAAK,KAAEC,EAAQ,KACtB,GAA6CrE,EAAAA,EAAAA,UAAS,MAAK,eAApD8W,EAAiB,KAAEC,EAAe,KACzC,GAA6C/W,EAAAA,EAAAA,UAAS,MAAK,eAApDgX,EAAe,KAAEC,EAAiB,KACzC,GAAgCjX,EAAAA,EAAAA,UAAS,IAAG,eAArCkX,EAAQ,KAAEC,EAAW,KAC5B,GAAoCnX,EAAAA,EAAAA,UAAS,IAAG,eAAzCoX,EAAU,KAAEC,EAAa,KAChC,GAAoCrX,EAAAA,EAAAA,UAAS,IAAG,eAAzCsX,EAAU,KAAEC,EAAa,KAChC,GAA8DvX,EAAAA,EAAAA,UAAS,IAAG,eAAnEwX,EAAuB,KAAEC,GAA0B,KAC1D,IAAoCzX,EAAAA,EAAAA,UAAS,IAAG,iBAAzC0X,GAAU,MAAEC,GAAa,MAChC,IAAgD3X,EAAAA,EAAAA,UAAS,KAAI,iBAApC4X,IAAF,MAAqB,OAE5C,IAAkD5X,EAAAA,EAAAA,WAAS,GAAM,iBAA1DwE,GAAiB,MAAEC,GAAoB,MAC9C,IAAsCzE,EAAAA,EAAAA,UAAS,IAAG,iBAA3C6X,GAAW,MAAEC,GAAc,MAE5B5b,GAAO,CAAE,UAAaC,EAAW,kBAAqB,GAAI,YAAe,GAAI,kBAAqB,GAAI,WAAc,GAAI,YAAe,IAAK,UAAa,GAAI,gBAAmB,IAAK,cAAiBwD,EAAc,gBAAmB0D,EAAgB,YAAe,GAAI,gBAAmB,GAAI,gBAAmB,IAC1T,IAAgCrD,EAAAA,EAAAA,UAAS9D,IAAK,iBAAvCqJ,GAAQ,MAAE1D,GAAW,MAC5B,IAAwC7B,EAAAA,EAAAA,UAAS6C,GAAW,iBAArD2C,GAAY,MAAEC,GAAe,MACpC,IAAoCzF,EAAAA,EAAAA,YAAU,iBAA3BsE,IAAF,MAAe,OAEhC,IAAkCtE,EAAAA,EAAAA,UAAS,GAAE,iBAAtC+X,GAAS,MAAEC,GAAY,MAC9B,IAA8ChY,EAAAA,EAAAA,UAAS,GAAE,iBAAlDiY,GAAe,MAAEC,GAAkB,MACpC9V,IAAML,EAAAA,EAAAA,QAAO,IAEboW,IAAgBpW,EAAAA,EAAAA,QAAO,MACvBqW,IAAiBrW,EAAAA,EAAAA,QAAO,MAG9B,IAAwB/B,EAAAA,EAAAA,UAAS,IAAG,iBAA7BrD,GAAI,MAAS,OACpBL,EAAAA,EAAAA,YAAU,WAEV,GAAG,CAACK,KAGJ,IAAMmM,GAAgB,CAClBC,QAAS,CACL,CAAC,CAAEC,OAAQ,EAAC,EAAO,EAAG,EAAG,EAAG,EAAG,EAAG,IAClC,CAAEE,MAAO,IACL,OAAQ,SAAU,YAAa,CAAE,KAAQ,WAAa,CAAE,KAAQ,UACpE,CAAE,OAAU,OAAS,CAAE,OAAU,SACjC,CAAE,OAAU,MAAQ,CAAE,OAAU,MAAQ,CAAE,MAAS,MAAQ,CAAE,MAAS,UAAY,CAAE,MAAS,SACzF,SACA,OAAQ,QACR,aAAc,YAG1B5M,EAAAA,EAAAA,YAAU,WACN+b,KACAC,KACAC,KACAC,KACAC,IACJ,GAAG,IAEH,IAAMhP,GAAe,SAAClH,GAClB,MAAsBA,EAAEmH,OAAhB7O,EAAE,EAAFA,GAAIuJ,EAAK,EAALA,MACZvC,IAAY,SAAAa,GAAI,yBAAUA,GAAI,cAAG7H,EAAKuJ,GAAK,IAC3CqB,IAAgB,SAAA/C,GAAI,yBAAUA,GAAI,cAAG7H,EAAKuJ,GAAK,GACnD,GAEA9H,EAAAA,EAAAA,YAAU,WACN,IAAIoc,EAAkB,KAClBC,EAAmB,KACvBrB,EAAWlc,KAAI,SAAAwd,GACPA,EAAK/d,IAAM0K,GAASsT,cACpBH,EAAkBE,EAAK7N,UAAU+N,MAAM,KAAK,GAEpD,IACAtB,EAAwBpc,KAAI,SAAA2d,GACpBA,EAAYle,IAAM0K,GAASyT,oBAC3BL,EAAmBI,EAAYhO,UAAU+N,MAAM,KAAK,GAE5D,IACuB,MAAnBJ,GAA+C,MAApBC,GAC3BX,GAAapX,SAAS8X,GAAmB9X,SAAS+X,GAE1D,GAAG,CAACpT,MAEJjJ,EAAAA,EAAAA,YAAU,WAEM,OAARiE,GAEA2X,GAAmB1S,GAAayT,WAExC,GAAG,CAACzT,MAEJlJ,EAAAA,EAAAA,YAAU,WACV,GAAG,CAACkJ,GAAauS,YAIjB,IAAMM,GAAc,WAEhBxX,IAAM,CACFC,OAAQ,MACRC,IAAKjB,EAAO,iCAEXoB,MAAK,SAAAgH,GACF,IAAIgP,EAAWhP,EAAIhM,KACnBib,EAAYD,EAChB,GACR,EAGMoB,GAAgB,WAElBzX,IAAM,CACFC,OAAQ,MACRC,IAAKjB,EAAO,mCAEXoB,MAAK,SAAAgH,GACF,IAAIkP,EAAalP,EAAIhM,KACrBmb,EAAcD,EAClB,GACR,EAKMmB,GAAgB,WAElB1X,IAAM,CACFC,OAAQ,MACRC,IAAKjB,EAAO,mCAEXoB,MAAK,SAAAgH,GACF,IAAIoP,EAAapP,EAAIhM,KACrBqb,EAAcD,EAClB,GACR,EAEMkB,GAA6B,WAE/B3X,IAAM,CACFC,OAAQ,MACRC,IAAKjB,EAAO,gDAEXoB,MAAK,SAAAgH,GACF,IAAIsP,EAA0BtP,EAAIhM,KAClCub,GAA2BD,EAC/B,GACR,EAEMiB,GAAgB,WAElB5X,IAAM,CACFC,OAAQ,MACRC,IAAKjB,EAAO,mCAEXoB,MAAK,SAAAgH,GACF,IAAIwP,EAAaxP,EAAIhM,KACrByb,GAAcD,EAClB,GACR,EAEM9V,GAAU,WAEZf,IAAM,CACFC,OAAQ,MACRC,IAAKjB,EAAO,qCACboB,MAAK,SAAUC,GACd,IAAI+G,EAAM/G,EAASjF,KACnB4b,GAAe5P,EACnB,GACJ,EA4HA,OA1HA5L,EAAAA,EAAAA,YAAU,WACNsF,IACJ,GAAG,KAyHC,gBAAK/C,UAAU,aAAY,UAGvB,UAAC,KAAM,CAACsB,QAASlB,EAAWmB,KAAK,KAAKvB,UAAU,KAAKwB,QAAS,kBAAMnB,GAAa,EAAM,EAAEoB,SAAU,SAAS,WACxG,SAAC,KAAY,CAACzB,UAAU,GAAGnF,MAAO,CAAEuQ,OAAQ,cAAe,UACvD,SAAC,KAAW,UACC,OAAR1J,GAAgB,iBAAM1B,UAAU,GAAE,SAAE,cAGjC,iBAAMA,UAAU,GAAE,SAAE,qBAGhC,UAAC,KAAU,YAGP,iBAAKA,UAAU,oBAAmB,UAC7B2F,IAAoB,iBAAK3F,UAAU,kBAAiB,WACjD,SAAC,MAAa,CAACuB,KAAK,WACpB,0BAAM,6DAAqE,GAC9EgD,EAAYhI,KAAI,SAACiO,GAAI,OAClB,gBAAKxK,UAAU,gBAAe,UAC1B,iBAAKA,UAAU,iBAAiBhE,GAAG,UAAS,WACxC,kBAAOgE,UAAU,QAAO,SAAC,aACzB,kBAAOA,UAAU,YAAW,SAAC,OAC7B,kBAAOA,UAAU,QAAO,UACpB,kBAAO0B,KAAK,OAAO1B,UAAU,eAAewD,KAAK,aAAaxH,GAAIsB,EAAW+N,UAAU,EAAM9F,MAAOiF,EAAKc,YACrGC,SAAU,SAAC7H,GAAC,OAAKkH,GAAalH,EAAE,EAAE7I,MAAO,CAAEuQ,OAAQ,uBAG7D,KACV,gBAAKpL,UAAU,iBAAgB,UAC3B,iBAAKA,UAAU,iBAAiBhE,GAAG,OAAM,WACrC,mBAAOgE,UAAU,QAAO,UAAG,iBAAe,iBAAM2V,MAAM,WAAU,SAAC,WACjE,kBAAO3V,UAAU,YAAW,SAAC,OAC7B,gBAAKA,UAAU,kBACXuD,IAAK,SAACiI,GACFjI,GAAIkI,QAAQ,GAAKD,CACrB,EAAE,SACO,OAAR9J,GACG,kBACI1B,UAAS,4BAAuB0G,GAAS2T,WAAa3T,GAAS2T,UAAUxM,QAAU,GAAK,QAAU,IAClGnM,KAAK,OACL8B,KAAK,YACLxH,GAAG,YACH0P,YAAY,oBACZC,UAAW,GACXpG,MAAOmB,GAAS2T,WAAa,GAC7BzO,UAAW,SAAC1L,GACW,UAAfA,EAAM2L,MAAqBnF,GAAS2T,WAAWna,EAAMgL,gBAC7D,EACAK,SAAU,SAAC7H,GAAC,OAAKkH,GAAalH,EAAE,KAKpC,kBACI1D,UAAS,eAAU0G,GAAS2T,WAAa3T,GAAS2T,UAAUxM,QAAU,GAAK,QAAU,IACrFnM,KAAK,OACL8B,KAAK,YACLxH,GAAG,YACH0P,YAAY,oBACZC,UAAW,GACXC,UAAW,SAAC1L,GACW,UAAfA,EAAM2L,MAAqBnF,GAAS2T,WAAWna,EAAMgL,gBAC7D,EACAa,aAAwB,OAAV/H,QAAU,IAAVA,OAAU,EAAVA,EAAYqW,UAC1B9O,SAAU,SAAC7H,GAAC,OAAKkD,IAAgB,SAAA/C,GAAI,yBAAUA,GAAI,cAAG,YAAcH,EAAEmH,OAAOtF,OAAK,GAAI,YAK1G,gBAAKvF,UAAU,gBAAe,UAC1B,iBAAKA,UAAU,iBAAgB,WAC3B,mBAAOA,UAAU,QAAO,UAAE,iBAAe,iBAAMA,UAAU,2BAA0B,SAAC,WACpF,kBAAOA,UAAU,YAAW,SAAC,OAC7B,kBAAOA,UAAU,QAAO,SACX,OAAR0B,GACG,oBAAQ1B,UAAU,aAAawD,KAAK,YAAYxH,GAAG,YAAYuP,SAAU,SAAC7H,GAAC,OAAKkH,GAAalH,EAAE,EAC3FH,IAAK,SAACiI,GACFjI,GAAIkI,QAAQ,GAAKD,CACrB,EAAE,WACF,mBAAQjG,MAAM,GAAE,SAAC,sBAChB8S,EAAS9b,KAAI,SAAC0P,GAAI,OACf,oBAAQ1G,MAAO0G,EAAKjQ,GAAG,UAAC,IAAEiQ,EAAKC,YAAmB,QAC1D,oBAAQlM,UAAU,aAAawD,KAAK,YAAYxH,GAAG,YAC/CuP,SAAU,SAAC7H,GAAC,OAAKkD,IAAgB,SAAA/C,GAAI,yBAAUA,GAAI,cAAG,UAAYH,EAAEmH,OAAOtF,OAAK,GAAI,EAAC,WACrF,mBAAQA,MAAM,GAAE,SAAC,sBAChB8S,EAAS9b,KAAI,SAAC0P,GAAI,OACf,mBAAQ1G,MAAO0G,EAAKjQ,GAAImQ,SAAUF,EAAKjQ,KAAgB,OAAVgI,QAAU,IAAVA,OAAU,EAAVA,EAAYsW,SAAuB,SAAErO,EAAKC,WAAmB,eAKlI,gBAAKlM,UAAU,cAAa,UACxB,iBAAKA,UAAU,iBAAgB,WAC3B,mBAAOA,UAAU,WAAU,UAAE,mBAAiB,iBAAM2V,MAAM,WAAU,SAAC,UACrE,kBAAO3V,UAAU,YAAW,SAAC,OAC7B,kBAAOA,UAAU,SAAQ,SACZ,OAAR0B,GACG,oBAAQ1B,UAAU,aACdwD,KAAK,cAAcxH,GAAG,cAAcuP,SAAU,SAAC7H,GAAC,OAAKkH,GAAalH,EAAE,EACpEH,IAAK,SAACiI,GACFjI,GAAIkI,QAAQ,GAAKD,CACrB,EAAE,WACF,mBAAQjG,MAAM,GAAE,SAAC,sBAChBgT,EAAWhc,KAAI,SAAC0P,GAAI,OACjB,oBAAQ1G,MAAO0G,EAAKjQ,GAAG,UAAC,IAAEiQ,EAAKC,YAAmB,QAC1D,oBAAQlM,UAAU,aACdwD,KAAK,cAAcxH,GAAG,cAAcuP,SAAU,SAAC7H,GAAC,OAAKkD,IAAgB,SAAA/C,GAAI,yBAAUA,GAAI,cAAG,YAAcH,EAAEmH,OAAOtF,OAAK,GAAI,EAAC,WAC3H,mBAAQA,MAAM,GAAE,SAAC,sBAChBgT,EAAWhc,KAAI,SAAC0P,GAAI,OACjB,oBAAQ1G,MAAO0G,EAAKjQ,GAAImQ,SAAUF,EAAKjQ,KAAgB,OAAVgI,QAAU,IAAVA,OAAU,EAAVA,EAAYqI,WAAyB,UAAC,IAAEJ,EAAKC,YAAmB,eAKrI,gBAAKlM,UAAU,gBAAe,UAC1B,iBAAKA,UAAU,iBAAiBwD,KAAK,cAAcxH,GAAG,cAAa,WAC/D,mBAAOgE,UAAU,QAAO,UAAC,mBAAiB,iBAAM2V,MAAM,WAAU,SAAC,WACjE,kBAAO3V,UAAU,YAAW,SAAC,OAC7B,kBAAOA,UAAU,QAAO,SACX,OAAR0B,GACG,oBAAQ1B,UAAU,aAAawD,KAAK,cAAcxH,GAAG,cAAcuP,SAAU,SAAC7H,GAAC,OAAKkH,GAAalH,EAAE,EAC/FH,IAAK,SAACiI,GACFjI,GAAIkI,QAAQ,GAAKD,CACrB,EAAE,WACF,mBAAQjG,MAAM,GAAE,SAAC,sBAChBkT,EAAWlc,KAAI,SAAC0P,GAAI,OACjB,oBAAQ1G,MAAO0G,EAAKjQ,GAAG,UAAC,IAAEiQ,EAAKC,YAAmB,QAE1D,oBAAQlM,UAAU,aAAauD,IAAK+V,GAAe9V,KAAK,cAAcxH,GAAG,cAAcuP,SAAU,SAAC7H,GAM9F,IAJA,IAAI6W,EAAMjB,GAAc7N,QAAQ/M,SAE5B8b,EAAe,KAAK,cAIhBD,EAAIrM,GAAG3I,OAAS7B,EAAEmH,OAAOtF,QACzBiV,EAAeD,EAAIrM,GAAGuM,UAAUR,MAAM,KAAK,GAC3CrT,IAAgB,SAAA/C,GAAI,yBAAUA,GAAI,cAAG,cAAgB0W,EAAIrM,GAAGuM,WAAS,IAK7E,EATSvM,EAAI,EAAGA,EAAIqM,EAAI1M,OAAQK,IAAG,KAWnCtH,IAAgB,SAAA/C,GAAI,yBAAUA,GAAI,cAAG,YAAcH,EAAEmH,OAAOtF,OAAK,IACjEqB,IAAgB,SAAA/C,GAAI,yBAAUA,GAAI,cAAG,aAAiB8C,GAAkC,oBAAGsT,MAAM,KAAK,GAAKO,GAAY,GAC3H,EAAE,WACE,mBAAQjV,MAAM,GAAE,SAAC,sBAChBkT,EAAWlc,KAAI,SAAC0P,GAAI,OACjB,oBAAQ1G,MAAO0G,EAAKjQ,GAAImQ,SAAUF,EAAKjQ,KAAgB,OAAVgI,QAAU,IAAVA,OAAU,EAAVA,EAAY0W,WAAyB,UAAC,IAAEzO,EAAKC,YAAmB,eAKrI,gBAAKlM,UAAU,cAAa,UACxB,iBAAKA,UAAU,iBAAgB,WAC3B,mBAAOA,UAAU,QAAO,UAAC,iCAA+B,iBAAM2V,MAAM,WAAU,SAAC,UAC/E,kBAAO3V,UAAU,YAAW,SAAC,OAC7B,kBAAOA,UAAU,QAAO,SACX,OAAR0B,GACG,oBAAQ1B,UAAU,aAAawD,KAAK,qBAAqBxH,GAAG,oBAAoBuP,SAAU,SAAC7H,GAAC,OAAKkH,GAAalH,EAAE,EAC5GH,IAAK,SAACiI,GACFjI,GAAIkI,QAAQ,GAAKD,CACrB,EAAE,WACF,mBAAQjG,MAAM,GAAE,SAAC,sBAChBoT,EAAwBpc,KAAI,SAAC0P,GAAI,OAC9B,oBAAQ1G,MAAO0G,EAAKjQ,GAAG,UAAC,IAAEiQ,EAAKC,YAAmB,QAC1D,oBAAQlM,UAAU,aAAawD,KAAK,qBAAqBxH,GAAG,oBAExDuH,IAAKgW,GAELhO,SAAU,SAAC7H,GAEPkD,IAAgB,SAAA/C,GAAI,yBAAUA,GAAI,cAAG,oBAAsBH,EAAEmH,OAAOtF,OAAK,IAKzE,IAJA,IAAIgV,EAAMhB,GAAe9N,QAAQ/M,SAE7Bic,EAAc,KAAK,cAIfJ,EAAIrM,GAAG3I,OAAS7B,EAAEmH,OAAOtF,QACzBoV,EAAcJ,EAAIrM,GAAGuM,UAAUR,MAAM,KAAK,GAC1CrT,IAAgB,SAAA/C,GAAI,yBAAUA,GAAI,cAAG,sBAAwB0W,EAAIrM,GAAGuM,WAAS,IAKrF,EATSvM,EAAI,EAAGA,EAAIqM,EAAI1M,OAAQK,IAAG,KAWnCtH,IAAgB,SAAA/C,GAAI,yBAAUA,GAAI,cAAG,aAAiB8C,GAA0B,YAAGsT,MAAM,KAAK,GAAKU,GAAW,GAKlH,EAAE,WACF,mBAAQpV,MAAM,GAAE,SAAC,sBAChBoT,EAAwBpc,KAAI,SAAC0P,GAAI,OAC9B,oBAAQ1G,MAAO0G,EAAKjQ,GAAImQ,SAAUF,EAAKjQ,KAAgB,OAAVgI,QAAU,IAAVA,OAAU,EAAVA,EAAYmW,mBAAiC,UAAC,IAAElO,EAAKC,YAAmB,eAK7I,gBAAKlM,UAAU,gBAAe,UAC1B,iBAAKA,UAAU,iBAAgB,WAC3B,mBAAOA,UAAU,QAAO,UAAC,kBAAgB,iBAAM2V,MAAM,WAAU,SAAC,WAChE,kBAAO3V,UAAU,YAAW,SAAC,OAC7B,kBAAOA,UAAU,QAAO,UAEpB,kBAAO0B,KAAK,OAAO1B,UAAU,QAAQwD,KAAK,aAAaxH,GAAG,aAAauJ,MAAe,OAAR7D,EAAgBwX,GAAYE,GAAiB/N,UAAU,EAAMxQ,MAAO,CAAEuQ,OAAQ,yBAOxK,gBAAKpL,UAAU,WAAU,UACrB,iBAAKA,UAAU,iBAAgB,WAC3B,mBAAOA,UAAU,SAAQ,UAAC,mBAAiB,iBAAM2V,MAAM,WAAU,SAAC,WAClE,kBAAO3V,UAAU,YAAW,SAAC,OAC7B,kBAAOA,UAAU,SAAQ,SAEZ,OAAR0B,GACG,oBAAQ1B,UAAU,aAAawD,KAAK,cAAcxH,GAAG,cAAcuP,SAAU,SAAC7H,GAAC,OAAKkH,GAAalH,EAAE,EAC/FH,IAAK,SAACiI,GACFjI,GAAIkI,QAAQ,GAAKD,CACrB,EAAE,WACF,mBAAQjG,MAAM,GAAE,SAAC,sBAChBsT,GAAWtc,KAAI,SAAC0P,GAAI,OACjB,oBAAQ1G,MAAO0G,EAAKjQ,GAAG,UAAC,IAAEiQ,EAAKC,YAAmB,QAC1D,oBAAQlM,UAAU,kBAAkBwD,KAAK,cAAcxH,GAAG,cAAcuP,SAAU,SAAC7H,GAAC,OAAKkD,IAAgB,SAAA/C,GAAI,yBAAUA,GAAI,cAAG,YAAcH,EAAEmH,OAAOtF,OAAK,GAAI,EAAC,WAC3J,mBAAQA,MAAM,GAAE,SAAC,sBAChBsT,GAAWtc,KAAI,SAAC0P,GAAI,OACjB,oBAAQ1G,MAAO0G,EAAKjQ,GAAImQ,SAAUF,EAAKjQ,KAAgB,OAAVgI,QAAU,IAAVA,OAAU,EAAVA,EAAYmH,WAAyB,UAAC,IAAEc,EAAKC,YAAmB,eAMrI,gBAAKlM,UAAU,iBAAgB,UAC3B,iBAAKA,UAAU,iBAAgB,WAC3B,kBAAOA,UAAU,QAAO,SAAC,iBACzB,kBAAOA,UAAU,YAAW,SAAC,OAC7B,kBAAOA,UAAU,WAAU,SACd,OAAR0B,GAAgB,iCACb,gBAAK1B,UAAU,yBAAwB,UACnC,SAAC,EAAAqD,wBAAuB,CACpBC,MAAO0V,GACPtX,KAAK,OACL8B,KAAK,cACLxH,GAAG,cACHgd,YAAaA,GACbjW,QAASA,GACTU,SAAU,SAACC,GAAQV,IAAY,SAACW,GAAS,yBAAWA,GAAS,IAAE,YAAeD,EAAE1H,IAAE,GAAM,EACxF8H,UAAU,OAKlB,0BAAQhG,GAAK0F,WACX,iCAEE,gBAAKxD,UAAU,yBAAwB,UACnC,SAAC,EAAAqD,wBAAuB,CACpBC,MAAO0V,GACPtX,KAAK,OACL8B,KAAK,cACLuJ,kBAA+B,OAAZpG,SAAY,IAAZA,QAAY,EAAZA,GAAcgO,YACjC3Y,GAAG,cACHgd,YAAaA,GACbjW,QAASA,GACTU,SAAU,SAACC,GAAQkD,IAAgB,SAAC/C,GAAI,yBAAWA,GAAI,cAAG,WAAaH,EAAE1H,IAAE,IAAMyJ,GAAc/B,EAAE1H,GAAK,EACtGuP,SAAU,SAAC7H,GAAQkD,IAAgB,SAAA/C,GAAI,yBAAUA,GAAI,cAAG,WAAaH,EAAE1H,IAAE,GAAK,EAC9E8H,UAAU,OAIlB,0BAAQhG,GAAK0F,kBAKjC,gBAAKxD,UAAU,WAAU,UACrB,iBAAKA,UAAU,iBAAgB,WAC3B,kBAAOA,UAAU,SAAQ,SAAC,mBAC1B,kBAAOA,UAAU,YAAW,SAAC,OAC7B,kBAAOA,UAAU,QAAO,SAEX,OAAR0B,GAAgB,iCACb,iBAAK1B,UAAU,QAAQuL,SAAU,SAAC7H,GAAQqV,GAAoB,KAAM/V,IAAY,SAAAa,GAAI,yBAAUA,GAAI,cAAG,kBAAoB,KAAG,GAAK,EAAE,WAC/H,kBAAO7D,UAAU,mBAAmBiN,QAAQ,MAAMvL,KAAK,QAAQ6D,MAAM,IAAI/B,KAAK,kBAAkBxH,GAAG,kBAC/FkR,QAAwC,KAA/BxG,GAA0B,kBACrC,QACF,iBAAM1G,UAAU,mBAAkB,SAAE,QAAU,QAClD,iBAAKA,UAAU,QAAQuL,SAAU,SAAC7H,GAAQqV,GAAoB,KAAM/V,IAAY,SAAAa,GAAI,yBAAUA,GAAI,cAAG,kBAAoB,KAAG,GAAK,EAAE,WAC/H,kBAAO7D,UAAU,mBAAmBiN,QAAQ,KAAKvL,KAAK,QAAQ8B,KAAK,kBAAkBxH,GAAG,kBAAkBuJ,MAAM,IAC5G2H,QAAwC,KAA/BxG,GAA0B,kBAErC,QACF,iBAAM1G,UAAU,mBAAkB,SAAC,cAIvC,iCACI,iBAAKA,UAAU,SACXuL,SAAU,SAAC7H,GAAQkD,IAAgB,SAAA/C,GAAI,yBAAUA,GAAI,cAAG,kBAAoB,KAAG,GAAK,EAAE,WACtF,kBAAO7D,UAAU,mBAAmBiN,QAAQ,MAAMvL,KAAK,QAAQ6D,MAAM,IAAI/B,KAAK,kBAAkBxH,GAAG,kBAC/FkR,QAA4C,KAAnCvG,GAA8B,kBACzC,QACF,0BAAM,QAAU,QACpB,iBAAK3G,UAAU,SAASuL,SAAU,SAAC7H,GAAQkD,IAAgB,SAAA/C,GAAI,yBAAUA,GAAI,cAAG,kBAAoB,KAAG,GAAK,EAAE,WAC1G,kBAAO7D,UAAU,mBAAmBiN,QAAQ,KAAKvL,KAAK,QAAQ8B,KAAK,kBAAkBxH,GAAG,kBAAkBuJ,MAAM,IAC5G2H,QAA4C,KAAnCvG,GAA8B,kBACzC,QACF,0BAAM,qBAQ9B,gBAAK3G,UAAU,gBAAe,UAE1B,iBAAKA,UAAU,iBAAiB4a,UAAU,QAAQ5e,GAAG,oBAAmB,WACpE,kBAAOgE,UAAU,QAAO,SAAC,kBACzB,kBAAOA,UAAU,YAAW,SAAC,OAC7B,kBAAOA,UAAU,WAAU,SACd,OAAR0B,GACG,SAAC,IAAU,CACP8B,KAAK,oBACLxH,GAAG,oBACHmQ,SAAU8L,EACV3L,WAAW,cACXC,mBAAiB,EACjBC,kBAAgB,EAChBC,aAAa,SAEblB,SAAU,SAAC7H,GAAQV,IAAY,SAAAa,GAAI,yBAAUA,GAAI,cAAG,oBAAuBsE,IAAOzE,GAAG2E,OAAO,eAAa,IAAO6P,EAAgBxU,EAAI,KAExI,SAAC,IAAU,CAACF,KAAK,oBACbxH,GAAG,oBAEHmQ,cAA+C3F,GAArCG,GAAgC,kBAAyB,GAAKwB,IAAOxB,GAAgC,mBAAGiG,GAClHN,WAAW,cACXC,mBAAiB,EACjBC,kBAAgB,EAChBC,aAAa,SAEblB,SAAU,SAAC7H,GAAQkD,IAAgB,SAAA/C,GAAI,yBAAUA,GAAI,cAAG,oBAAuBsE,IAAOzE,GAAG2E,OAAO,eAAa,IAAO6P,EAAgBxU,EAAI,YAI5J,gBAAK1D,UAAU,WAAWhE,GAAG,kBAAiB,UAC1C,iBAAKgE,UAAU,iBAAgB,WAC3B,kBAAOA,UAAU,QAAO,SAAC,gBACzB,kBAAOA,UAAU,YAAW,SAAC,OAC7B,kBAAOA,UAAU,SAAQ,UACrB,gBAAKA,UAAU,gBAAe,SAEjB,OAAR0B,GAAgB,kBAAOA,KAAK,OAAO1B,UAAU,eAAewD,KAAK,kBAAkBxH,GAAG,kBAAkBmR,UAAQ,EAACpB,aAAcvH,EAAgB3J,MAAO,CAAEuQ,OAAQ,eAAiBC,UAAU,KACtL,kBAAO3J,KAAK,OAAO8B,KAAK,kBAAkBxH,GAAG,kBAAkBmR,UAAQ,EAACpB,aAAcvH,EAAgB3J,MAAO,CAAEuQ,OAAQ,eAAiBC,UAAU,iBAO5K,gBAAKrL,UAAU,YAAW,UACtB,gBAAKA,UAAU,gBAAe,UAC1B,gBAAKA,UAAU,iBAAiBhE,GAAG,mBAAkB,UACjD,mBAAOgE,UAAU,eAAc,UAAC,wBAAsB,iBAAM2V,MAAM,kBAAiB,SAAC,iBAIhG,iBAAK3V,UAAU,4BAA4BuD,IAAK,SAACiI,GAC7CjI,GAAIkI,QAAQ,GAAKD,CACrB,EAAE,UAAE,IAAU,OAAR9J,GACF,gBAAK1B,UAAU,GAAE,UACb,SAAC,IAAU,CACPA,UAAU,QACVvD,MAAM,OACN8I,MAAOA,EACP/B,KAAK,cACLxH,GAAG,cACHuP,SAAU,SAAC7H,GAAQ8B,EAAS9B,GAAIV,IAAY,SAAAa,GAAI,yBAAUA,GAAI,cAAG,cAAgB0B,GAAK,GAAK,EAC3F8H,QAASpD,QAER,gCAAE,KAAC,SAAC,IAAU,CACnBjK,UAAU,QACVvD,MAAM,OACNsP,aAAwB,OAAV/H,QAAU,IAAVA,OAAU,EAAVA,EAAYqC,YAC1B7C,KAAK,cACLxH,GAAG,cACHuP,SAAU,SAAC7H,GAAQ8B,EAAS9B,GAAIkD,IAAgB,SAAA/C,GAAI,yBAAUA,GAAI,cAAG,cAAgB0B,GAAK,GAAM,EAChG8H,QAASpD,YAGjB,gBAAKjK,UAAU,YAAW,UACtB,gBAAKA,UAAU,WAAWhE,GAAG,kBAAiB,UAC1C,kBAAOgE,UAAU,YAAW,SAAC,yBAGrC,iBAAKA,UAAU,eAAc,UAChB,OAAR0B,GACG,qBAAUiK,UAAW,IACjB2B,KAAK,IAAIC,KAAM,IACfvR,GAAG,kBACHnB,MAAO,CAAEggB,QAAS,OAClBnP,YAAY,qBACZH,SAAU,SAAC7H,GAAC,OAAKkH,GAAalH,EAAE,KACpC,qBAAUiI,UAAW,IACjB2B,KAAK,IACLC,KAAM,IACNvR,GAAG,kBACHnB,MAAO,CAAEggB,QAAS,OAClBnP,YAAY,qBACZK,aAAwB,OAAV/H,QAAU,IAAVA,OAAU,EAAVA,EAAY8W,gBAC1BvP,SAAU,SAAC7H,GAAC,OAAKkH,GAAalH,EAAE,IAAK,QACjD,gBAAK1D,UAAU,kDAAiD,UAC5D,gBAAKA,UAAU,WAAWnF,MAAO,CAAEE,OAAQ,aAI/C,iBAAKiF,UAAU,YAAW,WAAC,gBAAKA,UAAU,QAAQhE,GAAG,kBAAkBnB,MAAO,CAAEE,OAAQ,UACpF,iBAAKiF,UAAU,WAAWhE,GAAG,kBAAiB,WAC1C,kBAAOgE,UAAU,cAAa,SAAC,oBACtB,OAAR0B,GACG,SAAC,IAAU,CACP8B,KAAK,kBACLxH,GAAG,kBACHmQ,SAAUgM,EACV7L,WAAW,cACXC,mBAAiB,EACjBC,kBAAgB,EAChBC,aAAa,SAEblB,SAAU,SAAC7H,GAAQV,IAAY,SAAAa,GAAI,yBAAUA,GAAI,cAAG,kBAAqBsE,IAAOzE,GAAG2E,OAAO,eAAa,IAAO+P,EAAkB1U,EAAI,KACxI,SAAC,IAAU,CAACF,KAAK,kBACbxH,GAAG,kBACHmQ,cAA6C3F,GAAnCG,GAA8B,gBAAyB,GAAKwB,IAAOxB,GAA8B,iBAAGiG,GAC9GN,WAAW,cACXC,mBAAiB,EACjBC,kBAAgB,EAChBC,aAAa,SAEblB,SAAU,SAAC7H,GAAQkD,IAAgB,SAAA/C,GAAI,yBAAUA,GAAI,cAAG,kBAAqBsE,IAAOzE,GAAG2E,OAAO,eAAa,IAAO+P,EAAkB1U,EAAI,WAIxJ,mBAEA,gBAAK1D,UAAU,0DAAyD,SAE3D,OAAR0B,GAAgB,oBAAQA,KAAK,SAAS1B,UAAU,kBAAkB4B,QA9jBhE,WAGnB,IAFA,IAAIqM,EAAUN,SAASC,uBAAuB,SAErCM,EAAI,EAAGA,EAAID,EAAQJ,OAAQK,IACR,IAApBD,EAAQC,GAAG3I,OAAmC,QAApB0I,EAAQC,GAAG3I,OAAuC,OAApB0I,EAAQC,GAAG3I,YAAsCiB,GAApByH,EAAQC,GAAG3I,OAChG0I,EAAQC,GAAGH,UAAUC,IAAI,eACzBpI,IAAqB,KAGrBqI,EAAQC,GAAGH,UAAUI,OAAO,eAE5BvI,IAAqB,IAG7B,IAAIpC,EAAOkD,GAAS2T,UAChBU,EAAQrU,GAAS0T,WACjBrU,EAASW,GAASsU,YAClBC,EAAWvU,GAASwU,UACpBzC,EAAa/R,GAASsT,YACtBmB,EAAYzU,GAASyT,kBACrB9D,EAAe3P,GAASL,YAExBrH,OAAOC,OAAO,CAAEuE,KAAAA,EAAMyX,SAAAA,EAAUlV,OAAAA,EAAQgV,MAAAA,EAAOtC,WAAAA,EAAY0C,UAAAA,EAAW9E,aAAAA,IAAgBjI,SAAS,KAC/FxI,IAAqB,IAGzBA,IAAqB,GAErBc,GAAS0T,WAAalB,GAEtBlX,IAAM,CACFC,OAAQ,OACRC,IACIjB,EAAO,uCAEX5D,KAAMqJ,KACPrE,MAAK,SAAAI,GACJpC,GAAa,GACb8D,IACAyB,IAAqB,GACrBxB,GAAU,GACVzB,YAAW,WACPyB,GAAU,EACd,GAAG,IACP,IAEJ,EAghB+G,WAAE,SAAC,MAAM,IAAG,YACnG,oBAAQ1C,KAAK,SAAS1B,UAAU,kBAAkB4B,QA9gBlD,WAIpB,IAHA,IAAIqM,EAAUN,SAASC,uBAAuB,SAGrCM,EAAI,EAAGA,EAAID,EAAQJ,OAAQK,IACR,IAApBD,EAAQC,GAAG3I,OAAmC,QAApB0I,EAAQC,GAAG3I,OAAuC,OAApB0I,EAAQC,GAAG3I,YAAsCiB,GAApByH,EAAQC,GAAG3I,OAChG0I,EAAQC,GAAGH,UAAUC,IAAI,eACzBpI,IAAqB,KAGrBqI,EAAQC,GAAGH,UAAUI,OAAO,eAE5BvI,IAAqB,IAI7B,IAAIpC,EAAOmD,GAAa0T,UACpBtU,EAASY,GAAa0F,UACtBrH,EAAS2B,GAAawE,UACtB8P,EAAWtU,GAAa2T,QACxB7B,EAAa9R,GAAa+T,UAC1BS,EAAYxU,GAAawT,kBACzB9D,EAAe1P,GAAaN,YAC5B+U,EAAazU,GAAayT,WAE1Bpb,OAAOC,OAAO,CAAEuE,KAAAA,EAAMuC,OAAAA,EAAQf,OAAAA,EAAQoW,WAAAA,EAAYH,SAAAA,EAAUxC,WAAAA,EAAY0C,UAAAA,EAAW9E,aAAAA,IAAgBjI,SAAS,IAC5GxI,IAAqB,IAIzBA,IAAqB,GACrB5D,IAAM,CACFC,OAAQ,OACRC,IACIjB,EAAO,uCAEX5D,KAAM,CACF,GAAMsJ,GAAa3K,GACnB,UAAasB,EACb,YAAeqJ,GAAa8H,SAC5B,YAAe9H,GAAa+T,UAC5B,UAAa/T,GAAa0T,UAC1B,YAAe1T,GAAa0F,UAC5B,YAAe1F,GAAawE,UAC5B,UAAaxE,GAAa2T,QAC1B,YAA4C,KAA7B3T,GAAaN,YAAqBd,EAAQoB,GAAaN,YACtE,iBAAqD,KAAtB,OAAZM,SAAY,IAAZA,QAAY,EAAZA,GAAc0U,iBAA2B,KAAwC,KAAtB,OAAZ1U,SAAY,IAAZA,QAAY,EAAZA,GAAc0U,iBAA4B,IAAkB,OAAZ1U,SAAY,IAAZA,QAAY,EAAZA,GAAc0U,gBAChI,cAAiBva,EACjB,gBAAmB0D,EACnB,gBAAmBmC,GAAawR,gBAChC,gBAAmBxR,GAAamU,gBAChC,WAAcnU,GAAayT,WAC3B,kBAAqBzT,GAAawT,kBAClC,aAAgBxT,GAAa2U,aAC7B,mBAAsB3U,GAAa4U,mBACnC,aAAgB5U,GAAa6U,aAC7B,kBAAqB7U,GAAasR,qBAEvC5V,MAAK,SAAAI,GACJpC,GAAa,GACb8D,IACAG,GAAW,GACX3B,YAAW,WACP2B,GAAW,EACf,GAAG,IACP,IACJ,EA4cmG,WAAE,SAAC,MAAM,IAAG,oBAWnH,E,WCzBA,MA7tBA,SAAsB5J,GAAQ,IAAD,EACnB4C,EAAyB5C,EAAzB4C,UAAWqR,EAAcjU,EAAdiU,UACbqC,EAAarC,EAAUsC,MAAK,SAACnT,GAAI,MAA2B,UAAtBA,EAAKiT,YAAwB,IACnE9P,EAAUC,EAAAA,EAAAA,QAChB,GAA8BC,EAAAA,EAAAA,WAAS,GAAM,eAAtCG,EAAO,KAAEoO,EAAU,KAC1B,GAAkCvO,EAAAA,EAAAA,WAAS,GAAM,eAA1Cf,EAAS,KAAEC,EAAY,KAC9B,GAA4Bc,EAAAA,EAAAA,WAAS,GAAM,eAApCkD,EAAM,KAAED,EAAS,KACxB,GAA8BjD,EAAAA,EAAAA,WAAS,GAAM,eAAtC8N,EAAO,KAAE3K,EAAU,KAC1B,GAAwCnD,EAAAA,EAAAA,UAASwO,EAAAA,KAAkB,eAA5DC,EAAY,KAAEC,EAAe,KACpC,GAAgC1O,EAAAA,EAAAA,UAAS,IAAG,eAArCkX,EAAQ,KAAEC,EAAW,KAC5B,GAAoCnX,EAAAA,EAAAA,UAAS,IAAG,eAAzCoX,EAAU,KAAEC,EAAa,KAChC,GAAoCrX,EAAAA,EAAAA,UAAS,IAAG,eAAzCsX,GAAU,KAAEC,GAAa,KAChC,IAA8DvX,EAAAA,EAAAA,UAAS,IAAG,iBAAnEwX,GAAuB,MAAEC,GAA0B,MAC1D,IAAoCzX,EAAAA,EAAAA,UAAS,IAAG,iBAAzC0X,GAAU,MAAEC,GAAa,MAChC,IAAkC3X,EAAAA,EAAAA,UAAS,IAAG,iBAAvCiO,GAAS,MAAEC,GAAY,MAC9B,IAAkClO,EAAAA,EAAAA,UAAS,IAAG,iBAC9C,IADgB,MAAc,OACIA,EAAAA,EAAAA,UAAS,KAAG,iBAA5BgO,IAAF,MAAc,OAC9B,IAA0BhO,EAAAA,EAAAA,UAAS,OAAM,iBACzC,IADY,MAAU,OACcA,EAAAA,EAAAA,UAAS,KAAG,iBAAzC6C,GAAU,MAAEE,GAAa,MAChC,IAAwB/C,EAAAA,EAAAA,UAAS,OAAM,iBAAhCO,GAAI,MAAEuO,GAAO,MACpB,IAAsC9O,EAAAA,EAAAA,UAAS,IAAG,iBAA3C6X,GAAW,MAAEC,GAAc,MAClC,IAAoD9X,EAAAA,EAAAA,UAAS,IAAG,iBAAzDsa,GAAkB,MAAEC,GAAqB,MAC1CvL,GAAa,CACjBtK,UAAWvI,EACX4d,UAAW,KACXF,YAAa,KACbhB,YAAa,KACbG,kBAAmB,KACnBwB,YAAa,KACbhH,YAAa,KACbiH,gBAAiB,KACjBvB,UAAW,KACXgB,gBAAiB,MAEnB,IAAkCla,EAAAA,EAAAA,UAAS,IAAG,iBAAvC+N,GAAS,MAChB,IAD8B,OACE/N,EAAAA,EAAAA,UAASgP,KAAW,iBAA7CzJ,GAAQ,MAAE1D,GAAW,MAC5B,IAAwB7B,EAAAA,EAAAA,UAAS,IAAG,iBAAvB6O,IAAF,MAAS,OACpB,IAA4B7O,EAAAA,EAAAA,YAAU,iBAA/B8C,GAAM,MAAEoM,GAAS,MACxB,IAA4BlP,EAAAA,EAAAA,WAAS,GAAM,iBAApCmO,GAAM,MAAEC,GAAS,MACxB,IAAoCpO,EAAAA,EAAAA,UAAS,IAAG,iBAAzCoP,GAAU,MAAEC,GAAa,MAChC,IAAsCrP,EAAAA,EAAAA,UAAS,IAAG,iBAA3CsP,GAAW,MAAEC,GAAc,MAClC,IAAkDvP,EAAAA,EAAAA,UAAS,IAAG,iBAAvDwP,GAAiB,MACxB,IAD8C,OACRxP,EAAAA,EAAAA,UAAS,KAAG,iBAA3CoD,GAAW,MAAE+L,GAAc,MAClC,IAA8BnP,EAAAA,EAAAA,UAAS,IAAG,iBAAnC0a,GAAO,MAAEC,GAAU,MAEpBhb,GAAeC,aAAaC,QAAQ,SAI1C,IAA4BG,EAAAA,EAAAA,UAAS,IAAG,iBAAjCyP,GAAM,MAAEC,GAAS,OAIxBpT,EAAAA,EAAAA,YAAU,WACRqT,IACF,GAAG,IAEH,IAAMA,GAAW,WAGf9O,IAAM,CACJC,OAAQ,MACRC,IAAKjB,EAAO,iDAA6CH,MACxDuB,MAAK,SAACE,GACIA,EAAKlF,KAEXwB,SAAQ,SAACf,GAhBA,aAiBRA,EAAKiT,cACPF,GAAU,CAAC/S,GAEf,GACF,GACF,GAEAL,EAAAA,EAAAA,YAAU,WAAO,GAAG,CAAC8G,MACrB9G,EAAAA,EAAAA,YAAU,WAAO,GAAG,CAACuG,MAerBvG,EAAAA,EAAAA,YAAU,WAAO,GAAG,CAACge,MACrBhe,EAAAA,EAAAA,YAAU,WAAO,GAAG,CAACub,KAErB,IAAMjW,GAAU,WACdf,IAAM,CACJC,OAAQ,MACRC,IAAKjB,EAAU,qCACdoB,MAAK,SAAUC,GAChB,IAAI+G,EAAM/G,EAASjF,KACnB4b,GAAe5P,EACjB,GACF,GACA5L,EAAAA,EAAAA,YAAU,WAvBRuE,IAAM,CACJC,OAAQ,MACRC,IAAKjB,EAAO,gCAEXoB,MAAK,SAAUC,GACVA,EAAWA,EAASjF,KACxBqe,GAAsBpZ,EACxB,IACCE,OAAM,SAAUF,GAAW,IAiB9BkX,KACAC,KACAC,KACAC,KACAC,KACA7W,KACAiP,KACA+J,IACF,GAAG,KAEHte,EAAAA,EAAAA,YAAU,WACR0G,IACF,GAAG,IAEH,IAAMA,GAAe,WACnBnC,IAAM,CACJC,OAAQ,OACRC,IAAKjB,EAAO,oCACZ5D,KAAMqJ,KAELrE,MAAK,SAACgH,GAEL,IADA,IAAM4I,EAAU5I,EAAIhM,KACX6Q,EAAI,EAAGA,EAAI+D,EAAQpE,OAAQK,IAClC+D,EAAQ/D,GAAS,KAAIA,EAAI,EAsB3BwC,GADgB,CAAC,WAGjBrB,GAtBkB,CAChB,CACE2M,KAAM,OACN3B,UAAW,YACXa,UAAW,YACXF,YAAa,cACbhB,YAAa,cACbiC,oBAAqB,4BACrB7B,WAAY,cACZzF,YAAa,eACb0G,gBAAiB,eACjBM,YAAa,cACb1D,kBAAmB,gBACnBE,gBAAiB,kBACjByD,gBAAiB,aACjB1J,OAAQ,WAOaC,OAAOF,IAChC9C,GAAa9F,EAAIhM,MACjB2S,GAAQ3G,EAAIhM,MAEZkS,IAAU,GACV5M,YAAW,WACT4M,IAAU,EACZ,GAAG,KACHG,GAAYpO,GAERuO,EADJvO,EACoBqO,EAAAA,IACAyC,EAAAA,IACtB,IACC/P,MAAK,SAACI,GAAW,GACtB,EAEMuP,GAAyB,WAC7BhQ,IAAM,CACJC,OAAQ,MACRC,IACEjB,EAAO,4DAC8C3D,KAEtD+E,MAAK,SAAUC,GACd,IAAIC,EAAOD,EAASjF,KACpBiT,GAAe/N,EACjB,IACCC,OAAM,SAAUF,GAAW,GAChC,EAEMyZ,GAAiB,WACrB/Z,IAAM,CACJC,OAAQ,MACRC,IAAKjB,EAAO,oDAAgD3D,KAE3D+E,MAAK,SAAUC,GACd,IAAIC,EAAOD,EAASjF,KACpBye,GAAWvZ,EACb,IACCC,OAAM,SAAUF,GAAW,GAChC,EAEM+P,GAAe,SAACjD,GACpB,OACE,gBAAKzE,MAAM,SAAQ,SACS,GAAzBgE,EAAU,GAAGC,UACZ,0BACE,SAAC,MAAU,CACTjN,MAAM,OACN0I,MAAM,SACNe,OAAO,UACP1J,KAAK,OACLH,KAAK,QACLK,QAAS,WACPsC,GAAckL,GACdiB,GAAUjB,EAAUpT,IACpBqE,GAAa,GACb4P,GAAQ,OACV,MAIJ,IAIR,EAEMiM,GAAQ,SAAC7e,GACb,OACE,gBAAKsN,MAAM,SAAShJ,MAAOtE,EAAK2e,KAAK,SAClC3e,EAAK2e,MAGZ,EACMG,GAAS,SAAC9e,GACd,OACE,gBAAKsN,MAAM,SAAShJ,MAAOtE,EAAK+c,WAAW,SACxC/c,EAAK+c,YAGZ,EAEMgC,GAAc,SAAC/e,GACnB,OACE,iBACEsN,MAAM,SACN3K,UAAU,WACV2B,MAAOwG,IAAO9K,EAAK4a,mBAAmB5P,OAAO,eAAe,UAE3D,IAC0B,MAA1BhL,EAAK4a,kBACF,GACA9P,IAAO9K,EAAK4a,mBAAmB5P,OAAO,iBAGhD,EACMgU,GAAiB,SAAChf,GACtB,OACE,gBACEsN,MAAM,SACN3K,UAAU,WACV2B,MAAOwG,IAAO9K,EAAK8a,iBAAiB9P,OAAO,eAAe,SAEjC,MAAxBhL,EAAK8a,gBACF,GACAhQ,IAAO9K,EAAK8a,iBAAiB9P,OAAO,gBAG9C,EACMiU,GAAc,SAACjf,GACnB,OACE,gBAAK,cAAY,UAAUsE,MAAOtE,EAAKge,gBAAgB,SAC5B,GAAxBhe,EAAKge,iBACJ,iBAAM1Z,MAAM,MAAK,SAAC,UAElB,iBAAMA,MAAM,KAAI,SAAC,SAIzB,EAEM4a,GAAW,SAAClf,GAChB,OACE,gBAAK,cAAY,UAAUsE,MAAOtE,EAAKgd,UAAU,SAC9Chd,EAAKgd,WAGZ,EACMmC,GAAW,SAACnf,GAChB,OACE,gBAAK,cAAY,UAAUsE,MAAOtE,EAAK6d,UAAU,SAC9C7d,EAAK6d,WAGZ,EACMuB,GAAa,SAACpf,GAClB,OACE,gBAAK,cAAY,UAAUsE,MAAOtE,EAAK2d,YAAY,SAChD3d,EAAK2d,aAGZ,EACM0B,GAAa,SAACrf,GAClB,OACE,gBAAK,cAAY,UAAUsE,MAAOtE,EAAK2c,YAAY,SAChD3c,EAAK2c,aAGZ,EACM2C,GAAY,SAACtf,GACjB,OACE,gBAAK,cAAY,UAAUsE,MAAOtE,EAAK4e,oBAAoB,SACxD5e,EAAK4e,qBAGZ,EACMW,GAAa,SAACvf,GAClB,OACE,gBAAK,cAAY,UAAUsE,MAAOtE,EAAKse,YAAY,SAChDte,EAAKse,aAGZ,EACM/J,GAAY,SAACvU,GACjB,OACE,gBAAK,cAAY,UAAUsE,MAAOtE,EAAKue,gBAAgB,SACpDve,EAAKue,iBAGZ,EAEMrJ,GAAwC,QAA1B,EAAGvT,OAAOwT,KAAKjC,WAAW,aAAvB,EAAyBhU,KAAI,SAACkW,EAAKvE,GACxD,OACE,SAAC,MAAM,CACLwE,UAAQ,EAERC,KACS,UAAPF,EACIJ,GACO,QAAPI,EACAyJ,GACO,cAAPzJ,EACA0J,GACO,qBAAP1J,EACA2J,GACO,mBAAP3J,EACA4J,GACO,mBAAP5J,EACA6J,GACO,aAAP7J,EACA8J,GACO,aAAP9J,EACA+J,GACO,eAAP/J,EACAgK,GACO,eAAPhK,EACAiK,GACO,uBAAPjK,EACAkK,GACO,eAAPlK,EACAmK,GACO,mBAAPnK,GAA4Bb,GAElCgB,MAAOH,EACPtI,OAAQoG,GAAWkC,IA7BdA,EAgCX,KAEAhV,EAAAA,EAAAA,YAAU,WACR2R,GAAU,IAAMoB,GAAcqC,KAAKC,MAAMD,KAAKE,UAAU3D,GAAU,KACpE,GAAG,CAACA,KAEJ,IAAMoK,GAAc,WAClBxX,IAAM,CACJC,OAAQ,MACRC,IAAKjB,EAAO,iCACXoB,MAAK,SAACgH,GACP,IAAIgP,EAAWhP,EAAIhM,KACnBib,EAAYD,EACd,GACF,EAEMoB,GAAgB,WACpBzX,IAAM,CACJC,OAAQ,MACRC,IAAKjB,EAAO,mCACXoB,MAAK,SAACgH,GACP,IAAIkP,EAAalP,EAAIhM,KACrBmb,EAAcD,EAChB,GACF,EAEMmB,GAAgB,WACpB1X,IAAM,CACJC,OAAQ,MACRC,IAAKjB,EAAO,mCACXoB,MAAK,SAACgH,GACP,IAAIoP,EAAapP,EAAIhM,KACrBqb,GAAcD,EAChB,GACF,EAEMkB,GAA6B,WACjC3X,IAAM,CACJC,OAAQ,MACRC,IAAKjB,EAAO,gDACXoB,MAAK,SAACgH,GACP,IAAIsP,EAA0BtP,EAAIhM,KAClCub,GAA2BD,EAC7B,GACF,EAEMiB,GAAgB,WACpB5X,IAAM,CACJC,OAAQ,MACRC,IAAKjB,EAAO,mCACXoB,MAAK,SAACgH,GACP,IAAIwP,EAAaxP,EAAIhM,KACrByb,GAAcD,EAChB,GACF,EAEMjO,GAAe,SAAClH,GACpB,MAAsBA,EAAEmH,OAAhB7O,EAAE,EAAFA,GAAIuJ,EAAK,EAALA,MACZvC,IAAY,SAACa,GAAI,yBAAWA,GAAI,cAAG7H,EAAc,QAATuJ,EAAkB,KAAOA,GAAK,GACxE,EASA,OACE,+BACE,2BACGlB,GACC,iBAAKrE,UAAU,oBAAmB,WAChC,SAAC,MAAO,IACP,6BAGH,GAEDiP,GACC,iBAAKjP,UAAU,oBAAmB,WAChC,SAAC,MAAO,IACP,8BAGH,IAEF,iBAAKA,UAAU,YAAW,WACxB,gBAAKA,UAAU,WAAU,UACvB,wBAAK6b,QAEP,gBAAK7b,UAAU,WAAU,UACvB,wBAAI,aAEN,gBAAKA,UAAU,mBAEjB,SAACoT,EAAA,EAAiB,CAChBxC,OAAQA,GACRyC,kBAtZgB,CAAC,WAAY,OAAQ,aAAc,YAwZrD,iBAAKrT,UAAU,yBAAwB,WACrC,iBAAKA,UAAU,2BAA0B,WACvC,wBAAI,oBACJ,gBACE4B,QAAS,WACP8N,GAAYpO,GAERuO,EADJvO,EACoBqO,EAAAA,IACAyC,EAAAA,IACtB,EAAE,UAEF,0BAAOxC,UAGX,SAAC,KAAS,CAACtO,SAAUA,EAAQ,UAC3B,iBAAKtB,UAAU,qBAAoB,WACjC,gBAAKA,UAAU,aAAY,UACzB,iBAAKA,UAAU,iBAAiBhE,GAAG,YAAW,WAC5C,kBAAOgE,UAAU,QAAO,SAAC,eACzB,kBAAOA,UAAU,YAAW,SAAC,OAC7B,kBAAOA,UAAU,QAAO,UACtB,oBACE2V,MAAM,eACN3Z,GAAG,YACHuP,SAAU,SAAC7H,GAAC,OAAKkH,GAAalH,EAAE,EAAC,WAEjC,mBAAQ6B,MAAM,OAAM,SAAC,aACpB8S,EAAS9b,KAAI,SAAC0P,GAAI,OACjB,oBAAQ1G,MAAO0G,EAAKjQ,GAAG,UAAC,IAAEiQ,EAAKC,YAAmB,eAM5D,gBAAKlM,UAAU,cAAchE,GAAG,cAAa,UAC3C,iBAAKgE,UAAU,iBAAgB,WAC7B,kBAAOA,UAAU,QAAQiN,QAAQ,cAAa,SAAC,iBAG/C,kBAAOjN,UAAU,aAAY,SAAC,OAC9B,kBAAOA,UAAU,QAAO,UACtB,oBACE2V,MAAM,eACN3Z,GAAG,cACHuP,SAAU,SAAC7H,GAAC,OAAKkH,GAAalH,EAAE,EAAC,WAEjC,mBAAQ6B,MAAM,OAAM,SAAC,aACpBgT,EAAWhc,KAAI,SAAC0P,GAAI,OACnB,oBAAQ1G,MAAO0G,EAAKjQ,GAAG,UAAC,IAAEiQ,EAAKC,YAAmB,eAM5D,gBAAKlM,UAAU,aAAahE,GAAG,cAAa,UAC1C,iBAAKgE,UAAU,iBAAgB,WAC7B,kBAAOA,UAAU,QAAQiN,QAAQ,cAAa,SAAC,iBAG/C,kBAAOjN,UAAU,YAAW,SAAC,OAC7B,kBAAOA,UAAU,QAAO,UACtB,oBACE2V,MAAM,eACN3Z,GAAG,cACHuP,SAAU,SAAC7H,GAAC,OAAKkH,GAAalH,EAAE,EAAC,WAEjC,mBAAQ6B,MAAM,OAAM,SAAC,aACpBkT,GAAWlc,KAAI,SAAC0P,GAAI,OACnB,oBAAQ1G,MAAO0G,EAAKjQ,GAAG,UAAC,IAAEiQ,EAAKC,YAAmB,eAM5D,gBAAKlM,UAAU,WAAU,UACvB,iBAAKA,UAAU,sBAAsBhE,GAAG,oBAAmB,WACzD,kBAAOgE,UAAU,QAAO,SAAC,+BACzB,kBAAOA,UAAU,YAAW,SAAC,OAC7B,kBAAOA,UAAU,QAAO,UACtB,oBACE2V,MAAM,eACN3Z,GAAG,oBACHuP,SAAU,SAAC7H,GAAC,OAAKkH,GAAalH,EAAE,EAAC,WAEjC,mBAAQ6B,MAAM,OAAM,SAAC,aACpBoT,GAAwBpc,KAAI,SAAC0P,GAAI,OAChC,oBAAQ1G,MAAO0G,EAAKjQ,GAAG,UAAC,IAAEiQ,EAAKC,YAAmB,eAM5D,gBAAKlM,UAAU,YAAYhE,GAAG,YAAW,UACvC,iBAAKgE,UAAU,sBAAqB,WAClC,kBAAOA,UAAU,QAAO,SAAC,eACzB,kBAAOA,UAAU,YAAW,SAAC,OAC7B,kBAAOA,UAAU,QAAO,UACtB,kBACE0B,KAAK,OACL8B,KAAK,eACLxH,GAAG,YACHuP,SAAU,SAAC7H,GACT,MAAsBA,EAAEmH,OAAZtF,GAAF,EAAFvJ,GAAS,EAALuJ,OACZvC,IAAY,SAACa,GAAI,yBACZA,GAAI,cACN,YAAuB,IAAT0B,EAAc,KAAOA,GAAK,GAE7C,YAMR,gBAAKvF,UAAU,YAAYhE,GAAG,kBAAiB,UAC7C,iBAAKgE,UAAU,iBAAgB,WAC7B,kBAAOA,UAAU,QAAO,SAAC,mBACzB,kBAAOA,UAAU,YAAW,SAAC,OAC7B,kBAAOA,UAAU,QAAO,UACtB,oBACE2V,MAAM,eACN3Z,GAAG,kBACHuP,SAAU,SAAC7H,GAAC,OAAKkH,GAAalH,EAAE,EAAC,WAEjC,mBAAQ6B,MAAM,OAAM,SAAC,cACrB,oBAAQA,MAAM,IAAIvJ,GAAG,IAAG,UACrB,IAAI,MACD,QAEN,oBAAQuJ,MAAM,IAAIvJ,GAAG,IAAG,UACrB,IAAI,KACF,kBAMb,gBAAKgE,UAAU,YAAYhE,GAAG,cAAa,UACzC,iBAAKgE,UAAU,iBAAgB,WAC7B,kBAAOA,UAAU,QAAO,SAAC,iBACzB,kBAAOA,UAAU,YAAW,SAAC,OAC7B,kBAAOA,UAAU,QAAO,UACtB,oBACE2V,MAAM,eACN3Z,GAAG,cACHuP,SAAU,SAAC7H,GAAC,OAAKkH,GAAalH,EAAE,EAAC,WAEjC,mBAAQ6B,MAAM,OAAM,SAAC,aACpBsT,GAAWtc,KAAI,SAAC0P,GAAI,OACnB,oBAAQ1G,MAAO0G,EAAKjQ,GAAG,UAAC,IAAEiQ,EAAKC,YAAmB,eAM5D,gBAAKlM,UAAU,gBAAe,UAC5B,iBAAKA,UAAU,iBAAiBhE,GAAG,cAAa,WAC9C,kBAAOgE,UAAU,mBAAkB,SAAC,iBACpC,kBAAOA,UAAU,YAAW,SAAC,OAC7B,gBAAKA,UAAU,QAAO,UACpB,gBAAKA,UAAU,yBAAwB,UACrC,SAAC,IAAgB,CACfhE,GAAG,cACHwH,KAAK,cACLwV,YAAaA,GACbjW,QAASA,GACTC,YAAaA,GACbuI,SAAU,SAAC7H,GACT,MAAsBA,EAAEmH,OAAhB7O,EAAE,EAAFA,GAAS,EAALuJ,MACZvC,IAAY,SAACa,GAAI,yBACZA,GAAI,cACN,cAAsB,IAAN7H,EAAW,KAAOA,GAAE,GAEzC,EACAgI,WAAYA,GACZJ,QAlNF,WAClBZ,IAAY,SAACa,GAAI,yBAAWA,GAAI,IAAE8Q,YAAa,MAAI,GACrD,cAuNY,gBAAK3U,UAAU,YAAYhE,GAAG,kBAAiB,UAC7C,iBAAKgE,UAAU,iBAAgB,WAC7B,kBAAOA,UAAU,QAAO,SAAC,gBACzB,kBAAOA,UAAU,YAAW,SAAC,OAC7B,kBAAOA,UAAU,SAAQ,UACvB,kBACE0B,KAAK,OACL8B,KAAK,kBACLxH,GAAG,kBACHuP,SAAU,SAAC7H,GACT,MAAsBA,EAAEmH,OAAZtF,GAAF,EAAFvJ,GAAS,EAALuJ,OACZvC,IAAY,SAACa,GAAI,yBACZA,GAAI,cACN,kBAA6B,IAAT0B,EAAc,KAAOA,GAAK,GAEnD,YAMR,iBAAKoQ,MAAM,0DAAyD,WAClE,oBACEjU,KAAK,SACL1B,UAAU,kBACVuF,MAAO2J,GACPtN,QAAS,WArPvBuC,IAqP0C,EAAC,WAE7B,SAAC,MAAQ,IAAG,UAAQ,OACZ,YAIfmL,IAAS,SAACiE,EAAA,EAAM,IAAM,OAEzB,iBAAKvT,UAAU,0DAAyD,WACtE,gBAAKA,UAAU,GAAE,UACf,iBAAK2V,MAAM,uBAAsB,WAC/B,SAACqC,EAAA,EAA+B,CAC9B3a,KAAM+R,GACNqB,YAAaA,GACbE,kBAAmBA,GACnB4B,eAAgBA,GAChBhC,WAAYA,GACZC,cAAeA,GACflD,KAhmBD,KAkmBwB,IAAd,OAAV0D,QAAU,IAAVA,OAAU,EAAVA,EAAYpC,WACX,gBAAK5O,UAAU,0DAAyD,UACtE,oBACE0B,KAAK,SACL1B,UAAU,kBACV4B,QAAS,WACPvB,GAAa,GACb4P,GAAQ,MACV,EAAE,WAEF,SAAC,MAAM,IAAG,WAKd,QAIL7P,GACC,SAAC,EAAS,CACRA,UAAWA,EACXC,aAAcA,EACdob,mBAAoBA,GACpB/Z,KAAMA,GACNyC,aAAcA,GACdF,OAAQA,GACRI,OAAQA,EACRD,UAAWA,EACX6K,QAASA,EACT3K,WAAYA,EACZJ,cAAeA,GACfF,WAAYA,GACZ1G,UAAWA,EACX8R,UAAWA,GACX7K,YAAaA,KAGf,UAMZ,E,qDC5OA,MAvfA,SAA2B7J,GACzB,IACEmiB,EAMEniB,EANFmiB,WACAC,EAKEpiB,EALFoiB,qBACAxf,EAIE5C,EAJF4C,UACAyf,EAGEriB,EAHFqiB,WACAC,EAEEtiB,EAFFsiB,cACArO,EACEjU,EADFiU,UAEFxL,QAAQC,IAAIuL,EAAU,GAAGC,UACzB,IAAMoC,EAAarC,EAAUsC,MAC3B,SAACnT,GAAI,MAA2B,uBAAtBA,EAAKiT,YAAqC,IAEtD,GAAgC5P,EAAAA,EAAAA,UAAS,IAAG,eAArC8b,EAAQ,KAAEC,EAAW,KAC5B,GAAsC/b,EAAAA,EAAAA,WAAS,GAAM,eAA9Cgc,EAAW,KAAEC,EAAc,KAClC,GAAsBjc,EAAAA,EAAAA,UAAS,GAAE,eAA1B0N,EAAG,KAAEC,EAAM,KAClB,GAAkD3N,EAAAA,EAAAA,UAAS,IAAG,eAAvDkc,EAAiB,KAAEC,EAAoB,KAC9C,GAA8Bnc,EAAAA,EAAAA,WAAS,GAAM,eAAtCoc,EAAO,KAAEC,EAAU,KAC1B,GAAqCrc,EAAAA,EAAAA,WAAS,GAAK,eAA5Csc,EAAU,KAAEC,EAAc,KACjC,GAA0Cvc,EAAAA,EAAAA,WAAS,GAAK,eAAjDwc,EAAa,KAAEC,EAAgB,KACtC,GAAoCzc,EAAAA,EAAAA,UAAS,IAAG,gBAAzCyW,GAAU,MAAEiG,GAAa,MAChC,IAAsC1c,EAAAA,EAAAA,WAAS,GAAM,iBAA9C2c,GAAW,MAAEC,GAAc,MAClC,IAA0C5c,EAAAA,EAAAA,WAAS,GAAM,iBAAlD6c,GAAa,MAAEC,GAAgB,MAIhCC,GAAQ,CACZC,SAAUhW,MAASiW,QAAQ,QAAQpQ,IAAI,OAAQ,GAAG3F,OAAO,cACzDyE,OAAQ3E,MAASiW,QAAQ,QAAQpQ,IAAI,OAAQ,IAAI3F,OAAO,eAE1D,IAAoBlH,EAAAA,EAAAA,UAAS+c,IAAM,iBAA5BG,GAAE,MAAEC,GAAK,MAoCVrd,GAAUC,EAAAA,EAAAA,QACVqd,GAA2B,WAC/Bvc,IAAM,CACJE,IACEjB,GAAO,uEACyD3D,EAAS,qBAAa+gB,GAAGF,SAAQ,mBAAWE,GAAGvR,UAChHzK,MAAK,SAACgH,GACP6T,EAAY7T,EAAIhM,KAClB,GACF,GAEAI,EAAAA,EAAAA,YAAU,WACR8gB,IACF,GAAG,CAACF,KAGJ,IAmHMG,GAA6B,SAACvB,EAAUwB,GAAa,IAAD,IAIlDzT,EAAgB,SAAC9K,GACrB,GAAsB,KAAlBA,EAAMyM,QAAgB,CAExB,IAAMpH,EAAQrF,EAAM2K,OAAOtF,MACrBmZ,EAAiBxe,EAAM2K,OAAO6T,eAGpC,GAAuB,IAAnBA,EAEF,YADAxe,EAAMgL,iBAKR,GAAkC,MAA9B3F,EAAMmZ,EAAiB,GACzB,OAGFxe,EAAMgL,gBACR,CACF,EACA,OACE,iCACW,OAAR+R,QAAQ,IAARA,OAAQ,EAARA,EAAUjhB,MAAO4b,KAA8B,IAAhBkG,IAC9B,kBACE9d,WACiB,IAAf+c,EAAsB,uBAAyB,WAEjDrb,KAAK,OACL1F,GAAG,oBACHwH,KAAK,oBACL7B,MAAOsb,EAASI,kBAChBtR,aAAsB,OAARkR,QAAQ,IAARA,OAAQ,EAARA,EAAUI,kBACxB9R,SAnCa,SAAC7H,GACpB4Z,EAAqB5Z,EAAEmH,OAAOtF,MAChC,EAkCQqG,UAAWZ,IAGmB,MAAxB,OAARiS,QAAQ,IAARA,OAAQ,EAARA,EAAUI,qBACR,cAAGrd,UAAU,WAAW2B,MAAe,OAARsb,QAAQ,IAARA,OAAQ,EAARA,EAAUI,kBAAkB,SAChD,OAARJ,QAAQ,IAARA,OAAQ,EAARA,EAAUI,oBAIgB,MAAxB,OAARJ,QAAQ,IAARA,OAAQ,EAARA,EAAUI,qBACT,kBACErd,UAAS,iBACP+c,GAAuB,OAARE,QAAQ,IAARA,GAAiB,QAAT,EAARA,EAAUwB,eAAO,OAAjB,EAAmBE,eAE9B,WADA,wBAGNjd,KAAK,OACL1F,GAAG,oBACHwH,KAAK,oBACL7B,MAAOsb,EAASI,kBAChB9X,MAAuB,QAAlB,EAAE0X,EAASwB,eAAO,aAAhB,EAAkBpB,kBACzB9R,SAAU,SAAC7H,GAAC,OAAK4Z,EAAqB5Z,EAAEmH,OAAOtF,MAAM,EACrDqG,UAAWZ,MAKrB,GACAvN,EAAAA,EAAAA,YAAU,WAAO,IAAD,EAC4B,EAAJ,KAAvB,QAAX,EAAAwf,EAAS,UAAE,aAAX,EAAaI,qBAC+C,QAA9D,EAAA1P,SAASC,uBAAuB,4BAA4B,UAAE,OAA9D,EAAgEgR,QAChEjc,YAAW,WAAO,IAAD,EAE2C,QAD1D,EAAAgL,SACGC,uBAAuB,8BAA8B,UAAE,OAD1D,EAEIiR,iBACA,SACA,SAAUnb,GAAI,IAAD,EAC2B,KAAvB,QAAX,EAAAuZ,EAAS,UAAE,aAAX,EAAaI,qBACfC,EAAqBL,EAAS6B,MAAM,EAAG7B,EAASpP,SAChDmP,GAAc,GAElB,IACA,EAEN,GAAG,KAEP,GAAG,CAACC,IACJ,IA6BM8B,GAAO,WAAO,IAAD,EAEuD,QADxE,EAAApR,SACGC,uBAAuB,4CAA4C,UAAE,OADxE,EAEIgR,QAvOa,WACjB,GAA0B,KAAtBvB,EAWF,OAVAL,GAAc,SACK,IAAfD,GACFa,GAAiB,GACjBF,GAAe,GACfF,GAAW,KAEXI,GAAiB,GACjBF,GAAe,GACfF,GAAW,KAIb,IAAIngB,EAEFA,EADE4f,EAAShM,MAAK,SAACnT,GAAI,OAAKA,EAAK9B,KAAO4b,EAAU,IACzC,CACL5b,GAAI4b,GACJoH,UAAW1hB,EACX2hB,gBAAiB5B,EACjBc,SAAUhW,IAAOkW,GAAGF,UAAU9V,OAAO,eAGhC,CACL2W,UAAW1hB,EACX2hB,gBAAiB5B,EACjBc,SAAUhW,IAAOkW,GAAGF,UAAU9V,OAAO,eAGzCrG,IAAM,CACJC,OAAQ,OACRC,IACEjB,GAAO,4DACT5D,KAAMA,IACLgF,MAAK,SAACI,GACP8b,KACAvB,GAAc,GACdQ,GAAW,GACXE,GAAe,GACfE,GAAiB,GACjBd,GAAqB,GACrBna,YAAW,WACTma,GAAqB,EACvB,GAAG,KACHQ,EAAqB,GACvB,IAEAS,IAAe,EAEnB,CAuLEmB,IACmB,IAAfnC,GACFa,GAAiB,GACjBF,GAAe,GACfF,GAAW,KAEXI,GAAiB,GACjBF,GAAe,GACfF,GAAW,GAEf,EAWA,SAAS2B,GAA6BzkB,GACpC,IAAQ0kB,EAAyD1kB,EAAzD0kB,wBAAyBjC,EAAgCziB,EAAhCyiB,YAAaC,EAAmB1iB,EAAnB0iB,eAC9C,OACE,0BACE,SAAC,IAAS,WACR,UAAC,KAAM,CACLiC,UAAU,SACV5d,SAAS,SACTF,KAAK,UACLD,QAAS6b,EACTnd,UAAU,YACVwB,QAAS,kBAAM4b,GAAe,EAAM,EAAC,WAErC,SAAC,KAAY,CAACviB,MAAO,CAAEuQ,OAAQ,cAAe,UAC5C,SAAC,KAAW,WACV,iBAAMpL,UAAU,GAAE,SAAC,iCAGvB,UAAC,KAAU,YACT,wBAAI,+CACJ,iBAAKA,UAAU,4BAA2B,WACxC,oBACE0B,KAAK,SACLC,MAAM,SACN3B,UAAU,kBACV4B,QAAS,WACPwd,GACF,EAAE,WAEF,SAAC,MAAO,IAAG,aAIb,oBACE1d,KAAK,SACLC,MAAM,SACN3B,UAAU,oBACV4B,QAAS,WACPwb,GAAe,EACjB,EAAE,WAEF,SAAC,MAAO,IAAG,wBAS3B,CAEA,OACE,0BACE,4BACE,4BACE,kBAAMviB,MAAO,CAAEykB,WAAY,OAAQ,UAChCnX,IAAOkW,GAAGF,UAAU9V,OAAO,eAAe,WAC1CF,IAAOkW,GAAGvR,QAAQzE,OAAO,mBAE5B,kBAAMrI,UAAU,YAAW,WACzB,SAAC,MAAmB,CAClBoL,OAAO,UACP7J,KAAM,MACNK,QAhWW,WACrB0c,IAAM,SAACza,GAAI,yBACNA,GAAI,cACN,WAAasE,IAAOkW,GAAGF,UACrBoB,SAAS,OAAQ,GACjBlX,OAAO,eAAa,IAGzBiW,IAAM,SAACza,GAAI,yBACNA,GAAI,cACN,SAAWsE,IAAOkW,GAAGvR,QAAQyS,SAAS,OAAQ,GAAGlX,OAAO,eAAa,IAExEuV,GAAiB,GACjBF,GAAe,GACfF,GAAW,EACb,KAmVU,SAAC,MAAoB,CACnBpS,OAAO,UACP7J,KAAM,MACNK,QApXO,WACjB0c,IAAM,SAACza,GAAI,yBACNA,GAAI,cACN,WAAasE,IAAOkW,GAAGF,UAAUnQ,IAAI,OAAQ,GAAG3F,OAAO,eAAa,IAGvEiW,IAAM,SAACza,GAAI,yBACNA,GAAI,cACN,SAAWsE,IAAOkW,GAAGF,UAAUnQ,IAAI,OAAQ,IAAI3F,OAAO,eAAa,IAEtEuV,GAAiB,GACjBF,GAAe,GACfF,GAAW,EACb,WA2WM,mBAEA,iBAAKxd,UAAU,aAAY,WACzB,UAAC,IAAS,CACRuF,MAAO0X,EACPuC,SAAS,MACTC,eAAa,EACbC,aAAa,qBACbC,gBAAgB,OAChBC,WAAS,EACTC,aAAW,EACXvS,KAAM,GACNwS,kBA/FgB,SAACpc,GACzB,IAAIqc,EAAY,CAAC9C,GACX+C,EAAmBtc,EAAnBsc,QACND,EADyBrc,EAAVoK,OACIkS,EACnB9C,EAAY6C,GACZE,SAASvc,EAAEsc,SACXxC,GAAW,EACb,EAyFUxd,UAAU,uBACVkgB,kBAAkB,6FAClBC,0BAA0B,sCAC1BC,mBAAoB,CAAC,GAAI,GAAI,IAAK,WAElC,SAAC,MAAM,CACLpgB,UAAU,WACV2S,KAAM6L,GACN5L,MAAM,oBACNzI,OAAO,qBACPkW,OAAQ,SAAC7hB,GAAO,OAAKggB,GAA2BhgB,EAAQ,EACxDkU,UAAQ,IAEgB,GAAzB/D,EAAU,GAAGC,WACZ,SAAC,MAAM,CACL+D,KA3RW,SAAC8L,GACxB,OACE,gBAAK5jB,MAAO,CAAE+B,YAAa,QAAS,SACR,GAAzB+R,EAAU,GAAGC,SACZ,IAEA,mBAAOxD,OAAO,UAAS,WACrB,SAAC,MAAU,CACTzJ,MAAM,OACN9G,MAAO,CACLylB,gBAAiBtC,GAAgB,OAAS,GAC1C5S,OAAQ4S,GAAgB,cAAgB,UACxC3iB,QAAS2iB,GAAgB,KAAO,IAElChe,UAAU,OACVqK,MAAM,SACNzI,QAAS,WACPic,GAAcY,EAAQziB,IACtB0hB,GAAe,GACfE,GAAiB,GACjBJ,GAAW,GACXgB,KACAT,IAAe,EACjB,IACA,QAEF,SAAC,MAAY,CACXpc,MAAM,SACN9G,MAAO,CACLylB,gBAAiBtC,GAAgB,OAAS,GAC1C5S,OAAQ4S,GAAgB,cAAgB,UACxC3iB,QAAS2iB,GAAgB,KAAO,IAElC3T,MAAM,SACNzI,QAAS,WACPwb,GAAe,GACftO,EAAO2P,EAAQziB,GACjB,QAMZ,EAiPcmO,OAAO,SACPoW,UAAW,CAAEC,UAAW,gBACxB9N,UAAQ,EACR7X,MAAO,CAAEC,MAAO,eAIG,IAAd,OAAVkW,QAAU,IAAVA,OAAU,EAAVA,EAAYpC,UACX,IAEA,iBAAK5O,UAAU,uDAAsD,WACnE,oBACEA,UAAU,kBACVqL,SAAUkS,EACV3b,QAAS,YA1KR,WACH+L,SAASC,uBACjB,gDACA,GAEEgR,QACJ,IAIIP,EAAK,GACTA,EAAGtf,KALU,CACXse,kBAAmB,GACnBoD,QAAS,KAIXvD,EAAY,GAAD,OAAKmB,GAAG,OAAIpB,KAEvBO,GAAW,GACXI,GAAiB,GACjBF,GAAe,EACjB,CA0JgBgD,GACAzC,IAAiB,EACnB,EACA0C,QAAQ,YAAW,WAEnB,SAAC,MAAM,IAAG,WAEZ,oBACE3gB,UAAU,kBACVqL,SAAUoS,EACVkD,QAAQ,YACR/e,QAAS,WACPmd,KACkB,GAAdhC,IACFS,GAAW,GACXI,GAAiB,GACjBF,GAAe,IAEjBO,IAAiB,EACnB,EAAE,WAEF,SAAC,MAAM,IAAG,YAEZ,oBACEje,UAAU,kBACVqL,SAAUsS,EACV/b,QAAS,YAlLT,WAAO,IAAD,EAC8C,QAAhE,EAAA+L,SAASC,uBAAuB,8BAA8B,UAAE,OAAhE,EAAkEgR,QAClEL,KACAR,IAAe,GACfP,GAAW,GACXI,GAAiB,GACjBF,GAAe,GACfV,GAAc,GACdiB,IAAiB,EACnB,CA0KgB2C,GACApD,GAAW,GACXF,EAAqB,GACvB,EACAqD,QAAQ,YAAW,WAEnB,SAAC,MAAO,CAAC/lB,SAAU,SAAU,mBAKpCuiB,GACC,SAACgC,GAA4B,CAC3BC,wBArWsB,WAC9Bpd,IAAM,CACJC,OAAQ,SACRC,IACEjB,GAAO,yEAC2D4N,GACpExR,KAAMwR,IACLxM,MAAK,SAACI,GACPqM,EAAO,GACPyP,KACAnB,GAAe,GACfP,GAAW,GACXla,YAAW,WACTka,GAAW,EACb,GAAG,IACL,GACF,EAsVUM,YAAaA,EACbC,eAAgBA,IAGlB,OAKV,EC6IA,MA/nBA,SAAgC1iB,GAC9B,IAAQ4C,EAAyB5C,EAAzB4C,UAAWqR,EAAcjU,EAAdiU,UACnBxL,QAAQC,IAAIuL,EAAU,GAAGC,UACzB,IAAMoC,EAAarC,EAAUsC,MAC3B,SAACnT,GAAI,MAA2B,oBAAtBA,EAAKiT,YAAkC,IAG7CjQ,EAAeC,aAAaC,QAAQ,SAC1C,GAAgCG,EAAAA,EAAAA,UAAS,IAAG,eAArC8b,EAAQ,KAAEC,EAAW,KAC5B,GAA4C/b,EAAAA,EAAAA,UAAS,IAAG,eAAjDwd,EAAc,KAAEkC,EAAiB,KACxC,GAAsC1f,EAAAA,EAAAA,WAAS,GAAM,eAA9Cgc,EAAW,KAAEC,EAAc,KAClC,GAAsBjc,EAAAA,EAAAA,UAAS,GAAE,eAA1B0N,EAAG,KAAEC,EAAM,KAClB,GAA0C3N,EAAAA,EAAAA,WAAS,GAAM,eAAlD2f,EAAa,KAAEC,EAAgB,KACtC,GAAoC5f,EAAAA,EAAAA,WAAS,GAAM,eAA5C6f,EAAU,KAAEC,EAAa,KAChC,GAA8B9f,EAAAA,EAAAA,UAAS,IAAG,eAAnC0a,EAAO,KAAEC,EAAU,KAC1B,GAA8B3a,EAAAA,EAAAA,WAAS,GAAM,gBAAtC+f,GAAO,MAAErE,GAAU,MAC1B,IAAkD1b,EAAAA,EAAAA,WAAS,GAAM,iBAA1DggB,GAAiB,MAAErE,GAAoB,MAC9C,IAA8B3b,EAAAA,EAAAA,WAAS,GAAM,iBAAtCoc,GAAO,MAAEC,GAAU,MAC1B,IAAqCrc,EAAAA,EAAAA,WAAS,GAAK,iBAA5Csc,GAAU,MAAEC,GAAc,MACjC,IAA0Cvc,EAAAA,EAAAA,WAAS,GAAK,iBAAjDwc,GAAa,MAAEC,GAAgB,MACtC,IAAoCzc,EAAAA,EAAAA,UAAS,IAAG,iBAAzCyW,GAAU,MAAEiG,GAAa,MAChC,IAAsC1c,EAAAA,EAAAA,WAAS,GAAM,iBAA9C2c,GAAW,MAAEC,GAAc,MAClC,IAA0B5c,EAAAA,EAAAA,WAAS,GAAM,iBAAlCkN,GAAK,MAAE+S,GAAQ,MACtB,IAAoCjgB,EAAAA,EAAAA,WAAS,GAAM,iBAA5C4b,GAAU,MAAEC,GAAa,MAChC,IAA0C7b,EAAAA,EAAAA,WAAS,GAAM,iBAAlD6c,GAAa,MAAEC,GAAgB,MAGhCC,GAAQ,CACZC,SAAUhW,MAASiW,QAAQ,QAAQpQ,IAAI,OAAQ,GAAG3F,OAAO,cACzDyE,OAAQ3E,MAASiW,QAAQ,QAAQpQ,IAAI,OAAQ,GAAG3F,OAAO,eAEzD,IAAoBlH,EAAAA,EAAAA,UAAS+c,IAAM,iBAA5BG,GAAE,MAAEC,GAAK,MAoChB,IAA4Bnd,EAAAA,EAAAA,UAAS,IAAG,iBAAjCyP,GAAM,MAAEC,GAAS,OASxBpT,EAAAA,EAAAA,YAAU,WACRqT,IACF,GAAG,IAEH,IAAMA,GAAW,WAGf9O,IAAM,CACJC,OAAQ,MACRC,IAAKjB,GAAO,iDAA6CH,KACxDuB,MAAK,SAACE,GACIA,EAAKlF,KAEXwB,SAAQ,SAACf,GArBA,aAsBRA,EAAKiT,cACPF,GAAU,CAAC/S,GAEf,GACF,GACF,EAIMmD,GAAUC,EAAAA,EAAAA,QACVmgB,GAAwB,WAC5Brf,IAAM,CACJE,IACEjB,GAAO,4EAC8Dod,GAAGF,SAAQ,mBAAWE,GAAGvR,OAAM,gBAAQxP,KAC7G+E,MAAK,SAACgH,GACP6T,EAAY7T,EAAIhM,KAClB,GACF,EA4FA,SAASikB,GAAsB5mB,GAC7B,IAAQ6mB,EAAsD7mB,EAAtD6mB,qBAAsBpE,EAAgCziB,EAAhCyiB,YAAaC,EAAmB1iB,EAAnB0iB,eAC3C,OACE,0BACE,SAAC,IAAS,WACR,UAAC,KAAM,CACLiC,UAAU,SACV5d,SAAS,SACTF,KAAK,UACLD,QAAS6b,EACTnd,UAAU,YACVwB,QAAS,kBAAM4b,GAAe,EAAM,EAAC,WAErC,SAAC,KAAY,CAACviB,MAAO,CAAEuQ,OAAQ,cAAe,UAC5C,SAAC,KAAW,WACV,iBAAMpL,UAAU,GAAE,SAAC,gCAGvB,UAAC,KAAU,YACT,wBAAI,8CACJ,iBAAKA,UAAU,4BAA2B,WACxC,oBACE0B,KAAK,SACLC,MAAM,SACN3B,UAAU,kBACV4B,QAAS,WACP2f,GACF,EAAE,WAEF,SAAC,MAAO,IAAG,aAIb,oBACE7f,KAAK,SACLC,MAAM,SACN3B,UAAU,kBACV4B,QAAS,WACPwb,GAAe,EACjB,EAAE,WAEF,SAAC,MAAO,IAAG,wBAS3B,EA7IA3f,EAAAA,EAAAA,YAAU,WACR4jB,IACF,GAAG,CAAChD,MAoFJ5gB,EAAAA,EAAAA,YAAU,WAbRuE,IAAM,CACJC,OAAQ,MACRC,IACEjB,GAAO,4DAC8C3D,KAEtD+E,MAAK,SAAUC,GACd,IAAIC,EAAOD,EAASjF,KACpBye,EAAWvZ,EACb,IACCC,OAAM,SAAUF,GAAW,GAKhC,GAAG,IAwDH,IA8CMkf,GAA2B,SAACvE,EAAUwB,GAAa,IAAD,IAKhDzT,EAAgB,SAAC9K,GACrB,GAAsB,KAAlBA,EAAMyM,QAAgB,CAExB,IAAMpH,EAAQrF,EAAM2K,OAAOtF,MACrBmZ,EAAiBxe,EAAM2K,OAAO6T,eAGpC,GAAuB,IAAnBA,EAEF,YADAxe,EAAMgL,iBAKR,GAAkC,MAA9B3F,EAAMmZ,EAAiB,GACzB,OAGFxe,EAAMgL,gBACR,CACF,EAEA,OACE,iCACW,OAAR+R,QAAQ,IAARA,OAAQ,EAARA,EAAUjhB,MAAO4b,KAA8B,IAAhBkG,IAC9B,kBACE9d,WAAqB,IAAVqO,GAAiB,uBAAyB,WACrD3M,KAAK,OACL1F,GAAG,iBACHwH,KAAK,iBACL7B,MAAOsb,EAAS0B,eAChB5S,aAAsB,OAARkR,QAAQ,IAARA,OAAQ,EAARA,EAAU0B,eACxBpT,SAnCa,SAAC7H,GACpBmd,EAAkBnd,EAAEmH,OAAOtF,OAC3BiY,IAAW,EACb,EAiCQ5R,UAAWZ,IAGgB,MAArB,OAARiS,QAAQ,IAARA,OAAQ,EAARA,EAAU0B,kBACR,cAAG3e,UAAU,WAAW2B,MAAe,OAARsb,QAAQ,IAARA,OAAQ,EAARA,EAAU0B,eAAe,SAC7C,OAAR1B,QAAQ,IAARA,OAAQ,EAARA,EAAU0B,iBAIa,MAArB,OAAR1B,QAAQ,IAARA,OAAQ,EAARA,EAAU0B,kBACT,kBACE3e,UAAS,iBACPqO,IAAkB,OAAR4O,QAAQ,IAARA,GAAiB,QAAT,EAARA,EAAUwB,eAAO,OAAjB,EAAmBE,eAEzB,WADA,wBAGNjd,KAAK,OACL1F,GAAG,iBACHwH,KAAK,iBACL7B,MAAOsb,EAAS0B,eAChBpZ,MAAuB,QAAlB,EAAE0X,EAASwB,eAAO,aAAhB,EAAkBE,eACzBpT,SAAU,SAAC7H,GAAC,OAAKmd,EAAkBnd,EAAEmH,OAAOtF,MAAM,EAClDqG,UAAWZ,MAKrB,GAEAvN,EAAAA,EAAAA,YAAU,WAAO,IAAD,EACyB,EAAJ,KAApB,QAAX,EAAAwf,EAAS,UAAE,aAAX,EAAa0B,kBAC+C,QAA9D,EAAAhR,SAASC,uBAAuB,4BAA4B,UAAE,OAA9D,EAAgEgR,QAChEjc,YAAW,WAAO,IAAD,EAE2C,QAD1D,EAAAgL,SACGC,uBAAuB,8BAA8B,UAAE,OAD1D,EAEIiR,iBACA,SACA,SAAUnb,GAAI,IAAD,EACwB,KAApB,QAAX,EAAAuZ,EAAS,UAAE,aAAX,EAAa0B,kBACfkC,EAAkB5D,EAAS6B,MAAM,EAAG7B,EAASpP,SAC7CuT,IAAS,GAEb,IACA,EAEN,GAAG,KAEP,GAAG,CAACnE,IAEJ,IAmCM8B,GAAO,WAAO,IAAD,EAEuD,QADxE,EAAApR,SACGC,uBAAuB,4CAA4C,UAAE,OADxE,EAEIgR,QApTa,WAWf,IAAIvhB,EAViB,KAAnBshB,GACFyC,IAAS,GAETxD,IAAiB,GACjBF,IAAe,GACfF,IAAW,KAEXI,IAAiB,GACjBF,IAAe,GACfF,IAAW,GAGTngB,EADE4f,EAAShM,MAAK,SAACnT,GAAI,OAAKA,EAAK9B,KAAO4b,EAAU,IACzC,CACL5b,GAAI4b,GACJta,UAAWA,EACXqhB,eAAgBA,EAChB8C,YAAatZ,IAAOkW,GAAGF,UAAU9V,OAAO,eAGnC,CACL/K,UAAWA,EACXqhB,eAAgBA,EAChB8C,YAAatZ,IAAOkW,GAAGF,UAAU9V,OAAO,eAG5CrG,IAAM,CACJC,OAAQ,OACRC,IAAKjB,GAAO,wDACZ5D,KAAMA,IACLgF,MAAK,SAACI,GACP4e,KACAJ,GAAc,GACdzD,IAAW,GACXE,IAAe,GACfE,IAAiB,GACjBwD,IAAS,GACTze,YAAW,WACTse,GAAc,EAChB,GAAG,KACHJ,EAAkB,GACpB,IACA9C,IAAe,GAEnB,CAyQEmB,IACc,IAAV7Q,IACFuP,IAAiB,GACjBF,IAAe,GACfF,IAAW,KAEXI,IAAiB,GACjBF,IAAe,GACfF,IAAW,GAEf,EAUA,OACE,2BACG3B,EAAQtf,KAAI,SAACiO,GAAI,OAChB,iBAAKxK,UAAU,YAAW,WACxB,gBAAKA,UAAU,WAAU,UACvB,0BACGwK,EAAKc,YAAY,IAAEd,EAAKkX,YAAY,UAGzC,gBAAK1hB,UAAU,WAAU,UACvB,wBAAI,8CAEN,gBAAKA,UAAU,iBACX,KAER,SAACoT,EAAA,EAAiB,CAChBxC,OAAQA,GACRyC,kBAxYkB,CACtB,WACA,OACA,aACA,6CAsYE,iBAAKrT,UAAU,aAAY,UACxB8gB,GACC,iBAAK9gB,UAAU,oBAAmB,WAChC,SAAC,MAAO,IACP,yCAGH,GAEDghB,GACC,iBAAKhhB,UAAU,oBAAmB,WAChC,SAAC,MAAO,IACP,wCAGH,GAEDkhB,IACC,iBAAKlhB,UAAU,oBAAmB,WAChC,SAAC,MAAO,IACP,2CAGH,GAEDmhB,IACC,iBAAKnhB,UAAU,oBAAmB,WAChC,SAAC,MAAO,IACP,0CAGH,GAEDqO,IACC,iBAAKrO,UAAU,kBAAiB,WAC9B,SAAC,MAAa,IAAG,IAAE,wCAGrB,IAED+c,IACC,iBAAK/c,UAAU,kBAAiB,WAC9B,SAAC,MAAa,IAAG,IAAE,wCAGrB,KAEF,iBAAKA,UAAU,WAAU,WACvB,iBAAKA,UAAU,WAAU,WACvB,4BACE,kBAAMnF,MAAO,CAAEykB,WAAY,OAAQ,UAChCnX,IAAOkW,GAAGF,UAAU9V,OAAO,eAAe,WAC1CF,IAAOkW,GAAGvR,QAAQzE,OAAO,mBAE5B,kBAAMrI,UAAU,YAAW,WACzB,SAAC,MAAmB,CAClBoL,OAAO,UACP7J,KAAM,MACNK,QAzdO,WACrB0c,IAAM,SAACza,GAAI,yBACNA,GAAI,cACN,WAAasE,IAAOkW,GAAGF,UACrBoB,SAAS,OAAQ,GACjBlX,OAAO,eAAa,IAGzBiW,IAAM,SAACza,GAAI,yBACNA,GAAI,cACN,SAAWsE,IAAOkW,GAAGvR,QAAQyS,SAAS,OAAQ,GAAGlX,OAAO,eAAa,IAExEuV,IAAiB,GACjBF,IAAe,GACfF,IAAW,EACb,KA4cc,SAAC,MAAoB,CACnBpS,OAAO,UACP7J,KAAM,MACNK,QA7eG,WACjB0c,IAAM,SAACza,GAAI,yBACNA,GAAI,cACN,WAAasE,IAAOkW,GAAGF,UAAUnQ,IAAI,OAAQ,GAAG3F,OAAO,eAAa,IAGvEiW,IAAM,SAACza,GAAI,yBACNA,GAAI,cACN,SAAWsE,IAAOkW,GAAGvR,QAAQkB,IAAI,OAAQ,GAAG3F,OAAO,eAAa,IAEnEuV,IAAiB,GACjBF,IAAe,GACfF,IAAW,EACb,WAoeU,mBAEA,iBAAKmE,KAAG,EAAC3hB,UAAU,aAAY,WAC7B,UAAC,IAAS,CACRuF,MAAO0X,EACPuC,SAAS,MACTC,eAAa,EACbC,aAAa,qBACbC,gBAAgB,OAChBC,WAAS,EACTC,aAAW,EACXvS,KAAM,GACNwS,kBA3GY,SAACpc,GACzB,IAAIqc,EAAY,CAAC9C,GACX+C,EAAmBtc,EAAnBsc,QACND,EADyBrc,EAAVoK,OACIkS,EACnB9C,EAAY6C,GACZE,SAASvc,EAAEsc,SACXxC,IAAW,EACb,EAqGcxd,UAAU,uBACVkgB,kBAAkB,6FAClBC,0BAA0B,sCAC1BC,mBAAoB,CAAC,GAAI,GAAI,IAAK,WAElC,SAAC,MAAM,CACLzN,KAAM6O,GACN5O,MAAM,iBACNzI,OAAO,kBACPxI,MAAOgd,EACP0B,OAAQ,SAAC7hB,GAAO,OAAKgjB,GAAyBhjB,EAAQ,EACtDkU,UAAQ,IAEgB,GAAzB/D,EAAU,GAAGC,WACZ,SAAC,MAAM,CACL+D,KAjTO,SAAC8L,GACxB,OACE,gBAAK5jB,MAAO,CAAE+B,YAAa,QAAS,SACR,GAAzB+R,EAAU,GAAGC,UACZ,mBAAOxD,OAAO,UAAS,WACrB,SAAC,MAAU,CACTzJ,MAAM,OACN9G,MAAO,CACLylB,gBAAiBtC,GAAgB,OAAS,GAC1C5S,OAAQ4S,GAAgB,cAAgB,UACxC3iB,QAAS2iB,GAAgB,KAAO,IAElC3S,SAAU2S,GACVhe,UAAU,OACVqK,MAAM,SACNzI,QAAS,WACP8b,IAAe,GACfE,IAAiB,GACjBJ,IAAW,GACXgE,KACAzD,IAAe,GACfF,GAAcY,EAAQziB,GACxB,IACA,QAEF,SAAC,MAAY,CACX2F,MAAM,SACN9G,MAAO,CACLylB,gBAAiBtC,GAAgB,OAAS,GAC1C5S,OAAQ4S,GAAgB,cAAgB,UACxC3iB,QAAS2iB,GAAgB,KAAO,IAElC3T,MAAM,SACNzI,QAAS,WACPwb,GAAe,GACftO,EAAO2P,EAAQziB,GACjB,OAIJ,IAIR,EAsQkBmO,OAAO,SACPoW,UAAW,CAAEC,UAAW,gBACxB9N,UAAQ,EACR7X,MAAO,CAAEC,MAAO,eAIG,IAAd,OAAVkW,QAAU,IAAVA,OAAU,EAAVA,EAAYpC,WACX,iBAAK5O,UAAU,uDAAsD,WACnE,oBACEA,UAAU,kBACVqL,SAAUkS,GACV3b,QAAS,YA1LZ,WACH+L,SAASC,uBACjB,gDACA,GAEEgR,QACJ,IAIIP,EAAK,GACTA,EAAGtf,KALU,CACX4f,eAAgB,GAChB8B,QAAS,KAIXvD,EAAY,GAAD,OAAKmB,GAAG,OAAIpB,MACT,IAAV5O,IACFuP,IAAiB,GACjBF,IAAe,GACfF,IAAW,KAEXI,IAAiB,GACjBF,IAAe,GACfF,IAAW,GAEf,CAqKoBkD,GACAzC,IAAiB,EACnB,EACA0C,QAAQ,YAAW,WAEnB,SAAC,MAAM,IAAG,WAEZ,oBACE3gB,UAAU,kBACVqL,SAAUoS,GACVkD,QAAQ,YACR/e,QAAS,WACPmd,KACa,GAAT1Q,KACFmP,IAAW,GACXI,IAAiB,GACjBF,IAAe,IAEjBO,IAAiB,EACnB,EAAE,WAEF,SAAC,MAAM,IAAG,YAEZ,oBACEje,UAAU,kBACVqL,SAAUsS,GACV/b,QAAS,YA7Lb,WAAO,IAAD,EAC8C,QAAhE,EAAA+L,SAASC,uBAAuB,8BAA8B,UAAE,OAAhE,EAAkEgR,QAClEyC,KACAtD,IAAe,GACfP,IAAW,GACXI,IAAiB,GACjBF,IAAe,GACf0D,IAAS,GACTnD,IAAiB,EACnB,CAqLoB2C,GACApD,IAAW,GACXqD,EAAkB,GACpB,EACAF,QAAQ,YAAW,WAEnB,SAAC,MAAO,CAAC/lB,SAAU,SAAU,gBAIjC,MAIHuiB,GACC,SAACmE,GAAqB,CACpBC,qBApce,WAC3Bvf,IAAM,CACJC,OAAQ,SACRC,IACEjB,GAAO,qEACuD4N,GAChExR,KAAMwR,IACLxM,MAAK,SAACI,GACPqM,EAAO,GACPuS,KACAjE,GAAe,GACf2D,GAAiB,GACjBpe,YAAW,WACToe,GAAiB,EACnB,GAAG,IACL,GACF,EAqbc5D,YAAaA,EACbC,eAAgBA,IAGlB,OAIJ,gBAAKpd,UAAU,WAAU,UACvB,SAAC,EAAiB,CAChB6c,WAAYA,GACZC,qBAAsBA,GACtBxf,UAAWA,EACXyf,WAAYA,GACZC,cAAeA,GACfrO,UAAWA,cAOzB,E,gCC0LA,MA3zBA,SAA6BjU,GAAQ,IAAD,IAClC,GAAgCyG,EAAAA,EAAAA,UAAS,CAAC,CAAC,IAAG,eAAvCygB,EAAQ,KAAEC,EAAW,KAE5B,GAAoC1gB,EAAAA,EAAAA,WAAS,GAAM,eAA5C6f,EAAU,KAAEC,EAAa,KAChC,GAA8C9f,EAAAA,EAAAA,WAAS,GAAM,eAAtD2gB,EAAe,KAAEC,EAAkB,KAC1C,GAA4B5gB,EAAAA,EAAAA,WAAS,GAAM,eAApCmO,EAAM,KAAEC,EAAS,KACxB,GAAkCpO,EAAAA,EAAAA,WAAS,GAAK,eAAzC+N,EAAS,KAAE8S,EAAY,KAC9B,GAA4C7gB,EAAAA,EAAAA,WAAS,GAAK,eAAnD8gB,EAAc,KAAEC,EAAiB,KACxC,GAA0B/gB,EAAAA,EAAAA,WAAS,GAAM,eAAlCkN,EAAK,KAAE8T,EAAQ,KAChBlhB,EAAUC,EAAAA,EAAAA,QACVgQ,GAAkBhO,EAAAA,EAAAA,QAAO,MACzBkf,IAAelf,EAAAA,EAAAA,QAAO,MAC5B,IAAwC/B,EAAAA,EAAAA,UAAS,IAAG,iBAA7C2B,GAAY,MAAEsC,GAAe,MACpC,IAA0BjE,EAAAA,EAAAA,UAAS,IAAG,iBAA/BkhB,GAAK,MAAEC,GAAQ,MACtB,IAAsBnhB,EAAAA,EAAAA,UAAS,IAAG,iBAA3BjC,GAAG,MAAEqjB,GAAM,MAClB,IAA4BphB,EAAAA,EAAAA,YAAU,iBAA/BqhB,GAAM,MAAEC,GAAS,MACxB,IAAkCthB,EAAAA,EAAAA,YAAU,iBAArCuhB,GAAS,MAAEC,GAAY,MAC9B,IAA0DxhB,EAAAA,EAAAA,YAAU,iBAA7DyhB,GAAqB,MAAEC,GAAwB,MACtD,IAAgD1hB,EAAAA,EAAAA,UAAS,MAAK,iBAAvD2hB,GAAgB,MAAEC,GAAmB,MAC5C,IAAsC5hB,EAAAA,EAAAA,UAAS,IAAG,iBAA3CoD,GAAW,MAAE+L,GAAc,MAC5B9L,GAAiBzD,aAAaC,QAAQ,WACtCF,GAAeC,aAAaC,QAAQ,SAElC1D,GAAyB5C,EAAzB4C,UACF0T,GAD2BtW,EAAdsoB,UACU/R,MAC3B,SAACnT,GAAI,MAA2B,iBAAtBA,EAAKiT,YAA+B,IAGhD,IAAsC5P,EAAAA,EAAAA,UAAS,IAAG,iBAElD,IAFkB,MAAgB,OAENA,EAAAA,EAAAA,UAAS,KAAG,iBAAjCyP,GAAM,MAAEC,GAAS,OAmBxBpT,EAAAA,EAAAA,YAAU,WAdRuE,IAAM,CACJC,OAAQ,MACRC,IAAKjB,EAAO,iDAA6CH,MACxDuB,MAAK,SAACE,GACIA,EAAKlF,KAEXwB,SAAQ,SAACf,GATA,aAURA,EAAKiT,cACPF,GAAU,CAAC/S,GAEf,GACF,GAKF,GAAG,IAEH,QAA8BqD,EAAAA,EAAAA,UAAS,CACrC8hB,OAAQ,CAAE1d,MAAO,KAAM2d,UAAWC,EAAAA,GAAAA,UAClC3f,KAAM,CACJ4f,SAAUC,EAAAA,GAAAA,IACVC,YAAa,CAAC,CAAE/d,MAAO,KAAM2d,UAAWC,EAAAA,GAAAA,eAG1CI,eAAgB,CAAEhe,MAAO,KAAM2d,UAAWC,EAAAA,GAAAA,IAC1Cne,OAAQ,CACNoe,SAAUC,EAAAA,GAAAA,GACVC,YAAa,CAAC,CAAE/d,MAAO,KAAM2d,UAAWC,EAAAA,GAAAA,YAE1C,iBAZKK,GAAO,MAAEC,GAAU,MAcpBC,GAAe,CACnBC,WAAYrmB,GACZsmB,KAAM,GACNC,OAAQ,GACRC,SAAU,GACVC,OAAQ,GACRzd,SAAU,IAEZ,IAAgCnF,EAAAA,EAAAA,UAASuiB,IAAa,iBAA/Chd,GAAQ,MAAE1D,GAAW,OAC5BvF,EAAAA,EAAAA,YAAU,WAAO,GAAG,CAClBiJ,GACAxH,GACQ,OAARwH,SAAQ,IAARA,QAAQ,EAARA,GAAUkd,KACF,OAARld,SAAQ,IAARA,QAAQ,EAARA,GAAUmd,OACVrB,KAEF,IAQA,IAA0BrhB,EAAAA,EAAAA,YAAU,iBAA7B6iB,GAAK,MAAEC,GAAQ,MAEhB1V,GAAiB,SAACkQ,EAAS3Q,QA6GftH,GAAdiY,EAAQziB,GA5GM,WACd,IAAIqB,EAAO,CACTrB,GAAIgoB,GACJE,cAAe1f,GACf2f,gBAAiBrjB,GACjBsjB,QAAS,IACTC,WAAYvjB,GACZwjB,SAAU,IACV1S,UAAWpN,GACX+f,eAAgB,aAChBC,WAAY,IACZC,mBAAoB,IACpBC,SAAUpnB,GACVsmB,KAAa,IAAP1kB,GAAY0jB,GAAwB1jB,GAC1CylB,KAA0B,KAAZ,OAARje,SAAQ,IAARA,QAAQ,EAARA,GAAUmd,QAAerB,GAAiB,OAAR9b,SAAQ,IAARA,QAAQ,EAARA,GAAUmd,OAGlDC,SACwB,KAAd,OAARpd,SAAQ,IAARA,QAAQ,EAARA,GAAUod,UACN3b,IAAc,OAAPsW,QAAO,IAAPA,OAAO,EAAPA,EAASqF,UAAUzb,OAAO,cACzB,OAAR3B,SAAQ,IAARA,QAAQ,EAARA,GAAUod,SAChBC,OACuB,MAAb,OAARrd,SAAQ,IAARA,QAAQ,EAARA,GAAUqd,QACN5b,IAAc,OAAPsW,QAAO,IAAPA,OAAO,EAAPA,EAASsF,QAAQ1b,OAAO,cACvB,OAAR3B,SAAQ,IAARA,QAAQ,EAARA,GAAUqd,OAChBa,eAAgB,EAChBC,aAAgC,KAAV,OAARne,SAAQ,IAARA,QAAQ,EAARA,GAAUkd,MAAalB,GAAoB,OAARhc,SAAQ,IAARA,QAAQ,EAARA,GAAUkd,MAG7D5hB,IAAM,CACJC,OAAQ,OACRC,IACEjB,EAAO,6DAET5D,KAAMA,IACLgF,MAAK,SAACI,GACP8M,GAAU,GACV0R,GAAc,GACdte,YAAW,WACTse,GAAc,GACd1R,GAAU,EACZ,GAAG,KACHwS,GAAmB,GACnBhf,KAEAC,GAAY0gB,GACd,IACAxB,GAAkB,GAClBC,GAAS,EACX,CA2D4B2C,GAzDX,WAAO,IAAD,IACjBC,EAAQ,CACVb,cAAe1f,GACf2f,gBAAiBrjB,GACjBsjB,QAAS,IACTC,WAAYvjB,GACZwjB,SAAU,IACV1S,UAAWpN,GACX+f,eAAgB,aAChBC,WAAY,IACZC,mBAAoB,IACpBC,SAAUpnB,GACVsmB,KAAM1kB,GACNylB,KAAMje,GAASmd,OACfC,SACuB,IAArBpd,GAASod,SACS,QADK,EACnBvf,GAAY,UAAE,aAAd,EAAgBygB,eAChBte,GAASod,SACfC,OACqB,IAAnBrd,GAASqd,OACS,QADG,EACjBxf,GAAY,UAAE,aAAd,EAAgB0gB,aACR,OAARve,SAAQ,IAARA,QAAQ,EAARA,GAAUqd,OAChBa,eAAgB,EAChBC,aAAcne,GAASkd,KACvBsB,qBAAsB,GAGF,KAAlBxe,GAASkd,MAAmC,KAApBld,GAASmd,OACnC9B,GAAmB,GAEE,IAAjBrb,GAASkd,MAAkC,KAApBld,GAASmd,SAClC7hB,IAAM,CACJC,OAAQ,OACRC,IACEjB,EAAO,6DAET5D,KAAM0nB,IACL1iB,MAAK,SAACI,GACPsf,GAAmB,GACnBC,GAAa,GACbhf,GAAY0gB,IACZnU,GAAU,GACV0R,GAAc,GACdte,YAAW,WACTse,GAAc,GACd1R,GAAU,GACVyS,GAAa,GACbjf,IACF,GAAG,IACL,IAEAmf,GAAkB,GAClBC,GAAS,GAGf,CAEwCgD,EAE1C,GAgCA1nB,EAAAA,EAAAA,YAAU,WAAO,IAAD,EAtBduE,IAAM,CACJC,OAAQ,MACRC,IACEjB,EAAO,4DAC8C3D,MAEtD+E,MAAK,SAAUC,GACd,IAAIC,EAAOD,EAASjF,KACpBiT,GAAe/N,EACjB,IACCC,OAAM,SAAUF,GAAW,IAcnBsf,EAAS,GAEpB,GAAyB,KAAV,QAAX,EAAAA,EAAS,UAAE,aAAX,EAAagC,MAAY,CAC3B,IAAMwB,EAAOzX,SAASC,uBACpB,4BACA,GACE,OAAJwX,QAAI,IAAJA,GAAAA,EAAMC,aAAa,QAAS,qBACxB,OAAJD,QAAI,IAAJA,GAAAA,EAAMxG,QACNjc,YAAW,WACT,IAAM2iB,EAAW3X,SAASC,uBACxB,4BACA,GACM,OAAR0X,QAAQ,IAARA,GAAAA,EAAUD,aAAa,QAAS,YAChC,IAAME,EAAa5X,SAASC,uBAC1B,8BACA,GACQ,OAAV2X,QAAU,IAAVA,GAAAA,EAAYF,aAAa,QAAS,sBAExB,OAAVE,QAAU,IAAVA,GAAAA,EAAY1G,iBACV,SACA,SAAUnb,GAAI,IAAD,EACmB,EAAJ,MAAX,QAAX,EAAAke,EAAS,UAAE,aAAX,EAAagC,QACf/B,EAAYD,EAAS9C,MAAM,EAAG8C,EAAS/T,SACvCqU,GAAkB,GAClBH,GAAmB,GACnBI,GAAS,GACW,QAApB,EAAAC,GAAa3W,eAAO,OAApB,EAAsB+Z,cAE1B,IACA,EAEJ,GAAG,IACL,CACF,GAAG,CAAC5D,KAEJnkB,EAAAA,EAAAA,YAAU,WACR,IAAIgoB,EAAO9X,SAASC,uBAAuB,4BAEvC8X,EAAe7S,KAAKC,MACtBD,KAAKE,UAAU6O,EAAS/jB,QAAO,SAAC7C,GAAC,YAAawL,GAARxL,EAAEgB,EAAe,MAGpDsT,QAAkB9I,GAARif,GACb9iB,YAAW,WACT,IAAK,IAAIuL,EAAI,EAAGA,EAAIuX,EAAK5X,OAAQK,IAAK,CAAC,IAAD,EACG,WAApB,QAAf,EAAAwX,EAAaxX,UAAE,aAAf,EAAiByX,iBACnBF,EAAKvX,GAAGH,UAAUC,IAAI,cAExByX,EAAKvX,GAAGmX,aAAa,QAAS,OAChC,CACF,GAAG,IAEP,GAAG,CAACzD,EAAUtS,KAYd7R,EAAAA,EAAAA,YAAU,WAAO,GAAG,CACJ,QADI,EAClB8G,GAAY,UAAE,aAAd,EAAgBygB,eACF,QADgB,EAC9BzgB,GAAY,UAAE,aAAd,EAAgB0gB,eAGlB,IAsDA,IAA4C9jB,EAAAA,EAAAA,UAAS,IAAG,iBAAjDykB,GAAc,MAAEC,GAAiB,OASxCpoB,EAAAA,EAAAA,YAAU,WAAO,GAAG,CAAC+kB,GAAQoD,KAC7B,IA2EME,GAAU,WACd9jB,IAAM,CACJC,OAAQ,MACRC,IAAKjB,EAAO,qCACXoB,MAAK,SAAUC,GAChB,IAAI+G,EAAM/G,EAASjF,KACnB+H,GAAgBiE,EAClB,GACF,GACA5L,EAAAA,EAAAA,YAAU,WAAO,GAAG,CAACqF,MACrBrF,EAAAA,EAAAA,YACE,SAACghB,GACCqH,KA3PF9jB,IAAM,CACJE,IAAKjB,EAAO,qCACXoB,MAAK,SAACE,GACP+f,GAAS/f,EAAKlF,KAChB,IAiBA2E,IAAM,CACJE,IACEjB,EAAO,qDAC+C,OAARyF,SAAQ,IAARA,QAAQ,EAARA,GAAUkd,QACzDvhB,MAAK,SAACE,GACPggB,GAAOhgB,EAAKlF,KACd,GAmOA,GACA,CAAS,OAARqJ,SAAQ,IAARA,QAAQ,EAARA,GAAUkd,OAGb,IAAM7gB,GAAU,WACdwM,GAAU,GACV2B,EAAgBzF,QAAU,IAAIsa,gBAC9B/jB,IAAM,CACJE,IACEjB,EAAO,iEACmD3D,MAC3D+E,MAAK,SAACE,GAEP,IADA,IAAM0P,EAAU1P,EAAKlF,KACZ6Q,EAAI,EAAGA,EAAI+D,EAAQpE,OAAQK,IAClC+D,EAAQ/D,GAAiB,aACO,MAA9B+D,EAAQ/D,GAAiB,aACrB,GACA/F,IAAO8J,EAAQ/D,GAAiB,cAAG7F,OAAO,eAChD4J,EAAQ/D,GAAa,SACO,MAA1B+D,EAAQ/D,GAAa,SACjB,GACA/F,IAAO8J,EAAQ/D,GAAa,UAAG7F,OAAO,eAC5C4J,EAAQ/D,GAAW,OACO,MAAxB+D,EAAQ/D,GAAW,OACf,GACA/F,IAAO8J,EAAQ/D,GAAW,QAAG7F,OAAO,eAC1C4J,EAAQ/D,GAAmB,eACO,MAAhC+D,EAAQ/D,GAAmB,eACvB,GACgC,GAAhC+D,EAAQ/D,GAAmB,eAC3B,SACA,SACN+D,EAAQ/D,GAAa,SACO,MAA1B+D,EAAQ/D,GAAa,SACjB,GAC0B,GAA1B+D,EAAQ/D,GAAa,SACrB,MACA,KACN+D,EAAQ/D,GAAS,KACQ,OAAvB+D,EAAQ/D,GAAS,KAAa,GAAK+D,EAAQ/D,GAAS,KAGxD2T,EAAY5P,GAEZtP,YAAW,WACT4M,GAAU,EACZ,GAAG,IACL,GACF,GAOA9R,EAAAA,EAAAA,YAAU,WACRsF,IACF,GAAG,IACH,IAmDA,IAAwC5B,EAAAA,EAAAA,UAAS,IAAG,iBAA7C6kB,GAAY,MAAEC,GAAe,MAqB9B9b,IAdF,+BACE,kBAAMnK,UAAU,qCAAoC,WAClD,cAAGA,UAAU,kBACb,SAAC,IAAS,CACR0B,KAAK,SACL7G,MAAO,CAAEqrB,MAAO,SAChB3gB,MAAOygB,GACPza,SAAU,SAAC7H,GAXnBuiB,GAWkDviB,EAX5BmH,OAAOtF,MAWuB,EAC5CmG,YAAY,wBAQhBya,GAAevE,EAAS/jB,QAAO,SAACC,GAAI,OACxCkB,OAAOC,OAAOnB,GAAM4P,MAAK,SAACnI,GAAK,OAC7BzJ,OAAOyJ,GAAO6gB,cAAchY,SAAS4X,GAAaI,cAAc,GACjE,IAGH,OACE,gCACGtE,GACC,gBAAK9hB,UAAU,kBAAiB,UAC9B,6BACE,SAAC,MAAa,IAAG,OAEhB,8DAIL,GAEDghB,GACC,iBAAKhhB,UAAU,oBAAmB,WAChC,SAAC,MAAO,IACP,8BAGH,GAGDuE,GAAYhI,KAAI,SAACiO,GAAI,OACpB,gBAAKxK,UAAU,YAAW,UACxB,iBAAKA,UAAU,YAAW,WACxB,gBAAKA,UAAU,WAAU,UACvB,0BACGwK,EAAKc,YAAY,IAAEd,EAAKkX,YAAY,UAGzC,gBAAK1hB,UAAU,WAAU,UACvB,wBAAI,oBAEN,gBAAKA,UAAU,mBAEb,KAER,SAACoT,EAAA,EAAiB,CAChBxC,OAAQA,GACRyC,kBA/lBkB,CAAC,WAAY,OAAQ,UAAW,kBAkmBnD/D,GACC,gBAAKtP,UAAU,cAAa,UAC1B,SAACuT,EAAA,EAAM,CAACC,YApII,WAClBtC,EAAgBzF,SAAWyF,EAAgBzF,QAAQgI,QACnDlE,GAAU,EACZ,MAoIM,GAEDL,GACC,gBAAKlP,UAAU,+BAA8B,UAC3C,UAAC,IAAS,CACRA,UAAU,qEACVuF,MAAO4gB,GACPrG,kBA1jBgB,SAACpc,GACzB,IAAI2iB,GAAS,OAAOzE,GACd5B,EAAmBtc,EAAnBsc,QACNqG,EADyB3iB,EAAVoK,OACIkS,EAEnB6B,EAAYwE,GACZ9X,GAAe7K,EAAEsc,QACnB,EAojBUJ,WAAS,EACTJ,SAAS,MACTlS,KAAM,KACNnD,OAAQA,GACRqZ,QAASA,GACT8C,SAAU,SAAC5iB,GAAC,OAAK+f,GAAW/f,EAAE8f,QAAQ,EACtC+C,UAAWzD,GACX0D,kBAAmB,SAAC9iB,GAAC,OAAKqf,GAAoBrf,EAAE6B,MAAM,EACtDkhB,QAAQ,KACRhH,eAAa,EACbI,aAAW,EACX6G,aAAa,QAGbC,iBAAiB,SACjBjH,aAAa,oBAAmB,WAEhC,SAAC,IAAM,CACL9M,MAAM,OACNzI,OAAO,OACPuI,UAAQ,EACRC,KAxUa,SAAC8L,GACxB,OAAO,iBAAK9c,MAAO8c,EAAQmF,KAAK,UAAC,IAAEnF,EAAQmF,OAC7C,EAuUYvD,OAAQ,SAAC7hB,GAAO,OA7JA,SAACojB,GAAc,IAAD,EAGxC,OAFAiB,GAAyC,QAAjB,EAACjB,EAASnD,eAAO,aAAhB,EAAkBmI,mBAGzC,0BACE,0BACE,oBACE5qB,GAAG,OACHwH,KAAK,OACLxD,UAAS,eACP8hB,IAAoBF,EAASnD,QAAQoI,OAAS,eAAiB,IAEjEtb,SAAU,SAAC7H,GACTV,IAAY,SAACW,GAAS,yBACjBA,GAAS,IACZigB,KAAMlgB,EAAEmH,OAAOtF,OAAK,GAExB,EAAE,WAEF,mBAAQA,MAAM,GAAE,SAAE,sBACZ,OAAL8c,SAAK,IAALA,QAAK,EAALA,GAAO9lB,KAAI,SAACuB,GAAI,OACf,mBAEEyH,MAAOzH,EAAK9B,GACZmQ,SAAUrO,EAAK9B,KAAO4lB,EAASnD,QAAQoI,OAAO,SAE7C/oB,EAAKiT,cAJDjT,EAAK9B,GAKH,UAMrB,CA4HiC8qB,CAAoBtoB,EAAQ,KAEnD,SAAC,IAAM,CACLoU,MAAM,OACNzI,OAAO,OACPuI,UAAQ,EACRC,KA5UW,SAAC8L,GACtB,OAAO,gBAAK9c,MAAO8c,EAAQkG,KAAK,SAAElG,EAAQkG,MAC5C,EA2UYtE,OAAQ,SAAC7hB,GAAO,OAxXL,SAACojB,GAEtB,OADAqC,GAASrC,EAASnD,QAAQziB,KAExB,gBAAKgE,UAAU,yBAAwB,UACrC,gBACEA,UAAS,WACP8hB,IAAoBF,EAASnD,QAAQkG,KAAO,cAAgB,IAC3D,UAEH,SAAC,EAAAthB,wBAAuB,CACtBC,MAAOR,GACPpB,KAAK,OACL8B,KAAK,SACLxH,GAAG,SACHuJ,MAAOqc,EAASnD,QAAQkG,KACxBlP,YAAa,CAAEjD,KAAM,CAAC,KAAM,OAAQ,oBACpCkD,oBAAoB,OAEpB5S,aAAcA,GACdiK,kBAC2B,MAAzB6U,EAASnD,QAAQkG,KAAe,GAAK/C,EAASnD,QAAQkG,KAExDmB,QAASA,GAETriB,SAAU,SAACC,GACTke,EAASmF,eAAerjB,EAAEF,MAGxBR,IAAY,SAACW,GAAS,yBACjBA,GAAS,IACZkgB,OAAQngB,EAAEsjB,QAAM,GAGtB,EACAljB,UAAU,OAKpB,CAiViCmjB,CAAezoB,EAAQ,KAE9C,SAAC,IAAM,CACLoU,MAAM,WACNzI,QAAQ,0BAAM,cACduI,UAAQ,EACRC,KA1PW,SAAC8L,GACtB,OAAO,gBAAK9c,MAAO8c,EAAQqF,SAAS,SAAErF,EAAQqF,UAChD,EAyPYzD,OAAQ,SAAC7hB,GAAO,OA/TL,SAACojB,GAAc,IAAD,MAKnC,OAJAa,GAA0B,QAAjB,EAACb,EAASnD,eAAO,aAAhB,EAAkByI,SAEd,IAAIxiB,MAGhB,SAAC,IAAU,CACT1E,UAAS,gBACP8hB,IAAoBF,EAASnD,QAAQqF,SAAW,cAAgB,IAElEtgB,KAAK,WACLxH,GAAG,WACHmQ,SAAUyV,EAASkC,SACnBvX,mBAAiB,EACjBC,kBAAkB,EAClB2a,aAAa,MACb1a,aAAa,SACblH,MAAOqc,EAASnD,QAAQqF,SACxBxX,WAAW,cACXf,SAAU,SAAC7H,GACT,IAAM0jB,EAAejf,IAAOzE,GAAG2E,OAAO,eACtCuZ,EAASmF,eAAeK,GACxBpkB,IAAY,SAACa,GAAI,yBACZA,GAAI,cACN,WAAasE,IAAOzE,GAAG2E,OAAO,eAAa,GAEhD,EACAuD,UAAW,SAAClI,GACVA,EAAEwH,gBACJ,EACAwB,QAASvE,IAAqB,QAAf,EAAC5D,GAAY,UAAE,aAAd,EAAgBygB,gBAAgBlY,SAChDua,QAASlf,IAAqB,QAAf,EAAC5D,GAAY,UAAE,aAAd,EAAgB0gB,cAAcnY,UAGpD,CA6RiCwa,CAAe9oB,EAAQ,KAE9C,SAAC,IAAM,CACLoU,MAAM,SACNzI,QAAQ,0BAAM,YACduI,UAAQ,EACRC,KA9PS,SAAC8L,GACpB,OAAO,gBAAK9c,MAAO8c,EAAQsF,OAAO,SAAEtF,EAAQsF,QAC9C,EA6PY1D,OAAQ,SAAC7hB,GAAO,OAlST,SAACojB,GAAc,IAAD,IAC/B,OACE,SAAC,IAAU,CACT5hB,UAAS,gBACP8hB,IAAoBF,EAASnD,QAAQsF,OAAS,cAAgB,IAEhEvgB,KAAK,SACLxH,GAAG,SACHmrB,aAAa,MACbhb,SAAUyV,EAASmC,OACnBxX,mBAAiB,EACjBC,kBAAkB,EAClBC,aAAa,SACblH,MAAOqc,EAASnD,QAAQsF,OACxBzX,WAAW,cACXf,SAAU,SAAC7H,GACT,IAAM0jB,EAAejf,IAAOzE,GAAG2E,OAAO,cACtCuZ,EAASmF,eAAeK,GACxBpkB,IAAY,SAACa,GAAI,yBACZA,GAAI,cACN,SAAWsE,IAAOzE,GAAG2E,OAAO,eAAa,GAE9C,EACAuD,UAAW,SAAClI,GACVA,EAAEwH,gBACJ,EACAwB,QAASvE,IAAqB,QAAf,EAAC5D,GAAY,UAAE,aAAd,EAAgBygB,gBAAgBlY,SAChDua,QAASlf,IAAqB,QAAf,EAAC5D,GAAY,UAAE,aAAd,EAAgB0gB,cAAcnY,UAGpD,CAoQiCya,CAAW/oB,EAAQ,KAG1C,SAAC,IAAM,CACLoU,MAAM,iBACNzI,OAAO,kBACPuI,UAAQ,EACRC,KArViB,SAAC8L,GAC5B,IAAIzjB,EAAIyjB,EAAQkH,eAIhB,OAFAE,GAAkB7qB,IAEX,gBAAK2G,MAAO8c,EAAQkH,eAAe,SAAElH,EAAQkH,gBACtD,KAiVU,SAAC,IAAM,CACL/S,MAAM,aACNzI,OAAO,cACPuI,UAAQ,EACRC,KAjWa,SAAC8L,GAExB,OADAkE,GAAalE,EAAQoI,SACd,gBAAKllB,MAAO8c,EAAQ4F,WAAW,SAAE5F,EAAQ4F,YAClD,KAgWU,SAAC,IAAM,CACLzR,MAAM,eACNzI,OAAO,gBACPuI,UAAQ,EACRC,KA1We,SAAC8L,GAC1B,OAAO,gBAAK9c,MAAO8c,EAAQjD,aAAa,SAAEiD,EAAQjD,cACpD,KA0WU,SAAC,IAAM,CAAC5I,MAAM,WAAWzI,OAAO,WAAWuI,UAAQ,KAW1B,IAAxB1B,GAAWpC,WACV,SAAC,IAAM,CACLgE,MAAM,UACN/X,MAAO,CAAE2lB,UAAW,UACpBrW,OAAO,UACPqd,WAAS,EACT9U,UAAQ,SAMhB,IAEF,iBAAK1S,UAAU,uDAAsD,WAazC,KAAf,OAAVgR,SAAU,IAAVA,QAAU,EAAVA,GAAYpC,WACX,oBACE5O,UAAU,kBACVqL,SAAUgD,EACV1M,MAAO,cACPC,QA/MS,WAAO,IAAD,IAClByM,IACH8T,GAAS,GACTD,GAAkB,IAEpB,IAAM7kB,EAAO,CACXumB,KAAM,GACNE,SAAU3b,IAAqB,QAAf,EAAC5D,GAAY,UAAE,aAAd,EAAgBygB,gBAAgB3c,OAAO,eACxD0b,OAAQ5b,IAAqB,QAAf,EAAC5D,GAAY,UAAE,aAAd,EAAgB0gB,cAAc5c,OAAO,eACpDsc,KAAM,IAEJtG,EAAK,GACTA,EAAGtf,KAAK1B,GACRwkB,EAAY,GAAD,OAAKxD,GAAG,OAAIuD,IACzB,EAiM8B,WAEpB,SAAC,MAAM,IAAG,UAEV,MAiBsB,KAAf,OAAV5Q,SAAU,IAAVA,QAAU,EAAVA,GAAYpC,WACX,oBACE5S,GAAG,SACHgE,UAAU,kBACVqL,SAAU4W,EACVtgB,MAAO,WACPC,QAAS,YAhfN,WAAO,IAAD,EAEuD,QADxE,EAAA+L,SACGC,uBAAuB,4CAA4C,UAAE,OADxE,EAEIgR,OACN,CA6eYG,EACF,EAAE,WAEF,SAAC,MAAM,IAAG,WAEV,MAgBsB,KAAf,OAAV/N,SAAU,IAAVA,QAAU,EAAVA,GAAYpC,WACX,oBACE5O,UAAU,oBACVqL,SAAU4W,EACVtgB,MAAO,qBACPC,QAAS,YArgBL,WAAO,IAAD,EAC8C,QAAhE,EAAA+L,SAASC,uBAAuB,8BAA8B,UAAE,OAAhE,EAAkEgR,QAClEmD,GAAmB,EACrB,CAmgBYnB,EACF,EAAE,WAEF,SAAC,MAAO,CAAChmB,SAAU,SAAU,aAE7B,UAKZ,E,sBC9KA,MAtpBA,SAAmBF,GAAQ,IAAD,EAExB,GAAwByG,EAAAA,EAAAA,UAAS,CAAC,CAAC,IAAG,eAA/BsmB,EAAI,KAAEC,EAAO,KACZC,EAAgBjtB,EAAhBitB,IAAKC,EAAWltB,EAAXktB,GAAIC,EAAOntB,EAAPmtB,GACjB,GAA4B1mB,EAAAA,EAAAA,WAAS,GAAM,eAApCmO,EAAM,KAAEC,EAAS,KACxB,GAA4BpO,EAAAA,EAAAA,WAAS,GAAK,eACpCF,GADO,KAAW,KACRC,EAAAA,EAAAA,SAChBiC,QAAQC,IAAI+E,IAAOyf,GAAIvf,OAAO,eAC9BlF,QAAQC,IAAIykB,GACZ,IAAIC,EAAYna,SAASoa,cAAc,OAEjChlB,EAAU,WACdwM,GAAU,GACVvN,IAAAA,IACOf,EAAO,+CAA2C0mB,IACtDtlB,MAAK,SAACgH,GACL,IAAM4I,EAAU5I,EAAIhM,KACpBqqB,EAAQzV,GACR1C,GAAU,EACZ,IACC/M,OAAM,SAACC,GACN8M,GAAU,EACZ,GACJ,EAWA,OAVAuY,EAAUE,UAAmB,QAAV,EAAGP,EAAK,UAAE,aAAP,EAASQ,aAE/BxqB,EAAAA,EAAAA,YAAU,WACRsF,GACF,GAAG,CAAC6kB,KACJnqB,EAAAA,EAAAA,YAAU,WACRsF,GACF,GAAG,CAAC8kB,KAIF,iBAAK7nB,UAAU,aAAY,UACxBsP,GAAS,SAACiE,EAAA,EAAM,IAAM,IACvB,mBAAOvT,UAAU,iCAAgC,WAC/C,kBAAOA,UAAU,SAAQ,UACvB,2BACE,eAAIlF,MAAM,KAAKC,OAAO,OAAM,SACzB0sB,EAAKlrB,KAAI,SAAC2rB,GAAO,OAChBA,EAAQC,QAAU,GAClBD,EAAQE,SAAW,GACnBF,EAAQG,aAAe,GACvBH,EAAQI,YAAc,GACtBJ,EAAQK,QAAU,GAClBL,EAAQM,SAAW,GACjB,iBAAKxoB,UAAU,gBAAe,WAC5B,iBACEA,UAAU,aACV2B,MAAM,kCAER,iBAAM3B,UAAU,YAChB,iBAAMA,UAAU,eAGlB,iBAAKA,UAAU,gBAAe,WAC5B,iBAAMA,UAAU,YAChB,iBAAMA,UAAU,YAChB,iBACEA,UAAU,eACV2B,MAAM,0FAGX,OAGL,eACE7G,MAAM,MACND,MAAO,CAAE2lB,UAAW,SAAUiI,cAAe,UAAW,SACzD,SAGD,eACE3tB,MAAM,KACND,MAAO,CAAE2lB,UAAW,SAAUiI,cAAe,UAAW,SACzD,sBAGD,eACE3tB,MAAM,MACND,MAAO,CAAE2lB,UAAW,SAAUiI,cAAe,UAAW,SACzD,gCAGD,eACE3tB,MAAM,MACND,MAAO,CAAE2lB,UAAW,SAAUiI,cAAe,UAAW,SACzD,2BAGD,eACE3tB,MAAM,MACND,MAAO,CAAE2lB,UAAW,SAAUiI,cAAe,UAAW,SACzD,0BAGD,eACE3tB,MAAM,MACND,MAAO,CAAE2lB,UAAW,SAAUiI,cAAe,UAAW,SACzD,gCAGD,eACE3tB,MAAM,MACND,MAAO,CAAE2lB,UAAW,SAAUiI,cAAe,UAAW,SACzD,kCAGD,eACE3tB,MAAM,MACND,MAAO,CAAE2lB,UAAW,SAAUiI,cAAe,UAAW,SACzD,oCAKL,mBAAOzoB,UAAU,YAAW,WAC1B,wBACGynB,EAAKlrB,KAAI,SAAC2rB,GAAO,uBAChB,iCACE,gBAAIntB,OAAO,OAAM,UACdmtB,EAAQG,aAAe,GACtB,iBAAKroB,UAAU,gBAAe,WAC5B,iBACEA,UAAU,aACV2B,MAAM,qBAER,iBAAM3B,UAAU,YAChB,iBAAMA,UAAU,cAGlB,GAEDkoB,EAAQG,cAAgB,GAAKH,EAAQG,cAAgB,GACpD,iBAAKroB,UAAU,gBAAe,WAC5B,iBAAMA,UAAU,YAChB,iBACEA,UAAU,eACV2B,MAAM,sCAER,iBAAM3B,UAAU,cAGlB,GAEDkoB,EAAQG,aAAe,GACtB,iBAAKroB,UAAU,gBAAe,WAC5B,iBAAMA,UAAU,YAChB,iBAAMA,UAAU,YAChB,iBACEA,UAAU,eACV2B,MAAM,uBAIV,OAGJ,eAAI7G,MAAM,KAAI,SAAC,mBACf,eAAIA,MAAM,MAAMkB,GAAG,eAAc,UAC/B,iBAAMnB,MAAO,CAAEqrB,MAAO,SAAU,SACT,QADS,EAC7BgC,EAAQQ,oBAAY,aAApB,EAAsBC,eAAe,cAG1C,eAAI7tB,MAAM,MAAMkB,GAAG,cAAa,UAC9B,iBAAMnB,MAAO,CAAEqrB,MAAO,SAAU,SACV,QADU,EAC7BgC,EAAQU,mBAAW,aAAnB,EAAqBD,eAAe,cAGzC,eAAI7tB,MAAM,MAAMkB,GAAG,cAAa,UAC9B,iBAAMnB,MAAO,CAAEqrB,MAAO,SAAU,SACV,QADU,EAC7BgC,EAAQW,mBAAW,aAAnB,EAAqBF,eAAe,cAGzC,eAAI7tB,MAAM,MAAMkB,GAAG,cAAa,UAC9B,iBAAMnB,MAAO,CAAEqrB,MAAO,SAAU,SACV,QADU,EAC7BgC,EAAQY,mBAAW,aAAnB,EAAqBH,eAAe,cAGzC,eAAI7tB,MAAM,MAAMkB,GAAG,cAAa,UAC9B,iBAAMnB,MAAO,CAAEqrB,MAAO,SAAU,SACV,QADU,EAC7BgC,EAAQa,mBAAW,aAAnB,EAAqBJ,eAAe,cAGzC,eAAI7tB,MAAM,MAAMkB,GAAG,cAAa,UAC9B,iBAAMnB,MAAO,CAAEqrB,MAAO,SAAU,SACV,QADU,EAC7BgC,EAAQc,mBAAW,aAAnB,EAAqBL,eAAe,cAGzC,eAAI7tB,MAAM,MAAMkB,GAAG,cAAa,UAC9B,iBAAMnB,MAAO,CAAEqrB,MAAO,SAAU,SAAEgC,EAAQG,kBAE3C,OAGP,wBACGZ,EAAKlrB,KAAI,SAAC2rB,GAAO,qBAChB,iCACE,gBAAIntB,OAAO,OAAM,UACdmtB,EAAQM,SAAW,GAClB,iBAAKxoB,UAAU,gBAAe,WAC5B,iBACEA,UAAU,aACV2B,MAAM,qBAER,iBAAM3B,UAAU,YAChB,iBAAMA,UAAU,cAGlB,GAEDkoB,EAAQM,UAAY,GAAKN,EAAQM,UAAY,GAC5C,iBAAKxoB,UAAU,gBAAe,WAC5B,iBAAMA,UAAU,YAChB,iBACEA,UAAU,eACV2B,MAAM,sCAER,iBAAM3B,UAAU,cAGlB,GAEDkoB,EAAQM,SAAW,GAClB,iBAAKxoB,UAAU,gBAAgB2B,MAAM,kBAAiB,WACpD,iBAAM3B,UAAU,YAChB,iBAAMA,UAAU,YAChB,iBAAMA,UAAU,oBAGlB,OAGJ,wBAAI,aACJ,eAAIhE,GAAG,WAAU,UACf,kBAAMnB,MAAO,CAAEqrB,MAAO,SAAU,UACJ,aAAzB4B,EAAUmB,YACP,GACAnB,EAAUmB,YAAa,IACV,QADa,EAC7Bf,EAAQgB,gBAAQ,aAAhB,EAAkBP,eAAe,eAGtC,eAAI3sB,GAAG,UAAS,UACd,kBAAMnB,MAAO,CAAEqrB,MAAO,SAAU,UACJ,aAAzB4B,EAAUmB,YACP,GACAnB,EAAUmB,YACE,QADS,EACxBf,EAAQiB,eAAO,aAAf,EAAiBR,eAAe,eAGrC,eAAI3sB,GAAG,UAAS,UACd,kBAAMnB,MAAO,CAAEqrB,MAAO,SAAU,UAC7B,IACyB,aAAzB4B,EAAUmB,YACP,GACAnB,EAAUmB,YAAa,IACX,QADc,EAC7Bf,EAAQkB,eAAO,aAAf,EAAiBT,eAAe,eAGrC,eAAI3sB,GAAG,UAAS,UACd,kBAAMnB,MAAO,CAAEqrB,MAAO,SAAU,UAC7B,IACyB,aAAzB4B,EAAUmB,YACP,GACAnB,EAAUmB,YAAa,IACX,QADc,EAC7Bf,EAAQmB,eAAO,aAAf,EAAiBV,eAAe,eAGrC,eAAI3sB,GAAG,UAAS,UACd,kBAAMnB,MAAO,CAAEqrB,MAAO,SAAU,UAC7B,IACyB,aAAzB4B,EAAUmB,YACP,GACAnB,EAAUmB,YAAa,IACX,QADc,EAC7Bf,EAAQoB,eAAO,aAAf,EAAiBX,eAAe,eAGrC,eAAI3sB,GAAG,UAAS,UACd,kBAAMnB,MAAO,CAAEqrB,MAAO,SAAU,UAC7B,IACyB,aAAzB4B,EAAUmB,YACP,GACAnB,EAAUmB,YAAa,IAC1Bf,EAAQqB,cAGb,eAAIvtB,GAAG,UAAS,UACd,iBAAMnB,MAAO,CAAEqrB,MAAO,SAAU,SAAEgC,EAAQM,cAE3C,OAGP,wBACGf,EAAKlrB,KAAI,SAAC2rB,GAAO,uBAChB,iCACE,gBAAIntB,OAAO,OAAM,UACdmtB,EAAQC,QAAU,GACjB,iBAAKnoB,UAAU,gBAAe,WAC5B,iBACEA,UAAU,aACV2B,MAAM,qBAER,iBAAM3B,UAAU,YAChB,iBAAMA,UAAU,cAGlB,GAEDkoB,EAAQC,SAAW,GAAKD,EAAQC,SAAW,GAC1C,iBAAKnoB,UAAU,gBAAe,WAC5B,iBAAMA,UAAU,YAChB,iBACEA,UAAU,eACV2B,MAAM,sCAER,iBAAM3B,UAAU,cAGlB,GAEDkoB,EAAQC,QAAU,GACjB,iBAAKnoB,UAAU,gBAAe,WAC5B,iBAAMA,UAAU,YAChB,iBAAMA,UAAU,YAChB,iBACEA,UAAU,eACV2B,MAAM,uBAIV,OAGJ,wBAAI,0BACJ,eAAI3F,GAAG,UAAS,UACd,kBAAMnB,MAAO,CAAEqrB,MAAO,SAAU,UAC7B,IACyB,aAAzB4B,EAAUmB,YACP,GACAnB,EAAUmB,YAAa,IACX,QADc,EAC7Bf,EAAQsB,eAAO,aAAf,EAAiBb,eAAe,eAGrC,eAAI3sB,GAAG,SAAQ,UACb,kBAAMnB,MAAO,CAAEqrB,MAAO,SAAU,UAC7B,IACyB,aAAzB4B,EAAUmB,YACP,GACAnB,EAAUmB,YAAa,IACZ,QADe,EAC7Bf,EAAQuB,cAAM,aAAd,EAAgBd,eAAe,eAGpC,eAAI3sB,GAAG,SAAQ,UACb,kBAAMnB,MAAO,CAAEqrB,MAAO,SAAU,UAC7B,IACyB,aAAzB4B,EAAUmB,YACP,GACAnB,EAAUmB,YAAa,IACZ,QADe,EAC7Bf,EAAQwB,cAAM,aAAd,EAAgBf,eAAe,eAGpC,eAAI3sB,GAAG,SAAQ,UACb,kBAAMnB,MAAO,CAAEqrB,MAAO,SAAU,UAC7B,IACyB,aAAzB4B,EAAUmB,YACP,GACAnB,EAAUmB,YAAa,IACZ,QADe,EAC7Bf,EAAQyB,cAAM,aAAd,EAAgBhB,eAAe,eAGpC,eAAI3sB,GAAG,SAAQ,UACb,kBAAMnB,MAAO,CAAEqrB,MAAO,SAAU,UAC7B,IACyB,aAAzB4B,EAAUmB,YACP,GACAnB,EAAUmB,YAAa,IACZ,QADe,EAC7Bf,EAAQ0B,cAAM,aAAd,EAAgBjB,eAAe,eAGpC,eAAI3sB,GAAG,SAAQ,UACb,kBAAMnB,MAAO,CAAEqrB,MAAO,SAAU,UAC7B,IACyB,aAAzB4B,EAAUmB,YACP,GACAnB,EAAUmB,YAAa,IACZ,QADe,EAC7Bf,EAAQ2B,cAAM,aAAd,EAAgBlB,eAAe,eAGpC,eAAI3sB,GAAG,SAAQ,UACb,kBAAMnB,MAAO,CAAEqrB,MAAO,SAAU,UAAC,IAAEgC,EAAQC,cAE5C,OAGP,wBACGV,EAAKlrB,KAAI,SAAC2rB,GAAO,uBAChB,iCACE,gBAAIntB,OAAO,OAAM,UACdmtB,EAAQK,QAAU,GACjB,iBAAKvoB,UAAU,gBAAe,WAC5B,iBACEA,UAAU,aACV2B,MAAM,qBAER,iBAAM3B,UAAU,YAChB,iBAAMA,UAAU,cAGlB,GAEDkoB,EAAQK,SAAW,GAAKL,EAAQK,SAAW,GAC1C,iBAAKvoB,UAAU,gBAAe,WAC5B,iBAAMA,UAAU,YAChB,iBACEA,UAAU,eACV2B,MAAM,sCAER,iBAAM3B,UAAU,cAGlB,GAEDkoB,EAAQK,QAAU,GACjB,iBAAKvoB,UAAU,gBAAe,WAC5B,iBAAMA,UAAU,YAChB,iBAAMA,UAAU,YAChB,iBACEA,UAAU,eACV2B,MAAM,uBAIV,OAGJ,wBAAI,uBACJ,gBAAI3F,GAAG,UAAS,UACb,KACD,kBAAMnB,MAAO,CAAEqrB,MAAO,SAAU,UAC7B,IACyB,aAAzB4B,EAAUmB,YACP,GACAnB,EAAUmB,YAAa,IACX,QADc,EAC7Bf,EAAQ4B,eAAO,aAAf,EAAiBnB,eAAe,gBAGrC,gBAAI3sB,GAAG,SAAQ,UACZ,KACD,kBAAMnB,MAAO,CAAEqrB,MAAO,SAAU,UAC7B,IACyB,aAAzB4B,EAAUmB,YACP,GACAnB,EAAUmB,YAAa,IACZ,QADe,EAC7Bf,EAAQ6B,cAAM,aAAd,EAAgBpB,eAAe,gBAGpC,gBAAI3sB,GAAG,SAAQ,UACZ,KACD,kBAAMnB,MAAO,CAAEqrB,MAAO,SAAU,UAC7B,IACyB,aAAzB4B,EAAUmB,YACP,GACAnB,EAAUmB,YAAa,IACZ,QADe,EAC7Bf,EAAQ8B,cAAM,aAAd,EAAgBrB,eAAe,gBAGpC,eAAI3sB,GAAG,SAAQ,UACb,kBAAMnB,MAAO,CAAEqrB,MAAO,SAAU,UAC7B,IACyB,aAAzB4B,EAAUmB,YACP,GACAnB,EAAUmB,YAAa,IACZ,QADe,EAC7Bf,EAAQ+B,cAAM,aAAd,EAAgBtB,eAAe,eAGpC,eAAI3sB,GAAG,SAAQ,UACb,kBAAMnB,MAAO,CAAEqrB,MAAO,SAAU,UAC7B,IACyB,aAAzB4B,EAAUmB,YACP,GACAnB,EAAUmB,YAAa,IACZ,QADe,EAC7Bf,EAAQgC,cAAM,aAAd,EAAgBvB,eAAe,eAGpC,eAAI3sB,GAAG,SAAQ,UACb,kBAAMnB,MAAO,CAAEqrB,MAAO,SAAU,UAC7B,IACyB,aAAzB4B,EAAUmB,YACP,GACAnB,EAAUmB,YAAa,IACZ,QADe,EAC7Bf,EAAQiC,cAAM,aAAd,EAAgBxB,eAAe,eAGpC,eAAI3sB,GAAG,SAAQ,UACb,iBAAMnB,MAAO,CAAEqrB,MAAO,SAAU,SAAEgC,EAAQK,aAE3C,OAGP,wBACGd,EAAKlrB,KAAI,SAAC2rB,GAAO,uBAChB,iCACE,gBAAIntB,OAAO,OAAM,UACdmtB,EAAQI,YAAc,GACrB,iBAAKtoB,UAAU,gBAAe,WAC5B,iBACEA,UAAU,aACV2B,MAAM,qBAER,iBAAM3B,UAAU,YAChB,iBAAMA,UAAU,cAGlB,GAEDkoB,EAAQI,aAAe,GAAKJ,EAAQI,aAAe,GAClD,iBAAKtoB,UAAU,gBAAe,WAC5B,iBAAMA,UAAU,YAChB,iBACEA,UAAU,eACV2B,MAAM,sCAER,iBAAM3B,UAAU,cAGlB,GAEDkoB,EAAQI,YAAc,GACrB,iBAAKtoB,UAAU,gBAAe,WAC5B,iBAAMA,UAAU,YAChB,iBAAMA,UAAU,YAChB,iBACEA,UAAU,eACV2B,MAAM,uBAIV,OAGJ,wBAAI,wBACJ,eAAI3F,GAAG,cAAa,UAClB,iBAAMnB,MAAO,CAAEqrB,MAAO,SAAU,SACV,QADU,EAC7BgC,EAAQkC,mBAAW,aAAnB,EAAqBzB,eAAe,cAGzC,eAAI3sB,GAAG,aAAY,UACjB,iBAAMnB,MAAO,CAAEqrB,MAAO,SAAU,SACX,QADW,EAC7BgC,EAAQmC,kBAAU,aAAlB,EAAoB1B,eAAe,cAGxC,eAAI3sB,GAAG,aAAY,UACjB,iBAAMnB,MAAO,CAAEqrB,MAAO,SAAU,SACX,QADW,EAC7BgC,EAAQoC,kBAAU,aAAlB,EAAoB3B,eAAe,cAGxC,eAAI3sB,GAAG,aAAY,UACjB,iBAAMnB,MAAO,CAAEqrB,MAAO,SAAU,SACX,QADW,EAC7BgC,EAAQqC,kBAAU,aAAlB,EAAoB5B,eAAe,cAGxC,eAAI3sB,GAAG,aAAY,UACjB,iBAAMnB,MAAO,CAAEqrB,MAAO,SAAU,SACX,QADW,EAC7BgC,EAAQsC,kBAAU,aAAlB,EAAoB7B,eAAe,cAGxC,eAAI3sB,GAAG,aAAY,UACjB,iBAAMnB,MAAO,CAAEqrB,MAAO,SAAU,SACX,QADW,EAC7BgC,EAAQuC,kBAAU,aAAlB,EAAoB9B,eAAe,cAGxC,eAAI3sB,GAAG,aAAY,UACjB,iBAAMnB,MAAO,CAAEqrB,MAAO,SAAU,SAAEgC,EAAQI,iBAE3C,OAGP,wBACGb,EAAKlrB,KAAI,SAAC2rB,GAAO,uBAChB,iCACE,gBAAIntB,OAAO,OAAM,UACdmtB,EAAQE,SAAW,GAClB,iBAAKpoB,UAAU,gBAAe,WAC5B,iBACEA,UAAU,aACV2B,MAAM,qBAER,iBAAM3B,UAAU,YAChB,iBAAMA,UAAU,cAGlB,GAEDkoB,EAAQE,UAAY,GAAKF,EAAQE,UAAY,GAC5C,iBAAKpoB,UAAU,gBAAe,WAC5B,iBAAMA,UAAU,YAChB,iBACEA,UAAU,eACV2B,MAAM,sCAER,iBAAM3B,UAAU,cAGlB,GAEDkoB,EAAQE,SAAW,GAClB,iBAAKpoB,UAAU,gBAAe,WAC5B,iBAAMA,UAAU,YAChB,iBAAMA,UAAU,YAChB,iBACEA,UAAU,eACV2B,MAAM,uBAIV,OAGJ,wBAAI,qBACJ,eAAI3F,GAAG,WAAU,UACf,iBAAMnB,MAAO,CAAEqrB,MAAO,SAAU,SACb,QADa,EAC7BgC,EAAQwC,gBAAQ,aAAhB,EAAkB/B,eAAe,cAGtC,eAAI3sB,GAAG,UAAS,UACd,iBAAMnB,MAAO,CAAEqrB,MAAO,SAAU,SACd,QADc,EAC7BgC,EAAQyC,eAAO,aAAf,EAAiBhC,eAAe,cAGrC,eAAI3sB,GAAG,UAAS,UACd,iBAAMnB,MAAO,CAAEqrB,MAAO,SAAU,SACd,QADc,EAC7BgC,EAAQ0C,eAAO,aAAf,EAAiBjC,eAAe,cAGrC,eAAI3sB,GAAG,UAAS,UACd,iBAAMnB,MAAO,CAAEqrB,MAAO,SAAU,SACd,QADc,EAC7BgC,EAAQ2C,eAAO,aAAf,EAAiBlC,eAAe,cAGrC,eAAI3sB,GAAG,UAAS,UACd,iBAAMnB,MAAO,CAAEqrB,MAAO,SAAU,SACd,QADc,EAC7BgC,EAAQ4C,eAAO,aAAf,EAAiBnC,eAAe,cAGrC,eAAI3sB,GAAG,UAAS,UACd,iBAAMnB,MAAO,CAAEqrB,MAAO,SAAU,SACd,QADc,EAC7BgC,EAAQ6C,eAAO,aAAf,EAAiBpC,eAAe,cAGrC,eAAI3sB,GAAG,UAAS,UACd,iBAAMnB,MAAO,CAAEqrB,MAAO,SAAU,SAAEgC,EAAQE,cAE3C,cAOjB,ECxhBA,MA3HA,SAA8B1tB,GAAQ,IAAD,EAC3BitB,EAAQjtB,EAARitB,IACR,GAAwBxmB,EAAAA,EAAAA,UAAS,CAAC,CAAC,IAAG,eAA/B9D,EAAI,KAAEqqB,EAAO,KACpB,GAAoCvmB,EAAAA,EAAAA,UAAS,IAAG,eAAzCoP,EAAU,KAAEC,EAAa,KAChC,GAAoCrP,EAAAA,EAAAA,UAAS,IAAG,eAAzC6R,EAAU,KACX/R,GAD0B,KAChBC,EAAAA,EAAAA,SAIVgd,EAAQ,CACZC,SAAUhW,MAASiW,QAAQ,QAAQpQ,IAAI,OAAQ,GAAG3F,OAAO,cACzDyE,OAAQ3E,MAASiW,QAAQ,QAAQpQ,IAAI,OAAQ,GAAG3F,OAAO,eAEzDlF,QAAQC,IAAI+E,MAASE,OAAO,eAC5B,OAAoBlH,EAAAA,EAAAA,UAAS+c,GAAM,eAA5BG,EAAE,KAAEC,EAAK,MA+ChB7gB,EAAAA,EAAAA,YAAU,WAfRuE,IAAAA,IAEIf,EAAO,4EACgEod,EAAGF,SAAQ,mBAAWE,EAAGvR,OAAM,gBAAQ6a,IAE/GtlB,MAAK,SAACgH,GACL,IACM4I,EAAU5I,EAAIhM,KAEhB2tB,EAAK,UAHQ,CAAC,CAAErM,eAAgB,qBAGT,OAAI1M,IAC/B9O,QAAQC,IAAI4nB,GACZtD,EAAQsD,EACV,IACCxoB,OAAM,SAACC,GAAW,GAIvB,GAAG,CAAC4b,IAEJ,IAAM4M,EAAkB,SAAC5tB,GAAI,OAC3B,gBAAK2C,UAAU,WAAW2B,MAAOtE,EAAKshB,eAAe,SAClDthB,EAAKshB,gBACF,EAGFpM,EAAwC,QAA1B,EAAGvT,OAAOwT,KAAKjC,UAAW,aAAvB,EAAyBhU,KAAI,SAACkW,EAAKvE,GAExD,OADA/K,QAAQC,IAAIqP,IAEV,SAAC,IAAM,CACLC,UAAQ,EAERC,KAAa,kBAAPF,EAA0BwY,EAAkB,KAClDrY,MAAOH,EACPtI,OAAQoG,EAAWkC,IAHdA,EAMX,IAQA,OANAhV,EAAAA,EAAAA,YAAU,WACRJ,EAAK,IAAMmT,EAAcqC,KAAKC,MAAMD,KAAKE,UAAU1V,EAAK,KAC1D,GAAG,CAACA,KAKF,4BACE,4BACE,8BACG8K,IAAOkW,EAAGF,UAAU9V,OAAO,eAAe,MAAI,IAC9CF,IAAOkW,EAAGvR,QAAQzE,OAAO,mBAE5B,kBAAMxN,MAAO,CAAEqrB,MAAO,SAAU,WAC9B,SAAC,MAAmB,CAClB9a,OAAO,UACP7J,KAAM,MACNK,QAzEa,WACrB0c,GAAM,SAACza,GAAI,yBACNA,GAAI,cACN,WAAasE,IAAOkW,EAAGF,UACrBoB,SAAS,OAAQ,GACjBlX,OAAO,eAAa,IAGzBiW,GAAM,SAACza,GAAI,yBACNA,GAAI,cACN,SAAWsE,IAAOkW,EAAGvR,QAAQyS,SAAS,OAAQ,GAAGlX,OAAO,eAAa,GAE1E,KA+DQ,SAAC,MAAoB,CACnB+C,OAAO,UACP7J,KAAM,MACNK,QA1FS,WACjB0c,GAAM,SAACza,GAAI,yBACNA,GAAI,cACN,WAAasE,IAAOkW,EAAGF,UAAUnQ,IAAI,OAAQ,GAAG3F,OAAO,eAAa,IAGvEiW,GAAM,SAACza,GAAI,yBACNA,GAAI,cACN,SAAWsE,IAAOkW,EAAGvR,QAAQkB,IAAI,OAAQ,GAAG3F,OAAO,eAAa,GAErE,WAoFI,mBAEA,SAAC2P,EAAA,EAA+B,CAC9B1K,KAAM,EACNjQ,KAAMA,EACNkV,eAAgBA,EAChBhC,WAAYA,EACZC,cAAeA,EACfwC,WAAYA,MAIpB,ECQA,MAlIA,SAAiCtY,GAAQ,IAAD,EAC9BitB,EAAQjtB,EAARitB,IACR,GAAwBxmB,EAAAA,EAAAA,UAAS,CAAC,CAAC,IAAG,eAA/B9D,EAAI,KAAEqqB,EAAO,KACpB,GAAoCvmB,EAAAA,EAAAA,UAAS,IAAG,eAAzCoP,EAAU,KAAEC,EAAa,KAChC,GAAoCrP,EAAAA,EAAAA,UAAS,IAAG,eAAzC6R,EAAU,KACX/R,GAD0B,KAChBC,EAAAA,EAAAA,SAIVgd,EAAQ,CACZC,SAAUhW,MAASiW,QAAQ,QAAQpQ,IAAI,OAAQ,GAAG3F,OAAO,cACzDyE,OAAQ3E,MAASiW,QAAQ,QAAQpQ,IAAI,OAAQ,IAAI3F,OAAO,eAE1D,GAAoBlH,EAAAA,EAAAA,UAAS+c,GAAM,eAA5BG,EAAE,KAAEC,EAAK,KAChBnb,QAAQC,IAAIib,EAAGF,UACfhb,QAAQC,IAAIib,EAAGvR,QAaf3J,QAAQC,IAAIib,EAAGvR,QAgBf3J,QAAQC,IAAIib,EAAGF,UACfhb,QAAQC,IAAIib,EAAGvR,SAuBfrP,EAAAA,EAAAA,YAAU,WAdRuE,IAAAA,IAEIf,EAAO,iEACqD0mB,EAAG,wBAAgBtJ,EAAGF,SAAQ,yBAAiBE,EAAGvR,SAE/GzK,MAAK,SAACgH,GACL,IAAM4I,EAAU5I,EAAIhM,KAEhB2tB,EAAK,UADQ,CAAC,CAAEE,iBAAkB,sBACX,OAAIjZ,IAC/B9O,QAAQC,IAAI4nB,GACZtD,EAAQsD,EACV,IACCxoB,OAAM,SAACC,GAAW,GAIvB,GAAG,CAAC4b,IAEJ,IAAM4M,EAAkB,SAAC5tB,GAAI,OAC3B,gBAAK2C,UAAU,WAAW2B,MAAOtE,EAAK6tB,iBAAiB,SACpD7tB,EAAK6tB,kBACF,EAGF3Y,EAAwC,QAA1B,EAAGvT,OAAOwT,KAAKjC,UAAW,aAAvB,EAAyBhU,KAAI,SAACkW,EAAKvE,GAExD,OADA/K,QAAQC,IAAIqP,IAEV,SAAC,IAAM,CACLC,UAAQ,EAERC,KAAa,oBAAPF,EAA4BwY,EAAkB,KACpDrY,MAAOH,EACPtI,OAAQoG,EAAWkC,IAHdA,EAMX,IAQA,OANAhV,EAAAA,EAAAA,YAAU,WACRJ,EAAK,IAAMmT,EAAcqC,KAAKC,MAAMD,KAAKE,UAAU1V,EAAK,KAC1D,GAAG,CAACA,KAKF,4BACE,4BACE,8BACG8K,IAAOkW,EAAGF,UAAU9V,OAAO,eAAe,MAAI,IAC9CF,IAAOkW,EAAGvR,QAAQzE,OAAO,mBAE5B,kBAAMxN,MAAO,CAAEqrB,MAAO,SAAU,WAC9B,SAAC,MAAmB,CAClB9a,OAAO,UACP7J,KAAM,MACNK,QA9Ea,WACrB0c,GAAM,SAACza,GAAI,yBACNA,GAAI,cACN,WAAasE,IAAOkW,EAAGF,UACrBoB,SAAS,OAAQ,GACjBlX,OAAO,eAAa,IAGzBiW,GAAM,SAACza,GAAI,yBACNA,GAAI,cACN,SAAWsE,IAAOkW,EAAGvR,QAAQyS,SAAS,OAAQ,GAAGlX,OAAO,eAAa,GAE1E,KAoEQ,SAAC,MAAoB,CACnB+C,OAAO,UACP7J,KAAM,MACNK,QAhGS,WACjB0c,GAAM,SAACza,GAAI,yBACNA,GAAI,cACN,WAAasE,IAAOkW,EAAGF,UAAUnQ,IAAI,OAAQ,GAAG3F,OAAO,eAAa,IAGvEiW,GAAM,SAACza,GAAI,yBACNA,GAAI,cACN,SAAWsE,IAAOkW,EAAGF,UAAUnQ,IAAI,OAAQ,IAAI3F,OAAO,eAAa,GAExE,WA0FI,mBAEA,SAAC2P,EAAA,EAA+B,CAC9B1K,KAAM,EACNjQ,KAAMA,EACNkV,eAAgBA,EAChBhC,WAAYA,EACZC,cAAeA,EACfwC,WAAYA,MAIpB,ECzBA,OA1GA,SAAoBtY,GAAQ,IAAD,EACjBitB,EAAQjtB,EAARitB,IACR,GAAwBxmB,EAAAA,EAAAA,UAAS,CAAC,CAAC,IAAG,eAA/B9D,EAAI,KAAEqqB,EAAO,KACpB,GAAoCvmB,EAAAA,EAAAA,UAAS,IAAG,eAAzCoP,EAAU,KAAEC,EAAa,KAChC,GAAoCrP,EAAAA,EAAAA,UAAS,IAAG,eAAzC6R,EAAU,KACX/R,GAD0B,KAChBC,EAAAA,EAAAA,UA+BhBzD,EAAAA,EAAAA,YAAU,WA1BRuE,IAAAA,IACOf,EAAO,uCAAmC0mB,IAE9CtlB,MAAK,SAACgH,GACL,IAAM4I,EAAU5I,EAAIhM,KAgBhB2tB,EAAK,UAfQ,CACf,CACEG,SAAU,YACVC,SAAU,YACVC,WAAY,cACZC,WAAY,cACZC,UAAW,4BACXrS,UAAW,aACX9D,WAAY,cACZoW,aAAc,gBACdC,WAAY,cACZC,YAAa,gBACbC,UAAW,gBAGY,OAAI1Z,IAC/B9O,QAAQC,IAAI4nB,GACZtD,EAAQsD,EACV,IACCxoB,OAAM,SAACC,GAAW,GAIvB,GAAG,IAEH,IAAMwoB,EAAkB,SAAC5tB,GAAI,OAC3B,gBAAK2C,UAAU,WAAWnF,MAAO,CAAE2lB,UAAW,SAAU,SACrDnjB,EAAK6b,WACF,EAGF0S,EAAiB,SAACvuB,GAAI,OAC1B,gBAAK2C,UAAU,WAAW2B,MAAOtE,EAAK8tB,SAAS,SAC5C9tB,EAAK8tB,UACF,EAGFU,EAAmB,SAACxuB,GAAI,OAC5B,gBAAK2C,UAAU,WAAW2B,MAAOtE,EAAK+X,WAAW,SAC9C/X,EAAK+X,YACF,EAGF0W,EAAkB,SAACzuB,GAAI,OAC3B,gBAAK2C,UAAU,WAAW2B,MAAOtE,EAAKsuB,UAAU,SAC7CtuB,EAAKsuB,WACF,EAGFpZ,EAAwC,QAA1B,EAAGvT,OAAOwT,KAAKjC,UAAW,aAAvB,EAAyBhU,KAAI,SAACkW,EAAKvE,GAExD,OADA/K,QAAQC,IAAIqP,IAEV,SAAC,IAAM,CACLC,UAAQ,EAERC,KACS,aAAPF,EACIwY,EACe,YAAPxY,EACRmZ,EACe,cAAPnZ,EACRoZ,EACe,aAAPpZ,EACRqZ,EACA,KAENlZ,MAAOH,EACPtI,OAAQoG,EAAWkC,IAbdA,EAgBX,IAQA,OANAhV,EAAAA,EAAAA,YAAU,WACRJ,EAAK,IAAMmT,EAAcqC,KAAKC,MAAMD,KAAKE,UAAU1V,EAAK,KAC1D,GAAG,CAACA,KAKF,0BACE,SAAC2a,EAAA,EAA+B,CAC9B1K,KAAM,EACNjQ,KAAMA,EACNkV,eAAgBA,EAChBhC,WAAYA,EACZC,cAAeA,EACfwC,WAAYA,KAIpB,ECDA,OAxGA,SAAsBtY,GAAQ,IAAD,EACnBitB,EAAQjtB,EAARitB,IACR,GAAwBxmB,EAAAA,EAAAA,UAAS,CAAC,CAAC,IAAG,eAA/B9D,EAAI,KAAEqqB,EAAO,KACpB,GAAoCvmB,EAAAA,EAAAA,UAAS,IAAG,eAAzCoP,EAAU,KAAEC,EAAa,KAChC,GAAoCrP,EAAAA,EAAAA,UAAS,IAAG,eAAzC6R,EAAU,KACX/R,GAD0B,KAChBC,EAAAA,EAAAA,UA6BhBzD,EAAAA,EAAAA,YAAU,WAxBRuE,IAAAA,IACOf,EAAO,uCAAmC0mB,IAE9CtlB,MAAK,SAACgH,GACL,IAaM4I,EAAU5I,EAAIhM,KAChB2tB,EAAK,UAdQ,CACf,CACEhkB,UAAW,aACXlB,YAAa,cACbd,OAAQ,SACRK,QAAS,WACTP,YAAa,eACbsQ,WAAY,cACZ2W,QAAS,WACTJ,UAAW,aACXrlB,SAAU,cAIa,OAAI2L,IAC/B9O,QAAQC,IAAI4nB,GACZtD,EAAQsD,EACV,IACCxoB,OAAM,SAACC,GAAW,GAIvB,GAAG,IAIH,IAAMupB,EAAiB,SAAC3uB,GAAI,OAC1B,gBAAK2C,UAAU,WAAW2B,MAAOtE,EAAKiJ,SAAS,SAC5CjJ,EAAKiJ,UACF,EAGF2lB,EAAmB,SAAC5uB,GAAI,OAC5B,gBAAK2C,UAAU,WAAW2B,MAAOtE,EAAK2J,UAAU,SAC7C3J,EAAK2J,WACF,EAGFklB,EAAoB,SAAC7uB,GAAI,OAC7B,gBAAK2C,UAAU,WAAW2B,MAAOtE,EAAK+X,WAAW,SAC9C/X,EAAK+X,YACF,EAGF+W,EAAmB,SAAC9uB,GAAI,OAC5B,gBAAK2C,UAAU,WAAW2B,MAAOtE,EAAKsuB,UAAU,SAC7CtuB,EAAKsuB,WACF,EAGFpZ,EAAwC,QAA1B,EAAGvT,OAAOwT,KAAKjC,UAAW,aAAvB,EAAyBhU,KAAI,SAACkW,EAAKvE,GAExD,OADA/K,QAAQC,IAAIqP,IAEV,SAAC,IAAM,CACLC,UAAQ,EAERC,KACU,aAARF,EACIuZ,EACgB,cAARvZ,EACRwZ,EACgB,eAARxZ,EACRyZ,EACgB,cAARzZ,EACR0Z,EACA,KAENvZ,MAAOH,EACPtI,OAAQoG,EAAWkC,IAbdA,EAgBX,IAMA,OAJAhV,EAAAA,EAAAA,YAAU,WACRJ,EAAK,IAAMmT,EAAcqC,KAAKC,MAAMD,KAAKE,UAAU1V,EAAK,KAC1D,GAAG,CAACA,KAGF,0BACE,SAAC2a,EAAA,EAA+B,CAC9B1K,KAAM,EACNjQ,KAAMA,EACNkV,eAAgBA,EAChBhC,WAAYA,EACZC,cAAeA,EACfwC,WAAYA,KAIpB,EC3BA,OA5EA,SAA4BtY,GAAQ,IAAD,EACzBitB,EAAQjtB,EAARitB,IACR,GAAwBxmB,EAAAA,EAAAA,UAAS,CAAC,CAAC,IAAG,eAA/B9D,EAAI,KAAEqqB,EAAO,KACpB,GAAoCvmB,EAAAA,EAAAA,UAAS,IAAG,eAAzCoP,EAAU,KAAEC,EAAa,KAChC,GAAoCrP,EAAAA,EAAAA,UAAS,IAAG,eAAzC6R,EAAU,KACX/R,GAD0B,KAChBC,EAAAA,EAAAA,UA6BhBzD,EAAAA,EAAAA,YAAU,WAxBRuE,IAAAA,IACOf,EAAO,4CAAwC0mB,IAEnDtlB,MAAK,SAACgH,GACL,IAaM4I,EAAU5I,EAAIhM,KAChB2tB,EAAK,UAdQ,CACf,CACEoB,WAAY,2BACZ1qB,KAAM,OACNuS,SAAU,WACVoY,SAAU,YACVC,WAAY,cACZC,WAAY,cACZnX,WAAY,cACZoX,cAAe,wBACfjb,OAAQ,YAIe,OAAIU,IAC/B9O,QAAQC,IAAI4nB,GACZtD,EAAQsD,EACV,IACCxoB,OAAM,SAACC,GAAW,GAIvB,GAAG,IAIH,IAAMgqB,EAAe,SAACpvB,GAAI,OACxB,gBAAK2C,UAAU,WAAW2B,MAAOtE,EAAKmvB,cAAc,SACjDnvB,EAAKmvB,eACF,EAGFja,EAAwC,QAA1B,EAAGvT,OAAOwT,KAAKjC,UAAW,aAAvB,EAAyBhU,KAAI,SAACkW,EAAKvE,GAExD,OADA/K,QAAQC,IAAIqP,IAEV,SAAC,IAAM,CACLC,UAAQ,EAERC,KAAc,kBAARF,EAA0Bga,EAAe,KAC/C7Z,MAAOH,EACPtI,OAAQoG,EAAWkC,IAHdA,EAMX,IAMA,OAJAhV,EAAAA,EAAAA,YAAU,WACRJ,EAAK,IAAMmT,EAAcqC,KAAKC,MAAMD,KAAKE,UAAU1V,EAAK,KAC1D,GAAG,CAACA,KAGF,0BACE,SAAC2a,EAAA,EAA+B,CAC9B1K,KAAM,EACNjQ,KAAMA,EACNkV,eAAgBA,EAChBhC,WAAYA,EACZC,cAAeA,EACfwC,WAAYA,KAIpB,ECMA,OAjFA,SAAqBtY,GAAQ,IAAD,EAClBitB,EAAQjtB,EAARitB,IACR,GAAwBxmB,EAAAA,EAAAA,UAAS,CAAC,CAAC,IAAG,eAA/B9D,EAAI,KAAEqqB,EAAO,KACpB,GAAoCvmB,EAAAA,EAAAA,UAAS,IAAG,eAAzCoP,EAAU,KAAEC,EAAa,KAChC,GAAoCrP,EAAAA,EAAAA,UAAS,IAAG,eAAzC6R,EAAU,KACX/R,GAD0B,KAChBC,EAAAA,EAAAA,UAwBhBzD,EAAAA,EAAAA,YAAU,WAnBRuE,IAAAA,IACOf,EAAO,8CAA0C0mB,IAErDtlB,MAAK,SAACgH,GACL,IAOM4I,EAAU5I,EAAIhM,KACpB8F,QAAQC,IAAI6O,GACZ,IAAI+Y,EAAK,UATQ,CACf,CACE3kB,YAAa,wBACbqmB,gBAAiB,sBACjBC,iBAAkB,sBAKK,OAAI1a,IAC/B9O,QAAQC,IAAI4nB,GACZtD,EAAQsD,EACV,IACCxoB,OAAM,SAACC,GAAW,GAIvB,GAAG,IAIH,IAAMmqB,EAAqB,SAACvvB,GAAI,OAC9B,gBAAK2C,UAAU,WAAW2B,MAAOtE,EAAKgJ,YAAY,SAC/ChJ,EAAKgJ,aACF,EAEFwmB,EAAmB,SAACxvB,GAAI,OAC5B,gBAAK2C,UAAU,WAAW2B,MAAOtE,EAAKsvB,iBAAiB,SACpDtvB,EAAKsvB,kBACF,EAEFG,EAAa,SAACzvB,GAAI,OACtB,gBAAK2C,UAAU,WAAWnF,MAAO,CAAC2lB,UAAU,UAAU,SACnDnjB,EAAKqvB,iBACF,EAGFna,EAAwC,QAA1B,EAAGvT,OAAOwT,KAAKjC,UAAW,aAAvB,EAAyBhU,KAAI,SAACkW,EAAKvE,GAExD,OADA/K,QAAQC,IAAIqP,IAEV,SAAC,IAAM,CACLC,UAAQ,EAERC,KAAc,gBAARF,EAAwBma,EAA0B,oBAALna,EAAyBoa,EAAsB,mBAALpa,EAAuBqa,EAAW,KAC/Hla,MAAOH,EACPtI,OAAQoG,EAAWkC,IAHdA,EAMX,IAMA,OAJAhV,EAAAA,EAAAA,YAAU,WACRJ,EAAK,IAAMmT,EAAcqC,KAAKC,MAAMD,KAAKE,UAAU1V,EAAK,KAC1D,GAAG,CAACA,KAGF,0BACE,SAAC2a,EAAA,EAA+B,CAC9B1K,KAAM,EACNjQ,KAAMA,EACNkV,eAAgBA,EAChBhC,WAAYA,EACZC,cAAeA,EACfwC,WAAYA,KAIpB,ECIA,OApFA,SAAsBtY,GAAQ,IAAD,EACnBitB,EAAQjtB,EAARitB,IACR,GAAwBxmB,EAAAA,EAAAA,UAAS,CAAC,CAAC,IAAG,eAA/B9D,EAAI,KAAEqqB,EAAO,KACpB,GAAoCvmB,EAAAA,EAAAA,UAAS,IAAG,eAAzCoP,EAAU,KAAEC,EAAa,KAChC,GAAoCrP,EAAAA,EAAAA,UAAS,IAAG,eAAzC6R,EAAU,KACX/R,GAD0B,KAChBC,EAAAA,EAAAA,UAkBhBzD,EAAAA,EAAAA,YAAU,WAdRuE,IAAAA,IACOf,EAAO,wCAAoC0mB,IAE/CtlB,MAAK,SAACgH,GACL,IAGM4I,EAAU5I,EAAIhM,KAChB2tB,EAAK,UAJQ,CACf,CAAE9qB,MAAO,QAAS6sB,KAAM,OAAQzmB,SAAU,cAGjB,OAAI2L,IAC/B9O,QAAQC,IAAI4nB,GACZtD,EAAQsD,EACV,IACCxoB,OAAM,SAACC,GAAW,GAIvB,GAAG,IAEH,IAAMqqB,EAAa,SAACzvB,GAAI,OACtB,gBAAK2C,UAAU,WAAWnF,MAAO,CAAE2lB,UAAW,UAAW,SACtDnjB,EAAK0vB,MACF,EAGFC,EAAc,SAAC3vB,GAAI,OACvB,gBAAK2C,UAAU,WAAW2B,MAAOtE,EAAK6C,MAAM,SACzC7C,EAAK6C,OACF,EAGF+sB,EAAiB,SAAC5vB,GAAI,OAC1B,gBAAK2C,UAAU,WAAW2B,MAAOtE,EAAKiJ,SAAS,SAC5CjJ,EAAKiJ,UACF,EAGFiM,EAAwC,QAA1B,EAAGvT,OAAOwT,KAAKjC,UAAW,aAAvB,EAAyBhU,KAAI,SAACkW,EAAKvE,GAExD,OADA/K,QAAQC,IAAIqP,IAEV,SAAC,IAAM,CACLC,UAAQ,EAERC,KACS,QAAPF,EACIqa,EACe,SAAPra,EACRua,EACe,YAAPva,EACRwa,EACA,KAENra,MAAOH,EACPtI,OAAQoG,EAAWkC,IAXdA,EAcX,IAOA,OALAhV,EAAAA,EAAAA,YAAU,WACRJ,EAAK,IAAMmT,EAAcqC,KAAKC,MAAMD,KAAKE,UAAU1V,EAAK,KAC1D,GAAG,CAACA,KAIF,0BACE,SAAC2a,EAAA,EAA+B,CAC9B1K,KAAM,EACNjQ,KAAMA,EACNkV,eAAgBA,EAChBhC,WAAYA,EACZC,cAAeA,EACfwC,WAAYA,KAIpB,ECyeA,OA/iBA,SAAuBtY,GACrB,IAAQ4C,EAAc5C,EAAd4C,UACR,GAAgC6D,EAAAA,EAAAA,WAAS,GAAK,eAAvC+rB,EAAQ,KAAEC,EAAW,KAC5B,GAAgChsB,EAAAA,EAAAA,WAAS,GAAK,eAAvCisB,EAAQ,KAAEC,EAAW,KAC5B,GAAgClsB,EAAAA,EAAAA,WAAS,GAAK,eAAvCmsB,EAAQ,KAAEC,EAAW,KAC5B,GAAgCpsB,EAAAA,EAAAA,WAAS,GAAK,eAAvCqsB,EAAQ,KAAEC,EAAW,KAC5B,GAAgCtsB,EAAAA,EAAAA,WAAS,GAAK,eAAvCusB,EAAQ,KAAEC,EAAW,KAC5B,GAAgCxsB,EAAAA,EAAAA,WAAS,GAAK,eAAvCysB,EAAQ,KAAEC,EAAW,KAC5B,GAA0C1sB,EAAAA,EAAAA,UAASiR,EAAAA,KAAoB,eAAhE0b,EAAa,KAAEC,EAAgB,KACtC,GAA0C5sB,EAAAA,EAAAA,UAASiR,EAAAA,KAAoB,eAAhE4b,EAAa,KAAEC,EAAgB,KACtC,GAA0C9sB,EAAAA,EAAAA,UAASiR,EAAAA,KAAoB,eAAhE8b,EAAa,KAAEC,EAAgB,KACtC,GAA0ChtB,EAAAA,EAAAA,UAASiR,EAAAA,KAAoB,eAAhEgc,EAAa,KAAEC,GAAgB,KACtC,IAA0CltB,EAAAA,EAAAA,UAASiR,EAAAA,KAAoB,iBAAhEkc,GAAa,MAAEC,GAAgB,MACtC,IAA0CptB,EAAAA,EAAAA,UAASiR,EAAAA,KAAoB,iBAAhEoc,GAAa,MAAEC,GAAgB,MACtC,IAA4BttB,EAAAA,EAAAA,WAAS,GAAM,iBAApCmO,GAAM,MAAEC,GAAS,MACxB,IAAkBpO,EAAAA,EAAAA,YAAU,iBAArButB,GAAC,MACF/G,IADQ,MACFrqB,GAGNwD,GAAeC,aAAaC,QAAQ,SAE1C,IAA4BG,EAAAA,EAAAA,UAAS,IAAG,iBAAjCyP,GAAM,MAAEC,GAAS,OAIxBpT,EAAAA,EAAAA,YAAU,WACRqT,IACF,GAAG,IAEH,IAAMA,GAAW,WAGf9O,IAAM,CACJC,OAAQ,MACRC,IAAKjB,GAAO,iDAA6CH,MACxDuB,MAAK,SAACE,GACIA,EAAKlF,KAEXwB,SAAQ,SAACf,GAhBA,aAiBRA,EAAKiT,cACPF,GAAU,CAAC/S,GAEf,GACF,GACF,EAEA,IAAwBqD,EAAAA,EAAAA,UAAS,CAAC,CAAC,IAAG,iBAA/BsmB,GAAI,MAAEC,GAAO,MACpB,IAAoBvmB,EAAAA,EAAAA,UAAS,IAAG,iBAAzBymB,GAAE,MAAE+G,GAAK,MAChBxrB,QAAQC,IAAIwkB,IACZ,QAAoBzmB,EAAAA,EAAAA,UAAS,IAAG,iBAAzB0mB,GAAE,MAAE+G,GAAK,MAChBzrB,QAAQC,IAAIykB,IACZ,IAAM5mB,GAAUC,EAAAA,EAAAA,SAehBzD,EAAAA,EAAAA,YAAU,WAZRuE,IAAAA,IACOf,GAAO,mDAA+C3D,IAC1D+E,MAAK,SAACgH,GACL,IAAM4I,EAAU5I,EAAIhM,KACpBqqB,GAAQzV,GACR1C,IAAU,GACVpM,QAAQC,IAAIiG,EAAIhM,MAChBsxB,GAAMtlB,EAAIhM,KAAK,GAAGwxB,kBAClBD,GAAMvlB,EAAIhM,KAAK,GAAGyxB,eACpB,IACCtsB,OAAM,SAACC,GAAY,GAIxB,GAAG,CAAColB,KAIJ,QAAsC1mB,EAAAA,EAAAA,UAAS,CAAC,CAAC,IAAG,iBAA7CugB,GAAW,MAAEqN,GAAc,MAgBlC,OAfA5rB,QAAQC,IAAIse,GAAYA,cAUxBjkB,EAAAA,EAAAA,YAAU,WARRuE,IAAAA,IACOf,GAAO,mDAA+C3D,IAC1D+E,MAAK,SAACgH,GACL,IAAM4I,EAAU5I,EAAIhM,KACpB0xB,GAAe9c,EACjB,IACCzP,OAAM,SAACC,GAAY,GAIxB,GAAG,IAEHU,QAAQC,IAAIsrB,GAAI,cAEd,2BACGpf,IAAS,SAACiE,EAAA,EAAM,IAAM,GAEtBkU,GAAKlrB,KAAI,SAAC2rB,GAAO,OAChB,iBAAKloB,UAAU,YAAW,WACxB,gBAAKA,UAAU,WAAU,UACvB,wBAAKkoB,EAAQ8G,kBAEf,gBAAKhvB,UAAU,WAAU,UACvB,wBAAI,wBAEN,gBAAKA,UAAU,iBACX,KAER,SAACoT,EAAA,EAAiB,CAChBxC,OAAQA,GACRyC,kBAlFkB,CAAC,WAAY,OAAQ,aAAc,uBAoFvD,iBAAKrT,UAAU,MAAK,WAClB,gBAAKA,UAAU,QAAO,UACpB,oBAAQA,UAAU,6BAA4B,WAC5C,SAAC,MAAkB,IAAG,yBAI1B,gBAAKA,UAAU,wBAAwBhE,GAAG,cAAa,SACpDyrB,GAAKlrB,KAAI,SAAC2rB,GAAO,OAChB,gBAAKloB,UAAU,aAAY,UACzB,iBAAKA,UAAU,MAAK,WAClB,gBAAKA,UAAU,gBAAe,UAC5B,gBAAKA,UAAU,aAAY,UACzB,iBAAKA,UAAU,MAAK,WAClB,kBAAOA,UAAU,oBAAmB,SAAC,kBACrC,iBAAMA,UAAU,WAAU,SAAC,OAC3B,iBAAMA,UAAU,SAAShE,GAAG,QAAO,SAChCksB,EAAQ8G,uBAKjB,gBAAKhvB,UAAU,gBAAe,UAC5B,gBAAKA,UAAU,aAAY,UACzB,iBAAKA,UAAU,MAAK,WAClB,kBAAOA,UAAU,oBAAmB,SAAC,mBACrC,iBAAMA,UAAU,WAAU,SAAC,OAC3B,iBAAMA,UAAU,SAAShE,GAAG,QAAO,SAChCksB,EAAQ+G,wBAKjB,gBAAKjvB,UAAU,gBAAe,UAC5B,gBAAKA,UAAU,aAAY,UACzB,iBAAKA,UAAU,MAAK,WAClB,kBAAOA,UAAU,oBAAmB,SAAC,cACrC,iBAAMA,UAAU,YAAW,SAAC,OAC5B,iBAAMA,UAAU,SAAShE,GAAG,OAAM,SAC/BksB,EAAQgH,mBAKjB,gBAAKlvB,UAAU,gBAAe,UAC5B,gBAAKA,UAAU,aAAY,UACzB,iBAAKA,UAAU,MAAK,WAClB,kBAAOA,UAAU,oBAAmB,SAAC,kBACrC,iBAAMA,UAAU,WAAU,SAAC,OAC3B,iBAAMA,UAAU,SAAShE,GAAG,YAAW,SACpCksB,EAAQiH,uBAKjB,gBAAKnvB,UAAU,gBAAe,UAC5B,gBAAKA,UAAU,aAAY,UACzB,iBAAKA,UAAU,MAAK,WAClB,kBAAOA,UAAU,oBAAmB,SAAC,eACrC,iBAAMA,UAAU,WAAU,SAAC,OAC3B,iBAAMA,UAAU,SAAShE,GAAG,SAAQ,SACjCksB,EAAQkH,eAKjB,gBAAKpvB,UAAU,gBAAe,UAC5B,gBAAKA,UAAU,aAAY,UACzB,iBAAKA,UAAU,MAAK,WAClB,kBAAOA,UAAU,oBAAmB,SAAC,qBAGrC,iBAAMA,UAAU,WAAU,SAAC,OAC3B,iBAAMA,UAAU,QAAQhE,GAAG,aAAY,SACpCksB,EAAQmH,sBAKjB,gBAAKrvB,UAAU,gBAAe,UAC5B,gBAAKA,UAAU,aAAY,UACzB,iBAAKA,UAAU,MAAK,WAClB,kBAAOA,UAAU,mBAAkB,SAAC,sBAGpC,iBAAMA,UAAU,WAAU,SAAC,OAC3B,iBAAMA,UAAU,QAAQhE,GAAG,aAAY,SACpCksB,EAAQoH,sBAKjB,gBAAKtvB,UAAU,gBAAe,UAC5B,gBAAKA,UAAU,aAAY,UACzB,iBAAKA,UAAU,MAAK,WAClB,kBAAOA,UAAU,oBAAmB,SAAC,eACrC,iBAAMA,UAAU,WAAU,SAAC,OAC3B,iBAAMA,UAAU,QAAQhE,GAAG,QAAO,SAC/BksB,EAAQqH,oBAKjB,gBAAKvvB,UAAU,gBAAe,UAC5B,gBAAKA,UAAU,aAAY,UACzB,iBAAKA,UAAU,MAAK,WAClB,kBAAOA,UAAU,oBAAmB,SAAC,mBACrC,iBAAMA,UAAU,WAAU,SAAC,OAC3B,iBAAMA,UAAU,SAAShE,GAAG,YAAW,SACpCksB,EAAQsH,qBAKjB,gBAAKxvB,UAAU,gBAAe,UAC5B,gBAAKA,UAAU,aAAY,UACzB,iBAAKA,UAAU,MAAK,WAClB,kBAAOA,UAAU,oBAAmB,SAAC,mBACrC,iBAAMA,UAAU,WAAU,SAAC,OAC3B,iBAAMA,UAAU,SAAShE,GAAG,WAAU,SACnCksB,EAAQuH,qBAKjB,gBAAKzvB,UAAU,gBAAe,UAC5B,gBAAKA,UAAU,aAAY,UACzB,iBAAKA,UAAU,MAAK,WAClB,kBAAOA,UAAU,oBAAmB,SAAC,kBACrC,iBAAMA,UAAU,WAAU,SAAC,OAC3B,iBAAMA,UAAU,SAAShE,GAAG,QAAO,SAChCksB,EAAQjL,mBAKjB,gBAAKjd,UAAU,gBAAe,UAC5B,gBAAKA,UAAU,aAAY,UACzB,iBAAKA,UAAU,MAAK,WAClB,kBAAOA,UAAU,oBAAmB,SAAC,2BAGrC,iBAAMA,UAAU,WAAU,SAAC,OAC3B,iBAAMA,UAAU,SAAShE,GAAG,WAAU,SACnCksB,EAAQwH,kBAKjB,gBAAK1vB,UAAU,gBAAe,UAC5B,gBAAKA,UAAU,aAAY,UACzB,iBAAKA,UAAU,MAAK,WAClB,kBAAOA,UAAU,oBAAmB,SAAC,gBACrC,iBAAMA,UAAU,WAAU,SAAC,OAC3B,iBAAMA,UAAU,SAAShE,GAAG,QAAO,SAChCksB,EAAQ2G,2BAKjB,gBAAK7uB,UAAU,gBAAe,UAC5B,gBAAKA,UAAU,aAAY,UACzB,iBAAKA,UAAU,MAAK,WAClB,kBAAOA,UAAU,oBAAmB,SAAC,0BAGrC,iBAAMA,UAAU,WAAU,SAAC,OAC3B,iBAAMA,UAAU,SAAShE,GAAG,QAAO,SAChCksB,EAAQ4G,yBAKjB,gBAAK9uB,UAAU,gBAAe,UAC5B,gBAAKA,UAAU,aAAY,UACzB,iBAAKA,UAAU,MAAK,WAClB,kBAAOA,UAAU,oBAAmB,SAAC,yBAGrC,iBAAMA,UAAU,WAAU,SAAC,OAC3B,iBAAMA,UAAU,SAAShE,GAAG,SAAQ,SACjCksB,EAAQyH,6BAKjB,gBAAK3vB,UAAU,gBAAe,UAC5B,gBAAKA,UAAU,aAAY,UACzB,iBAAKA,UAAU,MAAK,WAClB,kBAAOA,UAAU,oBAAmB,SAAC,gBACrC,iBAAMA,UAAU,WAAU,SAAC,OAC3B,iBAAMA,UAAU,QAAQhE,GAAG,YAAW,SACnCksB,EAAQ0H,oBAKjB,gBAAK5vB,UAAU,gBAAe,UAC5B,gBAAKA,UAAU,aAAY,UACzB,iBAAKA,UAAU,MAAK,WAClB,kBAAOA,UAAU,oBAAmB,SAAC,4BAGrC,iBAAMA,UAAU,WAAU,SAAC,OAC3B,iBAAMA,UAAU,SAAShE,GAAG,QAAO,SAChCksB,EAAQ2H,4BAKjB,gBAAK7vB,UAAU,gBAAe,UAC5B,gBAAKA,UAAU,aAAY,UACzB,iBAAKA,UAAU,MAAK,WAClB,kBAAOA,UAAU,mBAAkB,SAAC,iBACpC,iBAAMA,UAAU,WAAU,SAAC,OAC3B,iBAAMA,UAAU,SAAShE,GAAG,OAAM,SAC/BksB,EAAQ4H,4BAKjB,gBAAK9vB,UAAU,gBAAe,UAC5B,gBAAKA,UAAU,aAAY,UACzB,iBAAKA,UAAU,MAAK,WAClB,kBAAOA,UAAU,oBAAmB,SAAC,gBACrC,iBAAMA,UAAU,WAAU,SAAC,OAC3B,iBAAMA,UAAU,SAAShE,GAAG,OAAM,SAC/BksB,EAAQ6H,2BAKjB,gBAAK/vB,UAAU,gBAAe,UAC5B,gBAAKA,UAAU,aAAY,UACzB,iBAAKA,UAAU,MAAK,WAClB,kBAAOA,UAAU,oBAAmB,SAAC,sBAGrC,iBAAMA,UAAU,QAAO,SAAC,OACxB,iBAAMA,UAAU,QAAQhE,GAAG,YAAW,SACnCksB,EAAQ8H,uBAMf,OAGV,kBAGCvI,GAAKlrB,KAAI,SAAC2rB,GAAO,OAChB,gBAAKloB,UAAU,iBAAgB,UAC7B,iBACEA,UAAU,oBACI,WAEd,iBAAMA,UAAU,OAAM,UACpB,SAAC,MAAa,MACT,yCAEP,iBAAMA,UAAU,GAAE,SAAEkoB,EAAQ2G,mBAAwB,OAAK,KACzD,kBAAM7uB,UAAU,GAAE,UAAC,IAAEkoB,EAAQ4G,kBAAsB,gCAGjD,KAIR,gBAAK9uB,UAAU,YAAW,UACxB,SAAC,EAAS,CAAC2nB,IAAKA,GAAKC,GAAIA,GAAIC,GAAIA,QAKnC,gBAAK7nB,UAAU,yBAAwB,UACrC,iBACEA,UAAU,2BACV4B,QAAS,WACPurB,GAAaD,GAETa,EADJb,EACqBvd,EAAAA,IACAyC,EAAAA,IACvB,EAAE,WAEF,eAAIpS,UAAU,eAAc,SAAC,4CAG7B,gBACE4B,QAAS,WACPurB,GAAaD,GAETa,EADJb,EACqBvd,EAAAA,IACAyC,EAAAA,IACvB,EAAE,UAEF,iBAAMpS,UAAU,eAAc,SAAE8tB,YAItC,SAAC,KAAS,CAACxsB,SAAU4rB,EAAS,UAC5B,iBAAKltB,UAAU,MAAK,WAClB,gBAAKA,UAAU,WAAU,UACvB,SAAC,EAAoB,CAAC2nB,IAAKA,QAG7B,gBAAK3nB,UAAU,WAAU,UACvB,SAAC,EAAuB,CAAC2nB,IAAKA,aAIpC,gBAAK3nB,UAAU,wBAAuB,UACpC,iBACEA,UAAU,2BACV4B,QAAS,WACPyrB,GAAaD,GAETa,EADJb,EACqBzd,EAAAA,IACAyC,EAAAA,IACvB,EAAE,WAEF,eAAIpS,UAAU,eAAc,SAAC,WAC7B,gBACE4B,QAAS,WACPyrB,GAAaD,GAETa,EADJb,EACqBzd,EAAAA,IACAyC,EAAAA,IACvB,EAAE,UAEF,iBAAMpS,UAAU,eAAc,SAAEguB,YAItC,SAAC,KAAS,CAAC1sB,SAAU8rB,EAAS,UAC5B,SAAC,GAAU,CAACzF,IAAKA,QAGnB,gBAAK3nB,UAAU,wBAAuB,UACpC,iBACE4B,QAAS,WACP2rB,GAAaD,GAETa,EADJb,EACqB3d,EAAAA,IACAyC,EAAAA,IACvB,EACApS,UAAU,2BAA0B,WAEpC,eAAIA,UAAU,eAAc,SAAC,YAC7B,gBACE4B,QAAS,WACP2rB,GAAaD,GAETa,EADJb,EACqB3d,EAAAA,IACAyC,EAAAA,IACvB,EAAE,UAEF,iBAAMpS,UAAU,eAAc,SAAEkuB,YAItC,SAAC,KAAS,CAAC5sB,SAAUgsB,EAAS,UAC5B,SAAC,GAAY,CAAC3F,IAAKA,QAGrB,gBAAK3nB,UAAU,wBAAuB,UACpC,iBACEA,UAAU,2BACV4B,QAAS,WACP6rB,GAAaD,GAETa,GADJb,EACqB7d,EAAAA,IACAyC,EAAAA,IACvB,EAAE,WAEF,eAAIpS,UAAU,eAAc,SAAC,kBAC7B,gBACE4B,QAAS,WACP6rB,GAAaD,GAETa,GADJb,EACqB7d,EAAAA,IACAyC,EAAAA,IACvB,EAAE,UAEF,iBAAMpS,UAAU,eAAc,SAAEouB,YAItC,SAAC,KAAS,CAAC9sB,SAAUksB,EAAS,UAC5B,SAAC,GAAkB,CAAC7F,IAAKA,QAG3B,gBAAK3nB,UAAU,wBAAuB,UACpC,iBACEA,UAAU,2BACV4B,QAAS,WACP+rB,GAAaD,GAETa,GADJb,EACqB/d,EAAAA,IACAyC,EAAAA,IACvB,EAAE,WAEF,eAAIpS,UAAU,eAAc,SAAC,wCAC7B,gBACE4B,QAAS,WACP+rB,GAAaD,GAETa,GADJb,EACqB/d,EAAAA,IACAyC,EAAAA,IACvB,EAAE,UAEF,iBAAMpS,UAAU,eAAc,SAAEsuB,aAItC,SAAC,KAAS,CAAChtB,SAAUosB,EAAS,UAC5B,SAAC,GAAW,CAAC/F,IAAKA,QAGpB,gBAAK3nB,UAAU,wBAAuB,UACpC,iBACEA,UAAU,2BACV4B,QAAS,WACPisB,GAAaD,GAETa,GADJb,EACqBje,EAAAA,IACAyC,EAAAA,IACvB,EAAE,WAEF,eAAIpS,UAAU,eAAc,SAAC,YAC7B,gBACE4B,QAAS,WACPisB,GAAaD,GAETa,GADJb,EACqBje,EAAAA,IACAyC,EAAAA,IACvB,EAAE,UAEF,iBAAMpS,UAAU,eAAc,SAAEwuB,aAItC,SAAC,KAAS,CAACltB,SAAUssB,EAAS,UAC5B,SAAC,GAAY,CAACjG,IAAKA,YAO7B,E,0DCzjBAsI,EAAQ,KAARA,CAAwCC,MA8HxC,OA5HA,SAAkBx1B,GAAQ,IAAD,EACfy1B,EAAsDz1B,EAAtDy1B,aAAcC,EAAwC11B,EAAxC01B,QAASC,EAA+B31B,EAA/B21B,WAAYC,EAAmB51B,EAAnB41B,UAAWC,EAAQ71B,EAAR61B,IAClDC,EAAIroB,IAAmB,QAAb,EAACmoB,EAAU,UAAE,aAAZ,EAAcG,mBAAmBpoB,OAAO,UAEvDlF,QAAQC,IAAImtB,IAEZ9yB,EAAAA,EAAAA,YAAU,WACR0yB,GACF,GAAG,IAEH,IAAIO,EAAU,GACdJ,EAAU/zB,KAAI,SAACo0B,GACbD,EAAQ3xB,KAAK,CACXyE,KAAM,QACN6G,MAAO,UACPhN,KAAM,CAACuzB,WAAWD,EAAEE,MAAQ,UAE9BH,EAAQ3xB,KAAK,CACXyE,KAAM,QACN6G,MAAO,UACPhN,KAAM,CAACuzB,WAAWD,EAAEG,UAEtBJ,EAAQ3xB,KAAK,CACXyE,KAAM,QACN6G,MAAO,UACPhN,KAAM,CAACuzB,WAAWD,EAAEI,UAEtBL,EAAQ3xB,KAAK,CACXyE,KAAM,eACN6G,MAAO,UACPhN,KAAM,CAACuzB,WAAWD,EAAEK,WAEtBN,EAAQ3xB,KAAK,CACXyE,KAAM,kBACN6G,MAAO,UACPhN,KAAM,CAACuzB,WAAWD,EAAEM,mBAExB,IACA,IAAIC,EAAc,GAClBA,EAAYnyB,KAAKyxB,GACjBU,EAAYnyB,KAAc,OAATuxB,QAAS,IAATA,OAAS,EAATA,EAAWU,QAC5B,IAAMG,EAAY,CAChBC,MAAO,CACL1vB,KAAM,SACN5G,MAAO,KAET6G,MAAO,CACL0vB,SAAS,EACTr0B,KACU,MAARuzB,EACI,MACQ,MAARA,EACA,MACQ,OAARA,EACA,OACQ,OAARA,EACA,OACQ,OAARA,EACA,MACA,IAERe,MAAO,CACLC,WAAYL,EACZM,WAAW,GAEbC,MAAO,CACLC,eAAe,EACfC,IAAK,EACLhwB,MAAO,CACL3E,KAAM,SAER40B,OAAQ,CACNC,SAAU,YAIdtnB,QAAS,CACPunB,UAAW,WACT,IAAIC,EAAc,MAAQC,KAAKC,EAAI,YAInC,OAHAD,KAAKE,OAAOrzB,SAAQ,SAAUszB,GAC5BJ,GAAW,6BAA0BI,EAAMC,OAAO/nB,MAAK,aAAK8nB,EAAMC,OAAO5uB,KAAI,qBAAa2uB,EAAME,EAAC,QACnG,IACON,CACT,EACAO,QAAQ,GAOVC,QAAS,CACPC,SAAS,GAEXC,YAAa,CACXC,OAAQ,CACNC,aAAc,GACdC,YAAa,IAGjBR,OAAQ1B,GAGV,OACE,0BACE,UAAC,KAAM,CACLpvB,QAAS8uB,EACT7uB,KAAK,KACLvB,UAAU,YACVwB,QAAS,kBAAM6uB,GAAW,EAAM,EAAC,WAEjC,SAAC,KAAY,WACX,SAAC,KAAW,WACV,0BAAM,yBAGV,SAAC,KAAU,WACT,SAAC,KAAe,CAACwC,WAAY3C,KAAY1xB,QAAS2yB,UAK5D,EC5HAlB,EAAQ,KAARA,CAAwCC,MAmGxC,OAjGA,SAAkBx1B,GAAQ,IAAD,EACfy1B,EAA4Dz1B,EAA5Dy1B,aAAc2C,EAA8Cp4B,EAA9Co4B,QAASC,EAAqCr4B,EAArCq4B,WAAYzC,EAAyB51B,EAAzB41B,UAAW0C,EAAct4B,EAAds4B,UACtD7vB,QAAQC,IAAI,0BAEZ,IAAIotB,EAAIroB,IAAmB,QAAb,EAACmoB,EAAU,UAAE,aAAZ,EAAcG,mBAAmBpoB,OAAO,WACvD5K,EAAAA,EAAAA,YAAU,WACR0yB,GACF,GAAG,IAEH,IAAIO,EAAU,GACdJ,EAAU/zB,KAAI,SAACo0B,GACbD,EAAQ3xB,KAAK,CACXyE,KAAM,WACN6G,MAAO,UACPhN,KAAM,CAACuzB,WAAWD,EAAEsC,cAExB,IACA,IAAI/B,EAAc,GAClBA,EAAYnyB,KAAKyxB,GAEjB,IAAMW,EAAY,CAChBC,MAAO,CACL1vB,KAAM,OACN5G,MAAO,KAET6G,MAAO,CACL0vB,SAAS,EACTr0B,KACgB,MAAdg2B,EACI,oBACc,MAAdA,EACA,oBACc,OAAdA,EACA,qBACc,OAAdA,EACA,qBACc,OAAdA,EACA,oBACA,IAER1B,MAAO,CACLC,WAAYL,EACZM,WAAW,GAEbC,MAAO,CACLC,eAAe,EACfC,IAAK,EAELhwB,MAAO,CACL3E,KAAM,cAER40B,OAAQ,CACNC,SAAU,YAGdtnB,QAAS,CACPunB,UAAW,WACT,MACE,MAAQE,KAAKI,OAAO5uB,KAApB,mBAAqDwuB,KAAKK,EAAI,QAElE,GAEFE,QAAS,CACPC,SAAS,GAEXC,YAAa,CACXC,OAAQ,CACNC,aAAc,GACdC,YAAa,IAGjBR,OAAQ1B,GAGV,OACE,0BACE,UAAC,KAAM,CACLpvB,QAASwxB,EACTvxB,KAAK,KACLvB,UAAU,YACVwB,QAAS,kBAAMuxB,GAAW,EAAM,EAAC,WAEjC,SAAC,KAAY,WACX,SAAC,KAAW,WACV,iBAAM/yB,UAAU,OAAM,SAAC,yBAG3B,SAAC,KAAU,WACT,gBAAKA,UAAU,eAAc,UAC3B,SAAC,KAAe,CAAC6yB,WAAY3C,KAAY1xB,QAAS2yB,YAM9D,E,mCC6RA,OArXA,SAAyBz2B,GACvB,OAAkCyG,EAAAA,EAAAA,UAAS,IAAG,eAAvCiO,EAAS,KAAEC,EAAY,KAC9B,GAA8BlO,EAAAA,EAAAA,WAAS,GAAM,eAAtCivB,EAAO,KAAEC,EAAU,KAC1B,GAA8BlvB,EAAAA,EAAAA,WAAS,GAAM,eAAtC2xB,EAAO,KAAEC,EAAU,KAC1B,GAAsB5xB,EAAAA,EAAAA,UAAS,GAAE,eAA1B0N,EAAG,KAAEC,EAAM,KAClB,GAAkC3N,EAAAA,EAAAA,UAAS,IAAG,eAAvCmvB,EAAS,KAAE4C,EAAY,KAC9B,GAAsB/xB,EAAAA,EAAAA,UAAS,IAAG,eAA3BovB,EAAG,KAAE4C,EAAM,KAClB,GAAkChyB,EAAAA,EAAAA,UAAS,IAAG,eAAvC6xB,EAAS,KAAEI,EAAY,KAE9B,GAA8BjyB,EAAAA,EAAAA,UAAS,IAAG,eAAnC0a,EAAO,KAAEC,EAAU,KAC1B,GAAsC3a,EAAAA,EAAAA,UAAS,IAAG,eAA9BmP,GAAF,KAAgB,MAClC,GAAgDnP,EAAAA,EAAAA,UAAS,MAAK,eAAvD2hB,EAAgB,KAAEC,EAAmB,KAEpCzlB,EAAyB5C,EAAzB4C,UACF2D,GAD2BvG,EAAdiU,UACHzN,EAAAA,EAAAA,SAChB,GAA8BC,EAAAA,EAAAA,UAAS,CACrC8hB,OAAQ,CAAE1d,MAAO,KAAM2d,UAAWC,EAAAA,GAAAA,UAClCI,eAAgB,CAAEhe,MAAO,KAAM2d,UAAWC,EAAAA,GAAAA,IAC1Cne,OAAQ,CACNoe,SAAUC,EAAAA,GAAAA,GACVC,YAAa,CAAC,CAAE/d,MAAO,KAAM2d,UAAWC,EAAAA,GAAAA,YAE1C,gBAPKK,GAAO,MAAEC,GAAU,MASpB4P,GAAuB,SAACh2B,GAC5B,IAAMi2B,EACJryB,EAAO,mDACyC,OAAJ5D,QAAI,IAAJA,OAAI,EAAJA,EAAMk2B,WAAU,wBAAoB,OAAJl2B,QAAI,IAAJA,OAAI,EAAJA,EAAMm2B,cAEpFxxB,IAAM,CACJE,IAAKoxB,EACLrxB,OAAQ,MACRwxB,aAAc,SACbpxB,MAAK,SAACC,GACP,IAAMJ,EAAMwxB,OAAOC,IAAIC,gBAAgB,IAAIC,KAAK,CAACvxB,EAASjF,QACpDy2B,EAAOnmB,SAASoa,cAAc,KACpC+L,EAAKC,KAAO7xB,EACZ4xB,EAAKzO,aAAa,WAAYhoB,EAAK22B,UACnCrmB,SAASgF,KAAKshB,YAAYH,GAC1BA,EAAKlV,OACP,GACF,GAEAnhB,EAAAA,EAAAA,YAAU,WACR41B,IACF,GAAG,IAEH,IAQMvyB,GAAeC,aAAaC,QAAQ,SAE1C,IAA4BG,EAAAA,EAAAA,UAAS,IAAG,iBAAjCyP,GAAM,MAAEC,GAAS,OAIxBpT,EAAAA,EAAAA,YAAU,WACRqT,IACF,GAAG,IAEH,IAAMA,GAAW,WAGf9O,IAAM,CACJC,OAAQ,MACRC,IAAKjB,EAAO,iDAA6CH,MACxDuB,MAAK,SAACE,GACIA,EAAKlF,KAEXwB,SAAQ,SAACf,GAhBA,aAiBRA,EAAKiT,cACPF,GAAU,CAAC/S,GAEf,GACF,GACF,GAsCAL,EAAAA,EAAAA,YAAU,WAXRuE,IAAM,CACJC,OAAQ,MACRC,IACEjB,EAAO,wDAAoD3D,KAE5D+E,MAAK,SAACgH,GACLgG,EAAahG,EAAIhM,KACnB,IACCgF,MAAK,SAACI,GAAW,IAhCpBT,IAAM,CACJC,OAAQ,MACRC,IAAKjB,EAAO,oDAAgD3D,KAE3D+E,MAAK,SAAUC,GACd,IAAIC,EAAOD,EAASjF,KACpBye,EAAWvZ,EACb,IACCC,OAAM,SAAUF,GAAW,IAG9BN,IAAM,CACJC,OAAQ,MACRC,IACEjB,EAAO,4DAC8C3D,KAEtD+E,MAAK,SAAUC,GACd,IAAIC,EAAOD,EAASjF,KACpBiT,EAAe/N,EACjB,IACCC,OAAM,SAAUF,GAAW,GAkBhC,GAAG,IAEH,IAWM6tB,GAAe,WACnBnuB,IAAM,CACJC,OAAQ,MACRC,IAAKjB,EAAO,+CAA2C4N,KAEtDxM,MAAK,SAACC,GACL,IAAIC,EAAOD,EAASjF,KACpB61B,EAAa3wB,GACbuM,EAAO,EACT,IACCzM,MAAK,SAACI,GAAW,GACtB,EACMyxB,GAAY,SAAC72B,GACjB,OAAO,gCAAE,IAAEA,EAAK82B,YAClB,EACMC,GAAc,SAAC/2B,GACnB,OACE,gCACG,IACwB,OAAxBA,EAAK2nB,eACF,GACA7c,IAAO9K,EAAK2nB,gBAAgB3c,OAAO,iBAG7C,EAkEMgsB,IACJ,UAAC,KAAW,YACV,UAAC,KAAG,YACF,SAAC,IAAM,CACLlqB,OAAO,qBACPmqB,QAAS,EACTz5B,MAAO,CAAE2lB,UAAW,aAEtB,SAAC,IAAM,CAACrW,OAAO,mBAAmBmqB,QAAS,QAE7C,UAAC,KAAG,YACF,SAAC,IAAM,CAACnqB,OAAO,aAAayI,MAAM,gBAAgBD,KAAMuhB,MACxD,SAAC,IAAM,CACL/pB,OAAO,eACPyI,MAAM,iBACND,KAAMyhB,MAER,SAAC,IAAM,CAACjqB,OAAO,eAAeyI,MAAM,eACpC,SAAC,IAAM,CAACzI,OAAO,QAAQyI,MAAM,YAC7B,SAAC,IAAM,CAACzI,OAAO,UAAUyI,MAAM,gBAC/B,SAAC,IAAM,CAACzI,OAAO,eAAeyI,MAAM,YACpC,SAAC,IAAM,CAACzI,OAAO,OAAOyI,MAAM,wBAalC,IAAwCzR,EAAAA,EAAAA,UAAS,IAAG,iBAA7C6kB,GAAY,MAAEC,GAAe,MAsB9B9b,GAjBe,WACLqZ,GAAgB,QAAIA,GAAgB,OAAEje,MACpD,OACE,gBAAK1K,MAAO,CAAE8B,WAAY,OAAQ,UAChC,kBAAMqD,UAAU,oBAAmB,WACjC,cAAGA,UAAU,kBACb,SAAC,IAAS,CACR0B,KAAK,SACL7G,MAAO,CAAEqrB,MAAO,SAChB3gB,MAAOygB,GACPza,SAAU,SAAC7H,GAZnBuiB,GAY8CviB,EAZxBmH,OAAOtF,MAYmB,EACxCmG,YAAY,uBAKtB,CACe6oB,GACTpO,GAAe/W,EAAUvR,QAAO,SAACC,GAAI,OACzCkB,OAAOC,OAAOnB,GAAM4P,MAAK,SAACnI,GAAK,OAC7BzJ,OAAOyJ,GAAO6gB,cAAchY,SAAS4X,GAAaI,cAAc,GACjE,IAGH,OACE,4BACE,gBAAKpmB,UAAU,YAAW,UACxB,iBAAKA,UAAU,YAAW,WACxB,gBAAKA,UAAU,WAAU,UACvB,wBAAK6b,OAEP,gBAAK7b,UAAU,WAAU,UACvB,wBAAI,iBAEN,gBAAKA,UAAU,qBAGnB,SAACoT,EAAA,EAAiB,CAChBxC,OAAQA,GACRyC,kBApPkB,CAAC,WAAY,OAAQ,aAAc,gBAsPvD,gBAAKrT,UAAU,+BAA8B,UAC3C,UAAC,IAAS,CACRA,UAAU,4CACVkgB,kBAAkB,6FAClBC,0BAA0B,sCAC1BC,mBAAoB,CAAC,GAAI,GAAI,IAC7B7a,MAAO4gB,GACPvG,WAAS,EACTtS,KAAM,GACNnD,OAAQA,GACRqZ,QAASA,GACT8C,SAAU,SAAC5iB,GAAC,OAAK+f,GAAW/f,EAAE8f,QAAQ,EACtC+C,UAAWzD,EACX0D,kBAAmB,SAAC9iB,GAAC,OAAKqf,EAAoBrf,EAAE6B,MAAM,EACtDkhB,QAAQ,KACRhH,eAAa,EACb+U,aAAa,UACbC,SAAS,sBACT9N,iBAAiB,SACjBjH,aAAa,oBACbgV,kBAAmBL,GAAY,WAE/B,SAAC,IAAM,CAAClqB,OAAO,aAAayI,MAAM,gBAAgBD,KAAMuhB,MACxD,SAAC,IAAM,CACL/pB,OAAO,eACPyI,MAAM,iBACND,KAAMyhB,MAER,SAAC,IAAM,CAACjqB,OAAO,eAAeyI,MAAM,eACpC,SAAC,IAAM,CAACzI,OAAO,QAAQyI,MAAM,SAASD,KAvJhC,SAACtV,GACb,OACE,8BAC0B,MAAvBA,EAAKs3B,eACJ,wBACE,SAAC,MAAI,CACH95B,MAAO,CACL+5B,eAAgB,aAElBhzB,QAAS,YApEG,SAAC5F,EAAI24B,GAC3B5B,GAAW,GACXjkB,EAAO9S,GACPo3B,EAAauB,EACf,CAiEcE,CAAgBx3B,EAAKrB,GAAIqB,EAAKs3B,cAChC,EAAE,SAEDt3B,EAAKy3B,OAAS,SAInB,wBACE,SAAC,MAAI,CACHj6B,MAAO,CACL+5B,eAAgB,aAElBhzB,QAAS,YA3EG,SAAC5F,EAAI24B,GAC3BxB,EAAOwB,GACPtE,GAAW,GACXvhB,EAAO9S,EACT,CAwEc+4B,CAAgB13B,EAAKrB,GAAIqB,EAAKs3B,cAChC,EAAE,SAEDt3B,EAAKy3B,YAMlB,EAuH2DnqB,MAAM,WACzD,SAAC,IAAM,CACLR,OAAO,UACPyI,MAAM,aACND,KAlLM,SAACtV,GACf,OACE,8BACsB,MAAnBA,EAAKk2B,YACJ,SAAC,OAAqB,CACpBvzB,UAAU,eACVuB,KAAM,MACN8J,UAAQ,KAGV,wBACE,SAAC,OAAqB,CACpBzJ,QAAS,WACPyxB,GAAqBh2B,EACvB,EACAkE,KAAM,MACN1G,MAAO,CAAEwP,MAAO,gBAM5B,EA6JUM,MAAM,YAER,SAAC,IAAM,CAACR,OAAO,eAAeyI,MAAM,YACpC,SAAC,IAAM,CAACzI,OAAO,OAAOwI,KA9HR,SAACtV,GACrB,OACE,8BAC0B,OAAvBA,EAAK23B,cACF,GACA7sB,IAAO9K,EAAK23B,eAAe3sB,OAAO,gBAG5C,SAyHK+nB,GACC,SAAC,GAAQ,CACPD,aAAcA,GACdC,QAASA,EACTC,WAAYA,EACZC,UAAWA,EACX4C,aAAcA,EACd3C,IAAKA,IAGP,GAEDuC,GACC,SAAC,GAAQ,CACP3C,aAAcA,GACd2C,QAASA,EACTC,WAAYA,EACZzC,UAAWA,EACX4C,aAAcA,EACdF,UAAWA,IAGb,KAIR,E,YC1DA,OAjUA,SAA4Ct4B,GAC1C,IAAM6I,GAAML,EAAAA,EAAAA,QAAO,IAGjB+xB,EASEv6B,EATFu6B,gBACAC,EAQEx6B,EARFw6B,mBACAxzB,EAOEhH,EAPFgH,KACAuC,EAMEvJ,EANFuJ,OACAD,EAKEtJ,EALFsJ,WACAmxB,EAIEz6B,EAJFy6B,gBACA73B,EAGE5C,EAHF4C,UACA8G,EAEE1J,EAFF0J,UACAgxB,EACE16B,EADF06B,cAGF,GAAwCj0B,EAAAA,EAAAA,UAAS6C,GAAW,eAArD2C,EAAY,KAAEC,EAAe,KACpC,GAAoBzF,EAAAA,EAAAA,UAAS,GAAE,eAApBk0B,GAAF,KAAO,MAChB,GAAkDl0B,EAAAA,EAAAA,WAAS,GAAM,eAA1Dm0B,EAAiB,KAAE1vB,EAAoB,KAC9C,GAA8BzE,EAAAA,EAAAA,UAAS,MAAK,eAArCo0B,EAAO,KAAEC,EAAU,KACpBv0B,EAAUC,EAAAA,EAAAA,QA6EhB,OA3EAzD,EAAAA,EAAAA,YACE,WAEM+3B,EADI,OAAR9zB,EACe,KACAyG,IAAOnE,EAAW0oB,iBAAiB9f,GACpD,GACA,CAAC5I,GACD,CAAC2C,KAqED,gBAAK3G,UAAU,YAAW,UACxB,UAAC,KAAM,CACLqf,UAAU,SACV5d,SAAS,SACTF,KAAK,KACLD,QAAS2zB,EACTzzB,QAAS,kBAAM0zB,GAAmB,EAAM,EAAC,WAEzC,SAAC,KAAY,CAACl1B,UAAU,GAAE,UACxB,SAAC,KAAW,UACD,OAAR0B,GACC,iBAAM1B,UAAU,GAAE,SAAC,iCAEnB,iBAAMA,UAAU,GAAE,SAAC,iCAIzB,yBACGs1B,GACC,iBAAKt1B,UAAU,6BAA4B,UACxC,KACD,kBAAMA,UAAU,cAAa,WAC3B,SAAC,MAAa,IAAG,6DAKrB,MAGJ,SAAC,KAAU,WACT,4BACE,gBAAKA,UAAU,YAAW,UACxB,iBAAKA,UAAU,sBAAqB,WAClC,kBAAOA,UAAU,QAAO,SAAC,4BACzB,iBAAMA,UAAU,YAAW,SAAC,OAC5B,gBACEA,UAAU,kBACVuD,IAAK,SAACiI,GACJjI,EAAIkI,QAAQ,GAAKD,CACnB,EAAE,SAEO,OAAR9J,GACC,kBACEA,KAAK,OACLgK,YAAY,wBACZ7Q,MAAO,CAAE46B,UAAW,UACpBjyB,KAAK,cACLoI,UAAW,SAAC1L,GACS,UAAfA,EAAM2L,MAAqBlF,EAAaN,aAC1CnG,EAAMgL,gBACV,EACAY,UAAQ,EACRP,SAAU,SAAC7H,GAAC,OACVkD,GAAgB,SAAC/C,GAAI,yBAChBA,GAAI,cACN,cAAgBH,EAAEmH,OAAOtF,MAAMwS,QAAM,GACrC,KAIP,kBACErW,KAAK,OACLgK,YAAY,wBACZ7Q,MAAO,CAAE46B,UAAW,UACpBjyB,KAAK,cACLoI,UAAW,SAAC1L,GACS,UAAfA,EAAM2L,MAAqBlF,EAAaN,aAC1CnG,EAAMgL,gBACV,EACAY,UAAQ,EACRC,aAAc/H,EAAWqC,YACzBkF,SAAU,SAAC7H,GAAC,OACVkD,GAAgB,SAAC/C,GAAI,yBAChBA,GAAI,cACN,cAAgBH,EAAEmH,OAAOtF,MAAMwS,QAAM,GACrC,YAQf,gBAAK/X,UAAU,YAAW,UACxB,iBAAKA,UAAU,sBAAqB,WAClC,kBAAOA,UAAU,QAAO,SAAC,2BACzB,iBAAMA,UAAU,YAAW,SAAC,OAC5B,gBACEA,UAAU,mBACVuD,IAAK,SAACiI,GACJjI,EAAIkI,QAAQ,GAAKD,CACnB,EAAE,SAEO,OAAR9J,GACC,SAAC,IAAU,CACT8B,KAAK,kBACL2I,SAAUopB,EACVhpB,mBAAiB,EACjBD,WAAY,cACZE,kBAAgB,EAChBC,aAAa,SACbV,aAAc,GACdR,SAAU,SAAC7H,GACT8xB,EAAW9xB,GACXkD,GAAgB,SAAC/C,GAAI,yBAChBA,GAAI,cACN,kBAAoBsE,IAAOzE,GAAG2E,OAAO,eAAa,GAEvD,EACAuD,UAAW,SAAClI,GACVA,EAAEwH,gBACJ,KAGF,SAAC,IAAU,CACT1H,KAAK,kBACL8I,WAAY,cACZH,SAAUopB,EACVhpB,mBAAiB,EACjBC,kBAAgB,EAChBC,aAAa,SACbV,aAAc5D,IAAOnE,EAAW0oB,iBAAiB9f,GACjDrB,SAAU,SAAC7H,GACTkD,GAAgB,SAAC/C,GAAI,yBAChBA,GAAI,cACN,kBAAoBsE,IAAOzE,GAAG2E,OAAO,eAAa,IAErDmtB,EAAW9xB,EACb,EACAkI,UAAW,SAAClI,GACVA,EAAEwH,gBACJ,YAMV,gBAAKlL,UAAU,YAAW,UACxB,iBAAKA,UAAU,sBAAqB,WAClC,kBAAOA,UAAU,QAAO,SAAC,sBACzB,iBAAMA,UAAU,YAAW,SAAC,OAC5B,gBACEA,UAAU,kBACVuD,IAAK,SAACiI,GACJjI,EAAIkI,QAAQ,GAAKD,CACnB,EAAE,SAEO,OAAR9J,GACC,kBACEA,KAAK,OACLgK,YAAY,mBACZ7Q,MAAO,CAAE46B,UAAW,UACpBjyB,KAAK,mBACLoI,UAAW,SAAC1L,GAEO,UAAfA,EAAM2L,MACLlF,EAAagmB,kBAEdzsB,EAAMgL,gBACV,EACAY,UAAQ,EACRP,SAAU,SAAC7H,GAAC,OACVkD,GAAgB,SAAC/C,GAAI,yBAChBA,GAAI,cACN,mBAAqBH,EAAEmH,OAAOtF,MAAMwS,QAAM,GAC1C,KAIP,kBACErW,KAAK,OACLgK,YAAY,mBACZ7Q,MAAO,CAAE46B,UAAW,UACpBjyB,KAAK,mBACLoI,UAAW,SAAC1L,GAEO,UAAfA,EAAM2L,MACLlF,EAAagmB,kBAEdzsB,EAAMgL,gBACV,EACAY,UAAQ,EACRC,aAAc/H,EAAW2oB,iBACzBphB,SAAU,SAAC7H,GAAC,OACVkD,GAAgB,SAAC/C,GAAI,yBAChBA,GAAI,cACN,mBAAqBH,EAAEmH,OAAOtF,MAAMwS,QAAM,GAC1C,YAOf,gBAAK/X,UAAU,YAAY2K,MAAM,SAAQ,SAC9B,OAARjJ,GACC,oBACEA,KAAK,SACLC,MAAM,OACN3B,UAAU,kBACV4B,QAzQO,WACrB,IAAIyM,GAAQC,EAAAA,EAAAA,GAAiB/K,IACf,IAAV8K,GACFzI,GAAqB,GAEnByI,GAGJrM,IAAM,CACJC,OAAQ,OACRC,IAAKjB,EAAO,iDACZ5D,KAAM,CACJrB,GAAI,KACJsB,UAAWA,EACX+I,YAAaM,EAAaN,YAC1BqvB,cAAe/uB,EAAa+lB,gBAC5BiJ,gBAAiBhvB,EAAagmB,kBAEhCiJ,QAAS,CAAE,eAAgB,sBAC1BvzB,MAAK,WACNgzB,IACAH,GAAmB,GACnBC,IACA/wB,GAAU,GACVzB,YAAW,WACTyB,GAAU,EACZ,GAAG,IACL,GACF,EA6OwC,WAExB,SAAC,MAAM,IAAG,WAIZ,oBACE1C,KAAK,SACLC,MAAM,OACN3B,UAAU,kBACV4B,QApPQ,WACtB,IAAIyM,GAAQC,EAAAA,EAAAA,GAAiB/K,IACf,IAAV8K,GACFzI,GAAqB,GAEnByI,IAGJrM,IAAM,CACJC,OAAQ,OACRC,IAAKjB,EAAO,iDACZ5D,KAAM,CACJrB,GAAIiI,EACJ3G,UAAWA,EACX+I,YAAaM,EAAaN,YAC1BqvB,cAAevtB,IAAOxB,EAAa+lB,iBAAiBrkB,OAClD,cAEFstB,gBAAiBhvB,EAAagmB,oBAE/BtqB,MAAK,SAACC,GACP6yB,IACAE,IACAH,GAAmB,GACnBE,GAAc,IACF,eACd,IACAzyB,YAAW,WACTyyB,GAAc,EAChB,GAAG,KACL,EAsNyC,WAEzB,SAAC,MAAM,IAAG,qBAU5B,ECmIA,OA7bA,SAA6B16B,GAAQ,IAAD,EAC1B4C,EAAyB5C,EAAzB4C,UAAWqR,EAAcjU,EAAdiU,UACbqC,EAAarC,EAAUsC,MAC3B,SAACnT,GAAI,MAA2B,kBAAtBA,EAAKiT,YAAgC,IAGjD,GAAwB5P,EAAAA,EAAAA,UAAS,IAAG,eAA7B9D,EAAI,KAAEw4B,EAAO,KACpB,GAAoC10B,EAAAA,EAAAA,UAAS,IAAG,eAAzCoP,EAAU,KAAEC,EAAa,KAChC,GAAsCrP,EAAAA,EAAAA,UAAS,IAAG,eAA3CsP,EAAW,KAAEC,EAAc,KAC5BzP,EAAUC,EAAAA,EAAAA,QAChB,GAAsCC,EAAAA,EAAAA,WAAS,GAAM,eAA9CqO,EAAW,KAAEC,EAAc,KAClC,GAAsBtO,EAAAA,EAAAA,UAAS,KAAI,eAA5B0N,EAAG,KAAEC,EAAM,KAClB,GAA0C3N,EAAAA,EAAAA,WAAS,GAAM,eAAlD4N,EAAa,KAAEC,EAAgB,KACtC,GAA8C7N,EAAAA,EAAAA,WAAS,GAAM,eAAtD8zB,EAAe,KAAEC,EAAkB,KAC1C,GAAoC/zB,EAAAA,EAAAA,UAAS,IAAG,gBAAzC6C,GAAU,MAAEE,GAAa,MAChC,IAAwB/C,EAAAA,EAAAA,UAAS,OAAM,iBAAhCO,GAAI,MAAEuO,GAAO,MACpB,IAA4B9O,EAAAA,EAAAA,WAAS,GAAM,iBAApCkD,GAAM,MAAED,GAAS,MACxB,IAAiCjD,EAAAA,EAAAA,WAAS,GAAM,iBAAzC8N,GAAO,MAAEmmB,GAAa,MAC7B,IAA4Bj0B,EAAAA,EAAAA,YAAU,iBAA/B8C,GAAM,MAAEoM,GAAS,MACxB,IAA8BlP,EAAAA,EAAAA,UAAS,IAAG,iBAAnC0a,GAAO,MAAEC,GAAU,MAC1B,IAA4B3a,EAAAA,EAAAA,WAAS,GAAM,iBAApC20B,GAAM,MAAEC,GAAS,MACxB,IAA4B50B,EAAAA,EAAAA,WAAS,GAAM,iBAApCmO,GAAM,MAAEC,GAAS,MAClB2B,IAAkBhO,EAAAA,EAAAA,QAAO,MACzBpC,GAAeC,aAAaC,QAAQ,SAI1C,IAA4BG,EAAAA,EAAAA,UAAS,IAAG,iBAAjCyP,GAAM,MAAEC,GAAS,OAIxBpT,EAAAA,EAAAA,YAAU,WACRqT,IACF,GAAG,IAEH,IAAMA,GAAW,WAGf9O,IAAM,CACJC,OAAQ,MACRC,IAAKjB,EAAO,iDAA6CH,MACxDuB,MAAK,SAACE,GACIA,EAAKlF,KAEXwB,SAAQ,SAACf,GAhBA,aAiBRA,EAAKiT,cACPF,GAAU,CAAC/S,GAEf,GACF,GACF,EAEMinB,GAAQ,CACZ/oB,GAAI,KACJqK,YAAa,GACbqmB,gBAAiB,GACjBC,iBAAkB,IAEpB,IAA0BxrB,EAAAA,EAAAA,YAAU,iBAAtB60B,IAAF,MAAU,OACtB,IAAgC70B,EAAAA,EAAAA,UAAS4jB,IAAM,iBAAxCre,GAAQ,MAAE1D,GAAW,OAC5BvF,EAAAA,EAAAA,YAAU,WAAO,GAAG,CAACuG,KAErB,IAKA,IAA0C7C,EAAAA,EAAAA,UACxCJ,aAAaC,QAAQ,kBAAoB,IAC1C,iBAFMi1B,GAAa,MAAEC,GAAgB,MAoBhCf,GAAkB,WACtB5lB,IAAU,GACV2B,GAAgBzF,QAAU,IAAIsa,gBAE9B/jB,IAAM,CACJC,OAAQ,MACRC,IACEjB,EAAO,mEACqD3D,GAC9D64B,OAAQjlB,GAAgBzF,QAAQ0qB,SAC/B9zB,MAAK,SAACgH,GAEP,IADA,IAAM4I,EAAU5I,EAAIhM,KACX6Q,EAAI,EAAGA,EAAI+D,EAAQpE,OAAQK,IAClC+D,EAAQ/D,GAAQ,IAAIA,EAAI,EACxB+D,EAAQ/D,GAAoB,gBACO,MAAjC+D,EAAQ/D,GAAoB,gBACxB,IACA/F,IAAO8J,EAAQ/D,GAAoB,iBAAG7F,OAAO,eAkBrDqI,EADW,CAAC,YAEZnB,IAAU,GAGkB,GAA1BZ,EAAU,IAAIC,SACVinB,EArBW,CACf,CACExvB,YAAa,wBACbqmB,gBAAiB,OACjBC,iBAAkB,mBAClBlM,QAAS,YAgBYtO,OAAOF,IAC1B4jB,EAdY,CAChB,CACExvB,YAAa,wBACbqmB,gBAAiB,OACjBC,iBAAkB,qBAUIxa,OAAOF,IAGjCtP,YAAW,WACT4M,IAAU,EACZ,GAAG,IACL,GACF,GAEA9R,EAAAA,EAAAA,YAAU,WACR03B,IACF,GAAG,IAEH,IAKM9iB,GAAe,SAAChV,GACVoT,EAAY,GACtB,OACE,gBAAK9F,MAAM,SAAQ,UACjB,gCAC6B,GAA1BgE,EAAU,IAAIC,UACb,SAAC,MAAU,CACT5O,UAAU,oBACV,cAAY,UACZ2B,MAAM,aACN0I,MAAM,SACN3I,KAAK,OACL7G,MAAO,CAAEu7B,cAAe,QACxB70B,KAAK,QACLK,QAAS,WACPsC,GAAc7G,GACdgT,GAAUhT,EAAKrB,IACfk5B,GAAmB,GACnBjlB,GAAQ,OACV,IAGF,GACC,IAAI,OAEoB,GAA1BtB,EAAU,IAAIC,UACb,SAAC,MAAY,CACX5O,UAAU,YACV,cAAY,UACZ2B,MAAM,eACN0I,MAAM,SACN3I,KAAK,SACL0J,OAAO,UACPxJ,QAAS,WACP6N,GAAe,GACfX,EAAOzR,EAAKrB,IACZiU,GAAQ,SACV,IAGF,OAKV,EAEMomB,GAAkB,SAACh5B,GACvB,OACE,gBAAK,cAAY,UAAUsE,MAAOtE,EAAKqvB,gBAAgB,SACpDrvB,EAAKqvB,iBAGZ,EACM4J,GAAgB,SAACj5B,GACrB,OACE,gBAAK,cAAY,UAAUsE,MAAOtE,EAAKgJ,YAAY,SAChDhJ,EAAKgJ,aAGZ,EACMkwB,GAAoB,SAACl5B,GACzB,OACE,gBAAK,cAAY,UAAUsE,MAAOtE,EAAKsvB,iBAAiB,SACrDtvB,EAAKsvB,kBAGZ,EAEMpa,GAAwC,QAA1B,EAAGvT,OAAOwT,KAAKjC,UAAW,aAAvB,EAAyBhU,KAAI,SAACkW,EAAKvE,GACxD,OACE,SAAC,MAAM,CACLwE,UAAQ,EAERC,KACS,WAAPF,EACIJ,GACQ,mBAAPI,GAA4B4jB,IACrB,eAAP5jB,GAAwB6jB,IACjB,oBAAP7jB,GAA6B8jB,GAEpC3jB,MAAOH,EACPtI,OAAQoG,EAAWkC,IATdA,EAYX,KAEAhV,EAAAA,EAAAA,YAAU,WACRJ,EAAK,IAAMmT,EAAcqC,KAAKC,MAAMD,KAAKE,UAAU1V,EAAK,KAC1D,GAAG,CAACA,IAGJ,IAAM8V,GAAc,WAClBnR,IAAM,CACJC,OAAQ,SACRC,IACEjB,EAAO,qEACuD4N,KAC/DxM,MAAK,SAACI,GACP0yB,KACA1lB,GAAe,GACfT,GAAiB,GACjBrM,YAAW,WACTqM,GAAiB,EACnB,GAAG,IACL,GACF,EAgBA,SAASwnB,GAA+B97B,GACtC,IAAQ8U,EAAgC9U,EAAhC8U,YAAaC,EAAmB/U,EAAnB+U,eAErB,OACE,0BACE,SAAC,IAAS,WACR,UAAC,KAAM,CACL4P,UAAU,SACV5d,SAAS,SACTH,QAASkO,EACTjO,KAAK,KACLvB,UAAU,YACVwB,QAAS,kBAAMiO,GAAe,EAAM,EAAC,WAErC,SAAC,KAAY,CAACzP,UAAU,GAAE,UACxB,SAAC,KAAW,WACV,iBAAMA,UAAU,GAAE,SAAC,sBAGvB,UAAC,KAAU,WAAC,yCAEV,iBAAKA,UAAU,4BAA2B,WACxC,oBACEA,UAAU,kBACV2B,MAAM,SACNC,QAAS,WACPuR,IACF,EAAE,WAEF,SAAC,MAAO,IAAG,cAEb,oBACEnT,UAAU,oBACV2B,MAAM,SACNC,QAAS,WACP6N,GAAe,EACjB,EAAE,WAEF,SAAC,MAAO,CAAC7U,SAAU,SAAU,UAAQ,mBAQrD,CAEA,OApDA6C,EAAAA,EAAAA,YAAU,WATRuE,IAAM,CACJC,OAAQ,MACRC,IAAKjB,EAAO,oDAAgD3D,KAC3D+E,MAAK,SAAUC,GAChB,IAAIC,EAAOD,EAASjF,KACpBye,GAAWvZ,EACb,GAKF,GAAG,KAmDD,2BACG+M,IAAS,SAACiE,EAAA,EAAM,CAACC,YAjLF,WAClBtC,GAAgBzF,SAAWyF,GAAgBzF,QAAQgI,QACnDlE,IAAU,EACZ,IA8KqD,GAEhDR,GACC,iBAAK/O,UAAU,oBAAmB,WAChC,SAAC,MAAO,IAAG,yCAGb,GAGDqE,IACC,iBAAKrE,UAAU,oBAAmB,WAChC,SAAC,MAAO,IAAG,uCAGb,GAGDiP,IACC,iBAAKjP,UAAU,oBAAmB,WAChC,SAAC,MAAO,IAAG,yCAGb,GAGD81B,IACC,iBAAK91B,UAAU,oBAAmB,WAChC,SAAC,MAAO,IAAG,yCAGb,IAGF,gBAAKA,UAAU,YAAW,UACxB,iBAAKA,UAAU,YAAW,WACxB,gBAAKA,UAAU,WAAU,UACvB,wBAAK6b,QAEP,gBAAK7b,UAAU,WAAU,UACvB,wBAAI,0CAEN,gBAAKA,UAAU,qBAGnB,SAACoT,EAAA,EAAiB,CAChBxC,OAAQA,GACRyC,kBAhVkB,CAAC,WAAY,OAAQ,aAAc,oBAkVvD,gBAAKrT,UAAU,wBAAuB,UACpC,gBAAKA,UAAU,oBAAmB,UAChC,iBAAKA,UAAU,2BAA0B,WACvC,kBAAOiN,QAAQ,OAAM,SAAC,6BACtB,oBAAQ1H,MAAO0wB,GAAe1qB,SA5SlB,SAAC7H,GACrB,IAAM6B,EAAQ7B,EAAEmH,OAAOtF,MACvB2wB,GAAiB3wB,GACjBxE,aAAa01B,QAAQ,gBAAiBlxB,GACtCywB,GAAStyB,EAAEmH,OAAOtF,OAClBgK,IAAU,GACV5M,YAAW,WACT4M,IAAU,GACVwmB,IAAU,EACZ,GAAG,KACHpzB,YAAW,WACTozB,IAAU,EACZ,GAAG,IACL,EA+RgE,WACpD,mBAAQxwB,MAAM,GAAE,SAAC,wBACjB,mBAAQA,MAAM,QAAO,SAAC,WACtB,mBAAQA,MAAM,SAAQ,SAAC,YACvB,mBAAQA,MAAM,MAAK,SAAC,mBAM5B,iBAAKvF,UAAU,wBAAuB,WACpC,SAACgY,EAAA,EAA+B,CAC9B3a,KAAMA,EACNoT,YAAaA,EACb8B,eAAgBA,GAChBhC,WAAYA,EACZC,cAAeA,EACflD,KAAM,MAER,gBAAKtN,UAAU,0DAAyD,SAC7C,IAAd,OAAVgR,QAAU,IAAVA,OAAU,EAAVA,EAAYpC,WACX,oBACElN,KAAK,MACLC,MAAM,MACN3B,UAAU,kBACV4B,QAAS,WACPszB,GAAmB,GACnBjlB,GAAQ,MACV,EAAE,WAEF,SAAC,MAAM,IAAG,SAIZ,KAIHglB,GACC,SAAC,GAAkC,CACjCA,gBAAiBA,EACjBrqB,aA9VW,SAAClH,GACpB,MAAsBA,EAAEmH,OAAhB7O,EAAE,EAAFA,GAAIuJ,EAAK,EAALA,MACZvC,IAAY,SAACa,GAAI,yBAAWA,GAAI,cAAG7H,EAAKuJ,GAAK,GAC/C,EA4VU2vB,mBAAoBA,EACpBxzB,KAAMA,GACNsC,WAAYA,GACZE,cAAeA,GACfixB,gBAAiBA,GACjBlxB,OAAQA,GACR8gB,MAAOA,GACP1nB,KAAMA,EACN+G,UAAWA,GACXgxB,cAAeA,GACf1uB,SAAUA,GACV1D,YAAa0D,GACbpJ,UAAWA,IAGb,GAGDkS,GACC,SAACgnB,GAA8B,CAC7BhnB,YAAaA,EACbC,eAAgBA,EAChBxL,OAAQA,KAGV,QAKV,E,wBCiDA,OA/eA,SAAwB,GASpB,IAAD,EARD7D,EAAS,EAATA,UACAC,EAAY,EAAZA,aAEAq2B,GADI,EAAJr5B,KACQ,EAARq5B,UAEA3zB,GADU,EAAV4zB,WACO,EAAP5zB,SAEA4L,GADQ,EAARioB,SACS,EAATjoB,WAEA,GAA0BxN,EAAAA,EAAAA,UAAS,IAAG,eAAxB01B,GAAF,KAAU,MACtB,GAAkC11B,EAAAA,EAAAA,UAAS,IAAG,eAAvC21B,EAAS,KAAEC,EAAY,KAC9B,GAAgC51B,EAAAA,EAAAA,UAAS,IAAG,eAA3B61B,GAAF,KAAa,MAC5B,GAAkC71B,EAAAA,EAAAA,UAAS,IAAG,eAAvC81B,EAAS,KAChB,GAD8B,MACM91B,EAAAA,EAAAA,UAAS,KAAG,eAAzCoP,EAAU,KAAEC,EAAa,KAEhC,GADqBzP,aAAaC,QAAQ,UACNG,EAAAA,EAAAA,UAAS,KAAG,eAA7B+1B,GAAF,KAAe,MAC1Bj2B,EAAUC,EAAAA,EAAAA,QAChB,GAAsCC,EAAAA,EAAAA,WAAS,GAAM,eAA9Cg2B,EAAW,KAClB,GADkC,MACAh2B,EAAAA,EAAAA,UAAS,KAAG,eAC9C,GADgB,KAAc,MACQA,EAAAA,EAAAA,WAAS,IAAM,eAA9CqO,EAAW,KAAEC,EAAc,KAClC,GAAoCtO,EAAAA,EAAAA,UAAS,IAAG,eAChD,GADiB,KAAe,MACFA,EAAAA,EAAAA,WAAS,IAAM,eAAtCi2B,EAAO,KACd,GAD0B,MACEj2B,EAAAA,EAAAA,UAAS,KAAG,gBAAzBk2B,IAAF,MAAW,OAOxB,IAAoCl2B,EAAAA,EAAAA,UALjB,CACjBnF,GAAI,GACJs7B,cAAe,GACfC,cAAe,KAEuC,iBAAjDvzB,GAAU,MAAEE,GAAa,MAChC,IAA4B/C,EAAAA,EAAAA,UAAS6C,IAAW,iBAAjCiB,IAAF,MAAW,OACxB,IAAgC9D,EAAAA,EAAAA,UAAS,IAAG,iBAC5C,IADe,MAAa,OACDA,EAAAA,EAAAA,UAAS,KAAG,iBACvC,IADY,MAAW,OACaA,EAAAA,EAAAA,UAAS,KAAG,iBAChD,IADiB,MAAe,OACcA,EAAAA,EAAAA,WAAS,IAAM,iBAAtDq2B,GAAe,MACtB,IAD0C,OACRr2B,EAAAA,EAAAA,WAAS,IAAM,iBAA1Cs2B,GAAS,MAAEC,GAAY,MAC9B,IAA0Bv2B,EAAAA,EAAAA,UAAS,CAAC,CAAC,IAAG,iBAA1Bw2B,IAAF,MAAU,OACtB,IAA4Bx2B,EAAAA,EAAAA,UAAS,IAAG,iBAqElCy2B,IArEO,MAAW,MAqEH,WACnB51B,IAAAA,IAEIf,EAAO,iEACqDy1B,IAG7Dr0B,MAAK,SAACgH,GACL,IAAM4I,EAAU5I,EAAIhM,KAChBw6B,EAAS,GACb5lB,EAAQpT,SAAQ,SAACi5B,GACf,IAAI54B,EAAM,CACRqG,MAAOuyB,EAAQ97B,IAEjB67B,EAAO94B,KAAKG,GAEZ23B,EAASgB,EACX,IAEA,IAAK,IAAI3pB,EAAI,EAAGA,EAAI+D,EAAQpE,OAAQK,IAClC+D,EAAQ/D,GAAQ,IAAIA,EAAI,EAE1B,IAaI6pB,EAAc,CAChB,CACE3mB,IAAK,OACL4mB,OAAQ,SACRxc,aAAc,eACdyc,SAAU,WACVC,eAAgB,iBAChBC,kBAAmB,oBACnBC,KAAM,eAGVf,GAAUplB,EAAQ,GAAGqlB,eAEnB3oB,EAAU,IAAIC,SACVmoB,EAAagB,EAAY5lB,OAAOF,IAItC0lB,GAAS1lB,GACT/N,GAAc+N,EAChB,GACJ,IAEAxU,EAAAA,EAAAA,YAAU,WACRm6B,IACF,GAAG,IACH,QAAkBz2B,EAAAA,EAAAA,UAAS,IAAG,iBAAtB,MAAM,OACd1D,EAAAA,EAAAA,YAAU,WACRq5B,EAAU,IAAMtmB,EAAcqC,KAAKC,MAAMD,KAAKE,UAAU+jB,EAAU,KACpE,GAAG,CAACA,IAEJ,IAMMzkB,GAAe,SAAChV,GACpB,OACE,8BAC6B,GAA1BsR,EAAU,IAAIC,UACb,gBAAK/T,MAAO,CAAE2lB,UAAW,SAAUpV,OAAQ,eAAgB,UAEzD,SAAC,MAAY,CACX,cAAY,UACZzJ,MAAM,aAWV,IAIR,EAEM02B,GAAuB,SAACh7B,GAC5B,OACE,8BAC6B,GAA1BsR,EAAU,IAAIC,UACb,oBACE5S,GAAG,gBAGHuP,SAAU,SAAC7H,GACTuB,GAAUvB,EAAEmH,OAAOtF,OAEnB2xB,EAAc75B,EAAKrB,GACrB,EACA+P,aAAc1O,EAAKi6B,cACnBjsB,UAAQ,aAER,mBACE9F,MAAM,OACN4G,SAAqC,QAA3BlH,GAAUqyB,cACpB,SACD,SAGD,mBACE/xB,MAAM,OACN4G,SAAqC,QAA3BlH,GAAUqyB,cAEpB,SACD,iBAGD,mBACE/xB,MAAM,OACN4G,SAAqC,QAA3BlH,GAAUqyB,cAEpB,SACD,kBAKH,oBAAQt7B,GAAG,gBAAgB+P,aAAc1O,EAAKi6B,cAAejsB,UAAQ,aACnE,mBACE9F,MAAM,OACN4G,SAAqC,QAA3BlH,GAAUqyB,cACpB,SACD,SAGD,mBACE/xB,MAAM,OACN4G,SAAqC,QAA3BlH,GAAUqyB,cAEpB,SACD,iBAGD,mBACE/xB,MAAM,OACN4G,SAAqC,QAA3BlH,GAAUqyB,cAEpB,SACD,kBAOX,EAEMgB,GAAgB,SAACj7B,GACrB,OAAO,gBAAKsE,MAAOtE,EAAK+6B,KAAK,SAAE/6B,EAAK+6B,MACtC,EACMG,GAAa,SAACl7B,GAClB,OACE,gBAAK,cAAY,UAAUsE,MAAOtE,EAAK86B,kBAAkB,SACtD96B,EAAK86B,mBAGZ,EACMK,GAAa,SAACn7B,GAClB,OACE,gBAAKsE,MAAOwG,IAAO9K,EAAKme,cAAcnT,OAAO,eAAe,SACzDF,IAAO9K,EAAKme,cAAcnT,OAAO,gBAGxC,EACMowB,GAAgB,SAACp7B,GACrB,OACE,gBAAKsE,MAAOwG,IAAO9K,EAAK46B,UAAU5vB,OAAO,eAAe,SACrDF,IAAO9K,EAAK46B,UAAU5vB,OAAO,gBAGpC,EACM6J,GAAS,SAAC7U,GACd,OACE,gBAAK,cAAY,UAAUsE,MAAOtE,EAAK26B,OAAO,SAC3C36B,EAAK26B,QAGZ,EACMU,GAAU,SAACr7B,GACf,OACE,iBAAMxC,MAAO,CAAE2lB,UAAW,SAAU7jB,WAAY,OAAQ,SAAEU,EAAK+T,KAEnE,EASMmB,GAAwC,QAA1B,EAAGvT,OAAOwT,KAAKjC,UAAW,aAAvB,EAAyBhU,KAAI,SAACkW,EAAKvE,GACxD,OACE,SAAC,IAAM,CACLwE,UAAQ,EAERC,KACS,MAAPF,EACIJ,GACO,iBAAPI,EACA4lB,GACO,QAAP5lB,EACA6lB,GACO,gBAAP7lB,EACA+lB,GACO,YAAP/lB,EACAgmB,GAGK,UAAPhmB,EACEP,GACO,qBAAPO,EACA8lB,GACO,OAAP9lB,GAAgBimB,GAEtB9lB,MAAOH,EACPtI,OAAQoG,EAAWkC,IArBdA,EAwBX,IAEA,SAASkmB,GAAaj+B,GACpB,IAAQ8U,EAA8C9U,EAA9C8U,YAAaC,EAAiC/U,EAAjC+U,eAAgBmpB,EAAiBl+B,EAAjBk+B,aACrC,OACE,gBAAK54B,UAAU,uBAAsB,UAEnC,UAAC,KAAM,CACLsB,QAASkO,EACTjO,KAAK,KACLvB,UAAU,YACVwB,QAAS,kBAAMiO,GAAe,EAAM,EAAC,WAErC,SAAC,KAAY,CAACzP,UAAU,GAAE,UACxB,SAAC,KAAW,WACV,iBAAMA,UAAU,GAAE,SAAC,6BAGvB,UAAC,KAAU,YACT,uBAAG,uDAEH,iBAAKA,UAAU,4BAA2B,WACxC,oBACEnF,MAAO,CAAEg+B,OAAQ,mBACjBn3B,KAAK,SACL1B,UAAU,MAEV4B,QAAS,WACPg3B,IACAnpB,GAAe,EACjB,EAAE,UAED,IAAI,MACD,QAEN,oBACE5U,MAAO,CAAEg+B,OAAQ,mBACjBn3B,KAAK,SACL1B,UAAU,MACV4B,QAAS,WACP6N,GAAe,EACjB,EAAE,UAED,IAAI,KACF,iBAQjB,CAEA,OACE,4BACE,UAAC,KAAM,CACLnO,QAASlB,EACTmB,KAAK,KACLvB,UAAU,aACVwB,QAAS,kBAAMnB,GAAa,EAAM,EAClC,WAEA,SAAC,KAAY,CAACL,UAAU,GAAGnF,MAAO,CAAEuQ,OAAQ,cAAe,UACzD,SAAC,KAAW,WACV,iBAAMpL,UAAU,GAAE,SAAC,0BAGvB,SAAC,KAAU,WACT,2BACGw3B,IACC,gBAAKx3B,UAAU,oBAAmB,UAChC,kBAAMA,UAAU,SAAQ,WACtB,SAAC,MAAO,IAAG,6CAKf,IAEW,IAAZo3B,GACC,gBAAKp3B,UAAU,kBAAiB,UAC9B,kBAAMA,UAAU,SAAQ,WACtB,SAAC,MAAa,IAAG,mDAKrB,GAGDm3B,GACC,gBAAKn3B,UAAU,oBAAmB,UAChC,kBAAMA,UAAU,SAAQ,WACtB,SAAC,MAAa,IAAG,6CAKrB,GAGDy3B,IACC,gBAAKz3B,UAAU,oBAAmB,UAChC,kBAAMA,UAAU,SAAQ,WACtB,SAAC,MAAO,IAAG,+CAKf,IAEF,0BACE,SAACgY,EAAA,EAA+B,CAC9B3a,KAAMy5B,EACNxpB,KAtbD,GAubCiF,eAAgBA,GAChBhC,WAAYA,EACZC,cAAeA,OAGnB,gBAAKxQ,UAAU,0DAAyD,SACrE,cAcRwP,GACC,SAACmpB,GAAY,CACXnpB,YAAaA,EACbC,eAAgBA,EAChBmpB,aA7Ya,WACnBlB,IAAa,GACb11B,IAAAA,OACUf,EAAO,iDAA6Cg2B,IAC3D50B,MAAK,SAACgH,GACL,IAAMyvB,EAAMzvB,EAAIhM,KAChB25B,EAAY8B,GACZlB,KACA70B,IACA20B,IAAa,GAEb/0B,YAAW,WACT+0B,IAAa,EACf,GAAG,IACL,GACJ,IAiYM,KAIR,E,oCCrHA,OApXA,SAA0Bh9B,GAAQ,IAAD,EAC/B,GAAkCyG,EAAAA,EAAAA,WAAS,GAAM,eAA1Cf,EAAS,KAAEC,EAAY,KAC9B,GAA4Cc,EAAAA,EAAAA,WAAS,GAAM,eAC3D,GADoB,KAAoB,MACdA,EAAAA,EAAAA,UAAS,KAAG,eAA/B43B,EAAK,KAAEC,EAAQ,KACtB,GAAsC73B,EAAAA,EAAAA,YAAU,eAAzC83B,EAAW,KAAEC,EAAc,KAClC,GAAgC/3B,EAAAA,EAAAA,UAAS,IAAG,eAArCu1B,EAAQ,KAAEyC,EAAW,KAC5B,GAAoCh4B,EAAAA,EAAAA,UAAS,IAAG,eAAzCw1B,EAAU,KAAEyC,EAAa,KAChC,GAAsCj4B,EAAAA,EAAAA,UAAS,IAAG,eAA3CoD,EAAW,KAAE+L,EAAc,KAClC,GAAgCnP,EAAAA,EAAAA,UAAS,IAAG,eAArCy1B,EAAQ,KAAEyC,EAAW,KACtBp4B,EAAUC,EAAAA,EAAAA,QAChB,GAAoCC,EAAAA,EAAAA,UAAS,IAAG,eAAzCm4B,EAAU,KAAEC,EAAa,KAChC,GAAsCp4B,EAAAA,EAAAA,WAAS,GAAM,eAA9CqO,EAAW,KAAEC,EAAc,KAC1BnS,EAAyB5C,EAAzB4C,UAAWqR,EAAcjU,EAAdiU,UAEnB,GAAwBxN,EAAAA,EAAAA,UAAS,CAAC,CAAC,IAAG,eAA/B9D,GAAI,KAAEqqB,GAAO,KACpB,IAAkCvmB,EAAAA,EAAAA,UAAS,CAAC,CAAC,IAAG,iBAGhD,IAHgB,MAAc,OAGAA,EAAAA,EAAAA,UAAS,KAAG,iBAA1Bq4B,IAAF,MAAY,OACpB14B,GAAeC,aAAaC,QAAQ,SAmB1C,IAA4BG,EAAAA,EAAAA,UAAS,IAAG,iBAAjCyP,GAAM,MAAEC,GAAS,OAIxBpT,EAAAA,EAAAA,YAAU,WACRqT,IACF,GAAG,IAEH,IAAMA,GAAW,WAGf9O,IAAM,CACJC,OAAQ,MACRC,IAAKjB,EAAO,iDAA6CH,MACxDuB,MAAK,SAACE,GACIA,EAAKlF,KAEXwB,SAAQ,SAACf,GAhBA,aAiBRA,EAAKiT,cACPF,GAAU,CAAC/S,GAEf,GACF,GACF,EACMiF,GAAU,WACdf,IAAAA,IAEIf,EAAO,4DACgD3D,IAGxD+E,MAAK,SAACgH,GACL,IAAM4I,EAAU5I,EAAIhM,KACpB4U,EAAQpT,SAAQ,SAACoT,EAASnE,GACxBmE,EAAa,IAAInE,EAAQ,CAE3B,IAeA4Z,GAZiB,CACf,CACE+R,IAAK,OACLC,UAAW,cACXC,SAAU,OACVC,SAAU,WACVC,SAAU,eACVC,SAAU,SACVxzB,SAAU,aAIK6L,OAAOF,GAC5B,IACCzP,OAAM,SAACC,GACNU,QAAQC,IAAI,UAAYX,EAC1B,GACJ,GAEAhF,EAAAA,EAAAA,YAAU,WACRsF,KA3EAf,IAAM,CACJC,OAAQ,MACRC,IACEjB,EAAO,4DAC8C3D,KAEtD+E,MAAK,SAAUC,GACd,IAAIC,EAAOD,EAASjF,KAEpBiT,EAAe/N,EAEjB,IACCC,OAAM,SAAUF,GAAW,GAiEhC,GAAG,IACH,IASMy3B,GAAqB,SAAC18B,GAC1B,OACE,+BACE,iBACE2C,UAAU,uBACV,cAAY,UACZ2B,MAAOtE,EAAKy8B,SACZj/B,MAAO,CAAEuQ,OAAQ,UAAWoV,UAAW,SAAUnW,MAAO,WACxDzI,QAAS,WACP0Q,KAEA0mB,EAAS37B,EAAK07B,OAEdG,EAAe77B,EAAKm2B,aACtB,EAAE,UAEF,gBAAK34B,MAAO,CAAE2lB,UAAW,SAAUoU,eAAgB,aAAc,SAC9Dv3B,EAAKy8B,cAKhB,EACME,GAAW,SAAC38B,GAChB,OACE,iBAAMxC,MAAO,CAAE2lB,UAAW,SAAU7jB,WAAY,MAAO7B,MAAO,QAAS,SACpEuC,EAAKo8B,KAGZ,EACMjsB,GAAW,SAACnQ,GAChB,OACE,iBACE2C,UAAU,uBACV,cAAY,UACZ2B,MAAOtE,EAAKiJ,SAAS,SAEpBjJ,EAAKiJ,UAGZ,EACM+L,GAAe,SAAChV,GACpB,OACE,+BACE,iBACE2C,UAAU,uBACV,cAAY,UACZ2B,MAAOtE,EAAKw8B,SACZh/B,MAAO,CAAEuQ,OAAQ,UAAWoV,UAAW,SAAUnW,MAAO,WAExDzI,QAAS,WAzDfvB,GAAa,GA2DL84B,EAAY97B,EAAK48B,OACjBb,EAAc/7B,EAAKu8B,UACnBP,EAAYh8B,EAAK68B,UACnB,EAAE,UAEF,gBAAKr/B,MAAO,CAAE2lB,UAAW,SAAUoU,eAAgB,aAAc,SAC7C,GAAjBv3B,EAAKw8B,SAAgBx8B,EAAKw8B,SAAW,QAKhD,EACMtnB,GAAwC,QAA1B,EAAGvT,OAAOwT,KAAK8mB,UAAW,aAAvB,EAAyB/8B,KAAI,SAACkW,EAAKvE,GACxD,OACE,SAAC,IAAM,CACLwE,UAAQ,EAERC,KACS,YAAPF,EACIJ,GACO,YAAPI,EACAsnB,GACO,OAAPtnB,EACAunB,GACO,YAAPvnB,GAAqBjF,GAE3BoF,MAAOH,EACPtI,OAAQmvB,EAAW7mB,IAXdA,EAcX,IACMH,GAAqB,WACzB7C,GAAe,EACjB,EAEA,SAASkpB,GAAaj+B,GAAQ,IAAD,EAU3B,IAAM24B,EAAuB,SAACh2B,GAC5B,IAAMi2B,EACJryB,EAAO,mDACqCk5B,EAAU,GAAG,GAAE,wBAAgBlB,GAE7Ej3B,IAAM,CACJE,IAAKoxB,EACLrxB,OAAQ,MACRwxB,aAAc,SACbpxB,MAAK,SAACC,GACP,IAAMJ,EAAMwxB,OAAOC,IAAIC,gBAAgB,IAAIC,KAAK,CAACvxB,EAASjF,QAEpDy2B,EAAOnmB,SAASoa,cAAc,KAEpC+L,EAAKC,KAAO7xB,EACZ4xB,EAAKzO,aAAa,WAAYhoB,EAAK+8B,WACnCzsB,SAASgF,KAAKshB,YAAYH,GAC1BA,EAAKlV,OACP,GACF,GAEAnhB,EAAAA,EAAAA,YAAU,WACR41B,GACF,GAAG,IACH,IAWMgH,GAXYC,EAAAA,GAAAA,GAAW,CAC3BC,OAAQ,CACNC,SAAU,WACVC,IAAK,QACLC,UAAW,OAEbC,UAAW,CACT9B,OAAQ,6BAII+B,GAERprB,EAAuC9U,EAAvC8U,YAAaC,EAA0B/U,EAA1B+U,eAAgBspB,EAAUr+B,EAAVq+B,MAG/BoB,EAAiB,OAALpB,QAAK,IAALA,GAAiB,QAAZ,EAALA,EAAO9e,MAAM,YAAI,WAAZ,EAAL,EAAmB1d,KAAI,SAACuB,GAAI,OAAS,OAAJA,QAAI,IAAJA,OAAI,EAAJA,EAAMmc,MAAM,IAAI,IAMnE,OAJS,OAATkgB,QAAS,IAATA,GAAAA,EAAW59B,KAAI,SAACmH,GACd81B,GAAW91B,EAAE,GACf,KAGE,gBAAK1D,UAAU,uBAAsB,UAEnC,UAAC,KAAM,CACLsB,QAASkO,EACTjO,KAAK,KACLvB,UAAU,uBACVwB,QAAS,kBAAMiO,GAAe,EAAM,EACpCorB,SAAU,KACVR,QAAS,CACPS,MAAOT,EAAQE,QACf,WAEF,SAAC,KAAY,CAACv6B,UAAU,GAAE,UACxB,SAAC,KAAW,WACV,iBAAMA,UAAU,GAAE,SAAC,mBAGvB,SAAC,KAAU,UAEK,MAAbm6B,GACC,SAAC,MAAI,CACH,cAAY,UACZ5+B,GAAE,gCACFsP,OAAO,SAAQ,SAChB,cAIQ,OAATsvB,QAAS,IAATA,OAAS,EAATA,EAAW59B,KAAI,SAACmH,GAAC,OAQf,UAAC,MAAI,CACH7I,MAAO,CAAEuQ,OAAQ,WACjBxJ,QAAS,WACPyxB,EAAqBh2B,GACvB,EACAsE,MAAOtE,GAAK+8B,UACZ,cAAY,UAAS,UAEpB,KACD,eACEv/B,MAAO,CAAE+5B,eAAgB,YAAamG,aAAc,OAAQ,SAG3Dr3B,EAAE,IAFEA,EAAE,MAIJ,UASrB,CACA,OACE,4BACE,iBAAK1D,UAAU,YAAW,WACxB,gBAAKA,UAAU,WAAU,SACtBuE,EAAYhI,KAAI,SAACuB,GAAI,OACpB,0BACE,wBAAKA,EAAKwN,eAEN,OAGV,gBAAKtL,UAAU,WAAU,UACvB,wBAAI,kBAGN,gBAAKA,UAAU,mBAGjB,SAACoT,EAAA,EAAiB,CAChBxC,OAAQA,GACRyC,kBAtSkB,CAAC,WAAY,OAAQ,aAAc,iBAwSvD,SAAC2E,EAAA,EAA+B,CAC9B3a,KAAMA,GACNiQ,KAlUO,GAmUPiF,eAAgBA,GAChBhC,WAAY+oB,EACZ9oB,cAAe+oB,IAGhBn5B,GACC,SAAC,GAAc,CACbA,UAAWA,EACXC,aAAcA,EACdi5B,WAAYA,EACZC,cAAeA,EACfjsB,KA9UK,GA+ULvK,QAASA,GACT2zB,SAAUA,EACVC,WAAYA,EACZC,SAAUA,EACVjoB,UAAWA,IAGb,GAEDa,GACC,SAACmpB,GAAY,CACXnpB,YAAaA,EACbC,eAAgBA,EAChBspB,MAAOA,IAGT,KAIR,E,wEC5XA9I,EAAQ,OA2JR,OAzJA,SAAwBv1B,GAAQ,IAAD,EAE3B2C,EAaE3C,EAbF2C,KACAiQ,EAYE5S,EAZF4S,KACA/H,EAWE7K,EAXF6K,MACAgN,EAUE7X,EAVF6X,eACAhC,EASE7V,EATF6V,WACAC,EAQE9V,EARF8V,cACAwqB,EAOEtgC,EAPFsgC,eACAv6B,EAME/F,EANF+F,eACAw6B,EAKEvgC,EALFugC,eACAp6B,EAIEnG,EAJFmG,kBAEAmiB,GAEEtoB,EAHFwgC,YAGExgC,EAFFsoB,WAGF,GADItoB,EADF8F,aAE8BW,EAAAA,EAAAA,UAAS,KAAG,eAArCg6B,EAAQ,KAAEC,EAAW,KAC5B,GAAgCj6B,EAAAA,EAAAA,UAAS,IAAG,eAArCk6B,EAAQ,KAAEC,EAAW,KAC5B,GAA0Cn6B,EAAAA,EAAAA,UAAS,IAAG,eAAhCo6B,GAAF,KAAkB,OAEtC99B,EAAAA,EAAAA,YAAU,WACR,GAAIw9B,GAAkBA,EAAeptB,OAAS,EACxBotB,EAAe1+B,KAAI,SAACuB,GAAI,OAAKA,EAAK9B,EAAE,GAE5D,GAAG,CAACi/B,KAwBO/3B,EAAAA,EAAAA,QAAO,OAClBzF,EAAAA,EAAAA,YAAU,WACR29B,EAAYvoB,KAAKC,MAAMD,KAAKE,UAAU1V,IACxC,GAAG,CAACA,KAEJI,EAAAA,EAAAA,YAAU,WACR,GAAI09B,EAASttB,OAAS,EAAG,CACvB2C,EAAc2qB,EAAS,IACvBG,EAAYH,EAASK,OAAO,IAE5B,IAAIC,EAAM,GACNC,EAASP,EAAS,GAEtBn8B,OAAOwT,KAAKkpB,GAAQ78B,SAAQ,SAAC7D,GACtB,YAALA,GAAmBygC,EAAI18B,KAAK,CAAE4C,MAAO+5B,EAAO1gC,GAAIyrB,QAASzrB,GAC3D,IAEAugC,EAAiBE,EACnB,CACF,GAAG,CAACN,IAEJ,IAAMQ,EAAc,CAClBC,SAAU,CAAEr2B,MAAO,KAAM2d,UAAWC,EAAAA,GAAAA,WAGtC,GAAgChiB,EAAAA,EAAAA,UAAS,CACvC8hB,OAAQ0Y,EAAsB,WAC9B,eAFKE,EAAQ,KAAEC,EAAW,MAI5Br+B,EAAAA,EAAAA,YAAU,WACRq+B,EAAY,CACV7Y,OAAQ0Y,EAAsB,UAElC,GAAG,CAACprB,IACJ,OAAoDpP,EAAAA,EAAAA,UAAS,IAAG,eAAzD46B,EAAkB,KAAEC,EAAqB,KAE1CC,EAAwB,SAACv4B,GAC7B,IAAM6B,EAAQ7B,EAAEmH,OAAOtF,MACnB22B,GAAS,UAAQL,GACrBK,EAAkB,OAAE32B,MAAQA,EAC5Bu2B,EAAYI,GACZF,EAAsBz2B,EACxB,EAiBM42B,GAbF,gBAAKn8B,UAAU,yBAAwB,UACrC,kBAAMA,UAAU,iCAAgC,WAC9C,cAAGA,UAAU,kBACb,SAAC,IAAS,CACR+L,aAAcgwB,EACdxwB,SAAU0wB,EACVvwB,YAAY,wBAShB0wB,EAC8C,KAAb,OAAdnB,QAAc,IAAdA,OAAc,EAAdA,EAAgBptB,QACzC,OACE,gBAAK7N,UAAU,aAAY,SACxBhB,OAAOwT,KAAKjC,GAAY1C,OAAS,IAChC,UAAC,IAAS,CACRqS,kBAAkB,6FAClBC,0BAA0B,sCAC1BC,mBAAoB,CAAC,GAAI,GAAI,IAC7Bic,6BAA8B,CAAC,EAAG,GAAI,GAAI,IAC1CC,2BAA4B,CAC1BC,gBAAiB,oBACjBC,mBAAoB,UAEtBj3B,MAAO81B,EACPzb,WAAS,EACTH,eAAa,EACbnS,KAAMA,EACNmZ,QAAQ,KACRjD,QAASqY,EACTY,cAAc,WACdlW,UAAW0U,EACXtU,iBAAiB,SACjBxc,OAAQgyB,EACR3V,kBAAmB,SAAC9iB,GAAC,OA3GR,SAACA,GACpB,IAAMg5B,EAAeh5B,EAAE6B,MACnBm3B,EAAa7uB,OAAS,GACxBhN,EAAkB67B,GAEpB,IAAIr/B,EAAOqG,EAAE6B,MACTylB,EAAQ3tB,EAAKd,KAAI,SAACvB,GAAC,OAAKA,EAAEgB,EAAE,IAG1Bg/B,EADK,uBAATz1B,EACmBlI,EACA2tB,EAAM,IAG3B,IACI2R,EADI7gC,OAAOuB,EAAKd,KAAI,SAACqgC,GAAC,OAAKA,EAAE5gC,EAAE,KACzB0b,QAAQ,KAAM,KACxBsjB,EAAe2B,GACf97B,EAAkB6C,EAAE6B,OAEpB,IAAIs3B,EAAMn5B,EAAE6B,MAAMhJ,KAAI,SAACuF,GAAG,OAAKA,EAAI9F,EAAE,IACrCyE,EAAeo8B,EACjB,CAuFkCjyB,CAAalH,EAAE,EACzC1D,UAAU,sCAAuC,WAErB,KAAf,QAAZ,EAAAgjB,EAAU,UAAE,aAAZ,EAAcpU,YACb,SAAC,IAAM,CACL6tB,eAAmB,OAAJp/B,QAAI,IAAJA,OAAI,EAAJA,EAAMwQ,QAAS,EAAI,WAAa,GAC/ChT,MAAO,CACLiiC,aAAc,OAEhBzxB,SAAU+wB,IAIb7pB,MAKX,E,kICtJA,SAAS9X,GAAYC,GACnB,OACE,SAACC,GAAA,GAAO,gBAACC,SAAS,UAAUoF,UAAU,yBAA4BtF,GAAK,cACrE,iBAAMM,EAAE,sWAGd,CAEA,SAASC,GAAWP,GAClB,OACE,SAACC,GAAA,GAAO,gBAACC,SAAS,UAAUoF,UAAU,uBAA0BtF,GAAK,cACnE,iBAAMM,EAAE,wfAGd,CAEA,SAASE,GAAoBR,GAC3B,IAAMG,GAAQM,EAAAA,GAAAA,IAAU,CACtBC,KAAM,CACJC,QAAS,EACTC,UAAW,yBAEbC,GAAI,CACFF,QAASX,EAAMc,GAAK,EAAI,EACxBF,UAAU,eAAD,OAAiBZ,EAAMc,GAAK,EAAI,GAAE,cAI/C,OACE,SAAC,SAAY,CAACX,MAAOA,EAAM,UACzB,SAACY,GAAA,GAAQ,UAAKf,KAGpB,CAMA,IAAMgB,IAAiBC,EAAAA,GAAAA,KAAO,SAACjB,GAAW,IAAD,YACvC,OACE,0BACE,mBAACkB,GAAA,GAAQ,kBACHlB,GAAK,IACTmB,IAAKC,OAAY,OAALpB,QAAK,IAALA,GAAW,QAAN,EAALA,EAAOqB,YAAI,WAAN,EAAL,EAAaC,IACzBC,OAAQH,OAAY,OAALpB,QAAK,IAALA,GAAW,QAAN,EAALA,EAAOqB,YAAI,WAAN,EAAL,EAAaC,IAC5BE,OACE,SAAC6gC,GAAA,GAAO,CAACp7B,MAAY,OAALjH,QAAK,IAALA,GAAW,QAAN,EAALA,EAAOqB,YAAI,WAAN,EAAL,EAAaI,YAAY,UACvC,0BAAY,OAALzB,QAAK,IAALA,GAAW,QAAN,EAALA,EAAOqB,YAAI,WAAN,EAAL,EAAaI,gBAGxBjB,oBAAqBA,KAEpBkB,MAAMC,QAAa,OAAL3B,QAAK,IAALA,GAAW,QAAN,EAALA,EAAOqB,YAAI,WAAN,EAAL,EAAaO,SACnB,OAAL5B,QAAK,IAALA,GAAW,QAAN,EAALA,EAAOqB,YAAI,WAAN,EAAL,EAAaO,QAAQC,KAAI,SAACR,GAAI,OAAKS,GAAWT,EAAK,IACnD,KAIZ,GApBuBJ,EAoBpB,kBAAGc,EAAK,EAALA,MAAK,mCACFC,GAAAA,EAAAA,eAAkC,CACvC,WAAY,CACVrB,QAAS,OAEZ,sBACMqB,GAAAA,EAAAA,OAA0B,CAC/BC,WAAY,GACZC,YAAa,GACbC,WAAW,cAAD,QAAgBC,EAAAA,GAAAA,IAAML,EAAMM,QAAQC,KAAKC,QAAS,OAC7D,KAGGT,GAAa,SAACU,GAAK,OACvB,0BACE,SAACxB,GAAc,CAACK,KAAMmB,KADdpB,OAAY,OAALoB,QAAK,IAALA,OAAK,EAALA,EAAOlB,IAElB,EAEO,SAASghC,GAAkBtiC,GACxC,IACE0C,EAOE1C,EAPF0C,oBACAC,EAME3C,EANF2C,KACAkD,EAKE7F,EALF6F,eACA08B,EAIEviC,EAJFuiC,SACA3/B,EAGE5C,EAHF4C,UAEA4/B,GACExiC,EAFFwB,MAEExB,EADFwiC,gBAGFz/B,EAAAA,EAAAA,YAAU,WACRkF,YAAW,WACTgL,SACGC,uBAAuB,oBAAoB,GAC3ClP,SAAS,GAAGkgB,OACjB,GAAG,IACL,GAAG,IAkEH,IAAIlhB,EAxBJ,SAAwBC,EAAWC,GACjC,IAAMF,EAAoBC,EAAUE,QAClC,SAACC,GAAI,MAA0B,QAArBA,EAAK3B,WAAqB,IAmBtC,OAhBAuB,EAAkBK,MAAK,SAACC,EAAGC,GACzB,IAAMC,EAASN,EAAYO,QAAQH,EAAE7B,aAC/BiC,EAASR,EAAYO,QAAQF,EAAE9B,aACrC,OAAgB,IAAZ+B,IAA6B,IAAZE,EACZF,EAASE,GACK,IAAZF,GACD,GACa,IAAZE,EACF,EAEFJ,EAAE7B,YAAYkC,cAAcJ,EAAE9B,YACvC,IAEuBuB,EAAkBG,QAAO,SAACC,GAAI,OACnDA,EAAK3B,aAAemB,EAAaQ,EAAK3B,YAAc,UAAa,EAAE,IAE9DuB,CACT,CAEwBY,CAhEL,SAACC,EAAWC,GAC7BA,GAAO,QACLxC,GAAI,KACJyC,SAAU,YACVC,SAAU,WACPF,GAEL,IAAMG,EAAa,CAAC,EACdC,EAAO,GACPF,EAAWF,EAAQE,SAiBzB,OAhBAH,EAAUM,SAAQ,SAAC9C,GACjB,IAAME,EAASF,EAAKyC,EAAQxC,IACtB8C,EAAe/C,EAAKyC,EAAQC,UAClCE,EAAW1C,IAAO,0BACfyC,EAAW,IACT3C,GACA4C,EAAW1C,IAEhB0C,EAAWG,GAAgBH,EAAWG,KAAa,UAAOJ,EAAW,IACrEC,EAAWG,GAAcJ,GAAUK,KAAKJ,EAAW1C,GACrD,IACA+C,OAAOC,OAAON,GAAYE,SAAQ,SAACK,GACF,qBAApBA,EAAIV,EAAQxC,KACrB4C,EAAKG,KAAI,MAATH,GAAI,OAASM,EAAIR,IAErB,IACOE,CACT,CACkBO,CAAW9B,GAoCqB,CAChD,aACA,qCACA,UACA,aAGF,OACE,+BACE,SAACmC,GAAA,EAAQ,CACP,aAAW,cACXC,gBAAiB,CAACrC,GAClBsC,qBACE,iBAAKM,UAAU,gBAAe,WAC5B,SAACvF,GAAW,CAACuF,UAAU,oBACvB,SAAC,OAAc,CAACA,UAAU,6BAG9BL,mBACE,iBAAKK,UAAU,gBAAe,WAC5B,SAAC/E,GAAU,CAAC+E,UAAU,oBACtB,SAAC,OAAc,CAACA,UAAU,6BAG9BJ,gBAAgB,SAAC,OAAc,CAACI,UAAU,0BAC1CH,mBAAmB,SAAC,OAAc,CAACG,UAAU,0BAC7CA,UAAU,gBACVC,aA9De,SAACC,EAAOC,GAC3BI,EAAeJ,GACf+8B,GAAc,GACdD,EAAS,IACL/8B,EAAM2K,OAAOmd,UAAUjQ,OAAOolB,WAAW,SAC3CF,EAAS,IAETA,EAAS/8B,EAAM2K,OAAOmd,UAE1B,EAqDiC,SAE1BtqB,EAAkBnB,KAAI,SAACuB,GAAI,OAAKtB,GAAWsB,EAAK,OAIzD,CC44BA,OA7iCA,SAAmBpD,GAAQ,IAAD,MAClBuG,EAAUC,EAAAA,EAAAA,QAEhB,GAA4BC,EAAAA,EAAAA,UAAS,IAAG,eAAzBi8B,GAAF,KAAW,MACxB,GAAsBj8B,EAAAA,EAAAA,UAAS,IAAG,eAAtBk8B,GAAF,KAAQ,MAClB,GAA8Bl8B,EAAAA,EAAAA,WAAS,GAAM,eAAtCG,EAAO,KAAEoO,EAAU,KAC1B,GAAqCvO,EAAAA,EAAAA,WAAS,GAAM,eAA7Cm8B,EAAW,KAAEJ,EAAa,KACjC,GAAwC/7B,EAAAA,EAAAA,UAASwO,EAAAA,KAAkB,eAA5DC,EAAY,KAAEC,EAAe,KACpC,GAAwB1O,EAAAA,EAAAA,UAAS,IAAG,eAA7B9D,EAAI,KAAEqqB,EAAO,KACpB,GAAkCvmB,EAAAA,EAAAA,WAAS,GAAM,eAA1Cf,EAAS,KAAEC,EAAY,KAC9B,GAAoCc,EAAAA,EAAAA,UAAS,IAAG,eAAzCoP,EAAU,KAAEC,EAAa,KAChC,GAAsCrP,EAAAA,EAAAA,WAAS,GAAM,eAA9CsP,EAAW,KAAEC,GAAc,KAClC,IAAkDvP,EAAAA,EAAAA,WAAS,GAAM,iBAA1DwP,GAAiB,MAAE4sB,GAAoB,MAC9C,IAAsCp8B,EAAAA,EAAAA,WAAS,GAAM,iBAA9CqO,GAAW,MAAEC,GAAc,MAClC,IAAkCtO,EAAAA,EAAAA,WAAS,GAAM,iBAA1Cq8B,GAAS,MAAEC,GAAY,MAC9B,IAAsBt8B,EAAAA,EAAAA,UAAS,KAAI,iBAA5B0N,GAAG,MAAEC,GAAM,MAClB,IAAsC3N,EAAAA,EAAAA,UAAS,IAAG,iBAA3CmK,GAAW,MAAE3G,GAAc,MAClC,IAAoCxD,EAAAA,EAAAA,UAAS,IAAG,iBAAzCyW,GAAU,MAAEiG,GAAa,MAChC,IAAoC1c,EAAAA,EAAAA,UAAS,IAAG,iBAAzCu8B,GAAU,MAAEC,GAAa,MAChC,IAAkDx8B,EAAAA,EAAAA,WAAS,GAAM,iBAA1Dm0B,GAAiB,MAAE1vB,GAAoB,MAC9C,IAAoDzE,EAAAA,EAAAA,WAAS,GAAM,iBAA5Dy8B,GAAkB,MAAEC,GAAqB,MAChD,IAAoD18B,EAAAA,EAAAA,WAAS,GAAM,iBAA5D28B,GAAkB,MAAEC,GAAqB,MAChD,IAA0D58B,EAAAA,EAAAA,WAAS,GAAM,iBAAlE68B,GAAqB,MAAEC,GAAwB,MACtD,IAAsC98B,EAAAA,EAAAA,UAAS,IAAG,iBAA9B65B,IAAF,MAAgB,OAClC,IAA0C75B,EAAAA,EAAAA,UAAS,CAAC,CAAC,IAAG,iBAAjDb,GAAa,MAAE49B,GAAgB,MACtC,IAA4B/8B,EAAAA,EAAAA,UAAS,IAAG,iBAAzBg9B,IAAF,MAAW,OACxB,IAA8Ch9B,EAAAA,EAAAA,WAAS,GAAM,iBAAtDq2B,GAAe,MAAE4G,GAAkB,MAC1C,IAA4Cj9B,EAAAA,EAAAA,WAAS,GAAM,iBAApDk9B,GAAc,MAAE39B,GAAiB,MACxC,IAA0CS,EAAAA,EAAAA,WAAS,GAAM,iBAAlD4N,GAAa,MAAEC,GAAgB,MACtC,IAA4C7N,EAAAA,EAAAA,WAAS,GAAM,iBAApDm9B,GAAc,MAAE39B,GAAiB,MACxC,IAAoCQ,EAAAA,EAAAA,WAAS,GAAM,iBAA5Co9B,GAAU,MAAEC,GAAa,MAChC,IAAwCr9B,EAAAA,EAAAA,YAAU,iBAA7Bs9B,IAAF,MAAiB,OACpC,IAAgCt9B,EAAAA,EAAAA,UAAS,IAAG,iBAArCuS,GAAQ,MAAEgrB,GAAW,MAC5B,IAA0Bv9B,EAAAA,EAAAA,UAAS,IAAG,iBAAxB63B,IAAF,MAAU,OACtB,IAAsC73B,EAAAA,EAAAA,UAAS,IAAG,iBAA3CiB,GAAW,MAAE7B,GAAc,MAClC,IAA0BY,EAAAA,EAAAA,UAAS,IAAG,iBAA/BjF,GAAK,MAAE+gC,GAAQ,MACtB,IAAsC97B,EAAAA,EAAAA,UAAS,IAAG,iBAA3CX,GAAW,MAAEC,GAAc,MAClC,IAAyCU,EAAAA,EAAAA,UAAS,IAAG,iBAAhCw9B,IAAF,MAAkB,OACrC,IAA4Bx9B,EAAAA,EAAAA,WAAS,GAAM,iBAApCmO,GAAM,MAAEC,GAAS,MACxB,IAA0CpO,EAAAA,EAAAA,WAAS,GAAM,iBAAlD2J,GAAa,MAAEC,GAAgB,MACtC,IAA4B5J,EAAAA,EAAAA,UAAS,IAAG,iBAAjCy9B,GAAM,MAAEC,GAAS,MACxB,IAA4C19B,EAAAA,EAAAA,WAAS,GAAM,iBAApD85B,GAAc,MAAEp6B,GAAiB,MAElCqQ,IAAkBhO,EAAAA,EAAAA,QAAO,MAE/B,IAAsD/B,EAAAA,EAAAA,UAAS,GAAE,iBAA1D/D,GAAmB,MAAE0hC,GAAsB,MAE5Ch+B,GAAeC,aAAaC,QAAQ,SAClC1D,GAAyB5C,EAAzB4C,UAAW0lB,GAActoB,EAAdsoB,UAEnB,IAA4B7hB,EAAAA,EAAAA,UAAS,IAAG,iBAAjCyP,GAAM,MAAEC,GAAS,OAmBxBpT,EAAAA,EAAAA,YAAU,WAdRuE,IAAM,CACJC,OAAQ,MACRC,IAAKjB,EAAO,iDAA6CH,MACxDuB,MAAK,SAACE,GACIA,EAAKlF,KAEXwB,SAAQ,SAACf,GATA,aAURA,EAAKiT,cACPF,GAAU,CAAC/S,GAEf,GACF,GAKF,GAAG,IAEH,IAEMihC,GAAe7iC,GAEf8iC,GAAY,UADC,uBACe,aAAKD,IAEjCn+B,GAAa,WACjBoB,IAAAA,IAEIf,EAAO,2DAC+CmB,KAEvDC,MAAK,SAACgH,GAwBL,IAvBA,IAEM4I,EAFM5I,EAAIhM,KAEMd,KAAI,SAACuB,GACzB,MAA6B,KAAzBA,EAAKmhC,iBACA,kBAAKnhC,GAAI,IAAEmhC,gBAAiB,OAE9BnhC,CACT,IAgBSoQ,EAAI,EAAGA,EAAI+D,EAAQpE,OAAQK,IAClC+D,EAAQ/D,GAAc,UACO,MAA3B+D,EAAQ/D,GAAc,UAClB,GACA+D,EAAQ/D,GAAc,UAAE+L,MAAM,KAAK,GACzChI,EAAQ/D,GAAiB,aACO,MAA9B+D,EAAQ/D,GAAiB,aACrB,GACA/F,IAAAA,IACO8J,EAAQ/D,GAAiB,cAC7B7F,OAAO,0BAEhB4J,EAAQ/D,GAAiB,aACO,MAA9B+D,EAAQ/D,GAAiB,aACrB,GACA/F,IAAAA,IACO8J,EAAQ/D,GAAiB,cAC7B7F,OAAO,0BAChB4J,EAAQ/D,GAAiB,aACO,MAA9B+D,EAAQ/D,GAAiB,aACrB,GACA0iB,WAAW3e,EAAQ/D,GAAiB,cAAGgxB,QAAQ,GAEvD,IAAI7hC,EAAO,CAAC,gBAEZqT,GAAerT,GACfkgC,GAFiB,CAAC,KAGlB7V,EAzCmB,CACjB,CACE0S,UAAW,YACX+E,UAAW,YACXC,aAAc,UACdC,UAAW,YACX7jB,aAAc,aACd8jB,WAAY,aACZhkB,aAAc,aACd2jB,gBAAiB,aACjB/sB,OAAQ,WA+BOC,OAAOF,IAE1B,IAAIstB,EAAK,GACLC,EAAK,GACL,OAAJniC,QAAI,IAAJA,GAAAA,EAAMwB,SAAQ,SAAC6E,GACb,IAAI+7B,EAAQ,CACVvjC,MAAOwH,EAAE1H,IAEXujC,EAAGxgC,KAAK0gC,GACRrC,EAAUmC,EACZ,IAEI,OAAJliC,QAAI,IAAJA,GAAAA,EAAMwB,SAAQ,SAAC6E,GACb,IAAI+7B,EAAQ,CACVvjC,MAAOwH,EAAE8vB,cAEXgM,EAAGzgC,KAAK0gC,GACRpC,EAAOmC,EACT,IACAxG,GAAS/mB,EACX,GACJ,GAEAxU,EAAAA,EAAAA,YAAU,WACRmD,IACF,GAAG,CAACwB,GAAawV,KAEjB,IAAM8nB,GAAqB,WACzB,MAA0B,KAAtB9nB,GAAWG,SACbnS,IAAqB,GACrBjD,YAAW,WACTiD,IAAqB,EACvB,GAAG,MACI,EAGX,GA2EAnI,EAAAA,EAAAA,YAAU,WATRuE,IAAM,CACJC,OAAQ,MACRC,IAAKjB,EAAO,oDAAgD3D,MAC3D+E,MAAK,SAAUC,GAChB,IAAIC,EAAOD,EAASjF,KACpBsH,GAAepC,EACjB,IAKAo9B,KACAC,KACAC,IACF,GAAG,IAEH,IAAMC,GAAiB,WACrB9wB,IAAiB,GACjBhN,IAAM,CACJC,OAAQ,SACRC,IAAKjB,EAAO,iDAA6C4N,MACxDxM,MAAK,SAACgH,GACPzI,KACA6O,IAAe,GACf9M,YAAW,WACTqM,IAAiB,EACnB,GAAG,IACL,GACF,EAyBM4wB,GAA+B,WACnCrwB,IAAU,GACV2B,GAAgBzF,QAAU,IAAIsa,gBAE9B/jB,IAAM,CACJC,OAAQ,MACRC,IACEjB,EAAO,uEACyD3D,IAClE64B,OAAQjlB,GAAgBzF,QAAQ0qB,SAC/B9zB,MAAK,SAAUC,GAChB,IAAIC,EAAOD,EAASjF,KACpByhC,GAAuBv8B,EAAK,GAAGvG,IAC/BkiC,GAAiB37B,GACjBgN,IAAU,GACV5M,YAAW,WACT4M,IAAU,EACZ,GAAG,IACL,GACF,EAsCMowB,GAA4B,WAChC39B,IAAM,CACJC,OAAQ,MACRC,IACEjB,EAAO,2EAC6D3D,MAErE+E,MAAK,SAAUC,GACd,IAAIC,EAAOD,EAASjF,KACpBohC,GAAgBl8B,EAClB,IACCC,OAAM,SAAUC,GAAQ,GAC7B,EAkDMo9B,GAAuB,WAC3B79B,IAAM,CACJC,OAAQ,MACRC,IACEjB,EAAO,sEACwD3D,MAChE+E,MAAK,SAAUC,GAChB,IAAIC,EAAOD,EAASjF,KACpBwhC,GAAUt8B,EACZ,GACF,EAEA,IAAwCpB,EAAAA,EAAAA,UAAS,IAAG,iBAA7C4+B,GAAY,MAAEC,GAAe,MACpC,IAAgC7+B,EAAAA,EAAAA,UAAS,IAAG,iBAA3B6B,IAAF,MAAa,QAkB5BvF,EAAAA,EAAAA,YAAU,WAGV,GAAG,KAEHA,EAAAA,EAAAA,YAAU,WACR2/B,EAAU//B,EAAKrB,IACfqhC,EAAOhgC,EAAKm2B,cACZkL,GAAYrhC,EAAK+8B,UACnB,GAAG,CAAC/8B,KAEJI,EAAAA,EAAAA,YAAU,WAAO,GAAG,CAAC+C,KAErB,IAAM6R,GAAe,SAAChV,GAAU,IAAD,EAC7B+/B,EAAU//B,EAAKrB,IACfqhC,EAAOhgC,EAAKm2B,cACZkL,GAAYrhC,EAAK+8B,WAEa,QAAvB,EAAGzpB,GAAkB,UAAE,OAApB,EAAsBsJ,MAAM,KACtC,OACE,+BACE,SAAC,MAAI,CACH,cAAY,UACZtY,MAAOtE,EAAK+hC,aACZvkC,MAAO,CACLqrB,MAAO,QACP7b,MAAO,UACP41B,mBAAoB,aAEtBr+B,QAAS,WACP67B,IAAa,EACf,EAAE,SAEDpgC,EAAKoT,EAAY,OAI1B,EAEMyvB,GAAW,SAAC7iC,GAChB,OACE,+BACE,gBAAKsN,MAAM,SAAS,cAAY,UAAUhJ,MAAOtE,EAAKgiC,UAAU,SAC3C,QAAlBhiC,EAAKgiC,WACJ,SAAC,OAAgB,CAAC99B,KAAM,QAAS1G,MAAO,CAAEwP,MAAO,aAC7B,SAAlBhN,EAAKgiC,WACP,SAAC,MAAkB,CAAC99B,KAAM,QAAS1G,MAAO,CAAEwP,MAAO,aAC/B,SAAlBhN,EAAKgiC,WACP,SAAC,OAAiB,CAAC99B,KAAM,QAAS1G,MAAO,CAAEwP,MAAO,aAC9B,SAAlBhN,EAAKgiC,WACP,SAAC,OAAwB,CACvB99B,KAAM,QACN1G,MAAO,CAAEwP,MAAO,aAEE,QAAlBhN,EAAKgiC,WACP,SAAC,OAAU,CAAC99B,KAAM,QAAS1G,MAAO,CAAEwP,MAAO,aACvB,QAAlBhN,EAAKgiC,WACP,SAAC,OAAgB,CAAC99B,KAAM,QAAS1G,MAAO,CAAEwP,MAAO,aAC7B,QAAlBhN,EAAKgiC,WACP,SAAC,OAAU,CAAC99B,KAAM,QAAS1G,MAAO,CAAEwP,MAAO,aACvB,SAAlBhN,EAAKgiC,WAEa,QAAlBhiC,EAAKgiC,WAEa,QAAlBhiC,EAAKgiC,WAEa,QAAlBhiC,EAAKgiC,WAEa,MAAlBhiC,EAAKgiC,WAPP,SAAC,MAAa,CAAC99B,KAAM,QAAS1G,MAAO,CAAEwP,MAAO,aAS1B,QAAlBhN,EAAKgiC,WACP,SAAC,MAAkB,CAAC99B,KAAM,QAAS1G,MAAO,CAAEwP,MAAO,aAC/B,OAAlBhN,EAAKgiC,WAEa,QAAlBhiC,EAAKgiC,WAEa,SAAlBhiC,EAAKgiC,WAHP,SAAC,OAAU,CAAC99B,KAAM,QAAS1G,MAAO,CAAEwP,MAAO,aAM3C,MAKV,EAEM6H,GAAS,SAAC7U,GACd,OACE,iBAAKsN,MAAM,UAAU,cAAY,UAAUhJ,MAAM,oBAAmB,WAClE,SAACw+B,GAAA,EAA6B,CAC5BngC,UAAU,UACVnF,MAAO,CAAEuQ,OAAQ,UAAWf,MAAO,WACnCzI,QAAS,kBA1PY,SAAC5F,EAAIw3B,GAChC,IAAMM,EAAOnmB,SAASoa,cAAc,KACpC+L,EAAKC,KACH9yB,EAAO,qDACuCjF,EAAE,wBAAgBw3B,GAClEM,EAAKlV,OACP,CAqPUyU,CAAqBh2B,EAAKrB,GAAIqB,EAAKm2B,aAAcn2B,EAAK+8B,UAAU,KAGzC,IAA1BpX,GAAU,GAAGpU,UACZ,SAAC,MAAY,CACX,cAAY,UACZjN,MAAM,SACNJ,KAAM,QACN1G,MAAO,CAAEuQ,OAAQ,UAAWf,MAAO,UACnCzI,QAAS,WACP6N,IAAe,GACfX,GAAOzR,EAAKrB,GACd,IAEA,OAGV,EAEMokC,GAAQ,SAAC/iC,GACb,OACE,gBAAK2C,UAAU,WAAW,cAAY,UAAU2B,MAAOtE,EAAK+8B,UAAU,SACnE/8B,EAAK+8B,WAGZ,EACMiG,GAAQ,SAAChjC,GACb,OACE,gBACE2C,UAAU,WACV,cAAY,UACZ2B,MAAOtE,EAAK8hC,UACZtkC,MAAO,CAAE46B,UAAW,UAAW,SAE9Bp4B,EAAK8hC,WAGZ,EACMmB,GAAa,SAACjjC,GAClB,OACE,gBAAK2C,UAAU,WAAW,cAAY,UAAU2B,MAAOtE,EAAKiiC,WAAW,SACpEjiC,EAAKiiC,YAGZ,EACMiB,GAAa,SAACljC,GAClB,OACE,gBAAK2C,UAAU,WAAW,cAAY,UAAU2B,MAAOtE,EAAKme,aAAa,SACtEne,EAAKme,cAGZ,EACMglB,GAAa,SAACnjC,GAClB,OACE,gBAAK2C,UAAU,WAAW,cAAY,UAAU2B,MAAOtE,EAAKie,aAAa,SACtEje,EAAKie,cAGZ,EACMmlB,GAAa,SAACpjC,GAClB,OACE,gBACE2C,UAAU,WACV,cAAY,UACZ2B,MAAOtE,EAAK4hC,gBAAgB,SAE3B5hC,EAAK4hC,iBAGZ,EAEM1sB,GAAwC,QAA1B,EAAGvT,OAAOwT,KAAKjC,UAAW,aAAvB,EAAyBhU,KAAI,SAACkW,EAAKvE,GACxD,OACE,SAAC,MAAM,CACLwE,UAAQ,EAERC,KACS,aAAPF,EACI2tB,GACO,aAAP3tB,EACAytB,GACO,gBAAPztB,EACAJ,GACQ,UAAPI,GAAmBP,IACZ,aAAPO,GAAsB4tB,IACf,cAAP5tB,GAAuB6tB,IAChB,gBAAP7tB,GAAyB8tB,IAClB,gBAAP9tB,GAAyB+tB,IAClB,mBAAP/tB,GAA4BguB,GAEnC7tB,MAAOH,EACPtI,OAAQoG,EAAWkC,IAhBdA,EAmBX,IAMA,SAASiuB,GAAoBhmC,GAC3B,IAAQ8U,EAAgC9U,EAAhC8U,YAAaC,EAAmB/U,EAAnB+U,eAErB,OACE,0BACE,UAAC,KAAM,CACLnO,QAASkO,EACT/N,SAAS,SACTF,KAAK,KACLvB,UAAU,YACVwB,QAAS,kBAAMiO,GAAe,EAAM,EAAC,WAErC,SAAC,KAAY,CAACzP,UAAU,GAAE,UACxB,SAAC,KAAW,WACV,iBAAMA,UAAU,GAAE,SAAC,gBAGvB,UAAC,KAAU,YACT,wBAAI,6DACJ,iBAAKA,UAAU,4BAA2B,WACxC,oBACEA,UAAU,kBACV4B,QAAS,WACPk+B,IACF,EAAE,UACH,KACI,QAEL,oBACE9/B,UAAU,oBACV4B,QAAS,WACP6N,GAAe,EACjB,EAAE,UACH,SACQ,iBAOrB,CAEA,SAASkxB,GAAajmC,GACpB,IAAQ8iC,EAA4B9iC,EAA5B8iC,UAAWC,EAAiB/iC,EAAjB+iC,aAEnB,OACE,0BACE,UAAC,KAAM,CACLn8B,QAASk8B,EACTj8B,KAAK,KACLE,SAAS,SACTzB,UAAU,YACVwB,QAAS,kBAAMi8B,GAAa,EAAM,EAAC,WAEnC,SAAC,KAAY,CAACz9B,UAAU,GAAE,UACxB,SAAC,KAAW,WACV,iBAAMA,UAAU,GAAE,SAAC,yBAGvB,SAAC,KAAU,WACT,gBAAKA,UAAU,aAAY,UACzB,kBAAOA,UAAU,qCAAqCovB,KAAK,OAAM,UAC/D,8BACE,2BACE,wBAAI,oBACJ,wBAAI,mBAEN,yBACE,eAAIkF,QAAQ,IAAG,UACb,4BAAQ,uCAU5B,CACA,OArFA72B,EAAAA,EAAAA,YAAU,WACRJ,EAAK,IAAMmT,EAAcqC,KAAKC,MAAMD,KAAKE,UAAU1V,EAAK,KAC1D,GAAG,CAACA,KAoFF,2BACGiS,IAAS,SAACiE,EAAA,EAAM,CAACC,YArZF,WAClBtC,GAAgBzF,SAAWyF,GAAgBzF,QAAQgI,QACnDlE,IAAU,EACZ,IAkZqD,GAChD+lB,IACC,iBAAKt1B,UAAU,kBAAiB,WAC9B,SAAC,MAAa,IAAG,0CAInB,GAED89B,IACC,iBAAK99B,UAAU,kBAAiB,WAC9B,SAAC,MAAa,IAAG,0BAInB,GAEDw3B,IACC,iBAAKx3B,UAAU,oBAAmB,WAChC,SAAC,MAAO,IAAG,gBACK0T,GAAS,4BAG3B,GAEDsqB,IACC,iBAAKh+B,UAAU,kBAAiB,WAC9B,SAAC,MAAa,IAAG,6BAInB,GAED+O,IACC,iBAAK/O,UAAU,oBAAmB,WAChC,SAAC,MAAO,IAAG,wCAIb,IAEF,gBAAKA,UAAU,YAAW,UACxB,iBAAKA,UAAU,YAAW,WACxB,gBAAKA,UAAU,WAAU,UACvB,0BAAKsL,GAAY,UAEnB,gBAAKtL,UAAU,WAAU,UACvB,wBAAI,iBAEN,gBAAKA,UAAU,qBAGnB,SAACoT,EAAA,EAAiB,CAChBxC,OAAQA,GACRyC,kBAhtBkB,CAAC,WAAY,OAAQ,UAAW,gBAmtBpD,iBAAKrT,UAAU,MAAK,WAClB,iBAAKA,UAAU,uBAAsB,WACnC,gBAAKA,UAAU,YAAW,UACxB,wBAAI,uBAEL49B,IACC,iBAAK59B,UAAU,kBAAiB,WAC9B,SAAC,MAAa,IAAG,gDAInB,GAEDq+B,IACC,iBAAKr+B,UAAU,oBAAmB,WAChC,SAAC,MAAO,IAAG,kCAIb,GAEDs+B,IACC,iBAAKt+B,UAAU,oBAAmB,WAChC,SAAC,MAAO,IAAG,iCAIb,GAEDu+B,IACC,iBAAKv+B,UAAU,oBAAmB,WAChC,SAAC,MAAO,IAAG,cACG,KAAO09B,GAAW,2BAGlC,GAED5yB,IACC,iBAAK9K,UAAU,kBAAiB,UAC7B,KACD,SAAC,MAAa,IAAG,6CAGnB,IAE0B,KAAf,QAAZ,EAAAgjB,GAAU,UAAE,aAAZ,EAAcpU,WACb,iBAAK5O,UAAU,+BAA8B,WAC3C,kBACE0B,KAAK,OACL1F,GAAG,WACH0P,YAAa,GAAKszB,GAClBh/B,UAAU,SACVuF,MAAOm4B,GACPnyB,SAAU,SAAC7H,GAAC,OAAKi6B,GAAcj6B,EAAEmH,OAAOtF,MAAM,KAEhD,oBACE7D,KAAK,SACLC,MAAM,gBACN3B,UAAU,kBACV4B,QAAS,YAjjBI,WACzB,GAA0B,KAAtB87B,GAAW3lB,OACb8lB,IAAsB,GACtBW,IAAc,GACd77B,YAAW,WACTk7B,IAAsB,EACxB,GAAG,IAGP,CAyiBgB+C,GACAjD,GAAc,IAzdN,WACtB,GAA0B,IAAtBD,GAAW7vB,OAYf,GARI6vB,GAAW7vB,OAAS,IACtBgwB,IAAsB,GACtBW,IAAc,IAGOI,GAAO/gC,QAAO,SAAC7C,GAAC,OAAW,OAANA,CAAU,IACrB0S,MAAK,SAAC1S,GAAC,OAAKA,EAAEmB,aAAeuhC,EAAU,IAEzD,CAEb,IADA,IAAIlyB,EAAMmC,SAASC,uBAAuB,UACjCE,EAAQ,EAAGA,EAAQtC,EAAIqC,OAAQC,IACtCtC,EAAIsC,GAAOC,UAAUC,IAAI,eAE3BjD,IAAiB,GACjByzB,IAAc,GACd77B,YAAW,WACToI,IAAiB,EACnB,GAAG,IACL,KAAO,CAEL,IADA,IAAIS,EAAMmC,SAASC,uBAAuB,UACjCE,EAAQ,EAAGA,EAAQtC,EAAIqC,OAAQC,IACtCtC,EAAIsC,GAAOC,UAAUI,OAAO,eAE9BpD,IAAiB,GACjB/I,IAAM,CACJC,OAAQ,OACRC,IACEjB,EAAO,6DAC+CmB,GAAW,yBAAiBtB,GAAY,uBAAe48B,MAE9Gr7B,MAAK,SAAUC,GACd,IAAIC,EAAOD,EAASjF,KACpBshC,GAAiBp8B,GACjBq9B,KACApB,IAAc,GACd77B,YAAW,WACT67B,IAAc,EAChB,GAAG,IACL,IACCh8B,OAAM,SAAUC,GAAQ,GAC7B,CACF,CA4agBo+B,EACF,EAAE,WAEF,SAAC,OAAY,IAAG,YAIlB,MAGF,SAAC,GAAiB,CAChBzjC,oBAAqBtB,OAAOsB,IAC5BC,KAAMiD,GACNC,eAAgBA,GAChB08B,SAAUA,GACV3/B,UAAWA,GACX4/B,cAAeA,QAIrB,iBAAKl9B,UAAU,sBAAqB,WAClC,iBAAKA,UAAU,iBAAgB,WAC7B,wBAAI,oBAEJ,gBACE4B,QAAS,WACP8N,GAAYpO,GAERuO,EADJvO,EACoBqO,EAAAA,IACAyC,EAAAA,IACtB,EAAE,UAEF,0BAAOxC,UAGX,UAAC,KAAS,CAACtO,SAAUA,EAAQ,WAC3B,gBAAKtB,UAAU,iBAAgB,UAC7B,iBACEA,UAAU,oBACVnF,MAAO,CACL46B,UAAW,SACXprB,MAAO,UACPzP,SAAU,QACV,WAEF,uBAAG,WAAU,kEAKjB,iBAAKoF,UAAU,0BAAyB,WACtC,kBAAOiN,QAAQ,WAAU,SAAC,oBAC1B,kBACEvL,KAAK,OACL6D,MAAOqS,GACPrM,SA/mBY,SAACrL,GACzB2d,GAAc3d,EAAM2K,OAAOtF,MAC7B,EA8mBcvJ,GAAG,WACH0P,YAAa,GACb1L,UAAU,eAEZ,oBACE0B,KAAK,SACL1B,UAAU,kBACV4B,QAAS,WAptBhB89B,OAGLA,MAAwBhwB,GAAYpO,GAEpCU,IAAAA,IAEIf,EAAO,0DAC8C3D,GAAS,sBAAcsa,KAE7EvV,MAAK,SAACgH,GAsBL,IArBA,IACM4I,EADM5I,EAAIhM,KACMd,KAAI,SAACuB,GACzB,MAA6B,KAAzBA,EAAKmhC,iBACA,kBAAKnhC,GAAI,IAAEmhC,gBAAiB,OAE9BnhC,CACT,IAeSoQ,EAAI,EAAGA,EAAI+D,EAAQpE,OAAQK,IAClC+D,EAAQ/D,GAAc,UACO,MAA3B+D,EAAQ/D,GAAc,UAClB,GACA+D,EAAQ/D,GAAc,UAAE+L,MAAM,KAAK,GACzChI,EAAQ/D,GAAiB,aACO,MAA9B+D,EAAQ/D,GAAiB,aACrB,GACA/F,IAAAA,IACO8J,EAAQ/D,GAAiB,cAC7B7F,OAAO,0BAChB4J,EAAQ/D,GAAiB,aACO,MAA9B+D,EAAQ/D,GAAiB,aACrB,GACA/F,IAAAA,IACO8J,EAAQ/D,GAAiB,cAC7B7F,OAAO,0BAChB4J,EAAQ/D,GAAiB,aACO,MAA9B+D,EAAQ/D,GAAiB,aACrB,GACA0iB,WAAW3e,EAAQ/D,GAAiB,cAAGgxB,QAAQ,GAIvDxuB,GAFW,CAAC,iBAGZ6sB,GAFiB,CAAC,KAGlB7V,EAxCmB,CACjB,CACE0S,UAAW,YACX+E,UAAW,YACXC,aAAc,UACdC,UAAW,YACX7jB,aAAc,aACd8jB,WAAY,aACZhkB,aAAc,aACd2jB,gBAAiB,aACjB/sB,OAAQ,WA8BOC,OAAOF,GAC5B,IA2pBU,EAAE,WAEF,SAAC,MAAQ,IAAG,oBAKlB,eAAIjS,UAAU,OAAM,SAAC,yBAErB,SAAC,GAAc,CACb3C,KAAMA,EACNiQ,KAv0BC,GAw0BDmD,YAAaA,EACbE,kBAAmBA,GACnB4B,eAAgBA,GAChBhC,WAAYA,EACZC,cAAeA,EACfwqB,eAAgBA,GAChBx6B,YAAaA,GACbC,eAAgBA,GAChBw6B,eAAgBA,GAChBp6B,kBAAmBA,GACnBmiB,UAAWA,MAEb,iBAAKhjB,UAAU,+CAA8C,WAC/B,KAAf,QAAZ,EAAAgjB,GAAU,UAAE,aAAZ,EAAcpU,WACb,oBACE5O,UAAU,kBACV0B,KAAK,MACLE,QAAS,kBAAMs7B,GAAc,EAAK,EAClC7xB,SAAUiyB,EAAY,WAEtB,SAAC,MAAM,IAAG,UAEV,MAEJ,oBACEt9B,UAAU,kBACV0B,KAAK,kBACLE,QAAS,WACoB,IAAvBpB,GAAYqN,QACdowB,IAAyB,GACzBt7B,YAAW,WACTs7B,IAAyB,EAC3B,GAAG,OAEH59B,GAAa,GACbsC,YAAW,WACTs7B,IAAyB,EAC3B,GAAG,KAEP,EAAE,WAEF,SAAC,MAAM,IAAG,yBAIb79B,GACC,SAAC0gC,GAAA,EAAc,CACb1gC,UAAWA,EACXC,aAAcA,EACd/C,UAAWA,GACXgD,cAAeA,GACf8B,YAAaA,GACb5B,YAAaA,GACbC,eAAgBA,GAChBF,eAAgBA,GAChBG,kBAAmBA,GACnBC,kBAAmBA,GACnBC,WAAYA,GACZC,kBAAmBA,KAGrB,GAGD2O,IACC,SAACkxB,GAAmB,CAClBlxB,YAAaA,GACbC,eAAgBA,KAGlB,GAGD+tB,IACC,SAACmD,GAAY,CAACnD,UAAWA,GAAWC,aAAcA,KAElD,GAGDH,IACC,0BACE,4BACE,gBAAKt9B,UAAU,iBAAgB,UAC7B,iBACEA,UAAU,oBACVnF,MAAO,CACL46B,UAAW,SACXprB,MAAO,UACPzP,SAAU,QACV,WAEF,uBAAG,WAAU,yCAGjB,gBAAKoF,UAAU,aAAY,UACzB,kBACEA,UAAU,qCACVovB,KAAK,OAAM,UAEX,8BACE,yBACE,eAAIv0B,MAAO,CAAEwP,MAAO,WAAY,SAAC,uBAEnC,yBACE,2BACE,kBACE3I,KAAK,OACL8B,KAAK,OACLxH,GAAG,OACHuP,SArlBE,SAAC7H,GAAO,IAAD,EACjCs8B,GAAgBt8B,EAAEmH,OAAOiL,MAAM,IAC/B4oB,GAA6B,QAAlB,EAACh7B,EAAEmH,OAAOiL,MAAM,UAAE,aAAjB,EAAmBtS,MAC/BR,IAAY,SAACa,GAAI,+BACZA,GAAI,cACNH,EAAEmH,OAAO7O,GAAsB,QAApB,EAAG0H,EAAEmH,OAAOiL,MAAM,UAAE,aAAjB,EAAmBtS,MAAI,GAE1C,EA+kB0BqS,OAAO,iDAET,kBAAO7V,UAAU,0BAAyB,UACxC,eAAGA,UAAU,aAAY,UAAC,4DAEa,0BAWxDs9B,IACC,iBAAKt9B,UAAU,sEAAqE,WAClF,oBACEA,UAAU,kBACV0B,KAAK,SACLE,QAAS,YAxtBJ,WACjB,GAA2B,GAAvBm+B,GAAalyB,OACfkwB,IAAsB,GACtBb,GAAc,GACdv6B,YAAW,WACTo7B,IAAsB,EACxB,GAAG,KACHK,IAAmB,OACd,CACL,IAAM13B,EAAW,IAAIq6B,SACrBr6B,EAASs6B,OAAO,OAAQjB,IACxB/9B,IAAM,CACJC,OAAQ,OACRC,IACEjB,EAAO,8DACgDmB,GAAW,yBAAiBtB,GAAY,6BACjGzD,KAAMqJ,EACNkvB,QAAS,CAAE,eAAgB,yBAC1BvzB,MAAK,SAAUC,GAChB,IAAIC,EAAOD,EAASjF,KACpB8gC,GAAU57B,GACV3B,KACAw9B,IAAmB,GACnBlB,GAAc,GACda,IAAsB,GACtBp7B,YAAW,WACTy7B,IAAmB,EACrB,GAAG,IACL,GACF,CACF,CA4rBgB6C,EACF,EAAE,WAEF,SAAC,MAAM,IAAG,YAEZ,oBACEjhC,UAAU,oBACV0B,KAAK,SACLE,QAAS,WACPs7B,GAAeI,GA7mBV,SAAC55B,GAEpB,IADA,IAAI8H,EAAMmC,SAASC,uBAAuB,UACjCE,EAAQ,EAAGA,EAAQtC,EAAIqC,OAAQC,IACtCtC,EAAIsC,GAAOvI,MAAQ,EAEvB,CAymBgB27B,EACF,EAAE,WAEF,SAAC,MAAO,IAAG,wBAQ3B,E,oCCjaA,OArqBA,SAA2BxmC,GACzB,OAAwByG,EAAAA,EAAAA,UAAS,IAAG,eAA7B9D,EAAI,KAAEqqB,EAAO,KACpB,GAAwCvmB,EAAAA,EAAAA,UAAS,MAAK,eAA/CggC,EAAY,KAAEC,EAAe,KACpC,GAAsCjgC,EAAAA,EAAAA,UAAS,IAAG,eAA9BmP,GAAF,KAAgB,MAClC,GAA0BnP,EAAAA,EAAAA,WAAS,GAAM,eAAlCkgC,EAAK,KAAEC,EAAQ,KACtB,GAAkCngC,EAAAA,EAAAA,UAAS,CAAC,GAAE,eAAvCogC,EAAS,KAAEC,EAAY,KAC9B,GAA4CrgC,EAAAA,EAAAA,UAAS,IAAG,eAAjDsgC,EAAc,KAAEC,EAAiB,KACxC,GAAsCvgC,EAAAA,EAAAA,WAAS,GAAM,eAA9CwgC,EAAW,KAAEC,EAAc,KAClC,GAA4BzgC,EAAAA,EAAAA,WAAS,GAAM,eAApCmO,EAAM,KAAEC,EAAS,KACxB,GAAkCpO,EAAAA,EAAAA,WAAS,GAAM,eAA/B0gC,GAAF,KAAc,MAExB5gC,EAAUC,EAAAA,EAAAA,QACV5D,EAAY5C,EAAM4C,UAElBwD,GADcpG,EAAM8Y,YACLzS,aAAaC,QAAQ,UAC1C,EAAgC8gC,EAAAA,SAAe,MAAK,eAA7CC,EAAQ,KAAEC,EAAW,KAC5B,GAA0B7gC,EAAAA,EAAAA,WAAS,GAAM,gBAAlC8gC,GAAK,MAAEC,GAAQ,MAChBC,GAAc,WAClBH,GAAY,EACd,GAsCAvkC,EAAAA,EAAAA,YAAU,WAnCRuE,IAAM,CACJC,OAAQ,MACRC,IAAKjB,EAAO,mDAA+CH,KAE1DuB,MAAK,SAAUC,GACd,IAAI+G,EAAM/G,EAASjF,KACnB2E,IAAAA,IAEIf,EAAO,iEACqDoI,EAAG,sBAAc/L,IAE9E+E,MAAK,SAACgH,GACLqe,EAAQre,EAAIhM,MACZkS,GAAU,GACV2yB,IAAS,EACX,IACC1/B,OAAM,SAACkB,GAAC,OAAKP,QAAQC,IAAIM,EAAE,GAChC,IACClB,OAAM,SAACkB,GAAC,OAAKP,QAAQC,IAAIM,EAAE,GAmBhC,GAAG,IAEH,IAAM0+B,GAAmB,SAACnQ,GACxB,IAAIoQ,EAASvmC,OAAOm2B,GAEpB,GAAIoQ,EAAOj0B,SAAS,KAAM,CACxB,IAAIk0B,EAAQD,EAAOpoB,MAAM,KAGzB,OAFkBqoB,EAAM,GAAG5qB,QAAQ,0BAA2B,OAEzC,IADH4qB,EAAM,GAAGC,OAAO,EAAG,IAEvC,CACE,OAAOF,EAAO3qB,QAAQ,0BAA2B,OAAS,KAE9D,EAEM8qB,GAAe,SAAC/jB,GACpB,IAAIqJ,EAAYna,SAASoa,cAAc,OAEvC,OADAD,EAAUE,UAAYvJ,EAAQgkB,mBACvB3a,EAAUE,SACnB,GAEAvqB,EAAAA,EAAAA,YAAU,WApCRuE,IAAM,CACJC,OAAQ,MACRC,IACEjB,EAAO,4DAC8C3D,KAEtD+E,MAAK,SAAUC,GACd,IAAIC,EAAOD,EAASjF,KACpBiT,EAAe/N,EACjB,IACCC,OAAM,SAACkB,GAAC,OAAKP,QAAQC,IAAIM,EAAE,GA4BhC,GAAG,IAEH,IAAMg/B,GAAe,SAACjkB,GACpB,OAAIA,EAAQrQ,SAAS,cAEjB,2BACE,SAAC,OAAgB,CAACvT,MAAO,CAAEwP,MAAO,YAItCoU,EAAQrQ,SAAS,gBACjBqQ,EAAQrQ,SAAS,YACjBqQ,EAAQrQ,SAAS,gBACjBqQ,EAAQrQ,SAAS,gBAGf,2BACE,SAAC,OAAgB,CAACvT,MAAO,CAAEwP,MAAO,eAG7BoU,EAAQrQ,SAAS,gBAExB,2BACE,SAAC,OAAgB,CAACvT,MAAO,CAAEwP,MAAO,eAG7BoU,EAAQrQ,SAAS,YAExB,2BACE,SAAC,OAAgB,CAACvT,MAAO,CAAEwP,MAAO,eAG7BoU,EAAQrQ,SAAS,SAExB,2BACE,SAAC,OAAgB,CAACvT,MAAO,CAAEwP,MAAO,eAG7BoU,EAAQrQ,SAAS,oBAExB,2BACE,SAAC,OAAgB,CAACvT,MAAO,CAAEwP,MAAO,eAItCoU,EAAQrQ,SAAS,gBACjBqQ,EAAQrQ,SAAS,gBACjBqQ,EAAQrQ,SAAS,gBAGf,2BACE,SAAC,OAAgB,CAACvT,MAAO,CAAEwP,MAAO,gBAI/B,mBAEX,EACA,IAAsClJ,EAAAA,EAAAA,UAAS,IAAG,iBAA3CwhC,GAAW,MAAEC,GAAc,MAC5BC,GAAgB,SAACpkB,GACrB,OACE,+BACE,iBACEqkB,YAAa,SAACp/B,GACZs+B,EAAa,OAADt+B,QAAC,IAADA,OAAC,EAADA,EAAGq/B,eACfH,GACEnkB,EAAQukB,aAAa/oB,MAAM,KAAKgpB,KAAK,QAAQnkB,MAAM,GAAI,GAE3D,EACAokB,aAAcf,GACdniC,UAAU,WAAU,UAEnB0iC,GAAajkB,EAAQ0kB,UAAU,IAAE1kB,EAAQ0kB,aAIlD,EAEMC,GAAc,SAAC3kB,GACnB,OACE,cACEze,UAAU,UACV4B,QAAS,WACPggC,GAAe,GACfyB,GAAe5kB,EAAQ6kB,YACvBhC,GAAS,GACTE,EAAa/iB,EACf,EAAE,SACH,QAIL,EAEM4kB,GAAiB,SAACE,GACtBvhC,IAAAA,IAEIf,EAAO,8DACkDsiC,IAE1DlhC,MAAK,SAACgH,GACLq4B,EAAkBr4B,EAAIhM,MACtBukC,GAAe,EACjB,IACCp/B,OAAM,SAACC,GAAK,OAAKU,QAAQC,IAAIX,EAAM,GACxC,EAEA,SAAS+gC,GAAa9oC,GACpB,IAAQ2mC,EAAqC3mC,EAArC2mC,MAAOC,EAA8B5mC,EAA9B4mC,SAAUjkC,EAAoB3C,EAApB2C,KAAMomC,EAAc/oC,EAAd+oC,UAEzBC,EAAY,2CAAG,WAAOC,EAAanQ,EAAc4G,GAAS,8EACxDtG,EAAOnmB,SAASoa,cAAc,MAC/BgM,KACH9yB,EAAO,qDACuC0iC,EAAW,wBAAgBnQ,GAC3EM,EAAKlV,QAAQ,2CACd,gBANiB,0CAQlB,OACE,2BACG+iB,GACC,SAACpuB,EAAA,EAAM,CACLC,YAAa,WAEXouB,GAAe,EACjB,IAGF,IAEF,UAAC,KAAM,CACLtgC,QAAS+/B,EACT5/B,SAAS,SACTF,KAAK,KACLC,QAAS,kBAAM8/B,GAAUD,EAAM,EAAC,WAEhC,SAAC,KAAY,CAACxmC,MAAO,CAAEuQ,OAAQ,cAAe,UAC5C,SAAC,KAAW,WACV,iBAAMpL,UAAU,OAAM,SAAC,yBAG3B,UAAC,KAAU,YACT,gBAAKA,UAAU,YAAW,UACxB,gBAAKA,UAAU,qBAAoB,UACjC,iBAAKA,UAAU,aAAY,WACzB,iBAAKA,UAAU,YAAW,WACxB,gBAAKA,UAAU,QAAO,UACpB,4BAAQ,eAEV,gBAAKA,UAAU,QAAO,SAAC,OACvB,gBAAKA,UAAU,QAAO,SAAEyjC,EAAU,GAAGn4B,kBAEvC,iBAAKtL,UAAU,YAAW,WACxB,gBAAKA,UAAU,QAAO,UACpB,4BAAQ,gBAEV,gBAAKA,UAAU,QAAO,SAAC,OACvB,gBAAKA,UAAU,QAAO,SAAE3C,EAAKumC,eAE/B,iBAAK5jC,UAAU,YAAW,WACxB,gBAAKA,UAAU,QAAO,UACpB,4BAAQ,wBAEV,gBAAKA,UAAU,QAAO,SAAC,OACvB,gBAAKA,UAAU,QAAO,SAAE3C,EAAKwmC,mBAE/B,iBAAK7jC,UAAU,YAAW,WACxB,gBAAKA,UAAU,QAAO,UACpB,4BAAQ,mBAEV,gBAAKA,UAAU,QAAO,SAAC,OACvB,gBAAKA,UAAU,QAAO,SAAE3C,EAAKgJ,kBAE/B,iBAAKrG,UAAU,YAAW,WACxB,gBAAKA,UAAU,QAAO,UACpB,4BAAQ,uBAEV,gBAAKA,UAAU,QAAO,SAAC,OACvB,gBAAKA,UAAU,QAAO,SACnBwiC,GAAanlC,GACZ,IACA+kC,GAAiB/kC,EAAKymC,gBAG5B,iBAAK9jC,UAAU,YAAW,WACxB,gBAAKA,UAAU,QAAO,UACpB,4BAAQ,wBAEV,gBAAKA,UAAU,QAAO,SAAC,OACvB,gBAAKA,UAAU,QAAO,SACnBwiC,GAAanlC,GACZ,IACA+kC,GAAiB/kC,EAAK0mC,wBAG5B,iBAAK/jC,UAAU,YAAW,WACxB,gBAAKA,UAAU,QAAO,UACpB,4BAAQ,eAEV,gBAAKA,UAAU,QAAO,SAAC,OACvB,gBAAKA,UAAU,QAAO,SAAE3C,EAAK2mC,YAE/B,iBAAKhkC,UAAU,YAAW,WACxB,gBAAKA,UAAU,QAAO,UACpB,4BAAQ,cAEV,gBAAKA,UAAU,QAAO,SAAC,OACvB,gBAAKA,UAAU,QAAO,SACH,MAAhB3C,EAAK4mC,SAAmC,IAAhB5mC,EAAK4mC,QAC1B5mC,EAAK8lC,SACL9lC,EAAK4mC,cAGb,iBAAKjkC,UAAU,YAAW,WACxB,gBAAKA,UAAU,QAAO,UACpB,4BAAQ,kBAEV,gBAAKA,UAAU,QAAO,SAAC,OACvB,gBAAKA,UAAU,iBAAgB,UAC7B,cACEA,UAAU,UACV4B,QAAS,SAAC8B,GAAC,OACTggC,EACErmC,EAAKsmC,YACLtmC,EAAKm2B,aACLn2B,EAAK+8B,UACN,EAEHz4B,MAAOtE,EAAK+8B,UAAU,SAErB/8B,EAAK+8B,kBAIZ,iBAAKp6B,UAAU,YAAW,WACxB,gBAAKA,UAAU,QAAO,UACpB,4BAAQ,yBAEV,gBAAKA,UAAU,QAAO,SAAC,OACvB,gBAAKA,UAAU,QAAO,SACnB3C,EAAK2lC,aAAa/oB,MAAM,KAAKgpB,KAAK,QAAQnkB,MAAM,GAAI,SAGzD,iBAAK9e,UAAU,YAAW,WACxB,gBAAKA,UAAU,QAAO,UACpB,4BAAQ,uBAEV,gBAAKA,UAAU,QAAO,SAAC,iBAK/B,gBACEnF,MAAO,CACLylB,gBAAiB,OACjBuY,OAAQ,iBACR6B,UAAW,OACXwJ,UAAW,QACXrpB,QAAS,UACTspB,UAAW,QAEbnkC,UAAU,WAAU,SAEnByhC,EACE5jC,QAAO,SAAC7C,GAAC,MAAgB,WAAXA,EAAEopC,KAAkB,IAClC7nC,KAAI,SAACg0B,GAAG,OACP,4BACE,8BACGA,EAAI6T,MAAM,OAAK7T,EAAI8T,UAAU,IAAE9T,EAAI+T,SAAS,MAAI,IAChDn8B,IAAOooB,EAAIgU,aAAal8B,OAAO,mBAElC,mBACA,iBAAKrI,UAAU,aAAY,WACzB,iBAAKA,UAAU,YAAW,WACxB,gBAAKA,UAAU,QAAO,UACpB,0BAAM,wBAER,gBAAKA,UAAU,QAAO,SAAC,OACvB,gBAAKA,UAAU,QAAO,SACnBwiC,GAAanlC,GACZ,IACA+kC,GAAiB7R,EAAIiU,uBAG3B,iBAAKxkC,UAAU,YAAW,WACxB,gBAAKA,UAAU,QAAO,UACpB,0BAAM,eAER,gBAAKA,UAAU,QAAO,SAAC,OACvB,gBAAKA,UAAU,QAAO,SACH,IAAhBuwB,EAAIjqB,UAAkC,MAAhBiqB,EAAIjqB,SACvB,KACAiqB,EAAIjqB,mBAIV,UAId,SAAC,KAAY,WACX,mBACEtG,UAAU,oCACV4B,QAAS,kBAAM0/B,GAAS,EAAM,EAAC,SAChC,iBAOX,CA4JA,OACE,4BACE,iBAAKthC,UAAU,aAAY,UACxBsP,GACC,SAACiE,EAAA,EAAM,CACLC,YAAa,WAEXjE,GAAU,EACZ,IAGF,IAEF,iBAAKvP,UAAU,oBAAmB,WAChC,iBAAMA,UAAU,OAAM,UACpB,SAAC,MAAa,MACT,oGAIC,GAATiiC,IACC,gBAAKjiC,UAAU,aAAY,UACzB,UAAC,IAAS,CACRuF,MAAOlI,EACPoiB,eAAa,EACbzf,UAAU,sBACV6f,aAAW,EACXshB,aAAcA,EACdsD,YAAa,SAAC/gC,GAAC,OAAK09B,EAAgB19B,EAAErG,KAAK,EAC3CqnC,YAnLQ,SAAChhC,GACnB,IAAMihC,EAAahiC,YAAW,WAC5Bk/B,GAAa,EACf,GAAG,KACH7/B,IAAAA,IAEIf,EAAO,2DAEHyC,EAAErG,KAAKunC,QAAO,mBACL9jC,EAAY,sBAAc,EAAC,sBAAcxD,EAAS,qBAC3DoG,EAAErG,KAAKwnC,gBAGZxiC,MAAK,SAACgH,GACLhM,EAAK4T,MAAK,SAAC6zB,GAAC,OAAKA,EAAEF,UAAYlhC,EAAErG,KAAKunC,OAAO,IAAEG,QAAU17B,EAAIhM,KAC7DwkC,GAAa,GACbmD,aAAaL,EACf,IACCniC,OAAM,SAACC,GAAK,OAAKU,QAAQC,IAAIX,EAAM,GACxC,EAiKYwiC,qBA/JiB,SAAC5nC,GAC5B,OACE,iBAAK2C,UAAU,aAAY,UACZ,IAEb,UAAC,IAAS,CACRuF,MAAOlI,EAAK0nC,QACZ/kC,UAAU,sBACV6f,aAAW,EACXqlB,UAAW,EAAE,WAEb,SAAC,IAAM,CACLxyB,UAAQ,EACRE,MAAM,eACNzI,OAAO,eACPwI,KAAM,SAAC8L,GAAO,OACZ,gBAAK9c,MAAO8c,EAAQolB,aAAa,SAAEplB,EAAQolB,cAAmB,KAGlE,SAAC,IAAM,CACLnxB,UAAQ,EACRE,MAAM,eACNzI,OAAO,OACPwI,KAAM,SAAC8L,GAAO,OACZ,gBAAK9c,MAAOwG,IAAOsW,EAAQ0mB,cAAc98B,OAAO,eAAe,SAC5DF,IAAOsW,EAAQ0mB,cAAc98B,OAAO,gBACjC,KAGV,SAAC,IAAM,CACLqK,UAAQ,EACRE,MAAM,QACNzI,OAAO,QACPwI,KAAM,SAAC8L,GAAO,OAAK,gBAAK9c,MAAO8c,EAAQulB,MAAM,SAAEvlB,EAAQulB,OAAY,KAErE,SAAC,IAAM,CACLtxB,UAAQ,EACRE,MAAM,cACNzI,OAAO,WACPwI,KAAM,SAAC8L,GAAO,OAAMA,EAAQ2mB,YAAc,MAAQ,IAAI,KAExD,SAAC,IAAM,CACL1yB,UAAQ,EACRE,MAAM,WACNzI,OAAO,WACPtP,MAAO,CAAE2lB,UAAW,SACpB7N,KAAM,SAAC8L,GAAO,OACZ,gBACE9c,MACE6gC,GAAa/jB,GACb,IACA2jB,GAAiB3jB,EAAQqlB,UAC1B,SAEAtB,GAAa/jB,GACZ,IACA2jB,GAAiB3jB,EAAQqlB,WACvB,KAGV,SAAC,IAAM,CACLpxB,UAAQ,EACRE,MAAM,mBACNzI,OAAO,YACPtP,MAAO,CAAE2lB,UAAW,SACpB7N,KAAM,SAAC8L,GAAO,OACZ,gBACE9c,MACE6gC,GAAa/jB,GACb,IACA2jB,GAAiB3jB,EAAQslB,kBAC1B,SAEAvB,GAAa/jB,GACZ,IACA2jB,GAAiB3jB,EAAQslB,mBACvB,KAGV,SAAC,IAAM,CACLrxB,UAAQ,EACRE,MAAM,gBACNzI,OAAO,SACPtP,MAAO,CAAE2lB,UAAW,SACpB7N,KAAM,SAAC8L,GAAO,OACZ,gBACE9c,MACE6gC,GAAa/jB,GACb,IACA2jB,GAAiB3jB,EAAQ4mB,eAC1B,SAEA7C,GAAa/jB,GACZ,IACA2jB,GAAiB3jB,EAAQ4mB,gBACvB,KAGV,SAAC,IAAM,CACL3yB,UAAQ,EACRE,MAAM,WACNzI,OAAO,WACPwI,KAAMkwB,MAER,SAAC,IAAM,CACLnwB,UAAQ,EACRE,MAAM,UACNzI,OAAO,UACPwI,KAAM,SAAC8L,GAAO,OACZ,iBAAK9c,MAAO8c,EAAQwlB,QAAQ,UACzBvB,GAAajkB,EAAQwlB,SACrBxlB,EAAQwlB,UACL,KAGV,SAAC,IAAM,CACLvxB,UAAQ,EACRE,MAAM,WACNzI,OAAO,WACPwI,KAAM,SAAC8L,GAAO,OACZ,gBAAK9c,MAAO8c,EAAQnY,SAAS,SAAEmY,EAAQnY,UAAe,KAG1D,SAAC,IAAM,CAAC6D,OAAO,UAAUwI,KAAMywB,UAIvC,EAiCYxjB,WAAS,EACTtS,KAAM,GACNg4B,kBAAmB,EACnBC,6BAA8B,CAAC,EAAG,GAAI,GAAI,IAC1CC,2BAA4B,CAC1BjJ,gBAAiB,oBACjBC,mBAAoB,UAEtBrc,0BAA0B,2CAC1BD,kBAAkB,6FAClBE,mBAAoB,CAAC,GAAI,GAAI,IAC7BqlB,SAAS,WAAU,WAEnB,SAAC,IAAM,CAACC,SAtMG,SAACjnB,GACtB,OAAOA,EAAQsmB,QAAQl3B,QAAU,CACnC,EAoM8ChT,MAAO,CAAEC,MAAO,WAClD,SAAC,IAAM,CACL4X,UAAQ,EACRE,MAAM,YACNzI,OAAO,UACPwI,KAAM,SAAC8L,GAAO,OACZ,gBAAK9c,MAAO8c,EAAQknB,UAAU,SAAElnB,EAAQknB,WAAgB,KAG5D,SAAC,IAAM,CACLjzB,UAAQ,EACRE,MAAM,cACNzI,OAAO,eACPwI,KAAM,SAAC8L,GAAO,OACZ,gBAAK9c,MAAOwG,IAAOsW,EAAQmnB,OAAOv9B,OAAO,eAAe,SACrDF,IAAOsW,EAAQmnB,OAAOv9B,OAAO,gBAC1B,KAGV,SAAC,IAAM,CACLqK,UAAQ,EACRE,MAAM,cACNzI,OAAO,gBACPwI,KAAM,SAAC8L,GAAO,OACZ,gBACE9c,MAAOwG,IAAOsW,EAAQonB,aAAax9B,OAAO,eAAe,SAExDF,IAAOsW,EAAQonB,aAAax9B,OAAO,gBAChC,KAGV,SAAC,IAAM,CACLqK,UAAQ,EACRE,MAAM,SACNzI,OAAO,aACPtP,MAAO,CAAE2lB,UAAW,SACpB7N,KAAM,SAAC8L,GAAO,OACZ,gBACE9c,MACE6gC,GAAa/jB,GACb,IACA2jB,GAAiB3jB,EAAQqnB,QAC1B,SAEAtD,GAAa/jB,GACZ,IACA2jB,GAAiB3jB,EAAQqnB,SACvB,KAGV,SAAC,IAAM,CACLpzB,UAAQ,EACRE,MAAM,cACNzI,OAAO,SACPwI,KAAM,SAAC8L,GAAO,OACZ,gBAAK9c,MAAO8c,EAAQsnB,YAAY,SAAEtnB,EAAQsnB,aAAkB,SAMpE,MAGH1E,GACC,SAACmC,GAAY,CACXlC,SAAUA,EACVjkC,KAAMkkC,EACNF,MAAOA,EACPoC,UAAWpmC,IAGb,GAED0kC,IACC,SAACiE,GAAA,EAAqB,CACpB7D,YAAaA,GACbJ,SAAUA,EACVtjB,QAASkkB,OAKnB,EC4BA,OAjsBA,SAA6BjoC,GAAQ,IAAD,EAClC,GAAwByG,EAAAA,EAAAA,UAAS,IAAG,eAA7B9D,EAAI,KAAEqqB,EAAO,KACpB,GAAwCvmB,EAAAA,EAAAA,UAAS,MAAK,eAA/CggC,EAAY,KAAEC,EAAe,KACpC,GAAsCjgC,EAAAA,EAAAA,UAAS,IAAG,eAA3CoD,EAAW,KAAE+L,EAAc,KAClC,GAA0BnP,EAAAA,EAAAA,WAAS,GAAM,eAAlCkgC,EAAK,KAAEC,EAAQ,KACtB,GAAkCngC,EAAAA,EAAAA,UAAS,CAAC,GAAE,eAAvCogC,EAAS,KAAEC,EAAY,KAC9B,GAAoCrgC,EAAAA,EAAAA,UAAS,GAAE,eAAxCwS,EAAU,KAAEC,EAAa,KAChC,GAA4CzS,EAAAA,EAAAA,UAAS,IAAG,eAAjDsgC,EAAc,KAAEC,EAAiB,KACxC,GAAsCvgC,EAAAA,EAAAA,WAAS,GAAM,eAA9CwgC,EAAW,KAAEC,EAAc,KAClC,GAA4BzgC,EAAAA,EAAAA,WAAS,GAAM,eAApCmO,EAAM,KAAEC,EAAS,KACxB,GAAkCpO,EAAAA,EAAAA,WAAS,GAAM,eAA/B0gC,GAAF,KAAc,MAC9B,GAA0B1gC,EAAAA,EAAAA,WAAS,GAAM,eAAlC8gC,EAAK,KAAEC,GAAQ,KAEhBjhC,GAAUC,EAAAA,EAAAA,QACV5D,GAAY5C,EAAM4C,UAElBwD,IADcpG,EAAM8Y,YACLzS,aAAaC,QAAQ,UAE1C,GAAgC8gC,EAAAA,SAAe,MAAK,iBAA7CC,GAAQ,MAAEC,GAAW,MACtBG,GAAc,WAClBH,IAAY,EACd,GAYAvkC,EAAAA,EAAAA,YAAU,WATRuE,IAAM,CACJC,OAAQ,MACRC,IAAKjB,GAAO,mDAA+CH,MAC1DuB,MAAK,SAAUC,GAChB,IAAI+G,EAAM/G,EAASjF,KACnBuW,EAAcvK,EAChB,GAKF,GAAG,KAEH5L,EAAAA,EAAAA,YAAU,WACRuU,KACmB,IAAf2B,GACF5Q,IAEJ,GAAG,CAAC4Q,IAEJ,IAAM3B,GAAyB,WAC7BhQ,IAAM,CACJC,OAAQ,MACRC,IACEjB,GAAO,4DAC8C3D,MAEtD+E,MAAK,SAAUC,GACd,IAAIC,EAAOD,EAASjF,KAEpBiT,EAAe/N,EACjB,IACCC,OAAM,SAAUF,GACfa,QAAQC,IAAId,EACd,GACJ,EAEMkgC,GAAe,SAAC/jB,GACpB,IAAIqJ,EAAYna,SAASoa,cAAc,OAEvC,OADAD,EAAUE,UAAYvJ,EAAQgkB,mBACvB3a,EAAUE,SACnB,EAIMoa,IAFmB,QAAjB,EAAG79B,EAAY,UAAE,OAAd,EAAgB+G,YAEF,SAAC2mB,GACxB,IAAIoQ,EAASvmC,OAAOm2B,GAEpB,GAAIoQ,EAAOj0B,SAAS,KAAM,CACxB,IAAIk0B,EAAQD,EAAOpoB,MAAM,KAGzB,OAFkBqoB,EAAM,GAAG5qB,QAAQ,0BAA2B,OAEzC,IADH4qB,EAAM,GAAGC,OAAO,EAAG,IAEvC,CACE,OAAOF,EAAO3qB,QAAQ,0BAA2B,OAAS,KAE9D,GAEM3U,GAAU,WACdwM,GAAU,GACVvN,IAAAA,IAEIf,GAAO,6DACiD0S,EAAU,sBAAcrW,KAEjF+E,MAAK,SAACgH,GACLqe,EAAQre,EAAIhM,MACZkS,GAAU,GACV2yB,IAAS,EACX,IACC1/B,OAAM,SAACkB,GACNP,QAAQC,IAAIM,EACd,GACJ,EAEMg/B,GAAe,SAACjkB,GACpB,OAAIA,EAAQrQ,SAAS,cAEjB,2BACE,SAAC,OAAgB,CAACvT,MAAO,CAAEwP,MAAO,YAItCoU,EAAQrQ,SAAS,gBACjBqQ,EAAQrQ,SAAS,YACjBqQ,EAAQrQ,SAAS,gBACjBqQ,EAAQrQ,SAAS,gBAGf,2BACE,SAAC,OAAgB,CAACvT,MAAO,CAAEwP,MAAO,eAG7BoU,EAAQrQ,SAAS,gBAExB,2BACE,SAAC,OAAgB,CAACvT,MAAO,CAAEwP,MAAO,eAG7BoU,EAAQrQ,SAAS,YAExB,2BACE,SAAC,OAAgB,CAACvT,MAAO,CAAEwP,MAAO,eAG7BoU,EAAQrQ,SAAS,SAExB,2BACE,SAAC,OAAgB,CAACvT,MAAO,CAAEwP,MAAO,eAG7BoU,EAAQrQ,SAAS,oBAExB,2BACE,SAAC,OAAgB,CAACvT,MAAO,CAAEwP,MAAO,eAItCoU,EAAQrQ,SAAS,gBACjBqQ,EAAQrQ,SAAS,gBACjBqQ,EAAQrQ,SAAS,gBAGf,2BACE,SAAC,OAAgB,CAACvT,MAAO,CAAEwP,MAAO,gBAI/B,mBAEX,EACA,IAAsClJ,EAAAA,EAAAA,UAAS,IAAG,iBAA3CwhC,GAAW,MAAEC,GAAc,MAC5BC,GAAgB,SAACpkB,GACrB,OACE,+BACE,iBACEqkB,YAAa,SAACp/B,GACZs+B,GAAa,OAADt+B,QAAC,IAADA,OAAC,EAADA,EAAGq/B,eACfH,GACEnkB,EAAQukB,aAAa/oB,MAAM,KAAKgpB,KAAK,QAAQnkB,MAAM,GAAI,GAE3D,EACAokB,aAAcf,GACdniC,UAAU,WAAU,UAEnB0iC,GAAajkB,EAAQ0kB,UAAU,IAAE1kB,EAAQ0kB,aAIlD,EAEMC,GAAc,SAAC3kB,GACnB,OACE,cACEze,UAAU,UACV4B,QAAS,WACPggC,GAAe,GACfyB,GAAe5kB,EAAQ6kB,YACvBhC,GAAS,GACTE,EAAa/iB,EACf,EAAE,SACH,QAIL,EAEM4kB,GAAiB,SAACE,GACtBvhC,IAAAA,IAEIf,GAAO,8DACkDsiC,IAE1DlhC,MAAK,SAACgH,GACLq4B,EAAkBr4B,EAAIhM,MACtBukC,GAAe,EACjB,IACCp/B,OAAM,SAACC,GAAK,OAAKU,QAAQC,IAAIX,EAAM,GACxC,EAEA,SAAS+gC,GAAa9oC,GACpB,IAAQ2mC,EAAqC3mC,EAArC2mC,MAAOC,EAA8B5mC,EAA9B4mC,SAAUjkC,EAAoB3C,EAApB2C,KAAMomC,EAAc/oC,EAAd+oC,UAEzBC,EAAY,2CAAG,WAAOC,EAAanQ,EAAc4G,GAAS,8EACxDtG,EAAOnmB,SAASoa,cAAc,MAC/BgM,KACH9yB,GAAO,qDACuC0iC,EAAW,wBAAgBnQ,GAC3EM,EAAKlV,QAAQ,2CACd,gBANiB,0CAQlB,OACE,yBACG+iB,GACC,SAACpuB,EAAA,EAAM,CACLC,YAAa,WAEXouB,GAAe,EACjB,KAGF,UAAC,KAAM,CACLtgC,QAAS+/B,EACT5/B,SAAS,SACTF,KAAK,KACLC,QAAS,kBAAM8/B,GAAS,EAAM,EAAC,WAE/B,SAAC,KAAY,CAACzmC,MAAO,CAAEuQ,OAAQ,cAAe,UAC5C,SAAC,KAAW,WACV,iBAAMpL,UAAU,OAAM,SAAC,yBAG3B,UAAC,KAAU,YACT,gBAAKA,UAAU,YAAW,UACxB,gBAAKA,UAAU,qBAAoB,UACjC,iBAAKA,UAAU,aAAY,WACzB,iBAAKA,UAAU,YAAW,WACxB,gBAAKA,UAAU,QAAO,UACpB,4BAAQ,eAEV,gBAAKA,UAAU,QAAO,SAAC,OACvB,gBAAKA,UAAU,QAAO,SAAEyjC,EAAU,GAAGn4B,kBAEvC,iBAAKtL,UAAU,YAAW,WACxB,gBAAKA,UAAU,QAAO,UACpB,4BAAQ,gBAEV,gBAAKA,UAAU,QAAO,SAAC,OACvB,gBAAKA,UAAU,QAAO,SAAE3C,EAAKumC,eAE/B,iBAAK5jC,UAAU,YAAW,WACxB,gBAAKA,UAAU,QAAO,UACpB,4BAAQ,wBAEV,gBAAKA,UAAU,QAAO,SAAC,OACvB,gBAAKA,UAAU,QAAO,SAAE3C,EAAKwmC,mBAE/B,iBAAK7jC,UAAU,YAAW,WACxB,gBAAKA,UAAU,QAAO,UACpB,4BAAQ,mBAEV,gBAAKA,UAAU,QAAO,SAAC,OACvB,gBAAKA,UAAU,QAAO,SAAE3C,EAAKgJ,kBAE/B,iBAAKrG,UAAU,YAAW,WACxB,gBAAKA,UAAU,QAAO,UACpB,4BAAQ,uBAEV,gBAAKA,UAAU,QAAO,SAAC,OACvB,gBAAKA,UAAU,QAAO,SACnBwiC,GAAanlC,GACZ,IACA+kC,GAAiB/kC,EAAKymC,gBAG5B,iBAAK9jC,UAAU,YAAW,WACxB,gBAAKA,UAAU,QAAO,UACpB,4BAAQ,wBAEV,gBAAKA,UAAU,QAAO,SAAC,OACvB,gBAAKA,UAAU,QAAO,SACnBwiC,GAAanlC,GACZ,IACA+kC,GAAiB/kC,EAAK0mC,wBAG5B,iBAAK/jC,UAAU,YAAW,WACxB,gBAAKA,UAAU,QAAO,UACpB,4BAAQ,eAEV,gBAAKA,UAAU,QAAO,SAAC,OACvB,gBAAKA,UAAU,QAAO,SAAE3C,EAAK2mC,YAE/B,iBAAKhkC,UAAU,YAAW,WACxB,gBAAKA,UAAU,QAAO,UACpB,4BAAQ,cAEV,gBAAKA,UAAU,QAAO,SAAC,OACvB,gBAAKA,UAAU,QAAO,SACH,MAAhB3C,EAAK4mC,SAAmC,IAAhB5mC,EAAK4mC,QAC1B5mC,EAAK8lC,SACL9lC,EAAK4mC,cAGb,iBAAKjkC,UAAU,YAAW,WACxB,gBAAKA,UAAU,QAAO,UACpB,4BAAQ,kBAEV,gBAAKA,UAAU,QAAO,SAAC,OACvB,gBAAKA,UAAU,iBAAgB,UAC7B,cACEA,UAAU,UACV4B,QAAS,SAAC8B,GAAC,OACTggC,EACErmC,EAAKsmC,YACLtmC,EAAKm2B,aACLn2B,EAAK+8B,UACN,EAEHz4B,MAAOtE,EAAK+8B,UAAU,SAErB/8B,EAAK+8B,kBAIZ,iBAAKp6B,UAAU,YAAW,WACxB,gBAAKA,UAAU,QAAO,UACpB,4BAAQ,yBAEV,gBAAKA,UAAU,QAAO,SAAC,OACvB,gBAAKA,UAAU,QAAO,SACnB3C,EAAK2lC,aAAa/oB,MAAM,KAAKgpB,KAAK,QAAQnkB,MAAM,GAAI,SAGzD,iBAAK9e,UAAU,YAAW,WACxB,gBAAKA,UAAU,QAAO,UACpB,4BAAQ,uBAEV,gBAAKA,UAAU,QAAO,SAAC,iBAK/B,gBACEnF,MAAO,CACLylB,gBAAiB,OACjBuY,OAAQ,iBACR6B,UAAW,OACXwJ,UAAW,QACXrpB,QAAS,UACTspB,UAAW,QAEbnkC,UAAU,WAAU,SAEnByhC,EACE5jC,QAAO,SAAC7C,GAAC,MAAgB,WAAXA,EAAEopC,KAAkB,IAClC7nC,KAAI,SAACg0B,GAAG,OACP,4BACE,8BACGA,EAAI6T,MAAM,OAAK7T,EAAI8T,UAAU,IAAE9T,EAAI+T,SAAS,MAAI,IAChDn8B,IAAOooB,EAAIgU,aAAal8B,OAAO,mBAElC,mBACA,iBAAKrI,UAAU,aAAY,WACzB,iBAAKA,UAAU,YAAW,WACxB,gBAAKA,UAAU,QAAO,UACpB,0BAAM,wBAER,gBAAKA,UAAU,QAAO,SAAC,OACvB,gBAAKA,UAAU,QAAO,SACnBwiC,GAAanlC,GACZ,IACA+kC,GAAiB7R,EAAIiU,uBAG3B,iBAAKxkC,UAAU,YAAW,WACxB,gBAAKA,UAAU,QAAO,UACpB,0BAAM,eAER,gBAAKA,UAAU,QAAO,SAAC,OACvB,gBAAKA,UAAU,QAAO,SACH,IAAhBuwB,EAAIjqB,UAAkC,MAAhBiqB,EAAIjqB,SACvB,KACAiqB,EAAIjqB,mBAIV,UAId,SAAC,KAAY,WACX,mBACEtG,UAAU,oCACV4B,QAAS,kBAAM0/B,GAAS,EAAM,EAAC,SAChC,gBAQb,CAkLA,OACE,4BACE,iBAAKthC,UAAU,wBAAuB,UACnCsP,GAAS,SAACiE,EAAA,EAAM,CAACC,YAAa,kBAAMjE,GAAU,EAAM,IAAO,GAAG,QAE/D,gBAAKoG,MAAM,aAAY,SACX,GAATssB,GACC,UAAC,IAAS,CACR18B,MAAOlI,EACPoiB,eAAa,EACbI,aAAW,EACX7f,UAAU,sBACVmhC,aAAcA,EACdsD,YAAa,SAAC/gC,GAAC,OAAK09B,EAAgB19B,EAAErG,KAAK,EAC3CqnC,YA1LQ,SAAChhC,GACnB,IAAMihC,EAAahiC,YAAW,WAC5Bk/B,GAAa,EACf,GAAG,KACH7/B,IAAAA,IAEIf,GAAO,2DAC+CyC,EAAErG,KAAKunC,QAAO,mBAAW9jC,GAAY,qBAAa4C,EAAErG,KAAK4oC,UAAS,sBAAc3oC,GAAS,qBAAaoG,EAAErG,KAAK8N,YAEpK9I,MAAK,SAACgH,GACLhM,EAAK4T,MAAK,SAAC6zB,GAAC,OAAKA,EAAEF,UAAYlhC,EAAErG,KAAKunC,OAAO,IAAEG,QAAU17B,EAAIhM,KAC7DwkC,GAAa,GACbmD,aAAaL,EACf,IACCniC,OAAM,SAACC,GAAK,OAAKU,QAAQC,IAAIX,EAAM,GACxC,EA4KYwiC,qBA1KiB,SAAC5nC,GAC5B,OACE,iBAAK2C,UAAU,aAAY,UACZ,IACb,UAAC,IAAS,CACRuF,MAAOlI,EAAK0nC,QACZ/kC,UAAU,sBACV6f,aAAW,EACXqlB,UAAW,EAAE,WAEb,SAAC,IAAM,CACLxyB,UAAQ,EACRE,MAAM,eACNzI,OAAO,eACPwI,KAAM,SAAC8L,GAAO,OACZ,gBAAKze,UAAU,WAAW2B,MAAO8c,EAAQolB,aAAa,SACnDplB,EAAQolB,cACL,KAGV,SAAC,IAAM,CACLnxB,UAAQ,EACRE,MAAM,eACNzI,OAAO,OACPwI,KAAM,SAAC8L,GAAO,OACZ,gBAAK9c,MAAOwG,IAAOsW,EAAQ0mB,cAAc98B,OAAO,eAAe,SAC5DF,IAAOsW,EAAQ0mB,cAAc98B,OAAO,gBACjC,KAGV,SAAC,IAAM,CACLqK,UAAQ,EACRE,MAAM,QACNzI,OAAO,QACPwI,KAAM,SAAC8L,GAAO,OAAK,gBAAK9c,MAAO8c,EAAQulB,MAAM,SAAEvlB,EAAQulB,OAAY,KAErE,SAAC,IAAM,CACLtxB,UAAQ,EACRE,MAAM,cACNzI,OAAO,WACPwI,KAAM,SAAC8L,GAAO,OAAMA,EAAQ2mB,YAAc,MAAQ,IAAI,KAExD,SAAC,IAAM,CACL1yB,UAAQ,EACRE,MAAM,WACNzI,OAAO,WACPtP,MAAO,CAAE2lB,UAAW,SACpB7N,KAAM,SAAC8L,GAAO,OACZ,gBACE9c,MACE6gC,GAAa/jB,GACb,IACA2jB,GAAiB3jB,EAAQqlB,UAC1B,SAEAtB,GAAa/jB,GACZ,IACA2jB,GAAiB3jB,EAAQqlB,WACvB,KAGV,SAAC,IAAM,CACLpxB,UAAQ,EACRE,MAAM,mBACNzI,OAAO,YACPtP,MAAO,CAAE2lB,UAAW,SACpB7N,KAAM,SAAC8L,GAAO,OACZ,gBACE9c,MACE6gC,GAAa/jB,GACb,IACA2jB,GAAiB3jB,EAAQslB,kBAC1B,SAEAvB,GAAa/jB,GACZ,IACA2jB,GAAiB3jB,EAAQslB,mBACvB,KAGV,SAAC,IAAM,CACLrxB,UAAQ,EACRE,MAAM,gBACNzI,OAAO,SACPtP,MAAO,CAAE2lB,UAAW,SACpB7N,KAAM,SAAC8L,GAAO,OACZ,gBACE9c,MACE6gC,GAAa/jB,GACb,IACA2jB,GAAiB3jB,EAAQ4mB,eAC1B,SAEA7C,GAAa/jB,GACZ,IACA2jB,GAAiB3jB,EAAQ4mB,gBACvB,KAGV,SAAC,IAAM,CACL3yB,UAAQ,EACRE,MAAM,WACNzI,OAAO,WACPwI,KAAMkwB,MAER,SAAC,IAAM,CACLnwB,UAAQ,EACRE,MAAM,UACNzI,OAAO,UACPwI,KAAM,SAAC8L,GAAO,OACZ,iBAAK9c,MAAO8c,EAAQwlB,QAAQ,UACzBvB,GAAajkB,EAAQwlB,SACrBxlB,EAAQwlB,UACL,KAGV,SAAC,IAAM,CACLvxB,UAAQ,EACRE,MAAM,WACNzI,OAAO,WACPwI,KAAM,SAAC8L,GAAO,OACZ,gBAAK9c,MAAO8c,EAAQnY,SAAS,SAAEmY,EAAQnY,UAAe,KAG1D,SAAC,IAAM,CAAC6D,OAAO,UAAUwI,KAAMywB,UAIvC,EA2CYxjB,WAAS,EACTtS,KAAM,GACNg4B,kBAAmB,EACnBC,6BAA8B,CAAC,EAAG,GAAI,GAAI,IAC1CC,2BAA4B,CAC1BjJ,gBAAiB,oBACjBC,mBAAoB,UAEtBrc,0BAA0B,2CAC1BD,kBAAkB,6FAClBE,mBAAoB,CAAC,GAAI,GAAI,IAC7BqlB,SAAS,WAAU,WAEnB,SAAC,IAAM,CAACC,SA7MG,SAACjnB,GACtB,OAAOA,EAAQsmB,QAAQl3B,QAAU,CACnC,EA2M8ChT,MAAO,CAAEC,MAAO,WAClD,SAAC,IAAM,CACL4X,UAAQ,EACRE,MAAM,YACNzI,OAAO,UACPwI,KAAM,SAAC8L,GAAO,OACZ,gBAAK9c,MAAO8c,EAAQknB,UAAU,SAAElnB,EAAQknB,WAAgB,KAG5D,SAAC,IAAM,CACLjzB,UAAQ,EACRE,MAAM,WACNzI,OAAO,aACPwI,KAAM,SAAC8L,GAAO,OACZ,gBAAKze,UAAU,WAAW2B,MAAO8c,EAAQynB,SAAS,SAC/CznB,EAAQynB,UACL,KAGV,SAAC,IAAM,CACLxzB,UAAQ,EACRE,MAAM,YACNzI,OAAO,eACPwI,KAAM,SAAC8L,GAAO,OA7ER,SAACA,GACnB,OACEtW,IAAOsW,EAAQmnB,OAAOv9B,OAAO,iBAC7BF,IAAOsW,EAAQ0nB,OAAO99B,OAAO,gBAG3B,gBACE1G,MAAK,UAAKwG,IAAOsW,EAAQmnB,OAAOv9B,OAAO,eAAc,cAAMF,IACzDsW,EAAQ0nB,OACR99B,OAAO,gBAAiB,mBAEtBF,IAAOsW,EAAQmnB,OAAOv9B,OAAO,eAAc,cAAMF,IACnDsW,EAAQ0nB,OACR99B,OAAO,mBAKX,gBAAK1G,MAAOwG,IAAOsW,EAAQmnB,OAAOv9B,OAAO,eAAe,SACrDF,IAAOsW,EAAQmnB,OAAOv9B,OAAO,gBAItC,CAsDiC+9B,CAAY3nB,EAAQ,KAEzC,SAAC,IAAM,CACL/L,UAAQ,EACRE,MAAM,cACNzI,OAAO,gBACPwI,KAAM,SAAC8L,GAAO,OACZ,iBACE9c,MAAOwG,IAAOsW,EAAQonB,aAAax9B,OAAO,eAAe,UAExD,IACAF,IAAOsW,EAAQonB,aAAax9B,OAAO,iBAChC,KAGV,SAAC,IAAM,CACLqK,UAAQ,EACRE,MAAM,SACNzI,OAAO,aACPtP,MAAO,CAAE2lB,UAAW,SACpB7N,KAAM,SAAC8L,GAAO,OACZ,gBACE9c,MACE6gC,GAAa/jB,GACb,IACA2jB,GAAiB3jB,EAAQqnB,QAC1B,SAEAtD,GAAa/jB,GACZ,IACA2jB,GAAiB3jB,EAAQqnB,SACvB,KAGV,SAAC,IAAM,CACLpzB,UAAQ,EACRE,MAAM,WACNzI,OAAO,SACPwI,KAAM,SAAC8L,GAAO,OACZ,gBAAK9c,MAAO8c,EAAQ4nB,SAAS,SAAE5nB,EAAQ4nB,UAAe,OAK5D,QAILhF,GACC,SAACmC,GAAY,CACXlC,SAAUA,EACVjkC,KAAMkkC,EACNF,MAAOA,EACPoC,UAAWpmC,IAGb,GAED0kC,KACC,SAACiE,GAAA,EAAqB,CACpB7D,YAAaA,GACbJ,SAAUA,GACVtjB,QAASkkB,OAKnB,E,YC6hBA,OArtCA,SAAoCjoC,GAAQ,IAAD,EACzC,GAAwByG,EAAAA,EAAAA,UAAS,IAAG,eAA7B9D,EAAI,KAAEqqB,EAAO,KACpB,GAAwCvmB,EAAAA,EAAAA,UAAS,MAAK,eAA/CggC,EAAY,KAAEC,EAAe,KACpC,GAAsCjgC,EAAAA,EAAAA,UAAS,IAAG,eAA3CoD,EAAW,KAAE+L,EAAc,KAClC,GAAwCnP,EAAAA,EAAAA,UAAS,IAAG,eAA7Cu7B,EAAY,KAAE4J,EAAe,KACpC,GAA0BnlC,EAAAA,EAAAA,WAAS,GAAM,eAAlCkgC,EAAK,KAAEC,EAAQ,KACtB,GAAkCngC,EAAAA,EAAAA,UAAS,CAAC,GAAE,eAAvCogC,EAAS,KAAEC,EAAY,KAC9B,GAAoCrgC,EAAAA,EAAAA,UAAS,GAAE,eAAxCwS,EAAU,KAAEC,EAAa,KAChC,GAA4BzS,EAAAA,EAAAA,WAAS,GAAM,eAApCmO,EAAM,KAAEC,EAAS,KACxB,GAA4CpO,EAAAA,EAAAA,UAAS,IAAG,eAAjDsgC,EAAc,KAAEC,EAAiB,KACxC,IAAsCvgC,EAAAA,EAAAA,WAAS,GAAM,iBAA9CwgC,GAAW,MAAEC,GAAc,MAClC,IAA4CzgC,EAAAA,EAAAA,UAAS,MAAK,iBAC1D,IADqB,MAAmB,OACQA,EAAAA,EAAAA,UAAS,KAAG,iBAArDolC,GAAgB,MAAEC,GAAmB,MAC5C,IAAsCrlC,EAAAA,EAAAA,UAAS,CAAC,GAAE,iBAA3CslC,GAAW,MAAEC,GAAc,MAClC,IAAkDvlC,EAAAA,EAAAA,UAAS,MAAK,iBAAzDwlC,GAAiB,MAAEC,GAAoB,MAC9C,IAA8BzlC,EAAAA,EAAAA,WAAS,GAAM,iBAAtC+f,GAAO,MAAErE,GAAU,MAC1B,IAA0C1b,EAAAA,EAAAA,WAAS,GAAK,iBAAjD0lC,GAAa,MAAEC,GAAgB,MACtC,IAA0C3lC,EAAAA,EAAAA,UAAS,IAAG,iBAA/C4lC,GAAa,MAAEC,GAAgB,MACtC,IAAkC7lC,EAAAA,EAAAA,WAAS,GAAM,iBAA/B0gC,IAAF,MAAc,OAC9B,IAA4C1gC,EAAAA,EAAAA,WAAS,GAAM,iBAC3D,IADqB,MAAmB,OACVA,EAAAA,EAAAA,UAAS,KAAG,iBAC1C,IADc,MAAY,OACgBA,EAAAA,EAAAA,WAAS,IAAK,iBAAlC8lC,IAAF,MAAkB,OACtC,IAAkC9lC,EAAAA,EAAAA,WAAS,GAAM,iBACjD,IADgB,MAAc,OACIA,EAAAA,EAAAA,WAAS,IAAM,iBACjD,IADgB,MAAc,OACJA,EAAAA,EAAAA,WAAS,IAAM,iBAAlC8gC,GAAK,MAAEC,GAAQ,MAEtB,IAA0B/gC,EAAAA,EAAAA,UAAS,GAAE,iBAA9B+lC,GAAK,MAAEvP,GAAQ,MAEhB12B,GAAUC,EAAAA,EAAAA,QACV5D,GAAY5C,EAAM4C,UAElB6pC,IADczsC,EAAM8Y,YACR9Y,EAAMysC,WAClBn2B,GAAam2B,GAAUl2B,MAAK,SAACnT,GAAI,MAA2B,aAAtBA,EAAKiT,YAA2B,IAG5E5N,QAAQC,IAAI,aAAc9F,IAC1B6F,QAAQC,IAAI+jC,IACZ,IAAMrmC,GAAeC,aAAaC,QAAQ,SAE1C,GAAgC8gC,EAAAA,SAAe,MAAK,iBAA7CC,GAAQ,MAAEC,GAAW,MACtBG,GAAc,WAClBH,IAAY,EACd,EAkBMI,IAF0B,QAAjB,EAAG79B,EAAY,UAAE,OAAd,EAAgB+G,YAET,SAAC2mB,GACxB,IAAIoQ,EAASvmC,OAAOm2B,GAEpB,GAAIoQ,EAAOj0B,SAAS,KAAM,CACxB,IAAIk0B,EAAQD,EAAOpoB,MAAM,KAGzB,OAFkBqoB,EAAM,GAAG5qB,QAAQ,0BAA2B,OAEzC,IADH4qB,EAAM,GAAGC,OAAO,EAAG,IAEvC,CACE,OAAOF,EAAO3qB,QAAQ,0BAA2B,OAAS,KAE9D,IAWAja,EAAAA,EAAAA,YAAU,WARRuE,IAAM,CACJC,OAAQ,MACRC,IAAKjB,GAAO,mDAA+CH,MAC1DuB,MAAK,SAAUC,GAChB,IAAI+G,EAAM/G,EAASjF,KACnBuW,EAAcvK,EAChB,GAIF,GAAG,KAEH5L,EAAAA,EAAAA,YAAU,WAzCRuE,IAAM,CACJC,OAAQ,MACRC,IACEjB,GAAO,4DAC8C3D,MAEtD+E,MAAK,SAAUC,GACd,IAAIC,EAAOD,EAASjF,KACpBiT,EAAe/N,EACjB,IACCC,OAAM,SAACC,GAAK,OAAKU,QAAQC,IAAIX,EAAM,IAiCnB,IAAfkR,GACF5Q,IAEJ,GAAG,CAAC4Q,IAEJxQ,QAAQC,IAAI,eAAgBuQ,GAC5B,IAAM5Q,GAAU,WACdwM,GAAU,GACVvN,IAAAA,IAEIf,GAAO,iEACqD0S,EAAU,sBAAcrW,KAErF+E,MAAK,SAACgH,GACLqe,EAAQre,EAAIhM,MACZkS,GAAU,GACV2yB,IAAS,EACX,IACC1/B,OAAM,SAACkB,GAAC,OAAKP,QAAQC,IAAIM,EAAE,GAChC,EAEM8+B,GAAe,SAAC/jB,GACpB,IAAIqJ,EAAYna,SAASoa,cAAc,OAEvC,OADAD,EAAUE,UAAYvJ,EAAQgkB,mBACvB3a,EAAUE,SACnB,EAMM0a,GAAe,SAACjkB,GACpB,OAAIA,EAAQrQ,SAAS,cAEjB,2BACE,SAAC,OAAgB,CAACvT,MAAO,CAAEwP,MAAO,YAItCoU,EAAQrQ,SAAS,gBACjBqQ,EAAQrQ,SAAS,YACjBqQ,EAAQrQ,SAAS,gBACjBqQ,EAAQrQ,SAAS,gBAGf,2BACE,SAAC,OAAgB,CAACvT,MAAO,CAAEwP,MAAO,eAG7BoU,EAAQrQ,SAAS,gBAExB,2BACE,SAAC,OAAgB,CAACvT,MAAO,CAAEwP,MAAO,eAG7BoU,EAAQrQ,SAAS,YAExB,2BACE,SAAC,OAAgB,CAACvT,MAAO,CAAEwP,MAAO,eAG7BoU,EAAQrQ,SAAS,SAExB,2BACE,SAAC,OAAgB,CAACvT,MAAO,CAAEwP,MAAO,eAG7BoU,EAAQrQ,SAAS,oBAExB,2BACE,SAAC,OAAgB,CAACvT,MAAO,CAAEwP,MAAO,eAItCoU,EAAQrQ,SAAS,gBACjBqQ,EAAQrQ,SAAS,gBACjBqQ,EAAQrQ,SAAS,gBAGf,2BACE,SAAC,OAAgB,CAACvT,MAAO,CAAEwP,MAAO,gBAI/B,mBAEX,EACA,IAAsClJ,EAAAA,EAAAA,UAAS,IAAG,iBAA3CwhC,GAAW,MAAEC,GAAc,MAElC,IAAwCzhC,EAAAA,EAAAA,UAAS,IAAG,iBAA7CimC,GAAY,MAAEC,GAAe,OAEpC5pC,EAAAA,EAAAA,YAAU,WACR,IAAM6pC,EAAS,2CAAG,qHAEStlC,IAAAA,IACrBf,GAAO,2CACP,KAAD,EAFKqB,EAAQ,OAGR8kC,EAAe9kC,EAASjF,KAC9BgqC,GAAgBD,GAAc,gDAE9BjkC,QAAQV,MAAM,EAAD,IAAQ,yDAExB,kBAVc,mCAWf6kC,GACF,GAAG,IAEH,IAAMzE,GAAgB,SAACpkB,GACrB,OAAOie,EAAangC,KAAI,SAACvB,GAAC,OAAKA,EAAEsoC,UAAU,IAAEl1B,SAASqQ,EAAQ6kB,cAC3D8D,GAAah5B,SAASrM,SAASjB,MAChC,0BACE,mBAAQyK,SAAU,SAAC7H,GAAC,OAAK6jC,GAAS7jC,EAAG+a,EAAQ,EAAEziB,GAAG,WAAU,SACzDyiB,EAAQ+oB,UAAUjrC,KAAI,SAACuB,GACtB,IAAMjC,EAAMmD,OAAOwT,KAAK1U,GAAM,GACxB5B,EAAQ4B,EAAKjC,GACnB,OAAO,mBAAQ0J,MAAO1J,EAAI,SAAEK,GAC9B,SAIJ,iBACE4mC,YAAa,SAACp/B,GACZs+B,GAAa,OAADt+B,QAAC,IAADA,OAAC,EAADA,EAAGq/B,eACfH,GACEnkB,EAAQukB,aAAa/oB,MAAM,KAAKgpB,KAAK,QAAQnkB,MAAM,GAAI,GAE3D,EACAokB,aAAcf,GACdniC,UAAU,WAAU,UAEnB0iC,GAAajkB,EAAQ0kB,UAAU,IAAE1kB,EAAQ0kB,WAGhD,EAEMsE,GAAa,SAAChpB,GAClB,OAAOie,EACJngC,KAAI,SAACvB,GAAC,OAAKA,EAAEsoC,UAAU,IACvBl1B,SAASqQ,EAAQ6kB,aAClB,kBACE5hC,KAAK,WACL1F,GAAG,WACH0rC,eAAgBjpB,EAAQ2mB,YACxB75B,SAAU,SAAC7H,GAAC,OAAK6jC,GAAS7jC,EAAG+a,EAAQ,IAEd,GAAvBA,EAAQ2mB,YACV,KAEA,KAEJ,EAEMuC,GAAuB,SAAClpB,GAC5B,OAAOie,EACJngC,KAAI,SAACvB,GAAC,OAAKA,EAAEsoC,UAAU,IACvBl1B,SAASqQ,EAAQ6kB,aAClB,kBACE5hC,KAAK,OACL1F,GAAG,YACH+P,aAAc0S,EAAQslB,iBACtBx4B,SAAU,SAAC7H,GAAC,OAAK6jC,GAAS7jC,EAAG+a,EAAQ,EACrC7S,UAAW,SAAClI,GACV,IAAM7H,EAAM6H,EAAE7H,IACG,UAAUoP,KAAKpP,IACN,MAARA,GAEqB,cAARA,GAC7B6H,EAAEwH,gBAEN,IAGFs3B,GAAa/jB,GAAW,IAAM2jB,GAAiB3jB,EAAQslB,iBAE3D,EAEM6D,GAAoB,SAACnpB,GACzB,OAAOie,EACJngC,KAAI,SAACvB,GAAC,OAAKA,EAAEsoC,UAAU,IACvBl1B,SAASqQ,EAAQ6kB,aAClB,kBACE5hC,KAAK,OACL1F,GAAG,SACH+P,aAAc0S,EAAQ4mB,cACtB95B,SAAU,SAAC7H,GAAC,OAAK6jC,GAAS7jC,EAAG+a,EAAQ,EACrC7S,UAAW,SAAClI,GACV,IAAM7H,EAAM6H,EAAE7H,IACG,UAAUoP,KAAKpP,IACN,MAARA,GAEqB,cAARA,GAC7B6H,EAAEwH,gBAEN,IAGFs3B,GAAa/jB,GAAW,IAAM2jB,GAAiB3jB,EAAQ4mB,cAE3D,EAEMwC,GAAgB,SAACppB,GACrB,OAAOgoB,GAAY7B,SAAWnmB,EAAQmmB,SACpC,0BACE,mBAAQr5B,SAAU,SAAC7H,GAAC,OAAKkjC,GAAqBljC,EAAEmH,OAAOtF,MAAM,EAAC,SAC3DkZ,EAAQqpB,SAASvrC,KAAI,SAACuB,GACrB,IAAMjC,EAAMmD,OAAOwT,KAAK1U,GAAM,GACxB5B,EAAQ4B,EAAKjC,GACnB,OACE,mBAAkB0J,MAAO1J,EAAI,SAC1BK,GADUL,EAIjB,QAIJ4iB,EAAQspB,OAEZ,GAEAtqC,EAAAA,EAAAA,YAAU,WACR+oC,IAAoB,SAAC3iC,GAAI,OAAK64B,CAAY,GAC5C,GAAG,CAACA,IAEJ,IAAM6K,GAAW,SAAC7jC,EAAG+a,GACnB,IAAM3Q,EAAQy4B,GAAiByB,WAC7B,SAACC,GAAe,OAAKA,EAAgB3E,aAAe7kB,EAAQ6kB,UAAU,IAGlE4E,GAAuB,OAAO3B,IACpC2B,EAAwBp6B,IAAM,kBACzBo6B,EAAwBp6B,IAAM,IACjCi2B,iBACkB,cAAhBrgC,EAAEmH,OAAO7O,GACL0H,EAAEmH,OAAOtF,MACT2iC,EAAwBp6B,GAAOi2B,iBACrCsB,cACkB,WAAhB3hC,EAAEmH,OAAO7O,GACL0H,EAAEmH,OAAOtF,MACT2iC,EAAwBp6B,GAAOu3B,cACrC/+B,SACkB,YAAhB5C,EAAEmH,OAAO7O,GACL0H,EAAEmH,OAAOtF,MACT2iC,EAAwBp6B,GAAOxH,SACrC8+B,YACkB,aAAhB1hC,EAAEmH,OAAO7O,IACJksC,EAAwBp6B,GAAOs3B,YAChC8C,EAAwBp6B,GAAOs3B,YACrCnB,QACkB,aAAhBvgC,EAAEmH,OAAO7O,GACL0H,EAAEmH,OAAOtF,MACT2iC,EAAwBp6B,GAAOm2B,UAEvCuC,GAAoB0B,EACtB,EAEMC,GAAgB,SAAC1pB,GACrB,OAAOie,EAAangC,KAAI,SAACvB,GAAC,OAAKA,EAAEsoC,UAAU,IAAEl1B,SAASqQ,EAAQ6kB,aAC5D8D,GAAah5B,SAASrM,SAASjB,MAC/B,0BACE,mBAAQyK,SAAU,SAAC7H,GAAC,OAAK6jC,GAAS7jC,EAAG+a,EAAQ,EAAEziB,GAAG,WAAU,SACzDyiB,EAAQ+oB,UAAUjrC,KAAI,SAACuB,GACtB,IAAMjC,EAAMmD,OAAOwT,KAAK1U,GAAM,GACxB5B,EAAQ4B,EAAKjC,GACnB,OAAO,mBAAQ0J,MAAO1J,EAAI,SAAEK,GAC9B,QAGyB,kBAApBuiB,EAAQwlB,SACjBxlB,EAAQwlB,QAAQlsB,OAAOlK,OAAS,GAChC,WAAW5C,KAAKwT,EAAQwlB,UACxB,kBAAMtiC,MAAO8c,EAAQwlB,QAASjkC,UAAU,WAAU,UAC/C0iC,GAAajkB,EAAQwlB,SAAS,IAAExlB,EAAQwlB,WAG3C,EAEJ,EAKMmE,GAAW,SAAC3pB,EAAS3Q,GACzB,OACE,+BACE,0BACE,kBACE9N,UAAU,mBACV0B,KAAK,WACL1F,GAAIyiB,EAAQziB,GACZnB,MAAO,CAAEE,OAAQ,OAAQD,MAAO,OAAQ6B,WAAY,OACpDuQ,QAASwvB,EAAahvB,MACpB,SAAC5P,GAAI,OAAKA,EAAKwlC,aAAe7kB,EAAQ6kB,UAAU,IAElD/3B,SAAU,SAAC7H,GACT,IAAM2kC,GAAc,OAAOtB,IAC3BsB,EAAev6B,GAASpK,EAAEmH,OAAOqC,QACjC85B,GAAiBqB,GAEjB5pB,EAAQwlB,QAAUjlC,OAAOwT,KAAKiM,EAAQ+oB,UAAU,IAAI,GACpD,IAAMc,GAAY,OAAO5L,GACzB,GAAIh5B,EAAEmH,OAAOqC,QACXo7B,EAAavpC,KAAK0f,OACb,CACL,IAAM8pB,EAAiBD,EAAaN,WAClC,SAACC,GAAe,OACdA,EAAgB3E,aAAe7kB,EAAQ6kB,UAAU,KAE7B,IAApBiF,GACFD,EAAa9M,OAAO+M,EAAgB,EAExC,EAjCkB,SAACD,GAC7BhC,GAAgB,kBAAMgC,CAAY,GACpC,CAgCYE,CAAsBF,EACxB,EACAj9B,SAAUo9B,GAAchqB,QAKlC,EAEI,IAAkBtd,EAAAA,EAAAA,UAAS,IAAG,iBAA7BqJ,GAAI,MAAEk+B,GAAO,MA+EZC,GAAgB,SAAClqB,GACrB,OAAOie,EACJngC,KAAI,SAACvB,GAAC,OAAKA,EAAEsoC,UAAU,IACvBl1B,SAASqQ,EAAQ6kB,aAClB,qBACEtnC,GAAG,UACHnB,MAAO,CAAE+tC,OAAQ,QACjB78B,aAAc0S,EAAQnY,SACtBiF,SAAU,SAAC7H,GAAC,OAAK6jC,GAAS7jC,EAAG+a,EAAQ,KAGvC,gBAAK9c,MAAO8c,EAAQnY,SAAS,SAAEmY,EAAQnY,UAE3C,EAEM88B,GAAc,SAAC3kB,GACnB,OACE,cACEze,UAAU,UACV4B,QAAS,WACPggC,IAAe,GACfyB,GAAe5kB,EAAQ6kB,YACvBhC,GAAS,GACTE,EAAa/iB,EACf,EAAE,SACH,QAIL,EA0DM4kB,GAAiB,SAACE,GACtBvhC,IAAAA,IAEIf,GAAO,8DACkDsiC,IAE1DlhC,MAAK,SAACgH,GACLq4B,EAAkBr4B,EAAIhM,MACtBukC,IAAe,EACjB,IACCp/B,OAAM,SAACC,GAAK,OAAKU,QAAQC,IAAIX,EAAM,GACxC,EAEA,IAAwCtB,EAAAA,EAAAA,WAAS,GAAM,iBAAhD0nC,GAAY,MAAEC,GAAe,MACpC,IAA4C3nC,EAAAA,EAAAA,WAAS,GAAM,iBAApD4nC,GAAc,MAAEC,GAAiB,MAElCC,GAAoB,2CAAG,WAAOrE,GAAO,6EAKjB,OAJlB9Q,EAAOnmB,SAASoa,cAAc,MAC/BgM,KACH9yB,GAAO,2DAAuD2jC,GAChE9Q,EAAKoV,SAAW,cAChBF,IAAkB,GAAM,SAClBhnC,IAAAA,IACC8xB,EAAKC,MACT1xB,MAAK,SAACC,GACmB,MAApBA,EAAS0C,QACX8uB,EAAKlV,OAET,IACCpc,OAAM,SAACC,GACNU,QAAQV,MAAM,qBAAsBA,GACpCqmC,IAAgB,GAChBnmC,YAAW,WACTmmC,IAAgB,EAClB,GAAG,IACL,IAAG,KAAD,EACJE,IAAkB,GAAO,2CAC1B,gBArByB,sCAuD1B,SAASxF,GAAa9oC,GACpB,IAAQ2mC,EAAqC3mC,EAArC2mC,MAAOC,EAA8B5mC,EAA9B4mC,SAAUjkC,EAAoB3C,EAApB2C,KAAMomC,EAAc/oC,EAAd+oC,UAE/B,GAAwCtiC,EAAAA,EAAAA,WAAS,GAAM,eAAhDgoC,EAAY,KAAEC,EAAe,KAE9B1F,EAAY,2CAAG,WAAOC,EAAanQ,EAAc4G,GAAS,6EAI4B,OAHpFtG,EAAOnmB,SAASoa,cAAc,MAC/BgM,KACH9yB,GAAO,qDACuC0iC,EAAW,wBAAgBnQ,GAAe,kBAEjExxB,IAAAA,IAAU8xB,EAAKC,MAAM,KAAD,EAEnB,MAFV,OAED/uB,QACX8uB,EAAKlV,QACN,gDAEDwqB,GAAgB,GAChBzmC,YAAW,WACTymC,GAAgB,EAClB,GAAG,KACHjmC,QAAQV,MAAM,qBAAqB,EAAD,IAAS,yDAE9C,gBAlBiB,0CAoBlB,OACE,yBACGk/B,IACC,SAACpuB,EAAA,EAAM,CACLC,YAAa,WAEXouB,IAAe,EACjB,KAGF,UAAC,KAAM,CACLtgC,QAAS+/B,EACT5/B,SAAS,SACTF,KAAK,KACLC,QAAS,kBAAM8/B,GAAS,EAAM,EAAC,WAE/B,SAAC,KAAY,CAACzmC,MAAO,CAAEuQ,OAAQ,cAAe,UAC5C,SAAC,KAAW,WACV,iBAAMpL,UAAU,OAAM,SAAC,yBAG3B,UAAC,KAAU,YACT,iBAAKA,UAAU,YAAW,UACvBmpC,GACC,gBAAKnpC,UAAU,kBAAiB,UAC9B,6BACE,SAAC,OAAgB,IAAG,mCAIxB,IAEF,gBAAKA,UAAU,qBAAoB,UACjC,iBAAKA,UAAU,aAAY,WACzB,iBAAKA,UAAU,YAAW,WACxB,gBAAKA,UAAU,QAAO,UACpB,4BAAQ,eAEV,gBAAKA,UAAU,QAAO,SAAC,OACvB,gBAAKA,UAAU,QAAO,SAAEyjC,EAAU,GAAGn4B,kBAEvC,iBAAKtL,UAAU,YAAW,WACxB,gBAAKA,UAAU,QAAO,UACpB,4BAAQ,gBAEV,gBAAKA,UAAU,QAAO,SAAC,OACvB,gBAAKA,UAAU,QAAO,SAAE3C,EAAKumC,eAE/B,iBAAK5jC,UAAU,YAAW,WACxB,gBAAKA,UAAU,QAAO,UACpB,4BAAQ,wBAEV,gBAAKA,UAAU,QAAO,SAAC,OACvB,gBAAKA,UAAU,QAAO,SAAE3C,EAAKwmC,mBAE/B,iBAAK7jC,UAAU,YAAW,WACxB,gBAAKA,UAAU,QAAO,UACpB,4BAAQ,mBAEV,gBAAKA,UAAU,QAAO,SAAC,OACvB,gBAAKA,UAAU,QAAO,SAAE3C,EAAKgJ,kBAE/B,iBAAKrG,UAAU,YAAW,WACxB,gBAAKA,UAAU,QAAO,UACpB,4BAAQ,uBAEV,gBAAKA,UAAU,QAAO,SAAC,OACvB,gBAAKA,UAAU,QAAO,SACnBwiC,GAAanlC,GACZ,IACA+kC,GAAiB/kC,EAAKymC,gBAG5B,iBAAK9jC,UAAU,YAAW,WACxB,gBAAKA,UAAU,QAAO,UACpB,4BAAQ,wBAEV,gBAAKA,UAAU,QAAO,SAAC,OACvB,gBAAKA,UAAU,QAAO,SACnBwiC,GAAanlC,GACZ,IACA+kC,GAAiB/kC,EAAK0mC,wBAG5B,iBAAK/jC,UAAU,YAAW,WACxB,gBAAKA,UAAU,QAAO,UACpB,4BAAQ,eAEV,gBAAKA,UAAU,QAAO,SAAC,OACvB,gBAAKA,UAAU,QAAO,SAAE3C,EAAK2mC,YAE/B,iBAAKhkC,UAAU,YAAW,WACxB,gBAAKA,UAAU,QAAO,UACpB,4BAAQ,cAEV,gBAAKA,UAAU,QAAO,SAAC,OACvB,gBAAKA,UAAU,QAAO,SACH,MAAhB3C,EAAK4mC,SAAmC,IAAhB5mC,EAAK4mC,QAC1B5mC,EAAK8lC,SACL9lC,EAAK4mC,cAGb,iBAAKjkC,UAAU,YAAW,WACxB,gBAAKA,UAAU,QAAO,UACpB,4BAAQ,kBAEV,gBAAKA,UAAU,QAAO,SAAC,OACvB,gBAAKA,UAAU,iBAAgB,UAC7B,cACEA,UAAU,UACV4B,QAAS,SAAC8B,GAAC,OACTggC,EACErmC,EAAKsmC,YACLtmC,EAAKm2B,aACLn2B,EAAK+8B,UACN,EAEHz4B,MAAOtE,EAAK+8B,UAAU,SAErB/8B,EAAK+8B,kBAIZ,iBAAKp6B,UAAU,YAAW,WACxB,gBAAKA,UAAU,QAAO,UACpB,4BAAQ,yBAEV,gBAAKA,UAAU,QAAO,SAAC,OACvB,gBAAKA,UAAU,QAAO,SACnB3C,EAAK2lC,aAAa/oB,MAAM,KAAKgpB,KAAK,QAAQnkB,MAAM,GAAI,SAGzD,iBAAK9e,UAAU,YAAW,WACxB,gBAAKA,UAAU,QAAO,UACpB,4BAAQ,uBAEV,gBAAKA,UAAU,QAAO,SAAC,kBAK/B,gBACEnF,MAAO,CACLylB,gBAAiB,OACjBuY,OAAQ,iBACR6B,UAAW,OACXwJ,UAAW,QACXrpB,QAAS,UACTspB,UAAW,QAEbnkC,UAAU,WAAU,SAEnByhC,EACE5jC,QAAO,SAAC7C,GAAC,MAAgB,WAAXA,EAAEopC,KAAkB,IAClC7nC,KAAI,SAACg0B,GAAG,OACP,4BACE,8BACGA,EAAI6T,MAAM,OAAK7T,EAAI8T,UAAU,IAAE9T,EAAI+T,SAAS,MAAI,IAChDn8B,IAAOooB,EAAIgU,aAAal8B,OAAO,mBAElC,mBACA,iBAAKrI,UAAU,aAAY,WACzB,iBAAKA,UAAU,YAAW,WACxB,gBAAKA,UAAU,QAAO,UACpB,0BAAM,wBAER,gBAAKA,UAAU,QAAO,SAAC,OACvB,gBAAKA,UAAU,QAAO,SACnBwiC,GAAanlC,GACZ,IACA+kC,GAAiB7R,EAAIiU,uBAG3B,iBAAKxkC,UAAU,YAAW,WACxB,gBAAKA,UAAU,QAAO,UACpB,0BAAM,eAER,gBAAKA,UAAU,QAAO,SAAC,OACvB,gBAAKA,UAAU,QAAO,SACH,IAAhBuwB,EAAIjqB,UAAkC,MAAhBiqB,EAAIjqB,SACvB,KACAiqB,EAAIjqB,mBAIV,UAId,SAAC,KAAY,WACX,mBACEtG,UAAU,oCACV4B,QAAS,kBAAM0/B,GAAS,EAAM,EAAC,SAChC,gBAQb,CAEA,IA8BMmH,GAAgB,SAAChqB,GAAO,OAAMA,EAAQ4qB,MAAqB,EAiIjE,OACE,2BAAK,OAEFN,IACC,SAACx1B,EAAA,EAAM,CAACC,YAAa,kBAAMw1B,IAAkB,EAAM,IAEnD,GAED9nB,IACC,gBAAKlhB,UAAU,oBAAmB,UAChC,6BACE,SAAC,MAAO,IAAG,qCAKf,GAED6oC,IACC,gBAAK7oC,UAAU,kBAAiB,UAC9B,6BACE,SAAC,OAAgB,IAAG,mCAIxB,GAEQ,GAATiiC,IACC,iBAAKjiC,UAAU,wBAAuB,WACpC,UAAC,IAAS,CACRuF,MAAOlI,EACP2C,UAAU,sBACVyf,eAAa,EACbI,aAAW,EACXshB,aAAcA,EACdsD,YAAa,SAAC/gC,GAAC,OAAK09B,EAAgB19B,EAAErG,KAAK,EAC3CqnC,YAtLU,SAAChhC,GACnB,IAAMihC,EAAahiC,YAAW,WAC5Bk/B,IAAa,EACf,GAAG,KACH7/B,IAAAA,IAEIf,GAAO,2DAC+CyC,EAAErG,KAAKunC,QAAO,mBAAW9jC,GAAY,qBAAa4C,EAAErG,KAAK4oC,UAAS,sBAAc3oC,GAAS,qBAAaoG,EAAErG,KAAK8N,YAEpK9I,MAAK,SAACgH,GACLhM,EAAK4T,MAAK,SAAC6zB,GAAC,OAAKA,EAAEF,UAAYlhC,EAAErG,KAAKunC,OAAO,IAAEG,QAAU17B,EAAIhM,KAC7DwkC,IAAa,GACbmD,aAAaL,EACf,IACCniC,OAAM,SAACC,GAAK,OAAKU,QAAQC,IAAIX,EAAM,GACxC,EAwKUwiC,qBApKmB,SAAC5nC,GAC5B,OACE,iBAAK2C,UAAU,aAAY,WACzB,UAAC,IAAS,CACRuF,MAAOlI,EAAK0nC,QACZ/kC,UAAU,sBACV6f,aAAW,EACXqlB,UAAW,EAAE,WAGb,SAAC,IAAM,CACLrqC,MAAO,CAAE2lB,UAAW,UACpBrW,OAAQ,SAACsU,EAAS3Q,GAAK,OA5fOw7B,EA6fGjsC,EAAK0nC,SAzc5C,+BACE,gBAAK/kC,UAAU,kBAAiB,UAC9B,kBACEA,UAAU,mBACV0B,KAAK,WACL1F,GAAIstC,EACDzrC,QAAO,SAAC7C,GAAC,OAAKA,EAAEquC,MAAM,IACtB9sC,KAAI,SAACvB,GAAC,OAAKA,EAAEgB,EAAE,IACfoM,WACHvN,MAAO,CAAEE,OAAQ,OAAQD,MAAO,QAEhCoS,QACEq5B,GACG1oC,QAAO,SAACinC,GAAC,aAAKA,EAAE9oC,MAAqB,QAAnB,EAAKstC,EAAY,UAAE,aAAd,EAAgBttC,GAAE,IACzC6B,QAAO,SAACqQ,GAAC,OAAiB,GAAZA,EAAEm7B,MAAc,IAAEx7B,SACjCy7B,EAAYzrC,QAAO,SAAC0rC,GAAE,OAAkB,GAAbA,EAAGF,MAAc,IAAEx7B,QACS,IAAzDy7B,EAAYzrC,QAAO,SAAC0rC,GAAE,OAAkB,GAAbA,EAAGF,MAAc,IAAEx7B,OAEhDtC,SArEqB,SAAC7H,GAC5B,IAAM8lC,EAAY9lC,EAAEmH,OAAOqC,QAC3B+5B,GAAiBuC,GAEjB,IAAIxtC,EAAK0H,EAAEmH,OAAO7O,GAIlB,GAAIwtC,EAAW,CACb,IAAIC,EAAaH,EAAYzrC,QAAO,SAACC,GAAI,OAAKA,EAAKurC,MAAM,IAErDK,EAAKl/B,GAET,GAAyB,GAArBi/B,EAAW57B,OACb,IAAK,IAAIK,EAAI,EAAGA,EAAIu7B,EAAW57B,OAAQK,IACrCu7B,EAAWv7B,GAAG+1B,QAAUjlC,OAAOwT,KAAKi3B,EAAWv7B,GAAGs5B,UAAU,IAAI,GAChEkC,EAAG3qC,KAAK0qC,EAAWv7B,IACnBw6B,GAAQgB,GAIZ,IAAIC,EAAUD,EAAGntC,KAAI,SAACvB,GAAC,MAAK,GAAKA,EAAEgB,EAAE,IAErC,GAAIkrC,GAAQ,EACV,GAAIlrC,EAAGoS,SAAS,KAGd,IAFA,IAAIw7B,EAAU5tC,EAAGie,MAAM,KAEd/L,EAAI,EAAGA,EAAI07B,EAAQ/7B,OAAQK,IACxBP,SAASkK,eAAe+xB,EAAQ17B,IACtChB,QAAUy8B,EAAQv7B,SAAS,GAAKw7B,EAAQ17B,SAGxCP,SAASkK,eAAe7b,GAC1BkR,QAAUy8B,EAAQv7B,SAAS,GAAKpS,GAIxCsqC,GAAgB,kBAAM97B,EAAI,GAC5B,KAAO,CACL,IAAMq/B,EAAcnN,EAAa7+B,QAC/B,SAACC,GAAI,OAAMwrC,EAAYl7B,SAAStQ,EAAK,IAEvC4qC,GAAQmB,GACRvD,GAAgB,kBAAMuD,CAAW,GACnC,CACAlS,IAAS,SAAC9zB,GAAI,OAAKA,EAAO,CAAC,GAG7B,EAsBQwH,SAAUi+B,EAAYQ,MAAMrB,UAvEf,IAAiBa,CA6fgB,EAE9C32B,KAAM,SAAC8L,EAAS3Q,GAAK,OAAKs6B,GAAS3pB,EAAS3Q,EAAM,KAMpD,SAAC,IAAM,CACL4E,UAAQ,EACRE,MAAM,eACNzI,OAAO,eACPwI,KAAM,SAAC8L,GAAO,OACZ,gBAAKze,UAAU,WAAW2B,MAAO8c,EAAQolB,aAAa,SACnDplB,EAAQolB,cACL,KAGV,SAAC,IAAM,CACLnxB,UAAQ,EACRE,MAAM,eACNzI,OAAO,OACPwI,KAAM,SAAC8L,GAAO,OACZtW,IAAOsW,EAAQ0mB,cAAc98B,OAAO,cAAc,KAGtD,SAAC,IAAM,CAACqK,UAAQ,EAACE,MAAM,QAAQzI,OAAO,WACtC,SAAC,IAAM,CACLuI,UAAQ,EACRE,MAAM,cACNzI,OAAO,WACPtP,MAAO,CAAE2lB,UAAW,UACpB7N,KAAM80B,MAER,SAAC,IAAM,CACL/0B,UAAQ,EACRE,MAAM,WACNzI,OAAO,WACPtP,MAAO,CAAE2lB,UAAW,SACpB7N,KAAM,SAAC8L,GAAO,OACZ+jB,GAAa/jB,GAAW,IAAM2jB,GAAiB3jB,EAAQqlB,SAAS,KAGpE,SAAC,IAAM,CACLpxB,UAAQ,EACRE,MAAM,mBACNzI,OAAO,YACPtP,MAAO,CAAE2lB,UAAW,SACpB7N,KAAMg1B,MAER,SAAC,IAAM,CACLj1B,UAAQ,EACRE,MAAM,gBACN/X,MAAO,CAAE2lB,UAAW,SACpBrW,OAAO,SACPwI,KAAMi1B,MAER,SAAC,IAAM,CACLl1B,UAAQ,EACRE,MAAM,WACNzI,OAAO,WACPwI,KAAMkwB,MAER,SAAC,IAAM,CACLnwB,UAAQ,EACRE,MAAM,UACNzI,OAAO,UACPwI,KAAMw1B,MAER,SAAC,IAAM,CACLz1B,UAAQ,EACRE,MAAM,WACNzI,OAAO,WACPwI,KAAMg2B,MAER,SAAC,IAAM,CAACx+B,OAAO,UAAUwI,KAAMywB,QAER,IAAd,OAAVpyB,SAAU,IAAVA,QAAU,EAAVA,GAAYpC,WACX,iBAAK/T,MAAO,CAAEwE,QAAS,OAAQw5B,OAAQ,qBAAsB,WAC3D,mBACEh+B,MAAO,CAAEE,OAAQ,QACjBiF,UAAU,2BACV,cAAY,UACZ2B,MAAM,WACN0J,SAEE,IADAk7B,GAAiB1oC,QAAO,SAACinC,GAAC,OAAKA,EAAE9oC,KAAOqB,EAAKunC,OAAO,IAAE/2B,OAGxDjM,QAAS,kBAxeQ,SAACmoC,GAC5B,IACMC,EADKzD,GAAiB1oC,QAAO,SAACinC,GAAC,OAAKA,EAAE9oC,KAAO+tC,EAAMnF,OAAO,IACrCroC,KAAI,SAACkiB,GAAO,MAAM,CAC3C8kB,UAAW9kB,EAAQ6kB,WACnBmE,WAAmC,GAAvBhpB,EAAQ2mB,YAAuB,EAAI,EAC/CZ,gBAAiB5T,WAAWnS,EAAQslB,kBACpCkG,cAAerZ,WAAWnS,EAAQ4mB,eAClC0C,QAAShmC,SAAS0c,EAAQwlB,SAC1B39B,SAAUmY,EAAQnY,SAClB4jC,MAAOv2B,EACPixB,QAASnmB,EAAQziB,GAClB,IAEDgG,IAAAA,KAEIf,GAAO,0CACP+oC,EACA,CACEpU,QAAS,CAAE,eAAgB,sBAG9BvzB,MAAK,SAACgH,GACLwT,IAAW,GACXla,YAAW,WACTka,IAAW,EACb,GAAG,KACHypB,EAAgB,IAChBvjC,IACF,IACCP,OAAM,SAACC,GAAK,OAAKU,QAAQC,IAAIX,EAAM,GACxC,CA0c2B0nC,CAAqB9sC,EAAK,EAAC,UAE1C,SAAC,MAAM,OAET,mBACExC,MAAO,CAAEE,OAAQ,QACjBiF,UAAU,kCACV,cAAY,UACZ2B,MAAM,qBACN0J,SAEE,IADAk7B,GAAiB1oC,QAAO,SAACinC,GAAC,OAAKA,EAAE9oC,KAAOqB,EAAKunC,OAAO,IAAE/2B,OAGxDjM,QAAS,kBAlJC,SAACmoC,GACrB,IAAMF,EAAcnN,EAAa7+B,QAC/B,SAACC,GAAI,OAAKA,EAAK9B,KAAO+tC,EAAMnF,OAAO,IAErC0B,EAAgBuD,GAChBnB,GAAQmB,EACV,CA4I2BO,CAAc/sC,EAAK,EAAC,UAEnC,SAAC,MAAO,SAIZ,GAEW,KAGnB,EAwCUuiB,WAAS,EACTtS,KAAM,GACNg4B,kBAAmB,EACnBC,6BAA8B,CAAC,EAAG,GAAI,GAAI,IAC1CC,2BAA4B,CAC1BjJ,gBAAiB,oBACjBC,mBAAoB,UAEtBrc,0BAA0B,2CAC1BD,kBAAkB,6FAClBE,mBAAoB,CAAC,GAAI,GAAI,IAAI,WAEjC,SAAC,IAAM,CAACslB,SAv8BK,SAACjnB,GACtB,OAAOA,EAAQsmB,QAAQl3B,QAAU,CACnC,EAq8B4ChT,MAAO,CAAEC,MAAO,WAClD,SAAC,IAAM,CACL4X,UAAQ,EACRE,MAAM,YACNzI,OAAO,QACPwI,KAAM,SAAC8L,GAAO,OACZ,gBAAK9c,MAAO8c,EAAQknB,UAAU,SAAElnB,EAAQknB,WAAgB,KAG5D,SAAC,IAAM,CACLjzB,UAAQ,EACRE,MAAM,WACNzI,OAAO,WACPwI,KAAM,SAAC8L,GAAO,OACZ,gBAAKze,UAAU,WAAW2B,MAAO8c,EAAQynB,SAAS,SAC/CznB,EAAQynB,UACL,KAGV,SAAC,IAAM,CACLxzB,UAAQ,EACRE,MAAM,WACNzI,OAAO,kBACPwI,KAAM,SAAC8L,GAAO,OACZ,gBAAK9c,MAAO8c,EAAQ4nB,SAAS,SAAE5nB,EAAQ4nB,UAAe,KAG1D,SAAC,IAAM,CACL3zB,UAAQ,EACRE,MAAM,UACNzI,OAAO,iBACPwI,KAAMk1B,MAER,SAAC,IAAM,CACLn1B,UAAQ,EACRE,MAAM,MACNzI,OAAO,WACPtP,MAAO,CAAE2lB,UAAW,SACpB7N,KAAM,SAAC8L,GAAO,OACZ,gBACE9c,MACE6gC,GAAa/jB,GAAW,IAAM2jB,GAAiB3jB,EAAQ4rB,KACxD,SAEA7H,GAAa/jB,GAAW,IAAM2jB,GAAiB3jB,EAAQ4rB,MACpD,KAGV,SAAC,IAAM,CACL33B,UAAQ,EACRE,MAAM,eACNzI,OAAO,YACPtP,MAAO,CAAE2lB,UAAW,SACpB7N,KAAM,SAAC8L,GAAO,OACZ,gBACE9c,MACE6gC,GAAa/jB,GACb,IACA2jB,GAAiB3jB,EAAQ6rB,cAC1B,SAEA9H,GAAa/jB,GACZ,IACA2jB,GAAiB3jB,EAAQ6rB,eACvB,KAGV,SAAC,IAAM,CACL53B,UAAQ,EACRE,MAAM,YACNzI,OAAO,SACPtP,MAAO,CAAE2lB,UAAW,SACpB7N,KAAM,SAAC8L,GAAO,OACZ,gBACE9c,MACE6gC,GAAa/jB,GACb,IACA2jB,GAAiB3jB,EAAQ8rB,WAC1B,SAEA/H,GAAa/jB,GACZ,IACA2jB,GAAiB3jB,EAAQ8rB,YACvB,KAGV,SAAC,IAAM,CACL73B,UAAQ,EACRE,MAAM,YACNzI,OAAO,aACPwI,KAAM,SAAC8L,GAAO,OACZ,gBAAK9c,MAAOwG,IAAOsW,EAAQ+rB,WAAWniC,OAAO,eAAe,SACzDF,IAAOsW,EAAQ+rB,WAAWniC,OAAO,gBAC9B,KAGV,SAAC,IAAM,CACLuK,MAAM,GACNzI,OAAO,UACPtP,MAAO,CAAE2lB,UAAW,UACpB7N,KAzjBQ,SAAC8L,GAAa,IAAD,EAC/B,OACE,iCACE,SAAC,OAAgB,CACfld,KAAM,QACN1G,MAAO,CAAEwP,MAAO,UAAWe,OAAQ,UAAWq/B,YAAa,QAC3D7oC,QAAS,kBAAMqnC,GAAqBxqB,EAAQmmB,QAAQ,IAE3B,IAAd,QAAZ,EAAAuC,GAAU,UAAE,aAAZ,EAAcv4B,WACb,+BACwB,eAApB6P,EAAQ4nB,UACY,mBAApB5nB,EAAQ4nB,YACR,SAAC,MAAU,CACT9kC,KAAM,QACN1G,MAAO,CAAEuQ,OAAQ,UAAWq/B,YAAa,SACzCpgC,MAAM,SACNzI,QAAS,SAAC8B,GACRojC,IAAiB,GACjBJ,GAAejoB,GACfopB,GAAcppB,GACdmoB,GAAqB5nC,OAAOwT,KAAKiM,EAAQqpB,SAAS,IAAI,GACxD,MAKN,KAIR,OA+hBiC,IAAd,OAAV92B,SAAU,IAAVA,QAAU,EAAVA,GAAYpC,WACX,iBAAK/T,MAAO,CAAEwE,QAAS,OAAQw5B,OAAQ,qBAAsB,WAC3D,oBACE74B,UAAU,2BACV,cAAY,UACZ2B,MAAM,WACNC,QAloBM,WAClB,IAAMooC,EAAgB,CACpBpF,QAAS6B,GAAY7B,QACrB8F,YAAa3oC,SAAS4kC,KAExB3kC,IAAAA,KAEIf,GAAO,+CACP+oC,EACA,CACEpU,QAAS,CAAE,eAAgB,sBAG9BvzB,MAAK,SAACgH,GACLwT,IAAW,GACXla,YAAW,WACTka,IAAW,EACb,GAAG,KACH6pB,GAAe,CAAC,GAChB3jC,IACF,IACCP,OAAM,SAACC,GAAK,OAAKU,QAAQC,IAAIX,EAAM,GACxC,EA6mBc4I,SAAUw7B,GAAc,WAExB,SAAC,MAAM,IAAG,WAGZ,oBACE7mC,UAAU,2BACV,cAAY,UACZ2B,MAAM,qBACNC,QAjUa,WACzBklC,IAAiB,GACjBJ,GAAe,CAAC,EAClB,EA+Tcr7B,SAAUw7B,GAAc,WAExB,SAAC,MAAO,CAACtlC,KAAM,SAAU,eAK7B,MAIJ,GAED8/B,GACC,SAACmC,GAAY,CACXlC,SAAUA,EACVjkC,KAAMkkC,EACNF,MAAOA,EACPoC,UAAWpmC,IAGb,GAED0kC,KACC,SAACiE,GAAA,EAAqB,CACpB7D,YAAaA,GACbJ,SAAUA,GACVtjB,QAASkkB,KAGZrzB,GAAS,SAACiE,EAAA,EAAM,CAACC,YAAa,kBAAMjE,GAAU,EAAM,IAAO,KAGlE,EC1lCA,OA1IA,SAAyB7U,GACvB,IAAM4C,EAAY5C,EAAM4C,UAChB6pC,EAAczsC,EAAdysC,UAEFlmC,GADakmC,EAAUl2B,MAAK,SAACnT,GAAI,MAA2B,aAAtBA,EAAKiT,YAA2B,IAC5D7P,EAAAA,EAAAA,SAChB,GAAgCC,EAAAA,EAAAA,UAAS,wBAAuB,eAAzDwpC,EAAQ,KAAEC,EAAW,KAC5B,GAAsCzpC,EAAAA,EAAAA,UAAS,IAAG,eAA3CmK,EAAW,KAAE3G,EAAc,KAG5B7D,EAAeC,aAAaC,QAAQ,SAE1C,GAA4BG,EAAAA,EAAAA,UAAS,IAAG,eAAjCyP,EAAM,KAAEC,EAAS,MAIxBpT,EAAAA,EAAAA,YAAU,WACRqT,GACF,GAAG,IAEH,IAAMA,EAAW,WAGf9O,IAAM,CACJC,OAAQ,MACRC,IAAKjB,EAAO,iDAA6CH,KACxDuB,MAAK,SAACE,GACIA,EAAKlF,KAEXwB,SAAQ,SAACf,GAhBA,aAiBRA,EAAKiT,cACPF,EAAU,CAAC/S,GAEf,GACF,GACF,GAcAL,EAAAA,EAAAA,YAAU,WAXRuE,IAAM,CACJC,OAAQ,MACRC,IAAKjB,EAAO,oDAAgD3D,KAE3D+E,MAAK,SAAUC,GACd,IAAIC,EAAOD,EAASjF,KACpBsH,EAAepC,EACjB,IACCC,OAAM,SAAUF,GAAW,GAKhC,GAAG,IAEH,IAAM4O,GAAkBhO,EAAAA,EAAAA,QAAO,MACzBsQ,EAAc,WAClBtC,EAAgBzF,SAAWyF,EAAgBzF,QAAQgI,OACrD,EACA,OACE,4BACE,gBAAKzT,UAAU,YAAW,UACxB,iBAAKA,UAAU,YAAW,WACxB,gBAAKA,UAAU,WAAU,UACvB,wBAAKsL,OAEP,gBAAKtL,UAAU,WAAU,UACvB,wBAAI,gBAEN,gBAAKA,UAAU,qBAGnB,SAACoT,EAAA,EAAiB,CAChBxC,OAAQA,EACRyC,kBA1DkB,CAAC,WAAY,OAAQ,aAAc,eA4DvD,4BACE,iBAAKrT,UAAU,OAAM,WACnB,mBACEA,UACe,gBAAb2qC,EACI,qBACA,gBAEN/oC,QAAS,WACPgpC,EAAY,cACd,EAAE,SACH,iBAGD,mBACE5qC,UACe,kBAAb2qC,EACI,qBACA,gBAEN/oC,QAAS,WACPgpC,EAAY,gBACd,EAAE,SACH,mBAGD,mBACE5qC,UACe,yBAAb2qC,EACI,qBACA,gBAEN/oC,QAAS,WACPgpC,EAAY,uBACd,EAAE,SACH,4BAIW,gBAAbD,GACC,SAAC,GAAiB,CAACrtC,UAAWA,EAAWkW,YAAaA,IAEtD,GAEY,kBAAbm3B,GACC,SAAC,GAAmB,CAClBrtC,UAAWA,EACXkW,YAAaA,IAGf,GAEY,yBAAbm3B,GACC,SAAC,GAA0B,CACzBrtC,UAAWA,EACXkW,YAAaA,EACb2zB,UAAWA,IAGb,QAKV,E,YCyOA,OAhXA,SAA2BzsC,GACzB,IAAQ4C,EAAc5C,EAAd4C,UACR,GAAwB6D,EAAAA,EAAAA,UAAS,IAAG,eAA7B9D,EAAI,KAAEqqB,EAAO,KACpB,GAAgDvmB,EAAAA,EAAAA,UAAS,IAAG,eAArD0pC,EAAgB,KAAEC,EAAmB,KAC5C,GAA8B3pC,EAAAA,EAAAA,UAAS,IAAG,eAAnC0a,EAAO,KAAEC,EAAU,KAC1B,GAA8B3a,EAAAA,EAAAA,UAAS,IAAG,eAAnC9B,EAAO,KAAE0rC,EAAU,KAC1B,GAA8C5pC,EAAAA,EAAAA,WAAS,GAAM,eAAtDq2B,EAAe,KAAE4G,EAAkB,KAC1C,GAA0Bj9B,EAAAA,EAAAA,UAAS,YAAW,eAAvCijC,EAAK,KAAE4G,EAAQ,KACtB,GAA0C7pC,EAAAA,EAAAA,WAAS,GAAM,eAAlD8pC,EAAa,KAAEC,EAAgB,KACtC,GAAkC/pC,EAAAA,EAAAA,WAAS,GAAM,eAA1CgqC,EAAS,KAAEC,EAAY,KAC9B,GAA4CjqC,EAAAA,EAAAA,WAAS,GAAM,eAApD85B,EAAc,KAAEp6B,EAAiB,KAElCI,EAAUC,EAAAA,EAAAA,QAEV6B,EAAU,WACdf,IAAAA,IAEIf,EAAO,0DAAsD3D,IAE9D+E,MAAK,SAACgH,GAeL,IAdA,IAAM4I,EAAU5I,EAAIhM,KAcX6Q,EAAI,EAAGA,EAAI+D,EAAQpE,OAAQK,IAClC+D,EAAQ/D,GAAY,QACO,MAAzB+D,EAAQ/D,GAAY,QAChB,GACA/F,IAAO8J,EAAQ/D,GAAY,SAAG7F,OAAO,eAC3C4J,EAAQ/D,GAAU,MACO,MAAvB+D,EAAQ/D,GAAU,MACd,GACA/F,IAAO8J,EAAQ/D,GAAU,OAAG7F,OAAO,eAE3Cqf,EAvBmB,CACjB,CACE2jB,gBAAiB,cACjBC,SAAU,WACVC,SAAU,YACVC,QAAS,YACTC,MAAO,UACPC,aAAc,gBACdC,eAAgB,kBAChBC,cAAe,iBACftlC,SAAU,aAaK6L,OAAOF,IAC1B64B,EAAoB74B,EACtB,GACJ,EAaM45B,EAAgB,SAACnoC,GAErB,GADAsnC,EAAStnC,EAAEmH,OAAOtF,OACI,GAAlB01B,EACFiQ,GAAiB,OACZ,CACLA,GAAiB,GACjB,IAAIY,EAAQ,GAEZ9sC,OAAOwT,KAAKnV,GAAMwB,SAAQ,SAAC7D,GACzB,GAAsB,iBAAXqC,EAAKrC,IAAuB,aAALA,EAAkB,CAClD,IAAMkE,EAAM,CAAC,EAEbA,EAAQ,GAAIlE,EACZkE,EAAc,SAAI7B,EAAKrC,GAAGoT,SAAS,CAAC,KAAM,KAAO,KAAO/Q,EAAKrC,GAC7DkE,EAAe,UAAsB,YAAlBwE,EAAEmH,OAAOtF,MAAsB,IAAM,IACxDumC,EAAM/sC,KAAKG,EACb,CACF,IAEA8C,IAAM,CACJC,OAAQ,OACRC,IAAKjB,EAAO,kCAEZ5D,KAAMyuC,IACLzpC,MAAK,SAAUgH,GACLA,EAAIhM,KACf0F,IACAq7B,GAAmB,GACnBgN,GAAa,GAEbzoC,YAAW,WACTy7B,GAAmB,GACnBgN,GAAa,EAEf,GAAG,IACL,GAEF,CACF,GACA3tC,EAAAA,EAAAA,YAAU,WACRsF,IACA+nC,IACA/uB,GACF,GAAG,IACH,IAAMA,EAAiB,WACrB/Z,IAAM,CACJC,OAAQ,MACRC,IAAKjB,EAAO,oDAAgD3D,KAC3D+E,MAAK,SAAUC,GAChB,IAAIC,EAAOD,EAASjF,KACpBye,EAAWvZ,EACb,GACF,EAqEMglC,GAAW,SAAC7jC,EAAG+a,GACnBiJ,GAAQ,SAAC7jB,GAAI,yBAAWA,GAAI,cAAG4a,EAAQziB,GAAK0H,EAAEmH,OAAOtF,OAAK,GAC5D,EACA,OACE,2BACGiyB,GAA4B,YAAT4M,GAClB,gBAAKpkC,UAAU,oBAAmB,UAChC,iBAAMA,UAAU,SAAQ,SAAC,yCAG3B,GAEDmrC,GAAsB,YAAT/G,GACZ,gBAAKpkC,UAAU,oBAAmB,UAChC,iBAAMA,UAAU,SAAQ,SAAC,qCAG3B,GASDirC,GACC,gBAAKjrC,UAAU,kBAAiB,UAC9B,kBAAMA,UAAU,QAAO,WACrB,SAAC,MAAa,IAAG,+CAKrB,IAEF,iBAAKA,UAAU,YAAW,WACxB,gBAAKA,UAAU,WAAU,UACvB,wBAAK6b,OAEP,gBAAK7b,UAAU,WAAU,UACvB,wBAAI,0BAEN,gBAAKA,UAAU,mBAGjB,mBAEA,gBAAKA,UAAU,aAAY,UACzB,UAAC,IAAS,CACRA,UAAU,wBACVuF,MAAOslC,EACPjrB,WAAS,EACT2G,UAAW0U,EACX8Q,WAAW,EACXz+B,KAAM,GACNmS,eAAa,EACbusB,YAAU,EACV1G,kBAAmB,EACnBC,6BAA8B,CAAC,EAAG,GAAI,GAAI,IAC1CC,2BAA4B,CAC1BjJ,gBAAiB,oBACjBC,mBAAoB,UAEtB7V,iBAAiB,SACjBH,kBAAmB,SAAC9iB,GAAC,OApMR,SAACA,GACpB7C,EAAkB6C,EAAE6B,OAEpB,IAAI0mC,EAAevoC,EAAE6B,MAAMhJ,KAAI,SAACvB,GAE9B,OADA0sB,GAAQ,SAAC7jB,GAAI,yBAAWA,GAAI,cAAG7I,EAAEgB,GAAK,IAAE,IACjChB,EAAEgB,EACX,IAEA+uC,EAAWkB,EACb,CA2LkCrhC,CAAalH,EAAE,EAAC,WAE1C,SAAC,IACC,CACAwoC,YAAa,SACbrxC,MAAO,CAAE2lB,UAAW,UACpBic,eAA+B,OAAhBoO,QAAgB,IAAhBA,OAAgB,EAAhBA,EAAkBh9B,QAAS,EAAI,WAAa,MAE7D,SAAC,IAAM,CACL+E,MAAM,aACNzI,OAAO,eACPwI,KAlFQ,SAAC8L,GACjB,OACE,iBAAM9c,MAAO8c,EAAQ4sB,gBAAgB,SAAE5sB,EAAQ4sB,iBAEnD,EA+EUa,YAAa,YAEf,SAAC,IAAM,CACLt5B,MAAM,WACNzI,OAAO,aACPwI,KAtJgB,SAAC8L,GACzB,OACE,8BACgC,MAA7BA,EAAQ0tB,mBACP,iBACEnsC,UAAU,6BACVnF,MAAO,CAAEwP,MAAO,OAChB1I,MAAM,gBAAe,SAEpB8c,EAAQ6sB,YAGX,iBACEtrC,UAAU,6BACVnF,MAAO,CAAEwP,MAAO,SAChB1I,MAAO8c,EAAQ6sB,SAAS,SAEvB7sB,EAAQ6sB,YAKnB,EAiIUY,YAAa,YAEf,SAAC,IAAM,CACLt5B,MAAM,YACNzI,OAAO,aACPwI,KArIgB,SAAC8L,GACzB,OACE,+BACE,iBAAM9c,MAAO8c,EAAQ8sB,SAAS,SAAE9sB,EAAQ8sB,YAG9C,EAgIUW,YAAa,YAEf,SAAC,IAAM,CACLt5B,MAAM,YACNzI,OAAO,aACPwI,KApIgB,SAAC8L,GACzB,OAAO,iBAAM9c,MAAO8c,EAAQ+sB,QAAQ,SAAE/sB,EAAQ+sB,SAChD,EAmIUU,YAAa,YAEf,SAAC,IAAM,CACLt5B,MAAM,UACNzI,OAAO,WACPwI,KAvIc,SAAC8L,GACvB,OAAO,iBAAM9c,MAAO8c,EAAQgtB,MAAM,SAAEhtB,EAAQgtB,OAC9C,EAsIUS,YAAa,YAEf,SAAC,IAAM,CACLt5B,MAAM,gBACNzI,OAAO,iBACPwI,KA1Ic,SAAC8L,GACvB,OAAO,gBAAK9c,MAAO8c,EAAQitB,aAAa,SAAEjtB,EAAQitB,cACpD,EAyIUQ,YAAa,SACbrxC,MAAO,CAAE2lB,UAAW,WAEtB,SAAC,IAAM,CACL5N,MAAM,kBACNzI,OAAO,mBACPwI,KA9IkB,SAAC8L,GAC3B,OAAO,iBAAM9c,MAAO8c,EAAQktB,eAAe,SAAEltB,EAAQktB,gBACvD,EA6IUO,YAAa,YAEf,SAAC,IAAM,CACLt5B,MAAM,iBACNzI,OAAO,kBACPwI,KAjJe,SAAC8L,GACxB,OAAO,iBAAM9c,MAAO8c,EAAQmtB,cAAc,SAAEntB,EAAQmtB,eACtD,EAgJUM,YAAa,YAEf,SAAC,IAAM,CACLt5B,MAAM,WACN5W,GAAG,WACHmO,OAAO,YACPwI,KArJgB,SAAC8L,GACzB,OACE,8BACGpf,EAAQ+O,SAASqQ,EAAQziB,KACxB,kBACE0F,KAAK,OACL1F,GAAG,WACHuP,SAAU,SAAC7H,GACT6jC,GAAS7jC,EAAG+a,EACd,KAGF,iBAAM9c,MAAO8c,EAAQnY,SAAS,SAAEmY,EAAQnY,YAIhD,EAsIU4lC,YAAa,iBAInB,iBAAKv2B,MAAM,0DAAyD,UACpC,KAAb,OAAhBk1B,QAAgB,IAAhBA,OAAgB,EAAhBA,EAAkBh9B,SACjB,oBACEnM,KAAK,SACL6D,MAAO,WACP8F,SAAS,WACTrL,UAAU,kBAAiB,UAE1B,KACD,SAAC,MAAM,IAAG,cAIZ,oBACE0B,KAAK,SACL6D,MAAO,WACP3D,QAAS,SAAC8B,GACRmoC,EAAcnoC,EAChB,EACA1D,UAAU,kBAAiB,UAE1B,KACD,SAAC,MAAM,IAAG,aAIgB,KAAb,OAAhB6qC,QAAgB,IAAhBA,OAAgB,EAAhBA,EAAkBh9B,SACjB,oBACEnM,KAAK,SACL1B,UAAU,oBACVuF,MAAO,WACP8F,UAAQ,EACRxQ,MAAO,CAAEuQ,OAAQ,iBAAkB,UAElC,KACD,SAACghC,GAAA,EAAK,IAAG,aAIX,oBACE1qC,KAAK,SACL1B,UAAU,oBACV4B,QAAS,SAAC8B,GACRmoC,EAAcnoC,EAChB,EACA6B,MAAO,WAAW,UAEjB,KACD,SAAC6mC,GAAA,EAAK,IAAG,iBAOrB,E,8BC3WAnc,EAAQ,OAsQR,OApQA,SAA+Bv1B,GAC7B,IACE2C,EAaE3C,EAbF2C,KACAiQ,EAYE5S,EAZF4S,KAKAiF,GAOE7X,EAXF+X,IAWE/X,EAVF2xC,gBAUE3xC,EATF+V,YASE/V,EARFiW,kBAQEjW,EAPF6X,gBACAhC,EAME7V,EANF6V,WACAC,EAKE9V,EALF8V,cAMF,GADI9V,EAJFsY,WAIEtY,EAHF4xC,cAGE5xC,EAFF6xC,kBAEE7xC,EADF8xC,sBAE8BrrC,EAAAA,EAAAA,UAAS,KAAG,eAArCg6B,EAAQ,KAAEC,EAAW,KAC5B,GAAgCj6B,EAAAA,EAAAA,UAAS,IAAG,eAArCk6B,EAAQ,KAAEC,EAAW,KAC5B,GAA0Cn6B,EAAAA,EAAAA,UAAS,IAAG,eAAhCo6B,GAAF,KAAkB,MAChCld,GAAKnb,EAAAA,EAAAA,QAAO,OAClBzF,EAAAA,EAAAA,YAAU,WACR29B,EAAYvoB,KAAKC,MAAMD,KAAKE,UAAU1V,IACxC,GAAG,CAACA,KAEJI,EAAAA,EAAAA,YAAU,WACR,GAAI09B,EAASttB,OAAS,EAAG,CACvB2C,EAAc2qB,EAAS,IACvBG,EAAYH,EAASK,OAAO,IAE5B,IAAIC,EAAM,GACNC,EAASP,EAAS,GAEtBn8B,OAAOwT,KAAKkpB,GAAQ78B,SAAQ,SAAC7D,GACtB,YAALA,GAEEygC,EAAI18B,KAAK,CAAE4C,MAAO+5B,EAAO1gC,GAAIyrB,QAASzrB,GAC1C,IAEAugC,EAAiBE,EACnB,CACF,GAAG,CAACN,IAEJ,IAAMQ,EAAc,CAClBC,SAAU,CAAEr2B,MAAO,KAAM2d,UAAWC,EAAAA,GAAAA,WAGtC,GAAgChiB,EAAAA,EAAAA,UAAS,CACvC8hB,OAAQ0Y,EAAsB,WAC9B,eAFeG,GAAF,KAAa,OAI5Br+B,EAAAA,EAAAA,YAAU,WACRq+B,EAAY,CACV7Y,OAAQ0Y,EAAsB,UAElC,GAAG,CAACprB,IACJ,OAAoDpP,EAAAA,EAAAA,UAAS,IAAG,eA+KhE,OA/KyB,KAAuB,MAgL9C,yBACGnC,OAAOwT,KAAKjC,GAAY1C,OAAS,IAChC,SAAC,IAGC,CACAtI,MAAO81B,EAEP5b,eAAa,EACbnS,KAAMA,EACNmZ,QAAQ,KAERE,iBAAiB,SAEjBjH,aAAa,oBACbnc,IAAK,SAACkpC,GACJpuB,EAAG5S,QAAUghC,CACf,EACAzsC,UAAU,uCAAsC,SAI/CuS,KAKX,EC2hCA,OApxCA,SAA0B7X,GAAQ,IAAD,IAC/B,GAAgDyG,EAAAA,EAAAA,UAAS,IAAG,eAArDurC,EAAgB,KAAEC,EAAmB,KAC5C,GAAsBxrC,EAAAA,EAAAA,UAAS,GAAE,eAA1BtF,EAAG,KAAE+wC,EAAM,KACVtvC,EAAyB5C,EAAzB4C,UAAW6pC,EAAczsC,EAAdysC,UACbn2B,EAAam2B,EAAUl2B,MAC3B,SAACnT,GAAI,MAA2B,uBAAtBA,EAAKiT,YAAqC,IAEtD5N,QAAQC,IAAI+jC,EAAU,GAAGv4B,UACzB,IAAM3N,EAAUC,EAAAA,EAAAA,QAChB,GAAwBC,EAAAA,EAAAA,UAAS,IAAG,eAA7B9D,EAAI,KAAEqqB,EAAO,KACpB,GAA8BvmB,EAAAA,EAAAA,YAAU,eAAjCo0B,EAAO,KAAEC,EAAU,KAC1B,GAA0Br0B,EAAAA,EAAAA,YAAU,eAA7B0rC,EAAK,KAAEC,EAAQ,KACtB,GAAgC3rC,EAAAA,EAAAA,UAAS,IAAG,eAArC+kC,EAAQ,KAAE6G,EAAW,KAC5B,GAAkC5rC,EAAAA,EAAAA,UAAS,IAAG,eAC9C,GADgB,KAAc,MACMA,EAAAA,EAAAA,UAAS,KAAG,eAAzCoP,GAAU,KAAEC,GAAa,KAChC,IAA4BrP,EAAAA,EAAAA,UAAS,IAAG,iBAAzB6rC,IAAF,MAAW,OAClBzpC,IAAML,EAAAA,EAAAA,QAAO,IACnB,IAAkD/B,EAAAA,EAAAA,WAAS,GAAM,iBAA1DwE,GAAiB,MAAEC,GAAoB,MAC9C,IAAsCzE,EAAAA,EAAAA,UAAS,IAAG,iBAA3CoD,GAAW,MAAE+L,GAAc,MAClC,IAAoCnP,EAAAA,EAAAA,WAAS,GAAM,iBAA5C6f,GAAU,MAAEC,GAAa,MAChC,IAA0C9f,EAAAA,EAAAA,WAAS,GAAM,iBAAlD2J,GAAa,MAAEC,GAAgB,MACtC,IAA4C5J,EAAAA,EAAAA,YAAU,iBAA/C8rC,GAAc,MAAEC,GAAiB,MACxC,IAAwC/rC,EAAAA,EAAAA,YAAU,iBAA3CgsC,GAAY,MAAE1O,GAAe,MACpC,IAAgCt9B,EAAAA,EAAAA,UAAS,IAAG,iBAArCuS,GAAQ,MAAEgrB,GAAW,MAEtB59B,GAAeC,aAAaC,QAAQ,SACpCwD,GAAiBzD,aAAaC,QAAQ,WAC5C,IAAwCG,EAAAA,EAAAA,UAAS,IAAG,iBAA7C4+B,GAAY,MAAEC,GAAe,MACpC,IAAgC7+B,EAAAA,EAAAA,UAAS,IAAG,iBAA3BisC,IAAF,MAAa,OAE5B,IAAwCjsC,EAAAA,EAAAA,UAAS,IAAG,iBACpD,IADmB,MAAiB,OACQA,EAAAA,EAAAA,WAAS,IAAM,iBAApDksC,GAAc,MAAEC,GAAiB,MACxC,IAAsCnsC,EAAAA,EAAAA,WAAS,GAAM,iBAA9CqO,GAAW,MAAEC,GAAc,MAClC,IAA0BtO,EAAAA,EAAAA,UAAS,IAAG,iBAA/B43B,GAAK,MAAEC,GAAQ,MACtB,IAAkC73B,EAAAA,EAAAA,UAAS,IAAG,iBAAvCiO,GAAS,MAAEC,GAAY,MAC9B,IAAsClO,EAAAA,EAAAA,UAAS,IAAG,iBAA9BosC,IAAF,MAAgB,OAClC,IAA4CpsC,EAAAA,EAAAA,WAAS,GAAM,iBAApDqsC,GAAc,MAAEC,GAAiB,MACxC,IAAsCtsC,EAAAA,EAAAA,WAAS,GAAM,iBAA9CusC,GAAW,MAAEC,GAAc,MAIlC,IAA4BxsC,EAAAA,EAAAA,UAAS,IAAG,iBAAjCyP,GAAM,MAAEC,GAAS,OASxBpT,EAAAA,EAAAA,YAAU,WACRqT,IACF,GAAG,IAEH,IAAMA,GAAW,WAGf9O,IAAM,CACJC,OAAQ,MACRC,IAAKjB,EAAO,iDAA6CH,MACxDuB,MAAK,SAACE,GACIA,EAAKlF,KAEXwB,SAAQ,SAACf,GArBA,aAsBRA,EAAKiT,cACPF,GAAU,CAAC/S,GAEf,GACF,GACF,GAYAL,EAAAA,EAAAA,YAAU,WACRmwC,IACF,GAAG,IAEH,IAAMA,GAAsB,WAC1B5rC,IAAAA,IAEIf,EAAO,6DACiD3D,IAEzD+E,MAAK,SAACwrC,GACL,IAAIxwC,EAAOwwC,EAASxwC,KACpBsvC,EAAoBtvC,EACtB,IACCmF,OAAM,SAACC,GAAK,OAAKU,QAAQC,IAAIX,EAAM,GACxC,EAEMihB,GAAe,CACnBpmB,UAAWA,EACXwwC,MAAO,GACPC,KAAM,GACNjI,OAAQ,GACRkI,aAAc,GACdC,gBAAiB,GACjBC,SAAU,GACVC,YAAa,GACb5pB,eAAgB,aAChB6pB,SAAU,IACVx8B,UAAWpN,GACX6pC,YAAavtC,GACbwtC,cAAe,IAGjB,IAAgCntC,EAAAA,EAAAA,UAASuiB,IAAa,iBAA/Chd,GAAQ,MAAE1D,GAAW,MAEtBD,GAAU,WACdf,IAAAA,IAEIf,EAAO,sEAC0D3D,IAElE+E,MAAK,SAACgH,GACL,IAAM4I,EAAU5I,EAAIhM,KAapBqqB,EAZiB,CACf,CACExb,UAAW,gBACXqiC,SAAU,gBACV/yB,aAAc,eACd8jB,WAAY,cACZkP,OAAQ,aACR/C,MAAO,WACP3F,OAAQ,SACR2I,UAAW,cAGIt8B,OAAOF,IAC1B+mB,GAAS/mB,EACX,IACCzP,OAAM,SAACC,GACNU,QAAQC,IAAI,UAAYX,EAC1B,GACJ,EAEIqlB,GAAYna,SAASoa,cAAc,OACvCD,GAAUE,UAA0B,QAAjB,EAAGzjB,GAAY,UAAE,aAAd,EAAgBmqC,SAEtC,IAAMC,GAAW,2CAAG,oGACZ3sC,IAAM,CACVC,OAAQ,MACRC,IAAKjB,EAAO,qCAEXoB,MAAK,SAACgH,GACL,IAAIoO,EAASpO,EAAIhM,KAEjB0vC,EAAYt1B,EACd,IACCjV,OAAM,SAACC,GACNU,QAAQC,IAAI,UAAYX,EAC1B,IAAG,KAAD,sCACL,kBAbgB,mCAeXmI,GAAe,SAAClH,GACpB,MAA4BA,EAAEmH,OAAtB7O,EAAE,EAAFA,GAAUuJ,GAAF,EAAJ/B,KAAW,EAAL+B,OAElBvC,IAAY,SAACa,GACX,OAAO,kBAAKA,GAAI,cAAG7H,EAAKuJ,GAC1B,GACF,EAoCMqpC,GAAe,WACnB5sC,IAAM,CACJC,OAAQ,MACRC,IACEjB,EAAO,8DACgD3D,KAExD+E,MAAK,SAAUC,GACd,IAAIC,EAAOD,EAASjF,KACpBohC,GAAgBl8B,EAClB,IACCC,OAAM,SAAUC,GACfU,QAAQC,IAAIX,EACd,GACJ,GACAhF,EAAAA,EAAAA,YAAU,WACRmxC,IACF,GAAG,CAACtxC,IAEJ,IAAMuxC,GAAc,SAACxxC,GAInB,OAHA+vC,GAAgB,OAAJ/vC,QAAI,IAAJA,OAAI,EAAJA,EAAMsmC,aAElB4J,GAAelwC,EAAKyxC,gBAElB,gBACE9uC,UAAU,WACV2K,MAAM,OACN,cAAY,UACZhJ,MAAOwG,IAAO9K,EAAKme,cAAcnT,OAAO,0BAA0B,SAE5C,MAArBhL,EAAKme,cAEmB,IAArBne,EAAKme,aADL,GAGArT,IAAO9K,EAAKme,cAAcnT,OAAO,2BAG3C,EAEM0mC,GAAe,SAAC1xC,GACpB,OACE,gBACE2C,UAAU,WACV2K,MAAM,OACN,cAAY,UACZhJ,MAAOtE,EAAK6O,UAAU,SAErB7O,EAAK6O,WAGZ,EACM8iC,GAAa,SAAC3xC,GAClB,OACE,gBACE2C,UAAU,WACV2K,MAAM,OACN,cAAY,UACZhJ,MAAOtE,EAAKiiC,WAAW,SAEtBjiC,EAAKiiC,YAGZ,EACMxb,GAAW,SAACzmB,GAChB,OACE,gBACE2C,UAAU,WACV2K,MAAM,OACN,cAAY,UACZhJ,MAAOwG,IAAO9K,EAAKmxC,QAAQnmC,OAAO,eAAe,SAEjC,MAAfhL,EAAKmxC,QAEa,IAAfnxC,EAAKmxC,OADL,GAGArmC,IAAO9K,EAAKmxC,QAAQnmC,OAAO,gBAGrC,EACM0b,GAAS,SAAC1mB,GACd,OACE,gBACE2C,UAAU,WACV2K,MAAM,OACN,cAAY,UACZhJ,MAAOwG,IAAO9K,EAAKouC,OAAOpjC,OAAO,eAAe,SAEjC,MAAdhL,EAAKouC,OAEY,IAAdpuC,EAAKouC,MADL,GAGAtjC,IAAO9K,EAAKouC,OAAOpjC,OAAO,gBAGpC,EACM4mC,GAAS,SAAC5xC,GACd,OACE,gBACE2C,UAAU,WACV2K,MAAM,OACN,cAAY,UACZhJ,MACkB,OAAhBtE,EAAKyoC,OACD,GACAhe,GAAUE,UAAY,IAAM3qB,EAAKyoC,OAAOnd,eAAe,SAC5D,UAED,0BACmB,OAAhBtrB,EAAKyoC,OACF,GACAhe,GAAUE,UAAY,IAAM3qB,EAAKyoC,OAAOnd,eAAe,YAInE,EACMumB,GAAW,SAAC7xC,GAChB,OACE,gBACE2C,UAAU,WACV2K,MAAM,OACN,cAAY,UACZhJ,MAAOtE,EAAKoxC,UAAU,SAErBpxC,EAAKoxC,WAGZ,EACMU,GAAe,SAAC9xC,EAAM07B,GAC1B,OACE,gBACE/4B,UAAU,WACV2K,MAAM,OACN,cAAY,UACZhJ,MAAOtE,EAAKkxC,SACZ1zC,MAAO,CAAEuQ,OAAQ,UAAWf,MAAO,WACnCzI,QAAS,WAxKb6N,IAAe,GA0KTupB,GAAS37B,GACTowC,IAAkB,GAClBE,IAAe,EACjB,EAAE,SAEDtwC,EAAKkxC,UAGZ,EAEMh8B,GAAwC,QAA1B,EAAGvT,OAAOwT,KAAKjC,WAAW,aAAvB,EAAyBhU,KAAI,SAACkW,EAAKvE,GACxD,OACE,SAAC,IAAM,CACLwE,UAAQ,EAERC,KACS,gBAAPF,EACIo8B,GACO,aAAPp8B,EACAs8B,GACO,YAAPt8B,EACA08B,GACO,cAAP18B,EACAu8B,GACO,UAAPv8B,EACAqR,GACO,SAAPrR,EACAsR,GACO,UAAPtR,EACAw8B,GACO,aAAPx8B,EACAy8B,GACA,GAENt8B,MAAOH,EACPtI,OAAQoG,GAAWkC,IArBdA,EAwBX,IA+HA,SAASkmB,GAAaj+B,GAAQ,IAAD,EAEzBq+B,EASEr+B,EATFq+B,MACAvpB,EAQE9U,EARF8U,YACAC,EAOE/U,EAPF+U,eACAL,EAME1U,EANF0U,UACAo+B,EAKE9yC,EALF8yC,eACAC,EAIE/yC,EAJF+yC,kBACAC,EAGEhzC,EAHFgzC,YACAC,EAEEjzC,EAFFizC,eACAjB,EACEhyC,EADFgyC,iBAEF,GAAoCvrC,EAAAA,EAAAA,UAAS,IAAG,eAAzCoP,EAAU,KAAEC,EAAa,KAChC,GAAwBrP,EAAAA,EAAAA,UAAS,IAAG,eAA7B9D,EAAI,KAAEqqB,EAAO,KACpB,GAAsCvmB,EAAAA,EAAAA,UAAS,IAAG,eAA3CiuC,EAAW,KAAEC,EAAc,KAClC,GAA8BluC,EAAAA,EAAAA,UAAS,IAAG,eAAnCmuC,EAAO,KAAEC,EAAU,KAC1B,GAA0CpuC,EAAAA,EAAAA,UAAS,IAAG,eAA/CquC,EAAa,KAAEC,EAAgB,KACtC,GAA8BtuC,EAAAA,EAAAA,UAAS,IAAG,eAAnCuuC,EAAO,KAAEC,EAAU,KAC1B,GAA0CxuC,EAAAA,EAAAA,WAAS,GAAM,eAAlD2f,EAAa,KAAEC,EAAgB,KACtC,GAAsB5f,EAAAA,EAAAA,UAAS,GAAE,eAA1BtF,EAAG,KAAE+wC,EAAM,KAElB,IAAgCzrC,EAAAA,EAAAA,UAAS,IAAG,iBAArCyuC,GAAQ,MAAEC,GAAW,OAwC5BpyC,EAAAA,EAAAA,YAAU,WACRiqB,EAAQqR,EAAM4K,aACd4L,EAAWxW,EAAM4K,aACjBkM,GAAY9W,EAAMvF,cAClB6b,EAAetW,EAAMqB,UACvB,GAAG,CAACrB,IAEJ,IAWMsB,IAXYC,EAAAA,GAAAA,GAAW,CAC3BC,OAAQ,CACNC,SAAU,WACVC,IAAK,QACLC,UAAW,OAEbC,UAAW,CACT9B,OAAQ,6BAII+B,GAEVkV,GAAmB,SAAC1gC,GAmBxB,OACE,gBAAKzE,MAAM,SAAQ,UACjB,cACE3K,UAAU,UACV4B,QAAS,kBAtBe,SAACwN,GAC7B,IAAMkkB,EACJryB,EAAO,mDACqCmO,EAAUu0B,YAAW,wBAAgBv0B,EAAUokB,cAE7FxxB,IAAM,CACJE,IAAKoxB,EACLrxB,OAAQ,MACRwxB,aAAc,SACbpxB,MAAK,SAACC,GACP,IAAMJ,EAAMwxB,OAAOC,IAAIC,gBAAgB,IAAIC,KAAK,CAACvxB,EAASjF,QACpDy2B,EAAOnmB,SAASoa,cAAc,KACpC+L,EAAKC,KAAO7xB,EACZ4xB,EAAKzO,aAAa,WAAYjW,EAAUgrB,WACxCzsB,SAASgF,KAAKshB,YAAYH,GAC1BA,EAAKlV,OACP,GACF,CAKqBmxB,CAAsB3gC,EAAU,EAAC,UAEhD,eAAIvU,MAAO,CAAE+5B,eAAgB,YAAamG,aAAc,OAAQ,SAC7D3rB,EAAUgwB,aAAaF,QAAQ,QAK1C,EAEM8Q,GAAkB,SAAC5gC,GACvB,OAAO,gBAAKzE,MAAM,SAAQ,SAAEyE,EAAU6gC,WACxC,EAEM19B,GAAwC,QAA1B,EAAGvT,OAAOwT,KAAKjC,UAAW,aAAvB,EAAyBhU,KAAI,SAACkW,EAAKvE,GACxD,OACE,SAAC,IAAM,CAELyE,KACS,gBAAPF,EACIq9B,GACO,aAAPr9B,EACAu9B,GACA,GAENp9B,MAAOH,EACPtI,OAAQoG,EAAWkC,IATdA,EAYX,KAEAhV,EAAAA,EAAAA,YAAU,WACJJ,GAAQA,EAAKwQ,OAAS,GACxB2C,EAAcqC,KAAKC,MAAMD,KAAKE,UAAU1V,EAAK,KAEjD,GAAG,CAACA,IAEJ,QAA0C8D,EAAAA,EAAAA,WAAS,GAAM,iBAAlD+uC,GAAa,MAAEC,GAAgB,MACtC,IAA4ChvC,EAAAA,EAAAA,WAAS,GAAM,iBAApDivC,GAAc,MAAEC,GAAiB,MA6CxC,OACE,gBAAKrwC,UAAU,uBAAsB,UACnC,UAAC,KAAM,CACLyB,SAAS,SACTH,QAASkO,EACT6P,UAAU,SACV9d,KAAK,KACLvB,UAAU,uBACVwB,QAAS,kBAAMiO,GAAe,EAAM,EACpC4qB,QAAS,CACPS,MAAOT,GAAQE,QACf,WAEF,SAAC,KAAY,CAACv6B,UAAU,GAAE,UACxB,SAAC,KAAW,WACV,iBAAMA,UAAU,GAAE,SAAC,mCAGvB,UAAC,KAAU,CACTnF,MAAO,CACLg+B,OAAQ,iBACRhe,QAAS,iBACT,UAEDu1B,IACC,iBAAKpwC,UAAU,kBAAiB,WAC9B,SAAC,MAAa,IACb,oCAGH,GAEDkwC,IACC,iBAAKlwC,UAAU,kBAAiB,WAC9B,SAAC,MAAa,IACb,2CAGH,GAED8gB,GACC,iBAAK9gB,UAAU,oBAAmB,WAChC,SAAC,MAAO,IACP0vC,EAAQ,IAAE,2BAGb,IAEF,iBAAK70C,MAAO,CAAEg+B,OAAQ,qBAAsB,WAC1C,eACEh+B,MAAO,CACLD,SAAU,UACVi+B,OAAQ,oBACRxuB,MAAO,UACPwQ,QAAS,OACT,SACH,cAGD,4BACE,cACE7a,UAAU,UACV4B,QAAS,YA/MM,SAACm3B,GAC5B,IAAMzF,EACJryB,EAAO,mDACqC5D,EAAI,wBAAgBuyC,IAElE5tC,IAAM,CACJE,IAAKoxB,EACLrxB,OAAQ,MACRwxB,aAAc,SACbpxB,MAAK,SAACC,GACP,IAAMJ,EAAMwxB,OAAOC,IAAIC,gBAAgB,IAAIC,KAAK,CAACvxB,EAASjF,QACpDy2B,EAAOnmB,SAASoa,cAAc,KACpC+L,EAAKC,KAAO7xB,EACZ4xB,EAAKzO,aAAa,WAAY+pB,GAC9BzhC,SAASgF,KAAKshB,YAAYH,GAC1BA,EAAKlV,OACP,GACF,CA+LgByU,EACF,EAAE,UAEF,gBACEx4B,MAAO,CACL+5B,eAAgB,YAChBmG,aAAc,MACdlgB,QAAS,OACT,WAGF,SAAC,MAAU,IAAG,OACPke,EAAMwV,WAHRxV,EAAM4K,gBAMf,iBAAK9oC,MAAO,CAAEggB,QAAS,MAAOy1B,UAAW,SAAU,WACjD,cAAGtwC,UAAU,UAAS,UACpB,eACEnF,MAAO,CACL+5B,eAAgB,YAChBmG,aAAc,MACd17B,QAAS,UACT,SAEwB,GAAzB8nC,EAAU,GAAGv4B,UACZ,kBACEhN,QAAS,WACP6rC,GAAkB,GAElBE,GAAe,EACjB,EAAE,UACH,SACQ,OAGT,OAImB,IAAd,OAAV38B,QAAU,IAAVA,OAAU,EAAVA,EAAYpC,WACX,iBAAM/T,MAAO,CAAEwP,MAAO,SAAU,SAAC,eAEjC,IAEF,mBACEzI,QAAS,WAhRvBI,IAAAA,IAEIf,EAAO,0DAAsDquC,IAE9DjtC,MAAK,SAACC,GAOL+M,GANiB,CACf,CACE+vB,aAAc,iBACd6Q,UAAW,eAGS99B,OAAO7P,EAASjF,OACxCowC,GAAmBD,EACrB,IACChrC,OAAM,SAACC,GACNU,QAAQV,MAAM,6BAA8BA,EAC9C,IAkQcgrC,GAAkB,GAClBE,GAAe,EACjB,EACA9yC,MAAO,CACLwE,QAAS,SACTzE,SAAU,OACVigB,QAAS,UAET01B,aAAc,MACd3b,eAAgB,kBAChBiE,OAAQ,mBACR,SACH,uBAIF2U,GACC,gBAAKxtC,UAAU,WAAU,UACvB,SAAC,GAAqB,CACpBsN,KAAM,GACNjQ,KAAM+R,EACNmD,eAAgBA,GAChBhC,WAAYA,EACZC,cAAeA,MAInB,GAEDk9B,IACC,iBACE1tC,UAAU,WACVnF,MAAO,CACLg+B,OAAQ,oBACRhe,QAAS,MACTle,WAAY,MACZ8tC,YAAa,MACb6F,UAAW,QACX,WAEF,gBAAKtwC,UAAU,QAAO,UACpB,kBAEE0B,KAAK,OACL8B,KAAK,OACLxD,UAAU,mBACVhE,GAAG,OACHuP,SAxMS,SAAC7H,GAC5B+rC,EAAiB/rC,EAAEmH,OAAOiL,MAAM,IAChC65B,EAAWjsC,EAAEmH,OAAOiL,MAAM,GAAGtS,KAC/B,GAgMyB3H,MAQT,gBAAKmE,UAAU,QAAO,UACpB,kBACE0B,KAAK,OACL7G,MAAO,CACLy1C,UAAW,MACX3zC,WAAY,OACZ7B,MAAO,oBAET4Q,YAAY,eAGhB,gBAAK1L,UAAU,QAAO,UACpB,mBACE0B,KAAK,SACL1B,UAAU,kBACV2B,MAAM,SACN9G,MAAO,CACL8B,WAAY,OACZ5B,OAAQ,OACRu1C,UAAW,OAEb1uC,QA3NC,WACnB,GAA6B,IAAzB4tC,EAAc3hC,OAChBsiC,IAAiB,GACjBE,IAAkB,GAClB1tC,YAAW,WACT0tC,IAAkB,EACpB,GAAG,UACE,GAAIb,GAAiBJ,IAAgBM,EAC1CS,IAAiB,GACjBxtC,YAAW,WACTwtC,IAAiB,EACnB,GAAG,KACHE,IAAkB,OACb,CAAC,IAAD,EACLruC,IAAAA,SAEIf,EAAO,wEAC+E,QAD/E,EAC4DyrC,EAAiB,UAAE,aAAnB,EAAqB1wC,GAAE,yBAAiB8E,IAE3G,CAAEgV,MAAO05B,GACT,CACE5Z,QAAS,CACP,eAAgB,yBAIrBvzB,MAAK,SAACC,GACLye,GAAiB,GACjBovB,IAAiB,GACjBxtC,YAAW,WACToe,GAAiB,EACnB,GAAG,KACH6rB,GAAO,SAAC4D,GAAO,OAAKA,EAAU,CAAC,IAC/Bf,EAAiB,GACnB,GACJ,CACF,EAuL0C,SACvB,6BAYrB,EAhfkB,IAAI1O,UACZC,OAAO,OAAQjB,IAifzB,IAAMmB,GAAe,WACnB0L,GAAO,SAAC4D,GAAO,OAAKA,EAAU,CAAC,IAC/BxtC,GAAY,IACZg9B,GAAgB,GAChBxK,EAAW,IACXsX,EAAS,IAGT,IAFA,IAAIthC,EAAMmC,SAASC,uBAAuB,UAEjCE,EAAQ,EAAGA,EAAQtC,EAAIqC,OAAQC,IAAS,CAGU,IAAD,EAAxD,GAFAtC,EAAIsC,GAAOvI,MAAQ,GAEfiG,EAAIsC,GAAOC,UAAU6tB,SAAS,qBAGyC,QAFzE,EAAApwB,EACEsC,GACApP,SAAS,GAAGA,SAAS,GAAGA,SAAS,GAAGA,SAAS,GAAGA,SAAS,GAAGA,SAAS,UAAE,OAFzE,EAE2EkgB,OAE/E,EACA6xB,EAAAA,GAAAA,GAAaltC,GACf,EAwBA,OAlBA9F,EAAAA,EAAAA,YAAU,WACRJ,EAAK,IAAMmT,GAAcqC,KAAKC,MAAMD,KAAKE,UAAU1V,EAAK,KAC1D,GAAG,CAACA,KAOJI,EAAAA,EAAAA,YAAU,WACRsF,KACA4rC,KAp1BA3sC,IAAAA,IACOf,EAAO,kDAA8CH,KACzDuB,MAAK,SAACwrC,GACL,IAAIxwC,EAAOwwC,EAASxwC,KACpB2vC,GAAU3vC,EACZ,IACCmF,OAAM,SAACC,GAAK,OAAKU,QAAQC,IAAIX,EAAM,IAiGtCT,IAAM,CACJC,OAAQ,MACRC,IACEjB,EAAO,4DAC8C3D,KAEtD+E,MAAK,SAAUC,GACd,IAAIC,EAAOD,EAASjF,KACpBiT,GAAe/N,EACjB,IACCC,OAAM,SAAUF,GAAW,IAI9BN,IAAM,CACJC,OAAQ,MACRC,IACEjB,EAAO,6DAC+C3D,KAEvD+E,MAAK,SAAUC,GACd,IAAIC,EAAOD,EAASjF,KACpB6vC,GAAkB3qC,EACpB,IACCC,OAAM,SAAUC,GACfU,QAAQC,IAAIX,EACd,GAwtBJ,GAAG,KAGD,2BACG4qC,IACC,iBAAKrtC,UAAU,kBAAiB,UAC7B,KACD,SAAC,MAAa,IAAG,IAAE0T,GAAS,8BAA4BpW,EAAU,WAIpE,GAEDqI,IACC,iBAAK3F,UAAU,kBAAiB,UAC7B,KACD,4BACG,KACD,SAAC,OAAgB,IAAG,yDACb,UAIX,GAEDghB,IACC,iBAAKhhB,UAAU,oBAAmB,WAChC,SAAC,MAAO,IACP,mDAGH,GAED8K,IACC,iBAAK9K,UAAU,kBAAiB,UAC7B,KACD,SAAC,MAAa,IAAG,mCAGnB,IAGF,gBAAKA,UAAU,aAAY,UACzB,iBAAKA,UAAU,YAAW,UACvBuE,GAAYhI,KAAI,SAACiO,GAAI,OACpB,gBAAKxK,UAAU,WAAU,UACvB,wBAAKwK,EAAKc,eACN,KAER,gBAAKtL,UAAU,WAAU,UACvB,wBAAI,0BAEN,gBAAKA,UAAU,qBAInB,SAACoT,EAAA,EAAiB,CAChBxC,OAAQA,GACRyC,kBAh7BkB,CACtB,WACA,OACA,aACA,wBA86B4B,GAAzB8zB,EAAU,GAAGv4B,UACZ,iBAAK5O,UAAU,wBAAuB,WACpC,wBAAI,2BACJ,iBAAKA,UAAU,oBAAmB,WAChC,iBAAKA,UAAU,2BAA2BhE,GAAG,iBAAgB,WAC3D,mBAAOiR,QAAQ,iBAAgB,UAAC,uBAE9B,iBAAMjN,UAAU,sBAAqB,SAAC,UAExC,kBAEE0B,KAAK,OACL8B,KAAK,OACLxD,UAAU,kCACVhE,GAAG,OACHuP,SA/mBc,SAAC7H,GAAO,IAAD,EACjCs8B,GAAgBt8B,EAAEmH,OAAOiL,MAAM,IAC/B4oB,GAA6B,QAAlB,EAACh7B,EAAEmH,OAAOiL,MAAM,UAAE,aAAjB,EAAmBtS,MAE/BR,IAAY,SAACa,GAAI,+BACZA,GAAI,cACNH,EAAEmH,OAAO7O,GAAsB,QAApB,EAAG0H,EAAEmH,OAAOiL,MAAM,UAAE,aAAjB,EAAmBtS,MAAI,GAE1C,GAkmBmB3H,OAQT,iBAAKmE,UAAU,2BAA0B,WACvC,mBAAOiN,QAAQ,eAAc,UAAC,qBAE5B,iBAAMjN,UAAU,sBAAqB,SAAC,UAExC,oBACEA,UAAU,cACVhE,GAAG,eACHwH,KAAK,eACL+H,SAAU,SAAC7H,GACT,MAAsBA,EAAEmH,OAAhBtF,EAAK,EAALA,MAAOvJ,EAAE,EAAFA,IACN,OAATuJ,GACS,OAATA,GACS,OAATA,GACS,OAATA,KACIkrC,EAAAA,GAAAA,GAAaltC,IAEjBP,IAAY,kBAAK0D,IAAQ,cAAG1K,EAAKuJ,IACnC,EACAhC,IAAK,SAACiI,GACJjI,GAAIkI,QAAiC,KAAzB/E,GAASsnC,aAAsB,GAAK,GAAKxiC,CACvD,EAAE,WAEF,mBAAQjG,MAAM,GAAE,SAAC,uBACjB,mBAAQA,MAAM,MAAK,SAAC,WACpB,mBAAQA,MAAM,MAAK,SAAC,YACpB,mBAAQA,MAAM,MAAK,SAAC,QACpB,mBAAQA,MAAM,MAAK,SAAC,cAGE,KAAzBmB,GAASsnC,cACR,iBAAKhuC,UAAU,2BAA0B,WACvC,mBAAOiN,QAAQ,YAAW,UAAC,iBACV,iBAAMjN,UAAU,sBAAqB,SAAC,UAEvD,gBACEA,UAAU,mBACVuD,IAAK,SAACiI,GACJjI,GAAIkI,QAAiC,KAAzB/E,GAASsnC,aAAsB,EAAI,IAAMxiC,CACvD,EAAE,UAEF,kBACE9J,KAAK,OACL8B,KAAK,WACLxH,GAAG,WACHgE,UAAU,gBAUVuL,SAAUX,UAKhB,IAGF,iBAAK5K,UAAU,2BAA0B,WACvC,mBAAOiN,QAAQ,YAAW,UAAC,aACd,IACe,OAAzBvG,GAASsnC,cACe,IAAzBtnC,GAASsnC,mBACgBxnC,GAAzBE,GAASsnC,cACgB,OAAzBtnC,GAASsnC,cACP,iBAAMhuC,UAAU,sBAAqB,SAAC,UAEtC,OAGJ,gBACEA,UAAU,aACVuD,IAAK,SAACiI,GACJjI,GAAIkI,QACuB,KAAzB/E,GAASsnC,aACL,EACyB,KAAzBtnC,GAASsnC,cAEgB,KAAzBtnC,GAASsnC,aADT,GAGA,GACFxiC,CACN,EAAE,UAEF,SAAC,IAAU,CACThI,KAAK,QACL2I,SAAUopB,EACVv5B,GAAG,QACHgE,UAAU,aACVsM,WAAW,cACXokC,gBAAgB,aAChBnkC,mBAAiB,EACjBC,kBAAgB,EAChBC,aAAa,SACblB,SAAU,SAAC7H,GACTV,IAAY,SAACa,GAAI,yBACZA,GAAI,cACN,QAAUsE,IAAOzE,GAAG2E,OAAO,eAAa,IAE3CmtB,EAAW9xB,EACb,EACAkI,UAAW,SAAClI,GAAO,EACnByjB,aAAa,gBAInB,iBAAKnnB,UAAU,2BAA0B,WACvC,mBAAOiN,QAAQ,UAAS,UAAC,WACd,IACiB,OAAzBvG,GAASsnC,cACe,IAAzBtnC,GAASsnC,mBACgBxnC,GAAzBE,GAASsnC,cACgB,OAAzBtnC,GAASsnC,cACP,iBAAMhuC,UAAU,sBAAqB,SAAC,UAEtC,OAGJ,gBACEA,UAAU,oBACVuD,IAAK,SAACiI,GACJjI,GAAIkI,QACuB,KAAzB/E,GAASsnC,aACL,EACyB,KAAzBtnC,GAASsnC,cAEgB,KAAzBtnC,GAASsnC,aADT,GAGA,GACFxiC,CACN,EAAE,UAEF,SAAC,IAAU,CACThI,KAAK,OACL2I,SAAU0gC,EACV7wC,GAAG,OACH0Q,QAAS,IAAIhI,KAAKgC,GAASonC,OAC3B9tC,UAAU,aACVsM,WAAW,cACXokC,gBAAgB,WAChBnkC,mBAAiB,EACjBC,kBAAgB,EAChBC,aAAa,SACblB,SAAU,SAAC7H,GACTV,IAAY,SAACa,GAAI,yBACZA,GAAI,cACN,OAASsE,IAAOzE,GAAG2E,OAAO,eAAa,IAE1CykC,EAASppC,EACX,EACAkI,UAAW,SAAClI,GAAO,EACnByjB,aAAa,gBAInB,iBAAKnnB,UAAU,2BAA0B,WACvC,mBAAOiN,QAAQ,SAAQ,UAAC,SACf,IACmB,OAAzBvG,GAASsnC,cACe,IAAzBtnC,GAASsnC,mBACgBxnC,GAAzBE,GAASsnC,cACgB,OAAzBtnC,GAASsnC,cACP,iBAAMhuC,UAAU,sBAAqB,SAAC,UAEtC,OAGJ,gBACEA,UAAU,mBACVuD,IAAK,SAACiI,GACJjI,GAAIkI,QACuB,KAAzB/E,GAASsnC,aACL,EACyB,KAAzBtnC,GAASsnC,cAEgB,KAAzBtnC,GAASsnC,aADT,GAGA,GACFxiC,CACN,EAAE,UAEF,kBACEhI,KAAK,SACL9B,KAAK,OACL1B,UAAU,SACVhE,GAAG,SACH0P,YAAY,SACZI,UAAQ,EACRH,UAAW,GACXC,UAAW,SAAClI,GAAC,OACXA,EAAEiJ,UACDjJ,EAAEiJ,SAAW,IAAMjJ,EAAEiJ,SAAW,KACpB,GAAbjJ,EAAEiJ,SACFjJ,EAAEwH,gBAAgB,EAEpBK,SAAUX,WAIhB,iBAAK5K,UAAU,2BAA0B,WACvC,kBAAOiN,QAAQ,kBAAiB,SAAC,kBACjC,oBACEjR,GAAG,kBACHwH,KAAK,kBACLxD,UAAU,SACVuL,SAAU,SAAC7H,GACT,MAAsBA,EAAEmH,OAAhBtF,EAAK,EAALA,MAAOvJ,EAAE,EAAFA,GACfgH,IAAY,kBAAK0D,IAAQ,cAAG1K,EAAKuJ,IACnC,EAAE,WAEF,mBAAQA,MAAM,GAAE,SAAC,uBACjB,mBAAQA,MAAM,IAAG,SAAC,mCAClB,mBAAQA,MAAM,IAAG,SAAC,mBAClB,mBAAQA,MAAM,IAAG,SAAC,4BAClB,mBAAQA,MAAM,IAAG,SAAC,2BAClB,mBAAQA,MAAM,IAAG,SAAC,+CAGtB,iBAAKvF,UAAU,2BAA0B,WACvC,kBAAOiN,QAAQ,WAAU,SAAC,8BAC1B,gBACEjN,UAAU,qEACVhE,GAAG,iCAAgC,UAEnC,SAAC,IAAgB,CACfwH,KAAK,cACLxH,GAAG,cACHuJ,MAAM,IACNyT,YAAaktB,EACbnjC,QAAS4rC,GACT3rC,YAAaA,GACb2tC,gBAtUQ,SAACjtC,GACvB,MAAsBA,EAAEmH,OAAZtF,GAAF,EAAFvJ,GAAS,EAALuJ,OACZvC,IAAY,SAACa,GAAI,yBAAWA,GAAI,IAAEsqC,YAAa5oC,GAAK,GACtD,EAoUgB3B,QA/UI,WAClBZ,IAAY,SAACa,GAAI,yBAAWA,GAAI,IAAEsqC,YAAa,MAAI,GACrD,eAoVM,GAGuB,IAAd,OAAVn9B,QAAU,IAAVA,OAAU,EAAVA,EAAYpC,WACX,iBAAK5O,UAAU,sEAAqE,WAClF,oBACEA,UAAU,kBACV0B,KAAK,SACLE,QAAS,kBAj2BC,SAAC8B,GAAO,IAAD,EAEN,IAAjBq8B,IACwB,IAAxBA,GAAalyB,aACGrH,GAAhBu5B,KAEAn6B,IAAqB,GACrBjD,YAAW,WACTiD,IAAqB,EACvB,GAAG,KACHmF,IAAiB,GACjBuiC,IAAkB,IAGpB,IAAInnB,EAAe5iB,GAAIkI,QAAQ5N,QAAO,SAAC7C,GAAC,OAAU,MAALA,CAAS,IAMtD,GAJAuI,GAAIkI,QAAU0a,GAEF7X,EAAAA,EAAAA,GAAiB/K,IAS3B,OALEqC,IAAqB,QACrBjD,YAAW,WACTiD,IAAqB,EACvB,GAAG,KAKP,IACI6H,EADwBw/B,GAAepvC,QAAO,SAAC7C,GAAC,OAAW,OAANA,CAAU,IAC7B0S,MACpC,SAAC1S,GAAC,OAAKA,EAAEyzC,WAAa/nC,GAASwnC,QAAQ,IAIrC0C,EADyBzD,GAAatvC,QAAO,SAAC7C,GAAC,OAAW,OAANA,CAAU,IAC1B0S,MAAK,SAAC1S,GAAC,OAAKA,EAAEuzC,UAAY76B,EAAQ,IAE1E,GAAIjG,EAAW,CAEb,IADA,IAAIjC,EAAMmC,SAASC,uBAAuB,UACjCE,EAAQ,EAAGA,EAAQtC,EAAIqC,OAAQC,IACtCtC,EAAIsC,GAAOC,UAAUC,IAAI,eAQ3B,OALAjD,IAAiB,GACjBnF,IAAqB,QACrBjD,YAAW,WACToI,IAAiB,EACnB,GAAG,IAEL,CAEA,GAAI6lC,EAAY,CAEd,IADA,IAAIplC,EAAMmC,SAASC,uBAAuB,WACjCE,EAAQ,EAAGA,EAAQtC,EAAIqC,OAAQC,IACtCtC,EAAIsC,GAAOC,UAAUC,IAAI,eAQ3B,OALAs/B,IAAkB,GAClB1nC,IAAqB,QACrBjD,YAAW,WACT2qC,IAAkB,EACpB,GAAG,IAEL,CAEAtrC,IAAAA,SAEIf,EAAO,iEACwE,QADxE,EACqDyrC,EAAiB,UAAE,aAAnB,EAAqB1wC,GAAE,yBAAiB8E,GAAY,mCAChH,CACEmV,KAAM8pB,GACN8Q,WAAYh+B,KAAKE,UAAU,CACzBzV,UAAWA,EACXwzC,QAASp9B,GACTo6B,MAAOpnC,GAASonC,MAChBC,KAAMrnC,GAASqnC,KACfjI,OACqB,MAAnBp/B,GAASo/B,QAAqC,IAAnBp/B,GAASo/B,OAChC,EACAp/B,GAASo/B,OACfkI,aAActnC,GAASsnC,aACvBE,SAAUxnC,GAASwnC,SACnBD,gBAAiBvnC,GAASunC,gBAC1BE,YAAaznC,GAASynC,eAI1B,CACEvY,QAAS,CACP,eAAgB,yBAIrBvzB,MAAK,SAACC,GACL2e,IAAc,GACdrb,IAAqB,GACrBgpC,KACA5O,GAAgBtsB,IAChB/Q,YAAW,WACTse,IAAc,GACdlW,IAAiB,EACnB,GAAG,KACHhI,MACA0tC,EAAAA,GAAAA,GAAaltC,IACbiyB,EAAW,IACXsX,EAAS,GACX,IACF5L,KACA0L,GAAO,SAAC4D,GAAO,OAAKA,EAAU,CAAC,GACjC,CAmvByBO,EAAa,EAAC,WAE7B,SAAC,MAAM,IAAG,YAEZ,oBAAQ/wC,UAAU,oBAAoB4B,QAASs/B,GAAa,WAC1D,SAAC,MAAO,CAACtmC,SAAU,SAAU,gBAIjC,IAEF,iBAAKoF,UAAU,4BAA2B,WACxC,eAAIA,UAAU,iBAAgB,SAAC,4BAC/B,gBAAKA,UAAU,YAAW,UACxB,SAACgY,EAAA,EAA+B,CAC9B3a,KAAMA,EACNkV,eAAgBA,GAChBhC,WAAYA,GACZC,cAAeA,GACflD,KAtuCC,UA0uCNkC,IACC,SAACmpB,GAAY,CACXnpB,YAAaA,GACbC,eAAgBA,GAChBspB,MAAOA,GACP3pB,UAAWA,GACXo+B,eAAgBA,GAChBC,kBAAmBA,GACnBC,YAAaA,GACbC,eAAgBA,GAChBjB,iBAAkBA,IAGpB,KAIR,E,wBC5xBA,OAhgBA,SAAuBhyC,GACrB,IAAQ4C,EAAyB5C,EAAzB4C,UAAWqR,EAAcjU,EAAdiU,UACbqC,EAAarC,EAAUsC,MAAK,SAACnT,GAAI,MAA2B,YAAtBA,EAAKiT,YAA0B,IAErEjQ,EAAeC,aAAaC,QAAQ,SAC1C,GAAgCG,EAAAA,EAAAA,UAAS,IAAG,eAArCygB,EAAQ,KAAEC,EAAW,KAC5B,GAAsC1gB,EAAAA,EAAAA,UAAS,IAAG,eAA3CmK,EAAW,KAAE3G,EAAc,KAClC,GAAoCxD,EAAAA,EAAAA,WAAS,GAAM,eAA5C6f,EAAU,KAAEC,EAAa,KAChC,GAA8B9f,EAAAA,EAAAA,UAAS,MAAK,eAArCo0B,EAAO,KACd,GAD0B,MACAp0B,EAAAA,EAAAA,UAAS,KAAG,eAAxB01B,GAAF,KAAU,MACtB,GAA8C11B,EAAAA,EAAAA,WAAS,GAAM,eAAtD2gB,EAAe,KAAEC,EAAkB,KAC1C,GAA4B5gB,EAAAA,EAAAA,WAAS,GAAM,eAApCmO,EAAM,KAAEC,EAAS,KACxB,GAA4CpO,EAAAA,EAAAA,WAAS,GAAK,eAAnD8gB,EAAc,KAAEC,EAAiB,KACxC,IAA0B/gB,EAAAA,EAAAA,WAAS,GAAM,iBAAlCkN,GAAK,MAAE8T,GAAQ,MAChBlhB,GAAUC,EAAAA,EAAAA,QACVgQ,IAAkBhO,EAAAA,EAAAA,QAAO,MACzBkf,IAAelf,EAAAA,EAAAA,QAAO,MAE5B,IAAkC/B,EAAAA,EAAAA,UAAS,CACzCqiB,QAAS,CACPP,OAAQ,CAAE1d,MAAO,KAAM2d,UAAWC,EAAAA,GAAAA,UAClC6tB,WAAY,CAAEzrC,MAAO,KAAM2d,UAAWC,EAAAA,GAAAA,UACtC8tB,WAAY,CAAE1rC,MAAO,KAAM2d,UAAWC,EAAAA,GAAAA,UACtC7c,SAAU,CAAEf,MAAO,KAAM2d,UAAWC,EAAAA,GAAAA,aAEtC,iBAPK+tB,GAAS,MAQVxtB,IARwB,MAQT,CACnBC,WAAYrmB,EACZ0zC,WAAY,GACZC,WAAY,GACZ3qC,SAAU,KAEZ,IAAgCnF,EAAAA,EAAAA,UAASuiB,IAAa,iBAA/Chd,GAAQ,MAAE1D,GAAW,MAI5B,IAA4B7B,EAAAA,EAAAA,UAAS,IAAG,iBAAjCyP,GAAM,MAAEC,GAAS,OAIxBpT,EAAAA,EAAAA,YAAU,WACRqT,IACF,GAAG,IAEH,IAAMA,GAAW,WAGf9O,IAAM,CACJC,OAAQ,MACRC,IAAKjB,GAAO,iDAA6CH,KACxDuB,MAAK,SAACE,GACIA,EAAKlF,KAEXwB,SAAQ,SAACf,GAhBA,aAiBRA,EAAKiT,cACPF,GAAU,CAAC/S,GAEf,GACF,GACF,EAEIqzC,GAAYxjC,SAASC,uBACvB,+CAEEwjC,GAAkBzjC,SAASC,uBAC7B,gDAGFnQ,EAAAA,EAAAA,YAAU,WAAO,GAAG,CAACiJ,KAErB,IAcM2qC,GAAwB,SAACC,GAC7BtyC,OAAOwT,KAAK8+B,GAAMzyC,SAAQ,SAAC7D,GACzB,GAAI,CAAC,GAAI,UAAMwL,EAAW,KAAK4H,SAASkjC,EAAKt2C,IAG3C,OAFA6mB,EAAYD,EAAS9C,MAAM,SAC3BqD,IAAS,SAACte,GAAI,OAAMA,CAAI,GAG5B,GACF,GAEApG,EAAAA,EAAAA,YAAU,WAAO,IAAD,MACV6zC,EAAO1vB,EAAS,GASpB,GARY,QAAZ,EAAAuvB,GAAU,UAAE,OAAZ,EAActyB,iBAAiB,SAAS,WACtCwyB,GAAsBC,EACxB,IAEkB,QAAlB,EAAAF,GAAgB,UAAE,OAAlB,EAAoBvyB,iBAAiB,SAAS,WAC5CwyB,GAAsBC,EACxB,IAE+B,KAAhB,QAAX,EAAA1vB,EAAS,UAAE,aAAX,EAAaovB,YAAkB,CACjC,IAAM5rB,EAAOzX,SAASC,uBACpB,4BACA,GACFwX,EAAKC,aAAa,QAAS,qBAC3BD,EAAKxG,QACLjc,YAAW,WACQgL,SAASC,uBACxB,4BACA,GACOyX,aAAa,QAAS,YAC/B,IAAME,EAAa5X,SAASC,uBAC1B,8BACA,GACF2X,EAAWF,aAAa,QAAS,sBACvB,OAAVE,QAAU,IAAVA,GAAAA,EAAY1G,iBACV,SACA,SAAUnb,GAAI,IAAD,EACoB,KAAhB,QAAX,EAAAke,EAAS,UAAE,aAAX,EAAaovB,cACfnvB,EAAYD,EAAS9C,MAAM,EAAG8C,EAAS/T,SACvCqU,GAAkB,GAClBH,GAAmB,GACnBI,IAAS,GACTC,GAAa3W,QAAQ+Z,cAEzB,IACA,EAEJ,GAAG,IACL,CACF,GAAG,CAAC5D,IAEJ,IAwIM7e,GAAU,WACdwM,GAAU,GACV2B,GAAgBzF,QAAU,IAAIsa,gBAC9B/jB,IAAM,CACJE,IACEjB,GAAO,wDAAoD3D,GAC7D64B,OAAQjlB,GAAgBzF,QAAQ0qB,SAC/B9zB,MAAK,SAACE,GACP,IAC0B,EADtB0P,EAAU1P,EAAKlF,KAAK,WACL4U,GAAO,IAA1B,2BAA4B,CAAC,IAAlBnU,EAAI,QACbA,EAAiB,WACO,MAAtBA,EAAiB,WACb,GACAqK,IAAOrK,EAAiB,YAAGuK,OAAO,cAC1C,CAAC,+BAEDwZ,GAAY,kBAAM5P,CAAO,IACzB1C,GAAU,GACV5M,YAAW,WACT4M,GAAU,EACZ,GAAG,IACL,GACF,EAQMhB,GAAiB,SAACkQ,GACtB,GAAkC,KAA9BA,EAAQuyB,WAAWj5B,QAA+C,KAA9B0G,EAAQwyB,WAAWl5B,OACzDgK,GAAmB,OACd,CACL,IAAMlQ,EAAU1J,IAAOsW,EAAQwyB,YAAY5oC,OAAO,cAClDrG,IAAM,CACJC,OAAQ,OACRC,IAAKjB,GAAO,6CACZ5D,KAAM,CACJrB,GAAIyiB,EAAQziB,GACZsB,UAAWA,EACXi0C,UAAW9yB,EAAQuyB,WACnBQ,UAAW3/B,EACXvL,SAAUmY,EAAQnY,YAEnBjE,MAAK,WACNU,KACAgf,GAAmB,GACnBd,GAAc,GACdte,YAAW,WACTse,GAAc,EAChB,GAAG,IACL,IACAiB,GAAkB,GAClBC,IAAS,EACX,CACF,EA4BA,OALA1kB,EAAAA,EAAAA,YAAU,WACRsF,KAzFAf,IAAM,CACJC,OAAQ,MACRC,IAAKjB,GAAO,oDAAgD3D,KAC3D+E,MAAK,SAAUC,GAChB,IAAIC,EAAOD,EAASjF,KACpBsH,EAAepC,EACjB,GAqFF,GAAG,KAGD,gCACGuf,GACC,gBAAK9hB,UAAU,kBAAiB,UAC9B,6BACE,SAAC,MAAa,IAAG,OAEhB,0DAIL,GAEDghB,GACC,iBAAKhhB,UAAU,oBAAmB,WAChC,SAAC,MAAO,IACP,+BAGH,IAGF,gBAAKA,UAAU,kBAAiB,UAC9B,iBAAKA,UAAU,YAAW,WACxB,gBAAKA,UAAU,WAAU,UACvB,wBAAKsL,OAEP,gBAAKtL,UAAU,WAAU,UACvB,wBAAI,cAEN,gBAAKA,UAAU,qBAGnB,SAACoT,EAAA,EAAiB,CAChBxC,OAAQA,GACRyC,kBAjWkB,CAAC,WAAY,OAAQ,aAAc,aAmWvD,gBAAKrT,UAAU,2BAA0B,UACvC,UAAC,IAAS,CACRA,UAAU,mCACVuF,MAAOqc,EACPpC,SAAS,MACTlS,KAAM,GACNmS,eAAa,EACbG,WAAS,EACT6xB,UAAQ,EACRjuB,QAAS0tB,GAAU1tB,QACnB1D,kBA7UkB,SAACpc,GACzB,IAAI2iB,GAAS,OAAOzE,GACd5B,EAAmBtc,EAAnBsc,QACNqG,EADyB3iB,EAAVoK,OACIkS,EACnB6B,EAAYwE,GACZ9X,GAAe7K,EAAEsc,QACnB,EAwUQ0xB,WAAY,CAAEC,SAAU,OAAQ72C,MAAO,QACvC82C,cAAc,MACdC,mBAAoB,CAAC,aAAc,aAAc,YACjD1xB,0BAA0B,2CAC1BD,kBAAkB,6FAClBE,mBAAoB,CAAC,GAAI,GAAI,IAC7BolB,2BAA4B,CAC1BjJ,gBAAiB,oBACjBC,mBAAoB,UACpB,WAEF,SAAC,IAAM,CACL5pB,MAAM,MACNzI,OAAO,OACPwI,KApVQ,SAAC8L,EAASiU,GAC1B,IACMof,EADQlwB,EAASzjB,QAAQsgB,GACX,EACpB,OAAO,0BAAOqzB,GAChB,EAiVUC,YAAa,CAAEj3C,MAAO,OAAQwlB,gBAAiB,WAC/CC,UAAW,CAAEC,UAAW,aAE1B,SAAC,IAAM,CACL5N,MAAM,aACNzI,QACE,4BAAM,UACE,iBAAMnK,UAAU,aAAY,SAAC,SAGvC0S,UAAQ,EACR7X,MAAO,CAAE82C,SAAU,SACnBh/B,KAzQe,SAAC8L,GACxB,OACE,+BACE,kBACEze,UAAU,WACVhE,GAAG,aACH2F,MAAO8c,EAAQuyB,WACfzrC,MAAOkZ,EAAQuyB,WACftvC,KAAK,OACLylB,aAAa,MACbrb,UAAQ,EACRT,UAAQ,KAIhB,EA2PUgV,OAAQ,SAAC7hB,GAAO,OA7RE,SAACojB,GAE3B,OADAiV,EAASjV,EAASnD,QAAQziB,KAExB,+BACE,kBACEgE,UAAS,gBACP8hB,IAAoBF,EAASnD,QAAQuyB,WAAa,cAAgB,IAEpEh1C,GAAG,aACH0F,KAAK,OACL6D,MAAOqc,EAASnD,QAAQuyB,WACxBzlC,SAAU,SAAC7H,GACTke,EAASmF,eAAerjB,EAAEmH,OAAOtF,MACnC,KAIR,CA4Q+BuhB,CAAoBtoB,EAAQ,EACjDX,QAAM,EACNm0C,gBAAgB,cAGlB,SAAC,IAAM,CACLp/B,MAAM,aACNzI,QACE,4BAAM,SACC,iBAAMnK,UAAU,aAAY,SAAC,SAGtC0S,UAAQ,EACR7X,MAAO,CAAE82C,SAAU,QAASnxB,UAAW,UACvC7N,KAxMa,SAAC8L,GACtB,OACE,+BACE,kBACEziB,GAAG,aACH2F,MAAO8c,EAAQwyB,WACf1rC,MAAOkZ,EAAQwyB,WACfvvC,KAAK,OACLylB,aAAa,MACbrb,UAAQ,EACRT,UAAQ,KAIhB,EA2LUgV,OAAQ,SAAC7hB,GAAO,OAzOH,SAACojB,GACtB,IAAMqwB,EAAQ,IAAIvtC,KAElB,OACE,SAAC,IAAU,CACT1E,UAAS,gBACP8hB,IAAoBF,EAASnD,QAAQwyB,WAAa,cAAgB,IAEpEztC,KAAK,aACLxH,GAAG,aACHmQ,SAAUopB,EACVhpB,mBAAiB,EACjBC,kBAAgB,EAChBC,aAAa,SACblH,MAAOqc,EAASnD,QAAQwyB,WACxB3kC,WAAW,cACXf,SAAU,SAAC7H,GACT,IAAM0jB,EAAejf,IAAOzE,GAAG2E,OAAO,eACtCuZ,EAASmF,eAAeK,GACxBpkB,IAAY,SAACa,GAAI,yBACZA,GAAI,cACN,aAAesE,IAAOzE,GAAG2E,OAAO,eAAa,GAElD,EACAuD,UAAW,SAAClI,GACVA,EAAEwH,gBACJ,EACAmc,QAAS4qB,GAGf,CA2M+B3qB,CAAe9oB,EAAQ,EAC5CX,QAAM,EACNm0C,gBAAgB,cAGlB,SAAC,IAAM,CACLp/B,MAAM,WACNzI,OAAO,WACPuI,UAAQ,EACR7X,MAAO,CAAE82C,SAAU,SACnBh/B,KApQiB,SAAC8L,GAC1B,OACE,+BACE,kBACEze,UAAU,WACVhE,GAAG,WACH2F,MAAO8c,EAAQnY,SACff,MAAOkZ,EAAQnY,SACf5E,KAAK,OACLylB,aAAa,MACbrb,UAAQ,EACRT,UAAQ,KAIhB,EAsPUgV,OAAQ,SAAC7hB,GAAO,OAnRC,SAACojB,GAC1B,OACE,+BACE,SAAC,KAAa,CACZ5lB,GAAG,WACHuJ,MAAOqc,EAASnD,QAAQnY,SACxBiF,SAAU,SAAC7H,GAAC,OAAKke,EAASmF,eAAerjB,EAAEmH,OAAOtF,MAAM,EACxD+H,KAAM,EACNC,KAAM,MAId,CAuQ+B2kC,CAAmB1zC,EAAQ,EAChDX,QAAM,EACNm0C,gBAAgB,cAEQ,GAAzBrjC,EAAU,GAAGC,WACZ,SAAC,IAAM,CACLgE,MAAM,UACNzI,OAAO,UACPqd,WAAS,EACTuqB,YAAa,CAAEj3C,MAAO,QAASwlB,gBAAiB,WAChDC,UAAW,CAAEC,UAAW,iBAKP,IAAd,OAAVxP,QAAU,IAAVA,OAAU,EAAVA,EAAYpC,WACX,iBAAK5O,UAAU,uDAAsD,WACnE,oBACEA,UAAU,kBACVqL,SAAUgD,GACV1M,MAAO,cACPC,QArJS,WACP+L,SAASC,uBACjB,gDACA,GAEEgR,QAECvQ,KACH8T,IAAS,GACTD,GAAkB,IAEpB,IAKI7D,EAAK,GACTA,EAAGtf,KANU,CACXiyC,WAAY,GACZC,WAAY,GACZ3qC,SAAU,KAIZub,EAAY,GAAD,OAAKxD,GAAG,OAAIuD,IACzB,EAkI8B,WAEpB,SAAC,MAAM,IAAG,WAEZ,oBACE5hB,UAAU,kBACVqL,SAAU4W,EACVtgB,MAAO,WACPC,QAAS,YA/VN,WAAO,IAAD,EAEuD,QADxE,EAAA+L,SACGC,uBAAuB,4CAA4C,UAAE,OADxE,EAEIgR,OACN,CA4VYG,EACF,EAAE,WAEF,SAAC,MAAM,IAAG,WAGZ,oBACE/e,UAAU,oBACVqL,SAAU4W,EACVtgB,MAAO,qBACPC,QAAS,YApWL,WAAO,IAAD,EAC8C,QAAhE,EAAA+L,SAASC,uBAAuB,8BAA8B,UAAE,OAAhE,EAAkEgR,QAClEmD,GAAmB,EACrB,CAkWYnB,EACF,EAAE,WAEF,SAAC,MAAO,CAAChmB,SAAU,SAAU,gBAIjC,GAED0U,GAAS,SAACiE,EAAA,EAAM,CAACC,YAnNF,WAClBtC,GAAgBzF,SAAWyF,GAAgBzF,QAAQgI,QACnDlE,GAAU,EACZ,IAgNqD,KAGvD,E,6CCzfe,SAAS4iC,GAAkBz3C,GACxC,IAAQ4C,EAAyB5C,EAAzB4C,UAAWqR,EAAcjU,EAAdiU,UACbqC,EAAarC,EAAUsC,MAC3B,SAACnT,GAAI,MAA2B,eAAtBA,EAAKiT,YAA6B,IAExC9P,EAAUC,EAAAA,EAAAA,QAChB,GAAgCC,EAAAA,EAAAA,UAAS,IAAG,eAArCygB,EAAQ,KAAEC,EAAW,KAC5B,GAAiC1gB,EAAAA,EAAAA,WAAS,GAAM,eAAzC8N,EAAO,KACd,GAD6B,MACD9N,EAAAA,EAAAA,WAAS,IAAM,eAApCkD,EAAM,KAAED,EAAS,KACxB,GAA4BjD,EAAAA,EAAAA,UAAS,IAAG,eAAzBkP,GAAF,KAAW,MACxB,GAA4BlP,EAAAA,EAAAA,WAAS,GAAM,eAApCmO,EAAM,KAAEC,EAAS,KAExB,GAA8CpO,EAAAA,EAAAA,WAAS,GAAM,eAAtD2gB,EAAe,KAAEC,EAAkB,KAEpCK,IADMlf,EAAAA,EAAAA,QAAO,KACEA,EAAAA,EAAAA,QAAO,QAE5BzF,EAAAA,EAAAA,YAAU,WACRsF,IACF,GAAG,IACH,OAA4C5B,EAAAA,EAAAA,WAAS,GAAK,eAAnD8gB,EAAc,KAAEC,EAAiB,KAExC,GAA8B/gB,EAAAA,EAAAA,UAAS,CACrCqiB,QAAS,CACPP,OAAQ,CAAE1d,MAAO,KAAM2d,UAAWC,EAAAA,GAAAA,UAClCivB,kBAAmB,CACjB7sC,MAAO,KACP2d,UAAWC,EAAAA,GAAAA,UAEb8U,SAAU,CAAE1yB,MAAO,KAAM2d,UAAWC,EAAAA,GAAAA,UACpCjX,UAAW,CAAE3G,MAAO,KAAM2d,UAAWC,EAAAA,GAAAA,UACrCkvB,eAAgB,CAAE9sC,MAAO,KAAM2d,UAAWC,EAAAA,GAAAA,UAC1C2iB,OAAQ,CAAEvgC,MAAO,KAAM2d,UAAWC,EAAAA,GAAAA,UAClC7c,SAAU,CAAEf,MAAO,KAAM2d,UAAWC,EAAAA,GAAAA,UACpC+U,eAAgB,CAAE3yB,MAAO,KAAM2d,UAAWC,EAAAA,GAAAA,UAC1CmvB,WAAY,CAAE/sC,MAAO,KAAM2d,UAAWC,EAAAA,GAAAA,UACtCovB,eAAgB,CAAEhtC,MAAO,KAAM2d,UAAWC,EAAAA,GAAAA,aAE5C,eAhBKK,EAAO,KAkBRgvB,IAlBoB,KAkBJ,CACpBx2C,GAAI,GACJ2nB,WAAYrmB,EACZ80C,kBAAmB,GACnB7gC,OAAQ,IACR0mB,SAAU,GACV3xB,SAAU,GACV+rC,eAAgB,EAChBna,eAAgB,GAChB4N,OAAQ,IAKJhlC,GAAeC,aAAaC,QAAQ,SAE1C,IAA4BG,EAAAA,EAAAA,UAAS,IAAG,iBAAjCyP,GAAM,MAAEC,GAAS,OAIxBpT,EAAAA,EAAAA,YAAU,WACRqT,IACF,GAAG,IAEH,IAAMA,GAAW,WAGf9O,IAAM,CACJC,OAAQ,MACRC,IAAKjB,EAAO,iDAA6CH,MACxDuB,MAAK,SAACE,GACIA,EAAKlF,KAEXwB,SAAQ,SAACf,GAhBA,aAiBRA,EAAKiT,cACPF,GAAU,CAAC/S,GAEf,GACF,GACF,EAEA,IAAwCqD,EAAAA,EAAAA,UAASqxC,IAAc,iBAAxD7rC,GAAY,MAAEC,GAAe,OACpCnJ,EAAAA,EAAAA,YAAU,WAAO,GAAG,CAACkJ,KACrB,IAAIwqC,GAAYxjC,SAASC,uBACvB,+CAEEwjC,GAAkBzjC,SAASC,uBAC7B,+CAOIyjC,GAAwB,SAACC,GAC7BtyC,OAAOwT,KAAK8+B,GAAMzyC,SAAQ,SAAC7D,GACzB,GAAI,CAAC,GAAI,UAAMwL,EAAW,KAAK4H,SAASkjC,EAAKt2C,IAG3C,OAFA6mB,EAAYD,EAAS9C,MAAM,SAC3BqD,IAAS,SAACte,GAAI,OAAMA,CAAI,GAG5B,GACF,GACApG,EAAAA,EAAAA,YAAU,WAAO,IAAD,MACV6zC,EAAO1vB,EAAS,GASpB,GARY,QAAZ,EAAAuvB,GAAU,UAAE,OAAZ,EAActyB,iBAAiB,SAAS,WACtCwyB,GAAsBC,EACxB,IAEkB,QAAlB,EAAAF,GAAgB,UAAE,OAAlB,EAAoBvyB,iBAAiB,SAAS,WAC5CwyB,GAAsBC,EACxB,IAEsC,KAAvB,QAAX,EAAA1vB,EAAS,UAAE,aAAX,EAAawwB,mBAAyB,CACxC,IAAMhtB,EAAOzX,SAASC,uBACpB,4BACA,GACFwX,EAAKC,aAAa,QAAS,qBAC3BD,EAAKxG,QACLjc,YAAW,WACQgL,SAASC,uBACxB,4BACA,GACOyX,aAAa,QAAS,YAC/B,IAAME,EAAa5X,SAASC,uBAC1B,8BACA,GACF2X,EAAWF,aAAa,QAAS,sBACvB,OAAVE,QAAU,IAAVA,GAAAA,EAAY1G,iBACV,SACA,SAAUnb,GAAI,IAAD,EAC2B,KAAvB,QAAX,EAAAke,EAAS,UAAE,aAAX,EAAawwB,qBACfvwB,EAAYD,EAAS9C,MAAM,EAAG8C,EAAS/T,SACvCqU,GAAkB,GAClBC,IAAS,GACTJ,GAAmB,GACnBK,EAAa3W,QAAQ+Z,cAEzB,IACA,EAEJ,GAAG,IACL,CACF,GAAG,CAAC5D,IACJ,IAAM1Q,IAAkBhO,EAAAA,EAAAA,QAAO,MAEzBH,GAAU,WACdwM,GAAU,GACV2B,GAAgBzF,QAAU,IAAIsa,gBAE9B/jB,IAAM,CACJE,IACEjB,EAAO,8DACgD3D,GACzD64B,OAAQjlB,GAAgBzF,QAAQ0qB,SAC/B9zB,MAAK,SAACE,GAGP,IAFA,IAAI0P,EAAU1P,EAAKlF,KAEV6Q,EAAI,EAAGA,EAAI+D,EAAQpE,OAAQK,IAClC+D,EAAQ/D,GAAa,SACO,MAA1B+D,EAAQ/D,GAAa,SACjB,GACA/F,IAAO8J,EAAQ/D,GAAa,UAAG7F,OAAO,eAE5C4J,EAAQ/D,GAAW,OACO,MAAxB+D,EAAQ/D,GAAW,OACf,GACA+D,EAAQ/D,GAAW,OAChBgxB,QAAQ,GACRxnB,QAAQ,oBAAqB,OAEtCzF,EAAQ/D,GAAmB,eACO,MAAhC+D,EAAQ/D,GAAmB,eACvB,GACA/F,IAAO8J,EAAQ/D,GAAmB,gBAAG7F,OAAO,eAEpD,IAAK,IAAI6F,EAAI,EAAGA,EAAI+D,EAAQpE,OAAQK,IACpB,QAAd+D,EAAQ/D,IAAoB+D,EAAQ/D,GACpC+D,EAAQ/D,GAAQ,IAAIA,EAAI,EAG1B2T,GAAY,kBAAM5P,CAAO,IACzB1C,GAAU,GACV5M,YAAW,WACT4M,GAAU,EACZ,GAAG,IACL,GACF,EAKA,IAA4BpO,EAAAA,EAAAA,UAAS,IAAG,iBAAjC6D,GAAM,MAAEC,GAAS,MAElBwtC,GAAU,2CAAG,oGACXzwC,IAAM,CACVC,OAAQ,MACRC,IAAKjB,EAAO,sCAEXoB,MAAK,SAACwrC,GACL,IAAI7oC,EAAS,GACT3H,EAAOwwC,EAASxwC,KACpBA,EAAKwQ,OAAS,GACZxQ,EAAKwB,SAAQ,SAAC6E,GACZ,IAAIgvC,EAAY,CACdx2C,MAAOwH,EAAEwI,UACT3G,MAAO7B,EAAE1H,IAEXgJ,EAAOjG,KAAK2zC,EACd,IACFztC,GAAU5H,EACZ,IACCmF,OAAM,SAACC,GAAK,OAAKU,QAAQC,IAAIX,EAAM,IAAE,KAAD,sCACxC,kBAnBe,oCAoBhBhF,EAAAA,EAAAA,YAAU,WACRg1C,IACF,GAAG,IAEH,IAOA,IAAwCtxC,EAAAA,EAAAA,UAAS,IAAG,iBAA7CwxC,GAAY,MAAEC,GAAe,MAI9B3yB,GAAW,SAACxB,GAChB,GAAkC,KAA9BA,EAAQ2zB,mBAAiD,KAArB3zB,EAAQwZ,SAC9ClW,GAAmB,OACd,CACL,IAAMlQ,EAAU1J,IAAOsW,EAAQwZ,UAAU5vB,OAAO,cAC1CwqC,EAAa1qC,IAAOsW,EAAQyZ,gBAAgB7vB,OAAO,cAE/BF,IAAOwqC,IAActqC,OAAO,cAEtDrG,IAAM,CACJC,OAAQ,OACRC,IAAKjB,EAAO,yCACZ5D,KAAM,CACJrB,GAAIyiB,EAAQziB,GACZ2nB,WAAYlF,EAAQkF,WACpByuB,kBAAmB3zB,EAAQ2zB,kBAC3Bna,SAAUpmB,EACV+kB,SACuB,IAArBnY,EAAQtT,gBACa3E,GAArBiY,EAAQtT,WACa,MAArBsT,EAAQtT,UACJ,IACAsT,EAAQtT,UACd7E,SACsB,IAApBmY,EAAQnY,SAAsC,GAAKmY,EAAQnY,SAC7D+rC,eAA0C,GAA1B5zB,EAAQ4zB,eAAyB,EAAI,EACrDna,eACuB,KAArBzZ,EAAQtT,UACJhD,IAAOwqC,IAActqC,OAAO,cAC5BF,IAAO0qC,GAAYC,WACJ,iBAAfD,EACEA,EAEF,GAEN/M,OAAQrnB,EAAQqnB,UAEjBzjC,MAAK,SAACI,GAEPM,KACAgf,GAAmB,GACnB3d,GAAU,GACVzB,YAAW,WACTyB,GAAU,EACZ,GAAG,KAEHzB,YAAW,WACT4M,GAAU,EACZ,GAAG,IACL,IACA2S,GAAkB,GAClBC,IAAS,EACX,CACF,EAaA,IAA8BhhB,EAAAA,EAAAA,UAAS,IAAG,iBAAnC0a,GAAO,MAAEC,GAAU,MAC1B,IAAsC3a,EAAAA,EAAAA,UAAS,IAAG,iBAA9BmP,IAAF,MAAgB,QA0BlC7S,EAAAA,EAAAA,YAAU,WAZRuE,IAAM,CACJC,OAAQ,MACRC,IACEjB,EAAO,4DAC8C3D,KAEtD+E,MAAK,SAAUC,GACd,IAAIC,EAAOD,EAASjF,KACpBiT,GAAe/N,EACjB,IACCC,OAAM,SAAUF,GAAW,IArB9BN,IAAM,CACJC,OAAQ,MACRC,IAAKjB,EAAO,oDAAgD3D,KAE3D+E,MAAK,SAAUC,GACd,IAAIC,EAAOD,EAASjF,KACpBye,GAAWvZ,EACb,IACCC,OAAM,SAAUF,GAAW,GAkBhC,GAAG,IAEH,QAA8BnB,EAAAA,EAAAA,YAAU,iBAAjCkE,GAAO,MACd,IAD0B,OACAlE,EAAAA,EAAAA,WAAS,IAAM,iBAAlCkN,GAAK,MAAE8T,GAAQ,OACtB1kB,EAAAA,EAAAA,YAAU,WAAO,GAAG,CAACk1C,MA4BrBl1C,EAAAA,EAAAA,YAAU,WAAO,GAAG,CAACkJ,KAErB,QAA0BxF,EAAAA,EAAAA,UAAS,IAAG,iBAAxB01B,IAAF,MAAU,OA0DtB,IAA8B11B,EAAAA,EAAAA,YAAU,iBA4OxC,IA5Oc,MAAY,OA4OcA,EAAAA,EAAAA,aAAU,iBAA3C4xC,GAAY,MAuCbC,IAvC8B,MAuChB,SAAChuC,GACnB,OAAQA,GACN,IAAK,cACH,MAAO,cACT,IAAK,UACH,MAAO,UACT,IAAK,YACH,MAAO,YACT,QACE,MAAO,GAEb,GACMiuC,GAAqB,SAACC,GAC1B,OACE,SAAC,KAAG,CACF3tC,MAAO2tC,EACPr4C,MAAO,CAAEylB,gBAAiB,QAASjW,MAAO,SAC1C0J,SAAUi/B,GAAYE,IAG5B,EACA,IAAsC/xC,EAAAA,EAAAA,UAAS,SAAQ,iBAAhDgyC,GAAW,MAAEC,GAAc,MAClC,IAAmBjyC,EAAAA,EAAAA,UAAS,CAAC,QAAS,cAAe,YAAa,YAA3DkyC,IAAsE,aAA9D,GACf,IAAwClyC,EAAAA,EAAAA,UAASygB,GAAS,iBAAnDuE,GAAY,MAAEmtB,GAAe,MAwDpC,IAAwCnyC,EAAAA,EAAAA,UAAS,CAC/CqiB,QAAS,CACPP,OAAQ,CAAE1d,MAAO,KAAM2d,UAAWC,EAAAA,GAAAA,UAClC8U,SAAU,CAAE1yB,MAAO,KAAM2d,UAAWC,EAAAA,GAAAA,aAEtC,iBAIF,IATmB,MAAiB,OASUhiB,EAAAA,EAAAA,UAAS,KAAG,iBAAnDoyC,GAAe,MAEhBC,IAFoC,OAEpBC,EAAAA,EAAAA,UAAQ,WAC5B,OAAIF,GACK3xB,EAAS/jB,QACd,SAACC,GAAI,OACH,IAAI4G,KAAK5G,EAAKm6B,UAAUyb,YACxB,IAAIhvC,KAAK6uC,IAAiBG,SAAS,IAGhC,EAEX,GAAG,CAACH,MAEEI,IAAgBF,EAAAA,EAAAA,UAAQ,WAC5B,OAAOF,GAAkBC,GAAgB,EAC3C,GAAG,CAACD,GAAiBC,KAErB,IAA4CryC,EAAAA,EAAAA,UAAS,IAAG,iBAAjDyyC,GAAc,MAAEC,GAAiB,OAExCp2C,EAAAA,EAAAA,YAAU,WAAO,IAAD,EACV81C,IAA4C,IAAzBI,GAAc9lC,OACnCgmC,GAAkB,eAElBF,GAAc9lC,OAAS,QACQrH,KAAf,QAAhB,EAAAmtC,GAAc,UAAE,aAAhB,EAAkB1b,UAElB4b,GAAkB,WAElBA,GAAkB,GAEtB,GAAG,CAACN,GAAiBI,KACrB,QAAwCxyC,EAAAA,EAAAA,UAAS,CAC/CqiB,QAAS,CACPP,OAAQ,CAAE1d,MAAO,KAAM2d,UAAWC,EAAAA,GAAAA,UAClC+U,eAAgB,CAAE3yB,MAAO,KAAM2d,UAAWC,EAAAA,GAAAA,aAE5C,iBACF,IANmB,MAAiB,OAMoBhiB,EAAAA,EAAAA,UAAS,KAAG,iBAA7D2yC,GAAoB,MAKrBC,IAL8C,OAKnBN,EAAAA,EAAAA,UAAQ,WACvC,OAAIK,GACKlyB,EAAS/jB,QACd,SAACC,GAAI,OACH,IAAI4G,KAAK5G,EAAKo6B,gBAAgBwb,YAC9B,IAAIhvC,KAAKovC,IAAsBJ,SAAS,IAGrC,EAEX,GAAG,CAACI,MAEEE,IAAgBP,EAAAA,EAAAA,UAAQ,WAC5B,OAAOK,GAAuBC,GAA2B,EAC3D,GAAG,CAACD,GAAsBC,KAC1B,IAA0D5yC,EAAAA,EAAAA,UAAS,IAAG,iBAA/D8yC,GAAqB,MAAEC,GAAwB,MActD,OAZAz2C,EAAAA,EAAAA,YAAU,WAAO,IAAD,EACVq2C,IAAiD,IAAzBE,GAAcnmC,OACxCqmC,GAAyB,uBAEzBF,GAAcnmC,OAAS,QACcrH,KAArB,QAAhB,EAAAwtC,GAAc,UAAE,aAAhB,EAAkB9b,gBAElBgc,GAAyB,mBAEzBA,GAAyB,GAE7B,GAAG,CAACJ,GAAsBE,MAExB,gCACG3vC,GACC,gBAAKrE,UAAU,oBAAmB,UAChC,kBAAMA,UAAU,SAAQ,WACtB,SAAC,MAAO,CAACuB,KAAK,QAAQ4yC,YAAa,CAAEr5C,MAAO,WAAc,IAAI,wCAKlE,GACC,IACFmU,GACC,gBAAKjP,UAAU,oBAAmB,UAChC,kBAAMA,UAAU,SAAQ,WACtB,SAAC,MAAO,CAACuB,KAAK,QAAQ4yC,YAAa,CAAEr5C,MAAO,WAAa,0CAK7D,GAEDgnB,GACC,gBAAK9hB,UAAU,kBAAiB,UAC9B,6BACE,SAAC,MAAa,IAAG,+DAKrB,IAEF,gBAAKA,UAAU,aAAY,UACzB,iBAAKA,UAAU,YAAW,WACxB,gBAAKA,UAAU,WAAU,UACvB,wBAAK6b,QAEP,gBAAK7b,UAAU,WAAU,UACvB,wBAAI,kBAEN,gBAAKA,UAAU,qBAGnB,SAACoT,EAAA,EAAiB,CAChBxC,OAAQA,GACRyC,kBAv0BkB,CAAC,WAAY,OAAQ,aAAc,iBAy0BvD,gBAAKrT,UAAU,2BAA0B,UACvC,UAAC,IAAS,CACRA,UAAU,mCACVuF,MACE4gB,GAAatY,OAAS,EAClBsY,GACmB,YAAnBytB,IACmB,gBAAnBA,IACAA,GAAe/lC,OAAS,EACxB8lC,GAC0B,oBAA1BM,IAC0B,wBAA1BA,IACAA,GAAsBpmC,OAAS,EAC/BmmC,GACApyB,EAENpC,SAAS,MACTM,kBA1rBkB,SAACpc,GACzB,IAAI2iB,GAAS,OAAOzE,GACd5B,EAAmBtc,EAAnBsc,QACNqG,EADyB3iB,EAAVoK,OACIkS,EACnB6B,EAAYwE,GACZpG,GAASvc,EAAEsc,QACb,EAqrBQP,eAAa,EACbC,aAAa,gBACbC,gBAAgB,OAChBC,WAAS,EACTtS,KAAM,GACNokC,WAAY,CAAEC,SAAU,OAAQ72C,MAAO,QACvC22C,UAAQ,EACRhrB,QAAQ,KACRjD,QAASA,EAAQA,QACjB8hB,kBAAmB,EACnBllB,mBAAoB,CAAC,GAAI,GAAI,IAC7BmlB,6BAA8B,CAAC,EAAG,GAAI,GAAI,IAC1CqM,cAAc,MACdC,mBAAoB,CAClB,oBACA,YACA,SACA,WACA,iBACA,YAEFrM,2BAA4B,CAC1BjJ,gBAAiB,oBACjBC,mBAAoB,UAEtBtc,kBAAkB,6FAClBC,0BAA0B,2CAA0C,WAEpE,SAAC,IAAM,CAAChW,OAAO,OAAOyI,MAAM,MAAMD,KAx1BxB,SAAC8L,EAASiU,GAC1B,IACMof,EADQlwB,EAASzjB,QAAQsgB,GACX,EACpB,OAAO,0BAAOqzB,GAChB,KAq1BQ,SAAC,IAAM,CACLl/B,MAAM,oBACNzI,QACE,4BAAM,cACM,iBAAMnK,UAAU,aAAY,SAAC,SAG3C0S,UAAQ,EACRC,KA3jBkB,SAAC8L,GAC3B,OACE,+BACE,kBACEziB,GAAG,oBACH2F,MAAO8c,EAAQ2zB,kBACf7sC,MAAOkZ,EAAQ2zB,kBACf1wC,KAAK,OACLylB,aAAa,MACbrb,UAAQ,EACRT,UAAQ,EACRrL,UAAU,cAIlB,EA6iBUqgB,OAAQ,SAAC7hB,GAAO,OAllBE,SAACojB,GAG3B,OAFAiV,GAASjV,EAASnD,QAAQziB,KAGxB,+BACE,kBACE0F,KAAK,OACL1F,GAAG,oBACHgE,UAAS,gBACP8hB,IAAoBF,EAASnD,QAAQ2zB,kBACjC,cACA,IAEN7sC,MAAOqc,EAASnD,QAAQ2zB,kBACxB7mC,SAAU,SAAC7H,GACTke,EAASmF,eAAerjB,EAAEmH,OAAOtF,MACnC,KAIR,CA8jB+B6uC,CAAoB51C,EAAQ,EACjD0tC,YAAa,SACbruC,QAAM,EACNm0C,gBAAgB,cAElB,SAAC,IAAM,CACLp/B,MAAM,WACNzI,QACE,4BAAM,aACK,iBAAMnK,UAAU,aAAY,SAAC,SAG1C0S,UAAQ,EACRw5B,YAAa,SACbruC,QAAM,EACNm0C,gBAAgB,WAChBr/B,KA3jBgB,SAAC8L,GACzB,OACE,+BACE,kBACEziB,GAAG,WACHuJ,MAAOkZ,EAAQwZ,SACfv2B,KAAK,OACLC,MAAO8c,EAAQwZ,SACf9Q,aAAa,MAEbrb,UAAQ,EACRT,UAAQ,KAIhB,EA6iBUgV,OAAQ,SAAC7hB,GAAO,OA1iBJ,SAACojB,EAAUpjB,GAC/B,OACE,SAAC,IAAU,CACTgF,KAAK,WACL2I,SAAU9G,GACVrJ,GAAG,WACHgE,UAAS,gBACP8hB,IAAoBF,EAASnD,QAAQwZ,SAAW,cAAgB,IAElE1yB,MAAOqc,EAASnD,QAAQwZ,SACxB3rB,WAAW,cACX6a,aAAa,MACb5a,mBAAiB,EACjBC,kBAAgB,EAChBjB,SAAU,SAAC7H,GACTke,EAASmF,eAAe5e,IAAOzE,GAAG2E,OAAO,gBACvCzB,IAAgB,SAAC/C,GAAI,yBAChBA,GAAI,cACN,WAAasE,IAAOzE,GAAG2E,OAAO,eAAa,GAElD,EACAuD,UAAW,SAAClI,GACVA,EAAEwH,gBACJ,GAGN,CAghB+BmpC,CAAc71C,EAAQ,KAE7C,SAAC,IAAM,CACLoU,MAAM,SACNzI,OAAO,SACPtM,QAAQ,EACRquC,YAAY,SACZoI,gBAAgB,EAChBnB,YAAaA,GACbzgC,UAAQ,EACR2N,OAAQ,SAAC7hB,GAAO,OAxhBE,SAACojB,EAAUnD,GACrC,OACE,oBACEziB,GAAG,YACHwH,KAAK,SACLxD,UAAU,SACVuL,SAAU,SAAC7H,GACTke,EAASmF,eAAerjB,EAAEmH,OAAOtF,OAEjCqtC,GACoB,KAAlBlvC,EAAEmH,OAAOtF,MACL4C,IAAO,IAAIzD,MAAQ2D,OAAO,eAC1B,IAGNrD,GAAOzI,KAAI,SAACyB,GACNA,EAAEhC,IAAM0H,EAAEmH,OAAOtF,QACnBqc,EAAkB,QAAU,OAAI5jB,EAAEkO,UAClC0V,EAAkB,QAAa,UAAIle,EAAEmH,OAAOtF,MAEhD,GACF,EAAE,WAEF,mBAAQA,MAAM,MAAK,SAAE,sBACd,OAANP,SAAM,IAANA,QAAM,EAANA,GAAQzI,KAAI,SAAC0P,EAAM6B,GAAK,OACvB,mBAEEvI,MAAO0G,EAAKjQ,GACZmQ,SAAUF,EAAKjQ,IAAM4lB,EAASnD,QAAQtT,UAAyB,SAE9Dc,EAAKC,WAJD4B,EAKE,MAIjB,CAqf+BymC,CAAoB/1C,EAAQ,EACjDmU,KA9ckB,SAAC8L,GAC3B,IAAM+1B,EAAc/1B,EAAQlN,OAE5B,GAAoB,OAAhB4hC,IAAwC,UAAhBA,GAC1B,OACE,+BACE,kBACEn3C,GAAG,SACHuJ,MAAOivC,EACP9yC,KAAK,OACLC,MAAO6yC,EACP1oC,UAAQ,EACRT,UAAQ,MAIT,GAAImpC,IAAgBrB,GAAa,CACjBvxB,EAAS/jB,QAAO,SAACC,GACpC,OAAOA,EAAKyT,SAAW4hC,EACzB,IACA,OACE,+BACE,kBACEn3C,GAAG,SACHuJ,MAAO4tC,GACPzxC,KAAK,OACLC,MAAOwxC,GACPrnC,UAAQ,EACRT,UAAQ,KAIhB,CACE,OAAO,IAEX,EA4aUopC,gBAAiB,CAAE35C,MAAO,SAC1B45C,cA7QsB,SAACl2C,GAC/B,OACE,SAAC,KAAQ,CACP+G,MAAO4tC,GACP30C,QAAS60C,GACT9nC,SAAU,SAAC7H,GACT,IAAMuyB,EAAgBvyB,EAAE6B,MAExB,GADA6tC,GAAend,GACO,UAAlBA,EACFqd,GAAgB1xB,OACX,CACL,IAAM4xB,EAAgB5xB,EAAS/jB,QAC7B,SAACC,GAAI,OAAKA,EAAKyT,SAAW0kB,CAAa,IAEzCqd,GAAgBE,EAClB,CACF,EACAmB,aAAc1B,GACdjzC,UAAU,kBACV40C,WAAW,EAAM,UAEjB,iBAAM50C,UAAU,6BAGtB,EAsPUuF,MAAO4gB,MAGT,SAAC,IAAM,CACLvT,MAAM,iBACNzI,OAAO,cACPuI,UAAQ,EACRw5B,YAAa,SACb2I,SAAS,UACTliC,KA7PmB,SAAC8L,GAC5B,OACE,+BACE,gBACE5jB,MAAO,CACLwE,QAAS,OACTy1C,eAAgB,SAChBx1C,WAAY,UACZ,UAEF,cACEU,WAAW+0C,EAAAA,GAAAA,IAAW,KAAM,CAC1B,yCAA0Ct2B,EAAQ4zB,eAClD,4CACG5zB,EAAQ4zB,sBAMvB,EA0OUx0C,QAAM,EACN62C,cA1OwB,SAACl2C,GACjC,OACE,SAAC,KAAgB,CACf+G,MAAO/G,EAAQ+G,MACfgG,SAAU,SAAC7H,GAAC,OAAKlF,EAAQw2C,oBAAoBtxC,EAAE6B,MAAM,GAG3D,EAoOU8a,OAAQ,SAAC7hB,GAAO,OAngBN,SAACojB,GACnB,IAAMqzB,EAAmD,GAAnCrzB,EAASnD,QAAQ4zB,eAAyB,EAAI,EAEpE,OACE,gBACEx3C,MAAO,CACLwE,QAAS,OACTy1C,eAAgB,SAChBx1C,WAAY,UACZ,UAEF,kBACEoC,KAAK,WACL1F,GAAG,iBACHwH,KAAK,iBACLkkC,eAAgBuN,EAChB1pC,SAAU,SAAC7H,GAAC,OAAKke,EAASmF,eAAerjB,EAAEmH,OAAOqC,QAAU,EAAI,EAAE,KAI1E,CA+e+BgoC,CAAY12C,EAAQ,KAI3C,SAAC,IAAM,CACLoU,MAAM,SACNzI,OAAO,WACPuI,UAAQ,EACRw5B,YAAa,SACbv5B,KAtfe,SAAC8L,GACxB,IAAM02B,EAAc12B,EAAQqnB,OAC5B,OACE,+BACE,kBACE9pC,GAAG,SACHuJ,MAAO4vC,EACPzzC,KAAK,OACLC,MAAOwzC,EACPrpC,UAAQ,EACRT,UAAQ,KAIhB,EAyeUgV,OAAQ,SAAC7hB,GAAO,OAlcD,SAACojB,GACxB,IAAMuzB,EAAcvzB,EAASnD,QAAQqnB,OAUrC,OACE,+BACE,kBACEpkC,KAAK,OACL1F,GAAG,SACHmrB,aAAa,MACb5hB,MAAO4vC,EACP5pC,SAAU,SAAC7H,GAAC,OAAKke,EAASmF,eAAerjB,EAAEmH,OAAOtF,MAAM,EACxD6vC,WAhBiB,SAAC1xC,GACtB,IAAMiJ,EAAUjJ,EAAEiJ,SAAWjJ,EAAE2xC,MACzBC,EAAWx5C,OAAOy5C,aAAa5oC,GACvB,WACH1B,KAAKqqC,IACd5xC,EAAEwH,gBAEN,KAaF,CA2a+BsqC,CAAiBh3C,EAAQ,EAE9CX,QAAQ,EACR43C,eAAgB,SAAClwC,EAAO1H,GACtB,OAAKA,GAIiBA,EAAOoc,MAAM,KACd6vB,OAAM,SAACoJ,GAC1B,QAAIA,EAAO/V,aAAe53B,EAAM43B,WAAW+V,EAAO/V,iBAI9C+V,EAAOwC,WAAanwC,EAAMmwC,SAASxC,EAAOwC,cAI1CxC,EAAOtX,WAAar2B,EAAM6I,SAAS8kC,EAAOtX,WAKhD,GACF,KAGF,SAAC,IAAM,CACLhpB,MAAM,aACNzI,OAAO,UACPuI,UAAQ,EACRw5B,YAAa,SACbv5B,KAzckB,SAAC8L,GAC3B,OACE,+BACE,kBACEziB,GAAG,aACHuJ,MAAOkZ,EAAQ6zB,WACf5wC,KAAK,OACLylB,aAAa,MAEbrb,UAAQ,EACRT,UAAQ,KAIhB,EA6bUxN,QAAQ,EACR43C,eAAgB,SAAClwC,EAAO1H,GACtB,OAAKA,GAIiBA,EAAOoc,MAAM,KACd6vB,OAAM,SAACoJ,GAC1B,QAAIA,EAAO/V,aAAe53B,EAAM43B,WAAW+V,EAAO/V,iBAI9C+V,EAAOwC,WAAanwC,EAAMmwC,SAASxC,EAAOwC,cAI1CxC,EAAOtX,WAAar2B,EAAM6I,SAAS8kC,EAAOtX,WAKhD,GACF,KAGF,SAAC,IAAM,CACLhpB,MAAM,iBACNzI,OAAO,iBACPuI,UAAQ,EACRw5B,YAAa,SACbv5B,KAzdsB,SAAC8L,GAE/B,OADApO,EAAUoO,EAAQziB,KAEhB,+BACE,kBACEA,GAAG,iBACHuJ,MAAOkZ,EAAQ8zB,eACf7wC,KAAK,OACLC,MAAO8c,EAAQ8zB,eACfprB,aAAa,MAEbrb,UAAQ,EACRT,UAAQ,KAIhB,EA2cUxN,QAAQ,EACR43C,eAAgB,SAAClwC,EAAO1H,GACtB,OAAKA,GAIiBA,EAAOoc,MAAM,KACd6vB,OAAM,SAACoJ,GAC1B,QAAIA,EAAO/V,aAAe53B,EAAM43B,WAAW+V,EAAO/V,iBAI9C+V,EAAOwC,WAAanwC,EAAMmwC,SAASxC,EAAOwC,cAI1CxC,EAAOtX,WAAar2B,EAAM6I,SAAS8kC,EAAOtX,WAKhD,GACF,KAGF,SAAC,IAAM,CACLhpB,MAAM,iBACNzI,OAAO,iBACPuI,UAAQ,EACRw5B,YAAa,SACbruC,QAAM,EACNm0C,gBAAgB,WAChBr/B,KAzegB,SAAC8L,GAEzB,OADApO,EAAUoO,EAAQziB,KAEhB,+BACE,kBACEA,GAAG,iBACHuJ,MAAOkZ,EAAQyZ,eACfx2B,KAAK,OACLC,MAAO8c,EAAQyZ,eACf/Q,aAAa,MAEbrb,UAAQ,EACRT,UAAQ,KAIhB,EA0dUgV,OAAQ,SAAC7hB,GAAO,OArcK,SAACojB,EAAUpjB,GACxC,OACE,SAAC,IAAU,CACTgF,KAAK,iBACL2I,SAAU4mC,GACV/2C,GAAG,iBACHuJ,MACEotC,GAAa9kC,OAAS,EAClB8kC,GACA/wB,EAASnD,QAAQyZ,eAEvB5rB,WAAW,cACXf,SAAU,SAAC7H,GACTke,EAASmF,eAAe5e,IAAOzE,GAAG2E,OAAO,gBACvCzB,IAAgB,SAAC/C,GAAI,yBAChBA,GAAI,cACN,iBAAmBsE,IAAOzE,GAAG2E,OAAO,eAAa,GAExD,EACAuD,UAAW,SAAClI,GACVA,EAAEwH,gBACJ,GAGN,CA6a+ByqC,CAAuBn3C,EAAQ,KAatD,SAAC,IAAM,CACLoU,MAAM,WACNzI,OAAO,WACPuI,UAAQ,EACRw5B,YAAa,SACbv5B,KA1eW,SAAC8L,GAEpB,OADApO,EAAUoO,EAAQziB,KAEhB,+BACE,kBACEA,GAAG,WACHuJ,MAAOkZ,EAAQnY,SACf5E,KAAK,OACLC,MAAO8c,EAAQnY,SACf6gB,aAAa,MACbrb,UAAQ,EACRT,UAAQ,EACRrL,UAAU,cAIlB,EA2dUqgB,OAAQ,SAAC7hB,GAAO,OA9bC,SAACojB,GAC1B,OACE,+BACE,qBACElgB,KAAK,OACL1F,GAAG,WACHuJ,MAAOqc,EAASnD,QAAQnY,SACxBiF,SAAU,SAAC7H,GAAC,OAAKke,EAASmF,eAAerjB,EAAEmH,OAAOtF,MAAM,KAIhE,CAmb+B2sC,CAAmB1zC,EAAQ,EAEhDX,QAAQ,EACR43C,eAAgB,SAAClwC,EAAO1H,GACtB,OAAKA,GAIiBA,EAAOoc,MAAM,KACd6vB,OAAM,SAACoJ,GAC1B,QAAIA,EAAO/V,aAAe53B,EAAM43B,WAAW+V,EAAO/V,iBAI9C+V,EAAOwC,WAAanwC,EAAMmwC,SAASxC,EAAOwC,cAI1CxC,EAAOtX,WAAar2B,EAAM6I,SAAS8kC,EAAOtX,WAKhD,GACF,IAYwB,GAAzBjtB,EAAU,GAAGC,WACZ,SAAC,IAAM,CACL4Y,UAAW,WACT,OAAO,yBAAM,QACf,EACArd,OAAO,SACPoW,UAAW,CAAEC,UAAW,UACxB3lB,MAAO,CAAEC,MAAO,QAChB6G,MAAM,4BAKW,IAAd,OAAVqP,QAAU,IAAVA,OAAU,EAAVA,EAAYpC,WACX,iBAAK5O,UAAU,uDAAsD,WACnE,oBACEA,UAAU,kBACVqL,SAAUgD,GACV1M,MAAO,cACPC,QAAS,YAl1BA,WACP+L,SAASC,uBACjB,gDACA,GAEEgR,QAECvQ,KACH8T,IAAS,GACTD,GAAkB,IAEpB,IAAM7kB,EAAO,CACXsmB,WAAYrmB,EACZ80C,kBAAmB,GACnB7gC,OAAQ,GACR0mB,SAAU,GACV3xB,SAAU,GACV+rC,eAAgB,EAChBna,eAAgB,GAChB4N,OAAQ,GAGNznB,EAAK,GACTA,EAAGtf,KAAK1B,GACRwkB,EAAY,GAAD,OAAKxD,GAAG,OAAIuD,IACzB,CA0zBYg0B,EACF,EAAE,WAEF,SAAC,MAAM,IAAG,UAIZ,oBACE51C,UAAU,kBACVqL,SAAU4W,EACVtgB,MAAO,WACPC,QAAS,YA74BN,WAAO,IAAD,EAEuD,QADxE,EAAA+L,SACGC,uBAAuB,4CAA4C,UAAE,OADxE,EAEIgR,OACN,CA04BYG,EACF,EAAE,WAEF,SAAC,MAAM,IAAG,YAEZ,oBACE/e,UAAU,oBACVqL,SAAU4W,EACVtgB,MAAO,qBACPC,QAAS,YAj5BL,WAAO,IAAD,EAClBmgB,GAAmB,GAC6C,QAAhE,EAAApU,SAASC,uBAAuB,8BAA8B,UAAE,OAAhE,EAAkEgR,OACpE,CA+4BYgC,EACF,EAAE,WAEF,SAAC,MAAO,CAAChmB,SAAU,SAAU,gBAIjC,GAED0U,GAAS,SAACiE,EAAA,EAAM,CAACC,YAjgCF,WAClBtC,GAAgBzF,SAAWyF,GAAgBzF,QAAQgI,QACnDlE,GAAU,EACZ,IA8/BqD,KAGvD,CCtNA,OAh/BA,SAA6B7U,GAC3B,IAAQ4C,EAAyB5C,EAAzB4C,UAAWqR,EAAcjU,EAAdiU,UACbqC,EAAarC,EAAUsC,MAC3B,SAACnT,GAAI,MAA2B,iBAAtBA,EAAKiT,YAA+B,IAG1C9P,EAAUC,EAAAA,EAAAA,QAChB,GAAgCC,EAAAA,EAAAA,UAAS,IAAG,eAArCygB,EAAQ,KAAEC,EAAW,KAC5B,GAAgC1gB,EAAAA,EAAAA,UAAS,IAAG,eAArC+kC,EAAQ,KAAE6G,EAAW,KAC5B,GAAgC5rC,EAAAA,EAAAA,UAAS,IAAG,eAArC00C,EAAQ,KAAEC,EAAW,KAC5B,GAAoC30C,EAAAA,EAAAA,YAAU,eAAvCmrB,EAAU,KACjB,GADgC,MACInrB,EAAAA,EAAAA,aAAU,eAAvCorB,EAAU,KACjB,GADgC,MACIprB,EAAAA,EAAAA,UAAS,KAAG,eAAzC40C,EAAU,KAAEC,EAAa,KAChC,GAA0B70C,EAAAA,EAAAA,UAAS,IAAG,eAAxB01B,GAAF,KAAU,MACtB,GAA8B11B,EAAAA,EAAAA,UAAS,IAAG,eAAnC0a,EAAO,KAAEC,EAAU,KAC1B,GAAsC3a,EAAAA,EAAAA,UAAS,IAAG,eAA9BmP,IAAF,KAAgB,MAElC,IAA4BnP,EAAAA,EAAAA,UAAS,IAAG,iBAAjC6D,GAAM,MAAEC,GAAS,MACxB,IAAgC9D,EAAAA,EAAAA,UAAS,IAAG,iBAArC8S,GAAQ,MAAEC,GAAW,MAC5B,IAAwB/S,EAAAA,EAAAA,UAAS,IAAG,iBAA7BO,GAAI,MAAEuO,GAAO,MACpB,IAA4C9O,EAAAA,EAAAA,WAAS,GAAK,iBAAnD8gB,GAAc,MAAEC,GAAiB,MACxC,IAA0B/gB,EAAAA,EAAAA,WAAS,GAAM,iBAAlCkN,GAAK,MAAE8T,GAAQ,MACtB,IAA8ChhB,EAAAA,EAAAA,WAAS,GAAM,iBAAtD2gB,GAAe,MAAEC,GAAkB,MAC1C,IAAoC5gB,EAAAA,EAAAA,WAAS,GAAM,iBAA5C6f,GAAU,MAAEC,GAAa,MAChC,IAAiC9f,EAAAA,EAAAA,WAAS,GAAM,iBAAzC8N,GAAO,MAAEmmB,GAAa,MAEvBt0B,GAAeC,aAAaC,QAAQ,SAa1C,IAAwCG,EAAAA,EAAAA,UAZlB,CACpBnF,GAAI,GACJi6C,gBAAiB,GACjBC,KAAM,GACNr/B,SAAU,GACVg/B,SAAU,GACVM,YAAa,GACbC,YAAa,GACbL,WAAY,GACZM,eAAgB,GAChB9kC,OAAQ,KAEqD,iBAAxD5K,GAAY,MAAEC,GAAe,MACpC,IAA4BzF,EAAAA,EAAAA,UAAS,IAAG,iBAAjCyP,GAAM,MAAEC,GAAS,OAIxBpT,EAAAA,EAAAA,YAAU,WACRqT,IACF,GAAG,IAEH,IAAMA,GAAW,WACf9O,IAAM,CACJC,OAAQ,MACRC,IAAKjB,EAAO,iDAA6CH,MACxDuB,MAAK,SAACE,GACIA,EAAKlF,KAEXwB,SAAQ,SAACf,GAdA,aAeRA,EAAKiT,cACPF,GAAU,CAAC/S,GAEf,GACF,GACF,EAiEM6wC,GAAW,2CAAG,oGACZ3sC,IAAM,CACVC,OAAQ,MACRC,IAAKjB,EAAO,qCAEXoB,MAAK,SAACgH,GACL,IAAIoO,EAASpO,EAAIhM,KACjB0vC,EAAYt1B,EACd,IACCjV,OAAM,SAACC,GACNU,QAAQC,IAAI,UAAYX,EAC1B,IAAG,KAAD,sCACL,kBAZgB,oCAajBhF,EAAAA,EAAAA,YAAU,WACRkxC,KA3EA3sC,IAAAA,IACOf,EAAO,2BAEXoB,MAAK,SAACwrC,GACL,IAAI7oC,EAAS,GACT3H,EAAOwwC,EAASxwC,KACpBA,EAAKwQ,OAAS,GACZxQ,EAAKwB,SAAQ,SAAC6E,GACZ,IAAIgvC,EAAY,CACdx2C,MAAOwH,EAAEwI,UACT3G,MAAO7B,EAAE1H,IAEXgJ,EAAOjG,KAAK2zC,EACd,IACFztC,GAAU5H,EACZ,IACCmF,OAAM,SAACC,GAAK,OAAKU,QAAQC,IAAIX,EAAM,IAKtCT,IAAAA,IACOf,EAAO,6BAEXoB,MAAK,SAACwrC,GACL,IAAI55B,EAAW,GACX5W,EAAOwwC,EAASxwC,KACpBA,EAAKwQ,OAAS,GACZxQ,EAAKwB,SAAQ,SAAC6E,GACZ,IAAI4yC,EAAc,CAChBp6C,MAAOwH,EAAEwI,UACT3G,MAAO7B,EAAE1H,IAEXiY,EAASlV,KAAKu3C,EAChB,IACFpiC,GAAY7W,EACd,IACCmF,OAAM,SAACC,GAAK,OAAKU,QAAQC,IAAIX,EAAM,IAItCT,IAAAA,IACOf,EAAO,yBAEXoB,MAAK,SAACwrC,GACL,IAAInsC,EAAO,GACPrE,EAAOwwC,EAASxwC,KACpBA,EAAKwQ,OAAS,GACZxQ,EAAKwB,SAAQ,SAAC6E,GACZ,IAAI6yC,EAAU,CACZr6C,MAAOwH,EAAEwI,UACT3G,MAAO7B,EAAE1H,IAEX0F,EAAK3C,KAAKw3C,EACZ,IACFtmC,GAAQ5S,EACV,IACCmF,OAAM,SAACC,GAAK,OAAKU,QAAQC,IAAIX,EAAM,GAsBxC,GAAG,IAIH,IAAMM,GAAU,WACdf,IAAM,CACJE,IACEjB,EAAO,iDACmC3D,KAC3C+E,MAAK,SAACE,GAGP,IAFA,IAAI0P,EAAU1P,EAAKlF,KAEV6Q,EAAI,EAAGA,EAAI+D,EAAQpE,OAAQK,IAClC+D,EAAQ/D,GAAgB,YACO,MAA7B+D,EAAQ/D,GAAgB,YACpB,GACA/F,IAAO8J,EAAQ/D,GAAgB,aAAG7F,OAAO,eAC/C4J,EAAQ/D,GAAgB,YACO,MAA7B+D,EAAQ/D,GAAgB,YACpB,GACA/F,IAAO8J,EAAQ/D,GAAgB,aAAG7F,OAAO,eAEjDwZ,GAAY,kBAAM5P,CAAO,GAE3B,GACF,GACAxU,EAAAA,EAAAA,YAAU,WACRsF,IACF,GAAG,IAIH,IASIyzC,GAAWruC,IAAO,IAAIzD,MAAQ2D,OAAO,cACnC4X,GAAW,SAACxB,GAChBA,EAAoB,gBACCjY,GAAnBuvC,EAAWvyC,KAAoBib,EAAoB,WAAIs3B,EAAWvyC,KACpEib,EAAwB,oBACLjY,GAAjBuvC,EAAW/5C,GAAkByiB,EAAwB,eAAIs3B,EAAW/5C,GAEtEyiB,EAAkB,cACCjY,GAAjBqvC,EAASryC,KAAoBib,EAAkB,SAAIo3B,EAASryC,KAC9Dib,EAAsB,kBACLjY,GAAfqvC,EAAS75C,GAAkByiB,EAAsB,aAAIo3B,EAAS75C,GAGnC,IAA3ByiB,EAAQw3B,iBACQ,IAAhBx3B,EAAQy3B,MACY,IAApBz3B,EAAQ5H,SAERkL,IAAmB,IAEnB/f,IAAM,CACJC,OAAQ,OACRC,IACEjB,EAAO,gCAGT5D,KAAM,CACJrB,GAAIyiB,EAAQziB,GACZsB,UAAWA,EACX8wC,SAAU,EACVqI,eAAgBh4B,EAAQw3B,gBACxBS,OAAQj4B,EAAQnE,QAChBq8B,WAAYl4B,EAAQrS,YACpBwqC,gBAC0BpwC,GAAxBiY,EAAQo4B,cACkB,IAAxBp4B,EAAQo4B,cACgB,MAAxBp4B,EAAQo4B,aACN90C,SAASjB,IAAgBiB,SAAS,GAClC0c,EAAQo4B,aACdvqB,gBACyB9lB,GAAvBiY,EAAQ03B,aACiB,IAAvB13B,EAAQ03B,aACe,MAAvB13B,EAAQ03B,YACNK,GACAruC,IAAOsW,EAAQ03B,aAAa9tC,OAAO,cACzCkkB,gBACyB/lB,GAAvBiY,EAAQ23B,aAAmD,IAAvB33B,EAAQ23B,YACxC,GACAjuC,IAAOsW,EAAQ23B,aAAa/tC,OAAO,cACzCyuC,kBAC4BtwC,GAA1BiY,EAAQs4B,gBAAyD,IAA1Bt4B,EAAQs4B,eAC3C,GACAt4B,EAAQs4B,eACdvqB,cAAe/N,EAAQ43B,eACvBzf,SAA+B,MAArBnY,EAAQtT,UAAoB,IAAMsT,EAAQtT,aAErD9I,MAAK,SAACC,GACiB,sBAAxBA,EAASjF,KAAK2H,OACVic,IAAc,GACdmU,IAAc,GAClBryB,KACAgf,IAAmB,GACnBpf,YAAW,WACTse,IAAc,GACdmU,IAAc,EAChB,GAAG,IACL,IAEAlT,IAAkB,GAClBC,IAAS,GAEb,EAGIgvB,GAAYxjC,SAASC,uBACvB,+CAEEwjC,GAAkBzjC,SAASC,uBAC7B,+CAGIyjC,GAAwB,SAACC,GAC7BtyC,OAAOwT,KAAK8+B,GAAMzyC,SAAQ,SAAC7D,GACzB,GAAI,CAAC,GAAI,UAAMwL,EAAW,KAAK4H,SAASkjC,EAAKt2C,IAG3C,OAFA6mB,EAAYD,EAAS9C,MAAM,SAC3BqD,IAAS,SAACte,GAAI,OAAMA,CAAI,GAG5B,GACF,EAoeA,OAleApG,EAAAA,EAAAA,YAAU,WAAO,IAAD,MACV6zC,EAAO1vB,EAAS,GACR,QAAZ,EAAAuvB,GAAU,UAAE,OAAZ,EAActyB,iBAAiB,SAAS,WACtCwyB,GAAsBC,EACxB,IAEkB,QAAlB,EAAAF,GAAgB,UAAE,OAAlB,EAAoBvyB,iBAAiB,SAAS,WAC5CwyB,GAAsBC,EACxB,IAEoC,KAArB,QAAX,EAAA1vB,EAAS,UAAE,aAAX,EAAaq0B,mBACftoC,SAASC,uBAAuB,4BAA4B,GAAGgR,QAE/Djc,YAAW,WAAO,IAAD,EAG2C,QAF1D,EAAAgL,SAEGC,uBAAuB,8BAA8B,UAAE,OAF1D,EAGIiR,iBACA,SAEA,SAAUnb,GAAI,IAAD,EACyB,KAArB,QAAX,EAAAke,EAAS,UAAE,aAAX,EAAaq0B,mBACfp0B,EAAYD,EAAS9C,MAAM,EAAG8C,EAAS/T,SACvCqU,IAAkB,GAClBC,IAAS,GACTJ,IAAmB,GAEvB,IAEA,EAEN,GAAG,KAEP,GAAG,CAACH,KAgCJnkB,EAAAA,EAAAA,YAAU,WAbRuE,IAAM,CACJC,OAAQ,MACRC,IACEjB,EAAO,4DAC8C3D,KAEtD+E,MAAK,SAAUC,GACd,IAAIC,EAAOD,EAASjF,KACpBiT,GAAe/N,EACjB,IACCC,OAAM,SAAUF,GAAY,IAxB/BN,IAAM,CACJC,OAAQ,MACRC,IAAKjB,EAAO,oDAAgD3D,KAE3D+E,MAAK,SAAUC,GACd,IAAIC,EAAOD,EAASjF,KACpBye,EAAWvZ,EACb,IACCC,OAAM,SAAUF,GAAY,GAsBjC,GAAG,KAOH7E,EAAAA,EAAAA,YAAU,WACV,GAAG,CAACkJ,MAuZF,gCACGmb,IACC,gBAAK9hB,UAAU,kBAAiB,UAC9B,6BACE,SAAC,MAAa,IAAG,OAEhB,0DAIL,GAEDghB,IACC,iBAAKhhB,UAAU,oBAAmB,WAChC,SAAC,MAAO,IACP,oCAGH,GAEDiP,IACC,gBAAKjP,UAAU,oBAAmB,UAChC,kBAAMA,UAAU,SAAQ,WACtB,SAAC,MAAO,CAACuB,KAAK,QAAQ4yC,YAAa,CAAEr5C,MAAO,WAC3C,wCAIL,IAEF,iBAAKkF,UAAU,YAAW,WACxB,gBAAKA,UAAU,WAAU,UACvB,wBACG6b,OAGL,gBAAK7b,UAAU,WAAU,UACvB,wBAAI,oBAEN,gBAAKA,UAAU,mBAEjB,SAACoT,EAAA,EAAiB,CAChBxC,OAAQA,GACRyC,kBAvvBkB,CAAC,WAAY,OAAQ,aAAc,kBAwvBrD,QAEF,gBAAKrT,UAAU,4BAA2B,UACxC,UAAC,IAAS,CACRA,UAAU,4CACVkgB,kBAAkB,6FAClB3a,MAAOqc,EACPpC,SAAS,MACTM,kBA1nBkB,SAACpc,GACzB,IAAI2iB,GAAS,OAAOzE,GACd5B,EAAmBtc,EAAnBsc,QACNqG,EADyB3iB,EAAVoK,OACIkS,EACnB6B,EAAYwE,GACZpG,GAASvc,EAAEsc,QACb,EAqnBQ0xB,WAAY,CAAEC,SAAU,OAAQ72C,MAAO,QACvC2kB,eAAa,EACbC,aAAa,gBACbE,WAAS,EACTtS,KAAM,GACNmkC,UAAQ,EACRhrB,QAAQ,KACRrG,mBAAoB,CAAC,GAAI,GAAI,IAC7BwxB,cAAc,MACdC,mBAAoB,CAClB,kBACA,OACA,WACA,WACA,cACA,cACA,aACA,iBACA,UAEFrM,2BAA4B,CAC1BjJ,gBAAiB,oBACjBC,mBAAoB,UAEtBrc,0BAA0B,2CAA0C,WAIpE,SAAC,IAAM,CACLvN,MAAM,MACNzI,OAAO,OACPwI,KApGQ,SAAC8L,EAASiU,GAC1B,IACMof,EADQlwB,EAASzjB,QAAQsgB,GACX,EACpB,OAAO,0BAAOqzB,GAChB,EAiGUj3C,MAAO,CACL2lB,UAAW,aAMf,SAAC,IAAM,CACL5N,MAAM,kBACNzI,QACE,4BAAM,yBACiB,iBAAMnK,UAAU,aAAY,SAAC,SAGtD2S,KAtfmB,SAACtV,GAC5B,OACE,+BACE,kBACErB,GAAG,kBACH2F,MAAOtE,EAAK44C,gBACZ1wC,MAAOlI,EAAK44C,gBACZv0C,KAAK,OACLylB,aAAa,MACbrb,UAAQ,EACRT,UAAQ,EACRrL,UAAU,cAIlB,EAweUqgB,OAAQ,SAAC7hB,GAAO,OAnWG,SAACojB,GAE5B,OADAiV,EAASjV,EAASnD,QAAQziB,KAExB,+BACE,kBACEgE,UAAS,gBAAW8hB,KAAoBF,EAASnD,QAAQw3B,gBACrD,cACA,IAEJv0C,KAAK,OACL6D,MAAOqc,EAASnD,QAAQw3B,gBACxBj6C,GAAG,kBACHuP,SAAU,SAAC7H,GACTke,EAASmF,eAAerjB,EAAEmH,OAAOtF,MACnC,KAIR,CAiV+ByxC,CAAqBx4C,EAAQ,EAClDkU,UAAQ,EACR7U,QAAM,KAIR,SAAC,IAAM,CACL+U,MAAM,OACNzI,QACE,4BAAM,QACA,iBAAMnK,UAAU,aAAY,SAAC,SAGrC2S,KApfa,SAACtV,GACtB,OACE,+BACE,kBACErB,GAAG,OACH2F,MAAOtE,EAAK64C,KACZ3wC,MAAOlI,EAAK64C,KACZx0C,KAAK,OACLylB,aAAa,MACbrb,UAAQ,EACRT,UAAQ,EACRrL,UAAU,cAIlB,EAseUqgB,OAAQ,SAAC7hB,GAAO,OA7VL,SAACigB,GACpB,OACE,+BACE,oBACEziB,GAAG,UACHgE,UAAS,eAAU8hB,KAAoBrD,EAAQnE,QAAU,eAAiB,IAE1E9W,KAAK,OACL+H,SAAU,SAAC7H,GACT+a,EAAQsI,eAAerjB,EAAEmH,OAAOtF,OAEhC7D,GAAKnF,KAAI,SAACyB,GACJA,EAAEhC,IAAM0H,EAAEmH,OAAOtF,QACnBkZ,EAAiB,QAAQ,KAAIzgB,EAAEkO,UAC/BuS,EAAiB,QAAW,QAAI/a,EAAEmH,OAAOtF,MAE7C,GACF,EAAE,WAEF,mBAAQA,MAAM,GAAE,SAAE,sBACb,OAAJ7D,SAAI,IAAJA,QAAI,EAAJA,GAAMnF,KAAI,SAAC0P,EAAM6B,GAAK,OACrB,mBAEEvI,MAAO0G,EAAKjQ,GACZmQ,SAAUF,EAAKjQ,IAAMyiB,EAAQA,QAAQnE,QAAuB,SAE3DrO,EAAKC,WAJD4B,EAKE,QAKnB,CA6T+BmpC,CAAaz4C,EAAQ,EAC1CkU,UAAQ,EACR7U,QAAM,EACNm0C,gBAAgB,cAIlB,SAAC,IAAM,CACLp/B,MAAM,WACNzI,QACE,4BAAM,YACI,iBAAMnK,UAAU,aAAY,SAAC,SAGzC2S,KAlfiB,SAACtV,GAC1B,OACE,+BACE,kBACErB,GAAG,WACH2F,MAAOtE,EAAKwZ,SACZtR,MAAOlI,EAAKwZ,SACZnV,KAAK,OACLylB,aAAa,MACbrb,UAAQ,EACRT,UAAQ,EACRrL,UAAU,cAIlB,EAoeUqgB,OAAQ,SAAC7hB,GAAO,OA1UD,SAACigB,GACxB,OACE,+BACE,oBACEziB,GAAG,cACHgE,UAAS,eAAU8hB,KAAoBrD,EAAQrS,YAAc,eAAiB,IAE9E5I,KAAK,WACL+H,SAAU,SAAC7H,GACT+a,EAAQsI,eAAerjB,EAAEmH,OAAOtF,OAChC0O,GAAS1X,KAAI,SAACyB,GACRA,EAAEhC,IAAM0H,EAAEmH,OAAOtF,QACnBkZ,EAAiB,QAAY,SAAIzgB,EAAEkO,UACnCuS,EAAiB,QAAe,YAAI/a,EAAEmH,OAAOtF,MAEjD,GACF,EAAE,WAEF,mBAAQA,MAAM,GAAE,SAAE,sBACT,OAAR0O,SAAQ,IAARA,QAAQ,EAARA,GAAU1X,KAAI,SAAC0P,EAAM6B,GAAK,OACzB,mBAEEvI,MAAO0G,EAAKjQ,GACZmQ,SAAUF,EAAKjQ,IAAMyiB,EAAQA,QAAQrS,YAA2B,SAE/DH,EAAKC,WAJD4B,EAKE,QAKnB,CA2S+BopC,CAAiB14C,EAAQ,EAC9CkU,UAAQ,EACR7U,QAAM,EACNm0C,gBAAgB,cAGlB,SAAC,IAAM,CACLp/B,MAAM,WACNzI,OAAO,YACPuI,UAAQ,EACRC,KA7eiB,SAACtV,GAC1B,OACE,+BACE,kBACErB,GAAG,WACH2F,MAAOtE,EAAKw4C,SACZtwC,MAAOlI,EAAKw4C,SACZn0C,KAAK,OACLylB,aAAa,MACbrb,UAAQ,EACRT,UAAQ,EACRrL,UAAU,cAIlB,EA+dUqgB,OAAQ,SAAC7hB,GAAO,OApTP,SAACojB,GAElB,OACE,gBAAK5hB,UAAU,yBAAwB,UACrC,SAAC,EAAAqD,wBAAuB,CACtBC,MAAO4iC,EACPlqC,GAAG,eACHwH,KAAK,YACLuJ,kBAC+B,MAA7B6U,EAASnD,QAAQo3B,SAAmB,GAAKj0B,EAASnD,QAAQo3B,SAE5DpyC,SAAU,SAAC6P,GACTwiC,EAAYxiC,EACd,EACAxP,UAAU,KAIlB,CAkS+BqzC,CAAW34C,EAAQ,EACxCX,QAAM,EACNm0C,gBAAgB,cAGlB,SAAC,IAAM,CACLp/B,MAAM,cACNzI,OAAO,cACPwI,KAtemB,SAACtV,GAC5B,OACE,+BACE,kBACErB,GAAG,cACH2F,MAAOtE,EAAK84C,YACZ5wC,MAAOlI,EAAK84C,YACZz0C,KAAK,OACLylB,aAAa,MACbrb,UAAQ,EACRT,UAAQ,EACRrL,UAAU,cAIlB,EAwdUqgB,OAAQ,SAAC7hB,GAAO,OAzSJ,SAACojB,EAAUpjB,GAC/B,OACE,SAAC,IAAU,CACTgF,KAAK,cACL2I,SAAUmgB,EACVtwB,GAAG,cACHuJ,MAAOqc,EAASnD,QAAQ03B,YACxB7pC,WAAW,cACXf,SAAU,SAAC7H,GACTke,EAASmF,eAAe5e,IAAOzE,GAAG2E,OAAO,gBACvCzB,IAAgB,SAAC/C,GAAI,yBAChBA,GAAI,cACN,cAAgBsE,IAAOzE,GAAG2E,OAAO,eAAa,GAErD,EACAuD,UAAW,SAAClI,GACVA,EAAEwH,gBACJ,GAGN,CAqR+BmpC,CAAc71C,EAAQ,EAC3CkU,UAAQ,EACRs/B,gBAAgB,WAChBn0C,QAAM,KAGR,SAAC,IAAM,CACL+U,MAAM,cACNzI,OAAO,cACPwI,KAhemB,SAACtV,GAC5B,OACE,+BACE,kBACErB,GAAG,cACH2F,MAAOtE,EAAK+4C,YACZ7wC,MAAOlI,EAAK+4C,YACZ10C,KAAK,OACLylB,aAAa,MACbrb,UAAQ,EACRT,UAAQ,EACRrL,UAAU,cAIlB,EAkdUqgB,OAAQ,SAAC7hB,GAAO,OA7RH,SAACojB,EAAUpjB,GAChC,OACE,SAAC,IAAU,CACTgF,KAAK,cACL2I,SAAUogB,EACVvwB,GAAG,cACHuJ,MAAOqc,EAASnD,QAAQ23B,YACxB9pC,WAAW,cACXf,SAAU,SAAC7H,GACTke,EAASmF,eAAe5e,IAAOzE,GAAG2E,OAAO,gBACvCzB,IAAgB,SAAC/C,GAAI,yBAChBA,GAAI,cACN,cAAgBsE,IAAOzE,GAAG2E,OAAO,eAAa,GAErD,EACAuD,UAAW,SAAClI,GACVA,EAAEwH,gBACJ,GAGN,CAyQ+BksC,CAAe54C,EAAQ,EAC5CkU,UAAQ,EACR7U,QAAM,EACNm0C,gBAAgB,cAGlB,SAAC,IAAM,CACLp/B,MAAM,aACNzI,OAAO,cACPwI,KA1dmB,SAACtV,GAC5B,OACE,+BACE,kBACErB,GAAG,aACH2F,MAAOtE,EAAK04C,WACZxwC,MAAOlI,EAAK04C,WACZr0C,KAAK,OACLylB,aAAa,MACbrb,UAAQ,EACRT,UAAQ,EACRrL,UAAU,cAIlB,EA4cU0S,UAAQ,EACR2N,OAAQ,SAAC7hB,GAAO,OAlRN,SAACojB,GACnB,OACE,gBAAK5hB,UAAU,yBAAwB,UACrC,SAAC,EAAAqD,wBAAuB,CACtBC,MAAO4iC,EACPlqC,GAAG,iBACHwH,KAAK,aACLuJ,kBACiC,MAA/B6U,EAASnD,QAAQs3B,WACb,GACAn0B,EAASnD,QAAQs3B,WAEvBtyC,SAAU,SAAC6P,GACT0iC,EAAc1iC,EAChB,EACAxP,UAAU,KAIlB,CA+P+BuzC,CAAY74C,EAAQ,EACzCX,QAAM,EACNm0C,gBAAgB,cAIlB,SAAC,IAAM,CACLp/B,MAAM,iBACNzI,OAAO,sBACPwI,KArdsB,SAACtV,GAC/B,OACE,+BACE,kBACErB,GAAG,iBACH2F,MAAOtE,EAAKg5C,eACZ9wC,MAAOlI,EAAKg5C,eACZ30C,KAAK,OACLylB,aAAa,MACbrb,UAAQ,EACRT,UAAQ,EACRrL,UAAU,cAIlB,EAucUqgB,OAAQ,SAAC7hB,GAAO,OAvQM,SAACojB,GAC/B,OACE,+BACE,SAAC,KAAa,CACZrc,MAAOqc,EAASnD,QAAQ43B,eACxBr6C,GAAG,iBACHuP,SAAU,SAAC7H,GAAC,OAAKke,EAASmF,eAAerjB,EAAEmH,OAAOtF,MAAM,EACxD+H,KAAM,EACNC,KAAM,MAId,CA2P+B+pC,CAAwB94C,EAAQ,EACrDkU,UAAQ,EACR7X,MAAO,CAAEC,MAAO,SAChB+C,QAAM,KAIR,SAAC,IAAM,CACL+U,MAAM,SACNzI,OAAO,SACPwI,KAhde,SAACtV,GACxB,OACE,+BACE,kBACErB,GAAG,SACH2F,MAAOtE,EAAKkU,OACZhM,MAAOlI,EAAKkU,OACZ7P,KAAK,OACLylB,aAAa,MACbrb,UAAQ,EACRT,UAAQ,EACRrL,UAAU,cAIlB,EAkcUqgB,OAAQ,SAAC7hB,GAAO,OApQH,SAACigB,GACtB,OACE,+BACE,oBACEziB,GAAG,YACHgE,UAAU,SACVwD,KAAK,SACL+H,SAAU,SAAC7H,GACT+a,EAAQsI,eAAerjB,EAAEmH,OAAOtF,OAEhCP,GAAOzI,KAAI,SAACyB,GACNA,EAAEhC,IAAM0H,EAAEmH,OAAOtF,QACnBkZ,EAAiB,QAAU,OAAIzgB,EAAEkO,UACjCuS,EAAiB,QAAa,UAAI/a,EAAEmH,OAAOtF,MAE/C,GACF,EAAE,WAEF,mBAAQA,MAAM,GAAE,SAAE,sBACX,OAANP,SAAM,IAANA,QAAM,EAANA,GAAQzI,KAAI,SAAC0P,EAAM6B,GAAK,OACvB,mBAEEvI,MAAO0G,EAAKjQ,GACZmQ,SAAUF,EAAKjQ,IAAMyiB,EAAQA,QAAQtT,UAAyB,SAE7Dc,EAAKC,WAJD4B,EAKE,QAKnB,CAqO+BypC,CAAe/4C,EAAQ,EAC5CkU,UAAQ,EACR7U,QAAM,IAGkB,GAAzB8Q,EAAU,GAAGC,WACZ,SAAC,IAAM,CACL4Y,UAAW,WACT,OAAO,yBAAM,QACf,EACArd,OAAO,SACPoW,UAAW,CAAEC,UAAW,UACxB3lB,MAAO,CAAEC,MAAO,QAChB6G,MAAM,4BAKW,IAAd,OAAVqP,QAAU,IAAVA,OAAU,EAAVA,EAAYpC,WACX,iBAAK5O,UAAU,uDAAsD,WACnE,oBACEA,UAAU,kBACVqL,SAAUgD,GACV1M,MAAO,cACPC,QAAS,YA3PA,WACZyM,KACH8T,IAAS,GACTD,IAAkB,IAEpB,IAWI7D,EAAK,GACTA,EAAGtf,KAZU,CACXk3C,gBAAiB,GACjBC,KAAM,GACNr/B,SAAU,GACVg/B,SAAU,GACVM,YAAa,GACbC,YAAa,GACbL,WAAY,GACZM,eAAgB,GAChB9kC,OAAQ,KAIVsQ,EAAY,GAAD,OAAKxD,GAAG,OAAIuD,IACzB,CAyOYg0B,EACF,EAAE,WAEF,SAAC,MAAM,IAAG,UAIZ,oBACE51C,UAAU,kBACVqL,SAAU4W,GACVtgB,MAAO,WACPC,QAAS,YA9ON,WAAO,IAAD,EAEuD,QADxE,EAAA+L,SACGC,uBAAuB,4CAA4C,UAAE,OADxE,EAEIgR,OACN,CA2OYG,EACF,EAAE,WAEF,SAAC,MAAM,IAAG,YAEZ,oBACE/e,UAAU,oBACVqL,SAAU4W,GACVtgB,MAAO,qBACPC,QAAS,YAnPL,WAAO,IAAD,EAC8C,QAAhE,EAAA+L,SAASC,uBAAuB,8BAA8B,UAAE,OAAhE,EAAkEgR,QAClEmD,IAAmB,EACrB,CAiPYnB,EACF,EAAE,WAEF,SAAC,MAAO,CAAChmB,SAAU,SAAU,gBAIjC,KAIR,E,WC68CA,OAp7EA,SAA2BF,GAAQ,IAAD,wMACxB4C,GAAyB5C,EAAzB4C,UAAWk6C,GAAc98C,EAAd88C,UACnBr0C,QAAQC,IAAIo0C,GAAU,GAAG5oC,UACzB,IAAM9N,GAAeC,aAAaC,QAAQ,SAEpCC,IADiBF,aAAaC,QAAQ,WAC5BE,EAAAA,EAAAA,SAChB,IAA8BC,EAAAA,EAAAA,WAAS,GAAM,iBAAtCG,GAAO,MAAEoO,GAAU,MAC1B,IAAwCvO,EAAAA,EAAAA,UAASwO,EAAAA,KAAkB,iBAA5DC,GAAY,MAAEC,GAAe,MAC9B4nC,GAAc,IAAI/yC,KACxB,IAAwCvD,EAAAA,EAAAA,UACtC,IAAIuD,KAAK+yC,GAAYC,cAAeD,GAAYE,WAAY,IAC7D,iBAFMvwB,GAAY,MAAEwwB,GAAe,MAGpC,IAAwCz2C,EAAAA,EAAAA,UAAS,IAAG,iBAA7C02C,GAAY,MAAEC,GAAe,MACpC,IAAkD32C,EAAAA,EAAAA,UAAS,IAAG,iBAAvD42C,GAAiB,MAAEC,GAAoB,MAC9C,IAAoC72C,EAAAA,EAAAA,UAAS,MAAK,iBAClD,IADiB,MAAe,OACMA,EAAAA,EAAAA,UAAS,KAAG,iBAA3CoD,GAAW,MAAE+L,GAAc,MAClC,IAAkCnP,EAAAA,EAAAA,UAAS,IAAG,iBAAvCiO,GAAS,MAAEC,GAAY,MAC9B,IAAgClO,EAAAA,EAAAA,UAAS,IAAG,iBAArCmF,GAAQ,MAAE2xC,GAAW,MAC5B,IAA8B92C,EAAAA,EAAAA,UAAS,IAAG,iBAAnC+2C,GAAO,MAAEC,GAAU,MAC1B,IAA8Ch3C,EAAAA,EAAAA,UAAS,IAAG,iBAAnDi3C,GAAe,MAAEC,GAAkB,MAC1C,IAAoCl3C,EAAAA,EAAAA,UAAS,IAAG,iBAAzCm3C,GAAU,MAAEC,GAAa,MAChC,IAAkCp3C,EAAAA,EAAAA,UAAS,IAAG,iBAAvCq3C,GAAS,MAAEC,GAAY,MAC9B,IAA8Bt3C,EAAAA,EAAAA,UAAS,IAAIuD,MAAO,iBAA3Cg0C,GAAO,MACd,IAD0B,OACUv3C,EAAAA,EAAAA,WAAS,IAAM,iBAAhCw3C,IAAF,MAAe,OAChC,IAA0Cx3C,EAAAA,EAAAA,WAAS,GAAM,iBAAnCy3C,IAAF,MAAkB,OACtC,IAAkDz3C,EAAAA,EAAAA,WAAS,GAAM,iBAA1DwE,GAAiB,MAAEC,GAAoB,MAC9C,IACEzE,EAAAA,EAAAA,WAAS,GAAM,iBADV03C,GAAwB,MAAEC,GAA2B,MAE5D,IAAkD33C,EAAAA,EAAAA,WAAS,GAAM,iBAA1D43C,GAAiB,MAAEC,GAAoB,MAC9C,IAAsC73C,EAAAA,EAAAA,WAAS,GAAM,iBAA9C83C,GAAW,MAAEC,GAAc,MAC9BnsB,GAAO5kB,IAAOif,GAAc,cAAc/e,OAAO,cAC/C8wC,GAAgBhxC,IAAOuwC,IAASrwC,OAAO,uBAC7C,IAAkDlH,EAAAA,EAAAA,UAAS,IAAG,iBAAvDi4C,GAAiB,MAAEC,GAAoB,MAC9C,IAA4Bl4C,EAAAA,EAAAA,WAAS,GAAM,iBAApCmO,GAAM,MAAEC,GAAS,MACxB,IAA4BpO,EAAAA,EAAAA,WAAS,GAAM,iBAApCkD,GAAM,MAAED,GAAS,MACxB,IAA0CjD,EAAAA,EAAAA,WAAS,GAAM,iBAAlDm4C,GAAa,MAAEC,GAAgB,MAMtC,IAAyCp4C,EAAAA,EAAAA,UALnB,CAAC,GAKyC,iBAAzDq4C,GAAa,MAAEC,GAAe,MACrC,IAAoCt4C,EAAAA,EAAAA,UAHd,CAAC,GAGoC,iBAApDu4C,GAAU,MAAEC,GAAa,MAChC,IAA0Cx4C,EAAAA,EAAAA,UAHpB,CAAC,GAG0C,iBAA1Dy4C,GAAa,MAAEC,GAAgB,MACtC12C,QAAQC,IAAIw2C,IACZ,QAAwCz4C,EAAAA,EAAAA,UARnB,CAAC,GAQwC,iBAAvD24C,GAAY,MAAEC,GAAe,MACpC,IAAkC54C,EAAAA,EAAAA,UAAS,IAAG,iBAAvC64C,GAAS,MAAEC,GAAY,MAC9B,IAAqC94C,EAAAA,EAAAA,UAAS,IAAG,iBAA1C+4C,GAAU,MAAEC,GAAc,MACjC,IAAkCh5C,EAAAA,EAAAA,UAAS,IAAG,iBAAvCi5C,GAAS,MAAEC,GAAY,MAC9B,IAA0Cl5C,EAAAA,EAAAA,WAAS,GAAM,iBAAnCm5C,IAAF,MAAkB,OACtC,IAA4Dn5C,EAAAA,EAAAA,WAAS,GAAK,iBAAnEo5C,GAAsB,MAC7B,IADwD,OACZp5C,EAAAA,EAAAA,WAAS,IAAM,iBAApDq5C,GAAc,MAAEC,GAAiB,MACxC,IAAwCt5C,EAAAA,EAAAA,WAAS,GAAM,iBAAhDu5C,GAAY,MAAEC,GAAe,MACpC,IAA8Bx5C,EAAAA,EAAAA,WAAS,GAAM,iBAAtCy5C,GAAO,MAAEC,GAAU,MAC1B,IAAwB15C,EAAAA,EAAAA,WAAS,GAAM,iBAAhC25C,GAAI,MAAEC,GAAO,MACpB,IAAkC55C,EAAAA,EAAAA,WAAS,GAAM,iBAA1C65C,GAAS,MAAEC,GAAY,MAC9B,IAA8B95C,EAAAA,EAAAA,WAAS,GAAM,iBAAtC+5C,GAAO,MAAEC,GAAU,MAC1B,IAAkCh6C,EAAAA,EAAAA,WAAS,GAAM,iBAA1Ci6C,GAAS,MAAEC,GAAY,MAC9B,IAAoBl6C,EAAAA,EAAAA,WAAS,GAAK,iBAAvBm6C,IAAF,MAAO,OAChB,IAAkCn6C,EAAAA,EAAAA,UArBZ,CAAC,GAqBkC,iBAAlDo6C,GAAS,MAAEC,GAAY,MAC9B,IAA0Cr6C,EAAAA,EAAAA,WAAS,IAAIuD,MAAOizC,YAAW,iBACzE,IADoB,MAAkB,OACFx2C,EAAAA,EAAAA,WAAS,IAAK,iBAA3Cs6C,GAAU,MAAEC,GAAa,MAC1BC,GAAelE,GAAYE,WAAa,EAOxCzmC,IAAkBhO,EAAAA,EAAAA,QAAO,OAiG/BzF,EAAAA,EAAAA,YAAU,WACR,IAAMqV,EAAQ,CACZ8oC,OAAO,IAAIl3C,MAAOm3C,eAUdC,EAR2B,WAC/B,IAAM7J,EAAQ,IAAIvtC,KACZq3C,EAAO9J,EAAMyF,cACbkE,EAAQ3J,EAAM0F,WAAa,EAEjC,OADkB,IAAIjzC,KAAKq3C,EAAMH,EAAQ,EAAG,EAE9C,CAE2BI,GACrBC,EAAqB,IAAIv3C,KAAKoO,EAAM8oC,OACpC3J,EAAQ,IAAIvtC,KACZw3C,EAAYjK,EAAM4J,cAAc5hC,MAAM,KAE5C,GAAIgiC,EAAqBH,EACvBnD,IAAc,GACdC,IAAiB,QACZ,GAAI3G,EAAQ6J,EAAoB,CACrC,IAAMK,EAAa,CACjBh+B,SAAU,EACVrR,OAAQ,IAIR/K,SAASm6C,EAAU,KAAOC,EAAWh+B,UACrCpc,SAASm6C,EAAU,KAAOC,EAAWrvC,OAErC6rC,IAAc,GAEdA,IAAc,GAGe,IAA3BP,GAAgBvqC,OAClB+qC,IAAiB,GAEjBA,IAAiB,EAErB,CAG+B,IAA3BR,GAAgBvqC,QAClB8qC,IAAc,EAElB,GAAG,IAIH,IA0CIyD,GArCE74C,IAAML,EAAAA,EAAAA,QAAO,IAEbm5C,GAAc,SAACtvB,GACnB,IAAMuvB,EAAgBn0C,IAAO4kB,GAAM3O,QAAQ,SACrCu9B,EAAexzC,IAAOsvC,IAAar5B,QAAQ,SACjD,OAAOk+B,EAAcC,OAAOZ,EAAc,QAC5C,EAEA,IAA0Cx6C,EAAAA,EAAAA,UACtB,QAAlB,EAAAi3C,GAAgB,UAAE,OAAlB,EAAoBoE,WAChBr0C,IAAyB,QAAnB,EAACiwC,GAAgB,UAAE,aAAlB,EAAoBoE,WAAY,cAAc1vC,SACrD,MACL,iBAJM2vC,GAAa,MAAEC,GAAgB,MAKhCC,GAAoB,SAAC5vB,IACT,OAAOqrB,IACZv5C,SAAQ,SAACf,GAClBA,EAAK0+C,WAAazvB,CACpB,IACA2vB,GAAiB3vB,EACnB,EAEM6vB,GAAwB,SAAC7vB,GAC7B,IAAMuvB,EAAgBn0C,IAAO4kB,GAAM3O,QAAQ,SACrCu9B,EAAexzC,IAAOsvC,IAAar5B,QAAQ,SACjD,OAAOk+B,EAAcO,SAASlB,EAAc,QAC9C,EASMmB,GAAe,CAAC,EAChBC,GAAa,CAAC,EAIpB55C,QAAQC,IAAIm4C,IACZp4C,QAAQC,IAAmB,OAAfg1C,SAAe,IAAfA,QAAe,EAAfA,GAAkB,IAC9Bj1C,QAAQC,IAAIkD,IACZnD,QAAQC,IAAI05C,KA6CZr/C,EAAAA,EAAAA,YAAU,WACR,GAAwB,IAApB6I,GAASuH,OAAb,CAKA,IAAMmvC,EAAmB,CAAC,EAE1B12C,GAASzH,SAAQ,SAACo+C,GAChB,IAAMC,EAAoBD,EAAQE,qBAAqB/0C,WACjDg1C,EAAiBr7C,SAASk7C,EAAQ1B,WAExCyB,EAAiBE,GAAqB,CACpCG,UAAWJ,EAAQE,qBACnBG,WAAYC,MAAMH,GAAkB,EAAIA,EACxCI,YAAaP,EAAQQ,eAAer1C,WAExC,IAEAozC,GAAawB,EAfb,CAgBF,GAAG,CAAC12C,KAGJnD,QAAQC,IAAIm4C,IAEZv8C,OAAOC,OAAOs8C,IAAW18C,SAAQ,SAAC0G,GAChC,IAAMi4C,EAAcj4C,EAAMi4C,YACpBE,EAAkBn4C,EAAM+3C,WAE1B,CAAC,OAAQ,OAAQ,QAAQlvC,SAASovC,KAChCA,KAAeV,GACjBA,GAAaU,KAEbV,GAAaU,GAAe,EAG1BA,KAAeT,GACjBA,GAAWS,IAAgBE,EAE3BX,GAAWS,GAAeE,EAGhC,IAEA,IAAMC,GAAoB,CAAC,OAAQ,OAAQ,QAC3CA,GAAkB9+C,SAAQ,SAAC2+C,GACrBA,KAAeT,IACVA,GAAWS,EAEtB,IAEsBx+C,OAAOwT,KAAKsqC,IAAcj/C,QAAO,SAAChC,GAAG,OACzD8hD,GAAkBvvC,SAASvS,EAAI,IAC/BgS,OAEFuuC,GAAYp9C,OAAOC,OAAO69C,IAAcc,QAAO,SAACC,EAAK3W,GACnD,OACEA,IAAU4V,GAAa,MACvB5V,IAAU4V,GAAa,OACvB5V,IAAU4V,GAAa,MAEhBe,EAAM3W,EAER2W,CACT,GAAG,GAGH,QAA0B18C,EAAAA,EAAAA,UAAS,GAAE,iBAAvB28C,IAAF,MAAU,OACtB,IAAkC38C,EAAAA,EAAAA,UAAS,GAAE,iBAAtC48C,GAAS,MAAEC,GAAY,MAC9B,IAAsC78C,EAAAA,EAAAA,UAAS,IAAG,iBAA9B88C,IAAF,MAAgB,OAClC,IAAoC98C,EAAAA,EAAAA,UAAS,IAAG,iBAA7B+8C,IAAF,MAAe,OAEhC/6C,QAAQC,IAAIw2C,IACZz2C,QAAQC,IAAIkD,IAiDZ,IAAM63C,GAA2B,WAC/B,IAAMC,EAAQtB,GAAa,OAAW,EAChCuB,EAAQvB,GAAa,OAAW,EAGhC59C,GAFQ49C,GAAa,MAEf,CACVwB,SAAUvB,GAAW,OAAW,EAChCwB,SAAUxB,GAAW,OAAW,EAChCyB,QAASzB,GAAW,OAAW,IAK3B0B,EAAUrC,GACVsC,EACJ38C,SAASq8C,GAASl/C,EAAIo/C,SAAW,EAAIv8C,SAASs8C,GAASn/C,EAAIq/C,SAAW,EAClEvwC,EACJjM,SAAS7C,EAAIo/C,UAAYv8C,SAAS7C,EAAIq/C,UAAYx8C,SAAS7C,EAAIs/C,SAG3DG,EAAc58C,SAAS08C,GAAW18C,SAASiM,GAC3C4wC,EACJF,EAAYC,IAAgBE,IAAW,EAAIH,EAAYC,EACnDG,EACJF,IAAoBC,IAAW,IAAOD,EAAkB,EAAK,IAE/Dz7C,QAAQC,IAAI4K,GACZ7K,QAAQC,IAAI,aAAcs7C,GAC1Bv7C,QAAQC,IAAI,eAAgBu7C,GAC5Bx7C,QAAQC,IAAI,uBAAwB07C,GACpC37C,QAAQC,IAAI,mBAAoBw7C,GAChCz7C,QAAQC,IAAI,WAAYq7C,GACxBt7C,QAAQC,IAAI,gBAAiB05C,IAC7B35C,QAAQC,IAAI,cAAe25C,IAE3B55C,QAAQC,IAAI,uBAAwB07C,GACpC37C,QAAQC,IAAI,mBAAoBw7C,GAChC,IAAMG,EAAqBD,EAAoB5f,QAAQ,GACjD8f,EAAiBJ,EAAgB1f,QAAQ,GAC/C4e,GAASkB,GACThB,GAAac,GACb,IAAIG,EAAwB,GACxBC,EAAuB,GACvBJ,EAAsB,IACxBG,EAAwB,QACxBC,EAAuB,MACdJ,GAAuB,IAAMA,EAAsB,IAC5DG,EAAwB,QACxBC,EAAuB,OACdJ,EAAsB,IAGtBvB,MAAMQ,OAFfkB,EAAwB,MACxBC,EAAuB,MAOzBjB,GAAegB,GACff,GAAcgB,IAMO,OAAO9G,IACZv5C,SAAQ,SAACf,GACvBA,EAAKqhD,kBAAoBJ,CAC3B,KAEyB,OAAO3G,IACZv5C,SAAQ,SAACf,GAC3BA,EAAKshD,eAAiBJ,CACxB,KAEkB,OAAO5G,IACZv5C,SAAQ,SAACf,GACpBA,EAAKkH,OAASk6C,CAChB,KAEsB,OAAO9G,IACZv5C,SAAQ,SAACf,GACxBA,EAAKuhD,YAAcJ,CACrB,GACF,GAEAxhD,EAAAA,EAAAA,YAAU,WACR0gD,IACF,GAAG,IAImC,QAAlB,EAAA/F,GAAgB,UAAE,OAAlB,EAAoBkH,kBAChB,QAD+B,EACjDlH,GAAgB,UAAE,OAAlB,EAAoBkH,iBAEgB,QAAlB,EAAAlH,GAAgB,UAAE,OAAlB,EAAoBmH,mBACpB,QADoC,EACtDnH,GAAgB,UAAE,OAAlB,EAAoBmH,kBAEU,QAAlB,EAAAnH,GAAgB,UAAE,OAAlB,EAAoBoH,iBACd,QAD4B,EAC9CpH,GAAgB,UAAE,OAAlB,EAAoBoH,gBAEa,QAAlB,EAAApH,GAAgB,UAAE,OAAlB,EAAoBqH,gBACjB,QAD8B,EAChDrH,GAAgB,UAAE,OAAlB,EAAoBqH,eAES,QAAlB,EAAArH,GAAgB,UAAE,OAAlB,EAAoBsH,iBACb,QAD2B,EAC7CtH,GAAgB,UAAE,OAAlB,EAAoBsH,gBAd1B,IAyBA,IAA8Bv+C,EAAAA,EAAAA,UARX,CAEjB,GAMgD,iBAClD,IADc,MAAY,OACIA,EAAAA,EAAAA,UALX,CAEjB,IAGgD,iBAiC5Cw+C,IAjCQ,MAAY,MAkCxB9H,GAAahqC,OAAS,GACtBgqC,GAAanqC,MAAK,SAACmqC,GAAY,OAAKA,EAAa+H,QAAU9+C,EAAY,MAEzErD,EAAAA,EAAAA,YAAU,WAhBRuE,IAAM,CACJC,OAAQ,MACRC,IACEjB,GAAO,2DAC6C3D,MACrD+E,MAAK,SAAUC,GAChB,IAAI+G,EAAM/G,EAASjF,KACnBy6C,GAAgBzuC,EAClB,IAUAw2C,IACF,GAAG,CAACF,KACJ,IAYME,GAAoB,WACxB79C,IAAM,CACJC,OAAQ,MACRC,IACEjB,GAAO,2DAC6C3D,GAAS,wBAAgByvB,MAC9E1qB,MAAK,SAAUy9C,GAAY,IAAD,IACrBC,EAAUD,EAAUziD,KAAKd,KAAI,SAACuB,GAAI,yBACnCA,GAAI,IAEPshD,eAAe,GAAD,OAAKthD,EAAKshD,eAAelgB,QAAQ,IAC/CmgB,YAAY,GAAD,OAAyB,OAApBvhD,EAAKuhD,YAAuB,GAAKvhD,EAAKuhD,cAAa,IAErEhH,GAAmB0H,GAEnB/9C,IAAM,CACJC,OAAQ,MACRC,IACEjB,GAAO,+DAEauF,IAAR,QAAV,EAAAu5C,EAAQ,UAAE,aAAV,EAAY/jD,IAAkB,EAAc,QAAb,EAAG+jD,EAAQ,UAAE,aAAV,EAAY/jD,MAEjDqG,MAAK,SAAU29C,GACa,GAAzBA,EAAU3iD,KAAKwQ,QACjBoqC,IAAY,SAACgI,GAAY,MAAK,EAAE,IAIlC,IAFA,IAAMC,EAAeF,EAAU3iD,KAEtB6Q,EAAI,EAAGA,EAAIgyC,EAAaryC,OAAQK,IACP,OAA5BgyC,EAAahyC,GAAGiyC,UAClBD,EAAahyC,GAAGiyC,QAAU,IAI9BlI,GAAYiI,EACd,GACF,GACF,EAgBME,GAAe,WACnBx6C,IAAqB,GACrB8J,IAAYpO,IAERuO,GADJvO,GACoBqO,EAAAA,IACAyC,EAAAA,KACpBpQ,IAAM,CACJC,OAAQ,MACRC,IAAKjB,GAAO,2CAAuC3D,MAClD+E,MAAK,SAAUg+C,GAChB,IAAMhjD,EAAOgjD,EAAShjD,KACtB86C,GAAW96C,GACXw9C,IAAW,GACX74C,IAAM,CACJC,OAAQ,OACRC,IACEjB,GAAO,8CACgC5D,EAAK,GAAGijD,UAAS,iCAAyBvzB,MAClF1qB,MAAK,SAAUgH,GAChB,IAAMk3C,EAAUl3C,EAAIhM,KACpBgS,GAAakxC,EACf,GACF,GACF,GAEA9iD,EAAAA,EAAAA,YAAU,WAzFRuE,IAAM,CACJC,OAAQ,MACRC,IAAKjB,GAAO,gCACXoB,MAAK,SAAUC,GAChB,IAAI+G,EAAM/G,EAASjF,KACnB26C,GAAqB3uC,EACvB,IAzCArH,IAAM,CACJC,OAAQ,MACRC,IACEjB,GAAO,4DAC8C3D,MAEtD+E,MAAK,SAAUC,GACd,IAAIC,EAAOD,EAASjF,KACpBiT,GAAe/N,EACjB,IACCC,OAAM,SAAUF,GAAW,IAqH9B89C,KACAP,KACAW,KAEAC,KAvmB2B,WAAO,IAAD,gBACjC,QACqBj6C,GAAnB4xC,IACmB,aAAnBA,IAC0B,GAA1BA,GAAgBvqC,SACI,QAAnB,EAACuqC,GAAgB,UAAE,OAAlB,EAAoBsI,gBAAqC,QAAnB,EAACtI,GAAgB,UAAE,OAAlB,EAAoBuI,cAiBxD,GACa,QAAlB,EAAAvI,GAAgB,UAAE,QAAlB,EAAoBsI,gBACD,QAAnB,EAACtI,GAAgB,UAAE,OAAlB,EAAoBuI,cAkBhB,GACa,QAAlB,EAAAvI,GAAgB,UAAE,OAAlB,EAAoBsI,gBACF,QADgB,EAClCtI,GAAgB,UAAE,OAAlB,EAAoBuI,aAEhBhB,IACF5E,IAAQ,GACRE,IAAa,GACbK,IAAM,GACNH,IAAW,GACXE,IAAa,KAEbC,IAAM,GACNP,IAAQ,GACRE,IAAa,GACbE,IAAW,GACXE,IAAa,GACTd,IACFD,IAAiB,SAGhB,IACc,QAAnB,EAAClC,GAAgB,UAAE,QAAlB,EAAoBsI,iBACH,QADiB,EACnCtI,GAAgB,UAAE,OAAlB,EAAoBuI,aACpB,CAAC,IAAD,IACIhB,IACF5E,IAAQ,GACRE,IAAa,GACbK,IAAM,GACNH,IAAW,GACXE,IAAa,KAEbC,IAAM,GACNP,IAAQ,GACRE,IAAa,GACbE,IAAW,GACXE,IAAa,GACTd,IACFD,IAAiB,IAIlBqF,IACqC,IAApB,QAAlB,EAAAvH,GAAgB,UAAE,aAAlB,EAAoBsI,iBACgB,IAAlB,QAAlB,EAAAtI,GAAgB,UAAE,aAAlB,EAAoBuI,eAEpBxF,IAAW,GAETwE,IAA4C,IAA3BvH,GAAgBvqC,SACnC8qC,IAAc,GACdoC,IAAQ,GAEZ,OAnEM4E,IACF5E,IAAQ,GACRE,IAAa,GACbE,IAAW,GACXE,IAAa,GACbC,IAAM,KAENA,IAAM,GACNP,IAAQ,GACRE,IAAa,GACbE,IAAW,GACXE,IAAa,GACTd,IACFD,IAAiB,SAhCjBqF,IACF5E,IAAQ,GACRE,IAAa,GACbE,IAAW,GACXE,IAAa,GACbC,IAAM,KAENA,IAAM,GACNP,IAAQ,GACRE,IAAa,GACbI,IAAa,GACTd,IACFD,IAAiB,GA2EzB,CA0gBEsG,EACF,GAAG,IAEH,IAAMJ,GAAe,WACnBx+C,IAAM,CACJC,OAAQ,MACRC,IAAKjB,GAAO,uCACXoB,MAAK,SAAUgH,GAChB,IAAI/G,EAAW+G,EAAIhM,KACnBo7C,GAAan2C,EACf,GACF,EACM0I,GAAgB,SAAC9K,GACK,iBAEH+K,KAAK/K,EAAMrE,MAChCqE,EAAMgL,gBAEV,EAaA,IAA8C/J,EAAAA,EAAAA,WAAS,GAAM,iBAArC0/C,IAAF,MAAoB,QAC1CpjD,EAAAA,EAAAA,YAAU,WACR,IACMk+C,GADc,IAAIj3C,MACSizC,WAGjCkJ,GAAmB9zB,KAFG4uB,EAAe,EAGvC,GAAG,IAEHx4C,QAAQC,IAAI02C,IACZ,IAAM/6B,GAAI,2CAAG,WAAON,GAAO,6IACS,KAAtBnQ,EAAAA,EAAAA,GAAiB/K,IAEnB,CAAD,eASP,OARAqC,IAAqB,GACrB8tB,OAAOotB,SAAS,CAAErmB,IAAK,EAAGsmB,SAAU,WAEpCjI,IAA4B,GAC5BE,IAAqB,GAIrB,0BAe4B,OAVxBgI,EAAmBpwB,WACkB,OAAvB,QAAlB,EAAAwnB,GAAgB,UAAE,aAAlB,EAAoB+G,mBAChB,EACkB,QADf,EACH/G,GAAgB,UAAE,aAAlB,EAAoB+G,mBAG1B5vC,IAAU,GACJ0xC,EAAc94C,IAAyB,QAAnB,EAACiwC,GAAgB,UAAE,aAAlB,EAAoB58B,cAAcnT,OAC3D,uBAEFlF,QAAQC,IAAI49C,GAAkB,oBAELh/C,IAAM,CAC3BC,OAAQ,OACRC,IAAKjB,GAAO,oCACZ5D,KAAM,CACJrB,GAAsB,QAApB,EAAEo8C,GAAgB,UAAE,aAAlB,EAAoBp8C,GACxB2nB,WAAYrmB,GACZk/C,WAAYr0C,IAAyB,QAAnB,EAACiwC,GAAgB,UAAE,aAAlB,EAAoBoE,YAAYn0C,OACjD,uBAEF64C,YACqC,OAAjB,QAAlB,EAAA9I,GAAgB,UAAE,aAAlB,EAAoB8I,aAChBn0B,GACkB,QADd,EACJqrB,GAAgB,UAAE,aAAlB,EAAoB8I,YAC1BR,gBACyC,KAArB,QAAlB,EAAAtI,GAAgB,UAAE,aAAlB,EAAoBsI,gBAChB,IACuC,KAArB,QAAlB,EAAAtI,GAAgB,UAAE,aAAlB,EAAoBsI,iBAEF,QAAlB,EAAAtI,GAAgB,UAAE,OAAlB,EAAoBsI,eADpB,GAINC,cACuC,KAAnB,QAAlB,EAAAvI,GAAgB,UAAE,aAAlB,EAAoBuI,cAChB,IACqC,KAAnB,QAAlB,EAAAvI,GAAgB,UAAE,aAAlB,EAAoBuI,eAEF,QAAlB,EAAAvI,GAAgB,UAAE,OAAlB,EAAoBuI,aADpB,GAINQ,YACqC,OAAjB,QAAlB,EAAA/I,GAAgB,UAAE,aAAlB,EAAoB+I,aAChB7I,GACkB,QADR,EACVF,GAAgB,UAAE,aAAlB,EAAoB+I,YAC1BC,WACoC,OAAhB,QAAlB,EAAAhJ,GAAgB,UAAE,aAAlB,EAAoBgJ,YAChBpH,GACkB,QADT,EACT5B,GAAgB,UAAE,aAAlB,EAAoBgJ,WAC1BC,aACsC,OAAlB,QAAlB,EAAAjJ,GAAgB,UAAE,aAAlB,EAAoBiJ,cAChBnH,GACkB,QADR,EACV9B,GAAgB,UAAE,aAAlB,EAAoBiJ,aAC1BC,WACoC,OAAhB,QAAlB,EAAAlJ,GAAgB,UAAE,aAAlB,EAAoBkJ,YAChBlH,GACkB,QADT,EACThC,GAAgB,UAAE,aAAlB,EAAoBkJ,WAC1BC,cACuC,OAAnB,QAAlB,EAAAnJ,GAAgB,UAAE,aAAlB,EAAoBmJ,eAChB,KACkB,QADd,EACJnJ,GAAgB,UAAE,aAAlB,EAAoBmJ,cAC1BjC,gBAC0B,MAAxBxC,GAAa,MAAkB,EAAIA,GAAa,MAClDyC,iBAC0B,MAAxBzC,GAAa,MAAkB,EAAIA,GAAa,MAClD0C,eAC0B,MAAxB1C,GAAa,MAAkB,EAAIA,GAAa,MAClD2C,cACuC,OAAnB,QAAlB,EAAArH,GAAgB,UAAE,aAAlB,EAAoBqH,eAChB,EACkB,QADjB,EACDrH,GAAgB,UAAE,aAAlB,EAAoBqH,cAC1BC,eACwC,OAApB,QAAlB,EAAAtH,GAAgB,UAAE,aAAlB,EAAoBsH,gBAChB,EACkB,QADjB,EACDtH,GAAgB,UAAE,aAAlB,EAAoBsH,eAC1BN,eACwC,OAApB,QAAlB,EAAAhH,GAAgB,UAAE,aAAlB,EAAoBgH,gBAChB,EACkB,QADf,EACHhH,GAAgB,UAAE,aAAlB,EAAoBgH,eAC1BD,kBAAmB6B,EACnBh8C,OACgC,OAAZ,QAAlB,EAAAozC,GAAgB,UAAE,aAAlB,EAAoBpzC,QAChB,KACkB,QADd,EACJozC,GAAgB,UAAE,aAAlB,EAAoBpzC,OAC1BwW,aAA6B,MAAfylC,EAAsB9H,GAAgB8H,EACpD3lC,aAAc69B,MAEf92C,KAAI,2CAAC,WAAgBC,GAAQ,+EAiD3B,OAhDeA,EAASjF,KAErBA,EAAO,GAEPmkD,EAAiB,SAACh2C,GAAS,IAAD,oBACxBi2C,EAAan7C,GAAS2K,MAC1B,SAACgsC,GAAO,OAAKA,EAAQE,wBAA0B3xC,CAAG,IAEpDrI,QAAQC,IAAc,OAAVq+C,QAAU,IAAVA,OAAU,EAAVA,EAAYlG,WACxBp4C,QAAQC,IAAuB,QAApB,EAACw2C,IAAepuC,UAAI,aAAnB,EAAqB8xC,YACjC,IAAMp+C,EAAM,CAAC,EACbA,EAA0B,qBACE,OAAR,QAAlB,EAAAk5C,GAAgB,UAAE,aAAlB,EAAoBp8C,IACR,OAARsG,QAAQ,IAARA,GAAc,QAAN,EAARA,EAAUjF,YAAI,OAAW,QAAX,EAAd,EAAgBqkD,iBAAS,WAAjB,EAAR,EAA2B1lD,GACT,QADW,EAC7Bo8C,GAAgB,UAAE,aAAlB,EAAoBp8C,GAC1BkD,EAA0B,sBAAKsM,EAC/BtM,EAAoB,eACI,OAAtB46C,GAAatuC,SAAuChF,IAAtBszC,GAAatuC,GACvCi2C,EAAWhE,eACX17C,SAAS+3C,GAAatuC,IAC5BtM,EAAe,UACuB,QAAjB,QAAnB,EAAA06C,IAAepuC,UAAI,aAAnB,EAAqB8xC,kBACc92C,IAAhB,QAAnB,EAAAozC,IAAepuC,UAAI,aAAnB,EAAqB8xC,aACc,KAAhB,QAAnB,EAAA1D,IAAepuC,UAAI,aAAnB,EAAqB8xC,YACP,OAAVmE,QAAU,IAAVA,OAAU,EAAVA,EAAYlG,UACO,QADE,EACrB3B,IAAepuC,UAAI,aAAnB,EAAqB8xC,WAC3Bp+C,EAAa,aACYsH,IAAvBgzC,GAAchuC,GACA,OAAVi2C,QAAU,IAAVA,OAAU,EAAVA,EAAYtB,QACZ3G,GAAchuC,GACpBtM,EAAgB,WAAmB,QAAlB,EAAGw6C,GAAWluC,UAAI,QAAI,GACvCnO,EAAK0B,KAAKG,EACZ,EAEAF,OAAOwT,KAAKgnC,IAAe36C,SAAQ,SAAC2M,GAClCg2C,EAAeh2C,EACjB,IAEAxM,OAAOwT,KAAKsnC,IAAcj7C,SAAQ,SAAC2M,GAC5BguC,GAAchuC,IACjBg2C,EAAeh2C,EAEnB,IAEAxM,OAAOwT,KAAKknC,IAAY76C,SAAQ,SAAC2M,GAC1BguC,GAAchuC,IACjBg2C,EAAeh2C,EAEnB,IAAG,SAEexJ,IAAM,CACtBC,OAAQ,OACRC,IAAKjB,GAAO,4BACZ5D,KAAMA,IACL,KAAD,EAJO,OAKT+iD,KACAP,KACAtwC,IAAU,GACVnL,IAAU,GACVsvB,OAAOotB,SAAS,CAAErmB,IAAK,EAAGsmB,SAAU,WAEpCp+C,YAAW,WACTyB,IAAU,GACVmL,IAAU,EACZ,GAAG,KAAM,4CACV,mDAlEM,IAkEJ,KAAD,GA7IY,0DA+IdA,IAAU,GAAO,2DAEpB,gBA9KS,uCAiLV9R,EAAAA,EAAAA,YAAU,WAAO,IAAD,EACiB,IAA3B26C,GAAgBvqC,QAAiB8xC,GAGC,IAA3BvH,GAAgBvqC,QAAgB8xC,IACzChF,IAAgB,GAChBF,IAAkB,IAC6B,IAApB,QAAlB,EAAArC,GAAgB,UAAE,aAAlB,EAAoBsI,iBAA0Bf,KAEvDhF,IAAgB,GAChBF,IAAkB,IARlBA,IAAkB,EAUtB,GAAG,CAACrC,GAAiBuH,KACrBx8C,QAAQC,IAAIg1C,IACZ,IA4GMqI,GAAgB,WACpBz+C,IAAM,CACJC,OAAQ,MACRC,IACEjB,GAAO,uDAAmD3D,MAC3D+E,MAAK,SAAUgH,GAChB,IAAM/G,EAAW+G,EAAIhM,KAAK,GAC1Bg8C,GAAqB/2C,EACvB,GACF,EAsDA,IAA4BnB,EAAAA,EAAAA,UAAS,IAAG,iBAAjCyP,GAAM,MAAEC,GAAS,OAIxBpT,EAAAA,EAAAA,YAAU,WACRqT,IACF,GAAG,IAEH,IAAMA,GAAW,WAGf9O,IAAM,CACJC,OAAQ,MACRC,IAAKjB,GAAO,iDAA6CH,MACxDuB,MAAK,SAACE,GACIA,EAAKlF,KAEXwB,SAAQ,SAACf,GAhBA,aAiBRA,EAAKiT,cACPF,GAAU,CAAC/S,GAEf,GACF,GACF,EAEA,IAA4CqD,EAAAA,EAAAA,UAAS,CAAC,GAAE,iBAAjDwgD,GAAc,MAAEC,GAAiB,MACxC,IAA4CzgD,EAAAA,EAAAA,UAAS,IAAG,iBAAjD0gD,GAAc,MAAEC,GAAiB,MAExC,IAA0C3gD,EAAAA,EAAAA,UAAS,IAAG,iBAAlC,MAAkB,MAE9B,OAARmF,SAAQ,IAARA,IAAAA,GAAU/J,KAAI,SAACc,GACJ,OAAT+R,SAAS,IAATA,IAAAA,GAAW7S,KAAI,SAACgJ,GACVlI,EAAK8/C,sBAAwB53C,EAAMvJ,KACrCuJ,EAAsB,eAAIlI,EAAKogD,eAC/Bl4C,EAAkB,WAAIlI,EAAKrB,GAC3BuJ,EAAkB,WAAIlI,EAAK0kD,WAC3Bx8C,EAA4B,qBAAIlI,EAAK2kD,qBACrCz8C,EAAe,QAAIlI,EAAK8iD,QACxB56C,EAAiB,UAAIlI,EAAKk+C,UAE9B,GACF,IAEA,IAMI0G,GAAiB,IAErBxkD,EAAAA,EAAAA,YAAU,WACR0gD,IACF,GAAG,IAEH,IAAM+D,GAAe,SAACx+C,EAAG+a,EAAS0jC,GAAqB,IAAD,wBAEhD7E,EADJn6C,QAAQC,IAAsB,QAAnB,EAACg1C,GAAgB,UAAE,aAAlB,EAAoB+I,aAI9B7D,EADsC,QAAlB,QAAlB,EAAAlF,GAAgB,UAAE,aAAlB,EAAoB+I,aACT1iC,EAAQ2jC,qBACwB,QAAlB,QAAlB,EAAAhK,GAAgB,UAAE,aAAlB,EAAoB+I,aAChB1iC,EAAQ4jC,uBACwB,QAAlB,QAAlB,EAAAjK,GAAgB,UAAE,aAAlB,EAAoB+I,aAChB1iC,EAAQ6jC,kBAER,EAYfn/C,QAAQC,IAAIk6C,GAGVA,EADsC,QAAlB,QAAlB,EAAAlF,GAAgB,UAAE,aAAlB,EAAoB+I,aACT1iC,EAAQ2jC,qBACwB,QAAlB,QAAlB,EAAAhK,GAAgB,UAAE,aAAlB,EAAoB+I,aAChB1iC,EAAQ4jC,uBACwB,QAAlB,QAAlB,EAAAjK,GAAgB,UAAE,aAAlB,EAAoB+I,aAChB1iC,EAAQ6jC,kBAER,EAEfL,GAAeljD,KAAKu+C,GAepBzD,IAAiB,SAAC0I,GAChB,IAAMC,GAAW,kBACZD,GAAQ,cACV9jC,EAAQziB,GAAK,CACZqhD,UAAW5+B,EAAQziB,GACnBshD,WAAYA,EACZE,YAAa95C,EAAEmH,OAAOtF,SAS1B,OALAi2C,IAAa,SAACiH,GAAa,yBACtBA,GACAD,EAAW,IAGTA,CACT,IAEAr/C,QAAQC,IAAIyP,KAAKE,UAAUwoC,IAAa,mBAExCxB,IAAgB,SAACl2C,GAAI,+BAChBA,GAAI,cACN4a,EAAQziB,GAAM,OAAD0H,QAAC,IAADA,GAAS,QAAR,EAADA,EAAGmH,cAAM,WAAR,EAAD,EAAWtF,OAAK,IAGhC,IAAMm9C,GAAsB,OAAOtK,IAEnC,GADAxyC,IAAqB,GACG,SAAnB,OAADlC,QAAC,IAADA,GAAS,QAAR,EAADA,EAAGmH,cAAM,WAAR,EAAD,EAAWtF,OAAiB,CAAC,IAAD,EACxBo9C,GAA4C,QAAzB,EAAAD,EAAuB,UAAE,aAAzB,EAA2BpD,kBAAmB,EAEvEoD,EAAuB,IAAE,kBACpBA,EAAuB,IAAE,IAC5BpD,gBAAiBqD,EAAmB,GAExC,CAEA,GAAwB,SAAnB,OAADj/C,QAAC,IAADA,GAAS,QAAR,EAADA,EAAGmH,cAAM,WAAR,EAAD,EAAWtF,OAAiB,CAAC,IAAD,EACxBq9C,GACqB,QAAzB,EAAAF,EAAuB,UAAE,aAAzB,EAA2BnD,mBAAoB,EACjDmD,EAAuB,IAAE,kBACpBA,EAAuB,IAAE,IAC5BnD,iBAAkBqD,EAAuB,GAE7C,CAEA,GAAyB,UAApB,OAADl/C,QAAC,IAADA,GAAS,QAAR,EAADA,EAAGmH,cAAM,WAAR,EAAD,EAAWtF,OAAkB,CAAC,IAAD,EACzBs9C,GAA0C,QAAzB,EAAAH,EAAuB,UAAE,aAAzB,EAA2BlD,iBAAkB,EACpEkD,EAAuB,IAAE,kBACpBA,EAAuB,IAAE,IAC5BlD,eAAgBqD,EAAiB,GAErC,CAEA,GAAwB,SAAnB,OAADn/C,QAAC,IAADA,GAAS,QAAR,EAADA,EAAGmH,cAAM,WAAR,EAAD,EAAWtF,OAAiB,CAAC,IAAD,EACxBu9C,GAAkC,QAAzB,EAAAJ,EAAuB,UAAE,aAAzB,EAA2BjD,gBAAiB,EAC3DiD,EAAuB,IAAE,kBACpBA,EAAuB,IAAE,IAC5BjD,cAAeqD,EAAS,GAE5B,CAEA,GAAwB,SAAnB,OAADp/C,QAAC,IAADA,GAAS,QAAR,EAADA,EAAGmH,cAAM,WAAR,EAAD,EAAWtF,OAAiB,CAAC,IAAD,EACxBw9C,GAAyC,QAAzB,EAAAL,EAAuB,UAAE,aAAzB,EAA2BhD,iBAAkB,EACnEgD,EAAuB,IAAE,kBACpBA,EAAuB,IAAE,IAC5BhD,eAAgBqD,EAAgB,GAEpC,CACA,GAAuB,QAAnBZ,EAA2B,CAAC,IAAD,EACvBQ,GAA4C,QAAzB,EAAAD,EAAuB,UAAE,aAAzB,EAA2BpD,kBAAmB,EACvEoD,EAAuB,IAAE,kBACpBA,EAAuB,IAAE,IAC5BpD,gBAAiBqD,EAAmB,GAExC,CAEA,GAAuB,QAAnBR,EAA2B,CAAC,IAAD,EACvBS,GACqB,QAAzB,EAAAF,EAAuB,UAAE,aAAzB,EAA2BnD,mBAAoB,EACjDmD,EAAuB,IAAE,kBACpBA,EAAuB,IAAE,IAC5BnD,iBAAkBqD,EAAuB,GAE7C,CAEA,GAAuB,QAAnBT,EAA2B,CAAC,IAAD,EACvBU,GAA0C,QAAzB,EAAAH,EAAuB,UAAE,aAAzB,EAA2BlD,iBAAkB,EACpEkD,EAAuB,IAAE,kBACpBA,EAAuB,IAAE,IAC5BlD,eAAgBqD,EAAiB,GAErC,CAEA,GAAuB,QAAnBV,EAA2B,CAAC,IAAD,EACvBW,GAAkC,QAAzB,EAAAJ,EAAuB,UAAE,aAAzB,EAA2BjD,gBAAiB,EAC3DiD,EAAuB,IAAE,kBACpBA,EAAuB,IAAE,IAC5BjD,cAAeqD,EAAS,GAE5B,CAEA,GAAuB,QAAnBX,EAA2B,CAAC,IAAD,EACvBY,GAAyC,QAAzB,EAAAL,EAAuB,UAAE,aAAzB,EAA2BhD,iBAAkB,EACnEgD,EAAuB,IAAE,kBACpBA,EAAuB,IAAE,IAC5BhD,eAAgBqD,EAAgB,GAEpC,CAEAL,EAAuB,IAAE,kBACpBA,EAAuB,IAAE,cAC3BjkC,EAAQziB,GAAK0H,EAAEmH,OAAOtF,QAEzB8yC,GAAmBqK,GACnBv/C,QAAQC,IAAIg1C,GAAgB,GAAK,oBACnC,EACAj1C,QAAQC,IAAIg1C,GAAgB,GAAK,sBAEjC36C,EAAAA,EAAAA,YAAU,WACR0gD,IACF,GAAG,CAAC5C,KAEJ,IAAMyH,GAAuB,SAACt/C,EAAG+a,GAC/Bg7B,IAAgB,SAAC51C,GAAI,yBAChBA,GAAI,cACN4a,EAAQziB,GAAK0H,GAAC,GAEnB,EAEMu/C,GAAyB,SAACv/C,EAAG+a,GACjCk7B,IAAc,SAAC91C,GAAI,yBACdA,GAAI,cACN4a,EAAQziB,GAAK0H,GAAC,GAEnB,EAmaA,OACE,2BACwB,GAArBiC,IACC,gBAAK3F,UAAU,kBAAiB,UAC9B,kBAAMA,UAAU,cAAa,WAC3B,SAAC,MAAa,IAAG,+DAKrB,GAE2B,GAA5B64C,IACC,gBAAK74C,UAAU,kBAAiB,UAC9B,kBAAMA,UAAU,cAAa,WAC3B,SAAC,MAAa,IAAG,6EAKrB,GAEoB,GAArB+4C,IACC,gBAAK/4C,UAAU,kBAAiB,UAC9B,kBAAMA,UAAU,cAAa,WAC3B,SAAC,MAAa,IAAG,sDAIrB,GAEDi5C,IACC,iBAAKj5C,UAAU,oBAAmB,WAChC,SAAC,MAAO,IACP,8BAGH,GAEDqE,IACC,iBAAKrE,UAAU,oBAAmB,WAChC,SAAC,MAAO,IACP,6BAGH,GAEDs5C,IACC,iBAAKt5C,UAAU,oBAAmB,WAChC,SAAC,MAAO,IACP,iCAGH,GAEDsP,IAAS,SAACiE,EAAA,EAAM,CAACC,YAjjDF,WAClBtC,GAAgBzF,SAAWyF,GAAgBzF,QAAQgI,QACnDlE,IAAU,EACZ,IA8iDqD,IACjD,iBAAKvP,UAAU,YAAW,WACxB,gBAAKA,UAAU,WAAU,SACtBuE,GAAYhI,KAAI,SAACiO,GAAI,OACpB,0BAAI,+BAA6BA,EAAKc,cAAiB,OAG3D,gBAAKtL,UAAU,cACf,gBAAKA,UAAU,mBAEjB,SAACoT,EAAA,EAAiB,CAChBxC,OAAQA,GACRyC,kBAltBkB,CAAC,WAAY,OAAQ,aAAc,SAotBrDunC,SAAoCp0C,IAAf,QAAV,EAAA0xC,GAAQ,UAAE,aAAV,EAAYoI,YACvB,iBAAKtgD,UAAU,kBAAiB,WAC9B,SAAC,MAAa,CAACuB,KAAK,WACpB,0BAAM,kFAMR,iBAAKvB,UAAU,wBAAuB,WACpC,iBAAKA,UAAU,2BAA0B,WACvC,wBAAI,oBACJ,gBACE4B,QAAS,WACP8N,IAAYpO,IAERuO,GADJvO,GACoBqO,EAAAA,IACAyC,EAAAA,IACtB,EAAE,UAEF,0BAAOxC,WAGX,iBAAK5P,UAAU,oBAAmB,WAChC,gBAAKA,UAAU,iBAAgB,UAC7B,SAAC,KAAS,CAACsB,SAAUA,GAAQ,UAC3B,iBAAKtB,UAAU,WAAU,WACvB,mBAAOA,UAAU,QAAO,UAAC,gBACX,gBAAKA,UAAU,aAAY,SAAC,UAE1C,iBAAMA,UAAU,QAAO,SAAC,OACxB,gBAAKA,UAAU,QAAO,UACpB,gBAAKA,UAAU,SAAQ,UACrB,gBAAKA,UAAU,cAAa,UAC1B,SAAC,IAAU,CACTkjD,qBAAmB,EACnB/2C,SAAUib,GACV7b,SAvxCC,SAACwhB,GACxB6qB,GAAgB7qB,EAClB,EAsxCwBzgB,WAAW,YACX+a,QAAS,IAAI3iB,cAMrB,oBACE1E,UAAU,wBACV0B,KAAK,SACLyhD,eAAgB,YAxwDV,WACtB,IAAM7G,EAAgBv6C,SAASgrB,GAAK9S,MAAM,KAAK,IAE/CyhC,GADuBC,KAAiBW,EAE1C,CAqwDoB8G,GACAhD,KACAP,KACAj6C,IAAqB,GAGrBozC,IAAqB,GACrBF,IAA4B,EAC9B,EACA,WAEA,SAAC,MAAQ,IAAG,qBAMpB,iBAAK94C,UAAU,oBAAmB,WAChC,iBAAMA,UAAU,OAAM,UACpB,SAAC,MAAa,MACT,6EAKiB,GAAzBw3C,GAAU,GAAG5oC,SACZ,IAEA,gBAAK5O,UAAU,SAAQ,UACrB,gBAAKA,UAAU,2BAA0B,SACxB,GAAdy7C,IACC,iCACE,oBACEz7C,UAAU,kBACV0B,KAAK,SACLE,QA91BL,WACfI,IAAM,CACJC,OAAQ,OACRC,IACEjB,GAAO,6DAC+C3D,GAAS,oBAAYyvB,MAC5E1qB,MAAK,SAAUgH,GAAM,IAAD,EAGU,IAAhB,QAAX,EAFaA,EAAIhM,KAER,UAAE,aAAX,EAAagmD,aACfvK,IAA4B,GAC5BplB,OAAOotB,SAAS,CAAErmB,IAAK,EAAGsmB,SAAU,WAEpCn7C,IAAqB,GACrBozC,IAAqB,KAErBF,IAA4B,GAC5B92C,IAAM,CACJC,OAAQ,MACRC,IACEjB,GAAO,2DAC6C3D,GAAS,wBAAgB87C,GAAkBkK,sBAChGjhD,MAAK,SAAUy9C,GAAY,IAAD,EACrBC,EAAUD,EAAUziD,KAAKd,KAAI,SAACuB,GAAI,yBACnCA,GAAI,IACPqhD,kBAAkB,GAAD,OAAKrhD,EAAKqhD,kBAAkBjgB,QAAQ,GAAE,MACvDkgB,eAAe,GAAD,OAAKthD,EAAKshD,eAAelgB,QAAQ,IAC/CmgB,YAAY,GAAD,OAAyB,OAApBvhD,EAAKuhD,YAAuB,GAAKvhD,EAAKuhD,cAAa,IAErEhH,GAAmB0H,GAEnB/9C,IAAM,CACJC,OAAQ,MACRC,IACEjB,GAAO,0DACsD,QADtD,EAC4C8+C,EAAQ,UAAE,aAAV,EAAY/jD,MAChEqG,MAAK,SAAU29C,GAChB,IAAME,EAAeF,EAAU3iD,KAC/B67C,IAAe,GACfv2C,YAAW,WACTu2C,IAAe,EACjB,GAAG,KAEHjB,GAAYiI,EACd,GACF,IAEJ,GACF,EAgzBsBrlD,MAAO,CAGLwE,QACqB,QAAlB,EAAA+4C,GAAgB,UAAE,OAAlB,EAAoBsI,gBACiB,IAAlB,QAAlB,EAAAtI,GAAgB,UAAE,aAAlB,EAAoBuI,eACiB,IAApB,QAAlB,EAAAvI,GAAgB,UAAE,aAAlB,EAAoBsI,iBACnBtI,GAAgBvqC,OAAS,GACW,IAApB,QAAlB,EAAAuqC,GAAgB,UAAE,aAAlB,EAAoBsI,iBACnBf,IAA4C,IAA3BvH,GAAgBvqC,OAC9B,OACA,QACN,WAEF,SAAC,MAAM,IAAG,iCAGZ,oBACE7N,UAAU,kBACV0B,KAAK,SACL1F,GAAG,UACH4F,UAEK+9C,IACiB,QADJ,EACdvH,GAAgB,UAAE,QAAlB,EAAoBsI,gBACD,QAAnB,EAACtI,GAAgB,UAAE,OAAlB,EAAoBuI,gBAEH,QAAnB,EAACvI,GAAgB,UAAE,OAAlB,EAAoBsI,gBACD,QAAnB,EAACtI,GAAgB,UAAE,OAAlB,EAAoBuI,mBAEnBn6C,EADAuY,GAGN1T,SACE6vC,IACuC,IAApB,QAAlB,EAAA9C,GAAgB,UAAE,aAAlB,EAAoBsI,iBACiB,IAAlB,QAAlB,EAAAtI,GAAgB,UAAE,aAAlB,EAAoBuI,cAExB9lD,MAAO,CACLuQ,OACG8vC,IACmB,QADZ,EACN9C,GAAgB,UAAE,OAAlB,EAAoBsI,gBACF,QADgB,EAClCtI,GAAgB,UAAE,OAAlB,EAAoBuI,eACpBhB,IACkB,QADL,EACbvH,GAAgB,UAAE,OAAlB,EAAoBsI,iBACD,QAAnB,EAACtI,GAAgB,UAAE,QAAlB,EAAoBuI,eACtBhB,IAA4C,IAA3BvH,GAAgBvqC,QACK,IAApB,QAAlB,EAAAuqC,GAAgB,UAAE,aAAlB,EAAoBsI,iBACiB,IAAlB,QAAlB,EAAAtI,GAAgB,UAAE,aAAlB,EAAoBuI,cAClB,UACA,OACNtlD,QAAS6/C,GACL,EAGA,WACJ,WAEF,SAAC,MAAM,IAAG,WAGZ,oBACEl7C,UAAU,kBACV0B,KAAK,SACL1F,GAAG,YACHqP,SACE+vC,IACuC,IAApB,QAAlB,EAAAhD,GAAgB,UAAE,aAAlB,EAAoBsI,iBACiB,IAAlB,QAAlB,EAAAtI,GAAgB,UAAE,aAAlB,EAAoBuI,cAExB9lD,MAAO,CACLuQ,OACe,GAAbgwC,IACmB,QAAlB,GAAAhD,GAAgB,UAAE,QAAlB,GAAoBsI,gBACiB,IAAlB,QAAlB,GAAAtI,GAAgB,UAAE,cAAlB,GAAoBuI,eACrBhB,IAA4C,IAA3BvH,GAAgBvqC,QACK,IAApB,QAAlB,GAAAuqC,GAAgB,UAAE,cAAlB,GAAoBsI,iBACiB,IAAlB,QAAlB,GAAAtI,GAAgB,UAAE,cAAlB,GAAoBuI,cAClB,UACA,OACNtlD,QACe,GAAb+/C,GACI,EAGA,WAERx5C,QA7iCP,WACb,GAA8B,GAA1Bw2C,GAAgBvqC,OAClBmrC,IAAqB,GACrBtlB,OAAOotB,SAAS,CAAErmB,IAAK,EAAGsmB,SAAU,WAEpCn7C,IAAqB,OAChB,CAAC,IAAD,4CACCo7C,EAAmBpwB,WACkB,OAAvB,QAAlB,EAAAwnB,GAAgB,UAAE,aAAlB,EAAoB+G,mBAChB,EACkB,QADf,EACH/G,GAAgB,UAAE,aAAlB,EAAoB+G,mBAE1Bh8C,QAAQC,IAAI49C,GACZ79C,QAAQC,IAAsB,QAAnB,EAACg1C,GAAgB,UAAE,aAAlB,EAAoBgH,gBAEhC,IAAM6B,EAAc94C,IAAyB,QAAnB,EAACiwC,GAAgB,UAAE,aAAlB,EAAoB58B,cAAcnT,OAC3D,uBAEFlF,QAAQC,IAAIg1C,IACZp2C,IAAM,CACJC,OAAQ,OACRC,IAAKjB,GAAO,oCACZ5D,KAAM,CACJrB,GAAsB,QAApB,EAAEo8C,GAAgB,UAAE,aAAlB,EAAoBp8C,GACxB2nB,WAAYrmB,GACZk/C,WAAYr0C,IAAyB,QAAnB,EAACiwC,GAAgB,UAAE,aAAlB,EAAoBoE,YAAYn0C,OACjD,uBAEF64C,YACqC,OAAjB,QAAlB,EAAA9I,GAAgB,UAAE,aAAlB,EAAoB8I,aAChBn0B,GACkB,QADd,EACJqrB,GAAgB,UAAE,aAAlB,EAAoB8I,YAC1BR,gBACqB,IAAnBlG,GACI,GACmB,IAAnBA,GACA,EACAA,GAENmG,cACmB,IAAjBjG,GACI,GACiB,IAAjBA,GACA,EACAA,GAENyG,YACqC,OAAjB,QAAlB,EAAA/I,GAAgB,UAAE,aAAlB,EAAoB+I,aAChB7I,GACkB,QADR,EACVF,GAAgB,UAAE,aAAlB,EAAoB+I,YAC1BC,WACoC,OAAhB,QAAlB,EAAAhJ,GAAgB,UAAE,aAAlB,EAAoBgJ,YAChBpH,GACkB,QADT,EACT5B,GAAgB,UAAE,aAAlB,EAAoBgJ,WAC1BC,aACsC,OAAlB,QAAlB,EAAAjJ,GAAgB,UAAE,aAAlB,EAAoBiJ,cAChBnH,GACkB,QADR,EACV9B,GAAgB,UAAE,aAAlB,EAAoBiJ,aAC1BC,WACoC,OAAhB,QAAlB,EAAAlJ,GAAgB,UAAE,aAAlB,EAAoBkJ,YAChBlH,GACkB,QADT,EACThC,GAAgB,UAAE,aAAlB,EAAoBkJ,WAC1BC,cACuC,OAAnB,QAAlB,EAAAnJ,GAAgB,UAAE,aAAlB,EAAoBmJ,eAChB,KACkB,QADd,EACJnJ,GAAgB,UAAE,aAAlB,EAAoBmJ,cAC1BjC,gBAC0B,MAAxBxC,GAAa,MAAkB,EAAIA,GAAa,MAClDyC,iBAC0B,MAAxBzC,GAAa,MAAkB,EAAIA,GAAa,MAClD0C,eAC0B,MAAxB1C,GAAa,MAAkB,EAAIA,GAAa,MAClD2C,cAC0B,MAAxB3C,GAAa,MAAkB,EAAIA,GAAa,MAClD4C,eAC0B,MAAxB5C,GAAa,MAAkB,EAAIA,GAAa,MAClDsC,eACwC,OAApB,QAAlB,EAAAhH,GAAgB,UAAE,aAAlB,EAAoBgH,gBAChB,EACkB,QADf,EACHhH,GAAgB,UAAE,aAAlB,EAAoBgH,eAC1BD,kBAAmB6B,EACnBh8C,OACgC,OAAZ,QAAlB,EAAAozC,GAAgB,UAAE,aAAlB,EAAoBpzC,QAChB,KACkB,QADd,EACJozC,GAAgB,UAAE,aAAlB,EAAoBpzC,OAC1BwW,aAA6B,MAAfylC,EAAsB9H,GAAgB8H,EACpD3lC,aAAc69B,MAEf92C,MAAK,SAAUC,GAChB89C,KACAP,KACAtwC,IAAU,GACVgqC,IAAiB,GACjB7lB,OAAOotB,SAAS,CAAErmB,IAAK,EAAGsmB,SAAU,WAEpCjI,IAA4B,GAC5BI,IAAe,GAEfv2C,YAAW,WACT42C,IAAiB,GACjBhqC,IAAU,EACZ,GAAG,IACL,GACF,CAEF,EAo8BsC,WAEhB,SAAC,MAAO,IAAG,eAKf,OAOkB,GAAzBioC,GAAU,GAAG5oC,SACZ,IAEA,gBAAK5O,UAAU,iBAAgB,UAC7B,iBAAKA,UAAU,MAAK,WAClB,gBAAKA,UAAU,cAAa,UAC1B,iBAAKA,UAAU,QAAO,WACpB,mBAAOA,UAAU,QAAQiN,QAAQ,eAAc,UAAC,sBAE9C,gBAAKjN,UAAU,aAAY,SAAC,UAE9B,iBAAMA,UAAU,QAAO,SAAC,OACxB,gBAAKA,UAAU,QAAO,UACpB,gBAAKA,UAAU,mBAAkB,SACV,QAAnB,GAACo4C,GAAgB,UAAE,QAAlB,GAAoBsI,gBACtBf,IAA4C,IAA3BvH,GAAgBvqC,QAC1B,GAARitC,IACE,SAAC,IAAU,CACT3uC,SACoB,QAAlB,GAAAisC,GAAgB,UAAE,QAAlB,GAAoBoE,WAChBr0C,IACoB,QADd,GACJiwC,GAAgB,UAAE,cAAlB,GAAoBoE,WACpB,cACA1vC,SACF2vC,GAENnwC,WAAW,cACXC,mBAAiB,EACjBC,kBAAgB,EAChBnB,UAAU,EACVoB,aAAa,SACbC,QAASvE,MAASiW,QAAQ,SAAStR,SACnCua,QAASlf,MAASo7C,MAAM,SAASz2C,SACjC02C,WAAYnH,GACZ9wC,SAAUoxC,GACV8G,mBAAoB7G,GACpB8G,kBAAmB9G,GACnBhxC,UAAW,SAAClI,GACVA,EAAEwH,gBACJ,KAGF,gBACElL,UAAU,oBACVuD,IAAK,SAACiI,GACJjI,GAAIkI,QAAQ,GAAKD,CACnB,EAAE,UAEF,SAAC,IAAU,CACTW,SACoB,QAAlB,GAAAisC,GAAgB,UAAE,QAAlB,GAAoBoE,WAChBr0C,IACoB,QADd,GACJiwC,GAAgB,UAAE,cAAlB,GAAoBoE,WACpB,cACA1vC,SACF2vC,GAENnwC,WAAW,cACXC,mBAAiB,EACjBC,kBAAgB,EAChBC,aAAa,SACbC,QAASvE,MAASiW,QAAQ,SAAStR,SACnCua,QAASlf,MAASo7C,MAAM,SAASz2C,SACjC02C,WAAYnH,GACZ9wC,SAAUoxC,GACV8G,mBAAoB7G,GACpB8G,kBAAmB9G,GACnBhxC,UAAW,SAAClI,GACVA,EAAEwH,gBACJ,gBAQd,gBAAKlL,UAAU,aAAY,UACzB,iBAAKA,UAAU,QAAO,WACpB,mBAAOA,UAAU,QAAQiN,QAAQ,kBAAiB,UAAC,uBAEjD,gBAAKjN,UAAU,aAAY,SAAC,UAE9B,iBAAMA,UAAU,QAAO,SAAC,OACxB,gBAAKA,UAAU,QAAO,UACpB,yBACuB,QAAnB,GAACo4C,GAAgB,UAAE,QAAlB,GAAoBsI,gBACtBf,IAA4C,IAA3BvH,GAAgBvqC,QAC1B,GAARitC,IACE,kBACEx3C,MAAOu0C,GACPn2C,KAAK,OACLoC,UAAU,EACViI,aAAgC,QAApB,GAAEqsC,GAAgB,UAAE,cAAlB,GAAoBuL,aAClCj4C,YAAY,mCACZE,UAAWZ,GACXK,UAAU,KAGZ,gBACErL,UAAU,gEACVuD,IAAK,SAACiI,GACJjI,GAAIkI,QAAQ,GAAKD,CACnB,EAAE,UAEF,SAAC,EAAAnI,wBAAuB,CACtBrD,UAAU,cACVsD,MAAOu0C,GACPn2C,KAAK,OACLoC,UAAU,EACViJ,kBACoB,QADH,GACfqrC,GAAgB,UAAE,cAAlB,GAAoBuL,aAEtBj4C,YAAY,mCACZE,UAAWZ,GACXvH,SAAU,SAACC,GACTu2C,GAAav2C,EAAE1H,KACI,OAAOo8C,IACZv5C,SAAQ,SAACf,GACrBA,EAAKsjD,WAAa19C,EAAE1H,EACtB,GACF,gBAQd,gBAAKgE,UAAU,aAAY,UACzB,iBAAKA,UAAU,MAAK,WAClB,mBAAOA,UAAU,QAAQiN,QAAQ,eAAc,UAAC,sBAE9C,gBAAKjN,UAAU,aAAY,SAAC,UAE9B,iBAAMA,UAAU,QAAO,SAAC,OACxB,gBAAKA,UAAU,QAAO,UACpB,gBAAKA,UAAU,+BAA8B,SACtB,QAAnB,GAACo4C,GAAgB,UAAE,QAAlB,GAAoBsI,gBACtBf,IAA4C,IAA3BvH,GAAgBvqC,QAC1B,GAARitC,IACE,kBACEp5C,KAAK,OACL4B,MAAOy0C,GACPj0C,UAAU,EACViI,aAAgC,QAApB,GAAEqsC,GAAgB,UAAE,cAAlB,GAAoBwL,eAClCl4C,YAAY,mCACZL,UAAU,KAGZ,gBACErL,UAAU,gEACVuD,IAAK,SAACiI,GACJjI,GAAIkI,QAAQ,GAAKD,CACnB,EAAE,UAEF,SAAC,EAAAnI,wBAAuB,CACtBC,MAAOy0C,GACPr2C,KAAK,OACLoC,UAAU,EACViJ,kBACoB,QADH,GACfqrC,GAAgB,UAAE,cAAlB,GAAoBwL,eAEtBl4C,YAAY,mCACZjI,SAAU,SAACC,GACTy2C,GAAez2C,EAAE1H,KACG,OAAOo8C,IACZv5C,SAAQ,SAACf,GACtBA,EAAKujD,aAAe39C,EAAE1H,EACxB,GACF,gBAQd,gBAAKgE,UAAU,aAAY,UACzB,iBAAKA,UAAU,QAAO,WACpB,mBAAOA,UAAU,QAAQiN,QAAQ,cAAa,UAAC,0CAE7C,iBAAMpS,MAAO,CAAEwP,MAAO,OAAQ,SAAC,cAEjC,iBAAMrK,UAAU,QAAO,SAAC,OACxB,gBAAKA,UAAU,QAAO,SACC,QAAnB,GAACo4C,GAAgB,UAAE,QAAlB,GAAoBsI,gBACtBf,IAA4C,IAA3BvH,GAAgBvqC,QACjC8xC,IAA4C,IAA3BvH,GAAgBvqC,QAC1B,GAARitC,IACE,kBACEp5C,KAAK,OACL2J,UACoB,QAAlB,GAAA+sC,GAAgB,UAAE,cAAlB,GAAoBsI,iBAA0B,GAAR5F,GAExC96C,UAAU,eACVhE,GAAG,eACH8P,UAAQ,EACRvG,MAAyB,QAApB,GAAE6yC,GAAgB,UAAE,cAAlB,GAAoBkJ,cAG7B,gBACEthD,UAAU,mBACVuD,IAAK,SAACiI,GACJjI,GAAIkI,QAAQ,GAAKD,CACnB,EAAE,UAEF,kBACE9J,KAAK,OACL1B,UAAU,qBACVhE,GAAG,eACH8P,UAAQ,EACRvG,MAAyB,QAApB,GAAE6yC,GAAgB,UAAE,cAAlB,GAAoBkJ,WAC3B/1C,SAAU,SAAC7H,GACT22C,GAAa32C,EAAEmH,OAAOtF,QACC,OAAO6yC,IACZv5C,SAAQ,SAACf,GACzBA,EAAKwjD,WAAa59C,EAAEmH,OAAOtF,KAC7B,GACF,mBAUlB,gBAAKvF,UAAU,oCAAmC,UAChD,mBAAOA,UAAU,kDAAiD,WAChE,4BACE,2BACE,eAAInF,MAAO,CAAEC,MAAO,MAAO0lB,UAAW,UAAW,SAAC,UAClD,eAAI3lB,MAAO,CAAEC,MAAO,MAAO0lB,UAAW,UAAW,SAAC,qBAKtD,8BACE,2BACE,eAAI3lB,MAAO,CAAEE,OAAQ,QAAS,SAAC,WAC/B,yBACE,gBAAKiF,UAAU,QAAO,SAQM,GAAzBw3C,GAAU,GAAG5oC,UACZ,mBAAQvD,UAAQ,YACd,mBAAQ9F,OAAK,WAAC,yBAGhB,oBACEvJ,GAAG,QACHuJ,WACqCiB,IAAjB,QAAlB,GAAA4xC,GAAgB,UAAE,cAAlB,GAAoB+I,aAChB,GACkB,QADhB,GACF/I,GAAgB,UAAE,cAAlB,GAAoB+I,YAE1B51C,SAAU,SAACrL,GAAK,OAvhDf,SAAC+1B,GAC1B,IAAM4tB,EAAiB9hD,SAASk0B,GAE1BysB,GAAsB,OAAOtK,IACnCsK,EAAuB,IAAE,kBACpBA,EAAuB,IAAE,IAC5BvB,YAAa0C,IAEftL,GAAcsL,GACdxL,GAAmBqK,EACrB,CA8gD4BoB,CAAmB5jD,EAAM2K,OAAOtF,MAAM,EAExCvF,UAAS,kBACe,IAAtB2F,GAA6B,cAAgB,IAE/C0F,SAC0C,KAApB,QAAnB,GAAC+sC,GAAgB,UAAE,SAAlB,GAAoBsI,iBACJ,GAAjBf,KACmB,QADE,GACpBvH,GAAgB,UAAE,cAAlB,GAAoBsI,iBACgB,IAAlB,QAAlB,GAAAtI,GAAgB,UAAE,cAAlB,GAAoBuI,eACrBhB,IAA4C,IAA3BvH,GAAgBvqC,OACnC,WAED,mBAAQtI,OAAK,WAAC,uBACd,mBAAQA,MAAM,OAAM,SAAC,gBACrB,mBAAQA,MAAM,OAAM,SAAC,kBACrB,mBAAQA,MAAM,OAAM,SAAC,uBAQ/B,2BACE,wBAAI,uBACJ,wBACqB,QAAlB,GAAA6yC,GAAgB,UAAE,QAAlB,GAAoBkH,gBACC,QADc,GAChClH,GAAgB,UAAE,cAAlB,GAAoBkH,gBACpB,QAIR,2BACE,wBAAI,2BACJ,wBACqB,QAAlB,GAAAlH,GAAgB,UAAE,QAAlB,GAAoBmH,iBACC,QADe,GACjCnH,GAAgB,UAAE,cAAlB,GAAoBmH,iBACpB,QAIR,2BACE,wBAAI,qBACJ,wBACqB,QAAlB,GAAAnH,GAAgB,UAAE,QAAlB,GAAoBoH,eACC,QADa,GAC/BpH,GAAgB,UAAE,cAAlB,GAAoBoH,eACpB,QAIR,2BACE,wBAAI,aACJ,wBACqB,QAAlB,GAAApH,GAAgB,UAAE,QAAlB,GAAoBqH,cACC,QADY,GAC9BrH,GAAgB,UAAE,cAAlB,GAAoBqH,cACpB,QAIR,2BACE,wBAAI,oBACJ,wBACqB,QAAlB,GAAArH,GAAgB,UAAE,QAAlB,GAAoBsH,eACC,QADa,GAC/BtH,GAAgB,UAAE,cAAlB,GAAoBsH,eACpB,QAIR,2BACE,wBAAI,qBACJ,wBACGnC,MAAwB,QAAnB,GAACnF,GAAgB,UAAE,cAAlB,GAAoBgH,gBACvB,MACkB,QADb,GACLhH,GAAgB,UAAE,cAAlB,GAAoBgH,qBAG5B,2BACE,wBAAI,+BACJ,wBACG7B,MAAwB,QAAnB,GAACnF,GAAgB,UAAE,cAAlB,GAAoB+G,mBACvB,MAAK,UACgB,QADhB,GACF/G,GAAgB,UAAE,cAAlB,GAAoB+G,kBAAiB,YAIhD,2BACE,wBAAI,aACJ,eACEtkD,MAAO,CACLylB,gBACiC,QAAb,QAAlB,GAAA83B,GAAgB,UAAE,cAAlB,GAAoBpzC,QAChB,UAC+B,QAAb,QAAlB,GAAAozC,GAAgB,UAAE,cAAlB,GAAoBpzC,QACpB,UAC+B,QAAb,QAAlB,GAAAozC,GAAgB,UAAE,cAAlB,GAAoBpzC,QACpB,GAC+B,QAAb,QAAlB,GAAAozC,GAAgB,UAAE,cAAlB,GAAoBpzC,QACpB,UACA,IACN,SAEiB,QAAlB,GAAAozC,GAAgB,UAAE,QAAlB,GAAoBiH,YACC,QADU,GAC5BjH,GAAgB,UAAE,cAAlB,GAAoBiH,YACpB,oBAOhB,gBAAKr/C,UAAU,aAAY,UACzB,UAAC,IAAS,CACRuF,MAAO6J,GACPqQ,eAAa,EACbC,aAAa,qBACbC,gBAAgB,OAChB+G,aAAa,QAEbq9B,QAAM,EAENz2C,KAAM,GACNtN,UAAU,uBAGV,WAEA,SAAC,MAAM,CACLmK,OAAO,OACPyI,MAAM,MACND,KA1iCI,SAAC8L,EAASiU,GAC1B,IACMof,EADQ1iC,GAAUjR,QAAQsgB,GACZ,EACpB,OAAO,iBAAM9c,MAAOmwC,EAAI,SAAEA,GAC5B,EAuiCcnwC,MAAO,MACPuqC,YAAa,SACb6F,YAAa,CAAEj3C,MAAO,KAAM62C,SAAU,QACtCpxB,UAAW,CAAEC,UAAW,aAE1B,SAAC,MAAM,CACL5N,MAAM,aACNzI,OAAO,QACPwI,KAlqBI,SAAC8L,GACjB,OACE,gBAAK9c,MAAO8c,EAAQulC,WAAYhkD,UAAU,WAAU,SACjDye,EAAQulC,YAGf,EA6pBcD,QAAM,KAER,SAAC,MAAM,CACLnxC,MAAM,cACNzI,OAAO,oBACPwI,KA/qBI,SAAC8L,GACjB,OACE,gBAAK9c,MAAO8c,EAAQwlC,YAAajkD,UAAU,WAAU,SAClDye,EAAQwlC,aAGf,KA2qBY,SAAC,MAAM,CACLF,QAAM,EACNnxC,MAAM,GACNzI,OAAO,aACPtM,QAAQ,EACR8U,KAnhCiB,SAAC8L,EAASylC,GAAyB,IAAD,oBAC/D,OACE,gCAC8B,IAA3B9L,GAAgBvqC,SAA0C,IAA1B2pC,GAAU,GAAG5oC,UAC5C,oBACE5S,GAAG,YACHgE,UAAU,SACVwD,KAAK,YACL2gD,QAAS,SAACzgD,GACRo+C,GAAkBp+C,EAAEmH,OAAOtF,MAAOkZ,EAAQg/B,eAC5C,EACAlyC,SAAU,SAAC7H,GACT,GACEtH,MAAMC,QAAQ+7C,KACa,IAA3BA,GAAgBvqC,OAChB,CACAjI,IAAqB,GACrB,IAAMoa,GAAO,kBACR2hC,IAAc,cAChBljC,EAAQziB,GAAK,SAEhB4lD,GAAkB5hC,GAClB0T,OAAOotB,SAAS,CAAErmB,IAAK,EAAGsmB,SAAU,UACtC,KAAO,CACLn7C,IAAqB,GACR6Y,EAAQziB,GAErBkmD,GAAax+C,EAAG+a,EAASojC,IACzB,IAAMuC,EAAW1gD,EAAEmH,OAAOtF,MAC1Bu8C,GAAkBsC,GAClB,IAAMpkC,GAAO,kBACR2hC,IAAc,cAChBljC,EAAQziB,GAAKooD,IAGhBxC,GAAkB5hC,EACpB,CACF,EACAza,MAAOo8C,GAAeljC,EAAQziB,KAAO,MACrCqP,UACyC,KAArB,QAAlB,EAAA+sC,GAAgB,UAAE,aAAlB,EAAoBsI,iBACnBf,IAA4C,IAA3BvH,GAAgBvqC,SACpB,IAAdmtC,GAEFngD,MAAO,CACLuQ,OACoB,QAAlB,EAAAgtC,GAAgB,UAAE,OAAlB,EAAoBsI,iBAAgC,IAAd1F,GAClC,cACA,OACN16B,gBACoB,QAAlB,EAAA83B,GAAgB,UAAE,OAAlB,EAAoBsI,iBAAgC,IAAd1F,GAClC,OACA,QACN3/C,QACoB,QAAlB,EAAA+8C,GAAgB,UAAE,OAAlB,EAAoBsI,iBAAgC,IAAd1F,GAClC,EACA,UACN3wC,MACoB,QAAlB,EAAA+tC,GAAgB,UAAE,OAAlB,EAAoBsI,iBAAgC,IAAd1F,GAClC,OACA,WACN,WAEF,mBAAQz1C,MAAM,MAAK,SAAC,sBACV,OAATizC,SAAS,IAATA,QAAS,EAATA,GAAWj8C,KAAI,SAAC0P,GAAI,OACnB,mBAAsB1G,MAAO0G,EAAKjQ,GAAG,SAClCiQ,EAAKC,WADKD,EAAKjQ,GAET,QAIb,mBAAQqP,UAAQ,YACd,4BAAS,yBAIb,oBACErP,GAAG,YACHgE,UAAU,SACVwD,KAAK,YACL2gD,QAAS,SAACzgD,GACRo+C,GAAkBp+C,EAAEmH,OAAOtF,MAAOkZ,EAAQg/B,eAC5C,EACAlyC,SAAU,SAAC7H,GACT,GAEEtH,MAAMC,QAAQ+7C,KACa,IAA3BA,GAAgBvqC,OAChB,CACAjI,IAAqB,GACrB,IAAMoa,GAAO,kBACR2hC,IAAc,cAChBljC,EAAQziB,GAAK,SAEhB4lD,GAAkB5hC,GAClB0T,OAAOotB,SAAS,CAAErmB,IAAK,EAAGsmB,SAAU,UACtC,KAAO,CACLn7C,IAAqB,GACR6Y,EAAQziB,GAErBkmD,GAAax+C,EAAG+a,EAASojC,IACzB,IAAMuC,EAAW1gD,EAAEmH,OAAOtF,MAC1Bu8C,GAAkBsC,GAClB,IAAMpkC,GAAO,kBACR2hC,IAAc,cAChBljC,EAAQziB,GAAKooD,IAGhBxC,GAAkB5hC,EACpB,CACF,EACAza,MAAOo8C,GAAeljC,EAAQziB,KAAOyiB,EAAQg/B,eAC7CpyC,UACyC,KAArB,QAAlB,EAAA+sC,GAAgB,UAAE,aAAlB,EAAoBsI,iBACnBf,IAA4C,IAA3BvH,GAAgBvqC,QACrB,GAAbmtC,GAEFngD,MAAO,CACLuQ,OACoB,QAAlB,EAAAgtC,GAAgB,UAAE,OAAlB,EAAoBsI,gBAA+B,GAAb1F,GAClC,UACA,OACN16B,gBACoB,QAAlB,EAAA83B,GAAgB,UAAE,OAAlB,EAAoBsI,gBAA+B,GAAb1F,GAClC,OACA,QACN3/C,QACoB,QAAlB,EAAA+8C,GAAgB,UAAE,OAAlB,EAAoBsI,gBAA+B,GAAb1F,GAClC,EACA,UACN3wC,MACoB,QAAlB,EAAA+tC,GAAgB,UAAE,OAAlB,EAAoBsI,gBAA+B,GAAb1F,GAClC,OACA,WACN,WAEF,mBAAQz1C,MAAM,MAAK,SAAC,sBACV,OAATizC,SAAS,IAATA,QAAS,EAATA,GAAWj8C,KAAI,SAAC0P,EAAM6B,GAAK,OAC1B,mBAAoBvI,MAAO0G,EAAKjQ,GAAG,SAChCiQ,EAAKC,WADK4B,EAEJ,SAKnB,EAm4BcikC,YAAa,CAAEj3C,MAAO,MAAO62C,SAAU,WAEzC,SAAC,MAAM,CACL/+B,MAAM,GACND,KA/jCc,SAAC8L,GAAa,IAAD,MACvC,OAAwC,QAAlB,QAAlB,EAAA25B,GAAgB,UAAE,aAAlB,EAAoB+I,cAEpB,gBAAKx/C,MAAO8c,EAAQ2jC,qBAAqB,SACtC3jC,EAAQ2jC,uBAGgC,QAAlB,QAAlB,EAAAhK,GAAgB,UAAE,aAAlB,EAAoB+I,cAE3B,gBAAKx/C,MAAO8c,EAAQ4jC,uBAAuB,SACxC5jC,EAAQ4jC,yBAGgC,QAAlB,QAAlB,EAAAjK,GAAgB,UAAE,aAAlB,EAAoB+I,cAE3B,gBAAKx/C,MAAO8c,EAAQ6jC,kBAAkB,SAAE7jC,EAAQ6jC,oBAE1B,OAAfhK,IAEP,gBAAK32C,MAAO8c,EAAQ2jC,qBAAqB,SACtC3jC,EAAQ2jC,uBAGW,OAAf9J,IAEP,gBAAK32C,MAAO8c,EAAQ4jC,uBAAuB,SACxC5jC,EAAQ4jC,yBAGW,OAAf/J,IAEP,gBAAK32C,MAAO8c,EAAQ6jC,kBAAkB,SAAE7jC,EAAQ6jC,qBAG3C,gBAAK3gD,MAAM,IAAG,SAAC,KAG1B,EA2hCcwI,OAAO,YACP4nC,YAAa,CAAEj3C,MAAO,KAAM62C,SAAU,WAGxC,SAAC,MAAM,CACL/+B,MAAM,cACNzI,OAAO,gBACPwI,KArrBE,SAAC8L,GACf,OACE,gBAAK9c,MAAO8c,EAAQ4lC,YAAarkD,UAAU,WAAU,SAClDye,EAAQ4lC,aAGf,KAirBY,SAAC,MAAM,CACLzxC,MAAM,UACNzI,OAAO,eACPwI,KAl5BG,SAAC8L,GAAa,IAAD,oBAE5B,OADAtb,QAAQC,IAAIqb,EAAQ0hC,QAAU,oBAE5B,gCAC8B,IAA3B/H,GAAgBvqC,SAA0C,IAA1B2pC,GAAU,GAAG5oC,UAC5C,qBACE5S,GAAG,UACHwH,KAAK,UACLkI,YAAY,eACZhK,KAAK,OACL6D,MAA2B,OAAb,OAAPkZ,QAAO,IAAPA,OAAO,EAAPA,EAAS0hC,SAAkB,GAAY,OAAP1hC,QAAO,IAAPA,OAAO,EAAPA,EAAS0hC,QAChD50C,SAAU,SAAC7H,GAAC,OAAKs/C,GAAqBt/C,EAAEmH,OAAOtF,MAAOkZ,EAAQ,EAC9DpT,UACoB,QAAlB,EAAA+sC,GAAgB,UAAE,aAAlB,EAAoBsI,iBACnBf,IAA4C,IAA3BvH,GAAgBvqC,SACzB,IAATitC,GAEFjgD,MAAO,CACLuQ,OACoB,QAAlB,EAAAgtC,GAAgB,UAAE,OAAlB,EAAoBsI,gBACnBf,IAA4C,IAA3BvH,GAAgBvqC,SACzB,IAATitC,GACI,UACA,OACNx6B,gBACoB,QAAlB,EAAA83B,GAAgB,UAAE,OAAlB,EAAoBsI,gBACnBf,IAA4C,IAA3BvH,GAAgBvqC,SACzB,IAATitC,GACI,OACA,QACNz/C,QACoB,QAAlB,EAAA+8C,GAAgB,UAAE,OAAlB,EAAoBsI,gBACnBf,IAA4C,IAA3BvH,GAAgBvqC,SACzB,IAATitC,GACI,EACA,UACNzwC,MACoB,QAAlB,EAAA+tC,GAAgB,UAAE,OAAlB,EAAoBsI,gBACnBf,IAA4C,IAA3BvH,GAAgBvqC,SACzB,IAATitC,GACI,OACA,cAIV,qBACEzvC,UAAQ,EACRK,YAAY,eACZ7Q,MAAO,CAAEuQ,OAAQ,kBAIrB,qBACEpP,GAAG,UACHwH,KAAK,UACLkI,YAAY,eACZhK,KAAK,OACLqK,aAAkC,SAAb,OAAP0S,QAAO,IAAPA,OAAO,EAAPA,EAAS0hC,SAAoB,GAAY,OAAP1hC,QAAO,IAAPA,OAAO,EAAPA,EAAS0hC,QACzD50C,SAAU,SAAC7H,GAAC,OAAKs/C,GAAqBt/C,EAAEmH,OAAOtF,MAAOkZ,EAAQ,EAC9DpT,UACoB,QAAlB,EAAA+sC,GAAgB,UAAE,aAAlB,EAAoBsI,iBACnBf,IAA4C,IAA3BvH,GAAgBvqC,QAC1B,GAARitC,GAEFjgD,MAAO,CACLuQ,OACoB,QAAlB,EAAAgtC,GAAgB,UAAE,OAAlB,EAAoBsI,gBACnBf,IAA4C,IAA3BvH,GAAgBvqC,QAC1B,GAARitC,GACI,UACA,OACNx6B,gBACoB,QAAlB,EAAA83B,GAAgB,UAAE,OAAlB,EAAoBsI,gBACnBf,IAA4C,IAA3BvH,GAAgBvqC,QAC1B,GAARitC,GACI,OACA,QACNz/C,QACoB,QAAlB,EAAA+8C,GAAgB,UAAE,OAAlB,EAAoBsI,gBACnBf,IAA4C,IAA3BvH,GAAgBvqC,QAC1B,GAARitC,GACI,EACA,UACNzwC,MACoB,QAAlB,EAAA+tC,GAAgB,UAAE,OAAlB,EAAoBsI,gBACnBf,IAA4C,IAA3BvH,GAAgBvqC,QAC1B,GAARitC,GACI,OACA,eAKhB,EAszBczvC,UAAiD,KAArB,QAAlB,GAAA+sC,GAAgB,UAAE,cAAlB,GAAoBsI,mBAEhC,SAAC,MAAM,CACL9tC,MAAM,aACNzI,OAAO,aACPwI,KAzzBE,SAAC8L,GAAa,IAAD,4DAC3B,OACE,gCAC6B,GAA1B25B,GAAgBvqC,SACf,qBACEtI,MAAiC,GAA1B6yC,GAAgBvqC,OAAc,GAAK4Q,EAAQsjC,WAClD12C,UACGs0C,IACyB,GAA1BvH,GAAgBvqC,SACuB,KAArB,QAAlB,EAAAuqC,GAAgB,UAAE,aAAlB,EAAoBsI,iBACmB,IAApB,QAAlB,EAAAtI,GAAgB,UAAE,aAAlB,EAAoBsI,iBACiB,IAAlB,QAAlB,EAAAtI,GAAgB,UAAE,aAAlB,EAAoBuI,cAExB9lD,MAAO,CACLuQ,QACGu0C,IACyB,GAA1BvH,GAAgBvqC,SACuB,KAArB,QAAlB,EAAAuqC,GAAgB,UAAE,aAAlB,EAAoBsI,iBACmB,IAApB,QAAlB,EAAAtI,GAAgB,UAAE,aAAlB,EAAoBsI,iBACiB,IAAlB,QAAlB,EAAAtI,GAAgB,UAAE,aAAlB,EAAoBuI,cAClB,UACA,OACNrgC,iBACGq/B,IACyB,GAA1BvH,GAAgBvqC,SACuB,KAArB,QAAlB,EAAAuqC,GAAgB,UAAE,aAAlB,EAAoBsI,iBACmB,IAApB,QAAlB,EAAAtI,GAAgB,UAAE,aAAlB,EAAoBsI,iBACiB,IAAlB,QAAlB,EAAAtI,GAAgB,UAAE,aAAlB,EAAoBuI,cAClB,OACA,QACNtlD,SACGskD,IACyB,GAA1BvH,GAAgBvqC,SACuB,KAArB,QAAlB,EAAAuqC,GAAgB,UAAE,aAAlB,EAAoBsI,iBACmB,IAApB,QAAlB,EAAAtI,GAAgB,UAAE,aAAlB,EAAoBsI,iBACiB,IAAlB,QAAlB,EAAAtI,GAAgB,UAAE,aAAlB,EAAoBuI,cAClB,EACA,UACNt2C,OACGs1C,IACyB,GAA1BvH,GAAgBvqC,SACuB,KAArB,QAAlB,EAAAuqC,GAAgB,UAAE,aAAlB,EAAoBsI,iBACmB,IAApB,QAAlB,EAAAtI,GAAgB,UAAE,aAAlB,EAAoBsI,iBACiB,IAAlB,QAAlB,EAAAtI,GAAgB,UAAE,aAAlB,EAAoBuI,cAClB,OACA,WAERp1C,SAAU,SAAC7H,GACTu/C,GAAuBv/C,EAAEmH,OAAOtF,MAAOkZ,EACzC,EACA/c,KAAK,OACLgK,YAAY,gBAGhB,qBACEK,aAAc0S,EAAQsjC,WACtB12C,UACGs0C,IACyB,GAA1BvH,GAAgBvqC,SACuB,KAArB,QAAlB,EAAAuqC,GAAgB,UAAE,aAAlB,EAAoBsI,iBACmB,IAApB,QAAlB,EAAAtI,GAAgB,UAAE,aAAlB,EAAoBsI,iBACiB,IAAlB,QAAlB,EAAAtI,GAAgB,UAAE,aAAlB,EAAoBuI,cAExB9lD,MAAO,CACLuQ,QACGu0C,IACyB,GAA1BvH,GAAgBvqC,SACuB,KAArB,QAAlB,EAAAuqC,GAAgB,UAAE,aAAlB,EAAoBsI,iBACmB,IAApB,QAAlB,EAAAtI,GAAgB,UAAE,aAAlB,EAAoBsI,iBACiB,IAAlB,QAAlB,EAAAtI,GAAgB,UAAE,aAAlB,EAAoBuI,cAClB,UACA,OACNrgC,iBACGq/B,IACyB,GAA1BvH,GAAgBvqC,SACuB,KAArB,QAAlB,EAAAuqC,GAAgB,UAAE,aAAlB,EAAoBsI,iBACmB,IAApB,QAAlB,EAAAtI,GAAgB,UAAE,aAAlB,EAAoBsI,iBACiB,IAAlB,QAAlB,EAAAtI,GAAgB,UAAE,aAAlB,EAAoBuI,cAClB,OACA,QACNtlD,SACGskD,IACyB,GAA1BvH,GAAgBvqC,SACuB,KAArB,QAAlB,EAAAuqC,GAAgB,UAAE,aAAlB,EAAoBsI,iBACmB,IAApB,QAAlB,EAAAtI,GAAgB,UAAE,aAAlB,EAAoBsI,iBACiB,IAAlB,QAAlB,EAAAtI,GAAgB,UAAE,aAAlB,EAAoBuI,cAClB,EACA,UACNt2C,OACGs1C,IACyB,GAA1BvH,GAAgBvqC,SACuB,KAArB,QAAlB,EAAAuqC,GAAgB,UAAE,aAAlB,EAAoBsI,iBACmB,IAApB,QAAlB,EAAAtI,GAAgB,UAAE,aAAlB,EAAoBsI,iBACiB,IAAlB,QAAlB,EAAAtI,GAAgB,UAAE,aAAlB,EAAoBuI,cAClB,OACA,WAERp1C,SAAU,SAAC7H,GACTu/C,GAAuBv/C,EAAEmH,OAAOtF,MAAOkZ,EACzC,EACA/c,KAAK,OACLgK,YAAY,iBAIpB,EAitBcL,UAAiD,KAArB,QAAlB,GAAA+sC,GAAgB,UAAE,cAAlB,GAAoBsI,4BAyC9C,E,uBCz3EA,OA5EA,SAA6BhmD,GAC3B,IACE4pD,EAKE5pD,EALF4pD,YACAC,EAIE7pD,EAJF6pD,eACAC,EAGE9pD,EAHF8pD,eACAC,EAEE/pD,EAFF+pD,kBACAC,EACEhqD,EADFgqD,iBAEIzjD,EAAUC,EAAAA,EAAAA,QAqChB,OACE,gBAAKlB,UAAU,YAAW,UACxB,SAAC,IAAS,WACR,UAAC,KAAM,CACLnF,MAAO,CAAEuQ,OAAQ,cACjBiU,UAAU,SACV5d,SAAS,SACTH,QAASgjD,EACT/iD,KAAK,KACLvB,UAAU,aACVwB,QAAS,kBAAM+iD,GAAe,EAAM,EAAC,WAErC,SAAC,KAAY,CAACvkD,UAAU,GAAE,UACxB,SAAC,KAAW,WACV,iBAAMA,UAAU,GAAE,SAAC,qBAGvB,UAAC,KAAU,YACT,0BAAM,6CACN,iBAAKA,UAAU,iCAAgC,WAC7C,mBAAQA,UAAU,oBAAoB4B,QAzB7B,WACnBuB,QAAQC,IAAI,SA9BZD,QAAQC,IAAI,YAEZpB,IAAM,CACJC,OAAQ,SACRC,IAAI,GAAD,OAAKjB,EAAO,oDAA4CujD,GAC3DG,OAAQ,CACNC,OAAQJ,KAGTniD,MAAK,SAACC,GAGL,GAFAa,QAAQC,IAAI,qBACZmhD,GAAe,GACM,GAAjBjiD,EAASjF,KAKX,OAJAqnD,GAAiB,QACjB/hD,YAAW,WACT+hD,GAAiB,EACnB,GAAG,KAGLD,GAAkB,GAClB9hD,YAAW,WACT8hD,GAAkB,EACpB,GAAG,IACL,IACCjiD,OAAM,SAACC,GACNU,QAAQV,MAAM,yBAA0BA,EAC1C,GAMJ,EAsBwE,SAAC,YAG7D,mBAAQzC,UAAU,oBAAmB,SAAC,uBAOpD,ECEA,OA7EA,SAAgCtF,GAC9B,IACE4pD,EAKE5pD,EALF4pD,YACAC,EAIE7pD,EAJF6pD,eACAM,EAGEnqD,EAHFmqD,OACAJ,EAEE/pD,EAFF+pD,kBACAK,EACEpqD,EADFoqD,gBAEI7jD,EAAUC,EAAAA,EAAAA,QAsChB,OACE,gBAAKlB,UAAU,YAAW,UACxB,SAAC,IAAS,WACR,UAAC,KAAM,CACLnF,MAAO,CAAEuQ,OAAQ,cACjBiU,UAAU,SACV5d,SAAS,SACTH,QAASgjD,EACT/iD,KAAK,KACLvB,UAAU,aACVwB,QAAS,kBAAM+iD,GAAe,EAAM,EAAC,WAErC,SAAC,KAAY,CAACvkD,UAAU,GAAE,UACxB,SAAC,KAAW,WACV,iBAAMA,UAAU,GAAE,SAAC,qBAGvB,UAAC,KAAU,YACT,0BAAM,iDACN,iBAAKA,UAAU,iCAAgC,WAC7C,mBAAQA,UAAU,oBAAoB4B,QAzB7B,WACnBuB,QAAQC,IAAI,SA/BZD,QAAQC,IAAI,YAEZpB,IAAM,CACJC,OAAQ,SAERC,IAAI,GAAD,OAAKjB,EAAO,qDAA6C4jD,KAE3DxiD,MAAK,SAACC,GAEL,GADAa,QAAQC,IAAI,qBACS,GAAjBd,EAASjF,KAMX,OALAknD,GAAe,GACfO,GAAgB,QAChBniD,YAAW,WACTmiD,GAAgB,EAClB,GAAG,KAGLP,GAAe,GACfE,GAAkB,GAClB9hD,YAAW,WACT8hD,GAAkB,EACpB,GAAG,IACL,IACCjiD,OAAM,SAACC,GACNU,QAAQV,MAAM,yBAA0BA,GACxC8hD,GAAe,GACfE,GAAkB,EACpB,GAMJ,EAsBwE,SAAC,YAG7D,mBAAQzkD,UAAU,oBAAmB,SAAC,uBAOpD,ECusBA,OAtwBA,SAA+BtF,GAC7B,IAAQqqD,EACNrqD,EADMqqD,YAAaC,EACnBtqD,EADmBsqD,SAAUC,EAC7BvqD,EAD6BuqD,eAA6BC,GAC1DxqD,EAD6CyqD,YAC7CzqD,EAD0DwqD,WAEtDjkD,EAAUC,EAAAA,EAAAA,QAChB,GAA4BC,EAAAA,EAAAA,WAAS,GAAM,eAApCmO,EAAM,KAAEC,EAAS,KAClB2B,GAAkBhO,EAAAA,EAAAA,QAAO,MAC/B,GAAwC/B,EAAAA,EAAAA,WAAS,GAAM,eAAhDikD,EAAY,KAAEN,EAAe,KACpC,GAAgC3jD,EAAAA,EAAAA,UAAS,GAAE,eAApCkkD,EAAQ,KAAEC,EAAW,KAC5BniD,QAAQC,IAAI,YAAaiiD,GAEzB,IAAME,EAAoB,SAACC,EAAWC,EAASvb,EAAOwb,GACpD1jD,IAAAA,IAEIf,EAAO,6CACiCipC,EAAK,sBAAcsb,EAAS,oBAAYC,IAEjFpjD,MAAK,SAACE,GACL,IAAMlF,EAAOkF,EAAKlF,KAClB8F,QAAQC,IAAI/F,EAAKgoD,UACjBC,EAAYjoD,EAAKgoD,SACnB,IACC7iD,OAAM,SAACC,GACNU,QAAQV,MAAMA,EAChB,IAKF,IAHA,IAAMkjD,EAAW,GACXlO,EAAc,IAAI/yC,KAAK8gD,GAEtB/N,GAAe,IAAI/yC,KAAK+gD,IAAU,CACvC,IAAMG,EAAYnO,EAAYoO,SAG1BD,GAAa,GAAKA,GAAa,GACjCD,EAAS5mD,KAAK,IAAI2F,KAAK+yC,IAGzBA,EAAYqO,QAAQrO,EAAYsO,UAAY,EAC9C,CAEA,OAAQJ,EAAS93C,OAASw3C,GAAYK,CACxC,EAOA,GAAoDvkD,EAAAA,EAAAA,UAAS,IAAG,eAAzD6kD,EAAkB,KAAEC,EAAqB,KAChD,GAA4B9kD,EAAAA,EAAAA,UAAS,IAAG,eAAjC0jD,EAAM,KAAEqB,EAAS,KACxB,GAAsC/kD,EAAAA,EAAAA,WAAS,GAAM,eAA9CmjD,EAAW,KAAEC,EAAc,KAClC,GAAoDpjD,EAAAA,EAAAA,UAAS,IAAG,eAAzDglD,EAAkB,KAAEC,EAAqB,KAChD,GAA0CjlD,EAAAA,EAAAA,UAAS,IAAG,gBAA/CklD,GAAa,MAAEC,GAAgB,MACtC,IAA4CnlD,EAAAA,EAAAA,WAAS,GAAM,iBAApDolD,GAAc,MAAEC,GAAiB,MACxC,IAAkDrlD,EAAAA,EAAAA,WAAS,GAAM,iBAAvCslD,IAAF,MAAsB,OAC9C,IAAsCtlD,EAAAA,EAAAA,UAAS,IAAIuD,MAAO,iBAAnDgiD,GAAW,MAAEC,GAAc,MAClC,IAA0CxlD,EAAAA,EAAAA,UAAS,IAAIuD,MAAO,iBAAvDkiD,GAAa,MAAEC,GAAgB,MACtC,IAA0C1lD,EAAAA,EAAAA,UAAS,IAAG,iBACtD,IADoB,MAAkB,OACVA,EAAAA,EAAAA,WAAS,IAAM,iBAApCkf,GAAM,MAAEymC,GAAS,MACxB,IAA0C3lD,EAAAA,EAAAA,UAAS,IAAG,iBAA/C4lD,GAAa,MAAEC,GAAgB,MACtC,IAA4C7lD,EAAAA,EAAAA,UAAS,GAAE,iBAAhD8lD,GAAc,MAAEC,GAAiB,MACxC,IAAkD/lD,EAAAA,EAAAA,UAAS,GAAE,iBAAtDgmD,GAAiB,MAAEC,GAAoB,MAC9C,IAAoDjmD,EAAAA,EAAAA,UAAS,IAAG,iBAAzDkmD,GAAkB,MAAEC,GAAqB,MAChD,IAA0CnmD,EAAAA,EAAAA,YAAU,iBAA7ComD,GAAa,MAAEC,GAAgB,MACtC,IAA0CrmD,EAAAA,EAAAA,WAAS,GAAM,iBAAlDsmD,GAAa,MAAEC,GAAgB,MACtC,IAAkCvmD,EAAAA,EAAAA,WAAS,GAAM,iBAA1CwmD,GAAS,MAAEC,GAAY,MAC9B,IAAoCzmD,EAAAA,EAAAA,WAAS,GAAM,iBAA5C0mD,GAAU,MAAEC,GAAa,MAChC,IAA4C3mD,EAAAA,EAAAA,WAAS,GAAM,iBAApD4mD,GAAc,MAAEtD,GAAiB,MACxC,IAAwCtjD,EAAAA,EAAAA,UAAS,CAC/C0jD,OAAQ,GACR3a,MAAO,GACP8d,OAAQ7/C,IAAO,IAAIzD,MAAQ2D,OAAO,cAClC0lC,KAAM5lC,IAAO,IAAIzD,MAAQ2D,OAAO,cAChC4/C,OAAQ,GACRrD,OAAQ,KACR,iBAPKsD,GAAY,MAAEC,GAAe,MAQ9Bn3C,GAAak0C,EAAUj0C,MAC3B,SAACnT,GAAI,MAA2B,cAAtBA,EAAKiT,YAA4B,IAO7C,IAAgD5P,EAAAA,EAAAA,UAAS,CACvD6mD,OAAQ7/C,IAAO,IAAIzD,MAAQ2D,OAAO,cAClC0lC,KAAM5lC,IAAO,IAAIzD,MAAQ2D,OAAO,cAChCu8C,OAAQ,GACRwD,WAAY,GACZle,MAAO,GACPme,SAAU,EACVniB,SAAU,KACV,iBARKoiB,GAAgB,MAAEC,GAAmB,OAsC5C9qD,EAAAA,EAAAA,YAAU,YAxBU,WAClB,IAAI+qD,EAAKF,GAAiBpiB,SAASjsB,MAAM,KACzCjY,IAAAA,IAEIf,EAAO,8CAEH+jD,EAASD,EAAc,GAAGH,OAAM,mBACvB4D,EAAG,GAAE,kBAAUA,EAAG,KAEhCnmD,MAAK,SAACC,GACL,IAAMjF,EAAOiF,EAASjF,KACtBspD,GAAetpD,EAAK0wC,MACpB8Y,GAAiBxpD,EAAK2qD,QACtBG,IAAgB,SAACtkD,GAAI,yBAChBA,GAAI,IACPkqC,KAAM1wC,EAAK0wC,KACXia,OAAQ3qD,EAAK2qD,QAAM,GAEvB,IACCxlD,OAAM,SAACC,GACNU,QAAQV,MAAMA,EAChB,GACJ,CAGEgmD,EACF,GAAG,CAACH,GAAiBpiB,WAErB/iC,QAAQC,IAAI,WAAY4hD,GAExB7hD,QAAQC,IAAI,kBAAmBijD,IAC/BljD,QAAQC,IAAI,uBAAwB4iD,GAMpC,IAAM0C,GAAa,WACjB1mD,IAAAA,IAEIf,EAAO,mDAEH+jD,EAASD,EAAc,GAAGH,SAG/BviD,MAAK,SAACC,GACL,IAAMjF,EAAOiF,EAASjF,KACtBipD,GAAiBjpD,GACjB,IAAMsrD,EAActrD,EAAKugD,QACvB,SAACC,EAAKpyC,GAAO,OAAKoyC,EAAMpyC,EAAQm9C,QAAQ,GACxC,GAEF3D,EAAe0D,GACfxlD,QAAQC,IAAI,gBAAiBulD,GAC7BrB,GAAsBjqD,EACxB,IACCmF,OAAM,SAACC,GACNU,QAAQV,MAAMA,EAChB,GACJ,GAEAhF,EAAAA,EAAAA,YAAU,WACRirD,IACF,GAAG,CAACpE,KAEJ7mD,EAAAA,EAAAA,YAAU,WACRuE,IAAAA,IAEIf,EAAO,sDAEH+jD,EAASD,EAAc,GAAGH,SAG/BviD,MAAK,SAACC,GACL,IAAMjF,EAAOiF,EAASjF,KACtB4oD,EAAsB5oD,EAAKwrD,YAC3BzC,EAAsB/oD,EAAKyrD,YAC7B,IACCtmD,OAAM,SAACC,GACNU,QAAQV,MAAMA,EAChB,GACJ,GAAG,IAMH,IAAM4xB,IACJ,UAAC,KAAW,YACV,UAAC,KAAG,YACF,SAAC,IAAM,CACLzhB,MAAM,WACN/X,MAAO,CAAEC,MAAO,SAChBqP,OAAO,WACP4+C,QAAS,KAEX,SAAC,IAAM,CAAC5+C,OAAO,2BAA2BmqB,QAAS,KACnD,SAAC,IAAM,CAACnqB,OAAO,uBAAuBmqB,QAAS,KAC/C,SAAC,IAAM,CAACnqB,OAAO,8BAA8BmqB,QAAS,KACtD,SAAC,IAAM,CAACnqB,OAAO,uBAAuBmqB,QAAS,IACrB,GAAzB4wB,EAAU,GAAGt2C,WACZ,SAAC,IAAM,CACLzE,OAAO,UACPtP,MAAO,CAAEC,MAAO,OAAQ0lB,UAAW,UACnCuoC,QAAS,QAIf,UAAC,KAAG,YACF,SAAC,IAAM,CAACn2C,MAAM,SAASzI,OAAO,aAC9B,SAAC,IAAM,CAACyI,MAAM,OAAOzI,OAAO,WAC5B,SAAC,IAAM,CAACyI,MAAM,WAAWzI,OAAO,eAChC,SAAC,IAAM,CAACyI,MAAM,eAAezI,OAAO,eACpC,SAAC,IAAM,CAACyI,MAAM,aAAazI,OAAO,cAClC,SAAC,IAAM,CAACA,OAAO,eACf,SAAC,IAAM,CAACA,OAAO,aACf,SAAC,IAAM,CAACA,OAAO,eACf,SAAC,IAAM,CAACA,OAAO,eACf,SAAC,IAAM,CAACA,OAAO,eACf,SAAC,IAAM,CAACA,OAAO,mBAkDf6+C,GAAiB,SAACvqC,EAASjgB,GAC/B,OACE,SAAC,IAAU,CACTgF,KAAK,QACLxH,GAAG,QACHsQ,WAAW,cACXH,SACEm8C,GAAiBpiB,SACb,IAAIxhC,KAAKgiD,IACa,OAAtBjoC,EAAQwqC,WACR,GACA,IAAIvkD,KAAKgiD,IAEf96C,UAAW,SAAClI,GACVA,EAAEwH,gBACJ,EACAzH,SAAU,SAACspB,GACTo7B,IAAgB,SAACtkD,GAAI,yBAChBA,GAAI,IACPkqC,KAAM5lC,IAAO4kB,GAAM1kB,OAAO,eAAa,IAEzCs+C,GAAex+C,IAAO4kB,GAAM1kB,OAAO,cACrC,EACAkE,mBAAmB,EACnBC,kBAAkB,GAGxB,EAEM08C,GAAmB,SAACzqC,GACxB,OACE,SAAC,IAAU,CACTjb,KAAK,UACLxH,GAAG,UACHmQ,SACEm8C,GAAiBpiB,SACb,IAAIxhC,KAAKkiD,IACT,IAAIliD,KAAK+Z,EAAQsvB,OAAS,IAAIrpC,KAC9B,IAAIA,KACkB,OAAtB+Z,EAAQwqC,WACR,GACA,IAAIvkD,KAAKkiD,IAEft6C,WAAW,cACXV,UAAW,SAAClI,GACVA,EAAEwH,gBACJ,EACAzH,SAAU,SAACspB,GACTo7B,IAAgB,SAACtkD,GAAI,yBAChBA,GAAI,IACPmkD,OAAQ7/C,IAAO4kB,GAAM1kB,OAAO,eAAa,IAE3Cw+C,GAAiB1+C,IAAO4kB,GAAM1kB,OAAO,cACvC,EACAkE,mBAAmB,EACnBC,kBAAkB,GAGxB,EAEM28C,GAAqB,SAAC1qC,GAC1B,OACE,+BACE,kBACE/c,KAAK,OACL6J,SAAU,SAAC7H,GACTykD,IAAgB,SAACtkD,GAAI,yBAChBA,GAAI,IACPokD,OAAQvkD,EAAEmH,OAAOtF,OAAK,GAE1B,EACAvJ,GAAG,iBAIX,EA2IA,OACE,2BACGyrD,IACC,iBAAKznD,UAAU,oBAAmB,UAC/B,KACD,SAAC,MAAO,IAAG,mCAGb,GAED+nD,IACC,iBAAK/nD,UAAU,oBAAmB,UAC/B,KACD,SAAC,MAAO,IAAG,gCAGb,GAEDolD,GACC,iBAAKplD,UAAU,kBAAiB,UAC7B,KACD,SAAC,MAAa,IAAG,kCAGnB,IAEF,gBAAKA,UAAU,aAAY,UACzB,UAAC,IAAS,CACRuF,MAAO8gD,GACP5mC,eAAa,EACbiV,kBAAmBL,GACnB7U,SAAS,MACTiH,QAAQ,KACRzmB,UAAU,uBACVkgB,kBAAkB,6FAClBC,0BAA0B,sCAC1BC,mBAAoB,CAAC,GAAI,GAAI,IAC7BR,WAAS,EACTtS,KAAM,GAAG,WAET,SAAC,IAAM,CAELsF,MAAO,WACPzI,OAAQ,WACRwI,KAAM,SAACnU,GACL,OAAO+nD,IACL/nD,EAAQyqD,YAAclC,IACtB1mC,IACA,mBAAQhV,UAAQ,WACb86C,EACEtoD,QAAO,SAACC,GAAI,OAAKA,EAAK5B,QAAUsC,EAAQ0nC,QAAQ,IAChD3pC,KAAI,SAACuB,EAAMgQ,GAAK,OACf,mBAAoBvI,MAAOzH,EAAK5B,MAAM,SACnC4B,EAAK5B,OADK4R,EAEJ,MAGS,OAAtBtP,EAAQyqD,YAAuB5oC,IACjC,mBACE9U,SAAU,SAAC7H,GACT6kD,IAAoB,SAAC1kD,GAAI,yBACpBA,GAAI,IACPqiC,SAAUxiC,EAAEmH,OAAOtF,OAAK,GAE5B,EAAE,SAEDygD,EAAmBzpD,KAAI,SAACuB,EAAMgQ,GAAK,OAClC,mBAAmBvI,MAAOzH,EAAK9B,GAAG,SAC/B8B,EAAK5B,OADK4B,EAEJ,OAIb,8BAAGU,EAAQ0nC,UAEf,GAlCK,aAoCP,SAAC,IAAM,CAELtzB,MAAO,SACP/X,MAAO,CAAEuuD,WAAY,WAFhB,WAIP,SAAC,IAAM,CAELx2C,MAAO,OACP/X,MAAO,CAAEuuD,WAAY,WAFhB,SAIP,SAAC,IAAM,CAELx2C,MAAO,WACPD,KAAM,SAACnU,GACL,OACE,iBACE3D,MAAO,CACLwE,QAAS,QACT6mB,MAAO,SACP,SAED1nB,EAAQoqD,SAAS1pB,QAAQ,IAGhC,GAbK,aAeP,SAAC,IAAM,CAELtsB,MAAO,eACPD,KAAM,SAACnU,GACL,OACE,iBACE3D,MAAO,CACLwE,QAAS,QACT6mB,MAAO,SACP,SAEuB,MAAxB1nB,EAAQ6qD,aACL,OACA7qD,EAAQ6qD,aAAanqB,QAAQ,IAGvC,GAfK,iBAiBP,SAAC,IAAM,CAELtsB,MAAO,aACPD,KAAM,SAACnU,GACL,OACE,iBACE3D,MAAO,CACLwE,QAAS,QACT6mB,MAAO,SACP,SAEqB,MAAtB1nB,EAAQ8qD,WACL,OACA9qD,EAAQ8qD,WAAWpqB,QAAQ,IAGrC,GAfK,eAiBP,SAAC,IAAM,CAELtsB,MAAO,GACPD,KAAM,SAACnU,GACL,OAAOA,EAAQyqD,YAAclC,IAAiB1mC,IAEpB,OAAtB7hB,EAAQyqD,YAAuB5oC,GAD/B6oC,GAAiB1qD,GAGjB,EACN,GARK,KAUP,SAAC,IAAM,CAELoU,MAAO,GACPD,KAAM,SAACnU,GACL,OAAOA,EAAQyqD,YAAclC,IAAiB1mC,IAEpB,OAAtB7hB,EAAQyqD,YAAuB5oC,GAD/B2oC,GAAexqD,GAGf,EACN,GARK,KAUP,SAAC,IAAM,CAELoU,MAAO,GACPD,KAAM,SAACnU,GACL,OAAOA,EAAQyqD,YAAclC,IAAiB1mC,IAEpB,OAAtB7hB,EAAQyqD,YAAuB5oC,GAD/B8oC,KAGA,EACN,GARK,KAUP,SAAC,IAAM,CAELv2C,MAAO,GACPD,KAAM,SAACnU,GACL,OAAOA,EAAQyqD,YAAclC,IAC3B,iBAAMlsD,MAAO,CAAEwE,QAAS,QAAS6mB,MAAO,QAAS,SACJ,GAA1CnkB,SAASolD,IAAmBjoB,QAAQ,IACE,MAAvCn9B,SAASklD,IAAgB/nB,QAAQ,GAC7B,GACAqmB,EACEqB,GACAF,GACAloD,EAAQyqD,WACRf,GAAaD,QACb/oB,QAAQ,KAGhB,EAEJ,GAlBK,KAoBP,SAAC,IAAM,CAELtsB,MAAO,GACPD,KAAM,SAACnU,GACL,OAAOA,EAAQyqD,YAAclC,IAC3B,iBACElsD,MAAO,CACLwE,QAAS,QACT6mB,MAAO,SACP,SAEyC,GAA1CnkB,SAASolD,IAAmBjoB,QAAQ,IACE,MAAvCn9B,SAASklD,IAAgB/nB,QAAQ,GAC7B,GACAn9B,SAASolD,IAAmBjoB,QAAQ,KAG1C,EAEJ,GAlBK,KAoBP,SAAC,IAAM,CAELtsB,MAAO,GACPD,KAAM,SAACnU,GACL,OAAOA,EAAQyqD,YAAclC,IAC3B,iBACElsD,MAAO,CACLwE,QAAS,QACT6mB,MAAO,SACP,SAEsC,GAAvCnkB,SAASklD,IAAgB/nB,QAAQ,IACK,MAAvCn9B,SAASklD,IAAgB/nB,QAAQ,GAC7B,GACAn9B,SAASklD,IAAgB/nB,QAAQ,KAGvC,EAEJ,GAlBK,IAoBmB,GAAzBgmB,EAAU,GAAGt2C,WACZ,SAAC,IAAM,CACL2R,UAAW,CAAEC,UAAW,gBACxB7N,KAnXa,SAAC8L,GACxB,OACE,gBAAK5jB,MAAO,CAAE+B,YAAa,QAAS,UAClC,mBAAOwO,OAAO,UAAS,WACrB,SAAC,MAAU,CACTzJ,MAAM,OACN3B,UAAU,OACVqK,MAAM,SACNzI,QAAS,WACPkmD,IAAc,GACdtB,IAAkB,GAEhB0B,GAAahe,OAASzrB,EAAQwqC,YACP,IAAvBf,GAAaD,SAxIP,SAACrD,EAAQ1a,EAAO2a,GAClC7iD,IAAAA,IAEIf,EAAO,8CACkC2jD,EAAM,mBAAWC,EAAM,kBAAU3a,IAE3E7nC,MAAK,SAACC,GACL,IAAMjF,EAAOiF,EAASjF,KACtBspD,GAAetpD,EAAK0wC,MACpB8Y,GAAiBxpD,EAAK2qD,QACtBG,IAAgB,SAACtkD,GAAI,yBAChBA,GAAI,IACPkqC,KAAM1wC,EAAK0wC,KACXia,OAAQ3qD,EAAK2qD,QAAM,GAEvB,IACCxlD,OAAM,SAACC,GACNU,QAAQV,MAAMA,EAChB,GACJ,CAuHc8mD,CAAY9qC,EAAQmmC,OAAQnmC,EAAQwqC,WAAYxqC,EAAQomC,QACxDiC,IAAU,GACVE,GAAiBvoC,EAAQwqC,YACzBzB,GAAiB/oC,GACjB0pC,IAAgB,SAACtkD,GAAI,yBAChBA,GAAI,IACPghD,OAAQpmC,EAAQomC,OAChB3a,MAAOzrB,EAAQwqC,WACfrE,OAAQnmC,EAAQmmC,QAAM,KAzHpC5iD,IAAAA,IACO,GAAD,OAAIf,EAAO,gCAAgC,CAC7C0jD,OAAQuD,KAET7lD,MAAK,SAACC,GACL,IAAMjF,EAAOiF,EAASjF,KACtB+pD,GAAqB/pD,EAAK,GAAGmsD,eAC7BtC,GAAkB7pD,EAAK,GAAG8nD,YAC5B,IACC3iD,OAAM,SAACC,GACNU,QAAQV,MAAMA,EAChB,GAmHM,IACA,QAEF,iBACEb,QAAS,WACP2iD,GAAe,GACf2B,EAAUznC,EAAQ2pC,WACpB,EAAE,UAEF,SAAC,MAAY,CAACzmD,MAAM,SAAS0I,MAAM,iBAK7C,SA8U6B,IAAd,OAAV2G,SAAU,IAAVA,QAAU,EAAVA,GAAYpC,WACX,iBAAK5O,UAAU,uDAAsD,WACnE,oBACEA,UAAU,kBACV4B,QAAS,YA5UJ,WACbkmD,IAAc,GACdF,IAAa,GACbd,IAAU,GACVL,IAAqB,GACrB,IAAMgD,EAAS,CACbvjB,SAAU,GACV8hB,OAAQ,GACRja,KAAM,GACN6a,SAAU,EACVS,aAAc,EACdC,WAAY,EACZL,WAAY,OAGd3C,IAAiB,SAACoD,GAAiB,OAAMD,GAAM,eAAKC,GAAiB,GACvE,CA6TYhpC,EACF,EACAC,QAAQ,YACRtV,WAAWw8C,GAA0B,WAErC,SAAC,MAAY,CAACtmD,KAAK,UAAU,WAE/B,oBACEvB,UAAU,kBACV2gB,QAAQ,YACR/e,QAAS,YAzTC,WAClB,IAAM+iC,EAAahiC,YAAW,WAC5B4M,GAAU,EACZ,GAAG,KACHu4C,IAAc,GACdhB,IAAU,GAEV9kD,IAAAA,KAEI,UACGf,EAAO,wCACV0mD,GACI,CACEK,OAAQ7/C,IAAOy+C,IAAev+C,OAAO,cACrC0lC,KAAM5lC,IAAOu+C,IAAar+C,OAAO,cACjCu8C,OAAQI,EAASD,EAAc,GAAGH,OAClCwD,WAAY,OACZle,MAAO,OACPme,SAAiC,IAAvBH,GAAaD,OAAe,EAAIC,GAAaD,OACvD/hB,SAAUoiB,GAAiBpiB,UAE7B,CACE8hB,OAAQ7/C,IAAOo/C,GAAcS,QAAQ3/C,OAAO,cAC5C0lC,KAAM5lC,IAAOo/C,GAAcxZ,MAAM1lC,OAAO,cACxCu8C,OAAQ2C,GAAc3C,OACtBwD,WAAYb,GAAca,WAC1Ble,MAAOqd,GAAc0B,WACrBZ,SAAiC,IAAvBH,GAAaD,OAAe,EAAIC,GAAaD,OACvD/hB,SAAUqhB,GAAc1C,OAAS,IAAM0C,GAAc0B,aAG5D5mD,MAAK,SAACC,GACL,IAAMjF,EAAOiF,EAASjF,KAGtB,GAFA2nC,aAAaL,GACbp1B,GAAU,GACK,MAAXlS,EAAKrB,IAAyB,IAAXqB,EAAKrB,GAG1B,OAFA0rD,IAAiB,QACjBgB,KAGFd,IAAa,GACbd,IAAU,GACVL,IAAqB,GACrBD,IAAkB,GAClBkB,IAAiB,GACjB/kD,YAAW,WACT+kD,IAAiB,EACnB,GAAG,KACHgB,IACF,IACClmD,OAAM,SAACC,GACNU,QAAQV,MAAMA,EAChB,GACJ,CAqQYknD,EACF,EACAt+C,UAAUw8C,GAA0B,WAEpC,SAAC,MAAO,CAACtmD,KAAK,UAAU,YAE1B,oBACEvB,UAAU,kBACV2gB,QAAQ,YACR/e,QAAS,WA3UjBkmD,IAAc,GACdhB,IAAU,GACVR,GAAiBe,GA2UT,EACAh8C,UAAUw8C,GAA0B,WAEpC,SAAC,MAAO,IAAG,gBAIf,GAEDvD,GACC,SAAC,GAAsB,CACrBQ,gBAAiBA,EACjBR,YAAaA,EACbC,eAAgBA,EAChBM,OAAQA,EACRJ,kBAAmBA,KAGrB,GAEDn1C,GAAS,SAACiE,EAAA,EAAM,CAACC,YAprBF,WAClBtC,EAAgBzF,SAAWyF,EAAgBzF,QAAQgI,QACnDlE,GAAU,EACZ,IAirBqD,KAGvD,EC/nBA,OAjJA,SAA+B7U,GAC7B,IACEkvD,EAKElvD,EALFkvD,cACAC,EAIEnvD,EAJFmvD,iBACA7E,EAGEtqD,EAHFsqD,SACAD,EAEErqD,EAFFqqD,YACAG,EACExqD,EADFwqD,UAEF,GAAsC/jD,EAAAA,EAAAA,UAAS,GAAE,eAA1CgkD,EAAW,KAAEF,EAAc,KAKlC,OAJgB/jD,EAAAA,EAAAA,SAKd,gBAAKlB,UAAU,YAAW,UACxB,UAAC,KAAM,CACLqf,UAAU,SACV5d,SAAS,SACTH,QAASsoD,EACTroD,KAAK,KACLvB,UAAU,aACVwB,QAAS,kBAAMqoD,GAAiB,EAAM,EAAC,WAEvC,SAAC,KAAY,CAAC7pD,UAAU,GAAE,UACxB,SAAC,KAAW,WACV,iBAAMA,UAAU,GAAE,SAAC,6BAGvB,UAAC,KAAU,CAACnF,MAAO,CAAEuQ,OAAQ,QAAS,WACpC,gBACEpL,UAAU,qBACVnF,MAAO,CAAEylB,gBAAiB,WAAY,UAEtC,iBAAKtgB,UAAU,aAAY,WACzB,iBAAKA,UAAU,oBAAmB,WAChC,gBAAKA,UAAU,aAAY,UACzB,iBAAKA,UAAU,MAAK,WAClB,kBAAOA,UAAU,oBAAmB,SAAC,eACrC,iBAAMA,UAAU,WAAU,SAAC,OAC3B,iBAAMA,UAAU,SAAQ,SACrBglD,EAASD,EAAc,GAAG+E,gBAIjC,gBAAK9pD,UAAU,aAAY,UACzB,iBAAKA,UAAU,MAAK,WAClB,kBAAOA,UAAU,oBAAmB,SAAC,qBACrC,iBAAMA,UAAU,WAAU,SAAC,OAC3B,iBAAMA,UAAU,SAAQ,SACrBmI,IAAO68C,EAASD,EAAc,GAAGgF,OAAO1hD,OACvC,uBAKR,gBAAKrI,UAAU,aAAY,UACzB,iBAAKA,UAAU,MAAK,WAClB,kBAAOA,UAAU,oBAAmB,SAAC,mBACrC,iBAAMA,UAAU,WAAU,SAAC,OAC3B,iBAAMA,UAAU,SAAQ,SACrBmI,IAAO68C,EAASD,EAAc,GAAGiF,QAAQ3hD,OACxC,uBAKR,gBAAKrI,UAAU,aAAY,UACzB,iBAAKA,UAAU,MAAK,WAClB,kBAAOA,UAAU,oBAAmB,SAAC,UACrC,iBAAMA,UAAU,WAAU,SAAC,OAC3B,iBAAMA,UAAU,SAAQ,SACiB,MAAtCglD,EAASD,EAAc,GAAGkF,SACvB,MACAjF,EAASD,EAAc,GAAGkF,oBAKtC,iBAAKjqD,UAAU,YAAW,WACxB,gBAAKA,UAAU,aAAY,UACzB,iBACEA,UAAU,MACVnF,MAAO,CAAEgC,WAAY,oBAAqB,WAE1C,kBAAOmD,UAAU,oBAAmB,SAAC,mBACrC,iBAAMA,UAAU,WAAU,SAAC,OAC3B,iBAAMA,UAAU,SAAQ,SACrBglD,EAASD,EAAc,GAAGmF,qBAIjC,gBAAKlqD,UAAU,aAAY,UACzB,iBACEA,UAAU,MACVnF,MAAO,CAAEgC,WAAY,oBAAqB,WAE1C,kBAAOmD,UAAU,oBAAmB,SAAC,kBACrC,iBAAMA,UAAU,WAAU,SAAC,OAC3B,iBAAMA,UAAU,SAAQ,SAAEmlD,UAG9B,gBAAKnlD,UAAU,aAAY,UACzB,iBACEA,UAAU,MACVnF,MAAO,CAAEgC,WAAY,oBAAqB,WAE1C,kBAAOmD,UAAU,oBAAmB,SAAC,oBACrC,iBAAMA,UAAU,WAAU,SAAC,OAC3B,kBAAMA,UAAU,SAAQ,UACrB,IACAglD,EAASD,EAAc,GAAGmF,aAAe/E,WAIhD,gBAAKnlD,UAAU,aAAY,UACzB,iBACEA,UAAU,MACVnF,MAAO,CAAEgC,WAAY,oBAAqB,WAE1C,kBAAOmD,UAAU,oBAAmB,SAAC,gBACrC,iBAAMA,UAAU,WAAU,SAAC,OAC3B,iBAAMA,UAAU,SAAQ,SACkB,MAAvCglD,EAASD,EAAc,GAAGoF,UACvB,EACAnF,EAASD,EAAc,GAAGoF,0BAO1C,gBAAKnqD,UAAU,OAAM,UACnB,SAAC,GAAqB,CACpBilD,eAAgBA,EAChBE,YAAaA,EACbH,SAAUA,EACVD,YAAaA,EACbG,UAAWA,aAOzB,ECm2CA,OA1+CA,SAAkBxqD,GAChB,IAAQ4C,EAAyB5C,EAAzB4C,UAAW4nD,EAAcxqD,EAAdwqD,UACbl0C,EAAak0C,EAAUj0C,MAC3B,SAACnT,GAAI,MAA2B,cAAtBA,EAAKiT,YAA4B,IAEvCjQ,EAAeC,aAAaC,QAAQ,SACpCC,EAAUC,EAAAA,EAAAA,QAMhB,GAAgCC,EAAAA,EAAAA,UAAS,IAAG,eAArCipD,EAAQ,KAAEC,EAAW,KAC5B,GAA4ClpD,EAAAA,EAAAA,WAAS,GAAM,eAApD4mD,EAAc,KAAEtD,EAAiB,KACxC,GAA0CtjD,EAAAA,EAAAA,WAAS,GAAM,eAAlDmpD,EAAa,KAAE5F,EAAgB,KACtC,GAAgCvjD,EAAAA,EAAAA,UAAS,IAAG,eAArCopD,EAAQ,KAAEC,EAAW,KAC5B,GAAgCrpD,EAAAA,EAAAA,UAAS,IAAG,eAArC6jD,EAAQ,KAAEyF,EAAW,KAC5B,GAAgCtpD,EAAAA,EAAAA,UAAS,IAAG,eAArCupD,EAAQ,KAAEC,EAAW,KAC5B,GAAgDxpD,EAAAA,EAAAA,UAAS,IAAG,eAArDypD,EAAgB,KAAEC,EAAmB,KAC5C,GAA8C1pD,EAAAA,EAAAA,UAAS,IAAG,eAAnD2pD,EAAe,KAAEC,EAAkB,KAC1C,GAAsC5pD,EAAAA,EAAAA,UAAS,IAAG,gBAA3C4jD,GAAW,MAAEiG,GAAc,MAClC,IAA4C7pD,EAAAA,EAAAA,UAAS,IAAG,iBAAjDqjD,GAAc,MAAEyG,GAAiB,MACxC,IAAsC9pD,EAAAA,EAAAA,WAAS,GAAM,iBAA9CmjD,GAAW,MAAEC,GAAc,MAClC,IAAoCpjD,EAAAA,EAAAA,UAAS,IAAG,iBAAzC+pD,GAAU,MAAEC,GAAa,MAChC,IAA0ChqD,EAAAA,EAAAA,WAAS,GAAM,iBAAlDyoD,GAAa,MAAEC,GAAgB,MACtC,IAAkC1oD,EAAAA,EAAAA,WAAS,GAAM,iBAA1CiqD,GAAS,MAAEC,GAAY,MAC9B,IAA4ClqD,EAAAA,EAAAA,UAAS,IAAIuD,MAAO,iBAAzD4mD,GAAc,MAAEC,GAAiB,MACxC,IAAgDpqD,EAAAA,EAAAA,UAAS,IAAIuD,MAAO,iBAA7D8mD,GAAgB,MAAEC,GAAmB,MAC5C,IAAwCtqD,EAAAA,EAAAA,UAAS,MAAK,iBAA/CggC,GAAY,MAAEC,GAAe,MACpC,IAA0CjgC,EAAAA,EAAAA,UAAS,MAAK,iBAAjDuqD,GAAa,MAAEC,GAAgB,MAEhCC,GAAe,SAACpG,EAAWC,GAG/B,OAFiBoG,EAAAA,GAAAA,GAAkB,CAAE9B,MAAOvE,EAAWsG,IAAKrG,IAC7B5nD,QAAO,SAACkvB,GAAI,QAAMg/B,EAAAA,GAAAA,GAAUh/B,EAAK,IAC3Clf,MACvB,EAEMm+C,GAAkB,SAACxG,EAAWoG,GAUlC,IATA,IAAMK,EAAU,SAACl/B,EAAMm/B,GACrB,IAAMC,EAAS,IAAIznD,KAAKqoB,GAExB,OADAo/B,EAAOrG,QAAQqG,EAAOpG,UAAYmG,GAC3BC,CACT,EAEI1U,EAAc,IAAI/yC,KAAK8gD,GACvB4G,EAAgBR,EAEbQ,EAAgB,GACrB3U,EAAcwU,EAAQxU,EAAa,IAC9BsU,EAAAA,GAAAA,GAAUtU,IACb2U,IAIJ,OAAO3U,CACT,EAIA,IAA4Bt2C,EAAAA,EAAAA,UAAS,IAAG,iBAAjCyP,GAAM,MAAEC,GAAS,OAmBxBpT,EAAAA,EAAAA,YAAU,WAdRuE,IAAM,CACJC,OAAQ,MACRC,IAAKjB,EAAO,iDAA6CH,KACxDuB,MAAK,SAACE,GACIA,EAAKlF,KAEXwB,SAAQ,SAACf,GATA,aAURA,EAAKiT,cACPF,GAAU,CAAC/S,GAEf,GACF,GAKF,GAAG,KAKHL,EAAAA,EAAAA,YAAU,WACRuE,IAAM,CACJC,OAAQ,MACRC,IACEjB,EAAO,4DAC8C3D,KAEtD+E,MAAK,SAAUC,GACd,IAAIC,EAAOD,EAASjF,KACpBkuD,GAAkB,IAAI7mD,KAAKnC,EAAK,GAAG0iB,eACnCwmC,GAAoB,IAAI/mD,KAAKnC,EAAK,GAAGyiB,gBACvC,IACCxiB,OAAM,SAAUF,GACfa,QAAQC,IAAId,EACd,GACJ,GAAG,IASH,IAAM+pD,GAAc,WAClBrqD,IAAAA,IAEIf,EAAO,oDACwC3D,EAAS,mBAAWwD,IAEpEuB,MAAK,SAACC,GACL,IAAMjF,EAAOiF,EAASjF,KACtBA,EAAKivD,OAAOztD,SAAQ,SAACf,GACnBA,EAAKksD,OAAS7hD,IAAOrK,EAAKksD,QACvBzqC,SAAS,EAAG,OACZlX,OAAO,aACZ,IACAwiD,EAAoBxtD,GACpB,IAAMkvD,EAAclvD,EAAKivD,OAAO/vD,KAAI,SAACuB,EAAMgQ,GAAK,eAC9C2rB,IAAK3rB,EAAQ,EACb0+C,SAAUZ,GAAa,IAAIlnD,KAAK5G,EAAKisD,OAAQ,IAAIrlD,KAAK5G,EAAKksD,SAC3DA,OAAQ7hD,IAAOrK,EAAKksD,QAAQzqC,SAAS,EAAG,OAAOlX,OAAO,eACnDvK,EAAI,IAGT2sD,EAAY8B,GACZxB,EAAmBwB,GACnB/B,EAAYntD,EAAKovD,WACjBpC,EAAYhtD,EAAKqvD,UACnB,IACClqD,OAAM,SAACC,GACNU,QAAQV,MAAMA,EAChB,GACJ,GAEAhF,EAAAA,EAAAA,YAAU,WACR4uD,IACF,GAAG,CAAC/H,GAAasF,KAKjB,IAsJMh/C,GAAe,SAAC6T,EAAS7L,EAAOrN,GACpC,IAAMi9C,GAAW,OAAOwC,GAClB2H,EAAWnK,EAAYxa,WAAU,SAAClqC,GAAI,OAAKA,IAAS2gB,CAAO,IACjE+jC,EAAYmK,IAAS,kBAAQluC,GAAO,cAAG7L,EAAQrN,IAC/CklD,EAAYjI,EACd,GAgBA/kD,EAAAA,EAAAA,YAAU,WAVRuE,IAAAA,IACOf,EAAO,mDAA+C3D,IAC1D+E,MAAK,SAACgH,GACL,IAAM4I,EAAU5I,EAAIhM,KACpBstD,EAAY14C,EACd,IACCzP,OAAM,SAACC,GACNU,QAAQC,IAAIX,EACd,GAIJ,GAAG,IAMH,IA6CA,IAAkCtB,EAAAA,EAAAA,WAAS,GAAM,iBAA1CyrD,GAAS,MAAEC,GAAY,MACxBC,GAAW,WACfD,IAAa,GACE,IAAf9H,IAAyBoG,GAAcnG,EAASD,GAAc,GAChE,GAEAtnD,EAAAA,EAAAA,YAAU,WAEV,GAAG,CAACsnD,KAEJ,IA8EMgI,GAAyB,SAAzBA,EAA0BtzB,EAAKuzB,GAGnC,IAFA,IAAMC,EAAY,GAET/+C,EAAIurB,EAAKvrB,EAAI82C,EAASn3C,OAAQK,IAAK,CAC1C,IAAMg/C,EAAMlI,EAAS92C,GACrB,GAAIg/C,EAAIF,cAAgBA,EAAc,EACpCC,EAAUluD,KAAKmuD,GACfh/C,GAAK6+C,EAAuB7+C,EAAG8+C,EAAc,GAAGn/C,YAC3C,GAAIq/C,EAAIF,aAAeA,EAC5B,KAEJ,CAEA,OAAOC,CACT,EA6XME,GAAiB,SAAC1uC,GAGtB,IAFA,IAAM2uC,EAAqB3uC,EAAQuuC,YAE1B9+C,EAAIuQ,EAAQgb,IAAKvrB,EAAI82C,EAASn3C,OAAQK,IAAK,CAClD,IAAMm/C,EAAUrI,EAAS92C,GACzB,GAAIm/C,EAAQL,YAAcI,EACxB,OAAO,EACF,GAAIC,EAAQL,aAAeI,EAChC,KAEJ,CAEA,OAAO,CACT,EAEME,GAAoBtI,EAASpH,QAAO,SAAC2P,EAAgBF,GACzD,OAA4B,OAAxBA,EAAQL,YACHQ,KAAK77B,IAAI47B,EAAgBF,EAAQL,aAGnC,IACT,GAAGnO,KAEH,OACE,iBAAK7+C,UAAU,iBAAgB,WAC7B,iBAAKA,UAAU,iBAAgB,WAC7B,gBAAKA,UAAU,WAAU,SACtB0qD,EAASnuD,KAAI,SAAC2rB,GAAO,OACpB,wBAAKA,EAAQ8G,cAAkB,OAGnC,gBAAKhvB,UAAU,WAAU,UACvB,wBAAI,iBAEN,gBAAKA,UAAU,mBAEjB,SAACoT,EAAA,EAAiB,CAChBxC,OAAQA,GACRyC,kBAh0BkB,CAAC,WAAY,OAAQ,WAAY,eAm0BpD00C,GACC,iBAAK/nD,UAAU,oBAAmB,UAC/B,KACD,SAAC,MAAO,IAAG,gCAGb,GAGDsqD,GACC,iBAAKtqD,UAAU,kBAAiB,UAC7B,KACD,SAAC,MAAa,IAAG,qEAInB,GAGDorD,IACC,iBAAKprD,UAAU,oBAAmB,UAC/B,KACD,SAAC,MAAO,IAAG,8BAGb,IAEF,gBAAKA,UAAU,wBAAuB,UACpC,gBAAKA,UAAU,MAAK,UAClB,gBAAKA,UAAU,aAAY,UACzB,yBAC4B,GAAzBklD,EAAU,GAAGt2C,UACZ,4BACE,gBACE6+C,IAAI,gCACJ9rD,MAAM,kBAER,kBACEC,QAlxBF,WACd,IAMMoe,EAAU,CACdyZ,IAAKurB,EAASn3C,OAAS,EACvBi8C,QAAS,WACTC,MAAO/E,EAAS8F,EAAgBj9C,OAAS,GAAGk8C,MAC5CC,OAAQ7hD,IAAOmjD,IAAgBjjD,OAAO,cACtC2kD,YAAaM,GACbd,SATOZ,GAFWJ,GACFF,IAWhBrB,SAAU,KACVC,aAAc,EACdwD,mBAAoB,GACpBvD,UAAWnF,EAAS8F,EAAgBj9C,OAAS,GAAGs8C,UAChDwD,YAAa3I,EAAS8F,EAAgBj9C,OAAS,GAAG8/C,YAClD3oD,OAAQ,MACRulD,SAAU,KAGZE,GAAY,SAACmD,GAAY,wBAASA,GAAY,CAAE5tC,GAAU,GAC5D,EA2vBkBhgB,UAAU,UACVnF,MAAO,CAAEuQ,OAAQ,WACjBzJ,MAAM,eAAc,UAEnB,IAAI,WACI,QAEX,gBACE8rD,IAAI,kCACJ9rD,MAAM,sCAER,kBACEC,QAAwB,IAAfmjD,GAAoB,GAlwB5B,WAMjB,SAAS8I,EAAW9gC,GAClB,IAAMgvB,EAAOhvB,EAAK2qB,cACZkE,EAAQ9/C,OAAOixB,EAAK4qB,WAAa,GAAGmW,SAAS,EAAG,KAChDC,EAAMjyD,OAAOixB,EAAKg5B,WAAW+H,SAAS,EAAG,KAC/C,MAAM,GAAN,OAAU/R,EAAI,YAAIH,EAAK,YAAImS,EAC7B,CAEA,IAAM/tC,EAAU,CACdyZ,IAAKsrB,GACL+E,QAAS,WACTC,MAAO8D,EAAWrC,IAClBwB,YAAahI,EAASjjD,SAASgjD,IAAe,GAAGiI,YACjDhD,OAAQ6D,EAAWvC,IACnBkB,SAfOZ,GAFWJ,GACFF,IAiBhBrB,SAAU,KACVC,aAAc,EACdwD,mBAAoB,GACpBvD,UAAW,EACXwD,YAAa,EACb3oD,OAAQ,MACRulD,SAAU,KAEZE,GAAY,SAACmD,GACX,IAAMI,GAAe,OAAOJ,GAC5BI,EAAgBxyB,OAAOz5B,SAASgjD,IAAe,EAAG,EAAG/kC,GAErD,IAAK,IAAI9R,EAAInM,SAASgjD,IAAc72C,EAAI8/C,EAAgBngD,OAAQK,IAC9D8/C,EAAgB9/C,GAAGurB,IAAMvrB,EAAI,EAG/B,OAAO8/C,CACT,GACF,EA6tBkBhuD,UAAU,aACVnF,MAAO,CAAEuQ,OAAQ,WACjBzJ,MAAM,mCAAkC,UAEvC,IAAI,aACM,QAEb,gBAAK8rD,IAAI,wCACT,kBACE7rD,QAAS,iBACS,KAAhBmjD,GAAqB,GAvgBb,WAC1B,GAAoB,OAAhBA,IAAwC,IAAhBA,GAA5B,CAIA,IAAMiJ,GAAe,OAAOhJ,GACtBiJ,EAAeD,EAAgBjJ,GAAc,GAE9CkJ,IAGAd,GAAec,KAClBA,EAAajB,aAAe,EAC5BvC,EAAYuD,IAVd,CAYF,CAwf8CE,EAAqB,EAEjDluD,UAAU,gBACVnF,MAAO,CAAEuQ,OAAQ,WACjBzJ,MAAM,oCAAmC,UAExC,IAAI,gBACS,QAEhB,gBAAK8rD,IAAI,sCACT,kBACE7rD,QAAS,iBACS,KAAhBmjD,GAAqB,GA5iBb,WAC1B,GAAoB,OAAhBA,IAAwC,IAAhBA,GAA5B,CAIA,IAAMiJ,GAAe,OAAOhJ,GACtBiJ,EAAeD,EAAgBjJ,GAAc,GAC7CoJ,EAAeH,EAAgBjJ,GAAc,GAE9CkJ,IAIDE,EAAanB,YAAciB,EAAajB,cAI5CiB,EAAajB,aAAe,EAC5BvC,EAAYuD,IAfZ,CAgBF,CAyhB8CI,EAAqB,EAEjDpuD,UAAU,cACVnF,MAAO,CAAEuQ,OAAQ,WACjBzJ,MAAM,oCAAmC,UAExC,IAAI,cACO,QAEd,gBACE8rD,IAAI,8BACJ9rD,MAAM,0BAER,kBACEC,QAAS,iBACQ,IAAfmjD,GAAoB,GAAKR,IAAe,EAAK,EAE/CvkD,UAAU,SACVnF,MAAO,CAAEuQ,OAAQ,WACjBzJ,MAAM,uBAAsB,UAE3B,IAAI,SACE,QAET,gBACE8rD,IAAI,4BACJ9rD,MAAM,wBAER,kBACEC,QAAwB,IAAfmjD,GAAoB,GAAK+H,GAClC9sD,UAAU,OACVnF,MAAO,CAAEuQ,OAAQ,WACjBzJ,MAAM,qBAAoB,UAEzB,IAAI,OACA,QAEP,gBACE8rD,IAAI,6BACJ9rD,MAAM,+BAER,kBACEC,QACiB,IAAfmjD,GACI,GACa,GAAb6H,GAznBN,WAChB,IAAM5sC,EAAU,CACdyZ,IAAKsrB,GACL+E,QAASoB,GAAWpB,QACpBC,MAAOmB,GAAWnB,MAClBC,OAAQkB,GAAWlB,OACnBgD,YAAahI,EAASD,GAAc,GAAGiI,YACvCR,SAAUtB,GAAWsB,SACrBvC,SAAU,KACVC,aAAcgB,GAAWhB,aACzBwD,mBAAoB,GACpBvD,UAAW,EACXwD,YAAa,EACb3oD,OAAQ,MACRulD,SAAUW,GAAWX,UAEvBE,GAAY,SAACmD,GACX,IAAMI,GAAe,OAAOJ,GAC5BI,EAAgBxyB,OAAOz5B,SAASgjD,IAAc,EAAG/kC,GAEjD,IAAK,IAAI9R,EAAInM,SAASgjD,IAAc72C,EAAI8/C,EAAgBngD,OAAQK,IAC9D8/C,EAAgB9/C,GAAGurB,IAAMvrB,EAAI,EAG/B,OAAO8/C,CACT,GACF,EAimBwB,GAENhuD,UAAU,QACVnF,MAAO,CAAEuQ,OAAQ,WACjBzJ,MAAM,4BAA2B,UAEhC,IAAI,QACC,QAER,gBACE8rD,IAAI,+BACJ9rD,MAAM,2BAER,kBACEC,QAAwB,IAAfmjD,GAAoB,GAhsBhC,WACTA,GAAc,IAChB0F,GAAY,SAACmD,GACX,IAAMI,EAAkBJ,EAAarxD,KAAI,SAAC8xD,GAAI,iBAAWA,EAAI,IAEvDC,EAAON,EAAgBjJ,GAAc,GAO3C,OANAiJ,EAAgBjJ,GAAc,GAAKiJ,EAAgBjJ,GAAc,GACjEiJ,EAAgBjJ,GAAc,GAAKuJ,EAEnCN,EAAgBjJ,GAAc,GAAGtrB,IAAMsrB,GAAc,EACrDiJ,EAAgBjJ,GAAc,GAAGtrB,IAAMsrB,GAAc,EAE9CiJ,CACT,IAEAhD,GAAejG,GAAc,GAEjC,EAgrBkB/kD,UAAU,UACVnF,MAAO,CAAEuQ,OAAQ,WACjBzJ,MAAM,wBAAuB,UAE5B,IAAI,UACG,QAEV,gBACE8rD,IAAI,iCACJ9rD,MAAM,6BAER,kBACEC,QAAwB,IAAfmjD,GAAoB,GAtrB9B,WACXA,GAAcC,EAASn3C,SACzB48C,GAAY,SAACmD,GACX,IAAMI,EAAkBJ,EAAarxD,KAAI,SAAC8xD,GAAI,iBAAWA,EAAI,IAEvDC,EAAON,EAAgBjJ,GAAc,GAO3C,OANAiJ,EAAgBjJ,GAAc,GAAKiJ,EAAgBjJ,IACnDiJ,EAAgBjJ,IAAeuJ,EAE/BN,EAAgBjJ,GAAc,GAAGtrB,IAAMsrB,GACvCiJ,EAAgBjJ,IAAatrB,IAAMsrB,GAAc,EAE1CiJ,CACT,IAEAhD,GAAejG,GAAc,GAEjC,EAsqBkB/kD,UAAU,YACVnF,MAAO,CAAEuQ,OAAQ,WACjBzJ,MAAM,0BAAyB,UAE9B,IAAI,YACK,UAId,YAOV,gBAAK3B,UAAU,mCAAkC,UAC/C,iBAAKA,UAAU,uBAAsB,WACnC,gBAAKA,UAAU,qBAAoB,UACjC,UAAC,IAAS,CACRuF,MAAOy/C,EAASnnD,QACd,SAAC4gB,GAAO,OAAKA,EAAQuuC,cAAgBM,EAAiB,IAExDnsB,aAAcA,GACdsD,YAAa,SAAC/gC,GAAC,OAAK09B,GAAgB19B,EAAErG,KAAK,EAC3C4nC,qBA9kBiB,SAAvBA,EAAwBxmB,GAC5B,IAAM2uC,EAAqB3uC,EAAQuuC,YAC7BC,EAAYF,GAAuBtuC,EAAQgb,IAAK2zB,GACtD,OACE,UAAC,IAAS,CACRmB,WAAS,EACThpD,MAAO0nD,EACPxtC,eAAa,EACb0hB,aAAcuqB,GACdjnB,YAAa,SAAC/gC,GAAC,OAAKioD,GAAiBjoD,EAAErG,KAAK,EAC5C4nC,qBAAsBA,EACtBjlC,UAAU,yCACVwuD,aAAW,EACX9uC,cAAY,aAEZ,SAAC,IAAM,CAAC+uC,MAAM,SAAS/oB,SAAUynB,MACjC,SAAC,IAAM,CAELv6C,MAAO,UACPzI,OAAQ,OACRwI,KAAM,SAAC8L,GAAO,OACZ,kBACEze,UAAS,cAASye,EAAQuuC,aAC1BnyD,MAAO,CACLykB,WAAY6tC,GAAe1uC,GAAW,SAAW,UAEnDpT,SAAmC,GAAzB65C,EAAU,GAAGt2C,SACvBlN,KAAK,OACL6D,MAAOkZ,EAAQqrC,QACfv+C,SAAU,SAAC7H,GACTkH,GAAa6T,EAAS,UAAW/a,EAAEmH,OAAOtF,MAC5C,EACA3D,QAAS,WACP,IAAM8sD,EAAcjwC,EAAQgb,IAC5BuxB,GAAe0D,GACfzD,GAAkBxsC,EAAQmmC,OAC5B,GACA,GApBC,YAuBP,SAAC,IAAM,CAELhyC,MAAO,QACPzI,OAAQ,QACRwI,KAAM,SAAC8L,GAAO,OACZ,iBACE7c,QAAS,WACP,IAAM8sD,EAAcjwC,EAAQgb,IAC5BuxB,GAAe0D,GACfzD,GAAkBxsC,EAAQmmC,OAC5B,EAAE,UAEF,SAAC,IAAU,CACT+J,SAAS,cACTtjD,SAC4B,GAAzB65C,EAAU,GAAGt2C,UACdu+C,GAAe1uC,GAEjBnS,WAAW,cACXV,UAAW,SAAClI,GACVA,EAAEwH,gBACJ,EACAs4C,WAAY,SAACz2B,GACX,OAAyB,IAAlBA,EAAK84B,UAAoC,IAAlB94B,EAAK84B,QACrC,EACA15C,SAAUhE,IAAOsW,EAAQsrC,OAAOj9C,SAChCP,mBAAmB,EACnBC,kBAAkB,EAClBjB,SAAU,SAACwhB,GACT,IAAMy1B,GAAW,OAAOwC,GAClBz/C,EAAQqmD,GAAa7+B,EAAM,IAAIroB,KAAK+Z,EAAQurC,SAClDxH,EAAY/jC,EAAQgb,IAAM,IAAE,kBACvBhb,GAAO,IACV+tC,SAAUjnD,EACVwkD,MAAO5hD,IAAO4kB,GAAM1kB,OAAO,gBAE7BoiD,EAAYjI,EACd,KAEG,GAtCJ,UAyCP,SAAC,IAAM,CAEL5vC,MAAO,SACPzI,OAAQ,SACRwI,KAAM,SAAC8L,GAAO,OACZ,iBACE7c,QAAS,WACP,IAAM8sD,EAAcjwC,EAAQgb,IAC5BuxB,GAAe0D,GACfzD,GAAkBxsC,EAAQmmC,OAC5B,EAAE,UAEF,SAAC,IAAU,CACT+J,SAAS,cACTtjD,SAC4B,GAAzB65C,EAAU,GAAGt2C,UACdu+C,GAAe1uC,GAEjBnS,WAAW,cACXV,UAAW,SAAClI,GACVA,EAAEwH,gBACJ,EACAiB,SAAUhE,IAAOsW,EAAQurC,QAAQl9C,SACjCP,mBAAmB,EACnBC,kBAAkB,EAClBg3C,WAAY,SAACz2B,GACX,OAAyB,IAAlBA,EAAK84B,UAAoC,IAAlB94B,EAAK84B,QACrC,EACAjkD,QAAS,WACP,IAAM8sD,EAAcjwC,EAAQgb,IAC5BuxB,GAAe0D,GACfzD,GAAkBxsC,EAAQmmC,OAC5B,EACAr5C,SAAU,SAACwhB,GACT,IAAMy1B,GAAW,OAAOwC,GAClBz/C,EAAQqmD,GAAa,IAAIlnD,KAAK+Z,EAAQsrC,OAAQh9B,GACpDy1B,EAAY/jC,EAAQgb,IAAM,IAAE,kBACvBhb,GAAO,IACV+tC,SAAUjnD,EACVykD,OAAQ7hD,IAAO4kB,GAAM1kB,OAAO,gBAE9BoiD,EAAYjI,EACd,KAEG,GA3CJ,WA8CP,SAAC,IAAM,CAEL5vC,MAAO,WACPzI,OAAQ,cACRwI,KAAM,SAAC8L,GAAO,OACZ,kBACE5jB,MAAO,CACLykB,WAAY6tC,GAAe1uC,GAAW,SAAW,UAEnDpT,SAC4B,GAAzB65C,EAAU,GAAGt2C,UACdu+C,GAAe1uC,GAEjB/c,KAAK,OACL6D,MAAOxD,SAAS0c,EAAQ+tC,UACxB5qD,QAAS,WACP,IAAM8sD,EAAcjwC,EAAQgb,IAC5BuxB,GAAe0D,GACfzD,GAAkBxsC,EAAQmmC,OAC5B,EACAr5C,SAAU,SAAC7H,GACTkH,GAAa6T,EAAS,WAAY/a,EAAEmH,OAAOtF,MAC7C,EACAqpD,OAAQ,SAAClrD,GACP,IAMMmrD,EANa,SAAC9hC,GAClB,IAAMgvB,EAAOhvB,EAAK2qB,cACZkE,EAAQ9/C,OAAOixB,EAAK4qB,WAAa,GAAGmW,SAAS,EAAG,KAChDC,EAAMjyD,OAAOixB,EAAKg5B,WAAW+H,SAAS,EAAG,KAC/C,MAAM,GAAN,OAAU/R,EAAI,YAAIH,EAAK,YAAImS,EAC7B,CACmBF,CACjB7B,GAAgBvtC,EAAQsrC,MAAOrmD,EAAEmH,OAAOtF,MAAQ,IAGlDqF,GAAa6T,EAAS,SAAUowC,EAClC,GACO,GAnCN,aAsCP,SAAC,IAAM,CAELj8C,MAAO,WACPzI,OAAQ,OACRwI,KAAM,SAAC8L,GAAO,OACZ0uC,GAAe1uC,IACb,yBAEA,oBACEpT,SAAmC,GAAzB65C,EAAU,GAAGt2C,SACvBhN,QAAS,WACP,IAAM8sD,EAAcjwC,EAAQgb,IAC5BuxB,GAAe0D,GACfzD,GAAkBxsC,EAAQmmC,OAC5B,EACAr5C,SAAU,SAAC7H,GACT,IAAMorD,EACJprD,EAAEmH,OAAOrM,QAAQkF,EAAEmH,OAAOkkD,eAAeC,aACvC,oBAEJpkD,GACE6T,EACA,SACA/a,EAAEmH,OAAOtF,MACRkZ,EAAQwrC,SAAW6E,EAExB,EAAE,WAEF,mBAAQvpD,MAAO,KAAK,SAAC,YACpB6kD,EAAS7tD,KAAI,SAACuB,GAAI,OACjB,mBAEEyH,MAAOzH,EAAK9B,GACZmQ,SAAUsS,EAAQomC,QAAU/mD,EAAK9B,GACjC8yD,iBAAkBhxD,EAAK0F,KAAK,SAE3B1F,EAAK0F,MALD1F,EAAK9B,GAMH,MAGd,GAvCE,aA0CP,SAAC,IAAM,CAEL4W,MAAO,eACPzI,OAAQ,gBACRwI,KAAM,SAAC8L,GAAO,OACZ0uC,GAAe1uC,IACb,yBAEA,kBACEpT,SAAmC,GAAzB65C,EAAU,GAAGt2C,SACvBlN,KAAK,OACL6D,MAAOkZ,EAAQyrC,aACftoD,QAAS,WACP,IAAM8sD,EAAcjwC,EAAQgb,IAC5BuxB,GAAe0D,GACfzD,GAAkBxsC,EAAQmmC,OAC5B,EACAr5C,SAAU,SAAC7H,GAAC,OACVkH,GAAa6T,EAAS,eAAgB/a,EAAEmH,OAAOtF,MAAM,EAEvD1K,MAAO,CAAE2lB,UAAW,UAEvB,GArBE,iBAwBP,SAAC,IAAM,CAEL5N,MAAO,qBACPzI,OAAQ,cACRwI,KAAM,SAAC8L,GAAO,OACZ,kBACE/c,KAAK,OACL6D,MAAOkZ,EAAQivC,mBACf7yD,MAAO,CAAE+5B,eAAgB,aACzBhzB,QAAS,WACP,IAAM8sD,EAAcjwC,EAAQgb,IACtBw1B,EAAkBxwC,EAAQurC,OAC1BvS,EAActvC,IAAO,IAAIzD,MAAQ2D,OAAO,cAC9CwhD,GAAiBoF,EAAkBxX,GAC/BA,EAAcwX,IAChBpF,IAAiB,GACjB7zC,MAAM,sDAEoB,GAAxByI,EAAQyrC,cACVL,IAAiB,GACjB7zC,MAAM,+BACiC,IAA9ByI,EAAQivC,qBACjB7D,IAAiB,GACjB7zC,MAAM,qBAERg1C,GAAe0D,GACfzD,GAAkBxsC,EAAQmmC,OAC5B,EACAr5C,SAAU,SAAC7H,GAAC,OACVkH,GAAa6T,EAAS,qBAAsB/a,EAAEmH,OAAOtF,MAAM,GAEtD,GA9BN,uBAiCP,SAAC,IAAM,CAELqN,MAAO,YACPzI,OAAQ,aACRwI,KAAM,SAAC8L,EAASiU,GACd,IAAMntB,EAAQkZ,EAAQiU,EAAO9f,OACvBs8C,EAA0B,MAAT3pD,EAAgB,MAAQA,EAAM25B,QAAQ,GAC7D,OAAOiuB,GAAe1uC,IACpB,yBAEA,iBACE7c,QAAS,WACP,IAAM8sD,EAAcjwC,EAAQgb,IAC5BuxB,GAAe0D,GACfzD,GAAkBxsC,EAAQmmC,OAC5B,EAAE,SAEDsK,GAGP,GAnBK,cAqBP,SAAC,IAAM,CAELt8C,MAAO,cACPzI,OAAQ,eACRwI,KAAM,SAAC8L,EAASiU,GACd,IAAMntB,EAAQkZ,EAAQiU,EAAO9f,OACvBs8C,EAA0B,MAAT3pD,EAAgB,MAAQA,EAAM25B,QAAQ,GAC7D,OAAOiuB,GAAe1uC,IACpB,yBAEA,iBACE7c,QAAS,WACP,IAAM8sD,EAAcjwC,EAAQgb,IAC5BuxB,GAAe0D,GACfzD,GAAkBxsC,EAAQmmC,OAC5B,EAAE,SAEDsK,GAGP,GAnBK,gBAqBP,SAAC,IAAM,CAELt8C,MAAO,SACPzI,OAAQ,SACRwI,KAAM,SAAC8L,GAAO,OACZ0uC,GAAe1uC,IACb,yBAEA,iBACE7c,QAAS,SAAC8B,GACR,IAAMgrD,EAAcjwC,EAAQgb,IAC5BuxB,GAAe0D,GACfzD,GAAkBxsC,EAAQmmC,OAC5B,EACA/pD,MAAO,CACLwE,QAAS,QACTmhB,UAAW,SACX2uC,OAAQ,UACR,SAED1wC,EAAQzZ,QAEZ,GArBE,WAwBP,SAAC,IAAM,CAEL4N,MAAO,WACPzI,OAAQ,YACRwI,KAAM,SAAC8L,GAAO,OACZ0uC,GAAe1uC,IACb,yBAEA,mBACEpT,SAAmC,GAAzB65C,EAAU,GAAGt2C,SACvBhN,QAAS,WACP,IAAM8sD,EAAcjwC,EAAQgb,IAC5BuxB,GAAe0D,GACfzD,GAAkBxsC,EAAQmmC,OAC5B,EACAr5C,SAAU,SAAC7H,GAAC,OACVkH,GAAa6T,EAAS,WAAY/a,EAAEmH,OAAOtF,MAAM,EAClD,SAEAglD,EAAShuD,KAAI,SAACuB,GAAI,OACjB,mBAEEyH,MAAOzH,EAAKyH,MACZ4G,SAAUsS,EAAQ8rC,UAAYzsD,EAAKyH,MAAM,SAExCzH,EAAK0F,MAJD1F,EAAKyH,MAKH,KAGd,GA5BE,cAiCb,EA0NYka,eAAa,EACbzf,UAAU,oCAAmC,WAE7C,SAAC,IAAM,CAACyuD,MAAM,SAAS/oB,SAAUynB,MACjC,SAAC,IAAM,CAELv6C,MAAO,UACPzI,OAAQ,OACRwI,KAAM,SAAC8L,GAAO,OACZ,kBACEze,UAAS,cAASye,EAAQuuC,aAC1BnyD,MAAO,CACLykB,WAAY6tC,GAAe1uC,GAAW,SAAW,UAEnDpT,SAAmC,GAAzB65C,EAAU,GAAGt2C,SACvBlN,KAAK,OACL6D,MAAOkZ,EAAQqrC,QACfv+C,SAAU,SAAC7H,GACTkH,GAAa6T,EAAS,UAAW/a,EAAEmH,OAAOtF,MAC5C,EACA3D,QAAS,WACP,IAAM8sD,EAAcjwC,EAAQgb,IAC5BuxB,GAAe0D,GACfzD,GAAkBxsC,EAAQmmC,OAC5B,GACA,GApBC,YAuBP,SAAC,IAAM,CAELhyC,MAAO,QACPzI,OAAQ,QACRwI,KAAM,SAAC8L,GAAO,OACZ,iBACE7c,QAAS,WACP,IAAM8sD,EAAcjwC,EAAQgb,IAC5BuxB,GAAe0D,GACfzD,GAAkBxsC,EAAQmmC,OAC5B,EAAE,UAEF,SAAC,IAAU,CACT+J,SAAS,cACTtjD,SAC4B,GAAzB65C,EAAU,GAAGt2C,UACdu+C,GAAe1uC,GAEjBnS,WAAW,cACXV,UAAW,SAAClI,GACVA,EAAEwH,gBACJ,EACAs4C,WAAY,SAACz2B,GACX,OAAyB,IAAlBA,EAAK84B,UAAoC,IAAlB94B,EAAK84B,QACrC,EACA15C,SAAUhE,IAAOsW,EAAQsrC,OAAOj9C,SAChCP,mBAAmB,EACnBC,kBAAkB,EAClB5K,QAAS,WACP,IAAM8sD,EAAcjwC,EAAQgb,IAC5BuxB,GAAe0D,GACfzD,GAAkBxsC,EAAQmmC,OAC5B,EACAr5C,SAAU,SAACwhB,GACT,IAAMy1B,GAAW,OAAOwC,GAClBz/C,EAAQqmD,GACZ7+B,EACA,IAAIroB,KAAK+Z,EAAQurC,SAEnBxH,EAAY/jC,EAAQgb,IAAM,IAAE,kBACvBhb,GAAO,IACV+tC,SAAUjnD,EACVwkD,MAAO5hD,IAAO4kB,GAAM1kB,OAAO,gBAE7BoiD,EAAYjI,EACd,KAEG,GA9CJ,UAiDP,SAAC,IAAM,CAEL5vC,MAAO,SACPzI,OAAQ,SACRwI,KAAM,SAAC8L,GAAO,OACZ,iBACE7c,QAAS,WACP,IAAM8sD,EAAcjwC,EAAQgb,IAC5BuxB,GAAe0D,GACfzD,GAAkBxsC,EAAQmmC,OAC5B,EAAE,UAEF,SAAC,IAAU,CACT+J,SAAS,cACTtjD,SAC4B,GAAzB65C,EAAU,GAAGt2C,UACdu+C,GAAe1uC,GAEjBnS,WAAW,cACXV,UAAW,SAAClI,GACVA,EAAEwH,gBACJ,EACAiB,SAAUhE,IAAOsW,EAAQurC,QAAQl9C,SACjCP,mBAAmB,EACnBC,kBAAkB,EAClBg3C,WAAY,SAACz2B,GACX,OAAyB,IAAlBA,EAAK84B,UAAoC,IAAlB94B,EAAK84B,QACrC,EACAjkD,QAAS,WACP,IAAM8sD,EAAcjwC,EAAQgb,IAC5BuxB,GAAe0D,GACfzD,GAAkBxsC,EAAQmmC,OAC5B,EACAr5C,SAAU,SAACwhB,GACT,IAAMy1B,GAAW,OAAOwC,GAClBz/C,EAAQqmD,GACZ,IAAIlnD,KAAK+Z,EAAQsrC,OACjBh9B,GAEFy1B,EAAY/jC,EAAQgb,IAAM,IAAE,kBACvBhb,GAAO,IACV+tC,SAAUjnD,EACVykD,OAAQ7hD,IAAO4kB,GAAM1kB,OAAO,gBAE9BoiD,EAAYjI,EACd,KAEG,GA9CJ,WAiDP,SAAC,IAAM,CAEL5vC,MAAO,WACPzI,OAAQ,cACRwI,KAAM,SAAC8L,GAAO,OACZ,kBACE5jB,MAAO,CACLykB,WAAY6tC,GAAe1uC,GAAW,SAAW,UAEnDpT,SAC4B,GAAzB65C,EAAU,GAAGt2C,UACdu+C,GAAe1uC,GAEjB/c,KAAK,OACL6D,MAAOxD,SAAS0c,EAAQ+tC,UACxB5qD,QAAS,WACP,IAAM8sD,EAAcjwC,EAAQgb,IAC5BuxB,GAAe0D,GACfzD,GAAkBxsC,EAAQmmC,OAC5B,EACAr5C,SAAU,SAAC7H,GACTkH,GAAa6T,EAAS,WAAY/a,EAAEmH,OAAOtF,MAC7C,EACAqpD,OAAQ,SAAClrD,GACP,IASMmrD,EATa,SAAC9hC,GAClB,IAAMgvB,EAAOhvB,EAAK2qB,cACZkE,EAAQ9/C,OAAOixB,EAAK4qB,WAAa,GAAGmW,SACxC,EACA,KAEIC,EAAMjyD,OAAOixB,EAAKg5B,WAAW+H,SAAS,EAAG,KAC/C,MAAM,GAAN,OAAU/R,EAAI,YAAIH,EAAK,YAAImS,EAC7B,CACmBF,CACjB7B,GAAgBvtC,EAAQsrC,MAAOrmD,EAAEmH,OAAOtF,MAAQ,IAGlDqF,GAAa6T,EAAS,SAAUowC,EAClC,GACO,GAtCN,aAyCP,SAAC,IAAM,CAELj8C,MAAO,WACPzI,OAAQ,OACRwI,KAAM,SAAC8L,GAAO,OACZ0uC,GAAe1uC,IACb,yBAEA,oBACEpT,SAAmC,GAAzB65C,EAAU,GAAGt2C,SACvBhN,QAAS,WACP,IAAM8sD,EAAcjwC,EAAQgb,IAC5BuxB,GAAe0D,GACfzD,GAAkBxsC,EAAQmmC,OAC5B,EACAr5C,SAAU,SAAC7H,GACT,IAAMorD,EACJprD,EAAEmH,OAAOrM,QAAQkF,EAAEmH,OAAOkkD,eAAeC,aACvC,oBAEJpkD,GACE6T,EACA,SACA/a,EAAEmH,OAAOtF,MACRkZ,EAAQwrC,SAAW6E,EAExB,EAAE,WAEF,mBAAQvpD,MAAO,KAAK,SAAC,YACpB6kD,EAAS7tD,KAAI,SAACuB,GAAI,OACjB,mBAEEyH,MAAOzH,EAAK9B,GACZmQ,SAAUsS,EAAQomC,QAAU/mD,EAAK9B,GACjC8yD,iBAAkBhxD,EAAK0F,KAAK,SAE3B1F,EAAK0F,MALD1F,EAAK9B,GAMH,MAGd,GAvCE,aA0CP,SAAC,IAAM,CAEL4W,MAAO,eACPzI,OAAQ,gBACRwI,KAAM,SAAC8L,GAAO,OACZ0uC,GAAe1uC,IACb,yBAEA,kBACEpT,SAAmC,GAAzB65C,EAAU,GAAGt2C,SACvBlN,KAAK,OACL6D,MAAOkZ,EAAQyrC,aACftoD,QAAS,WACP,IAAM8sD,EAAcjwC,EAAQgb,IAC5BuxB,GAAe0D,GACfzD,GAAkBxsC,EAAQmmC,OAC5B,EACAr5C,SAAU,SAAC7H,GAAC,OACVkH,GAAa6T,EAAS,eAAgB/a,EAAEmH,OAAOtF,MAAM,EAEvD1K,MAAO,CAAE2lB,UAAW,UAEvB,GArBE,iBAwBP,SAAC,IAAM,CAEL5N,MAAO,qBACPzI,OAAQ,cACRwI,KAAM,SAAC8L,GAAO,OACZ,kBACE/c,KAAK,OACL6D,MAAOkZ,EAAQivC,mBACf7yD,MAAO,CAAE+5B,eAAgB,aACzBhzB,QAAS,WACP,IAAM8sD,EAAcjwC,EAAQgb,IACtBw1B,EAAkBxwC,EAAQurC,OAC1BvS,EAActvC,IAAO,IAAIzD,MAAQ2D,OACrC,cAEFwhD,GACEoF,EAAkBxX,GAEhBA,EAAcwX,IAChBpF,IAAiB,GACjB7zC,MACE,sDAGwB,GAAxByI,EAAQyrC,cACVL,IAAiB,GACjB7zC,MAAM,+BACiC,IAA9ByI,EAAQivC,qBACjB7D,IAAiB,GACjB7zC,MAAM,qBAERg1C,GAAe0D,GACfzD,GAAkBxsC,EAAQmmC,OAC5B,EACAr5C,SAAU,SAAC7H,GAAC,OACVkH,GACE6T,EACA,qBACA/a,EAAEmH,OAAOtF,MACV,GAEI,GAxCN,uBA2CP,SAAC,IAAM,CAELqN,MAAO,YACPzI,OAAQ,aACRwI,KAAM,SAAC8L,EAASiU,GACd,IAAMntB,EAAQkZ,EAAQiU,EAAO9f,OACvBs8C,EACK,MAAT3pD,EAAgB,MAAQA,EAAM25B,QAAQ,GACxC,OAAOiuB,GAAe1uC,IACpB,yBAEA,iBACE7c,QAAS,WACP,IAAM8sD,EAAcjwC,EAAQgb,IAC5BuxB,GAAe0D,GACfzD,GAAkBxsC,EAAQmmC,OAC5B,EAAE,SAEDsK,GAGP,GApBK,cAsBP,SAAC,IAAM,CAELt8C,MAAO,cACPzI,OAAQ,eACRwI,KAAM,SAAC8L,EAASiU,GACd,IAAMntB,EAAQkZ,EAAQiU,EAAO9f,OACvBs8C,EACK,MAAT3pD,EAAgB,MAAQA,EAAM25B,QAAQ,GACxC,OAAOiuB,GAAe1uC,IACpB,yBAEA,iBACE7c,QAAS,WACP,IAAM8sD,EAAcjwC,EAAQgb,IAC5BuxB,GAAe0D,GACfzD,GAAkBxsC,EAAQmmC,OAC5B,EAAE,SAEDsK,GAGP,GApBK,gBAsBP,SAAC,IAAM,CAELt8C,MAAO,SACPzI,OAAQ,SACRwI,KAAM,SAAC8L,GAAO,OACZ0uC,GAAe1uC,IACb,yBAEA,iBACE7c,QAAS,SAAC8B,GACR,IAAMgrD,EAAcjwC,EAAQgb,IAC5BuxB,GAAe0D,GACfzD,GAAkBxsC,EAAQmmC,OAC5B,EACA/pD,MAAO,CACLwE,QAAS,QACTmhB,UAAW,SACX2uC,OAAQ,UACR,SAED1wC,EAAQzZ,QAEZ,GArBE,WAwBP,SAAC,IAAM,CAEL4N,MAAO,WACPzI,OAAQ,YACRwI,KAAM,SAAC8L,GAAO,OACZ0uC,GAAe1uC,IACb,yBAEA,mBACEpT,SAAmC,GAAzB65C,EAAU,GAAGt2C,SACvBhN,QAAS,WACP,IAAM8sD,EAAcjwC,EAAQgb,IAC5BuxB,GAAe0D,GACfzD,GAAkBxsC,EAAQmmC,OAC5B,EACAr5C,SAAU,SAAC7H,GAAC,OACVkH,GAAa6T,EAAS,WAAY/a,EAAEmH,OAAOtF,MAAM,EAClD,SAEAglD,EAAShuD,KAAI,SAACuB,GAAI,OACjB,mBAEEyH,MAAOzH,EAAKyH,MACZ4G,SAAUsS,EAAQ8rC,UAAYzsD,EAAKyH,MAAM,SAExCzH,EAAK0F,MAJD1F,EAAKyH,MAKH,KAGd,GA5BE,iBAkCc,IAAd,OAAVyL,QAAU,IAAVA,OAAU,EAAVA,EAAYpC,WACX,iBAAK5O,UAAU,+DAA8D,WAC3E,oBACEA,UAAU,kBACVwD,KAAK,OACLxH,GAAG,OACH0F,KAAK,OACLE,QAAS,YA/sCF,SAACvE,GACpB,IAAM8uD,EAAS,CACbiD,MAAO,CACLC,KAAM,KAIVrwD,OAAOwT,KAAKnV,GAAMwB,SAAQ,SAAChD,GACzB,IAAM0J,EAAQlI,EAAKxB,GACbwyD,EAAO,CACX1B,SAAUpnD,EAAMk0B,IAChB61B,OAAwB,IAAhB/pD,EAAMq/C,QAAgC,MAAhBr/C,EAAMq/C,OAAiB,EAAIr/C,EAAMq/C,OAC/D2K,SAAUhqD,EAAMukD,QAChB0F,OACuB,IAArBjqD,EAAMynD,aAA0C,MAArBznD,EAAMynD,YAC7B,EACAznD,EAAMynD,YACZyC,MAAOlqD,EAAMwkD,MACb2F,OAAQnqD,EAAMykD,OACd2F,SAAUpqD,EAAMinD,SAChBoD,SACoB,IAAlBrqD,EAAMglD,UAAoC,MAAlBhlD,EAAMglD,SAC1B,OACAhlD,EAAMglD,SACZ1F,OACkB,IAAhBt/C,EAAMs/C,QACU,MAAhBt/C,EAAMs/C,aACUr+C,GAAhBjB,EAAMs/C,QACU,WAAhBt/C,EAAMs/C,OACF,OACAt/C,EAAMs/C,OACZgL,eAAgBtqD,EAAM2kD,cAGxBiC,EAAOiD,MAAMC,KAAKtwD,KAAKsvD,EACzB,IAGA,IAAIyB,EAAoBj9C,KAAKE,UAAUo5C,GACjCzlD,EAAW,IAAIq6B,SACrBr6B,EAASs6B,OAAO,aAAc8uB,GAC9B9tD,IAAAA,KAEIf,EAAO,qDAAiD3D,GAExDoJ,GAEDrE,MAAK,SAACC,GACQA,EAASjF,KACtBgvD,KACAhB,IAAa,GACb1oD,YAAW,WACT0oD,IAAa,EACf,GAAG,IACL,IACC7oD,OAAM,SAACgV,GACNrU,QAAQC,IAAIoU,EACd,GACJ,CAspCgBu4C,CAAa/K,GACbqG,IAAa,EACf,EAAE,WAEF,SAAC,OAAO,IAAG,WAGb,oBACErrD,UAAU,oBACVhE,GAAG,SACH0F,KAAK,QACLE,QAzuCQ,WACpBirD,IAAa,GACb7B,GAAe,IACf,IAAMuB,EAAc3B,EAAiB0B,OAAO/vD,KAAI,SAACuB,EAAMgQ,GAAK,eAC1D2rB,IAAK3rB,EAAQ,EACb0+C,SAAUZ,GAAa,IAAIlnD,KAAK5G,EAAKisD,OAAQ,IAAIrlD,KAAK5G,EAAKksD,UACxDlsD,EAAI,IAET2sD,GAAY,OAAI8B,GAClB,EAguCqC,WAEvB,SAAC,OAAc,IAAG,eAKtB,QAILjI,IACC,SAAC,GAAmB,CAClBG,kBAAmBA,EACnBC,iBAAkBA,EAClBJ,YAAaA,GACbC,eAAgBA,GAChBC,eAAgBA,KAGlB,GAGDoF,IACC,SAAC,GAAqB,CACpBA,cAAeA,GACfC,iBAAkBA,GAClB7E,SAAUA,EACVD,YAAaA,GACbG,UAAWA,IAGb,KAIR,E,wBC18CA,OAvCA,SAAyCxqD,GACrC,IAAQ2C,EAAoG3C,EAApG2C,KAAM8sC,EAA8FzvC,EAA9FyvC,qBAAsB6lB,EAAwEt1D,EAAxEs1D,eAAgBC,EAAwDv1D,EAAxDu1D,kBAAqCC,GAAmBx1D,EAArCy1D,iBAAqCz1D,EAAnBw1D,gBASzF,OACI,2BAEK/sD,QAAQC,IAAI/F,EAAM,kBACnB,UAAC,KAAM,CAACiE,QAAS0uD,EAAgBzuD,KAAK,KAAKvB,UAAU,YAAYwB,QAAS,kBAAMyuD,GAAkB,EAAM,EAAExuD,SAAU,SAAS,WACzH,SAAC,KAAY,CAACzB,UAAU,GAAE,UACtB,SAAC,KAAW,UAAC,2BAIjB,UAAC,KAAU,WAAC,4CACkC3C,EAAK+yD,aAAa,GAAGlqB,UAE/D,mBAAM,kBAAM,kCAGZ,iBAAKlmC,UAAU,4BAA2B,WACtC,oBAAQ0B,KAAK,SAAS1B,UAAU,kBAAkB4B,QAAS,WAAQuB,QAAQC,IAAI,eAtB/F8sD,GAAe,GACfD,GAAkB,GAClB9lB,EAAqB,KAAM,MAAM,GAAM,EAoB2G,EAAE,WAAC,SAAC,OAAa,CAAC5oC,KAAM,UAAW,WACrK,oBAAQG,KAAK,SAAS1B,UAAU,oBAAoB4B,QAAS,WAAQquD,GAAkB,EAAO,EAAE,UAAC,KAAC,SAAC,MAAO,IAAG,qBASrI,ECktBA,OAjvBA,SAAkCv1D,GAAQ,IAAD,IAErC0U,EAkBE1U,EAlBF0U,UACAqY,EAiBE/sB,EAjBF+sB,KACA4oC,EAgBE31D,EAhBF21D,aACAC,EAeE51D,EAfF41D,WACAC,EAcE71D,EAdF61D,UACAjzD,EAaE5C,EAbF4C,UACAkzD,EAYE91D,EAZF81D,kBACA1vD,EAWEpG,EAXFoG,aACAqD,EAUEzJ,EAVFyJ,aAGAssD,GAOE/1D,EATFg2D,eASEh2D,EARFumB,cAQEvmB,EAPF+1D,kBACAE,EAMEj2D,EANFi2D,iBACAC,EAKEl2D,EALFk2D,kBAGAC,GAEEn2D,EAJFonB,gBAIEpnB,EAHFqnB,mBAGErnB,EAFFm2D,eACA3L,EACExqD,EADFwqD,UAEF/hD,QAAQC,IAAI8hD,GACZ,IAAMjkD,EAAUC,EAAAA,EAAAA,QAEhB,GAAwCC,EAAAA,EAAAA,UAAS,IAAG,eAA7Cu7B,EAAY,KAAE4J,EAAe,KACpC,GAAwCnlC,EAAAA,EAAAA,WAAS,GAAM,eAAhD2vD,EAAY,KACnB,GADoC,MACN3vD,EAAAA,EAAAA,WAAS,IAAK,eAA5B4vD,GAAF,KAAY,MAC1B,GAAgD5vD,EAAAA,EAAAA,UAAS,IAAG,eAArDolC,EAAgB,KAAEC,EAAmB,KAC5C,GAAoCrlC,EAAAA,EAAAA,WAAS,GAAM,eAA5C6vD,EAAU,KAAEC,EAAa,KAChC,GAAkC9vD,EAAAA,EAAAA,UAASsmB,EAAKypC,gBAAe,eAAxD1L,EAAS,KAAE2L,GAAY,KAC9B,IAA8BhwD,EAAAA,EAAAA,UAASsmB,EAAK2pC,cAAa,iBAAlD3L,GAAO,MAAE4L,GAAU,MAC1B,IAA0ClwD,EAAAA,EAAAA,WAAS,GAAM,iBAAnCgvD,IAAF,MAAkB,OACtC,IAAwChvD,EAAAA,EAAAA,UAAS,IAAG,iBAA7CmwD,GAAY,MAAEC,GAAe,MACpC,IAA8BpwD,EAAAA,EAAAA,UAAS,CAAC,GAAE,iBAAnCqwD,GAAO,MAAEC,GAAU,MAC1B,IAAsCtwD,EAAAA,EAAAA,WAAS,GAAM,iBAAjC+uD,IAAF,MAAgB,OAClC,IAA4C/uD,EAAAA,EAAAA,WAAS,GAAM,iBAApD6uD,GAAc,MAAEC,GAAiB,MAClCvsC,GAAe,CACnB1nB,GAAI,GACJ01D,cAAejqC,EAAKzrB,GACpBitD,WAAqC,QAA3B,EAAE75C,EAAUghD,aAAa,UAAE,aAAzB,EAA2BnH,WACvC0I,iBAAkB,MAClBC,YAAa,IACbC,WAAY,IACZC,WAAY,IACZC,WAAsC,QAA5B,EAAE3iD,EAAU4iD,cAAc,UAAE,aAA1B,EAA4BC,KACxCC,UAAW,IACXC,kBAAmB,KACnBv7B,SAAU,MACVtwB,SAAU,GACV8rD,GAAI,GACJC,cAAe,KACfl0C,SAAUsJ,EAAKypC,eACfpkD,OAAQ2a,EAAK2pC,aACbkB,SAAU,GACVC,YAAazxD,EACb0xD,gBAAiB1xD,EACjBke,UAAW1hB,EACX2D,QAASA,GAEX,IAAgCE,EAAAA,EAAAA,UAASuiB,IAAa,iBAA/Chd,GAAQ,MAAE1D,GAAW,MAC5B,IAAoC7B,EAAAA,EAAAA,UAAS,IAAG,iBAAzCsxD,GAAU,MAAEC,GAAa,MAChCvvD,QAAQC,IAAIqkB,EAAM,eAClB,IAAMkrC,IAAczvD,EAAAA,EAAAA,QAAO,MAC3B,IAAoC/B,EAAAA,EAAAA,WAAS,GAAM,iBAA5C4b,GAAU,MAAEC,GAAa,MAE1B41C,GAAgB,EAAC,0BAChBxjD,EAAUghD,aAAa,IAAOhhD,EAAU4iD,cAAc,IAAOvqC,IAEpEtkB,QAAQC,IAAIwvD,GAAe,kBAE3Bn1D,EAAAA,EAAAA,YAAU,WACR+oC,GAAoB,SAAC3iC,GAAI,OAAK64B,CAAY,GAC5C,GAAG,CAACA,KAEJj/B,EAAAA,EAAAA,YAAU,WACRo1D,IACF,GAAG,KAEHp1D,EAAAA,EAAAA,YAAU,YACJozD,GAAiBN,IACnB78B,OAAOotB,SAAS,CACdrmB,IAAKk4B,GAAYlnD,QAAQqnD,UACzB/R,SAAU,UAGhB,GAAG,CAAC8P,EAAeN,IACnB,IAAMsC,GAAwB,WAC5B7wD,IAAM,CACJC,OAAQ,MACRC,IAAKjB,EAAO,kDACXoB,MAAK,SAAUC,GAChB,IAAI+G,EAAM/G,EAASjF,KACnBq1D,GAAcrpD,EAChB,GACF,EAeM0pD,GAAkB,SAACrvD,GACvB4iC,EAAgB5iC,EAAE6B,OAdA,WAAO,IAAD,MACxBpC,QAAQC,IAAIgM,GACZpN,IAAM,CACJC,OAAQ,MACRC,IACEjB,EAAO,oDAC+D,QAD/D,EACsCmO,EAAUghD,aAAa,UAAE,aAAzB,EAA2BnH,WAAU,kBAA0B,QAA1B,EAAU2J,GAAc,UAAE,aAAhB,EAAkB1B,eAAc,iBAAyB,QAAzB,EAAS0B,GAAc,UAAE,aAAhB,EAAkBxB,gBACxJ/uD,MAAK,SAAUC,GAChB,IAAI+G,EAAM/G,EAASjF,KACnBo0D,GAAWpoD,EACb,GACF,CAIE2pD,GACA7vD,QAAQC,IAAI,kBACZD,QAAQC,IAAIM,EAAE6B,MAAO,WACjB7B,EAAE6B,OACJwrD,GAAW,EAEf,EA+UA,SAASkC,GAAezN,EAAWC,GAMjC,IALA,IAAMsE,EAAQ,IAAIrlD,KAAK8gD,GACjBsG,EAAM,IAAIpnD,KAAK+gD,GAEjByN,EAAc,EAEXnJ,GAAS+B,GAES,IAAnB/B,EAAMlE,UAAqC,IAAnBkE,EAAMlE,UAEhCqN,IAIFnJ,EAAMjE,QAAQiE,EAAMhE,UAAY,GAGlC,OAAOmN,CACT,CAEA,SAASC,GAAaC,GAEpB,MAA2BA,EAAQn5C,MAAM,KAAK1d,IAAI82D,QAAO,eAAlDtX,EAAI,KAAEH,EAAK,KAAEmS,EAAG,KAKvB,OAFgB,IAAIrpD,KAAKq3C,EAAMH,EAAQ,EAAGmS,EAG5C,CAlEA5qD,QAAQC,IAAIouD,GAAS,cA4GrB,IAIMrnB,GAAuB,SAACzmC,EAAG+a,EAAS60C,EAAmBC,GAC3DpwD,QAAQC,IAAI4tD,GAEZ7tD,QAAQC,IAAIsD,GAAU,aACtB,IAAI8sD,EAhDN,SAAuB/rC,EAAM/gB,GAC3BvD,QAAQC,IAAIqkB,EAAM/gB,GAGlB,IAAM+sD,EAAkBhsC,EAAKsd,QAAQlnC,QAAO,SAAC61D,GAC3C,OAAOA,EAAOC,aAAejtD,EAASuiD,UACxC,IAEA,GAAIwK,EAAgB5lD,OAAS,EAAG,CAC9B,IAAM+lD,EAAmB,IAAIlvD,KAAKgC,EAASyX,UACrC01C,EAAiB,IAAInvD,KAAKgC,EAASoG,QAUzC,OAPsB2mD,EAAgB/lD,MAAK,SAACgmD,GAC1C,IAAMI,EAAe,IAAIpvD,KAAKgvD,EAAOloB,SAC/BuoB,EAAa,IAAIrvD,KAAKgvD,EAAOjoB,OAEnC,OADAtoC,QAAQC,IAAI0wD,EAAcC,GACnBH,GAAoBG,GAAcF,GAAkBC,CAC7D,KAIE3wD,QAAQC,IACNwwD,EACAC,EACA,gEAEK,IAGP1wD,QAAQC,IAAI,oDACL,EAEX,CAGE,OADAD,QAAQC,IAAI,6CACL,CAEX,CAU0B4wD,CAAcvsC,EAAM/gB,IAI5C,IA1GsB,WACtB,IAAMutD,EAAKd,GAAazsD,GAASyX,UAC3B+1C,EAAKf,GAAazsD,GAASoG,QAI3BqnD,GAHK,UAAMF,EAAGvc,cAAa,YAAIuc,EAAGtc,WAAa,EAAC,YAAIsc,EAAGlO,WAClD,UAAMmO,EAAGxc,cAAa,YAAIwc,EAAGvc,WAAa,EAAC,YAAIuc,EAAGnO,WAE5CkN,GAAegB,EAAIC,IACpC/wD,QAAQC,IACNouD,GAAQnM,SACR3+C,GAASmrD,WACTe,GAAc,GAAGwB,UACjB,YAEF,IAAIlI,EAAOiI,EAAW3C,GAAQnM,SAC1BgP,EAAYnI,EAAOxlD,GAASmrD,WAGhC1uD,QAAQC,IAAI8oD,EAAM,QAClB,IAAIoI,EAAkBD,EAAYzB,GAAc,GAAGwB,UAAY,EAAI,EAEnE,OADAjxD,QAAQC,IAAIkxD,GACLA,CAET,CAkF0BC,IAEAhB,EAYxB,OANyB,GAAvB7sD,GAASmrD,YACc,MAAvBnrD,GAASmrD,YACc,IAAvBnrD,GAASmrD,YAET70C,IAAc,GAEE,GAAdg0C,GACFO,IACE,4BACE,SAAC,MAAa,CAAC12D,MAAO,CAAEy1C,UAAW,UAAY,iDAKnD3tC,YAAW,WACT4uD,GAAgB,KAClB,GAAG,MAKDiC,GACFlD,GAAW,SAACkE,GAAe,IAAD,MACxB,OAAO,kBACFA,GAAS,mBACX,UAAqC,QAA5B,EAAGplD,EAAUghD,aAAa,UAAE,aAAzB,EAA2BlqB,WAAQ,SAC/C,WAA6B,QAAnB,EAAG0sB,GAAc,UAAE,aAAhB,EAAkBxI,WAAQ,SACvC,WAAa1jD,GAASyX,WAAQ,SAC9B,SAAWzX,GAASoG,QAAM,GAE/B,IACAujD,GAAa,QACb1tD,YAAW,WACT0tD,GAAa,EACf,GAAG,YAGDiD,GAAqBC,IACvBvxD,IAAM,CACJC,OAAQ,OACRC,IAAKjB,EAAO,+CAEZ5D,KAAMqJ,KACLrE,MAAK,SAACC,GACPa,QAAQC,IAAId,GACY,sBAAxBA,EAASjF,KAAK2H,OACVyrD,GAAiB,GACjBG,GAAkB,GACtBzsD,IAEAxB,YAAW,WACT8tD,GAAiB,GACjBG,GAAkB,EACpB,GAAG,IACL,KA3DAX,IAAkB,EA6DtB,EAEA,OACE,gCACGqB,KAAgB,gBAAKtxD,UAAU,kBAAiB,SAAEsxD,MAEnD,gBAAKtxD,UAAU,cAAa,UAC1B,gBAAKA,UAAU,cAAa,UAC1B,wBAAI,uBAGR,iBACEA,UAAU,0CACVnF,MAAO,CAAEy1C,UAAW,QAAS,WAE7B,UAAC,IAAS,CACR/qC,MAAOqtD,GACP5yD,UAAU,sBACVy8B,cAAc,WACdlW,UAAWmW,EACXld,SAAS,MACTlS,KAAM,GACNmS,eAAa,EACbgH,QAAQ,KACRpb,SAAUylD,EACVtqC,kBAAmB,SAAC9iB,GAAC,OAAKqvD,GAAgBrvD,EAAE,EAC5Cgc,aAAa,gBAAe,UAEF,GAAzBwlC,EAAU,GAAGt2C,WACZ,SAAC,IAAM,CACL6tB,cAAc,WACdsV,YAAa,CAAEj3C,MAAO,OAAQ+f,QAAS,eAI3C,SAAC,IAAM,CACLnI,UAAQ,EACRE,MAAM,WACNzI,OAAO,WACPwI,KApgBa,SAAC8L,GACtB,OACE,gBAAKze,UAAU,WAAW,cAAY,UAAU2B,MAAO8c,EAAQynB,SAAS,SACrEznB,EAAQynB,UAGf,KAggBQ,SAAC,IAAM,CACLxzB,UAAQ,EACRE,MAAM,cACNzI,OAAO,cACPwI,KAngBgB,SAAC8L,GACzB,OACE,gBACEze,UAAU,WACV,cAAY,UACZ2B,MAAO8c,EAAQg2C,YAAY,SAE1Bh2C,EAAQg2C,aAGf,KA2fQ,SAAC,IAAM,CACL/hD,UAAQ,EACRE,MAAM,eACNzI,OAAO,gBACPwI,KA9fU,SAAC8L,GACnB,OACE,gBACEze,UAAU,WACV,cAAY,UACZ2B,MAAO8c,EAAQi2C,aAAa,SAE3Bj2C,EAAQi2C,cAGf,KAsfQ,SAAC,IAAM,CACLhiD,UAAQ,EACRE,MAAM,WACNzI,OAAO,WACPwI,KAzfa,SAAC8L,GACtB,OACE,gBAAKze,UAAU,WAAW,cAAY,UAAU2B,MAAO8c,EAAQk2C,SAAS,SACrEl2C,EAAQk2C,UAGf,KAqfQ,SAAC,IAAM,CACLjiD,UAAQ,EACRE,MAAM,iBACNzI,OAAO,YACPwI,KAvfO,SAAC8L,GAChB,OAAOie,EACJngC,KAAI,SAACvB,GAAC,OAAKA,EAAEiuD,UAAU,IACvB76C,SAASqQ,EAAQwqC,aAClB,gBAAKjpD,UAAU,aAAY,UACzB,SAAC,IAAU,CACTwD,KAAK,SACLxH,GAAG,SACHmQ,SAAUhE,IAAOq9C,GAAW54C,GAG5BN,WAAW,cACXf,SAAU,SAAC7H,GACTV,IAAY,SAACa,GAAI,yBACZA,GAAI,cACN,WAAasE,IAAOzE,GAAG2E,OAAO,eAAa,IAE9ClF,QAAQC,IAAIM,GACZytD,GAAahpD,IAAOzE,GAAG2E,OAAO,eAC9B0oD,GAAW,EAEb,EAIArkD,QAASvE,IAAOsW,EAAQyyC,gBAAgBtkD,GACxCya,QAASlf,IAAOzB,GAASoG,QAAQF,GACjChB,UAAW,SAAClI,GACVA,EAAEwH,gBAIJ,OAIJ,gBACE,cAAY,UACZvJ,MAAOwG,IAAOsW,EAAQyyC,gBAAgB7oD,OAAO,eAAe,SAE3DF,IAAOsW,EAAQyyC,gBAAgB7oD,OAAO,gBAG7C,EA6cUkD,SAAU,SAAC7H,GAAC,OApPL,SAACA,EAAG+a,GACnB,IAAM3Q,EAAQy4B,EAAiByB,WAC7B,SAACC,GAAe,OAAKA,EAAgBjsC,KAAOyiB,EAAQziB,EAAE,IAElDksC,GAAuB,OAAO3B,GACpC2B,EAAwBp6B,IAAM,kBACzBo6B,EAAwBp6B,IAAM,IACjC8mD,MAAOlxD,EAAE1H,KAEXwqC,EAAoB0B,EACtB,CA0O2BX,CAAS7jC,EAAG+a,QAAQ,KAEvC,SAAC,IAAM,CACL/L,UAAQ,EACRE,MAAM,eACNzI,OAAO,UACPwI,KAjdK,SAAC8L,GACd,OAAOie,EACJngC,KAAI,SAACvB,GAAC,OAAKA,EAAEiuD,UAAU,IACvB76C,SAASqQ,EAAQwqC,aAClB,gBAAKjpD,UAAU,aAAY,UACzB,SAAC,IAAU,CACTwD,KAAK,SACLxH,GAAG,SACHmQ,SAAUhE,IAAOs9C,IAAS74C,GAC1BN,WAAW,cAIXI,QAASvE,IAAOzB,GAASyX,UAAUvR,GACnCya,QAASlf,IAAOsW,EAAQ2yC,cAAcxkD,GACtChB,UAAW,SAAClI,GACVA,EAAEwH,iBACe,GAAbxH,EAAEiJ,SACJjJ,EAAEwH,gBAEN,EACAK,SAAU,SAAC7H,GACTV,IAAY,SAACa,GAAI,yBACZA,GAAI,cACN,SAAWsE,IAAOzE,GAAG2E,OAAO,eAAa,IAE5ClF,QAAQC,IAAIM,GACZ2tD,GAAWlpD,IAAOzE,GAAG2E,OAAO,eAC5B0oD,GAAW,EAEb,OAIJ,gBACE,cAAY,UACZpvD,MAAOwG,IAAOsW,EAAQ2yC,cAAc/oD,OAAO,eAAe,SAEzDF,IAAOsW,EAAQ2yC,cAAc/oD,OAAO,gBAG3C,KA2aQ,SAAC,IAAM,CACLqK,UAAQ,EACRE,MAAM,kBACNzI,OAAO,cACPwI,KA9ac,SAAC8L,GACvB,OACE,gBACE5jB,MAAO,CACLwP,MAAOoU,EAAQo2C,gBAAkB,GAAK,MACtCr0C,UAAW,SAEb,cAAY,UACZ7e,MAAO8c,EAAQo2C,gBAAgB,SAE9Bp2C,EAAQo2C,iBAGf,KAmaQ,SAAC,IAAM,CACLniD,UAAQ,EACRE,MAAM,YACNzI,OAAO,gBACPwI,KAtaQ,SAAC8L,GACjB,OACE,gBACE5jB,MAAO,CAAEwP,MAAOoU,EAAQ21C,UAAY,GAAK,MAAO5zC,UAAW,SAC3D,cAAY,UACZ7e,MAAO8c,EAAQ21C,UAAU,SAExB31C,EAAQ21C,WAGf,KA8ZQ,SAAC,IAAM,CACL1hD,UAAQ,EACRE,MAAM,WACNzI,OAAO,cACPwI,KArZO,SAAC8L,GAChB,OAAOie,EACJngC,KAAI,SAACvB,GAAC,OAAKA,EAAEiuD,UAAU,IACvB76C,SAASqQ,EAAQwqC,aAClB,0BACE,kBACEvnD,KAAK,OACL1F,GAAG,WACH+P,aAAa,IACbR,SAAU,SAAC7H,GACTV,IAAY,SAACa,GAAI,yBACZA,GAAI,cACN,aAAeH,EAAEmH,OAAOtF,OAAK,IAEhCpC,QAAQC,IAAIM,EAAEmH,OAAOtF,MAEvB,OAIJ,gBACE1K,MAAO,CAAE2lB,UAAW,SACpB,cAAY,UACZ7e,MAAO8c,EAAQq2C,SAAS,SAEvBr2C,EAAQq2C,UAGf,KA4XQ,SAAC,IAAM,CACLpiD,UAAQ,EACRE,MAAM,OACNzI,OAAO,cACPwI,KAvaS,SAAC8L,GAClB,OACE,gBACE5jB,MAAO,CAAE2lB,UAAW,SACpB,cAAY,UACZ7e,MAAO8c,EAAQwzC,KAAK,SAEnBxzC,EAAQwzC,MAGf,KA+ZQ,SAAC,IAAM,CACLv/C,UAAQ,EACRE,MAAM,UACNzI,OAAO,uBACPwI,KApYiB,SAAC8L,GAE1B,OADAtb,QAAQC,IAAI4tD,EAAY,cACjBt0B,EACJngC,KAAI,SAACvB,GAAC,OAAKA,EAAEiuD,UAAU,IACvB76C,SAASqQ,EAAQwqC,aAClB,gBAAK1lD,IAAKovD,GAAY,UACpB,kBACE3yD,UAAS,gBACP+c,IAAkC,MAAnB0B,EAAQs2C,SAAsC,IAAnBt2C,EAAQs2C,QAE9C,GADA,gBAGNrzD,KAAK,OACL1F,GAAG,UACH+P,aACqB,MAAnB0S,EAAQs2C,SAAsC,IAAnBt2C,EAAQs2C,QAC/B,EACAt2C,EAAQs2C,QAEdxpD,SAAU,SAAC7H,GACT,IACMsxD,EADatxD,EAAEmH,OAAOtF,OACO,GASnC,GAPAvC,IAAY,SAACa,GAAI,yBACZA,GAAI,cACN,aAAeH,EAAEmH,OAAOtF,OAAK,IAEhCpC,QAAQC,IAAIM,EAAEmH,OAAOtF,OACrB0rD,GAAc,GAEV+D,EAAc,CAChB,IAGI9I,EADa+G,GAFNE,GAAazsD,GAASyX,UACtBg1C,GAAazsD,GAASoG,SAEX0kD,GAAQnM,SAC9BriD,IAAY,SAACa,GAAI,yBACZA,GAAI,cACN,cAAgBH,EAAEmH,OAAOtF,MAAQ2mD,GAAI,GAE1C,MACEyE,GAAiB,GACjBhuD,YAAW,WACTguD,GAAiB,EACnB,GAAG,KACHjtD,EAAEmH,OAAOtF,MAAQ,EAErB,OAIJ,gBAAK1K,MAAO,CAAE2lB,UAAW,SAAW,cAAY,UAAU7e,MAAM,IAAG,SAC7C,MAAnB8c,EAAQs2C,SAAsC,IAAnBt2C,EAAQs2C,QAAgB,EAAIt2C,EAAQs2C,SAGtE,KAiVQ,SAAC,IAAM,CACLriD,UAAQ,EACRE,MAAM,UACNzI,OAAO,iBACPwI,KApVY,SAAC8L,GACrB,OACE,gBAAK5jB,MAAO,CAAE2lB,UAAW,SAAW,cAAY,UAAU7e,MAAM,IAAG,SAAC,KAIxE,KAgVQ,SAAC,IAAM,CACL+Q,UAAQ,EACRE,MAAM,GACNzI,OAAO,kBACPwI,KAnVa,SAAC8L,GACtB,OAAOie,EACJngC,KAAI,SAACvB,GAAC,OAAKA,EAAEiuD,UAAU,IACvB76C,SAASqQ,EAAQwqC,aAClB,0BACE,mBACEjpD,UAAU,eACVwD,KAAK,aACLxH,GAAG,aACH+P,aAAa,MACbR,SAAU,SAAC7H,GACTV,IAAY,SAACa,GAAI,yBACZA,GAAI,cACN,mBAAqBH,EAAEmH,OAAOtF,OAAK,IAEtCpC,QAAQC,IAAIM,EAAEmH,OAAOtF,MAGvB,EACA3D,QAAS,SAAC8B,GACRA,EAAEuxD,iBACJ,EAAE,SAGDxC,GAAWl2D,KAAI,SAAC0P,GAAI,aACnB,oBACE1G,MAAO0G,EAAKjQ,GACZmQ,SACEF,EAAKjQ,KAAwB,QAAtB,EAAIyiB,EAAQsmB,QAAQ,UAAE,aAAlB,EAAoBmwB,oBAChC,UAEA,IACAjpD,EAAKC,YACC,QAMf,EAEJ,OA6SgC,GAAzBg5C,EAAU,GAAGt2C,UACZ,iBAAK5O,UAAU,2BAA0B,WACvC,oBACEA,UAAU,uBACV4B,QApMkB,WAC5BuoC,GAAqB,KAAM,MAAM,GAAM,EACzC,EAmMY,cAAY,UACZxoC,MAAM,OAAM,WAEZ,SAAC,MAAO,IAAG,YAEb,oBACE3B,UAAU,oBACV4B,QAAS,WACP4uD,GAAkB,EACpB,EACA,cAAY,UACZ7uD,MAAM,UAAS,WAEf,SAAC,MAAO,IAAG,eAKf,MAGHquD,KACC,SAAC,GAA+B,CAC9B3yD,KAAM+R,EACN+6B,qBAAsBA,GACtB6lB,eAAgBA,GAChBE,eAAgBA,GAChBD,kBAAmBA,GACnBE,iBAAkBA,OAK5B,ECjZA,OA7VA,SAA8Bz1D,GAC5B,IACE2C,EAeE3C,EAfF2C,KACAmzD,EAcE91D,EAdF81D,kBAAmBH,EAcjB31D,EAdiB21D,aAAcC,EAc/B51D,EAd+B41D,WAAYC,EAc3C71D,EAd2C61D,UAC7CzvD,EAaEpG,EAbFoG,aAAcxD,EAaZ5C,EAbY4C,UACd6G,EAYEzJ,EAZFyJ,aACAusD,EAWEh2D,EAXFg2D,eACAyE,EAUEz6D,EAVFy6D,YACAtE,EASEn2D,EATFm2D,cACAF,EAQEj2D,EARFi2D,iBACA1vC,EAOEvmB,EAPFumB,cACAwvC,EAME/1D,EANF+1D,iBACA3uC,EAKEpnB,EALFonB,gBACAC,EAIErnB,EAJFqnB,mBACAqzC,EAGE16D,EAHF06D,SACAxE,EAEEl2D,EAFFk2D,kBACA1L,EACExqD,EADFwqD,UAEF,GAA8B/jD,EAAAA,EAAAA,WAAS,GAAM,eAAtCG,EAAO,KAAEoO,EAAU,KAC1B,GAAwCvO,EAAAA,EAAAA,UAASwO,EAAAA,KAAkB,eAA5DC,EAAY,KAAEC,EAAe,KACpC,GAAgC1O,EAAAA,EAAAA,UAAS,KAAI,eAAtCk0D,EAAQ,KAAEC,EAAW,KAC5B,GAAwBn0D,EAAAA,EAAAA,UAAS,IAAG,eAA7BrD,EAAI,KACX,GADoB,MACMqD,EAAAA,EAAAA,UAAS,SAAO,eAAnCo0D,EAAK,KAAEC,EAAQ,KAChBv0D,EAAUC,EAAAA,EAAAA,QAChB,GAAgDC,EAAAA,EAAAA,UAAS,IAAG,eAArDs0D,EAAgB,KAAEC,GAAmB,KAC5C,IAAwCv0D,EAAAA,EAAAA,UAAS,IAAG,iBAA7Cw0D,GAAY,MAAEC,GAAe,MACpC,IAAwCz0D,EAAAA,EAAAA,WAAS,GAAM,iBAAhD00D,GAAY,MAAEC,GAAe,MACpC,IAA8B30D,EAAAA,EAAAA,UAAS,IAAG,iBAAnC40D,GAAO,MAAEC,GAAU,MACpBzyD,IAAML,EAAAA,EAAAA,QAAO,KAWnBzF,EAAAA,EAAAA,YAAU,WAAQ,GAAG,CAACg4D,EAAkB33D,KACxCL,EAAAA,EAAAA,YAAU,WACRw4D,KAVAj0D,IAAM,CACJC,OAAQ,MACRC,IAAKjB,EAAO,oDACXoB,MAAK,SAAUC,GAChB,IAAI+G,EAAM/G,EAASjF,KACnBq4D,GAAoBrsD,EACtB,GAMF,GAAG,KAEH5L,EAAAA,EAAAA,YAAU,WACRi2B,OAAOotB,SAAS,EAAGnzC,SAASuoD,gBAAgBxvC,cACxC0uC,GAAU1hC,OAAOotB,SAAS,EAAG,EACnC,GAAG,CAACsU,IAEJ,IAAMa,GAAkB,WACtBj0D,IAAM,CACJC,OAAQ,MACRC,IAAKjB,EAAO,oDACXoB,MAAK,SAAUC,GAChB,IAAI+G,EAAM/G,EAASjF,KACnB24D,GAAW3sD,EACb,GACF,EAEMuB,GAAe,SAAClH,GACpB4xD,EAAY5xD,EAAEmH,OAAOtF,MACvB,EAwCA,OACE,0BACE,iBAAKvF,UAAU,4BAA2B,WACxC,iBAAKA,UAAU,2BAA0B,WACvC,0BAAI,qBAAuB,OAAJ3C,QAAI,IAAJA,OAAI,EAAJA,EAAM+sD,aAC7B,gBACExoD,QAAS,WACP8N,GAAYpO,GAERuO,EADJvO,EACoBqO,EAAAA,IACAyC,EAAAA,IACtB,EAAE,UAEF,0BAAOxC,UAGX,UAAC,KAAS,CAACtO,SAAUA,EAAQ,WAC3B,4BAEE,gBAAKtB,UAAU,iBAAgB,UAC7B,gBAAKA,UAAU,kBAAiB,UAC9B,iBACEA,UAAU,QACVuL,SAAU,SAAC7H,GACTkH,GAAalH,EACf,EAAE,WAEF,kBACE1D,UAAU,mBACViN,QAAQ,MACRvL,KAAK,QACL6D,MAAM,IACN/B,KAAK,WACLxH,GAAG,WACHkR,QAAqB,KAAZmoD,IACT,QAEF,iBAAMr1D,UAAU,mBAAkB,SAAC,oBAE3B,YAYd,gBAAKA,UAAU,aAAY,SACZ,KAAZq1D,GACC,iBAAKr1D,UAAU,iBAAgB,WAC7B,mBAAOA,UAAU,QAAO,UAAC,aACd,iBAAMA,UAAU,kBAAiB,SAAC,UAE7C,kBAAOA,UAAU,YAAW,SAAC,OAC7B,gBACEA,UAAU,qBACVuD,IAAK,SAACiI,GACJjI,GAAIkI,QAAQ,GAAKD,CACnB,EAAE,UAEF,iBAAKxL,UAAU,0BAAyB,WACtC,SAAC,EAAAqD,wBAAuB,CACtBC,MAAOmyD,EACP/zD,KAAK,OACL8B,KAAK,aACLxH,GAAG,aACHgE,UAAU,qBACVyD,SAAU,SAACC,GACT8xD,EAAS9xD,EAAE1H,GACb,EACA8H,UAAU,EACVF,QAlHF,WAClB4xD,EAAS,OACX,EAiHsB9pD,YAAY,+BAEd,4BAAM,IAAE5N,EAAK0F,cAGjB,gBAAKxD,UAAU,MAAK,UAClB,oBACE0B,KAAK,SACL1B,UAAU,kBACV4B,QAAS,YAzHR,WACnB,IAAIyM,GAAQC,EAAAA,EAAAA,GAAiB/K,IAC7BJ,QAAQC,IAAIiL,GAEC,GAATA,IACF8mD,GAAY,GACZxyD,YAAW,WACTwyD,GAAY,EACd,GAAG,MAELnzD,IAAM,CACJC,OAAQ,OACRC,IAAKjB,EAAO,uDACZ5D,KAAM,CACJk4D,MAAOA,EAAMntD,WACb4/C,OAAQ3qD,EAAK6zD,eACbiF,MAAO94D,EAAK+zD,gBAGb/uD,MAAK,SAAUC,GACd,IAAIC,EAAOD,EAASjF,KACpB8F,QAAQC,IAAIb,GACZqzD,GAAgBrzD,GAChBuzD,IAAgB,EAClB,IACCtzD,OAAM,SAAUF,GACfa,QAAQC,IAAId,EACd,GACJ,CA8FsB8zD,EACF,EAAE,WAEF,SAAC,MAAQ,IAAG,kBAMlB,iBAAKp2D,UAAU,oBAAmB,WAChC,gBAAKA,UAAU,iBAAgB,UAC7B,iBAAKA,UAAU,iBAAgB,WAC7B,mBAAOA,UAAU,QAAQiN,QAAQ,KAAI,UAAC,kBACtB,iBAAMjN,UAAU,kBAAiB,SAAC,UAElD,iBAAMA,UAAU,QAAO,SAAC,OACxB,gBAAKA,UAAU,QAAO,UACpB,oBACEA,UAAU,sBACVwD,KAAK,UACLxH,GAAG,UACHuP,SAAU,SAAC7H,GAAC,OAAKkH,GAAalH,EAAE,EAAC,WAEjC,oBAAQ6B,MAAM,IAAG,UACd,IAAI,uBAGNwwD,GAAQx5D,KAAI,SAAC0P,GAAI,OAChB,oBAAQ1G,MAAO0G,EAAKjQ,GAAG,UAAC,IAAEiQ,EAAKzI,OAAc,eAMvD,gBAAKxD,UAAU,iBAAgB,UAC7B,iBAAKA,UAAU,iBAAgB,WAC7B,mBAAOA,UAAU,QAAQiN,QAAQ,OAAM,UAAC,SACjC,iBAAMjN,UAAU,kBAAiB,SAAC,UAEzC,iBAAMA,UAAU,QAAO,SAAC,OACxB,gBAAKA,UAAU,QAAO,UACpB,oBACEA,UAAU,sBACVwD,KAAK,OACLxH,GAAG,OACHuP,SAAU,SAAC7H,GAAC,OAAKkH,GAAalH,EAAE,EAAC,WAEjC,oBAAQ6B,MAAM,OAAM,UACjB,IAAI,wBAGP,mBAAQA,MAAM,MAAK,SAAC,UACpB,mBAAQA,MAAM,WAAU,SAAC,eACzB,mBAAQA,MAAM,aAAY,SAAC,2BAKnC,gBAAKvF,UAAU,iBAAgB,UAC7B,gBAAKA,UAAU,sBAEjB,gBAAKA,UAAU,iBAAgB,UAC7B,gBAAKA,UAAU,qBAEhBmD,QAAQC,IAAI/F,EAAK+zD,aAAc/zD,EAAK6zD,eAAgB,UAErD,gBAAKlxD,UAAU,iBAAgB,UAC7B,iBAAKA,UAAU,iBAAgB,WAC7B,mBAAOA,UAAU,QAAQiN,QAAQ,SAAQ,UAAC,cAC9B,iBAAMjN,UAAU,kBAAiB,SAAC,UAE9C,iBAAMA,UAAU,QAAO,SAAC,OACxB,gBAAKA,UAAU,QAAO,UACpB,SAAC,IAAU,CACTwD,KAAK,SACLxH,GAAG,SACHmQ,SAAUhE,IAAO9K,EAAK6zD,gBAAgBtkD,GACtCN,WAAW,cACXC,mBAAiB,EACjBC,kBAAgB,EAChBC,aAAa,SACbC,QAASvE,IAAO9K,EAAK6zD,gBAAgBtkD,GACrCya,QAASlf,IAAO9K,EAAK+zD,cAAcxkD,GACnChB,UAAW,SAAClI,GACVA,EAAEwH,iBACe,GAAbxH,EAAEiJ,SACJjJ,EAAEwH,gBAEN,YAKR,gBAAKlL,UAAU,iBAAgB,UAC7B,iBAAKA,UAAU,iBAAgB,WAC7B,mBAAOA,UAAU,QAAQiN,QAAQ,SAAQ,UAAC,YAChC,iBAAMjN,UAAU,kBAAiB,SAAC,UAE5C,iBAAMA,UAAU,QAAO,SAAC,OACxB,gBAAKA,UAAU,QAAO,UACpB,kBACE0B,KAAK,OACL1B,UAAU,eACVhE,GAAG,SACH0P,aAAW,EACXI,UAAQ,YAKhB,gBAAK9L,UAAU,iBAAgB,UAC7B,iBAAKA,UAAU,iBAAgB,WAC7B,mBAAOA,UAAU,QAAQiN,QAAQ,aAAY,UAAC,gBAChC,iBAAMjN,UAAU,kBAAiB,SAAC,UAEhD,iBAAMA,UAAU,QAAO,SAAC,OACxB,gBAAKA,UAAU,QAAO,UACpB,kBACE0B,KAAK,OACL1B,UAAU,eACVhE,GAAG,aACH0P,aAAW,EACXI,UAAQ,mBAQjB,IACN+pD,IACC,SAAC,GAAwB,CACvBzmD,UAAWumD,GACXluC,KAAMpqB,EACNC,UAAWA,EACX+yD,aAAcA,EACdE,UAAWA,EACXD,WAAYA,EACZE,kBAAmBA,EACnB1vD,aAAcA,EACdqD,aAAcA,EACdusD,eAAgBA,EAChBzvC,cAAeA,EACfwvC,iBAAkBA,EAClB3uC,gBAAiBA,EACjBC,mBAAoBA,EACpB8uC,cAAeA,EACfF,iBAAkBA,EAClBC,kBAAmBA,EACnB1L,UAAWA,IAGb,UAMZ,ECvQA,OAvFA,SAAiCxqD,GAAQ,IAAD,EAGhC8U,EAA2I9U,EAA3I8U,YAAaC,EAA8H/U,EAA9H+U,eAAgB4mD,EAA8G37D,EAA9G27D,WAAYvnD,EAAkGpU,EAAlGoU,OAAQD,EAA0FnU,EAA1FmU,IAAK1K,EAAqFzJ,EAArFyJ,aAAcc,EAAuEvK,EAAvEuK,UAAW+J,EAA4DtU,EAA5DsU,iBAAkBsnD,EAA0C57D,EAA1C47D,yBAI/Fr1D,GAJyIvG,EAAhBwgC,YAC3Gl8B,OAAOu3D,OAAO,CAAC,EAAGF,GAGtBn1D,EAAAA,EAAAA,SAiDV6vC,EAAc,WACJ,OAAVslB,QAAU,IAAVA,GAAAA,EAAYG,eAAe,gBAzB7BrzD,QAAQC,IAAI,kBACZpB,IAAM,CACFC,OAAQ,SACRC,IACIjB,EAAO,mFACqE4N,GAChFxR,KAAMwR,IACPxM,MAAK,SAAUC,GACda,QAAQC,IAAId,GACZ,IAAI+G,EAAM/G,EAASjF,KAAKqE,KACxByB,QAAQC,IAAIiG,GACOpE,OAAZuB,GAAP6C,GAAgDA,GAEhDyF,EAAO,GACP3K,IACAsL,GAAe,GACf6mD,GAAyB,GACzB3zD,YAAW,WACP2zD,GAAyB,EAC7B,GAAG,IACP,KA1CAt0D,IAAM,CACFC,OAAQ,SACRC,IACIjB,EAAO,oEACsD4N,GACjExR,KAAMwR,IACPxM,MAAK,SAAUC,GACda,QAAQC,IAAId,GACZ,IAAI+G,EAAM/G,EAASjF,KAAKqE,KACxByB,QAAQC,IAAIiG,GACZpE,EAAUoE,GAEVyF,EAAO,GACP3K,IACAsL,GAAe,GACfT,GAAiB,GACjBrM,YAAW,WACPqM,GAAiB,EACrB,GAAG,IACP,GA6BJ,EAEA,OACI,2BAEK7L,QAAQC,IAAc,OAAVizD,QAAU,IAAVA,OAAU,EAAVA,EAAYG,eAAe,WAA8B,QAApB,EAAEH,EAAWtxB,eAAO,aAAlB,EAAoBl3B,OAAQ,gBAChF,UAAC,KAAM,CAACvM,QAASkO,EAAajO,KAAK,KAAKvB,UAAU,YAAYwB,QAAS,kBAAMiO,GAAe,EAAM,EAAEhO,SAAU,SAAS,WACnH,SAAC,KAAY,CAACzB,UAAU,GAAE,UACtB,SAAC,KAAW,WACR,iBAAMA,UAAU,GAAE,SACH,OAAVq2D,QAAU,IAAVA,GAAAA,EAAYG,eAAe,eAAiB,uBAAyB,6BAIlF,UAAC,KAAU,WACI,OAAVH,QAAU,IAAVA,GAAAA,EAAYG,eAAe,gBAAiB,wBAAI,gDAE7C,wBAAI,oDAER,iBAAKx2D,UAAU,4BAA2B,WACtC,oBAAQ0B,KAAK,SAAS1B,UAAU,kBAAkB4B,QAAS,WAAQmvC,GAAc,EAAE,WAAC,SAAC,OAAa,CAACxvC,KAAM,UAAW,aAAgB,cACpI,oBAAQG,KAAK,SAAS1B,UAAU,oBAAoB4B,QAAS,WAAQ6N,GAAe,EAAO,EAAE,UAAC,KAAC,SAAC,MAAO,IAAG,yBAOlI,E,gDCibA,OAvgBA,SAAsC/U,GACpC,IACE2C,EAQE3C,EARF2C,KACAo5D,EAOE/7D,EAPF+7D,gBAQF,GADI/7D,EANFg8D,eAMEh8D,EALFgM,SAKEhM,EAJFsI,YAIEtI,EAHF6K,MAGE7K,EAFFkhD,MAEElhD,EADFi8D,UAE0Bx1D,EAAAA,EAAAA,UAAS,KAAG,eACxC,GADa,KAAW,MACAA,EAAAA,EAAAA,aAAU,eAClC,GADW,KAAS,MACMA,EAAAA,EAAAA,UAAS,KAAG,eAA/BjE,EAAK,KAAE05D,EAAQ,KACtB,GAA8Bz1D,EAAAA,EAAAA,UAAS,MAAK,eAArC01D,EAAO,KAAEC,EAAU,KAC1B,GAA0C31D,EAAAA,EAAAA,UAAS,CAAC,GAAE,eAA/C41D,EAAa,KAAEC,EAAgB,KACtC,GAAuC71D,EAAAA,EAAAA,WAAS,GAAM,eAA/C81D,EAAU,KACjB,GADmC,MACL91D,EAAAA,EAAAA,UAAS,KAAG,eAA1B+1D,GAAF,KAAY,MAC1B,GAAsC/1D,EAAAA,EAAAA,WAAS,GAAM,eACrD,GADkB,KAAgB,MACUA,EAAAA,EAAAA,WAAS,IAAM,eAApCg2D,GAAF,KAAmB,MACxC,GAAsCh2D,EAAAA,EAAAA,UAAS,IAAG,eAA9Bi2D,GAAF,KAAgB,MAClC,GAAgCj2D,EAAAA,EAAAA,UAAS,MAAK,eAExCk2D,GAFS,KAAa,KAEd,CACZC,WACE,gBACE7J,IAAK8J,GACLC,IAAI,oBACJ38D,MAAO,CAAEE,OAAQ,QACjB4G,MAAM,oBAGV81D,WACE,gBACEhK,IAAKiK,GACLF,IAAI,oBACJ38D,MAAO,CAAEE,OAAQ,QACjB4G,MAAM,8BAGVg2D,YACE,gBACElK,IAAKmK,GACLJ,IAAI,qBACJ38D,MAAO,CAAEE,OAAQ,QACjB4G,MAAM,wBAINygC,EAAmB,SAACnQ,GACxB,OAAQ,OAADA,QAAC,IAADA,OAAC,EAADA,EAAG7pB,WAAWsP,QAAQ,kCAAmC,IAClE,GACAja,EAAAA,EAAAA,YAAU,WACR2kC,EAAiBr/B,IACnB,GAAG,CAAC1F,KAGJI,EAAAA,EAAAA,YAAU,WACRi2B,OAAOotB,SAAS,EAAGnzC,SAASuoD,gBAAgBxvC,aAC9C,GAAG,IAGH,IAAM3jB,EAAU,WAAO,IAAD,MAIc,EAH9BqM,EAAY/R,EAAK+R,UACjBynD,EAAU,KAEN,OAAJx5D,QAAI,IAAJA,GAAa,QAAT,EAAJA,EAAMw5D,eAAO,OAAb,EAAezoD,SAAS,KAC1ByoD,EAAc,OAAJx5D,QAAI,IAAJA,GAAa,QAAT,EAAJA,EAAMw5D,eAAO,WAAT,EAAJ,EAAegB,WAAW,IAAK,IAEzChB,EAAc,OAAJx5D,QAAI,IAAJA,OAAI,EAAJA,EAAMw5D,QAGlB,IAAIiB,EAAY,QAAV,EAAGjB,SAAO,aAAP,EAAS58C,MAAM,KAEpB89C,EAAS,UAEHvxD,GAANsxD,IACFC,GAAM,OAAOD,IAQf,IALA,IAAIE,EAAa,GAGX94D,EAAM,CAAC,EAEJgP,EAAI,EAAGA,GAAU,QAAT,EAAG6pD,SAAM,aAAN,EAAQlqD,QAAQK,IAAK,CAAC,IAAD,EACnC+pD,EAASF,EAAO7pD,GAAG6J,OAEnBmgD,EAAY9oD,EAAU,GAC1BlQ,EAAI+4D,GAAUC,EAAUD,EAC1B,CAEA,IAAIE,EAAcn5D,OAAOo5D,QAAQl5D,GAE7Bm5D,EAAe,CAAC,KAAM,gBAEtBC,EAAkBH,EAAYt6D,QAChC,SAAC7C,GAAC,OAAMq9D,EAAajqD,SAASpT,EAAE,GAAG,IAErCk8D,EAAWoB,GAQXtB,EAAiBh4D,OAAOu3D,OAAM,MAAbv3D,OAAM,CAAQ,CAAC,GAAC,OA1Bb,MA4BpB,IAAIu5D,EAAa,OAATnpD,QAAS,IAATA,OAAS,EAATA,EAAWvR,QAAO,SAAC7C,GAAC,OAAc,GAATA,EAAEw9D,EAAQ,IAE3CF,EAAgB/7D,KAAI,WAAeuR,GAAW,IAAD,eAAvBjS,EAAG,KAAE0J,EAAK,KACjB,OAALA,QAAK,IAALA,GAAAA,EAAOmS,QAAQ,OAAQ,IAE/BsgD,EAAWj5D,KAAK,CACd05D,YAAa58D,EACbsO,OAAQ5E,EACRmzD,qBAAqB,EACrBC,cAAc,EACdC,QAAS,EAETC,OAAQ,YAAS,EAANnmC,OAAM,OACf,gBACE1yB,UACEnE,EAAIuS,SAAS,SACXvS,EAAIuS,SAAS,UACbvS,EAAIuS,SAAS,aACbvS,EAAIuS,SAAS,WACH,QACL,OAAHvS,QAAG,IAAHA,GAAAA,EAAKuS,SAAS,OAASvS,EAAIuS,SAAS,MAClC,gBACG,OAAHvS,QAAG,IAAHA,GAAAA,EAAKuS,SAAS,YACX,OAAHvS,QAAG,IAAHA,GAAAA,EAAKuS,SAAS,SACX,OAAHvS,QAAG,IAAHA,GAAAA,EAAKuS,SAAS,aACX,OAAHvS,QAAG,IAAHA,GAAAA,EAAKuS,SAAS,SACX,OAAHvS,QAAG,IAAHA,GAAAA,EAAKuS,SAAS,cACX,OAAHvS,QAAG,IAAHA,GAAAA,EAAKuS,SAAS,iBACX,OAAHvS,QAAG,IAAHA,GAAAA,EAAKuS,SAAS,eACX,OAAHvS,QAAG,IAAHA,GAAAA,EAAKuS,SAAS,YACX,OAAHvS,QAAG,IAAHA,GAAAA,EAAKuS,SAAS,aACX,OAAHvS,QAAG,IAAHA,GAAAA,EAAKuS,SAAS,aACX,OAAHvS,QAAG,IAAHA,GAAAA,EAAKuS,SAAS,gBACX,OAAHvS,QAAG,IAAHA,GAAAA,EAAKuS,SAAS,UACX,OAAHvS,QAAG,IAAHA,GAAAA,EAAKuS,SAAS,QACX,OAAHvS,QAAG,IAAHA,GAAAA,EAAKuS,SAAS,OACX,OAAHvS,QAAG,IAAHA,GAAAA,EAAKuS,SAAS,SACX,OAAHvS,QAAG,IAAHA,GAAAA,EAAKuS,SAAS,QACZ,QACAvS,EAAIuS,SAAS,MAAQ,eAAiB,GAEhDzM,MAAO4D,EAAM,SAkBZA,GACG,GAGZ,IACA,IAAIuzD,EACFP,IAAyB,QAAxB,EAAIv5D,OAAOo5D,QAAQG,EAAE,WAAG,aAApB,EAAsB16D,QAAO,SAAC7C,GAAC,QAAkB,OAAZq9D,QAAY,IAAZA,GAAAA,EAAcjqD,SAASpT,EAAE,IAAK,KAK1Eg9D,EAAWz7D,KAAI,SAACc,GAEd,IAAI6Q,EAAI8pD,EAAW75D,QAAQd,GAE3By7D,EAAWv8D,KAAI,WAAeuR,GAAW,IAAD,eAAvBjS,EAAG,KAAE0J,EAAK,KAEzB,GAAI1J,GAAOwB,EAAKo7D,YAAa,CAI3B,IAAIv5D,EAAM,CACRlD,GAAIH,EACJsO,QACE,gBACEnK,UAAWnE,EAAIuS,SAAS,OAASvS,EAAIuS,SAAS,MAAQ,gBAAkBvS,EAAIuS,SAAS,MAAQ,eAAiB,GAC9GzM,MAAO4D,EAAM,SAGH,MAATA,GAA0B,GAATA,EACd,KAGFA,IAGNkzD,YAAa58D,EAEbk9D,KAAM,YAAe,IAAD,IAAXC,EAAI,EAAJA,KACP,OACE,gBACEn+D,MAAO,CACLuuD,WAAY,SACZv3B,SAAU,SACVonC,aAAc,YACd,SAEiB,QAAlBD,EAAKtmC,OAAO12B,IAAqC,MAArBg9D,EAAK9L,IAAIgM,UACpC,+BAGE,kBAAMv3D,MAAOq3D,EAAKG,WAAWl/C,MAAM,KAAK,GAAG,UAExCo9C,EAAM2B,EAAK9L,IAAIgM,SAAS9gC,KAAKne,MAAM,KAAK,IAAK,IACnB,SAA1B++C,EAAK9L,IAAIgM,SAAS9gC,MACjB,cAAGp4B,UAAU,cAAa,SAAC,WACC,OAA1Bg5D,EAAK9L,IAAIgM,SAAS9gC,MACpB,cAAGp4B,UAAU,cAAa,SAAC,SAEF,QAAT,OAAfy2D,QAAe,IAAfA,OAAe,EAAfA,EAAiB2C,MACU,SAA1BJ,EAAK9L,IAAIgM,SAAS9gC,MAGhB,SAAC,MAAI,CACH78B,GAAE,iCAA4By9D,EAAK9L,IAAIgM,SAASV,IAChD3tD,OAAO,SAAQ,SAGdmuD,EAAKG,WAAWl/C,MAAM,KAAK,KAY9B++C,EAAKG,WAAWl/C,MAAM,KAAK,QAKjB,YAAlB++C,EAAKtmC,OAAO12B,IACY,SAA1Bg9D,EAAK9L,IAAIgM,SAAS9gC,MACQ,OAA1B4gC,EAAK9L,IAAIgM,SAAS9gC,MACG,MAArB4gC,EAAK9L,IAAIgM,UACT,8BACsB,KAAnBF,EAAKG,YACJ,iCACE,iBACEn5D,UAAU,qBACV2B,MAAO,mBAE0B,GAAlCq3D,EAAK9L,IAAIgM,SAASG,cACI,MAArBL,EAAK9L,IAAIgM,UACT,iBACEl5D,UAAU,qBACV2B,MAAO,qBAAqB,UAE5B,SAAC,MAAa,OAGhB,iBACE3B,UAAU,mBACV2B,MAAO,kBAAkB,UAEzB,SAAC,MAAa,UAKpB,iCACE,iBACE3B,UAAU,mBACV2B,MAAO,uBAE0B,GAAlCq3D,EAAK9L,IAAIgM,SAASG,cACI,MAArBL,EAAK9L,IAAIgM,UACT,iBACEl5D,UAAU,mBACV2B,MAAO,kBAAkB,UAEzB,SAAC,MAAa,OAGhB,iBACE3B,UAAU,qBACV2B,MAAO,qBAAqB,UAE5B,SAAC,MAAa,WAMJ,cAAlBq3D,EAAKtmC,OAAO12B,IACY,SAA1Bg9D,EAAK9L,IAAIgM,SAAS9gC,MACQ,OAA1B4gC,EAAK9L,IAAIgM,SAAS9gC,MACG,MAArB4gC,EAAK9L,IAAIgM,UACT,iCACE,iBACEl5D,UAAU,gBACV4B,QAAS,WAEPu1D,GAAkB,GAClBC,EAAe4B,EAAK9L,IAAIgM,SAASV,GACnC,EACA72D,MAAO,YAAY,UAEnB,SAAC,OAAmB,OAEtB,iBAAMA,MAAsB,QAAjB,EAAEq3D,EAAKG,kBAAU,aAAf,EAAiBl/C,MAAM,KAAK,GAAG,SACzC,GAAK++C,EAAKG,YAAc,IAAyB,MAAnBH,EAAKG,WACjB,QADmC,EAClDH,EAAKG,kBAAU,aAAf,EAAiBl/C,MAAM,KAAK,GAC5B,QAIW,YAAnB++C,EAAKG,YACgB,eAAnBH,EAAKG,YACL,iBACEn5D,UAAU,0BACV2B,MAAOq3D,EAAKG,WAAWl/C,MAAM,KAAK,GAAG,SAEpC++C,EAAKG,WAAWl/C,MAAM,KAAK,KAGX,MAAnB++C,EAAKG,YAC8B,SAAjCH,EAAKG,WAAWl/C,MAAM,KAAK,IAAoC,iBAAnB++C,EAAKG,YACjD,iBACEn5D,UAAU,wBACV2B,MAAOq3D,EAAKG,WAAWl/C,MAAM,KAAK,GAAG,SAEpC++C,EAAKG,WAAWl/C,MAAM,KAAK,KAET,MAAnB++C,EAAKG,YACPH,EAAKG,WAAW/qD,SAAS,SACzB,iBACEpO,UAAU,gBACV2B,MAAOq3D,EAAKG,WAAWl/C,MAAM,KAAK,GAAG,SAEpC++C,EAAKG,WAAWl/C,MAAM,KAAK,KAER,MAAnB++C,EAAKG,YAAsBt9D,EAAIuS,SAAS,OAC3CvS,EAAIuS,SAAS,OACb,iBAAMpO,UAAU,gBAAgB2B,MAAOq3D,EAAKG,WAAW,SACpDH,EAAKG,aAENt9D,EAAIuS,SAAS,YAEf,+BACE,iBAAKuH,MAAM,cAAchU,MAAOq3D,EAAKG,WAAW,UAAC,KAC5C/2B,EAAiB42B,EAAKG,iBAGR,MAAnBH,EAAKG,aACNt9D,EAAIuS,SAAS,OAASvS,EAAIuS,SAAS,iBACpC,+BACE,iBAAKuH,MAAM,cAAchU,MAAOq3D,EAAKG,WAAW,UAC7C/2B,EAAiB42B,EAAKG,YAAY,UAGnB,QAAlBH,EAAKtmC,OAAO12B,IACI,YAAlBg9D,EAAKtmC,OAAO12B,IACM,cAAlBg9D,EAAKtmC,OAAO12B,IACM,WAAlBg9D,EAAKtmC,OAAO12B,IACM,gBAAlBg9D,EAAKtmC,OAAO12B,IACZ,iBAAM2F,MAAOq3D,EAAKG,WAAW,SAAEH,EAAKG,aACf,MAAnBH,EAAKG,YACW,aAAlBH,EAAKtmC,OAAO12B,IACZ,iBAAK2Z,MAAM,gBAAgBhU,MAAOq3D,EAAKG,WAAW,UAC/C,IACAH,EAAKG,cAIRt9D,EAAIuS,SAAS,SACX,iBAAKpO,UAAU,aAAanF,MAAO,CACjCuuD,WAAY,UACZv3B,SAAU,SACVonC,aAAc,WACdp+B,SAAU,SACTl5B,MAAOq3D,EAAKG,WAAW,UAAC,IAAEH,EAAKG,eAGhC,iBAAKn5D,UAAqC,SAA1Bg5D,EAAK9L,IAAIgM,SAAS9gC,KAAkB,uBAAyB,cAAez2B,MAAOq3D,EAAKG,WAAW,UAChH,IACAH,EAAKG,eAMxB,GAGFnB,EAAW9pD,GAAG2oD,QAAU,CAAC33D,EAC3B,CAGF,GACF,IAEA43D,EAAWkB,GAEX,IAEIsB,EAAa,OAATlqD,QAAS,IAATA,OAAS,EAATA,EAAWvR,QAAO,SAAC7C,GAAC,OAAe,IAAVA,EAAEw9D,KAAuB,IAAVx9D,EAAEw9D,EAAS,IAE3D5B,EAAS0C,EACX,GAEA77D,EAAAA,EAAAA,YAAU,WACRw5D,EAAaD,EAAiB,CAAC,GAAKuC,GACtC,GAAG,CAACtC,IAEJ,IAAMsC,EAAc,WASlBvC,EAAiBh4D,OAAOu3D,OAAM,MAAbv3D,OAAM,CAAQ,CAAC,GAAC,OARb,KAStB,EAIA,OACE,gBAAKgB,UAAU,oEAAmE,SAC1E,OAAL9C,QAAK,IAALA,GAAAA,EAAO2Q,QACN,SAAC,MAAkB,CACjBgpD,QAASA,EACTx5D,KAAMH,EAGNs8D,kBAAkB,EAElBC,oBAAoB,EAEpBC,qBAAqB,EACrBC,wBAAwB,EACxBhB,cAAc,EACdiB,qBAAqB,EACrBC,qBAAqB,EACrBC,kBAAkB,EAClBpB,qBAAqB,EACrBqB,eAAe,EACfC,oBAAkB,EAClBC,aAAc,CACZC,kBAAkB,EAClBC,UAAU,EACVC,QAAS,UACTC,kBAAiB,UAAMtD,IAEzB3yB,MAAO,CAAEi2B,kBAAiB,UAAMtD,IAEhCuD,cAAe,CAAEC,QAAS,GAAIC,QAAS,IAAMj5D,KAAM,IAEnDk5D,wBAAyB,CAGvB95C,QAAS,YAEX+5C,uBAAwB,CACtB56D,GAAI,CAAEokC,UAAW,SAEnBy2B,kBAAmB,CACjB76D,GAAI,CACF,IAAK,CACH86D,YAAa,iBACbC,aAAc,kBAEhB,qBAAsB,CACpBh+D,WAAY,iBACZ80C,SAAU,SAEZ,OAAQ,CAENipB,YAAa,iBACb7/D,OAAQ,OACR8f,QAAS,UACTggB,SAAU,WAIhBigC,kBAAmB,CACjBh7D,GAAI,CACF,OAAQ,CACNi7D,UAAW,iBACXH,YAAa,iBACbI,WAAY,WACZngD,QAAS,SAEX,qBAAsB,CACpBhe,WAAY,iBACZ80C,SAAU,aAKhB,MAGV,ECs9CA,OAj8DA,SAA+Bj3C,GAAQ,IAAD,IAElC+sB,EA8BE/sB,EA9BF+sB,KACA2tC,EA6BE16D,EA7BF06D,SACA/E,EA4BE31D,EA5BF21D,aACAC,EA2BE51D,EA3BF41D,WACAC,EA0BE71D,EA1BF61D,UACA0K,EAyBEvgE,EAzBFugE,mBACAxE,EAwBE/7D,EAxBF+7D,gBACAyE,EAuBExgE,EAvBFwgE,kBACAC,EAsBEzgE,EAtBFygE,aACAC,EAqBE1gE,EArBF0gE,gBACA72D,EAoBE7J,EApBF6J,YACA8K,EAmBE3U,EAnBF2U,aACA/R,EAkBE5C,EAlBF4C,UACAwD,EAiBEpG,EAjBFoG,aACAqD,EAgBEzJ,EAhBFyJ,aACAc,EAeEvK,EAfFuK,UACA+J,EAcEtU,EAdFsU,iBACA0hD,EAaEh2D,EAbFg2D,eACAzvC,EAYEvmB,EAZFumB,cACAwvC,EAWE/1D,EAXF+1D,iBACAG,EAUEl2D,EAVFk2D,kBACA0F,EASE57D,EATF47D,yBACAzF,EAQEn2D,EARFm2D,cACAF,EAOEj2D,EAPFi2D,iBACAwE,EAMEz6D,EANFy6D,YACArzC,EAKEpnB,EALFonB,gBACAC,EAIErnB,EAJFqnB,mBACAs5C,EAGE3gE,EAHF2gE,eACAC,EAEE5gE,EAFF4gE,aACApW,EACExqD,EADFwqD,UAGF,GAAoC/jD,EAAAA,EAAAA,UAAS,IAAG,eAA7Bo6D,GAAF,KAAe,MAChC,GAAwCp6D,EAAAA,EAAAA,UAAS,MAAK,eAA/CggC,GAAY,KAAEC,GAAe,KACpC,IAAwBjgC,EAAAA,EAAAA,WAAS,GAAM,iBAA1B4F,IAAF,MAAS,OACdiK,GAAsB,OAATk0C,QAAS,IAATA,OAAS,EAATA,EAAWj0C,MAC5B,SAACnT,GAAI,MAA4B,mBAAnB,OAAJA,QAAI,IAAJA,OAAI,EAAJA,EAAMiT,aAAgC,IAElD,IAA4C5P,EAAAA,EAAAA,WAAS,GAAK,iBAAnD8gB,GAAc,MAAEC,GAAiB,MAExC,IAA8B/gB,EAAAA,EAAAA,UAAS,IAAG,iBAAnCq6D,GAAO,MAAEC,GAAU,MAC1B,IAA8Bt6D,EAAAA,EAAAA,UAAS,IAAG,iBAAnC4jC,GAAO,MAAE22B,GAAU,MACpBx9C,GAAQ,CACZC,SAAUhW,MAASiW,QAAQ,SAAS/V,OAAO,cAC3CyE,OAAQ3E,MAASiW,QAAQ,SAASpQ,IAAI,QAAS,GAAG3F,OAAO,eAE3D,IAAoBlH,EAAAA,EAAAA,UAAS+c,IAAM,iBAA5BG,GAAE,MACT,IADgB,OACUld,EAAAA,EAAAA,UAASgH,IAAOkW,GAAGvR,QAAQA,WAAS,iBAE9D,IAFY,MAAU,OAEwB3L,EAAAA,EAAAA,UAAS,KAAG,iBAC1D,IADsB,MAAoB,OACVA,EAAAA,EAAAA,WAAS,IAAM,iBAA9Bw6D,IAAF,MAAa,OAC5B,IAAsCx6D,EAAAA,EAAAA,UAAS,IAAG,iBAElD,IAFkB,MAAgB,OAEcA,EAAAA,EAAAA,UAAS,IAAE,iBAApDy6D,GAAgB,MAAEC,GAAmB,MAC5C,IAA0C16D,EAAAA,EAAAA,UAAS,GAAE,iBAA9C26D,GAAa,MAAEC,GAAgB,MACtC,IAA4C56D,EAAAA,EAAAA,WAAS,GAAM,iBAApD66D,GAAc,MAAExL,GAAiB,MACxC,IAA8BrvD,EAAAA,EAAAA,UAAS,IAAG,iBAAnC86D,GAAO,MAAEC,GAAU,MAC1B,IAAsC/6D,EAAAA,EAAAA,WAAS,GAAM,iBAA9CqO,GAAW,MAAEC,GAAc,MAClC,IAAsBtO,EAAAA,EAAAA,UAAS,GAAE,iBAA1B0N,GAAG,MAAEC,GAAM,MAClB,IAAoC3N,EAAAA,EAAAA,UAAS,IAAG,iBAAzCk1D,GAAU,MAAE8F,GAAa,MAChC,IAAkCh7D,EAAAA,EAAAA,UAAS,IAAG,iBAAvCi7D,GAAS,MAAEC,GAAY,MAC9B,IAAwCl7D,EAAAA,EAAAA,UAAS,IAAG,iBAA7Cm7D,GAAY,MAAEC,GAAe,MACpC,IAAgCp7D,EAAAA,EAAAA,UAAS,IAAG,iBAArCq7D,GAAQ,MAAEC,GAAW,MAC5B,IAA0Bt7D,EAAAA,EAAAA,WAAS,GAAM,iBAAlCkN,GAAK,MAAE8T,GAAQ,MACtB,IAAwBhhB,EAAAA,EAAAA,UAAS,IAAG,iBAA7BiuB,GAAI,MAAEstC,GAAO,MAEdC,IAAYz5D,EAAAA,EAAAA,QAAO,CAAC,GAEtB4kB,GAAYna,SAASoa,cAAc,OACvCD,GAAUE,UAA0B,QAAjB,EAAGzjB,EAAY,UAAE,aAAd,EAAgBmqC,SAEtC,QAAkCvtC,EAAAA,EAAAA,UAASsmB,GAAK,iBAA9Bm1C,IAAF,MAAc,OAC9B,IAA0Cz7D,EAAAA,EAAAA,UAASsmB,GAAK,iBAAjDo1C,GAAa,MAwBpB,IAxBsC,OAwBI17D,EAAAA,EAAAA,WAAS,IAAM,iBAAlD2J,GAAa,MAEd7J,IAFgC,MAEtBC,EAAAA,EAAAA,UAGhBzD,EAAAA,EAAAA,YAAU,WACR,IAAIq/D,EAAO,EACPC,EAAO,EACXt1C,EAAK5oB,SAAQ,SAACquD,GACZ4P,GAAQ5P,EAAI0E,YACZmL,GAAQ7P,EAAI8P,YACd,IACAnB,GAAoBiB,GACpBf,GAAiBgB,EAMnB,GAAG,IAEH,IAAM36B,GAAmB,SAACnQ,GACxB,IAAIoQ,EAASvmC,OAAOm2B,GAEpB,GAAIoQ,EAAOj0B,SAAS,KAAM,CACxB,IACI6uD,EAAM5J,OADWhxB,GAGjB66B,GADa,MAAPD,GAAeA,EAAI/9B,QAAQ,IACrBjlB,MAAM,KAEtB,OADAijD,EAAM,GAAKA,EAAM,GAAGxlD,QAAQ,gCAAiC,KACtDwlD,EAAMj6B,KAAK,IACpB,CAEE,OAAiB,MAAVZ,EACHA,EAAO3qB,QAAQ,gCAAiC,KAAO,MACvD,EAER,EAgDMkJ,GAAQ,WAAO,IAAD,EAE8C,QAAhE,EAAAjT,SAASC,uBAAuB,8BAA8B,UAAE,OAAhE,EAAkEgR,QAClEmD,GAAmB,GACnBI,IAAS,GACTD,IAAkB,EACpB,EAEMnD,GAAO,WAAO,IAAD,EAEuD,QADxE,EAAApR,SACGC,uBAAuB,4CAA4C,UAAE,OADxE,EAEIgR,OAGN,GAEAnhB,EAAAA,EAAAA,YAAU,WACRo1D,KACAsK,KACAC,IAKF,GAAG,IAEH,IAAMvK,GAAwB,WAC5B7wD,IAAM,CACJC,OAAQ,MACRC,IAAKjB,GAAO,kDACXoB,MAAK,SAAUC,GAChB,IAAIC,EAAOD,EAASjF,KACpBg/D,GAAa95D,EACf,GACF,EAEM86D,GAAqB,SAAC5+C,EAAS/a,GAAO,IAAD,IAEzC1B,IAAM,CACJC,OAAQ,MACRC,IACEjB,GAAO,gEACkDwd,EAAO,uBAA6B,QAA7B,EAAela,EAAY,UAAE,aAAd,EAAgB+4D,YAAW,sBAAc55D,EAAC,uBAA6B,QAA7B,EAAea,EAAY,UAAE,aAAd,EAAgB0jB,eACzJ5lB,MAAK,SAAUC,GAAW,IAAD,IACtBC,EAAOD,EAASjF,KACpB8F,QAAQC,IAAI,uBACZu5D,GAAUlxD,QAAkB,SAAW,QAAV,EAAGlJ,EAAK,UAAE,aAAP,EAAS0vD,KACzC0K,GAAUlxD,QAAkB,SAAI,EAGhCtI,QAAQC,IAAIu5D,GAAUlxD,QAAgB,QAAT,EAAElJ,EAAK,UAAE,aAAP,EAAS0vD,MAExCsK,GAAgBh6D,EAClB,GACF,EAEM46D,GAAc,WAClBn7D,IAAM,CACJC,OAAQ,MACRC,IAAKjB,GAAO,qCACXoB,MAAK,SAAUC,GAChB,IAAIZ,EAAO,GACPrE,EAAOiF,EAASjF,KACpBA,EAAKwQ,OAAS,GACZxQ,EAAKwB,SAAQ,SAAC6E,GACZ,IAAI6yC,EAAU,CACZr6C,MAAOwH,EAAEqN,aACTxL,MAAO7B,EAAE1H,IAEX0F,EAAK3C,KAAKw3C,EACZ,IAEFmmB,GAAQr/D,EACV,GACF,EAEM+/D,GAAe,WACnBp7D,IAAAA,IACOf,GAAO,6BAEXoB,MAAK,SAACwrC,GACL,IAAI0vB,EAAY,GAEZlgE,EAAOwwC,EAASxwC,KACpBA,EAAKwQ,OAAS,GACZxQ,EAAKwB,SAAQ,SAAC6E,GACZ,IAAI85D,EAAa,CACfthE,MAAOwH,EAAE+5D,aACTl4D,MAAO7B,EAAE1H,IAEXuhE,EAAUx+D,KAAKy+D,EACjB,IACF/B,GAAWp+D,EACb,IACCmF,OAAM,SAACC,GAAK,OAAKU,QAAQC,IAAIX,EAAM,GACxC,EAiCMmzC,GAAa,WAAO,IAAD,UAOlBvnC,KAIH8T,IAAS,GACTD,IAAkB,IAEpB/e,QAAQC,IAAImB,EAAa,UAEzBpB,QAAQC,IAAkB,QAAf,EAACmB,EAAY,UAAE,aAAd,EAAgBygB,gBAE5B,IAAM3nB,EAAO,CAEX+sD,SAAU,GAEV2L,QAAS,GACTyF,QAAS,GACTtJ,UAAW,GACX4C,SAAU,EACV4I,cAAmCl3D,IAAV,QAAf,EAAA81D,GAAa,UAAE,aAAf,EAAiBrK,MAAoB,EAAmB,QAAlB,EAAGqK,GAAa,UAAE,aAAf,EAAiBrK,KACpEf,eAAgB/oD,IAAqB,QAAf,EAAC5D,EAAY,UAAE,aAAd,EAAgBygB,gBAAgBpY,GACvDwkD,aAAcjpD,IAAqB,QAAf,EAAC5D,EAAY,UAAE,aAAd,EAAgB0gB,cAAcrY,GACnDglD,YAAa,EACb+L,SAAU,IAERt/C,EAAK,GACTA,EAAGtf,KAAK1B,GAIRgS,EAAa,GAAD,OAAKgP,GAAG,OAAIoJ,IAE1B,EAcI4M,IAZQ5M,EAAK5Z,QAaf,UAAC,KAAW,YACV,UAAC,KAAG,YACF,SAAC,IAAM,KACP,SAAC,IAAM,CAAC1D,OAAO,kBAAkB+hC,YAAa,YAC9C,SAAC,IAAM,KACP,SAAC,IAAM,CAAC/hC,OAAO,gBAAgB+hC,YAAa,YAC5C,SAAC,IAAM,CAAC/hC,OAAO,UAAU+hC,YAAa,YACtC,SAAC,IAAM,CAAC/hC,OAAO,gBAAgB+hC,YAAa,YAC5C,SAAC,IAAM,CAAC/hC,OAAO,kBAAkB+hC,YAAa,YAC9C,SAAC,IAAM,CAAC/hC,OAAO,UAAU+hC,YAAa,YACtC,SAAC,IAAM,CAAC/hC,OAAO,YAAY+hC,YAAa,YACxC,SAAC,IAAM,CAAC/hC,OAAO,UAAU+hC,YAAa,YACtC,SAAC,IAAM,CAAC/hC,OAAO,aAAa+hC,YAAa,YACzC,SAAC,IAAM,CAAC/hC,OAAO,YAAY+hC,YAAa,YACxC,SAAC,IAAM,CAAC/hC,OAAO,kBAAkB+hC,YAAa,YAC9C,SAAC,IAAM,CAAC/hC,OAAO,aAAa+hC,YAAa,YACzC,SAAC,IAAM,CAAC/hC,OAAO,kBAAkB+hC,YAAa,YAC9C,SAAC,IAAM,CAAC/hC,OAAO,UAAU+hC,YAAa,YACtC,SAAC,IAAM,QAET,SAAC,KAAG,QAIJiF,GAAYxjC,SAASC,uBACvB,+CAEEwjC,GAAkBzjC,SAASC,uBAC7B,+CAEIyjC,GAAwB,SAACC,GAAU,IAAD,EACrB,QAAjB,EAAAtyC,OAAOwT,KAAK8+B,UAAK,OAAjB,EAAmBzyC,SAAQ,SAAC7D,GAC1B,GAAI,CAAC,GAAI,UAAMwL,EAAW,KAAK4H,SAASkjC,EAAKt2C,IAI3C,OAFAqU,EAAaoY,EAAK3I,MAAM,SACxBqD,IAAS,SAACte,GAAI,OAAMA,CAAI,GAG5B,GACF,GAEApG,EAAAA,EAAAA,YAAU,WAAO,IAAD,MAiBe,EAVzB6zC,EAAO7pB,EAAK,IACJ,QAAZ,EAAA0pB,GAAU,UAAE,OAAZ,EAActyB,iBAAiB,SAAS,WACtCwyB,GAAsBC,EACxB,IAEkB,QAAlB,EAAAF,GAAgB,UAAE,OAAlB,EAAoBvyB,iBAAiB,SAAS,WAE5CwyB,GAAsBC,EACxB,IAEyB,KAAd,QAAP,EAAA7pB,EAAK,UAAE,aAAP,EAAS2iC,aACmD,QAA9D,EAAAz8C,SAASC,uBAAuB,4BAA4B,UAAE,OAA9D,EAAgEgR,QAEhEjc,YAAW,WAAO,IAAD,EAE2C,QAD1D,EAAAgL,SACGC,uBAAuB,8BAA8B,UAAE,OAD1D,EAEIiR,iBACA,SACA,SAAUnb,GAAI,IAAD,EACc,KAAd,QAAP,EAAA+jB,EAAK,UAAE,aAAP,EAAS2iC,YACX/6C,EAAaoY,EAAK3I,MAAM,EAAG2I,EAAK5Z,SAChCqU,IAAkB,GAClBC,IAAS,GACTJ,GAAmB,GAEvB,IAEA,EAEN,GAAG,KAaP,GAAG,CAAC0F,IAEJ,IAkBMxH,GAAW,SAACxB,GAAa,IAAD,YACxBm/C,EAAY,CAEdC,WACwB,IAAtBp/C,EAAQo/C,YAA0C,MAAtBp/C,EAAQo/C,WAChC,MACAp/C,EAAQo/C,WACd3M,eAAgB/oD,IAAOsW,EAAQyyC,gBAAgB7oD,OAAO,cACtD+oD,aAAcjpD,IAAOsW,EAAQ2yC,cAAc/oD,OAAO,cAClD6pD,UAAkB,OAAPzzC,QAAO,IAAPA,OAAO,EAAPA,EAASyzC,UACpB4C,SACuC,iBAA9B6H,GAAUlxD,QAAQqpD,SACrB6H,GAAUlxD,QAAQqpD,SAASvvD,MACU,iBAA9Bo3D,GAAUlxD,QAAQqpD,SACvB6H,GAAUlxD,QAAQqpD,SAClBr2C,EAAQq2C,SAChBgJ,SACgC,IAA9BnB,GAAUlxD,QAAQiyD,SACC,QADa,EAC5BpB,GAAa,UAAE,aAAf,EAAiBrK,KACoB,iBAA9B0K,GAAUlxD,QAAQiyD,SACvBf,GAAUlxD,QAAQiyD,SAASn4D,MACF,IAAV,QAAf,EAAA+2D,GAAa,UAAE,aAAf,EAAiBrK,OACQ,KAAV,QAAf,EAAAqK,GAAa,UAAE,aAAf,EAAiBrK,OACa,GAA9B0K,GAAUlxD,QAAQiyD,UACY,IAA9Bf,GAAUlxD,QAAQiyD,SAChBf,GAAUlxD,QAAQiyD,SACH,QADW,EAC1BpB,GAAa,UAAE,aAAf,EAAiBrK,KAC3BL,YAAanzC,EAAQmzC,aA0BvB,GAvBAzuD,QAAQC,IACNqb,EAAQq2C,SACR8I,EAEAjB,GAAUlxD,QAAQqpD,SAASvvD,MAC3Bo3D,GAAUlxD,QAAQiyD,gBACXf,GAAUlxD,QAAQqpD,SACzB6H,GAAUlxD,QAAQiyD,SAASn4D,MAC3Bo3D,GAAUlxD,QAAQqpD,SAClB,aAEF3xD,QAAQC,IACe,IAArBqb,EAAQyzC,UACiB,KAAV,QAAf,EAAAoK,GAAa,UAAE,aAAf,EAAiBrK,MACoB,iBAA9B0K,GAAUlxD,QAAQiyD,SACe,GAApCf,GAAUlxD,QAAQiyD,SAASn4D,MACG,GAA9Bo3D,GAAUlxD,QAAQiyD,SACG,IAAV,QAAf,EAAApB,GAAa,UAAE,aAAf,EAAiBrK,MAEM,IAAvBxzC,EAAQmzC,YACR,eAIqB,IAArBnzC,EAAQyzC,YAE8B,iBAA9ByK,GAAUlxD,QAAQiyD,SACc,GAApCf,GAAUlxD,QAAQiyD,SAASn4D,MACG,GAA9Bo3D,GAAUlxD,QAAQiyD,WAGC,IAAvBj/C,EAAQmzC,YAOR,OALA7vC,GAAmB,QACnBpf,YAAW,WACTof,GAAmB,EACrB,GAAG,KAGG,IAAD,QACDg8C,EAAO,KAsBX,GApBAt2C,EAAKlrB,KAAI,SAACiP,EAAKsC,GAGb,IAAIkwD,EAAM,GAEVh/D,OAAOwT,KAAKorD,GAAWrhE,KAAI,SAAC0hE,GAC1BzyD,EAAIyyD,IAAUL,EAAUK,GAASD,EAAIj/D,MAAK,GAAQi/D,EAAIj/D,MAAK,EAG7D,IAI2B,GAAvBi/D,EAAI5vD,UAAS,KACf2vD,GAAO,EAGX,IAEA56D,QAAQC,IAAI26D,GACRA,EAOF,OALA1C,EAAsB,OAAP58C,QAAO,IAAPA,OAAO,EAAPA,EAAS2rC,UACxBkR,GAAa,QACb34D,YAAW,WACT24D,GAAa,EACf,GAAG,KAILt5D,IAAM,CACJC,OAAQ,OACRC,IAAKjB,GAAO,gDAEZ5D,KAAM,CACJrB,GAAkB,IAAdyiB,EAAQziB,IAA0B,MAAdyiB,EAAQziB,GAAa,GAAKyiB,EAAQziB,GAC1DsB,UAAWA,EACX4gE,WACwB,IAAtBz/C,EAAQo/C,YAA0C,MAAtBp/C,EAAQo/C,WAChC,MACAp/C,EAAQo/C,WACdtyB,SAAU,GACVllC,YAAa,GACb83D,eAAgB,IAChBC,eAAgB,GAChBC,kBAAmB,KACnBC,SAAU,KACVC,MAAO,KACPC,iBAC4B,IAA1B//C,EAAQyyC,eACJ,GACA/oD,IAAOsW,EAAQyyC,gBAAgB7oD,OAAO,cAC5Co2D,eAC4B,IAA1BhgD,EAAQyyC,eACJ,GACA/oD,IAAOsW,EAAQ2yC,cAAc/oD,OAAO,cAC1C6pD,UAAkB,OAAPzzC,QAAO,IAAPA,OAAO,EAAPA,EAASyzC,UACpB4C,SACuC,iBAA9B6H,GAAUlxD,QAAQqpD,SACrB6H,GAAUlxD,QAAQqpD,SAASvvD,MACU,iBAA9Bo3D,GAAUlxD,QAAQqpD,SACvB6H,GAAUlxD,QAAQqpD,SAClBr2C,EAAQq2C,SAGhBgJ,SACgC,IAA9BnB,GAAUlxD,QAAQiyD,SACC,QADa,EAC5BpB,GAAa,UAAE,aAAf,EAAiBrK,KACoB,iBAA9B0K,GAAUlxD,QAAQiyD,SACvBf,GAAUlxD,QAAQiyD,SAASn4D,MACF,IAAV,QAAf,EAAA+2D,GAAa,UAAE,aAAf,EAAiBrK,OACQ,KAAV,QAAf,EAAAqK,GAAa,UAAE,aAAf,EAAiBrK,OACa,GAA9B0K,GAAUlxD,QAAQiyD,UACY,IAA9Bf,GAAUlxD,QAAQiyD,SAChBf,GAAUlxD,QAAQiyD,SACH,QADW,EAC1BpB,GAAa,UAAE,aAAf,EAAiBrK,KAC3ByM,aAAc,GAGdnM,YAAazxD,EACb0xD,gBAAiB1xD,EACjB69D,WAAY,KACZC,gBAAiB,GACjBC,cAAe,GACfjN,YAAanzC,EAAQmzC,YACrBkN,aAAc,QAEfz8D,MAAK,SAACC,GACPa,QAAQC,IAAId,GACY,sBAAxBA,EAASjF,KAAK2H,OACVic,GAAc,GACdyvC,GAAe,GACnBvsD,IACA4d,GAAmB,GACnBpf,YAAW,WACTse,GAAc,GACdyvC,GAAe,EACjB,GAAG,IACL,IAEAxuC,IAAkB,GAClBC,IAAS,EAEb,GAoGA1kB,EAAAA,EAAAA,YAAU,WACRm/D,GAAaC,GACf,GAAG,CAACA,MA2DJp/D,EAAAA,EAAAA,YAAU,WACR0F,QAAQC,IAAI,wBACZD,QAAQC,IAAIu5D,GACd,GAAG,CAACL,KAEJ,IAuYMyC,GAAiB,SAAC1hE,GACtB,OACE,gBAAK,cAAY,UAAUsE,MAAOtE,EAAK6oC,SAAS,SAC7C7oC,EAAK6oC,UAGZ,EACM84B,GAAoB,SAAC3hE,GACzB,OACE,gBAAK,cAAY,UAAU2C,UAAU,WAAW2B,MAAOtE,EAAKgJ,YAAY,SACrEhJ,EAAKgJ,aAGZ,EACM44D,GAAmB,SAAC5hE,GACxB,OACE,gBAAK,cAAY,UAAU2C,UAAU,WAAW2B,MAAOtE,EAAKm+D,QAAQ,SACjEn+D,EAAKm+D,SAGZ,EACM0D,GAAqB,SAAC7hE,GAC1B,OACE,gBAAK,cAAY,UAAU2C,UAAU,WAAW2B,MAAOtE,EAAKmG,KAAK,SAC9DnG,EAAKmG,MAGZ,EAEM27D,GAAoB,SAAC9hE,GACzB,OACE,gBACE,cAAY,UACZsE,MAAOtE,EAAK+hE,YACZvkE,MAAO,CAAE2lB,UAAW,SAAU,SAE7BsH,GAAUmB,YAAc,IAAMmZ,GAAiB/kC,EAAK+hE,cAG3D,EACMC,GAAa,SAAChiE,GAClB,OACE,gBACE,cAAY,UACZsE,MAAOtE,EAAK40D,KACZp3D,MAAO,CAAE2lB,UAAW,SAAU,SAE7BsH,GAAUmB,YAAc,IAAMmZ,GAAiB/kC,EAAK40D,OAG3D,EACMqN,GAAoB,SAACjiE,GACzB,OACE,gBACE,cAAY,UACZsE,MAAOtE,EAAKquC,aACZ7wC,MAAO,CAAE2lB,UAAW,SAAU,SAE7B4hB,GAAiB/kC,EAAKquC,eAG7B,EACM6zB,GAAiB,SAACliE,GACtB,OACE,gBACE,cAAY,UACZsE,MAAOtE,EAAKmiE,YACZ3kE,MAAO,CAAE2lB,UAAW,SAAU,SAE7B4hB,GAAiB/kC,EAAKmiE,cAG7B,EACMC,GAAqB,SAACpiE,GAC1B,OACE,gBACE,cAAY,UACZ2C,UAAU,WACV2B,MAAOtE,EAAKqiE,eAAe,SAE1BriE,EAAKqiE,gBAGZ,EACMC,GAAkB,SAACtiE,GACvB,OACE,gBAAK,cAAY,UAAU2C,UAAU,WAAW2B,MAAOtE,EAAK2H,OAAO,SAChE3H,EAAK2H,QAGZ,EACM46D,GAAiB,SAACviE,GACtB,OACE,gBACE,cAAY,UACZsE,MAAOwG,IAAO9K,EAAKmuC,SAASnjC,OAAO,eAAe,SAEjDF,IAAO9K,EAAKmuC,SAASnjC,OAAO,gBAGnC,EACMw3D,GAAe,SAACxiE,GACpB,OACE,gBACE,cAAY,UACZsE,MAAOwG,IAAO9K,EAAKouC,OAAOpjC,OAAO,eAAe,SAE/CF,IAAO9K,EAAKouC,OAAOpjC,OAAO,gBAGjC,EAEMy3D,GAAkB,SAACziE,GAAU,IAAD,EAC5B40C,EAAQ,IAAIvtC,KAEZq7D,EADgB53D,IAAO8pC,GAAO5pC,OAAO,cACThL,EAAKouC,MAErC,OACE,iCAGE,SAAC,OAAU,CACTphC,MAAM,SACN1I,MAAM,eACN9G,MAAO,CAAEuQ,OAAQ,WACjBxJ,QAAS,SAAC8B,GACR03D,GAAgB,GAChBH,GAAmB,SAACp3D,GAAI,+BACnBA,GAAI,mBACN,MAAQ,QAAK,SACb,WAAaxG,EAAKs2D,aAAW,OAEhC8I,GAAYp/D,EAAK6oC,SACnB,IAEA65B,GAAuC,IAAd,QAAZ,EAAA7a,EAAU,UAAE,aAAZ,EAAct2C,UAUzB,MATF,SAAC,MAAY,CACX/T,MAAO,CAAEuQ,OAAQ,WACjBzJ,MAAM,aACNJ,KAAM,QACN8I,MAAM,SACNzI,QAAS,YA1LW,SAACvE,GAC7BoS,IAAe,GACfX,GAAOzR,EAAKrB,IACZmgE,GAAc9+D,EAChB,CAuLY2iE,CAAsB3iE,EACxB,MAKV,EAwIM4iE,GAAyB,SAACv8D,IAEjB,OAAOqhC,IAOpBm7B,GAAax8D,EAAEsc,QACjB,EAEMkgD,GAAe,SAACzhD,GAGE,IAAlBA,EAAQ3R,OACViV,GAAmB,GAEnB/f,IAAM,CACJC,OAAQ,OACRC,IAAKjB,GAAO,+CAEZ5D,KAAM,CACJrB,GAAIyiB,EAAQziB,GACZ01D,cAAejzC,EAAQ0hD,gBACvBlX,WAAYxqC,EAAQk1C,YACpBhC,iBAAkBlzC,EAAQy2C,mBAC1BtD,YAAanzC,EAAQitB,aACrBmmB,WAAYpzC,EAAQ+gD,YACpB1N,WAAYrzC,EAAQ2gD,YACpBrN,WAAYtzC,EAAQwzC,KACpBC,UAAWzzC,EAAQ2hD,WACnBjO,kBAAmB,KACnBv7B,SAAUnY,EAAQtT,UAClB7E,SAAU,GACV8rD,GAAI,GACJC,cAAe,KACfl0C,SAAUM,EAAQ+sB,QAClB1+B,OAAQ2R,EAAQgtB,MAChB6mB,SAAU,GACVC,YAAazxD,EACb0xD,gBAAiB1xD,KAElBuB,MAAK,SAACC,GACPa,QAAQC,IAAId,GACY,sBAAxBA,EAASjF,KAAK2H,OACVic,GAAc,GACdyvC,GAAe,GACnBvsD,IACA4d,GAAmB,GACnBpf,YAAW,WACTse,GAAc,GACdyvC,GAAe,EACjB,GAAG,IACL,GAEJ,EAgGA,OACE,UAAC,WAAc,WACZ5lD,IACC,iBAAK9K,UAAU,kBAAiB,UAC7B,KACD,SAAC,MAAa,IAAG,8BAGnB,GAEDmD,QAAQC,IAAI+9B,GAAc1Z,EAAM,iBACjC,iBAAKznB,UAAU,8DAA6D,WAC1E,UAAC,IAAS,CACRuF,MAAOkiB,EACPhI,eAAa,EACbD,SAAS,MACTkV,kBAAmBL,GACnB8M,aAAcA,GACdsD,YAAa,SAAC/gC,GAAC,OAAK09B,GAAgB19B,EAAErG,KAAK,EAC3CyiB,kBArrCkB,SAACpc,GAEzB,IAAI2iB,GAAS,OAAOoB,GAChBzH,EAAUtc,EAId2L,EAAagX,GAEbljB,QAAQC,IAAI4c,EAAQhkB,GAAI,aACxBikB,GAASvc,EAAEsc,SAIK,IAAdA,EAAQhkB,GAAWmH,QAAQC,IAAI,OAASD,QAAQC,IAAI,OAExD,EAsqCQ6hC,qBAlHmB,SAAC5nC,GAAU,IAAD,EAEnC,OADAq+D,GAAWr+D,EAAK0nC,UAEd,0BAEE,iBAAK/kC,UAAU,aAAY,WACzB,UAAC,IAAS,CACRuF,MAAOlI,EAAK0nC,QACZpe,iBAAiB,SACjB7G,kBAAmBmgD,GACnB91D,OAAQ,KACRqV,SAAS,MACTiH,QAAQ,KACRzmB,UAAU,iCACVgsC,YAAU,EACVpsB,WAAS,EACTtS,KAAM,EACNg4B,kBAAmB,EACnBC,6BAA8B,CAAC,EAAG,GAAI,GAAI,IAC1CC,2BAA4B,CAC1BjJ,gBAAiB,oBACjBC,mBAAoB,UACpB,WAEF,SAAC,IAAM,KACP,SAAC,IAAM,CACL5pB,MAAM,WACNzI,OAAQ9M,EAAK6oC,SACbvzB,KAAMosD,MAER,SAAC,IAAM,KACP,SAAC,IAAM,CACLnsD,MAAM,cACNzI,OAAQ9M,EAAKgJ,YACbsM,KAAMqsD,MAER,SAAC,IAAM,CACLpsD,MAAM,UACNzI,OAAQ9M,EAAKm+D,QACb7oD,KAAMssD,MAER,SAAC,IAAM,CAACrsD,MAAM,OAAOzI,OAAQ9M,EAAKmG,KAAMmP,KAAMusD,MAC9C,SAAC,IAAM,CACLtsD,MAAM,cACNzI,OAAQ9M,EAAK+hE,YACbzsD,KAAMwsD,GACN9+C,OAAQ,SAAC7hB,GAAO,OA9OE,SAACigB,GAC7B,OACE,+BACE,kBAKEpT,UAAQ,EACR3J,KAAK,OAEL6D,MAAOkZ,EAAQA,QAAQ2gD,YACvBpjE,GAAG,cACHuP,SAAU,SAAC7H,GACT+a,EAAQsI,eAAerjB,EAAEmH,OAAOtF,MAClC,KAIR,CA2NiC86D,CAAsB7hE,EAAQ,KAErD,SAAC,IAAM,CAACoU,MAAM,OAAOzI,OAAQ9M,EAAK40D,KAAMt/C,KAAM0sD,MAC9C,SAAC,IAAM,CACLzsD,MAAM,UACNzI,OAAQ9M,EAAKmuC,QACb74B,KAAMitD,GACNv/C,OAAQ,SAAC7hB,GAAO,OAhOH,SAACigB,EAASjgB,GACjC,OACE,SAAC,IAAU,CACTgF,KAAK,UACL2I,SAAUhE,IAAOsW,EAAQA,QAAQ+sB,SAAS5+B,GAC1C5Q,GAAG,UACHuJ,MAAO4C,IAAOsW,EAAQA,QAAQ+sB,SAAS5+B,GACvCN,WAAW,cACXjB,UAAQ,EACRE,SAAU,SAAC7H,GACT+a,EAAQsI,eAAe5e,IAAOzE,GAAG2E,OAAO,eAM1C,EACAuD,UAAW,SAAClI,GACVA,EAAEwH,gBACJ,GAGN,CA0MiCo1D,CAAiB9hE,EAAQ,KAEhD,SAAC,IAAM,CACLoU,MAAM,QACNzI,OAAQ9M,EAAKouC,MACb94B,KAAMktD,GACNx/C,OAAQ,SAAC7hB,GAAO,OA9ML,SAACigB,EAASjgB,GAAa,IAAD,IAE3C,OADA2E,QAAQC,IAAIqkB,EAAM0Z,GAAc1iB,EAAS,wBAEvC,SAAC,IAAU,CACTjb,KAAK,QACL2I,SAAUhE,IAAOsW,EAAQA,QAAQgtB,OAAO7+B,GACxC5Q,GAAG,QACHuJ,MAAO4C,IAAOsW,EAAQA,QAAQgtB,OAAO7+B,GACrCN,WAAW,cACXI,QAASvE,IAAsB,QAAhB,EAACg5B,GAAa,UAAE,aAAf,EAAiB+vB,gBAAgBtkD,GACjDya,QAASlf,IAAsB,QAAhB,EAACg5B,GAAa,UAAE,aAAf,EAAiBiwB,cAAcxkD,GAC/CrB,SAAU,SAAC7H,GACT+a,EAAQsI,eAAe5e,IAAOzE,GAAG2E,OAAO,cAM1C,EACAsmD,SAAS,cACT/iD,UAAW,SAAClI,GACVA,EAAEwH,gBACJ,EACAq1D,mBAAmB,EACnBC,qBAAqB,GAG3B,CAmLiCxX,CAAexqD,EAAQ,KAG9C,SAAC,IAAM,KACP,SAAC,IAAM,CACLoU,MAAM,eACNzI,OAAQ9M,EAAKquC,aACb/4B,KAAM2sD,MAER,SAAC,IAAM,CACL1sD,MAAM,cACNzI,OAAQ9M,EAAKmiE,YACb7sD,KAAM4sD,GACNl/C,OAAQ,SAAC7hB,GAAO,OA9LD,SAACigB,GAC1B,OACE,+BACE,kBAKE/c,KAAK,OACL2J,UAAQ,EAER9F,MAAOkZ,EAAQA,QAAQ+gD,YACvBxjE,GAAG,cACHuP,SAAU,SAAC7H,GACT+a,EAAQsI,eAAerjB,EAAEmH,OAAOtF,MAClC,KAIR,CA2KiC4jD,CAAmB3qD,EAAQ,KAElD,SAAC,IAAM,CACLoU,MAAM,iBACNzI,OAAQ9M,EAAKqiE,eACb/sD,KAAM8sD,GACNp/C,OAAQ,SAAC7hB,GAAO,OA/KK,SAACigB,GAChC,OACE,+BACE,oBACEziB,GAAG,iBACHgE,UAAS,eAAU8hB,IAAoBrD,EAAQ+8C,QAAU,eAAiB,IAE1Eh4D,KAAK,iBACL6H,UAAQ,EACRE,SAAU,SAAC7H,GAET+a,EAAQsI,eAAerjB,EAAEmH,OAAOtF,OAChC62D,GAAU7/D,KAAI,SAACyB,GACTA,EAAEhC,IAAM0H,EAAEmH,OAAOtF,QACnBkZ,EAAiB,QAAkB,eAAIzgB,EAAEkO,UACzCuS,EAAiB,QAAsB,mBAAI/a,EAAEmH,OAAOtF,MAGxD,GACF,EAAE,WAGF,mBAAQA,MAAM,GAAE,SAAE,sBACR,OAAT62D,SAAS,IAATA,QAAS,EAATA,GAAW7/D,KAAI,SAAC0P,EAAM6B,GAAK,OAC1B,mBAEEvI,MAAO0G,EAAKjQ,GACZmQ,SACEF,EAAKjQ,IAAMyiB,EAAQA,QAAQy2C,mBAC5B,SAEAjpD,EAAKC,WAND4B,EAOE,QAKnB,CA0IiC2yD,CAAyBjiE,EAAQ,KAExD,SAAC,IAAM,CACLoU,MAAM,SACNzI,OAAQ9M,EAAK2H,OACb2N,KAAMgtD,KAEmB,IAAd,QAAZ,EAAAza,EAAU,UAAE,aAAZ,EAAct2C,WAAmB,SAAC,IAAM,CAAC4Y,WAAS,KAAM,SAAC,IAAM,CAACA,WAAS,EAAC3sB,MAAO,CAAEuQ,OAAQ,cAAegrB,cAAe,WAC1H,SAAC,IAAM,CAACzjB,KAAMmtD,SAEhB,8BAAGvE,EAAkB,OAAJ9zC,QAAI,IAAJA,OAAI,EAAJA,EAAMsd,eAK/B,EAsBQiH,YAAU,EACVpsB,WAAS,EACTtS,KAAM,GACNg4B,kBAAmB,EACnBC,6BAA8B,CAAC,EAAG,GAAI,GAAI,IAC1CC,2BAA4B,CAC1BjJ,gBAAiB,oBACjBC,mBAAoB,UACpB,WAEF,SAAC,IAAM,CAACiyB,MAAM,SAAS/oB,SAtyCR,SAACjnB,GAAa,IAAD,EAClC,OAEiB,QAAf,EAAAA,EAAQsmB,eAAO,aAAf,EAAiBl3B,SAAU,CAG/B,KAiyCQ,SAAC,IAAM,CACL+E,MAAM,WACNzI,OAAQsd,EAAK2iC,SACbz3C,KAhqBa,SAACtV,GACtB,OACE,iBAAK2C,UAAU,WAAW,cAAY,UAAU2B,MAAOtE,EAAK+sD,SAAS,eACpD5jD,GAAdnJ,EAAK6pC,MAAqB,GAAK7pC,EAAK+sD,SAAW,IAAM/sD,EAAK6pC,MAAQ,IAAK,MAG9E,EA4pBU7mB,OAAQ,SAAC7hB,GAAO,OApgCC,SAACigB,GAG1B,OAFAtb,QAAQC,IAAIqb,EAAS,8BAGnB,+BACE,mBACEziB,GAAG,WACHwH,KAAK,WACL+H,SAAU,SAAC7H,GAAO,IAAD,IACf25D,GAAmB35D,EAAEmH,OAAOtF,MAAc,OAAPkZ,QAAO,IAAPA,GAAgB,QAAT,EAAPA,EAASA,eAAO,WAAT,EAAP,EAAkByzC,WAErDzzC,EAAQsI,eAAerjB,EAAEmH,OAAOtF,OAChC6pB,GAAK7yB,KAAI,SAACyB,GACJA,EAAEhC,IAAM0H,EAAEmH,OAAOtF,QACnBkZ,EAAiB,QAAY,SAAIzgB,EAAE+S,aACnC0N,EAAiB,QAAc,WAAI/a,EAAEmH,OAAOtF,MAEhD,IACApC,QAAQC,IACS,QADN,EACTk5D,GAAa,UAAE,aAAf,EAAiBrK,KACjBxzC,EAAQA,QAAQ2rC,SAChB3rC,EAAQA,QAAQo/C,WAChBn6D,EAAEmH,OAAOtF,MACT,wBAEJ,EAAE,SAGG,OAAJ6pB,SAAI,IAAJA,QAAI,EAAJA,GAAM7yB,KAAI,SAAC0P,EAAM6B,GAAK,OACrB,oBAEEvI,MAAO0G,EAAKjQ,GACZmQ,SAAUF,EAAKjQ,IAAMyiB,EAAQA,QAAQo/C,WAA0B,UAE9D5xD,EAAKjQ,IAAMyiB,EAAQA,QAAQo/C,YAC1B16D,QAAQC,IAAI6I,EAAKjQ,GAAI,UACtBiQ,EAAK8E,eANDjD,EAOE,OAKnB,CA09B+B4yD,CAAmBliE,EAAQ,KAElD,SAAC,IAAM,CAACiwD,MAAM,UAAU97C,KA5iBb,SAACtV,GAAU,IAAD,EAE3B8F,QAAQC,IAAI/F,EAAM,wBAClB,IAAI40C,EAAQ,IAAIvtC,KAEVq7D,EADc53D,IAAO8pC,GAAO5pC,OAAO,cACPhL,EAAK+zD,aACvC,OACE,gBAAKzmD,MAAM,SAAQ,SACA,IAAhBtN,EAAKsjE,SAA2C,IAAd,QAAZ,EAAAzb,EAAU,UAAE,aAAZ,EAAct2C,UACnC,IAEA,SAAC,OAAoB,CACnBrN,KAAM,QACN8I,MAAM,SACN1I,MAAM,eACN9G,MAAO,CACLuQ,OAAQ20D,EAAY,UAAY,UAChC1kE,QAAS0kE,GAAa,QAExBn+D,QAAS,WACP4uD,IAAkB,GAClB0L,GAAW7+D,EACb,KAMV,KAihBQ,SAAC,IAAM,CAACoxD,MAAM,UAAU97C,KA9pBZ,SAACtV,GACnB,OAAO,kBACT,KA6pBQ,SAAC,IAAM,CACLuV,MAAM,UACNzI,OAAQsd,EAAK+zC,QACb7oD,KA/pBY,SAACtV,GACrB,OACE,gBAAK,cAAY,UAAUsE,MAAOtE,EAAKm+D,QAAQ,SAC5Cn+D,EAAKm+D,SAGZ,EA0pBUn7C,OAAQ,SAAC7hB,GAAO,OAh+BA,SAACigB,GAIzB,OAFAtb,QAAQC,IAAIqb,EAAQA,QAAQyzC,UAAW,uBAGrC,+BACE,oBACEl2D,GAAG,YACHgE,UAAS,eAAU8hB,IAAoBrD,EAAQ+8C,QAAU,eAAiB,IAE1Eh4D,KAAK,UACL+H,SAAU,SAAC7H,GAAO,IAAD,IAEf25D,GAA0B,OAAP5+C,QAAO,IAAPA,GAAgB,QAAT,EAAPA,EAASA,eAAO,WAAT,EAAP,EAAkBo/C,WAAYn6D,EAAEmH,OAAOtF,OAE1DkZ,EAAQsI,eAAerjB,EAAEmH,OAAOtF,OAChCo2D,IAAY,GAQZH,GAAQj/D,KAAI,SAACyB,GACPA,EAAEhC,IAAM0H,EAAEmH,OAAOtF,QAEnBkZ,EAAiB,QAAW,QAAIzgB,EAAEy/D,aAClCh/C,EAAiB,QAAa,UAAI/a,EAAEmH,OAAOtF,MAI/C,IACApC,QAAQC,IAAmB,QAAhB,EAACk5D,GAAa,UAAE,aAAf,EAAiBrK,KAAM,wBAGrC,EAAE,WAGF,mBAAQ1sD,MAAM,GAAE,SAAE,sBACV,OAAPi2D,SAAO,IAAPA,QAAO,EAAPA,GAASj/D,KAAI,SAAC0P,EAAM6B,GAAK,OACxB,mBAEEvI,MAAO0G,EAAKjQ,GACZmQ,SAAUF,EAAKjQ,IAAMyiB,EAAQA,QAAQyzC,UAAyB,SAE7DjmD,EAAKwxD,cAJD3vD,EAKE,QAKnB,CA46B+B8yD,CAAkBpiE,EAAQ,KAEjD,SAAC,IAAM,CAACmU,KA3pBO,SAACtV,GACtB,OAAO,kBACT,EAypBsCxC,MAAO,CAAEC,MAAO,YAC9C,SAAC,IAAM,CACL8X,MAAM,WACNzI,OAAQsd,EAAKqtC,SACbniD,KA5pBa,SAACtV,GAGtB,OACE,iBACE,cAAY,UACZsE,MACmB,GAAjBtE,EAAKy3D,UAAkC,MAAjBz3D,EAAKy3D,UAEN,IAAjBz3D,EAAKy3D,SADLhtC,GAAUmB,YAAc,IAAMmZ,GAAiB,GAG5B,KAAjB/kC,EAAKy3D,SACH,GACAhtC,GAAUmB,YAAc,IAAMmZ,GAAiB/kC,EAAKy3D,UAE9Dj6D,MAAO,CAAE2lB,UAAW,SAAU,UAE7B,IACiB,GAAjBnjB,EAAKy3D,UAAkC,MAAjBz3D,EAAKy3D,UAEP,IAAjBz3D,EAAKy3D,SADLhtC,GAAUmB,YAAc,IAAMmZ,GAAiB,GAG5B,KAAjB/kC,EAAKy3D,SACH,GACAhtC,GAAUmB,YAAc,IAAMmZ,GAAiB/kC,EAAKy3D,YAGlE,EAkoBUz0C,OAAQ,SAAC7hB,GAAO,OA76BC,SAACigB,GAAa,IAAD,MAWtC,OAVAtb,QAAQC,IACoE,QADjE,EACTuK,SAASkzD,kBAAkB,YAA+B,QAArB,EAAGpiD,EAAQA,QAAQziB,UAAE,aAAlB,EAAoBoM,aAAY,UAAE,aAA1E,EACI7C,MACJ,UAEFpC,QAAQC,IACNqb,EAAQA,QAAQq2C,SAChB6H,GAAUlxD,QAAQqpD,SAClB,gBAGA,+BACE,kBAMEtxD,KAAM,YAA+B,QAArB,EAAGib,EAAQA,QAAQziB,UAAE,aAAlB,EAAoBoM,YACvC7E,IAAK,SAACiI,GAIqB,IAAD,IAHxBrI,QAAQC,IAAI,qBACZD,QAAQC,IAAIoI,GACZrI,QAAQC,IAAIqb,EAAQA,QAAQq2C,UACV,OAAX,OAAHtpD,QAAG,IAAHA,OAAG,EAAHA,EAAKjG,SAEPiG,EAAIjG,WAGaiB,IAAX,QAFJ,EAAAmH,SAASkzD,kBACP,YAA+B,QAArB,EAAGpiD,EAAQA,QAAQziB,UAAE,aAAlB,EAAoBoM,aACjC,UAAE,aAFJ,EAEM7C,OACFkZ,EAAQA,QAAQq2C,SACc,GAA9B6H,GAAUlxD,QAAQqpD,UAEY,GAA5Br2C,EAAQA,QAAQq2C,UACY,MAA5Br2C,EAAQA,QAAQq2C,SAFhB,EAIEr2C,EAAQA,QAAQq2C,SAC1B3xD,QAAQC,IAAI,sBACZD,QAAQC,IAAIoI,EAAIjG,OAChBo3D,GAAUlxD,QAAQD,EAAIxP,IAAMwP,EAC5BrI,QAAQC,IAAIu5D,GAAUlxD,UAExBtI,QAAQC,IAAO,OAAHoI,QAAG,IAAHA,OAAG,EAAHA,EAAKjG,MACnB,EACA7D,KAAK,OAGL1F,GAAG,WACHuP,SAAU,SAAC7H,GAETi5D,GAAUlxD,QAAkB,SAAI/H,EAAEmH,OAAOtF,KAC3C,KAIR,CAs3B+Bu7D,CAAmBtiE,EAAQ,KAElD,SAAC,IAAM,CACLoU,MAAM,WACNzI,OAAQsd,EAAKi2C,SACb/qD,KAtoBa,SAACtV,GAEtB,OACE,gBACE,cAAY,UACZsE,MACmB,MAAjBtE,EAAKqgE,SACD,GACiB,GAAjBrgE,EAAKqgE,SACH51C,GAAUmB,YAAc,IAAMmZ,GAAiB,GAC/Cta,GAAUmB,YAAc,IAAMmZ,GAAiB/kC,EAAKqgE,UAE5D7iE,MAAO,CAAE2lB,UAAW,SAAU,SAEZ,MAAjBnjB,EAAKqgE,SACF,EACiB,GAAjBrgE,EAAKqgE,SACH51C,GAAUmB,YAAc,IAAMmZ,GAAiB,GAC/Cta,GAAUmB,YAAc,IAAMmZ,GAAiB/kC,EAAKqgE,WAGhE,EAknBUr9C,OAAQ,SAAC7hB,GAAO,OAr3BC,SAACigB,EAASwzC,GAAU,IAAD,EAG5C,OADA9uD,QAAQ49D,KAAKtiD,EAAS,aAEpB,+BACE,kBACEze,UAAS,gBAAW8hB,IAAoBrD,EAAQA,QAAQi/C,SAAW,cAAgB,IAEnFh8D,KAAK,OAWL6B,IAAK,SAACiI,GAIqB,IAAD,IAHxBrI,QAAQC,IAAI,qBACZD,QAAQC,IAAIoI,GACZrI,QAAQC,IAAIqb,EAAQA,QAAQi/C,UACV,OAAX,OAAHlyD,QAAG,IAAHA,OAAG,EAAHA,EAAKjG,SACPiG,EAAIjG,MAAQ,CAAC,GAAI,UAAMiB,GAAW4H,SAAwB,QAAhB,EAACkuD,GAAa,UAAE,aAAf,EAAiBrK,MACxDxzC,EAAQA,QAAQi/C,SAGH,QADf,EACApB,GAAa,UAAE,aAAf,EAAiBrK,KACnB9uD,QAAQC,IAAI,sBACZD,QAAQC,IAAIoI,EAAIjG,OAChBo3D,GAAUlxD,QAAQD,EAAIxP,IAAMwP,EAC5BrI,QAAQC,IAAIu5D,GAAUlxD,UAExBtI,QAAQC,IAAO,OAAHoI,QAAG,IAAHA,OAAG,EAAHA,EAAKjG,MACnB,EACAvJ,GAAG,WACHwH,KAAM,YAA+B,QAArB,EAAGib,EAAQA,QAAQziB,UAAE,aAAlB,EAAoBoM,YACvCmD,SAAU,SAAC7H,GAETi5D,GAAUlxD,QAAkB,SAAI/H,EAAEmH,OAAOtF,MACzCpC,QAAQC,IAAIM,EAAEmH,OAAOtF,MAAO,0BAC9B,KAIR,CAu0B+By7D,CAAmBxiE,EAASipB,EAAKi2C,SAAS,KAEjE,SAAC,IAAM,CACL9qD,MAAM,iBACNzI,OAAQsd,EAAKypC,eACbv+C,KArtBmB,SAACtV,GAC5B,OACE,gBACE,cAAY,UACZsE,MAAOwG,IAAO9K,EAAK6zD,gBAAgB7oD,OAAO,eAAe,SAEjC,IAAvBhL,EAAK6zD,gBAA+C,MAAvB7zD,EAAK6zD,eAC/B,GACA/oD,IAAO9K,EAAK6zD,gBAAgB7oD,OAAO,gBAG7C,EA2sBUgY,OAAQ,SAAC7hB,GAAO,OAzzBO,SAACigB,EAASjgB,GAAa,IAAD,QAOrD,OALA2E,QAAQC,IACNmB,EACAka,EAAQA,QAAQyyC,eAChB,0BAGkC,IAAlCzyC,EAAQA,QAAQyyC,iBACd,SAAC,IAAU,CACT1tD,KAAK,iBACL2I,SACoC,MAAlCsS,EAAQA,QAAQyyC,eACZ/oD,IAAqB,QAAf,EAAC5D,EAAY,UAAE,aAAd,EAAgBygB,gBAAgBpY,GACvCzE,IAAOsW,EAAQA,QAAQyyC,gBAAgBtkD,GAE7C5Q,GAAG,iBACHuJ,MACoC,MAAlCkZ,EAAQA,QAAQyyC,eACZ/oD,IAAqB,QAAf,EAAC5D,EAAY,UAAE,aAAd,EAAgBygB,gBAAgBpY,GACvCzE,IAAOsW,EAAQA,QAAQyyC,gBAAgBtkD,GAE7CN,WAAW,cACXI,QACoC,MAAlC+R,EAAQA,QAAQyyC,eACZ/oD,IAAqB,QAAf,EAAC5D,EAAY,UAAE,aAAd,EAAgBygB,gBAAgBpY,GACvCzE,IAAOsW,EAAQA,QAAQyyC,gBAAgBtkD,GAE7Cya,QACkC,MAAhC5I,EAAQA,QAAQwG,aACZ9c,IAAqB,QAAf,EAAC5D,EAAY,UAAE,aAAd,EAAgB0gB,cAAcrY,GACrCzE,IAAOsW,EAAQA,QAAQ2yC,cAAcxkD,GAE3CrB,SAAU,SAAC7H,GACT+a,EAAQsI,eAAe5e,IAAOzE,GAAG2E,OAAO,eAM1C,EACAuD,UAAW,SAAClI,GACVA,EAAEwH,gBACJ,GAIR,CA0wB+B+1D,CAAyBziE,EAAQ,KAExD,SAAC,IAAM,CACLoU,MAAM,eACNzI,OAAQsd,EAAK2pC,aACbz+C,KA/sBiB,SAACtV,GAC1B,OACE,gBACE,cAAY,UACZsE,MAAOwG,IAAO9K,EAAK+zD,cAAc/oD,OAAO,eAAe,SAEjC,IAArBhL,EAAK+zD,cAA2C,MAArB/zD,EAAK+zD,aAC7B,GACAjpD,IAAO9K,EAAK+zD,cAAc/oD,OAAO,gBAG3C,EAqsBUgY,OAAQ,SAAC7hB,GAAO,OA9wBK,SAACigB,EAASjgB,GAAa,IAAD,QAOnD,OALA2E,QAAQC,IACNqb,EAAQA,QAAQ2yC,aAChB3yC,EAAQA,QAAQwG,aAChB,0BAGgC,IAAhCxG,EAAQA,QAAQ2yC,eACd,SAAC,IAAU,CACT5tD,KAAK,eACL2I,SACkC,MAAhCsS,EAAQA,QAAQ2yC,aACZjpD,IAAqB,QAAf,EAAC5D,EAAY,UAAE,aAAd,EAAgB0gB,cAAcrY,GACrCzE,IAAOsW,EAAQA,QAAQ2yC,cAAcxkD,GAE3C5Q,GAAG,eACHuJ,MACkC,MAAhCkZ,EAAQA,QAAQ2yC,aACZjpD,IAAqB,QAAf,EAAC5D,EAAY,UAAE,aAAd,EAAgB0gB,cAAcrY,GACrCzE,IAAOsW,EAAQA,QAAQ2yC,cAAcxkD,GAE3CN,WAAW,cACXI,QACoC,MAAlC+R,EAAQA,QAAQyyC,eACZ/oD,IAAqB,QAAf,EAAC5D,EAAY,UAAE,aAAd,EAAgBygB,gBAAgBpY,GACvCzE,IAAOsW,EAAQA,QAAQyyC,gBAAgBtkD,GAE7Cya,QACkC,MAAhC5I,EAAQA,QAAQ2yC,aACZjpD,IAAqB,QAAf,EAAC5D,EAAY,UAAE,aAAd,EAAgB0gB,cAAcrY,GACrCzE,IAAOsW,EAAQA,QAAQ2yC,cAAcxkD,GAE3CrB,SAAU,SAAC7H,GACTP,QAAQC,IAAI+E,IAAOzE,GAAG2E,OAAO,gBAC7BoW,EAAQsI,eAAe5e,IAAOzE,GAAG2E,OAAO,eAM1C,EACAuD,UAAW,SAAClI,GACVA,EAAEwH,gBACJ,GAIR,CA8tB+Bg2D,CAAuB1iE,EAAQ,KAEtD,SAAC,IAAM,CACLoU,MAAM,cACNzI,OAAQsd,EAAKmqC,YACbj/C,KAloBgB,SAACtV,GACzB,OACE,gBACE,cAAY,UACZsE,MAAOygC,GAAiB/kC,EAAKu0D,aAC7B/2D,MAAO,CAAE2lB,UAAW,SACtB,SAEuB,IAApBnjB,EAAKu0D,aACgB,GAApBv0D,EAAKu0D,aACe,MAApBv0D,EAAKu0D,YACHxvB,GAAiB,GACjBA,GAAiB/kC,EAAKu0D,cAGhC,EAonBUvxC,OAAQ,SAAC7hB,GAAO,OAv1BI,SAACigB,GAE7B,OACE,+BACE,kBACEze,UAAS,gBAAW8hB,IAAoBrD,EAAQA,QAAQmzC,YAAc,cAAgB,IAEtFlwD,KAAK,OAEL6D,MAAOkZ,EAAQA,QAAQmzC,YACvB51D,GAAG,cACHuP,SAAU,SAAC7H,GACT+a,EAAQsI,eAAerjB,EAAEmH,OAAOtF,MAClC,KAIR,CAs0B+B47D,CAAsB3iE,EAAQ,KAErD,SAAC,IAAM,CACLoU,MAAM,WACNzI,OAAQsd,EAAKu1C,aACbrqD,KAvnBa,SAACtV,GAGtB,OACE,gBACE,cAAY,UACZsE,MACuB,GAArBtE,EAAK2/D,cAA0C,MAArB3/D,EAAK2/D,aAC3B56B,GAAiB,GAGnBA,GAAiB/kC,EAAK2/D,cAE1BniE,MAAO,CAAE2lB,UAAW,SACtB,SAEwB,GAArBnjB,EAAK2/D,cAA0C,MAArB3/D,EAAK2/D,aAC5B56B,GAAiB,GAGnBA,GAAiB/kC,EAAK2/D,eAG9B,KAkmBQ,SAAC,IAAM,CAACrqD,KAjmBY,SAACtV,GAC3B,OAAO,kBACT,KAgmBQ,SAAC,IAAM,CAACsV,KA/lBQ,SAACtV,GACvB,OAAO,kBACT,KA8lBQ,SAAC,IAAM,CAACsV,KA7lBK,SAACtV,GACpB,OAAO,kBACT,IA4lBmC,IAAd,QAAZ,EAAA6nD,EAAU,UAAE,aAAZ,EAAct2C,WACb,SAAC,IAAM,CAAC4Y,WAAS,KAEjB,SAAC,IAAM,CAACA,WAAS,EAAC3sB,MAAO,CAAEu7B,cAAe,OAAQhrB,OAAQ,kBAI5D,SAAC,IAAM,CAACuH,KAxjBK,SAACtV,GAAU,IAAD,EAC7B,MAAsB,KAAfA,EAAK26B,OACV,IAEA,iCAGE,SAAC,OAAU,CACT3tB,MAAM,SACNxP,MAAO,CAAEuQ,OAAQ,WACjBzJ,MAAM,eACNC,QAAS,SAAC8B,GACR03D,GAAgB,GAChBH,GAAmB,SAACp3D,GAAI,+BACnBA,GAAI,mBACN,MAAQ,SAAM,SACd,WAAaxG,EAAKrB,IAAE,OAEvBygE,GAAYp/D,EAAK+sD,SACnB,IAGyB,IAAd,QAAZ,EAAAlF,EAAU,UAAE,aAAZ,EAAct2C,WACb,SAAC,MAAY,CACXrN,KAAM,QACNI,MAAM,SACN9G,MAAO,CAAEuQ,OAAQ,WACjBf,MAAM,SACNzI,QAAS,YAxCO,SAACvE,GAEzBoS,IAAe,GACfX,GAAOzR,EAAKrB,IACZmgE,GAAc9+D,EAChB,CAqCY+jE,CAAkB/jE,EACpB,IAGF,KAIR,QAohBM,iBAAK2C,UAAU,0BAAyB,WACtC,iBAAKA,UAAU,MAAK,UACO,IAAd,OAAVgR,SAAU,IAAVA,QAAU,EAAVA,GAAYpC,WACX,iBAAK5O,UAAU,8BAA6B,WAC1C,oBACEA,UAAU,sBACV,cAAY,UACZqL,SAAUgD,GACV1M,MAAM,cACNC,QAAS,WACPg0C,IACF,EACAj1B,QAAQ,YAAW,WAEnB,SAAC,MAAY,CAACpf,KAAK,UAAU,WAG/B,oBACEvB,UAAU,sBACVqL,SAAU4W,GACVrgB,QAAS,WACPmd,IACF,EACA,cAAY,UACZpd,MAAM,WAAU,WAEhB,SAAC,MAAO,CAACJ,KAAM,WACf,iBAAMvB,UAAU,OAAM,SAAC,eAGzB,oBACEA,UAAU,sBACVqL,SAAU4W,GACVrgB,QAAS,WACPmF,IAAQ,GACR6Z,IACF,EACA,cAAY,UACZjf,MAAM,qBACNgf,QAAQ,YAAW,WAEnB,SAAC,MAAO,CAACpf,KAAM,WACf,iBAAMvB,UAAU,OAAM,SAAC,kBAI3B,iBAAKA,UAAU,8BAA6B,WAC1C,oBACEA,UAAU,sBACV,cAAY,UACZqL,UAAQ,EACR1J,MAAM,cACNC,QAAS,WACPg0C,IACF,EACAj1B,QAAQ,YAAW,WAEnB,SAAC,MAAY,CAACpf,KAAK,UAAU,WAG/B,oBACEvB,UAAU,sBACVqL,UAAQ,EACRzJ,QAAS,WACPmd,IACF,EACA,cAAY,UACZpd,MAAM,WAAU,WAEhB,SAAC,MAAO,CAACJ,KAAM,WACf,iBAAMvB,UAAU,OAAM,SAAC,eAGzB,oBACEA,UAAU,sBACVqL,UAAQ,EACRzJ,QAAS,WACPmF,IAAQ,GACR6Z,IACF,EACA,cAAY,UACZjf,MAAM,qBACNgf,QAAQ,YAAW,WAEnB,SAAC,MAAO,CAACpf,KAAM,WACf,iBAAMvB,UAAU,OAAM,SAAC,kBAI7B,2BAAK,qBAEH,4BAASoiC,GAAiBw5B,aAG9B,iBAAK57D,UAAU,MAAK,UAAC,wBACG,KACtB,4BAASoiC,GAAiB05B,eAK/BE,IACC,SAAC,GAAoB,CACnB7G,YAAaA,EACb5E,UAAWA,EACXF,aAAcA,EACdC,WAAYA,EACZjzD,KAAM4+D,GACN3+D,UAAWA,EACX83D,SAAUA,EACV5E,kBAAmBA,GACnB1vD,aAAcA,EACdqD,aAAcA,EACdusD,eAAgBA,EAChBzvC,cAAeA,EACfwvC,iBAAkBA,EAClBG,kBAAmBA,EACnB9uC,gBAAiBA,EACjBC,mBAAoBA,EACpB8uC,cAAeA,EACfF,iBAAkBA,EAClBzL,UAAWA,IAGb,GAED11C,IACC,SAAC,GACC,CACArL,aAAcA,EACdc,UAAWA,EACXqxD,yBAA0BA,EAC1BtnD,iBAAkBA,EAClBF,OAAQA,GACRD,IAAKA,GACLW,YAAaA,GACbC,eAAgBA,GAChB4mD,WAAYA,KAGd,GAID8E,IACC,iBAAKn7D,UAAU,OAAM,WACnB,iBAAKA,UAAU,4BAA2B,WACxC,iBAAKA,UAAU,cAAa,WAC1B,kBAAOnF,MAAO,CAAE82C,SAAU,eAAgB,SAChB,OAAvB8kB,EAAgB2C,IACb70D,EAAY,GAAG+G,YACfkxD,MAGN,oBACEh5D,KAAK,MACLxH,GAAG,MACHuJ,MAAOkxD,EAAgB4K,IACvB91D,SAAU,SAAC7H,GAAC,OACVu3D,GAAmB,SAACp3D,GAAI,yBACnBA,GAAI,cACN,MAAQH,EAAEmH,OAAOtF,OAAK,GACtB,EACJ,WAED,mBAAQA,MAAM,cAAa,SAAC,oBAC5B,mBAAQA,MAAM,WAAU,SAAC,kBACzB,mBAAQA,MAAM,YAAW,SAAC,gBAC1B,mBAAQA,MAAM,cAAa,SAAC,kBAC5B,mBAAQA,MAAM,gBAAe,SAAC,oBAC9B,mBAAQA,MAAM,aAAY,SAAC,kCAE7B,oBACE/B,KAAK,YACLxH,GAAG,YACHuJ,MAAOkxD,EAAgB6K,UACvB/1D,SAAU,SAAC7H,GAAC,OACVu3D,GAAmB,SAACp3D,GAAI,yBACnBA,GAAI,cACN,YAAcH,EAAEmH,OAAOtF,OAAK,GAC5B,EACJ,WAED,mBAAQA,MAAM,MAAK,SAAC,eACpB,mBAAQA,MAAM,WAAU,SAAC,cACzB,mBAAQA,MAAM,cAAa,SAAC,2BAC5B,mBAAQA,MAAM,cAAa,SAAC,yBAC5B,mBAAQA,MAAM,aAAY,SAAC,0BAC3B,mBAAQA,MAAM,iBAAgB,SAAC,8BAC/B,mBAAQA,MAAM,iBAAgB,SAAC,+BAG/B,mBAAQA,MAAM,eAAc,SAAC,mCAGjC,iBAAKvF,UAAU,eAAc,WAC3B,2BAAO,WACP,oBAAQhE,GAAG,MAAK,WACd,mBAAQuJ,MAAM,KAAI,SAAC,YACnB,mBAAQA,MAAM,KAAI,SAAC,YACnB,mBAAQA,MAAM,KAAI,SAAC,OACnB,mBAAQA,MAAM,KAAI,SAAC,OACnB,mBAAQA,MAAM,KAAI,SAAC,eAErB,kBACEvJ,GAAG,eACHwH,KAAK,eACLuI,aAAc,EACdR,SAAU,SAAC7H,GAAC,OACVu3D,GAAmB,SAACp3D,GAAI,yBACnBA,GAAI,cACN,eAAiBH,EAAEmH,OAAOtF,OAAK,GAC/B,IAEL,KAEF,kBAAMvF,UAAU,wBAAuB,WACrC,SAAC,MAAmB,CAClBoL,OAAO,UACP7J,KAAM,MACNK,QA9oDQ,WACtB,IAAM2/D,EAAcp5D,MACjBoX,SAAS,EAAG,SACZgkC,MAAM,SACNl7C,OAAO,cACV4yD,GAAmB,SAACuG,GAAW,yBAC1BA,GAAW,IACdC,OAAQF,GAAW,IAGHp5D,IAAOkW,GAAGvR,QACzByS,SAAS,QAAS,GAClBlX,OAAO,aACZ,KAmoDc,0BAAOF,IAAOsuD,EAAgBgL,QAAQp5D,OAAO,eAC7C,SAAC,MAAoB,CACnB+C,OAAO,UACP7J,KAAM,MACNK,QApoDW,WACzB,IAAM2/D,EAAcp5D,IAAOsuD,EAAgBgL,QACxCzzD,IAAI,EAAG,SACPu1C,MAAM,SACNl7C,OAAO,cAEQF,IAAOkW,GAAGvR,QAAQkB,IAAI,QAAS,GAAG3F,OAAO,cAE3D4yD,GAAmB,SAACuG,GAAW,yBAC1BA,GAAW,IACdC,OAAQF,GAAW,GAGvB,QA0nDY,SAAC,MAA2B,CAC1BhgE,KAAM,QACNK,QAAS,WACPw5D,GAAgB,EAClB,WAIN,SAAC,GAA4B,CAC3B/9D,KAAM69D,EACNzE,gBAAiBA,SAM7B,EC5+CA,OApeA,SAAsB/7D,GAAQ,IAAD,MACrBuG,EAAUC,EAAAA,EAAAA,QACR5D,EAAyB5C,EAAzB4C,UAAW4nD,EAAcxqD,EAAdwqD,UAIbh0C,GAHag0C,EAAUj0C,MAC3B,SAACnT,GAAI,MAA2B,kBAAtBA,EAAKiT,YAAgC,KAEzB7N,EAAAA,EAAAA,QAAO,OAE/B,GAAsC/B,EAAAA,EAAAA,UAAS,IAAG,eAA3CoD,EAAW,KAAE+L,EAAc,KAClC,GAAkCnP,EAAAA,EAAAA,UAAS,IAAG,eAAvCugE,EAAS,KAAEC,EAAY,KAC9B,GAAwBxgE,EAAAA,EAAAA,UAAS,IAAG,eAA7BrD,EAAI,KACX,GADoB,MACsBqD,EAAAA,EAAAA,UAAS,KAAG,eAA/CygE,EAAa,KAAEC,EAAgB,KACtC,GAAgC1gE,EAAAA,EAAAA,UAAS,UAAS,eAA3CitC,EAAQ,KAAE0zB,EAAW,KAC5B,GAAgD3gE,EAAAA,EAAAA,UAAS,IAAG,eAArDs0D,EAAgB,KAAEC,EAAmB,KAC5C,GAAgCv0D,EAAAA,EAAAA,UAAS,QAAO,eAAzC+kC,EAAQ,KAAE6G,EAAW,KAC5B,GAAkC5rC,EAAAA,EAAAA,UAAS,IAAG,eAAvCiO,EAAS,KAAEC,EAAY,KACxBvO,EAAeC,aAAaC,QAAQ,SAC1C,GAAkDG,EAAAA,EAAAA,UAAS,IAAG,gBAAvD+5D,GAAiB,MAAE6G,GAAoB,MAC9C,IAAwC5gE,EAAAA,EAAAA,WAAS,GAAM,iBAAhDg6D,GAAY,MAAEC,GAAe,MACpC,IAAgCj6D,EAAAA,EAAAA,UAAS,IAAG,iBAArCygB,GAAQ,MAAEC,GAAW,MAC5B,IAA4B1gB,EAAAA,EAAAA,UAAS,IAAG,iBAAjC6D,GAAM,MAAEC,GAAS,MACxB,IAA0C9D,EAAAA,EAAAA,WAAS,GAAM,iBAAlD4N,GAAa,MAAEC,GAAgB,MACtC,IAA0D7N,EAAAA,EAAAA,WAAS,GAAM,iBAAlE6gE,GAAqB,MAAE1L,GAAwB,MACtD,IAAkCn1D,EAAAA,EAAAA,WAAS,GAAM,iBAA1C+N,GAAS,MAAE+yD,GAAY,MAC9B,IAAgC9gE,EAAAA,EAAAA,WAAS,GAAM,iBAAxCi0D,GAAQ,MAAED,GAAW,MAC5B,IAAgCh0D,EAAAA,EAAAA,WAAS,GAAM,iBAAxCkD,GAAM,MAAE4c,GAAa,MAC5B,IAAkC9f,EAAAA,EAAAA,WAAS,GAAM,iBAA1C8N,GAAO,MAAEyhD,GAAc,MAC9B,IAAsCvvD,EAAAA,EAAAA,WAAS,GAAM,iBAA9C+gE,GAAS,MAAEzR,GAAgB,MAClC,IAAwCtvD,EAAAA,EAAAA,WAAS,GAAM,iBAAhDghE,GAAU,MAAEvR,GAAiB,MACpC,IAAkCzvD,EAAAA,EAAAA,WAAS,GAAM,iBAA1CovD,GAAS,MAAEF,GAAY,MAC9B,IAA8BlvD,EAAAA,EAAAA,UAAS,CACrC86D,QAAS,GACT7R,SAAU,GACVjsC,SAAU,GACVrR,OAAQ,KACR,iBALKs1D,GAAO,MAAE9R,GAAU,MAM1B,IAAwCnvD,EAAAA,EAAAA,WAAS,GAAM,iBAAhD00D,GAAY,MAAEC,GAAe,MACpC,IAA8C30D,EAAAA,EAAAA,WAAS,GAAM,iBAAtD2gB,GAAe,MAAEC,GAAkB,MAC1C,IAA0C5gB,EAAAA,EAAAA,WAAS,GAAM,iBAAlD0vD,GAAa,MAAEF,GAAgB,MACtC,IAAkCxvD,EAAAA,EAAAA,WAAS,GAAM,iBAA1CkhE,GAAS,MAAE/G,GAAY,MAC9B,IAAsCn6D,EAAAA,EAAAA,UAAS,IAAG,iBAA3CmhE,GAAW,MAAEjH,GAAc,MAClC,IAA8Cl6D,EAAAA,EAAAA,UAAS,CACrDi4D,IAAK,MACLiI,IAAK,cACL38C,SAAUpnB,EAAU8K,WACpBq5D,OAAQt5D,IAAO,IAAIzD,MAAQ2D,OAAO,cAClCi5D,UAAW,MACXiB,UAAW,KACXC,UAAW,KACXC,SAAU,KACVC,OAAQ,KACRC,MAAO,KACPC,aAAc,GACd57C,OAAQlmB,EAAasH,aACrB,iBAbKquD,GAAe,MAAEwE,GAAkB,MAkB1C,IAA4B95D,EAAAA,EAAAA,UAAS,IAAG,iBAAjCyP,GAAM,MAAEC,GAAS,OAqBxBpT,EAAAA,EAAAA,YAAU,WAdRuE,IAAM,CACJC,OAAQ,MACRC,IAAKjB,EAAO,iDAA6CH,KACxDuB,MAAK,SAACE,GACIA,EAAKlF,KAEXwB,SAAQ,SAACf,GAXA,aAYRA,EAAKiT,cACPF,GAAU,CAAC/S,GAEf,GACF,GAKF,GAAG,KAEHL,EAAAA,EAAAA,YAAU,WAERolE,IAGF,GAAG,CAACpM,MAEJh5D,EAAAA,EAAAA,YAAU,WACRqlE,KACAC,KACA5+D,IACF,GAAG,CAACiqC,EAAUlI,IAEd,IAsBM88B,GAAqB,SAACt/D,GAC1B1B,IAAM,CACJC,OAAQ,MACRC,IACEjB,EAAO,yDAC2C3D,EAAS,qBAAaoG,KACzErB,MAAK,SAAUC,GAChB,IAAI+G,EAAM/G,EAASjF,KACnBq4D,EAAoBrsD,EACtB,GACF,GACA5L,EAAAA,EAAAA,YAAU,WAAO,GAAG,CAACg4D,EAAkB33D,KAEvCL,EAAAA,EAAAA,YAAU,WAlCRuE,IAAM,CACJC,OAAQ,MACRC,IACEjB,EAAO,4DAC8C3D,KAEtD+E,MAAK,SAAUC,GACd,IAAIC,EAAOD,EAASjF,KAEpBiT,EAAe/N,EACjB,IACCC,OAAM,SAAUF,GACfa,QAAQC,IAAId,EACd,GAwBJ,GAAG,IAEH,IAAMwgE,GAAgB,WACpB9gE,IAAM,CACJC,OAAQ,MACRC,IACEjB,EAAO,oDACsC3D,EAAS,qBAAa8wC,KAEpE/rC,MAAK,SAAUC,GACd,IAAIC,EAAOD,EAASjF,KAEpBskE,EAAap/D,EACf,IACCC,OAAM,SAAUF,GACfa,QAAQC,IAAId,EACd,GACJ,EAEMygE,GAAmB,WACvB/gE,IAAM,CACJC,OAAQ,MACRC,IACEjB,EAAO,uDACyC3D,EAAS,qBAAa8wC,KAEvE/rC,MAAK,SAAUC,GACd,IAAIC,EAAOD,EAASjF,KAEpBwkE,EAAiBt/D,EACnB,IACCC,OAAM,SAAUF,GACfa,QAAQC,IAAId,EACd,GACJ,EAOM6B,GAAe,WACnB2xD,IAAgB,GAChBmM,IAAa,GAEbjgE,IAAM,CACJC,OAAQ,MACRC,IACEjB,EAAO,yDAC2C3D,EAAS,qBAAa4oC,EAAQ,qBAAakI,KAE9F/rC,MAAK,SAAUC,GACd,IAAIC,EAAOD,EAASjF,KAmBpBgS,EAAa9M,GACbsf,GAAYtf,GACZuzD,IAAgB,GAChBmM,IAAa,EACf,IACCz/D,OAAM,SAAUF,GACfa,QAAQC,IAAId,EACd,GACJ,EAEMugE,GAAsB,SAACn/D,GAC3Bq+D,GAAqB,IACrBE,IAAa,GAEbjgE,IAAM,CACJC,OAAQ,OACRC,IAAKjB,EAAO,uCACZ5D,KAAMo5D,KAELp0D,MAAK,SAAUC,GACd,IAAIC,EAAOD,EAASjF,KAEpB0kE,GAAqBx/D,GAErB0/D,IAAa,EACf,IACCz/D,OAAM,SAAUF,GACfa,QAAQC,IAAId,EACd,GACJ,EAQA,OACE,0BACE,iBAAKtC,UAAU,YAAW,WACxB,iBAAKA,UAAU,YAAW,UACvBuE,EAAYhI,KAAI,SAACiO,GAAI,OACpB,gBAAKxK,UAAU,WAAU,UACvB,0BACGwK,EAAKc,YAAY,KAAGd,EAAKkX,YAAY,QAEpC,KAER,gBAAK1hB,UAAU,WAAU,UACvB,wBAAI,qBAEN,gBAAKA,UAAU,mBAEjB,SAACoT,EAAA,EAAiB,CAChBxC,OAAQA,GACRyC,kBAzMgB,CAAC,WAAY,OAAQ,WAAY,mBA4MlDk9C,KACC,iBAAKvwD,UAAU,kBAAiB,WAC9B,SAAC,MAAO,IAAG,mBACEoiE,GAAQnG,QAAO,uCAC1BmG,GAAQhY,SAAQ,2BACCjiD,IAAOi6D,GAAQjkD,UAAU9V,OAC1C,eACD,eAAOF,IAAOi6D,GAAQt1D,QAAQzE,OAAO,mBAGzCg6D,KACC,iBAAKriE,UAAU,kBAAiB,WAC9B,SAAC,MAAa,IAAG,oBACHsiE,GAAW,6CAAmD,QAAnD,EAAqC/9D,EAAY,UAAE,aAAd,EAAgB+G,gBAIjFulD,KACC,iBAAK7wD,UAAU,kBAAiB,WAC9B,SAAC,MAAO,IACP,uCAGJ8hB,KACC,iBAAK9hB,UAAU,kBAAiB,WAC9B,SAAC,MAAa,IACb,2DAGJ+O,IAA2B,GAAV/J,IAChB,iBAAKhF,UAAU,oBAAmB,WAChC,SAAC,MAAO,IACP,+BAEDgiE,IAAmC,GAAVh9D,IAC3B,iBAAKhF,UAAU,oBAAmB,WAChC,SAAC,MAAO,IACP,mCAED+O,IAA2B,GAAV/J,IACnB,iBAAKhF,UAAU,kBAAiB,WAC9B,SAAC,MAAa,IAEZ,wEAGFgiE,IAAmC,GAAVh9D,IAC3B,iBAAKhF,UAAU,kBAAiB,WAC9B,SAAC,MAAa,IACb,iCAGH,GAEDqE,KACC,iBAAKrE,UAAU,oBAAmB,WAChC,SAAC,MAAO,IACP,6BAGJiP,KACC,iBAAKjP,UAAU,oBAAmB,WAChC,SAAC,MAAO,IACP,8BAGJkiE,KACC,iBAAKliE,UAAU,oBAAmB,WAChC,SAAC,MAAO,IACP,iCAGJmiE,KACC,iBAAKniE,UAAU,oBAAmB,WAChC,SAAC,MAAO,IACP,kCAGJo1D,KACC,iBAAKp1D,UAAU,kBAAiB,WAC9B,SAAC,MAAa,IACb,+CAGL,gBAAKA,UAAU,uBAAsB,UACnC,gBAAKA,UAAU,yBAAwB,UACrC,iBAAKA,UAAU,MAAK,WAClB,gBAAKA,UAAU,sBAAqB,UAClC,gBAAKA,UAAU,iBAAgB,UAC7B,eAAGA,UAAU,SAASiN,QAAQ,oBAAmB,UAAC,4BACN,QAAjB,EAAC20D,EAAc,UAAE,aAAhB,EAAkBqB,iBAIlD,gBAAKjjE,UAAU,iBAAgB,UAC7B,gBAAKA,UAAU,iBAAgB,UAC7B,eAAGA,UAAU,QAAQiN,QAAQ,oBAAmB,UAAC,uBAC1B,IACA,GAApBmC,EAAUvB,OAAc,EAAgB,QAAf,EAAG6zD,EAAU,UAAE,aAAZ,EAAcwB,mBAIjD,gBAAKljE,UAAU,iBAAgB,UAC7B,iBAAKA,UAAU,iBAAgB,WAC7B,cAAGA,UAAU,QAAQiN,QAAQ,uBAC7B,gBAAKjN,UAAU,QAAO,UACpB,cAAGA,UAAU,iCAInB,gBAAKA,UAAU,qBAAoB,UACjC,gBAAKA,UAAU,cAAa,UAC1B,iBAAKA,UAAU,+BAA8B,WAC3C,iBAAKA,UAAU,eAAc,WAC3B,gBAAKA,UAAU,kBACf,gBAAKA,UAAU,YAAW,SAAC,uBAE7B,iBAAKA,UAAU,aAAY,WACzB,gBAAKA,UAAU,kBACf,gBAAKA,UAAU,YAAW,SAAC,yCAQzC,iBAAKA,UAAU,YAAW,WACxB,iBAAKA,UAAU,cAAa,WAC1B,gBAAKA,UAAU,cAAa,UAC1B,wBAAI,yBAEN,iBAAKA,UAAU,eAAc,WAC3B,iBAAKA,UAAU,wCAAuC,WACpD,SAAC,EAAAqD,wBAAuB,CACtBC,MAAOmyD,EACP/zD,KAAK,OACL8B,KAAK,aACLxH,GAAG,aACHgE,UAAU,qBACVyD,SAAU,SAACC,GACTqpC,EAAYrpC,EAAE1H,GAChB,EACAmnE,SAtSK,SAAC59D,GAEpBy9D,GAAmBz9D,EAErB,EAoSgBzB,UAAU,EACVF,QA1KI,WAClBmpC,EAAY,OACd,EAyKgBrhC,YAAY,+BAEd,4BAAM,IAAE5N,EAAK0F,YAEf,iBAAMxD,UAAU,WAAU,UACxB,SAAC,OAAU,CACTqK,MAAM,SACN9I,KAAM,QACNK,QAAS,WACPw5D,IAAgB,GAChBH,IAAmB,SAACp3D,GAAI,+BACnBA,GAAI,mBACN,MAAQ,QAAK,SACb,WAAavG,EAAU8K,YAAU,OAEpCy6D,IACF,OAGJ,oBAAQt3D,SAAU,SAAC7H,GAAC,OAjMX,SAACA,GACpBo+D,EAAYp+D,EAAEmH,OAAOtF,MACvB,CA+LqCqF,CAAalH,EAAE,EAAC,WACvC,mBAAQ6B,MAAM,SAASvJ,GAAG,IAAG,SAAC,YAG9B,mBAAQuJ,MAAM,MAAMvJ,GAAG,IAAG,SAAC,iBAMhCkT,IAAY,SAACqE,EAAA,EAAM,CAACC,YA7QT,WAClBtC,EAAgBzF,SAAWyF,EAAgBzF,QAAQgI,QACnDwuD,IAAa,EACf,IA0Q4D,GAEnDpM,KACC,SAAC,GAAqB,CACpBV,YAAaA,GACb9E,aAAcA,GACdE,UAAWA,GACXD,WAAYA,GACZ8E,SAAUA,GACVtzC,gBAAiBA,GACjBC,mBAAoBA,GACpB5d,aAAcA,GACdsjB,KAAMrY,EACN6rD,mBAAoBA,GACpBxE,gBAAiBA,GACjB0E,aAAcA,GACdD,kBAAmBA,GACnBE,gBAAiBA,GACjB72D,YAAaA,EACbsd,YAAaA,GACbD,SAAUA,GACVvS,aAAcA,EACd/R,UAAWA,EACXwD,aAAcA,EACdmE,UAAWA,GACXgc,cAAeA,GACfwvC,iBAAkBA,GAClBG,kBAAmBA,GACnBF,eAAgBA,GAChB1hD,iBAAkBA,GAClBsnD,yBAA0BA,GAC1BzF,cAAeA,GACfF,iBAAkBA,GAClB2K,aAAcA,GACdD,eAAgBA,GAChBnW,UAAWA,WAOzB,E,YCi+BA,OA/8CA,SAAyBxqD,GAAQ,IAAD,EACxBuG,EAAUC,EAAAA,EAAAA,QAER5D,EAAyB5C,EAAzB4C,UAAW0lB,EAActoB,EAAdsoB,UACnB7f,QAAQC,IAAI4f,GACZ,IAAMhS,EAAagS,EAAU/R,MAC3B,SAACnT,GAAI,MAA2B,qBAAtBA,EAAKiT,YAAmC,IAEpD5N,QAAQC,IAAc,OAAV4N,QAAU,IAAVA,OAAU,EAAVA,EAAYpC,SAAU,QAClC,OAA8BzN,EAAAA,EAAAA,UAAS,IAAG,eAAnC0a,EAAO,KAAEC,EAAU,KAC1B,GAAsC3a,EAAAA,EAAAA,UAAS,IAAG,eAA3CoD,EAAW,KAAE+L,EAAc,KAClC,GAAwCnP,EAAAA,EAAAA,UAAS,IAAG,eAA7CuzD,EAAY,KAAE0O,EAAe,KACpC,GAAsCjiE,EAAAA,EAAAA,UAAS,IAAG,eAA3CkiE,EAAW,KAAEC,EAAc,KAClC,GAAwCniE,EAAAA,EAAAA,UAAS,IAAG,eAA7CoiE,EAAY,KAAEC,EAAe,KACpC,GAAoCriE,EAAAA,EAAAA,UAAS,IAAG,eAAzCsiE,EAAU,KAAEC,EAAa,KAChC,GAA8BviE,EAAAA,EAAAA,UAAS,IAAG,eAAnCwiE,EAAO,KAAEC,EAAU,KAC1B,GAA8BziE,EAAAA,EAAAA,UAAS,IAAG,eAAnC0iE,EAAO,KAAEC,EAAU,KAC1B,GAA8B3iE,EAAAA,EAAAA,UAAS,IAAG,eAAnC4zD,EAAO,KAAEgP,EAAU,KAC1B,GAAoC5iE,EAAAA,EAAAA,UAAS,IAAG,eAAzC6iE,EAAU,KAAEC,EAAa,KAChC,IAAkC9iE,EAAAA,EAAAA,UAAS,IAAG,iBAAvC+iE,GAAS,MAAEC,GAAY,MAC9BhhE,QAAQC,IAAIugE,GAEZ,IAAI77C,GAAYna,SAASoa,cAAc,OAEjCjnB,GAAeC,aAAaC,QAAQ,SAE1C,IAA4BG,EAAAA,EAAAA,UAAS,IAAG,iBAAjCyP,GAAM,MAAEC,GAAS,OAqBxBpT,EAAAA,EAAAA,YAAU,WAdRuE,IAAM,CACJC,OAAQ,MACRC,IAAKjB,EAAO,iDAA6CH,MACxDuB,MAAK,SAACE,GACIA,EAAKlF,KAEXwB,SAAQ,SAACf,GAXA,aAYRA,EAAKiT,cACPF,GAAU,CAAC/S,GAEf,GACF,GAKF,GAAG,IAmBHgqB,GAAUE,UAA0B,QAAjB,EAAGzjB,EAAY,UAAE,aAAd,EAAgBmqC,UA2ItCjxC,EAAAA,EAAAA,YAAU,WA3JRuE,IAAM,CACJC,OAAQ,MACRC,IACEjB,EAAO,4DAC8C3D,KAEtD+E,MAAK,SAAUC,GACd,IAAIC,EAAOD,EAASjF,KACpB8F,QAAQC,IAAIb,GACZ+N,EAAe/N,EAEjB,IACCC,OAAM,SAAUF,GACfa,QAAQC,IAAId,EACd,IAKFN,IAAM,CACJC,OAAQ,MACRC,IAAKjB,EAAO,qDAAiD3D,KAE5D+E,MAAK,SAAUC,GACd,IAAIC,EAAOD,EAASjF,KACpB8F,QAAQC,IAAIb,GACZ6gE,EAAgB7gE,EAClB,IACCC,OAAM,SAAUF,GACfa,QAAQC,IAAId,EACd,IAmBFN,IAAM,CACJC,OAAQ,MACRC,IAAKjB,EAAO,sDAAkD3D,KAE7D+E,MAAK,SAAUC,GACd,IAAIC,EAAOD,EAASjF,KACpB8F,QAAQC,IAAIb,GACZ+gE,EAAe/gE,EACjB,IACCC,OAAM,SAAUF,GACfa,QAAQC,IAAId,EACd,IAIFN,IAAM,CACJC,OAAQ,MACRC,IACEjB,EAAO,uDAAmD3D,KAE3D+E,MAAK,SAAUC,GACd,IAAIC,EAAOD,EAASjF,KACpB8F,QAAQC,IAAIb,GACZihE,EAAgBjhE,EAClB,IACCC,OAAM,SAAUF,GACfa,QAAQC,IAAId,EACd,IAIFN,IAAM,CACJC,OAAQ,MACRC,IACEjB,EAAO,kEACoD3D,KAE5D+E,MAAK,SAAUC,GACd,IAAIC,EAAOD,EAASjF,KACpB8F,QAAQC,IAAIb,GACZmhE,EAAcnhE,EAChB,IACCC,OAAM,SAAUF,GACfa,QAAQC,IAAId,EACd,IA3DFN,IAAM,CACJC,OAAQ,MACRC,IAAKjB,EAAO,oDAAgD3D,KAE3D+E,MAAK,SAAUC,GACd,IAAIC,EAAOD,EAASjF,KACpB8F,QAAQC,IAAIb,GACZuZ,EAAWvZ,EACb,IACCC,OAAM,SAAUF,GACfa,QAAQC,IAAId,EACd,IAqHF8hE,KAjEApiE,IAAM,CACJC,OAAQ,MACRC,IAAKjB,EAAO,gDAA4C3D,KAEvD+E,MAAK,SAAUC,GACd,IAAIC,EAAOD,EAASjF,KACpB8F,QAAQC,IAAIb,GACZuhE,EAAWvhE,EACb,IACCC,OAAM,SAAUF,GACfa,QAAQC,IAAId,EACd,IAIFN,IAAM,CACJC,OAAQ,MACRC,IAAKjB,EAAO,gDAA4C3D,KAEvD+E,MAAK,SAAUC,GACd,IAAIC,EAAOD,EAASjF,KACpB8F,QAAQC,IAAIb,GACZwhE,EAAWxhE,EACb,IACCC,OAAM,SAAUF,GACfa,QAAQC,IAAId,EACd,IAIFN,IAAM,CACJC,OAAQ,MACRC,IAAKjB,EAAO,mDAA+C3D,KAE1D+E,MAAK,SAAUC,GACd,IAAIC,EAAOD,EAASjF,KACpB8F,QAAQC,IAAIb,GACZ0hE,EAAc1hE,EAChB,IACCC,OAAM,SAAUF,GACfa,QAAQC,IAAId,EACd,IAIFN,IAAM,CACJC,OAAQ,MACRC,IAAKjB,EAAO,kDAA8C3D,KAEzD+E,MAAK,SAAUC,GACd,IAAIC,EAAOD,EAASjF,KACpB8F,QAAQC,IAAIb,GACZ4hE,GAAa5hE,EACf,IACCC,OAAM,SAAUF,GACfa,QAAQC,IAAId,EACd,GAcJ,GAAG,CAAChF,IAEJ6F,QAAQC,IAAImB,GAEZ,IAAM6/D,GAAkB,WACtBpiE,IAAM,CACJC,OAAQ,OACRC,IAAKjB,EAAO,qCACZ5D,KAAM,CACJgnE,eAAgB,KAChBC,SAAU,KACVzoD,QAASA,EACT0oD,MAAOjnE,EACPknE,cAAe,KACfC,SAAU,KACV1+D,OAAQ,KACR2+D,GAAI,QAGLriE,MAAK,SAACgH,GACLu6D,EAAWv6D,EAAIhM,MACf8F,QAAQC,IAAIiG,EAAIhM,KAClB,IACCgF,MAAK,SAACI,GACLU,QAAQC,IAAI,UAAWX,EACzB,GACJ,EAEA,OACE,2BAEGU,QAAQC,IAAI9F,IAEb,2BACGiH,EAAYhI,KAAI,SAACiO,GAAI,OACpB,gBAAKxK,UAAU,YAAW,UACxB,iBAAKA,UAAU,YAAW,WACxB,gBAAKA,UAAU,WAAU,UACvB,wBACGwK,EAAKc,iBAIV,gBAAKtL,UAAU,WAAU,UACvB,wBAAI,gBAEN,gBAAKA,UAAU,mBAEb,KAER,SAACoT,EAAA,EAAiB,CAChBxC,OAAQA,GACRyC,kBApPgB,CAAC,WAAY,OAAQ,UAAW,cAuPjD9O,EAAYhI,KAAI,SAACiO,GAAI,OACpB,gBAAKxK,UAAU,kBAAiB,UAC9B,gBAAKA,UAAU,+BAA8B,UAC3C,iBAAKA,UAAU,oBAAmB,WAChC,gBAAKA,UAAU,iBAAgB,UAC7B,iBAAKA,UAAU,iBAAgB,WAC7B,kBAAOA,UAAU,QAAQiN,QAAQ,oBAAmB,SAAC,kBAGrD,iBAAMjN,UAAU,YAAW,SAAC,OAC5B,gBAAKA,UAAU,QAAO,UACpB,cACEA,UAAU,uBACV,cAAY,UACZ2B,MAAO6I,EAAKkX,YAAY,SAEvBlX,EAAKkX,sBAKd,gBAAK1hB,UAAU,iBAAgB,UAC7B,iBAAKA,UAAU,iBAAgB,WAC7B,kBAAOA,UAAU,QAAQiN,QAAQ,oBAAmB,SAAC,kBAGrD,iBAAMjN,UAAU,YAAW,SAAC,OAC5B,gBAAKA,UAAU,SAAQ,UACrB,cACE,cAAY,UACZ2B,MAAO6I,EAAKc,YACZzQ,MAAO,CAAED,SAAU,QAAS,SAE3B4P,EAAKc,sBAKd,gBAAKtL,UAAU,iBAAgB,UAC7B,iBAAKA,UAAU,iBAAgB,WAC7B,kBAAOA,UAAU,QAAQiN,QAAQ,oBAAmB,SAAC,sBAGrD,iBAAMjN,UAAU,YAAW,SAAC,OAC5B,gBAAKA,UAAU,SAAQ,UACrB,cACEA,UAAU,uBACV,cAAY,UACZ2B,MAAO6I,EAAKm6D,gBAAgB,SAE3Bn6D,EAAKm6D,0BAKd,gBAAK3kE,UAAU,iBAAgB,UAC7B,iBAAKA,UAAU,iBAAgB,WAC7B,kBAAOA,UAAU,QAAQiN,QAAQ,oBAAmB,SAAC,eAGrD,iBAAMjN,UAAU,YAAW,SAAC,OAC5B,gBAAKA,UAAU,SAAQ,UACrB,cACEA,UAAU,uBACV,cAAY,UACZ2B,MAAO6I,EAAK0jC,SAAS,SAEH,MAAjB1jC,EAAK0jC,SAAmB,GAAK1jC,EAAK0jC,mBAK3C,gBAAKluC,UAAU,iBAAgB,UAC7B,iBAAKA,UAAU,iBAAgB,WAC7B,kBAAOA,UAAU,QAAQiN,QAAQ,oBAAmB,SAAC,cAGrD,iBAAMjN,UAAU,YAAW,SAAC,MACH,IAAd,OAAVgR,QAAU,IAAVA,OAAU,EAAVA,EAAYpC,WACX,gBAAK5O,UAAU,SAAQ,UACrB,cACEA,UAAU,uBACV,cAAY,UACZ2B,MAAO6I,EAAK0kB,SAAS,UAErB,UAAC,MAAI,CACH3zB,GAAE,qDAAgDiP,EAAK8yD,aACvDzyD,OAAO,SAAQ,UAEd,IACAL,EAAK0kB,iBAKZ,gBAAKlvB,UAAU,SAAQ,UACrB,cACEA,UAAU,uBACV,cAAY,UACZ2B,MAAO6I,EAAK0kB,SAAS,SAEpB1kB,EAAK0kB,mBAMhB,gBAAKlvB,UAAU,iBAAgB,UAC7B,iBAAKA,UAAU,iBAAgB,WAC7B,kBAAOA,UAAU,QAAQiN,QAAQ,oBAAmB,SAAC,cAGrD,iBAAMjN,UAAU,YAAW,SAAC,OAC5B,gBAAKA,UAAU,QAAO,UACpB,cACEA,UAAU,uBACV,cAAY,UACZ2B,MAAO6I,EAAKo6D,SAAS,SAEH,MAAjBp6D,EAAKo6D,SAAmB,GAAKp6D,EAAKo6D,mBAK3C,gBAAK5kE,UAAU,iBAAgB,UAC7B,iBAAKA,UAAU,iBAAgB,WAC7B,kBAAOA,UAAU,QAAQiN,QAAQ,oBAAmB,SAAC,qBAGrD,iBAAMjN,UAAU,YAAW,SAAC,OAC5B,gBAAKA,UAAU,QAAO,UACpB,cACEA,UAAU,uBACV,cAAY,UACZ2B,MAAO6I,EAAKq6D,eAAe,SAEH,MAAvBr6D,EAAKq6D,eACF,KACAr6D,EAAKq6D,yBAKjB,gBAAK7kE,UAAU,iBAAgB,UAC7B,iBAAKA,UAAU,iBAAgB,WAC7B,kBAAOA,UAAU,QAAQiN,QAAQ,oBAAmB,SAAC,qBAGrD,iBAAMjN,UAAU,YAAW,SAAC,OACF,KAAf,OAAVgR,QAAU,IAAVA,OAAU,EAAVA,EAAYpC,WACX,gBAAK5O,UAAU,SAAQ,UACrB,cACEA,UAAU,uBACV,cAAY,UACZ2B,MAAO6I,EAAKs6D,eAAe,UAE3B,UAAC,MAAI,CACHvpE,GAAE,iCAA4BiP,EAAKu6D,cACnCl6D,OAAO,SAAQ,UAEd,IACAL,EAAKs6D,uBAKZ,gBAAK9kE,UAAU,SAAQ,UACrB,cACEA,UAAU,uBACV,cAAY,UACZ2B,MAAO6I,EAAKs6D,eAAe,SAE1Bt6D,EAAKs6D,yBAMhB,gBAAK9kE,UAAU,iBAAgB,UAC7B,iBAAKA,UAAU,iBAAgB,WAC7B,kBAAOA,UAAU,QAAQiN,QAAQ,oBAAmB,SAAC,wBAGrD,iBAAMjN,UAAU,YAAW,SAAC,OAC5B,gBAAKA,UAAU,SAAQ,UACrB,cACEA,UAAU,uBACV,cAAY,UACZ2B,MAAO6I,EAAKw6D,kBAAkB,SAE7Bx6D,EAAKw6D,4BAKd,gBAAKhlE,UAAU,iBAAgB,UAC7B,iBAAKA,UAAU,iBAAgB,WAC7B,kBAAOA,UAAU,QAAQiN,QAAQ,oBAAmB,SAAC,oBAGrD,iBAAMjN,UAAU,YAAW,SAAC,OAC5B,gBAAKA,UAAU,SAAQ,UACrB,cACEA,UAAU,uBACV,cAAY,UACZ2B,MAAO6I,EAAKy6D,cAAc,SAEzBz6D,EAAKy6D,wBAKd,gBAAKjlE,UAAU,iBAAgB,UAC7B,iBAAKA,UAAU,iBAAgB,WAC7B,kBAAOA,UAAU,QAAQiN,QAAQ,oBAAmB,SAAC,iBAGrD,iBAAMjN,UAAU,YAAW,SAAC,OAC5B,gBAAKA,UAAU,SAAQ,UACrB,cACEA,UAAU,uBACV,cAAY,UACZ2B,MAAO6I,EAAK06D,WAAW,SAEH,MAAnB16D,EAAK06D,WAAqB,KAAO16D,EAAK06D,qBAK/C,gBAAKllE,UAAU,iBAAgB,UAC7B,iBAAKA,UAAU,iBAAgB,WAC7B,kBAAOA,UAAU,QAAQiN,QAAQ,oBAAmB,SAAC,2BAGrD,iBAAMjN,UAAU,YAAW,SAAC,OAC5B,gBAAKA,UAAU,QAAO,UACpB,cACEA,UAAU,uBACV,cAAY,UACZ2B,MAAO6I,EAAK26D,qBAAqB,SAEhC36D,EAAK26D,+BAKd,gBAAKnlE,UAAU,iBAAgB,UAC7B,iBAAKA,UAAU,iBAAgB,WAC7B,kBAAOA,UAAU,QAAQiN,QAAQ,oBAAmB,SAAC,mBAGrD,iBAAMjN,UAAU,YAAW,SAAC,OAC5B,gBAAKA,UAAU,SAAQ,UACrB,cACEA,UAAU,uBACV,cAAY,UACZ2B,MAAO6I,EAAK46D,aAAa,SAExB56D,EAAK46D,uBAKd,gBAAKplE,UAAU,iBAAgB,UAC7B,iBAAKA,UAAU,iBAAgB,WAC7B,kBAAOA,UAAU,QAAQiN,QAAQ,oBAAmB,SAAC,wBAGrD,iBAAMjN,UAAU,YAAW,SAAC,OAC5B,gBAAKA,UAAU,QAAO,UACpB,cACEA,UAAU,wBACV,cAAY,UACZ2B,MAAO6I,EAAK66D,kBAAkB,SAEP,GAAtB76D,EAAK86D,cAAqB,GAAK96D,EAAK66D,4BAK7C,gBAAKrlE,UAAU,iBAAgB,UAC7B,iBAAKA,UAAU,iBAAgB,WAC7B,kBAAOA,UAAU,QAAQiN,QAAQ,oBAAmB,SAAC,mBAGrD,iBAAMjN,UAAU,YAAW,SAAC,OAC5B,gBAAKA,UAAU,QAAO,UACpB,cACEA,UAAU,uBACV,cAAY,UACZ2B,MAAO6I,EAAK+6D,aAAa,SAExB/6D,EAAK+6D,uBAKd,gBAAKvlE,UAAU,iBAAgB,UAC7B,iBAAKA,UAAU,iBAAgB,WAC7B,kBAAOA,UAAU,QAAQiN,QAAQ,oBAAmB,SAAC,qBAGrD,iBAAMjN,UAAU,YAAW,SAAC,OAC5B,gBAAKA,UAAU,QAAO,UACpB,cACEA,UAAU,uBACV,cAAY,UACZ2B,MAAO6I,EAAKg7D,eAAe,SAE1Bh7D,EAAKg7D,yBAKd,gBAAKxlE,UAAU,iBAAgB,UAC7B,iBAAKA,UAAU,iBAAgB,WAC7B,kBAAOA,UAAU,QAAQiN,QAAQ,oBAAmB,SAAC,uBAGrD,iBAAMjN,UAAU,YAAW,SAAC,OAC5B,gBAAKA,UAAU,QAAO,UACpB,cACEA,UAAU,uBACV,cAAY,UACZ2B,MAAO6I,EAAKi7D,gBAAgB,SAEH,GAAxBj7D,EAAKi7D,gBAAuB,MAAQ,eAK7C,gBAAKzlE,UAAU,iBAAgB,UAE7B,iBAAKA,UAAU,iBAAgB,WAC7B,kBAAOA,UAAU,QAAQiN,QAAQ,oBAAmB,SAAC,cAGrD,iBAAMjN,UAAU,YAAW,SAAC,OAC5B,gBAAKA,UAAU,QAAO,UACpB,cACEA,UAAU,uBACV,cAAY,UACZ2B,MAAO6I,EAAKkkC,SAAS,SAEpB5mB,GAAUmB,sBAKnB,gBAAKjpB,UAAU,iBAAgB,UAC7B,iBAAKA,UAAU,iBAAgB,WAC7B,kBAAOA,UAAU,QAAQiN,QAAQ,oBAAmB,SAAC,qBAGrD,iBAAMjN,UAAU,YAAW,SAAC,OAC5B,gBAAKA,UAAU,QAAO,UACpB,cACEA,UAAU,uBACV,cAAY,UACZ2B,MAAO6I,EAAKk7D,cAAc,SAEzBl7D,EAAKk7D,wBAKd,gBAAK1lE,UAAU,iBAAgB,UAC7B,iBAAKA,UAAU,iBAAgB,WAC7B,kBAAOA,UAAU,QAAQiN,QAAQ,oBAAmB,SAAC,mBAGrD,iBAAMjN,UAAU,YAAW,SAAC,OAC5B,gBAAKA,UAAU,QAAO,UACpB,cACEA,UAAU,uBACV,cAAY,UACZ2B,MAAO6I,EAAKm7D,aAAa,SAExBn7D,EAAKm7D,uBAKd,gBAAK3lE,UAAU,iBAAgB,UAC7B,iBAAKA,UAAU,iBAAgB,WAC7B,kBAAOA,UAAU,QAAQiN,QAAQ,oBAAmB,SAAC,mBAGrD,iBAAMjN,UAAU,YAAW,SAAC,OAC5B,gBAAKA,UAAU,QAAO,UACpB,cACEA,UAAU,uBACV,cAAY,UACZ2B,MAAO6I,EAAKo7D,aAAa,SAExBp7D,EAAKo7D,uBAKd,gBAAK5lE,UAAU,iBAAgB,UAC7B,iBAAKA,UAAU,iBAAgB,WAC7B,kBAAOA,UAAU,QAAQiN,QAAQ,oBAAmB,SAAC,sBAGrD,iBAAMjN,UAAU,YAAW,SAAC,OAC5B,gBAAKA,UAAU,QAAO,UACpB,cACEA,UAAU,uBACV,cAAY,UACZ2B,MAAO6I,EAAKq7D,gBAAgB,SAE3Br7D,EAAKq7D,0BAKd,gBAAK7lE,UAAU,iBAAgB,UAC7B,iBAAKA,UAAU,iBAAgB,WAC7B,kBAAOA,UAAU,QAAQiN,QAAQ,oBAAmB,SAAC,mBAGrD,iBAAMjN,UAAU,YAAW,SAAC,OAC5B,gBAAKA,UAAU,QAAO,UACpB,cACEA,UAAU,uBACV,cAAY,UACZ2B,MAAO6I,EAAKs7D,aAAa,SAEH,MAArBt7D,EAAKs7D,aAAuB,KAAOt7D,EAAKs7D,uBAMjD,gBAAK9lE,UAAU,iBAAgB,UAC7B,iBAAKA,UAAU,iBAAgB,WAC7B,kBAAOA,UAAU,QAAQiN,QAAQ,oBAAmB,SAAC,qBAGrD,iBAAMjN,UAAU,YAAW,SAAC,MAC3BqjE,EAAY9mE,KAAI,SAACiO,GAAI,OACpB,gBAAKxK,UAAU,QAAO,UACpB,cACEA,UAAU,uBACV,cAAY,UACZ2B,MAAO6I,EAAKu7D,eAAe,SAEH,MAAvBv7D,EAAKu7D,gBACiB,IAAvBv7D,EAAKu7D,eACD,IACAv7D,EAAKu7D,kBAEP,UAKZ,iBAAK/lE,UAAU,iBAAgB,WAC7B,iBAAKA,UAAU,iBAAgB,WAC7B,kBAAOA,UAAU,QAAQiN,QAAQ,oBAAmB,SAAC,sBAGrD,iBAAMjN,UAAU,YAAW,SAAC,MAC3BujE,EAAahnE,KAAI,SAACiO,GAAI,OACrB,gBAAKxK,UAAU,QAAO,UACpB,cACEA,UAAU,uBACV,cAAY,UACZ2B,MAAO6I,EAAKw7D,gBAAgB,SAEJ,GAAvBzC,EAAa11D,QACU,KAAxBrD,EAAKw7D,gBACD,IACAx7D,EAAKw7D,mBAEP,OAGT7iE,QAAQC,IAAImgE,EAAa11D,YAE5B,gBAAK7N,UAAU,iBAAgB,UAC7B,iBAAKA,UAAU,iBAAgB,WAC7B,kBAAOA,UAAU,QAAQiN,QAAQ,oBAAmB,SAAC,kBAGrD,iBAAMjN,UAAU,YAAW,SAAC,OAC5B,gBAAKA,UAAU,QAAO,UACpB,cACEA,UAAU,uBACV,cAAY,UACZ2B,MAAO6I,EAAKy7D,aAAa,SAExBz7D,EAAKy7D,uBAKd,gBAAKjmE,UAAU,iBAAgB,UAC7B,iBAAKA,UAAU,iBAAgB,WAC7B,kBAAOA,UAAU,QAAQiN,QAAQ,oBAAmB,SAAC,kBAGrD,iBAAMjN,UAAU,YAAW,SAAC,OAC5B,gBAAKA,UAAU,QAAO,UACpB,cACEA,UAAU,uBACV,cAAY,UACZ2B,MAAO6I,EAAK07D,YAAY,SAEvB17D,EAAK07D,sBAKd,gBAAKlmE,UAAU,iBAAgB,UAC7B,iBAAKA,UAAU,iBAAgB,WAC7B,kBAAOA,UAAU,QAAQiN,QAAQ,oBAAmB,SAAC,wBAGrD,iBAAMjN,UAAU,YAAW,SAAC,OAC5B,gBAAKA,UAAU,SAAQ,UACrB,cACEA,UAAU,uBACV,cAAY,UACZ2B,MAAO6I,EAAK27D,iBAAiB,SAE5B37D,EAAK27D,2BAKd,gBAAKnmE,UAAU,iBAAgB,UAC7B,iBAAKA,UAAU,iBAAgB,WAC7B,kBAAOA,UAAU,QAAQiN,QAAQ,oBAAmB,SAAC,oBAGrD,iBAAMjN,UAAU,YAAW,SAAC,MACD,KAA1BwK,EAAK47D,mBACJ,gBAAKpmE,UAAU,SAAQ,UACrB,eACEA,UAAU,2CACV,cAAY,UACZ2B,MAAO6I,EAAK67D,cAAc,WAE1B,SAAC,OAAM,CAAC9kE,KAAM,UACbiJ,EAAK67D,cAAe,SAGG,KAA1B77D,EAAK47D,mBACP,gBAAKpmE,UAAU,SAAQ,UACrB,eACEA,UAAU,2CACV,cAAY,UACZ2B,MAAO6I,EAAK67D,cAAc,WAE1B,SAAC,MAAU,CAAC9kE,KAAM,UACjBiJ,EAAK67D,cAAe,SAGG,KAA1B77D,EAAK47D,mBACP,gBAAKpmE,UAAU,SAAQ,UACrB,eACEA,UAAU,yCACV,cAAY,UACZ2B,MAAO6I,EAAK67D,cAAc,WAE1B,SAAC,OAAU,CAAC9kE,KAAM,UACjBiJ,EAAK67D,cAAe,SAIzB,SAIN,gBAAKrmE,UAAU,iBAAgB,UAC7B,iBAAKA,UAAU,iBAAgB,WAC7B,kBAAOA,UAAU,QAAQiN,QAAQ,oBAAmB,SAAC,iBAGrD,iBAAMjN,UAAU,YAAW,SAAC,OAC5B,gBAAKA,UAAU,QAAO,UACpB,cACEA,UAAU,uBACV,cAAY,UACZ2B,MAAO6I,EAAK87D,YAAY,SAEvB97D,EAAK87D,qBAKI,IAAjB97D,EAAK+7D,UACW,IAAjB/7D,EAAK+7D,UACY,IAAjB/7D,EAAK+7D,UACY,IAAjB/7D,EAAK+7D,UACY,KAAjB/7D,EAAK+7D,UACY,KAAjB/7D,EAAK+7D,UACH,iCACE,gBAAKvmE,UAAU,iBAAgB,UAC7B,iBAAKA,UAAU,iBAAgB,WAC7B,kBAAOA,UAAU,QAAQiN,QAAQ,oBAAmB,SAAC,kBAGrD,iBAAMjN,UAAU,YAAW,SAAC,OAC5B,gBAAKA,UAAU,QAAO,UACpB,cAAGA,UAAU,uBAAsB,SAChCwK,EAAKg8D,sBAKd,gBAAKxmE,UAAU,iBAAgB,UAC7B,iBAAKA,UAAU,iBAAgB,WAC7B,kBAAOA,UAAU,QAAQiN,QAAQ,oBAAmB,SAAC,kBAGrD,iBAAMjN,UAAU,YAAW,SAAC,OAC5B,gBAAKA,UAAU,SAAQ,UACrB,cAAGA,UAAU,uBAAsB,SAChCwK,EAAKi8D,wBAOhB,SAIF,KAER,gBAAKzmE,UAAU,wBAAuB,UACpC,iBAAKA,UAAU,oBAAmB,UAC/B00D,EAAan4D,KAAI,SAACiO,GAAI,OACrB,iBAAKxK,UAAU,yBAAwB,WACrC,kBAAOiN,QAAQ,oBAAmB,SAAC,mBACnC,gBAAKjN,UAAU,SAAQ,UACrB,uBAAIwK,EAAKk8D,oBAEP,IAEPniE,EAAYhI,KAAI,SAACiO,GAAI,OACpB,iCACE,iBAAKxK,UAAU,gBAAe,WAC5B,kBAAOiN,QAAQ,oBAAmB,SAAC,sBACnC,gBAAKjN,UAAU,SAAQ,UACrB,uBAAIwK,EAAKm8D,wBAGb,iBAAK3mE,UAAU,yBAAwB,WACrC,kBAAOiN,QAAQ,oBAAmB,SAAC,uCAGnC,gBAAKjN,UAAU,SAAQ,UACrB,uBAAIwK,EAAKo8D,sBAGb,iBAAK5mE,UAAU,iBAAgB,WAC7B,kBAAOiN,QAAQ,oBAAmB,SAAC,qBACnC,gBAAKjN,UAAU,SAAQ,UACrB,uBAAIwK,EAAKq8D,4BAGb,iBAAK7mE,UAAU,oBAAmB,WAChC,iBAAKA,UAAU,iBAAgB,WAC7B,kBAAOA,UAAU,aAAaiN,QAAQ,oBAAmB,SAAC,8BAI1D,cACEjN,UAAU,4BACV,cAAY,UACZ2B,MAAO6I,EAAK27D,iBAAiB,SAE5B37D,EAAK27D,uBAGV,gBAAKnmE,UAAU,mBAAkB,UAC/B,gBAAK2V,MAAM,aAAY,UACrB,kBAAO3Z,GAAG,eAAe2Z,MAAM,QAAO,UACpC,mBAAO3V,UAAU,aAAY,WAC3B,yBACE,gBAAIs0B,QAAS,EAAGz5B,MAAO,CAAEwP,MAAO,WAAY,WAC1C,SAAC,OAAa,IAAG,uBAGrB,2BACE,yBACE,4BAAQ,WAEV,yBACE,4BAAQ,mBAEV,yBACE,4BAAQ,kBAEV,yBACE,4BAAQ,eAEV,yBACE,4BAAQ,iBAIZ,2BACE,wBAAI,cACJ,0BACwB,MAArBG,EAAKs8D,aACF,IACA3+D,IAAOqC,EAAKs8D,cAAcz+D,OACxB,eACC,IAAI,KACR,IACiB,MAAnBmC,EAAKu8D,WACF,IACA5+D,IAAOqC,EAAKu8D,YAAY1+D,OAAO,mBAErC,0BACyB,MAAtBmC,EAAKw8D,cACF,IACA7+D,IAAOqC,EAAKw8D,eAAe3+D,OACzB,eACC,IAAI,KACR,IACkB,MAApBmC,EAAKy8D,YACF,IACA9+D,IAAOqC,EAAKy8D,aAAa5+D,OACvB,mBAGR,0BAC0B,MAAvBmC,EAAKwa,eACF,IACA7c,IAAOqC,EAAKwa,gBAAgB3c,OAC1B,eACC,IAAI,KACR,IACmB,MAArBmC,EAAKya,aACF,IACA9c,IAAOqC,EAAKya,cAAc5c,OACxB,mBAGR,0BACwB,MAArBmC,EAAK08D,aACF,KACA/+D,IAAOqC,EAAK08D,cAAc7+D,OACxB,eACC,IAAI,KACR,IACiB,MAAnBmC,EAAK28D,WACF,IACAh/D,IAAOqC,EAAK28D,YAAY9+D,OAAO,qBAGtCs7D,EAAQpnE,KAAI,SAACc,GAAI,8JAChB,gCACG8F,QAAQC,IACW,QADR,EACV/F,EAAK+pE,qBAAa,aAAlB,EAAoBz+C,eAAe,WAErC,2BACE,wBAAI,qBACJ,eAAI3oB,UAAU,aAAY,SACvB3C,EAAKgqE,wBAER,eAAIrnE,UAAU,aAAY,SACvB3C,EAAKiqE,uBAER,eAAItnE,UAAU,aAAY,SACvB3C,EAAKkqE,oBAER,eAAIvnE,UAAU,aAAY,SACvB3C,EAAKmqE,sBAGV,2BACE,wBAAI,SACJ,eAAIxnE,UAAU,aAAY,SACC,MAAxB3C,EAAKoqE,gBACF,IACAja,KAAKka,MAAoB,QAAf,EAACnjE,EAAY,UAAE,aAAd,EAAgBojE,QAEjC,eAAI3nE,UAAU,aAAY,SACvB3C,EAAKuqE,kBAER,eAAI5nE,UAAU,aAAY,SACvB3C,EAAKwqE,eAER,eAAI7nE,UAAU,aAAY,SACG,MAA1B3C,EAAKyqE,kBACF,EACAzqE,EAAKyqE,wBAGb,2BACE,wBAAI,kBACJ,eAAI9nE,UAAU,aAAY,SACF,OAAX,QAAV,EAAA6jE,EAAQ,UAAE,aAAV,EAAYt+D,OACT,EACU,QADT,EACDs+D,EAAQ,UAAE,OAAO,QAAP,EAAV,EAAYt+D,aAAK,WAAP,EAAV,EAAmBojB,eACjB,YAGR,eAAI3oB,UAAU,aAAY,SACF,OAAX,QAAV,EAAA6jE,EAAQ,UAAE,aAAV,EAAYt+D,OACT,EACU,QADT,EACDs+D,EAAQ,UAAE,OAAO,QAAP,EAAV,EAAYt+D,aAAK,WAAP,EAAV,EAAmBojB,eACjB,YAGR,eAAI3oB,UAAU,aAAY,SACD,MAAtB3C,EAAK+pE,cACF,EACkB,QADjB,EACD/pE,EAAK+pE,qBAAa,aAAlB,EAAoBz+C,eAClB,YAGR,eAAI3oB,UAAU,aAAY,SACF,MAArB3C,EAAK0qE,aACF,EACiB,QADhB,EACD1qE,EAAK0qE,oBAAY,aAAjB,EAAmBp/C,eACjB,eAIV,2BACE,wBAAI,aACJ,eAAI3oB,UAAU,aAAY,SACF,OAAX,QAAV,EAAA+0D,EAAQ,UAAE,aAAV,EAAYxvD,OACTuiB,GAAUmB,YAAVnB,KACAA,GAAUmB,YACV,KACU,QADP,EACH8rC,EAAQ,UAAE,OAAO,QAAP,EAAV,EAAYxvD,aAAK,WAAP,EAAV,EAAmBojB,eACjB,aAGR,eAAI3oB,UAAU,aAAY,SACF,OAAX,QAAV,EAAA+0D,EAAQ,UAAE,aAAV,EAAYxvD,OACTuiB,GAAUmB,YAAVnB,KACAA,GAAUmB,YACV,KACU,QADP,EACH8rC,EAAQ,UAAE,OAAO,QAAP,EAAV,EAAYxvD,aAAK,WAAP,EAAV,EAAmBojB,eACjB,aAGR,eAAI3oB,UAAU,aAAY,SACC,MAAxB3C,EAAK2qE,gBACFlgD,GAAUmB,YAAVnB,KACAA,GAAUmB,YACV,KACoB,QADjB,EACH5rB,EAAK2qE,uBAAe,aAApB,EAAsBr/C,eACpB,aAGR,eAAI3oB,UAAU,aAAY,SACA,MAAvB3C,EAAK4qE,eACFngD,GAAUmB,YAAVnB,KACAA,GAAUmB,YACV,KACmB,QADhB,EACH5rB,EAAK4qE,sBAAc,aAAnB,EAAqBt/C,eACnB,gBAKV,2BACE,wBAAI,0BACJ,eAAI3oB,UAAU,aAAY,SACC,OAAX,QAAb,EAAAgkE,EAAW,UAAE,aAAb,EAAez+D,OACZuiB,GAAUmB,YAAVnB,KACAA,GAAUmB,YACV,KACa,QADV,EACH+6C,EAAW,UAAE,OAAO,QAAP,EAAb,EAAez+D,aAAK,WAAP,EAAb,EAAsBojB,eACpB,aAGR,eAAI3oB,UAAU,aAAY,SACC,OAAX,QAAb,EAAAgkE,EAAW,UAAE,aAAb,EAAez+D,OACZuiB,GAAUmB,YAAVnB,KACAA,GAAUmB,YACV,KACa,QADV,EACH+6C,EAAW,UAAE,OAAO,QAAP,EAAb,EAAez+D,aAAK,WAAP,EAAb,EAAsBojB,eACpB,aAGR,eAAI3oB,UAAU,aAAY,SACK,MAA5B3C,EAAK6qE,oBACFpgD,GAAUmB,YAAVnB,KACAA,GAAUmB,YACV,KACwB,QADrB,EACH5rB,EAAK6qE,2BAAmB,aAAxB,EAA0Bv/C,eACxB,aAGR,eAAI3oB,UAAU,aAAY,SACI,MAA3B3C,EAAK8qE,mBACFrgD,GAAUmB,YAAVnB,KACAA,GAAUmB,YACV,KACuB,QADpB,EACH5rB,EAAK8qE,0BAAkB,aAAvB,EAAyBx/C,eACvB,gBAIV,2BACE,wBAAI,gBACJ,eAAI3oB,UAAU,aAAY,SACA,OAAX,QAAZ,EAAAkkE,GAAU,UAAE,aAAZ,EAAc3+D,OACXuiB,GAAUmB,YAAVnB,KACAA,GAAUmB,YACV,KACY,QADT,EACHi7C,GAAU,UAAE,OAAO,QAAP,EAAZ,EAAc3+D,aAAK,WAAP,EAAZ,EAAqBojB,eACnB,aAGR,eAAI3oB,UAAU,aAAY,SACA,OAAX,QAAZ,EAAAkkE,GAAU,UAAE,aAAZ,EAAc3+D,OACXuiB,GAAUmB,YAAVnB,KACAA,GAAUmB,YACV,KACY,QADT,EACHi7C,GAAU,UAAE,OAAO,QAAP,EAAZ,EAAc3+D,aAAK,WAAP,EAAZ,EAAqBojB,eACnB,aAGR,eAAI3oB,UAAU,aAAY,SACI,MAA3B3C,EAAK+qE,mBACFtgD,GAAUmB,YAAVnB,KACAA,GAAUmB,YACV,KACuB,QADpB,EACH5rB,EAAK+qE,0BAAkB,aAAvB,EAAyBz/C,eACvB,aAGR,eAAI3oB,UAAU,aAAY,SACG,MAA1B3C,EAAKgrE,kBACFvgD,GAAUmB,YAAVnB,KACAA,GAAUmB,YACV,KACsB,QADnB,EACH5rB,EAAKgrE,yBAAiB,aAAtB,EAAwB1/C,eACtB,gBAKV,2BACE,wBAAI,kBACJ,eAAI3oB,UAAU,aAAY,SACF,OAAX,QAAV,EAAA+0D,EAAQ,UAAE,aAAV,EAAYxvD,QACW,OAAX,QAAb,EAAAy+D,EAAW,UAAE,aAAb,EAAez+D,OACXuiB,GAAUmB,YAAVnB,KACAA,GAAUmB,YACV,KAIwB,QAJrB,GAES,QAAV,EAAA8rC,EAAQ,UAAE,aAAV,EAAYxvD,SACE,QAAb,EAAAy+D,EAAW,UAAE,aAAb,EAAez+D,QACF,QADO,EACnB2+D,GAAU,UAAE,aAAZ,EAAc3+D,eAAM,aAHxB,EAIGojB,eAAe,aAExB,eAAI3oB,UAAU,aAAY,SACF,OAAX,QAAV,EAAA+0D,EAAQ,UAAE,aAAV,EAAYxvD,OACTuiB,GAAUmB,YAAVnB,KACAA,GAAUmB,YACV,KAIwB,QAJrB,GAES,QAAV,EAAA8rC,EAAQ,UAAE,aAAV,EAAYxvD,SACE,QAAb,EAAAy+D,EAAW,UAAE,aAAb,EAAez+D,QACF,QADO,EACnB2+D,GAAU,UAAE,aAAZ,EAAc3+D,eAAM,aAHxB,EAIGojB,eAAe,aAExB,eAAI3oB,UAAU,aAAY,SACC,MAAxB3C,EAAK2qE,gBACFlgD,GAAUmB,YAAVnB,KACAA,GAAUmB,YACV,KAI4B,QAJzB,EAED5rB,EAAK2qE,iBACJ3qE,EAAK6qE,oBACJ7qE,EAAK+qE,2BAAmB,aAH5B,EAIGz/C,eAAe,aAExB,eAAI3oB,UAAU,aAAY,SACA,MAAvB3C,EAAK4qE,eACFngD,GAAUmB,YAAVnB,KACAA,GAAUmB,YACV,KAI2B,QAJxB,EAED5rB,EAAK4qE,gBACJ5qE,EAAK8qE,mBACJ9qE,EAAKgrE,0BAAkB,aAH3B,EAIG1/C,eAAe,gBAG1B,2BACE,wBAAI,SACJ,eAAI3oB,UAAU,aAAY,SACF,OAAX,QAAV,EAAA+0D,EAAQ,UAAE,aAAV,EAAYxvD,QACW,IAAX,QAAb,GAAAy+D,EAAW,UAAE,cAAb,GAAez+D,QACS,OAAX,QAAb,GAAAy+D,EAAW,UAAE,cAAb,GAAez+D,OACX,EASS,QATN,GAEDioD,KAAKka,MAID,MAHW,QAAV,GAAA3S,EAAQ,UAAE,cAAV,GAAYxvD,SACC,QAAb,GAAAy+D,EAAW,UAAE,cAAb,GAAez+D,QACF,QADO,GACnB2+D,GAAU,UAAE,cAAZ,GAAc3+D,UAEN,QADP,GACHwvD,EAAQ,UAAE,cAAV,GAAYxvD,OACZ,KACA,WAAG,cART,GASGojB,eAAe,YAExB,eAAI3oB,UAAU,aAAY,SACF,OAAX,QAAV,GAAA+0D,EAAQ,UAAE,cAAV,GAAYxvD,QACW,IAAX,QAAb,GAAAy+D,EAAW,UAAE,cAAb,GAAez+D,QACS,OAAX,QAAb,GAAAy+D,EAAW,UAAE,cAAb,GAAez+D,OACX,EASS,QATR,GAECioD,KAAKka,MAID,MAHW,QAAV,GAAA3S,EAAQ,UAAE,cAAV,GAAYxvD,SACC,QAAb,GAAAy+D,EAAW,UAAE,cAAb,GAAez+D,QACF,QADO,GACnB2+D,GAAU,UAAE,cAAZ,GAAc3+D,UAEN,QADP,GACHwvD,EAAQ,UAAE,cAAV,GAAYxvD,OACZ,KACA,WAAG,cART,GASGojB,eAAe,YAExB,eAAI3oB,UAAU,aAAY,SACC,MAAxB3C,EAAK2qE,kBASK,QATkB,GAEzBxa,KAAKka,MAID,KAHCrqE,EAAK2qE,iBACL3qE,EAAK6qE,oBACJ7qE,EAAK+qE,qBAEP/qE,EAAK2qE,gBACL,KACA,WAAG,cART,GASGr/C,eAAe,aAEtB,eAAI3oB,UAAU,aAAY,SACA,MAAvB3C,EAAK4qE,eACF,KASS,QATL,GAEFza,KAAKka,MAID,KAHCrqE,EAAK4qE,gBACL5qE,EAAK8qE,mBACJ9qE,EAAKgrE,oBAEPhrE,EAAK4qE,eACL,KACA,WAAG,cART,GASGt/C,eAAe,gBAGzB,gBAQE,IAAhBne,EAAK89D,SACU,IAAhB99D,EAAK89D,SACW,IAAhB99D,EAAK89D,SACH,gBAAKtoE,UAAU,sBAAqB,UAClC,gBAAKA,UAAU,iBAAgB,UAC7B,kBACEA,UAAU,qCACVovB,KAAK,OAAM,UAEX,8BACE,yBAGE,gBAAIv0B,MAAO,CAAEwP,MAAO,WAAY,WAC9B,SAAC,OAAa,KACd,iBAAMrK,UAAU,OAAM,SAAC,sCAS3B,yBACE,eAAIA,UAAU,MAAK,SAChByjE,EAAWlnE,KAAI,SAACiO,GAAI,OACnB,gBAAKxK,UAAU,6BAA4B,UACzC,iBAAKA,UAAU,qBAAoB,WACjC,gBAAKA,UAAU,kBAAiB,UAC9B,iBAAKA,UAAU,iBAAgB,WAC7B,kBACEA,UAAU,QACViN,QAAQ,oBAAmB,SAC5B,0BAGD,iBAAMjN,UAAU,YAAW,SAAC,OAC5B,gBAAKA,UAAU,QAAO,UACpB,2BAAQwK,EAAK+9D,yBAInB,gBAAKvoE,UAAU,kBAAiB,UAC9B,iBAAKA,UAAU,iBAAgB,WAC7B,kBACEA,UAAU,QACViN,QAAQ,oBAAmB,SAC5B,gCAGD,iBAAMjN,UAAU,YAAW,SAAC,OAC5B,gBAAKA,UAAU,QAAO,UACpB,uBAAIwK,EAAKg+D,2BAIf,gBAAKxoE,UAAU,kBAAiB,UAC9B,iBAAKA,UAAU,iBAAgB,WAC7B,kBACEA,UAAU,QACViN,QAAQ,oBAAmB,SAC5B,oCAGD,iBAAMjN,UAAU,YAAW,SAAC,OAC5B,gBAAKA,UAAU,QAAO,UACpB,uBAAIwK,EAAKi+D,wBAIf,gBAAKzoE,UAAU,kBAAiB,UAC9B,iBAAKA,UAAU,iBAAgB,WAC7B,kBACEA,UAAU,QACViN,QAAQ,oBAAmB,SAC5B,yCAGD,iBAAMjN,UAAU,YAAW,SAAC,OAC5B,gBAAKA,UAAU,QAAO,UACpB,uBAAIwK,EAAKk+D,2BAIf,gBAAK1oE,UAAU,kBAAiB,UAC9B,iBAAKA,UAAU,iBAAgB,WAC7B,kBACEA,UAAU,QACViN,QAAQ,oBAAmB,SAC5B,0CAGD,iBAAMjN,UAAU,YAAW,SAAC,OAC5B,gBAAKA,UAAU,QAAO,UACpB,uBAAIwK,EAAKm+D,sBAIf,gBAAK3oE,UAAU,kBAAiB,UAC9B,iBAAKA,UAAU,iBAAgB,WAC7B,kBACEA,UAAU,QACViN,QAAQ,oBAAmB,SAC5B,mDAID,iBAAMjN,UAAU,YAAW,SAAC,OAC5B,gBAAKA,UAAU,QAAO,UACpB,uBAAIwK,EAAKo+D,kBAIf,gBAAK5oE,UAAU,kBAAiB,UAC9B,iBAAKA,UAAU,iBAAgB,WAC7B,kBACEA,UAAU,QACViN,QAAQ,oBAAmB,SAC5B,0BAGD,iBAAMjN,UAAU,YAAW,SAAC,OAC5B,gBAAKA,UAAU,QAAO,UACpB,uBAAIwK,EAAKq+D,2BAKb,iBASpB,KAED,cAOjB,ECpyCA,I,YCzKe,SAASC,GAAgBpuE,GACVA,EAApBoM,KAAR,IAAcsI,EAAc1U,EAAd0U,UAGVilB,GAFYnzB,EAAAA,EAAAA,SAGd,SAAC,KAAW,WACV,UAAC,KAAG,YACF,SAAC,IAAM,CAACwR,UAAQ,EAACvI,OAAO,aAAa+hC,YAAa,YAClD,SAAC,IAAM,CAACx5B,UAAQ,EAACvI,OAAO,aAAa+hC,YAAa,YAClD,SAAC,IAAM,CAACx5B,UAAQ,EAACvI,OAAO,aAAa+hC,YAAa,YAClD,SAAC,IAAM,CAACx5B,UAAQ,EAACvI,OAAO,cAAc+hC,YAAa,iBAgCzD,OACE,gBAAKlsC,UAAU,cAAa,UAC1B,UAAC,IAAU,CACTuF,MAAO6J,EACPqQ,eAAa,EACbiV,kBAAmBL,EACnB2X,YAAU,EACVpsB,WAAS,EACTtS,KAAM,GACNg4B,kBAAmB,EACnBC,6BAA8B,CAAC,EAAG,GAAI,GAAI,IAC1CC,2BAA4B,CAC1BjJ,gBAAiB,oBACjBC,mBAAoB,UACpB,WAEF,SAAC,IAAM,CACL5pB,MAAM,aACNzI,OAAO,aACPwI,KA/CiB,SAACtV,GACxB,OACE,gBAAK,cAAY,UAAUsE,MAAOtE,EAAK0rE,WAAW,SAC/C1rE,EAAK0rE,YAGZ,KA2CM,SAAC,IAAM,CAACn2D,MAAM,YAAYzI,OAAO,YAAYwI,KA1C3B,SAACtV,GACvB,OACE,gBAAK,cAAY,UAAUsE,MAAOtE,EAAK2rE,UAAU,SAC9C3rE,EAAK2rE,WAGZ,KAqCM,SAAC,IAAM,CAACp2D,MAAM,YAAYzI,OAAO,YAAYwI,KApC3B,SAACtV,GACvB,OACE,gBAAK,cAAY,UAAUsE,MAAOtE,EAAK4rE,UAAU,SAC9C5rE,EAAK4rE,WAGZ,KA+BM,SAAC,IAAM,CAACr2D,MAAM,YAAYzI,OAAO,YAAYwI,KA9B3B,SAACtV,GACvB,OACE,gBAAK,cAAY,UAAUsE,MAAOtE,EAAK6rE,UAAU,SAC9C7rE,EAAK6rE,WAGZ,QA4BF,CCqJA,OA9NA,SAA0BxuE,GACxB,IAAQ4C,EAAyB5C,EAAzB4C,UAIR,GAJiC5C,EAAdsoB,UACU/R,MAC3B,SAACnT,GAAI,MAA2B,cAAtBA,EAAKiT,YAA4B,KAEP5P,EAAAA,EAAAA,UAAS,KAAG,eAA3CmK,EAAW,KAAE3G,EAAc,KAC5B1D,EAAUC,EAAAA,EAAAA,QAChB,GAAkCC,EAAAA,EAAAA,WAAS,GAAM,eACjD,GADgB,KAAc,MACYA,EAAAA,EAAAA,UAAS,KAAG,eAA/Cb,EAAa,KAAE49B,EAAgB,KAEtC,GAA4C/8B,EAAAA,EAAAA,UAAS,GAAE,eAAhDgoE,EAAc,KAAEC,EAAiB,KAExC,GAA0BjoE,EAAAA,EAAAA,UAAS,OAAM,eAAlCijC,EAAK,KAAE4G,EAAQ,KACtB,GAAoD7pC,EAAAA,EAAAA,WAAS,GAAM,eAA5DkoE,EAAkB,KAAEC,EAAqB,KAChD,GAAwBnoE,EAAAA,EAAAA,UAAS,IAAIuD,MAAO,eAArCqoB,EAAI,KAAEw8C,EAAO,KACpB,GAAwBpoE,EAAAA,EAAAA,WAAS,GAAM,eAAhC2F,EAAI,KAAEC,EAAO,KACpB,GAAkC5F,EAAAA,EAAAA,UAAS,IAAG,eAAvCiO,EAAS,KAAEC,EAAY,KAC9BlM,QAAQC,IAAIghC,GACZjhC,QAAQC,IAAI,OAAQ0D,GAEpB,OAAyC3F,EAAAA,EAAAA,UAAS,CAChDqoE,IAAK,QACLjF,MAAOjnE,EACPizB,IAAK,aACL6T,MAAOA,IACP,eALKqlC,EAAY,KAMnB,GANqC,MAMLtoE,EAAAA,EAAAA,UAASsoE,IAAa,eAA/C/iE,EAAQ,KACT5F,GADsB,KACPC,aAAaC,QAAQ,UAE1C,GAA4BG,EAAAA,EAAAA,UAAS,IAAG,eAAjCyP,EAAM,KAAEC,GAAS,MAqBxBpT,EAAAA,EAAAA,YAAU,WAdRuE,IAAM,CACJC,OAAQ,MACRC,IAAKjB,EAAO,iDAA6CH,KACxDuB,MAAK,SAACE,GACIA,EAAKlF,KAEXwB,SAAQ,SAACf,GAXA,aAYRA,EAAKiT,cACPF,GAAU,CAAC/S,GAEf,GACF,GAKF,GAAG,KAKHL,EAAAA,EAAAA,YAAU,WACRisE,KACA3tD,IACF,GAAG,CAACqoB,IACJ,IAAMslC,GAAuB,WAC3B1nE,IAAM,CACJC,OAAQ,MACRC,IACEjB,EAAO,qDACuCyF,EAAS8iE,IAAG,kBAAU9iE,EAAS69D,MAAK,gBAAQ79D,EAAS6pB,IAAG,kBAAU6T,KACjH/hC,MAAK,SAAUC,GAChB,IACwB,EADpBw1D,EAAKx1D,EAASjF,KAAK,WACDy6D,GAAE,IAAxB,2BAA0B,CAAC,IAAhBxuD,EAAO,QAChB,GAAmB,OAAfA,EAAQtN,IAAkC,MAAnBsN,EAAQqgE,OAAgB,CACjD,IAAMC,EAActgE,EAAQtM,KAAK0a,QAAQ,kBAAmB,IAE5DpO,EAAQtM,KAAO4sE,CACjB,CACF,CAAC,+BACD1rC,EAAiB45B,GACjBsR,GAAkB,SAACvlE,GAAI,OAAKA,EAAO,CAAC,IACpCylE,GAAsB,EACxB,GACF,EACMvtD,GAAiB,WACrB/Z,IAAM,CACJC,OAAQ,MACRC,IACEjB,EAAO,6DAC+C3D,KAEvD+E,MAAK,SAAUC,GACd,IAAIC,EAAOD,EAASjF,KACpBsH,EAAepC,EACjB,IACCC,OAAM,SAAUF,GAAW,GAChC,EAIA,OAFAa,QAAQC,IAAI,UAAYkI,IAGtB,iCACE,iBAAKtL,UAAU,YAAW,WACxB,gBAAKA,UAAU,WAAU,UACvB,wBAAKsL,EAAYA,iBAEnB,gBAAKtL,UAAU,WAAU,UACvB,wBAAI,yBAEN,gBAAKA,UAAU,mBAEjB,SAACoT,EAAA,EAAiB,CAChBxC,OAAQA,EACRyC,kBAhFkB,CAAC,WAAY,OAAQ,UAAW,wBAmFpD,gBACErT,UAAU,sCACVnF,MAAO,CAAEylB,gBAAiB,WAAY,UAEtC,kBACEzlB,MAAO,CACLgvE,UAAW,WACXxqE,QAAS,OACTy1C,eAAgB,gBAChBx1C,WAAY,SACZ8pD,WAAY,UACZ,WAEF,mBAAOppD,UAAU,OAAOnF,MAAO,CAAEykB,WAAY,QAAS,UACnD,IAAI,aAGP,SAAC,IAAU,CACTtf,UAAU,eACVyM,aAAa,SACbq9D,4BAA0B,EAC1Bv9D,mBAAiB,EACjBC,kBAAgB,EAChBL,SAAU4gB,EACVzgB,WAAW,cACXf,SAAU,SAACwhB,GAAI,OAAKw8C,EAAQx8C,EAAK,EACjClyB,MAAO,CAAEC,MAAO,gBAItB,iBAAKkF,UAAU,wCAAuC,WACpD,iBACEA,UAAU,uBACVnF,MAAO,CAAEylB,gBAAiB,aAAc,WAExC,iBACEtgB,UAAU,YACVnF,MAAO,CACLggE,aAAc,iBACdG,WAAY,UACZjgE,OAAQ,QACR,WAEF,mBAAOF,MAAO,CAAEqrB,MAAO,QAAS6jD,WAAY,OAAQ,UAAC,QAEnD,oBACElvE,MAAO,CAAE8B,WAAY,QACrBX,GAAG,SACHuP,SAAU,SAAC7H,GACTP,QAAQC,IAAIM,EAAEmH,OAAOtF,OACrBylC,EAAStnC,EAAEmH,OAAOtF,OAClBmkE,IACF,EAAE,WAEF,mBAAQnkE,MAAM,MAAK,SAAC,SACpB,mBAAQA,MAAM,SAAQ,SAAC,kBAG3B,gBAAKvF,UAAU,WAAU,UACvB,eACEnF,MAAO,CACL2lB,UAAW,SACXnW,MAAO,UACPzP,SAAU,OACVmvE,WAAY,OACZ,SACH,2BAMkB,GAAtBV,GACC,SAACW,GAAA,EAAoB,CACnB5sE,oBAAqBtB,QAAQ,GAC7BuB,KAAMiD,EACNyG,QAASA,EACTD,KAAMA,EACNuI,aAAcA,EACd/D,YAAaA,EACb69D,eAAgBA,IAGlB,MAGHhmE,QAAQC,IAAI9C,IACb,iBACEN,UAAU,sCACV,WAEA,gBAAKA,UAAU,WAAU,UACvB,eACEnF,MAAO,CACL2lB,UAAW,SACXF,gBAAiB,WAEjB,SACH,mBAIFxZ,GAAO,SAACgiE,GAAe,CAAC15D,UAAWA,IAAgB,aAK9D,E,yBCkNA,OAtZA,SAAiB1U,GAAQ,IAAD,oBAChB0pC,GAAQ6lC,EAAAA,GAAAA,MAGRhpE,GAFMyyB,OAAOihC,SAAS5gC,KACL9Z,MAAM,KACb/Y,EAAAA,EAAAA,SAChB,GAAgCC,EAAAA,EAAAA,UAAS,WAAU,eAA5CwpC,EAAQ,KAAEC,EAAW,KAQ5B,GAAkCzpC,EAAAA,EAAAA,UAAS,GAAE,eAAtC7D,EAAS,KAAE4sE,EAAY,KACxBppE,EAAeC,aAAaC,QAAQ,SAC1C,GAAgCG,EAAAA,EAAAA,UAAS,IAAG,eAArCgpE,EAAQ,KAAEC,EAAW,KAC5B,GAAkCjpE,EAAAA,EAAAA,UAAS,IAAG,eAAvC6hB,EAAS,KAAEqnD,EAAY,KAC9B,GAAkClpE,EAAAA,EAAAA,UAAS,IAAG,eAAvC+jD,EAAS,KAAEolB,EAAY,KAC9B,GAAkCnpE,EAAAA,EAAAA,UAAS,IAAG,eAAvCgmC,EAAS,KAAEojC,EAAY,KAC9B,GAAkCppE,EAAAA,EAAAA,UAAS,IAAG,eAAvCwN,EAAS,KAAE67D,EAAY,KAC9B,GAAkCrpE,EAAAA,EAAAA,UAAS,IAAG,gBAAvCq2C,GAAS,MAAEizB,GAAY,MAyD9B,OAlBAhtE,EAAAA,EAAAA,YAAU,WACR,IAAIitE,EAAY,OAALtmC,QAAK,IAALA,OAAK,EAALA,EAAOA,OAxBH,WACf,IACMumC,EADMj3C,OAAOihC,SAAS5gC,KACL9Z,MAAM,KACvB2wD,EAAaD,EAAWA,EAAW98D,OAAS,GAClD7L,IAAAA,IAEIf,EAAO,iDACqC2pE,EAAU,yBAAiB9pE,EAAY,kCAEpFuB,MAAK,SAACE,GACL,IAAMlF,EAAOkF,EAAKlF,KAClB+sE,EAAY/sE,GACZgtE,EAAahtE,EAAKQ,QAAO,SAACC,GAAI,OAAkB,IAAbA,EAAK+sE,GAAS,KACjDP,EAAajtE,EAAKQ,QAAO,SAACC,GAAI,OAAkB,IAAbA,EAAK+sE,GAAS,KACjDN,EAAaltE,EAAKQ,QAAO,SAACC,GAAI,OAAkB,IAAbA,EAAK+sE,GAAS,KACjDL,EAAantE,EAAKQ,QAAO,SAACC,GAAI,OAAkB,IAAbA,EAAK+sE,GAAS,KACjDJ,GAAaptE,EAAKQ,QAAO,SAACC,GAAI,OAAkB,IAAbA,EAAK+sE,GAAS,IACnD,IACCroE,OAAM,SAACgV,GACNrU,QAAQC,IAAIoU,EACd,GACJ,CAIEszD,GACA,IAAM5oE,EAAMwxB,OAAOihC,SAAS5gC,KACxB7xB,EAAIkM,SAAS,aACfw8B,EAAY,oBAEV1oC,EAAIkM,SAAS,aACfw8B,EAAY,aAEV1oC,EAAIkM,SAAS,iBACfw8B,EAAY,iBAEd,IAAI+/B,EAAazoE,EAAI+X,MAAM,KAC3BiwD,EAAaS,EAAWA,EAAW98D,OAAS,SAC1BrH,IAAd,OAAJkkE,QAAI,IAAJA,OAAI,EAAJA,EAAM//B,WAAyBC,EAAgB,OAAJ8/B,QAAI,IAAJA,OAAI,EAAJA,EAAM//B,SACnD,GAAG,KAGD,yBACGw/B,EAASt8D,OAAS,GACjB,4BACE,gBAAI7N,UAAU,gBAAe,WAC3B,+BACiCwG,IAAlB,QAAZ,EAAAwc,EAAU,UAAE,aAAZ,EAAcjS,eACb,0BAAmB,QAAnB,EAAOiS,EAAU,UAAE,aAAZ,EAAcjS,eAErB,IAEF,wBACGiS,EAAUlE,MAAM,GAAGviB,KAAI,SAACwuE,GAAM,OAC7B,eACE/qE,UACE2qC,IAAaogC,EAAOh6D,aAChB,qBACA,gBAENnP,QAAS,WACPgpC,EAAYmgC,EAAOh6D,aACrB,EAAE,SAEDg6D,EAAOh6D,cACL,SAGL,KACN,+BACiCvK,IAAlB,QAAZ,EAAA0+C,EAAU,UAAE,aAAZ,EAAcn0C,eACb,0BAAmB,QAAnB,EAAOm0C,EAAU,UAAE,aAAZ,EAAcn0C,eAErB,IAEF,wBACGm0C,EAAUpmC,MAAM,GAAGviB,KAAI,SAACwuE,GAAM,OAC7B,eACE/qE,UACE2qC,IAAaogC,EAAOh6D,aAChB,qBACA,gBAENnP,QAAS,WACPgpC,EAAYmgC,EAAOh6D,aACrB,EAAE,SAEDg6D,EAAOh6D,cACL,SAGL,KACN,+BACiCvK,IAAlB,QAAZ,EAAA2gC,EAAU,UAAE,aAAZ,EAAcp2B,eACb,0BAAmB,QAAnB,EAAOo2B,EAAU,UAAE,aAAZ,EAAcp2B,eAErB,IAEF,wBACGo2B,EAAUroB,MAAM,GAAGviB,KAAI,SAACwuE,GAAM,OAC7B,eACE/qE,UACE2qC,IAAaogC,EAAOh6D,aAChB,qBACA,gBAENnP,QAAS,WACPgpC,EAAYmgC,EAAOh6D,aACrB,EAAE,SAEDg6D,EAAOh6D,cACL,SAGL,KACN,+BACiCvK,IAAlB,QAAZ,EAAAmI,EAAU,UAAE,aAAZ,EAAcoC,eACb,0BAAmB,QAAnB,EAAOpC,EAAU,UAAE,aAAZ,EAAcoC,eAErB,IAEF,wBACGpC,EAAUmQ,MAAM,GAAGviB,KAAI,SAACwuE,GAAM,OAC7B,eACE/qE,UACE2qC,IAAaogC,EAAOh6D,aAChB,qBACA,gBAENnP,QAAS,WACPgpC,EAAYmgC,EAAOh6D,aACrB,EAAE,SAEDg6D,EAAOh6D,cACL,SAGL,KACN,+BACiCvK,IAAlB,QAAZ,EAAAgxC,GAAU,UAAE,aAAZ,EAAczmC,eACb,0BAAmB,QAAnB,EAAOymC,GAAU,UAAE,aAAZ,EAAczmC,eAErB,IAEF,wBACGymC,GAAU14B,MAAM,GAAGviB,KAAI,SAACwuE,GAAM,OAC7B,eACE/qE,UACE2qC,IAAaogC,EAAOh6D,aAChB,qBACA,gBAENnP,QAAS,WACPgpC,EAAYmgC,EAAOh6D,aACrB,EAAE,SAEDg6D,EAAOh6D,cACL,YAMC,UAAb45B,GACC,SAAC,EAAY,CACXrtC,UAAWA,EACXqR,UAAWw7D,EAAStsE,QAAO,SAACC,GAAI,OAAkB,IAAbA,EAAK+sE,GAAS,MAGrD,GAEY,WAAblgC,GACC,SAAC,EAAa,CACZrtC,UAAWA,EACXqR,UAAWw7D,EAAStsE,QAAO,SAACC,GAAI,OAAkB,IAAbA,EAAK+sE,GAAS,MAGrD,GAEY,YAAblgC,GACC,SAAC,EAAc,CACbrtC,UAAWA,EACXqR,UAAWw7D,EAAStsE,QAAO,SAACC,GAAI,OAAkB,IAAbA,EAAK+sE,GAAS,MAGrD,GAEY,oBAAblgC,GACC,SAAC,EAAsB,CACrBrtC,UAAWA,EACXqR,UAAWw7D,EAAStsE,QAAO,SAACC,GAAI,OAAkB,IAAbA,EAAK+sE,GAAS,MAGrD,GAEY,iBAAblgC,GACC,SAAC,EAAY,CACXrtC,UAAWA,EACX0lB,UAAWmnD,EAAStsE,QAAO,SAACC,GAAI,OAAkB,IAAbA,EAAK+sE,GAAS,MAGrD,GAEY,WAAblgC,GACC,SAAC,GAAa,CACZrtC,UAAWA,EACXqR,UAAWw7D,EAAStsE,QAAO,SAACC,GAAI,OAAkB,IAAbA,EAAK+sE,GAAS,MAGrD,GAEY,cAAblgC,GACC,SAAC,GAAe,CACdrtC,UAAWA,EACXqR,UAAWw7D,EAAStsE,QAAO,SAACC,GAAI,OAAkB,IAAbA,EAAK+sE,GAAS,MAGrD,GAEY,eAAblgC,GACC,SAAC,GAAgB,CACfrtC,UAAWA,EACXqR,UAAWw7D,EAAStsE,QAAO,SAACC,GAAI,OAAkB,IAAbA,EAAK+sE,GAAS,MAGrD,GAEY,kBAAblgC,GACC,SAAC,GAAmB,CAClBrtC,UAAWA,EACXqR,UAAWw7D,EAAStsE,QAAO,SAACC,GAAI,OAAkB,IAAbA,EAAK+sE,GAAS,MAGrD,GAEY,cAAblgC,GACC,SAACqgC,GAAA,EAAgB,CACf1tE,UAAWA,EACXqR,UAAWw7D,EAAStsE,QAAO,SAACC,GAAI,OAAkB,IAAbA,EAAK+sE,GAAS,MAGrD,GAEY,cAAblgC,GACC,SAAC,GAAS,CACRrtC,UAAWA,EACX0lB,UAAWmnD,EAAStsE,QAAO,SAACC,GAAI,OAAkB,IAAbA,EAAK+sE,GAAS,MAGrD,GAEY,qBAAblgC,GACC,SAAC,GAAe,CACdrtC,UAAWA,EACX0lB,UAAWmnD,EAAStsE,QAAO,SAACC,GAAI,OAAkB,IAAbA,EAAK+sE,GAAS,MAGrD,GAEY,aAAblgC,GACC,SAAC,GAAe,CACdrtC,UAAWA,EACX6pC,UAAWgjC,EAAStsE,QAAO,SAACC,GAAI,OAAkB,IAAbA,EAAK+sE,GAAS,MAGrD,GAEY,uBAAblgC,GACC,SAAC,GAAiB,CAChBrtC,UAAWA,EACX4nD,UAAWilB,EAAStsE,QAAO,SAACC,GAAI,OAAkB,IAAbA,EAAK+sE,GAAS,MAGrD,GAEY,uBAAblgC,GACC,SAAC,GAAgB,CACfrtC,UAAWA,EACX6pC,UAAWgjC,EAAStsE,QAAO,SAACC,GAAI,OAAkB,IAAbA,EAAK+sE,GAAS,MAGrD,GAEY,WAAblgC,GACC,SAAC,GAAa,CACZrtC,UAAWA,EACXqR,UAAWw7D,EAAStsE,QAAO,SAACC,GAAI,OAAkB,IAAbA,EAAK+sE,GAAS,MAGrD,GAEY,eAAblgC,GACC,SAACwH,GAAiB,CAChB70C,UAAWA,EACXqR,UAAWw7D,EAAStsE,QAAO,SAACC,GAAI,OAAkB,IAAbA,EAAK+sE,GAAS,MAGrD,GAEY,iBAAblgC,GACC,SAAC,GAAmB,CAClBrtC,UAAWA,EACXqR,UAAWw7D,EAAStsE,QAAO,SAACC,GAAI,OAAkB,IAAbA,EAAK+sE,GAAS,MAGrD,GAEY,SAAblgC,GACC,SAACsgC,GAAA,QAAW,CACVtgC,SAAUA,EACVC,YAAaA,EACbttC,UAAWA,EACX0lB,UAAWmnD,EAAStsE,QAAO,SAACC,GAAI,OAAkB,IAAbA,EAAK+sE,GAAS,MAGrD,GAEY,eAAblgC,GACC,SAAC,GAAiB,CAChBrtC,UAAWA,EACXk6C,UAAW2yB,EAAStsE,QAAO,SAACC,GAAI,OAAkB,IAAbA,EAAK+sE,GAAS,MAGrD,GAEY,cAAblgC,GACC,SAAC,GAAQ,CACPrtC,UAAWA,EACX4nD,UAAWilB,EAAStsE,QAAO,SAACC,GAAI,OAAkB,IAAbA,EAAK+sE,GAAS,MAGrD,GAEY,cAAblgC,GACC,SAAC,GAAgB,CACfrtC,UAAWA,EACX0lB,UAAWmnD,EAAStsE,QAAO,SAACC,GAAI,OAAkB,IAAbA,EAAK+sE,GAAS,MAGrD,GAEY,kBAAblgC,GACC,SAAC,GAAY,CACXrtC,UAAWA,EACX4nD,UAAWilB,EAAStsE,QAAO,SAACC,GAAI,OAAkB,IAAbA,EAAK+sE,GAAS,MAGrD,GAGY,QAAblgC,GACC,SAAC,GAAiB,CAChBrtC,UAAWA,EACXk6C,UAAW2yB,EAAStsE,QAAO,SAACC,GAAI,OAAkB,IAAbA,EAAK+sE,GAAS,MAGrD,OAIJ,gBAAK7qE,UAAU,kBAAiB,UAC9B,kBAAMA,UAAU,cAAa,WAC3B,SAAC,MAAa,IAAG,4DAO7B,C,uYC/YMkrE,EAAa,SAACxwE,GAClB,IACEywE,EAQEzwE,EARFywE,MACAC,EAOE1wE,EAPF0wE,SAEAC,GAKE3wE,EANFwJ,cAMExJ,EALF2wE,kBACAC,EAIE5wE,EAJF4wE,SACAC,EAGE7wE,EAHF6wE,WACAC,EAEE9wE,EAFF8wE,YAEE9wE,EADF+wE,SAGcvqE,EAAAA,EAAAA,QAEhB,OACE,0BACE,SAAC,IAAS,WACR,UAAC,KAAM,CACLI,QAAS6pE,EACT5pE,KAAK,KACLvB,UAAU,YACVwB,QAAS,kBAAM4pE,GAAS,EAAM,EAAC,WAE/B,SAAC,KAAY,CAACprE,UAAU,GAAE,UACxB,SAAC,KAAW,WACV,iBAAMA,UAAU,UAGpB,UAAC,KAAU,WACM,GAAdurE,GACC,wBAAI,8JAMJ,wBAAI,0KAMN,iBAAKvrE,UAAU,4BAA2B,WACxC,oBACEA,UAAU,kBACV4B,QAAS,WACPypE,IACAD,GAAS,GACTI,EAAYD,EACd,EAAE,WAEF,SAAC,MAAa,IAAG,UAGnB,oBACEvrE,UAAU,kBACV4B,QAAS,WACY,IAAf2pE,EACFH,GAAS,IAETE,IACAF,GAAS,GACTI,EAAYD,GAEhB,EAAE,WAEF,SAAC,MAAa,IAAG,SAGJ,GAAdA,EACC,IAEA,oBACEvrE,UAAU,oBACV4B,QAAS,WACPwpE,GAAS,EACX,EAAE,WAEF,SAAC,MAAO,IAAG,UAAQ,mBASrC,EAyoHA,MAvoHA,SAAqB,GAAmB,EAAjBM,kBAA2B,EAAR/gC,SAA0B,IAAD,wlBAAfC,GAAW,EAAXA,YAC5C+pB,IAAWsV,EAAAA,EAAAA,MAGb0B,IAFiB,OAARhX,SAAQ,IAARA,IAAAA,GAAUvwB,MAEF1Q,OAAOihC,SAAS5gC,KAAK9Z,MAAM,MAC5C3c,GAAYquE,GAAeA,GAAe99D,OAAS,GAEjD/M,GAAeC,aAAaC,QAAQ,SAEpCC,GAAUC,EAAAA,EAAAA,QAChB,IAAgCC,EAAAA,EAAAA,UAAS,IAAG,iBAArC8b,GAAQ,MAAE2uD,GAAW,MAC5B,IAAgCzqE,EAAAA,EAAAA,UAAS,IAAG,iBAArC+tB,GAAQ,MAAE28C,GAAW,MAC5B,IAAwB1qE,EAAAA,EAAAA,UAAS,IAAG,iBAA7B2qE,GAAI,MAAEC,GAAO,MACpB,IAA8B5qE,EAAAA,EAAAA,UAAS,IAAG,iBAAnCqwD,GAAO,MAAEwa,GAAU,MAC1B,IAA0B7qE,EAAAA,EAAAA,UAAS,IAAG,iBAA/BgU,GAAK,MAAE82D,GAAQ,MACtB,IAAsC9qE,EAAAA,EAAAA,UAAS,IAAG,iBAA3CoD,GAAW,MAAE+L,GAAc,MAElC,IAAwBnP,EAAAA,EAAAA,UAAS,IAAG,iBAA7BO,GAAI,MAAEuO,GAAO,MACpB,IAAgC9O,EAAAA,EAAAA,UAAS,IAAG,iBAArC+kC,GAAQ,MAAE6G,GAAW,MAC5B,IAAgC5rC,EAAAA,EAAAA,UAAS,IAAG,iBAArCyjE,GAAQ,MAAEsH,GAAW,MAC5B,IAAgC/qE,EAAAA,EAAAA,UAAS,IAAG,iBAArColE,GAAQ,MAAE4F,GAAW,MAC5B,IAA8ChrE,EAAAA,EAAAA,UAAS,IAAG,iBAAnDirE,GAAe,MAAEC,GAAkB,MAC1C,IAA4BlrE,EAAAA,EAAAA,UAAS,IAAG,iBAAjCmrE,GAAM,MAAEC,GAAS,MACxB,IAAoCprE,EAAAA,EAAAA,UAAS,IAAG,iBAA7BuiE,IAAF,MAAe,OAEhC,IAA8BviE,EAAAA,EAAAA,UAAS,IAAG,iBAA1B2a,IAAF,MAAY,OAC1B,IAAsC3a,EAAAA,EAAAA,UAAS,IAAG,iBAA3CqrE,GAAW,MAAEC,GAAc,MAClC,IAA8BtrE,EAAAA,EAAAA,UAAS,CACrCurE,mBAAoB,GACpBC,kBAAmB,KACnB,iBAHK9I,GAAO,MAAEC,GAAU,MAK1B,IAAsC3iE,EAAAA,EAAAA,UAAS,IAAG,iBAA9ByrE,IAAF,MAAgB,OAClC,IAAoBzrE,EAAAA,EAAAA,UAAS,IAAG,iBAArB0rE,IAAF,MAAO,OAChB,IAA8B1rE,EAAAA,EAAAA,UAAS,IAAG,iBAAnCwiE,GAAO,MAAEC,GAAU,MAC1B,IAA8BziE,EAAAA,EAAAA,UAAS,CACrC4zD,QAAS,GACT+X,kBAAmB,KACnB,iBAHK/X,GAAO,MAAEgP,GAAU,MAK1B,IAAoC5iE,EAAAA,EAAAA,UAAS,CAC3C4rE,eAAgB,GAChBC,YAAa,KACb,iBAHKhJ,GAAU,MAAEC,GAAa,MAIhC,IAA8C9iE,EAAAA,EAAAA,UAAS,IAAG,iBAAlC8rE,IAAF,MAAoB,OAC1C,IAAkC9rE,EAAAA,EAAAA,UAAS,CACzC+rE,qBAAsB,GACtBC,kBAAmB,KACnB,iBAHKjJ,GAAS,MAAEC,GAAY,MAK9B,IAAwDhjE,EAAAA,EAAAA,UAAS,GAAE,iBAA5DisE,GAAoB,MAAEC,GAAuB,MACpD,IAAgClsE,EAAAA,EAAAA,UAAS,GAAE,iBAApCmsE,GAAQ,MAAEC,GAAW,MAC5B,IAAgCpsE,EAAAA,EAAAA,UAAS,IAAG,iBAArCqsE,GAAQ,MAAEC,GAAW,MAC5B,IAA4CtsE,EAAAA,EAAAA,UAAS,GAAE,iBAAhDusE,GAAc,MAAEC,GAAiB,MACxC,IAAgDxsE,EAAAA,EAAAA,UAAS,GAAE,iBAApDysE,GAAgB,MAAEC,GAAmB,MAC5C,IAA8B1sE,EAAAA,EAAAA,UAAS,IAAG,iBAAnC2sE,GAAO,MAAEC,GAAU,MAC1B,IAA4B5sE,EAAAA,EAAAA,UAAS,IAAG,iBAAjC6sE,GAAM,MAAEC,GAAS,MACxB,IAA4B9sE,EAAAA,EAAAA,UAAS,IAAG,iBAAjC+sE,GAAM,MAAEC,GAAS,MACxB,IAAsChtE,EAAAA,EAAAA,UAAS,IAAG,iBAA3CkiE,GAAW,MAAEC,GAAc,MAClC,IAAwCniE,EAAAA,EAAAA,UAAS,IAAG,iBAA7CoiE,GAAY,MAAEC,GAAe,MACpC,IAA8CriE,EAAAA,EAAAA,UAAS,IAAG,iBAAnDitE,GAAe,MAAEC,GAAkB,MAC1C,IAAgDltE,EAAAA,EAAAA,UAAS,IAAG,iBAArDmtE,GAAgB,MAAEC,GAAmB,MAC5C,IAAoCptE,EAAAA,EAAAA,UAAS,IAAG,iBAAzCqtE,GAAU,MAAEC,GAAa,MAChC,IAAwCttE,EAAAA,EAAAA,UAAS,IAAG,iBAA7CutE,GAAY,MAAEC,GAAe,MACpC,IAAwCxtE,EAAAA,EAAAA,UAAS,IAAG,iBAA7CuzD,GAAY,MAAE0O,GAAe,MAChCt7C,GAAYna,SAASoa,cAAc,OAEvC,IADkBpa,SAASkK,eAAe,QACF1W,EAAAA,EAAAA,UAAS,KAAG,iBAA7CytE,GAAY,MAAEC,GAAe,MACpC,IAAoC1tE,EAAAA,EAAAA,UAAS,IAAG,iBAAzC2tE,GAAU,MAAEC,GAAa,MAEhC,IAA0C5tE,EAAAA,EAAAA,YAAU,iBAA7C6tE,GAAa,MAAEC,GAAgB,MACtC,IAAsC9tE,EAAAA,EAAAA,YAAU,iBAAzC+tE,GAAW,MAAEC,GAAc,MAClC,IAAwChuE,EAAAA,EAAAA,YAAU,iBAA3C+lE,GAAY,MAAEkI,GAAe,MACpC,IAAkDjuE,EAAAA,EAAAA,WAAS,GAAM,iBAA1DwE,GAAiB,MAAEC,GAAoB,MAC9C,IAAkDzE,EAAAA,EAAAA,WAAS,GAAM,iBAA1DkuE,GAAiB,MAAEC,GAAoB,MAC9C,IAAgCnuE,EAAAA,EAAAA,UAAS,IAAG,iBAArCutC,GAAQ,MAAE6gC,GAAW,MAC5B,IAAsCpuE,EAAAA,EAAAA,UAAS,IAAG,iBAA3CquE,GAAW,MAAEC,GAAc,MAClC,IAAsCtuE,EAAAA,EAAAA,UAAS,IAAG,iBAA3CuuE,GAAW,MAAEC,GAAc,MAClC,IAAoCxuE,EAAAA,EAAAA,UAAS,IAAG,iBAAzCgmE,GAAU,MAAEyI,GAAa,MAChC,IAA0BzuE,EAAAA,EAAAA,WAAS,GAAM,iBAAlCgqE,GAAK,MAAEC,GAAQ,MACtB,IAAwBjqE,EAAAA,EAAAA,WAAS,GAAM,iBAAhC0uE,GAAI,MAAEC,GAAO,MACdvsE,IAAML,EAAAA,EAAAA,QAAO,IACnB,IAAoC/B,EAAAA,EAAAA,UAAS,IAAG,iBAAzCoqE,GAAU,MAAEwE,GAAa,MAChC,IAAgC5uE,EAAAA,EAAAA,UAAS,IAAG,iBAArCsqE,GAAQ,MAAED,GAAW,MACtBt6D,IAAkBhO,EAAAA,EAAAA,QAAO,MAEzB8O,GAAyB,WAC7B1B,GAAe,IACfY,GAAgBzF,QAAU,IAAIsa,gBAC9B/jB,IAAM,CACJC,OAAQ,MACRC,IACEjB,GAAO,4DAC8C3D,MAEtD+E,MAAK,SAAUC,GACd,IAAMC,EAAOD,EAASjF,KACtByyE,IAAQ,GACRntE,YAAW,WACTmtE,IAAQ,GACRx/D,GAAe/N,EACjB,GAAG,KAEHytE,GAAcztE,EAAK,GAAG+lE,SACtB2H,GAAY1tE,EAAK,GAAG+6D,aACpBkO,GAAYjpE,EAAK,GAAG2tE,eACpBC,GAAe5tE,EAAK,GAAG6tE,aACvBC,GAAgB9tE,EAAK,GAAGwiE,cACxBuL,GAAkB/tE,EAAK,GAAGwiE,cAC1BwL,GAAYhuE,EAAK,GAAGwiE,cACpBX,GAAgB7hE,EAAK,GAAG+I,aACxB3I,YAAW,WACTgL,SAASgF,KAAKiM,OAChB,GAAG,IACL,IACCpc,OAAM,SAAUF,GACfa,QAAQC,IAAId,EACd,GACJ,EA0CM2tE,GAAc,SAACO,GACnBxuE,IAAM,CACJC,OAAQ,MACRC,IACEjB,GAAO,6DAC+CuvE,KACvDnuE,MAAK,SAACgH,GACP,IAAIwuB,EAASxuB,EAAIhM,KACjB6uE,GAAYr0C,EACd,GACF,EACMs4C,GAAiB,SAACM,GACtBzuE,IAAM,CACJC,OAAQ,MACRC,IACEjB,GAAO,+DACiDwvE,KACzDpuE,MAAK,SAACgH,GACP,IAAIwuB,EAASxuB,EAAIhM,KACjBovE,GAAe50C,EACjB,GACF,EACMy4C,GAAoB,SAACI,GACzB1uE,IAAM,CACJC,OAAQ,MACRC,IACEjB,GAAO,kEACoDyvE,KAE5DruE,MAAK,SAACgH,GACL,IAAIhM,EAAOgM,EAAIhM,KACfgvE,GAAmBhvE,EACrB,IACCmF,OAAM,SAACC,GACNU,QAAQC,IAAI,UAAYX,EAC1B,GACJ,EACM4tE,GAAkB,SAACK,GACvB1uE,IAAM,CACJC,OAAQ,MACRC,IACEjB,GAAO,iEACmDyvE,KAE3DruE,MAAK,SAACgH,GACL,IAAIhM,EAAOgM,EAAIhM,KACf8uE,GAAY9uE,EACd,IACCmF,OAAM,SAACC,GACNU,QAAQC,IAAI,UAAYX,EAC1B,GACJ,EAEMkuE,GAAiB,WACrBrN,GAAe,IACfthE,IAAM,CACJC,OAAQ,MACRC,IAAKjB,GAAO,sDAAkD3D,MAE7D+E,MAAK,SAAUC,GACd,IAAIC,EAAOD,EAASjF,KACpBimE,GAAe/gE,EACjB,IACCC,OAAM,SAAUF,GACfa,QAAQC,IAAId,EACd,GACJ,EA0EMsuE,GAAe,WACnB5uE,IAAM,CACJC,OAAQ,MACRC,IAAKjB,GAAO,kDAA8C3D,MAEzD+E,MAAK,SAAUC,GACd,IAAIC,EAAOD,EAASjF,KAChBkF,EAAKsL,OAAS,GAChBs2D,GAAa,CACX+I,qBAAsB3qE,EAAK,GAAGgD,MAC9B4nE,kBAAmB5qE,EAAK,GAAGgD,OAGjC,IACC/C,OAAM,SAAUF,GACfa,QAAQC,IAAId,EACd,GACJ,EA8CMuuE,GAAa,WACjB7uE,IAAM,CACJC,OAAQ,MACRC,IAAKjB,GAAO,gDAA4C3D,MAEvD+E,MAAK,SAAUC,GACd,IACqB,EADjBC,EAAOD,EAASjF,KAChBkF,EAAKsL,OAAS,GAChBk2D,GAAW,CACThP,QAASxyD,EAAK,GAAGgD,OAAS,GAC1BunE,mBAA0B,QAAP,EAAAvqE,EAAK,UAAE,aAAP,EAASgD,QAAS,KAI9BhD,EAAK,GAAGgD,MACEhD,EAAK,GAAGgD,KAE/B,IACC/C,OAAM,SAAUF,GACfa,QAAQC,IAAId,EACd,GACJ,EAEM8hE,GAAkB,SAAC5gE,GACvBxB,IAAM,CACJC,OAAQ,OACRC,IAAKjB,GAAO,qCACZ5D,KAAM,CACJgnE,eAAgB,KAChBC,SAAU,KACVzoD,QAASrY,EACT+gE,MAAOjnE,GACPknE,cAAe,KACfC,SAAU,KACV1+D,OAAQ,KACR2+D,GAAI,QAGLriE,MAAK,SAACgH,GACMA,EAAIhM,KACfumE,GAAWv6D,EAAIhM,KACjB,IACCgF,MAAK,SAACI,GACL,GAEN,EAEMquE,GAAa,WACjB9uE,IAAM,CACJC,OAAQ,MACRC,IAAKjB,GAAO,gDAA4C3D,MAEvD+E,MAAK,SAAUC,GACd,IAAIC,EAAOD,EAASjF,KAEhBkF,EAAKsL,OAAS,GAChBi2D,GAAW,CACT4I,mBAAoBnqE,EAAK,GAAGgD,MAC5BonE,kBAAmBpqE,EAAK,GAAGgD,OAGjC,IACC/C,OAAM,SAAUF,GACfa,QAAQC,IAAId,EACd,GACJ,EA8BM0tE,GAAgB,SAACe,GACrB/uE,IAAM,CACJC,OAAQ,MACRC,IACEjB,GAAO,gEACkD8vE,KAE1D1uE,MAAK,SAACgH,GACL,IAAIhM,EAAOgM,EAAIhM,KACfkvE,GAAUlvE,EACZ,IACCmF,OAAM,SAACC,GACNU,QAAQC,IAAI,UAAYX,EAC1B,GACJ,EA+BMuuE,GAAgB,WACpBhvE,IAAM,CACJC,OAAQ,MACRC,IAAKjB,GAAO,mDAA+C3D,MAE1D+E,MAAK,SAAUC,GACd,IAAIC,EAAOD,EAASjF,KAChBkF,EAAKsL,OAAS,GAChBo2D,GAAc,CACZ8I,eAAgBxqE,EAAK,GAAGgD,MACxBynE,YAAazqE,EAAK,GAAGgD,QAGzB,IAAI0rE,EAAQ,CACVlE,eAAgBxqE,EAAK,GAAGgD,MACxBynE,YAAazqE,EAAK,GAAGgD,OAGvB0nE,GAAmBp6D,KAAKC,MAAMD,KAAKE,UAAUk+D,IAC/C,IACCzuE,OAAM,SAAUF,GACfa,QAAQC,IAAId,EACd,GACJ,EAEMiuE,GAAc,SAACW,GACnBlvE,IAAM,CACJC,OAAQ,MACRC,IACEjB,GAAO,uEACyDiwE,KACjE7uE,MAAK,SAACgH,GACP,IAAIhM,EAAOgM,EAAIhM,KAEfowE,GAAYpwE,EACd,GACF,EAEM8zE,GAAU,yCAAG,WAAOC,EAASjb,EAAOkb,GAAK,uGAEpBrvE,IAAM,CAC3BC,OAAQ,MACRC,IACEjB,GAAO,6DAC+CmwE,EAAO,mBAAWjb,EAAK,uBAAekb,KAC7F,KAAD,EAEkC,OAP9B/uE,EAAQ,OAORjF,EAAOiF,EAASjF,KAAKgoD,SAAQ,kBAC5BhoD,GAAI,OAEsC,MAFtC,yBAEX8F,QAAQV,MAAM,2BAA2B,EAAD,IAAS,8DAGpD,gBAfe,2CA+BC6uE,EAAAA,EAAAA,OAsJjB7zE,EAAAA,EAAAA,YACE,WACEuU,KA3lBFhQ,IAAM,CACJC,OAAQ,MACRC,IAAKjB,GAAO,yDACXoB,MAAK,SAACgH,GACP,IAAIwuB,EAASxuB,EAAIhM,KACjBuuE,GAAY/zC,EACd,IAgBA71B,IAAM,CACJC,OAAQ,MACRC,IAAKjB,GAAO,+CACXoB,MAAK,SAACgH,GACP,IAAIwuB,EAASxuB,EAAIhM,KACjBwuE,GAAYh0C,EACd,IAGA71B,IAAM,CACJC,OAAQ,MACRC,IAAKjB,GAAO,mDACXoB,MAAK,SAACgH,GACP,IAAIwuB,EAASxuB,EAAIhM,KACjB0uE,GAAQl0C,EACV,IAkHA71B,IAAM,CACJC,OAAQ,MACRC,IAAKjB,GAAO,sDACXoB,MAAK,SAACgH,GACP,IAAIwuB,EAASxuB,EAAIhM,KACjB2uE,GAAWn0C,EACb,IAGAo0C,GAAS,IACTjqE,IAAM,CACJC,OAAQ,MACRC,IAAKjB,GAAO,mDACXoB,MAAK,SAACgH,GACP,IAAIhM,EAAOgM,EAAIhM,KACf4uE,GAAS5uE,EACX,IAGA4S,GAAQ,IACRjO,IAAM,CACJC,OAAQ,MACRC,IAAKjB,GAAO,kDACXoB,MAAK,SAACgH,GACP,IAAIhM,EAAOgM,EAAIhM,KACf4S,GAAQ5S,EACV,IAsBA2E,IAAM,CACJC,OAAQ,MACRC,IAAKjB,GAAO,qCAEXoB,MAAK,SAACgH,GACL,IAAIoO,EAASpO,EAAIhM,KACjB0vC,GAAYt1B,EACd,IACCjV,OAAM,SAACC,GACNU,QAAQC,IAAI,UAAYX,EAC1B,IAkZAutE,KA9YFhuE,IAAM,CACJC,OAAQ,MACRC,IACEjB,GAAO,kEACoD3D,MAE5D+E,MAAK,SAAUC,GACd,IAAIC,EAAOD,EAASjF,KACpBqmE,GAAcnhE,EAChB,IACCC,OAAM,SAAUF,GACfa,QAAQC,IAAId,EACd,IAIFN,IAAM,CACJC,OAAQ,MACRC,IAAKjB,GAAO,oDAAgD3D,MAE3D+E,MAAK,SAAUC,GACd,IAAIC,EAAOD,EAASjF,KACpBye,GAAWvZ,EACb,IACCC,OAAM,SAAUF,GACfa,QAAQC,IAAId,EACd,IAwXAwuE,KACAD,KACAG,KACAJ,KA9PF5uE,IAAM,CACJC,OAAQ,MACRC,IAAKjB,GAAO,sDAEXoB,MAAK,SAACgH,GACMA,EAAIhM,KACf0wE,GACE1kE,EAAIhM,KAAKd,KAAI,SAAC8M,GAAG,MAAM,CACrBxN,IAAKwN,EAAIrN,GACT2F,MAAO0H,EAAIkoE,cACZ,IAEL,IACC/uE,OAAM,SAACC,GACNU,QAAQC,IAAI,UAAYX,EAC1B,IArEFT,IAAM,CACJC,OAAQ,MACRC,IAAKjB,GAAO,oDAAgD3D,MAE3D+E,MAAK,SAAUC,GACd,IAAIC,EAAOD,EAASjF,KACpBuvE,GAAerqE,EACjB,IACCC,OAAM,SAAUF,GACfa,QAAQC,IAAId,EACd,IAIFN,IAAM,CACJC,OAAQ,MACRC,IAAKjB,GAAO,2CAAuC3D,MAElD+E,MAAK,SAAUC,GACd,IAAIC,EAAOD,EAASjF,KACpBwvE,GAAMtqE,EACR,IACCC,OAAM,SAAUF,GACfa,QAAQC,IAAId,EACd,IAgSAquE,KAteF3uE,IAAM,CACJC,OAAQ,MACRC,IACEjB,GAAO,uDAAmD3D,MAE3D+E,MAAK,SAAUC,GACd,IAAIC,EAAOD,EAASjF,KACpBmmE,GAAgBjhE,EAClB,IACCC,OAAM,SAAUF,GACfa,QAAQC,IAAId,EACd,IAvCFN,IAAM,CACJC,OAAQ,MACRC,IACEjB,GAAO,uDAAmD3D,MAE3D+E,MAAK,SAAUC,GACd,IAAIC,EAAOD,EAASjF,KACpBgxE,GAAmB9rE,EACrB,IACCC,OAAM,SAAUF,GACfa,QAAQC,IAAId,EACd,IAGFN,IAAM,CACJC,OAAQ,MACRC,IACEjB,GAAO,wDAAoD3D,MAE5D+E,MAAK,SAAUC,GACd,IAAIC,EAAOD,EAASjF,KACpBkxE,GAAoBhsE,EACtB,IACCC,OAAM,SAAUF,GACfa,QAAQC,IAAId,EACd,IA5HFN,IAAM,CACJC,OAAQ,MACRC,IAAKjB,GAAO,qDAAiD3D,MAE5D+E,MAAK,SAAUC,GACd,IAAIC,EAAOD,EAASjF,KACpB+lE,GAAgB7gE,EAClB,IACCC,OAAM,SAAUF,GACfa,QAAQC,IAAId,EACd,IA+UFN,IAAM,CACJC,OAAQ,MACRC,IAAKjB,GAAO,+CACXoB,MAAK,SAACgH,GACP,IAAIwuB,EAASxuB,EAAIhM,KACjBkyE,GAAY13C,EACd,GA4QA,GACA,GACkB,QADhB,EACFu0C,GAAgB,UAAE,aAAlB,EAAoBpwE,KAGtByB,EAAAA,EAAAA,YAAU,WAAO,IAAD,gBACRowD,EAAa,SAAC9gC,EAAMhhB,GACxB,MAAwB,MAAb,OAAJghB,QAAI,IAAJA,OAAI,EAAJA,EAAMhV,QAAgBhM,EAAeghB,CAC9C,EAEMykD,EAA0B,SAAChsB,EAAWC,GAK1C,IAJA,IAAMsE,EAAQ5hD,IAAOq9C,GAEfisB,EADMtpE,IAAOs9C,GACEisB,KAAK3nB,EAAO,QAAU,EACvCpE,EAAW,EACNz3C,EAAI,EAAGA,EAAIujE,EAAUvjE,IAAK,CACjC,IAAMupC,EAAcsS,EAAM4nB,QAAQ3jE,IAAIE,EAAG,QAEf,IAAtBupC,EAAYsW,OAAqC,IAAtBtW,EAAYsW,OACzCpI,GAEJ,CAEA,OAAOA,CACT,EAEMpmB,EAAKsuB,EACK,QADK,EACnBtpD,GAAY,UAAE,aAAd,EAAgByiE,cACF,QADe,EAC7BziE,GAAY,UAAE,aAAd,EAAgByiE,eAEZxnC,EAAKquB,EACK,QADK,EACnBtpD,GAAY,UAAE,aAAd,EAAgB0iE,YACF,QADa,EAC3B1iE,GAAY,UAAE,aAAd,EAAgB0iE,aAGZ2K,EAAa/jB,EACH,QADa,EAC3BtpD,GAAY,UAAE,aAAd,EAAgBygB,eACF,QADgB,EAC9BzgB,GAAY,UAAE,aAAd,EAAgBygB,gBAEZ6sD,EAAWhkB,EACD,QADW,EACzBtpD,GAAY,UAAE,aAAd,EAAgB0gB,aACF,QADc,EAC5B1gB,GAAY,UAAE,aAAd,EAAgB0gB,cAEZqiB,EAAS,yCAAG,4IAES6pC,GACP,QADiB,EAC/B5sE,GAAY,UAAE,aAAd,EAAgByiE,cACF,QADe,EAC7BziE,GAAY,UAAE,aAAd,EAAgB0iE,YACF,QADa,EAC3B1iE,GAAY,UAAE,aAAd,EAAgButE,qBAChB,KAAD,EAJa,uBAMSX,GACP,QADiB,EAC/B5sE,GAAY,UAAE,aAAd,EAAgBygB,eACF,QADgB,EAC9BzgB,GAAY,UAAE,aAAd,EAAgB0gB,aACF,QADc,EAC5B1gB,GAAY,UAAE,aAAd,EAAgButE,qBAChB,KAAD,EAJKC,EAAQ,OAMRC,EAAaR,EAAwBI,EAAYC,GACvDlC,GAAeqC,EAAaD,GACxBE,EAASD,EAAaD,EACtBG,GAAiB,QAAV,EAAAvO,GAAQ,UAAE,aAAV,EAAYyD,gBAA0B,EAAT6K,GACxC9D,GAAU+D,EAAKhzC,QAAQ,IACjBwyC,EAAOF,EAAwBjyC,EAAIC,GACzCiwC,GAAeiC,EAAOK,GAClBI,EAAST,EAAOK,EAChBK,EAAOvO,GAAQ8I,mBAA8B,EAATwF,GAExClE,GAAUmE,EAAKlzC,QAAQ,IAAI,kDAG3B/7B,QAAQV,MAAM,sBAAsB,EAAD,IAAS,0DAE/C,kBA7Bc,mCA+Bf6kC,GACF,GAAG,CACD/iC,GACc,QADH,EACXA,GAAY,UAAE,aAAd,EAAgByiE,cACF,QADe,EAC7BziE,GAAY,UAAE,aAAd,EAAgB0iE,YACF,QADa,EAC3B1iE,GAAY,UAAE,aAAd,EAAgBygB,eACF,QADgB,EAC9BzgB,GAAY,UAAE,aAAd,EAAgB0gB,aACF,QADc,EAC5B1gB,GAAY,UAAE,aAAd,EAAgButE,oBAChBjO,GAAQ8I,kBACE,QADe,EACzBhJ,GAAQ,UAAE,aAAV,EAAYyD,iBAGd3pE,EAAAA,EAAAA,YAAU,YArII,SAAC8H,GACb,IAAIsrB,GAC4B,IAA7BmzC,GAAW+I,eAAuB,EAAI/I,GAAW+I,iBACf,IAAlC7I,GAAUgJ,qBACP,EACAhJ,GAAUgJ,sBAEZmF,GADoBtd,GAAQA,QAAUlkC,GACAkkC,GAAQA,QAAW,IAC7DwY,GAAY8E,EAAiBA,EAAenzC,QAAQ,GAAK35B,EAC3D,CA6HE+sE,GAjJqB,SAAC/sE,GACtB,IAGMsrB,GAHiBD,WAAWozC,GAAW+I,iBAAmB,IAE9Dn8C,WAAWszC,GAAUgJ,uBAAyB,GAE1CqF,EAAmBxd,GAAQA,QAAUlkC,EAC3Cw8C,GACEkF,EAAmBA,EAAiBrzC,QAAQ,GAAK35B,EAErD,CAyIEitE,EACF,GAAG,CAACxO,GAAYjP,GAASmP,GAAW5mE,MAEpCG,EAAAA,EAAAA,YAAU,YA/HY,SAAC8H,GACrB,IAAMsrB,GACuB,IAA1BmzC,GAAWgJ,YAAoB,EAAIhJ,GAAWgJ,cACf,IAA/B9I,GAAUiJ,kBAA0B,EAAIjJ,GAAUiJ,mBAEjDsF,GADgB1d,GAAQ+X,kBAAoBj8C,GACdkkC,GAAQ+X,kBAAqB,IAC/De,GAAoB4E,EAAaA,EAAWvzC,QAAQ,GAAK35B,EAC3D,CAyHEmtE,GA9J6B,SAACntE,GAC9B,IAAIsrB,GACyB,IAA1BmzC,GAAWgJ,YAAoB,EAAMhJ,GAAWgJ,cACjB,IAA/B9I,GAAUiJ,kBAA0B,EAAMjJ,GAAUiJ,mBACnDwF,EAAgB5d,GAAQ+X,kBAAoBj8C,EAChD88C,GAAkBgF,EAAgBA,EAAczzC,QAAQ,GAAK35B,EAC/D,CAyJEqtE,EACF,GAAG,CAAC5O,GAAYE,GAAWnP,KAE3B,IAAM8d,GAAoB,SAAC72E,EAAIuJ,GAC7B+K,IAAe,SAACwiE,GACd,IAAMC,GAAM,OAAOD,GAEnB,OADAC,EAAO,GAAG/2E,GAAMuJ,EACTwtE,CACT,GACF,EAEMxnE,GAAW,SAAC7H,GAChB,MAAsBA,EAAEmH,OAAhBtF,EAAK,EAALA,MAAOvJ,EAAE,EAAFA,GAGf,OAFA+zE,GAAcxqE,GAENvJ,GACN,IAAK,cACHm0E,GAAe5qE,GAEf,MACF,IAAK,eACH+qE,GAAkB/qE,GAClB8qE,GAAgB9qE,GAChBgrE,GAAYhrE,GAEZ,MACF,IAAK,iBAOL,QACE,MANF,IAAK,cACH0qE,GAAY1qE,GAQhBstE,GAAkB72E,EAAIuJ,EACxB,EAkDMytE,GAAiB,SAACtvE,GACtB,MAA4BA,EAAEmH,OAAhB7O,GAAF,EAAJwH,KAAQ,EAAFxH,IAAIuJ,EAAK,EAALA,MAEP,YAAPvJ,EACF+nE,IAAW,SAAClgE,GAAI,yBAAWA,GAAI,cAAGH,EAAEmH,OAAO7O,GAAK0H,EAAEmH,OAAOtF,OAAK,IAC9C,mBAAPvJ,EACTioE,IAAc,SAACpgE,GAAI,yBAAWA,GAAI,cAAGH,EAAEmH,OAAO7O,GAAK0H,EAAEmH,OAAOtF,OAAK,IACjD,yBAAPvJ,EACTmoE,IAAa,SAACtgE,GAAI,yBAAWA,GAAI,cAAGH,EAAEmH,OAAO7O,GAAK0H,EAAEmH,OAAOtF,OAAK,IAChD,sBAAPvJ,EACT+nE,IAAW,SAAClgE,GAAI,yBAAWA,GAAI,cAAGH,EAAEmH,OAAO7O,GAAK0H,EAAEmH,OAAOtF,OAAK,IAC9C,sBAAPvJ,EACTmoE,IAAa,SAACtgE,GAAI,yBAAWA,GAAI,cAAGH,EAAEmH,OAAO7O,GAAK0H,EAAEmH,OAAOtF,OAAK,IAChD,gBAAPvJ,EACTioE,IAAc,SAACpgE,GAAI,yBAAWA,GAAI,cAAGH,EAAEmH,OAAO7O,GAAK0H,EAAEmH,OAAOtF,OAAK,IACjD,mBAAPvJ,EACTsU,IAAe,SAACwiE,GACd,IAAMC,GAAM,OAAOD,GAEnB,OADAC,EAAO,GAAQ,IAAIxtE,EACZwtE,CACT,IACgB,gBAAP/2E,EACT4nE,IAAW,SAAC//D,GAAI,yBAAWA,GAAI,cAAG,iBAAmBH,EAAEmH,OAAOtF,OAAK,KACnD,uBAAPvJ,GAEO,sBAAPA,IADT8nE,IAAW,SAACjgE,GAAI,yBAAWA,GAAI,cAAGH,EAAEmH,OAAO7O,GAAK0H,EAAEmH,OAAOtF,OAAK,GAIlE,EAEM0tE,GAAe,SAACvvE,GACpB,MAAsBA,EAAEmH,OAAhBtF,EAAK,EAALA,MAAOvJ,EAAE,EAAFA,GACfsU,IAAe,SAACwiE,GACd,IAAMC,GAAM,OAAOD,GAEnB,OADAC,EAAO,GAAG/2E,GAAMuJ,EACTwtE,CACT,GACF,EAuCA,OArCAt1E,EAAAA,EAAAA,YAAU,WAAO,IAAD,YACRy1E,EAAW/qE,IAAqB,QAAf,EAAC5D,GAAY,UAAE,aAAd,EAAgByiE,eAAel6D,SACvD+hE,GAAgBqE,GAChB,IAAMC,EAAShrE,IAAqB,QAAf,EAAC5D,GAAY,UAAE,aAAd,EAAgB0iE,aAAan6D,SACnDiiE,GAAcoE,GACd,IAAMC,EAAWjrE,IAAqB,QAAf,EAAC5D,GAAY,UAAE,aAAd,EAAgBygB,gBAAgBlY,SACxDmiE,GAAiBmE,GACjB,IAAMC,EAASlrE,IAAqB,QAAf,EAAC5D,GAAY,UAAE,aAAd,EAAgB0gB,cAAcnY,SAGpD,GAFAqiE,GAAekE,GAEqB,OAAlB,QAAd,EAAA9uE,GAAY,UAAE,aAAd,EAAgB2iE,cAAsB,CAAC,IAAD,EAClCoM,EAAWnrE,IAAqB,QAAf,EAAC5D,GAAY,UAAE,aAAd,EAAgB2iE,cAAcp6D,SACtDsiE,GAAgBkE,EAClB,CAEA,GAAkB,QAAlB,EAAI/uE,GAAY,UAAE,OAAd,EAAgBgvE,kBAAmB,CAAC,IAAD,EAC/BC,IAA4B,QAAd,EAAAjvE,GAAY,UAAE,aAAd,EAAgBgvE,oBAAqB,IACtDt5D,MAAM,KACN1d,KAAI,SAACuB,GAAI,OAAKiE,SAASjE,EAAKia,OAAQ,GAAG,IACvCla,QAAO,SAACC,GAAI,OAAMy/C,MAAMz/C,EAAK,IAChC2wE,GAAc+E,EAChB,CACF,GAAG,CAACjvE,MAgBF,4BACE,gCACG8qE,IACC,iBAAKrvE,UAAU,oBAAmB,UAC/B,KACD,SAAC,MAAO,IAAG,gCAA8B,OAG3C,GAED2F,IACC,iBAAK3F,UAAU,kBAAiB,UAC7B,KACD,SAAC,MAAa,IAAG,yDACV,OAGT,OAIJ,iBAAKA,UAAU,YAAW,WACxB,gBAAKA,UAAU,WAAU,UACvB,wBAAmB,QAAnB,EAAKuE,GAAY,UAAE,aAAd,EAAgB+G,iBAEvB,gBAAKtL,UAAU,WAAU,UACvB,wBAAI,aAEN,gBAAKA,UAAU,mBAEjB,iBAAKA,UAAU,wBAAuB,WACpC,iBAAKA,UAAU,oBAAmB,WAChC,iBAAKA,UAAU,2BAA0B,WACvC,mBAAOiN,QAAQ,cAAa,UAAC,iBACd,iBAAMjN,UAAU,aAAY,SAAC,cAE5C,gBACEA,UAAU,YACVuD,IAAK,SAACiI,GACJjI,GAAIkI,QAAQ,GAAKD,CACnB,EAAE,UAEF,kBACE9J,KAAK,OACL2J,UAAQ,EACRrL,UAAU,4BACVhE,GAAG,cACH0P,aAAW,EACXI,UAAQ,EACRC,aAA4B,QAAhB,EAAExH,GAAY,UAAE,aAAd,EAAgBmd,oBAIpC,iBAAK1hB,UAAU,2BAA0B,WACvC,mBAAOiN,QAAQ,cAAa,UAAC,iBACd,iBAAMjN,UAAU,aAAY,SAAC,cAE5C,gBACEA,UAAU,YACVuD,IAAK,SAACiI,GACJjI,GAAIkI,QAAQ,GAAKD,CACnB,EAAE,UAEF,kBACE9J,KAAK,OACL2J,SACkC,cAAlB,QAAd,EAAA9G,GAAY,UAAE,aAAd,EAAgBghE,cAElBvlE,UAAU,6BACVhE,GAAG,cACH0P,aAAW,EACXI,UAAQ,EACRP,SAAU,SAAC7H,GACT,IAAM6B,EAAQ7B,EAAEmH,OAAOtF,MAAMmS,QAAQ,QAAS,IAC9ChU,EAAEmH,OAAOtF,MAAQA,EACjB0tE,GAAavvE,EACf,EACA6B,MAAqB,QAAhB,EAAEhB,GAAY,UAAE,aAAd,EAAgB+G,oBAI7B,iBAAKtL,UAAU,2BAA0B,WACvC,mBAAOiN,QAAQ,eAAc,UAAC,kBACd,iBAAMjN,UAAU,aAAY,SAAC,cAE7C,gBACEA,UAAU,YACVuD,IAAK,SAACiI,GACJjI,GAAIkI,QAAQ,GAAKD,CACnB,EAAE,UAEF,kBACE9J,KAAK,OACL1B,UAAU,iCACVhE,GAAG,gBACHuJ,MAAsB,QAAjB,EAAEmvD,GAAa,UAAE,aAAf,EAAiBgS,cACxBh7D,aAAW,EACXL,UAAQ,EACRS,UAAQ,UAId,iBAAK9L,UAAU,2BAA0B,WACvC,mBAAOiN,QAAQ,WAAU,UAAC,aACf,iBAAMjN,UAAU,aAAY,SAAC,cAExC,oBACEhE,GAAG,cACHgE,UAAU,oBACVuL,SAAU,SAAC7H,GAAC,OAAK6H,GAAS7H,EAAE,EAC5B2H,SACkC,cAAlB,QAAd,EAAA9G,GAAY,UAAE,aAAd,EAAgBghE,cAElBhiE,IAAK,SAACiI,GACJjI,GAAIkI,QAAQ,GAAKD,CACnB,EAAE,WAEF,mBAAQjG,MAAM,GAAE,SAAC,uBAChB2pB,GAAS3yB,KAAI,SAAC0P,GAAI,aACjB,oBACE1G,MAAO0G,EAAKjQ,GACZmQ,SACEF,EAAKjQ,KAAoB,QAAlB,EAAIuI,GAAY,UAAE,aAAd,EAAgB+4D,aAC5B,UAEA,IACArxD,EAAKwnE,YACC,WAIf,iBAAKzzE,UAAU,2BAA0B,WACvC,mBAAOiN,QAAQ,WAAU,UAAC,aACf,iBAAMjN,UAAU,aAAY,SAAC,cAExC,oBACEhE,GAAG,cACHqP,SACkC,cAAlB,QAAd,EAAA9G,GAAY,UAAE,aAAd,EAAgBghE,cAElBh6D,SAAU,SAAC7H,GAAC,OAAK6H,GAAS7H,EAAE,EAC5B1D,UAAU,OACVuD,IAAK,SAACiI,GACJjI,GAAIkI,QAAQ,GAAKD,CACnB,EAAE,WAEF,mBAAQjG,MAAM,GAAE,SAAC,uBAChBq/D,GAASroE,KAAI,SAAC0P,GAAI,aACjB,oBACE1G,MAAO0G,EAAKjQ,GACZmQ,SACEF,EAAKjQ,KAAoB,QAAlB,EAAIuI,GAAY,UAAE,aAAd,EAAgB6rE,aAC5B,UAEA,IACAnkE,EAAKzI,OACC,WAIf,iBAAKxD,UAAU,2BAA0B,WACvC,kBAAOiN,QAAQ,cAAa,SAAC,kBAC7B,kBACEvL,KAAK,OACL1B,UAAU,eACVhE,GAAG,cACHqP,SACkC,cAAlB,QAAd,EAAA9G,GAAY,UAAE,aAAd,EAAgBghE,cAElBhgE,MACiC,OAAjB,QAAd,EAAAhB,GAAY,UAAE,aAAd,EAAgB2hE,aACZ,GACc,QADZ,EACF3hE,GAAY,UAAE,aAAd,EAAgB2hE,YAEtB36D,SAAU,SAAC7H,GAAC,OAAKuvE,GAAavvE,EAAE,QAGpC,iBAAK1D,UAAU,2BAA0B,WACvC,mBAAOiN,QAAQ,iBAAgB,UAAC,oBACd,iBAAMjN,UAAU,aAAY,SAAC,cAE/C,oBACEhE,GAAG,eACHuP,SAAU,SAAC7H,GAAC,OAAK6H,GAAS7H,EAAE,EAC5B2H,SACkC,cAAlB,QAAd,EAAA9G,GAAY,UAAE,aAAd,EAAgBghE,cAElBvlE,UAAU,OACVuD,IAAK,SAACiI,GACJjI,GAAIkI,QAAQ,GAAKD,CACnB,EAAE,WAEF,mBAAQjG,MAAM,GAAE,SAAC,uBAChBinE,GAAYjwE,KAAI,SAAC0P,GAAI,aACpB,oBACE1G,MAAO0G,EAAKjQ,GACZmQ,SACEF,EAAKjQ,KAAoB,QAAlB,EAAIuI,GAAY,UAAE,aAAd,EAAgBwgE,cAC5B,UAEA,IACA94D,EAAKzI,OACC,WAIf,iBAAKxD,UAAU,2BAA0B,WACvC,mBAAOiN,QAAQ,iBAAgB,UAAC,oBACd,iBAAMjN,UAAU,aAAY,SAAC,cAE/C,oBACEhE,GAAG,sBACHqP,UAAQ,EACRU,aAA4B,QAAhB,EAAExH,GAAY,UAAE,aAAd,EAAgBsgE,eAC9B7kE,UAAU,OACVuD,IAAK,SAACiI,GACJjI,GAAIkI,QAAQ,GAAKD,CACnB,EAAE,WAEF,mBAAQjG,MAAM,GAAE,SAAC,uBAChB6mE,GAAgB7vE,KAAI,SAAC0P,GAAI,eACxB,oBACE1G,MAAO0G,EAAKjQ,GACZmQ,SACEF,EAAKjQ,KAAoB,QAAlB,EAAIuI,GAAY,UAAE,aAAd,EAAgBmvE,sBAC3BznE,EAAKC,YAA+B,QAAtB,EAAIkgE,GAAgB,UAAE,aAAlB,EAAoBlgE,WAGvC,UAEA,IACAD,EAAKC,YACC,WAIf,iBAAKlM,UAAU,2BAA0B,WACvC,mBAAOiN,QAAQ,gBAAe,UAAC,mBACd,iBAAMjN,UAAU,aAAY,SAAC,cAE9C,oBACEhE,GAAG,WACH+P,aAA4B,QAAhB,EAAExH,GAAY,UAAE,aAAd,EAAgB0gE,cAC9B55D,UAAQ,EACRrL,UAAU,OACVuD,IAAK,SAACiI,GACJjI,GAAIkI,QAAQ,GAAKD,CACnB,EAAE,WAEF,mBAAQjG,MAAM,GAAE,SAAC,uBAChBghE,GAAShqE,KAAI,SAAC0P,GAAI,eACjB,oBACE1G,MAAO0G,EAAKjQ,GACZmQ,SACEF,EAAKjQ,KAAoB,QAAlB,EAAIuI,GAAY,UAAE,aAAd,EAAgBgiE,WAC3Bt6D,EAAKC,YAAwB,QAAf,EAAIq6D,GAAS,UAAE,aAAX,EAAar6D,WAGhC,UAEA,IACAD,EAAKC,YACC,WAIf,iBAAKlM,UAAU,2BAA0B,WACvC,kBAAOiN,QAAQ,uBAAsB,SAAC,2BACtC,oBACEjR,GAAG,yBACHgE,UAAU,eACVqL,SAC0C,OAA1B,QAAd,EAAA9G,GAAY,UAAE,aAAd,EAAgB4gE,sBAElB55D,SAAU,SAAC7H,GAAC,OAAK6H,GAAS7H,EAAE,EAAC,WAE7B,mBAAQ6B,MAAM,GAAE,SAAC,wBACjB,mBACEA,MAAO,IACP4G,SAC0C,UAA1B,QAAd,EAAA5H,GAAY,UAAE,aAAd,EAAgB4gE,sBAAkC,IAAM,GACzD,SACF,WAGD,mBACE5/D,MAAO,IACP4G,SAC0C,cAA1B,QAAd,EAAA5H,GAAY,UAAE,aAAd,EAAgB4gE,sBAAsC,IAAM,GAC7D,SACF,eAGD,mBACE5/D,MAAO,IACP4G,SAC0C,cAA1B,QAAd,EAAA5H,GAAY,UAAE,aAAd,EAAgB4gE,sBAAsC,IAAM,GAC7D,SACF,eAGD,mBACE5/D,MAAO,IACP4G,SAC0C,UAA1B,QAAd,EAAA5H,GAAY,UAAE,aAAd,EAAgB4gE,sBAAkC,IAAM,GACzD,SACF,iBAKL,iBAAKnlE,UAAU,2BAA0B,WACvC,kBAAOiN,QAAQ,aAAY,SAAC,iBAC5B,oBACEjR,GAAG,iBACHuP,SAAU,SAAC7H,GAAC,OAAK6H,GAAS7H,EAAE,EAC5B2H,SACkC,cAAlB,QAAd,EAAA9G,GAAY,UAAE,aAAd,EAAgBghE,cACjB,WAED,mBAAQhgE,MAAM,GAAE,SAAC,uBAChB+mE,GAAO/vE,KAAI,SAAC0P,GAAI,aACf,oBACE1G,MAAO0G,EAAKjQ,GACZmQ,SACEF,EAAK0nE,cAA6B,QAAlB,EAAIpvE,GAAY,UAAE,aAAd,EAAgB2gE,YAGrC,UAEA,IACAj5D,EAAK0nE,cACC,WAIf,iBAAK3zE,UAAU,2BAA0B,WACvC,mBAAOiN,QAAQ,WAAU,UAAC,aACf,iBAAMjN,UAAU,aAAY,SAAC,cAExC,oBACEhE,GAAG,cACHuP,SAAU,SAAC7H,GAAC,OAAK6H,GAAS7H,EAAE,EAC5B2H,UAAQ,EACRrL,UAAU,OACVuD,IAAK,SAACiI,GACJjI,GAAIkI,QAAQ,GAAKD,CACnB,EAAE,WAEF,mBAAQjG,MAAM,GAAE,SAAC,uBAAuC,cAEvDmpC,GAASnyC,KAAI,SAAC0P,GAAI,aACjB,oBACE1G,MAAO0G,EAAKjQ,GACZmQ,SACEF,EAAKjQ,KAAoB,QAAlB,EAAIuI,GAAY,UAAE,aAAd,EAAgB0jB,aAC5B,UAEA,IACAhc,EAAK5F,cACC,WAIf,iBAAKrG,UAAU,2BAA0B,WACvC,mBAAOiN,QAAQ,iBAAgB,UAAC,oBACd,iBAAMjN,UAAU,aAAY,SAAC,cAE/C,oBACEhE,GAAG,yBACHuP,SAAU,SAAC7H,GAAC,OAAK6H,GAAS7H,EAAE,EAC5B2H,SACkC,cAAlB,QAAd,EAAA9G,GAAY,UAAE,aAAd,EAAgBghE,cAElBvlE,UAAU,OACVuD,IAAK,SAACiI,GACJjI,GAAIkI,QAAQ,GAAKD,CACnB,EAAE,WAEF,mBAAQjG,MAAM,GAAE,SAAC,wBACjB,mBACEA,MAAO,GACP4G,SAA4C,SAApB,QAAd,EAAA5H,GAAY,UAAE,aAAd,EAAgBihE,gBAA2B,GAAK,GAAG,SAC9D,UAGD,mBACEjgE,MAAO,GACP4G,SAA4C,UAApB,QAAd,EAAA5H,GAAY,UAAE,aAAd,EAAgBihE,gBAA4B,GAAK,GAAG,SAC/D,WAGD,mBACEjgE,MAAO,GACP4G,SAA4C,UAApB,QAAd,EAAA5H,GAAY,UAAE,aAAd,EAAgBihE,gBAA4B,GAAK,GAAG,SAC/D,iBAKL,iBAAKxlE,UAAU,2BAA0B,WACvC,mBAAOiN,QAAQ,iBAAgB,UAAC,oBACd,iBAAMjN,UAAU,aAAY,SAAC,cAE/C,oBACEhE,GAAG,yBACHgE,UAAU,oBACVqL,SACkC,cAAlB,QAAd,GAAA9G,GAAY,UAAE,cAAd,GAAgBghE,cAElBh6D,SAAU,SAAC7H,GAAC,OAAK6H,GAAS7H,EAAE,EAC5BH,IAAK,SAACiI,GACJjI,GAAIkI,QAAQ,IAAMD,CACpB,EAAE,WAEF,mBAAQjG,MAAM,GAAE,SAAC,wBACjB,mBACEA,MAAO,GACP4G,SACmC,kBAAnB,QAAd,GAAA5H,GAAY,UAAE,cAAd,GAAgBmhE,eAAmC,GAAK,GACzD,SACF,mBAGD,mBACEngE,MAAO,GACP4G,SACmC,eAAnB,QAAd,GAAA5H,GAAY,UAAE,cAAd,GAAgBmhE,eAAgC,GAAK,GACtD,SACF,sBAKL,iBAAK1lE,UAAU,2BAA0B,WACvC,mBAAOiN,QAAQ,gBAAe,UAAC,kBACf,iBAAMjN,UAAU,aAAY,SAAC,cAE7C,oBACEhE,GAAG,mBACHuP,SAAU,SAAC7H,GAAC,OAAK6H,GAAS7H,EAAE,EAC5B2H,SACkC,cAAlB,QAAd,GAAA9G,GAAY,UAAE,cAAd,GAAgBghE,cAElBvlE,UAAU,OACVuD,IAAK,SAACiI,GACJjI,GAAIkI,QAAQ,IAAMD,CACpB,EAAE,WAEF,mBAAQjG,MAAM,GAAE,SAAC,wBACjB,mBACEA,MAAO,IACP4G,SACkC,kBAAlB,QAAd,GAAA5H,GAAY,UAAE,cAAd,GAAgBuhE,cAAkC,IAAM,GACzD,SACF,mBAGD,mBACEvgE,MAAO,IACP4G,SACkC,gBAAlB,QAAd,GAAA5H,GAAY,UAAE,cAAd,GAAgBuhE,cAAgC,IAAM,GACvD,SACF,iBAGD,mBACEvgE,MAAO,IACP4G,SACkC,cAAlB,QAAd,GAAA5H,GAAY,UAAE,cAAd,GAAgBuhE,cAA8B,IAAM,GACrD,SACF,eAGD,mBACEvgE,MAAO,IACP4G,SAA0C,WAAlB,QAAd,GAAA5H,GAAY,UAAE,cAAd,GAAgBuhE,cAA2B,IAAM,GAAG,SAC/D,kBAKL,iBAAK9lE,UAAU,2BAA0B,WACvC,kBAAOiN,QAAQ,eAAc,SAAC,oBAC9B,0BACE,kBACEvL,KAAK,OACL2J,SACkC,cAAlB,QAAd,GAAA9G,GAAY,UAAE,cAAd,GAAgBghE,cAElBvlE,UAAU,eACVhE,GAAG,iBACH0P,aAAW,EACXnG,MACoC,MAApB,QAAd,GAAAhB,GAAY,UAAE,cAAd,GAAgBqvE,gBACZ,EACc,QADb,GACDrvE,GAAY,UAAE,cAAd,GAAgBqvE,eAEtBroE,SAAU,SAAC7H,GACT,IAAMmwE,EAAQnwE,EAAEmH,OAAOtF,MACT,oBAEH0F,KAAK4oE,KACdnwE,EAAEmH,OAAOtF,MAAQsuE,EAAMn8D,QAAQ,WAAY,KAE7Cu7D,GAAavvE,EACf,UAIN,iBAAK1D,UAAU,2BAA0B,WACvC,kBAAOiN,QAAQ,kBAAiB,SAAC,yBACjC,oBACEjR,GAAG,kBACHuP,SAAU,SAAC7H,GAAC,OAAK6H,GAAS7H,EAAE,EAC5B2H,SACkC,cAAlB,QAAd,GAAA9G,GAAY,UAAE,cAAd,GAAgBghE,cACjB,WAED,mBAAQhgE,MAAM,GAAE,SAAC,wBACjB,oBACEA,MAAM,MACN4G,SACqC,QAArB,QAAd,GAAA5H,GAAY,UAAE,cAAd,GAAgBuvE,iBACjB,UAEA,IAAI,SAGP,mBACEvuE,MAAM,MACN4G,SACqC,QAArB,QAAd,GAAA5H,GAAY,UAAE,cAAd,GAAgBuvE,iBACjB,SACF,eAKL,iBAAK9zE,UAAU,2BAA0B,WACvC,kBAAOiN,QAAQ,kBAAiB,SAAC,sBACjC,iBAAKjN,UAAU,+BAA8B,WAC3C,kBACEA,UAAU,mBACV0B,KAAK,QACL2J,SAA2C,eAAnB,QAAd,GAAA9G,GAAY,UAAE,cAAd,GAAgBghE,cAC1BvpE,GAAG,qBACHwH,KAAK,kBACL+B,MAAM,OACN2H,SAA6C,KAAtB,QAAd,GAAA3I,GAAY,UAAE,cAAd,GAAgBkhE,iBACzBl6D,SAxoBd,SAAqCrL,GACnCoQ,IAAe,SAACwiE,GACd,IAAMC,GAAM,OAAOD,GAInB,OAFAC,EAAO,GAAoB,iBAAI,EAExBA,CACT,GACF,KAkoBY,kBAAO/yE,UAAU,mBAAmBiN,QAAQ,qBAAoB,SAAC,YAInE,iBAAKjN,UAAU,+BAA8B,WAC3C,kBACEA,UAAU,mBACV0B,KAAK,QACL2J,SAA2C,eAAnB,QAAd,GAAA9G,GAAY,UAAE,cAAd,GAAgBghE,cAC1BvpE,GAAG,oBACHwH,KAAK,kBACL+B,MAAM,QACN2H,SAA6C,KAAtB,QAAd,GAAA3I,GAAY,UAAE,cAAd,GAAgBkhE,iBACzBl6D,SA7oBd,SAAuCrL,GACrCoQ,IAAe,SAACwiE,GACd,IAAMC,GAAM,OAAOD,GAInB,OAFAC,EAAO,GAAoB,iBAAI,EAExBA,CACT,GACF,KAuoBY,kBAAO/yE,UAAU,mBAAmBiN,QAAQ,oBAAmB,SAAC,cAKpE,iBAAKjN,UAAU,2BAA0B,WACvC,mBAAOiN,QAAQ,eAAc,UAAC,kBACd,iBAAMjN,UAAU,aAAY,SAAC,cAE7C,oBACEhE,GAAG,mBACHgE,UAAU,oBACVqL,SACkC,cAAlB,QAAd,GAAA9G,GAAY,UAAE,cAAd,GAAgBghE,cAElBh6D,SAAU,SAAC7H,GAAC,OAAK6H,GAAS7H,EAAE,EAC5BH,IAAK,SAACiI,GACJjI,GAAIkI,QAAQ,IAAMD,CACpB,EAAE,WAEF,mBAAQjG,MAAM,GAAE,SAAC,uBAChBumE,GAAKvvE,KAAI,SAAC0P,GAAI,aACb,oBACE1G,MAAO0G,EAAKjQ,GACZmQ,SACEF,EAAK8nE,gBAA+B,QAAlB,EAAIxvE,GAAY,UAAE,aAAd,EAAgBqhE,cAGvC,UAEA,IACA35D,EAAK8nE,gBACC,WAIf,iBAAK/zE,UAAU,2BAA0B,WACvC,mBAAOiN,QAAQ,kBAAiB,UAAC,qBACd,iBAAMjN,UAAU,aAAY,SAAC,cAEhD,oBACEhE,GAAG,sBACHgE,UAAU,oBACVqL,SACkC,cAAlB,QAAd,GAAA9G,GAAY,UAAE,cAAd,GAAgBghE,cAElBh6D,SAAU,SAAC7H,GAAC,OAAK6H,GAAS7H,EAAE,EAC5BH,IAAK,SAACiI,GACJjI,GAAIkI,QAAQ,IAAMD,CACpB,EAAE,WAEF,mBAAQjG,MAAM,GAAE,SAAC,uBAChBisD,GAAQj1D,KAAI,SAAC0P,GAAI,aAChB,oBACE1G,MAAO0G,EAAKjQ,GACZmQ,SACEF,EAAKzI,OAAsB,QAAlB,EAAIe,GAAY,UAAE,aAAd,EAAgBshE,iBAC9B,UAEA,IACA55D,EAAKzI,OACC,WAIf,iBAAKxD,UAAU,2BAA0B,WACvC,mBAAOiN,QAAQ,kBAAiB,UAAC,qBACd,iBAAMjN,UAAU,aAAY,SAAC,cAEhD,oBACEhE,GAAG,UACHgE,UAAU,oBACVqL,SACkC,cAAlB,QAAd,GAAA9G,GAAY,UAAE,cAAd,GAAgBghE,cAElBh6D,SAAU,SAAC7H,GAAC,OAAK6H,GAAS7H,EAAE,EAC5BH,IAAK,SAACiI,GACJjI,GAAIkI,QAAQ,IAAMD,CACpB,EAAE,WAEF,mBAAQjG,MAAM,GAAE,SAAC,uBAChB0X,GAAS1gB,KAAI,SAAC0P,GAAI,aACjB,oBACE1G,MAAO0G,EAAKjQ,GACZmQ,SACEF,EAAK+nE,wBACS,QADY,EAC1BzvE,GAAY,UAAE,aAAd,EAAgBogE,iBAGjB,UAEA,IACA14D,EAAK+nE,wBACC,WAIf,iBAAKh0E,UAAU,2BAA0B,WACvC,mBAAOiN,QAAQ,eAAc,UAAC,kBACd,iBAAMjN,UAAU,aAAY,SAAC,cAE7C,mBACEhE,GAAG,cACHuP,SAAU,SAAC7H,GAAC,OA3xBJ,SAACA,GACnB,MAAsBA,EAAEmH,OAAhBtF,EAAK,EAALA,MAAOvJ,EAAE,EAAFA,GACf+zE,GAAcxqE,GAGP,gBADCvJ,IAGF,CAAC,EAAG,EAAG,GAAGoS,SAAS1K,EAAEmH,OAAOgD,SACP,IAApBnK,EAAEmH,OAAOgD,QAA0B,MAAVtI,GAE1B6lE,IAAS,GACTI,GAAYjmE,IACH,CAAC,EAAG,EAAG,EAAG,GAAG6I,SAASilD,OAAO9tD,KACtC6lE,IAAS,GAEXyH,GAAkB,gBAAiBttE,IAOnC4lE,IACF0H,GAAkB72E,EAAIuJ,EAE1B,CAkwB6B0uE,CAAYvwE,EAAE,EAC/B1D,UAAU,OACVuF,MAAOkmE,GACPloE,IAAK,SAACiI,GACJjI,GAAIkI,QAAQ,IAAMD,CACpB,EAAE,SAEgC,SAAnB,QAAd,GAAAjH,GAAY,UAAE,cAAd,GAAgBghE,eACf,iCACE,mBAAQhgE,MAAM,GAAE,SAAC,wBACjB,mBAAQA,MAAM,IAAG,SAAC,SAClB,mBAAQA,MAAM,IAAG,SAAC,iBAClB,mBAAQA,MAAM,IAAG,SAAC,mBAEe,iBAAnB,QAAd,GAAAhB,GAAY,UAAE,cAAd,GAAgBghE,eAQiB,aAAnB,QAAd,GAAAhhE,GAAY,UAAE,cAAd,GAAgBghE,eAPlB,iCACE,mBAAQhgE,MAAM,GAAE,SAAC,wBACjB,mBAAQA,MAAM,IAAG,SAAC,iBAClB,mBAAQA,MAAM,IAAG,SAAC,eAClB,mBAAQA,MAAM,IAAG,SAAC,aAClB,mBAAQA,MAAM,IAAG,SAAC,iBAUe,iBAAnB,QAAd,GAAAhB,GAAY,UAAE,cAAd,GAAgBghE,eAClB,iCACE,mBAAQhgE,MAAM,GAAE,SAAC,wBACjB,mBAAQA,MAAM,IAAG,SAAC,iBAClB,mBAAQA,MAAM,IAAG,SAAC,iBAClB,mBAAQA,MAAM,IAAG,SAAC,eAClB,mBAAQA,MAAM,IAAG,SAAC,aAClB,mBAAQA,MAAM,IAAG,SAAC,iBAEe,eAAnB,QAAd,GAAAhB,GAAY,UAAE,cAAd,GAAgBghE,eAClB,iCACE,mBAAQhgE,MAAM,IAAI/B,KAAK,aAAY,SAAC,iBAGpC,mBAAQ+B,MAAM,IAAG,SAAC,iBAEe,eAAnB,QAAd,GAAAhB,GAAY,UAAE,cAAd,GAAgBghE,eAClB,iCACE,mBAAQhgE,MAAM,GAAE,SAAC,wBACjB,mBAAQA,MAAM,IAAG,SAAC,iBAClB,mBAAQA,MAAM,IAAG,SAAC,eAClB,mBAAQA,MAAM,IAAG,SAAC,aAClB,mBAAQA,MAAM,IAAG,SAAC,kBAGpB,mBAAQA,MAAM,YAIpB,iBAAKvF,UAAU,2BAA0B,WACvC,mBAAOiN,QAAQ,eAAc,UAAC,kBACd,iBAAMjN,UAAU,aAAY,SAAC,cAE7C,oBACEhE,GAAG,gBACHuP,SAAU,SAAC7H,GAAC,OAAK6H,GAAS7H,EAAE,EAC5B2H,SACkC,cAAlB,QAAd,GAAA9G,GAAY,UAAE,cAAd,GAAgBghE,cAElBvlE,UAAU,OACVuD,IAAK,SAACiI,GACJjI,GAAIkI,QAAQ,IAAMD,CACpB,EAAE,WAEF,mBAAQjG,MAAM,GAAE,SAAC,uBAChB4P,GAAM5Y,KAAI,SAAC0P,GAAI,aACd,oBACE1G,MAAO0G,EAAKjQ,GACZmQ,SACEF,EAAKC,YAA2B,QAAlB,EAAI3H,GAAY,UAAE,aAAd,EAAgB6gE,cAGnC,UAEA,IACAn5D,EAAKC,YACC,WAIf,iBAAKlM,UAAU,2BAA0B,WACvC,mBAAOiN,QAAQ,gBAAe,UAAC,mBACd,iBAAMjN,UAAU,aAAY,SAAC,cAE9C,oBACEhE,GAAG,oBACHuP,SAAU,SAAC7H,GAAC,OAAK6H,GAAS7H,EAAE,EAC5B2H,SACkC,cAAlB,QAAd,GAAA9G,GAAY,UAAE,cAAd,GAAgBghE,cAElBvlE,UAAU,OACVuD,IAAK,SAACiI,GACJjI,GAAIkI,QAAQ,IAAMD,CACpB,EAAE,WAEF,mBAAQjG,MAAM,GAAE,SAAC,wBACjB,mBACEA,MAAM,MACN4G,SACmC,gBAAnB,QAAd,GAAA5H,GAAY,UAAE,cAAd,GAAgB8hE,eAAiC,MAAQ,GAC1D,SACF,iBAGD,mBACE9gE,MAAM,MACN4G,SACmC,qBAAnB,QAAd,GAAA5H,GAAY,UAAE,cAAd,GAAgB8hE,eACZ,MACA,GACL,SACF,sBAGD,mBACE9gE,MAAM,MACN4G,SACmC,mBAAnB,QAAd,GAAA5H,GAAY,UAAE,cAAd,GAAgB8hE,eAAoC,MAAQ,GAC7D,SACF,0BAKL,iBAAKrmE,UAAU,2BAA0B,WACvC,mBAAOiN,QAAQ,eAAc,UAAC,iBACf,iBAAMjN,UAAU,aAAY,SAAC,cAE5C,oBACEhE,GAAG,eACHuP,SAAU,SAAC7H,GAAC,OAAK6H,GAAS7H,EAAE,EAC5B2H,SACkC,cAAlB,QAAd,GAAA9G,GAAY,UAAE,cAAd,GAAgBghE,cAElBvlE,UAAU,OACVuD,IAAK,SAACiI,GACJjI,GAAIkI,QAAQ,IAAMD,CACpB,EAAE,WAEF,mBAAQjG,MAAM,GAAE,SAAC,wBACjB,mBACEA,MAAM,MACN4G,SAA0C,QAAlB,QAAd,GAAA5H,GAAY,UAAE,cAAd,GAAgB0hE,cAAwB,MAAQ,GAAG,SAC9D,SAGD,mBACE1gE,MAAM,KACN4G,SAA0C,OAAlB,QAAd,GAAA5H,GAAY,UAAE,cAAd,GAAgB0hE,cAAuB,KAAO,GAAG,SAC5D,cAKL,iBAAKjmE,UAAU,2BAA0B,WACvC,kBAAOiN,QAAQ,WAAU,SAAC,eAC1B,oBACEjR,GAAG,aACHuP,SAAU,SAAC7H,GAAC,OAAK6H,GAAS7H,EAAE,EAC5B2H,SACkC,cAAlB,QAAd,GAAA9G,GAAY,UAAE,cAAd,GAAgBghE,cAElBxqD,MAAqB,QAAhB,GAAExW,GAAY,UAAE,cAAd,GAAgB2pC,SAAS,WAEhC,mBAAQ3oC,MAAM,OAAM,SAAC,uBACpBioE,GAASjxE,KAAI,SAAC0P,GAAI,aACjB,oBACE1G,MAAO0G,EAAKjQ,GACZmQ,SACEF,EAAKjQ,KAAoB,QAAlB,EAAIuI,GAAY,UAAE,aAAd,EAAgB2vE,YAC5B,UAEA,IACAjoE,EAAKzI,OACC,WAIf,iBAAKxD,UAAU,2BAA0B,WACvC,kBAAOiN,QAAQ,oBAAmB,SAAC,yBACnC,oBACEjR,GAAG,iBACHuP,SAAU,SAAC7H,GAAC,OAAK6H,GAAS7H,EAAE,EAC5B2H,SACkC,cAAlB,QAAd,GAAA9G,GAAY,UAAE,cAAd,GAAgBghE,cACjB,WAED,mBAAQhgE,MAAM,GAAE,SAAC,wBACjB,mBACEA,MAAO,KACP4G,SACsC,gBAAtB,QAAd,GAAA5H,GAAY,UAAE,cAAd,GAAgB4hE,kBAAoC,IAAM,GAC3D,SACF,iBAGD,mBACE5gE,MAAO,KACP4G,SACsC,WAAtB,QAAd,GAAA5H,GAAY,UAAE,cAAd,GAAgB4hE,kBAA+B,IAAM,GACtD,SACF,kBAML,iBAAKnmE,UAAU,2BAA0B,WACvC,mBAAOiN,QAAQ,qBAAoB,UAAC,sCACE,KACpC,iBAAMjN,UAAU,aAAY,SAAC,cAE/B,gBACEA,UAAU,YACVuD,IAAK,SAACiI,GACJjI,GAAIkI,QAAQ,IAAMD,CACpB,EAAE,UAEF,+BACE,qBACExL,UAAU,eACVhE,GAAG,gBACHqP,SACkC,cAAlB,QAAd,GAAA9G,GAAY,UAAE,cAAd,GAAgBghE,cAElB75D,aAAW,EACX4B,KAAM,EACNxB,UAAQ,EACRvG,MAAqB,QAAhB,GAAEhB,GAAY,UAAE,cAAd,GAAgBqiE,cACvBr7D,SAAU,SAAC7H,GAAC,OAAKuvE,GAAavvE,EAAE,YAKxC,iBAAK1D,UAAU,2BAA0B,WACvC,mBAAOiN,QAAQ,wBAAuB,UAAC,2BAErC,iBAAMjN,UAAU,aAAY,SAAC,cAE/B,gBACEA,UAAU,YACVuD,IAAK,SAACiI,GACJjI,GAAIkI,QAAQ,IAAMD,CACpB,EAAE,UAEF,qBACExL,UAAU,eACVhE,GAAG,sBACHqP,SACkC,cAAlB,QAAd,GAAA9G,GAAY,UAAE,cAAd,GAAgBghE,cAElB75D,aAAW,EACX4B,KAAM,EACNxB,UAAQ,EACRvG,MAAqB,QAAhB,GAAEhB,GAAY,UAAE,cAAd,GAAgBsiE,oBACvBt7D,SAAU,SAAC7H,GAAC,OAAKuvE,GAAavvE,EAAE,aAMxC,iBAAK1D,UAAU,MAAK,WAClB,gBAAKA,UAAU,mDAAkD,UAC/D,iBAAKA,UAAU,wBAAuB,WACpC,2BACE,SAAC,MAAa,IAAG,qBAEnB,iBAAKA,UAAU,oBAAmB,WAChC,gBAAKA,UAAU,kBAAiB,UAC9B,iBAAKA,UAAU,iBAAgB,WAC7B,mBAAOA,UAAU,QAAQiN,QAAQ,mBAAkB,UAAC,mBACjC,KACjB,iBAAMjN,UAAU,aAAY,SAAC,cAE/B,iBAAMA,UAAU,QAAO,SAAC,OACxB,gBAAKA,UAAU,QAAO,UACpB,0BACE,kBACE0B,KAAK,OACL1B,UAAU,4BACVqL,UAAQ,EACRrP,GAAG,mBACH8P,UAAQ,EACRiP,MAAsB,QAAjB,GAAEwoD,GAAa,UAAE,cAAf,GAAiByC,4BAMlC,gBAAKhmE,UAAU,kBAAiB,UAC9B,iBAAKA,UAAU,iBAAgB,WAC7B,mBAAOA,UAAU,QAAQiN,QAAQ,kBAAiB,UAAC,mBAClC,iBAAMjN,UAAU,aAAY,SAAC,cAE9C,iBAAMA,UAAU,QAAO,SAAC,OACxB,gBAAKA,UAAU,QAAO,UACpB,gBACEA,UAAS,iCACyB,cAAlB,QAAd,GAAAuE,GAAY,UAAE,cAAd,GAAgBghE,cACZ,sBACA,GAAE,6BAERhiE,IAAK,SAACiI,GACJjI,GAAIkI,QAAQ,IAAMD,CACpB,EAAE,UAEF,SAAC,EAAAnI,wBAAuB,CACtBC,MAAO4iC,GACPxkC,KAAK,OACL8B,KAAK,WACLxH,GAAG,gBAEHyZ,YAAa,CACXjD,KAAM,CAAC,KAAM,QACb2hE,cAAc,EACdC,UAAW,IAEb1+D,oBAAoB,OACpBhK,YAAY,4CAGZqB,kBAGG,QAHc,GACfm5B,GAASj1B,MACP,SAACnT,GAAI,aAAKA,EAAKkpB,UAAyB,QAAnB,EAAKq8C,GAAY,UAAE,aAAd,EAAgBn8C,QAAO,WAClD,cAFD,GAEG1jB,KAELC,SAAU,SAACC,GACT4/D,IAAe,SAACwP,GACd,IAAMC,GAAM,OAAOD,GAInB,OAFAC,EAAO,GAAO,GAAIrvE,EAAE1H,GAEb+2E,CACT,GACF,EACAjvE,UAAU,cAMpB,gBAAK9D,UAAU,kBAAiB,UAC9B,iBAAKA,UAAU,iBAAgB,WAC7B,mBAAOA,UAAU,QAAQiN,QAAQ,oBAAmB,UAAC,oBACjC,KAClB,iBAAMjN,UAAU,aAAY,SAAC,cAE/B,iBAAMA,UAAU,QAAO,SAAC,OACxB,gBAAKA,UAAU,QAAO,UACpB,0BACE,kBACE0B,KAAK,OACL1B,UAAU,4BACVqL,UAAQ,EACRrP,GAAG,mBACH8P,UAAQ,EACRiP,MAA0B,QAArB,GAAEuzD,GAAiB,UAAE,cAAnB,GAAqB+F,6BAMtC,gBAAKr0E,UAAU,kBAAiB,UAC9B,iBAAKA,UAAU,iBAAgB,WAC7B,mBAAOA,UAAU,QAAQiN,QAAQ,mBAAkB,UAAC,mBACjC,KACjB,iBAAMjN,UAAU,aAAY,SAAC,cAE/B,iBAAMA,UAAU,QAAO,SAAC,OACxB,gBAAKA,UAAU,QAAO,UACpB,0BACE,kBACE0B,KAAK,OACL1B,UAAU,4BAEVqL,UAAQ,EACRrP,GAAG,mBACH8P,UAAQ,EACRiP,MAAyB,QAApB,GAAEqzD,GAAgB,UAAE,cAAlB,GAAoBkG,oCAU3C,gBAAKt0E,UAAU,YAAW,UACxB,iBAAKA,UAAU,wBAAuB,WACpC,2BACE,SAAC,MAAa,IAAG,wBAEnB,gBAAKA,UAAU,oBAAmB,UAChC,gBACEA,UAAU,gBACVuD,IAAK,SAACiI,GACJjI,GAAIkI,QAAQ,IAAMD,CACpB,EAAE,UAEF,SAAC,IAAQ,CACPxL,UAAU,gBACVu0E,WAAYzG,GACZU,WAAYA,GACZE,aAAcA,GACdnjE,SAAU,SAACipE,GACTrxE,QAAQC,IAAIoxE,GACZ/F,GAAc+F,GACd,IAAIC,EAAkB,GACtBD,EAAe31E,SAAQ,SAAC7D,GACtBy5E,EAAgB11E,KAAK/D,EACvB,IACAsV,IAAe,SAACwiE,GACd,IAAMC,GAAM,OAAOD,GAKnB,OAHAC,EAAO,GAAsB,kBAC3B0B,EAAgBrsE,WAEX2qE,CACT,IACA5vE,QAAQC,IAAIqxE,EACd,EACAC,eAAgB,SACdC,EACAC,GAEAjG,GAAgB,GAAD,eACVgG,IAAkB,OAClBC,IAEP,EACAC,OAAQ,SAAC/2E,GAAI,OAAKA,EAAK6D,KAAK,EAC5B0J,SACkC,cAAlB,QAAd,GAAA9G,GAAY,UAAE,cAAd,GAAgBghE,yBAOC,OAAd,QAAd,GAAAhhE,GAAY,UAAE,cAAd,GAAgBgiE,WACE,OAAR,QAAX,GAAAA,GAAS,UAAE,cAAX,GAAavqE,KACe,OAAd,QAAd,GAAAuI,GAAY,UAAE,cAAd,GAAgBgiE,WACG,OAAR,QAAX,GAAAA,GAAS,UAAE,cAAX,GAAavqE,KACe,OAAd,QAAd,GAAAuI,GAAY,UAAE,cAAd,GAAgBgiE,WACG,QAAR,QAAX,GAAAA,GAAS,UAAE,cAAX,GAAavqE,KACe,OAAd,QAAd,GAAAuI,GAAY,UAAE,cAAd,GAAgBgiE,WACG,OAAR,QAAX,GAAAA,GAAS,UAAE,cAAX,GAAavqE,KACe,QAAd,QAAd,GAAAuI,GAAY,UAAE,cAAd,GAAgBgiE,WACG,QAAR,QAAX,GAAAA,GAAS,UAAE,cAAX,GAAavqE,KACM,QAAR,QAAX,GAAAuqE,GAAS,UAAE,cAAX,GAAavqE,KACe,QAAd,QAAd,GAAAuI,GAAY,UAAE,cAAd,GAAgBgiE,WACd,gBAAKvmE,UAAU,mDAAkD,UAC/D,iBAAKA,UAAU,wBAAuB,WACpC,2BACE,SAAC,MAAa,IAAG,YAEnB,iBAAKA,UAAU,oBAAmB,WAChC,gBAAKA,UAAU,kBAAiB,UAC9B,iBAAKA,UAAU,iBAAgB,WAC7B,kBAAOA,UAAU,QAAQiN,QAAQ,mBAAkB,SAAC,iBAGpD,iBAAMjN,UAAU,QAAO,SAAC,OACxB,gBAAKA,UAAU,QAAO,UACpB,gBACEA,UAAS,iCACyB,cAAlB,QAAd,GAAAuE,GAAY,UAAE,cAAd,GAAgBghE,cACZ,sBACA,GAAE,6BAIR,UAEA,SAAC,EAAAliE,wBAAuB,CACtBC,MAAO4iC,GACPxkC,KAAK,OACL8B,KAAK,WACLxH,GAAG,gBAEHyZ,YAAa,CACXjD,KAAM,CAAC,KAAM,QACb2hE,cAAc,EACdC,UAAW,IAEb1+D,oBAAoB,OACpBhK,YAAY,4CACZqB,kBAIG,QAJc,GACfm5B,GAASj1B,MACP,SAACnT,GAAI,aACHA,EAAK9B,MAAqB,QAAnB,EAAKuI,GAAY,UAAE,aAAd,EAAgBuwE,cAAa,WAC5C,cAHD,GAGGtxE,KAILC,SAAU,SAACC,GACTP,QAAQC,IAAIM,GACZ4M,IAAe,SAACwiE,GACd,IAAMC,GAAM,OAAOD,GAInB,OAFAC,EAAO,GAAkB,cAAIrvE,EAAE1H,GAExB+2E,CACT,GACF,EACAjvE,UAAU,cAMpB,gBAAK9D,UAAU,kBAAiB,UAC9B,iBAAKA,UAAU,iBAAgB,WAC7B,kBAAOA,UAAU,QAAQiN,QAAQ,mBAAkB,SAAC,kBAGpD,iBAAMjN,UAAU,QAAO,SAAC,OACxB,gBAAKA,UAAU,QAAO,UACpB,kBACE0B,KAAK,OACL1B,UAAU,4BACVqL,UAAQ,EACRrP,GAAG,eACH8P,UAAQ,EACRC,aAA4B,QAAhB,GAAExH,GAAY,UAAE,cAAd,GAAgBiiE,sBAKtC,gBAAKxmE,UAAU,kBAAiB,UAC9B,iBAAKA,UAAU,iBAAgB,WAC7B,mBAAOA,UAAU,QAAQiN,QAAQ,oBAAmB,UAAC,iBACtC,iBAAMjN,UAAU,aAAY,SAAC,cAE5C,iBAAMA,UAAU,QAAO,SAAC,OACxB,gBAAKA,UAAU,QAAO,UACpB,oBACEhE,GAAG,YACHuP,SAAU,SAAC7H,GAAC,OAAK6H,GAAS7H,EAAE,EAC5B2H,SACkC,cAAlB,QAAd,GAAA9G,GAAY,UAAE,cAAd,GAAgBghE,cAIlBvlE,UAAU,OACVuD,IAAK,SAACiI,GACJjI,GAAIkI,QAAQ,IAAMD,CACpB,EAAE,WAEF,oBAAQjG,MAAM,GAAE,UACb,IAAI,uBAGN7D,GAAKnF,KAAI,SAAC0P,GAAI,aACb,mBACE1G,MAAO0G,EAAKjQ,GACZmQ,SACEF,EAAKC,YAA2B,QAAlB,EAAI3H,GAAY,UAAE,aAAd,EAAgBkiE,aAGnC,SAEAx6D,EAAKC,WACC,sBAUzB,OAIJ,iBAAKlM,UAAU,MAAK,WAClB,iBAAKA,UAAU,iCAAgC,WAC7C,0BACG,KACD,SAAC,MAAW,IAAG,kCAEW,KAAb,QAAd,GAAAuE,GAAY,UAAE,cAAd,GAAgB+jE,UACU,KAAb,QAAd,GAAA/jE,GAAY,UAAE,cAAd,GAAgB+jE,UACW,KAAb,QAAd,GAAA/jE,GAAY,UAAE,cAAd,GAAgB+jE,UACd,iBAAKtoE,UAAU,oBAAmB,WAChC,gBAAKA,UAAU,kBAAiB,UAC9B,iBAAKA,UAAU,iBAAgB,WAC7B,kBAAOA,UAAU,QAAQiN,QAAQ,sBAAqB,SAAC,0BAGvD,iBAAMjN,UAAU,QAAO,SAAC,OACxB,gBAAKA,UAAU,QAAO,UACpB,oBACEhE,GAAG,qBACHuP,SAAU,SAAC7H,GAAC,OAAK6H,GAAS7H,EAAE,EAC5B2H,SACkC,cAAlB,QAAd,GAAA9G,GAAY,UAAE,cAAd,GAAgBghE,cAGjB,WAED,mBAAQhgE,MAAM,GAAE,SAAC,wBACjB,mBACEA,MAAM,MACN4G,SACoC,cAApB,QAAd,GAAA5H,GAAY,UAAE,cAAd,GAAgBgkE,gBACZ,MACA,GACL,SACF,eAGD,mBACEhjE,MAAM,MACN4G,SACoC,aAApB,QAAd,GAAA5H,GAAY,UAAE,cAAd,GAAgBgkE,gBACZ,MACA,GACL,SACF,cAGD,mBACEhjE,MAAM,MACN4G,SACoC,kBAApB,QAAd,GAAA5H,GAAY,UAAE,cAAd,GAAgBgkE,gBACZ,MACA,GACL,SACF,mBAGD,mBACEhjE,MAAM,MACN4G,SACoC,QAApB,QAAd,GAAA5H,GAAY,UAAE,cAAd,GAAgBgkE,gBAA0B,MAAQ,GACnD,SACF,mBAOT,gBAAKvoE,UAAU,kBAAiB,UAC9B,iBAAKA,UAAU,iBAAgB,WAC7B,kBAAOA,UAAU,QAAQiN,QAAQ,2BAA0B,SAAC,gCAG5D,iBAAMjN,UAAU,QAAO,SAAC,OACxB,gBAAKA,UAAU,QAAO,UACpB,oBACEhE,GAAG,wBACHuP,SAAU,SAAC7H,GAAC,OAAK6H,GAAS7H,EAAE,EAC5B2H,SACkC,cAAlB,QAAd,GAAA9G,GAAY,UAAE,cAAd,GAAgBghE,cAGjB,WAED,mBAAQhgE,MAAM,GAAE,SAAC,wBACjB,mBACEA,MAAM,MACN4G,SACsC,cAAtB,QAAd,GAAA5H,GAAY,UAAE,cAAd,GAAgBikE,kBACZ,MACA,GACL,SACF,eAGD,mBACEjjE,MAAM,MACN4G,SACsC,aAAtB,QAAd,GAAA5H,GAAY,UAAE,cAAd,GAAgBikE,kBACZ,MACA,GACL,SACF,cAGD,mBACEjjE,MAAM,MACN4G,SACsC,kBAAtB,QAAd,GAAA5H,GAAY,UAAE,cAAd,GAAgBikE,kBACZ,MACA,GACL,SACF,mBAGD,mBACEjjE,MAAM,MACN4G,SACsC,QAAtB,QAAd,GAAA5H,GAAY,UAAE,cAAd,GAAgBikE,kBACZ,MACA,GACL,SACF,mBAOT,gBAAKxoE,UAAU,kBAAiB,UAC9B,iBAAKA,UAAU,iBAAgB,WAC7B,kBACEA,UAAU,QACViN,QAAQ,+BAA8B,SACvC,oCAGD,iBAAMjN,UAAU,QAAO,SAAC,OACxB,gBAAKA,UAAU,QAAO,UACpB,oBACEhE,GAAG,qBACHuP,SAAU,SAAC7H,GAAC,OAAK6H,GAAS7H,EAAE,EAC5B2H,SACkC,cAAlB,QAAd,GAAA9G,GAAY,UAAE,cAAd,GAAgBghE,cAGjB,WAED,mBAAQhgE,MAAM,GAAE,SAAC,wBACjB,mBACEA,MAAM,MACN4G,SACmC,cAAnB,QAAd,GAAA5H,GAAY,UAAE,cAAd,GAAgBkkE,eACZ,MACA,GACL,SACF,eAGD,mBACEljE,MAAM,MACN4G,SACmC,aAAnB,QAAd,GAAA5H,GAAY,UAAE,cAAd,GAAgBkkE,eACZ,MACA,GACL,SACF,cAGD,mBACEljE,MAAM,MACN4G,SACmC,kBAAnB,QAAd,GAAA5H,GAAY,UAAE,cAAd,GAAgBkkE,eACZ,MACA,GACL,SACF,mBAGD,mBACEljE,MAAM,MACN4G,SACmC,QAAnB,QAAd,GAAA5H,GAAY,UAAE,cAAd,GAAgBkkE,eAAyB,MAAQ,GAClD,SACF,mBAOT,gBAAKzoE,UAAU,kBAAiB,UAC9B,iBAAKA,UAAU,iBAAgB,WAC7B,kBAAOA,UAAU,QAAQiN,QAAQ,wBAAuB,SAAC,yCAGzD,iBAAMjN,UAAU,QAAO,SAAC,OACxB,gBAAKA,UAAU,QAAO,UACpB,oBACEhE,GAAG,yBACHuP,SAAU,SAAC7H,GAAC,OAAK6H,GAAS7H,EAAE,EAC5B2H,SACkC,cAAlB,QAAd,GAAA9G,GAAY,UAAE,cAAd,GAAgBghE,cAGjB,WAED,mBAAQhgE,MAAM,GAAE,SAAC,wBACjB,mBACEA,MAAM,MACN4G,SACsC,cAAtB,QAAd,GAAA5H,GAAY,UAAE,cAAd,GAAgBmkE,kBACZ,MACA,GACL,SACF,eAGD,mBACEnjE,MAAM,MACN4G,SACsC,aAAtB,QAAd,GAAA5H,GAAY,UAAE,cAAd,GAAgBmkE,kBACZ,MACA,GACL,SACF,cAGD,mBACEnjE,MAAM,MACN4G,SACsC,kBAAtB,QAAd,GAAA5H,GAAY,UAAE,cAAd,GAAgBmkE,kBACZ,MACA,GACL,SACF,mBAGD,mBACEnjE,MAAM,MACN4G,SACsC,QAAtB,QAAd,GAAA5H,GAAY,UAAE,cAAd,GAAgBmkE,kBACZ,MACA,GACL,SACF,mBAOT,gBAAK1oE,UAAU,kBAAiB,UAC9B,iBAAKA,UAAU,iBAAgB,WAC7B,kBACEA,UAAU,QACViN,QAAQ,8BAA6B,SACtC,0CAGD,iBAAMjN,UAAU,QAAO,SAAC,OACxB,gBAAKA,UAAU,QAAO,UACpB,oBACEhE,GAAG,mBACHuP,SAAU,SAAC7H,GAAC,OAAK6H,GAAS7H,EAAE,EAC5B2H,SACkC,cAAlB,QAAd,GAAA9G,GAAY,UAAE,cAAd,GAAgBghE,cAGjB,WAED,mBAAQhgE,MAAM,GAAE,SAAC,wBACjB,mBACEA,MAAM,MACN4G,SACiC,cAAjB,QAAd,GAAA5H,GAAY,UAAE,cAAd,GAAgBokE,aACZ,MACA,GACL,SACF,eAGD,mBACEpjE,MAAM,MACN4G,SACiC,aAAjB,QAAd,GAAA5H,GAAY,UAAE,cAAd,GAAgBokE,aACZ,MACA,GACL,SACF,cAGD,mBACEpjE,MAAM,MACN4G,SACiC,kBAAjB,QAAd,GAAA5H,GAAY,UAAE,cAAd,GAAgBokE,aACZ,MACA,GACL,SACF,mBAGD,mBACEpjE,MAAM,MACN4G,SACiC,QAAjB,QAAd,GAAA5H,GAAY,UAAE,cAAd,GAAgBokE,aAAuB,MAAQ,GAChD,SACF,mBAOT,gBAAK3oE,UAAU,kBAAiB,UAC9B,iBAAKA,UAAU,iBAAgB,WAC7B,kBAAOA,UAAU,QAAQiN,QAAQ,YAAW,SAAC,mDAG7C,iBAAMjN,UAAU,QAAO,SAAC,OACxB,gBAAKA,UAAU,QAAO,UACpB,oBACEhE,GAAG,cACHuP,SAAU,SAAC7H,GAAC,OAAK6H,GAAS7H,EAAE,EAC5B2H,SACkC,cAAlB,QAAd,GAAA9G,GAAY,UAAE,cAAd,GAAgBghE,cAGjB,WAED,mBAAQhgE,MAAM,GAAE,SAAC,wBACjB,mBACEA,MAAM,MACN4G,SAC6B,cAAb,QAAd,GAAA5H,GAAY,UAAE,cAAd,GAAgBqkE,SAAyB,MAAQ,GAClD,SACF,eAGD,mBACErjE,MAAM,MACN4G,SAC6B,aAAb,QAAd,GAAA5H,GAAY,UAAE,cAAd,GAAgBqkE,SAAwB,MAAQ,GACjD,SACF,cAGD,mBACErjE,MAAM,MACN4G,SAC6B,kBAAb,QAAd,GAAA5H,GAAY,UAAE,cAAd,GAAgBqkE,SACZ,MACA,GACL,SACF,mBAGD,mBACErjE,MAAM,MACN4G,SAC6B,QAAb,QAAd,GAAA5H,GAAY,UAAE,cAAd,GAAgBqkE,SAAmB,MAAQ,GAC5C,SACF,mBAOT,gBAAK5oE,UAAU,kBAAiB,UAC9B,iBAAKA,UAAU,iBAAgB,WAC7B,kBAAOA,UAAU,QAAQiN,QAAQ,kBAAiB,SAAC,0BAGnD,iBAAMjN,UAAU,QAAO,SAAC,OACxB,gBAAKA,UAAU,QAAO,UACpB,oBACEhE,GAAG,mBACHuP,SAAU,SAAC7H,GAAC,OAAK6H,GAAS7H,EAAE,EAC5B2H,SACkC,cAAlB,QAAd,GAAA9G,GAAY,UAAE,cAAd,GAAgBghE,cAGjB,WAED,mBAAQhgE,MAAM,GAAE,SAAC,wBACjB,mBACEA,MAAM,MACN4G,SACmC,cAAnB,QAAd,GAAA5H,GAAY,UAAE,cAAd,GAAgBskE,eACZ,MACA,GACL,SACF,eAGD,mBACEtjE,MAAM,MACN4G,SACmC,aAAnB,QAAd,GAAA5H,GAAY,UAAE,cAAd,GAAgBskE,eACZ,MACA,GACL,SACF,cAGD,mBACEtjE,MAAM,MACN4G,SACmC,kBAAnB,QAAd,GAAA5H,GAAY,UAAE,cAAd,GAAgBskE,eACZ,MACA,GACL,SACF,mBAGD,mBACEtjE,MAAM,MACN4G,SACmC,QAAnB,QAAd,GAAA5H,GAAY,UAAE,cAAd,GAAgBskE,eAAyB,MAAQ,GAClD,SACF,qBASX,OAIJ,iBAAK7oE,UAAU,iCAAgC,WAC7C,0BACG,KACD,SAAC,MAAa,IAAG,oBAEnB,mBAAOA,UAAU,8CAA6C,WAC5D,4BACE,2BACE,eAAIlF,MAAM,MAAK,SAAC,SAChB,eAAIA,MAAM,KAAI,SAAC,iBACf,eAAIA,MAAM,MAAK,SAAC,gBAChB,eAAIA,MAAM,MAAK,SAAC,aAChB,eAAIA,MAAM,MAAK,SAAC,iBAGpB,8BACE,2BACE,eAAIA,MAAM,KAAI,SAAC,cACf,gBAAIA,MAAM,MAAMkB,GAAG,eAAc,UACE,OAAlB,QAAd,GAAAuI,GAAY,UAAE,cAAd,GAAgBuiE,cACb,IACA3+D,IAAqB,QAAf,GAAC5D,GAAY,UAAE,cAAd,GAAgBuiE,cAAcz+D,OACnC,eACA,KAEyB,OAAhB,QAAd,GAAA9D,GAAY,UAAE,cAAd,GAAgBwiE,YACb,IACA5+D,IAAqB,QAAf,GAAC5D,GAAY,UAAE,cAAd,GAAgBwiE,YAAY1+D,OACjC,mBAGR,eAAIvN,MAAM,MAAMkB,GAAG,cAAa,UAC9B,iBAAKgE,UAAU,oBAAmB,WAChC,SAAC,IAAU,CACThE,GAAG,gBACHgE,UAAU,GACVmM,SAAUyiE,GACVtiE,WAAW,cACXC,mBAAiB,EACjBC,kBAAgB,EAChBC,aAAa,SACbsO,MAAqB,QAAhB,GAAExW,GAAY,UAAE,cAAd,GAAgByiE,cACvBz7D,SAAU,SAAC7H,GACTmrE,GAAgBnrE,GAChB4M,IAAe,SAACwiE,GACd,IAAMC,GAAM,OAAOD,GAGnB,OAFAC,EAAO,GAAkB,cACvB5qE,IAAOzE,GAAG2E,OAAO,cACZ0qE,CACT,GACF,EACA1nE,SACkC,cAAlB,QAAd,GAAA9G,GAAY,UAAE,cAAd,GAAgBghE,cAIlB35D,UAAW,SAAClI,GACVA,EAAEwH,gBACJ,KAEF,SAAC,IAAU,CACTlP,GAAG,cACHgE,UAAU,GACVmM,SAAU2iE,GACVxiE,WAAW,cACXC,mBAAiB,EACjBwO,MAAqB,QAAhB,GAAExW,GAAY,UAAE,cAAd,GAAgB0iE,YACvBz6D,kBAAgB,EAChBC,aAAa,SACblB,SAAU,SAAC7H,GACTqrE,GAAcrrE,GACd4M,IAAe,SAACwiE,GACd,IAAMC,GAAM,OAAOD,GAKnB,OAHAC,EAAO,GAAgB,YACrB5qE,IAAOzE,GAAG2E,OAAO,cAEZ0qE,CACT,GACF,EACA1nE,SACkC,cAAlB,QAAd,GAAA9G,GAAY,UAAE,cAAd,GAAgBghE,cAIlB35D,UAAW,SAAClI,GACVA,EAAEwH,gBACJ,UAIN,eAAIpQ,MAAM,MAAMkB,GAAG,cAAa,UAC9B,iBAAKgE,UAAU,oBAAmB,WAChC,SAAC,IAAU,CACThE,GAAG,iBACHgE,UAAU,GACVmM,SAAU6iE,GACV1iE,WAAW,cACXC,mBAAiB,EACjBC,kBAAgB,EAChBC,aAAa,SACblB,SAAU,SAAC7H,GACTurE,GAAiBvrE,GACjB4M,IAAe,SAACwiE,GACd,IAAMC,GAAM,OAAOD,GAKnB,OAHAC,EAAO,GAAmB,eACxB5qE,IAAOzE,GAAG2E,OAAO,cAEZ0qE,CACT,GACF,EACA1rD,QAAS2nD,GACT3jE,SACkC,cAAlB,QAAd,GAAA9G,GAAY,UAAE,cAAd,GAAgBghE,cAIlB35D,UAAW,SAAClI,GACVA,EAAEwH,gBACJ,KAEF,SAAC,IAAU,CACTlP,GAAG,eACHgE,UAAU,GACVmM,SAAU+iE,GACV5iE,WAAW,cACXC,mBAAiB,EACjBC,kBAAgB,EAChBC,aAAa,SACblB,SAAU,SAAC7H,GACTyrE,GAAezrE,GACf4M,IAAe,SAACwiE,GACd,IAAMC,GAAM,OAAOD,GAKnB,OAHAC,EAAO,GAAiB,aACtB5qE,IAAOzE,GAAG2E,OAAO,cAEZ0qE,CACT,GACF,EACArmE,QAASwiE,GACT7jE,SACkC,cAAlB,QAAd,GAAA9G,GAAY,UAAE,cAAd,GAAgBghE,cAIlB35D,UAAW,SAAClI,GACVA,EAAEwH,gBACJ,UAIN,eAAIlP,GAAG,UAAS,UACd,iBAAKgE,UAAU,oBAAmB,WAChC,SAAC,IAAU,CACThE,GAAG,eACH0F,KAAK,OACLyK,SAAU+6D,GACV56D,WAAW,cACXC,mBAAiB,EACjBC,kBAAgB,EAChBkkC,qBACmBlqC,IAAjB0gE,GAA6B,oBAAsB,GAErD37D,SAAU,SAAC7H,GACT0rE,GAAgB1rE,GAChB4M,IAAe,SAACwiE,GACd,IAAMC,GAAM,OAAOD,GAKnB,OAHAC,EAAO,GAAiB,aACtB5qE,IAAOzE,GAAG2E,OAAO,cAEZ0qE,CACT,GACF,EACA1rD,QAAS6/C,GACT77D,SACkC,cAAlB,QAAd,GAAA9G,GAAY,UAAE,cAAd,GAAgBghE,cAIlB35D,UAAW,SAAClI,GACVA,EAAEwH,gBACJ,KAGF,kBACElL,UAAU,qBACV0B,KAAK,OACL2J,UAAQ,EACRK,YAAY,kBACZqP,MACiB,KAAfosD,GACmC,QAAjB,QAAd,GAAA5iE,GAAY,UAAE,cAAd,GAAgB4iE,kBACe3gE,KAAjB,QAAd,GAAAjC,GAAY,UAAE,cAAd,GAAgB4iE,YACd,GACAh/D,IAAqB,QAAf,GAAC5D,GAAY,UAAE,cAAd,GAAgB4iE,YAAY9+D,OACjC,eAEW,OAAf8+D,GACA,GACAh/D,IAAOg/D,IAAY9+D,OAAO,0BAMxC,2BACE,wBAAI,qBACJ,eAAIrM,GAAG,WAAU,UACf,0BACE,kBACEgE,UAAU,eACV0B,KAAK,OACL2J,UAAQ,EACRU,aAAwB,QAAZ,GAAE43D,GAAQ,UAAE,cAAV,GAAY0D,4BAIhC,eAAIrrE,GAAG,UAAS,UACd,0BACE,kBACE0F,KAAK,OACL1B,UAAU,eACVqL,UAAQ,EACR0P,MAAOy0D,UAIb,eAAIxzE,GAAG,UAAS,UACd,0BACE,kBACE0F,KAAK,OACL1B,UAAU,eACVqL,UAAQ,EACR0P,MAAO20D,UAIb,eAAI1zE,GAAG,UAAS,UACd,0BACE,kBACEgE,UAAU,eACV0B,KAAK,OACL2J,UAAQ,EACR0P,MAAiB,QAAZ,GAAE4oD,GAAQ,UAAE,cAAV,GAAY6D,0BAK3B,2BACE,0BAAI,MACE,KACJ,SAAC,MAAY,CACXxnE,UAAU,GACV2B,MAAM,gCAGV,eAAI3F,GAAG,UAAS,UACd,0BACE,kBACEuP,SAAU,SAAC7H,GACT,IAAMmwE,EAAQnwE,EAAEmH,OAAOtF,MACT,oBAEH0F,KAAK4oE,KACdnwE,EAAEmH,OAAOtF,MAAQsuE,EAAMn8D,QAAQ,WAAY,KAE7Cs7D,GAAetvE,EACjB,EACA1H,GAAG,iBACHgE,UAAU,SACVqL,SACkC,cAAlB,QAAd,GAAA9G,GAAY,UAAE,cAAd,GAAgBghE,cAIlB7jE,KAAK,OACL6D,MACyB,OAAT,QAAd,GAAAhB,GAAY,UAAE,cAAd,GAAgBojE,KAAc,EAAkB,QAAjB,GAAGpjE,GAAY,UAAE,cAAd,GAAgBojE,WAK1D,eAAI3rE,GAAG,SAAQ,UACb,0BACE,kBACEuP,SAAU,SAAC7H,GACT,IAAMmwE,EAAQnwE,EAAEmH,OAAOtF,MACT,oBAEH0F,KAAK4oE,KACdnwE,EAAEmH,OAAOtF,MAAQsuE,EAAMn8D,QAAQ,WAAY,KAE7Cs7D,GAAetvE,EACjB,EACA1D,UAAU,sBACVhE,GAAG,cACH0F,KAAK,OACL2J,UAAQ,EACR9F,MAIEyoE,UAKR,eAAIhyE,GAAG,SAAQ,UACb,0BACE,kBACEgE,UAAU,eACV0B,KAAK,OACL2J,UAAQ,EACR9F,MAIE2oE,UAKR,eAAIlyE,GAAG,UAAS,UACd,0BACE,kBACEgE,UAAU,sBACV0B,KAAK,OACL2J,UAAQ,EACR9F,MAC4B,OAAhB,QAAV,GAAAo+D,GAAQ,UAAE,cAAV,GAAYoR,YACR,IACW,QAAV,GAAApR,GAAQ,UAAE,cAAV,GAAYoR,YAAa,KAAM71C,QAAQ,aAMtD,2BACE,wBAAI,kBACJ,eAAIljC,GAAG,UAAS,UACd,gBACEgE,UAAU,SACVuD,IAAK,SAACiI,GACJjI,GAAIkI,QAAQ,IAAMD,CACpB,EAAE,UAEF,kBACExL,UAAU,SACVhE,GAAG,qBACH0F,KAAK,OACL6J,SAAU,SAAC7H,GACT,IAAMmwE,EAAQnwE,EAAEmH,OAAOtF,MACT,oBAEH0F,KAAK4oE,KACdnwE,EAAEmH,OAAOtF,MAAQsuE,EAAMn8D,QAAQ,WAAY,KAE7Cs7D,GAAetvE,EACjB,EACA2H,SACkC,cAAlB,QAAd,GAAA9G,GAAY,UAAE,cAAd,GAAgBghE,cAIlBxqD,MACwC,kBAA/B8oD,GAAQ6I,mBACX7I,GAAQ6I,mBAAmBxtC,QAAQ,GACJ,KAA/B2kC,GAAQ6I,mBACR,OAC+B,OAA/B7I,GAAQ6I,mBACR,MACA7I,GAAQ6I,0BAKpB,eAAI1wE,GAAG,SAAQ,UACb,gBACEgE,UAAU,SACVuD,IAAK,SAACiI,GACJjI,GAAIkI,QAAQ,IAAMD,CACpB,EAAE,UAEF,kBACExP,GAAG,oBACHgE,UAAU,SACV0B,KAAK,OACL6J,SAAU,SAAC7H,GACT,IAAMmwE,EAAQnwE,EAAEmH,OAAOtF,MACT,oBAEH0F,KAAK4oE,KACdnwE,EAAEmH,OAAOtF,MAAQsuE,EAAMn8D,QAAQ,WAAY,KAE7Cs7D,GAAetvE,EACjB,EACA2H,SACkC,cAAlB,QAAd,GAAA9G,GAAY,UAAE,cAAd,GAAgBghE,cAIlBxqD,MACuC,kBAA9B8oD,GAAQ8I,kBACX9I,GAAQ8I,kBAAkBztC,QAAQ,GACJ,KAA9B2kC,GAAQ8I,kBACR,OAC8B,OAA9B9I,GAAQ8I,kBACR,MACA9I,GAAQ8I,yBAKpB,eAAI3wE,GAAG,SAAQ,UACb,0BACE,kBACEgE,UAAU,sBACV0B,KAAK,OACL2J,UAAQ,EACR0P,MAC+B,OAAnB,QAAV,GAAA4oD,GAAQ,UAAE,cAAV,GAAYyD,eACR,EACU,QADT,GACDzD,GAAQ,UAAE,QAAe,QAAf,GAAV,GAAYyD,qBAAa,YAAf,EAAV,GAA2Bz+C,eAAe,gBAKtD,eAAI3sB,GAAG,UAAS,UACd,0BACE,kBACEgE,UAAU,sBACV0B,KAAK,OACL2J,UAAQ,EACR0P,MAC8B,OAAlB,QAAV,GAAA4oD,GAAQ,UAAE,cAAV,GAAYoE,cACR,EACU,QADT,GACDpE,GAAQ,UAAE,QAAc,QAAd,GAAV,GAAYoE,oBAAY,YAAd,EAAV,GAA0Bp/C,eAAe,mBAMvD,2BACE,wBAAI,aACJ,eAAI3sB,GAAG,UAAS,UACd,gBACEgE,UAAU,SACVuD,IAAK,SAACiI,GACJjI,GAAIkI,QAAQ,IAAMD,CACpB,EAAE,UAEF,kBACExP,GAAG,UAEH0F,KAAK,OACL6J,SAAU,SAAC7H,GACT,IAAMmwE,EAAQnwE,EAAEmH,OAAOtF,MACT,oBAEH0F,KAAK4oE,KACdnwE,EAAEmH,OAAOtF,MAAQsuE,EAAMn8D,QAAQ,WAAY,KAE7Cs7D,GAAetvE,EACjB,EACA2H,SACkC,cAAlB,QAAd,GAAA9G,GAAY,UAAE,cAAd,GAAgBghE,cAIlBxqD,MAC6B,kBAApBg6C,GAAQA,QACXA,GAAQA,QAAQ71B,QAAQ,GACJ,KAApB61B,GAAQA,QACR,OACoB,OAApBA,GAAQA,QACR,MACAA,GAAQA,eAKpB,eAAI/4D,GAAG,aAAY,UACjB,gBACEgE,UAAU,SACVuD,IAAK,SAACiI,GACJjI,GAAIkI,QAAQ,IAAMD,CACpB,EAAE,UAEF,kBACExP,GAAG,oBACHgE,UAAU,SACV0B,KAAK,OACL6J,SAAU,SAAC7H,GACT,IAAMmwE,EAAQnwE,EAAEmH,OAAOtF,MACT,oBAEH0F,KAAK4oE,KACdnwE,EAAEmH,OAAOtF,MAAQsuE,EAAMn8D,QAAQ,WAAY,KAE7Cs7D,GAAetvE,EACjB,EACA2H,SACkC,cAAlB,QAAd,GAAA9G,GAAY,UAAE,cAAd,GAAgBghE,cAIlBxqD,MACuC,kBAA9Bg6C,GAAQ+X,kBACX/X,GAAQ+X,kBAAkB5tC,QAAQ,GACJ,KAA9B61B,GAAQ+X,kBACR,OAC8B,OAA9B/X,GAAQ+X,kBACR,MACA/X,GAAQ+X,yBAKpB,eAAI9wE,GAAG,aAAY,UACjB,0BACE,kBACEgE,UAAU,eACV0B,KAAK,OACL2J,UAAQ,EACRE,SAAU,SAAC7H,GACT,IAAMmwE,EAAQnwE,EAAEmH,OAAOtF,MACT,oBAEH0F,KAAK4oE,KACdnwE,EAAEmH,OAAOtF,MAAQsuE,EAAMn8D,QAAQ,WAAY,KAE7Cs7D,GAAetvE,EACjB,EACA6B,MACiC,KAArB,QAAV,GAAAo+D,GAAQ,UAAE,cAAV,GAAYqE,kBACmB,OAArB,QAAV,GAAArE,GAAQ,UAAE,cAAV,GAAYqE,iBACR,EACU,QADT,GACDrE,GAAQ,UAAE,QAAiB,QAAjB,GAAV,GAAYqE,uBAAe,YAAjB,EAAV,GAA6Br/C,eAC3B,gBAMd,eAAI3sB,GAAG,UAAS,UACd,0BACE,kBACEgE,UAAU,eACV0B,KAAK,OACL2J,UAAQ,EACR9F,MACgC,OAApB,QAAV,GAAAo+D,GAAQ,UAAE,cAAV,GAAYsE,gBACR,EACU,QADT,GACDtE,GAAQ,UAAE,QAAgB,QAAhB,GAAV,GAAYsE,sBAAc,YAAhB,EAAV,GAA4Bt/C,eAC1B,mBAOhB,2BACE,wBAAI,0BACJ,eAAI3sB,GAAG,WAAU,UACf,gBACEgE,UAAU,SACVuD,IAAK,SAACiI,GACJjI,GAAIkI,QAAQ,IAAMD,CACpB,EAAE,UAEF,kBACExL,UAAU,SACVhE,GAAG,iBACHwH,KAAK,iBACL+H,SAAU,SAAC7H,GACT,IAAMmwE,EAAQnwE,EAAEmH,OAAOtF,MACT,oBAEH0F,KAAK4oE,KACdnwE,EAAEmH,OAAOtF,MAAQsuE,EAAMn8D,QAAQ,WAAY,KAE7Cs7D,GAAetvE,EACjB,EACA2H,SACkC,cAAlB,QAAd,GAAA9G,GAAY,UAAE,cAAd,GAAgBghE,cAIlB7jE,KAAK,OACLqZ,MACuC,kBAA9BipD,GAAW+I,eACd/I,GAAW+I,eAAe7tC,QAAQ,GACJ,KAA9B8kC,GAAW+I,eACX,OAC8B,OAA9B/I,GAAW+I,eACX,MACA/I,GAAW+I,sBAKvB,eAAI/wE,GAAG,UAAS,UACd,gBACEgE,UAAU,SACVuD,IAAK,SAACiI,GACJjI,GAAIkI,QAAQ,IAAMD,CACpB,EAAE,UAEF,kBACExP,GAAG,cACH0F,KAAK,OACL1B,UAAU,SACVuL,SAAU,SAAC7H,GACT,IAAMmwE,EAAQnwE,EAAEmH,OAAOtF,MACT,oBAEH0F,KAAK4oE,KACdnwE,EAAEmH,OAAOtF,MAAQsuE,EAAMn8D,QAAQ,WAAY,KAE7Cs7D,GAAetvE,EACjB,EACA2H,SACkC,cAAlB,QAAd,GAAA9G,GAAY,UAAE,cAAd,GAAgBghE,cAIlBxqD,MACoC,kBAA3BipD,GAAWgJ,YACdhJ,GAAWgJ,YAAY9tC,QAAQ,GACJ,KAA3B8kC,GAAWgJ,YACX,OAC2B,OAA3BhJ,GAAWgJ,YACX,MACAhJ,GAAWgJ,mBAKvB,eAAIhxE,GAAG,UAAS,UACd,0BACE,kBACEgE,UAAU,sBACV0B,KAAK,OACL2J,UAAQ,EACRE,SAAU,SAAC7H,GACT,IAAMmwE,EAAQnwE,EAAEmH,OAAOtF,MACT,oBAEH0F,KAAK4oE,KACdnwE,EAAEmH,OAAOtF,MAAQsuE,EAAMn8D,QAAQ,WAAY,KAE7Cs7D,GAAetvE,EACjB,EACAqX,MACqC,OAAzB,QAAV,GAAA4oD,GAAQ,UAAE,cAAV,GAAYuE,qBACR,EACU,QADT,GACDvE,GAAQ,UAAE,QAAqB,QAArB,GAAV,GAAYuE,2BAAmB,YAArB,EAAV,GAAiCv/C,eAC/B,gBAMd,eAAI3sB,GAAG,UAAS,UACd,0BACE,kBACEgE,UAAU,eACV0B,KAAK,OACL2J,UAAQ,EACRE,SAAU,SAAC7H,GACT,IAAMmwE,EAAQnwE,EAAEmH,OAAOtF,MACT,oBAEH0F,KAAK4oE,KACdnwE,EAAEmH,OAAOtF,MAAQsuE,EAAMn8D,QAAQ,WAAY,KAE7Cs7D,GAAetvE,EACjB,EACA6B,MACoC,OAAxB,QAAV,GAAAo+D,GAAQ,UAAE,cAAV,GAAYwE,oBACR,EACU,QADT,GACDxE,GAAQ,UAAE,QAAoB,QAApB,GAAV,GAAYwE,0BAAkB,YAApB,EAAV,GAAgCx/C,eAC9B,mBAOhB,2BACE,wBAAI,gBACJ,eAAI3sB,GAAG,WAAU,UACf,gBACEgE,UAAU,SACVuD,IAAK,SAACiI,GACJjI,GAAIkI,QAAQ,IAAMD,CACpB,EAAE,UAEF,kBACExP,GAAG,uBACHgE,UAAU,SACVuL,SAAU,SAAC7H,GACT,IAAMmwE,EAAQnwE,EAAEmH,OAAOtF,MACT,oBAEH0F,KAAK4oE,KACdnwE,EAAEmH,OAAOtF,MAAQsuE,EAAMn8D,QAAQ,WAAY,KAE7Cs7D,GAAetvE,EACjB,EACA2H,SACkC,cAAlB,QAAd,GAAA9G,GAAY,UAAE,cAAd,GAAgBghE,cAIlB7jE,KAAK,OACLqZ,MAC4C,kBAAnCmpD,GAAUgJ,qBACbhJ,GAAUgJ,qBAAqBhuC,QAAQ,GACJ,KAAnCglC,GAAUgJ,qBACV,OACmC,OAAnChJ,GAAUgJ,qBACV,MACAhJ,GAAUgJ,4BAKtB,eAAIlxE,GAAG,UAAS,UACd,gBACEgE,UAAU,SACVuD,IAAK,SAACiI,GACJjI,GAAIkI,QAAQ,IAAMD,CACpB,EAAE,UAEF,kBACExP,GAAG,oBACHgE,UAAU,SACVuL,SAAU,SAAC7H,GACT,IAAMmwE,EAAQnwE,EAAEmH,OAAOtF,MACT,oBAEH0F,KAAK4oE,KACdnwE,EAAEmH,OAAOtF,MAAQsuE,EAAMn8D,QAAQ,WAAY,KAE7Cs7D,GAAetvE,EACjB,EACA2H,SACkC,cAAlB,QAAd,GAAA9G,GAAY,UAAE,cAAd,GAAgBghE,cAIlB7jE,KAAK,OACLqZ,MACyC,kBAAhCmpD,GAAUiJ,kBACbjJ,GAAUiJ,kBAAkBjuC,QAAQ,GACJ,KAAhCglC,GAAUiJ,kBACV,OACgC,OAAhCjJ,GAAUiJ,kBACV,MACAjJ,GAAUiJ,yBAKtB,eAAInxE,GAAG,UAAS,UACd,0BACE,kBACE0F,KAAK,OACL1B,UAAU,eACVqL,UAAQ,EACRE,SAAU,SAAC7H,GACT,IAAMmwE,EAAQnwE,EAAEmH,OAAOtF,MACT,oBAEH0F,KAAK4oE,KACdnwE,EAAEmH,OAAOtF,MAAQsuE,EAAMn8D,QAAQ,WAAY,KAE7Cs7D,GAAetvE,EACjB,EACA6B,MACoC,OAAxB,QAAV,GAAAo+D,GAAQ,UAAE,cAAV,GAAYyE,oBACR,EACU,QADT,GACDzE,GAAQ,UAAE,QAAoB,QAApB,GAAV,GAAYyE,0BAAkB,YAApB,EAAV,GAAgCz/C,eAC9B,gBAMd,eAAI3sB,GAAG,UAAS,UACd,0BACE,kBACEgE,UAAU,eACV0B,KAAK,OACL2J,UAAQ,EACRE,SAAU,SAAC7H,GACT,IAAMmwE,EAAQnwE,EAAEmH,OAAOtF,MACT,oBAEH0F,KAAK4oE,KACdnwE,EAAEmH,OAAOtF,MAAQsuE,EAAMn8D,QAAQ,WAAY,KAE7Cs7D,GAAetvE,EACjB,EACA6B,MACmC,OAAvB,QAAV,GAAAo+D,GAAQ,UAAE,cAAV,GAAY0E,mBACR,EACU,QADT,GACD1E,GAAQ,UAAE,QAAmB,QAAnB,GAAV,GAAY0E,yBAAiB,YAAnB,EAAV,GAA+B1/C,eAC7B,mBAOhB,2BACE,0BAAI,eACW,KACb,SAAC,MAAY,CACX3oB,UAAU,GACV2B,MAAM,qCAGV,eAAI3F,GAAG,WAAU,UACf,0BACE,kBACEqP,UAAQ,EACRrL,UAAU,eACV0B,KAAK,OACL6J,SAAU,SAAC7H,GACT,IAAMmwE,EAAQnwE,EAAEmH,OAAOtF,MACT,oBAEH0F,KAAK4oE,KACdnwE,EAAEmH,OAAOtF,MAAQsuE,EAAMn8D,QAAQ,WAAY,KAE7Cs7D,GAAetvE,EACjB,EACA6B,MAAO6nE,UAIb,eAAIpxE,GAAG,UAAS,UACd,0BACE,kBACE0F,KAAK,OACL1B,UAAU,eACVqL,UAAQ,EACR9F,MAAOmoE,UAIb,eAAI1xE,GAAG,UAAS,UACd,0BACE,kBACE0F,KAAK,OACL1B,UAAU,eACVqL,UAAQ,EACR9F,MACiC,OAArB,QAAV,GAAAo+D,GAAQ,UAAE,cAAV,GAAYqE,iBACRlgD,GAAUmB,YAAVnB,KACAA,GAAUmB,YACV,KAImC,QAJhC,IAES,QAAV,GAAA06C,GAAQ,UAAE,cAAV,GAAYqE,mBACD,QAAV,GAAArE,GAAQ,UAAE,cAAV,GAAYuE,sBACD,QADoB,GAC9BvE,GAAQ,UAAE,cAAV,GAAYyE,4BAAmB,cAHnC,GAIGz/C,eAAe,iBAK9B,eAAI3sB,GAAG,UAAS,UACd,0BACE,kBACE0F,KAAK,OACL1B,UAAU,eACVqL,UAAQ,EACR9F,MACgC,OAApB,QAAV,GAAAo+D,GAAQ,UAAE,cAAV,GAAYsE,gBACRngD,GAAUmB,YAAVnB,KACAA,GAAUmB,YACV,KAIkC,QAJ/B,IAES,QAAV,GAAA06C,GAAQ,UAAE,cAAV,GAAYsE,kBACD,QAAV,GAAAtE,GAAQ,UAAE,cAAV,GAAYwE,qBACD,QADmB,GAC7BxE,GAAQ,UAAE,cAAV,GAAY0E,2BAAkB,cAHlC,GAIG1/C,eAAe,oBAMhC,2BACE,0BAAI,OACG,KACL,SAAC,MAAY,CACX3oB,UAAU,GACV2B,MAAM,4CAGV,eAAI3F,GAAG,WAAU,UACf,0BACE,kBACE0F,KAAK,OACL1B,UAAU,eACVqL,UAAQ,EACR9F,MAAO+nE,UAIb,eAAItxE,GAAG,UAAS,UACd,0BACE,kBACE0F,KAAK,OACL1B,UAAU,eACVqL,UAAQ,EACR9F,MAAOqoE,UAIb,eAAI5xE,GAAG,UAAS,UACd,0BACE,kBACE0F,KAAK,OACL1B,UAAU,eACVqL,UAAQ,EACR9F,MACiC,OAArB,QAAV,GAAAo+D,GAAQ,UAAE,cAAV,GAAYqE,iBACR,KASS,QATL,GAEFxa,KAAKka,MAID,MAHW,QAAV,GAAA/D,GAAQ,UAAE,cAAV,GAAYqE,mBACF,QAAV,GAAArE,GAAQ,UAAE,cAAV,GAAYuE,sBACD,QADoB,GAC9BvE,GAAQ,UAAE,cAAV,GAAYyE,uBAEJ,QADP,GACHzE,GAAQ,UAAE,cAAV,GAAYqE,iBACZ,KACA,WAAG,cART,GASGr/C,eAAe,gBAK9B,eAAI3sB,GAAG,UAAS,UACd,0BACE,kBACE0F,KAAK,OACL1B,UAAU,eACVqL,UAAQ,EACR9F,MACgC,OAApB,QAAV,GAAAo+D,GAAQ,UAAE,cAAV,GAAYsE,gBACR,KASS,QATL,GAEFza,KAAKka,MAID,MAHW,QAAV,GAAA/D,GAAQ,UAAE,cAAV,GAAYsE,kBACF,QAAV,GAAAtE,GAAQ,UAAE,cAAV,GAAYwE,qBACD,QADmB,GAC7BxE,GAAQ,UAAE,cAAV,GAAY0E,sBAEJ,QADP,GACH1E,GAAQ,UAAE,cAAV,GAAYsE,gBACZ,KACA,WAAG,cART,GASGt/C,eAAe,+BAYxC,iBAAK3oB,UAAU,2EAA0E,WACvF,oBACEA,UAAU,kBACV0B,KAAK,SACLE,QAAS,kBAriGC,WAAO,IAAD,sEAGxB,GAFAsP,GAAgBzF,QAAU,IAAIsa,iBAClBzX,EAAAA,EAAAA,GAAiB/K,IAM3B,OAHE+rE,IAAqB,QACrB1pE,IAAqB,GAIzBkqE,IAAQ,GACR9tE,IAAM,CACJC,OAAQ,OACRC,IAAKjB,GAAO,4CACZk1B,OAAQjlB,GAAgBzF,QAAQ0qB,OAChC94B,KAAM,CACJC,UAAyB,QAAhB,EAAEiH,GAAY,UAAE,aAAd,EAAgBvI,GAC3Bg5E,aAA4B,QAAhB,EAAEzwE,GAAY,UAAE,aAAd,EAAgBqvE,eAC9B7e,QAASA,GAAQA,QAEjBuR,YAA2B,QAAhB,EAAE/hE,GAAY,UAAE,aAAd,EAAgBuwE,cAE7BG,SAAwB,QAAhB,EAAE1wE,GAAY,UAAE,aAAd,EAAgB+7C,UAE1B4lB,YAA2B,QAAhB,EAAE3hE,GAAY,UAAE,aAAd,EAAgB2hE,YAE7BuK,WAAYlsE,GAAY,GAAG6rE,YAC3BrL,aAAcxgE,GAAY,GAAGwgE,aAC7BmQ,eAAkC,QAApB,EAAE9I,GAAgB,UAAE,aAAlB,EAAoBpwE,GACpCm5E,aAAc5wE,GAAY,GAAG6wE,eAC7BC,eAAgB9wE,GAAY,GAAG+wE,iBAC/BC,WAAYhxE,GAAY,GAAG+4D,YAC3BkY,YAA2B,QAAhB,EAAEjxE,GAAY,UAAE,aAAd,EAAgB2rE,cAC7B9K,aAA4B,QAAhB,EAAE7gE,GAAY,UAAE,aAAd,EAAgBkxE,cAC9BC,gBAA+B,QAAhB,EAAEnxE,GAAY,UAAE,aAAd,EAAgB6hE,kBACjCuP,SAAwB,QAAhB,EAAEpxE,GAAY,UAAE,aAAd,EAAgB2vE,WAC1B0B,YAA2B,QAAhB,EAAErxE,GAAY,UAAE,aAAd,EAAgBsxE,eAC7BC,aAA4B,QAAhB,EAAEvxE,GAAY,UAAE,aAAd,EAAgBqiE,cAC9BmP,kBAAiC,QAAhB,EAAExxE,GAAY,UAAE,aAAd,EAAgBsiE,oBACnCmP,cAA6B,QAAhB,EAAE3S,GAAY,UAAE,aAAd,EAAgBrnE,GAC/Bu3E,kBAAiC,QAAhB,EAAEhvE,GAAY,UAAE,aAAd,EAAgBgvE,kBACnC9N,gBAA+B,QAAhB,EAAElhE,GAAY,UAAE,aAAd,EAAgBkhE,gBACjCwQ,SAAwB,QAAhB,EAAE1xE,GAAY,UAAE,aAAd,EAAgB2xE,QAC1B1P,YAA2B,QAAhB,EAAEjiE,GAAY,UAAE,aAAd,EAAgBiiE,YAC7B2P,aAA4B,QAAhB,EAAE5xE,GAAY,UAAE,aAAd,EAAgB6xE,mBAC9BC,mBAAkC,QAAhB,EAAE9xE,GAAY,UAAE,aAAd,EAAgB+xE,sBACpCC,gBAA+B,QAAhB,EAAEhyE,GAAY,UAAE,aAAd,EAAgBiyE,mBACjCC,mBAAkC,QAAhB,EAAElyE,GAAY,UAAE,aAAd,EAAgBmyE,uBACpCC,cAA6B,QAAhB,EAAEpyE,GAAY,UAAE,aAAd,EAAgBqyE,iBAC/BC,UAAyB,QAAhB,EAAEtyE,GAAY,UAAE,aAAd,EAAgBuyE,YAC3BC,gBAA+B,QAAhB,EAAExyE,GAAY,UAAE,aAAd,EAAgByyE,iBACjChQ,cAA6B,QAAhB,EAAEziE,GAAY,UAAE,aAAd,EAAgByiE,cAC/BC,YAA2B,QAAhB,EAAE1iE,GAAY,UAAE,aAAd,EAAgB0iE,YAC7B/V,eAA8B,QAAhB,EAAE3sD,GAAY,UAAE,aAAd,EAAgBygB,eAChCosC,aAA4B,QAAhB,EAAE7sD,GAAY,UAAE,aAAd,EAAgB0gB,aAC9BiiD,aAA4B,QAAhB,EAAE3iE,GAAY,UAAE,aAAd,EAAgB2iE,aAC9BC,WAAYA,GAEZ8P,SAAUn2E,GAEVo2E,kBAAmB3yE,GAAY,GAAGutE,oBAClCqF,kBAAmB5yE,GAAY,GAAG6yE,iBAClCC,oBAAqB9yE,GAAY,GAAG+yE,uBAEpC51D,YAAand,GAAY,GAAGmd,YAC5BpW,YAAa/G,GAAY,GAAG+G,YAC5BisE,kBAAmB,IACnBC,sBAAkC,QAAb,EAAEjR,GAAS,UAAE,aAAX,EAAavqE,GACpCy7E,gBAAiBlzE,GAAY,GAAG+jE,QAChCrC,aAA4B,QAAhB,EAAE1hE,GAAY,UAAE,aAAd,EAAgB0hE,aAC9BV,aAA4B,QAAhB,EAAEhhE,GAAY,UAAE,aAAd,EAAgB2rE,cAC9BwH,oBAAqBnzE,GAAY,GAAGozE,uBACpCC,mBAAoBrzE,GAAY,GAAGszE,uBACnCC,eAAgBvzE,GAAY,GAAGojE,IAC/BoQ,cAAezK,GACf0K,uBAAwB5K,GACxBL,eAAgB/I,GAAW+I,eAC3BG,qBAAsBhJ,GAAUgJ,qBAChCR,mBAAoB7I,GAAQ6I,mBAC5BI,kBAAmB/X,GAAQ+X,kBAC3BmL,WAAYvK,GACZwK,oBAAqBtK,GACrBT,kBAAmBjJ,GAAUiJ,kBAC7BH,YAAahJ,GAAWgJ,YACxBmL,YAAuB,QAAZ,EAAExU,GAAQ,UAAE,aAAV,EAAYiE,eACzB+E,kBAAmB9I,GAAQ8I,kBAC3ByL,kBAAiC,QAAhB,EAAE7zE,GAAY,UAAE,aAAd,EAAgBuvE,iBAErCl+C,QAAS,CAAE,eAAgB,sBAC1BvzB,MAAK,SAACC,GACMA,EAASjF,KAEtByyE,IAAQ,GACRlqE,IAAqB,GACrB0pE,IAAqB,GACrB57C,OAAOotB,SAAS,CAAErmB,IAAK,EAAGsmB,SAAU,WACpCp+C,YAAW,WACT2sE,IAAqB,GAErB,IAEE1kC,GAAY,mBAId,CAFE,MAAOnoC,GACPU,QAAQV,MAAM,oBAAqBA,EACrC,CACF,GAAG,IACL,GACF,CAy7FyBsuC,EAAa,EAAC,WAE7B,SAAC,MAAM,IAAG,YAEZ,oBACE/wC,UAAU,oBACV4B,QAAS,WACPoQ,KACA2+D,KACAG,KACAD,KACAG,KACAJ,IACF,EAAE,WAEF,SAAC,MAAO,CAACh2E,SAAU,SAAU,mBAIlCi1E,IAAO,SAACt8D,EAAA,EAAM,CAACC,YA5oFA,WAClBtC,GAAgBzF,SAAWyF,GAAgBzF,QAAQgI,QACnDq8D,IAAQ,EACV,IAyoFmD,GAE9C3E,IACC,SAACD,EAAU,CACTC,MAAOA,GACPC,SAAUA,GACVC,iBA1pFiB,WACvB,IAAMt+C,EAAO,IAAIroB,KACXy0C,EAAgBhxC,IAAO4kB,GAAM1kB,OAAO,cAC1CunE,GAAcz2B,EAChB,EAupFQmyB,SAtpFS,WACfsE,GAAc,KAChB,EAqpFQrE,WAAYA,GACZC,YAAaA,GACbC,SAAUA,KAGZ,KAIR,C,sTCjvHgBvqE,EAAAA,EAAAA,QAEhB,SAASzG,EAAYC,GACnB,OACE,SAAC,KAAO,gBAACE,SAAS,UAAUC,MAAO,CAAEC,MAAO,GAAIC,OAAQ,KAAUL,GAAK,cACrE,iBAAMM,EAAE,sWAGd,CAEA,SAASq9E,EAAY39E,GACnB,OACE,SAAC,KAAO,gBACNsF,UAAU,QACVpF,SAAS,UACTC,MAAO,CAAEC,MAAO,GAAIC,OAAQ,KACxBL,GAAK,cAET,iBAAMM,EAAE,4gBAGd,CAEA,SAASC,EAAWP,GAClB,OACE,SAAC,KAAO,gBAACE,SAAS,UAAUC,MAAO,CAAEC,MAAO,GAAIC,OAAQ,KAAUL,GAAK,cACrE,iBAAMM,EAAE,wfAGd,CAEA,SAASE,EAAoBR,GAC3B,IAAMG,GAAQM,EAAAA,EAAAA,IAAU,CACtBC,KAAM,CACJC,QAAS,EACTC,UAAW,yBAEbC,GAAI,CACFF,QAASX,EAAMc,GAAK,EAAI,EACxBF,UAAU,eAAD,OAAiBZ,EAAMc,GAAK,EAAI,GAAE,cAI/C,OACE,SAAC,QAAY,CAACX,MAAOA,EAAM,UACzB,SAAC,KAAQ,UAAKH,KAGpB,EAQ4By7B,EAAAA,EAAAA,IAAO,IAAnC,IAEM6zC,EAAuBloC,EAAAA,MAC3B,SAACpnC,GACC,IACE0C,EAOE1C,EAPF0C,oBACAC,EAME3C,EANF2C,KACA0J,EAKErM,EALFqM,QAEAsI,GAGE3U,EAJFoM,KAIEpM,EAHF2U,cACA/D,EAEE5Q,EAFF4Q,YAGF,GADI5Q,EADFyuE,gBAEwChoE,EAAAA,EAAAA,UAAS,KAAG,eAAhCm3E,GAAF,KAAkB,MAmChC36E,EAjCa,SAACY,EAAWC,GAC7BA,GAAO,QACLxC,GAAI,KACJyC,SAAU,SACVC,SAAU,WACPF,GAEL,IAAMG,EAAa,CAAC,EACdC,EAAO,GACPF,EAAWF,EAAQE,SAqBzB,OApBAH,EAAUM,SAAQ,SAAC9C,GACjB,IAAME,EAASF,EAAKyC,EAAQxC,IACtB8C,EAAe/C,EAAKyC,EAAQC,UAElCE,EAAW1C,IAAO,0BACfyC,EAAW,IACT3C,GACA4C,EAAW1C,IAEhB0C,EAAWG,GAAgBH,EAAWG,KAAa,UAChDJ,EAAW,IAEdC,EAAWG,GAAcJ,GAAUK,KAAKJ,EAAW1C,GACrD,IAEA+C,OAAOC,OAAON,GAAYE,SAAQ,SAACK,GACF,qBAApBA,EAAIV,EAAQxC,KACrB4C,EAAKG,KAAI,MAATH,GAAI,OAASM,EAAIR,IAErB,IACOE,CACT,CAEkBO,CAAW9B,GAEvB8gB,EAAW,IAAIzZ,KAAK4G,EAAYitE,iBAChCxrD,EAAO,IAAIroB,KAAKyZ,GAChBq6D,EAAiB,UAAMzrD,EAAKg5B,UAAS,YAAIh5B,EAAKpE,eAClD,UACA,CAAEizB,MAAO,UACV,YAAI7uB,EAAK2qB,eAEJ5qC,EAAS,IAAIpI,KAAK4G,EAAYmtE,eAC9BC,EAAQ,IAAIh0E,KAAKoI,GACjB6rE,EAAe,UAAMD,EAAM3yB,UAAS,YAAI2yB,EAAM/vD,eAClD,UACA,CAAEizB,MAAO,UACV,YAAI88B,EAAMhhC,eAEPnY,EAAK5xB,SAASC,uBAAuB,kBAEzCnQ,EAAAA,EAAAA,YAAU,WACRkF,YAAW,WACTi2E,GACF,GAAG,KAEMjrE,SAASC,uBAChB,kCAGFD,SAASkR,iBACP,SACA,SAAU8lC,GACRhiD,YAAW,WAAO,IAAD,IACTk2E,EAAQz8E,MAAMhB,KAClBuS,SAASC,uBAAuB,kBAEzBxR,MAAMhB,KAAKy9E,EAAM,GAAGn6E,UAC1BG,SAAQ,SAACi6E,GACS,QAAfA,EAAIC,SACND,EAAI3qE,QAER,IAEmC,SAA1B,QAAL,EAAAoxB,EAAG,UAAE,OAAa,QAAb,EAAL,EAAO7gC,SAAS,UAAE,WAAb,EAAL,EAAoBq6E,UAGxBH,GACF,GAAG,IACL,IACA,EAEJ,GAAG,IAEH,IAAMA,EAAgB,WACpB,IAAII,EAAMrrE,SAASoa,cAAc,QACjCixD,EAAIhxD,UACF,udACFuX,EAAG,GAAGtL,YAAY+kD,EACpB,EAGMC,EAAgBn3C,EAAAA,YAAiB,SAAuBpnC,EAAO6I,GAAM,IAAD,EAEtE82B,EAOE3/B,EAPF2/B,QACAr6B,EAMEtF,EANFsF,UACA9D,EAKExB,EALFwB,MACAD,EAIEvB,EAJFuB,OACMi9E,EAGJx+E,EAHF0qB,KACA+zD,EAEEz+E,EAFFy+E,cACAC,EACE1+E,EADF0+E,YAGF,GAQIC,EAAAA,EAAAA,GAAYp9E,GAPdoP,EAAQ,EAARA,SACA8uD,EAAQ,EAARA,SACAhuD,EAAQ,EAARA,SACAmtE,EAAO,EAAPA,QACAC,EAAe,EAAfA,gBACAxmB,EAAe,EAAfA,gBACAymB,EAAgB,EAAhBA,iBAGIp0D,EAAO8zD,GAAYC,GAAiBC,EAUpCK,EAAoB,yCAAG,WAAOv5E,GAAK,kFAEvC6yD,EAAgB7yD,GAChBiD,QAAQC,IAAIlD,GAERw5E,EAAoB,QADpBC,EAAW19E,SACS,IAAR09E,OAAQ,EAARA,EAAU1/D,MAAM,KAAK,GACjC3c,EAAoB,OAARq8E,QAAQ,IAARA,OAAQ,EAARA,EAAU1/D,MAAM,KAAK,GACjC4qC,EAAiB,OAAR80B,QAAQ,IAARA,OAAQ,EAARA,EAAU1/D,MAAM,KAAK,IAEtB2/D,EAAAA,EAAAA,GACVF,EACAp8E,EACAunD,EACAyzB,EACAvxE,EACAsI,GACA,KAAD,sCACF,gBAjByB,sCAmB1B,OACE,iBACErP,WAAW65E,EAAAA,EAAAA,SAAK75E,EAAWq6B,EAAQy/C,MAAI,eACpCz/C,EAAQ8/B,SAAWA,IAAQ,SAC3B9/B,EAAQluB,SAAWA,IAAQ,SAC3BkuB,EAAQi/C,QAAUA,IAAO,SACzBj/C,EAAQhvB,SAAWA,GAAQ,IAE9B0uE,YAnCoB,SAAC75E,GACvBs5E,EAAiBt5E,EACnB,EAkCIqD,IAAKA,EAAI,WAET,gBAAK3B,QAlCoB,SAAC1B,GAC5Bq5E,EAAgBr5E,EAClB,EAgCwCF,UAAWq6B,EAAQ2/C,cAAc,SAClE50D,KAEH,SAAC,IAAU,CACTxjB,QAAS63E,EACTQ,UAAU,MACV,SAEC/9E,MAIT,IAOMR,GAAiBC,EAAAA,EAAAA,KAAO,SAACjB,GAAK,MALfuB,EAKe,OAClC,gBAAK+D,UAAU,iBAAgB,UAC7B,mBAAC,KAAQ,gBACPk6E,iBAAkBjB,GACdv+E,GAAK,IACTmB,IAAKC,OAAOpB,EAAMqB,KAAKC,IACvBC,OAAQH,OAAOpB,EAAMqB,KAAKC,IAC1BopB,MAZenpB,EAYc,QAAX,EAACvB,EAAMqB,YAAI,aAAV,EAAYC,GAXlBqB,EAAK4T,MAAK,SAAC/R,GAAG,OAAKA,EAAIyqE,QAAU1tE,CAAM,IAWG,IAAlB,SAACo8E,EAAW,KACjDn8E,OACE,UAAC,IAAG,CAAC4D,GAAI,CAAET,QAAS,OAAQC,WAAY,SAAU66E,EAAG,GAAKC,GAAI,GAAI,WAChE,SAAC,IAAG,CAAC/vE,MAAM,UAAUvK,GAAI,CAAEu6E,GAAI,MAE/B,SAAC,IAAU,CACT15D,QAAQ,QACR7gB,GAAI,CAAEwf,WAAY,UAAWg7D,SAAU,GAAI,UAE3C,kBACEz/E,MAAO,CACLwP,MAAO3P,EAAMqB,KAAKiB,KAAKoR,SAAS,QAC5B1T,EAAMqB,KAAKiB,KAAKid,MAAM,KAAK,GAAGA,MAAM,KAAK,GACzC,GACJqF,WAAY5kB,EAAMqB,KAAK4tE,OAAOv7D,SAAS,KAAO,OAAS,IACvD,WAEF,kBACEvT,MAAO,CACLykB,WAAY5kB,EAAMqB,KAAKiB,KAAKoR,SAAS,KAAO,OAAS,IACrD,WAED,SAAC,MAAS,IAAI,YACd1T,EAAMqB,KAAKiB,KAAKoR,SAAS,QACtB1T,EAAMqB,KAAKiB,KACRid,MAAM,MAAM,GACZA,MAAM,KAAK,GACX49C,WAAW,MAAO,IAClBA,WAAW,OAAQ,IACtBn9D,EAAMqB,KAAKiB,KACRid,MAAM,KAAK,GACX49C,WAAW,MAAO,IAClBA,WAAW,OAAQ,QAG5B,4BACG,SACiCrxD,GAAjC9L,EAAMqB,KAAKiB,KAAKid,MAAM,KAAK,GACxBvf,EAAMqB,KAAKiB,KAAKid,MAAM,KAAK,GAAG7L,SAAS,QACrC,IACA1T,EAAMqB,KAAKiB,KACRid,MAAM,KAAK,GACX49C,WAAW,UAAW,IACzB,IAAMn9D,EAAMqB,KAAKiB,KAAKid,MAAM,KAAK,GACnC,cAMd/e,oBAAqBA,EACrByG,WACmC6E,GAAjC9L,EAAMqB,KAAKiB,KAAKid,MAAM,KAAK,IAC3Bvf,EAAMqB,KAAKiB,KAAKid,MAAM,KAAK,GAAG7L,SAAS,QACnC,GACA,kBACAoqE,EADA,uBAIAG,IAGLv8E,MAAMC,QAAQ3B,EAAMqB,KAAKgpC,SACtBrqC,EAAMqB,KAAKgpC,QAAQxoC,KAAI,SAACR,GAAI,OAAKS,EAAWT,EAAK,IACjD,KAEF,GAzEeJ,EA0EpB,kBAAGc,EAAK,EAALA,MAAK,mCACFC,EAAAA,EAAAA,eAAkC,CACvC,WAAY,CACVrB,QAAS,OAEZ,sBACMqB,EAAAA,EAAAA,OAA0B,CAC/BC,WAAY,GACZC,YAAa,GACbC,WAAW,cAAD,QAAgBC,EAAAA,EAAAA,IAAML,EAAMM,QAAQC,KAAKC,QAAS,OAC7D,KAmBGT,EAAa,SAACU,GAAK,OACvB,0BACE,SAACxB,EAAc,CAACK,KAAMmB,KAClB,EAGR,OACE,gBACErC,MAAO,CAAEqpC,UAAW,QAASxJ,UAAW,QAASyJ,UAAW,QAAS,UAErE,SAAC,IAAQ,CACP,aAAW,cACX1kC,gBAAiB,CAACrC,GAClByC,mBACE,gBAAKG,UAAU,gBAAe,UAC5B,SAACvF,EAAW,CAACuF,UAAU,qBAG3BN,qBACE,gBAAKM,UAAU,gBAAe,UAC5B,SAACvF,EAAW,CAACuF,UAAU,qBAG3BL,mBACE,gBAAKK,UAAU,gBAAe,UAC5B,SAAC/E,EAAU,CAAC+E,UAAU,qBAG1BJ,gBAAgB,SAAC,MAAS,CAACI,UAAU,wBACrCF,GAAI,CACF,wDAAyD,CACvDhF,MAAO,OACPiF,SAAU,IAGdC,UAAU,gBAAe,SAExBxD,EAAWmB,EAAU,OAI9B,IAEA,SAACgG,EAAW42E,GACV,OAAI52E,EAAUwlE,iBAAmBoR,EAAapR,cAKhD,IAGF,K,4FC/RA,IA9HA,SAA0BzuE,GACxB,IACEse,EAaEte,EAbFse,YACAjW,EAYErI,EAZFqI,QACAC,EAWEtI,EAXFsI,YAEA2D,GASEjM,EAVFsJ,WAUEtJ,EATFiM,cACAgqC,EAQEj2C,EARFi2C,gBACA6pC,EAOE9/E,EAPF8/E,OAEAh3E,GAKE9I,EANF+/E,YAME//E,EALF8I,MACAxH,EAIEtB,EAJFsB,GACAuJ,EAGE7K,EAHF6K,MACA3B,EAEElJ,EAFFkJ,QACAmJ,EACErS,EADFqS,kBAEF,GAAwB5L,EAAAA,EAAAA,UAAS,IAAG,eAA7BrD,EAAI,KAiBT,OAjBkB,MAMpBL,EAAAA,EAAAA,YAAU,WACR,GACC,CAACK,KAMJL,EAAAA,EAAAA,YAAU,WAAO,GAAG,CAACub,KAIjB,iCACE,gBAAKhZ,UAAU,yBAAwB,SAC3B,qBAATuF,GACC,SAAC,EAAAlC,wBAAuB,CACtBC,MAAO0V,EACPtX,KAAK,OACL8B,KAAMA,EACNuJ,kBAA+B,OAAZpG,QAAY,IAAZA,OAAY,EAAZA,EAAcgO,YACjC3Y,GAAIA,EACJgE,UAAU,MACVgZ,YAAaA,EACbjW,QAASA,EACTa,QAASA,EACT8H,YAAY,4BACZH,SAAU,SAAC7H,GACTitC,EAAgBjtC,GAChBP,QAAQC,IAAI,8BACd,EAEAK,SAAU,SAACC,GACTV,GAAY,SAACW,GAAS,yBAAWA,GAAS,cAAGH,EAAOE,EAAE1H,IAAE,IAExDgH,GAAY,SAACW,GAAS,yBACjBA,GAAS,cACX,UAAYD,EAAEF,MAAI,GAEvB,EACAM,UAAU,IAED,eAATyB,GACF,SAAC,EAAAlC,wBAAuB,CACtBC,MAAO0V,EACPtX,KAAK,OACL8B,KAAMA,EACNuJ,kBAA+B,OAAZpG,QAAY,IAAZA,OAAY,EAAZA,EAAcgO,YACjC3Y,GAAIA,EACJgE,UAAU,MACVgZ,YAAaA,EACbjW,QAASA,EACTa,QA/CQ,SAAC82E,GACnB13E,GAAY,SAACW,GAAS,yBAAWA,GAAS,cAAGH,EAAO,IAAE,IACtDL,QAAQC,IAAII,EACd,EA6CYkI,YAAY,4BACZH,SAAU,SAAC7H,GACTitC,EAAgBjtC,EAClB,EAEAD,SAAU,SAACC,GACTV,GAAY,SAACW,GAAS,yBAAWA,GAAS,cAAGH,EAAOE,EAAE1H,IAAE,GAE1D,EACA8H,UAAU,EACV62E,eAAe,EACfC,kBAAkB,aAGpB,gBACE56E,UAAU,oBACVhE,GAAG,OACHuH,IAAK,SAACiI,QACUhF,GAAVg0E,IACFA,EAAO/uE,QAAQ,GAAKD,EAExB,EAAE,UAEF,SAAC,EAAAnI,wBAAuB,CACtBC,MAAO0V,EACPtX,KAAK,OACL8B,KAAMA,EACNkI,YAAY,4BACZqB,kBAAmBA,EACnB/Q,GAAIA,EACJgE,UAAU,MACV4D,QAASA,EACToV,YAAaA,EACbjW,QAASA,EACTwI,SAAU,SAAC7H,GACTitC,EAAgBjtC,GAChBP,QAAQC,IAAI,qBACd,EAEAK,SAAU,SAACC,GACTV,GAAY,SAACW,GAAS,yBAAWA,GAAS,cAAGH,EAAOE,EAAE1H,IAAE,GAC1D,EACA8H,UAAU,SAKlB,0BAAOhG,EAAK0F,SAIpB,C","sources":["views/ProjectComponent/DocumentPopUpHierarchy.js","views/ProjectComponent/DocumentsPopUp.js","views/ProjectComponent/IssuesAutocomplete.js","views/ProjectComponent/AddPopup.js","views/ProjectComponent/ProjectIssues.js","views/ProjectComponent/ProjectDefectsAutoComplete.js","views/ProjectComponent/ProjectDefectsPopUp.js","views/ProjectComponent/ProjectDefects.js","views/ProjectComponent/RisksPopup.js","views/ProjectComponent/ProjectRisks.js","views/ProjectComponent/PlannedActivities.js","views/ProjectComponent/ProjectAccomplishments.js","views/ProjectComponent/ProjectStake.js","views/ProjectComponent/StatusKpi.js","views/ProjectComponent/StatusAccomplishment.js","views/ProjectComponent/StatusPlannedActivities.js","views/ProjectComponent/StatusRisk.js","views/ProjectComponent/StatusIssues.js","views/ProjectComponent/StatusDependencies.js","views/ProjectComponent/StatusScope.js","views/ProjectComponent/StatusEvents.js","views/ProjectComponent/ProjectStatus.js","views/ProjectComponent/IQAChart.js","views/ProjectComponent/QCRChart.js","views/ProjectComponent/ProjectAuditLog.js","views/ProjectComponent/ProjectScopeChangesAddAndEditPopUP.js","views/ProjectComponent/ProjectScopeChanges.js","views/ProjectComponent/ReviewLogPopup.js","views/ProjectComponent/ProjectReviewLog.js","views/ProjectComponent/DocumentsTable.js","views/ProjectComponent/DocumentHierarchy.js","views/ProjectComponent/Documents.js","views/ProjectComponent/ExpensesMyRequests.js","views/ProjectComponent/ExpensesTeamRequest.js","views/ProjectComponent/ExpensesMyApprovalRequests.js","views/ProjectComponent/ProjectExpenses.js","views/ProjectComponent/ResourceApprovals.js","views/ProjectComponent/ContractDocumentTable.js","views/ProjectComponent/ContractDocument.js","views/ProjectComponent/ProjectEvents.js","views/ProjectComponent/ProjectMilestones.js","views/ProjectComponent/ProjectDependencies.js","views/ProjectComponent/ProjectCompliance.js","views/ProjectComponent/TaskPlanDeletePopUP.js","views/ProjectComponent/TaskPlanResDeletePopUp.js","views/ProjectComponent/TaskPlanResourceTable.js","views/ProjectComponent/TaskPlanResourcePopUp.js","views/ProjectComponent/TaskPlan.js","views/ProjectComponent/CapacityPlanOverAllocationpopup.js","views/ProjectComponent/CapacityPlanResourceList.js","views/ProjectComponent/CapacityPlanResource.js","views/ProjectComponent/CapacityPlanDeletePopup.js","views/ProjectComponent/CapacityPlanTotalResCalender.js","views/ProjectComponent/CapacityPlanDataTable.js","views/ProjectComponent/CapacityPlan.js","views/ProjectComponent/ProjectOverview.js","views/ProjectComponent/ProjectQCR.js","views/ProjectComponent/ProjectHierarchySideTable.js","views/ProjectComponent/ProjectHierarchy.js","views/ProjectComponent/Project.js","views/ProjectComponent/ProjectEdit.js","views/ProjectComponent/ProjectHierarchyTree.js","views/ProjectComponent/RiskAutocomplete.js"],"sourcesContent":["import * as React from \"react\";\nimport TreeView from \"@mui/lab/TreeView\";\nimport PropTypes, { node } from \"prop-types\";\nimport SvgIcon from \"@mui/material/SvgIcon\";\nimport { alpha, styled } from \"@mui/material/styles\";\nimport TreeItem, { treeItemClasses } from \"@mui/lab/TreeItem\";\nimport Collapse from \"@mui/material/Collapse\";\nimport { useSpring, animated } from \"@react-spring/web\";\nimport { FcOpenedFolder } from \"react-icons/fc\";\nimport { useEffect } from \"react\";\n\nfunction MinusSquare(props) {\n  return (\n    <SvgIcon fontSize=\"inherit\" style={{ width: 14, height: 14 }} {...props}>\n      <path d=\"M22.047 22.074v0 0-20.147 0h-20.12v0 20.147 0h20.12zM22.047 24h-20.12q-.803 0-1.365-.562t-.562-1.365v-20.147q0-.776.562-1.351t1.365-.575h20.147q.776 0 1.351.575t.575 1.351v20.147q0 .803-.575 1.365t-1.378.562v0zM17.873 11.023h-11.826q-.375 0-.669.281t-.294.682v0q0 .401.294 .682t.669.281h11.826q.375 0 .669-.281t.294-.682v0q0-.401-.294-.682t-.669-.281z\" />\n    </SvgIcon>\n  );\n}\n\nfunction PlusSquare(props) {\n  return (\n    <SvgIcon fontSize=\"inherit\" style={{ width: 14, height: 14 }} {...props}>\n      <path d=\"M22.047 22.074v0 0-20.147 0h-20.12v0 20.147 0h20.12zM22.047 24h-20.12q-.803 0-1.365-.562t-.562-1.365v-20.147q0-.776.562-1.351t1.365-.575h20.147q.776 0 1.351.575t.575 1.351v20.147q0 .803-.575 1.365t-1.378.562v0zM17.873 12.977h-4.923v4.896q0 .401-.281.682t-.682.281v0q-.375 0-.669-.281t-.294-.682v-4.896h-4.923q-.401 0-.682-.294t-.281-.669v0q0-.401.281-.682t.682-.281h4.923v-4.896q0-.401.294-.682t.669-.281v0q.401 0 .682.281t.281.682v4.896h4.923q.401 0 .682.281t.281.682v0q0 .375-.281.669t-.682.294z\" />\n    </SvgIcon>\n  );\n}\n\nfunction TransitionComponent(props) {\n  const style = useSpring({\n    from: {\n      opacity: 0,\n      transform: \"translate3d(20px,0,0)\",\n    },\n    to: {\n      opacity: props.in ? 1 : 0,\n      transform: `translate3d(${props.in ? 0 : 20}px,0,0)`,\n    },\n  });\n\n  return (\n    <animated.div style={style}>\n      <Collapse {...props} />\n    </animated.div>\n  );\n}\n\nTransitionComponent.propTypes = {\n  in: PropTypes.bool,\n};\n\nconst StyledTreeItem = styled((props) => {\n  return (\n    <div>\n      <TreeItem\n        {...props}\n        key={String(props?.node?.id)}\n        nodeId={String(props?.node?.id)}\n        label={props?.node?.folder_name}\n        TransitionComponent={TransitionComponent}\n      >\n        {Array.isArray(props?.node?.subRows)\n          ? props?.node?.subRows.map((node) => renderTree(node))\n          : \"\"}\n      </TreeItem>\n    </div>\n  );\n})(({ theme }) => ({\n  [`& .${treeItemClasses.iconContainer}`]: {\n    \"& .close\": {\n      opacity: 0.3,\n    },\n  },\n  [`& .${treeItemClasses.group}`]: {\n    marginLeft: 15,\n    paddingLeft: 18,\n    borderLeft: `1px dashed ${alpha(theme.palette.text.primary, 0.4)}`,\n  },\n}));\n\nconst renderTree = (nodes) => (\n  <div key={String(nodes?.id)}>\n    <StyledTreeItem node={nodes}></StyledTreeItem>\n  </div>\n);\nexport default function DocumentPopUpHierarchy(props) {\n  const {\n    defaultExpandedRows,\n    data,\n    projectId,\n    popDocFolderId,\n    setPopDocFolderId,\n  } = props;\n\n  const jsonToTree = (flatArray, options) => {\n    options = {\n      id: \"id\",\n      parentId: \"parent_id\",\n      children: \"subRows\",\n      ...options,\n    };\n    const dictionary = {};\n    const tree = [];\n    const children = options.children;\n    flatArray.forEach((node) => {\n      const nodeId = node[options.id];\n      const nodeParentId = node[options.parentId];\n      dictionary[nodeId] = {\n        [children]: [],\n        ...node,\n        ...dictionary[nodeId],\n      };\n      dictionary[nodeParentId] = dictionary[nodeParentId] || { [children]: [] };\n      dictionary[nodeParentId][children].push(dictionary[nodeId]);\n    });\n    Object.values(dictionary).forEach((obj) => {\n      if (typeof obj[options.id] === \"undefined\") {\n        tree.push(...obj[children]);\n      }\n    });\n    return tree;\n  };\n\n  useEffect(() => {}, [popDocFolderId]);\n\n  const hierarchy = jsonToTree(data);\n  const handleSelect = (event, nodeIds) => {\n    setPopDocFolderId(nodeIds);\n  };\n\n  function setFolderOrder(hierarchy, folderOrder) {\n    const filteredHierarchy = hierarchy.filter(\n      (item) => item.folder_name !== \"SOW\"\n    );\n\n    filteredHierarchy.sort((a, b) => {\n      const aIndex = folderOrder.indexOf(a.folder_name);\n      const bIndex = folderOrder.indexOf(b.folder_name);\n      if (aIndex !== -1 && bIndex !== -1) {\n        return aIndex - bIndex;\n      } else if (aIndex !== -1) {\n        return -1;\n      } else if (bIndex !== -1) {\n        return 1;\n      }\n      return a.folder_name.localeCompare(b.folder_name);\n    });\n\n    let filteredHierarch = filteredHierarchy.filter((item) =>\n      item.folder_name == projectId ? (item.folder_name = \"Expense\") : \"\"\n    );\n    return filteredHierarchy;\n  }\n  let filteredHierarchy = setFolderOrder(hierarchy, [\n    \"IA Support\",\n    \"PPM Development and Implementation\",\n    \"Expense\",\n    \"Expenses\",\n  ]);\n\n  const iconStyle = {\n    display: \"flex\",\n    alignItems: \"center\",\n    gap: \"4px\",\n  };\n\n  return (\n    <TreeView\n      aria-label=\"customized\"\n      defaultExpanded={[defaultExpandedRows]}\n      defaultCollapseIcon={\n        <div style={iconStyle}>\n          <MinusSquare />\n          <span> </span>\n          <FcOpenedFolder />{\" \"}\n        </div>\n      }\n      defaultExpandIcon={\n        <div style={iconStyle}>\n          <PlusSquare />\n          <span> </span>\n          <FcOpenedFolder />{\" \"}\n        </div>\n      }\n      defaultEndIcon={<FcOpenedFolder />}\n      defaultParentIcon={<FcOpenedFolder />}\n      sx={{\n        \"& .css-1g86id8-MuiTreeItem-content .MuiTreeItem-label\": {\n          width: \"auto\",\n          minwidth: 0,\n        },\n      }}\n      className=\"hierarchyTree\"\n      onNodeSelect={handleSelect}\n    >\n      {filteredHierarchy.map((item) => renderTree(item))}\n    </TreeView>\n  );\n}\n","import { CModal, CModalBody, CModalHeader, CModalTitle } from \"@coreui/react\";\nimport axios from \"axios\";\nimport React, { useState } from \"react\";\nimport { environment } from \"../../environments/environment\";\nimport DocumentPopUpHierarchy from \"./DocumentPopUpHierarchy\";\n\nfunction DocumentsPopUp(props) {\n  const {\n    openPopup,\n    setOpenPopup,\n    projectId,\n    hierarchydata,\n    SetDocFolderId,\n    selectedIds,\n    setSelectedIds,\n    setCopySuccessmsg,\n    setMoveSuccessmsg,\n    getapiData,\n    setCheckboxSelect,\n  } = props;\n  const loggedUserId = localStorage.getItem(\"resId\");\n  const baseUrl = environment.baseUrl;\n  const [copy, setCopy] = useState([]);\n  const [move, setMove] = useState([]);\n\n  const [popDocFolderId, setPopDocFolderId] = useState(null);\n\n  const copyDocsToFolder = () => {\n    setCopySuccessmsg(true);\n    const updatedDocIds = Array.isArray(selectedIds)\n      ? selectedIds.map((val) => parseInt(val))\n      : [];\n\n    axios({\n      method: \"post\",\n      url: baseUrl + `/ProjectMS/ContractDocuments/copyDocsToFolder`,\n      data: {\n        loggedUserId: loggedUserId,\n        docIds: updatedDocIds,\n        docFolderId: popDocFolderId,\n      },\n    })\n      .then(function (response) {\n        let resp = response.data;\n        setCopy(resp);\n        getapiData();\n        setSelectedIds([]);\n      })\n      .catch(function (error) {})\n      .finally(function () {\n        setTimeout(() => {\n          setCopySuccessmsg(false);\n        }, 2000);\n      });\n  };\n\n  const moveDocsToFolder = () => {\n    setMoveSuccessmsg(true);\n    const updatedDocIds = Array.isArray(selectedIds)\n      ? selectedIds.map((val) => parseInt(val))\n      : [];\n\n    axios({\n      method: \"post\",\n      url: baseUrl + `/ProjectMS/ContractDocuments/moveDocsToFolder`,\n      data: {\n        loggedUserId: loggedUserId,\n        docIds: updatedDocIds,\n        docFolderId: popDocFolderId,\n      },\n    })\n      .then(function (response) {\n        let resp = response.data;\n        setSelectedIds([]);\n        setMove(resp);\n        getapiData();\n      })\n      .catch(function (error) {})\n      .finally(function () {\n        setTimeout(() => {\n          setMoveSuccessmsg(false);\n        }, 2000);\n      });\n  };\n\n  return (\n    <div>\n      <div className=\"col-md-12\">\n        <CModal\n          visible={openPopup}\n          size=\"xs\"\n          onClose={() => setOpenPopup(false)}\n          backdrop={\"static\"}\n        >\n          <CModalHeader className=\"\">\n            <CModalTitle>\n              <span className=\"\"> Folders</span>\n            </CModalTitle>\n          </CModalHeader>\n          <CModalBody>\n            <div className=\"col-md-9 customCard\">\n              <div className=\"col-md-12 collapseHeader\">\n                <h2>Document Folders</h2>\n              </div>\n              {\n                <DocumentPopUpHierarchy\n                  defaultExpandedRows={String(projectId)}\n                  data={hierarchydata}\n                  SetDocFolderId={SetDocFolderId}\n                  projectId={projectId}\n                  popDocFolderId={popDocFolderId}\n                  setPopDocFolderId={setPopDocFolderId}\n                />\n              }\n            </div>\n            <div className=\" form-group col-md-12 col-sm-12 col-xs-1 btn-container center my-2\">\n              <button\n                className=\"btn btn-primary\"\n                type=\"Add\"\n                title=\"Add\"\n                onClick={() => {\n                  copyDocsToFolder();\n                  setOpenPopup(false);\n                  setCheckboxSelect(false);\n                }}\n              >\n                Copy\n              </button>\n              <button\n                className=\"btn btn-primary\"\n                type=\"Move/Copy Files\"\n                title=\"Add\"\n                onClick={() => {\n                  moveDocsToFolder();\n                  setOpenPopup(false);\n                  setCheckboxSelect(false);\n                }}\n              >\n                Move\n              </button>\n            </div>\n          </CModalBody>\n        </CModal>\n      </div>\n    </div>\n  );\n}\nexport default DocumentsPopUp;\n","import React from \"react\";\nimport { useRef } from \"react\";\nimport { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport { ReactSearchAutocomplete } from 'react-search-autocomplete'\n\n\n/// autocomplete for assigned to field\nfunction AutoComplete(props) {\n    const { issueDetails, getData, setFormData } = props;\n    const [item, setItem] = useState([]);\n    const inputRef = useRef(null);\n    useEffect(() => {\n        console.log(item);\n    }, [item])\n\n    const handleClear = () => {\n        setFormData(prev => ({ ...prev, \"assignedto\": null }))\n    }\n    \n\n    useEffect(() => { }, [issueDetails])\n    {\n        return (\n            <>\n                <div className=\"autoComplete-container \">\n                        <span className=\"auto\" id=\"auto\">\n                                <ReactSearchAutocomplete\n                                    items={issueDetails}\n                                    type=\"Text\"\n                                    ref={inputRef}\n                                    name=\"assignedto\"\n                                    id=\"assignedto\"\n                                    issueDetails={issueDetails}\n                                    getData={getData}\n                                    className=\"AutoComplete\"\n                                    // onSearch={handleSearch}\n                                    // setSelectEmployee={setSelectEmployee} \n                                    // onFocus={handleFocus}\n                                    onSelect={(e) => { setFormData((prevProps) => ({ ...prevProps, \"assignedto\": e.id })); console.log(e) }}\n                                    onClear={handleClear}\n                                    showIcon={false}\n                                />\n                        </span>\n                </div>\n                <span >{item.name}</span>\n            </>\n        )\n    }\n}\nexport default AutoComplete;\n\n","import React, { useState, useEffect, useRef } from \"react\";\nimport { FaSave } from \"react-icons/fa\";\nimport axios from \"axios\";\nimport { CModal } from \"@coreui/react\";\nimport { CModalBody } from \"@coreui/react\";\nimport { CModalHeader } from \"@coreui/react\";\nimport { CModalTitle } from \"@coreui/react\";\nimport \"../../App.scss\";\nimport { environment } from \"../../environments/environment\";\nimport ReactQuill, { Quill } from \"react-quill\";\nimport \"react-quill/dist/quill.snow.css\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { ReactSearchAutocomplete } from \"react-search-autocomplete\";\nimport moment from \"moment\";\nimport { AiFillWarning } from \"react-icons/ai\";\nimport GlobalValidation from \"../ValidationComponent/GlobalValidation\";\n\nfunction AddPopup(props) {\n  const {\n    openPopup,\n    setOpenPopup,\n    projectIssueDetails,\n    type,\n    editId,\n    setEditedData,\n    editedData,\n    getTableData,\n    addmsg,\n    setAddmsg,\n    setEditmsg,\n    projectData,\n    projectId,\n  } = props;\n  const loggedUserId = localStorage.getItem(\"resId\");\n  const loggedUserName = localStorage.getItem(\"resName\");\n  console.log(editedData.Due_Date);\n  const [edate, setEdate] = useState(new Date(editedData?.Due_Date));\n  const [projectName, setProjectName] = useState([]);\n  const [criticality1, setCriticality] = useState([]);\n  const [issueSource, setIssueSource] = useState([]);\n  const [status, setStatus] = useState([]);\n  const [newStatus, setNewStatus] = useState([]);\n  const [issueDetails, setIssueDetails] = useState([]);\n  const [dueDate, setDueDate] = useState(null);\n  const [value, setValue] = useState(\"\");\n  const [assignedid, setAssignedid] = useState();\n  const [rcaDone, setRcaDone] = useState();\n  const [validationMessage, setValidationMessage] = useState(false);\n  const [despValidation, setDespValidation] = useState(\"\");\n  const baseUrl = environment.baseUrl;\n  const data = {\n    projectid: projectId,\n    criticality: \"\",\n    source: \"\",\n    status: 426,\n    name: \"\",\n    duedate: \"\",\n    RCA_Done: null,\n    assignedto: null,\n    createdbyid: loggedUserId,\n    createdbyname: loggedUserName,\n    description: \"\",\n    comments: \"\",\n  };\n\n  const defaultFormData =\n    editedData[\"RCA_Done\"] == undefined ||\n    editedData[\"RCA_Done\"] == null ||\n    editedData[\"RCA_Done\"] == \"\"\n      ? { ...data, rca: 0 }\n      : { ...data, rca: editedData[\"RCA_Done\"] ? 0 : 1 };\n\n  const [formData, setFormData] = useState(defaultFormData);\n\n  console.log(formData.rca);\n  const [isOpen, setIsOpen] = useState(false);\n  const [formEditData, setFormEditData] = useState(editedData);\n  const [initialformEditData, initialsetFormEditData] = useState(editedData);\n  const [flag, setFlag] = useState(true);\n  console.log(flag);\n  // console.log(formEditData.RCA_Done)\n  const [issueName, setIssueName] = useState([]);\n  const [deferred, setDeferred] = useState([]);\n  const [resolved, setResolved] = useState([]);\n  const [review, setReview] = useState([]);\n  const [inwaiting, setInwaiting] = useState([]);\n  const [withdraw, setWithdraw] = useState([]);\n  const [new1, setNew1] = useState([]);\n  const [newassaigned, setNewAssigned] = useState([]);\n  const [inprogress, setInprogress] = useState([]);\n  const [closed, setClosed] = useState([]);\n  const [followup, setFollowup] = useState([]);\n  console.log(editedData);\n  const ref = useRef([]);\n  // const currentDate = new Date();\n  // const currentMonthStartDate = startOfMonth(currentDate);\n  // const currentMonthEndDate = endOfMonth(currentDate);\n  const handleDateChange = (date) => {\n    setEdate(date);\n  };\n\n  var maxDate = moment(moment().toString()).format(\"yyyy-MM-DD\");\n  const [item, setItem] = useState([]);\n  useEffect(() => {\n    console.log(item);\n  }, [item]);\n\n  //  console.log(edit[0]?.Issue_Name)\n  useEffect(() => {\n    getCriticality();\n    getIssueSource();\n    getEditStatus();\n    getEditNewStatus();\n    getProject();\n    getIssueName();\n    getStatusdeferrred();\n    getStatusresolved();\n    getStatusreview();\n    getStatusInwaiting();\n    getStatuswithdraw();\n    getStatusNew();\n    getStatusassigned();\n    getStatusInprogress();\n    getStatusFollowup();\n  }, []);\n\n  // axios call for criticality\n  const getCriticality = (e) => {\n    console.log(\"popup criticality\");\n    axios({\n      method: \"get\",\n      url: baseUrl + `/ProjectMS/Issues/getCriticality`,\n    }).then((res) => {\n      var criticality = res.data;\n      setCriticality(criticality);\n    });\n  };\n\n  // axios call for issue source\n  const getIssueSource = (e) => {\n    axios({\n      method: \"get\",\n      url: baseUrl + `/ProjectMS/Issues/getIssueSource`,\n    }).then((res) => {\n      var issueSource = res.data;\n      setIssueSource(issueSource);\n    });\n  };\n\n  // axios call for status\n  const getEditStatus = (e) => {\n    axios({\n      method: \"get\",\n      url: baseUrl + `/ProjectMS/Issues/getEditStatus`,\n    }).then((res) => {\n      var status = res.data;\n      setStatus(status);\n      console.log(status);\n    });\n  };\n\n  // axios call for New status\n  const getEditNewStatus = (e) => {\n    axios({\n      method: \"get\",\n      url: baseUrl + `/ProjectMS/Issues/getEditNewStatus`,\n    }).then((res) => {\n      var status = res.data;\n      setNewStatus(status);\n      console.log(status);\n    });\n  };\n\n  // axios call to get the emp details for autocomplete\n  const getData = () => {\n    console.log(\"line no 106\");\n    axios({\n      method: \"get\",\n      url: baseUrl + `/ProjectMS/Issues/getAssignedData`,\n    }).then(function (response) {\n      var res = response.data;\n      setIssueDetails(res);\n      console.log(\"assigned data\");\n      console.log(res);\n    });\n  };\n  useEffect(() => {}, [issueDetails]);\n  useEffect(() => {\n    getData();\n  }, []);\n\n  /// axios call to get project name\n  const getProject = (e) => {\n    axios({\n      method: \"get\",\n      url: baseUrl + `/ProjectMS/Issues/getProjectName`,\n    }).then((res) => {\n      var project = res.data;\n      setProjectName(project);\n    });\n  };\n\n  // var Size = Quill.import('attributors/style/size');\n  // Size.whitelist = ['10px', '12px', '16px', '18px', '20px', '24px', '28px'];\n  // Quill.register(Size, true);\n  // const customSize = () => (\n  //     <div id='sizing'>\n  //         <select className=\"ql-size\">\n  //             <option value=\"10px\">Abcdefgh...</option>\n  //             <option value=\"12px\">Abcdefgh...</option>\n  //             <option value=\"16px\" selected>Abcdefgh...</option>\n  //             <option value=\"18px\">Abcdefgh...</option>\n  //             <option value=\"20px\">Abcdefgh...</option>\n  //             <option value=\"24px\">Abcdefgh...</option>\n  //             <option value=\"28px\">Abcdefgh...</option>\n  //         </select>\n  //     </div>\n  // )\n  const getIssueName = (e) => {\n    axios({\n      method: \"get\",\n      url: baseUrl + `/ProjectMS/Issues/getIssueName?project_id=${projectId}`,\n    }).then((res) => {\n      var issuename = res.data;\n      setIssueName(issuename);\n    });\n  };\n\n  const getStatusdeferrred = () => {\n    axios({\n      method: \"get\",\n      url: baseUrl + `/ProjectMS/Issues/getStatusdeferrred`,\n    }).then((res) => {\n      var Statusdeferrred = res.data;\n      setDeferred(Statusdeferrred);\n    });\n  };\n\n  const getStatusresolved = () => {\n    axios({\n      method: \"get\",\n      url: baseUrl + `/ProjectMS/Issues/getStatusresolved`,\n    }).then((res) => {\n      var Statusresolved = res.data;\n      setResolved(Statusresolved);\n    });\n  };\n\n  const getStatusreview = () => {\n    axios({\n      method: \"get\",\n      url: baseUrl + `/ProjectMS/Issues/getStatusreview`,\n    }).then((res) => {\n      var Statusreview = res.data;\n      setReview(Statusreview);\n    });\n  };\n\n  const getStatusInwaiting = () => {\n    axios({\n      method: \"get\",\n      url: baseUrl + `/ProjectMS/Issues/getStatusInwaiting`,\n    }).then((res) => {\n      var StatusInwaiting = res.data;\n      setInwaiting(StatusInwaiting);\n    });\n  };\n\n  const getStatuswithdraw = () => {\n    axios({\n      method: \"get\",\n      url: baseUrl + `/ProjectMS/Issues/getStatuswithdraw`,\n    }).then((res) => {\n      var Statuswithdraw = res.data;\n      setWithdraw(Statuswithdraw);\n    });\n  };\n\n  const getStatusNew = () => {\n    axios({\n      method: \"get\",\n      url: baseUrl + `/ProjectMS/Issues/getStatusNew`,\n    }).then((res) => {\n      var StatusNew = res.data;\n      setNew1(StatusNew);\n    });\n  };\n\n  const getStatusassigned = () => {\n    axios({\n      method: \"get\",\n      url: baseUrl + `/ProjectMS/Issues/getStatusassigned`,\n    }).then((res) => {\n      var Statusassigned = res.data;\n      setNewAssigned(Statusassigned);\n    });\n  };\n\n  const getStatusInprogress = () => {\n    axios({\n      method: \"get\",\n      url: baseUrl + `/ProjectMS/Issues/getStatusInprogress`,\n    }).then((res) => {\n      var StatusInprogress = res.data;\n      setInprogress(StatusInprogress);\n    });\n  };\n\n  const getStatusClosed = () => {\n    axios({\n      method: \"get\",\n      url: baseUrl + `/ProjectMS/Issues/getStatusClosed`,\n    }).then((res) => {\n      var StatusClosed = res.data;\n      // setClosed(StatusInprogress)\n    });\n  };\n\n  const getStatusFollowup = () => {\n    axios({\n      method: \"get\",\n      url: baseUrl + `/ProjectMS/Issues/getStatusFollowup`,\n    }).then((res) => {\n      var StatusFollowup = res.data;\n      setFollowup(StatusFollowup);\n    });\n  };\n  const editorToolBar = {\n    toolbar: [\n      [\n        { header: [false, 1, 2, 3, 4, 5, 6] },\n        // {tooltip:[\"ee\"]},\n        // { size: [] },\n        { font: [] },\n        { color: [] },\n        { bold: { tooltip: \"Bold (Ctrl+B)\" } },\n        \"italic\",\n        \"underline\",\n        { list: \"ordered\", tooltip: \"Numbered List\" },\n        { list: \"bullet\" },\n        { script: \"sub\" },\n        { script: \"super\" },\n        { indent: \"-1\" },\n        { indent: \"+1\" },\n        { align: null },\n        { align: \"center\" },\n        { align: \"right\" },\n        \"strike\",\n        \"link\",\n        \"code-block\",\n        \"clean\",\n      ],\n    ],\n  };\n  const handleChange = (e) => {\n    const { id, value } = e.target;\n    setFormData((prev) => ({ ...prev, [id]: value }));\n  };\n\n  const [uniqueMessage, setUniqueMessage] = useState(false);\n\n  // axios call to create new record.\n\n  const handleAddClick = () => {\n    console.log(formData);\n    let someDataa = issueName.some((d) => d.name == formData.name);\n    console.log(someDataa);\n    // if (formData == undefined) {\n    if (someDataa) {\n      console.log(\"1234567\");\n      let ele = document.getElementsByClassName(\"unique\");\n      console.log(ele.length);\n      for (let index = 0; index < ele.length; index++) {\n        ele[index].classList.add(\"error-block\");\n      }\n      console.log(ele);\n\n      setUniqueMessage(true);\n      setValidationMessage(false);\n      // setValidationMessage(false);\n      setTimeout(() => {\n        // setValidationMessage(false);\n      }, 3000);\n      return;\n    }\n    if (someDataa) return;\n    //\n    let adddata = document.getElementsByClassName(\"error\");\n\n    for (let i = 0; i < adddata.length; i++) {\n      console.log(adddata[i].value);\n      if (\n        adddata[i].value == \"\" ||\n        adddata[i].value == \"null\" ||\n        adddata[i].value == \"All\" ||\n        adddata[i].value == undefined\n      ) {\n        adddata[i].classList.add(\"error-block\");\n        setValidationMessage(true);\n        setUniqueMessage(false);\n\n        // console.log(textdata[i])\n      } else {\n        adddata[i].classList.remove(\"error-block\");\n\n        setValidationMessage(false);\n      }\n    }\n\n    // if (formData.description == \"\" || undefined || null) {\n    //     setDespValidation(true);\n    //     setValidationMessage(true);\n\n    // } else {\n    //     setDespValidation(\"\");\n    // }\n    // console.log(formData)\n\n    let name = formData.name;\n    let criticality = formData.criticality;\n    let source = formData.source;\n    let description = formData.description;\n\n    if (\n      Object.values({ name, criticality, source, description }).includes(\"\")\n    ) {\n      //   console.log(description)\n      setValidationMessage(true);\n      adddata[i].classList.remove(\"error-block\");\n      return;\n      setValidationMessage(false);\n    }\n    setValidationMessage(false);\n    let valid = GlobalValidation(ref);\n    setValidationMessage(false);\n    console.log(valid);\n\n    if (valid) {\n      setValidationMessage(true);\n\n      return;\n    }\n\n    setValidationMessage(false);\n\n    axios({\n      method: \"post\",\n      url: baseUrl + `/ProjectMS/Issues/postProjectIssuesData`,\n      data: formData,\n    }).then((error) => {\n      setValidationMessage(false);\n      console.log(\"success\", error);\n      setOpenPopup(false);\n      getTableData();\n      setAddmsg(true);\n      setTimeout(() => {\n        setAddmsg(false);\n      }, 3000);\n    });\n  };\n  // console.log(formEditData)\n  ///axios call to save the edited data\n  const handleEditClick = () => {\n    console.log(formEditData);\n\n    let someDataa = issueName.some((d) => d.name == formEditData.Issue_Name);\n\n    console.log(\n      someDataa &&\n        flag == false &&\n        formEditData.Issue_Name != initialformEditData.Issue_Name,\n      flag\n    );\n    if (\n      someDataa &&\n      flag == false &&\n      formEditData.Issue_Name != initialformEditData.Issue_Name\n    ) {\n      let ele = document.getElementsByClassName(\"unique\");\n      for (let index = 0; index < ele.length; index++) {\n        ele[index].classList.add(\"error-block\");\n      }\n      setUniqueMessage(true);\n      // setValidationMessage(false);\n      setTimeout(() => {\n        // setValidationMessage(false);\n      }, 3000);\n      return;\n    }\n\n    console.log(formEditData);\n    console.log(projectId);\n\n    let adddata = document.getElementsByClassName(\"error\");\n\n    for (let i = 0; i < adddata.length; i++) {\n      console.log(adddata[i].value);\n      if (\n        adddata[i].value == \"\" ||\n        adddata[i].value == \"null\" ||\n        adddata[i].value == \"All\" ||\n        adddata[i].value == undefined\n      ) {\n        adddata[i].classList.add(\"error-block\");\n        setValidationMessage(true);\n\n        // console.log(textdata[i])\n      } else {\n        adddata[i].classList.remove(\"error-block\");\n\n        setValidationMessage(false);\n      }\n    }\n    let name = formEditData.name;\n    let criticality = formEditData.criticality;\n    let source = formEditData.source;\n    let description = formEditData.description;\n\n    if (\n      Object.values({ name, criticality, source, description }).includes(\"\") ||\n      description === \"<p><br></p>\"\n    ) {\n      setValidationMessage(true);\n      return;\n    }\n    setValidationMessage(false);\n    let valid = GlobalValidation(ref);\n\n    console.log(valid);\n\n    if (valid) {\n      setValidationMessage(true);\n\n      return;\n    }\n    setValidationMessage(false);\n    axios({\n      method: \"post\",\n      url: baseUrl + `/ProjectMS/Issues/postProjectIssuesData`,\n      data: {\n        id: formEditData.id,\n        projectid: projectId,\n        createdbyname: formEditData.Created_By,\n        duedate: formEditData.Due_Date,\n        name: formEditData.Issue_Name,\n        rca:\n          formEditData.RCA_Done === true\n            ? \"1\"\n            : formEditData.RCA_Done === false\n            ? \"0\"\n            : formEditData.RCA_Done,\n        // \"rca\": ((formEditData?.rca) === true ? 1 : (formEditData?.rca) === false ? 0 : \"\"),\n        comments: formEditData.Comments,\n        createdbyid: formEditData.created_by_id,\n        description: formEditData.description,\n        assignedto: formEditData.owner_id,\n        criticality: formEditData.priority_id,\n        source: formEditData.source_id,\n        status:\n          formEditData.status_id == 426 && formEditData.owner_id != null\n            ? 427\n            : formEditData.status_id,\n      },\n    }).then((error) => {\n      console.log(\"success\", error);\n      setOpenPopup(false);\n      getTableData();\n      setEditmsg(true);\n      setTimeout(() => {\n        setEditmsg(false);\n      }, 3000);\n    });\n  };\n\n  const handleKeyDown = (event) => {\n    // Regular expression pattern to match alphanumeric characters\n    const alphanumericRegex = /^[0-9a-zA-Z]+$/;\n\n    if (!alphanumericRegex.test(event.key)) {\n      // If the pressed key is not alphanumeric, prevent it from being entered in the input field\n      event.preventDefault();\n    }\n  };\n\n  console.log(editedData?.status_id);\n\n  return (\n    <div className=\"col-md-12\">\n      {/* <Draggable> */}\n      <CModal\n        visible={openPopup}\n        size=\"xl\"\n        onClose={() => setOpenPopup(false)}\n        backdrop={\"static\"}\n      >\n        <CModalHeader className=\"\" style={{ cursor: \"all-scroll\" }}>\n          <CModalTitle>\n            {\" \"}\n            {\"\"}\n            {type == \"add\" ? (\n              <span className=\"\">Add Issue</span>\n            ) : (\n              <span className=\"\"> Edit Issue </span>\n            )}\n          </CModalTitle>\n        </CModalHeader>\n        <CModalBody>\n          <div className=\"group-content row \">\n            <div>\n              {uniqueMessage ? (\n                <div className=\"statusMsg error\">\n                  <AiFillWarning size=\"1.4em\" />\n                  <span>Please select unique name</span>\n                </div>\n              ) : (\n                \"\"\n              )}\n              {validationMessage ? (\n                <div className=\"statusMsg error\">\n                  <AiFillWarning size=\"1.4em\" />\n                  <span>\n                    Please select the valid values for highlighted fields\n                  </span>\n                </div>\n              ) : (\n                \"\"\n              )}\n            </div>\n            {projectData.map((list) => (\n              <div className=\" col-md-3 mb-2\">\n                <div className=\"form-group row\" id=\"project\">\n                  <label className=\"col-5\">Project</label>\n                  <label className=\"col-1 p-0\">:</label>\n                  <label className=\"col-6\">\n                    {editedData?.status_id != 432 ? (\n                      <input\n                        type=\"Text\"\n                        className=\"disableField\"\n                        name=\"project\"\n                        id={projectId}\n                        disabled={true}\n                        value={list.projectName}\n                        onChange={(e) => handleChange(e)}\n                      />\n                    ) : (\n                      <input\n                        type=\"Text\"\n                        className=\"disableField\"\n                        name=\"project\"\n                        id={projectId}\n                        disabled={true}\n                        value={list.projectName}\n                        onChange={(e) => handleChange(e)}\n                      />\n                    )}\n                  </label>\n                </div>\n              </div>\n            ))}\n            <div className=\" col-md-3 mb-2\">\n              <div className=\"form-group row\" id=\"name\">\n                <label className=\"col-5\">\n                  Issue Name<span className=\" error-text ml-1\">*</span>\n                </label>\n                <label className=\"col-1 p-0\">:</label>\n                <div\n                  className=\"col-6 textfield\"\n                  ref={(ele) => {\n                    ref.current[0] = ele;\n                  }}\n                >\n                  {type == \"add\" ? (\n                    <input\n                      className=\"error unique\"\n                      type=\"text\"\n                      id=\"name\"\n                      placeholder=\"Max 50 characters\"\n                      maxLength={50}\n                      onKeyDown={(event) => {\n                        handleKeyDown;\n                        if (event.code == \"Space\" && !formData.name)\n                          event.preventDefault();\n                      }}\n                      // onKeyDown={handleKeyDown}\n                      name=\"name\"\n                      required\n                      onChange={(e) => handleChange(e)}\n                    />\n                  ) : (\n                    <>\n                      {\" \"}\n                      {editedData?.status_id != 432 ? (\n                        <input\n                          className=\"error unique \"\n                          type=\"Text\"\n                          name=\"name\"\n                          id=\"name\"\n                          // onKeyDown={(event) => {\n                          //     handleKeyDown\n                          //     if ((event.code == 'Space') && (!(formData.name))) event.preventDefault()\n\n                          // }}\n                          defaultValue={editedData?.Issue_Name}\n                          onChange={(e) => {\n                            setFormEditData((prev) => ({\n                              ...prev,\n                              [\"Issue_Name\"]: e.target.value,\n                            })),\n                              setFlag(false);\n                          }}\n                        />\n                      ) : (\n                        <input\n                          type=\"Text\"\n                          disabled={true}\n                          placeholder=\"max 50 characters\"\n                          defaultValue={editedData?.Issue_Name}\n                        />\n                      )}\n                    </>\n                  )}\n                </div>\n              </div>\n            </div>\n            <div className=\" col-md-3 mb-2\">\n              <div className=\"form-group row\" id=\"criticality\">\n                <label className=\"col-5 \">\n                  Criticality<span className=\"error-text ml-1\">*</span>\n                </label>\n                <label className=\"col-1 p-0\">:</label>\n                <label className=\"col-6 \">\n                  {type == \"add\" ? (\n                    <select\n                      className=\"error  col-md-12 p0\"\n                      name=\"criticality\"\n                      id=\"criticality\"\n                      onChange={(e) => handleChange(e)}\n                    >\n                      <option value=\"All\">\n                        {\" \"}\n                        &lt;&lt;Please Select&gt;&gt;\n                      </option>\n                      {criticality1.map((Item) => (\n                        <option value={Item.id}> {Item.lkup_name}</option>\n                      ))}\n                    </select>\n                  ) : (\n                    <>\n                      {editedData?.status_id != 432 ? (\n                        <select\n                          className=\"error  col-md-12 p0 \"\n                          name=\"criticality\"\n                          id=\"criticality\"\n                          onChange={(e) =>\n                            setFormEditData((prev) => ({\n                              ...prev,\n                              [\"priority_id\"]: e.target.value,\n                            }))\n                          }\n                        >\n                          <option value=\"All\">\n                            {\" \"}\n                            &lt;&lt;Please Select&gt;&gt;\n                          </option>\n                          {criticality1.map((Item) => (\n                            <option\n                              value={Item.id}\n                              selected={\n                                Item.id == editedData?.priority_id\n                                  ? true\n                                  : false\n                              }\n                            >\n                              {\" \"}\n                              {Item.lkup_name}\n                            </option>\n                          ))}\n                        </select>\n                      ) : (\n                        <select\n                          className=\"  col-md-12 p0 \"\n                          disabled={true}\n                          name=\"criticality\"\n                          id=\"criticality\"\n                          onChange={(e) =>\n                            setFormEditData((prev) => ({\n                              ...prev,\n                              [\"priority_id\"]: e.target.value,\n                            }))\n                          }\n                        >\n                          <option value=\"All\">\n                            {\" \"}\n                            &lt;&lt;Please Select&gt;&gt;\n                          </option>\n                          {criticality1.map((Item) => (\n                            <option\n                              value={Item.id}\n                              selected={\n                                Item.id == editedData?.priority_id\n                                  ? true\n                                  : false\n                              }\n                            >\n                              {\" \"}\n                              {Item.lkup_name}\n                            </option>\n                          ))}\n                        </select>\n                      )}\n                    </>\n                  )}\n                </label>\n              </div>\n            </div>\n            <div className=\" col-md-3 mb-2\">\n              <div className=\"form-group row\" id=\"source\">\n                <label className=\"col-5\">\n                  Issue Source<span className=\"error-text ml-1\">*</span>\n                </label>\n                <label className=\"col-1 p-0\">:</label>\n                <label className=\"col-6 \">\n                  {type == \"add\" ? (\n                    <select\n                      className=\"error col-md-12 p0 \"\n                      name=\"source\"\n                      id=\"source\"\n                      onChange={(e) => handleChange(e)}\n                    >\n                      <option value=\"All\">\n                        {\" \"}\n                        &lt;&lt;Please Select&gt;&gt;\n                      </option>\n                      {issueSource.map((Item) => (\n                        <option value={Item.id}> {Item.lkup_name}</option>\n                      ))}\n                    </select>\n                  ) : (\n                    <>\n                      {editedData?.status_id != 432 ? (\n                        <select\n                          className=\"error col-md-12 p0 \"\n                          name=\"source\"\n                          id=\"source\"\n                          onChange={(e) =>\n                            setFormEditData((prev) => ({\n                              ...prev,\n                              [\"source_id\"]: e.target.value,\n                            }))\n                          }\n                        >\n                          <option value=\"All\">\n                            {\" \"}\n                            &lt;&lt;Please Select&gt;&gt;\n                          </option>\n                          {issueSource.map((Item) => (\n                            <option\n                              value={Item.id}\n                              selected={\n                                Item.id == editedData?.source_id ? true : false\n                              }\n                            >\n                              {\" \"}\n                              {Item.lkup_name}\n                            </option>\n                          ))}\n                        </select>\n                      ) : (\n                        <select\n                          className=\" col-md-12 p0 \"\n                          disabled={true}\n                          name=\"source\"\n                          id=\"source\"\n                          onChange={(e) =>\n                            setFormEditData((prev) => ({\n                              ...prev,\n                              [\"source_id\"]: e.target.value,\n                            }))\n                          }\n                        >\n                          <option value=\"All\">\n                            {\" \"}\n                            &lt;&lt;Please Select&gt;&gt;\n                          </option>\n                          {issueSource.map((Item) => (\n                            <option\n                              value={Item.id}\n                              selected={\n                                Item.id == editedData?.source_id ? true : false\n                              }\n                            >\n                              {\" \"}\n                              {Item.lkup_name}\n                            </option>\n                          ))}\n                        </select>\n                      )}\n                    </>\n                  )}\n                </label>\n              </div>\n            </div>\n            <div className=\" col-md-3 mb-2\">\n              <div className=\"form-group row\" id=\"status\">\n                <label className=\"col-5\">Status</label>\n                <label className=\"col-1 p-0\">:</label>\n                <label className=\"col-6\">\n                  {type == \"add\" ? (\n                    <select\n                      className=\"col-md-12 disableField\"\n                      name=\"status\"\n                      id=\"status\"\n                      onChange={(e) => handleChange(e)}\n                      disabled={true}\n                    >\n                      <option value=\"{426}\" id=\"{426}\">\n                        {\" \"}\n                        New\n                      </option>\n                    </select>\n                  ) : editedData?.status_id == 426 ? (\n                    <select\n                      className=\"col-md-12 \"\n                      name=\"status\"\n                      id=\"status\"\n                      onChange={(e) =>\n                        setFormEditData((prev) => ({\n                          ...prev,\n                          [\"status_id\"]: e.target.value,\n                        }))\n                      }\n                    >\n                      {newStatus.map((Item) => (\n                        <option\n                          value={Item.id}\n                          selected={\n                            Item.id == editedData?.status_id ? true : false\n                          }\n                        >\n                          {\" \"}\n                          {Item.lkup_name}\n                        </option>\n                      ))}\n                    </select>\n                  ) : editedData?.status_id == 430 ? (\n                    <select\n                      className=\"col-md-12 \"\n                      name=\"status\"\n                      id=\"status\"\n                      onChange={(e) =>\n                        setFormEditData((prev) => ({\n                          ...prev,\n                          [\"status_id\"]: e.target.value,\n                        }))\n                      }\n                    >\n                      {deferred.map((Item) => (\n                        <option\n                          value={Item.id}\n                          selected={\n                            Item.id == editedData?.status_id ? true : false\n                          }\n                        >\n                          {\" \"}\n                          {Item.lkup_name}\n                        </option>\n                      ))}\n                    </select>\n                  ) : editedData?.status_id == 810 ? (\n                    <select\n                      className=\"col-md-12 \"\n                      name=\"status\"\n                      id=\"status\"\n                      onChange={(e) =>\n                        setFormEditData((prev) => ({\n                          ...prev,\n                          [\"status_id\"]: e.target.value,\n                        }))\n                      }\n                    >\n                      {review.map((Item) => (\n                        <option\n                          value={Item.id}\n                          selected={\n                            Item.id == editedData?.status_id ? true : false\n                          }\n                        >\n                          {\" \"}\n                          {Item.lkup_name}\n                        </option>\n                      ))}\n                    </select>\n                  ) : editedData?.status_id == 811 ? (\n                    <select\n                      className=\"col-md-12 \"\n                      name=\"status\"\n                      id=\"status\"\n                      onChange={(e) =>\n                        setFormEditData((prev) => ({\n                          ...prev,\n                          [\"status_id\"]: e.target.value,\n                        }))\n                      }\n                    >\n                      {inwaiting.map((Item) => (\n                        <option\n                          value={Item.id}\n                          selected={\n                            Item.id == editedData?.status_id ? true : false\n                          }\n                        >\n                          {\" \"}\n                          {Item.lkup_name}\n                        </option>\n                      ))}\n                    </select>\n                  ) : editedData?.status_id == 429 ? (\n                    <select\n                      className=\"col-md-12 \"\n                      name=\"status\"\n                      id=\"status\"\n                      onChange={(e) =>\n                        setFormEditData((prev) => ({\n                          ...prev,\n                          [\"status_id\"]: e.target.value,\n                        }))\n                      }\n                    >\n                      {withdraw.map((Item) => (\n                        <option\n                          value={Item.id}\n                          selected={\n                            Item.id == editedData?.status_id ? true : false\n                          }\n                        >\n                          {\" \"}\n                          {Item.lkup_name}\n                        </option>\n                      ))}\n                    </select>\n                  ) : editedData?.status_id == 427 ? (\n                    <select\n                      className=\"col-md-12 \"\n                      name=\"status\"\n                      id=\"status\"\n                      onChange={(e) =>\n                        setFormEditData((prev) => ({\n                          ...prev,\n                          [\"status_id\"]: e.target.value,\n                        }))\n                      }\n                    >\n                      {newassaigned.map((Item) => (\n                        <option\n                          value={Item.id}\n                          selected={\n                            Item.id == editedData?.status_id ? true : false\n                          }\n                        >\n                          {\" \"}\n                          {Item.lkup_name}\n                        </option>\n                      ))}\n                    </select>\n                  ) : editedData?.status_id == 812 ? (\n                    <select\n                      className=\"col-md-12 \"\n                      name=\"status\"\n                      id=\"status\"\n                      onChange={(e) =>\n                        setFormEditData((prev) => ({\n                          ...prev,\n                          [\"status_id\"]: e.target.value,\n                        }))\n                      }\n                    >\n                      {followup.map((Item) => (\n                        <option\n                          value={Item.id}\n                          selected={\n                            Item.id == editedData?.status_id ? true : false\n                          }\n                        >\n                          {\" \"}\n                          {Item.lkup_name}\n                        </option>\n                      ))}\n                    </select>\n                  ) : editedData?.status_id == 428 ? (\n                    <select\n                      className=\"col-md-12 \"\n                      name=\"status\"\n                      id=\"status\"\n                      onChange={(e) =>\n                        setFormEditData((prev) => ({\n                          ...prev,\n                          [\"status_id\"]: e.target.value,\n                        }))\n                      }\n                    >\n                      {inprogress.map((Item) => (\n                        <option\n                          value={Item.id}\n                          selected={\n                            Item.id == editedData?.status_id ? true : false\n                          }\n                        >\n                          {\" \"}\n                          {Item.lkup_name}\n                        </option>\n                      ))}\n                    </select>\n                  ) : editedData?.status_id == 431 ? (\n                    <select\n                      className=\"col-md-12 \"\n                      name=\"status\"\n                      id=\"status\"\n                      onChange={(e) =>\n                        setFormEditData((prev) => ({\n                          ...prev,\n                          [\"status_id\"]: e.target.value,\n                        }))\n                      }\n                    >\n                      {resolved.map((Item) => (\n                        <option\n                          value={Item.id}\n                          selected={\n                            Item.id == editedData?.status_id ? true : false\n                          }\n                        >\n                          {\" \"}\n                          {Item.lkup_name}\n                        </option>\n                      ))}\n                    </select>\n                  ) : editedData?.status_id == 432 ? (\n                    <select\n                      className=\"col-md-12 \"\n                      disabled={true}\n                      name=\"status\"\n                      id=\"status\"\n                      onChange={(e) =>\n                        setFormEditData((prev) => ({\n                          ...prev,\n                          [\"status_id\"]: e.target.value,\n                        }))\n                      }\n                    >\n                      {status.map((Item) => (\n                        <option\n                          value={Item.id}\n                          selected={\n                            Item.id == editedData?.status_id ? true : false\n                          }\n                        >\n                          {\" \"}\n                          {Item.lkup_name}\n                        </option>\n                      ))}\n                    </select>\n                  ) : (\n                    <select\n                      className=\"col-md-12 \"\n                      name=\"status\"\n                      id=\"status\"\n                      onChange={(e) =>\n                        setFormEditData((prev) => ({\n                          ...prev,\n                          [\"status_id\"]: e.target.value,\n                        }))\n                      }\n                    >\n                      {status.map((Item) => (\n                        <option\n                          value={Item.id}\n                          selected={\n                            Item.id == editedData?.status_id ? true : false\n                          }\n                        >\n                          {\" \"}\n                          {Item.lkup_name}\n                        </option>\n                      ))}\n                    </select>\n                  )}\n                </label>\n              </div>\n            </div>\n            <div className=\" col-md-3 mb-2\">\n              <div className=\"form-group row\" id=\"duedate\">\n                <label className=\"col-5\">Due Date</label>\n                <label className=\"col-1 p-0\">:</label>\n                <div className=\"col-6 \">\n                  <div className=\"datepicker\">\n                    {type == \"add\" ? (\n                      <DatePicker\n                        name=\"duedate\"\n                        id=\"duedate\"\n                        selected={dueDate}\n                        dateFormat=\"dd-MMM-yyyy\"\n                        showMonthDropdown\n                        showYearDropdown\n                        dropdownMode=\"select\"\n                        minDate={new Date()}\n                        onChange={(e) => {\n                          setFormData((prev) => ({\n                            ...prev,\n                            [\"duedate\"]: moment(e).format(\"yyyy-MM-DD\"),\n                          }));\n                          console.log(e);\n                          setDueDate(e);\n                        }}\n                        onKeyDown={(e) => {\n                          e.preventDefault();\n                          if (e.keyCode != 8) {\n                            e.preventDefault();\n                          }\n                        }}\n                      />\n                    ) : (\n                      <>\n                        {editedData?.status_id != 432 ? (\n                          <DatePicker\n                            name=\"duedate\"\n                            id=\"duedate\"\n                            selected={\n                              formEditData[\"Due_Date\"] == undefined || null\n                                ? \"\"\n                                : moment(formEditData[\"Due_Date\"])._d\n                            }\n                            dateFormat=\"dd-MMM-yyyy\"\n                            openToDate={moment().toDate()}\n                            showMonthDropdown\n                            showYearDropdown\n                            minDate={new Date()}\n                            dropdownMode=\"select\"\n                            // onChange={handleDateChange}\n                            onChange={(e) => {\n                              setFormEditData((prev) => ({\n                                ...prev,\n                                [\"Due_Date\"]: moment(e).format(\"yyyy-MM-DD\"),\n                              }));\n                              console.log(e);\n                            }}\n                            onKeyDown={(e) => {\n                              e.preventDefault();\n                            }}\n                          />\n                        ) : (\n                          <DatePicker\n                            name=\"duedate\"\n                            id=\"duedate\"\n                            selected={\n                              formEditData[\"Due_Date\"] == undefined || null\n                                ? \"\"\n                                : moment(formEditData[\"Due_Date\"])._d\n                            }\n                            dateFormat=\"dd-MMM-yyyy\"\n                            showMonthDropdown\n                            disabled={true}\n                            showYearDropdown\n                            minDate={new Date()}\n                            dropdownMode=\"select\"\n                            // onChange={handleDateChange}\n                            onChange={(e) => {\n                              setFormEditData((prev) => ({\n                                ...prev,\n                                [\"Due_Date\"]: moment(e).format(\"yyyy-MM-DD\"),\n                              }));\n                              console.log(e);\n                            }}\n                            onKeyDown={(e) => {\n                              e.preventDefault();\n                            }}\n                          />\n                        )}\n                      </>\n                    )}\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className=\" col-md-3 mb-2\">\n              <div className=\"form-group row\">\n                <label className=\"col-5\">Assigned To</label>\n                <label className=\"col-1 p-0\">:</label>\n                <div className=\"col-6\">\n                  {type == \"add\" ? (\n                    <>\n                      <div className=\"autoComplete-container\">\n                        <ReactSearchAutocomplete\n                          items={issueDetails}\n                          type=\"Text\"\n                          name=\"assignedto\"\n                          id=\"assignedto\"\n                          placeholder=\"Type minimum 3 characters\"\n                          className=\"AutoComplete\"\n                          onKeyDown={handleKeyDown}\n                          issueDetails={issueDetails}\n                          getData={getData}\n                          onSelect={(e) => {\n                            {\n                              setFormData((prevProps) => ({\n                                ...prevProps,\n                                assignedto: e.id,\n                              }));\n                            }\n                            {\n                              setFormData((prevProps) => ({\n                                ...prevProps,\n                                status: 427,\n                              }));\n                            }\n                          }}\n                          showIcon={false}\n                        />\n                      </div>\n                      <span>{item.name}</span>\n                    </>\n                  ) : (\n                    <>\n                      {\n                        editedData?.status_id != 432 ? (\n                          <div className=\"autoComplete-container\">\n                            <ReactSearchAutocomplete\n                              items={issueDetails}\n                              type=\"Text\"\n                              name=\"assignedto\"\n                              id=\"assignedto\"\n                              className=\"wrapperauto\"\n                              issueDetails={issueDetails}\n                              getData={getData}\n                              onKeyDown={handleKeyDown}\n                              // setSelectEmployee={setSelectEmployee}\n                              onSelect={(e) => {\n                                console.log(e);\n                                setFormEditData((prev) => ({\n                                  ...prev,\n                                  [\"owner_id\"]: e.id,\n                                }));\n                                setAssignedid(e.id);\n                              }}\n                              onChange={(e) => {\n                                setFormEditData((prev) => ({\n                                  ...prev,\n                                  [\"owner_id\"]: e.id,\n                                }));\n                              }}\n                              showIcon={false}\n                              inputSearchString={editedData?.Assigned_To}\n                            />\n                          </div>\n                        ) : (\n                          // <span >{item.name}</span>\n                          <div className=\"autoComplete-container\">\n                            <div className=\"autocomplete-wrapper disabled\">\n                              <input\n                                defaultValue={editedData?.Assigned_To}\n                                items={issueDetails}\n                                type=\"Text\"\n                                disabled={true}\n                                name=\"assignedto\"\n                                id=\"assignedto\"\n                              />\n                            </div>\n                          </div>\n                        )\n\n                        // <span >{item.name}</span>\n                      }\n                    </>\n                  )}\n                </div>\n              </div>\n            </div>\n            <div className=\" col-md-3 mb-2\">\n              <div className=\"form-group row\" id=\"rca\">\n                <label className=\"col-5\">RCA Done</label>\n                <label className=\"col-1 p-0\">:</label>\n                <div className=\"col-6 \">\n                  <div className=\"row\">\n                    {type == \"add\" ? (\n                      <>\n                        <div\n                          className=\"col-6\"\n                          onChange={(e) => {\n                            setRcaDone(\"1\");\n                            setFormData((prev) => ({ ...prev, [\"rca\"]: \"1\" }));\n                          }}\n                        >\n                          <input\n                            className=\"form-check-input\"\n                            htmlFor=\"yes\"\n                            type=\"radio\"\n                            value=\"1\"\n                            name=\"rca\"\n                            id=\"rca\"\n                            checked={formData[\"rca\"] == \"1\" ? true : false}\n                          />\n                          &nbsp;\n                          <span className=\"form-check-label\">Yes</span>{\" \"}\n                        </div>\n                        <div\n                          className=\"col-6\"\n                          onChange={(e) => {\n                            setRcaDone(\"0\");\n                            setFormData((prev) => ({ ...prev, [\"rca\"]: \"0\" }));\n                          }}\n                        >\n                          <input\n                            className=\"form-check-input\"\n                            htmlFor=\"no\"\n                            type=\"radio\"\n                            name=\"rca\"\n                            id=\"rca\"\n                            value=\"0\"\n                            checked={formData[\"rca\"] != \"1\" ? true : false}\n                          />\n                          &nbsp;\n                          <span className=\"form-check-label\">No</span>\n                        </div>\n                      </>\n                    ) : (\n                      <>\n                        {editedData?.status_id != 432 ? (\n                          <>\n                            <div\n                              className=\"col-6 \"\n                              onChange={(e) => {\n                                setFormEditData((prev) => ({\n                                  ...prev,\n                                  [\"RCA_Done\"]: \"1\",\n                                }));\n                              }}\n                            >\n                              <input\n                                className=\"form-check-input\"\n                                htmlFor=\"yes\"\n                                type=\"radio\"\n                                value=\"1\"\n                                name=\"RCA_Done\"\n                                id=\"RCA_Done\"\n                                checked={\n                                  formEditData[\"RCA_Done\"] == \"1\" ? true : false\n                                }\n                              />\n                              &nbsp;\n                              <span>Yes</span>{\" \"}\n                            </div>\n                            <div\n                              className=\"col-6 \"\n                              onChange={(e) => {\n                                setFormEditData((prev) => ({\n                                  ...prev,\n                                  [\"RCA_Done\"]: \"0\",\n                                }));\n                              }}\n                            >\n                              <input\n                                className=\"form-check-input\"\n                                htmlFor=\"no\"\n                                type=\"radio\"\n                                name=\"RCA_Done\"\n                                id=\"RCA_Done\"\n                                value=\"0\"\n                                checked={\n                                  formEditData[\"RCA_Done\"] == \"0\" ? true : false\n                                }\n                              />\n                              &nbsp;\n                              <span>No</span>\n                            </div>\n                          </>\n                        ) : (\n                          <>\n                            <div\n                              className=\"col-6 \"\n                              disabled={true}\n                              // onChange={(e) => { setFormEditData(prev => ({ ...prev, [\"RCA_Done\"]: \"1\" })) }}\n                            >\n                              <input\n                                className=\"form-check-input\"\n                                htmlFor=\"yes\"\n                                type=\"radio\"\n                                value=\"1\"\n                                name=\"RCA_Done\"\n                                id=\"RCA_Done\"\n                                checked={\n                                  formEditData[\"RCA_Done\"] == \"1\" ? true : false\n                                }\n                              />\n                              &nbsp;\n                              <span>Yes</span>\n                            </div>\n                            <div className=\"col-6 \" disabled={true}>\n                              <input\n                                className=\"form-check-input\"\n                                htmlFor=\"no\"\n                                type=\"radio\"\n                                name=\"RCA_Done\"\n                                id=\"RCA_Done\"\n                                value=\"0\"\n                                checked={\n                                  formEditData[\"RCA_Done\"] == \"0\" ? true : false\n                                }\n                              />\n                              &nbsp;\n                              <span>No</span>\n                            </div>\n                          </>\n                        )}\n                      </>\n                    )}\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className=\"col-md-3 mb-2 \">\n              <div className=\"form-group row\" id=\"createdby\">\n                <label className=\"col-5\">Created By</label>\n                <label className=\"col-1 p-0\">:</label>\n                <label className=\"col-6 \">\n                  {type == \"add\" ? (\n                    <input\n                      className=\"disableField\"\n                      type=\"Text\"\n                      id=\"createdby\"\n                      readOnly\n                      defaultValue={loggedUserName}\n                      disabled={true}\n                    />\n                  ) : (\n                    <input\n                      type=\"Text\"\n                      className=\"disableField\"\n                      name=\"createdby\"\n                      id=\"createdby\"\n                      readOnly\n                      defaultValue={editedData?.Created_By}\n                      disabled={true}\n                    />\n                  )}\n                </label>\n              </div>\n            </div>\n\n            <div className=\"col-md-12 \">\n              <div className=\"col-md-3 mb-2 \">\n                <div className=\"form-group row\" id=\"description\">\n                  <label className=\"col-md-12 p0 \">\n                    Issue Description<span className=\"error-text ml-1\">*</span>\n                  </label>\n                </div>\n              </div>\n            </div>\n            <div\n              className=\"col-md-12 mb-2 text error\"\n              ref={(ele) => {\n                ref.current[1] = ele;\n              }}\n            >\n              {type == \"add\" ? (\n                <div className=\"\">\n                  <ReactQuill\n                    className=\"\"\n                    theme=\"snow\"\n                    value={value}\n                    name=\"description\"\n                    // data-toggle=\"tooltip\"\n                    // title={\"link\"}\n\n                    id=\"editor-container\"\n                    onChange={(e) => {\n                      setValue(e);\n                      setFormData((prev) => ({\n                        ...prev,\n                        [\"description\"]: value,\n                      }));\n                    }}\n                    // modules={editorToolBar}\n                    modules={editorToolBar}\n                  />\n                </div>\n              ) : (\n                <>\n                  {editedData?.status_id != 432 ? (\n                    <div>\n                      <ReactQuill\n                        className=\"\"\n                        theme=\"snow\"\n                        //  value={value}\n                        // data-toggle=\"tooltip\"\n                        // title={editorToolBar}\n                        defaultValue={editedData?.description}\n                        name=\"description\"\n                        id=\"editor-container\"\n                        onChange={(e) => {\n                          setValue(e);\n                          setFormEditData((prev) => ({\n                            ...prev,\n                            [\"description\"]: e,\n                          }));\n                        }}\n                        modules={editorToolBar}\n                      />\n                    </div>\n                  ) : (\n                    <div disabled={true}>\n                      <ReactQuill\n                        className=\"\"\n                        theme=\"snow\"\n                        disabled={true}\n                        readOnly={true}\n                        name=\"description\"\n                        id=\"description\"\n                        defaultValue={editedData?.description}\n                        modules={editorToolBar}\n                      />\n                    </div>\n                  )}\n                </>\n              )}\n            </div>\n            <div className=\"col-md-12 \">\n              <div className=\"col-md-3 \">\n                <div className=\"form-group row\" id=\"comments\">\n                  <label className=\"col-md-12 \">Comments</label>\n                </div>\n              </div>\n            </div>\n            <div className=\"col-md-12 p0\">\n              {type == \"add\" ? (\n                <textarea\n                  maxLength={500}\n                  rows=\"4\"\n                  cols={180}\n                  name=\"comments\"\n                  id=\"comments\"\n                  placeholder=\"Max 500 characters\"\n                  onChange={(e) => handleChange(e)}\n                />\n              ) : (\n                <>\n                  {editedData?.status_id != 432 ? (\n                    <textarea\n                      maxLength={500}\n                      rows=\"4\"\n                      cols={180}\n                      name=\"comments\"\n                      id=\"comments\"\n                      placeholder=\"Max 500 characters\"\n                      defaultValue={editedData?.Comments}\n                      onChange={(e) =>\n                        setFormEditData((prev) => ({\n                          ...prev,\n                          [\"Comments\"]: e.target.value,\n                        }))\n                      }\n                    />\n                  ) : (\n                    <textarea\n                      maxLength={500}\n                      rows=\"4\"\n                      cols={180}\n                      name=\"comments\"\n                      id=\"comments\"\n                      placeholder=\"Max 500 characters\"\n                      disabled={true}\n                      defaultValue={editedData?.Comments}\n                      onChange={(e) =>\n                        setFormEditData((prev) => ({\n                          ...prev,\n                          [\"Comments\"]: e.target.value,\n                        }))\n                      }\n                    />\n                  )}\n                </>\n              )}\n            </div>\n            <div className=\"col-md-12 col-sm-12 col-xs-12 my-2 btn-container center\">\n              {type == \"add\" ? (\n                <button\n                  type=\"button\"\n                  className=\"btn btn-primary\"\n                  onClick={() => {\n                    handleAddClick();\n                  }}\n                >\n                  <FaSave />\n                  Save{\" \"}\n                </button>\n              ) : (\n                <>\n                  {editedData?.status_id != 432 ? (\n                    <button\n                      type=\"button\"\n                      className=\"btn btn-primary\"\n                      onClick={() => {\n                        handleEditClick();\n                      }}\n                    >\n                      <FaSave />\n                      Save{\" \"}\n                    </button>\n                  ) : (\n                    <button\n                      type=\"button\"\n                      className=\"btn btn-primary\"\n                      style={{ cursor: \"no-drop\" }}\n                    >\n                      <FaSave />\n                      Save{\" \"}\n                    </button>\n                  )}\n                </>\n              )}\n            </div>\n          </div>\n        </CModalBody>\n      </CModal>\n      {/* </Draggable> */}\n    </div>\n  );\n}\nexport default AddPopup;\n","import React, { useRef, useState } from \"react\";\nimport \"../../App.scss\";\nimport {\n  FaChevronCircleDown,\n  FaChevronCircleUp,\n  FaSearch,\n  FaPlus,\n} from \"react-icons/fa\";\nimport { useEffect } from \"react\";\nimport { environment } from \"../../environments/environment\";\nimport AutoComplete from \"./IssuesAutocomplete\";\nimport { CModal } from \"@coreui/react\";\nimport { CModalBody } from \"@coreui/react\";\nimport { CModalHeader } from \"@coreui/react\";\nimport { CModalTitle } from \"@coreui/react\";\n\nimport axios from \"axios\";\nimport AddPopup from \"./AddPopup\";\nimport { CCollapse } from \"@coreui/react\";\nimport { AiFillEdit } from \"react-icons/ai\";\nimport { AiFillDelete } from \"react-icons/ai\";\nimport Loader from \"../Loader/Loader\";\nimport { Column } from \"ag-grid-community\";\nimport { BiCheck } from \"react-icons/bi\";\nimport moment from \"moment\";\nimport ErrorLogTable from \"../Administration/ErrorLogsTable\";\nimport { ImCross } from \"react-icons/im\";\nimport { ReactSearchAutocomplete } from \"react-search-autocomplete\";\nimport ScreenBreadcrumbs from \"../Common/ScreenBreadcrumbs\";\n\nfunction ProjectIssues(props) {\n  const { projectId, grp4Items } = props;\n  console.log(grp4Items);\n  console.log(grp4Items[5]?.is_write);\n  let rows = 25;\n  const baseUrl = environment.baseUrl;\n  const [uid, setUid] = useState(0);\n  const [deleteMessage, setDeleteMessage] = useState(false);\n  const [addmsg, setAddmsg] = useState(false);\n  const [editmsg, setEditmsg] = useState(false);\n  const [filterVal, setFilterVal] = useState(\"\");\n  const [searching, setSearching] = useState(\"\");\n  const [order, setOrder] = useState(\"ASC\");\n  const [criticality, setCriticality] = useState([]);\n  const [issueSource, setIssueSource] = useState([]);\n  const [status, setStatus] = useState([]);\n  const [searchApi, setSearchApi] = useState([]);\n  const [tableData, setTableData] = useState([]);\n  const [loader, setLoader] = useState(false);\n  const [openPopup, setOpenPopup] = useState(false);\n  const [deletePopup, setDeletePopup] = useState(false);\n  const [visible, setVisible] = useState(false);\n  const [cheveronIcon, setCheveronIcon] = useState(FaChevronCircleUp);\n  const [issueDetails, setIssueDetails] = useState([]);\n  const [issueDetails1, setIssueDetails1] = useState([]);\n  console.log(issueDetails1);\n  const [edit, setEdit] = useState([]);\n  const [type, setType] = useState(\"add\");\n  const [projectIssueDetails, setProjectIssueDetails] = useState([]);\n  const searchdata = {\n    projectid: projectId,\n    criticality: null,\n    source: null,\n    status: null,\n    name: null,\n    rca: null,\n    assignedto: null,\n    createdby: null,\n    duedate: null,\n  };\n  const [editedData, setEditedData] = useState(searchdata);\n  const [formData, setFormData] = useState(searchdata);\n  const [editId, setEditId] = useState();\n  const loggedUserName = localStorage.getItem(\"resName\");\n  const [projectData, setProjectData] = useState([]);\n  const [headerData, setHeaderData] = useState([]);\n  const [linkColumns, setLinkColumns] = useState([]);\n  const [linkColumnsRoutes, setLinkColumnsRoutes] = useState([]);\n  const [item, setItem] = useState([]);\n  // const [permissions, setPermissions] = useState([]);\n  const loggedUserId = localStorage.getItem(\"resId\");\n\n  // breadcrumbs --\n  const [routes, setRoutes] = useState([]);\n  let textContent = \"Delivery\";\n  let currentScreenName = [\"Projects\", \"Open\", \"Monitoring\", \"Issues\"];\n\n  useEffect(() => {\n    getMenus();\n  }, []);\n\n  const getMenus = () => {\n    // setMenusData\n\n    axios({\n      method: \"GET\",\n      url: baseUrl + `/CommonMS/master/getMenus?loggedUserId=${loggedUserId}`,\n    }).then((resp) => {\n      let data = resp.data;\n\n      data.forEach((item) => {\n        if (item.display_name === textContent) {\n          setRoutes([item]);\n        }\n      });\n    });\n  };\n  console.log(routes);\n  // const dataobject=()\n  const dataObject = grp4Items.find((item) => item.display_name === \"Issues\");\n  console.log(dataObject?.is_write, \"****\");\n  const abortController = useRef(null);\n  const handleAbort = () => {\n    abortController.current && abortController.current.abort();\n    setLoader(false);\n  };\n\n  const SnoAlign = (tableData) => {\n    return <div align=\"center\">{tableData.SNo}</div>;\n  };\n  const IssueName = (tableData) => {\n    return (\n      <div\n        className=\"ellipsis\"\n        data-toggle=\"tooltip\"\n        title={tableData.Issue_Name}\n      >\n        {tableData.Issue_Name}\n      </div>\n    );\n  };\n  const Criticality = (tableData) => {\n    return (\n      <div\n        className=\"ellipsis\"\n        data-toggle=\"tooltip\"\n        title={tableData.Criticality}\n      >\n        {tableData.Criticality}\n      </div>\n    );\n  };\n  const Status = (tableData) => {\n    return (\n      <div className=\"ellipsis\" data-toggle=\"tooltip\" title={tableData.Status}>\n        {tableData.Status}\n      </div>\n    );\n  };\n  const IssueSource = (tableData) => {\n    return (\n      <div\n        className=\"ellipsis\"\n        data-toggle=\"tooltip\"\n        title={tableData.Issue_Source}\n      >\n        {tableData.Issue_Source}\n      </div>\n    );\n  };\n  const AssignedTo = (tableData) => {\n    return (\n      <div\n        className=\"ellipsis\"\n        data-toggle=\"tooltip\"\n        title={tableData.Assigned_To}\n      >\n        {tableData.Assigned_To}\n      </div>\n    );\n  };\n  const RCADone = (tableData) => {\n    return (\n      <div\n        className=\"ellipsis\"\n        data-toggle=\"tooltip\"\n        title={tableData.RCA_Done}\n      >\n        {tableData.RCA_Done == true ? \"Yes\" : \"No\"}\n      </div>\n    );\n  };\n  const CreatedBy = (tableData) => {\n    return (\n      <div\n        className=\"ellipsis\"\n        data-toggle=\"tooltip\"\n        title={tableData.Created_By}\n      >\n        {tableData.Created_By}\n      </div>\n    );\n  };\n  const Comments = (tableData) => {\n    return (\n      <div\n        className=\"ellipsis\"\n        data-toggle=\"tooltip\"\n        title={tableData.Comments}\n      >\n        {tableData.Comments}\n      </div>\n    );\n  };\n  const DueDate = (tableData) => {\n    return (\n      <div\n        className=\"ellipsis\"\n        data-toggle=\"tooltip\"\n        title={moment(tableData.Due_Date).format(\"DD-MMM-yyyy\")}\n      >\n        {tableData.Due_Date == null\n          ? \"\"\n          : moment(tableData.Due_Date).format(\"DD-MMM-yyyy\")}\n      </div>\n    );\n  };\n\n  useEffect(() => {}, [item]);\n\n  useEffect(() => {\n    getIssueDetails();\n  }, []);\n\n  useEffect(() => {}, [editedData]);\n\n  const getIssueDetails = () => {\n    axios({\n      method: \"get\",\n      url: baseUrl + `/ProjectMS/issues/getDetails`,\n    })\n      .then(function (response) {\n        var response = response.data;\n        setProjectIssueDetails(response);\n      })\n      .catch(function (response) {});\n  };\n  useEffect(() => {}, [projectIssueDetails]);\n  useEffect(() => {\n    getCriticality();\n    getIssueSource();\n    getStatus();\n    getTableData();\n    getProjectOverviewData();\n  }, []);\n\n  const getData = () => {\n    axios({\n      method: \"get\",\n      url: baseUrl + `/ProjectMS/Issues/getAssignedData`,\n    }).then(function (response) {\n      var res = response.data;\n      setIssueDetails(res);\n    });\n  };\n  useEffect(() => {}, [issueDetails]);\n\n  useEffect(() => {\n    getData();\n  }, []);\n\n  const getData1 = () => {\n    axios({\n      method: \"get\",\n      url: baseUrl + `/ProjectMS/Issues/getAssignedData1`,\n    }).then(function (response) {\n      var res = response.data;\n      setIssueDetails1(res);\n    });\n  };\n  useEffect(() => {\n    getData1();\n  }, []);\n\n  const getTableData = () => {\n    setLoader(false);\n\n    axios({\n      method: \"post\",\n      url: baseUrl + `/ProjectMS/Issues/getIssuesTableData`,\n      data: formData,\n    })\n      .then((res) => {\n        const GetData = res.data;\n        for (let i = 0; i < GetData.length; i++) {\n          GetData[i][\"SNo\"] = i + 1;\n        }\n        let dataHeaders = [\n          {\n            SNo: \"S.No\",\n            Issue_Name: \"Issue Name\",\n            Criticality: \"Criticality\",\n            Status: \"Status\",\n            Due_Date: \"Due Date\",\n            Issue_Source: \"Issue Source\",\n            Assigned_To: \"Assigned To\",\n            RCA_Done: \"RCA Done\",\n            Created_By: \"Created By\",\n            Comments: \"Comments\",\n            Action: \"Action\",\n          },\n        ];\n        let tableData = [\"Action\"];\n        setLinkColumns(tableData);\n        setTableData(dataHeaders.concat(GetData));\n        setSearchApi(res.data);\n        setEdit(res.data);\n        setLoader(false);\n        setVisible(!visible);\n        visible\n          ? setCheveronIcon(FaChevronCircleUp)\n          : setCheveronIcon(FaChevronCircleDown);\n      })\n      .then((error) => {});\n  };\n\n  const getCriticality = () => {\n    axios({\n      method: \"get\",\n      url: baseUrl + `/ProjectMS/Issues/getCriticality`,\n    }).then((res) => {\n      var criticality = res.data;\n      setCriticality(criticality);\n    });\n  };\n  const getIssueSource = () => {\n    axios({\n      method: \"get\",\n      url: baseUrl + `/ProjectMS/Issues/getIssueSource`,\n    }).then((res) => {\n      var issueSource = res.data;\n      setIssueSource(issueSource);\n    });\n  };\n  const getStatus = () => {\n    axios({\n      method: \"get\",\n      url: baseUrl + `/ProjectMS/Issues/getStatus`,\n    }).then((res) => {\n      var status = res.data;\n      setStatus(status);\n    });\n  };\n  const handleChange = (e) => {\n    const { id, value } = e.target;\n    setFormData((prev) => ({ ...prev, [id]: value == \"null\" ? null : value }));\n  };\n  const handleClick = () => {\n    getTableData();\n  };\n  const LinkTemplate = (tableData) => {\n    let rou = linkColumns[0];\n    // console.log(permissions, \"permissions\");\n\n    return (\n      // <div align=\"center\">\n      //     <>\n      //         {<AiFillEdit color=\"orange\" cursor=\"pointer\" type=\"edit\" size=\"1.2em\" onClick={() => { setEditedData(tableData); setEditId(tableData.id); setOpenPopup(true); setType(\"edit\") }} align=\"center\" />}   &nbsp;\n      //         {loggedUserName == tableData.Created_By && tableData.status_id == 426 ? <AiFillDelete color=\"orange\" style={{ backgroundColor: \"orange !important\" }} cursor=\"pointer\" type=\"delete\" onClick={() => { issueDeleteHandler(tableData.id) }} align=\"center\" /> :\n      //             <AiFillDelete color=\"orange\" style={{ cursor: \"no-drop\", opacity: \"0.35\" }} title={\"Delete\"} className='pointerCursor disableField ' disabled={true} />}\n      //     </>\n      // </div>\n\n      <div align=\"center\">\n        {grp4Items[5]?.is_write == true ? (\n          <>\n            <AiFillEdit\n              color=\"orange\"\n              type=\"edit\"\n              size=\"1.2em\"\n              align=\"center\"\n              onClick={() => {\n                setEditedData(tableData);\n                setEditId(tableData.id);\n                setOpenPopup(true);\n                setType(\"edit\");\n              }}\n            />\n            &nbsp;\n            <AiFillDelete\n              color=\"orange\"\n              title={\"Delete\"}\n              onClick={() => {\n                issueDeleteHandler(tableData.id);\n              }}\n            />\n          </>\n        ) : (\n          <>\n            <AiFillEdit\n              color=\"orange\"\n              type=\"edit\"\n              size=\"1.2em\"\n              align=\"center\"\n              style={{ cursor: \"not-allowed\" }}\n            />\n            &nbsp;\n            <AiFillDelete\n              color=\"orange\"\n              title={\"Delete\"}\n              className=\"pointerCursor disableField\"\n              disabled={true}\n              style={{ cursor: \"not-allowed\", opacity: \"0.35\" }}\n            />\n          </>\n        )}\n      </div>\n    );\n  };\n\n  const dynamicColumns = Object.keys(headerData)?.map((col, i) => {\n    return (\n      <Column\n        sortable\n        key={col}\n        body={\n          col == \"SNo\"\n            ? SnoAlign\n            : (col == \"RCA_Done\" && RCADone) ||\n              (col == \"Criticality\" && Criticality) ||\n              (col == \"Status\" && Status) ||\n              (col == \"Criticality\" && Criticality) ||\n              (col == \"Issue_Source\" && IssueSource) ||\n              (col == \"Created_By\" && CreatedBy) ||\n              (col == \"Comments\" && Comments) ||\n              (col == \"Assigned_To\" && AssignedTo) ||\n              // col == \"Due_Date\" && Duedate ||\n              (col == \"Issue_Name\" && IssueName) ||\n              (col == \"Due_Date\" && DueDate) ||\n              (col == \"Action\" && LinkTemplate)\n        }\n        field={col}\n        header={headerData[col]}\n      />\n    );\n  });\n\n  useEffect(() => {\n    tableData[0] && setHeaderData(JSON.parse(JSON.stringify(tableData[0])));\n  }, [tableData]);\n  //-------Projects Names---------------------\n\n  const getProjectOverviewData = () => {\n    axios({\n      method: \"get\",\n      url:\n        baseUrl +\n        `/ProjectMS/Audit/projectOverviewDetails?projectId=${projectId}`,\n    })\n      .then(function (response) {\n        let resp = response.data;\n        setProjectData(resp);\n        //    setPrjName(resp)\n      })\n      .catch(function (response) {});\n  };\n  const deleteIssue = () => {\n    axios({\n      method: \"delete\",\n      url: baseUrl + `/ProjectMS/Issues/deleteIssueDetails?id=${uid}`,\n      data: uid,\n    }).then((error) => {\n      setUid(0);\n      getTableData();\n      setDeletePopup(false);\n      setDeleteMessage(true);\n      setTimeout(() => {\n        setDeleteMessage(false);\n      }, 3000);\n    });\n  };\n  const issueDeleteHandler = (id) => {\n    setDeletePopup(true);\n    setUid(id);\n  };\n  const [exportData, setExportData] = useState([]);\n  useEffect(() => {\n    let imp = [\"XLS\"];\n    setExportData(imp);\n  }, []);\n\n  const handleClear = () => {\n    setFormData((prev) => ({ ...prev, createdby: null }));\n  };\n  function DeletePopup(props) {\n    const { deleteIssue, deletePopup, setDeletePopup } = props;\n    return (\n      <div>\n        <CModal\n          visible={deletePopup}\n          size=\"xs\"\n          className=\"ui-dialog\"\n          onClose={() => setDeletePopup(false)}\n        >\n          <CModalHeader className=\"\">\n            <CModalTitle>\n              <span className=\"\">Delete Project Issue</span>\n            </CModalTitle>\n          </CModalHeader>\n          <CModalBody>\n            <h6>Are you sure you want to delete Issue ?</h6>\n            <div className=\"btn-container center my-2\">\n              <button\n                type=\"delete\"\n                className=\"btn btn-primary\"\n                onClick={() => {\n                  deleteIssue();\n                }}\n              >\n                <AiFillDelete /> Delete{\" \"}\n              </button>{\" \"}\n              &nbsp; &nbsp;\n              <button\n                type=\"button\"\n                className=\"btn btn-secondary\"\n                onClick={() => {\n                  setDeletePopup(false);\n                }}\n              >\n                {\" \"}\n                <ImCross /> Cancel{\" \"}\n              </button>\n            </div>\n          </CModalBody>\n        </CModal>\n      </div>\n    );\n  }\n  return (\n    <div>\n      {deleteMessage ? (\n        <div className=\"statusMsg success\">\n          <BiCheck />\n          {\"Issue Deleted Successfully\"}\n        </div>\n      ) : (\n        \"\"\n      )}\n      {addmsg ? (\n        <div className=\"statusMsg success\">\n          <BiCheck />\n          {\"Issue added Successfully\"}\n        </div>\n      ) : (\n        \"\"\n      )}\n      {editmsg ? (\n        <div className=\"statusMsg success\">\n          <BiCheck />\n          {\"Issue edited Successfully\"}\n        </div>\n      ) : (\n        \"\"\n      )}\n      <div>\n        <div className=\"col-md-12\">\n          <div className=\"pageTitle\">\n            {projectData.map((list) => (\n              <div className=\"childOne\">\n                <h2>{list.projectName}</h2>\n              </div>\n            ))}\n            <div className=\"childTwo\">\n              <h2>Issues</h2>\n            </div>\n            <div className=\"childThree\"></div>\n          </div>\n        </div>\n        <ScreenBreadcrumbs\n          routes={routes}\n          currentScreenName={currentScreenName}\n        />\n        <div className=\"col-md-12 customCard\">\n          <div className=\"col-md-12 collapseHeader\">\n            <h2>Search Filters</h2>\n            <div\n              onClick={() => {\n                setVisible(!visible);\n                visible\n                  ? setCheveronIcon(FaChevronCircleUp)\n                  : setCheveronIcon(FaChevronCircleDown);\n              }}\n            >\n              <span>{cheveronIcon}</span>\n            </div>\n          </div>\n          <CCollapse visible={!visible}>\n            <div className=\"group-content row\">\n              <div className=\" col-md-3 mb-2\">\n                <div className=\" form-group row\" id=\"criticality\">\n                  <label className=\"col-5\">Criticality </label>\n                  <label className=\"col-1 p-0\">:</label>\n                  <label className=\"col-6\">\n                    <select\n                      className=\"col-md-12 p0\"\n                      id=\"criticality\"\n                      onChange={(e) => handleChange(e)}\n                    >\n                      <option value=\"null\"> &lt;&lt;ALL&gt;&gt;</option>\n                      {criticality.map((Item) => (\n                        <option value={Item.id}> {Item.lkup_name}</option>\n                      ))}\n                    </select>\n                  </label>\n                </div>\n              </div>\n              <div className=\" col-md-3 mb-2\">\n                <div className=\"form-group row\" id=\"source\">\n                  <label className=\"col-5\">Issue Source</label>\n                  <label className=\"col-1 p-0\">:</label>\n                  <label className=\"col-6\">\n                    <select\n                      className=\"col-md-12 p0\"\n                      id=\"source\"\n                      onChange={(e) => handleChange(e)}\n                    >\n                      <option value=\"null\"> &lt;&lt;ALL&gt;&gt;</option>\n                      {issueSource.map((Item) => (\n                        <option value={Item.id}> {Item.lkup_name}</option>\n                      ))}\n                    </select>\n                  </label>\n                </div>\n              </div>\n              <div className=\" col-md-3 mb-2\">\n                <div className=\" form-group row\" id=\"status\">\n                  <label className=\"col-5\">Status </label>\n                  <label className=\"col-1 p-0\">:</label>\n                  <label className=\"col-6\">\n                    <select\n                      className=\"col-md-12 p0\"\n                      id=\"status\"\n                      onChange={(e) => handleChange(e)}\n                    >\n                      <option value=\"null\"> &lt;&lt;ALL&gt;&gt;</option>\n                      {status.map((Item) => (\n                        <option value={Item.id}> {Item.lkup_name}</option>\n                      ))}\n                    </select>\n                  </label>\n                </div>\n              </div>\n              <div className=\"col-md-3 mb-2\">\n                <div className=\"form-group row\" id=\"name\">\n                  <label className=\"col-5\">Issue Name</label>\n                  <label className=\"col-1 p-0\">:</label>\n                  <label className=\"col-6\">\n                    <input\n                      type=\"Text\"\n                      name=\"name\"\n                      id=\"name\"\n                      onChange={(e) => {\n                        const { id, value } = e.target;\n                        setFormData((prev) => ({\n                          ...prev,\n                          [\"name\"]: value == \"\" ? null : value,\n                        }));\n                      }}\n                    />\n                  </label>\n                </div>\n              </div>\n              <div className=\"col-md-3 mb-2\">\n                <div className=\"form-group row\" id=\"rca\">\n                  <label className=\"col-5\">RCA Done</label>\n                  <label className=\"col-1 p-0\">:</label>\n                  <label className=\"col-6\">\n                    <select\n                      className=\"col-md-12 p0\"\n                      id=\"rca\"\n                      onChange={(e) => handleChange(e)}\n                    >\n                      <option value=\"null\"> &lt;&lt;ALL&gt;&gt;</option>\n                      <option value=\"1\" id=\"1\">\n                        {\" \"}\n                        Yes{\" \"}\n                      </option>\n                      <option value=\"0\" id=\"0\">\n                        {\" \"}\n                        No{\" \"}\n                      </option>\n                    </select>\n                  </label>\n                </div>\n              </div>\n              <div className=\"col-md-3 mb-2\">\n                <div className=\"form-group row\" id=\"assignedto\">\n                  <label className=\"col-5\">Assigned To</label>\n                  <label className=\"col-1 p-0\">:</label>\n                  <div className=\"col-6 \">\n                    <div className=\"autoComplete-container\">\n                      <AutoComplete\n                        id=\"assignedto\"\n                        name=\"assignedto\"\n                        issueDetails={issueDetails}\n                        setFormData={setFormData}\n                        getData={getData}\n                        // onChange={(e) => handleChange(e)}\n                        onChange={(e) => {\n                          const { id, value } = e.target;\n                          setFormData((prev) => ({\n                            ...prev,\n                            [\"assignedto\"]: id == \"\" ? null : id,\n                          }));\n                        }}\n                      />\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div className=\"col-md-3 mb-2\">\n                <div className=\"form-group row\" id=\"createdby\">\n                  <label className=\"col-5\">Created By </label>\n                  <label className=\"col-1 p-0\">:</label>\n                  <div className=\"col-6\">\n                    <div className=\"autoComplete-container\">\n                      <ReactSearchAutocomplete\n                        items={issueDetails1}\n                        id=\"createdby\"\n                        name=\"createdby\"\n                        onSelect={(selectedItem) => {\n                          setFormData((prevProps) => ({\n                            ...prevProps,\n                            createdby: selectedItem.id,\n                          }));\n                        }}\n                        showIcon={false}\n                        onClear={handleClear}\n                      />\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div className=\"my-2 btn-container center\">\n                <button\n                  type=\"button\"\n                  className=\"btn btn-primary\"\n                  value={searching}\n                  onClick={() => handleClick()}\n                >\n                  <FaSearch /> Search{\" \"}\n                </button>\n              </div>\n            </div>\n            {loader ? <Loader handleAbort={handleAbort} /> : \"\"}\n          </CCollapse>\n        </div>\n        <div className=\"customCard\">\n          <div className=\"\">\n            <div className=\"col-md-12 no-padding\">\n              <ErrorLogTable\n                data={tableData}\n                rows={rows}\n                linkColumns={linkColumns}\n                linkColumnsRoutes={linkColumnsRoutes}\n                dynamicColumns={dynamicColumns}\n                headerData={headerData}\n                setHeaderData={setHeaderData}\n                exportData={exportData}\n                fileName=\"Project Issues\"\n              />\n              {/* <div className=\"col-md-12 col-sm-12 col-xs-12 my-2 btn-container center\"> */}\n              {/* <button type=\"button\" \n                                className=\"btn btn-primary\"\n                                 onClick={() => { setOpenPopup(true); setType(\"add\") }}\n                                  style={{ gap: \"3px\" }}> <MdOutlinePlaylistAdd size={'1.5em'} />Add\n                                   </button> */}\n              {/* </div> */}\n              {dataObject?.is_write === true ? (\n                <div className=\"col-md-12 col-sm-12 col-xs-12 my-2 btn-container center\">\n                  <button\n                    type=\"button\"\n                    className=\"btn btn-primary\"\n                    onClick={() => {\n                      setOpenPopup(true);\n                      setType(\"add\");\n                    }}\n                  >\n                    <FaPlus />\n                    Add\n                  </button>\n                </div>\n              ) : (\n                \"\"\n              )}\n            </div>\n          </div>\n        </div>\n        {openPopup ? (\n          <AddPopup\n            openPopup={openPopup}\n            setOpenPopup={setOpenPopup}\n            projectIssueDetails={projectIssueDetails}\n            type={type}\n            getTableData={getTableData}\n            editId={editId}\n            addmsg={addmsg}\n            setAddmsg={setAddmsg}\n            editmsg={editmsg}\n            setEditmsg={setEditmsg}\n            setEditedData={setEditedData}\n            editedData={editedData}\n            projectData={projectData}\n            projectId={projectId}\n          />\n        ) : (\n          \"\"\n        )}\n        {deletePopup ? (\n          <DeletePopup\n            deleteIssue={deleteIssue}\n            deletePopup={deletePopup}\n            setDeletePopup={setDeletePopup}\n          />\n        ) : (\n          \"\"\n        )}\n      </div>\n    </div>\n  );\n}\nexport default ProjectIssues;\n","import React from \"react\";\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { ReactSearchAutocomplete } from \"react-search-autocomplete\"\n\nfunction AutoComplete(props) {\n    const { assigneTo, state, reportedBy, handleAssigneToChange, setAssign, manager, setManager, handleManager } = props;\n    const [item, setItem] = useState([])\n    console.log(assigneTo)\n    useEffect(() => {\n    }, [item,assigneTo])\n    useEffect(() => { }, [assigneTo])\n    useEffect(() => { }, [reportedBy])\n    useEffect(() => { }, [manager])\n\n    return (\n        <>\n            <div >\n                {\n                    state == 'defect' ?\n                        <ReactSearchAutocomplete\n                            items={assigneTo}\n                            type=\"Text\"\n                            name=\"assigned_to\"\n                            id=\"assigned_to\"\n                            className=\"err\"\n                            assigneTo={assigneTo}\n                            handleAssigneToChange={handleAssigneToChange}\n                            fuseOptions={{ keys: [\"id\", \"ResName\"] }}\n                            resultStringKeyName=\"ResName\"\n                            onSelect={(e) => { setAssign((prevProps) => ({ ...prevProps, \"assigned_to\": e.id })); }}\n                            showIcon={false}\n                        /> :\n                        <ReactSearchAutocomplete\n                            items={manager}\n                            type=\"Text\"\n                            name=\"manager\"\n                            id=\"manager\"\n                            className=\"err\"\n                            fuseOptions={{ keys: [\"id\", \"ResName\"] }}\n                            resultStringKeyName=\"ResName\"\n                            manager={manager}\n                            handleManager={handleManager}\n                            onSelect={(e) => { setManager((prevProps) => ({ ...prevProps, \"manager\": e.id })); }}\n                            showIcon={false}\n                        />\n                }\n\n\n\n            </div>\n            <span >{item.name}</span>\n        </>\n    )\n}\n\nexport default AutoComplete;","import { Dialog, DialogContent, DialogTitle, Grid } from \"@mui/material\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { environment } from \"../../environments/environment\";\nimport axios from \"axios\";\nimport ReactQuill from \"react-quill\";\nimport AutoComplete from \"./ProjectDefectsAutoComplete\";\nimport { AiFillWarning, AiOutlinePaperClip } from \"react-icons/ai\";\nimport { MdOutlinePlaylistAdd, MdOutlineSettingsSuggest } from \"react-icons/md\";\nimport { AiFillFileAdd } from \"react-icons/ai\";\nimport { VscChromeClose } from \"react-icons/vsc\";\nimport \"./Defects.css\";\nimport { IoWarningOutline } from \"react-icons/io5\";\nimport { CModal, CModalBody, CModalHeader, CModalTitle } from \"@coreui/react\";\nimport { ReactSearchAutocomplete } from \"react-search-autocomplete\";\nimport GlobalValidation from \"../ValidationComponent/GlobalValidation\";\nimport { FaPlus } from \"react-icons/fa\";\n\nfunction ProjectDefectsPopUp(props) {\n  const loggedUserId = localStorage.getItem(\"resId\");\n  const loggedUserName = localStorage.getItem(\"resName\");\n  const [resourceid, setResourceId] = useState(0);\n  const baseUrl = environment.baseUrl;\n  const [value, setValue] = useState(\"\");\n  const {\n    openPopup,\n    setOpenPopup,\n    getTableData,\n    tableData,\n    type,\n    editedData,\n    setAddmsg,\n    setEditmsg,\n    projectId,\n    editId,\n    projectData,\n  } = props;\n  const [phases, setPhases] = useState([]);\n  const [severity, setSeverity] = useState([]);\n  const [priority, setPriority] = useState([]);\n  const [status, setStatus] = useState([]);\n  const [phaseInjected, setPhaseInjected] = useState([]);\n  const [assigneTo, setAssigneTo] = useState([]);\n  const [assign, setAssign] = useState({\n    project: \"\",\n    title: \"\",\n    defect_project_task_id: \"\",\n    defect_project_injected_task_id: \"\",\n    requirement: \"\",\n    severity_id: \"\",\n    priority_id: \"\",\n    status_id: \"\",\n    assigned_to: \"\",\n    description: \"\",\n    review_method_id: \"\",\n  });\n  const [reviewMethod, setReviewMethod] = useState([]);\n  const [projectIssueDetails, setProjectIssueDetails] = useState([]);\n  const [attachmentDoc, setAttachmentDoc] = useState(false);\n  const [validationMessage, setValidationMessage] = useState(false);\n\n  const [visible, setVisible] = useState(false);\n  const [issueDetails, setIssueDetails] = useState([]);\n  const ref = useRef([]);\n  const [item, setItem] = useState([]);\n  const [uniqueMessage, setUniqueMessage] = useState(false);\n  const [initialformEditData, initialsetFormEditData] = useState(editedData);\n\n  useEffect(() => {\n    console.log(item);\n  }, [item]);\n\n  const [selectedFiles, setSelectedFiles] = useState([]);\n\n  const handleFileSelect = (event) => {\n    const files = event.target.files;\n    const selectedFilesArray = Array.from(files);\n    if (selectedFilesArray.length <= 10) {\n      setSelectedFiles(selectedFilesArray);\n    } else {\n      alert(\"You can only upload a maximum of 10 files.\");\n      event.target.value = null; // clear the selected files\n    }\n  };\n\n  const getResourceid = () => {\n    console.log(\"line no 106\");\n    axios({\n      method: \"get\",\n      url: baseUrl + `/ProjectMS/defectphases/getresourceid?id=${loggedUserId}`,\n    }).then(function (response) {\n      var res = response.data;\n      setResourceId(res);\n    });\n  };\n  useEffect(() => {\n    getResourceid();\n  }, [resourceid]);\n\n  const data = {\n    projectid: projectId,\n    title: \"\",\n    priority_id: \"\",\n    severity_id: \"\",\n    status_id: \"\",\n    assigned_to: \"\",\n    description: \"\",\n    defect_project_task_id: \"\",\n    defect_project_injected_task_id: \"\",\n    review_method_id: \"\",\n    reported_by: \"\",\n    description: \"\",\n    comment: \"\",\n  };\n  const [formData, setFormData] = useState(data);\n  const [formEditData, setFormEditData] = useState(editedData);\n\n  useEffect(() => {}, [formEditData]);\n  // axios call for phase //\n  const handlePhaseChange = () => {\n    axios({\n      method: \"get\",\n      url: baseUrl + `/ProjectMS/defectphases/getDefectPhases`,\n    }).then((res) => {\n      var phase = res.data;\n      setPhases(phase);\n    });\n  };\n\n  // axios call for severity //\n  const handleSeverityChange = () => {\n    axios({\n      method: \"get\",\n      url: baseUrl + `/ProjectMS/defectphases/getSeverity`,\n    }).then((res) => {\n      var severity = res.data;\n      setSeverity(severity);\n    });\n  };\n\n  // axios call for priority //\n  const handlePriorityChange = () => {\n    axios({\n      method: \"get\",\n      url: baseUrl + `/ProjectMS/defectphases/getPriority`,\n    }).then((res) => {\n      var priority = res.data;\n      setPriority(priority);\n      // setAssign((prevProps) => ({ ...prevProps, [\"Priority\"]: value }));\n    });\n  };\n\n  // axios call for status //\n  const handleStatusChange = () => {\n    axios({\n      method: \"get\",\n      url: baseUrl + `/ProjectMS/defectphases/getStatus`,\n    }).then((res) => {\n      var status = res.data;\n      setStatus(status);\n      // setAssign((prevProps) => ({ ...prevProps, [\"Status\"]: value }));\n    });\n  };\n\n  // axios call for phaseInjected //\n  const handlePhaseInjectedChange = () => {\n    axios({\n      method: \"get\",\n      url: baseUrl + `/ProjectMS/defectphases/getPhaseInjected`,\n    }).then((res) => {\n      var phaseInjected = res.data;\n      setPhaseInjected(phaseInjected);\n    });\n  };\n\n  // axios call for assignedTo //\n  const handleAssigneToChange = () => {\n    axios({\n      method: \"post\",\n      url:\n        baseUrl +\n        `/ProjectMS/defectphases/autocomplete?projectId=${projectId}&searchKey=&isAll=0`,\n    }).then((res) => {\n      var assigneTo = res.data;\n      setAssigneTo(assigneTo);\n      console.log(assigneTo);\n    });\n  };\n\n  // axios call for project //\n  const handleProjectChange = () => {\n    axios({\n      method: \"get\",\n      url: baseUrl + `/ProjectMS/defectphases/getProject`,\n    }).then((res) => {\n      var projectIssueDetails = res.data;\n      setProjectIssueDetails(projectIssueDetails);\n    });\n  };\n\n  // axios call for reviewMethod //\n  const handleReviewMethodChange = () => {\n    axios({\n      method: \"get\",\n      url: baseUrl + `/ProjectMS/defectphases/getReviewMethod`,\n    }).then((res) => {\n      var reviewMethod = res.data;\n      setReviewMethod(reviewMethod);\n    });\n  };\n\n  const handleOpen = () => {\n    setCreate(true);\n  };\n\n  const handleInputchange = () => {\n    setAttachmentDoc(true);\n  };\n  //-------------ASSIGEND TO---------------\n  const getData = () => {\n    console.log(\"line no 106\");\n    axios({\n      method: \"get\",\n      url: baseUrl + `/ProjectMS/Issues/getAssignedData`,\n    }).then(function (response) {\n      var res = response.data;\n      setIssueDetails(res);\n      console.log(\"assigned data\");\n      console.log(res);\n    });\n  };\n  useEffect(() => {}, [issueDetails]);\n\n  useEffect(() => {\n    getData();\n  }, []);\n\n  const editorToolBar = {\n    toolbar: [\n      [\n        { header: [false, 1, 2, 3, 4, 5, 6] },\n        { color: [] },\n        \"bold\",\n        \"italic\",\n        \"underline\",\n        { list: \"ordered\", title: \"ordered\" },\n        { list: \"bullet\", title: \"Bullet\" },\n        { script: \"sub\" },\n        { script: \"super\" },\n        { indent: \"-1\" },\n        { indent: \"+1\" },\n        { align: null },\n        { align: \"center\" },\n        { align: \"right\" },\n        \"strike\",\n        \"link\",\n        \"image\",\n        \"code-block\",\n        \"clean\",\n      ],\n    ],\n  };\n\n  const handleBlur = () => {\n    // validate the content\n    if (!value || value.trim().length === 0) {\n      console.log(\"The content is empty or contains only whitespace.\");\n    }\n  };\n  // axios call for Creating New Record //\n  const handleAddData = () => {\n    console.log(formData);\n    console.log(editedData);\n    console.log(tableData);\n    let adddata = document.getElementsByClassName(\"error\");\n\n    let someDataa = tableData.some((d) => d.title === formData.title);\n    console.log(someDataa);\n    // if (formData == undefined) {\n    if (someDataa) {\n      console.log(\"1234567\");\n      let ele = document.getElementsByClassName(\"unique\");\n      console.log(ele.length);\n      for (let index = 0; index < ele.length; index++) {\n        ele[index].classList.add(\"error-block\");\n      }\n      console.log(ele);\n\n      setUniqueMessage(true);\n      setValidationMessage(false);\n      // setValidationMessage(false);\n      setTimeout(() => {\n        // setValidationMessage(false);\n      }, 3000);\n      return;\n    }\n    if (someDataa) return;\n    for (let i = 0; i < adddata.length; i++) {\n      if (\n        adddata[i].value == \"\" ||\n        adddata[i].value == \"null\" ||\n        adddata[i].value == \"All\" ||\n        adddata[i].value == undefined\n      ) {\n        adddata[i].classList.add(\"error-block\");\n        // textdata[0].classList.add(\"ErrMS\")\n        setValidationMessage(true);\n        setUniqueMessage(false);\n      } else {\n        adddata[i].classList.remove(\"error-block\");\n\n        setValidationMessage(false);\n      }\n    }\n\n    // if (formData.description == \"\" || undefined || null) {\n    //     // setDespValidation(true);\n    //     setValidationMessage(true);\n\n    // } else {\n    //     setDespValidation(\"\");\n    // }\n\n    let name = formData.title;\n    let Phase = formData.defect_project_task_id;\n    let Review = formData.review_method_id;\n    let description = formData.description;\n    let status = formData.status_id;\n\n    if (\n      Object.values({ name, Phase, Review, description, status }).includes(\"\")\n    ) {\n      setValidationMessage(true);\n      adddata[i].classList.remove(\"error-block\");\n      return;\n    }\n\n    let valid = GlobalValidation(ref);\n\n    console.log(valid);\n\n    if (valid) {\n      setValidationMessage(true);\n\n      return;\n    }\n    setValidationMessage(false);\n    axios({\n      method: \"post\",\n      url: baseUrl + `/ProjectMS/defectphases/postDefectsData`,\n      data: formData,\n    }).then((error) => {\n      setValidationMessage(false);\n      console.log(\"success\", error);\n      setOpenPopup(false);\n      getTableData();\n      setAddmsg(true);\n      setTimeout(() => {\n        setAddmsg(false);\n      }, 3000);\n    });\n  };\n  const [flag, setFlag] = useState(true);\n\n  const handleEditData = () => {\n    console.log(editedData);\n    let adddata = document.getElementsByClassName(\"error\");\n\n    let someDataa = tableData.some((d) => d.title === formEditData.title);\n    console.log(someDataa);\n    // if (formData == undefined) {\n\n    if (\n      someDataa &&\n      flag == false &&\n      formEditData.title != initialformEditData.title\n    ) {\n      console.log(\"1234567\");\n      let ele = document.getElementsByClassName(\"unique\");\n      console.log(ele.length);\n      for (let index = 0; index < ele.length; index++) {\n        ele[index].classList.add(\"error-block\");\n      }\n      console.log(ele);\n\n      setUniqueMessage(true);\n      setValidationMessage(false);\n      // setValidationMessage(false);\n      setTimeout(() => {\n        // setValidationMessage(false);\n      }, 3000);\n      return;\n    }\n    for (let i = 0; i < adddata.length; i++) {\n      if (\n        adddata[i].value == \"\" ||\n        adddata[i].value == \"null\" ||\n        adddata[i].value == \"All\" ||\n        adddata[i].value == undefined\n      ) {\n        adddata[i].classList.add(\"error-block\");\n\n        setValidationMessage(true);\n        setUniqueMessage(false);\n      } else {\n        adddata[i].classList.remove(\"error-block\");\n\n        setValidationMessage(false);\n      }\n    }\n    let name = formEditData.title;\n    let Phase = formEditData.defect_project_task_id;\n    let Review = formEditData.review_method_id;\n    let descriptiontext = formEditData.descriptionClear;\n    let description1 = formEditData.description;\n\n    if (Object.values({ name, Phase, Review, description1 }).includes(\"\")) {\n      return;\n    }\n\n    console.log(formEditData);\n    console.log(formEditData.projectId);\n\n    setValidationMessage(false);\n    // if (Object.values({ description }).includes(\"\")) {\n\n    //     return;\n    // }\n    axios({\n      method: \"post\",\n      url: baseUrl + `/ProjectMS/defectphases/postDefectsData`,\n      data: {\n        id: formEditData.id,\n        projectid: projectId,\n        title: formEditData.title,\n        defect_project_task_id: formEditData.defect_project_task_id,\n        defect_project_injected_task_id:\n          formEditData.defect_project_injected_task_id,\n        priority_id: formEditData.priority_id,\n        severity_id: formEditData.severity_id,\n        status_id: formEditData.status_id,\n        assigned_to:\n          formEditData.assigned_to === \"\"\n            ? editedData?.assignedTo\n            : formEditData.assigned_to,\n        // ,=== \"\"?  :  formEditData.assigned_to,\n        reported_by: resourceid,\n        description:\n          formEditData.description == \"\" ? value : formEditData.description,\n        defect_age: formEditData.defect_age,\n        review_method_id: formEditData.review_method_id,\n      },\n    }).then((error) => {\n      setValidationMessage(false);\n      setOpenPopup(false);\n      console.log(\"success\", error);\n      setOpenPopup(false);\n      getTableData();\n      setEditmsg(true);\n      setTimeout(() => {\n        setEditmsg(false);\n      }, 3000);\n      // getTableData();\n    });\n  };\n  const handleChange = (e) => {\n    const { id, value } = e.target;\n    setFormData((prev) => ({ ...prev, [id]: value }));\n    setFormData((prev) => ({ ...prev, [\"reported_by\"]: resourceid }));\n    setFormEditData((prev) => ({ ...prev, [\"reported_by\"]: resourceid }));\n  };\n  useEffect(() => {}, [assigneTo]);\n  useEffect(() => {\n    handleAssigneToChange();\n  }, []);\n\n  useEffect(() => {\n    handlePhaseChange();\n    handleSeverityChange();\n    handlePriorityChange();\n    handleStatusChange();\n    handlePhaseInjectedChange();\n    handleProjectChange();\n    handleReviewMethodChange();\n  }, []);\n\n  console.log(editedData.assignedTo);\n  console.log(formEditData);\n  const formatResult = (item) => {\n    return (\n      <div className=\"result-wrapper\">\n        <span className=\"result-span\">\n          {item.ResName} (<span>{item.employeeNumber}</span>)\n        </span>\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"col-md-12\">\n      <CModal\n        visible={openPopup}\n        size=\"xl\"\n        onClose={() => setOpenPopup(false)}\n        backdrop={\"static\"}\n      >\n        <CModalHeader>\n          <CModalTitle>\n            {type == \"add\" ? (\n              <span>Create Defect</span>\n            ) : (\n              <span>Edit Defect</span>\n            )}\n          </CModalTitle>\n        </CModalHeader>\n        <CModalBody>\n          <div className=\"group-content row\">\n            <div>\n              {uniqueMessage ? (\n                <div className=\"statusMsg error\">\n                  <AiFillWarning size=\"1.4em\" />\n                  <span>Please select unique name</span>\n                </div>\n              ) : (\n                \"\"\n              )}\n              {validationMessage ? (\n                <div className=\"statusMsg error\">\n                  <span>\n                    {\" \"}\n                    <AiFillWarning /> Please select the valid values for\n                    highlighted fields\n                  </span>\n                </div>\n              ) : (\n                \"\"\n              )}\n            </div>\n            {projectData.map((list) => (\n              <div className=\" col-md-2 mb-2\">\n                <div className=\"form-group row \" id=\"project\">\n                  <label htmlFor=\"col-5 \">Project</label>\n\n                  <label className=\" \">\n                    <input\n                      type=\"Text\"\n                      className=\"disableField\"\n                      id={projectId}\n                      disabled={true}\n                      value={list.projectName}\n                      onChange={(e) => handleChange(e)}\n                    />\n                  </label>\n                </div>\n              </div>\n            ))}\n            <div className=\"form-group col-md-2 \" id=\"title\">\n              <label htmlFor=\"form-label\">\n                {\" \"}\n                Defect Title&nbsp;<span className=\"required\"> *</span>\n              </label>\n              {type == \"add\" ? (\n                <input\n                  className=\"error unique \"\n                  type=\"Text\"\n                  name=\"title\"\n                  id=\"title\"\n                  placeholder=\"Title\"\n                  onChange={(e) => handleChange(e)}\n                />\n              ) : (\n                <>\n                  {editedData.status_id != 345 ? (\n                    <input\n                      className=\"error \"\n                      type=\"Text\"\n                      defaultValue={editedData?.title}\n                      onChange={(e) => {\n                        setFormEditData((prev) => ({\n                          ...prev,\n                          [\"title\"]: e.target.value,\n                        })),\n                          setFlag(false);\n                      }}\n                    />\n                  ) : (\n                    <input\n                      className=\"error \"\n                      disabled={true}\n                      type=\"Text\"\n                      defaultValue={editedData?.title}\n                      onChange={(e) =>\n                        setFormEditData((prev) => ({\n                          ...prev,\n                          [\"title\"]: e.target.value,\n                        }))\n                      }\n                    />\n                  )}\n                </>\n              )}\n            </div>\n            <div className=\"form-group col-md-2 \" id=\"defect_project_task_id\">\n              <label htmlFor=\"form-label\">\n                Phase&nbsp;<span className=\"error-text\"> *</span>\n              </label>\n              <label htmlFor=\"col-md-12 \">\n                {type == \"add\" ? (\n                  <div className=\"col-md-12\">\n                    <select\n                      className=\"error enteredDetails cancel text\"\n                      name=\"defect_project_task_id\"\n                      id=\"defect_project_task_id\"\n                      onChange={(e) => handleChange(e)}\n                      ref={(ele) => {\n                        ref.current[0] = ele;\n                      }}\n                    >\n                      <option value=\"All\">\n                        {\" \"}\n                        &lt;&lt;Please Select&gt;&gt;\n                      </option>\n                      {phases.map((Item) => (\n                        <option value={Item.id}> {Item.task_name}</option>\n                      ))}\n                    </select>{\" \"}\n                  </div>\n                ) : (\n                  <>\n                    {editedData.status_id != 345 ? (\n                      <select\n                        className=\"error\"\n                        id=\"defect_project_task_id\"\n                        name=\"defect_project_task_id\"\n                        onChange={(e) =>\n                          setFormEditData((prev) => ({\n                            ...prev,\n                            [\"defect_project_task_id\"]: e.target.value,\n                          }))\n                        }\n                      >\n                        <option value=\"All\">\n                          {\" \"}\n                          &lt;&lt;Please Select&gt;&gt;\n                        </option>\n                        {phases.map((Item) => (\n                          <option\n                            value={Item.id}\n                            selected={\n                              Item.id == editedData?.defect_project_task_id\n                                ? true\n                                : false\n                            }\n                          >\n                            {\" \"}\n                            {Item.task_name}\n                          </option>\n                        ))}\n                      </select>\n                    ) : (\n                      <select\n                        className=\"error\"\n                        disabled={true}\n                        id=\"defect_project_task_id\"\n                        name=\"defect_project_task_id\"\n                        onChange={(e) =>\n                          setFormEditData((prev) => ({\n                            ...prev,\n                            [\"defect_project_task_id\"]: e.target.value,\n                          }))\n                        }\n                      >\n                        <option value=\"All\">\n                          {\" \"}\n                          &lt;&lt;Please Select&gt;&gt;\n                        </option>\n                        {phases.map((Item) => (\n                          <option\n                            value={Item.id}\n                            selected={\n                              Item.id == editedData?.defect_project_task_id\n                                ? true\n                                : false\n                            }\n                          >\n                            {\" \"}\n                            {Item.task_name}\n                          </option>\n                        ))}\n                      </select>\n                    )}\n                  </>\n                )}\n              </label>\n            </div>\n            <div className=\"form-group col-md-2\">\n              <label htmlFor=\"form-label\">Phase Injected</label>\n              <label htmlFor=\"form-label\">\n                {type == \"add\" ? (\n                  <div className=\"col-md-12\">\n                    <select\n                      className=\"col-md-12\"\n                      id=\"defect_project_injected_task_id\"\n                      onChange={(e) => handleChange(e)}\n                    >\n                      <option value=\"All\">\n                        {\" \"}\n                        &lt;&lt;Please Select&gt;&gt;\n                      </option>\n                      {phaseInjected.map((Item) => (\n                        <option value={Item.id}> {Item.task_name}</option>\n                      ))}\n                    </select>\n                  </div>\n                ) : (\n                  <>\n                    {editedData.status_id != 345 ? (\n                      <select\n                        className=\"col-md-12\"\n                        name=\"defect_project_injected_task_id\"\n                        id=\"defect_project_injected_task_id\"\n                        onChange={(e) =>\n                          setFormEditData((prev) => ({\n                            ...prev,\n                            [\"defect_project_injected_task_id\"]: e.target.value,\n                          }))\n                        }\n                      >\n                        <option value=\"All\">\n                          {\" \"}\n                          &lt;&lt;Please Select&gt;&gt;\n                        </option>\n                        {phaseInjected.map((Item) => (\n                          <option\n                            value={Item.id}\n                            selected={\n                              Item.id ==\n                              editedData?.defect_project_injected_task_id\n                                ? true\n                                : false\n                            }\n                          >\n                            {\" \"}\n                            {Item.task_name}\n                          </option>\n                        ))}\n                      </select>\n                    ) : (\n                      <select\n                        className=\"col-md-12\"\n                        disabled={true}\n                        name=\"defect_project_injected_task_id\"\n                        id=\"defect_project_injected_task_id\"\n                        onChange={(e) =>\n                          setFormEditData((prev) => ({\n                            ...prev,\n                            [\"defect_project_injected_task_id\"]: e.target.value,\n                          }))\n                        }\n                      >\n                        <option value=\"All\">\n                          {\" \"}\n                          &lt;&lt;Please Select&gt;&gt;\n                        </option>\n                        {phaseInjected.map((Item) => (\n                          <option\n                            value={Item.id}\n                            selected={\n                              Item.id ==\n                              editedData?.defect_project_injected_task_id\n                                ? true\n                                : false\n                            }\n                          >\n                            {\" \"}\n                            {Item.task_name}\n                          </option>\n                        ))}\n                      </select>\n                    )}\n                  </>\n                )}\n              </label>\n            </div>\n            <div className=\"form-group col-md-2\" id=\"review_method_id\">\n              <label htmlFor=\"form-label\">\n                Review/Testing Method&nbsp;<span className=\"required\"> *</span>\n              </label>\n              <label htmlFor=\"form-label\">\n                {type == \"add\" ? (\n                  <div className=\"col-md-12\">\n                    <select\n                      className=\" error col-md-12\"\n                      name=\"review_method_id\"\n                      id=\"review_method_id\"\n                      onChange={(e) => handleChange(e)}\n                    >\n                      <option value=\"All\">\n                        {\" \"}\n                        &lt;&lt;Please Select&gt;&gt;\n                      </option>\n                      {reviewMethod.map((Item) => (\n                        <option value={Item.id}> {Item.lkup_name}</option>\n                      ))}\n                    </select>{\" \"}\n                  </div>\n                ) : (\n                  <>\n                    {editedData.status_id != 345 ? (\n                      <select\n                        className=\" error col-md-12\"\n                        name=\"review_method_id\"\n                        id=\"review_method_id\"\n                        defaultValue={editedData?.review_method_id}\n                        onChange={(e) =>\n                          setFormEditData((prev) => ({\n                            ...prev,\n                            [\"review_method_id\"]: e.target.value,\n                          }))\n                        }\n                      >\n                        <option value=\"All\">\n                          {\" \"}\n                          &lt;&lt;Please Select&gt;&gt;\n                        </option>\n                        {reviewMethod.map((Item) => (\n                          <option\n                            value={Item.id}\n                            selected={\n                              Item.id == editedData?.review_method_id\n                                ? true\n                                : false\n                            }\n                          >\n                            {\" \"}\n                            {Item.lkup_name}\n                          </option>\n                        ))}\n                      </select>\n                    ) : (\n                      <select\n                        className=\"  error col-md-12\"\n                        disabled={true}\n                        name=\"review_method_id\"\n                        id=\"review_method_id\"\n                        defaultValue={editedData?.review_method_id}\n                        onChange={(e) =>\n                          setFormEditData((prev) => ({\n                            ...prev,\n                            [\"review_method_id\"]: e.target.value,\n                          }))\n                        }\n                      >\n                        <option value=\"All\">\n                          {\" \"}\n                          &lt;&lt;Please Select&gt;&gt;\n                        </option>\n                        {reviewMethod.map((Item) => (\n                          <option\n                            value={Item.id}\n                            selected={\n                              Item.id == editedData?.review_method_id\n                                ? true\n                                : false\n                            }\n                          >\n                            {\" \"}\n                            {Item.lkup_name}\n                          </option>\n                        ))}\n                      </select>\n                    )}\n                  </>\n                )}\n              </label>\n            </div>\n            <div className=\"form-group col-md-2\" id=\"severity_id\">\n              <label htmlFor=\"form-label\">Severity </label>\n              <label htmlFor=\"form-label\">\n                {type == \"add\" ? (\n                  <div className=\"col-md-12\">\n                    <select\n                      className=\"col-md-12\"\n                      name=\"severity_id\"\n                      id=\"severity_id\"\n                      onChange={(e) => handleChange(e)}\n                    >\n                      <option value=\"All\">\n                        {\" \"}\n                        &lt;&lt;Please Select&gt;&gt;\n                      </option>\n                      {severity.map((Item) => (\n                        <option value={Item.id}> {Item.lkup_name}</option>\n                      ))}\n                    </select>{\" \"}\n                  </div>\n                ) : (\n                  <>\n                    {editedData.status_id != 345 ? (\n                      <select\n                        className=\"col-md-12\"\n                        name=\"severity_id\"\n                        id=\"severity_id\"\n                        onChange={(e) =>\n                          setFormEditData((prev) => ({\n                            ...prev,\n                            [\"severity_id\"]: e.target.value,\n                          }))\n                        }\n                      >\n                        <option value=\"All\">\n                          {\" \"}\n                          &lt;&lt;Please Select&gt;&gt;\n                        </option>\n                        {severity.map((Item) => (\n                          <option\n                            value={Item.id}\n                            selected={\n                              Item.id == editedData?.severity_id ? true : false\n                            }\n                          >\n                            {\" \"}\n                            {Item.lkup_name}\n                          </option>\n                        ))}\n                      </select>\n                    ) : (\n                      <select\n                        className=\"col-md-12\"\n                        disabled={true}\n                        name=\"severity_id\"\n                        id=\"severity_id\"\n                        onChange={(e) =>\n                          setFormEditData((prev) => ({\n                            ...prev,\n                            [\"severity_id\"]: e.target.value,\n                          }))\n                        }\n                      >\n                        <option value=\"All\">\n                          {\" \"}\n                          &lt;&lt;Please Select&gt;&gt;\n                        </option>\n                        {severity.map((Item) => (\n                          <option\n                            value={Item.id}\n                            selected={\n                              Item.id == editedData?.severity_id ? true : false\n                            }\n                          >\n                            {\" \"}\n                            {Item.lkup_name}\n                          </option>\n                        ))}\n                      </select>\n                    )}\n                  </>\n                )}\n              </label>\n            </div>\n            <div className=\"form-group col-md-2\" id=\"priority_id\">\n              <label htmlFor=\"form-label\">Priority </label>\n              <label htmlFor=\"form-label\">\n                {type == \"add\" ? (\n                  <div className=\"col-md-12\">\n                    <select\n                      className=\"col-md-12\"\n                      name=\"priority_id\"\n                      id=\"priority_id\"\n                      onChange={(e) => handleChange(e)}\n                    >\n                      <option value=\"All\">\n                        {\" \"}\n                        &lt;&lt;Please Select&gt;&gt;\n                      </option>\n                      {priority.map((Item) => (\n                        <option value={Item.id}> {Item.lkup_name}</option>\n                      ))}\n                    </select>\n                  </div>\n                ) : (\n                  <>\n                    {editedData.status_id != 345 ? (\n                      <select\n                        className=\"col-md-12\"\n                        id=\"priority_id\"\n                        name=\"priority_id\"\n                        onChange={(e) =>\n                          setFormEditData((prev) => ({\n                            ...prev,\n                            [\"priority_id\"]: e.target.value,\n                          }))\n                        }\n                      >\n                        <option value=\"All\">\n                          {\" \"}\n                          &lt;&lt;Please Select&gt;&gt;\n                        </option>\n                        {priority.map((Item) => (\n                          <option\n                            value={Item.id}\n                            selected={\n                              Item.id == editedData?.priority_id ? true : false\n                            }\n                          >\n                            {\" \"}\n                            {Item.lkup_name}\n                          </option>\n                        ))}\n                      </select>\n                    ) : (\n                      <select\n                        className=\"col-md-12\"\n                        disabled={true}\n                        id=\"priority_id\"\n                        name=\"priority_id\"\n                        onChange={(e) =>\n                          setFormEditData((prev) => ({\n                            ...prev,\n                            [\"priority_id\"]: e.target.value,\n                          }))\n                        }\n                      >\n                        <option value=\"All\">\n                          {\" \"}\n                          &lt;&lt;Please Select&gt;&gt;\n                        </option>\n                        {priority.map((Item) => (\n                          <option\n                            value={Item.id}\n                            selected={\n                              Item.id == editedData?.priority_id ? true : false\n                            }\n                          >\n                            {\" \"}\n                            {Item.lkup_name}\n                          </option>\n                        ))}\n                      </select>\n                    )}\n                  </>\n                )}\n              </label>\n            </div>\n            <div className=\"form-group col-md-2\" id=\"status_id\">\n              <label htmlFor=\"form-label\">\n                Status&nbsp;<span className=\"required\"> *</span>\n              </label>\n              <label htmlFor=\"form-label\" id=\"status_id\">\n                {type == \"add\" ? (\n                  <div className=\"col-md-12\">\n                    <select\n                      className=\" error col-md-12 \"\n                      name=\"status_id\"\n                      id=\"status_id\"\n                      onChange={(e) => handleChange(e)}\n                    >\n                      <option value=\"All\">\n                        {\" \"}\n                        &lt;&lt;Please Select&gt;&gt;\n                      </option>\n                      {status.map((Item) => (\n                        <option value={Item.id}> {Item.lkup_name}</option>\n                      ))}\n                    </select>{\" \"}\n                  </div>\n                ) : (\n                  <>\n                    {editedData.status_id != 345 ? (\n                      <select\n                        className=\"error col-md-12\"\n                        onChange={(e) =>\n                          setFormEditData((prev) => ({\n                            ...prev,\n                            [\"status_id\"]: e.target.value,\n                          }))\n                        }\n                      >\n                        {status.map((Item) => (\n                          <option\n                            value={Item.id}\n                            selected={\n                              Item.id == editedData?.status_id ? true : false\n                            }\n                          >\n                            {\" \"}\n                            {Item.lkup_name}\n                          </option>\n                        ))}\n                      </select>\n                    ) : (\n                      <select\n                        className=\"error col-md-12\"\n                        disabled={true}\n                        onChange={(e) =>\n                          setFormEditData((prev) => ({\n                            ...prev,\n                            [\"status_id\"]: e.target.value,\n                          }))\n                        }\n                      >\n                        {status.map((Item) => (\n                          <option\n                            value={Item.id}\n                            selected={\n                              Item.id == editedData?.status_id ? true : false\n                            }\n                          >\n                            {\" \"}\n                            {Item.lkup_name}\n                          </option>\n                        ))}\n                      </select>\n                    )}\n                  </>\n                )}\n              </label>\n            </div>\n            <div className=\"form-group col-md-2\" id=\"assigned_to\">\n              <label htmlFor=\"form-label\">Assigned To</label>\n              {type == \"add\" ? (\n                <>\n                  <div className=\"autoComplete-container\">\n                    <div>\n                      <ReactSearchAutocomplete\n                        items={assigneTo}\n                        type=\"Text\"\n                        name=\"assigned_to\"\n                        id=\"assigned_to\"\n                        className=\"AutoComplete\"\n                        assigneTo={assigneTo}\n                        handleAssigneToChange={handleAssigneToChange}\n                        fuseOptions={{\n                          keys: [\"id\", \"ResName\", \"employeeNumber\"],\n                        }}\n                        resultStringKeyName=\"ResName\"\n                        formatResult={formatResult}\n                        onSelect={(e) => {\n                          setFormData((prev) => ({\n                            ...prev,\n                            assigned_to: e.id,\n                          }));\n                        }}\n                        showIcon={false}\n                      />\n                    </div>\n                  </div>\n                  <span>{item.ResName}</span>{\" \"}\n                </>\n              ) : (\n                <>\n                  {editedData.status_id != 345 ? (\n                    <div className=\"autoComplete-container\">\n                      <ReactSearchAutocomplete\n                        items={assigneTo}\n                        type=\"Text\"\n                        name=\"assigned_to\"\n                        id=\"assigned_to\"\n                        className=\"wrapperauto\"\n                        assigneTo={assigneTo}\n                        handleAssigneToChange={handleAssigneToChange}\n                        fuseOptions={{\n                          keys: [\"id\", \"ResName\", \"employeeNumber\"],\n                        }}\n                        resultStringKeyName=\"ResName\"\n                        formatResult={formatResult}\n                        onSelect={(e) => {\n                          setFormEditData((prev) => ({\n                            ...prev,\n                            assigned_to: e.id,\n                          }));\n                          console.log(e.id);\n                        }}\n                        onChange={(e) => {\n                          setFormEditData((prev) => ({\n                            ...prev,\n                            assigned_to: e.id,\n                          }));\n                        }}\n                        showIcon={false}\n                        inputSearchString={\n                          editedData?.assignedTo == null\n                            ? \"\"\n                            : editedData?.assignedTo\n                        }\n                      />\n                    </div>\n                  ) : (\n                    // <span >{item.ResName}</span>\n                    <div className=\"autocomplete-wrapper\">\n                      <input\n                        items={assigneTo}\n                        type=\"Text\"\n                        name=\"assigned_to\"\n                        id=\"assigned_to\"\n                        defaultValue={\n                          editedData?.assignedTo == null\n                            ? \"\"\n                            : editedData?.assignedTo\n                        }\n                        className=\"wrapperauto\"\n                        assigneTo={assigneTo}\n                        disabled={true}\n                      />\n                    </div>\n                  )}\n                </>\n              )}\n            </div>\n            <div className=\"form-group col-md-12\">\n              <div className=\"Space\"></div>\n              <div className=\"col-md-3 mt-1\" id=\"description\">\n                <label htmlFor=\"form-label\">\n                  Defect Description&nbsp;\n                  <span class=\"error-text required\"> *</span>\n                </label>\n              </div>\n            </div>\n            <div\n              className=\"col-md-12 text error \"\n              ref={(ele) => {\n                ref.current[1] = ele;\n              }}\n            >\n              {type == \"add\" ? (\n                <div>\n                  <ReactQuill\n                    className=\"\"\n                    theme=\"snow\"\n                    id=\"description\"\n                    value={value}\n                    name=\"description\"\n                    onChange={(e) => {\n                      setValue(e);\n                      setFormData((prev) => ({\n                        ...prev,\n                        [\"description\"]: value,\n                      }));\n                    }}\n                    modules={editorToolBar}\n                    // onBlur={handleBlur}\n                  />\n                </div>\n              ) : (\n                <>\n                  {editedData.status_id != 345 ? (\n                    <div>\n                      <ReactQuill\n                        className=\"\"\n                        theme=\"snow\"\n                        // value={value}\n                        defaultValue={editedData?.description}\n                        name=\"description\"\n                        id=\"editor-container\"\n                        onChange={(e) => {\n                          setValue(e);\n                          setFormEditData((prev) => ({\n                            ...prev,\n                            [\"description\"]: e,\n                          }));\n                        }}\n                        modules={editorToolBar}\n                      />\n                    </div>\n                  ) : (\n                    <div style={{ cursor: \"no-drop\" }}>\n                      <ReactQuill\n                        className=\"\"\n                        theme=\"snow\"\n                        disabled={true}\n                        readOnly={true}\n                        defaultValue={editedData?.description}\n                        name=\"description\"\n                        id=\"editor-container\"\n                        onChange={(e) => {\n                          setValue(e);\n                          setFormEditData((prev) => ({\n                            ...prev,\n                            [\"description\"]: e,\n                          }));\n                        }}\n                        modules={editorToolBar}\n                      />\n                    </div>\n                  )}\n                </>\n              )}\n            </div>\n            <div className=\"col-md-12 col-sm-12 col-xs-12 no-padding\">\n              <div className=\"col-sm-12\">\n                <div className=\"uploadFiles customCard\">\n                  <h2>\n                    <AiOutlinePaperClip />\n                    Attachments\n                  </h2>\n                </div>\n              </div>\n\n              <div className=\"col-md-12 left\">\n                {editedData.status_id != 345 ? (\n                  <button\n                    type=\"button\"\n                    className=\"btn btn-primary\"\n                    title=\"Add\"\n                    onClick={() => setVisible(true)}\n                  >\n                    {\" \"}\n                    <FaPlus />\n                    Add{\" \"}\n                  </button>\n                ) : (\n                  <button\n                    type=\"button\"\n                    style={{ cursor: \"no-drop\" }}\n                    className=\"btn btn-primary\"\n                    title=\"Add\"\n                  >\n                    {\" \"}\n                    <FaPlus />\n                    Add{\" \"}\n                  </button>\n                )}\n\n                {visible && (\n                  <>\n                    <label>Note: You can select 10 files at max.</label>\n                    <label>Browse Document</label>\n                    <input\n                      type=\"file\"\n                      multiple\n                      name=\"docId\"\n                      id=\"docId\"\n                      accept=\".jpg,.jpeg,.xlsx,.pdf,.docx,.txt\"\n                      onChange={handleFileSelect}\n                    />\n                    <ul>\n                      {selectedFiles.map((file) => (\n                        <li key={file.name}>{file.name}</li>\n                      ))}\n                    </ul>\n                    <label className=\"documenttypes col-md-12\">\n                      <p className=\"error-text\">\n                        Supported file types\n                        .pdf,.doc,.csv,.txt,.xlsx,.html,.png{\" \"}\n                      </p>\n                    </label>\n                  </>\n                )}\n\n                <div className=\" form-group col-md-12 col-sm-12 col-xs-12 btn-container center my-3 mb-2\">\n                  {type == \"add\" ? (\n                    <button\n                      type=\"button\"\n                      className=\"btn btn-primary\"\n                      onClick={() => {\n                        handleAddData();\n                      }}\n                    >\n                      <MdOutlineSettingsSuggest />\n                      &nbsp;Create{\" \"}\n                    </button>\n                  ) : (\n                    <>\n                      {\" \"}\n                      {editedData.status_id != 345 ? (\n                        <button\n                          type=\"button\"\n                          className=\"btn btn-primary\"\n                          onClick={handleEditData}\n                        >\n                          <MdOutlineSettingsSuggest />\n                          Update{\" \"}\n                        </button>\n                      ) : (\n                        <button\n                          type=\"button\"\n                          className=\"btn btn-primary\"\n                          style={{ cursor: \"no-drop\" }}\n                        >\n                          <MdOutlineSettingsSuggest />\n                          Update{\" \"}\n                        </button>\n                      )}\n                    </>\n                  )}\n                  {/* {type == \"add\" ? <button type=\"button\" className=\"btn btn-primary\" onClick={() => { handleAddData(); }} ><AiFillFileAdd />&nbsp;Create and Continue</button> :\n                                        <button type=\"button\" className=\"btn btn-primary\" onClick={handleEditData}\n                                        ><AiFillFileAdd />&nbsp;Create and Continue</button>} */}\n                  {/* <button type=\"reset\" title=\"Cancel\" className=\"btn btn-secondary\" > <VscChromeClose /> Cancel</button> */}\n                </div>\n              </div>\n            </div>\n          </div>\n        </CModalBody>\n      </CModal>\n    </div>\n  );\n}\nexport default ProjectDefectsPopUp;\n","import React, { useState, useEffect, useRef } from \"react\";\nimport {\n  FaChevronCircleUp,\n  FaChevronCircleDown,\n  FaSearch,\n  FaPlus,\n} from \"react-icons/fa\";\nimport { CCollapse } from \"@coreui/react\";\nimport axios from \"axios\";\nimport AutoComplete from \"./ProjectDefectsAutoComplete\";\nimport { environment } from \"../../environments/environment\";\nimport ProjectDefectsPopUp from \"./ProjectDefectsPopUp\";\nimport { MdOutlineSettingsSuggest } from \"react-icons/md\";\nimport Loader from \"../Loader/Loader\";\nimport { AiFillDelete, AiFillEdit } from \"react-icons/ai\";\nimport ReactPaginate from \"react-paginate\";\nimport { RiFileExcel2Line } from \"react-icons/ri\";\nimport * as XLSX from \"xlsx\";\nimport { BiCheck } from \"react-icons/bi\";\nimport CellRendererPrimeReactDataTable from \"../PrimeReactTableComponent/CellRendererPrimeReactDataTable\";\nimport { Column } from \"ag-grid-community\";\nimport { ReactSearchAutocomplete } from \"react-search-autocomplete\";\nimport ScreenBreadcrumbs from \"../Common/ScreenBreadcrumbs\";\n\nfunction ProjectDefects(props) {\n  const loggedUserName = localStorage.getItem(\"resName\");\n  const { projectId, grp4Items } = props;\n  // console.log(grp4Items[6]?.is_write);\n  const baseUrl = environment.baseUrl;\n  const [filterVal, setFilterVal] = useState(\"\");\n  const [order, setOrder] = useState(\"ASC\");\n  const [searchApi, setSearchApi] = useState([]);\n  const [tableData, setTableData] = useState([]);\n  console.log(tableData.reported_res_id);\n  const [loader, setLoader] = useState(false);\n  const [edit, setEdit] = useState([]);\n  const [editId, setEditId] = useState();\n  const [openPopup, setOpenPopup] = useState(false);\n  const [searching, setSearching] = useState(\"\");\n  const [visible, setVisible] = useState(false);\n  const [cheveronIcon, setCheveronIcon] = useState(FaChevronCircleUp);\n  const [phases, setPhases] = useState([]);\n  const [severity, setSeverity] = useState([]);\n  const [priority, setPriority] = useState([]);\n  const [status, setStatus] = useState([]);\n  const [phaseInjected, setPhaseInjected] = useState([]);\n  const [assigneTo, setAssigneTo] = useState([]);\n  const [assign, setAssign] = useState([]);\n  const [projectIssueDetails, setProjectIssueDetails] = useState([]);\n  const [projectData, setProjectData] = useState([]);\n  const searchdata = {\n    projectid: projectId,\n    title: null == \"\" ? null : null,\n    defect_project_task_id: null,\n    defect_project_injected_task_id: null,\n    severity_id: null,\n    priority_id: null,\n    status_id: null,\n    assigned_to: null,\n    reported_by: null,\n    defect_age: null,\n    description: null,\n  };\n  const [formData, setFormData] = useState(searchdata);\n  const [editedData, setEditedData] = useState(searchdata);\n  const [type, setType] = useState(\"add\");\n  const [editmsg, setEditmsg] = useState(false);\n  const [addmsg, setAddmsg] = useState(false);\n  const [manager, setManager] = useState([]);\n  const [state, setState] = useState(\"create\");\n  const [headerData, setHeaderData] = useState([]);\n  const [linkColumns, setLinkColumns] = useState([]);\n  const [linkColumnsRoutes, setLinkColumnsRoutes] = useState([]);\n  const [issueDetails, setIssueDetails] = useState([]);\n  const [resourceid, setResourceId] = useState();\n  const abortController = useRef(null);\n\n  const handleAbort = () => {\n    abortController.current && abortController.current.abort();\n    setLoader(false);\n  };\n  useEffect(() => { }, [editedData]);\n  useEffect(() => { }, [projectIssueDetails]);\n\n  let rows = 10;\n  console.log(tableData);\n  const SnoAlign = (tableData) => {\n    return <div align=\"center\">{tableData.SNo}</div>;\n  };\n  const dataObject = grp4Items.find((item) => item.display_name === \"Defects\");\n\n  const title = (tableData) => {\n    return (\n      <div className=\"ellipsis\" data-toggle=\"tooltip\" title={tableData.title}>\n        {tableData.title}\n      </div>\n    );\n  };\n  const phase = (tableData) => {\n    return (\n      <div className=\"ellipsis\" data-toggle=\"tooltip\" title={tableData.phase}>\n        {tableData.phase}\n      </div>\n    );\n  };\n  const PhaseInjected = (tableData) => {\n    return (\n      <div\n        className=\"ellipsis\"\n        data-toggle=\"tooltip\"\n        title={tableData.phaseInjected}\n      >\n        {tableData.phaseInjected}\n      </div>\n    );\n  };\n  const Seviority = (tableData) => {\n    return (\n      <div\n        className=\"ellipsis\"\n        data-toggle=\"tooltip\"\n        title={tableData.severity}\n      >\n        {tableData.severity}\n      </div>\n    );\n  };\n  const Priority = (tableData) => {\n    return (\n      <div\n        className=\"ellipsis\"\n        data-toggle=\"tooltip\"\n        title={tableData.priority}\n      >\n        {tableData.priority}\n      </div>\n    );\n  };\n  const Status = (tableData) => {\n    return (\n      <div className=\"ellipsis\" data-toggle=\"tooltip\" title={tableData.status}>\n        {tableData.status}\n      </div>\n    );\n  };\n  const Assignedto = (tableData) => {\n    return (\n      <div\n        className=\"ellipsis\"\n        data-toggle=\"tooltip\"\n        title={tableData.assignedTo}\n      >\n        {tableData.assignedTo}\n      </div>\n    );\n  };\n  const Reportedby = (tableData) => {\n    return (\n      <div\n        className=\"ellipsis\"\n        data-toggle=\"tooltip\"\n        title={tableData.reportedBy}\n      >\n        {tableData.reportedBy}\n      </div>\n    );\n  };\n  const Description = (tableData) => {\n    return (\n      <div\n        className=\"ellipsis\"\n        data-toggle=\"tooltip\"\n        title={tableData.descriptionClear}\n      >\n        {tableData.descriptionClear}\n      </div>\n    );\n  };\n\n  // axios call for project name //\n  const handleProjectChange = () => {\n    axios({\n      method: \"get\",\n      url: baseUrl + `/ProjectMS/defectphases/getProject`,\n    })\n      .then(function (resp) {\n        let projectIssueDetail = resp.data;\n        setProjectIssueDetails(projectIssueDetail);\n      })\n      .catch(function (err) { });\n  };\n\n  const formatResult = (item) => {\n    return (\n      <div className=\"result-wrapper\">\n        <span className=\"result-span\">\n          {item.ResName} (<span>{item.employeeNumber}</span>)\n        </span>\n      </div>\n    );\n  };\n  // axios call for phase //\n  const handlePhaseChange = () => {\n    axios({\n      method: \"get\",\n      url: baseUrl + `/ProjectMS/defectphases/getDefectPhases`,\n    }).then((res) => {\n      let phase = res.data;\n      setPhases(phase);\n    });\n  };\n\n  // axios call for severity //\n  const handleSeverityChange = () => {\n    axios({\n      method: \"get\",\n      url: baseUrl + `/ProjectMS/defectphases/getSeverity`,\n    }).then((res) => {\n      let severty = res.data;\n      setSeverity(severty);\n    });\n  };\n\n  // axios call for priority //\n  const handlePriorityChange = () => {\n    axios({\n      method: \"get\",\n      url: baseUrl + `/ProjectMS/defectphases/getPriority`,\n    }).then((res) => {\n      let priorty = res.data;\n      setPriority(priorty);\n    });\n  };\n\n  // axios call for status //\n  const handleStatusChange = () => {\n    axios({\n      method: \"get\",\n      url: baseUrl + `/ProjectMS/defectphases/getStatus`,\n    }).then((res) => {\n      let stats = res.data;\n      setStatus(stats);\n    });\n  };\n  // axios call for phaseInjected //\n  const handlePhaseInjectedChange = () => {\n    axios({\n      method: \"get\",\n      url: baseUrl + `/ProjectMS/defectphases/getPhaseInjected`,\n    }).then((res) => {\n      let phaseInjeted = res.data;\n      setPhaseInjected(phaseInjeted);\n    });\n  };\n  // axios call for assignedTo //\n  const handleAssigneToChange = () => {\n    axios({\n      method: \"post\",\n      url:\n        baseUrl +\n        `/ProjectMS/defectphases/autocomplete?projectId=${projectId}&searchKey=&isAll=0`,\n    }).then((res) => {\n      let assignTo = res.data;\n      setAssigneTo(assignTo);\n      console.log(res.data);\n    }),\n      [];\n  };\n  /// autocomplete for manager and sales executive\n  const handleManager = () => {\n    axios({\n      method: \"post\",\n      url: baseUrl + `/ProjectMS/Engagement/getMnagerNameAndId`,\n    }).then((res) => {\n      let manger = res.data;\n      setManager(manger);\n      console.log(manager);\n    });\n  };\n  useEffect(() => { }, [assigneTo]);\n  useEffect(() => { }, [manager]);\n\n  // breadcrumbs --\n  const loggedUserId = localStorage.getItem(\"resId\");\n\n  const [routes, setRoutes] = useState([]);\n  let textContent = \"Delivery\";\n  let currentScreenName = [\"Projects\", \"Open\", \"Monitoring\", \"Defect Details\"];\n\n  useEffect(() => {\n    getMenus();\n  }, []);\n\n  const getMenus = () => {\n    // setMenusData\n\n    axios({\n      method: \"GET\",\n      url: baseUrl + `/CommonMS/master/getMenus?loggedUserId=${loggedUserId}`,\n    }).then((resp) => {\n      let data = resp.data;\n\n      data.forEach((item) => {\n        if (item.display_name === textContent) {\n          setRoutes([item]);\n        }\n      });\n    });\n  };\n\n  //---------------------assigned data-------------\n  const getData = () => {\n    console.log(\"line no 106\");\n    axios({\n      method: \"get\",\n      url: baseUrl + `/ProjectMS/Issues/getAssignedData`,\n    }).then(function (response) {\n      var res = response.data;\n      setIssueDetails(res);\n      console.log(\"assigned data\");\n      console.log(res);\n    });\n  };\n  useEffect(() => { }, [issueDetails]);\n\n  useEffect(() => {\n    getData();\n  }, []);\n\n  const [exportData, setExportData] = useState([]);\n  useEffect(() => {\n    let imp = [\"XLS\"];\n    setExportData(imp);\n  }, []);\n\n  useEffect(() => {\n    handlePhaseChange();\n    handleSeverityChange();\n    handlePriorityChange();\n    handleStatusChange();\n    handlePhaseInjectedChange();\n    handleProjectChange();\n    getTableData();\n    handleAssigneToChange();\n    handleManager();\n    getProjectOverviewData();\n  }, []);\n\n  // axios call for defectDetails  //\n  const getTableData = () => {\n    setLoader(false);\n\n    axios({\n      method: \"post\",\n      url: baseUrl + `/ProjectMS/defectphases/getDefectsDetails`,\n      data: formData,\n    })\n      .then((res) => {\n        const GetData = res.data;\n        console.log(res.data);\n\n        for (let i = 0; i < GetData.length; i++) {\n          GetData[i][\"SNo\"] = i + 1;\n          // GetData[i][\"description\"] = GetData[i][\"description\"].replace(/<[^>]+>/g, '');\n\n          // GetData[i][\"description\"] = GetData[i][\"description\"].innerHTMLTags;\n          GetData[i][\"descriptionClear\"] = GetData[i][\"description\"].replace(\n            /<\\/?[^>]+(>|$)/g,\n            \"\"\n          );\n        }\n        let dataHeaders = [\n          {\n            SNo: \"S.No\",\n            title: \"Defect Title\",\n            phase: \"Phase\",\n            phaseInjected: \"Phase Injected\",\n            severity: \"Severity\",\n            priority: \"Priority\",\n            status: \"Status\",\n            assignedTo: \"Assigned To\",\n            reportedBy: \"Reported By\",\n            descriptionClear: \"Defect Description\",\n            defect_age: \"Defect Age\",\n            Action: \"Action\",\n          },\n        ];\n        let tableData = [\"Action\"];\n        setLinkColumns(tableData);\n\n        console.log(GetData);\n\n        setTableData(dataHeaders.concat(GetData));\n        console.log(res.data);\n        // console.log(\"table data\")\n        setSearchApi(res.data);\n        setEdit(res.data);\n        setResourceId(GetData.reported_res_id);\n        console.log(GetData.reported_res_id);\n        setLoader(false);\n        setVisible(!visible);\n        visible\n          ? setCheveronIcon(FaChevronCircleUp)\n          : setCheveronIcon(FaChevronCircleDown);\n      })\n      .then((error) => {\n        console.log(\"success\", error);\n      });\n  };\n  const handleChange = (e) => {\n    const { id, value } = e.target;\n    setFormData((prev) => ({ ...prev, [id]: value == \"null\" ? null : value }));\n    console.log(formData);\n  };\n  const handleClick = () => {\n    console.log(formData);\n    getTableData();\n  };\n  const LinkTemplate = (tableData) => {\n    let rou = linkColumns[0];\n    return (\n      <>\n        {/* <div align=\"center\">\n                    {<AiFillEdit color=\"orange\" cursor=\"pointer\" type=\"edit\" size=\"1.2em\" align=\"center\"\n                        onClick={() => {\n                            setEditedData(tableData);\n                            setEditId(tableData.id);\n                            setOpenPopup(true);\n                            setType(\"edit\")\n                        }}\n                    />}\n\n                </div> */}\n        <div align=\"center\">\n          {grp4Items[6]?.is_write == true ? (\n\n            <>\n              <AiFillEdit\n                title=\"edit\"\n                color=\"orange\"\n                cursor=\"pointer\"\n                type=\"edit\"\n                size=\"1.2em\"\n                onClick={() => {\n                  setEditedData(tableData);\n                  setEditId(tableData.id);\n                  setOpenPopup(true);\n                  setType(\"edit\");\n                }}\n              />\n            </>\n          ) : (\n            <>\n              <AiFillEdit\n                color=\"orange\"\n                type=\"edit\"\n                size=\"1.2em\"\n                align=\"center\"\n                style={{ cursor: \"not-allowed\" }}\n              />\n\n            </>\n          )}\n\n        </div>\n      </>\n    );\n  };\n\n  const dynamicColumns = Object.keys(headerData)?.map((col, i) => {\n    return (\n      <Column\n        sortable\n        key={col}\n        body={\n          (col == \"SNo\" && SnoAlign) ||\n          (col == \"title\" && title) ||\n          (col == \"phase\" && phase) ||\n          (col == \"phaseInjected\" && PhaseInjected) ||\n          (col == \"severity\" && Seviority) ||\n          (col == \"priority\" && Priority) ||\n          (col == \"status\" && Status) ||\n          (col == \"assignedTo\" && Assignedto) ||\n          (col == \"reportedBy\" && Reportedby) ||\n          (col == \"descriptionClear\" && Description) ||\n          (col == \"Action\" && LinkTemplate)\n        }\n        field={col}\n        header={headerData[col]}\n      />\n    );\n  });\n  const getProjectOverviewData = () => {\n    axios({\n      method: \"get\",\n      url:\n        baseUrl +\n        `/ProjectMS/Audit/projectOverviewDetails?projectId=${projectId}`,\n    })\n      .then(function (response) {\n        let resp = response.data;\n        console.log(resp);\n        setProjectData(resp);\n        //    setPrjName(resp)\n      })\n      .catch(function (response) {\n        console.log(response);\n      });\n  };\n  const handleClear = () => {\n    setFormData((prevProps) => ({ ...prevProps, reported_by: null }));\n    setFormData((prevProps) => ({ ...prevProps, assigned_to: null }));\n    const inputValue = document.getElementById(\"title\").value;\n    const titleValue = inputValue.trim() !== \"\" ? inputValue : null;\n    setFormData((prevProps) => ({ ...prevProps, title: titleValue }));\n  };\n  return (\n    <div>\n      {addmsg ? (\n        <div className=\"statusMsg success\">\n          <BiCheck size=\"1.5em\" color=\"green\" /> {\"Defect saved Successfully\"}\n        </div>\n      ) : (\n        \"\"\n      )}\n      {editmsg ? (\n        <div className=\"statusMsg success\">\n          <BiCheck size=\"1.5em\" color=\"green\" /> {\"Defect edited Successfully\"}\n        </div>\n      ) : (\n        \"\"\n      )}\n      <div>\n        <div className=\"col-md-12 \">\n          <div className=\"pageTitle\">\n            {projectData.map((list) => (\n              <div className=\"childOne\">\n                <h2>{list.projectName}</h2>\n              </div>\n            ))}\n            <div className=\"childTwo\">\n              <h2>Defect Details</h2>\n            </div>\n            <div className=\"childThree\"></div>\n          </div>\n        </div>\n        <ScreenBreadcrumbs\n          routes={routes}\n          currentScreenName={currentScreenName}\n        />\n        <div className=\"col-md-12  customCard\">\n          <div className=\"col-md-12 collapseHeader\">\n            <h2>Search Filters</h2>\n            <div\n              onClick={() => {\n                setVisible(!visible);\n                visible\n                  ? setCheveronIcon(FaChevronCircleUp)\n                  : setCheveronIcon(FaChevronCircleDown);\n              }}\n            >\n              <span>{cheveronIcon}</span>\n            </div>\n          </div>\n\n          <CCollapse className=\"group-content row\" visible={!visible}>\n            <div className=\"form-group col-md-2\" id=\"title\">\n              <label htmlFor=\"form-label\">Defect Title</label>\n              <label htmlFor=\"col-md-3 \">\n                <input\n                  type=\"text\"\n                  name=\"title\"\n                  id=\"title\"\n                  onChange={(e) => {\n                    const { id, value } = e.target;\n                    setFormData((prev) => ({\n                      ...prev,\n                      [\"title\"]: value == \"\" ? null : value,\n                    }));\n                  }}\n                />{\" \"}\n              </label>\n            </div>\n            <div className=\"form-group col-md-2\" id=\"defect_project_task_id\">\n              <label htmlFor=\"form-label\">Phase</label>\n              <select\n                className=\" \"\n                id=\"defect_project_task_id\"\n                name=\"defect_project_task_id\"\n                onChange={(e) => handleChange(e)}\n              >\n                <option value=\"null\"> &lt;&lt;Please Select&gt;&gt;</option>\n                {phases.map((Item) => (\n                  <option value={Item.id}> {Item.task_name}</option>\n                ))}\n              </select>\n            </div>\n            <div\n              className=\"form-group col-md-2\"\n              id=\"defect_project_injected_task_id\"\n            >\n              <label htmlFor=\"form-label\">Phase Injected</label>\n              <select\n                className=\" \"\n                id=\"defect_project_injected_task_id\"\n                name=\"defect_project_injected_task_id\"\n                onChange={(e) => handleChange(e)}\n              >\n                <option value=\"null\"> &lt;&lt;Please Select&gt;&gt;</option>\n                {phaseInjected.map((Item) => (\n                  <option value={Item.id}> {Item.task_name}</option>\n                ))}\n              </select>\n            </div>\n            <div className=\"form-group col-md-2\" id=\"severity_id\">\n              <label htmlFor=\"form-label\">Severity</label>\n              <select\n                className=\"\"\n                id=\"severity_id\"\n                name=\"severity\"\n                onChange={(e) => handleChange(e)}\n              >\n                <option value=\"null\"> &lt;&lt;Please Select&gt;&gt;</option>\n                {severity.map((Item) => (\n                  <option value={Item.id}> {Item.lkup_name}</option>\n                ))}\n              </select>\n            </div>\n            <div className=\"form-group col-md-2\" id=\"priority_id\">\n              <label htmlFor=\"form-label\">Priority</label>\n              <select\n                className=\" \"\n                id=\"priority_id\"\n                name=\"priority\"\n                onChange={(e) => handleChange(e)}\n              >\n                <option value=\"null\"> &lt;&lt;Please Select&gt;&gt;</option>\n                {priority.map((Item) => (\n                  <option value={Item.id}> {Item.lkup_name}</option>\n                ))}\n              </select>\n            </div>\n            <div className=\"form-group col-md-2\" id=\"status_id\">\n              <label htmlFor=\"form-label\">Status</label>\n              <select\n                className=\" \"\n                id=\"status\"\n                name=\"status\"\n                onChange={(e) => handleChange(e)}\n              >\n                <option value=\"null\"> &lt;&lt;Please Select&gt;&gt;</option>\n                {status.map((Item) => (\n                  <option value={Item.id}> {Item.lkup_name}</option>\n                ))}\n              </select>\n            </div>\n            <div className=\"form-group col-md-2 mt-1\" id=\"assigned_to\">\n              <label htmlFor=\"form-label\">Assigned To</label>\n              <div className=\"autoComplete-container\">\n                <ReactSearchAutocomplete\n                  items={assigneTo}\n                  type=\"Text\"\n                  name=\"assigned_to\"\n                  id=\"assigned_to\"\n                  assigneTo={assigneTo}\n                  handleAssigneToChange={handleAssigneToChange}\n                  onChange={(e) => handleChange(e)}\n                  fuseOptions={{ keys: [\"id\", \"ResName\", \"employeeNumber\"] }}\n                  resultStringKeyName=\"ResName\"\n                  formatResult={formatResult}\n                  onClear={handleClear}\n                  onSelect={(e) => {\n                    setFormData((prevProps) => ({\n                      ...prevProps,\n                      assigned_to: e.id == \"\" ? null : e.id,\n                    }));\n                  }}\n                  showIcon={false}\n                />\n              </div>\n            </div>\n            <div className=\"form-group col-md-2 mt-1\" id=\"reported_by\">\n              <label htmlFor=\"form-label\">Reported By</label>\n              <div className=\"autoComplete-container\">\n                <ReactSearchAutocomplete\n                  items={assigneTo}\n                  type=\"Text\"\n                  name=\"reported_by\"\n                  id=\"reported_by\"\n                  className=\"err\"\n                  assigneTo={assigneTo}\n                  onClear={handleClear}\n                  // onChange={(e) => handleChange(e)}\n                  handleAssigneToChange={handleAssigneToChange}\n                  fuseOptions={{ keys: [\"id\", \"ResName\", \"employeeNumber\"] }}\n                  resultStringKeyName=\"ResName\"\n                  formatResult={formatResult}\n                  // onChange={(e) => {  setFormData(prev => ({ ...prev, [\"reported_by\"]: e.id == \"\" ? null : e.id })) }}\n\n                  onSelect={(e) => {\n                    setFormData((prev) => ({\n                      ...prev,\n                      reported_by: e.id == \"\" ? null : e.id,\n                    }));\n                    console.log(e.id);\n                  }}\n                  showIcon={false}\n                />\n              </div>\n            </div>\n            <div className=\"form-group col-md-2 mt-1\" id=\"description\">\n              <label htmlFor=\"form-label\">Defect Description</label>\n              <label htmlFor=\"col-md-12 \">\n                <input\n                  type=\"text\"\n                  name=\"description\"\n                  id=\"description\"\n                  onChange={(e) => {\n                    const { id, value } = e.target;\n                    setFormData((prev) => ({\n                      ...prev,\n                      [\"description\"]: value == \"\" ? null : value,\n                    }));\n                  }}\n                />\n              </label>\n            </div>\n            <div className=\"form-group col-md-2 mt-1\" id=\"defect_age\">\n              <label htmlFor=\"form-label\">Defect Age</label>\n              <label className=\"col-md-12 \">\n                <input\n                  type=\"text\"\n                  name=\"defect_age\"\n                  id=\"defect_age\"\n                  onChange={(e) => {\n                    const { id, value } = e.target;\n                    setFormData((prev) => ({\n                      ...prev,\n                      [\"defect_age\"]: value == \"\" ? null : value,\n                    }));\n                  }}\n                />\n              </label>\n            </div>\n            <div className=\" form-group col-md-12 col-sm-12 col-xs-12 btn-container center my-3 mb-2\">\n              <button\n                type=\"button\"\n                className=\"btn btn-primary\"\n                title=\"Search\"\n                value={searching}\n                onClick={() => handleClick()}\n              >\n                <FaSearch /> Search{\" \"}\n              </button>\n            </div>\n            {loader ? <Loader handleAbort={handleAbort} /> : \"\"}\n          </CCollapse>\n        </div>\n        <div className=\"group mb-3 customCard\">\n          <div className=\"\">\n            <div className=\"col-md-12 no-padding\">\n              <CellRendererPrimeReactDataTable\n                data={tableData}\n                linkColumns={linkColumns}\n                linkColumnsRoutes={linkColumnsRoutes}\n                dynamicColumns={dynamicColumns}\n                headerData={headerData}\n                rows={rows}\n                setHeaderData={setHeaderData}\n                exportData={exportData}\n                fileName=\"Project Defects\"\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n      {/* <div className=\"form-group col-md-12 col-sm-12 col-xs-12 btn-container center my-3 \">\n                <button type=\"button\" className=\"btn btn-primary\"\n                    onClick={() => { setOpenPopup(true); setType(\"add\") }}> <MdOutlineSettingsSuggest />\n                    Create Defect\n                </button>\n\n            </div> */}\n      {/* {grp4Items[6].is_write == true ? ( */}\n      <div className=\"col-md-12 col-sm-12 col-xs-12 my-2 btn-container center\">\n        {console.log(dataObject)}\n\n        {dataObject?.is_write === true ? (\n          <button\n            type=\"button\"\n            className=\"btn btn-primary\"\n            onClick={() => {\n              setOpenPopup(true);\n              setType(\"add\");\n            }}\n          >\n            <FaPlus />\n            Add\n          </button>\n        ) : (\n          \"\"\n        )}\n      </div>\n\n      {/* ) : (\n        \"\"\n      )} */}\n\n      {openPopup ? (\n        <ProjectDefectsPopUp\n          openPopup={openPopup}\n          editId={editId}\n          setOpenPopup={setOpenPopup}\n          setEditedData={setEditedData}\n          getTableData={getTableData}\n          editedData={editedData}\n          type={type}\n          editmsg={editmsg}\n          setEditmsg={setEditmsg}\n          addmsg={addmsg}\n          tableData={tableData}\n          setAddmsg={setAddmsg}\n          projectIssueDetails={projectIssueDetails}\n          projectId={projectId}\n          projectData={projectData}\n        />\n      ) : (\n        \"\"\n      )}\n    </div>\n  );\n}\nexport default ProjectDefects;\n","import React, { useState, useEffect, useRef } from \"react\";\nimport { CModal } from '@coreui/react'\nimport { CModalBody } from '@coreui/react'\nimport { CModalHeader } from '@coreui/react'\nimport { CModalTitle } from '@coreui/react'\nimport ReactQuill, { Quill } from \"react-quill\";\nimport \"react-quill/dist/quill.snow.css\";\nimport { AiFillWarning } from \"react-icons/ai\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport moment from \"moment\";\nimport axios from \"axios\";\nimport { environment } from \"../../environments/environment\";\nimport { FaSave } from \"react-icons/fa\";\nimport './Issue.scss';\nimport { ReactSearchAutocomplete } from 'react-search-autocomplete'\nimport GlobalValidation from \"../ValidationComponent/GlobalValidation\";\n\n\nfunction RiskPopup(props) {\n    const { openPopup, setOpenPopup, projectId, type, editId, setEditedData, editedData, getTableData, addmsg, setAddmsg, setEditmsg, tableData, projectData } = props\n\n\n    const loggedUserId = localStorage.getItem(\"resId\");\n    const loggedUserName = localStorage.getItem(\"resName\");\n\n\n    const baseUrl = environment.baseUrl;\n    const [value, setValue] = useState(\"\");\n    const [risk_occured_date, setOccurredDate] = useState(null)\n    const [mitigation_date, setMitigationDate] = useState(null)\n    const [risktype, setRiskType] = useState([]);\n    const [risksource, setRiskSource] = useState([]);\n    const [riskimpact, setRiskImpact] = useState([]);\n    const [probabilityofoccurrence, setProbabilityOfOccurrence] = useState([]);\n    const [riskstatus, setRiskStatus] = useState([]);\n    const [riskoccurredDone, setRiskOccurredDone] = useState(\"0\")\n\n    const [validationMessage, setValidationMessage] = useState(false)\n    const [riskDetails, setRiskDetails] = useState([])\n\n    const data = { \"projectid\": projectId, \"risk_occured_date\": \"\", \"assigned_to\": \"\", \"occurence_prob_id\": \"\", \"risk_value\": \"\", \"risk_source\": \" \", \"risk_type\": \"\", \"is_risk_occured\": \"0\", \"created_by_id\": loggedUserId, \"created_by_name\": loggedUserName, \"risk_impact\": \"\", \"mitigation_plan\": \"\", \"mitigation_date\": \"\" }\n    const [formData, setFormData] = useState(data)\n    const [formEditData, setFormEditData] = useState(editedData)\n    const [assignedid, setAssignedid] = useState()\n\n    const [riskValue, setRiskValue] = useState(0)\n    const [riskValueedited, setRiskValueEdited] = useState(0)\n    const ref = useRef([]);\n\n    const riskImpactRef = useRef(null)\n    const probOfOccurRef = useRef(null)\n\n\n    const [item, setItem] = useState([]);\n    useEffect(() => {\n\n    }, [item])\n\n\n    const editorToolBar = {\n        toolbar: [\n            [{ header: [false, 1, 2, 3, 4, 5, 6] },\n            { color: [] },\n                'bold', 'italic', 'underline', { 'list': 'ordered' }, { 'list': 'bullet' },\n            { 'script': 'sub' }, { 'script': 'super' },\n            { 'indent': '-1' }, { 'indent': '+1' }, { 'align': null }, { 'align': 'center' }, { 'align': 'right' },\n                'strike',\n                'link', 'image',\n                'code-block', 'clean']\n        ]\n    }\n    useEffect(() => {\n        getRiskType();\n        getRiskSource();\n        getRiskImpact();\n        getProbabilityOfOccurrence();\n        getRiskStatus();\n    }, [])\n\n    const handleChange = (e) => {\n        const { id, value } = e.target;\n        setFormData(prev => ({ ...prev, [id]: value }))\n        setFormEditData(prev => ({ ...prev, [id]: value }))\n    }\n\n    useEffect(() => {\n        let riskimpactValue = null;\n        let probabilityValue = null;\n        riskimpact.map(risk => {\n            if (risk.id == formData.risk_impact) {\n                riskimpactValue = risk.lkup_name.split(\"-\")[0];\n            }\n        });\n        probabilityofoccurrence.map(probability => {\n            if (probability.id == formData.occurence_prob_id) {\n                probabilityValue = probability.lkup_name.split(\"-\")[0];\n            }\n        })\n        if (riskimpactValue != null && probabilityValue != null) {\n            setRiskValue(parseInt(riskimpactValue) * parseInt(probabilityValue));\n        }\n    }, [formData])\n\n    useEffect(() => {\n\n        if (type != \"add\") {\n\n            setRiskValueEdited(formEditData.risk_value);\n        }\n    }, [formEditData])\n\n    useEffect(() => {\n    }, [formEditData.riskValue])\n\n\n\n    const getRiskType = () => {\n\n        axios({\n            method: \"get\",\n            url: baseUrl + `/ProjectMS/risks/getRiskType`\n        })\n            .then(res => {\n                var risktype = res.data;\n                setRiskType(risktype);\n            })\n    }\n\n\n    const getRiskSource = () => {\n\n        axios({\n            method: \"get\",\n            url: baseUrl + `/ProjectMS/risks/getRiskSource`\n        })\n            .then(res => {\n                var risksource = res.data;\n                setRiskSource(risksource);\n            })\n    }\n\n\n\n\n    const getRiskImpact = () => {\n\n        axios({\n            method: \"get\",\n            url: baseUrl + `/ProjectMS/risks/getRiskImpact`\n        })\n            .then(res => {\n                var riskimpact = res.data;\n                setRiskImpact(riskimpact);\n            })\n    }\n\n    const getProbabilityOfOccurrence = () => {\n\n        axios({\n            method: \"get\",\n            url: baseUrl + `/ProjectMS/risks/getProbabilityOfOccurrence`\n        })\n            .then(res => {\n                var probabilityofoccurrence = res.data;\n                setProbabilityOfOccurrence(probabilityofoccurrence);\n            })\n    }\n\n    const getRiskStatus = () => {\n\n        axios({\n            method: \"get\",\n            url: baseUrl + `/ProjectMS/risks/getRiskStatus`\n        })\n            .then(res => {\n                var riskstatus = res.data;\n                setRiskStatus(riskstatus);\n            })\n    }\n\n    const getData = () => {\n\n        axios({\n            method: \"get\",\n            url: baseUrl + `/ProjectMS/risks/getAssignedData`\n        }).then(function (response) {\n            var res = response.data\n            setRiskDetails(res)\n        })\n    }\n\n    useEffect(() => {\n        getData();\n    }, [])\n\n\n    const handleAddClick = () => {\n        let adddata = document.getElementsByClassName(\"error\");\n\n        for (let i = 0; i < adddata.length; i++) {\n            if (adddata[i].value == \"\" || adddata[i].value == \"null\" || adddata[i].value == \"All\" || adddata[i].value == undefined) {\n                adddata[i].classList.add(\"error-block\");\n                setValidationMessage(true);\n            }\n            else {\n                adddata[i].classList.remove(\"error-block\")\n\n                setValidationMessage(false);\n            }\n        }\n        let name = formData.risk_name\n        let Value = formData.risk_value\n        let source = formData.risk_source\n        let rsiktype = formData.risk_type\n        let riskimpact = formData.risk_impact\n        let occurence = formData.occurence_prob_id\n        let description1 = formData.description\n\n        if (Object.values({ name, rsiktype, source, Value, riskimpact, occurence, description1 }).includes(\" \")) {\n            setValidationMessage(true);\n            return;\n        }\n        setValidationMessage(false);\n\n        formData.risk_value = riskValue;\n\n        axios({\n            method: \"post\",\n            url:\n                baseUrl +\n                `/ProjectMS/risks/postProjectRiskData`,\n            data: formData\n        }).then(error => {\n            setOpenPopup(false);\n            getTableData();\n            setValidationMessage(false)\n            setAddmsg(true);\n            setTimeout(() => {\n                setAddmsg(false);\n            }, 3000);\n        });\n\n    }\n\n\n    const handleEditClick = () => {\n        let adddata = document.getElementsByClassName(\"error\");\n\n\n        for (let i = 0; i < adddata.length; i++) {\n            if (adddata[i].value == \"\" || adddata[i].value == \"null\" || adddata[i].value == \"All\" || adddata[i].value == undefined) {\n                adddata[i].classList.add(\"error-block\");\n                setValidationMessage(true);\n            }\n            else {\n                adddata[i].classList.remove(\"error-block\")\n\n                setValidationMessage(false);\n            }\n        }\n\n        let name = formEditData.risk_name\n        let source = formEditData.source_id\n        let status = formEditData.status_id\n        let rsiktype = formEditData.type_id\n        let riskimpact = formEditData.impact_id\n        let occurence = formEditData.occurence_prob_id\n        let description1 = formEditData.description\n        let riskValue1 = formEditData.risk_value\n\n        if (Object.values({ name, source, status, riskValue1, rsiktype, riskimpact, occurence, description1 }).includes(\"\")) {\n            setValidationMessage(true);\n\n            return;\n        }\n        setValidationMessage(false);\n        axios({\n            method: \"post\",\n            url:\n                baseUrl +\n                `/ProjectMS/risks/postProjectRiskData`,\n            data: {\n                \"id\": formEditData.id,\n                \"projectid\": projectId,\n                \"assigned_to\": formEditData.owner_id,\n                \"risk_impact\": formEditData.impact_id,\n                \"risk_name\": formEditData.risk_name,\n                \"risk_source\": formEditData.source_id,\n                \"risk_status\": formEditData.status_id,\n                \"risk_type\": formEditData.type_id,\n                \"description\": formEditData.description === \"\" ? value : formEditData.description,\n                \"is_risk_occured\": formEditData?.is_risk_occured === true ? \"1\" : formEditData?.is_risk_occured === false ? \"0\" : formEditData?.is_risk_occured,\n                \"created_by_id\": loggedUserId,\n                \"created_by_name\": loggedUserName,\n                \"mitigation_date\": formEditData.mitigation_date,\n                \"mitigation_plan\": formEditData.mitigation_plan,\n                \"risk_value\": formEditData.risk_value,\n                \"occurence_prob_id\": formEditData.occurence_prob_id,\n                \"last_updated\": formEditData.last_updated,\n                \"last_updated_by_id\": formEditData.last_updated_by_id,\n                \"date_created\": formEditData.date_created,\n                \"risk_occured_date\": formEditData.risk_occured_date\n            }\n        }).then(error => {\n            setOpenPopup(false);\n            getTableData();\n            setEditmsg(true);\n            setTimeout(() => {\n                setEditmsg(false);\n            }, 3000);\n        });\n    }\n\n    return (\n        <div className='col-md-12 '>\n\n\n            <CModal visible={openPopup} size=\"xl\" className=\" u\" onClose={() => setOpenPopup(false)} backdrop={'static'}>\n                <CModalHeader className='' style={{ cursor: \"all-scroll\" }}>\n                    <CModalTitle >\n                        {type == \"add\" ? <span className='' >\n                            Add Risk\n                        </span> :\n                            <span className='' > Edit Risk </span>}\n                    </CModalTitle>\n                </CModalHeader>\n                <CModalBody  >\n\n\n                    <div className='group-content row' >\n                        {validationMessage ? <div className='statusMsg error'>\n                            <AiFillWarning size=\"1.4em\" />\n                            <span>Please select the valid values for highlighted fields</span></div> : \"\"}\n                        {projectData.map((list) => (\n                            <div className='col-md-3 mb-2'>\n                                <div className='form-group row' id=\"project\" >\n                                    <label className='col-5'>Project</label>\n                                    <label className='col-1 p-0'>:</label>\n                                    <label className='col-6'>\n                                        <input type=\"Text\" className=\"disableField\" name=\"project_id\" id={projectId} disabled={true} value={list.projectName}\n                                            onChange={(e) => handleChange(e)} style={{ cursor: \"not-allowed\" }} />\n                                    </label>\n                                </div>\n                            </div>))}\n                        <div className=' col-md-3 mb-2' >\n                            <div className='form-group row' id=\"name\" >\n                                <label className='col-5'  >Risk Name&nbsp;<span class=\"required\"> *</span></label>\n                                <label className='col-1 p-0'>:</label>\n                                <div className='col-6 textfield'\n                                    ref={(ele) => {\n                                        ref.current[0] = ele\n                                    }}>\n                                    {type == \"add\" ? (\n                                        <input\n                                            className={`text error unique ${formData.risk_name && formData.risk_name.length >= 50 ? 'error' : ''}`}\n                                            type=\"Text\"\n                                            name=\"risk_name\"\n                                            id=\"risk_name\"\n                                            placeholder=\"Max 50 characters\"\n                                            maxLength={50}\n                                            value={formData.risk_name || ''}\n                                            onKeyDown={(event) => {\n                                                if (event.code === \"Space\" && !formData.risk_name) event.preventDefault();\n                                            }}\n                                            onChange={(e) => handleChange(e)}\n\n                                        />\n                                    ) : (\n\n                                        <input\n                                            className={`text ${formData.risk_name && formData.risk_name.length >= 50 ? 'error' : ''}`}\n                                            type=\"Text\"\n                                            name=\"risk_name\"\n                                            id=\"risk_name\"\n                                            placeholder=\"Max 50 characters\"\n                                            maxLength={50}\n                                            onKeyDown={(event) => {\n                                                if (event.code === \"Space\" && !formData.risk_name) event.preventDefault();\n                                            }}\n                                            defaultValue={editedData?.risk_name}\n                                            onChange={(e) => setFormEditData(prev => ({ ...prev, [\"risk_name\"]: e.target.value }))} />\n                                    )}\n                                </div>\n                            </div>\n                        </div>\n                        <div className='col-md-3 mb-2'>\n                            <div className='form-group row'  >\n                                <label className='col-5' >Risk Type&nbsp;<span className=\"required error-text ml-1\"> *</span></label>\n                                <label className='col-1 p-0'>:</label>\n                                <label className='col-6'>\n                                    {type == \"add\" ?\n                                        <select className=\"text error\" name=\"risk_type\" id=\"risk_type\" onChange={(e) => handleChange(e)}\n                                            ref={(ele) => {\n                                                ref.current[1] = ele;\n                                            }}>\n                                            <option value=\"\">&lt;&lt;Please Select&gt;&gt;</option>\n                                            {risktype.map((Item) =>\n                                                <option value={Item.id}> {Item.lkup_name}</option>)}</select> :\n                                        <select className=\"text error\" name=\"risk_type\" id=\"risk_type\"\n                                            onChange={(e) => setFormEditData(prev => ({ ...prev, [\"type_id\"]: e.target.value }))} >\n                                            <option value=\"\">&lt;&lt;Please Select&gt;&gt;</option>\n                                            {risktype.map((Item) =>\n                                                <option value={Item.id} selected={Item.id == editedData?.type_id ? true : false}>{Item.lkup_name}</option>)}\n                                        </select>}\n                                </label>\n                            </div>\n                        </div>\n                        <div className='col-md-3 p0'>\n                            <div className='form-group row' >\n                                <label className='col-5 p0' >Risk Source&nbsp;<span class=\"required\">*</span></label>\n                                <label className='col-1 p-0'>:</label>\n                                <label className='col-6 ' >\n                                    {type == \"add\" ?\n                                        <select className=\"text error\"\n                                            name=\"risk_source\" id=\"risk_source\" onChange={(e) => handleChange(e)}\n                                            ref={(ele) => {\n                                                ref.current[2] = ele;\n                                            }}>\n                                            <option value=\"\">&lt;&lt;Please Select&gt;&gt;</option>\n                                            {risksource.map((Item) =>\n                                                <option value={Item.id}> {Item.lkup_name}</option>)}</select> :\n                                        <select className=\"text error\"\n                                            name=\"risk_source\" id=\"risk_source\" onChange={(e) => setFormEditData(prev => ({ ...prev, [\"source_id\"]: e.target.value }))}>\n                                            <option value=\"\">&lt;&lt;Please Select&gt;&gt;</option>\n                                            {risksource.map((Item) =>\n                                                <option value={Item.id} selected={Item.id == editedData?.source_id ? true : false}> {Item.lkup_name}</option>)}</select>}\n                                </label>\n                            </div>\n                        </div>\n\n                        <div className='col-md-3 mb-2'>\n                            <div className='form-group row' name=\"risk_impact\" id=\"risk_impact\">\n                                <label className='col-5'>Risk Impact&nbsp;<span class=\"required\"> *</span></label>\n                                <label className='col-1 p-0'>:</label>\n                                <label className='col-6'>\n                                    {type == \"add\" ?\n                                        <select className=\"text error\" name=\"risk_impact\" id=\"risk_impact\" onChange={(e) => handleChange(e)}\n                                            ref={(ele) => {\n                                                ref.current[3] = ele;\n                                            }}>\n                                            <option value=\"\">&lt;&lt;Please Select&gt;&gt;</option>\n                                            {riskimpact.map((Item) =>\n                                                <option value={Item.id}> {Item.lkup_name}</option>)}</select> :\n\n                                        <select className=\"text error\" ref={riskImpactRef} name=\"risk_impact\" id=\"risk_impact\" onChange={(e) => {\n\n                                            let opt = riskImpactRef.current.children\n\n                                            let riskImpactVl = null;\n\n                                            for (let i = 0; i < opt.length; i++) {\n\n                                                if (opt[i].value == e.target.value) {\n                                                    riskImpactVl = opt[i].innerText.split(\"-\")[0];\n                                                    setFormEditData(prev => ({ ...prev, [\"risk_impact\"]: opt[i].innerText }))\n\n\n                                                }\n\n                                            }\n\n                                            setFormEditData(prev => ({ ...prev, [\"impact_id\"]: e.target.value }))\n                                            setFormEditData(prev => ({ ...prev, [\"risk_value\"]: ((formEditData[\"occurence_prob_name\"]).split(\"-\")[0] * riskImpactVl) }))\n                                        }} >\n                                            <option value=\"\">&lt;&lt;Please Select&gt;&gt;</option>\n                                            {riskimpact.map((Item) =>\n                                                <option value={Item.id} selected={Item.id == editedData?.impact_id ? true : false}> {Item.lkup_name}</option>)}\n                                        </select>}\n                                </label>\n                            </div>\n                        </div>\n                        <div className='col-md-3 p0'>\n                            <div className='form-group row' >\n                                <label className='col-5'>Probability of Occurrence&nbsp;<span class=\"required\">*</span></label>\n                                <label className='col-1 p-0'>:</label>\n                                <label className='col-6'>\n                                    {type == \"add\" ?\n                                        <select className=\"text error\" name=\" occurence_prob_id\" id=\"occurence_prob_id\" onChange={(e) => handleChange(e)}\n                                            ref={(ele) => {\n                                                ref.current[4] = ele;\n                                            }}>\n                                            <option value=\"\">&lt;&lt;Please Select&gt;&gt;</option>\n                                            {probabilityofoccurrence.map((Item) =>\n                                                <option value={Item.id}> {Item.lkup_name}</option>)}</select> :\n                                        <select className=\"text error\" name=\" occurence_prob_id\" id=\"occurence_prob_id\"\n\n                                            ref={probOfOccurRef}\n\n                                            onChange={(e) => {\n\n                                                setFormEditData(prev => ({ ...prev, [\"occurence_prob_id\"]: e.target.value }))\n                                                let opt = probOfOccurRef.current.children\n\n                                                let probOccurVl = null;\n\n                                                for (let i = 0; i < opt.length; i++) {\n\n                                                    if (opt[i].value == e.target.value) {\n                                                        probOccurVl = opt[i].innerText.split(\"-\")[0];\n                                                        setFormEditData(prev => ({ ...prev, [\"occurence_prob_name\"]: opt[i].innerText }))\n\n\n                                                    }\n\n                                                }\n\n                                                setFormEditData(prev => ({ ...prev, [\"risk_value\"]: ((formEditData[\"risk_impact\"]).split(\"-\")[0] * probOccurVl) }))\n\n\n\n\n                                            }}>\n                                            <option value=\"\">&lt;&lt;Please Select&gt;&gt;</option>\n                                            {probabilityofoccurrence.map((Item) =>\n                                                <option value={Item.id} selected={Item.id == editedData?.occurence_prob_id ? true : false}> {Item.lkup_name}</option>)}\n                                        </select>}\n                                </label>\n                            </div>\n                        </div>\n                        <div className='col-md-3 mb-2'>\n                            <div className='form-group row' >\n                                <label className='col-5'>Risk Value&nbsp;<span class=\"required\"> *</span></label>\n                                <label className='col-1 p-0'>:</label>\n                                <label className='col-6' >\n\n                                    <input type=\"Text\" className=\"error\" name=\"risk_value\" id=\"risk_value\" value={type == \"add\" ? riskValue : riskValueedited} disabled={true} style={{ cursor: \"not-allowed\" }} />\n\n\n\n                                </label>\n                            </div>\n                        </div>\n                        <div className='col-md-3'>\n                            <div className='form-group row' >\n                                <label className='col-5 '>Risk Status&nbsp;<span class=\"required\"> *</span></label>\n                                <label className='col-1 p-0'>:</label>\n                                <label className='col-6 ' >\n\n                                    {type == \"add\" ?\n                                        <select className=\"text error\" name=\"risk_status\" id=\"risk_status\" onChange={(e) => handleChange(e)}\n                                            ref={(ele) => {\n                                                ref.current[5] = ele;\n                                            }}>\n                                            <option value=\"\">&lt;&lt;Please Select&gt;&gt;</option>\n                                            {riskstatus.map((Item) =>\n                                                <option value={Item.id}> {Item.lkup_name}</option>)}</select> :\n                                        <select className='error col-md-12' name=\"risk_status\" id=\"risk_status\" onChange={(e) => setFormEditData(prev => ({ ...prev, [\"status_id\"]: e.target.value }))}  >\n                                            <option value=\"\">&lt;&lt;Please Select&gt;&gt;</option>\n                                            {riskstatus.map((Item) =>\n                                                <option value={Item.id} selected={Item.id == editedData?.status_id ? true : false}> {Item.lkup_name}</option>)}\n                                        </select>}\n\n                                </label>\n                            </div>\n                        </div>\n                        <div className='col-md-3 mb-2 ' >\n                            <div className='form-group row' >\n                                <label className='col-5'>Assigned To</label>\n                                <label className='col-1 p-0'>:</label>\n                                <label className='col-6 p0'>\n                                    {type == \"add\" ? <>\n                                        <div className='autoComplete-container' >\n                                            <ReactSearchAutocomplete\n                                                items={riskDetails}\n                                                type=\"Text\"\n                                                name=\"assigned_to\"\n                                                id=\"assigned_to\"\n                                                riskDetails={riskDetails}\n                                                getData={getData}\n                                                onSelect={(e) => { setFormData((prevProps) => ({ ...prevProps, \"assigned_to\": e.id })); }}\n                                                showIcon={false}\n\n                                            />\n\n                                        </div>\n                                        <span >{item.name}</span></>\n                                        : <>\n\n                                            <div className='autoComplete-container' >\n                                                <ReactSearchAutocomplete\n                                                    items={riskDetails}\n                                                    type=\"Text\"\n                                                    name=\"assigned_to\"\n                                                    inputSearchString={formEditData?.assigned_to}\n                                                    id=\"assigned_to\"\n                                                    riskDetails={riskDetails}\n                                                    getData={getData}\n                                                    onSelect={(e) => { setFormEditData((prev) => ({ ...prev, [\"owner_id\"]: e.id })); setAssignedid(e.id); }}\n                                                    onChange={(e) => { setFormEditData(prev => ({ ...prev, [\"owner_id\"]: e.id })) }}\n                                                    showIcon={false}\n                                                />\n                                            </div>\n\n                                            <span >{item.name}</span></>\n                                    }\n                                </label>\n                            </div>\n                        </div>\n                        <div className='col-md-3'>\n                            <div className='form-group row' >\n                                <label className='col-5 '>Risk Occurred</label>\n                                <label className='col-1 p-0'>:</label>\n                                <label className='col-6'>\n\n                                    {type == \"add\" ? <>\n                                        <div className='col-6' onChange={(e) => { setRiskOccurredDone(\"1\"); setFormData(prev => ({ ...prev, [\"is_risk_occured\"]: \"1\" })) }}>\n                                            <input className=\"form-check-input\" htmlFor=\"yes\" type=\"radio\" value=\"1\" name=\"is_risk_occured\" id=\"is_risk_occured\"\n                                                checked={formData[\"is_risk_occured\"] == \"1\" ? true : false}\n                                            />&nbsp;\n                                            <span className=\"form-check-label\" >Yes</span> </div>\n                                        <div className='col-6' onChange={(e) => { setRiskOccurredDone(\"0\"); setFormData(prev => ({ ...prev, [\"is_risk_occured\"]: \"0\" })) }}>\n                                            <input className=\"form-check-input\" htmlFor=\"no\" type=\"radio\" name=\"is_risk_occured\" id=\"is_risk_occured\" value=\"0\"\n                                                checked={formData[\"is_risk_occured\"] != \"1\" ? true : false}\n\n                                            />&nbsp;\n                                            <span className=\"form-check-label\">No</span>\n                                        </div>\n                                    </>\n                                        :\n                                        <>\n                                            <div className='col-6 '\n                                                onChange={(e) => { setFormEditData(prev => ({ ...prev, [\"is_risk_occured\"]: \"1\" })) }}>\n                                                <input className=\"form-check-input\" htmlFor=\"yes\" type=\"radio\" value=\"1\" name=\"is_risk_occured\" id=\"is_risk_occured\"\n                                                    checked={formEditData[\"is_risk_occured\"] == \"1\" ? true : false}\n                                                />&nbsp;\n                                                <span>Yes</span> </div>\n                                            <div className='col-6 ' onChange={(e) => { setFormEditData(prev => ({ ...prev, [\"is_risk_occured\"]: \"0\" })) }}>\n                                                <input className=\"form-check-input\" htmlFor=\"no\" type=\"radio\" name=\"is_risk_occured\" id=\"is_risk_occured\" value=\"0\"\n                                                    checked={formEditData[\"is_risk_occured\"] == \"0\" ? true : false}\n                                                />&nbsp;\n                                                <span>No</span>\n                                            </div>\n                                        </>\n\n                                    }\n                                </label>\n                            </div>\n                        </div>\n                        <div className='col-md-3 mb-2' >\n\n                            <div className='form-group row' classname=\"Space\" id=\"risk_occured_date\">\n                                <label className='col-5'>Occured Date</label>\n                                <label className='col-1 p-0'>:</label>\n                                <label className='col-md-6' >\n                                    {type == \"add\" ?\n                                        <DatePicker\n                                            name=\"risk_occured_date\"\n                                            id=\"risk_occured_date\"\n                                            selected={risk_occured_date}\n                                            dateFormat='dd-MMM-yyyy'\n                                            showMonthDropdown\n                                            showYearDropdown\n                                            dropdownMode=\"select\"\n\n                                            onChange={(e) => { setFormData(prev => ({ ...prev, [\"risk_occured_date\"]: (moment(e).format(\"yyyy-MM-DD\")) })); setOccurredDate(e); }} /> :\n\n                                        <DatePicker name=\"risk_occured_date\"\n                                            id=\"risk_occured_date\"\n\n                                            selected={formEditData[\"risk_occured_date\"] == undefined || null ? \"\" : moment(formEditData[\"risk_occured_date\"])._d}\n                                            dateFormat='dd-MMM-yyyy'\n                                            showMonthDropdown\n                                            showYearDropdown\n                                            dropdownMode=\"select\"\n\n                                            onChange={(e) => { setFormEditData(prev => ({ ...prev, [\"risk_occured_date\"]: (moment(e).format(\"yyyy-MM-DD\")) })); setOccurredDate(e); }} />}\n                                </label>\n                            </div>\n                        </div>\n                        <div className='col-md-3' id=\"created_by_name\">\n                            <div className='form-group row' >\n                                <label className='col-5'>Created By</label>\n                                <label className='col-1 p-0'>:</label>\n                                <label className='col-6 ' >\n                                    <div className='col-md-12 p0 '>\n\n                                        {type == \"add\" ? <input type=\"Text\" className=\"disableField\" name=\"created_by_name\" id=\"created_by_name\" readOnly defaultValue={loggedUserName} style={{ cursor: \"not-allowed\" }} disabled={true} />\n                                            : <input type=\"Text\" name=\"created_by_name\" id=\"created_by_name\" readOnly defaultValue={loggedUserName} style={{ cursor: \"not-allowed\" }} disabled={true} />}\n\n                                    </div>\n                                </label>\n                            </div>\n                        </div>\n                    </div>\n                    <div className='col-md-12'>\n                        <div className='col-md-3 mb-2' >\n                            <div className='form-group row' id=\"Risk Description\">\n                                <label className='col-md-12 p0'>Risk Description&nbsp;<span class=\"error-text ml-1\"> *</span></label>\n                            </div>\n                        </div>\n                    </div>\n                    <div className='col-md-12 mb-2 text error' ref={(ele) => {\n                        ref.current[6] = ele\n                    }} > {type == \"add\" ?\n                        <div className=\"\">\n                            <ReactQuill\n                                className=\"error\"\n                                theme=\"snow\"\n                                value={value}\n                                name=\"description\"\n                                id=\"description\"\n                                onChange={(e) => { setValue(e); setFormData(prev => ({ ...prev, [\"description\"]: value })) }}\n                                modules={editorToolBar}\n                            />\n                        </div> : <> <ReactQuill\n                            className=\"error\"\n                            theme=\"snow\"\n                            defaultValue={editedData?.description}\n                            name=\"description\"\n                            id=\"description\"\n                            onChange={(e) => { setValue(e); setFormEditData(prev => ({ ...prev, [\"description\"]: value })); }}\n                            modules={editorToolBar}\n                        /></>}\n                    </div>\n                    <div className='col-md-12' >\n                        <div className='col-md-3' id=\"mitigation_plan\">\n                            <label className='col-md-12'>Mitigation Plan</label>\n                        </div>\n                    </div>\n                    <div className='col-md-12 p0' >\n                        {type == \"add\" ?\n                            <textarea maxLength={500}\n                                rows=\"4\" cols={175}\n                                id=\"mitigation_plan\"\n                                style={{ padding: \"0px\" }}\n                                placeholder=\"Max 500 characters\"\n                                onChange={(e) => handleChange(e)} /> :\n                            <textarea maxLength={500}\n                                rows=\"4\"\n                                cols={175}\n                                id=\"mitigation_plan\"\n                                style={{ padding: \"0px\" }}\n                                placeholder=\"Max 500 characters\"\n                                defaultValue={editedData?.mitigation_plan}\n                                onChange={(e) => handleChange(e)} />} </div>\n                    <div className=\"col-md-12 col-sm-12 col-xs-12 no-padding center\">\n                        <div className=\"clearfix\" style={{ height: '10px' }}></div>\n\n                    </div>\n\n                    <div className='col-md-12'><div className=\"Space\" id=\"mitigation_date\" style={{ height: \"2px\" }}></div>\n                        <div className='col-md-3' id=\"mitigation_date\">\n                            <label className='col-md-6 p0'>Mitigation Date</label>\n                            {type == \"add\" ?\n                                <DatePicker\n                                    name=\"mitigation_date\"\n                                    id=\"mitigation_date\"\n                                    selected={mitigation_date}\n                                    dateFormat='dd-MMM-yyyy'\n                                    showMonthDropdown\n                                    showYearDropdown\n                                    dropdownMode=\"select\"\n\n                                    onChange={(e) => { setFormData(prev => ({ ...prev, [\"mitigation_date\"]: (moment(e).format(\"yyyy-MM-DD\")) })); setMitigationDate(e); }} /> :\n                                <DatePicker name=\"mitigation_date\"\n                                    id=\"mitigation_date\"\n                                    selected={formEditData[\"mitigation_date\"] == undefined || null ? \"\" : moment(formEditData[\"mitigation_date\"])._d}\n                                    dateFormat='dd-MMM-yyyy'\n                                    showMonthDropdown\n                                    showYearDropdown\n                                    dropdownMode=\"select\"\n\n                                    onChange={(e) => { setFormEditData(prev => ({ ...prev, [\"mitigation_date\"]: (moment(e).format(\"yyyy-MM-DD\")) })); setMitigationDate(e); }} />}\n                        </div>\n                    </div>\n\n                    <br />\n\n                    <div className=\"col-md-12 col-sm-12 col-xs-12 my-2 btn-container center\">\n\n                        {type == \"add\" ? <button type=\"button\" className=\"btn btn-primary\" onClick={handleAddClick} ><FaSave />Save </button> :\n                            <button type=\"button\" className=\"btn btn-primary\" onClick={handleEditClick} ><FaSave />Save </button>}\n                    </div>\n\n                </CModalBody>\n\n            </CModal>\n\n\n        </div>\n\n    )\n}\nexport default RiskPopup;","import React, { useState, useEffect } from \"react\";\nimport {\n  FaChevronCircleDown,\n  FaChevronCircleUp,\n  FaPlus,\n  FaSearch,\n} from \"react-icons/fa\";\nimport {\n  MdOutlinePlaylistAdd,\n  MdOutlineEdit,\n  MdOutlineDelete,\n} from \"react-icons/md\";\nimport RiskPopup from \"./RisksPopup\";\nimport axios from \"axios\";\nimport { environment } from \"../../environments/environment\";\nimport { AiFillEdit } from \"react-icons/ai\";\nimport { CCollapse } from \"@coreui/react\";\nimport RiskAutoComplete from \"./RiskAutocomplete\";\nimport Loader from \"../Loader/Loader\";\nimport CellRendererPrimeReactDataTable from \"../PrimeReactTableComponent/CellRendererPrimeReactDataTable\";\nimport { Column } from \"ag-grid-community\";\nimport moment from \"moment\";\nimport { BiCheck } from \"react-icons/bi\";\nimport ScreenBreadcrumbs from \"../Common/ScreenBreadcrumbs\";\n\nfunction ProjectRisks(props) {\n  const { projectId, grp4Items } = props;\n  const dataObject = grp4Items.find((item) => item.display_name === \"Risks\");\n  const baseUrl = environment.baseUrl;\n  const [visible, setVisible] = useState(false);\n  const [openPopup, setOpenPopup] = useState(false);\n  const [addmsg, setAddmsg] = useState(false);\n  const [editmsg, setEditmsg] = useState(false);\n  const [cheveronIcon, setCheveronIcon] = useState(FaChevronCircleUp);\n  const [risktype, setRiskType] = useState([]);\n  const [risksource, setRiskSource] = useState([]);\n  const [riskimpact, setRiskImpact] = useState([]);\n  const [probabilityofoccurrence, setProbabilityOfOccurrence] = useState([]);\n  const [riskstatus, setRiskStatus] = useState([]);\n  const [tableData, setTableData] = useState([]);\n  const [filterVal, setFilterVal] = useState(\"\");\n  const [searchApi, setSearchApi] = useState([]);\n  const [order, setOrder] = useState(\"ASC\");\n  const [editedData, setEditedData] = useState([]);\n  const [type, setType] = useState(\"add\");\n  const [riskDetails, setRiskDetails] = useState([]);\n  const [projectRiskDetails, setProjectRiskDetails] = useState([]);\n  const searchdata = {\n    projectid: projectId,\n    risk_type: null,\n    risk_source: null,\n    risk_impact: null,\n    occurence_prob_id: null,\n    risk_status: null,\n    assigned_to: null,\n    created_by_name: null,\n    risk_name: null,\n    is_risk_occured: null,\n  };\n  const [searching, setSearching] = useState(\"\");\n  const [formData, setFormData] = useState(searchdata);\n  const [edit, setEdit] = useState([]);\n  const [editId, setEditId] = useState();\n  const [loader, setLoader] = useState(false);\n  const [headerData, setHeaderData] = useState([]);\n  const [linkColumns, setLinkColumns] = useState([]);\n  const [linkColumnsRoutes, setLinkColumnsRoutes] = useState([]);\n  const [projectData, setProjectData] = useState([]);\n  const [prjName, setPrjName] = useState([]);\n\n  const loggedUserId = localStorage.getItem(\"resId\");\n\n  //// -------breadcrumbs-----\n\n  const [routes, setRoutes] = useState([]);\n  let textContent = \"Delivery\";\n  let currentScreenName = [\"Projects\", \"Open\", \"Monitoring\", \"Risks\"];\n\n  useEffect(() => {\n    getMenus();\n  }, []);\n\n  const getMenus = () => {\n    // setMenusData\n\n    axios({\n      method: \"GET\",\n      url: baseUrl + `/CommonMS/master/getMenus?loggedUserId=${loggedUserId}`,\n    }).then((resp) => {\n      let data = resp.data;\n\n      data.forEach((item) => {\n        if (item.display_name === textContent) {\n          setRoutes([item]);\n        }\n      });\n    });\n  };\n\n  useEffect(() => {}, [projectData]);\n  useEffect(() => {}, [editedData]);\n\n  const rows = 10;\n  const getRiskDetails = () => {\n    axios({\n      method: \"get\",\n      url: baseUrl + `/ProjectMS/risks/getDetails`,\n    })\n      .then(function (response) {\n        var response = response.data;\n        setProjectRiskDetails(response);\n      })\n      .catch(function (response) {});\n  };\n\n  useEffect(() => {}, [projectRiskDetails]);\n  useEffect(() => {}, [riskDetails]);\n\n  const getData = () => {\n    axios({\n      method: \"get\",\n      url: baseUrl + \"/ProjectMS/risks/getAssignedData\",\n    }).then(function (response) {\n      var res = response.data;\n      setRiskDetails(res);\n    });\n  };\n  useEffect(() => {\n    getRiskDetails();\n    getRiskType();\n    getRiskSource();\n    getRiskImpact();\n    getProbabilityOfOccurrence();\n    getRiskStatus();\n    getData();\n    getProjectOverviewData();\n    getProjectName();\n  }, []);\n\n  useEffect(() => {\n    getTableData();\n  }, []);\n\n  const getTableData = () => {\n    axios({\n      method: \"post\",\n      url: baseUrl + `/ProjectMS/risks/getRiskTableData`,\n      data: formData,\n    })\n      .then((res) => {\n        const GetData = res.data;\n        for (let i = 0; i < GetData.length; i++) {\n          GetData[i][\"S_No\"] = i + 1;\n        }\n        let dataHeaders = [\n          {\n            S_No: \"S.No\",\n            risk_name: \"Risk Name\",\n            risk_type: \"Risk Type\",\n            risk_source: \"Risk Source\",\n            risk_impact: \"Risk Impact\",\n            occurence_prob_name: \"Probability Of Occurrence\",\n            risk_value: \"Risk Value \",\n            assigned_to: \" Assigned To\",\n            is_risk_occured: \"Risk Occured\",\n            risk_status: \"Risk Status\",\n            risk_occured_date: \"Occurred Date\",\n            mitigation_date: \"Mitigation Date\",\n            created_by_name: \"Created By\",\n            Action: \"Action\",\n          },\n        ];\n\n        let tableData = [\"Action\"];\n        setLinkColumns(tableData);\n\n        setTableData(dataHeaders.concat(GetData));\n        setSearchApi(res.data);\n        setEdit(res.data);\n\n        setLoader(false);\n        setTimeout(() => {\n          setLoader(false);\n        }, 100);\n        setVisible(!visible);\n        visible\n          ? setCheveronIcon(FaChevronCircleUp)\n          : setCheveronIcon(FaChevronCircleDown);\n      })\n      .then((error) => {});\n  };\n\n  const getProjectOverviewData = () => {\n    axios({\n      method: \"get\",\n      url:\n        baseUrl +\n        `/ProjectMS/Audit/projectOverviewDetails?projectId=${projectId}`,\n    })\n      .then(function (response) {\n        let resp = response.data;\n        setProjectData(resp);\n      })\n      .catch(function (response) {});\n  };\n\n  const getProjectName = () => {\n    axios({\n      method: \"get\",\n      url: baseUrl + `/ProjectMS/Audit/getProjectName?projectId=${projectId}`,\n    })\n      .then(function (response) {\n        let resp = response.data;\n        setPrjName(resp);\n      })\n      .catch(function (response) {});\n  };\n\n  const LinkTemplate = (tableData) => {\n    return (\n      <div align=\"center\">\n        {grp4Items[3].is_write == true ? (\n          <div>\n            <AiFillEdit\n              title=\"edit\"\n              color=\"orange\"\n              cursor=\"pointer\"\n              type=\"edit\"\n              size=\"1.2em\"\n              onClick={() => {\n                setEditedData(tableData);\n                setEditId(tableData.id);\n                setOpenPopup(true);\n                setType(\"edit\");\n              }}\n            />\n          </div>\n        ) : (\n          \"\"\n        )}\n      </div>\n    );\n  };\n\n  const Align = (data) => {\n    return (\n      <div align=\"center\" title={data.S_No}>\n        {data.S_No}\n      </div>\n    );\n  };\n  const Align2 = (data) => {\n    return (\n      <div align=\"center\" title={data.risk_value}>\n        {data.risk_value}\n      </div>\n    );\n  };\n\n  const OccuredDate = (data) => {\n    return (\n      <div\n        align=\"center\"\n        className=\"ellipsis\"\n        title={moment(data.risk_occured_date).format(\"DD-MMM-yyyy\")}\n      >\n        {\" \"}\n        {data.risk_occured_date == null\n          ? \"\"\n          : moment(data.risk_occured_date).format(\"DD-MMM-yyyy\")}\n      </div>\n    );\n  };\n  const MitigationDate = (data) => {\n    return (\n      <div\n        align=\"center\"\n        className=\"ellipsis\"\n        title={moment(data.mitigation_date).format(\"DD-MMM-yyyy\")}\n      >\n        {data.mitigation_date == null\n          ? \"\"\n          : moment(data.mitigation_date).format(\"DD-MMM-yyyy\")}\n      </div>\n    );\n  };\n  const RiskOccured = (data) => {\n    return (\n      <div data-toggle=\"tooltip\" title={data.is_risk_occured}>\n        {data.is_risk_occured == true ? (\n          <span title=\"Yes\"> Yes</span>\n        ) : (\n          <span title=\"No\"> No</span>\n        )}\n      </div>\n    );\n  };\n\n  const RiskName = (data) => {\n    return (\n      <div data-toggle=\"tooltip\" title={data.risk_name}>\n        {data.risk_name}\n      </div>\n    );\n  };\n  const RiskType = (data) => {\n    return (\n      <div data-toggle=\"tooltip\" title={data.risk_type}>\n        {data.risk_type}\n      </div>\n    );\n  };\n  const RiskSource = (data) => {\n    return (\n      <div data-toggle=\"tooltip\" title={data.risk_source}>\n        {data.risk_source}\n      </div>\n    );\n  };\n  const RiskImpact = (data) => {\n    return (\n      <div data-toggle=\"tooltip\" title={data.risk_impact}>\n        {data.risk_impact}\n      </div>\n    );\n  };\n  const Occurance = (data) => {\n    return (\n      <div data-toggle=\"tooltip\" title={data.occurence_prob_name}>\n        {data.occurence_prob_name}\n      </div>\n    );\n  };\n  const RiskStatus = (data) => {\n    return (\n      <div data-toggle=\"tooltip\" title={data.risk_status}>\n        {data.risk_status}\n      </div>\n    );\n  };\n  const CreatedBy = (data) => {\n    return (\n      <div data-toggle=\"tooltip\" title={data.created_by_name}>\n        {data.created_by_name}\n      </div>\n    );\n  };\n\n  const dynamicColumns = Object.keys(headerData)?.map((col, i) => {\n    return (\n      <Column\n        sortable\n        key={col}\n        body={\n          col == \"Action\"\n            ? LinkTemplate\n            : col == \"S_No\"\n            ? Align\n            : col == \"risk_value\"\n            ? Align2\n            : col == \"risk_occured_date\"\n            ? OccuredDate\n            : col == \"mitigation_date\"\n            ? MitigationDate\n            : col == \"is_risk_occured\"\n            ? RiskOccured\n            : col == \"risk_name\"\n            ? RiskName\n            : col == \"risk_type\"\n            ? RiskType\n            : col == \"risk_source\"\n            ? RiskSource\n            : col == \"risk_impact\"\n            ? RiskImpact\n            : col == \"occurence_prob_name\"\n            ? Occurance\n            : col == \"risk_status\"\n            ? RiskStatus\n            : col == \"created_by_name\" && CreatedBy\n        }\n        field={col}\n        header={headerData[col]}\n      />\n    );\n  });\n\n  useEffect(() => {\n    tableData[0] && setHeaderData(JSON.parse(JSON.stringify(tableData[0])));\n  }, [tableData]);\n\n  const getRiskType = () => {\n    axios({\n      method: \"get\",\n      url: baseUrl + `/ProjectMS/risks/getRiskType`,\n    }).then((res) => {\n      var risktype = res.data;\n      setRiskType(risktype);\n    });\n  };\n\n  const getRiskSource = () => {\n    axios({\n      method: \"get\",\n      url: baseUrl + `/ProjectMS/risks/getRiskSource`,\n    }).then((res) => {\n      var risksource = res.data;\n      setRiskSource(risksource);\n    });\n  };\n\n  const getRiskImpact = () => {\n    axios({\n      method: \"get\",\n      url: baseUrl + `/ProjectMS/risks/getRiskImpact`,\n    }).then((res) => {\n      var riskimpact = res.data;\n      setRiskImpact(riskimpact);\n    });\n  };\n\n  const getProbabilityOfOccurrence = () => {\n    axios({\n      method: \"get\",\n      url: baseUrl + `/ProjectMS/risks/getProbabilityOfOccurrence`,\n    }).then((res) => {\n      var probabilityofoccurrence = res.data;\n      setProbabilityOfOccurrence(probabilityofoccurrence);\n    });\n  };\n\n  const getRiskStatus = () => {\n    axios({\n      method: \"get\",\n      url: baseUrl + `/ProjectMS/risks/getRiskStatus`,\n    }).then((res) => {\n      var riskstatus = res.data;\n      setRiskStatus(riskstatus);\n    });\n  };\n\n  const handleChange = (e) => {\n    const { id, value } = e.target;\n    setFormData((prev) => ({ ...prev, [id]: value == \"null\" ? null : value }));\n  };\n\n  const handleClick = () => {\n    getTableData();\n  };\n  const handleClear = () => {\n    setFormData((prev) => ({ ...prev, assigned_to: null }));\n  };\n\n  return (\n    <>\n      <div>\n        {addmsg ? (\n          <div className=\"statusMsg success\">\n            <BiCheck />\n            {\"Risk added Successfully\"}\n          </div>\n        ) : (\n          \"\"\n        )}\n        {editmsg ? (\n          <div className=\"statusMsg success\">\n            <BiCheck />\n            {\"Risk edited Successfully\"}\n          </div>\n        ) : (\n          \"\"\n        )}\n        <div className=\"pageTitle\">\n          <div className=\"childOne\">\n            <h2>{prjName}</h2>\n          </div>\n          <div className=\"childTwo\">\n            <h2>Risks</h2>\n          </div>\n          <div className=\"childThree\"></div>\n        </div>\n        <ScreenBreadcrumbs\n          routes={routes}\n          currentScreenName={currentScreenName}\n        />\n        <div className=\" col-mid-12 customCard\">\n          <div className=\"col-md-12 collapseHeader\">\n            <h2>Search Filters</h2>\n            <div\n              onClick={() => {\n                setVisible(!visible);\n                visible\n                  ? setCheveronIcon(FaChevronCircleUp)\n                  : setCheveronIcon(FaChevronCircleDown);\n              }}\n            >\n              <span>{cheveronIcon}</span>\n            </div>\n          </div>\n          <CCollapse visible={!visible}>\n            <div className=\"group-content row \">\n              <div className=\" col-md-3 \">\n                <div className=\"form-group row\" id=\"risk_type\">\n                  <label className=\"col-5\">Risk Type</label>\n                  <label className=\"col-1 p-0\">:</label>\n                  <label className=\"col-6\">\n                    <select\n                      class=\"col-md-12 p0\"\n                      id=\"risk_type\"\n                      onChange={(e) => handleChange(e)}\n                    >\n                      <option value=\"null\"> &lt;&lt;ALL&gt;&gt;</option>\n                      {risktype.map((Item) => (\n                        <option value={Item.id}> {Item.lkup_name}</option>\n                      ))}\n                    </select>\n                  </label>\n                </div>\n              </div>\n              <div className=\" col-md-3  \" id=\"risk_source\">\n                <div className=\"form-group row\">\n                  <label className=\"col-5\" htmlFor=\"Type-select\">\n                    Risk Source\n                  </label>\n                  <label className=\"col-1 p-0 \">:</label>\n                  <label className=\"col-6\">\n                    <select\n                      class=\"col-md-12 p0\"\n                      id=\"risk_source\"\n                      onChange={(e) => handleChange(e)}\n                    >\n                      <option value=\"null\"> &lt;&lt;ALL&gt;&gt;</option>\n                      {risksource.map((Item) => (\n                        <option value={Item.id}> {Item.lkup_name}</option>\n                      ))}\n                    </select>\n                  </label>\n                </div>\n              </div>\n              <div className=\"col-md-3  \" id=\"risk_impact\">\n                <div className=\"form-group row\">\n                  <label className=\"col-5\" htmlFor=\"Type-select\">\n                    Risk Impact\n                  </label>\n                  <label className=\"col-1 p-0\">:</label>\n                  <label className=\"col-6\">\n                    <select\n                      class=\"col-md-12 p0\"\n                      id=\"risk_impact\"\n                      onChange={(e) => handleChange(e)}\n                    >\n                      <option value=\"null\"> &lt;&lt;ALL&gt;&gt;</option>\n                      {riskimpact.map((Item) => (\n                        <option value={Item.id}> {Item.lkup_name}</option>\n                      ))}\n                    </select>\n                  </label>\n                </div>\n              </div>\n              <div className=\"col-md-3\">\n                <div className=\"form-group row mb-2\" id=\"occurence_prob_id\">\n                  <label className=\"col-5\">Probability Of Occurrence</label>\n                  <label className=\"col-1 p-0\">:</label>\n                  <label className=\"col-6\">\n                    <select\n                      class=\"col-md-12 p0\"\n                      id=\"occurence_prob_id\"\n                      onChange={(e) => handleChange(e)}\n                    >\n                      <option value=\"null\"> &lt;&lt;ALL&gt;&gt;</option>\n                      {probabilityofoccurrence.map((Item) => (\n                        <option value={Item.id}> {Item.lkup_name}</option>\n                      ))}\n                    </select>\n                  </label>\n                </div>\n              </div>\n              <div className=\"col-md-3 \" id=\"risk_name\">\n                <div className=\"form-group row mb-2\">\n                  <label className=\"col-5\">Risk Name</label>\n                  <label className=\"col-1 p-0\">:</label>\n                  <label className=\"col-6\">\n                    <input\n                      type=\"Text\"\n                      name=\"Risk Name To\"\n                      id=\"risk_name\"\n                      onChange={(e) => {\n                        const { id, value } = e.target;\n                        setFormData((prev) => ({\n                          ...prev,\n                          [\"risk_name\"]: value == \"\" ? null : value,\n                        }));\n                      }}\n                    />\n                  </label>\n                </div>\n              </div>\n\n              <div className=\"col-md-3 \" id=\"is_risk_occured\">\n                <div className=\"form-group row\">\n                  <label className=\"col-5\">Risk Occurred</label>\n                  <label className=\"col-1 p-0\">:</label>\n                  <label className=\"col-6\">\n                    <select\n                      class=\"col-md-12 p0\"\n                      id=\"is_risk_occured\"\n                      onChange={(e) => handleChange(e)}\n                    >\n                      <option value=\"null\"> &lt;&lt;ALL&gt;&gt;</option>\n                      <option value=\"1\" id=\"1\">\n                        {\" \"}\n                        Yes{\" \"}\n                      </option>\n                      <option value=\"0\" id=\"0\">\n                        {\" \"}\n                        No{\" \"}\n                      </option>\n                    </select>\n                  </label>\n                </div>\n              </div>\n              <div className=\"col-md-3 \" id=\"risk_status\">\n                <div className=\"form-group row\">\n                  <label className=\"col-5\">Risk Status</label>\n                  <label className=\"col-1 p-0\">:</label>\n                  <label className=\"col-6\">\n                    <select\n                      class=\"col-md-12 p0\"\n                      id=\"risk_status\"\n                      onChange={(e) => handleChange(e)}\n                    >\n                      <option value=\"null\"> &lt;&lt;ALL&gt;&gt;</option>\n                      {riskstatus.map((Item) => (\n                        <option value={Item.id}> {Item.lkup_name}</option>\n                      ))}\n                    </select>\n                  </label>\n                </div>\n              </div>\n              <div className=\"col-md-3 mb-2\">\n                <div className=\"form-group row\" id=\"assigned_to\">\n                  <label className=\"col-5 form-label\">Assigned To</label>\n                  <label className=\"col-1 p-0\">:</label>\n                  <div className=\"col-6\">\n                    <div className=\"autoComplete-container\">\n                      <RiskAutoComplete\n                        id=\"assigned_to\"\n                        name=\"assigned_to\"\n                        riskDetails={riskDetails}\n                        getData={getData}\n                        setFormData={setFormData}\n                        onChange={(e) => {\n                          const { id, value } = e.target;\n                          setFormData((prev) => ({\n                            ...prev,\n                            [\"assigned_to\"]: id == \"\" ? null : id,\n                          }));\n                        }}\n                        editedData={editedData}\n                        onClear={handleClear}\n                      />\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"col-md-3 \" id=\"created_by_name\">\n                <div className=\"form-group row\">\n                  <label className=\"col-5\">Created By</label>\n                  <label className=\"col-1 p-0\">:</label>\n                  <label className=\"col-6 \">\n                    <input\n                      type=\"Text\"\n                      name=\"created_by_name\"\n                      id=\"created_by_name\"\n                      onChange={(e) => {\n                        const { id, value } = e.target;\n                        setFormData((prev) => ({\n                          ...prev,\n                          [\"created_by_name\"]: value == \"\" ? null : value,\n                        }));\n                      }}\n                    />\n                  </label>\n                </div>\n              </div>\n\n              <div class=\"col-md-12 col-sm-12 col-xs-12 my-2 btn-container center\">\n                <button\n                  type=\"button\"\n                  className=\"btn btn-primary\"\n                  value={searching}\n                  onClick={() => handleClick()}\n                >\n                  <FaSearch /> Search{\" \"}\n                </button>{\" \"}\n              </div>\n            </div>\n          </CCollapse>\n          {loader ? <Loader /> : \"\"}\n        </div>\n        <div className=\"body col-xs-12 col-sm-12 col-md-12 col-lg-12 customCard\">\n          <div className=\"\">\n            <div class=\"col-md-12 no-padding\">\n              <CellRendererPrimeReactDataTable\n                data={tableData}\n                linkColumns={linkColumns}\n                linkColumnsRoutes={linkColumnsRoutes}\n                dynamicColumns={dynamicColumns}\n                headerData={headerData}\n                setHeaderData={setHeaderData}\n                rows={rows}\n              />\n              {dataObject?.is_write == true ? (\n                <div className=\"col-md-12 col-sm-12 col-xs-12 my-2 btn-container center\">\n                  <button\n                    type=\"button\"\n                    className=\"btn btn-primary\"\n                    onClick={() => {\n                      setOpenPopup(true);\n                      setType(\"add\");\n                    }}\n                  >\n                    <FaPlus />\n                    Add\n                  </button>\n                </div>\n              ) : (\n                \"\"\n              )}\n            </div>\n          </div>\n          {openPopup ? (\n            <RiskPopup\n              openPopup={openPopup}\n              setOpenPopup={setOpenPopup}\n              projectRiskDetails={projectRiskDetails}\n              type={type}\n              getTableData={getTableData}\n              editId={editId}\n              addmsg={addmsg}\n              setAddmsg={setAddmsg}\n              editmsg={editmsg}\n              setEditmsg={setEditmsg}\n              setEditedData={setEditedData}\n              editedData={editedData}\n              projectId={projectId}\n              tableData={tableData}\n              projectData={projectData}\n            />\n          ) : (\n            \"\"\n          )}\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default ProjectRisks;\n[];\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { CModal } from \"@coreui/react\";\nimport { CModalBody } from \"@coreui/react\";\nimport { CModalHeader, CModalTitle } from \"@coreui/react\";\nimport { environment } from \"../../environments/environment\";\nimport moment from \"moment\";\nimport { AiOutlineLeftSquare, AiOutlineRightSquare } from \"react-icons/ai\";\nimport Draggable from \"react-draggable\";\nimport { AiFillEdit } from \"react-icons/ai\";\nimport { DataTable } from \"primereact/datatable\";\nimport { Column } from \"ag-grid-community\";\nimport { MdOutlineAdd } from \"react-icons/md\";\nimport { TfiSave } from \"react-icons/tfi\";\nimport { ImCross } from \"react-icons/im\";\nimport { AiFillDelete } from \"react-icons/ai\";\nimport { FaPlus, FaSave } from \"react-icons/fa\";\nfunction PlannedActivities(props) {\n  const {\n    setMessage,\n    setPlannedAddMessage,\n    projectId,\n    validation,\n    setValidation,\n    grp4Items,\n  } = props;\n  console.log(grp4Items[1].is_write);\n  const dataObject = grp4Items.find(\n    (item) => item.display_name === \"Planned Activities\"\n  );\n  const [category, setCategory] = useState([]);\n  const [buttonPopup, setButtonPopup] = useState(false);\n  const [uid, setUid] = useState(0);\n  const [plannedActivities, setPlannedActivities] = useState(\"\");\n  const [clicked, setClicked] = useState(false);\n  const [saveCliked, setSaveClicked] = useState(true);\n  const [cancelClicked, setCancelClicked] = useState(true);\n  const [inputValue, setInputValue] = useState(\"\");\n  const [editEnabled, setEditEnabled] = useState(false);\n  const [actiondisable, setActiondisable] = useState(false);\n\n  ///////////////////////////////////////////////////////////////////////\n\n  const dates = {\n    fromDate: moment().startOf(\"week\").add(\"days\", 8).format(\"YYYY-MM-DD\"),\n    toDate: moment().startOf(\"week\").add(\"days\", 14).format(\"YYYY-MM-DD\"),\n  };\n  const [dt, setDt] = useState(dates);\n\n  const addHandler = () => {\n    setDt((prev) => ({\n      ...prev,\n      [\"fromDate\"]: moment(dt.fromDate).add(\"days\", 7).format(\"YYYY-MM-DD\"),\n    }));\n\n    setDt((prev) => ({\n      ...prev,\n      [\"toDate\"]: moment(dt.fromDate).add(\"days\", 13).format(\"YYYY-MM-DD\"),\n    }));\n    setCancelClicked(true);\n    setSaveClicked(true);\n    setClicked(false);\n  };\n\n  const subtracHandler = () => {\n    setDt((prev) => ({\n      ...prev,\n      [\"fromDate\"]: moment(dt.fromDate)\n        .subtract(\"days\", 7)\n        .format(\"YYYY-MM-DD\"),\n    }));\n\n    setDt((prev) => ({\n      ...prev,\n      [\"toDate\"]: moment(dt.toDate).subtract(\"days\", 7).format(\"YYYY-MM-DD\"),\n    }));\n    setCancelClicked(true);\n    setSaveClicked(true);\n    setClicked(false);\n  };\n\n  //////axios for getting the details in to the table////////\n\n  const baseUrl = environment.baseUrl;\n  const getPlannedActivitiesData = () => {\n    axios({\n      url:\n        baseUrl +\n        `/ProjectMS/PlannedActivities/getProjectPlannedActivities?pid=${projectId}&fromDate=${dt.fromDate}&toDate=${dt.toDate}`,\n    }).then((res) => {\n      setCategory(res.data);\n    });\n  };\n\n  useEffect(() => {\n    getPlannedActivitiesData();\n  }, [dt]);\n\n  //////axios for posting the details in to the table////////\n  const handleSave = () => {\n    if (plannedActivities === \"\") {\n      setValidation(true);\n      if (validation === true) {\n        setCancelClicked(true);\n        setSaveClicked(true);\n        setClicked(false);\n      } else {\n        setCancelClicked(false);\n        setSaveClicked(false);\n        setClicked(true);\n      }\n      return;\n    } else {\n      let data;\n      if (category.find((item) => item.id === inputValue)) {\n        data = {\n          id: inputValue,\n          ProjectId: projectId,\n          plannedActivity: plannedActivities,\n          fromDate: moment(dt.fromDate).format(\"YYYY-MM-DD\"),\n        };\n      } else {\n        data = {\n          ProjectId: projectId,\n          plannedActivity: plannedActivities,\n          fromDate: moment(dt.fromDate).format(\"YYYY-MM-DD\"),\n        };\n      }\n      axios({\n        method: \"post\",\n        url:\n          baseUrl + `/ProjectMS/PlannedActivities/postProjectPlannedActivities`,\n        data: data,\n      }).then((error) => {\n        getPlannedActivitiesData();\n        setValidation(false);\n        setClicked(false);\n        setSaveClicked(true);\n        setCancelClicked(true);\n        setPlannedAddMessage(true);\n        setTimeout(() => {\n          setPlannedAddMessage(false);\n        }, 3000);\n        setPlannedActivities(\"\");\n      });\n\n      setEditEnabled(false);\n    }\n  };\n\n  //////axios for deleting the details from the table////////\n\n  const plannedactivitiesdelete = () => {\n    axios({\n      method: \"delete\",\n      url:\n        baseUrl +\n        `/ProjectMS/PlannedActivities/deleteProjectPlannedActivities?id=${uid}`,\n      data: uid,\n    }).then((error) => {\n      setUid(0);\n      getPlannedActivitiesData();\n      setButtonPopup(false);\n      setMessage(true);\n      setTimeout(() => {\n        setMessage(false);\n      }, 3000);\n    });\n  };\n  ////////////Functions///////////////////////\n  const renderRowActions = (rowData) => {\n    return (\n      <div style={{ paddingLeft: \"40px\" }}>\n        {grp4Items[1].is_write != true ? (\n          \"\"\n        ) : (\n          <label cursor=\"pointer\">\n            <AiFillEdit\n              title=\"Edit\"\n              style={{\n                backgroundColor: actiondisable ? \"#eee\" : \"\",\n                cursor: actiondisable ? \"not-allowed\" : \"pointer\",\n                opacity: actiondisable ? \".7\" : \"\",\n              }}\n              className=\"mr-1\"\n              color=\"orange\"\n              onClick={() => {\n                setInputValue(rowData.id);\n                setSaveClicked(false);\n                setCancelClicked(false);\n                setClicked(true);\n                plannedactivitiestextfiled();\n                setEditEnabled(true);\n              }}\n            />\n            &nbsp;\n            <AiFillDelete\n              title=\"Delete\"\n              style={{\n                backgroundColor: actiondisable ? \"#eee\" : \"\",\n                cursor: actiondisable ? \"not-allowed\" : \"pointer\",\n                opacity: actiondisable ? \".7\" : \"\",\n              }}\n              color=\"orange\"\n              onClick={() => {\n                setButtonPopup(true);\n                setUid(rowData.id);\n              }}\n            />\n          </label>\n        )}\n      </div>\n    );\n  };\n  const plannedactivitiestextfiled = (category, rowData) => {\n    const handleChange = (e) => {\n      setPlannedActivities(e.target.value);\n    };\n    const handleKeyDown = (event) => {\n      if (event.keyCode === 32) {\n        // Check if the key pressed is the space key\n        const value = event.target.value;\n        const selectionStart = event.target.selectionStart;\n\n        // Prevent space if it's at the beginning of the input\n        if (selectionStart === 0) {\n          event.preventDefault();\n          return;\n        }\n\n        // Allow the space if it follows a non-space character\n        if (value[selectionStart - 1] !== \" \") {\n          return;\n        }\n\n        event.preventDefault(); // Prevent the space from being entered\n      }\n    };\n    return (\n      <>\n        {category?.id === inputValue && editEnabled === true ? (\n          <input\n            className={\n              validation === true ? \"error-block ellipsis\" : \"ellipsis\"\n            }\n            type=\"text\"\n            id=\"plannedActivities\"\n            name=\"plannedActivities\"\n            title={category.plannedActivities}\n            defaultValue={category?.plannedActivities}\n            onChange={handleChange}\n            onKeyDown={handleKeyDown}\n          />\n        ) : (\n          category?.plannedActivities !== \"\" && (\n            <p className=\"ellipsis\" title={category?.plannedActivities}>\n              {category?.plannedActivities}\n            </p>\n          )\n        )}\n        {category?.plannedActivities === \"\" && (\n          <input\n            className={`error ${\n              validation && !category?.rowData?.accomplishment\n                ? \"error-block ellipsis\"\n                : \"ellipsis\"\n            }`}\n            type=\"text\"\n            id=\"plannedActivities\"\n            name=\"plannedActivities\"\n            title={category.plannedActivities}\n            value={category.rowData?.plannedActivities}\n            onChange={(e) => setPlannedActivities(e.target.value)}\n            onKeyDown={handleKeyDown}\n          />\n        )}\n      </>\n    );\n  };\n  useEffect(() => {\n    if (category[0]?.plannedActivities == \"\") {\n      document.getElementsByClassName(\"p-row-editor-init p-link\")[0]?.click();\n      setTimeout(() => {\n        document\n          .getElementsByClassName(\"p-row-editor-cancel p-link\")[0]\n          ?.addEventListener(\n            \"click\",\n            function (e) {\n              if (category[0]?.plannedActivities == \"\") {\n                setPlannedActivities(category.slice(2, category.length));\n                setValidation(false);\n              }\n            },\n            true\n          );\n      }, 200);\n    }\n  }, [category]);\n  const addRow = () => {\n    let daa = document.getElementsByClassName(\n      \"p-paginator-first p-paginator-element p-link\"\n    )[1];\n\n    daa.click();\n    const data = {\n      plannedActivities: \"\",\n      Actions: \"\",\n    };\n    let dt = [];\n    dt.push(data);\n    setCategory([...dt, ...category]);\n\n    setClicked(true);\n    setCancelClicked(false);\n    setSaveClicked(false);\n  };\n\n  const Reset = () => {\n    document.getElementsByClassName(\"p-row-editor-cancel p-link\")[0]?.click();\n    getPlannedActivitiesData();\n    setEditEnabled(false);\n    setClicked(false);\n    setCancelClicked(true);\n    setSaveClicked(true);\n    setValidation(false);\n    setActiondisable(false);\n  };\n  const Save = () => {\n    document\n      .getElementsByClassName(\"p-row-editor-save-icon pi pi-fw pi-check\")[0]\n      ?.click();\n    handleSave();\n    if (validation === true) {\n      setCancelClicked(true);\n      setSaveClicked(true);\n      setClicked(false);\n    } else {\n      setCancelClicked(false);\n      setSaveClicked(false);\n      setClicked(true);\n    }\n  };\n  const onRowEditComplete = (e) => {\n    let _category = [category];\n    let { newData, index } = e;\n    _category[index] = newData;\n    setCategory(_category);\n    postData(e.newData);\n    setClicked(true);\n  };\n\n  ////////////////////////////////////////////\n  function PlannedActivitiesDeletePopUp(props) {\n    const { plannedactivitiesdelete, buttonPopup, setButtonPopup } = props;\n    return (\n      <div>\n        <Draggable>\n          <CModal\n            alignment=\"center\"\n            backdrop=\"static\"\n            size=\"default\"\n            visible={buttonPopup}\n            className=\"ui-dialog\"\n            onClose={() => setButtonPopup(false)}\n          >\n            <CModalHeader style={{ cursor: \"all-scroll\" }}>\n              <CModalTitle>\n                <span className=\"\">Delete Planned Activity</span>\n              </CModalTitle>\n            </CModalHeader>\n            <CModalBody>\n              <h6>Are you sure to delete Planned Activity ?</h6>\n              <div className=\"btn-container center my-2\">\n                <button\n                  type=\"button\"\n                  title=\"Delete\"\n                  className=\"btn btn-primary\"\n                  onClick={() => {\n                    plannedactivitiesdelete();\n                  }}\n                >\n                  <TfiSave />\n                  Delete\n                </button>\n\n                <button\n                  type=\"button\"\n                  title=\"Cancel\"\n                  className=\"btn btn-secondary\"\n                  onClick={() => {\n                    setButtonPopup(false);\n                  }}\n                >\n                  <ImCross />\n                  Cancel\n                </button>\n              </div>\n            </CModalBody>\n          </CModal>\n        </Draggable>\n      </div>\n    );\n  }\n\n  return (\n    <div>\n      <div>\n        <div>\n          <span style={{ fontWeight: \"600\" }}>\n            {moment(dt.fromDate).format(\"DD-MMM-YYYY\")} to &nbsp;\n            {moment(dt.toDate).format(\"DD-MMM-YYYY\")}\n          </span>\n          <span className=\"float-end\">\n            <AiOutlineLeftSquare\n              cursor=\"pointer\"\n              size={\"2em\"}\n              onClick={subtracHandler}\n            ></AiOutlineLeftSquare>\n            <AiOutlineRightSquare\n              cursor=\"pointer\"\n              size={\"2em\"}\n              onClick={addHandler}\n            ></AiOutlineRightSquare>\n          </span>\n        </div>\n        <br />\n\n        <div className=\"darkHeader\">\n          <DataTable\n            value={category}\n            editMode=\"row\"\n            showGridlines\n            emptyMessage=\"No Records To View\"\n            scrollDirection=\"both\"\n            paginator\n            stripedRows\n            rows={25}\n            onRowEditComplete={onRowEditComplete}\n            className=\"primeReactDataTable \"\n            paginatorTemplate=\"RowsPerPageDropdown FirstPageLink PrevPageLink CurrentPageReport NextPageLink LastPageLink\"\n            currentPageReportTemplate=\"{first} to {last} of {totalRecords}\"\n            rowsPerPageOptions={[10, 25, 50]} // //------------->\n          >\n            <Column\n              className=\"ellipsis\"\n              body={plannedactivitiestextfiled}\n              field=\"plannedActivities\"\n              header=\"Planned Activities\"\n              editor={(options) => plannedactivitiestextfiled(options)}\n              sortable\n            />\n            {grp4Items[1].is_write == true && (\n              <Column\n                body={renderRowActions}\n                header=\"Action\"\n                bodyStyle={{ textAlign: \"align center\" }}\n                sortable\n                style={{ width: \" 135px\" }}\n              ></Column>\n            )}\n          </DataTable>\n          {dataObject?.is_write != true ? (\n            \"\"\n          ) : (\n            <div className=\"form-group col-md-2 btn-container-events center my-3\">\n              <button\n                className=\"btn btn-primary\"\n                disabled={clicked}\n                onClick={() => {\n                  addRow();\n                  setActiondisable(true);\n                }}\n                variant=\"contained\"\n              >\n                <FaPlus /> Add\n              </button>\n              <button\n                className=\"btn btn-primary\"\n                disabled={saveCliked}\n                variant=\"contained\"\n                onClick={() => {\n                  Save();\n                  if (validation == true) {\n                    setClicked(true);\n                    setCancelClicked(false);\n                    setSaveClicked(false);\n                  }\n                  setActiondisable(false);\n                }}\n              >\n                <FaSave /> Save\n              </button>\n              <button\n                className=\"btn btn-primary\"\n                disabled={cancelClicked}\n                onClick={() => {\n                  Reset();\n                  setClicked(false);\n                  setPlannedActivities(\"\");\n                }}\n                variant=\"contained\"\n              >\n                <ImCross fontSize={\"11px\"} /> Cancel\n              </button>\n            </div>\n          )}\n        </div>\n        {buttonPopup ? (\n          <PlannedActivitiesDeletePopUp\n            plannedactivitiesdelete={plannedactivitiesdelete}\n            buttonPopup={buttonPopup}\n            setButtonPopup={setButtonPopup}\n          />\n        ) : (\n          \"\"\n        )}\n      </div>\n    </div>\n  );\n}\nexport default PlannedActivities;\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { CModal, CModalTitle } from \"@coreui/react\";\nimport { CModalBody } from \"@coreui/react\";\nimport { CModalHeader } from \"@coreui/react\";\nimport { environment } from \"../../environments/environment\";\nimport PlannedActivities from \"./PlannedActivities\";\nimport { AiOutlineLeftSquare, AiOutlineRightSquare } from \"react-icons/ai\";\nimport moment from \"moment\";\nimport Draggable from \"react-draggable\";\nimport { BiCheck } from \"react-icons/bi\";\nimport { AiFillEdit } from \"react-icons/ai\";\nimport { DataTable } from \"primereact/datatable\";\nimport { Column } from \"ag-grid-community\";\nimport { MdOutlineAdd } from \"react-icons/md\";\nimport { TfiSave } from \"react-icons/tfi\";\nimport { ImCross } from \"react-icons/im\";\nimport { AiFillDelete } from \"react-icons/ai\";\nimport { AiFillWarning } from \"react-icons/ai\";\nimport { FaPlus, FaSave } from \"react-icons/fa\";\nimport ScreenBreadcrumbs from \"../Common/ScreenBreadcrumbs\";\nfunction ProjectAccomplishments(props) {\n  const { projectId, grp4Items } = props;\n  console.log(grp4Items[1].is_write);\n  const dataObject = grp4Items.find(\n    (item) => item.display_name === \"Accomplishments\"\n  );\n\n  const loggedUserId = localStorage.getItem(\"resId\");\n  const [category, setCategory] = useState([]);\n  const [accomplishment, setAccomplishment] = useState(\"\");\n  const [buttonPopup, setButtonPopup] = useState(false);\n  const [uid, setUid] = useState(0);\n  const [updateMessage, setUpdateMessage] = useState(false);\n  const [addMessage, setAddMessage] = useState(false);\n  const [prjName, setPrjName] = useState([]);\n  const [message, setMessage] = useState(false);\n  const [plannedAddMessage, setPlannedAddMessage] = useState(false);\n  const [clicked, setClicked] = useState(false);\n  const [saveCliked, setSaveClicked] = useState(true);\n  const [cancelClicked, setCancelClicked] = useState(true);\n  const [inputValue, setInputValue] = useState(\"\");\n  const [editEnabled, setEditEnabled] = useState(false);\n  const [valid, setvalid] = useState(false);\n  const [validation, setValidation] = useState(false);\n  const [actiondisable, setActiondisable] = useState(false);\n  ///////////////////Add and Subtract Dates in top of the Table////////////////////////\n\n  const dates = {\n    fromDate: moment().startOf(\"week\").add(\"days\", 1).format(\"YYYY-MM-DD\"),\n    toDate: moment().startOf(\"week\").add(\"days\", 7).format(\"YYYY-MM-DD\"),\n  };\n  const [dt, setDt] = useState(dates);\n\n  const addHandler = () => {\n    setDt((prev) => ({\n      ...prev,\n      [\"fromDate\"]: moment(dt.fromDate).add(\"days\", 7).format(\"YYYY-MM-DD\"),\n    }));\n\n    setDt((prev) => ({\n      ...prev,\n      [\"toDate\"]: moment(dt.toDate).add(\"days\", 7).format(\"YYYY-MM-DD\"),\n    }));\n    setCancelClicked(true);\n    setSaveClicked(true);\n    setClicked(false);\n  };\n\n  const subtracHandler = () => {\n    setDt((prev) => ({\n      ...prev,\n      [\"fromDate\"]: moment(dt.fromDate)\n        .subtract(\"days\", 7)\n        .format(\"YYYY-MM-DD\"),\n    }));\n\n    setDt((prev) => ({\n      ...prev,\n      [\"toDate\"]: moment(dt.toDate).subtract(\"days\", 7).format(\"YYYY-MM-DD\"),\n    }));\n    setCancelClicked(true);\n    setSaveClicked(true);\n    setClicked(false);\n  };\n\n  //// -------breadcrumbs-----\n\n  const [routes, setRoutes] = useState([]);\n  let textContent = \"Delivery\";\n  let currentScreenName = [\n    \"Projects\",\n    \"Open\",\n    \"Monitoring\",\n    \"Accomplishments and Planned Activities\",\n  ];\n\n  useEffect(() => {\n    getMenus();\n  }, []);\n\n  const getMenus = () => {\n    // setMenusData\n\n    axios({\n      method: \"GET\",\n      url: baseUrl + `/CommonMS/master/getMenus?loggedUserId=${loggedUserId}`,\n    }).then((resp) => {\n      let data = resp.data;\n\n      data.forEach((item) => {\n        if (item.display_name === textContent) {\n          setRoutes([item]);\n        }\n      });\n    });\n  };\n\n  //////axios for getting the details in to the table////////\n\n  const baseUrl = environment.baseUrl;\n  const getAccomplishmentData = () => {\n    axios({\n      url:\n        baseUrl +\n        `/ProjectMS/Accomplishments/getProjectDateAccomplishments?fromDate=${dt.fromDate}&toDate=${dt.toDate}&pid=${projectId}`,\n    }).then((res) => {\n      setCategory(res.data);\n    });\n  };\n  useEffect(() => {\n    getAccomplishmentData();\n  }, [dt]);\n\n  //////axios for saving the details in to the table////////\n\n  const handleSave = () => {\n    if (accomplishment === \"\") {\n      setvalid(true);\n\n      setCancelClicked(true);\n      setSaveClicked(true);\n      setClicked(false);\n    } else {\n      setCancelClicked(false);\n      setSaveClicked(false);\n      setClicked(true);\n      let data;\n      if (category.find((item) => item.id === inputValue)) {\n        data = {\n          id: inputValue,\n          projectId: projectId,\n          accomplishment: accomplishment,\n          createdDate: moment(dt.fromDate).format(\"YYYY-MM-DD\"),\n        };\n      } else {\n        data = {\n          projectId: projectId,\n          accomplishment: accomplishment,\n          createdDate: moment(dt.fromDate).format(\"YYYY-MM-DD\"),\n        };\n      }\n      axios({\n        method: \"post\",\n        url: baseUrl + `/ProjectMS/Accomplishments/postAccomplishmentsDetails`,\n        data: data,\n      }).then((error) => {\n        getAccomplishmentData();\n        setAddMessage(true);\n        setClicked(false);\n        setSaveClicked(true);\n        setCancelClicked(true);\n        setvalid(false);\n        setTimeout(() => {\n          setAddMessage(false);\n        }, 3000);\n        setAccomplishment(\"\");\n      });\n      setEditEnabled(false);\n    }\n  };\n\n  //////axios for deleting the details from the table////////\n\n  const accomplishmentDelete = () => {\n    axios({\n      method: \"delete\",\n      url:\n        baseUrl +\n        `/ProjectMS/Accomplishments/deleteAccomplishmentsDetails?id=${uid}`,\n      data: uid,\n    }).then((error) => {\n      setUid(0);\n      getAccomplishmentData();\n      setButtonPopup(false);\n      setUpdateMessage(true);\n      setTimeout(() => {\n        setUpdateMessage(false);\n      }, 3000);\n    });\n  };\n  /////////----------Axios for projectName------------///////////////\n  const getProjectOverviewData = () => {\n    axios({\n      method: \"get\",\n      url:\n        baseUrl +\n        `/ProjectMS/Audit/projectOverviewDetails?projectId=${projectId}`,\n    })\n      .then(function (response) {\n        let resp = response.data;\n        setPrjName(resp);\n      })\n      .catch(function (response) {});\n  };\n\n  useEffect(() => {\n    getProjectOverviewData();\n  }, []);\n\n  ////////////////Delete PopUp///////////////////////////////\n  function AccomplishmentsDelete(props) {\n    const { accomplishmentDelete, buttonPopup, setButtonPopup } = props;\n    return (\n      <div>\n        <Draggable>\n          <CModal\n            alignment=\"center\"\n            backdrop=\"static\"\n            size=\"default\"\n            visible={buttonPopup}\n            className=\"ui-dialog\"\n            onClose={() => setButtonPopup(false)}\n          >\n            <CModalHeader style={{ cursor: \"all-scroll\" }}>\n              <CModalTitle>\n                <span className=\"\">Delete Accomplishments</span>\n              </CModalTitle>\n            </CModalHeader>\n            <CModalBody>\n              <h6>Are you sure to delete Accomplishments ?</h6>\n              <div className=\"btn-container center my-2\">\n                <button\n                  type=\"button\"\n                  title=\"Delete\"\n                  className=\"btn btn-primary\"\n                  onClick={() => {\n                    accomplishmentDelete();\n                  }}\n                >\n                  <TfiSave />\n                  Delete\n                </button>\n\n                <button\n                  type=\"button\"\n                  title=\"Cancel\"\n                  className=\"btn btn-primary\"\n                  onClick={() => {\n                    setButtonPopup(false);\n                  }}\n                >\n                  <ImCross />\n                  Cancel\n                </button>\n              </div>\n            </CModalBody>\n          </CModal>\n        </Draggable>\n      </div>\n    );\n  }\n\n  /////////////////Functions OF Data Table////////////////////\n  const renderRowActions = (rowData) => {\n    return (\n      <div style={{ paddingLeft: \"40px\" }}>\n        {grp4Items[1].is_write == true ? (\n          <label cursor=\"pointer\">\n            <AiFillEdit\n              title=\"Edit\"\n              style={{\n                backgroundColor: actiondisable ? \"#eee\" : \"\",\n                cursor: actiondisable ? \"not-allowed\" : \"pointer\",\n                opacity: actiondisable ? \".7\" : \"\",\n              }}\n              disabled={actiondisable}\n              className=\"mr-1\"\n              color=\"orange\"\n              onClick={() => {\n                setSaveClicked(false);\n                setCancelClicked(false);\n                setClicked(true);\n                accomplishmentstextfiled();\n                setEditEnabled(true);\n                setInputValue(rowData.id);\n              }}\n            />\n            &nbsp;\n            <AiFillDelete\n              title=\"Delete\"\n              style={{\n                backgroundColor: actiondisable ? \"#eee\" : \"\",\n                cursor: actiondisable ? \"not-allowed\" : \"pointer\",\n                opacity: actiondisable ? \".7\" : \"\",\n              }}\n              color=\"orange\"\n              onClick={() => {\n                setButtonPopup(true);\n                setUid(rowData.id);\n              }}\n            />\n          </label>\n        ) : (\n          \"\"\n        )}\n      </div>\n    );\n  };\n\n  const accomplishmentstextfiled = (category, rowData) => {\n    const handleChange = (e) => {\n      setAccomplishment(e.target.value);\n      setClicked(true);\n    };\n    const handleKeyDown = (event) => {\n      if (event.keyCode === 32) {\n        // Check if the key pressed is the space key\n        const value = event.target.value;\n        const selectionStart = event.target.selectionStart;\n\n        // Prevent space if it's at the beginning of the input\n        if (selectionStart === 0) {\n          event.preventDefault();\n          return;\n        }\n\n        // Allow the space if it follows a non-space character\n        if (value[selectionStart - 1] !== \" \") {\n          return;\n        }\n\n        event.preventDefault(); // Prevent the space from being entered\n      }\n    };\n\n    return (\n      <>\n        {category?.id === inputValue && editEnabled === true ? (\n          <input\n            className={valid === true ? \"error-block ellipsis\" : \"ellipsis\"}\n            type=\"text\"\n            id=\"accomplishment\"\n            name=\"accomplishment\"\n            title={category.accomplishment}\n            defaultValue={category?.accomplishment}\n            onChange={handleChange}\n            onKeyDown={handleKeyDown}\n          />\n        ) : (\n          category?.accomplishment !== \"\" && (\n            <p className=\"ellipsis\" title={category?.accomplishment}>\n              {category?.accomplishment}\n            </p>\n          )\n        )}\n        {category?.accomplishment === \"\" && (\n          <input\n            className={`error ${\n              valid && !category?.rowData?.accomplishment\n                ? \"error-block ellipsis\"\n                : \"ellipsis\"\n            }`}\n            type=\"text\"\n            id=\"accomplishment\"\n            name=\"accomplishment\"\n            title={category.accomplishment}\n            value={category.rowData?.accomplishment}\n            onChange={(e) => setAccomplishment(e.target.value)}\n            onKeyDown={handleKeyDown}\n          />\n        )}\n      </>\n    );\n  };\n\n  useEffect(() => {\n    if (category[0]?.accomplishment == \"\") {\n      document.getElementsByClassName(\"p-row-editor-init p-link\")[0]?.click();\n      setTimeout(() => {\n        document\n          .getElementsByClassName(\"p-row-editor-cancel p-link\")[0]\n          ?.addEventListener(\n            \"click\",\n            function (e) {\n              if (category[0]?.accomplishment == \"\") {\n                setAccomplishment(category.slice(2, category.length));\n                setvalid(false);\n              }\n            },\n            true\n          );\n      }, 200);\n    }\n  }, [category]);\n\n  const addRow = () => {\n    let daa = document.getElementsByClassName(\n      \"p-paginator-first p-paginator-element p-link\"\n    )[0];\n\n    daa.click();\n    const data = {\n      accomplishment: \"\",\n      Actions: \"\",\n    };\n    let dt = [];\n    dt.push(data);\n    setCategory([...dt, ...category]);\n    if (valid === true) {\n      setCancelClicked(true);\n      setSaveClicked(true);\n      setClicked(false);\n    } else {\n      setCancelClicked(false);\n      setSaveClicked(false);\n      setClicked(true);\n    }\n  };\n\n  const Reset = () => {\n    document.getElementsByClassName(\"p-row-editor-cancel p-link\")[0]?.click();\n    getAccomplishmentData();\n    setEditEnabled(false);\n    setClicked(false);\n    setCancelClicked(true);\n    setSaveClicked(true);\n    setvalid(false);\n    setActiondisable(false);\n  };\n\n  const Save = () => {\n    document\n      .getElementsByClassName(\"p-row-editor-save-icon pi pi-fw pi-check\")[0]\n      ?.click();\n    handleSave();\n    if (valid === true) {\n      setCancelClicked(true);\n      setSaveClicked(true);\n      setClicked(false);\n    } else {\n      setCancelClicked(false);\n      setSaveClicked(false);\n      setClicked(true);\n    }\n  };\n  const onRowEditComplete = (e) => {\n    let _category = [category];\n    let { newData, index } = e;\n    _category[index] = newData;\n    setCategory(_category);\n    postData(e.newData);\n    setClicked(true);\n  };\n\n  return (\n    <div>\n      {prjName.map((list) => (\n        <div className=\"pageTitle\">\n          <div className=\"childOne\">\n            <h2>\n              {list.projectName}({list.projectCode})\n            </h2>\n          </div>\n          <div className=\"childTwo\">\n            <h2>Accomplishments and Planned Activities</h2>\n          </div>\n          <div className=\"childThree\"></div>\n        </div>\n      ))}\n      <ScreenBreadcrumbs\n        routes={routes}\n        currentScreenName={currentScreenName}\n      />\n      <div className=\"customCard\">\n        {updateMessage ? (\n          <div className=\"statusMsg success\">\n            <BiCheck />\n            {\"Accomplishment Deleted Successfully\"}\n          </div>\n        ) : (\n          \"\"\n        )}\n        {addMessage ? (\n          <div className=\"statusMsg success\">\n            <BiCheck />\n            {\"Accomplishment saved successfully.\"}\n          </div>\n        ) : (\n          \"\"\n        )}\n        {message ? (\n          <div className=\"statusMsg success\">\n            <BiCheck />\n            {\"Planned Activity Deleted successfully\"}\n          </div>\n        ) : (\n          \"\"\n        )}\n        {plannedAddMessage ? (\n          <div className=\"statusMsg success\">\n            <BiCheck />\n            {\"Planned Activity saved successfully.\"}\n          </div>\n        ) : (\n          \"\"\n        )}\n        {valid ? (\n          <div className=\"statusMsg error\">\n            <AiFillWarning /> {\"Please Enter the highlighted field\"}\n          </div>\n        ) : (\n          \" \"\n        )}\n        {validation ? (\n          <div className=\"statusMsg error\">\n            <AiFillWarning /> {\"Please Enter the highlighted field\"}\n          </div>\n        ) : (\n          \" \"\n        )}\n        <div className=\"row mt-2\">\n          <div className=\"col-md-6\">\n            <div>\n              <span style={{ fontWeight: \"600\" }}>\n                {moment(dt.fromDate).format(\"DD-MMM-YYYY\")} to &nbsp;\n                {moment(dt.toDate).format(\"DD-MMM-YYYY\")}\n              </span>\n              <span className=\"float-end\">\n                <AiOutlineLeftSquare\n                  cursor=\"pointer\"\n                  size={\"2em\"}\n                  onClick={subtracHandler}\n                ></AiOutlineLeftSquare>\n                <AiOutlineRightSquare\n                  cursor=\"pointer\"\n                  size={\"2em\"}\n                  onClick={addHandler}\n                ></AiOutlineRightSquare>\n              </span>\n            </div>\n            <br />\n\n            <div div className=\"darkHeader\">\n              <DataTable\n                value={category}\n                editMode=\"row\"\n                showGridlines\n                emptyMessage=\"No Records To View\"\n                scrollDirection=\"both\"\n                paginator\n                stripedRows\n                rows={25}\n                onRowEditComplete={onRowEditComplete}\n                className=\"primeReactDataTable \"\n                paginatorTemplate=\"RowsPerPageDropdown FirstPageLink PrevPageLink CurrentPageReport NextPageLink LastPageLink\"\n                currentPageReportTemplate=\"{first} to {last} of {totalRecords}\"\n                rowsPerPageOptions={[10, 25, 50]} // //------------->\n              >\n                <Column\n                  body={accomplishmentstextfiled}\n                  field=\"accomplishment\"\n                  header=\"Accomplishments\"\n                  title={accomplishment}\n                  editor={(options) => accomplishmentstextfiled(options)}\n                  sortable\n                />\n                {grp4Items[1].is_write == true && (\n                  <Column\n                    body={renderRowActions}\n                    header=\"Action\"\n                    bodyStyle={{ textAlign: \"align center\" }}\n                    sortable\n                    style={{ width: \" 135px\" }}\n                  ></Column>\n                )}\n              </DataTable>\n              {dataObject?.is_write == true ? (\n                <div className=\"form-group col-md-2 btn-container-events center my-3\">\n                  <button\n                    className=\"btn btn-primary\"\n                    disabled={clicked}\n                    onClick={() => {\n                      addRow();\n                      setActiondisable(true);\n                    }}\n                    variant=\"contained\"\n                  >\n                    <FaPlus /> Add\n                  </button>\n                  <button\n                    className=\"btn btn-primary\"\n                    disabled={saveCliked}\n                    variant=\"contained\"\n                    onClick={() => {\n                      Save();\n                      if (valid == true) {\n                        setClicked(true);\n                        setCancelClicked(false);\n                        setSaveClicked(false);\n                      }\n                      setActiondisable(false);\n                    }}\n                  >\n                    <FaSave /> Save\n                  </button>\n                  <button\n                    className=\"btn btn-primary\"\n                    disabled={cancelClicked}\n                    onClick={() => {\n                      Reset();\n                      setClicked(false);\n                      setAccomplishment(\"\");\n                    }}\n                    variant=\"contained\"\n                  >\n                    <ImCross fontSize={\"11px\"} /> Cancel\n                  </button>\n                </div>\n              ) : (\n                \"\"\n              )}\n            </div>\n\n            {buttonPopup ? (\n              <AccomplishmentsDelete\n                accomplishmentDelete={accomplishmentDelete}\n                buttonPopup={buttonPopup}\n                setButtonPopup={setButtonPopup}\n              />\n            ) : (\n              \"\"\n            )}\n          </div>\n\n          <div className=\"col-md-6\">\n            <PlannedActivities\n              setMessage={setMessage}\n              setPlannedAddMessage={setPlannedAddMessage}\n              projectId={projectId}\n              validation={validation}\n              setValidation={setValidation}\n              grp4Items={grp4Items}\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\nexport default ProjectAccomplishments;\n","import React, { useEffect, useRef, useState } from \"react\";\nimport { DataTable } from \"primereact/datatable\";\nimport { Column } from \"primereact/column\";\nimport axios from \"axios\";\nimport { environment } from \"../../environments/environment\";\nimport moment from \"moment\";\nimport { AiFillWarning } from \"react-icons/ai\";\nimport { BiCheck } from \"react-icons/bi\";\nimport DatePicker from \"react-datepicker\";\nimport Loader from \"../Loader/Loader\";\nimport { ImCross } from \"react-icons/im\";\nimport { ReactSearchAutocomplete } from \"react-search-autocomplete\";\nimport \"./ProjectStake.scss\";\nimport { InputText } from \"primereact/inputtext\";\nimport { FilterMatchMode, FilterOperator } from \"primereact/api\";\nimport { FaPlus, FaSave } from \"react-icons/fa\";\nimport ScreenBreadcrumbs from \"../Common/ScreenBreadcrumbs\";\n\nfunction projectStakeholders(props) {\n  const [products, setProducts] = useState([{}]);\n\n  const [addMessage, setAddMessage] = useState(false);\n  const [validateproject, setValidateproject] = useState(false);\n  const [loader, setLoader] = useState(false);\n  const [searching, setSearching] = useState(true);\n  const [buttonDisabled, setButtonDisabled] = useState(true);\n  const [valid, setValid] = useState(false);\n  const baseUrl = environment.baseUrl;\n  const abortController = useRef(null);\n  const componentRef = useRef(null);\n  const [issueDetails, setIssueDetails] = useState([]);\n  const [roles, SetRoles] = useState([]);\n  const [obj, SetObj] = useState(\"\");\n  const [UserId, setUserId] = useState();\n  const [RoleValue, setRoleValue] = useState();\n  const [ObjectRoleTypeIdValue, setObjectRoleTypeIdValue] = useState();\n  const [selectedCustomer, setSelectedCustomer] = useState(null);\n  const [projectData, setProjectData] = useState([]);\n  const loggedUserName = localStorage.getItem(\"resName\");\n  const loggedUserId = localStorage.getItem(\"resId\");\n\n  const { projectId, grp1Items } = props;\n  const dataObject = grp1Items.find(\n    (item) => item.display_name === \"Stakeholders\"\n  );\n\n  const [permissions, setPermissions] = useState([]);\n\n  const [routes, setRoutes] = useState([]);\n  let currentScreenName = [\"Projects\", \"Open\", \"Project\", \"Stakeholders\"];\n  let textContent = \"Delivery\";\n\n  const getMenus = () => {\n    axios({\n      method: \"GET\",\n      url: baseUrl + `/CommonMS/master/getMenus?loggedUserId=${loggedUserId}`,\n    }).then((resp) => {\n      let data = resp.data;\n\n      data.forEach((item) => {\n        if (item.display_name === textContent) {\n          setRoutes([item]);\n        }\n      });\n    });\n  };\n\n  useEffect(() => {\n    getMenus();\n  }, []);\n\n  const [filters, setFilters] = useState({\n    global: { value: null, matchMode: FilterMatchMode.CONTAINS },\n    name: {\n      operator: FilterOperator.AND,\n      constraints: [{ value: null, matchMode: FilterMatchMode.STARTS_WITH }],\n    },\n\n    representative: { value: null, matchMode: FilterMatchMode.IN },\n    status: {\n      operator: FilterOperator.OR,\n      constraints: [{ value: null, matchMode: FilterMatchMode.EQUALS }],\n    },\n  });\n\n  const initialValue = {\n    project_id: projectId,\n    Role: \"\",\n    Userid: \"\",\n    FromDate: \"\",\n    ToDate: \"\",\n    comments: \"\",\n  };\n  const [formData, setFormData] = useState(initialValue);\n  useEffect(() => {}, [\n    formData,\n    obj,\n    formData?.Role,\n    formData?.Userid,\n    UserId,\n  ]);\n  const onRowEditComplete = (e) => {\n    let _products = [...products];\n    let { newData, index } = e;\n    _products[index] = newData;\n\n    setProducts(_products);\n    handleAddClick(e.newData);\n  };\n  const [rowid, setRowID] = useState();\n\n  const handleAddClick = (rowData, index) => {\n    const putdata = () => {\n      var data = {\n        id: rowid,\n        LastUpdatedBy: loggedUserName,\n        LastUpdatedById: loggedUserId,\n        Version: \"0\",\n        assignedBy: loggedUserId,\n        IsActive: \"1\",\n        CreatedBy: loggedUserName,\n        ObjectTypeCode: \"ObjectRole\",\n        IsResolved: \"1\",\n        IsManualAssignment: \"0\",\n        ObjectId: projectId,\n        Role: obj == \"\" ? ObjectRoleTypeIdValue : obj,\n        User: formData?.Userid == \"\" ? UserId : formData?.Userid,\n        // ObjectTypeRoleTypeId: 1,\n\n        FromDate:\n          formData?.FromDate == \"\"\n            ? moment(rowData?.FromDate).format(\"yyyy-MM-DD\")\n            : formData?.FromDate,\n        ToDate:\n          formData?.ToDate === \"\"\n            ? moment(rowData?.ToDate).format(\"yyyy-MM-DD\")\n            : formData?.ToDate,\n        object_type_id: 3,\n        role_type_id: formData?.Role == \"\" ? RoleValue : formData?.Role,\n      };\n\n      axios({\n        method: \"post\",\n        url:\n          baseUrl +\n          `/ProjectMS/stakeholders/postDetailsinBaseDomainobjectroles`,\n        data: data,\n      }).then((error) => {\n        setLoader(false);\n        setAddMessage(true);\n        setTimeout(() => {\n          setAddMessage(false);\n          setLoader(false);\n        }, 3000);\n        setValidateproject(false);\n        getData();\n\n        setFormData(initialValue);\n      });\n      setButtonDisabled(true);\n      setValid(false);\n    };\n\n    const postdata = () => {\n      var data1 = {\n        LastUpdatedBy: loggedUserName,\n        LastUpdatedById: loggedUserId,\n        Version: \"0\",\n        assignedBy: loggedUserId,\n        IsActive: \"1\",\n        CreatedBy: loggedUserName,\n        ObjectTypeCode: \"ObjectRole\",\n        IsResolved: \"1\",\n        IsManualAssignment: \"0\",\n        ObjectId: projectId,\n        Role: obj,\n        User: formData.Userid,\n        FromDate:\n          formData.FromDate == \"\"\n            ? projectData[0]?.plandStartDate\n            : formData.FromDate,\n        ToDate:\n          formData.ToDate == \"\"\n            ? projectData[0]?.plandEndDate\n            : formData?.ToDate,\n        object_type_id: 3,\n        role_type_id: formData.Role,\n        ObjectTypeRoleTypeId: 1,\n      };\n\n      if (formData.Role === \"\" || formData.Userid === \"\") {\n        setValidateproject(true);\n      } else {\n        if (formData.Role != \"\" || formData.Userid !== \"\") {\n          axios({\n            method: \"post\",\n            url:\n              baseUrl +\n              `/ProjectMS/stakeholders/postDetailsinBaseDomainobjectroles`,\n            data: data1,\n          }).then((error) => {\n            setValidateproject(false);\n            setSearching(false);\n            setFormData(initialValue);\n            setLoader(false);\n            setAddMessage(true);\n            setTimeout(() => {\n              setAddMessage(false);\n              setLoader(false);\n              setSearching(true);\n              getData();\n            }, 1000);\n          });\n\n          setButtonDisabled(true);\n          setValid(false);\n        }\n      }\n    };\n    {\n      rowData.id != undefined ? putdata() : postdata();\n    }\n  };\n\n  const getRoles = () => {\n    axios({\n      url: baseUrl + `/ProjectMS/stakeholders/getRoles`,\n    }).then((resp) => {\n      SetRoles(resp.data);\n    });\n  };\n  const getProjectData = () => {\n    axios({\n      method: \"get\",\n      url:\n        baseUrl +\n        `/ProjectMS/Audit/projectOverviewDetails?projectId=${projectId}`,\n    })\n      .then(function (response) {\n        let resp = response.data;\n        setProjectData(resp);\n      })\n      .catch(function (response) {});\n  };\n\n  const getObjectTypeId = () => {\n    axios({\n      url:\n        baseUrl +\n        `/ProjectMS/stakeholders/getObjectTypeId?id=${formData?.Role}`,\n    }).then((resp) => {\n      SetObj(resp.data);\n    });\n  };\n  useEffect(() => {\n    getProjectData();\n    let prod = products[0];\n\n    if (products[0]?.Role == \"\") {\n      const icon = document.getElementsByClassName(\n        \"p-row-editor-init p-link\"\n      )[0];\n      icon?.setAttribute(\"title\", \"Edit selected row\");\n      icon?.click();\n      setTimeout(() => {\n        const saveIcon = document.getElementsByClassName(\n          \"p-row-editor-save p-link\"\n        )[0];\n        saveIcon?.setAttribute(\"title\", \"Save row\");\n        const cancelIcon = document.getElementsByClassName(\n          \"p-row-editor-cancel p-link\"\n        )[0];\n        cancelIcon?.setAttribute(\"title\", \"Cancel row editing\");\n\n        cancelIcon?.addEventListener(\n          \"click\",\n          function (e) {\n            if (products[0]?.Role === \"\") {\n              setProducts(products.slice(1, products.length));\n              setButtonDisabled(true);\n              setValidateproject(false);\n              setValid(false);\n              componentRef.current?.forceUpdate();\n            }\n          },\n          true\n        );\n      }, 200);\n    }\n  }, [products]);\n\n  useEffect(() => {\n    let prnt = document.getElementsByClassName(\"p-row-editor-init p-link\");\n\n    let tempProducts = JSON.parse(\n      JSON.stringify(products.filter((d) => d.id != undefined))\n    );\n\n    if (!loader && prnt != undefined) {\n      setTimeout(() => {\n        for (let i = 0; i < prnt.length; i++) {\n          if (tempProducts[i]?.AssignmentType == \"System\") {\n            prnt[i].classList.add(\"disableRow\");\n          }\n          prnt[i].setAttribute(\"title\", \"Edit\");\n        }\n      }, 1000);\n    }\n  }, [products, loader]);\n\n  const Save = () => {\n    document\n      .getElementsByClassName(\"p-row-editor-save-icon pi pi-fw pi-check\")[0]\n      ?.click();\n  };\n\n  const Reset = () => {\n    document.getElementsByClassName(\"p-row-editor-cancel p-link\")[0]?.click();\n    setValidateproject(false);\n  };\n  useEffect(() => {}, [\n    projectData[0]?.plandStartDate,\n    projectData[0]?.plandEndDate,\n  ]);\n\n  const textEditorUser = (products) => {\n    setRowID(products.rowData.id);\n    return (\n      <div className=\"autoComplete-container\">\n        <div\n          className={` ${\n            validateproject && !products.rowData.User ? \"error-block\" : \"\"\n          }`}\n        >\n          <ReactSearchAutocomplete\n            items={issueDetails}\n            type=\"Text\"\n            name=\"Userid\"\n            id=\"Userid\"\n            value={products.rowData.User}\n            fuseOptions={{ keys: [\"id\", \"name\", \"employee_number\"] }}\n            resultStringKeyName=\"name\"\n            // className=\"err cancel nochange\"\n            issueDetails={issueDetails}\n            inputSearchString={\n              products.rowData.User == null ? \"\" : products.rowData.User\n            }\n            getUser={getUser}\n            //   onSelect={handleAddFormChange}\n            onSelect={(e) => {\n              products.editorCallback(e.name);\n\n              {\n                setFormData((prevProps) => ({\n                  ...prevProps,\n                  Userid: e.userId,\n                }));\n              }\n            }}\n            showIcon={false}\n          />\n        </div>\n      </div>\n    );\n  };\n  const statusbodyEvents = (rowData) => {\n    return <div title={rowData.Role}> {rowData.Role}</div>;\n  };\n  const UserbodyEvents = (rowData) => {\n    return <div title={rowData.User}>{rowData.User}</div>;\n  };\n\n  const statusbodyComments = (rowData) => {\n    return <div title={rowData.date_created}>{rowData.date_created}</div>;\n  };\n  const statusassignedBy = (rowData) => {\n    setRoleValue(rowData.Roleid);\n    return <div title={rowData.assignedBy}>{rowData.assignedBy}</div>;\n  };\n  const [assignmentType, setAssignmentType] = useState(\"\");\n\n  const statusAssignmentType = (rowData) => {\n    let d = rowData.AssignmentType;\n\n    setAssignmentType(d);\n\n    return <div title={rowData.AssignmentType}>{rowData.AssignmentType}</div>;\n  };\n  useEffect(() => {}, [UserId, assignmentType]);\n  const textEditorDate = (products) => {\n    setUserId(products.rowData?.user_id);\n\n    const today = new Date();\n\n    return (\n      <DatePicker\n        className={`error ${\n          validateproject && !products.rowData.FromDate ? \"error-block\" : \"\"\n        }`}\n        name=\"FromDate\"\n        id=\"FromDate\"\n        selected={products.FromDate}\n        showMonthDropdown\n        showYearDropdown={true}\n        autoComplete=\"off\"\n        dropdownMode=\"select\"\n        value={products.rowData.FromDate}\n        dateFormat=\"DD-MMM-yyyy\"\n        onChange={(e) => {\n          const selectedDate = moment(e).format(\"DD-MMM-yyyy\");\n          products.editorCallback(selectedDate);\n          setFormData((prev) => ({\n            ...prev,\n            [\"FromDate\"]: moment(e).format(\"yyyy-MM-DD\"),\n          }));\n        }}\n        onKeyDown={(e) => {\n          e.preventDefault();\n        }}\n        minDate={moment(projectData[0]?.plandStartDate).toDate()}\n        maxDate={moment(projectData[0]?.plandEndDate).toDate()}\n      />\n    );\n  };\n\n  const textToDate = (products) => {\n    return (\n      <DatePicker\n        className={`error ${\n          validateproject && !products.rowData.ToDate ? \"error-block\" : \"\"\n        }`}\n        name=\"ToDate\"\n        id=\"ToDate\"\n        autoComplete=\"off\"\n        selected={products.ToDate}\n        showMonthDropdown\n        showYearDropdown={true}\n        dropdownMode=\"select\"\n        value={products.rowData.ToDate}\n        dateFormat=\"DD-MMM-yyyy\"\n        onChange={(e) => {\n          const selectedDate = moment(e).format(\"yyyy-MM-DD\");\n          products.editorCallback(selectedDate);\n          setFormData((prev) => ({\n            ...prev,\n            [\"ToDate\"]: moment(e).format(\"yyyy-MM-DD\"),\n          }));\n        }}\n        onKeyDown={(e) => {\n          e.preventDefault();\n        }}\n        minDate={moment(projectData[0]?.plandStartDate).toDate()}\n        maxDate={moment(projectData[0]?.plandEndDate).toDate()}\n      />\n    );\n  };\n\n  const statusbodyDate = (rowData) => {\n    return <div title={rowData.FromDate}>{rowData.FromDate}</div>;\n  };\n  const statusToDate = (rowData) => {\n    return <div title={rowData.ToDate}>{rowData.ToDate}</div>;\n  };\n\n  const getUser = () => {\n    axios({\n      method: \"get\",\n      url: baseUrl + `/ProjectMS/risks/getAssignedData`,\n    }).then(function (response) {\n      var res = response.data;\n      setIssueDetails(res);\n    });\n  };\n  useEffect(() => {}, [issueDetails]);\n  useEffect(\n    (rowData) => {\n      getUser();\n      getRoles();\n      getObjectTypeId();\n    },\n    [formData?.Role]\n  );\n\n  const getData = () => {\n    setLoader(false);\n    abortController.current = new AbortController();\n    axios({\n      url:\n        baseUrl +\n        `/ProjectMS/stakeholders/getStakeHolderDetails?ObjectId=${projectId}`,\n    }).then((resp) => {\n      const GetData = resp.data;\n      for (let i = 0; i < GetData.length; i++) {\n        GetData[i][\"date_created\"] =\n          GetData[i][\"date_created\"] == null\n            ? \"\"\n            : moment(GetData[i][\"date_created\"]).format(\"DD-MMM-YYYY\");\n        GetData[i][\"FromDate\"] =\n          GetData[i][\"FromDate\"] == null\n            ? \"\"\n            : moment(GetData[i][\"FromDate\"]).format(\"DD-MMM-YYYY\");\n        GetData[i][\"ToDate\"] =\n          GetData[i][\"ToDate\"] == null\n            ? \"\"\n            : moment(GetData[i][\"ToDate\"]).format(\"DD-MMM-YYYY\");\n        GetData[i][\"AssignmentType\"] =\n          GetData[i][\"AssignmentType\"] == null\n            ? \"\"\n            : GetData[i][\"AssignmentType\"] == true\n            ? \"System\"\n            : \"Manual\";\n        GetData[i][\"IsActive\"] =\n          GetData[i][\"IsActive\"] == null\n            ? \"\"\n            : GetData[i][\"IsActive\"] == 1\n            ? \"YES\"\n            : \"NO\";\n        GetData[i][\"User\"] =\n          GetData[i][\"User\"] === null ? \"\" : GetData[i][\"User\"];\n      }\n\n      setProducts(GetData);\n\n      setTimeout(() => {\n        setLoader(false);\n      }, 1000);\n    });\n  };\n\n  const handleAbort = () => {\n    abortController.current && abortController.current.abort();\n    setLoader(false);\n  };\n\n  useEffect(() => {\n    getData();\n  }, []);\n  const textEditorEventName = (products) => {\n    setObjectRoleTypeIdValue(products.rowData?.ObjectRoleTypeId);\n\n    return (\n      <div>\n        <div>\n          <select\n            id=\"Role\"\n            name=\"Role\"\n            className={`error${\n              validateproject && !products.rowData.Roleid ? \" error-block\" : \"\"\n            }`}\n            onChange={(e) => {\n              setFormData((prevProps) => ({\n                ...prevProps,\n                Role: e.target.value,\n              }));\n            }}\n          >\n            <option value=\"\">{\"<<Please Select>>\"}</option>\n            {roles?.map((item) => (\n              <option\n                key={item.id}\n                value={item.id}\n                selected={item.id === products.rowData.Roleid}\n              >\n                {item.display_name}\n              </option>\n            ))}\n          </select>\n        </div>\n      </div>\n    );\n  };\n\n  const addHandler = () => {\n    if (!valid) {\n      setValid(true);\n      setButtonDisabled(false);\n    }\n    const data = {\n      Role: \"\",\n      FromDate: moment(projectData[0]?.plandStartDate).format(\"DD-MMM-yyyy\"),\n      ToDate: moment(projectData[0]?.plandEndDate).format(\"DD-MMM-yyyy\"),\n      User: \"\",\n    };\n    let dt = [];\n    dt.push(data);\n    setProducts([...dt, ...products]);\n  };\n\n  const [globalFilter, setGlobalFilter] = useState(\"\");\n\n  const handleGlobalFilterChange = (event) => {\n    setGlobalFilter(event.target.value);\n  };\n  const renderHeader = () => {\n    return (\n      <>\n        <span className=\"p-input-icon-left stakeTableSearch\">\n          <i className=\"pi pi-search\" />\n          <InputText\n            type=\"search\"\n            style={{ float: \"right\" }}\n            value={globalFilter}\n            onChange={(e) => handleGlobalFilterChange(e)}\n            placeholder=\"Keyword Search\"\n          />\n        </span>\n      </>\n    );\n  };\n  const header = renderHeader();\n\n  const filteredData = products.filter((item) =>\n    Object.values(item).some((value) =>\n      String(value).toLowerCase().includes(globalFilter.toLowerCase())\n    )\n  );\n\n  return (\n    <>\n      {validateproject ? (\n        <div className=\"statusMsg error\">\n          <span>\n            <AiFillWarning />\n            &nbsp;\n            {\"Please provide the valid values for highlighted fields\"}\n          </span>\n        </div>\n      ) : (\n        \"\"\n      )}\n      {addMessage ? (\n        <div className=\"statusMsg success\">\n          <BiCheck />\n          {\"Role saved successfully.\"}\n        </div>\n      ) : (\n        \"\"\n      )}\n\n      {projectData.map((list) => (\n        <div className=\"col-md-12\">\n          <div className=\"pageTitle\">\n            <div className=\"childOne\">\n              <h2>\n                {list.projectName}({list.projectCode})\n              </h2>\n            </div>\n            <div className=\"childTwo\">\n              <h2>Stakeholders</h2>\n            </div>\n            <div className=\"childThree\"></div>\n          </div>\n        </div>\n      ))}\n      <ScreenBreadcrumbs\n        routes={routes}\n        currentScreenName={currentScreenName}\n      />\n\n      {loader ? (\n        <div className=\"loaderBlock\">\n          <Loader handleAbort={handleAbort} />\n        </div>\n      ) : (\n        \"\"\n      )}\n      {searching ? (\n        <div className=\"customercard darkHeader mt-2\">\n          <DataTable\n            className=\"primeReactDataTable invoicingSearchTable   projectStakeholderTable\"\n            value={filteredData}\n            onRowEditComplete={onRowEditComplete}\n            paginator\n            editMode=\"row\"\n            rows={1500}\n            header={header}\n            filters={filters}\n            onFilter={(e) => setFilters(e.filters)}\n            selection={selectedCustomer}\n            onSelectionChange={(e) => setSelectedCustomer(e.value)}\n            dataKey=\"id\"\n            showGridlines\n            stripedRows\n            scrollHeight=\"480px\"\n            // stateStorage=\"session\"\n            // stateKey=\"dt-state-demo-local\"\n            responsiveLayout=\"scroll\"\n            emptyMessage=\"No Records found.\"\n          >\n            <Column\n              field=\"Role\"\n              header=\"Role\"\n              sortable\n              body={statusbodyEvents}\n              editor={(options) => textEditorEventName(options)}\n            ></Column>\n            <Column\n              field=\"User\"\n              header=\"User\"\n              sortable\n              body={UserbodyEvents}\n              editor={(options) => textEditorUser(options)}\n            ></Column>\n            <Column\n              field=\"FromDate\"\n              header={<span>From Date</span>}\n              sortable\n              body={statusbodyDate}\n              editor={(options) => textEditorDate(options)}\n            />\n            <Column\n              field=\"ToDate\"\n              header={<span>To Date</span>}\n              sortable\n              body={statusToDate}\n              editor={(options) => textToDate(options)}\n            />\n\n            <Column\n              field=\"AssignmentType\"\n              header=\"Assignment Type\"\n              sortable\n              body={statusAssignmentType}\n            ></Column>\n            <Column\n              field=\"assignedBy\"\n              header=\"Assigned By\"\n              sortable\n              body={statusassignedBy}\n            ></Column>\n            <Column\n              field=\"date_created\"\n              header=\"Assigned Date\"\n              sortable\n              body={statusbodyComments}\n            ></Column>\n            <Column field=\"IsActive\" header=\"IsActive\" sortable></Column>\n\n            {/* {permissions === \"HIER_FULL\" && (\n              <Column\n                field=\"Actions\"\n                style={{ textAlign: \"center\" }}\n                header=\"Actions\"\n                rowEditor\n                sortable\n              ></Column>\n            )} */}\n            {dataObject.is_write === true && (\n              <Column\n                field=\"Actions\"\n                style={{ textAlign: \"center\" }}\n                header=\"Actions\"\n                rowEditor\n                sortable\n              ></Column>\n            )}\n          </DataTable>\n        </div>\n      ) : (\n        \"\"\n      )}\n      <div className=\"form-group col-md-2 btn-container-events center my-3\">\n        {/* {permissions == \"HIER_FULL\" ? (\n          <button\n            className=\"btn btn-primary\"\n            disabled={valid}\n            title={\"Add new row\"}\n            onClick={addHandler}\n          >\n            <FaPlus /> Add\n          </button>\n        ) : (\n          \"\"\n        )} */}\n        {dataObject?.is_write === true ? (\n          <button\n            className=\"btn btn-primary\"\n            disabled={valid}\n            title={\"Add new row\"}\n            onClick={addHandler}\n          >\n            <FaPlus /> Add\n          </button>\n        ) : null}\n\n        {/* {permissions == \"HIER_FULL\" ? (\n          <button\n            id=\"isShow\"\n            className=\"btn btn-primary\"\n            disabled={buttonDisabled}\n            title={\"Save row\"}\n            onClick={() => {\n              Save();\n            }}\n          >\n            <FaSave /> Save\n          </button>\n        ) : (\n          \"\"\n        )} */}\n        {dataObject?.is_write === true ? (\n          <button\n            id=\"isShow\"\n            className=\"btn btn-primary\"\n            disabled={buttonDisabled}\n            title={\"Save row\"}\n            onClick={() => {\n              Save();\n            }}\n          >\n            <FaSave /> Save\n          </button>\n        ) : null}\n\n        {/* {permissions == \"HIER_FULL\" ? (\n          <button\n            className=\"btn btn-secondary\"\n            disabled={buttonDisabled}\n            title={\"Cancel row editing\"}\n            onClick={() => {\n              Reset();\n            }}\n          >\n            <ImCross fontSize={\"11px\"} /> Cancel\n          </button>\n        ) : (\n          \"\"\n        )} */}\n        {dataObject?.is_write === true ? (\n          <button\n            className=\"btn btn-secondary\"\n            disabled={buttonDisabled}\n            title={\"Cancel row editing\"}\n            onClick={() => {\n              Reset();\n            }}\n          >\n            <ImCross fontSize={\"11px\"} /> Cancel\n          </button>\n        ) : null}\n      </div>\n      {/* {loader ? <Loader handleAbort={handleAbort} /> : \"\"} */}\n    </>\n  );\n}\nexport default projectStakeholders;\n","import React from \"react\";\nimport { environment } from \"../../environments/environment\";\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport \"./Project.scss\";\nimport Loader from \"../Loader/Loader\";\nimport moment from \"moment/moment\";\n\nfunction StatusKpi(props) {\n  ////////----------------------------Getting KPI data--------------------------////////\n  const [Data, setData] = useState([{}]);\n  const { pid, sd, ed } = props;\n  const [loader, setLoader] = useState(false);\n  const [legend, setLegend] = useState(true);\n  const baseUrl = environment.baseUrl;\n  console.log(moment(sd).format(\"yyyy-MM-DD\"));\n  console.log(ed);\n  let container = document.createElement(\"div\");\n\n  const getData = () => {\n    setLoader(false);\n    axios\n      .get(baseUrl + `/ProjectMS/project/kpidata?ProjectId=${pid}`)\n      .then((res) => {\n        const GetData = res.data;\n        setData(GetData);\n        setLoader(false);\n      })\n      .catch((error) => {\n        setLoader(false);\n      });\n  };\n  container.innerHTML = Data[0]?.currency_id;\n\n  useEffect(() => {\n    getData();\n  }, [sd]);\n  useEffect(() => {\n    getData();\n  }, [ed]);\n  ////////--------------------------Getting KPI data END------------------------////////\n\n  return (\n    <div className=\"darkHeader\">\n      {loader ? <Loader /> : \"\"}\n      <table className=\"table  table-bordered  display\">\n        <thead className=\"grayBg\">\n          <tr>\n            <th width=\"5%\" height=\"10px\">\n              {Data.map((Details) =>\n                Details.var_dc < -6 ||\n                Details.var_dur < -6 ||\n                Details.var_efforts < -6 ||\n                Details.var_margin < -6 ||\n                Details.var_oc < -6 ||\n                Details.var_rev < -6 ? (\n                  <div className=\"projectStatus\">\n                    <span\n                      className=\"circle red\"\n                      title=\"Atleast one indicator is red\"\n                    ></span>\n                    <span className=\"circle\"></span>\n                    <span className=\"circle\"></span>\n                  </div>\n                ) : (\n                  <div className=\"projectStatus\">\n                    <span className=\"circle\"></span>\n                    <span className=\"circle\"></span>\n                    <span\n                      className=\"circle green\"\n                      title=\"All indicators are green or Just one indicator is yellow and others are being green\"\n                    ></span>\n                  </div>\n                )\n              )}\n            </th>\n            <th\n              width=\"15%\"\n              style={{ textAlign: \"center\", verticalAlign: \"middle\" }}\n            >\n              KPI\n            </th>\n            <th\n              width=\"8%\"\n              style={{ textAlign: \"center\", verticalAlign: \"middle\" }}\n            >\n              Contracted Value\n            </th>\n            <th\n              width=\"13%\"\n              style={{ textAlign: \"center\", verticalAlign: \"middle\" }}\n            >\n              Latest Total Planned (LTP)\n            </th>\n            <th\n              width=\"11%\"\n              style={{ textAlign: \"center\", verticalAlign: \"middle\" }}\n            >\n              Planned to Date (PTD)\n            </th>\n            <th\n              width=\"11%\"\n              style={{ textAlign: \"center\", verticalAlign: \"middle\" }}\n            >\n              Actual to Date (ATD)\n            </th>\n            <th\n              width=\"13%\"\n              style={{ textAlign: \"center\", verticalAlign: \"middle\" }}\n            >\n              Estimate To Complete (ETC)\n            </th>\n            <th\n              width=\"13%\"\n              style={{ textAlign: \"center\", verticalAlign: \"middle\" }}\n            >\n              Estimate At Completion (EAC)\n            </th>\n            <th\n              width=\"12%\"\n              style={{ textAlign: \"center\", verticalAlign: \"middle\" }}\n            >\n              Variance At Completion(%)\n            </th>\n          </tr>\n        </thead>\n        <tbody className=\"openTable\">\n          <tr>\n            {Data.map((Details) => (\n              <>\n                <td height=\"10px\">\n                  {Details.var_efforts < -6 ? (\n                    <div className=\"projectStatus\">\n                      <span\n                        className=\"circle red\"\n                        title=\"variance < -6 %\"\n                      ></span>\n                      <span className=\"circle\"></span>\n                      <span className=\"circle\"></span>\n                    </div>\n                  ) : (\n                    \"\"\n                  )}\n                  {Details.var_efforts <= -4 && Details.var_efforts >= -6 ? (\n                    <div className=\"projectStatus\">\n                      <span className=\"circle\"></span>\n                      <span\n                        className=\"circle amber\"\n                        title=\"variance lies between -4 to -6 %\"\n                      ></span>\n                      <span className=\"circle\"></span>\n                    </div>\n                  ) : (\n                    \"\"\n                  )}\n                  {Details.var_efforts > -4 ? (\n                    <div className=\"projectStatus\">\n                      <span className=\"circle\"></span>\n                      <span className=\"circle\"></span>\n                      <span\n                        className=\"circle green\"\n                        title=\"variance > -4 %\"\n                      ></span>\n                    </div>\n                  ) : (\n                    \"\"\n                  )}\n                </td>\n                <td width=\"8%\">Efforts (Hrs)</td>\n                <td width=\"13%\" id=\"cont_efforts\">\n                  <span style={{ float: \"right\" }}>\n                    {Details.cont_efforts?.toLocaleString(\"en-IN\")}\n                  </span>\n                </td>\n                <td width=\"13%\" id=\"pln_efforts\">\n                  <span style={{ float: \"right\" }}>\n                    {Details.pln_efforts?.toLocaleString(\"en-IN\")}\n                  </span>\n                </td>\n                <td width=\"11%\" id=\"ptd_efforts\">\n                  <span style={{ float: \"right\" }}>\n                    {Details.ptd_efforts?.toLocaleString(\"en-IN\")}\n                  </span>\n                </td>\n                <td width=\"11%\" id=\"atd_efforts\">\n                  <span style={{ float: \"right\" }}>\n                    {Details.atd_efforts?.toLocaleString(\"en-IN\")}\n                  </span>\n                </td>\n                <td width=\"13%\" id=\"etc_efforts\">\n                  <span style={{ float: \"right\" }}>\n                    {Details.etc_efforts?.toLocaleString(\"en-IN\")}\n                  </span>\n                </td>\n                <td width=\"13%\" id=\"eac_efforts\">\n                  <span style={{ float: \"right\" }}>\n                    {Details.eac_efforts?.toLocaleString(\"en-IN\")}\n                  </span>\n                </td>\n                <td width=\"12%\" id=\"var_efforts\">\n                  <span style={{ float: \"right\" }}>{Details.var_efforts}</span>\n                </td>\n              </>\n            ))}\n          </tr>\n          <tr>\n            {Data.map((Details) => (\n              <>\n                <td height=\"10px\">\n                  {Details.var_rev < -6 ? (\n                    <div className=\"projectStatus\">\n                      <span\n                        className=\"circle red\"\n                        title=\"variance < -6 %\"\n                      ></span>\n                      <span className=\"circle\"></span>\n                      <span className=\"circle\"></span>\n                    </div>\n                  ) : (\n                    \"\"\n                  )}\n                  {Details.var_rev <= -4 && Details.var_rev >= -6 ? (\n                    <div className=\"projectStatus\">\n                      <span className=\"circle\"></span>\n                      <span\n                        className=\"circle amber\"\n                        title=\"variance lies between -4 to -6 %\"\n                      ></span>\n                      <span className=\"circle\"></span>\n                    </div>\n                  ) : (\n                    \"\"\n                  )}\n                  {Details.var_rev > -4 ? (\n                    <div className=\"projectStatus\" title=\"variance > -4 %\">\n                      <span className=\"circle\"></span>\n                      <span className=\"circle\"></span>\n                      <span className=\"circle green\"></span>\n                    </div>\n                  ) : (\n                    \"\"\n                  )}\n                </td>\n                <td>Revenue</td>\n                <td id=\"cont_rev\">\n                  <span style={{ float: \"right\" }}>\n                    {container.textContent == \"undefined\"\n                      ? \"\"\n                      : container.textContent}{\" \"}\n                    {Details.cont_rev?.toLocaleString(\"en-IN\")}\n                  </span>\n                </td>\n                <td id=\"pln_rev\">\n                  <span style={{ float: \"right\" }}>\n                    {container.textContent == \"undefined\"\n                      ? \"\"\n                      : container.textContent}\n                    {Details.pln_rev?.toLocaleString(\"en-IN\")}\n                  </span>\n                </td>\n                <td id=\"ptd_rev\">\n                  <span style={{ float: \"right\" }}>\n                    {\" \"}\n                    {container.textContent == \"undefined\"\n                      ? \"\"\n                      : container.textContent}{\" \"}\n                    {Details.ptd_rev?.toLocaleString(\"en-IN\")}\n                  </span>\n                </td>\n                <td id=\"atd_rev\">\n                  <span style={{ float: \"right\" }}>\n                    {\" \"}\n                    {container.textContent == \"undefined\"\n                      ? \"\"\n                      : container.textContent}{\" \"}\n                    {Details.atd_rev?.toLocaleString(\"en-IN\")}\n                  </span>\n                </td>\n                <td id=\"etc_rev\">\n                  <span style={{ float: \"right\" }}>\n                    {\" \"}\n                    {container.textContent == \"undefined\"\n                      ? \"\"\n                      : container.textContent}{\" \"}\n                    {Details.etc_rev?.toLocaleString(\"en-IN\")}\n                  </span>\n                </td>\n                <td id=\"eac_rev\">\n                  <span style={{ float: \"right\" }}>\n                    {\" \"}\n                    {container.textContent == \"undefined\"\n                      ? \"\"\n                      : container.textContent}{\" \"}\n                    {Details.eac_rev}\n                  </span>\n                </td>\n                <td id=\"var_rev\">\n                  <span style={{ float: \"right\" }}>{Details.var_rev}</span>\n                </td>\n              </>\n            ))}\n          </tr>\n          <tr>\n            {Data.map((Details) => (\n              <>\n                <td height=\"10px\">\n                  {Details.var_dc < -6 ? (\n                    <div className=\"projectStatus\">\n                      <span\n                        className=\"circle red\"\n                        title=\"variance < -6 %\"\n                      ></span>\n                      <span className=\"circle\"></span>\n                      <span className=\"circle\"></span>\n                    </div>\n                  ) : (\n                    \"\"\n                  )}\n                  {Details.var_dc <= -4 && Details.var_dc >= -6 ? (\n                    <div className=\"projectStatus\">\n                      <span className=\"circle\"></span>\n                      <span\n                        className=\"circle amber\"\n                        title=\"variance lies between -4 to -6 %\"\n                      ></span>\n                      <span className=\"circle\"></span>\n                    </div>\n                  ) : (\n                    \"\"\n                  )}\n                  {Details.var_dc > -4 ? (\n                    <div className=\"projectStatus\">\n                      <span className=\"circle\"></span>\n                      <span className=\"circle\"></span>\n                      <span\n                        className=\"circle green\"\n                        title=\"variance > -4 %\"\n                      ></span>\n                    </div>\n                  ) : (\n                    \"\"\n                  )}\n                </td>\n                <td>Resource Direct Cost</td>\n                <td id=\"cont_dc\">\n                  <span style={{ float: \"right\" }}>\n                    {\" \"}\n                    {container.textContent == \"undefined\"\n                      ? \"\"\n                      : container.textContent}{\" \"}\n                    {Details.cont_dc?.toLocaleString(\"en-IN\")}\n                  </span>\n                </td>\n                <td id=\"pln_dc\">\n                  <span style={{ float: \"right\" }}>\n                    {\" \"}\n                    {container.textContent == \"undefined\"\n                      ? \"\"\n                      : container.textContent}{\" \"}\n                    {Details.pln_dc?.toLocaleString(\"en-IN\")}\n                  </span>\n                </td>\n                <td id=\"ptd_dc\">\n                  <span style={{ float: \"right\" }}>\n                    {\" \"}\n                    {container.textContent == \"undefined\"\n                      ? \"\"\n                      : container.textContent}{\" \"}\n                    {Details.ptd_dc?.toLocaleString(\"en-IN\")}\n                  </span>\n                </td>\n                <td id=\"atd_dc\">\n                  <span style={{ float: \"right\" }}>\n                    {\" \"}\n                    {container.textContent == \"undefined\"\n                      ? \"\"\n                      : container.textContent}{\" \"}\n                    {Details.atd_dc?.toLocaleString(\"en-IN\")}\n                  </span>\n                </td>\n                <td id=\"etc_dc\">\n                  <span style={{ float: \"right\" }}>\n                    {\" \"}\n                    {container.textContent == \"undefined\"\n                      ? \"\"\n                      : container.textContent}{\" \"}\n                    {Details.etc_dc?.toLocaleString(\"en-IN\")}\n                  </span>\n                </td>\n                <td id=\"eac_dc\">\n                  <span style={{ float: \"right\" }}>\n                    {\" \"}\n                    {container.textContent == \"undefined\"\n                      ? \"\"\n                      : container.textContent}{\" \"}\n                    {Details.eac_dc?.toLocaleString(\"en-IN\")}\n                  </span>\n                </td>\n                <td id=\"var_dc\">\n                  <span style={{ float: \"right\" }}> {Details.var_dc}</span>\n                </td>\n              </>\n            ))}\n          </tr>\n          <tr>\n            {Data.map((Details) => (\n              <>\n                <td height=\"10px\">\n                  {Details.var_oc < -6 ? (\n                    <div className=\"projectStatus\">\n                      <span\n                        className=\"circle red\"\n                        title=\"variance < -6 %\"\n                      ></span>\n                      <span className=\"circle\"></span>\n                      <span className=\"circle\"></span>\n                    </div>\n                  ) : (\n                    \"\"\n                  )}\n                  {Details.var_oc <= -4 && Details.var_oc >= -6 ? (\n                    <div className=\"projectStatus\">\n                      <span className=\"circle\"></span>\n                      <span\n                        className=\"circle amber\"\n                        title=\"variance lies between -4 to -6 %\"\n                      ></span>\n                      <span className=\"circle\"></span>\n                    </div>\n                  ) : (\n                    \"\"\n                  )}\n                  {Details.var_oc > -4 ? (\n                    <div className=\"projectStatus\">\n                      <span className=\"circle\"></span>\n                      <span className=\"circle\"></span>\n                      <span\n                        className=\"circle green\"\n                        title=\"variance > -4 %\"\n                      ></span>\n                    </div>\n                  ) : (\n                    \"\"\n                  )}\n                </td>\n                <td>Other Direct Cost</td>\n                <td id=\"cont_oc\">\n                  {\" \"}\n                  <span style={{ float: \"right\" }}>\n                    {\" \"}\n                    {container.textContent == \"undefined\"\n                      ? \"\"\n                      : container.textContent}{\" \"}\n                    {Details.cont_oc?.toLocaleString(\"en-IN\")}\n                  </span>\n                </td>\n                <td id=\"pln_oc\">\n                  {\" \"}\n                  <span style={{ float: \"right\" }}>\n                    {\" \"}\n                    {container.textContent == \"undefined\"\n                      ? \"\"\n                      : container.textContent}{\" \"}\n                    {Details.pln_oc?.toLocaleString(\"en-IN\")}\n                  </span>\n                </td>\n                <td id=\"ptd_oc\">\n                  {\" \"}\n                  <span style={{ float: \"right\" }}>\n                    {\" \"}\n                    {container.textContent == \"undefined\"\n                      ? \"\"\n                      : container.textContent}{\" \"}\n                    {Details.ptd_oc?.toLocaleString(\"en-IN\")}\n                  </span>\n                </td>\n                <td id=\"atd_oc\">\n                  <span style={{ float: \"right\" }}>\n                    {\" \"}\n                    {container.textContent == \"undefined\"\n                      ? \"\"\n                      : container.textContent}{\" \"}\n                    {Details.atd_oc?.toLocaleString(\"en-IN\")}\n                  </span>\n                </td>\n                <td id=\"etc_oc\">\n                  <span style={{ float: \"right\" }}>\n                    {\" \"}\n                    {container.textContent == \"undefined\"\n                      ? \"\"\n                      : container.textContent}{\" \"}\n                    {Details.etc_oc?.toLocaleString(\"en-IN\")}\n                  </span>\n                </td>\n                <td id=\"eac_oc\">\n                  <span style={{ float: \"right\" }}>\n                    {\" \"}\n                    {container.textContent == \"undefined\"\n                      ? \"\"\n                      : container.textContent}{\" \"}\n                    {Details.eac_oc?.toLocaleString(\"en-IN\")}\n                  </span>\n                </td>\n                <td id=\"var_oc\">\n                  <span style={{ float: \"right\" }}>{Details.var_oc}</span>\n                </td>\n              </>\n            ))}\n          </tr>\n          <tr>\n            {Data.map((Details) => (\n              <>\n                <td height=\"10px\">\n                  {Details.var_margin < -6 ? (\n                    <div className=\"projectStatus\">\n                      <span\n                        className=\"circle red\"\n                        title=\"variance < -6 %\"\n                      ></span>\n                      <span className=\"circle\"></span>\n                      <span className=\"circle\"></span>\n                    </div>\n                  ) : (\n                    \"\"\n                  )}\n                  {Details.var_margin <= -4 && Details.var_margin >= -6 ? (\n                    <div className=\"projectStatus\">\n                      <span className=\"circle\"></span>\n                      <span\n                        className=\"circle amber\"\n                        title=\"variance lies between -4 to -6 %\"\n                      ></span>\n                      <span className=\"circle\"></span>\n                    </div>\n                  ) : (\n                    \"\"\n                  )}\n                  {Details.var_margin > -4 ? (\n                    <div className=\"projectStatus\">\n                      <span className=\"circle\"></span>\n                      <span className=\"circle\"></span>\n                      <span\n                        className=\"circle green\"\n                        title=\"variance > -4 %\"\n                      ></span>\n                    </div>\n                  ) : (\n                    \"\"\n                  )}\n                </td>\n                <td>Project Margin (%)</td>\n                <td id=\"cont_margin\">\n                  <span style={{ float: \"right\" }}>\n                    {Details.cont_margin?.toLocaleString(\"en-IN\")}\n                  </span>\n                </td>\n                <td id=\"pln_margin\">\n                  <span style={{ float: \"right\" }}>\n                    {Details.pln_margin?.toLocaleString(\"en-IN\")}\n                  </span>\n                </td>\n                <td id=\"ptd_margin\">\n                  <span style={{ float: \"right\" }}>\n                    {Details.ptd_margin?.toLocaleString(\"en-IN\")}\n                  </span>\n                </td>\n                <td id=\"atd_margin\">\n                  <span style={{ float: \"right\" }}>\n                    {Details.atd_margin?.toLocaleString(\"en-IN\")}\n                  </span>\n                </td>\n                <td id=\"etc_margin\">\n                  <span style={{ float: \"right\" }}>\n                    {Details.etc_margin?.toLocaleString(\"en-IN\")}\n                  </span>\n                </td>\n                <td id=\"eac_margin\">\n                  <span style={{ float: \"right\" }}>\n                    {Details.eac_margin?.toLocaleString(\"en-IN\")}\n                  </span>\n                </td>\n                <td id=\"var_margin\">\n                  <span style={{ float: \"right\" }}>{Details.var_margin}</span>\n                </td>\n              </>\n            ))}\n          </tr>\n          <tr>\n            {Data.map((Details) => (\n              <>\n                <td height=\"10px\">\n                  {Details.var_dur < -6 ? (\n                    <div className=\"projectStatus\">\n                      <span\n                        className=\"circle red\"\n                        title=\"variance < -6 %\"\n                      ></span>\n                      <span className=\"circle\"></span>\n                      <span className=\"circle\"></span>\n                    </div>\n                  ) : (\n                    \"\"\n                  )}\n                  {Details.var_dur <= -4 && Details.var_dur >= -6 ? (\n                    <div className=\"projectStatus\">\n                      <span className=\"circle\"></span>\n                      <span\n                        className=\"circle amber\"\n                        title=\"variance lies between -4 to -6 %\"\n                      ></span>\n                      <span className=\"circle\"></span>\n                    </div>\n                  ) : (\n                    \"\"\n                  )}\n                  {Details.var_dur > -4 ? (\n                    <div className=\"projectStatus\">\n                      <span className=\"circle\"></span>\n                      <span className=\"circle\"></span>\n                      <span\n                        className=\"circle green\"\n                        title=\"variance > -4 %\"\n                      ></span>\n                    </div>\n                  ) : (\n                    \"\"\n                  )}\n                </td>\n                <td>Duration (Days)</td>\n                <td id=\"cont_dur\">\n                  <span style={{ float: \"right\" }}>\n                    {Details.cont_dur?.toLocaleString(\"en-IN\")}\n                  </span>\n                </td>\n                <td id=\"pln_dur\">\n                  <span style={{ float: \"right\" }}>\n                    {Details.pln_dur?.toLocaleString(\"en-IN\")}\n                  </span>\n                </td>\n                <td id=\"ptd_dur\">\n                  <span style={{ float: \"right\" }}>\n                    {Details.ptd_dur?.toLocaleString(\"en-IN\")}\n                  </span>\n                </td>\n                <td id=\"atd_dur\">\n                  <span style={{ float: \"right\" }}>\n                    {Details.atd_dur?.toLocaleString(\"en-IN\")}\n                  </span>\n                </td>\n                <td id=\"etc_dur\">\n                  <span style={{ float: \"right\" }}>\n                    {Details.etc_dur?.toLocaleString(\"en-IN\")}\n                  </span>\n                </td>\n                <td id=\"eac_dur\">\n                  <span style={{ float: \"right\" }}>\n                    {Details.eac_dur?.toLocaleString(\"en-IN\")}\n                  </span>\n                </td>\n                <td id=\"var_dur\">\n                  <span style={{ float: \"right\" }}>{Details.var_dur}</span>\n                </td>\n              </>\n            ))}\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  );\n}\nexport default StatusKpi;\n","import React from \"react\";\nimport { environment } from \"../../environments/environment\";\nimport \"./Project.scss\";\nimport { AiOutlineLeftSquare, AiOutlineRightSquare } from \"react-icons/ai\";\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Column } from \"primereact/column\";\nimport moment from \"moment\";\nimport CellRendererPrimeReactDataTable from \"../PrimeReactTableComponent/CellRendererPrimeReactDataTable\";\n\nfunction StatusAccomplishment(props) {\n  const { pid } = props;\n  const [data, setData] = useState([{}]);\n  const [headerData, setHeaderData] = useState([]);\n  const [exportData, setExportData] = useState([]);\n  const baseUrl = environment.baseUrl;\n\n  ////////////////////////////Date-Filtering/////////////////////////////\n\n  const dates = {\n    fromDate: moment().startOf(\"week\").add(\"days\", 1).format(\"YYYY-MM-DD\"),\n    toDate: moment().startOf(\"week\").add(\"days\", 7).format(\"YYYY-MM-DD\"),\n  };\n  console.log(moment().format(\"YYYY-MM-DD\"));\n  const [dt, setDt] = useState(dates);\n\n  const addHandler = () => {\n    setDt((prev) => ({\n      ...prev,\n      [\"fromDate\"]: moment(dt.fromDate).add(\"days\", 7).format(\"YYYY-MM-DD\"),\n    }));\n\n    setDt((prev) => ({\n      ...prev,\n      [\"toDate\"]: moment(dt.toDate).add(\"days\", 7).format(\"YYYY-MM-DD\"),\n    }));\n  };\n\n  const subtracHandler = () => {\n    setDt((prev) => ({\n      ...prev,\n      [\"fromDate\"]: moment(dt.fromDate)\n        .subtract(\"days\", 7)\n        .format(\"YYYY-MM-DD\"),\n    }));\n\n    setDt((prev) => ({\n      ...prev,\n      [\"toDate\"]: moment(dt.toDate).subtract(\"days\", 7).format(\"YYYY-MM-DD\"),\n    }));\n  };\n  ////////////////////////////////////////////////////////////////////////\n\n  ////////----------------------------Getting Accomplishment Data--------------------------////////\n\n  const getData = () => {\n    axios\n      .get(\n        baseUrl +\n          `/ProjectMS/Accomplishments/getProjectDateAccomplishments?fromDate=${dt.fromDate}&toDate=${dt.toDate}&pid=${pid}`\n      )\n      .then((res) => {\n        let headerData = [{ accomplishment: \"Accomplishments\" }];\n        const GetData = res.data;\n        // setData(headerData.concat(GetData));\n        let fData = [...headerData, ...GetData];\n        console.log(fData);\n        setData(fData);\n      })\n      .catch((error) => {});\n  };\n  useEffect(() => {\n    getData();\n  }, [dt]);\n\n  const RiskValueChange = (data) => (\n    <div className=\"ellipsis\" title={data.accomplishment}>\n      {data.accomplishment}\n    </div>\n  );\n\n  const dynamicColumns = Object.keys(headerData)?.map((col, i) => {\n    console.log(col);\n    return (\n      <Column\n        sortable\n        key={col}\n        body={col == \"accomplishment\" ? RiskValueChange : null}\n        field={col}\n        header={headerData[col]}\n      />\n    );\n  });\n\n  useEffect(() => {\n    data[0] && setHeaderData(JSON.parse(JSON.stringify(data[0])));\n  }, [data]);\n\n  ////////--------------------------Getting Accomplishment Data END------------------------////////\n\n  return (\n    <div>\n      <div>\n        <strong>\n          {moment(dt.fromDate).format(\"DD-MMM-YYYY\")} to{\" \"}\n          {moment(dt.toDate).format(\"DD-MMM-YYYY\")}\n        </strong>\n        <span style={{ float: \"right\" }}>\n          <AiOutlineLeftSquare\n            cursor=\"pointer\"\n            size={\"2em\"}\n            onClick={subtracHandler}\n          ></AiOutlineLeftSquare>\n          <AiOutlineRightSquare\n            cursor=\"pointer\"\n            size={\"2em\"}\n            onClick={addHandler}\n          ></AiOutlineRightSquare>\n        </span>\n      </div>\n      <br />\n\n      <CellRendererPrimeReactDataTable\n        rows={5}\n        data={data}\n        dynamicColumns={dynamicColumns}\n        headerData={headerData}\n        setHeaderData={setHeaderData}\n        exportData={exportData}\n      />\n    </div>\n  );\n}\nexport default StatusAccomplishment;\n","import React from \"react\";\nimport { environment } from \"../../environments/environment\";\nimport \"./Project.scss\";\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { AiOutlineLeftSquare, AiOutlineRightSquare } from \"react-icons/ai\";\nimport { Column } from \"primereact/column\";\nimport moment from \"moment\";\nimport CellRendererPrimeReactDataTable from \"../PrimeReactTableComponent/CellRendererPrimeReactDataTable\";\n\nfunction StatusPlannedActivities(props) {\n  const { pid } = props;\n  const [data, setData] = useState([{}]);\n  const [headerData, setHeaderData] = useState([]);\n  const [exportData, setExportData] = useState([]);\n  const baseUrl = environment.baseUrl;\n\n  ////////////////////////////Date-Filtering/////////////////////////////\n\n  const dates = {\n    fromDate: moment().startOf(\"week\").add(\"days\", 8).format(\"YYYY-MM-DD\"),\n    toDate: moment().startOf(\"week\").add(\"days\", 14).format(\"YYYY-MM-DD\"),\n  };\n  const [dt, setDt] = useState(dates);\n  console.log(dt.fromDate);\n  console.log(dt.toDate);\n\n  const addHandler = () => {\n    setDt((prev) => ({\n      ...prev,\n      [\"fromDate\"]: moment(dt.fromDate).add(\"days\", 7).format(\"YYYY-MM-DD\"),\n    }));\n\n    setDt((prev) => ({\n      ...prev,\n      [\"toDate\"]: moment(dt.fromDate).add(\"days\", 13).format(\"YYYY-MM-DD\"),\n    }));\n  };\n  console.log(dt.toDate);\n\n  const subtracHandler = () => {\n    setDt((prev) => ({\n      ...prev,\n      [\"fromDate\"]: moment(dt.fromDate)\n        .subtract(\"days\", 7)\n        .format(\"YYYY-MM-DD\"),\n    }));\n\n    setDt((prev) => ({\n      ...prev,\n      [\"toDate\"]: moment(dt.toDate).subtract(\"days\", 7).format(\"YYYY-MM-DD\"),\n    }));\n  };\n\n  console.log(dt.fromDate);\n  console.log(dt.toDate);\n  ////////////////////////////////////////////////////////////////////////\n  // const date = strtotime(dt.toDate);\n  // const Finaldate = strtotime(\"+7 day\", date);\n  // console.log(first)\n\n  ////////----------------------------Getting plannedactivities Data--------------------------////////\n\n  const getData = () => {\n    axios\n      .get(\n        baseUrl +\n          `/ProjectMS/project/getProjectDatePlannedActivities?pid=${pid}&createdDate=${dt.fromDate}&modifiedDate=${dt.toDate}`\n      )\n      .then((res) => {\n        const GetData = res.data;\n        let headerData = [{ planned_activity: \"Planned Activity\" }];\n        let fData = [...headerData, ...GetData];\n        console.log(fData);\n        setData(fData);\n      })\n      .catch((error) => {});\n  };\n  useEffect(() => {\n    getData();\n  }, [dt]);\n\n  const RiskValueChange = (data) => (\n    <div className=\"ellipsis\" title={data.planned_activity}>\n      {data.planned_activity}\n    </div>\n  );\n\n  const dynamicColumns = Object.keys(headerData)?.map((col, i) => {\n    console.log(col);\n    return (\n      <Column\n        sortable\n        key={col}\n        body={col == \"planned_activity\" ? RiskValueChange : null}\n        field={col}\n        header={headerData[col]}\n      />\n    );\n  });\n\n  useEffect(() => {\n    data[0] && setHeaderData(JSON.parse(JSON.stringify(data[0])));\n  }, [data]);\n\n  ////////--------------------------Getting plannedactivities Data END------------------------////////\n\n  return (\n    <div>\n      <div>\n        <strong>\n          {moment(dt.fromDate).format(\"DD-MMM-YYYY\")} to{\" \"}\n          {moment(dt.toDate).format(\"DD-MMM-YYYY\")}\n        </strong>\n        <span style={{ float: \"right\" }}>\n          <AiOutlineLeftSquare\n            cursor=\"pointer\"\n            size={\"2em\"}\n            onClick={subtracHandler}\n          ></AiOutlineLeftSquare>\n          <AiOutlineRightSquare\n            cursor=\"pointer\"\n            size={\"2em\"}\n            onClick={addHandler}\n          ></AiOutlineRightSquare>\n        </span>\n      </div>\n      <br />\n\n      <CellRendererPrimeReactDataTable\n        rows={5}\n        data={data}\n        dynamicColumns={dynamicColumns}\n        headerData={headerData}\n        setHeaderData={setHeaderData}\n        exportData={exportData}\n      />\n    </div>\n  );\n}\nexport default StatusPlannedActivities;\n","import React from \"react\";\nimport { environment } from \"../../environments/environment\";\nimport \"./Project.scss\";\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Column } from \"primereact/column\";\nimport CellRendererPrimeReactDataTable from \"../PrimeReactTableComponent/CellRendererPrimeReactDataTable\";\n\nfunction StatusRisk(props) {\n  const { pid } = props;\n  const [data, setData] = useState([{}]);\n  const [headerData, setHeaderData] = useState([]);\n  const [exportData, setExportData] = useState([]);\n  const baseUrl = environment.baseUrl;\n\n  ////////----------------------------Getting Risk Data--------------------------////////\n\n  const getData = () => {\n    axios\n      .get(baseUrl + `/ProjectMS/project/risks?pid=${pid}`)\n      // axios.get(`http://localhost:8090/ProjectMS/project/risks?pid=${pid}`)\n      .then((res) => {\n        const GetData = res.data;\n        let headerData = [\n          {\n            riskName: \"Risk Name\",\n            riskType: \"Risk Type\",\n            riskSource: \"Risk Source\",\n            riskImpact: \"Risk Impact\",\n            probabOcc: \"Probability of Occurrence\",\n            riskValue: \"Risk Value\",\n            assignedTo: \"Assigned To\",\n            riskOccurred: \"Risk Occurred\",\n            riskStatus: \"Risk Status\",\n            occuredDate: \"Occurred Date\",\n            createdBy: \"Created By\",\n          },\n        ];\n        let fData = [...headerData, ...GetData];\n        console.log(fData);\n        setData(fData);\n      })\n      .catch((error) => {});\n  };\n  useEffect(() => {\n    getData();\n  }, []);\n\n  const RiskValueChange = (data) => (\n    <div className=\"ellipsis\" style={{ textAlign: \"right\" }}>\n      {data.riskValue}\n    </div>\n  );\n\n  const RiskNameChange = (data) => (\n    <div className=\"ellipsis\" title={data.riskName}>\n      {data.riskName}\n    </div>\n  );\n\n  const AssingedToChange = (data) => (\n    <div className=\"ellipsis\" title={data.assignedTo}>\n      {data.assignedTo}\n    </div>\n  );\n\n  const CreatedByChange = (data) => (\n    <div className=\"ellipsis\" title={data.createdBy}>\n      {data.createdBy}\n    </div>\n  );\n\n  const dynamicColumns = Object.keys(headerData)?.map((col, i) => {\n    console.log(col);\n    return (\n      <Column\n        sortable\n        key={col}\n        body={\n          col == \"riskValue\"\n            ? RiskValueChange\n            : null || col == \"riskName\"\n            ? RiskNameChange\n            : null || col == \"assignedTo\"\n            ? AssingedToChange\n            : null || col == \"createdBy\"\n            ? CreatedByChange\n            : null\n        }\n        field={col}\n        header={headerData[col]}\n      />\n    );\n  });\n\n  useEffect(() => {\n    data[0] && setHeaderData(JSON.parse(JSON.stringify(data[0])));\n  }, [data]);\n\n  ////////--------------------------Getting Risk Data END------------------------////////\n\n  return (\n    <div>\n      <CellRendererPrimeReactDataTable\n        rows={5}\n        data={data}\n        dynamicColumns={dynamicColumns}\n        headerData={headerData}\n        setHeaderData={setHeaderData}\n        exportData={exportData}\n      />\n    </div>\n  );\n}\nexport default StatusRisk;\n","import React from \"react\";\nimport { environment } from \"../../environments/environment\";\nimport \"./Project.scss\";\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Column } from \"primereact/column\";\nimport CellRendererPrimeReactDataTable from \"../PrimeReactTableComponent/CellRendererPrimeReactDataTable\";\n\nfunction StatusIssues(props) {\n  const { pid } = props;\n  const [data, setData] = useState([{}]);\n  const [headerData, setHeaderData] = useState([]);\n  const [exportData, setExportData] = useState([]);\n  const baseUrl = environment.baseUrl;\n\n  ////////----------------------------Getting Issue Data--------------------------////////\n\n  const getData = () => {\n    axios\n      .get(baseUrl + `/ProjectMS/project/issue?pid=${pid}`)\n      // axios.get( `http://localhost:8090/ProjectMS/project/issue?pid=${pid}`)\n      .then((res) => {\n        let headerData = [\n          {\n            issueName: \"Issue Name\",\n            criticality: \"Criticality\",\n            status: \"Status\",\n            dueDate: \"Due Date\",\n            issueSource: \"Issue Source\",\n            assignedTo: \"Assigned To\",\n            rcaDone: \"RCA Done\",\n            createdBy: \"Created By\",\n            comments: \"Comments\",\n          },\n        ];\n        const GetData = res.data;\n        let fData = [...headerData, ...GetData];\n        console.log(fData);\n        setData(fData);\n      })\n      .catch((error) => {});\n  };\n  useEffect(() => {\n    getData();\n  }, []);\n\n  ////////--------------------------Getting Issue Data END------------------------////////\n\n  const commentChanges = (data) => (\n    <div className=\"ellipsis\" title={data.comments}>\n      {data.comments}\n    </div>\n  );\n\n  const issueNameChanges = (data) => (\n    <div className=\"ellipsis\" title={data.issueName}>\n      {data.issueName}\n    </div>\n  );\n\n  const assignedToChanges = (data) => (\n    <div className=\"ellipsis\" title={data.assignedTo}>\n      {data.assignedTo}\n    </div>\n  );\n\n  const createdByChanges = (data) => (\n    <div className=\"ellipsis\" title={data.createdBy}>\n      {data.createdBy}\n    </div>\n  );\n\n  const dynamicColumns = Object.keys(headerData)?.map((col, i) => {\n    console.log(col);\n    return (\n      <Column\n        sortable\n        key={col}\n        body={\n          col === \"comments\"\n            ? commentChanges\n            : null || col === \"issueName\"\n            ? issueNameChanges\n            : null || col === \"assignedTo\"\n            ? assignedToChanges\n            : null || col === \"createdBy\"\n            ? createdByChanges\n            : null\n        }\n        field={col}\n        header={headerData[col]}\n      />\n    );\n  });\n\n  useEffect(() => {\n    data[0] && setHeaderData(JSON.parse(JSON.stringify(data[0])));\n  }, [data]);\n\n  return (\n    <div>\n      <CellRendererPrimeReactDataTable\n        rows={5}\n        data={data}\n        dynamicColumns={dynamicColumns}\n        headerData={headerData}\n        setHeaderData={setHeaderData}\n        exportData={exportData}\n      />\n    </div>\n  );\n}\nexport default StatusIssues;\n","import React from \"react\";\nimport { environment } from \"../../environments/environment\";\nimport \"./Project.scss\";\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Column } from \"primereact/column\";\nimport CellRendererPrimeReactDataTable from \"../PrimeReactTableComponent/CellRendererPrimeReactDataTable\";\n\nfunction StatusDependencies(props) {\n  const { pid } = props;\n  const [data, setData] = useState([{}]);\n  const [headerData, setHeaderData] = useState([]);\n  const [exportData, setExportData] = useState([]);\n  const baseUrl = environment.baseUrl;\n\n  ////////----------------------------Getting Dependency Data--------------------------////////\n\n  const getData = () => {\n    axios\n      .get(baseUrl + `/ProjectMS/project/dependency?pid=${pid}`)\n      //axios.get(`http://localhost:8090/ProjectMS/project/dependency?pid=${pid}`)\n      .then((res) => {\n        let headerData = [\n          {\n            dependency: \"Dependency / Constraints\",\n            type: \"Type\",\n            priority: \"Priority\",\n            raisedBy: \"Raised By\",\n            raisedDate: \"Raised Date\",\n            targetDate: \"Target Date\",\n            assignedTo: \"Assigned To\",\n            phaseAffected: \"Phase / Area affected\",\n            Status: \"Status\",\n          },\n        ];\n        const GetData = res.data;\n        let fData = [...headerData, ...GetData];\n        console.log(fData);\n        setData(fData);\n      })\n      .catch((error) => {});\n  };\n  useEffect(() => {\n    getData();\n  }, []);\n\n  ////////--------------------------Getting Dependency Data END------------------------////////\n\n  const phaseChanges = (data) => (\n    <div className=\"ellipsis\" title={data.phaseAffected}>\n      {data.phaseAffected}\n    </div>\n  );\n\n  const dynamicColumns = Object.keys(headerData)?.map((col, i) => {\n    console.log(col);\n    return (\n      <Column\n        sortable\n        key={col}\n        body={col === \"phaseAffected\" ? phaseChanges : null}\n        field={col}\n        header={headerData[col]}\n      />\n    );\n  });\n\n  useEffect(() => {\n    data[0] && setHeaderData(JSON.parse(JSON.stringify(data[0])));\n  }, [data]);\n\n  return (\n    <div>\n      <CellRendererPrimeReactDataTable\n        rows={5}\n        data={data}\n        dynamicColumns={dynamicColumns}\n        headerData={headerData}\n        setHeaderData={setHeaderData}\n        exportData={exportData}\n      />\n    </div>\n  );\n}\nexport default StatusDependencies;\n","import React from \"react\";\nimport { environment } from \"../../environments/environment\";\nimport \"./Project.scss\";\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Column } from \"primereact/column\";\nimport CellRendererPrimeReactDataTable from \"../PrimeReactTableComponent/CellRendererPrimeReactDataTable\";\n\nfunction StatusScope(props) {\n  const { pid } = props;\n  const [data, setData] = useState([{}]);\n  const [headerData, setHeaderData] = useState([]);\n  const [exportData, setExportData] = useState([]);\n  const baseUrl = environment.baseUrl;\n\n  ////////----------------------------Getting Scope Data--------------------------////////\n\n  const getData = () => {\n    axios\n      .get(baseUrl + `/ProjectMS/project/scopechanges?pid=${pid}`)\n      // axios.get(`http://localhost:8090/ProjectMS/project/scopechanges?pid=${pid}`)\n      .then((res) => {\n        let headerData = [\n          {\n            description: \"Description of Change\",\n            change_req_date: \"Change Request Date\",\n            financial_impact: \"Financial Impact\",\n          },\n        ];\n        const GetData = res.data;\n        console.log(GetData);\n        let fData = [...headerData, ...GetData];\n        console.log(fData);\n        setData(fData);\n      })\n      .catch((error) => {});\n  };\n  useEffect(() => {\n    getData();\n  }, []);\n\n  ////////--------------------------Getting Scope Data END------------------------////////\n\n  const descriptionChanges = (data) => (\n    <div className=\"ellipsis\" title={data.description}>\n      {data.description}\n    </div>\n  );\n  const FinancialChanges = (data) => (\n    <div className=\"ellipsis\" title={data.financial_impact}>\n      {data.financial_impact}\n    </div>\n  );\n  const dateChange = (data) => (\n    <div className=\"ellipsis\" style={{textAlign:\"center\"}}>\n      {data.change_req_date}\n    </div>\n  );\n\n  const dynamicColumns = Object.keys(headerData)?.map((col, i) => {\n    console.log(col);\n    return (\n      <Column\n        sortable\n        key={col}\n        body={col === \"description\" ? descriptionChanges : col==\"financial_impact\"? FinancialChanges:col==\"change_req_date\"?dateChange:null}\n        field={col}\n        header={headerData[col]}\n      />\n    );\n  });\n\n  useEffect(() => {\n    data[0] && setHeaderData(JSON.parse(JSON.stringify(data[0])));\n  }, [data]);\n\n  return (\n    <div>\n      <CellRendererPrimeReactDataTable\n        rows={5}\n        data={data}\n        dynamicColumns={dynamicColumns}\n        headerData={headerData}\n        setHeaderData={setHeaderData}\n        exportData={exportData}\n      />\n    </div>\n  );\n}\nexport default StatusScope;\n","import React from \"react\";\nimport { environment } from \"../../environments/environment\";\nimport \"./Project.scss\";\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Column } from \"primereact/column\";\nimport CellRendererPrimeReactDataTable from \"../PrimeReactTableComponent/CellRendererPrimeReactDataTable\";\n\nfunction StatusEvents(props) {\n  const { pid } = props;\n  const [data, setData] = useState([{}]);\n  const [headerData, setHeaderData] = useState([]);\n  const [exportData, setExportData] = useState([]);\n  const baseUrl = environment.baseUrl;\n\n  ////////----------------------------Getting Event Data--------------------------////////\n  const getData = () => {\n    axios\n      .get(baseUrl + `/ProjectMS/project/events?pid=${pid}`)\n      // axios.get(`http://localhost:8090/ProjectMS/project/events?pid=${pid}`)\n      .then((res) => {\n        let headerData = [\n          { event: \"Event\", date: \"Date\", comments: \"Comments\" },\n        ];\n        const GetData = res.data;\n        let fData = [...headerData, ...GetData];\n        console.log(fData);\n        setData(fData);\n      })\n      .catch((error) => {});\n  };\n  useEffect(() => {\n    getData();\n  }, []);\n\n  const dateChange = (data) => (\n    <div className=\"ellipsis\" style={{ textAlign: \"center\" }}>\n      {data.date}\n    </div>\n  );\n\n  const eventChange = (data) => (\n    <div className=\"ellipsis\" title={data.event}>\n      {data.event}\n    </div>\n  );\n\n  const commentsChange = (data) => (\n    <div className=\"ellipsis\" title={data.comments}>\n      {data.comments}\n    </div>\n  );\n\n  const dynamicColumns = Object.keys(headerData)?.map((col, i) => {\n    console.log(col);\n    return (\n      <Column\n        sortable\n        key={col}\n        body={\n          col == \"date\"\n            ? dateChange\n            : null || col == \"event\"\n            ? eventChange\n            : null || col == \"comments\"\n            ? commentsChange\n            : null\n        }\n        field={col}\n        header={headerData[col]}\n      />\n    );\n  });\n\n  useEffect(() => {\n    data[0] && setHeaderData(JSON.parse(JSON.stringify(data[0])));\n  }, [data]);\n\n  ////////--------------------------Getting Event Data END------------------------////////\n  return (\n    <div>\n      <CellRendererPrimeReactDataTable\n        rows={5}\n        data={data}\n        dynamicColumns={dynamicColumns}\n        headerData={headerData}\n        setHeaderData={setHeaderData}\n        exportData={exportData}\n      />\n    </div>\n  );\n}\nexport default StatusEvents;\n","import React from \"react\";\nimport { environment } from \"../../environments/environment\";\nimport \"./Project.scss\";\nimport { FaCloudDownloadAlt } from \"react-icons/fa\";\nimport { SlExclamation } from \"react-icons/sl\";\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { CCollapse } from \"@coreui/react\";\nimport { FaChevronCircleDown, FaChevronCircleUp } from \"react-icons/fa\";\nimport StatusKpi from \"./StatusKpi\";\nimport Loader from \"../Loader/Loader\";\nimport StatusAccomplishment from \"./StatusAccomplishment\";\nimport StatusPlannedActivities from \"./StatusPlannedActivities\";\nimport StatusRisk from \"./StatusRisk\";\nimport StatusIssues from \"./StatusIssues\";\nimport StatusDependencies from \"./StatusDependencies\";\nimport StatusScope from \"./StatusScope\";\nimport StatusEvents from \"./StatusEvents\";\nimport \"./ProjectStatus.scss\";\nimport ScreenBreadcrumbs from \"../Common/ScreenBreadcrumbs\";\n\nfunction ProjectStatus(props) {\n  const { projectId } = props;\n  const [visibleA, setVisibleA] = useState(true);\n  const [visibleB, setVisibleB] = useState(true);\n  const [visibleC, setVisibleC] = useState(true);\n  const [visibleD, setVisibleD] = useState(true);\n  const [visibleE, setVisibleE] = useState(true);\n  const [visibleF, setVisibleF] = useState(true);\n  const [cheveronIconA, setCheveronIconA] = useState(FaChevronCircleDown);\n  const [cheveronIconB, setCheveronIconB] = useState(FaChevronCircleDown);\n  const [cheveronIconC, setCheveronIconC] = useState(FaChevronCircleDown);\n  const [cheveronIconD, setCheveronIconD] = useState(FaChevronCircleDown);\n  const [cheveronIconE, setCheveronIconE] = useState(FaChevronCircleDown);\n  const [cheveronIconF, setCheveronIconF] = useState(FaChevronCircleDown);\n  const [loader, setLoader] = useState(false);\n  const [n, setN] = useState();\n  const pid = projectId;\n\n  // breadcrumbs --\n  const loggedUserId = localStorage.getItem(\"resId\");\n\n  const [routes, setRoutes] = useState([]);\n  let textContent = \"Delivery\";\n  let currentScreenName = [\"Projects\", \"Open\", \"Monitoring\", \"Global Dashboard\"];\n\n  useEffect(() => {\n    getMenus();\n  }, []);\n\n  const getMenus = () => {\n    // setMenusData\n\n    axios({\n      method: \"GET\",\n      url: baseUrl + `/CommonMS/master/getMenus?loggedUserId=${loggedUserId}`,\n    }).then((resp) => {\n      let data = resp.data;\n\n      data.forEach((item) => {\n        if (item.display_name === textContent) {\n          setRoutes([item]);\n        }\n      });\n    });\n  };\n  ////////----------------------------Getting Project Info--------------------------////////\n  const [Data, setData] = useState([{}]);\n  const [sd, setSd] = useState(\"\");\n  console.log(sd);\n  const [ed, setEd] = useState(\"\");\n  console.log(ed);\n  const baseUrl = environment.baseUrl;\n  const getData = () => {\n    // setLoader(true);\n    axios\n      .get(baseUrl + `/ProjectMS/project/projectinfo?ProjectId=${projectId}`)\n      .then((res) => {\n        const GetData = res.data;\n        setData(GetData);\n        setLoader(false);\n        console.log(res.data);\n        setSd(res.data[0].planned_start_dt);\n        setEd(res.data[0].planned_end_dt);\n      })\n      .catch((error) => { });\n  };\n  useEffect(() => {\n    getData();\n  }, [ed]);\n  ////////--------------------------Getting Project Info END------------------------////////\n\n  ////////--------------------------Getting Project Code----------------------------////////\n  const [projectCode, setProjectCode] = useState([{}]);\n  console.log(projectCode.projectCode);\n  const getProjectCode = () => {\n    axios\n      .get(baseUrl + `/ProjectMS/project/projectCode?ProjectId=${projectId}`)\n      .then((res) => {\n        const GetData = res.data;\n        setProjectCode(GetData);\n      })\n      .catch((error) => { });\n  };\n  useEffect(() => {\n    getProjectCode();\n  }, []);\n\n  console.log(n + \"line no 7\");\n  return (\n    <div>\n      {loader ? <Loader /> : \"\"}\n      {/* ---------------------------------Title------------------------------- */}\n      {Data.map((Details) => (\n        <div className=\"pageTitle\">\n          <div className=\"childOne\">\n            <h2>{Details.project_name}</h2>\n          </div>\n          <div className=\"childTwo\">\n            <h2>Global Dashboard</h2>\n          </div>\n          <div className=\"childThree\"></div>\n        </div>\n      ))}\n      <ScreenBreadcrumbs\n        routes={routes}\n        currentScreenName={currentScreenName}\n      />\n      <div className=\"row\">\n        <div className=\" my-3\">\n          <button className=\"btn btn-primary float-end \">\n            <FaCloudDownloadAlt /> Download as PDF\n          </button>\n        </div>\n\n        <div className=\"col-md-12 no-padding \" id=\"fullPrjInfo\">\n          {Data.map((Details) => (\n            <div className=\"projGlance\">\n              <div className=\"row\">\n                <div className=\"col-md-3 mb-2\">\n                  <div className=\"form-group\">\n                    <div className=\"row\">\n                      <label className=\"col-4  no-padding\">Project Name</label>\n                      <span className=\"col-1 p0\">:</span>\n                      <span className=\"col-7 \" id=\"pname\">\n                        {Details.project_name}\n                      </span>\n                    </div>\n                  </div>\n                </div>\n                <div className=\"col-md-3 mb-2\">\n                  <div className=\"form-group\">\n                    <div className=\"row\">\n                      <label className=\"col-4  no-padding\">Business Unit</label>\n                      <span className=\"col-1 p0\">:</span>\n                      <span className=\"col-7 \" id=\"bunit\">\n                        {Details.business_unit}\n                      </span>\n                    </div>\n                  </div>\n                </div>\n                <div className=\"col-md-3 mb-2\">\n                  <div className=\"form-group\">\n                    <div className=\"row\">\n                      <label className=\"col-4  no-padding\">Customer</label>\n                      <span className=\"col-1  p0\">:</span>\n                      <span className=\"col-7 \" id=\"cmer\">\n                        {Details.customer}\n                      </span>\n                    </div>\n                  </div>\n                </div>\n                <div className=\"col-md-3 mb-2\">\n                  <div className=\"form-group\">\n                    <div className=\"row\">\n                      <label className=\"col-4  no-padding\">Sub Practice</label>\n                      <span className=\"col-1 p0\">:</span>\n                      <span className=\"col-7 \" id=\"spractice\">\n                        {Details.sub_practice}\n                      </span>\n                    </div>\n                  </div>\n                </div>\n                <div className=\"col-md-3 mb-2\">\n                  <div className=\"form-group\">\n                    <div className=\"row\">\n                      <label className=\"col-4  no-padding\">Architect</label>\n                      <span className=\"col-1 p0\">:</span>\n                      <span className=\"col-7 \" id=\"troles\">\n                        {Details.role}\n                      </span>\n                    </div>\n                  </div>\n                </div>\n                <div className=\"col-md-3 mb-2\">\n                  <div className=\"form-group\">\n                    <div className=\"row\">\n                      <label className=\"col-4  no-padding\">\n                        Project Manager\n                      </label>\n                      <span className=\"col-1 p0\">:</span>\n                      <span className=\"col-7\" id=\"prjManager\">\n                        {Details.prj_manager}\n                      </span>\n                    </div>\n                  </div>\n                </div>\n                <div className=\"col-md-3 mb-2\">\n                  <div className=\"form-group\">\n                    <div className=\"row\">\n                      <label className=\"col-4 no-padding\">\n                        Delivery Manager\n                      </label>\n                      <span className=\"col-1 p0\">:</span>\n                      <span className=\"col-7\" id=\"delManager\">\n                        {Details.del_manager}\n                      </span>\n                    </div>\n                  </div>\n                </div>\n                <div className=\"col-md-3 mb-2\">\n                  <div className=\"form-group\">\n                    <div className=\"row\">\n                      <label className=\"col-4  no-padding\">Unit Head</label>\n                      <span className=\"col-1 p0\">:</span>\n                      <span className=\"col-7\" id=\"uhead\">\n                        {Details.unit_head}\n                      </span>\n                    </div>\n                  </div>\n                </div>\n                <div className=\"col-md-3 mb-2\">\n                  <div className=\"form-group\">\n                    <div className=\"row\">\n                      <label className=\"col-4  no-padding\">Current Phase</label>\n                      <span className=\"col-1 p0\">:</span>\n                      <span className=\"col-7 \" id=\"currPhase\">\n                        {Details.curr_phase}\n                      </span>\n                    </div>\n                  </div>\n                </div>\n                <div className=\"col-md-3 mb-2\">\n                  <div className=\"form-group\">\n                    <div className=\"row\">\n                      <label className=\"col-4  no-padding\">Billing Model</label>\n                      <span className=\"col-1 p0\">:</span>\n                      <span className=\"col-7 \" id=\"bilModel\">\n                        {Details.cont_terms}\n                      </span>\n                    </div>\n                  </div>\n                </div>\n                <div className=\"col-md-3 mb-2\">\n                  <div className=\"form-group\">\n                    <div className=\"row\">\n                      <label className=\"col-4  no-padding\">Project Type</label>\n                      <span className=\"col-1 p0\">:</span>\n                      <span className=\"col-7 \" id=\"pType\">\n                        {Details.category}\n                      </span>\n                    </div>\n                  </div>\n                </div>\n                <div className=\"col-md-3 mb-2\">\n                  <div className=\"form-group\">\n                    <div className=\"row\">\n                      <label className=\"col-4  no-padding\">\n                        Execution Methodology\n                      </label>\n                      <span className=\"col-1 p0\">:</span>\n                      <span className=\"col-7 \" id=\"emethods\">\n                        {Details.prj_exe}\n                      </span>\n                    </div>\n                  </div>\n                </div>\n                <div className=\"col-md-3 mb-2\">\n                  <div className=\"form-group\">\n                    <div className=\"row\">\n                      <label className=\"col-4  no-padding\">Start Date</label>\n                      <span className=\"col-1 p0\">:</span>\n                      <span className=\"col-7 \" id=\"sDate\">\n                        {Details.planned_start_dt}\n                      </span>\n                    </div>\n                  </div>\n                </div>\n                <div className=\"col-md-3 mb-2\">\n                  <div className=\"form-group\">\n                    <div className=\"row\">\n                      <label className=\"col-4  no-padding\">\n                        End Date- Contracted\n                      </label>\n                      <span className=\"col-1 p0\">:</span>\n                      <span className=\"col-7 \" id=\"eDate\">\n                        {Details.planned_end_dt}\n                      </span>\n                    </div>\n                  </div>\n                </div>\n                <div className=\"col-md-3 mb-2\">\n                  <div className=\"form-group\">\n                    <div className=\"row\">\n                      <label className=\"col-4  no-padding\">\n                        End Date- Estimated\n                      </label>\n                      <span className=\"col-1 p0\">:</span>\n                      <span className=\"col-7 \" id=\"eeDate\">\n                        {Details.est_planned_end_dt}\n                      </span>\n                    </div>\n                  </div>\n                </div>\n                <div className=\"col-md-3 mb-2\">\n                  <div className=\"form-group\">\n                    <div className=\"row\">\n                      <label className=\"col-4  no-padding\">% Complete</label>\n                      <span className=\"col-1 p0\">:</span>\n                      <span className=\"col-7\" id=\"pComplete\">\n                        {Details.pComplete}\n                      </span>\n                    </div>\n                  </div>\n                </div>\n                <div className=\"col-md-3 mb-2\">\n                  <div className=\"form-group\">\n                    <div className=\"row\">\n                      <label className=\"col-4  no-padding\">\n                        Billable Utilization %\n                      </label>\n                      <span className=\"col-1 p0\">:</span>\n                      <span className=\"col-7 \" id=\"bUtil\">\n                        {Details.billable_utilized}\n                      </span>\n                    </div>\n                  </div>\n                </div>\n                <div className=\"col-md-3 mb-2\">\n                  <div className=\"form-group\">\n                    <div className=\"row\">\n                      <label className=\"col-4 no-padding\">Planned FTE</label>\n                      <span className=\"col-1 p0\">:</span>\n                      <span className=\"col-7 \" id=\"pFte\">\n                        {Details.planned_team_size}\n                      </span>\n                    </div>\n                  </div>\n                </div>\n                <div className=\"col-md-3 mb-2\">\n                  <div className=\"form-group\">\n                    <div className=\"row\">\n                      <label className=\"col-4  no-padding\">Actual FTE</label>\n                      <span className=\"col-1 p0\">:</span>\n                      <span className=\"col-7 \" id=\"aFte\">\n                        {Details.actual_team_size}\n                      </span>\n                    </div>\n                  </div>\n                </div>\n                <div className=\"col-md-3 mb-2\">\n                  <div className=\"form-group\">\n                    <div className=\"row\">\n                      <label className=\"col-4  no-padding\">\n                        Expense Billable\n                      </label>\n                      <span className=\"col-1\">:</span>\n                      <span className=\"col-7\" id=\"eBillable\">\n                        {Details.ebillable}\n                      </span>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          ))}\n        </div>\n        <br />\n\n        {/* --------------------------------------------------Warning-Box----------------------------------------------- */}\n        {Data.map((Details) => (\n          <div className=\"col-md-12 my-1\">\n            <div\n              className=\"statusMsg\n                    warning\"\n            >\n              <span className=\"bold\">\n                <SlExclamation />\n              </span>\n              Note: Values in the table are between\n              <span className=\"\">{Details.planned_start_dt}</span> and{\" \"}\n              <span className=\"\"> {Details.planned_end_dt}</span> except\n              contracted value.\n            </div>\n          </div>\n        ))}\n\n        {/* --------------------------------------------------KPI-Table----------------------------------------------- */}\n        <div className=\"col-md-12\">\n          <StatusKpi pid={pid} sd={sd} ed={ed} />\n        </div>\n\n        {/* ------------------------------------------------Collapse-Start--------------------------------------------- */}\n\n        <div className=\"group mb-1 customCard \">\n          <div\n            className=\"col-md-12 collapseHeader\"\n            onClick={() => {\n              setVisibleA(!visibleA);\n              visibleA\n                ? setCheveronIconA(FaChevronCircleUp)\n                : setCheveronIconA(FaChevronCircleDown);\n            }}\n          >\n            <h2 className=\"chevron-icon\">\n              Accomplishments and Planned Activities\n            </h2>\n            <div\n              onClick={() => {\n                setVisibleA(!visibleA);\n                visibleA\n                  ? setCheveronIconA(FaChevronCircleUp)\n                  : setCheveronIconA(FaChevronCircleDown);\n              }}\n            >\n              <span className=\"chevron-icon\">{cheveronIconA}</span>\n            </div>\n          </div>\n        </div>\n        <CCollapse visible={!visibleA}>\n          <div className=\"row\">\n            <div className=\"col-md-6\">\n              <StatusAccomplishment pid={pid} />\n            </div>\n\n            <div className=\"col-md-6\">\n              <StatusPlannedActivities pid={pid} />\n            </div>\n          </div>\n        </CCollapse>\n        <div className=\"group mb-1 customCard\">\n          <div\n            className=\"col-md-12 collapseHeader\"\n            onClick={() => {\n              setVisibleB(!visibleB);\n              visibleB\n                ? setCheveronIconB(FaChevronCircleUp)\n                : setCheveronIconB(FaChevronCircleDown);\n            }}\n          >\n            <h2 className=\"chevron-icon\">Risks</h2>\n            <div\n              onClick={() => {\n                setVisibleB(!visibleB);\n                visibleB\n                  ? setCheveronIconB(FaChevronCircleUp)\n                  : setCheveronIconB(FaChevronCircleDown);\n              }}\n            >\n              <span className=\"chevron-icon\">{cheveronIconB}</span>\n            </div>\n          </div>\n        </div>\n        <CCollapse visible={!visibleB}>\n          <StatusRisk pid={pid} />\n        </CCollapse>\n\n        <div className=\"group mb-1 customCard\">\n          <div\n            onClick={() => {\n              setVisibleC(!visibleC);\n              visibleC\n                ? setCheveronIconC(FaChevronCircleUp)\n                : setCheveronIconC(FaChevronCircleDown);\n            }}\n            className=\"col-md-12 collapseHeader\"\n          >\n            <h2 className=\"chevron-icon\">Issues</h2>\n            <div\n              onClick={() => {\n                setVisibleC(!visibleC);\n                visibleC\n                  ? setCheveronIconC(FaChevronCircleUp)\n                  : setCheveronIconC(FaChevronCircleDown);\n              }}\n            >\n              <span className=\"chevron-icon\">{cheveronIconC}</span>\n            </div>\n          </div>\n        </div>\n        <CCollapse visible={!visibleC}>\n          <StatusIssues pid={pid} />\n        </CCollapse>\n\n        <div className=\"group mb-1 customCard\">\n          <div\n            className=\"col-md-12 collapseHeader\"\n            onClick={() => {\n              setVisibleD(!visibleD);\n              visibleD\n                ? setCheveronIconD(FaChevronCircleUp)\n                : setCheveronIconD(FaChevronCircleDown);\n            }}\n          >\n            <h2 className=\"chevron-icon\">Dependencies</h2>\n            <div\n              onClick={() => {\n                setVisibleD(!visibleD);\n                visibleD\n                  ? setCheveronIconD(FaChevronCircleUp)\n                  : setCheveronIconD(FaChevronCircleDown);\n              }}\n            >\n              <span className=\"chevron-icon\">{cheveronIconD}</span>\n            </div>\n          </div>\n        </div>\n        <CCollapse visible={!visibleD}>\n          <StatusDependencies pid={pid} />\n        </CCollapse>\n\n        <div className=\"group mb-1 customCard\">\n          <div\n            className=\"col-md-12 collapseHeader\"\n            onClick={() => {\n              setVisibleE(!visibleE);\n              visibleE\n                ? setCheveronIconE(FaChevronCircleUp)\n                : setCheveronIconE(FaChevronCircleDown);\n            }}\n          >\n            <h2 className=\"chevron-icon\">Scope Change History and Indicator</h2>\n            <div\n              onClick={() => {\n                setVisibleE(!visibleE);\n                visibleE\n                  ? setCheveronIconE(FaChevronCircleUp)\n                  : setCheveronIconE(FaChevronCircleDown);\n              }}\n            >\n              <span className=\"chevron-icon\">{cheveronIconE}</span>\n            </div>\n          </div>\n        </div>\n        <CCollapse visible={!visibleE}>\n          <StatusScope pid={pid} />\n        </CCollapse>\n\n        <div className=\"group mb-1 customCard\">\n          <div\n            className=\"col-md-12 collapseHeader\"\n            onClick={() => {\n              setVisibleF(!visibleF);\n              visibleF\n                ? setCheveronIconF(FaChevronCircleUp)\n                : setCheveronIconF(FaChevronCircleDown);\n            }}\n          >\n            <h2 className=\"chevron-icon\">Events</h2>\n            <div\n              onClick={() => {\n                setVisibleF(!visibleF);\n                visibleF\n                  ? setCheveronIconF(FaChevronCircleUp)\n                  : setCheveronIconF(FaChevronCircleDown);\n              }}\n            >\n              <span className=\"chevron-icon\">{cheveronIconF}</span>\n            </div>\n          </div>\n        </div>\n        <CCollapse visible={!visibleF}>\n          <StatusEvents pid={pid} />\n        </CCollapse>\n\n        {/* ------------------------------------------------Collapse-END--------------------------------------------- */}\n      </div>\n    </div>\n  );\n}\nexport default ProjectStatus;\n","import React from \"react\";\nimport \"./Issue.scss\";\nimport { useEffect } from \"react\";\nimport { CModal } from \"@coreui/react\";\nimport { CModalBody } from \"@coreui/react\";\nimport { CModalHeader } from \"@coreui/react\";\nimport { CModalTitle } from \"@coreui/react\";\nimport Highcharts from \"highcharts\";\nimport HighchartsReact from \"highcharts-react-official\";\nimport moment from \"moment\";\nrequire(\"highcharts/modules/exporting\")(Highcharts);\n\nfunction IQAChart(props) {\n  const { getGraphData, openIQA, setOpenIQA, graphData, dat } = props;\n  var D = moment(graphData[0]?.actual_start_date).format(\"MMM\" + \",\" + \"YY\");\n\n  console.log(dat);\n\n  useEffect(() => {\n    getGraphData();\n  }, []);\n\n  let iqaData = [];\n  graphData.map((g) => {\n    iqaData.push({\n      name: \"Total\",\n      color: \"#7cb5ec\",\n      data: [parseFloat(g.total + \". 0\")],\n    });\n    iqaData.push({\n      name: \"Major\",\n      color: \"#434348\",\n      data: [parseFloat(g.major)],\n    });\n    iqaData.push({\n      name: \"Minor\",\n      color: \"#90ed7d\",\n      data: [parseFloat(g.minor)],\n    });\n    iqaData.push({\n      name: \"Observations\",\n      color: \"#f7a35c\",\n      data: [parseFloat(g.medium)],\n    });\n    iqaData.push({\n      name: \"Recommendations\",\n      color: \"#8085e9\",\n      data: [parseFloat(g.recommendations)],\n    });\n  });\n  var asOfNowAxis = [];\n  asOfNowAxis.push(D);\n  asOfNowAxis.push(graphData?.medium);\n  const chartData = {\n    chart: {\n      type: \"column\",\n      width: 750,\n    },\n    title: {\n      useHTML: true,\n      text:\n        dat === 477\n          ? \"QCR\"\n          : dat === 478\n          ? \"IQA\"\n          : dat === 1272\n          ? \"ISMS\"\n          : dat === 1285\n          ? \"CMMI\"\n          : dat === 1284\n          ? \"ISO\"\n          : \"\",\n    },\n    xAxis: {\n      categories: asOfNowAxis,\n      crosshair: true,\n    },\n    yAxis: {\n      allowDecimals: false,\n      min: 0,\n      title: {\n        text: \"Score\",\n      },\n      labels: {\n        overflow: \"justify\",\n      },\n    },\n    // tooltip: {\n    tooltip: {\n      formatter: function () {\n        let tooltipText = \"<b>\" + this.x + \"</b><br/>\";\n        this.points.forEach(function (point) {\n          tooltipText += `<span style=\"color:${point.series.color}\">${point.series.name}</span> : ${point.y}<br/>`;\n        });\n        return tooltipText;\n      },\n      shared: true,\n    },\n    //     formatter: function () {\n    //         return '<b>' + this.x + '</b><br/>' +\n    //             this.series.name + ': ' + (this.y) + ' <br/>';\n    //     }\n    // },\n    credits: {\n      enabled: false,\n    },\n    plotOptions: {\n      column: {\n        pointPadding: 0.2,\n        borderWidth: 0,\n      },\n    },\n    series: iqaData,\n  };\n\n  return (\n    <div>\n      <CModal\n        visible={openIQA}\n        size=\"lg\"\n        className=\"ui-dialog\"\n        onClose={() => setOpenIQA(false)}\n      >\n        <CModalHeader>\n          <CModalTitle>\n            <span>Project Details</span>\n          </CModalTitle>\n        </CModalHeader>\n        <CModalBody>\n          <HighchartsReact highcharts={Highcharts} options={chartData} />\n        </CModalBody>\n      </CModal>\n    </div>\n  );\n}\n\nexport default IQAChart;\n","import React from \"react\";\nimport { CModal } from \"@coreui/react\";\nimport { CModalBody } from \"@coreui/react\";\nimport { CModalHeader } from \"@coreui/react\";\nimport { CModalTitle } from \"@coreui/react\";\nimport \"./Issue.scss\";\nimport { useEffect } from \"react\";\nimport Highcharts from \"highcharts\";\nimport HighchartsReact from \"highcharts-react-official\";\nimport moment from \"moment\";\nrequire(\"highcharts/modules/exporting\")(Highcharts);\n\nfunction QCRChart(props) {\n  const { getGraphData, openQCR, setOpenQCR, graphData, Auditname } = props;\n  console.log(\"QCR chart will display\");\n\n  var D = moment(graphData[0]?.actual_start_date).format(\"MMM\" + \",\" + \"YY\");\n  useEffect(() => {\n    getGraphData();\n  }, []);\n\n  let iqaData = [];\n  graphData.map((g) => {\n    iqaData.push({\n      name: \"Series 1\",\n      color: \"#7cb5ec\",\n      data: [parseFloat(g.percentage)],\n    });\n  });\n  var asOfNowAxis = [];\n  asOfNowAxis.push(D);\n\n  const chartData = {\n    chart: {\n      type: \"line\",\n      width: 700,\n    },\n    title: {\n      useHTML: true,\n      text:\n        Auditname === 477\n          ? \"QCR\" + \" - Audit Chart\"\n          : Auditname === 478\n          ? \"IQA\" + \" - Audit Chart\"\n          : Auditname === 1272\n          ? \"ISMS\" + \" - Audit Chart\"\n          : Auditname === 1285\n          ? \"CMMI\" + \" - Audit Chart\"\n          : Auditname === 1284\n          ? \"ISO\" + \" - Audit Chart\"\n          : \"\",\n    },\n    xAxis: {\n      categories: asOfNowAxis,\n      crosshair: true,\n    },\n    yAxis: {\n      allowDecimals: false,\n      min: 0,\n      // tickInterval:5,\n      title: {\n        text: \"Percentage\",\n      },\n      labels: {\n        overflow: \"justify\",\n      },\n    },\n    tooltip: {\n      formatter: function () {\n        return (\n          \"<b>\" + this.series.name + \"</b><br/>\" + \"QCR% = \" + this.y + \" <br/>\"\n        );\n      },\n    },\n    credits: {\n      enabled: false,\n    },\n    plotOptions: {\n      column: {\n        pointPadding: 0.2,\n        borderWidth: 1,\n      },\n    },\n    series: iqaData,\n  };\n\n  return (\n    <div>\n      <CModal\n        visible={openQCR}\n        size=\"lg\"\n        className=\"ui-dialog\"\n        onClose={() => setOpenQCR(false)}\n      >\n        <CModalHeader>\n          <CModalTitle>\n            <span className=\"ft16\">Project Details</span>\n          </CModalTitle>\n        </CModalHeader>\n        <CModalBody>\n          <div className=\"align center\">\n            <HighchartsReact highcharts={Highcharts} options={chartData} />\n          </div>\n        </CModalBody>\n      </CModal>\n    </div>\n  );\n}\n\nexport default QCRChart;\n","import React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { environment } from \"../../environments/environment\";\nimport moment from \"moment\";\nimport { Link } from \"react-router-dom\";\n\nimport IQAChart from \"./IQAChart\";\nimport QCRChart from \"./QCRChart\";\nimport { HiOutlineDocumentText } from \"react-icons/hi2\";\nimport { ColumnGroup } from \"primereact/columngroup\";\nimport { Row } from \"primereact/row\";\nimport { DataTable } from \"primereact/datatable\";\nimport { Column } from \"primereact/column\";\nimport { InputText } from \"primereact/inputtext\";\n\nimport { FilterMatchMode, FilterOperator } from \"primereact/api\";\nimport ScreenBreadcrumbs from \"../Common/ScreenBreadcrumbs\";\n\nfunction ProjectAuditLog(props) {\n  const [tableData, setTableData] = useState([]);\n  const [openIQA, setOpenIQA] = useState(false);\n  const [openQCR, setOpenQCR] = useState(false);\n  const [uid, setUid] = useState(0);\n  const [graphData, setGraphData] = useState([]);\n  const [dat, setDat] = useState(\"\");\n  const [Auditname, setAuditname] = useState(\"\");\n\n  const [prjName, setPrjName] = useState([]);\n  const [projectData, setProjectData] = useState([]);\n  const [selectedCustomer, setSelectedCustomer] = useState(null);\n\n  const { projectId, grp4Items } = props;\n  const baseUrl = environment.baseUrl;\n  const [filters, setFilters] = useState({\n    global: { value: null, matchMode: FilterMatchMode.CONTAINS },\n    representative: { value: null, matchMode: FilterMatchMode.IN },\n    status: {\n      operator: FilterOperator.OR,\n      constraints: [{ value: null, matchMode: FilterMatchMode.EQUALS }],\n    },\n  });\n  /// pagination\n  const downloadEmployeeData = (data) => {\n    const docUrl =\n      baseUrl +\n      `/VendorMS/vendor/downloadFile?documentId=${data?.documentId}&svnRevision=${data?.svn_revision}`;\n\n    axios({\n      url: docUrl,\n      method: \"GET\",\n      responseType: \"blob\",\n    }).then((response) => {\n      const url = window.URL.createObjectURL(new Blob([response.data]));\n      const link = document.createElement(\"a\");\n      link.href = url;\n      link.setAttribute(\"download\", data.filename); //or any other extension\n      document.body.appendChild(link);\n      link.click();\n    });\n  };\n\n  useEffect(() => {\n    downloadEmployeeData();\n  }, []);\n\n  const onChangePractice = (e) => {\n    const { value } = e.target;\n    setGetData(value);\n  };\n\n  /// end-pagination\n\n  // breadcrumbs --\n  const loggedUserId = localStorage.getItem(\"resId\");\n\n  const [routes, setRoutes] = useState([]);\n  let textContent = \"Delivery\";\n  let currentScreenName = [\"Projects\", \"Open\", \"Monitoring\", \"Audit Log\"];\n\n  useEffect(() => {\n    getMenus();\n  }, []);\n\n  const getMenus = () => {\n    // setMenusData\n\n    axios({\n      method: \"GET\",\n      url: baseUrl + `/CommonMS/master/getMenus?loggedUserId=${loggedUserId}`,\n    }).then((resp) => {\n      let data = resp.data;\n\n      data.forEach((item) => {\n        if (item.display_name === textContent) {\n          setRoutes([item]);\n        }\n      });\n    });\n  };\n\n  const getProjectName = () => {\n    axios({\n      method: \"get\",\n      url: baseUrl + `/ProjectMS/Audit/getProjectName?projectId=${projectId}`,\n    })\n      .then(function (response) {\n        let resp = response.data;\n        setPrjName(resp);\n      })\n      .catch(function (response) {});\n  };\n  const getProjectOverviewData = () => {\n    axios({\n      method: \"get\",\n      url:\n        baseUrl +\n        `/ProjectMS/Audit/projectOverviewDetails?projectId=${projectId}`,\n    })\n      .then(function (response) {\n        let resp = response.data;\n        setProjectData(resp);\n      })\n      .catch(function (response) {});\n  };\n  const getTableData = () => {\n    axios({\n      method: \"get\",\n      url:\n        baseUrl + `/ProjectMS/Audit/getAuditLogDetails?projectId=${projectId}`,\n    })\n      .then((res) => {\n        setTableData(res.data);\n      })\n      .then((error) => {});\n  };\n\n  useEffect(() => {\n    getTableData();\n    getProjectName();\n    getProjectOverviewData();\n  }, []);\n\n  const clickHanlderQCR = (id, pastAuditType) => {\n    setOpenQCR(true);\n    setUid(id);\n    setAuditname(pastAuditType);\n  };\n\n  const clickHanlderIQA = (id, pastAuditType) => {\n    setDat(pastAuditType);\n    setOpenIQA(true);\n    setUid(id);\n  };\n  const getGraphData = () => {\n    axios({\n      method: \"get\",\n      url: baseUrl + `/ProjectMS/Audit/getGraphDetails?gid=${uid}`,\n    })\n      .then((response) => {\n        let resp = response.data;\n        setGraphData(resp);\n        setUid(0);\n      })\n      .then((error) => {});\n  };\n  const AuditType = (data) => {\n    return <> {data.auditType}</>;\n  };\n  const PlannedDate = (data) => {\n    return (\n      <>\n        {\" \"}\n        {data.plandStartDate === null\n          ? \"\"\n          : moment(data.plandStartDate).format(\"DD-MMM-yyyy\")}\n      </>\n    );\n  };\n  const Reports = (data) => {\n    return (\n      <>\n        {data.documentId == null ? (\n          <HiOutlineDocumentText\n            className=\"disableField\"\n            size={\"2em\"}\n            disabled\n          />\n        ) : (\n          <a>\n            <HiOutlineDocumentText\n              onClick={() => {\n                downloadEmployeeData(data);\n              }}\n              size={\"2em\"}\n              style={{ color: \"#2e88c5\" }}\n            />\n          </a>\n        )}\n      </>\n    );\n  };\n  const Trend = (data) => {\n    return (\n      <>\n        {data.pastAuditType === 477 ? (\n          <b>\n            <Link\n              style={{\n                textDecoration: \"underline\",\n              }}\n              onClick={() => {\n                clickHanlderQCR(data.id, data.pastAuditType);\n              }}\n            >\n              {data.Result + \"%\"}\n            </Link>\n          </b>\n        ) : (\n          <b>\n            <Link\n              style={{\n                textDecoration: \"underline\",\n              }}\n              onClick={() => {\n                clickHanlderIQA(data.id, data.pastAuditType);\n              }}\n            >\n              {data.Result}\n            </Link>\n          </b>\n        )}\n      </>\n    );\n  };\n  const ScheduledDate = (data) => {\n    return (\n      <>\n        {data.scheduledDate === null\n          ? \"\"\n          : moment(data.scheduledDate).format(\"DD-MMM-yyyy\")}\n      </>\n    );\n  };\n  const headerGroup = (\n    <ColumnGroup>\n      <Row>\n        <Column\n          header=\"Last Audit Details\"\n          colSpan={6}\n          style={{ textAlign: \"center\" }}\n        />\n        <Column header=\"Schedule Details\" colSpan={1} />\n      </Row>\n      <Row>\n        <Column header=\"Audit Type\" field=\"pastAuditType\" body={AuditType} />\n        <Column\n          header=\"Planned Date\"\n          field=\"plandStartDate\"\n          body={PlannedDate}\n        />\n        <Column header=\"Auditor Name\" field=\"auditName\" />\n        <Column header=\"Trend\" field=\"Result\" />\n        <Column header=\"Reports\" field=\"documentId\" />\n        <Column header=\"Audit Status\" field=\"status\" />\n        <Column header=\"Date\" field=\"scheduledDate\" />\n      </Row>\n    </ColumnGroup>\n  );\n\n  // const onGlobalFilterChange = (event) => {\n  //   const value = event.target.value;\n  //   let _filters = { ...filters };\n  //   _filters[\"global\"].value = value;\n  //   console.log(filters);\n\n  //   setFilters(_filters);\n  // };\n  const [globalFilter, setGlobalFilter] = useState(\"\");\n\n  const onGlobalFilterChange = (event) => {\n    setGlobalFilter(event.target.value);\n  };\n  const renderHeader = () => {\n    const value = filters[\"global\"] ? filters[\"global\"].value : \"\";\n    return (\n      <div style={{ marginLeft: \"85%\" }}>\n        <span className=\"p-input-icon-left\">\n          <i className=\"pi pi-search\" />\n          <InputText\n            type=\"search\"\n            style={{ float: \"right\" }}\n            value={globalFilter}\n            onChange={(e) => onGlobalFilterChange(e)}\n            placeholder=\"Keyword Search\"\n          />\n        </span>\n      </div>\n    );\n  };\n  const header = renderHeader();\n  const filteredData = tableData.filter((item) =>\n    Object.values(item).some((value) =>\n      String(value).toLowerCase().includes(globalFilter.toLowerCase())\n    )\n  );\n\n  return (\n    <div>\n      <div className=\"col-md-12\">\n        <div className=\"pageTitle\">\n          <div className=\"childOne\">\n            <h2>{prjName}</h2>\n          </div>\n          <div className=\"childTwo\">\n            <h2>Audit Log</h2>\n          </div>\n          <div className=\"childThree\"></div>\n        </div>\n      </div>\n      <ScreenBreadcrumbs\n        routes={routes}\n        currentScreenName={currentScreenName}\n      />\n      <div className=\"customercard darkHeader mt-2\">\n        <DataTable\n          className=\"primeReactDataTable invoicingSearchTable \" ////customerEngament\n          paginatorTemplate=\"RowsPerPageDropdown FirstPageLink PrevPageLink CurrentPageReport NextPageLink LastPageLink\"\n          currentPageReportTemplate=\"{first} to {last} of {totalRecords}\"\n          rowsPerPageOptions={[10, 25, 50]}\n          value={filteredData}\n          paginator\n          rows={25}\n          header={header}\n          filters={filters}\n          onFilter={(e) => setFilters(e.filters)}\n          selection={selectedCustomer}\n          onSelectionChange={(e) => setSelectedCustomer(e.value)}\n          dataKey=\"id\"\n          showGridlines\n          stateStorage=\"session\"\n          stateKey=\"dt-state-demo-local\"\n          responsiveLayout=\"scroll\"\n          emptyMessage=\"No Records found.\"\n          headerColumnGroup={headerGroup}\n        >\n          <Column header=\"Audit Type\" field=\"pastAuditType\" body={AuditType} />\n          <Column\n            header=\"Planned Date\"\n            field=\"plandStartDate\"\n            body={PlannedDate}\n          />\n          <Column header=\"Auditor Name\" field=\"auditName\" />\n          <Column header=\"Trend\" field=\"Result\" body={Trend} align=\"right\" />\n          <Column\n            header=\"Reports\"\n            field=\"documentId\"\n            body={Reports}\n            align=\"center\"\n          />\n          <Column header=\"Audit Status\" field=\"status\" />\n          <Column header=\"Date\" body={ScheduledDate} />\n        </DataTable>\n      </div>\n      {openIQA ? (\n        <IQAChart\n          getGraphData={getGraphData}\n          openIQA={openIQA}\n          setOpenIQA={setOpenIQA}\n          graphData={graphData}\n          setGraphData={setGraphData}\n          dat={dat}\n        />\n      ) : (\n        \"\"\n      )}\n      {openQCR ? (\n        <QCRChart\n          getGraphData={getGraphData}\n          openQCR={openQCR}\n          setOpenQCR={setOpenQCR}\n          graphData={graphData}\n          setGraphData={setGraphData}\n          Auditname={Auditname}\n        />\n      ) : (\n        \"\"\n      )}\n    </div>\n  );\n}\n\nexport default ProjectAuditLog;\n","import React, { useState, useEffect, useRef } from \"react\";\nimport { CModal, CModalBody, CModalHeader, CModalTitle } from \"@coreui/react\";\nimport \"./ProjectScopesChanges.scss\";\nimport DatePicker from \"react-datepicker\";\nimport moment from \"moment\";\nimport axios from \"axios\";\nimport { environment } from \"../../environments/environment\";\nimport GlobalValidation from \"../ValidationComponent/GlobalValidation\";\nimport { AiFillWarning } from \"react-icons/ai\";\nimport { FaSave } from \"react-icons/fa\";\n\nfunction ProjectScopeChangesAddAndEditPopUP(props) {\n  const ref = useRef([]);\n\n  const {\n    addAndEditPopup,\n    setaddAndEditPopup,\n    type,\n    editId,\n    editedData,\n    getScopeChanges,\n    projectId,\n    setAddmsg,\n    setEditAddmsg,\n  } = props;\n\n  const [formEditData, setFormEditData] = useState(editedData);\n  const [id, setid] = useState(0);\n  const [validationmessage, setValidationMessage] = useState(false);\n  const [StartDt, setStartDt] = useState(null);\n  const baseUrl = environment.baseUrl;\n\n  useEffect(\n    () => {\n      type == \"add\"\n        ? setStartDt(null)\n        : setStartDt(moment(editedData.change_req_date)._d);\n    },\n    [editedData],\n    [formEditData]\n  );\n\n  ////////==================Adding the new record in table ==========///////\n\n  const handleAddClick = () => {\n    let valid = GlobalValidation(ref);\n    if (valid === true) {\n      setValidationMessage(true);\n    }\n    if (valid) {\n      return;\n    }\n    axios({\n      method: \"post\",\n      url: baseUrl + `/ProjectMS/ProjectScopeChange/postScopeChanges`,\n      data: {\n        id: null,\n        projectId: projectId,\n        description: formEditData.description,\n        changeReqDate: formEditData.change_req_date,\n        financialImpact: formEditData.financial_impact,\n      },\n      headers: { \"Content-Type\": \"application/json\" },\n    }).then(() => {\n      setid();\n      setaddAndEditPopup(false);\n      getScopeChanges();\n      setAddmsg(true);\n      setTimeout(() => {\n        setAddmsg(false);\n      }, 1000);\n    });\n  };\n\n  ///////============Editing the recent record in table =======/////////\n  const handleEditClick = () => {\n    let valid = GlobalValidation(ref);\n    if (valid === true) {\n      setValidationMessage(true);\n    }\n    if (valid) {\n      return;\n    }\n    axios({\n      method: \"post\",\n      url: baseUrl + `/ProjectMS/ProjectScopeChange/postScopeChanges`,\n      data: {\n        id: editId,\n        projectId: projectId,\n        description: formEditData.description,\n        changeReqDate: moment(formEditData.change_req_date).format(\n          \"yyyy-MM-DD\"\n        ),\n        financialImpact: formEditData.financial_impact,\n      },\n    }).then((response) => {\n      getScopeChanges();\n      setid();\n      setaddAndEditPopup(false);\n      setEditAddmsg(true);\n      type = \"add\";\n    });\n    setTimeout(() => {\n      setEditAddmsg(false);\n    }, 1000);\n  };\n\n  return (\n    <div className=\"col-md-12\">\n      <CModal\n        alignment=\"center\"\n        backdrop=\"static\"\n        size=\"xs\"\n        visible={addAndEditPopup}\n        onClose={() => setaddAndEditPopup(false)}\n      >\n        <CModalHeader className=\"\">\n          <CModalTitle>\n            {type == \"add\" ? (\n              <span className=\"\"> Add/Edit New Project Scope</span>\n            ) : (\n              <span className=\"\"> Add/Edit Project Scope</span>\n            )}\n          </CModalTitle>\n        </CModalHeader>\n        <div>\n          {validationmessage ? (\n            <div className=\" ml-2 mr-2 statusMsg error\">\n              {\" \"}\n              <span className=\"error-block\">\n                <AiFillWarning />\n                &nbsp;Please enter valid value for highlighted fields.\n              </span>\n            </div>\n          ) : (\n            \"\"\n          )}\n        </div>\n        <CModalBody>\n          <div>\n            <div className=\"col-md-12\">\n              <div className=\"form-group row mb-2\">\n                <label className=\"col-5\">Description of Changes</label>\n                <span className=\"col-1 p-0\">:</span>\n                <div\n                  className=\"col-6 textfield\"\n                  ref={(ele) => {\n                    ref.current[0] = ele;\n                  }}\n                >\n                  {type == \"add\" ? (\n                    <input\n                      type=\"text\"\n                      placeholder=\"Description of Change\"\n                      style={{ fontStyle: \"normal\" }}\n                      name=\"description\"\n                      onKeyDown={(event) => {\n                        if (event.code === \"Space\" && !formEditData.description)\n                          event.preventDefault();\n                      }}\n                      required\n                      onChange={(e) =>\n                        setFormEditData((prev) => ({\n                          ...prev,\n                          [\"description\"]: e.target.value.trim(),\n                        }))\n                      }\n                    ></input>\n                  ) : (\n                    <input\n                      type=\"text\"\n                      placeholder=\"Description of Change\"\n                      style={{ fontStyle: \"normal\" }}\n                      name=\"description\"\n                      onKeyDown={(event) => {\n                        if (event.code === \"Space\" && !formEditData.description)\n                          event.preventDefault();\n                      }}\n                      required\n                      defaultValue={editedData.description}\n                      onChange={(e) =>\n                        setFormEditData((prev) => ({\n                          ...prev,\n                          [\"description\"]: e.target.value.trim(),\n                        }))\n                      }\n                    ></input>\n                  )}\n                </div>\n              </div>\n            </div>\n\n            <div className=\"col-md-12\">\n              <div className=\"form-group row mb-2\">\n                <label className=\"col-5\">Change Requested Date</label>\n                <span className=\"col-1 p-0\">:</span>\n                <div\n                  className=\"col-6 datepicker\"\n                  ref={(ele) => {\n                    ref.current[1] = ele;\n                  }}\n                >\n                  {type == \"add\" ? (\n                    <DatePicker\n                      name=\"change_req_date\"\n                      selected={StartDt}\n                      showMonthDropdown\n                      dateFormat={\"dd-MMM-yyyy\"}\n                      showYearDropdown\n                      dropdownMode=\"select\"\n                      defaultValue={\"\"}\n                      onChange={(e) => {\n                        setStartDt(e);\n                        setFormEditData((prev) => ({\n                          ...prev,\n                          [\"change_req_date\"]: moment(e).format(\"yyyy-MM-DD\"),\n                        }));\n                      }}\n                      onKeyDown={(e) => {\n                        e.preventDefault();\n                      }}\n                    />\n                  ) : (\n                    <DatePicker\n                      name=\"change_req_date\"\n                      dateFormat={\"dd-MMM-yyyy\"}\n                      selected={StartDt}\n                      showMonthDropdown\n                      showYearDropdown\n                      dropdownMode=\"select\"\n                      defaultValue={moment(editedData.change_req_date)._d}\n                      onChange={(e) => {\n                        setFormEditData((prev) => ({\n                          ...prev,\n                          [\"change_req_date\"]: moment(e).format(\"yyyy-MM-DD\"),\n                        }));\n                        setStartDt(e);\n                      }}\n                      onKeyDown={(e) => {\n                        e.preventDefault();\n                      }}\n                    />\n                  )}\n                </div>\n              </div>\n            </div>\n            <div className=\"col-md-12\">\n              <div className=\"form-group row mb-2\">\n                <label className=\"col-5\">Financial Impact</label>\n                <span className=\"col-1 p-0\">:</span>\n                <div\n                  className=\"col-6 textfield\"\n                  ref={(ele) => {\n                    ref.current[2] = ele;\n                  }}\n                >\n                  {type == \"add\" ? (\n                    <input\n                      type=\"text\"\n                      placeholder=\"Financial Impact\"\n                      style={{ fontStyle: \"normal\" }}\n                      name=\"financial_impact\"\n                      onKeyDown={(event) => {\n                        if (\n                          event.code === \"Space\" &&\n                          !formEditData.financial_impact\n                        )\n                          event.preventDefault();\n                      }}\n                      required\n                      onChange={(e) =>\n                        setFormEditData((prev) => ({\n                          ...prev,\n                          [\"financial_impact\"]: e.target.value.trim(),\n                        }))\n                      }\n                    ></input>\n                  ) : (\n                    <input\n                      type=\"text\"\n                      placeholder=\"Financial Impact\"\n                      style={{ fontStyle: \"normal\" }}\n                      name=\"financial_impact\"\n                      onKeyDown={(event) => {\n                        if (\n                          event.code === \"Space\" &&\n                          !formEditData.financial_impact\n                        )\n                          event.preventDefault();\n                      }}\n                      required\n                      defaultValue={editedData.financial_impact}\n                      onChange={(e) =>\n                        setFormEditData((prev) => ({\n                          ...prev,\n                          [\"financial_impact\"]: e.target.value.trim(),\n                        }))\n                      }\n                    ></input>\n                  )}\n                </div>\n              </div>\n            </div>\n            <div className=\"col-md-12\" align=\"center\">\n              {type == \"add\" ? (\n                <button\n                  type=\"button\"\n                  title=\"Save\"\n                  className=\"btn btn-primary\"\n                  onClick={handleAddClick}\n                >\n                  <FaSave />\n                  Save\n                </button>\n              ) : (\n                <button\n                  type=\"button\"\n                  title=\"Save\"\n                  className=\"btn btn-primary\"\n                  onClick={handleEditClick}\n                >\n                  <FaSave />\n                  Save\n                </button>\n              )}\n            </div>\n          </div>\n        </CModalBody>\n      </CModal>\n    </div>\n  );\n}\nexport default ProjectScopeChangesAddAndEditPopUP;\n","import React, { useEffect, useRef, useState } from \"react\";\nimport axios from \"axios\";\nimport { environment } from \"../../environments/environment\";\nimport { AiFillDelete, AiFillEdit } from \"react-icons/ai\";\nimport ProjectScopeChangesAddAndEditPopUP from \"./ProjectScopeChangesAddAndEditPopUP\";\nimport CellRendererPrimeReactDataTable from \"../PrimeReactTableComponent/CellRendererPrimeReactDataTable\";\nimport { Column } from \"ag-grid-community\";\nimport Draggable from \"react-draggable\";\nimport { CModal, CModalBody, CModalHeader, CModalTitle } from \"@coreui/react\";\nimport { BiCheck } from \"react-icons/bi\";\nimport { TfiSave } from \"react-icons/tfi\";\nimport { ImCross } from \"react-icons/im\";\nimport moment from \"moment\";\nimport Loader from \"../Loader/Loader\";\nimport { FaPlus } from \"react-icons/fa\";\nimport ScreenBreadcrumbs from \"../Common/ScreenBreadcrumbs\";\n\nfunction ProjectScopeChanges(props) {\n  const { projectId, grp4Items } = props;\n  const dataObject = grp4Items.find(\n    (item) => item.display_name === \"Scope Changes\"\n  );\n\n  const [data, SetData] = useState([]);\n  const [headerData, setHeaderData] = useState([]);\n  const [linkColumns, setLinkColumns] = useState([]);\n  const baseUrl = environment.baseUrl;\n  const [deletePopup, setDeletePopup] = useState(false);\n  const [uid, setUid] = useState(\" \");\n  const [deleteMessage, setDeleteMessage] = useState(false);\n  const [addAndEditPopup, setaddAndEditPopup] = useState(false);\n  const [editedData, setEditedData] = useState([]);\n  const [type, setType] = useState(\"add\");\n  const [addmsg, setAddmsg] = useState(false);\n  const [editmsg, setEditAddmsg] = useState(false);\n  const [editId, setEditId] = useState();\n  const [prjName, setPrjName] = useState([]);\n  const [update, setUpdate] = useState(false);\n  const [loader, setLoader] = useState(false);\n  const abortController = useRef(null);\n  const loggedUserId = localStorage.getItem(\"resId\");\n\n  // breadcrumbs --\n\n  const [routes, setRoutes] = useState([]);\n  let textContent = \"Delivery\";\n  let currentScreenName = [\"Projects\", \"Open\", \"Monitoring\", \"Scope Changes\"];\n\n  useEffect(() => {\n    getMenus();\n  }, []);\n\n  const getMenus = () => {\n    // setMenusData\n\n    axios({\n      method: \"GET\",\n      url: baseUrl + `/CommonMS/master/getMenus?loggedUserId=${loggedUserId}`,\n    }).then((resp) => {\n      let data = resp.data;\n\n      data.forEach((item) => {\n        if (item.display_name === textContent) {\n          setRoutes([item]);\n        }\n      });\n    });\n  };\n\n  const data1 = {\n    id: null,\n    description: \"\",\n    change_req_date: \"\",\n    financial_impact: \"\",\n  };\n  const [color, setColor] = useState();\n  const [formData, setFormData] = useState(data1);\n  useEffect(() => {}, [editedData]);\n\n  const handleChange = (e) => {\n    const { id, value } = e.target;\n    setFormData((prev) => ({ ...prev, [id]: value }));\n  };\n\n  const [selectedValue, setSelectedValue] = useState(\n    localStorage.getItem(\"selectedValue\") || \"\"\n  );\n\n  const handleChange1 = (e) => {\n    const value = e.target.value;\n    setSelectedValue(value);\n    localStorage.setItem(\"selectedValue\", value);\n    setColor(e.target.value);\n    setLoader(false);\n    setTimeout(() => {\n      setLoader(false);\n      setUpdate(true);\n    }, 1000);\n    setTimeout(() => {\n      setUpdate(false);\n    }, 2000);\n  };\n\n  //// Getting the project Scopechanages ///////\n  const getScopeChanges = () => {\n    setLoader(false);\n    abortController.current = new AbortController();\n\n    axios({\n      method: \"get\",\n      url:\n        baseUrl +\n        `/ProjectMS/ProjectScopeChange/getProjectScopeChanges?pid=${projectId}`,\n      signal: abortController.current.signal,\n    }).then((res) => {\n      const GetData = res.data;\n      for (let i = 0; i < GetData.length; i++) {\n        GetData[i][\"SNo\"] = i + 1;\n        GetData[i][\"change_req_date\"] =\n          GetData[i][\"change_req_date\"] == null\n            ? \" \"\n            : moment(GetData[i][\"change_req_date\"]).format(\"DD-MMM-yyyy\");\n      }\n      let Headerdata = [\n        {\n          description: \"Description Of Change\",\n          change_req_date: \"Date\",\n          financial_impact: \"Financial Impact\",\n          Actions: \"Actions\",\n        },\n      ];\n      let Headerdata1 = [\n        {\n          description: \"Description Of Change\",\n          change_req_date: \"Date\",\n          financial_impact: \"Financial Impact\",\n        },\n      ];\n      let data = [\"Actions\"];\n      setLinkColumns(data);\n      setLoader(false);\n\n      {\n        grp4Items[12].is_write == true\n          ? SetData(Headerdata.concat(GetData))\n          : SetData(Headerdata1.concat(GetData));\n      }\n\n      setTimeout(() => {\n        setLoader(false);\n      }, 1000);\n    });\n  };\n\n  useEffect(() => {\n    getScopeChanges();\n  }, []);\n\n  const handleAbort = () => {\n    abortController.current && abortController.current.abort();\n    setLoader(false);\n  };\n\n  const LinkTemplate = (data) => {\n    let rou = linkColumns[0];\n    return (\n      <div align=\"center\">\n        <>\n          {grp4Items[12].is_write == true ? (\n            <AiFillEdit\n              className=\"disabled ellipsis\"\n              data-toggle=\"tooltip\"\n              title=\"Edit Scope\"\n              color=\"orange\"\n              type=\"edit\"\n              style={{ pointerEvents: \"none\" }}\n              size=\"1.2em\"\n              onClick={() => {\n                setEditedData(data);\n                setEditId(data.id);\n                setaddAndEditPopup(true);\n                setType(\"edit\");\n              }}\n            />\n          ) : (\n            \"\"\n          )}{\" \"}\n          &nbsp;\n          {grp4Items[12].is_write == true ? (\n            <AiFillDelete\n              className=\"ellipsis \"\n              data-toggle=\"tooltip\"\n              title=\"Delete Scope\"\n              color=\"orange\"\n              type=\"delete\"\n              cursor=\"pointer\"\n              onClick={() => {\n                setDeletePopup(true);\n                setUid(data.id);\n                setType(\"delete\");\n              }}\n            />\n          ) : (\n            \"\"\n          )}\n        </>\n      </div>\n    );\n  };\n\n  const changeReqDateTT = (data) => {\n    return (\n      <div data-toggle=\"tooltip\" title={data.change_req_date}>\n        {data.change_req_date}\n      </div>\n    );\n  };\n  const descriptionTT = (data) => {\n    return (\n      <div data-toggle=\"tooltip\" title={data.description}>\n        {data.description}\n      </div>\n    );\n  };\n  const financialImpactTT = (data) => {\n    return (\n      <div data-toggle=\"tooltip\" title={data.financial_impact}>\n        {data.financial_impact}\n      </div>\n    );\n  };\n\n  const dynamicColumns = Object.keys(headerData)?.map((col, i) => {\n    return (\n      <Column\n        sortable\n        key={col}\n        body={\n          col == \"Actions\"\n            ? LinkTemplate\n            : (col == \"change_req_date\" && changeReqDateTT) ||\n              (col == \"description\" && descriptionTT) ||\n              (col == \"financial_impact\" && financialImpactTT)\n        }\n        field={col}\n        header={headerData[col]}\n      />\n    );\n  });\n\n  useEffect(() => {\n    data[0] && setHeaderData(JSON.parse(JSON.stringify(data[0])));\n  }, [data]);\n\n  ///----------Deleting the record -----------///\n  const deleteIssue = () => {\n    axios({\n      method: \"delete\",\n      url:\n        baseUrl +\n        `/ProjectMS/ProjectScopeChange/deleteProjectScopeChanges?id=${uid}`,\n    }).then((error) => {\n      getScopeChanges();\n      setDeletePopup(false);\n      setDeleteMessage(true);\n      setTimeout(() => {\n        setDeleteMessage(false);\n      }, 1000);\n    });\n  };\n\n  const getProjectName = () => {\n    axios({\n      method: \"get\",\n      url: baseUrl + `/ProjectMS/Audit/getProjectName?projectId=${projectId}`,\n    }).then(function (response) {\n      let resp = response.data;\n      setPrjName(resp);\n    });\n  };\n\n  useEffect(() => {\n    getProjectName();\n  }, []);\n\n  function ProjectScopeChangesDeletePopUP(props) {\n    const { deletePopup, setDeletePopup } = props;\n\n    return (\n      <div>\n        <Draggable>\n          <CModal\n            alignment=\"center\"\n            backdrop=\"static\"\n            visible={deletePopup}\n            size=\"xs\"\n            className=\"ui-dialog\"\n            onClose={() => setDeletePopup(false)}\n          >\n            <CModalHeader className=\"\">\n              <CModalTitle>\n                <span className=\"\">Delete Scope</span>\n              </CModalTitle>\n            </CModalHeader>\n            <CModalBody>\n              Are you sure to delete Scope Change ?\n              <div className=\"btn-container center my-2\">\n                <button\n                  className=\"btn btn-primary\"\n                  title=\"Delete\"\n                  onClick={() => {\n                    deleteIssue();\n                  }}\n                >\n                  <TfiSave /> Delete\n                </button>\n                <button\n                  className=\"btn btn-secondary\"\n                  title=\"Cancel\"\n                  onClick={() => {\n                    setDeletePopup(false);\n                  }}\n                >\n                  <ImCross fontSize={\"11px\"} /> Cancel{\" \"}\n                </button>\n              </div>\n            </CModalBody>\n          </CModal>\n        </Draggable>\n      </div>\n    );\n  }\n\n  return (\n    <div>\n      {loader ? <Loader handleAbort={handleAbort} /> : \"\"}\n\n      {deleteMessage ? (\n        <div className=\"statusMsg success\">\n          <BiCheck /> Project Scope Deleted successfully\n        </div>\n      ) : (\n        \"\"\n      )}\n\n      {addmsg ? (\n        <div className=\"statusMsg success\">\n          <BiCheck /> Project Scope Saved successfully\n        </div>\n      ) : (\n        \"\"\n      )}\n\n      {editmsg ? (\n        <div className=\"statusMsg success\">\n          <BiCheck /> Project Scope Updated successfully\n        </div>\n      ) : (\n        \"\"\n      )}\n\n      {update ? (\n        <div className=\"statusMsg success\">\n          <BiCheck /> Project Scope Updated successfully\n        </div>\n      ) : (\n        \"\"\n      )}\n\n      <div className=\"col-md-12\">\n        <div className=\"pageTitle\">\n          <div className=\"childOne\">\n            <h2>{prjName}</h2>\n          </div>\n          <div className=\"childTwo\">\n            <h2>Scope Change and History Indicator</h2>\n          </div>\n          <div className=\"childThree\"></div>\n        </div>\n      </div>\n      <ScreenBreadcrumbs\n        routes={routes}\n        currentScreenName={currentScreenName}\n      />\n      <div className=\"group mb-3 customCard\">\n        <div className=\"group-content row\">\n          <div className=\"form-group col-md-2 mb-2\">\n            <label htmlFor=\"name\">Project Scope Indicator</label>\n            <select value={selectedValue} onChange={handleChange1}>\n              <option value=\"\"> &lt;&lt;Please Select&gt;&gt;</option>\n              <option value=\"Green\">Green</option>\n              <option value=\"Orange\">Orange</option>\n              <option value=\"Red\">Red</option>\n            </select>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"group mb-3 customCard\">\n        <CellRendererPrimeReactDataTable\n          data={data}\n          linkColumns={linkColumns}\n          dynamicColumns={dynamicColumns}\n          headerData={headerData}\n          setHeaderData={setHeaderData}\n          rows={10}\n        />\n        <div className=\"col-md-12 col-sm-12 col-xs-12 my-2 btn-container center\">\n          {dataObject?.is_write == true ? (\n            <button\n              type=\"Add\"\n              title=\"Add\"\n              className=\"btn btn-primary\"\n              onClick={() => {\n                setaddAndEditPopup(true);\n                setType(\"add\");\n              }}\n            >\n              <FaPlus />\n              Add\n            </button>\n          ) : (\n            \"\"\n          )}\n        </div>\n\n        {addAndEditPopup ? (\n          <ProjectScopeChangesAddAndEditPopUP\n            addAndEditPopup={addAndEditPopup}\n            handleChange={handleChange}\n            setaddAndEditPopup={setaddAndEditPopup}\n            type={type}\n            editedData={editedData}\n            setEditedData={setEditedData}\n            getScopeChanges={getScopeChanges}\n            editId={editId}\n            data1={data1}\n            data={data}\n            setAddmsg={setAddmsg}\n            setEditAddmsg={setEditAddmsg}\n            formData={formData}\n            setFormData={formData}\n            projectId={projectId}\n          />\n        ) : (\n          \"\"\n        )}\n\n        {deletePopup ? (\n          <ProjectScopeChangesDeletePopUP\n            deletePopup={deletePopup}\n            setDeletePopup={setDeletePopup}\n            editId={editId}\n          />\n        ) : (\n          \"\"\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default ProjectScopeChanges;\n","import React from \"react\";\nimport { CModal, CModalBody, CModalHeader, CModalTitle } from \"@coreui/react\";\nimport CellRendererPrimeReactDataTable from \"../PrimeReactTableComponent/CellRendererPrimeReactDataTable\";\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { AiFillDelete } from \"react-icons/ai\";\nimport { Column } from \"primereact/column\";\nimport { environment } from \"../../environments/environment\";\nimport { BiCheck } from \"react-icons/bi\";\nimport { BiError } from \"react-icons/bi\";\nimport { AiFillWarning } from \"react-icons/ai\";\nimport { FaSave } from \"react-icons/fa\";\nimport moment from \"moment\";\nimport { SecurityUpdateWarning } from \"@mui/icons-material\";\nfunction ReviewLogPopup({\n  openPopup,\n  setOpenPopup,\n  data,\n  updateId,\n  reviewerId,\n  getData,\n  statusId,\n  grp4Items,\n}) {\n  const [rowId, setRowId] = useState([]);\n  const [countData, setCountData] = useState([]);\n  const [deleteid, setDeleteId] = useState([]);\n  const [deletedId, setDeletedId] = useState([]);\n  const [headerData, setHeaderData] = useState([]);\n  const loggedUserId = localStorage.getItem(\"resId\");\n  const [selectedId, setSelectedId] = useState([]);\n  const baseUrl = environment.baseUrl;\n  const [sameDisplay, setSameDisplay] = useState(false);\n  const [dataRowId, setDataRowId] = useState([]);\n  const [deletePopup, setDeletePopup] = useState(false);\n  const [taskstatus, setTaskStatus] = useState([]);\n  const [warning, setWarning] = useState(false);\n  const [select, setSelect] = useState([]);\n  const rows = 10;\n  const searchdata = {\n    id: \"\",\n    action_status: \"\",\n    updated_by_id: \"\",\n  };\n  const [editedData, setEditedData] = useState(searchdata);\n  const [status, setStatus] = useState(editedData);\n  const [actionId, setActionId] = useState([]);\n  const [reviw, setReview] = useState([]);\n  const [updateData, setUpdateData] = useState([]);\n  const [successfullymsg, setSuccessfullymsg] = useState(false);\n  const [deleteMsg, setDeleteMsg] = useState(false);\n  const [count, setCount] = useState([{}]);\n  const [update, setUpdate] = useState([]);\n\n  const updateStatus = (count) => {\n    setSuccessfullymsg(false);\n    axios({\n      method: \"post\",\n      url: baseUrl + `/ProjectMS/project/updateActionItemStatus`,\n      data: {\n        id: selectedId === [] ? setWarning(true) : selectedId,\n        action_status:\n          parseInt(status) === null ? setWarning(true) : parseInt(status),\n        updated_by_id: parseInt(loggedUserId),\n      },\n    })\n      .then((res) => {\n        const data = res.data;\n\n        setTaskStatus(data.action_status);\n\n        setUpdateData(data);\n        getCountData();\n        setSuccessfullymsg(true);\n        setTimeout(() => {\n          setSuccessfullymsg(false);\n          setWarning(false);\n        }, 1000);\n      })\n      .catch((error) => {\n        setWarning(true);\n      });\n  };\n\n  const issueDeleteHandler = () => {\n    setDeletePopup(true);\n  };\n  const statusname = [\n    {\n      value: 1058,\n      id: \"New\",\n      label: \"85\",\n    },\n    {\n      value: 1059,\n      id: \"In Progress\",\n      label: \"86\",\n    },\n    {\n      value: 1060,\n      label: \"87\",\n      id: \"Completed\",\n    },\n  ];\n  const deleteAction = () => {\n    setDeleteMsg(false);\n    axios\n      .delete(baseUrl + `/ProjectMS/project/deleteStatusItem?id=${deletedId}`)\n      .then((res) => {\n        const del = res.data;\n        setDeleteId(del);\n        getCountData();\n        getData();\n        setDeleteMsg(true);\n\n        setTimeout(() => {\n          setDeleteMsg(false);\n        }, 3000);\n      });\n  };\n\n  const getCountData = () => {\n    axios\n      .get(\n        baseUrl +\n          `/ProjectMS/project/projectreviewlogTableInfo?ProjectId=${updateId}`\n      )\n\n      .then((res) => {\n        const GetData = res.data;\n        let custom = [];\n        GetData.forEach((element) => {\n          let obj = {\n            value: element.id,\n          };\n          custom.push(obj);\n\n          setRowId(custom);\n        });\n\n        for (let i = 0; i < GetData.length; i++) {\n          GetData[i][\"SNo\"] = i + 1;\n        }\n        let headerdata = [\n          {\n            SNo: \"S.No\",\n            action: \"Action\",\n            date_created: \"Created Date\",\n            due_date: \"Due Date\",\n            completed_date: \"Completed Date\",\n            reviewer_comments: \"Reviewer Comments\",\n            Name: \"Created By\",\n            action_status: \"Status\",\n            id: \"Action\",\n          },\n        ];\n        let headerdata1 = [\n          {\n            SNo: \"S.No\",\n            action: \"Action\",\n            date_created: \"Created Date\",\n            due_date: \"Due Date\",\n            completed_date: \"Completed Date\",\n            reviewer_comments: \"Reviewer Comments\",\n            Name: \"Created By\",\n          },\n        ];\n        setSelect(GetData[0].action_status);\n        {\n          grp4Items[11].is_write == true\n            ? setCountData(headerdata1.concat(GetData))\n            : setCountData(headerdata1.concat(GetData));\n        }\n\n        setCount(GetData);\n        setEditedData(GetData);\n      });\n  };\n\n  useEffect(() => {\n    getCountData();\n  }, []);\n  const [r, setr] = useState([]);\n  useEffect(() => {\n    countData[0] && setHeaderData(JSON.parse(JSON.stringify(countData[0])));\n  }, [countData]);\n\n  const onchange = (e, data) => {\n    const { id, value } = e.target;\n    setDataRowId((prev) => ({ ...prev, [data.id]: e.target.value }));\n    setStatus(e.target.value);\n  };\n\n  const LinkTemplate = (data) => {\n    return (\n      <>\n        {grp4Items[11].is_write == true ? (\n          <div style={{ textAlign: \"center\", cursor: \"not-allowed\" }}>\n            {/* <button>Delete</button> */}\n            <AiFillDelete\n              data-toggle=\"tooltip\"\n              title=\"Delete\"\n              // onClick={deleteAction}\n              // onClick={() => {\n              //   issueDeleteHandler();\n\n              //   setDeletedId(data.id);\n              //   getCountData();\n              // }}\n            />\n          </div>\n        ) : (\n          \"\"\n        )}\n      </>\n    );\n  };\n\n  const LinkTemplateDropdown = (data) => {\n    return (\n      <>\n        {grp4Items[11].is_write == true ? (\n          <select\n            id=\"action_status\"\n            // defaultValue={}\n\n            onChange={(e) => {\n              setStatus(e.target.value);\n\n              setSelectedId(data.id);\n            }}\n            defaultValue={data.action_status}\n            disabled\n          >\n            <option\n              value=\"1058\"\n              selected={setStatus.action_status == \"1058\"}\n              // selected={1058 == editedData[0]?.action_status ? true : false}\n            >\n              New\n            </option>\n            <option\n              value=\"1059\"\n              selected={setStatus.action_status == \"1059\"}\n\n              // selected={status}\n            >\n              In Progress\n            </option>\n            <option\n              value=\"1060\"\n              selected={setStatus.action_status == \"1060\"}\n\n              // selected={1060 == editedData[2]?.action_status ? true : false}\n            >\n              Completed\n            </option>\n          </select>\n        ) : (\n          <select id=\"action_status\" defaultValue={data.action_status} disabled>\n            <option\n              value=\"1058\"\n              selected={setStatus.action_status == \"1058\"}\n              // selected={1058 == editedData[0]?.action_status ? true : false}\n            >\n              New\n            </option>\n            <option\n              value=\"1059\"\n              selected={setStatus.action_status == \"1059\"}\n\n              // selected={status}\n            >\n              In Progress\n            </option>\n            <option\n              value=\"1060\"\n              selected={setStatus.action_status == \"1060\"}\n\n              // selected={1060 == editedData[2]?.action_status ? true : false}\n            >\n              Completed\n            </option>\n          </select>\n        )}\n      </>\n    );\n  };\n\n  const LinkDataProps = (data) => {\n    return <div title={data.Name}>{data.Name}</div>;\n  };\n  const RevComents = (data) => {\n    return (\n      <div data-toggle=\"tooltip\" title={data.reviewer_comments}>\n        {data.reviewer_comments}\n      </div>\n    );\n  };\n  const LinkMoment = (data) => {\n    return (\n      <div title={moment(data.date_created).format(\"DD-MMM-YYYY\")}>\n        {moment(data.date_created).format(\"DD-MMM-YYYY\")}\n      </div>\n    );\n  };\n  const LinkMomentDue = (data) => {\n    return (\n      <div title={moment(data.due_date).format(\"DD-MMM-YYYY\")}>\n        {moment(data.due_date).format(\"DD-MMM-YYYY\")}\n      </div>\n    );\n  };\n  const Action = (data) => {\n    return (\n      <div data-toggle=\"tooltip\" title={data.action}>\n        {data.action}\n      </div>\n    );\n  };\n  const SNumber = (data) => {\n    return (\n      <span style={{ textAlign: \"center\", marginLeft: \"45%\" }}>{data.SNo}</span>\n    );\n  };\n  const createdBy = (data) => {\n    return (\n      <div data-toggle=\"tooltip\" title={data.action_statuss}>\n        {data.action_statuss}\n      </div>\n    );\n  };\n\n  const dynamicColumns = Object.keys(headerData)?.map((col, i) => {\n    return (\n      <Column\n        sortable\n        key={col}\n        body={\n          col == \"id\"\n            ? LinkTemplate\n            : col == \"action_status\"\n            ? LinkTemplateDropdown\n            : col == \"Name\"\n            ? LinkDataProps\n            : col == \"date_created\"\n            ? LinkMoment\n            : col == \"due_date\"\n            ? LinkMomentDue\n            : // : col == \"reviewer_comments\"\n            // ? ReviewerComments\n            col == \"action\"\n            ? Action\n            : col == \"reviewer_comments\"\n            ? RevComents\n            : col == \"SNo\" && SNumber\n        }\n        field={col}\n        header={headerData[col]}\n      />\n    );\n  });\n\n  function ReviewReport(props) {\n    const { deletePopup, setDeletePopup, deleteAction } = props;\n    return (\n      <div className=\"deletePopUpReviewLog\">\n        {/* <Draggable> */}\n        <CModal\n          visible={deletePopup}\n          size=\"xs\"\n          className=\"ui-dialog\"\n          onClose={() => setDeletePopup(false)}\n        >\n          <CModalHeader className=\"\">\n            <CModalTitle>\n              <span className=\"\">Delete Confirmation</span>\n            </CModalTitle>\n          </CModalHeader>\n          <CModalBody>\n            <p>Are you sure you want to delete the Action Item ?</p>\n\n            <div className=\"btn-container center my-2\">\n              <button\n                style={{ border: \"1px solid black\" }}\n                type=\"delete\"\n                className=\"btn\"\n                // onClick={deleteAction}\n                onClick={() => {\n                  deleteAction();\n                  setDeletePopup(false);\n                }}\n              >\n                {\" \"}\n                Yes{\" \"}\n              </button>\n              <button\n                style={{ border: \"1px solid black\" }}\n                type=\"button\"\n                className=\"btn\"\n                onClick={() => {\n                  setDeletePopup(false);\n                }}\n              >\n                {\" \"}\n                No{\" \"}\n              </button>\n            </div>\n          </CModalBody>\n        </CModal>\n        {/* </Draggable> */}\n      </div>\n    );\n  }\n\n  return (\n    <div>\n      <CModal\n        visible={openPopup}\n        size=\"xl\"\n        className=\" ui-dialog\"\n        onClose={() => setOpenPopup(false)}\n        // rows={rows}\n      >\n        <CModalHeader className=\"\" style={{ cursor: \"all-scroll\" }}>\n          <CModalTitle>\n            <span className=\"\"> Review Details </span>\n          </CModalTitle>\n        </CModalHeader>\n        <CModalBody>\n          <div>\n            {successfullymsg ? (\n              <div className=\"statusMsg success\">\n                <span className=\"errMsg\">\n                  <BiCheck />\n                  &nbsp; Action status saved successfully\n                </span>\n              </div>\n            ) : (\n              \"\"\n            )}\n            {warning === true ? (\n              <div className=\"statusMsg error\">\n                <span className=\"errMsg\">\n                  <AiFillWarning />\n                  &nbsp; please change the status before Saving\n                </span>\n              </div>\n            ) : (\n              \"\"\n            )}\n\n            {sameDisplay ? (\n              <div className=\"statusMsg success\">\n                <span className=\"errMsg\">\n                  <AiFillWarning />\n                  &nbsp; Action status saved successfully\n                </span>\n              </div>\n            ) : (\n              \"\"\n            )}\n\n            {deleteMsg ? (\n              <div className=\"statusMsg success\">\n                <span className=\"errMsg\">\n                  <BiError />\n                  &nbsp; Action status Deleted successfully\n                </span>\n              </div>\n            ) : (\n              \"\"\n            )}\n            <div>\n              <CellRendererPrimeReactDataTable\n                data={countData}\n                rows={rows}\n                dynamicColumns={dynamicColumns}\n                headerData={headerData}\n                setHeaderData={setHeaderData}\n              />\n            </div>\n            <div className=\"col-md-12 col-sm-12 col-xs-12 my-2 btn-container center\">\n              {\" \"}\n              {/* {permissions == \"ORG_FULL\"\n                ? \"\"\n                : // <button\n                  //   className=\"btn btn-primary disableField\"\n                  //   style={{ cursor: \"not-allowed\" }}\n                  // >\n                  //   <FaSave /> Save\n                  // </button>\n                  \"\"} */}\n            </div>\n          </div>\n        </CModalBody>\n      </CModal>\n      {deletePopup ? (\n        <ReviewReport\n          deletePopup={deletePopup}\n          setDeletePopup={setDeletePopup}\n          deleteAction={deleteAction}\n        />\n      ) : (\n        \"\"\n      )}\n    </div>\n  );\n}\nexport default ReviewLogPopup;\n","import React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { CModal } from \"@coreui/react\";\nimport { CModalBody } from \"@coreui/react\";\nimport { CModalHeader } from \"@coreui/react\";\nimport { CModalTitle } from \"@coreui/react\";\nimport { makeStyles } from \"@material-ui/core\";\nimport { Link } from \"react-router-dom\";\nimport ReviewLogPopup from \"../ProjectComponent/ReviewLogPopup\";\nimport { environment } from \"../../environments/environment\";\nimport CellRendererPrimeReactDataTable from \"../PrimeReactTableComponent/CellRendererPrimeReactDataTable\";\nimport \"primeicons/primeicons.css\";\nimport \"primereact/resources/themes/lara-light-indigo/theme.css\";\nimport \"primereact/resources/primereact.css\";\nimport \"primeflex/primeflex.css\";\nimport { Column } from \"primereact/column\";\nimport ScreenBreadcrumbs from \"../Common/ScreenBreadcrumbs\";\n\nfunction ProjectReviewLog(props) {\n  const [openPopup, setOpenPopup] = useState(false);\n  const [openPopReport, setOpenPopUpReport] = useState(false);\n  const [docId, setDocId] = useState([]);\n  const [svnRevision, setSvnRevision] = useState();\n  const [updateId, setUpdateId] = useState([]);\n  const [reviewerId, setReviewerId] = useState([]);\n  const [projectData, setProjectData] = useState([]);\n  const [statusId, setStatusId] = useState([]);\n  const baseUrl = environment.baseUrl;\n  const [headerdata, setHeaderdata] = useState([]);\n  const [deletePopup, setDeletePopup] = useState(false);\n  const { projectId, grp4Items } = props;\n\n  const [data, setData] = useState([{}]);\n  const [countData, setCountData] = useState([{}]);\n  const rows = 25;\n\n  const [dataDoc, setDataDoc] = useState([]);\n  const loggedUserId = localStorage.getItem(\"resId\");\n\n  const getProjectOverviewData = () => {\n    axios({\n      method: \"get\",\n      url:\n        baseUrl +\n        `/ProjectMS/Audit/projectOverviewDetails?projectId=${projectId}`,\n    })\n      .then(function (response) {\n        let resp = response.data;\n\n        setProjectData(resp);\n        //    setPrjName(resp)\n      })\n      .catch(function (response) {});\n  };\n  // breadcrumbs --\n\n  const [routes, setRoutes] = useState([]);\n  let textContent = \"Delivery\";\n  let currentScreenName = [\"Projects\", \"Open\", \"Monitoring\", \"Review Log\"];\n\n  useEffect(() => {\n    getMenus();\n  }, []);\n\n  const getMenus = () => {\n    // setMenusData\n\n    axios({\n      method: \"GET\",\n      url: baseUrl + `/CommonMS/master/getMenus?loggedUserId=${loggedUserId}`,\n    }).then((resp) => {\n      let data = resp.data;\n\n      data.forEach((item) => {\n        if (item.display_name === textContent) {\n          setRoutes([item]);\n        }\n      });\n    });\n  };\n  const getData = () => {\n    axios\n      .get(\n        baseUrl +\n          `/ProjectMS/project/projectreviewloginfo?ProjectId=${projectId}`\n      )\n\n      .then((res) => {\n        const GetData = res.data;\n        GetData.forEach((GetData, index) => {\n          GetData[\"sno\"] = index + 1;\n          //  GetData[\"id\"] = index;\n        });\n\n        // setUpdateId(GetData[0].prhId);\n        let headerdata = [\n          {\n            sno: \"S.No\",\n            review_dt: \"Review Date\",\n            rev_type: \"Type\",\n            reviewer: \"Reviewer\",\n            actItems: \"Action Items\",\n            docCount: \"Report\",\n            comments: \"Comments\",\n          },\n        ];\n\n        setData(headerdata.concat(GetData));\n      })\n      .catch((error) => {\n        console.log(\"Error :\" + error);\n      });\n  };\n\n  useEffect(() => {\n    getData();\n    getProjectOverviewData();\n  }, []);\n  const consoledData = () => {\n    // getCountData();\n    setOpenPopup(true);\n  };\n\n  const consoledDataReport = () => {\n    setOpenPopUpReport(true);\n  };\n  // let documents = docId.split();\n  const LinkTemplateAction = (data) => {\n    return (\n      <>\n        <span\n          className=\" ellipsis tooltip-ex\"\n          data-toggle=\"tooltip\"\n          title={data.docCount}\n          style={{ cursor: \"pointer\", textAlign: \"center\", color: \"#2E88C5\" }}\n          onClick={() => {\n            issueDeleteHandler();\n\n            setDocId(data.docId);\n\n            setSvnRevision(data.svn_revision);\n          }}\n        >\n          <div style={{ textAlign: \"center\", textDecoration: \"underLine\" }}>\n            {data.docCount}\n          </div>\n        </span>\n      </>\n    );\n  };\n  const SerialNo = (data) => {\n    return (\n      <span style={{ textAlign: \"center\", marginLeft: \"45%\", width: \"10px\" }}>\n        {data.sno}\n      </span>\n    );\n  };\n  const Comments = (data) => {\n    return (\n      <span\n        className=\" ellipsis tooltip-ex\"\n        data-toggle=\"tooltip\"\n        title={data.comments}\n      >\n        {data.comments}\n      </span>\n    );\n  };\n  const LinkTemplate = (data) => {\n    return (\n      <>\n        <span\n          className=\" ellipsis tooltip-ex\"\n          data-toggle=\"tooltip\"\n          title={data.actItems}\n          style={{ cursor: \"pointer\", textAlign: \"center\", color: \"#2E88C5\" }}\n          // onClick={consoledData}\n          onClick={() => {\n            consoledData();\n            setUpdateId(data.prhId);\n            setReviewerId(data.reviewer);\n            setStatusId(data.review_st);\n          }}\n        >\n          <div style={{ textAlign: \"center\", textDecoration: \"underLine\" }}>\n            {data.actItems != 0 ? data.actItems : \"\"}\n          </div>\n        </span>\n      </>\n    );\n  };\n  const dynamicColumns = Object.keys(headerdata)?.map((col, i) => {\n    return (\n      <Column\n        sortable\n        key={col}\n        body={\n          col == \"actItems\"\n            ? LinkTemplate\n            : col == \"docCount\"\n            ? LinkTemplateAction\n            : col == \"sno\"\n            ? SerialNo\n            : col == \"comments\" && Comments\n        }\n        field={col}\n        header={headerdata[col]}\n      />\n    );\n  });\n  const issueDeleteHandler = () => {\n    setDeletePopup(true);\n  };\n\n  function ReviewReport(props) {\n    function getAllNames(dataString) {\n      const data = dataString?.split(\",\");\n      const names = data?.map((item) => {\n        const [, name] = item?.split(\":\");\n        return name?.trim();\n      });\n      return names;\n    }\n\n    const downloadEmployeeData = (data) => {\n      const docUrl =\n        baseUrl +\n        `/VendorMS/vendor/downloadFile?documentId=${dataArray[0][0]}&svnRevision=${svnRevision}`;\n      // /VendorMS/vendor/downloadFile?documentId=133053941&svnRevision=126532\n      axios({\n        url: docUrl,\n        method: \"GET\",\n        responseType: \"blob\",\n      }).then((response) => {\n        const url = window.URL.createObjectURL(new Blob([response.data]));\n\n        const link = document.createElement(\"a\");\n\n        link.href = url;\n        link.setAttribute(\"download\", data.file_name); //or any other extension\n        document.body.appendChild(link);\n        link.click();\n      });\n    };\n\n    useEffect(() => {\n      downloadEmployeeData();\n    }, []);\n    const useStyles = makeStyles({\n      dialog: {\n        position: \"absolute\",\n        top: \"250px\",\n        minHeight: \"18%\",\n      },\n      textField: {\n        border: \"1px solid rgb(159 13 13)\",\n      },\n    });\n\n    const classes = useStyles();\n\n    const { deletePopup, setDeletePopup, docId } = props;\n\n    // const data1 = docId.split(\":\");\n    const dataArray = docId?.split(\",\")?.map((item) => item?.split(\":\"));\n\n    dataArray?.map((e) => {\n      setDataDoc(e[1]);\n    });\n\n    return (\n      <div className=\"reviewLogDeletePopUp\">\n        {/* <Draggable> */}\n        <CModal\n          visible={deletePopup}\n          size=\"xs\"\n          className=\"reviewLogDeletePopUp\"\n          onClose={() => setDeletePopup(false)}\n          maxWidth={\"md\"}\n          classes={{\n            paper: classes.dialog,\n          }}\n        >\n          <CModalHeader className=\"\">\n            <CModalTitle>\n              <span className=\"\">Documents</span>\n            </CModalTitle>\n          </CModalHeader>\n          <CModalBody>\n            {/* <span>{data1[1]}</span> */}\n            {dataArray == null ? (\n              <Link\n                data-toggle=\"tooltip\"\n                to={`/document/downloadFile?docume`}\n                target=\"_blank\"\n              >\n                undefined\n              </Link>\n            ) : (\n              dataArray?.map((e) => (\n                // <Link\n                //   data-toggle=\"tooltip\"\n                //   to={`/document/downloadFile?documentId=58717229`}\n                //   target=\"_blank\"\n                // >\n                //   <div> {e[1]}</div>\n                // </Link>\n                <Link\n                  style={{ cursor: \"pointer\" }}\n                  onClick={() => {\n                    downloadEmployeeData(data);\n                  }}\n                  title={data.file_name}\n                  data-toggle=\"tooltip\"\n                >\n                  {\" \"}\n                  <ul\n                    style={{ textDecoration: \"underLine\", marginBottom: \"0px\" }}\n                    key={e[1]}\n                  >\n                    {e[1]}\n                  </ul>\n                </Link>\n              ))\n            )}\n            {/* /document/downloadFile?documentId=58717229 */}\n          </CModalBody>\n        </CModal>\n        {/* </Draggable> */}\n      </div>\n    );\n  }\n  return (\n    <div>\n      <div className=\"pageTitle\">\n        <div className=\"childOne\">\n          {projectData.map((item) => (\n            <div>\n              <h2>{item.projectName}</h2>\n              {/* <h2>({item.projectCode})</h2> */}\n            </div>\n          ))}\n        </div>\n        <div className=\"childTwo\">\n          <h2>Review Log</h2>\n        </div>\n\n        <div className=\"childThree\"></div>\n      </div>\n      {/* <FlatPrimeReactTable data={data} rows={rows} /> */}\n      <ScreenBreadcrumbs\n        routes={routes}\n        currentScreenName={currentScreenName}\n      />\n      <CellRendererPrimeReactDataTable\n        data={data}\n        rows={rows}\n        dynamicColumns={dynamicColumns}\n        headerData={headerdata}\n        setHeaderData={setHeaderdata}\n      />\n\n      {openPopup ? (\n        <ReviewLogPopup\n          openPopup={openPopup}\n          setOpenPopup={setOpenPopup}\n          headerdata={headerdata}\n          setHeaderdata={setHeaderdata}\n          rows={rows}\n          getData={getData}\n          updateId={updateId}\n          reviewerId={reviewerId}\n          statusId={statusId}\n          grp4Items={grp4Items}\n        />\n      ) : (\n        \"\"\n      )}\n      {deletePopup ? (\n        <ReviewReport\n          deletePopup={deletePopup}\n          setDeletePopup={setDeletePopup}\n          docId={docId}\n        />\n      ) : (\n        \"\"\n      )}\n    </div>\n  );\n}\nexport default ProjectReviewLog;\n","import React, { useEffect, useRef, useState } from \"react\";\nimport { FilterMatchMode } from \"primereact/api\";\nimport { DataTable } from \"primereact/datatable\";\nimport { Column } from \"primereact/column\";\nimport \"primeicons/primeicons.css\";\nimport \"primereact/resources/themes/lara-light-indigo/theme.css\";\nimport \"primereact/resources/primereact.css\";\nimport \"primeflex/primeflex.css\";\nimport { InputText } from \"primereact/inputtext\";\n\nrequire(\"jspdf-autotable\");\n\nfunction DocumentsTable(props) {\n  const {\n    data,\n    rows,\n    value,\n    dynamicColumns,\n    headerData,\n    setHeaderData,\n    setCheckedData,\n    setSelectedIds,\n    checkboxSelect,\n    setCheckboxSelect,\n    permissions,\n    grp1Items,\n    selectedIds,\n  } = props;\n  const [mainData, setMainData] = useState([]);\n  const [bodyData, setBodyData] = useState([]);\n  const [exportColumns, setExportColumns] = useState([]);\n\n  useEffect(() => {\n    if (checkboxSelect && checkboxSelect.length > 0) {\n      const selectedIds = checkboxSelect.map((item) => item.id);\n    }\n  }, [checkboxSelect]);\n\n  const handleChange = (e) => {\n    const selectedRows = e.value;\n    if (selectedRows.length > 0) {\n      setCheckboxSelect(selectedRows);\n    }\n    let data = e.value;\n    let fData = data.map((d) => d.id);\n    {\n      value == \"trackerscreensadder\"\n        ? setCheckedData(data)\n        : setCheckedData(fData[0]);\n    }\n\n    let b = String(data.map((f) => f.id));\n    let c = b.replace(/,/g, \";\");\n    setCheckedData(c);\n    setCheckboxSelect(e.value);\n\n    let ids = e.value.map((val) => val.id);\n    setSelectedIds(ids);\n  };\n\n  const dt = useRef(null);\n  useEffect(() => {\n    setMainData(JSON.parse(JSON.stringify(data)));\n  }, [data]);\n\n  useEffect(() => {\n    if (mainData.length > 0) {\n      setHeaderData(mainData[0]);\n      setBodyData(mainData.splice(1));\n\n      let dtt = [];\n      let headDt = mainData[0];\n\n      Object.keys(headDt).forEach((d) => {\n        d != \"StatusId\" && dtt.push({ title: headDt[d], dataKey: d });\n      });\n\n      setExportColumns(dtt);\n    }\n  }, [mainData]);\n\n  const filtersData = {\n    contains: { value: null, matchMode: FilterMatchMode.CONTAINS },\n  };\n\n  const [filters1, setFilters1] = useState({\n    global: filtersData[\"contains\"],\n  });\n\n  useEffect(() => {\n    setFilters1({\n      global: filtersData[\"contains\"],\n    });\n  }, [headerData]);\n  const [globalFilterValue1, setGlobalFilterValue1] = useState(\"\");\n\n  const onGlobalFilterChange1 = (e) => {\n    const value = e.target.value;\n    let _filters1 = { ...filters1 };\n    _filters1[\"global\"].value = value;\n    setFilters1(_filters1);\n    setGlobalFilterValue1(value);\n  };\n\n  const renderHeader1 = () => {\n    return (\n      <div className=\"flex  flex-row-reverse\">\n        <span className=\"p-input-icon-left tableGsearch\">\n          <i className=\"pi pi-search\" />\n          <InputText\n            defaultValue={globalFilterValue1}\n            onChange={onGlobalFilterChange1}\n            placeholder=\"Keyword Search\"\n          />\n        </span>\n      </div>\n    );\n  };\n\n  const header1 = renderHeader1();\n  const emptyMessage = \"No Records found.\";\n  const isCheckboxDisabled =\n    emptyMessage !== \"\" && checkboxSelect?.length === 0;\n  return (\n    <div className=\"darkHeader\">\n      {Object.keys(headerData).length > 0 && (\n        <DataTable\n          paginatorTemplate=\"RowsPerPageDropdown FirstPageLink PrevPageLink CurrentPageReport NextPageLink LastPageLink\"\n          currentPageReportTemplate=\"{first} to {last} of {totalRecords}\"\n          rowsPerPageOptions={[10, 25, 50]}\n          paginationrowsperpageoptions={[5, 15, 25, 50]}\n          paginationcomponentoptions={{\n            rowsPerPageText: \"Records per page:\",\n            rangeSeparatorText: \"out of\",\n          }}\n          value={bodyData}\n          paginator\n          showGridlines\n          rows={rows}\n          dataKey=\"id\"\n          filters={filters1}\n          selectionMode=\"checkbox\"\n          selection={checkboxSelect}\n          responsiveLayout=\"scroll\"\n          header={header1}\n          onSelectionChange={(e) => handleChange(e)}\n          className=\" primeReactDataTable checkboxselect\"  /////customerEngament\n        >\n          {grp1Items[4]?.is_write === true && (\n            <Column\n              selectionMode={data?.length > 0 ? \"multiple\" : \"\"}\n              style={{\n                paddingRight: \"7px\",\n              }}\n              disabled={isCheckboxDisabled}\n            />\n          )}\n\n          {dynamicColumns}\n        </DataTable>\n      )}\n    </div>\n  );\n}\n\nexport default DocumentsTable;\n","import * as React from \"react\";\nimport TreeView from \"@mui/lab/TreeView\";\nimport PropTypes, { node } from \"prop-types\";\nimport SvgIcon from \"@mui/material/SvgIcon\";\nimport { alpha, styled } from \"@mui/material/styles\";\nimport TreeItem, { treeItemClasses } from \"@mui/lab/TreeItem\";\nimport Collapse from \"@mui/material/Collapse\";\nimport { useSpring, animated } from \"@react-spring/web\";\nimport { FcOpenedFolder } from \"react-icons/fc\";\nimport \"./DocumentHierarchy.scss\";\nimport { useEffect } from \"react\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\n\nfunction MinusSquare(props) {\n  return (\n    <SvgIcon fontSize=\"inherit\" className=\"hierarchyCollapseIcon\" {...props}>\n      <path d=\"M22.047 22.074v0 0-20.147 0h-20.12v0 20.147 0h20.12zM22.047 24h-20.12q-.803 0-1.365-.562t-.562-1.365v-20.147q0-.776.562-1.351t1.365-.575h20.147q.776 0 1.351.575t.575 1.351v20.147q0 .803-.575 1.365t-1.378.562v0zM17.873 11.023h-11.826q-.375 0-.669.281t-.294.682v0q0 .401.294 .682t.669.281h11.826q.375 0 .669-.281t.294-.682v0q0-.401-.294-.682t-.669-.281z\" />\n    </SvgIcon>\n  );\n}\n\nfunction PlusSquare(props) {\n  return (\n    <SvgIcon fontSize=\"inherit\" className=\"hierarchyExpandIcon\" {...props}>\n      <path d=\"M22.047 22.074v0 0-20.147 0h-20.12v0 20.147 0h20.12zM22.047 24h-20.12q-.803 0-1.365-.562t-.562-1.365v-20.147q0-.776.562-1.351t1.365-.575h20.147q.776 0 1.351.575t.575 1.351v20.147q0 .803-.575 1.365t-1.378.562v0zM17.873 12.977h-4.923v4.896q0 .401-.281.682t-.682.281v0q-.375 0-.669-.281t-.294-.682v-4.896h-4.923q-.401 0-.682-.294t-.281-.669v0q0-.401.281-.682t.682-.281h4.923v-4.896q0-.401.294-.682t.669-.281v0q.401 0 .682.281t.281.682v4.896h4.923q.401 0 .682.281t.281.682v0q0 .375-.281.669t-.682.294z\" />\n    </SvgIcon>\n  );\n}\n\nfunction TransitionComponent(props) {\n  const style = useSpring({\n    from: {\n      opacity: 0,\n      transform: \"translate3d(20px,0,0)\",\n    },\n    to: {\n      opacity: props.in ? 1 : 0,\n      transform: `translate3d(${props.in ? 0 : 20}px,0,0)`,\n    },\n  });\n\n  return (\n    <animated.div style={style}>\n      <Collapse {...props} />\n    </animated.div>\n  );\n}\n\nTransitionComponent.propTypes = {\n  in: PropTypes.bool,\n};\n\nconst StyledTreeItem = styled((props) => {\n  return (\n    <div>\n      <TreeItem\n        {...props}\n        key={String(props?.node?.id)}\n        nodeId={String(props?.node?.id)}\n        label={\n          <Tooltip title={props?.node?.folder_name}>\n            <span>{props?.node?.folder_name}</span>\n          </Tooltip>\n        }\n        TransitionComponent={TransitionComponent}\n      >\n        {Array.isArray(props?.node?.subRows)\n          ? props?.node?.subRows.map((node) => renderTree(node))\n          : \"\"}\n      </TreeItem>\n    </div>\n  );\n})(({ theme }) => ({\n  [`& .${treeItemClasses.iconContainer}`]: {\n    \"& .close\": {\n      opacity: 0.3,\n    },\n  },\n  [`& .${treeItemClasses.group}`]: {\n    marginLeft: 15,\n    paddingLeft: 18,\n    borderLeft: `1px dashed ${alpha(theme.palette.text.primary, 0.4)}`,\n  },\n}));\n\nconst renderTree = (nodes) => (\n  <div key={String(nodes?.id)}>\n    <StyledTreeItem node={nodes}></StyledTreeItem>\n  </div>\n);\nexport default function DocumentHierarchy(props) {\n  const {\n    defaultExpandedRows,\n    data,\n    SetDocFolderId,\n    setLabel,\n    projectId,\n    label,\n    setAddVisible,\n  } = props;\n\n  useEffect(() => {\n    setTimeout(() => {\n      document\n        .getElementsByClassName(\"MuiTreeItem-root\")[0]\n        .children[0].click();\n    }, 1000);\n  }, []);\n\n  const jsonToTree = (flatArray, options) => {\n    options = {\n      id: \"id\",\n      parentId: \"parent_id\",\n      children: \"subRows\",\n      ...options,\n    };\n    const dictionary = {};\n    const tree = [];\n    const children = options.children;\n    flatArray.forEach((node) => {\n      const nodeId = node[options.id];\n      const nodeParentId = node[options.parentId];\n      dictionary[nodeId] = {\n        [children]: [],\n        ...node,\n        ...dictionary[nodeId],\n      };\n      dictionary[nodeParentId] = dictionary[nodeParentId] || { [children]: [] };\n      dictionary[nodeParentId][children].push(dictionary[nodeId]);\n    });\n    Object.values(dictionary).forEach((obj) => {\n      if (typeof obj[options.id] === \"undefined\") {\n        tree.push(...obj[children]);\n      }\n    });\n    return tree;\n  };\n  const hierarchy = jsonToTree(data);\n  const handleSelect = (event, nodeIds) => {\n    SetDocFolderId(nodeIds);\n    setAddVisible(false);\n    setLabel(\"\");\n    if (event.target.innerHTML.trim().startsWith(\"<path\")) {\n      setLabel(\"\");\n    } else {\n      setLabel(event.target.innerHTML);\n    }\n  };\n\n  function setFolderOrder(hierarchy, folderOrder) {\n    const filteredHierarchy = hierarchy.filter(\n      (item) => item.folder_name !== \"SOW\"\n    );\n\n    filteredHierarchy.sort((a, b) => {\n      const aIndex = folderOrder.indexOf(a.folder_name);\n      const bIndex = folderOrder.indexOf(b.folder_name);\n      if (aIndex !== -1 && bIndex !== -1) {\n        return aIndex - bIndex;\n      } else if (aIndex !== -1) {\n        return -1;\n      } else if (bIndex !== -1) {\n        return 1;\n      }\n      return a.folder_name.localeCompare(b.folder_name);\n    });\n\n    let filteredHierarch = filteredHierarchy.filter((item) =>\n      item.folder_name == projectId ? (item.folder_name = \"Expense\") : \"\"\n    );\n    return filteredHierarchy;\n  }\n\n  let filteredHierarchy = setFolderOrder(hierarchy, [\n    \"IA Support\",\n    \"PPM Development and Implementation\",\n    \"Expense\",\n    \"Expenses\",\n  ]);\n\n  return (\n    <>\n      <TreeView\n        aria-label=\"rich object\"\n        defaultExpanded={[defaultExpandedRows]}\n        defaultCollapseIcon={\n          <div className=\"iconContainer\">\n            <MinusSquare className=\"hierarchyIcons\" />\n            <FcOpenedFolder className=\"hierarchyIcons folder\" />\n          </div>\n        }\n        defaultExpandIcon={\n          <div className=\"iconContainer\">\n            <PlusSquare className=\"hierarchyIcons\" />\n            <FcOpenedFolder className=\"hierarchyIcons folder\" />\n          </div>\n        }\n        defaultEndIcon={<FcOpenedFolder className=\"hierarchyIcons folder\" />}\n        defaultParentIcon={<FcOpenedFolder className=\"hierarchyIcons folder\" />}\n        className=\"hierarchyTree\"\n        onNodeSelect={handleSelect}\n      >\n        {filteredHierarchy.map((item) => renderTree(item))}\n      </TreeView>\n    </>\n  );\n}\n","import {\n  CCollapse,\n  CModal,\n  CModalBody,\n  CModalHeader,\n  CModalTitle,\n} from \"@coreui/react\";\nimport React, { useState, useEffect } from \"react\";\nimport { MdPlaylistAdd } from \"react-icons/md\";\nimport { ImCopy, ImCross } from \"react-icons/im\";\nimport {\n  FaChevronCircleUp,\n  FaChevronCircleDown,\n  FaSearch,\n  FaPlus,\n} from \"react-icons/fa\";\nimport \"primeicons/primeicons.css\";\nimport \"primereact/resources/themes/lara-light-indigo/theme.css\";\nimport \"primereact/resources/primereact.css\";\nimport \"primeflex/primeflex.css\";\nimport DownloadForOfflineRoundedIcon from \"@mui/icons-material/DownloadForOfflineRounded\";\nimport axios from \"axios\";\nimport { BiCheck, BiSave } from \"react-icons/bi\";\nimport { VscNewFolder } from \"react-icons/vsc\";\nimport DocumentsPopUp from \"./DocumentsPopUp\";\nimport moment from \"moment\";\nimport { Column } from \"ag-grid-community\";\nimport { BsFileEarmarkPdf, BsFillFileEarmarkPptFill } from \"react-icons/bs\";\nimport {\n  AiFillDelete,\n  AiFillWarning,\n  AiOutlineFile,\n  AiOutlineFileExcel,\n} from \"react-icons/ai\";\nimport { IoDocumentOutline } from \"react-icons/io5\";\nimport { TbFileText } from \"react-icons/tb\";\nimport { Link } from \"react-router-dom\";\nimport { BsFileEarmarkZip } from \"react-icons/bs\";\nimport { environment } from \"../../environments/environment\";\nimport DocumentsTable from \"./DocumentsTable\";\nimport DocumentHierarchy from \"./DocumentHierarchy\";\nimport Loader from \"../Loader/Loader\";\nimport { useRef } from \"react\";\nimport ScreenBreadcrumbs from \"../Common/ScreenBreadcrumbs\";\n\nfunction Documents(props) {\n  const baseUrl = environment.baseUrl;\n\n  const [docId1, setDocId1] = useState([]);\n  const [svn, setSvn] = useState([]);\n  const [visible, setVisible] = useState(false);\n  const [addVisisble, setAddVisible] = useState(false);\n  const [cheveronIcon, setCheveronIcon] = useState(FaChevronCircleUp);\n  const [data, setData] = useState([]);\n  const [openPopup, setOpenPopup] = useState(false);\n  const [headerData, setHeaderData] = useState([]);\n  const [linkColumns, setLinkColumns] = useState(false);\n  const [linkColumnsRoutes, setLinkColumnsRoutes] = useState(false);\n  const [deletePopup, setDeletePopup] = useState(false);\n  const [versPopup, setVersPopup] = useState(false);\n  const [uid, setUid] = useState(\" \");\n  const [projectName, setProjectName] = useState([]);\n  const [inputValue, setInputValue] = useState(\"\");\n  const [folderName, setFolderName] = useState(\"\");\n  const [validationmessage, setValidationMessage] = useState(false);\n  const [validationmessage1, setValidationMessage1] = useState(false);\n  const [validationmessage2, setValidationMessage2] = useState(false);\n  const [moveCopyValidationMsg, setMoveCopyValidationMsg] = useState(false);\n  const [checkedData, setCheckedData] = useState([]);\n  const [hierarchydata, setHierarchyData] = useState([{}]);\n  const [upload, setUpload] = useState([]);\n  const [successfullymsg, setSuccessfullymsg] = useState(false);\n  const [copysuccessmsg, setCopySuccessmsg] = useState(false);\n  const [deleteMessage, setDeleteMessage] = useState(false);\n  const [movesuccessmsg, setMoveSuccessmsg] = useState(false);\n  const [successmsg, setSuccessmsg] = useState(false);\n  const [fileNamesArr, setFileNamesArr] = useState();\n  const [fileName, setFileName] = useState([]);\n  const [docId, setDocId] = useState([]);\n  const [docFolderId, SetDocFolderId] = useState(\"\");\n  const [label, setLabel] = useState(\"\");\n  const [selectedIds, setSelectedIds] = useState([]);\n  const [createFolder, setCrteateFolder] = useState(\"\");\n  const [loader, setLoader] = useState(false);\n  const [uniqueMessage, setUniqueMessage] = useState(false);\n  const [folder, setFolder] = useState([]);\n  const [checkboxSelect, setCheckboxSelect] = useState(false);\n\n  const abortController = useRef(null);\n\n  const [defaultExpandedRows, setDefaultExpandedRows] = useState(0);\n\n  const loggedUserId = localStorage.getItem(\"resId\");\n  const { projectId, grp1Items } = props;\n\n  const [routes, setRoutes] = useState([]);\n  let currentScreenName = [\"Projects\", \"Open\", \"Project\", \"Documents\"];\n  let textContent = \"Delivery\";\n\n  const getMenus = () => {\n    axios({\n      method: \"GET\",\n      url: baseUrl + `/CommonMS/master/getMenus?loggedUserId=${loggedUserId}`,\n    }).then((resp) => {\n      let data = resp.data;\n\n      data.forEach((item) => {\n        if (item.display_name === textContent) {\n          setRoutes([item]);\n        }\n      });\n    });\n  };\n\n  useEffect(() => {\n    getMenus();\n  }, []);\n\n  let rows = 25;\n\n  const projectName1 = label;\n  const staticText = \" Create Folder Under\";\n  const completeName = `${staticText}  ${projectName1}`;\n\n  const getapiData = () => {\n    axios\n      .get(\n        baseUrl +\n          `/VendorMS/vendor/getProjectDocuments?DocFolderId=${docFolderId}`\n      )\n      .then((res) => {\n        let dataa = res.data;\n\n        const GetData = dataa.map((item) => {\n          if (item.last_updated_by === \"\") {\n            return { ...item, last_updated_by: \"NA\" };\n          }\n          return item;\n        });\n\n        const Headerdata = [\n          {\n            file_name: \"File Name\",\n            file_size: \"File Size\",\n            app_revision: \"Version\",\n            file_type: \"File Type\",\n            date_created: \"Created On\",\n            created_by: \"Created By\",\n            last_updated: \"Updated On\",\n            last_updated_by: \"Updated By\",\n            Action: \"Action\",\n          },\n        ];\n\n        for (let i = 0; i < GetData.length; i++) {\n          GetData[i][\"file_name\"] =\n            GetData[i][\"file_name\"] == null\n              ? \"\"\n              : GetData[i][\"file_name\"].split(\".\")[0];\n          GetData[i][\"date_created\"] =\n            GetData[i][\"date_created\"] == null\n              ? \"\"\n              : moment\n                  .utc(GetData[i][\"date_created\"])\n                  .format(\"DD-MMM-yyyy hh:mm:ss A\");\n\n          GetData[i][\"last_updated\"] =\n            GetData[i][\"last_updated\"] == null\n              ? \"\"\n              : moment\n                  .utc(GetData[i][\"last_updated\"])\n                  .format(\"DD-MMM-yyyy hh:mm:ss A\");\n          GetData[i][\"app_revision\"] =\n            GetData[i][\"app_revision\"] == null\n              ? \"\"\n              : parseFloat(GetData[i][\"app_revision\"]).toFixed(1);\n        }\n        let data = [\"app_revision\"];\n        let linkRoutes = [\"\"];\n        setLinkColumns(data);\n        setLinkColumnsRoutes(linkRoutes);\n        setData(Headerdata.concat(GetData));\n\n        let a1 = [];\n        let b1 = [];\n        data?.forEach((e) => {\n          let dpObj = {\n            label: e.id,\n          };\n          a1.push(dpObj);\n          setDocId1(a1);\n        });\n\n        data?.forEach((e) => {\n          let dpObj = {\n            label: e.svn_revision,\n          };\n          b1.push(dpObj);\n          setSvn(b1);\n        });\n        setDocId(GetData);\n      });\n  };\n\n  useEffect(() => {\n    getapiData();\n  }, [docFolderId, inputValue]);\n\n  const validateInputValue = () => {\n    if (inputValue.trim() === \"\") {\n      setValidationMessage(true);\n      setTimeout(() => {\n        setValidationMessage(false);\n      }, 3000);\n      return false;\n    }\n    return true;\n  };\n\n  const getFilteredDocuments = () => {\n    if (!validateInputValue()) {\n      return;\n    }\n    validateInputValue() && setVisible(!visible);\n\n    axios\n      .get(\n        baseUrl +\n          `/VendorMS/vendor/getFilteredDocuments?ProjectId=${projectId}&SearchVal=${inputValue}`\n      )\n      .then((res) => {\n        let dataa = res.data;\n        const GetData = dataa.map((item) => {\n          if (item.last_updated_by === \"\") {\n            return { ...item, last_updated_by: \"NA\" };\n          }\n          return item;\n        });\n        const Headerdata = [\n          {\n            file_name: \"File Name\",\n            file_size: \"File Size\",\n            app_revision: \"Version\",\n            file_type: \"File Type\",\n            date_created: \"Created On\",\n            created_by: \"Created By\",\n            last_updated: \"Updated On\",\n            last_updated_by: \"Updated By\",\n            Action: \"Action\",\n          },\n        ];\n\n        for (let i = 0; i < GetData.length; i++) {\n          GetData[i][\"file_name\"] =\n            GetData[i][\"file_name\"] == null\n              ? \"\"\n              : GetData[i][\"file_name\"].split(\".\")[0];\n          GetData[i][\"date_created\"] =\n            GetData[i][\"date_created\"] == null\n              ? \"\"\n              : moment\n                  .utc(GetData[i][\"date_created\"])\n                  .format(\"DD-MMM-yyyy hh:mm:ss A\");\n          GetData[i][\"last_updated\"] =\n            GetData[i][\"last_updated\"] == null\n              ? \"\"\n              : moment\n                  .utc(GetData[i][\"last_updated\"])\n                  .format(\"DD-MMM-yyyy hh:mm:ss A\");\n          GetData[i][\"app_revision\"] =\n            GetData[i][\"app_revision\"] == null\n              ? \"\"\n              : parseFloat(GetData[i][\"app_revision\"]).toFixed(1);\n        }\n        let data = [\"app_revision\"];\n        let linkRoutes = [\"\"];\n        setLinkColumns(data);\n        setLinkColumnsRoutes(linkRoutes);\n        setData(Headerdata.concat(GetData));\n      });\n  };\n\n  const getProjectName = () => {\n    axios({\n      method: \"get\",\n      url: baseUrl + `/ProjectMS/Audit/getProjectName?projectId=${projectId}`,\n    }).then(function (response) {\n      let resp = response.data;\n      setProjectName(resp);\n    });\n  };\n\n  useEffect(() => {\n    getProjectName();\n    getUploadSuccessFileNames();\n    getProjectDocumentshierarchy();\n    getDocumentFileNames();\n  }, []);\n\n  const deleteDocument = () => {\n    setDeleteMessage(true);\n    axios({\n      method: \"delete\",\n      url: baseUrl + `/VendorMS/vendor/deleteDocumentById?id=${uid}`,\n    }).then((res) => {\n      getapiData();\n      setDeletePopup(false);\n      setTimeout(() => {\n        setDeleteMessage(false);\n      }, 1000);\n    });\n  };\n\n  const handleInputChange = (event) => {\n    setInputValue(event.target.value);\n  };\n\n  const handleCreateFolder = () => {\n    if (folderName.trim() === \"\") {\n      setValidationMessage1(true);\n      setSuccessmsg(false);\n      setTimeout(() => {\n        setValidationMessage1(false);\n      }, 3000);\n      return;\n    }\n  };\n\n  const downloadEmployeeData = (id, svn_revision) => {\n    const link = document.createElement(\"a\");\n    link.href =\n      baseUrl +\n      `/CommonMS/document/downloadFile?documentId=${id}&svnRevision=${svn_revision}`;\n    link.click();\n  };\n\n  const getProjectDocumentshierarchy = () => {\n    setLoader(false);\n    abortController.current = new AbortController();\n\n    axios({\n      method: \"get\",\n      url:\n        baseUrl +\n        `/customersms/Customers/getProjectDocumentshierarchy?objectId=${projectId}`,\n      signal: abortController.current.signal,\n    }).then(function (response) {\n      var resp = response.data;\n      setDefaultExpandedRows(resp[0].id);\n      setHierarchyData(resp);\n      setLoader(false);\n      setTimeout(() => {\n        setLoader(false);\n      }, 1000);\n    });\n  };\n\n  const handleAbort = () => {\n    abortController.current && abortController.current.abort();\n    setLoader(false);\n  };\n  const uploadFile = () => {\n    if (selectedFile.length == 0) {\n      setValidationMessage2(true);\n      setAddVisible(true);\n      setTimeout(() => {\n        setValidationMessage2(false);\n      }, 3000);\n      setSuccessfullymsg(false);\n    } else {\n      const formData = new FormData();\n      formData.append(\"file\", selectedFile);\n      axios({\n        method: \"post\",\n        url:\n          baseUrl +\n          `/ProjectMS/ContractDocuments/uploadFile?docFolderId=${docFolderId}&loggedUserId=${loggedUserId}&commitMessage=\"uploaded\"`,\n        data: formData,\n        headers: { \"Content-Type\": \"multipart/form-data\" },\n      }).then(function (response) {\n        var resp = response.data;\n        setUpload(resp);\n        getapiData();\n        setSuccessfullymsg(true);\n        setAddVisible(false);\n        setValidationMessage2(false);\n        setTimeout(() => {\n          setSuccessfullymsg(false);\n        }, 1000);\n      });\n    }\n  };\n\n  const getUploadSuccessFileNames = () => {\n    axios({\n      method: \"get\",\n      url:\n        baseUrl +\n        `/ProjectMS/ContractDocuments/getUploadSuccessFileNames?projectId=${projectId}`,\n    })\n      .then(function (response) {\n        let resp = response.data;\n        setFileNamesArr(resp);\n      })\n      .catch(function (error) {});\n  };\n\n  const getcreateFolder = () => {\n    if (folderName.length === 0) {\n      return;\n    }\n\n    if (folderName.length > 0) {\n      setValidationMessage1(false);\n      setSuccessmsg(true);\n    }\n\n    let customerNamesArr = folder.filter((d) => d !== null);\n    let someDataa = customerNamesArr.some((d) => d.folder_name == folderName);\n\n    if (someDataa) {\n      let ele = document.getElementsByClassName(\"unique\");\n      for (let index = 0; index < ele.length; index++) {\n        ele[index].classList.add(\"error-block\");\n      }\n      setUniqueMessage(true);\n      setSuccessmsg(false);\n      setTimeout(() => {\n        setUniqueMessage(false);\n      }, 3000);\n    } else {\n      let ele = document.getElementsByClassName(\"unique\");\n      for (let index = 0; index < ele.length; index++) {\n        ele[index].classList.remove(\"error-block\");\n      }\n      setUniqueMessage(false);\n      axios({\n        method: \"post\",\n        url:\n          baseUrl +\n          `/ProjectMS/ContractDocuments/createFolder?parentId=${docFolderId}&loggedUserId=${loggedUserId}&folderName=${folderName}`,\n      })\n        .then(function (response) {\n          let resp = response.data;\n          setCrteateFolder(resp);\n          getProjectDocumentshierarchy();\n          setSuccessmsg(true);\n          setTimeout(() => {\n            setSuccessmsg(false);\n          }, 1000);\n        })\n        .catch(function (error) {});\n    }\n  };\n\n  const getDocumentFileNames = () => {\n    axios({\n      method: \"get\",\n      url:\n        baseUrl +\n        `/ProjectMS/ContractDocuments/getDocumentFileNames?projectId=${projectId}`,\n    }).then(function (response) {\n      let resp = response.data;\n      setFolder(resp);\n    });\n  };\n\n  const [selectedFile, setSelectedFile] = useState([]);\n  const [formData, setFormData] = useState([]);\n\n  const onFileChangeHandler = (e) => {\n    setSelectedFile(e.target.files[0]);\n    setFileName(e.target.files[0]?.name);\n    setFormData((prev) => ({\n      ...prev,\n      [e.target.id]: e.target.files[0]?.name,\n    }));\n  };\n\n  const handleCancel = (e) => {\n    let ele = document.getElementsByClassName(\"cancel\");\n    for (let index = 0; index < ele.length; index++) {\n      ele[index].value = \"\";\n    }\n  };\n\n  useEffect(() => {\n    if (docId) {\n    }\n  }, []);\n\n  useEffect(() => {\n    setDocId1(data.id);\n    setSvn(data.svn_revision);\n    setFileName(data.file_name);\n  }, [data]);\n\n  useEffect(() => {}, [selectedIds]);\n\n  const LinkTemplate = (data) => {\n    setDocId1(data.id);\n    setSvn(data.svn_revision);\n    setFileName(data.file_name);\n\n    let rou = linkColumnsRoutes[0]?.split(\":\");\n    return (\n      <>\n        <Link\n          data-toggle=\"tooltip\"\n          title={data.app_revision}\n          style={{\n            float: \"right\",\n            color: \"#428bca\",\n            textDecorationLine: \"underline\",\n          }}\n          onClick={() => {\n            setVersPopup(true);\n          }}\n        >\n          {data[linkColumns[0]]}\n        </Link>\n      </>\n    );\n  };\n\n  const Template = (data) => {\n    return (\n      <>\n        <div align=\"center\" data-toggle=\"tooltip\" title={data.file_type}>\n          {data.file_type == \".pdf\" ? (\n            <BsFileEarmarkPdf size={\"1.5em\"} style={{ color: \"#428bca\" }} />\n          ) : data.file_type == \".xlsx\" ? (\n            <AiOutlineFileExcel size={\"1.8em\"} style={{ color: \"#428bca\" }} />\n          ) : data.file_type == \".html\" ? (\n            <IoDocumentOutline size={\"2.0em\"} style={{ color: \"#428bca\" }} />\n          ) : data.file_type == \".pptx\" ? (\n            <BsFillFileEarmarkPptFill\n              size={\"1.5em\"}\n              style={{ color: \"#428bca\" }}\n            />\n          ) : data.file_type == \".txt\" ? (\n            <TbFileText size={\"2.0em\"} style={{ color: \"#428bca\" }} />\n          ) : data.file_type == \".zip\" ? (\n            <BsFileEarmarkZip size={\"1.8em\"} style={{ color: \"#428bca\" }} />\n          ) : data.file_type == \".xml\" ? (\n            <TbFileText size={\"1.8em\"} style={{ color: \"#428bca\" }} />\n          ) : data.file_type == \".jpeg\" ? (\n            <AiOutlineFile size={\"2.0em\"} style={{ color: \"#428bca\" }} />\n          ) : data.file_type == \".PNG\" ? (\n            <AiOutlineFile size={\"2.0em\"} style={{ color: \"#428bca\" }} />\n          ) : data.file_type == \".jpg\" ? (\n            <AiOutlineFile size={\"2.0em\"} style={{ color: \"#428bca\" }} />\n          ) : data.file_type == \".png\" ? (\n            <AiOutlineFile size={\"2.0em\"} style={{ color: \"#428bca\" }} />\n          ) : data.file_type == \".4\" ? (\n            <AiOutlineFile size={\"2.0em\"} style={{ color: \"#428bca\" }} />\n          ) : data.file_type == \".xls\" ? (\n            <AiOutlineFileExcel size={\"1.8em\"} style={{ color: \"#428bca\" }} />\n          ) : data.file_type == \".md\" ? (\n            <TbFileText size={\"2.0em\"} style={{ color: \"#428bca\" }} />\n          ) : data.file_type == \".csv\" ? (\n            <TbFileText size={\"2.0em\"} style={{ color: \"#428bca\" }} />\n          ) : data.file_type == \".docx\" ? (\n            <TbFileText size={\"2.0em\"} style={{ color: \"#428bca\" }} />\n          ) : (\n            \"\"\n          )}\n        </div>\n      </>\n    );\n  };\n\n  const Action = (data) => {\n    return (\n      <div align=\"center \" data-toggle=\"tooltip\" title=\"Download Document\">\n        <DownloadForOfflineRoundedIcon\n          className=\"linkSty\"\n          style={{ cursor: \"pointer\", color: \"#86b558\" }}\n          onClick={() =>\n            downloadEmployeeData(data.id, data.svn_revision, data.file_name)\n          }\n        />\n        {grp1Items[4].is_write === true ? (\n          <AiFillDelete\n            data-toggle=\"tooltip\"\n            title=\"Delete\"\n            size={\"1.3em\"}\n            style={{ cursor: \"pointer\", color: \"orange\" }}\n            onClick={() => {\n              setDeletePopup(true);\n              setUid(data.id);\n            }}\n          />\n        ) : null}\n      </div>\n    );\n  };\n\n  const fName = (data) => {\n    return (\n      <div className=\"ellipsis\" data-toggle=\"tooltip\" title={data.file_name}>\n        {data.file_name}\n      </div>\n    );\n  };\n  const fSize = (data) => {\n    return (\n      <div\n        className=\"ellipsis\"\n        data-toggle=\"tooltip\"\n        title={data.file_size}\n        style={{ fontStyle: \"italic\" }}\n      >\n        {data.file_size}\n      </div>\n    );\n  };\n  const fCreatedBy = (data) => {\n    return (\n      <div className=\"ellipsis\" data-toggle=\"tooltip\" title={data.created_by}>\n        {data.created_by}\n      </div>\n    );\n  };\n  const fCreatedOn = (data) => {\n    return (\n      <div className=\"ellipsis\" data-toggle=\"tooltip\" title={data.date_created}>\n        {data.date_created}\n      </div>\n    );\n  };\n  const fUpdatedOn = (data) => {\n    return (\n      <div className=\"ellipsis\" data-toggle=\"tooltip\" title={data.last_updated}>\n        {data.last_updated}\n      </div>\n    );\n  };\n  const fUpdatedBy = (data) => {\n    return (\n      <div\n        className=\"ellipsis\"\n        data-toggle=\"tooltip\"\n        title={data.last_updated_by}\n      >\n        {data.last_updated_by}\n      </div>\n    );\n  };\n\n  const dynamicColumns = Object.keys(headerData)?.map((col, i) => {\n    return (\n      <Column\n        sortable\n        key={col}\n        body={\n          col == \"file_name\"\n            ? fName\n            : col == \"file_type\"\n            ? Template\n            : col == \"app_revision\"\n            ? LinkTemplate\n            : (col == \"Action\" && Action) ||\n              (col == \"file_size\" && fSize) ||\n              (col == \"created_by\" && fCreatedBy) ||\n              (col == \"date_created\" && fCreatedOn) ||\n              (col == \"last_updated\" && fUpdatedOn) ||\n              (col == \"last_updated_by\" && fUpdatedBy)\n        }\n        field={col}\n        header={headerData[col]}\n      />\n    );\n  });\n\n  useEffect(() => {\n    data[0] && setHeaderData(JSON.parse(JSON.stringify(data[0])));\n  }, [data]);\n\n  function DocumentDeletePopUP(props) {\n    const { deletePopup, setDeletePopup } = props;\n\n    return (\n      <div>\n        <CModal\n          visible={deletePopup}\n          backdrop=\"static\"\n          size=\"xs\"\n          className=\"ui-dialog\"\n          onClose={() => setDeletePopup(false)}\n        >\n          <CModalHeader className=\"\">\n            <CModalTitle>\n              <span className=\"\">Delete</span>\n            </CModalTitle>\n          </CModalHeader>\n          <CModalBody>\n            <h6>Are you sure you want to permanently remove this item ?</h6>\n            <div className=\"btn-container center my-2\">\n              <button\n                className=\"btn btn-primary\"\n                onClick={() => {\n                  deleteDocument();\n                }}\n              >\n                Ok{\" \"}\n              </button>\n              <button\n                className=\"btn btn-secondary\"\n                onClick={() => {\n                  setDeletePopup(false);\n                }}\n              >\n                Cancel{\" \"}\n              </button>\n            </div>\n          </CModalBody>\n        </CModal>\n      </div>\n    );\n  }\n\n  function VersionPopUP(props) {\n    const { versPopup, setVersPopup } = props;\n\n    return (\n      <div>\n        <CModal\n          visible={versPopup}\n          size=\"xs\"\n          backdrop=\"static\"\n          className=\"ui-dialog\"\n          onClose={() => setVersPopup(false)}\n        >\n          <CModalHeader className=\"\">\n            <CModalTitle>\n              <span className=\"\">Version History</span>\n            </CModalTitle>\n          </CModalHeader>\n          <CModalBody>\n            <div className=\"col-12 p-0\">\n              <table className=\"table table-bordered table-striped\" role=\"grid\">\n                <tbody>\n                  <tr>\n                    <th>Older Versions</th>\n                    <th>Updated By</th>\n                  </tr>\n                  <tr>\n                    <td colSpan=\"2\">\n                      <center>No Older Versions</center>\n                    </td>\n                  </tr>\n                </tbody>\n              </table>\n            </div>\n          </CModalBody>\n        </CModal>\n      </div>\n    );\n  }\n  return (\n    <div>\n      {loader ? <Loader handleAbort={handleAbort} /> : \"\"}\n      {validationmessage ? (\n        <div className=\"statusMsg error\">\n          <AiFillWarning />\n          Please enter document name to search\n        </div>\n      ) : (\n        \"\"\n      )}\n      {validationmessage2 ? (\n        <div className=\"statusMsg error\">\n          <AiFillWarning />\n          Please select a file\n        </div>\n      ) : (\n        \"\"\n      )}\n      {successfullymsg ? (\n        <div className=\"statusMsg success\">\n          <BiCheck />\n          &nbsp; Project {fileName} uploaded Successfully\n        </div>\n      ) : (\n        \"\"\n      )}\n      {moveCopyValidationMsg ? (\n        <div className=\"statusMsg error\">\n          <AiFillWarning />\n          Please Select Documents\n        </div>\n      ) : (\n        \"\"\n      )}\n      {deleteMessage ? (\n        <div className=\"statusMsg success\">\n          <BiCheck />\n          &nbsp; document deleted Successfully\n        </div>\n      ) : (\n        \"\"\n      )}\n      <div className=\"col-md-12\">\n        <div className=\"pageTitle\">\n          <div className=\"childOne\">\n            <h2>{projectName} </h2>\n          </div>\n          <div className=\"childTwo\">\n            <h2>Documents</h2>\n          </div>\n          <div className=\"childThree\"></div>\n        </div>\n      </div>\n      <ScreenBreadcrumbs\n        routes={routes}\n        currentScreenName={currentScreenName}\n      />\n\n      <div className=\"row\">\n        <div className=\"col-md-3 customCard \">\n          <div className=\"col-md-12\">\n            <h2>Document Folders</h2>\n          </div>\n          {validationmessage1 ? (\n            <div className=\"statusMsg error\">\n              <AiFillWarning />\n              Please enter the folder name to be created\n            </div>\n          ) : (\n            \"\"\n          )}\n          {copysuccessmsg ? (\n            <div className=\"statusMsg success\">\n              <BiCheck />\n              Document Copied Successfully\n            </div>\n          ) : (\n            \"\"\n          )}\n          {movesuccessmsg ? (\n            <div className=\"statusMsg success\">\n              <BiCheck />\n              Document Moved Successfully\n            </div>\n          ) : (\n            \"\"\n          )}\n          {successmsg ? (\n            <div className=\"statusMsg success\">\n              <BiCheck />\n              &nbsp;Folder {\"::\" + folderName} Successfully Created\n            </div>\n          ) : (\n            \"\"\n          )}\n          {uniqueMessage ? (\n            <div className=\"statusMsg error\">\n              {\" \"}\n              <AiFillWarning /> Folder is already exist with this name\n            </div>\n          ) : (\n            \"\"\n          )}\n          {grp1Items[4]?.is_write === true ? (\n            <div className=\"inline-form singleFeild left\">\n              <input\n                type=\"text\"\n                id=\"Document\"\n                placeholder={\"\" + completeName}\n                className=\"unique\"\n                value={folderName}\n                onChange={(e) => setFolderName(e.target.value)}\n              />\n              <button\n                type=\"button\"\n                title=\"Create Folder\"\n                className=\"btn btn-primary\"\n                onClick={() => {\n                  handleCreateFolder();\n                  setFolderName(\"\");\n                  getcreateFolder();\n                }}\n              >\n                <VscNewFolder />\n                New\n              </button>\n            </div>\n          ) : null}\n\n          {\n            <DocumentHierarchy\n              defaultExpandedRows={String(defaultExpandedRows)}\n              data={hierarchydata}\n              SetDocFolderId={SetDocFolderId}\n              setLabel={setLabel}\n              projectId={projectId}\n              setAddVisible={setAddVisible}\n            />\n          }\n        </div>\n        <div className=\"col-md-9 customCard\">\n          <div className=\"collapseHeader\">\n            <h2>Search Filters</h2>\n\n            <div\n              onClick={() => {\n                setVisible(!visible);\n                visible\n                  ? setCheveronIcon(FaChevronCircleUp)\n                  : setCheveronIcon(FaChevronCircleDown);\n              }}\n            >\n              <span>{cheveronIcon}</span>\n            </div>\n          </div>\n          <CCollapse visible={!visible}>\n            <div className=\"col-md-12 my-1\">\n              <div\n                className=\"statusMsg warning\"\n                style={{\n                  fontStyle: \"italic\",\n                  color: \"#746d26\",\n                  fontSize: \"12px\",\n                }}\n              >\n                <b>Note :</b> Search will be applied for complete project\n                documents...\n              </div>\n            </div>\n\n            <div className=\"inline-form singleFeild\">\n              <label htmlFor=\"Document\">Document Name:</label>\n              <input\n                type=\"text\"\n                value={inputValue}\n                onChange={handleInputChange}\n                id=\"Document\"\n                placeholder={\"\"}\n                className=\"textfield\"\n              />\n              <button\n                type=\"button\"\n                className=\"btn btn-primary\"\n                onClick={() => {\n                  getFilteredDocuments();\n                }}\n              >\n                <FaSearch /> Search\n              </button>\n            </div>\n          </CCollapse>\n\n          <h2 className=\"mt-2\">Document Repository</h2>\n\n          <DocumentsTable\n            data={data}\n            rows={rows}\n            linkColumns={linkColumns}\n            linkColumnsRoutes={linkColumnsRoutes}\n            dynamicColumns={dynamicColumns}\n            headerData={headerData}\n            setHeaderData={setHeaderData}\n            setCheckedData={setCheckedData}\n            selectedIds={selectedIds}\n            setSelectedIds={setSelectedIds}\n            checkboxSelect={checkboxSelect}\n            setCheckboxSelect={setCheckboxSelect}\n            grp1Items={grp1Items}\n          />\n          <div className=\" form-group col-12 btn-container center my-3\">\n            {grp1Items[4]?.is_write === true ? (\n              <button\n                className=\"btn btn-primary\"\n                type=\"Add\"\n                onClick={() => setAddVisible(true)}\n                disabled={addVisisble}\n              >\n                <FaPlus /> Add\n              </button>\n            ) : null}\n\n            <button\n              className=\"btn btn-primary\"\n              type=\"Move/Copy Files\"\n              onClick={() => {\n                if (selectedIds.length === 0) {\n                  setMoveCopyValidationMsg(true);\n                  setTimeout(() => {\n                    setMoveCopyValidationMsg(false);\n                  }, 1000);\n                } else {\n                  setOpenPopup(true);\n                  setTimeout(() => {\n                    setMoveCopyValidationMsg(false);\n                  }, 1000);\n                }\n              }}\n            >\n              <ImCopy /> Move/Copy Files\n            </button>\n          </div>\n\n          {openPopup ? (\n            <DocumentsPopUp\n              openPopup={openPopup}\n              setOpenPopup={setOpenPopup}\n              projectId={projectId}\n              hierarchydata={hierarchydata}\n              docFolderId={docFolderId}\n              selectedIds={selectedIds}\n              setSelectedIds={setSelectedIds}\n              SetDocFolderId={SetDocFolderId}\n              setCopySuccessmsg={setCopySuccessmsg}\n              setMoveSuccessmsg={setMoveSuccessmsg}\n              getapiData={getapiData}\n              setCheckboxSelect={setCheckboxSelect}\n            />\n          ) : (\n            \"\"\n          )}\n\n          {deletePopup ? (\n            <DocumentDeletePopUP\n              deletePopup={deletePopup}\n              setDeletePopup={setDeletePopup}\n            />\n          ) : (\n            \"\"\n          )}\n\n          {versPopup ? (\n            <VersionPopUP versPopup={versPopup} setVersPopup={setVersPopup} />\n          ) : (\n            \"\"\n          )}\n\n          {addVisisble && (\n            <div>\n              <div>\n                <div className=\"col-md-12 my-1\">\n                  <div\n                    className=\"statusMsg warning\"\n                    style={{\n                      fontStyle: \"italic\",\n                      color: \"#746d26\",\n                      fontSize: \"12px\",\n                    }}\n                  >\n                    <b>Note :</b> You can select 10 files at max.\n                  </div>\n                </div>\n                <div className=\"col-12 p-0\">\n                  <table\n                    className=\"table table-bordered table-striped\"\n                    role=\"grid\"\n                  >\n                    <tbody>\n                      <tr>\n                        <th style={{ color: \"#297AB0\" }}>Browse Document</th>\n                      </tr>\n                      <tr>\n                        <td>\n                          <input\n                            type=\"file\"\n                            name=\"file\"\n                            id=\"file\"\n                            onChange={onFileChangeHandler}\n                            accept=\".jpg,.jpeg,.xlsx,.pdf,.docx,.txt,.png,.html\"\n                          />\n                          <label className=\"documenttypes col-md-12\">\n                            <p className=\"error-text\">\n                              Supported file types\n                              .pdf,.doc,.csv,.txt,.xlsx,.html,.png{\" \"}\n                            </p>\n                          </label>\n                        </td>\n                      </tr>\n                    </tbody>\n                  </table>\n                </div>\n              </div>\n            </div>\n          )}\n          {addVisisble && (\n            <div className=\" form-group col-md-12 col-sm-12 col-xs-12 btn-container center my-2\">\n              <button\n                className=\"btn btn-primary\"\n                type=\"submit\"\n                onClick={() => {\n                  // setAddVisible(!addVisisble);\n                  uploadFile();\n                }}\n              >\n                <BiSave /> Save\n              </button>\n              <button\n                className=\"btn btn-secondary\"\n                type=\"cancel\"\n                onClick={() => {\n                  setAddVisible(!addVisisble);\n                  handleCancel();\n                }}\n              >\n                <ImCross /> Cancel\n              </button>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Documents;\n","import React from \"react\";\nimport axios from \"axios\";\nimport { useState, useEffect } from \"react\";\nimport { DataTable } from \"primereact/datatable\";\nimport { Column } from \"primereact/column\";\nimport moment from \"moment\";\nimport { environment } from \"../../environments/environment\";\nimport { BsFillCircleFill } from \"react-icons/bs\";\nimport Loader from \"../Loader/Loader\";\nimport { CModal } from \"@coreui/react\";\nimport { CModalBody } from \"@coreui/react\";\nimport { CModalHeader } from \"@coreui/react\";\nimport { CModalTitle } from \"@coreui/react\";\nimport { CModalFooter } from \"@coreui/react\";\nimport { SlExclamation } from \"react-icons/sl\";\nimport Draggable from \"react-draggable\";\nimport ProjectExpensePopOver from \"./ProjectExpensePopOver\";\n\nfunction ExpensesMyRequest(props) {\n  const [data, setData] = useState([]);\n  const [expandedRows, setExpandedRows] = useState(null);\n  const [projectData, setProjectData] = useState([]);\n  const [popUp, setPopUp] = useState(false);\n  const [popUpData, setPopUpData] = useState({});\n  const [expenseHistory, setExpenseHistory] = useState([]);\n  const [popUpLoader, setPopUpLoader] = useState(false);\n  const [loader, setLoader] = useState(false);\n  const [loaderOne, setLoaderOne] = useState(false);\n\n  const baseUrl = environment.baseUrl;\n  const projectId = props.projectId;\n  const handleAbort = props.handleAbort;\n  const loggedUserId = localStorage.getItem(\"resId\");\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [table, setTable] = useState(false);\n  const handleClose = () => {\n    setAnchorEl(false);\n  };\n\n  const getResourceid = () => {\n    axios({\n      method: \"get\",\n      url: baseUrl + `/ProjectMS/defectphases/getresourceid?id=${loggedUserId}`,\n    })\n      .then(function (response) {\n        var res = response.data;\n        axios\n          .get(\n            baseUrl +\n              `/ProjectMS/projectExpenses/resourceExpenses?resourceid=${res}&projectid=${projectId}`\n          )\n          .then((res) => {\n            setData(res.data);\n            setLoader(false);\n            setTable(true);\n          })\n          .catch((e) => console.log(e));\n      })\n      .catch((e) => console.log(e));\n  };\n\n  const getProjectOverviewData = () => {\n    axios({\n      method: \"get\",\n      url:\n        baseUrl +\n        `/ProjectMS/Audit/projectOverviewDetails?projectId=${projectId}`,\n    })\n      .then(function (response) {\n        let resp = response.data;\n        setProjectData(resp);\n      })\n      .catch((e) => console.log(e));\n  };\n\n  useEffect(() => {\n    getResourceid();\n  }, []);\n\n  const numberWithCommas = (x) => {\n    var number = String(x);\n\n    if (number.includes(\".\")) {\n      var parts = number.split(\".\");\n      var integerPart = parts[0].replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, \"$1,\");\n      var decimalPart = parts[1].padEnd(2, \"0\");\n      return integerPart + \".\" + decimalPart;\n    } else {\n      return number.replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, \"$1,\") + \".00\";\n    }\n  };\n\n  const amountFormat = (rowData) => {\n    let container = document.createElement(\"div\");\n    container.innerHTML = rowData.clientCurrencyCode;\n    return container.innerHTML;\n  };\n\n  useEffect(() => {\n    getProjectOverviewData();\n  }, []);\n\n  const approvalIcon = (rowData) => {\n    if (rowData.includes(\"Submitted\")) {\n      return (\n        <span>\n          <BsFillCircleFill style={{ color: \"#ccc\" }} />\n        </span>\n      );\n    } else if (\n      rowData.includes(\"PM Approved\") ||\n      rowData.includes(\"Pending\") ||\n      rowData.includes(\"IT Approved\") ||\n      rowData.includes(\"HR Approved\")\n    ) {\n      return (\n        <span>\n          <BsFillCircleFill style={{ color: \"#CDE6FE\" }} />\n        </span>\n      );\n    } else if (rowData.includes(\"PM Rejected\")) {\n      return (\n        <span>\n          <BsFillCircleFill style={{ color: \"#e54c53\" }} />\n        </span>\n      );\n    } else if (rowData.includes(\"Drafted\")) {\n      return (\n        <span>\n          <BsFillCircleFill style={{ color: \"#EDD4A2\" }} />\n        </span>\n      );\n    } else if (rowData.includes(\"Paid\")) {\n      return (\n        <span>\n          <BsFillCircleFill style={{ color: \"#D9FBB3\" }} />\n        </span>\n      );\n    } else if (rowData.includes(\"Approved To Pay\")) {\n      return (\n        <span>\n          <BsFillCircleFill style={{ color: \"#0080ff\" }} />\n        </span>\n      );\n    } else if (\n      rowData.includes(\"FM Rejected\") ||\n      rowData.includes(\"IT Rejected\") ||\n      rowData.includes(\"HR Rejected\")\n    ) {\n      return (\n        <span>\n          <BsFillCircleFill style={{ color: \"#e54c53\" }} />\n        </span>\n      );\n    } else {\n      return <span></span>;\n    }\n  };\n  const [popoverdata, setPopoverData] = useState(\"\");\n  const approvalField = (rowData) => {\n    return (\n      <>\n        <div\n          onMouseOver={(e) => {\n            setAnchorEl(e?.currentTarget);\n            setPopoverData(\n              rowData.approvalFlow.split(\",\").join(\" >> \").slice(0, -4)\n            );\n          }}\n          onMouseLeave={handleClose}\n          className=\"ellipsis\"\n        >\n          {approvalIcon(rowData.Approval)} {rowData.Approval}\n        </div>\n      </>\n    );\n  };\n\n  const viewDetails = (rowData) => {\n    return (\n      <a\n        className=\"linkSty\"\n        onClick={() => {\n          setPopUpLoader(true);\n          expenseDetails(rowData.expense_id);\n          setPopUp(true);\n          setPopUpData(rowData);\n        }}\n      >\n        View\n      </a>\n    );\n  };\n\n  const expenseDetails = (expenseId) => {\n    axios\n      .get(\n        baseUrl +\n          `/ProjectMS/projectExpenses/expenseHistory?expenseId=${expenseId}`\n      )\n      .then((res) => {\n        setExpenseHistory(res.data);\n        setPopUpLoader(false);\n      })\n      .catch((error) => console.log(error));\n  };\n\n  function ExpensePopup(props) {\n    const { popUp, setPopUp, data, totalData } = props;\n\n    const downloadFile = async (document_id, svn_revision, file_name) => {\n      const link = document.createElement(\"a\");\n      link.href =\n        baseUrl +\n        `/CommonMS/document/downloadFile?documentId=${document_id}&svnRevision=${svn_revision}`;\n      link.click();\n    };\n\n    return (\n      <div>\n        {popUpLoader ? (\n          <Loader\n            handleAbort={() => {\n              handleAbort;\n              setPopUpLoader(false);\n            }}\n          />\n        ) : (\n          \"\"\n        )}\n        <CModal\n          visible={popUp}\n          backdrop=\"static\"\n          size=\"lg\"\n          onClose={() => setPopUp(!popUp)}\n        >\n          <CModalHeader style={{ cursor: \"all-scroll\" }}>\n            <CModalTitle>\n              <span className=\"ft16\">Expense Details</span>\n            </CModalTitle>\n          </CModalHeader>\n          <CModalBody>\n            <div className=\"container\">\n              <div className=\"form-group content\">\n                <div className=\"col-12 row\">\n                  <div className=\"col-6 row\">\n                    <div className=\"col-6\">\n                      <strong>Project</strong>\n                    </div>\n                    <div className=\"col-1\">:</div>\n                    <div className=\"col-5\">{totalData[0].projectName}</div>\n                  </div>\n                  <div className=\"col-6 row\">\n                    <div className=\"col-6\">\n                      <strong>Resource</strong>\n                    </div>\n                    <div className=\"col-1\">:</div>\n                    <div className=\"col-5\">{data.fullName}</div>\n                  </div>\n                  <div className=\"col-6 row\">\n                    <div className=\"col-6\">\n                      <strong>Expense Category</strong>\n                    </div>\n                    <div className=\"col-1\">:</div>\n                    <div className=\"col-5\">{data.Expense_Type}</div>\n                  </div>\n                  <div className=\"col-6 row\">\n                    <div className=\"col-6\">\n                      <strong>Description</strong>\n                    </div>\n                    <div className=\"col-1\">:</div>\n                    <div className=\"col-5\">{data.description}</div>\n                  </div>\n                  <div className=\"col-6 row\">\n                    <div className=\"col-6\">\n                      <strong>Incurred Amount</strong>\n                    </div>\n                    <div className=\"col-1\">:</div>\n                    <div className=\"col-5\">\n                      {amountFormat(data) +\n                        \" \" +\n                        numberWithCommas(data.Incurred)}\n                    </div>\n                  </div>\n                  <div className=\"col-6 row\">\n                    <div className=\"col-6\">\n                      <strong>Disbursed Amount</strong>\n                    </div>\n                    <div className=\"col-1\">:</div>\n                    <div className=\"col-5\">\n                      {amountFormat(data) +\n                        \" \" +\n                        numberWithCommas(data.disbursed_amount)}\n                    </div>\n                  </div>\n                  <div className=\"col-6 row\">\n                    <div className=\"col-6\">\n                      <strong>Paid By</strong>\n                    </div>\n                    <div className=\"col-1\">:</div>\n                    <div className=\"col-5\">{data.Payee}</div>\n                  </div>\n                  <div className=\"col-6 row\">\n                    <div className=\"col-6\">\n                      <strong>Status</strong>\n                    </div>\n                    <div className=\"col-1\">:</div>\n                    <div className=\"col-5\">\n                      {data.Payment == null || data.Payment == \"\"\n                        ? data.Approval\n                        : data.Payment}\n                    </div>\n                  </div>\n                  <div className=\"col-6 row\">\n                    <div className=\"col-6\">\n                      <strong>Receipt(s)</strong>\n                    </div>\n                    <div className=\"col-1\">:</div>\n                    <div className=\"col-5 ellipsis\">\n                      <a\n                        className=\"linkSty\"\n                        onClick={(e) =>\n                          downloadFile(\n                            data.document_id,\n                            data.svn_revision,\n                            data.file_name\n                          )\n                        }\n                        title={data.file_name}\n                      >\n                        {data.file_name}\n                      </a>\n                    </div>\n                  </div>\n                  <div className=\"col-6 row\">\n                    <div className=\"col-6\">\n                      <strong>Approval Workflow</strong>\n                    </div>\n                    <div className=\"col-1\">:</div>\n                    <div className=\"col-5\">\n                      {data.approvalFlow.split(\",\").join(\" >> \").slice(0, -4)}\n                    </div>\n                  </div>\n                  <div className=\"col-6 row\">\n                    <div className=\"col-6\">\n                      <strong>Expense History</strong>\n                    </div>\n                    <div className=\"col-1\">:</div>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div\n              style={{\n                backgroundColor: \"#eee\",\n                border: \"1px solid #ddd\",\n                minHeight: \"40px\",\n                maxHeight: \"100px\",\n                padding: \"5px 7px\",\n                overflowY: \"auto\",\n              }}\n              className=\"row h-50\"\n            >\n              {expenseHistory\n                .filter((d) => d.state != \"Drafted\")\n                .map((dat) => (\n                  <div>\n                    <strong>\n                      {dat.state} by {dat.firstName} {dat.lastName} on{\" \"}\n                      {moment(dat.dateCreated).format(\"DD-MMM-YYYY\")}\n                    </strong>\n                    <br />\n                    <div className=\"col-12 row\">\n                      <div className=\"col-6 row\">\n                        <div className=\"col-6\">\n                          <span>Disbursed Amount</span>\n                        </div>\n                        <div className=\"col-1\">:</div>\n                        <div className=\"col-5\">\n                          {amountFormat(data) +\n                            \" \" +\n                            numberWithCommas(dat.disbursedAmount)}\n                        </div>\n                      </div>\n                      <div className=\"col-6 row\">\n                        <div className=\"col-6\">\n                          <span>Comment</span>\n                        </div>\n                        <div className=\"col-1\">:</div>\n                        <div className=\"col-5\">\n                          {dat.comments == \"\" || dat.comments == null\n                            ? \"NA\"\n                            : dat.comments}\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                ))}\n            </div>\n          </CModalBody>\n          <CModalFooter>\n            <button\n              className=\"btn btn-outline-secondary mx-auto\"\n              onClick={() => setPopUp(false)}\n            >\n              Close\n            </button>\n          </CModalFooter>\n        </CModal>\n      </div>\n    );\n  }\n\n  const allowExpansion = (rowData) => {\n    return rowData.subrows.length >= 0;\n  };\n\n  const onRowExpand = (e) => {\n    const loaderTime = setTimeout(() => {\n      setLoaderOne(true);\n    }, 100);\n    axios\n      .get(\n        baseUrl +\n          `/ProjectMS/projectExpenses/stackExpenses?stackId=${\n            e.data.stackId\n          }&userId=${loggedUserId}&raisedBy=${-1}&projectId=${projectId}&statusId=${\n            e.data.stackStatusId\n          }`\n      )\n      .then((res) => {\n        data.find((u) => u.stackId === e.data.stackId).subrows = res.data;\n        setLoaderOne(false);\n        clearTimeout(loaderTime);\n      })\n      .catch((error) => console.log(error));\n  };\n\n  const rowExpansionTemplate = (data) => {\n    return (\n      <div className=\"darkHeader\">\n        {loaderOne ? \"\" : \"\"}\n\n        <DataTable\n          value={data.subrows}\n          className=\"primeReactDataTable\"\n          stripedRows\n          sortOrder={1}\n        >\n          <Column\n            sortable\n            field=\"Expense_Type\"\n            header=\"Expense Type\"\n            body={(rowData) => (\n              <div title={rowData.Expense_Type}>{rowData.Expense_Type}</div>\n            )}\n          />\n          <Column\n            sortable\n            field=\"expense_date\"\n            header=\"Date\"\n            body={(rowData) => (\n              <div title={moment(rowData.expense_date).format(\"DD-MMM-YYYY\")}>\n                {moment(rowData.expense_date).format(\"DD-MMM-YYYY\")}\n              </div>\n            )}\n          />\n          <Column\n            sortable\n            field=\"Payee\"\n            header=\"Payee\"\n            body={(rowData) => <div title={rowData.Payee}>{rowData.Payee}</div>}\n          />\n          <Column\n            sortable\n            field=\"is_billable\"\n            header=\"Billable\"\n            body={(rowData) => (rowData.is_billable ? \"Yes\" : \"No\")}\n          />\n          <Column\n            sortable\n            field=\"Incurred\"\n            header=\"Incurred\"\n            style={{ textAlign: \"right\" }}\n            body={(rowData) => (\n              <div\n                title={\n                  amountFormat(rowData) +\n                  \" \" +\n                  numberWithCommas(rowData.Incurred)\n                }\n              >\n                {amountFormat(rowData) +\n                  \" \" +\n                  numberWithCommas(rowData.Incurred)}\n              </div>\n            )}\n          />\n          <Column\n            sortable\n            field=\"disbursed_amount\"\n            header=\"Disbursed\"\n            style={{ textAlign: \"right\" }}\n            body={(rowData) => (\n              <div\n                title={\n                  amountFormat(rowData) +\n                  \" \" +\n                  numberWithCommas(rowData.disbursed_amount)\n                }\n              >\n                {amountFormat(rowData) +\n                  \" \" +\n                  numberWithCommas(rowData.disbursed_amount)}\n              </div>\n            )}\n          />\n          <Column\n            sortable\n            field=\"client_amount\"\n            header=\"Client\"\n            style={{ textAlign: \"right\" }}\n            body={(rowData) => (\n              <div\n                title={\n                  amountFormat(rowData) +\n                  \" \" +\n                  numberWithCommas(rowData.client_amount)\n                }\n              >\n                {amountFormat(rowData) +\n                  \" \" +\n                  numberWithCommas(rowData.client_amount)}\n              </div>\n            )}\n          />\n          <Column\n            sortable\n            field=\"Approval\"\n            header=\"Approval\"\n            body={approvalField}\n          />\n          <Column\n            sortable\n            field=\"Payment\"\n            header=\"Payment\"\n            body={(rowData) => (\n              <div title={rowData.Payment}>\n                {approvalIcon(rowData.Payment)}\n                {rowData.Payment}\n              </div>\n            )}\n          />\n          <Column\n            sortable\n            field=\"comments\"\n            header=\"Comments\"\n            body={(rowData) => (\n              <div title={rowData.comments}>{rowData.comments}</div>\n            )}\n          />\n          <Column header=\"Details\" body={viewDetails} />\n        </DataTable>\n      </div>\n    );\n  };\n\n  return (\n    <div>\n      <div className=\"customCard\">\n        {loader ? (\n          <Loader\n            handleAbort={() => {\n              handleAbort;\n              setLoader(false);\n            }}\n          />\n        ) : (\n          \"\"\n        )}\n        <div className=\"statusMsg warning\">\n          <span className=\"bold\">\n            <SlExclamation />\n          </span>\n          Note : If you want to edit/create expenses, please navigate to screen\n          Expenses -&gt; Open/Create.\n        </div>\n        {table == true ? (\n          <div className=\"darkHeader\">\n            <DataTable\n              value={data}\n              showGridlines\n              className=\"primeReactDataTable\"\n              stripedRows\n              expandedRows={expandedRows}\n              onRowToggle={(e) => setExpandedRows(e.data)}\n              onRowExpand={onRowExpand}\n              rowExpansionTemplate={rowExpansionTemplate}\n              paginator\n              rows={25}\n              paginationPerPage={5}\n              paginationRowsPerPageOptions={[5, 15, 25, 50]}\n              paginationComponentOptions={{\n                rowsPerPageText: \"Records per page:\",\n                rangeSeparatorText: \"out of\",\n              }}\n              currentPageReportTemplate=\"View {first} - {last} of {totalRecords} \"\n              paginatorTemplate=\"RowsPerPageDropdown FirstPageLink PrevPageLink CurrentPageReport NextPageLink LastPageLink\"\n              rowsPerPageOptions={[10, 25, 50]}\n              sortMode=\"multiple\"\n            >\n              <Column expander={allowExpansion} style={{ width: \"5rem\" }} />\n              <Column\n                sortable\n                field=\"stackName\"\n                header=\"Expense\"\n                body={(rowData) => (\n                  <div title={rowData.stackName}>{rowData.stackName}</div>\n                )}\n              />\n              <Column\n                sortable\n                field=\"dateCreated\"\n                header=\"Expense Date\"\n                body={(rowData) => (\n                  <div title={moment(rowData.minDt).format(\"DD-MMM-YYYY\")}>\n                    {moment(rowData.minDt).format(\"DD-MMM-YYYY\")}\n                  </div>\n                )}\n              />\n              <Column\n                sortable\n                field=\"lastUpdated\"\n                header=\"Modified Date\"\n                body={(rowData) => (\n                  <div\n                    title={moment(rowData.lastUpdated).format(\"DD-MMM-YYYY\")}\n                  >\n                    {moment(rowData.lastUpdated).format(\"DD-MMM-YYYY\")}\n                  </div>\n                )}\n              />\n              <Column\n                sortable\n                field=\"amount\"\n                header=\"Due Amount\"\n                style={{ textAlign: \"right\" }}\n                body={(rowData) => (\n                  <div\n                    title={\n                      amountFormat(rowData) +\n                      \" \" +\n                      numberWithCommas(rowData.amount)\n                    }\n                  >\n                    {amountFormat(rowData) +\n                      \" \" +\n                      numberWithCommas(rowData.amount)}\n                  </div>\n                )}\n              />\n              <Column\n                sortable\n                field=\"stackStatus\"\n                header=\"Status\"\n                body={(rowData) => (\n                  <div title={rowData.stackStatus}>{rowData.stackStatus}</div>\n                )}\n              />\n            </DataTable>\n          </div>\n        ) : (\n          \"\"\n        )}\n      </div>\n      {popUp ? (\n        <ExpensePopup\n          setPopUp={setPopUp}\n          data={popUpData}\n          popUp={popUp}\n          totalData={data}\n        />\n      ) : (\n        \"\"\n      )}\n      {anchorEl && (\n        <ProjectExpensePopOver\n          handleClose={handleClose}\n          anchorEl={anchorEl}\n          rowData={popoverdata}\n        />\n      )}\n    </div>\n  );\n}\nexport default ExpensesMyRequest;\n","import React from \"react\";\nimport axios from \"axios\";\nimport { useState, useEffect } from \"react\";\nimport { DataTable } from \"primereact/datatable\";\nimport { Column } from \"primereact/column\";\nimport moment from \"moment\";\nimport { environment } from \"../../environments/environment\";\nimport { BsFillCircleFill } from \"react-icons/bs\";\nimport Loader from \"../Loader/Loader\";\nimport { CModal } from \"@coreui/react\";\nimport { CModalBody } from \"@coreui/react\";\nimport { CModalHeader } from \"@coreui/react\";\nimport { CModalTitle } from \"@coreui/react\";\nimport { CModalFooter } from \"@coreui/react\";\nimport Draggable from \"react-draggable\";\nimport ProjectExpensePopOver from \"./ProjectExpensePopOver\";\n\nfunction ExpensesTeamRequest(props) {\n  const [data, setData] = useState([]);\n  const [expandedRows, setExpandedRows] = useState(null);\n  const [projectData, setProjectData] = useState([]);\n  const [popUp, setPopUp] = useState(false);\n  const [popUpData, setPopUpData] = useState({});\n  const [resourceid, setResourceId] = useState(0);\n  const [expenseHistory, setExpenseHistory] = useState([]);\n  const [popUpLoader, setPopUpLoader] = useState(false);\n  const [loader, setLoader] = useState(false);\n  const [loaderOne, setLoaderOne] = useState(false);\n  const [table, setTable] = useState(false);\n\n  const baseUrl = environment.baseUrl;\n  const projectId = props.projectId;\n  const handleAbort = props.handleAbort;\n  const loggedUserId = localStorage.getItem(\"resId\");\n\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const handleClose = () => {\n    setAnchorEl(false);\n  };\n\n  const getResourceid = () => {\n    axios({\n      method: \"get\",\n      url: baseUrl + `/ProjectMS/defectphases/getresourceid?id=${loggedUserId}`,\n    }).then(function (response) {\n      var res = response.data;\n      setResourceId(res);\n    });\n  };\n\n  useEffect(() => {\n    getResourceid();\n  }, []);\n\n  useEffect(() => {\n    getProjectOverviewData();\n    if (resourceid !== 0) {\n      getData();\n    }\n  }, [resourceid]);\n\n  const getProjectOverviewData = () => {\n    axios({\n      method: \"get\",\n      url:\n        baseUrl +\n        `/ProjectMS/Audit/projectOverviewDetails?projectId=${projectId}`,\n    })\n      .then(function (response) {\n        let resp = response.data;\n\n        setProjectData(resp);\n      })\n      .catch(function (response) {\n        console.log(response);\n      });\n  };\n\n  const amountFormat = (rowData) => {\n    let container = document.createElement(\"div\");\n    container.innerHTML = rowData.clientCurrencyCode;\n    return container.innerHTML;\n  };\n\n  let name = projectData[0]?.projectName;\n\n  const numberWithCommas = (x) => {\n    var number = String(x);\n\n    if (number.includes(\".\")) {\n      var parts = number.split(\".\");\n      var integerPart = parts[0].replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, \"$1,\");\n      var decimalPart = parts[1].padEnd(2, \"0\");\n      return integerPart + \".\" + decimalPart;\n    } else {\n      return number.replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, \"$1,\") + \".00\";\n    }\n  };\n\n  const getData = () => {\n    setLoader(false);\n    axios\n      .get(\n        baseUrl +\n          `/ProjectMS/projectExpenses/teamExpenses?resourceid=${resourceid}&projectid=${projectId}`\n      )\n      .then((res) => {\n        setData(res.data);\n        setLoader(false);\n        setTable(true);\n      })\n      .catch((e) => {\n        console.log(e);\n      });\n  };\n\n  const approvalIcon = (rowData) => {\n    if (rowData.includes(\"Submitted\")) {\n      return (\n        <span>\n          <BsFillCircleFill style={{ color: \"#ccc\" }} />\n        </span>\n      );\n    } else if (\n      rowData.includes(\"PM Approved\") ||\n      rowData.includes(\"Pending\") ||\n      rowData.includes(\"IT Approved\") ||\n      rowData.includes(\"HR Approved\")\n    ) {\n      return (\n        <span>\n          <BsFillCircleFill style={{ color: \"#CDE6FE\" }} />\n        </span>\n      );\n    } else if (rowData.includes(\"PM Rejected\")) {\n      return (\n        <span>\n          <BsFillCircleFill style={{ color: \"#e54c53\" }} />\n        </span>\n      );\n    } else if (rowData.includes(\"Drafted\")) {\n      return (\n        <span>\n          <BsFillCircleFill style={{ color: \"#EDD4A2\" }} />\n        </span>\n      );\n    } else if (rowData.includes(\"Paid\")) {\n      return (\n        <span>\n          <BsFillCircleFill style={{ color: \"#D9FBB3\" }} />\n        </span>\n      );\n    } else if (rowData.includes(\"Approved To Pay\")) {\n      return (\n        <span>\n          <BsFillCircleFill style={{ color: \"#0080ff\" }} />\n        </span>\n      );\n    } else if (\n      rowData.includes(\"FM Rejected\") ||\n      rowData.includes(\"IT Rejected\") ||\n      rowData.includes(\"HR Rejected\")\n    ) {\n      return (\n        <span>\n          <BsFillCircleFill style={{ color: \"#e54c53\" }} />\n        </span>\n      );\n    } else {\n      return <span></span>;\n    }\n  };\n  const [popoverdata, setPopoverData] = useState(\"\");\n  const approvalField = (rowData) => {\n    return (\n      <>\n        <div\n          onMouseOver={(e) => {\n            setAnchorEl(e?.currentTarget);\n            setPopoverData(\n              rowData.approvalFlow.split(\",\").join(\" >> \").slice(0, -4)\n            );\n          }}\n          onMouseLeave={handleClose}\n          className=\"ellipsis\"\n        >\n          {approvalIcon(rowData.Approval)} {rowData.Approval}\n        </div>\n      </>\n    );\n  };\n\n  const viewDetails = (rowData) => {\n    return (\n      <a\n        className=\"linkSty\"\n        onClick={() => {\n          setPopUpLoader(true);\n          expenseDetails(rowData.expense_id);\n          setPopUp(true);\n          setPopUpData(rowData);\n        }}\n      >\n        View\n      </a>\n    );\n  };\n\n  const expenseDetails = (expenseId) => {\n    axios\n      .get(\n        baseUrl +\n          `/ProjectMS/projectExpenses/expenseHistory?expenseId=${expenseId}`\n      )\n      .then((res) => {\n        setExpenseHistory(res.data);\n        setPopUpLoader(false);\n      })\n      .catch((error) => console.log(error));\n  };\n\n  function ExpensePopup(props) {\n    const { popUp, setPopUp, data, totalData } = props;\n\n    const downloadFile = async (document_id, svn_revision, file_name) => {\n      const link = document.createElement(\"a\");\n      link.href =\n        baseUrl +\n        `/CommonMS/document/downloadFile?documentId=${document_id}&svnRevision=${svn_revision}`;\n      link.click();\n    };\n\n    return (\n      <div>\n        {popUpLoader ? (\n          <Loader\n            handleAbort={() => {\n              handleAbort;\n              setPopUpLoader(false);\n            }}\n          />\n        ) : (\n          <CModal\n            visible={popUp}\n            backdrop=\"static\"\n            size=\"lg\"\n            onClose={() => setPopUp(false)}\n          >\n            <CModalHeader style={{ cursor: \"all-scroll\" }}>\n              <CModalTitle>\n                <span className=\"ft16\">Expense Details</span>\n              </CModalTitle>\n            </CModalHeader>\n            <CModalBody>\n              <div className=\"container\">\n                <div className=\"form-group content\">\n                  <div className=\"col-12 row\">\n                    <div className=\"col-6 row\">\n                      <div className=\"col-6\">\n                        <strong>Project</strong>\n                      </div>\n                      <div className=\"col-1\">:</div>\n                      <div className=\"col-5\">{totalData[0].projectName}</div>\n                    </div>\n                    <div className=\"col-6 row\">\n                      <div className=\"col-6\">\n                        <strong>Resource</strong>\n                      </div>\n                      <div className=\"col-1\">:</div>\n                      <div className=\"col-5\">{data.fullName}</div>\n                    </div>\n                    <div className=\"col-6 row\">\n                      <div className=\"col-6\">\n                        <strong>Expense Category</strong>\n                      </div>\n                      <div className=\"col-1\">:</div>\n                      <div className=\"col-5\">{data.Expense_Type}</div>\n                    </div>\n                    <div className=\"col-6 row\">\n                      <div className=\"col-6\">\n                        <strong>Description</strong>\n                      </div>\n                      <div className=\"col-1\">:</div>\n                      <div className=\"col-5\">{data.description}</div>\n                    </div>\n                    <div className=\"col-6 row\">\n                      <div className=\"col-6\">\n                        <strong>Incurred Amount</strong>\n                      </div>\n                      <div className=\"col-1\">:</div>\n                      <div className=\"col-5\">\n                        {amountFormat(data) +\n                          \" \" +\n                          numberWithCommas(data.Incurred)}\n                      </div>\n                    </div>\n                    <div className=\"col-6 row\">\n                      <div className=\"col-6\">\n                        <strong>Disbursed Amount</strong>\n                      </div>\n                      <div className=\"col-1\">:</div>\n                      <div className=\"col-5\">\n                        {amountFormat(data) +\n                          \" \" +\n                          numberWithCommas(data.disbursed_amount)}\n                      </div>\n                    </div>\n                    <div className=\"col-6 row\">\n                      <div className=\"col-6\">\n                        <strong>Paid By</strong>\n                      </div>\n                      <div className=\"col-1\">:</div>\n                      <div className=\"col-5\">{data.Payee}</div>\n                    </div>\n                    <div className=\"col-6 row\">\n                      <div className=\"col-6\">\n                        <strong>Status</strong>\n                      </div>\n                      <div className=\"col-1\">:</div>\n                      <div className=\"col-5\">\n                        {data.Payment == null || data.Payment == \"\"\n                          ? data.Approval\n                          : data.Payment}\n                      </div>\n                    </div>\n                    <div className=\"col-6 row\">\n                      <div className=\"col-6\">\n                        <strong>Receipt(s)</strong>\n                      </div>\n                      <div className=\"col-1\">:</div>\n                      <div className=\"col-5 ellipsis\">\n                        <a\n                          className=\"linkSty\"\n                          onClick={(e) =>\n                            downloadFile(\n                              data.document_id,\n                              data.svn_revision,\n                              data.file_name\n                            )\n                          }\n                          title={data.file_name}\n                        >\n                          {data.file_name}\n                        </a>\n                      </div>\n                    </div>\n                    <div className=\"col-6 row\">\n                      <div className=\"col-6\">\n                        <strong>Approval Workflow</strong>\n                      </div>\n                      <div className=\"col-1\">:</div>\n                      <div className=\"col-5\">\n                        {data.approvalFlow.split(\",\").join(\" >> \").slice(0, -4)}\n                      </div>\n                    </div>\n                    <div className=\"col-6 row\">\n                      <div className=\"col-6\">\n                        <strong>Expense History</strong>\n                      </div>\n                      <div className=\"col-1\">:</div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div\n                style={{\n                  backgroundColor: \"#eee\",\n                  border: \"1px solid #ddd\",\n                  minHeight: \"40px\",\n                  maxHeight: \"100px\",\n                  padding: \"5px 7px\",\n                  overflowY: \"auto\",\n                }}\n                className=\"row h-50\"\n              >\n                {expenseHistory\n                  .filter((d) => d.state != \"Drafted\")\n                  .map((dat) => (\n                    <div>\n                      <strong>\n                        {dat.state} by {dat.firstName} {dat.lastName} on{\" \"}\n                        {moment(dat.dateCreated).format(\"DD-MMM-YYYY\")}\n                      </strong>\n                      <br />\n                      <div className=\"col-12 row\">\n                        <div className=\"col-6 row\">\n                          <div className=\"col-6\">\n                            <span>Disbursed Amount</span>\n                          </div>\n                          <div className=\"col-1\">:</div>\n                          <div className=\"col-5\">\n                            {amountFormat(data) +\n                              \" \" +\n                              numberWithCommas(dat.disbursedAmount)}\n                          </div>\n                        </div>\n                        <div className=\"col-6 row\">\n                          <div className=\"col-6\">\n                            <span>Comment</span>\n                          </div>\n                          <div className=\"col-1\">:</div>\n                          <div className=\"col-5\">\n                            {dat.comments == \"\" || dat.comments == null\n                              ? \"NA\"\n                              : dat.comments}\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  ))}\n              </div>\n            </CModalBody>\n            <CModalFooter>\n              <button\n                className=\"btn btn-outline-secondary mx-auto\"\n                onClick={() => setPopUp(false)}\n              >\n                Close\n              </button>\n            </CModalFooter>\n          </CModal>\n        )}\n      </div>\n    );\n  }\n\n  const allowExpansion = (rowData) => {\n    return rowData.subrows.length >= 0;\n  };\n\n  const onRowExpand = (e) => {\n    const loaderTime = setTimeout(() => {\n      setLoaderOne(true);\n    }, 100);\n    axios\n      .get(\n        baseUrl +\n          `/ProjectMS/projectExpenses/stackExpenses?stackId=${e.data.stackId}&userId=${loggedUserId}&raisedBy=${e.data.raised_by}&projectId=${projectId}&statusId=${e.data.status_id}`\n      )\n      .then((res) => {\n        data.find((u) => u.stackId === e.data.stackId).subrows = res.data;\n        setLoaderOne(false);\n        clearTimeout(loaderTime);\n      })\n      .catch((error) => console.log(error));\n  };\n\n  const rowExpansionTemplate = (data) => {\n    return (\n      <div className=\"darkHeader\">\n        {loaderOne ? \"\" : \"\"}\n        <DataTable\n          value={data.subrows}\n          className=\"primeReactDataTable\"\n          stripedRows\n          sortOrder={1}\n        >\n          <Column\n            sortable\n            field=\"Expense_Type\"\n            header=\"Expense Type\"\n            body={(rowData) => (\n              <div className=\"ellipsis\" title={rowData.Expense_Type}>\n                {rowData.Expense_Type}\n              </div>\n            )}\n          />\n          <Column\n            sortable\n            field=\"expense_date\"\n            header=\"Date\"\n            body={(rowData) => (\n              <div title={moment(rowData.expense_date).format(\"DD-MMM-YYYY\")}>\n                {moment(rowData.expense_date).format(\"DD-MMM-YYYY\")}\n              </div>\n            )}\n          />\n          <Column\n            sortable\n            field=\"Payee\"\n            header=\"Payee\"\n            body={(rowData) => <div title={rowData.Payee}>{rowData.Payee}</div>}\n          />\n          <Column\n            sortable\n            field=\"is_billable\"\n            header=\"Billable\"\n            body={(rowData) => (rowData.is_billable ? \"Yes\" : \"No\")}\n          />\n          <Column\n            sortable\n            field=\"Incurred\"\n            header=\"Incurred\"\n            style={{ textAlign: \"right\" }}\n            body={(rowData) => (\n              <div\n                title={\n                  amountFormat(rowData) +\n                  \" \" +\n                  numberWithCommas(rowData.Incurred)\n                }\n              >\n                {amountFormat(rowData) +\n                  \" \" +\n                  numberWithCommas(rowData.Incurred)}\n              </div>\n            )}\n          />\n          <Column\n            sortable\n            field=\"disbursed_amount\"\n            header=\"Disbursed\"\n            style={{ textAlign: \"right\" }}\n            body={(rowData) => (\n              <div\n                title={\n                  amountFormat(rowData) +\n                  \" \" +\n                  numberWithCommas(rowData.disbursed_amount)\n                }\n              >\n                {amountFormat(rowData) +\n                  \" \" +\n                  numberWithCommas(rowData.disbursed_amount)}\n              </div>\n            )}\n          />\n          <Column\n            sortable\n            field=\"client_amount\"\n            header=\"Client\"\n            style={{ textAlign: \"right\" }}\n            body={(rowData) => (\n              <div\n                title={\n                  amountFormat(rowData) +\n                  \" \" +\n                  numberWithCommas(rowData.client_amount)\n                }\n              >\n                {amountFormat(rowData) +\n                  \" \" +\n                  numberWithCommas(rowData.client_amount)}\n              </div>\n            )}\n          />\n          <Column\n            sortable\n            field=\"Approval\"\n            header=\"Approval\"\n            body={approvalField}\n          />\n          <Column\n            sortable\n            field=\"Payment\"\n            header=\"Payment\"\n            body={(rowData) => (\n              <div title={rowData.Payment}>\n                {approvalIcon(rowData.Payment)}\n                {rowData.Payment}\n              </div>\n            )}\n          />\n          <Column\n            sortable\n            field=\"comments\"\n            header=\"Comments\"\n            body={(rowData) => (\n              <div title={rowData.comments}>{rowData.comments}</div>\n            )}\n          />\n          <Column header=\"Details\" body={viewDetails} />\n        </DataTable>\n      </div>\n    );\n  };\n\n  const expenseDate = (rowData) => {\n    if (\n      moment(rowData.minDt).format(\"DD-MMM-YYYY\") !==\n      moment(rowData.maxDt).format(\"DD-MMM-YYYY\")\n    ) {\n      return (\n        <div\n          title={`${moment(rowData.minDt).format(\"DD-MMM-YYYY\")} - ${moment(\n            rowData.maxDt\n          ).format(\"DD-MMM-YYYY\")}`}\n        >\n          {`${moment(rowData.minDt).format(\"DD-MMM-YYYY\")} - ${moment(\n            rowData.maxDt\n          ).format(\"DD-MMM-YYYY\")}`}\n        </div>\n      );\n    } else {\n      return (\n        <div title={moment(rowData.minDt).format(\"DD-MMM-YYYY\")}>\n          {moment(rowData.minDt).format(\"DD-MMM-YYYY\")}\n        </div>\n      );\n    }\n  };\n\n  return (\n    <div>\n      <div className=\"customCard darkHeader\">\n        {loader ? <Loader handleAbort={() => setLoader(false)} /> : \"\"}\n        &nbsp;\n        <div class=\"form-group\">\n          {table == true ? (\n            <DataTable\n              value={data}\n              showGridlines\n              stripedRows\n              className=\"primeReactDataTable\"\n              expandedRows={expandedRows}\n              onRowToggle={(e) => setExpandedRows(e.data)}\n              onRowExpand={onRowExpand}\n              rowExpansionTemplate={rowExpansionTemplate}\n              paginator\n              rows={25}\n              paginationPerPage={5}\n              paginationRowsPerPageOptions={[5, 15, 25, 50]}\n              paginationComponentOptions={{\n                rowsPerPageText: \"Records per page:\",\n                rangeSeparatorText: \"out of\",\n              }}\n              currentPageReportTemplate=\"View {first} - {last} of {totalRecords} \"\n              paginatorTemplate=\"RowsPerPageDropdown FirstPageLink PrevPageLink CurrentPageReport NextPageLink LastPageLink\"\n              rowsPerPageOptions={[10, 25, 50]}\n              sortMode=\"multiple\"\n            >\n              <Column expander={allowExpansion} style={{ width: \"5rem\" }} />\n              <Column\n                sortable\n                field=\"stackName\"\n                header=\"Expense\"\n                body={(rowData) => (\n                  <div title={rowData.stackName}>{rowData.stackName}</div>\n                )}\n              />\n              <Column\n                sortable\n                field=\"resource\"\n                header=\"Created By\"\n                body={(rowData) => (\n                  <div className=\"ellipsis\" title={rowData.resource}>\n                    {rowData.resource}\n                  </div>\n                )}\n              />\n              <Column\n                sortable\n                field=\"createdOn\"\n                header=\"Expense Date\"\n                body={(rowData) => expenseDate(rowData)}\n              />\n              <Column\n                sortable\n                field=\"lastUpdated\"\n                header=\"Modified Date\"\n                body={(rowData) => (\n                  <div\n                    title={moment(rowData.lastUpdated).format(\"DD-MMM-YYYY\")}\n                  >\n                    {\" \"}\n                    {moment(rowData.lastUpdated).format(\"DD-MMM-YYYY\")}\n                  </div>\n                )}\n              />\n              <Column\n                sortable\n                field=\"amount\"\n                header=\"Due Amount\"\n                style={{ textAlign: \"right\" }}\n                body={(rowData) => (\n                  <div\n                    title={\n                      amountFormat(rowData) +\n                      \" \" +\n                      numberWithCommas(rowData.amount)\n                    }\n                  >\n                    {amountFormat(rowData) +\n                      \" \" +\n                      numberWithCommas(rowData.amount)}\n                  </div>\n                )}\n              />\n              <Column\n                sortable\n                field=\"approval\"\n                header=\"Status\"\n                body={(rowData) => (\n                  <div title={rowData.approval}>{rowData.approval}</div>\n                )}\n              />\n            </DataTable>\n          ) : (\n            \"\"\n          )}\n        </div>\n      </div>\n      {popUp ? (\n        <ExpensePopup\n          setPopUp={setPopUp}\n          data={popUpData}\n          popUp={popUp}\n          totalData={data}\n        />\n      ) : (\n        \"\"\n      )}\n      {anchorEl && (\n        <ProjectExpensePopOver\n          handleClose={handleClose}\n          anchorEl={anchorEl}\n          rowData={popoverdata}\n        />\n      )}\n    </div>\n  );\n}\nexport default ExpensesTeamRequest;\n","import React from \"react\";\nimport axios from \"axios\";\nimport { useState, useEffect } from \"react\";\nimport { DataTable } from \"primereact/datatable\";\nimport { Column } from \"primereact/column\";\nimport moment from \"moment\";\nimport { environment } from \"../../environments/environment\";\nimport { FaSave } from \"react-icons/fa\";\nimport { AiFillEdit } from \"react-icons/ai\";\nimport { TiCancel } from \"react-icons/ti\";\nimport Draggable from \"react-draggable\";\nimport { CModal } from \"@coreui/react\";\nimport { CModalBody } from \"@coreui/react\";\nimport { CModalHeader } from \"@coreui/react\";\nimport { CModalTitle } from \"@coreui/react\";\nimport { CModalFooter } from \"@coreui/react\";\nimport { BsFillCircleFill } from \"react-icons/bs\";\nimport { BsFileEarmarkPdf } from \"react-icons/bs\";\nimport { BiCheck } from \"react-icons/bi\";\nimport Loader from \"../Loader/Loader\";\nimport { Dropdown } from \"primereact/dropdown\";\nimport ProjectExpensePopOver from \"./ProjectExpensePopOver\";\nimport { ImCross } from \"react-icons/im\";\nimport { IoWarningOutline } from \"react-icons/io5\";\n\nfunction ExpensesMyApprovalRequests(props) {\n  const [data, setData] = useState([]);\n  const [expandedRows, setExpandedRows] = useState(null);\n  const [projectData, setProjectData] = useState([]);\n  const [selectedRows, setSelectedRows] = useState([]);\n  const [popUp, setPopUp] = useState(false);\n  const [popUpData, setPopUpData] = useState({});\n  const [resourceid, setResourceId] = useState(0);\n  const [loader, setLoader] = useState(false);\n  const [expenseHistory, setExpenseHistory] = useState([]);\n  const [popUpLoader, setPopUpLoader] = useState(false);\n  const [selectedOption, setSelectedOption] = useState(null);\n  const [selectedRowsData, setSelectedRowsData] = useState([]);\n  const [editRowData, setEditRowData] = useState({});\n  const [selectedOptionTwo, setSelectedOptionTwo] = useState(null);\n  const [message, setMessage] = useState(false);\n  const [isEditClicked, setIsEditClicked] = useState(true);\n  const [isCheckedList, setIsCheckedList] = useState([]);\n  const [loaderOne, setLoaderOne] = useState(false);\n  const [paymentInitial, setPaymentInitial] = useState(false);\n  const [options, setOptions] = useState([]);\n  const [headerChecked, setHeaderChecked] = useState(true);\n  const [isChecked, setIsChecked] = useState(false);\n  const [isHovered, setIsHovered] = useState(false);\n  const [table, setTable] = useState(false);\n\n  const [count, setCount] = useState(0);\n\n  const baseUrl = environment.baseUrl;\n  const projectId = props.projectId;\n  const handleAbort = props.handleAbort;\n  const grp3Items = props.grp3Items;\n  const dataObject = grp3Items.find((item) => item.display_name === \"Expenses\");\n\n  // console.log(grp3Items[3].is_write);\n  console.log(\"projectId:\", projectId);\n  console.log(grp3Items);\n  const loggedUserId = localStorage.getItem(\"resId\");\n\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const handleClose = () => {\n    setAnchorEl(false);\n  };\n\n  const getProjectOverviewData = () => {\n    axios({\n      method: \"get\",\n      url:\n        baseUrl +\n        `/ProjectMS/Audit/projectOverviewDetails?projectId=${projectId}`,\n    })\n      .then(function (response) {\n        let resp = response.data;\n        setProjectData(resp);\n      })\n      .catch((error) => console.log(error));\n  };\n\n  let projectName = projectData[0]?.projectName;\n\n  const numberWithCommas = (x) => {\n    var number = String(x);\n\n    if (number.includes(\".\")) {\n      var parts = number.split(\".\");\n      var integerPart = parts[0].replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, \"$1,\");\n      var decimalPart = parts[1].padEnd(2, \"0\");\n      return integerPart + \".\" + decimalPart;\n    } else {\n      return number.replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, \"$1,\") + \".00\";\n    }\n  };\n\n  const getResourceid = () => {\n    axios({\n      method: \"get\",\n      url: baseUrl + `/ProjectMS/defectphases/getresourceid?id=${loggedUserId}`,\n    }).then(function (response) {\n      var res = response.data;\n      setResourceId(res);\n    });\n  };\n  useEffect(() => {\n    getResourceid();\n  }, []);\n\n  useEffect(() => {\n    getProjectOverviewData();\n    if (resourceid !== 0) {\n      getData();\n    }\n  }, [resourceid]);\n\n  console.log(\"resourceid: \", resourceid);\n  const getData = () => {\n    setLoader(false);\n    axios\n      .get(\n        baseUrl +\n          `/ProjectMS/projectExpenses/expenseApprovals?resourceid=${resourceid}&projectid=${projectId}`\n      )\n      .then((res) => {\n        setData(res.data);\n        setLoader(false);\n        setTable(true);\n      })\n      .catch((e) => console.log(e));\n  };\n\n  const amountFormat = (rowData) => {\n    let container = document.createElement(\"div\");\n    container.innerHTML = rowData.clientCurrencyCode;\n    return container.innerHTML;\n  };\n\n  const allowExpansion = (rowData) => {\n    return rowData.subrows.length >= 0;\n  };\n\n  const approvalIcon = (rowData) => {\n    if (rowData.includes(\"Submitted\")) {\n      return (\n        <span>\n          <BsFillCircleFill style={{ color: \"#ccc\" }} />\n        </span>\n      );\n    } else if (\n      rowData.includes(\"PM Approved\") ||\n      rowData.includes(\"Pending\") ||\n      rowData.includes(\"IT Approved\") ||\n      rowData.includes(\"HR Approved\")\n    ) {\n      return (\n        <span>\n          <BsFillCircleFill style={{ color: \"#CDE6FE\" }} />\n        </span>\n      );\n    } else if (rowData.includes(\"PM Rejected\")) {\n      return (\n        <span>\n          <BsFillCircleFill style={{ color: \"#e54c53\" }} />\n        </span>\n      );\n    } else if (rowData.includes(\"Drafted\")) {\n      return (\n        <span>\n          <BsFillCircleFill style={{ color: \"#EDD4A2\" }} />\n        </span>\n      );\n    } else if (rowData.includes(\"Paid\")) {\n      return (\n        <span>\n          <BsFillCircleFill style={{ color: \"#D9FBB3\" }} />\n        </span>\n      );\n    } else if (rowData.includes(\"Approved To Pay\")) {\n      return (\n        <span>\n          <BsFillCircleFill style={{ color: \"#0080ff\" }} />\n        </span>\n      );\n    } else if (\n      rowData.includes(\"FM Rejected\") ||\n      rowData.includes(\"IT Rejected\") ||\n      rowData.includes(\"HR Rejected\")\n    ) {\n      return (\n        <span>\n          <BsFillCircleFill style={{ color: \"#e54c53\" }} />\n        </span>\n      );\n    } else {\n      return <span></span>;\n    }\n  };\n  const [popoverdata, setPopoverData] = useState(\"\");\n\n  const [paymentUsers, setPaymentUsers] = useState([]);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await axios.get(\n          baseUrl + `/ProjectMS/projectExpenses/paymentUsers`\n        );\n        const paymentUsers = response.data;\n        setPaymentUsers(paymentUsers);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    fetchData();\n  }, []);\n\n  const approvalField = (rowData) => {\n    return selectedRows.map((d) => d.expense_id).includes(rowData.expense_id) &&\n      !paymentUsers.includes(parseInt(loggedUserId)) ? (\n      <div>\n        <select onChange={(e) => onchange(e, rowData)} id=\"dropDown\">\n          {rowData.drop_down.map((item) => {\n            const key = Object.keys(item)[0];\n            const label = item[key];\n            return <option value={key}>{label}</option>;\n          })}\n        </select>\n      </div>\n    ) : (\n      <div\n        onMouseOver={(e) => {\n          setAnchorEl(e?.currentTarget);\n          setPopoverData(\n            rowData.approvalFlow.split(\",\").join(\" >> \").slice(0, -4)\n          );\n        }}\n        onMouseLeave={handleClose}\n        className=\"ellipsis\"\n      >\n        {approvalIcon(rowData.Approval)} {rowData.Approval}\n      </div>\n    );\n  };\n\n  const isBillable = (rowData) => {\n    return selectedRows\n      .map((d) => d.expense_id)\n      .includes(rowData.expense_id) ? (\n      <input\n        type=\"checkbox\"\n        id=\"billable\"\n        defaultChecked={rowData.is_billable}\n        onChange={(e) => onchange(e, rowData)}\n      />\n    ) : rowData.is_billable == false ? (\n      \"No\"\n    ) : (\n      \"Yes\"\n    );\n  };\n\n  const disbursedAmountField = (rowData) => {\n    return selectedRows\n      .map((d) => d.expense_id)\n      .includes(rowData.expense_id) ? (\n      <input\n        type=\"text\"\n        id=\"disbursed\"\n        defaultValue={rowData.disbursed_amount}\n        onChange={(e) => onchange(e, rowData)}\n        onKeyDown={(e) => {\n          const key = e.key;\n          const isNumber = /^[0-9]$/.test(key);\n          const isDecimal = key === \".\";\n\n          if (!isNumber && !isDecimal && key !== \"Backspace\") {\n            e.preventDefault();\n          }\n        }}\n      />\n    ) : (\n      amountFormat(rowData) + \" \" + numberWithCommas(rowData.disbursed_amount)\n    );\n  };\n\n  const clientAmountField = (rowData) => {\n    return selectedRows\n      .map((d) => d.expense_id)\n      .includes(rowData.expense_id) ? (\n      <input\n        type=\"text\"\n        id=\"client\"\n        defaultValue={rowData.client_amount}\n        onChange={(e) => onchange(e, rowData)}\n        onKeyDown={(e) => {\n          const key = e.key;\n          const isNumber = /^[0-9]$/.test(key);\n          const isDecimal = key === \".\";\n\n          if (!isNumber && !isDecimal && key !== \"Backspace\") {\n            e.preventDefault();\n          }\n        }}\n      />\n    ) : (\n      amountFormat(rowData) + \" \" + numberWithCommas(rowData.client_amount)\n    );\n  };\n\n  const paymentStatus = (rowData) => {\n    return editRowData.stackId == rowData.stackId ? (\n      <div>\n        <select onChange={(e) => setSelectedOptionTwo(e.target.value)}>\n          {rowData.dropDown.map((item) => {\n            const key = Object.keys(item)[0];\n            const label = item[key];\n            return (\n              <option key={key} value={key}>\n                {label}\n              </option>\n            );\n          })}\n        </select>\n      </div>\n    ) : (\n      rowData.payment\n    );\n  };\n\n  useEffect(() => {\n    setSelectedRowsData((prev) => selectedRows);\n  }, [selectedRows]);\n\n  const onchange = (e, rowData) => {\n    const index = selectedRowsData.findIndex(\n      (selectedRowData) => selectedRowData.expense_id === rowData.expense_id\n    );\n\n    const updatedSelectedRowsData = [...selectedRowsData];\n    updatedSelectedRowsData[index] = {\n      ...updatedSelectedRowsData[index],\n      disbursed_amount:\n        e.target.id === \"disbursed\"\n          ? e.target.value\n          : updatedSelectedRowsData[index].disbursed_amount,\n      client_amount:\n        e.target.id === \"client\"\n          ? e.target.value\n          : updatedSelectedRowsData[index].client_amount,\n      comments:\n        e.target.id === \"comment\"\n          ? e.target.value\n          : updatedSelectedRowsData[index].comments,\n      is_billable:\n        e.target.id === \"billable\"\n          ? !updatedSelectedRowsData[index].is_billable\n          : updatedSelectedRowsData[index].is_billable,\n      Payment:\n        e.target.id === \"dropDown\"\n          ? e.target.value\n          : updatedSelectedRowsData[index].Payment,\n    };\n    setSelectedRowsData(updatedSelectedRowsData);\n  };\n\n  const paymentsField = (rowData) => {\n    return selectedRows.map((d) => d.expense_id).includes(rowData.expense_id) &&\n      paymentUsers.includes(parseInt(loggedUserId)) ? (\n      <div>\n        <select onChange={(e) => onchange(e, rowData)} id=\"dropDown\">\n          {rowData.drop_down.map((item) => {\n            const key = Object.keys(item)[0];\n            const label = item[key];\n            return <option value={key}>{label}</option>;\n          })}\n        </select>\n      </div>\n    ) : typeof rowData.Payment === \"string\" &&\n      rowData.Payment.trim().length > 0 &&\n      /[a-zA-Z]/.test(rowData.Payment) ? (\n      <span title={rowData.Payment} className=\"ellipsis\">\n        {approvalIcon(rowData.Payment)} {rowData.Payment}\n      </span>\n    ) : (\n      \"\"\n    );\n  };\n  const handleSelectionChange = (newSelection) => {\n    setSelectedRows(() => newSelection);\n  };\n\n  const Checkbox = (rowData, index) => {\n    return (\n      <>\n        <div>\n          <input\n            className=\"form-check-input\"\n            type=\"checkbox\"\n            id={rowData.id}\n            style={{ height: \"20px\", width: \"20px\", marginLeft: \"5px\" }}\n            checked={selectedRows.some(\n              (item) => item.expense_id === rowData.expense_id\n            )}\n            onChange={(e) => {\n              const newCheckedList = [...isCheckedList];\n              newCheckedList[index] = e.target.checked;\n              setIsCheckedList(newCheckedList);\n\n              rowData.Payment = Object.keys(rowData.drop_down[0])[0];\n              const newSelection = [...selectedRows];\n              if (e.target.checked) {\n                newSelection.push(rowData);\n              } else {\n                const selectionIndex = newSelection.findIndex(\n                  (selectedRowData) =>\n                    selectedRowData.expense_id === rowData.expense_id\n                );\n                if (selectionIndex !== -1) {\n                  newSelection.splice(selectionIndex, 1);\n                }\n              }\n              handleSelectionChange(newSelection);\n            }}\n            disabled={isRowDisabled(rowData)}\n          />\n        </div>\n      </>\n    );\n  };\n  //var list  = [];\n  var [list, setlist] = useState([]);\n  const Checkboxheader = (rowData, index, subRowsData) => {\n    const handleCheckboxChange = (e) => {\n      const isChecked = e.target.checked;\n      setHeaderChecked(isChecked);\n\n      let id = e.target.id;\n\n      let dcc = null;\n\n      if (isChecked) {\n        let isEditData = subRowsData.filter((item) => item.isEdit);\n\n        let ll = list;\n\n        if (isEditData.length != 0) {\n          for (let i = 0; i < isEditData.length; i++) {\n            isEditData[i].Payment = Object.keys(isEditData[i].drop_down[0])[0];\n            ll.push(isEditData[i]);\n            setlist(ll);\n          }\n        }\n\n        let finalLL = ll.map((d) => \"\" + d.id);\n\n        if (count > 0) {\n          if (id.includes(\",\")) {\n            let spltArr = id.split(\",\");\n\n            for (let i = 0; i < spltArr.length; i++) {\n              let ddc = document.getElementById(spltArr[i]);\n              ddc.checked = finalLL.includes(\"\" + spltArr[i]);\n            }\n          } else {\n            dcc = document.getElementById(id);\n            dcc.checked = finalLL.includes(\"\" + id);\n          }\n        }\n\n        setSelectedRows(() => list);\n      } else {\n        const updatedList = selectedRows.filter(\n          (item) => !subRowsData.includes(item)\n        );\n        setlist(updatedList);\n        setSelectedRows(() => updatedList);\n      }\n      setCount((prev) => prev + 1);\n\n      // Checkbox(rowData, index);\n    };\n\n    return (\n      <>\n        <div className=\"form-check pl-4\">\n          <input\n            className=\"form-check-input\"\n            type=\"checkbox\"\n            id={subRowsData\n              .filter((d) => d.isEdit)\n              .map((d) => d.id)\n              .toString()}\n            style={{ height: \"20px\", width: \"20px\" }}\n            //checked={selectedRows.some(it=>it.stackId === subRowsData[0].id)}\n            checked={\n              selectedRowsData\n                .filter((u) => u.id === subRowsData[0]?.id)\n                .filter((i) => i.isEdit == true).length ===\n                subRowsData.filter((it) => it.isEdit == true).length &&\n              subRowsData.filter((it) => it.isEdit == true).length !== 0\n            }\n            onChange={handleCheckboxChange}\n            disabled={subRowsData.every(isRowDisabled)}\n          />\n        </div>\n      </>\n    );\n  };\n\n  const commentsField = (rowData) => {\n    return selectedRows\n      .map((d) => d.expense_id)\n      .includes(rowData.expense_id) ? (\n      <textarea\n        id=\"comment\"\n        style={{ resize: \"none\" }}\n        defaultValue={rowData.comments}\n        onChange={(e) => onchange(e, rowData)}\n      />\n    ) : (\n      <div title={rowData.comments}>{rowData.comments}</div>\n    );\n  };\n\n  const viewDetails = (rowData) => {\n    return (\n      <a\n        className=\"linkSty\"\n        onClick={() => {\n          setPopUpLoader(true);\n          expenseDetails(rowData.expense_id);\n          setPopUp(true);\n          setPopUpData(rowData);\n        }}\n      >\n        View\n      </a>\n    );\n  };\n\n  const sendSelectedRowsData = (datas) => {\n    let data = selectedRowsData.filter((u) => u.id === datas.stackId);\n    const formattedData = data.map((rowData) => ({\n      expenseId: rowData.expense_id,\n      isBillable: rowData.is_billable == false ? 0 : 1,\n      disbursedAmount: parseFloat(rowData.disbursed_amount),\n      clientAmmount: parseFloat(rowData.client_amount),\n      payment: parseInt(rowData.Payment),\n      comments: rowData.comments,\n      resId: resourceid,\n      stackId: rowData.id,\n    }));\n\n    axios\n      .post(\n        baseUrl + `/ProjectMS/projectExpenses/saveExpenses`,\n        formattedData,\n        {\n          headers: { \"Content-Type\": \"application/json\" },\n        }\n      )\n      .then((res) => {\n        setMessage(true);\n        setTimeout(() => {\n          setMessage(false);\n        }, 3000);\n        setSelectedRows([]);\n        getData();\n      })\n      .catch((error) => console.log(error));\n  };\n\n  const saveRowData = () => {\n    const formattedData = {\n      stackId: editRowData.stackId,\n      newStatusId: parseInt(selectedOptionTwo),\n    };\n    axios\n      .post(\n        baseUrl + `/ProjectMS/projectExpenses/saveStackExpenses`,\n        formattedData,\n        {\n          headers: { \"Content-Type\": \"application/json\" },\n        }\n      )\n      .then((res) => {\n        setMessage(true);\n        setTimeout(() => {\n          setMessage(false);\n        }, 3000);\n        setEditRowData({});\n        getData();\n      })\n      .catch((error) => console.log(error));\n  };\n\n  const expenseDetails = (expenseId) => {\n    axios\n      .get(\n        baseUrl +\n          `/ProjectMS/projectExpenses/expenseHistory?expenseId=${expenseId}`\n      )\n      .then((res) => {\n        setExpenseHistory(res.data);\n        setPopUpLoader(false);\n      })\n      .catch((error) => console.log(error));\n  };\n\n  const [documentFail, setDocumentFail] = useState(false);\n  const [documentLoader, setDocumentLoader] = useState(false);\n\n  const downloadExpenseStack = async (stackId) => {\n    const link = document.createElement(\"a\");\n    link.href =\n      baseUrl + `/ProjectMS/projectExpenses/downloadStack?stackId=${stackId}`;\n    link.download = \"Expense.pdf\";\n    setDocumentLoader(true);\n    await axios\n      .get(link.href)\n      .then((response) => {\n        if (response.status === 200) {\n          link.click();\n        }\n      })\n      .catch((error) => {\n        console.error(\"An error occurred:\", error);\n        setDocumentFail(true);\n        setTimeout(() => {\n          setDocumentFail(false);\n        }, 3000);\n      });\n    setDocumentLoader(false);\n  };\n\n  const actionField = (rowData) => {\n    return (\n      <>\n        <BsFileEarmarkPdf\n          size={\"1.8em\"}\n          style={{ color: \"#428bca\", cursor: \"pointer\", marginRight: \"20px\" }}\n          onClick={() => downloadExpenseStack(rowData.stackId)}\n        />\n        {grp3Items[3]?.is_write == true ? (\n          <>\n            {(rowData.approval == \"PM Approved\" ||\n              rowData.approval == \"Approved To Pay\") && (\n              <AiFillEdit\n                size={\"1.5em\"}\n                style={{ cursor: \"pointer\", marginRight: \"-20px\" }}\n                color=\"orange\"\n                onClick={(e) => {\n                  setIsEditClicked(false);\n                  setEditRowData(rowData);\n                  paymentStatus(rowData);\n                  setSelectedOptionTwo(Object.keys(rowData.dropDown[0])[0]);\n                }}\n              />\n            )}\n          </>\n        ) : (\n          \"\"\n        )}\n      </>\n    );\n  };\n\n  function ExpensePopup(props) {\n    const { popUp, setPopUp, data, totalData } = props;\n\n    const [downloadFail, setDownloadFail] = useState(false);\n\n    const downloadFile = async (document_id, svn_revision, file_name) => {\n      const link = document.createElement(\"a\");\n      link.href =\n        baseUrl +\n        `/CommonMS/document/downloadFile?documentId=${document_id}&svnRevision=${svn_revision}`;\n      try {\n        const response = await axios.get(link.href);\n\n        if (response.status === 200) {\n          link.click();\n        }\n      } catch (error) {\n        setDownloadFail(true);\n        setTimeout(() => {\n          setDownloadFail(false);\n        }, 3000);\n        console.error(\"An error occurred:\", error);\n      }\n    };\n\n    return (\n      <div>\n        {popUpLoader ? (\n          <Loader\n            handleAbort={() => {\n              handleAbort;\n              setPopUpLoader(false);\n            }}\n          />\n        ) : (\n          <CModal\n            visible={popUp}\n            backdrop=\"static\"\n            size=\"lg\"\n            onClose={() => setPopUp(false)}\n          >\n            <CModalHeader style={{ cursor: \"all-scroll\" }}>\n              <CModalTitle>\n                <span className=\"ft16\">Expense Details</span>\n              </CModalTitle>\n            </CModalHeader>\n            <CModalBody>\n              <div className=\"container\">\n                {downloadFail ? (\n                  <div className=\"statusMsg error\">\n                    <span>\n                      <IoWarningOutline /> Document is not available.\n                    </span>\n                  </div>\n                ) : (\n                  \"\"\n                )}\n                <div className=\"form-group content\">\n                  <div className=\"col-12 row\">\n                    <div className=\"col-6 row\">\n                      <div className=\"col-6\">\n                        <strong>Project</strong>\n                      </div>\n                      <div className=\"col-1\">:</div>\n                      <div className=\"col-5\">{totalData[0].projectName}</div>\n                    </div>\n                    <div className=\"col-6 row\">\n                      <div className=\"col-6\">\n                        <strong>Resource</strong>\n                      </div>\n                      <div className=\"col-1\">:</div>\n                      <div className=\"col-5\">{data.fullName}</div>\n                    </div>\n                    <div className=\"col-6 row\">\n                      <div className=\"col-6\">\n                        <strong>Expense Category</strong>\n                      </div>\n                      <div className=\"col-1\">:</div>\n                      <div className=\"col-5\">{data.Expense_Type}</div>\n                    </div>\n                    <div className=\"col-6 row\">\n                      <div className=\"col-6\">\n                        <strong>Description</strong>\n                      </div>\n                      <div className=\"col-1\">:</div>\n                      <div className=\"col-5\">{data.description}</div>\n                    </div>\n                    <div className=\"col-6 row\">\n                      <div className=\"col-6\">\n                        <strong>Incurred Amount</strong>\n                      </div>\n                      <div className=\"col-1\">:</div>\n                      <div className=\"col-5\">\n                        {amountFormat(data) +\n                          \" \" +\n                          numberWithCommas(data.Incurred)}\n                      </div>\n                    </div>\n                    <div className=\"col-6 row\">\n                      <div className=\"col-6\">\n                        <strong>Disbursed Amount</strong>\n                      </div>\n                      <div className=\"col-1\">:</div>\n                      <div className=\"col-5\">\n                        {amountFormat(data) +\n                          \" \" +\n                          numberWithCommas(data.disbursed_amount)}\n                      </div>\n                    </div>\n                    <div className=\"col-6 row\">\n                      <div className=\"col-6\">\n                        <strong>Paid By</strong>\n                      </div>\n                      <div className=\"col-1\">:</div>\n                      <div className=\"col-5\">{data.Payee}</div>\n                    </div>\n                    <div className=\"col-6 row\">\n                      <div className=\"col-6\">\n                        <strong>Status</strong>\n                      </div>\n                      <div className=\"col-1\">:</div>\n                      <div className=\"col-5\">\n                        {data.Payment == null || data.Payment == \"\"\n                          ? data.Approval\n                          : data.Payment}\n                      </div>\n                    </div>\n                    <div className=\"col-6 row\">\n                      <div className=\"col-6\">\n                        <strong>Receipt(s)</strong>\n                      </div>\n                      <div className=\"col-1\">:</div>\n                      <div className=\"col-5 ellipsis\">\n                        <a\n                          className=\"linkSty\"\n                          onClick={(e) =>\n                            downloadFile(\n                              data.document_id,\n                              data.svn_revision,\n                              data.file_name\n                            )\n                          }\n                          title={data.file_name}\n                        >\n                          {data.file_name}\n                        </a>\n                      </div>\n                    </div>\n                    <div className=\"col-6 row\">\n                      <div className=\"col-6\">\n                        <strong>Approval Workflow</strong>\n                      </div>\n                      <div className=\"col-1\">:</div>\n                      <div className=\"col-5\">\n                        {data.approvalFlow.split(\",\").join(\" >> \").slice(0, -4)}\n                      </div>\n                    </div>\n                    <div className=\"col-6 row\">\n                      <div className=\"col-6\">\n                        <strong>Expense History</strong>\n                      </div>\n                      <div className=\"col-1\">:</div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div\n                style={{\n                  backgroundColor: \"#eee\",\n                  border: \"1px solid #ddd\",\n                  minHeight: \"40px\",\n                  maxHeight: \"100px\",\n                  padding: \"5px 7px\",\n                  overflowY: \"auto\",\n                }}\n                className=\"row h-50\"\n              >\n                {expenseHistory\n                  .filter((d) => d.state != \"Drafted\")\n                  .map((dat) => (\n                    <div>\n                      <strong>\n                        {dat.state} by {dat.firstName} {dat.lastName} on{\" \"}\n                        {moment(dat.dateCreated).format(\"DD-MMM-YYYY\")}\n                      </strong>\n                      <br />\n                      <div className=\"col-12 row\">\n                        <div className=\"col-6 row\">\n                          <div className=\"col-6\">\n                            <span>Disbursed Amount</span>\n                          </div>\n                          <div className=\"col-1\">:</div>\n                          <div className=\"col-5\">\n                            {amountFormat(data) +\n                              \" \" +\n                              numberWithCommas(dat.disbursedAmount)}\n                          </div>\n                        </div>\n                        <div className=\"col-6 row\">\n                          <div className=\"col-6\">\n                            <span>Comment</span>\n                          </div>\n                          <div className=\"col-1\">:</div>\n                          <div className=\"col-5\">\n                            {dat.comments == \"\" || dat.comments == null\n                              ? \"NA\"\n                              : dat.comments}\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  ))}\n              </div>\n            </CModalBody>\n            <CModalFooter>\n              <button\n                className=\"btn btn-outline-secondary mx-auto\"\n                onClick={() => setPopUp(false)}\n              >\n                Close\n              </button>\n            </CModalFooter>\n          </CModal>\n        )}\n      </div>\n    );\n  }\n\n  const cancelRowEdit = (datas) => {\n    const updatedList = selectedRows.filter(\n      (item) => item.id !== datas.stackId\n    );\n    setSelectedRows(updatedList);\n    setlist(updatedList);\n  };\n\n  const cancelRowEditOuter = () => {\n    setIsEditClicked(true);\n    setEditRowData({});\n  };\n\n  const onRowExpand = (e) => {\n    const loaderTime = setTimeout(() => {\n      setLoaderOne(true);\n    }, 100);\n    axios\n      .get(\n        baseUrl +\n          `/ProjectMS/projectExpenses/stackExpenses?stackId=${e.data.stackId}&userId=${loggedUserId}&raisedBy=${e.data.raised_by}&projectId=${projectId}&statusId=${e.data.status_id}`\n      )\n      .then((res) => {\n        data.find((u) => u.stackId === e.data.stackId).subrows = res.data;\n        setLoaderOne(false);\n        clearTimeout(loaderTime);\n      })\n      .catch((error) => console.log(error));\n  };\n\n  const isRowDisabled = (rowData) => (rowData.isEdit ? false : true);\n\n  const rowExpansionTemplate = (data) => {\n    return (\n      <div className=\"darkHeader\">\n        <DataTable\n          value={data.subrows}\n          className=\"primeReactDataTable\"\n          stripedRows\n          sortOrder={1}\n        >\n          {/* {grp3Items[3]?.is_write == true ? ( */}\n          <Column\n            style={{ textAlign: \"center\" }}\n            header={(rowData, index) =>\n              Checkboxheader(rowData, index, data.subrows)\n            }\n            body={(rowData, index) => Checkbox(rowData, index)}\n          />\n          {/* ) : (\n            \"\"\n          )} */}\n\n          <Column\n            sortable\n            field=\"Expense_Type\"\n            header=\"Expense Type\"\n            body={(rowData) => (\n              <div className=\"ellipsis\" title={rowData.Expense_Type}>\n                {rowData.Expense_Type}\n              </div>\n            )}\n          />\n          <Column\n            sortable\n            field=\"expense_date\"\n            header=\"Date\"\n            body={(rowData) =>\n              moment(rowData.expense_date).format(\"DD-MMM-YYYY\")\n            }\n          />\n          <Column sortable field=\"Payee\" header=\"Payee\" />\n          <Column\n            sortable\n            field=\"is_billable\"\n            header=\"Billable\"\n            style={{ textAlign: \"center\" }}\n            body={isBillable}\n          />\n          <Column\n            sortable\n            field=\"Incurred\"\n            header=\"Incurred\"\n            style={{ textAlign: \"right\" }}\n            body={(rowData) =>\n              amountFormat(rowData) + \" \" + numberWithCommas(rowData.Incurred)\n            }\n          />\n          <Column\n            sortable\n            field=\"disbursed_amount\"\n            header=\"Disbursed\"\n            style={{ textAlign: \"right\" }}\n            body={disbursedAmountField}\n          />\n          <Column\n            sortable\n            field=\"client_amount\"\n            style={{ textAlign: \"right\" }}\n            header=\"Client\"\n            body={clientAmountField}\n          />\n          <Column\n            sortable\n            field=\"Approval\"\n            header=\"Approval\"\n            body={approvalField}\n          />\n          <Column\n            sortable\n            field=\"Payment\"\n            header=\"Payment\"\n            body={paymentsField}\n          />\n          <Column\n            sortable\n            field=\"comments\"\n            header=\"Comments\"\n            body={commentsField}\n          />\n          <Column header=\"Details\" body={viewDetails} />\n        </DataTable>\n        {dataObject?.is_write == true ? (\n          <div style={{ display: \"flex\", border: \"1px solid #ECF0F1\" }}>\n            <button\n              style={{ height: \"25px\" }}\n              className=\"btn btn-primary ms-1 p-1\"\n              data-toggle=\"tooltip\"\n              title=\"Save row\"\n              disabled={\n                selectedRowsData.filter((u) => u.id === data.stackId).length ===\n                0\n              }\n              onClick={() => sendSelectedRowsData(data)}\n            >\n              <FaSave />\n            </button>\n            <button\n              style={{ height: \"25px\" }}\n              className=\"btn btn-primary ms-1 p-1 cancel\"\n              data-toggle=\"tooltip\"\n              title=\"Cancel row editing\"\n              disabled={\n                selectedRowsData.filter((u) => u.id === data.stackId).length ===\n                0\n              }\n              onClick={() => cancelRowEdit(data)}\n            >\n              <ImCross />\n            </button>\n          </div>\n        ) : (\n          \"\"\n        )}\n        {loaderOne ? \"\" : \"\"}\n      </div>\n    );\n  };\n\n  return (\n    <div>\n      &nbsp;\n      {documentLoader ? (\n        <Loader handleAbort={() => setDocumentLoader(false)} />\n      ) : (\n        \"\"\n      )}\n      {message ? (\n        <div className=\"statusMsg success\">\n          <span>\n            <BiCheck />\n            Expense(s) Saved successfully\n          </span>\n        </div>\n      ) : (\n        \"\"\n      )}\n      {documentFail ? (\n        <div className=\"statusMsg error\">\n          <span>\n            <IoWarningOutline /> Document is not available.\n          </span>\n        </div>\n      ) : (\n        \"\"\n      )}\n      {table == true ? (\n        <div className=\"customCard darkHeader\">\n          <DataTable\n            value={data}\n            className=\"primeReactDataTable\"\n            showGridlines\n            stripedRows\n            expandedRows={expandedRows}\n            onRowToggle={(e) => setExpandedRows(e.data)}\n            onRowExpand={onRowExpand}\n            rowExpansionTemplate={rowExpansionTemplate}\n            paginator\n            rows={25}\n            paginationPerPage={5}\n            paginationRowsPerPageOptions={[5, 15, 25, 50]}\n            paginationComponentOptions={{\n              rowsPerPageText: \"Records per page:\",\n              rangeSeparatorText: \"out of\",\n            }}\n            currentPageReportTemplate=\"View {first} - {last} of {totalRecords} \"\n            paginatorTemplate=\"RowsPerPageDropdown FirstPageLink PrevPageLink CurrentPageReport NextPageLink LastPageLink\"\n            rowsPerPageOptions={[10, 25, 50]}\n          >\n            <Column expander={allowExpansion} style={{ width: \"5rem\" }} />\n            <Column\n              sortable\n              field=\"stackName\"\n              header=\"Stack\"\n              body={(rowData) => (\n                <div title={rowData.stackName}>{rowData.stackName}</div>\n              )}\n            />\n            <Column\n              sortable\n              field=\"resource\"\n              header=\"Resource\"\n              body={(rowData) => (\n                <div className=\"ellipsis\" title={rowData.resource}>\n                  {rowData.resource}\n                </div>\n              )}\n            />\n            <Column\n              sortable\n              field=\"approval\"\n              header=\"Approval Status\"\n              body={(rowData) => (\n                <div title={rowData.approval}>{rowData.approval}</div>\n              )}\n            />\n            <Column\n              sortable\n              field=\"payment\"\n              header=\"Payment Status\"\n              body={paymentStatus}\n            />\n            <Column\n              sortable\n              field=\"amt\"\n              header=\"Incurred\"\n              style={{ textAlign: \"right\" }}\n              body={(rowData) => (\n                <div\n                  title={\n                    amountFormat(rowData) + \" \" + numberWithCommas(rowData.amt)\n                  }\n                >\n                  {amountFormat(rowData) + \" \" + numberWithCommas(rowData.amt)}\n                </div>\n              )}\n            />\n            <Column\n              sortable\n              field=\"disbursedAmt\"\n              header=\"Disbursed\"\n              style={{ textAlign: \"right\" }}\n              body={(rowData) => (\n                <div\n                  title={\n                    amountFormat(rowData) +\n                    \" \" +\n                    numberWithCommas(rowData.disbursedAmt)\n                  }\n                >\n                  {amountFormat(rowData) +\n                    \" \" +\n                    numberWithCommas(rowData.disbursedAmt)}\n                </div>\n              )}\n            />\n            <Column\n              sortable\n              field=\"clientAmt\"\n              header=\"Client\"\n              style={{ textAlign: \"right\" }}\n              body={(rowData) => (\n                <div\n                  title={\n                    amountFormat(rowData) +\n                    \" \" +\n                    numberWithCommas(rowData.clientAmt)\n                  }\n                >\n                  {amountFormat(rowData) +\n                    \" \" +\n                    numberWithCommas(rowData.clientAmt)}\n                </div>\n              )}\n            />\n            <Column\n              sortable\n              field=\"createdOn\"\n              header=\"Created On\"\n              body={(rowData) => (\n                <div title={moment(rowData.createdOn).format(\"DD-MMM-YYYY\")}>\n                  {moment(rowData.createdOn).format(\"DD-MMM-YYYY\")}\n                </div>\n              )}\n            />\n            <Column\n              field=\"\"\n              header=\"Actions\"\n              style={{ textAlign: \"center\" }}\n              body={actionField}\n            />\n          </DataTable>\n\n          {dataObject?.is_write == true ? (\n            <div style={{ display: \"flex\", border: \"1px solid #ECF0F1\" }}>\n              <button\n                className=\"btn btn-primary ms-1 p-1\"\n                data-toggle=\"tooltip\"\n                title=\"Save row\"\n                onClick={saveRowData}\n                disabled={isEditClicked}\n              >\n                <FaSave />\n                Save\n              </button>\n              <button\n                className=\"btn btn-primary ms-1 p-1\"\n                data-toggle=\"tooltip\"\n                title=\"Cancel row editing\"\n                onClick={cancelRowEditOuter}\n                disabled={isEditClicked}\n              >\n                <ImCross size={\"11px\"} />\n                Cancel\n              </button>\n            </div>\n          ) : (\n            \"\"\n          )}\n        </div>\n      ) : (\n        \"\"\n      )}\n      {popUp ? (\n        <ExpensePopup\n          setPopUp={setPopUp}\n          data={popUpData}\n          popUp={popUp}\n          totalData={data}\n        />\n      ) : (\n        \"\"\n      )}\n      {anchorEl && (\n        <ProjectExpensePopOver\n          handleClose={handleClose}\n          anchorEl={anchorEl}\n          rowData={popoverdata}\n        />\n      )}\n      {loader ? <Loader handleAbort={() => setLoader(false)} /> : \"\"}\n    </div>\n  );\n}\nexport default ExpensesMyApprovalRequests;\n","import React, { useEffect, useRef } from \"react\";\nimport { useState } from \"react\";\nimport ExpensesMyRequest from \"./ExpensesMyRequests\";\nimport ExpensesTeamRequest from \"./ExpensesTeamRequest\";\nimport ExpensesMyApprovalRequests from \"./ExpensesMyApprovalRequests\";\nimport axios from \"axios\";\nimport { environment } from \"../../environments/environment\";\nimport ScreenBreadcrumbs from \"../Common/ScreenBreadcrumbs\";\n\nfunction ProjectExpenses(props) {\n  const projectId = props.projectId;\n  const { grp3Items } = props;\n  const dataObject = grp3Items.find((item) => item.display_name === \"Expenses\");\n  const baseUrl = environment.baseUrl;\n  const [btnState, setbtnState] = useState(\"My Approval Requests\");\n  const [projectName, setProjectName] = useState([]);\n\n  // breadcrumbs --\n  const loggedUserId = localStorage.getItem(\"resId\");\n\n  const [routes, setRoutes] = useState([]);\n  let textContent = \"Delivery\";\n  let currentScreenName = [\"Projects\", \"Open\", \"Monitoring\", \"Expenses\"];\n\n  useEffect(() => {\n    getMenus();\n  }, []);\n\n  const getMenus = () => {\n    // setMenusData\n\n    axios({\n      method: \"GET\",\n      url: baseUrl + `/CommonMS/master/getMenus?loggedUserId=${loggedUserId}`,\n    }).then((resp) => {\n      let data = resp.data;\n\n      data.forEach((item) => {\n        if (item.display_name === textContent) {\n          setRoutes([item]);\n        }\n      });\n    });\n  };\n\n  const getProjectName = () => {\n    axios({\n      method: \"get\",\n      url: baseUrl + `/ProjectMS/Audit/getProjectName?projectId=${projectId}`,\n    })\n      .then(function (response) {\n        let resp = response.data;\n        setProjectName(resp);\n      })\n      .catch(function (response) {});\n  };\n\n  useEffect(() => {\n    getProjectName();\n  }, []);\n\n  const abortController = useRef(null);\n  const handleAbort = () => {\n    abortController.current && abortController.current.abort();\n  };\n  return (\n    <div>\n      <div className=\"col-md-12\">\n        <div className=\"pageTitle\">\n          <div className=\"childOne\">\n            <h2>{projectName}</h2>\n          </div>\n          <div className=\"childTwo\">\n            <h2>Expenses</h2>\n          </div>\n          <div className=\"childThree\"></div>\n        </div>\n      </div>\n      <ScreenBreadcrumbs\n        routes={routes}\n        currentScreenName={currentScreenName}\n      />\n      <div>\n        <div className=\"tabs\">\n          <button\n            className={\n              btnState === \"My Requests\"\n                ? \"buttonDisplayClick\"\n                : \"buttonDisplay\"\n            }\n            onClick={() => {\n              setbtnState(\"My Requests\");\n            }}\n          >\n            My Requests\n          </button>\n          <button\n            className={\n              btnState === \"Team Requests\"\n                ? \"buttonDisplayClick\"\n                : \"buttonDisplay\"\n            }\n            onClick={() => {\n              setbtnState(\"Team Requests\");\n            }}\n          >\n            Team Requests\n          </button>\n          <button\n            className={\n              btnState === \"My Approval Requests\"\n                ? \"buttonDisplayClick\"\n                : \"buttonDisplay\"\n            }\n            onClick={() => {\n              setbtnState(\"My Approval Requests\");\n            }}\n          >\n            My Approval Requests\n          </button>\n        </div>\n        {btnState === \"My Requests\" ? (\n          <ExpensesMyRequest projectId={projectId} handleAbort={handleAbort} />\n        ) : (\n          \"\"\n        )}\n        {btnState === \"Team Requests\" ? (\n          <ExpensesTeamRequest\n            projectId={projectId}\n            handleAbort={handleAbort}\n          />\n        ) : (\n          \"\"\n        )}\n        {btnState === \"My Approval Requests\" ? (\n          <ExpensesMyApprovalRequests\n            projectId={projectId}\n            handleAbort={handleAbort}\n            grp3Items={grp3Items}\n          />\n        ) : (\n          \"\"\n        )}\n      </div>\n    </div>\n  );\n}\nexport default ProjectExpenses;\n","import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { FaSave } from \"react-icons/fa\";\nimport { Close } from \"@mui/icons-material\";\nimport { environment } from \"../../environments/environment\";\nimport moment from \"moment\";\nimport { DataTable } from \"primereact/datatable\";\nimport { Column } from \"primereact/column\";\nimport { AiFillWarning } from \"react-icons/ai\";\nimport Loader from \"../Loader/Loader\";\n\nfunction ResourceApprovals(props) {\n  const { projectId } = props;\n  const [data, setData] = useState([]);\n  const [customerDatarole, setcustomerDatarole] = useState([]);\n  const [prjName, setPrjName] = useState([]);\n  const [display, setDisplay] = useState([]);\n  const [successfullymsg, setSuccessfullymsg] = useState(false);\n  const [state, setState] = useState(\"Approved\");\n  const [ValidationMsg, setValidationMsg] = useState(false);\n  const [rejectmsg, setrejectMsg] = useState(false);\n  const [checkboxSelect, setCheckboxSelect] = useState(false);\n  // const [loaderState, setLoaderState] = useState(false);\n  const baseUrl = environment.baseUrl;\n\n  const getData = () => {\n    axios\n      .get(\n        baseUrl + `/customersms/Customers/getResourdceApproval?cid=${projectId}`\n      )\n      .then((res) => {\n        const GetData = res.data;\n        const Headerdata = [\n          {\n            employee_number: \"Employee ID\",\n            Resource: \"Resource\",\n            RoleName: \"Role Name\",\n            from_dt: \"From Date\",\n            to_dt: \"To Date\",\n            effort_hours: \"Effort  Hours\",\n            AllocationType: \"Allocation Type\",\n            BookingStatus: \"Booking Status\",\n            comments: \"Comments\",\n          },\n        ];\n        for (let i = 0; i < GetData.length; i++) {\n          GetData[i][\"from_dt\"] =\n            GetData[i][\"from_dt\"] == null\n              ? \"\"\n              : moment(GetData[i][\"from_dt\"]).format(\"DD-MMM-yyyy\");\n          GetData[i][\"to_dt\"] =\n            GetData[i][\"to_dt\"] == null\n              ? \"\"\n              : moment(GetData[i][\"to_dt\"]).format(\"DD-MMM-yyyy\");\n        }\n        setData(Headerdata.concat(GetData));\n        setcustomerDatarole(GetData);\n      });\n  };\n\n  //----------------------\n  const handleChange = (e) => {\n    setCheckboxSelect(e.value);\n\n    let dataresource = e.value.map((d) => {\n      setData((prev) => ({ ...prev, [d.id]: \"\" }));\n      return d.id;\n    });\n\n    setDisplay(dataresource);\n  };\n  const handleConfirm = (e) => {\n    setState(e.target.value);\n    if (checkboxSelect == false) {\n      setValidationMsg(true);\n    } else {\n      setValidationMsg(false);\n      let Fdata = [];\n\n      Object.keys(data).forEach((d) => {\n        if (typeof data[d] != \"object\" && d != \"undefined\") {\n          const obj = {};\n\n          obj[\"id\"] = d;\n          obj[\"comments\"] = data[d].includes([null, \"\"]) ? null : data[d];\n          obj[\"status_id\"] = e.target.value == \"Approved\" ? 475 : 476;\n          Fdata.push(obj);\n        }\n      });\n\n      axios({\n        method: \"post\",\n        url: baseUrl + `/ProjectMS/Audit/updatecomments`,\n\n        data: Fdata,\n      }).then(function (res) {\n        var resp = res.data;\n        getData();\n        setSuccessfullymsg(true);\n        setrejectMsg(true);\n        // setLoaderState(true);\n        setTimeout(() => {\n          setSuccessfullymsg(false);\n          setrejectMsg(false);\n          // setLoaderState(false);\n        }, 3000);\n      });\n      // window.location.reload(false);\n    }\n  };\n  useEffect(() => {\n    getData();\n    setcustomerDatarole();\n    getProjectName();\n  }, []);\n  const getProjectName = () => {\n    axios({\n      method: \"get\",\n      url: baseUrl + `/ProjectMS/Audit/getProjectName?projectId=${projectId}`,\n    }).then(function (response) {\n      let resp = response.data;\n      setPrjName(resp);\n    });\n  };\n  const representresource = (rowData) => {\n    return (\n      <>\n        {rowData.rmg_bench_type_id == 1122 ? (\n          <span\n            className=\"vertical-align-middle ml-2\"\n            style={{ color: \"red\" }}\n            title=\"Overallocated\"\n          >\n            {rowData.Resource}\n          </span>\n        ) : (\n          <span\n            className=\"vertical-align-middle ml-2\"\n            style={{ color: \"black\" }}\n            title={rowData.Resource}\n          >\n            {rowData.Resource}\n          </span>\n        )}\n      </>\n    );\n  };\n  const representRolename = (rowData) => {\n    return (\n      <>\n        <span title={rowData.RoleName}>{rowData.RoleName}</span>\n      </>\n    );\n  };\n  const representFromDate = (rowData) => {\n    return <span title={rowData.from_dt}>{rowData.from_dt}</span>;\n  };\n  const representTodate = (rowData) => {\n    return <span title={rowData.to_dt}>{rowData.to_dt}</span>;\n  };\n  const representEffort = (rowData) => {\n    return <div title={rowData.effort_hours}>{rowData.effort_hours}</div>;\n  };\n  const representAllocation = (rowData) => {\n    return <span title={rowData.AllocationType}>{rowData.AllocationType}</span>;\n  };\n  const representBokking = (rowData) => {\n    return <span title={rowData.BookingStatus}>{rowData.BookingStatus}</span>;\n  };\n  const representComments = (rowData) => {\n    return (\n      <>\n        {display.includes(rowData.id) ? (\n          <input\n            type=\"text\"\n            id=\"comments\"\n            onChange={(e) => {\n              onchange(e, rowData);\n            }}\n          ></input>\n        ) : (\n          <span title={rowData.comments}>{rowData.comments}</span>\n        )}\n      </>\n    );\n  };\n  const represent = (rowData) => {\n    return (\n      <span title={rowData.employee_number}>{rowData.employee_number}</span>\n    );\n  };\n\n  const onchange = (e, rowData) => {\n    setData((prev) => ({ ...prev, [rowData.id]: e.target.value }));\n  };\n  return (\n    <div>\n      {successfullymsg && state == \"Approved\" ? (\n        <div className=\"statusMsg success\">\n          <span className=\"errMsg\">&nbsp; Successfully booked resources</span>\n        </div>\n      ) : (\n        \"\"\n      )}\n      {rejectmsg && state == \"Rejected\" ? (\n        <div className=\"statusMsg success\">\n          <span className=\"errMsg\">&nbsp; Rejected booked resources</span>\n        </div>\n      ) : (\n        \"\"\n      )}\n      {/* {loaderState ? (\n        <div className=\"loaderBlock\">\n          <Loader />\n        </div>\n      ) : (\n        \"\"\n      )} */}\n      {ValidationMsg ? (\n        <div className=\"statusMsg error\">\n          <span className=\"error\">\n            <AiFillWarning />\n            &nbsp; Please Select atleast one resource\n          </span>\n        </div>\n      ) : (\n        \"\"\n      )}\n      <div className=\"pageTitle\">\n        <div className=\"childOne\">\n          <h2>{prjName}</h2>\n        </div>\n        <div className=\"childTwo\">\n          <h2>Resource Approvals</h2>\n        </div>\n        <div className=\"childThree\"></div>\n      </div>\n\n      <br />\n\n      <div className=\"darkHeader\">\n        <DataTable\n          className=\"customerEngament body\"\n          value={customerDatarole}\n          paginator\n          selection={checkboxSelect}\n          selectAll={true}\n          rows={10}\n          showGridlines\n          pagination\n          paginationPerPage={5}\n          paginationRowsPerPageOptions={[5, 15, 25, 50]}\n          paginationComponentOptions={{\n            rowsPerPageText: \"Records per page:\",\n            rangeSeparatorText: \"out of\",\n          }}\n          responsiveLayout=\"scroll\"\n          onSelectionChange={(e) => handleChange(e)}\n        >\n          <Column\n            // selectionMode=\"multiple\"\n            alignHeader={\"center\"}\n            style={{ textAlign: \"center\" }}\n            selectionMode={customerDatarole?.length > 0 ? \"multiple\" : \"\"}\n          />\n          <Column\n            field=\"EmployeeID\"\n            header=\" Employee ID\"\n            body={represent}\n            alignHeader={\"center\"}\n          ></Column>\n          <Column\n            field=\"Resource\"\n            header=\"  Resource\"\n            body={representresource}\n            alignHeader={\"center\"}\n          ></Column>\n          <Column\n            field=\"Role Name\"\n            header=\" Role Name\"\n            body={representRolename}\n            alignHeader={\"center\"}\n          ></Column>\n          <Column\n            field=\"From Date\"\n            header=\" From Date\"\n            body={representFromDate}\n            alignHeader={\"center\"}\n          ></Column>\n          <Column\n            field=\"To Date\"\n            header=\" To Date\"\n            body={representTodate}\n            alignHeader={\"center\"}\n          ></Column>\n          <Column\n            field=\"Effort  Hours\"\n            header=\" Effort  Hours\"\n            body={representEffort}\n            alignHeader={\"center\"}\n            style={{ textAlign: \"left\" }}\n          ></Column>\n          <Column\n            field=\"Allocation Type\"\n            header=\" Allocation Type\"\n            body={representAllocation}\n            alignHeader={\"center\"}\n          ></Column>\n          <Column\n            field=\"Booking Status\"\n            header=\" Booking Status\"\n            body={representBokking}\n            alignHeader={\"center\"}\n          ></Column>\n          <Column\n            field=\"comments\"\n            id=\"comments\"\n            header=\" Comments\"\n            body={representComments}\n            alignHeader={\"center\"}\n          ></Column>\n        </DataTable>\n      </div>\n      <div class=\"col-md-12 col-sm-12 col-xs-12 my-2 btn-container center\">\n        {customerDatarole?.length === 0 ? (\n          <button\n            type=\"submit\"\n            value={\"Approved\"}\n            disabled=\"disabled\"\n            className=\"btn btn-primary\"\n          >\n            {\" \"}\n            <FaSave />\n            Approve\n          </button>\n        ) : (\n          <button\n            type=\"submit\"\n            value={\"Approved\"}\n            onClick={(e) => {\n              handleConfirm(e);\n            }}\n            className=\"btn btn-primary\"\n          >\n            {\" \"}\n            <FaSave />\n            Approve\n          </button>\n        )}\n        {customerDatarole?.length === 0 ? (\n          <button\n            type=\"submit\"\n            className=\"btn btn-secondary\"\n            value={\"Rejected\"}\n            disabled\n            style={{ cursor: \"not - allowed\" }}\n          >\n            {\" \"}\n            <Close />\n            Reject\n          </button>\n        ) : (\n          <button\n            type=\"submit\"\n            className=\"btn btn-secondary\"\n            onClick={(e) => {\n              handleConfirm(e);\n            }}\n            value={\"Rejected\"}\n          >\n            {\" \"}\n            <Close />\n            Reject\n          </button>\n        )}\n      </div>\n    </div>\n  );\n}\nexport default ResourceApprovals;\n","import React, { useEffect, useRef, useState } from \"react\";\nimport { FilterMatchMode, FilterOperator } from \"primereact/api\";\nimport { DataTable } from \"primereact/datatable\";\nimport { Column } from \"primereact/column\";\nimport \"primeicons/primeicons.css\";\nimport \"primereact/resources/themes/lara-light-indigo/theme.css\";\nimport \"primereact/resources/primereact.css\";\nimport \"primeflex/primeflex.css\";\nimport { InputText } from \"primereact/inputtext\";\n// import \"./PrimeReactTable.scss\";\nimport { Link } from \"react-router-dom\";\nimport { Button } from \"primereact/button\";\nimport jsPDF from \"jspdf\";\nimport \"../ProjectComponent/ContractDocument.scss\";\n\nrequire(\"jspdf-autotable\");\n\nfunction ContractDocumentTable(props) {\n  const {\n    data,\n    rows,\n    col,\n    headerdatagroup,\n    linkColumns,\n    linkColumnsRoutes,\n    dynamicColumns,\n    headerData,\n    setHeaderData,\n    exportData,\n    customFilters,\n    customFilterValue,\n    setCustomFilterValue,\n  } = props;\n  const [mainData, setMainData] = useState([]);\n  const [bodyData, setBodyData] = useState([]);\n  const [exportColumns, setExportColumns] = useState([]);\n  const dt = useRef(null);\n  useEffect(() => {\n    setMainData(JSON.parse(JSON.stringify(data)));\n  }, [data]);\n\n  useEffect(() => {\n    if (mainData.length > 0) {\n      setHeaderData(mainData[0]);\n      setBodyData(mainData.splice(1));\n\n      let dtt = [];\n      let headDt = mainData[0];\n\n      Object.keys(headDt).forEach((d) => {\n        d != \"StatusId\" &&\n          // ? dtt.push({ title: \"cus\", dataKey: d })\n          dtt.push({ title: headDt[d], dataKey: d });\n      });\n\n      setExportColumns(dtt);\n    }\n  }, [mainData]);\n\n  const filtersData = {\n    contains: { value: null, matchMode: FilterMatchMode.CONTAINS },\n  };\n\n  const [filters1, setFilters1] = useState({\n    global: filtersData[\"contains\"],\n  });\n\n  useEffect(() => {\n    setFilters1({\n      global: filtersData[\"contains\"],\n    });\n  }, [headerData]);\n  const [globalFilterValue1, setGlobalFilterValue1] = useState(\"\");\n\n  const clearFilter1 = () => {\n    initFilters1();\n  };\n\n  const initFilters1 = () => {\n    setGlobalFilterValue1(\"\");\n  };\n\n  const RenderCustomFilters = () => {\n    let cstFtlrs = customFilters;\n\n    switch (cstFtlrs[\"type\"]) {\n      case \"select\":\n        return (\n          <select\n            id={cstFtlrs[\"id\"]}\n            onChange={(e) => {\n              setCustomFilterValue(e.target.value);\n            }}\n          >\n            {Object.keys(cstFtlrs[\"data\"]).map((d) => {\n              return (\n                <option\n                  selected={customFilterValue == d ? true : false}\n                  value={d}\n                >\n                  {cstFtlrs[\"data\"][d]}\n                </option>\n              );\n            })}\n          </select>\n        );\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const exportCSV = (selectionOnly) => {\n    dt.current.exportCSV({ selectionOnly });\n  };\n  const saveAsExcelFile = (buffer, fileName) => {\n    import(\"file-saver\").then((module) => {\n      if (module && module.default) {\n        let EXCEL_TYPE =\n          \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8\";\n        let EXCEL_EXTENSION = \".xlsx\";\n        const data1 = new Blob([buffer], { type: EXCEL_TYPE });\n\n        module.default.saveAs(\n          data1,\n          fileName + \"_export_\" + new Date().getTime() + EXCEL_EXTENSION\n        );\n      }\n    });\n  };\n  const exportExcel = () => {\n    import(\"xlsx\").then((xlsx) => {\n      // let removingUnwantedData = JSON.parse(JSON.stringify(data)).slice(1);\n\n      // console.log(removingUnwantedData);\n\n      let wantedCols = Object.keys(data[0]);\n\n      let wantedValues = [];\n\n      let dd = JSON.parse(JSON.stringify(data)).slice(1);\n\n      for (let i = 0; i < dd.length; i++) {\n        const obj = {};\n\n        Object.keys(data[i]).forEach((d) => {\n          if (wantedCols.includes(d)) {\n            obj[data[0][d]] = data[i][d];\n          }\n        });\n        wantedValues.push(obj);\n      }\n\n      const worksheet = xlsx.utils.json_to_sheet(wantedValues.slice(1));\n      const workbook = { Sheets: { data: worksheet }, SheetNames: [\"data\"] };\n      const excelBuffer = xlsx.write(workbook, {\n        bookType: \"xlsx\",\n        type: \"array\",\n      });\n\n      saveAsExcelFile(excelBuffer, \"data\");\n    });\n  };\n  const exportPdf = () => {\n    print();\n    // import(\"jspdf\").then((jsPDF) => {\n    //   import(\"jspdf-autotable\").then(() => {\n    //     const doc = new jsPDF.default(0, 0);\n    //     console.log(\"in line 187-------\");\n    //     console.log(data);\n    //     console.log(exportColumns);\n    //     doc.autoTable(exportColumns, data);\n    //     doc.save(\"Data.pdf\");\n    //   });\n    // });\n  };\n\n  const print = () => {\n    const pdf = new jsPDF(\"p\", \"pt\", \"a4\");\n    const columns = exportColumns.map((d) => d.title);\n    let rows = [];\n\n    for (let i = 1; i < data.length; i++) {\n      let temp = exportColumns.map((d) => data[i][d[\"dataKey\"]]);\n\n      rows.push(temp);\n    }\n\n    pdf.text(235, 40, \"Tabla de Prestamo\");\n    pdf.autoTable(columns, rows, {\n      startY: 65,\n      theme: \"grid\",\n      styles: {\n        font: \"times\",\n        halign: \"center\",\n        cellPadding: 3.5,\n        lineWidth: 0.5,\n        lineColor: [0, 0, 0],\n        textColor: [0, 0, 0],\n      },\n      headStyles: {\n        textColor: [0, 0, 0],\n        fontStyle: \"normal\",\n        lineWidth: 0.5,\n        lineColor: [0, 0, 0],\n        fillColor: [166, 204, 247],\n      },\n      alternateRowStyles: {\n        fillColor: [212, 212, 212],\n        textColor: [0, 0, 0],\n        lineWidth: 0.5,\n        lineColor: [0, 0, 0],\n      },\n      rowStyles: {\n        lineWidth: 0.5,\n        lineColor: [0, 0, 0],\n      },\n      tableLineColor: [0, 0, 0],\n    });\n    console.log(pdf.output(\"datauristring\"));\n    pdf.save(\"pdf\");\n  };\n\n  // const renderHeader1 = () => {\n  //   return (\n  //     <div className=\"flex  flex-row-reverse\">\n  //       {customFilters != undefined && (\n  //         <span>\n  //           <RenderCustomFilters />\n  //         </span>\n  //       )}\n\n  //       {/* <span className=\"p-input-icon-left tableGsearch\">\n  //         <i className=\"pi pi-search\" />\n  //         <InputText\n  //           defaultValue={globalFilterValue1}\n  //           onChange={onGlobalFilterChange1}\n  //           placeholder=\"Keyword Search\"\n  //         />\n  //       </span> */}\n  //     </div>\n  //   );\n  // };\n\n  // const header1 = renderHeader1();\n\n  return (\n    <div>\n      {Object.keys(headerData).length > 0 && (\n        <DataTable\n          //   paginatorTemplate=\"RowsPerPageDropdown FirstPageLink PrevPageLink CurrentPageReport NextPageLink LastPageLink\"\n          //   currentPageReportTemplate=\"{first} to {last} of {totalRecords}\"\n          //   rowsPerPageOptions={[10, 25, 50]}\n          value={bodyData}\n          //   paginator\n          showGridlines\n          rows={rows}\n          dataKey=\"id\"\n          //   filters={filters1}\n          responsiveLayout=\"scroll\"\n          // header={header}\n          emptyMessage=\"No Older Versions\"\n          ref={(el) => {\n            dt.current = el;\n          }}\n          className=\"customerEngament primeReactDataTable\"\n        >\n          {/* <Column header={headerdatagroup} colSpan={col} /> */}\n\n          {dynamicColumns}\n        </DataTable>\n      )}\n    </div>\n  );\n}\n\nexport default ContractDocumentTable;\n","import React, { useRef } from \"react\";\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { environment } from \"../../environments/environment\";\nimport { VscSave } from \"react-icons/vsc\";\nimport { ImCross } from \"react-icons/im\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport moment from \"moment\";\nimport { Column } from \"primereact/column\";\nimport { ReactSearchAutocomplete } from \"react-search-autocomplete\";\nimport CellRendererPrimeReactDataTable from \"../PrimeReactTableComponent/CellRendererPrimeReactDataTable\";\nimport GlobalValidation from \"../ValidationComponent/GlobalValidation\";\nimport { IoWarningOutline } from \"react-icons/io5\";\nimport { BiCheck, BiDownload } from \"react-icons/bi\";\nimport { AiFillWarning } from \"react-icons/ai\";\nimport { makeStyles } from \"@material-ui/core\";\nimport RiskAutoComplete from \"./RiskAutocomplete\";\nimport { CModal, CModalBody, CModalHeader, CModalTitle } from \"@coreui/react\";\nimport { Link } from \"react-router-dom\";\nimport \"../ProjectComponent/ContractDocument.scss\";\nimport GlobalCancel from \"../ValidationComponent/GlobalCancel\";\nimport ContractDocumentTable from \"./ContractDocumentTable\";\nimport { FaSave } from \"react-icons/fa\";\nimport ScreenBreadcrumbs from \"../Common/ScreenBreadcrumbs\";\n\nfunction ContractDocument(props) {\n  const [documnetFolderId, setDocumentFolderId] = useState([]);\n  const [key, setKey] = useState(0);\n  const { projectId, grp3Items } = props;\n  const dataObject = grp3Items.find(\n    (item) => item.display_name === \"Contract Documents\"\n  );\n  console.log(grp3Items[1].is_write);\n  const baseUrl = environment.baseUrl;\n  const [data, setData] = useState([]);\n  const [StartDt, setStartDt] = useState();\n  const [EndDt, setEndDt] = useState();\n  const [resource, setResource] = useState([]);\n  const [documents, setDocuments] = useState([]);\n  const [headerData, setHeaderData] = useState([]);\n  const [logged, setlogged] = useState([]);\n  const ref = useRef([]);\n  const [validationMessage, setValidationMessage] = useState(false);\n  const [projectData, setProjectData] = useState([]);\n  const [addMessage, setAddMessage] = useState(false);\n  const [uniqueMessage, setUniqueMessage] = useState(false);\n  const [vendorNamesArr, setVendorNamesArr] = useState();\n  const [fileNamesArr, setFileNamesArr] = useState();\n  const [fileName, setFileName] = useState([]);\n  let rows = 10;\n  const loggedUserId = localStorage.getItem(\"resId\");\n  const loggedUserName = localStorage.getItem(\"resName\");\n  const [selectedFile, setSelectedFile] = useState([]);\n  const [docPopId, setDocPopId] = useState(\"\");\n\n  const [orgFileValid, setOrgFileValid] = useState([]);\n  const [uniqueMessage1, setUniqueMessage1] = useState(false);\n  const [deletePopup, setDeletePopup] = useState(false);\n  const [docId, setDocId] = useState([]);\n  const [tableData, setTableData] = useState([]);\n  const [docFolderId, setDocFolderId] = useState([]);\n  const [isTableVisible, setIsTableVisible] = useState(false);\n  const [fileVisible, setFileVisible] = useState(false);\n\n  //// -------breadcrumbs-----\n\n  const [routes, setRoutes] = useState([]);\n  let textContent = \"Delivery\";\n  let currentScreenName = [\n    \"Projects\",\n    \"Open\",\n    \"Financials\",\n    \"Contract Documents\",\n  ];\n\n  useEffect(() => {\n    getMenus();\n  }, []);\n\n  const getMenus = () => {\n    // setMenusData\n\n    axios({\n      method: \"GET\",\n      url: baseUrl + `/CommonMS/master/getMenus?loggedUserId=${loggedUserId}`,\n    }).then((resp) => {\n      let data = resp.data;\n\n      data.forEach((item) => {\n        if (item.display_name === textContent) {\n          setRoutes([item]);\n        }\n      });\n    });\n  };\n\n  const getloggeduser = () => {\n    axios\n      .get(baseUrl + `/ProjectMS/Audit/getloggeduser?loggedId=${loggedUserId}`)\n      .then((Response) => {\n        let data = Response.data;\n        setlogged(data);\n      })\n      .catch((error) => console.log(error));\n  };\n\n  useEffect(() => {\n    getDocumentFolderId();\n  }, []);\n\n  const getDocumentFolderId = () => {\n    axios\n      .get(\n        baseUrl +\n          `/ProjectMS/ContractDocuments/getFolderId?projectId=${projectId}`\n      )\n      .then((Response) => {\n        let data = Response.data;\n        setDocumentFolderId(data);\n      })\n      .catch((error) => console.log(error));\n  };\n\n  const initialValue = {\n    projectId: projectId,\n    frmDt: \"\",\n    toDt: \"\",\n    amount: \"\",\n    documentType: \"\",\n    legalEntityType: \"\",\n    poNumber: \"\",\n    docSignedBy: \"\",\n    ObjectTypeCode: \"ProjectSow\",\n    isActive: \"1\",\n    CreatedBy: loggedUserName,\n    CreatedById: loggedUserId,\n    lastUpdatedBy: \"\",\n  };\n\n  const [formData, setFormData] = useState(initialValue);\n\n  const getData = () => {\n    axios\n      .get(\n        baseUrl +\n          `/ProjectMS/ContractDocuments/getContractDocuments?projectId=${projectId}`\n      )\n      .then((res) => {\n        const GetData = res.data;\n        let dataHeader = [\n          {\n            lkup_name: \"Document Type\",\n            sow_name: \"Document Name\",\n            date_created: \"Created Date\",\n            created_by: \"Uploaded By\",\n            frm_dt: \"Start Date\",\n            to_dt: \"End Date\",\n            amount: \"Amount\",\n            po_number: \"PO Number\",\n          },\n        ];\n        setData(dataHeader.concat(GetData));\n        setDocId(GetData);\n      })\n      .catch((error) => {\n        console.log(\"Error :\" + error);\n      });\n  };\n\n  let container = document.createElement(\"div\");\n  container.innerHTML = projectData[0]?.currency;\n\n  const resourceFnc = async () => {\n    await axios({\n      method: \"get\",\n      url: baseUrl + `/ProjectMS/risks/getAssignedData`,\n    })\n      .then((res) => {\n        let manger = res.data;\n\n        setResource(manger);\n      })\n      .catch((error) => {\n        console.log(\"error :\" + error);\n      });\n  };\n\n  const handleChange = (e) => {\n    const { id, name, value } = e.target;\n\n    setFormData((prev) => {\n      return { ...prev, [id]: value };\n    });\n  };\n\n  const issueDeleteHandler = () => {\n    setDeletePopup(true);\n  };\n\n  const getProjectOverviewData = () => {\n    axios({\n      method: \"get\",\n      url:\n        baseUrl +\n        `/ProjectMS/Audit/projectOverviewDetails?projectId=${projectId}`,\n    })\n      .then(function (response) {\n        let resp = response.data;\n        setProjectData(resp);\n      })\n      .catch(function (response) {});\n  };\n\n  const getPONumber = () => {\n    axios({\n      method: \"get\",\n      url:\n        baseUrl +\n        `/ProjectMS/ContractDocuments/getPONumber?projectId=${projectId}`,\n    })\n      .then(function (response) {\n        let resp = response.data;\n        setVendorNamesArr(resp);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  };\n\n  const getFileNames = () => {\n    axios({\n      method: \"get\",\n      url:\n        baseUrl +\n        `/ProjectMS/ContractDocuments/getFileNames?projectId=${projectId}`,\n    })\n      .then(function (response) {\n        let resp = response.data;\n        setFileNamesArr(resp);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  };\n  useEffect(() => {\n    getFileNames();\n  }, [projectId]);\n\n  const CreatedDate = (data) => {\n    setDocPopId(data?.document_id);\n\n    setDocFolderId(data.doc_folder_id);\n    return (\n      <div\n        className=\"ellipsis\"\n        align=\"left\"\n        data-toggle=\"tooltip\"\n        title={moment(data.date_created).format(\"DD-MMM-yyyy-hh:mm:ss A\")}\n      >\n        {data.date_created == null\n          ? \"\"\n          : data.date_created == \"\"\n          ? \"\"\n          : moment(data.date_created).format(\"DD-MMM-yyyy-hh:mm:ss A\")}\n      </div>\n    );\n  };\n\n  const DocumentType = (data) => {\n    return (\n      <div\n        className=\"ellipsis\"\n        align=\"left\"\n        data-toggle=\"tooltip\"\n        title={data.lkup_name}\n      >\n        {data.lkup_name}\n      </div>\n    );\n  };\n  const UploadedBy = (data) => {\n    return (\n      <div\n        className=\"ellipsis\"\n        align=\"left\"\n        data-toggle=\"tooltip\"\n        title={data.created_by}\n      >\n        {data.created_by}\n      </div>\n    );\n  };\n  const FromDate = (data) => {\n    return (\n      <div\n        className=\"ellipsis\"\n        align=\"left\"\n        data-toggle=\"tooltip\"\n        title={moment(data.frm_dt).format(\"DD-MMM-yyyy\")}\n      >\n        {data.frm_dt == null\n          ? \"\"\n          : data.frm_dt == \"\"\n          ? \"\"\n          : moment(data.frm_dt).format(\"DD-MMM-yyyy\")}\n      </div>\n    );\n  };\n  const ToDate = (data) => {\n    return (\n      <div\n        className=\"ellipsis\"\n        align=\"left\"\n        data-toggle=\"tooltip\"\n        title={moment(data.to_dt).format(\"DD-MMM-yyyy\")}\n      >\n        {data.to_dt == null\n          ? \"\"\n          : data.to_dt == \"\"\n          ? \"\"\n          : moment(data.to_dt).format(\"DD-MMM-yyyy\")}\n      </div>\n    );\n  };\n  const Amount = (data) => {\n    return (\n      <div\n        className=\"ellipsis\"\n        align=\"left\"\n        data-toggle=\"tooltip\"\n        title={\n          data.amount === null\n            ? \"\"\n            : container.innerHTML + \" \" + data.amount.toLocaleString(\"en-IN\")\n        }\n      >\n        <span>\n          {data.amount === null\n            ? \"\"\n            : container.innerHTML + \" \" + data.amount.toLocaleString(\"en-IN\")}\n        </span>\n      </div>\n    );\n  };\n  const PONumber = (data) => {\n    return (\n      <div\n        className=\"ellipsis\"\n        align=\"left\"\n        data-toggle=\"tooltip\"\n        title={data.po_number}\n      >\n        {data.po_number}\n      </div>\n    );\n  };\n  const DocumentName = (data, docId) => {\n    return (\n      <div\n        className=\"ellipsis\"\n        align=\"left\"\n        data-toggle=\"tooltip\"\n        title={data.sow_name}\n        style={{ cursor: \"pointer\", color: \"#2E88C5\" }}\n        onClick={() => {\n          issueDeleteHandler();\n          setDocId(data);\n          setIsTableVisible(false);\n          setFileVisible(false);\n        }}\n      >\n        {data.sow_name}\n      </div>\n    );\n  };\n\n  const dynamicColumns = Object.keys(headerData)?.map((col, i) => {\n    return (\n      <Column\n        sortable\n        key={col}\n        body={\n          col == \"date_created\"\n            ? CreatedDate\n            : col == \"lkup_name\"\n            ? DocumentType\n            : col == \"sow_name\"\n            ? DocumentName\n            : col == \"created_by\"\n            ? UploadedBy\n            : col == \"frm_dt\"\n            ? FromDate\n            : col == \"to_dt\"\n            ? ToDate\n            : col == \"amount\"\n            ? Amount\n            : col == \"po_number\"\n            ? PONumber\n            : \"\"\n        }\n        field={col}\n        header={headerData[col]}\n      />\n    );\n  });\n\n  const onFileChangeHandler = (e) => {\n    setSelectedFile(e.target.files[0]);\n    setFileName(e.target.files[0]?.name);\n\n    setFormData((prev) => ({\n      ...prev,\n      [e.target.id]: e.target.files[0]?.name,\n    }));\n  };\n\n  const formData1 = new FormData();\n  formData1.append(\"file\", selectedFile);\n\n  const handleClick = (e) => {\n    if (\n      selectedFile === 0 ||\n      selectedFile.length === 0 ||\n      selectedFile == undefined\n    ) {\n      setValidationMessage(true);\n      setTimeout(() => {\n        setValidationMessage(false);\n      }, 5000);\n      setUniqueMessage(false);\n      setUniqueMessage1(false);\n    }\n\n    let filteredData = ref.current.filter((d) => d != null);\n\n    ref.current = filteredData;\n\n    let valid = GlobalValidation(ref);\n\n    if (valid) {\n      {\n        setValidationMessage(true);\n        setTimeout(() => {\n          setValidationMessage(false);\n        }, 5000);\n      }\n      return;\n    }\n\n    let nonNullVendorNamesArr = vendorNamesArr.filter((d) => d !== null);\n    let someDataa = nonNullVendorNamesArr.some(\n      (d) => d.po_number == formData.poNumber\n    );\n\n    let nonNullVendorNamesArr1 = fileNamesArr.filter((d) => d !== null);\n    let someDataa1 = nonNullVendorNamesArr1.some((d) => d.sow_name == fileName);\n\n    if (someDataa) {\n      let ele = document.getElementsByClassName(\"unique\");\n      for (let index = 0; index < ele.length; index++) {\n        ele[index].classList.add(\"error-block\");\n      }\n\n      setUniqueMessage(true);\n      setValidationMessage(false);\n      setTimeout(() => {\n        setUniqueMessage(false);\n      }, 3000);\n      return;\n    }\n\n    if (someDataa1) {\n      let ele = document.getElementsByClassName(\"unique1\");\n      for (let index = 0; index < ele.length; index++) {\n        ele[index].classList.add(\"error-block\");\n      }\n\n      setUniqueMessage1(true);\n      setValidationMessage(false);\n      setTimeout(() => {\n        setUniqueMessage1(false);\n      }, 3000);\n      return;\n    }\n\n    axios\n      .postForm(\n        baseUrl +\n          `/ProjectMS/ContractDocuments/SaveAndUpload?docFolderId=${documnetFolderId[0]?.id}&loggedUserId=${loggedUserId}&commitMessage=projectDocuments`,\n        {\n          file: selectedFile,\n          ProjectSow: JSON.stringify({\n            projectId: projectId,\n            sowName: fileName,\n            frmDt: formData.frmDt,\n            toDt: formData.toDt,\n            amount:\n              formData.amount == null || formData.amount == \"\"\n                ? 0\n                : formData.amount,\n            documentType: formData.documentType,\n            poNumber: formData.poNumber,\n            legalEntityType: formData.legalEntityType,\n            docSignedBy: formData.docSignedBy,\n          }),\n        },\n\n        {\n          headers: {\n            \"Content-Type\": \"multipart/form-data\",\n          },\n        }\n      )\n      .then((response) => {\n        setAddMessage(true);\n        setValidationMessage(false);\n        getFileNames();\n        setSelectedFile(fileName);\n        setTimeout(() => {\n          setAddMessage(false);\n          setUniqueMessage(false);\n        }, 3000);\n        getData();\n        GlobalCancel(ref);\n        setStartDt(\"\");\n        setEndDt(\"\");\n      });\n    handleCancel();\n    setKey((prevKey) => prevKey + 1);\n  };\n\n  function ReviewReport(props) {\n    const {\n      docId,\n      deletePopup,\n      setDeletePopup,\n      tableData,\n      isTableVisible,\n      setIsTableVisible,\n      fileVisible,\n      setFileVisible,\n      documnetFolderId,\n    } = props;\n    const [headerData, setHeaderData] = useState([]);\n    const [data, setData] = useState([]);\n    const [docFileName, setDocFileName] = useState([]);\n    const [docdata, setdocData] = useState([]);\n    const [selectedFile1, setSelectedFile1] = useState([]);\n    const [filName, setFilName] = useState([]);\n    const [updateMessage, setUpdateMessage] = useState(false);\n    const [key, setKey] = useState(0);\n\n    const [revision, setRevision] = useState([]);\n    const handleClick1 = () => {\n      axios\n        .get(\n          baseUrl + `/ProjectMS/ContractDocuments/getPopupData?docid=${docdata}`\n        )\n        .then((response) => {\n          let headerData = [\n            {\n              app_revision: \"Older Versions\",\n              updatedBy: \"Updated By\",\n            },\n          ];\n          setTableData(headerData.concat(response.data));\n          setIsTableVisible(!isTableVisible);\n        })\n        .catch((error) => {\n          console.error(\"Error fetching table data:\", error);\n        });\n    };\n\n    const downloadEmployeeData = (docId) => {\n      const docUrl =\n        baseUrl +\n        `/VendorMS/vendor/downloadFile?documentId=${data}&svnRevision=${revision}`;\n\n      axios({\n        url: docUrl,\n        method: \"GET\",\n        responseType: \"blob\",\n      }).then((response) => {\n        const url = window.URL.createObjectURL(new Blob([response.data]));\n        const link = document.createElement(\"a\");\n        link.href = url;\n        link.setAttribute(\"download\", docFileName); //or any other extension\n        document.body.appendChild(link);\n        link.click();\n      });\n    };\n\n    useEffect(() => {\n      setData(docId.document_id);\n      setdocData(docId.document_id);\n      setRevision(docId.svn_revision);\n      setDocFileName(docId.file_name);\n    }, [docId]);\n\n    const useStyles = makeStyles({\n      dialog: {\n        position: \"absolute\",\n        top: \"250px\",\n        minHeight: \"18%\",\n      },\n      textField: {\n        border: \"1px solid rgb(159 13 13)\",\n      },\n    });\n\n    const classes = useStyles();\n\n    const AppRevisionAlign = (tableData) => {\n      const downloadEmployeeData1 = (tableData) => {\n        const docUrl =\n          baseUrl +\n          `/VendorMS/vendor/downloadFile?documentId=${tableData.document_id}&svnRevision=${tableData.svn_revision}`;\n\n        axios({\n          url: docUrl,\n          method: \"GET\",\n          responseType: \"blob\",\n        }).then((response) => {\n          const url = window.URL.createObjectURL(new Blob([response.data]));\n          const link = document.createElement(\"a\");\n          link.href = url;\n          link.setAttribute(\"download\", tableData.file_name); //or any other extension\n          document.body.appendChild(link);\n          link.click();\n        });\n      };\n      return (\n        <div align=\"center\">\n          <a\n            className=\"linkSty\"\n            onClick={() => downloadEmployeeData1(tableData)}\n          >\n            <ul style={{ textDecoration: \"underLine\", marginBottom: \"0px\" }}>\n              {tableData.app_revision.toFixed(1)}\n            </ul>\n          </a>\n        </div>\n      );\n    };\n\n    const updatedByAllign = (tableData) => {\n      return <div align=\"center\">{tableData.updatedBy}</div>;\n    };\n\n    const dynamicColumns = Object.keys(headerData)?.map((col, i) => {\n      return (\n        <Column\n          key={col}\n          body={\n            col == \"app_revision\"\n              ? AppRevisionAlign\n              : col == \"updatedBy\"\n              ? updatedByAllign\n              : \"\"\n          }\n          field={col}\n          header={headerData[col]}\n        />\n      );\n    });\n\n    useEffect(() => {\n      if (data && data.length > 0) {\n        setHeaderData(JSON.parse(JSON.stringify(data[0])));\n      }\n    }, [data]);\n\n    const [docValidation, setDocValidation] = useState(false);\n    const [fileValidation, setFileValidation] = useState(false);\n\n    const onFileChangeHandler1 = (e) => {\n      setSelectedFile1(e.target.files[0]);\n      setFilName(e.target.files[0].name);\n    };\n\n    const handleClick2 = () => {\n      if (selectedFile1.length === 0) {\n        setDocValidation(false);\n        setFileValidation(true);\n        setTimeout(() => {\n          setFileValidation(false);\n        }, 3000);\n      } else if (selectedFile1 && docFileName !== filName) {\n        setDocValidation(true);\n        setTimeout(() => {\n          setDocValidation(false);\n        }, 3000);\n        setFileValidation(false);\n      } else {\n        axios\n          .postForm(\n            baseUrl +\n              `/ProjectMS/ContractDocuments/upload?fileRevision=1.0&folderId=${documnetFolderId[0]?.id}&loggedUserId=${loggedUserId}`,\n\n            { files: selectedFile1 },\n            {\n              headers: {\n                \"Content-Type\": \"multipart/form-data\",\n              },\n            }\n          )\n          .then((response) => {\n            setUpdateMessage(true);\n            setDocValidation(false);\n            setTimeout(() => {\n              setUpdateMessage(false);\n            }, 3000);\n            setKey((prevKey) => prevKey + 1);\n            setSelectedFile1([]);\n          });\n      }\n    };\n\n    return (\n      <div className=\"reviewLogDeletePopUp\">\n        <CModal\n          backdrop=\"static\"\n          visible={deletePopup}\n          alignment=\"center\"\n          size=\"md\"\n          className=\"reviewLogDeletePopUp\"\n          onClose={() => setDeletePopup(false)}\n          classes={{\n            paper: classes.dialog,\n          }}\n        >\n          <CModalHeader className=\"\">\n            <CModalTitle>\n              <span className=\"\">Contract Document Details</span>\n            </CModalTitle>\n          </CModalHeader>\n          <CModalBody\n            style={{\n              border: \"1px solid #ccc\",\n              padding: \"5px 10px 20px\",\n            }}\n          >\n            {fileValidation ? (\n              <div className=\"statusMsg error\">\n                <AiFillWarning />\n                {\"Please Select a file to update\"}\n              </div>\n            ) : (\n              \"\"\n            )}\n            {docValidation ? (\n              <div className=\"statusMsg error\">\n                <AiFillWarning />\n                {\"Please Select the same file to update\"}\n              </div>\n            ) : (\n              \"\"\n            )}\n            {updateMessage ? (\n              <div className=\"statusMsg success\">\n                <BiCheck />\n                {filName} {\"updated successfully.\"}\n              </div>\n            ) : (\n              \"\"\n            )}\n            <div style={{ border: \"1px solid #cdcdcd\" }}>\n              <h3\n                style={{\n                  fontSize: \"initial\",\n                  border: \"1px solid #cdcdcd\",\n                  color: \"#297AB0\",\n                  padding: \"5px\",\n                }}\n              >\n                Document\n              </h3>\n              <div>\n                <a\n                  className=\"linkSty\"\n                  onClick={() => {\n                    downloadEmployeeData(docId);\n                  }}\n                >\n                  <ul\n                    style={{\n                      textDecoration: \"underLine\",\n                      marginBottom: \"0px\",\n                      padding: \"5px\",\n                    }}\n                    key={docId.document_id}\n                  >\n                    <BiDownload />\n                    &nbsp;{docId.sow_name}\n                  </ul>\n                </a>\n                <div style={{ padding: \"5px\", marginTop: \"-14px\" }}>\n                  <a className=\"linkSty\">\n                    <ul\n                      style={{\n                        textDecoration: \"underLine\",\n                        marginBottom: \"0px\",\n                        display: \"inline\",\n                      }}\n                    >\n                      {grp3Items[1].is_write == true ? (\n                        <span\n                          onClick={() => {\n                            setIsTableVisible(false);\n\n                            setFileVisible(true);\n                          }}\n                        >\n                          Update{\" \"}\n                        </span>\n                      ) : (\n                        \"\"\n                      )}\n                    </ul>\n                  </a>\n                  {dataObject?.is_write == true ? (\n                    <span style={{ color: \"black\" }}> &nbsp;|&nbsp;</span>\n                  ) : (\n                    \"\"\n                  )}\n                  <button\n                    onClick={() => {\n                      handleClick1();\n                      setIsTableVisible(false);\n                      setFileVisible(false);\n                    }}\n                    style={{\n                      display: \"inline\",\n                      fontSize: \"11px\",\n                      padding: \"0px 7px\",\n                      // boarder: \"1px solid black\",\n                      borderRadius: \"3px\",\n                      textDecoration: \"none !important\",\n                      border: \"1px solid black\",\n                    }}\n                  >\n                    Version History\n                  </button>\n                </div>\n                {isTableVisible ? (\n                  <div className=\"document\">\n                    <ContractDocumentTable\n                      rows={10}\n                      data={tableData}\n                      dynamicColumns={dynamicColumns}\n                      headerData={headerData}\n                      setHeaderData={setHeaderData}\n                    />\n                  </div>\n                ) : (\n                  \"\"\n                )}\n                {fileVisible && (\n                  <div\n                    className=\"row mb-1\"\n                    style={{\n                      border: \"1px solid #cdcdcd\",\n                      padding: \"8px\",\n                      marginLeft: \"3px\",\n                      marginRight: \"3px\",\n                      marginTop: \"-1px\",\n                    }}\n                  >\n                    <div className=\"col-3\">\n                      <input\n                        key={key}\n                        type=\"file\"\n                        name=\"file\"\n                        className=\"contractDocument\"\n                        id=\"file\"\n                        onChange={onFileChangeHandler1}\n                      />\n                    </div>\n                    <div className=\"col-2\">\n                      <input\n                        type=\"text\"\n                        style={{\n                          marginTop: \"4px\",\n                          marginLeft: \"18px\",\n                          width: \"69px !important;\",\n                        }}\n                        placeholder=\"version\"\n                      />\n                    </div>\n                    <div className=\"col-3\">\n                      <button\n                        type=\"submit\"\n                        className=\"btn btn-primary\"\n                        title=\"Update\"\n                        style={{\n                          marginLeft: \"16px\",\n                          height: \"23px\",\n                          marginTop: \"4px\",\n                        }}\n                        onClick={handleClick2}\n                      >\n                        Update\n                      </button>\n                    </div>\n                  </div>\n                )}\n              </div>\n            </div>\n          </CModalBody>\n        </CModal>\n      </div>\n    );\n  }\n\n  const handleCancel = () => {\n    setKey((prevKey) => prevKey + 1);\n    setFormData(\"\");\n    setSelectedFile(0);\n    setStartDt(\"\");\n    setEndDt(\"\");\n    let ele = document.getElementsByClassName(\"cancel\");\n\n    for (let index = 0; index < ele.length; index++) {\n      ele[index].value = \"\";\n\n      if (ele[index].classList.contains(\"reactautocomplete\")) {\n        ele[\n          index\n        ].children[0].children[0].children[0].children[0].children[0].children[1]?.click();\n      }\n    }\n    GlobalCancel(ref);\n  };\n\n  const handleClear = () => {\n    setFormData((prev) => ({ ...prev, docSignedBy: null }));\n  };\n\n  useEffect(() => {\n    data[0] && setHeaderData(JSON.parse(JSON.stringify(data[0])));\n  }, [data]);\n\n  const onChangeHandler = (e) => {\n    const { id, value } = e.target;\n    setFormData((prev) => ({ ...prev, docSignedBy: value }));\n  };\n\n  useEffect(() => {\n    getData();\n    resourceFnc();\n    getloggeduser();\n    getProjectOverviewData();\n    getPONumber();\n    // getDocumentFolderId();\n  }, []);\n\n  return (\n    <div>\n      {uniqueMessage1 ? (\n        <div className=\"statusMsg error\">\n          {\" \"}\n          <AiFillWarning /> {fileName} already exists in Project/{projectId}\n          /SOW/\n        </div>\n      ) : (\n        \"\"\n      )}\n      {validationMessage ? (\n        <div className=\"statusMsg error\">\n          {\" \"}\n          <span>\n            {\" \"}\n            <IoWarningOutline /> Please select the valid values for highlighted\n            fields{\" \"}\n          </span>\n        </div>\n      ) : (\n        \"\"\n      )}\n      {addMessage ? (\n        <div className=\"statusMsg success\">\n          <BiCheck />\n          {\"Project Contract Document saved successfully.\"}\n        </div>\n      ) : (\n        \"\"\n      )}\n      {uniqueMessage ? (\n        <div className=\"statusMsg error\">\n          {\" \"}\n          <AiFillWarning /> Please Give Unique PO Number\n        </div>\n      ) : (\n        \"\"\n      )}\n\n      <div className=\"col-md-12 \">\n        <div className=\"pageTitle\">\n          {projectData.map((list) => (\n            <div className=\"childOne\">\n              <h2>{list.projectName}</h2>\n            </div>\n          ))}\n          <div className=\"childTwo\">\n            <h2>Contract Documents</h2>\n          </div>\n          <div className=\"childThree\"></div>\n        </div>\n      </div>\n\n      <ScreenBreadcrumbs\n        routes={routes}\n        currentScreenName={currentScreenName}\n      />\n      {grp3Items[1].is_write == true ? (\n        <div className=\"group mb-3 customCard\">\n          <h2>Add Contract Document</h2>\n          <div className=\"group-content row\">\n            <div className=\"form-group col-md-8 mb-2\" id=\"UploadDocument\">\n              <label htmlFor=\"updateDocument\">\n                Upload Document&nbsp;\n                <span className=\"required error-text\">*</span>\n              </label>\n              <input\n                key={key}\n                type=\"file\"\n                name=\"file\"\n                className=\"fileUpload unique1 form-control\"\n                id=\"file\"\n                onChange={onFileChangeHandler}\n              />\n            </div>\n            <div className=\"form-group col-md-4 mb-2\">\n              <label htmlFor=\"documentType\">\n                Document Type&nbsp;\n                <span className=\"required error-text\">*</span>\n              </label>\n              <select\n                className=\"text cancel\"\n                id=\"documentType\"\n                name=\"documentType\"\n                onChange={(e) => {\n                  const { value, id } = e.target;\n                  value == \"386\" ||\n                  value == \"387\" ||\n                  value == \"384\" ||\n                  value == \"385\"\n                    ? GlobalCancel(ref)\n                    : \"\";\n                  setFormData({ ...formData, [id]: value });\n                }}\n                ref={(ele) => {\n                  ref.current[formData.documentType == 385 ? \"\" : 0] = ele;\n                }}\n              >\n                <option value=\"\">&lt;&lt;Please Select&gt;&gt;</option>\n                <option value=\"386\">Email</option>\n                <option value=\"387\">Others</option>\n                <option value=\"385\">PO</option>\n                <option value=\"384\">SOW</option>\n              </select>\n            </div>\n            {formData.documentType == 385 ? (\n              <div className=\"form-group col-md-2 mb-2\">\n                <label htmlFor=\"startDate\">\n                  PO Number&nbsp;<span className=\"required error-text\">*</span>\n                </label>\n                <div\n                  className=\"textfield cancel\"\n                  ref={(ele) => {\n                    ref.current[formData.documentType == 385 ? 0 : \"\"] = ele;\n                  }}\n                >\n                  <input\n                    type=\"text\"\n                    name=\"poNumber\"\n                    id=\"poNumber\"\n                    className=\"unique cancel\"\n                    // maxLength={30}\n                    // onKeyPress={(e) => {\n                    //   const charCode = e.which || e.keyCode;\n                    //   const char = String.fromCharCode(charCode);\n                    //   const isNumeric = /^\\d$/.test(char);\n                    //   if (!isNumeric) {\n                    //     e.preventDefault();\n                    //   }\n                    // }}\n                    onChange={handleChange}\n                  />\n                </div>\n              </div>\n            ) : (\n              \"\"\n            )}\n\n            <div className=\"form-group col-md-2 mb-2\">\n              <label htmlFor=\"startDate\">\n                Start Date{\" \"}\n                {formData.documentType == \"384\" ||\n                formData.documentType == \"\" ||\n                formData.documentType == undefined ||\n                formData.documentType == \"385\" ? (\n                  <span className=\"required error-text\">&nbsp;*</span>\n                ) : (\n                  \"\"\n                )}\n              </label>\n              <div\n                className=\"datepicker\"\n                ref={(ele) => {\n                  ref.current[\n                    formData.documentType == 385\n                      ? 1\n                      : formData.documentType == 386\n                      ? \"\"\n                      : formData.documentType == 387\n                      ? \"\"\n                      : 1\n                  ] = ele;\n                }}\n              >\n                <DatePicker\n                  name=\"frmDt\"\n                  selected={StartDt}\n                  id=\"frmDt\"\n                  className=\"err cancel\"\n                  dateFormat=\"dd-MMM-yyyy\"\n                  placeholderText=\"Start Date\"\n                  showMonthDropdown\n                  showYearDropdown\n                  dropdownMode=\"select\"\n                  onChange={(e) => {\n                    setFormData((prev) => ({\n                      ...prev,\n                      [\"frmDt\"]: moment(e).format(\"yyyy-MM-DD\"),\n                    }));\n                    setStartDt(e);\n                  }}\n                  onKeyDown={(e) => {}}\n                  autoComplete=\"false\"\n                />\n              </div>\n            </div>\n            <div className=\"form-group col-md-2 mb-2\">\n              <label htmlFor=\"endDate\">\n                End Date{\" \"}\n                {formData.documentType == \"384\" ||\n                formData.documentType == \"\" ||\n                formData.documentType == undefined ||\n                formData.documentType == \"385\" ? (\n                  <span className=\"required error-text\">&nbsp;*</span>\n                ) : (\n                  \"\"\n                )}\n              </label>\n              <div\n                className=\"datepicker cancel\"\n                ref={(ele) => {\n                  ref.current[\n                    formData.documentType == 385\n                      ? 2\n                      : formData.documentType == 386\n                      ? \"\"\n                      : formData.documentType == 387\n                      ? \"\"\n                      : 2\n                  ] = ele;\n                }}\n              >\n                <DatePicker\n                  name=\"toDt\"\n                  selected={EndDt}\n                  id=\"toDt\"\n                  minDate={new Date(formData.frmDt)}\n                  className=\"err cancel\"\n                  dateFormat=\"dd-MMM-yyyy\"\n                  placeholderText=\"End Date\"\n                  showMonthDropdown\n                  showYearDropdown\n                  dropdownMode=\"select\"\n                  onChange={(e) => {\n                    setFormData((prev) => ({\n                      ...prev,\n                      [\"toDt\"]: moment(e).format(\"yyyy-MM-DD\"),\n                    }));\n                    setEndDt(e);\n                  }}\n                  onKeyDown={(e) => {}}\n                  autoComplete=\"false\"\n                />\n              </div>\n            </div>\n            <div className=\"form-group col-md-2 mb-2\">\n              <label htmlFor=\"amount\">\n                Amount{\" \"}\n                {formData.documentType == \"384\" ||\n                formData.documentType == \"\" ||\n                formData.documentType == undefined ||\n                formData.documentType == \"385\" ? (\n                  <span className=\"required error-text\">&nbsp;*</span>\n                ) : (\n                  \"\"\n                )}\n              </label>\n              <div\n                className=\"textfield cancel\"\n                ref={(ele) => {\n                  ref.current[\n                    formData.documentType == 385\n                      ? 3\n                      : formData.documentType == 386\n                      ? \"\"\n                      : formData.documentType == 387\n                      ? \"\"\n                      : 3\n                  ] = ele;\n                }}\n              >\n                <input\n                  name=\"amount\"\n                  type=\"text\"\n                  className=\"cancel\"\n                  id=\"amount\"\n                  placeholder=\"Amount\"\n                  required\n                  maxLength={10}\n                  onKeyDown={(e) =>\n                    e.keyCode &&\n                    (e.keyCode <= 47 || e.keyCode >= 58) &&\n                    e.keyCode != 8 &&\n                    e.preventDefault()\n                  }\n                  onChange={handleChange}\n                />\n              </div>\n            </div>\n            <div className=\"form-group col-md-2 mb-2\">\n              <label htmlFor=\"legalEntityType\">Legal Entity</label>\n              <select\n                id=\"legalEntityType\"\n                name=\"legalEntityType\"\n                className=\"cancel\"\n                onChange={(e) => {\n                  const { value, id } = e.target;\n                  setFormData({ ...formData, [id]: value });\n                }}\n              >\n                <option value=\"\">&lt;&lt;Please Select&gt;&gt;</option>\n                <option value=\"3\">Prolifics Corporation Limited</option>\n                <option value=\"4\">Prolifics Inc</option>\n                <option value=\"5\">Prolifics Testing Inc.</option>\n                <option value=\"6\">Prolifics Canada Inc.</option>\n                <option value=\"7\">Prolifics Application Services Inc.</option>\n              </select>\n            </div>\n            <div className=\"form-group col-md-4 mb-2\">\n              <label htmlFor=\"signedBy\">Signed By [Company Side]</label>\n              <div\n                className=\"autoComplete-container cancel error autocomplete reactautocomplete\"\n                id=\"autocomplete reactautocomplete\"\n              >\n                <RiskAutoComplete\n                  name=\"docSignedBy\"\n                  id=\"docSignedBy\"\n                  value=\"0\"\n                  riskDetails={resource}\n                  getData={resourceFnc}\n                  setFormData={setFormData}\n                  onChangeHandler={onChangeHandler}\n                  onClear={handleClear}\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n      ) : (\n        \"\"\n      )}\n      {/* ///////////////////////////////////Save & Cancel///////////////////////////////////// */}\n      {dataObject?.is_write == true ? (\n        <div className=\" form-group col-md-12 col-sm-12 col-xs-12 btn-container center my-3\">\n          <button\n            className=\"btn btn-primary\"\n            type=\"submit\"\n            onClick={() => handleClick()}\n          >\n            <FaSave /> Save\n          </button>\n          <button className=\"btn btn-secondary\" onClick={handleCancel}>\n            <ImCross fontSize={\"11px\"} /> Cancel\n          </button>\n        </div>\n      ) : (\n        \"\"\n      )}\n      <div className=\"row group mb-2 customCard\">\n        <h2 className=\"col-md-12 mx-3\">Contract Document List</h2>\n        <div className=\"col-md-12\">\n          <CellRendererPrimeReactDataTable\n            data={data}\n            dynamicColumns={dynamicColumns}\n            headerData={headerData}\n            setHeaderData={setHeaderData}\n            rows={rows}\n          />\n        </div>\n      </div>\n      {deletePopup ? (\n        <ReviewReport\n          deletePopup={deletePopup}\n          setDeletePopup={setDeletePopup}\n          docId={docId}\n          tableData={tableData}\n          isTableVisible={isTableVisible}\n          setIsTableVisible={setIsTableVisible}\n          fileVisible={fileVisible}\n          setFileVisible={setFileVisible}\n          documnetFolderId={documnetFolderId}\n        />\n      ) : (\n        \"\"\n      )}\n    </div>\n  );\n}\nexport default ContractDocument;\n","import React, { useEffect, useRef, useState } from \"react\";\nimport { DataTable } from \"primereact/datatable\";\nimport { Column } from \"primereact/column\";\nimport axios from \"axios\";\nimport { environment } from \"../../environments/environment\";\nimport moment from \"moment\";\nimport { AiFillWarning } from \"react-icons/ai\";\nimport { BiCheck } from \"react-icons/bi\";\nimport DatePicker from \"react-datepicker\";\nimport Loader from \"../Loader/Loader\";\nimport \"./ProjectEvents.scss\";\nimport { ImCross } from \"react-icons/im\";\nimport { FilterMatchMode } from \"primereact/api\";\nimport { InputTextarea } from \"primereact/inputtextarea\";\nimport { FaPlus, FaSave } from \"react-icons/fa\";\nimport ScreenBreadcrumbs from \"../Common/ScreenBreadcrumbs\";\n\nfunction projectEvents(props) {\n  const { projectId, grp4Items } = props;\n  const dataObject = grp4Items.find((item) => item.display_name === \"Defects\");\n\n  const loggedUserId = localStorage.getItem(\"resId\");\n  const [products, setProducts] = useState([]);\n  const [projectName, setProjectName] = useState([]);\n  const [addMessage, setAddMessage] = useState(false);\n  const [StartDt, setStartDt] = useState(null);\n  const [rowId, setRowId] = useState([]);\n  const [validateproject, setValidateproject] = useState(false);\n  const [loader, setLoader] = useState(false);\n  const [buttonDisabled, setButtonDisabled] = useState(true);\n  const [valid, setValid] = useState(false);\n  const baseUrl = environment.baseUrl;\n  const abortController = useRef(null);\n  const componentRef = useRef(null);\n\n  const [lazyState, setLazyState] = useState({\n    filters: {\n      global: { value: null, matchMode: FilterMatchMode.CONTAINS },\n      event_name: { value: null, matchMode: FilterMatchMode.CONTAINS },\n      event_date: { value: null, matchMode: FilterMatchMode.CONTAINS },\n      comments: { value: null, matchMode: FilterMatchMode.CONTAINS },\n    },\n  });\n  const initialValue = {\n    project_id: projectId,\n    event_name: \"\",\n    event_date: \"\",\n    comments: \"\",\n  };\n  const [formData, setFormData] = useState(initialValue);\n\n  // breadcrumbs --\n\n  const [routes, setRoutes] = useState([]);\n  let textContent = \"Delivery\";\n  let currentScreenName = [\"Projects\", \"Open\", \"Monitoring\", \"Events\"];\n\n  useEffect(() => {\n    getMenus();\n  }, []);\n\n  const getMenus = () => {\n    // setMenusData\n\n    axios({\n      method: \"GET\",\n      url: baseUrl + `/CommonMS/master/getMenus?loggedUserId=${loggedUserId}`,\n    }).then((resp) => {\n      let data = resp.data;\n\n      data.forEach((item) => {\n        if (item.display_name === textContent) {\n          setRoutes([item]);\n        }\n      });\n    });\n  };\n\n  let sideArrow = document.getElementsByClassName(\n    \"p-paginator-next p-paginator-element p-link\"\n  );\n  let sideDoubleArrow = document.getElementsByClassName(\n    \"p-paginator-last p-paginator-element p-link\"\n  );\n\n  useEffect(() => {}, [formData]);\n\n  const onRowEditComplete = (e) => {\n    let _products = [...products];\n    let { newData, index } = e;\n    _products[index] = newData;\n    setProducts(_products);\n    handleAddClick(e.newData);\n  };\n\n  const renderSNo = (rowData, column) => {\n    const index = products.indexOf(rowData);\n    const sNo = index + 1;\n    return <span>{sNo}</span>;\n  };\n\n  const removeFirstRowIfEmpty = (prod) => {\n    Object.keys(prod).forEach((d) => {\n      if ([\"\", null, undefined, \" \"].includes(prod[d])) {\n        setProducts(products.slice(1));\n        setValid((prev) => !prev);\n        return;\n      }\n    });\n  };\n\n  useEffect(() => {\n    let prod = products[0];\n    sideArrow[0]?.addEventListener(\"click\", function () {\n      removeFirstRowIfEmpty(prod);\n    });\n\n    sideDoubleArrow[0]?.addEventListener(\"click\", function () {\n      removeFirstRowIfEmpty(prod);\n    });\n\n    if (products[0]?.event_name == \"\") {\n      const icon = document.getElementsByClassName(\n        \"p-row-editor-init p-link\"\n      )[0];\n      icon.setAttribute(\"title\", \"Edit selected row\");\n      icon.click();\n      setTimeout(() => {\n        const saveIcon = document.getElementsByClassName(\n          \"p-row-editor-save p-link\"\n        )[0];\n        saveIcon.setAttribute(\"title\", \"Save row\");\n        const cancelIcon = document.getElementsByClassName(\n          \"p-row-editor-cancel p-link\"\n        )[0];\n        cancelIcon.setAttribute(\"title\", \"Cancel row editing\");\n        cancelIcon?.addEventListener(\n          \"click\",\n          function (e) {\n            if (products[0]?.event_name == \"\") {\n              setProducts(products.slice(1, products.length));\n              setButtonDisabled(true);\n              setValidateproject(false);\n              setValid(false);\n              componentRef.current.forceUpdate();\n            }\n          },\n          true\n        );\n      }, 200);\n    }\n  }, [products]);\n\n  const Save = () => {\n    document\n      .getElementsByClassName(\"p-row-editor-save-icon pi pi-fw pi-check\")[0]\n      ?.click();\n  };\n\n  const Reset = () => {\n    document.getElementsByClassName(\"p-row-editor-cancel p-link\")[0]?.click();\n    setValidateproject(false);\n  };\n\n  const textEditorEventName = (products) => {\n    setRowId(products.rowData.id);\n    return (\n      <>\n        <input\n          className={`error ${\n            validateproject && !products.rowData.event_name ? \"error-block\" : \"\"\n          }`}\n          id=\"event_name\"\n          type=\"text\"\n          value={products.rowData.event_name}\n          onChange={(e) => {\n            products.editorCallback(e.target.value);\n          }}\n        />\n      </>\n    );\n  };\n\n  const statusbodyEvents = (rowData) => {\n    return (\n      <>\n        <input\n          className=\"ellipsis\"\n          id=\"event_name\"\n          title={rowData.event_name}\n          value={rowData.event_name}\n          type=\"text\"\n          autoComplete=\"off\"\n          required\n          disabled\n        />\n      </>\n    );\n  };\n\n  const textEditorComments = (products) => {\n    return (\n      <>\n        <InputTextarea\n          id=\"comments\"\n          value={products.rowData.comments}\n          onChange={(e) => products.editorCallback(e.target.value)}\n          rows={4}\n          cols={20}\n        />\n      </>\n    );\n  };\n\n  const statusbodyComments = (rowData) => {\n    return (\n      <>\n        <input\n          className=\"ellipsis\"\n          id=\"comments\"\n          title={rowData.comments}\n          value={rowData.comments}\n          type=\"text\"\n          autoComplete=\"off\"\n          required\n          disabled\n        />\n      </>\n    );\n  };\n\n  const textEditorDate = (products) => {\n    const today = new Date();\n\n    return (\n      <DatePicker\n        className={`error ${\n          validateproject && !products.rowData.event_date ? \"error-block\" : \"\"\n        }`}\n        name=\"event_date\"\n        id=\"event_date\"\n        selected={StartDt}\n        showMonthDropdown\n        showYearDropdown\n        dropdownMode=\"select\"\n        value={products.rowData.event_date}\n        dateFormat=\"dd-MMM-yyyy\"\n        onChange={(e) => {\n          const selectedDate = moment(e).format(\"DD-MMM-yyyy\");\n          products.editorCallback(selectedDate);\n          setFormData((prev) => ({\n            ...prev,\n            [\"event_date\"]: moment(e).format(\"yyyy-MM-DD\"),\n          }));\n        }}\n        onKeyDown={(e) => {\n          e.preventDefault();\n        }}\n        maxDate={today}\n      />\n    );\n  };\n\n  const statusbodyDate = (rowData) => {\n    return (\n      <>\n        <input\n          id=\"event_date\"\n          title={rowData.event_date}\n          value={rowData.event_date}\n          type=\"text\"\n          autoComplete=\"off\"\n          required\n          disabled\n        />\n      </>\n    );\n  };\n\n  const getProjectName = () => {\n    axios({\n      method: \"get\",\n      url: baseUrl + `/ProjectMS/Audit/getProjectName?projectId=${projectId}`,\n    }).then(function (response) {\n      let resp = response.data;\n      setProjectName(resp);\n    });\n  };\n\n  const getData = () => {\n    setLoader(false);\n    abortController.current = new AbortController();\n    axios({\n      url:\n        baseUrl + `/ProjectMS/ProjectEvents/getProjectEvents?pid=${projectId}`,\n      signal: abortController.current.signal,\n    }).then((resp) => {\n      let GetData = resp.data;\n      for (const item of GetData) {\n        item[\"event_date\"] =\n          item[\"event_date\"] == null\n            ? \"\"\n            : moment(item[\"event_date\"]).format(\"DD-MMM-YYYY\");\n      }\n\n      setProducts(() => GetData);\n      setLoader(false);\n      setTimeout(() => {\n        setLoader(false);\n      }, 1000);\n    });\n  };\n  /////////////////----------------Permission----------//////////////////////\n\n  const handleAbort = () => {\n    abortController.current && abortController.current.abort();\n    setLoader(false);\n  };\n\n  const handleAddClick = (rowData) => {\n    if (rowData.event_name.trim() === \"\" || rowData.event_date.trim() === \"\") {\n      setValidateproject(true);\n    } else {\n      const DueDate = moment(rowData.event_date).format(\"yyyy-MM-DD\");\n      axios({\n        method: \"post\",\n        url: baseUrl + `/ProjectMS/ProjectEvents/postProjectEvents`,\n        data: {\n          id: rowData.id,\n          projectId: projectId,\n          eventName: rowData.event_name,\n          eventDate: DueDate,\n          comments: rowData.comments,\n        },\n      }).then(() => {\n        getData();\n        setValidateproject(false);\n        setAddMessage(true);\n        setTimeout(() => {\n          setAddMessage(false);\n        }, 1000);\n      });\n      setButtonDisabled(true);\n      setValid(false);\n    }\n  };\n\n  const addHandler = () => {\n    let daa = document.getElementsByClassName(\n      \"p-paginator-first p-paginator-element p-link\"\n    )[0];\n\n    daa.click();\n\n    if (!valid) {\n      setValid(true);\n      setButtonDisabled(false);\n    }\n    const data = {\n      event_name: \"\",\n      event_date: \"\",\n      comments: \"\",\n    };\n    let dt = [];\n    dt.push(data);\n    setProducts([...dt, ...products]);\n  };\n\n  useEffect(() => {\n    getData();\n    getProjectName();\n  }, []);\n\n  return (\n    <>\n      {validateproject ? (\n        <div className=\"statusMsg error\">\n          <span>\n            <AiFillWarning />\n            &nbsp;\n            {\"Please provide valid values for highlighted values\"}\n          </span>\n        </div>\n      ) : (\n        \"\"\n      )}\n      {addMessage ? (\n        <div className=\"statusMsg success\">\n          <BiCheck />\n          {\"Event saved successfully.\"}\n        </div>\n      ) : (\n        \"\"\n      )}\n\n      <div className=\"col-md-12 mb-4 \">\n        <div className=\"pageTitle\">\n          <div className=\"childOne\">\n            <h2>{projectName}</h2>\n          </div>\n          <div className=\"childTwo\">\n            <h2>Events</h2>\n          </div>\n          <div className=\"childThree\"></div>\n        </div>\n      </div>\n      <ScreenBreadcrumbs\n        routes={routes}\n        currentScreenName={currentScreenName}\n      />\n      <div className=\" p-fluid darkHeader mb-2\">\n        <DataTable\n          className=\"primeReactDataTable eventsTable \" ////customerEngament\n          value={products}\n          editMode=\"row\"\n          rows={25}\n          showGridlines\n          paginator\n          rowHover\n          filters={lazyState.filters}\n          onRowEditComplete={onRowEditComplete}\n          tableStyle={{ minWidth: \"auto\", width: \"auto\" }}\n          filterDisplay=\"row\"\n          globalFilterFields={[\"event_name\", \"event_date\", \"comments\"]}\n          currentPageReportTemplate=\"View {first} - {last} of {totalRecords} \"\n          paginatorTemplate=\"RowsPerPageDropdown FirstPageLink PrevPageLink CurrentPageReport NextPageLink LastPageLink\"\n          rowsPerPageOptions={[10, 25, 50]}\n          paginationComponentOptions={{\n            rowsPerPageText: \"Records per page:\",\n            rangeSeparatorText: \"out of\",\n          }}\n        >\n          <Column\n            field=\"sNo\"\n            header=\"S.No\"\n            body={renderSNo}\n            headerStyle={{ width: \"50px\", backgroundColor: \"#eeecec\" }}\n            bodyStyle={{ textAlign: \"center\" }}\n          />\n          <Column\n            field=\"event_name\"\n            header={\n              <span>\n                Event <span className=\"error-text\">*</span>\n              </span>\n            }\n            sortable\n            style={{ minWidth: \"300px\" }}\n            body={statusbodyEvents}\n            editor={(options) => textEditorEventName(options)}\n            filter\n            filterMatchMode=\"contains\"\n          ></Column>\n\n          <Column\n            field=\"event_date\"\n            header={\n              <span>\n                Date <span className=\"error-text\">*</span>\n              </span>\n            }\n            sortable\n            style={{ minWidth: \"200px\", textAlign: \"center\" }}\n            body={statusbodyDate}\n            editor={(options) => textEditorDate(options)}\n            filter\n            filterMatchMode=\"contains\"\n          />\n\n          <Column\n            field=\"comments\"\n            header=\"Comments\"\n            sortable\n            style={{ minWidth: \"400px\" }}\n            body={statusbodyComments}\n            editor={(options) => textEditorComments(options)}\n            filter\n            filterMatchMode=\"notEquals\"\n          ></Column>\n          {grp4Items[8].is_write == true && (\n            <Column\n              field=\"Actions\"\n              header=\"Actions\"\n              rowEditor\n              headerStyle={{ width: \"100px\", backgroundColor: \"#eeecec\" }}\n              bodyStyle={{ textAlign: \"center\" }}\n            ></Column>\n          )}\n        </DataTable>\n      </div>\n      {dataObject?.is_write == true ? (\n        <div className=\"form-group col-md-2 btn-container-events center my-3\">\n          <button\n            className=\"btn btn-primary\"\n            disabled={valid}\n            title={\"Add new row\"}\n            onClick={addHandler}\n          >\n            <FaPlus /> Add\n          </button>\n          <button\n            className=\"btn btn-primary\"\n            disabled={buttonDisabled}\n            title={\"Save row\"}\n            onClick={() => {\n              Save();\n            }}\n          >\n            <FaSave />\n            Save\n          </button>\n          <button\n            className=\"btn btn-secondary\"\n            disabled={buttonDisabled}\n            title={\"Cancel row editing\"}\n            onClick={() => {\n              Reset();\n            }}\n          >\n            <ImCross fontSize={\"11px\"} /> Cancel\n          </button>\n        </div>\n      ) : (\n        \"\"\n      )}\n      {loader ? <Loader handleAbort={handleAbort} /> : \"\"}\n    </>\n  );\n}\nexport default projectEvents;\n","import React, { useEffect, useState, useRef, useMemo } from \"react\";\nimport { DataTable } from \"primereact/datatable\";\nimport { Column } from \"primereact/column\";\nimport { Dropdown } from \"primereact/dropdown\";\nimport { Tag } from \"primereact/tag\";\nimport axios from \"axios\";\nimport { MdOutlineAdd } from \"react-icons/md\";\nimport { TfiSave } from \"react-icons/tfi\";\nimport { ImCross } from \"react-icons/im\";\nimport Loader from \"../Loader/Loader\";\nimport { classNames } from \"primereact/utils\";\nimport { FilterMatchMode, FilterOperator } from \"primereact/api\";\nimport { TriStateCheckbox } from \"primereact/tristatecheckbox\";\nimport { BiCheck } from \"react-icons/bi\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { environment } from \"../../environments/environment\";\nimport moment from \"moment\";\nimport { AiFillWarning } from \"react-icons/ai\";\nimport { Calendar } from \"primereact/calendar\";\nimport { FaPlus, FaSave } from \"react-icons/fa\";\nimport ScreenBreadcrumbs from \"../Common/ScreenBreadcrumbs\";\n\nexport default function ProjectMilestones(props) {\n  const { projectId, grp4Items } = props;\n  const dataObject = grp4Items.find(\n    (item) => item.display_name === \"Milestones\"\n  );\n  const baseUrl = environment.baseUrl;\n  const [products, setProducts] = useState([]);\n  const [editmsg, setEditAddmsg] = useState(false);\n  const [addmsg, setAddmsg] = useState(false);\n  const [editId, setEditId] = useState([]);\n  const [loader, setLoader] = useState(false);\n\n  const [validateproject, setValidateproject] = useState(false);\n  const ref = useRef([]);\n  const componentRef = useRef(null);\n\n  useEffect(() => {\n    getData();\n  }, []);\n  const [buttonDisabled, setButtonDisabled] = useState(true);\n\n  const [filters, setFilters] = useState({\n    filters: {\n      global: { value: null, matchMode: FilterMatchMode.CONTAINS },\n      project_milestone: {\n        value: null,\n        matchMode: FilterMatchMode.CONTAINS,\n      },\n      due_date: { value: null, matchMode: FilterMatchMode.CONTAINS },\n      lkup_name: { value: null, matchMode: FilterMatchMode.CONTAINS },\n      is_invoiceable: { value: null, matchMode: FilterMatchMode.CONTAINS },\n      amount: { value: null, matchMode: FilterMatchMode.CONTAINS },\n      comments: { value: null, matchMode: FilterMatchMode.CONTAINS },\n      completed_date: { value: null, matchMode: FilterMatchMode.CONTAINS },\n      invoice_id: { value: null, matchMode: FilterMatchMode.CONTAINS },\n      invoice_status: { value: null, matchMode: FilterMatchMode.CONTAINS },\n    },\n  });\n\n  const initialValues = {\n    id: \"\",\n    project_id: projectId,\n    project_milestone: \"\",\n    Status: 588,\n    due_date: \"\",\n    comments: \"\",\n    is_invoiceable: 1,\n    completed_date: \"\",\n    amount: 0.0,\n  };\n\n  //// -------breadcrumbs-----\n\n  const loggedUserId = localStorage.getItem(\"resId\");\n\n  const [routes, setRoutes] = useState([]);\n  let textContent = \"Delivery\";\n  let currentScreenName = [\"Projects\", \"Open\", \"Monitoring\", \"Milestones\"];\n\n  useEffect(() => {\n    getMenus();\n  }, []);\n\n  const getMenus = () => {\n    // setMenusData\n\n    axios({\n      method: \"GET\",\n      url: baseUrl + `/CommonMS/master/getMenus?loggedUserId=${loggedUserId}`,\n    }).then((resp) => {\n      let data = resp.data;\n\n      data.forEach((item) => {\n        if (item.display_name === textContent) {\n          setRoutes([item]);\n        }\n      });\n    });\n  };\n\n  const [formEditData, setFormEditData] = useState(initialValues);\n  useEffect(() => {}, [formEditData]);\n  let sideArrow = document.getElementsByClassName(\n    \"p-paginator-next p-paginator-element p-link\"\n  );\n  let sideDoubleArrow = document.getElementsByClassName(\n    \"p-paginator-last p-paginator-element p-link\"\n  );\n  const renderSNo = (rowData, column) => {\n    const index = products.indexOf(rowData);\n    const sNo = index + 1;\n    return <span>{sNo}</span>;\n  };\n  const removeFirstRowIfEmpty = (prod) => {\n    Object.keys(prod).forEach((d) => {\n      if ([\"\", null, undefined, \" \"].includes(prod[d])) {\n        setProducts(products.slice(1));\n        setValid((prev) => !prev);\n        return;\n      }\n    });\n  };\n  useEffect(() => {\n    let prod = products[0];\n    sideArrow[0]?.addEventListener(\"click\", function () {\n      removeFirstRowIfEmpty(prod);\n    });\n\n    sideDoubleArrow[0]?.addEventListener(\"click\", function () {\n      removeFirstRowIfEmpty(prod);\n    });\n\n    if (products[0]?.project_milestone == \"\") {\n      const icon = document.getElementsByClassName(\n        \"p-row-editor-init p-link\"\n      )[0];\n      icon.setAttribute(\"title\", \"Edit selected row\");\n      icon.click();\n      setTimeout(() => {\n        const saveIcon = document.getElementsByClassName(\n          \"p-row-editor-save p-link\"\n        )[0];\n        saveIcon.setAttribute(\"title\", \"Save row\");\n        const cancelIcon = document.getElementsByClassName(\n          \"p-row-editor-cancel p-link\"\n        )[0];\n        cancelIcon.setAttribute(\"title\", \"Cancel row editing\");\n        cancelIcon?.addEventListener(\n          \"click\",\n          function (e) {\n            if (products[0]?.project_milestone == \"\") {\n              setProducts(products.slice(1, products.length));\n              setButtonDisabled(true);\n              setValid(false);\n              setValidateproject(false);\n              componentRef.current.forceUpdate();\n            }\n          },\n          true\n        );\n      }, 200);\n    }\n  }, [products]);\n  const abortController = useRef(null);\n\n  const getData = () => {\n    setLoader(false);\n    abortController.current = new AbortController();\n\n    axios({\n      url:\n        baseUrl +\n        `/ProjectMS/stakeholders/getMilestonedata?project_id=${projectId}`,\n      signal: abortController.current.signal,\n    }).then((resp) => {\n      let GetData = resp.data;\n\n      for (let i = 0; i < GetData.length; i++) {\n        GetData[i][\"due_date\"] =\n          GetData[i][\"due_date\"] == null\n            ? \"\"\n            : moment(GetData[i][\"due_date\"]).format(\"DD-MMM-YYYY\");\n\n        GetData[i][\"amount\"] =\n          GetData[i][\"amount\"] == null\n            ? \"\"\n            : GetData[i][\"amount\"]\n                .toFixed(2)\n                .replace(/\\d(?=(\\d{3})+\\.)/g, \"$&,\");\n\n        GetData[i][\"completed_date\"] =\n          GetData[i][\"completed_date\"] == null\n            ? \"\"\n            : moment(GetData[i][\"completed_date\"]).format(\"DD-MMM-YYYY\");\n      }\n      for (let i = 0; i < GetData.length; i++) {\n        GetData[i] == \"null\" ? \"\" : GetData[i];\n        GetData[i][\"SNo\"] = i + 1;\n      }\n\n      setProducts(() => GetData);\n      setLoader(false);\n      setTimeout(() => {\n        setLoader(false);\n      }, 1000);\n    });\n  };\n  const handleAbort = () => {\n    abortController.current && abortController.current.abort();\n    setLoader(false);\n  };\n  const [status, setStatus] = useState([]);\n\n  const statusfunc = async () => {\n    await axios({\n      method: \"get\",\n      url: baseUrl + `/ProjectMS/stakeholders/getStatus`,\n    })\n      .then((Response) => {\n        let status = [];\n        let data = Response.data;\n        data.length > 0 &&\n          data.forEach((e) => {\n            let StatusObj = {\n              label: e.lkup_name,\n              value: e.id,\n            };\n            status.push(StatusObj);\n          });\n        setStatus(data);\n      })\n      .catch((error) => console.log(error));\n  };\n  useEffect(() => {\n    statusfunc();\n  }, []);\n\n  const onRowEditComplete = (e) => {\n    let _products = [...products];\n    let { newData, index } = e;\n    _products[index] = newData;\n    setProducts(_products);\n    postData(e.newData);\n  };\n  const [storecomdate, setStorecomdate] = useState([]);\n\n  ///=======================================post API\n\n  const postData = (rowData) => {\n    if (rowData.project_milestone === \"\" || rowData.due_date === \"\") {\n      setValidateproject(true);\n    } else {\n      const DueDate = moment(rowData.due_date).format(\"yyyy-MM-DD\");\n      const CompleDate = moment(rowData.completed_date).format(\"yyyy-MM-DD\");\n\n      const storecompletedate = moment(storecomdate).format(\"yyyy-MM-DD\");\n\n      axios({\n        method: \"post\",\n        url: baseUrl + `/ProjectMS/stakeholders/postMilestones`,\n        data: {\n          id: rowData.id,\n          project_id: rowData.project_id,\n          project_milestone: rowData.project_milestone,\n          due_date: DueDate,\n          statusId:\n            rowData.status_id == \"\" ||\n            rowData.status_id == undefined ||\n            rowData.status_id == null\n              ? 559\n              : rowData.status_id,\n          comments:\n            rowData.comments == \"\" || null || undefined ? \"\" : rowData.comments,\n          is_invoiceable: rowData.is_invoiceable == true ? 1 : 0,\n          completed_date:\n            rowData.status_id == 560\n              ? moment(storecomdate).format(\"YYYY-MM-DD\")\n              : moment(CompleDate).isValid()\n              ? CompleDate !== \"Invalid date\"\n                ? CompleDate\n                : \"\"\n              : \"\",\n\n          amount: rowData.amount,\n        },\n      }).then((error) => {\n        // console.log(\"success\", error);\n        getData();\n        setValidateproject(false);\n        setAddmsg(true);\n        setTimeout(() => {\n          setAddmsg(false);\n        }, 3000);\n\n        setTimeout(() => {\n          setLoader(false);\n        }, 1000);\n      });\n      setButtonDisabled(true);\n      setValid(false);\n    }\n  };\n\n  const Save = () => {\n    document\n      .getElementsByClassName(\"p-row-editor-save-icon pi pi-fw pi-check\")[0]\n      ?.click();\n  };\n\n  const Reset = () => {\n    setValidateproject(false);\n    document.getElementsByClassName(\"p-row-editor-cancel p-link\")[0]?.click();\n  };\n\n  const [prjName, setPrjName] = useState([]);\n  const [projectData, setProjectData] = useState([]);\n\n  const getProjectName = () => {\n    axios({\n      method: \"get\",\n      url: baseUrl + `/ProjectMS/Audit/getProjectName?projectId=${projectId}`,\n    })\n      .then(function (response) {\n        let resp = response.data;\n        setPrjName(resp);\n      })\n      .catch(function (response) {});\n  };\n  const getProjectOverviewData = () => {\n    axios({\n      method: \"get\",\n      url:\n        baseUrl +\n        `/ProjectMS/Audit/projectOverviewDetails?projectId=${projectId}`,\n    })\n      .then(function (response) {\n        let resp = response.data;\n        setProjectData(resp);\n      })\n      .catch(function (response) {});\n  };\n  useEffect(() => {\n    getProjectOverviewData();\n    getProjectName();\n  }, []);\n\n  const [dueDate, setdueDate] = useState();\n  const [valid, setValid] = useState(false);\n  useEffect(() => {}, [storecomdate]);\n\n  const addHandler = () => {\n    let daa = document.getElementsByClassName(\n      \"p-paginator-first p-paginator-element p-link\"\n    )[0];\n\n    daa.click();\n\n    if (!valid) {\n      setValid(true);\n      setButtonDisabled(false);\n    }\n    const data = {\n      project_id: projectId,\n      project_milestone: \"\",\n      Status: \"\",\n      due_date: \"\",\n      comments: \"\",\n      is_invoiceable: 1,\n      completed_date: \"\",\n      amount: 0.0,\n    };\n\n    let dt = [];\n    dt.push(data);\n    setProducts([...dt, ...products]);\n  };\n  useEffect(() => {}, [formEditData]);\n\n  const [rowId, setRowId] = useState([]);\n\n  const textEditorMileStone = (products) => {\n    setRowId(products.rowData.id);\n\n    return (\n      <>\n        <input\n          type=\"text\"\n          id=\"project_milestone\"\n          className={`error ${\n            validateproject && !products.rowData.project_milestone\n              ? \"error-block\"\n              : \"\"\n          }`}\n          value={products.rowData.project_milestone}\n          onChange={(e) => {\n            products.editorCallback(e.target.value);\n          }}\n        />\n      </>\n    );\n  };\n\n  const statusbodyMilestone = (rowData) => {\n    return (\n      <>\n        <input\n          id=\"project_milestone\"\n          title={rowData.project_milestone}\n          value={rowData.project_milestone}\n          type=\"text\"\n          autoComplete=\"off\"\n          required\n          disabled\n          className=\"ellipsis\"\n        />\n      </>\n    );\n  };\n\n  const statusbodyDueDate = (rowData) => {\n    return (\n      <>\n        <input\n          id=\"due_date\"\n          value={rowData.due_date}\n          type=\"text\"\n          title={rowData.due_date}\n          autoComplete=\"off\"\n          // className=\"form-control\"\n          required\n          disabled\n        />\n      </>\n    );\n  };\n\n  const [dateDue, setDateDue] = useState();\n  const setDatePicker = (products, options) => {\n    return (\n      <DatePicker\n        name=\"due_date\"\n        selected={dueDate}\n        id=\"due_date\"\n        className={`error ${\n          validateproject && !products.rowData.due_date ? \"error-block\" : \"\"\n        }`}\n        value={products.rowData.due_date}\n        dateFormat=\"dd-MMM-yyyy\"\n        autoComplete=\"off\"\n        showMonthDropdown\n        showYearDropdown\n        onChange={(e) => {\n          products.editorCallback(moment(e).format(\"DD-MMM-yyyy\")),\n            setFormEditData((prev) => ({\n              ...prev,\n              [\"due_date\"]: moment(e).format(\"yyyy-MM-DD\"),\n            }));\n        }}\n        onKeyDown={(e) => {\n          e.preventDefault();\n        }}\n      />\n    );\n  };\n\n  const companyBodyTemplate = (products, rowData) => {\n    return (\n      <select\n        id=\"status_id\"\n        name=\"Status\"\n        className=\"cancel\"\n        onChange={(e) => {\n          products.editorCallback(e.target.value);\n\n          setStorecomdate(\n            e.target.value == 560\n              ? moment(new Date()).format(\"DD-MMM-YYYY\")\n              : \"\"\n          );\n\n          status.map((a) => {\n            if (a.id == e.target.value) {\n              products[\"rowData\"][\"Status\"] = a.lkup_name;\n              products[\"rowData\"][\"status_id\"] = e.target.value;\n            }\n          });\n        }}\n      >\n        <option value=\"558\">{\"<<Please Select>>\"}</option>\n        {status?.map((Item, index) => (\n          <option\n            key={index}\n            value={Item.id}\n            selected={Item.id == products.rowData.status_id ? true : false}\n          >\n            {Item.lkup_name}\n          </option>\n        ))}\n      </select>\n    );\n  };\n\n  const priceEditor = (products) => {\n    const isInvoiceable = products.rowData.is_invoiceable == true ? 1 : 0;\n\n    return (\n      <div\n        style={{\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n        }}\n      >\n        <input\n          type=\"checkbox\"\n          id=\"is_invoiceable\"\n          name=\"is_invoiceable\"\n          defaultChecked={isInvoiceable}\n          onChange={(e) => products.editorCallback(e.target.checked ? 1 : 0)}\n        />\n      </div>\n    );\n  };\n\n  const statusbodyAmount = (rowData) => {\n    const Storeamount = rowData.amount;\n    return (\n      <>\n        <input\n          id=\"amount\"\n          value={Storeamount}\n          type=\"text\"\n          title={Storeamount}\n          required\n          disabled\n        />\n      </>\n    );\n  };\n\n  const statusbodyStatus_Id = (rowData) => {\n    const Storestatus = rowData.Status;\n\n    if (filterValue === null || filterValue === \"[All]\") {\n      return (\n        <>\n          <input\n            id=\"Status\"\n            value={Storestatus}\n            type=\"text\"\n            title={Storestatus}\n            required\n            disabled\n          />\n        </>\n      );\n    } else if (Storestatus === filterValue) {\n      const filteredData = products.filter((item) => {\n        return item.Status === filterValue;\n      });\n      return (\n        <>\n          <input\n            id=\"Status\"\n            value={filterValue}\n            type=\"text\"\n            title={filterValue}\n            required\n            disabled\n          />\n        </>\n      );\n    } else {\n      return null;\n    }\n  };\n\n  const textEditorAmount = (products) => {\n    const Storeamount = products.rowData.amount;\n\n    const handleKeyPress = (e) => {\n      const keyCode = e.keyCode || e.which;\n      const keyValue = String.fromCharCode(keyCode);\n      const regex = /^[0-9]*$/; // only allow digits\n      if (!regex.test(keyValue)) {\n        e.preventDefault();\n      }\n    };\n    return (\n      <>\n        <input\n          type=\"text\"\n          id=\"amount\"\n          autoComplete=\"off\"\n          value={Storeamount}\n          onChange={(e) => products.editorCallback(e.target.value)}\n          onKeyPress={handleKeyPress}\n        />\n      </>\n    );\n  };\n\n  const statusbodyInvoiceId = (rowData) => {\n    return (\n      <>\n        <input\n          id=\"invoice_id\"\n          value={rowData.invoice_id}\n          type=\"text\"\n          autoComplete=\"off\"\n          // className=\"form-control\"\n          required\n          disabled\n        />\n      </>\n    );\n  };\n\n  const statusbodyInvoiceStatus = (rowData) => {\n    setEditId(rowData.id);\n    return (\n      <>\n        <input\n          id=\"invoice_status\"\n          value={rowData.invoice_status}\n          type=\"text\"\n          title={rowData.invoice_status}\n          autoComplete=\"off\"\n          // className=\"form-control\"\n          required\n          disabled\n        />\n      </>\n    );\n  };\n\n  const statusBodyComDate = (rowData) => {\n    setEditId(rowData.id);\n    return (\n      <>\n        <input\n          id=\"completed_date\"\n          value={rowData.completed_date}\n          type=\"text\"\n          title={rowData.completed_date}\n          autoComplete=\"off\"\n          // className=\"form-control\"\n          required\n          disabled\n        />\n      </>\n    );\n  };\n\n  const bodyComments = (rowData) => {\n    setEditId(rowData.id);\n    return (\n      <>\n        <input\n          id=\"comments\"\n          value={rowData.comments}\n          type=\"text\"\n          title={rowData.comments}\n          autoComplete=\"off\"\n          required\n          disabled\n          className=\"ellipsis\"\n        />\n      </>\n    );\n  };\n\n  const [completeDate, setCompleteDate] = useState();\n  const textEditorCompleteDate = (products, options) => {\n    return (\n      <DatePicker\n        name=\"completed_date\"\n        selected={completeDate}\n        id=\"completed_date\"\n        value={\n          storecomdate.length > 0\n            ? storecomdate\n            : products.rowData.completed_date\n        }\n        dateFormat=\"dd-MMM-yyyy\"\n        onChange={(e) => {\n          products.editorCallback(moment(e).format(\"DD-MMM-yyyy\")),\n            setFormEditData((prev) => ({\n              ...prev,\n              [\"completed_date\"]: moment(e).format(\"yyyy-MM-DD\"),\n            }));\n        }}\n        onKeyDown={(e) => {\n          e.preventDefault();\n        }}\n      />\n    );\n  };\n\n  const textEditorComments = (products) => {\n    return (\n      <>\n        <textarea\n          type=\"text\"\n          id=\"comments\"\n          value={products.rowData.comments}\n          onChange={(e) => products.editorCallback(e.target.value)}\n        ></textarea>\n      </>\n    );\n  };\n  const getSeverity = (status) => {\n    switch (status) {\n      case \"In Progress\":\n        return \"In Progress\";\n      case \"On Hold\":\n        return \"On Hold\";\n      case \"Completed\":\n        return \"Completed\";\n      default:\n        return \"\";\n    }\n  };\n  const statusItemTemplate = (option) => {\n    return (\n      <Tag\n        value={option}\n        style={{ backgroundColor: \"white\", color: \"black\" }}\n        severity={getSeverity(option)}\n      />\n    );\n  };\n  const [filterValue, setFilterValue] = useState(\"[All]\");\n  const [statuses] = useState([\"[All]\", \"In Progress\", \"Completed\", \"On Hold\"]);\n  const [filteredData, setFilteredData] = useState(products);\n  const statusRowFilterTemplate = (options) => {\n    return (\n      <Dropdown\n        value={filterValue}\n        options={statuses}\n        onChange={(e) => {\n          const selectedValue = e.value;\n          setFilterValue(selectedValue);\n          if (selectedValue === \"[All]\") {\n            setFilteredData(products);\n          } else {\n            const filteredItems = products.filter(\n              (item) => item.Status === selectedValue\n            );\n            setFilteredData(filteredItems);\n          }\n        }}\n        itemTemplate={statusItemTemplate}\n        className=\"p-column-filter\"\n        showClear={false}\n      >\n        <span className=\"p-dropdown-trigger-icon\"></span>\n      </Dropdown>\n    );\n  };\n\n  const verifiedBodyTemplate = (rowData) => {\n    return (\n      <>\n        <div\n          style={{\n            display: \"flex\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n          }}\n        >\n          <i\n            className={classNames(\"pi\", {\n              \"true-icon pi-check-circle disableField\": rowData.is_invoiceable,\n              \"false-icon pi-times-circle  disableField\":\n                !rowData.is_invoiceable,\n            })}\n          ></i>\n        </div>\n      </>\n    );\n  };\n  const verifiedRowFilterTemplate = (options) => {\n    return (\n      <TriStateCheckbox\n        value={options.value}\n        onChange={(e) => options.filterApplyCallback(e.value)}\n      />\n    );\n  };\n  const [filterValue1, setFilterValue1] = useState({\n    filters: {\n      global: { value: null, matchMode: FilterMatchMode.CONTAINS },\n      due_date: { value: null, matchMode: FilterMatchMode.CONTAINS },\n    },\n  });\n  const handleFilterChange = (e) => {\n    setFilteredDueDate(e.value);\n  };\n  const [filteredDueDate, setFilteredDueDate] = useState(\"\");\n\n  const filteredItems = useMemo(() => {\n    if (filteredDueDate) {\n      return products.filter(\n        (item) =>\n          new Date(item.due_date).getTime() ===\n          new Date(filteredDueDate).getTime()\n      );\n    } else {\n      return [];\n    }\n  }, [filteredDueDate]);\n\n  const filteredData1 = useMemo(() => {\n    return filteredDueDate ? filteredItems : [];\n  }, [filteredDueDate, filteredItems]);\n\n  const [matchingStatus, setMatchingStatus] = useState(\"\");\n\n  useEffect(() => {\n    if (filteredDueDate && filteredData1.length === 0) {\n      setMatchingStatus(\"not matched\");\n    } else if (\n      filteredData1.length > 0 &&\n      filteredData1[0]?.due_date !== undefined\n    ) {\n      setMatchingStatus(\"matched\");\n    } else {\n      setMatchingStatus(\"\");\n    }\n  }, [filteredDueDate, filteredData1]);\n  const [filterValue2, setFilterValue2] = useState({\n    filters: {\n      global: { value: null, matchMode: FilterMatchMode.CONTAINS },\n      completed_date: { value: null, matchMode: FilterMatchMode.CONTAINS },\n    },\n  });\n  const [filteredCompleteDate, setFilteredCompleteDate] = useState(\"\");\n  const handleFilterChange2 = (e) => {\n    setFilteredCompleteDate(e.value);\n  };\n\n  const filteredItemsCompletDate = useMemo(() => {\n    if (filteredCompleteDate) {\n      return products.filter(\n        (item) =>\n          new Date(item.completed_date).getTime() ===\n          new Date(filteredCompleteDate).getTime()\n      );\n    } else {\n      return [];\n    }\n  }, [filteredCompleteDate]);\n\n  const filteredData2 = useMemo(() => {\n    return filteredCompleteDate ? filteredItemsCompletDate : [];\n  }, [filteredCompleteDate, filteredItemsCompletDate]);\n  const [matchingStatusComDate, setMatchingStatusComDate] = useState(\"\");\n\n  useEffect(() => {\n    if (filteredCompleteDate && filteredData2.length === 0) {\n      setMatchingStatusComDate(\"not matched ComDate\");\n    } else if (\n      filteredData2.length > 0 &&\n      filteredData2[0]?.completed_date !== undefined\n    ) {\n      setMatchingStatusComDate(\"matched ComDate\");\n    } else {\n      setMatchingStatusComDate(\"\");\n    }\n  }, [filteredCompleteDate, filteredData2]);\n  return (\n    <>\n      {addmsg ? (\n        <div className=\"statusMsg success\">\n          <span className=\"errMsg\">\n            <BiCheck size=\"1.4em\" strokeWidth={{ width: \"100px\" }} />{\" \"}\n            &nbsp;Milestone saved successfully\n          </span>\n        </div>\n      ) : (\n        \"\"\n      )}{\" \"}\n      {editmsg ? (\n        <div className=\"statusMsg success\">\n          <span className=\"errMsg\">\n            <BiCheck size=\"1.4em\" strokeWidth={{ width: \"100px\" }} /> &nbsp;\n            Milestone saved successfully\n          </span>\n        </div>\n      ) : (\n        \"\"\n      )}\n      {validateproject ? (\n        <div className=\"statusMsg error\">\n          <span>\n            <AiFillWarning /> &nbsp;Please provide valid values for highlighted\n            values\n          </span>\n        </div>\n      ) : (\n        \"\"\n      )}\n      <div className=\"col-md-12 \">\n        <div className=\"pageTitle\">\n          <div className=\"childOne\">\n            <h2>{prjName}</h2>\n          </div>\n          <div className=\"childTwo\">\n            <h2>Milestones</h2>\n          </div>\n          <div className=\"childThree\"></div>\n        </div>\n      </div>\n      <ScreenBreadcrumbs\n        routes={routes}\n        currentScreenName={currentScreenName}\n      />\n      <div className=\"p-fluid  mb-2 darkHeader\">\n        <DataTable\n          className=\"primeReactDataTable eventsTable \" /// customerEngament\n          value={\n            filteredData.length > 0\n              ? filteredData\n              : matchingStatus === \"matched\" ||\n                matchingStatus === \"not matched\" ||\n                matchingStatus.length < 0\n              ? filteredData1\n              : matchingStatusComDate === \"matched ComDate\" ||\n                matchingStatusComDate === \"not matched ComDate\" ||\n                matchingStatusComDate.length < 0\n              ? filteredData2\n              : products\n          }\n          editMode=\"row\"\n          onRowEditComplete={onRowEditComplete}\n          showGridlines\n          emptyMessage=\"No Data Found\"\n          scrollDirection=\"both\"\n          paginator\n          rows={25}\n          tableStyle={{ minWidth: \"auto\", width: \"auto\" }}\n          rowHover\n          dataKey=\"id\"\n          filters={filters.filters}\n          paginationPerPage={5}\n          rowsPerPageOptions={[10, 25, 50]}\n          paginationRowsPerPageOptions={[5, 15, 25, 50]}\n          filterDisplay=\"row\"\n          globalFilterFields={[\n            \"project_milestone\",\n            \"status_id\",\n            \"amount\",\n            \"comments\",\n            \"completed_date\",\n            \"due_date\",\n          ]}\n          paginationComponentOptions={{\n            rowsPerPageText: \"Records per page:\",\n            rangeSeparatorText: \"out of\",\n          }}\n          paginatorTemplate=\"RowsPerPageDropdown FirstPageLink PrevPageLink CurrentPageReport NextPageLink LastPageLink\"\n          currentPageReportTemplate=\"View {first} - {last} of {totalRecords} \"\n        >\n          <Column header=\"S.No\" field=\"SNo\" body={renderSNo}></Column>\n          <Column\n            field=\"project_milestone\"\n            header={\n              <span>\n                Milestone <span className=\"error-text\">*</span>\n              </span>\n            }\n            sortable\n            body={statusbodyMilestone}\n            editor={(options) => textEditorMileStone(options)}\n            alignHeader={\"center\"}\n            filter\n            filterMatchMode=\"contains\"\n          ></Column>\n          <Column\n            field=\"due_date\"\n            header={\n              <span>\n                Due Date <span className=\"error-text\">*</span>\n              </span>\n            }\n            sortable\n            alignHeader={\"center\"}\n            filter\n            filterMatchMode=\"contains\"\n            body={statusbodyDueDate}\n            editor={(options) => setDatePicker(options)}\n          ></Column>\n          <Column\n            field=\"status\"\n            header=\"Status\"\n            filter={true}\n            alignHeader=\"center\"\n            showFilterMenu={false}\n            filterValue={filterValue}\n            sortable\n            editor={(options) => companyBodyTemplate(options)}\n            body={statusbodyStatus_Id}\n            filterMenuStyle={{ width: \"14rem\" }}\n            filterElement={statusRowFilterTemplate}\n            value={filteredData}\n          ></Column>\n\n          <Column\n            field=\"is_invoiceable\"\n            header=\"Invoiceable\"\n            sortable\n            alignHeader={\"center\"}\n            dataType=\"boolean\"\n            body={verifiedBodyTemplate}\n            filter\n            filterElement={verifiedRowFilterTemplate}\n            editor={(options) => priceEditor(options)}\n            // style={{ width: \"25%\" }}\n          ></Column>\n\n          <Column\n            field=\"amount\"\n            header=\"Amount *\"\n            sortable\n            alignHeader={\"center\"}\n            body={statusbodyAmount}\n            editor={(options) => textEditorAmount(options)}\n            // style={{ width: \"40%\" }}\n            filter={true}\n            filterFunction={(value, filter) => {\n              if (!filter) {\n                return true;\n              }\n\n              const filterOptions = filter.split(\" \");\n              return filterOptions.every((option) => {\n                if (option.startsWith && !value.startsWith(option.startsWith)) {\n                  return false;\n                }\n\n                if (option.endsWith && !value.endsWith(option.endsWith)) {\n                  return false;\n                }\n\n                if (option.contains && !value.includes(option.contains)) {\n                  return false;\n                }\n\n                return true;\n              });\n            }}\n          ></Column>\n\n          <Column\n            field=\"invoice_id\"\n            header=\"Invoice\"\n            sortable\n            alignHeader={\"center\"}\n            body={statusbodyInvoiceId}\n            // style={{ width: \"25%\" }}\n            filter={true}\n            filterFunction={(value, filter) => {\n              if (!filter) {\n                return true;\n              }\n\n              const filterOptions = filter.split(\" \");\n              return filterOptions.every((option) => {\n                if (option.startsWith && !value.startsWith(option.startsWith)) {\n                  return false;\n                }\n\n                if (option.endsWith && !value.endsWith(option.endsWith)) {\n                  return false;\n                }\n\n                if (option.contains && !value.includes(option.contains)) {\n                  return false;\n                }\n\n                return true;\n              });\n            }}\n          ></Column>\n\n          <Column\n            field=\"invoice_status\"\n            header=\"Invoice Status\"\n            sortable\n            alignHeader={\"center\"}\n            body={statusbodyInvoiceStatus}\n            // style={{ width: \"25%\" }}\n            filter={true}\n            filterFunction={(value, filter) => {\n              if (!filter) {\n                return true;\n              }\n\n              const filterOptions = filter.split(\" \");\n              return filterOptions.every((option) => {\n                if (option.startsWith && !value.startsWith(option.startsWith)) {\n                  return false;\n                }\n\n                if (option.endsWith && !value.endsWith(option.endsWith)) {\n                  return false;\n                }\n\n                if (option.contains && !value.includes(option.contains)) {\n                  return false;\n                }\n\n                return true;\n              });\n            }}\n          ></Column>\n\n          <Column\n            field=\"completed_date\"\n            header=\"Completed Date\"\n            sortable\n            alignHeader={\"center\"}\n            filter\n            filterMatchMode=\"contains\"\n            body={statusBodyComDate}\n            editor={(options) => textEditorCompleteDate(options)}\n            // style={{ width: \"40%\" }}\n            // filterElement={\n            //   <div style={{ position: \"relative\" }}>\n            //     <Calendar\n            //       value={filterValue2}\n            //       onChange={handleFilterChange2}\n            //       dateFormat=\"dd-M-yy\"\n            //     />\n            //   </div>\n            // }\n          ></Column>\n\n          <Column\n            field=\"comments\"\n            header=\"Comments\"\n            sortable\n            alignHeader={\"center\"}\n            body={bodyComments}\n            editor={(options) => textEditorComments(options)}\n            // style={{ width: \"40%\" }}\n            filter={true}\n            filterFunction={(value, filter) => {\n              if (!filter) {\n                return true;\n              }\n\n              const filterOptions = filter.split(\" \");\n              return filterOptions.every((option) => {\n                if (option.startsWith && !value.startsWith(option.startsWith)) {\n                  return false;\n                }\n\n                if (option.endsWith && !value.endsWith(option.endsWith)) {\n                  return false;\n                }\n\n                if (option.contains && !value.includes(option.contains)) {\n                  return false;\n                }\n\n                return true;\n              });\n            }}\n          ></Column>\n          {/* \n          <Column\n            rowEditor={() => {\n              return <div>{\"Edit\"}</div>;\n            }}\n            header=\"Action\"\n            bodyStyle={{ textAlign: \"center\" }}\n            style={{ width: \"40px\" }}\n            title=\"Edit selected item\"\n          ></Column> */}\n          {grp4Items[2].is_write == true && (\n            <Column\n              rowEditor={() => {\n                return <div>{\"Edit\"}</div>;\n              }}\n              header=\"Action\"\n              bodyStyle={{ textAlign: \"center\" }}\n              style={{ width: \"40px\" }}\n              title=\"Edit selected item\"\n            />\n          )}\n        </DataTable>\n      </div>\n      {dataObject?.is_write == true ? (\n        <div className=\"form-group col-md-2 btn-container-events center my-3\">\n          <button\n            className=\"btn btn-primary\"\n            disabled={valid}\n            title={\"Add new row\"}\n            onClick={() => {\n              addHandler();\n            }}\n          >\n            <FaPlus />\n            Add\n          </button>\n\n          <button\n            className=\"btn btn-primary\"\n            disabled={buttonDisabled}\n            title={\"Save row\"}\n            onClick={() => {\n              Save();\n            }}\n          >\n            <FaSave /> Save\n          </button>\n          <button\n            className=\"btn btn-secondary\"\n            disabled={buttonDisabled}\n            title={\"Cancel row editing\"}\n            onClick={() => {\n              Reset();\n            }}\n          >\n            <ImCross fontSize={\"11px\"} /> Cancel\n          </button>\n        </div>\n      ) : (\n        \"\"\n      )}\n      {loader ? <Loader handleAbort={handleAbort} /> : \"\"}\n    </>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { DataTable } from \"primereact/datatable\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport DatePicker from \"react-datepicker\";\nimport { environment } from \"../../environments/environment\";\nimport { Column } from \"primereact/column\";\nimport { ReactSearchAutocomplete } from \"react-search-autocomplete\";\nimport moment from \"moment\";\nimport { AiFillWarning } from \"react-icons/ai\";\nimport { ImCross } from \"react-icons/im\";\nimport { BiCheck } from \"react-icons/bi\";\nimport { InputTextarea } from \"primereact/inputtextarea\";\nimport { FaPlus, FaSave } from \"react-icons/fa\";\nimport ScreenBreadcrumbs from \"../Common/ScreenBreadcrumbs\";\n\nfunction ProjectDependencies(props) {\n  const { projectId, grp4Items } = props;\n  const dataObject = grp4Items.find(\n    (item) => item.display_name === \"Dependencies\"\n  );\n\n  const baseUrl = environment.baseUrl;\n  const [products, setProducts] = useState([]);\n  const [resource, setResource] = useState([]);\n  const [RaisedBy, setRaisedBy] = useState([]);\n  const [raisedDate, setRaisedDate] = useState();\n  const [targetDate, setTargetDate] = useState();\n  const [AssingedTo, setAssingedTo] = useState(\"\");\n  const [rowId, setRowId] = useState([]);\n  const [prjName, setPrjName] = useState([]);\n  const [projectData, setProjectData] = useState([]);\n\n  const [status, setStatus] = useState([]);\n  const [priority, setPriority] = useState([]);\n  const [type, setType] = useState([]);\n  const [buttonDisabled, setButtonDisabled] = useState(true);\n  const [valid, setValid] = useState(false);\n  const [validateproject, setValidateproject] = useState(false);\n  const [addMessage, setAddMessage] = useState(false);\n  const [editmsg, setEditAddmsg] = useState(false);\n\n  const loggedUserId = localStorage.getItem(\"resId\");\n  const initialValue1 = {\n    id: \"\",\n    dependency_name: \"\",\n    Type: \"\",\n    Priority: \"\",\n    RaisedBy: \"\",\n    raised_date: \"\",\n    target_date: \"\",\n    AssingedTo: \"\",\n    phase_affected: \"\",\n    Status: \"\",\n  };\n  const [formEditData, setFormEditData] = useState(initialValue1);\n  const [routes, setRoutes] = useState([]);\n  let textContent = \"Delivery\";\n  let currentScreenName = [\"Projects\", \"Open\", \"Monitoring\", \"Dependencies\"];\n\n  useEffect(() => {\n    getMenus();\n  }, []);\n\n  const getMenus = () => {\n    axios({\n      method: \"GET\",\n      url: baseUrl + `/CommonMS/master/getMenus?loggedUserId=${loggedUserId}`,\n    }).then((resp) => {\n      let data = resp.data;\n\n      data.forEach((item) => {\n        if (item.display_name === textContent) {\n          setRoutes([item]);\n        }\n      });\n    });\n  };\n  // ---------------------dropDownApi's---------------------\n\n  const getStatus = () => {\n    axios\n      .get(baseUrl + `/ProjectMS/getAllStatus`)\n\n      .then((Response) => {\n        let status = [];\n        let data = Response.data;\n        data.length > 0 &&\n          data.forEach((e) => {\n            let StatusObj = {\n              label: e.lkup_name,\n              value: e.id,\n            };\n            status.push(StatusObj);\n          });\n        setStatus(data);\n      })\n      .catch((error) => console.log(error));\n  };\n\n\n  const getPriority = () => {\n    axios\n      .get(baseUrl + `/ProjectMS/getAllPriority`)\n\n      .then((Response) => {\n        let priority = [];\n        let data = Response.data;\n        data.length > 0 &&\n          data.forEach((e) => {\n            let PriorityObj = {\n              label: e.lkup_name,\n              value: e.id,\n            };\n            priority.push(PriorityObj);\n          });\n        setPriority(data);\n      })\n      .catch((error) => console.log(error));\n  };\n\n  const getType = () => {\n    axios\n      .get(baseUrl + `/ProjectMS/getAllType`)\n\n      .then((Response) => {\n        let type = [];\n        let data = Response.data;\n        data.length > 0 &&\n          data.forEach((e) => {\n            let TypeObj = {\n              label: e.lkup_name,\n              value: e.id,\n            };\n            type.push(TypeObj);\n          });\n        setType(data);\n      })\n      .catch((error) => console.log(error));\n  };\n\n  // -------------------api for autocomplete\n  const resourceFnc = async () => {\n    await axios({\n      method: \"get\",\n      url: baseUrl + `/ProjectMS/risks/getAssignedData`,\n    })\n      .then((res) => {\n        let manger = res.data;\n        setResource(manger);\n      })\n      .catch((error) => {\n        console.log(\"error :\" + error);\n      });\n  };\n  useEffect(() => {\n    resourceFnc();\n    getStatus();\n    getPriority();\n    getType();\n  }, []);\n\n  // ========================================Get API for displaying Data===========================================\n\n  const getData = () => {\n    axios({\n      url:\n        baseUrl +\n        `/ProjectMS/getDependencyData?projectId=${projectId}`,\n    }).then((resp) => {\n      let GetData = resp.data;\n\n      for (let i = 0; i < GetData.length; i++) {\n        GetData[i][\"raised_date\"] =\n          GetData[i][\"raised_date\"] == null\n            ? \"\"\n            : moment(GetData[i][\"raised_date\"]).format(\"DD-MMM-YYYY\");\n        GetData[i][\"target_date\"] =\n          GetData[i][\"target_date\"] == null\n            ? \"\"\n            : moment(GetData[i][\"target_date\"]).format(\"DD-MMM-YYYY\");\n      }\n      setProducts(() => GetData);\n\n    });\n  };\n  useEffect(() => {\n    getData();\n  }, []);\n\n  // ==================================================================================================================\n\n  const onRowEditComplete = (e) => {\n    let _products = [...products];\n    let { newData, index } = e;\n    _products[index] = newData;\n    setProducts(_products);\n    postData(e.newData);\n  };\n\n  // ========================================POST API for PUT,POST===========================================\n  let raisedby = moment(new Date()).format(\"YYYY-MM-DD\");\n  const postData = (rowData) => {\n    rowData[\"AssingedTo\"] =\n      AssingedTo.name == undefined ? rowData[\"AssingedTo\"] : AssingedTo.name;\n    rowData[\"assigned_to_id\"] =\n      AssingedTo.id == undefined ? rowData[\"assigned_to_id\"] : AssingedTo.id;\n\n    rowData[\"RaisedBy\"] =\n      RaisedBy.name == undefined ? rowData[\"RaisedBy\"] : RaisedBy.name;\n    rowData[\"raised_by_id\"] =\n      RaisedBy.id == undefined ? rowData[\"raised_by_id\"] : RaisedBy.id;\n\n    if (\n      rowData.dependency_name == \"\" ||\n      rowData.Type == \"\" ||\n      rowData.Priority == \"\"\n    ) {\n      setValidateproject(true);\n    } else {\n      axios({\n        method: \"post\",\n        url:\n          baseUrl +\n          `/ProjectMS/postDependencyData`,\n\n        data: {\n          id: rowData.id,\n          projectId: projectId,\n          isActive: 1,\n          dependencyName: rowData.dependency_name,\n          typeId: rowData.type_id,\n          priorityId: rowData.priority_id,\n          raisedById:\n            rowData.raised_by_id == undefined ||\n              rowData.raised_by_id == \"\" ||\n              rowData.raised_by_id == null\n              ? parseInt(loggedUserId) + parseInt(1)\n              : rowData.raised_by_id,\n          raisedDate:\n            rowData.raised_date == undefined ||\n              rowData.raised_date == \"\" ||\n              rowData.raised_date == null\n              ? raisedby\n              : moment(rowData.raised_date).format(\"YYYY-MM-DD\"),\n          targetDate:\n            rowData.target_date == undefined || rowData.target_date == \"\"\n              ? \"\"\n              : moment(rowData.target_date).format(\"YYYY-MM-DD\"),\n          assignedToId:\n            rowData.assigned_to_id == undefined || rowData.assigned_to_id == \"\"\n              ? \"\"\n              : rowData.assigned_to_id,\n          phaseAffected: rowData.phase_affected,\n          statusId: rowData.status_id == null ? 576 : rowData.status_id,\n        },\n      }).then((response) => {\n        response.data.status == \"Saved Successfully\"\n          ? setAddMessage(true)\n          : setEditAddmsg(true);\n        getData();\n        setValidateproject(false);\n        setTimeout(() => {\n          setAddMessage(false);\n          setEditAddmsg(false);\n        }, 1000);\n      });\n\n      setButtonDisabled(true);\n      setValid(false);\n    }\n  };\n\n  // ==================================================================================================================\n  let sideArrow = document.getElementsByClassName(\n    \"p-paginator-next p-paginator-element p-link\"\n  );\n  let sideDoubleArrow = document.getElementsByClassName(\n    \"p-paginator-last p-paginator-element p-link\"\n  );\n\n  const removeFirstRowIfEmpty = (prod) => {\n    Object.keys(prod).forEach((d) => {\n      if ([\"\", null, undefined, \" \"].includes(prod[d])) {\n        setProducts(products.slice(1));\n        setValid((prev) => !prev);\n        return;\n      }\n    });\n  };\n\n  useEffect(() => {\n    let prod = products[0];\n    sideArrow[0]?.addEventListener(\"click\", function () {\n      removeFirstRowIfEmpty(prod);\n    });\n\n    sideDoubleArrow[0]?.addEventListener(\"click\", function () {\n      removeFirstRowIfEmpty(prod);\n    });\n\n    if (products[0]?.dependency_name == \"\") {\n      document.getElementsByClassName(\"p-row-editor-init p-link\")[0].click();\n\n      setTimeout(() => {\n        document\n\n          .getElementsByClassName(\"p-row-editor-cancel p-link\")[0]\n          ?.addEventListener(\n            \"click\",\n\n            function (e) {\n              if (products[0]?.dependency_name == \"\") {\n                setProducts(products.slice(1, products.length));\n                setButtonDisabled(true);\n                setValid(false);\n                setValidateproject(false);\n              }\n            },\n\n            true\n          );\n      }, 200);\n    }\n  }, [products]);\n\n  // ========================================Getting ProjectName for the project we choose===========================================\n\n  const getProjectName = () => {\n    axios({\n      method: \"get\",\n      url: baseUrl + `/ProjectMS/Audit/getProjectName?projectId=${projectId}`,\n    })\n      .then(function (response) {\n        let resp = response.data;\n        setPrjName(resp);\n      })\n      .catch(function (response) { });\n  };\n\n  // ========================================Getting projectCode for the project we choose===========================================\n\n  const getProjectOverviewData = () => {\n    axios({\n      method: \"get\",\n      url:\n        baseUrl +\n        `/ProjectMS/Audit/projectOverviewDetails?projectId=${projectId}`,\n    })\n      .then(function (response) {\n        let resp = response.data;\n        setProjectData(resp);\n      })\n      .catch(function (response) { });\n  };\n\n  useEffect(() => {\n    getProjectOverviewData();\n    getProjectName();\n  }, []);\n\n  const handleChange1 = (e) => {\n    const { id, name, value } = e.target;\n    setFormEditData((prev) => ({ ...prev, [id]: value }));\n  };\n\n  useEffect(() => {\n  }, [formEditData]);\n\n  // ------------------------------for column body -----------------------------\n\n  const handleBodyDependency = (data) => {\n    return (\n      <>\n        <input\n          id=\"dependency_name\"\n          title={data.dependency_name}\n          value={data.dependency_name}\n          type=\"text\"\n          autoComplete=\"off\"\n          required\n          disabled\n          className=\"ellipsis\"\n        />\n      </>\n    );\n  };\n  const handleBodyType = (data) => {\n    return (\n      <>\n        <input\n          id=\"Type\"\n          title={data.Type}\n          value={data.Type}\n          type=\"text\"\n          autoComplete=\"off\"\n          required\n          disabled\n          className=\"ellipsis\"\n        />\n      </>\n    );\n  };\n\n  const handleBodyPriority = (data) => {\n    return (\n      <>\n        <input\n          id=\"Priority\"\n          title={data.Priority}\n          value={data.Priority}\n          type=\"text\"\n          autoComplete=\"off\"\n          required\n          disabled\n          className=\"ellipsis\"\n        />\n      </>\n    );\n  };\n  const handleBodyRaisedBy = (data) => {\n    return (\n      <>\n        <input\n          id=\"RaisedBy\"\n          title={data.RaisedBy}\n          value={data.RaisedBy}\n          type=\"text\"\n          autoComplete=\"off\"\n          required\n          disabled\n          className=\"ellipsis\"\n        />\n      </>\n    );\n  };\n  const handleBodyRaisedDate = (data) => {\n    return (\n      <>\n        <input\n          id=\"raised_date\"\n          title={data.raised_date}\n          value={data.raised_date}\n          type=\"text\"\n          autoComplete=\"off\"\n          required\n          disabled\n          className=\"ellipsis\"\n        />\n      </>\n    );\n  };\n  const handleBodyTargetDate = (data) => {\n    return (\n      <>\n        <input\n          id=\"target_date\"\n          title={data.target_date}\n          value={data.target_date}\n          type=\"text\"\n          autoComplete=\"off\"\n          required\n          disabled\n          className=\"ellipsis\"\n        />\n      </>\n    );\n  };\n  const handleBodyAssignedTo = (data) => {\n    return (\n      <>\n        <input\n          id=\"AssingedTo\"\n          title={data.AssingedTo}\n          value={data.AssingedTo}\n          type=\"text\"\n          autoComplete=\"off\"\n          required\n          disabled\n          className=\"ellipsis\"\n        />\n      </>\n    );\n  };\n  const handleBodyPhaseEffected = (data) => {\n    return (\n      <>\n        <input\n          id=\"phase_affected\"\n          title={data.phase_affected}\n          value={data.phase_affected}\n          type=\"text\"\n          autoComplete=\"off\"\n          required\n          disabled\n          className=\"ellipsis\"\n        />\n      </>\n    );\n  };\n  const handleBodyStatus = (data) => {\n    return (\n      <>\n        <input\n          id=\"Status\"\n          title={data.Status}\n          value={data.Status}\n          type=\"text\"\n          autoComplete=\"off\"\n          required\n          disabled\n          className=\"ellipsis\"\n        />\n      </>\n    );\n  };\n\n  // ------------------------------for columns functions-----------------------------\n\n  const textEditorDependency = (products) => {\n    setRowId(products.rowData.id);\n    return (\n      <>\n        <input\n          className={`error ${validateproject && !products.rowData.dependency_name\n            ? \"error-block\"\n            : \"\"\n            }`}\n          type=\"text\"\n          value={products.rowData.dependency_name}\n          id=\"dependency_name\"\n          onChange={(e) => {\n            products.editorCallback(e.target.value);\n          }}\n        />\n      </>\n    );\n  };\n\n  const DropdownType = (rowData) => {\n    return (\n      <>\n        <select\n          id=\"type_id\"\n          className={`error${validateproject && !rowData.type_id ? \" error-block\" : \"\"\n            }`}\n          name=\"Type\"\n          onChange={(e) => {\n            rowData.editorCallback(e.target.value);\n\n            type.map((a) => {\n              if (a.id == e.target.value) {\n                rowData[\"rowData\"][\"Type\"] = a.lkup_name;\n                rowData[\"rowData\"][\"type_id\"] = e.target.value;\n              }\n            });\n          }}\n        >\n          <option value=\"\">{\"<<Please Select>>\"}</option>\n          {type?.map((Item, index) => (\n            <option\n              key={index}\n              value={Item.id}\n              selected={Item.id == rowData.rowData.type_id ? true : false}\n            >\n              {Item.lkup_name}\n            </option>\n          ))}\n        </select>\n      </>\n    );\n  };\n\n  const DropdownPriority = (rowData) => {\n    return (\n      <>\n        <select\n          id=\"priority_id\"\n          className={`error${validateproject && !rowData.priority_id ? \" error-block\" : \"\"\n            }`}\n          name=\"Priority\"\n          onChange={(e) => {\n            rowData.editorCallback(e.target.value);\n            priority.map((a) => {\n              if (a.id == e.target.value) {\n                rowData[\"rowData\"][\"Priority\"] = a.lkup_name;\n                rowData[\"rowData\"][\"priority_id\"] = e.target.value;\n              }\n            });\n          }}\n        >\n          <option value=\"\">{\"<<Please Select>>\"}</option>\n          {priority?.map((Item, index) => (\n            <option\n              key={index}\n              value={Item.id}\n              selected={Item.id == rowData.rowData.priority_id ? true : false}\n            >\n              {Item.lkup_name}\n            </option>\n          ))}\n        </select>\n      </>\n    );\n  };\n\n  const textEditor = (products) => {\n\n    return (\n      <div className=\"autoComplete-container\">\n        <ReactSearchAutocomplete\n          items={resource}\n          id=\"raised_by_id\"\n          name=\"Raised By\"\n          inputSearchString={\n            products.rowData.RaisedBy == null ? \"\" : products.rowData.RaisedBy\n          }\n          onSelect={(selectedItem) => {\n            setRaisedBy(selectedItem);\n          }}\n          showIcon={false}\n        />\n      </div>\n    );\n  };\n\n  const setDatePicker = (products, options) => {\n    return (\n      <DatePicker\n        name=\"raised_date\"\n        selected={raisedDate}\n        id=\"raised_date\"\n        value={products.rowData.raised_date}\n        dateFormat=\"dd-MMM-yyyy\"\n        onChange={(e) => {\n          products.editorCallback(moment(e).format(\"DD-MMM-yyyy\")),\n            setFormEditData((prev) => ({\n              ...prev,\n              [\"raised_date\"]: moment(e).format(\"yyyy-MM-DD\"),\n            }));\n        }}\n        onKeyDown={(e) => {\n          e.preventDefault();\n        }}\n      />\n    );\n  };\n\n  const setDatePicker2 = (products, options) => {\n    return (\n      <DatePicker\n        name=\"target_date\"\n        selected={targetDate}\n        id=\"target_date\"\n        value={products.rowData.target_date}\n        dateFormat=\"dd-MMM-yyyy\"\n        onChange={(e) => {\n          products.editorCallback(moment(e).format(\"DD-MMM-yyyy\")),\n            setFormEditData((prev) => ({\n              ...prev,\n              [\"target_date\"]: moment(e).format(\"yyyy-MM-DD\"),\n            }));\n        }}\n        onKeyDown={(e) => {\n          e.preventDefault();\n        }}\n      />\n    );\n  };\n\n  const textEditor1 = (products) => {\n    return (\n      <div className=\"autoComplete-container\">\n        <ReactSearchAutocomplete\n          items={resource}\n          id=\"assigned_to_id\"\n          name=\"AssingedTo\"\n          inputSearchString={\n            products.rowData.AssingedTo == null\n              ? \"\"\n              : products.rowData.AssingedTo\n          }\n          onSelect={(selectedItem) => {\n            setAssingedTo(selectedItem);\n          }}\n          showIcon={false}\n        />\n      </div>\n    );\n  };\n\n  const textEditorPhaseAffected = (products) => {\n    return (\n      <>\n        <InputTextarea\n          value={products.rowData.phase_affected}\n          id=\"phase_affected\"\n          onChange={(e) => products.editorCallback(e.target.value)}\n          rows={4}\n          cols={30}\n        />\n      </>\n    );\n  };\n\n  const DropDownStatus = (rowData) => {\n    return (\n      <>\n        <select\n          id=\"status_id\"\n          className=\"cancel\"\n          name=\"Status\"\n          onChange={(e) => {\n            rowData.editorCallback(e.target.value);\n\n            status.map((a) => {\n              if (a.id == e.target.value) {\n                rowData[\"rowData\"][\"Status\"] = a.lkup_name;\n                rowData[\"rowData\"][\"status_id\"] = e.target.value;\n              }\n            });\n          }}\n        >\n          <option value=\"\">{\"<<Please Select>>\"}</option>\n          {status?.map((Item, index) => (\n            <option\n              key={index}\n              value={Item.id}\n              selected={Item.id == rowData.rowData.status_id ? true : false}\n            >\n              {Item.lkup_name}\n            </option>\n          ))}\n        </select>\n      </>\n    );\n  };\n\n  const addHandler = () => {\n    if (!valid) {\n      setValid(true);\n      setButtonDisabled(false);\n    }\n    const data = {\n      dependency_name: \"\",\n      Type: \"\",\n      Priority: \"\",\n      RaisedBy: \"\",\n      raised_date: \"\",\n      target_date: \"\",\n      AssingedTo: \"\",\n      phase_affected: \"\",\n      Status: \"\",\n    };\n    let dt = [];\n    dt.push(data);\n    setProducts([...dt, ...products]);\n  };\n  const renderSNo = (rowData, column) => {\n    const index = products.indexOf(rowData);\n    const sNo = index + 1;\n    return <span>{sNo}</span>;\n  };\n  const Save = () => {\n    document\n      .getElementsByClassName(\"p-row-editor-save-icon pi pi-fw pi-check\")[0]\n      ?.click();\n  };\n  const Reset = () => {\n    document.getElementsByClassName(\"p-row-editor-cancel p-link\")[0]?.click();\n    setValidateproject(false);\n  };\n\n  return (\n    <>\n      {validateproject ? (\n        <div className=\"statusMsg error\">\n          <span>\n            <AiFillWarning />\n            &nbsp;\n            {\"Please provide valid values for highlighted values\"}\n          </span>\n        </div>\n      ) : (\n        \"\"\n      )}\n      {addMessage ? (\n        <div className=\"statusMsg success\">\n          <BiCheck />\n          {\"Dependency saved successfully.\"}\n        </div>\n      ) : (\n        \"\"\n      )}\n      {editmsg ? (\n        <div className=\"statusMsg success\">\n          <span className=\"errMsg\">\n            <BiCheck size=\"1.4em\" strokeWidth={{ width: \"100px\" }} />\n            {\"Dependency updated successfully.\"}\n          </span>\n        </div>\n      ) : (\n        \"\"\n      )}\n      <div className=\"pageTitle\">\n        <div className=\"childOne\">\n          <h2>\n            {prjName}\n          </h2>\n        </div>\n        <div className=\"childTwo\">\n          <h2>Dependencies</h2>\n        </div>\n        <div className=\"childThree\"></div>\n      </div>\n      <ScreenBreadcrumbs\n        routes={routes}\n        currentScreenName={currentScreenName}\n      />\n      &nbsp;\n      <div className=\" p-fluid darkHeader  mb-2\">\n        <DataTable\n          className=\"primeReactDataTable projDependenciesTable\"\n          paginatorTemplate=\"RowsPerPageDropdown FirstPageLink PrevPageLink CurrentPageReport NextPageLink LastPageLink\"\n          value={products}\n          editMode=\"row\"\n          onRowEditComplete={onRowEditComplete}\n          tableStyle={{ minWidth: \"auto\", width: \"auto\" }}\n          showGridlines\n          emptyMessage=\"No Data Found\"\n          paginator\n          rows={25}\n          rowHover\n          dataKey=\"id\"\n          rowsPerPageOptions={[10, 25, 50]}\n          filterDisplay=\"row\"\n          globalFilterFields={[\n            \"dependency_name\",\n            \"Type\",\n            \"Priority\",\n            \"RaisedBy\",\n            \"raised_date\",\n            \"target_date\",\n            \"AssingedTo\",\n            \"phase_affected\",\n            \"Status\",\n          ]}\n          paginationComponentOptions={{\n            rowsPerPageText: \"Records per page:\",\n            rangeSeparatorText: \"out of\",\n          }}\n          currentPageReportTemplate=\"View {first} - {last} of {totalRecords} \"\n        >\n          {/* ----------------------S.No------------------------------- */}\n\n          <Column\n            field=\"sNo\"\n            header=\"S.No\"\n            body={renderSNo}\n            style={{\n              textAlign: \"center\",\n            }}\n          />\n\n          {/* ----------------------InputText------------------------------- */}\n\n          <Column\n            field=\"dependency_name\"\n            header={\n              <span>\n                Dependency/Constraint<span className=\"error-text\">*</span>\n              </span>\n            }\n            body={handleBodyDependency}\n            editor={(options) => textEditorDependency(options)}\n            sortable\n            filter\n          ></Column>\n\n          {/* ---------------------DropDown----------------------------------*/}\n          <Column\n            field=\"Type\"\n            header={\n              <span>\n                Type<span className=\"error-text\">*</span>\n              </span>\n            }\n            body={handleBodyType}\n            editor={(options) => DropdownType(options)}\n            sortable\n            filter\n            filterMatchMode=\"contains\"\n          />\n\n          {/* ---------------------DropDown----------------------------------*/}\n          <Column\n            field=\"Priority\"\n            header={\n              <span>\n                Priority<span className=\"error-text\">*</span>\n              </span>\n            }\n            body={handleBodyPriority}\n            editor={(options) => DropdownPriority(options)}\n            sortable\n            filter\n            filterMatchMode=\"contains\"\n          ></Column>\n          {/* --------------------AutoComplete------------------------------- */}\n          <Column\n            field=\"RaisedBy\"\n            header=\"Raised By\"\n            sortable\n            body={handleBodyRaisedBy}\n            editor={(options) => textEditor(options)}\n            filter\n            filterMatchMode=\"contains\"\n          ></Column>\n          {/*--------------------DatePicker--------------------------------  */}\n          <Column\n            field=\"raised_date\"\n            header=\"Raised Date\"\n            body={handleBodyRaisedDate}\n            editor={(options) => setDatePicker(options)}\n            sortable\n            filterMatchMode=\"contains\"\n            filter\n          />\n          {/*--------------------DatePicker--------------------------------  */}\n          <Column\n            field=\"target_date\"\n            header=\"Target Date\"\n            body={handleBodyTargetDate}\n            editor={(options) => setDatePicker2(options)}\n            sortable\n            filter\n            filterMatchMode=\"contains\"\n          />\n          {/* --------------------AutoComplete------------------------------- */}\n          <Column\n            field=\"AssingedTo\"\n            header=\"Assinged To\"\n            body={handleBodyAssignedTo}\n            sortable\n            editor={(options) => textEditor1(options)}\n            filter\n            filterMatchMode=\"contains\"\n          ></Column>\n          {/* ----------------------InputText------------------------------- */}\n\n          <Column\n            field=\"phase_affected\"\n            header=\"Phase/Area affected\"\n            body={handleBodyPhaseEffected}\n            editor={(options) => textEditorPhaseAffected(options)}\n            sortable\n            style={{ width: \"150px\" }}\n            filter\n          ></Column>\n          {/* ----------------------DropDown------------------------------- */}\n\n          <Column\n            field=\"Status\"\n            header=\"Status\"\n            body={handleBodyStatus}\n            editor={(options) => DropDownStatus(options)}\n            sortable\n            filter\n          ></Column>\n          {/* ----------------------Actions------------------------------- */}\n          {grp4Items[4].is_write == true && (\n            <Column\n              rowEditor={() => {\n                return <div>{\"Edit\"}</div>;\n              }}\n              header=\"Action\"\n              bodyStyle={{ textAlign: \"center\" }}\n              style={{ width: \"40px\" }}\n              title=\"Edit selected item\"\n            />\n          )}\n        </DataTable>\n      </div>\n      {dataObject?.is_write == true ? (\n        <div className=\"form-group col-md-2 btn-container-events center my-3\">\n          <button\n            className=\"btn btn-primary\"\n            disabled={valid}\n            title={\"Add new row\"}\n            onClick={() => {\n              addHandler();\n            }}\n          >\n            <FaPlus />\n            Add\n          </button>\n\n          <button\n            className=\"btn btn-primary\"\n            disabled={buttonDisabled}\n            title={\"Save row\"}\n            onClick={() => {\n              Save();\n            }}\n          >\n            <FaSave /> Save\n          </button>\n          <button\n            className=\"btn btn-secondary\"\n            disabled={buttonDisabled}\n            title={\"Cancel row editing\"}\n            onClick={() => {\n              Reset();\n            }}\n          >\n            <ImCross fontSize={\"11px\"} /> Cancel\n          </button>\n        </div>\n      ) : (\n        \"\"\n      )}\n    </>\n  );\n}\nexport default ProjectDependencies;\n","import React, { useRef } from \"react\";\nimport { useState, useEffect } from \"react\";\nimport { ImSearch } from \"react-icons/im\";\nimport { SlExclamation } from \"react-icons/sl\";\nimport { VscSave } from \"react-icons/vsc\";\nimport { FaCheck, FaSave } from \"react-icons/fa\";\nimport { FaChevronCircleDown, FaChevronCircleUp } from \"react-icons/fa\";\nimport { CCollapse } from \"@coreui/react\";\nimport DatePicker from \"react-datepicker\";\nimport axios from \"axios\";\nimport { ReactSearchAutocomplete } from \"react-search-autocomplete\";\nimport AutoComplete from \"./IssuesAutocomplete\";\nimport moment from \"moment\";\nimport { environment } from \"../../environments/environment\";\nimport { AiFillWarning } from \"react-icons/ai\";\nimport FirstTable from \"./ProjectCompailanceFirstTable\";\nimport Loader from \"../Loader/Loader\";\nimport { BiCheck } from \"react-icons/bi\";\nimport GlobalValidation from \"../ValidationComponent/GlobalValidation\";\nimport GlobalCancel from \"../ValidationComponent/GlobalCancel\";\nimport { Column } from \"ag-grid-community\";\nimport { DataTable } from \"primereact/datatable\";\nimport ScreenBreadcrumbs from \"../Common/ScreenBreadcrumbs\";\n\nfunction ProjectCompliance(props) {\n  const { projectId, grp6Items } = props;\n  console.log(grp6Items[1].is_write);\n  const loggedUserId = localStorage.getItem(\"resId\");\n  const loggedUserName = localStorage.getItem(\"resName\");\n  const baseUrl = environment.baseUrl;\n  const [visible, setVisible] = useState(false);\n  const [cheveronIcon, setCheveronIcon] = useState(FaChevronCircleUp);\n  const currentDate = new Date();\n  const [selectedDate, setSelectedDate] = useState(\n    new Date(currentDate.getFullYear(), currentDate.getMonth(), 1)\n  );\n  const [managersname, setManagersName] = useState([]);\n  const [reviewdonebynames, setReviewDoneByNames] = useState([]);\n  const [reviewDate, setReviewDate] = useState(null);\n  const [projectData, setProjectData] = useState([]);\n  const [tableData, setTableData] = useState([]);\n  const [comments, setComments] = useState([]);\n  const [prjtype, setPrjType] = useState([]);\n  const [compliancetable, setComplianceTable] = useState([]);\n  const [selecttype, setSelectType] = useState([]);\n  const [dropdowns, setDropDowns] = useState([]);\n  const [newDate, setNewDate] = useState(new Date());\n  const [enableSave, setEnableSave] = useState(false);\n  const [enableCopyBtn, setEnableCopyBtn] = useState(false);\n  const [validationMessage, setValidationMessage] = useState(false);\n  const [validationMessageforcopy, setValidationMessageForCopy] =\n    useState(false);\n  const [submitdatamessage, setSubmitDataMessage] = useState(false);\n  const [copymessage, setCopyMessage] = useState(false);\n  let date = moment(selectedDate, \"DD-MM-YYYY\").format(\"YYYY-MM-DD\");\n  const formattedDate = moment(newDate).format(\"YYYY-MM-DD HH:mm:ss\");\n  const [previousmonthdate, setPreviousMonthdate] = useState([]);\n  const [loader, setLoader] = useState(false);\n  const [addmsg, setAddmsg] = useState(false);\n  const [savesubmitmsg, setSaveSubmitMsg] = useState(false);\n  const initialValue1 = {};\n  const initialValue = {};\n  const initialValue2 = {};\n  const initialValue3 = {};\n  const initialValue4 = {};\n  const [pcqracomments, setPcqaComments] = useState(initialValue1);\n  const [pmcomments, setPmComments] = useState(initialValue3);\n  const [weightagedata, setWeightageData] = useState(initialValue4);\n  console.log(weightagedata);\n  const [dropdowndata, setDropdownData] = useState(initialValue);\n  const [managerid, SetManagerId] = useState([]);\n  const [reviewbyid, setRewviewById] = useState([]);\n  const [efforthrs, SetEffortHrs] = useState([]);\n  const [copyPrevMonth, setcopyPrevMonth] = useState(false);\n  const [copyPrevMonthIsvisible, setcopyPrevMonthIsvisible] = useState(true);\n  const [pcqasubmitdata, setPcqasubmitData] = useState(false);\n  const [pmsubmitdata, setPmSubmitData] = useState(false);\n  const [warnMsg, setWarnMsg] = useState(false);\n  const [pcqa, setpcqa] = useState(false);\n  const [pcqaCompl, setpcqaCompl] = useState(false);\n  const [saveBtn, setsaveBtn] = useState(false);\n  const [submitBtn, setsubmitBtn] = useState(false);\n  const [pm, setpm] = useState(true);\n  const [weightage, setWeightage] = useState(initialValue2);\n  const [currentMonth1, setCurrentMonth1] = useState(new Date().getMonth());\n  const [hideButton, setHideButton] = useState(true);\n  const currentMonth = currentDate.getMonth() + 1;\n  const hideButtonclick = () => {\n    const selectedMonth = parseInt(date.split(\"-\")[1]);\n    const isCurrentMonth = currentMonth === selectedMonth;\n    setHideButton(isCurrentMonth);\n  };\n\n  const abortController = useRef(null);\n  const enableDisableButtons = () => {\n    if (\n      compliancetable == undefined ||\n      compliancetable == \"undefined\" ||\n      compliancetable.length == 0 ||\n      (!compliancetable[0]?.is_pcqa_submit && !compliancetable[0]?.is_pm_submit)\n    ) {\n      if (isUserManager) {\n        setpcqa(true);\n        setpcqaCompl(true);\n        setsaveBtn(true);\n        setsubmitBtn(true);\n        setpm(true);\n      } else {\n        setpm(true);\n        setpcqa(false);\n        setpcqaCompl(false);\n        setsubmitBtn(false);\n        if (copyPrevMonthIsvisible) {\n          setcopyPrevMonth(true);\n        }\n      }\n    } else if (\n      compliancetable[0]?.is_pcqa_submit &&\n      !compliancetable[0]?.is_pm_submit\n    ) {\n      if (isUserManager) {\n        setpcqa(true);\n        setpcqaCompl(true);\n        setsaveBtn(true);\n        setsubmitBtn(true);\n        setpm(true);\n      } else {\n        setpm(false);\n        setpcqa(false);\n        setpcqaCompl(false);\n        setsaveBtn(false);\n        setsubmitBtn(false);\n        if (copyPrevMonthIsvisible) {\n          setcopyPrevMonth(true);\n        }\n      }\n    } else if (\n      compliancetable[0]?.is_pcqa_submit &&\n      compliancetable[0]?.is_pm_submit\n    ) {\n      if (isUserManager) {\n        setpcqa(false);\n        setpcqaCompl(false);\n        setpm(false);\n        setsaveBtn(false);\n        setsubmitBtn(false);\n      } else {\n        setpm(false);\n        setpcqa(true);\n        setpcqaCompl(true);\n        setsaveBtn(true);\n        setsubmitBtn(true);\n        if (copyPrevMonthIsvisible) {\n          setcopyPrevMonth(true);\n        }\n      }\n    } else if (\n      !compliancetable[0]?.is_pcqa_submit &&\n      compliancetable[0]?.is_pm_submit\n    ) {\n      if (isUserManager) {\n        setpcqa(false);\n        setpcqaCompl(false);\n        setpm(false);\n        setsaveBtn(false);\n        setsubmitBtn(false);\n      } else {\n        setpm(false);\n        setpcqa(false);\n        setpcqaCompl(false);\n        setsaveBtn(false);\n        setsubmitBtn(false);\n        if (copyPrevMonthIsvisible) {\n          setcopyPrevMonth(true);\n        }\n      }\n      if (\n        !isUserManager &&\n        compliancetable[0]?.is_pcqa_submit == true &&\n        compliancetable[0]?.is_pm_submit == false\n      ) {\n        setsaveBtn(true);\n      }\n      if (isUserManager && compliancetable.length === 0) {\n        setEnableSave(true);\n        setpcqa(true);\n      }\n    }\n  };\n  //=========================\n  useEffect(() => {\n    const parse = {\n      month: new Date().toISOString(), // Example: Set the month to the current date\n    };\n    const getCurrentMonthFirstDate = () => {\n      const today = new Date();\n      const year = today.getFullYear();\n      const month = today.getMonth() + 1;\n      const firstDate = new Date(year, month - 1, 1);\n      return firstDate;\n    };\n\n    const currMonthFirstDate = getCurrentMonthFirstDate();\n    const firstDayOfSelMonth = new Date(parse.month);\n    const today = new Date();\n    const dateSplit = today.toISOString().split(\"-\");\n\n    if (firstDayOfSelMonth < currMonthFirstDate) {\n      setEnableSave(false);\n      setEnableCopyBtn(false);\n    } else if (today > currMonthFirstDate) {\n      const enableDays = {\n        fromDate: 5,\n        toDate: 30,\n      };\n\n      if (\n        parseInt(dateSplit[2]) >= enableDays.fromDate &&\n        parseInt(dateSplit[2]) <= enableDays.toDate\n      ) {\n        setEnableSave(true);\n      } else {\n        setEnableSave(false);\n      }\n\n      if (compliancetable.length === 0) {\n        setEnableCopyBtn(true);\n      } else {\n        setEnableCopyBtn(false);\n      }\n    }\n\n    const enableSaveGlobal = 0; // Manually set enableSaveGlobal to 0\n    if (compliancetable.length === 0) {\n      setEnableSave(true);\n    }\n  }, []);\n\n  //===============\n\n  const handleAbort = () => {\n    abortController.current && abortController.current.abort();\n    setLoader(false);\n  };\n\n  const ref = useRef([]);\n\n  const filterDates = (date) => {\n    const selectedMonth = moment(date).startOf(\"month\");\n    const currentMonth = moment(currentDate).startOf(\"month\");\n    return selectedMonth.isSame(currentMonth, \"month\");\n  };\n\n  const [selectedDate1, setSelectedDate1] = useState(\n    compliancetable[0]?.audit_date\n      ? moment(compliancetable[0]?.audit_date, \"YYYY-MM-DD\").toDate()\n      : null\n  );\n  const handleDateChange1 = (date) => {\n    const updateDate = [...compliancetable];\n    updateDate.forEach((item) => {\n      item.audit_date = date;\n    });\n    setSelectedDate1(date);\n  };\n\n  const disablePreviousMonths = (date) => {\n    const selectedMonth = moment(date).startOf(\"month\");\n    const currentMonth = moment(currentDate).startOf(\"month\");\n    return selectedMonth.isBefore(currentMonth, \"month\");\n  };\n\n  const disableFutureMonths = (date) => {\n    const selectedMonth = moment(date).startOf(\"month\");\n    const currentMonth = moment(currentDate).startOf(\"month\");\n    return selectedMonth.isAfter(currentMonth, \"month\");\n  };\n\n  //=======================\n  const targetCounts = {};\n  const targetSums = {};\n  let sum = 0;\n  let sumCounts = 0;\n  let selectedTargetCount = 0;\n  console.log(weightage);\n  console.log(compliancetable?.[0]);\n  console.log(comments);\n  console.log(targetCounts);\n  // useEffect(() => {\n  //   if (comments.audit_check_point_id) {\n  //     const auditCheckPointId = comments.audit_check_point_id.toString();\n  //     const updatedWeightage = { ...weightage };\n\n  //     if (updatedWeightage[auditCheckPointId]) {\n  //       updatedWeightage[auditCheckPointId].rowDataId =\n  //         comments.audit_check_point_id;\n  //       updatedWeightage[auditCheckPointId].targetValue =\n  //         comments.compliance_val.toString();\n  //       updatedWeightage[auditCheckPointId].fieldValue = parseInt(\n  //         comments.weightage\n  //       );\n  //     } else {\n  //       updatedWeightage[auditCheckPointId] = {\n  //         rowDataId: comments.audit_check_point_id,\n  //         targetValue: comments.compliance_val.toString(),\n  //         fieldValue: parseInt(comments.weightage),\n  //       };\n  //     }\n\n  //     setWeightage(updatedWeightage);\n  //   }\n  // }, [comments, setWeightage]);\n\n  // comments.forEach((comment) => {\n  //   const auditCheckPointId = comment.audit_check_point_id.toString();\n  //   const weightageData = weightage[auditCheckPointId];\n\n  //   if (weightageData) {\n  //     weightageData.rowDataId = comment.audit_check_point_id;\n  //     weightageData.fieldValue = parseInt(comment.weightage);\n  //     weightageData.targetValue = comment.compliance_val.toString();\n  //   } else {\n  //     weightage[auditCheckPointId] = {\n  //       rowDataId: comment.audit_check_point_id,\n  //       fieldValue: parseInt(comment.weightage),\n  //       targetValue: comment.compliance_val.toString(),\n  //     };\n  //   }\n  // });\n\n  ///////////////////////////\n\n  useEffect(() => {\n    if (comments.length === 0) {\n      // Comments data is not available yet, exit early\n      return;\n    }\n\n    const updatedWeightage = {};\n\n    comments.forEach((comment) => {\n      const auditCheckPointId = comment.audit_check_point_id.toString();\n      const weightageValue = parseInt(comment.weightage);\n\n      updatedWeightage[auditCheckPointId] = {\n        rowDataId: comment.audit_check_point_id,\n        fieldValue: isNaN(weightageValue) ? 0 : weightageValue,\n        targetValue: comment.compliance_val.toString(),\n      };\n    });\n\n    setWeightage(updatedWeightage);\n  }, [comments]);\n\n  ///////////////////////////////////////////////////////////\n  console.log(weightage);\n\n  Object.values(weightage).forEach((value) => {\n    const targetValue = value.targetValue;\n    const valueFieldValue = value.fieldValue;\n\n    if ([\"1205\", \"1206\", \"1207\"].includes(targetValue)) {\n      if (targetValue in targetCounts) {\n        targetCounts[targetValue]++;\n      } else {\n        targetCounts[targetValue] = 1;\n      }\n\n      if (targetValue in targetSums) {\n        targetSums[targetValue] += valueFieldValue;\n      } else {\n        targetSums[targetValue] = valueFieldValue;\n      }\n    }\n  });\n\n  const targetValuesToSum = [\"1205\", \"1206\", \"1207\"];\n  targetValuesToSum.forEach((targetValue) => {\n    if (targetValue in targetSums) {\n      sum += targetSums[targetValue];\n    }\n  });\n\n  selectedTargetCount = Object.keys(targetCounts).filter((key) =>\n    targetValuesToSum.includes(key)\n  ).length;\n\n  sumCounts = Object.values(targetCounts).reduce((acc, count) => {\n    if (\n      count !== targetCounts[\"123\"] &&\n      count !== targetCounts[\"1208\"] &&\n      count !== targetCounts[\"1209\"]\n    ) {\n      return acc + count;\n    }\n    return acc;\n  }, 0);\n  //=======================================================\n\n  const [score, setScore] = useState(0);\n  const [adherence, setAdherence] = useState(0);\n  const [statusColor, setStatusColor] = useState(\"\");\n  const [statusText, setStatusText] = useState(\"\");\n\n  console.log(weightagedata);\n  console.log(comments);\n\n  // const complianceValues = [1205, 1206, 1207];\n  // const weightages = {};\n\n  // complianceValues.forEach((complianceVal) => {\n  //   const weightage = comments\n  //     .filter((comment) => comment.compliance_val === complianceVal)\n  //     .map((comment) => comment.weightage);\n\n  //   weightages[complianceVal] = weightage;\n  // });\n\n  // console.log(weightages);\n\n  // let totalCount = 0;\n  // let sum1 = 0;\n\n  // complianceValues.forEach((complianceValue) => {\n  //   const weightageValues = weightages[complianceValue] || [];\n  //   totalCount += weightageValues.length;\n  //   sum1 += weightageValues.reduce(\n  //     (total, value) => total + parseInt(value),\n  //     0\n  //   );\n  // });\n  // let sum1205 = 0;\n  // let sum1206 = 0;\n  // let sum1207 = 0;\n\n  // weightagedata[1205]?.forEach((value) => {\n  //   sum1205 += parseInt(value);\n  // });\n\n  // weightages[1206]?.forEach((value) => {\n  //   sum1206 += parseInt(value);\n  // });\n\n  // weightages[1207]?.forEach((value) => {\n  //   sum1207 += parseInt(value);\n  // });\n\n  // console.log(\"Sum for 1205:\", sum1205);\n  // console.log(\"Sum for 1206:\", sum1206);\n  // console.log(\"Sum for 1207:\", sum1207);\n  // console.log(\"Total count:\", totalCount);\n  // console.log(\"Sum of values:\", sum1);\n  // console.log(sum1[\"1205\"]);\n\n  const calculateComplianceScore = () => {\n    const fImpl = targetCounts[\"1205\"] || 0;\n    const pImpl = targetCounts[\"1206\"] || 0;\n    const nImpl = targetCounts[\"1207\"] || 0;\n\n    const obj = {\n      fullImpl: targetSums[\"1205\"] || 0,\n      partImpl: targetSums[\"1206\"] || 0,\n      notImpl: targetSums[\"1207\"] || 0,\n      // notyet: targetSums[\"1208\"] || 0,\n      // notavilable: targetSums[\"1209\"] || 0\n    };\n\n    const implSum = sumCounts;\n    const numerator =\n      parseInt(fImpl) * obj.fullImpl * 5 + parseInt(pImpl) * obj.partImpl * 3;\n    const add =\n      parseInt(obj.fullImpl) + parseInt(obj.partImpl) + parseInt(obj.notImpl);\n    // +\n    // parseInt(obj.notyet + parseInt(obj.notavilable));\n    const denominator = parseInt(implSum) * parseInt(add);\n    const calculatedScore =\n      numerator / denominator === Infinity ? 5 : numerator / denominator;\n    const calculatedAdherence =\n      calculatedScore === Infinity ? 100 : (calculatedScore / 5) * 100;\n\n    console.log(add);\n    console.log(\"Numerator:\", numerator);\n    console.log(\"Denominator:\", denominator);\n    console.log(\"calculatedAdherence:\", calculatedAdherence);\n    console.log(\"calculatedScore:\", calculatedScore);\n    console.log(\"implSum:\", implSum);\n    console.log(\"targetCounts:\", targetCounts);\n    console.log(\"targetSums:\", targetSums);\n\n    console.log(\"calculatedAdherence:\", calculatedAdherence);\n    console.log(\"calculatedScore:\", calculatedScore);\n    const formattedAdherence = calculatedAdherence.toFixed(2);\n    const formattedScore = calculatedScore.toFixed(2);\n    setScore(formattedScore);\n    setAdherence(calculatedAdherence);\n    let calculatedStatusColor = \"\";\n    let calculatedStatusText = \"\";\n    if (calculatedAdherence > 80) {\n      calculatedStatusColor = \"Green\";\n      calculatedStatusText = 1211;\n    } else if (calculatedAdherence >= 70 && calculatedAdherence < 80) {\n      calculatedStatusColor = \"Amber\";\n      calculatedStatusText = 1212;\n    } else if (calculatedAdherence < 70) {\n      calculatedStatusColor = \"Red\";\n      calculatedStatusText = 1213;\n    } else if (isNaN(adherence)) {\n      calculatedStatusColor = \"Red\";\n      calculatedStatusText = 1213;\n    }\n    // console.log(calculatedAdherence + \"in line 394...\");\n    // console.log(calculatedStatusColor + \"in line 395....\");\n    setStatusColor(calculatedStatusColor);\n    setStatusText(calculatedStatusText);\n    // console.log(statusColor);\n    // console.log(statusText);\n    // console.log(adherence);\n    // console.log(score);\n    // console.log(formattedAdherence);\n    const updateadherence = [...compliancetable];\n    updateadherence.forEach((item) => {\n      item.process_adherence = formattedAdherence;\n    });\n\n    const updateweightedscore = [...compliancetable];\n    updateweightedscore.forEach((item) => {\n      item.weighted_score = formattedScore;\n    });\n\n    const updatestatus = [...compliancetable];\n    updatestatus.forEach((item) => {\n      item.status = calculatedStatusText;\n    });\n\n    const updatestatusname = [...compliancetable];\n    updatestatusname.forEach((item) => {\n      item.status_name = calculatedStatusColor;\n    });\n  };\n\n  useEffect(() => {\n    calculateComplianceScore();\n  }, []);\n\n  //mbjscfskd----------------------------------------------\n  const CompliancData = {\n    FullyImplemented: compliancetable[0]?.full_impl_compl\n      ? compliancetable[0]?.full_impl_compl\n      : 0,\n    PartiallyImplemented: compliancetable[0]?.parti_impl_compl\n      ? compliancetable[0]?.parti_impl_compl\n      : 0,\n    NotImplemented: compliancetable[0]?.not_impl_compl\n      ? compliancetable[0]?.not_impl_compl\n      : 0,\n    NotYetImplemented: compliancetable[0]?.not_yet_compl\n      ? compliancetable[0]?.not_yet_compl\n      : 0,\n    NotApplicable: compliancetable[0]?.not_appl_compl\n      ? compliancetable[0]?.not_appl_compl\n      : 0,\n  };\n  const oldInitail = {\n    // id: \"\",\n    // value: \"\",\n  };\n  const newInitail = {\n    // id: \"\",\n    // value: \"\",\n  };\n  const [oldData, setoldData] = useState(oldInitail);\n  const [newData, setnewData] = useState(newInitail);\n  // sdjfhsjk ------------------------------\n  const handleDateChange = (date) => {\n    setSelectedDate(date);\n  };\n  // --------------------Getting Project names in Header------------------\n  const getProjectOverviewData = () => {\n    axios({\n      method: \"get\",\n      url:\n        baseUrl +\n        `/ProjectMS/Audit/projectOverviewDetails?projectId=${projectId}`,\n    })\n      .then(function (response) {\n        let resp = response.data;\n        setProjectData(resp);\n      })\n      .catch(function (response) {});\n  };\n  // ------------------------------------------------For Projects ManagersName--------------------------------------------------------------------------\n  const getProjectMgrsByProject = () => {\n    axios({\n      method: \"get\",\n      url:\n        baseUrl +\n        `/ProjectMS/QCR/getProjectMgrsByProject?object_id=${projectId}`,\n    }).then(function (response) {\n      var res = response.data;\n      setManagersName(res);\n    });\n  };\n\n  // ------------------For Projects ReviewNames----------------\n  const isUserManager =\n    managersname.length > 0 &&\n    managersname.some((managersname) => managersname.userid == loggedUserId);\n\n  useEffect(() => {\n    getProjectMgrsByProject();\n    handleClicktable1();\n  }, [isUserManager]);\n  const getReviewDonenames = () => {\n    axios({\n      method: \"get\",\n      url: baseUrl + `/ProjectMS/QCR/ReviewDoneBy`,\n    }).then(function (response) {\n      var res = response.data;\n      setReviewDoneByNames(res);\n    });\n  };\n\n  //----------------For ComplianceTabledata-----------------------\n\n  const handleClicktable1 = () => {\n    axios({\n      method: \"get\",\n      url:\n        baseUrl +\n        `/ProjectMS/QCR/getComplianceTabledata?project_id=${projectId}&audit_month=${date}`,\n    }).then(function (response1) {\n      const Getdata = response1.data.map((item) => ({\n        ...item,\n        // process_adherence: `${item.process_adherence.toFixed(2)} %`,\n        weighted_score: `${item.weighted_score.toFixed(2)}`,\n        status_name: `${item.status_name == \"N/A\" ? \"\" : item.status_name}`,\n      }));\n      setComplianceTable(Getdata);\n\n      axios({\n        method: \"get\",\n        url:\n          baseUrl +\n          `/ProjectMS/QCR/getComments?project_audit_dtl_id=${\n            Getdata[0]?.id == undefined ? 0 : Getdata[0]?.id\n          }`,\n      }).then(function (response2) {\n        if (response2.data.length == 0) {\n          setComments((prevComments) => []);\n        }\n        const commentsData = response2.data;\n\n        for (let i = 0; i < commentsData.length; i++) {\n          if (commentsData[i].remarks === null) {\n            commentsData[i].remarks = \"\"; // Update remarks to an empty string\n          }\n        }\n\n        setComments(commentsData);\n      });\n    });\n  };\n  const commentsdata = () => {};\n  const handleCancel = (e) => {\n    let ele = document.getElementsByClassName(\"cancel\");\n\n    GlobalCancel(ref);\n\n    for (let index = 0; index < ele.length; index++) {\n      ele[index].value = \"\";\n\n      if (ele[index].classList.contains(\"reactsearchautocomplete\")) {\n        ele[index].children[0].children[0].children[0].children[1]?.click();\n      }\n    }\n  };\n  //------------------------------------------\n  const handelsearch = () => {\n    setValidationMessage(false);\n    setVisible(!visible);\n    visible\n      ? setCheveronIcon(FaChevronCircleUp)\n      : setCheveronIcon(FaChevronCircleDown);\n    axios({\n      method: \"get\",\n      url: baseUrl + `/ProjectMS/QCR/getProjecttype?id=${projectId}`,\n    }).then(function (resposne) {\n      const data = resposne.data;\n      setPrjType(data);\n      setWarnMsg(true);\n      axios({\n        method: \"post\",\n        url:\n          baseUrl +\n          `/ProjectMS/QCR/getTabledata?prjtype=${data[0].pcqa_type}&prjPhase=-1&selMonth=${date}`,\n      }).then(function (res) {\n        const getdata = res.data;\n        setTableData(getdata);\n      });\n    });\n  };\n\n  useEffect(() => {\n    getReviewDonenames();\n    getProjectOverviewData();\n    handelsearch();\n    handleClicktable1();\n    getDropdowns();\n    commentsdata();\n    previousMonth();\n    enableDisableButtons();\n  }, []);\n  //------------------------DropDowns for ComplianceTabledata------------------------\n  const getDropdowns = () => {\n    axios({\n      method: \"get\",\n      url: baseUrl + `/ProjectMS/QCR/ComplianceDropDowns`,\n    }).then(function (res) {\n      var response = res.data;\n      setDropDowns(response);\n    });\n  };\n  const handleKeyDown = (event) => {\n    const alphanumericRegex = /^[0-9a-zA-Z]+$/;\n\n    if (!alphanumericRegex.test(event.key)) {\n      event.preventDefault();\n    }\n  };\n  const handleSelectChange = (selectedValue) => {\n    const selectedOption = parseInt(selectedValue);\n\n    const updatedComplianceTable = [...compliancetable];\n    updatedComplianceTable[0] = {\n      ...updatedComplianceTable[0],\n      audit_state: selectedOption,\n    };\n    setSelectType(selectedOption);\n    setComplianceTable(updatedComplianceTable);\n  };\n\n  const [isPreviousMonth, setIsPreviousMonth] = useState(false);\n  useEffect(() => {\n    const currentDate = new Date();\n    const currentMonth = currentDate.getMonth();\n    const previousMonth = currentMonth - 1;\n\n    setIsPreviousMonth(date === previousMonth);\n  }, []);\n  //----------------------------------------Posting The Data To The Table-----------------------------------\n  console.log(dropdowndata);\n  const Save = async (rowData) => {\n    let valid = GlobalValidation(ref);\n\n    if (valid) {\n      setValidationMessage(true);\n      window.scrollTo({ top: 0, behavior: \"smooth\" });\n\n      setValidationMessageForCopy(false);\n      setSubmitDataMessage(false);\n\n      // setTimeout(() => {\n      //   setValidationMessage(false);\n      // }, 3000);\n\n      return;\n    }\n\n    const processAdherence = parseFloat(\n      compliancetable[0]?.process_adherence == null\n        ? 0.0\n        : compliancetable[0]?.process_adherence\n    );\n\n    setLoader(true);\n    const datecreated = moment(compliancetable[0]?.date_created).format(\n      \"YYYY-MM-DD HH:mm:ss\"\n    );\n    console.log(processAdherence);\n    try {\n      const response = await axios({\n        method: \"post\",\n        url: baseUrl + `/ProjectMS/QCR/UpdateProjectAudit`,\n        data: {\n          id: compliancetable[0]?.id,\n          project_id: projectId,\n          audit_date: moment(compliancetable[0]?.audit_date).format(\n            \"YYYY-MM-DD HH:mm:ss\"\n          ),\n          audit_month:\n            compliancetable[0]?.audit_month == null\n              ? date\n              : compliancetable[0]?.audit_month,\n          is_pcqa_submit:\n            compliancetable[0]?.is_pcqa_submit === true\n              ? 1\n              : compliancetable[0]?.is_pcqa_submit === false\n              ? 0\n              : compliancetable[0]?.is_pcqa_submit === null\n              ? 0\n              : 0,\n          is_pm_submit:\n            compliancetable[0]?.is_pm_submit === true\n              ? 1\n              : compliancetable[0]?.is_pm_submit === false\n              ? 0\n              : compliancetable[0]?.is_pm_submit === null\n              ? 0\n              : 0,\n          audit_state:\n            compliancetable[0]?.audit_state == null\n              ? selecttype\n              : compliancetable[0]?.audit_state,\n          prj_mgr_id:\n            compliancetable[0]?.prj_mgr_id == null\n              ? managerid\n              : compliancetable[0]?.prj_mgr_id,\n          review_by_id:\n            compliancetable[0]?.review_by_id == null\n              ? reviewbyid\n              : compliancetable[0]?.review_by_id,\n          effort_hrs:\n            compliancetable[0]?.effort_hrs == null\n              ? efforthrs\n              : compliancetable[0]?.effort_hrs,\n          proj_state_id:\n            compliancetable[0]?.proj_state_id == null\n              ? 1814\n              : compliancetable[0]?.proj_state_id,\n          full_impl_compl:\n            targetCounts[\"1205\"] == null ? 0 : targetCounts[\"1205\"],\n          parti_impl_compl:\n            targetCounts[\"1206\"] == null ? 0 : targetCounts[\"1206\"],\n          not_impl_compl:\n            targetCounts[\"1207\"] == null ? 0 : targetCounts[\"1207\"],\n          not_yet_compl:\n            compliancetable[0]?.not_yet_compl == null\n              ? 0\n              : compliancetable[0]?.not_yet_compl,\n          not_appl_compl:\n            compliancetable[0]?.not_appl_compl == null\n              ? 0\n              : compliancetable[0]?.not_appl_compl,\n          weighted_score:\n            compliancetable[0]?.weighted_score == null\n              ? 0.0\n              : compliancetable[0]?.weighted_score,\n          process_adherence: processAdherence,\n          status:\n            compliancetable[0]?.status == null\n              ? 1214\n              : compliancetable[0]?.status,\n          date_created: datecreated == null ? formattedDate : datecreated,\n          last_updated: formattedDate,\n        },\n      }).then(async function (response) {\n        const saveddata = response.data;\n        // let data = [];\n        const data = [];\n\n        const processComment = (ele) => {\n          const rowComment = comments.find(\n            (comment) => comment.audit_check_point_id === +ele\n          );\n          console.log(rowComment?.weightage);\n          console.log(weightagedata[+ele]?.fieldValue);\n          const obj = {};\n          obj[\"project_audit_dtl_id\"] =\n            compliancetable[0]?.id == null\n              ? response?.data?.qcrdomain?.id\n              : compliancetable[0]?.id;\n          obj[\"audit_check_point_id\"] = +ele;\n          obj[\"compliance_val\"] =\n            dropdowndata[ele] === null || dropdowndata[ele] === undefined\n              ? rowComment.compliance_val\n              : parseInt(dropdowndata[ele]);\n          obj[\"weightage\"] =\n            weightagedata[+ele]?.fieldValue === null ||\n            weightagedata[+ele]?.fieldValue == undefined ||\n            weightagedata[+ele]?.fieldValue == \"\"\n              ? rowComment?.weightage\n              : weightagedata[+ele]?.fieldValue;\n          obj[\"remarks\"] =\n            pcqracomments[ele] === undefined\n              ? rowComment?.remarks\n              : pcqracomments[ele];\n          obj[\"pm_remarks\"] = pmcomments[ele] ?? \"\";\n          data.push(obj);\n        };\n\n        Object.keys(pcqracomments).forEach((ele) => {\n          processComment(ele);\n        });\n\n        Object.keys(dropdowndata).forEach((ele) => {\n          if (!pcqracomments[ele]) {\n            processComment(ele);\n          }\n        });\n\n        Object.keys(pmcomments).forEach((ele) => {\n          if (!pcqracomments[ele]) {\n            processComment(ele);\n          }\n        });\n\n        const res = await axios({\n          method: \"post\",\n          url: baseUrl + `/ProjectMS/QCR/UpdateData`,\n          data: data,\n        });\n        handelsearch();\n        handleClicktable1();\n        setLoader(false);\n        setAddmsg(true);\n        window.scrollTo({ top: 0, behavior: \"smooth\" });\n\n        setTimeout(() => {\n          setAddmsg(false);\n          setLoader(false);\n        }, 3000);\n      });\n    } catch (error) {\n      setLoader(false);\n    }\n  };\n  //=====================================\n\n  useEffect(() => {\n    if (compliancetable.length === 0 && !isUserManager) {\n      setPcqasubmitData(true);\n      // setPmSubmitData(false);\n    } else if (compliancetable.length === 0 && isUserManager) {\n      setPmSubmitData(true);\n      setPcqasubmitData(false);\n    } else if (compliancetable[0]?.is_pcqa_submit == true && isUserManager) {\n      // setPcqasubmitData(false);\n      setPmSubmitData(true);\n      setPcqasubmitData(true);\n    }\n  }, [compliancetable, isUserManager]);\n  console.log(compliancetable);\n  const submit = () => {\n    if (compliancetable.length == 0) {\n      setSubmitDataMessage(true);\n      window.scrollTo({ top: 0, behavior: \"smooth\" });\n\n      setValidationMessage(false);\n    } else {\n      const processAdherence = parseFloat(\n        compliancetable[0]?.process_adherence == null\n          ? 0.0\n          : compliancetable[0]?.process_adherence\n      );\n      console.log(processAdherence);\n      console.log(compliancetable[0]?.weighted_score);\n      // setLoader(true);\n      const datecreated = moment(compliancetable[0]?.date_created).format(\n        \"YYYY-MM-DD HH:mm:ss\"\n      );\n      console.log(compliancetable);\n      axios({\n        method: \"post\",\n        url: baseUrl + `/ProjectMS/QCR/UpdateProjectAudit`,\n        data: {\n          id: compliancetable[0]?.id,\n          project_id: projectId,\n          audit_date: moment(compliancetable[0]?.audit_date).format(\n            \"YYYY-MM-DD HH:mm:ss\"\n          ),\n          audit_month:\n            compliancetable[0]?.audit_month == null\n              ? date\n              : compliancetable[0]?.audit_month,\n          is_pcqa_submit:\n            pcqasubmitdata === true\n              ? 1\n              : pcqasubmitdata === false\n              ? 0\n              : pcqasubmitdata,\n\n          is_pm_submit:\n            pmsubmitdata === true\n              ? 1\n              : pmsubmitdata === false\n              ? 0\n              : pmsubmitdata,\n\n          audit_state:\n            compliancetable[0]?.audit_state == null\n              ? selecttype\n              : compliancetable[0]?.audit_state,\n          prj_mgr_id:\n            compliancetable[0]?.prj_mgr_id == null\n              ? managerid\n              : compliancetable[0]?.prj_mgr_id,\n          review_by_id:\n            compliancetable[0]?.review_by_id == null\n              ? reviewbyid\n              : compliancetable[0]?.review_by_id,\n          effort_hrs:\n            compliancetable[0]?.effort_hrs == null\n              ? efforthrs\n              : compliancetable[0]?.effort_hrs,\n          proj_state_id:\n            compliancetable[0]?.proj_state_id == null\n              ? 1814\n              : compliancetable[0]?.proj_state_id,\n          full_impl_compl:\n            targetCounts[\"1205\"] == null ? 0 : targetCounts[\"1205\"],\n          parti_impl_compl:\n            targetCounts[\"1206\"] == null ? 0 : targetCounts[\"1206\"],\n          not_impl_compl:\n            targetCounts[\"1207\"] == null ? 0 : targetCounts[\"1207\"],\n          not_yet_compl:\n            targetCounts[\"1208\"] == null ? 0 : targetCounts[\"1208\"],\n          not_appl_compl:\n            targetCounts[\"1209\"] == null ? 0 : targetCounts[\"1209\"],\n          weighted_score:\n            compliancetable[0]?.weighted_score == null\n              ? 0.0\n              : compliancetable[0]?.weighted_score,\n          process_adherence: processAdherence,\n          status:\n            compliancetable[0]?.status == null\n              ? 1214\n              : compliancetable[0]?.status,\n          date_created: datecreated == null ? formattedDate : datecreated,\n          last_updated: formattedDate,\n        },\n      }).then(function (response) {\n        handelsearch();\n        handleClicktable1();\n        setLoader(false);\n        setSaveSubmitMsg(true);\n        window.scrollTo({ top: 0, behavior: \"smooth\" });\n\n        setValidationMessageForCopy(false);\n        setCopyMessage(false);\n\n        setTimeout(() => {\n          setSaveSubmitMsg(false);\n          setLoader(false);\n        }, 3000);\n      });\n    }\n    // });\n  };\n  //-------------------------------------copyPrevMonthPrjAuditChkLists---------------------\n\n  const previousMonth = () => {\n    axios({\n      method: \"get\",\n      url:\n        baseUrl + `/ProjectMS/QCR/getRecentAuditDate?project_id=${projectId}`,\n    }).then(function (res) {\n      const response = res.data[0];\n      setPreviousMonthdate(response);\n    });\n  };\n\n  const Copydata = () => {\n    axios({\n      method: \"post\",\n      url:\n        baseUrl +\n        `/ProjectMS/QCR/copyPrevMonthPrjAuditChkLists?prjId=${projectId}&cpMonth=${date}`,\n    }).then(function (res) {\n      const response = res.data;\n\n      if (response[0]?.dataExists == false) {\n        setValidationMessageForCopy(true);\n        window.scrollTo({ top: 0, behavior: \"smooth\" });\n\n        setValidationMessage(false);\n        setSubmitDataMessage(false);\n      } else {\n        setValidationMessageForCopy(false);\n        axios({\n          method: \"get\",\n          url:\n            baseUrl +\n            `/ProjectMS/QCR/getComplianceTabledata?project_id=${projectId}&audit_month=${previousmonthdate.recent_audit_month}`,\n        }).then(function (response1) {\n          const Getdata = response1.data.map((item) => ({\n            ...item,\n            process_adherence: `${item.process_adherence.toFixed(2)} %`,\n            weighted_score: `${item.weighted_score.toFixed(2)}`,\n            status_name: `${item.status_name == \"N/A\" ? \"\" : item.status_name}`,\n          }));\n          setComplianceTable(Getdata);\n\n          axios({\n            method: \"get\",\n            url:\n              baseUrl +\n              `/ProjectMS/QCR/getComments?project_audit_dtl_id=${Getdata[0]?.id}`,\n          }).then(function (response2) {\n            const commentsData = response2.data;\n            setCopyMessage(true);\n            setTimeout(() => {\n              setCopyMessage(false);\n            }, 3000);\n\n            setComments(commentsData);\n          });\n        });\n      }\n    });\n  };\n\n  // breadcrumbs --\n\n  const [routes, setRoutes] = useState([]);\n  let textContent = \"Delivery\";\n  let currentScreenName = [\"Projects\", \"Open\", \"Monitoring\", \"QCR\"];\n\n  useEffect(() => {\n    getMenus();\n  }, []);\n\n  const getMenus = () => {\n    // setMenusData\n\n    axios({\n      method: \"GET\",\n      url: baseUrl + `/CommonMS/master/getMenus?loggedUserId=${loggedUserId}`,\n    }).then((resp) => {\n      let data = resp.data;\n\n      data.forEach((item) => {\n        if (item.display_name === textContent) {\n          setRoutes([item]);\n        }\n      });\n    });\n  };\n  //==============================================================\n  const [dropdownValues, setDropdownValues] = useState({});\n  const [previousOption, setPreviousOption] = useState(\"\");\n\n  const [finalComments, setFinalComments] = useState([]);\n\n  comments?.map((data) => {\n    tableData?.map((value) => {\n      if (data.audit_check_point_id == value.id) {\n        value[\"compliance_val\"] = data.compliance_val;\n        value[\"remarks_id\"] = data.id;\n        value[\"pm_remarks\"] = data.pm_remarks;\n        value[\"project_audit_dtl_id\"] = data.project_audit_dtl_id;\n        value[\"remarks\"] = data.remarks;\n        value[\"weightage\"] = data.weightage;\n      }\n    });\n  });\n\n  const onChangeSetDate = (e, rowData) => {\n    setDropdownData((prev) => ({\n      ...prev,\n      [rowData.id]: e?.target?.value,\n    }));\n  };\n  let previousValues = [];\n\n  useEffect(() => {\n    calculateComplianceScore();\n  }, []);\n\n  const handalChange = (e, rowData, decrementOption) => {\n    console.log(compliancetable[0]?.audit_state);\n    let fieldValue;\n\n    if (compliancetable[0]?.audit_state === 1184) {\n      fieldValue = rowData.initiation_weightage;\n    } else if (compliancetable[0]?.audit_state === 1185) {\n      fieldValue = rowData.steady_state_weightage;\n    } else if (compliancetable[0]?.audit_state === 1186) {\n      fieldValue = rowData.closure_weightage;\n    } else {\n      fieldValue = 0;\n    }\n    // setWeightageData((prev) => {\n    //   const updatedData = { ...prev };\n    //   updatedData[rowData.id] = {\n    //     rowDataId: rowData.id,\n    //     fieldValue: fieldValue,\n    //     targetValue: e.target.value,\n    //   };\n    //   return updatedData;\n    // });\n\n    console.log(fieldValue);\n\n    if (compliancetable[0]?.audit_state === 1184) {\n      fieldValue = rowData.initiation_weightage;\n    } else if (compliancetable[0]?.audit_state === 1185) {\n      fieldValue = rowData.steady_state_weightage;\n    } else if (compliancetable[0]?.audit_state === 1186) {\n      fieldValue = rowData.closure_weightage;\n    } else {\n      fieldValue = 0;\n    }\n    previousValues.push(fieldValue);\n\n    // setWeightage((prev) => {\n    //   const updatedWeightage = { ...prev };\n    //   if (fieldValue === prev[rowData.id]?.fieldValue) {\n    //     delete updatedWeightage[rowData.id];\n    //   } else {\n    //     updatedWeightage[rowData.id] = {\n    //       rowDataId: rowData.id,\n    //       fieldValue: fieldValue,\n    //       targetValue: e.target.value,\n    //     };\n    //   }\n    //   return updatedWeightage;\n    // });\n    setWeightageData((prevData) => {\n      const updatedData = {\n        ...prevData,\n        [rowData.id]: {\n          rowDataId: rowData.id,\n          fieldValue: fieldValue,\n          targetValue: e.target.value,\n        },\n      };\n\n      setWeightage((prevWeightage) => ({\n        ...prevWeightage,\n        ...updatedData,\n      }));\n\n      return updatedData;\n    });\n\n    console.log(JSON.stringify(weightage) + \"in OnChange....\");\n\n    setDropdownData((prev) => ({\n      ...prev,\n      [rowData.id]: e?.target?.value,\n    }));\n\n    const updatedComplianceTable = [...compliancetable];\n    setValidationMessage(false);\n    if (e?.target?.value == \"1205\") {\n      const fullyImplemented = updatedComplianceTable[0]?.full_impl_compl || 0;\n\n      updatedComplianceTable[0] = {\n        ...updatedComplianceTable[0],\n        full_impl_compl: fullyImplemented + 1,\n      };\n    }\n\n    if (e?.target?.value == \"1206\") {\n      const partiallyImplemented =\n        updatedComplianceTable[0]?.parti_impl_compl || 0;\n      updatedComplianceTable[0] = {\n        ...updatedComplianceTable[0],\n        parti_impl_compl: partiallyImplemented + 1,\n      };\n    }\n\n    if (e?.target?.value === \"1207\") {\n      const notImplemented = updatedComplianceTable[0]?.not_impl_compl || 0;\n      updatedComplianceTable[0] = {\n        ...updatedComplianceTable[0],\n        not_impl_compl: notImplemented + 1,\n      };\n    }\n\n    if (e?.target?.value == \"1208\") {\n      const notYet = updatedComplianceTable[0]?.not_yet_compl || 0;\n      updatedComplianceTable[0] = {\n        ...updatedComplianceTable[0],\n        not_yet_compl: notYet + 1,\n      };\n    }\n\n    if (e?.target?.value == \"1209\") {\n      const notApplicable = updatedComplianceTable[0]?.not_appl_compl || 0;\n      updatedComplianceTable[0] = {\n        ...updatedComplianceTable[0],\n        not_appl_compl: notApplicable + 1,\n      };\n    }\n    if (decrementOption == \"1205\") {\n      const fullyImplemented = updatedComplianceTable[0]?.full_impl_compl || 0;\n      updatedComplianceTable[0] = {\n        ...updatedComplianceTable[0],\n        full_impl_compl: fullyImplemented - 1,\n      };\n    }\n\n    if (decrementOption == \"1206\") {\n      const partiallyImplemented =\n        updatedComplianceTable[0]?.parti_impl_compl || 0;\n      updatedComplianceTable[0] = {\n        ...updatedComplianceTable[0],\n        parti_impl_compl: partiallyImplemented - 1,\n      };\n    }\n\n    if (decrementOption == \"1207\") {\n      const notImplemented = updatedComplianceTable[0]?.not_impl_compl || 0;\n      updatedComplianceTable[0] = {\n        ...updatedComplianceTable[0],\n        not_impl_compl: notImplemented - 1,\n      };\n    }\n\n    if (decrementOption == \"1208\") {\n      const notYet = updatedComplianceTable[0]?.not_yet_compl || 0;\n      updatedComplianceTable[0] = {\n        ...updatedComplianceTable[0],\n        not_yet_compl: notYet - 1,\n      };\n    }\n\n    if (decrementOption == \"1209\") {\n      const notApplicable = updatedComplianceTable[0]?.not_appl_compl || 0;\n      updatedComplianceTable[0] = {\n        ...updatedComplianceTable[0],\n        not_appl_compl: notApplicable - 1,\n      };\n    }\n\n    updatedComplianceTable[0] = {\n      ...updatedComplianceTable[0],\n      [rowData.id]: e.target.value,\n    };\n    setComplianceTable(updatedComplianceTable);\n    console.log(compliancetable[0] + \"in line 1916.....\");\n  };\n  console.log(compliancetable[0] + \"in line 1918.....\");\n\n  useEffect(() => {\n    calculateComplianceScore();\n  }, [weightage]);\n\n  const handlechangeComments = (e, rowData) => {\n    setPcqaComments((prev) => ({\n      ...prev,\n      [rowData.id]: e,\n    }));\n  };\n\n  const handlechangePMComments = (e, rowData) => {\n    setPmComments((prev) => ({\n      ...prev,\n      [rowData.id]: e,\n    }));\n  };\n\n  const renderSNo = (rowData, column) => {\n    const index = tableData.indexOf(rowData);\n    const sNo = index + 1;\n    return <span title={sNo}>{sNo}</span>;\n  };\n\n  const getFieldBasedOnType = (rowData) => {\n    if (compliancetable[0]?.audit_state === 1184) {\n      return (\n        <div title={rowData.initiation_weightage}>\n          {rowData.initiation_weightage}\n        </div>\n      );\n    } else if (compliancetable[0]?.audit_state === 1185) {\n      return (\n        <div title={rowData.steady_state_weightage}>\n          {rowData.steady_state_weightage}\n        </div>\n      );\n    } else if (compliancetable[0]?.audit_state === 1186) {\n      return (\n        <div title={rowData.closure_weightage}>{rowData.closure_weightage}</div>\n      );\n    } else if (selecttype === 1184) {\n      return (\n        <div title={rowData.initiation_weightage}>\n          {rowData.initiation_weightage}\n        </div>\n      );\n    } else if (selecttype === 1185) {\n      return (\n        <div title={rowData.steady_state_weightage}>\n          {rowData.steady_state_weightage}\n        </div>\n      );\n    } else if (selecttype === 1186) {\n      return (\n        <div title={rowData.closure_weightage}>{rowData.closure_weightage}</div>\n      );\n    } else if (selecttype === \"null\") {\n      return <div title=\"0\">0</div>;\n    }\n    return <div title=\"0\">0</div>;\n  };\n\n  const ComplianceBodyTemplate = (rowData, getFieldBasedOnType) => {\n    return (\n      <>\n        {compliancetable.length === 0 && grp6Items[1].is_write === true ? (\n          <select\n            id=\"lkup_name\"\n            className=\"cancel\"\n            name=\"lkup_name\"\n            onFocus={(e) => {\n              setPreviousOption(e.target.value, rowData.compliance_val);\n            }}\n            onChange={(e) => {\n              if (\n                Array.isArray(compliancetable) &&\n                compliancetable.length === 0\n              ) {\n                setValidationMessage(true);\n                const newData = {\n                  ...dropdownValues,\n                  [rowData.id]: \"null\" || rowData.compliance_val,\n                };\n                setDropdownValues(newData);\n                window.scrollTo({ top: 0, behavior: \"smooth\" });\n              } else {\n                setValidationMessage(false);\n                const data = rowData.id;\n                // onChangeSetDate(e, rowData)\n                handalChange(e, rowData, previousOption);\n                const newValue = e.target.value;\n                setPreviousOption(newValue);\n                const newData = {\n                  ...dropdownValues,\n                  [rowData.id]: newValue,\n                };\n\n                setDropdownValues(newData);\n              }\n            }}\n            value={dropdownValues[rowData.id] || \"123\"}\n            disabled={\n              compliancetable[0]?.is_pcqa_submit === true ||\n              (isUserManager && compliancetable.length === 0) ||\n              pcqaCompl === true\n            }\n            style={{\n              cursor:\n                compliancetable[0]?.is_pcqa_submit || pcqaCompl === true\n                  ? \"not-allowed\"\n                  : \"auto\",\n              backgroundColor:\n                compliancetable[0]?.is_pcqa_submit || pcqaCompl === true\n                  ? \"#eee\"\n                  : \"white\",\n              opacity:\n                compliancetable[0]?.is_pcqa_submit || pcqaCompl === true\n                  ? 1\n                  : \"inherit\",\n              color:\n                compliancetable[0]?.is_pcqa_submit || pcqaCompl === true\n                  ? \"#999\"\n                  : \"inherit\",\n            }}\n          >\n            <option value=\"123\">&lt;&lt;Please Select&gt;&gt;</option>\n            {dropdowns?.map((Item) => (\n              <option key={Item.id} value={Item.id}>\n                {Item.lkup_name}\n              </option>\n            ))}\n          </select>\n        ) : (\n          <select disabled>\n            <option>{\"<<Please Select>>\"}</option>\n          </select>\n        )}\n\n        <select\n          id=\"lkup_name\"\n          className=\"cancel\"\n          name=\"lkup_name\"\n          onFocus={(e) => {\n            setPreviousOption(e.target.value, rowData.compliance_val);\n          }}\n          onChange={(e) => {\n            if (\n              // selecttype === 123 ||\n              Array.isArray(compliancetable) &&\n              compliancetable.length === 0\n            ) {\n              setValidationMessage(true);\n              const newData = {\n                ...dropdownValues,\n                [rowData.id]: \"null\" || rowData.compliance_val,\n              };\n              setDropdownValues(newData);\n              window.scrollTo({ top: 0, behavior: \"smooth\" });\n            } else {\n              setValidationMessage(false);\n              const data = rowData.id;\n              // onChangeSetDate(e, rowData)\n              handalChange(e, rowData, previousOption);\n              const newValue = e.target.value;\n              setPreviousOption(newValue);\n              const newData = {\n                ...dropdownValues,\n                [rowData.id]: newValue,\n              };\n\n              setDropdownValues(newData);\n            }\n          }}\n          value={dropdownValues[rowData.id] || rowData.compliance_val}\n          disabled={\n            compliancetable[0]?.is_pcqa_submit === true ||\n            (isUserManager && compliancetable.length === 0) ||\n            pcqaCompl == true\n          }\n          style={{\n            cursor:\n              compliancetable[0]?.is_pcqa_submit || pcqaCompl == true\n                ? \"no-drop\"\n                : \"auto\",\n            backgroundColor:\n              compliancetable[0]?.is_pcqa_submit || pcqaCompl == true\n                ? \"#eee\"\n                : \"white\",\n            opacity:\n              compliancetable[0]?.is_pcqa_submit || pcqaCompl == true\n                ? 1\n                : \"inherit\",\n            color:\n              compliancetable[0]?.is_pcqa_submit || pcqaCompl == true\n                ? \"#999\"\n                : \"inherit\",\n          }}\n        >\n          <option value=\"123\">&lt;&lt;Please Select&gt;&gt;</option>\n          {dropdowns?.map((Item, index) => (\n            <option key={index} value={Item.id}>\n              {Item.lkup_name}\n            </option>\n          ))}\n        </select>\n      </>\n    );\n  };\n\n  const pcqaBody = (rowData) => {\n    console.log(rowData.remarks + \"in line 2144...\");\n    return (\n      <>\n        {compliancetable.length === 0 && grp6Items[1].is_write === true ? (\n          <textarea\n            id=\"remarks\"\n            name=\"remarks\"\n            placeholder=\"PCQA Remarks\"\n            type=\"text\"\n            value={rowData?.remarks == null ? \"\" : rowData?.remarks}\n            onChange={(e) => handlechangeComments(e.target.value, rowData)}\n            disabled={\n              compliancetable[0]?.is_pcqa_submit ||\n              (isUserManager && compliancetable.length === 0) ||\n              pcqa === true\n            }\n            style={{\n              cursor:\n                compliancetable[0]?.is_pcqa_submit ||\n                (isUserManager && compliancetable.length === 0) ||\n                pcqa === true\n                  ? \"no-drop\"\n                  : \"auto\",\n              backgroundColor:\n                compliancetable[0]?.is_pcqa_submit ||\n                (isUserManager && compliancetable.length === 0) ||\n                pcqa === true\n                  ? \"#eee\"\n                  : \"white\",\n              opacity:\n                compliancetable[0]?.is_pcqa_submit ||\n                (isUserManager && compliancetable.length === 0) ||\n                pcqa === true\n                  ? 1\n                  : \"inherit\",\n              color:\n                compliancetable[0]?.is_pcqa_submit ||\n                (isUserManager && compliancetable.length === 0) ||\n                pcqa === true\n                  ? \"#999\"\n                  : \"inherit\",\n            }}\n          ></textarea>\n        ) : (\n          <textarea\n            disabled\n            placeholder=\"PCQA Remarks\"\n            style={{ cursor: \"not-allowed\" }}\n          ></textarea>\n        )}\n\n        <textarea\n          id=\"remarks\"\n          name=\"remarks\"\n          placeholder=\"PCQA Remarks\"\n          type=\"text\"\n          defaultValue={rowData?.remarks == \"null\" ? \"\" : rowData?.remarks}\n          onChange={(e) => handlechangeComments(e.target.value, rowData)}\n          disabled={\n            compliancetable[0]?.is_pcqa_submit ||\n            (isUserManager && compliancetable.length === 0) ||\n            pcqa == true\n          }\n          style={{\n            cursor:\n              compliancetable[0]?.is_pcqa_submit ||\n              (isUserManager && compliancetable.length === 0) ||\n              pcqa == true\n                ? \"no-drop\"\n                : \"auto\",\n            backgroundColor:\n              compliancetable[0]?.is_pcqa_submit ||\n              (isUserManager && compliancetable.length === 0) ||\n              pcqa == true\n                ? \"#eee\"\n                : \"white\",\n            opacity:\n              compliancetable[0]?.is_pcqa_submit ||\n              (isUserManager && compliancetable.length === 0) ||\n              pcqa == true\n                ? 1\n                : \"inherit\",\n            color:\n              compliancetable[0]?.is_pcqa_submit ||\n              (isUserManager && compliancetable.length === 0) ||\n              pcqa == true\n                ? \"#999\"\n                : \"inherit\",\n          }}\n        ></textarea>\n      </>\n    );\n  };\n\n  const pmaBody = (rowData) => {\n    return (\n      <>\n        {compliancetable.length == 0 && (\n          <textarea\n            value={compliancetable.length == 0 ? \"\" : rowData.pm_remarks}\n            disabled={\n              !isUserManager ||\n              compliancetable.length == 0 ||\n              compliancetable[0]?.is_pcqa_submit === false ||\n              (compliancetable[0]?.is_pcqa_submit == true &&\n                compliancetable[0]?.is_pm_submit == true)\n            }\n            style={{\n              cursor:\n                !isUserManager ||\n                compliancetable.length == 0 ||\n                compliancetable[0]?.is_pcqa_submit === false ||\n                (compliancetable[0]?.is_pcqa_submit == true &&\n                  compliancetable[0]?.is_pm_submit == true)\n                  ? \"no-drop\"\n                  : \"auto\",\n              backgroundColor:\n                !isUserManager ||\n                compliancetable.length == 0 ||\n                compliancetable[0]?.is_pcqa_submit === false ||\n                (compliancetable[0]?.is_pcqa_submit == true &&\n                  compliancetable[0]?.is_pm_submit == true)\n                  ? \"#eee\"\n                  : \"white\",\n              opacity:\n                !isUserManager ||\n                compliancetable.length == 0 ||\n                compliancetable[0]?.is_pcqa_submit === false ||\n                (compliancetable[0]?.is_pcqa_submit == true &&\n                  compliancetable[0]?.is_pm_submit == true)\n                  ? 1\n                  : \"inherit\",\n              color:\n                !isUserManager ||\n                compliancetable.length == 0 ||\n                compliancetable[0]?.is_pcqa_submit === false ||\n                (compliancetable[0]?.is_pcqa_submit == true &&\n                  compliancetable[0]?.is_pm_submit == true)\n                  ? \"#999\"\n                  : \"inherit\",\n            }}\n            onChange={(e) => {\n              handlechangePMComments(e.target.value, rowData);\n            }}\n            type=\"text\"\n            placeholder=\"PM Remarks\"\n          ></textarea>\n        )}\n        <textarea\n          defaultValue={rowData.pm_remarks}\n          disabled={\n            !isUserManager ||\n            compliancetable.length == 0 ||\n            compliancetable[0]?.is_pcqa_submit === false ||\n            (compliancetable[0]?.is_pcqa_submit == true &&\n              compliancetable[0]?.is_pm_submit == true)\n          }\n          style={{\n            cursor:\n              !isUserManager ||\n              compliancetable.length == 0 ||\n              compliancetable[0]?.is_pcqa_submit === false ||\n              (compliancetable[0]?.is_pcqa_submit == true &&\n                compliancetable[0]?.is_pm_submit == true)\n                ? \"no-drop\"\n                : \"auto\",\n            backgroundColor:\n              !isUserManager ||\n              compliancetable.length == 0 ||\n              compliancetable[0]?.is_pcqa_submit === false ||\n              (compliancetable[0]?.is_pcqa_submit == true &&\n                compliancetable[0]?.is_pm_submit == true)\n                ? \"#eee\"\n                : \"white\",\n            opacity:\n              !isUserManager ||\n              compliancetable.length == 0 ||\n              compliancetable[0]?.is_pcqa_submit === false ||\n              (compliancetable[0]?.is_pcqa_submit == true &&\n                compliancetable[0]?.is_pm_submit == true)\n                ? 1\n                : \"inherit\",\n            color:\n              !isUserManager ||\n              compliancetable.length == 0 ||\n              compliancetable[0]?.is_pcqa_submit === false ||\n              (compliancetable[0]?.is_pcqa_submit == true &&\n                compliancetable[0]?.is_pm_submit == true)\n                ? \"#999\"\n                : \"inherit\",\n          }}\n          onChange={(e) => {\n            handlechangePMComments(e.target.value, rowData);\n          }}\n          type=\"text\"\n          placeholder=\"PM Remarks\"\n        ></textarea>\n      </>\n    );\n  };\n\n  const auditBody = (rowData) => {\n    return (\n      <div title={rowData.check_point} className=\"ellipsis\">\n        {rowData.check_point}\n      </div>\n    );\n  };\n  const phaseBody = (rowData) => {\n    return (\n      <div title={rowData.proj_phase} className=\"ellipsis\">\n        {rowData.proj_phase}\n      </div>\n    );\n  };\n  const isoBody = (rowData) => {\n    return (\n      <div title={rowData.iso_details} className=\"ellipsis\">\n        {rowData.iso_details}\n      </div>\n    );\n  };\n\n  //====================================\n  return (\n    <div>\n      {validationMessage == true ? (\n        <div className=\"statusMsg error\">\n          <span className=\"error-block\">\n            <AiFillWarning /> &nbsp; Please select valid values for highlighted\n            fields\n          </span>\n        </div>\n      ) : (\n        \"\"\n      )}\n      {validationMessageforcopy == true ? (\n        <div className=\"statusMsg error\">\n          <span className=\"error-block\">\n            <AiFillWarning /> &nbsp;Data copy failed/No Data for previous\n            results. Please try again.\n          </span>\n        </div>\n      ) : (\n        \"\"\n      )}\n      {submitdatamessage == true ? (\n        <div className=\"statusMsg error\">\n          <span className=\"error-block\">\n            <AiFillWarning /> &nbsp;Data submitting failed. Please try again.\n          </span>\n        </div>\n      ) : (\n        \"\"\n      )}\n      {copymessage ? (\n        <div className=\"statusMsg success\">\n          <BiCheck />\n          {\"Data Copied successfully\"}\n        </div>\n      ) : (\n        \"\"\n      )}\n      {addmsg ? (\n        <div className=\"statusMsg success\">\n          <BiCheck />\n          {\"Data saved Successfully\"}\n        </div>\n      ) : (\n        \"\"\n      )}\n      {savesubmitmsg ? (\n        <div className=\"statusMsg success\">\n          <BiCheck />\n          {\"Data submitted successfully\"}\n        </div>\n      ) : (\n        \"\"\n      )}\n      {loader ? <Loader handleAbort={handleAbort} /> : \"\"}\n      <div className=\"pageTitle\">\n        <div className=\"childOne\">\n          {projectData.map((list) => (\n            <h2>Quality Compliance Review - {list.projectName}</h2>\n          ))}\n        </div>\n        <div className=\"childTwo\"></div>\n        <div className=\"childThree\"></div>\n      </div>\n      <ScreenBreadcrumbs\n        routes={routes}\n        currentScreenName={currentScreenName}\n      />\n      {(warnMsg && prjtype[0]?.pcqa_type == undefined) || null ? (\n        <div className=\"statusMsg error\">\n          <AiFillWarning size=\"1.4em\" />\n          <span>\n            No Project Type selected, please update project type for Audit Check\n            List\n          </span>\n        </div>\n      ) : (\n        <div className=\"group mb-3 customCard\">\n          <div className=\"col-md-12 collapseHeader\">\n            <h2>Search Filters</h2>\n            <div\n              onClick={() => {\n                setVisible(!visible);\n                visible\n                  ? setCheveronIcon(FaChevronCircleUp)\n                  : setCheveronIcon(FaChevronCircleDown);\n              }}\n            >\n              <span>{cheveronIcon}</span>\n            </div>\n          </div>\n          <div className=\"group-content row\">\n            <div className=\" col-md-5 mb-0\">\n              <CCollapse visible={!visible}>\n                <div className=\"row mb-2\">\n                  <label className=\"col-3\">\n                    Audit Month <div className=\"error-text\">*</div>\n                  </label>\n                  <span className=\"col-1\">:</span>\n                  <div className=\"col-4\">\n                    <div className=\"col-12\">\n                      <div className=\"datepicker \">\n                        <DatePicker\n                          showMonthYearPicker\n                          selected={selectedDate}\n                          onChange={handleDateChange}\n                          dateFormat=\"MMMM-yyyy\"\n                          maxDate={new Date()}\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  {/* -------------------------------------------------Search Button---------------------------------------------- */}\n                  <button\n                    className=\"btn btn-primary col-2\"\n                    type=\"submit\"\n                    onClickCapture={() => {\n                      hideButtonclick();\n                      handelsearch();\n                      handleClicktable1();\n                      setValidationMessage(false);\n                      commentsdata();\n                      // handleCancel();\n                      setSubmitDataMessage(false);\n                      setValidationMessageForCopy(false);\n                    }}\n                    // onClick={handelsearch}\n                  >\n                    <ImSearch /> Search\n                  </button>\n                </div>\n              </CCollapse>\n            </div>\n            {/* --------------------------------------------------Warning-Box----------------------------------------------- */}\n            <div className=\"statusMsg warning\">\n              <span className=\"bold\">\n                <SlExclamation />\n              </span>\n              &nbsp; Audit Details can be updated between 5 to 30 dates of every\n              month.\n            </div>\n            {/* ---------------------------------------------Save & Submit Button------------------------------------------- */}\n            {grp6Items[1].is_write == false ? (\n              \"\"\n            ) : (\n              <div className=\"col-12\">\n                <div className=\"btn-container right my-3\">\n                  {hideButton == true ? (\n                    <>\n                      <button\n                        className=\"btn btn-primary\"\n                        type=\"submit\"\n                        onClick={Copydata}\n                        // disabled={copyPrevMonth == true}\n                        style={{\n                          // cursor: copyPrevMonth == true ? 'no-drop' : 'auto',\n                          // opacity: copyPrevMonth == true ? 1 : 'inherit',\n                          display:\n                            (compliancetable[0]?.is_pcqa_submit &&\n                              compliancetable[0]?.is_pm_submit == true) ||\n                            (compliancetable[0]?.is_pcqa_submit == 0 &&\n                              compliancetable.length > 0) ||\n                            compliancetable[0]?.is_pcqa_submit == 1 ||\n                            (isUserManager && compliancetable.length === 0)\n                              ? \"none\"\n                              : \"flex\",\n                        }}\n                      >\n                        <FaSave />\n                        Copy From Previous Results\n                      </button>\n                      <button\n                        className=\"btn btn-primary\"\n                        type=\"submit\"\n                        id=\"saveBtn\"\n                        onClick={\n                          !(\n                            !isUserManager &&\n                            compliancetable[0]?.is_pcqa_submit &&\n                            !compliancetable[0]?.is_pm_submit\n                          ) ||\n                          (!compliancetable[0]?.is_pcqa_submit &&\n                            !compliancetable[0]?.is_pm_submit)\n                            ? Save\n                            : undefined\n                        }\n                        disabled={\n                          saveBtn ||\n                          (compliancetable[0]?.is_pcqa_submit == true &&\n                            compliancetable[0]?.is_pm_submit == true)\n                        }\n                        style={{\n                          cursor:\n                            (saveBtn &&\n                              compliancetable[0]?.is_pcqa_submit &&\n                              compliancetable[0]?.is_pm_submit) ||\n                            (!isUserManager &&\n                              compliancetable[0]?.is_pcqa_submit &&\n                              !compliancetable[0]?.is_pm_submit) ||\n                            (isUserManager && compliancetable.length === 0) ||\n                            (compliancetable[0]?.is_pcqa_submit == true &&\n                              compliancetable[0]?.is_pm_submit == true)\n                              ? \"no-drop\"\n                              : \"auto\",\n                          opacity: saveBtn\n                            ? 1 ||\n                              (compliancetable[0]?.is_pcqa_submit == true &&\n                                compliancetable[0]?.is_pm_submit == true)\n                            : \"inherit\",\n                        }}\n                      >\n                        <FaSave />\n                        Save\n                      </button>\n                      <button\n                        className=\"btn btn-primary\"\n                        type=\"submit\"\n                        id=\"submitBtn\"\n                        disabled={\n                          submitBtn ||\n                          (compliancetable[0]?.is_pcqa_submit == true &&\n                            compliancetable[0]?.is_pm_submit == true)\n                        }\n                        style={{\n                          cursor:\n                            submitBtn == true ||\n                            (compliancetable[0]?.is_pcqa_submit &&\n                              compliancetable[0]?.is_pm_submit == true) ||\n                            (isUserManager && compliancetable.length === 0) ||\n                            (compliancetable[0]?.is_pcqa_submit == true &&\n                              compliancetable[0]?.is_pm_submit == true)\n                              ? \"no-drop\"\n                              : \"auto\",\n                          opacity:\n                            submitBtn == true\n                              ? 1 ||\n                                (compliancetable[0]?.is_pcqa_submit == true &&\n                                  compliancetable[0]?.is_pm_submit == true)\n                              : \"inherit\",\n                        }}\n                        onClick={submit}\n                      >\n                        <FaCheck />\n                        Submit\n                      </button>\n                    </>\n                  ) : (\n                    \"\"\n                  )}\n                </div>\n              </div>\n            )}\n            {/* : \"\"} */}\n            {/* --------------------------------------------------------------------------------------------------------------------- */}\n            {grp6Items[1].is_write == false ? (\n              \"\"\n            ) : (\n              <div className=\"col-8 offset-2\">\n                <div className=\"row\">\n                  <div className=\" col-6 mb-2\">\n                    <div className=\"  row\">\n                      <label className=\"col-5\" htmlFor=\"dateOfReview\">\n                        Date of Review&nbsp;\n                        <div className=\"error-text\">*</div>\n                      </label>\n                      <span className=\"col-1\">:</span>\n                      <div className=\"col-6\">\n                        <div className=\"datepicker error\">\n                          {!!compliancetable[0]?.is_pcqa_submit ||\n                          (isUserManager && compliancetable.length === 0) ||\n                          pcqa == true ? (\n                            <DatePicker\n                              selected={\n                                compliancetable[0]?.audit_date\n                                  ? moment(\n                                      compliancetable[0]?.audit_date,\n                                      \"YYYY-MM-DD\"\n                                    ).toDate()\n                                  : selectedDate1\n                              }\n                              dateFormat=\"dd-MMM-yyyy\"\n                              showMonthDropdown\n                              showYearDropdown\n                              disabled={true}\n                              dropdownMode=\"select\"\n                              minDate={moment().startOf(\"month\").toDate()}\n                              maxDate={moment().endOf(\"month\").toDate()}\n                              filterDate={filterDates}\n                              onChange={handleDateChange1}\n                              shouldDisableMonth={disablePreviousMonths}\n                              shouldDisableYear={disablePreviousMonths}\n                              onKeyDown={(e) => {\n                                e.preventDefault();\n                              }}\n                            />\n                          ) : (\n                            <div\n                              className=\"datepicker cancel\"\n                              ref={(ele) => {\n                                ref.current[0] = ele;\n                              }}\n                            >\n                              <DatePicker\n                                selected={\n                                  compliancetable[0]?.audit_date\n                                    ? moment(\n                                        compliancetable[0]?.audit_date,\n                                        \"YYYY-MM-DD\"\n                                      ).toDate()\n                                    : selectedDate1\n                                }\n                                dateFormat=\"dd-MMM-yyyy\"\n                                showMonthDropdown\n                                showYearDropdown\n                                dropdownMode=\"select\"\n                                minDate={moment().startOf(\"month\").toDate()}\n                                maxDate={moment().endOf(\"month\").toDate()}\n                                filterDate={filterDates}\n                                onChange={handleDateChange1}\n                                shouldDisableMonth={disablePreviousMonths}\n                                shouldDisableYear={disablePreviousMonths}\n                                onKeyDown={(e) => {\n                                  e.preventDefault();\n                                }}\n                              />\n                            </div>\n                          )}\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"col-6 mb-2\">\n                    <div className=\"  row\">\n                      <label className=\"col-5\" htmlFor=\"projectManager \">\n                        Project Manager&nbsp;\n                        <div className=\"error-text\">*</div>\n                      </label>\n                      <span className=\"col-1\">:</span>\n                      <div className=\"col-6\">\n                        <div>\n                          {!!compliancetable[0]?.is_pcqa_submit ||\n                          (isUserManager && compliancetable.length === 0) ||\n                          pcqa == true ? (\n                            <input\n                              items={managersname}\n                              type=\"Text\"\n                              showIcon={false}\n                              defaultValue={compliancetable[0]?.prj_mgr_name}\n                              placeholder=\"Type/Press space to get the list\"\n                              onKeyDown={handleKeyDown}\n                              disabled={true}\n                            />\n                          ) : (\n                            <div\n                              className=\"autoComplete-container react  cancel  reactsearchautocomplete\"\n                              ref={(ele) => {\n                                ref.current[1] = ele;\n                              }}\n                            >\n                              <ReactSearchAutocomplete\n                                className=\"wrapperauto\"\n                                items={managersname}\n                                type=\"Text\"\n                                showIcon={false}\n                                inputSearchString={\n                                  compliancetable[0]?.prj_mgr_name\n                                }\n                                placeholder=\"Type/Press space to get the list\"\n                                onKeyDown={handleKeyDown}\n                                onSelect={(e) => {\n                                  SetManagerId(e.id);\n                                  const updatemanager = [...compliancetable];\n                                  updatemanager.forEach((item) => {\n                                    item.prj_mgr_id = e.id;\n                                  });\n                                }}\n                              />\n                            </div>\n                          )}\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"col-6 mb-2\">\n                    <div className=\"row\">\n                      <label className=\"col-5\" htmlFor=\"reviewDoneBy\">\n                        Review Done By&nbsp;\n                        <div className=\"error-text\">*</div>\n                      </label>\n                      <span className=\"col-1\">:</span>\n                      <div className=\"col-6\">\n                        <div className=\"autoComplete-container error\">\n                          {!!compliancetable[0]?.is_pcqa_submit ||\n                          (isUserManager && compliancetable.length === 0) ||\n                          pcqa == true ? (\n                            <input\n                              type=\"Text\"\n                              items={reviewdonebynames}\n                              showIcon={false}\n                              defaultValue={compliancetable[0]?.review_by_name}\n                              placeholder=\"Type/Press space to get the list\"\n                              disabled={true}\n                            />\n                          ) : (\n                            <div\n                              className=\"autoComplete-container react  cancel  reactsearchautocomplete\"\n                              ref={(ele) => {\n                                ref.current[2] = ele;\n                              }}\n                            >\n                              <ReactSearchAutocomplete\n                                items={reviewdonebynames}\n                                type=\"Text\"\n                                showIcon={false}\n                                inputSearchString={\n                                  compliancetable[0]?.review_by_name\n                                }\n                                placeholder=\"Type/Press space to get the list\"\n                                onSelect={(e) => {\n                                  setRewviewById(e.id);\n                                  const updatereviewby = [...compliancetable];\n                                  updatereviewby.forEach((item) => {\n                                    item.review_by_id = e.id;\n                                  });\n                                }}\n                              />\n                            </div>\n                          )}\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"col-6 mb-2\">\n                    <div className=\"  row\">\n                      <label className=\"col-5\" htmlFor=\"effortSpent\">\n                        Effort spent for Review (person hours)\n                        <span style={{ color: \"red\" }}>&nbsp;*</span>\n                      </label>\n                      <span className=\"col-1\">:</span>\n                      <div className=\"col-6\">\n                        {!!compliancetable[0]?.is_pcqa_submit ||\n                        (isUserManager && compliancetable.length === 0) ||\n                        (isUserManager && compliancetable.length === 0) ||\n                        pcqa == true ? (\n                          <input\n                            type=\"text\"\n                            disabled={\n                              compliancetable[0]?.is_pcqa_submit || pcqa == true\n                            }\n                            className=\"form-control\"\n                            id=\"effortSpent \"\n                            required\n                            value={compliancetable[0]?.effort_hrs}\n                          />\n                        ) : (\n                          <div\n                            className=\"textfield cancel\"\n                            ref={(ele) => {\n                              ref.current[3] = ele;\n                            }}\n                          >\n                            <input\n                              type=\"text\"\n                              className=\"form-control error\"\n                              id=\"effortSpent \"\n                              required\n                              value={compliancetable[0]?.effort_hrs}\n                              onChange={(e) => {\n                                SetEffortHrs(e.target.value);\n                                const updateefforthours = [...compliancetable];\n                                updateefforthours.forEach((item) => {\n                                  item.effort_hrs = e.target.value;\n                                });\n                              }}\n                            />\n                          </div>\n                        )}\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            )}\n            <div className=\"col-md-8 offset-2 mb-2 darkHeader\">\n              <table className=\"table table-striped table-bordered htmlTable   \">\n                <thead>\n                  <tr>\n                    <th style={{ width: \"60%\", textAlign: \"center\" }}>Type</th>\n                    <th style={{ width: \"40%\", textAlign: \"center\" }}>\n                      Compliance\n                    </th>\n                  </tr>\n                </thead>\n                <tbody>\n                  <tr>\n                    <td style={{ height: \"34px\" }}>State</td>\n                    <td>\n                      <div className=\"col-6\">\n                        {/* {!!compliancetable[0]?.is_pcqa_submit == true ?\n                                                        <select id=\"state\" value={compliancetable[0]?.audit_state} disabled={true} onChange={(event) => handleSelectChange(event.target.value)} >\n                                                            <option value>&lt;&lt; Please Select &gt;&gt;</option>\n                                                            <option value=\"1184\" >Initiation</option>\n                                                            <option value=\"1185\">Steady State</option>\n                                                            <option value=\"1186\">Closure</option>\n                                                        </select> : */}\n                        {grp6Items[1].is_write == false ? (\n                          <select disabled>\n                            <option value>&lt;&lt;Please Select&gt;&gt;</option>\n                          </select>\n                        ) : (\n                          <select\n                            id=\"state\"\n                            value={\n                              compliancetable[0]?.audit_state == undefined\n                                ? \"\"\n                                : compliancetable[0]?.audit_state\n                            }\n                            onChange={(event) =>\n                              handleSelectChange(event.target.value)\n                            }\n                            className={`error  ${\n                              validationMessage === true ? \"error-block\" : \"\"\n                            }`}\n                            disabled={\n                              !!compliancetable[0]?.is_pcqa_submit == true ||\n                              (isUserManager == true &&\n                                compliancetable[0]?.is_pcqa_submit &&\n                                compliancetable[0]?.is_pm_submit == false) ||\n                              (isUserManager && compliancetable.length === 0)\n                            }\n                          >\n                            <option value>&lt;&lt;Please Select&gt;&gt;</option>\n                            <option value=\"1184\">Initiation</option>\n                            <option value=\"1185\">Steady State</option>\n                            <option value=\"1186\">Closure</option>\n                          </select>\n                        )}\n\n                        {/* } */}\n                      </div>\n                    </td>\n                  </tr>\n                  <tr>\n                    <td>Fully Implemented</td>\n                    <td>\n                      {compliancetable[0]?.full_impl_compl\n                        ? compliancetable[0]?.full_impl_compl\n                        : 0}\n                      {/* {targetCounts[\"1205\"] ? targetCounts[\"1205\"] : 0} */}\n                    </td>\n                  </tr>\n                  <tr>\n                    <td>Partially Implemented</td>\n                    <td>\n                      {compliancetable[0]?.parti_impl_compl\n                        ? compliancetable[0]?.parti_impl_compl\n                        : 0}\n                      {/* {targetCounts[\"1206\"] ? targetCounts[\"1206\"] : 0} */}\n                    </td>\n                  </tr>\n                  <tr>\n                    <td>Not Implemented</td>\n                    <td>\n                      {compliancetable[0]?.not_impl_compl\n                        ? compliancetable[0]?.not_impl_compl\n                        : 0}\n                      {/* {targetCounts[\"1207\"] ? targetCounts[\"1207\"] : 0} */}\n                    </td>\n                  </tr>\n                  <tr>\n                    <td>Not Yet</td>\n                    <td>\n                      {compliancetable[0]?.not_yet_compl\n                        ? compliancetable[0]?.not_yet_compl\n                        : 0}\n                      {/* {targetCounts[\"1208\"] ? targetCounts[\"1208\"] : 0} */}\n                    </td>\n                  </tr>\n                  <tr>\n                    <td>Not Applicable</td>\n                    <td>\n                      {compliancetable[0]?.not_appl_compl\n                        ? compliancetable[0]?.not_appl_compl\n                        : 0}\n                      {/* {targetCounts[\"1209\"] ? targetCounts[\"1209\"] : 0} */}\n                    </td>\n                  </tr>\n                  <tr>\n                    <td>Weighted score </td>\n                    <td>\n                      {isNaN(compliancetable[0]?.weighted_score)\n                        ? \"0 %\"\n                        : compliancetable[0]?.weighted_score}\n                    </td>\n                  </tr>\n                  <tr>\n                    <td>Overall Process Adherence</td>\n                    <td>\n                      {isNaN(compliancetable[0]?.process_adherence)\n                        ? \"0 %\"\n                        : `${compliancetable[0]?.process_adherence} %`}\n                    </td>\n                  </tr>\n\n                  <tr>\n                    <td>Status </td>\n                    <td\n                      style={{\n                        backgroundColor:\n                          compliancetable[0]?.status === 1211\n                            ? \"#00cc66\"\n                            : compliancetable[0]?.status === 1213\n                            ? \"#FF0000\"\n                            : compliancetable[0]?.status === 1214\n                            ? \"\"\n                            : compliancetable[0]?.status === 1212\n                            ? \"#ffd400\"\n                            : \"\",\n                      }}\n                    >\n                      {compliancetable[0]?.status_name\n                        ? compliancetable[0]?.status_name\n                        : \"\"}\n                    </td>\n                  </tr>\n                </tbody>\n              </table>\n            </div>\n          </div>\n          <div className=\"darkHeader\">\n            <DataTable\n              value={tableData}\n              showGridlines\n              emptyMessage=\"No Records To View\"\n              scrollDirection=\"both\"\n              scrollHeight=\"400px\"\n              // scrollable\n              frozen\n              // paginator\n              rows={10}\n              className=\"primeReactDataTable \" ///customerEngament\n              // paginatorTemplate=\"RowsPerPageDropdown FirstPageLink PrevPageLink CurrentPageReport NextPageLink LastPageLink\"\n              // currentPageReportTemplate=\"{first} to {last} of {totalRecords}\"\n              // rowsPerPageOptions={[10, 25, 50]} //------------->\n            >\n              <Column\n                header=\"S.No\"\n                field=\"SNo\"\n                body={renderSNo}\n                title={\"SNo\"}\n                alignHeader={\"center\"}\n                headerStyle={{ width: \"5%\", minWidth: \"8rem\" }}\n                bodyStyle={{ textAlign: \"center\" }}\n              ></Column>\n              <Column\n                field=\"proj_phase\"\n                header=\"Phase\"\n                body={phaseBody}\n                frozen\n              />\n              <Column\n                field=\"check_point\"\n                header=\"Audit Checkpoints\"\n                body={auditBody}\n              />\n              <Column\n                frozen\n                field=\"\"\n                header=\"Compliance\"\n                filter={true}\n                body={ComplianceBodyTemplate}\n                headerStyle={{ width: \"11%\", minWidth: \"8rem\" }}\n              />\n              <Column\n                field=\"\"\n                body={getFieldBasedOnType}\n                header=\"Weightage\"\n                headerStyle={{ width: \"6%\", minWidth: \"8rem\" }}\n              />\n\n              <Column\n                field=\"iso_details\"\n                header=\"ISO 9001:2015\"\n                body={isoBody}\n              />\n              <Column\n                field=\"remarks\"\n                header=\"PCQA Remarks\"\n                body={pcqaBody}\n                disabled={compliancetable[0]?.is_pcqa_submit === true}\n              />\n              <Column\n                field=\"pm_remarks\"\n                header=\"PM Remarks\"\n                body={pmaBody}\n                disabled={compliancetable[0]?.is_pcqa_submit === true}\n              />\n            </DataTable>\n          </div>\n\n          {/* <FirstTable\n            tableData={tableData}\n            selecttype={selecttype}\n            dropdowns={dropdowns}\n            setoldData={setoldData}\n            setnewData={setnewData}\n            CompliancData={CompliancData}\n            setComplianceTable={setComplianceTable}\n            compliancetable={compliancetable}\n            newData={newData}\n            setValidationMessage={setValidationMessage}\n            validationMessage={validationMessage}\n            comments={comments}\n            setTableData={setTableData}\n            setComments={setComments}\n            setPcqaComments={setPcqaComments}\n            pcqracomments={pcqracomments}\n            setDropdownData={setDropdownData}\n            dropdowndata={dropdowndata}\n            calculateComplianceScore={calculateComplianceScore}\n            loggedUserId={loggedUserId}\n            managersname={managersname}\n            isUserManager={isUserManager}\n            pcqaCompl={pcqaCompl}\n            pcqa={pcqa}\n            setWeightage={setWeightage}\n            setPmComments={setPmComments}\n            pmcomments={pmcomments}\n            weightage={weightage}\n            setWeightageData={setWeightageData}\n            weightagedata={weightagedata}\n          /> */}\n        </div>\n      )}\n    </div>\n  );\n}\nexport default ProjectCompliance;\n","import React from \"react\";\nimport { CModal, CModalBody, CModalHeader, CModalTitle } from \"@coreui/react\";\nimport Draggable from \"react-draggable\";\nimport axios from \"axios\";\nimport { environment } from \"../../environments/environment\";\n\nfunction TaskPlanDeletePopUp(props) {\n  const {\n    deletePopUp,\n    setDeletePopUp,\n    selectedTaskId,\n    setDeletedSuccess,\n    setDeletedFailed,\n  } = props;\n  const baseUrl = environment.baseUrl;\n\n  const deleteRecord = () => {\n    console.log(\"hello...\");\n\n    axios({\n      method: \"delete\",\n      url: `${baseUrl}/ProjectMS/taskPlan/deletePrjTask?taskId=${selectedTaskId}`,\n      params: {\n        taskId: selectedTaskId,\n      },\n    })\n      .then((response) => {\n        console.log(\"Delete Clicked...\");\n        setDeletePopUp(false);\n        if (response.data == false) {\n          setDeletedFailed(true);\n          setTimeout(() => {\n            setDeletedFailed(false);\n          }, 3000);\n          return;\n        }\n        setDeletedSuccess(true);\n        setTimeout(() => {\n          setDeletedSuccess(false);\n        }, 3000);\n      })\n      .catch((error) => {\n        console.error(\"Error deleting record:\", error);\n      });\n  };\n\n  const handleDelete = () => {\n    console.log(\"hi...\");\n    deleteRecord();\n  };\n\n  return (\n    <div className=\"col-md-12\">\n      <Draggable>\n        <CModal\n          style={{ cursor: \"all-scroll\" }}\n          alignment=\"center\"\n          backdrop=\"static\"\n          visible={deletePopUp}\n          size=\"sm\"\n          className=\" ui-dialog\"\n          onClose={() => setDeletePopUp(false)}\n        >\n          <CModalHeader className=\"\">\n            <CModalTitle>\n              <span className=\"\">Delete Task</span>\n            </CModalTitle>\n          </CModalHeader>\n          <CModalBody>\n            <span> Are you sure you want to delete Task ?</span>\n            <div className=\"btn-container center mb-1 mt-4\">\n              <button className=\"btn btn-secondary\" onClick={handleDelete}>\n                Delete\n              </button>\n              <button className=\"btn btn-secondary\">Cancel</button>\n            </div>\n          </CModalBody>\n        </CModal>\n      </Draggable>\n    </div>\n  );\n}\nexport default TaskPlanDeletePopUp;\n","import React from \"react\";\nimport { CModal, CModalBody, CModalHeader, CModalTitle } from \"@coreui/react\";\nimport Draggable from \"react-draggable\";\nimport axios from \"axios\";\nimport { environment } from \"../../environments/environment\";\n\nfunction TaskPlanResDeletePopUp(props) {\n  const {\n    deletePopUp,\n    setDeletePopUp,\n    roleId,\n    setDeletedSuccess,\n    setDeleteFailed,\n  } = props;\n  const baseUrl = environment.baseUrl;\n\n  const deleteRecord = () => {\n    console.log(\"hello...\");\n\n    axios({\n      method: \"delete\",\n      // url: `http://localhost:8092/ProjectMS/taskPlan/deleteTaskResource?id=${roleId}`,\n      url: `${baseUrl}/ProjectMS/taskPlan/deleteTaskResource?id=${roleId}`,\n    })\n      .then((response) => {\n        console.log(\"Delete Clicked...\");\n        if (response.data == false) {\n          setDeletePopUp(false);\n          setDeleteFailed(true);\n          setTimeout(() => {\n            setDeleteFailed(false);\n          }, 3000);\n          return;\n        }\n        setDeletePopUp(false);\n        setDeletedSuccess(true);\n        setTimeout(() => {\n          setDeletedSuccess(false);\n        }, 3000);\n      })\n      .catch((error) => {\n        console.error(\"Error deleting record:\", error);\n        setDeletePopUp(false);\n        setDeletedSuccess(false);\n      });\n  };\n\n  const handleDelete = () => {\n    console.log(\"hi...\");\n    deleteRecord();\n  };\n\n  return (\n    <div className=\"col-md-12\">\n      <Draggable>\n        <CModal\n          style={{ cursor: \"all-scroll\" }}\n          alignment=\"center\"\n          backdrop=\"static\"\n          visible={deletePopUp}\n          size=\"sm\"\n          className=\" ui-dialog\"\n          onClose={() => setDeletePopUp(false)}\n        >\n          <CModalHeader className=\"\">\n            <CModalTitle>\n              <span className=\"\">Delete Task</span>\n            </CModalTitle>\n          </CModalHeader>\n          <CModalBody>\n            <span> Are you sure you want to delete resource ?</span>\n            <div className=\"btn-container center mb-1 mt-4\">\n              <button className=\"btn btn-secondary\" onClick={handleDelete}>\n                Delete\n              </button>\n              <button className=\"btn btn-secondary\">Cancel</button>\n            </div>\n          </CModalBody>\n        </CModal>\n      </Draggable>\n    </div>\n  );\n}\nexport default TaskPlanResDeletePopUp;\n","import React from \"react\";\nimport { useState, useEffect, useRef } from \"react\";\nimport DatePicker from \"react-datepicker\";\nimport moment from \"moment\";\nimport axios from \"axios\";\nimport { DataTable } from \"primereact/datatable\";\nimport { Column } from \"primereact/column\";\nimport { ColumnGroup } from \"primereact/columngroup\";\nimport { Row } from \"primereact/row\";\nimport { environment } from \"../../environments/environment\";\nimport { AiFillDelete, AiFillEdit, AiFillWarning } from \"react-icons/ai\";\nimport \"./TaskPlan.scss\";\nimport { MdOutlineAdd } from \"react-icons/md\";\nimport { TfiSave } from \"react-icons/tfi\";\nimport { ImCross } from \"react-icons/im\";\nimport TaskPlanResDeletePopUp from \"./TaskPlanResDeletePopUp\";\nimport { BiCheck } from \"react-icons/bi\";\nimport Loader from \"../Loader/Loader\";\n\nfunction TaskPlanResourceTable(props) {\n  const { selectedRow, taskList, setAssignedHrs, assignedHrs, grp2Items } =\n    props;\n  const baseUrl = environment.baseUrl;\n  const [loader, setLoader] = useState(false);\n  const abortController = useRef(null);\n  const [deleteFailed, setDeleteFailed] = useState(false);\n  const [holidays, setHolidays] = useState(0);\n  console.log(\"holidays>\", holidays);\n\n  const calculateWeekdays = (startDate, endDate, resId, multiplier) => {\n    axios\n      .get(\n        baseUrl +\n          `/ProjectMS/taskPlan/holidays?resId=${resId}&startDate=${startDate}&endDate=${endDate}`\n      )\n      .then((resp) => {\n        const data = resp.data;\n        console.log(data.holidays);\n        setHolidays(data.holidays);\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n\n    const weekdays = [];\n    const currentDate = new Date(startDate);\n\n    while (currentDate <= new Date(endDate)) {\n      const dayOfWeek = currentDate.getDay(); // 0 (Sunday) to 6 (Saturday)\n\n      // Count weekdays (Monday to Friday)\n      if (dayOfWeek >= 1 && dayOfWeek <= 5) {\n        weekdays.push(new Date(currentDate));\n      }\n\n      currentDate.setDate(currentDate.getDate() + 1);\n    }\n\n    return (weekdays.length - holidays) * multiplier;\n  };\n\n  /////////////////////////////////////////////////////\n\n  {\n    /*---------------------------------UseState's----------------------------------- */\n  }\n  const [projectNewResource, setProjectNewResource] = useState([]);\n  const [roleId, setRoleId] = useState(\"\");\n  const [deletePopUp, setDeletePopUp] = useState(false);\n  const [projectOldResource, setProjectOldResource] = useState([]);\n  const [taskResources, setTaskResources] = useState([]);\n  const [enableDropDown, setEnableDropDown] = useState(false);\n  const [enableAddDropDown, setEnableAddDropDown] = useState(false);\n  const [reAssToDate, setReAssToDate] = useState(new Date());\n  const [reAssFromDate, setReAssFromDate] = useState(new Date());\n  const [reAssDailyHrs, setReAssDailyHrs] = useState(\"\");\n  const [editor, setEditor] = useState(false);\n  const [rowResourceId, setRowResourceId] = useState(\"\");\n  const [resAssingedHrs, setResAssingedHrs] = useState(0);\n  const [resAllocationsHrs, setResAllocationsHrs] = useState(0);\n  const [backUpTaskResource, setBackUpTaskResource] = useState([]);\n  const [rowToBeEdited, setRowToBeEdited] = useState();\n  const [resourceSaved, setResourceSaved] = useState(false);\n  const [AddorEdit, setAddorEdit] = useState(false);\n  const [disableAdd, setDisableAdd] = useState(false);\n  const [deletedSuccess, setDeletedSuccess] = useState(false);\n  const [resAllocData, setResAllocData] = useState({\n    roleId: \"\",\n    resId: \"\",\n    fromDt: moment(new Date()).format(\"YYYY-MM-DD\"),\n    toDt: moment(new Date()).format(\"YYYY-MM-DD\"),\n    newVal: \"\",\n    taskId: \"\",\n  });\n  const dataObject = grp2Items.find(\n    (item) => item.display_name === \"Task Plan\"\n  );\n  const handleAbort = () => {\n    abortController.current && abortController.current.abort();\n    setLoader(false);\n  };\n\n  const [toBeAddedRowData, setToBeAddedRowData] = useState({\n    fromDt: moment(new Date()).format(\"YYYY-MM-DD\"),\n    toDt: moment(new Date()).format(\"YYYY-MM-DD\"),\n    taskId: \"\",\n    taskRoleId: \"\",\n    resId: \"\",\n    dailyHrs: 0,\n    resource: \"\",\n  });\n\n  {\n    /*----------Axios call for default date on dropdown xhanges on add Button----------*/\n  }\n\n  const getResDate1 = () => {\n    let ID = toBeAddedRowData.resource.split(\"_\");\n    axios\n      .get(\n        baseUrl +\n          `/ProjectMS/taskPlan/resDates?taskId=${\n            taskList[selectedRow - 1].taskId\n          }&roleId=${ID[0]}&resId=${ID[1]}`\n      )\n      .then((response) => {\n        const data = response.data;\n        setReAssToDate(data.toDt);\n        setReAssFromDate(data.fromDt);\n        setResAllocData((prev) => ({\n          ...prev,\n          toDt: data.toDt,\n          fromDt: data.fromDt,\n        }));\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  useEffect(() => {\n    getResDate1();\n  }, [toBeAddedRowData.resource]);\n\n  console.log(\"taskList\", taskList);\n\n  console.log(\"taskResources>>\", taskResources);\n  console.log(\"projectNewResource>>\", projectNewResource);\n\n  {\n    /*--------------------Axios Call To Get the Task Resource List-------------------*/\n  }\n\n  const getResList = () => {\n    axios\n      .get(\n        baseUrl +\n          `/ProjectMS/taskPlan/taskResources?taskId=${\n            taskList[selectedRow - 1].taskId\n          }`\n      )\n      .then((response) => {\n        const data = response.data;\n        setTaskResources(data);\n        const totalHrsSum = data.reduce(\n          (acc, current) => acc + current.totalHrs,\n          0\n        );\n        setAssignedHrs(totalHrsSum);\n        console.log(\"totalHrsSum>>\", totalHrsSum);\n        setBackUpTaskResource(data);\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  useEffect(() => {\n    getResList();\n  }, [deletePopUp]);\n\n  useEffect(() => {\n    axios\n      .get(\n        baseUrl +\n          `/ProjectMS/taskPlan/projectResources?taskId=${\n            taskList[selectedRow - 1].taskId\n          }`\n      )\n      .then((response) => {\n        const data = response.data;\n        setProjectNewResource(data.newOptions);\n        setProjectOldResource(data.editOptions);\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  }, []);\n\n  {\n    /*--------------------Code for Header's Col-Span & Row-span-------------------*/\n  }\n\n  const headerGroup = (\n    <ColumnGroup>\n      <Row>\n        <Column\n          field=\"resource\"\n          style={{ width: \"12rem\" }}\n          header=\"Resource\"\n          rowSpan={2}\n        />\n        <Column header=\"Assignments : Task level\" colSpan={3} />\n        <Column header=\"Project levels (Hrs)\" colSpan={2} />\n        <Column header=\"Re-Assignments : Task level\" colSpan={4} />\n        <Column header=\"Project levels (Hrs)\" colSpan={2} />\n        {grp2Items[2].is_write == true && (\n          <Column\n            header=\"Actions\"\n            style={{ width: \"6rem\", textAlign: \"center\" }}\n            rowSpan={2}\n          />\n        )}\n      </Row>\n      <Row>\n        <Column field=\"fromDt\" header=\"From Dt\" />\n        <Column field=\"toDt\" header=\"To Dt\" />\n        <Column field=\"totalHrs\" header=\"Total Hrs\" />\n        <Column field=\"allocatedHrs\" header=\"Allocated\" />\n        <Column field=\"assgnedHrs\" header=\"Assigned\" />\n        <Column header=\"From Date\" />\n        <Column header=\"To Date\" />\n        <Column header=\"Daily Hrs\" />\n        <Column header=\"Total Hrs\" />\n        <Column header=\"Allocated\" />\n        <Column header=\"Assigned\" />\n      </Row>\n    </ColumnGroup>\n  );\n\n  {\n    /*---------------------Axios for getting Re-Assignment Dates-------------------*/\n  }\n  const getResDates = (taskId, resId, roleId) => {\n    axios\n      .get(\n        baseUrl +\n          `/ProjectMS/taskPlan/resDates?taskId=${taskId}&roleId=${roleId}&resId=${resId}`\n      )\n      .then((response) => {\n        const data = response.data;\n        setReAssToDate(data.toDt);\n        setReAssFromDate(data.fromDt);\n        setResAllocData((prev) => ({\n          ...prev,\n          toDt: data.toDt,\n          fromDt: data.fromDt,\n        }));\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  {\n    /*---------------------Axios for getting Re-Assis. Daily Hours-------------------*/\n  }\n  const getResHours = () => {\n    axios\n      .get(`${baseUrl}/ProjectMS/taskPlan/resHours`, {\n        params: resAllocData,\n      })\n      .then((response) => {\n        const data = response.data;\n        setResAllocationsHrs(data[0].allocationHrs);\n        setResAssingedHrs(data[0].assignedHrs);\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  {\n    /*---------------------Editors for Re-Assignment Dates & Daily Hours-------------------*/\n  }\n  const textEditortoDt = (rowData, options) => {\n    return (\n      <DatePicker\n        name=\"to_dt\"\n        id=\"to_dt\"\n        dateFormat=\"dd-MMM-yyyy\"\n        selected={\n          toBeAddedRowData.resource\n            ? new Date(reAssToDate)\n            : rowData.resourceId == \"New\"\n            ? \"\"\n            : new Date(reAssToDate)\n        }\n        onKeyDown={(e) => {\n          e.preventDefault();\n        }}\n        onSelect={(date) => {\n          setResAllocData((prev) => ({\n            ...prev,\n            toDt: moment(date).format(\"YYYY-MM-DD\"),\n          }));\n          setReAssToDate(moment(date).format(\"YYYY-MM-DD\"));\n        }}\n        showMonthDropdown={true}\n        showYearDropdown={true}\n      />\n    );\n  };\n\n  const textEditorFromDt = (rowData) => {\n    return (\n      <DatePicker\n        name=\"form_dt\"\n        id=\"form_dt\"\n        selected={\n          toBeAddedRowData.resource\n            ? new Date(reAssFromDate)\n            : new Date(rowData.toDt) >= new Date()\n            ? new Date()\n            : rowData.resourceId == \"New\"\n            ? \"\"\n            : new Date(reAssFromDate)\n        }\n        dateFormat=\"dd-MMM-yyyy\"\n        onKeyDown={(e) => {\n          e.preventDefault();\n        }}\n        onSelect={(date) => {\n          setResAllocData((prev) => ({\n            ...prev,\n            fromDt: moment(date).format(\"YYYY-MM-DD\"),\n          }));\n          setReAssFromDate(moment(date).format(\"YYYY-MM-DD\"));\n        }}\n        showMonthDropdown={true}\n        showYearDropdown={true}\n      />\n    );\n  };\n\n  const textEditorDailyhrs = (rowData) => {\n    return (\n      <>\n        <input\n          type=\"text\"\n          onChange={(e) => {\n            setResAllocData((prev) => ({\n              ...prev,\n              newVal: e.target.value,\n            }));\n          }}\n          id=\"daily_hours\"\n        />\n      </>\n    );\n  };\n\n  {\n    /*---------------------------Editors Button in Action Column----------------------------*/\n  }\n\n  const renderRowActions = (rowData) => {\n    return (\n      <div style={{ paddingLeft: \"20px\" }}>\n        <label cursor=\"pointer\">\n          <AiFillEdit\n            title=\"Edit\"\n            className=\"mr-1\"\n            color=\"orange\"\n            onClick={() => {\n              setDisableAdd(true);\n              setEnableDropDown(true);\n              if (\n                resAllocData.resId != rowData.resourceId &&\n                resAllocData.newVal == \"\"\n              ) {\n                getResDates(rowData.taskId, rowData.resourceId, rowData.roleId);\n                setEditor(true);\n                setRowResourceId(rowData.resourceId);\n                setRowToBeEdited(rowData);\n                setResAllocData((prev) => ({\n                  ...prev,\n                  roleId: rowData.roleId,\n                  resId: rowData.resourceId,\n                  taskId: rowData.taskId,\n                }));\n              } else {\n                getResHours();\n              }\n            }}\n          />\n          &nbsp;\n          <span\n            onClick={() => {\n              setDeletePopUp(true);\n              setRoleId(rowData.taskRoleId);\n            }}\n          >\n            <AiFillDelete title=\"Delete\" color=\"orange\" />\n          </span>\n        </label>\n      </div>\n    );\n  };\n\n  {\n    /*---------------------------Code for Add Button to add the Row----------------------------*/\n  }\n\n  const addRow = () => {\n    setDisableAdd(true);\n    setAddorEdit(true);\n    setEditor(true);\n    setEnableAddDropDown(true);\n    const newRow = {\n      resource: \"\",\n      fromDt: \"\",\n      toDt: \"\",\n      totalHrs: 0,\n      allocatedHrs: 0,\n      assgnedHrs: 0,\n      resourceId: \"New\",\n    };\n\n    setTaskResources((prevTaskResources) => [newRow, ...prevTaskResources]);\n  };\n\n  {\n    /*---------------------------Code for Cancel Button to revert the Row's----------------------------*/\n  }\n  const removeChanges = () => {\n    setDisableAdd(false);\n    setEditor(false);\n    setTaskResources(backUpTaskResource);\n  };\n\n  {\n    /*-----------------------------Code for Save or Edit the table Row's------------------------------*/\n  }\n  const saveChanges = () => {\n    const loaderTime = setTimeout(() => {\n      setLoader(true);\n    }, 2000);\n    setDisableAdd(false);\n    setEditor(false);\n\n    axios\n      .post(\n        // `http://localhost:8092/ProjectMS/taskPlan/saveTaskResource`,\n        `${baseUrl}/ProjectMS/taskPlan/saveTaskResource`,\n        AddorEdit\n          ? {\n              fromDt: moment(reAssFromDate).format(\"YYYY-MM-DD\"),\n              toDt: moment(reAssToDate).format(\"YYYY-MM-DD\"),\n              taskId: taskList[selectedRow - 1].taskId,\n              taskRoleId: \"null\",\n              resId: \"null\",\n              dailyHrs: resAllocData.newVal == \"\" ? 0 : resAllocData.newVal,\n              resource: toBeAddedRowData.resource,\n            }\n          : {\n              fromDt: moment(rowToBeEdited.fromDt).format(\"YYYY-MM-DD\"),\n              toDt: moment(rowToBeEdited.toDt).format(\"YYYY-MM-DD\"),\n              taskId: rowToBeEdited.taskId,\n              taskRoleId: rowToBeEdited.taskRoleId,\n              resId: rowToBeEdited.resourceId,\n              dailyHrs: resAllocData.newVal == \"\" ? 0 : resAllocData.newVal,\n              resource: rowToBeEdited.roleId + \"_\" + rowToBeEdited.resourceId,\n            }\n      )\n      .then((response) => {\n        const data = response.data;\n        clearTimeout(loaderTime);\n        setLoader(false);\n        if (data.id == null || data.id == \"\") {\n          setResourceSaved(false);\n          getResList();\n          return;\n        }\n        setAddorEdit(false);\n        setEditor(false);\n        setEnableAddDropDown(false);\n        setEnableDropDown(false);\n        setResourceSaved(true);\n        setTimeout(() => {\n          setResourceSaved(false);\n        }, 3000);\n        getResList();\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  return (\n    <div>\n      {resourceSaved ? (\n        <div className=\"statusMsg success\">\n          {\" \"}\n          <BiCheck /> Resource saved successfully.\n        </div>\n      ) : (\n        \"\"\n      )}\n      {deletedSuccess ? (\n        <div className=\"statusMsg success\">\n          {\" \"}\n          <BiCheck /> Task Deleted Successfully\n        </div>\n      ) : (\n        \"\"\n      )}\n      {deleteFailed ? (\n        <div className=\"statusMsg error\">\n          {\" \"}\n          <AiFillWarning /> you cannot delete resource.\n        </div>\n      ) : (\n        \"\"\n      )}\n      <div className=\"darkHeader\">\n        <DataTable\n          value={taskResources}\n          showGridlines\n          headerColumnGroup={headerGroup}\n          editMode=\"row\"\n          dataKey=\"id\"\n          className=\" primeReactDataTable\" ////customerEngament\n          paginatorTemplate=\"RowsPerPageDropdown FirstPageLink PrevPageLink CurrentPageReport NextPageLink LastPageLink\"\n          currentPageReportTemplate=\"{first} to {last} of {totalRecords}\"\n          rowsPerPageOptions={[10, 25, 50]}\n          paginator\n          rows={25}\n        >\n          <Column\n            key={\"resource\"}\n            field={\"resource\"}\n            header={\"Resource\"}\n            body={(options) => {\n              return enableDropDown &&\n                options.resourceId == rowResourceId &&\n                editor ? (\n                <select disabled>\n                  {projectOldResource\n                    .filter((item) => item.label === options.resource)\n                    .map((item, index) => (\n                      <option key={index} value={item.label}>\n                        {item.label}\n                      </option>\n                    ))}\n                </select>\n              ) : options.resourceId == \"New\" && editor ? (\n                <select\n                  onChange={(e) => {\n                    setToBeAddedRowData((prev) => ({\n                      ...prev,\n                      resource: e.target.value,\n                    }));\n                  }}\n                >\n                  {projectNewResource.map((item, index) => (\n                    <option key={item} value={item.id}>\n                      {item.label}\n                    </option>\n                  ))}\n                </select>\n              ) : (\n                <>{options.resource}</>\n              );\n            }}\n          ></Column>\n          <Column\n            key={\"fromDt\"}\n            field={\"fromDt\"}\n            style={{ whiteSpace: \"normal\" }}\n          ></Column>\n          <Column\n            key={\"toDt\"}\n            field={\"toDt\"}\n            style={{ whiteSpace: \"normal\" }}\n          ></Column>\n          <Column\n            key={\"totalHrs\"}\n            field={\"totalHrs\"}\n            body={(options) => {\n              return (\n                <span\n                  style={{\n                    display: \"block\",\n                    float: \"right\",\n                  }}\n                >\n                  {options.totalHrs.toFixed(2)}\n                </span>\n              );\n            }}\n          ></Column>\n          <Column\n            key={\"allocatedHrs\"}\n            field={\"allocatedHrs\"}\n            body={(options) => {\n              return (\n                <span\n                  style={{\n                    display: \"block\",\n                    float: \"right\",\n                  }}\n                >\n                  {options.allocatedHrs == null\n                    ? \"0.00\"\n                    : options.allocatedHrs.toFixed(2)}\n                </span>\n              );\n            }}\n          ></Column>\n          <Column\n            key={\"assgnedHrs\"}\n            field={\"assgnedHrs\"}\n            body={(options) => {\n              return (\n                <span\n                  style={{\n                    display: \"block\",\n                    float: \"right\",\n                  }}\n                >\n                  {options.assgnedHrs == null\n                    ? \"0.00\"\n                    : options.assgnedHrs.toFixed(2)}\n                </span>\n              );\n            }}\n          ></Column>\n          <Column\n            key={\"\"}\n            field={\"\"}\n            body={(options) => {\n              return options.resourceId == rowResourceId && editor\n                ? textEditorFromDt(options)\n                : options.resourceId == \"New\" && editor\n                ? textEditorFromDt(options)\n                : \"\";\n            }}\n          ></Column>\n          <Column\n            key={\"\"}\n            field={\"\"}\n            body={(options) => {\n              return options.resourceId == rowResourceId && editor\n                ? textEditortoDt(options)\n                : options.resourceId == \"New\" && editor\n                ? textEditortoDt(options)\n                : \"\";\n            }}\n          ></Column>\n          <Column\n            key={\"\"}\n            field={\"\"}\n            body={(options) => {\n              return options.resourceId == rowResourceId && editor\n                ? textEditorDailyhrs(options)\n                : options.resourceId == \"New\" && editor\n                ? textEditorDailyhrs(options)\n                : \"\";\n            }}\n          ></Column>\n          <Column\n            key={\"\"}\n            field={\"\"}\n            body={(options) => {\n              return options.resourceId == rowResourceId ? (\n                <span style={{ display: \"block\", float: \"left\" }}>\n                  {parseInt(resAllocationsHrs).toFixed(2) == 0.0 ||\n                  parseInt(resAssingedHrs).toFixed(2) == null\n                    ? \"\"\n                    : calculateWeekdays(\n                        reAssFromDate,\n                        reAssToDate,\n                        options.resourceId,\n                        resAllocData.newVal\n                      ).toFixed(2)}\n                </span>\n              ) : (\n                \"\"\n              );\n            }}\n          ></Column>\n          <Column\n            key={\"\"}\n            field={\"\"}\n            body={(options) => {\n              return options.resourceId == rowResourceId ? (\n                <span\n                  style={{\n                    display: \"block\",\n                    float: \"right\",\n                  }}\n                >\n                  {parseInt(resAllocationsHrs).toFixed(2) == 0.0 ||\n                  parseInt(resAssingedHrs).toFixed(2) == null\n                    ? \"\"\n                    : parseInt(resAllocationsHrs).toFixed(2)}\n                </span>\n              ) : (\n                \"\"\n              );\n            }}\n          ></Column>\n          <Column\n            key={\"\"}\n            field={\"\"}\n            body={(options) => {\n              return options.resourceId == rowResourceId ? (\n                <span\n                  style={{\n                    display: \"block\",\n                    float: \"right\",\n                  }}\n                >\n                  {parseInt(resAssingedHrs).toFixed(2) == 0.0 ||\n                  parseInt(resAssingedHrs).toFixed(2) == null\n                    ? \"\"\n                    : parseInt(resAssingedHrs).toFixed(2)}\n                </span>\n              ) : (\n                \"\"\n              );\n            }}\n          ></Column>\n          {grp2Items[2].is_write == true && (\n            <Column\n              bodyStyle={{ textAlign: \"align center\" }}\n              body={renderRowActions}\n            ></Column>\n          )}\n        </DataTable>\n      </div>\n      {dataObject?.is_write == true ? (\n        <div className=\"form-group col-md-2 btn-container-events center my-3\">\n          <button\n            className=\"btn btn-primary\"\n            onClick={() => {\n              addRow();\n            }}\n            variant=\"contained\"\n            disabled={!disableAdd ? false : true}\n          >\n            <MdOutlineAdd size=\"1.2em\" /> Add\n          </button>\n          <button\n            className=\"btn btn-primary\"\n            variant=\"contained\"\n            onClick={() => {\n              saveChanges();\n            }}\n            disabled={disableAdd ? false : true}\n          >\n            <TfiSave size=\"0.9em\" /> Save\n          </button>\n          <button\n            className=\"btn btn-primary\"\n            variant=\"contained\"\n            onClick={() => {\n              removeChanges();\n            }}\n            disabled={disableAdd ? false : true}\n          >\n            <ImCross /> Cancel\n          </button>\n        </div>\n      ) : (\n        \"\"\n      )}\n      {deletePopUp ? (\n        <TaskPlanResDeletePopUp\n          setDeleteFailed={setDeleteFailed}\n          deletePopUp={deletePopUp}\n          setDeletePopUp={setDeletePopUp}\n          roleId={roleId}\n          setDeletedSuccess={setDeletedSuccess}\n        />\n      ) : (\n        \"\"\n      )}\n      {loader ? <Loader handleAbort={handleAbort} /> : \"\"}\n    </div>\n  );\n}\nexport default TaskPlanResourceTable;\n","import React from \"react\";\nimport { CModal, CModalBody, CModalHeader, CModalTitle } from \"@coreui/react\";\nimport Draggable from \"react-draggable\";\nimport { environment } from \"../../environments/environment\";\nimport moment from \"moment\";\nimport TaskPlanResourceTable from \"./TaskPlanResourceTable\";\nimport { useState } from \"react\";\n\nfunction TaskPlanResourcePopUp(props) {\n  const {\n    resourcePopUp,\n    setResourcePopUp,\n    taskList,\n    selectedRow,\n    grp2Items,\n  } = props;\n  const [assignedHrs, setAssignedHrs] = useState(0);\n  const baseUrl = environment.baseUrl;\n\n  /////////////////////////////////////////\n\n  return (\n    <div className=\"col-md-12\">\n      <CModal\n        alignment=\"center\"\n        backdrop=\"static\"\n        visible={resourcePopUp}\n        size=\"xl\"\n        className=\" ui-dialog\"\n        onClose={() => setResourcePopUp(false)}\n      >\n        <CModalHeader className=\"\">\n          <CModalTitle>\n            <span className=\"\">Resource Allocation</span>\n          </CModalTitle>\n        </CModalHeader>\n        <CModalBody style={{ cursor: \"auto\" }}>\n          <div\n            className=\"projGlance col-12 \"\n            style={{ backgroundColor: \"#f8f9fa\" }}\n          >\n            <div className=\"col-12 row\">\n              <div className=\"col-md-8 row mb-2\">\n                <div className=\"form-group\">\n                  <div className=\"row\">\n                    <label className=\"col-3  no-padding\">Task Name</label>\n                    <span className=\"col-1 p0\">:</span>\n                    <span className=\"col-6 \">\n                      {taskList[selectedRow - 1].content}\n                    </span>\n                  </div>\n                </div>\n                <div className=\"form-group\">\n                  <div className=\"row\">\n                    <label className=\"col-3  no-padding\">Task Start Date</label>\n                    <span className=\"col-1 p0\">:</span>\n                    <span className=\"col-6 \">\n                      {moment(taskList[selectedRow - 1].start).format(\n                        \"DD-MMM-YYYY\"\n                      )}\n                    </span>\n                  </div>\n                </div>\n                <div className=\"form-group\">\n                  <div className=\"row\">\n                    <label className=\"col-3  no-padding\">Task End Date</label>\n                    <span className=\"col-1 p0\">:</span>\n                    <span className=\"col-6 \">\n                      {moment(taskList[selectedRow - 1].finish).format(\n                        \"DD-MMM-YYYY\"\n                      )}\n                    </span>\n                  </div>\n                </div>\n                <div className=\"form-group\">\n                  <div className=\"row\">\n                    <label className=\"col-3  no-padding\">Role</label>\n                    <span className=\"col-1 p0\">:</span>\n                    <span className=\"col-6 \">\n                      {taskList[selectedRow - 1].roleName == null\n                        ? \"All\"\n                        : taskList[selectedRow - 1].roleName}\n                    </span>\n                  </div>\n                </div>\n              </div>\n              <div className=\"col-4 row\">\n                <div className=\"form-group\">\n                  <div\n                    className=\"row\"\n                    style={{ borderLeft: \"1.5px solid #ddd\" }}\n                  >\n                    <label className=\"col-6  no-padding\">Estimated Hrs</label>\n                    <span className=\"col-1 p0\">:</span>\n                    <span className=\"col-5 \">\n                      {taskList[selectedRow - 1].estimatedHrs}\n                    </span>\n                  </div>\n                </div>\n                <div className=\"form-group\">\n                  <div\n                    className=\"row\"\n                    style={{ borderLeft: \"1.5px solid #ddd\" }}\n                  >\n                    <label className=\"col-6  no-padding\">Assigned Hrs</label>\n                    <span className=\"col-1 p0\">:</span>\n                    <span className=\"col-5 \">{assignedHrs}</span>\n                  </div>\n                </div>\n                <div className=\"form-group\">\n                  <div\n                    className=\"row\"\n                    style={{ borderLeft: \"1.5px solid #ddd\" }}\n                  >\n                    <label className=\"col-6  no-padding\">Unassigned Hrs</label>\n                    <span className=\"col-1 p0\">:</span>\n                    <span className=\"col-5 \">\n                      {\" \"}\n                      {taskList[selectedRow - 1].estimatedHrs - assignedHrs}\n                    </span>\n                  </div>\n                </div>\n                <div className=\"form-group\">\n                  <div\n                    className=\"row\"\n                    style={{ borderLeft: \"1.5px solid #ddd\" }}\n                  >\n                    <label className=\"col-6  no-padding\">Actual Hrs</label>\n                    <span className=\"col-1 p0\">:</span>\n                    <span className=\"col-5 \">\n                      {taskList[selectedRow - 1].actualHrs == null\n                        ? 0\n                        : taskList[selectedRow - 1].actualHrs}\n                    </span>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"mt-2\">\n            <TaskPlanResourceTable\n              setAssignedHrs={setAssignedHrs}\n              assignedHrs={assignedHrs}\n              taskList={taskList}\n              selectedRow={selectedRow}\n              grp2Items={grp2Items}\n            />\n          </div>\n        </CModalBody>\n      </CModal>\n    </div>\n  );\n}\nexport default TaskPlanResourcePopUp;\n","import React from \"react\";\nimport { VscSave } from \"react-icons/vsc\";\nimport { VscChromeClose } from \"react-icons/vsc\";\nimport { useState, useEffect } from \"react\";\nimport DatePicker from \"react-datepicker\";\nimport moment from \"moment\";\nimport axios from \"axios\";\nimport { DataTable } from \"primereact/datatable\";\nimport { Column } from \"primereact/column\";\nimport { environment } from \"../../environments/environment\";\nimport { eachDayOfInterval, isWeekend, parse } from \"date-fns\";\nimport TaskPlanDeletePopUp from \"./TaskPlanDeletePopUP\";\nimport TaskPlanResourcePopUp from \"./TaskPlanResourcePopUp\";\nimport { BiCheck } from \"react-icons/bi\";\nimport ScreenBreadcrumbs from \"../Common/ScreenBreadcrumbs\";\nimport { AiFillWarning } from \"react-icons/ai\";\n\nfunction TaskPlan(props) {\n  const { projectId, grp2Items } = props;\n  const dataObject = grp2Items.find(\n    (item) => item.display_name === \"Task Plan\"\n  );\n  const loggedUserId = localStorage.getItem(\"resId\");\n  const baseUrl = environment.baseUrl;\n\n  {\n    /*------------------------------UseState's------------------------------*/\n  }\n\n  const [roleType, setRoleType] = useState([]);\n  const [deletedSuccess, setDeletedSuccess] = useState(false);\n  const [deletedFailed, setDeletedFailed] = useState(false);\n  const [taskType, setTaskType] = useState([]);\n  const [taskList, setTaskList] = useState([]);\n  const [projName, setProjName] = useState([]);\n  const [originalTaskList, setOriginalTaskList] = useState([]);\n  const [initialTaskList, setInitialTaskList] = useState([]);\n  const [selectedRow, setSelectedRow] = useState(\"\");\n  const [selectedTaskId, setSelectedTaskId] = useState(\"\");\n  const [deletePopUp, setDeletePopUp] = useState(false);\n  const [taskToCopy, setTaskToCopy] = useState([]);\n  const [resourcePopUp, setResourcePopUp] = useState(false);\n  const [taskSaved, setTaskSaved] = useState(false);\n  const [projectEndDate, setProjectEndDate] = useState(new Date());\n  const [projectStartDate, setProjectStartDate] = useState(new Date());\n  const [expandedRows, setExpandedRows] = useState(null);\n  const [expandedRows1, setExpandedRows1] = useState(null);\n\n  const numberOfDays = (startDate, endDate) => {\n    const allDates = eachDayOfInterval({ start: startDate, end: endDate });\n    const businessDates = allDates.filter((date) => !isWeekend(date));\n    return businessDates.length;\n  };\n\n  const addBusinessDays = (startDate, numberOfDays) => {\n    const addDays = (date, days) => {\n      const result = new Date(date);\n      result.setDate(result.getDate() + days);\n      return result;\n    };\n\n    let currentDate = new Date(startDate);\n    let remainingDays = numberOfDays;\n\n    while (remainingDays > 0) {\n      currentDate = addDays(currentDate, 1);\n      if (!isWeekend(currentDate)) {\n        remainingDays--;\n      }\n    }\n\n    return currentDate;\n  };\n\n  //////////////////////\n\n  const [routes, setRoutes] = useState([]);\n  let currentScreenName = [\"Projects\", \"Open\", \"Planning\", \"Task Plan\"];\n  let textContent = \"Delivery\";\n\n  const getMenus = () => {\n    axios({\n      method: \"GET\",\n      url: baseUrl + `/CommonMS/master/getMenus?loggedUserId=${loggedUserId}`,\n    }).then((resp) => {\n      let data = resp.data;\n\n      data.forEach((item) => {\n        if (item.display_name === textContent) {\n          setRoutes([item]);\n        }\n      });\n    });\n  };\n\n  useEffect(() => {\n    getMenus();\n  }, []);\n\n  {\n    /*-------Axios Call To Get the Project Details & Project End Date-------*/\n  }\n  useEffect(() => {\n    axios({\n      method: \"get\",\n      url:\n        baseUrl +\n        `/ProjectMS/Audit/projectOverviewDetails?projectId=${projectId}`,\n    })\n      .then(function (response) {\n        let resp = response.data;\n        setProjectEndDate(new Date(resp[0].plandEndDate));\n        setProjectStartDate(new Date(resp[0].plandStartDate));\n      })\n      .catch(function (response) {\n        console.log(response);\n      });\n  }, []);\n\n  {\n    /*--------------------Axios Call To Get the Task List-------------------*/\n  }\n  function isMonday() {\n    const today = new Date();\n    return today.getDay() === 1; // Sunday is 0, Monday is 1, ..., Saturday is 6\n  }\n  const getTaskList = () => {\n    axios\n      .get(\n        baseUrl +\n          `/ProjectMS/taskPlan/projectTask?projectId=${projectId}&userId=${loggedUserId}`\n      )\n      .then((response) => {\n        const data = response.data;\n        data.spData.forEach((item) => {\n          item.finish = moment(item.finish)\n            .subtract(1, \"day\")\n            .format(\"YYYY-MM-DD\");\n        });\n        setOriginalTaskList(data);\n        const dataWithSNo = data.spData.map((item, index) => ({\n          sno: index + 1,\n          duration: numberOfDays(new Date(item.start), new Date(item.finish)),\n          finish: moment(item.finish).subtract(1, \"day\").format(\"YYYY-MM-DD\"),\n          ...item,\n        }));\n\n        setTaskList(dataWithSNo);\n        setInitialTaskList(dataWithSNo);\n        setTaskType(data.taskTypes);\n        setRoleType(data.roleTypes);\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  useEffect(() => {\n    getTaskList();\n  }, [deletePopUp, resourcePopUp]);\n\n  {\n    /*--------------------Code to Add New Column in Table-------------------*/\n  }\n  const addTask = () => {\n    const NewDuration = () => {\n      const startDate = projectStartDate;\n      const endDate = projectEndDate;\n      return numberOfDays(startDate, endDate);\n    };\n\n    const newData = {\n      sno: taskList.length + 1,\n      content: \"New Task\",\n      start: taskList[initialTaskList.length - 1].start,\n      finish: moment(projectEndDate).format(\"YYYY-MM-DD\"),\n      indentation: lowestIndentation,\n      duration: NewDuration(),\n      roleName: null,\n      estimatedHrs: 0,\n      assignmentsContent: \"\",\n      actualHrs: taskList[initialTaskList.length - 1].actualHrs,\n      approvedHrs: taskList[initialTaskList.length - 1].approvedHrs,\n      status: \"New\",\n      taskType: 236,\n    };\n\n    setTaskList((prevTaskList) => [...prevTaskList, newData]);\n  };\n\n  {\n    /*--------------------Code to Insert New Column in Table-------------------*/\n  }\n  const insertTask = () => {\n    const NewDuration = () => {\n      const startDate = projectStartDate;\n      const endDate = projectEndDate;\n      return numberOfDays(startDate, endDate);\n    };\n    function formatDate(date) {\n      const year = date.getFullYear();\n      const month = String(date.getMonth() + 1).padStart(2, \"0\");\n      const day = String(date.getDate()).padStart(2, \"0\");\n      return `${year}-${month}-${day}`;\n    }\n\n    const newData = {\n      sno: selectedRow,\n      content: \"New Task\",\n      start: formatDate(projectStartDate),\n      indentation: taskList[parseInt(selectedRow) - 1].indentation,\n      finish: formatDate(projectEndDate),\n      duration: NewDuration(),\n      roleName: null,\n      estimatedHrs: 0,\n      assignmentsContent: \"\",\n      actualHrs: 0,\n      approvedHrs: 0,\n      status: \"New\",\n      taskType: 236,\n    };\n    setTaskList((prevTaskList) => {\n      const updatedTaskList = [...prevTaskList];\n      updatedTaskList.splice(parseInt(selectedRow) - 1, 0, newData);\n\n      for (let i = parseInt(selectedRow); i < updatedTaskList.length; i++) {\n        updatedTaskList[i].sno = i + 1;\n      }\n\n      return updatedTaskList;\n    });\n  };\n\n  {\n    /*-----------------------Code to Reset the Table-----------------------*/\n  }\n\n  const resetTaskList = () => {\n    setToDoPaste(false);\n    setSelectedRow(\"\");\n    const dataWithSNo = originalTaskList.spData.map((item, index) => ({\n      sno: index + 1,\n      duration: numberOfDays(new Date(item.start), new Date(item.finish)),\n      ...item,\n    }));\n    setTaskList([...dataWithSNo]);\n  };\n\n  {\n    /*----------------------Code to Save the Updates----------------------*/\n  }\n  const saveTaskList = (data) => {\n    const result = {\n      Tasks: {\n        Task: [],\n      },\n    };\n\n    Object.keys(data).forEach((key) => {\n      const value = data[key];\n      const task = {\n        rowIndex: value.sno,\n        TaskId: value.taskId == \"\" || value.taskId == null ? 1 : value.taskId,\n        TaskName: value.content,\n        LeafId:\n          value.indentation == \"\" || value.indentation == null\n            ? 0\n            : value.indentation,\n        Start: value.start,\n        Finish: value.finish,\n        Duration: value.duration,\n        TaskType:\n          value.taskType == \"\" || value.taskType == null\n            ? \"null\"\n            : value.taskType,\n        roleId:\n          value.roleId == \"\" ||\n          value.roleId == null ||\n          value.roleId == undefined ||\n          value.roleId == \"<<All>>\"\n            ? \"null\"\n            : value.roleId,\n        EstimatedHours: value.estimatedHrs,\n      };\n\n      result.Tasks.Task.push(task);\n    });\n\n    //saveTaskPlan\n    let toBeSavedTaskList = JSON.stringify(result);\n    const formData = new FormData();\n    formData.append(\"taskParams\", toBeSavedTaskList);\n    axios\n      .post(\n        baseUrl + `/ProjectMS/taskPlan/saveTaskPlan?projectId=${projectId}`,\n\n        formData\n      )\n      .then((response) => {\n        const Data = response.data;\n        getTaskList();\n        setTaskSaved(true);\n        setTimeout(() => {\n          setTaskSaved(false);\n        }, 3000);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  {\n    /*-----------------Code to Handle the Updates of Table-----------------*/\n  }\n  const handleChange = (rowData, field, value) => {\n    const updatedData = [...taskList];\n    const rowIndex = updatedData.findIndex((item) => item === rowData);\n    updatedData[rowIndex] = { ...rowData, [field]: value };\n    setTaskList(updatedData);\n  };\n\n  {\n    /*---------------------Axios Call to add side Header--------------------*/\n  }\n  const getData = () => {\n    axios\n      .get(baseUrl + `/ProjectMS/project/projectinfo?ProjectId=${projectId}`)\n      .then((res) => {\n        const GetData = res.data;\n        setProjName(GetData);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n  useEffect(() => {\n    getData();\n  }, []);\n\n  {\n    /*-----------------------Code for Move Up Button-----------------------*/\n  }\n\n  const moveUp = () => {\n    if (selectedRow > 1) {\n      setTaskList((prevTaskList) => {\n        const updatedTaskList = prevTaskList.map((task) => ({ ...task }));\n\n        const temp = updatedTaskList[selectedRow - 1];\n        updatedTaskList[selectedRow - 1] = updatedTaskList[selectedRow - 2];\n        updatedTaskList[selectedRow - 2] = temp;\n\n        updatedTaskList[selectedRow - 1].sno = selectedRow - 0;\n        updatedTaskList[selectedRow - 2].sno = selectedRow - 1;\n\n        return updatedTaskList;\n      });\n\n      setSelectedRow(selectedRow - 1);\n    }\n  };\n\n  {\n    /*----------------------Code for Move Down Button----------------------*/\n  }\n\n  const moveDown = () => {\n    if (selectedRow < taskList.length) {\n      setTaskList((prevTaskList) => {\n        const updatedTaskList = prevTaskList.map((task) => ({ ...task }));\n\n        const temp = updatedTaskList[selectedRow - 1];\n        updatedTaskList[selectedRow - 1] = updatedTaskList[selectedRow];\n        updatedTaskList[selectedRow] = temp;\n\n        updatedTaskList[selectedRow - 1].sno = selectedRow;\n        updatedTaskList[selectedRow].sno = selectedRow + 1;\n\n        return updatedTaskList;\n      });\n\n      setSelectedRow(selectedRow + 1);\n    }\n  };\n\n  {\n    /*------------------------Code for Copy & Paste-------------------------*/\n  }\n  const [toDoPaste, setToDoPaste] = useState(false);\n  const copyTask = () => {\n    setToDoPaste(true);\n    selectedRow == \"\" ? \"\" : setTaskToCopy(taskList[selectedRow - 1]);\n  };\n\n  useEffect(() => {\n    copyTask;\n  }, [selectedRow]);\n\n  const pasteTask = () => {\n    const newData = {\n      sno: selectedRow,\n      content: taskToCopy.content,\n      start: taskToCopy.start,\n      finish: taskToCopy.finish,\n      indentation: taskList[selectedRow - 1].indentation,\n      duration: taskToCopy.duration,\n      roleName: null,\n      estimatedHrs: taskToCopy.estimatedHrs,\n      assignmentsContent: \"\",\n      actualHrs: 0,\n      approvedHrs: 0,\n      status: \"New\",\n      taskType: taskToCopy.taskType,\n    };\n    setTaskList((prevTaskList) => {\n      const updatedTaskList = [...prevTaskList];\n      updatedTaskList.splice(parseInt(selectedRow), 0, newData);\n\n      for (let i = parseInt(selectedRow); i < updatedTaskList.length; i++) {\n        updatedTaskList[i].sno = i + 1;\n      }\n\n      return updatedTaskList;\n    });\n  };\n\n  {\n    /*------------Code For Increasing Indentation (Indent Task)------------ */\n  }\n\n  const increaseIndentation = () => {\n    if (selectedRow === null || selectedRow === 0) {\n      return;\n    }\n\n    const updatedTaskList = [...taskList];\n    const selectedTask = updatedTaskList[selectedRow - 1];\n    const previousTask = updatedTaskList[selectedRow - 2];\n\n    if (!selectedTask) {\n      return;\n    }\n\n    if (previousTask.indentation < selectedTask.indentation) {\n      return;\n    }\n\n    selectedTask.indentation += 1;\n    setTaskList(updatedTaskList);\n  };\n\n  {\n    /*------------Code For Increasing Indentation (Unindent Task)------------ */\n  }\n\n  const decreaseIndentation = () => {\n    if (selectedRow === null || selectedRow === 0) {\n      return;\n    }\n\n    const updatedTaskList = [...taskList];\n    const selectedTask = updatedTaskList[selectedRow - 1];\n\n    if (!selectedTask) {\n      return;\n    }\n    if (!allowExpansion(selectedTask)) {\n      selectedTask.indentation -= 1;\n      setTaskList(updatedTaskList);\n    }\n  };\n\n  {\n    /* ------Recusring the Rows for proper Parent-Childeren Alingment------ */\n  }\n\n  const getRowsWithIndentation = (sno, indentation) => {\n    const childRows = [];\n\n    for (let i = sno; i < taskList.length; i++) {\n      const row = taskList[i];\n      if (row.indentation === indentation + 1) {\n        childRows.push(row);\n        i += getRowsWithIndentation(i, indentation + 1).length; // Recursively find children\n      } else if (row.indentation <= indentation) {\n        break;\n      }\n    }\n\n    return childRows;\n  };\n\n  {\n    /*----------------Row Expansion Template for showing the Data after Expansion---------------- */\n  }\n\n  const rowExpansionTemplate = (rowData) => {\n    const currentIndentation = rowData.indentation;\n    const childRows = getRowsWithIndentation(rowData.sno, currentIndentation);\n    return (\n      <DataTable\n        expandAll\n        value={childRows}\n        showGridlines\n        expandedRows={expandedRows1}\n        onRowToggle={(e) => setExpandedRows1(e.data)}\n        rowExpansionTemplate={rowExpansionTemplate}\n        className=\"primeReactDataTable taskPlanInnerTable\"\n        collapseAll\n        emptyMessage\n      >\n        <Column feild=\"expand\" expander={allowExpansion} />\n        <Column\n          key={\"content\"}\n          field={\"content\"}\n          header={\"Task\"}\n          body={(rowData) => (\n            <input\n              className={`lvl-${rowData.indentation}`}\n              style={{\n                fontWeight: allowExpansion(rowData) ? \"bolder\" : \"normal\",\n              }}\n              disabled={grp2Items[2].is_write == true ? false : true}\n              type=\"text\"\n              value={rowData.content}\n              onChange={(e) => {\n                handleChange(rowData, \"content\", e.target.value);\n              }}\n              onClick={() => {\n                const selectedSno = rowData.sno;\n                setSelectedRow(selectedSno);\n                setSelectedTaskId(rowData.taskId);\n              }}\n            />\n          )}\n        />\n        <Column\n          key={\"start\"}\n          field={\"start\"}\n          header={\"Start\"}\n          body={(rowData) => (\n            <span\n              onClick={() => {\n                const selectedSno = rowData.sno;\n                setSelectedRow(selectedSno);\n                setSelectedTaskId(rowData.taskId);\n              }}\n            >\n              <DatePicker\n                portalId=\"root-portal\"\n                disabled={\n                  (grp2Items[2].is_write == true ? false : true) ||\n                  allowExpansion(rowData)\n                }\n                dateFormat=\"dd-MMM-yyyy\"\n                onKeyDown={(e) => {\n                  e.preventDefault();\n                }}\n                filterDate={(date) => {\n                  return date.getDay() !== 0 && date.getDay() !== 6;\n                }}\n                selected={moment(rowData.start).toDate()}\n                showMonthDropdown={true}\n                showYearDropdown={true}\n                onChange={(date) => {\n                  const updatedData = [...taskList];\n                  const value = numberOfDays(date, new Date(rowData.finish));\n                  updatedData[rowData.sno - 1] = {\n                    ...rowData,\n                    duration: value,\n                    start: moment(date).format(\"YYYY-MM-DD\"),\n                  };\n                  setTaskList(updatedData);\n                }}\n              />\n            </span>\n          )}\n        />\n        <Column\n          key={\"finish\"}\n          field={\"finish\"}\n          header={\"Finish\"}\n          body={(rowData) => (\n            <span\n              onClick={() => {\n                const selectedSno = rowData.sno;\n                setSelectedRow(selectedSno);\n                setSelectedTaskId(rowData.taskId);\n              }}\n            >\n              <DatePicker\n                portalId=\"root-portal\"\n                disabled={\n                  (grp2Items[2].is_write == true ? false : true) ||\n                  allowExpansion(rowData)\n                }\n                dateFormat=\"dd-MMM-yyyy\"\n                onKeyDown={(e) => {\n                  e.preventDefault();\n                }}\n                selected={moment(rowData.finish).toDate()}\n                showMonthDropdown={true}\n                showYearDropdown={true}\n                filterDate={(date) => {\n                  return date.getDay() !== 0 && date.getDay() !== 6;\n                }}\n                onClick={() => {\n                  const selectedSno = rowData.sno;\n                  setSelectedRow(selectedSno);\n                  setSelectedTaskId(rowData.taskId);\n                }}\n                onChange={(date) => {\n                  const updatedData = [...taskList];\n                  const value = numberOfDays(new Date(rowData.start), date);\n                  updatedData[rowData.sno - 1] = {\n                    ...rowData,\n                    duration: value,\n                    finish: moment(date).format(\"YYYY-MM-DD\"),\n                  };\n                  setTaskList(updatedData);\n                }}\n              />\n            </span>\n          )}\n        />\n        <Column\n          key={\"duration\"}\n          field={\"duration\"}\n          header={\"Duration(d)\"}\n          body={(rowData) => (\n            <input\n              style={{\n                fontWeight: allowExpansion(rowData) ? \"bolder\" : \"normal\",\n              }}\n              disabled={\n                (grp2Items[2].is_write == true ? false : true) ||\n                allowExpansion(rowData)\n              }\n              type=\"text\"\n              value={parseInt(rowData.duration)}\n              onClick={() => {\n                const selectedSno = rowData.sno;\n                setSelectedRow(selectedSno);\n                setSelectedTaskId(rowData.taskId);\n              }}\n              onChange={(e) => {\n                handleChange(rowData, \"duration\", e.target.value);\n              }}\n              onBlur={(e) => {\n                const formatDate = (date) => {\n                  const year = date.getFullYear();\n                  const month = String(date.getMonth() + 1).padStart(2, \"0\");\n                  const day = String(date.getDate()).padStart(2, \"0\");\n                  return `${year}-${month}-${day}`;\n                };\n                const finishDate = formatDate(\n                  addBusinessDays(rowData.start, e.target.value - 1)\n                );\n\n                handleChange(rowData, \"finish\", finishDate);\n              }}\n            ></input>\n          )}\n        />\n        <Column\n          key={\"roleName\"}\n          field={\"roleName\"}\n          header={\"Role\"}\n          body={(rowData) =>\n            allowExpansion(rowData) ? (\n              <></>\n            ) : (\n              <select\n                disabled={grp2Items[2].is_write == true ? false : true}\n                onClick={() => {\n                  const selectedSno = rowData.sno;\n                  setSelectedRow(selectedSno);\n                  setSelectedTaskId(rowData.taskId);\n                }}\n                onChange={(e) => {\n                  const selectedRoleName =\n                    e.target.options[e.target.selectedIndex].getAttribute(\n                      \"selectedRoleName\"\n                    );\n                  handleChange(\n                    rowData,\n                    \"roleId\",\n                    e.target.value,\n                    (rowData.roleName = selectedRoleName)\n                  );\n                }}\n              >\n                <option value={null}>&lt;&lt;All&gt;&gt;</option>\n                {roleType.map((item) => (\n                  <option\n                    key={item.id}\n                    value={item.id}\n                    selected={rowData.roleId == item.id}\n                    selectedRoleName={item.name}\n                  >\n                    {item.name}\n                  </option>\n                ))}\n              </select>\n            )\n          }\n        />\n        <Column\n          key={\"estimatedHrs\"}\n          field={\"estimatedHrs\"}\n          header={\"Estimated Hrs\"}\n          body={(rowData) =>\n            allowExpansion(rowData) ? (\n              <></>\n            ) : (\n              <input\n                disabled={grp2Items[2].is_write == true ? false : true}\n                type=\"text\"\n                value={rowData.estimatedHrs}\n                onClick={() => {\n                  const selectedSno = rowData.sno;\n                  setSelectedRow(selectedSno);\n                  setSelectedTaskId(rowData.taskId);\n                }}\n                onChange={(e) =>\n                  handleChange(rowData, \"estimatedHrs\", e.target.value)\n                }\n                style={{ textAlign: \"right\" }}\n              ></input>\n            )\n          }\n        />\n        <Column\n          key={\"assignmentsContent\"}\n          field={\"assignmentsContent\"}\n          header={\"Assignments\"}\n          body={(rowData) => (\n            <input\n              type=\"text\"\n              value={rowData.assignmentsContent}\n              style={{ textDecoration: \"underline\" }}\n              onClick={() => {\n                const selectedSno = rowData.sno;\n                const checkFinishDate = rowData.finish;\n                const currentDate = moment(new Date()).format(\"YYYY-MM-DD\");\n                setResourcePopUp(checkFinishDate > currentDate ? true : false);\n                if (currentDate > checkFinishDate) {\n                  setResourcePopUp(false);\n                  alert(\"Change the task end date for resource allocations\");\n                }\n                if (rowData.estimatedHrs == 0) {\n                  setResourcePopUp(false);\n                  alert(\"Please enter Estimated Hrs\");\n                } else if (rowData.assignmentsContent == \"\") {\n                  setResourcePopUp(false);\n                  alert(\"Please save Task\");\n                }\n                setSelectedRow(selectedSno);\n                setSelectedTaskId(rowData.taskId);\n              }}\n              onChange={(e) =>\n                handleChange(rowData, \"assignmentsContent\", e.target.value)\n              }\n            ></input>\n          )}\n        />\n        <Column\n          key={\"actualHrs\"}\n          field={\"actualHrs\"}\n          header={\"Actual Hrs\"}\n          body={(rowData, column) => {\n            const value = rowData[column.field];\n            const formattedValue = value == null ? \"0.0\" : value.toFixed(1);\n            return allowExpansion(rowData) ? (\n              <></>\n            ) : (\n              <span\n                onClick={() => {\n                  const selectedSno = rowData.sno;\n                  setSelectedRow(selectedSno);\n                  setSelectedTaskId(rowData.taskId);\n                }}\n              >\n                {formattedValue}\n              </span>\n            );\n          }}\n        />\n        <Column\n          key={\"approvedHrs\"}\n          field={\"approvedHrs\"}\n          header={\"Approved Hrs\"}\n          body={(rowData, column) => {\n            const value = rowData[column.field];\n            const formattedValue = value == null ? \"0.0\" : value.toFixed(1);\n            return allowExpansion(rowData) ? (\n              <></>\n            ) : (\n              <span\n                onClick={() => {\n                  const selectedSno = rowData.sno;\n                  setSelectedRow(selectedSno);\n                  setSelectedTaskId(rowData.taskId);\n                }}\n              >\n                {formattedValue}\n              </span>\n            );\n          }}\n        />\n        <Column\n          key={\"status\"}\n          field={\"status\"}\n          header={\"Status\"}\n          body={(rowData) =>\n            allowExpansion(rowData) ? (\n              <></>\n            ) : (\n              <span\n                onClick={(e) => {\n                  const selectedSno = rowData.sno;\n                  setSelectedRow(selectedSno);\n                  setSelectedTaskId(rowData.taskId);\n                }}\n                style={{\n                  display: \"block\", // This ensures the span takes up full width\n                  textAlign: \"center\",\n                  margin: \"0 auto\", // This centers the content horizontally\n                }}\n              >\n                {rowData.status}\n              </span>\n            )\n          }\n        />\n        <Column\n          key={\"taskType\"}\n          field={\"taskType\"}\n          header={\"Task Type\"}\n          body={(rowData) =>\n            allowExpansion(rowData) ? (\n              <></>\n            ) : (\n              <select\n                disabled={grp2Items[2].is_write == true ? false : true}\n                onClick={() => {\n                  const selectedSno = rowData.sno;\n                  setSelectedRow(selectedSno);\n                  setSelectedTaskId(rowData.taskId);\n                }}\n                onChange={(e) =>\n                  handleChange(rowData, \"taskType\", e.target.value)\n                }\n              >\n                {taskType.map((item) => (\n                  <option\n                    key={item.value}\n                    value={item.value}\n                    selected={rowData.taskType == item.value}\n                  >\n                    {item.name}\n                  </option>\n                ))}\n              </select>\n            )\n          }\n        />\n      </DataTable>\n    );\n  };\n\n  const allowExpansion = (rowData) => {\n    const currentIndentation = rowData.indentation;\n\n    for (let i = rowData.sno; i < taskList.length; i++) {\n      const nextRow = taskList[i];\n      if (nextRow.indentation > currentIndentation) {\n        return true; // Allow expansion\n      } else if (nextRow.indentation <= currentIndentation) {\n        break;\n      }\n    }\n\n    return false;\n  };\n\n  const lowestIndentation = taskList.reduce((minIndentation, nextRow) => {\n    if (nextRow.indentation !== null) {\n      return Math.min(minIndentation, nextRow.indentation);\n    }\n    // If nextRow.indentation is null, return null instead of comparing\n    return null;\n  }, Infinity); // Start with Infinity to ensure the first value is always smaller\n\n  return (\n    <div className=\"group-content \">\n      <div className=\"pageTitle mb-2\">\n        <div className=\"childOne\">\n          {projName.map((Details) => (\n            <h2>{Details.project_name}</h2>\n          ))}\n        </div>\n        <div className=\"childTwo\">\n          <h2>Task Plan</h2>\n        </div>\n        <div className=\"childThree\"></div>\n      </div>\n      <ScreenBreadcrumbs\n        routes={routes}\n        currentScreenName={currentScreenName}\n      />\n\n      {deletedSuccess ? (\n        <div className=\"statusMsg success\">\n          {\" \"}\n          <BiCheck /> Task Deleted Successfully\n        </div>\n      ) : (\n        \"\"\n      )}\n\n      {deletedFailed ? (\n        <div className=\"statusMsg error\">\n          {\" \"}\n          <AiFillWarning /> Task cannot be deleted as resources are assigned to\n          this task.\n        </div>\n      ) : (\n        \"\"\n      )}\n\n      {taskSaved ? (\n        <div className=\"statusMsg success\">\n          {\" \"}\n          <BiCheck /> Task Saved Successfully\n        </div>\n      ) : (\n        \"\"\n      )}\n      <div className=\"col-md-12 mb-2 grayBg\">\n        <div className=\"row\">\n          <div className=\"col-9 mt-2\">\n            <pre>\n              {grp2Items[2].is_write == true ? (\n                <div>\n                  <img\n                    src=\"ia_support_icons/new_item.png\"\n                    title=\"Add new item\"\n                  />\n                  <span\n                    onClick={addTask}\n                    className=\"newItem\"\n                    style={{ cursor: \"pointer\" }}\n                    title=\"Add new item\"\n                  >\n                    {\" \"}\n                    New item{\" \"}\n                  </span>\n                  <img\n                    src=\"ia_support_icons/insert_new.png\"\n                    title=\"Insert new item before selection\"\n                  />\n                  <span\n                    onClick={selectedRow == \"\" ? \"\" : insertTask}\n                    className=\"Insert New\"\n                    style={{ cursor: \"pointer\" }}\n                    title=\"Insert new item before selection\"\n                  >\n                    {\" \"}\n                    Insert New{\" \"}\n                  </span>\n                  <img src=\"ia_support_icons/unindent_task.png\" />\n                  <span\n                    onClick={() =>\n                      selectedRow === \"\" ? \"\" : decreaseIndentation()\n                    }\n                    className=\"Unindent Task\"\n                    style={{ cursor: \"pointer\" }}\n                    title=\"Decrease seleced item indentation\"\n                  >\n                    {\" \"}\n                    Unindent Task{\" \"}\n                  </span>\n                  <img src=\"ia_support_icons/indent_task.png\" />\n                  <span\n                    onClick={() =>\n                      selectedRow === \"\" ? \"\" : increaseIndentation()\n                    }\n                    className=\"Indent Task\"\n                    style={{ cursor: \"pointer\" }}\n                    title=\"Increase seleced item indentation\"\n                  >\n                    {\" \"}\n                    Indent Task{\" \"}\n                  </span>\n                  <img\n                    src=\"ia_support_icons/delete.png\"\n                    title=\"Delete selected item\"\n                  />\n                  <span\n                    onClick={() =>\n                      selectedRow == \"\" ? \"\" : setDeletePopUp(true)\n                    }\n                    className=\"Delete\"\n                    style={{ cursor: \"pointer\" }}\n                    title=\"Delete selected item\"\n                  >\n                    {\" \"}\n                    Delete{\" \"}\n                  </span>\n                  <img\n                    src=\"ia_support_icons/copy.png\"\n                    title=\"Copy selected item\"\n                  />\n                  <span\n                    onClick={selectedRow == \"\" ? \"\" : copyTask}\n                    className=\"Copy\"\n                    style={{ cursor: \"pointer\" }}\n                    title=\"Copy selected item\"\n                  >\n                    {\" \"}\n                    Copy{\" \"}\n                  </span>\n                  <img\n                    src=\"ia_support_icons/paste.png\"\n                    title=\"Paste after selected item\"\n                  />\n                  <span\n                    onClick={\n                      selectedRow == \"\"\n                        ? \"\"\n                        : toDoPaste == true\n                        ? pasteTask\n                        : \"\"\n                    }\n                    className=\"Paste\"\n                    style={{ cursor: \"pointer\" }}\n                    title=\"Paste after selected item\"\n                  >\n                    {\" \"}\n                    Paste{\" \"}\n                  </span>\n                  <img\n                    src=\"ia_support_icons/move_up.png\"\n                    title=\"Move selected item up\"\n                  />\n                  <span\n                    onClick={selectedRow == \"\" ? \"\" : moveUp}\n                    className=\"Move Up\"\n                    style={{ cursor: \"pointer\" }}\n                    title=\"Move selected item up\"\n                  >\n                    {\" \"}\n                    Move Up{\" \"}\n                  </span>\n                  <img\n                    src=\"ia_support_icons/move_down.png\"\n                    title=\"Move selected item down\"\n                  />\n                  <span\n                    onClick={selectedRow == \"\" ? \"\" : moveDown}\n                    className=\"Move Down\"\n                    style={{ cursor: \"pointer\" }}\n                    title=\"Move selected item down\"\n                  >\n                    {\" \"}\n                    Move Down{\" \"}\n                  </span>\n                </div>\n              ) : (\n                \"\"\n              )}\n            </pre>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"group mb-3 customCard darkHeader\">\n        <div className=\"col-md-12 no-padding\">\n          <div className=\"card p-fluid mb-2 \">\n            <DataTable\n              value={taskList.filter(\n                (rowData) => rowData.indentation === lowestIndentation\n              )}\n              expandedRows={expandedRows}\n              onRowToggle={(e) => setExpandedRows(e.data)}\n              rowExpansionTemplate={rowExpansionTemplate}\n              showGridlines\n              className=\"primeReactDataTable taskPlanTable\"\n            >\n              <Column feild=\"expand\" expander={allowExpansion} />\n              <Column\n                key={\"content\"}\n                field={\"content\"}\n                header={\"Task\"}\n                body={(rowData) => (\n                  <input\n                    className={`lvl-${rowData.indentation}`}\n                    style={{\n                      fontWeight: allowExpansion(rowData) ? \"bolder\" : \"normal\",\n                    }}\n                    disabled={grp2Items[2].is_write == true ? false : true}\n                    type=\"text\"\n                    value={rowData.content}\n                    onChange={(e) => {\n                      handleChange(rowData, \"content\", e.target.value);\n                    }}\n                    onClick={() => {\n                      const selectedSno = rowData.sno;\n                      setSelectedRow(selectedSno);\n                      setSelectedTaskId(rowData.taskId);\n                    }}\n                  />\n                )}\n              />\n              <Column\n                key={\"start\"}\n                field={\"start\"}\n                header={\"Start\"}\n                body={(rowData) => (\n                  <span\n                    onClick={() => {\n                      const selectedSno = rowData.sno;\n                      setSelectedRow(selectedSno);\n                      setSelectedTaskId(rowData.taskId);\n                    }}\n                  >\n                    <DatePicker\n                      portalId=\"root-portal\"\n                      disabled={\n                        (grp2Items[2].is_write == true ? false : true) ||\n                        allowExpansion(rowData)\n                      }\n                      dateFormat=\"dd-MMM-yyyy\"\n                      onKeyDown={(e) => {\n                        e.preventDefault();\n                      }}\n                      filterDate={(date) => {\n                        return date.getDay() !== 0 && date.getDay() !== 6;\n                      }}\n                      selected={moment(rowData.start).toDate()}\n                      showMonthDropdown={true}\n                      showYearDropdown={true}\n                      onClick={() => {\n                        const selectedSno = rowData.sno;\n                        setSelectedRow(selectedSno);\n                        setSelectedTaskId(rowData.taskId);\n                      }}\n                      onChange={(date) => {\n                        const updatedData = [...taskList];\n                        const value = numberOfDays(\n                          date,\n                          new Date(rowData.finish)\n                        );\n                        updatedData[rowData.sno - 1] = {\n                          ...rowData,\n                          duration: value,\n                          start: moment(date).format(\"YYYY-MM-DD\"),\n                        };\n                        setTaskList(updatedData);\n                      }}\n                    />\n                  </span>\n                )}\n              />\n              <Column\n                key={\"finish\"}\n                field={\"finish\"}\n                header={\"Finish\"}\n                body={(rowData) => (\n                  <span\n                    onClick={() => {\n                      const selectedSno = rowData.sno;\n                      setSelectedRow(selectedSno);\n                      setSelectedTaskId(rowData.taskId);\n                    }}\n                  >\n                    <DatePicker\n                      portalId=\"root-portal\"\n                      disabled={\n                        (grp2Items[2].is_write == true ? false : true) ||\n                        allowExpansion(rowData)\n                      }\n                      dateFormat=\"dd-MMM-yyyy\"\n                      onKeyDown={(e) => {\n                        e.preventDefault();\n                      }}\n                      selected={moment(rowData.finish).toDate()}\n                      showMonthDropdown={true}\n                      showYearDropdown={true}\n                      filterDate={(date) => {\n                        return date.getDay() !== 0 && date.getDay() !== 6;\n                      }}\n                      onClick={() => {\n                        const selectedSno = rowData.sno;\n                        setSelectedRow(selectedSno);\n                        setSelectedTaskId(rowData.taskId);\n                      }}\n                      onChange={(date) => {\n                        const updatedData = [...taskList];\n                        const value = numberOfDays(\n                          new Date(rowData.start),\n                          date\n                        );\n                        updatedData[rowData.sno - 1] = {\n                          ...rowData,\n                          duration: value,\n                          finish: moment(date).format(\"YYYY-MM-DD\"),\n                        };\n                        setTaskList(updatedData);\n                      }}\n                    />\n                  </span>\n                )}\n              />\n              <Column\n                key={\"duration\"}\n                field={\"duration\"}\n                header={\"Duration(d)\"}\n                body={(rowData) => (\n                  <input\n                    style={{\n                      fontWeight: allowExpansion(rowData) ? \"bolder\" : \"normal\",\n                    }}\n                    disabled={\n                      (grp2Items[2].is_write == true ? false : true) ||\n                      allowExpansion(rowData)\n                    }\n                    type=\"text\"\n                    value={parseInt(rowData.duration)}\n                    onClick={() => {\n                      const selectedSno = rowData.sno;\n                      setSelectedRow(selectedSno);\n                      setSelectedTaskId(rowData.taskId);\n                    }}\n                    onChange={(e) => {\n                      handleChange(rowData, \"duration\", e.target.value);\n                    }}\n                    onBlur={(e) => {\n                      const formatDate = (date) => {\n                        const year = date.getFullYear();\n                        const month = String(date.getMonth() + 1).padStart(\n                          2,\n                          \"0\"\n                        );\n                        const day = String(date.getDate()).padStart(2, \"0\");\n                        return `${year}-${month}-${day}`;\n                      };\n                      const finishDate = formatDate(\n                        addBusinessDays(rowData.start, e.target.value - 1)\n                      );\n\n                      handleChange(rowData, \"finish\", finishDate);\n                    }}\n                  ></input>\n                )}\n              />\n              <Column\n                key={\"roleName\"}\n                field={\"roleName\"}\n                header={\"Role\"}\n                body={(rowData) =>\n                  allowExpansion(rowData) ? (\n                    <></>\n                  ) : (\n                    <select\n                      disabled={grp2Items[2].is_write == true ? false : true}\n                      onClick={() => {\n                        const selectedSno = rowData.sno;\n                        setSelectedRow(selectedSno);\n                        setSelectedTaskId(rowData.taskId);\n                      }}\n                      onChange={(e) => {\n                        const selectedRoleName =\n                          e.target.options[e.target.selectedIndex].getAttribute(\n                            \"selectedRoleName\"\n                          );\n                        handleChange(\n                          rowData,\n                          \"roleId\",\n                          e.target.value,\n                          (rowData.roleName = selectedRoleName)\n                        );\n                      }}\n                    >\n                      <option value={null}>&lt;&lt;All&gt;&gt;</option>\n                      {roleType.map((item) => (\n                        <option\n                          key={item.id}\n                          value={item.id}\n                          selected={rowData.roleId == item.id}\n                          selectedRoleName={item.name}\n                        >\n                          {item.name}\n                        </option>\n                      ))}\n                    </select>\n                  )\n                }\n              />\n              <Column\n                key={\"estimatedHrs\"}\n                field={\"estimatedHrs\"}\n                header={\"Estimated Hrs\"}\n                body={(rowData) =>\n                  allowExpansion(rowData) ? (\n                    <></>\n                  ) : (\n                    <input\n                      disabled={grp2Items[2].is_write == true ? false : true}\n                      type=\"text\"\n                      value={rowData.estimatedHrs}\n                      onClick={() => {\n                        const selectedSno = rowData.sno;\n                        setSelectedRow(selectedSno);\n                        setSelectedTaskId(rowData.taskId);\n                      }}\n                      onChange={(e) =>\n                        handleChange(rowData, \"estimatedHrs\", e.target.value)\n                      }\n                      style={{ textAlign: \"right\" }}\n                    ></input>\n                  )\n                }\n              />\n              <Column\n                key={\"assignmentsContent\"}\n                field={\"assignmentsContent\"}\n                header={\"Assignments\"}\n                body={(rowData) => (\n                  <input\n                    type=\"text\"\n                    value={rowData.assignmentsContent}\n                    style={{ textDecoration: \"underline\" }}\n                    onClick={() => {\n                      const selectedSno = rowData.sno;\n                      const checkFinishDate = rowData.finish;\n                      const currentDate = moment(new Date()).format(\n                        \"YYYY-MM-DD\"\n                      );\n                      setResourcePopUp(\n                        checkFinishDate > currentDate ? true : false\n                      );\n                      if (currentDate > checkFinishDate) {\n                        setResourcePopUp(false);\n                        alert(\n                          \"Change the task end date for resource allocations\"\n                        );\n                      }\n                      if (rowData.estimatedHrs == 0) {\n                        setResourcePopUp(false);\n                        alert(\"Please enter Estimated Hrs\");\n                      } else if (rowData.assignmentsContent == \"\") {\n                        setResourcePopUp(false);\n                        alert(\"Please save Task\");\n                      }\n                      setSelectedRow(selectedSno);\n                      setSelectedTaskId(rowData.taskId);\n                    }}\n                    onChange={(e) =>\n                      handleChange(\n                        rowData,\n                        \"assignmentsContent\",\n                        e.target.value\n                      )\n                    }\n                  ></input>\n                )}\n              />\n              <Column\n                key={\"actualHrs\"}\n                field={\"actualHrs\"}\n                header={\"Actual Hrs\"}\n                body={(rowData, column) => {\n                  const value = rowData[column.field];\n                  const formattedValue =\n                    value == null ? \"0.0\" : value.toFixed(1);\n                  return allowExpansion(rowData) ? (\n                    <></>\n                  ) : (\n                    <span\n                      onClick={() => {\n                        const selectedSno = rowData.sno;\n                        setSelectedRow(selectedSno);\n                        setSelectedTaskId(rowData.taskId);\n                      }}\n                    >\n                      {formattedValue}\n                    </span>\n                  );\n                }}\n              />\n              <Column\n                key={\"approvedHrs\"}\n                field={\"approvedHrs\"}\n                header={\"Approved Hrs\"}\n                body={(rowData, column) => {\n                  const value = rowData[column.field];\n                  const formattedValue =\n                    value == null ? \"0.0\" : value.toFixed(1);\n                  return allowExpansion(rowData) ? (\n                    <></>\n                  ) : (\n                    <span\n                      onClick={() => {\n                        const selectedSno = rowData.sno;\n                        setSelectedRow(selectedSno);\n                        setSelectedTaskId(rowData.taskId);\n                      }}\n                    >\n                      {formattedValue}\n                    </span>\n                  );\n                }}\n              />\n              <Column\n                key={\"status\"}\n                field={\"status\"}\n                header={\"Status\"}\n                body={(rowData) =>\n                  allowExpansion(rowData) ? (\n                    <></>\n                  ) : (\n                    <span\n                      onClick={(e) => {\n                        const selectedSno = rowData.sno;\n                        setSelectedRow(selectedSno);\n                        setSelectedTaskId(rowData.taskId);\n                      }}\n                      style={{\n                        display: \"block\", // This ensures the span takes up full width\n                        textAlign: \"center\",\n                        margin: \"0 auto\", // This centers the content horizontally\n                      }}\n                    >\n                      {rowData.status}\n                    </span>\n                  )\n                }\n              />\n              <Column\n                key={\"taskType\"}\n                field={\"taskType\"}\n                header={\"Task Type\"}\n                body={(rowData) =>\n                  allowExpansion(rowData) ? (\n                    <></>\n                  ) : (\n                    <select\n                      disabled={grp2Items[2].is_write == true ? false : true}\n                      onClick={() => {\n                        const selectedSno = rowData.sno;\n                        setSelectedRow(selectedSno);\n                        setSelectedTaskId(rowData.taskId);\n                      }}\n                      onChange={(e) =>\n                        handleChange(rowData, \"taskType\", e.target.value)\n                      }\n                    >\n                      {taskType.map((item) => (\n                        <option\n                          key={item.value}\n                          value={item.value}\n                          selected={rowData.taskType == item.value}\n                        >\n                          {item.name}\n                        </option>\n                      ))}\n                    </select>\n                  )\n                }\n              />\n            </DataTable>\n          </div>\n\n          {dataObject?.is_write == true ? (\n            <div className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12 btn-container center\">\n              <button\n                className=\"btn btn-primary\"\n                name=\"save\"\n                id=\"save\"\n                type=\"save\"\n                onClick={() => {\n                  saveTaskList(taskList);\n                  setTaskSaved(true);\n                }}\n              >\n                <VscSave />\n                Save\n              </button>\n              <button\n                className=\"btn btn-secondary\"\n                id=\"cancel\"\n                type=\"reset\"\n                onClick={resetTaskList}\n              >\n                <VscChromeClose />\n                Cancel\n              </button>\n            </div>\n          ) : (\n            \"\"\n          )}\n        </div>\n      </div>\n      {deletePopUp ? (\n        <TaskPlanDeletePopUp\n          setDeletedSuccess={setDeletedSuccess}\n          setDeletedFailed={setDeletedFailed}\n          deletePopUp={deletePopUp}\n          setDeletePopUp={setDeletePopUp}\n          selectedTaskId={selectedTaskId}\n        />\n      ) : (\n        \"\"\n      )}\n\n      {resourcePopUp ? (\n        <TaskPlanResourcePopUp\n          resourcePopUp={resourcePopUp}\n          setResourcePopUp={setResourcePopUp}\n          taskList={taskList}\n          selectedRow={selectedRow}\n          grp2Items={grp2Items}\n        />\n      ) : (\n        \"\"\n      )}\n    </div>\n  );\n}\nexport default TaskPlan;\n","import React from \"react\";\nimport { CModal } from '@coreui/react'\nimport { CModalBody } from '@coreui/react'\nimport { CModalHeader } from '@coreui/react'\nimport { CModalTitle } from '@coreui/react'\nimport { AiFillDelete, AiFillWarning } from \"react-icons/ai\";\nimport { ImCross } from \"react-icons/im\";\nimport { TiTickOutline } from \"react-icons/ti\";\n\nfunction CapacityPlanOverAllocationpopup(props) {\n    const { data, sendSelectedRowsData, overAllocation, setOverAllocation, setSaveOverAlloc, setConfirmSave } = props\n\n\n    const handleOverallocationConfirmation = () => {\n        setConfirmSave(true); // Set confirmSave state to true\n        setOverAllocation(false); // Hide the overallocation popup\n        sendSelectedRowsData(null, null, true, true); // Call sendSelectedRowsData with shouldSendRequest = true\n    };\n\n    return (\n        <div>\n\n            {console.log(data, \"--resource_id\")}\n            <CModal visible={overAllocation} size=\"sm\" className=\"ui-dialog\" onClose={() => setOverAllocation(false)} backdrop={'static'}>\n                <CModalHeader className=''>\n                    <CModalTitle>\n                        Resource Allocation\n                    </CModalTitle>\n                </CModalHeader>\n                <CModalBody>\n                    Below Resource(s) will be overallocated: {data.resourceData[0].resource}\n\n                    <br /><br />\n                    Do you still want to continue?\n\n                    <div className='btn-container center my-2'>\n                        <button type=\"delete\" className=\"btn btn-primary\" onClick={() => { console.log(\"yes clicked\"); handleOverallocationConfirmation() }}><TiTickOutline size={\"1.5em\"} />Yes </button>\n                        <button type=\"button\" className=\"btn btn-secondary\" onClick={() => { setOverAllocation(false) }}> <ImCross /> No </button>\n                    </div>\n                </CModalBody>\n\n            </CModal>\n\n        </div>\n    )\n\n}\n\nexport default CapacityPlanOverAllocationpopup","import React, { useEffect, useRef, useState } from \"react\";\nimport { DataTable } from \"primereact/datatable\";\nimport { Column } from \"primereact/column\";\nimport { InputText } from \"primereact/inputtext\";\nimport { TfiSave } from \"react-icons/tfi\";\nimport { ImCross } from \"react-icons/im\";\nimport { AiFillWarning } from \"react-icons/ai\";\nimport moment from \"moment\";\nimport { environment } from \"../../environments/environment\";\nimport \"./CapacityPlan.scss\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport axios from \"axios\";\nimport CapacityPlanOverAllocationpopup from \"./CapacityPlanOverAllocationpopup\";\n\nfunction CapacityPlanResourceList(props) {\n  const {\n    tableData,\n    Data,\n    setAddErrMsg,\n    setErrData,\n    addErrMsg,\n    projectId,\n    setSearchResource,\n    loggedUserId,\n    getTableData,\n    setEditMessage,\n    setAddMessage,\n    setAddResMessage,\n    setDailyhrsRange,\n    setEditResMessage,\n    validateproject,\n    setValidateproject,\n    dailyhrsRange,\n    grp2Items,\n  } = props;\n  console.log(grp2Items);\n  const baseUrl = environment.baseUrl;\n\n  const [selectedRows, setSelectedRows] = useState([]);\n  const [tableDisable, setTableDisable] = useState(false);\n  const [disable, setDisable] = useState(true);\n  const [selectedRowsData, setSelectedRowsData] = useState([]);\n  const [isModified, setIsModified] = useState(false);\n  const [startDate, setStartDate] = useState(Data.plannedStartDt);\n  const [endDate, setEndDate] = useState(Data.plannedEndDt);\n  const [saveOverAlloc, setSaveOverAlloc] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [holiday, setholiday] = useState({});\n  const [confirmSave, setConfirmSave] = useState(false);\n  const [overAllocation, setOverAllocation] = useState(false);\n  const initialValue = {\n    id: \"\",\n    projectRoleId: Data.id,\n    resourceId: tableData.resourceData[0]?.resourceId,\n    allocationTypeId: \"187\",\n    effortHours: \"0\",\n    dailyHours: \"0\",\n    hourlyRate: \"0\",\n    hourlyCost: tableData.resHourlyCost[0]?.cost,\n    countryId: \"3\",\n    baselineVersionId: null,\n    statusId: \"474\",\n    comments: \"\",\n    ss: \"\",\n    isprojectTask: null,\n    fromDate: Data.plannedStartDt,\n    toDate: Data.plannedEndDt,\n    isDelete: \"\",\n    createdById: loggedUserId,\n    lastUpdatedById: loggedUserId,\n    ProjectId: projectId,\n    baseUrl: baseUrl,\n  };\n  const [formData, setFormData] = useState(initialValue);\n  const [allocation, setAllocation] = useState([]);\n  console.log(Data, \"data in res\");\n  const scrollToRef = useRef(null);\n  const [validation, setValidation] = useState(false);\n\n  const combined_data = [\n    { ...tableData.resourceData[0], ...tableData.resHourlyCost[0], ...Data },\n  ];\n  console.log(combined_data, \"----tabledata\");\n\n  useEffect(() => {\n    setSelectedRowsData((prev) => selectedRows);\n  }, [selectedRows]);\n\n  useEffect(() => {\n    getAllocationDropdown();\n  }, []);\n\n  useEffect(() => {\n    if (dailyhrsRange || addErrMsg) {\n      window.scrollTo({\n        top: scrollToRef.current.offsetTop,\n        behavior: \"smooth\",\n      });\n    }\n  }, [dailyhrsRange, addErrMsg]);\n  const getAllocationDropdown = () => {\n    axios({\n      method: \"get\",\n      url: baseUrl + `/ProjectMS/CapacityPlan/getAllocationDropdown`,\n    }).then(function (response) {\n      var res = response.data;\n      setAllocation(res);\n    });\n  };\n\n  const getHolidays = () => {\n    console.log(tableData);\n    axios({\n      method: \"get\",\n      url:\n        baseUrl +\n        `/ProjectMS/CapacityPlan/getHolidays?resId=${tableData.resourceData[0]?.resourceId}&frmDt=${combined_data[0]?.plannedStartDt}&toDt=${combined_data[0]?.plannedEndDt}`,\n    }).then(function (response) {\n      var res = response.data;\n      setholiday(res);\n    });\n  };\n\n  const handleSelection = (e) => {\n    setSelectedRows(e.value);\n    getHolidays();\n    console.log(\"table selected\");\n    console.log(e.value, \"e.value\");\n    if (e.value) {\n      setDisable(false);\n    }\n  };\n\n  const handleResource = (rowData) => {\n    return (\n      <div className=\"ellipsis\" data-toggle=\"tooltip\" title={rowData.resource}>\n        {rowData.resource}\n      </div>\n    );\n  };\n  const handleDesignation = (rowData) => {\n    return (\n      <div\n        className=\"ellipsis\"\n        data-toggle=\"tooltip\"\n        title={rowData.designation}\n      >\n        {rowData.designation}\n      </div>\n    );\n  };\n  const handleBunit = (rowData) => {\n    return (\n      <div\n        className=\"ellipsis\"\n        data-toggle=\"tooltip\"\n        title={rowData.businessUnit}\n      >\n        {rowData.businessUnit}\n      </div>\n    );\n  };\n  const handleLocation = (rowData) => {\n    return (\n      <div className=\"ellipsis\" data-toggle=\"tooltip\" title={rowData.location}>\n        {rowData.location}\n      </div>\n    );\n  };\n\n  const fromDate = (rowData) => {\n    return selectedRows\n      .map((d) => d.resourceId)\n      .includes(rowData.resourceId) ? (\n      <div className=\"datepicker\">\n        <DatePicker\n          name=\"fromDt\"\n          id=\"fromDt\"\n          selected={moment(startDate)._d}\n          // value={moment(rowData.plannedStartDt)._d}\n\n          dateFormat=\"dd-MMM-yyyy\"\n          onChange={(e) => {\n            setFormData((prev) => ({\n              ...prev,\n              [\"fromDate\"]: moment(e).format(\"yyyy-MM-DD\"),\n            }));\n            console.log(e);\n            setStartDate(moment(e).format(\"yyyy-MM-DD\"));\n            setDisable(false);\n            // setIsModified(true);\n          }}\n          // showMonthDropdown\n          // showYearDropdown\n          // dropdownMode=\"select\"\n          minDate={moment(rowData.plannedStartDt)._d}\n          maxDate={moment(formData.toDate)._d}\n          onKeyDown={(e) => {\n            e.preventDefault();\n            // if (e.keyCode != 8) {\n            //     e.preventDefault();\n            // }\n          }}\n        />\n      </div>\n    ) : (\n      <div\n        data-toggle=\"tooltip\"\n        title={moment(rowData.plannedStartDt).format(\"DD-MMM-YYYY\")}\n      >\n        {moment(rowData.plannedStartDt).format(\"DD-MMM-yyyy\")}\n      </div>\n    );\n  };\n\n  const toDate = (rowData) => {\n    return selectedRows\n      .map((d) => d.resourceId)\n      .includes(rowData.resourceId) ? (\n      <div className=\"datepicker\">\n        <DatePicker\n          name=\"toDate\"\n          id=\"toDate\"\n          selected={moment(endDate)._d}\n          dateFormat=\"dd-MMM-yyyy\"\n          // showMonthDropdown\n          // showYearDropdown\n          // dropdownMode=\"select\"\n          minDate={moment(formData.fromDate)._d}\n          maxDate={moment(rowData.plannedEndDt)._d}\n          onKeyDown={(e) => {\n            e.preventDefault();\n            if (e.keyCode != 8) {\n              e.preventDefault();\n            }\n          }}\n          onChange={(e) => {\n            setFormData((prev) => ({\n              ...prev,\n              [\"toDate\"]: moment(e).format(\"yyyy-MM-DD\"),\n            }));\n            console.log(e);\n            setEndDate(moment(e).format(\"yyyy-MM-DD\"));\n            setDisable(false);\n            // setIsModified(true);\n          }}\n        />\n      </div>\n    ) : (\n      <div\n        data-toggle=\"tooltip\"\n        title={moment(rowData.plannedEndDt).format(\"DD-MMM-YYYY\")}\n      >\n        {moment(rowData.plannedEndDt).format(\"DD-MMM-yyyy\")}\n      </div>\n    );\n  };\n  const availPercentage = (rowData) => {\n    return (\n      <div\n        style={{\n          color: rowData.availPercentage < 0 && \"red\",\n          textAlign: \"right\",\n        }}\n        data-toggle=\"tooltip\"\n        title={rowData.availPercentage}\n      >\n        {rowData.availPercentage}\n      </div>\n    );\n  };\n  const freeHours = (rowData) => {\n    return (\n      <div\n        style={{ color: rowData.freeHours < 0 && \"red\", textAlign: \"right\" }}\n        data-toggle=\"tooltip\"\n        title={rowData.freeHours}\n      >\n        {rowData.freeHours}\n      </div>\n    );\n  };\n\n  const handleCost = (rowData) => {\n    return (\n      <div\n        style={{ textAlign: \"right\" }}\n        data-toggle=\"tooltip\"\n        title={rowData.cost}\n      >\n        {rowData.cost}\n      </div>\n    );\n  };\n  const hourRate = (rowData) => {\n    return selectedRows\n      .map((d) => d.resourceId)\n      .includes(rowData.resourceId) ? (\n      <div>\n        <input\n          type=\"text\"\n          id=\"hourRate\"\n          defaultValue=\"0\"\n          onChange={(e) => {\n            setFormData((prev) => ({\n              ...prev,\n              [\"hourlyRate\"]: e.target.value,\n            }));\n            console.log(e.target.value);\n            // onchange(e, rowData)\n          }}\n        />\n      </div>\n    ) : (\n      <div\n        style={{ textAlign: \"right\" }}\n        data-toggle=\"tooltip\"\n        title={rowData.hourRate}\n      >\n        {rowData.hourRate}\n      </div>\n    );\n  };\n\n  const dailyAllocationHrs = (rowData) => {\n    console.log(isModified, \"isModified\");\n    return selectedRows\n      .map((d) => d.resourceId)\n      .includes(rowData.resourceId) ? (\n      <div ref={scrollToRef}>\n        <input\n          className={`error${\n            validation && (rowData.revenue == null || rowData.revenue == \"\")\n              ? \" error-block\"\n              : \"\"\n          }`}\n          type=\"text\"\n          id=\"revenue\"\n          defaultValue={\n            rowData.revenue == null || rowData.revenue == \"\"\n              ? 0\n              : rowData.revenue\n          }\n          onChange={(e) => {\n            const inputValue = e.target.value;\n            const isValueValid = inputValue <= 24;\n\n            setFormData((prev) => ({\n              ...prev,\n              [\"dailyHours\"]: e.target.value,\n            }));\n            console.log(e.target.value);\n            setIsModified(true);\n            // onchange(e, rowData)\n            if (isValueValid) {\n              const d0 = getJSDateObj(formData.fromDate);\n              const d1 = getJSDateObj(formData.toDate);\n              const workDays = getWorkingDays(d0, d1);\n              var days = workDays - holiday.holidays;\n              setFormData((prev) => ({\n                ...prev,\n                [\"effortHours\"]: e.target.value * days,\n              }));\n            } else {\n              setDailyhrsRange(true);\n              setTimeout(() => {\n                setDailyhrsRange(false);\n              }, 3000);\n              e.target.value = \"\";\n            }\n          }}\n        />\n      </div>\n    ) : (\n      <div style={{ textAlign: \"right\" }} data-toggle=\"tooltip\" title=\"0\">\n        {rowData.revenue == null || rowData.revenue == \"\" ? 0 : rowData.revenue}\n      </div>\n    );\n  };\n  const allocationHrs = (rowData) => {\n    return (\n      <div style={{ textAlign: \"right\" }} data-toggle=\"tooltip\" title=\"0\">\n        0\n      </div>\n    );\n  };\n  const allocationType = (rowData) => {\n    return selectedRows\n      .map((d) => d.resourceId)\n      .includes(rowData.resourceId) ? (\n      <div>\n        <select\n          className=\"col-md-12 p0\"\n          name=\"allocation\"\n          id=\"allocation\"\n          defaultValue=\"187\"\n          onChange={(e) => {\n            setFormData((prev) => ({\n              ...prev,\n              [\"allocationTypeId\"]: e.target.value,\n            }));\n            console.log(e.target.value);\n\n            // handleChange(e.target?.id);\n          }}\n          onClick={(e) => {\n            e.stopPropagation();\n          }}\n        >\n          {/* <option value=\"0\" > &lt;&lt;Please Select&gt;&gt;</option> */}\n          {allocation.map((Item) => (\n            <option\n              value={Item.id}\n              selected={\n                Item.id == rowData.subrows[0]?.allocation_type_id ? true : false\n              }\n            >\n              {\" \"}\n              {Item.lkup_name}\n            </option>\n          ))}\n        </select>\n      </div>\n    ) : (\n      // rowData.subrows[0]?.allocationType\n      \"\"\n    );\n  };\n  console.log(holiday, \"-- holiday\");\n\n  const onchange = (e, rowData) => {\n    const index = selectedRowsData.findIndex(\n      (selectedRowData) => selectedRowData.id === rowData.id\n    );\n    const updatedSelectedRowsData = [...selectedRowsData];\n    updatedSelectedRowsData[index] = {\n      ...updatedSelectedRowsData[index],\n      cslId: e.id,\n    };\n    setSelectedRowsData(updatedSelectedRowsData);\n  };\n\n  const handleCalculate = () => {\n    const d0 = getJSDateObj(formData.fromDate);\n    const d1 = getJSDateObj(formData.toDate);\n    const sDate = `${d0.getFullYear()}-${d0.getMonth() + 1}-${d0.getDate()}`;\n    const eDate = `${d1.getFullYear()}-${d1.getMonth() + 1}-${d1.getDate()}`;\n\n    const workDays = getWorkingDays(d0, d1);\n    console.log(\n      holiday.holidays,\n      formData.dailyHours,\n      combined_data[0].freeHours,\n      \"workDays\"\n    );\n    var days = workDays - holiday.holidays;\n    let setEffhrs = days * formData.dailyHours;\n    // setFormData(prev => ({ ...prev, [\"effortHours\"]: formData.dailyHours * days }))\n\n    console.log(days, \"days\");\n    let isOverallocated = setEffhrs > combined_data[0].freeHours ? 1 : 0;\n    console.log(isOverallocated);\n    return isOverallocated;\n    // == 1 ? setOverAllocation(true) : setOverAllocation(false)\n  };\n\n  function getWorkingDays(startDate, endDate) {\n    const start = new Date(startDate);\n    const end = new Date(endDate);\n\n    let workingDays = 0;\n\n    while (start <= end) {\n      // Check if the current day is a weekend (Saturday or Sunday)\n      if (start.getDay() !== 0 && start.getDay() !== 6) {\n        // Increment the working days counter\n        workingDays++;\n      }\n\n      // Move to the next day\n      start.setDate(start.getDate() + 1);\n    }\n\n    return workingDays;\n  }\n\n  function getJSDateObj(dateStr) {\n    // Split the date string into year, month, and day\n    const [year, month, day] = dateStr.split(\"-\").map(Number);\n\n    // Create a new Date object with the provided year, month (zero-based), and day\n    const dateObj = new Date(year, month - 1, day);\n\n    return dateObj;\n  }\n\n  function FormDataCheck(Data, formData) {\n    console.log(Data, formData);\n\n    // Find subrows with the same resourceId as formData\n    const matchingSubrows = Data.subrows.filter((subrow) => {\n      return subrow.resource_id == formData.resourceId;\n    });\n\n    if (matchingSubrows.length > 0) {\n      const formDataFromDate = new Date(formData.fromDate);\n      const formDataToDate = new Date(formData.toDate);\n\n      // Check for date range overlap with matching subrows\n      const isDateOverlap = matchingSubrows.some((subrow) => {\n        const subrowFromDt = new Date(subrow.from_dt);\n        const subrowToDt = new Date(subrow.to_dt);\n        console.log(subrowFromDt, subrowToDt);\n        return formDataFromDate <= subrowToDt && formDataToDate >= subrowFromDt;\n      });\n\n      if (isDateOverlap) {\n        // Show an error message or take appropriate action\n        console.log(\n          formDataFromDate,\n          formDataToDate,\n          \"Date range overlaps with existing data. Show error message.\"\n        );\n        return true;\n      } else {\n        // Perform the save action\n        console.log(\"Date range does not overlap. Proceed with save.\");\n        return false;\n      }\n    } else {\n      // Perform the save action\n      console.log(\"Resource not present. Proceed with save.\");\n      return false;\n    }\n  }\n\n  const handleSaveButtonClick = () => {\n    sendSelectedRowsData(null, null, true, false);\n  };\n\n  const sendSelectedRowsData = (e, rowData, shouldSendRequest, confirmSave) => {\n    console.log(isModified);\n    // console.log(cslId);\n    console.log(formData, \"post data\");\n    let isFormDataPresent = FormDataCheck(Data, formData);\n\n    const isOverallocated = handleCalculate(); // Check overallocation\n\n    if (isOverallocated && !confirmSave) {\n      setOverAllocation(true);\n      // Set overAllocation state to show the popup\n      return; // Exit the function without saving\n    }\n    if (\n      formData.dailyHours == 0 ||\n      formData.dailyHours == null ||\n      formData.dailyHours == \"\"\n    )\n      setValidation(true);\n\n    if (isModified == false) {\n      setErrorMessage(\n        <div>\n          <AiFillWarning style={{ marginTop: \"-3px\" }} />\n          &nbsp;Please provide highlighted values\n        </div>\n      );\n\n      setTimeout(() => {\n        setErrorMessage(null);\n      }, 3000);\n\n      return;\n    }\n\n    if (isFormDataPresent) {\n      setErrData((prevState) => {\n        return {\n          ...prevState,\n          [\"resName\"]: tableData.resourceData[0]?.resource,\n          [\"roleType\"]: combined_data[0]?.roleType,\n          [\"fromDate\"]: formData.fromDate,\n          [\"toDate\"]: formData.toDate,\n        };\n      });\n      setAddErrMsg(true);\n      setTimeout(() => {\n        setAddErrMsg(false);\n      }, 5000);\n      return;\n    }\n    if (shouldSendRequest || confirmSave) {\n      axios({\n        method: \"post\",\n        url: baseUrl + `/ProjectMS/CapacityPlan/saveInnerTabResource`,\n\n        data: formData,\n      }).then((response) => {\n        console.log(response);\n        response.data.status == \"Saved Successfully\"\n          ? setAddResMessage(true)\n          : setEditResMessage(true);\n        getTableData();\n        // setValidateproject(false);\n        setTimeout(() => {\n          setAddResMessage(false);\n          setEditResMessage(false);\n        }, 2000);\n      });\n    }\n  };\n\n  return (\n    <>\n      {errorMessage && <div className=\"statusMsg error\">{errorMessage}</div>}\n\n      <div className=\"tableHeader\">\n        <div className=\"leftSection\">\n          <h2>Resource List</h2>\n        </div>\n      </div>\n      <div\n        className=\"p-fluid capacityPlanResTable darkHeader\"\n        style={{ marginTop: \"-2px\" }}\n      >\n        <DataTable\n          value={combined_data}\n          className=\"primeReactDataTable\"\n          selectionMode=\"checkbox\"\n          selection={selectedRows}\n          editMode=\"row\"\n          rows={10}\n          showGridlines\n          dataKey=\"id\"\n          disabled={tableDisable}\n          onSelectionChange={(e) => handleSelection(e)}\n          emptyMessage=\"No Data Found\"\n        >\n          {grp2Items[1].is_write == true && (\n            <Column\n              selectionMode=\"multiple\"\n              headerStyle={{ width: \"3rem\", padding: \"0px 22px\" }}\n            ></Column>\n          )}\n\n          <Column\n            sortable\n            field=\"resource\"\n            header=\"Resource\"\n            body={handleResource}\n          ></Column>\n          <Column\n            sortable\n            field=\"designation\"\n            header=\"Designation\"\n            body={handleDesignation}\n          ></Column>\n          <Column\n            sortable\n            field=\"businessUnit\"\n            header=\"Business Unit\"\n            body={handleBunit}\n          ></Column>\n          <Column\n            sortable\n            field=\"location\"\n            header=\"Location\"\n            body={handleLocation}\n          ></Column>\n          <Column\n            sortable\n            field=\"plannedStartDt\"\n            header=\"From Date\"\n            body={fromDate}\n            onChange={(e) => onchange(e, rowData)}\n          ></Column>\n          <Column\n            sortable\n            field=\"plannedEndDt\"\n            header=\"To Date\"\n            body={toDate}\n            // onChange={(e) => onchange(e, rowData)}\n          ></Column>\n          <Column\n            sortable\n            field=\"availPercentage\"\n            header=\"Available %\"\n            body={availPercentage}\n          ></Column>\n          <Column\n            sortable\n            field=\"freeHours\"\n            header=\"Available Hrs\"\n            body={freeHours}\n          ></Column>\n          <Column\n            sortable\n            field=\"hourRate\"\n            header=\"Hourly Rate\"\n            body={hourRate}\n            // onChange={(e) => onchange(e, rowData)}\n          ></Column>\n          <Column\n            sortable\n            field=\"cost\"\n            header=\"Hourly Cost\"\n            body={handleCost}\n          ></Column>\n          <Column\n            sortable\n            field=\"revenue\"\n            header=\"Daily Allocation Hrs\"\n            body={dailyAllocationHrs}\n            // onChange={(e) => onchange(e, rowData)}\n          ></Column>\n          <Column\n            sortable\n            field=\"revenue\"\n            header=\"Allocation Hrs\"\n            body={allocationHrs}\n          ></Column>\n          <Column\n            sortable\n            field=\"\"\n            header=\"Allocation Type\"\n            body={allocationType}\n          ></Column>\n        </DataTable>\n        {grp2Items[1].is_write == true ? (\n          <div className=\"col-12 my-3 align center\">\n            <button\n              className=\"btn btn-primary mr-2\"\n              onClick={handleSaveButtonClick}\n              data-toggle=\"tooltip\"\n              title=\"Save\"\n            >\n              <TfiSave /> Save\n            </button>\n            <button\n              className=\"btn btn-secondary\"\n              onClick={() => {\n                setSearchResource(false);\n              }}\n              data-toggle=\"tooltip\"\n              title=\"Cancel \"\n            >\n              <ImCross />\n              Cancel\n            </button>\n          </div>\n        ) : (\n          \"\"\n        )}\n      </div>\n      {overAllocation && (\n        <CapacityPlanOverAllocationpopup\n          data={tableData}\n          sendSelectedRowsData={sendSelectedRowsData}\n          overAllocation={overAllocation}\n          setConfirmSave={setConfirmSave}\n          setOverAllocation={setOverAllocation}\n          setSaveOverAlloc={setSaveOverAlloc}\n        />\n      )}\n    </>\n  );\n}\nexport default CapacityPlanResourceList;\n","import React, { useEffect, useState } from \"react\";\nimport {\n  FaChevronCircleDown,\n  FaChevronCircleUp,\n  FaSearch,\n} from \"react-icons/fa\";\nimport { CCollapse } from \"@coreui/react\";\nimport { ReactSearchAutocomplete } from \"react-search-autocomplete\";\nimport axios from \"axios\";\nimport { environment } from \"../../environments/environment\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport moment from \"moment\";\nimport CapacityPlanResourceList from \"./CapacityPlanResourceList\";\nimport { useRef } from \"react\";\nimport GlobalValidation from \"../ValidationComponent/GlobalValidation\";\n\nfunction CapacityPlanResource(props) {\n  const {\n    data,\n    setSearchResource, setAddErrMsg, setErrData, addErrMsg,\n    loggedUserId, projectId,\n    getTableData,\n    setEditMessage,\n    setErrorMsg,\n    dailyhrsRange,\n    setDailyhrsRange,\n    setAddMessage,\n    setAddResMessage,\n    validateproject,\n    setValidateproject,\n    errorMsg,\n    setEditResMessage,\n    grp2Items,\n  } = props;\n  const [visible, setVisible] = useState(false);\n  const [cheveronIcon, setCheveronIcon] = useState(FaChevronCircleUp);\n  const [dateFlag, setdateFlag] = useState(\"0\");\n  const [item, setItem] = useState([]);\n  const [resid, setResid] = useState(\"null\");\n  const baseUrl = environment.baseUrl;\n  const [autocompleteData, setAutocompleteData] = useState([]);\n  const [resTableData, setResTableData] = useState([]);\n  const [displayTable, setDisplayTable] = useState(false);\n  const [busUnit, setBusUnit] = useState([]);\n  const ref = useRef([]);\n\n  const getData = () => {\n    axios({\n      method: \"get\",\n      url: baseUrl + `/ProjectMS/CapacityPlan/getAssignedDataIsActive`,\n    }).then(function (response) {\n      var res = response.data;\n      setAutocompleteData(res);\n    });\n  };\n  useEffect(() => { }, [autocompleteData, item]);\n  useEffect(() => {\n    getBusinessUnit();\n    getData();\n  }, []);\n\n  useEffect(() => {\n    window.scrollTo(0, document.documentElement.scrollHeight);\n    if (errorMsg) window.scrollTo(0, 0);\n  }, [errorMsg]);\n\n  const getBusinessUnit = () => {\n    axios({\n      method: \"get\",\n      url: baseUrl + `/ProjectMS/CapacityPlan/getBusinessUnitDropdown`,\n    }).then(function (response) {\n      var res = response.data;\n      setBusUnit(res);\n    });\n  };\n\n  const handleChange = (e) => {\n    setdateFlag(e.target.value);\n  };\n  const handleClear = () => {\n    setResid(\"null\");\n  };\n  const handleSearch = () => {\n    let valid = GlobalValidation(ref);\n    console.log(valid);\n\n    if (valid == true) {\n      setErrorMsg(true);\n      setTimeout(() => {\n        setErrorMsg(false);\n      }, 4000);\n    }\n    axios({\n      method: \"post\",\n      url: baseUrl + `/ProjectMS/CapacityPlan/GetRoleResourcesAvailability`,\n      data: {\n        resid: resid.toString(),\n        fromDt: data.plannedStartDt,\n        endDt: data.plannedEndDt,\n      },\n    })\n      .then(function (response) {\n        let resp = response.data;\n        console.log(resp);\n        setResTableData(resp);\n        setDisplayTable(true);\n      })\n      .catch(function (response) {\n        console.log(response);\n      });\n  };\n\n  // useEffect(() => {\n  //     if (errorMsg) {\n\n  //         window.scrollTo({ top: scrollToRef.current.offsetTop, behavior: 'smooth' });\n  //     }\n  // }, [errorMsg]);\n  return (\n    <div>\n      <div className=\"col-md-12 customCard mt-2\">\n        <div className=\"col-md-12 collapseHeader\">\n          <h2>Search Resource - {data?.roleType}</h2>\n          <div\n            onClick={() => {\n              setVisible(!visible);\n              visible\n                ? setCheveronIcon(FaChevronCircleUp)\n                : setCheveronIcon(FaChevronCircleDown);\n            }}\n          >\n            <span>{cheveronIcon}</span>\n          </div>\n        </div>\n        <CCollapse visible={!visible}>\n          <div>\n            {/* <div className=\"group-content row\"> */}\n            <div className=\" col-md-3 ml-1\">\n              <div className=\" form-group row\">\n                <div\n                  className=\"col-6\"\n                  onChange={(e) => {\n                    handleChange(e);\n                  }}\n                >\n                  <input\n                    className=\"form-check-input\"\n                    htmlFor=\"yes\"\n                    type=\"radio\"\n                    value=\"0\"\n                    name=\"Resource\"\n                    id=\"Resource\"\n                    checked={dateFlag == \"0\" ? true : false}\n                  />\n                  &nbsp;\n                  <span className=\"form-check-label\">\n                    Resource Search\n                  </span>{\" \"}\n                </div>\n                {/* <div className='col-6' onChange={(e) => { handleChange(e) }}>\n                                        <input className=\"form-check-input\" htmlFor=\"no\" type=\"radio\" name=\"Skill\" id=\"Skill\" value=\"1\"\n                                            checked={dateFlag == \"1\" ? true : false}\n                                        />&nbsp;\n                                        <span className=\"form-check-label\">Skill Search</span>\n                                    </div> */}\n              </div>\n            </div>\n            {/* </div> */}\n\n            <div className=\"col-6 mb-1\">\n              {dateFlag == \"0\" ? (\n                <div className=\"form-group row\">\n                  <label className=\"col-2\">\n                    Resource <span className=\"error-text ml-1\">*</span>\n                  </label>\n                  <label className=\"col-1 p-0\">:</label>\n                  <div\n                    className=\"col-4 autocomplete\"\n                    ref={(ele) => {\n                      ref.current[0] = ele;\n                    }}\n                  >\n                    <div className=\"autoComplete-container \">\n                      <ReactSearchAutocomplete\n                        items={autocompleteData}\n                        type=\"Text\"\n                        name=\"resourceId\"\n                        id=\"resourceId\"\n                        className=\"error AutoComplete\"\n                        onSelect={(e) => {\n                          setResid(e.id);\n                        }}\n                        showIcon={false}\n                        onClear={handleClear}\n                        placeholder=\"Type minimum 3 characters\"\n                      />\n                      <span> {item.name}</span>\n                    </div>\n                  </div>\n                  <div className=\"col\">\n                    <button\n                      type=\"button\"\n                      className=\"btn btn-primary\"\n                      onClick={() => {\n                        handleSearch();\n                      }}\n                    >\n                      <FaSearch />\n                      Search\n                    </button>\n                  </div>\n                </div>\n              ) : (\n                <div className=\"group-content row\">\n                  <div className=\" col-md-3 mb-2\">\n                    <div className=\"form-group row\">\n                      <label className=\"col-5\" htmlFor=\"bu\">\n                        Business Unit <span className=\"error-text ml-1\">*</span>\n                      </label>\n                      <span className=\"col-1\">:</span>\n                      <div className=\"col-6\">\n                        <select\n                          className=\"error  col-md-12 p0\"\n                          name=\"busUnit\"\n                          id=\"busUnit\"\n                          onChange={(e) => handleChange(e)}\n                        >\n                          <option value=\"0\">\n                            {\" \"}\n                            &lt;&lt;Please Select&gt;&gt;\n                          </option>\n                          {busUnit.map((Item) => (\n                            <option value={Item.id}> {Item.name}</option>\n                          ))}\n                        </select>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\" col-md-3 mb-2\">\n                    <div className=\"form-group row\">\n                      <label className=\"col-5\" htmlFor=\"type\">\n                        Type <span className=\"error-text ml-1\">*</span>\n                      </label>\n                      <span className=\"col-1\">:</span>\n                      <div className=\"col-6\">\n                        <select\n                          className=\"error  col-md-12 p0\"\n                          name=\"type\"\n                          id=\"type\"\n                          onChange={(e) => handleChange(e)}\n                        >\n                          <option value=\"null\">\n                            {\" \"}\n                            &lt;&lt;Please Select&gt;&gt;\n                          </option>\n                          <option value=\"all\"> All</option>\n                          <option value=\"customer\"> Customer</option>\n                          <option value=\"supervisor\"> Supervisor</option>\n                        </select>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\" col-md-3 mb-2\">\n                    <div className=\"form-group row\"></div>\n                  </div>\n                  <div className=\" col-md-3 mb-2\">\n                    <div className=\"form-group row\"></div>\n                  </div>\n                  {console.log(data.plannedEndDt, data.plannedStartDt, \"dates\")}\n\n                  <div className=\" col-md-3 mb-2\">\n                    <div className=\"form-group row\">\n                      <label className=\"col-5\" htmlFor=\"fromDt\">\n                        From Date <span className=\"error-text ml-1\">*</span>\n                      </label>\n                      <span className=\"col-1\">:</span>\n                      <div className=\"col-6\">\n                        <DatePicker\n                          name=\"fromDt\"\n                          id=\"fromDt\"\n                          selected={moment(data.plannedStartDt)._d}\n                          dateFormat=\"yyyy-MMM-dd\"\n                          showMonthDropdown\n                          showYearDropdown\n                          dropdownMode=\"select\"\n                          minDate={moment(data.plannedStartDt)._d}\n                          maxDate={moment(data.plannedEndDt)._d}\n                          onKeyDown={(e) => {\n                            e.preventDefault();\n                            if (e.keyCode != 8) {\n                              e.preventDefault();\n                            }\n                          }}\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\" col-md-3 mb-2\">\n                    <div className=\"form-group row\">\n                      <label className=\"col-5\" htmlFor=\"toDate\">\n                        To Date <span className=\"error-text ml-1\">*</span>\n                      </label>\n                      <span className=\"col-1\">:</span>\n                      <div className=\"col-6\">\n                        <input\n                          type=\"text\"\n                          className=\"form-control\"\n                          id=\"toDate\"\n                          placeholder\n                          required\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\" col-md-3 mb-2\">\n                    <div className=\"form-group row\">\n                      <label className=\"col-5\" htmlFor=\"skillgroup\">\n                        Skill Group <span className=\"error-text ml-1\">*</span>\n                      </label>\n                      <span className=\"col-1\">:</span>\n                      <div className=\"col-6\">\n                        <input\n                          type=\"text\"\n                          className=\"form-control\"\n                          id=\"skillgroup\"\n                          placeholder\n                          required\n                        />\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              )}\n            </div>\n          </div>{\" \"}\n          {displayTable ? (\n            <CapacityPlanResourceList\n              tableData={resTableData}\n              Data={data}\n              projectId={projectId}\n              setAddErrMsg={setAddErrMsg}\n              addErrMsg={addErrMsg}\n              setErrData={setErrData}\n              setSearchResource={setSearchResource}\n              loggedUserId={loggedUserId}\n              getTableData={getTableData}\n              setEditMessage={setEditMessage}\n              setAddMessage={setAddMessage}\n              setAddResMessage={setAddResMessage}\n              validateproject={validateproject}\n              setValidateproject={setValidateproject}\n              dailyhrsRange={dailyhrsRange}\n              setDailyhrsRange={setDailyhrsRange}\n              setEditResMessage={setEditResMessage}\n              grp2Items={grp2Items}\n            />\n          ) : (\n            \"\"\n          )}\n        </CCollapse>\n      </div>\n    </div>\n  );\n}\n\nexport default CapacityPlanResource;\n","import React from \"react\";\nimport { CModal } from '@coreui/react'\nimport { CModalBody } from '@coreui/react'\nimport { CModalHeader } from '@coreui/react'\nimport { CModalTitle } from '@coreui/react'\nimport { AiFillDelete, AiFillWarning } from \"react-icons/ai\";\nimport { ImCross } from \"react-icons/im\";\nimport { TiTickOutline } from \"react-icons/ti\";\nimport axios from \"axios\";\nimport { environment } from \"../../environments/environment\";\nimport { useState } from \"react\";\nimport { BiCheck } from \"react-icons/bi\";\n\n\nfunction CapacityPlanDeletePopup(props) {\n    const {\n        //  deleteIssue,\n        deletePopup, setDeletePopup, deleteData, setUid, uid, getTableData, setStatus, setDeleteMessage, setDeleteResourceMessage, permissions } = props;\n    const includeData = Object.assign({}, deleteData);\n\n\n    const baseUrl = environment.baseUrl;\n\n    const deleteRole = () => {\n        axios({\n            method: \"delete\",\n            url:\n                baseUrl +\n                `/ProjectMS/CapacityPlan/deleteOuterProjectRoleList?Roleid=${uid}`,\n            data: uid\n        }).then(function (response) {\n            console.log(response)\n            let res = response.data.type\n            console.log(res)\n            setStatus(res)\n\n            setUid(0);\n            getTableData()\n            setDeletePopup(false)\n            setDeleteMessage(true);\n            setTimeout(() => {\n                setDeleteMessage(false);\n            }, 3000);\n        });\n    }\n    const deleteRes = () => {\n        console.log(\"Resource delet\")\n        axios({\n            method: \"delete\",\n            url:\n                baseUrl +\n                `/ProjectMS/CapacityPlan/deleteInnerProjectRoleResource?ProjectRoleBookId=${uid}`,\n            data: uid\n        }).then(function (response) {\n            console.log(response)\n            let res = response.data.type\n            console.log(res)\n            res == undefined ? setStatus(false) : setStatus(res)\n\n            setUid(0);\n            getTableData()\n            setDeletePopup(false)\n            setDeleteResourceMessage(true);\n            setTimeout(() => {\n                setDeleteResourceMessage(false);\n            }, 3000);\n        });\n    }\n\n\n    const handleClick = () => {\n        { deleteData?.hasOwnProperty(\"resource_id\") ? deleteRes() : deleteRole() }\n    }\n\n    return (\n        <div>\n\n            {console.log(deleteData?.hasOwnProperty(\"subrows\"), deleteData.subrows?.length, \"resource_id\")}\n            <CModal visible={deletePopup} size=\"sm\" className=\"ui-dialog\" onClose={() => setDeletePopup(false)} backdrop={'static'}>\n                <CModalHeader className=''>\n                    <CModalTitle>\n                        <span className='' >\n                            {deleteData?.hasOwnProperty(\"resource_id\") ? \"Delete Role Resource\" : \"Delete Project Role\"}\n                        </span>\n                    </CModalTitle>\n                </CModalHeader>\n                <CModalBody>\n                    {deleteData?.hasOwnProperty(\"resource_id\") ? <h6>Are you sure you want to delete Resource ?</h6> :\n\n                        <h6>Are you sure you want to delete project role ?</h6>\n                    }\n                    <div className='btn-container center my-2'>\n                        <button type=\"delete\" className=\"btn btn-primary\" onClick={() => { handleClick() }}><TiTickOutline size={\"1.5em\"} />Delete </button> &nbsp; &nbsp;\n                        <button type=\"button\" className=\"btn btn-secondary\" onClick={() => { setDeletePopup(false) }}> <ImCross /> Cancel </button>\n                    </div>\n                </CModalBody>\n            </CModal>\n\n        </div>\n    )\n}\nexport default CapacityPlanDeletePopup;","import React, { useState, useEffect, useMemo } from \"react\";\nimport MaterialReactTable from \"material-react-table\";\nimport { Button, IconButton } from \"@mui/material\";\n\nimport { AiFillRightCircle } from \"react-icons/ai\";\nimport { AiFillWarning } from \"react-icons/ai\";\nimport { VscTypeHierarchySub } from \"react-icons/vsc\";\nimport { GoPerson } from \"react-icons/go\";\nimport { Link } from \"react-router-dom\";\nimport fte_active from \"../../assets/images/empstatusIcon/fte_active.png\";\nimport fte_notice from \"../../assets/images/empstatusIcon/fte_notice.png\";\nimport subk_active from \"../../assets/images/empstatusIcon/subk_active.png\";\nimport \"./CapacityPlanCalenderTable.scss\"\n\nfunction CapacityPlanTotalResCalender(props) {\n  const {\n    data,\n    calenderPayload,\n    colExpandState,\n    formData,\n    setFormData,\n    value,\n    month,\n    setMonth,\n  } = props;\n  const [linkId, setLinkId] = useState([]);\n  const [name, setName] = useState();\n  const [nodes, setNodes] = useState([]);\n  const [columns, setColumns] = useState(null);\n  const [hiddenColumns, setHiddenColumns] = useState({});\n  const [colExpFlag, setColumnExpFlag] = useState(false);\n  const [headers, setHeaders] = useState([]);\n  const [actionPopup, setActionPopup] = useState(false);\n  const [hierarchyPopUp, setHierarchyPopUp] = useState(false);\n  const [hierarchyid, setHierarchyId] = useState([]);\n  const [anchorEl, setAnchorEl] = useState(null);\n\n  const icons = {\n    fteActive: (\n      <img\n        src={fte_active}\n        alt=\"(fte_active_icon)\"\n        style={{ height: \"12px\" }}\n        title=\"Active Employee\"\n      />\n    ),\n    fteNotice: (\n      <img\n        src={fte_notice}\n        alt=\"(fte_notice_icon)\"\n        style={{ height: \"12px\" }}\n        title=\"Employee in notice period\"\n      />\n    ),\n    subkActive: (\n      <img\n        src={subk_active}\n        alt=\"(subk_active_icon)\"\n        style={{ height: \"12px\" }}\n        title=\"Active Contractor\"\n      />\n    ),\n  };\n  const numberWithCommas = (x) => {\n    return x?.toString().replace(/\\B(?<!\\.\\d*)(?=(\\d{3})+(?!\\d))/g, \",\");\n  };\n  useEffect(() => {\n    numberWithCommas(getData());\n  }, [data]);\n\n\n  useEffect(() => {\n    window.scrollTo(0, document.documentElement.scrollHeight);\n  }, []);\n\n  // console.log(calenderPayload, \"calenderpayload\")\n  const getData = () => {\n    let tableData = data.tableData;\n    let columns = null;\n    // console.log(tableData);\n    if (data?.columns?.includes(\"'\")) {\n      columns = data?.columns?.replaceAll(\"'\", \"\");\n    } else {\n      columns = data?.columns;\n    }\n\n    let dd = columns?.split(\",\");\n    // let Indicators = [\"course_1\"];\n    let colArr = null;\n\n    if (dd != undefined) {\n      colArr = [...dd];\n    }\n\n    let newHeaders = [];\n    let hiddenHeaders = [];\n\n    const obj = {};\n    // console.log(colArr);\n    for (let i = 0; i < colArr?.length; i++) {\n      let colVal = colArr[i].trim();\n\n      let firstData = tableData[0];\n      obj[colVal] = firstData[colVal];\n    }\n\n    let headerArray = Object.entries(obj);\n    // console.log(headerArray);\n    let unWantedCols = [\"Id\", \"action_items\"];\n    // console.log(headerArray, \"headerArray\");\n    let filteredHeaders = headerArray.filter(\n      (d) => !unWantedCols.includes(d[0])\n    );\n    setHeaders(filteredHeaders);\n    // console.log(filteredHeaders, \"filteredHeaders\");\n    // filteredHeaders.map(([key, value]) => {\n    //     if (expandedCols.includes(key)) {\n    //         hiddenHeaders.push({ [key]: false });\n    //     }\n    // });\n\n    setHiddenColumns(Object.assign({}, ...hiddenHeaders));\n\n    let C = tableData?.filter((d) => d.Id == -1);\n    // console.log(C, \"cccccccccccccccccccccccccccccccccccc\");\n    filteredHeaders.map(([key, value], index) => {\n      let A = value?.replace(\"<br>\", \"\");\n      // console.log(A, key, value);\n      newHeaders.push({\n        accessorKey: key,\n        header: value,\n        enableColumnActions: false,\n        enableHiding: true,\n        rowspan: 5,\n\n        Header: ({ column }) => (\n          <div\n            className={\n              key.includes(\"AcGM\") ||\n                key.includes(\"NAcGM\") ||\n                key.includes(\"NAvgCost\") ||\n                key.includes(\"AvgCost\")\n                ? \"md\" && \"mixer\"\n                : key?.includes(\"_L\") || key.includes(\"_N\")\n                  ? \"disabledDates\"\n                  : key?.includes(\"Revenue\") ||\n                    key?.includes(\"Cost\") ||\n                    key?.includes(\"course_1\") ||\n                    key?.includes(\"Name\") ||\n                    key?.includes(\"emp_cadre\") ||\n                    key?.includes(\"BusinessUnit\") ||\n                    key?.includes(\"Supervisor\") ||\n                    key?.includes(\"manager\") ||\n                    key?.includes(\"capacity\") ||\n                    key?.includes(\"billAppr\") ||\n                    key?.includes(\"billApprNet\") ||\n                    key?.includes(\"Total\") ||\n                    key?.includes(\"Avg\") ||\n                    key?.includes(\"GM\") ||\n                    key?.includes(\"Role\") ||\n                    key?.includes(\"Rate\")\n                    ? \"mixer\"\n                    : key.includes(\"_W\") ? \"WeekendDates\" : \"\"\n            }\n            title={value}\n          >\n            {/* {console.log(value, \"headervalue\")} */}\n            {/* {value?.includes(\"<br>\")\n                            ? value.replace(\"<br>\", \" \")\n                            : value == undefined\n                                ? \"Avg\"\n                                : value}{\" \"} */}\n            {/* {key == colExpandState[2] ? (\n                            <IconButton\n                                className=\"expandIcon\"\n                                onClick={() => {\n                                    setColumnExpFlag((prev) => !prev);\n                                }}\n                            >\n                                <AiFillRightCircle />\n                            </IconButton>\n                        ) : null} */}\n            {value}\n          </div>\n        ),\n      });\n    });\n    let subHeaders =\n      C && Object.entries(C[0])?.filter((d) => !unWantedCols?.includes(d[0]));\n    {\n      // console.log(newHeaders, \"newHeaders\");\n    }\n\n    newHeaders.map((data) => {\n      // console.log(data);\n      let i = newHeaders.indexOf(data);\n\n      subHeaders.map(([key, value], index) => {\n        // console.log(subHeaders, \"subHeaders\");\n        if (key == data.accessorKey) {\n          // console.log(key, \"key matched!\");\n          // console.log(data.accessorKey, \"data.accessorKey\");\n          // console.log(value, \"vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv\");\n          let obj = {\n            id: key,\n            header: (\n              <div\n                className={key.includes(\"_L\") || key.includes(\"_N\") ? \"disabledDates\" : key.includes(\"_W\") ? \"WeekendDates\" : \"\"}\n                title={value}\n              >\n                {/* {console.log(value, \"value\")} */}\n                {value == null || value == 0\n                  ? null\n                  : // : key == \"undefined\" || key == null\n                  // ? \"Avg\"\n                  value}\n              </div>\n            ),\n            accessorKey: key,\n\n            Cell: ({ cell }) => {\n              return (\n                <div\n                  style={{\n                    whiteSpace: \"nowrap\",\n                    overflow: \"hidden\",\n                    textOverflow: \"ellipsis\",\n                  }}\n                >\n                  {cell.column.id == \"Name\" && cell.row.original != null ? (\n                    <>\n                      {/* {console.log(cell.row.original.Name, \"cell.row.original.Name in line 232\")} */}\n\n                      <span title={cell.getValue().split(\"_\")[0]}>\n                        {/* {console.log(calenderPayload.Src == \"res\" && cell.row.original.Name != \"Total\" && cell.getValue(), \"cell.row.original.Name\")} */}\n                        {icons[cell.row.original.Name.split(\"_\")[1]]}{\" \"}\n                        {cell.row.original.Name == \"Total\" ? (\n                          <b className=\"align right\"> Total</b>\n                        ) : cell.row.original.Name == \"Avg\" ? (\n                          <b className=\"align right\"> Avg</b>\n                        ) :\n                          (calenderPayload?.Src == \"res\" &&\n                            cell.row.original.Name != \"Total\")\n                            ? (\n                              // console.log(calenderPayload, \"hello in condition\"),\n                              <Link\n                                to={`/project/capacityPlan/:${cell.row.original.Id}`}\n                                target=\"_blank\"\n                              >\n                                {/* {console.log(cell.row.original.Name, \"cell.row.original.Name\")} */}\n                                {cell.getValue().split(\"_\")[0]}\n                              </Link>\n                            ) : (\n                              // <Link\n                              //     onClick={(e) => {\n                              //         setAnchorEl(e.currentTarget);\n\n                              //         setActionPopup(true),\n                              //             setLinkId(cell.row.original.Id);\n                              //         setName(cell.row.original.Name.split(\"_\")[0]);\n                              //     }}\n                              // >\n                              cell.getValue().split(\"_\")[0]\n                              // </Link>\n                            )}\n                      </span>\n                    </>\n                  ) : cell.column.id == \"course_1\" &&\n                    cell.row.original.Name != \"Total\" &&\n                    cell.row.original.Name != \"Avg\" &&\n                    cell.row.original != null ? (\n                    <>\n                      {cell.getValue() == \"1\" ? (\n                        <>\n                          <span\n                            className=\"green legendCircle\"\n                            title={\"ISMS Certified\"}\n                          ></span>\n                          {cell.row.original.action_items == 1 &&\n                            cell.row.original != null ? (\n                            <span\n                              className=\"exclamation orange\"\n                              title={\"Action Items Exist\"}\n                            >\n                              <AiFillWarning />\n                            </span>\n                          ) : (\n                            <span\n                              className=\"exclamation gray\"\n                              title={\"No Action Items\"}\n                            >\n                              <AiFillWarning />\n                            </span>\n                          )}\n                        </>\n                      ) : (\n                        <>\n                          <span\n                            className=\"red legendCircle\"\n                            title={\"ISMS Not Certified\"}\n                          ></span>\n                          {cell.row.original.action_items == 0 &&\n                            cell.row.original != null ? (\n                            <span\n                              className=\"exclamation gray\"\n                              title={\"No Action Items\"}\n                            >\n                              <AiFillWarning />\n                            </span>\n                          ) : (\n                            <span\n                              className=\"exclamation orange\"\n                              title={\"Action Items Exist\"}\n                            >\n                              <AiFillWarning />\n                            </span>\n                          )}\n                        </>\n                      )}\n                    </>\n                  ) : cell.column.id == \"Supervisor\" &&\n                    cell.row.original.Name != \"Total\" &&\n                    cell.row.original.Name != \"Avg\" &&\n                    cell.row.original != null ? (\n                    <>\n                      <span\n                        className=\"hierarchyIcon\"\n                        onClick={() => {\n                          // console.log(\"clicked\");\n                          setHierarchyPopUp(true);\n                          setHierarchyId(cell.row.original.Id);\n                        }}\n                        title={\"Hierarchy\"}\n                      >\n                        <VscTypeHierarchySub />\n                      </span>\n                      <span title={cell.getValue()?.split(\"_\")[0]}>\n                        {\"\" + cell.getValue() != \"\" && cell.getValue() != null\n                          ? cell.getValue()?.split(\"_\")[0]\n                          : \"\"}\n                      </span>\n                    </>\n                  ) :\n                    cell.getValue() == \"0_holday\" ||\n                      cell.getValue() == \"0.00_holday\" ? (\n                      <span\n                        className=\"blueHoliday align right\"\n                        title={cell.getValue().split(\"_\")[0]}\n                      >\n                        {cell.getValue().split(\"_\")[0]}\n                      </span>\n                    ) :\n                      cell.getValue() != null &&\n                        cell.getValue().split(\"_\")[1] == \"leave\" || cell.getValue() == \"0.00_leave_AV\" ? (\n                        <span\n                          className=\"pinkLeave align right\"\n                          title={cell.getValue().split(\"_\")[0]}\n                        >\n                          {cell.getValue().split(\"_\")[0]}\n                        </span>\n                      ) : cell.getValue() != null &&\n                        cell.getValue().includes(\"0.00\") ? (\n                        <span\n                          className=\" align right \"\n                          title={cell.getValue().split(\"_\")[0]}\n                        >\n                          {cell.getValue().split(\"_\")[0]}\n                        </span>\n                      ) : (cell.getValue() != null && key.includes(\"_L\")) ||\n                        key.includes(\"_W\") ? (\n                        <span className=\"disabledDates\" title={cell.getValue()}>\n                          {cell.getValue()}\n                        </span>\n                      ) : key.includes(\"Revenue\") ? (\n                        // || key.includes(\"Cost\")) && cell.row.original.Id != 999\n                        <>\n                          <div class=\"align right\" title={cell.getValue()}>\n                            $ {numberWithCommas(cell.getValue())}\n                          </div>\n                        </>\n                      ) : cell.getValue() != null &&\n                        (key.includes(\"GM\") || key.includes(\"billApprNet\")) ? (\n                        <>\n                          <div class=\"align right\" title={cell.getValue()}>\n                            {numberWithCommas(cell.getValue())} %\n                          </div>\n                        </>\n                      ) : cell.column.id == \"Name\" ||\n                        cell.column.id == \"course_1\" ||\n                        cell.column.id == \"Supervisor\" ||\n                        cell.column.id == \"manager\" ||\n                        cell.column.id == \"BusinessUnit\" ? (\n                        <span title={cell.getValue()}>{cell.getValue()}</span>\n                      ) : cell.getValue() != null &&\n                        cell.column.id == \"emp_cadre\" ? (\n                        <div class=\"align center \" title={cell.getValue()}>\n                          {\" \"}\n                          {cell.getValue()}\n                        </div>\n                      ) :\n\n                        key.includes(\"Role\") ?\n                          <div className=\"align left\" style={{\n                            whiteSpace: \"nowrap \",\n                            overflow: \"hidden\",\n                            textOverflow: \"ellipsis\",\n                            maxWidth: \"120px\"\n                          }} title={cell.getValue()}> {cell.getValue()}</div> :\n                          (\n\n                            <div className={cell.row.original.Name == \"Total\" ? \"totalRow align right\" : \"align right\"} title={cell.getValue()}>\n                              {\" \"}\n                              {cell.getValue()}\n                            </div>\n                          )\n                  }\n                </div >\n              );\n            },\n          };\n\n          newHeaders[i].columns = [obj];\n        } else {\n          // console.log(\"key not matched\");\n        }\n      });\n    });\n\n    setColumns(newHeaders);\n\n    let values = [];\n\n    let B = tableData?.filter((d) => d.Id !== -1 && d.Id !== -2);\n\n    setNodes(B);\n  };\n\n  useEffect(() => {\n    colExpFlag ? setHiddenColumns({}) : colCollapse();\n  }, [colExpFlag]);\n\n  const colCollapse = () => {\n    let hiddenHeaders = [];\n    // refactor this\n    // headers.map(([key, value]) => {\n    //     if (expandedCols.includes(key)) {\n    //         hiddenHeaders.push({ [key]: false });\n    //     }\n    // });\n\n    setHiddenColumns(Object.assign({}, ...hiddenHeaders));\n  };\n  const handleClose = () => {\n    setAnchorEl(false);\n  };\n  return (\n    <div className=\"materialReactExpandableTable capacityPlanCalenderTable darkHeader\">\n      {nodes?.length ? (\n        <MaterialReactTable\n          columns={columns}\n          data={nodes}\n          // enableExpandAll={true} //hide expand all double arrow in column header\n          // enableExpanding\n          enablePagination={false}\n          //enableRowVirtualization\n          enableGlobalFilter={true}\n          // enableGlobalFilterModes={searchFilter}\n          enableDensityToggle={false}\n          enableFullScreenToggle={false}\n          enableHiding={false}\n          enableColumnFilters={false}\n          enableBottomToolbar={false}\n          enableTopToolbar={true}\n          enableColumnActions={false}\n          enableSorting={false}\n          filterFromLeafRows //apply filtering to all rows instead of just parent rows\n          initialState={{\n            showGlobalFilter: true,\n            expanded: false,\n            density: \"compact\",\n            columnVisibility: { ...hiddenColumns },\n          }} //expand all rows by default\n          state={{ columnVisibility: { ...hiddenColumns } }}\n          //paginateExpandedRows={false} //When rows are expanded, do not count sub-rows as number of rows on the page towards pagination\n          defaultColumn={{ minSize: 30, maxSize: 1000, size: 30 }} //units are in px\n          // enableStickyHeader\n          muiSearchTextFieldProps={{\n            // placeholder: \"Search all users\",\n            // sx: { minWidth: \"300px\" },\n            variant: \"outlined\",\n          }}\n          muiTableContainerProps={{\n            sx: { maxHeight: \"50vh\" }, //give the table a max height\n          }}\n          muiTableBodyProps={{\n            sx: {\n              \"&\": {\n                borderRight: \"1px solid #ccc\",\n                borderBottom: \"1px solid #ccc\",\n              },\n              \"& td:first-of-type\": {\n                borderLeft: \"1px solid #ccc\",\n                minWidth: \"100px\",\n              },\n              \"& td\": {\n                // borderTop: \"1px solid #ccc\",\n                borderRight: \"1px solid #ccc\",\n                height: \"22px\",\n                padding: \"0px 5px\",\n                maxWidth: \"150px\",\n              },\n            },\n          }}\n          muiTableHeadProps={{\n            sx: {\n              \"& th\": {\n                borderTop: \"1px solid #ccc\",\n                borderRight: \"1px solid #ccc\",\n                background: \"#f4f4f4 \",\n                padding: \"0 5px\",\n              },\n              \"& th:first-of-type\": {\n                borderLeft: \"1px solid #ccc\",\n                minWidth: \"100px\",\n              },\n            },\n          }}\n        />\n      ) : null}\n    </div>\n  );\n}\n\nexport default CapacityPlanTotalResCalender;\n","import React, { useEffect, useRef, useState } from \"react\";\nimport { Column } from \"primereact/column\";\nimport { DataTable } from \"primereact/datatable\";\n// import { getTableData } from \"./CSATSurveyQuestionsData\";\nimport { ColumnGroup } from \"primereact/columngroup\";\nimport { Row } from \"primereact/row\";\nimport \"primeflex/primeflex.css\";\nimport { Button } from \"primereact/button\";\nimport { FaSave } from \"react-icons/fa\";\nimport DatePicker from \"react-datepicker\";\nimport { TiCancel, TiTickOutline } from \"react-icons/ti\";\nimport { environment } from \"../../environments/environment\";\n\n// AiFillDelete\n\nimport axios from \"axios\";\nimport moment from \"moment\";\nimport {\n  MdOutlineAdd,\n  MdOutlineCancelPresentation,\n  MdOutlinePlaylistAdd,\n} from \"react-icons/md\";\nimport {\n  AiFillDelete,\n  AiFillEdit,\n  AiFillWarning,\n  AiOutlineLeftSquare,\n  AiOutlinePlusSquare,\n  AiOutlineRightSquare,\n} from \"react-icons/ai\";\nimport { ImCross } from \"react-icons/im\";\nimport \"./CapacityPlan.scss\";\nimport { TfiSave } from \"react-icons/tfi\";\nimport { BsFillPersonPlusFill } from \"react-icons/bs\";\nimport CapacityPlanResource from \"./CapacityPlanResource\";\nimport CapacityPlanDeletePopup from \"./CapacityPlanDeletePopup\";\nimport { GoCalendar } from \"react-icons/go\";\nimport CapacityPlanTotalResCalender from \"./CapacityPlanTotalResCalender\";\n// import { BsPersonFillAdd } from \"react-icons/bs\";\n\nfunction CapacityPlanDataTable(props) {\n  const {\n    Data,\n    errorMsg,\n    setAddErrMsg,\n    setErrData,\n    addErrMsg,\n    setCalenderPayload,\n    calenderPayload,\n    calenderTableData,\n    dispCalender,\n    setDispCalender,\n    projectData,\n    setTableData,\n    projectId,\n    loggedUserId,\n    getTableData,\n    setStatus,\n    setDeleteMessage,\n    setEditMessage,\n    setAddMessage,\n    setAddResMessage,\n    setEditResMessage,\n    setDeleteResourceMessage,\n    dailyhrsRange,\n    setDailyhrsRange,\n    setErrorMsg,\n    validateproject,\n    setValidateproject,\n    setDupRoleName,\n    setDupliRole,\n    grp2Items,\n  } = props;\n  // const [Data, setData] = useState([]);\n  const [subRowData, setSubRowData] = useState([]);\n  const [expandedRows, setExpandedRows] = useState(null);\n  const [flag, setFlag] = useState(false);\n  const dataObject = grp2Items?.find(\n    (item) => item?.display_name === \"Capacity Plan\"\n  );\n  const [buttonDisabled, setButtonDisabled] = useState(true);\n  // const [validateproject, setValidateproject] = useState(false);\n  const [country, setCountry] = useState([]);\n  const [subrows, setSubrows] = useState([]);\n  const dates = {\n    fromDate: moment().startOf(\"month\").format(\"YYYY-MM-DD\"),\n    toDate: moment().startOf(\"month\").add(\"month\", 0).format(\"YYYY-MM-DD\"),\n  };\n  const [dt, setDt] = useState(dates);\n  const [month, setMonth] = useState(moment(dt.toDate).toDate());\n\n  const [confirminnermsg, setConfirminnerMsg] = useState(\"\");\n  const [costFalg, setCostFlag] = useState(false);\n  const [costRowData, setCostRowData] = useState([]);\n  // console.log(costRowData)\n  const [totalEffortHours, setTotalEffortHours] = useState(0);\n  const [totalallochrs, setTotalAllocHrs] = useState(0);\n  const [searchResource, setSearchResource] = useState(false);\n  const [resName, setResName] = useState([]);\n  const [deletePopup, setDeletePopup] = useState(false);\n  const [uid, setUid] = useState(0);\n  const [deleteData, setDeleteData] = useState([]);\n  const [allocType, setAllocType] = useState([]);\n  const [roleRateCost, setRoleRateCost] = useState([]);\n  const [roleDisp, setRoleDisp] = useState(\"\");\n  const [valid, setValid] = useState(false);\n  const [role, setRole] = useState([]);\n\n  const editedRef = useRef({});\n\n  let container = document.createElement(\"div\");\n  container.innerHTML = projectData[0]?.currency;\n\n  const [finalData, setFinalData] = useState(Data);\n  const [finalDataCopy, setFinalDataCopy] = useState(Data);\n  // let finalRow = [\n  //   {\n  //     id: \"\",\n  //     roleName: \"\",\n  //     roleType: \"\",\n  //     roleTypeId: \"\",\n  //     effortHours: \"\",\n  //     plannedStartDt: \"\",\n  //     plannedEndDt: \"\",\n  //     country: \"\",\n  //     countryId: \"\",\n  //     hourRate: \" \",\n  //     hourCost: \"\",\n  //     allocHrs: \"\",\n  //     resIcon: \"\",\n  //     action: \"\",\n  //   },\n  // ];\n\n  // useEffect(() => {\n  //   setFinalData([...Data, ...finalRow]);\n  // }, [Data]);\n  // console.log(subrows[0]?.id, \"subrows\");\n  const [uniqueMessage, setUniqueMessage] = useState(false);\n\n  const baseUrl = environment.baseUrl;\n\n  // console.log(Data, \"Data.data?.subrows.resource----\")\n  useEffect(() => {\n    let sum1 = 0;\n    let sum2 = 0;\n    Data.forEach((row) => {\n      sum1 += row.effortHours;\n      sum2 += row.roleAllochrs;\n    });\n    setTotalEffortHours(sum1);\n    setTotalAllocHrs(sum2);\n\n    // setTimeout(() => {\n    //   console.log(\"in line 154-----\")\n    //   domManpi();\n    // }, 500);\n  }, []);\n\n  const numberWithCommas = (x) => {\n    var number = String(x);\n\n    if (number.includes(\".\")) {\n      var decimalNumbers = number;\n      var num = Number(decimalNumbers);\n      let FdN = num != null && num.toFixed(2);\n      let final = FdN.split(\".\");\n      final[0] = final[0].replace(/(?<=\\d)(?=(\\d{3})+(?!\\d|\\.))/g, \",\");\n      return final.join(\".\");\n    } else {\n      // Add \".00\" to non-decimal values\n      return number != null\n        ? number.replace(/(?<=\\d)(?=(\\d{3})+(?!\\d|\\.))/g, \",\") + \".00\"\n        : \"\";\n    }\n  };\n\n  // const domManpi = () => {\n  //   let dt = document.getElementsByClassName(\"p-datatable-tbody\")[0].children;\n  //   let ele = dt[dt.length - 1];\n  //   let innerChilds = ele.children;\n  //   let celTd = innerChilds[innerChilds.length - 2];\n  //   celTd?.removeChild(celTd.lastElementChild);\n  // };\n\n  const domManpi = () => {\n    let paginator = document.getElementsByClassName(\n      \"p-paginator-element p-link\"\n    );\n    editing();\n    for (let i = 0; i < paginator.length; i++) {\n      paginator[i].addEventListener(\n        \"click\",\n\n        function (params) {\n          // alert(\"hello\");\n          editing();\n        },\n\n        true\n      );\n    }\n  };\n\n  const editing = () => {\n    let editableEle = null;\n    setTimeout(() => {\n      let dt = document.getElementsByClassName(\"p-datatable-tbody\")[0].children;\n      console.log(\"in line 177\");\n      let ele = dt[dt.length - 1];\n      let lastBeforeEle = dt[dt.length - 2];\n      let innerChilds = ele.children;\n      let lastBeforeEleInnerChilds = lastBeforeEle.children;\n\n      if (innerChilds[4]?.innerText == \"\") {\n        console.log(\"in line 213-------\");\n        let celTd = innerChilds[innerChilds.length - 2];\n        editableEle = celTd.lastElementChild;\n        celTd?.removeChild(celTd.lastElementChild);\n      }\n    }, 500);\n  };\n\n  const Reset = () => {\n    // console.log(\"clicked on cancel\");\n    document.getElementsByClassName(\"p-row-editor-cancel p-link\")[0]?.click();\n    setValidateproject(false);\n    setValid(false);\n    setButtonDisabled(true);\n  };\n\n  const Save = () => {\n    document\n      .getElementsByClassName(\"p-row-editor-save-icon pi pi-fw pi-check\")[0]\n      ?.click();\n\n    // console.log(\"saved\");\n  };\n\n  useEffect(() => {\n    getAllocationDropdown();\n    getRoleData();\n    getCountries();\n    // if (costFalg == true) {\n    //   getRoleCountryRate(costRowData)\n\n    // }\n  }, []);\n\n  const getAllocationDropdown = () => {\n    axios({\n      method: \"get\",\n      url: baseUrl + `/ProjectMS/CapacityPlan/getAllocationDropdown`,\n    }).then(function (response) {\n      var resp = response.data;\n      setAllocType(resp);\n    });\n  };\n\n  const getRoleCountryRate = (rowData, e) => {\n    // console.log(costRowData, \"getRoleCountryRate\")\n    axios({\n      method: \"get\",\n      url:\n        baseUrl +\n        `/ProjectMS/CapacityPlan/getRoleCountryRate?roleTypeId=${rowData}&customerId=${projectData[0]?.customer_id}&countryId=${e}&currencyId=${projectData[0]?.currency_id}`,\n    }).then(function (response) {\n      var resp = response.data;\n      console.log(\"in line 261--------\");\n      editedRef.current[\"hourCost\"] = resp[0]?.cost;\n      editedRef.current[\"hourRate\"] = 0;\n\n      // document.getElementsByName(\"hourRate\" + rowData.rowData.id?.toString())[0].value = 0;\n      console.log(editedRef.current, resp[0]?.cost);\n\n      setRoleRateCost(resp);\n    });\n  };\n\n  const getRoleData = () => {\n    axios({\n      method: \"get\",\n      url: baseUrl + `/ProjectMS/stakeholders/getRoles`,\n    }).then(function (response) {\n      let type = [];\n      let data = response.data;\n      data.length > 0 &&\n        data.forEach((e) => {\n          let TypeObj = {\n            label: e.display_name,\n            value: e.id,\n          };\n          type.push(TypeObj);\n        });\n\n      setRole(data);\n    });\n  };\n\n  const getCountries = () => {\n    axios\n      .get(baseUrl + `/CostMS/cost/getCountries`)\n\n      .then((Response) => {\n        let countries = [];\n\n        let data = Response.data;\n        data.length > 0 &&\n          data.forEach((e) => {\n            let countryObj = {\n              label: e.country_name,\n              value: e.id,\n            };\n            countries.push(countryObj);\n          });\n        setCountry(data);\n      })\n      .catch((error) => console.log(error));\n  };\n\n  const subtractHandler = () => {\n    const newFromDate = moment()\n      .subtract(1, \"month\")\n      .endOf(\"month\")\n      .format(\"YYYY-MM-DD\");\n    setCalenderPayload((prevPayload) => ({\n      ...prevPayload,\n      FromDt: newFromDate,\n    }));\n\n    const newToDate = moment(dt.toDate)\n      .subtract(\"month\", 1)\n      .format(\"YYYY-MM-DD\");\n  };\n  // console.log(Data, \"--------data\")\n\n  const addCalenderHandler = () => {\n    const newFromDate = moment(calenderPayload.FromDt)\n      .add(1, \"month\")\n      .endOf(\"month\")\n      .format(\"YYYY-MM-DD\");\n\n    const newToDate = moment(dt.toDate).add(\"month\", 1).format(\"YYYY-MM-DD\");\n\n    setCalenderPayload((prevPayload) => ({\n      ...prevPayload,\n      FromDt: newFromDate,\n    }));\n    // setMonth(moment(newToDate).toDate());\n  };\n\n  const addHandler = () => {\n    // console.log(\"row added\")\n    // let daa = document.getElementsByClassName(\n    //     \"p-paginator-first p-paginator-element p-link\"\n    // )[0];\n\n    // daa.click();\n    if (!valid) {\n      // setClicked(true)\n      // setCancelClicked(false);\n      // setSaveClicked(false);\n      setValid(true);\n      setButtonDisabled(false);\n    }\n    console.log(projectData, \"in add\");\n    // debugger;\n    console.log(projectData[0]?.plandStartDate);\n    // debugger\n    const data = {\n      // expand: \"\",\n      roleType: \"\",\n      // resIcon: \"\",\n      busUnit: \"\",\n      country: \"\",\n      countryId: \"\",\n      hourRate: 0,\n      hourCost: roleRateCost[0]?.cost == undefined ? 0 : roleRateCost[0]?.cost,\n      plannedStartDt: moment(projectData[0]?.plandStartDate)._d,\n      plannedEndDt: moment(projectData[0]?.plandEndDate)._d,\n      effortHours: 0.0,\n      allocHrs: \"\",\n    };\n    let dt = [];\n    dt.push(data);\n    // console.log(\"in line 291\");\n    // setProducts([...dt, ...products]);\n\n    setTableData([...dt, ...Data]);\n    // console.log(\"in line 293\");\n  };\n\n  let count = Data.length;\n\n  // console.log(count);\n\n  const allowExpansion = (rowData) => {\n    return (\n      // <span className=\"col-2\">\n      rowData.subrows?.length >= 0\n      // </span>\n    );\n  };\n\n  let headerGroup = (\n    <ColumnGroup>\n      <Row>\n        <Column />\n        <Column header=\"Role & Resource\" alignHeader={\"center\"} />\n        <Column />\n        <Column header=\"Business Unit\" alignHeader={\"center\"} />\n        <Column header=\"Country\" alignHeader={\"center\"} />\n        <Column header=\"Work Location\" alignHeader={\"center\"} />\n        <Column header=\"Billing Rate/Hr\" alignHeader={\"center\"} />\n        <Column header=\"Cost/Hr\" alignHeader={\"center\"} />\n        <Column header=\"From Date\" alignHeader={\"center\"} />\n        <Column header=\"To Date\" alignHeader={\"center\"} />\n        <Column header=\"Demand Hrs\" alignHeader={\"center\"} />\n        <Column header=\"Alloc Hrs\" alignHeader={\"center\"} />\n        <Column header=\"Daily Alloc Hrs\" alignHeader={\"center\"} />\n        <Column header=\"Alloc Type\" alignHeader={\"center\"} />\n        <Column header=\"Approval Status\" alignHeader={\"center\"} />\n        <Column header=\"Actions\" alignHeader={\"center\"} />\n        <Column />\n      </Row>\n      <Row />\n    </ColumnGroup>\n  );\n\n  let sideArrow = document.getElementsByClassName(\n    \"p-paginator-next p-paginator-element p-link\"\n  );\n  let sideDoubleArrow = document.getElementsByClassName(\n    \"p-paginator-last p-paginator-element p-link\"\n  );\n  const removeFirstRowIfEmpty = (prod) => {\n    Object.keys(prod)?.forEach((d) => {\n      if ([\"\", null, undefined, \" \"].includes(prod[d])) {\n        // alert(\"hello\");\n        setTableData(Data.slice(1));\n        setValid((prev) => !prev);\n        return;\n      }\n    });\n  };\n\n  useEffect(() => {\n    // if (Data[0]?.roleType != \"\") {\n    //   domManpi();\n    // }\n\n    // console.log(\"in line 376\");\n    // console.log(products);\n    let prod = Data[0];\n    sideArrow[0]?.addEventListener(\"click\", function () {\n      removeFirstRowIfEmpty(prod);\n    });\n\n    sideDoubleArrow[0]?.addEventListener(\"click\", function () {\n      // alert(\"hello double\");\n      removeFirstRowIfEmpty(prod);\n    });\n\n    if (Data[0]?.roleType == \"\") {\n      document.getElementsByClassName(\"p-row-editor-init p-link\")[0]?.click();\n\n      setTimeout(() => {\n        document\n          .getElementsByClassName(\"p-row-editor-cancel p-link\")[0]\n          ?.addEventListener(\n            \"click\",\n            function (e) {\n              if (Data[0]?.roleType == \"\") {\n                setTableData(Data.slice(1, Data.length));\n                setButtonDisabled(true);\n                setValid(false);\n                setValidateproject(false);\n              }\n            },\n\n            true\n          );\n      }, 200);\n    }\n    // setTimeout(() => {\n    //   console.log(\"in line 471------\")\n    //   domManpi(Data);\n    // }, 251);\n    // else {\n    //   setTimeout(() => {\n    //     console.log(\"in line 476------\")\n\n    //     domManpi();\n    //   }, 500);\n    // }\n  }, [Data]);\n\n  const onRowEditComplete = (e) => {\n    // console.log(e, \"data in line 512\");\n    let _products = [...Data];\n    let newData = e;\n    // _products[index] = newData;\n    // console.log(newData, \"newdata\");\n    // console.log(formEditData)\n    setTableData(_products);\n    // getRoleCountryRate(e.newData)\n    console.log(newData.id, \"--newdata\");\n    postData(e.newData);\n    ///////---------post data\n\n    {\n      newData.id != \"\" ? console.log(\"put\") : console.log(\"post\");\n    }\n  };\n\n  const postData = (rowData) => {\n    let checkData = {\n      // id: rowData.id == \"\" || rowData.id == null ? \"\" : rowData.id,\n      roleTypeId:\n        rowData.roleTypeId == \"\" || rowData.roleTypeId == null\n          ? \"345\"\n          : rowData.roleTypeId,\n      plannedStartDt: moment(rowData.plannedStartDt).format(\"yyyy-MM-DD\"),\n      plannedEndDt: moment(rowData.plannedEndDt).format(\"yyyy-MM-DD\"),\n      countryId: rowData?.countryId,\n      hourRate:\n        typeof editedRef.current.hourRate == \"object\"\n          ? editedRef.current.hourRate.value\n          : typeof editedRef.current.hourRate == \"string\"\n            ? editedRef.current.hourRate\n            : rowData.hourRate,\n      hourcost:\n        editedRef.current.hourCost == \"\"\n          ? roleRateCost[0]?.cost\n          : typeof editedRef.current.hourCost == \"object\"\n            ? editedRef.current.hourCost.value\n            : roleRateCost[0]?.cost == 0 ||\n              roleRateCost[0]?.cost == \"\" ||\n              editedRef.current.hourCost == 0 ||\n              editedRef.current.hourCost != \"\"\n              ? editedRef.current.hourCost\n              : roleRateCost[0]?.cost,\n      effortHours: rowData.effortHours,\n    };\n\n    console.log(\n      rowData.hourRate,\n      checkData,\n\n      editedRef.current.hourRate.value,\n      editedRef.current.hourCost,\n      typeof editedRef.current.hourRate,\n      editedRef.current.hourCost.value,\n      editedRef.current.hourRate,\n      \"checkdata\"\n    );\n    console.log(\n      rowData.countryId == \"\",\n      roleRateCost[0]?.cost == \"\",\n      typeof editedRef.current.hourCost == \"object\"\n        ? editedRef.current.hourCost.value == 0\n        : editedRef.current.hourCost == 0,\n      roleRateCost[0]?.cost == 0,\n\n      rowData.effortHours == \"\",\n      \"validations\"\n    );\n\n    if (\n      rowData.countryId == \"\" ||\n      // roleRateCost[0]?.cost == \"\" ||\n      (typeof editedRef.current.hourCost == \"object\"\n        ? editedRef.current.hourCost.value == 0\n        : editedRef.current.hourCost == 0) ||\n      // roleRateCost[0]?.cost == 0 ||\n      //  rowData.hourCost == 0 ||\n      rowData.effortHours == \"\"\n    ) {\n      setValidateproject(true);\n      setTimeout(() => {\n        setValidateproject(false);\n      }, 2000);\n\n      return;\n    } else {\n      let bool = null;\n\n      Data.map((ele, index) => {\n        // console.log(index+\"index\");\n\n        let arr = [];\n\n        Object.keys(checkData).map((inEle) => {\n          ele[inEle] == checkData[inEle] ? arr.push(true) : arr.push(false);\n\n          // console.log(ele[inEle] + \"---\" + a[inEle]);\n        });\n\n        // console.log(\"index----\" + index);\n        // console.log(arr);\n        if (arr.includes(false) == false) {\n          bool = true;\n          return;\n        }\n      });\n\n      console.log(bool);\n      if (bool) {\n        // console.log(rowData.roleType, projectData[0]?.projectName, \"---consoledata\")\n        setDupRoleName(rowData?.roleType);\n        setDupliRole(true);\n        setTimeout(() => {\n          setDupliRole(false);\n        }, 5000);\n        return;\n      }\n\n      axios({\n        method: \"post\",\n        url: baseUrl + `/ProjectMS/CapacityPlan/saveProjectRoleDetail`,\n\n        data: {\n          id: rowData.id == \"\" || rowData.id == null ? \"\" : rowData.id,\n          projectId: projectId,\n          RoleTypeId:\n            rowData.roleTypeId == \"\" || rowData.roleTypeId == null\n              ? \"345\"\n              : rowData.roleTypeId,\n          RoleName: \"\",\n          description: \"\",\n          IsRoleBillable: \"1\",\n          ProjectRolecol: \"\",\n          BaseLineVersionId: null,\n          RoleSite: null,\n          LobId: null,\n          PlannedStartDate:\n            rowData.plannedStartDt == \"\"\n              ? \"\"\n              : moment(rowData.plannedStartDt).format(\"yyyy-MM-DD\"),\n          PlannedEndDate:\n            rowData.plannedStartDt == \"\"\n              ? \"\"\n              : moment(rowData.plannedEndDt).format(\"yyyy-MM-DD\"),\n          countryId: rowData?.countryId,\n          hourRate:\n            typeof editedRef.current.hourRate == \"object\"\n              ? editedRef.current.hourRate.value\n              : typeof editedRef.current.hourRate == \"string\"\n                ? editedRef.current.hourRate\n                : rowData.hourRate,\n\n          // hourRate: typeof editedRef.current.hourRate != \"number\" || typeof editedRef.current.hourRate != \"string\" ? rowData.hourRate : editedRef.current.hourRate,\n          hourcost:\n            editedRef.current.hourCost == \"\"\n              ? roleRateCost[0]?.cost\n              : typeof editedRef.current.hourCost == \"object\"\n                ? editedRef.current.hourCost.value\n                : roleRateCost[0]?.cost == 0 ||\n                  roleRateCost[0]?.cost == \"\" ||\n                  editedRef.current.hourCost == 0 ||\n                  editedRef.current.hourCost != \"\"\n                  ? editedRef.current.hourCost\n                  : roleRateCost[0]?.cost,\n          projectoruid: \"\",\n          // \"dateCreated\":\"2023-06-01\",\n          // \"lastUpdated\":\"2023-06-01\",\n          createdById: loggedUserId,\n          lastUpdatedById: loggedUserId,\n          locationId: null,\n          actualStartDate: \"\",\n          actualEndDate: \"\",\n          effortHours: rowData.effortHours,\n          CostCenterId: null,\n        },\n      }).then((response) => {\n        console.log(response);\n        response.data.status == \"Saved Successfully\"\n          ? setAddMessage(true)\n          : setEditMessage(true);\n        getTableData();\n        setValidateproject(false);\n        setTimeout(() => {\n          setAddMessage(false);\n          setEditMessage(false);\n        }, 1000);\n      });\n\n      setButtonDisabled(true);\n      setValid(false);\n    }\n  };\n\n  const textEditorRoleType = (rowData) => {\n    console.log(rowData, \"textEditorRoleType called\");\n\n    return (\n      <>\n        <select\n          id=\"roleType\"\n          name=\"roleType\"\n          onChange={(e) => {\n            getRoleCountryRate(e.target.value, rowData?.rowData?.countryId);\n\n            rowData.editorCallback(e.target.value);\n            role.map((a) => {\n              if (a.id == e.target.value) {\n                rowData[\"rowData\"][\"roleType\"] = a.display_name;\n                rowData[\"rowData\"][\"roleTypeId\"] = e.target.value;\n              }\n            });\n            console.log(\n              roleRateCost[0]?.cost,\n              rowData.rowData.roleType,\n              rowData.rowData.roleTypeId,\n              e.target.value,\n              \"roleRateCost[0]?.cost\"\n            );\n          }}\n        >\n          {/* <option value=\"\">{\"<<Please Select>>\"}</option> */}\n          {role?.map((Item, index) => (\n            <option\n              key={index}\n              value={Item.id}\n              selected={Item.id == rowData.rowData.roleTypeId ? true : false}\n            >\n              {Item.id == rowData.rowData.roleTypeId &&\n                console.log(Item.id, \"itemid\")}\n              {Item.display_name}\n            </option>\n          ))}\n        </select>\n      </>\n    );\n  };\n\n  const textEditorCountry = (rowData) => {\n    // debugger;\n    console.log(rowData.rowData.countryId, \"---country rowData\");\n\n    return (\n      <>\n        <select\n          id=\"countryId\"\n          className={`error${validateproject && !rowData.country ? \" error-block\" : \"\"\n            }`}\n          name=\"country\"\n          onChange={(e) => {\n            // debugger;\n            getRoleCountryRate(rowData?.rowData?.roleTypeId, e.target.value); // Call the API with the updated rowData\n\n            rowData.editorCallback(e.target.value);\n            setCostFlag(true);\n\n            // console.log(document.getElementsByName(\"hourRate\" + rowData.rowData.id?.toString())[0].value = 0, \"document.getElementsByName\")\n            // document.getElementsByName(\"hourRate\" + rowData.rowData.id?.toString())[0].value = 0;\n            // document.getElementsByName(\n            //   \"hourCost\" + rowData.rowData.id?.toString()\n            // )[0].value = roleRateCost[0]?.cost;\n\n            country.map((a) => {\n              if (a.id == e.target.value) {\n                // debugger;\n                rowData[\"rowData\"][\"country\"] = a.country_name;\n                rowData[\"rowData\"][\"countryId\"] = e.target.value;\n\n                // console.log(rowData);\n              }\n            });\n            console.log(roleRateCost[0]?.cost, \"roleRateCost[0]?.cost\");\n\n            // console.log(rowData);\n          }}\n        >\n          {/* {console.log(country, \"country\")} */}\n          <option value=\"\">{\"<<Please Select>>\"}</option>\n          {country?.map((Item, index) => (\n            <option\n              key={index}\n              value={Item.id}\n              selected={Item.id == rowData.rowData.countryId ? true : false}\n            >\n              {Item.country_name}\n            </option>\n          ))}\n        </select>\n      </>\n    );\n  };\n\n  useEffect(() => {\n    setFinalData(finalDataCopy);\n  }, [finalDataCopy]);\n\n  const textEditorHourRate = (rowData) => {\n    console.log(\n      document.getElementsByName(\"hourRate\" + rowData.rowData.id?.toString())[0]\n        ?.value,\n      \"docman\"\n    );\n    console.log(\n      rowData.rowData.hourRate,\n      editedRef.current.hourRate,\n      \"---hourrate\"\n    );\n    return (\n      <>\n        <input\n          // className={`error ${validateproject && !rowData.rowData.hourRate\n          //     ? \"error-block\"\n          //     : \"\"\n          //     }`}\n          //value={value}\n          name={\"hourRate\" + rowData.rowData.id?.toString()}\n          ref={(ele) => {\n            console.log(\"in line 798------\");\n            console.log(ele);\n            console.log(rowData.rowData.hourRate);\n            if (ele?.value != null) {\n              // editedRef.current[\"hourCost\"] = resp[0].cost;\n              ele.value =\n                document.getElementsByName(\n                  \"hourRate\" + rowData.rowData.id?.toString()\n                )[0]?.value == undefined\n                  ? rowData.rowData.hourRate\n                  : editedRef.current.hourRate == 0\n                    ? 0\n                    : rowData.rowData.hourRate == 0 ||\n                      rowData.rowData.hourRate == null\n                      ? 0\n                      : rowData.rowData.hourRate;\n              console.log(\"in line 809-------\");\n              console.log(ele.value);\n              editedRef.current[ele.id] = ele;\n              console.log(editedRef.current);\n            }\n            console.log(ele?.value);\n          }}\n          type=\"text\"\n          //defaultValue={products.rowData.dependency_name}\n          // value={document.getElementsByName(\"hourRate\" + rowData.rowData.id?.toString())[0]?.value == 0 ? 0 : rowData.rowData.hourRate == 0 || rowData.rowData.hourRate == null ? 0 : rowData.rowData.hourRate}\n          id=\"hourRate\"\n          onChange={(e) => {\n            // rowData.editorCallback(e.target.value);\n            editedRef.current[\"hourRate\"] = e.target.value;\n          }}\n        />\n      </>\n    );\n  };\n\n  useEffect(() => {\n    console.log(\"in line 784---------\");\n    console.log(editedRef);\n  }, [roleRateCost]);\n\n  const textEditorHourCost = (rowData, cost) => {\n    // setRowId(products.rowData.id);\n    console.warn(rowData, \"hourcost\");\n    return (\n      <>\n        <input\n          className={`error ${validateproject && !rowData.rowData.hourCost ? \"error-block\" : \"\"\n            }`}\n          type=\"text\"\n          //defaultValue={products.rowData.dependency_name}\n          // value={\n          //   [\"\", null, undefined].includes(roleRateCost[0]?.cost)\n          //     ? rowData.rowData.hourCost\n          //     : roleRateCost[0]?.cost == undefined\n          //       ? 0\n          //       :\n          //       roleRateCost[0]?.cost\n          // }\n\n          ref={(ele) => {\n            console.log(\"in line 798------\");\n            console.log(ele);\n            console.log(rowData.rowData.hourCost);\n            if (ele?.value != null) {\n              ele.value = [\"\", null, undefined].includes(roleRateCost[0]?.cost)\n                ? rowData.rowData.hourCost\n                : // : rowData.rowData.hourCost != 0\n                //   ? rowData.rowData.hourCost\n                roleRateCost[0]?.cost;\n              console.log(\"in line 809-------\");\n              console.log(ele.value);\n              editedRef.current[ele.id] = ele;\n              console.log(editedRef.current);\n            }\n            console.log(ele?.value);\n          }}\n          id=\"hourCost\"\n          name={\"hourCost\" + rowData.rowData.id?.toString()}\n          onChange={(e) => {\n            // rowData.editorCallback(e.target.value);\n            editedRef.current[\"hourCost\"] = e.target.value;\n            console.log(e.target.value, \"hourcost e.target.value\");\n          }}\n        />\n      </>\n    );\n  };\n\n  const textEditoreffortHours = (rowData) => {\n    // setRowId(products.rowData.id);\n    return (\n      <>\n        <input\n          className={`error ${validateproject && !rowData.rowData.effortHours ? \"error-block\" : \"\"\n            }`}\n          type=\"text\"\n          //defaultValue={products.rowData.dependency_name}\n          value={rowData.rowData.effortHours}\n          id=\"effortHours\"\n          onChange={(e) => {\n            rowData.editorCallback(e.target.value);\n          }}\n        />\n      </>\n    );\n  };\n  const textEditorplannedStartDt = (rowData, options) => {\n    // console.log(options);\n    console.log(\n      projectData,\n      rowData.rowData.plannedStartDt,\n      \"rowData for datepicker\"\n    );\n    return (\n      rowData.rowData.plannedStartDt != \"\" && (\n        <DatePicker\n          name=\"plannedStartDt\"\n          selected={\n            rowData.rowData.plannedStartDt == null\n              ? moment(projectData[0]?.plandStartDate)._d\n              : moment(rowData.rowData.plannedStartDt)._d\n          }\n          id=\"plannedStartDt\"\n          value={\n            rowData.rowData.plannedStartDt == null\n              ? moment(projectData[0]?.plandStartDate)._d\n              : moment(rowData.rowData.plannedStartDt)._d\n          }\n          dateFormat=\"dd-MMM-yyyy\"\n          minDate={\n            rowData.rowData.plannedStartDt == null\n              ? moment(projectData[0]?.plandStartDate)._d\n              : moment(rowData.rowData.plannedStartDt)._d\n          }\n          maxDate={\n            rowData.rowData.plandEndDate == null\n              ? moment(projectData[0]?.plandEndDate)._d\n              : moment(rowData.rowData.plannedEndDt)._d\n          }\n          onChange={(e) => {\n            rowData.editorCallback(moment(e).format(\"DD-MMM-yyyy\"));\n            //         setFormEditData((prev) => ({\n            //             ...prev,\n            //             [\"plannedStartDt\"]: moment(e).format(\"yyyy-MM-DD\"),\n            //         })\n            //         );\n          }}\n          onKeyDown={(e) => {\n            e.preventDefault();\n          }}\n        />\n      )\n    );\n  };\n\n  const textEditorplannedEndDt = (rowData, options) => {\n    // console.log(options);\n    console.log(\n      rowData.rowData.plannedEndDt,\n      rowData.rowData.plandEndDate,\n      \"rowData for datepicker\"\n    );\n    return (\n      rowData.rowData.plannedEndDt != \"\" && (\n        <DatePicker\n          name=\"plannedEndDt\"\n          selected={\n            rowData.rowData.plannedEndDt == null\n              ? moment(projectData[0]?.plandEndDate)._d\n              : moment(rowData.rowData.plannedEndDt)._d\n          }\n          id=\"plannedEndDt\"\n          value={\n            rowData.rowData.plannedEndDt == null\n              ? moment(projectData[0]?.plandEndDate)._d\n              : moment(rowData.rowData.plannedEndDt)._d\n          }\n          dateFormat=\"dd-MMM-yyyy\"\n          minDate={\n            rowData.rowData.plannedStartDt == null\n              ? moment(projectData[0]?.plandStartDate)._d\n              : moment(rowData.rowData.plannedStartDt)._d\n          }\n          maxDate={\n            rowData.rowData.plannedEndDt == null\n              ? moment(projectData[0]?.plandEndDate)._d\n              : moment(rowData.rowData.plannedEndDt)._d\n          }\n          onChange={(e) => {\n            console.log(moment(e).format(\"DD-MMM-yyyy\"));\n            rowData.editorCallback(moment(e).format(\"DD-MMM-yyyy\"));\n            //         setFormEditData((prev) => ({\n            //             ...prev,\n            //             [\"plannedStartDt\"]: moment(e).format(\"yyyy-MM-DD\"),\n            //         })\n            //         );\n          }}\n          onKeyDown={(e) => {\n            e.preventDefault();\n          }}\n        />\n      )\n    );\n  };\n\n  const handleplannedStartDt = (data) => {\n    return (\n      <div\n        data-toggle=\"tooltip\"\n        title={moment(data.plannedStartDt).format(\"DD-MMM-YYYY\")}\n      >\n        {data.plannedStartDt == \"\" || data.plannedStartDt == null\n          ? \"\"\n          : moment(data.plannedStartDt).format(\"DD-MMM-YYYY\")}\n      </div>\n    );\n  };\n  const handleplannedEndDt = (data) => {\n    return (\n      <div\n        data-toggle=\"tooltip\"\n        title={moment(data.plannedEndDt).format(\"DD-MMM-YYYY\")}\n      >\n        {data.plannedEndDt == \"\" || data.plannedEndDt == null\n          ? \"\"\n          : moment(data.plannedEndDt).format(\"DD-MMM-YYYY\")}\n      </div>\n    );\n  };\n\n  const handleRoleType = (data) => {\n    return (\n      <div className=\"ellipsis\" data-toggle=\"tooltip\" title={data.roleType}>\n        {data.count == undefined ? \"\" : data.roleType + \"(\" + data.count + \")\"}{\" \"}\n      </div>\n    );\n  };\n  const handleBunit = (data) => {\n    return <div></div>;\n  };\n  const handleCountry = (data) => {\n    return (\n      <div data-toggle=\"tooltip\" title={data.country}>\n        {data.country}\n      </div>\n    );\n  };\n  const handleLocation = (data) => {\n    return <div></div>;\n  };\n  const handlehourRate = (data) => {\n    // debugger;\n    // console.log(data, \"in hanldehourrate\")\n    return (\n      <div\n        data-toggle=\"tooltip\"\n        title={\n          data.hourRate == 0 || data.hourRate == null\n            ? container.textContent + \" \" + numberWithCommas(0)\n            : data.hourRate == \"\"\n              ? container.textContent + \" \" + numberWithCommas(0)\n              : data.hourRate == \" \"\n                ? \"\"\n                : container.textContent + \" \" + numberWithCommas(data.hourRate)\n        }\n        style={{ textAlign: \"right\" }}\n      >\n        {\" \"}\n        {data.hourRate == 0 || data.hourRate == null\n          ? container.textContent + \" \" + numberWithCommas(0)\n          : data.hourRate == \"\"\n            ? container.textContent + \" \" + numberWithCommas(0)\n            : data.hourRate == \" \"\n              ? \"\"\n              : container.textContent + \" \" + numberWithCommas(data.hourRate)}\n      </div>\n    );\n  };\n  const handlehourCost = (data) => {\n    // console.log(data.hourCost, \"data.hourCost\")\n    return (\n      <div\n        data-toggle=\"tooltip\"\n        title={\n          data.hourCost == null\n            ? \"\"\n            : data.hourCost == 0\n              ? container.textContent + \" \" + numberWithCommas(0)\n              : container.textContent + \" \" + numberWithCommas(data.hourCost)\n        }\n        style={{ textAlign: \"right\" }}\n      >\n        {data.hourCost == null\n          ? 0\n          : data.hourCost == 0\n            ? container.textContent + \" \" + numberWithCommas(0)\n            : container.textContent + \" \" + numberWithCommas(data.hourCost)}\n      </div>\n    );\n  };\n  const handleEffortHours = (data) => {\n    return (\n      <div\n        data-toggle=\"tooltip\"\n        title={numberWithCommas(data.effortHours)}\n        style={{ textAlign: \"right\" }}\n      // className={data.effortHours == \"\" ? \"colTotal\" : \"\"}\n      >\n        {data.effortHours == \"\" ||\n          data.effortHours == 0 ||\n          data.effortHours == null\n          ? numberWithCommas(0)\n          : numberWithCommas(data.effortHours)}\n      </div>\n    );\n  };\n\n  const handleAllocHrs = (data) => {\n    // console.log(data.allocHrs, \"data.allocHrs\")\n\n    return (\n      <div\n        data-toggle=\"tooltip\"\n        title={\n          data.roleAllochrs == 0 || data.roleAllochrs == null\n            ? numberWithCommas(0)\n            : // : data.roleAllochrs == null\n            //   ? numberWithCommas(totalallochrs)\n            numberWithCommas(data.roleAllochrs)\n        }\n        style={{ textAlign: \"right\" }}\n      // className={data.roleAllochrs == null ? \"colTotal\" : \"\"}\n      >\n        {data.roleAllochrs == 0 || data.roleAllochrs == null\n          ? numberWithCommas(0)\n          : // : data.roleAllochrs == null\n          //   ? numberWithCommas(totalallochrs)\n          numberWithCommas(data.roleAllochrs)}\n      </div>\n    );\n  };\n  const handleDailyAllocHrs = (data) => {\n    return <div></div>;\n  };\n  const handleAllocType = (data) => {\n    return <div></div>;\n  };\n  const handleStatus = (data) => {\n    return <div></div>;\n  };\n  const handleBody = (data) => {\n    // console.log();\n    console.log(data, \"--data in hanldebody\");\n    let today = new Date();\n    let formattedDate = moment(today).format(\"yyyy-MM-DD\");\n    const isDisable = formattedDate > data.plannedEndDt;\n    return (\n      <div align=\"center\">\n        {data.resIcon == \"\" || grp2Items[1]?.is_write == false ? (\n          \"\"\n        ) : (\n          <BsFillPersonPlusFill\n            size={\"1.2em\"}\n            color=\"orange\"\n            title=\"Add Resource\"\n            style={{\n              cursor: isDisable ? \"no-drop\" : \"pointer\",\n              opacity: isDisable && \"0.35\",\n            }}\n            onClick={() => {\n              setSearchResource(true);\n              setResName(data);\n            }}\n          />\n        )}\n        {/* {console.log(data.plannedEndDt, formattedDate)} */}\n      </div>\n    );\n  };\n\n  const roleDeleteHandler = (data) => {\n    // console.log(data.id, \"--id\");\n    setDeletePopup(true);\n    setUid(data.id);\n    setDeleteData(data);\n  };\n  const resourceDeleteHandler = (data) => {\n    setDeletePopup(true);\n    setUid(data.id);\n    setDeleteData(data);\n  };\n\n  const handleAction = (data) => {\n    return data.action == \" \" ? (\n      \"\"\n    ) : (\n      <>\n        {/* {console.log(data, \"role\")} */}\n        {/* <AiFillEdit size={\"1.0em\"} color=\"orange\" onClick={() => { onRowEditComplete(data) }} />&nbsp; */}\n        <GoCalendar\n          color=\"orange\"\n          style={{ cursor: \"pointer\" }}\n          title=\"Assigned hrs\"\n          onClick={(e) => {\n            setDispCalender(true);\n            setCalenderPayload((prev) => ({\n              ...prev,\n              [\"Src\"]: \"role\",\n              [\"ObjectId\"]: data.id,\n            }));\n            setRoleDisp(data.roleType);\n          }}\n        />\n\n        {grp2Items[1]?.is_write == true ? (\n          <AiFillDelete\n            size={\"1.0em\"}\n            title=\"Delete\"\n            style={{ cursor: \"pointer\" }}\n            color=\"orange\"\n            onClick={() => {\n              // console.log(\"delete clicked\", data)\n              roleDeleteHandler(data);\n            }}\n          />\n        ) : (\n          \"\"\n        )}\n      </>\n    );\n  };\n  const handleResource = (data) => {\n    return (\n      <div data-toggle=\"tooltip\" title={data.resource}>\n        {data.resource}\n      </div>\n    );\n  };\n  const handleDescription = (data) => {\n    return (\n      <div data-toggle=\"tooltip\" className=\"ellipsis\" title={data.description}>\n        {data.description}\n      </div>\n    );\n  };\n  const handleSubCountry = (data) => {\n    return (\n      <div data-toggle=\"tooltip\" className=\"ellipsis\" title={data.country}>\n        {data.country}\n      </div>\n    );\n  };\n  const handleWorkLocation = (data) => {\n    return (\n      <div data-toggle=\"tooltip\" className=\"ellipsis\" title={data.name}>\n        {data.name}\n      </div>\n    );\n  };\n  // console.log(container.textContent, \"in line 941\")\n  const handlebillingRate = (data) => {\n    return (\n      <div\n        data-toggle=\"tooltip\"\n        title={data.billingRate}\n        style={{ textAlign: \"right\" }}\n      >\n        {container.textContent + \" \" + numberWithCommas(data.billingRate)}\n      </div>\n    );\n  };\n  const handleCost = (data) => {\n    return (\n      <div\n        data-toggle=\"tooltip\"\n        title={data.cost}\n        style={{ textAlign: \"right\" }}\n      >\n        {container.textContent + \" \" + numberWithCommas(data.cost)}\n      </div>\n    );\n  };\n  const handleEfforthours = (data) => {\n    return (\n      <div\n        data-toggle=\"tooltip\"\n        title={data.effort_hours}\n        style={{ textAlign: \"right\" }}\n      >\n        {numberWithCommas(data.effort_hours)}\n      </div>\n    );\n  };\n  const handleDailyhrs = (data) => {\n    return (\n      <div\n        data-toggle=\"tooltip\"\n        title={data.daily_hours}\n        style={{ textAlign: \"right\" }}\n      >\n        {numberWithCommas(data.daily_hours)}\n      </div>\n    );\n  };\n  const handleSubAllocType = (data) => {\n    return (\n      <div\n        data-toggle=\"tooltip\"\n        className=\"ellipsis\"\n        title={data.allocationType}\n      >\n        {data.allocationType}\n      </div>\n    );\n  };\n  const handleSubStatus = (data) => {\n    return (\n      <div data-toggle=\"tooltip\" className=\"ellipsis\" title={data.status}>\n        {data.status}\n      </div>\n    );\n  };\n  const handleFromDate = (data) => {\n    return (\n      <div\n        data-toggle=\"tooltip\"\n        title={moment(data.from_dt).format(\"DD-MMM-YYYY\")}\n      >\n        {moment(data.from_dt).format(\"DD-MMM-YYYY\")}\n      </div>\n    );\n  };\n  const handleToDate = (data) => {\n    return (\n      <div\n        data-toggle=\"tooltip\"\n        title={moment(data.to_dt).format(\"DD-MMM-YYYY\")}\n      >\n        {moment(data.to_dt).format(\"DD-MMM-YYYY\")}\n      </div>\n    );\n  };\n\n  const handleSubAction = (data) => {\n    let today = new Date();\n    let formattedDate = moment(today).format(\"yyyy-MM-DD\");\n    let isDisable = formattedDate > data.to_dt;\n    // console.log(data, isDisable, \"isDisable\")\n    return (\n      <>\n        {/* {console.log(data.id, \"resource\")} */}\n        {/* <AiFillEdit size={\"1.0em\"} color=\"orange\" />&nbsp; */}\n        <GoCalendar\n          color=\"orange\"\n          title=\"Assigned hrs\"\n          style={{ cursor: \"pointer\" }}\n          onClick={(e) => {\n            setDispCalender(true);\n            setCalenderPayload((prev) => ({\n              ...prev,\n              [\"Src\"]: \"res\",\n              [\"ObjectId\"]: data.resource_id,\n            }));\n            setRoleDisp(data.resource);\n          }}\n        />\n        {!isDisable && grp2Items[1]?.is_write == true ? (\n          <AiFillDelete\n            style={{ cursor: \"pointer\" }}\n            title=\"Delete row\"\n            size={\"1.0em\"}\n            color=\"orange\"\n            onClick={() => {\n              resourceDeleteHandler(data);\n            }}\n          />\n        ) : null}\n      </>\n    );\n  };\n\n  const textEditorbillingRate = (rowData) => {\n    return (\n      <>\n        <input\n          // className={`error ${validateproject && !rowData.rowData.hourRate\n          //     ? \"error-block\"\n          //     : \"\"\n          //     }`}\n          disabled\n          type=\"text\"\n          //defaultValue={products.rowData.dependency_name}\n          value={rowData.rowData.billingRate}\n          id=\"billingRate\"\n          onChange={(e) => {\n            rowData.editorCallback(e.target.value);\n          }}\n        />\n      </>\n    );\n  };\n\n  const textEditorfromDt = (rowData, options) => {\n    return (\n      <DatePicker\n        name=\"from_dt\"\n        selected={moment(rowData.rowData.from_dt)._d}\n        id=\"from_dt\"\n        value={moment(rowData.rowData.from_dt)._d}\n        dateFormat=\"dd-MMM-yyyy\"\n        disabled\n        onChange={(e) => {\n          rowData.editorCallback(moment(e).format(\"DD-MMM-yyyy\"));\n          //         setFormEditData((prev) => ({\n          //             ...prev,\n          //             [\"plannedStartDt\"]: moment(e).format(\"yyyy-MM-DD\"),\n          //         })\n          //         );\n        }}\n        onKeyDown={(e) => {\n          e.preventDefault();\n        }}\n      />\n    );\n  };\n\n  const textEditortoDt = (rowData, options) => {\n    console.log(Data, expandedRows, rowData, \"---subrowdatepicker\");\n    return (\n      <DatePicker\n        name=\"to_dt\"\n        selected={moment(rowData.rowData.to_dt)._d}\n        id=\"to_dt\"\n        value={moment(rowData.rowData.to_dt)._d}\n        dateFormat=\"dd-MMM-yyyy\"\n        minDate={moment(expandedRows[0]?.plannedStartDt)._d}\n        maxDate={moment(expandedRows[0]?.plannedEndDt)._d}\n        onChange={(e) => {\n          rowData.editorCallback(moment(e).format(\"yyyy-MM-DD\"));\n          // setEditFormData((prev) => ({\n          //     ...prev,\n          //     [\"toDate\"]: moment(e).format(\"yyyy-MM-DD\"),\n          // })\n          // );\n        }}\n        portalId=\"root-portal\"\n        onKeyDown={(e) => {\n          e.preventDefault();\n        }}\n        shouldCloseOnBlur={false}\n        shouldCloseOnSelect={false}\n      />\n    );\n  };\n\n  const textEditorDailyhrs = (rowData) => {\n    return (\n      <>\n        <input\n          // className={`error ${validateproject && !rowData.rowData.hourRate\n          //     ? \"error-block\"\n          //     : \"\"\n          //     }`}\n          type=\"text\"\n          disabled\n          //defaultValue={products.rowData.dependency_name}\n          value={rowData.rowData.daily_hours}\n          id=\"daily_hours\"\n          onChange={(e) => {\n            rowData.editorCallback(e.target.value);\n          }}\n        />\n      </>\n    );\n  };\n\n  const textEditorAllocationType = (rowData) => {\n    return (\n      <>\n        <select\n          id=\"allocationType\"\n          className={`error${validateproject && !rowData.country ? \" error-block\" : \"\"\n            }`}\n          name=\"allocationType\"\n          disabled\n          onChange={(e) => {\n            // console.log(e.target.value);\n            rowData.editorCallback(e.target.value);\n            allocType.map((a) => {\n              if (a.id == e.target.value) {\n                rowData[\"rowData\"][\"allocationType\"] = a.lkup_name;\n                rowData[\"rowData\"][\"allocation_type_id\"] = e.target.value;\n                // console.log(rowData);\n              }\n            });\n          }}\n        >\n          {/* {console.log(allocType, \"allocType\")} */}\n          <option value=\"\">{\"<<Please Select>>\"}</option>\n          {allocType?.map((Item, index) => (\n            <option\n              key={index}\n              value={Item.id}\n              selected={\n                Item.id == rowData.rowData.allocation_type_id ? true : false\n              }\n            >\n              {Item.lkup_name}\n            </option>\n          ))}\n        </select>\n      </>\n    );\n  };\n\n  const onInnerRowEditComplete = (e) => {\n    // console.log(e, \"data in line 512\");\n    let _products = [...subrows];\n    let newData = e;\n    // _products[index] = newData;\n    // console.log(newData, \"newdata\");\n    // console.log(formEditData)\n    // setTableData(_products);\n    // console.log(e.newData, \"--newdata\");\n    putInnerData(e.newData);\n  };\n\n  const putInnerData = (rowData) => {\n    // console.log(rowData, typeof (rowData.roleType), typeof (rowData.hourRate), \"rowdata\");\n\n    if (rowData.toDate == \"\") {\n      setValidateproject(true);\n    } else {\n      axios({\n        method: \"post\",\n        url: baseUrl + `/ProjectMS/CapacityPlan/saveInnerTabResource`,\n\n        data: {\n          id: rowData.id,\n          projectRoleId: rowData.project_role_id,\n          resourceId: rowData.resource_id,\n          allocationTypeId: rowData.allocation_type_id,\n          effortHours: rowData.effort_hours,\n          dailyHours: rowData.daily_hours,\n          hourlyRate: rowData.billingRate,\n          hourlyCost: rowData.cost,\n          countryId: rowData.country_id,\n          baselineVersionId: null,\n          statusId: rowData.status_id,\n          comments: \"\",\n          ss: \"\",\n          isprojectTask: null,\n          fromDate: rowData.from_dt,\n          toDate: rowData.to_dt,\n          isDelete: \"\",\n          createdById: loggedUserId,\n          lastUpdatedById: loggedUserId,\n        },\n      }).then((response) => {\n        console.log(response);\n        response.data.status == \"Saved Successfully\"\n          ? setAddMessage(true)\n          : setEditMessage(true);\n        getTableData();\n        setValidateproject(false);\n        setTimeout(() => {\n          setAddMessage(false);\n          setEditMessage(false);\n        }, 1000);\n      });\n    }\n  };\n\n  let rowExpansionTemplate = (data) => {\n    setSubrows(data.subrows);\n    return (\n      <div>\n        {/* {console.log(data.subrows)} */}\n        <div className=\"innerTable\">\n          <DataTable\n            value={data.subrows}\n            responsiveLayout=\"scroll\"\n            onRowEditComplete={onInnerRowEditComplete}\n            header={null}\n            editMode=\"row\"\n            dataKey=\"id\"\n            className=\"p-grid innercapacityPlanTable \"\n            pagination\n            paginator\n            rows={5}\n            paginationPerPage={5}\n            paginationRowsPerPageOptions={[5, 15, 25, 50]}\n            paginationComponentOptions={{\n              rowsPerPageText: \"Records per page:\",\n              rangeSeparatorText: \"out of\",\n            }}\n          >\n            <Column />\n            <Column\n              field=\"resource\"\n              header={data.resource}\n              body={handleResource}\n            />\n            <Column />\n            <Column\n              field=\"description\"\n              header={data.description}\n              body={handleDescription}\n            />\n            <Column\n              field=\"country\"\n              header={data.country}\n              body={handleSubCountry}\n            />\n            <Column field=\"name\" header={data.name} body={handleWorkLocation} />\n            <Column\n              field=\"billingRate\"\n              header={data.billingRate}\n              body={handlebillingRate}\n              editor={(options) => textEditorbillingRate(options)}\n            />\n            <Column field=\"cost\" header={data.cost} body={handleCost} />\n            <Column\n              field=\"from_dt\"\n              header={data.from_dt}\n              body={handleFromDate}\n              editor={(options) => textEditorfromDt(options)}\n            />\n            <Column\n              field=\"to_dt\"\n              header={data.to_dt}\n              body={handleToDate}\n              editor={(options) => textEditortoDt(options)}\n            />\n\n            <Column />\n            <Column\n              field=\"effort_hours\"\n              header={data.effort_hours}\n              body={handleEfforthours}\n            />\n            <Column\n              field=\"daily_hours\"\n              header={data.daily_hours}\n              body={handleDailyhrs}\n              editor={(options) => textEditorDailyhrs(options)}\n            />\n            <Column\n              field=\"allocationType\"\n              header={data.allocationType}\n              body={handleSubAllocType}\n              editor={(options) => textEditorAllocationType(options)}\n            />\n            <Column\n              field=\"status\"\n              header={data.status}\n              body={handleSubStatus}\n            />\n            {grp2Items[1]?.is_write == true ? <Column rowEditor /> : <Column rowEditor style={{ cursor: \"not-allowed\", pointerEvents: \"none\" }} />}\n            <Column body={handleSubAction} />\n          </DataTable>\n          <>{setSubRowData(Data?.subrows)}</>\n          {/* <>{console.log(subRowData)}</> */}\n        </div>\n      </div>\n    );\n  };\n  return (\n    <React.Fragment>\n      {uniqueMessage ? (\n        <div className=\"statusMsg error\">\n          {\" \"}\n          <AiFillWarning /> Please Give Unique Name\n        </div>\n      ) : (\n        \"\"\n      )}\n      {console.log(expandedRows, Data, \"expandedRows\")}\n      <div className=\"p-fluid primeReactTable capacityPlanTable darkHeader toHead\">\n        <DataTable\n          value={Data}\n          showGridlines\n          editMode=\"row\"\n          headerColumnGroup={headerGroup}\n          expandedRows={expandedRows}\n          onRowToggle={(e) => setExpandedRows(e.data)}\n          onRowEditComplete={onRowEditComplete}\n          rowExpansionTemplate={rowExpansionTemplate}\n          pagination\n          paginator\n          rows={10}\n          paginationPerPage={5}\n          paginationRowsPerPageOptions={[5, 15, 25, 50]}\n          paginationComponentOptions={{\n            rowsPerPageText: \"Records per page:\",\n            rangeSeparatorText: \"out of\",\n          }}\n        >\n          <Column feild=\"expand\" expander={allowExpansion} />\n          <Column\n            field=\"roleType\"\n            header={Data.roleType}\n            body={handleRoleType}\n            // filter={true}\n            editor={(options) => textEditorRoleType(options)}\n          />\n          <Column feild=\"resIcon\" body={handleBody} />\n          <Column feild=\"busUnit\" body={handleBunit} />\n          <Column\n            field=\"country\"\n            header={Data.country}\n            body={handleCountry}\n            editor={(options) => textEditorCountry(options)}\n          />\n          <Column body={handleLocation} style={{ width: \"112px\" }} />\n          <Column\n            field=\"hourRate\"\n            header={Data.hourRate}\n            body={handlehourRate}\n            editor={(options) => textEditorHourRate(options)}\n          />\n          <Column\n            field=\"hourCost\"\n            header={Data.hourCost}\n            body={handlehourCost}\n            editor={(options) => textEditorHourCost(options, Data.hourCost)}\n          />\n          <Column\n            field=\"plannedStartDt\"\n            header={Data.plannedStartDt}\n            body={handleplannedStartDt}\n            editor={(options) => textEditorplannedStartDt(options)}\n          />\n          <Column\n            field=\"plannedEndDt\"\n            header={Data.plannedEndDt}\n            body={handleplannedEndDt}\n            editor={(options) => textEditorplannedEndDt(options)}\n          />\n          <Column\n            field=\"effortHours\"\n            header={Data.effortHours}\n            body={handleEffortHours}\n            editor={(options) => textEditoreffortHours(options)}\n          />\n          <Column\n            field=\"allocHrs\"\n            header={Data.roleAllochrs}\n            body={handleAllocHrs}\n          />\n          <Column body={handleDailyAllocHrs} />\n          <Column body={handleAllocType} />\n          <Column body={handleStatus} />\n          {grp2Items[1]?.is_write == true ? (\n            <Column rowEditor />\n          ) : (\n            <Column rowEditor style={{ pointerEvents: \"none\", cursor: \"not-allowed\" }} />\n            // \"\"\n          )}\n          {/* } */}\n          <Column body={handleAction} />\n        </DataTable>\n        <div className=\"capacityPlanTableBottom\">\n          <div className=\"p-1\">\n            {dataObject?.is_write == true ? (\n              <div className=\"btn-container-events center\">\n                <button\n                  className=\"btn btn-primary p-1\"\n                  data-toggle=\"tooltip\"\n                  disabled={valid}\n                  title=\"Add new row\"\n                  onClick={() => {\n                    addHandler();\n                  }}\n                  variant=\"contained\"\n                >\n                  <MdOutlineAdd size=\"1.2em\" /> Add\n                </button>\n\n                <button\n                  className=\"btn btn-primary p-1\"\n                  disabled={buttonDisabled}\n                  onClick={() => {\n                    Save();\n                  }}\n                  data-toggle=\"tooltip\"\n                  title=\"Save row\"\n                >\n                  <TfiSave size={\"0.7em\"} />\n                  <span className=\"ml-1\"> Save </span>\n                </button>\n\n                <button\n                  className=\"btn btn-primary p-1\"\n                  disabled={buttonDisabled}\n                  onClick={() => {\n                    setFlag(false);\n                    Reset();\n                  }}\n                  data-toggle=\"tooltip\"\n                  title=\"Cancel row editing\"\n                  variant=\"contained\"\n                >\n                  <ImCross size={\"0.6em\"} />\n                  <span className=\"ml-1\">Cancel</span>\n                </button>\n              </div>\n            ) : (\n              <div className=\"btn-container-events center\">\n                <button\n                  className=\"btn btn-primary p-1\"\n                  data-toggle=\"tooltip\"\n                  disabled\n                  title=\"Add new row\"\n                  onClick={() => {\n                    addHandler();\n                  }}\n                  variant=\"contained\"\n                >\n                  <MdOutlineAdd size=\"1.2em\" /> Add\n                </button>\n\n                <button\n                  className=\"btn btn-primary p-1\"\n                  disabled\n                  onClick={() => {\n                    Save();\n                  }}\n                  data-toggle=\"tooltip\"\n                  title=\"Save row\"\n                >\n                  <TfiSave size={\"0.7em\"} />\n                  <span className=\"ml-1\"> Save </span>\n                </button>\n\n                <button\n                  className=\"btn btn-primary p-1\"\n                  disabled\n                  onClick={() => {\n                    setFlag(false);\n                    Reset();\n                  }}\n                  data-toggle=\"tooltip\"\n                  title=\"Cancel row editing\"\n                  variant=\"contained\"\n                >\n                  <ImCross size={\"0.6em\"} />\n                  <span className=\"ml-1\">Cancel</span>\n                </button>\n              </div>\n            )}\n            <div>\n              Total Demand hrs:\n              <strong>{numberWithCommas(totalEffortHours)}</strong>\n            </div>\n          </div>\n          <div className=\"p-1\">\n            Total Allocation hrs:{\" \"}\n            <strong>{numberWithCommas(totalallochrs)}</strong>\n          </div>\n        </div>\n      </div>\n\n      {searchResource ? (\n        <CapacityPlanResource\n          setErrorMsg={setErrorMsg}\n          addErrMsg={addErrMsg}\n          setAddErrMsg={setAddErrMsg}\n          setErrData={setErrData}\n          data={resName}\n          projectId={projectId}\n          errorMsg={errorMsg}\n          setSearchResource={setSearchResource}\n          loggedUserId={loggedUserId}\n          getTableData={getTableData}\n          setEditMessage={setEditMessage}\n          setAddMessage={setAddMessage}\n          setAddResMessage={setAddResMessage}\n          setEditResMessage={setEditResMessage}\n          validateproject={validateproject}\n          setValidateproject={setValidateproject}\n          dailyhrsRange={dailyhrsRange}\n          setDailyhrsRange={setDailyhrsRange}\n          grp2Items={grp2Items}\n        />\n      ) : (\n        \"\"\n      )}\n      {deletePopup ? (\n        <CapacityPlanDeletePopup\n          // deleteIssue={deleteIssue}\n          getTableData={getTableData}\n          setStatus={setStatus}\n          setDeleteResourceMessage={setDeleteResourceMessage}\n          setDeleteMessage={setDeleteMessage}\n          setUid={setUid}\n          uid={uid}\n          deletePopup={deletePopup}\n          setDeletePopup={setDeletePopup}\n          deleteData={deleteData}\n        />\n      ) : (\n        \"\"\n      )}\n      {/* {console.log(projectData, \"projectData[0].projectName\")} */}\n\n      {dispCalender && (\n        <div className=\"mt-2\">\n          <div className=\"collapseHeader revForcast\">\n            <div className=\"leftSection\">\n              <label style={{ minWidth: \"fit-content\" }}>\n                {calenderPayload.Src == \"prj\"\n                  ? projectData[0].projectName\n                  : roleDisp}\n              </label>\n              {/* <div className=\"legendCircle\"></div> */}\n              <select\n                name=\"Typ\"\n                id=\"Typ\"\n                value={calenderPayload.Typ}\n                onChange={(e) =>\n                  setCalenderPayload((prev) => ({\n                    ...prev,\n                    [\"Typ\"]: e.target.value,\n                  }))\n                }\n              >\n                <option value=\"allocations\">Allocation Hrs</option>\n                <option value=\"assigned\">Assigned Hrs</option>\n                <option value=\"actualHrs\">Actual Hrs</option>\n                <option value=\"approvedHrs\">Approved Hrs</option>\n                <option value=\"unapprovedHrs\">Unapproved Hrs</option>\n                <option value=\"unassigned\">Allocation - Assigned Hrs</option>\n              </select>\n              <select\n                name=\"AllocType\"\n                id=\"AllocType\"\n                value={calenderPayload.AllocType}\n                onChange={(e) =>\n                  setCalenderPayload((prev) => ({\n                    ...prev,\n                    [\"AllocType\"]: e.target.value,\n                  }))\n                }\n              >\n                <option value=\"all\">&lt;&lt; ALL &gt;&gt;</option>\n                <option value=\"billable\">Billable</option>\n                <option value=\"nonBillUtil\">Non Billable Utilized</option>\n                <option value=\"nonBillShad\">Non Billable Shadow</option>\n                <option value=\"nonBillEnb\">Non Billable Enabled</option>\n                <option value=\"nonBillCliPrep\">Non Billable Client Prep</option>\n                <option value=\"nonBillNonUtil\">\n                  Non Billable Non Utilized\n                </option>\n                <option value=\"nonBillInnov\">Non-billable Innovation</option>\n              </select>\n            </div>\n            <div className=\"rightSection\">\n              <label>Avg :</label>\n              <select id=\"Avg\">\n                <option value=\"ge\">&#8805;</option>\n                <option value=\"le\">&#8804;</option>\n                <option value=\"gt\">&#62;</option>\n                <option value=\"lt\">&#60;</option>\n                <option value=\"eq\">&#9868;</option>\n              </select>\n              <input\n                id=\"avgtextvalue\"\n                name=\"avgtextvalue\"\n                defaultValue={0}\n                onChange={(e) =>\n                  setCalenderPayload((prev) => ({\n                    ...prev,\n                    [\"avgtextvalue\"]: e.target.value,\n                  }))\n                }\n              />\n              %\n              <span className=\"ml-2 chevronContainer\">\n                <AiOutlineLeftSquare\n                  cursor=\"pointer\"\n                  size={\"2em\"}\n                  onClick={subtractHandler}\n                />\n                <span>{moment(calenderPayload.FromDt).format(\"MMM-YYYY\")}</span>\n                <AiOutlineRightSquare\n                  cursor=\"pointer\"\n                  size={\"2em\"}\n                  onClick={addCalenderHandler}\n                />\n              </span>\n              <MdOutlineCancelPresentation\n                size={\"1.8em\"}\n                onClick={() => {\n                  setDispCalender(false);\n                }}\n              />\n            </div>\n          </div>\n          <CapacityPlanTotalResCalender\n            data={calenderTableData}\n            calenderPayload={calenderPayload}\n          />\n        </div>\n      )}\n    </React.Fragment>\n  );\n}\n\nexport default CapacityPlanDataTable;\n","import React, { useRef, useState } from \"react\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { ReactSearchAutocomplete } from \"react-search-autocomplete\";\n\nimport { environment } from \"../../environments/environment\";\nimport { GoCalendar } from \"react-icons/go\";\nimport { useEffect } from \"react\";\nimport { DataTable } from \"primereact/datatable\";\nimport { Column } from \"primereact/column\";\nimport { InputText } from \"primereact/inputtext\";\nimport { Dropdown } from \"primereact/dropdown\";\nimport { ColumnGroup } from \"primereact/columngroup\";\nimport { Row } from \"primereact/row\";\nimport axios from \"axios\";\nimport Loader from \"../Loader/Loader\";\n\nimport CapacityPlanDataTable from \"./CapacityPlanDataTable\";\nimport moment from \"moment\";\nimport { BiCheck } from \"react-icons/bi\";\nimport { AiFillWarning } from \"react-icons/ai\";\nimport ScreenBreadcrumbs from \"../Common/ScreenBreadcrumbs\";\n// import 'primeicons/primeicons.css';\nfunction CapacityPlan(props) {\n  const baseUrl = environment.baseUrl;\n  const { projectId, grp2Items } = props;\n  const dataObject = grp2Items.find(\n    (item) => item.display_name === \"Capacity Plan\"\n  );\n  const abortController = useRef(null);\n\n  const [projectData, setProjectData] = useState([]);\n  const [roleCount, setRoleCount] = useState([]);\n  const [item, setItem] = useState([]);\n  const [resourceCount, setResourceCount] = useState([]);\n  const [isActive, setIsActive] = useState(\"active\");\n  const [autocompleteData, setAutocompleteData] = useState([]);\n  const [resource, setResource] = useState(\"null\");\n  const [tableData, setTableData] = useState([]);\n  const loggedUserId = localStorage.getItem(\"resId\");\n  const [calenderTableData, setCalenderTableData] = useState([]);\n  const [dispCalender, setDispCalender] = useState(false);\n  const [products, setProducts] = useState([]);\n  const [status, setStatus] = useState(\"\");\n  const [deleteMessage, setDeleteMessage] = useState(false);\n  const [deleteResourceMessage, setDeleteResourceMessage] = useState(false);\n  const [searching, setsearching] = useState(false);\n  const [errorMsg, setErrorMsg] = useState(false);\n  const [addmsg, setAddMessage] = useState(false);\n  const [editmsg, setEditMessage] = useState(false);\n  const [addResmsg, setAddResMessage] = useState(false);\n  const [editResmsg, setEditResMessage] = useState(false);\n  const [addErrMsg, setAddErrMsg] = useState(false);\n  const [errData, setErrData] = useState({\n    resName: \"\",\n    roleType: \"\",\n    fromDate: \"\",\n    toDate: \"\",\n  });\n  const [displayTable, setDisplayTable] = useState(false);\n  const [validateproject, setValidateproject] = useState(false);\n  const [dailyhrsRange, setDailyhrsRange] = useState(false);\n  const [dupliRole, setDupliRole] = useState(false);\n  const [dupRoleName, setDupRoleName] = useState(\"\");\n  const [calenderPayload, setCalenderPayload] = useState({\n    Src: \"prj\",\n    Typ: \"allocations\",\n    ObjectId: projectId.toString(),\n    FromDt: moment(new Date()).format(\"yyyy-MM-DD\"),\n    AllocType: \"all\",\n    PrjSource: \"-1\",\n    contTerms: \"-1\",\n    engComps: \"-1\",\n    cslIds: \"-1\",\n    dpIds: \"-1\",\n    avgtextvalue: \"\",\n    userId: loggedUserId.toString(),\n  });\n  // useEffect(() => {\n\n  // }, [tableData]);\n\n  const [routes, setRoutes] = useState([]);\n  let currentScreenName = [\"Projects\", \"Open\", \"Planning\", \"Capacity Plan\"];\n  let textContent = \"Delivery\";\n\n  const getMenus = () => {\n    // setMenusData\n\n    axios({\n      method: \"GET\",\n      url: baseUrl + `/CommonMS/master/getMenus?loggedUserId=${loggedUserId}`,\n    }).then((resp) => {\n      let data = resp.data;\n\n      data.forEach((item) => {\n        if (item.display_name === textContent) {\n          setRoutes([item]);\n        }\n      });\n    });\n  };\n\n  useEffect(() => {\n    getMenus();\n  }, []);\n\n  useEffect(() => {\n    // { dispCalender == true ?\n    handleCalenderClick();\n    // : \" \" }\n    // getActionTable();\n  }, [calenderPayload]);\n\n  useEffect(() => {\n    getRolesCount();\n    getResourceCount();\n    getTableData();\n  }, [isActive, resource]);\n\n  const getProjectOverviewData = () => {\n    axios({\n      method: \"get\",\n      url:\n        baseUrl +\n        `/ProjectMS/Audit/projectOverviewDetails?projectId=${projectId}`,\n    })\n      .then(function (response) {\n        let resp = response.data;\n        // console.log(resp);\n        setProjectData(resp);\n      })\n      .catch(function (response) {\n        console.log(response);\n      });\n  };\n  const handleSearch = (value) => {\n    // if (value.length >= 3) {\n    getProjectResource(value);\n    // }\n  };\n\n  const getProjectResource = (e) => {\n    axios({\n      method: \"get\",\n      url:\n        baseUrl +\n        `/ProjectMS/CapacityPlan/getProjectResource?pid=${projectId}&resource=${e}`,\n    }).then(function (response) {\n      var res = response.data;\n      setAutocompleteData(res);\n    });\n  };\n  useEffect(() => {}, [autocompleteData, item]);\n\n  useEffect(() => {\n    getProjectOverviewData();\n    // getProjectResource();\n  }, []);\n\n  const getRolesCount = () => {\n    axios({\n      method: \"get\",\n      url:\n        baseUrl +\n        `/ProjectMS/CapacityPlan/getRolesCount?pid=${projectId}&isActive=${isActive}`,\n    })\n      .then(function (response) {\n        let resp = response.data;\n        // console.log(resp);\n        setRoleCount(resp);\n      })\n      .catch(function (response) {\n        console.log(response);\n      });\n  };\n\n  const getResourceCount = () => {\n    axios({\n      method: \"get\",\n      url:\n        baseUrl +\n        `/ProjectMS/CapacityPlan/getResourceCount?pid=${projectId}&isActive=${isActive}`,\n    })\n      .then(function (response) {\n        let resp = response.data;\n        // console.log(resp);\n        setResourceCount(resp);\n      })\n      .catch(function (response) {\n        console.log(response);\n      });\n  };\n\n  const handleAbort = () => {\n    abortController.current && abortController.current.abort();\n    setsearching(false);\n  };\n\n  const getTableData = () => {\n    setDisplayTable(false);\n    setsearching(false);\n\n    axios({\n      method: \"get\",\n      url:\n        baseUrl +\n        `/ProjectMS/CapacityPlan/getProjectRoleList?pid=${projectId}&resource=${resource}&isActive=${isActive}`,\n    })\n      .then(function (response) {\n        let resp = response.data;\n        const finalRow = {\n          id: \"\",\n          roleName: \"\",\n          roleType: \"\",\n          roleTypeId: \"\",\n          effortHours: \"\",\n          plannedStartDt: \"\",\n          plannedEndDt: \"\",\n          country: \"\",\n          countryId: \"\",\n          hourRate: \" \",\n          hourCost: null,\n          allocHrs: null,\n          resIcon: \"\",\n          action: \" \",\n        };\n        // resp.length != 0 && resp.push(finalRow);\n        // console.log(resp);\n        setTableData(resp);\n        setProducts(resp);\n        setDisplayTable(true);\n        setsearching(false);\n      })\n      .catch(function (response) {\n        console.log(response);\n      });\n  };\n\n  const handleCalenderClick = (e) => {\n    setCalenderTableData([]);\n    setsearching(false);\n\n    axios({\n      method: \"post\",\n      url: baseUrl + `/ProjectMS/CapacityPlan/getCalenders`,\n      data: calenderPayload,\n    })\n      .then(function (response) {\n        let resp = response.data;\n        // console.log(resp);\n        setCalenderTableData(resp);\n        // setDispCalender(true)\n        setsearching(false);\n      })\n      .catch(function (response) {\n        console.log(response);\n      });\n  };\n\n  const handleChange = (e) => {\n    setIsActive(e.target.value);\n  };\n  const handleClear = () => {\n    setResource(\"null\");\n  };\n  return (\n    <div>\n      <div className=\"col-md-12\">\n        <div className=\"pageTitle\">\n          {projectData.map((list) => (\n            <div className=\"childOne\">\n              <h2>\n                {list.projectName} ({list.projectCode})\n              </h2>\n            </div>\n          ))}\n          <div className=\"childTwo\">\n            <h2>Capacity Plan</h2>\n          </div>\n          <div className=\"childThree\"></div>\n        </div>\n        <ScreenBreadcrumbs\n          routes={routes}\n          currentScreenName={currentScreenName}\n        />\n\n        {addErrMsg && (\n          <div className=\"statusMsg error\">\n            <BiCheck />\n            {`Resource ${errData.resName} is already booked for role ${\n              errData.roleType\n            },for the period ${moment(errData.fromDate).format(\n              \"DD-MMM-yyyy\"\n            )} to ${moment(errData.toDate).format(\"DD-MMM-yyyy\")}`}\n          </div>\n        )}\n        {dupliRole && (\n          <div className=\"statusMsg error\">\n            <AiFillWarning />\n            {`Role Name ${dupRoleName} is already exist for the project ${projectData[0]?.projectName}`}\n          </div>\n        )}\n\n        {dailyhrsRange && (\n          <div className=\"statusMsg error\">\n            <BiCheck />\n            {\"Daily Hours Can't be more than 24\"}\n          </div>\n        )}\n        {validateproject && (\n          <div className=\"statusMsg error\">\n            <AiFillWarning />\n            {\"Please select the valid values for highlighted fields\"}\n          </div>\n        )}\n        {deleteMessage && status == true ? (\n          <div className=\"statusMsg success\">\n            <BiCheck />\n            {\"Role Deleted Successfully\"}\n          </div>\n        ) : deleteResourceMessage && status == true ? (\n          <div className=\"statusMsg success\">\n            <BiCheck />\n            {\"Resource Deleted Successfully\"}\n          </div>\n        ) : deleteMessage && status == false ? (\n          <div className=\"statusMsg error\">\n            <AiFillWarning />\n            {\n              \"You cannot delete the role as resources are assigned to this role.\"\n            }\n          </div>\n        ) : deleteResourceMessage && status == false ? (\n          <div className=\"statusMsg error\">\n            <AiFillWarning />\n            {\"You cannot delete resource.\"}\n          </div>\n        ) : (\n          \"\"\n        )}\n        {addmsg && (\n          <div className=\"statusMsg success\">\n            <BiCheck />\n            {\"Role added Successfully\"}\n          </div>\n        )}\n        {editmsg && (\n          <div className=\"statusMsg success\">\n            <BiCheck />\n            {\"Role edited Successfully\"}\n          </div>\n        )}\n        {addResmsg && (\n          <div className=\"statusMsg success\">\n            <BiCheck />\n            {\"Resource added Successfully\"}\n          </div>\n        )}\n        {editResmsg && (\n          <div className=\"statusMsg success\">\n            <BiCheck />\n            {\"Resource edited Successfully\"}\n          </div>\n        )}\n        {errorMsg && (\n          <div className=\"statusMsg error\">\n            <AiFillWarning />\n            {\"Select valid resources before searching.\"}\n          </div>\n        )}\n        <div className=\"customCard mt-2 mb-0\">\n          <div className=\"group container-fluid \">\n            <div className=\"row\">\n              <div className=\" col-md-3 mb-2 px-0\">\n                <div className=\"form-group row\">\n                  <p className=\"col-12\" htmlFor=\"name-input-inline\">\n                    Total No. Of Resources : {resourceCount[0]?.resCount}\n                  </p>\n                </div>\n              </div>\n              <div className=\" col-md-3 mb-2\">\n                <div className=\"form-group row\">\n                  <p className=\"col-7\" htmlFor=\"name-input-inline\">\n                    Total No. Of Roles :{\" \"}\n                    {tableData.length == 0 ? 0 : roleCount[0]?.rolesCount}\n                  </p>\n                </div>\n              </div>\n              <div className=\" col-md-3 mb-2\">\n                <div className=\"form-group row\">\n                  <p className=\"col-7\" htmlFor=\"name-input-inline\"></p>\n                  <div className=\"col-4\">\n                    <p className=\" ellipsis tooltip-ex\"></p>\n                  </div>\n                </div>\n              </div>\n              <div className=\"col-md-3 mb-2 px-0\">\n                <div className=\"align right\">\n                  <div className=\"legendContainer align right \">\n                    <div className=\"legend green\">\n                      <div className=\"legendCircle\"></div>\n                      <div className=\"legendTxt\">ISMS Certified</div>\n                    </div>\n                    <div className=\"legend red\">\n                      <div className=\"legendCircle\"></div>\n                      <div className=\"legendTxt\">ISMS Not Certified</div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"col-md-12\">\n          <div className=\"tableHeader\">\n            <div className=\"leftSection\">\n              <h2>Project Role List</h2>\n            </div>\n            <div className=\"rightSection\">\n              <div className=\"autoComplete-container capacityPlanAc\">\n                <ReactSearchAutocomplete\n                  items={autocompleteData}\n                  type=\"Text\"\n                  name=\"resourceId\"\n                  id=\"resourceId\"\n                  className=\"error AutoComplete\"\n                  onSelect={(e) => {\n                    setResource(e.id);\n                  }}\n                  onSearch={handleSearch}\n                  // onChange={(e) => { getProjectResource(e.target.value) }}\n                  showIcon={false}\n                  onClear={handleClear}\n                  placeholder=\"Type minimum 3 characters\"\n                />\n                <span> {item.name}</span>\n              </div>\n              <span className=\"calender\">\n                <GoCalendar\n                  color=\"orange\"\n                  size={\"1.3em\"}\n                  onClick={() => {\n                    setDispCalender(true);\n                    setCalenderPayload((prev) => ({\n                      ...prev,\n                      [\"Src\"]: \"prj\",\n                      [\"ObjectId\"]: projectId.toString(),\n                    }));\n                    handleCalenderClick();\n                  }}\n                />\n              </span>\n              <select onChange={(e) => handleChange(e)}>\n                <option value=\"active\" id=\"1\">\n                  Active\n                </option>\n                <option value=\"all\" id=\"0\">\n                  All\n                </option>\n              </select>\n            </div>\n          </div>\n          {searching ? <Loader handleAbort={handleAbort} /> : \"\"}\n\n          {displayTable && (\n            <CapacityPlanDataTable\n              setErrorMsg={setErrorMsg}\n              setAddErrMsg={setAddErrMsg}\n              addErrMsg={addErrMsg}\n              setErrData={setErrData}\n              errorMsg={errorMsg}\n              validateproject={validateproject}\n              setValidateproject={setValidateproject}\n              getTableData={getTableData}\n              Data={tableData}\n              setCalenderPayload={setCalenderPayload}\n              calenderPayload={calenderPayload}\n              dispCalender={dispCalender}\n              calenderTableData={calenderTableData}\n              setDispCalender={setDispCalender}\n              projectData={projectData}\n              setProducts={setProducts}\n              products={products}\n              setTableData={setTableData}\n              projectId={projectId}\n              loggedUserId={loggedUserId}\n              setStatus={setStatus}\n              setAddMessage={setAddMessage}\n              setAddResMessage={setAddResMessage}\n              setEditResMessage={setEditResMessage}\n              setEditMessage={setEditMessage}\n              setDeleteMessage={setDeleteMessage}\n              setDeleteResourceMessage={setDeleteResourceMessage}\n              dailyhrsRange={dailyhrsRange}\n              setDailyhrsRange={setDailyhrsRange}\n              setDupliRole={setDupliRole}\n              setDupRoleName={setDupRoleName}\n              grp2Items={grp2Items}\n            />\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default CapacityPlan;\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { RiProfileLine } from \"react-icons/ri\";\nimport { environment } from \"../../environments/environment\";\nimport { Link } from \"react-router-dom\";\nimport moment from \"moment\";\nimport { TiTick } from \"react-icons/ti\";\nimport { AiFillStar } from \"react-icons/ai\";\nimport { TbBattery2 } from \"react-icons/tb\";\nimport ScreenBreadcrumbs from \"../Common/ScreenBreadcrumbs\";\n\nfunction ProjectOverview(props) {\n  const baseUrl = environment.baseUrl;\n\n  const { projectId, grp1Items } = props;\n  console.log(grp1Items);\n  const dataObject = grp1Items.find(\n    (item) => item.display_name === \"Project Overview\"\n  );\n  console.log(dataObject?.is_write, \"****\");\n  const [prjName, setPrjName] = useState(\"\");\n  const [projectData, setProjectData] = useState([]);\n  const [businessUnit, setBusinessUnit] = useState([]);\n  const [projectMngr, setProjectMngr] = useState([]);\n  const [deliveryMngr, setDeliveryMngr] = useState([]);\n  const [riskFactor, setRiskFactor] = useState([]);\n  const [kpiData, setKpiData] = useState([]);\n  const [efforts, setEfforts] = useState([]);\n  const [revenue, setRevenue] = useState([]);\n  const [directCost, setDirectCost] = useState([]);\n  const [otherCost, setOtherCost] = useState([]);\n  console.log(kpiData);\n\n  let container = document.createElement(\"div\");\n\n  const loggedUserId = localStorage.getItem(\"resId\");\n\n  const [routes, setRoutes] = useState([]);\n  let currentScreenName = [\"Projects\", \"Open\", \"Project\", \"Overview\"];\n  let textContent = \"Delivery\";\n\n  const getMenus = () => {\n    // setMenusData\n\n    axios({\n      method: \"GET\",\n      url: baseUrl + `/CommonMS/master/getMenus?loggedUserId=${loggedUserId}`,\n    }).then((resp) => {\n      let data = resp.data;\n\n      data.forEach((item) => {\n        if (item.display_name === textContent) {\n          setRoutes([item]);\n        }\n      });\n    });\n  };\n\n  useEffect(() => {\n    getMenus();\n  }, []);\n\n  const getProjectOverviewData = () => {\n    axios({\n      method: \"get\",\n      url:\n        baseUrl +\n        `/ProjectMS/Audit/projectOverviewDetails?projectId=${projectId}`,\n    })\n      .then(function (response) {\n        let resp = response.data;\n        console.log(resp);\n        setProjectData(resp);\n        //    setPrjName(resp)\n      })\n      .catch(function (response) {\n        console.log(response);\n      });\n  };\n  container.innerHTML = projectData[0]?.currency;\n\n  const getBusinessUnit = () => {\n    axios({\n      method: \"get\",\n      url: baseUrl + `/ProjectMS/Audit/getBusinessUnit?projectId=${projectId}`,\n    })\n      .then(function (response) {\n        let resp = response.data;\n        console.log(resp);\n        setBusinessUnit(resp);\n      })\n      .catch(function (response) {\n        console.log(response);\n      });\n  };\n\n  const getProjectName = () => {\n    axios({\n      method: \"get\",\n      url: baseUrl + `/ProjectMS/Audit/getProjectName?projectId=${projectId}`,\n    })\n      .then(function (response) {\n        let resp = response.data;\n        console.log(resp);\n        setPrjName(resp);\n      })\n      .catch(function (response) {\n        console.log(response);\n      });\n  };\n\n  const getProjectMngr = () => {\n    axios({\n      method: \"get\",\n      url: baseUrl + `/ProjectMS/Audit/getProjectManager?objectid=${projectId}`,\n    })\n      .then(function (response) {\n        let resp = response.data;\n        console.log(resp);\n        setProjectMngr(resp);\n      })\n      .catch(function (response) {\n        console.log(response);\n      });\n  };\n\n  const getDeliveryMngr = () => {\n    axios({\n      method: \"get\",\n      url:\n        baseUrl + `/ProjectMS/Audit/getDeliveryManager?objectid=${projectId}`,\n    })\n      .then(function (response) {\n        let resp = response.data;\n        console.log(resp);\n        setDeliveryMngr(resp);\n      })\n      .catch(function (response) {\n        console.log(response);\n      });\n  };\n\n  const getRiskFactor = () => {\n    axios({\n      method: \"get\",\n      url:\n        baseUrl +\n        `/ProjectMS/Audit/getRiskFactorCharacteristics?projectId=${projectId}`,\n    })\n      .then(function (response) {\n        let resp = response.data;\n        console.log(resp);\n        setRiskFactor(resp);\n      })\n      .catch(function (response) {\n        console.log(response);\n      });\n  };\n\n  const getEfforts = () => {\n    axios({\n      method: \"get\",\n      url: baseUrl + `/ProjectMS/Audit/getEfforts?projectId=${projectId}`,\n    })\n      .then(function (response) {\n        let resp = response.data;\n        console.log(resp);\n        setEfforts(resp);\n      })\n      .catch(function (response) {\n        console.log(response);\n      });\n  };\n\n  const getRevenue = () => {\n    axios({\n      method: \"get\",\n      url: baseUrl + `/ProjectMS/Audit/getRevenue?projectId=${projectId}`,\n    })\n      .then(function (response) {\n        let resp = response.data;\n        console.log(resp);\n        setRevenue(resp);\n      })\n      .catch(function (response) {\n        console.log(response);\n      });\n  };\n\n  const getDirectCost = () => {\n    axios({\n      method: \"get\",\n      url: baseUrl + `/ProjectMS/Audit/getDirectCost?projectId=${projectId}`,\n    })\n      .then(function (response) {\n        let resp = response.data;\n        console.log(resp);\n        setDirectCost(resp);\n      })\n      .catch(function (response) {\n        console.log(response);\n      });\n  };\n\n  const getOtherCost = () => {\n    axios({\n      method: \"get\",\n      url: baseUrl + `/ProjectMS/Audit/getOtherCost?projectId=${projectId}`,\n    })\n      .then(function (response) {\n        let resp = response.data;\n        console.log(resp);\n        setOtherCost(resp);\n      })\n      .catch(function (response) {\n        console.log(response);\n      });\n  };\n  useEffect(() => {\n    getProjectOverviewData();\n    getBusinessUnit();\n    getProjectMngr();\n    getDeliveryMngr();\n    getRiskFactor();\n    getProjectName();\n    getKpitableData();\n    getEfforts();\n    getRevenue();\n    getDirectCost();\n    getOtherCost();\n  }, [projectId]);\n\n  console.log(projectData);\n\n  const getKpitableData = () => {\n    axios({\n      method: \"post\",\n      url: baseUrl + `/ProjectMS/Audit/getProjectKpidata`,\n      data: {\n        businessUnitId: null,\n        custName: null,\n        prjName: prjName,\n        prjId: projectId,\n        prjComplexity: null,\n        prjStage: null,\n        source: null,\n        gm: null,\n      },\n    })\n      .then((res) => {\n        setKpiData(res.data);\n        console.log(res.data);\n      })\n      .then((error) => {\n        console.log(\"success\", error);\n      });\n  };\n\n  return (\n    <div>\n      {/* {projectId} */}\n      {console.log(projectId)}\n\n      <div>\n        {projectData.map((list) => (\n          <div className=\"col-md-12\">\n            <div className=\"pageTitle\">\n              <div className=\"childOne\">\n                <h2>\n                  {list.projectName}\n                  {/* ({list.projectCode}) */}\n                </h2>\n              </div>\n              <div className=\"childTwo\">\n                <h2>Overview</h2>\n              </div>\n              <div className=\"childThree\"></div>\n            </div>\n          </div>\n        ))}\n        <ScreenBreadcrumbs\n          routes={routes}\n          currentScreenName={currentScreenName}\n        />\n\n        {projectData.map((list) => (\n          <div className=\"customCard mb-0\">\n            <div className=\"group container-fluid grayBg\">\n              <div className=\"group-content row\">\n                <div className=\" col-md-4 mb-2\">\n                  <div className=\"form-group row\">\n                    <label className=\"col-4\" htmlFor=\"name-input-inline\">\n                      Project Code\n                    </label>\n                    <span className=\"col-1 p-0\">:</span>\n                    <div className=\"col-7\">\n                      <p\n                        className=\" ellipsis tooltip-ex\"\n                        data-toggle=\"tooltip\"\n                        title={list.projectCode}\n                      >\n                        {list.projectCode}\n                      </p>\n                    </div>\n                  </div>\n                </div>\n                <div className=\" col-md-4 mb-2\">\n                  <div className=\"form-group row\">\n                    <label className=\"col-4\" htmlFor=\"name-input-inline\">\n                      Project Name\n                    </label>\n                    <span className=\"col-1 p-0\">:</span>\n                    <div className=\"col-7 \">\n                      <p\n                        data-toggle=\"tooltip\"\n                        title={list.projectName}\n                        style={{ fontSize: \"13px\" }}\n                      >\n                        {list.projectName}\n                      </p>\n                    </div>\n                  </div>\n                </div>\n                <div className=\" col-md-4 mb-2\">\n                  <div className=\"form-group row\">\n                    <label className=\"col-4\" htmlFor=\"name-input-inline\">\n                      Project Category\n                    </label>\n                    <span className=\"col-1 p-0\">:</span>\n                    <div className=\"col-7 \">\n                      <p\n                        className=\" ellipsis tooltip-ex\"\n                        data-toggle=\"tooltip\"\n                        title={list.projectCategory}\n                      >\n                        {list.projectCategory}\n                      </p>\n                    </div>\n                  </div>\n                </div>\n                <div className=\" col-md-4 mb-2\">\n                  <div className=\"form-group row\">\n                    <label className=\"col-4\" htmlFor=\"name-input-inline\">\n                      PO Number\n                    </label>\n                    <span className=\"col-1 p-0\">:</span>\n                    <div className=\"col-7 \">\n                      <p\n                        className=\" ellipsis tooltip-ex\"\n                        data-toggle=\"tooltip\"\n                        title={list.poNumber}\n                      >\n                        {list.poNumber == null ? \"\" : list.poNumber}\n                      </p>\n                    </div>\n                  </div>\n                </div>\n                <div className=\" col-md-4 mb-2\">\n                  <div className=\"form-group row\">\n                    <label className=\"col-4\" htmlFor=\"name-input-inline\">\n                      Customer\n                    </label>\n                    <span className=\"col-1 p-0\">:</span>\n                    {dataObject?.is_write == true ? (\n                      <div className=\"col-7 \">\n                        <p\n                          className=\" ellipsis tooltip-ex\"\n                          data-toggle=\"tooltip\"\n                          title={list.customer}\n                        >\n                          <Link\n                            to={`/search/customerSearch/customer/dashboard/:${list.customer_id}`}\n                            target=\"_blank\"\n                          >\n                            {\" \"}\n                            {list.customer}\n                          </Link>\n                        </p>\n                      </div>\n                    ) : (\n                      <div className=\"col-7 \">\n                        <p\n                          className=\" ellipsis tooltip-ex\"\n                          data-toggle=\"tooltip\"\n                          title={list.customer}\n                        >\n                          {list.customer}\n                        </p>\n                      </div>\n                    )}\n                  </div>\n                </div>\n                <div className=\" col-md-4 mb-2\">\n                  <div className=\"form-group row\">\n                    <label className=\"col-4\" htmlFor=\"name-input-inline\">\n                      Division\n                    </label>\n                    <span className=\"col-1 p-0\">:</span>\n                    <div className=\"col-7\">\n                      <p\n                        className=\" ellipsis tooltip-ex\"\n                        data-toggle=\"tooltip\"\n                        title={list.division}\n                      >\n                        {list.division == null ? \"\" : list.division}\n                      </p>\n                    </div>\n                  </div>\n                </div>\n                <div className=\" col-md-4 mb-2\">\n                  <div className=\"form-group row\">\n                    <label className=\"col-4\" htmlFor=\"name-input-inline\">\n                      Engagement Type\n                    </label>\n                    <span className=\"col-1 p-0\">:</span>\n                    <div className=\"col-7\">\n                      <p\n                        className=\" ellipsis tooltip-ex\"\n                        data-toggle=\"tooltip\"\n                        title={list.engagementType}\n                      >\n                        {list.engagementType == null\n                          ? \"NA\"\n                          : list.engagementType}\n                      </p>\n                    </div>\n                  </div>\n                </div>\n                <div className=\" col-md-4 mb-2\">\n                  <div className=\"form-group row\">\n                    <label className=\"col-4\" htmlFor=\"name-input-inline\">\n                      Engagement Name\n                    </label>\n                    <span className=\"col-1 p-0\">:</span>\n                    {dataObject?.is_write === true ? (\n                      <div className=\"col-7 \">\n                        <p\n                          className=\" ellipsis tooltip-ex\"\n                          data-toggle=\"tooltip\"\n                          title={list.engagementName}\n                        >\n                          <Link\n                            to={`/engagement/Dashboard/:${list.engagementId}`}\n                            target=\"_blank\"\n                          >\n                            {\" \"}\n                            {list.engagementName}\n                          </Link>\n                        </p>\n                      </div>\n                    ) : (\n                      <div className=\"col-7 \">\n                        <p\n                          className=\" ellipsis tooltip-ex\"\n                          data-toggle=\"tooltip\"\n                          title={list.engagementName}\n                        >\n                          {list.engagementName}\n                        </p>\n                      </div>\n                    )}\n                  </div>\n                </div>\n                <div className=\" col-md-4 mb-2\">\n                  <div className=\"form-group row\">\n                    <label className=\"col-4\" htmlFor=\"name-input-inline\">\n                      Engagement Company\n                    </label>\n                    <span className=\"col-1 p-0\">:</span>\n                    <div className=\"col-7 \">\n                      <p\n                        className=\" ellipsis tooltip-ex\"\n                        data-toggle=\"tooltip\"\n                        title={list.engagementCompany}\n                      >\n                        {list.engagementCompany}\n                      </p>\n                    </div>\n                  </div>\n                </div>\n                <div className=\" col-md-4 mb-2\">\n                  <div className=\"form-group row\">\n                    <label className=\"col-4\" htmlFor=\"name-input-inline\">\n                      Contract Terms\n                    </label>\n                    <span className=\"col-1 p-0\">:</span>\n                    <div className=\"col-7 \">\n                      <p\n                        className=\" ellipsis tooltip-ex\"\n                        data-toggle=\"tooltip\"\n                        title={list.contractTerms}\n                      >\n                        {list.contractTerms}\n                      </p>\n                    </div>\n                  </div>\n                </div>\n                <div className=\" col-md-4 mb-2\">\n                  <div className=\"form-group row\">\n                    <label className=\"col-4\" htmlFor=\"name-input-inline\">\n                      Effort Type\n                    </label>\n                    <span className=\"col-1 p-0\">:</span>\n                    <div className=\"col-7 \">\n                      <p\n                        className=\" ellipsis tooltip-ex\"\n                        data-toggle=\"tooltip\"\n                        title={list.effortType}\n                      >\n                        {list.effortType == null ? \"NA\" : list.effortType}\n                      </p>\n                    </div>\n                  </div>\n                </div>\n                <div className=\" col-md-4 mb-2\">\n                  <div className=\"form-group row\">\n                    <label className=\"col-4\" htmlFor=\"name-input-inline\">\n                      Execution Methodology\n                    </label>\n                    <span className=\"col-1 p-0\">:</span>\n                    <div className=\"col-7\">\n                      <p\n                        className=\" ellipsis tooltip-ex\"\n                        data-toggle=\"tooltip\"\n                        title={list.executionMethodology}\n                      >\n                        {list.executionMethodology}\n                      </p>\n                    </div>\n                  </div>\n                </div>\n                <div className=\" col-md-4 mb-2\">\n                  <div className=\"form-group row\">\n                    <label className=\"col-4\" htmlFor=\"name-input-inline\">\n                      Project Phase\n                    </label>\n                    <span className=\"col-1 p-0\">:</span>\n                    <div className=\"col-7 \">\n                      <p\n                        className=\" ellipsis tooltip-ex\"\n                        data-toggle=\"tooltip\"\n                        title={list.projectPhase}\n                      >\n                        {list.projectPhase}\n                      </p>\n                    </div>\n                  </div>\n                </div>\n                <div className=\" col-md-4 mb-2\">\n                  <div className=\"form-group row\">\n                    <label className=\"col-4\" htmlFor=\"name-input-inline\">\n                      Project Complexity\n                    </label>\n                    <span className=\"col-1 p-0\">:</span>\n                    <div className=\"col-7\">\n                      <p\n                        className=\" ellipsis tooltip-ex \"\n                        data-toggle=\"tooltip\"\n                        title={list.projectComplexity}\n                      >\n                        {list.complexity_id == 0 ? \"\" : list.projectComplexity}\n                      </p>\n                    </div>\n                  </div>\n                </div>\n                <div className=\" col-md-4 mb-2\">\n                  <div className=\"form-group row\">\n                    <label className=\"col-4\" htmlFor=\"name-input-inline\">\n                      Project Stage\n                    </label>\n                    <span className=\"col-1 p-0\">:</span>\n                    <div className=\"col-7\">\n                      <p\n                        className=\" ellipsis tooltip-ex\"\n                        data-toggle=\"tooltip\"\n                        title={list.projectStage}\n                      >\n                        {list.projectStage}\n                      </p>\n                    </div>\n                  </div>\n                </div>\n                <div className=\" col-md-4 mb-2\">\n                  <div className=\"form-group row\">\n                    <label className=\"col-4\" htmlFor=\"name-input-inline\">\n                      Scheduling Mode\n                    </label>\n                    <span className=\"col-1 p-0\">:</span>\n                    <div className=\"col-6\">\n                      <p\n                        className=\" ellipsis tooltip-ex\"\n                        data-toggle=\"tooltip\"\n                        title={list.schedulingMode}\n                      >\n                        {list.schedulingMode}\n                      </p>\n                    </div>\n                  </div>\n                </div>\n                <div className=\" col-md-4 mb-2\">\n                  <div className=\"form-group row\">\n                    <label className=\"col-4\" htmlFor=\"name-input-inline\">\n                      Expenses Billable\n                    </label>\n                    <span className=\"col-1 p-0\">:</span>\n                    <div className=\"col-7\">\n                      <p\n                        className=\" ellipsis tooltip-ex\"\n                        data-toggle=\"tooltip\"\n                        title={list.expenseBillable}\n                      >\n                        {list.expenseBillable == 1 ? \"Yes\" : \"No\"}\n                      </p>\n                    </div>\n                  </div>\n                </div>\n                <div className=\" col-md-4 mb-2\">\n                  {/* {container.innerHTML = list.currency} */}\n                  <div className=\"form-group row\">\n                    <label className=\"col-4\" htmlFor=\"name-input-inline\">\n                      Currency\n                    </label>\n                    <span className=\"col-1 p-0\">:</span>\n                    <div className=\"col-7\">\n                      <p\n                        className=\" ellipsis tooltip-ex\"\n                        data-toggle=\"tooltip\"\n                        title={list.currency}\n                      >\n                        {container.textContent}\n                      </p>\n                    </div>\n                  </div>\n                </div>\n                <div className=\" col-md-4 mb-2\">\n                  <div className=\"form-group row\">\n                    <label className=\"col-4\" htmlFor=\"name-input-inline\">\n                      Time Entry Mode\n                    </label>\n                    <span className=\"col-1 p-0\">:</span>\n                    <div className=\"col-7\">\n                      <p\n                        className=\" ellipsis tooltip-ex\"\n                        data-toggle=\"tooltip\"\n                        title={list.timeEntryMode}\n                      >\n                        {list.timeEntryMode}\n                      </p>\n                    </div>\n                  </div>\n                </div>\n                <div className=\" col-md-4 mb-2\">\n                  <div className=\"form-group row\">\n                    <label className=\"col-4\" htmlFor=\"name-input-inline\">\n                      Project Scope\n                    </label>\n                    <span className=\"col-1 p-0\">:</span>\n                    <div className=\"col-7\">\n                      <p\n                        className=\" ellipsis tooltip-ex\"\n                        data-toggle=\"tooltip\"\n                        title={list.projectScope}\n                      >\n                        {list.projectScope}\n                      </p>\n                    </div>\n                  </div>\n                </div>\n                <div className=\" col-md-4 mb-2\">\n                  <div className=\"form-group row\">\n                    <label className=\"col-4\" htmlFor=\"name-input-inline\">\n                      Week Calendar\n                    </label>\n                    <span className=\"col-1 p-0\">:</span>\n                    <div className=\"col-7\">\n                      <p\n                        className=\" ellipsis tooltip-ex\"\n                        data-toggle=\"tooltip\"\n                        title={list.weekCalendar}\n                      >\n                        {list.weekCalendar}\n                      </p>\n                    </div>\n                  </div>\n                </div>\n                <div className=\" col-md-4 mb-2\">\n                  <div className=\"form-group row\">\n                    <label className=\"col-4\" htmlFor=\"name-input-inline\">\n                      Holiday Calendar\n                    </label>\n                    <span className=\"col-1 p-0\">:</span>\n                    <div className=\"col-7\">\n                      <p\n                        className=\" ellipsis tooltip-ex\"\n                        data-toggle=\"tooltip\"\n                        title={list.holidayCalendar}\n                      >\n                        {list.holidayCalendar}\n                      </p>\n                    </div>\n                  </div>\n                </div>\n                <div className=\" col-md-4 mb-2\">\n                  <div className=\"form-group row\">\n                    <label className=\"col-4\" htmlFor=\"name-input-inline\">\n                      Team Location\n                    </label>\n                    <span className=\"col-1 p-0\">:</span>\n                    <div className=\"col-7\">\n                      <p\n                        className=\" ellipsis tooltip-ex\"\n                        data-toggle=\"tooltip\"\n                        title={list.teamLocation}\n                      >\n                        {list.teamLocation == null ? \"NA\" : list.teamLocation}\n                      </p>\n                    </div>\n                  </div>\n                </div>\n\n                <div className=\" col-md-4 mb-2\">\n                  <div className=\"form-group row\">\n                    <label className=\"col-4\" htmlFor=\"name-input-inline\">\n                      Project Manager\n                    </label>\n                    <span className=\"col-1 p-0\">:</span>\n                    {projectMngr.map((list) => (\n                      <div className=\"col-7\">\n                        <p\n                          className=\" ellipsis tooltip-ex\"\n                          data-toggle=\"tooltip\"\n                          title={list.ProjectManager}\n                        >\n                          {list.ProjectManager == null ||\n                          list.ProjectManager == \"\"\n                            ? \"-\"\n                            : list.ProjectManager}\n                        </p>\n                      </div>\n                    ))}\n                  </div>\n                </div>\n\n                <div className=\" col-md-4 mb-2\">\n                  <div className=\"form-group row\">\n                    <label className=\"col-4\" htmlFor=\"name-input-inline\">\n                      Delivery Manager\n                    </label>\n                    <span className=\"col-1 p-0\">:</span>\n                    {deliveryMngr.map((list) => (\n                      <div className=\"col-7\">\n                        <p\n                          className=\" ellipsis tooltip-ex\"\n                          data-toggle=\"tooltip\"\n                          title={list.DeliveryManager}\n                        >\n                          {deliveryMngr.length == 0 ||\n                          list.DeliveryManager == \" \"\n                            ? \"-\"\n                            : list.DeliveryManager}\n                        </p>\n                      </div>\n                    ))}\n                  </div>\n                  {console.log(deliveryMngr.length)}\n                </div>\n                <div className=\" col-md-4 mb-2\">\n                  <div className=\"form-group row\">\n                    <label className=\"col-4\" htmlFor=\"name-input-inline\">\n                      Deliverables\n                    </label>\n                    <span className=\"col-1 p-0\">:</span>\n                    <div className=\"col-7\">\n                      <p\n                        className=\" ellipsis tooltip-ex\"\n                        data-toggle=\"tooltip\"\n                        title={list.deliverables}\n                      >\n                        {list.deliverables}\n                      </p>\n                    </div>\n                  </div>\n                </div>\n                <div className=\" col-md-4 mb-2\">\n                  <div className=\"form-group row\">\n                    <label className=\"col-4\" htmlFor=\"name-input-inline\">\n                      Sub Practice\n                    </label>\n                    <span className=\"col-1 p-0\">:</span>\n                    <div className=\"col-7\">\n                      <p\n                        className=\" ellipsis tooltip-ex\"\n                        data-toggle=\"tooltip\"\n                        title={list.subPractice}\n                      >\n                        {list.subPractice}\n                      </p>\n                    </div>\n                  </div>\n                </div>\n                <div className=\" col-md-4 mb-2\">\n                  <div className=\"form-group row\">\n                    <label className=\"col-4\" htmlFor=\"name-input-inline\">\n                      SF Engagement Type\n                    </label>\n                    <span className=\"col-1 p-0\">:</span>\n                    <div className=\"col-7 \">\n                      <p\n                        className=\" ellipsis tooltip-ex\"\n                        data-toggle=\"tooltip\"\n                        title={list.sfEngagementType}\n                      >\n                        {list.sfEngagementType}\n                      </p>\n                    </div>\n                  </div>\n                </div>\n                <div className=\" col-md-4 mb-2\">\n                  <div className=\"form-group row\">\n                    <label className=\"col-4\" htmlFor=\"name-input-inline\">\n                      Project Health\n                    </label>\n                    <span className=\"col-1 p-0\">:</span>\n                    {list.project_health_id == 498 ? (\n                      <div className=\"col-7 \">\n                        <p\n                          className=\" ellipsis tooltip-ex projectHealth green\"\n                          data-toggle=\"tooltip\"\n                          title={list.projectHealth}\n                        >\n                          <TiTick size={\"1.5em\"} />\n                          {list.projectHealth}{\" \"}\n                        </p>\n                      </div>\n                    ) : list.project_health_id == 499 ? (\n                      <div className=\"col-7 \">\n                        <p\n                          className=\" ellipsis tooltip-ex projectHealth amber\"\n                          data-toggle=\"tooltip\"\n                          title={list.projectHealth}\n                        >\n                          <AiFillStar size={\"1.5em\"} />\n                          {list.projectHealth}{\" \"}\n                        </p>\n                      </div>\n                    ) : list.project_health_id == 500 ? (\n                      <div className=\"col-7 \">\n                        <p\n                          className=\" ellipsis tooltip-ex projectHealth red\"\n                          data-toggle=\"tooltip\"\n                          title={list.projectHealth}\n                        >\n                          <TbBattery2 size={\"1.5em\"} />\n                          {list.projectHealth}{\" \"}\n                        </p>\n                      </div>\n                    ) : (\n                      \"\"\n                    )}\n                  </div>\n                </div>\n                <div className=\" col-md-4 mb-2\">\n                  <div className=\"form-group row\">\n                    <label className=\"col-4\" htmlFor=\"name-input-inline\">\n                      Facilitator\n                    </label>\n                    <span className=\"col-1 p-0\">:</span>\n                    <div className=\"col-7\">\n                      <p\n                        className=\" ellipsis tooltip-ex\"\n                        data-toggle=\"tooltip\"\n                        title={list.facilitator}\n                      >\n                        {list.facilitator}\n                      </p>\n                    </div>\n                  </div>\n                </div>\n                {list.contract == 25 ||\n                list.contract == 26 ||\n                list.contract == 27 ||\n                list.contract == 28 ||\n                list.contract == 606 ||\n                list.contract == 752 ? (\n                  <>\n                    <div className=\" col-md-4 mb-2\">\n                      <div className=\"form-group row\">\n                        <label className=\"col-4\" htmlFor=\"name-input-inline\">\n                          Client Email\n                        </label>\n                        <span className=\"col-1 p-0\">:</span>\n                        <div className=\"col-7\">\n                          <p className=\" ellipsis tooltip-ex\">\n                            {list.clientEmail}\n                          </p>\n                        </div>\n                      </div>\n                    </div>\n                    <div className=\" col-md-4 mb-2\">\n                      <div className=\"form-group row\">\n                        <label className=\"col-4\" htmlFor=\"name-input-inline\">\n                          Project Type\n                        </label>\n                        <span className=\"col-1 p-0\">:</span>\n                        <div className=\"col-7 \">\n                          <p className=\" ellipsis tooltip-ex\">\n                            {list.projectType}\n                          </p>\n                        </div>\n                      </div>\n                    </div>\n                  </>\n                ) : (\n                  \"\"\n                )}\n              </div>\n            </div>\n          </div>\n        ))}\n        <div className=\"group container-fluid\">\n          <div className=\"group-content row\">\n            {businessUnit.map((list) => (\n              <div className=\"col-md-7 mb-2 mt-2 p-0\">\n                <label htmlFor=\"name-input-inline\">Business Unit</label>\n                <div className=\"grayBg\">\n                  <p>{list.bussinessUnit}</p>\n                </div>\n              </div>\n            ))}\n            {projectData.map((list) => (\n              <>\n                <div className=\"col-md-5 mt-2\">\n                  <label htmlFor=\"name-input-inline\">Services Offered</label>\n                  <div className=\"grayBg\">\n                    <p>{list.servicesOffered}</p>\n                  </div>\n                </div>\n                <div className=\"col-md-7 mb-2 mt-2 p-0\">\n                  <label htmlFor=\"name-input-inline\">\n                    Project Description/Business Case\n                  </label>\n                  <div className=\"grayBg\">\n                    <p>{list.business_case}</p>\n                  </div>\n                </div>\n                <div className=\"col-md-5 mt-2 \">\n                  <label htmlFor=\"name-input-inline\">Health Comments</label>\n                  <div className=\"grayBg\">\n                    <p>{list.prj_health_comments}</p>\n                  </div>\n                </div>\n                <div className=\"col-md-7 mb-2 p-0\">\n                  <div className=\"form-group row\">\n                    <label className=\"col-3 ml-1\" htmlFor=\"name-input-inline\">\n                      SF Engagement Type &nbsp;:\n                    </label>\n                    {/* <span className=\"col-1\">:</span> */}\n                    <p\n                      className=\"col-7 ellipsis tooltip-ex\"\n                      data-toggle=\"tooltip\"\n                      title={list.sfEngagementType}\n                    >\n                      {list.sfEngagementType}\n                    </p>\n                  </div>\n                  <div className=\"col-12  mb-2 p-0\">\n                    <div class=\"col-12 p-0\">\n                      <table id=\"table-fields\" class=\"table\">\n                        <tbody className=\"table_Body\">\n                          <tr>\n                            <th colSpan={5} style={{ color: \"#187fde\" }}>\n                              <RiProfileLine /> Project KPI's\n                            </th>\n                          </tr>\n                          <tr>\n                            <th>\n                              <center>KPI</center>\n                            </th>\n                            <th>\n                              <center>Preliminary</center>\n                            </th>\n                            <th>\n                              <center>Contracted</center>\n                            </th>\n                            <th>\n                              <center>Planned</center>\n                            </th>\n                            <th>\n                              <center>Actual</center>\n                            </th>\n                          </tr>\n\n                          <tr>\n                            <td>Schedule</td>\n                            <td>\n                              {list.preStartDate == null\n                                ? \"-\"\n                                : moment(list.preStartDate).format(\n                                    \"DD-MMM-yyyy\"\n                                  )}{\" \"}\n                              to{\" \"}\n                              {list.preEndDate == null\n                                ? \"-\"\n                                : moment(list.preEndDate).format(\"DD-MMM-yyyy\")}\n                            </td>\n                            <td>\n                              {list.contStartDate == null\n                                ? \"-\"\n                                : moment(list.contStartDate).format(\n                                    \"DD-MMM-yyyy\"\n                                  )}{\" \"}\n                              to{\" \"}\n                              {list.contEndDate == null\n                                ? \"-\"\n                                : moment(list.contEndDate).format(\n                                    \"DD-MMM-yyyy\"\n                                  )}\n                            </td>\n                            <td>\n                              {list.plandStartDate == null\n                                ? \"-\"\n                                : moment(list.plandStartDate).format(\n                                    \"DD-MMM-yyyy\"\n                                  )}{\" \"}\n                              to{\" \"}\n                              {list.plandEndDate == null\n                                ? \"-\"\n                                : moment(list.plandEndDate).format(\n                                    \"DD-MMM-yyyy\"\n                                  )}\n                            </td>\n                            <td>\n                              {list.actStartDate == null\n                                ? \"NA\"\n                                : moment(list.actStartDate).format(\n                                    \"DD-MMM-yyyy\"\n                                  )}{\" \"}\n                              to{\" \"}\n                              {list.actEndDate == null\n                                ? \"-\"\n                                : moment(list.actEndDate).format(\"DD-MMM-yyyy\")}\n                            </td>\n                          </tr>\n                          {kpiData.map((data) => (\n                            <>\n                              {console.log(\n                                data.planned_hours?.toLocaleString(\"en-US\")\n                              )}\n                              <tr>\n                                <td>Duration (Days)</td>\n                                <td className=\"text-right\">\n                                  {data.preliminary_duration}\n                                </td>\n                                <td className=\"text-right\">\n                                  {data.contracted_duration}\n                                </td>\n                                <td className=\"text-right\">\n                                  {data.planned_duration}\n                                </td>\n                                <td className=\"text-right\">\n                                  {data.actual_duration}\n                                </td>\n                              </tr>\n                              <tr>\n                                <td>FTE</td>\n                                <td className=\"text-right\">\n                                  {data.preliminary_fte == null\n                                    ? \"-\"\n                                    : Math.round(projectData[0]?.fte)}\n                                </td>\n                                <td className=\"text-right\">\n                                  {data.contracted_fte}\n                                </td>\n                                <td className=\"text-right\">\n                                  {data.planned_fte}\n                                </td>\n                                <td className=\"text-right\">\n                                  {data.employee_offshore == null\n                                    ? 0\n                                    : data.employee_offshore}\n                                </td>\n                              </tr>\n                              <tr>\n                                <td>Efforts(Hrs)</td>\n                                <td className=\"text-right\">\n                                  {efforts[0]?.value == null\n                                    ? 0\n                                    : efforts[0]?.value?.toLocaleString(\n                                        \"en-IN\"\n                                      )}\n                                </td>\n                                <td className=\"text-right\">\n                                  {efforts[0]?.value == null\n                                    ? 0\n                                    : efforts[1]?.value?.toLocaleString(\n                                        \"en-IN\"\n                                      )}\n                                </td>\n                                <td className=\"text-right\">\n                                  {data.planned_hours == null\n                                    ? 0\n                                    : data.planned_hours?.toLocaleString(\n                                        \"en-IN\"\n                                      )}\n                                </td>\n                                <td className=\"text-right\">\n                                  {data.actual_hours == null\n                                    ? 0\n                                    : data.actual_hours?.toLocaleString(\n                                        \"en-IN\"\n                                      )}\n                                </td>\n                              </tr>\n                              <tr>\n                                <td>Revenue</td>\n                                <td className=\"text-right\">\n                                  {revenue[0]?.value == null\n                                    ? container.textContent + \" \" + 0\n                                    : container.textContent +\n                                      \" \" +\n                                      revenue[0]?.value?.toLocaleString(\n                                        \"en-IN\"\n                                      )}\n                                </td>\n                                <td className=\"text-right\">\n                                  {revenue[1]?.value == null\n                                    ? container.textContent + \" \" + 0\n                                    : container.textContent +\n                                      \" \" +\n                                      revenue[1]?.value?.toLocaleString(\n                                        \"en-IN\"\n                                      )}\n                                </td>\n                                <td className=\"text-right\">\n                                  {data.planned_revenue == null\n                                    ? container.textContent + \" \" + 0\n                                    : container.textContent +\n                                      \" \" +\n                                      data.planned_revenue?.toLocaleString(\n                                        \"en-IN\"\n                                      )}\n                                </td>\n                                <td className=\"text-right\">\n                                  {data.actual_revenue == null\n                                    ? container.textContent + \" \" + 0\n                                    : container.textContent +\n                                      \" \" +\n                                      data.actual_revenue?.toLocaleString(\n                                        \"en-IN\"\n                                      )}\n                                </td>\n                              </tr>\n\n                              <tr>\n                                <td>Resource Direct Cost</td>\n                                <td className=\"text-right\">\n                                  {directCost[0]?.value == null\n                                    ? container.textContent + \" \" + 0\n                                    : container.textContent +\n                                      \" \" +\n                                      directCost[0]?.value?.toLocaleString(\n                                        \"en-IN\"\n                                      )}\n                                </td>\n                                <td className=\"text-right\">\n                                  {directCost[1]?.value == null\n                                    ? container.textContent + \" \" + 0\n                                    : container.textContent +\n                                      \" \" +\n                                      directCost[1]?.value?.toLocaleString(\n                                        \"en-IN\"\n                                      )}\n                                </td>\n                                <td className=\"text-right\">\n                                  {data.planned_direct_cost == null\n                                    ? container.textContent + \" \" + 0\n                                    : container.textContent +\n                                      \" \" +\n                                      data.planned_direct_cost?.toLocaleString(\n                                        \"en-IN\"\n                                      )}\n                                </td>\n                                <td className=\"text-right\">\n                                  {data.actual_direct_cost == null\n                                    ? container.textContent + \" \" + 0\n                                    : container.textContent +\n                                      \" \" +\n                                      data.actual_direct_cost?.toLocaleString(\n                                        \"en-IN\"\n                                      )}\n                                </td>\n                              </tr>\n                              <tr>\n                                <td>Other Cost</td>\n                                <td className=\"text-right\">\n                                  {otherCost[0]?.value == null\n                                    ? container.textContent + \" \" + 0\n                                    : container.textContent +\n                                      \" \" +\n                                      otherCost[0]?.value?.toLocaleString(\n                                        \"en-IN\"\n                                      )}\n                                </td>\n                                <td className=\"text-right\">\n                                  {otherCost[1]?.value == null\n                                    ? container.textContent + \" \" + 0\n                                    : container.textContent +\n                                      \" \" +\n                                      otherCost[1]?.value?.toLocaleString(\n                                        \"en-IN\"\n                                      )}\n                                </td>\n                                <td className=\"text-right\">\n                                  {data.planned_other_cost == null\n                                    ? container.textContent + \" \" + 0\n                                    : container.textContent +\n                                      \" \" +\n                                      data.planned_other_cost?.toLocaleString(\n                                        \"en-IN\"\n                                      )}\n                                </td>\n                                <td className=\"text-right\">\n                                  {data.actual_other_cost == null\n                                    ? container.textContent + \" \" + 0\n                                    : container.textContent +\n                                      \" \" +\n                                      data.actual_other_cost?.toLocaleString(\n                                        \"en-IN\"\n                                      )}\n                                </td>\n                              </tr>\n\n                              <tr>\n                                <td>Gross Margin</td>\n                                <td className=\"text-right\">\n                                  {revenue[0]?.value == null ||\n                                  directCost[0]?.value == null\n                                    ? container.textContent + \" \" + 0\n                                    : container.textContent +\n                                      \" \" +\n                                      (\n                                        revenue[0]?.value -\n                                        (directCost[0]?.value +\n                                          otherCost[0]?.value)\n                                      )?.toLocaleString(\"en-IN\")}\n                                </td>\n                                <td className=\"text-right\">\n                                  {revenue[1]?.value == null\n                                    ? container.textContent + \" \" + 0\n                                    : container.textContent +\n                                      \" \" +\n                                      (\n                                        revenue[1]?.value -\n                                        (directCost[1]?.value +\n                                          otherCost[1]?.value)\n                                      )?.toLocaleString(\"en-IN\")}\n                                </td>\n                                <td className=\"text-right\">\n                                  {data.planned_revenue == null\n                                    ? container.textContent + \" \" + 0\n                                    : container.textContent +\n                                      \" \" +\n                                      (\n                                        data.planned_revenue -\n                                        (data.planned_direct_cost +\n                                          data.planned_other_cost)\n                                      )?.toLocaleString(\"en-IN\")}\n                                </td>\n                                <td className=\"text-right\">\n                                  {data.actual_revenue == null\n                                    ? container.textContent + \" \" + 0\n                                    : container.textContent +\n                                      \" \" +\n                                      (\n                                        data.actual_revenue -\n                                        (data.actual_direct_cost +\n                                          data.actual_other_cost)\n                                      )?.toLocaleString(\"en-IN\")}\n                                </td>\n                              </tr>\n                              <tr>\n                                <td>GM%</td>\n                                <td className=\"text-right\">\n                                  {revenue[0]?.value == null ||\n                                  directCost[0]?.value == 0 ||\n                                  directCost[0]?.value == null\n                                    ? 0.0\n                                    : (\n                                        Math.round(\n                                          (((revenue[0]?.value -\n                                            (directCost[0]?.value +\n                                              otherCost[0]?.value)) *\n                                            100) /\n                                            revenue[0]?.value) *\n                                            100\n                                        ) / 100\n                                      )?.toLocaleString(\"en-IN\")}\n                                </td>\n                                <td className=\"text-right\">\n                                  {revenue[1]?.value == null ||\n                                  directCost[1]?.value == 0 ||\n                                  directCost[1]?.value == null\n                                    ? 0\n                                    : (\n                                        Math.round(\n                                          (((revenue[1]?.value -\n                                            (directCost[1]?.value +\n                                              otherCost[1]?.value)) *\n                                            100) /\n                                            revenue[1]?.value) *\n                                            100\n                                        ) / 100\n                                      )?.toLocaleString(\"en-IN\")}\n                                </td>\n                                <td className=\"text-right\">\n                                  {data.planned_revenue == null ||\n                                    (\n                                      Math.round(\n                                        (((data.planned_revenue -\n                                          (data.planned_direct_cost +\n                                            data.planned_other_cost)) *\n                                          100) /\n                                          data.planned_revenue) *\n                                          100\n                                      ) / 100\n                                    )?.toLocaleString(\"en-IN\")}\n                                </td>\n                                <td className=\"text-right\">\n                                  {data.actual_revenue == null\n                                    ? \"NA\"\n                                    : (\n                                        Math.round(\n                                          (((data.actual_revenue -\n                                            (data.actual_direct_cost +\n                                              data.actual_other_cost)) *\n                                            100) /\n                                            data.actual_revenue) *\n                                            100\n                                        ) / 100\n                                      )?.toLocaleString(\"en-IN\")}\n                                </td>\n                              </tr>\n                            </>\n                          ))}\n                        </tbody>\n                      </table>\n                    </div>\n                  </div>\n                </div>\n\n                {list.projCat == 17 ||\n                list.projCat == 18 ||\n                list.projCat == 19 ? (\n                  <div className=\" col-md-5 mt-5 pt-2\">\n                    <div className=\"customCard p-0\">\n                      <table\n                        className=\"table table-bordered table-striped\"\n                        role=\"grid\"\n                      >\n                        <tbody>\n                          <tr>\n                            {/* <div className='col-md-12 ' > */}\n\n                            <th style={{ color: \"#187fde\" }}>\n                              <RiProfileLine />\n                              <span className=\"ml-1\">\n                                Risk Factor Characteristics\n                              </span>\n                            </th>\n\n                            {/* </div> */}\n                          </tr>\n                          {/* </thead> */}\n                          {/* <tbody> */}\n                          <tr>\n                            <td className=\"p-0\">\n                              {riskFactor.map((list) => (\n                                <div className=\"group mb-1 container-fluid\">\n                                  <div className=\"group-content row \">\n                                    <div className=\" col-md-12 mb-2\">\n                                      <div className=\"form-group row\">\n                                        <label\n                                          className=\"col-7\"\n                                          htmlFor=\"name-input-inline\"\n                                        >\n                                          Technical Complexity\n                                        </label>\n                                        <span className=\"col-1 p-0\">:</span>\n                                        <div className=\"col-4\">\n                                          <lable>{list.techComplexity}</lable>\n                                        </div>\n                                      </div>\n                                    </div>\n                                    <div className=\" col-md-12 mb-2\">\n                                      <div className=\"form-group row\">\n                                        <label\n                                          className=\"col-7\"\n                                          htmlFor=\"name-input-inline\"\n                                        >\n                                          Domain Specific Challenges\n                                        </label>\n                                        <span className=\"col-1 p-0\">:</span>\n                                        <div className=\"col-4\">\n                                          <p>{list.domSpecChallenge}</p>\n                                        </div>\n                                      </div>\n                                    </div>\n                                    <div className=\" col-md-12 mb-2\">\n                                      <div className=\"form-group row\">\n                                        <label\n                                          className=\"col-7\"\n                                          htmlFor=\"name-input-inline\"\n                                        >\n                                          Skilled Resources Availability\n                                        </label>\n                                        <span className=\"col-1 p-0\">:</span>\n                                        <div className=\"col-4\">\n                                          <p>{list.skillResAvail}</p>\n                                        </div>\n                                      </div>\n                                    </div>\n                                    <div className=\" col-md-12 mb-2\">\n                                      <div className=\"form-group row\">\n                                        <label\n                                          className=\"col-7\"\n                                          htmlFor=\"name-input-inline\"\n                                        >\n                                          Dependencies on Third Party Systems\n                                        </label>\n                                        <span className=\"col-1 p-0\">:</span>\n                                        <div className=\"col-4\">\n                                          <p>{list.depThirdPartySys}</p>\n                                        </div>\n                                      </div>\n                                    </div>\n                                    <div className=\" col-md-12 mb-2\">\n                                      <div className=\"form-group row\">\n                                        <label\n                                          className=\"col-7\"\n                                          htmlFor=\"name-input-inline\"\n                                        >\n                                          Development Environment Availability\n                                        </label>\n                                        <span className=\"col-1 p-0\">:</span>\n                                        <div className=\"col-4\">\n                                          <p>{list.devEnvAvail}</p>\n                                        </div>\n                                      </div>\n                                    </div>\n                                    <div className=\" col-md-12 mb-2\">\n                                      <div className=\"form-group row\">\n                                        <label\n                                          className=\"col-7\"\n                                          htmlFor=\"name-input-inline\"\n                                        >\n                                          Dependencies on customer/Customer\n                                          Environment\n                                        </label>\n                                        <span className=\"col-1 p-0\">:</span>\n                                        <div className=\"col-4\">\n                                          <p>{list.custEnv}</p>\n                                        </div>\n                                      </div>\n                                    </div>\n                                    <div className=\" col-md-12 mb-2\">\n                                      <div className=\"form-group row\">\n                                        <label\n                                          className=\"col-7\"\n                                          htmlFor=\"name-input-inline\"\n                                        >\n                                          Margin/Profitability\n                                        </label>\n                                        <span className=\"col-1 p-0\">:</span>\n                                        <div className=\"col-4\">\n                                          <p>{list.profitability}</p>\n                                        </div>\n                                      </div>\n                                    </div>\n                                  </div>\n                                </div>\n                              ))}\n                            </td>\n                          </tr>\n                        </tbody>\n                      </table>\n                    </div>\n                  </div>\n                ) : (\n                  \"\"\n                )}\n              </>\n            ))}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\nexport default ProjectOverview;\n","import React, { useState } from \"react\";\nimport { CCollapse } from \"@coreui/react\";\nimport { SlExclamation } from \"react-icons/sl\";\nimport { VscSave } from \"react-icons/vsc\";\nimport { FaCheck } from \"react-icons/fa\";\n\nimport {\n  FaChevronCircleDown,\n  FaChevronCircleUp,\n  FaSearch,\n} from \"react-icons/fa\";\n\nfunction ProjectQCR({ grp6Items }) {\n  const dataObject = grp6Items.find((item) => item.display_name === \"QCR\");\n  const [visible, setVisible] = useState(false);\n  const [cheveronIcon, setCheveronIcon] = useState(FaChevronCircleUp);\n  return (\n    <div>\n      <div className=\"pageTitle \">\n        <div className=\"childOne\">\n          <h2>IA Support(IA Support)</h2>\n        </div>\n        <div className=\"childTwo\">\n          <h2>Documents</h2>\n        </div>\n        <div className=\"childThree\"></div>\n      </div>\n\n      <div className=\"col-md-12 customCard\">\n        <div className=\"col-md-12 collapseHeader\">\n          <h2>Search Filters</h2>\n          <div\n            onClick={() => {\n              setVisible(!visible);\n              visible\n                ? setCheveronIcon(FaChevronCircleUp)\n                : setCheveronIcon(FaChevronCircleDown);\n            }}\n          >\n            <span>{cheveronIcon}</span>\n          </div>\n        </div>\n        <CCollapse visible={!visible}>\n          <div className=\"group-content row\">\n            <div className=\" col-md-4\">\n              <div className=\"form-group row\">\n                <label className=\"col-5\" htmlFor=\"Document\">\n                  Document Name\n                </label>\n                <span className=\"col-1 p-0\">:</span>\n                <div className=\"col-6\">\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    id=\"Document\"\n                    placeholder\n                  />\n                </div>\n              </div>\n            </div>\n            <div className=\" col-md-3 \">\n              <div className=\"form-group row\">\n                <div className=\"col-4\">\n                  <button\n                    type=\"button\"\n                    className=\"btn btn-primary\"\n                    onClick={() => handleClick()}\n                  >\n                    <FaSearch /> Search{\" \"}\n                  </button>\n                </div>\n              </div>\n            </div>\n            <div className=\" col-md-5 \">\n              <div className=\"form-group row\"></div>\n            </div>\n          </div>\n        </CCollapse>\n        <div>\n          <label className=\" Warning1 col-md-12\">\n            <SlExclamation /> Audit Details can be updated between 5 to 30 dates\n            of every month.\n          </label>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-md-9\"></div>\n          <div className=\"col-3\">\n            {dataObject?.is_write === true ? (\n              <div className=\"   col-md-12 col-sm-12 col-xs-12 btn-container center my-3 mb-2\">\n                <button className=\"btn btn-primary\" type=\"submit\">\n                  <VscSave /> Save\n                </button>\n                <button className=\"btn btn-primary\">\n                  <FaCheck /> Submit\n                </button>\n              </div>\n            ) : (\n              \"\"\n            )}\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\" col-md-2 mb-0\"></div>\n          <div className=\" col-md-4 mb-0\">\n            <div className=\"  row\">\n              <label className=\"col-5\" htmlFor=\"dateOfReview\">\n                Date of Review *\n              </label>\n              <span className=\"col-1\">:</span>\n              <div className=\"col-6\">\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  id=\"dateOfReview\"\n                  required\n                />\n              </div>\n            </div>\n          </div>\n          <div className=\" col-md-4 mb-0\">\n            <div className=\"  row\">\n              <label className=\"col-5\" htmlFor=\"projectManager \">\n                Project Manager *\n              </label>\n              <span className=\"col-1\">:</span>\n              <div className=\"col-6\">\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  id=\"projectManager\"\n                  required\n                />\n              </div>\n            </div>\n          </div>\n          <div className=\" col-md-2 mb-0\"></div>\n\n          <div className=\" col-md-2 mb-2\"></div>\n          <div className=\" col-md-4 mb-2\">\n            <div className=\"  row\">\n              <label className=\"col-5\" htmlFor=\"reviewDoneBy\">\n                Review Done By *\n              </label>\n              <span className=\"col-1\">:</span>\n              <div className=\"col-6\">\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  id=\"reviewDoneBy\"\n                  required\n                />\n              </div>\n            </div>\n          </div>\n          <div className=\" col-md-4 mb-2\">\n            <div className=\"  row\">\n              <label className=\"col-5\" htmlFor=\"effortSpent\">\n                Effort spent for Review (person hours) *\n              </label>\n              <span className=\"col-1\">:</span>\n              <div className=\"col-6\">\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  id=\"effortSpent \"\n                  required\n                />\n              </div>\n            </div>\n          </div>\n          <div className=\" col-md-2 mb-0\"></div>\n\n          <div className=\" col-md-2 mb-0\"></div>\n          <div className=\" col-md-4 mb-0\"></div>\n          <div className=\" col-md-2 mb-0\"></div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default ProjectQCR;\n","import { ColumnGroup } from \"primereact/columngroup\";\nimport { Column } from \"primereact/column\";\nimport { DataTable } from \"primereact/datatable\";\nimport { Row } from \"primereact/row\";\nimport { MdOutlineAdd } from \"react-icons/md\";\nimport { ImCross } from \"react-icons/im\";\nimport { TfiSave } from \"react-icons/tfi\";\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { environment } from \"../../environments/environment\";\nimport { AiFillEdit } from \"react-icons/ai\";\n\nexport default function CompetencyTable(props) {\n  const { flag, tableData } = props;\n  const baseUrl = environment.baseUrl;\n\n  let headerGroup = (\n    <ColumnGroup>\n      <Row>\n        <Column sortable header=\"Competency\" alignHeader={\"center\"} />\n        <Column sortable header=\"Exp Rating\" alignHeader={\"center\"} />\n        <Column sortable header=\"Act Rating\" alignHeader={\"center\"} />\n        <Column sortable header=\"Make a Plan\" alignHeader={\"center\"} />\n      </Row>\n    </ColumnGroup>\n  );\n  const handlecompetency = (data) => {\n    return (\n      <div data-toggle=\"tooltip\" title={data.Competency}>\n        {data.Competency}\n      </div>\n    );\n  };\n  const handleExpRating = (data) => {\n    return (\n      <div data-toggle=\"tooltip\" title={data.ExpRating}>\n        {data.ExpRating}\n      </div>\n    );\n  };\n  const handleActRating = (data) => {\n    return (\n      <div data-toggle=\"tooltip\" title={data.ActRating}>\n        {data.ActRating}\n      </div>\n    );\n  };\n  const handleMakeaplan = (data) => {\n    return (\n      <div data-toggle=\"tooltip\" title={data.Makeaplan}>\n        {data.Makeaplan}\n      </div>\n    );\n  };\n  return (\n    <div className=\" darkHeader\">\n      <DataTable ////customerEngament\n        value={tableData}\n        showGridlines\n        headerColumnGroup={headerGroup}\n        pagination\n        paginator\n        rows={15}\n        paginationPerPage={5}\n        paginationRowsPerPageOptions={[5, 15, 25, 50]}\n        paginationComponentOptions={{\n          rowsPerPageText: \"Records per page:\",\n          rangeSeparatorText: \"out of\",\n        }}\n      >\n        <Column\n          field=\"Competency\"\n          header=\"Competency\"\n          body={handlecompetency}\n        />\n        <Column field=\"ExpRating\" header=\"ExpRating\" body={handleExpRating} />\n        <Column field=\"ActRating\" header=\"ActRating\" body={handleActRating} />\n        <Column field=\"Makeaplan\" header=\"Makeaplan\" body={handleMakeaplan} />\n      </DataTable>\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport axios from \"axios\";\nimport { environment } from \"../../environments/environment\";\nimport ProjectHierarchyTree from \"./ProjectHierarchyTree\";\nimport DatePicker from \"react-datepicker\";\nimport CompetencyTable from \"./ProjectHierarchySideTable\";\nimport ScreenBreadcrumbs from \"../Common/ScreenBreadcrumbs\";\nfunction ProjectHierarchy(props) {\n  const { projectId, grp1Items } = props;\n  const dataObject = grp1Items.find(\n    (item) => item.display_name === \"Hierarchy\"\n  );\n  const [projectName, setProjectName] = useState([]);\n  const baseUrl = environment.baseUrl;\n  const [searching, setSearching] = useState(false);\n  const [hierarchydata, setHierarchyData] = useState([]);\n\n  const [hierarchyCount, setHierarchyCount] = useState(0);\n\n  const [state, setState] = useState(\"All\");\n  const [searchinghierarchy, setSearchingHierarchy] = useState(false);\n  const [date, SetDate] = useState(new Date());\n  const [flag, setFlag] = useState(false);\n  const [tableData, setTableData] = useState([]);\n  console.log(state);\n  console.log(\"flag\", flag);\n\n  const [intialvalues, setInitialvalues] = useState({\n    typ: \"roles\",\n    prjId: projectId,\n    dat: \"0000-00-00\",\n    state: state,\n  });\n  const [formData, setFormData] = useState(intialvalues);\n  const loggedUserId = localStorage.getItem(\"resId\");\n\n  const [routes, setRoutes] = useState([]);\n  let currentScreenName = [\"Projects\", \"Open\", \"Project\", \"Project Hierarchy\"];\n  let textContent = \"Delivery\";\n\n  const getMenus = () => {\n    // setMenusData\n\n    axios({\n      method: \"GET\",\n      url: baseUrl + `/CommonMS/master/getMenus?loggedUserId=${loggedUserId}`,\n    }).then((resp) => {\n      let data = resp.data;\n\n      data.forEach((item) => {\n        if (item.display_name === textContent) {\n          setRoutes([item]);\n        }\n      });\n    });\n  };\n\n  useEffect(() => {\n    getMenus();\n  }, []);\n  const Display = () => {\n    setSearching(true);\n  };\n\n  useEffect(() => {\n    getResourcehierarchy();\n    getProjectName();\n  }, [state]);\n  const getResourcehierarchy = () => {\n    axios({\n      method: \"get\",\n      url:\n        baseUrl +\n        `/ProjectMS/project/getProjectHierarchy?typ=${formData.typ}&prjId=${formData.prjId}&dat=${formData.dat}&state=${state}`,\n    }).then(function (response) {\n      let dd = response.data;\n      for (const project of dd) {\n        if (project.id === \"-1\" && project.parent === \"#\") {\n          const cleanedText = project.text.replace(/<\\/?[^>]+(>|$)/g, \"\");\n\n          project.text = cleanedText;\n        }\n      }\n      setHierarchyData(dd);\n      setHierarchyCount((prev) => prev + 1);\n      setSearchingHierarchy(true);\n    });\n  };\n  const getProjectName = () => {\n    axios({\n      method: \"get\",\n      url:\n        baseUrl +\n        `/ProjectMS/Audit/getProjectHierarchyName?projectId=${projectId}`,\n    })\n      .then(function (response) {\n        let resp = response.data;\n        setProjectName(resp);\n      })\n      .catch(function (response) {});\n  };\n\n  console.log(\"-------\" + projectName);\n\n  return (\n    <>\n      <div className=\"pageTitle\">\n        <div className=\"childOne\">\n          <h2>{projectName.projectName}</h2>\n        </div>\n        <div className=\"childTwo\">\n          <h2>Project Hierarchy</h2>\n        </div>\n        <div className=\"childThree\"></div>\n      </div>\n      <ScreenBreadcrumbs\n        routes={routes}\n        currentScreenName={currentScreenName}\n      />\n\n      <div\n        className=\"col-md-12 mt-2 p-1 customCard card \"\n        style={{ backgroundColor: \"#f4f4f4\" }}\n      >\n        <span\n          style={{\n            alignSelf: \"flex-end\",\n            display: \"flex\",\n            justifyContent: \"space-between\",\n            alignItems: \"center\",\n            whiteSpace: \"nowrap\",\n          }}\n        >\n          <label className=\"mr-1\" style={{ fontWeight: \"bold\" }}>\n            {\" \"}\n            Date :\n          </label>\n          <DatePicker\n            className=\"hierCalender\"\n            dropdownMode=\"select\"\n            disabledKeyboardNavigation\n            showMonthDropdown\n            showYearDropdown\n            selected={date}\n            dateFormat=\"dd-MMM-yyyy\"\n            onChange={(date) => SetDate(date)}\n            style={{ width: \"70px\" }}\n          />\n        </span>\n      </div>\n      <div className=\"col-md-12 group-content mr-0 ml-1 row\">\n        <div\n          className=\"col-md-6 group mb-3 \"\n          style={{ backgroundColor: \"#eeeeee38\" }}\n        >\n          <div\n            className=\"col-md-12\"\n            style={{\n              borderBottom: \"1px solid grey\",\n              background: \"#f1eeee\",\n              height: \"36px\",\n            }}\n          >\n            <label style={{ float: \"right\", paddingTop: \"7px\" }}>\n              Edit\n              <select\n                style={{ marginLeft: \"10px\" }}\n                id=\"status\"\n                onChange={(e) => {\n                  console.log(e.target.value);\n                  setState(e.target.value);\n                  getResourcehierarchy();\n                }}\n              >\n                <option value=\"All\">All</option>\n                <option value=\"Active\">Active</option>\n              </select>\n            </label>\n            <div className=\"childTwo\">\n              <h2\n                style={{\n                  textAlign: \"center\",\n                  color: \"#297AB0\",\n                  fontSize: \"14px\",\n                  paddingTop: \"7px\",\n                }}\n              >\n                Project Hierarchy\n              </h2>\n            </div>\n          </div>\n\n          {searchinghierarchy == true ? (\n            <ProjectHierarchyTree\n              defaultExpandedRows={String(-1)}\n              data={hierarchydata}\n              setFlag={setFlag}\n              flag={flag}\n              setTableData={setTableData}\n              projectName={projectName}\n              hierarchyCount={hierarchyCount}\n            />\n          ) : (\n            \"\"\n          )}\n        </div>\n        {console.log(hierarchydata)}\n        <div\n          className=\"col-md-6 group mb-3 customCard card\"\n          // style={{ backgroundColor: \"#f4f4f4\", minHeight: \"70vh\" }}\n        >\n          <div className=\"childTwo\">\n            <h2\n              style={{\n                textAlign: \"center\",\n                backgroundColor: \"#f4f4f4\",\n                // color: \"#297AB0\",\n              }}\n            >\n              Competencies\n            </h2>\n          </div>\n          {flag ? <CompetencyTable tableData={tableData} /> : null}\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default ProjectHierarchy;\n","import React from \"react\";\nimport ProjectIssues from \"./ProjectIssues\";\nimport ProjectDefects from \"./ProjectDefects\";\nimport { useState, useEffect } from \"react\";\nimport ProjectRisks from \"./ProjectRisks\";\nimport ProjectAccomplishments from \"./ProjectAccomplishments\";\nimport ProjectStake from \"./ProjectStake\";\nimport ProjectStatus from \"./ProjectStatus\";\nimport { AiFillWarning } from \"react-icons/ai\";\nimport ProjectAuditLog from \"./ProjectAuditLog\";\nimport ProjectScopeChanges from \"./ProjectScopeChanges\";\nimport ProjectBaselines from \"./ProjectBaselines\";\nimport ProjectReviewLog from \"./ProjectReviewLog\";\nimport Documents from \"./Documents\";\nimport ProjectExpenses from \"../ProjectComponent/ProjectExpenses\";\nimport ResourceApprovals from \"./ResourceApprovals\";\nimport ContractDocument from \"./ContractDocument\";\nimport ProjectEvents from \"./ProjectEvents\";\nimport ProjectMilestones from \"./ProjectMilestones\";\nimport ProjectDependencies from \"./ProjectDependencies\";\nimport ProjectEdit from \"./ProjectEdit\";\nimport ProjectCompliance from \"./ProjectCompliance\";\nimport TaskPlan from \"./TaskPlan\";\nimport CapacityPlan from \"./CapacityPlan\";\nimport axios from \"axios\";\nimport { environment } from \"../../environments/environment\";\nimport ProjectOverview from \"./ProjectOverview\";\nimport ProjectQCR from \"./ProjectQCR\";\nimport ProjectHierarchy from \"./ProjectHierarchy\";\nimport StakeHolderProject from \"./StakeHolderProject\";\nimport { useLocation } from \"react-router-dom\";\n\nfunction Project(props) {\n  const state = useLocation();\n  const url = window.location.href;\n  const projectArr = url.split(\":\");\n  const baseUrl = environment.baseUrl;\n  const [btnState, setbtnState] = useState(\"Defects\");\n  // const [btnState, setbtnState] = useState(() => {\n  //   // Retrieve the last selected tab from localStorage on component mount\n  //   return localStorage.getItem(\"selectedProjectViewTab\")?.split(\"+\")[1] ===\n  //     projectArr[projectArr.length - 1]\n  //     ? localStorage.getItem(\"selectedProjectViewTab\").split(\"+\")[0]\n  //     : \"Project Overview\" ?? \"Project Overview\";\n  // });\n  const [projectId, setProjectId] = useState(0);\n  const loggedUserId = localStorage.getItem(\"resId\");\n  const [mainMenu, setMainMenu] = useState([]);\n  const [grp1Items, setGrp1Items] = useState([]);\n  const [grp2Items, setGrp2Items] = useState([]);\n  const [grp3Items, setGrp3Items] = useState([]);\n  const [grp4Items, setGrp4Items] = useState([]);\n  const [grp6Items, setGrp6Items] = useState([]);\n\n  // useEffect(() => {\n  //   // Save the selected tab to localStorage whenever it changes\n  //   localStorage.setItem(\n  //     \"selectedProjectViewTab\",\n  //     btnState + \"+\" + projectArr[projectArr.length - 1]\n  //   );\n  // }, [btnState]);\n\n  // useEffect(() => {\n  //   // Save the selected tab to localStorage whenever it changes\n  //   // localStorage.setItem(\"selectedProjectViewTab\", \"Project Overview\");\n  //   console.log(projectArr[projectArr.length - 1])\n  // }, [projectArr[projectArr.length - 1]]);\n\n  const tabMenus = () => {\n    const url = window.location.href;\n    const projectArr = url.split(\":\");\n    const projectsId = projectArr[projectArr.length - 1];\n    axios\n      .get(\n        baseUrl +\n          `/CommonMS/master/getTabMenus?ProjectId=${projectsId}&loggedUserId=${loggedUserId}&type=Project&subType=project`\n      )\n      .then((resp) => {\n        const data = resp.data;\n        setMainMenu(data);\n        setGrp1Items(data.filter((item) => item.grp === 1));\n        setGrp2Items(data.filter((item) => item.grp === 2));\n        setGrp3Items(data.filter((item) => item.grp === 3));\n        setGrp4Items(data.filter((item) => item.grp === 4));\n        setGrp6Items(data.filter((item) => item.grp === 6));\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n  \n  useEffect(() => {\n    let stat = state?.state;\n    tabMenus();\n    const url = window.location.href;\n    if (url.includes(\"Overview\")) {\n      setbtnState(\"Project Overview\");\n    }\n    if (url.includes(\"taskPlan\")) {\n      setbtnState(\"Task Plan\");\n    }\n    if (url.includes(\"capacityPlan\")) {\n      setbtnState(\"Capacity Plan\");\n    }\n    let projectArr = url.split(\":\");\n    setProjectId(projectArr[projectArr.length - 1]);\n    stat?.btnState != undefined && setbtnState(stat?.btnState);\n  }, []);\n\n  return (\n    <div>\n      {mainMenu.length > 0 ? (\n        <div>\n          <ul className=\"tabsContainer\">\n            <li>\n              {grp1Items[0]?.display_name != undefined ? (\n                <span>{grp1Items[0]?.display_name}</span>\n              ) : (\n                \"\"\n              )}\n              <ul>\n                {grp1Items.slice(1).map((button) => (\n                  <li\n                    className={\n                      btnState === button.display_name\n                        ? \"buttonDisplayClick\"\n                        : \"buttonDisplay\"\n                    }\n                    onClick={() => {\n                      setbtnState(button.display_name);\n                    }}\n                  >\n                    {button.display_name}\n                  </li>\n                ))}\n              </ul>\n            </li>{\" \"}\n            <li>\n              {grp2Items[0]?.display_name != undefined ? (\n                <span>{grp2Items[0]?.display_name}</span>\n              ) : (\n                \"\"\n              )}\n              <ul>\n                {grp2Items.slice(1).map((button) => (\n                  <li\n                    className={\n                      btnState === button.display_name\n                        ? \"buttonDisplayClick\"\n                        : \"buttonDisplay\"\n                    }\n                    onClick={() => {\n                      setbtnState(button.display_name);\n                    }}\n                  >\n                    {button.display_name}\n                  </li>\n                ))}\n              </ul>\n            </li>{\" \"}\n            <li>\n              {grp3Items[0]?.display_name != undefined ? (\n                <span>{grp3Items[0]?.display_name}</span>\n              ) : (\n                \"\"\n              )}\n              <ul>\n                {grp3Items.slice(1).map((button) => (\n                  <li\n                    className={\n                      btnState === button.display_name\n                        ? \"buttonDisplayClick\"\n                        : \"buttonDisplay\"\n                    }\n                    onClick={() => {\n                      setbtnState(button.display_name);\n                    }}\n                  >\n                    {button.display_name}\n                  </li>\n                ))}\n              </ul>\n            </li>{\" \"}\n            <li>\n              {grp4Items[0]?.display_name != undefined ? (\n                <span>{grp4Items[0]?.display_name}</span>\n              ) : (\n                \"\"\n              )}\n              <ul>\n                {grp4Items.slice(1).map((button) => (\n                  <li\n                    className={\n                      btnState === button.display_name\n                        ? \"buttonDisplayClick\"\n                        : \"buttonDisplay\"\n                    }\n                    onClick={() => {\n                      setbtnState(button.display_name);\n                    }}\n                  >\n                    {button.display_name}\n                  </li>\n                ))}\n              </ul>\n            </li>{\" \"}\n            <li>\n              {grp6Items[0]?.display_name != undefined ? (\n                <span>{grp6Items[0]?.display_name}</span>\n              ) : (\n                \"\"\n              )}\n              <ul>\n                {grp6Items.slice(1).map((button) => (\n                  <li\n                    className={\n                      btnState === button.display_name\n                        ? \"buttonDisplayClick\"\n                        : \"buttonDisplay\"\n                    }\n                    onClick={() => {\n                      setbtnState(button.display_name);\n                    }}\n                  >\n                    {button.display_name}\n                  </li>\n                ))}\n              </ul>\n            </li>\n          </ul>\n\n          {btnState === \"Risks\" ? (\n            <ProjectRisks\n              projectId={projectId}\n              grp4Items={mainMenu.filter((item) => item.grp === 4)}\n            />\n          ) : (\n            \"\"\n          )}\n          {btnState === \"Issues\" ? (\n            <ProjectIssues\n              projectId={projectId}\n              grp4Items={mainMenu.filter((item) => item.grp === 4)}\n            />\n          ) : (\n            \"\"\n          )}\n          {btnState === \"Defects\" ? (\n            <ProjectDefects\n              projectId={projectId}\n              grp4Items={mainMenu.filter((item) => item.grp === 4)}\n            />\n          ) : (\n            \"\"\n          )}\n          {btnState === \"Accomplishments\" ? (\n            <ProjectAccomplishments\n              projectId={projectId}\n              grp4Items={mainMenu.filter((item) => item.grp === 4)}\n            />\n          ) : (\n            \"\"\n          )}\n          {btnState === \"Stakeholders\" ? (\n            <ProjectStake\n              projectId={projectId}\n              grp1Items={mainMenu.filter((item) => item.grp === 1)}\n            />\n          ) : (\n            \"\"\n          )}\n          {btnState === \"Status\" ? (\n            <ProjectStatus\n              projectId={projectId}\n              grp4Items={mainMenu.filter((item) => item.grp === 4)}\n            />\n          ) : (\n            \"\"\n          )}\n          {btnState === \"Audit Log\" ? (\n            <ProjectAuditLog\n              projectId={projectId}\n              grp4Items={mainMenu.filter((item) => item.grp === 4)}\n            />\n          ) : (\n            \"\"\n          )}\n          {btnState === \"Review log\" ? (\n            <ProjectReviewLog\n              projectId={projectId}\n              grp4Items={mainMenu.filter((item) => item.grp === 4)}\n            />\n          ) : (\n            \"\"\n          )}\n          {btnState === \"Scope Changes\" ? (\n            <ProjectScopeChanges\n              projectId={projectId}\n              grp4Items={mainMenu.filter((item) => item.grp === 4)}\n            />\n          ) : (\n            \"\"\n          )}\n          {btnState === \"Baselines\" ? (\n            <ProjectBaselines\n              projectId={projectId}\n              grp4Items={mainMenu.filter((item) => item.grp === 4)}\n            />\n          ) : (\n            \"\"\n          )}\n          {btnState === \"Documents\" ? (\n            <Documents\n              projectId={projectId}\n              grp1Items={mainMenu.filter((item) => item.grp === 1)}\n            />\n          ) : (\n            \"\"\n          )}\n          {btnState === \"Project Overview\" ? (\n            <ProjectOverview\n              projectId={projectId}\n              grp1Items={mainMenu.filter((item) => item.grp === 1)}\n            />\n          ) : (\n            \"\"\n          )}\n          {btnState === \"Expenses\" ? (\n            <ProjectExpenses\n              projectId={projectId}\n              grp3Items={mainMenu.filter((item) => item.grp === 3)}\n            />\n          ) : (\n            \"\"\n          )}\n          {btnState === \"Resource Approvals\" ? (\n            <ResourceApprovals\n              projectId={projectId}\n              grp2Items={mainMenu.filter((item) => item.grp === 2)}\n            />\n          ) : (\n            \"\"\n          )}\n          {btnState === \"Contract Documents\" ? (\n            <ContractDocument\n              projectId={projectId}\n              grp3Items={mainMenu.filter((item) => item.grp === 3)}\n            />\n          ) : (\n            \"\"\n          )}\n          {btnState === \"Events\" ? (\n            <ProjectEvents\n              projectId={projectId}\n              grp4Items={mainMenu.filter((item) => item.grp === 4)}\n            />\n          ) : (\n            \"\"\n          )}\n          {btnState === \"Milestones\" ? (\n            <ProjectMilestones\n              projectId={projectId}\n              grp4Items={mainMenu.filter((item) => item.grp === 4)}\n            />\n          ) : (\n            \"\"\n          )}\n          {btnState === \"Dependencies\" ? (\n            <ProjectDependencies\n              projectId={projectId}\n              grp4Items={mainMenu.filter((item) => item.grp === 4)}\n            />\n          ) : (\n            \"\"\n          )}\n          {btnState === \"Edit\" ? (\n            <ProjectEdit\n              btnState={btnState}\n              setbtnState={setbtnState}\n              projectId={projectId}\n              grp1Items={mainMenu.filter((item) => item.grp === 1)}\n            />\n          ) : (\n            \"\"\n          )}\n          {btnState === \"Compliance\" ? (\n            <ProjectCompliance\n              projectId={projectId}\n              grp6Items={mainMenu.filter((item) => item.grp === 6)}\n            />\n          ) : (\n            \"\"\n          )}\n          {btnState === \"Task Plan\" ? (\n            <TaskPlan\n              projectId={projectId}\n              grp2Items={mainMenu.filter((item) => item.grp === 2)}\n            />\n          ) : (\n            \"\"\n          )}\n          {btnState === \"Hierarchy\" ? (\n            <ProjectHierarchy\n              projectId={projectId}\n              grp1Items={mainMenu.filter((item) => item.grp === 1)}\n            />\n          ) : (\n            \"\"\n          )}\n          {btnState === \"Capacity Plan\" ? (\n            <CapacityPlan\n              projectId={projectId}\n              grp2Items={mainMenu.filter((item) => item.grp === 2)}\n            />\n          ) : (\n            \"\"\n          )}\n\n          {btnState === \"QCR\" ? (\n            <ProjectCompliance\n              projectId={projectId}\n              grp6Items={mainMenu.filter((item) => item.grp === 6)}\n            />\n          ) : (\n            \"\"\n          )}\n        </div>\n      ) : (\n        <div className=\"statusMsg error\">\n          <span className=\"error-block\">\n            <AiFillWarning /> &nbsp; You dont have Permission to View this\n            Project\n          </span>\n        </div>\n      )}\n    </div>\n  );\n}\nexport default Project;\n","import React, { useRef, useState } from \"react\";\nimport { RiProfileLine } from \"react-icons/ri\";\nimport { BiCheck, BiLineChart } from \"react-icons/bi\";\nimport { VscSave } from \"react-icons/vsc\";\nimport { ImCross } from \"react-icons/im\";\nimport {\n  AiFillDelete,\n  AiFillWarning,\n  AiOutlineDoubleLeft,\n} from \"react-icons/ai\";\nimport { AiOutlineDoubleRight } from \"react-icons/ai\";\nimport { useEffect } from \"react\";\nimport axios from \"axios\";\nimport { environment } from \"../../environments/environment\";\nimport { ReactSearchAutocomplete } from \"react-search-autocomplete\";\nimport moment from \"moment\";\nimport { Transfer } from \"antd\";\nimport \"antd/dist/antd.min.css\";\nimport \"./ProjectEdit.scss\";\n\nimport DatePicker from \"react-datepicker\";\nimport GlobalValidation from \"../ValidationComponent/GlobalValidation\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport { CModal } from \"@coreui/react\";\nimport { CModalBody } from \"@coreui/react\";\nimport { CModalHeader } from \"@coreui/react\";\nimport Draggable from \"react-draggable\";\nimport { CCollapse, CModalTitle } from \"@coreui/react\";\nimport {\n  FaCheckCircle,\n  FaInfoCircle,\n  FaSave,\n  FaTimes,\n  FaTimesCircle,\n} from \"react-icons/fa\";\nimport { SpeakerNotesOffRounded } from \"@material-ui/icons\";\nimport Loader from \"../Loader/Loader\";\nimport Project from \"./Project\";\nconst StagePopUp = (props) => {\n  const {\n    popup,\n    setPopup,\n    setEditedData,\n    handleDateUpdate,\n    handleNo,\n    popUpValue,\n    setStgValue,\n    stgValue,\n  } = props;\n\n  const baseUrl = environment.baseUrl;\n\n  return (\n    <div>\n      <Draggable>\n        <CModal\n          visible={popup}\n          size=\"xs\"\n          className=\"ui-dialog\"\n          onClose={() => setPopup(false)}\n        >\n          <CModalHeader className=\"\">\n            <CModalTitle>\n              <span className=\"\"></span>\n            </CModalTitle>\n          </CModalHeader>\n          <CModalBody>\n            {popUpValue == 2 ? (\n              <h6>\n                All the Allocations and Assignments of the resources from the\n                date of completion till Project completion date, will be\n                deleted. Do you want to continue?\n              </h6>\n            ) : (\n              <h6>\n                Do you want to delete all allocations and Assignments of the\n                resources from today? Selecting NO will update project stage\n                leaving Allocations and Assignments as-is.\n              </h6>\n            )}\n            <div className=\"btn-container center my-2\">\n              <button\n                className=\"btn btn-primary\"\n                onClick={() => {\n                  handleDateUpdate();\n                  setPopup(false);\n                  setStgValue(popUpValue);\n                }}\n              >\n                <FaCheckCircle />\n                Yes\n              </button>\n              <button\n                className=\"btn btn-primary\"\n                onClick={() => {\n                  if (popUpValue === 2) {\n                    setPopup(false);\n                  } else {\n                    handleNo();\n                    setPopup(false);\n                    setStgValue(popUpValue);\n                  }\n                }}\n              >\n                <FaTimesCircle /> No\n              </button>\n\n              {popUpValue == 2 ? (\n                \"\"\n              ) : (\n                <button\n                  className=\"btn btn-secondary\"\n                  onClick={() => {\n                    setPopup(false);\n                  }}\n                >\n                  <FaTimes /> Cancel{\" \"}\n                </button>\n              )}\n            </div>\n          </CModalBody>\n        </CModal>\n      </Draggable>\n    </div>\n  );\n};\n\nfunction ProjectEdit({ targetDisplayName, btnState, setbtnState }) {\n  const location = useLocation();\n  let props1 = location?.state;\n  // const { projectId } = props;\n  let projecteditUrl = window.location.href.split(\":\");\n  let projectId = projecteditUrl[projecteditUrl.length - 1];\n\n  const loggedUserId = localStorage.getItem(\"resId\");\n\n  const baseUrl = environment.baseUrl;\n  const [category, setcategory] = useState([]);\n  const [customer, setCustomer] = useState([]);\n  const [week, setWeek] = useState([]);\n  const [holiday, setHoliday] = useState([]);\n  const [phase, setPhase] = useState([]);\n  const [projectData, setProjectData] = useState([]);\n\n  const [type, setType] = useState([]);\n  const [resource, setResource] = useState([]);\n  const [division, setDivision] = useState([]);\n  const [contract, setContract] = useState([]);\n  const [enguagementType, setEnguagementType] = useState([]);\n  const [effort, setEffort] = useState([]);\n  const [riskFactor, setRiskFactor] = useState([]);\n\n  const [prjName, setPrjName] = useState([]);\n  const [enguagement, setEnguagement] = useState([]);\n  const [efforts, setEfforts] = useState({\n    priliminaryEfforts: \"\",\n    contractedEfforts: \"\",\n  });\n\n  const [grossMargin, setGrossMargin] = useState([]);\n  const [gM, setGM] = useState([]);\n  const [kpiData, setKpiData] = useState([]);\n  const [revenue, setRevenue] = useState({\n    revenue: \"\",\n    contractedRevenue: \"\",\n  });\n\n  const [directCost, setDirectCost] = useState({\n    priliminaryRDC: \"\",\n    ContractRDC: \"\",\n  });\n  const [directSpareCost, setDirectSpareCost] = useState([]);\n  const [otherCost, setOtherCost] = useState({\n    priliminaryOtherCost: \"\",\n    contarctOtherCost: \"\",\n  });\n\n  const [resultPreGrossMargin, setresultPreGrossMargin] = useState(0);\n  const [resultGM, setResultGM] = useState(0);\n  const [ponumber, setPonumber] = useState([]);\n  const [contractResult, setContractResult] = useState(0);\n  const [contractGMResult, setContractGMResult] = useState(0);\n  const [service, setService] = useState([]);\n  const [plnFTE, SetPlnFTE] = useState([]);\n  const [conFTE, SetConFTE] = useState([]);\n  const [projectMngr, setProjectMngr] = useState([]);\n  const [deliveryMngr, setDeliveryMngr] = useState([]);\n  const [projectApprover, setProjectApprover] = useState([]);\n  const [projectRequester, setProjectRequester] = useState([]);\n  const [targetKeys, setTargetKeys] = useState([]);\n  const [selectedKeys, setSelectedKeys] = useState([]);\n  const [businessUnit, setBusinessUnit] = useState([]);\n  let container = document.createElement(\"div\");\n  var radioButton = document.getElementById(\"yes\");\n  const [conStartDate, SetConStartDate] = useState(\"\");\n  const [conEndDate, SetConEndDate] = useState(\"\");\n\n  const [planStartDate, SetPlanStartDate] = useState();\n  const [planEndDate, SetPlanEndDate] = useState();\n  const [actStartDate, SetActStartDate] = useState();\n  const [validationMessage, setValidationMessage] = useState(false);\n  const [successfulmessage, setSuccessfulmessage] = useState(false);\n  const [currency, setCurrency] = useState([]);\n  const [conDateDiff, setConDateDiff] = useState(\"\");\n  const [plnDateDiff, setPlnDateDiff] = useState(\"\");\n  const [actEndDate, SetActEndDate] = useState(\"\");\n  const [popup, setPopup] = useState(false);\n  const [open, setOpen] = useState(false);\n  const ref = useRef([]);\n  const [popUpValue, setPopUpValue] = useState(\"\");\n  const [stgValue, setStgValue] = useState(\"\");\n  const abortController = useRef(null);\n\n  const getProjectOverviewData = () => {\n    setProjectData([]);\n    abortController.current = new AbortController();\n    axios({\n      method: \"get\",\n      url:\n        baseUrl +\n        `/ProjectMS/Audit/projectOverviewDetails?projectId=${projectId}`,\n    })\n      .then(function (response) {\n        const resp = response.data;\n        setOpen(false);\n        setTimeout(() => {\n          setOpen(false);\n          setProjectData(resp);\n        }, 1000);\n\n        effortTypeFnc(resp[0].projCat);\n        divisionFnc(resp[0].customer_id);\n        setStgValue(resp[0].is_prj_status);\n        enguagementFnc(resp[0].division_id);\n        conractTermsFnc(resp[0].engagementId);\n        engagementTypeFnc(resp[0].engagementId);\n        poNumberFnc(resp[0].engagementId);\n        getKpitableData(resp[0].projectName);\n        setTimeout(() => {\n          document.body.click();\n        }, 2000);\n      })\n      .catch(function (response) {\n        console.log(response);\n      });\n  };\n\n  const projectCategoryFnc = () => {\n    axios({\n      method: \"get\",\n      url: baseUrl + `/ProjectMS/ProjectScopeChange/getAllProjectCategorys`,\n    }).then((res) => {\n      let custom = res.data;\n      setcategory(custom);\n    });\n  };\n  const getBusinessUnit = () => {\n    axios({\n      method: \"get\",\n      url: baseUrl + `/ProjectMS/Audit/getBusinessUnit?projectId=${projectId}`,\n    })\n      .then(function (response) {\n        let resp = response.data;\n        setBusinessUnit(resp);\n      })\n      .catch(function (response) {\n        console.log(response);\n      });\n  };\n  const customerFnc = () => {\n    axios({\n      method: \"get\",\n      url: baseUrl + `/ProjectMS/ProjectScopeChange/getCustomers`,\n    }).then((res) => {\n      let custom = res.data;\n      setCustomer(custom);\n    });\n  };\n  const WeekCalenderFnc = () => {\n    axios({\n      method: \"get\",\n      url: baseUrl + `/ProjectMS/ProjectScopeChange/getWeekCalendars`,\n    }).then((res) => {\n      let custom = res.data;\n      setWeek(custom);\n    });\n  };\n  const divisionFnc = (custId) => {\n    axios({\n      method: \"get\",\n      url:\n        baseUrl +\n        `/ProjectMS/ProjectScopeChange/getDivisionsById?cid=${custId}`,\n    }).then((res) => {\n      let custom = res.data;\n      setDivision(custom);\n    });\n  };\n  const enguagementFnc = (divisionId) => {\n    axios({\n      method: \"get\",\n      url:\n        baseUrl +\n        `/ProjectMS/ProjectScopeChange/getEngagementsById?Did=${divisionId}`,\n    }).then((res) => {\n      let custom = res.data;\n      setEnguagement(custom);\n    });\n  };\n  const engagementTypeFnc = (enguagementId) => {\n    axios({\n      method: \"get\",\n      url:\n        baseUrl +\n        `/ProjectMS/ProjectScopeChange/getEngagementTypeById?eid=${enguagementId}`,\n    })\n      .then((res) => {\n        let data = res.data;\n        setEnguagementType(data);\n      })\n      .catch((error) => {\n        console.log(\"error :\" + error);\n      });\n  };\n  const conractTermsFnc = (enguagementId) => {\n    axios({\n      method: \"get\",\n      url:\n        baseUrl +\n        `/ProjectMS/ProjectScopeChange/getContractTeamsById?eid=${enguagementId}`,\n    })\n      .then((res) => {\n        let data = res.data;\n        setContract(data);\n      })\n      .catch((error) => {\n        console.log(\"error :\" + error);\n      });\n  };\n\n  const getProjectMngr = () => {\n    setProjectMngr([]);\n    axios({\n      method: \"get\",\n      url: baseUrl + `/ProjectMS/Audit/getProjectManager?objectid=${projectId}`,\n    })\n      .then(function (response) {\n        let resp = response.data;\n        setProjectMngr(resp);\n      })\n      .catch(function (response) {\n        console.log(response);\n      });\n  };\n\n  const getProjectApprover = () => {\n    axios({\n      method: \"get\",\n      url:\n        baseUrl + `/ProjectMS/Audit/getProjectApprover?objectid=${projectId}`,\n    })\n      .then(function (response) {\n        let resp = response.data;\n        setProjectApprover(resp);\n      })\n      .catch(function (response) {\n        console.log(response);\n      });\n  };\n  const getProjectRequester = () => {\n    axios({\n      method: \"get\",\n      url:\n        baseUrl + `/ProjectMS/Audit/getProjectRequester?objectid=${projectId}`,\n    })\n      .then(function (response) {\n        let resp = response.data;\n        setProjectRequester(resp);\n      })\n      .catch(function (response) {\n        console.log(response);\n      });\n  };\n  const getDeliveryMngr = () => {\n    axios({\n      method: \"get\",\n      url:\n        baseUrl + `/ProjectMS/Audit/getDeliveryManager?objectid=${projectId}`,\n    })\n      .then(function (response) {\n        let resp = response.data;\n        setDeliveryMngr(resp);\n      })\n      .catch(function (response) {\n        console.log(response);\n      });\n  };\n\n  const holidayCalenderFnc = () => {\n    axios({\n      method: \"get\",\n      url: baseUrl + `/ProjectMS/ProjectScopeChange/getHolidayCalendars`,\n    }).then((res) => {\n      let custom = res.data;\n      setHoliday(custom);\n    });\n  };\n  const projectPhaseFnc = () => {\n    setPhase([]);\n    axios({\n      method: \"get\",\n      url: baseUrl + `/ProjectMS/ProjectScopeChange/getProjectPhases`,\n    }).then((res) => {\n      let data = res.data;\n      setPhase(data);\n    });\n  };\n  const projectTypesFnc = () => {\n    setType([]);\n    axios({\n      method: \"get\",\n      url: baseUrl + `/ProjectMS/ProjectScopeChange/getProjectTypes`,\n    }).then((res) => {\n      let data = res.data;\n      setType(data);\n    });\n  };\n  const getOtherCost = () => {\n    axios({\n      method: \"get\",\n      url: baseUrl + `/ProjectMS/Audit/getOtherCost?projectId=${projectId}`,\n    })\n      .then(function (response) {\n        let resp = response.data;\n        if (resp.length > 0) {\n          setOtherCost({\n            priliminaryOtherCost: resp[0].value,\n            contarctOtherCost: resp[1].value,\n          });\n        }\n      })\n      .catch(function (response) {\n        console.log(response);\n      });\n  };\n\n  const resourceFnc = () => {\n    axios({\n      method: \"get\",\n      url: baseUrl + `/ProjectMS/risks/getAssignedData`,\n    })\n      .then((res) => {\n        let manger = res.data;\n        setResource(manger);\n      })\n      .catch((error) => {\n        console.log(\"error :\" + error);\n      });\n  };\n\n  const getRiskFactor = () => {\n    axios({\n      method: \"get\",\n      url:\n        baseUrl +\n        `/ProjectMS/Audit/getRiskFactorCharacteristics?projectId=${projectId}`,\n    })\n      .then(function (response) {\n        let resp = response.data;\n        setRiskFactor(resp);\n      })\n      .catch(function (response) {\n        console.log(response);\n      });\n  };\n\n  const getProjectName = () => {\n    axios({\n      method: \"get\",\n      url: baseUrl + `/ProjectMS/Audit/getProjectName?projectId=${projectId}`,\n    })\n      .then(function (response) {\n        let resp = response.data;\n        setPrjName(resp);\n      })\n      .catch(function (response) {\n        console.log(response);\n      });\n  };\n\n  const getRevenue = () => {\n    axios({\n      method: \"get\",\n      url: baseUrl + `/ProjectMS/Audit/getRevenue?projectId=${projectId}`,\n    })\n      .then(function (response) {\n        let resp = response.data;\n        if (resp.length > 0) {\n          setRevenue({\n            revenue: resp[0].value || \"\",\n            contractedRevenue: resp[1]?.value || \"\",\n          });\n        }\n        let spare = {\n          revenue: resp[0].value,\n          contractedRevenue: resp[1].value,\n        };\n      })\n      .catch(function (response) {\n        console.log(response);\n      });\n  };\n\n  const getKpitableData = (name) => {\n    axios({\n      method: \"post\",\n      url: baseUrl + `/ProjectMS/Audit/getProjectKpidata`,\n      data: {\n        businessUnitId: null,\n        custName: null,\n        prjName: name,\n        prjId: projectId,\n        prjComplexity: null,\n        prjStage: null,\n        source: null,\n        gm: null,\n      },\n    })\n      .then((res) => {\n        let data = res.data;\n        setKpiData(res.data);\n      })\n      .then((error) => {\n        // console.log(\"success\", error);\n      });\n  };\n\n  const getEfforts = () => {\n    axios({\n      method: \"get\",\n      url: baseUrl + `/ProjectMS/Audit/getEfforts?projectId=${projectId}`,\n    })\n      .then(function (response) {\n        let resp = response.data;\n\n        if (resp.length > 0) {\n          setEfforts({\n            priliminaryEfforts: resp[0].value,\n            contractedEfforts: resp[1].value,\n          });\n        }\n      })\n      .catch(function (response) {\n        console.log(response);\n      });\n  };\n\n  const getGrossMargin = () => {\n    axios({\n      method: \"get\",\n      url: baseUrl + `/ProjectMS/Audit/getGrossMargin?projectId=${projectId}`,\n    })\n      .then(function (response) {\n        let resp = response.data;\n        setGrossMargin(resp);\n      })\n      .catch(function (response) {\n        console.log(response);\n      });\n  };\n\n  const getGM = () => {\n    axios({\n      method: \"get\",\n      url: baseUrl + `/ProjectMS/Audit/getGM?projectId=${projectId}`,\n    })\n      .then(function (response) {\n        let resp = response.data;\n        setGM(resp);\n      })\n      .catch(function (response) {\n        console.log(response);\n      });\n  };\n\n  const effortTypeFnc = (catId) => {\n    axios({\n      method: \"get\",\n      url:\n        baseUrl +\n        `/ProjectMS/ProjectScopeChange/getEffortTypesById?pcid=${catId}`,\n    })\n      .then((res) => {\n        let data = res.data;\n        setEffort(data);\n      })\n      .catch((error) => {\n        console.log(\"error :\" + error);\n      });\n  };\n\n  const currencyFnc = () => {\n    axios({\n      method: \"get\",\n      url: baseUrl + `/ProjectMS/ProjectScopeChange/getLkupTypes`,\n    }).then((res) => {\n      let custom = res.data;\n      setCurrency(custom);\n    });\n  };\n\n  const ServiceOfferingFnc = () => {\n    axios({\n      method: \"get\",\n      url: baseUrl + `/ProjectMS/ProjectScopeChange/getserviceOfferings`,\n    })\n      .then((res) => {\n        let serv = res.data;\n        setService(\n          res.data.map((res) => ({\n            key: res.id,\n            title: res.offering_name,\n          }))\n        );\n      })\n      .catch((error) => {\n        console.log(\"error :\" + error);\n      });\n  };\n\n  const getDirectCost = () => {\n    axios({\n      method: \"get\",\n      url: baseUrl + `/ProjectMS/Audit/getDirectCost?projectId=${projectId}`,\n    })\n      .then(function (response) {\n        let resp = response.data;\n        if (resp.length > 0) {\n          setDirectCost({\n            priliminaryRDC: resp[0].value,\n            ContractRDC: resp[1].value,\n          });\n        }\n        let spare = {\n          priliminaryRDC: resp[0].value,\n          ContractRDC: resp[1].value,\n        };\n\n        setDirectSpareCost(JSON.parse(JSON.stringify(spare)));\n      })\n      .catch(function (response) {\n        console.log(response);\n      });\n  };\n\n  const poNumberFnc = (eid) => {\n    axios({\n      method: \"get\",\n      url:\n        baseUrl +\n        `/ProjectMS/ProjectScopeChange/getPoNumberByEnguagementId?eid=${eid}`,\n    }).then((res) => {\n      let data = res.data;\n\n      setPonumber(data);\n    });\n  };\n\n  const getholiday = async (startdt, endDt, calId) => {\n    try {\n      const response = await axios({\n        method: \"get\",\n        url:\n          baseUrl +\n          `/ProjectMS/ProjectScopeChange/getHolidays?fromDate=${startdt}&toDate=${endDt}&calendarId=${calId}`,\n      });\n\n      const data = response.data.holidays;\n      return data; // Return the data\n    } catch (error) {\n      console.error(\"Error fetching holidays:\", error);\n      throw error; // Re-throw the error for handling at the calling code\n    }\n  };\n\n  function compareObjects(obj1, obj2) {\n    const obj1Keys = Object.keys(obj1);\n    const obj2Keys = Object.keys(obj2);\n    if (obj1Keys.length !== obj2Keys.length) {\n      return false;\n    }\n    for (let key of obj1Keys) {\n      if (obj1[key] !== obj2[key]) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n  const navigate = useNavigate();\n  const handleClick = () => {\n    abortController.current = new AbortController();\n    let valid = GlobalValidation(ref);\n    if (valid) {\n      {\n        setSuccessfulmessage(false);\n        setValidationMessage(true);\n      }\n      return;\n    }\n    setOpen(false);\n    axios({\n      method: \"post\",\n      url: baseUrl + `/ProjectMS/ProjectScopeChange/projectEdit`,\n      signal: abortController.current.signal,\n      data: {\n        projectId: projectData[0]?.id,\n        ProjectScope: projectData[0]?.projectScopeId,\n        revenue: revenue.revenue,\n\n        facilitator: projectData[0]?.facilitatorID,\n\n        PcqaType: projectData[0]?.pcqa_type,\n\n        subPractice: projectData[0]?.subPractice,\n\n        divisionId: projectData[0].division_id,\n        engagementId: projectData[0].engagementId,\n        EngagementType: enguagementType[0]?.id,\n        effortTypeId: projectData[0].effort_type_id,\n        teamLocationId: projectData[0].team_location_id,\n        customerId: projectData[0].customer_id,\n        isPrjStatus: projectData[0]?.is_prj_status,\n        projectPhase: projectData[0]?.project_phase,\n        projectHealthId: projectData[0]?.project_health_id,\n        PoNumber: projectData[0]?.poNumberId,\n        SfEngTypeId: projectData[0]?.sf_eng_type_id,\n        BusinessCase: projectData[0]?.business_case,\n        PrjHealthComments: projectData[0]?.prj_health_comments,\n        primaryManger: projectMngr[0]?.id,\n        servicesOfferedId: projectData[0]?.servicesOfferedId,\n        expenseBillable: projectData[0]?.expenseBillable,\n        PrjCrgId: projectData[0]?.pcrgsId,\n        clientEmail: projectData[0]?.clientEmail,\n        complexityId: projectData[0]?.tech_complexity_id,\n        domSpecChallengeId: projectData[0]?.dom_spec_challenge_id,\n        skillResAvailId: projectData[0]?.skill_res_avail_id,\n        depThirdPartySysId: projectData[0]?.dep_third_party_sys_id,\n        devEnvAvailId: projectData[0]?.dev_env_avail_id,\n        custEnvId: projectData[0]?.cust_env_id,\n        profitabilityId: projectData[0]?.profitability_id,\n        contStartDate: projectData[0]?.contStartDate,\n        contEndDate: projectData[0]?.contEndDate,\n        plannedStartDt: projectData[0]?.plandStartDate,\n        plannedEndDt: projectData[0]?.plandEndDate,\n        actStartDate: projectData[0]?.actStartDate,\n        actEndDate: actEndDate,\n\n        loggedId: loggedUserId,\n\n        holidayCalendarId: projectData[0].holiday_calendar_id,\n        weekelyCalenderId: projectData[0].week_calendar_id,\n        projectExecMethodId: projectData[0].project_exec_method_id,\n\n        projectCode: projectData[0].projectCode,\n        projectName: projectData[0].projectName,\n        projectdivisionId: \"0\",\n        typContractTermsCatId: contract[0]?.id,\n        typProjectCatId: projectData[0].projCat,\n        deliverables: projectData[0]?.deliverables,\n        projectStage: projectData[0]?.is_prj_status,\n        typSchedulingModeId: projectData[0].typ_scheduling_mode_id,\n        typTimeEntryModeId: projectData[0].typ_time_entry_mode_id,\n        priliminaryFte: projectData[0].fte,\n        priliminaryGM: resultGM,\n        priliminaryGrossMargin: resultPreGrossMargin,\n        priliminaryRDC: directCost.priliminaryRDC,\n        priliminaryOtherCost: otherCost.priliminaryOtherCost,\n        priliminaryEfforts: efforts.priliminaryEfforts,\n        contractedRevenue: revenue.contractedRevenue,\n        ContractGM: contractResult,\n        ContractGrossMargin: contractGMResult,\n        contarctOtherCost: otherCost.contarctOtherCost,\n        ContractRDC: directCost.ContractRDC,\n        contractFte: kpiData[0]?.contracted_fte,\n        contractedEfforts: efforts.contractedEfforts,\n        unitOfMeasurement: projectData[0]?.unit_of_measure,\n      },\n      headers: { \"Content-Type\": \"application/json\" },\n    }).then((response) => {\n      const data = response.data;\n\n      setOpen(false);\n      setValidationMessage(false);\n      setSuccessfulmessage(true);\n      window.scrollTo({ top: 0, behavior: \"smooth\" });\n      setTimeout(() => {\n        setSuccessfulmessage(false);\n\n        try {\n          // navigate(`/project/Overview/:${data.projectId}`);\n          setbtnState(\"Project Overview\");\n          // window.location.reload();\n        } catch (error) {\n          console.error(\"Navigation error:\", error);\n        }\n      }, 2000);\n    });\n  };\n\n  const calContractGrossMargin = (value) => {\n    let total =\n      (directCost.ContractRDC == \"\" ? 0.0 : directCost.ContractRDC) +\n      (otherCost.contarctOtherCost == \"\" ? 0.0 : otherCost.contarctOtherCost);\n    let contractGross = revenue.contractedRevenue - total;\n    setContractResult(contractGross ? contractGross.toFixed(2) : value);\n  };\n\n  const calGrossMargin = (value) => {\n    const preliminaryRDC = parseFloat(directCost.priliminaryRDC) || 0;\n    const preliminaryOtherCost =\n      parseFloat(otherCost.priliminaryOtherCost) || 0;\n    const total = preliminaryRDC + preliminaryOtherCost;\n    const priliminaryGross = revenue.revenue - total;\n    setresultPreGrossMargin(\n      priliminaryGross ? priliminaryGross.toFixed(2) : value\n    );\n  };\n\n  const calGM = (value) => {\n    let total =\n      (directCost.priliminaryRDC == \"\" ? 0 : directCost.priliminaryRDC) +\n      (otherCost.priliminaryOtherCost == \"\"\n        ? 0\n        : otherCost.priliminaryOtherCost);\n    let prilimainaryGross = revenue.revenue - total;\n    let prilimainaryGM = (prilimainaryGross / revenue.revenue) * 100;\n    setResultGM(prilimainaryGM ? prilimainaryGM.toFixed(2) : value);\n  };\n\n  const calContractGM = (value) => {\n    const total =\n      (directCost.ContractRDC == \"\" ? 0 : directCost.ContractRDC) +\n      (otherCost.contarctOtherCost == \"\" ? 0 : otherCost.contarctOtherCost);\n    let contractGross = revenue.contractedRevenue - total;\n    let contractGM = (contractGross / revenue.contractedRevenue) * 100;\n    setContractGMResult(contractGM ? contractGM.toFixed(2) : value);\n  };\n\n  useEffect(\n    () => {\n      getProjectOverviewData();\n      projectCategoryFnc();\n      customerFnc();\n      WeekCalenderFnc();\n      holidayCalenderFnc();\n      projectPhaseFnc();\n      projectTypesFnc();\n      resourceFnc();\n      effortTypeFnc();\n      getRiskFactor();\n      getProjectName();\n\n      getEfforts();\n      getRevenue();\n      getDirectCost();\n      getOtherCost();\n      ServiceOfferingFnc();\n      getGrossMargin();\n      getGM();\n      getProjectMngr();\n      getDeliveryMngr();\n      getProjectApprover();\n      getProjectRequester();\n      getBusinessUnit();\n      currencyFnc();\n    },\n    [],\n    enguagementType[0]?.id\n  );\n\n  useEffect(() => {\n    const formatDate = (date, defaultValue) => {\n      return date?.trim() === \"\" ? defaultValue : date;\n    };\n\n    const calculateDateDifference = (startDate, endDate) => {\n      const start = moment(startDate);\n      const end = moment(endDate);\n      const daysDiff = end.diff(start, \"days\") + 1; // Add 1 to include both start and end dates\n      let weekdays = 0;\n      for (let i = 0; i < daysDiff; i++) {\n        const currentDate = start.clone().add(i, \"days\");\n        // Check if the current day is not Saturday (6) or Sunday (0)\n        if (currentDate.day() !== 0 && currentDate.day() !== 6) {\n          weekdays++;\n        }\n      }\n\n      return weekdays;\n    };\n\n    const a1 = formatDate(\n      projectData[0]?.contStartDate,\n      projectData[0]?.contStartDate\n    );\n    const b1 = formatDate(\n      projectData[0]?.contEndDate,\n      projectData[0]?.contEndDate\n    );\n\n    const plnStartDt = formatDate(\n      projectData[0]?.plandStartDate,\n      projectData[0]?.plandStartDate\n    );\n    const plnEndDt = formatDate(\n      projectData[0]?.plandEndDate,\n      projectData[0]?.plandEndDate\n    );\n    const fetchData = async () => {\n      try {\n        const conClnId = await getholiday(\n          projectData[0]?.contStartDate,\n          projectData[0]?.contEndDate,\n          projectData[0]?.holiday_calendar_id\n        );\n\n        const plnClnId = await getholiday(\n          projectData[0]?.plandStartDate,\n          projectData[0]?.plandEndDate,\n          projectData[0]?.holiday_calendar_id\n        );\n\n        const diffInDays = calculateDateDifference(plnStartDt, plnEndDt);\n        setPlnDateDiff(diffInDays - plnClnId);\n        let chDays = diffInDays - plnClnId;\n        let cFte = kpiData[0]?.planned_hours / (chDays * 8);\n        SetConFTE(cFte.toFixed(2));\n        const diff = calculateDateDifference(a1, b1);\n        setConDateDiff(diff - plnClnId);\n        let phDays = diff - plnClnId;\n        let pFte = efforts.contractedEfforts / (phDays * 8);\n\n        SetPlnFTE(pFte.toFixed(2));\n      } catch (error) {\n        // Handle errors here\n        console.error(\"Error in fetchData:\", error);\n      }\n    };\n\n    fetchData();\n  }, [\n    projectData,\n    projectData[0]?.contStartDate,\n    projectData[0]?.contEndDate,\n    projectData[0]?.plandStartDate,\n    projectData[0]?.plandEndDate,\n    projectData[0]?.holiday_calendar_id,\n    efforts.contractedEfforts,\n    kpiData[0]?.planned_hours,\n  ]);\n\n  useEffect(() => {\n    calGM();\n    calGrossMargin();\n  }, [directCost, revenue, otherCost, projectId]);\n\n  useEffect(() => {\n    calContractGM();\n    calContractGrossMargin();\n  }, [directCost, otherCost, revenue]);\n\n  const updateProjectData = (id, value) => {\n    setProjectData((ps) => {\n      const newArr = [...ps];\n      newArr[0][id] = value;\n      return newArr;\n    });\n  };\n\n  const onChange = (e) => {\n    const { value, id } = e.target;\n    setPopUpValue(value);\n\n    switch (id) {\n      case \"division_id\":\n        enguagementFnc(value);\n\n        break;\n      case \"engagementId\":\n        engagementTypeFnc(value);\n        conractTermsFnc(value);\n        poNumberFnc(value);\n\n        break;\n      case \"effort_type_id\":\n        break;\n      case \"customer_id\":\n        divisionFnc(value);\n\n        break;\n\n      default:\n        break;\n    }\n\n    updateProjectData(id, value);\n  };\n\n  const onChangeStg = (e) => {\n    const { value, id } = e.target;\n    setPopUpValue(value);\n\n    switch (id) {\n      case \"isPrjStatus\":\n        if (\n          [2, 4, 6].includes(e.target.length) ||\n          (e.target.length === 5 && value === \"1\")\n        ) {\n          setPopup(false);\n          setStgValue(value);\n        } else if ([1, 2, 3, 4].includes(Number(value))) {\n          setPopup(true);\n        }\n        updateProjectData(\"is_prj_status\", value);\n        // This line is common to both conditions\n        break;\n      default:\n        break;\n    }\n\n    if (popup) {\n      updateProjectData(id, value);\n    }\n  };\n\n  function handleExpenseBillableChange(event) {\n    setProjectData((ps) => {\n      const newArr = [...ps];\n\n      newArr[0][\"expenseBillable\"] = true;\n\n      return newArr;\n    });\n  }\n\n  function handleNoExpenseBillableChange(event) {\n    setProjectData((ps) => {\n      const newArr = [...ps];\n\n      newArr[0][\"expenseBillable\"] = false;\n\n      return newArr;\n    });\n  }\n\n  var data = 100;\n  const onchangeForAll = (e) => {\n    const { name, id, value } = e.target;\n\n    if (id === \"revenue\") {\n      setRevenue((prev) => ({ ...prev, [e.target.id]: e.target.value }));\n    } else if (id === \"priliminaryRDC\") {\n      setDirectCost((prev) => ({ ...prev, [e.target.id]: e.target.value }));\n    } else if (id === \"priliminaryOtherCost\") {\n      setOtherCost((prev) => ({ ...prev, [e.target.id]: e.target.value }));\n    } else if (id === \"contractedRevenue\") {\n      setRevenue((prev) => ({ ...prev, [e.target.id]: e.target.value }));\n    } else if (id === \"contarctOtherCost\") {\n      setOtherCost((prev) => ({ ...prev, [e.target.id]: e.target.value }));\n    } else if (id === \"ContractRDC\") {\n      setDirectCost((prev) => ({ ...prev, [e.target.id]: e.target.value }));\n    } else if (id === \"priliminaryFte\") {\n      setProjectData((ps) => {\n        const newArr = [...ps];\n        newArr[0][\"fte\"] = value;\n        return newArr;\n      });\n    } else if (id === \"contractFte\") {\n      setKpiData((prev) => ({ ...prev, [\"contracted_fte\"]: e.target.value }));\n    } else if (id === \"priliminaryEfforts\") {\n      setEfforts((prev) => ({ ...prev, [e.target.id]: e.target.value }));\n    } else if (id === \"contractedEfforts\") {\n      setEfforts((prev) => ({ ...prev, [e.target.id]: e.target.value }));\n    }\n  };\n\n  const onChangetext = (e) => {\n    const { value, id } = e.target;\n    setProjectData((ps) => {\n      const newArr = [...ps];\n      newArr[0][id] = value;\n      return newArr;\n    });\n  };\n\n  useEffect(() => {\n    const conStart = moment(projectData[0]?.contStartDate).toDate();\n    SetConStartDate(conStart);\n    const conEnd = moment(projectData[0]?.contEndDate).toDate();\n    SetConEndDate(conEnd);\n    const plnStart = moment(projectData[0]?.plandStartDate).toDate();\n    SetPlanStartDate(plnStart);\n    const plnEnd = moment(projectData[0]?.plandEndDate).toDate();\n    SetPlanEndDate(plnEnd);\n\n    if (projectData[0]?.actStartDate != null) {\n      const actStart = moment(projectData[0]?.actStartDate).toDate();\n      SetActStartDate(actStart);\n    }\n\n    if (projectData[0]?.servicesOfferedId) {\n      const serviceIds = (projectData[0]?.servicesOfferedId || \"\")\n        .split(\",\")\n        .map((item) => parseInt(item.trim(), 10))\n        .filter((item) => !isNaN(item));\n      setTargetKeys(serviceIds);\n    }\n  }, [projectData]);\n\n  const handleDateUpdate = () => {\n    const date = new Date();\n    const formattedDate = moment(date).format(\"YYYY-MM-DD\");\n    SetActEndDate(formattedDate);\n  };\n  const handleNo = () => {\n    SetActEndDate(null);\n  };\n  const handleAbort = () => {\n    abortController.current && abortController.current.abort();\n    setOpen(false);\n  };\n\n  return (\n    <div>\n      <>\n        {successfulmessage ? (\n          <div className=\"statusMsg success\">\n            {\" \"}\n            <BiCheck /> Project Updated Successfully{\" \"}\n          </div>\n        ) : (\n          \"\"\n        )}\n        {validationMessage ? (\n          <div className=\"statusMsg error\">\n            {\" \"}\n            <AiFillWarning /> Please select the valid values for highlighted\n            fields{\" \"}\n          </div>\n        ) : (\n          \"\"\n        )}\n      </>\n\n      <div className=\"pageTitle\">\n        <div className=\"childOne\">\n          <h2>{projectData[0]?.projectName}</h2>\n        </div>\n        <div className=\"childTwo\">\n          <h2>Edits</h2>\n        </div>\n        <div className=\"childThree\"></div>\n      </div>\n      <div className=\"group mb-3 customCard\">\n        <div className=\"group-content row\">\n          <div className=\"form-group col-md-2 mb-2\">\n            <label htmlFor=\"projectCode\">\n              Project Code <span className=\"error-text\">&nbsp;*</span>\n            </label>\n            <div\n              className=\"textfield\"\n              ref={(ele) => {\n                ref.current[0] = ele;\n              }}\n            >\n              <input\n                type=\"text\"\n                disabled\n                className=\"form-control disableField\"\n                id=\"projectCode\"\n                placeholder\n                required\n                defaultValue={projectData[0]?.projectCode}\n              />\n            </div>\n          </div>\n          <div className=\"form-group col-md-4 mb-2\">\n            <label htmlFor=\"projectName\">\n              Project Name <span className=\"error-text\">&nbsp;*</span>\n            </label>\n            <div\n              className=\"textfield\"\n              ref={(ele) => {\n                ref.current[1] = ele;\n              }}\n            >\n              <input\n                type=\"text\"\n                disabled={\n                  projectData[0]?.projectStage == \"Completed\" ? true : false\n                }\n                className=\"form-control disableField \"\n                id=\"projectName\"\n                placeholder\n                required\n                onChange={(e) => {\n                  const value = e.target.value.replace(/^\\s+/g, \"\"); // Remove spaces\n                  e.target.value = value; // Update the input value\n                  onChangetext(e);\n                }}\n                value={projectData[0]?.projectName}\n              />\n            </div>\n          </div>\n          <div className=\"form-group col-md-2 mb-2\">\n            <label htmlFor=\"businessUnit\">\n              Business Unit <span className=\"error-text\">&nbsp;*</span>\n            </label>\n            <div\n              className=\"textfield\"\n              ref={(ele) => {\n                ref.current[2] = ele;\n              }}\n            >\n              <input\n                type=\"text\"\n                className=\"form-control Done disableField\"\n                id=\"UnitOfMeasure\"\n                value={businessUnit[0]?.bussinessUnit}\n                placeholder\n                disabled\n                required\n              />\n            </div>\n          </div>\n          <div className=\"form-group col-md-2 mb-2\">\n            <label htmlFor=\"customer\">\n              Customer <span className=\"error-text\">&nbsp;*</span>\n            </label>\n            <select\n              id=\"customer_id\"\n              className=\"disableField text\"\n              onChange={(e) => onChange(e)}\n              disabled={\n                projectData[0]?.projectStage == \"Completed\" ? true : false\n              }\n              ref={(ele) => {\n                ref.current[3] = ele;\n              }}\n            >\n              <option value=\"\"> &lt;&lt;Please Select&gt;&gt;</option>\n              {customer.map((Item) => (\n                <option\n                  value={Item.id}\n                  selected={\n                    Item.id == projectData[0]?.customer_id ? true : false\n                  }\n                >\n                  {\" \"}\n                  {Item.full_name}\n                </option>\n              ))}\n            </select>\n          </div>\n          <div className=\"form-group col-md-2 mb-2\">\n            <label htmlFor=\"division\">\n              Division <span className=\"error-text\">&nbsp;*</span>\n            </label>\n            <select\n              id=\"division_id\"\n              disabled={\n                projectData[0]?.projectStage == \"Completed\" ? true : false\n              }\n              onChange={(e) => onChange(e)}\n              className=\"text\"\n              ref={(ele) => {\n                ref.current[4] = ele;\n              }}\n            >\n              <option value=\"\"> &lt;&lt;Please Select&gt;&gt;</option>\n              {division.map((Item) => (\n                <option\n                  value={Item.id}\n                  selected={\n                    Item.id == projectData[0]?.division_id ? true : false\n                  }\n                >\n                  {\" \"}\n                  {Item.name}\n                </option>\n              ))}\n            </select>\n          </div>\n          <div className=\"form-group col-md-2 mb-2\">\n            <label htmlFor=\"subPractice\">Sub Practice</label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              id=\"subPractice\"\n              disabled={\n                projectData[0]?.projectStage == \"Completed\" ? true : false\n              }\n              value={\n                projectData[0]?.subPractice == null\n                  ? \"\"\n                  : projectData[0]?.subPractice\n              }\n              onChange={(e) => onChangetext(e)}\n            />\n          </div>\n          <div className=\"form-group col-md-2 mb-2\">\n            <label htmlFor=\"engagementName\">\n              Engagement Name <span className=\"error-text\">&nbsp;*</span>\n            </label>\n            <select\n              id=\"engagementId\"\n              onChange={(e) => onChange(e)}\n              disabled={\n                projectData[0]?.projectStage == \"Completed\" ? true : false\n              }\n              className=\"text\"\n              ref={(ele) => {\n                ref.current[5] = ele;\n              }}\n            >\n              <option value=\"\"> &lt;&lt;Please Select&gt;&gt;</option>\n              {enguagement.map((Item) => (\n                <option\n                  value={Item.id}\n                  selected={\n                    Item.id == projectData[0]?.engagementId ? true : false\n                  }\n                >\n                  {\" \"}\n                  {Item.name}\n                </option>\n              ))}\n            </select>\n          </div>\n          <div className=\"form-group col-md-2 mb-2\">\n            <label htmlFor=\"engagementType\">\n              Engagement Type <span className=\"error-text\">&nbsp;*</span>\n            </label>\n            <select\n              id=\"engagement_model_id\"\n              disabled\n              defaultValue={projectData[0]?.engagementType}\n              className=\"text\"\n              ref={(ele) => {\n                ref.current[6] = ele;\n              }}\n            >\n              <option value=\"\"> &lt;&lt;Please Select&gt;&gt;</option>\n              {enguagementType.map((Item) => (\n                <option\n                  value={Item.id}\n                  selected={\n                    Item.id == projectData[0]?.engagement_model_id ||\n                    Item.lkup_name == enguagementType[0]?.lkup_name\n                      ? true\n                      : false\n                  }\n                >\n                  {\" \"}\n                  {Item.lkup_name}\n                </option>\n              ))}\n            </select>\n          </div>\n          <div className=\"form-group col-md-2 mb-2\">\n            <label htmlFor=\"contractTerms\">\n              Contract Terms <span className=\"error-text\">&nbsp;*</span>\n            </label>\n            <select\n              id=\"contract\"\n              defaultValue={projectData[0]?.contractTerms}\n              disabled\n              className=\"text\"\n              ref={(ele) => {\n                ref.current[7] = ele;\n              }}\n            >\n              <option value=\"\"> &lt;&lt;Please Select&gt;&gt;</option>\n              {contract.map((Item) => (\n                <option\n                  value={Item.id}\n                  selected={\n                    Item.id == projectData[0]?.contract ||\n                    Item.lkup_name == contract[0]?.lkup_name\n                      ? true\n                      : false\n                  }\n                >\n                  {\" \"}\n                  {Item.lkup_name}\n                </option>\n              ))}\n            </select>\n          </div>\n          <div className=\"form-group col-md-2 mb-2\">\n            <label htmlFor=\"executionMethodology\">Execution Methodology</label>\n            <select\n              id=\"project_exec_method_id\"\n              className=\"disableField\"\n              disabled={\n                projectData[0]?.executionMethodology == null ? false : true\n              }\n              onChange={(e) => onChange(e)}\n            >\n              <option value=\"\"> &lt;&lt;Please Select&gt;&gt;</option>\n              <option\n                value={365}\n                selected={\n                  projectData[0]?.executionMethodology == \"Agile\" ? 365 : \"\"\n                }\n              >\n                Agile\n              </option>\n              <option\n                value={366}\n                selected={\n                  projectData[0]?.executionMethodology == \"Waterfall\" ? 366 : \"\"\n                }\n              >\n                Waterfall\n              </option>\n              <option\n                value={367}\n                selected={\n                  projectData[0]?.executionMethodology == \"Iterative\" ? 367 : \"\"\n                }\n              >\n                Iterative\n              </option>\n              <option\n                value={368}\n                selected={\n                  projectData[0]?.executionMethodology == \"Other\" ? 368 : \"\"\n                }\n              >\n                Other\n              </option>\n            </select>\n          </div>\n          <div className=\"form-group col-md-2 mb-2\">\n            <label htmlFor=\"effortType\">Effort Type</label>\n            <select\n              id=\"effort_type_id\"\n              onChange={(e) => onChange(e)}\n              disabled={\n                projectData[0]?.projectStage == \"Completed\" ? true : false\n              }\n            >\n              <option value=\"\"> &lt;&lt;Please Select&gt;&gt;</option>\n              {effort.map((Item) => (\n                <option\n                  value={Item.id}\n                  selected={\n                    Item.effort_name == projectData[0]?.effortType\n                      ? true\n                      : false\n                  }\n                >\n                  {\" \"}\n                  {Item.effort_name}\n                </option>\n              ))}\n            </select>\n          </div>\n          <div className=\"form-group col-md-2 mb-2\">\n            <label htmlFor=\"currency\">\n              Currency <span className=\"error-text\">&nbsp;*</span>\n            </label>\n            <select\n              id=\"currency_id\"\n              onChange={(e) => onChange(e)}\n              disabled\n              className=\"text\"\n              ref={(ele) => {\n                ref.current[8] = ele;\n              }}\n            >\n              <option value=\"\"> &lt;&lt;Please Select&gt;&gt;</option>\n              currency_id\n              {currency.map((Item) => (\n                <option\n                  value={Item.id}\n                  selected={\n                    Item.id == projectData[0]?.currency_id ? true : false\n                  }\n                >\n                  {\" \"}\n                  {Item.description}\n                </option>\n              ))}\n            </select>\n          </div>\n          <div className=\"form-group col-md-2 mb-2\">\n            <label htmlFor=\"schedulingMode\">\n              Scheduling Mode <span className=\"error-text\">&nbsp;*</span>\n            </label>\n            <select\n              id=\"typ_scheduling_mode_id\"\n              onChange={(e) => onChange(e)}\n              disabled={\n                projectData[0]?.projectStage == \"Completed\" ? true : false\n              }\n              className=\"text\"\n              ref={(ele) => {\n                ref.current[9] = ele;\n              }}\n            >\n              <option value=\"\"> &lt;&lt;Please Select&gt;&gt;</option>\n              <option\n                value={30}\n                selected={projectData[0]?.schedulingMode == \"Days\" ? 30 : \"\"}\n              >\n                Days\n              </option>\n              <option\n                value={31}\n                selected={projectData[0]?.schedulingMode == \"Hours\" ? 31 : \"\"}\n              >\n                Hours\n              </option>\n              <option\n                value={29}\n                selected={projectData[0]?.schedulingMode == \"Weeks\" ? 29 : \"\"}\n              >\n                Weeks\n              </option>\n            </select>\n          </div>\n          <div className=\"form-group col-md-2 mb-2\">\n            <label htmlFor=\"timeEntryMode \">\n              Time Entry Mode <span className=\"error-text\">&nbsp;*</span>\n            </label>\n            <select\n              id=\"typ_time_entry_mode_id\"\n              className=\"disableField text\"\n              disabled={\n                projectData[0]?.projectStage == \"Completed\" ? true : false\n              }\n              onChange={(e) => onChange(e)}\n              ref={(ele) => {\n                ref.current[10] = ele;\n              }}\n            >\n              <option value=\"\"> &lt;&lt;Please Select&gt;&gt;</option>\n              <option\n                value={19}\n                selected={\n                  projectData[0]?.timeEntryMode == \"Project Level\" ? 19 : \"\"\n                }\n              >\n                Project Level\n              </option>\n              <option\n                value={20}\n                selected={\n                  projectData[0]?.timeEntryMode == \"Task Level\" ? 20 : \"\"\n                }\n              >\n                Task Level\n              </option>\n            </select>\n          </div>\n          <div className=\"form-group col-md-2 mb-2\">\n            <label htmlFor=\"teamLocation \">\n              Team Location <span className=\"error-text\">&nbsp;*</span>\n            </label>\n            <select\n              id=\"team_location_id\"\n              onChange={(e) => onChange(e)}\n              disabled={\n                projectData[0]?.projectStage == \"Completed\" ? true : false\n              }\n              className=\"text\"\n              ref={(ele) => {\n                ref.current[11] = ele;\n              }}\n            >\n              <option value=\"\"> &lt;&lt;Please Select&gt;&gt;</option>\n              <option\n                value={364}\n                selected={\n                  projectData[0]?.teamLocation == \"Blended Shore\" ? 364 : \"\"\n                }\n              >\n                Blended Shore\n              </option>\n              <option\n                value={361}\n                selected={\n                  projectData[0]?.teamLocation == \"Client Site\" ? 361 : \"\"\n                }\n              >\n                Client Site\n              </option>\n              <option\n                value={363}\n                selected={\n                  projectData[0]?.teamLocation == \"Off Shore\" ? 363 : \"\"\n                }\n              >\n                Off Shore\n              </option>\n              <option\n                value={362}\n                selected={projectData[0]?.teamLocation == \"Onsite\" ? 362 : \"\"}\n              >\n                Onsite\n              </option>\n            </select>\n          </div>\n          <div className=\"form-group col-md-2 mb-2\">\n            <label htmlFor=\"projectScope\">Project Scope </label>\n            <div>\n              <input\n                type=\"text\"\n                disabled={\n                  projectData[0]?.projectStage == \"Completed\" ? true : false\n                }\n                className=\"form-control\"\n                id=\"projectScopeId\"\n                placeholder\n                value={\n                  projectData[0]?.projectScopeId == \" \"\n                    ? 0\n                    : projectData[0]?.projectScopeId\n                }\n                onChange={(e) => {\n                  const input = e.target.value;\n                  const regex = /^[0-9]*\\.?[0-9]*$/; // Regular expression to match numbers\n\n                  if (!regex.test(input)) {\n                    e.target.value = input.replace(/[^0-9.]/g, \"\"); // Remove non-numeric characters\n                  }\n                  onChangetext(e);\n                }}\n              />\n            </div>\n          </div>\n          <div className=\"form-group col-md-2 mb-2\">\n            <label htmlFor=\"unit_of_measure\">Unit of Measurement</label>\n            <select\n              id=\"unit_of_measure\"\n              onChange={(e) => onChange(e)}\n              disabled={\n                projectData[0]?.projectStage == \"Completed\" ? true : false\n              }\n            >\n              <option value=\"\"> &lt;&lt;Please Select&gt;&gt;</option>\n              <option\n                value=\"243\"\n                selected={\n                  projectData[0]?.unit_of_measure == \"243\" ? true : false\n                }\n              >\n                {\" \"}\n                FP\n              </option>\n              <option\n                value=\"244\"\n                selected={\n                  projectData[0]?.unit_of_measure == \"244\" ? true : false\n                }\n              >\n                UCP\n              </option>\n            </select>\n          </div>\n          <div className=\"form-group col-md-2 mb-2\">\n            <label htmlFor=\"expenseBillable\">Expense Billable</label>\n            <div className=\"form-check form-check-inline\">\n              <input\n                className=\"form-check-input\"\n                type=\"radio\"\n                disabled={projectData[0]?.projectStage === \"Completed\"}\n                id=\"expenseBillableYes\"\n                name=\"expenseBillable\"\n                value=\"true\"\n                checked={projectData[0]?.expenseBillable === true}\n                onChange={handleExpenseBillableChange}\n              />\n              <label className=\"form-check-label\" htmlFor=\"expenseBillableYes\">\n                Yes\n              </label>\n            </div>\n            <div className=\"form-check form-check-inline\">\n              <input\n                className=\"form-check-input\"\n                type=\"radio\"\n                disabled={projectData[0]?.projectStage === \"Completed\"}\n                id=\"expenseBillableNo\"\n                name=\"expenseBillable\"\n                value=\"false\"\n                checked={projectData[0]?.expenseBillable === false}\n                onChange={handleNoExpenseBillableChange}\n              />\n              <label className=\"form-check-label\" htmlFor=\"expenseBillableNo\">\n                No\n              </label>\n            </div>\n          </div>\n          <div className=\"form-group col-md-2 mb-2\">\n            <label htmlFor=\"weekCalendar\">\n              Week Calendar <span className=\"error-text\">&nbsp;*</span>\n            </label>\n            <select\n              id=\"week_calendar_id\"\n              className=\"disableField text\"\n              disabled={\n                projectData[0]?.projectStage == \"Completed\" ? true : false\n              }\n              onChange={(e) => onChange(e)}\n              ref={(ele) => {\n                ref.current[12] = ele;\n              }}\n            >\n              <option value=\"\"> &lt;&lt;Please Select&gt;&gt;</option>\n              {week.map((Item) => (\n                <option\n                  value={Item.id}\n                  selected={\n                    Item.calendar_name == projectData[0]?.weekCalendar\n                      ? true\n                      : false\n                  }\n                >\n                  {\" \"}\n                  {Item.calendar_name}\n                </option>\n              ))}\n            </select>\n          </div>\n          <div className=\"form-group col-md-2 mb-2\">\n            <label htmlFor=\"holidayCalendar\">\n              Holiday Calendar <span className=\"error-text\">&nbsp;*</span>\n            </label>\n            <select\n              id=\"holiday_calendar_id\"\n              className=\"disableField text\"\n              disabled={\n                projectData[0]?.projectStage == \"Completed\" ? true : false\n              }\n              onChange={(e) => onChange(e)}\n              ref={(ele) => {\n                ref.current[13] = ele;\n              }}\n            >\n              <option value=\"\"> &lt;&lt;Please Select&gt;&gt;</option>\n              {holiday.map((Item) => (\n                <option\n                  value={Item.id}\n                  selected={\n                    Item.name == projectData[0]?.holidayCalendar ? true : false\n                  }\n                >\n                  {\" \"}\n                  {Item.name}\n                </option>\n              ))}\n            </select>\n          </div>\n          <div className=\"form-group col-md-2 mb-2\">\n            <label htmlFor=\"projectCategory\">\n              Project Category <span className=\"error-text\">&nbsp;*</span>\n            </label>\n            <select\n              id=\"projCat\"\n              className=\"disableField text\"\n              disabled={\n                projectData[0]?.projectStage == \"Completed\" ? true : false\n              }\n              onChange={(e) => onChange(e)}\n              ref={(ele) => {\n                ref.current[14] = ele;\n              }}\n            >\n              <option value=\"\"> &lt;&lt;Please Select&gt;&gt;</option>\n              {category.map((Item) => (\n                <option\n                  value={Item.id}\n                  selected={\n                    Item.project_category_name ==\n                    projectData[0]?.projectCategory\n                      ? true\n                      : false\n                  }\n                >\n                  {\" \"}\n                  {Item.project_category_name}\n                </option>\n              ))}\n            </select>\n          </div>\n          <div className=\"form-group col-md-2 mb-2\">\n            <label htmlFor=\"projectStage\">\n              Project Stage <span className=\"error-text\">&nbsp;*</span>\n            </label>\n            <select\n              id=\"isPrjStatus\"\n              onChange={(e) => onChangeStg(e)}\n              className=\"text\"\n              value={stgValue}\n              ref={(ele) => {\n                ref.current[15] = ele;\n              }}\n            >\n              {projectData[0]?.projectStage === \"New\" ? (\n                <>\n                  <option value=\"\"> &lt;&lt;Please Select&gt;&gt;</option>\n                  <option value=\"0\">New</option>\n                  <option value=\"5\">Opportunity</option>\n                  <option value=\"1\">In Progress</option>\n                </>\n              ) : projectData[0]?.projectStage === \"In Progress\" ? (\n                <>\n                  <option value=\"\"> &lt;&lt;Please Select&gt;&gt;</option>\n                  <option value=\"1\">In Progress</option>\n                  <option value=\"3\">Withdrawn</option>\n                  <option value=\"4\">On Hold</option>\n                  <option value=\"2\">Completed</option>\n                </>\n              ) : projectData[0]?.projectStage === \"On Hold\" ? (\n                <>\n                  <option value=\"\"> &lt;&lt;Please Select&gt;&gt;</option>\n                  <option value=\"1\">In Progress</option>\n                  <option value=\"3\">Withdrawn</option>\n                  <option value=\"4\">On Hold</option>\n                  <option value=\"2\">Completed</option>\n                </>\n              ) : projectData[0]?.projectStage === \"Opportunity\" ? (\n                <>\n                  <option value=\"\"> &lt;&lt;Please Select&gt;&gt;</option>\n                  <option value=\"5\">Opportunity</option>\n                  <option value=\"1\">In Progress</option>\n                  <option value=\"3\">Withdrawn</option>\n                  <option value=\"4\">On Hold</option>\n                  <option value=\"2\">Completed</option>\n                </>\n              ) : projectData[0]?.projectStage === \"Completed\" ? (\n                <>\n                  <option value=\"1\" name=\"inprogress\">\n                    In Progress\n                  </option>\n                  <option value=\"2\">Completed</option>\n                </>\n              ) : projectData[0]?.projectStage === \"Withdrawn\" ? (\n                <>\n                  <option value=\"\"> &lt;&lt;Please Select&gt;&gt;</option>\n                  <option value=\"1\">In Progress</option>\n                  <option value=\"3\">Withdrawn</option>\n                  <option value=\"4\">On Hold</option>\n                  <option value=\"2\">Completed</option>\n                </>\n              ) : (\n                <option value=\"2\"></option>\n              )}\n            </select>\n          </div>\n          <div className=\"form-group col-md-2 mb-2\">\n            <label htmlFor=\"projectPhase\">\n              Project Phase <span className=\"error-text\">&nbsp;*</span>\n            </label>\n            <select\n              id=\"project_phase\"\n              onChange={(e) => onChange(e)}\n              disabled={\n                projectData[0]?.projectStage == \"Completed\" ? true : false\n              }\n              className=\"text\"\n              ref={(ele) => {\n                ref.current[16] = ele;\n              }}\n            >\n              <option value=\"\"> &lt;&lt;Please Select&gt;&gt;</option>\n              {phase.map((Item) => (\n                <option\n                  value={Item.id}\n                  selected={\n                    Item.lkup_name == projectData[0]?.projectPhase\n                      ? true\n                      : false\n                  }\n                >\n                  {\" \"}\n                  {Item.lkup_name}\n                </option>\n              ))}\n            </select>\n          </div>\n          <div className=\"form-group col-md-2 mb-2\">\n            <label htmlFor=\"projectHealth\">\n              Project Health <span className=\"error-text\">&nbsp;*</span>\n            </label>\n            <select\n              id=\"project_health_id\"\n              onChange={(e) => onChange(e)}\n              disabled={\n                projectData[0]?.projectStage == \"Completed\" ? true : false\n              }\n              className=\"text\"\n              ref={(ele) => {\n                ref.current[17] = ele;\n              }}\n            >\n              <option value=\"\"> &lt;&lt;Please Select&gt;&gt;</option>\n              <option\n                value=\"498\"\n                selected={\n                  projectData[0]?.projectHealth == \"On Schedule\" ? \"498\" : \"\"\n                }\n              >\n                On Schedule\n              </option>\n              <option\n                value=\"499\"\n                selected={\n                  projectData[0]?.projectHealth == \"Potential Issues\"\n                    ? \"499\"\n                    : \"\"\n                }\n              >\n                Potential issues\n              </option>\n              <option\n                value=\"500\"\n                selected={\n                  projectData[0]?.projectHealth == \"Serious Issues\" ? \"500\" : \"\"\n                }\n              >\n                Serious issues\n              </option>\n            </select>\n          </div>\n          <div className=\"form-group col-md-2 mb-2\">\n            <label htmlFor=\"deliverables\">\n              Deliverables <span className=\"error-text\">&nbsp;*</span>\n            </label>\n            <select\n              id=\"deliverables\"\n              onChange={(e) => onChange(e)}\n              disabled={\n                projectData[0]?.projectStage == \"Completed\" ? true : false\n              }\n              className=\"text\"\n              ref={(ele) => {\n                ref.current[18] = ele;\n              }}\n            >\n              <option value=\"\"> &lt;&lt;Please Select&gt;&gt;</option>\n              <option\n                value=\"Yes\"\n                selected={projectData[0]?.deliverables == \"Yes\" ? \"Yes\" : \"\"}\n              >\n                Yes\n              </option>\n              <option\n                value=\"NO\"\n                selected={projectData[0]?.deliverables == \"No\" ? \"No\" : \"\"}\n              >\n                No\n              </option>\n            </select>\n          </div>\n          <div className=\"form-group col-md-2 mb-2\">\n            <label htmlFor=\"poNumber\">PO Number</label>\n            <select\n              id=\"poNumberId\"\n              onChange={(e) => onChange(e)}\n              disabled={\n                projectData[0]?.projectStage == \"Completed\" ? true : false\n              }\n              Value={projectData[0]?.poNumber}\n            >\n              <option value=\"null\"> &lt;&lt;Please Select&gt;&gt;</option>\n              {ponumber.map((Item) => (\n                <option\n                  value={Item.id}\n                  selected={\n                    Item.id == projectData[0]?.poNumberId ? true : false\n                  }\n                >\n                  {\" \"}\n                  {Item.name}\n                </option>\n              ))}\n            </select>\n          </div>\n          <div className=\"form-group col-md-2 mb-2\">\n            <label htmlFor=\"sfEnagagementType\">SF Enagagement Type</label>\n            <select\n              id=\"sf_eng_type_id\"\n              onChange={(e) => onChange(e)}\n              disabled={\n                projectData[0]?.projectStage == \"Completed\" ? true : false\n              }\n            >\n              <option value=\"\"> &lt;&lt;Please Select&gt;&gt;</option>\n              <option\n                value={1357}\n                selected={\n                  projectData[0]?.sfEngagementType == \"New Persuit\" ? \"2\" : \"\"\n                }\n              >\n                New Persuit\n              </option>\n              <option\n                value={1358}\n                selected={\n                  projectData[0]?.sfEngagementType == \"Stream\" ? \"3\" : \"\"\n                }\n              >\n                Stream\n              </option>\n            </select>\n          </div>\n\n          <div className=\"form-group col-md-6 mb-1\">\n            <label htmlFor=\"projectDescription\">\n              Project Description / Business Case{\" \"}\n              <span className=\"error-text\">&nbsp;*</span>\n            </label>\n            <div\n              className=\"textfield\"\n              ref={(ele) => {\n                ref.current[19] = ele;\n              }}\n            >\n              <>\n                <textarea\n                  className=\"form-control\"\n                  id=\"business_case\"\n                  disabled={\n                    projectData[0]?.projectStage == \"Completed\" ? true : false\n                  }\n                  placeholder\n                  rows={3}\n                  required\n                  value={projectData[0]?.business_case}\n                  onChange={(e) => onChangetext(e)}\n                />\n              </>\n            </div>\n          </div>\n          <div className=\"form-group col-md-6 mb-1\">\n            <label htmlFor=\"projectHealthComments\">\n              Project Health Comments\n              <span className=\"error-text\">&nbsp;*</span>\n            </label>\n            <div\n              className=\"textfield\"\n              ref={(ele) => {\n                ref.current[20] = ele;\n              }}\n            >\n              <textarea\n                className=\"form-control\"\n                id=\"prj_health_comments\"\n                disabled={\n                  projectData[0]?.projectStage == \"Completed\" ? true : false\n                }\n                placeholder\n                rows={3}\n                required\n                value={projectData[0]?.prj_health_comments}\n                onChange={(e) => onChangetext(e)}\n              />\n            </div>\n          </div>\n        </div>\n\n        <div className=\"row\">\n          <div className=\"col-md-4 group mb-2 container-fluid   customCard\">\n            <div className=\"group mb-0 customCard\">\n              <h2>\n                <RiProfileLine /> Stake Holders\n              </h2>\n              <div className=\"group-content row\">\n                <div className=\" col-md-12 mb-2\">\n                  <div className=\"form-group row\">\n                    <label className=\"col-5\" htmlFor=\"deliveryManager \">\n                      Delivery Manager{\" \"}\n                      <span className=\"error-text\">&nbsp;*</span>\n                    </label>\n                    <span className=\"col-1\">:</span>\n                    <div className=\"col-6\">\n                      <div>\n                        <input\n                          type=\"text\"\n                          className=\"form-control disableField\"\n                          disabled\n                          id=\"DeliveryManager \"\n                          required\n                          Value={deliveryMngr[0]?.DeliveryManager}\n                        />\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                <div className=\" col-md-12 mb-2\">\n                  <div className=\"form-group row\">\n                    <label className=\"col-5\" htmlFor=\"primaryManager \">\n                      Primary Manager<span className=\"error-text\">&nbsp;*</span>\n                    </label>\n                    <span className=\"col-1\">:</span>\n                    <div className=\"col-6\">\n                      <div\n                        className={`autoComplete-container ${\n                          projectData[0]?.projectStage == \"Completed\"\n                            ? \"disabledFieldStyles\"\n                            : \"\"\n                        }  reactsearchautocomplete`}\n                        ref={(ele) => {\n                          ref.current[21] = ele;\n                        }}\n                      >\n                        <ReactSearchAutocomplete\n                          items={resource}\n                          type=\"Text\"\n                          name=\"resource\"\n                          id=\"primaryManger\"\n                          //className=\"err nochange\"\n                          fuseOptions={{\n                            keys: [\"id\", \"name\"],\n                            includeScore: false,\n                            threshold: 0.3,\n                          }}\n                          resultStringKeyName=\"name\"\n                          placeholder=\"Type minimum 3 characters to get the list\"\n                          // resource={resource}\n                          // resourceFnc={resourceFnc}\n                          inputSearchString={\n                            resource.find(\n                              (item) => item.userId === projectMngr[0]?.user_id\n                            )?.name\n                          }\n                          onSelect={(e) => {\n                            setProjectMngr((ps) => {\n                              const newArr = [...ps];\n\n                              newArr[0][\"id\"] = e.id;\n\n                              return newArr;\n                            });\n                          }}\n                          showIcon={false}\n                        />\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                <div className=\" col-md-12 mb-2\">\n                  <div className=\"form-group row\">\n                    <label className=\"col-5\" htmlFor=\"projectRequestor \">\n                      Project Requestor{\" \"}\n                      <span className=\"error-text\">&nbsp;*</span>\n                    </label>\n                    <span className=\"col-1\">:</span>\n                    <div className=\"col-6\">\n                      <div>\n                        <input\n                          type=\"text\"\n                          className=\"form-control disableField\"\n                          disabled\n                          id=\"DeliveryManager \"\n                          required\n                          Value={projectRequester[0]?.ProjectRequester}\n                        />\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                <div className=\" col-md-12 mb-2\">\n                  <div className=\"form-group row\">\n                    <label className=\"col-5\" htmlFor=\"projectApprover \">\n                      Project Approver{\" \"}\n                      <span className=\"error-text\">&nbsp;*</span>\n                    </label>\n                    <span className=\"col-1\">:</span>\n                    <div className=\"col-6\">\n                      <div>\n                        <input\n                          type=\"text\"\n                          className=\"form-control disableField\"\n                          // disabled\n                          disabled\n                          id=\"DeliveryManager \"\n                          required\n                          Value={projectApprover[0]?.ProjectApprover}\n                        />\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"col-md-4 \">\n            <div className=\"group mb-0 customCard\">\n              <h2>\n                <RiProfileLine /> Services Offered\n              </h2>\n              <div className=\"group-content row\">\n                <div\n                  className=\"transferTable\"\n                  ref={(ele) => {\n                    ref.current[22] = ele;\n                  }}\n                >\n                  <Transfer\n                    className=\"transferTable\"\n                    dataSource={service}\n                    targetKeys={targetKeys}\n                    selectedKeys={selectedKeys}\n                    onChange={(nextTargetKeys) => {\n                      console.log(nextTargetKeys);\n                      setTargetKeys(nextTargetKeys);\n                      let filteredCountry = [];\n                      nextTargetKeys.forEach((d) => {\n                        filteredCountry.push(d);\n                      });\n                      setProjectData((ps) => {\n                        const newArr = [...ps];\n\n                        newArr[0][\"servicesOfferedId\"] =\n                          filteredCountry.toString();\n\n                        return newArr;\n                      });\n                      console.log(filteredCountry);\n                    }}\n                    onSelectChange={(\n                      sourceSelectedKeys,\n                      targetSelectedKeys\n                    ) => {\n                      setSelectedKeys([\n                        ...sourceSelectedKeys,\n                        ...targetSelectedKeys,\n                      ]);\n                    }}\n                    render={(item) => item.title}\n                    disabled={\n                      projectData[0]?.projectStage == \"Completed\" ? true : false\n                    }\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n          {projectData[0]?.contract == \"25\" ||\n          contract[0]?.id == \"25\" ||\n          projectData[0]?.contract == \"26\" ||\n          contract[0]?.id == \"26\" ||\n          projectData[0]?.contract == \"27\" ||\n          contract[0]?.id == \"278\" ||\n          projectData[0]?.contract == \"28\" ||\n          contract[0]?.id == \"28\" ||\n          projectData[0]?.contract == \"606\" ||\n          contract[0]?.id == \"606\" ||\n          contract[0]?.id == \"752\" ||\n          projectData[0]?.contract == \"752\" ? (\n            <div className=\"col-md-4 group mb-2 container-fluid   customCard\">\n              <div className=\"group mb-0 customCard\">\n                <h2>\n                  <RiProfileLine /> PCQA\n                </h2>\n                <div className=\"group-content row\">\n                  <div className=\" col-md-12 mb-2\">\n                    <div className=\"form-group row\">\n                      <label className=\"col-5\" htmlFor=\"deliveryManager \">\n                        Facilitator\n                      </label>\n                      <span className=\"col-1\">:</span>\n                      <div className=\"col-6\">\n                        <div\n                          className={`autoComplete-container ${\n                            projectData[0]?.projectStage == \"Completed\"\n                              ? \"disabledFieldStyles\"\n                              : \"\"\n                          }  reactsearchautocomplete`}\n                          // ref={(ele) => {\n                          //   ref.current[23] = ele;\n                          // }}\n                        >\n                          <ReactSearchAutocomplete\n                            items={resource}\n                            type=\"Text\"\n                            name=\"resource\"\n                            id=\"facilitatorID\"\n                            // className=\"err nochange\"\n                            fuseOptions={{\n                              keys: [\"id\", \"name\"],\n                              includeScore: false,\n                              threshold: 0.3,\n                            }}\n                            resultStringKeyName=\"name\"\n                            placeholder=\"Type minimum 3 characters to get the list\"\n                            inputSearchString={\n                              resource.find(\n                                (item) =>\n                                  item.id === projectData[0]?.facilitatorID\n                              )?.name\n                            }\n                            // resource={resource}\n                            // resourceFnc={resourceFnc}\n                            onSelect={(e) => {\n                              console.log(e);\n                              setProjectData((ps) => {\n                                const newArr = [...ps];\n\n                                newArr[0][\"facilitatorID\"] = e.id;\n\n                                return newArr;\n                              });\n                            }}\n                            showIcon={false}\n                          />\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\" col-md-12 mb-2\">\n                    <div className=\"form-group row\">\n                      <label className=\"col-5\" htmlFor=\"primaryManager  \">\n                        Client Email\n                      </label>\n                      <span className=\"col-1\">:</span>\n                      <div className=\"col-6\">\n                        <input\n                          type=\"text\"\n                          className=\"form-control disableField\"\n                          disabled\n                          id=\"clientEmail \"\n                          required\n                          defaultValue={projectData[0]?.clientEmail}\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\" col-md-12 mb-2\">\n                    <div className=\"form-group row\">\n                      <label className=\"col-5\" htmlFor=\"projectRequestor \">\n                        Project Type <span className=\"error-text\">&nbsp;*</span>\n                      </label>\n                      <span className=\"col-1\">:</span>\n                      <div className=\"col-6\">\n                        <select\n                          id=\"pcqa_type\"\n                          onChange={(e) => onChange(e)}\n                          disabled={\n                            projectData[0]?.projectStage == \"Completed\"\n                              ? true\n                              : false\n                          }\n                          className=\"text\"\n                          ref={(ele) => {\n                            ref.current[24] = ele;\n                          }}\n                        >\n                          <option value=\"\">\n                            {\" \"}\n                            &lt;&lt;Please Select&gt;&gt;\n                          </option>\n                          {type.map((Item) => (\n                            <option\n                              value={Item.id}\n                              selected={\n                                Item.lkup_name == projectData[0]?.projectType\n                                  ? true\n                                  : false\n                              }\n                            >\n                              {Item.lkup_name}\n                            </option>\n                          ))}\n                        </select>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          ) : (\n            \"\"\n          )}\n        </div>\n\n        <div className=\"row\">\n          <div className=\"group mb-0 col-md-4 customCard\">\n            <h2>\n              {\" \"}\n              <BiLineChart /> Risk Factor Characteristics\n            </h2>\n            {projectData[0]?.projCat == 17 ||\n            projectData[0]?.projCat == 18 ||\n            projectData[0]?.projCat == 19 ? (\n              <div className=\"group-content row\">\n                <div className=\" col-md-12 mb-2\">\n                  <div className=\"form-group row\">\n                    <label className=\"col-5\" htmlFor=\"technicalComplexity\">\n                      Technical Complexity\n                    </label>\n                    <span className=\"col-1\">:</span>\n                    <div className=\"col-6\">\n                      <select\n                        id=\"tech_complexity_id\"\n                        onChange={(e) => onChange(e)}\n                        disabled={\n                          projectData[0]?.projectStage == \"Completed\"\n                            ? true\n                            : false\n                        }\n                      >\n                        <option value=\"\"> &lt;&lt;Please Select&gt;&gt;</option>\n                        <option\n                          value=\"357\"\n                          selected={\n                            projectData[0]?.techComplexity == \"High Risk\"\n                              ? \"357\"\n                              : \"\"\n                          }\n                        >\n                          High Risk\n                        </option>\n                        <option\n                          value=\"359\"\n                          selected={\n                            projectData[0]?.techComplexity == \"Low Risk\"\n                              ? \"359\"\n                              : \"\"\n                          }\n                        >\n                          Low Risk\n                        </option>\n                        <option\n                          value=\"358\"\n                          selected={\n                            projectData[0]?.techComplexity == \"Moderate Risk\"\n                              ? \"358\"\n                              : \"\"\n                          }\n                        >\n                          Moderate Risk\n                        </option>\n                        <option\n                          value=\"360\"\n                          selected={\n                            projectData[0]?.techComplexity == \"N/A\" ? \"360\" : \"\"\n                          }\n                        >\n                          N/A\n                        </option>\n                      </select>\n                    </div>\n                  </div>\n                </div>\n                <div className=\" col-md-12 mb-2\">\n                  <div className=\"form-group row\">\n                    <label className=\"col-5\" htmlFor=\"domainSpecificChallenges\">\n                      Domain Specific Challenges\n                    </label>\n                    <span className=\"col-1\">:</span>\n                    <div className=\"col-6\">\n                      <select\n                        id=\"dom_spec_challenge_id\"\n                        onChange={(e) => onChange(e)}\n                        disabled={\n                          projectData[0]?.projectStage == \"Completed\"\n                            ? true\n                            : false\n                        }\n                      >\n                        <option value=\"\"> &lt;&lt;Please Select&gt;&gt;</option>\n                        <option\n                          value=\"357\"\n                          selected={\n                            projectData[0]?.domSpecChallenge == \"High Risk\"\n                              ? \"357\"\n                              : \"\"\n                          }\n                        >\n                          High Risk\n                        </option>\n                        <option\n                          value=\"359\"\n                          selected={\n                            projectData[0]?.domSpecChallenge == \"Low Risk\"\n                              ? \"359\"\n                              : \"\"\n                          }\n                        >\n                          Low Risk\n                        </option>\n                        <option\n                          value=\"358\"\n                          selected={\n                            projectData[0]?.domSpecChallenge == \"Moderate Risk\"\n                              ? \"358\"\n                              : \"\"\n                          }\n                        >\n                          Moderate Risk\n                        </option>\n                        <option\n                          value=\"360\"\n                          selected={\n                            projectData[0]?.domSpecChallenge == \"N/A\"\n                              ? \"360\"\n                              : \"\"\n                          }\n                        >\n                          N/A\n                        </option>\n                      </select>\n                    </div>\n                  </div>\n                </div>\n                <div className=\" col-md-12 mb-2\">\n                  <div className=\"form-group row\">\n                    <label\n                      className=\"col-5\"\n                      htmlFor=\"skilledResourcesAvailability\"\n                    >\n                      Skilled Resources Availability\n                    </label>\n                    <span className=\"col-1\">:</span>\n                    <div className=\"col-6\">\n                      <select\n                        id=\"skill_res_avail_id\"\n                        onChange={(e) => onChange(e)}\n                        disabled={\n                          projectData[0]?.projectStage == \"Completed\"\n                            ? true\n                            : false\n                        }\n                      >\n                        <option value=\"\"> &lt;&lt;Please Select&gt;&gt;</option>\n                        <option\n                          value=\"357\"\n                          selected={\n                            projectData[0]?.skillResAvail == \"High Risk\"\n                              ? \"357\"\n                              : \"\"\n                          }\n                        >\n                          High Risk\n                        </option>\n                        <option\n                          value=\"359\"\n                          selected={\n                            projectData[0]?.skillResAvail == \"Low Risk\"\n                              ? \"358\"\n                              : \"\"\n                          }\n                        >\n                          Low Risk\n                        </option>\n                        <option\n                          value=\"358\"\n                          selected={\n                            projectData[0]?.skillResAvail == \"Moderate Risk\"\n                              ? \"358\"\n                              : \"\"\n                          }\n                        >\n                          Moderate Risk\n                        </option>\n                        <option\n                          value=\"360\"\n                          selected={\n                            projectData[0]?.skillResAvail == \"N/A\" ? \"360\" : \"\"\n                          }\n                        >\n                          N/A\n                        </option>\n                      </select>\n                    </div>\n                  </div>\n                </div>\n                <div className=\" col-md-12 mb-2\">\n                  <div className=\"form-group row\">\n                    <label className=\"col-5\" htmlFor=\"depdThirdPartySystems\">\n                      Dependencies On Third Party Systems\n                    </label>\n                    <span className=\"col-1\">:</span>\n                    <div className=\"col-6\">\n                      <select\n                        id=\"dep_third_party_sys_id\"\n                        onChange={(e) => onChange(e)}\n                        disabled={\n                          projectData[0]?.projectStage == \"Completed\"\n                            ? true\n                            : false\n                        }\n                      >\n                        <option value=\"\"> &lt;&lt;Please Select&gt;&gt;</option>\n                        <option\n                          value=\"357\"\n                          selected={\n                            projectData[0]?.depThirdPartySys == \"High Risk\"\n                              ? \"357\"\n                              : \"\"\n                          }\n                        >\n                          High Risk\n                        </option>\n                        <option\n                          value=\"359\"\n                          selected={\n                            projectData[0]?.depThirdPartySys == \"Low Risk\"\n                              ? \"358\"\n                              : \"\"\n                          }\n                        >\n                          Low Risk\n                        </option>\n                        <option\n                          value=\"358\"\n                          selected={\n                            projectData[0]?.depThirdPartySys == \"Moderate Risk\"\n                              ? \"358\"\n                              : \"\"\n                          }\n                        >\n                          Moderate Risk\n                        </option>\n                        <option\n                          value=\"360\"\n                          selected={\n                            projectData[0]?.depThirdPartySys == \"N/A\"\n                              ? \"360\"\n                              : \"\"\n                          }\n                        >\n                          N/A\n                        </option>\n                      </select>\n                    </div>\n                  </div>\n                </div>\n                <div className=\" col-md-12 mb-2\">\n                  <div className=\"form-group row\">\n                    <label\n                      className=\"col-5\"\n                      htmlFor=\"devpEnvironmentAvailability\"\n                    >\n                      Development Environment Availability\n                    </label>\n                    <span className=\"col-1\">:</span>\n                    <div className=\"col-6\">\n                      <select\n                        id=\"dev_env_avail_id\"\n                        onChange={(e) => onChange(e)}\n                        disabled={\n                          projectData[0]?.projectStage == \"Completed\"\n                            ? true\n                            : false\n                        }\n                      >\n                        <option value=\"\"> &lt;&lt;Please Select&gt;&gt;</option>\n                        <option\n                          value=\"357\"\n                          selected={\n                            projectData[0]?.devEnvAvail == \"High Risk\"\n                              ? \"357\"\n                              : \"\"\n                          }\n                        >\n                          High Risk\n                        </option>\n                        <option\n                          value=\"359\"\n                          selected={\n                            projectData[0]?.devEnvAvail == \"Low Risk\"\n                              ? \"358\"\n                              : \"\"\n                          }\n                        >\n                          Low Risk\n                        </option>\n                        <option\n                          value=\"358\"\n                          selected={\n                            projectData[0]?.devEnvAvail == \"Moderate Risk\"\n                              ? \"358\"\n                              : \"\"\n                          }\n                        >\n                          Moderate Risk\n                        </option>\n                        <option\n                          value=\"360\"\n                          selected={\n                            projectData[0]?.devEnvAvail == \"N/A\" ? \"360\" : \"\"\n                          }\n                        >\n                          N/A\n                        </option>\n                      </select>\n                    </div>\n                  </div>\n                </div>\n                <div className=\" col-md-12 mb-2\">\n                  <div className=\"form-group row\">\n                    <label className=\"col-5\" htmlFor=\"custEnvId\">\n                      Dependencies on customer/Customer Environment\n                    </label>\n                    <span className=\"col-1\">:</span>\n                    <div className=\"col-6\">\n                      <select\n                        id=\"cust_env_id\"\n                        onChange={(e) => onChange(e)}\n                        disabled={\n                          projectData[0]?.projectStage == \"Completed\"\n                            ? true\n                            : false\n                        }\n                      >\n                        <option value=\"\"> &lt;&lt;Please Select&gt;&gt;</option>\n                        <option\n                          value=\"357\"\n                          selected={\n                            projectData[0]?.custEnv == \"High Risk\" ? \"357\" : \"\"\n                          }\n                        >\n                          High Risk\n                        </option>\n                        <option\n                          value=\"359\"\n                          selected={\n                            projectData[0]?.custEnv == \"Low Risk\" ? \"358\" : \"\"\n                          }\n                        >\n                          Low Risk\n                        </option>\n                        <option\n                          value=\"358\"\n                          selected={\n                            projectData[0]?.custEnv == \"Moderate Risk\"\n                              ? \"358\"\n                              : \"\"\n                          }\n                        >\n                          Moderate Risk\n                        </option>\n                        <option\n                          value=\"360\"\n                          selected={\n                            projectData[0]?.custEnv == \"N/A\" ? \"360\" : \"\"\n                          }\n                        >\n                          N/A\n                        </option>\n                      </select>\n                    </div>\n                  </div>\n                </div>\n                <div className=\" col-md-12 mb-2\">\n                  <div className=\"form-group row\">\n                    <label className=\"col-5\" htmlFor=\"profitabilityId\">\n                      Margin/Profitability\n                    </label>\n                    <span className=\"col-1\">:</span>\n                    <div className=\"col-6\">\n                      <select\n                        id=\"profitability_id\"\n                        onChange={(e) => onChange(e)}\n                        disabled={\n                          projectData[0]?.projectStage == \"Completed\"\n                            ? true\n                            : false\n                        }\n                      >\n                        <option value=\"\"> &lt;&lt;Please Select&gt;&gt;</option>\n                        <option\n                          value=\"357\"\n                          selected={\n                            projectData[0]?.profitability == \"High Risk\"\n                              ? \"357\"\n                              : \"\"\n                          }\n                        >\n                          High Risk\n                        </option>\n                        <option\n                          value=\"359\"\n                          selected={\n                            projectData[0]?.profitability == \"Low Risk\"\n                              ? \"358\"\n                              : \"\"\n                          }\n                        >\n                          Low Risk\n                        </option>\n                        <option\n                          value=\"358\"\n                          selected={\n                            projectData[0]?.profitability == \"Moderate Risk\"\n                              ? \"358\"\n                              : \"\"\n                          }\n                        >\n                          Moderate Risk\n                        </option>\n                        <option\n                          value=\"360\"\n                          selected={\n                            projectData[0]?.profitability == \"N/A\" ? \"360\" : \"\"\n                          }\n                        >\n                          N/A\n                        </option>\n                      </select>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            ) : (\n              \"\"\n            )}\n          </div>\n\n          <div className=\"group mb-0 col-md-8 customCard\">\n            <h2>\n              {\" \"}\n              <RiProfileLine /> Project KPIs\n            </h2>\n            <table className=\"table table-striped table-bordered  display\">\n              <thead>\n                <tr>\n                  <th width=\"15%\">KPI</th>\n                  <th width=\"8%\">Preliminary</th>\n                  <th width=\"13%\">Contracted</th>\n                  <th width=\"11%\">Planned</th>\n                  <th width=\"11%\">Actual</th>\n                </tr>\n              </thead>\n              <tbody>\n                <tr>\n                  <td width=\"8%\">Schedule</td>\n                  <td width=\"13%\" id=\"cont_efforts\">\n                    {projectData[0]?.preStartDate == null\n                      ? \" \"\n                      : moment(projectData[0]?.preStartDate).format(\n                          \"DD-MMM-yyyy\"\n                        )}\n                    to\n                    {projectData[0]?.preEndDate == null\n                      ? \" \"\n                      : moment(projectData[0]?.preEndDate).format(\n                          \"DD-MMM-yyyy\"\n                        )}\n                  </td>\n                  <td width=\"13%\" id=\"pln_efforts\">\n                    <div className=\"group-content row\">\n                      <DatePicker\n                        id=\"contStartDate\"\n                        className=\"\"\n                        selected={conStartDate}\n                        dateFormat=\"dd-MMM-yyyy\"\n                        showMonthDropdown\n                        showYearDropdown\n                        dropdownMode=\"select\"\n                        Value={projectData[0]?.contStartDate}\n                        onChange={(e) => {\n                          SetConStartDate(e);\n                          setProjectData((ps) => {\n                            const newArr = [...ps];\n                            newArr[0][\"contStartDate\"] =\n                              moment(e).format(\"yyyy-MM-DD\");\n                            return newArr;\n                          });\n                        }}\n                        disabled={\n                          projectData[0]?.projectStage == \"Completed\"\n                            ? true\n                            : false\n                        }\n                        onKeyDown={(e) => {\n                          e.preventDefault();\n                        }}\n                      />\n                      <DatePicker\n                        id=\"contEndDate\"\n                        className=\"\"\n                        selected={conEndDate}\n                        dateFormat=\"dd-MMM-yyyy\"\n                        showMonthDropdown\n                        Value={projectData[0]?.contEndDate}\n                        showYearDropdown\n                        dropdownMode=\"select\"\n                        onChange={(e) => {\n                          SetConEndDate(e);\n                          setProjectData((ps) => {\n                            const newArr = [...ps];\n\n                            newArr[0][\"contEndDate\"] =\n                              moment(e).format(\"yyyy-MM-DD\");\n\n                            return newArr;\n                          });\n                        }}\n                        disabled={\n                          projectData[0]?.projectStage == \"Completed\"\n                            ? true\n                            : false\n                        }\n                        onKeyDown={(e) => {\n                          e.preventDefault();\n                        }}\n                      />\n                    </div>\n                  </td>\n                  <td width=\"11%\" id=\"ptd_efforts\">\n                    <div className=\"group-content row\">\n                      <DatePicker\n                        id=\"plandStartDate\"\n                        className=\"\"\n                        selected={planStartDate}\n                        dateFormat=\"dd-MMM-yyyy\"\n                        showMonthDropdown\n                        showYearDropdown\n                        dropdownMode=\"select\"\n                        onChange={(e) => {\n                          SetPlanStartDate(e);\n                          setProjectData((ps) => {\n                            const newArr = [...ps];\n\n                            newArr[0][\"plandStartDate\"] =\n                              moment(e).format(\"yyyy-MM-DD\");\n\n                            return newArr;\n                          });\n                        }}\n                        maxDate={planStartDate}\n                        disabled={\n                          projectData[0]?.projectStage == \"Completed\"\n                            ? true\n                            : false\n                        }\n                        onKeyDown={(e) => {\n                          e.preventDefault();\n                        }}\n                      />\n                      <DatePicker\n                        id=\"plandEndDate\"\n                        className=\"\"\n                        selected={planEndDate}\n                        dateFormat=\"dd-MMM-yyyy\"\n                        showMonthDropdown\n                        showYearDropdown\n                        dropdownMode=\"select\"\n                        onChange={(e) => {\n                          SetPlanEndDate(e);\n                          setProjectData((ps) => {\n                            const newArr = [...ps];\n\n                            newArr[0][\"plandEndDate\"] =\n                              moment(e).format(\"yyyy-MM-DD\");\n\n                            return newArr;\n                          });\n                        }}\n                        minDate={planEndDate}\n                        disabled={\n                          projectData[0]?.projectStage == \"Completed\"\n                            ? true\n                            : false\n                        }\n                        onKeyDown={(e) => {\n                          e.preventDefault();\n                        }}\n                      />\n                    </div>\n                  </td>\n                  <td id=\"ptd_dur\">\n                    <div className=\"group-content row\">\n                      <DatePicker\n                        id=\"actStartDate\"\n                        type=\"text\"\n                        selected={actStartDate}\n                        dateFormat=\"dd-MMM-yyyy\"\n                        showMonthDropdown\n                        showYearDropdown\n                        placeholderText={\n                          actStartDate === undefined ? \"Actual Start Date\" : \"\"\n                        }\n                        onChange={(e) => {\n                          SetActStartDate(e);\n                          setProjectData((ps) => {\n                            const newArr = [...ps];\n\n                            newArr[0][\"actStartDate\"] =\n                              moment(e).format(\"yyyy-MM-DD\");\n\n                            return newArr;\n                          });\n                        }}\n                        maxDate={actStartDate}\n                        disabled={\n                          projectData[0]?.projectStage == \"Completed\"\n                            ? true\n                            : false\n                        }\n                        onKeyDown={(e) => {\n                          e.preventDefault();\n                        }}\n                      />\n\n                      <input\n                        className=\"col-6 disableField\"\n                        type=\"text\"\n                        disabled\n                        placeholder=\"Actual End Date\"\n                        Value={\n                          actEndDate === \"\"\n                            ? projectData[0]?.actEndDate === null ||\n                              projectData[0]?.actEndDate === undefined\n                              ? \"\"\n                              : moment(projectData[0]?.actEndDate).format(\n                                  \"DD-MMM-yyyy\"\n                                )\n                            : actEndDate === null\n                            ? \"\"\n                            : moment(actEndDate).format(\"DD-MMM-yyyy\")\n                        }\n                      />\n                    </div>\n                  </td>\n                </tr>\n                <tr>\n                  <td>Duration (Days)</td>\n                  <td id=\"cont_rev\">\n                    <div>\n                      <input\n                        className=\"disableField\"\n                        type=\"text\"\n                        disabled\n                        defaultValue={kpiData[0]?.preliminary_duration}\n                      />\n                    </div>\n                  </td>\n                  <td id=\"pln_rev\">\n                    <div>\n                      <input\n                        type=\"text\"\n                        className=\"disableField\"\n                        disabled\n                        Value={conDateDiff}\n                      />\n                    </div>\n                  </td>\n                  <td id=\"ptd_rev\">\n                    <div>\n                      <input\n                        type=\"text\"\n                        className=\"disableField\"\n                        disabled\n                        Value={plnDateDiff}\n                      />\n                    </div>\n                  </td>\n                  <td id=\"ptd_dur\">\n                    <div>\n                      <input\n                        className=\"disableField\"\n                        type=\"text\"\n                        disabled\n                        Value={kpiData[0]?.actual_duration}\n                      />\n                    </div>\n                  </td>\n                </tr>\n                <tr>\n                  <td>\n                    FTE{\" \"}\n                    <FaInfoCircle\n                      className=\"\"\n                      title=\"FTE=Effort/(Duration*8)\"\n                    />\n                  </td>\n                  <td id=\"cont_dc\">\n                    <div>\n                      <input\n                        onChange={(e) => {\n                          const input = e.target.value;\n                          const regex = /^[0-9]*\\.?[0-9]*$/; // Regular expression to match numbers\n\n                          if (!regex.test(input)) {\n                            e.target.value = input.replace(/[^0-9.]/g, \"\"); // Remove non-numeric characters\n                          }\n                          onchangeForAll(e);\n                        }}\n                        id=\"priliminaryFte\"\n                        className=\"cancel\"\n                        disabled={\n                          projectData[0]?.projectStage == \"Completed\"\n                            ? true\n                            : false\n                        }\n                        type=\"text\"\n                        value={\n                          projectData[0]?.fte == null ? 0 : projectData[0]?.fte\n                        }\n                      />\n                    </div>\n                  </td>\n                  <td id=\"pln_dc\">\n                    <div>\n                      <input\n                        onChange={(e) => {\n                          const input = e.target.value;\n                          const regex = /^[0-9]*\\.?[0-9]*$/; // Regular expression to match numbers\n\n                          if (!regex.test(input)) {\n                            e.target.value = input.replace(/[^0-9.]/g, \"\"); // Remove non-numeric characters\n                          }\n                          onchangeForAll(e);\n                        }}\n                        className=\"disableField cancel\"\n                        id=\"contractFte\"\n                        type=\"text\"\n                        disabled\n                        value={\n                          // kpiData[0]?.contracted_fte == null\n                          //   ? 0\n                          //   : kpiData[0]?.contracted_fte\n                          plnFTE\n                        }\n                      />\n                    </div>\n                  </td>\n                  <td id=\"ptd_dc\">\n                    <div>\n                      <input\n                        className=\"disableField\"\n                        type=\"text\"\n                        disabled\n                        value={\n                          // kpiData[0]?.planned_fte == null\n                          //   ? 0\n                          //   : kpiData[0]?.planned_fte\n                          conFTE\n                        }\n                      />\n                    </div>\n                  </td>\n                  <td id=\"ptd_dur\">\n                    <div>\n                      <input\n                        className=\"disableField cancel\"\n                        type=\"text\"\n                        disabled\n                        value={\n                          kpiData[0]?.actual_fte == null\n                            ? 0\n                            : (kpiData[0]?.actual_fte + 0.01).toFixed(2)\n                        }\n                      />\n                    </div>\n                  </td>\n                </tr>\n                <tr>\n                  <td>Effort (Hrs)</td>\n                  <td id=\"cont_oc\">\n                    <div\n                      className=\"cancel\"\n                      ref={(ele) => {\n                        ref.current[25] = ele;\n                      }}\n                    >\n                      <input\n                        className=\"cancel\"\n                        id=\"priliminaryEfforts\"\n                        type=\"text\"\n                        onChange={(e) => {\n                          const input = e.target.value;\n                          const regex = /^[0-9]*\\.?[0-9]*$/; // Regular expression to match numbers\n\n                          if (!regex.test(input)) {\n                            e.target.value = input.replace(/[^0-9.]/g, \"\"); // Remove non-numeric characters\n                          }\n                          onchangeForAll(e);\n                        }}\n                        disabled={\n                          projectData[0]?.projectStage == \"Completed\"\n                            ? true\n                            : false\n                        }\n                        Value={\n                          typeof efforts.priliminaryEfforts === \"number\"\n                            ? efforts.priliminaryEfforts.toFixed(2)\n                            : efforts.priliminaryEfforts === \"\"\n                            ? \"0.00\"\n                            : efforts.priliminaryEfforts === null\n                            ? \"N/A\"\n                            : efforts.priliminaryEfforts\n                        }\n                      />\n                    </div>\n                  </td>\n                  <td id=\"ptd_oc\">\n                    <div\n                      className=\"cancel\"\n                      ref={(ele) => {\n                        ref.current[26] = ele;\n                      }}\n                    >\n                      <input\n                        id=\"contractedEfforts\"\n                        className=\"cancel\"\n                        type=\"text\"\n                        onChange={(e) => {\n                          const input = e.target.value;\n                          const regex = /^[0-9]*\\.?[0-9]*$/; // Regular expression to match numbers\n\n                          if (!regex.test(input)) {\n                            e.target.value = input.replace(/[^0-9.]/g, \"\"); // Remove non-numeric characters\n                          }\n                          onchangeForAll(e);\n                        }}\n                        disabled={\n                          projectData[0]?.projectStage == \"Completed\"\n                            ? true\n                            : false\n                        }\n                        Value={\n                          typeof efforts.contractedEfforts === \"number\"\n                            ? efforts.contractedEfforts.toFixed(2)\n                            : efforts.contractedEfforts === \"\"\n                            ? \"0.00\"\n                            : efforts.contractedEfforts === null\n                            ? \"N/A\"\n                            : efforts.contractedEfforts\n                        }\n                      />\n                    </div>\n                  </td>\n                  <td id=\"atd_oc\">\n                    <div>\n                      <input\n                        className=\"disableField cancel\"\n                        type=\"text\"\n                        disabled\n                        Value={\n                          kpiData[0]?.planned_hours == null\n                            ? 0\n                            : kpiData[0]?.planned_hours?.toLocaleString(\"en-IN\")\n                        }\n                      />\n                    </div>\n                  </td>\n                  <td id=\"ptd_dur\">\n                    <div>\n                      <input\n                        className=\"disableField cancel\"\n                        type=\"text\"\n                        disabled\n                        Value={\n                          kpiData[0]?.actual_hours == null\n                            ? 0\n                            : kpiData[0]?.actual_hours?.toLocaleString(\"en-IN\")\n                        }\n                      />\n                    </div>\n                  </td>\n                </tr>\n                <tr>\n                  <td>Revenue</td>\n                  <td id=\"revenue\">\n                    <div\n                      className=\"cancel\"\n                      ref={(ele) => {\n                        ref.current[27] = ele;\n                      }}\n                    >\n                      <input\n                        id=\"revenue\"\n                        // className=\"cancel\"\n                        type=\"text\"\n                        onChange={(e) => {\n                          const input = e.target.value;\n                          const regex = /^[0-9]*\\.?[0-9]*$/; // Regular expression to match numbers\n\n                          if (!regex.test(input)) {\n                            e.target.value = input.replace(/[^0-9.]/g, \"\"); // Remove non-numeric characters\n                          }\n                          onchangeForAll(e);\n                        }}\n                        disabled={\n                          projectData[0]?.projectStage == \"Completed\"\n                            ? true\n                            : false\n                        }\n                        Value={\n                          typeof revenue.revenue === \"number\"\n                            ? revenue.revenue.toFixed(2)\n                            : revenue.revenue === \"\"\n                            ? \"0.00\"\n                            : revenue.revenue === null\n                            ? \"N/A\"\n                            : revenue.revenue\n                        }\n                      />\n                    </div>\n                  </td>\n                  <td id=\"pln_margin\">\n                    <div\n                      className=\"cancel\"\n                      ref={(ele) => {\n                        ref.current[28] = ele;\n                      }}\n                    >\n                      <input\n                        id=\"contractedRevenue\"\n                        className=\"cancel\"\n                        type=\"text\"\n                        onChange={(e) => {\n                          const input = e.target.value;\n                          const regex = /^[0-9]*\\.?[0-9]*$/; // Regular expression to match numbers\n\n                          if (!regex.test(input)) {\n                            e.target.value = input.replace(/[^0-9.]/g, \"\"); // Remove non-numeric characters\n                          }\n                          onchangeForAll(e);\n                        }}\n                        disabled={\n                          projectData[0]?.projectStage == \"Completed\"\n                            ? true\n                            : false\n                        }\n                        Value={\n                          typeof revenue.contractedRevenue === \"number\"\n                            ? revenue.contractedRevenue.toFixed(2)\n                            : revenue.contractedRevenue === \"\"\n                            ? \"0.00\"\n                            : revenue.contractedRevenue === null\n                            ? \"N/A\"\n                            : revenue.contractedRevenue\n                        }\n                      />\n                    </div>\n                  </td>\n                  <td id=\"ptd_margin\">\n                    <div>\n                      <input\n                        className=\"disableField\"\n                        type=\"text\"\n                        disabled\n                        onChange={(e) => {\n                          const input = e.target.value;\n                          const regex = /^[0-9]*\\.?[0-9]*$/; // Regular expression to match numbers\n\n                          if (!regex.test(input)) {\n                            e.target.value = input.replace(/[^0-9.]/g, \"\"); // Remove non-numeric characters\n                          }\n                          onchangeForAll(e);\n                        }}\n                        value={\n                          kpiData[0]?.planned_revenue == \"\" ||\n                          kpiData[0]?.planned_revenue == null\n                            ? 0\n                            : kpiData[0]?.planned_revenue?.toLocaleString(\n                                \"en-IN\"\n                              )\n                        }\n                      />\n                    </div>\n                  </td>\n                  <td id=\"ptd_dur\">\n                    <div>\n                      <input\n                        className=\"disableField\"\n                        type=\"text\"\n                        disabled\n                        value={\n                          kpiData[0]?.actual_revenue == null\n                            ? 0\n                            : kpiData[0]?.actual_revenue?.toLocaleString(\n                                \"en-IN\"\n                              )\n                        }\n                      />\n                    </div>\n                  </td>\n                </tr>\n                <tr>\n                  <td>Resource Direct Cost</td>\n                  <td id=\"cont_dur\">\n                    <div\n                      className=\"cancel\"\n                      ref={(ele) => {\n                        ref.current[29] = ele;\n                      }}\n                    >\n                      <input\n                        className=\"cancel\"\n                        id=\"priliminaryRDC\"\n                        name=\"priliminaryRDC\"\n                        onChange={(e) => {\n                          const input = e.target.value;\n                          const regex = /^[0-9]*\\.?[0-9]*$/; // Regular expression to match numbers\n\n                          if (!regex.test(input)) {\n                            e.target.value = input.replace(/[^0-9.]/g, \"\"); // Remove non-numeric characters\n                          }\n                          onchangeForAll(e);\n                        }}\n                        disabled={\n                          projectData[0]?.projectStage == \"Completed\"\n                            ? true\n                            : false\n                        }\n                        type=\"text\"\n                        Value={\n                          typeof directCost.priliminaryRDC === \"number\"\n                            ? directCost.priliminaryRDC.toFixed(2)\n                            : directCost.priliminaryRDC === \"\"\n                            ? \"0.00\"\n                            : directCost.priliminaryRDC === null\n                            ? \"N/A\"\n                            : directCost.priliminaryRDC\n                        }\n                      />\n                    </div>\n                  </td>\n                  <td id=\"pln_dur\">\n                    <div\n                      className=\"cancel\"\n                      ref={(ele) => {\n                        ref.current[30] = ele;\n                      }}\n                    >\n                      <input\n                        id=\"ContractRDC\"\n                        type=\"text\"\n                        className=\"cancel\"\n                        onChange={(e) => {\n                          const input = e.target.value;\n                          const regex = /^[0-9]*\\.?[0-9]*$/; // Regular expression to match numbers\n\n                          if (!regex.test(input)) {\n                            e.target.value = input.replace(/[^0-9.]/g, \"\"); // Remove non-numeric characters\n                          }\n                          onchangeForAll(e);\n                        }}\n                        disabled={\n                          projectData[0]?.projectStage == \"Completed\"\n                            ? true\n                            : false\n                        }\n                        Value={\n                          typeof directCost.ContractRDC === \"number\"\n                            ? directCost.ContractRDC.toFixed(2)\n                            : directCost.ContractRDC === \"\"\n                            ? \"0.00\"\n                            : directCost.ContractRDC === null\n                            ? \"N/A\"\n                            : directCost.ContractRDC\n                        }\n                      />\n                    </div>\n                  </td>\n                  <td id=\"ptd_dur\">\n                    <div>\n                      <input\n                        className=\"disableField cancel\"\n                        type=\"text\"\n                        disabled\n                        onChange={(e) => {\n                          const input = e.target.value;\n                          const regex = /^[0-9]*\\.?[0-9]*$/; // Regular expression to match numbers\n\n                          if (!regex.test(input)) {\n                            e.target.value = input.replace(/[^0-9.]/g, \"\"); // Remove non-numeric characters\n                          }\n                          onchangeForAll(e);\n                        }}\n                        Value={\n                          kpiData[0]?.planned_direct_cost == null\n                            ? 0\n                            : kpiData[0]?.planned_direct_cost?.toLocaleString(\n                                \"en-IN\"\n                              )\n                        }\n                      />\n                    </div>\n                  </td>\n                  <td id=\"ptd_dur\">\n                    <div>\n                      <input\n                        className=\"disableField\"\n                        type=\"text\"\n                        disabled\n                        onChange={(e) => {\n                          const input = e.target.value;\n                          const regex = /^[0-9]*\\.?[0-9]*$/; // Regular expression to match numbers\n\n                          if (!regex.test(input)) {\n                            e.target.value = input.replace(/[^0-9.]/g, \"\"); // Remove non-numeric characters\n                          }\n                          onchangeForAll(e);\n                        }}\n                        value={\n                          kpiData[0]?.actual_direct_cost == null\n                            ? 0\n                            : kpiData[0]?.actual_direct_cost?.toLocaleString(\n                                \"en-IN\"\n                              )\n                        }\n                      />\n                    </div>\n                  </td>\n                </tr>\n                <tr>\n                  <td>Other Cost</td>\n                  <td id=\"cont_dur\">\n                    <div\n                      className=\"cancel\"\n                      ref={(ele) => {\n                        ref.current[31] = ele;\n                      }}\n                    >\n                      <input\n                        id=\"priliminaryOtherCost\"\n                        className=\"cancel\"\n                        onChange={(e) => {\n                          const input = e.target.value;\n                          const regex = /^[0-9]*\\.?[0-9]*$/; // Regular expression to match numbers\n\n                          if (!regex.test(input)) {\n                            e.target.value = input.replace(/[^0-9.]/g, \"\"); // Remove non-numeric characters\n                          }\n                          onchangeForAll(e);\n                        }}\n                        disabled={\n                          projectData[0]?.projectStage == \"Completed\"\n                            ? true\n                            : false\n                        }\n                        type=\"text\"\n                        Value={\n                          typeof otherCost.priliminaryOtherCost === \"number\"\n                            ? otherCost.priliminaryOtherCost.toFixed(2)\n                            : otherCost.priliminaryOtherCost === \"\"\n                            ? \"0.00\"\n                            : otherCost.priliminaryOtherCost === null\n                            ? \"N/A\"\n                            : otherCost.priliminaryOtherCost\n                        }\n                      />\n                    </div>\n                  </td>\n                  <td id=\"pln_dur\">\n                    <div\n                      className=\"cancel\"\n                      ref={(ele) => {\n                        ref.current[32] = ele;\n                      }}\n                    >\n                      <input\n                        id=\"contarctOtherCost\"\n                        className=\"cancel\"\n                        onChange={(e) => {\n                          const input = e.target.value;\n                          const regex = /^[0-9]*\\.?[0-9]*$/; // Regular expression to match numbers\n\n                          if (!regex.test(input)) {\n                            e.target.value = input.replace(/[^0-9.]/g, \"\"); // Remove non-numeric characters\n                          }\n                          onchangeForAll(e);\n                        }}\n                        disabled={\n                          projectData[0]?.projectStage == \"Completed\"\n                            ? true\n                            : false\n                        }\n                        type=\"text\"\n                        Value={\n                          typeof otherCost.contarctOtherCost === \"number\"\n                            ? otherCost.contarctOtherCost.toFixed(2)\n                            : otherCost.contarctOtherCost === \"\"\n                            ? \"0.00\"\n                            : otherCost.contarctOtherCost === null\n                            ? \"N/A\"\n                            : otherCost.contarctOtherCost\n                        }\n                      />\n                    </div>\n                  </td>\n                  <td id=\"ptd_dur\">\n                    <div>\n                      <input\n                        type=\"text\"\n                        className=\"disableField\"\n                        disabled\n                        onChange={(e) => {\n                          const input = e.target.value;\n                          const regex = /^[0-9]*\\.?[0-9]*$/; // Regular expression to match numbers\n\n                          if (!regex.test(input)) {\n                            e.target.value = input.replace(/[^0-9.]/g, \"\"); // Remove non-numeric characters\n                          }\n                          onchangeForAll(e);\n                        }}\n                        value={\n                          kpiData[0]?.planned_other_cost == null\n                            ? 0\n                            : kpiData[0]?.planned_other_cost?.toLocaleString(\n                                \"en-IN\"\n                              )\n                        }\n                      />\n                    </div>\n                  </td>\n                  <td id=\"ptd_dur\">\n                    <div>\n                      <input\n                        className=\"disableField\"\n                        type=\"text\"\n                        disabled\n                        onChange={(e) => {\n                          const input = e.target.value;\n                          const regex = /^[0-9]*\\.?[0-9]*$/; // Regular expression to match numbers\n\n                          if (!regex.test(input)) {\n                            e.target.value = input.replace(/[^0-9.]/g, \"\"); // Remove non-numeric characters\n                          }\n                          onchangeForAll(e);\n                        }}\n                        value={\n                          kpiData[0]?.actual_other_cost == null\n                            ? 0\n                            : kpiData[0]?.actual_other_cost?.toLocaleString(\n                                \"en-IN\"\n                              )\n                        }\n                      />\n                    </div>\n                  </td>\n                </tr>\n                <tr>\n                  <td>\n                    Gross Margin{\" \"}\n                    <FaInfoCircle\n                      className=\"\"\n                      title=\"GrossMargin=Revenue-(RDC+OC)\"\n                    />\n                  </td>\n                  <td id=\"cont_dur\">\n                    <div>\n                      <input\n                        disabled\n                        className=\"disableField\"\n                        type=\"text\"\n                        onChange={(e) => {\n                          const input = e.target.value;\n                          const regex = /^[0-9]*\\.?[0-9]*$/; // Regular expression to match numbers\n\n                          if (!regex.test(input)) {\n                            e.target.value = input.replace(/[^0-9.]/g, \"\"); // Remove non-numeric characters\n                          }\n                          onchangeForAll(e);\n                        }}\n                        value={resultPreGrossMargin}\n                      />\n                    </div>\n                  </td>\n                  <td id=\"pln_dur\">\n                    <div>\n                      <input\n                        type=\"text\"\n                        className=\"disableField\"\n                        disabled\n                        value={contractResult}\n                      />\n                    </div>\n                  </td>\n                  <td id=\"ptd_dur\">\n                    <div>\n                      <input\n                        type=\"text\"\n                        className=\"disableField\"\n                        disabled\n                        value={\n                          kpiData[0]?.planned_revenue == null\n                            ? container.textContent + \" \" + 0\n                            : container.textContent +\n                              \" \" +\n                              (\n                                kpiData[0]?.planned_revenue -\n                                (kpiData[0]?.planned_direct_cost +\n                                  kpiData[0]?.planned_other_cost)\n                              )?.toLocaleString(\"en-IN\")\n                        }\n                      />\n                    </div>\n                  </td>\n                  <td id=\"ptd_dur\">\n                    <div>\n                      <input\n                        type=\"text\"\n                        className=\"disableField\"\n                        disabled\n                        value={\n                          kpiData[0]?.actual_revenue == null\n                            ? container.textContent + \" \" + 0\n                            : container.textContent +\n                              \" \" +\n                              (\n                                kpiData[0]?.actual_revenue -\n                                (kpiData[0]?.actual_direct_cost +\n                                  kpiData[0]?.actual_other_cost)\n                              )?.toLocaleString(\"en-IN\")\n                        }\n                      />\n                    </div>\n                  </td>\n                </tr>\n                <tr>\n                  <td>\n                    GM %{\" \"}\n                    <FaInfoCircle\n                      className=\"\"\n                      title=\"GM %=(Revenue-(RDC+OC)/Revenue)*100\"\n                    />\n                  </td>\n                  <td id=\"cont_dur\">\n                    <div>\n                      <input\n                        type=\"text\"\n                        className=\"disableField\"\n                        disabled\n                        value={resultGM}\n                      />\n                    </div>\n                  </td>\n                  <td id=\"pln_dur\">\n                    <div>\n                      <input\n                        type=\"text\"\n                        className=\"disableField\"\n                        disabled\n                        value={contractGMResult}\n                      />\n                    </div>\n                  </td>\n                  <td id=\"ptd_dur\">\n                    <div>\n                      <input\n                        type=\"text\"\n                        className=\"disableField\"\n                        disabled\n                        value={\n                          kpiData[0]?.planned_revenue == null\n                            ? \"NA\"\n                            : (\n                                Math.round(\n                                  (((kpiData[0]?.planned_revenue -\n                                    (kpiData[0]?.planned_direct_cost +\n                                      kpiData[0]?.planned_other_cost)) *\n                                    100) /\n                                    kpiData[0]?.planned_revenue) *\n                                    100\n                                ) / 100\n                              )?.toLocaleString(\"en-IN\")\n                        }\n                      />\n                    </div>\n                  </td>\n                  <td id=\"ptd_dur\">\n                    <div>\n                      <input\n                        type=\"text\"\n                        className=\"disableField\"\n                        disabled\n                        value={\n                          kpiData[0]?.actual_revenue == null\n                            ? \"NA\"\n                            : (\n                                Math.round(\n                                  (((kpiData[0]?.actual_revenue -\n                                    (kpiData[0]?.actual_direct_cost +\n                                      kpiData[0]?.actual_other_cost)) *\n                                    100) /\n                                    kpiData[0]?.actual_revenue) *\n                                    100\n                                ) / 100\n                              )?.toLocaleString(\"en-IN\")\n                        }\n                      />\n                    </div>\n                  </td>\n                </tr>\n              </tbody>\n            </table>\n          </div>\n        </div>\n\n        {/* ///////////////////////////////////Save & Cancel///////////////////////////////////// */}\n        <div className=\" form-group col-md-12 col-sm-12 col-xs-12 btn-container center my-3 mb-2\">\n          <button\n            className=\"btn btn-primary\"\n            type=\"submit\"\n            onClick={() => handleClick()}\n          >\n            <FaSave /> Save\n          </button>\n          <button\n            className=\"btn btn-secondary\"\n            onClick={() => {\n              getProjectOverviewData();\n              getProjectMngr();\n              getEfforts();\n              getRevenue();\n              getDirectCost();\n              getOtherCost();\n            }}\n          >\n            <ImCross fontSize={\"11px\"} /> Cancel\n          </button>\n        </div>\n      </div>\n      {open ? <Loader handleAbort={handleAbort} /> : \"\"}\n\n      {popup ? (\n        <StagePopUp\n          popup={popup}\n          setPopup={setPopup}\n          handleDateUpdate={handleDateUpdate}\n          handleNo={handleNo}\n          popUpValue={popUpValue}\n          setStgValue={setStgValue}\n          stgValue={stgValue}\n        />\n      ) : (\n        \"\"\n      )}\n    </div>\n  );\n}\nexport default ProjectEdit;\n","import * as React from \"react\";\nimport TreeView from \"@mui/lab/TreeView\";\nimport PropTypes from \"prop-types\";\nimport SvgIcon from \"@mui/material/SvgIcon\";\nimport { alpha, styled } from \"@mui/material/styles\";\nimport TreeItem, { useTreeItem, treeItemClasses } from \"@mui/lab/TreeItem\";\nimport Collapse from \"@mui/material/Collapse\";\nimport { useSpring, animated } from \"@react-spring/web\";\nimport { FaBriefcase, FaUserAlt } from \"react-icons/fa\";\nimport { signal } from \"@preact/signals\";\nimport axios from \"axios\";\nimport { environment } from \"../../environments/environment\";\nimport \"./projecthierarchy.scss\";\nimport clsx from \"clsx\";\nimport Box from \"@mui/material/Box\";\nimport competenciesTable from \"../ProgressComponent/competenciesTable\";\nimport Typography from \"@mui/material/Typography\";\nimport { useState } from \"react\";\nimport { useRef } from \"react\";\nimport { useEffect } from \"react\";\nconst baseUrl = environment.baseUrl;\n\nfunction MinusSquare(props) {\n  return (\n    <SvgIcon fontSize=\"inherit\" style={{ width: 14, height: 14 }} {...props}>\n      <path d=\"M22.047 22.074v0 0-20.147 0h-20.12v0 20.147 0h20.12zM22.047 24h-20.12q-.803 0-1.365-.562t-.562-1.365v-20.147q0-.776.562-1.351t1.365-.575h20.147q.776 0 1.351.575t.575 1.351v20.147q0 .803-.575 1.365t-1.378.562v0zM17.873 11.023h-11.826q-.375 0-.669.281t-.294.682v0q0 .401.294 .682t.669.281h11.826q.375 0 .669-.281t.294-.682v0q0-.401-.294-.682t-.669-.281z\" />\n    </SvgIcon>\n  );\n}\n\nfunction CloseSquare(props) {\n  return (\n    <SvgIcon\n      className=\"close\"\n      fontSize=\"inherit\"\n      style={{ width: 14, height: 14 }}\n      {...props}\n    >\n      <path d=\"M17.485 17.512q-.281.281-.682.281t-.696-.268l-4.12-4.147-4.12 4.147q-.294.268-.696.268t-.682-.281-.281-.682.294-.669l4.12-4.147-4.12-4.147q-.294-.268-.294-.669t.281-.682.682-.281.696 .268l4.12 4.147 4.12-4.147q.294-.268.696-.268t.682.281 .281.669-.294.682l-4.12 4.147 4.12 4.147q.294.268 .294.669t-.281.682zM22.047 22.074v0 0-20.147 0h-20.12v0 20.147 0h20.12zM22.047 24h-20.12q-.803 0-1.365-.562t-.562-1.365v-20.147q0-.776.562-1.351t1.365-.575h20.147q.776 0 1.351.575t.575 1.351v20.147q0 .803-.575 1.365t-1.378.562v0z\" />\n    </SvgIcon>\n  );\n}\n\nfunction PlusSquare(props) {\n  return (\n    <SvgIcon fontSize=\"inherit\" style={{ width: 14, height: 14 }} {...props}>\n      <path d=\"M22.047 22.074v0 0-20.147 0h-20.12v0 20.147 0h20.12zM22.047 24h-20.12q-.803 0-1.365-.562t-.562-1.365v-20.147q0-.776.562-1.351t1.365-.575h20.147q.776 0 1.351.575t.575 1.351v20.147q0 .803-.575 1.365t-1.378.562v0zM17.873 12.977h-4.923v4.896q0 .401-.281.682t-.682.281v0q-.375 0-.669-.281t-.294-.682v-4.896h-4.923q-.401 0-.682-.294t-.281-.669v0q0-.401.281-.682t.682-.281h4.923v-4.896q0-.401.294-.682t.669-.281v0q.401 0 .682.281t.281.682v4.896h4.923q.401 0 .682.281t.281.682v0q0 .375-.281.669t-.682.294z\" />\n    </SvgIcon>\n  );\n}\n\nfunction TransitionComponent(props) {\n  const style = useSpring({\n    from: {\n      opacity: 0,\n      transform: \"translate3d(20px,0,0)\",\n    },\n    to: {\n      opacity: props.in ? 1 : 0,\n      transform: `translate3d(${props.in ? 0 : 20}px,0,0)`,\n    },\n  });\n\n  return (\n    <animated.div style={style}>\n      <Collapse {...props} />\n    </animated.div>\n  );\n}\n\nTransitionComponent.propTypes = {\n  /**\n   * Show the component; triggers the enter or exit states\n   */\n  in: PropTypes.bool,\n};\nconst competencyTableData = signal([]);\n\nconst ProjectHierarchyTree = React.memo(\n  (props) => {\n    const {\n      defaultExpandedRows,\n      data,\n      setFlag,\n      flag,\n      setTableData,\n      projectName,\n      hierarchyCount,\n    } = props;\n    const [dataProjectId, setDataProjectId] = useState(\"\");\n    let modData;\n    const jsonToTree = (flatArray, options) => {\n      options = {\n        id: \"id\",\n        parentId: \"parent\",\n        children: \"subrows\",\n        ...options,\n      };\n      const dictionary = {}; // a hash table mapping to the specific array objects with their ids as key\n      const tree = [];\n      const children = options.children;\n      flatArray.forEach((node) => {\n        const nodeId = node[options.id];\n        const nodeParentId = node[options.parentId];\n        // set up current node data in dictionary\n        dictionary[nodeId] = {\n          [children]: [], // init a children property\n          ...node, // add other propertys\n          ...dictionary[nodeId], // children will be replaced if this node already has children property which was set below\n        };\n        dictionary[nodeParentId] = dictionary[nodeParentId] || {\n          [children]: [],\n        }; // if it's not exist in dictionary, init an object with children property\n        dictionary[nodeParentId][children].push(dictionary[nodeId]); // add reference to current node object in parent node object\n      });\n      // find root nodes\n      Object.values(dictionary).forEach((obj) => {\n        if (typeof obj[options.id] === \"undefined\") {\n          tree.push(...obj[children]);\n        }\n      });\n      return tree;\n    };\n\n    const hierarchy = jsonToTree(data);\n\n    const fromDate = new Date(projectName.projectFromDate);\n    const date = new Date(fromDate);\n    const formattedFromDate = `${date.getDate()} ${date.toLocaleString(\n      \"default\",\n      { month: \"short\" }\n    )} ${date.getFullYear()}`;\n\n    const toDate = new Date(projectName.projectToDate);\n    const tdate = new Date(toDate);\n    const formattedToDate = `${tdate.getDate()} ${tdate.toLocaleString(\n      \"default\",\n      { month: \"short\" }\n    )} ${tdate.getFullYear()}`;\n\n    let a1 = document.getElementsByClassName(\"iconContainer\");\n\n    useEffect(() => {\n      setTimeout(() => {\n        addFolderIcon();\n      }, 500);\n\n      let aa = document.getElementsByClassName(\n        \"MuiTreeView-root hierarchyTree\"\n      );\n\n      document.addEventListener(\n        \"click\",\n        function (params) {\n          setTimeout(() => {\n            const boxes = Array.from(\n              document.getElementsByClassName(\"iconContainer\")\n            );\n            let bb = Array.from(boxes[0].children);\n            bb.forEach((box) => {\n              if (box.tagName == \"SPAN\") {\n                box.remove();\n              }\n            });\n\n            if (a1[0]?.children[1]?.tagName == \"SPAN\") {\n              return;\n            }\n            addFolderIcon();\n          }, 500);\n        },\n        true\n      );\n    }, []);\n\n    const addFolderIcon = () => {\n      let spn = document.createElement(\"span\");\n      spn.innerHTML =\n        '<svg stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" viewBox=\"0 0 512 512\" class=\"hierarchyIcons folder\" height=\"1em\" width=\"1em\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M320 336c0 8.84-7.16 16-16 16h-96c-8.84 0-16-7.16-16-16v-48H0v144c0 25.6 22.4 48 48 48h416c25.6 0 48-22.4 48-48V288H320v48zm144-208h-80V80c0-25.6-22.4-48-48-48H176c-25.6 0-48 22.4-48 48v48H48c-25.6 0-48 22.4-48 48v80h512v-80c0-25.6-22.4-48-48-48zm-144 0H192V96h128v32z\"></path></svg>';\n      a1[0].appendChild(spn);\n    };\n\n    // expand and collapse only when click on icon(plus or minus icons) not on element\n    const CustomContent = React.forwardRef(function CustomContent(props, ref) {\n      const {\n        classes,\n        className,\n        label,\n        nodeId,\n        icon: iconProp,\n        expansionIcon,\n        displayIcon,\n      } = props;\n\n      const {\n        disabled,\n        expanded,\n        selected,\n        focused,\n        handleExpansion,\n        handleSelection,\n        preventSelection,\n      } = useTreeItem(nodeId);\n\n      const icon = iconProp || expansionIcon || displayIcon;\n\n      const handleMouseDown = (event) => {\n        preventSelection(event);\n      };\n\n      const handleExpansionClick = (event) => {\n        handleExpansion(event);\n      };\n\n      const handleSelectionClick = async (event) => {\n        // debugger;\n        handleSelection(event);\n        console.log(event);\n        let propData = nodeId;\n        let splitdata = propData?.split(\"_\")[2];\n        let projectId = propData?.split(\"_\")[0];\n        let roleId = propData?.split(\"_\")[1];\n\n        let fData = competenciesTable(\n          splitdata,\n          projectId,\n          roleId,\n          setDataProjectId,\n          setFlag,\n          setTableData\n        );\n      };\n\n      return (\n        <div\n          className={clsx(className, classes.root, {\n            [classes.expanded]: expanded,\n            [classes.selected]: selected,\n            [classes.focused]: focused,\n            [classes.disabled]: disabled,\n          })}\n          onMouseDown={handleMouseDown}\n          ref={ref}\n        >\n          <div onClick={handleExpansionClick} className={classes.iconContainer}>\n            {icon}\n          </div>\n          <Typography\n            onClick={handleSelectionClick}\n            component=\"div\"\n            // className={classes.label}\n          >\n            {label}\n          </Typography>\n        </div>\n      );\n    });\n\n    const hasChildren = (nodeId) => {\n      const isParent = data.find((obj) => obj.parent == nodeId);\n      return isParent ? true : false;\n    };\n\n    const StyledTreeItem = styled((props) => (\n      <div className=\"hierarchy tree\">\n        <TreeItem\n          ContentComponent={CustomContent} // expanding only when click on plus icon\n          {...props}\n          key={String(props.node.id)}\n          nodeId={String(props.node.id)}\n          icon={!hasChildren(props.node?.id) ? <CloseSquare /> : \"\"}\n          label={\n            <Box sx={{ display: \"flex\", alignItems: \"center\", p: 0.5, pr: 0 }}>\n              <Box color=\"inherit\" sx={{ mr: 1 }} />\n\n              <Typography\n                variant=\"body2\"\n                sx={{ fontWeight: \"inherit\", flexGrow: 1 }}\n              >\n                <span\n                  style={{\n                    color: props.node.text.includes(\"span\")\n                      ? props.node.text.split('\"')[1].split(\":\")[1]\n                      : \"\",\n                    fontWeight: props.node.parent.includes(\"#\") ? \"bold\" : \"\",\n                  }}\n                >\n                  <span\n                    style={{\n                      fontWeight: props.node.text.includes(\"b\") ? \"bold\" : \"\",\n                    }}\n                  >\n                    {<FaUserAlt />}&nbsp; &nbsp;\n                    {props.node.text.includes(\"span\")\n                      ? props.node.text\n                          .split('\">')[1]\n                          .split(\"(\")[0]\n                          .replaceAll(\"<b>\", \"\")\n                          .replaceAll(\"</b>\", \"\")\n                      : props.node.text\n                          .split(\"(\")[0]\n                          .replaceAll(\"<b>\", \"\")\n                          .replaceAll(\"</b>\", \"\")}\n                    {}\n                  </span>\n                  <span>\n                    {\" \"}\n                    {props.node.text.split(\"(\")[1] != undefined\n                      ? props.node.text.split(\"(\")[1].includes(\"span\")\n                        ? \"(\" +\n                          props.node.text\n                            .split(\"(\")[1]\n                            .replaceAll(\"</span>\", \"\")\n                        : \"(\" + props.node.text.split(\"(\")[1]\n                      : \"\"}\n                  </span>\n                </span>\n              </Typography>\n            </Box>\n          }\n          TransitionComponent={TransitionComponent}\n          title={\n            props.node.text.split(\"(\")[1] != undefined &&\n            props.node.text.split(\"(\")[1].includes(\"span\")\n              ? \"\"\n              : \"From Date    : \" +\n                formattedFromDate +\n                \"\\n\" +\n                \"To Date         : \" +\n                formattedToDate\n          }\n        >\n          {Array.isArray(props.node.subrows)\n            ? props.node.subrows.map((node) => renderTree(node))\n            : \"\"}\n        </TreeItem>\n      </div>\n    ))(({ theme }) => ({\n      [`& .${treeItemClasses.iconContainer}`]: {\n        \"& .close\": {\n          opacity: 0.3,\n        },\n      },\n      [`& .${treeItemClasses.group}`]: {\n        marginLeft: 15,\n        paddingLeft: 18,\n        borderLeft: `1px dashed ${alpha(theme.palette.text.primary, 0.4)}`,\n      },\n    }));\n\n    const temp = (data, projectId, roleId) => {\n      setDataProjectId(data + \"_\" + projectId);\n      setFlag(data == undefined ? false : true);\n\n      axios({\n        method: \"get\",\n        url:\n          baseUrl +\n          `/ProjectMS/project/getResCompts?resId=${data}&prjId=${projectId}&roleId=${roleId}`,\n      }).then((res) => {\n        let criticality = res.data;\n\n        setTableData(criticality);\n      });\n    };\n\n    const renderTree = (nodes) => (\n      <div>\n        <StyledTreeItem node={nodes}></StyledTreeItem>\n      </div>\n    );\n\n    return (\n      <div\n        style={{ maxHeight: \"400px\", minHeight: \"500px\", overflowY: \"auto\" }}\n      >\n        <TreeView\n          aria-label=\"rich object\"\n          defaultExpanded={[defaultExpandedRows]}\n          defaultParentIcon={\n            <div className=\"iconContainer\">\n              <MinusSquare className=\"hierarchyIcons\" />\n            </div>\n          }\n          defaultCollapseIcon={\n            <div className=\"iconContainer\">\n              <MinusSquare className=\"hierarchyIcons\" />\n            </div>\n          }\n          defaultExpandIcon={\n            <div className=\"iconContainer\">\n              <PlusSquare className=\"hierarchyIcons\" />\n            </div>\n          }\n          defaultEndIcon={<FaUserAlt className=\"hierarchyIcons user\" />}\n          sx={{\n            \"& .css-1g86id8-MuiTreeItem-content .MuiTreeItem-label\": {\n              width: \"auto\",\n              minwidth: 0,\n            },\n          }}\n          className=\"hierarchyTree\"\n        >\n          {renderTree(hierarchy[0])}\n        </TreeView>\n      </div>\n    );\n  },\n\n  (prevProps, currentProps) => {\n    if (prevProps.hierarchyCount === currentProps.hierarchyCount) {\n      return true;\n    }\n\n    return false;\n  }\n);\n\nexport default ProjectHierarchyTree;\n","import React from \"react\";\nimport { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport { ReactSearchAutocomplete } from \"react-search-autocomplete\";\n\nfunction RiskAutoComplete(props) {\n  const {\n    riskDetails,\n    getData,\n    setFormData,\n    editedData,\n    formEditData,\n    onChangeHandler,\n    refArr,\n    setUsername,\n    name,\n    id,\n    value,\n    onClear,\n    inputSearchString,\n  } = props;\n  const [item, setItem] = useState([]);\n\n  // console.log(\"in line 10\");\n  // console.log(props);\n  // console.log(refArr);\n\n  useEffect(() => {\n    // console.log(item);\n  }, [item]);\n\n  const handleClear = (edit) => {\n    setFormData((prevProps) => ({ ...prevProps, [name]: \"\" }));\n    console.log(name);\n  };\n  useEffect(() => {}, [riskDetails]);\n  // console.log(value);\n  {\n    return (\n      <>\n        <div className=\"autoComplete-container\">\n          {value == \"UpdateBillingRate\" ? (\n            <ReactSearchAutocomplete\n              items={riskDetails}\n              type=\"Text\"\n              name={name}\n              inputSearchString={formEditData?.assigned_to}\n              id={id}\n              className=\"err\"\n              riskDetails={riskDetails}\n              getData={getData}\n              onClear={onClear}\n              placeholder=\"Type minimum 3 characters\"\n              onChange={(e) => {\n                onChangeHandler(e);\n                console.log(\"789------------------------\");\n              }}\n              // setSelectEmployee={setSelectEmployee}\n              onSelect={(e) => {\n                setFormData((prevProps) => ({ ...prevProps, [name]: e.id }));\n\n                setFormData((prevProps) => ({\n                  ...prevProps,\n                  [\"Resname\"]: e.name,\n                }));\n              }}\n              showIcon={false}\n            />\n          ) : value == \"EngagementS\" ? (\n            <ReactSearchAutocomplete\n              items={riskDetails}\n              type=\"Text\"\n              name={name}\n              inputSearchString={formEditData?.assigned_to}\n              id={id}\n              className=\"err\"\n              riskDetails={riskDetails}\n              getData={getData}\n              onClear={handleClear}\n              placeholder=\"Type minimum 3 characters\"\n              onChange={(e) => {\n                onChangeHandler(e);\n              }}\n              // setSelectEmployee={setSelectEmployee}\n              onSelect={(e) => {\n                setFormData((prevProps) => ({ ...prevProps, [name]: e.id }));\n                // console.log(e.id);\n              }}\n              showIcon={false}\n              showNoResults={true}\n              showNoResultsText=\"<<ALL>>\"\n            />\n          ) : (\n            <div\n              className=\"auto autocomplete\"\n              id=\"auto\"\n              ref={(ele) => {\n                if (refArr != undefined) {\n                  refArr.current[0] = ele;\n                }\n              }}\n            >\n              <ReactSearchAutocomplete\n                items={riskDetails}\n                type=\"Text\"\n                name={name}\n                placeholder=\"Type minimum 3 characters\"\n                inputSearchString={inputSearchString}\n                id={id}\n                className=\"err\"\n                onClear={onClear}\n                riskDetails={riskDetails}\n                getData={getData}\n                onChange={(e) => {\n                  onChangeHandler(e);\n                  console.log(\"123---------------\");\n                }}\n                // setSelectEmployee={setSelectEmployee}\n                onSelect={(e) => {\n                  setFormData((prevProps) => ({ ...prevProps, [name]: e.id }));\n                }}\n                showIcon={false}\n              />\n            </div>\n          )}\n        </div>\n        <span>{item.name}</span>\n      </>\n    );\n  }\n}\nexport default RiskAutoComplete;\n"],"names":["MinusSquare","props","SvgIcon","fontSize","style","width","height","d","PlusSquare","TransitionComponent","useSpring","from","opacity","transform","to","in","Collapse","StyledTreeItem","styled","TreeItem","key","String","node","id","nodeId","label","folder_name","Array","isArray","subRows","map","renderTree","theme","treeItemClasses","marginLeft","paddingLeft","borderLeft","alpha","palette","text","primary","nodes","DocumentPopUpHierarchy","defaultExpandedRows","data","projectId","popDocFolderId","setPopDocFolderId","useEffect","filteredHierarchy","hierarchy","folderOrder","filter","item","sort","a","b","aIndex","indexOf","bIndex","localeCompare","setFolderOrder","flatArray","options","parentId","children","dictionary","tree","forEach","nodeParentId","push","Object","values","obj","jsonToTree","iconStyle","display","alignItems","gap","TreeView","defaultExpanded","defaultCollapseIcon","defaultExpandIcon","defaultEndIcon","defaultParentIcon","sx","minwidth","className","onNodeSelect","event","nodeIds","openPopup","setOpenPopup","hierarchydata","SetDocFolderId","selectedIds","setSelectedIds","setCopySuccessmsg","setMoveSuccessmsg","getapiData","setCheckboxSelect","loggedUserId","localStorage","getItem","baseUrl","environment","useState","setCopy","setMove","visible","size","onClose","backdrop","type","title","onClick","updatedDocIds","val","parseInt","axios","method","url","docIds","docFolderId","then","response","resp","catch","error","finally","setTimeout","copyDocsToFolder","moveDocsToFolder","issueDetails","getData","setFormData","inputRef","useRef","console","log","ReactSearchAutocomplete","items","ref","name","onSelect","e","prevProps","onClear","prev","showIcon","projectIssueDetails","editedData","editId","setEditedData","getTableData","setAddmsg","addmsg","setEditmsg","projectData","loggedUserName","Due_Date","Date","setProjectName","criticality1","setCriticality","issueSource","setIssueSource","status","setStatus","newStatus","setNewStatus","setIssueDetails","dueDate","setDueDate","value","setValue","setAssignedid","setRcaDone","validationMessage","setValidationMessage","projectid","criticality","source","duedate","RCA_Done","assignedto","createdbyid","createdbyname","description","comments","defaultFormData","undefined","rca","formData","formEditData","setFormEditData","initialformEditData","flag","setFlag","issueName","setIssueName","deferred","setDeferred","resolved","setResolved","review","setReview","inwaiting","setInwaiting","withdraw","setWithdraw","setNew1","newassaigned","setNewAssigned","inprogress","setInprogress","followup","setFollowup","moment","toString","format","getCriticality","getIssueSource","getEditStatus","getEditNewStatus","getProject","getIssueName","getStatusdeferrred","getStatusresolved","getStatusreview","getStatusInwaiting","getStatuswithdraw","getStatusNew","getStatusassigned","getStatusInprogress","getStatusFollowup","res","project","issuename","Statusdeferrred","Statusresolved","Statusreview","StatusInwaiting","Statuswithdraw","StatusNew","Statusassigned","StatusInprogress","StatusFollowup","editorToolBar","toolbar","header","font","color","bold","tooltip","list","script","indent","align","handleChange","target","uniqueMessage","setUniqueMessage","handleKeyDown","test","preventDefault","status_id","cursor","disabled","projectName","onChange","ele","current","placeholder","maxLength","onKeyDown","code","required","defaultValue","Issue_Name","Item","lkup_name","selected","priority_id","source_id","dateFormat","showMonthDropdown","showYearDropdown","dropdownMode","minDate","keyCode","_d","openToDate","toDate","inputSearchString","Assigned_To","htmlFor","checked","readOnly","Created_By","modules","rows","cols","Comments","someDataa","some","document","getElementsByClassName","length","index","classList","add","adddata","i","remove","includes","valid","GlobalValidation","handleAddClick","created_by_id","owner_id","handleEditClick","grp4Items","is_write","uid","setUid","deleteMessage","setDeleteMessage","editmsg","searching","setSearchApi","tableData","setTableData","loader","setLoader","deletePopup","setDeletePopup","setVisible","FaChevronCircleUp","cheveronIcon","setCheveronIcon","issueDetails1","setIssueDetails1","setEdit","setType","setProjectIssueDetails","searchdata","createdby","setEditId","setProjectData","headerData","setHeaderData","linkColumns","setLinkColumns","linkColumnsRoutes","routes","setRoutes","getMenus","display_name","dataObject","find","abortController","SnoAlign","SNo","IssueName","Criticality","Status","IssueSource","Issue_Source","AssignedTo","RCADone","CreatedBy","DueDate","getIssueDetails","getStatus","getProjectOverviewData","GetData","Action","concat","FaChevronCircleDown","LinkTemplate","issueDeleteHandler","dynamicColumns","keys","col","sortable","body","field","JSON","parse","stringify","exportData","setExportData","DeletePopup","deleteIssue","ScreenBreadcrumbs","currentScreenName","selectedItem","Loader","handleAbort","abort","fileName","resourceid","setResourceId","phases","setPhases","severity","setSeverity","priority","setPriority","phaseInjected","setPhaseInjected","assigneTo","setAssigneTo","defect_project_task_id","defect_project_injected_task_id","requirement","severity_id","assigned_to","review_method_id","reviewMethod","setReviewMethod","selectedFiles","setSelectedFiles","reported_by","handleAssigneToChange","phase","assignedTo","formatResult","ResName","employeeNumber","task_name","fuseOptions","resultStringKeyName","class","multiple","accept","files","selectedFilesArray","alert","file","Phase","Review","handleAddData","description1","descriptionClear","defect_age","reported_res_id","manager","setManager","PhaseInjected","Seviority","Priority","Assignedto","Reportedby","reportedBy","Description","assignTo","severty","priorty","stats","phaseInjeted","projectIssueDetail","err","manger","replace","handleClear","inputValue","getElementById","titleValue","trim","CellRendererPrimeReactDataTable","risk_occured_date","setOccurredDate","mitigation_date","setMitigationDate","risktype","setRiskType","risksource","setRiskSource","riskimpact","setRiskImpact","probabilityofoccurrence","setProbabilityOfOccurrence","riskstatus","setRiskStatus","setRiskOccurredDone","riskDetails","setRiskDetails","riskValue","setRiskValue","riskValueedited","setRiskValueEdited","riskImpactRef","probOfOccurRef","getRiskType","getRiskSource","getRiskImpact","getProbabilityOfOccurrence","getRiskStatus","riskimpactValue","probabilityValue","risk","risk_impact","split","probability","occurence_prob_id","risk_value","risk_name","type_id","opt","riskImpactVl","innerText","impact_id","probOccurVl","classname","padding","mitigation_plan","Value","risk_source","rsiktype","risk_type","occurence","riskValue1","is_risk_occured","last_updated","last_updated_by_id","date_created","projectRiskDetails","setProjectRiskDetails","risk_status","created_by_name","prjName","setPrjName","getProjectName","S_No","occurence_prob_name","Align","Align2","OccuredDate","MitigationDate","RiskOccured","RiskName","RiskType","RiskSource","RiskImpact","Occurance","RiskStatus","setMessage","setPlannedAddMessage","validation","setValidation","category","setCategory","buttonPopup","setButtonPopup","plannedActivities","setPlannedActivities","clicked","setClicked","saveCliked","setSaveClicked","cancelClicked","setCancelClicked","setInputValue","editEnabled","setEditEnabled","actiondisable","setActiondisable","dates","fromDate","startOf","dt","setDt","getPlannedActivitiesData","plannedactivitiestextfiled","rowData","selectionStart","accomplishment","click","addEventListener","slice","Save","ProjectId","plannedActivity","handleSave","PlannedActivitiesDeletePopUp","plannedactivitiesdelete","alignment","fontWeight","subtract","editMode","showGridlines","emptyMessage","scrollDirection","paginator","stripedRows","onRowEditComplete","_category","newData","postData","paginatorTemplate","currentPageReportTemplate","rowsPerPageOptions","editor","backgroundColor","bodyStyle","textAlign","Actions","addRow","variant","Reset","setAccomplishment","updateMessage","setUpdateMessage","addMessage","setAddMessage","message","plannedAddMessage","setvalid","getAccomplishmentData","AccomplishmentsDelete","accomplishmentDelete","accomplishmentstextfiled","createdDate","projectCode","div","products","setProducts","validateproject","setValidateproject","setSearching","buttonDisabled","setButtonDisabled","setValid","componentRef","roles","SetRoles","SetObj","UserId","setUserId","RoleValue","setRoleValue","ObjectRoleTypeIdValue","setObjectRoleTypeIdValue","selectedCustomer","setSelectedCustomer","grp1Items","global","matchMode","FilterMatchMode","operator","FilterOperator","constraints","representative","filters","setFilters","initialValue","project_id","Role","Userid","FromDate","ToDate","rowid","setRowID","LastUpdatedBy","LastUpdatedById","Version","assignedBy","IsActive","ObjectTypeCode","IsResolved","IsManualAssignment","ObjectId","User","object_type_id","role_type_id","putdata","data1","plandStartDate","plandEndDate","ObjectTypeRoleTypeId","postdata","icon","setAttribute","saveIcon","cancelIcon","forceUpdate","prnt","tempProducts","AssignmentType","assignmentType","setAssignmentType","getUser","AbortController","globalFilter","setGlobalFilter","float","filteredData","toLowerCase","_products","onFilter","selection","onSelectionChange","dataKey","scrollHeight","responsiveLayout","ObjectRoleTypeId","Roleid","textEditorEventName","editorCallback","userId","textEditorUser","user_id","autoComplete","selectedDate","maxDate","textEditorDate","textToDate","rowEditor","Data","setData","pid","sd","ed","container","createElement","innerHTML","currency_id","Details","var_dc","var_dur","var_efforts","var_margin","var_oc","var_rev","verticalAlign","cont_efforts","toLocaleString","pln_efforts","ptd_efforts","atd_efforts","etc_efforts","eac_efforts","textContent","cont_rev","pln_rev","ptd_rev","atd_rev","etc_rev","eac_rev","cont_dc","pln_dc","ptd_dc","atd_dc","etc_dc","eac_dc","cont_oc","pln_oc","ptd_oc","atd_oc","etc_oc","eac_oc","cont_margin","pln_margin","ptd_margin","atd_margin","etc_margin","eac_margin","cont_dur","pln_dur","ptd_dur","atd_dur","etc_dur","eac_dur","fData","RiskValueChange","planned_activity","riskName","riskType","riskSource","riskImpact","probabOcc","riskOccurred","riskStatus","occuredDate","createdBy","RiskNameChange","AssingedToChange","CreatedByChange","rcaDone","commentChanges","issueNameChanges","assignedToChanges","createdByChanges","dependency","raisedBy","raisedDate","targetDate","phaseAffected","phaseChanges","change_req_date","financial_impact","descriptionChanges","FinancialChanges","dateChange","date","eventChange","commentsChange","visibleA","setVisibleA","visibleB","setVisibleB","visibleC","setVisibleC","visibleD","setVisibleD","visibleE","setVisibleE","visibleF","setVisibleF","cheveronIconA","setCheveronIconA","cheveronIconB","setCheveronIconB","cheveronIconC","setCheveronIconC","cheveronIconD","setCheveronIconD","cheveronIconE","setCheveronIconE","cheveronIconF","setCheveronIconF","n","setSd","setEd","planned_start_dt","planned_end_dt","setProjectCode","project_name","business_unit","customer","sub_practice","role","prj_manager","del_manager","unit_head","curr_phase","cont_terms","prj_exe","est_planned_end_dt","pComplete","billable_utilized","planned_team_size","actual_team_size","ebillable","require","Highcharts","getGraphData","openIQA","setOpenIQA","graphData","dat","D","actual_start_date","iqaData","g","parseFloat","total","major","minor","medium","recommendations","asOfNowAxis","chartData","chart","useHTML","xAxis","categories","crosshair","yAxis","allowDecimals","min","labels","overflow","formatter","tooltipText","this","x","points","point","series","y","shared","credits","enabled","plotOptions","column","pointPadding","borderWidth","highcharts","openQCR","setOpenQCR","Auditname","percentage","setGraphData","setDat","setAuditname","downloadEmployeeData","docUrl","documentId","svn_revision","responseType","window","URL","createObjectURL","Blob","link","href","filename","appendChild","AuditType","auditType","PlannedDate","headerGroup","colSpan","renderHeader","stateStorage","stateKey","headerColumnGroup","pastAuditType","textDecoration","clickHanlderQCR","Result","clickHanlderIQA","scheduledDate","addAndEditPopup","setaddAndEditPopup","getScopeChanges","setEditAddmsg","setid","validationmessage","StartDt","setStartDt","fontStyle","changeReqDate","financialImpact","headers","SetData","update","setUpdate","setColor","selectedValue","setSelectedValue","signal","pointerEvents","changeReqDateTT","descriptionTT","financialImpactTT","ProjectScopeChangesDeletePopUP","setItem","updateId","reviewerId","statusId","setRowId","countData","setCountData","setDeleteId","deletedId","setSelectedId","sameDisplay","warning","setSelect","action_status","updated_by_id","successfullymsg","deleteMsg","setDeleteMsg","setCount","getCountData","custom","element","headerdata1","action","due_date","completed_date","reviewer_comments","Name","LinkTemplateDropdown","LinkDataProps","RevComents","LinkMoment","LinkMomentDue","SNumber","ReviewReport","deleteAction","border","del","docId","setDocId","svnRevision","setSvnRevision","setUpdateId","setReviewerId","setStatusId","headerdata","setHeaderdata","setDataDoc","sno","review_dt","rev_type","reviewer","actItems","docCount","LinkTemplateAction","SerialNo","prhId","review_st","dataArray","file_name","classes","makeStyles","dialog","position","top","minHeight","textField","useStyles","maxWidth","paper","marginBottom","setCheckedData","checkboxSelect","permissions","mainData","setMainData","bodyData","setBodyData","setExportColumns","splice","dtt","headDt","filtersData","contains","filters1","setFilters1","globalFilterValue1","setGlobalFilterValue1","onGlobalFilterChange1","_filters1","header1","isCheckboxDisabled","paginationrowsperpageoptions","paginationcomponentoptions","rowsPerPageText","rangeSeparatorText","selectionMode","selectedRows","c","f","ids","paddingRight","Tooltip","DocumentHierarchy","setLabel","setAddVisible","startsWith","setDocId1","setSvn","addVisisble","setLinkColumnsRoutes","versPopup","setVersPopup","folderName","setFolderName","validationmessage1","setValidationMessage1","validationmessage2","setValidationMessage2","moveCopyValidationMsg","setMoveCopyValidationMsg","setHierarchyData","setUpload","setSuccessfullymsg","copysuccessmsg","movesuccessmsg","successmsg","setSuccessmsg","setFileNamesArr","setFileName","setCrteateFolder","folder","setFolder","setDefaultExpandedRows","projectName1","completeName","last_updated_by","toFixed","file_size","app_revision","file_type","created_by","a1","b1","dpObj","validateInputValue","getUploadSuccessFileNames","getProjectDocumentshierarchy","getDocumentFileNames","deleteDocument","selectedFile","setSelectedFile","textDecorationLine","Template","DownloadForOfflineRounded","fName","fSize","fCreatedBy","fCreatedOn","fUpdatedOn","fUpdatedBy","DocumentDeletePopUP","VersionPopUP","handleCreateFolder","getcreateFolder","DocumentsPopUp","FormData","append","uploadFile","handleCancel","expandedRows","setExpandedRows","popUp","setPopUp","popUpData","setPopUpData","expenseHistory","setExpenseHistory","popUpLoader","setPopUpLoader","setLoaderOne","React","anchorEl","setAnchorEl","table","setTable","handleClose","numberWithCommas","number","parts","padEnd","amountFormat","clientCurrencyCode","approvalIcon","popoverdata","setPopoverData","approvalField","onMouseOver","currentTarget","approvalFlow","join","onMouseLeave","Approval","viewDetails","expenseDetails","expense_id","expenseId","ExpensePopup","totalData","downloadFile","document_id","fullName","Expense_Type","Incurred","disbursed_amount","Payee","Payment","maxHeight","overflowY","state","firstName","lastName","dateCreated","disbursedAmount","onRowToggle","onRowExpand","loaderTime","stackId","stackStatusId","u","subrows","clearTimeout","rowExpansionTemplate","sortOrder","expense_date","is_billable","client_amount","paginationPerPage","paginationRowsPerPageOptions","paginationComponentOptions","sortMode","expander","stackName","minDt","lastUpdated","amount","stackStatus","ProjectExpensePopOver","raised_by","resource","maxDt","expenseDate","approval","setSelectedRows","selectedRowsData","setSelectedRowsData","editRowData","setEditRowData","selectedOptionTwo","setSelectedOptionTwo","isEditClicked","setIsEditClicked","isCheckedList","setIsCheckedList","setHeaderChecked","count","grp3Items","paymentUsers","setPaymentUsers","fetchData","onchange","drop_down","isBillable","defaultChecked","disbursedAmountField","clientAmountField","paymentStatus","dropDown","payment","findIndex","selectedRowData","updatedSelectedRowsData","paymentsField","Checkbox","newCheckedList","newSelection","selectionIndex","handleSelectionChange","isRowDisabled","setlist","commentsField","resize","documentFail","setDocumentFail","documentLoader","setDocumentLoader","downloadExpenseStack","download","downloadFail","setDownloadFail","isEdit","subRowsData","it","isChecked","isEditData","ll","finalLL","spltArr","updatedList","every","datas","formattedData","clientAmmount","resId","sendSelectedRowsData","cancelRowEdit","amt","disbursedAmt","clientAmt","createdOn","marginRight","newStatusId","btnState","setbtnState","customerDatarole","setcustomerDatarole","setDisplay","setState","ValidationMsg","setValidationMsg","rejectmsg","setrejectMsg","employee_number","Resource","RoleName","from_dt","to_dt","effort_hours","AllocationType","BookingStatus","handleConfirm","Fdata","selectAll","pagination","dataresource","alignHeader","rmg_bench_type_id","Close","headerdatagroup","customFilters","customFilterValue","setCustomFilterValue","el","documnetFolderId","setDocumentFolderId","setKey","EndDt","setEndDt","setResource","setlogged","vendorNamesArr","setVendorNamesArr","fileNamesArr","setDocPopId","uniqueMessage1","setUniqueMessage1","setDocFolderId","isTableVisible","setIsTableVisible","fileVisible","setFileVisible","getDocumentFolderId","Response","frmDt","toDt","documentType","legalEntityType","poNumber","docSignedBy","isActive","CreatedById","lastUpdatedBy","sow_name","frm_dt","po_number","currency","resourceFnc","getFileNames","CreatedDate","doc_folder_id","DocumentType","UploadedBy","Amount","PONumber","DocumentName","docFileName","setDocFileName","docdata","setdocData","selectedFile1","setSelectedFile1","filName","setFilName","revision","setRevision","AppRevisionAlign","downloadEmployeeData1","updatedByAllign","updatedBy","docValidation","setDocValidation","fileValidation","setFileValidation","marginTop","borderRadius","prevKey","GlobalCancel","placeholderText","onChangeHandler","someDataa1","ProjectSow","sowName","handleClick","event_name","event_date","lazyState","sideArrow","sideDoubleArrow","removeFirstRowIfEmpty","prod","eventName","eventDate","rowHover","tableStyle","minWidth","filterDisplay","globalFilterFields","sNo","headerStyle","filterMatchMode","today","textEditorComments","ProjectMilestones","project_milestone","is_invoiceable","invoice_id","invoice_status","initialValues","statusfunc","StatusObj","storecomdate","setStorecomdate","CompleDate","isValid","completeDate","getSeverity","statusItemTemplate","option","filterValue","setFilterValue","statuses","setFilteredData","filteredDueDate","filteredItems","useMemo","getTime","filteredData1","matchingStatus","setMatchingStatus","filteredCompleteDate","filteredItemsCompletDate","filteredData2","matchingStatusComDate","setMatchingStatusComDate","strokeWidth","textEditorMileStone","setDatePicker","showFilterMenu","companyBodyTemplate","Storestatus","filterMenuStyle","filterElement","itemTemplate","showClear","dataType","justifyContent","classNames","filterApplyCallback","isInvoiceable","priceEditor","Storeamount","onKeyPress","which","keyValue","fromCharCode","textEditorAmount","filterFunction","endsWith","textEditorCompleteDate","addHandler","RaisedBy","setRaisedBy","AssingedTo","setAssingedTo","dependency_name","Type","raised_date","target_date","phase_affected","PriorityObj","TypeObj","raisedby","dependencyName","typeId","priorityId","raisedById","raised_by_id","assignedToId","assigned_to_id","textEditorDependency","DropdownType","DropdownPriority","textEditor","setDatePicker2","textEditor1","textEditorPhaseAffected","DropDownStatus","grp6Items","currentDate","getFullYear","getMonth","setSelectedDate","managersname","setManagersName","reviewdonebynames","setReviewDoneByNames","setComments","prjtype","setPrjType","compliancetable","setComplianceTable","selecttype","setSelectType","dropdowns","setDropDowns","newDate","setEnableSave","setEnableCopyBtn","validationMessageforcopy","setValidationMessageForCopy","submitdatamessage","setSubmitDataMessage","copymessage","setCopyMessage","formattedDate","previousmonthdate","setPreviousMonthdate","savesubmitmsg","setSaveSubmitMsg","pcqracomments","setPcqaComments","pmcomments","setPmComments","weightagedata","setWeightageData","dropdowndata","setDropdownData","managerid","SetManagerId","reviewbyid","setRewviewById","efforthrs","SetEffortHrs","setcopyPrevMonth","copyPrevMonthIsvisible","pcqasubmitdata","setPcqasubmitData","pmsubmitdata","setPmSubmitData","warnMsg","setWarnMsg","pcqa","setpcqa","pcqaCompl","setpcqaCompl","saveBtn","setsaveBtn","submitBtn","setsubmitBtn","setpm","weightage","setWeightage","hideButton","setHideButton","currentMonth","month","toISOString","currMonthFirstDate","year","getCurrentMonthFirstDate","firstDayOfSelMonth","dateSplit","enableDays","sumCounts","filterDates","selectedMonth","isSame","audit_date","selectedDate1","setSelectedDate1","handleDateChange1","disablePreviousMonths","isBefore","targetCounts","targetSums","updatedWeightage","comment","auditCheckPointId","audit_check_point_id","weightageValue","rowDataId","fieldValue","isNaN","targetValue","compliance_val","valueFieldValue","targetValuesToSum","reduce","acc","setScore","adherence","setAdherence","setStatusColor","setStatusText","calculateComplianceScore","fImpl","pImpl","fullImpl","partImpl","notImpl","implSum","numerator","denominator","calculatedScore","Infinity","calculatedAdherence","formattedAdherence","formattedScore","calculatedStatusColor","calculatedStatusText","process_adherence","weighted_score","status_name","full_impl_compl","parti_impl_compl","not_impl_compl","not_yet_compl","not_appl_compl","isUserManager","userid","handleClicktable1","response1","Getdata","response2","prevComments","commentsData","remarks","handelsearch","resposne","pcqa_type","getdata","getDropdowns","previousMonth","is_pcqa_submit","is_pm_submit","enableDisableButtons","setIsPreviousMonth","scrollTo","behavior","processAdherence","datecreated","audit_month","audit_state","prj_mgr_id","review_by_id","effort_hrs","proj_state_id","processComment","rowComment","qcrdomain","dropdownValues","setDropdownValues","previousOption","setPreviousOption","pm_remarks","project_audit_dtl_id","previousValues","handalChange","decrementOption","initiation_weightage","steady_state_weightage","closure_weightage","prevData","updatedData","prevWeightage","updatedComplianceTable","fullyImplemented","partiallyImplemented","notImplemented","notYet","notApplicable","handlechangeComments","handlechangePMComments","showMonthYearPicker","onClickCapture","hideButtonclick","dataExists","recent_audit_month","endOf","filterDate","shouldDisableMonth","shouldDisableYear","prj_mgr_name","review_by_name","selectedOption","handleSelectChange","frozen","proj_phase","check_point","getFieldBasedOnType","onFocus","newValue","iso_details","deletePopUp","setDeletePopUp","selectedTaskId","setDeletedSuccess","setDeletedFailed","params","taskId","roleId","setDeleteFailed","selectedRow","taskList","setAssignedHrs","grp2Items","assignedHrs","deleteFailed","holidays","setHolidays","calculateWeekdays","startDate","endDate","multiplier","weekdays","dayOfWeek","getDay","setDate","getDate","projectNewResource","setProjectNewResource","setRoleId","projectOldResource","setProjectOldResource","taskResources","setTaskResources","enableDropDown","setEnableDropDown","setEnableAddDropDown","reAssToDate","setReAssToDate","reAssFromDate","setReAssFromDate","setEditor","rowResourceId","setRowResourceId","resAssingedHrs","setResAssingedHrs","resAllocationsHrs","setResAllocationsHrs","backUpTaskResource","setBackUpTaskResource","rowToBeEdited","setRowToBeEdited","resourceSaved","setResourceSaved","AddorEdit","setAddorEdit","disableAdd","setDisableAdd","deletedSuccess","fromDt","newVal","resAllocData","setResAllocData","taskRoleId","dailyHrs","toBeAddedRowData","setToBeAddedRowData","ID","getResDate1","getResList","totalHrsSum","totalHrs","newOptions","editOptions","rowSpan","textEditortoDt","resourceId","textEditorFromDt","textEditorDailyhrs","whiteSpace","allocatedHrs","assgnedHrs","getResDates","allocationHrs","newRow","prevTaskResources","saveChanges","resourcePopUp","setResourcePopUp","content","start","finish","roleName","estimatedHrs","actualHrs","roleType","setRoleType","deletedFailed","taskType","setTaskType","setTaskList","projName","setProjName","originalTaskList","setOriginalTaskList","initialTaskList","setInitialTaskList","setSelectedRow","setSelectedTaskId","taskToCopy","setTaskToCopy","taskSaved","setTaskSaved","projectEndDate","setProjectEndDate","projectStartDate","setProjectStartDate","expandedRows1","setExpandedRows1","numberOfDays","eachDayOfInterval","end","isWeekend","addBusinessDays","addDays","days","result","remainingDays","getTaskList","spData","dataWithSNo","duration","taskTypes","roleTypes","rowIndex","toDoPaste","setToDoPaste","copyTask","getRowsWithIndentation","indentation","childRows","row","allowExpansion","currentIndentation","nextRow","lowestIndentation","minIndentation","Math","src","assignmentsContent","approvedHrs","prevTaskList","formatDate","padStart","day","updatedTaskList","selectedTask","decreaseIndentation","previousTask","increaseIndentation","task","temp","expandAll","collapseAll","feild","selectedSno","portalId","onBlur","finishDate","selectedRoleName","selectedIndex","getAttribute","checkFinishDate","formattedValue","margin","Tasks","Task","TaskId","TaskName","LeafId","Start","Finish","Duration","TaskType","EstimatedHours","toBeSavedTaskList","saveTaskList","overAllocation","setOverAllocation","setConfirmSave","setSaveOverAlloc","resourceData","setAddErrMsg","setErrData","addErrMsg","setSearchResource","setAddResMessage","setEditMessage","setDailyhrsRange","setEditResMessage","dailyhrsRange","tableDisable","setDisable","isModified","setIsModified","plannedStartDt","setStartDate","plannedEndDt","setEndDate","errorMessage","setErrorMessage","holiday","setholiday","projectRoleId","allocationTypeId","effortHours","dailyHours","hourlyRate","hourlyCost","resHourlyCost","cost","countryId","baselineVersionId","ss","isprojectTask","isDelete","createdById","lastUpdatedById","allocation","setAllocation","scrollToRef","combined_data","getAllocationDropdown","offsetTop","handleSelection","getHolidays","getWorkingDays","workingDays","getJSDateObj","dateStr","Number","shouldSendRequest","confirmSave","isFormDataPresent","matchingSubrows","subrow","resource_id","formDataFromDate","formDataToDate","subrowFromDt","subrowToDt","FormDataCheck","d0","d1","workDays","freeHours","setEffhrs","isOverallocated","handleCalculate","prevState","designation","businessUnit","location","cslId","availPercentage","hourRate","revenue","isValueValid","stopPropagation","allocation_type_id","setErrorMsg","errorMsg","dateFlag","setdateFlag","resid","setResid","autocompleteData","setAutocompleteData","resTableData","setResTableData","displayTable","setDisplayTable","busUnit","setBusUnit","getBusinessUnit","documentElement","endDt","handleSearch","deleteData","setDeleteResourceMessage","assign","hasOwnProperty","calenderPayload","colExpandState","setMonth","setNodes","columns","setColumns","hiddenColumns","setHiddenColumns","colExpFlag","setHeaders","setHierarchyPopUp","setHierarchyId","icons","fteActive","fte_active","alt","fteNotice","fte_notice","subkActive","subk_active","replaceAll","dd","colArr","newHeaders","colVal","firstData","headerArray","entries","unWantedCols","filteredHeaders","C","Id","accessorKey","enableColumnActions","enableHiding","rowspan","Header","subHeaders","Cell","cell","textOverflow","original","getValue","Src","action_items","B","colCollapse","enablePagination","enableGlobalFilter","enableDensityToggle","enableFullScreenToggle","enableColumnFilters","enableBottomToolbar","enableTopToolbar","enableSorting","filterFromLeafRows","initialState","showGlobalFilter","expanded","density","columnVisibility","defaultColumn","minSize","maxSize","muiSearchTextFieldProps","muiTableContainerProps","muiTableBodyProps","borderRight","borderBottom","muiTableHeadProps","borderTop","background","setCalenderPayload","calenderTableData","dispCalender","setDispCalender","setDupRoleName","setDupliRole","setSubRowData","country","setCountry","setSubrows","setCostFlag","totalEffortHours","setTotalEffortHours","totalallochrs","setTotalAllocHrs","searchResource","resName","setResName","setDeleteData","allocType","setAllocType","roleRateCost","setRoleRateCost","roleDisp","setRoleDisp","setRole","editedRef","setFinalData","finalDataCopy","sum1","sum2","roleAllochrs","num","final","getRoleData","getCountries","getRoleCountryRate","customer_id","countries","countryObj","country_name","hourCost","allocHrs","checkData","roleTypeId","hourcost","bool","arr","inEle","RoleTypeId","IsRoleBillable","ProjectRolecol","BaseLineVersionId","RoleSite","LobId","PlannedStartDate","PlannedEndDate","projectoruid","locationId","actualStartDate","actualEndDate","CostCenterId","handleResource","handleDescription","handleSubCountry","handleWorkLocation","handlebillingRate","billingRate","handleCost","handleEfforthours","handleDailyhrs","daily_hours","handleSubAllocType","allocationType","handleSubStatus","handleFromDate","handleToDate","handleSubAction","isDisable","resourceDeleteHandler","onInnerRowEditComplete","putInnerData","project_role_id","country_id","textEditorbillingRate","textEditorfromDt","shouldCloseOnBlur","shouldCloseOnSelect","textEditorAllocationType","textEditorRoleType","resIcon","textEditorCountry","getElementsByName","textEditorHourRate","warn","textEditorHourCost","textEditorplannedStartDt","textEditorplannedEndDt","textEditoreffortHours","roleDeleteHandler","Typ","AllocType","newFromDate","prevPayload","FromDt","roleCount","setRoleCount","resourceCount","setResourceCount","setIsActive","setCalenderTableData","deleteResourceMessage","setsearching","addResmsg","editResmsg","errData","dupliRole","dupRoleName","PrjSource","contTerms","engComps","cslIds","dpIds","avgtextvalue","handleCalenderClick","getRolesCount","getResourceCount","getProjectResource","resCount","rolesCount","onSearch","setBusinessUnit","projectMngr","setProjectMngr","deliveryMngr","setDeliveryMngr","riskFactor","setRiskFactor","kpiData","setKpiData","efforts","setEfforts","setRevenue","directCost","setDirectCost","otherCost","setOtherCost","getKpitableData","businessUnitId","custName","prjId","prjComplexity","prjStage","gm","projectCategory","division","engagementType","engagementName","engagementId","engagementCompany","contractTerms","effortType","executionMethodology","projectPhase","projectComplexity","complexity_id","projectStage","schedulingMode","expenseBillable","timeEntryMode","projectScope","weekCalendar","holidayCalendar","teamLocation","ProjectManager","DeliveryManager","deliverables","subPractice","sfEngagementType","project_health_id","projectHealth","facilitator","contract","clientEmail","projectType","bussinessUnit","servicesOffered","business_case","prj_health_comments","preStartDate","preEndDate","contStartDate","contEndDate","actStartDate","actEndDate","planned_hours","preliminary_duration","contracted_duration","planned_duration","actual_duration","preliminary_fte","round","fte","contracted_fte","planned_fte","employee_offshore","actual_hours","planned_revenue","actual_revenue","planned_direct_cost","actual_direct_cost","planned_other_cost","actual_other_cost","projCat","techComplexity","domSpecChallenge","skillResAvail","depThirdPartySys","devEnvAvail","custEnv","profitability","CompetencyTable","Competency","ExpRating","ActRating","Makeaplan","hierarchyCount","setHierarchyCount","searchinghierarchy","setSearchingHierarchy","SetDate","typ","intialvalues","getResourcehierarchy","parent","cleanedText","alignSelf","disabledKeyboardNavigation","paddingTop","ProjectHierarchyTree","useLocation","setProjectId","mainMenu","setMainMenu","setGrp1Items","setGrp2Items","setGrp3Items","setGrp4Items","setGrp6Items","stat","projectArr","projectsId","grp","tabMenus","button","ProjectBaselines","ProjectEdit","StagePopUp","popup","setPopup","handleDateUpdate","handleNo","popUpValue","setStgValue","stgValue","targetDisplayName","projecteditUrl","setcategory","setCustomer","week","setWeek","setHoliday","setPhase","setDivision","setContract","enguagementType","setEnguagementType","effort","setEffort","enguagement","setEnguagement","priliminaryEfforts","contractedEfforts","setGrossMargin","setGM","contractedRevenue","priliminaryRDC","ContractRDC","setDirectSpareCost","priliminaryOtherCost","contarctOtherCost","resultPreGrossMargin","setresultPreGrossMargin","resultGM","setResultGM","ponumber","setPonumber","contractResult","setContractResult","contractGMResult","setContractGMResult","service","setService","plnFTE","SetPlnFTE","conFTE","SetConFTE","projectApprover","setProjectApprover","projectRequester","setProjectRequester","targetKeys","setTargetKeys","selectedKeys","setSelectedKeys","conStartDate","SetConStartDate","conEndDate","SetConEndDate","planStartDate","SetPlanStartDate","planEndDate","SetPlanEndDate","SetActStartDate","successfulmessage","setSuccessfulmessage","setCurrency","conDateDiff","setConDateDiff","plnDateDiff","setPlnDateDiff","SetActEndDate","open","setOpen","setPopUpValue","effortTypeFnc","divisionFnc","is_prj_status","enguagementFnc","division_id","conractTermsFnc","engagementTypeFnc","poNumberFnc","custId","divisionId","enguagementId","getProjectMngr","getOtherCost","getRevenue","getEfforts","catId","getDirectCost","spare","eid","getholiday","startdt","calId","useNavigate","offering_name","calculateDateDifference","daysDiff","diff","clone","plnStartDt","plnEndDt","holiday_calendar_id","plnClnId","diffInDays","chDays","cFte","phDays","pFte","prilimainaryGM","calGM","priliminaryGross","calGrossMargin","contractGM","calContractGM","contractGross","calContractGrossMargin","updateProjectData","ps","newArr","onchangeForAll","onChangetext","conStart","conEnd","plnStart","plnEnd","actStart","servicesOfferedId","serviceIds","full_name","engagement_model_id","effort_name","projectScopeId","input","unit_of_measure","calendar_name","project_category_name","onChangeStg","poNumberId","includeScore","threshold","ProjectRequester","ProjectApprover","dataSource","nextTargetKeys","filteredCountry","onSelectChange","sourceSelectedKeys","targetSelectedKeys","render","facilitatorID","actual_fte","ProjectScope","PcqaType","EngagementType","effortTypeId","effort_type_id","teamLocationId","team_location_id","customerId","isPrjStatus","project_phase","projectHealthId","PoNumber","SfEngTypeId","sf_eng_type_id","BusinessCase","PrjHealthComments","primaryManger","PrjCrgId","pcrgsId","complexityId","tech_complexity_id","domSpecChallengeId","dom_spec_challenge_id","skillResAvailId","skill_res_avail_id","depThirdPartySysId","dep_third_party_sys_id","devEnvAvailId","dev_env_avail_id","custEnvId","cust_env_id","profitabilityId","profitability_id","loggedId","holidayCalendarId","weekelyCalenderId","week_calendar_id","projectExecMethodId","project_exec_method_id","projectdivisionId","typContractTermsCatId","typProjectCatId","typSchedulingModeId","typ_scheduling_mode_id","typTimeEntryModeId","typ_time_entry_mode_id","priliminaryFte","priliminaryGM","priliminaryGrossMargin","ContractGM","ContractGrossMargin","contractFte","unitOfMeasurement","CloseSquare","setDataProjectId","projectFromDate","formattedFromDate","projectToDate","tdate","formattedToDate","addFolderIcon","boxes","box","tagName","spn","CustomContent","iconProp","expansionIcon","displayIcon","useTreeItem","focused","handleExpansion","preventSelection","handleSelectionClick","splitdata","propData","competenciesTable","clsx","root","onMouseDown","iconContainer","component","ContentComponent","p","pr","mr","flexGrow","currentProps","refArr","setUsername","edit","showNoResults","showNoResultsText"],"sourceRoot":""}