{"version":3,"file":"static/js/4994.0187cab9.chunk.js","mappings":"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","sources":["views/HelpComponent/ReleaseNotesUpdatePopup.js","views/HelpComponent/ReleaseNotes.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport Draggable from \"react-draggable\";\nimport { CModal, CModalBody, CModalHeader, CModalTitle } from \"@coreui/react\";\nimport { BiSave } from \"react-icons/bi\";\nimport axios from \"axios\";\nimport DatePicker from \"react-datepicker\";\nimport moment from \"moment\";\nimport { environment } from \"../../environments/environment\";\nimport GlobalValidation from \"../ValidationComponent/GlobalValidation\";\nimport { AiFillWarning } from \"react-icons/ai\";\nexport default function ReleaseNotesUpdatePopup(props) {\n  const { custName, setCustName, getData, data } = props;\n  const [successfullymsg, setSuccessfullymsg] = useState(false);\n\n  const [date, setDate] = useState();\n  const [selectedFile, setSelectedFile] = useState(null);\n  const loggedUserId = localStorage.getItem(\"resId\");\n\n  const ref = useRef([]);\n  const onFileChangeHandler = (e) => {\n    setSelectedFile(e.target.files[0]);\n\n    setFormData1((prev) => ({\n      ...prev,\n      [e.target.id]: e.target.files[0]?.name,\n    }));\n  };\n\n  const initialValue = {\n    releaseDate: \"\",\n    versionNumber: \"\",\n  };\n  const baseUrl = environment.baseUrl;\n\n  const [formData1, setFormData1] = useState(initialValue);\n  console.log(formData1);\n  const [validationmessage, setValidationMessage] = useState(false);\n\n  const handleUpload = (e) => {\n    console.log(data, \"datasahid\");\n    console.log(formData1, \"formdata1\");\n    console.log(selectedFile?.name, \"selectedfile\");\n    let validNw = false;\n    for (let i = 1; i < data.length; i++) {\n      let versionNum = data[i].version_number;\n      let releaseDt = data[i].release_date;\n      let fileNm = data[i].file_name;\n      if (\n        versionNum == formData1.versionNumber &&\n        releaseDt == formData1.releaseDate &&\n        fileNm == selectedFile?.name\n      ) {\n        // console.log('match');\n        validNw = true;\n        break;\n      } else {\n        //console.log('notmatch');\n      }\n    }\n    console.log(ref);\n\n    let valid = GlobalValidation(ref);\n    console.log(valid);\n    if (valid) {\n      setValidationMessage(true);\n      return;\n    }\n    if (validNw == false) {\n      axios\n        .postForm(\n          baseUrl +\n            `/supportms/support/UploadFileAndData?versionNumber=${formData1.versionNumber}&releaseDt=${formData1.releaseDate}&loggedUserId=${loggedUserId}`,\n          {\n            file: selectedFile,\n          },\n          {\n            headers: {\n              \"Content-Type\": \"multipart/form-data\",\n            },\n          }\n        )\n        .then((res) => {\n          //getData();\n          console.log(res, \"ressahid\");\n          //setSelectedFile(fileName);\n          setValidationMessage(false);\n          setSuccessfullymsg(true);\n          getData();\n        })\n        .catch((error) => {\n          console.log(error);\n          // handle error\n        });\n      // setCustName(false);\n      setTimeout(() => {\n        setCustName(false);\n      }, 3000);\n    }\n  };\n\n  return (\n    <div>\n      <CModal\n        size=\"lg\"\n        visible={custName}\n        onClose={() => {\n          setCustName(false);\n        }}\n        backdrop={\"static\"}\n      >\n        <CModalHeader className=\"hgt22\" style={{ cursor: \"all-scroll\" }}>\n          <CModalTitle>\n            <span className=\"ft16\"> Upload Release Notes</span>\n          </CModalTitle>\n        </CModalHeader>\n        <CModalBody>\n          {validationmessage == true ? (\n            <div className=\"statusMsg error\">\n              {\" \"}\n              <AiFillWarning />\n              Please select valid values for highlighted fields\n            </div>\n          ) : (\n            \"\"\n          )}\n          {successfullymsg == true ? (\n            <div className=\"statusMsg success\">\n              <span className=\"errMsg\">\n                &nbsp; Release Notes saved successfully\n              </span>\n            </div>\n          ) : (\n            \"\"\n          )}\n          <div className=\"row\">\n            <div className=\"row mb-2\">\n              <div className=\" col-md-3 \">\n                <label>\n                  Release Date :<span className=\"error-text\">*</span>\n                </label>\n              </div>\n              <div className=\" col-md-3 mb-2\">\n                <div\n                  className=\"datepicker cancel\"\n                  ref={(ele) => {\n                    ref.current[0] = ele;\n                  }}\n                >\n                  <DatePicker\n                    id=\"releaseDate\"\n                    selected={date}\n                    autoComplete=\"off\"\n                    showMonthDropdown\n                    showYearDropdown\n                    onChange={(e) => {\n                      console.log(e);\n                      setDate(e);\n                      setFormData1((prev) => ({\n                        ...prev,\n                        [\"releaseDate\"]: moment(e).format(\"yyyy-MM-DD\"),\n                      }));\n                    }}\n                    dateFormat=\"dd-MMM-yyyy\"\n                    onKeyDown={(e) => {\n                      e.preventDefault();\n                    }}\n                  />{\" \"}\n                </div>\n              </div>\n\n              <div className=\" col-md-3 \">\n                <label>\n                  Version :<span className=\"error-text\">*</span>\n                </label>{\" \"}\n              </div>\n\n              <div className=\" col-md-3 mb-2\">\n                <div\n                  className=\"textfield\"\n                  ref={(ele) => {\n                    ref.current[1] = ele;\n                  }}\n                >\n                  <input\n                    className=\"form-control\"\n                    id=\"versionNumber\"\n                    type=\"text\"\n                    onChange={(e) => {\n                      console.log(e);\n                      console.log(e.target.value);\n\n                      setFormData1((prev) => ({\n                        ...prev,\n                        [\"versionNumber\"]: e.target.value,\n                      }));\n                    }}\n                  />\n                </div>\n              </div>\n            </div>\n            <div className=\"row mb-2\">\n              <div className=\"textfield col-md-6 p0\">\n                <div\n                  className=\"textfield\"\n                  style={{\n                    backgroundColor: validationmessage ? \"red\" : \"\",\n                    border: validationmessage ? \"1px solid red\" : \"\",\n                  }}\n                  ref={(ele) => {\n                    ref.current[2] = ele;\n                  }}\n                >\n                  <input\n                    className=\"fileUpload form-control cancel\"\n                    type=\"file\"\n                    id=\"fileName\"\n                    name=\"fileName\"\n                    autoComplete=\"off\"\n                    accept=\".xls, .xlsx\"\n                    placeholder=\"Enter Resource Name\"\n                    onChange={onFileChangeHandler}\n                  />\n                </div>\n              </div>\n              <div className=\"textfield col-md-6\">\n                <button\n                  onClick={() => handleUpload()}\n                  id=\"upload\"\n                  name=\"upload\"\n                  className=\"btn btn-primary\"\n                >\n                  <BiSave /> Upload\n                </button>\n              </div>\n            </div>\n          </div>\n        </CModalBody>\n      </CModal>\n    </div>\n  );\n}\n","import React from \"react\";\nimport \"../../App.scss\";\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { environment } from \"../../environments/environment\";\nimport FlatPrimeReactTable from \"../PrimeReactTableComponent/FlatPrimeReactTable\";\nimport { FaUpload } from \"react-icons/fa\";\nimport CellRendererPrimeReactDataTable from \"../PrimeReactTableComponent/CellRendererPrimeReactDataTable\";\nimport { Column } from \"primereact/column\";\nimport { Link } from \"react-router-dom\";\nimport moment from \"moment\";\nimport ReleaseNotesUpdatePopup from \"./ReleaseNotesUpdatePopup\";\nimport { AiFillWarning } from \"react-icons/ai\";\n\nfunction CustomerRisks(props) {\n  const { customerId } = props;\n  const [data, setData] = useState([{}]);\n  const [upload, setupload] = useState([]);\n  const baseUrl = environment.baseUrl;\n  const [custName, setCustName] = useState(false);\n  const [business, setBusiness] = useState([]);\n  const [svnrevision, setSvnrevision] = useState();\n\n  console.log(data);\n  let rows = 20;\n  const [headerData, setHeaderData] = useState([]);\n  const [linkColumns, setLinkColumns] = useState([]);\n  const [linkColumnsRoutes, setLinkColumnsRoutes] = useState([]);\n  const [folder, setFolder] = useState();\n  const [errorMsg, setErrorMsg] = useState(false);\n  // console.log(document);\n  console.log(folder);\n  const LinkTemplate = (data) => {\n    console.log(\"in line 91------------\");\n    console.log(data.svn_revision);\n    setSvnrevision(data.svn_revision);\n    setFolder(data.doc_folder_id);\n    return (\n      <>\n        <Link\n          style={{ cursor: \"pointer\" }}\n          onClick={() => {\n            downloadEmployeeData(data);\n          }}\n          title={data.file_name}\n          data-toggle=\"tooltip\"\n        >\n          {\" \"}\n          {data[linkColumns[0]]}\n        </Link>\n      </>\n    );\n  };\n  // console.log(document);\n  const Align = (data) => {\n    return (\n      <div Align=\"center\">\n        {data.S_No}\n      </div>\n    );\n  };\n  const AlignRight = (data) => {\n    return (\n      <div Align=\"right\">\n        {data.S_No}\n      </div>\n    );\n  };\n\n  const Toggletooltip = (data) => {\n    console.log(data.document_id);\n    return (\n      <div data-toggle=\"tooltip\" title={moment(data.release_date).format(\"DD-MMM-yyyy\")}>\n        {moment(data.release_date).format(\"DD-MMM-yyyy\")}\n      </div>\n    );\n  };\n\n  console.log(business);\n  const dynamicColumns = Object.keys(headerData)?.map((col, i) => {\n    //console.log(headerData,'heaaderdatsahid');\n    return (\n      <Column\n        sortable\n        key={col}\n        body={\n          col == \"file_name\"\n            ? LinkTemplate\n            : col == \"S_No\"\n            ? Align\n            :col == \"version_number\"\n            ?AlignRight\n            : col == \"release_date\" && Toggletooltip\n        }\n        field={col}\n        header={headerData[col]}\n      />\n    );\n  });\n  console.log(svnrevision);\n  const downloadEmployeeData = (data) => {\n    console.log(data?.file_name);\n    console.log(data);\n\n    const docUrl =\n      baseUrl +\n      `/VendorMS/vendor/downloadFile?documentId=${data?.document_id}&svnRevision=${data?.svn_revision}`;\n    let res = true;\n    axios({\n      url: docUrl,\n      method: \"GET\",\n      responseType: \"blob\",\n    }).then((response) => {\n      res = false;\n      console.log(response,'respons');\n      const url = window.URL.createObjectURL(new Blob([response.data]));\n      console.log(url);\n      const link = document.createElement(\"a\");\n      console.log(link);\n      link.href = url;\n      link.setAttribute(\"download\", data.file_name); //or any other extension\n      document.body.appendChild(link);\n      link.click();\n    });\n    console.log(res,'res')\n    setTimeout(() => {\n      if(res==true){\n        console.log(\"not downloadable\");\n        setErrorMsg(true);\n        \n      }\n     else{\n      setErrorMsg(false);\n     }\n    }, 500);\n    \n    \n  };\n\n  useEffect(() => {\n    data[0] && setHeaderData(JSON.parse(JSON.stringify(data[0])));\n  }, [data]);\n\n  /*useEffect(() => {\n    downloadEmployeeData();\n    // getBusinessUnit();\n  }, []);*/\n\n  console.log(upload);\n  const getData = () => {\n    axios\n      .get(baseUrl + `/supportms/support/getHelpReleseNotes`)\n      // axios.get(``)\n      .then((res) => {\n        const GetData = res.data;\n        GetData.forEach((GetData, index) => {\n          GetData[\"S_No\"] = index + 1;\n          GetData[\"id\"] = index;\n        });\n        let dataHeader = [\n          {\n            \"S_No\": \"S.No\",\n            version_number: \"Version Number\",\n            file_name: \"Release Notes\",\n            release_date: \"Release Date\",\n          },\n        ];\n\n        let data = [\"file_name\"];\n\n        setLinkColumns(data);\n\n        let fData = [...dataHeader, ...GetData];\n        console.log(fData);\n        console.log(GetData[0]?.document_id);\n        setData(fData);\n        console.log(data);\n      })\n      .catch((error) => {\n        console.log(\"Error :\" + error);\n      });\n  };\n\n  useEffect(() => {\n    getData();\n    // getCustomer();\n  }, []);\n  const handleClick = () => {\n    setErrorMsg(false);\n    setCustName(true);\n  };\n  return (\n    <div>\n      <div className=\"col-md-12 mb-2\">\n        <div className=\"pageTitle\">\n          <div className=\"childOne\"></div>\n          <div className=\"childTwo\">\n            <h2>Release Notes</h2>\n          </div>\n          <div className=\"childThree\"></div>\n        </div>\n      </div>\n      <div className=\"customCard\">\n        <div className=\"col-md-12\">\n          <div className=\"col-2 mb-2\">\n            <button\n              id=\"upload\"\n              name=\"upload\"\n              className=\"btn btn-primary\"\n              onClick={() => handleClick()}\n            >\n              <FaUpload />\n              Upload\n            </button>\n          </div>\n        </div>\n        {errorMsg==true?(\n        <div className=\"statusMsg error\">\n          <AiFillWarning /> Document is not available\n        </div>)\n        :\"\"}\n        <CellRendererPrimeReactDataTable\n          data={data}\n          linkColumns={linkColumns}\n          // linkColumnsRoutes={linkColumnsRoutes}\n          dynamicColumns={dynamicColumns}\n          headerData={headerData}\n          setHeaderData={setHeaderData}\n          rows={10}\n        />\n      </div>\n      {custName ? (\n        <ReleaseNotesUpdatePopup\n          custName={custName}\n          setCustName={setCustName}\n          getData={getData}\n          // document={document}\n          folder={folder}\n          data={data}\n        />\n      ) : (\n        \"\"\n      )}\n    </div>\n  );\n}\n\nexport default CustomerRisks;\n"],"names":["ReleaseNotesUpdatePopup","props","custName","setCustName","getData","data","useState","successfullymsg","setSuccessfullymsg","date","setDate","selectedFile","setSelectedFile","loggedUserId","localStorage","getItem","ref","useRef","baseUrl","environment","releaseDate","versionNumber","formData1","setFormData1","console","log","validationmessage","setValidationMessage","size","visible","onClose","backdrop","className","style","cursor","ele","current","id","selected","autoComplete","showMonthDropdown","showYearDropdown","onChange","e","prev","moment","format","dateFormat","onKeyDown","preventDefault","type","target","value","backgroundColor","border","name","accept","placeholder","files","onClick","validNw","i","length","versionNum","version_number","releaseDt","release_date","fileNm","file_name","valid","GlobalValidation","axios","file","headers","then","res","catch","error","setTimeout","handleUpload","customerId","setData","upload","business","svnrevision","setSvnrevision","headerData","setHeaderData","linkColumns","setLinkColumns","folder","setFolder","errorMsg","setErrorMsg","LinkTemplate","svn_revision","doc_folder_id","downloadEmployeeData","title","Align","S_No","AlignRight","Toggletooltip","document_id","dynamicColumns","Object","keys","map","col","sortable","body","field","header","docUrl","url","method","responseType","response","window","URL","createObjectURL","Blob","link","document","createElement","href","setAttribute","appendChild","click","useEffect","JSON","parse","stringify","GetData","forEach","index","fData","CellRendererPrimeReactDataTable","rows"],"sourceRoot":""}