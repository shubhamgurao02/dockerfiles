{"version":3,"file":"static/js/3040.599f00e5.chunk.js","mappings":"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","sources":["views/CostComponent/CostRoleGridFilters.js","views/CostComponent/RoleCostGridDelete.js","views/CostComponent/AddRoleGrid.js","views/CostComponent/CostRoleGrid.js"],"sourcesContent":["import React from \"react\";\nimport { AiOutlinePlusCircle } from \"react-icons/ai\";\n\nfunction CostRoleGridFilters(props) {\n  const {\n    countries,\n    practices,\n    cadres,\n    setAddRoleGrid,\n    addRoleGrid,\n    addRoleGridData,\n    formData,\n    setFormData,\n    onChangeFilters,\n    filtersClickHandler,\n  } = props;\n\n  return (\n    <>\n      <div class=\"group-content row\">\n        <div class=\"col-md-3 mb-2\">\n          <div class=\"form-group row\">\n            <label class=\"col-5\" for=\"BuIds\">\n              Practice <span style={{ color: \"red\" }}>{\"*\"}</span>\n            </label>\n            <span class=\"col-1 p-0\">:</span>\n            <div class=\"col-6\">\n              {\" \"}\n              <select id=\"practice\" onChange={(e) => onChangeFilters(e)}>\n                <option key=\"\" value=\"\">\n                  {\"<<Please Select>>\"}\n                </option>\n                {practices.map((data) => (\n                  <option key={data.id} value={data.id}>\n                    {data.groupName}\n                  </option>\n                ))}\n              </select>\n            </div>\n          </div>\n        </div>\n\n        <div class=\"col-md-3 mb-2\">\n          <div class=\"form-group row\">\n            <label class=\"col-5\" for=\"BuIds\">\n              Country <span style={{ color: \"red\" }}>{\"*\"}</span>\n            </label>\n            <span class=\"col-1 p-0\">:</span>\n            <div class=\"col-6\">\n              <select id=\"country\" onChange={(e) => onChangeFilters(e)}>\n                <option key=\"\" value=\"\">\n                  {\"<<Please Select>>\"}\n                </option>\n                {countries.map((data) => (\n                  <option key={data.id} value={data.id}>\n                    {data.country_name}\n                  </option>\n                ))}\n              </select>\n            </div>\n          </div>\n        </div>\n\n        <div class=\"col-md-3 mb-2\">\n          <div class=\"form-group row\">\n            <label class=\"col-5\" for=\"BuIds\">\n              Cadre <span style={{ color: \"red\" }}>{\"*\"}</span>\n            </label>\n            <span class=\"col-1 p-0\">:</span>\n            <div class=\"col-6\">\n              {\" \"}\n              <select id=\"cadre\" onChange={(e) => onChangeFilters(e)}>\n                <option key=\"\" value=\"\">\n                  {\"<<Please Select>>\"}\n                </option>\n                {cadres.map((data) => (\n                  <option key={data.id} value={data.cadre_code}>\n                    {data.cadre_code}\n                  </option>\n                ))}\n              </select>\n            </div>\n          </div>\n        </div>\n\n        <div class=\"col-md-12 col-sm-12 col-xs-12 btn-container center my-3 mb-2\">\n          <button\n            type=\"submit\"\n            class=\"btn btn-primary\"\n            title=\"Search\"\n            onClick={() => {\n              filtersClickHandler();\n            }}\n          >\n            Search\n          </button>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default CostRoleGridFilters;\n","import React from 'react'\nimport { CModal } from '@coreui/react'\nimport { CModalBody } from '@coreui/react'\nimport { CModalHeader } from '@coreui/react'\nimport { CModalTitle } from '@coreui/react'\nimport { CButton } from '@coreui/react'\n\n\nfunction RoleCostGridDelete(props) {\n\n    const { roleGridDeleteState, setRoleGridDeleteState , gridCostDeleter } = props;\n    return (\n        <div>\n            <CModal size=\"sm\" visible={roleGridDeleteState} onClose={() => setRoleGridDeleteState(false)}>\n                <CModalHeader className='hgt22'>\n                    <CModalTitle><span className='ft16' >Delete Record</span></CModalTitle>\n                </CModalHeader>\n                <CModalBody >\n\n                <div class=\"modal-body\">\n                    <div class=\"col-md-12 addRoleGridSubHeader\">\n                        <b>Are You Sure Want To Delete?</b>\n                    </div>\n                    <div class=\"col-md-12 mt-2 addRoleGridButtons\" align=\"right\">\n                        <button class=\"btn btn-sm btn-outline-secondary mx-3\" type=\"button\">\n                            Cancel\n                            </button>\n                        <button class=\"btn btn-sm btn-danger\" type=\"button\">\n                            Delete\n                        </button>\n                    </div>\n                </div>\n\n                {/* <div className='col-md-12'><b>Are You Sure Want To Delete?</b></div>\n                    <div className='col-md-12' align=\"right\">\n                        <span className='mr5'>\n                            <CButton color=\"secondary\" onClick={() => {setRoleGridDeleteState(false) }}>\n                                <span>No</span>\n                            </CButton>\n                        </span>\n                        <span className='mr5'>\n                            <CButton color=\"secondary\" onClick={() => { gridCostDeleter() }}>\n                            <span>Yes</span>\n                            </CButton>\n                        </span>\n                    </div> */}\n                </CModalBody>\n            </CModal>\n        </div>\n    )\n}\n\nexport default RoleCostGridDelete","import React, { useEffect, useRef, useState } from \"react\";\nimport { AiOutlinePlusCircle } from \"react-icons/ai\";\nimport { AiFillEdit } from \"react-icons/ai\";\nimport { AiFillDelete } from \"react-icons/ai\";\nimport { AiFillSave } from \"react-icons/ai\";\nimport { AiFillCloseCircle } from \"react-icons/ai\";\nimport { BiError } from \"react-icons/bi\";\nimport axios from \"axios\";\nimport { environment } from \"../../environments/environment\";\nimport { IconButton } from \"@mui/material\";\nimport RoleCostGridDelete from \"./RoleCostGridDelete\";\n\nfunction AddRoleGrid(props) {\n  const {\n    addRoleGridData,\n    countries,\n    practices,\n    cadres,\n    roleGridCostData,\n    getCostRoleGrid,\n    addRoleGrid,\n    setAddRoleGrid,\n    setLoaderState,\n  } = props;\n\n  const [displayTable, setDisplayTable] = useState(null);\n  const [displayRowEdit, setDisplayRowEdit] = useState(false);\n\n  const initialValue = {};\n  const [validationMsg, setValidationMsg] = useState(null);\n  const [succesMsg, setSuccesMsg] = useState(false);\n\n  const editableRow = useRef(null);\n\n  const [editedValue, setEditedValue] = useState(-1);\n  const [roleGridDeleteState, setRoleGridDeleteState] = useState(false);\n  const [deleteGridValue, setDeleteGridValue] = useState(-1);\n  const [deleteStatus, setDeleteStatus] = useState(false);\n  const salaryDiffRef = useRef(null);\n\n  const baseUrl = environment.baseUrl;\n\n  let headers = [\n    \"Practice\",\n    \"Cadre\",\n    \"Country\",\n    \"Min. Exp.\",\n    \"Max. Exp\",\n    \"Min. Salary\",\n    \"Max. Salary\",\n    \"Difference Max-Min(L)\",\n    \"GM%\",\n    \"Revenue Influence\",\n    \"Action\",\n  ];\n\n  let tabHeaders = [\n    \"group_name\",\n    \"cadre\",\n    \"country_name\",\n    \"min_experience\",\n    \"max_experience\",\n    \"min_salary\",\n    \"max_salary\",\n    \"salary_diff\",\n    \"gm_perc\",\n    \"revenue_influence\",\n    \"total_count\",\n    \"below_min_sal\",\n    \"above_max_salary\",\n    \"less_than_median\",\n    \"greater_than_median\",\n    \"equal_to_median\",\n    \"action\",\n  ];\n\n  let nonEditableRows = [\n    \"total_count\",\n    \"below_min_sal\",\n    \"above_max_salary\",\n    \"less_than_median\",\n    \"greater_than_median\",\n    \"equal_to_median\",\n  ];\n\n  useEffect(() => {\n    displayTableFnc();\n  }, []);\n\n  const saveCostRoleGrid = () => {\n    setLoaderState(true);\n\n    if (editedValue !== -1) {\n      initialValue[\"country_name\"] = initialValue.country_id;\n      initialValue[\"group_name\"] = initialValue.practice_id;\n    }\n\n    axios({\n      method: \"POST\",\n      url: baseUrl + `/CostMS/cost/saveRoleGridCost`,\n      data: initialValue,\n    }).then((resp) => {\n      if (resp.data.status) {\n        setAddRoleGrid(false);\n        Object.keys(initialValue).forEach((key) => {\n          delete initialValue[key];\n        });\n        setLoaderState(false);\n        setSuccesMsg(true);\n        setTimeout(() => {\n          setSuccesMsg(false);\n        }, 5000);\n        getCostRoleGrid();\n        setDisplayRowEdit(false);\n        displayTableFnc();\n      }\n    });\n  };\n\n  const onChangeRowEdit = (e) => {\n    const { id, value } = e.target;\n    initialValue[id] = value;\n\n    if (\n      initialValue.min_salary !== undefined &&\n      initialValue.max_salary !== undefined\n    ) {\n      initialValue[\"salary_diff\"] =\n        initialValue.max_salary - initialValue.min_salary;\n      salaryDiffRef.current.value = initialValue[\"salary_diff\"];\n    }\n  };\n\n  const onKeyPress = (e) => {\n    var code = e.which ? e.which : e.keyCode;\n    if (code == 8 || code == 46 || code == 37 || code == 39) {\n      return e.key;\n    } else if (code < 48 || code > 57) {\n      return e.preventDefault();\n    } else return e.key;\n  };\n\n  const displayTableFnc = () => {\n    setDisplayTable(() => {\n      let data = roleGridCostData;\n      let fData = [];\n      if (displayRowEdit) {\n        fData = [{ ...tabHeaders }, ...data];\n      } else {\n        fData = roleGridCostData;\n      }\n\n      return fData.length === 0 ? (\n        <tr>\n          <td colSpan={17} align=\"center\">\n            No Records Found\n          </td>\n        </tr>\n      ) : (\n        fData.map((element, index) => {\n          let tabData = [];\n          if (\n            (displayRowEdit && index === 0) ||\n            (editedValue !== -1 && editedValue === index)\n          ) {\n            if (editedValue !== -1) {\n              Object.assign(initialValue, element);\n            }\n            tabHeaders.forEach((inEle, inInd) => {\n              if (inEle === \"action\") {\n                tabData.push(\n                  <td>\n                    <AiFillSave\n                      title={\"Save\"}\n                      className=\"pointerCursor\"\n                      onClick={(e) => {\n                        validateValues();\n                      }}\n                    />\n                    <AiFillCloseCircle\n                      title={\"Cancel\"}\n                      className=\"pointerCursor\"\n                      onClick={(e) => {\n                        closeEditedRowFnc();\n                      }}\n                    />\n                  </td>\n                );\n              } else if (inEle === \"group_name\") {\n                tabData.push(\n                  <td>\n                    <select\n                      id={inEle}\n                      className=\"textBxBrdrRd inputCss editableSelectHeight validateErr\"\n                      defaultValue={element[\"practice_id\"]}\n                      disabled={editedValue !== -1 ? true : false}\n                      onChange={(e) => {\n                        onChangeRowEdit(e);\n                      }}\n                    >\n                      <option key=\"\">{\"<<Please Select>>\"}</option>\n                      {practices.map((data) => (\n                        <option key={data.id} value={data.id}>\n                          {data.groupName}\n                        </option>\n                      ))}\n                    </select>\n                  </td>\n                );\n              } else if (inEle === \"cadre\") {\n                tabData.push(\n                  <td>\n                    <select\n                      id={inEle}\n                      className=\"textBxBrdrRd inputCss editableSelectHeight validateErr\"\n                      defaultValue={element[inEle]}\n                      disabled={editedValue !== -1 ? true : false}\n                      onChange={(e) => {\n                        onChangeRowEdit(e);\n                      }}\n                    >\n                      <option key=\"\">{\"<<Please Select>>\"}</option>\n                      {cadres.map((data) => (\n                        <option key={data.id} value={data.cadre_code}>\n                          {data.cadre_code}\n                        </option>\n                      ))}\n                    </select>\n                  </td>\n                );\n              } else if (inEle === \"country_name\") {\n                tabData.push(\n                  <td>\n                    <select\n                      id={inEle}\n                      className=\"textBxBrdrRd inputCss editableSelectHeight validateErr\"\n                      defaultValue={element[\"country_id\"]}\n                      disabled={editedValue !== -1 ? true : false}\n                      onChange={(e) => {\n                        onChangeRowEdit(e);\n                      }}\n                    >\n                      <option key=\"\">{\"<<Please Select>>\"}</option>\n                      {countries.map((data) => (\n                        <option key={data.id} value={data.id}>\n                          {data.country_name}\n                        </option>\n                      ))}\n                    </select>\n                  </td>\n                );\n              } else if (inEle === \"salary_diff\") {\n                tabData.push(\n                  <td id={inEle}>\n                    <input\n                      id={inEle}\n                      ref={salaryDiffRef}\n                      disabled=\"disabled\"\n                      defaultValue={0}\n                      onKeyPress={(e) => {\n                        return onKeyPress(e);\n                      }}\n                      type=\"text\"\n                      className=\"textBxBrdrRd inputCss validateErr disabledIcon\"\n                      onChange={(e) => {\n                        onChangeRowEdit(e);\n                      }}\n                    />\n                  </td>\n                );\n              } else if (nonEditableRows.includes(inEle) == false) {\n                tabData.push(\n                  <td id={inEle}>\n                    <input\n                      id={inEle}\n                      defaultValue={element[inEle]}\n                      onKeyPress={(e) => {\n                        return onKeyPress(e);\n                      }}\n                      type=\"text\"\n                      className=\"textBxBrdrRd inputCss validateErr\"\n                      onChange={(e) => {\n                        onChangeRowEdit(e);\n                      }}\n                    />\n                  </td>\n                );\n              } else {\n                tabData.push(<td id={inEle}>{element[inEle]}</td>);\n              }\n            });\n          } else {\n            tabHeaders.forEach((inEle, inInd) => {\n              if (inEle == \"action\") {\n                tabData.push(\n                  <td>\n                    <div align=\"center\">\n                      <span>\n                        <AiFillEdit\n                          title={\"Edit\"}\n                          className=\"pointerCursor\"\n                          onClick={(e) => {\n                            editHandler(element, index);\n                          }}\n                        />\n                      </span>\n                      <span>\n                        <AiFillDelete\n                          title={\"Delete\"}\n                          className=\"pointerCursor\"\n                          onClick={(e) => {\n                            roleGridCostDeleteHandler(element);\n                          }}\n                        />\n                      </span>\n                    </div>\n                  </td>\n                );\n              } else {\n                tabData.push(\n                  <td align={inInd > 2 ? \"right\" : \"left\"}>{element[inEle]}</td>\n                );\n              }\n            });\n          }\n          return <tr key={index}>{tabData}</tr>;\n        })\n      );\n    });\n  };\n\n  const roleGridCostDeleteHandler = (element) => {\n    setRoleGridDeleteState(true);\n    setDeleteGridValue(element.id);\n  };\n\n  const gridCostDeleter = () => {\n    const url =\n      baseUrl + `/CostMS/cost/deleteRoleCostGrid?id=${deleteGridValue}`;\n\n    axios\n      .delete(url)\n      .then((res) => {\n        let resp = res.data;\n        resp.status && setRoleGridDeleteState(false);\n        setDeleteStatus(true);\n        getCostRoleGrid();\n        setDisplayTable(null);\n        displayTableFnc();\n        setTimeout(() => {\n          setDeleteStatus(false);\n        }, 2000);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  const editHandler = (element, index) => {\n    setEditedValue(index);\n  };\n\n  useEffect(() => {\n    displayTableFnc();\n  }, [editedValue]);\n\n  const validateValues = () => {\n    let data = document.getElementsByClassName(\"validateErr\");\n\n    let validationArrMsg = [];\n\n    for (let i = 0; i < data.length; i++) {\n      let value = data[i].value;\n      let clsList = data[i].classList;\n\n      if (value === \"\" && clsList.contains(\"txtBoxBorderColor\") === false) {\n        clsList.add(\"txtBoxBorderColor\");\n      } else {\n        clsList.remove(\"txtBoxBorderColor\");\n      }\n      validationArrMsg.push(clsList.contains(\"txtBoxBorderColor\"));\n    }\n\n    setValidationMsg(validationArrMsg.includes(true) ? true : false);\n    setTimeout(() => {\n      setValidationMsg(false);\n    }, 3000);\n\n    if (validationArrMsg.includes(true)) {\n      return;\n    }\n\n    saveCostRoleGrid();\n  };\n\n  useEffect(() => {\n    displayTableFnc();\n  }, [displayRowEdit]);\n\n  const addRowEditFnc = () => {\n    setDisplayRowEdit((prev) => (prev ? prev : !prev));\n  };\n\n  const closeEditedRowFnc = () => {\n    setDisplayRowEdit((prev) => false);\n    setValidationMsg(false);\n    setEditedValue(-1);\n    // initialValue = {};\n    for (const prop of Object.getOwnPropertyNames(initialValue)) {\n      delete initialValue[prop];\n    }\n  };\n\n  return (\n    <div>\n      {validationMsg ? (\n        <div className=\"col-md-12 statusMsg error\">\n          <BiError />\n          {\"Please Provide Mandatory Fields\"}\n        </div>\n      ) : (\n        \"\"\n      )}\n      {deleteStatus ? (\n        <div className=\"successMsg\">{\"Deleted Grid Cost Successfully\"}</div>\n      ) : (\n        \"\"\n      )}\n      <table\n        className=\"table table-bordered table-striped\"\n        style={{ width: \"100%\" }}\n      >\n        <tbody>\n          <tr>\n            <th>Practice</th>\n            <th>Cadre</th>\n            <th>Country</th>\n            <th>Min. Exp.</th>\n            <th>Max. Exp</th>\n            <th>Min. Salary</th>\n            <th>Max. Salary</th>\n            <th>Difference Max-Min(L)</th>\n            <th>GM%</th>\n            <th>Revenue Influence</th>\n            <th>Total Count</th>\n            <th>Below Min</th>\n            <th>Above Max</th>\n            <th>{\"< Median\"}</th>\n            <th>{\"> Median\"}</th>\n            <th>{\" Median\"}</th>\n            <th>Action</th>\n          </tr>\n          {displayTable}\n        </tbody>\n      </table>\n      <button\n        className=\"btn btn-primary\"\n        title={\"Add\"}\n        onClick={(e) => {\n          addRowEditFnc();\n        }}\n      >\n        <AiOutlinePlusCircle style={{ marginRight: \"3px\" }} />\n        Add\n      </button>\n\n      {roleGridDeleteState ? (\n        <>\n          <RoleCostGridDelete\n            roleGridDeleteState={roleGridDeleteState}\n            setRoleGridDeleteState={setRoleGridDeleteState}\n            gridCostDeleter={gridCostDeleter}\n          />\n        </>\n      ) : (\n        \"\"\n      )}\n    </div>\n  );\n}\n\nexport default AddRoleGrid;\n","import axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport { environment } from \"../../environments/environment\";\nimport CostRoleGridFilters from \"./CostRoleGridFilters\";\nimport \"./CostCss.scss\";\nimport AddRoleGrid from \"./AddRoleGrid\";\nimport Loader from \"../Loader/Loader\";\n\nfunction CostRoleGrid() {\n  const baseUrl = environment.baseUrl;\n\n  const [countries, setCountries] = useState([]);\n  const [practices, setPractices] = useState([]);\n  const [cadres, setCadres] = useState([]);\n  const [addRoleGrid, setAddRoleGrid] = useState(false);\n  const [addRoleGridData, setAddRoleGridData] = useState([]);\n  const [roleGridCostData, setRoleGridCostData] = useState([]);\n  const [roleGridMedianCostData, setRoleGridMedianCostData] = useState([]);\n  const [signal, setSignal] = useState(false);\n\n  const initialValueForm = {\n    practice: \"\",\n    country: \"\",\n    cadre: \"\",\n  };\n\n  const loggedUserId = localStorage.getItem(\"resId\");\n  let url = window.location.href;\n\n  const [formData, setFormData] = useState(initialValueForm);\n  const [loaderState, setLoaderState] = useState(false);\n\n  useEffect(() => {\n    getCostRoleGrid();\n    getCountries();\n    getPractices();\n    getCadres();\n    getIpAddress();\n  }, []);\n\n  useEffect(() => {}, [roleGridCostData]);\n\n  const getCountries = () => {\n    axios({\n      url: baseUrl + `/CostMS/cost/getCountries`,\n    }).then((resp) => {\n      setCountries(resp.data);\n    });\n  };\n\n  const getPractices = () => {\n    axios({\n      url: baseUrl + `/CostMS/cost/getPractices`,\n    }).then((resp) => {\n      setPractices(resp.data);\n    });\n  };\n\n  const getCadres = () => {\n    axios({\n      url: baseUrl + `/CostMS/cost/getCadres`,\n    }).then((resp) => {\n      setCadres(resp.data);\n    });\n  };\n\n  const getCostRoleGrid = () => {\n    setSignal(false);\n    setLoaderState(true);\n\n    axios({\n      method: \"POST\",\n      url: baseUrl + \"/CostMS/cost/getRoleGridCost\",\n      data: formData,\n    }).then((resp) => {\n      setRoleGridCostData(resp.data);\n      setSignal(true);\n      setLoaderState(false);\n    });\n  };\n\n  const getIpAddress = async () => {\n    await fetch(\"https://geolocation-db.com/json/\")\n      .then((response) => {\n        return response.json();\n      }, \"jsonp\")\n      .then((res) => {\n        loginHistoryTracks(res.IPv4);\n      })\n      .catch((err) => console.log(err));\n  };\n\n  const loginHistoryTracks = (ipAddress) => {\n    const loginTrackData = {};\n\n    let urlData = url.split(\"#\");\n\n    loginTrackData[\"ipAddress\"] = ipAddress;\n    loginTrackData[\"userId\"] = loggedUserId;\n    loginTrackData[\"url\"] = urlData[1];\n\n    axios({\n      method: \"POST\",\n      url: baseUrl + \"/CostMS/cost/saveLoginTracks\",\n      data: loginTrackData,\n    }).then((resp) => {\n      console.log(resp.data);\n    });\n  };\n\n  const onChangeFilters = (e) => {\n    const { id, value } = e.target;\n\n    setFormData((prev) => ({ ...prev, [id]: value }));\n  };\n\n  const filtersClickHandler = () => {\n    console.log(formData);\n    getCostRoleGrid();\n  };\n\n  return (\n    <div>\n      {loaderState ? <Loader /> : \"\"}\n      <>\n        <CostRoleGridFilters\n          countries={countries}\n          practices={practices}\n          cadres={cadres}\n          setAddRoleGrid={setAddRoleGrid}\n          addRoleGrid={addRoleGrid}\n          addRoleGridData={addRoleGridData}\n          formData={formData}\n          setFormData={setFormData}\n          onChangeFilters={onChangeFilters}\n          filtersClickHandler={filtersClickHandler}\n        />\n      </>\n\n      {signal && (\n        <div className=\"col-xs-12 col-sm-12 col-md-12 col-lg-12 customCard\">\n          <AddRoleGrid\n            addRoleGridData={addRoleGridData}\n            countries={countries}\n            practices={practices}\n            cadres={cadres}\n            roleGridCostData={roleGridCostData}\n            getCostRoleGrid={getCostRoleGrid}\n            addRoleGrid={addRoleGrid}\n            setAddRoleGrid={setAddRoleGrid}\n            setLoaderState={setLoaderState}\n          />\n        </div>\n      )}\n\n      {/* <div className='col-xs-12 col-sm-12 col-md-12 col-lg-12 customCard'>\n        {signal && <DisplayRoleCostGridData roleGridCostData={roleGridCostData} />}\n      </div> */}\n    </div>\n  );\n}\n\nexport default CostRoleGrid;\n"],"names":["props","countries","practices","cadres","onChangeFilters","setAddRoleGrid","addRoleGrid","addRoleGridData","formData","setFormData","filtersClickHandler","class","for","style","color","id","onChange","e","value","map","data","groupName","country_name","cadre_code","type","title","onClick","roleGridDeleteState","setRoleGridDeleteState","gridCostDeleter","size","visible","onClose","className","align","roleGridCostData","getCostRoleGrid","setLoaderState","useState","displayTable","setDisplayTable","displayRowEdit","setDisplayRowEdit","initialValue","validationMsg","setValidationMsg","setSuccesMsg","useRef","editedValue","setEditedValue","deleteGridValue","setDeleteGridValue","deleteStatus","setDeleteStatus","salaryDiffRef","baseUrl","environment","tabHeaders","nonEditableRows","useEffect","displayTableFnc","onChangeRowEdit","target","undefined","min_salary","max_salary","current","onKeyPress","code","which","keyCode","key","preventDefault","fData","length","colSpan","element","index","tabData","Object","assign","forEach","inEle","inInd","push","validateValues","closeEditedRowFnc","defaultValue","disabled","ref","includes","editHandler","roleGridCostDeleteHandler","document","getElementsByClassName","validationArrMsg","i","clsList","classList","contains","add","remove","setTimeout","country_id","practice_id","axios","method","url","then","resp","status","keys","prev","getOwnPropertyNames","prop","width","marginRight","res","catch","err","console","log","setCountries","setPractices","setCadres","setRoleGridCostData","signal","setSignal","loggedUserId","localStorage","getItem","window","location","href","practice","country","cadre","loaderState","getCountries","getPractices","getCadres","getIpAddress","fetch","response","json","loginHistoryTracks","IPv4","ipAddress","loginTrackData","urlData","split","Loader"],"sourceRoot":""}