{"version":3,"file":"static/js/6794.b02277a8.chunk.js","mappings":"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","sources":["views/TimeAndExpenses/Expenses/FixedPriceOpenDataTable.js","views/TimeAndExpenses/Expenses/FixedPriceOpenSecondTable.js","views/TimeAndExpenses/Expenses/FixedPriceOpenFirstTable.js","views/TimeAndExpenses/FixedPriceOpen.js"],"sourcesContent":["import { useState, useEffect, useRef } from \"react\";\nimport {\n  CCollapse,\n  CModal,\n  CModalBody,\n  CModalHeader,\n  CModalTitle,\n} from \"@coreui/react\";\nimport { ColumnGroup } from \"primereact/columngroup\";\n\nimport { FaChevronCircleDown, FaChevronCircleUp } from \"react-icons/fa\";\nimport { DataTable } from \"primereact/datatable\";\nimport { Row } from \"primereact/row\";\n\nimport SaveIcon from \"@mui/icons-material/Save\";\nimport moment from \"moment\";\nimport Loader from \"../../Loader/Loader\";\nimport { Column } from \"ag-grid-community\";\nimport axios from \"axios\";\nimport { environment } from \"../../../environments/environment\";\nimport { node } from \"prop-types\";\nimport { BiRefresh } from \"react-icons/bi\";\n// import GlobalValidation from \"../../ValidationComponent/GlobalValidation\";\nimport GlobalValidation from \"../../ValidationComponent/GlobalValidation\";\nimport { Link } from \"react-router-dom\";\nimport { InputText } from \"primereact/inputtext\";\nimport { FilterMatchMode } from \"primereact/api\";\n\nexport default function FixedPriceOpenDataTable(props) {\n  const {\n    linkId,\n    firstTableData,\n    projectInfoTab,\n    setUpdatedata,\n    formData,\n    updateddata,\n    setProjectinfoTab,\n    setLoader,\n    isMatchedId,\n    isMatchedDMId,\n    isMatchedFMId,\n    setHidewholetables,\n    getGraph,\n    getDataBsedGrpah,\n    setAddmsg,\n    setValidationMessage,\n    storegrpahname,\n    resourceInfo,\n    setResourceInfo,\n    billDetailsCount,\n    reviewerAction,\n    getResourceInfo,\n    headerData\n  } = props;\n  \n  const [visibleA, setVisibleA] = useState(false);\n  const [refreshResourceInfo, setRefreshResourceInfo] = useState([]);\n  var GetData;\n  const [visibleB, setVisibleB] = useState(false);\n  const [cheveronIconB, setCheveronIconB] = useState(FaChevronCircleDown);\n  const [cheveronIconA, setCheveronIconA] = useState(FaChevronCircleDown);\n  const baseUrl = environment.baseUrl;\n  const billingMonth1 = formData.billingMonth;\n  const lastDateOfMonth2 = moment(billingMonth1)\n    .endOf(\"month\")\n    .format(\"YYYY-MM-DD\");\n  const loggedUserId = localStorage.getItem(\"resId\");\n  const dateStr = formData.billingMonth;\n  const date = new Date(dateStr);\n  const formattedDate = date.toLocaleString(\"en-US\", {\n    month: \"long\",\n    year: \"numeric\",\n  });\n  const [totalProjectValue, setTotalProjectValue] = useState(\n    projectInfoTab[0]?.TotalProjectVal ? projectInfoTab[0].TotalProjectVal : 0\n  );\n  const [revenueAccured, setRevenueAccured] = useState(\n    projectInfoTab[0]?.RevenueAccuredtillDate\n      ? projectInfoTab[0].RevenueAccuredtillDate\n      : 0\n  );\n  const [remainingBudget, setRemainingBudget] = useState(\n    projectInfoTab[0]?.bal_amount ? projectInfoTab[0].bal_amount : 0\n  );\n  const [projectCompletion, setProjectCompletion] = useState(\n    projectInfoTab[0]?.projectCompletion\n      ? projectInfoTab[0].projectCompletion\n      : 0\n  );\n  const [billingAmount, setBillingAmount] = useState(projectInfoTab[0]?.Billingamount != null ? projectInfoTab[0].Billingamount : 0);\n  const [billingAction, setBillingAction] = useState(\n    projectInfoTab[0]?.Billingaction\n  );\n  const [selectaplydis, setSelectaplydis] = useState(\n    projectInfoTab[0]?.has_discount == true ? \"Yes\" : \"No\"\n  );\n  const [selectdistype, setSelectdistype] = useState(\n    projectInfoTab[0]?.discountType\n  );\n  const [discAmount, setDiscAmount] = useState(\n    projectInfoTab[0]?.discountAmount\n  );\n  useEffect(() => {\n    setTotalProjectValue(\n      projectInfoTab[0]?.TotalProjectVal ? projectInfoTab[0].TotalProjectVal : 0\n    );\n    setRevenueAccured(\n      projectInfoTab[0]?.RevenueAccuredtillDate\n        ? projectInfoTab[0].RevenueAccuredtillDate\n        : 0\n    );\n    setRemainingBudget(\n      projectInfoTab[0]?.bal_amount ? projectInfoTab[0].bal_amount : 0\n    );\n    setProjectCompletion(\n      projectInfoTab[0]?.projectCompletion\n        ? projectInfoTab[0].projectCompletion\n        : 0\n    );\n    setBillingAmount(projectInfoTab[0]?.Billingamount != null ? projectInfoTab[0].Billingamount : 0);\n    setBillingAction(projectInfoTab[0]?.Billingaction);\n    setSelectaplydis(projectInfoTab[0]?.has_discount == true ? \"Yes\" : \"No\");\n    setSelectdistype(projectInfoTab[0]?.discountType);\n    setDiscAmount(projectInfoTab[0]?.discountAmount);\n  }, [projectInfoTab]);\n\n  useEffect(() => {\n    if (billingAmount == 0 && storegrpahname === \"In PM Review\") {\n      const sumOfBillAmounts = nodes.reduce((acc, node) => {\n        // Convert the \"billAmount\" string to a number and add it to the accumulator\n        return acc + parseFloat(node.billTotHours * node.finalBillRate);\n      }, 0);\n      if(selectdistype === \"Amount\"){\n        setNetBillingAmount(\n          sumOfBillAmounts - (selectaplydis == \"Yes\" ? discAmount : 0)\n        );\n      }\n      else if(selectdistype === \"Percentage\"){\n        setNetBillingPercentage(\n          (sumOfBillAmounts * (100 - (selectaplydis == \"Yes\" ? discAmount : 0))) /\n            100\n        );\n      }\n      setBillingAmount(sumOfBillAmounts);\n    } else {\n      if (selectdistype === \"Amount\") {\n        setNetBillingAmount(\n          billingAmount -\n            (selectaplydis == \"Yes\" ? discAmount : 0)\n        );\n      }\n      else if(selectdistype === \"Percentage\"){\n        setNetBillingPercentage(\n          (billingAmount * (100 - (selectaplydis == \"Yes\" ? discAmount : 0))) /\n            100\n        );\n      }\n    }\n  }, [discAmount, billingAmount])\n  \n\n  const getProjectinfo = () => {  \n    axios\n      .get(\n        baseUrl + `/timeandexpensesms/getProjectInfo?id=${linkId}`\n      )\n      .then((res) => {\n        const GetData = res.data;\n        for (let i = 0; i < GetData.length; i++) {\n          GetData[i][\"has_discount\"] =\n            GetData[i][\"has_discount\"] == true ? 1 : 0;\n        }\n        setProjectinfoTab(GetData);\n        setTimeout(() => {\n          setLoader(false);\n        }, 1000);\n      })\n      .catch((error) => {\n        console.log(\"Error :\" + error);\n      });\n  };\n  const [nodes, setNodes] = useState(resourceInfo);\n  const [NetBillingAmount, setNetBillingAmount] = useState(projectInfoTab[0]?.NetBiliingAmount);\n  const [NetBillingPercentage, setNetBillingPercentage] = useState(projectInfoTab[0]?.NetBiliingAmount);\n\n  // =========Search Filters Code=============\n\n  const filtersData = {\n    contains: { value: null, matchMode: FilterMatchMode.CONTAINS },\n  };\n  const [filters1, setFilters1] = useState({\n    global: filtersData[\"contains\"],\n  });\n\n  useEffect(() => {\n    setFilters1({\n      global: filtersData[\"contains\"],\n    });\n  }, [headerData]);\n\n  const [globalFilterValue1, setGlobalFilterValue1] = useState(\"\");\n\n  const onGlobalFilterChange1 = (e) => {\n    const value = e.target.value;\n    let _filters1 = { ...filters1 };\n\n    _filters1[\"global\"].value = value;\n\n    setFilters1(_filters1);\n    setGlobalFilterValue1(value);\n  };\n\n  const renderHeader1 = () => {\n    return (\n      <div className=\"flex justify-content-between\">\n        <span></span>\n        <span className=\"p-input-icon-left tableGsearch\">\n          <i className=\"pi pi-search\" />\n          <InputText\n            defaultValue={globalFilterValue1}\n            onChange={onGlobalFilterChange1}\n            placeholder=\"Keyword Search\"\n            style={{ textAlign: \"center\", verticalAlign: \"middle\" }}\n          />\n        </span>\n      </div>\n    );\n  };\n\n  const header1 = renderHeader1();\n\n  // =============================== END of Filter code ==================================\n\n  const initialValue1 = {};\n  const [tabledata, settabledata] = useState(initialValue1);\n  useEffect(() => {\n    settabledata(nodes);\n  }, [nodes]);\n  useEffect(() => {\n    settabledata(refreshResourceInfo);\n    setNodes(refreshResourceInfo);\n  }, [refreshResourceInfo]);\n  useEffect(() => {\n    setVisibleA(false);\n    setVisibleB(false);\n    setCheveronIconA(FaChevronCircleDown);\n    setCheveronIconB(FaChevronCircleDown);\n  }, [linkId]);\n  useEffect(() => {\n    setNodes(resourceInfo);\n  }, [resourceInfo]);\n\n  const wrk_Ot_Hours = (rowData) => {\n    const handleChange = (e, billOtHours, id) => {\n      const newAllowExtraWkndHours = e.target.value;\n      const parsedBillTotHours = parseFloat(rowData.billTotHours);\n      // Check if newAllowExtraWkndHours is empty or not a valid number\n      if (newAllowExtraWkndHours === \"\" || isNaN(newAllowExtraWkndHours)) {\n        // Set newAllowExtraWkndHours to 0 if it's empty or not a valid number\n        const parsedAllowExtraWkndHours = 0;\n        const newTotalAmount =\n          parsedAllowExtraWkndHours - rowData.billOtHours + parsedBillTotHours;\n        const updatedResourceInfo = nodes.map((element) => {\n          if (element.id === rowData.id) {\n            return {\n              ...element,\n              billOtHours: newAllowExtraWkndHours,\n              billTotHours: newTotalAmount.toFixed(2),\n              // unbillHours: newAllowExtraWkndHours * -1,\n            };\n          } else {\n            return element;\n          }\n        });\n        setNodes(updatedResourceInfo);\n      } else {\n        // Perform calculations with the parsed value when it's not empty\n        const parsedAllowExtraWkndHours = parseFloat(newAllowExtraWkndHours);\n        const newTotalAmount =\n          parsedAllowExtraWkndHours - rowData.billOtHours + parsedBillTotHours;\n        const updatedResourceInfo = nodes.map((element) => {\n          if (element.id === rowData.id) {\n            return {\n              ...element,\n              billOtHours: newAllowExtraWkndHours,\n              billTotHours: newTotalAmount.toFixed(2),\n            };\n          } else {\n            return element;\n          }\n        });\n        setNodes(updatedResourceInfo);\n      }\n    };\n\n    const handleKeyPress = (e) => {\n      const keyCode = e.keyCode || e.which;\n      const keyValue = String.fromCharCode(keyCode);\n      const regex = /^[0-9]*$/; // only allow digits\n      if (!regex.test(keyValue)) {\n        e.preventDefault();\n      }\n    };\n    return (\n      <>\n        <input\n          type=\"text\"\n          id=\"billOtHours\"\n          name=\"billOtHours\"\n          defaultValue={rowData.billOtHours}\n          title={rowData.billOtHours}\n          onChange={(e) => {\n            handleChange(e);\n          }}\n          disabled={\n            (isMatchedId == false ||\n              !(\n                storegrpahname == \"In PM Review\" ||\n                storegrpahname == \"DM Rejected\" ||\n                storegrpahname == \"Finance Rejected\"\n              )) &&\n            (isMatchedDMId == false ||\n              !(\n                storegrpahname == \"In DM Review\" ||\n                storegrpahname == \"Finance Rejected\"\n              ))\n          }\n          onKeyPress={handleKeyPress}\n        />\n      </>\n    );\n  };\n  const final_Bill_Ratel = (rowData) => {\n    const handleChange = (event) => {\n      const { value, id } = event.target;\n      setUpdatedata((prev) => ({ ...prev, [id]: value }));\n      // Parse newAllowExtraWkndHours and check if it's a valid number\n      const newAllowExtraWkndHours = parseFloat(value);\n      const newAllowExtraWkndHoursAmt = isNaN(newAllowExtraWkndHours)\n        ? 0\n        : newAllowExtraWkndHours * 123;\n      const updatedResourceInfo = nodes.map((element) => {\n        if (element.id === rowData.id) {\n          return {\n            ...element,\n            finalBillRate: isNaN(newAllowExtraWkndHours)\n              ? \"\"\n              : newAllowExtraWkndHours,\n            billAmount: newAllowExtraWkndHours * rowData.billTotHours,\n          };\n        } else {\n          return element;\n        }\n      });\n      setNodes(updatedResourceInfo);\n    };\n\n    const handleKeyPress = (e) => {\n      const keyCode = e.keyCode || e.which;\n      const keyValue = String.fromCharCode(keyCode);\n      const regex = /^[0-9]*$/; // only allow digits\n      if (!regex.test(keyValue)) {\n        e.preventDefault();\n      }\n    };\n    return (\n      <>\n        <input\n          type=\"text\"\n          id=\"finalBillRate\"\n          name=\"finalBillRate\"\n          value={rowData.finalBillRate}\n          title={rowData.finalBillRate}\n          onChange={handleChange}\n          disabled={true}\n          onKeyPress={handleKeyPress}\n        />\n      </>\n    );\n  };\n  const billTotHoursToFixed = (rowData) => {\n    return (\n      <div\n        className=\"ellipsis\"\n        align=\"right\"\n        data-toggle=\"tooltip\"\n        title={rowData.billTotHours}\n      >\n        {rowData.billTotHours}\n      </div>\n    );\n  };\n\n  const wrkOtHourssFixed = (rowData) => {\n    return (\n      <div\n        className=\"ellipsis\"\n        align=\"right\"\n        data-toggle=\"tooltip\"\n        title={rowData.wrkOtHours}\n      >\n        {rowData.wrkOtHours}\n      </div>\n    );\n  };\n  const bill_Amount = (rowData) => {\n    const currencySymbol =\n      rowData.currency === \"&#36\"\n        ? \"$\"\n        : rowData.currency === \"&#8377\"\n        ? \"₹\"\n        : \"£\";\n    const billAmountData = isNaN(\n      parseFloat(rowData.billTotHours) * parseFloat(rowData.finalBillRate)\n    )\n      ? 0\n      : parseFloat(rowData.billTotHours) * parseFloat(rowData.finalBillRate);\n    return (\n      <span>\n        {currencySymbol}\n        {billAmountData.toFixed(2)}\n      </span>\n    );\n  };\n\n  function myFunctions(e) {\n    const { value, id } = e.target;\n    if (isMatchedFMId == true && storegrpahname == \"In Finance Review\") {\n      projectInfoTab((prev) => ({ ...prev, fin_comments: value }));\n    } else {\n      projectInfoTab((prev) => ({ ...prev, comments: value }));\n    }\n  }\n  const Comments = (rowData) => {\n    const handleChange = (e, id) => {\n      const newComments = e.target.value;\n      // Create a copy of the resourceInfo array\n      const updatedResourceInfo = [...resourceInfo];\n      // Find the index of the row you are editing based on the id\n      const rowIndex = updatedResourceInfo.findIndex(\n        (element) => element.id === id\n      );\n      // Update the comments for the specific row\n      if (rowIndex !== -1) {\n        updatedResourceInfo[rowIndex].comments = newComments;\n        setNodes(updatedResourceInfo);\n      }\n    };\n    const comments = rowData.comments === \"null\" ? \"\" : rowData.comments;\n    return (\n      <div\n        className={\n          (isMatchedId === false ||\n            !(\n              storegrpahname === \"In PM Review\" ||\n              storegrpahname === \"DM Rejected\" ||\n              storegrpahname === \"Finance Rejected\"\n            )) &&\n          (isMatchedDMId === false ||\n            !(\n              storegrpahname === \"In DM Review\" ||\n              storegrpahname === \"Finance Rejected\"\n            ))\n            ? \"disabledFieldStyles\"\n            : \"\"\n        }\n      >\n        <textarea\n          className=\"textarea\"\n          type=\"text\"\n          id=\"comments\"\n          name=\"comments\"\n          title={comments}\n          defaultValue={comments}\n          rows={1}\n          disabled={\n            (isMatchedId === false ||\n              !(\n                storegrpahname === \"In PM Review\" ||\n                storegrpahname === \"DM Rejected\" ||\n                storegrpahname === \"Finance Rejected\"\n              )) &&\n            (isMatchedDMId === false ||\n              !(\n                storegrpahname === \"In DM Review\" ||\n                storegrpahname === \"Finance Rejected\"\n              ))\n          }\n          onChange={(e) => {\n            handleChange(e, rowData.id); // Pass the id to identify the row\n          }}\n        />\n      </div>\n    );\n  };\n\n  const std_Bill_Rate = (rowData) => {\n    return (\n      <div\n        className=\"ellipsis\"\n        align=\"right\"\n        data-toggle=\"tooltip\"\n        title={rowData.stdBillRate}\n      >\n        {rowData.stdBillRate}\n      </div>\n    );\n  };\n\n  const allocTypeNameTooltip = (rowData) => {\n    return (\n      <div\n        className=\"ellipsis\"\n        align=\"left\"\n        data-toggle=\"tooltip\"\n        title={rowData.allocTypeName}\n      >\n        {rowData.allocTypeName}\n      </div>\n    );\n  };\n\n  const roleNameTooltip = (rowData) => {\n    return (\n      <div\n        className=\"ellipsis\"\n        align=\"left\"\n        data-toggle=\"tooltip\"\n        title={rowData.roleName}\n      >\n        {rowData.roleName}\n      </div>\n    );\n  };\n  const resourceTooltip = (rowData) => {\n    return (\n      <div\n        className=\"ellipsis\"\n        align=\"left\"\n        data-toggle=\"tooltip\"\n        title={rowData.resource}\n      >\n        {rowData.resource}\n      </div>\n    );\n  };\n  const alloc_Hours = (rowData) => {\n    return (\n      <div\n        className=\"ellipsis\"\n        align=\"right\"\n        data-toggle=\"tooltip\"\n        title={rowData.allocHours}\n      >\n        {rowData.allocHours}\n      </div>\n    );\n  };\n\n  const leave_Hours = (rowData) => {\n    return (\n      <div\n        className=\"ellipsis\"\n        align=\"right\"\n        data-toggle=\"tooltip\"\n        title={rowData.leaveHours}\n      >\n        {rowData.leaveHours}\n      </div>\n    );\n  };\n\n  const wrk_Std_Hours = (rowData) => {\n    return (\n      <div\n        className=\"ellipsis\"\n        align=\"right\"\n        data-toggle=\"tooltip\"\n        title={rowData.wrkStdHours}\n      >\n        {rowData.wrkStdHours}\n      </div>\n    );\n  };\n\n  const wrk_Apprv_Hours = (rowData) => {\n    return (\n      <div\n        className=\"ellipsis\"\n        align=\"right\"\n        data-toggle=\"tooltip\"\n        title={rowData.wrkApprvHours}\n      >\n        {rowData.wrkApprvHours}\n      </div>\n    );\n  };\n  const wrkStdHours = (rowData) => {\n    return (\n      <>\n        <input\n          type=\"text\"\n          title={rowData.wrkApprvHours}\n          disabled\n          value={rowData.wrkApprvHours}\n        />\n      </>\n    );\n  };\n  const unbillHours = (rowData) => {\n    const unBilledHours = (rowData.wrkStdHours - rowData.billTotHours).toFixed(\n      2\n    );\n    return (\n      <div\n        className=\"ellipsis\"\n        align=\"left\"\n        data-toggle=\"tooltip\"\n        title={unBilledHours}\n      >\n        {unBilledHours}\n      </div>\n    );\n  };\n\n  useEffect(() => {\n    getProjectinfo();\n  }, [linkId]);\n\n  const ref = useRef([]);\n  const resourceHandleClick = () => {\n    setVisibleA(!visibleA);\n    visibleA\n      ? setCheveronIconA(FaChevronCircleDown)\n      : setCheveronIconA(FaChevronCircleUp);\n  };\n\n  const financeHandleClick = () => {\n    setVisibleB(!visibleB);\n    visibleB\n      ? setCheveronIconB(FaChevronCircleDown)\n      : setCheveronIconB(FaChevronCircleUp);\n  };\n\n  const handleSaveClick = () => {\n    window.scrollTo({ top: 0, behavior: \"smooth\" });\n    let valid = GlobalValidation(ref);\n    if (isMatchedId == true && projectInfoTab[0]?.status == \"In DM Review\") {\n      if (valid) {\n        {\n          setCheveronIconB(FaChevronCircleUp);\n          setVisibleB(true);\n          setValidationMessage(true);\n          setTimeout(() => {\n            setValidationMessage(false);\n          }, 3000);\n        }\n        return;\n      }\n    }\n\n    setLoader(false);\n    setHidewholetables(false);\n    const discountAmount = Number(updateddata.discount_amount);\n    const formattedAmount = discountAmount;\n    const billingAmounts = Number(updateddata.billingAmount);\n    const BillingAmount = billingAmounts;\n    const hasDiscountType =\n      projectInfoTab[0]?.has_discount == true ||\n      projectInfoTab[0]?.has_discount == 1\n        ? 1\n        : 0;\n    console.log(tabledata);\n    console.log(\n      selectdistype === \"Amount\"\n        ? NetBillingAmount\n        : selectdistype === \"Percentage\"\n        ? NetBillingPercentage\n        : billingAmount\n    );\n    let billingTsDtls = [];\n    let obj = [];\n    Object.keys(tabledata).forEach((ele) => {\n      if (ele != \"bill_action\") {\n        obj = {\n          id: tabledata[ele].id ? tabledata[ele].id : 0,\n          resourceId: tabledata[ele].resourceId ? tabledata[ele].resourceId : 0,\n          billingTsId: tabledata[ele].billingTsId,\n          projectRoleId: tabledata[ele].projectRoleId,\n          projectRoleRateId: tabledata[ele].projectRoleRateId,\n          roleName: tabledata[ele].roleName,\n          resource: tabledata[ele].resource,\n          allocType: tabledata[ele].allocType ? tabledata[ele].allocType : 0,\n          allocTypeName: tabledata[ele].allocTypeName,\n          allocHours: tabledata[ele].allocHours,\n          wrkStdHours: tabledata[ele].wrkStdHours,\n          wrkOtHours: tabledata[ele].wrkOtHours,\n          leaveHours: tabledata[ele].leaveHours,\n          wrkApprvHours: tabledata[ele].wrkApprvHours,\n          stdBillRate: tabledata[ele].stdBillRate,\n          billStdHours: tabledata[ele].billStdHours,\n          billOtHours: tabledata[ele].billOtHours,\n          billTotHours:\n            tabledata[ele].billStdHours +\n            parseInt(tabledata[ele].billOtHours, 10),\n          unbillHours:\n            tabledata[ele].billOtHours == 0 || tabledata[ele].billOtHours == \"\"\n              ? 0\n              : -tabledata[ele].billOtHours,\n          finalBillRate: tabledata[ele].finalBillRate,\n          billAmount:\n            tabledata[ele].billTotHours * tabledata[ele].finalBillRate,\n          roleSite: tabledata[ele].roleSite,\n          comments: tabledata[ele].comments,\n          isDirty: tabledata[ele].isDirty ? \"1\" : \"0\",\n          currency: tabledata[ele].currency,\n        };\n      }\n\n      const isEmptyObject = Object.values(obj).every((value, index) => {\n        console.log(value);\n        if (\n          value === null ||\n          value === undefined ||\n          value === \"\" ||\n          value === 0\n        ) {\n          return true;\n        } else {\n          return false;\n        }\n      });\n      if (!isEmptyObject) {\n        billingTsDtls.push(obj);\n      }\n    });\n    axios({\n      method: \"post\",\n      url: baseUrl + `/timeandexpensesms/saveBillingDetails`,\n      data: {\n        id: projectInfoTab[0]?.id,\n        projectId: projectInfoTab[0]?.projectId,\n        billingScheduleId: projectInfoTab[0]?.billing_schedule_id,\n        status:\n          updateddata.status == \"\"\n            ? projectInfoTab[0]?.status\n            : updateddata.status,\n        fromDate: formData.billingMonth,\n        toDate: formData.billingMonth ? lastDateOfMonth2 : \"\",\n        billAction:\n          updateddata.bill_action == \"\"\n            ? projectInfoTab[0]?.Billingaction\n            : updateddata.bill_action,\n        billingAmount: parseInt(billingAmount) ? parseInt(billingAmount) : 0,\n        hasDiscount:\n          updateddata.has_discount == \"\"\n            ? hasDiscountType\n            : updateddata.has_discount == \"Yes\"\n            ? 1\n            : 0,\n        discountType: selectaplydis == \"Yes\" ? selectdistype : null,\n        discountAmount:\n          selectaplydis == \"Yes\"\n            ? selectdistype === \"Amount\"\n              ? discAmount\n              : selectdistype === \"Percentage\"\n              ? billingAmount - NetBillingPercentage\n              : 0\n            : 0,\n        net_billAmount:\n          selectdistype === \"Amount\"\n            ? NetBillingAmount\n            : selectdistype === \"Percentage\"\n            ? NetBillingPercentage\n            : billingAmount,\n        invoiceAmount: projectInfoTab[0]?.invoice_amount,\n        createdOn: new Date(),\n        comments: projectInfoTab[0]?.comments,\n        history: projectInfoTab[0]?.history,\n        pctComplete: projectCompletion == null ? 0 : projectCompletion,\n        finComments: projectInfoTab[0]?.fin_comments,\n        accAmount: revenueAccured == null ? 0 : revenueAccured,\n        balAmount: remainingBudget == null ? 0 : remainingBudget,\n        totPrjVal: totalProjectValue == null ? 0 : totalProjectValue,\n        billingMonth: formData.billingMonth,\n        customerId:\n          formData.customerId == \"\" ? loggedUserId : formData.customerId,\n        billMonth: formData.billingMonth,\n        mgrIds: loggedUserId,\n        billingTsDtls,\n        refreshDate: projectInfoTab[0]?.refreshDate,\n      },\n    }).then((error) => {\n      getGraph();\n      getDataBsedGrpah(error.data, storegrpahname);\n      getResourceInfo();\n      setAddmsg(true);\n      setValidationMessage(false);\n      setTimeout(() => {\n        setAddmsg(false);\n        setLoader(false);\n      }, 3000);\n    });\n  };\n  const ReadMore = ({ children }) => {\n    const text = children;\n    const [isReadMore, setIsReadMore] = useState(true);\n    const toggleReadMore = () => {\n      setIsReadMore(!isReadMore);\n    };\n\n    const displayText = text ? (isReadMore ? text.slice(0, 50) : text) : \"\";\n    return (\n      <p className=\"col-md-12 text\">\n        {displayText ? (\n          <>\n            <div className=\"form-group row\">\n              <label className=\"col-5\" htmlFor=\"text-input-inline\">\n                Comments History:\n              </label>\n            </div>\n            <br />\n            <span\n              dangerouslySetInnerHTML={{\n                __html: displayText == null ? \"\" : displayText,\n              }}\n            />\n            <br />\n            <span onClick={toggleReadMore} className=\"read-or-hide\">\n              {isReadMore ? (\n                <span className=\"toggleStyle\" style={{ color: \"#0096D7\" }}>\n                  Read More...\n                </span>\n              ) : (\n                <span className=\"toggleStyle\" style={{ color: \"#0096D7\" }}>\n                  Hide <i className=\"fa fa-eye-slash\" aria-hidden=\"true\"></i>\n                </span>\n              )}\n            </span>\n          </>\n        ) : (\n          <div className=\"form-group row\">\n            <label className=\"col-5\" htmlFor=\"text-input-inline\">\n              Comments History\n            </label>\n          </div>\n        )}\n      </p>\n    );\n  };\n  const [loaderRefresh, setLoaderRefersh] = useState(false);\n  const handleRefreshData = () => {\n    axios({\n      method: \"post\",\n      url: baseUrl + `/timeandexpensesms/projectBilling`,\n      data: {\n        billId: linkId,\n        isActive: 1,\n        isAdmin: [\"104335943\", \"1798\"].includes(loggedUserId) ? true : false,\n        billMon: billingMonth1,\n        isRefresh: 0,\n        isDirty: false,\n        usrId: loggedUserId,\n      },\n      headers: { \"Content-Type\": \"application/json\" },\n    })\n      .then((res) => {\n        GetData = res.data.PpmBillingTsDtl;\n        // setProjectInfo(res.data.tsInfo);\n        // billDetailsCount = res.data.BillDtlCnt;\n        // reviewerAction = res.data.reviewerAction;\n        for (let i = 0; i < GetData.length; i++) {\n          GetData[i][\"stdBillRate\"] =\n            GetData[i][\"stdBillRate\"] == null\n              ? \"\"\n              : GetData[i][\"stdBillRate\"].toFixed(2);\n\n          GetData[i][\"allocHours\"] =\n            GetData[i][\"allocHours\"] == null\n              ? \"\"\n              : GetData[i][\"allocHours\"].toFixed(2);\n\n          GetData[i][\"leaveHours\"] =\n            GetData[i][\"leaveHours\"] == null\n              ? \"\"\n              : GetData[i][\"leaveHours\"].toFixed(2);\n\n          GetData[i][\"wrkStdHours\"] =\n            GetData[i][\"wrkStdHours\"] == null\n              ? \"\"\n              : GetData[i][\"wrkStdHours\"].toFixed(2);\n\n          GetData[i][\"wrkOtHours\"] =\n            GetData[i][\"wrkOtHours\"] == null\n              ? \"\"\n              : GetData[i][\"wrkOtHours\"].toFixed(2);\n\n          GetData[i][\"wrkApprvHours\"] =\n            GetData[i][\"wrkApprvHours\"] == null\n              ? \"\"\n              : GetData[i][\"wrkApprvHours\"].toFixed(2);\n\n          GetData[i][\"billTotHours\"] =\n            GetData[i][\"billTotHours\"] == null\n              ? \"\"\n              : GetData[i][\"billTotHours\"].toFixed(2);\n\n          GetData[i][\"finalBillRate\"] =\n            GetData[i][\"finalBillRate\"] == null\n              ? \"\"\n              : GetData[i][\"finalBillRate\"].toFixed(2);\n\n          GetData[i][\"billAmount\"] =\n            GetData[i][\"billAmount\"] == null\n              ? \"\"\n              : GetData[i][\"billAmount\"].toFixed(2);\n\n          GetData[i][\"billOtHours\"] =\n            GetData[i][\"billOtHours\"] == null\n              ? \"\"\n              : GetData[i][\"billOtHours\"].toFixed(2);\n        }\n\n        setRefreshResourceInfo(GetData);\n      })\n      .catch((error) => {\n        console.log(\"Error :\" + error);\n      });\n    setLoaderRefersh(true);\n    setTimeout(() => {\n      setLoaderRefersh(false);\n    }, 1000);\n\n    //RefreshData Saving\n    const discountAmount = Number(updateddata.discount_amount);\n    const formattedAmount = discountAmount;\n\n    const billingAmounts = Number(updateddata.billAmount);\n    const BillingAmount = billingAmounts;\n    const hasDiscountType =\n      projectInfoTab[0]?.has_discount == true ||\n      projectInfoTab[0]?.has_discount == 1\n        ? 1\n        : 0;\n    let billingTsDtls = [];\n    let obj = [];\n    Object.keys(tabledata).forEach((ele) => {\n      if (ele != \"bill_action\") {\n        obj = {\n          id: tabledata[ele].id ? tabledata[ele].id : 0,\n          resourceId: tabledata[ele].resourceId ? tabledata[ele].resourceId : 0,\n          billingTsId: tabledata[ele].billingTsId,\n          projectRoleId: tabledata[ele].projectRoleId,\n          projectRoleRateId: tabledata[ele].projectRoleRateId,\n          roleName: tabledata[ele].roleName,\n          resource: tabledata[ele].resource,\n          allocType: tabledata[ele].allocType ? tabledata[ele].allocType : 0,\n          allocTypeName: tabledata[ele].allocTypeName,\n          allocHours: tabledata[ele].allocHours,\n          wrkStdHours: tabledata[ele].wrkStdHours,\n          wrkOtHours: tabledata[ele].wrkOtHours,\n          leaveHours: tabledata[ele].leaveHours,\n          wrkApprvHours: tabledata[ele].wrkApprvHours,\n          stdBillRate: tabledata[ele].stdBillRate,\n          billStdHours: tabledata[ele].billStdHours,\n          billOtHours: tabledata[ele].billOtHours,\n          billTotHours:\n            tabledata[ele].billStdHours +\n            parseInt(tabledata[ele].billOtHours, 10),\n          unbillHours:\n            tabledata[ele].billOtHours == 0 || tabledata[ele].billOtHours == \"\"\n              ? 0\n              : -tabledata[ele].billOtHours,\n          finalBillRate: tabledata[ele].finalBillRate,\n          billAmount:\n            tabledata[ele].billTotHours * tabledata[ele].finalBillRate,\n          roleSite: tabledata[ele].roleSite,\n          comments: tabledata[ele].comments,\n          isDirty: tabledata[ele].isDirty ? \"1\" : \"0\",\n          currency: tabledata[ele].currency,\n        };\n      }\n      const isEmptyObject = Object.values(obj).every((value, index) => {\n        if (value === null || value === undefined || value === \"\") {\n          return true;\n        } else {\n          return false;\n        }\n      });\n      if (!isEmptyObject) {\n        billingTsDtls.push(obj);\n      }\n    });\n    // axios({\n    //   method: \"post\",\n    //   url: baseUrl + `/timeandexpensesms/saveBillingDetails`,\n    //   data: {\n    //     id: projectInfoTab[0]?.id,\n    //     projectId: projectInfoTab[0]?.projectId,\n    //     billingScheduleId: projectInfoTab[0]?.billing_schedule_id,\n    //     status:\n    //       updateddata.status == \"\"\n    //         ? projectInfoTab[0]?.status\n    //         : updateddata.status,\n    //     fromDate: formData.billingMonth,\n    //     toDate: formData.billingMonth ? lastDateOfMonth2 : \"\",\n    //     billAction:\n    //       updateddata.bill_action == \"\"\n    //         ? projectInfoTab[0]?.Billingaction\n    //         : updateddata.bill_action,\n    //     billingAmount: billingAmount ? billingAmount : 0,\n    //     hasDiscount:\n    //       updateddata.has_discount == \"\"\n    //         ? hasDiscountType\n    //         : updateddata.has_discount == \"Yes\"\n    //         ? 1\n    //         : 0,\n    //     discountType: selectaplydis == \"Yes\" ? selectdistype : null,\n    //     discountAmount:\n    //       selectaplydis == \"Yes\"\n    //         ? selectdistype === \"Amount\"\n    //           ? discAmount\n    //           : selectdistype === \"Percentage\"\n    //           ? billingAmount - NetBillingPercentage\n    //           : 0\n    //         : 0,\n    //     net_billAmount:\n    //       selectdistype === \"Amount\"\n    //         ? NetBillingAmount\n    //         : selectdistype === \"Percentage\"\n    //         ? NetBillingPercentage\n    //         : billingAmount,\n    //     invoiceAmount: projectInfoTab[0]?.invoice_amount,\n    //     createdOn: new Date(),\n    //     comments: projectInfoTab[0]?.comments,\n    //     history: projectInfoTab[0]?.history,\n    //     pctComplete: projectCompletion == null ? 0 : projectCompletion,\n    //     finComments: projectInfoTab[0]?.fin_comments,\n    //     accAmount: revenueAccured == null ? 0 : revenueAccured,\n    //     balAmount: remainingBudget == null ? 0 : remainingBudget,\n    //     totPrjVal: totalProjectValue == null ? 0 : totalProjectValue,\n    //     billingMonth: formData.billingMonth,\n    //     customerId:\n    //       formData.customerId == \"\" ? loggedUserId : formData.customerId,\n    //     billMonth: formData.billingMonth,\n    //     mgrIds: loggedUserId,\n    //     // },\n    //     billingTsDtls,\n    //     refreshDate: projectInfoTab[0]?.refreshDate,\n    //   },\n    // }).then((error) => {\n    //   getResourceInfo();\n    //   getProjectinfo();\n    // });\n  };\n\n  const headerGroup = (\n    <ColumnGroup>\n      <Row>\n        <Column\n          header=\"Resource Information\"\n          colSpan={4}\n          style={{ textAlign: \"center\" }}\n        />\n\n        <Column header=\"Hours\" colSpan={5} />\n        <Column header=\"Billing Hours\" colSpan={3} />\n        <Column header=\"Billing Amount\" colSpan={3} />\n        <Column\n          field=\"roleSite\"\n          rowSpan={2}\n          header=\"Comment\"\n          body={Comments}\n        ></Column>\n      </Row>\n\n      <Row>\n        <Column\n          field=\"allocTypeName\"\n          header=\"Allocation\"\n          body={allocTypeNameTooltip}\n        ></Column>\n        <Column field=\"roleName\" header=\"Role\" body={roleNameTooltip}></Column>\n        <Column\n          field=\"resource\"\n          header=\"Resource\"\n          body={resourceTooltip}\n        ></Column>\n        <Column field=\"stdBillRate\" header=\"Rate\" body={std_Bill_Rate}></Column>\n        <Column\n          field=\"allocHours\"\n          header=\"Allocated\"\n          body={alloc_Hours}\n        ></Column>\n        <Column\n          field=\"leaveHours\"\n          header=\"Vacation\"\n          body={leave_Hours}\n        ></Column>\n        <Column\n          field=\"wrkStdHours\"\n          header=\"Actual\"\n          body={wrk_Std_Hours}\n        ></Column>\n        <Column field=\"wrkOtHours\" header=\"OT\" body={wrkOtHourssFixed}></Column>\n        <Column\n          field=\"wrkApprvHours\"\n          header=\"Approved\"\n          body={wrk_Apprv_Hours}\n        ></Column>\n        <Column field=\"wrkStdHours\" header=\"Actual\" body={wrkStdHours}></Column>\n        <Column field=\"billOtHours\" header=\"OT\" body={wrk_Ot_Hours}></Column>\n        <Column\n          field=\"billTotHours\"\n          header=\"Total\"\n          body={billTotHoursToFixed}\n        ></Column>\n        <Column header=\"Unbilled\" body={unbillHours}></Column>\n        <Column\n          field=\"finalBillRate\"\n          header=\"Rate\"\n          body={final_Bill_Ratel}\n        ></Column>\n        <Column field=\"billAmount\" header=\"Amount\" body={bill_Amount}></Column>\n      </Row>\n      <Row>\n        <Column colSpan={12}></Column>\n        <Column header=\"Discount Amount :\" colSpan={2}></Column>\n        {selectdistype == \"Amount\" ? (\n          <Column header={projectInfoTab[0]?.discountAmount}></Column>\n        ) : (\n          <Column header={projectInfoTab[0]?.discountAmount}></Column>\n        )}\n        <Column></Column>\n      </Row>\n      <Row>\n        <Column colSpan={12}></Column>\n        <Column header=\"Net Billing Amount:\" colSpan={2}></Column>\n        {selectdistype == \"Amount\" ? (\n          <Column header={NetBillingAmount}></Column>\n        ) : (\n          <Column header={NetBillingPercentage}></Column>\n        )}\n        <Column></Column>\n      </Row>\n    </ColumnGroup>\n  );\n\n  const headerGroup1 = (\n    <ColumnGroup>\n      <Row>\n        <Column\n          header=\"Resource Information\"\n          colSpan={4}\n          style={{ textAlign: \"center\" }}\n        />\n        <Column header=\"Hours\" colSpan={5} />\n        <Column header=\"Billing Hours\" colSpan={3} />\n        <Column header=\"Billing Amount\" colSpan={3} />\n        <Column\n          field=\"comments\"\n          rowSpan={2}\n          header=\"Comments\"\n          body={Comments}\n        ></Column>\n      </Row>\n\n      <Row>\n        <Column\n          field=\"allocTypeName\"\n          bosdy={allocTypeNameTooltip}\n          header=\"Allocation\"\n          style={{ width: \"200px\" }}\n        ></Column>\n        <Column\n          field=\"roleName\"\n          header=\"Role\"\n          body={roleNameTooltip}\n          style={{ width: \"200px\" }}\n        ></Column>\n        <Column\n          field=\"resource\"\n          header=\"Resource\"\n          bosy={resourceTooltip}\n          style={{ width: \"200px\" }}\n        ></Column>\n        <Column field=\"stdBillRate\" header=\"Rate\" body={std_Bill_Rate}></Column>\n        <Column\n          field=\"allocHours\"\n          header=\"Allocated\"\n          body={alloc_Hours}\n        ></Column>\n        <Column\n          field=\"leaveHours\"\n          header=\"Vacation\"\n          body={leave_Hours}\n        ></Column>\n        <Column\n          field=\"wrkStdHours\"\n          header=\"Actual\"\n          body={wrk_Std_Hours}\n        ></Column>\n        <Column field=\"wrkOtHours\" header=\"OT\" body={wrkOtHourssFixed}></Column>\n        <Column\n          field=\"wrkApprvHours\"\n          header=\"Approved\"\n          body={wrk_Apprv_Hours}\n        ></Column>\n        <Column field=\"wrkStdHours\" header=\"Actual\" body={wrkStdHours}></Column>\n        <Column field=\"billOtHours\" header=\"OT\" body={wrk_Ot_Hours}></Column>\n        <Column\n          field=\"billTotHours\"\n          header=\"Total\"\n          body={billTotHoursToFixed}\n        ></Column>\n        <Column header=\"Unbilled\" body={unbillHours}></Column>\n        <Column\n          field=\"finalBillRate\"\n          header=\"Rate\"\n          body={final_Bill_Ratel}\n        ></Column>\n        <Column field=\"billAmount\" header=\"Amount\" body={bill_Amount}></Column>\n      </Row>\n    </ColumnGroup>\n  );\n\n  return (\n    <>\n      <div>\n        {(isMatchedId == false ||\n          !(\n            storegrpahname == \"In PM Review\" || storegrpahname == \"DM Rejected\"\n        //   )) \n        //   &&\n        // (isMatchedDMId == false ||\n        //   !(\n        //     storegrpahname == \"In DM Review\" ||\n        //     storegrpahname == \"Finance Rejected\"\n          )) ? (\n          \"\"\n        ) : (\n          <div\n            onClick={handleRefreshData}\n            style={{\n              float: \"right\",\n              color: \"#15a7ea\",\n              textDecoration: \"underline\",\n              cursor: \"pointer\",\n            }}\n          >\n            <span\n              className=\"col-6\"\n              style={{\n                textDecoration: \"underline\",\n                cursor: \"pointer\",\n                color: \"black\",\n              }}\n            >\n              <BiRefresh style={{ fontSize: \"20px\" }} />\n            </span>\n            Refresh Data\n          </div>\n        )}\n        <div className=\"group mb-1 customCard\">\n          <div className=\"col-md-12 collapseHeader\">\n            <h2>\n              <Link onClick={() => resourceHandleClick()}>\n                Resource Information\n              </Link>\n            </h2>\n            <div onClick={() => resourceHandleClick()}>\n              <span className=\"chevron-icon\">{cheveronIconA}</span>\n            </div>\n          </div>\n        </div>\n        <CCollapse visible={visibleA}>\n          {loaderRefresh ? <Loader /> : \"\"}\n\n          <div>\n            <div className=\"group mb-3 customCard darkHeader\">\n              {selectaplydis == \"Yes\" ? (\n                <DataTable\n                  className=\"primeReactDataTable invoicingSearchTable\"\n                  value={nodes}\n                  paginator\n                  rows={10}\n                  showGridlines\n                  headerColumnGroup={headerGroup}\n                  filters={filters1}\n                  header={header1}\n                >\n                  <Column\n                    field=\"allocTypeName\"\n                    body={allocTypeNameTooltip}\n                    style={{ width: \"200px\" }}\n                  ></Column>\n                  <Column field=\"roleName\" body={roleNameTooltip}></Column>\n                  <Column field=\"resource\" body={resourceTooltip}></Column>\n                  <Column field=\"stdBillRate\" body={std_Bill_Rate}></Column>\n                  <Column field=\"allocHours\" body={alloc_Hours}></Column>\n                  <Column field=\"leaveHours\" body={leave_Hours}></Column>\n                  <Column field=\"wrkStdHours\" body={wrk_Std_Hours}></Column>\n                  <Column field=\"wrkOtHours\" body={wrkOtHourssFixed}></Column>\n                  <Column field=\"wrkApprvHours\" body={wrk_Apprv_Hours}></Column>\n                  <Column field=\"wrkStdHours\" body={wrkStdHours}></Column>\n                  <Column field=\"billOtHours\" body={wrk_Ot_Hours}></Column>\n                  <Column\n                    field=\"billTotHours\"\n                    body={billTotHoursToFixed}\n                  ></Column>\n                  <Column body={unbillHours}></Column>\n                  <Column\n                    field=\"finalBillRate\"\n                    body={final_Bill_Ratel}\n                  ></Column>\n                  <Column field=\"billAmount\" body={bill_Amount}></Column>\n                  <Column field=\"comments\" body={Comments}></Column>\n                </DataTable>\n              ) : (\n                <DataTable\n                  className=\"primeReactDataTable invoicingSearchTable\"\n                  value={nodes}\n                  paginator\n                  rows={10}\n                  showGridlines\n                  headerColumnGroup={headerGroup1}\n                  filters={filters1}\n                  header={header1}\n                >\n                  <Column\n                    field=\"allocTypeName\"\n                    body={allocTypeNameTooltip}\n                  ></Column>\n                  <Column field=\"roleName\" body={roleNameTooltip}></Column>\n                  <Column field=\"resource\" body={resourceTooltip}></Column>\n                  <Column field=\"stdBillRate\" body={std_Bill_Rate}></Column>\n                  <Column field=\"allocHours\" body={alloc_Hours}></Column>\n                  <Column field=\"leaveHours\" body={leave_Hours}></Column>\n                  <Column field=\"wrkStdHours\" body={wrk_Std_Hours}></Column>\n                  <Column field=\"wrkOtHours\" body={wrkOtHourssFixed}></Column>\n                  <Column field=\"wrkApprvHours\" body={wrk_Apprv_Hours}></Column>\n                  <Column field=\"wrkStdHours\" body={wrkStdHours}></Column>\n                  <Column field=\"billOtHours\" body={wrk_Ot_Hours}></Column>\n                  <Column\n                    field=\"billTotHours\"\n                    body={billTotHoursToFixed}\n                  ></Column>\n                  <Column body={unbillHours}></Column>\n                  <Column\n                    field=\"finalBillRate\"\n                    body={final_Bill_Ratel}\n                  ></Column>\n                  <Column field=\"billAmount\" body={bill_Amount}></Column>\n                  <Column field=\"comments\" body={Comments}></Column>\n                </DataTable>\n              )}\n            </div>\n          </div>\n        </CCollapse>\n      </div>\n      {/*  */}\n      <div>\n        <div className=\"group mb-1 customCard\">\n          <div className=\"col-md-12 collapseHeader\">\n            <h2>\n              <Link onClick={() => financeHandleClick()}>\n                Financial Information\n              </Link>\n            </h2>\n            <div onClick={() => financeHandleClick()}>\n              <span className=\"chevron-icon\">{cheveronIconB}</span>\n            </div>\n          </div>\n        </div>\n        <CCollapse visible={visibleB}>\n          <div>\n            <div className=\"group-content row mx-2\">\n              <div className=\" col-md-12 mb-2\">\n                {projectInfoTab.map((list) => (\n                  <div className=\"group-content row\">\n                    <div className=\" col-md-4 mb-2\">\n                      <div className=\"form-group row\">\n                        <label className=\"col-5\" htmlFor=\"text-input-inline\">\n                          Total Project Value\n                        </label>\n                        <span className=\"col-1\">:</span>\n                        <div className=\"col-6\">\n                          <input\n                            type=\"text\"\n                            id=\"total_project_value\"\n                            name=\"total_project_value\"\n                            onChange={(e) => {\n                              const { value, id } = e.target;\n                              setTotalProjectValue(value);\n                              setUpdatedata((prev) => ({\n                                ...prev,\n                                [id]: value,\n                              }));\n                              settabledata((prev) => ({\n                                ...prev,\n                                [id]: value,\n                              }));\n                            }}\n                            disabled={\n                              isMatchedId == false ||\n                              !(\n                                storegrpahname == \"In PM Review\" ||\n                                storegrpahname == \"DM Rejected\" ||\n                                storegrpahname === \"Finance Rejected\"\n                              )\n                              //   &&\n                              // (isMatchedDMId == false ||\n                              //   !(\n                              //     storegrpahname == \"In DM Review\" ||\n                              //     storegrpahname == \"Finance Rejected\"\n                              //   ))\n                            }\n                            value={totalProjectValue}\n                          />\n                        </div>\n                      </div>\n                    </div>\n                    <div className=\" col-md-4 mb-2\">\n                      <div className=\"form-group row\">\n                        <label className=\"col-5\" htmlFor=\"text-input-inline\">\n                          Revenue Accured Till Date\n                        </label>\n                        <span className=\"col-1\">:</span>\n                        <div className=\"col-6\">\n                          <input\n                            type=\"text\"\n                            id=\"revenue_accured\"\n                            name=\"revenue_accured\"\n                            onChange={(e) => {\n                              const { value, id } = e.target;\n                              setRevenueAccured(value);\n                              setUpdatedata((prev) => ({\n                                ...prev,\n                                [id]: value,\n                              }));\n                              settabledata((prev) => ({\n                                ...prev,\n                                [id]: value,\n                              }));\n                            }}\n                            disabled={\n                              isMatchedId == false ||\n                              !(\n                                storegrpahname == \"In PM Review\" ||\n                                storegrpahname == \"DM Rejected\" ||\n                                storegrpahname === \"Finance Rejected\"\n                              )\n                              //    &&\n                              // (isMatchedDMId == false ||\n                              //   !(\n                              //     storegrpahname == \"In DM Review\" ||\n                              //     storegrpahname == \"Finance Rejected\"\n                              //   ))\n                            }\n                            value={revenueAccured}\n                          />\n                        </div>\n                      </div>\n                    </div>\n                    <div className=\" col-md-4 mb-2\">\n                      <div className=\"form-group row\">\n                        <label className=\"col-5\" htmlFor=\"text-input-inline\">\n                          Remaining Budget\n                        </label>\n                        <span className=\"col-1\">:</span>\n                        <div className=\"col-6\">\n                          <input\n                            type=\"text\"\n                            id=\"remaining_budget\"\n                            name=\"remaining_budget\"\n                            onChange={(e) => {\n                              const { value, id } = e.target;\n                              setRemainingBudget(value);\n                              setUpdatedata((prev) => ({\n                                ...prev,\n                                [id]: value,\n                              }));\n                              settabledata((prev) => ({\n                                ...prev,\n                                [id]: value,\n                              }));\n                            }}\n                            disabled={\n                              isMatchedId == false ||\n                              !(\n                                storegrpahname == \"In PM Review\" ||\n                                storegrpahname == \"DM Rejected\" ||\n                                storegrpahname === \"Finance Rejected\"\n                              )\n                              //   &&\n                              // (isMatchedDMId == false ||\n                              //   !(\n                              //     storegrpahname == \"In DM Review\" ||\n                              //     storegrpahname == \"Finance Rejected\"\n                              //   ))\n                            }\n                            value={remainingBudget}\n                          />\n                        </div>\n                      </div>\n                    </div>\n                    <div className=\" col-md-4 mb-2\">\n                      <div className=\"form-group row\">\n                        <label className=\"col-5\" htmlFor=\"text-input-inline\">\n                          Project Completion (%)\n                        </label>\n                        <span className=\"col-1\">:</span>\n                        <div className=\"col-6\">\n                          <input\n                            type=\"text\"\n                            id=\"project_completion\"\n                            name=\"project_completion\"\n                            onChange={(e) => {\n                              const { value, id } = e.target;\n                              setProjectCompletion(value);\n                              setUpdatedata((prev) => ({\n                                ...prev,\n                                [id]: value,\n                              }));\n                              settabledata((prev) => ({\n                                ...prev,\n                                [id]: value,\n                              }));\n                            }}\n                            disabled={\n                              isMatchedId == false ||\n                              !(\n                                storegrpahname == \"In PM Review\" ||\n                                storegrpahname == \"DM Rejected\" ||\n                                storegrpahname === \"Finance Rejected\"\n                              )\n                              //   &&\n                              // (isMatchedDMId == false ||\n                              //   !(\n                              //     storegrpahname == \"In DM Review\" ||\n                              //     storegrpahname == \"Finance Rejected\"\n                              //   ))\n                            }\n                            value={projectCompletion}\n                          />\n                        </div>\n                      </div>\n                    </div>\n                    <div className=\" col-md-4 mb-2\">\n                      <div className=\"form-group row\">\n                        <label className=\"col-5\" htmlFor=\"text-input-inline\">\n                          Billing Amount\n                        </label>\n                        <span className=\"col-1\">:</span>\n                        <div className=\"col-6\">\n                          <input\n                            type=\"text\"\n                            id=\"billing_amount\"\n                            name=\"billing_amount\"\n                            onChange={(e) => {\n                              const { value, id } = e.target;\n                              // setBillingAmount(value);\n                              if (value === '') {\n                                setBillingAmount(0); // Set to an empty string\n                              } else {\n                                setBillingAmount(value);\n                              }\n                              setUpdatedata((prev) => ({\n                                ...prev,\n                                [id]: value,\n                              }));\n                              settabledata((prev) => ({\n                                ...prev,\n                                [id]: value,\n                              }));\n                            }}\n                            disabled={\n                              isMatchedId == false ||\n                              !(\n                                storegrpahname == \"In PM Review\" ||\n                                storegrpahname == \"DM Rejected\" ||\n                                storegrpahname === \"Finance Rejected\"\n                              )\n                              //   &&\n                              // (isMatchedDMId == false ||\n                              //   !(\n                              //     storegrpahname == \"In DM Review\" ||\n                              //     storegrpahname == \"Finance Rejected\"\n                              //   ))\n                            }\n                            value={billingAmount}\n                            // defaultValue={billingAmount}\n                          />\n                        </div>\n                      </div>\n                    </div>\n                    <div className=\" col-md-4 mb-2\">\n                      <div className=\"form-group row\">\n                        <label className=\"col-5\" htmlFor=\"duration\">\n                          Billing Action &nbsp;\n                        </label>\n                        <span className=\"col-1\">:</span>\n                        <div className=\"col-6\">\n                          <select\n                            ref={(ele) => {\n                              ref.current[0] = ele;\n                            }}\n                            className=\"text cancel\"\n                            id=\"bill_action\"\n                            onChange={(e) => {\n                              const { value, id } = e.target;\n                              setBillingAction(value);\n                              setUpdatedata((prev) => ({\n                                ...prev,\n                                [id]: value,\n                              }));\n                              settabledata((prev) => ({\n                                ...prev,\n                                [id]: value,\n                              }));\n                            }}\n                            value={billingAction}\n                            disabled={\n                              (isMatchedId == false ||\n                                !(\n                                  storegrpahname == \"In PM Review\" ||\n                                  storegrpahname == \"DM Rejected\" ||\n                                  storegrpahname === \"Finance Rejected\"\n                                )) &&\n                              (isMatchedDMId == false ||\n                                !(\n                                  storegrpahname == \"In DM Review\" ||\n                                  storegrpahname == \"Finance Rejected\"\n                                ))\n                            }\n                          >\n                            <option value=\"\">\n                              {\" \"}\n                              &lt;&lt;Please Select&gt;&gt;\n                            </option>\n                            <option value=\"Bill To Customer\">\n                              Bill To Customer\n                            </option>\n                            <option value=\"Accure Only\">Accure Only</option>\n                          </select>\n                        </div>\n                      </div>\n                    </div>\n                    <div className=\" col-md-4 mb-2\">\n                      <div className=\"form-group row\">\n                        <label className=\"col-5\" htmlFor=\"text-input-inline\">\n                          Apply Discounts\n                        </label>\n                        <span className=\"col-1\">:</span>\n                        <div className=\"col-6\">\n                          <select\n                            id=\"has_discount\"\n                            name=\"has_discount\"\n                            onChange={(e) => {\n                              const { value, id } = e.target;\n                              setSelectaplydis(value);\n                              setUpdatedata((prev) => ({\n                                ...prev,\n                                [id]: value,\n                              }));\n                              settabledata((prev) => ({\n                                ...prev,\n                                [id]: value,\n                              }));\n                            }}\n                            value={selectaplydis}\n                            disabled={\n                              (isMatchedId == false ||\n                                !(\n                                  storegrpahname == \"In PM Review\" ||\n                                  storegrpahname == \"DM Rejected\" ||\n                                  storegrpahname === \"Finance Rejected\"\n                                )) &&\n                              (isMatchedDMId == false ||\n                                !(\n                                  storegrpahname == \"In DM Review\" ||\n                                  storegrpahname == \"Finance Rejected\"\n                                ))\n                            }\n                          >\n                            <option value=\"No\">No</option>\n                            <option value=\"Yes\">Yes</option>\n                          </select>\n                        </div>\n                      </div>\n                    </div>\n\n                    <div className=\"col-md-4 mb-2\">\n                      <div className=\"form-group row\">\n                        <label className=\"col-5\" htmlFor=\"text-input-inline\">\n                          Discounts Type\n                        </label>\n                        <span className=\"col-1\">:</span>\n                        <div className=\"col-6\">\n                          <select\n                            id=\"discount_type\"\n                            onChange={(e) => {\n                              const { value, id } = e.target;\n                              setSelectdistype(value);\n                              setUpdatedata((prev) => ({\n                                ...prev,\n                                [id]: value,\n                              }));\n                              settabledata((prev) => ({\n                                ...prev,\n                                [id]: value,\n                              }));\n                            }}\n                            value={selectdistype}\n                            disabled={\n                              (isMatchedId == false ||\n                                !(\n                                  storegrpahname == \"In PM Review\" ||\n                                  storegrpahname == \"DM Rejected\" ||\n                                  storegrpahname === \"Finance Rejected\"\n                                )) &&\n                              (isMatchedDMId == false ||\n                                !(\n                                  storegrpahname == \"In DM Review\" ||\n                                  storegrpahname == \"Finance Rejected\"\n                                ))\n                                ? true\n                                : !(selectaplydis === \"Yes\")\n                            }\n                          >\n                            <option value=\"null\">{\"<<Please Select>>\"}</option>\n                            <option value=\"Percentage\">Percentage</option>\n                            <option value=\"Amount\">Amount</option>\n                          </select>\n                        </div>\n                      </div>\n                    </div>\n\n                    <div className=\" col-md-4 mb-2\">\n                      <div className=\"form-group row\">\n                        <label className=\"col-5\" htmlFor=\"text-input-inline\">\n                          Discount Amount\n                        </label>\n                        <span className=\"col-1\">:</span>\n                        <div className=\"col-6\">\n                          <input\n                            type=\"text\"\n                            id=\"discount_amount\"\n                            name=\"discount_amount\"\n                            onChange={(e) => {\n                              const { value, id } = e.target;\n                              setDiscAmount(value);\n                              setUpdatedata((prev) => ({\n                                ...prev,\n                                [id]: value,\n                              }));\n                              settabledata((prev) => ({\n                                ...prev,\n                                [id]: value,\n                              }));\n                            }}\n                            disabled={\n                              (isMatchedId == false ||\n                                !(\n                                  storegrpahname == \"In PM Review\" ||\n                                  storegrpahname == \"DM Rejected\" ||\n                                  storegrpahname === \"Finance Rejected\"\n                                )) &&\n                              (isMatchedDMId == false ||\n                                !(\n                                  storegrpahname == \"In DM Review\" ||\n                                  storegrpahname == \"Finance Rejected\"\n                                ))\n                                ? true\n                                : !(\n                                    selectdistype === \"Amount\" ||\n                                    selectdistype === \"Percentage\"\n                                  ) || selectaplydis === \"No\"\n                            }\n                            value={discAmount}\n                          />\n                        </div>\n                      </div>\n                    </div>\n\n                    <div className=\"form-group row\">\n                      <div className=\"col-md-12\">\n                        <ReadMore>\n                          {projectInfoTab[0].comments === \"null\" ||\n                          projectInfoTab[0].comments === null ||\n                          projectInfoTab[0].comments === \"\"\n                            ? \"\"\n                            : projectInfoTab[0].comments}\n                        </ReadMore>\n                      </div>\n                    </div>\n                    <div className=\"form-group row\">\n                      <label className=\"col-5\" htmlFor=\"text-input-inline\">\n                        Comments\n                      </label>\n                      {/* <span className=\"col-1\">:</span> */}\n                      <div\n                        className={\n                          (isMatchedId == false ||\n                            !(\n                              storegrpahname == \"In PM Review\" ||\n                              storegrpahname == \"DM Rejected\" ||\n                              storegrpahname === \"Finance Rejected\"\n                            )) &&\n                          (isMatchedDMId == false ||\n                            !(\n                              storegrpahname == \"In DM Review\" ||\n                              storegrpahname == \"Finance Rejected\"\n                            )) &&\n                          (isMatchedFMId == false ||\n                            !(storegrpahname == \"In Finance Review\"))\n                            ? \"disabledFieldStyles\"\n                            : \"\"\n                        }\n                      >\n                        <textarea\n                          className=\"textarea\"\n                          type=\"text\"\n                          name=\"comments\"\n                          id=\"comments\"\n                          style={{\n                            position: \"relative\",\n                            minHeight: \"40px\",\n                          }}\n                          onChange={(e) => myFunctions(e)}\n                          disabled={\n                            (isMatchedId == false ||\n                              !(\n                                storegrpahname == \"In PM Review\" ||\n                                storegrpahname == \"DM Rejected\" ||\n                                storegrpahname === \"Finance Rejected\"\n                              )) &&\n                            (isMatchedDMId == false ||\n                              !(\n                                storegrpahname == \"In DM Review\" ||\n                                storegrpahname == \"Finance Rejected\"\n                              )) &&\n                            (isMatchedFMId == false ||\n                              !(storegrpahname == \"In Finance Review\"))\n                          }\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  // </div>\n                ))}\n              </div>\n            </div>\n          </div>\n        </CCollapse>\n        {(isMatchedId == false ||\n          !(\n            storegrpahname == \"In PM Review\" ||\n            storegrpahname == \"DM Rejected\" ||\n            storegrpahname == \"Finance Rejected\"\n          )) &&\n        (isMatchedDMId == false ||\n          !(\n            storegrpahname == \"In DM Review\" ||\n            storegrpahname == \"Finance Rejected\" ||\n            storegrpahname == \"Finance Rejected\"\n          )) &&\n        (isMatchedFMId == false || !(storegrpahname == \"In Finance Review\")) ? (\n          \"\"\n        ) : (\n          <div className='className=\"col-md-12 col-sm-12 col-xs-12 btn-container center my-3'>\n            <button className=\"btn btn-primary \" onClick={handleSaveClick}>\n              <SaveIcon />\n              Save\n            </button>\n          </div>\n        )}\n        {/* <div className='className=\"col-md-12 col-sm-12 col-xs-12 btn-container center my-3'>\n          <button className=\"btn btn-primary \" onClick={handleSaveClick}>\n            <SaveIcon />\n            Cancel\n          </button>\n        </div> */}\n      </div>\n    </>\n  );\n}\n","import React from \"react\";\nimport { useState, useEffect, useRef } from \"react\";\nimport axios from \"axios\";\nimport FixedPriceOpenDataTable from \"./FixedPriceOpenDataTable\";\nimport moment from \"moment\";\n\nexport default function FixedPriceOpenSecondTable(props) {\n  const {\n    firstTableData,\n    PMReview,\n    setProjectinfoTab,\n    projectInfoTab,\n    linkId,\n    formData,\n    DMReview,\n    storegrpahname,\n    setLoader,\n    FMReview,\n    getGraph,\n    getDataBsedGrpah,\n    setAddmsg,\n    setValidationMessage,\n    resourceInfo,\n    setResourceInfo,\n    billDetailsCount,\n    reviewerAction,\n    getResourceInfo,\n    projectInfo,\n    headerData\n  } = props;\n  console.log(projectInfo);\n  const billingMonth1 = formData.billingMonth;\n  const lastDateOfMonth2 = moment(billingMonth1)\n    .endOf(\"month\")\n    .format(\"YYYY-MM-DD\");\n  const arr = [];\n\n  const initialValues = {\n    id: linkId,\n    project_id: linkId,\n    billing_schedule_id: \"\",\n    status: \"\",\n    bill_action: \"\",\n    billing_amount: \"\",\n    has_discount: \"\",\n    discount_type: \"\",\n    allocFte: 0.0,\n    discount_amount: \"\",\n    comments: \"\",\n    from_date: \"\",\n    to_date: \"\",\n    billing_month: \"\",\n    billing_ts_id: \"\",\n    resourceId: \"\",\n    allocType: 187,\n    billOtHours: \"\",\n    finalBillRate: \"\",\n    billAmount: \"\",\n    comments: \"\",\n  };\n  const [updateddata, setUpdatedata] = useState(initialValues);\n\n  function myFunctions(e) {\n    const { value, id } = e.target;\n    setUpdatedata((prev) => ({ ...prev, [id]: value }));\n    setProjectinfoTab((prevProjectInfoTab) => {\n      const updatedProjectInfoTab = [...prevProjectInfoTab];\n      updatedProjectInfoTab[0].status = value;\n      return updatedProjectInfoTab;\n    });\n  }\n  const loggedUserId = localStorage.getItem(\"resId\");\n  const [hideWholetables, setHidewholetables] = useState(true);\n\n  //////////////    PM Review Disabled\n  const [isMatchedId, setIsMatchedId] = useState(false);\n  let isMatched = false;\n  for (const review of PMReview) {\n    const prgMgrIds = review.prgMgrId.split(\",\");\n    if (prgMgrIds.includes(loggedUserId.toString())) {\n      isMatched = true;\n      break;\n    }\n  }\n  useEffect(() => {\n    if (isMatched) {\n      setIsMatchedId(isMatched);\n    } else {\n      setIsMatchedId(isMatched);\n    }\n  }, [isMatched]);\n\n  /////////    DM Review Disabled\n  const [isMatchedDMId, setIsMatchedDMId] = useState(false);\n  let isMatchedDM = false;\n\n  for (const review of DMReview) {\n    if (\n      review.deliveryMgrId &&\n      review.deliveryMgrId === loggedUserId.toString()\n    ) {\n      isMatchedDM = true;\n      break;\n    }\n  }\n\n  // Now update the state based on whether there is a match or not\n  // setIsMatchedDMId(isMatchedDM);\n\n  useEffect(() => {\n    if (isMatchedDM) {\n      setIsMatchedDMId(isMatchedDM);\n    } else {\n      setIsMatchedDMId(isMatchedDM);\n    }\n  }, [isMatchedDM]);\n\n  /////// FM Review Disable and enable\n  const [isMatchedFMId, setIsMatchedFMId] = useState(false);\n\n  useEffect(() => {\n    if (FMReview.some((item) => item.role_type_id === 126)) {\n      if (FMReview.some((item) => [82, 157, 158].includes(item.role_type_id))) {\n        setIsMatchedFMId(false);\n      } else {\n        setIsMatchedFMId(true);\n      }\n    } else {\n      setIsMatchedFMId(false);\n    }\n  }, []);\n\n  return (\n    <>\n      <div className=\"customCard card graph mt-2 mb-2 darkHeader\">\n        <div className=\"group mb-1 customCard\">\n          <div\n            className=\"col-md-12  collapseHeader px-3\"\n            style={{ backgroundColor: \"#f4f4f4\" }}\n          >\n            <h2 style={{ backgroundColor: \"#f4f4f4\" }}>Project Information</h2>\n          </div>\n        </div>\n        <div className=\"group-content row mx-2\">\n          <div className=\" col-md-12 mb-2\">\n            {projectInfoTab.map((list) => (\n              <div className=\"group-content row\">\n                <div className=\" col-md-4 mb-2\">\n                  <div className=\"form-group row\">\n                    <label className=\"col-5\" htmlFor=\"text-input-inline\">\n                      Project\n                    </label>\n                    <span className=\"col-1\">:</span>\n                    <div className=\"col-6\">\n                      <p\n                        className=\" ellipsis tooltip-ex\"\n                        data-toggle=\"tooltip\"\n                        title={list.project}\n                      >\n                        {list.project == null ? \"NA\" : list.project}\n                      </p>\n                    </div>\n                  </div>\n                </div>\n\n                <div className=\" col-md-4 mb-2 \">\n                  <div className=\"form-group row\">\n                    <label className=\"col-5\" htmlFor=\"text-input-inline\">\n                      Practice\n                    </label>\n                    <span className=\"col-1\">:</span>\n                    <div className=\"col-6\">\n                      <p\n                        className=\" ellipsis tooltip-ex\"\n                        data-toggle=\"tooltip\"\n                        title={projectInfo[0]?.practiceName}\n                      >\n                        {projectInfo[0]?.practiceName == null\n                          ? \"NA\"\n                          : projectInfo[0]?.practiceName}\n                      </p>\n                    </div>\n                  </div>\n                </div>\n                <div className=\" col-md-4 mb-2\">\n                  <div className=\"form-group row\">\n                    <label className=\"col-5\" htmlFor=\"text-input-inline\">\n                      Planned Dates\n                    </label>\n                    <span className=\"col-1\">:</span>\n                    <div className=\"col-6\">\n                      <p\n                        className=\" ellipsis tooltip-ex\"\n                        data-toggle=\"tooltip\"\n                        title={list.planned_dates}\n                      >\n                        {list.planned_dates == null ? \"NA\" : list.planned_dates}\n                      </p>\n                    </div>\n                  </div>\n                </div>\n                <div className=\" col-md-4 mb-2\">\n                  <div className=\"form-group row\">\n                    <label className=\"col-5\" htmlFor=\"text-input-inline\">\n                      Is Billable\n                    </label>\n                    <span className=\"col-1\">:</span>\n                    <div className=\"col-6\">\n                      <p\n                        className=\" ellipsis tooltip-ex\"\n                        data-toggle=\"tooltip\"\n                        title={list.is_billable}\n                      >\n                        {list.is_billable == null ? \"NA\" : list.is_billable}\n                      </p>\n                    </div>\n                  </div>\n                </div>\n                <div className=\" col-md-4 mb-2\">\n                  <div className=\"form-group row\">\n                    <label className=\"col-5\" htmlFor=\"text-input-inline\">\n                      Primary PM\n                    </label>\n                    <span className=\"col-1\">:</span>\n                    <div className=\"col-6\">\n                      <p\n                        className=\" ellipsis tooltip-ex\"\n                        data-toggle=\"tooltip\"\n                        title={list.primary_manager}\n                      >\n                        {list.primary_manager == null\n                          ? \"NA\"\n                          : list.primary_manager}{\" \"}\n                      </p>\n                    </div>\n                  </div>\n                </div>\n                <div className=\" col-md-4 mb-2\">\n                  <div className=\"form-group row\">\n                    <label className=\"col-5\" htmlFor=\"text-input-inline\">\n                      Customer\n                    </label>\n                    <span className=\"col-1\">:</span>\n                    <div className=\"col-6\">\n                      <p\n                        className=\" ellipsis tooltip-ex\"\n                        data-toggle=\"tooltip\"\n                        title={list.customer}\n                      >\n                        {list.customer == null ? \"NA\" : list.customer}\n                        {\"\"}\n                      </p>\n                    </div>\n                  </div>\n                </div>\n                <div className=\" col-md-4 mb-2\">\n                  <div className=\"form-group row\">\n                    <label className=\"col-5\" htmlFor=\"text-input-inline\">\n                      Contract Terms:\n                    </label>\n                    <span className=\"col-1\">:</span>\n                    <div className=\"col-6\">\n                      <p\n                        className=\" ellipsis tooltip-ex\"\n                        data-toggle=\"tooltip\"\n                        title={list.contract_terms}\n                      >\n                        {list.contract_terms == null\n                          ? \"NA\"\n                          : list.contract_terms}\n                      </p>\n                    </div>\n                  </div>\n                </div>\n                {/* change statues  */}\n\n                <div className=\" col-md-4 mb-2\">\n                  {storegrpahname == \"In DM Review\" ? (\n                    <div className=\"form-group row\">\n                      <label className=\"col-5\" htmlFor=\"text-input-inline\">\n                        Status\n                      </label>\n                      <span className=\"col-1\">:</span>\n                      <div className=\"col-6\">\n                        <select\n                          id=\"status\"\n                          onChange={(e) => myFunctions(e)}\n                          value={projectInfoTab[0]?.status}\n                          disabled={isMatchedDMId == false}\n                        >\n                          <option value=\"In DM Review\">In DM Review</option>\n                          <option value=\"DM Rejected\">DM Rejected</option>\n                          <option value=\"In Finance Review\">\n                            In Finance Review\n                          </option>\n                        </select>\n                      </div>\n                    </div>\n                  ) : storegrpahname == \"DM Rejected\" ? (\n                    <div className=\"form-group row\">\n                      <label className=\"col-5\" htmlFor=\"text-input-inline\">\n                        Status\n                      </label>\n                      <span className=\"col-1\">:</span>\n                      <div className=\"col-6\">\n                        <select\n                          id=\"status\"\n                          onChange={(e) => myFunctions(e)}\n                          value={projectInfoTab[0]?.status}\n                          disabled={isMatchedId == false}\n                        >\n                          <option value=\"In DM Review\">In DM Review</option>\n                          <option value=\"DM Rejected\">DM Rejected</option>\n                        </select>\n                      </div>\n                    </div>\n                  ) : storegrpahname === \"In PM Review\" ? (\n                    <div className=\"form-group row\">\n                      <label className=\"col-5\" htmlFor=\"text-input-inline\">\n                        Status\n                      </label>\n                      <span className=\"col-1\">:</span>\n                      <div className=\"col-6\">\n                        <select\n                          id=\"status\"\n                          onChange={(e) => myFunctions(e)}\n                          value={projectInfoTab[0]?.status}\n                          disabled={isMatchedId == false}\n                        >\n                          <option value=\"In PM Review\">In PM Review</option>\n                          <option value=\"In DM Review\">In DM Review</option>\n                        </select>\n                      </div>\n                    </div>\n                  ) : // (isMatchedFMId === true &&\n                  storegrpahname === \"In Finance Review\" ? (\n                    <div className=\"form-group row\">\n                      <label className=\"col-5\" htmlFor=\"text-input-inline\">\n                        Status\n                      </label>\n                      <span className=\"col-1\">:</span>\n                      <div className=\"col-6\">\n                        <select\n                          id=\"status\"\n                          onChange={(e) => myFunctions(e)}\n                          value={projectInfoTab[0]?.status}\n                          disabled={isMatchedFMId == false}\n                        >\n                          <option value=\"In Finance Review\">\n                            In Finance Review\n                          </option>\n                          <option value=\"Finance Rejected\">\n                            Finance Rejected\n                          </option>\n                          <option value=\"Finance Accepted\">\n                            Finance Accepted\n                          </option>\n                        </select>\n                      </div>\n                    </div>\n                  ) : // ) : storegrpahname === \"In Finance Review\" ? (\n                  //   <div className=\"form-group row\">\n                  //     <label className=\"col-5\" htmlFor=\"text-input-inline\">\n                  //       Status\n                  //     </label>\n                  //     <span className=\"col-1\">:</span>\n                  //     <div className=\"col-6\">\n                  //       <select\n                  //         id=\"status\"\n                  //         onChange={(e) => myFunctions(e)}\n                  //         value={projectInfoTab[0]?.status}\n                  //         disabled\n                  //       >\n                  //         <option value=\"In Finance Review\">\n                  //           In Finance Review\n                  //         </option>\n                  //         <option value=\"Finance Rejected\">\n                  //           Finance Rejected\n                  //         </option>\n                  //         <option value=\"Finance Accepted\">\n                  //           Finance Accept\n                  //         </option>\n                  //       </select>\n                  //     </div>\n                  //   </div>\n                  storegrpahname === \"Finance Accepted\" ? (\n                    <div className=\"form-group row\">\n                      <label className=\"col-5\" htmlFor=\"text-input-inline\">\n                        Status\n                      </label>\n                      <span className=\"col-1\">:</span>\n                      <div className=\"col-6\">\n                        <select\n                          id=\"status\"\n                          onChange={(e) => myFunctions(e)}\n                          value={projectInfoTab[0]?.status}\n                          disabled\n                        >\n                          <option value=\"In Finance Review\">\n                            In Finance Review\n                          </option>\n                          <option value=\"Finance Rejected\">\n                            Finance Rejected\n                          </option>\n                          <option value=\"Finance Accepted\">\n                            Finance Accepted\n                          </option>\n                        </select>\n                      </div>\n                    </div>\n                  ) : storegrpahname === \"Finance Rejected\" ? (\n                    <div className=\"form-group row\">\n                      <label className=\"col-5\" htmlFor=\"text-input-inline\">\n                        Status\n                      </label>\n                      <span className=\"col-1\">:</span>\n                      <div className=\"col-6\">\n                        <select\n                          id=\"status\"\n                          onChange={(e) => myFunctions(e)}\n                          value={projectInfoTab[0]?.status}\n                          disabled={\n                            !(isMatchedDMId == true || isMatchedId == true)\n                          }\n                        >\n                          <option value=\"In Finance Review\">\n                            In Finance Review\n                          </option>\n                          <option value=\"Finance Rejected\">\n                            Finance Rejected\n                          </option>\n                          {/* <option value=\"Finance Accepted\">\n                            In Finance Accept\n                          </option> */}\n                        </select>\n                      </div>\n                    </div>\n                  ) : isMatchedFMId === false ? (\n                    <div className=\"form-group row\">\n                      <label className=\"col-5\" htmlFor=\"text-input-inline\">\n                        Status\n                      </label>\n                      <span className=\"col-1\">:</span>\n                      <div className=\"col-6\">\n                        <select\n                          id=\"status\"\n                          onChange={(e) => myFunctions(e)}\n                          value={projectInfoTab[0]?.status}\n                          disabled\n                        >\n                          <option value=\"In Finance Review\">\n                            In Finance Review\n                          </option>\n                          <option value=\"Finance Rejected\">\n                            Finance Rejected\n                          </option>\n                          <option value=\"Finance Accepted\">\n                            Finance Accepted\n                          </option>\n                        </select>\n                      </div>\n                    </div>\n                  ) : null}\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n        {/* </>:\"\"} */}\n      </div>\n      <FixedPriceOpenDataTable\n        linkId={linkId}\n        firstTableData={firstTableData}\n        projectInfoTab={projectInfoTab}\n        setUpdatedata={setUpdatedata}\n        formData={formData}\n        updateddata={updateddata}\n        setProjectinfoTab={setProjectinfoTab}\n        setLoader={setLoader}\n        setHidewholetables={setHidewholetables}\n        isMatchedId={isMatchedId}\n        isMatchedDMId={isMatchedDMId}\n        isMatchedFMId={isMatchedFMId}\n        getGraph={getGraph}\n        getDataBsedGrpah={getDataBsedGrpah}\n        setAddmsg={setAddmsg}\n        setValidationMessage={setValidationMessage}\n        storegrpahname={storegrpahname}\n        resourceInfo={resourceInfo}\n        setResourceInfo={setResourceInfo}\n        billDetailsCount={billDetailsCount}\n        reviewerAction={reviewerAction}\n        getResourceInfo={getResourceInfo}\n        headerData={headerData}\n      />\n    </>\n  );\n}\n","import React, { useState, useEffect, useRef } from \"react\";\nimport {\n  FaChevronCircleDown,\n  FaChevronCircleUp,\n  FaSearch,\n  FaCheck,\n} from \"react-icons/fa\";\nimport Loader from \"../../Loader/Loader\";\nimport FixedPriceOpenSecondTable from \"./FixedPriceOpenSecondTable\";\nimport { Link } from \"react-router-dom\";\nimport { Column } from \"primereact/column\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport moment from \"moment\";\nimport { MultiSelect } from \"react-multi-select-component\";\nimport { CCollapse } from \"@coreui/react\";\nimport axios from \"axios\";\nimport { ColumnGroup } from \"primereact/columngroup\";\nimport { InputText } from \"primereact/inputtext\";\nimport { DataTable } from \"primereact/datatable\";\nimport { Row } from \"primereact/row\";\nimport CellRendererPrimeReactDataTable from \"../../PrimeReactTableComponent/CellRendererPrimeReactDataTable\";\nimport { BiSearch } from \"react-icons/bi\";\nimport { FilterMatchMode } from \"primereact/api\";\nimport { environment } from \"../../../environments/environment\";\nexport default function FixedPriceOpenFirstTable(props) {\n  const {\n    data,\n    storeFirstTab,\n    setStorefirstTab,\n    formData,\n    storegrpahname,\n    firstTabledata,\n    showtable,\n    visibleTable,\n    setVisibleTable,\n    firstTableData,\n    setFirstTableData,\n    showSecTable,\n    setShowSecTable,\n    getGraph,\n    getDataBsedGrpah,\n    PMReview,\n    setPMReview,\n    DMReview,\n    setDMReview,\n    FMReview,\n    setFMReview,\n    EMReview,\n    isSQA,\n    isDM,\n    setAddmsg,\n    setValidationMessage,\n    // isAdmin\n  } = props;\n  const baseUrl = environment.baseUrl;\n  const loggedUserId = localStorage.getItem(\"resId\");\n  const firstDateOfMonth = new Date(storeFirstTab.billingMonth);\n  var date = new Date();\n  const [startDate, setStartDate] = useState(\n    new Date(date.getFullYear(), date.getMonth(), 1)\n  );\n  const BillingFirstDate = moment(startDate).format(\"yyyy-MM-DD\");\n  const lastDateOfMonth = new Date(\n    firstDateOfMonth.getFullYear(),\n    firstDateOfMonth.getMonth() + 1,\n    0\n  );\n  const BillingLastDate = moment(lastDateOfMonth).format(\"yyyy-MM-DD\");\n  const [linkId, setLinkId] = useState([]);\n  const [linkColumns, setLinkColumns] = useState([]);\n  const [linkColumnsRoutes, setLinkColumnsRoutes] = useState([]);\n  const [headerData, setHeaderData] = useState([]);\n  const [loader, setLoader] = useState(false);\n  const billingMonth1 = formData.billingMonth;\n  const lastDateOfMonth1 = moment(billingMonth1)\n    .endOf(\"month\")\n    .format(\"YYYY-MM-DD\");\n  const [resourceInfo, setResourceInfo] = useState([]);\n  var GetData;\n  var billDetailsCount;\n  var reviewerAction;\n  const [projectInfo, setProjectInfo] = useState([]);\n  const getResourceInfo = () => {\n    axios({\n      method: \"post\",\n      // url: `http://localhost:8090/timeandexpensesms/getResourceInfo?BillingTsId=${linkId}`,\n      url: baseUrl + `/timeandexpensesms/projectBilling`,\n      data: {\n        billId: linkId,\n        isActive: 1,\n        isAdmin: [\"104335943\", \"1798\"].includes(loggedUserId) ? true : false,\n        billMon: billingMonth1,\n        isRefresh: 0,\n        isDirty: false,\n        usrId: loggedUserId,\n      },\n      headers: { \"Content-Type\": \"application/json\" },\n    })\n      .then((res) => {\n        GetData = res.data.PpmBillingTsDtl;\n        setProjectInfo(res.data.tsInfo);\n        billDetailsCount = res.data.BillDtlCnt;\n        reviewerAction = res.data.reviewerAction;\n        for (let i = 0; i < GetData.length; i++) {\n          GetData[i][\"stdBillRate\"] =\n            GetData[i][\"stdBillRate\"] == null\n              ? \"\"\n              : GetData[i][\"stdBillRate\"].toFixed(2);\n\n          GetData[i][\"allocHours\"] =\n            GetData[i][\"allocHours\"] == null\n              ? \"\"\n              : GetData[i][\"allocHours\"].toFixed(2);\n\n          GetData[i][\"leaveHours\"] =\n            GetData[i][\"leaveHours\"] == null\n              ? \"\"\n              : GetData[i][\"leaveHours\"].toFixed(2);\n\n          GetData[i][\"wrkStdHours\"] =\n            GetData[i][\"wrkStdHours\"] == null\n              ? \"\"\n              : GetData[i][\"wrkStdHours\"].toFixed(2);\n\n          GetData[i][\"wrkOtHours\"] =\n            GetData[i][\"wrkOtHours\"] == null\n              ? \"\"\n              : GetData[i][\"wrkOtHours\"].toFixed(2);\n\n          GetData[i][\"wrkApprvHours\"] =\n            GetData[i][\"wrkApprvHours\"] == null\n              ? \"\"\n              : GetData[i][\"wrkApprvHours\"].toFixed(2);\n\n          GetData[i][\"billTotHours\"] =\n            GetData[i][\"billTotHours\"] == null\n              ? \"\"\n              : GetData[i][\"billTotHours\"].toFixed(2);\n\n          GetData[i][\"finalBillRate\"] =\n            GetData[i][\"finalBillRate\"] == null\n              ? \"\"\n              : GetData[i][\"finalBillRate\"].toFixed(2);\n\n          GetData[i][\"billAmount\"] =\n            GetData[i][\"billAmount\"] == null\n              ? \"\"\n              : GetData[i][\"billAmount\"].toFixed(2);\n\n          GetData[i][\"billOtHours\"] =\n            GetData[i][\"billOtHours\"] == null\n              ? \"\"\n              : GetData[i][\"billOtHours\"].toFixed(2);\n        }\n\n        setResourceInfo(GetData);\n      })\n      .catch((error) => {\n        console.log(\"Error :\" + error);\n      });\n  };\n\n  const getFirstTable = () => {\n    axios({\n      method: \"post\",\n      url: baseUrl + `/timeandexpensesms/getFirstTable`,\n      data: {\n        tsId: 0,\n        isSQA: [\"104335943\", \"1798\"].includes(loggedUserId) || (EMReview[0]?.role_type_id == 919) ? false : isSQA,\n        status: storegrpahname,\n        tsName: \"\",\n        customerId:\n          formData.customerId == undefined || formData.customerId == \"\" || formData.customerId == \"null\"\n            ? 0\n            : formData.customerId,\n        term: \"monthly\",\n        startDate: formData.billingMonth\n          ? formData.billingMonth\n          : BillingFirstDate,\n        endDate: formData.billingMonth ? lastDateOfMonth1 : BillingLastDate,\n        billMonth: formData.billingMonth\n          ? formData.billingMonth\n          : BillingFirstDate,\n        isDM: isDM,\n        isAdmin: [\"104335943\", \"1798\"].includes(loggedUserId) || (EMReview[0]?.role_type_id == 919) ? true : false,\n        loggedId: loggedUserId,\n      },\n      headers: { \"Content-Type\": \"application/json\" },\n    })\n      .then((res) => {\n        const data = res.data;\n        for (let i = 0; i < data.length; i++) {\n          data[i][\"is_dirty\"] =\n            data[i][\"is_dirty\"] == null\n              ? \"No\"\n              : moment(data[i][\"is_dirty\"]).format(\"DD-MMM-YYYY\");\n          data[i][\"refreshDate\"] =\n            data[i][\"refreshDate\"] == null\n              ? \"NA\"\n              : moment(data[i][\"refreshDate\"]).format(\"DD-MMM-YYYY\");\n          // data[i][\"billingPeriod\"]= data[i][\"billingPeriod\"] == null ? \"\" : moment(data[i][\"billingPeriod\"]).format(\"DD-MMM-YYYY\");\n\n          const billingPeriod = data[i][\"billingPeriod\"];\n          if (billingPeriod) {\n            const [startDate, endDate] = billingPeriod.split(\" to \");\n            const formattedStartDate = moment(startDate).format(\"DD-MMM-YY\");\n            const formattedEndDate = moment(endDate).format(\"DD-MMM-YY\");\n            data[i][\n              \"billingPeriod\"\n            ] = `${formattedStartDate} to ${formattedEndDate}`;\n          }\n        }\n\n        let data1 = [\"projectName\", \"billingTsId\"];\n        let linkRoutes = [\"\"];\n        setLinkColumns(data1);\n        setLinkColumnsRoutes(linkRoutes);\n        setFirstTableData(data);\n        setTimeout(() => {\n          setLoader(false);\n        }, 1000);\n      })\n      .catch((error) => {\n        console.log(\"Error :\" + error);\n      });\n  };\n  const abortController = useRef(null);\n  const [projectInfoTab, setProjectinfoTab] = useState([]);\n  const handleAbort = () => {\n    abortController.current && abortController.current.abort();\n    setLoader(false);\n  };\n  const getProjectinfo = () => {\n    axios\n      .get(baseUrl + `/timeandexpensesms/getProjectInfo?id=${linkId}`)\n      .then((res) => {\n        const GetData = res.data;\n        setProjectinfoTab(GetData);\n        setTimeout(() => {\n          setLoader(false);\n        }, 1000);\n      })\n      .catch((error) => {\n        console.log(\"Error :\" + error);\n      });\n  };\n  //////////////////gettingProjectmanagerId\n  const getProjectManagerID = () => {\n    axios\n      .get(\n        baseUrl +\n        `/timeandexpensesms/getPMid?id=${projectInfoTab[0]?.projectId}`\n      )\n      .then((res) => {\n        const GetData = res.data;\n        setPMReview(GetData);\n      })\n      .catch((error) => {\n        console.log(\"Error :\" + error);\n      });\n  };\n  //////////////////gettingdeliveryManagerId\n  const getDeliveryManagerID = () => {\n    axios\n      .get(\n        baseUrl +\n        `/timeandexpensesms/getDMid?id=${projectInfoTab[0]?.projectId}`\n      )\n      .then((res) => {\n        const GetData = res.data;\n        setDMReview(GetData);\n      })\n      .catch((error) => {\n        console.log(\"Error :\" + error);\n      });\n  };\n  //////////////////gettingFinanceManagerId\n  const getFinanceManagerID = () => {\n    axios\n      .get(baseUrl + `/timeandexpensesms/getFMid?id=${loggedUserId}`)\n      .then((res) => {\n        const GetData = res.data;\n        setFMReview(GetData);\n      })\n      .catch((error) => {\n        console.log(\"Error :\" + error);\n      });\n  };\n  useEffect(() => {\n    firstTableData[0] &&\n      setHeaderData(JSON.parse(JSON.stringify(firstTableData[0])));\n  }, [firstTableData]);\n\n  // =========Search Filters Code=============\n\n  const filtersData = {\n    contains: { value: null, matchMode: FilterMatchMode.CONTAINS },\n  };\n  const [filters1, setFilters1] = useState({\n    global: filtersData[\"contains\"],\n  });\n\n  useEffect(() => {\n    setFilters1({\n      global: filtersData[\"contains\"],\n    });\n  }, [headerData]);\n\n  const [globalFilterValue1, setGlobalFilterValue1] = useState(\"\");\n\n  const onGlobalFilterChange1 = (e) => {\n    const value = e.target.value;\n    let _filters1 = { ...filters1 };\n\n    _filters1[\"global\"].value = value;\n\n    setFilters1(_filters1);\n    setGlobalFilterValue1(value);\n  };\n\n  const renderHeader1 = () => {\n    return (\n      <div className=\"flex justify-content-between\">\n        <span></span>\n        <span className=\"p-input-icon-left tableGsearch\">\n          <i className=\"pi pi-search\" />\n          <InputText\n            defaultValue={globalFilterValue1}\n            onChange={onGlobalFilterChange1}\n            placeholder=\"Keyword Search\"\n            style={{ textAlign: \"center\", verticalAlign: \"middle\" }}\n          />\n        </span>\n      </div>\n    );\n  };\n\n  const header1 = renderHeader1();\n\n  // =============================== END of Filter code ==================================\n\n  const handleClick = (billingTsId, linkIds, name) => {\n    getFirstTable();\n    setShowSecTable(true);\n    setLinkId(billingTsId);\n    setLoader(false);\n    getProjectinfo();\n    getProjectManagerID();\n    getDeliveryManagerID();\n    getFinanceManagerID();\n  };\n  const linkColumn = linkColumns[0];\n  const link = firstTableData[linkColumn];\n  const projectNameLink = (rowData) => {\n    const linkIds = rowData.billingTsId;\n    return (\n      <Link\n        title={rowData.projectName}\n        onClick={(e) => handleClick(linkIds, link, e)}\n      >\n        {rowData.projectName}\n      </Link>\n    );\n  };\n  const customerNameTooltip = (rowData) => {\n    return (\n      <div\n        className=\"ellipsis\"\n        align=\"left\"\n        data-toggle=\"tooltip\"\n        title={rowData.customerName}\n      >\n        {rowData.customerName}\n      </div>\n    );\n  };\n  const statusTooltip = (rowData) => {\n    return (\n      <div\n        className=\"ellipsis\"\n        align=\"left\"\n        data-toggle=\"tooltip\"\n        title={rowData.status}\n      >\n        {rowData.status}\n      </div>\n    );\n  };\n\n  const billingPeriodTooltip = (rowData) => {\n    return (\n      <div\n        className=\"ellipsis\"\n        align=\"left\"\n        data-toggle=\"tooltip\"\n        title={rowData.billingPeriod}\n      >\n        {rowData.billingPeriod}\n      </div>\n    );\n  };\n\n  const allocatedHrsTooltip = (rowData) => {\n    return (\n      <div\n        className=\"ellipsis\"\n        align=\"right\"\n        data-toggle=\"tooltip\"\n        title={rowData.allocatedHrs}\n      >\n        {rowData.allocatedHrs}\n      </div>\n    );\n  };\n\n  const vacationHrsTooltip = (rowData) => {\n    return (\n      <div\n        className=\"ellipsis\"\n        align=\"right\"\n        data-toggle=\"tooltip\"\n        title={rowData.vacationHrs}\n      >\n        {rowData.vacationHrs}\n      </div>\n    );\n  };\n  const actualHrsTooltip = (rowData) => {\n    return (\n      <div\n        className=\"ellipsis\"\n        align=\"right\"\n        data-toggle=\"tooltip\"\n        title={rowData.actualHrs}\n      >\n        {rowData.actualHrs}\n      </div>\n    );\n  };\n  const otHrsTooltip = (rowData) => {\n    return (\n      <div\n        className=\"ellipsis\"\n        align=\"right\"\n        data-toggle=\"tooltip\"\n        title={rowData.otHrs}\n      >\n        {rowData.otHrs}\n      </div>\n    );\n  };\n  const approvedHrsTooltip = (rowData) => {\n    return (\n      <div\n        className=\"ellipsis\"\n        align=\"right\"\n        data-toggle=\"tooltip\"\n        title={rowData.approvedHrs}\n      >\n        {rowData.approvedHrs}\n      </div>\n    );\n  };\n\n  const actualBillHrsTooltip = (rowData) => {\n    return (\n      <div\n        className=\"ellipsis\"\n        align=\"right\"\n        data-toggle=\"tooltip\"\n        title={rowData.actualBillHrs}\n      >\n        {rowData.actualBillHrs}\n      </div>\n    );\n  };\n  const otBillHrsTooltip = (rowData) => {\n    return (\n      <div\n        className=\"ellipsis\"\n        align=\"right\"\n        data-toggle=\"tooltip\"\n        title={rowData.otBillHrs}\n      >\n        {rowData.otBillHrs}\n      </div>\n    );\n  };\n  const totalBillHrsTooltip = (rowData) => {\n    return (\n      <div\n        className=\"ellipsis\"\n        align=\"right\"\n        data-toggle=\"tooltip\"\n        title={rowData.actualBillHrs + rowData.otBillHrs}\n      >\n        {rowData.actualBillHrs + rowData.otBillHrs}\n      </div>\n    );\n  };\n  const unbillHrsTooltip = (rowData) => {\n    return (\n      <div\n        className=\"ellipsis\"\n        align=\"right\"\n        data-toggle=\"tooltip\"\n        title={rowData.unbillHrs}\n      >\n        {rowData.unbillHrs}\n      </div>\n    );\n  };\n\n  const billingAmountTooltip = (rowData) => {\n    return (\n      <div\n        className=\"ellipsis\"\n        align=\"right\"\n        data-toggle=\"tooltip\"\n        title={rowData.billingAmount}\n      >\n        {rowData.billingAmount}\n      </div>\n    );\n  };\n  const discountAmountTooltip = (rowData) => {\n    return (\n      <div\n        className=\"ellipsis\"\n        align=\"right\"\n        data-toggle=\"tooltip\"\n        title={rowData.discountAmount}\n      >\n        {rowData.discountAmount}\n      </div>\n    );\n  };\n\n  const netBillAmountTooltip = (rowData) => {\n    return (\n      <div\n        className=\"ellipsis\"\n        align=\"right\"\n        data-toggle=\"tooltip\"\n        title={rowData.netBillAmount}\n      >\n        {rowData.netBillAmount}\n      </div>\n    );\n  };\n  const is_dirtyTooltip = (rowData) => {\n    return (\n      <div\n        className=\"ellipsis\"\n        align=\"left\"\n        data-toggle=\"tooltip\"\n        title={rowData.is_dirty}\n      >\n        {rowData.is_dirty}\n      </div>\n    );\n  };\n  const refreshDateTooltip = (rowData) => {\n    return (\n      <div\n        className=\"ellipsis\"\n        align=\"left\"\n        data-toggle=\"tooltip\"\n        title={rowData.refreshDate}\n      >\n        {rowData.refreshDate}\n      </div>\n    );\n  };\n\n  useEffect(() => {\n    getFirstTable();\n    getProjectinfo();\n    getResourceInfo();\n    getProjectManagerID();\n    getDeliveryManagerID();\n    getFinanceManagerID();\n  }, [linkId]);\n\n  useEffect(() => {\n    getProjectinfo();\n    getResourceInfo();\n    getProjectManagerID();\n    getDeliveryManagerID();\n    getFinanceManagerID();\n  }, [projectInfoTab[0]?.projectId]);\n\n  const headerGroup = (\n    <ColumnGroup>\n      <Row>\n        <Column header=\"Customer\" style={{ textAlign: \"center\" }} />\n        <Column header=\"Projects\" style={{ textAlign: \"center\" }} />\n        <Column header=\"Status\" style={{ textAlign: \"center\" }} />\n        <Column header=\"Billing Period\" style={{ textAlign: \"center\" }} />\n        <Column colSpan={5} header=\"Hours\"></Column>\n        <Column colSpan={3} header=\"Billing Hours\"></Column>\n        <Column colSpan={4} header=\"Billing Amount\"></Column>\n        <Column header=\"Is Data Modified\"></Column>\n        <Column header=\"Refresh Date\"></Column>\n      </Row>\n      <Row>\n        <Column></Column>\n        <Column></Column>\n        <Column></Column>\n        <Column></Column>\n        <Column header=\"Allocated\"></Column>\n        <Column header=\"Vocation\"></Column>\n        <Column header=\"Actual\"></Column>\n        <Column header=\"OT\"></Column>\n        <Column header=\"Approved\"></Column>\n        <Column header=\"Actual\"></Column>\n        <Column header=\"OT\"></Column>\n        <Column header=\"Total\"></Column>\n        <Column header=\"Unbilled\"></Column>\n        <Column header=\"Amount\"></Column>\n        <Column header=\"Discount Amount\"></Column>\n        <Column header=\"Net Amount\"></Column>\n        <Column></Column>\n        <Column></Column>\n      </Row>\n    </ColumnGroup>\n  );\n  return (\n    <>\n      <div className=\"group mb-3 customCard\">\n        <div className=\"col-md-12 collapseHeader\">\n          <h2>\n            {storegrpahname == \"In PM Review\" ||\n              storegrpahname == \"In DM Review\" ||\n              storegrpahname == \"In Finance Review\"\n              ? storegrpahname.slice(3)\n              : storegrpahname}{\" \"}\n            Projects\n          </h2>\n        </div>\n        <div className=\"darkHeader\">\n          {/* {loader ? <Loader handleAbort={handleAbort} /> : \"\"} */}\n          {visibleTable && (\n            <DataTable\n              className=\"primeReactDataTable invoicingSearchTable\"\n              value={firstTableData}\n              paginator\n              rows={20}\n              showGridlines\n              headerColumnGroup={headerGroup}\n              filters={filters1}\n              header={header1}\n            >\n              <Column field=\"customerName\" body={customerNameTooltip}></Column>\n              <Column field=\"projectName\" body={projectNameLink}></Column>\n              <Column field=\"status\" body={statusTooltip}></Column>\n              <Column\n                field=\"billingPeriod\"\n                body={billingPeriodTooltip}\n              ></Column>\n              <Column field=\"allocatedHrs\" body={allocatedHrsTooltip}></Column>\n              <Column field=\"vacationHrs\" body={vacationHrsTooltip}></Column>\n              <Column field=\"actualHrs\" body={actualHrsTooltip}></Column>\n              <Column field=\"otHrs\" body={otHrsTooltip}></Column>\n              <Column field=\"approvedHrs\" body={approvedHrsTooltip}></Column>\n              <Column\n                field=\"actualBillHrs\"\n                body={actualBillHrsTooltip}\n              ></Column>\n              <Column field=\"otBillHrs\" body={otBillHrsTooltip}></Column>\n              <Column field=\"totalBillHrs\" body={totalBillHrsTooltip}></Column>\n              <Column field=\"unbillHrs\" body={unbillHrsTooltip}></Column>\n              <Column\n                field=\"billingAmount\"\n                body={billingAmountTooltip}\n              ></Column>\n              <Column\n                field=\"discountAmount\"\n                body={discountAmountTooltip}\n              ></Column>\n              <Column\n                field=\"netBillAmount\"\n                body={netBillAmountTooltip}\n              ></Column>\n              <Column field=\"is_dirty\" body={is_dirtyTooltip}></Column>\n              <Column field=\"refreshDate\" body={refreshDateTooltip}></Column>\n            </DataTable>\n          )}\n        </div>\n      </div>\n      {loader ? <Loader handleAbort={handleAbort} /> : \"\"}\n      {showSecTable == true ? (\n        <FixedPriceOpenSecondTable\n          firstTableData={firstTableData}\n          setProjectinfoTab={setProjectinfoTab}\n          projectInfoTab={projectInfoTab}\n          projectInfo={projectInfo}\n          linkId={linkId}\n          formData={formData}\n          setLoader={setLoader}\n          PMReview={PMReview}\n          DMReview={DMReview}\n          storegrpahname={storegrpahname}\n          FMReview={FMReview}\n          getGraph={getGraph}\n          getDataBsedGrpah={getDataBsedGrpah}\n          setAddmsg={setAddmsg}\n          // addmsg={addmsg}\n          setValidationMessage={setValidationMessage}\n          resourceInfo={resourceInfo}\n          setResourceInfo={setResourceInfo}\n          billDetailsCount={billDetailsCount}\n          reviewerAction={reviewerAction}\n          getResourceInfo={getResourceInfo}\n          headerData={headerData}\n        />\n      ) : (\n        \"\"\n      )}\n    </>\n  );\n}\n","import React, { useState, useEffect, useRef } from \"react\";\nimport {\n  FaChevronCircleDown,\n  FaChevronCircleUp,\n  FaSearch,\n  FaCheck,\n} from \"react-icons/fa\";\nimport { Link } from \"react-router-dom\";\nimport { Column } from \"primereact/column\";\nimport DatePicker from \"react-datepicker\";\nimport CellRendererPrimeReactDataTable from \"../PrimeReactTableComponent/CellRendererPrimeReactDataTable\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport moment from \"moment\";\nimport { MultiSelect } from \"react-multi-select-component\";\nimport { CCollapse } from \"@coreui/react\";\nimport axios from \"axios\";\nimport { environment } from \"../../environments/environment\";\nimport { BiSearch } from \"react-icons/bi\";\nimport Loader from \"../Loader/Loader\";\nimport FixedPriceOpenFirstTable from \"./Expenses/FixedPriceOpenFirstTable\";\nimport FixedPriceOpenCss from \"./FixedPriceOpen.scss\";\nimport { BiCheck } from \"react-icons/bi\";\nimport { IoWarningOutline } from \"react-icons/io5\";\nimport ScreenBreadcrumbs from \"../Common/ScreenBreadcrumbs\";\nimport GlobalHelp from \"../PrimeReactTableComponent/GlobalHelp\";\n\nfunction FixedPriceOpen() {\n  const baseUrl = environment.baseUrl;\n  var date = new Date();\n  const [startDate, setStartDate] = useState(\n    new Date(date.getFullYear(), date.getMonth(), 1)\n  );\n  const BillingFirstDate = moment(startDate).format(\"yyyy-MM-DD\");\n  let rows = 10;\n  const [endDate, setEndDate] = useState(\n    new Date(date.getFullYear(), date.getMonth(), 1)\n  );\n  const BillingMonthdate = moment(new Date()).format(\"yyyy-MM-DD\");\n  const newBillingMonthdate = moment(new Date()).format(\"yyyy-MM-DD\");\n  const [newyear, newmonth] = newBillingMonthdate.split(\"-\");\n  const newformattedDate = `${newmonth}-${newyear}`;\n  const lastDayOfMonth = new Date(date.getFullYear(), date.getMonth() + 1, 0);\n  const BillingLastDate = moment(lastDayOfMonth).format(\"yyyy-MM-DD\");\n  const [formData, setFormData] = useState([\n    {\n      billingMonth: startDate,\n    },\n  ]);\n  const [visible, setVisible] = useState(false);\n  const [cheveronIcon, setCheveronIcon] = useState(FaChevronCircleUp);\n  const [customer, setCustomer] = useState([]);\n  const [showSecTable, setShowSecTable] = useState(false);\n  const [addmsg, setAddmsg] = useState(false);\n  const [isAdmin, setIsAdmin] = useState(false);\n  const [validationMessage, setValidationMessage] = useState(false);\n  const [dataAccess, setDataAccess] = useState([]);\n\n  const abortController = useRef(null);\n\n  const [loader, setLoader] = useState(false);\n  const [isShow, setIsShow] = useState(false);\n  const [graphData, setGraphData] = useState([{}]);\n  const [showtable, setShowtable] = useState(false);\n  const [storeFirstTab, setStorefirstTab] = useState([]);\n  const [isSQA, setIsSQA] = useState([]);\n  const billingMonth = storeFirstTab[0]?.billingMonth;\n  const lastDateOfMonth1 = moment(billingMonth)\n    .endOf(\"month\")\n    .format(\"YYYY-MM-DD\");\n  formData.billingMonth;\n  const billingMonth1 = formData.billingMonth;\n  const lastDateOfMonth2 = moment(billingMonth1)\n    .endOf(\"month\")\n    .format(\"YYYY-MM-DD\");\n  const [firstTabledata, setFirstTabledata] = useState([]);\n  const [PMReview, setPMReview] = useState([]);\n  const [DMReview, setDMReview] = useState([]);\n  const [FMReview, setFMReview] = useState([]);\n  const [EMReview, setEMReview] = useState([]);\n  const [routes, setRoutes] = useState([]);\n  let textContent = \"Time & Expenses\";\n  let currentScreenName = [\"Fixed Price - Open\"];\n\n  const loggedUserId = localStorage.getItem(\"resId\");\n  const billingMonthDate = formData.billingMonth || BillingMonthdate;\n  const [year, month] = billingMonthDate.split(\"-\");\n  const formattedDate = `${month}-${year}`;\n  let flag = 1;\n  const handleClick = () => {\n    setVisible(!visible);\n    visible\n      ? setCheveronIcon(FaChevronCircleUp)\n      : setCheveronIcon(FaChevronCircleDown);\n    setLoader(false);\n    setShowtable(false);\n    setIsShow(true);\n    getGraph();\n  };\n\n  // const getExecutiveManagementId = () =>{\n  //   axios\n  //     .get(`http://localhost:8090/timeandexpensesms/getEMid?id=${loggedUserId}`)\n  //     .then((res) => {\n  //       console.log(res.data[0].role_type_id);\n  //       const GetData = res.data;\n  //       setEMReview(GetData);\n  //     })\n  //     .catch((error) => {\n  //       console.log(\"Error :\" + error);\n  //     });\n  // }\n\n  const getGraph = () => {\n    var GetData = [];\n    axios\n      .get(baseUrl + `/timeandexpensesms/getEMid?id=${loggedUserId}`)\n      .then((res) => {\n        if (res.data) {\n          GetData = res.data;\n        } else {\n          GetData.push((role_type_id = 0));\n        }\n        console.log(GetData);\n        setEMReview(GetData);\n        console.log(GetData[0]?.role_type_id == 919);\n        if (\n          [\"104335943\", \"1798\"].includes(loggedUserId) ||\n          GetData[0]?.role_type_id == 919\n        ) {\n          axios({\n            method: \"post\",\n            url: baseUrl + `/timeandexpensesms/projectBillingList`,\n            data: {\n              billMnth:\n                formattedDate == undefined ? newformattedDate : formattedDate,\n              tsName: \"\",\n              term: \"monthly\",\n              customerId:\n                formData.customerId == undefined || formData.customerId == \"\"\n                  ? 0\n                  : formData.customerId,\n              startDate: formData.billingMonth\n                ? formData.billingMonth\n                : BillingFirstDate,\n              endDate: formData.billingMonth\n                ? lastDateOfMonth2\n                : BillingLastDate,\n              userId: loggedUserId,\n            },\n            headers: { \"Content-Type\": \"application/json\" },\n          })\n            .then((res) => {\n              const data = res.data;\n              setStorefirstTab(res.data.billingtslist);\n              setIsSQA(res.data.isSQA);\n              setGraphData(data);\n              getDataBsedGrpah(data, \"In PM Review\");\n              setTimeout(() => {\n                setLoader(false);\n              }, 1000);\n            })\n            .catch((error) => {\n              console.log(\"Error :\" + error);\n            });\n        } else {\n          axios({\n            method: \"post\",\n            url: baseUrl + `/timeandexpensesms/myProjectBillingList`,\n            data: {\n              billingMonth:\n                formattedDate == undefined ? newformattedDate : formattedDate,\n              billingtslist: \"\",\n              userLogged: loggedUserId,\n              tsId: \"\",\n              tsName: \"\",\n              term: \"monthly\",\n              customerId:\n                formData.customerId == undefined || formData.customerId == \"\"\n                  ? 0\n                  : formData.customerId,\n              startDate: formData.billingMonth\n                ? formData.billingMonth\n                : BillingFirstDate,\n              endDate: formData.billingMonth\n                ? lastDateOfMonth2\n                : BillingLastDate,\n              userId: loggedUserId,\n            },\n            headers: { \"Content-Type\": \"application/json\" },\n          })\n            .then((res) => {\n              const data = res.data;\n              setStorefirstTab(res.data.billingtslist);\n              setIsSQA(res.data.isSQA);\n              setGraphData(data);\n              getDataBsedGrpah(data, \"In PM Review\");\n              setTimeout(() => {\n                setLoader(false);\n              }, 1000);\n            })\n            .catch((error) => {\n              console.log(\"Error :\" + error);\n            });\n        }\n      })\n      .catch((error) => {\n        console.log(\"Error :\" + error);\n      });\n  };\n\n  useEffect(() => {\n    // getExecutiveManagementId();\n    getGraph();\n    getMenus();\n  }, []);\n\n  // useEffect(() => {\n  //   getGraph();\n  // }, [EMReview])\n\n  const getMenus = () => {\n    axios({\n      method: \"GET\",\n      url: baseUrl + `/CommonMS/master/getMenus?loggedUserId=${loggedUserId}`,\n    }).then((resp) => {\n      let data = resp.data;\n      data.forEach((item) => {\n        if (item.display_name === textContent) {\n          setRoutes([item]);\n        }\n      });\n\n      const TMExpensesSubMenu = data\n        .find((item) => item.display_name === \"Time & Expenses\")\n        .subMenus.find(\n          (subMenu) => subMenu.display_name === \"Fixed Price - Open\"\n        );\n\n      // Extract the access_level value\n      const accessLevel = TMExpensesSubMenu\n        ? TMExpensesSubMenu.userRoles.includes(\"690\") &&\n          TMExpensesSubMenu.userRoles.includes(\"641\")\n          ? 600\n          : TMExpensesSubMenu.userRoles.includes(\"690\")\n          ? 690\n          : TMExpensesSubMenu.userRoles.includes(\"641\")\n          ? 641\n          : TMExpensesSubMenu.userRoles.includes(\"930\")\n          ? 930\n          : TMExpensesSubMenu.userRoles.includes(\"46\") && 46\n        : null;\n      setDataAccess(accessLevel);\n    });\n  };\n  console.log(dataAccess);\n  const getCustomers = () => {\n    axios(\n      dataAccess == 641 ||\n        dataAccess == 690 ||\n        dataAccess == 930 ||\n        dataAccess == 600\n        ? baseUrl +\n            `/CommonMS/master/getCustomersList?loggedUserId=${loggedUserId}`\n        : flag == 1\n        ? baseUrl + `/ProjectMS/Engagement/getCustomerName`\n        : baseUrl + `/ProjectMS/Engagement/getCustomerName`\n    ).then((resp) => {\n      let custom = resp.data;\n      console.log(custom);\n      // const filteredData = custom.filter((item) => item.id !== 81084541);\n      setCustomer(custom);\n    });\n  };\n\n  useEffect(() => {\n    if (\n      dataAccess == 641 ||\n      dataAccess == 690 ||\n      dataAccess == 930 ||\n      dataAccess == 46\n    ) {\n      getCustomers();\n    }\n  }, [dataAccess]);\n\n  const handleAbort = () => {\n    abortController.current && abortController.current.abort();\n    setLoader(false);\n  };\n  const handleChange = (e) => {\n    const { id, name, value } = e.target;\n    setFormData((prev) => ({ ...prev, [id]: value }));\n  };\n  useEffect(() => {\n    getCustomers();\n  }, []);\n\n  const [storegrpahname, setStoregrpahname] = useState([]);\n  const [visibleTable, setVisibleTable] = useState(false);\n  const [firstTableData, setFirstTableData] = useState([{}]);\n  const [isDM, setIsDM] = useState(false);\n  let isMatchedDM = false;\n  for (const review of DMReview) {\n    if (review.deliveryMgrId && review.deliveryMgrId.includes(\",\")) {\n      const deliveryMgrId = review.deliveryMgrId.split(\",\");\n      if (deliveryMgrId.includes(loggedUserId.toString())) {\n        isMatchedDM = true;\n        break;\n      }\n    }\n  }\n  useEffect(() => {\n    if (isMatchedDM) {\n      setIsDM(isMatchedDM);\n    } else {\n      setIsDM(isMatchedDM);\n    }\n  }, [isMatchedDM]);\n\n  const getDataBsedGrpah = (data, name) => {\n    setShowtable(true);\n    setShowSecTable(false);\n    setStoregrpahname(name);\n    axios({\n      method: \"post\",\n      url: baseUrl + `/timeandexpensesms/getFirstTable`,\n      data: {\n        tsId: 0,\n        isSQA:\n          [\"104335943\", \"1798\"].includes(loggedUserId) ||\n          EMReview[0]?.role_type_id == 919\n            ? false\n            : isSQA.length > 0\n            ? isSQA\n            : data.isSQA,\n        status: name,\n        tsName: \"\",\n        customerId:\n          formData.customerId == undefined || formData.customerId == \"\"\n            ? 0\n            : formData.customerId,\n        term: \"monthly\",\n        startDate: formData.billingMonth\n          ? formData.billingMonth\n          : BillingFirstDate,\n        endDate: formData.billingMonth ? lastDateOfMonth2 : BillingLastDate,\n        billMonth: formData.billingMonth\n          ? formData.billingMonth\n          : BillingFirstDate,\n        isDM: isDM,\n        isAdmin:\n          [\"104335943\", \"1798\"].includes(loggedUserId) ||\n          EMReview[0]?.role_type_id == 919\n            ? true\n            : false,\n        loggedId: loggedUserId,\n      },\n      headers: { \"Content-Type\": \"application/json\" },\n    })\n      .then((res) => {\n        const data = res.data;\n        for (let i = 0; i < data.length; i++) {\n          data[i][\"is_dirty\"] =\n            data[i][\"is_dirty\"] == null\n              ? \"No\"\n              : moment(data[i][\"is_dirty\"]).format(\"DD-MMM-YYYY\");\n          data[i][\"refreshDate\"] =\n            data[i][\"refreshDate\"] == null\n              ? \"NA\"\n              : moment(data[i][\"refreshDate\"]).format(\"DD-MMM-YYYY\");\n\n          const billingPeriod = data[i][\"billingPeriod\"];\n          if (billingPeriod) {\n            const [startDate, endDate] = billingPeriod.split(\" to \");\n            const formattedStartDate = moment(startDate).format(\"DD-MMM-YY\");\n            const formattedEndDate = moment(endDate).format(\"DD-MMM-YY\");\n            data[i][\n              \"billingPeriod\"\n            ] = `${formattedStartDate} to ${formattedEndDate}`;\n          }\n        }\n\n        setFirstTableData(data);\n        setVisibleTable(true);\n        setTimeout(() => {\n          setLoader(false);\n        }, 1000);\n      })\n      .catch((error) => {\n        console.log(\"Error :\" + error);\n      });\n  };\n\n  const HelpPDFName = \"FixedPriceOpen.pdf\";\n  const Headername = \"Fixed-price Open Help\";\n  return (\n    <div>\n      {addmsg ? (\n        <div className=\"statusMsg success\">\n          <span className=\"errMsg\">\n            <BiCheck size=\"1.4em\" strokeWidth={{ width: \"100px\" }} />{\" \"}\n            &nbsp;Billing timesheet details saved successfully\n          </span>\n        </div>\n      ) : (\n        \"\"\n      )}\n\n      {validationMessage ? (\n        <div className=\"statusMsg error\">\n          {\" \"}\n          <span>\n            {\" \"}\n            <IoWarningOutline /> Please select the valid values for highlighted\n            fields{\" \"}\n          </span>\n        </div>\n      ) : (\n        \"\"\n      )}\n      <div className=\"col-md-12\">\n        <div className=\"pageTitle\">\n          <div className=\"childOne\"></div>\n          <div className=\"childTwo\">\n            <h2>Fixed Price-Open</h2>\n          </div>\n          <div className=\"childThree\"></div>\n        </div>\n      </div>\n      <ScreenBreadcrumbs\n        routes={routes}\n        currentScreenName={currentScreenName}\n      />\n      <div className=\"group mb-3 customCard\">\n        <div className=\"col-md-12 collapseHeader\">\n          <h2>Search Filters</h2>\n          <div className=\"helpBtn\">\n            <GlobalHelp pdfname={HelpPDFName} name={Headername} />\n          </div>\n          <div\n            onClick={() => {\n              setVisible(!visible);\n              visible\n                ? setCheveronIcon(FaChevronCircleUp)\n                : setCheveronIcon(FaChevronCircleDown);\n            }}\n          >\n            <span>{cheveronIcon}</span>\n          </div>\n        </div>\n        <CCollapse visible={!visible}>\n          <div className=\"group-content row\">\n            <div className=\"col-md-4 mb-2\">\n              <div className=\"form-group row\">\n                <label className=\"col-5\" htmlFor=\"customerId\">\n                  Customer<span style={{ color: \"red\" }}></span>\n                </label>\n                <span className=\"col-1 p-0\">:</span>\n                <div className=\"col-6\">\n                  <select\n                    className=\"text cancel\"\n                    id=\"customerId\"\n                    name=\"customerId\"\n                    onChange={(e) => handleChange(e)}\n                  >\n                    <option value=\"null\">{\"<<Please Select>>\"}</option>\n                    {customer.map((Item) => (\n                      <option value={Item.id}>{Item.name}</option>\n                    ))}\n                  </select>\n                </div>\n              </div>\n            </div>\n            <div className=\"col-md-4 mb-2\">\n              <div className=\"form-group row\">\n                <label className=\"col-5\" htmlFor=\"email-input\">\n                  Month<span style={{ color: \"red\" }}>*</span>\n                </label>\n                <span className=\"col-1 p-0\">:</span>\n                <div className=\"col-6\">\n                  <DatePicker\n                    selected={startDate}\n                    name=\"billingMonth\"\n                    id=\"billingMonth\"\n                    onChange={(e) => {\n                      setFormData((prev) => ({\n                        ...prev,\n                        [\"billingMonth\"]: moment(e).format(\"yyyy-MM-DD\"),\n                      }));\n                      setStartDate(e);\n                    }}\n                    dateFormat=\"MMM-yyyy\"\n                    maxDate={new Date()}\n                    showMonthYearPicker\n                  />\n                </div>\n              </div>\n            </div>\n            <div className=\"col-md-12 col-sm-12 col-xs-12 btn-container center my-2\">\n              <button\n                type=\"submit\"\n                className=\"btn btn-primary\"\n                onClick={handleClick}\n              >\n                <FaSearch />\n                Search{\" \"}\n              </button>\n            </div>\n          </div>\n        </CCollapse>\n      </div>\n      {/* {graphData?.billingtslist?.length > 0 ? ( */}\n      <>\n        {/* <div className=\"flowChart\">\n          <div className=\"tCircle\">\n            <div className=\"label\">DM Review</div>\n            <div className=\"circle\">\n              <div className=\"text\">\n                {graphData.billingtslist.map((data, index) => {\n                  return (\n                    <a\n                      key={index}\n                      className={`${\n                        data.dmReview === 0 ? \"count zero\" : \"count\"\n                      }`}\n                      data-count=\"1\"\n                      onClick={(e) => {\n                        {\n                          data.dmReview === 0\n                            ? \"\"\n                            : getDataBsedGrpah(data, \"In DM Review\");\n                        }\n                      }}\n                    >\n                      {data.dmReview}\n                    </a>\n                  );\n                })}\n              </div>\n            </div>\n            <div className=\"tvline\">&nbsp;</div>\n          </div>\n          <div className=\"tCircle\">\n            <div className=\"label\">DM Rejected</div>\n            <div className=\"circle\">\n              <div className=\"text\">\n                {graphData.billingtslist.map((data, index) => (\n                  <a\n                    key={index}\n                    className={`${\n                      data.dmRejected == 0 ? \"count zero\" : \"count\"\n                    }`}\n                    data-count=\"1\"\n                    onClick={() => {\n                      {\n                        data.dmRejected == 0\n                          ? \"\"\n                          : getDataBsedGrpah(data, \"DM Rejected\");\n                      }\n                    }}\n                  >\n                    {data.dmRejected}\n                  </a>\n                ))}\n              </div>\n            </div>\n\n            <div className=\"tvline\">&nbsp;</div>\n          </div>\n\n          <div style={{ clear: \"both\" }}></div>\n\n          <hr id=\"tline\" size=\"1\" />\n\n          <div className=\"bCircle\">\n            <div className=\"bvline\">&nbsp;</div>\n\n            <div className=\"circle\">\n              <div className=\"text\">\n                {graphData.billingtslist.map((data, index) => (\n                  <a\n                    key={index}\n                    className={`${data.pmReview == 0 ? \"count zero\" : \"count\"}`}\n                    data-count=\"1\"\n                    onClick={() => {\n                      {\n                        data.pmReview == 0\n                          ? \"\"\n                          : getDataBsedGrpah(data, \"In PM Review\");\n                      }\n                    }}\n                  >\n                    {data.pmReview}\n                  </a>\n                ))}\n              </div>\n            </div>\n            <div className=\"label\">PM Review</div>\n          </div>\n\n          <div className=\"bCircle\">\n           \n\n            <div className=\"bvline\">&nbsp;</div>\n\n            <div className=\"circle\">\n              <div className=\"text\">\n                {graphData.billingtslist.map((data, index) => (\n                  <a\n                    key={index}\n                    className={`${\n                      data.finReview == 0 ? \"count zero\" : \"count\"\n                    }`}\n                    data-count=\"1\"\n                    onClick={() => {\n                      {\n                        data.finReview == 0\n                          ? \"\"\n                          : getDataBsedGrpah(data, \"In Finance Review\");\n                      }\n                    }}\n                  >\n                    {data.finReview}\n                  </a>\n                ))}\n              </div>\n            </div>\n            <div className=\"label\">Finance Review</div>\n          </div>\n          <div className=\"bCircle\">\n            <div className=\"bvline\">&nbsp;</div>\n            <div className=\"circle\">\n              <div className=\"text\">\n                {graphData.billingtslist.map((data, index) => (\n                  <a\n                    key={index}\n                    className={`${\n                      data.finRejected == 0 ? \"count zero\" : \"count\"\n                    }`}\n                    data-count=\"1\"\n                    onClick={() => {\n                      {\n                        data.finRejected == 0\n                          ? \"\"\n                          : getDataBsedGrpah(data, \"Finance Rejected\");\n                      }\n                    }}\n                  >\n                    {data.finRejected}\n                  </a>\n                ))}\n              </div>\n            </div>\n            <div className=\"label\">Finance Rejected</div>\n          </div>\n          <div className=\"bCircle\">\n            <div className=\"bvline\">&nbsp;</div>\n            <div className=\"circle\">\n              <div className=\"text\">\n                {graphData.billingtslist.map((data, index) => (\n                  <a\n                    key={index}\n                    className={`${\n                      data.finAccepted == 0 ? \"count zero\" : \"count\"\n                    }`}\n                    data-count=\"1\"\n                    onClick={() => {\n                      {\n                        data.finAccepted == 0\n                          ? \"\"\n                          : getDataBsedGrpah(data, \"Finance Accepted\");\n                      }\n                    }}\n                  >\n                    {data.finAccepted}\n                  </a>\n                ))}\n              </div>\n            </div>\n            <div className=\"label\">Finance Accepted</div>\n          </div>\n        </div> */}\n        <div className=\"flowBox\">\n          <div className=\"flowContainer\">\n            <div className=\"flowItem\">\n              <div className=\"flowItemHeader\">PM Review</div>\n              <div className=\"flowItemContent\">\n                {graphData?.billingtslist?.length > 0 ? (\n                  graphData.billingtslist.map((data, index) => (\n                    <a\n                      key={index}\n                      className={`${\n                        data.pmReview == 0 ? \"count zero\" : \"count\"\n                      }`}\n                      data-count=\"1\"\n                      onClick={() => {\n                        {\n                          data.pmReview == 0\n                            ? \"\"\n                            : getDataBsedGrpah(graphData, \"In PM Review\");\n                        }\n                      }}\n                    >\n                      {data.pmReview}\n                    </a>\n                  ))\n                ) : (\n                  <a className={\"count zero\"} data-count=\"1\">\n                    {0}\n                  </a>\n                )}\n              </div>\n            </div>\n            <div className=\"flowItem\">\n              <div className=\"flowItemHeader\">DM Review</div>\n              <div className=\"flowItemContent\">\n                {graphData?.billingtslist?.length > 0 ? (\n                  graphData.billingtslist.map((data, index) => {\n                    return (\n                      <a\n                        key={index}\n                        className={`${\n                          data.dmReview === 0 ? \"count zero\" : \"count\"\n                        }`}\n                        data-count=\"1\"\n                        onClick={(e) => {\n                          {\n                            data.dmReview === 0\n                              ? \"\"\n                              : getDataBsedGrpah(graphData, \"In DM Review\");\n                          }\n                        }}\n                      >\n                        {data.dmReview}\n                      </a>\n                    );\n                  })\n                ) : (\n                  <a className={\"count zero\"} data-count=\"1\">\n                    {0}\n                  </a>\n                )}\n              </div>\n            </div>\n            <div className=\"flowItem\">\n              <div className=\"flowItemHeader\">DM Rejected</div>\n              <div className=\"flowItemContent\">\n                {graphData?.billingtslist?.length > 0 ? (\n                  graphData.billingtslist.map((data, index) => (\n                    <a\n                      key={index}\n                      className={`${\n                        data.dmRejected == 0 ? \"count zero\" : \"count\"\n                      }`}\n                      data-count=\"1\"\n                      onClick={() => {\n                        {\n                          data.dmRejected == 0\n                            ? \"\"\n                            : getDataBsedGrpah(graphData, \"DM Rejected\");\n                        }\n                      }}\n                    >\n                      {data.dmRejected}\n                    </a>\n                  ))\n                ) : (\n                  <a className={\"count zero\"} data-count=\"1\">\n                    {0}\n                  </a>\n                )}\n              </div>\n            </div>\n            <div className=\"flowItem\">\n              <div className=\"flowItemHeader\">Finance Review</div>\n              <div className=\"flowItemContent\">\n                {graphData?.billingtslist?.length > 0 ? (\n                  graphData.billingtslist.map((data, index) => (\n                    <a\n                      key={index}\n                      className={`${\n                        data.finReview == 0 ? \"count zero\" : \"count\"\n                      }`}\n                      data-count=\"1\"\n                      onClick={() => {\n                        {\n                          data.finReview == 0\n                            ? \"\"\n                            : getDataBsedGrpah(graphData, \"In Finance Review\");\n                        }\n                      }}\n                    >\n                      {data.finReview}\n                    </a>\n                  ))\n                ) : (\n                  <a className={\"count zero\"} data-count=\"1\">\n                    {0}\n                  </a>\n                )}\n              </div>\n            </div>\n            <div className=\"flowItem\">\n              <div className=\"flowItemHeader\">Finance Rejected</div>\n              <div className=\"flowItemContent\">\n                {graphData?.billingtslist?.length > 0 ? (\n                  graphData.billingtslist.map((data, index) => (\n                    <a\n                      key={index}\n                      className={`${\n                        data.finRejected == 0 ? \"count zero\" : \"count\"\n                      }`}\n                      data-count=\"1\"\n                      onClick={() => {\n                        {\n                          data.finRejected == 0\n                            ? \"\"\n                            : getDataBsedGrpah(graphData, \"Finance Rejected\");\n                        }\n                      }}\n                    >\n                      {data.finRejected}\n                    </a>\n                  ))\n                ) : (\n                  <a className={\"count zero\"} data-count=\"1\">\n                    {0}\n                  </a>\n                )}\n              </div>\n            </div>\n            <div className=\"flowItem\">\n              <div className=\"flowItemHeader\">Finance Accepted</div>\n              <div className=\"flowItemContent\">\n                {graphData?.billingtslist?.length > 0 ? (\n                  graphData.billingtslist.map((data, index) => (\n                    <a\n                      key={index}\n                      className={`${\n                        data.finAccepted == 0 ? \"count zero\" : \"count\"\n                      }`}\n                      data-count=\"1\"\n                      onClick={() => {\n                        {\n                          data.finAccepted == 0\n                            ? \"\"\n                            : getDataBsedGrpah(graphData, \"Finance Accepted\");\n                        }\n                      }}\n                    >\n                      {data.finAccepted}\n                    </a>\n                  ))\n                ) : (\n                  <a className={\"count zero\"} data-count=\"1\">\n                    {0}\n                  </a>\n                )}\n              </div>\n            </div>\n          </div>\n        </div>\n      </>\n      {/* ) : (\n        \"\"\n      )} */}\n      {loader ? <Loader handleAbort={handleAbort} /> : \"\"}\n      {showtable == true ? (\n        <FixedPriceOpenFirstTable\n          formData={formData}\n          setStorefirstTab={setStorefirstTab}\n          storeFirstTab={storeFirstTab}\n          firstTabledata={firstTabledata}\n          storegrpahname={storegrpahname}\n          showtable={showtable}\n          visibleTable={visibleTable}\n          setVisibleTable={setVisibleTable}\n          setFirstTabledata={setFirstTabledata}\n          setFirstTableData={setFirstTableData}\n          firstTableData={firstTableData}\n          showSecTable={showSecTable}\n          setShowSecTable={setShowSecTable}\n          getGraph={getGraph}\n          getDataBsedGrpah={getDataBsedGrpah}\n          PMReview={PMReview}\n          setPMReview={setPMReview}\n          DMReview={DMReview}\n          setDMReview={setDMReview}\n          FMReview={FMReview}\n          setFMReview={setFMReview}\n          EMReview={EMReview}\n          isSQA={isSQA}\n          isDM={isDM}\n          setAddmsg={setAddmsg}\n          // addmsg={addmsg}\n          setValidationMessage={setValidationMessage}\n          // isAdmin={isAdmin}\n        />\n      ) : (\n        \"\"\n      )}\n    </div>\n  );\n}\n\nexport default FixedPriceOpen;\n"],"names":["FixedPriceOpenDataTable","props","GetData","linkId","projectInfoTab","firstTableData","setUpdatedata","formData","updateddata","setProjectinfoTab","setLoader","isMatchedId","isMatchedDMId","isMatchedFMId","setHidewholetables","getGraph","getDataBsedGrpah","setAddmsg","setValidationMessage","storegrpahname","resourceInfo","getResourceInfo","setResourceInfo","billDetailsCount","reviewerAction","headerData","useState","visibleA","setVisibleA","refreshResourceInfo","setRefreshResourceInfo","visibleB","setVisibleB","FaChevronCircleDown","cheveronIconB","setCheveronIconB","cheveronIconA","setCheveronIconA","baseUrl","environment","billingMonth1","billingMonth","lastDateOfMonth2","moment","endOf","format","loggedUserId","localStorage","getItem","dateStr","Date","toLocaleString","month","year","TotalProjectVal","totalProjectValue","setTotalProjectValue","RevenueAccuredtillDate","revenueAccured","setRevenueAccured","bal_amount","remainingBudget","setRemainingBudget","projectCompletion","setProjectCompletion","Billingamount","billingAmount","setBillingAmount","Billingaction","billingAction","setBillingAction","has_discount","selectaplydis","setSelectaplydis","discountType","selectdistype","setSelectdistype","discountAmount","discAmount","setDiscAmount","useEffect","sumOfBillAmounts","nodes","reduce","acc","node","parseFloat","billTotHours","finalBillRate","setNetBillingAmount","setNetBillingPercentage","setNodes","NetBiliingAmount","NetBillingAmount","NetBillingPercentage","filtersData","contains","value","matchMode","FilterMatchMode","global","filters1","setFilters1","globalFilterValue1","setGlobalFilterValue1","onGlobalFilterChange1","e","target","_filters1","header1","className","defaultValue","onChange","placeholder","style","textAlign","verticalAlign","tabledata","settabledata","wrk_Ot_Hours","rowData","type","id","name","billOtHours","title","newAllowExtraWkndHours","parsedBillTotHours","isNaN","newTotalAmount","updatedResourceInfo","map","element","toFixed","handleChange","disabled","onKeyPress","keyCode","which","keyValue","String","fromCharCode","test","preventDefault","final_Bill_Ratel","event","prev","billAmount","billTotHoursToFixed","align","wrkOtHourssFixed","wrkOtHours","bill_Amount","currencySymbol","currency","billAmountData","Comments","comments","rows","newComments","rowIndex","findIndex","std_Bill_Rate","stdBillRate","allocTypeNameTooltip","allocTypeName","roleNameTooltip","roleName","resourceTooltip","resource","alloc_Hours","allocHours","leave_Hours","leaveHours","wrk_Std_Hours","wrkStdHours","wrk_Apprv_Hours","wrkApprvHours","unbillHours","unBilledHours","axios","then","res","data","i","length","setTimeout","catch","error","console","log","ref","useRef","resourceHandleClick","FaChevronCircleUp","financeHandleClick","ReadMore","text","children","isReadMore","setIsReadMore","displayText","slice","htmlFor","dangerouslySetInnerHTML","__html","onClick","color","loaderRefresh","setLoaderRefersh","headerGroup","header","colSpan","field","rowSpan","body","headerGroup1","bosdy","width","bosy","method","url","billId","isActive","isAdmin","includes","billMon","isRefresh","isDirty","usrId","headers","PpmBillingTsDtl","Number","discount_amount","billingTsDtls","obj","Object","keys","forEach","ele","resourceId","billingTsId","projectRoleId","projectRoleRateId","allocType","billStdHours","parseInt","roleSite","values","every","index","undefined","push","float","textDecoration","cursor","fontSize","visible","Loader","paginator","showGridlines","headerColumnGroup","filters","list","current","position","minHeight","fin_comments","myFunctions","window","scrollTo","top","behavior","valid","GlobalValidation","status","hasDiscountType","projectId","billingScheduleId","billing_schedule_id","fromDate","toDate","billAction","bill_action","hasDiscount","net_billAmount","invoiceAmount","invoice_amount","createdOn","history","pctComplete","finComments","accAmount","balAmount","totPrjVal","customerId","billMonth","mgrIds","refreshDate","Save","FixedPriceOpenSecondTable","PMReview","DMReview","FMReview","projectInfo","initialValues","project_id","billing_amount","discount_type","allocFte","from_date","to_date","billing_month","billing_ts_id","prevProjectInfoTab","updatedProjectInfoTab","setIsMatchedId","isMatched","prgMgrId","split","toString","setIsMatchedDMId","isMatchedDM","review","deliveryMgrId","setIsMatchedFMId","some","item","role_type_id","backgroundColor","project","practiceName","planned_dates","is_billable","primary_manager","customer","contract_terms","FixedPriceOpenFirstTable","storeFirstTab","setStorefirstTab","visibleTable","firstTabledata","showtable","setVisibleTable","setFirstTableData","showSecTable","setShowSecTable","setPMReview","setDMReview","setFMReview","EMReview","isSQA","isDM","firstDateOfMonth","date","getFullYear","getMonth","startDate","BillingFirstDate","lastDateOfMonth","BillingLastDate","setLinkId","linkColumns","setLinkColumns","setLinkColumnsRoutes","setHeaderData","loader","lastDateOfMonth1","setProjectInfo","tsInfo","BillDtlCnt","getFirstTable","tsId","tsName","term","endDate","loggedId","billingPeriod","formattedStartDate","formattedEndDate","abortController","getProjectinfo","getProjectManagerID","getDeliveryManagerID","getFinanceManagerID","JSON","parse","stringify","linkColumn","customerName","linkIds","projectName","allocatedHrs","vacationHrs","actualHrs","otHrs","approvedHrs","actualBillHrs","otBillHrs","unbillHrs","netBillAmount","is_dirty","handleAbort","abort","setStartDate","BillingMonthdate","newyear","newmonth","newformattedDate","lastDayOfMonth","setFormData","setVisible","cheveronIcon","setCheveronIcon","setCustomer","addmsg","validationMessage","dataAccess","setDataAccess","setIsShow","graphData","setGraphData","setShowtable","setIsSQA","setFirstTabledata","setEMReview","routes","setRoutes","formattedDate","billMnth","userId","billingtslist","userLogged","getMenus","resp","display_name","TMExpensesSubMenu","find","subMenus","subMenu","accessLevel","userRoles","getCustomers","custom","setStoregrpahname","setIsDM","size","strokeWidth","ScreenBreadcrumbs","currentScreenName","GlobalHelp","pdfname","Item","selected","dateFormat","maxDate","showMonthYearPicker","pmReview","dmReview","dmRejected","finReview","finRejected","finAccepted"],"sourceRoot":""}