{"version":3,"file":"static/js/5443.c8119ade.chunk.js","mappings":"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","sources":["views/ProjectComponent/ProjectStatusPlannedActivities.js","views/ProjectComponent/ProjectStatusAccomplishments.js","views/Customer/SearchDefaultTableProject.js","views/Customer/ProjectStatusReport.js"],"sourcesContent":["import React from \"react\";\nimport { environment } from \"../../environments/environment\";\nimport \"./Project.scss\";\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { AiOutlineLeftSquare, AiOutlineRightSquare } from \"react-icons/ai\";\nimport { Column } from \"primereact/column\";\nimport moment from \"moment\";\nimport CellRendererPrimeReactDataTable from \"../PrimeReactTableComponent/CellRendererPrimeReactDataTable\";\n\nfunction StatusPlannedActivities(props) {\n  const { projectId } = props;\n  const [data, setData] = useState([{}]);\n  const [headerData, setHeaderData] = useState([]);\n  const [exportData, setExportData] = useState([]);\n  const baseUrl = environment.baseUrl;\n\n  ////////////////////////////Date-Filtering/////////////////////////////\n\n  const dates = {\n    fromDate: moment().startOf(\"week\").add(\"days\", 8).format(\"YYYY-MM-DD\"),\n    toDate: moment().startOf(\"week\").add(\"days\", 14).format(\"YYYY-MM-DD\"),\n  };\n  const [dt, setDt] = useState(dates);\n  console.log(dt.fromDate);\n  console.log(dt.toDate);\n\n  const addHandler = () => {\n    setDt((prev) => ({\n      ...prev,\n      [\"fromDate\"]: moment(dt.fromDate).add(\"days\", 7).format(\"YYYY-MM-DD\"),\n    }));\n\n    setDt((prev) => ({\n      ...prev,\n      [\"toDate\"]: moment(dt.fromDate).add(\"days\", 13).format(\"YYYY-MM-DD\"),\n    }));\n  };\n  console.log(dt.toDate);\n\n  const subtracHandler = () => {\n    setDt((prev) => ({\n      ...prev,\n      [\"fromDate\"]: moment(dt.fromDate)\n        .subtract(\"days\", 7)\n        .format(\"YYYY-MM-DD\"),\n    }));\n\n    setDt((prev) => ({\n      ...prev,\n      [\"toDate\"]: moment(dt.toDate).subtract(\"days\", 7).format(\"YYYY-MM-DD\"),\n    }));\n  };\n\n  console.log(dt.fromDate);\n  console.log(dt.toDate);\n  ////////////////////////////////////////////////////////////////////////\n  // const date = strtotime(dt.toDate);\n  // const Finaldate = strtotime(\"+7 day\", date);\n  // console.log(first)\n\n  ////////----------------------------Getting plannedactivities Data--------------------------////////\n\n  const getData = () => {\n    axios\n      .get(\n        baseUrl +\n          `/ProjectMS/project/getProjectDatePlannedActivities?pid=${projectId}&createdDate=${dt.fromDate}&modifiedDate=${dt.toDate}`\n      )\n      .then((res) => {\n        const GetData = res.data;\n        let headerData = [{ planned_activity: \"Planned Activity\" }];\n        let fData = [...headerData, ...GetData];\n        console.log(fData);\n        setData(fData);\n      })\n      .catch((error) => {});\n  };\n  useEffect(() => {\n    getData();\n  }, [dt]);\n\n  const RiskValueChange = (data) => (\n    <div className=\"ellipsis\" title={data.planned_activity}>\n      {data.planned_activity}\n    </div>\n  );\n\n  const dynamicColumns = Object.keys(headerData)?.map((col, i) => {\n    console.log(col);\n    return (\n      <Column\n        sortable\n        key={col}\n        body={col == \"planned_activity\" ? RiskValueChange : null}\n        field={col}\n        header={headerData[col]}\n      />\n    );\n  });\n\n  useEffect(() => {\n    data[0] && setHeaderData(JSON.parse(JSON.stringify(data[0])));\n  }, [data]);\n\n  ////////--------------------------Getting plannedactivities Data END------------------------////////\n\n  return (\n    <div>\n      <div>\n        <strong>\n          {moment(dt.fromDate).format(\"DD-MMM-YYYY\")} to{\" \"}\n          {moment(dt.toDate).format(\"DD-MMM-YYYY\")}\n        </strong>\n        <span style={{ float: \"right\" }}>\n          <AiOutlineLeftSquare\n            cursor=\"pointer\"\n            size={\"2em\"}\n            onClick={subtracHandler}\n          ></AiOutlineLeftSquare>\n          <AiOutlineRightSquare\n            cursor=\"pointer\"\n            size={\"2em\"}\n            onClick={addHandler}\n          ></AiOutlineRightSquare>\n        </span>\n      </div>\n      <br />\n\n      <CellRendererPrimeReactDataTable\n        rows={5}\n        data={data}\n        dynamicColumns={dynamicColumns}\n        headerData={headerData}\n        setHeaderData={setHeaderData}\n        exportData={exportData}\n      />\n    </div>\n  );\n}\nexport default StatusPlannedActivities;\n","import React from \"react\";\nimport { environment } from \"../../environments/environment\";\nimport \"./Project.scss\";\nimport { AiOutlineLeftSquare, AiOutlineRightSquare } from \"react-icons/ai\";\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Column } from \"primereact/column\";\nimport moment from \"moment\";\nimport CellRendererPrimeReactDataTable from \"../PrimeReactTableComponent/CellRendererPrimeReactDataTable\";\n\nfunction StatusAccomplishment(props) {\n  const { projectId } = props;\n  const [data, setData] = useState([{}]);\n  const [headerData, setHeaderData] = useState([]);\n  const [exportData, setExportData] = useState([]);\n  const baseUrl = environment.baseUrl;\n\n  ////////////////////////////Date-Filtering/////////////////////////////\n\n  const dates = {\n    fromDate: moment().startOf(\"week\").add(\"days\", 1).format(\"YYYY-MM-DD\"),\n    toDate: moment().startOf(\"week\").add(\"days\", 7).format(\"YYYY-MM-DD\"),\n  };\n  console.log(moment().format(\"YYYY-MM-DD\"));\n  const [dt, setDt] = useState(dates);\n\n  const addHandler = () => {\n    setDt((prev) => ({\n      ...prev,\n      [\"fromDate\"]: moment(dt.fromDate).add(\"days\", 7).format(\"YYYY-MM-DD\"),\n    }));\n\n    setDt((prev) => ({\n      ...prev,\n      [\"toDate\"]: moment(dt.toDate).add(\"days\", 7).format(\"YYYY-MM-DD\"),\n    }));\n  };\n\n  const subtracHandler = () => {\n    setDt((prev) => ({\n      ...prev,\n      [\"fromDate\"]: moment(dt.fromDate)\n        .subtract(\"days\", 7)\n        .format(\"YYYY-MM-DD\"),\n    }));\n\n    setDt((prev) => ({\n      ...prev,\n      [\"toDate\"]: moment(dt.toDate).subtract(\"days\", 7).format(\"YYYY-MM-DD\"),\n    }));\n  };\n  ////////////////////////////////////////////////////////////////////////\n\n  ////////----------------------------Getting Accomplishment Data--------------------------////////\n\n  const getData = () => {\n    axios\n      .get(\n        baseUrl +\n          `/ProjectMS/Accomplishments/getProjectDateAccomplishments?fromDate=${dt.fromDate}&toDate=${dt.toDate}&pid=${projectId}`\n      )\n      .then((res) => {\n        let headerData = [{ accomplishment: \"Accomplishments\" }];\n        const GetData = res.data;\n        // setData(headerData.concat(GetData));\n        let fData = [...headerData, ...GetData];\n        console.log(fData);\n        setData(fData);\n      })\n      .catch((error) => {});\n  };\n  useEffect(() => {\n    getData();\n  }, [dt]);\n\n  const RiskValueChange = (data) => (\n    <div className=\"ellipsis\" title={data.accomplishment}>\n      {data.accomplishment}\n    </div>\n  );\n\n  const dynamicColumns = Object.keys(headerData)?.map((col, i) => {\n    console.log(col);\n    return (\n      <Column\n        sortable\n        key={col}\n        body={col == \"accomplishment\" ? RiskValueChange : null}\n        field={col}\n        header={headerData[col]}\n      />\n    );\n  });\n\n  useEffect(() => {\n    data[0] && setHeaderData(JSON.parse(JSON.stringify(data[0])));\n  }, [data]);\n\n  ////////--------------------------Getting Accomplishment Data END------------------------////////\n\n  return (\n    <div>\n      <div>\n        <strong>\n          {moment(dt.fromDate).format(\"DD-MMM-YYYY\")} to{\" \"}\n          {moment(dt.toDate).format(\"DD-MMM-YYYY\")}\n        </strong>\n        <span style={{ float: \"right\" }}>\n          <AiOutlineLeftSquare\n            cursor=\"pointer\"\n            size={\"2em\"}\n            onClick={subtracHandler}\n          ></AiOutlineLeftSquare>\n          <AiOutlineRightSquare\n            cursor=\"pointer\"\n            size={\"2em\"}\n            onClick={addHandler}\n          ></AiOutlineRightSquare>\n        </span>\n      </div>\n      <br />\n\n      <CellRendererPrimeReactDataTable\n        rows={5}\n        data={data}\n        dynamicColumns={dynamicColumns}\n        headerData={headerData}\n        setHeaderData={setHeaderData}\n        exportData={exportData}\n      />\n    </div>\n  );\n}\nexport default StatusAccomplishment;\n","import React, { useState, useEffect } from \"react\";\nimport { RiFileExcel2Line } from \"react-icons/ri\";\nimport * as XLSX from \"xlsx\";\nimport { FilterMatchMode, FilterOperator } from \"primereact/api\";\nimport { InputText } from \"primereact/inputtext\";\nimport jsPDF from \"jspdf\";\nimport { CModal } from \"@coreui/react\";\nimport { makeStyles } from \"@material-ui/core\";\nimport { CModalBody } from \"@coreui/react\";\nimport { CModalHeader } from \"@coreui/react\";\n// import CellRendererPrimeReactDataTable from \"../PrimeReactTableComponent/CellRendererPrimeReactDataTable\";\nimport { CModalTitle } from \"@coreui/react\";\nimport { DataTable } from \"primereact/datatable\";\n// import { Column } from \"primereact/column\";\nimport { AiOutlineFileSearch } from \"react-icons/ai\";\nimport { Link } from \"react-router-dom\";\nimport { CCollapse, CListGroup } from \"@coreui/react\";\nimport FlatPrimeReactTable from \"../PrimeReactTableComponent/FlatPrimeReactTable\";\nimport { AiOutlineLeftSquare, AiOutlineRightSquare } from \"react-icons/ai\";\nimport { environment } from \"../../environments/environment\";\nimport { SlExclamation } from \"react-icons/sl\";\nimport Loader from \"../Loader/Loader\";\n// import StatusPlannedActivities from \"../ProjectComponent/StatusPlannedActivities\";\nimport ProjectStatusPlannedActivities from \"../ProjectComponent/ProjectStatusPlannedActivities\";\nimport ProjectStatusAccomplishments from \"../ProjectComponent/ProjectStatusAccomplishments\";\n// import StatusAccomplishment from \"../ProjectComponent/StatusAccomplishment\";\nimport { FaDownload, FaChevronCircleRight } from \"react-icons/fa\";\nimport axios from \"axios\";\n// import \"./Search.scss\";\nimport {\n  FaChevronCircleDown,\n  FaChevronCircleUp,\n  FaCaretDown,\n} from \"react-icons/fa\";\nimport ReactPaginate from \"react-paginate\";\nimport moment from \"moment/moment\";\nimport { Column } from \"primereact/column\";\n// import ProjectStatusCellRenderTable from \"./ProjectStatusCellRenderTable\";\n// import CellRendererPrimeReactDataTable from \"../PrimeReactTableComponent/CellRendererPrimeReactDataTable\";\nfunction SearchDefaultTable(props) {\n  const {\n    data,\n    SetData,\n    pid,\n    deptarr,\n    deleteid,\n    setDeleteId,\n    checkboxSelect,\n    setCheckboxSelect,\n    handleClick,\n    searchapidata,\n    displayState,\n    setDisplayState,\n    linkColumns,\n    linkColumnsRoutes,\n  } = props;\n  const baseUrl = environment.baseUrl;\n\n  const [mainData, setMainData] = useState([]);\n  const [exportColumns, setExportColumns] = useState([]);\n  useEffect(() => {\n    setMainData(JSON.parse(JSON.stringify(data)));\n  }, [data]);\n  useEffect(() => {\n    if (data.length > 0) {\n      setHeaderData(data[0]);\n      // setHeaderData(data.splice(1));\n\n      let dtt = [];\n      let headDt = data[0];\n\n      Object.keys(headDt).forEach((d) => {\n        d != \"StatusId\" &&\n          // ? dtt.push({ title: \"cus\", dataKey: d })\n          dtt.push({ title: headDt[d], dataKey: d });\n      });\n\n      setExportColumns(dtt);\n    }\n  }, [data]);\n\n  const [filterVal, setFilterVal] = useState(\"\");\n  const rows = 25;\n  const [open, setOpen] = useState(false);\n  const [displayTable, setDisplayTable] = useState(null);\n  const [order, setOrder] = useState(\"ASC\");\n  const [getData, setGetData] = useState(10);\n  const [currentItem, setCurrentItem] = useState(0);\n  const [pageCount, setpageCount] = useState(1);\n  const [itemOffSet, setItemOffSet] = useState(0);\n  const [diaplayStateView, setDisplayStateView] = useState([]);\n  const itemPerPage = getData;\n  const [link, setLink] = useState([]);\n  const [display, setDisplay] = useState(false);\n  const id = \"12\";\n  const [projectId, setPRojectId] = useState();\n  // const projectId = data.id;\n  const [visibleA, setVisibleA] = useState(true);\n  const [visibleB, setVisibleB] = useState(true);\n  const [cheveronIconB, setCheveronIconB] = useState(FaChevronCircleDown);\n  const [visibleD, setVisibleD] = useState(true);\n  const [cheveronIconD, setCheveronIconD] = useState(FaChevronCircleDown);\n  const [cheveronIconA, setCheveronIconA] = useState(FaChevronCircleDown);\n  const [visibleC, setVisibleC] = useState(true);\n  const [cheveronIconC, setCheveronIconC] = useState(FaChevronCircleDown);\n  const [visibleE, setVisibleE] = useState(true);\n  const [cheveronIconE, setCheveronIconE] = useState(FaChevronCircleDown);\n  const [visibleF, setVisibleF] = useState(true);\n  const [cheveronIconF, setCheveronIconF] = useState(FaChevronCircleDown);\n  const [finalRow, setFinalRow] = useState(itemPerPage);\n  const [dataRisks, setDataRisks] = useState([]);\n  var nf = new Intl.NumberFormat();\n  const [pdfData, setPdfData] = useState([]);\n  const handleChange = (e) => {\n    setCheckboxSelect(e.value);\n  };\n  const [dataAccomplish, setDataAccomplish] = useState([]);\n  const [dataActivities, setDataActivities] = useState([]);\n  const [dataIssues, setDataIssues] = useState([]);\n  const [dataDependency, setDataDependency] = useState([]);\n  const [dataScope, setDataScope] = useState([]);\n  const [dataEvent, setDataEvent] = useState([]);\n  const [dataKpi, setDataKpi] = useState([]);\n  const totalRows = data.length;\n\n  const Firstrow = itemOffSet + 1;\n  const [datainfo, setDatainfo] = useState([]);\n  const [headerData, setHeaderData] = useState([]);\n  const dates = {\n    fromDate: moment().format(\"YYYY-MM-DD\"),\n    toDate: moment().add(\"days\", 6).format(\"YYYY-MM-DD\"),\n  };\n\n  const [key, setKey] = useState(\"\");\n  useEffect(() => {\n    setKey(projectId ? projectId : \"\");\n  }, [projectId]);\n\n  const [key1, setKey1] = useState(\"\");\n  useEffect(() => {\n    setKey1(projectId ? projectId : \"\");\n  }, [projectId]);\n\n  const datesPlaned = {\n    fromDatePlan: moment().startOf(\"week\").add(\"days\", 8).format(\"YYYY-MM-DD\"),\n    toDatePlan: moment().startOf(\"week\").add(\"days\", 14).format(\"YYYY-MM-DD\"),\n  };\n  const [dt, setDt] = useState(dates);\n  const [dtP, setDtP] = useState(datesPlaned);\n  const viewHandler = (id) => {\n    setPRojectId(id);\n  };\n  const [globalFilterValue, setGlobalFilterValue] = useState(\"\");\n  const [filters, setFilters] = useState({\n    global: { value: null, matchMode: FilterMatchMode.CONTAINS },\n  });\n  const onGlobalFilterChange = (e) => {\n    const value = e.target.value;\n    let _filters = { ...filters };\n\n    _filters[\"global\"].value = value;\n\n    setFilters(_filters);\n    setGlobalFilterValue(value);\n  };\n  const renderHeader = () => {\n    return (\n      <div className=\"flex justify-content-end\">\n        <span className=\"p-input-icon-left\">\n          <i className=\"pi pi-search\" />\n          <InputText\n            value={globalFilterValue}\n            onChange={onGlobalFilterChange}\n            placeholder=\"Keyword Search\"\n          />\n        </span>\n      </div>\n    );\n  };\n  const header = renderHeader();\n  useEffect(() => {\n    getDetailsInfo();\n    getDataRisks();\n    // getDataActivities();\n    getDataIssues();\n    getDataDependency();\n    getDataScope();\n    getDataEvents();\n    getDataKpi();\n    // getDataAccomplishments();\n  }, [projectId]);\n\n  const getDetailsInfo = (props) => {\n    // axios.get(`/ProjectMS/project/projectinfo?ProjectId=${1826476}`)\n    setDisplayStateView(true);\n    axios({\n      method: \"get\",\n      url: baseUrl + `/ProjectMS/project/projectinfo?ProjectId=${projectId}`,\n    })\n      .then((res) => {\n        const GetData = res.data;\n        data.length > 0 && setDatainfo(GetData);\n        setDisplayState(true);\n        setDisplayStateView(false);\n        // setLoader(true)\n        // setTimeout(() => {\n        //     setLoader(false)\n        // }, 100);\n      })\n      .catch((error) => {});\n  };\n\n  require(\"jspdf-autotable\");\n\n  const exportPdf = () => {\n    if (checkboxSelect && checkboxSelect.length > 0) {\n      print();\n    } else {\n      // Add your validation or error handling logic here\n      setOpen(true);\n    }\n    // print();\n  };\n\n  const print = () => {\n    const pdf = new jsPDF(\"p\", \"pt\", \"a4\");\n    // Name\n    // Manager\n    // Bussiness Unit\n    // Customer\n    // Delivery Manager\n    // Billing Model\n    // Project Type\n    // Exec Meth\n    // Pln St Date\n    // Pln End date\n    // Status\n    // Team Size\n    const columns = [\n      { header: \"Name\", dataKey: \"project_name\" },\n      { header: \"Manager\", dataKey: \"prj_manager\" },\n      { header: \"Bussiness Unit\", dataKey: \"business_unit\" },\n      { header: \"Delivery Manager\", dataKey: \"del_manager\" },\n      { header: \"Billing Model\", dataKey: \"ct_title\" },\n      { header: \"Project Type\", dataKey: \"category\" },\n      { header: \"Exec Meth\", dataKey: \"prj_exe\" },\n      { header: \"Pln St Date\", dataKey: \"planned_start_dt\" },\n      { header: \"Pln End date\", dataKey: \"pln_end_dt\" },\n      { header: \"Status\", dataKey: \"prj_status\" },\n      { header: \"Team Size\", dataKey: \"team_size\" },\n      // { header: \"\", dataKey: \"category\" },\n\n      // { header: \"Category\", dataKey: \"category\" },\n      // { header: \"Project Stage\", dataKey: \"prj_stage\" },\n      // { header: \"Team Size\", dataKey: \"team_size\" },\n      // Add more column definitions as needed\n    ];\n\n    let rows = checkboxSelect.map((d) => {\n      return {\n        project_name: d.project_name,\n        prj_manager: d.prj_manager,\n        business_unit: d.business_unit,\n        del_manager: d.del_manager,\n        ct_title: d.ct_title,\n        category: d.category,\n        prj_exe: d.prj_exe,\n        planned_start_dt: d.planned_start_dt,\n        pln_end_dt: d.pln_end_dt,\n        prj_status: d.prj_status,\n        team_size: d.team_size,\n\n        // Add more data keys as needed\n      };\n    });\n\n    const columnWidths = [\n      30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30,\n    ]; // Set the widths of the columns here\n\n    pdf.text(235, 40, \"Project Status Report\");\n    pdf.autoTable(columns, rows, {\n      startY: 65,\n      theme: \"grid\",\n      styles: {\n        // Styles configuration\n      },\n      headStyles: {\n        // Header styles configuration\n      },\n      alternateRowStyles: {\n        // Alternate row styles configuration\n      },\n      rowStyles: {\n        // Row styles configuration\n      },\n      tableLineColor: [0, 0, 0],\n      columnStyles: {\n        // Column styles configuration\n      },\n    });\n\n    pdf.save(\"Project Status Report\");\n  };\n\n  const getDataRisks = () => {\n    setDisplayStateView(true);\n\n    // axios.get(`/ProjectMS/project/risks?pid=${1826476}`)\n    axios({\n      method: \"get\",\n      url: baseUrl + `/ProjectMS/project/risks?pid=${projectId}`,\n    })\n      .then((res) => {\n        const GetData = res.data;\n        let headerData = [\n          {\n            riskName: \"Risk Name\",\n            riskType: \"Risk Type\",\n            riskSource: \"Risk Source\",\n            riskImpact: \"Risk Impact\",\n            probabOcc: \"Probability of Occurrence\",\n            riskValue: \"Risk Value\",\n            assignedTo: \"Assigned To\",\n            riskOccurred: \"Risk Occurred\",\n            riskStatus: \"Risk Status\",\n            occuredDate: \"Occurred Date\",\n            createdBy: \"Created By\",\n          },\n        ];\n        setDataRisks(headerData.concat(GetData));\n        setDisplayStateView(false);\n      })\n      .catch((error) => {});\n  };\n\n  const getDataIssues = () => {\n    // axios.get(`/ProjectMS/project/issue?pid=1826476`)\n    setDisplayStateView(true);\n\n    axios({\n      method: \"get\",\n      url: baseUrl + `/ProjectMS/project/issue?pid=${projectId}`,\n    })\n      .then((res) => {\n        let headerData = [\n          {\n            issueName: \"Issue Name\",\n            criticality: \"Criticality\",\n            status: \"Status\",\n            dueDate: \"Due Date\",\n            issueSource: \"Issue Source\",\n            assignedTo: \"Assigned To\",\n            rcaDone: \"RCA Done\",\n            createdBy: \"Created By\",\n            comments: \"Comments\",\n          },\n        ];\n        const GetData = res.data;\n        setDataIssues(headerData.concat(GetData));\n        setDisplayStateView(false);\n      })\n      .catch((error) => {});\n  };\n\n  const getDataDependency = () => {\n    // axios.get(`/ProjectMS/project/dependency?pid=${1826476}`)\n    setDisplayStateView(true);\n\n    axios({\n      method: \"get\",\n      url: baseUrl + `/ProjectMS/project/dependency?pid=${projectId}`,\n    })\n      .then((res) => {\n        let headerData = [\n          {\n            dependency: \"Dependency / Constraints\",\n            type: \"Type\",\n            priority: \"Priority\",\n            raisedBy: \"Raised By\",\n            raisedDate: \"Raised Date\",\n            targetDate: \"Target Date\",\n            assignedTo: \"Assigned To\",\n            phaseAffected: \"Phase / Area affected\",\n            Status: \"Status\",\n          },\n        ];\n        const GetData = res.data;\n        setDataDependency(headerData.concat(GetData));\n        setDisplayStateView(false);\n      })\n      .catch((error) => {});\n  };\n\n  const getDataScope = () => {\n    // axios.get( `/ProjectMS/project/scopechanges?pid=${1826476}`)\n    setDisplayStateView(true);\n\n    axios({\n      method: \"get\",\n      url: baseUrl + `/ProjectMS/project/scopechanges?pid=${projectId}`,\n    })\n      .then((res) => {\n        let headerData = [\n          {\n            description: \"Description of Change\",\n            change_req_date: \"Change Requested Date\",\n            financial_impact: \"Financial Impact\",\n          },\n        ];\n        const GetData = res.data;\n\n        setDataScope(headerData.concat(GetData));\n        setDisplayStateView(false);\n      })\n      .catch((error) => {});\n  };\n\n  const getDataEvents = () => {\n    setDisplayStateView(true);\n\n    // axios.get(`/ProjectMS/project/events?pid=${1826476}`)\n    axios({\n      method: \"get\",\n      url: baseUrl + `/ProjectMS/project/events?pid=${projectId}`,\n    })\n      .then((res) => {\n        let headerData = [\n          { event: \"Events\", date: \"Date\", comments: \"Comments\" },\n        ];\n        const GetData = res.data;\n        setDataEvent(headerData.concat(GetData));\n        setDisplayStateView(false);\n      })\n      .catch((error) => {});\n  };\n\n  useEffect(() => {\n    data[0] && setHeaderData(JSON.parse(JSON.stringify(data[0])));\n  }, [data]);\n\n  useEffect(() => {}, [data.id]);\n  const ProjectStatusReportDetailsss = () => {};\n\n  const LinkTemplate = (data) => {\n    // let rou = linkColumnsRoutes[0]?.split(\":\");\n    return (\n      <>\n        {/* <Link target=\"_blank\" to={rou[0] + \":\" + data[rou[1]]}>\n          {data[linkColumns[0]]}\n        </Link> */}\n        <div style={{ marginLeft: \"15%\" }}>\n          <button\n            className=\"btn btn-primary\"\n            //   onClick = (data) => {}\n            // onClick={ getDetailsInfo}\n            onClick={() => {\n              setDisplayState(true);\n              viewHandler(data.id);\n              setVisibleA(true);\n              setVisibleC(true);\n              setVisibleD(true);\n              setVisibleE(true);\n              setVisibleF(true);\n              setVisibleB(true);\n\n              setDisplay(true);\n              // setDt(\"\");\n              // setPRojectId(deleteid);\n              // setDeleteId();\n            }}\n          >\n            View\n          </button>\n        </div>\n        {/* </div> */}\n      </>\n    );\n  };\n\n  const LinkTemplateAction = (data) => {\n    // let rou = linkColumnsRoutes[1]?.split(\":\");\n    return (\n      <>\n        <div style={{ textAlign: \"center\" }}>\n          <input type=\"checkbox\"></input>\n        </div>\n      </>\n    );\n  };\n  const LinkTemplateCheck = (data) => {\n    return (\n      <>\n        {/* <div> */}\n        {data.prj_health === \"On Schedule\" ? (\n          <div align=\"center\" style={{ marginLeft: \"45%\" }}>\n            <div className=\"legendContainer\" align=\"center\">\n              <div className=\"legend  green\" title=\"on Schedule\">\n                <div className=\"legendCircle\"></div>\n                <div className=\"legendTxt\"></div>\n              </div>\n            </div>\n          </div>\n        ) : data.prj_health == \"Serious Issues\" ? (\n          <div\n            className=\"legendContainer\"\n            align=\"center\"\n            style={{ marginLeft: \"45%\" }}\n          >\n            <div className=\"legend red\">\n              <div className=\"legendCircle\" title=\"Serious Issues\"></div>\n              <div className=\"legendTxt\"></div>\n            </div>\n          </div>\n        ) : data.prj_health === null ? (\n          <div\n            className=\"legendContainer\"\n            align=\"center\"\n            style={{ marginLeft: \"45%\" }}\n          >\n            <div className=\"legend black\">\n              <div className=\"legendCircle\" title=\"No Health Info\"></div>\n              <div className=\"legendTxt\"></div>\n            </div>\n          </div>\n        ) : (\n          data.prj_health === \"Potential Issues\" && (\n            <div\n              className=\"legendContainer\"\n              align=\"center\"\n              style={{ marginLeft: \"45%\" }}\n            >\n              <div className=\"legend amber\">\n                <div className=\"legendCircle\" title=\"Potential Issues\"></div>\n                <div className=\"legendTxt\"></div>\n              </div>\n            </div>\n          )\n        )}\n      </>\n    );\n  };\n\n  const LinkTemplateLink = (data) => {\n    let rou = linkColumnsRoutes[0]?.split(\":\");\n\n    setLink(data.id);\n    link;\n    return (\n      <>\n        <Link\n          title={data.project_name}\n          to={`/project/Overview/:${data.id}`}\n          target=\"_blank\"\n        >\n          {data.project_name}\n        </Link>\n      </>\n    );\n  };\n  const LinkTemplateManager = (data) => {\n    return <span title={data.prj_manager}>{data.prj_manager}</span>;\n  };\n  const LinkTemplateBu = (data) => {\n    return <span title={data.business_unit}>{data.business_unit}</span>;\n  };\n  const LinkTemplateCus = (data) => {\n    return <span title={data.customer}>{data.customer}</span>;\n  };\n  const LinkTemplateMg = (data) => {\n    return <span title={data.del_manager}>{data.del_manager}</span>;\n  };\n  const LinkBillingPtype = (data) => {\n    return <span title={data.category}>{data.category}</span>;\n  };\n  const LinkBillingMeth = (data) => {\n    return <span title={data.prj_exe}>{data.prj_exe}</span>;\n  };\n  const LinkBillingStdate = (data) => {\n    return <span title={data.planned_start_dt}> {data.planned_start_dt}</span>;\n  };\n  const EndDateStatus = (data) => {\n    return <span title={data.prj_status}>{data.prj_status}</span>;\n  };\n  const LinkBillingModel = (data) => {\n    return (\n      <div title={data.ct_title} tyle={{ textAlign: \"center\" }}>\n        {data.ct_title}\n      </div>\n    );\n  };\n  const LinkTeamSize = (data) => {\n    return (\n      <div title={data.team_size} style={{ textAlign: \"right\" }}>\n        {data.team_size}\n      </div>\n    );\n  };\n  const EndDate = (data) => {\n    return (\n      <div title={data.planned_end_dt} style={{ textAlign: \"right\" }}>\n        {data.planned_end_dt}\n      </div>\n    );\n  };\n  const Manager = (data) => {\n    return <div title={data.prj_manager}>{data.prj_manager}</div>;\n  };\n  const dynamicColumns = Object.keys(headerData)?.map((col, i) => {\n    return (\n      <Column\n        sortable\n        key={col}\n        body={\n          col == \"Analytics\"\n            ? LinkTemplate\n            : col == \"checkbox\"\n            ? LinkTemplateAction\n            : col == \"project_name\"\n            ? LinkTemplateLink\n            : col == \"prj_health\"\n            ? LinkTemplateCheck\n            : col == \"ct_title\"\n            ? LinkBillingModel\n            : col == \"team_size\"\n            ? LinkTeamSize\n            : col == \"pln_end_dt\"\n            ? EndDate\n            : col == \"prj_manager\" && Manager\n        }\n        field={col}\n        header={headerData[col]}\n      />\n    );\n  });\n\n  const addHandler = () => {\n    setDt((prev) => ({\n      ...prev,\n      [\"fromDate\"]: moment(dt.fromDate).add(\"days\", 8).format(\"YYYY-MM-DD\"),\n    }));\n\n    setDt((prev) => ({\n      ...prev,\n      [\"toDate\"]: moment(dt.toDate).add(\"days\", 8).format(\"YYYY-MM-DD\"),\n    }));\n  };\n\n  const subtracHandler = () => {\n    setDt((prev) => ({\n      ...prev,\n      [\"fromDate\"]: moment(dt.fromDate)\n        .subtract(\"days\", 7)\n        .format(\"YYYY-MM-DD\"),\n    }));\n\n    setDt((prev) => ({\n      ...prev,\n      [\"toDate\"]: moment(dt.toDate).subtract(\"days\", 7).format(\"YYYY-MM-DD\"),\n    }));\n  };\n\n  const addHandlerPlan = () => {\n    setDtP((prev) => ({\n      ...prev,\n      [\"fromDatePlan\"]: moment(dtP.fromDatePlan)\n        .add(\"days\", 8)\n        .format(\"YYYY-MM-DD\"),\n    }));\n\n    setDtP((prev) => ({\n      ...prev,\n      [\"toDatePlan\"]: moment(dtP.fromDatePlan)\n        .add(\"days\", 8)\n        .format(\"YYYY-MM-DD\"),\n    }));\n  };\n\n  const subtracHandlerPlan = () => {\n    setDtP((prev) => ({\n      ...prev,\n      [\"fromDatePlan\"]: moment(dtP.fromDatePlan)\n        .subtract(\"days\", 8)\n        .format(\"YYYY-MM-DD\"),\n    }));\n\n    setDtP((prev) => ({\n      ...prev,\n      [\"toDatePlan\"]: moment(dtP.toDatePlan)\n        .subtract(\"days\", 8)\n        .format(\"YYYY-MM-DD\"),\n    }));\n  };\n\n  const getDataKpi = () => {\n    setDisplayStateView(true);\n\n    // axios.get(`/ProjectMS/project/kpidata?ProjectId=${1826476}&fromDate=01-Feb-2017&toDate=31-Dec-2018`)\n    axios({\n      method: \"get\",\n      url:\n        baseUrl +\n        `/ProjectMS/project/kpidata?ProjectId=${projectId}&fromDate=2009-02-01&toDate=2024-12-31`,\n    })\n      .then((res) => {\n        const GetData = res.data;\n\n        setDataKpi(GetData);\n        setDisplayStateView(false);\n\n        setTimeout(() => {\n          //    setLoader(false)\n        }, 100);\n      })\n      .catch((error) => {});\n  };\n\n  // Assuming the data is stored in an array called 'data'\n  const updatedData = data.filter((item, index) => index !== 0);\n\n  // 'updatedData' will contain the data with the element at index 0 removed\n\n  function PdfPopup({ open, setOpen }) {\n    return (\n      <div className=\"reviewLogDeletePopUp\">\n        <CModal\n          size=\"sm\"\n          visible={open}\n          // className=\"reviewLogDeletePopUp\"\n          onClose={() => setOpen(false)}\n        >\n          <CModalHeader className=\"\">\n            <CModalTitle>\n              {/* <span className=\"\">Save Targets</span> */}\n            </CModalTitle>\n          </CModalHeader>\n          <CModalBody>\n            Please select atleast one project\n            <div className=\"row\" style={{ marginTop: \"10px\" }}>\n              <button\n                style={{ marginLeft: \"95px\" }}\n                type=\"Ok\"\n                className=\"btn btn-primary col-2\"\n                onClick={() => {\n                  setOpen(false);\n                }}\n              >\n                {/* <i className=\"fa fa-plus\" aria-hidden=\"true\"></i> */}\n                <span style={{ paddingLeft: \"6px\" }}>Ok</span>\n              </button>\n            </div>\n          </CModalBody>\n        </CModal>\n        {/* </Draggable> */}\n      </div>\n    );\n  }\n\n  return (\n    <div>\n      <div className=\"legendContainer\">\n        <span className=\"font-weight-bold\">Project Health : </span>\n\n        <div className=\"legend green\">\n          <div className=\"legendCircle \"></div>\n          <div className=\"legendTxt\">On Schedule</div>\n        </div>\n        <div className=\"legend amber\">\n          <div className=\"legendCircle center\"></div>\n          <div className=\"legendTxt\">Potential Issues </div>\n        </div>\n        <div className=\"legend red\">\n          <div className=\"legendCircle \"></div>\n          <div className=\"legendTxt\">Serious Issues </div>\n        </div>\n        <div className=\"legend black\">\n          <div className=\"legendCircle \"></div>\n          <div className=\"legendTxt\">No Health Info </div>\n        </div>\n      </div>\n      <div>\n        <div></div>\n        <button\n          className=\"btn btn-primary\"\n          style={{ marginLeft: \"88%\", marginBottom: \"0.5%\" }}\n          onClick={exportPdf}\n        >\n          <FaDownload />\n          Download as PDF\n        </button>\n        <div className=\"group mb-3 customCard projectStatusReport\">\n          {/* <CellRendererPrimeReactDataTable\n            data={updatedData}\n            rows={rows}\n            dynamicColumns={dynamicColumns}\n            headerData={headerData}\n            setHeaderData={setHeaderData}\n          /> */}\n\n          <DataTable\n            className=\"darkHeader\" /////customerEngament\n            currentPageReportTemplate=\"{first} to {last} of {totalRecords}\"\n            value={updatedData}\n            paginator\n            selection={checkboxSelect}\n            filters={filters}\n            rows={25}\n            rowsPerPageOptions={[5, 10, 25, 50]}\n            // tableStyle={{ minWidth: \"50rem\" }}\n            selectAll={true}\n            // rows={10}\n            showGridlines\n            pagination\n            paginationPerPage={5}\n            header={header}\n            paginationRowsPerPageOptions={[5, 15, 25, 50]}\n            paginationComponentOptions={{\n              rowsPerPageText: \"Records per page:\",\n              rangeSeparatorText: \"out of\",\n            }}\n            responsiveLayout=\"scroll\"\n            onSelectionChange={(e) => handleChange(e)}\n          >\n            <Column\n              // selectionMode=\"multiple\"\n              alignHeader={\"center\"}\n              style={{ textAlign: \"center\" }}\n              selectionMode={data?.length > 0 ? \"multiple\" : \"\"}\n            />\n            <Column\n              field=\"Analytics\"\n              header=\" Analytics\"\n              body={LinkTemplate}\n              alignHeader={\"center\"}\n              sortable\n            ></Column>\n            <Column\n              field=\"Health\"\n              header=\" Health\"\n              body={LinkTemplateCheck}\n              alignHeader={\"center\"}\n              sortable\n            ></Column>\n            <Column\n              field=\"Name\"\n              header=\" Name\"\n              body={LinkTemplateLink}\n              alignHeader={\"center\"}\n              sortable\n            ></Column>\n            <Column\n              field=\"prj_manager\"\n              header=\" Manager\"\n              body={LinkTemplateManager}\n              alignHeader={\"center\"}\n              sortable\n            ></Column>\n            <Column\n              field=\"Bussiness Unit\"\n              header=\" Bussiness Unit\"\n              body={LinkTemplateBu}\n              alignHeader={\"center\"}\n              sortable\n            ></Column>\n            <Column\n              field=\"Customer\"\n              header=\" Customer\"\n              body={LinkTemplateCus}\n              alignHeader={\"center\"}\n              sortable\n            ></Column>\n            <Column\n              field=\"Delivery Manager\"\n              header=\" Delivery Manager\"\n              body={LinkTemplateMg}\n              alignHeader={\"center\"}\n              sortable\n            ></Column>\n            <Column\n              field=\"Billing Model\"\n              header=\" Billing Model\"\n              body={LinkBillingModel}\n              alignHeader={\"center\"}\n              sortable\n            ></Column>\n            <Column\n              field=\"Project Type\"\n              header=\" Project Type\"\n              body={LinkBillingPtype}\n              alignHeader={\"center\"}\n              sortable\n            ></Column>\n            <Column\n              field=\"Exec Meth\"\n              header=\" Exec Meth\"\n              body={LinkBillingMeth}\n              alignHeader={\"center\"}\n              sortable\n            ></Column>\n            <Column\n              field=\"Pln St Date\"\n              header=\" Pln St Date\"\n              body={LinkBillingStdate}\n              alignHeader={\"center\"}\n              sortable\n            ></Column>\n            <Column\n              field=\"End date\"\n              header=\" Pln End date\"\n              body={EndDate}\n              alignHeader={\"center\"}\n              style={{ textAlign: \"left\" }}\n              sortable\n            ></Column>\n            <Column\n              field=\"Status\"\n              header=\" Status\"\n              body={EndDateStatus}\n              alignHeader={\"center\"}\n              style={{ textAlign: \"left\" }}\n              sortable\n            ></Column>\n            <Column\n              // field=\"Team Size\"\n              header=\" Team Size\"\n              body={LinkTeamSize}\n              alignHeader={\"center\"}\n              sortable\n            ></Column>\n          </DataTable>\n        </div>\n        <div>\n          {displayState ? (\n            <div>\n              <div>\n                {datainfo.map((item) => (\n                  <div\n                    style={{ textAlign: \"center\", backgroundColor: \"#eeeeee\" }}\n                  >\n                    <span\n                      style={{\n                        color: \"#2e88c5\",\n                        fontSize: \"13px\",\n                        fontWeight: \"bold\",\n                      }}\n                    >\n                      {\" \"}\n                      {item.project_name}\n                    </span>\n                  </div>\n                ))}\n                {datainfo.map((item) => (\n                  <div>\n                    <div className=\"projGlance\">\n                      <div className=\"row mx-2\">\n                        <div className=\"col-md-3\">\n                          <div className=\"form-group\">\n                            <div className=\"row\">\n                              <label className=\"col-5  no-padding\">\n                                Project Name\n                              </label>\n                              <span className=\"col-1 p0\">:</span>\n                              <span className=\"col-5 \" id=\"pname\">\n                                {item.project_name}\n                              </span>\n                            </div>\n                          </div>\n                        </div>\n                        <div className=\"col-md-3\">\n                          <div className=\"form-group\">\n                            <div className=\"row\">\n                              <label className=\"col-5  no-padding\">\n                                Business Unit\n                              </label>\n                              <span className=\"col-1 p0\">:</span>\n                              <span className=\"col-5 \" id=\"bunit\">\n                                {item.business_unit}\n                              </span>\n                            </div>\n                          </div>\n                        </div>\n                        <div className=\"col-md-3\">\n                          <div className=\"form-group\">\n                            <div className=\"row\">\n                              <label className=\"col-5  no-padding\">\n                                Customer\n                              </label>\n                              <span className=\"col-1  p0\">:</span>\n                              <span className=\"col-5 \" id=\"cmer\">\n                                {item.customer}\n                              </span>\n                            </div>\n                          </div>\n                        </div>\n                        <div className=\"col-md-3\">\n                          <div className=\"form-group\">\n                            <div className=\"row\">\n                              <label className=\"col-5  no-padding\">\n                                Sub Practice\n                              </label>\n                              <span className=\"col-1 p0\">:</span>\n                              <span className=\"col-5 \" id=\"spractice\">\n                                {item.sub_practice}\n                              </span>\n                            </div>\n                          </div>\n                        </div>\n                        <div className=\"col-md-3\">\n                          <div className=\"form-group\">\n                            <div className=\"row\">\n                              <label className=\"col-5  no-padding\">\n                                Architect\n                              </label>\n                              <span className=\"col-1 p0\">:</span>\n                              <span className=\"col-5 \" id=\"troles\">\n                                {item.role}\n                              </span>\n                            </div>\n                          </div>\n                        </div>\n                        <div className=\"col-md-3\">\n                          <div className=\"form-group\">\n                            <div className=\"row\">\n                              <label className=\"col-5  no-padding\">\n                                Project Manager\n                              </label>\n                              <span className=\"col-1 p0\">:</span>\n                              <span className=\"col-5\" id=\"prjManager\">\n                                {item.prj_manager}\n                              </span>\n                            </div>\n                          </div>\n                        </div>\n                        <div className=\"col-md-3\">\n                          <div className=\"form-group\">\n                            <div className=\"row\">\n                              <label className=\"col-5 no-padding\">\n                                Delivery Manager\n                              </label>\n                              <span className=\"col-1 p0\">:</span>\n                              <span className=\"col-5\" id=\"delManager\">\n                                {item.del_manager}\n                              </span>\n                            </div>\n                          </div>\n                        </div>\n                        <div className=\"col-md-3\">\n                          <div className=\"form-group\">\n                            <div className=\"row\">\n                              <label className=\"col-5  no-padding\">\n                                Unit Head\n                              </label>\n                              <span className=\"col-1 p0\">:</span>\n                              <span className=\"col-5\" id=\"uhead\">\n                                {}\n                              </span>\n                            </div>\n                          </div>\n                        </div>\n                        <div className=\"col-md-3\">\n                          <div className=\"form-group\">\n                            <div className=\"row\">\n                              <label className=\"col-5  no-padding\">\n                                Current Phase\n                              </label>\n                              <span className=\"col-1 p0\">:</span>\n                              <span className=\"col-5 \" id=\"currPhase\">\n                                {item.curr_phase}\n                              </span>\n                            </div>\n                          </div>\n                        </div>\n                        <div className=\"col-md-3\">\n                          <div className=\"form-group\">\n                            <div className=\"row\">\n                              <label className=\"col-5  no-padding\">\n                                Billing Model\n                              </label>\n                              <span className=\"col-1 p0\">:</span>\n                              <span className=\"col-5 \" id=\"bilModel\">\n                                {item.cont_terms}\n                              </span>\n                            </div>\n                          </div>\n                        </div>\n                        <div className=\"col-md-3\">\n                          <div className=\"form-group\">\n                            <div className=\"row\">\n                              <label className=\"col-5  no-padding\">\n                                Project Type\n                              </label>\n                              <span className=\"col-1 p0\">:</span>\n                              <span className=\"col-5 \" id=\"pType\">\n                                {item.category}\n                              </span>\n                            </div>\n                          </div>\n                        </div>\n                        <div className=\"col-md-3\">\n                          <div className=\"form-group\">\n                            <div className=\"row\">\n                              <label className=\"col-5  no-padding\">\n                                Execution Methodology\n                              </label>\n                              <span className=\"col-1 p0\">:</span>\n                              <span className=\"col-5 \" id=\"emethods\">\n                                {item.prj_exe}\n                              </span>\n                            </div>\n                          </div>\n                        </div>\n                        <div className=\"col-md-3\">\n                          <div className=\"form-group\">\n                            <div className=\"row\">\n                              <label className=\"col-5  no-padding\">\n                                Start Date\n                              </label>\n                              <span className=\"col-1 p0\">:</span>\n                              <span className=\"col-5 \" id=\"sDate\">\n                                {item.planned_start_dt}\n                              </span>\n                            </div>\n                          </div>\n                        </div>\n                        <div className=\"col-md-3\">\n                          <div className=\"form-group\">\n                            <div className=\"row\">\n                              <label className=\"col-5  no-padding\">\n                                End Date- Contracted\n                              </label>\n                              <span className=\"col-1 p0\">:</span>\n                              <span className=\"col-5 \" id=\"eDate\">\n                                {/* {item.planned_end_dt} */}\n                                {moment(item.planned_end_dt).format(\n                                  \"DD-MMM-YYYY\"\n                                )}\n                              </span>\n                            </div>\n                          </div>\n                        </div>\n                        <div className=\"col-md-3\">\n                          <div className=\"form-group\">\n                            <div className=\"row\">\n                              <label className=\"col-5  no-padding\">\n                                End Date- Estimated\n                              </label>\n                              <span className=\"col-1 p0\">:</span>\n                              <span className=\"col-5 \" id=\"eeDate\">\n                                {/* {item.est_planned_end_dt} */}\n                                {moment(item.est_planned_end_dt).format(\n                                  \"DD-MMM-YYYY\"\n                                )}\n                              </span>\n                            </div>\n                          </div>\n                        </div>\n                        <div className=\"col-md-3\">\n                          <div className=\"form-group\">\n                            <div className=\"row\">\n                              <label className=\"col-5  no-padding\">\n                                % Complete\n                              </label>\n                              <span className=\"col-1 p0\">:</span>\n                              <span className=\"col-5\" id=\"pComplete\">\n                                {item.pComplete}\n                              </span>\n                            </div>\n                          </div>\n                        </div>\n                        <div className=\"col-md-3\">\n                          <div className=\"form-group\">\n                            <div className=\"row\">\n                              <label className=\"col-5  no-padding\">\n                                Billable Utilization %\n                              </label>\n                              <span className=\"col-1 p0\">:</span>\n                              <span className=\"col-5 \" id=\"bUtil\">\n                                {item.billable_utilized}\n                              </span>\n                            </div>\n                          </div>\n                        </div>\n                        <div className=\"col-md-3\">\n                          <div className=\"form-group\">\n                            <div className=\"row\">\n                              <label className=\"col-5 no-padding\">\n                                Planned FTE\n                              </label>\n                              <span className=\"col-1 p0\">:</span>\n                              <span className=\"col-5 \" id=\"pFte\">\n                                {item.planned_team_size}\n                              </span>\n                            </div>\n                          </div>\n                        </div>\n                        <div className=\"col-md-3\">\n                          <div className=\"form-group\">\n                            <div className=\"row\">\n                              <label className=\"col-5  no-padding\">\n                                Actual FTE\n                              </label>\n                              <span className=\"col-1 p0\">:</span>\n                              <span className=\"col-5 \" id=\"aFte\">\n                                {item.actual_team_size}\n                              </span>\n                            </div>\n                          </div>\n                        </div>\n                        <div className=\"col-md-3\">\n                          <div className=\"form-group\">\n                            <div className=\"row\">\n                              <label className=\"col-5  no-padding\">\n                                Expense Billable\n                              </label>\n                              <span className=\"col-1\">:</span>\n                              <span className=\"col-5\" id=\"eBillable\">\n                                {item.ebillable}\n                              </span>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                ))}\n              </div>\n              <br />\n              <div>\n                {datainfo.map((Details) => (\n                  <div\n                    style={{ border: \"1ps solid #f8e6c3\" }}\n                    className=\"group-content\"\n                  >\n                    <div\n                      className=\"alert alert-warning\"\n                      style={{\n                        fontSize: \"11px\",\n                        backgroundColor: \"#ffffff\",\n                        paddingLeft: \"5px\",\n                        paddingBottom: \"5px\",\n                        paddingTop: \"5px\",\n                        marginBottom: \"0px\",\n                      }}\n                      // style={fontSize: 11px; background-color: #ffffff; padding-left: 0px; padding-bottom: 0px}\n                    >\n                      <SlExclamation />\n                      <strong style={{ marginLeft: \"10px\" }}>\n                        <em class=\"icon-information-white\"></em>\n                      </strong>\n                      Note: Values in the table are between\n                      {/* <span id=\"frmDtSpan\">01-Feb-2017</span> */}\n                      <span className=\"Warning\">\n                        {\" \"}\n                        {Details.planned_start_dt}{\" \"}\n                      </span>\n                      and\n                      {/* <span id=\"toDtSpan\">31-Dec-2018</span> */}\n                      <span className=\"Warning\">\n                        {\" \"}\n                        {Details.planned_end_dt}{\" \"}\n                      </span>{\" \"}\n                      except contracted value.\n                    </div>\n                  </div>\n                ))}\n              </div>\n              <br></br>\n              {/* <ProjectStatusReportDetails/> */}\n              <div className=\"darkHeader\">\n                {/* {display ? <Loader /> : \"\"} */}\n                <table className=\"table table-striped table-bordered  display\">\n                  <thead>\n                    <tr>\n                      <th width=\"5%\" height=\"10px\">\n                        {dataKpi?.map((Details) =>\n                          Details.var_dc < -6 ||\n                          Details.var_dur < -6 ||\n                          Details.var_efforts < -6 ||\n                          Details.var_margin < -6 ||\n                          Details.var_oc < -6 ||\n                          Details.var_rev < -6 ? (\n                            <div className=\"projectStatus\">\n                              {/* <span className=\"circle red\" title=\"Atleast one indicator is red\"></span>\n                                <span className=\"circle\"></span>\n                                <span className=\"circle\"></span> */}\n                              <div>\n                                <div className=\"legendContainer\" align=\"center\">\n                                  <div\n                                    className=\"legend red\"\n                                    title=\"Atleast one indicator is red\"\n                                  >\n                                    <div className=\"legendCircle\"></div>\n                                    <div className=\"legendTxt\"></div>\n                                  </div>\n                                  <div className=\"legend\">\n                                    <div className=\"legendCircle\"></div>\n                                    <div className=\"legendTxt\"></div>\n                                  </div>\n                                  <div\n                                    data-toggle=\"tooltip\"\n                                    title=\"vatiance > -4%\"\n                                    className=\"legend\"\n                                  >\n                                    <div className=\"legendCircle\"></div>\n                                    <div className=\"legendTxt\"></div>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                          ) : (\n                            // < div className=\"projectStatus\" >\n                            //     <span className=\"circle\"></span>\n                            //     <span className=\"circle\"></span>\n                            //     <span className=\"circle green\" title=\"All indicators are green or Just one indicator is yellow and others are being green\"></span>\n                            // </div>\n                            <div>\n                              <div className=\"legendContainer\" align=\"center\">\n                                <div className=\"legend\">\n                                  <div className=\"legendCircle\"></div>\n                                  <div className=\"legendTxt\"></div>\n                                </div>\n                                <div className=\"legend\">\n                                  <div className=\"legendCircle\"></div>\n                                  <div className=\"legendTxt\"></div>\n                                </div>\n                                <div\n                                  data-toggle=\"tooltip\"\n                                  // title=\"vatiance > -4%\"\n                                  className=\"legend green\"\n                                  title=\"All indicators are green or Just one indicator is yellow and others are being green\"\n                                >\n                                  <div className=\"legendCircle\"></div>\n                                  <div className=\"legendTxt\"></div>\n                                </div>\n                              </div>\n                            </div>\n                          )\n                        )}\n                      </th>\n\n                      <th width=\"15%\" style={{ textAlign: \"center\" }}>\n                        KPI\n                      </th>\n                      <th width=\"8%\" style={{ textAlign: \"center\" }}>\n                        Contracted Value\n                      </th>\n                      <th width=\"13%\">Latest Total Planned (LTP)</th>\n                      <th width=\"11%\">Planned to Date (PTD)</th>\n                      <th width=\"11%\">Actual to Date (ATD)</th>\n                      <th width=\"13%\">Estimate To Complete (ETC)</th>\n                      <th width=\"13%\">Estimate At Completion (EAC)</th>\n                      <th width=\"12%\">Variance At Completion(%)</th>\n                    </tr>\n                  </thead>\n\n                  <tbody>\n                    <tr>\n                      {dataKpi.map((Details) => (\n                        <>\n                          <td width=\"5%\">\n                            {Details.var_efforts > -4 ? (\n                              // <>\n                              //   <div className=\"circle \"></div>\n                              //   <div className=\"circle \"></div>\n                              //   <div\n                              //     data-toggle=\"tooltip\"\n                              //     title=\"vatiance > -4%\"\n                              //     className=\"circle green\"\n                              //   ></div>\n                              // </>\n                              <div>\n                                <div className=\"legendContainer\" align=\"center\">\n                                  <div className=\"legend  \">\n                                    <div className=\"legendCircle\"></div>\n                                    <div className=\"legendTxt\"></div>\n                                  </div>\n                                  <div className=\"legend  \">\n                                    <div className=\"legendCircle\"></div>\n                                    <div className=\"legendTxt\"></div>\n                                  </div>\n                                  <div\n                                    data-toggle=\"tooltip\"\n                                    title=\"vatiance > -4%\"\n                                    className=\"legend  green\"\n                                  >\n                                    <div className=\"legendCircle\"></div>\n                                    <div className=\"legendTxt\"></div>\n                                  </div>\n                                </div>\n                              </div>\n                            ) : (\n                              \"\"\n                            )}\n                            {Details.var_efforts < -6 ? (\n                              // <>\n                              //   <div\n                              //     data-toggle=\"tooltip\"\n                              //     title=\"vatiance < -6%\"\n                              //     className=\"circle red\"\n                              //   ></div>\n                              //   <div className=\"circle \"></div>\n                              //   <div className=\"circle \"></div>\n                              // </>\n                              <div>\n                                <div\n                                  className=\"legendContainer\"\n                                  align=\"center\"\n                                  title=\"vatiance < -6%\"\n                                >\n                                  <div className=\"legend red \">\n                                    <div className=\"legendCircle\"></div>\n                                    <div className=\"legendTxt\"></div>\n                                  </div>\n                                  <div className=\"legend  \">\n                                    <div className=\"legendCircle\"></div>\n                                    <div className=\"legendTxt\"></div>\n                                  </div>\n                                  <div\n                                    data-toggle=\"tooltip\"\n                                    title=\"vatiance > -4%\"\n                                    className=\"legend\"\n                                  >\n                                    <div className=\"legendCircle\"></div>\n                                    <div className=\"legendTxt\"></div>\n                                  </div>\n                                </div>\n                              </div>\n                            ) : (\n                              \"\"\n                            )}\n                            {Details.var_efforts <= -4 &&\n                            Details.var_efforts >= -6 ? (\n                              // <>\n                              //   <div className=\"circle\"></div>\n                              //   <div\n                              //     data-toggle=\"tooltip\"\n                              //     title=\"vatiance >= -6% and vatiance =< -4%\"\n                              //     className=\"circle yellow\"\n                              //   ></div>\n                              //   <div className=\"circle\"></div>\n                              // </>\n                              <div className=\"legendContainer\" align=\"center\">\n                                <div\n                                  title=\"vatiance >= -6% and vatiance =< -4%\"\n                                  className=\"legend  green\"\n                                >\n                                  <div className=\"legendCircle\"></div>\n                                  <div className=\"legendTxt\"></div>\n                                </div>\n                              </div>\n                            ) : (\n                              \"\"\n                            )}\n                          </td>\n                          <td width=\"8%\">Efforts (Hrs)</td>\n                          <td width=\"13%\" id=\"cont_efforts\">\n                            <span style={{ float: \"right\" }}>\n                              {/* {Details.cont_efforts} */}\n                              {nf.format(parseInt(Details.cont_efforts))}\n                            </span>\n                          </td>\n                          <td width=\"13%\" id=\"pln_efforts\">\n                            <span style={{ float: \"right\" }}>\n                              {/* {Details.pln_efforts} */}\n                              {nf.format(parseInt(Details.pln_efforts))}\n                            </span>\n                          </td>\n                          <td width=\"11%\" id=\"ptd_efforts\">\n                            <span style={{ float: \"right\" }}>\n                              {/* {Details.ptd_efforts} */}\n                              {nf.format(parseInt(Details.ptd_efforts))}\n                            </span>\n                          </td>\n                          <td width=\"11%\" id=\"atd_efforts\">\n                            <span style={{ float: \"right\" }}>\n                              {nf.format(parseInt(Details.atd_efforts))}\n                              {/* {Details.atd_efforts} */}\n                            </span>\n                          </td>\n                          <td width=\"13%\" id=\"etc_efforts\">\n                            <span style={{ float: \"right\" }}>\n                              {nf.format(parseInt(Details.etc_efforts))}\n                              {/* {Details.etc_efforts} */}\n                            </span>\n                          </td>\n                          <td width=\"13%\" id=\"eac_efforts\">\n                            <span style={{ float: \"right\" }}>\n                              {nf.format(parseInt(Details.eac_efforts))}\n                              {/* {Details.eac_efforts} */}\n                            </span>\n                          </td>\n                          <td width=\"12%\" id=\"var_efforts\">\n                            <span style={{ float: \"right\" }}>\n                              {nf.format(parseInt(Details.var_efforts))}\n\n                              {/* {Details.var_efforts} */}\n                            </span>\n                          </td>\n                        </>\n                      ))}\n                    </tr>\n                    <tr>\n                      {dataKpi.map((Details) => (\n                        <>\n                          <td>\n                            {Details.var_rev > -4 ? (\n                              // <>\n                              //   <div className=\"circle \"></div>\n                              //   <div className=\"circle \"></div>\n                              //   <div\n                              //     data-toggle=\"tooltip\"\n                              //     title=\"vatiance > -4%\"\n                              //     className=\"circle green\"\n                              //   ></div>\n                              // </>\n                              <div>\n                                <div className=\"legendContainer\" align=\"center\">\n                                  <div className=\"legend  \">\n                                    <div className=\"legendCircle\"></div>\n                                    <div className=\"legendTxt\"></div>\n                                  </div>\n                                  <div className=\"legend  \">\n                                    <div className=\"legendCircle\"></div>\n                                    <div className=\"legendTxt\"></div>\n                                  </div>\n                                  <div\n                                    data-toggle=\"tooltip\"\n                                    title=\"vatiance > -4%\"\n                                    className=\"legend  green\"\n                                  >\n                                    <div className=\"legendCircle\"></div>\n                                    <div className=\"legendTxt\"></div>\n                                  </div>\n                                </div>\n                              </div>\n                            ) : (\n                              \"\"\n                            )}\n                            {Details.var_rev < -6 ? (\n                              // <>\n                              //   <div\n                              //     data-toggle=\"tooltip\"\n                              //     title=\"vatiance < -6%\"\n                              //     className=\"circle red\"\n                              //   ></div>\n                              //   <div className=\"circle \"></div>\n                              //   <div className=\"circle \"></div>\n                              // </>\n                              <div>\n                                <div className=\"legendContainer\" align=\"center\">\n                                  <div\n                                    data-toggle=\"tooltip\"\n                                    title=\"vatiance < -6%\"\n                                    className=\"legend red \"\n                                  >\n                                    <div className=\"legendCircle\"></div>\n                                    <div className=\"legendTxt\"></div>\n                                  </div>\n                                  <div className=\"legend  \">\n                                    <div className=\"legendCircle\"></div>\n                                    <div className=\"legendTxt\"></div>\n                                  </div>\n                                  <div className=\"legend\">\n                                    <div className=\"legendCircle\"></div>\n                                    <div className=\"legendTxt\"></div>\n                                  </div>\n                                </div>\n                              </div>\n                            ) : (\n                              \"\"\n                            )}\n                            {Details.var_rev <= -4 && Details.var_rev >= -6 ? (\n                              // <>\n                              //   <div className=\"circle\"></div>\n                              //   <div\n                              //     data-toggle=\"tooltip\"\n                              //     title=\"vatiance >= -6% and vatiance =< -4%\"\n                              //     className=\"circle yellow\"\n                              //   ></div>\n                              //   <div className=\"circle\"></div>\n                              // </>\n                              <div>\n                                <div className=\"legendContainer\" align=\"center\">\n                                  <div className=\"legend  \">\n                                    <div className=\"legendCircle\"></div>\n                                    <div className=\"legendTxt\"></div>\n                                  </div>\n                                  <div\n                                    data-toggle=\"tooltip\"\n                                    title=\"vatiance >= -6% and vatiance =< -4%\"\n                                    className=\"legend amber \"\n                                  >\n                                    <div className=\"legendCircle\"></div>\n                                    <div className=\"legendTxt\"></div>\n                                  </div>\n                                  <div className=\"legend \">\n                                    <div className=\"legendCircle\"></div>\n                                    <div className=\"legendTxt\"></div>\n                                  </div>\n                                </div>\n                              </div>\n                            ) : (\n                              \"\"\n                            )}\n                          </td>\n                          <td>Revenue</td>\n                          <td id=\"cont_rev\">\n                            <span style={{ float: \"right\" }}>\n                              {\" \"}\n                              {/* $ {Details.cont_rev} */}${\" \"}\n                              {nf.format(parseInt(Details.cont_rev))}\n                            </span>\n                          </td>\n                          <td id=\"pln_rev\">\n                            <span style={{ float: \"right\" }}>\n                              {\" \"}\n                              $ {nf.format(parseInt(Details.pln_rev))}\n                              {/* $ {Details.pln_rev} */}\n                            </span>\n                          </td>\n                          <td id=\"ptd_rev\">\n                            <span style={{ float: \"right\" }}>\n                              {\" \"}\n                              $ {nf.format(parseInt(Details.ptd_rev))}\n                              {/* $ {Details.ptd_rev} */}\n                            </span>\n                          </td>\n                          <td id=\"atd_rev\">\n                            <span style={{ float: \"right\" }}>\n                              {\" \"}\n                              {/* $ {Details.atd_rev} */}${\" \"}\n                              {nf.format(parseInt(Details.atd_rev))}\n                            </span>\n                          </td>\n                          <td id=\"etc_rev\">\n                            <span style={{ float: \"right\" }}>\n                              {\" \"}\n                              {/* $ {Details.etc_rev} */}${\" \"}\n                              {nf.format(parseInt(Details.etc_rev))}\n                            </span>\n                          </td>\n                          <td id=\"eac_rev\">\n                            <span style={{ float: \"right\" }}>\n                              {\" \"}\n                              {/* $ {Details.eac_rev} */}${\" \"}\n                              {nf.format(parseInt(Details.eac_rev))}\n                            </span>\n                          </td>\n                          <td id=\"var_rev\">\n                            <span style={{ float: \"right\" }}>\n                              {/* {Details.var_rev} */}${\" \"}\n                              {nf.format(parseInt(Details.var_rev))}\n                            </span>\n                          </td>\n                        </>\n                      ))}\n                    </tr>\n                    <tr>\n                      {dataKpi.map((Details) => (\n                        <>\n                          <td>\n                            {Details.var_dc > -4 ? (\n                              // <>\n                              //   <div className=\"circle \"></div>\n                              //   <div className=\"circle \"></div>\n                              //   <div\n                              //     data-toggle=\"tooltip\"\n                              //     title=\"vatiance > -4%\"\n                              //     className=\"circle green\"\n                              //   ></div>\n                              // </>\n                              <div>\n                                <div className=\"legendContainer\" align=\"center\">\n                                  <div className=\"legend  \">\n                                    <div className=\"legendCircle\"></div>\n                                    <div className=\"legendTxt\"></div>\n                                  </div>\n                                  <div className=\"legend  \">\n                                    <div className=\"legendCircle\"></div>\n                                    <div className=\"legendTxt\"></div>\n                                  </div>\n                                  <div\n                                    data-toggle=\"tooltip\"\n                                    title=\"vatiance > -4%\"\n                                    className=\"legend  green\"\n                                  >\n                                    <div className=\"legendCircle\"></div>\n                                    <div className=\"legendTxt\"></div>\n                                  </div>\n                                </div>\n                              </div>\n                            ) : (\n                              \"\"\n                            )}\n                            {Details.var_dc < -6 ? (\n                              // <>\n                              //   <div\n                              //     data-toggle=\"tooltip\"\n                              //     title=\"vatiance < -6%\"\n                              //     className=\"circle red\"\n                              //   ></div>\n                              //   <div className=\"circle \"></div>\n                              //   <div className=\"circle \"></div>\n                              // </>\n                              <div>\n                                <div className=\"legendContainer\" align=\"center\">\n                                  <div className=\"legend  \">\n                                    <div className=\"legendCircle\"></div>\n                                    <div className=\"legendTxt\"></div>\n                                  </div>\n                                  <div\n                                    data-toggle=\"tooltip\"\n                                    title=\"vatiance < -6%\"\n                                    className=\"legend red\"\n                                  >\n                                    <div className=\"legendCircle\"></div>\n                                    <div className=\"legendTxt\"></div>\n                                  </div>\n                                  <div className=\"legend \">\n                                    <div className=\"legendCircle\"></div>\n                                    <div className=\"legendTxt\"></div>\n                                  </div>\n                                </div>\n                              </div>\n                            ) : (\n                              \"\"\n                            )}\n                            {Details.var_dc <= -4 && Details.var_dc >= -6 ? (\n                              // <>\n                              //   <div className=\"circle\"></div>\n                              //   <div\n                              //     data-toggle=\"tooltip\"\n                              //     title=\"vatiance >= -6% and vatiance =< -4%\"\n                              //     className=\"circle yellow\"\n                              //   ></div>\n                              //   <div className=\"circle\"></div>\n                              // </>\n                              <div>\n                                <div className=\"legendContainer\" align=\"center\">\n                                  <div className=\"legend\">\n                                    <div className=\"legendCircle\"></div>\n                                    <div className=\"legendTxt\"></div>\n                                  </div>\n                                  <div\n                                    data-toggle=\"tooltip\"\n                                    title=\"vatiance >= -6% and vatiance =< -4%\"\n                                    className=\"legend amber\"\n                                  >\n                                    <div className=\"legendCircle\"></div>\n                                    <div className=\"legendTxt\"></div>\n                                  </div>\n                                  <div className=\"legend\">\n                                    <div className=\"legendCircle\"></div>\n                                    <div className=\"legendTxt\"></div>\n                                  </div>\n                                </div>\n                              </div>\n                            ) : (\n                              \"\"\n                            )}\n                          </td>\n                          <td>Resource Direct Cost</td>\n                          <td id=\"cont_dc\">\n                            <span style={{ float: \"right\" }}>\n                              {\" \"}\n                              {/* $ {Details.cont_dc} */}${\" \"}\n                              {nf.format(parseInt(Details.cont_dc))}\n                            </span>\n                          </td>\n                          <td id=\"pln_dc\">\n                            <span style={{ float: \"right\" }}>\n                              {\" \"}\n                              {/* $ {Details.pln_dc} */}${\" \"}\n                              {nf.format(parseInt(Details.pln_dc))}\n                            </span>\n                          </td>\n                          <td id=\"ptd_dc\">\n                            <span style={{ float: \"right\" }}>\n                              {\" \"}\n                              {/* $ {Details.ptd_dc} */}${\" \"}\n                              {nf.format(parseInt(Details.pln_dc))}\n                            </span>\n                          </td>\n                          <td id=\"atd_dc\">\n                            <span style={{ float: \"right\" }}>\n                              {\" \"}\n                              {/* $ {Details.atd_dc} */}${\" \"}\n                              {nf.format(parseInt(Details.atd_dc))}\n                            </span>\n                          </td>\n                          <td id=\"etc_dc\">\n                            <span style={{ float: \"right\" }}>\n                              {\" \"}\n                              {/* $ {Details.etc_dc} */}${\" \"}\n                              {nf.format(parseInt(Details.etc_dc))}\n                            </span>\n                          </td>\n                          <td id=\"eac_dc\">\n                            <span style={{ float: \"right\" }}>\n                              {\" \"}\n                              {/* $ {Details.eac_dc} */}${\" \"}\n                              {nf.format(parseInt(Details.eac_dc))}\n                            </span>\n                          </td>\n                          <td id=\"var_dc\">\n                            <span style={{ float: \"right\" }}>\n                              {/* {Details.var_dc} */}${\" \"}\n                              {nf.format(parseInt(Details.var_dc))}\n                            </span>\n                          </td>\n                        </>\n                      ))}\n                    </tr>\n                    <tr>\n                      {dataKpi.map((Details) => (\n                        <>\n                          <td>\n                            {Details.var_oc > -4 ? (\n                              // <>\n                              //   <div className=\"circle \"></div>\n                              //   <div className=\"circle \"></div>\n                              //   <div\n                              //     data-toggle=\"tooltip\"\n                              //     title=\"vatiance > -4%\"\n                              //     className=\"circle green\"\n                              //   ></div>\n                              // </>\n                              <div>\n                                <div className=\"legendContainer\" align=\"center\">\n                                  <div className=\"legend  \">\n                                    <div className=\"legendCircle\"></div>\n                                    <div className=\"legendTxt\"></div>\n                                  </div>\n                                  <div className=\"legend  \">\n                                    <div className=\"legendCircle\"></div>\n                                    <div className=\"legendTxt\"></div>\n                                  </div>\n                                  <div\n                                    data-toggle=\"tooltip\"\n                                    title=\"vatiance > -4%\"\n                                    className=\"legend  green\"\n                                  >\n                                    <div className=\"legendCircle\"></div>\n                                    <div className=\"legendTxt\"></div>\n                                  </div>\n                                </div>\n                              </div>\n                            ) : (\n                              \"\"\n                            )}\n                            {Details.var_oc < -6 ? (\n                              // <>\n                              //   <div\n                              //     data-toggle=\"tooltip\"\n                              //     title=\"vatiance < -6%\"\n                              //     className=\"circle red\"\n                              //   ></div>\n                              //   <div className=\"circle \"></div>\n                              //   <div className=\"circle \"></div>\n                              // </>\n                              <div>\n                                <div className=\"legendContainer\" align=\"center\">\n                                  <div className=\"legend  \">\n                                    <div className=\"legendCircle\"></div>\n                                    <div className=\"legendTxt\"></div>\n                                  </div>\n                                  <div\n                                    data-toggle=\"tooltip\"\n                                    title=\"vatiance < -6%\"\n                                    className=\"legend red \"\n                                  >\n                                    <div className=\"legendCircle\"></div>\n                                    <div className=\"legendTxt\"></div>\n                                  </div>\n                                  <div className=\"legend\">\n                                    <div className=\"legendCircle\"></div>\n                                    <div className=\"legendTxt\"></div>\n                                  </div>\n                                </div>\n                              </div>\n                            ) : (\n                              \"\"\n                            )}\n                            {Details.var_oc <= -4 && Details.var_oc >= -6 ? (\n                              // <>\n                              //   <div className=\"circle\"></div>\n                              //   <div\n                              //     data-toggle=\"tooltip\"\n                              //     title=\"vatiance >= -6% and vatiance =< -4%\"\n                              //     className=\"circle yellow\"\n                              //   ></div>\n                              //   <div className=\"circle\"></div>\n                              // </>\n                              <div>\n                                <div className=\"legendContainer\" align=\"center\">\n                                  <div className=\"legend  \">\n                                    <div className=\"legendCircle\"></div>\n                                    <div className=\"legendTxt\"></div>\n                                  </div>\n                                  <div\n                                    data-toggle=\"tooltip\"\n                                    title=\"vatiance >= -6% and vatiance =< -4%\"\n                                    className=\"legend amber \"\n                                  >\n                                    <div className=\"legendCircle\"></div>\n                                    <div className=\"legendTxt\"></div>\n                                  </div>\n                                  <div className=\"legend \">\n                                    <div className=\"legendCircle\"></div>\n                                    <div className=\"legendTxt\"></div>\n                                  </div>\n                                </div>\n                              </div>\n                            ) : (\n                              \"\"\n                            )}\n                          </td>\n                          <td>Other Direct Cost</td>\n                          <td id=\"cont_oc\">\n                            {\" \"}\n                            <span style={{ float: \"right\" }}>\n                              {\" \"}\n                              {/* $ {Details.cont_oc} */}${\" \"}\n                              {nf.format(parseInt(Details.cont_oc))}\n                            </span>\n                          </td>\n                          <td id=\"pln_oc\">\n                            {\" \"}\n                            <span style={{ float: \"right\" }}>\n                              {\" \"}\n                              {/* $ {Details.pln_oc} */}${\" \"}\n                              {nf.format(parseInt(Details.pln_oc))}\n                            </span>\n                          </td>\n                          <td id=\"ptd_oc\">\n                            {\" \"}\n                            <span style={{ float: \"right\" }}>\n                              {\" \"}\n                              {/* $ {Details.ptd_oc} */}${\" \"}\n                              {nf.format(parseInt(Details.ptd_oc))}\n                            </span>\n                          </td>\n                          <td id=\"atd_oc\">\n                            <span style={{ float: \"right\" }}>\n                              {\" \"}\n                              {/* $ {Details.atd_oc} */}${\" \"}\n                              {nf.format(parseInt(Details.atd_oc))}\n                            </span>\n                          </td>\n                          <td id=\"etc_oc\">\n                            <span style={{ float: \"right\" }}>\n                              {\" \"}\n                              {/* $ {Details.etc_oc} */}${\" \"}\n                              {nf.format(parseInt(Details.etc_oc))}\n                            </span>\n                          </td>\n                          <td id=\"eac_oc\">\n                            <span style={{ float: \"right\" }}>\n                              {\" \"}\n                              {/* $ {Details.eac_oc} */}${\" \"}\n                              {nf.format(parseInt(Details.eac_oc))}\n                            </span>\n                          </td>\n                          <td id=\"var_oc\">\n                            <span style={{ float: \"right\" }}>\n                              {/* {Details.var_oc} */}${\" \"}\n                              {nf.format(parseInt(Details.var_oc))}\n                            </span>\n                          </td>\n                        </>\n                      ))}\n                    </tr>\n                    <tr>\n                      {dataKpi.map((Details) => (\n                        <>\n                          <td>\n                            {Details.var_margin > -4 ? (\n                              // <>\n                              //   <div className=\"circle \"></div>\n                              //   <div className=\"circle \"></div>\n                              //   <div\n                              //     data-toggle=\"tooltip\"\n                              //     title=\"vatiance > -4%\"\n                              //     className=\"circle green\"\n                              //   ></div>\n                              // </>\n                              <div>\n                                <div className=\"legendContainer\" align=\"center\">\n                                  <div className=\"legend  \">\n                                    <div className=\"legendCircle\"></div>\n                                    <div className=\"legendTxt\"></div>\n                                  </div>\n                                  <div className=\"legend  \">\n                                    <div className=\"legendCircle\"></div>\n                                    <div className=\"legendTxt\"></div>\n                                  </div>\n                                  <div\n                                    data-toggle=\"tooltip\"\n                                    title=\"vatiance > -4%\"\n                                    className=\"legend  green\"\n                                  >\n                                    <div className=\"legendCircle\"></div>\n                                    <div className=\"legendTxt\"></div>\n                                  </div>\n                                </div>\n                              </div>\n                            ) : (\n                              \"\"\n                            )}\n                            {Details.var_margin < -6 ? (\n                              // <>\n                              //   <div\n                              //     data-toggle=\"tooltip\"\n                              //     title=\"vatiance < -6%\"\n                              //     className=\"circle red\"\n                              //   ></div>\n                              //   <div className=\"circle \"></div>\n                              //   <div className=\"circle \"></div>\n                              // </>\n                              <div>\n                                <div className=\"legendContainer\" align=\"center\">\n                                  <div\n                                    data-toggle=\"tooltip\"\n                                    title=\"vatiance < -6%\"\n                                    className=\"legend red \"\n                                  >\n                                    <div className=\"legendCircle\"></div>\n                                    <div className=\"legendTxt\"></div>\n                                  </div>\n                                  <div className=\"legend  \">\n                                    <div className=\"legendCircle\"></div>\n                                    <div className=\"legendTxt\"></div>\n                                  </div>\n                                  <div className=\"legend\">\n                                    <div className=\"legendCircle\"></div>\n                                    <div className=\"legendTxt\"></div>\n                                  </div>\n                                </div>\n                              </div>\n                            ) : (\n                              \"\"\n                            )}\n                            {Details.var_margin <= -4 &&\n                            Details.var_margin >= -6 ? (\n                              // <>\n                              //   <div className=\"circle\"></div>\n                              //   <div\n                              //     data-toggle=\"tooltip\"\n                              //     title=\"vatiance >= -6% and vatiance =< -4%\"\n                              //     className=\"circle yellow\"\n                              //   ></div>\n                              //   <div className=\"circle\"></div>\n                              // </>\n                              <div>\n                                <div className=\"legendContainer\" align=\"center\">\n                                  <div className=\"legend  \">\n                                    <div className=\"legendCircle\"></div>\n                                    <div className=\"legendTxt\"></div>\n                                  </div>\n                                  <div\n                                    data-toggle=\"tooltip\"\n                                    title=\"vatiance >= -6% and vatiance =< -4%\"\n                                    className=\"legend yellow \"\n                                  >\n                                    <div className=\"legendCircle\"></div>\n                                    <div className=\"legendTxt\"></div>\n                                  </div>\n                                  <div className=\"legend\">\n                                    <div className=\"legendCircle\"></div>\n                                    <div className=\"legendTxt\"></div>\n                                  </div>\n                                </div>\n                              </div>\n                            ) : (\n                              \"\"\n                            )}\n                          </td>\n                          <td>Project Margin (%)</td>\n                          <td id=\"cont_margin\">\n                            <span style={{ float: \"right\" }}>\n                              {/* {Details.cont_margin} */}\n                              {nf.format(parseInt(Details.cont_margin))}\n                            </span>\n                          </td>\n                          <td id=\"pln_margin\">\n                            <span style={{ float: \"right\" }}>\n                              {/* {Details.pln_margin} */}\n                              {nf.format(parseInt(Details.pln_margin))}\n                            </span>\n                          </td>\n                          <td id=\"ptd_margin\">\n                            <span style={{ float: \"right\" }}>\n                              {/* {Details.ptd_margin} */}\n                              {nf.format(parseInt(Details.ptd_margin))}\n                            </span>\n                          </td>\n                          <td id=\"atd_margin\">\n                            <span style={{ float: \"right\" }}>\n                              {/* {Details.atd_margin} */}\n                              {nf.format(parseInt(Details.atd_margin))}\n                            </span>\n                          </td>\n                          <td id=\"etc_margin\">\n                            <span style={{ float: \"right\" }}>\n                              {/* {Details.etc_margin} */}\n                              {nf.format(parseInt(Details.etc_margin))}\n                            </span>\n                          </td>\n                          <td id=\"eac_margin\">\n                            <span style={{ float: \"right\" }}>\n                              {/* {Details.eac_margin} */}\n                              {nf.format(parseInt(Details.eac_margin))}\n                            </span>\n                          </td>\n                          <td id=\"var_margin\">\n                            <span style={{ float: \"right\" }}>\n                              {/* {Details.var_margin} */}\n                              {nf.format(parseInt(Details.var_margin))}\n                            </span>\n                          </td>\n                        </>\n                      ))}\n                    </tr>\n                    <tr>\n                      {dataKpi.map((Details) => (\n                        <>\n                          <td>\n                            {Details.var_dur > -4 ? (\n                              // <>\n                              //   <div className=\"circle \"></div>\n                              //   <div className=\"circle \"></div>\n                              //   <div\n                              //     data-toggle=\"tooltip\"\n                              //     title=\"vatiance > -4%\"\n                              //     className=\"circle green\"\n                              //   ></div>\n                              // </>\n                              <div>\n                                <div className=\"legendContainer\" align=\"center\">\n                                  <div className=\"legend  \">\n                                    <div className=\"legendCircle\"></div>\n                                    <div className=\"legendTxt\"></div>\n                                  </div>\n                                  <div className=\"legend  \">\n                                    <div className=\"legendCircle\"></div>\n                                    <div className=\"legendTxt\"></div>\n                                  </div>\n                                  <div\n                                    data-toggle=\"tooltip\"\n                                    title=\"vatiance > -4%\"\n                                    className=\"legend  green\"\n                                  >\n                                    <div className=\"legendCircle\"></div>\n                                    <div className=\"legendTxt\"></div>\n                                  </div>\n                                </div>\n                              </div>\n                            ) : (\n                              \"\"\n                            )}\n                            {Details.var_dur < -6 ? (\n                              // <>\n                              //   <div\n                              //     data-toggle=\"tooltip\"\n                              //     title=\"vatiance < -6%\"\n                              //     className=\"circle red\"\n                              //   ></div>\n                              //   <div className=\"circle \"></div>\n                              //   <div className=\"circle \"></div>\n                              // </>\n                              <div>\n                                <div className=\"legendContainer\" align=\"center\">\n                                  <div\n                                    data-toggle=\"tooltip\"\n                                    title=\"vatiance < -6%\"\n                                    className=\"legend red \"\n                                  >\n                                    <div className=\"legendCircle\"></div>\n                                    <div className=\"legendTxt\"></div>\n                                  </div>\n                                  <div className=\"legend  \">\n                                    <div className=\"legendCircle\"></div>\n                                    <div className=\"legendTxt\"></div>\n                                  </div>\n                                  <div className=\"legend \">\n                                    <div className=\"legendCircle\"></div>\n                                    <div className=\"legendTxt\"></div>\n                                  </div>\n                                </div>\n                              </div>\n                            ) : (\n                              \"\"\n                            )}\n                            {Details.var_dur <= -4 && Details.var_dur >= -6 ? (\n                              // <>\n                              //   <div className=\"circle\"></div>\n                              //   <div\n                              //     data-toggle=\"tooltip\"\n                              //     title=\"vatiance >= -6% and vatiance =< -4%\"\n                              //     className=\"circle yellow\"\n                              //   ></div>\n                              //   <div className=\"circle\"></div>\n                              // </>\n                              <div>\n                                <div className=\"legendContainer\" align=\"center\">\n                                  <div className=\"legend  \">\n                                    <div className=\"legendCircle\"></div>\n                                    <div className=\"legendTxt\"></div>\n                                  </div>\n                                  <div\n                                    data-toggle=\"tooltip\"\n                                    title=\"vatiance >= -6% and vatiance =< -4%\"\n                                    className=\"legend yellow \"\n                                  >\n                                    <div className=\"legendCircle\"></div>\n                                    <div className=\"legendTxt\"></div>\n                                  </div>\n                                  <div className=\"legend\">\n                                    <div className=\"legendCircle\"></div>\n                                    <div className=\"legendTxt\"></div>\n                                  </div>\n                                </div>\n                              </div>\n                            ) : (\n                              \"\"\n                            )}\n                          </td>\n                          <td>Duration (Days)</td>\n                          <td id=\"cont_dur\">\n                            <span style={{ float: \"right\" }}>\n                              {/* {Details.cont_dur} */}\n                              {nf.format(parseInt(Details.cont_dur))}\n                            </span>\n                          </td>\n                          <td id=\"pln_dur\">\n                            <span style={{ float: \"right\" }}>\n                              {nf.format(parseInt(Details.pln_dur))}\n                            </span>\n                          </td>\n                          <td id=\"ptd_dur\">\n                            <span style={{ float: \"right\" }}>\n                              {/* {Details.ptd_dur} */}\n                              {nf.format(parseInt(Details.ptd_dur))}\n                            </span>\n                          </td>\n                          <td id=\"atd_dur\">\n                            <span style={{ float: \"right\" }}>\n                              {Details.atd_dur}\n                            </span>\n                          </td>\n                          <td id=\"etc_dur\">\n                            <span style={{ float: \"right\" }}>\n                              {Details.etc_dur}\n                            </span>\n                          </td>\n                          <td id=\"eac_dur\">\n                            <span style={{ float: \"right\" }}>\n                              {Details.eac_dur}\n                            </span>\n                          </td>\n                          <td id=\"var_dur\">\n                            <span style={{ float: \"right\" }}>\n                              {Details.var_dur}\n                            </span>\n                          </td>\n                        </>\n                      ))}\n                    </tr>\n                  </tbody>\n                </table>\n              </div>\n              <br></br>\n              <br></br>\n\n              <div\n                className=\"group mb-1 customCard\"\n                style={{\n                  boxShadow: \"0px 1px 1px rgba(0, 0, 0, 0.23)\",\n                  cursor: \"pointer\",\n                }}\n              >\n                <div className=\"col-md-12 collapseHeader\">\n                  {/* <div\n                    onClick={() => {\n                      setVisibleA(!visibleA);\n                      visibleA\n                        ? setCheveronIconA(FaChevronCircleUp)\n                        : setCheveronIconA(FaChevronCircleDown);\n                    }}\n                  >\n                    <span>{cheveronIconA}</span>\n                  </div> */}\n                  <div\n                    className=\"row col-md-12\"\n                    style={{\n                      backgroundColor: \"#f4f4f4\",\n                      marginLeft: \"0px\",\n                      marginTop: \"4px\",\n                    }}\n                    onClick={() => {\n                      setVisibleA(!visibleA);\n                      visibleA\n                        ? setCheveronIconA(FaChevronCircleUp)\n                        : setCheveronIconA(FaChevronCircleDown);\n                    }}\n                  >\n                    <div className=\"col-md-6\">\n                      <h2 style={{ backgroundColor: \"#f4f4f4\" }}>\n                        Accomplishments and Planned Activities\n                      </h2>\n                    </div>{\" \"}\n                    <div className=\"col-md-6 px-0\">\n                      <span style={{ float: \"right\", marginTop: \"7px\" }}>\n                        {/* {cheveronIconA} */}\n                        <div style={{ color: \"#2e88c5\" }}> {cheveronIconA}</div>\n                      </span>\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n              <CCollapse visible={!visibleA}>\n                <div key={key} className=\"row\">\n                  <div className=\"col-md-6\">\n                    <ProjectStatusAccomplishments projectId={projectId} />\n                  </div>\n\n                  <div className=\"col-md-6\">\n                    <ProjectStatusPlannedActivities projectId={projectId} />\n                  </div>\n                </div>\n              </CCollapse>\n\n              <div\n                className=\"group mb-1 customCard\"\n                style={{\n                  boxShadow: \"0px 1px 1px rgba(0, 0, 0, 0.23)\",\n                  cursor: \"pointer\",\n                }}\n              >\n                <div className=\"col-md-12 collapseHeader\">\n                  <div\n                    className=\"row col-md-12\"\n                    style={{\n                      backgroundColor: \"#f4f4f4\",\n                      marginLeft: \"0px\",\n                      marginTop: \"4px\",\n                    }}\n                    onClick={() => {\n                      setVisibleB(!visibleB);\n                      visibleB\n                        ? setCheveronIconB(FaChevronCircleUp)\n                        : setCheveronIconB(FaChevronCircleDown);\n                    }}\n                  >\n                    <div className=\"col-md-6\">\n                      <h2 style={{ backgroundColor: \"#f4f4f4\" }}>Risks</h2>\n                    </div>{\" \"}\n                    <div className=\"col-md-6 px-0\">\n                      <span style={{ float: \"right\", marginTop: \"7px\" }}>\n                        {/* {cheveronIconB} */}\n                        <div style={{ color: \"#2e88c5\" }}> {cheveronIconB}</div>\n                      </span>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <CCollapse visible={!visibleB}>\n                {/* <ProjectStatusRisk id={id} /> */}\n                <div>\n                  <FlatPrimeReactTable data={dataRisks} rows={rows} />\n                </div>\n              </CCollapse>\n\n              <div\n                className=\"group mb-1 customCard\"\n                style={{\n                  boxShadow: \"0px 1px 1px rgba(0, 0, 0, 0.23)\",\n                  cursor: \"pointer\",\n                }}\n              >\n                <div className=\"col-md-12 collapseHeader\">\n                  <div\n                    className=\"row col-md-12\"\n                    style={{\n                      backgroundColor: \"#f4f4f4\",\n                      marginLeft: \"0px\",\n                      marginTop: \"4px\",\n                    }}\n                    onClick={() => {\n                      setVisibleC(!visibleC);\n                      visibleC\n                        ? setCheveronIconC(FaChevronCircleUp)\n                        : setCheveronIconC(FaChevronCircleDown);\n                    }}\n                  >\n                    <div className=\"col-md-6\">\n                      <h2 style={{ backgroundColor: \"#f4f4f4\" }}>Issues</h2>\n                    </div>{\" \"}\n                    <div className=\"col-md-6 px-0\">\n                      <span style={{ float: \"right\", marginTop: \"7px\" }}>\n                        {/* {cheveronIconC} */}\n                        <div style={{ color: \"#2e88c5\" }}> {cheveronIconC}</div>\n                      </span>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <CCollapse visible={!visibleC}>\n                {/* <ProjectStatusIssues /> */}\n                <div className=\"prohectStatusReports\">\n                  {\" \"}\n                  <FlatPrimeReactTable data={dataIssues} rows={rows} />\n                </div>\n              </CCollapse>\n              <div\n                className=\"group mb-1 customCard\"\n                style={{\n                  boxShadow: \"0px 1px 1px rgba(0, 0, 0, 0.23)\",\n                  cursor: \"pointer\",\n                }}\n              >\n                <div className=\"col-md-12 collapseHeader\">\n                  <div\n                    className=\"row col-md-12\"\n                    style={{\n                      backgroundColor: \"#f4f4f4\",\n                      marginLeft: \"0px\",\n                      marginTop: \"4px\",\n                    }}\n                    onClick={() => {\n                      setVisibleD(!visibleD);\n                      visibleD\n                        ? setCheveronIconD(FaChevronCircleUp)\n                        : setCheveronIconD(FaChevronCircleDown);\n                    }}\n                  >\n                    <div className=\"col-md-6\">\n                      <h2 style={{ backgroundColor: \"#f4f4f4\" }}>\n                        Dependencies\n                      </h2>\n                    </div>{\" \"}\n                    <div className=\"col-md-6 px-0\">\n                      <span style={{ float: \"right\", marginTop: \"7px\" }}>\n                        <div style={{ color: \"#2e88c5\" }}>{cheveronIconD}</div>\n                      </span>\n                    </div>{\" \"}\n                  </div>\n                </div>\n              </div>\n              <CCollapse visible={!visibleD}>\n                {/* <ProjectStatusDependency /> */}\n                <FlatPrimeReactTable data={dataDependency} rows={rows} />\n              </CCollapse>\n              <div\n                className=\"group mb-1 customCard\"\n                style={{\n                  boxShadow: \"0px 1px 1px rgba(0, 0, 0, 0.23)\",\n                  cursor: \"pointer\",\n                }}\n              >\n                <div className=\"col-md-12 collapseHeader\">\n                  <div\n                    className=\"row col-md-12\"\n                    style={{\n                      backgroundColor: \"#f4f4f4\",\n                      marginLeft: \"0px\",\n                      marginTop: \"4px\",\n                    }}\n                    onClick={() => {\n                      setVisibleE(!visibleE);\n                      visibleE\n                        ? setCheveronIconE(FaChevronCircleUp)\n                        : setCheveronIconE(FaChevronCircleDown);\n                    }}\n                  >\n                    <div className=\"col-md-6\">\n                      <h2 style={{ backgroundColor: \"#f4f4f4\" }}>\n                        Scope Change History and Indicator\n                      </h2>\n                    </div>{\" \"}\n                    <div className=\"col-md-6 px-0\">\n                      <span style={{ float: \"right\", marginTop: \"7px\" }}>\n                        {/* {cheveronIconE} */}\n                        <div style={{ color: \"#2e88c5\" }}> {cheveronIconE}</div>\n                      </span>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <CCollapse visible={!visibleE}>\n                {/* <ProjectStatusScope /> */}\n                <div>\n                  {/* <FlatPrimeReactTable data={dataScope} /> */}\n                  <FlatPrimeReactTable data={dataScope} rows={rows} />\n                </div>\n              </CCollapse>\n              <div\n                className=\"group mb-1 customCard\"\n                style={{\n                  boxShadow: \"0px 1px 1px rgba(0, 0, 0, 0.23)\",\n                  cursor: \"pointer\",\n                }}\n              >\n                <div className=\"col-md-12 collapseHeader\">\n                  <div\n                    className=\"row col-md-12\"\n                    style={{\n                      backgroundColor: \"#f4f4f4\",\n                      marginLeft: \"0px\",\n                      marginTop: \"4px\",\n                    }}\n                    // style={{ backgroundColor: \"#f4f4f4\" }}\n                    onClick={() => {\n                      setVisibleF(!visibleF);\n                      visibleF\n                        ? setCheveronIconF(FaChevronCircleUp)\n                        : setCheveronIconF(FaChevronCircleDown);\n                    }}\n                  >\n                    <div className=\"col-md-6\">\n                      <h2 style={{ backgroundColor: \"#f4f4f4\" }}>Events</h2>\n                    </div>{\" \"}\n                    <div className=\"col-md-6 px-0\">\n                      <span style={{ float: \"right\", marginTop: \"7px\" }}>\n                        <div style={{ color: \"#2e88c5\" }}> {cheveronIconF}</div>\n                      </span>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <CCollapse visible={!visibleF}>\n                {/* <ProjectStatusEvents /> */}\n                <FlatPrimeReactTable data={dataEvent} rows={rows} />\n              </CCollapse>\n            </div>\n          ) : (\n            \"\"\n          )}\n          {/* <ProjectStatusReportDetails/> */}\n          {open && <PdfPopup open={open} setOpen={setOpen} />}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default SearchDefaultTable;\n","import React, { useState, useEffect, useRef } from \"react\";\n// import \"./Search.scss\";\nimport {\n  FaChevronCircleDown,\n  FaChevronCircleUp,\n  FaSearch,\n  FaCaretDown,\n} from \"react-icons/fa\";\nimport { ReactSearchAutocomplete } from \"react-search-autocomplete\";\nimport { MultiSelect } from \"react-multi-select-component\";\nimport SearchDefaultTableProject from \"./SearchDefaultTableProject\";\nimport DatePicker from \"react-datepicker\";\nimport moment from \"moment/moment\";\nimport { CCollapse } from \"@coreui/react\";\nimport axios from \"axios\";\nimport { environment } from \"../../environments/environment\";\nimport GlobalValidation from \"../ValidationComponent/GlobalValidation\";\nimport { IoWarningOutline } from \"react-icons/io5\";\nimport Loader from \"../Loader/Loader\";\nimport GlobalHelp from \"../PrimeReactTableComponent/GlobalHelp\";\nimport SavedSearchGlobal from \"../PrimeReactTableComponent/SavedSearchGlobal\";\nimport { useLocation } from \"react-router-dom\";\nimport { BiCheck } from \"react-icons/bi\";\nimport ScreenBreadcrumbs from \"../Common/ScreenBreadcrumbs\";\n// import { environment } from \"../../environments/environment\";\nfunction SearchVendor() {\n  const baseUrl = environment.baseUrl;\n  // const [searchdata, setSearchdata] = useState(\"1145,1146,1147\");\n  const [searchdata1, setSearchdata1] = useState(\"1145,1146\");\n  const [deleteid, setDeleteId] = useState(\"\");\n  const [linkColumns, setLinkColumns] = useState([]);\n  const [checkboxSelect, setCheckboxSelect] = useState([]);\n\n  const [loaderTimer, setLoaderTimer] = useState(false);\n  const [dateTo, SetDateTo] = useState();\n  const [loading, setLoading] = useState(false);\n  const [searching, setSearching] = useState(false);\n  const [visible, setVisible] = useState(false);\n  const [cheveronIcon, setCheveronIcon] = useState(FaChevronCircleUp);\n  const [country, setCountry] = useState([]);\n  const [todate, SettoDate] = useState();\n  const abortController = useRef(null);\n  const controller = new AbortController();\n  const [selectedCountry, setSelectedCountry] = useState([]);\n  const [operator, setOperator] = useState([]);\n  const [VendorName, setVendorName] = useState([]);\n  const [date, SetDate] = useState(null);\n  const [data, SetData] = useState([]);\n  const [searchapidata, setSearchApiData] = useState([]);\n  const [disable, setDisable] = useState(true);\n  const [validationMessage, setValidationMessage] = useState(false);\n  const ref = useRef([]);\n  const [deptarr, setdeptarr] = useState([]);\n  const [displayState, setDisplayState] = useState(false);\n  const [startDate, setStartDate] = useState(null);\n  const [toDate, setToDate] = useState(null);\n\n  const [linkColumnsRoutes, setLinkColumnsRoutes] = useState([]);\n  const ArrowRenderer = ({ expanded }) => (\n    <>\n      {expanded ? (\n        <FaCaretDown className=\"chevronIcon\" />\n      ) : (\n        <FaCaretDown className=\"chevronIcon\" />\n      )}\n    </>\n  );\n  const [allocateTypes, setAllocatTypes] = useState([]);\n  const [bussinessUnitSeelect, setBussinessUnitSeelect] = useState(null);\n  const [customerSelect, setCustomerSelect] = useState(null);\n  const [projectallocateSelect, setProjectallocateSelect] = useState([]);\n  const [projectHealthSelect, setProjectHealthSelect] = useState(null);\n  const [businessUnit, setBussinessUnit] = useState([]);\n  const [customerSource, setCustomerSource] = useState(null);\n  const [data2, setData2] = useState([]);\n\n  //.log(\"--------------------------------\", businessUnit);\n  const loggedUserId = localStorage.getItem(\"resId\");\n  const initialValue = {\n    logUserId: +loggedUserId,\n    businessunit: null,\n    assignedto: null,\n    \"Project Health\": null,\n    projectStatus: \"1145,1146\",\n    projectsource: null,\n    projectId: null,\n    toDate,\n    startDate,\n  };\n  const [customerName, setCustomerName] = useState([]);\n  const [custname, setCustName] = useState(\"\");\n  const [projectsource, setProjectSource] = useState(\"\");\n  const currentDate = new Date();\n\n  let rows = 4;\n  const [endDate, setEndDate] = useState(new Date());\n  const [datainfo, setDatainfo] = useState([]);\n  const allocTypes = [\n    // {value:\"null\",label:\"ALL\"},\n    { value: \"1145\", label: \"Projects With Allocations\" },\n    { value: \"1146\", label: \"Projects Without Allocations\" },\n    { value: \"1147\", label: \"Complete(Last 90 Days)\" },\n  ];\n  const [selectedDepartments, setSelectedDepartments] = useState([\n    { value: \"1145\", label: \"Projects With Allocations\" },\n    { value: \"1146\", label: \"Projects Without Allocations\" },\n  ]);\n  //===========================\n  const pageurl = \"http://10.11.12.149:3000/#/executive/globalDashboard\";\n  const page_Name = \"Global Dashboard\";\n  const location = useLocation();\n  const searchParams = new URLSearchParams(location.search);\n  const id = searchParams.get(\"id\");\n  const [editmsg, setEditAddmsg] = useState(false);\n  const [filterData, setFilterData] = useState([]);\n  const [dataAccess, setDataAccess] = useState([]);\n\n  const [routes, setRoutes] = useState([]);\n  let currentScreenName = [\"Project Status Report\"];\n  let textContent = \"Delivery\";\n  const FilterData = () => {\n    axios({\n      method: \"get\",\n      url:\n        baseUrl +\n        `/dashboardsms/savedsearch/FiltersData?saved_search_id=${\n          id === null ? 0 : id\n        }`,\n    }).then(function (res) {\n      const getData = res.data;\n      setFilterData(getData);\n    });\n  };\n\n  useEffect(() => {\n    FilterData();\n  }, []);\n  const [formData, setFormData] = useState({});\n  console.log(formData);\n  useEffect(() => {\n    setFormData(() => {\n      if (id != null) {\n        return {\n          logUserId: +filterData.logUserId,\n          businessunit: filterData.businessunit,\n          assignedto: +filterData.assignedto,\n          \"Project Health\":\n            filterData[\"Project Health\"] == \"null\"\n              ? null\n              : filterData[\"Project Health\"],\n          projectStatus: filterData.projectStatus,\n          projectsource:\n            filterData.projectsource == \"null\"\n              ? null\n              : filterData.projectsource,\n          projectId: +filterData.projectId,\n        };\n      } else {\n        return {\n          logUserId: +loggedUserId,\n          businessunit: null,\n          assignedto: null,\n          \"Project Health\": null,\n          projectStatus: \"1145,1146\",\n          projectsource: null,\n          projectId: null,\n        };\n      }\n    });\n  }, [filterData]);\n  //.log(formData.assignedto);\n  //.log(customerName);\n  useEffect(() => {\n    if (id != null) {\n      const updatebusiness = businessUnit.filter((values) =>\n        formData.businessunit?.includes(values.value)\n      );\n      const assignedToArray = Array.isArray(formData.assignedto)\n        ? formData.assignedto\n        : [formData.assignedto];\n      const updatecustomer = customerName?.filter((values) =>\n        assignedToArray.includes(values.id)\n      );\n      const customerNamedata = JSON.stringify(\n        updatecustomer[0]?.full_name\n      )?.replace(/\"/g, \"\");\n      const updateallocTypes = allocTypes.filter((values) =>\n        formData.projectStatus?.includes(values.value)\n      );\n      const updateSource = formData.projectsource;\n\n      setProjectSource(updateSource);\n      setSelectedDepartments(updateallocTypes);\n      setCustName(customerNamedata);\n      setBussinessUnitSeelect(updatebusiness);\n    }\n  }, [\n    id,\n    formData.assignedto,\n    customerName,\n    formData.projectsource,\n    formData.businessunit,\n    formData.projectStatus,\n  ]);\n\n  useEffect(() => {\n    if (id != null) {\n      setTimeout(() => {\n        handleClickSavedSerch();\n      }, 4000);\n    }\n  }, [filterData]);\n\n  //=======================================\n  const handleAbort = () => {\n    abortController.current && abortController.current.abort();\n    setLoaderTimer(false);\n  };\n  const bussinessUnit = () => {\n    axios({\n      method: \"get\",\n      url: baseUrl + `/CostMS/cost/getDepartments`,\n    }).then((res) => {\n      var bunit = res.data;\n      setBussinessUnit(bunit);\n      //.log(bunit);\n      // setAssign((prevProps) => ({ ...prevProps, [\"Phase\"]: value }));\n    });\n  };\n\n  const getDocumentsPermission = () => {\n    axios\n      .get(baseUrl + `/CommonMS/master/getMenus?loggedUserId=${loggedUserId}`)\n      .then((resp) => {\n        const getData = resp.data;\n\n        const filteredMenuItem = getData.find((item) => item.id === \"533\");\n\n        setData2(getData);\n\n        getData.forEach((item) => {\n          if (item.display_name === textContent) {\n            setRoutes([item]);\n          }\n        });\n        // Find the \"Project Status Report\" submenu\n        const projectStatusReportSubMenu = getData\n          .find((item) => item.display_name === \"Delivery\")\n          .subMenus.find(\n            (subMenu) => subMenu.display_name === \"Project Status Report\"\n          );\n\n        // Extract the access_level value\n        const accessLevel = projectStatusReportSubMenu\n          ? projectStatusReportSubMenu.access_level\n          : null;\n\n        setDataAccess(accessLevel);\n      });\n  };\n  useEffect(() => {\n    getDocumentsPermission();\n  }, []);\n\n  const resourceFnc = () => {\n    axios\n      .get(\n        dataAccess === 500\n          ? baseUrl + `/ProjectMS/Engagement/getCustomerName`\n          : baseUrl +\n              `/CommonMS/master/getCustomersList?loggedUserId=${loggedUserId}`\n      )\n      .then((res) => {\n        let custom = res.data;\n        const filteredData = custom.filter((item) => item.id !== 81084541);\n        setCustomerName(filteredData);\n      });\n  };\n  useEffect(() => {\n    if (dataAccess === 500) {\n      resourceFnc();\n    }\n  }, [dataAccess]);\n\n  useEffect(() => {}, []);\n  const removeFirstEntry = () => {\n    SetData((prevDataList) => prevDataList.filter((_, index) => index !== 0));\n  };\n  useEffect(() => {\n    removeFirstEntry();\n  }, []);\n  const handleClick = async () => {\n    let countryIds = [];\n    setTimeout(() => {\n      setLoaderTimer(true);\n    }, 2000);\n    setLoading(true);\n\n    await axios({\n      method: \"post\",\n      url: baseUrl + `/ProjectMS/project/getProjectDetailsinfo`,\n      data: {\n        logUserId: formData.logUserId,\n        projectId: formData.projectId,\n        unitId:\n          formData.businessunit === null\n            ? formData.businessunit\n            : +formData.businessunit,\n        accountId: formData.assignedto,\n        healthId:\n          formData[\"Project Health\"] == \"null\"\n            ? null\n            : formData[\"Project Health\"],\n        stageId: formData.projectStatus,\n        prjSource:\n          formData.projectsource == \"null\" ? null : formData.projectsource,\n      },\n      // signal: abortController.current.signal,\n\n      headers: { \"Content-Type\": \"application/json\" },\n    }).then((response) => {\n      let data = response.data;\n      setCheckboxSelect([]);\n\n      //.log(data);\n      //.log(data?.id);\n\n      //  let headerData = [{ checkbox: \"checkbox\", Analytics: \"Analytics\", prj_health: \"Health\", project_name: \"Name\", prj_manager: \"Manager\", business_unit: \"Bussiness Ubit\", customer: \"Customer\", del_manager: \"Delivery Manager\", ct_title: \"Billing Model\",category:\"Project Type\" ,prj_exe: \"Exec Meth\", planned_start_dt: \"Pln St Dt\",pln_end_dt:\"Pln End Dt\",prj_status:\"Status\",team_size:\"Team Size\" }]\n\n      const Headerdata = [\n        {\n          Checkbox: \"Checkbox\",\n          Analytics: \"Analytics\",\n          prj_health: \"Health\",\n          project_name: \"Name\",\n          prj_manager: \"Manager\",\n          business_unit: \"Bussiness Unit\",\n          customer: \"Customer\",\n          del_manager: \"Delivery Manager\",\n          ct_title: \"Billing Model\",\n          category: \"Project Type\",\n          prj_exe: \"Exec Meth\",\n          planned_start_dt: \"Pln St Dt\",\n          pln_end_dt: \"Pln End Dt\",\n          prj_status: \"Status\",\n          team_size: \"Team Size\",\n        },\n      ];\n\n      SetData(Headerdata.concat(data));\n\n      let data1 = [\"project_name\"];\n      // let linkRoutes = [\"/vendor/vendorDoc/:id\"];/project/overview/789027\n      let linkRoutes = [\"/project/Overview/:projectId}\"];\n      setLinkColumns(data1);\n      setLinkColumnsRoutes(linkRoutes);\n      setLoading(false);\n      setVisible(!visible);\n      visible\n        ? setCheveronIcon(FaChevronCircleUp)\n        : setCheveronIcon(FaChevronCircleDown);\n      setLoaderTimer(false);\n      setDisplayState(false);\n\n      setSearching(true);\n    });\n  };\n  //========================================For Saved Search===============================\n  const handleClickSavedSerch = async () => {\n    let countryIds = [];\n    setTimeout(() => {\n      setLoaderTimer(true);\n    }, 2000);\n    setLoading(true);\n\n    await axios({\n      method: \"post\",\n      url: baseUrl + `/ProjectMS/project/getProjectDetailsinfo`,\n      data: {\n        logUserId: +filterData.logUserId,\n        projectId: +filterData.projectId,\n        unitId:\n          filterData.businessunit === null\n            ? filterData.businessunit\n            : +filterData.businessunit,\n        accountId: +filterData.assignedto,\n        healthId:\n          filterData[\"Project Health\"] == \"null\"\n            ? null\n            : filterData[\"Project Health\"],\n        stageId: filterData.projectStatus,\n        prjSource:\n          filterData.projectsource == \"null\" ? null : filterData.projectsource,\n      },\n      // signal: abortController.current.signal,\n\n      headers: { \"Content-Type\": \"application/json\" },\n    }).then((response) => {\n      let data = response.data;\n      setCheckboxSelect([]);\n\n      //.log(data);\n      //.log(data?.id);\n\n      //  let headerData = [{ checkbox: \"checkbox\", Analytics: \"Analytics\", prj_health: \"Health\", project_name: \"Name\", prj_manager: \"Manager\", business_unit: \"Bussiness Ubit\", customer: \"Customer\", del_manager: \"Delivery Manager\", ct_title: \"Billing Model\",category:\"Project Type\" ,prj_exe: \"Exec Meth\", planned_start_dt: \"Pln St Dt\",pln_end_dt:\"Pln End Dt\",prj_status:\"Status\",team_size:\"Team Size\" }]\n\n      const Headerdata = [\n        {\n          Checkbox: \"Checkbox\",\n          Analytics: \"Analytics\",\n          prj_health: \"Health\",\n          project_name: \"Name\",\n          prj_manager: \"Manager\",\n          business_unit: \"Bussiness Unit\",\n          customer: \"Customer\",\n          del_manager: \"Delivery Manager\",\n          ct_title: \"Billing Model\",\n          category: \"Project Type\",\n          prj_exe: \"Exec Meth\",\n          planned_start_dt: \"Pln St Dt\",\n          pln_end_dt: \"Pln End Dt\",\n          prj_status: \"Status\",\n          team_size: \"Team Size\",\n        },\n      ];\n\n      SetData(Headerdata.concat(data));\n\n      let data1 = [\"project_name\"];\n      // let linkRoutes = [\"/vendor/vendorDoc/:id\"];/project/overview/789027\n      let linkRoutes = [\"/project/Overview/:projectId}\"];\n      setLinkColumns(data1);\n      setLinkColumnsRoutes(linkRoutes);\n      setLoading(false);\n      setVisible(!visible);\n      visible\n        ? setCheveronIcon(FaChevronCircleUp)\n        : setCheveronIcon(FaChevronCircleDown);\n      setLoaderTimer(false);\n      setDisplayState(false);\n\n      setSearching(true);\n    });\n  };\n  //=================================================================\n  // useEffect(() => {}, [data]);\n\n  console.log(startDate);\n  const handleStartDateChange = (date) => {\n    setStartDate(date);\n    // Disable dates before the selected start date\n    setToDate(null); // Reset the to date when the start date changes\n  };\n\n  const handleToDateChange = (date) => {\n    setToDate(date);\n  };\n\n  const minDate = startDate ? new Date(startDate) : null;\n  const getCountries = () => {\n    axios.get(baseUrl + `/CostMS/cost/getCountries`).then((Response) => {\n      let countries = [];\n      let data = Response.data;\n      data.length > 0 &&\n        data.forEach((e) => {\n          let countryObj = {\n            label: e.country_name,\n            value: e.id,\n          };\n          countries.push(countryObj);\n        });\n      setCountry(countries);\n      setSelectedCountry(countries);\n    });\n  };\n\n  useEffect(() => {\n    getCountries();\n    bussinessUnit();\n  }, []);\n  const practice = [\n    { id: \"-1\", value: \"<Please Select>\" },\n    { id: \"le\", value: \"≤\" },\n    { id: \"ge\", value: \"≥\" },\n    { id: \"eq\", value: \"=\" },\n  ];\n\n  const onChangePractice = (e) => {\n    const { value, id } = e.target;\n\n    setOperator(id);\n    if (e.target.value == \"select\") {\n      setDisable(e.target.value);\n      SetDate(null);\n    } else {\n      setDisable(false);\n    }\n\n    setFormData({ ...formData, [id]: value });\n  };\n\n  const DateChange = (e) => {\n    SetDate(e);\n    let formattedFromDate = moment(e).format(\"YYYY-MM-DD\");\n    setFormData({ ...formData, date: formattedFromDate });\n  };\n\n  const getName = (e) => {\n    const { value, id } = e.target;\n    setVendorName(value);\n    setFormData({ ...formData, VendoreName: value });\n  };\n  //.log(formData, \"line no----178\");\n\n  const HelpPDFName = \"ProjectStatusReport.pdf\";\n  const Headername = \"Project Status Report Help\";\n\n  const generateDropdownLabel = (selectedOptions, allOptions) => {\n    const selectedValues = selectedOptions.map((option) => option.value);\n\n    const allValues = allOptions.map((item) => item.value);\n\n    if (\n      selectedValues.length !== 0 &&\n      selectedValues.length === allValues.length\n    ) {\n      return \"<< ALL >>\";\n    } else {\n      return selectedOptions.map((option) => option.label).join(\", \");\n    }\n  };\n  return (\n    <div>\n      <div className=\"pageTitle\">\n        <div className=\"childOne\"></div>\n        <div className=\"childTwo\">\n          <h2>Project Status Report</h2>\n        </div>\n        <div className=\"childThree\"></div>\n      </div>\n      <div className=\"col-md-12  mt-2\">\n        {validationMessage ? (\n          <div\n            className=\"errMsg\"\n            style={{ backgroundColor: \"#F2DEDE\", color: \" #B94A48\" }}\n            timeout\n          >\n            {\" \"}\n            <span>\n              {\" \"}\n              <IoWarningOutline /> Please select the valid values for\n              highlighted fields{\" \"}\n            </span>\n          </div>\n        ) : (\n          \"\"\n        )}\n        {editmsg ? (\n          <div className=\"statusMsg success\">\n            <span className=\"errMsg\">\n              <BiCheck size=\"1.4em\" /> &nbsp; Search created successfully.\n            </span>\n          </div>\n        ) : (\n          \"\"\n        )}\n      </div>\n      <ScreenBreadcrumbs\n        routes={routes}\n        currentScreenName={currentScreenName}\n      />\n\n      <div className=\"group mb-3 customCard \">\n        <div className=\"col-md-12 collapseHeader \">\n          <h2>Search Filters</h2>\n          <div className=\"helpBtn\">\n            <GlobalHelp pdfname={HelpPDFName} name={Headername} />\n          </div>\n          <div className=\"saveBtn\">\n            <SavedSearchGlobal\n              setEditAddmsg={setEditAddmsg}\n              pageurl={pageurl}\n              page_Name={page_Name}\n              payload={formData}\n            />\n          </div>\n          &nbsp;\n          <div\n            onClick={() => {\n              setVisible(!visible);\n              visible\n                ? setCheveronIcon(FaChevronCircleUp)\n                : setCheveronIcon(FaChevronCircleDown);\n            }}\n          >\n            <span>{cheveronIcon}</span>\n          </div>\n        </div>\n        <CCollapse visible={!visible}>\n          <div className=\"group-content row\">\n            <div className=\" col-md-3 mb-2\">\n              <div className=\"form-group row\">\n                <label className=\"col-5\" htmlFor=\"businessunit\">\n                  Business Unit\n                </label>\n                <span className=\"col-1 p-0\">:</span>\n                <div className=\"col-6\">\n                  <select\n                    id=\"businessunit\"\n                    onChange={(e) => {\n                      setBussinessUnitSeelect(e.target.value);\n                      //.log(bussinessUnitSeelect);\n                      setFormData((prevVal) => ({\n                        ...prevVal,\n                        [\"businessunit\"]: e.target.value,\n                      }));\n                    }}\n                    value={formData.businessunit}\n                  >\n                    <option value=\"null\"> &lt;&lt;ALL&gt;&gt;</option>\n                    {businessUnit.map((Item) => (\n                      <option value={Item.value}> {Item.label}</option>\n                    ))}\n                  </select>\n                </div>\n              </div>\n            </div>\n            <div className=\" col-md-3 mb-2\">\n              <div className=\"form-group row\">\n                <label className=\"col-5\" htmlFor=\"customer\">\n                  Customer\n                </label>\n                <span className=\"col-1 p-0\">:</span>\n                <div className=\"col-6\">\n                  <div className=\"autoComplete-container \">\n                    <span className=\"auto\" id=\"auto\">\n                      <div className=\"autoComplete-container\">\n                        <ReactSearchAutocomplete\n                          items={customerName}\n                          inputSearchString={custname}\n                          type=\"Text\"\n                          name=\"assignedto\"\n                          id=\"assignedto\"\n                          customerName={customerName}\n                          // customerNames={customerNames}\n                          fuseOptions={{ keys: [\"id\", \"full_name\"] }}\n                          resultStringKeyName=\"full_name\"\n                          resourceFnc={resourceFnc}\n                          // className=\"AutoComplete\"\n                          // onChange={(e) => { setCustomerSelect(e.target.value)\n                          //   //.log(customerSelect)\n\n                          // }}\n\n                          onSelect={(e) => {\n                            // setCustomerSelect((prevProps) => ({\n                            //   ...prevProps,\n                            //   \"accountId\": e.id,\n                            // }));\n                            setCustomerSelect(e.id);\n                            setFormData((prevProps) => ({\n                              ...prevProps,\n                              assignedto: e.id,\n                            }));\n                          }}\n                          showIcon={false}\n                        />\n                      </div>\n                    </span>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className=\" col-md-3 mb-2\">\n              <div className=\"form-group row\">\n                <label className=\"col-5\" htmlFor=\"projectname\">\n                  Project Name\n                </label>\n                <span className=\"col-1 p-0\">:</span>\n                <div className=\"col-6\">\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    id=\"projectname\"\n                    placeholder\n                  />\n                </div>\n              </div>\n            </div>\n            <div className=\" col-md-3 mb-2\">\n              <div className=\"form-group row\">\n                <label className=\"col-5\" htmlFor=\"Project Health \">\n                  Project Health{\" \"}\n                </label>\n                <span className=\"col-1 p-0\">:</span>\n                <div className=\"col-6\">\n                  <select\n                    id=\"Project Health \"\n                    onChange={(e) => {\n                      setProjectHealthSelect(e.target.value);\n                      //.log(projectHealthSelect);\n                      setFormData((prevVal) => ({\n                        ...prevVal,\n                        [\"Project Health\"]: e.target.value,\n                      }));\n                    }}\n                    value={formData[\"Project Health\"]}\n                  >\n                    <option value=\"null\"> &lt;&lt;ALL&gt;&gt;</option>\n                    <option value=\"498\">On Schedule</option>\n                    <option value=\"499\">Potential Issues</option>\n                    <option value=\"500\">Serious Issues</option>\n                  </select>\n                </div>\n              </div>\n            </div>\n            <div className=\" col-md-3 mb-2\">\n              <div className=\"form-group row\">\n                <label className=\"col-5\" htmlFor=\"prjalloc\">\n                  Prj Alloc\n                </label>\n                <span className=\"col-1 p-0\">:</span>\n                <div className=\"col-6\">\n                  <MultiSelect\n                    ArrowRenderer={ArrowRenderer}\n                    valueRenderer={generateDropdownLabel}\n                    id=\"projectStatus\"\n                    options={allocTypes}\n                    hasSelectAll={true}\n                    isLoading={false}\n                    shouldToggleOnHover={false}\n                    disableSearch={false}\n                    value={selectedDepartments}\n                    disabled={false}\n                    onChange={(s) => {\n                      setSelectedDepartments(s);\n                      let filteredValues = [];\n                      s.forEach((d) => {\n                        filteredValues.push(d.value);\n                      });\n\n                      setSearchdata1(filteredValues.toString());\n                      setFormData((prevVal) => ({\n                        ...prevVal,\n                        [\"projectStatus\"]: filteredValues.toString(),\n                      }));\n                    }}\n                  />\n                </div>\n              </div>\n            </div>\n            <div className=\" col-md-3 mb-2\">\n              <div className=\"form-group row\">\n                <label className=\"col-5\" htmlFor=\"projectsource\">\n                  Project Source\n                </label>\n                <span className=\"col-1 p-0\">:</span>\n                <div className=\"col-6\">\n                  <select\n                    id=\"projectsource\"\n                    onChange={(e) => {\n                      setCustomerSource(e.target.value);\n                      setFormData((prevVal) => ({\n                        ...prevVal,\n                        [\"projectsource\"]: e.target.value,\n                      }));\n                    }}\n                    value={formData.projectsource}\n                  >\n                    <option value=\"null\"> &lt;&lt;ALL&gt;&gt;</option>\n                    <option value=\"ppm\">PPM</option>\n                    <option value=\"Projector\">Projector</option>\n                  </select>\n                </div>\n              </div>\n            </div>\n            <div className=\" col-md-3 mb-2\">\n              <div className=\"form-group row\">\n                <label className=\"col-5\" htmlFor=\"drf\">\n                  Data Range From{\" \"}\n                </label>\n                <span className=\"col-1 p-0\">:</span>\n                <div className=\"col-6\">\n                  {/* <DatePicker\n                    // selected={selectedDate}\n                    showMonthDropdown\n                    showYearDropdown\n                    selected={startDate}\n                    onChange={(date) => setStartDate(date)}\n                    dateFormat=\"dd-MMM-yyyy\"\n                    maxDate={maxDate}\n                    dropdownMode=\"select\"\n                    placeholderText=\"From Date\"\n                    disabledKeyboardNavigation\n                  /> */}\n                  <DatePicker\n                    id=\"toDate\"\n                    showMonthDropdown\n                    showYearDropdown\n                    selected={startDate}\n                    onChange={handleStartDateChange}\n                    dateFormat=\"dd-MMM-yyyy\"\n                    dropdownMode=\"select\"\n                    placeholderText=\"From Date\"\n                    disabledKeyboardNavigation\n                  />\n                </div>\n              </div>\n            </div>\n            <div className=\" col-md-3 mb-2\">\n              <div className=\"form-group row\">\n                <label className=\"col-5\" htmlFor=\"to\">\n                  To{\" \"}\n                </label>\n                <span className=\"col-1 p-0\">:</span>\n                <div className=\"col-6\">\n                  <DatePicker\n                    showMonthDropdown\n                    showYearDropdown\n                    dateFormat=\"dd-MMM-yyyy\"\n                    selected={toDate}\n                    onChange={handleToDateChange}\n                    minDate={minDate}\n                    dropdownMode=\"select\"\n                    placeholderText=\"To Date\"\n                  />\n                  {/* <DatePicker\n                    name=\"toDate\"\n                    id=\"toDate\"\n                    selected={todate}\n                    onChange={(e) => {\n                      SettoDate(e);\n                      //.log(moment(date).format(\"yyyy-MM-DD\"));\n                      setFormData((prev) => ({\n                        ...prev,\n                        [\"toDate\"]: moment(e).format(\"yyyy-MM-DD\"),\n                      }));\n                      // setMonth(e);\n                    }}\n                    locale=\"en-GB\"\n                    placeholderText=\"To Date\"\n                    // onChange={(date) => setStartDate(date)}\n                    dateFormat=\"dd-MMM-yyyy\"\n                    onKeyDown={(e) => {\n                      e.preventDefault();\n                    }}\n                  /> */}\n                </div>\n              </div>\n            </div>\n            {/* <div className=\"col-md-12 col-sm-12 col-xs-12 btn-container center my-2\">\n\n              <button type=\"submit\" className=\"btn btn-primary\"\n            \n            onClick={handleClick}\n              >\n\n                Search{\" \"}\n\n              </button>\n\n            </div> */}\n\n            <center>\n              <button\n                type=\"button\"\n                className=\"btn btn-primary\"\n                title=\"Search\"\n                // onClick={handleClick}\n                onClick={() => {\n                  handleClick();\n                  setCheckboxSelect([]);\n                }}\n              >\n                <FaSearch /> Search{\" \"}\n              </button>\n            </center>\n          </div>\n        </CCollapse>\n      </div>\n      {searching ? (\n        <SearchDefaultTableProject\n          data={data}\n          deleteid={deleteid}\n          setDeleteId={setDeleteId}\n          SetData={SetData}\n          setDisplayState={setDisplayState}\n          displayState={displayState}\n          handleClick={handleClick}\n          // datainfo={datainfo}\n          searchapidata={searchapidata}\n          deptarr={deptarr}\n          linkColumns={linkColumns}\n          linkColumnsRoutes={linkColumnsRoutes}\n          checkboxSelect={checkboxSelect}\n          setCheckboxSelect={setCheckboxSelect}\n          // getDetailsInfo={getDetailsInfo}\n        />\n      ) : (\n        \" \"\n      )}\n      {loaderTimer ? <Loader handleAbort={handleAbort} /> : \"\"}\n    </div>\n  );\n}\n\nexport default SearchVendor;\n"],"names":["props","projectId","useState","data","setData","headerData","setHeaderData","exportData","baseUrl","environment","dates","fromDate","moment","startOf","add","format","toDate","dt","setDt","console","log","useEffect","axios","then","res","GetData","fData","planned_activity","catch","error","RiskValueChange","className","title","dynamicColumns","Object","keys","map","col","i","sortable","body","field","header","JSON","parse","stringify","style","float","cursor","size","onClick","prev","subtract","CellRendererPrimeReactDataTable","rows","accomplishment","checkboxSelect","SetData","pid","deptarr","deleteid","setDeleteId","setCheckboxSelect","displayState","handleClick","searchapidata","setDisplayState","linkColumnsRoutes","linkColumns","setMainData","setExportColumns","length","dtt","headDt","forEach","d","push","dataKey","open","setOpen","getData","setDisplayStateView","itemPerPage","setLink","setDisplay","setPRojectId","visibleA","setVisibleA","visibleB","setVisibleB","FaChevronCircleDown","cheveronIconB","setCheveronIconB","visibleD","setVisibleD","cheveronIconD","setCheveronIconD","cheveronIconA","setCheveronIconA","visibleC","setVisibleC","cheveronIconC","setCheveronIconC","visibleE","setVisibleE","cheveronIconE","setCheveronIconE","visibleF","setVisibleF","cheveronIconF","setCheveronIconF","dataRisks","setDataRisks","nf","Intl","NumberFormat","dataIssues","setDataIssues","dataDependency","setDataDependency","dataScope","setDataScope","dataEvent","setDataEvent","dataKpi","setDataKpi","datainfo","setDatainfo","key","setKey","setKey1","datesPlaned","fromDatePlan","toDatePlan","globalFilterValue","setGlobalFilterValue","global","value","matchMode","FilterMatchMode","filters","setFilters","onGlobalFilterChange","e","target","_filters","onChange","placeholder","getDetailsInfo","getDataRisks","getDataIssues","getDataDependency","getDataScope","getDataEvents","getDataKpi","method","url","require","print","pdf","jsPDF","project_name","prj_manager","business_unit","del_manager","ct_title","category","prj_exe","planned_start_dt","pln_end_dt","prj_status","team_size","text","autoTable","startY","theme","styles","headStyles","alternateRowStyles","rowStyles","tableLineColor","columnStyles","save","riskName","riskType","riskSource","riskImpact","probabOcc","riskValue","assignedTo","riskOccurred","riskStatus","occuredDate","createdBy","concat","issueName","criticality","status","dueDate","issueSource","rcaDone","comments","dependency","type","priority","raisedBy","raisedDate","targetDate","phaseAffected","Status","description","change_req_date","financial_impact","event","date","id","LinkTemplate","marginLeft","viewHandler","LinkTemplateAction","textAlign","LinkTemplateCheck","prj_health","align","LinkTemplateLink","split","to","LinkBillingModel","tyle","LinkTeamSize","EndDate","planned_end_dt","Manager","setTimeout","updatedData","filter","item","index","PdfPopup","visible","onClose","marginTop","paddingLeft","marginBottom","currentPageReportTemplate","paginator","selection","rowsPerPageOptions","selectAll","showGridlines","pagination","paginationPerPage","paginationRowsPerPageOptions","paginationComponentOptions","rowsPerPageText","rangeSeparatorText","responsiveLayout","onSelectionChange","handleChange","alignHeader","selectionMode","customer","backgroundColor","color","fontSize","fontWeight","sub_practice","role","curr_phase","cont_terms","est_planned_end_dt","pComplete","billable_utilized","planned_team_size","actual_team_size","ebillable","Details","border","paddingBottom","paddingTop","class","width","height","var_dc","var_dur","var_efforts","var_margin","var_oc","var_rev","parseInt","cont_efforts","pln_efforts","ptd_efforts","atd_efforts","etc_efforts","eac_efforts","cont_rev","pln_rev","ptd_rev","atd_rev","etc_rev","eac_rev","cont_dc","pln_dc","atd_dc","etc_dc","eac_dc","cont_oc","pln_oc","ptd_oc","atd_oc","etc_oc","eac_oc","cont_margin","pln_margin","ptd_margin","atd_margin","etc_margin","eac_margin","cont_dur","pln_dur","ptd_dur","atd_dur","etc_dur","eac_dur","boxShadow","FaChevronCircleUp","ProjectStatusAccomplishments","ProjectStatusPlannedActivities","FlatPrimeReactTable","setSearchdata1","setLinkColumns","loaderTimer","setLoaderTimer","setLoading","searching","setSearching","setVisible","cheveronIcon","setCheveronIcon","setCountry","abortController","useRef","AbortController","setSelectedCountry","validationMessage","startDate","setStartDate","setToDate","setLinkColumnsRoutes","setBussinessUnitSeelect","setCustomerSelect","setProjectHealthSelect","businessUnit","setBussinessUnit","setCustomerSource","setData2","loggedUserId","localStorage","getItem","customerName","setCustomerName","custname","setCustName","setProjectSource","Date","allocTypes","label","selectedDepartments","setSelectedDepartments","location","useLocation","URLSearchParams","search","get","editmsg","setEditAddmsg","filterData","setFilterData","dataAccess","setDataAccess","routes","setRoutes","formData","setFormData","logUserId","businessunit","assignedto","projectStatus","projectsource","updatebusiness","values","includes","assignedToArray","Array","isArray","updatecustomer","customerNamedata","full_name","replace","updateallocTypes","updateSource","handleClickSavedSerch","resp","find","display_name","projectStatusReportSubMenu","subMenus","subMenu","accessLevel","access_level","resourceFnc","filteredData","prevDataList","_","unitId","accountId","healthId","stageId","prjSource","headers","response","Checkbox","Analytics","minDate","Response","countries","countryObj","country_name","bunit","timeout","ScreenBreadcrumbs","currentScreenName","GlobalHelp","pdfname","name","SavedSearchGlobal","pageurl","page_Name","payload","htmlFor","prevVal","Item","ReactSearchAutocomplete","items","inputSearchString","fuseOptions","resultStringKeyName","onSelect","prevProps","showIcon","ArrowRenderer","expanded","valueRenderer","selectedOptions","allOptions","selectedValues","option","allValues","join","options","hasSelectAll","isLoading","shouldToggleOnHover","disableSearch","disabled","s","filteredValues","toString","showMonthDropdown","showYearDropdown","selected","dateFormat","dropdownMode","placeholderText","disabledKeyboardNavigation","SearchDefaultTableProject","Loader","handleAbort","current","abort"],"sourceRoot":""}