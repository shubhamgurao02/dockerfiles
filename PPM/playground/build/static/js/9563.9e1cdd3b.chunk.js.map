{"version":3,"file":"static/js/9563.9e1cdd3b.chunk.js","mappings":"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","sources":["views/ServiceComponent/SfpipelineDocument.js","views/ServiceComponent/SfPipeline.js","../node_modules/@mui/icons-material/DownloadForOfflineRounded.js"],"sourcesContent":["import React from \"react\";\nimport { useState } from \"react\";\nimport Loader from \"../Loader/Loader\";\nimport axios from \"axios\";\nimport { environment } from \"../../environments/environment\";\nimport { useRef } from \"react\";\nimport { useEffect } from \"react\";\nimport DownloadForOfflineRoundedIcon from \"@mui/icons-material/DownloadForOfflineRounded\";\nconst SfpipelineDocument = (props) => {\n  const { type } = props;\n  const [sfDocs, setSfDocs] = useState([]);\n  const [open, setOpen] = useState(false);\n  const baseUrl = environment.baseUrl;\n  const abortController = useRef(null);\n  const [docName, setDocName] = useState(\"\");\n  const getSfDocuments = () => {\n    // setTimeout(() => {\n    //   setOpen(true);\n    // }, 2000);\n    setOpen(false);\n    abortController.current = new AbortController();\n\n    axios({\n      method: \"post\",\n      url: baseUrl + `/SalesMS/sales/getSFOppDocs`,\n      data: {\n        oppId: type,\n      },\n    }).then((resp) => {\n      const data = resp.data;\n      setSfDocs(data.data);\n      setOpen(false);\n\n      window.scrollTo({ top: 1500, behavior: \"smooth\" });\n    });\n  };\n\n  useEffect(() => {}, [sfDocs]);\n\n  useEffect(() => {\n    getSfDocuments();\n  }, [type]);\n\n  const handleAbort = () => {\n    abortController.current && abortController.current.abort();\n    setOpen(false);\n  };\n  const handleDownload = (data) => {\n    const docId = data.docId;\n    const docType = data.type;\n    const docFileName = data.name;\n\n    const docUrl =\n      baseUrl + `SalesMS/sales/downloadDoc?docId=${docId}&type=${docType}`;\n\n    return <a href={docUrl}></a>;\n  };\n\n  const SfDocsTable = ({ sfDocs }) => {\n    return (\n      <div className=\"darkHeader\">\n        <table\n          className=\"table table-bordered attainTable ellipsis\"\n          style={{ width: \"20%\" }}\n        >\n          <thead\n            style={{\n              textAlign: \"center\",\n              backgroundColor: \"#f4f4f4\",\n              color: \"black\",\n            }}\n          >\n            <tr className=\"fs10\">\n              <th>Document Name</th>\n              <th style={{ textAlign: \"center\" }}>Action</th>\n            </tr>\n          </thead>\n          <tbody>\n            {sfDocs?.data && sfDocs.data.length > 0 ? (\n              sfDocs.data.map((doc) => (\n                <tr key={doc.docId}>\n                  <td>{doc.name}</td>\n                  <td style={{ textAlign: \"center\" }}>\n                    {doc.type == \"DocLInk\" ? (\n                      <a\n                        href={\n                          baseUrl +\n                          `/SalesMS/sales/downloadDoc?docId=${doc.docId}&type=${doc.docType}`\n                        }\n                      >\n                        <DownloadForOfflineRoundedIcon\n                          style={{ color: \"#86b558\" }}\n                          //   onClick={() => {\n                          //     handleDownload(sfDocs.data[0]);\n                          //   }}\n                        />\n                      </a>\n                    ) : (\n                      \"\"\n                    )}\n                  </td>\n                </tr>\n              ))\n            ) : (\n              <tr>\n                <td colSpan=\"2\" style={{ textAlign: \"center\" }}>\n                  No Document Found\n                </td>\n              </tr>\n            )}\n          </tbody>\n        </table>\n      </div>\n    );\n  };\n  return (\n    <>\n      {/* <div class=\"\" style={{padding: '5px !important'}}>\n                <span style= {{fontSize: '13px',fontWeight:'bold'}}>Sf Documents For </span>\n                <span style={{ color: '#297ab0', fontSize: '15px', fontWeight: 'bolder' }}>\n  {sfDocs?.data && sfDocs.data.length > 0 ? sfDocs.data[0].name : ''}\n</span>\n            </div> */}\n      <div className=\"col-lg-12 col-md-12 col-sm-12 mt10 no-padding\">\n        {open ? <Loader handleAbort={handleAbort} /> : \"\"}\n        <>\n          <SfDocsTable sfDocs={sfDocs} />\n        </>\n      </div>\n    </>\n  );\n};\n\nexport default SfpipelineDocument;\n","import Sfpipeline from \"./SfPipeline.json\";\nimport {\n  FaChevronCircleRight,\n  FaChevronCircleLeft,\n  FaCaretDown,\n  FaCaretRight,\n  FaCircle,\n  FaTimes,\n} from \"react-icons/fa\";\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport axios from \"axios\";\nimport { environment } from \"../../environments/environment\";\nimport { MdDescription } from \"react-icons/md\";\nimport SfpipelineDocument from \"./SfpipelineDocument\";\nimport \"./ViewTable.scss\";\nimport { Row } from \"antd\";\n\nexport default function SfPipeline({ reportRunId, summval, onCloseTable }) {\n  const baseUrl = environment.baseUrl;\n  const [showTable, setShowTable] = useState(true);\n  const [table, setTable] = useState(false);\n  const [selectedOpportunity, setSelectedOpportunity] = useState(\"\");\n\n  const [Sfpipeline, setSfpipeline] = useState([]);\n  const getserviceData = () => {\n    axios\n      .post(`${baseUrl}/SalesMS/services/getSFPipeLineData`, {\n        reportRunId: reportRunId,\n        summval:\n          summval === null || summval === \"\" || summval === undefined\n            ? \"none\"\n            : summval,\n      })\n      .then((resp) => {\n        const data = resp.data.data;\n        const array = resp.data.serviceSfPipeline.split(\",\");\n        const newArray = data.map((item) => {\n          let k = JSON.parse(JSON.stringify(item, array, 4));\n          return k;\n        });\n        setSfpipeline(newArray);\n      })\n      .catch((err) => {});\n  };\n\n  const closeTable = () => {\n    setShowTable(false);\n    onCloseTable();\n  };\n\n  const prosicon = {\n    1: <FaCircle size={\"0.8em\"} style={{ color: \"purple\" }} />,\n    0: <FaCircle size={\"0.8em\"} style={{ color: \"green\" }} />,\n  };\n\n  const [expanded, setexpanded] = useState([]);\n  const allExecutives = Sfpipeline.filter((item) => item.lvl === 1).map(\n    (item) => item.executive\n  );\n  const [type, setType] = useState(\"\");\n  const [salesOppoId, setSalesOppoId] = useState(\"\");\n  const [colexpanded, setcolexpanded] = useState([]);\n  const clickExpand = (exec) => {\n    if (exec === \"Summary\") {\n      setexpanded((prevState) => {\n        return prevState.length === allExecutives.length ? [] : allExecutives;\n      });\n    } else {\n      setexpanded((prevState) => {\n        return prevState.includes(exec)\n          ? prevState.filter((item) => item !== exec)\n          : [...prevState, exec];\n      });\n    }\n  };\n\n  const clickExpandcols = (quartr) => {\n    setcolexpanded((prevState) => {\n      return prevState.includes(quartr)\n        ? prevState.filter((item) => item !== quartr)\n        : [...prevState, quartr];\n    });\n  };\n\n  let toggler = 0;\n  let coltoggler = 0;\n  const conditions = [\n    \"id\",\n    \"isProspect\",\n    \"lvl\",\n    \"opp_id\",\n    \"practice\",\n    \"customer_id\",\n    \"customer\",\n    \"country_id\",\n    \"account_owner_id\",\n    \"account_owner\",\n    \"pr_id\",\n  ];\n  // const conditions = [\"id\",\"executive\",\"practice\",\"country\",\"customer\",\"opportunity\",\"closedDate\",\"amount\",\"probability\",\"country_id\",\"account_owner_id\",\"account_owner\"\n  // \"isProspect\",\"lvl\",\"pr_id\",\"opp_id\"]\n  const expandableCols = [\n    \"opportunity\",\n    \"closedDate\",\n    \"probability\",\n    \"country\",\n  ];\n\n  const tdArray = [];\n  const thArray = [];\n\n  Sfpipeline.forEach((row) => {\n    const rowArray = [];\n    let cust;\n\n    toggler =\n      row[\"lvl\"] === 2 ? toggler : expanded.includes(row.executive) ? 1 : 0;\n\n    for (const key in row) {\n      if (key.includes(\"Q\")) {\n        coltoggler = colexpanded.includes(key.split(\"_\")[1]) ? 1 : 0;\n      }\n\n      if (\n        !conditions.includes(key) &&\n        (expanded.length > 0 ? true : !expandableCols.includes(key))\n      ) {\n        if (row.id < 0) {\n          thArray.push(\n            <th\n              key={key}\n              style={{\n                textAlign: \"center\",\n                display:\n                  coltoggler === 0 &&\n                  key.includes(\"sf\") &&\n                  !(key.includes(\"Q\") || key.includes(\"total\"))\n                    ? \"none\"\n                    : \"\",\n              }}\n            >\n              {typeof row[key] === \"string\" && row[key].includes(\"^&\")\n                ? row[key].split(\"^&\")[0]\n                : row[key]}\n              {row.id === -2 &&\n                typeof row[key] === \"string\" &&\n                row[key].includes(\"Quart\") && (\n                  <span\n                    onClick={() => {\n                      clickExpandcols(key.split(\"_\")[1]);\n                    }}\n                  >\n                    {colexpanded.includes(key.split(\"_\")[1]) ? (\n                      <FaChevronCircleLeft\n                        size={\"0.8em\"}\n                        title=\"Hide Details\"\n                        style={{ cursor: \"pointer\", marginLeft: \"5px\" }}\n                      />\n                    ) : (\n                      <FaChevronCircleRight\n                        size={\"0.8em\"}\n                        title=\"Show Details\"\n                        style={{ cursor: \"pointer\", marginLeft: \"5px\" }}\n                      />\n                    )}\n                  </span>\n                )}\n            </th>\n          );\n        } else {\n          rowArray.push(\n            <td\n              className={\n                key.includes(\"Q\")\n                  ? key.split(\"_\")[1][1] % 2 === 0\n                    ? \"even\"\n                    : \"odd\"\n                  : key.includes(\"total\")\n                  ? \"total\"\n                  : key.includes(\"0\")\n                  ? key.split(\"_\")[1] % 2 === 0\n                    ? \"innereven\"\n                    : \"innerodd\"\n                  : key === \"amount\" && row[\"lvl\"] === 1 \n                  ? \"amountCollapse1\"\n                  : key === \"probability\" && row[\"lvl\"] === 1 \n                  ? \"probCollapse1\"\n                  : key === \"probability\"\n                  ? \"probCollapse\"\n                  : key === \"closedDate\" && row[\"lvl\"] === 1 \n                  ? \"closedDateCollapse1\"\n                  : key === \"opportunity\" && row[\"lvl\"] === 1 \n                  ? \"opportunityCollapse1\"\n                  : key === \"country\" && row[\"lvl\"] === 1 \n                  ? \"countryCollapse1\"\n                  : \"\" \n              }\n              key={key}\n              style={{\n                display:\n                  (toggler === 0 && row[\"lvl\"] === 2) ||\n                  (coltoggler === 0 &&\n                    key.includes(\"sf\") &&\n                    !(key.includes(\"Q\") || key.includes(\"total\")))\n                    ? \"none\"\n                    : \"\",\n              }}\n            >\n              {key === \"executive\" && row[\"lvl\"] < 2 && (\n                <span  className={\n                  key === \"executive\"  && row[\"lvl\"] === 2\n                    ? \"collapsedRow2\"\n                    : \"\" || row[\"lvl\"] === 3\n                    ? \"collapsedRow3\"\n                    : \"\"\n                }>\n                  <span onClick={() => clickExpand(row.executive)}>\n                    {expanded.includes(row.executive) ||\n                    expanded.length === allExecutives.length ? (\n                      <FaCaretDown\n                        size={\"1.2em\"}\n                        title=\"Collapse\"\n                        style={{ cursor: \"pointer\", color: \"#428bca\" }}\n                      />\n                    ) : (\n                      <FaCaretRight\n                        size={\"1.2em\"}\n                        title=\"Expand\"\n                        style={{ cursor: \"pointer\", color: \"#428bca\" }}\n                      />\n                    )}\n                  </span>\n                </span>\n              )}\n              {key === \"customer\" && row[\"customer\"] !== \" \" && (\n                <span>{prosicon[row[\"isProspect\"]]}</span>\n              )}\n              {key === \"executive\" && row[\"lvl\"] === 2 ? (\n                <span title={row[\"customer\"]} className=\"collapsedRow\">\n                  {prosicon[row[\"isProspect\"]]}\n                  {row[\"customer\"]}{\" \"}\n                </span>\n              ) : row[\"lvl\"] === 3 && key === \"opportunity\" ? (\n                <span title={row[key]}>{row[\"pr_id\"]}</span>\n              ) : row[\"lvl\"] === 3 &&\n                (key === \"executive\" ||\n                  key === \"probability\" ||\n                  key === \"closedDate\") ? null : key === \"opportunity\" &&\n                row[\"customer_id\"] !== 0 ? (\n                <span title={row[key]}>\n                  <a\n                    href={`http://d300000000qxieam.my.salesforce.com/?ec=302&startURL=%2Fvisualforce%2Fsession%3Furl%3Dhttp%253A%252F%252Fd300000000qxieam.lightning.force.com%252Flightning%252Fr%252FOpportunity%252F${row[\"opp_id\"]}%252Fview`}\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                  >\n                    {row[key]}\n                  </a>\n                  <MdDescription\n                    title=\"Notes\"\n                    style={{ float: \"right\", color: \"grey\", cursor: \"pointer\" }}\n                    size={\"1.2em\"}\n                    onClick={() => {\n                      setType(row[\"opp_id\"]);\n                      setSalesOppoId(row[\"id\"]);\n                      setTable(true);\n                      setSelectedOpportunity(row[\"opportunity\"]);\n                    }}\n                  />\n                </span>\n              ) : (\n                <span title={row[key]}>\n                  {key === \"probability\" && row[key] > 0 ? (\n                    <span\n                      style={{ paddingLeft: \"45px\" }}\n                    >{`${row[key]}%`}</span>\n                  ) : key === \"executive\" ? (\n                    row[key]\n                  ) : key === \"closedDate\" ? (\n                    <span style={{ paddingLeft: \"40px\" }}>{row[key]}</span>\n                  ) : key === \"probability\" ? (\n                    row[key]\n                  ) : key === \"opportunity\" ? (\n                    row[key]\n                  ) : key === \"country\" ? (\n                    <span style={{ paddingLeft: \"42px\" }}>{row[key]}</span>\n                  ): key === \"amount\" ? (\n                    <span style={{float:'right' }}>{Math.round(row[key]).toLocaleString()}</span>\n                  )\n                   : (\n                   <span > {Math.round(row[key]).toLocaleString()}</span>\n                  )}\n                </span>\n              )}\n            </td>\n          );\n        }\n      }\n    }\n\n    if (row.id >= 0) {\n      const isLvl3RowVisible =\n        row.lvl === 3 && expanded.includes(row.executive);\n      tdArray.push(\n        <tr\n          key={\n            row.id +\n            row.practice +\n            row.country +\n            row.executive +\n            row.pr_id +\n            row.opp_id\n          }\n          style={{\n            display: isLvl3RowVisible || row.lvl !== 3 ? \"\" : \"none\",\n          }}\n        >\n          {rowArray}\n        </tr>\n      );\n    }\n  });\n\n  useEffect(() => {\n    getserviceData();\n  }, [reportRunId]);\n\n  return (\n    <>\n      {showTable && (\n        <div className=\"\">\n          <div\n            className=\"col-md-10 mt-4 \"\n            style={{ backgroundColor: \"#f4f4f4\" }}\n          >\n            <div\n              className=\"table-header  \"\n              style={{\n                display: \"flex\",\n                alignItems: \"center\",\n                justifyContent: \"space-between\",\n                border: \"1px solid #ccc\",\n                // padding: \"10px\",\n                borderRadius: \"1px\",\n                backgroundColor: \"#f4f4f4\",\n                width: \"100%\",\n              }}\n            >\n              <h\n                style={{\n                  color: \"#2e88c5\",\n                  fontSize: \"17px\",\n                  margin: 0,\n                  paddingLeft: \"10px\",\n                  fontWeight: \"700\",\n                }}\n              >\n                Sf Pipeline\n              </h>\n              <div>\n                <button\n                  className=\"\"\n                  onClick={closeTable}\n                  style={{\n                    display: \"flex\",\n                    borderColor: \"lightgrey\",\n                    height: \"18px\",\n                    borderRadius: \"4px\",\n                    padding: \"0px 4px 16px 4px !important\",\n                    width: \"100%\",\n                  }}\n                >\n                  <FaTimes />\n                </button>\n              </div>\n            </div>\n            <div></div>\n            <div className=\"sfPipelineTable darkHeader toHead\">\n              <table\n                style={{ width: \"100%\" }}\n                className=\"table table-bordered htmlTable\"\n                cellPadding={0}\n                cellSpacing={0}\n              >\n                <thead>\n                  <tr>{thArray}</tr>\n                </thead>\n                <tbody>{tdArray}</tbody>\n              </table>\n            </div>\n          </div>\n        </div>\n      )}\n      {table && (\n        <div>\n          <div class=\"\" style={{ padding: \"5px !important\" }}>\n            <span style={{ fontSize: \"14px\", fontWeight: \"bolder\" }}>\n              Sf Documents For{\" \"}\n            </span>\n            <span\n              style={{\n                color: \"#297ab0\",\n                fontSize: \"15px\",\n                fontWeight: \"bolder\",\n              }}\n            >\n              {selectedOpportunity}\n            </span>\n          </div>\n          <SfpipelineDocument type={type} />\n        </div>\n      )}\n    </>\n  );\n}\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 2C6.49 2 2 6.49 2 12s4.49 10 10 10 10-4.49 10-10S17.51 2 12 2zm-1 8V7c0-.55.45-1 1-1s1 .45 1 1v3h1.79c.45 0 .67.54.35.85l-2.79 2.79c-.2.2-.51.2-.71 0l-2.79-2.79c-.31-.31-.09-.85.36-.85H11zm5 7H8c-.55 0-1-.45-1-1s.45-1 1-1h8c.55 0 1 .45 1 1s-.45 1-1 1z\"\n}), 'DownloadForOfflineRounded');\nexports.default = _default;"],"names":["props","type","useState","sfDocs","setSfDocs","open","setOpen","baseUrl","environment","abortController","useRef","useEffect","current","AbortController","axios","method","url","data","oppId","then","resp","window","scrollTo","top","behavior","SfDocsTable","className","style","width","textAlign","backgroundColor","color","length","map","doc","name","href","docId","docType","DownloadForOfflineRounded","colSpan","Loader","handleAbort","abort","SfPipeline","reportRunId","summval","onCloseTable","showTable","setShowTable","table","setTable","selectedOpportunity","setSelectedOpportunity","Sfpipeline","setSfpipeline","prosicon","size","expanded","setexpanded","allExecutives","filter","item","lvl","executive","setType","setSalesOppoId","colexpanded","setcolexpanded","toggler","coltoggler","conditions","expandableCols","tdArray","thArray","forEach","row","rowArray","includes","key","split","id","push","display","onClick","quartr","prevState","title","cursor","marginLeft","exec","target","rel","float","paddingLeft","Math","round","toLocaleString","isLvl3RowVisible","practice","country","pr_id","opp_id","undefined","array","serviceSfPipeline","newArray","JSON","parse","stringify","catch","err","alignItems","justifyContent","border","borderRadius","fontSize","margin","fontWeight","borderColor","height","padding","cellPadding","cellSpacing","class","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d"],"sourceRoot":""}