{"version":3,"file":"static/js/236.d017b126.chunk.js","mappings":"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","sources":["views/Customer/Projects.js","views/Customer/InitiativePopup.js","views/Customer/Initiatives.js","views/Customer/CustomerRisks.js","views/Customer/RelationshipHeatmapPopUp.js","views/Customer/RelationShipHeapMap.js","views/Customer/CustomersEngagement.js","views/Customer/CustomerTechnologyPopUp..js","views/Customer/CustomerTechnology.js","views/Customer/Customerdashboard.js","views/Customer/InvoiceSummaryPopup.js","views/Customer/CustomerEdit.js","views/Customer/CustomersTopMenus.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"primeicons/primeicons.css\";\nimport \"primereact/resources/themes/lara-light-indigo/theme.css\";\nimport \"primereact/resources/primereact.css\";\nimport \"primeflex/primeflex.css\";\nimport { environment } from \"../../environments/environment\";\nimport axios from \"axios\";\nimport CellRendererPrimeReactDataTable from \"../PrimeReactTableComponent/CellRendererPrimeReactDataTable\";\nimport { Column } from \"primereact/column\";\nimport { Link } from \"react-router-dom\";\nimport Loader from \"../Loader/Loader\";\nimport { useRef } from \"react\";\nimport ErrorLogTable from \"../Administration/ErrorLogsTable\";\nimport ScreenBreadcrumbs from \"../Common/ScreenBreadcrumbs\";\n\nfunction Projects(props) {\n  const { customerId } = props;\n  const [data, setData] = useState([{}]);\n  const baseUrl = environment.baseUrl;\n  const [headerData, setHeaderData] = useState([]);\n  const [linkColumns, setLinkColumns] = useState([]);\n  const [linkColumnsRoutes, setLinkColumnsRoutes] = useState([]);\n  const [customFilters, setcustomFilters] = useState({});\n  const [customFilterValue, setCustomFilterValue] = useState(1);\n  const [open, setOpen] = useState(false);\n  const abortController = useRef(null);\n  const [sortedData, setSortedData] = useState([]);\n\n  function sortDataByName(data) {\n    const sortedData = [...data]; // create a copy of the original array\n    sortedData.sort((a, b) => {\n      const nameA = a.prj_health ? a.prj_health.toUpperCase() : \"\";\n      const nameB = b.prj_health ? b.prj_health.toUpperCase() : \"\";\n      if (nameA < nameB) {\n        return -1;\n      }\n      if (nameA < nameB) {\n        return 1;\n      }\n      return 0;\n    });\n    return sortedData;\n  }\n  const getData = () => {\n    setOpen(false);\n    abortController.current = new AbortController();\n    axios({\n      method: \"post\",\n      url: baseUrl + `/customersms/Customers/getCustProjects`,\n      data: {\n        customerId: customerId,\n        projectStatusId: customFilterValue,\n      },\n      signal: abortController.current.signal,\n      headers: { \"Content-Type\": \"application/json\" },\n    }).then((response) => {\n      const data = response.data;\n\n      let dataHeader = [\n        {\n          prj_health: \"Health\",\n          project_code: \"Project Code\",\n          project_name: \"Project\",\n          contract_terms: \"Contract Terms\",\n          business_unit: \"Business Unit\",\n          prj_manager: \"Primary Manager\",\n          prj_stage: \"Status\",\n          planned_start_dt: \"Planned Start\",\n          planned_end_dt: \"Planned End\",\n          actual_start_dt: \"Actual Start\",\n          actual_end_dt: \"Actual End\",\n        },\n      ];\n      const sortedData = sortDataByName(data);\n\n      let data1 = [\"project_name\"];\n      let linkRoutes = [\"/project/Overview/:project_id\"];\n      setLinkColumns(data1);\n      setLinkColumnsRoutes(linkRoutes);\n      setOpen(false);\n      setData(dataHeader.concat(sortedData));\n    });\n  };\n  useEffect(() => {}, [customFilterValue]);\n\n  useEffect(() => {\n    getData();\n  }, [customFilterValue]);\n  const handleAbort = () => {\n    abortController.current && abortController.current.abort();\n    setsearching(false);\n  };\n\n  useEffect(() => {\n    data[0] && setHeaderData(JSON.parse(JSON.stringify(data[0])));\n  }, [data]);\n  const primaryManagerToolTip = (data) => {\n    return (\n      <div className=\"ellipsis\" data-toggle=\"tooltip\" title={data.prj_manager}>\n        {data.prj_manager}\n      </div>\n    );\n  };\n  const legends = (data) => {\n    return (\n      <div className=\"legendContainer align center\">\n        {data.prj_health == \"Serious Issues\" ? (\n          <div className=\"legend red\">\n            <div className=\"legendCircle \" title=\"Serious Issues\"></div>\n          </div>\n        ) : data.prj_health == \"Potential Issues\" ? (\n          <div className=\"legend amber\">\n            <div className=\"legendCircle \" title=\"Potential Issues\"></div>\n          </div>\n        ) : data.prj_health == null ? (\n          <div className=\"legend black\">\n            <div className=\"legendCircle \" title=\"Not Available\"></div>\n          </div>\n        ) : data.prj_health == \"On Schedule\" ? (\n          <div className=\"legend green\">\n            <div className=\"legendCircle \" title=\"On Schedule\"></div>\n          </div>\n        ) : (\n          \"\"\n        )}\n      </div>\n    );\n  };\n  const prjStatusToolTip = (data) => {\n    return <div title={data.prj_stage}>{data.prj_stage}</div>;\n  };\n  const bussinessUnitToolTip = (data) => {\n    return (\n      <div className=\"ellipsis\" title={data.business_unit}>\n        {data.business_unit}\n      </div>\n    );\n  };\n  const ContractTermsToolTip = (data) => {\n    return <div title={data.contract_terms}>{data.contract_terms}</div>;\n  };\n  const projectCodetooltip = (data) => {\n    return (\n      <div\n        className=\"ellipsis\"\n        title={data.project_code}\n        style={{ width: \"116px\" }}\n      >\n        {data.project_code}\n      </div>\n    );\n  };\n  const plannnedDtAlign = (data) => {\n    return (\n      <div className=\"align center\" title={data.planned_start_dt}>\n        {data.planned_start_dt}\n      </div>\n    );\n  };\n  const actualStartDtAlign = (data) => {\n    return (\n      <div className=\"align center\" title={data.actual_start_dt}>\n        {data.actual_start_dt}\n      </div>\n    );\n  };\n  const actualEndDtAlign = (data) => {\n    return (\n      <div className=\"align center\" title={data.actual_end_dt}>\n        {data.actual_end_dt}\n      </div>\n    );\n  };\n  const plannnedEndDtAlign = (data) => {\n    return (\n      <div className=\"align center\" title={data.planned_end_dt}>\n        {data.planned_end_dt}\n      </div>\n    );\n  };\n\n  const LinkTemplate = (data) => {\n    let rou = linkColumnsRoutes[0]?.split(\":\");\n    return (\n      <>\n        <Link\n          target=\"_blank\"\n          to={rou[0] + \":\" + data[rou[1]]}\n          title={data.project_name}\n        >\n          {data[linkColumns[0]]}\n        </Link>\n      </>\n    );\n  };\n  const dynamicColumns = Object.keys(headerData)?.map((col, i) => {\n    return (\n      <Column\n        sortable\n        key={col}\n        body={\n          col == \"actual_end_dt\"\n            ? actualEndDtAlign\n            : col == \"actual_start_dt\"\n            ? actualStartDtAlign\n            : col == \"prj_stage\"\n            ? prjStatusToolTip\n            : col == \"business_unit\"\n            ? bussinessUnitToolTip\n            : col == \"contract_terms\"\n            ? ContractTermsToolTip\n            : col == \"project_code\"\n            ? projectCodetooltip\n            : col == \"project_name\"\n            ? LinkTemplate\n            : col == \"prj_manager\"\n            ? primaryManagerToolTip\n            : col == \"planned_end_dt\"\n            ? plannnedEndDtAlign\n            : col == \"planned_start_dt\"\n            ? plannnedDtAlign\n            : col == \"prj_health\" && legends\n        }\n        field={col}\n        header={headerData[col]}\n      />\n    );\n  });\n\n  useEffect(() => {\n    // let imp = [\"CSV\",\"XLS\",\"PDF\"]\n    // setExportData(imp);\n\n    let ctmFlts = {\n      id: \"filterTable\",\n      type: \"select\",\n      data: {\n        1: \"Active\",\n        0: \"All\",\n      },\n      align: \"right\",\n      filterTable: \"\",\n    };\n    setcustomFilters(ctmFlts);\n  }, []);\n\n  const loggedUserId = localStorage.getItem(\"resId\");\n\n  const [routes, setRoutes] = useState([]);\n  let textContent = \"Customers\";\n  let currentScreenName = [\"Customer Search\", \"Overview\"];\n\n  useEffect(() => {\n    getMenus();\n  }, []);\n\n  const getMenus = () => {\n    // setMenusData\n\n    axios({\n      method: \"GET\",\n      url: baseUrl + `/CommonMS/master/getMenus?loggedUserId=${loggedUserId}`,\n    }).then((resp) => {\n      let data = resp.data;\n\n      data.forEach((item) => {\n        if (item.display_name === textContent) {\n          setRoutes([item]);\n        }\n      });\n    });\n  };\n\n  return (\n    <div>\n      <div className=\"pageTitle\">\n        <div className=\"childOne\"></div>\n        <div className=\"childTwo\">\n          <h2>Overview</h2>\n        </div>\n        <div className=\"childThree\"></div>\n      </div>\n      <ScreenBreadcrumbs\n        routes={routes}\n        currentScreenName={currentScreenName}\n      />\n\n      <div className=\"row\">\n        <div className=\"legendContainer\">\n          <p className=\"font-weight-bold\">Project Health:</p>\n          <div className=\"legend green\">\n            <div className=\"legendCircle \"></div>\n            <div className=\"legendTxt\">On Schedule</div>\n          </div>\n          <div className=\"legend amber\">\n            <div className=\"legendCircle\"></div>\n            <div className=\"legendTxt\">Potential Issues</div>\n          </div>\n          <div className=\"legend red\">\n            <div className=\"legendCircle\"></div>\n            <div className=\"legendTxt\">Serious Issues</div>\n          </div>\n          <div className=\"legend black\">\n            <div className=\"legendCircle\"></div>\n            <div className=\"legendTxt\">Not Available</div>\n          </div>\n        </div>\n        {/* <span className=\"col-1\">:</span> */}\n      </div>\n      {open ? <Loader handleAbort={handleAbort} /> : \"\"}\n      <ErrorLogTable\n        data={data}\n        linkColumns={linkColumns}\n        linkColumnsRoutes={linkColumnsRoutes}\n        headerData={headerData}\n        rows={25}\n        setHeaderData={setHeaderData}\n        dynamicColumns={dynamicColumns}\n        customFilters={customFilters}\n        customFilterValue={customFilterValue}\n        setCustomFilterValue={setCustomFilterValue}\n      />\n    </div>\n  );\n}\n\nexport default Projects;\n","import React, { useRef } from \"react\";\nimport { useState, useEffect } from \"react\";\nimport { environment } from \"../../environments/environment\";\nimport axios from \"axios\";\nimport { CModalHeader } from \"@coreui/react\";\nimport { CModalBody } from \"@coreui/react\";\nimport { CButton } from \"@coreui/react\";\nimport { CModal } from \"@coreui/react\";\nimport Draggable from \"react-draggable\";\nimport moment from \"moment\";\nimport { ReactSearchAutocomplete } from \"react-search-autocomplete\";\nimport SaveIcon from \"@mui/icons-material/Save\";\nimport { MdCreate } from \"react-icons/md\";\nimport { CModalTitle } from \"@coreui/react\";\nimport { AiFillDelete, AiFillWarning } from \"react-icons/ai\";\nimport Initiatives from \"./Initiatives\";\nimport GlobalValidation from \"../ValidationComponent/GlobalValidation\";\nfunction InitiativePopup(props) {\n  const {\n    buttonPopup,\n    setButtonPopup,\n    data1,\n    customerId,\n    // handleSaveClick,\n    // handleChange,\n    getData,\n    editId,\n    type,\n    // data,\n    setEditedData,\n    editedData,\n    setFormData,\n    formData,\n    setAddmsg,\n    setEditAddmsg,\n    // setValidationMessage\n  } = props;\n  const baseUrl = environment.baseUrl;\n  const [value, setValue] = useState(\"\");\n  const ref = useRef([]);\n  // const data = {\n  //     \"id\": null, \"cusId\": 128765260, \"initiative\": \"\", \"functionArea\": \"\",\n  //     \"curStatus\": \"\",\n  //     \"innTech\": \"\",\n  //     \"cusStake\": \"\",\n  //     \"primObj\": \"\",\n  //     \"des\": \"\"\n  // }\n  const [formData1, setFormData1] = useState(setFormData);\n  const [formEditData, setFormEditData] = useState(editedData);\n  const [id, setid] = useState(0);\n  const [validationMessage, setValidationMessage] = useState(false);\n\n  const handleChange = (e) => {\n    const { id, value } = e.target;\n    setFormData1((prev) => ({ ...prev, [id]: value }));\n  };\n\n  // const handleChange1 = (e) => {\n  //     const { id, value } = e.target;\n  //     setFormEditData(prev => ({ ...prev, [id]: value }))\n  // }\n\n  const handleEditClick = () => {\n    let valid = GlobalValidation(ref);\n\n    if (valid) {\n      setValidationMessage(true);\n\n      // setTimeout(() => {\n      //     // setValidationMessage(false);\n      // }, 3000);\n\n      return;\n    }\n    axios({\n      method: \"post\",\n      url: baseUrl + `/customersms/initiatives/postintiativedata`,\n      data: {\n        id: editId,\n        cusId: customerId,\n        initiative: formEditData.Initiative,\n        functionArea: formEditData.FunctionArea,\n        curStatus: formEditData.CurStatus,\n        innTech: formEditData.InnTech,\n        cusStake: formEditData.CusStake,\n        primObj: formEditData.PrimObj,\n        des: formEditData.Des,\n      },\n    }).then((error) => {\n      getData();\n      setid();\n      setButtonPopup(false);\n      setEditAddmsg(true);\n\n      setTimeout(() => {\n        setEditAddmsg(false);\n      }, 3000);\n    });\n  };\n  //-----\n  const handleSaveClick = () => {\n    let valid = GlobalValidation(ref);\n\n    if (valid) {\n      setValidationMessage(true);\n\n      // setTimeout(() => {\n      //     setValidationMessage(false);\n      // }, 3000);\n\n      return;\n    }\n    axios({\n      method: \"post\",\n      url: baseUrl + `/customersms/initiatives/postintiativedata`,\n      data: {\n        id: null,\n        cusId: customerId,\n        initiative: formEditData.Initiative,\n        functionArea: formEditData.FunctionArea,\n        curStatus: formEditData.CurStatus,\n        innTech: formEditData.InnTech,\n        cusStake: formEditData.CusStake,\n        primObj: formEditData.PrimObj,\n        des: formEditData.Des,\n      },\n    }).then((error) => {\n      getData();\n      setid();\n      setButtonPopup(false);\n\n      setAddmsg(true);\n      setTimeout(() => {\n        setAddmsg(false);\n      }, 3000);\n    });\n  };\n\n  //----\n\n  return (\n    <div>\n      {/* <Draggable> */}\n      <CModal\n        size=\"xs\"\n        visible={buttonPopup}\n        onClose={() => {\n          setButtonPopup(false);\n        }}\n        backdrop={\"static\"}\n      >\n        <CModalHeader className=\"hgt22\" style={{ cursor: \"all-scroll\" }}>\n          <CModalTitle>\n            {type == \"add\" ? (\n              <span className=\"ft16\"> Add Initiative</span>\n            ) : (\n              <span className=\"ft16\"> Edit Initiative</span>\n            )}\n          </CModalTitle>\n        </CModalHeader>\n        <CModalBody>\n          <div className=\"col-md-12\">\n            {validationMessage ? (\n              <div className=\"statusMsg error\">\n                <span className=\"error-block\">\n                  <AiFillWarning /> &nbsp;Please select valid values for\n                  highlighted fields\n                </span>\n              </div>\n            ) : (\n              \"\"\n            )}\n            <div className=\"form-group row mb-2\">\n              <label className=\"col-5\" htmlFor=\"form-label\">\n                Initiative&nbsp;<span className=\"error-text\">*</span>\n              </label>\n              <span className=\"col-1 p-0\">:</span>\n              <div\n                className=\"col-6 textfield\"\n                ref={(ele) => {\n                  ref.current[0] = ele;\n                }}\n              >\n                {type == \"add\" ? (\n                  <input\n                    name=\"initiative\"\n                    id=\"initiative\"\n                    type=\"text\"\n                    placeholder={\"Max 50 character\"}\n                    // value={value}\n                    maxLength={50}\n                    // onChange={(e) => handleChange(e)\n                    onChange={(e) =>\n                      setFormEditData((prev) => ({\n                        ...prev,\n                        [\"Initiative\"]: e.target.value,\n                      }))\n                    }\n                  />\n                ) : (\n                  <input\n                    type=\"text\"\n                    // value={value}\n                    name=\"initiative\"\n                    id=\"initiative\"\n                    placeholder={\"Max 50 character\"}\n                    maxLength={50}\n                    defaultValue={editedData.Initiative}\n                    // onChange={(e) => handleChange1(e)}\n                    onChange={(e) =>\n                      setFormEditData((prev) => ({\n                        ...prev,\n                        [\"Initiative\"]: e.target.value,\n                      }))\n                    }\n                  />\n                )}\n              </div>\n            </div>\n          </div>\n\n          <div className=\"col-md-12\">\n            <div className=\"form-group row mb-2\">\n              <label className=\"col-5\" htmlFor=\"form-label\">\n                Function Area&nbsp;<span className=\"error-text\">*</span>\n              </label>\n              <span className=\"col-1 p-0\">:</span>\n              <div\n                className=\"col-6 textfield\"\n                ref={(ele) => {\n                  ref.current[1] = ele;\n                }}\n              >\n                {type == \"add\" ? (\n                  <input\n                    type=\"text\"\n                    placeholder=\"Max 50 character\"\n                    name=\"functionArea\"\n                    id=\"functionArea\"\n                    maxLength={50}\n                    // onChange={(e) => handleChange(e)}\n                    onChange={(e) =>\n                      setFormEditData((prev) => ({\n                        ...prev,\n                        [\"FunctionArea\"]: e.target.value,\n                      }))\n                    }\n                  />\n                ) : (\n                  <input\n                    type=\"text\"\n                    placeholder=\"Max 50 character\"\n                    name=\"functionArea\"\n                    id=\"functionArea\"\n                    maxLength={50}\n                    defaultValue={editedData.FunctionArea}\n                    //  onChange={(e) => handleChange1(e)}\n                    onChange={(e) =>\n                      setFormEditData((prev) => ({\n                        ...prev,\n                        [\"FunctionArea\"]: e.target.value,\n                      }))\n                    }\n                  />\n                )}\n              </div>\n            </div>\n          </div>\n\n          <div className=\"col-md-12\">\n            <div className=\"form-group row mb-2\">\n              <label className=\"col-5\" htmlFor=\"\">\n                Current Status&nbsp;<span className=\"error-text\">*</span>\n              </label>\n              <span className=\"col-1 p-0\">:</span>\n              <div\n                className=\"col-6 textfield\"\n                ref={(ele) => {\n                  ref.current[2] = ele;\n                }}\n              >\n                {type == \"add\" ? (\n                  <input\n                    type=\"text\"\n                    placeholder=\"Max 50 character\"\n                    name=\"curStatus\"\n                    id=\"curStatus\"\n                    maxLength={50}\n                    // onChange={(e) => handleChange(e)}\n                    onChange={(e) =>\n                      setFormEditData((prev) => ({\n                        ...prev,\n                        [\"CurStatus\"]: e.target.value,\n                      }))\n                    }\n                  />\n                ) : (\n                  <input\n                    type=\"text\"\n                    placeholder=\"Max 50 character\"\n                    name=\"curStatus\"\n                    id=\"curStatus\"\n                    maxLength={50}\n                    defaultValue={editedData.CurStatus}\n                    // onChange={(e) => handleChange1(e)}\n                    onChange={(e) =>\n                      setFormEditData((prev) => ({\n                        ...prev,\n                        [\"CurStatus\"]: e.target.value,\n                      }))\n                    }\n                  />\n                )}\n              </div>\n            </div>\n          </div>\n\n          <div className=\"col-md-12\">\n            <div className=\"form-group row mb-2\">\n              <label className=\"col-5\" htmlFor=\"Date\">\n                Innovative Technology&nbsp;<span className=\"error-text\">*</span>\n              </label>\n              <span className=\"col-1 p-0\">:</span>\n              <div\n                className=\"col-6 textfield\"\n                ref={(ele) => {\n                  ref.current[3] = ele;\n                }}\n              >\n                {type == \"add\" ? (\n                  <input\n                    type=\"text\"\n                    placeholder=\"Max 50 character\"\n                    name=\"innTech\"\n                    id=\"innTech\"\n                    maxLength={50}\n                    //onChange={(e) => handleChange(e)}\n                    onChange={(e) =>\n                      setFormEditData((prev) => ({\n                        ...prev,\n                        [\"InnTech\"]: e.target.value,\n                      }))\n                    }\n                  />\n                ) : (\n                  <input\n                    type=\"text\"\n                    placeholder=\"Max 50 character\"\n                    name=\"innTech\"\n                    id=\"innTech\"\n                    maxLength={50}\n                    defaultValue={editedData.InnTech}\n                    // onChange={(e) => handleChange1(e)}\n                    onChange={(e) =>\n                      setFormEditData((prev) => ({\n                        ...prev,\n                        [\"InnTech\"]: e.target.value,\n                      }))\n                    }\n                  />\n                )}\n              </div>\n            </div>\n          </div>\n\n          <div className=\"col-md-12\">\n            <div className=\"form-group row mb-2\">\n              <label className=\"col-5\" htmlFor=\"Date\">\n                Customer Stakeholder&nbsp;<span className=\"error-text\">*</span>\n              </label>\n              <span className=\"col-1 p-0\">:</span>\n              <div\n                className=\"col-6 textfield\"\n                ref={(ele) => {\n                  ref.current[4] = ele;\n                }}\n              >\n                {type == \"add\" ? (\n                  <input\n                    type=\"text\"\n                    placeholder=\"Max 50 character\"\n                    name=\"cusStake\"\n                    id=\"cusStake\"\n                    maxLength={50}\n                    onChange={(e) =>\n                      setFormEditData((prev) => ({\n                        ...prev,\n                        [\"CusStake\"]: e.target.value,\n                      }))\n                    }\n                  />\n                ) : (\n                  <input\n                    type=\"text\"\n                    placeholder=\"Max 50 character\"\n                    name=\"cusStake\"\n                    id=\"cusStake\"\n                    maxLength={50}\n                    defaultValue={editedData.CusStake}\n                    // onChange={(e) => handleChange1(e)}\n                    onChange={(e) =>\n                      setFormEditData((prev) => ({\n                        ...prev,\n                        [\"CusStake\"]: e.target.value,\n                      }))\n                    }\n                  />\n                )}\n              </div>\n            </div>\n          </div>\n\n          <div className=\"col-md-12\">\n            <div className=\"form-group row mb-2\">\n              <label className=\"col-5\" htmlFor=\"\">\n                Primary Objective\n              </label>\n              <span className=\"col-1 p-0\">:</span>\n              <div className=\"col-6\">\n                {type == \"add\" ? (\n                  <textarea\n                    type=\"text\"\n                    name=\"primObj\"\n                    id=\"primObj\"\n                    maxLength={50}\n                    // onChange={(e) => handleChange(e)}\n                    onChange={(e) =>\n                      setFormEditData((prev) => ({\n                        ...prev,\n                        [\"PrimObj\"]: e.target.value,\n                      }))\n                    }\n                  />\n                ) : (\n                  <textarea\n                    type=\"text\"\n                    name=\"primObj\"\n                    id=\"primObj\"\n                    maxLength={50}\n                    defaultValue={editedData.PrimObj}\n                    // onChange={(e) => handleChange1(e)}\n                    onChange={(e) =>\n                      setFormEditData((prev) => ({\n                        ...prev,\n                        [\"PrimObj\"]: e.target.value,\n                      }))\n                    }\n                  />\n                )}\n              </div>\n            </div>\n          </div>\n\n          <div className=\"col-md-12\">\n            <div className=\"form-group row mb-2\">\n              <label className=\"col-5\" htmlFor=\"\">\n                Description\n              </label>\n              <span className=\"col-1 p-0\">:</span>\n              <div className=\"col-6\">\n                {type == \"add\" ? (\n                  <textarea\n                    type=\"text\"\n                    name=\"des\"\n                    id=\"des\"\n                    maxLength={50}\n                    // onChange={(e) => handleChange(e)}\n                    onChange={(e) =>\n                      setFormEditData((prev) => ({\n                        ...prev,\n                        [\"Des\"]: e.target.value,\n                      }))\n                    }\n                  />\n                ) : (\n                  <textarea\n                    type=\"text\"\n                    name=\"Des\"\n                    id=\"Des\"\n                    maxLength={50}\n                    defaultValue={editedData.Des}\n                    // onChange={(e) => handleChange1(e)}\n                    onChange={(e) =>\n                      setFormEditData((prev) => ({\n                        ...prev,\n                        [\"Des\"]: e.target.value,\n                      }))\n                    }\n                  />\n                )}\n              </div>\n            </div>\n          </div>\n\n          <div className='className=\"col-md-12 col-sm-12 col-xs-12 btn-container center my-3'>\n            {type == \"add\" ? (\n              <button\n                className=\"btn btn-primary \"\n                onClick={handleSaveClick}\n\n                // onClick={(e) => {\n                //     handleSaveClick(e);\n                //     ;\n                //     setFormData((prev) => ({\n                //       ...prev,\n                //       [e.target.id]: e.target.value,\n                //     }));\n                // }}\n              >\n                <SaveIcon />\n                Save\n              </button>\n            ) : (\n              <button className=\"btn btn-primary \" onClick={handleEditClick}>\n                <SaveIcon />\n                Save\n              </button>\n            )}\n          </div>\n        </CModalBody>\n      </CModal>\n      {/* </Draggable> */}\n\n      {/* <Initiatives setid={setid} id={id}/> */}\n    </div>\n  );\n}\nexport default InitiativePopup;\n","import React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport {\n  AiFillDelete,\n  AiFillEdit,\n  AiFillWarning,\n  AiOutlineFileSearch,\n} from \"react-icons/ai\";\nimport { MdOutlinePlaylistAdd } from \"react-icons/md\";\nimport { environment } from \"../../environments/environment\";\nimport \"primeicons/primeicons.css\";\nimport \"primereact/resources/themes/lara-light-indigo/theme.css\";\nimport \"primereact/resources/primereact.css\";\nimport \"primeflex/primeflex.css\";\nimport { Column } from \"primereact/column\";\nimport CellRendererPrimeReactDataTable from \"../PrimeReactTableComponent/CellRendererPrimeReactDataTable\";\nimport InitiativePopup from \"./InitiativePopup\";\nimport { CModalHeader } from \"@coreui/react\";\nimport { CModalBody } from \"@coreui/react\";\nimport { CButton } from \"@coreui/react\";\nimport { CModal } from \"@coreui/react\";\nimport Draggable from \"react-draggable\";\nimport { CModalTitle } from \"@coreui/react\";\nimport { BiCheck } from \"react-icons/bi\";\nimport { color, Pointer } from \"highcharts\";\nimport { ImCross } from \"react-icons/im\";\nimport ErrorLogTable from \"../Administration/ErrorLogsTable\";\nimport ScreenBreadcrumbs from \"../Common/ScreenBreadcrumbs\";\nimport { FaPlus } from \"react-icons/fa\";\n\nfunction Initiatives(props) {\n  let rows = 25;\n  const { customerId, mainMenu, filteredData } = props;\n  const dataObject = mainMenu.find(\n    (item) => item.display_name === \"Initiatives\"\n  );\n\n  const [data, setData] = useState([{}]);\n  //const rows=10;\n  const [addmsg, setAddmsg] = useState(false);\n  const [editmsg, setEditAddmsg] = useState(false);\n  const [value, setValue] = useState(\"\");\n  const baseUrl = environment.baseUrl;\n  const [buttonPopups, setButtonPopups] = useState(false);\n  const [buttonPopup, setButtonPopup] = useState(false);\n  const [headerData, setHeaderData] = useState([]);\n  const [linkColumns, setLinkColumns] = useState([]);\n  const [linkColumnsRoutes, setLinkColumnsRoutes] = useState([]);\n  const [type, setType] = useState(\"add\");\n  const [editedData, setEditedData] = useState([]);\n  const [editId, setEditId] = useState();\n  const [deletePopup, setDeletePopup] = useState(false);\n  const [deleteMessage, setDeleteMessage] = useState(false);\n  const [deleteid, setDeleteId] = useState(\"\");\n  const data1 = {\n    id: null,\n    initiative: \"\",\n    functionArea: \"\",\n    curStatus: \"\",\n    innTech: \"\",\n    cusStake: \"\",\n    primObj: \"\",\n    des: \"\",\n  };\n  const [formData, setFormData] = useState(data1);\n  useEffect(() => {}, [editedData]);\n  const handleChange = (e) => {\n    const { id, value } = e.target;\n    setFormData((prev) => ({ ...prev, [id]: value }));\n  };\n\n  const loggedUserId = localStorage.getItem(\"resId\");\n\n  const SNo = (data) => {\n    return (\n      <div\n        className=\"ellipsis\"\n        align=\"center\"\n        data-toggle=\"tooltip\"\n        title={data.SNo}\n      >\n        {data.SNo}\n      </div>\n    );\n  };\n\n  const initiatives = (data) => {\n    return (\n      <div className=\"ellipsis\" data-toggle=\"tooltip\" title={data.Initiative}>\n        {data.Initiative}\n      </div>\n    );\n  };\n  const functionArea = (data) => {\n    return (\n      <div className=\"ellipsis\" data-toggle=\"tooltip\" title={data.FunctionArea}>\n        {data.FunctionArea}\n      </div>\n    );\n  };\n  const curStatus = (data) => {\n    return (\n      <div className=\"ellipsis\" data-toggle=\"tooltip\" title={data.CurStatus}>\n        {data.CurStatus}\n      </div>\n    );\n  };\n  const innTech = (data) => {\n    return (\n      <div className=\"ellipsis\" data-toggle=\"tooltip\" title={data.InnTech}>\n        {data.InnTech}\n      </div>\n    );\n  };\n  const cusStake = (data) => {\n    return (\n      <div className=\"ellipsis\" data-toggle=\"tooltip\" title={data.CusStake}>\n        {data.CusStake}\n      </div>\n    );\n  };\n  const primObj = (data) => {\n    return (\n      <div className=\"ellipsis\" data-toggle=\"tooltip\" title={data.PrimObj}>\n        {data.PrimObj}\n      </div>\n    );\n  };\n  const des = (data) => {\n    return (\n      <div className=\"ellipsis\" data-toggle=\"tooltip\" title={data.Des}>\n        {data.Des}\n      </div>\n    );\n  };\n\n  const getData = () => {\n    axios\n      .get(\n        baseUrl +\n          `/customersms/initiatives/getInitiativesDetails?Iid=${customerId}`\n      )\n      // axios.get(``)\n      .then((res) => {\n        const GetData = res.data;\n        for (let i = 0; i < GetData.length; i++) {\n          GetData[i][\"SNo\"] = i + 1;\n        }\n\n        let dataHeaders = [\n          {\n            SNo: \"S.No\",\n            Initiative: \"Initiatives\",\n            FunctionArea: \"Function Area\",\n            CurStatus: \"Current Status\",\n            InnTech: \"Innovative Technology\",\n            CusStake: \"Customer Stakeholders\",\n            PrimObj: \"Primary Objective\",\n            Des: \"Description\",\n            Action: \"Action\",\n          },\n        ];\n\n        let data = [\"Action\"];\n        setLinkColumns(data);\n\n        setData(dataHeaders.concat(GetData));\n      })\n      .catch((error) => {});\n  };\n  useEffect(() => {\n    getData();\n  }, []);\n\n  //-----------\n  const LinkTemplate = (data) => {\n    let rou = linkColumns[0];\n    return (\n      <>\n        <div align=\"center\">\n          <>\n            <AiFillEdit\n              color=\"orange\"\n              cursor=\"pointer\"\n              type=\"edit\"\n              size=\"1.2em\"\n              title=\"Edit\"\n              onClick={() => {\n                setEditedData(data);\n                setEditId(data.id);\n                setButtonPopup(true);\n                setType(\"edit\");\n              }}\n              align=\"center\"\n            />\n            &nbsp;\n            <AiFillDelete\n              color=\"orange\"\n              cursor=\"pointer\"\n              type=\"delete\"\n              title=\"Delete\"\n              onClick={() => {\n                setDeletePopup(true);\n                setType(\"delete\");\n                setDeleteId(data.id);\n              }}\n              align=\"center\"\n            />\n          </>\n        </div>\n      </>\n    );\n  };\n  const dynamicColumns = Object.keys(headerData)?.map((col, i) => {\n    // Check the value of dataObject.is_write\n    if (dataObject.is_write) {\n      // Include all columns if dataObject.is_write is true\n      return (\n        <Column\n          sortable\n          key={col}\n          body={\n            (col === \"SNo\" && SNo) ||\n            (col === \"Action\" && LinkTemplate) ||\n            (col === \"Initiative\" && initiatives) ||\n            (col === \"FunctionArea\" && functionArea) ||\n            (col === \"CurStatus\" && curStatus) ||\n            (col === \"InnTech\" && innTech) ||\n            (col === \"CusStake\" && cusStake) ||\n            (col === \"PrimObj\" && primObj) ||\n            (col === \"Des\" && des)\n          }\n          field={col}\n          header={headerData[col]}\n        />\n      );\n    } else {\n      // Include only certain columns if dataObject.is_write is false\n      // You can modify this condition to include the columns you want\n      if (\n        col === \"SNo\" ||\n        col === \"Initiative\" ||\n        col === \"FunctionArea\" ||\n        col === \"CurStatus\" ||\n        col === \"InnTech\" ||\n        col === \"CusStake\" ||\n        col === \"PrimObj\" ||\n        col === \"Des\"\n      ) {\n        return (\n          <Column\n            sortable\n            key={col}\n            body={\n              (col === \"SNo\" && SNo) ||\n              (col === \"Action\" && LinkTemplate) ||\n              (col === \"Initiative\" && initiatives) ||\n              (col === \"FunctionArea\" && functionArea) ||\n              (col === \"CurStatus\" && curStatus) ||\n              (col === \"InnTech\" && innTech) ||\n              (col === \"CusStake\" && cusStake) ||\n              (col === \"PrimObj\" && primObj) ||\n              (col === \"Des\" && des)\n            }\n            field={col}\n            header={headerData[col]}\n          />\n        );\n      } else {\n        return null; // Exclude other columns\n      }\n    }\n  });\n\n  useEffect(() => {\n    data[0] && setHeaderData(JSON.parse(JSON.stringify(data[0])));\n  }, [data]);\n\n  //-------------------------\n  const deleteInitiative = () => {\n    axios({\n      method: \"delete\",\n      url:\n        baseUrl + `/customersms/initiatives/deleteintiativedata?id=${deleteid}`,\n      // data: id\n    }).then((error) => {\n      // setid(0);\n      getData();\n      setDeletePopup(false);\n      setDeleteMessage(true);\n      setTimeout(() => {\n        setDeleteMessage(false);\n      }, 3000);\n    });\n  };\n\n  //-----------------\n  function DeletePopup(props) {\n    const { deletePopup, setDeletePopup, editId, deleteid } = props;\n    return (\n      <div>\n        {/* <Draggable> */}\n        <CModal\n          visible={deletePopup}\n          size=\"m\"\n          className=\" ui-dialog\"\n          onClose={() => setDeletePopup(false)}\n          backdrop={\"static\"}\n        >\n          <CModalHeader className=\"hgt22\">\n            <CModalTitle>\n              <span className=\"ft16\">Delete Initiative</span>\n            </CModalTitle>\n          </CModalHeader>\n          <CModalBody>\n            <h6>Are you sure you want to Delete Initiative ?</h6>\n            <div className=\"btn-container center my-2\">\n              <button\n                type=\"delete\"\n                className=\"btn btn-primary\"\n                onClick={() => {\n                  deleteInitiative();\n                }}\n              >\n                <AiFillDelete /> Delete{\" \"}\n              </button>\n              <button\n                type=\"button\"\n                className=\"btn btn-secondary\"\n                onClick={() => {\n                  setDeletePopup(false);\n                }}\n              >\n                <ImCross /> Cancel{\" \"}\n              </button>\n            </div>\n          </CModalBody>\n        </CModal>\n        {/* </Draggable> */}\n      </div>\n    );\n  }\n\n  const [routes, setRoutes] = useState([]);\n  let textContent = \"Customers\";\n  let currentScreenName = [\"Customer Search\", \"Initiatives\"];\n\n  useEffect(() => {\n    getMenus();\n  }, []);\n\n  const getMenus = () => {\n    // setMenusData\n\n    axios({\n      method: \"GET\",\n      url: baseUrl + `/CommonMS/master/getMenus?loggedUserId=${loggedUserId}`,\n    }).then((resp) => {\n      let data = resp.data;\n\n      data.forEach((item) => {\n        if (item.display_name === textContent) {\n          setRoutes([item]);\n        }\n      });\n    });\n  };\n\n  return (\n    <div>\n      {deleteMessage ? (\n        <div className=\"statusMsg success\">\n          <span className=\"errMsg\">\n            <BiCheck size=\"1.4em\" strokeWidth={{ width: \"100px\" }} />{\" \"}\n            &nbsp;Initiative deleted successfully\n          </span>\n        </div>\n      ) : (\n        \"\"\n      )}\n\n      {addmsg ? (\n        <div className=\"statusMsg success\">\n          <span className=\"errMsg\">\n            <BiCheck size=\"1.4em\" strokeWidth={{ width: \"100px\" }} /> &nbsp;\n            Initiative saved successfully\n          </span>\n        </div>\n      ) : (\n        \"\"\n      )}\n\n      {editmsg ? (\n        <div className=\"statusMsg success\">\n          <span className=\"errMsg\">\n            <BiCheck size=\"1.4em\" strokeWidth={{ width: \"100px\" }} /> &nbsp;\n            Initiative upadated successfully\n          </span>\n        </div>\n      ) : (\n        \"\"\n      )}\n      <div className=\"col-md-12\">\n        <div className=\"pageTitle\">\n          <div className=\"childOne\">\n            <h2>Prolifics</h2>\n          </div>\n          <div className=\"childTwo\">\n            <h2>Initiatives</h2>\n          </div>\n          <div className=\"childThree\"></div>\n        </div>\n        <ScreenBreadcrumbs\n          routes={routes}\n          currentScreenName={currentScreenName}\n        />\n\n        {dataObject.is_write == true ? (\n          <div className=\"row\">\n            <div className=\"col-md-11\"></div>\n            <div className=\"col-md-1\">\n              <button\n                onClick={() => {\n                  setButtonPopup(true);\n                  setType(\"add\");\n                }}\n                className=\"btn btn-primary mt-2 mb-2\"\n              >\n                <FaPlus />\n                Add\n              </button>\n            </div>\n          </div>\n        ) : (\n          \"\"\n        )}\n\n        {/* <FlatPrimeReactTable data={data} rows={rows} /> */}\n        <ErrorLogTable\n          data={data}\n          linkColumns={linkColumns}\n          linkColumnsRoutes={linkColumnsRoutes}\n          dynamicColumns={dynamicColumns}\n          headerData={headerData}\n          setHeaderData={setHeaderData}\n          rows={rows}\n        />\n      </div>\n\n      {buttonPopup ? (\n        <InitiativePopup\n          // handleSaveClick={handleSaveClick}\n          handleChange={handleChange}\n          formData={formData}\n          setFormData={formData}\n          editId={editId}\n          setEditedData={setEditedData}\n          editedData={editedData}\n          type={type}\n          getData={getData}\n          data1={data1}\n          setAddmsg={setAddmsg}\n          setEditAddmsg={setEditAddmsg}\n          customerId={customerId}\n          data={data}\n          buttonPopup={buttonPopup}\n          setButtonPopup={setButtonPopup}\n        />\n      ) : (\n        \"\"\n      )}\n\n      {deletePopup ? (\n        <DeletePopup\n          editId={editId}\n          deletePopup={deletePopup}\n          setDeletePopup={setDeletePopup}\n        />\n      ) : (\n        \"\"\n      )}\n      <br />\n    </div>\n  );\n}\nexport default Initiatives;\n","import React, { useRef } from \"react\";\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { environment } from \"../../environments/environment\";\nimport FlatPrimeReactTable from \"../PrimeReactTableComponent/FlatPrimeReactTable\";\nimport \"primeicons/primeicons.css\";\nimport \"primereact/resources/themes/lara-light-indigo/theme.css\";\nimport \"primereact/resources/primereact.css\";\nimport \"primeflex/primeflex.css\";\nimport moment from \"moment\";\nimport { Column } from \"primereact/column\";\nimport CellRendererPrimeReactDataTable from \"../PrimeReactTableComponent/CellRendererPrimeReactDataTable\";\nimport { Link } from \"react-router-dom\";\nimport Loader from \"../Loader/Loader\";\nimport ScreenBreadcrumbs from \"../Common/ScreenBreadcrumbs\";\n\nfunction CustomerRisks(props) {\n  const { customerId } = props;\n  const [data, setData] = useState([{}]);\n  const [custName, setCustName] = useState([]);\n  const baseUrl = environment.baseUrl;\n  let rows = 20;\n  const [searching, setsearching] = useState(false);\n  const abortController = useRef(null);\n\n  const [headerData, setHeaderData] = useState([]);\n  const [linkColumns, setLinkColumns] = useState([]);\n  const [linkColumnsRoutes, setLinkColumnsRoutes] = useState([]);\n\n  const loggedUserId = localStorage.getItem(\"resId\");\n\n  const LinkTemplate = (data) => {\n    let rou = linkColumnsRoutes[0]?.split(\":\");\n    return (\n      <>\n        <Link\n          target=\"_blank\"\n          to={rou[0] + \":\" + data[rou[1]]}\n          data-toggle=\"tooltip\"\n          title={data.project_name_code}\n        >\n          {data[linkColumns[0]]}\n        </Link>\n      </>\n    );\n  };\n  const Align = (data) => {\n    return <div align=\"right\">{data.Risk_value}</div>;\n  };\n\n  const alignSno = (data) => {\n    return <div align=\"center\">{data.sno}</div>;\n  };\n\n  const Toggletooltip = (data) => {\n    return (\n      <div className=\"ellipsis\" data-toggle=\"tooltip\" title={data.Risk_Name}>\n        {data.Risk_Name}\n      </div>\n    );\n  };\n  const probof_occurrence = (data) => {\n    return <div style={{ width: \"110px\" }}>{data.probof_occurrence}</div>;\n  };\n\n  const dynamicColumns = Object.keys(headerData)?.map((col, i) => {\n    return (\n      <Column\n        sortable\n        key={col}\n        body={\n          col == \"project_name_code\"\n            ? LinkTemplate\n            : col == \"Risk_value\"\n            ? Align\n            : col == \"Risk_Name\"\n            ? Toggletooltip\n            : col == \"sno\"\n            ? alignSno\n            : col == \"probof_occurrence\" && probof_occurrence\n        }\n        field={col}\n        header={headerData[col]}\n      />\n    );\n  });\n\n  useEffect(() => {\n    data[0] && setHeaderData(JSON.parse(JSON.stringify(data[0])));\n  }, [data]);\n\n  const handleAbort = () => {\n    abortController.current && abortController.current.abort();\n    setsearching(false);\n  };\n\n  const getCustomer = () => {\n    axios({\n      method: \"get\",\n      url: baseUrl + `/customersms/Customers/getProjectName?cid=${customerId}`,\n    }).then(function (response) {\n      var resp = response.data;\n      setCustName(resp);\n    });\n  };\n\n  const getData = () => {\n    setsearching(false);\n    abortController.current = new AbortController();\n\n    axios({\n      method: \"get\",\n      url:\n        baseUrl + `/customersms/Customers/getCustomerRisks?cid=${customerId}`,\n      signal: abortController.current.signal,\n    })\n      // axios.get(``)\n      .then((res) => {\n        const GetData = res.data;\n        let dataHeader = [\n          {\n            sno: \"S.No\",\n            project_name_code: \"Project Name / Project Code\",\n            Risk_Name: \"Risk Name\",\n            Risk_type: \"Risk Type\",\n            Risk_source: \"Risk Source\",\n            Risk_impact: \"Risk Impact\",\n            probof_occurrence: \"Probability of Occurrence\",\n            Risk_value: \"Risk Value\",\n            AssignedTo: \"Assigned To\",\n            Risk_occurred: \"Risk Occurred\",\n            Risk_status: \"Risk Status\",\n            risk_occured_date: \"Occurred Date\",\n            mitigation_date: \"Mitigation Date\",\n            created_by_name: \"Created By\",\n          },\n        ];\n\n        for (let i = 0; i < GetData.length; i++) {\n          GetData[i][\"Risk_occurred\"] =\n            GetData[i][\"Risk_occurred\"] == true ? \"Yes\" : \"No\";\n          GetData[i][\"risk_occured_date\"] =\n            GetData[i][\"risk_occured_date\"] == null\n              ? \"\"\n              : moment(GetData[i][\"risk_occured_date\"]).format(\"DD-MMM-yyyy\");\n          GetData[i][\"sno\"] = i + 1;\n          GetData[i][\"mitigation_date\"] =\n            GetData[i][\"mitigation_date\"] == null\n              ? \"\"\n              : moment(GetData[i][\"mitigation_date\"]).format(\"DD-MMM-yyyy\");\n        }\n\n        let data = [\"project_name_code\"];\n        let linkRoutes = [\"/project/Overview/:projectId\"];\n        setLinkColumns(data);\n        setLinkColumnsRoutes(linkRoutes);\n\n        let fData = [...dataHeader, ...GetData];\n        setData(fData);\n        setsearching(false);\n      });\n  };\n\n  useEffect(() => {\n    getData();\n    getCustomer();\n  }, []);\n\n  const [routes, setRoutes] = useState([]);\n  let textContent = \"Customers\";\n  let currentScreenName = [\"Customer Search\", \"Risks\"];\n\n  useEffect(() => {\n    getMenus();\n  }, []);\n\n  const getMenus = () => {\n    // setMenusData\n\n    axios({\n      method: \"GET\",\n      url: baseUrl + `/CommonMS/master/getMenus?loggedUserId=${loggedUserId}`,\n    }).then((resp) => {\n      let data = resp.data;\n\n      data.forEach((item) => {\n        if (item.display_name === textContent) {\n          setRoutes([item]);\n        }\n      });\n    });\n  };\n\n  return (\n    <div>\n      <div className=\"col-md-12\">\n        <div className=\"pageTitle\">\n          <div className=\"childOne\">\n            <h2>{custName[0]?.full_name}</h2>\n          </div>\n          <div className=\"childTwo\">\n            <h2>Risks</h2>\n          </div>\n          <div className=\"childThree\"></div>\n        </div>\n      </div>\n      <ScreenBreadcrumbs\n        routes={routes}\n        currentScreenName={currentScreenName}\n      />\n\n      {searching ? <Loader handleAbort={handleAbort} /> : \"\"}\n\n      <CellRendererPrimeReactDataTable\n        data={data}\n        rows={rows}\n        linkColumns={linkColumns}\n        linkColumnsRoutes={linkColumnsRoutes}\n        dynamicColumns={dynamicColumns}\n        headerData={headerData}\n        setHeaderData={setHeaderData}\n      />\n    </div>\n  );\n}\n\nexport default CustomerRisks;\n","import React, { useRef } from \"react\";\nimport { useState, useEffect } from \"react\";\nimport { environment } from '../../environments/environment';\nimport axios from 'axios';\nimport { CModalHeader } from '@coreui/react'\nimport { CModalBody } from '@coreui/react'\nimport { CModal } from \"@coreui/react\";\nimport SaveIcon from '@mui/icons-material/Save';\nimport { CModalTitle } from \"@coreui/react\";\nimport { AiFillDelete, AiFillWarning } from \"react-icons/ai\";\nimport GlobalValidation from \"../ValidationComponent/GlobalValidation\";\n\nfunction RelationshipHeatmapPopUp(props) {\n    const { buttonPopup, setButtonPopup,\n        customerId,\n        getData,\n        editId,\n        type,\n        editedData,\n        formData,\n        setAddmsg,\n        setEditAddmsg\n    } = props;\n\n    const baseUrl = environment.baseUrl\n    const ref = useRef([]);\n    const [formData1, setFormData1] = useState(formData)\n    const [formEditData, setFormEditData] = useState(editedData)\n    const [id, setid] = useState(0);\n    const [validationMessage, setValidationMessage] = useState(false);\n    const [priority, setPriority] = useState([])\n    const [relationshipStrength, setRelationshipStrength] = useState([])\n    const [engagementLevel, setEngagementLevel] = useState([])\n\n\n    const handleChange = (e) => {\n        const { id, value } = e.target;\n        setFormData1(prev => ({ ...prev, [id]: value }))\n    }\n\n\n\n    const getIssueSource = (e) => {\n\n        axios({\n            method: \"get\",\n            url:\n                baseUrl +\n                `/customersms/getPriority`\n        })\n            .then(res => {\n                var priority = res.data;\n                setPriority(priority);\n\n            })\n    }\n\n    const getRelationshipStrength = (e) => {\n\n        axios({\n            method: \"get\",\n            url:\n                baseUrl +\n                `/customersms/getRelationshipStrength`\n        })\n            .then(res => {\n                var relationshipStrength = res.data;\n                setRelationshipStrength(relationshipStrength);\n\n            })\n    }\n\n\n    const getEngagementLevel = (e) => {\n\n        axios({\n            method: \"get\",\n            url:\n                baseUrl +\n                `/customersms/getEngagementLevel`\n        })\n            .then(res => {\n                var engagementLevel = res.data;\n                setEngagementLevel(engagementLevel);\n\n            })\n    }\n\n\n\n    useEffect(() => {\n        getIssueSource();\n        getRelationshipStrength();\n        getEngagementLevel();\n    }, [])\n\n\n    const handleEditClick = () => {\n        let valid = GlobalValidation(ref);\n        if (valid) {\n            setValidationMessage(true);\n            return;\n        }\n\n\n        axios({\n            method: \"post\",\n            url:\n                baseUrl +\n                `/customersms/postRelationHeatMap`,\n\n\n            data: {\n\n                \"id\": editId,\n                \"customerId\": customerId,\n                \"name\": formEditData.name,\n                \"title\": formEditData.title,\n                \"department\": formEditData.department,\n                \"priority\": formEditData.priorityid,\n                \"relationship_strength\": formEditData.relationshipid,\n                \"engagement_level\": formEditData.engagementid,\n                \"role_description\": formEditData.role_description,\n                \"fy_mandate\": formEditData.fy_mandate\n            }\n\n        }).then(error => {\n\n            getData();\n            setid();\n\n        });\n\n        setButtonPopup(false);\n        setEditAddmsg(true);\n\n        setTimeout(() => {\n            setEditAddmsg(false);\n            setValidationMessage(false);\n        }, 3000);\n    }\n\n\n\n    const handleSaveClick = () => {\n\n\n        let valid = GlobalValidation(ref);\n        if (valid) {\n            setValidationMessage(true);\n\n        }\n        if (valid) {\n            return\n        }\n\n        axios({\n            method: \"post\",\n            url:\n                baseUrl +\n                `/customersms/postRelationHeatMap`,\n            data: {\n                \"customerId\": customerId,\n                \"name\": formData1.name,\n                \"title\": formData1.title,\n                \"department\": formData1.department,\n                \"priority\": formData1.priority,\n                \"relationship_strength\": formData1.relationship_strength,\n                \"engagement_level\": formData1.engagement_level,\n                \"role_description\": formData1.role_description,\n                \"fy_mandate\": formData1.fy_mandate\n            }\n\n        })\n            .then(error => {\n                getData();\n\n            });\n\n        setid();\n        setButtonPopup(false);\n\n        setAddmsg(true);\n        setTimeout(() => {\n            setAddmsg(false);\n            setValidationMessage(false);\n        }, 3000);\n    }\n\n\n    return (\n        <div>\n\n\n            <CModal size=\"xs\" visible={buttonPopup} onClose={() => { setButtonPopup(false) }} backdrop={'static'} >\n                <CModalHeader className='hgt22' style={{ cursor: \"all-scroll\" }} >\n                    <CModalTitle >\n                        {type == \"add\" ?\n                            <span className='ft16' > Add Relationship Heatmap</span> :\n                            <span className='ft16' > Edit Relationship Heatmap</span>\n                        }\n                    </CModalTitle>\n                </CModalHeader>\n                <CModalBody >\n                    <div className='col-md-12' >\n                        {validationMessage ? <div className='statusMsg error' ><span className='error-block'>\n                            <AiFillWarning /> &nbsp;Please select valid values for highlighted fields</span></div> : \"\"}\n\n                        <div className=\"form-group row mb-2\">\n                            <label className=\"col-5\" htmlFor=\"\">\n                                Name&nbsp;<span className=\"error-text\">*</span>\n                            </label>\n                            <span className=\"col-1 p-0\">:</span>\n                            <div className=\"col-6 textfield\"\n                                ref={(ele) => {\n                                    ref.current[0] = ele;\n                                }}\n                            >\n                                {type === \"add\" ? (\n                                    <input\n                                        className=\"text\"\n                                        type=\"text\"\n                                        placeholder=\"Max 50 characters\"\n                                        name=\"name\"\n                                        id=\"name\"\n                                        maxLength={50}\n                                        onKeyDown={(event) => {\n                                            if (event.code === \"Space\" && !formData1.name) event.preventDefault();\n                                        }}\n                                        onChange={(e) => {\n                                            const inputValue = e.target.value;\n                                            if (/^[a-zA-Z]+$/.test(inputValue)) {\n                                                setFormData1((prev) => ({ ...prev, name: inputValue }));\n                                            }\n                                        }}\n                                        style={{\n                                            borderBottom: formData1.name.length > 50 ? \"2px solid red\" : \"\",\n                                        }}\n                                    />\n                                ) : (\n                                    <input\n                                        type=\"text\"\n                                        placeholder=\"Max 50 characters\"\n                                        name=\"name\"\n                                        id=\"name\"\n                                        defaultValue={editedData.name}\n                                        maxLength={50}\n                                        onKeyDown={(event) => {\n                                            if (event.code === \"Space\" && !formData1.name) event.preventDefault();\n                                        }}\n                                        onChange={(e) => {\n                                            const inputValue = e.target.value;\n                                            if (/^[a-zA-Z]+$/.test(inputValue)) {\n                                                setFormEditData((prev) => ({ ...prev, name: inputValue }));\n                                            }\n                                        }}\n                                        style={{\n                                            borderBottom: formEditData.name.length > 50 ? \"2px solid red\" : \"\",\n                                        }}\n                                    />\n                                )}\n\n\n                            </div>\n                        </div>\n\n\n                    </div>\n\n                    <div className='col-md-12'>\n                        <div className=\"form-group row mb-2\">\n                            <label className=\"col-5\">\n                                Title&nbsp;<span className=\"error-text\">*</span>\n                            </label>\n                            <span className=\"col-1 p-0\">:</span>\n                            <div className=\"col-6 textfield\"\n                                ref={(ele) => {\n                                    ref.current[1] = ele;\n                                }}\n                            >\n                                {type == \"add\" ?\n                                    <input\n                                        type=\"text\"\n                                        placeholder=\"Max 50 characters\"\n                                        name=\"title\"\n                                        id=\"title\"\n                                        value={formData1.title}\n                                        onChange={(e) => {\n                                            if (e.target.value.length <= 50) {\n                                                setFormData1(prev => ({ ...prev, [\"title\"]: e.target.value }));\n                                            }\n                                        }}\n                                        className={`text ${formData1.title && formData1.title.length > 50 ? \"error-border\" : \"\"}`}\n                                    /> :\n                                    <input\n                                        type=\"text\"\n                                        placeholder=\"Max 50 characters\"\n                                        name=\"title\"\n                                        id=\"title\"\n                                        defaultValue={editedData.title}\n                                        value={formEditData.title}\n                                        onChange={(e) => {\n                                            if (e.target.value.length <= 50) {\n                                                setFormEditData(prev => ({ ...prev, [\"title\"]: e.target.value }));\n                                            }\n                                        }}\n                                        className={`text ${formEditData.title && formEditData.title.length > 50 ? \"error-border\" : \"\"}`}\n                                    />}\n                            </div>\n                        </div>\n                    </div>\n\n\n                    <div className='col-md-12' >\n                        <div className=\"form-group row mb-2\">\n                            <label className=\"col-5\" htmlFor=\"\">\n                                Department&nbsp;<span className=\"error-text\">*</span>\n                            </label>\n                            <span className=\"col-1 p-0\">:</span>\n                            <div className=\"col-6 textfield\"\n                                ref={(ele) => {\n                                    ref.current[2] = ele;\n                                }}>\n                                {type === \"add\" ? (\n                                    <input\n                                        type=\"text\"\n                                        placeholder=\"Max 50 characters\"\n                                        name=\"department\"\n                                        id=\"department\"\n                                        maxLength=\"50\"\n                                        onKeyDown={(event) => {\n                                            if (event.code === \"Space\" && !formData1.department) event.preventDefault();\n                                        }}\n                                        onChange={(e) => {\n                                            const inputValue = e.target.value;\n                                            if (/^[a-zA-Z]+$/.test(inputValue)) {\n                                                setFormData1((prev) => ({ ...prev, department: inputValue }));\n                                            }\n                                        }}\n                                        className={formData1.department.length > 50 ? \"error-input\" : \"\"}\n                                    />\n                                ) : (\n                                    <input\n                                        type=\"text\"\n                                        placeholder=\"Max 50 characters\"\n                                        name=\"department\"\n                                        id=\"department\"\n                                        maxLength=\"50\"\n                                        onKeyDown={(event) => {\n                                            if (event.code === \"Space\" && !formData1.department) event.preventDefault();\n                                        }}\n                                        defaultValue={editedData.department}\n                                        onChange={(e) => {\n                                            const inputValue = e.target.value;\n                                            if (/^[a-zA-Z]+$/.test(inputValue)) {\n                                                setFormEditData((prev) => ({ ...prev, department: inputValue }));\n                                            }\n                                        }}\n                                        className={formEditData.department.length > 50 ? \"error-input\" : \"\"}\n                                    />\n                                )}\n\n                            </div>\n                        </div>\n                    </div>\n\n\n                    <div className='col-md-12' >\n                        <div className=\"form-group row mb-2\">\n                            <label className=\"col-5\" htmlFor=\"Date\">\n                                Priority&nbsp;<span className=\"error-text\">*</span>\n                            </label>\n                            <span className=\"col-1 p-0\">:</span>\n                            <div className=\"col-6 textfield\"\n                            >\n                                {type == \"add\" ?\n                                    <>\n                                        <select\n                                            className=\"text\"\n                                            name=\"priority\"\n                                            id=\"priority\"\n                                            onChange={(e) => handleChange(e)}\n                                            ref={(ele) => {\n                                                ref.current[3] = ele;\n                                            }}\n                                        >\n                                            <option value=\"\"> &lt;&lt;Please Select&gt;&gt;</option>\n                                            {priority.map((Item) =>\n                                                <option value={Item.id}> {Item.lkup_name}</option>)}\n\n                                        </select>\n                                    </>\n\n                                    : <>\n                                        <select className='error col-md-12 p0 text '\n                                            name=\"priority\"\n                                            id=\"priority\"\n                                            onChange={(e) => setFormEditData(prev => ({ ...prev, [\"priorityid\"]: e.target.value }))}\n                                            ref={(ele) => {\n                                                ref.current[3] = ele;\n                                            }}\n                                        >\n                                            <option value=\"\"> &lt;&lt;Please Select&gt;&gt;</option>\n                                            {priority.map((Item) =>\n                                                <option value={Item.id} selected={Item.id == editedData?.priorityid ? true : false}> {Item.lkup_name}</option>)}\n                                        </select>\n\n                                    </>\n                                }\n\n                            </div>\n                        </div>\n                    </div>\n\n\n\n                    <div className='col-md-12' >\n                        <div className=\"form-group row mb-2\">\n                            <label className=\"col-5\" htmlFor=\"Date\">\n                                Relationship Strength&nbsp;<span className=\"error-text\">*</span>\n                            </label>\n                            <span className=\"col-1 p-0\">:</span>\n                            <div className=\"col-6 textfield\"\n                            >\n                                {type == \"add\" ?\n\n                                    <select\n                                        name=\"relationship_strength\"\n                                        id=\"relationship_strength\"\n                                        className=\"text\"\n                                        onChange={(e) => handleChange(e)}\n                                        ref={(ele) => {\n                                            ref.current[4] = ele;\n                                        }}\n                                    >\n                                        <option value=\"\"> &lt;&lt;Please Select&gt;&gt;</option>\n                                        {relationshipStrength.map((Item) =>\n                                            <option value={Item.id}> {Item.lkup_name}</option>)}\n\n                                    </select>\n                                    :\n\n                                    <select className='error col-md-12 p0 text'\n                                        name=\"relationship_strength\"\n                                        id=\"relationship_strength\"\n                                        onChange={(e) => setFormEditData(prev => ({ ...prev, [\"relationshipid\"]: e.target.value }))}\n                                        ref={(ele) => {\n                                            ref.current[4] = ele;\n                                        }}>\n                                        <option value=\"\"> &lt;&lt;Please Select&gt;&gt;</option>\n                                        {relationshipStrength.map((Item) =>\n                                            <option value={Item.id} selected={Item.id == editedData?.relationshipid ? true : false}> {Item.lkup_name}</option>)}\n                                    </select>\n\n\n                                }\n\n\n                            </div>\n                        </div>\n                    </div>\n\n\n                    <div className='col-md-12' >\n                        <div className=\"form-group row mb-2\">\n                            <label className=\"col-5\" htmlFor=\"Date\">\n                                Engagement Level&nbsp;<span className=\"error-text\">*</span>\n                            </label>\n                            <span className=\"col-1 p-0\">:</span>\n                            <div className=\"col-6 textfield\"\n                            >\n\n                                {type == \"add\" ?\n\n                                    <select\n                                        name=\"engagement_level\"\n                                        id=\"engagement_level\"\n                                        className=\"text\"\n                                        onChange={(e) => handleChange(e)}\n                                        ref={(ele) => {\n                                            ref.current[5] = ele;\n                                        }}\n                                    >\n                                        <option value=\"\"> &lt;&lt;Please Select&gt;&gt;</option>\n                                        {engagementLevel.map((Item) =>\n                                            <option value={Item.id}> {Item.lkup_name}</option>)}\n\n                                    </select>\n\n                                    :\n\n                                    <select className='error col-md-12 p0 text '\n                                        name=\"relationship_strength\"\n                                        id=\"relationship_strength\"\n                                        onChange={(e) => setFormEditData(prev => ({ ...prev, [\"engagementid\"]: e.target.value }))}\n                                        ref={(ele) => {\n                                            ref.current[5] = ele;\n                                        }}\n                                    >\n                                        <option value=\"\"> &lt;&lt;Please Select&gt;&gt;</option>\n                                        {engagementLevel.map((Item) =>\n                                            <option value={Item.id} selected={Item.id == editedData?.engagementid ? true : false}> {Item.lkup_name}</option>)}\n                                    </select>\n\n                                }\n\n\n                            </div>\n                        </div>\n                    </div>\n\n\n\n                    <div className='col-md-12' >\n                        <div className=\"form-group row mb-2\">\n                            <label className=\"col-5\" htmlFor=\"\">\n                                Role Description\n                            </label>\n                            <div className='col-md-12' >\n\n                                {type == \"add\" ?\n                                    <textarea\n                                        type=\"text\"\n                                        name=\"role_description\"\n                                        id=\"role_description\"\n                                        onChange={(e) => setFormData1(prev => ({ ...prev, [\"role_description\"]: e.target.value }))}\n                                    /> :\n\n                                    <textarea\n                                        type=\"text\"\n                                        name=\"role_description\"\n                                        id=\"role_description\"\n                                        defaultValue={editedData.role_description}\n                                        onChange={(e) => setFormEditData(prev => ({ ...prev, [\"role_description\"]: e.target.value }))}\n                                    />}\n\n                            </div>\n                        </div>\n                    </div>\n\n\n                    <div className='col-md-12' >\n                        <div className=\"form-group row mb-2\">\n                            <label className=\"col-5\" htmlFor=\"\">\n                                FY Mandate\n                            </label>\n\n                            <div className='col-md-12' >\n                                {type == \"add\" ?\n                                    <textarea\n                                        type=\"text\"\n                                        name=\"fy_mandate\"\n                                        id=\"fy_mandate\"\n                                        onChange={(e) => setFormData1(prev => ({ ...prev, [\"fy_mandate\"]: e.target.value }))}\n                                    /> :\n                                    <textarea\n                                        type=\"text\"\n\n                                        name=\"fy_mandate\"\n                                        id=\"fy_mandate\"\n                                        defaultValue={editedData.fy_mandate}\n                                        onChange={(e) => setFormEditData(prev => ({ ...prev, [\"fy_mandate\"]: e.target.value }))}\n                                    />\n                                }\n                            </div>\n                        </div>\n                    </div>\n\n\n                    <div className='className=\"col-md-12 col-sm-12 col-xs-12 btn-container center my-3'>\n                        {type == \"add\" ?\n                            <button className=\"btn btn-primary \"\n                                onClick={handleSaveClick}\n\n\n                            ><SaveIcon />Save</button> :\n                            <button className=\"btn btn-primary \"\n\n                                onClick={handleEditClick}\n                            ><SaveIcon />Save</button>}\n                    </div>\n                </CModalBody>\n            </CModal>\n\n        </div>\n    )\n}\nexport default RelationshipHeatmapPopUp;","import axios from \"axios\";\nimport React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport CellRendererPrimeReactDataTable from \"../PrimeReactTableComponent/CellRendererPrimeReactDataTable\";\nimport { AiFillDelete, AiFillEdit } from \"react-icons/ai\";\nimport { Column } from \"ag-grid-community\";\nimport RelationshipHeatmapPopUp from \"./RelationshipHeatmapPopUp\";\nimport { CModal } from \"@coreui/react\";\nimport { CModalHeader } from \"@coreui/react\";\nimport { CModalBody } from \"@coreui/react\";\nimport { CModalTitle } from \"@coreui/react\";\nimport { BiCheck } from \"react-icons/bi\";\nimport { environment } from \"../../environments/environment\";\nimport { FaPlus, FaTimes } from \"react-icons/fa\";\nimport ScreenBreadcrumbs from \"../Common/ScreenBreadcrumbs\";\n\nfunction RelationshipHeatmap(props) {\n  const { customerId, id, filteredData, mainMenu } = props;\n  const dataObject = mainMenu.find(\n    (item) => item.display_name === \"Relationship Heatmap\"\n  );\n\n  const [data, setData] = useState([{}]);\n  const [headerData, setHeaderData] = useState([]);\n  const [linkColumns, setLinkColumns] = useState([]);\n  const [linkColumnsRoutes, setLinkColumnsRoutes] = useState([]);\n  const [buttonPopup, setButtonPopup] = useState(false);\n  const [editId, setEditId] = useState();\n  const [editedData, setEditedData] = useState([]);\n  const [type, setType] = useState(\"add\");\n  const [addmsg, setAddmsg] = useState(false);\n  const [editmsg, setEditAddmsg] = useState(false);\n  const [deletePopup, setDeletePopup] = useState(false);\n  const [deleteMessage, setDeleteMessage] = useState(false);\n  const [deleteid, setDeleteId] = useState(\"\");\n  const baseUrl = environment.baseUrl;\n  const [custName, setCustName] = useState([]);\n  let rows = 10;\n\n  const loggedUserId = localStorage.getItem(\"resId\");\n\n  const data1 = {\n    id: null,\n    name: \"\",\n    title: \"\",\n    department: \"\",\n    priority: \"\",\n    relationship_strength: \"\",\n    engagement_level: \"\",\n    role_description: \"\",\n    fy_mandate: \"\",\n  };\n\n  const [formData, setFormData] = useState(data1);\n  useEffect(() => { }, [editedData]);\n  const handleChange = (e) => {\n    const { id, value } = e.target;\n    setFormData((prev) => ({ ...prev, [id]: value }));\n  };\n\n  const getData = () => {\n    axios\n      .get(\n        baseUrl + `/customersms/getRelationHeatMap?customerId=${customerId}`\n      )\n      .then((res) => {\n        const GetData = res.data;\n        for (let i = 0; i < GetData.length; i++) {\n          GetData[i] == \"null\" ? \"\" : null;\n          GetData[i][\"SNo\"] = i + 1;\n        }\n\n        let dataHeaders = [\n          {\n            SNo: \"S.No\",\n            name: \"Name\",\n            title: \"Title\",\n            department: \"Department\",\n            priority: \"Priority\",\n            relationship_strength: \"Relationship Strength\",\n            engagement_level: \"Engagement Level\",\n            role_description: \"Role Description\",\n            fy_mandate: \"FY Mandate\",\n            Action: \"Action\",\n          },\n        ];\n\n        setData(dataHeaders.concat(GetData));\n      });\n  };\n\n  useEffect(() => {\n    getData();\n  }, []);\n\n  const LinkTemplate = (data) => {\n    let rou = linkColumns[0];\n    return (\n      <div align=\"center\">\n        <>\n          <AiFillEdit\n            title=\"edit\"\n            color=\"orange\"\n            cursor=\"pointer\"\n            type=\"edit\"\n            size=\"1.2em\"\n            onClick={() => {\n              setEditedData(data);\n              setEditId(data.id);\n              setButtonPopup(true);\n              setType(\"edit\");\n            }}\n          />\n          &nbsp;\n          <AiFillDelete\n            title=\"delete\"\n            color=\"orange\"\n            cursor=\"pointer\"\n            type=\"delete\"\n            onClick={() => {\n              setDeletePopup(true);\n              setType(\"delete\");\n              setDeleteId(data.id);\n            }}\n          />\n        </>\n      </div>\n    );\n  };\n\n  const CellColor = (data) => {\n    return (\n      <>\n        {data.relationshipid == 1316 ? (\n          <div style={{ backgroundColor: \"#d7ae09\", padding: \"0px\" }}>\n            {data.relationship_strength}\n          </div>\n        ) : data.relationshipid == 1315 ? (\n          <div style={{ backgroundColor: \"#e41b1b\", padding: \"0px\" }}>\n            {data.relationship_strength}\n          </div>\n        ) : data.relationshipid == 1317 ? (\n          <div style={{ backgroundColor: \"#3fb141\", padding: \"0px\" }}>\n            {data.relationship_strength}\n          </div>\n        ) : data.relationshipid == 1318 ? (\n          <div style={{ backgroundColor: \"#187fde\", padding: \"0px\" }}>\n            {data.relationship_strength}\n          </div>\n        ) : (\n          \"\"\n        )}\n      </>\n    );\n  };\n\n  const NameEdit = (data) => {\n    const tooltipStyle = {\n      whiteSpace: \"nowrap\",\n      overflow: \"hidden\",\n      textOverflow: \"ellipsis\",\n      maxWidth: \"150px\",\n    };\n\n    return (\n      <div style={tooltipStyle} data-toggle=\"tooltip\" title={data.name}>\n        {data.name}\n      </div>\n    );\n  };\n\n  const titleEdit = (data) => {\n    const tooltipStyle = {\n      whiteSpace: \"nowrap\",\n      overflow: \"hidden\",\n      textOverflow: \"ellipsis\",\n      maxWidth: \"150px\",\n    };\n\n    return (\n      <div style={tooltipStyle} data-toggle=\"tooltip\" title={data.title}>\n        {data.title}\n      </div>\n    );\n  };\n\n  const departmentEdit = (data) => {\n    const tooltipStyle = {\n      whiteSpace: \"nowrap\",\n      overflow: \"hidden\",\n      textOverflow: \"ellipsis\",\n      maxWidth: \"150px\",\n    };\n\n    return (\n      <div style={tooltipStyle} data-toggle=\"tooltip\" title={data.department}>\n        {data.department}\n      </div>\n    );\n  };\n\n  const roleDescriptionEdit = (data) => {\n    const tooltipStyle = {\n      whiteSpace: \"nowrap\",\n      overflow: \"hidden\",\n      textOverflow: \"ellipsis\",\n      maxWidth: \"150px\",\n    };\n\n    return (\n      <div\n        style={tooltipStyle}\n        data-toggle=\"tooltip\"\n        title={data.role_description}\n      >\n        {data.role_description}\n      </div>\n    );\n  };\n\n  const fyMandate = (data) => {\n    const tooltipStyle = {\n      whiteSpace: \"nowrap\",\n      overflow: \"hidden\",\n      textOverflow: \"ellipsis\",\n      maxWidth: \"150px\",\n    };\n\n    return (\n      <div style={tooltipStyle} data-toggle=\"tooltip\" title={data.fy_mandate}>\n        {data.fy_mandate}\n      </div>\n    );\n  };\n  const SNo = (data) => {\n    const tooltipStyle = {\n      whiteSpace: \"nowrap\",\n      overflow: \"hidden\",\n      textOverflow: \"ellipsis\",\n      textAlign: \"center\",\n    };\n\n    return (\n      <div style={tooltipStyle} data-toggle=\"tooltip\" title={data.SNo}>\n        {data.SNo}\n      </div>\n    );\n  };\n\n  const dynamicColumns = Object.keys(headerData)?.map((col, i) => {\n    if (dataObject.is_write) {\n      return (\n        <Column\n          sortable\n          key={col}\n          body={\n            col === \"Action\"\n              ? LinkTemplate\n              : col === \"relationship_strength\"\n                ? CellColor\n                : col === \"name\"\n                  ? NameEdit\n                  : col === \"title\"\n                    ? titleEdit\n                    : col === \"department\"\n                      ? departmentEdit\n                      : col === \"role_description\"\n                        ? roleDescriptionEdit\n                        : col === \"fy_mandate\"\n                          ? fyMandate\n                          : col === \"SNo\" && SNo\n          }\n          field={col}\n          header={headerData[col]}\n        />\n      );\n    } else {\n      if (\n        col === \"relationship_strength\" ||\n        col === \"name\" ||\n        col === \"title\" ||\n        col === \"department\" ||\n        col === \"role_description\" ||\n        col === \"fy_mandate\" ||\n        (col === \"SNo\" && SNo)\n      ) {\n        return (\n          <Column\n            sortable\n            key={col}\n            body={\n              col === \"Action\"\n                ? LinkTemplate\n                : col === \"relationship_strength\"\n                  ? CellColor\n                  : col === \"name\"\n                    ? NameEdit\n                    : col === \"title\"\n                      ? titleEdit\n                      : col === \"department\"\n                        ? departmentEdit\n                        : col === \"role_description\"\n                          ? roleDescriptionEdit\n                          : col === \"fy_mandate\"\n                            ? fyMandate\n                            : col === \"SNo\" && SNo\n            }\n            field={col}\n            header={headerData[col]}\n          />\n        );\n      } else {\n        return null;\n      }\n    }\n  });\n\n  useEffect(() => {\n    data[0] && setHeaderData(JSON.parse(JSON.stringify(data[0])));\n  }, [data]);\n\n  const deleteInitiative = () => {\n    axios({\n      method: \"delete\",\n      url: baseUrl + `/customersms/deleteRelationHeatMap?id=${deleteid}`,\n    }).then((error) => {\n      getData();\n      setDeletePopup(false);\n      setDeleteMessage(true);\n      setTimeout(() => {\n        setDeleteMessage(false);\n      }, 3000);\n    });\n  };\n\n  function DeletePopup(props) {\n    const { deletePopup, setDeletePopup, editId, deleteid } = props;\n    return (\n      <div>\n        <CModal\n          visible={deletePopup}\n          size=\"m\"\n          className=\" ui-dialog\"\n          onClose={() => setDeletePopup(false)}\n        >\n          <CModalHeader className=\"hgt22\">\n            <CModalTitle>\n              <span className=\"ft16\">Delete Relationship Heatmap</span>\n            </CModalTitle>\n          </CModalHeader>\n          <CModalBody>\n            <h7>Are you sure you want to delete Relationship Heatmap?</h7>\n            &nbsp;\n            <div className=\"btn-container center my-2\">\n              <button\n                type=\"delete\"\n                className=\"btn btn-primary\"\n                onClick={() => {\n                  deleteInitiative();\n                }}\n              >\n                <AiFillDelete /> Delete\n              </button>\n              <button\n                type=\"button\"\n                className=\"btn btn-secondary\"\n                onClick={() => {\n                  setDeletePopup(false);\n                }}\n              >\n                <FaTimes /> Cancel\n              </button>\n            </div>\n          </CModalBody>\n        </CModal>\n      </div>\n    );\n  }\n  const getCustomer = () => {\n    axios({\n      method: \"get\",\n      url: baseUrl + `/customersms/Customers/getProjectName?cid=${customerId}`,\n    }).then(function (response) {\n      var resp = response.data;\n      setCustName(resp);\n    });\n  };\n  useEffect(() => {\n    getCustomer();\n  }, []);\n\n  const [routes, setRoutes] = useState([]);\n  let textContent = \"Customers\";\n  let currentScreenName = [\"Customer Search\", \"Relationship Heatmap\"];\n\n  useEffect(() => {\n    getMenus();\n  }, []);\n\n  const getMenus = () => {\n    // setMenusData\n\n    axios({\n      method: \"GET\",\n      url: baseUrl + `/CommonMS/master/getMenus?loggedUserId=${loggedUserId}`,\n    }).then((resp) => {\n      let data = resp.data;\n\n      data.forEach((item) => {\n        if (item.display_name === textContent) {\n          setRoutes([item]);\n        }\n      });\n    });\n  };\n\n  return (\n    <div>\n      {deleteMessage ? (\n        <div className=\"statusMsg success\">\n          <span className=\"errMsg\">\n            <BiCheck size=\"1.4em\" strokeWidth={{ width: \"100px\" }} /> &nbsp;\n            Relationship Heatmap Deleted Successfully\n          </span>\n        </div>\n      ) : (\n        \"\"\n      )}\n      {addmsg ? (\n        <div className=\"statusMsg success\">\n          <span className=\"errMsg\">\n            <BiCheck size=\"1.4em\" strokeWidth={{ width: \"100px\" }} /> &nbsp;\n            Relationship Heatmap Saved Successfully\n          </span>\n        </div>\n      ) : (\n        \"\"\n      )}\n      {editmsg ? (\n        <div className=\"statusMsg success\">\n          <span className=\"errMsg\">\n            <BiCheck size=\"1.4em\" strokeWidth={{ width: \"100px\" }} /> &nbsp;\n            Relationship Heatmap Updated Successfully\n          </span>\n        </div>\n      ) : (\n        \"\"\n      )}\n      <div className=\"col-md-12\">\n        <div className=\"pageTitle\">\n          <div className=\"childOne\">\n            <h2>{custName[0]?.full_name}</h2>\n          </div>\n          <div className=\"childTwo\">\n            <h2>Relationship Heatmap</h2>\n          </div>\n          <div className=\"childThree\"></div>\n        </div>\n      </div>\n      <ScreenBreadcrumbs\n        routes={routes}\n        currentScreenName={currentScreenName}\n      />\n\n      <div className=\"group mb-3 customCard\">\n        <div className=\"row\">\n          <div className=\"col-md-11\">\n            <div className=\"legendContainer\">\n              <div className=\"legend red\">\n                <div className=\"legendCircle\"></div>\n                <div className=\"legendTxt\">Negative</div>\n              </div>\n              <div className=\"legend amber\">\n                <div className=\"legendCircle\"></div>\n                <div className=\"legendTxt\">Neutral</div>\n              </div>\n              <div className=\"legend green\">\n                <div className=\"legendCircle\"></div>\n                <div className=\"legendTxt\">Advocate</div>\n              </div>\n              <div className=\"legend blue\">\n                <div className=\"legendCircle\"></div>\n                <div className=\"legendTxt\">Champion</div>\n              </div>\n            </div>\n          </div>\n\n          {dataObject.is_write == true ? (\n            <div className=\"col-md-1\">\n              <button\n                onClick={() => {\n                  setButtonPopup(true);\n                  setType(\"add\");\n                }}\n                className=\"btn btn-primary mt-2 mb-2\"\n              >\n                <FaPlus />\n                Add\n              </button>\n            </div>\n          ) : (\n            \"\"\n          )}\n        </div>\n        <CellRendererPrimeReactDataTable\n          data={data}\n          linkColumns={linkColumns}\n          linkColumnsRoutes={linkColumnsRoutes}\n          dynamicColumns={dynamicColumns}\n          headerData={headerData}\n          setHeaderData={setHeaderData}\n          rows={rows}\n        />\n\n        {buttonPopup ? (\n          <RelationshipHeatmapPopUp\n            handleChange={handleChange}\n            formData={formData}\n            setFormData={formData}\n            editId={editId}\n            setEditedData={setEditedData}\n            editedData={editedData}\n            type={type}\n            getData={getData}\n            data1={data1}\n            setAddmsg={setAddmsg}\n            setEditAddmsg={setEditAddmsg}\n            customerId={customerId}\n            data={data}\n            buttonPopup={buttonPopup}\n            setButtonPopup={setButtonPopup}\n          />\n        ) : (\n          \"\"\n        )}\n      </div>\n\n      {deletePopup ? (\n        <DeletePopup\n          editId={editId}\n          deletePopup={deletePopup}\n          setDeletePopup={setDeletePopup}\n        />\n      ) : (\n        \"\"\n      )}\n      <br />\n    </div>\n  );\n}\nexport default RelationshipHeatmap;\n","import { React, useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { environment } from \"../../environments/environment\";\nimport { VscSave } from \"react-icons/vsc\";\nimport \"primeicons/primeicons.css\";\nimport \"primereact/resources/themes/lara-light-indigo/theme.css\";\nimport \"primereact/resources/primereact.css\";\nimport \"primeflex/primeflex.css\";\nimport DeliveryCreate from \"../DeliveryComponent/DeliveryCreate\";\nimport CellRendererPrimeReactDataTable from \"../PrimeReactTableComponent/CellRendererPrimeReactDataTable\";\nimport { Column } from \"primereact/column\";\nimport { Link } from \"react-router-dom\";\nimport ScreenBreadcrumbs from \"../Common/ScreenBreadcrumbs\";\nimport { FaSave } from \"react-icons/fa\";\n// import Loader from \"../Loader/Loader\";\n\nfunction CustomersEngagement(props) {\n  const {\n    customerId,\n    mainMenu,\n    // , setLoader, loader\n  } = props;\n\n  const dataObject = mainMenu.find(\n    (item) => item.display_name === \"Engagement\"\n  );\n\n  const [data, setData] = useState([{}]);\n  const [isShow, setIsShow] = useState(false);\n  const [headerData, setHeaderData] = useState([]);\n  const [linkColumns, setLinkColumns] = useState([]);\n  const [linkColumnsRoutes, setLinkColumnsRoutes] = useState([]);\n  const [customaername, setcustomername] = useState([]);\n  const [cus, setCusName] = useState([]);\n  const baseUrl = environment.baseUrl;\n  let flag = 1;\n\n  const loggedUserId = localStorage.getItem(\"resId\");\n\n\n\n  const handleClick = () => {\n    setIsShow(true);\n    const setIsShowButton = document.getElementById(\"isShow\"); // Replace \"setIsShowButton\" with the actual ID of your button\n    const setIsShowButtonOffset = setIsShowButton.offsetTop - 80;\n\n    setTimeout(() => {\n      window.scrollTo({\n        top: setIsShowButtonOffset,\n        behavior: \"smooth\",\n      });\n    }, 100);\n  };\n\n  const getCustomerName = () => {\n    axios({\n      method: \"get\",\n      url: baseUrl + `/customersms/Customers/getCustomerName?cid=${customerId}`,\n    }).then(function (response) {\n      let resp = response.data;\n      setCusName(resp);\n    });\n  };\n\n  const getData = () => {\n    // setLoader(true);\n\n    axios\n      .get(\n        baseUrl +\n        `/customersms/Customers/getEngagementDetails?cid=${customerId}`\n      )\n\n      .then((res) => {\n        const GetData = res.data;\n        let Headercustomer = [\n          {\n            EngagementName: \"Engagement Name\",\n            BusinessUnit: \"Business Unit\",\n            division: \"Division\",\n            CostCenter: \"Cost Center\",\n            Manager: \"Manager\",\n            SalesExecutive: \"Sales Executive\",\n            ContractTerms: \"Contract Terms\",\n            StartDate: \"Start Date\",\n            EndDate: \"End Date\",\n            Status: \"Status\",\n          },\n        ];\n\n        let fdata = [\"EngagementName\"];\n        let linkRoutes = [\"/engagement/Dashboard/:engagementId\"];\n\n        setLinkColumns(fdata);\n        setLinkColumnsRoutes(linkRoutes);\n\n        setData(Headercustomer.concat(GetData));\n\n        setcustomername(GetData);\n        // setLoader(false);\n      });\n  };\n  useEffect(() => {\n    getData();\n    getCustomerName();\n  }, [customerId, customaername[0]?.customerName]);\n\n  const LinkTemplate = (data) => {\n    let rou = linkColumnsRoutes[0]?.split(\":\");\n    return (\n      <>\n        <Link\n          style={{\n            align: \"center\",\n            whiteSpace: \"nowrap !important\",\n            overflow: \"hidden\",\n            textOverflow: \"ellipsis\",\n          }}\n          data-toggle=\"tooltip\"\n          to={rou[0] + \":\" + data[rou[1]]}\n          title={data[linkColumns]}\n          target=\"_blank\"\n        >\n          {data[linkColumns]}\n        </Link>\n      </>\n    );\n  };\n\n  const Businessemplate = (data) => {\n    return (\n      <div\n        className=\"ellipsis\"\n        align=\"left\"\n        data-toggle=\"tooltip\"\n        title={data.BusinessUnit}\n      >\n        {data.BusinessUnit}\n      </div>\n    );\n  };\n\n  const dpToolip = (data) => {\n    return (\n      <div\n        className=\"ellipsis\"\n        align=\"left\"\n        data-toggle=\"tooltip\"\n        title={data.CostCenter}\n      >\n        {data.CostCenter}\n      </div>\n    );\n  };\n  const engNameToolip = (data) => {\n    return (\n      <div\n        className=\"ellipsis\"\n        align=\"left\"\n        data-toggle=\"tooltip\"\n        title={data.Manager}\n      >\n        {data.Manager}\n      </div>\n    );\n  };\n  const projectToolip = (data) => {\n    return (\n      <div\n        className=\"ellipsis\"\n        align=\"left\"\n        data-toggle=\"tooltip\"\n        title={data.SalesExecutive}\n      >\n        {data.SalesExecutive}\n      </div>\n    );\n  };\n\n  const emailToolip = (data) => {\n    return (\n      <div\n        className=\"ellipsis\"\n        align=\"left\"\n        data-toggle=\"tooltip\"\n        title={data.StartDate}\n      >\n        {data.StartDate}\n      </div>\n    );\n  };\n  const resStDtAlign = (data) => {\n    return (\n      <div align=\"left\" data-toggle=\"tooltip\" title={data.ContractTerms}>\n        {data.ContractTerms}\n      </div>\n    );\n  };\n  const resEndDtAlign = (data) => {\n    return (\n      <div align=\"left\" data-toggle=\"tooltip\" title={data.EndDate}>\n        {data.EndDate}\n      </div>\n    );\n  };\n  const monthDtAlign = (data) => {\n    return (\n      <div align=\"left\" data-toggle=\"tooltip\" title={data.Status}>\n        {data.Status}\n      </div>\n    );\n  };\n  const revenueAlign = (data) => {\n    return (\n      <div align=\"left\" data-toggle=\"tooltip\" title={data.division}>\n        {data.division}\n      </div>\n    );\n  };\n\n  const dynamicColumns = Object.keys(headerData)?.map((col, i) => {\n    return (\n      <Column\n        sortable\n        key={col}\n        body={\n          col == \"EngagementName\"\n            ? LinkTemplate\n            : col == \"BusinessUnit\"\n              ? Businessemplate\n              : col == \"division\"\n                ? revenueAlign\n                : col == \"CostCenter\"\n                  ? dpToolip\n                  : col == \"Manager\"\n                    ? engNameToolip\n                    : col == \"SalesExecutive\"\n                      ? projectToolip\n                      : col == \"ContractTerms\"\n                        ? resStDtAlign\n                        : col == \"StartDate\"\n                          ? emailToolip\n                          : col == \"EndDate\"\n                            ? resEndDtAlign\n                            : col == \"Status\" && monthDtAlign\n        }\n        field={col}\n        header={headerData[col]}\n      />\n    );\n  });\n\n  useEffect(() => {\n    data[0] && setHeaderData(JSON.parse(JSON.stringify(data[0])));\n  }, [data]);\n\n  const [routes, setRoutes] = useState([]);\n  let textContent = \"Customers\";\n  let currentScreenName = [\"Customer Search\", \"Engagements\"];\n\n  useEffect(() => {\n    getMenus();\n  }, []);\n\n  const getMenus = () => {\n    // setMenusData\n\n    axios({\n      method: \"GET\",\n      url: baseUrl + `/CommonMS/master/getMenus?loggedUserId=${loggedUserId}`,\n    }).then((resp) => {\n      let data = resp.data;\n\n      data.forEach((item) => {\n        if (item.display_name === textContent) {\n          setRoutes([item]);\n        }\n      });\n    });\n  };\n\n  return (\n    <div>\n      {/* {loader ? (\n        <div className=\"loaderBlock\">\n          <Loader />\n        </div>\n      ) : (\n        \"\"\n      )} */}\n      <div className=\"col-md-12\">\n        <div className=\"pageTitle\">\n          <div className=\"childOne\"></div>\n          <div className=\"childTwo\">\n            <h2>{cus} : Engagements</h2>\n          </div>\n          <div className=\"childThree\"></div>\n        </div>\n      </div>\n      <ScreenBreadcrumbs\n        routes={routes}\n        currentScreenName={currentScreenName}\n      />\n\n      <div className=\"mb-2\">\n        <CellRendererPrimeReactDataTable\n          data={data}\n          rows={10}\n          linkColumns={linkColumns}\n          linkColumnsRoutes={linkColumnsRoutes}\n          dynamicColumns={dynamicColumns}\n          headerData={headerData}\n          setHeaderData={setHeaderData}\n        />\n      </div>\n\n      <div>\n        {dataObject.is_write == true ? (\n          <button\n            id=\"isShow\"\n            onClick={handleClick}\n            className=\"btn btn-primary\"\n            type=\"submit\"\n          >\n            <FaSave /> New Engagement\n          </button>\n        ) : (\n          \"\"\n        )}\n      </div>\n\n      {isShow == true ? (\n        <DeliveryCreate\n          flag={flag}\n          getData={getData}\n          customerName={customaername[0]?.customerName}\n          customerId={customerId}\n          isShow={isShow}\n          setIsShow={setIsShow}\n        />\n      ) : (\n        \"\"\n      )}\n    </div>\n  );\n}\nexport default CustomersEngagement;\n","import { CModal, CModalHeader, CModalBody, CModalTitle } from \"@coreui/react\";\nimport React, { useRef, useState } from \"react\";\nimport Draggable from \"react-draggable\";\nimport GlobalValidation from \"../ValidationComponent/GlobalValidation\";\nimport SaveIcon from \"@mui/icons-material/Save\";\nimport axios from \"axios\";\nimport { environment } from \"../../environments/environment\";\nimport { AiFillWarning } from \"react-icons/ai\";\n\nfunction CustomerTechnologyPopUp(props) {\n  const { buttonPopup, setButtonPopup, customerId, gettabledata, setAddmsg } =\n    props;\n  const [validationMessage, setValidationMessage] = useState(false);\n  const [formdata, setFormdata] = useState({\n    \"Software or Function\": \"\",\n    Software: \"\",\n    Platform: \"\",\n    \"Service Vendor\": \"\",\n    \"Future Plans\": \"\",\n    \"Competitor Notes\": \"\",\n  });\n  const ref = useRef([]);\n  const baseUrl = environment.baseUrl;\n\n  const handleChange = (event) => {\n    event.preventDefault;\n    const { name, value } = event.target;\n    setFormdata((prevProps) => ({ ...prevProps, [name]: value }));\n  };\n\n  const handleClick = () => {\n    let valid = GlobalValidation(ref);\n    if (valid) {\n      setValidationMessage(true);\n      return;\n    }\n    axios({\n      method: \"post\",\n      url: baseUrl + `/customersms/Customers/postCustomerTechnology`,\n      data: {\n        customerId: customerId,\n        systemFunction: formdata[\"Software or Function\"],\n        software: formdata.Software,\n        platform: formdata.Platform,\n        serviceVendor: formdata[\"Service Vendor\"],\n        futurePlans: formdata[\"Future Plans\"],\n        competitorNotes: formdata[\"Competitor Notes\"],\n      },\n    }).then(function (response) {\n      gettabledata();\n      setButtonPopup(false);\n      setAddmsg(true);\n      setTimeout(() => {\n        setAddmsg(false);\n      }, 3000);\n    });\n  };\n\n  return (\n    <div>\n      <CModal\n        size=\"xs\"\n        backdrop=\"static\"\n        visible={buttonPopup}\n        className=\"ui-dialog \"\n        onClose={() => {\n          setButtonPopup(false);\n        }}\n      >\n        <CModalHeader className=\"hgt22\" style={{ cursor: \"all-scroll\" }}>\n          <CModalTitle>\n            <span className=\"ft16\"> Add Technology</span>\n          </CModalTitle>\n        </CModalHeader>\n        <CModalBody>\n          <div className=\"col-md-12 \">\n            {validationMessage ? (\n              <div className=\"statusMsg error\">\n                <span className=\"error-block\">\n                  <AiFillWarning /> Please select valid values for highlighted\n                  fields\n                </span>\n              </div>\n            ) : (\n              \"\"\n            )}\n            <div className=\"group-content row mb-2\">\n              <div className=\"form-group row mb-2\">\n                <label className=\"col-5\" htmlFor=\"Software or Function\">\n                  Software or Function\n                  <span className=\"required error-text ml-1\">*</span>\n                </label>\n                <span className=\"col-1\">:</span>\n                <div\n                  className=\"col-6 textfield\"\n                  ref={(ele) => {\n                    ref.current[0] = ele;\n                  }}\n                >\n                  <input\n                    type=\"text\"\n                    // className=\"form-control\"\n                    id=\"Software or Function\"\n                    name=\"Software or Function\"\n                    placeholder=\"Max 50 characters\"\n                    maxLength={50}\n                    required\n                    onKeyDown={(event) => {\n                      if (\n                        event.code === \"Space\" &&\n                        !formdata[\"Software or Function\"]\n                      )\n                        event.preventDefault();\n                    }}\n                    onChange={handleChange}\n                  />\n                </div>\n              </div>\n              <div className=\"form-group row mb-2\">\n                <label className=\"col-5\" htmlFor=\"Software\">\n                  Software\n                  <span className=\"required error-text ml-1\">*</span>\n                </label>\n                <span className=\"col-1\">:</span>\n                <div\n                  className=\"col-6 textfield\"\n                  ref={(ele) => {\n                    ref.current[1] = ele;\n                  }}\n                >\n                  <input\n                    type=\"text\"\n                    // className=\"form-control\"\n                    id=\"Software\"\n                    name=\"Software\"\n                    placeholder=\"Max 50 characters\"\n                    maxLength={50}\n                    required\n                    onKeyDown={(event) => {\n                      if (event.code === \"Space\" && !formdata.Software)\n                        event.preventDefault();\n                    }}\n                    onChange={handleChange}\n                  />\n                </div>\n              </div>\n              <div className=\"form-group row mb-2\">\n                <label className=\"col-5\" htmlFor=\"Platform\">\n                  Platform\n                </label>\n                <span className=\"col-1\">:</span>\n                <div className=\"col-6\">\n                  <input\n                    type=\"text\"\n                    // className=\"form-control\"\n                    id=\"Platform\"\n                    name=\"Platform\"\n                    placeholder=\"Max 50 characters\"\n                    maxLength={50}\n                    onChange={handleChange}\n                  />\n                </div>\n              </div>\n              <div className=\"form-group row mb-2\">\n                <label className=\"col-5\" htmlFor=\"Service Vendor\">\n                  Service Vendor\n                </label>\n                <span className=\"col-1\">:</span>\n                <div className=\"col-6\">\n                  <input\n                    type=\"text\"\n                    // className=\"form-control\"\n                    id=\"Service Vendor\"\n                    name=\"Service Vendor\"\n                    placeholder=\"Max 50 characters\"\n                    maxLength={50}\n                    onChange={handleChange}\n                  />\n                </div>\n              </div>\n              <div className=\"form-group mb-2\">\n                <label htmlFor=\"Future Plans\">Future Plans</label>\n                <textarea\n                  type=\"text\"\n                  name=\"Future Plans\"\n                  id=\"Future Plans\"\n                  onChange={handleChange}\n                />\n              </div>\n              <div className=\"form-group mb-2\">\n                <label htmlFor=\"Competitor Notes\">Competitor Notes</label>\n                <textarea\n                  type=\"text\"\n                  name=\"Competitor Notes\"\n                  id=\"Competitor Notes\"\n                  onChange={handleChange}\n                />\n              </div>\n              <div className='className=\"col-md-12 col-sm-12 col-xs-12 btn-container center my-3'>\n                <button className=\"btn btn-primary \" onClick={handleClick}>\n                  <SaveIcon />\n                  Save\n                </button>\n              </div>\n            </div>\n          </div>\n        </CModalBody>\n      </CModal>\n    </div>\n  );\n}\nexport default CustomerTechnologyPopUp;\n","import React from \"react\";\nimport { useState, useEffect, useRef } from \"react\";\nimport axios from \"axios\";\nimport { MdOutlinePlaylistAdd } from \"react-icons/md\";\nimport { AiFillDelete } from \"react-icons/ai\";\nimport { ImCross } from \"react-icons/im\";\nimport { BiCheck } from \"react-icons/bi\";\nimport CustomerTechnologyPopUp from \"./CustomerTechnologyPopUp.\";\nimport { CModal, CModalHeader, CModalBody, CModalTitle } from \"@coreui/react\";\nimport CellRendererPrimeReactDataTable from \"../PrimeReactTableComponent/CellRendererPrimeReactDataTable\";\nimport { Column } from \"primereact/column\";\nimport Draggable from \"react-draggable\";\nimport { environment } from \"../../environments/environment\";\nimport Loader from \"../Loader/Loader\";\nimport ScreenBreadcrumbs from \"../Common/ScreenBreadcrumbs\";\nimport { FaPlus } from \"react-icons/fa\";\n\nfunction CustomerTechnology(props) {\n  const { customerId, mainMenu } = props;\n  const dataObject = mainMenu.find(\n    (item) => item.display_name === \"Technology\"\n  );\n\n  const [data, setData] = useState([]);\n  const [buttonPopup, setButtonPopup] = useState(false);\n  const [deletePopup, setDeletePopup] = useState(false);\n  const [headerData, setHeaderData] = useState([]);\n  const [linkColumns, setLinkColumns] = useState([]);\n  const [linkColumnsRoutes, setLinkColumnsRoutes] = useState([]);\n  const [addmsg, setAddmsg] = useState(false);\n  const [deleteMessage, setDeleteMessage] = useState(false);\n  const [deleteid, setDeleteId] = useState(\"\");\n  const [searching, setsearching] = useState(false);\n  const [custName, setCustName] = useState([]);\n\n  const abortController = useRef(null);\n\n  const baseUrl = environment.baseUrl;\n  let rows = 10;\n  const handleAbort = () => {\n    abortController.current && abortController.current.abort();\n    setsearching(false);\n  };\n\n  const loggedUserId = localStorage.getItem(\"resId\");\n\n  const SNo = (data) => {\n    return (\n      <div\n        className=\"ellipsis\"\n        align=\"center\"\n        data-toggle=\"tooltip\"\n        title={data.SNo}\n      >\n        {data.SNo}\n      </div>\n    );\n  };\n\n  const system_function = (data) => {\n    return (\n      <div\n        className=\"ellipsis\"\n        data-toggle=\"tooltip\"\n        title={data.system_function}\n      >\n        {data.system_function}\n      </div>\n    );\n  };\n  const software = (data) => {\n    return (\n      <div className=\"ellipsis\" data-toggle=\"tooltip\" title={data.software}>\n        {data.software}\n      </div>\n    );\n  };\n  const platform = (data) => {\n    return (\n      <div className=\"ellipsis\" data-toggle=\"tooltip\" title={data.platform}>\n        {data.platform}\n      </div>\n    );\n  };\n  const service_vendor = (data) => {\n    return (\n      <div\n        className=\"ellipsis\"\n        data-toggle=\"tooltip\"\n        title={data.service_vendor}\n      >\n        {data.service_vendor}\n      </div>\n    );\n  };\n  const future_plans = (data) => {\n    return (\n      <div className=\"ellipsis\" data-toggle=\"tooltip\" title={data.future_plans}>\n        {data.future_plans}\n      </div>\n    );\n  };\n  const competitor_notes = (data) => {\n    return (\n      <div\n        className=\"ellipsis\"\n        data-toggle=\"tooltip\"\n        title={data.competitor_notes}\n      >\n        {data.competitor_notes}\n      </div>\n    );\n  };\n\n  const gettabledata = () => {\n    setsearching(false);\n    abortController.current = new AbortController();\n\n    axios({\n      url:\n        baseUrl +\n        `/customersms/Customers/getCustomerTechnology?cid=${customerId}`,\n      signal: abortController.current.signal,\n    }).then((resp) => {\n      let tabledata = resp.data;\n      for (let i = 0; i < tabledata.length; i++) {\n        tabledata[i][\"SNo\"] = i + 1;\n      }\n      let header = [\n        {\n          SNo: \"S.No \",\n          system_function: \"System or Function\",\n          software: \"Software\",\n          platform: \"Platform\",\n          service_vendor: \"Service Vendor\",\n          future_plans: \"Future Plans\",\n          competitor_notes: \"Competitor Notes\",\n          Action: \"Action\",\n        },\n      ];\n      setData(header.concat(tabledata));\n      setTimeout(() => {\n        setsearching(false);\n      }, 1000);\n    });\n  };\n\n  useEffect(() => {\n    gettabledata();\n  }, []);\n\n  const getCustomer = () => {\n    axios({\n      method: \"get\",\n      url: baseUrl + `/customersms/Customers/getProjectName?cid=${customerId}`,\n    }).then(function (response) {\n      var resp = response.data;\n      setCustName(resp);\n    });\n  };\n  useEffect(() => {\n    getCustomer();\n  }, []);\n  const LeftAlign = (data) => {\n    return <div align=\"center\">{data.SNo}</div>;\n  };\n\n  const LinkTemplate = (data) => {\n    return (\n      <>\n        <div align=\"center\">\n          <AiFillDelete\n            color=\"orange\"\n            cursor=\"pointer\"\n            onClick={() => {\n              setDeletePopup(true);\n              setDeleteId(data.id);\n            }}\n            style={{ align: \"Center\" }}\n          />\n        </div>\n      </>\n    );\n  };\n\n  const dynamicColumns = Object.keys(headerData)?.map((col, i) => {\n    // Check the value of dataObject.is_write\n    if (dataObject.is_write) {\n      // Include all columns if dataObject.is_write is true\n      return (\n        <Column\n          sortable\n          key={col}\n          body={\n            (col === \"SNo\" && SNo) ||\n            (col === \"Action\" && LinkTemplate) ||\n            (col === \"system_function\" && system_function) ||\n            (col === \"software\" && software) ||\n            (col === \"platform\" && platform) ||\n            (col === \"service_vendor\" && service_vendor) ||\n            (col === \"future_plans\" && future_plans) ||\n            (col === \"competitor_notes\" && competitor_notes)\n          }\n          field={col}\n          header={headerData[col]}\n        />\n      );\n    } else {\n      // Include only certain columns if dataObject.is_write is false\n      // You can modify this condition to include the columns you want\n      if (\n        col === \"SNo\" ||\n        col === \"system_function\" ||\n        col === \"software\" ||\n        col === \"platform\" ||\n        col === \"service_vendor\" ||\n        col === \"future_plans\" ||\n        col === \"competitor_notes\"\n      ) {\n        return (\n          <Column\n            sortable\n            key={col}\n            body={\n              (col === \"SNo\" && SNo) ||\n              (col === \"Action\" && LinkTemplate) ||\n              (col === \"system_function\" && system_function) ||\n              (col === \"software\" && software) ||\n              (col === \"platform\" && platform) ||\n              (col === \"service_vendor\" && service_vendor) ||\n              (col === \"future_plans\" && future_plans) ||\n              (col === \"competitor_notes\" && competitor_notes)\n            }\n            field={col}\n            header={headerData[col]}\n          />\n        );\n      } else {\n        return null; // Exclude other columns\n      }\n    }\n  });\n\n  useEffect(() => {\n    data[0] && setHeaderData(JSON.parse(JSON.stringify(data[0])));\n  }, [data]);\n\n  const deleteTechnology = () => {\n    axios({\n      method: \"delete\",\n      url:\n        baseUrl +\n        `/customersms/Customers/deleteCustomerTechnology?id=${deleteid}`,\n    }).then((error) => {\n      setDeletePopup(false);\n      gettabledata();\n      setDeleteMessage(true);\n      setTimeout(() => {\n        setDeleteMessage(false);\n      }, 3000);\n    });\n  };\n\n  function DeletePopup(props) {\n    const { deletePopup, setDeletePopup } = props;\n\n    return (\n      <div>\n        <Draggable>\n          <CModal\n            visible={deletePopup}\n            size=\"m\"\n            className=\"ui-dialog \"\n            backdrop=\"static\"\n            onClose={() => setDeletePopup(false)}\n          >\n            <CModalHeader className=\"hgt22\">\n              <CModalTitle>\n                <span className=\"ft16\">Delete Technology</span>\n              </CModalTitle>\n            </CModalHeader>\n            <CModalBody>\n              <h6>Are you sure you want to delete Technology ?</h6>\n              <div className=\"btn-container center my-2\">\n                <button\n                  type=\"delete\"\n                  className=\"btn btn-primary\"\n                  onClick={() => {\n                    deleteTechnology();\n                  }}\n                >\n                  <AiFillDelete />\n                  Delete\n                </button>\n\n                <button\n                  type=\"button\"\n                  className=\"btn btn-secondary\"\n                  onClick={() => {\n                    setDeletePopup(false);\n                  }}\n                >\n                  <ImCross />\n                  Cancel\n                </button>\n              </div>\n            </CModalBody>\n          </CModal>\n        </Draggable>\n      </div>\n    );\n  }\n  const [routes, setRoutes] = useState([]);\n  let textContent = \"Customers\";\n  let currentScreenName = [\"Customer Search\", \"Technology\"];\n\n  useEffect(() => {\n    getMenus();\n  }, []);\n\n  const getMenus = () => {\n    // setMenusData\n\n    axios({\n      method: \"GET\",\n      url: baseUrl + `/CommonMS/master/getMenus?loggedUserId=${loggedUserId}`,\n    }).then((resp) => {\n      let data = resp.data;\n\n      data.forEach((item) => {\n        if (item.display_name === textContent) {\n          setRoutes([item]);\n        }\n      });\n    });\n  };\n\n  return (\n    <div>\n      {deleteMessage ? (\n        <div className=\"statusMsg success\">\n          <span className=\"errMsg\">\n            <BiCheck /> &nbsp;Technology Deleted successfully\n          </span>\n        </div>\n      ) : (\n        \"\"\n      )}\n\n      {addmsg ? (\n        <div className=\"statusMsg success\">\n          <span>\n            <BiCheck /> &nbsp;Technology Saved successfully\n          </span>\n        </div>\n      ) : (\n        \"\"\n      )}\n      <div className=\"pageTitle\">\n        <div className=\"childOne\">\n          <h2>{custName[0]?.full_name}</h2>\n        </div>\n        <div className=\"childTwo\">\n          <h2>Technology</h2>\n        </div>\n        <div className=\"childThree\"></div>\n      </div>\n      <ScreenBreadcrumbs\n        routes={routes}\n        currentScreenName={currentScreenName}\n      />\n\n      <div className=\"group mb-5 customCard\">\n        {dataObject.is_write == true ? (\n          <div className=\"row\">\n            <div className=\"col-md-11 mt-2 mb-2\"></div>\n            <div className=\"col-md-1\">\n              <button\n                onClick={() => {\n                  setButtonPopup(true);\n                }}\n                className=\"btn btn-primary mt-2 mb-2\"\n              >\n                <FaPlus />\n                Add\n              </button>\n            </div>\n          </div>\n        ) : (\n          \"\"\n        )}\n        <CellRendererPrimeReactDataTable\n          data={data}\n          linkColumns={linkColumns}\n          linkColumnsRoutes={linkColumnsRoutes}\n          dynamicColumns={dynamicColumns}\n          headerData={headerData}\n          setHeaderData={setHeaderData}\n          rows={rows}\n        />\n      </div>\n      {buttonPopup ? (\n        <CustomerTechnologyPopUp\n          buttonPopup={buttonPopup}\n          setButtonPopup={setButtonPopup}\n          gettabledata={gettabledata}\n          setAddmsg={setAddmsg}\n          customerId={customerId}\n        />\n      ) : (\n        \"\"\n      )}\n      {searching ? <Loader handleAbort={handleAbort} /> : \"\"}\n\n      {deletePopup ? (\n        <DeletePopup\n          deletePopup={deletePopup}\n          setDeletePopup={setDeletePopup}\n        />\n      ) : (\n        \"\"\n      )}\n    </div>\n  );\n}\n\nexport default CustomerTechnology;\n","import React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport FlatPrimeReactTable from \"../PrimeReactTableComponent/FlatPrimeReactTable\";\nimport { DataTable } from \"primereact/datatable\";\nimport { Column } from \"primereact/column\";\nimport { environment } from \"../../environments/environment\";\nimport { Link } from \"react-router-dom\";\nimport { ColumnGroup } from \"primereact/columngroup\";\nimport { Row } from \"primereact/row\";\nimport CellRendererPrimeReactDataTable from \"../PrimeReactTableComponent/CellRendererPrimeReactDataTable\";\nimport ScreenBreadcrumbs from \"../Common/ScreenBreadcrumbs\";\n\nfunction Customerdashboard(props) {\n  const { customerId } = props;\n\n  const baseUrl = environment.baseUrl;\n  const [currency, setCurrency] = useState([]);\n  const [mainMenu, setMainMenu] = useState([]);\n  const [customerData, setCustomerData] = useState([]);\n  const [customerDataDivision, setCustomerDataDivision] = useState([]);\n  const [customerDatainterstake, setCustomerDatainterstake] = useState([]);\n  const [customerDatarole, setCustomerDatarole] = useState([]);\n  const [customerDataextstake, setCustomerDataextstake] = useState([]);\n  const [data, setData] = useState([]);\n  const [headerData, setHeaderData] = useState([]);\n  const [headerDatastakeHolders, setHeaderDatastakeholders] = useState([]);\n  const [headerDataInternal, setHeaderDataInternal] = useState([]);\n  let url = window.location.href;\n  let customerArr = url.split(\":\");\n  const tabMenus = () => {\n    axios\n      .get(\n        baseUrl +\n          `/CommonMS/master/getTabMenus?ProjectId=${\n            customerArr[customerArr.length - 1]\n          }&loggedUserId=${loggedUserId}&type=Customer&subType=customer`\n      )\n      .then((resp) => {\n        const data = resp.data;\n\n        setMainMenu(data);\n      })\n      .catch((err) => {});\n  };\n  useEffect(() => {\n    tabMenus();\n  }, []);\n  const addressstake = (data) => {\n    return (\n      <div\n        className=\"ellipsis\"\n        align=\"left\"\n        data-toggle=\"tooltip\"\n        title={data.address}\n      >\n        {data.address}\n      </div>\n    );\n  };\n  const cityoolipstake = (data) => {\n    return (\n      <div\n        className=\"ellipsis\"\n        align=\"left\"\n        data-toggle=\"tooltip\"\n        title={data.name}\n      >\n        {data.name}\n      </div>\n    );\n  };\n  const country_nameeAlignstake = (data) => {\n    return (\n      <div\n        className=\"ellipsis\"\n        align=\"left\"\n        data-toggle=\"tooltip\"\n        title={data.type}\n      >\n        {data.type}\n      </div>\n    );\n  };\n  const stateToolipstake = (data) => {\n    return (\n      <div\n        className=\"ellipsis\"\n        align=\"left\"\n        data-toggle=\"tooltip\"\n        title={data.email}\n      >\n        {data.email}\n      </div>\n    );\n  };\n  const customer_idToolipstake = (data) => {\n    return (\n      <div\n        className=\"ellipsis\"\n        align=\"left\"\n        data-toggle=\"tooltip\"\n        title={data.division}\n      >\n        {data.division}\n      </div>\n    );\n  };\n  const contactAlignstake = (data) => {\n    return (\n      <div\n        className=\"ellipsis\"\n        align=\"left\"\n        data-toggle=\"tooltip\"\n        title={data.phone}\n      >\n        {data.phone}\n      </div>\n    );\n  };\n  const dynamicColumnsstakeholders = Object.keys(headerDatastakeHolders)?.map(\n    (col, i) => {\n      return (\n        <Column\n          sortable\n          key={col}\n          field={col}\n          header={headerDatastakeHolders[col]}\n          body={\n            col == \"address\"\n              ? addressstake\n              : col == \"name\"\n              ? cityoolipstake\n              : col == \"type\"\n              ? country_nameeAlignstake\n              : col == \"email\"\n              ? stateToolipstake\n              : col == \"division\"\n              ? customer_idToolipstake\n              : col == \"phone\" && contactAlignstake\n          }\n        />\n      );\n    }\n  );\n  const Internalid = (data) => {\n    return (\n      <div\n        className=\"ellipsis\"\n        align=\"left\"\n        data-toggle=\"tooltip\"\n        title={data.id3}\n      >\n        {data.id3}\n      </div>\n    );\n  };\n  const typeIDFunction = (data) => {\n    return (\n      <div\n        className=\"ellipsis\"\n        align=\"left\"\n        data-toggle=\"tooltip\"\n        title={data.type_id}\n      >\n        {data.type_id}\n      </div>\n    );\n  };\n  const phoneAlignstake = (data) => {\n    return (\n      <div\n        className=\"ellipsis\"\n        align=\"left\"\n        data-toggle=\"tooltip\"\n        title={data.phone}\n      >\n        {data.phone}\n      </div>\n    );\n  };\n  const businessunitToolipstake = (data) => {\n    return (\n      <div\n        className=\"ellipsis\"\n        align=\"left\"\n        data-toggle=\"tooltip\"\n        title={data.businessunit}\n      >\n        {data.businessunit}\n      </div>\n    );\n  };\n  const sresourceIdToolipstake = (data) => {\n    return (\n      <div\n        className=\"ellipsis\"\n        align=\"left\"\n        data-toggle=\"tooltip\"\n        title={data.resource_id}\n      >\n        {data.resource_id}\n      </div>\n    );\n  };\n  const firstNameNTERNAL = (data) => {\n    return (\n      <div\n        className=\"ellipsis\"\n        align=\"left\"\n        data-toggle=\"tooltip\"\n        title={data.firstName}\n      >\n        {data.firstName}\n      </div>\n    );\n  };\n  const addressnternL = (data) => {\n    return (\n      <div\n        className=\"ellipsis\"\n        align=\"left\"\n        data-toggle=\"tooltip\"\n        title={data.address}\n      >\n        {data.address}\n      </div>\n    );\n  };\n  const aemailinternal = (data) => {\n    return (\n      <div\n        className=\"ellipsis\"\n        align=\"left\"\n        data-toggle=\"tooltip\"\n        title={data.email}\n      >\n        {data.email}\n      </div>\n    );\n  };\n  const dynamicColumnsInternal = Object.keys(headerDataInternal)?.map(\n    (col, i) => {\n      return (\n        <Column\n          sortable\n          key={col}\n          field={col}\n          header={headerDataInternal[col]}\n          body={\n            col == \"email\"\n              ? aemailinternal\n              : col == \"address\"\n              ? addressnternL\n              : col == \"firstName\"\n              ? firstNameNTERNAL\n              : col == \"resource_id\"\n              ? sresourceIdToolipstake\n              : col == \"businessunit\"\n              ? businessunitToolipstake\n              : col == \"id3\"\n              ? Internalid\n              : col == \"phone\"\n              ? phoneAlignstake\n              : col == \"type_id\" && typeIDFunction\n          }\n        />\n      );\n    }\n  );\n  const getCustomersRoles = () => {\n    if (props.customerId != 0) {\n      axios({\n        method: \"get\",\n        url:\n          baseUrl +\n          `/customersms/Customers/getCustomersroles?cid=${props.customerId}`,\n      }).then(function (response) {\n        let resp = response.data;\n\n        let desp = [...new Set(resp.map((d) => d.display_name))];\n\n        let dt = [];\n\n        for (let i = 0; i < desp.length; i++) {\n          let obj = {};\n          obj[\"display_name\"] = desp[i];\n\n          let countriesData = JSON.parse(JSON.stringify(resp)).filter(\n            (d) => d.display_name == desp[i]\n          );\n\n          let countriesNames = [\n            \"\",\n            \"Canada\",\n            \"Germany\",\n            \"India\",\n            \"Jordan\",\n            \"UAE\",\n            \"UK\",\n            \"US\",\n          ];\n\n          let sortedData = [];\n\n          for (let j = 0; j < countriesNames.length; j++) {\n            let obj = {\n              display_name: \"\",\n              cost: \"\",\n              rate: \"\",\n              country_name: \"\",\n              countryid: \"\",\n            };\n\n            if (\n              countriesData.some(\n                (d) => d[\"country_name\"] == countriesNames[j]\n              ) == false\n            ) {\n              obj[\"country_name\"] = countriesNames[j];\n              sortedData.push(obj);\n            } else {\n              for (let k = 0; k < countriesData.length; k++) {\n                if (\n                  countriesNames[j].includes(countriesData[k][\"country_name\"])\n                ) {\n                  sortedData.push(countriesData[k]);\n                }\n              }\n            }\n          }\n\n          obj[\"data\"] = sortedData;\n          dt.push(obj);\n        }\n\n        setCustomerDatarole(dt);\n      });\n    }\n  };\n\n  const getCustomersinternalStakeHOLDER = () => {\n    if (props.customerId != 0) {\n      axios({\n        method: \"get\",\n        url:\n          baseUrl +\n          `/customersms/Customers/getCustomersinternalstakeholders?cid=${props.customerId}`,\n      }).then(function (response) {\n        let tabledata = response.data;\n        let header = [\n          {\n            firstName: \"Name\",\n            businessunit: \"BU \",\n            type_id: \"Type\",\n            address: \"Address\",\n            phone: \"Phone\",\n            email: \"Email\",\n          },\n        ];\n        let data = [...header, ...tabledata];\n        setCustomerDatainterstake(data);\n      });\n    }\n  };\n\n  useEffect(() => {\n    customerDatainterstake[0] &&\n      setHeaderDataInternal(\n        JSON.parse(JSON.stringify(customerDatainterstake[0]))\n      );\n  }, [customerDatainterstake]);\n  const getCustomersExtStakeHOLDER = () => {\n    if (props.customerId != 0) {\n      axios({\n        method: \"get\",\n        url:\n          baseUrl +\n          `/customersms/Customers/getCustomersextstakeholders?cid=${props.customerId}`,\n      }).then(function (response) {\n        let tabledata = response.data;\n        let header = [\n          {\n            name: \"Name\",\n            division: \"Division\",\n            type: \"Type\",\n            address: \"Address\",\n            phone: \"Phone\",\n            email: \"Email\",\n          },\n        ];\n        let data = [...header, ...tabledata];\n        setCustomerDataextstake(data);\n      });\n    }\n  };\n\n  useEffect(() => {\n    customerDataextstake[0] &&\n      setHeaderDatastakeholders(\n        JSON.parse(JSON.stringify(customerDataextstake[0]))\n      );\n  }, [customerDataextstake]);\n\n  const address = (data) => {\n    return (\n      <div\n        className=\"ellipsis\"\n        align=\"left\"\n        data-toggle=\"tooltip\"\n        title={data.address}\n      >\n        {data.address}\n      </div>\n    );\n  };\n  const cityoolip = (data) => {\n    return (\n      <div\n        className=\"ellipsis\"\n        align=\"left\"\n        data-toggle=\"tooltip\"\n        title={data.city}\n      >\n        {data.city}\n      </div>\n    );\n  };\n  const country_nameeAlign = (data) => {\n    return (\n      <div\n        className=\"ellipsis\"\n        align=\"left\"\n        data-toggle=\"tooltip\"\n        title={data.country_name}\n      >\n        {data.country_name}\n      </div>\n    );\n  };\n  const stateToolip = (data) => {\n    return (\n      <div\n        className=\"ellipsis\"\n        align=\"left\"\n        data-toggle=\"tooltip\"\n        title={data.state}\n      >\n        {data.state}\n      </div>\n    );\n  };\n  const customer_idToolip = (data) => {\n    return (\n      <div\n        className=\"ellipsis\"\n        align=\"left\"\n        data-toggle=\"tooltip\"\n        title={data.customer_id}\n      >\n        {data.customer_id}\n      </div>\n    );\n  };\n  const contactAlign = (data) => {\n    return (\n      <div\n        className=\"ellipsis\"\n        align=\"left\"\n        data-toggle=\"tooltip\"\n        title={data.contact}\n      >\n        {data.contact}\n      </div>\n    );\n  };\n  const zip_codeToolip = (data) => {\n    return (\n      <div\n        className=\"ellipsis\"\n        align=\"left\"\n        data-toggle=\"tooltip\"\n        title={data.zip_code}\n      >\n        {data.zip_code}\n      </div>\n    );\n  };\n  const nameAlign = (data) => {\n    return (\n      <div\n        className=\"ellipsis\"\n        align=\"left\"\n        data-toggle=\"tooltip\"\n        title={data.name}\n      >\n        {data.name}\n      </div>\n    );\n  };\n  const dynamicColumns = Object.keys(headerData)?.map((col, i) => {\n    return (\n      <Column\n        sortable\n        key={col}\n        field={col}\n        header={headerData[col]}\n        body={\n          col == \"address\"\n            ? address\n            : col == \"city\"\n            ? cityoolip\n            : col == \"country_name\"\n            ? country_nameeAlign\n            : col == \"state\"\n            ? stateToolip\n            : col == \"customer_id\"\n            ? customer_idToolip\n            : col == \"contact\"\n            ? contactAlign\n            : col == \"zip_code \"\n            ? zip_codeToolip\n            : col == \"name\" && nameAlign\n        }\n      />\n    );\n  });\n  const getCustomersDivisionData = () => {\n    axios\n      .get(\n        baseUrl +\n          `/customersms/Customers/getCustomersdashboarddivision?cid=${props.customerId}`\n      )\n      .then((response) => {\n        const data = response.data;\n        const Headerdata = [\n          {\n            name: \"Name\",\n            address: \"Address Line\",\n            country_name: \"Country\",\n            state: \"State/Province\",\n            city: \"City\",\n            zip_code: \"ZIP/Postal Code\",\n            contact: \"Contact Number\",\n          },\n        ];\n        let hData = [];\n        let bData = [];\n        data.map((element, index) => {\n          if (index < 0) {\n            hData.push(response.data[index]);\n          } else {\n            bData.push(response.data[index]);\n          }\n        });\n        setData(Headerdata.concat(bData));\n        setCustomerDataDivision(data);\n      });\n    // setTimeout(() => {\n    //   setLoaderState(false);\n    // }, 1000);\n  };\n  useEffect(() => {\n    data[0] && setHeaderData(JSON.parse(JSON.stringify(data[0])));\n    // let imp = [\"XLS\"];\n    // setExportData(imp);\n  }, [data]);\n  const getCustomererviewData = () => {\n    if (props.customerId != 0) {\n      axios({\n        method: \"get\",\n        url:\n          baseUrl +\n          `/customersms/Customers/getCustomersdashboard?cid=${props.customerId}`,\n      }).then(function (response) {\n        let resp = response.data;\n        setCustomerData(resp);\n      });\n    }\n  };\n\n  const handleCurrency = () => {\n    axios({\n      method: \"get\",\n      url: baseUrl + `/ProjectMS/Engagement/getCurrency`,\n    }).then((res) => {\n      let curre = res.data;\n      setCurrency(curre);\n    });\n  };\n  useEffect(() => {\n    getCustomersDivisionData();\n    getCustomererviewData();\n    getCustomersinternalStakeHOLDER();\n    getCustomersExtStakeHOLDER();\n    getCustomersRoles();\n    handleCurrency();\n  }, [props.customerId]);\n\n  const representativeBodyTemplate = (rowData) => {\n    return <span>{rowData.display_name}</span>;\n  };\n  const tooltipText = data.length;\n\n  const representativeBody = (rowData) => {\n    return (\n      <span>\n        <table class=\"table table-bordered table-striped\">\n          <tbody>\n            <tr>\n              {rowData?.data?.map((ele, index) => {\n                return <th className=\"antiquewhite\"> {ele.country_name}</th>;\n              })}\n            </tr>\n\n            <tr>\n              {rowData?.data?.map((ele, index) => {\n                return (\n                  <>\n                    {index === 0 ? (\n                      <td>\n                        <b>Billing</b>\n                        <br />\n                        <b>Rate/Hr</b>\n                      </td>\n                    ) : (\n                      <td>{ele.rate}</td>\n                    )}\n                  </>\n                );\n              })}\n            </tr>\n            <tr>\n              {rowData?.data?.map((ele, index) => {\n                return (\n                  <>\n                    {index === 0 ? (\n                      <td>\n                        <b>Cost/Hr</b>\n                      </td>\n                    ) : (\n                      <td>{ele.cost}</td>\n                    )}\n                  </>\n                );\n              })}\n            </tr>\n          </tbody>\n        </table>\n      </span>\n    );\n  };\n\n  const loggedUserId = localStorage.getItem(\"resId\");\n\n  const [routes, setRoutes] = useState([]);\n  let textContent = \"Customers\";\n  let currentScreenName = [\"Customer Search\", \"Overview\"];\n\n  useEffect(() => {\n    getMenus();\n  }, []);\n\n  const getMenus = () => {\n    // setMenusData\n\n    axios({\n      method: \"GET\",\n      url: baseUrl + `/CommonMS/master/getMenus?loggedUserId=${loggedUserId}`,\n    }).then((resp) => {\n      let data = resp.data;\n\n      data.forEach((item) => {\n        if (item.display_name === textContent) {\n          setRoutes([item]);\n        }\n      });\n    });\n  };\n\n  return (\n    <div>\n      {/* <div className=\"group mb-5 customCard\"> */}\n      {/* <div className=\"col-md-12\"> */}\n      {/* <div className=\"pageTitle\" align=\"center\"> */}\n      <div className=\"col-md-12\">\n        <div className=\"pageTitle\">\n          <div className=\"childOne\"></div>\n          <div className=\"childTwo\">\n            <h2>Overview</h2>\n          </div>\n          <div className=\"childThree\"></div>\n        </div>\n      </div>\n      <ScreenBreadcrumbs\n        routes={routes}\n        currentScreenName={currentScreenName}\n      />\n      {/* </div> */}\n      <div className=\"customCard card graph mt-2 mb-2\">\n        <div className=\"group-content row\">\n          <div className=\" col-md-12 mb-2\">\n            {customerData.map((list) => (\n              <div className=\"group-content row mx-2 mt-2\">\n                <div className=\" col-md-4 mb-2\">\n                  <div className=\"form-group row\">\n                    <label className=\"col-5\" htmlFor=\"text-input-inline\">\n                      Customer Name\n                    </label>\n                    <span className=\"col-1\">:</span>\n                    <div className=\"col-6\">\n                      <p\n                        className=\" calenderTable\"\n                        data-toggle=\"tooltip\"\n                        title={list.customerName}\n                      >\n                        {list.customerName == null ? \"NA\" : list.customerName}\n                      </p>\n                    </div>\n                  </div>\n                </div>\n                <div className=\" col-md-4 mb-2\">\n                  <div className=\"form-group row\">\n                    <label className=\"col-5\" htmlFor=\"text-input-inline\">\n                      Project Category\n                    </label>\n                    <span className=\"col-1\">:</span>\n                    <div className=\"col-6\">\n                      <p\n                        className=\" ellipsis tooltip-ex\"\n                        data-toggle=\"tooltip\"\n                        title={list.projectcategory}\n                      >\n                        {list.projectcategory === null\n                          ? \"NA\"\n                          : list.projectcategory}\n                      </p>\n                    </div>\n                  </div>\n                </div>\n\n                <div className=\" col-md-4 mb-2\">\n                  <div className=\"form-group row\">\n                    <label className=\"col-5\" htmlFor=\"text-input-inline\">\n                      Industry type\n                    </label>\n                    <span className=\"col-1\">:</span>\n                    <div className=\"col-6\">\n                      <p\n                        className=\" ellipsis tooltip-ex\"\n                        data-toggle=\"tooltip\"\n                        title={list.IndustryType}\n                      >\n                        {list.IndustryType === null ? \"NA\" : list.IndustryType}\n                      </p>\n                    </div>\n                  </div>\n                </div>\n                <div className=\" col-md-4 mb-2\">\n                  <div className=\"form-group row\">\n                    <label className=\"col-5\" htmlFor=\"text-input-inline\">\n                      Phone\n                    </label>\n                    <span className=\"col-1\">:</span>\n                    <div className=\"col-6\">\n                      <p\n                        className=\" ellipsis tooltip-ex\"\n                        data-toggle=\"tooltip\"\n                        title={list.phone}\n                      >\n                        {list.phone === null ? \"NA\" : list.phone}\n                      </p>\n                    </div>\n                  </div>\n                </div>\n                <div className=\" col-md-4 mb-2\">\n                  <div className=\"form-group row\">\n                    <label className=\"col-5\" htmlFor=\"text-input-inline\">\n                      Website\n                    </label>\n                    <span className=\"col-1\">:</span>\n                    <div className=\"col-6\">\n                      <p\n                        className=\" ellipsis tooltip-ex\"\n                        data-toggle=\"tooltip\"\n                        title={list.website}\n                      >\n                        {list.website === null ? \"NA\" : list.website}\n                      </p>\n                    </div>\n                  </div>\n                </div>\n                <div className=\" col-md-4 mb-2\">\n                  <div className=\"form-group row\">\n                    <label className=\"col-5\" htmlFor=\"text-input-inline\">\n                      Customer Status\n                    </label>\n                    <span className=\"col-1\">:</span>\n                    <div className=\"col-6\">\n                      <p\n                        className=\" ellipsis tooltip-ex\"\n                        data-toggle=\"tooltip\"\n                        title={list.customerstatus}\n                      >\n                        {list.customerstatus == null\n                          ? \"NA\"\n                          : list.customerstatus}\n                      </p>\n                    </div>\n                  </div>\n                </div>\n                <div className=\" col-md-4 mb-2\">\n                  <div className=\"form-group row\">\n                    <label className=\"col-5\" htmlFor=\"text-input-inline\">\n                      Sales Territory\n                    </label>\n                    <span className=\"col-1\">:</span>\n                    <div className=\"col-6\">\n                      <p\n                        className=\" ellipsis tooltip-ex\"\n                        data-toggle=\"tooltip\"\n                        title={list.salesterritory}\n                      >\n                        {list.salesterritory == null\n                          ? \"NA\"\n                          : list.salesterritory}\n                      </p>\n                    </div>\n                  </div>\n                </div>\n                <div className=\" col-md-4 mb-2\">\n                  <div className=\"form-group row\">\n                    <label className=\"col-5\" htmlFor=\"text-input-inline\">\n                      Sales Executive\n                    </label>\n                    <span className=\"col-1\">:</span>\n                    <div className=\"col-6\">\n                      <p\n                        className=\" ellipsis tooltip-ex\"\n                        data-toggle=\"tooltip\"\n                        title={list.name}\n                      >\n                        {list.name == null ? \"-\" : list.name}\n                      </p>\n                    </div>\n                  </div>\n                </div>\n                <div className=\" col-md-4 mb-2\">\n                  <div className=\"form-group row\">\n                    <label className=\"col-5\" htmlFor=\"text-input-inline\">\n                      Client Partner\n                    </label>\n                    <span className=\"col-1\">:</span>\n                    <div className=\"col-6\">\n                      <p\n                        className=\" ellipsis tooltip-ex\"\n                        data-toggle=\"tooltip\"\n                        title={list.clientpartner}\n                      >\n                        {list.clientpartner == null ? \"-\" : list.clientpartner}\n                      </p>\n                    </div>\n                  </div>\n                </div>\n                <div className=\" col-md-4 mb-2\">\n                  <div className=\"form-group row\">\n                    <label className=\"col-5\" htmlFor=\"text-input-inline\">\n                      Engagement Partner\n                    </label>\n                    <span className=\"col-1\">:</span>\n                    <div className=\"col-6\">\n                      <p\n                        className=\" ellipsis tooltip-ex\"\n                        data-toggle=\"tooltip\"\n                        title={list.engagementpartner}\n                      >\n                        {list.engagementpartner === null\n                          ? \"-\"\n                          : list.engagementpartner}\n                      </p>\n                    </div>\n                  </div>\n                </div>\n                <div className=\" col-md-4 mb-2\">\n                  <div className=\"form-group row\">\n                    <label className=\"col-5\" htmlFor=\"text-input-inline\">\n                      Country\n                    </label>\n                    <span className=\"col-1\">:</span>\n                    <div className=\"col-6\">\n                      <p\n                        className=\" ellipsis tooltip-ex\"\n                        data-toggle=\"tooltip\"\n                        title={list.country_name}\n                      >\n                        {list.country_name == null ? \"-\" : list.country_name}\n                      </p>\n                    </div>\n                  </div>\n                </div>\n                <div className=\" col-md-4 mb-2\">\n                  <div className=\"form-group row\">\n                    <label className=\"col-5\" htmlFor=\"text-input-inline\">\n                      Customer Email\n                    </label>\n                    <span className=\"col-1\">:</span>\n                    <div className=\"col-6\">\n                      <p\n                        className=\" ellipsis tooltip-ex\"\n                        data-toggle=\"tooltip\"\n                        title={list.customeremail}\n                      >\n                        {list.customeremail == null ? \"NA\" : list.customeremail}\n                      </p>\n                    </div>\n                  </div>\n                </div>\n                <div className=\" col-md-4 mb-2\">\n                  <div className=\"form-group row\">\n                    <label className=\"col-5\" htmlFor=\"text-input-inline\">\n                      Classification\n                    </label>\n                    <span className=\"col-1\">:</span>\n                    <div className=\"col-6\">\n                      <p\n                        className=\" ellipsis tooltip-ex\"\n                        data-toggle=\"tooltip\"\n                        title={list.classification}\n                      >\n                        {list.classification == null\n                          ? \"NA\"\n                          : list.classification}\n                      </p>\n                    </div>\n                  </div>\n                </div>\n                <div className=\" col-md-4 mb-2\">\n                  <div className=\"form-group row\">\n                    <label className=\"col-5\" htmlFor=\"text-input-inline\">\n                      SF Account Link\n                    </label>\n                    <span className=\"col-1\">:</span>\n                    <div className=\"col-6\">\n                      <p className=\" ellipsis tooltip-ex\">\n                        {/* {list.sf_account_link == null ? (\n                          \"NA\"\n                        ) : (\n                          <Link\n                            to={`/customer/dashboard/:${list.customer_id}`}\n                            target=\"_blank\"\n                          > */}{\" \"}\n                        {list.sfAccountLink}\n                        {/* </Link>\n                        )} */}\n                      </p>\n                    </div>\n                  </div>\n                </div>\n                <div className=\" col-md-4 mb-2\">\n                  <div className=\"form-group row\">\n                    <label className=\"col-5\" htmlFor=\"text-input-inline\">\n                      CSL Head\n                    </label>\n                    <span className=\"col-1\">:</span>\n                    <div className=\"col-6\">\n                      <p\n                        className=\" ellipsis tooltip-ex\"\n                        data-toggle=\"tooltip\"\n                        title={list.cslHead}\n                      >\n                        {list.cslHead == null ? \"-\" : list.cslHead}\n                      </p>\n                    </div>\n                  </div>\n                </div>\n                <div className=\" col-md-4 mb-2\">\n                  <div className=\"form-group row\">\n                    <label className=\"col-5\" htmlFor=\"text-input-inline\">\n                      CSL\n                    </label>\n                    <span className=\"col-1\">:</span>\n                    <div className=\"col-6\">\n                      <p\n                        className=\" ellipsis tooltip-ex\"\n                        data-toggle=\"tooltip\"\n                        title={list.cslName}\n                      >\n                        {list.cslName == null ? \"-\" : list.cslName}\n                      </p>\n                    </div>\n                  </div>\n                </div>\n                <div className=\" col-md-4 mb-2\">\n                  <div className=\"form-group row\">\n                    <label className=\"col-5\" htmlFor=\"text-input-inline\">\n                      Associate CSL\n                    </label>\n                    <span className=\"col-1\">:</span>\n                    <div className=\"col-6\">\n                      <p\n                        className=\" ellipsis tooltip-ex\"\n                        data-toggle=\"tooltip\"\n                        title={list.AssociateCSL}\n                      >\n                        {list.AssociateCSL == null ? \"-\" : list.AssociateCSL}\n                      </p>\n                    </div>\n                  </div>\n                </div>\n                <div className=\" col-md-4 mb-2\">\n                  <div className=\"form-group row\">\n                    <label className=\"col-5\" htmlFor=\"text-input-inline\">\n                      Delivery Partner Head\n                    </label>\n                    <span className=\"col-1\">:</span>\n                    <div className=\"col-6\">\n                      <p\n                        className=\" ellipsis tooltip-ex\"\n                        data-toggle=\"tooltip\"\n                        title={list.deliverypartnerHead}\n                      >\n                        {list.deliverypartnerHead == null\n                          ? \"-\"\n                          : list.deliverypartnerHead}\n                      </p>\n                    </div>\n                  </div>\n                </div>\n                <div className=\" col-md-4 mb-2\">\n                  <div className=\"form-group row\">\n                    <label className=\"col-5\" htmlFor=\"text-input-inline\">\n                      Delivery Partner\n                    </label>\n                    <span className=\"col-1\">:</span>\n                    <div className=\"col-6\">\n                      <p\n                        className=\" ellipsis tooltip-ex\"\n                        data-toggle=\"tooltip\"\n                        title={list.deliverypartner}\n                      >\n                        {list.deliverypartner == null\n                          ? \"-\"\n                          : list.deliverypartner}\n                      </p>\n                    </div>\n                  </div>\n                </div>\n                <div className=\" col-md-4 mb-2\">\n                  <div className=\"form-group row\">\n                    <label className=\"col-5\" htmlFor=\"text-input-inline\">\n                      Talent Partner\n                    </label>\n                    <span className=\"col-1\">:</span>\n                    <div className=\"col-6\">\n                      <p\n                        className=\" ellipsis tooltip-ex\"\n                        data-toggle=\"tooltip\"\n                        title={list.TalentPartner}\n                      >\n                        {list.TalentPartner == null ? \"-\" : list.TalentPartner}\n                      </p>\n                    </div>\n                  </div>\n                </div>\n                <div className=\" col-md-4 mb-2\">\n                  <div className=\"form-group row\">\n                    <label className=\"col-5\" htmlFor=\"text-input-inline\">\n                      Project Coordinator\n                    </label>\n                    <span className=\"col-1\">:</span>\n                    <div className=\"col-6\">\n                      <p\n                        className=\" ellipsis tooltip-ex\"\n                        data-toggle=\"tooltip\"\n                        title={list.projectCoordinator}\n                      >\n                        {list.projectCoordinator == null\n                          ? \"-\"\n                          : list.projectCoordinator}\n                      </p>\n                    </div>\n                  </div>\n                </div>\n                <div className=\" col-md-4 mb-2\">\n                  <div className=\"form-group row\">\n                    <label className=\"col-5\" htmlFor=\"text-input-inline\">\n                      SQA\n                    </label>\n                    <span className=\"col-1\">:</span>\n                    <div className=\"col-6\">\n                      <p\n                        className=\" ellipsis tooltip-ex\"\n                        data-toggle=\"tooltip\"\n                        title={list.SQA}\n                      >\n                        {list.SQA == null ? \"-\" : list.SQA}\n                      </p>\n                    </div>\n                  </div>\n                </div>\n                <div className=\" col-md-4 mb-2\">\n                  <div className=\"form-group row\">\n                    <label className=\"col-5\" htmlFor=\"text-input-inline\">\n                      Competency Lead\n                    </label>\n                    <span className=\"col-1\">:</span>\n                    <div className=\"col-6\">\n                      <p\n                        className=\" ellipsis tooltip-ex\"\n                        data-toggle=\"tooltip\"\n                        title={list.competencyLead}\n                      >\n                        {list.competencyLead == null\n                          ? \"-\"\n                          : list.competencyLead}\n                      </p>\n                    </div>\n                  </div>\n                </div>\n                <div className=\" col-md-4 mb-2\">\n                  <div className=\"form-group row\">\n                    <label className=\"col-5\" htmlFor=\"text-input-inline\">\n                      Account Owner\n                    </label>\n                    <span className=\"col-1\">:</span>\n                    <div className=\"col-6\">\n                      <p\n                        className=\" ellipsis tooltip-ex\"\n                        data-toggle=\"tooltip\"\n                        title={list.accountowner}\n                      >\n                        {list.accountowner == null ? \"-\" : list.accountowner}\n                      </p>\n                    </div>\n                  </div>\n                </div>\n                <div className=\" col-md-4 mb-2\">\n                  <div className=\"form-group row\">\n                    <label className=\"col-5\" htmlFor=\"text-input-inline\">\n                      New Customer\n                    </label>\n                    <span className=\"col-1\">:</span>\n                    <div className=\"col-6\">\n                      <p\n                        className=\" ellipsis tooltip-ex\"\n                        data-toggle=\"tooltip\"\n                        title={list.newCustomer}\n                      >\n                        {list.newCustomer == null ? \"-\" : list.newCustomer}\n                      </p>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n      </div>\n      <>\n        <div className=\"customCard card graph mt-2 mb-2\">\n          <div className=\"group mb-1 customCard\">\n            <div\n              className=\"col-md-12  collapseHeader px-3\"\n              style={{ backgroundColor: \"#f4f4f4\" }}\n            >\n              <h2 style={{ backgroundColor: \"#f4f4f4\" }}>Invoicing Details</h2>\n            </div>\n          </div>\n          <div className=\"group-content row mx-2\">\n            <div className=\" col-md-12 mb-2\">\n              {customerData.map((list) => (\n                <div className=\"group-content row\">\n                  <div className=\" col-md-4 mb-2\">\n                    <div className=\"form-group row\">\n                      <label className=\"col-5\" htmlFor=\"text-input-inline\">\n                        Invoice For\n                      </label>\n                      <span className=\"col-1\">:</span>\n                      <div className=\"col-6\">\n                        <p\n                          className=\" ellipsis tooltip-ex\"\n                          data-toggle=\"tooltip\"\n                          title={list.invoiceFor}\n                        >\n                          {list.invoiceFor == null ? \"NA\" : list.invoiceFor}\n                        </p>\n                      </div>\n                    </div>\n                  </div>\n\n                  <div className=\" col-md-4 mb-2 \">\n                    <div className=\"form-group row\">\n                      <label className=\"col-5\" htmlFor=\"text-input-inline\">\n                        Invoice Cycle\n                      </label>\n                      <span className=\"col-1\">:</span>\n                      <div className=\"col-6\">\n                        <p\n                          className=\" ellipsis tooltip-ex\"\n                          data-toggle=\"tooltip\"\n                          title={list.invoiceCycle}\n                        >\n                          {list.invoiceCycle == null ? \"NA\" : list.invoiceCycle}\n                        </p>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\" col-md-4 mb-2\">\n                    <div className=\"form-group row\">\n                      <label className=\"col-5\" htmlFor=\"text-input-inline\">\n                        Payment Terms\n                      </label>\n                      <span className=\"col-1\">:</span>\n                      <div className=\"col-6\">\n                        <p\n                          className=\" ellipsis tooltip-ex\"\n                          data-toggle=\"tooltip\"\n                          title={list.paymentTerms}\n                        >\n                          {list.paymentTerms == null ? \"NA\" : list.paymentTerms}\n                        </p>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\" col-md-4 mb-2\">\n                    <div className=\"form-group row\">\n                      <label className=\"col-5\" htmlFor=\"text-input-inline\">\n                        Invoice Time\n                      </label>\n                      <span className=\"col-1\">:</span>\n                      <div className=\"col-6\">\n                        <p\n                          className=\" ellipsis tooltip-ex\"\n                          data-toggle=\"tooltip\"\n                          title={list.invoiceTime}\n                        >\n                          {list.invoiceTime == null ? \"NA\" : list.invoiceTime}\n                        </p>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\" col-md-4 mb-2\">\n                    <div className=\"form-group row\">\n                      <label className=\"col-5\" htmlFor=\"text-input-inline\">\n                        Expense Billable\n                      </label>\n                      <span className=\"col-1\">:</span>\n                      <div className=\"col-6\">\n                        <p\n                          className=\" ellipsis tooltip-ex\"\n                          data-toggle=\"tooltip\"\n                          title={list.expenseBillable}\n                        >\n                          {list.expenseBillable == null\n                            ? \"NA\"\n                            : list.expenseBillable}{\" \"}\n                        </p>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\" col-md-4 mb-2\">\n                    <div className=\"form-group row\">\n                      <label className=\"col-5\" htmlFor=\"text-input-inline\">\n                        Discount (%)\n                      </label>\n                      <span className=\"col-1\">:</span>\n                      <div className=\"col-6\">\n                        <p\n                          className=\" ellipsis tooltip-ex\"\n                          data-toggle=\"tooltip\"\n                          title={list.discountPercent}\n                        >\n                          {list.discountPercent == null\n                            ? \"NA\"\n                            : list.discountPercent + \".\" + \"00\"}\n                        </p>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\" col-md-4 mb-2\">\n                    <div className=\"form-group row\">\n                      <label className=\"col-5\" htmlFor=\"text-input-inline\">\n                        Customer Currency\n                      </label>\n                      <span className=\"col-1\">:</span>\n                      <div className=\"col-6\">\n                        <p\n                          className=\" ellipsis tooltip-ex\"\n                          data-toggle=\"tooltip\"\n                          title={list.description}\n                        >\n                          {list.description == null ? \"NA\" : list.description}\n                        </p>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\" col-md-4 mb-2\">\n                    <div className=\"form-group row\">\n                      <label className=\"col-5\" htmlFor=\"text-input-inline\">\n                        Invoice Culture\n                      </label>\n                      <span className=\"col-1\">:</span>\n                      <div className=\"col-6\">\n                        <p\n                          className=\" ellipsis tooltip-ex\"\n                          data-toggle=\"tooltip\"\n                          title={list.invoiceCulture}\n                        >\n                          {list.invoiceCulture == null\n                            ? \"NA\"\n                            : list.invoiceCulture}\n                        </p>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\" col-md-4 mb-2\">\n                    <div className=\"form-group row\">\n                      <label className=\"col-5\" htmlFor=\"text-input-inline\">\n                        Invoice Template\n                      </label>\n                      <span className=\"col-1\">:</span>\n                      <div className=\"col-6\">\n                        <p\n                          className=\" ellipsis tooltip-ex\"\n                          data-toggle=\"tooltip\"\n                          title={list.invoiceTemplate}\n                        >\n                          {list.invoiceTemplate == null\n                            ? \"NA\"\n                            : list.invoiceTemplate}\n                        </p>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              ))}\n            </div>\n          </div>\n        </div>\n      </>\n      <div className=\"customCard card graph mt-2 mb-2\">\n        <div className=\"group mb-1 customCard\">\n          <div\n            className=\"col-md-12  collapseHeader px-3\"\n            style={{ backgroundColor: \"#f4f4f4\" }}\n          >\n            <h2 style={{ backgroundColor: \"#f4f4f4\" }}> Divisions</h2>\n          </div>\n        </div>\n        <CellRendererPrimeReactDataTable\n          rows={25}\n          data={data}\n          dynamicColumns={dynamicColumns}\n          headerData={headerData}\n          setHeaderData={setHeaderData}\n        />\n        {/* <FlatPrimeReactTable rows={10} data={customerDataDivision} /> */}\n      </div>\n      <div className=\"ccustomCard card graph mt-2 mb-2\">\n        <div className=\"group mb-1 customCard\">\n          <div\n            className=\"col-md-12  collapseHeader px-3\"\n            style={{ backgroundColor: \"#f4f4f4\" }}\n          >\n            <h2 style={{ backgroundColor: \"#f4f4f4\" }}>\n              Customer Stakeholders\n            </h2>\n          </div>\n        </div>\n        <CellRendererPrimeReactDataTable\n          rows={25}\n          data={customerDataextstake}\n          dynamicColumns={dynamicColumnsstakeholders}\n          headerData={headerDatastakeHolders}\n          setHeaderData={setHeaderDatastakeholders}\n        />\n      </div>\n      <div className=\"card datatable-rowgroup-demo  mt-2\">\n        <div className=\"group mb-1 customCard\">\n          <div\n            className=\"col-md-12  collapseHeader px-3\"\n            style={{ backgroundColor: \"#f4f4f4\" }}\n          >\n            <h2 style={{ backgroundColor: \"#f4f4f4\" }}>\n              Internal Stakeholders\n            </h2>\n          </div>{\" \"}\n        </div>\n        <CellRendererPrimeReactDataTable\n          rows={25}\n          data={customerDatainterstake}\n          dynamicColumns={dynamicColumnsInternal}\n          headerData={headerDataInternal}\n          setHeaderData={setHeaderDataInternal}\n        />\n      </div>{\" \"}\n      <div className=\"customCard card graph mt-2 mb-2 darkHeader\">\n        <div className=\"group mb-1 customCard\">\n          <div\n            className=\"col-md-12  collapseHeader px-3\"\n            style={{ backgroundColor: \"#f4f4f4\" }}\n          >\n            <h2 style={{ backgroundColor: \"#f4f4f4\" }}>Roles</h2>\n          </div>\n        </div>\n\n        <DataTable\n          className=\"primeReactDataTable \"\n          paginatorTemplate=\"RowsPerPageDropdown FirstPageLink PrevPageLink CurrentPageReport NextPageLink LastPageLink\"\n          currentPageReportTemplate=\"{first} to {last} of {totalRecords}\"\n          rowsPerPageOptions={[10, 25, 50]} //------------->\n          value={customerDatarole}\n          paginator\n          rows={25}\n          showGridlines\n          highlightOnHover\n          pagination\n          paginationPerPage={5}\n          paginationRowsPerPageOptions={[5, 15, 25, 50]}\n          paginationComponentOptions={{\n            rowsPerPageText: \"Records per page:\",\n            rangeSeparatorText: \"out of\",\n          }}\n          rowGroupMode=\"rowspan\"\n          // groupRowsBy=\"role\"\n          sortOrder={2}\n          responsiveLayout=\"scroll\"\n        >\n          <Column\n            field=\"Role\"\n            header=\"Role\"\n            alignHeader={\"center\"}\n            body={representativeBodyTemplate}\n            style={{ width: \"40%\" }}\n          ></Column>\n          <Column\n            field=\"Country\"\n            header=\"Country\"\n            body={representativeBody}\n            alignHeader={\"center\"}\n          >\n            country\n          </Column>\n        </DataTable>\n      </div>\n    </div>\n  );\n}\n\nexport default Customerdashboard;\n","import React, { useState, useEffect, useRef } from \"react\";\nimport { CModal, CModalBody, CModalHeader, CModalTitle } from \"@coreui/react\";\nimport axios from \"axios\";\nimport { environment } from \"../../environments/environment\";\n\nimport { ColumnGroup } from \"primereact/columngroup\";\nimport { Row } from \"primereact/row\";\nimport { DataTable } from \"primereact/datatable\";\nimport { Column } from \"primereact/column\";\nimport Draggable from \"react-draggable\";\nconst InvoiceSummaryPopup = (props) => {\n  const { invSummaryPopUp, setInvSummaryPopUp, customerId } = props;\n\n  const [tableData, setTableData] = useState([]);\n  const baseUrl = environment.baseUrl;\n\n  useEffect(() => {\n    getTableData();\n  }, []);\n\n  const getTableData = () => {\n    axios({\n      method: \"get\",\n      url:\n        baseUrl + `/customersms/Customers/getInvoiceSummary?cid=${customerId}`,\n    }).then((res) => {\n      setTableData(res.data);\n    });\n  };\n  const headerGroup = (\n    <ColumnGroup>\n      <Row>\n        <Column header=\"\" colSpan={5} />\n        <Column\n          header=\"Invoice Amount\"\n          colSpan={5}\n          style={{ textAlign: \"center\" }}\n        />\n      </Row>\n      <Row>\n        <Column header=\"Invoice Number\" field=\"num\" />\n        <Column header=\"Date\" field=\"Date\" />\n        <Column header=\"Invoice Period\" field=\"InvoicePeriod\" />\n        <Column header=\"Status\" field=\"Status\" />\n        <Column header=\"Project\" field=\"Project\" />\n        <Column header=\"Timesheet\" field=\"Timesheet\" />\n        <Column header=\"Expenses\" field=\"Expenses\" />\n        <Column header=\"Milestones\" field=\"Milestones\" />\n        <Column header=\"Tax\" field=\"Tax\" />\n        <Column header=\"Total\" field=\"Total\" />\n      </Row>\n    </ColumnGroup>\n  );\n\n  return (\n    <div>\n      <Draggable>\n        <CModal\n          alignment=\"center\"\n          backdrop=\"static\"\n          size=\"xl\"\n          visible={invSummaryPopUp}\n          onClose={() => {\n            setInvSummaryPopUp(false);\n          }}\n        >\n          <CModalHeader className=\"\" style={{ cursor: \"all-scroll\" }}>\n            <CModalTitle>\n              <span className=\"ft16\">Invoice Summary</span>\n            </CModalTitle>\n          </CModalHeader>\n          <CModalBody>\n            <div className=\"group-content row\">\n              <div className=\"col-md-12 row mb-2\">\n                <DataTable\n                  className=\"primeReactDataTable invoicingSearchTable customerEngament\"\n                  paginatorTemplate=\"RowsPerPageDropdown FirstPageLink PrevPageLink CurrentPageReport NextPageLink LastPageLink\"\n                  currentPageReportTemplate=\"{first} to {last} of {totalRecords}\"\n                  rowsPerPageOptions={[10, 25, 50]}\n                  value={tableData}\n                  paginator\n                  rows={10}\n                  onFilter={(e) => setFilters(e.filters)}\n                  onSelectionChange={(e) => setSelectedCustomer(e.value)}\n                  dataKey=\"id\"\n                  showGridlines\n                  stateStorage=\"session\"\n                  stateKey=\"dt-state-demo-local\"\n                  responsiveLayout=\"scroll\"\n                  emptyMessage=\"No records to view\"\n                  headerColumnGroup={headerGroup}\n                >\n                  <Column header=\"Invoice Number\" field=\"num\" />\n                  <Column header=\"Date\" field=\"Date\" />\n                  <Column header=\"Invoice Period\" field=\"InvoicePeriod\" />\n                  <Column header=\"Status\" field=\"Status\" />\n                  <Column header=\"Project\" field=\"Project\" />\n                  <Column header=\"Timesheet\" field=\"Timesheet\" />\n                  <Column header=\"Expenses\" field=\"Expenses\" />\n                  <Column header=\"Milestones\" field=\"Milestones\" />\n                  <Column header=\"Tax\" field=\"Tax\" />\n                  <Column header=\"Total\" field=\"Total\" />\n                </DataTable>\n              </div>\n            </div>\n          </CModalBody>\n        </CModal>\n      </Draggable>\n    </div>\n  );\n};\n\nexport default InvoiceSummaryPopup;\n","import axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport { VscSave } from \"react-icons/vsc\";\nimport { ReactSearchAutocomplete } from \"react-search-autocomplete\";\nimport { environment } from \"../../environments/environment\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport moment from \"moment\";\nimport { ImCross } from \"react-icons/im\";\nimport CustomersDivisionEdit from \"./CustomersDivisionEdit\";\nimport CustomersStakeholdersEdit from \"./CustomersStakeholdersEdit\";\nimport CustomersInternalStakeholdersEdit from \"./CustomersInternalStakeholdersEdit\";\nimport CustomerRolesEdit from \"./CustomerRolesEdit\";\nimport { BiCheck, BiPencil } from \"react-icons/bi\";\nimport RiskAutoComplete from \"../ProjectComponent/RiskAutocomplete\";\nimport PONumberPopup from \"../DeliveryComponent/PONumberPopup\";\nimport CustomerEmailEditPopup from \"./CustomerEmailEditPopup\";\nimport { useRef } from \"react\";\nimport GlobalValidation from \"../ValidationComponent/GlobalValidation\";\nimport { IoWarningOutline } from \"react-icons/io5\";\nimport InvoiceSummaryPopup from \"./InvoiceSummaryPopup\";\nimport { AiFillWarning } from \"react-icons/ai\";\nimport { FaSave } from \"react-icons/fa\";\nimport ScreenBreadcrumbs from \"../Common/ScreenBreadcrumbs\";\nimport Loader from \"../Loader/Loader\";\n\nfunction CustomerEdit(props) {\n  const {\n    customerId,\n    customerData,\n    buttonState,\n    setButtonState,\n    getCustomererviewData,\n  } = props;\n\n  const [backUpData, setBackUpData] = useState({});\n\n  useEffect(() => {\n    if (customerData.length > 0) {\n      setBackUpData(JSON.parse(JSON.stringify(customerData[0])));\n    }\n  }, [customerData]);\n\n  const [finalState1, setFinalState1] = useState({\n    customerEmail: customerData[0]?.customeremail,\n  });\n\n  const [addList1, setAddList1] = useState([{}]);\n\n  const handleAddEmail = () => {\n    let data1 = finalState1;\n    data1[Object.keys(data1).length] = onChangeState1[\"customerEmails\"];\n    setAddList1([...addList1, { customerEmails: \"\" }]);\n  };\n\n  const [dispalyEmail, setDisplayEmail] = useState([]);\n  const [size, setSize] = useState([]);\n  const ref = useRef([]);\n  const [validationMessage, setValidationMessage] = useState(false);\n  const [message, setMessage] = useState(false);\n\n  var maxDate = new Date();\n  var year = maxDate.getFullYear();\n  var month1 = maxDate.getMonth();\n  var maxDate = new Date(year, month1 + 11);\n  const baseUrl = environment.baseUrl;\n\n  const [salesTerritories, setSalesTerritories] = useState([]);\n  const [projectcategory, setProjectCategory] = useState([]);\n  const [industryType, setIndustryType] = useState([]);\n  const [classification, setClassification] = useState([]);\n  const [invSummaryPopUp, setInvSummaryPopUp] = useState(false);\n  const [resource, setResource] = useState([]);\n  const [resource1, setResource1] = useState([]);\n  const [resource2, setResource2] = useState([]);\n  const [resource3, setResource3] = useState([]);\n  const [resource4, setResource4] = useState([]);\n  const [resource5, setResource5] = useState([]);\n  const [resource6, setResource6] = useState([]);\n  const [resource7, setResource7] = useState([]);\n  const [resource8, setResource8] = useState([]);\n  const [resource9, setResource9] = useState([]);\n  const [resource10, setResource10] = useState([]);\n  const [resource11, setResource11] = useState([]);\n  const [resource12, setResource12] = useState([]);\n  const [resource13, setResource13] = useState([]);\n  const [resource14, setResource14] = useState([]);\n  const [cCountryId, setcCountryId] = useState([]);\n  const [invoiceCycle, setInvoiceCycle] = useState([]);\n  const [paymentTerm, setPaymentTerm] = useState([]);\n  const [invoiceTime, setInvoiceTime] = useState([]);\n  const [currency, setCurrency] = useState([]);\n  const [invoiceCulture, setInvoiceCulture] = useState([]);\n  const [invoiceTemplate, setInvoiceTemplate] = useState([]);\n  const [clickButtonPopUp, setClickButtonPopUp] = useState(false);\n  const [rolesValidationMsg, setRolesValidationMsg] = useState(false);\n  const [updatedRole, setUpdatedRole] = useState(\"Primary Project Manager\");\n  const [finalTableMsg, setFinalTableMsg] = useState(false);\n  const [custRolePopEditMsg, setCustRolePopEditMsg] = useState(false);\n  const [addMessage, setAddMessage] = useState(false);\n  const [csAddMessage, setCsAddMessage] = useState(false);\n  const [addIntStakeMessage, setAddIntStakeMessage] = useState(false);\n  const [projCatId, setProjCatId] = useState([]);\n  const [loader, setLoader] = useState(false);\n  const abortController = useRef(null);\n\n  const handleAbort = () => {\n    abortController.current && abortController.current.abort();\n    setLoader(false);\n  };\n\n  const [effectiveDate, SetEffectiveDate] = useState(\"\");\n  let emailString = Object.values(finalState1).toString();\n  if (emailString.startsWith(\",\")) {\n    emailString = emailString.substring(1); // Remove the first character (the comma)\n  }\n\n  useEffect(() => {\n    const conStart =\n      customerData[0]?.month == null\n        ? \"\"\n        : customerData[0]?.month == \"\"\n        ? \"\"\n        : moment(customerData[0]?.month).toDate();\n    SetEffectiveDate(conStart);\n  }, []);\n\n  const intialOnChangeState1 = {\n    customerEmails: \"\",\n  };\n\n  const [details, setDetails] = useState({\n    id: customerId,\n    typCustStatusId: customerData[0]?.typCustStatusId,\n    size: customerData[0]?.size,\n    salesPersonId: customerData[0]?.salesId,\n    clientpartnerId: customerData[0]?.clientpartnerId,\n    engagementPartnerId: customerData[0]?.engagementpartnerId,\n    cslHeadId: customerData[0]?.cslHeadId,\n    cslId: customerData[0]?.cslId,\n    acslId: customerData[0]?.AssociateCSLId,\n    deliveryPartnerHeadId: customerData[0]?.deliverypartnerHeadId,\n    deliveryPartnerId: customerData[0]?.deliverypartnerId,\n    talentPartnerId: customerData[0]?.TalentPartnerId,\n    projectCoordinatorId: customerData[0]?.projectCoordinatorId,\n    sqaId: customerData[0]?.SQAId,\n    clId: customerData[0]?.competencyLeadId,\n    cCountryId: customerData[0]?.cCountryId,\n    classificationId: customerData[0]?.classificationId,\n    phone: customerData[0]?.phone,\n    fax: customerData[0]?.fax,\n    sfAccountLink: customerData[0]?.sfAccountLink,\n    website: customerData[0]?.website,\n    customerEmails: customerData[0]?.customeremail,\n    custReferenceable: customerData[0]?.custReferenceable,\n    accountOwnerId: customerData[0]?.account_owner_id,\n    isNewCustomer: customerData[0]?.is_new_customer == false ? 0 : 1,\n    month: customerData[0]?.month == null ? \"\" : customerData[0]?.month,\n    CiInvoiceForId: customerData[0]?.CiInvoiceForId,\n    invoiceCycleId: customerData[0]?.invoiceCycleId,\n    paymentTermsId: customerData[0]?.paymentTermsId,\n    invoiceTimeId: customerData[0]?.invoiceTimeId,\n    CiCurrencyId: customerData[0]?.CiCurrencyId,\n    isExpenseBillable: customerData[0]?.expenseBillable == \"Yes\" ? 1 : 0,\n    invoiceCultureId: customerData[0]?.invoiceCultureId,\n    ciDiscountPercent: customerData[0]?.ciDiscountPercent,\n    invoiceTemplateId: customerData[0]?.invoiceTemplateId,\n    custReferenceNotes: customerData[0]?.custReferenceNotes,\n  });\n\n  const loggedUserId = localStorage.getItem(\"resId\");\n  const [routes, setRoutes] = useState([]);\n  let textContent = \"Customers\";\n  let currentScreenName = [\"Edit\"];\n\n  useEffect(() => {\n    setTimeout(() => {\n      document.getElementsByClassName(\"pageTitle\")[0]?.click();\n      setLoader(false);\n    }, 1000);\n    getMenus();\n  }, []);\n\n  const getMenus = () => {\n    axios({\n      method: \"GET\",\n      url: baseUrl + `/CommonMS/master/getMenus?loggedUserId=${loggedUserId}`,\n    }).then((resp) => {\n      let data = resp.data;\n\n      data.forEach((item) => {\n        if (item.display_name === textContent) {\n          setRoutes([item]);\n        }\n      });\n    });\n  };\n\n  const getProjectCatIds = () => {\n    axios\n      .get(\n        baseUrl +\n          `/customersms/Customers/getProjCatIds?customerId=${customerId}`\n      )\n      .then((Response) => {\n        let data = Response.data;\n        setProjCatId(data);\n      });\n  };\n\n  const handleChange = (e) => {\n    const { id, name, value } = e.target;\n    setOnChangeState1((prev) => ({ ...prev, [id]: value }));\n\n    setDetails((prev) => {\n      return { ...prev, [id]: value };\n    });\n  };\n\n  const handleChange1 = (e) => {\n    const { id, name, value } = e.target;\n    onChangeState2[id] = value;\n    details[(id, name)] = value;\n  };\n\n  const handleNewCustomerChange = (e) => {\n    setDetails((prev) => ({ ...prev, [\"isNewCustomer\"]: \"1\" }));\n  };\n\n  const handleExistingCustomerChange = (e) => {\n    setDetails((prev) => ({ ...prev, [\"isNewCustomer\"]: \"0\" }));\n  };\n  const handleIsBillableChange = (e) => {\n    setDetails((prev) => ({ ...prev, [\"isExpenseBillable\"]: \"1\" }));\n  };\n\n  const handleNoBillableChange = (e) => {\n    setDetails((prev) => ({ ...prev, [\"isExpenseBillable\"]: \"0\" }));\n  };\n\n  const handleSize = () => {\n    axios({\n      method: \"get\",\n      url: baseUrl + `/ProjectMS/Engagement/getSize`,\n    }).then((res) => {\n      let manger = res.data;\n      setSize(manger);\n    });\n  };\n\n  const handleSalesTerritories = () => {\n    axios({\n      method: \"get\",\n      url: baseUrl + `/ProjectMS/Engagement/getSalesTerritories`,\n    }).then((res) => {\n      let manger = res.data;\n      setSalesTerritories(manger);\n    });\n  };\n\n  const handleProjectCategory = () => {\n    axios({\n      method: \"get\",\n      url: baseUrl + `/ProjectMS/Engagement/getAllProjectCategorys`,\n    }).then((res) => {\n      let manger = res.data;\n      setProjectCategory(manger);\n    });\n  };\n\n  const handleIndustryType = () => {\n    axios({\n      method: \"get\",\n      url: baseUrl + `/ProjectMS/Engagement/getIndustryType`,\n    }).then((res) => {\n      let manger = res.data;\n      setIndustryType(manger);\n    });\n  };\n\n  const getcCountryId = () => {\n    axios({\n      url: baseUrl + `/CostMS/cost/getCountries`,\n    }).then((resp) => {\n      let data = resp.data;\n      let filterdata = data.filter((item) => item.id != 4);\n      setcCountryId(filterdata);\n    });\n  };\n\n  const resourceFnc = async () => {\n    await axios({\n      method: \"get\",\n      url: baseUrl + `/ProjectMS/risks/getAssignedData`,\n    }).then((res) => {\n      let manger = res.data;\n\n      setResource(manger);\n      setResource1(manger);\n      setResource2(manger);\n      setResource3(manger);\n      setResource4(manger);\n      setResource5(manger);\n      setResource6(manger);\n      setResource7(manger);\n      setResource8(manger);\n      setResource9(manger);\n      setResource10(manger);\n      setResource11(manger);\n      setResource12(manger);\n      setResource13(manger);\n      setResource14(manger);\n    });\n  };\n\n  const handleClassification = () => {\n    axios({\n      method: \"get\",\n      url: baseUrl + `/ProjectMS/Engagement/getClassification`,\n    }).then((res) => {\n      let manger = res.data;\n      setClassification(manger);\n    });\n  };\n\n  const handleInvoiceCycle = () => {\n    axios({\n      method: \"get\",\n      url: baseUrl + `/ProjectMS/Engagement/getInvoiceCycle`,\n    }).then((res) => {\n      let invcycle = res.data;\n      setInvoiceCycle(invcycle);\n    });\n  };\n\n  const handlePaymentTerm = () => {\n    axios({\n      method: \"get\",\n      url: baseUrl + `/ProjectMS/Engagement/getPaymentTerms`,\n    }).then((res) => {\n      let payterm = res.data;\n      setPaymentTerm(payterm);\n    });\n  };\n\n  const handleInvoiceTime = () => {\n    axios({\n      method: \"get\",\n      url: baseUrl + `/ProjectMS/Engagement/getInvoiceTime`,\n    }).then((res) => {\n      let intime = res.data;\n      setInvoiceTime(intime);\n    });\n  };\n\n  const handleCurrency = () => {\n    axios({\n      method: \"get\",\n      url: baseUrl + `/ProjectMS/Engagement/getCurrency`,\n    }).then((res) => {\n      let curre = res.data;\n      setCurrency(curre);\n    });\n  };\n\n  const handleInvoiceCulture = () => {\n    axios({\n      method: \"get\",\n      url: baseUrl + `/ProjectMS/Engagement/getInvoiceCulture`,\n    }).then((res) => {\n      let inculture = res.data;\n      setInvoiceCulture(inculture);\n    });\n  };\n\n  const handleInvoiceTemplate = () => {\n    axios({\n      method: \"get\",\n      url: baseUrl + `/ProjectMS/Engagement/getInvoiceTemplate`,\n    }).then((res) => {\n      let invtemp = res.data;\n      setInvoiceTemplate(invtemp);\n    });\n  };\n\n  useEffect(() => {\n    handleSize();\n    handleSalesTerritories();\n    handleProjectCategory();\n    handleIndustryType();\n    resourceFnc();\n    getcCountryId();\n    handleClassification();\n    handleInvoiceCycle();\n    handlePaymentTerm();\n    handleInvoiceTime();\n    handleCurrency();\n    handleInvoiceCulture();\n    handleInvoiceTemplate();\n    getProjectCatIds();\n  }, []);\n  useEffect(() => {}, [customerData]);\n\n  const handlePostDetails = () => {\n    let filteredData = ref.current.filter((d) => d != null);\n\n    ref.current = filteredData;\n\n    let valid = GlobalValidation(ref);\n\n    if (valid) {\n      {\n        setValidationMessage(true);\n        setTimeout(() => {\n          setValidationMessage(false);\n        }, 5000);\n      }\n      return;\n    }\n\n    let finalObj = details;\n\n    finalObj[\"customerEmails\"] = emailString;\n\n    axios({\n      method: \"post\",\n      url: baseUrl + `/ProjectMS/Engagement/putEngagementsCusDetails`,\n      data: [details],\n    }).then(function (res) {\n      const data = res.data;\n      getCustomererviewData();\n      setMessage(true);\n      window.scrollTo({ top: 0, behavior: \"smooth\" });\n\n      setTimeout(() => {\n        setMessage(false);\n        setButtonState(\"Dashboard\");\n      }, 1000);\n    });\n  };\n\n  const handleCancel = (e) => {\n    window.location.reload();\n\n    let ele = document.getElementsByClassName(\"cancel\");\n\n    for (let index = 0; index < ele.length; index++) {\n      ele[index].value = \"\";\n\n      ele[index].value =\n        Object.keys(backUpData).length > 0 ? backUpData[ele[index].id] : \"\";\n\n      if (ele[index].classList.contains(\"reactautocomplete\")) {\n        ele[\n          index\n        ].children[0].children[0].children[0].children[0].children[0].children[1]?.click();\n      }\n    }\n  };\n\n  const handleClear2 = () => {\n    setDetails((prev) => ({ ...prev, cslHead: \"\" }));\n  };\n\n  const handleClear3 = () => {\n    setDetails((prev) => ({ ...prev, cslId: \"\" }));\n  };\n\n  const handleClear4 = () => {\n    setDetails((prev) => ({ ...prev, acslId: \"\" }));\n  };\n\n  const handleClear5 = () => {\n    setDetails((prev) => ({ ...prev, deliveryPartnerHeadId: \"\" }));\n  };\n\n  const handleClear6 = () => {\n    setDetails((prev) => ({ ...prev, deliveryPartnerId: \"\" }));\n  };\n\n  const handleClear7 = () => {\n    setDetails((prev) => ({ ...prev, talentPartnerId: \"\" }));\n  };\n\n  const handleClear8 = () => {\n    setDetails((prev) => ({ ...prev, projectCoordinatorId: \"\" }));\n  };\n\n  const handleClear9 = () => {\n    setDetails((prev) => ({ ...prev, sqaId: \"\" }));\n  };\n\n  const handleClear10 = () => {\n    setDetails((prev) => ({ ...prev, clId: \"\" }));\n  };\n\n  const handleClear11 = () => {\n    setDetails((prev) => ({ ...prev, accountOwnerId: \"\" }));\n  };\n  const intialOnChangeState2 = {\n    customerEmails: \"\",\n  };\n\n  const [onChangeState1, setOnChangeState1] = useState(intialOnChangeState1);\n  const [onChangeState2, setOnChangeState2] = useState(intialOnChangeState2);\n\n  const [finalState, setFinalState] = useState({});\n  const [addList, setAddList] = useState([]);\n\n  const handleAdd = () => {\n    let data = finalState;\n    data[Object.keys(data).length] = onChangeState1[\"customerEmails\"];\n    setFinalState(data);\n    setAddList([...addList, { customerEmails: \"\" }]);\n  };\n\n  useEffect(() => {}, [addList]);\n\n  const handleOpen = () => {\n    let temp = finalState;\n\n    if (details.customerEmails != \"\") {\n      let pNo = details.customerEmails.includes(\",\")\n        ? details.customerEmails.split(\",\")\n        : details.customerEmails;\n\n      if (details.customerEmails.includes(\",\")) {\n        pNo.forEach((ele) => {\n          temp[Object.keys(temp).length] = ele;\n        });\n      } else {\n        temp[Object.keys(temp).length] = pNo;\n      }\n\n      setFinalState(() => temp);\n    }\n\n    setClickButtonPopUp(true);\n  };\n\n  useEffect(() => {\n    if (rolesValidationMsg) {\n      window.scrollTo({ top: 0, behavior: \"smooth\" });\n    }\n  }, [rolesValidationMsg]);\n\n  useEffect(() => {\n    if (finalTableMsg) {\n      setTimeout(() => {\n        window.scrollTo(0, 0);\n      }, 100);\n    }\n  }, [finalTableMsg]);\n\n  useEffect(() => {\n    if (custRolePopEditMsg) {\n      setTimeout(() => {\n        window.scrollTo(0, 0);\n      }, 100);\n    }\n  }, [custRolePopEditMsg]);\n\n  useEffect(() => {\n    if (addMessage) {\n      setTimeout(() => {\n        window.scrollTo(0, 0);\n      }, 100);\n    }\n  }, [addMessage]);\n  useEffect(() => {\n    if (csAddMessage) {\n      setTimeout(() => {\n        window.scrollTo(0, 0);\n      }, 100);\n    }\n  }, [csAddMessage]);\n\n  useEffect(() => {\n    if (addIntStakeMessage) {\n      setTimeout(() => {\n        window.scrollTo(0, 0);\n      }, 100);\n    }\n  }, [addIntStakeMessage]);\n\n  return (\n    <div>\n      <div className=\"col-md-12\">\n        <div className=\"pageTitle\">\n          <div className=\"childOne\"></div>\n          <div className=\"childTwo\">\n            <h2>Edit</h2>\n          </div>\n          <div className=\"childThree\"></div>\n        </div>\n      </div>\n      <ScreenBreadcrumbs\n        routes={routes}\n        currentScreenName={currentScreenName}\n      />\n      {message ? (\n        <div className=\"statusMsg success\">\n          <span>\n            <BiCheck />\n            Customer {customerData[0].customerName} updated successfully\n          </span>\n        </div>\n      ) : (\n        \"\"\n      )}\n      {validationMessage ? (\n        <div className=\"statusMsg error\">\n          {\" \"}\n          <span>\n            {\" \"}\n            <IoWarningOutline /> Please select the valid values for highlighted\n            fields{\" \"}\n          </span>\n        </div>\n      ) : (\n        \"\"\n      )}\n      {rolesValidationMsg ? (\n        <>\n          <div className=\"statusMsg error\">\n            <span>\n              <AiFillWarning />\n              Role {updatedRole} is already exist for the customer{\" \"}\n              {customerData[0].customerName}\n            </span>\n          </div>\n        </>\n      ) : (\n        \"\"\n      )}\n      {finalTableMsg ? (\n        <>\n          <div className=\"statusMsg success\">\n            <span>\n              <BiCheck />\n              Role updated successfully\n            </span>\n          </div>\n        </>\n      ) : (\n        \"\"\n      )}\n      {custRolePopEditMsg ? (\n        <>\n          <div className=\"statusMsg success\">\n            <span>\n              <BiCheck />\n              Details Saved Successfully\n            </span>\n          </div>\n        </>\n      ) : (\n        \"\"\n      )}\n      {addMessage ? (\n        <div className=\"statusMsg success\">\n          <BiCheck />\n          {\"Division saved successfully.\"}\n        </div>\n      ) : (\n        \"\"\n      )}\n      {csAddMessage ? (\n        <div className=\"statusMsg success\">\n          <BiCheck />\n          {\"Customer stakeholder saved successfully\"}\n        </div>\n      ) : (\n        \"\"\n      )}\n      {addIntStakeMessage ? (\n        <div className=\"statusMsg success\">\n          <BiCheck />\n          {\"Internal Stakeholder saved successfully.\"}\n        </div>\n      ) : (\n        \"\"\n      )}\n      {customerData.map((list) => (\n        <div className=\"mb-3 mt-2 container-fluid   customCard cancel\">\n          <div className=\"group-content row\">\n            <div className=\"col-md-9\">\n              <div className=\"row\">\n                <div className=\"form-group col-md-8 mb-2\">\n                  <label htmlFor=\"fullName\">\n                    Customer Name <span className=\"error-text\">*</span>\n                  </label>\n                  <div className=\"textfield\">\n                    <input\n                      type=\"text\"\n                      className=\"err text disableField\"\n                      name=\"fullName\"\n                      id=\"fullName\"\n                      defaultValue={list.customerName}\n                      disabled\n                    />\n                  </div>\n                </div>\n                <div className=\"form-group col-md-4 mb-2\">\n                  <label htmlFor=\"typCustStatusId\">\n                    Customer Status&nbsp;<span className=\"error-text\">*</span>\n                  </label>\n                  <select\n                    ref={(ele) => {\n                      ref.current[0] = ele;\n                    }}\n                    className=\"text cancel\"\n                    name=\"typCustStatusId\"\n                    id=\"typCustStatusId\"\n                    onChange={handleChange}\n                  >\n                    <option value=\"\"> &lt;&lt;Please Select&gt;&gt;</option>\n                    <option\n                      value={160}\n                      selected={\n                        customerData[0]?.typCustStatusId == 160 ? 160 : \"\"\n                      }\n                    >\n                      New\n                    </option>\n                    <option\n                      value={161}\n                      selected={\n                        customerData[0]?.typCustStatusId == 161 ? 161 : \"\"\n                      }\n                    >\n                      Active\n                    </option>\n                    <option\n                      value={162}\n                      selected={\n                        customerData[0]?.typCustStatusId == 162 ? 162 : \"\"\n                      }\n                    >\n                      InActive\n                    </option>\n                  </select>\n                </div>\n                <div className=\"form-group col-md-4 mb-2\">\n                  <label htmlFor=\"size\">Size</label>\n                  <select\n                    className=\"cancel\"\n                    name=\"size\"\n                    id=\"size\"\n                    onChange={handleChange}\n                  >\n                    <option value=\"\"> &lt;&lt;Please Select&gt;&gt;</option>\n                    {size.map((Item, index) => (\n                      <option\n                        key={index}\n                        value={Item.id}\n                        selected={\n                          Item.id == customerData[0]?.size\n                            ? customerData[0]?.size\n                            : \"\"\n                        }\n                      >\n                        {Item.lkup_name}\n                      </option>\n                    ))}\n                  </select>\n                </div>\n                <div className=\"form-group col-md-4 mb-2\">\n                  <label htmlFor=\"salesTerritoryId\">\n                    Sales Territory&nbsp;<span className=\"error-text\">*</span>\n                  </label>\n                  <select\n                    className=\"err  text disableField\"\n                    name=\"salesTerritoryId\"\n                    id=\"salesTerritoryId\"\n                    disabled=\"disableField\"\n                  >\n                    <option value=\"\"> &lt;&lt;Please Select&gt;&gt;</option>\n                    {salesTerritories.map((Item, index) => (\n                      <option\n                        key={index}\n                        value={Item.id}\n                        selected={\n                          Item.full_name == customerData[0]?.salesterritory\n                            ? customerData[0]?.salesterritory\n                            : \"\"\n                        }\n                      >\n                        {Item.full_name}\n                      </option>\n                    ))}\n                  </select>\n                </div>\n                <div className=\"form-group col-md-4 mb-2\">\n                  <label htmlFor=\"typIndustryId\">\n                    Industry type&nbsp;<span className=\"error-text\">*</span>\n                  </label>\n                  <select\n                    className=\"err text disableField\"\n                    id=\"typIndustryId\"\n                    name=\"typIndustryId\"\n                    disabled=\"disableField\"\n                  >\n                    <option value=\"\"> &lt;&lt;Please Select&gt;&gt;</option>\n                    {industryType.map((Item, index) => (\n                      <option\n                        key={index}\n                        value={Item.id}\n                        selected={\n                          Item.lkup_name == customerData[0]?.IndustryType\n                            ? customerData[0]?.IndustryType\n                            : \"\"\n                        }\n                      >\n                        {Item.lkup_name}\n                      </option>\n                    ))}\n                  </select>\n                </div>\n              </div>\n            </div>\n\n            <div className=\"form-group col-md-3 mb-2\">\n              <label htmlFor=\"typProjCatId\">\n                Project Category&nbsp;<span className=\"error-text\">*</span>\n              </label>\n              <select\n                className=\"err  text disableField auto text \"\n                name=\"typProjCatId\"\n                id=\"typProjCatId\"\n                disabled=\"disableField\"\n                multiple=\"multiple\"\n                size={5}\n              >\n                <option value=\"\"> &lt;&lt;Please Select&gt;&gt;</option>\n\n                {projectcategory\n                  .sort((a, b) =>\n                    a.project_category_name.localeCompare(\n                      b.project_category_name\n                    )\n                  )\n                  .map((category) => {\n                    const isSelected = projCatId.some(\n                      (item) =>\n                        item.project_category_name ===\n                        category.project_category_name\n                    );\n                    if (isSelected) {\n                      return (\n                        <option key={category.id} value={category.id}>\n                          {category.project_category_name}\n                        </option>\n                      );\n                    }\n\n                    return null;\n                  })}\n              </select>\n            </div>\n\n            <div className=\"form-group col-md-3 mb-2\">\n              <label htmlFor=\"salesPersonId\">\n                Sales Executive&nbsp;<span className=\"error-text\">*</span>\n              </label>\n              <div\n                className=\"autoComplete-container react  cancel  reactsearchautocomplete\"\n                ref={(ele) => {\n                  ref.current[1] = ele;\n                }}\n              >\n                <ReactSearchAutocomplete\n                  items={resource}\n                  type=\"Text\"\n                  name=\"salesPersonId\"\n                  id=\"salesPersonId\"\n                  className=\"err cancel\"\n                  fuseOptions={{ keys: [\"id\", \"name\"] }}\n                  resultStringKeyName=\"name\"\n                  resource={resource}\n                  resourceFnc={resourceFnc}\n                  placeholder=\"press space for resource list\"\n                  onSelect={(e) => {\n                    setDetails((prevProps) => ({\n                      ...prevProps,\n                      salesPersonId: e.id,\n                    }));\n                  }}\n                  showIcon={false}\n                  inputSearchString={customerData[0]?.name}\n                />\n              </div>\n            </div>\n\n            <div className=\"form-group col-md-3 mb-2\">\n              <label htmlFor=\"Month\">\n                Effective Month&nbsp;<span className=\"error-text\">*</span>\n              </label>\n              <div\n                className=\"datepicker\"\n                ref={(ele) => {\n                  ref.current[2] = ele;\n                }}\n              >\n                <DatePicker\n                  name=\"month\"\n                  id=\"month\"\n                  className=\"cancel\"\n                  selected={\n                    effectiveDate == null\n                      ? \"\"\n                      : effectiveDate == \"\"\n                      ? \"\"\n                      : effectiveDate == undefined\n                      ? \"\"\n                      : effectiveDate\n                  }\n                  minDate={\n                    customerData[0]?.month == null\n                      ? \"\"\n                      : customerData[0]?.month == \"\"\n                      ? \"\"\n                      : new Date(\n                          moment(customerData[0]?.month).format(\"MMM-yyyy\")\n                        )\n                  }\n                  onChange={(e) => {\n                    SetEffectiveDate(e);\n                    setDetails((prev) => ({\n                      ...prev,\n                      month: moment(e).format(\"yyyy-MM-DD\"),\n                    }));\n                  }}\n                  placeholderText=\"month\"\n                  dateFormat=\"MMM-yyyy\"\n                  onKeyDown={(e) => {\n                    e.preventDefault();\n                  }}\n                  showMonthYearPicker\n                />\n              </div>\n            </div>\n\n            <div className=\"form-group col-md-3 mb-2\">\n              <label htmlFor=\"clientpartnerId\">Client Partner</label>\n              <div className=\"autoComplete-container  \">\n                <ReactSearchAutocomplete\n                  items={resource1}\n                  type=\"Text\"\n                  name=\"clientpartnerId\"\n                  id=\"clientpartnerId\"\n                  className=\"err \"\n                  fuseOptions={{ keys: [\"id\", \"name\"] }}\n                  resultStringKeyName=\"name\"\n                  resource1={resource1}\n                  placeholder=\"press space for resource list\"\n                  inputSearchString={\n                    customerData[0]?.clientpartner == null\n                      ? \"\"\n                      : customerData[0]?.clientpartner\n                  }\n                  onSelect={(e) => {\n                    setDetails((prevProps) => ({\n                      ...prevProps,\n                      clientpartnerId: e.id,\n                    }));\n                  }}\n                  showIcon={false}\n                />\n              </div>\n            </div>\n            <div className=\"form-group col-md-3 mb-2\">\n              <label htmlFor=\"engagementPartnerId\">Engagement Partner</label>\n              <div className=\"autoComplete-container\">\n                <ReactSearchAutocomplete\n                  items={resource2}\n                  type=\"Text\"\n                  name=\"engagementPartnerId\"\n                  id=\"engagementPartnerId\"\n                  className=\"err \"\n                  fuseOptions={{ keys: [\"id\", \"name\"] }}\n                  resultStringKeyName=\"name\"\n                  placeholder=\"press space for resource list\"\n                  inputSearchString={\n                    customerData[0]?.engagementpartner == null\n                      ? \"\"\n                      : customerData[0]?.engagementpartner\n                  }\n                  resourceFnc={resourceFnc}\n                  onSelect={(e) => {\n                    setDetails((prevProps) => ({\n                      ...prevProps,\n                      engagementPartnerId: e.id,\n                    }));\n                  }}\n                  showIcon={false}\n                />\n              </div>\n            </div>\n\n            <div className=\"form-group col-md-3 mb-2\">\n              <label htmlFor=\"cslHeadId\">CSL Head</label>\n              <div className=\"autoComplete-container cancel  reactautocomplete\">\n                <RiskAutoComplete\n                  riskDetails={resource4}\n                  setFormData={setDetails}\n                  getData={resourceFnc}\n                  type=\"Text\"\n                  name=\"cslHeadId\"\n                  id=\"cslHeadId\"\n                  className=\"err cancel\"\n                  fuseOptions={{ keys: [\"id\", \"name\"] }}\n                  resultStringKeyName=\"name\"\n                  inputSearchString={\n                    customerData[0]?.cslHead == null\n                      ? \"\"\n                      : customerData[0]?.cslHead\n                  }\n                  placeholder=\"press space for resource list\"\n                  onChangeHandler={(e) => {\n                    setDetails((prevProps) => ({\n                      ...prevProps,\n                      cslHeadId: e.id,\n                    }));\n                  }}\n                  onClear={handleClear2}\n                  showIcon={false}\n                />\n              </div>\n            </div>\n            <div className=\"form-group col-md-3 mb-2\">\n              <label htmlFor=\"cslId\">CSL</label>\n              <div className=\"autoComplete-container cancel  reactautocomplete\">\n                <RiskAutoComplete\n                  riskDetails={resource5}\n                  setFormData={setDetails}\n                  getData={resourceFnc}\n                  type=\"Text\"\n                  name=\"cslId\"\n                  id=\"cslId\"\n                  className=\"err cancel\"\n                  fuseOptions={{ keys: [\"id\", \"name\"] }}\n                  resultStringKeyName=\"name\"\n                  placeholder=\"press space for resource list\"\n                  inputSearchString={\n                    customerData[0]?.cslName == null\n                      ? \"\"\n                      : customerData[0]?.cslName\n                  }\n                  onChangeHandler={(e) => {\n                    setDetails((prevProps) => ({\n                      ...prevProps,\n                      cslId: e.id,\n                    }));\n                  }}\n                  onClear={handleClear3}\n                  showIcon={false}\n                />\n              </div>\n            </div>\n            <div className=\"form-group col-md-3 mb-2\">\n              <label htmlFor=\"acslId\">Associate CSL</label>\n              <div className=\"autoComplete-container cancel  reactautocomplete\">\n                <RiskAutoComplete\n                  riskDetails={resource6}\n                  setFormData={setDetails}\n                  getData={resourceFnc}\n                  type=\"Text\"\n                  name=\"acslId\"\n                  id=\"acslId\"\n                  className=\"err cancel\"\n                  fuseOptions={{ keys: [\"id\", \"name\"] }}\n                  resultStringKeyName=\"name\"\n                  inputSearchString={\n                    customerData[0]?.AssociateCSL == null\n                      ? \"\"\n                      : customerData[0]?.AssociateCSL\n                  }\n                  placeholder=\"press space for resource list\"\n                  onChangeHandler={(e) => {\n                    setDetails((prevProps) => ({\n                      ...prevProps,\n                      acslId: e.id,\n                    }));\n                  }}\n                  onClear={handleClear4}\n                  showIcon={false}\n                />\n              </div>\n            </div>\n            <div className=\"form-group col-md-3 mb-2\">\n              <label htmlFor=\"deliveryPartnerHeadId\">\n                Delivery Partner Head\n              </label>\n              <div className=\"autoComplete-container cancel  reactautocomplete\">\n                <RiskAutoComplete\n                  riskDetails={resource7}\n                  setFormData={setDetails}\n                  getData={resourceFnc}\n                  type=\"Text\"\n                  name=\"deliveryPartnerHeadId\"\n                  id=\"deliveryPartnerHeadId\"\n                  className=\"err cancel\"\n                  fuseOptions={{ keys: [\"id\", \"name\"] }}\n                  resultStringKeyName=\"name\"\n                  inputSearchString={\n                    customerData[0]?.deliverypartnerHead == null\n                      ? \"\"\n                      : customerData[0]?.deliverypartnerHead\n                  }\n                  placeholder=\"press space for resource list\"\n                  onChangeHandler={(e) => {\n                    setDetails((prevProps) => ({\n                      ...prevProps,\n                      deliveryPartnerHeadId: e.id,\n                    }));\n                  }}\n                  onClear={handleClear5}\n                  showIcon={false}\n                />\n              </div>\n            </div>\n            <div className=\"form-group col-md-3 mb-2\">\n              <label htmlFor=\"deliveryPartnerId\">Delivery Partner</label>\n              <div className=\"autoComplete-container cancel  reactautocomplete\">\n                <RiskAutoComplete\n                  riskDetails={resource8}\n                  setFormData={setDetails}\n                  getData={resourceFnc}\n                  type=\"Text\"\n                  name=\"deliveryPartnerId\"\n                  id=\"deliveryPartnerId\"\n                  className=\"err cancel\"\n                  fuseOptions={{ keys: [\"id\", \"name\"] }}\n                  resultStringKeyName=\"name\"\n                  inputSearchString={\n                    customerData[0]?.deliverypartner == null\n                      ? \"\"\n                      : customerData[0]?.deliverypartner\n                  }\n                  placeholder=\"press space for resource list\"\n                  onChangeHandler={(e) => {\n                    setDetails((prevProps) => ({\n                      ...prevProps,\n                      deliveryPartnerId: e.id,\n                    }));\n                  }}\n                  onClear={handleClear6}\n                  showIcon={false}\n                />\n              </div>\n            </div>\n            <div className=\"form-group col-md-3 mb-2\">\n              <label htmlFor=\"talentPartnerId\">Talent Partner</label>\n              <div className=\"autoComplete-container cancel  reactautocomplete\">\n                <RiskAutoComplete\n                  riskDetails={resource9}\n                  setFormData={setDetails}\n                  getData={resourceFnc}\n                  type=\"Text\"\n                  name=\"talentPartnerId\"\n                  id=\"talentPartnerId\"\n                  className=\"err cancel\"\n                  fuseOptions={{ keys: [\"id\", \"name\"] }}\n                  resultStringKeyName=\"name\"\n                  inputSearchString={\n                    customerData[0]?.TalentPartner == null\n                      ? \"\"\n                      : customerData[0]?.TalentPartner\n                  }\n                  placeholder=\"press space for resource list\"\n                  onChangeHandler={(e) => {\n                    setDetails((prevProps) => ({\n                      ...prevProps,\n                      talentPartnerId: e.id,\n                    }));\n                  }}\n                  onClear={handleClear7}\n                  showIcon={false}\n                />\n              </div>\n            </div>\n            <div className=\"form-group col-md-3 mb-2\">\n              <label htmlFor=\"projectCoordinatorId\">Project co-ordinator</label>\n              <div className=\"autoComplete-container cancel  reactautocomplete\">\n                <RiskAutoComplete\n                  riskDetails={resource10}\n                  setFormData={setDetails}\n                  getData={resourceFnc}\n                  type=\"Text\"\n                  name=\"projectCoordinatorId\"\n                  id=\"projectCoordinatorId\"\n                  className=\"err cancel\"\n                  fuseOptions={{ keys: [\"id\", \"name\"] }}\n                  resultStringKeyName=\"name\"\n                  inputSearchString={\n                    customerData[0]?.projectCoordinator == null\n                      ? \"\"\n                      : customerData[0]?.projectCoordinator\n                  }\n                  placeholder=\"press space for resource list\"\n                  onChangeHandler={(e) => {\n                    setDetails((prevProps) => ({\n                      ...prevProps,\n                      projectCoordinatorId: e.id,\n                    }));\n                  }}\n                  onClear={handleClear8}\n                  showIcon={false}\n                />\n              </div>\n            </div>\n            <div className=\"form-group col-md-3 mb-2\">\n              <label htmlFor=\"sqaId\">SQA</label>\n              <div className=\"autoComplete-container cancel  reactautocomplete\">\n                <RiskAutoComplete\n                  riskDetails={resource11}\n                  setFormData={setDetails}\n                  getData={resourceFnc}\n                  type=\"Text\"\n                  name=\"sqaId\"\n                  id=\"sqaId\"\n                  className=\"err cancel\"\n                  fuseOptions={{ keys: [\"id\", \"name\"] }}\n                  resultStringKeyName=\"name\"\n                  inputSearchString={\n                    customerData[0]?.SQA == null ? \"\" : customerData[0]?.SQA\n                  }\n                  placeholder=\"press space for resource list\"\n                  onChangeHandler={(e) => {\n                    setDetails((prevProps) => ({\n                      ...prevProps,\n                      sqaId: e.id,\n                    }));\n                  }}\n                  onClear={handleClear9}\n                  showIcon={false}\n                />\n              </div>\n            </div>\n            <div className=\"form-group col-md-3 mb-2\">\n              <label htmlFor=\"clId\">Competency Lead</label>\n              <div className=\"autoComplete-container cancel  reactautocomplete\">\n                <RiskAutoComplete\n                  riskDetails={resource3}\n                  setFormData={setDetails}\n                  getData={resourceFnc}\n                  type=\"Text\"\n                  name=\"clId\"\n                  id=\"clId\"\n                  className=\"err cancel\"\n                  fuseOptions={{ keys: [\"id\", \"name\"] }}\n                  resultStringKeyName=\"name\"\n                  inputSearchString={\n                    customerData[0]?.competencyLead == null\n                      ? \"\"\n                      : customerData[0]?.competencyLead\n                  }\n                  placeholder=\"press space for resource list\"\n                  onChangeHandler={(e) => {\n                    setDetails((prevProps) => ({\n                      ...prevProps,\n                      clId: e.id,\n                    }));\n                  }}\n                  onClear={handleClear10}\n                  showIcon={false}\n                />\n              </div>\n            </div>\n            <div className=\"form-group col-md-3 mb-2\">\n              <label htmlFor=\"cCountryId\">Country</label>\n\n              <select\n                name=\"cCountryId\"\n                className=\"cancel\"\n                id=\"cCountryId\"\n                onChange={(e) => handleChange(e)}\n              >\n                <option value=\"\"> &lt;&lt;Please Select&gt;&gt;</option>\n                {cCountryId.map((Item, index) => (\n                  <option\n                    key={index}\n                    value={Item.id}\n                    selected={\n                      Item.country_name == customerData[0]?.country_name\n                        ? customerData[0]?.country_name\n                        : \"\"\n                    }\n                  >\n                    {Item.country_name}\n                  </option>\n                ))}\n              </select>\n            </div>\n            <div className=\"form-group col-md-3 mb-2\">\n              <label htmlFor=\"classificationId\">Classification</label>\n              <select\n                name=\"classificationId\"\n                className=\"cancel\"\n                id=\"classificationId\"\n                onChange={handleChange}\n              >\n                <option value=\"\"> &lt;&lt;Please Select&gt;&gt;</option>\n                {classification.map((Item, index) => (\n                  <option\n                    key={index}\n                    value={Item.id}\n                    selected={\n                      Item.lkup_name == customerData[0]?.classification\n                        ? customerData[0]?.classification\n                        : \"\"\n                    }\n                  >\n                    {Item.lkup_name}\n                  </option>\n                ))}\n              </select>\n            </div>\n\n            <div className=\"form-group col-md-3 mb-2\">\n              <label htmlFor=\"phone\">Phone</label>\n              <input\n                type=\"text\"\n                name=\"phone\"\n                className=\"text cancel\"\n                id=\"phone\"\n                defaultValue={list.phone}\n                maxLength={15}\n                onKeyDown={(e) =>\n                  e.keyCode &&\n                  (e.keyCode <= 47 || e.keyCode >= 58) &&\n                  e.keyCode != 8 &&\n                  e.preventDefault()\n                }\n                onChange={handleChange}\n              />\n            </div>\n            <div className=\"form-group col-md-3 mb-2\">\n              <label htmlFor=\"fax\">Fax Number</label>\n              <input\n                type=\"text\"\n                className=\"text cancel\"\n                id=\"fax\"\n                name=\"fax\"\n                defaultValue={customerData[0]?.fax}\n                maxLength={15}\n                onKeyDown={(e) =>\n                  e.keyCode &&\n                  (e.keyCode <= 47 || e.keyCode >= 58) &&\n                  e.keyCode != 8 &&\n                  e.preventDefault()\n                }\n                onChange={handleChange}\n              />\n            </div>\n            <div className=\"form-group col-md-3 mb-2\">\n              <label htmlFor=\"sfAccountLink\">SF Account Link</label>\n              <input\n                type=\"text\"\n                name=\"sfAccountLink\"\n                className=\"text cancel\"\n                id=\"sfAccountLink\"\n                defaultValue={list.sfAccountLink}\n                onChange={handleChange}\n              />\n            </div>\n            <div className=\"form-group col-md-3 mb-2\">\n              <label htmlFor=\"website\">Website</label>\n              <input\n                type=\"text\"\n                name=\"website\"\n                className=\"text cancel\"\n                id=\"website\"\n                defaultValue={list.website}\n                required\n                onChange={handleChange}\n              />\n            </div>\n\n            <div className=\"form-group col-md-3 mb-2\">\n              <label htmlFor=\"customerEmails\">Customer Email</label>\n              <div className=\"row\">\n                <div className=\"col-md-10\">\n                  <input\n                    type=\"text\"\n                    name=\"customerEmails\"\n                    className=\"disableField\"\n                    id=\"customerEmails\"\n                    value={emailString}\n                    disabled\n                    onChange={handleChange1}\n                  />\n                </div>\n                <div className=\"col-md-1\">\n                  <BiPencil\n                    cursor=\"pointer\"\n                    color=\"black\"\n                    style={{ background: \"#abaeaf\" }}\n                    onClick={() => {\n                      handleOpen();\n                    }}\n                  />\n                </div>\n              </div>\n            </div>\n\n            <div className=\"form-group col-md-3 mb-2\">\n              <label htmlFor=\"custReferenceable\">\n                Is this customer referenceable?\n              </label>\n              <select\n                id=\"custReferenceable\"\n                className=\"cancel\"\n                name=\"custReferenceable\"\n                selected={\n                  customerData[0]?.custReferenceable == null\n                    ? \"\"\n                    : customerData[0]?.custReferenceable\n                }\n                onChange={handleChange}\n              >\n                <option value=\"\"> &lt;&lt;Please Select&gt;&gt;</option>\n                <option\n                  value={1}\n                  selected={\n                    customerData[0]?.custReferenceable == \"1\"\n                      ? \"1\"\n                      : customerData[0]?.custReferenceable == null\n                      ? \"\"\n                      : \"\"\n                  }\n                >\n                  Yes\n                </option>\n                <option\n                  value={0}\n                  selected={\n                    customerData[0]?.custReferenceable == \"0\"\n                      ? \"0\"\n                      : customerData[0]?.custReferenceable == null\n                      ? \"\"\n                      : \"\"\n                  }\n                  onChange={handleChange}\n                >\n                  No\n                </option>\n              </select>\n            </div>\n            {details.custReferenceable == 0 ? (\n              <div className=\"form-group col-md-3 mb-2\">\n                <label htmlFor=\"custReferenceNotes\">\n                  If no, why not? <span className=\"error-text\">*</span>\n                </label>\n                <div\n                  className=\"textfield cancel\"\n                  ref={(ele) => {\n                    ref.current[3] = ele;\n                  }}\n                >\n                  <textarea\n                    type=\"text\"\n                    className=\"cancel\"\n                    name=\"custReferenceNotes\"\n                    id=\"custReferenceNotes\"\n                    rows={3}\n                    required\n                    placeholder=\"why not?\"\n                    defaultValue={customerData[0]?.custReferenceNotes}\n                    onChange={handleChange}\n                  />\n                </div>\n              </div>\n            ) : (\n              \"\"\n            )}\n            <div className=\"form-group col-md-3 mb-2\">\n              <label htmlFor=\"accountOwnerId\">Account Owner</label>\n              <div className=\"autoComplete-container cancel  reactautocomplete\">\n                <RiskAutoComplete\n                  riskDetails={resource14}\n                  setFormData={setDetails}\n                  getData={resourceFnc}\n                  type=\"Text\"\n                  name=\"accountOwnerId\"\n                  id=\"accountOwnerId\"\n                  fuseOptions={{ keys: [\"id\", \"name\"] }}\n                  resultStringKeyName=\"name\"\n                  placeholder=\"Type minimum 3 characters to get the list\"\n                  onChangeHandler={(e) => {\n                    setDetails((prevProps) => ({\n                      ...prevProps,\n                      accountOwnerId: e.id,\n                    }));\n                  }}\n                  onClear={handleClear11}\n                  inputSearchString={\n                    customerData[0]?.accountowner == null\n                      ? \"\"\n                      : customerData[0]?.accountowner\n                  }\n                  showIcon={false}\n                />\n              </div>\n            </div>\n\n            <div className=\"col-md-3\">\n              <label htmlFor=\"isNewCustomer\">New Logo</label>\n              <div className=\"form-check form-check-inline\">\n                <input\n                  className=\"form-check-input cancel\"\n                  type=\"radio\"\n                  value=\"1\"\n                  name=\"isNewCustomer\"\n                  id=\"isNewCustomerYes\"\n                  checked={details.isNewCustomer == 1}\n                  onChange={handleNewCustomerChange}\n                />\n                <label className=\"form-check-label \" htmlFor=\"isNewCustomerYes\">\n                  Yes\n                </label>\n              </div>\n              <div className=\"form-check form-check-inline \">\n                <input\n                  className=\"form-check-input \"\n                  type=\"radio\"\n                  value=\"0\"\n                  name=\"isNewCustomer\"\n                  id=\"isNewCustomerNo\"\n                  checked={details.isNewCustomer == 0}\n                  onChange={handleExistingCustomerChange}\n                />\n                <label className=\"form-check-label \" htmlFor=\"isNewCustomerNo\">\n                  No\n                </label>\n              </div>\n            </div>\n          </div>\n        </div>\n      ))}{\" \"}\n      {customerData.map((list) => (\n        <div className=\"mb-3 mt-2 container-fluid   customCard cancel\">\n          <h2>Invoicing Details</h2>\n          <div className=\"group-content row\">\n            <div className=\"form-group col-md-3 mb-2\">\n              <label htmlFor=\"CiInvoiceForId\">Create Invoice For</label>\n              <select\n                id=\"CiInvoiceForId\"\n                name=\"CiInvoiceForId\"\n                className=\"cancel\"\n                onChange={handleChange}\n              >\n                <option value=\"\"> &lt;&lt;Please Select&gt;&gt;</option>\n                <option\n                  value=\"650\"\n                  selected={\n                    customerData[0]?.invoiceFor == \"Customer\" ? 650 : \"\"\n                  }\n                >\n                  Customer\n                </option>\n                <option\n                  value=\"651\"\n                  selected={\n                    customerData[0]?.invoiceFor == \"Division\" ? 651 : \"\"\n                  }\n                >\n                  Division\n                </option>\n                <option\n                  value=\"652\"\n                  selected={customerData[0]?.invoiceFor == \"Project\" ? 652 : \"\"}\n                >\n                  Project\n                </option>\n              </select>\n            </div>\n            <div className=\"form-group col-md-3 mb-2\">\n              <label htmlFor=\"invoiceCycleId\">Invoice Cycle</label>\n              <select\n                id=\"invoiceCycleId\"\n                className=\"cancel\"\n                onChange={handleChange}\n              >\n                <option value=\"\"> &lt;&lt;Please Select&gt;&gt;</option>\n                {invoiceCycle.map((Item, index) => (\n                  <option\n                    key={index}\n                    value={Item.id}\n                    selected={\n                      Item.invoiceCycle == customerData[0]?.invoiceCycle\n                        ? customerData[0]?.invoiceCycle\n                        : \"\"\n                    }\n                  >\n                    {Item.invoiceCycle}\n                  </option>\n                ))}\n              </select>\n            </div>\n\n            <div className=\"form-group col-md-2 mb-2\">\n              <label htmlFor=\"paymentTermsId\">Payment Terms</label>\n              <select\n                id=\"paymentTermsId\"\n                className=\"cancel\"\n                onChange={handleChange}\n              >\n                <option value=\"\"> &lt;&lt;Please Select&gt;&gt;</option>\n                {paymentTerm.map((Item, index) => (\n                  <option\n                    key={index}\n                    value={Item.id}\n                    selected={\n                      Item.paymentTerms == customerData[0]?.paymentTerms\n                        ? customerData[0]?.paymentTerms\n                        : \"\"\n                    }\n                  >\n                    {Item.paymentTerms}\n                  </option>\n                ))}\n              </select>\n            </div>\n            <div className=\"form-group col-md-2 mb-2\">\n              <label htmlFor=\"invoiceTimeId\">Invoice Time</label>\n              <select\n                id=\"invoiceTimeId\"\n                className=\"cancel\"\n                onChange={handleChange}\n              >\n                <option value=\"\"> &lt;&lt;Please Select&gt;&gt;</option>\n                {invoiceTime.map((Item, index) => (\n                  <option\n                    key={index}\n                    value={Item.id}\n                    selected={\n                      Item.invoiceTime == customerData[0]?.invoiceTime\n                        ? customerData[0]?.invoiceTime\n                        : \"\"\n                    }\n                  >\n                    {Item.invoiceTime}\n                  </option>\n                ))}\n              </select>\n            </div>\n            <div className=\" col-md-2\">\n              <label htmlFor=\"isExpenseBillable\">Expense Billable </label>\n              <div className=\"form-check form-check-inline\">\n                <input\n                  className=\"form-check-input cancel\"\n                  type=\"radio\"\n                  name=\"isExpenseBillable\"\n                  value=\"1\"\n                  id=\"isExpenseBillable\"\n                  checked={details.isExpenseBillable == 1}\n                  onChange={handleIsBillableChange}\n                />\n                <label className=\"form-check-label\" htmlFor=\"yes\">\n                  Yes\n                </label>\n              </div>\n              <div className=\"form-check form-check-inline\">\n                <input\n                  className=\"form-check-input cancel\"\n                  type=\"radio\"\n                  name=\"isExpenseBillable\"\n                  value=\"0\"\n                  id=\"isExpenseBillable\"\n                  checked={details.isExpenseBillable == 0}\n                  onChange={handleNoBillableChange}\n                />\n                <label className=\"form-check-label\" htmlFor=\"No\">\n                  No\n                </label>\n              </div>\n            </div>\n            <div className=\"form-group col-md-3 mb-2\">\n              <label htmlFor=\"ciDiscountPercent\">Discount (%)</label>\n              <input\n                type=\"text\"\n                className=\"text cancel\"\n                id=\"ciDiscountPercent\"\n                placeholder\n                required\n                defaultValue={\n                  list.ciDiscountPercent == null\n                    ? \"\"\n                    : list.ciDiscountPercent == \"\"\n                    ? \"\"\n                    : list.ciDiscountPercent.toFixed(2)\n                }\n                onChange={handleChange}\n              />\n            </div>\n            <div className=\"form-group col-md-3 mb-2\">\n              <label htmlFor=\"CiCurrencyId\">Currency</label>\n              <select\n                id=\"CiCurrencyId\"\n                onChange={handleChange}\n                className=\"cancel\"\n              >\n                <option value=\"\"> &lt;&lt;Please Select&gt;&gt;</option>\n                {currency.map((Item, index) => (\n                  <option\n                    key={index}\n                    value={Item.id}\n                    selected={\n                      Item.currency == customerData[0]?.description\n                        ? customerData[0]?.description\n                        : \"\"\n                    }\n                  >\n                    {Item.currency}\n                  </option>\n                ))}\n              </select>\n            </div>\n            <div className=\"form-group col-md-2 mb-2\">\n              <label htmlFor=\"invoiceCultureId\">Invoice Culture</label>\n              <select\n                id=\"invoiceCultureId\"\n                className=\"cancel\"\n                onChange={handleChange}\n              >\n                <option value=\"\"> &lt;&lt;Please Select&gt;&gt;</option>\n                {invoiceCulture.map((Item, index) => (\n                  <option\n                    key={index}\n                    value={Item.id}\n                    selected={\n                      Item.invoiceTime == customerData[0]?.invoiceCulture\n                        ? customerData[0]?.invoiceCulture\n                        : \"\"\n                    }\n                  >\n                    {Item.invoiceTime}\n                  </option>\n                ))}\n              </select>\n            </div>\n            <div className=\"form-group col-md-2 mb-2\">\n              <label htmlFor=\"invoiceTemplateId\">Invoice Template</label>\n              <select\n                name=\"invoiceTemplateId\"\n                id=\"invoiceTemplateId\"\n                onChange={handleChange}\n                className=\"cancel\"\n              >\n                <option value=\"\"> &lt;&lt;Please Select&gt;&gt;</option>\n\n                {invoiceTemplate.map((Item, index) => (\n                  <option\n                    key={index}\n                    value={Item.id}\n                    selected={\n                      Item.invoiceTemplate == customerData[0]?.invoiceTemplate\n                        ? customerData[0]?.invoiceTemplate\n                        : \"\"\n                    }\n                  >\n                    {Item.invoiceTemplate}\n                  </option>\n                ))}\n              </select>\n            </div>\n          </div>\n          <div>\n            <button\n              className=\"btn btn-primary ml-2\"\n              onClick={() => {\n                setInvSummaryPopUp(true);\n              }}\n            >\n              Invoice Summary\n            </button>\n          </div>\n\n          <div className=\" form-group col-md-12 col-sm-12 col-xs-12 btn-container center my-3\">\n            <button\n              className=\"btn btn-primary\"\n              type=\"submit\"\n              onClick={() => {\n                handlePostDetails();\n              }}\n            >\n              <FaSave /> Save\n            </button>\n            <button\n              className=\"btn btn-secondary\"\n              onClick={() => {\n                handleCancel();\n              }}\n            >\n              <ImCross fontSize={\"11px\"} /> Cancel\n            </button>\n          </div>\n          <div>\n            {clickButtonPopUp ? (\n              <CustomerEmailEditPopup\n                clickButtonPopUp={clickButtonPopUp}\n                setClickButtonPopUp={setClickButtonPopUp}\n                customerData={customerData}\n                setDisplayEmail={setDisplayEmail}\n                details={details}\n                setDetails={setDetails}\n                handleChange={handleChange}\n                handleAdd={handleAdd}\n                finalState={finalState}\n                addList={addList}\n                setAddList={setAddList}\n                setAddList1={setAddList1}\n                addList1={addList1}\n                setFinalState1={setFinalState1}\n                handleAddEmail={handleAddEmail}\n                finalState1={finalState1}\n                handleChange1={handleChange1}\n              />\n            ) : (\n              \"\"\n            )}\n          </div>\n          {invSummaryPopUp ? (\n            <InvoiceSummaryPopup\n              invSummaryPopUp={invSummaryPopUp}\n              setInvSummaryPopUp={setInvSummaryPopUp}\n              customerId={customerId}\n            />\n          ) : (\n            \"\"\n          )}\n\n          <>\n            <CustomersDivisionEdit\n              customerId={customerId}\n              setAddMessage={setAddMessage}\n            />\n            <CustomersStakeholdersEdit\n              customerId={customerId}\n              setCsAddMessage={setCsAddMessage}\n            />\n            <CustomersInternalStakeholdersEdit\n              customerId={customerId}\n              setAddIntStakeMessage={setAddIntStakeMessage}\n            />\n            <CustomerRolesEdit\n              customerId={customerId}\n              cCountryId={cCountryId}\n              customerData={customerData}\n              rolesValidationMsg={rolesValidationMsg}\n              setRolesValidationMsg={setRolesValidationMsg}\n              updatedRole={updatedRole}\n              setUpdatedRole={setUpdatedRole}\n              finalTableMsg={finalTableMsg}\n              setFinalTableMsg={setFinalTableMsg}\n              setCustRolePopEditMsg={setCustRolePopEditMsg}\n            />\n          </>\n        </div>\n      ))}\n      {loader ? <Loader handleAbort={handleAbort} /> : \"\"}\n    </div>\n  );\n}\n\nexport default CustomerEdit;\n","// ******************** This code is for when we are refresh at a particular Tab, it should be with in that Tab ***********************\nimport React, { useState, useEffect } from \"react\";\nimport AccountPlan from \"./AccountPlan\";\nimport Financials from \"./Financials\";\nimport QBR from \"./QBR\";\nimport Projects from \"./Projects\";\nimport Initiatives from \"./Initiatives\";\nimport CustomerRisks from \"./CustomerRisks\";\nimport RelationshipHeatmap from \"./RelationShipHeapMap\";\nimport CustomersEngagement from \"./CustomersEngagement\";\nimport Documents from \"./Documents\";\nimport CustomerTechnology from \"./CustomerTechnology\";\nimport { AiFillWarning } from \"react-icons/ai\";\nimport Customerdashboard from \"./Customerdashboard\";\nimport axios from \"axios\";\nimport { environment } from \"../../environments/environment\";\nimport CustomerEdit from \"./CustomerEdit\";\n\nfunction CustomersTopMenus() {\n  let topMenus = [\n    \"Dashboard\",\n    \"Edit\",\n    \"Documents\",\n    \"Engagement\",\n    \"Projects\",\n    \"Financials\",\n    \"Account Plan\",\n    \"Technology\",\n    \"Risks\",\n    \"Initiatives\",\n    \"Relationship Heatmap\",\n    \"QBR\",\n  ];\n\n  const [customerId, setCustomerId] = useState(0);\n  const [customerData, setCustomerData] = useState([]);\n  const baseUrl = environment.baseUrl;\n  const [mainMenu, setMainMenu] = useState([]);\n\n  const loggedUserId = localStorage.getItem(\"resId\");\n  let url = window.location.href;\n  let customerArr = url.split(\":\");\n  let projectId = customerArr[customerArr.length - 1];\n  const [buttonState, setButtonState] = useState(topMenus[0]);\n  // const [buttonState, setButtonState] = useState(() => {\n  //   // Retrieve the last selected button state from localStorage on component mount\n  //   return localStorage.getItem(\"customerButtonState\")?.split(\"+\")[1] === customerArr[customerArr.length - 1] ? localStorage.getItem(\"customerButtonState\").split(\"+\")[0] : topMenus[0] ?? topMenus[0];\n  // });\n\n  const tabMenus = () => {\n    axios\n      .get(\n        baseUrl +\n          `/CommonMS/master/getTabMenus?ProjectId=${projectId}&loggedUserId=${loggedUserId}&type=Customer&subType=customer`\n      )\n      .then((resp) => {\n        const data = resp.data;\n        setMainMenu(data);\n      });\n  };\n\n  useEffect(() => {\n    tabMenus();\n    if (url.includes(\"dashboard\")) {\n      setButtonState(\"Dashboard\");\n    }\n\n    if (url.includes(\"engagement\")) {\n      setButtonState(\"Engagement\");\n    }\n    let customerArr = url.split(\":\");\n    setCustomerId(customerArr[customerArr.length - 1]);\n  }, []);\n\n  const filterDuplicates = (mainMenu) => {\n    const seenDisplayNames = new Set();\n    return mainMenu.filter((item) => {\n      if (seenDisplayNames.has(item.display_name)) {\n        return false; // Duplicate display_name, exclude this item\n      }\n      seenDisplayNames.add(item.display_name);\n      return true; // Unique display_name, include this item\n    });\n  };\n\n  // useEffect(() => {\n  //   // Save the selected tab to localStorage whenever it changes\n  //   localStorage.setItem(\"customerButtonState\", buttonState + \"+\" +customerArr[customerArr.length - 1]);\n  // }, [buttonState]);\n\n  const getCustomererviewData = () => {\n    axios({\n      method: \"get\",\n      url:\n        baseUrl +\n        `/customersms/Customers/getCustomersdashboard?cid=${customerId}`,\n    }).then(function (response) {\n      let resp = response.data;\n      setCustomerData(resp);\n    });\n  };\n  useEffect(() => {\n    getCustomererviewData();\n  }, [customerId]);\n\n  const filteredData = filterDuplicates(mainMenu);\n\n  return (\n    <div>\n      {mainMenu.length > 0 ? (\n        <div>\n          <div className=\" tabs\">\n            {mainMenu.map((button) => (\n              <button\n                key={button.id}\n                className={\n                  buttonState === button.display_name.toString()\n                    ? \"buttonDisplayClick\"\n                    : \"buttonDisplay\"\n                }\n                onClick={() => {\n                  // window.location.reload();\n                  setButtonState(button.display_name.toString());\n                }}\n              >\n                {/* clg */}\n\n                {button.display_name}\n              </button>\n            ))}\n          </div>\n          {buttonState === \"Documents\" && (\n            <Documents customerId={customerId} mainMenu={mainMenu} />\n          )}\n          {buttonState === \"Edit\" && (\n            <CustomerEdit\n              customerId={customerId}\n              customerData={customerData}\n              getCustomererviewData={getCustomererviewData}\n              mainMenu={mainMenu}\n              setButtonState={setButtonState}\n            />\n          )}\n          {buttonState === \"Financials\" && (\n            <Financials customerId={customerId} mainMenu={mainMenu} />\n          )}\n          {buttonState === \"Account Plan\" && (\n            <AccountPlan customerId={customerId} mainMenu={mainMenu} />\n          )}\n          {buttonState === \"QBR\" && (\n            <QBR\n              customerId={customerId}\n              filteredData={filteredData}\n              mainMenu={mainMenu}\n            />\n          )}\n          {buttonState === \"Risks\" && (\n            <CustomerRisks customerId={customerId} mainMenu={mainMenu} />\n          )}\n          {buttonState === \"Projects\" && (\n            <Projects customerId={customerId} mainMenu={mainMenu} />\n          )}\n          {buttonState === \"Initiatives\" && (\n            <Initiatives customerId={customerId} mainMenu={mainMenu} />\n          )}\n          {buttonState === \"Relationship Heatmap\" && (\n            <RelationshipHeatmap customerId={customerId} mainMenu={mainMenu} />\n          )}\n          {buttonState === \"Engagement\" && (\n            <CustomersEngagement\n              customerId={customerId}\n              mainMenu={mainMenu}\n              // loader={loader}\n              // setLoader={setLoader}\n            />\n          )}\n          {buttonState === \"Technology\" && (\n            <CustomerTechnology customerId={customerId} mainMenu={mainMenu} />\n          )}\n          {buttonState === \"Dashboard\" && (\n            <Customerdashboard customerId={customerId} mainMenu={mainMenu} />\n          )}\n        </div>\n      ) : (\n        <div className=\"statusMsg error\">\n          <span className=\"error-block\">\n            <AiFillWarning /> &nbsp; You dont have Permission to View this\n            Customer Data\n          </span>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default CustomersTopMenus;\n"],"names":["props","customerId","useState","data","setData","baseUrl","environment","headerData","setHeaderData","linkColumns","setLinkColumns","linkColumnsRoutes","setLinkColumnsRoutes","customFilters","setcustomFilters","customFilterValue","setCustomFilterValue","open","setOpen","abortController","useRef","getData","current","AbortController","axios","method","url","projectStatusId","signal","headers","then","response","sortedData","sort","a","b","nameA","prj_health","toUpperCase","nameB","sortDataByName","project_code","project_name","contract_terms","business_unit","prj_manager","prj_stage","planned_start_dt","planned_end_dt","actual_start_dt","actual_end_dt","concat","useEffect","JSON","parse","stringify","primaryManagerToolTip","className","title","legends","prjStatusToolTip","bussinessUnitToolTip","ContractTermsToolTip","projectCodetooltip","style","width","plannnedDtAlign","actualStartDtAlign","actualEndDtAlign","plannnedEndDtAlign","LinkTemplate","rou","split","target","to","dynamicColumns","Object","keys","map","col","i","sortable","body","field","header","id","type","align","filterTable","loggedUserId","localStorage","getItem","routes","setRoutes","getMenus","resp","forEach","item","display_name","ScreenBreadcrumbs","currentScreenName","Loader","handleAbort","abort","setsearching","rows","buttonPopup","setButtonPopup","data1","editId","editedData","setEditedData","setFormData","setAddmsg","formData","setEditAddmsg","ref","formEditData","setFormEditData","setid","validationMessage","setValidationMessage","size","visible","onClose","backdrop","cursor","htmlFor","ele","name","placeholder","maxLength","onChange","e","prev","value","defaultValue","Initiative","FunctionArea","CurStatus","InnTech","CusStake","PrimObj","Des","onClick","GlobalValidation","cusId","initiative","functionArea","curStatus","innTech","cusStake","primObj","des","error","setTimeout","Save","mainMenu","dataObject","filteredData","find","addmsg","editmsg","setType","setEditId","deletePopup","setDeletePopup","deleteMessage","setDeleteMessage","deleteid","setDeleteId","SNo","initiatives","res","GetData","length","Action","catch","color","is_write","deleteInitiative","DeletePopup","strokeWidth","handleChange","custName","setCustName","searching","project_name_code","Align","Risk_value","alignSno","sno","Toggletooltip","Risk_Name","probof_occurrence","moment","format","fData","Risk_type","Risk_source","Risk_impact","AssignedTo","Risk_occurred","Risk_status","risk_occured_date","mitigation_date","created_by_name","full_name","CellRendererPrimeReactDataTable","formData1","setFormData1","priority","setPriority","relationshipStrength","setRelationshipStrength","engagementLevel","setEngagementLevel","onKeyDown","event","code","preventDefault","inputValue","test","borderBottom","department","Item","lkup_name","selected","priorityid","relationshipid","engagementid","role_description","fy_mandate","valid","relationship_strength","engagement_level","CellColor","backgroundColor","padding","NameEdit","whiteSpace","overflow","textOverflow","maxWidth","titleEdit","departmentEdit","roleDescriptionEdit","fyMandate","textAlign","isShow","setIsShow","customaername","setcustomername","cus","setCusName","EngagementName","BusinessUnit","division","CostCenter","Manager","SalesExecutive","ContractTerms","StartDate","EndDate","Status","customerName","Businessemplate","dpToolip","engNameToolip","projectToolip","emailToolip","resStDtAlign","resEndDtAlign","monthDtAlign","revenueAlign","setIsShowButtonOffset","document","getElementById","offsetTop","window","scrollTo","top","behavior","DeliveryCreate","flag","gettabledata","Software","Platform","formdata","setFormdata","prevProps","required","systemFunction","software","platform","serviceVendor","futurePlans","competitorNotes","system_function","service_vendor","future_plans","competitor_notes","tabledata","deleteTechnology","setCurrency","setMainMenu","customerData","setCustomerData","setCustomerDataDivision","customerDatainterstake","setCustomerDatainterstake","customerDatarole","setCustomerDatarole","customerDataextstake","setCustomerDataextstake","headerDatastakeHolders","setHeaderDatastakeholders","headerDataInternal","setHeaderDataInternal","customerArr","location","href","err","addressstake","address","cityoolipstake","country_nameeAlignstake","stateToolipstake","email","customer_idToolipstake","contactAlignstake","phone","dynamicColumnsstakeholders","Internalid","id3","typeIDFunction","type_id","phoneAlignstake","businessunitToolipstake","businessunit","sresourceIdToolipstake","resource_id","firstNameNTERNAL","firstName","addressnternL","aemailinternal","dynamicColumnsInternal","cityoolip","city","country_nameeAlign","country_name","stateToolip","state","customer_idToolip","customer_id","contactAlign","contact","zip_codeToolip","zip_code","nameAlign","hData","bData","element","index","push","desp","Set","d","dt","obj","countriesData","filter","countriesNames","cost","rate","countryid","some","j","k","includes","curre","list","projectcategory","IndustryType","website","customerstatus","salesterritory","clientpartner","engagementpartner","customeremail","classification","sfAccountLink","cslHead","cslName","AssociateCSL","deliverypartnerHead","deliverypartner","TalentPartner","projectCoordinator","SQA","competencyLead","accountowner","newCustomer","invoiceFor","invoiceCycle","paymentTerms","invoiceTime","expenseBillable","discountPercent","description","invoiceCulture","invoiceTemplate","paginatorTemplate","currentPageReportTemplate","rowsPerPageOptions","paginator","showGridlines","highlightOnHover","pagination","paginationPerPage","paginationRowsPerPageOptions","paginationComponentOptions","rowsPerPageText","rangeSeparatorText","rowGroupMode","sortOrder","responsiveLayout","alignHeader","rowData","class","invSummaryPopUp","setInvSummaryPopUp","tableData","setTableData","getTableData","headerGroup","colSpan","alignment","onFilter","setFilters","filters","onSelectionChange","setSelectedCustomer","dataKey","stateStorage","stateKey","emptyMessage","headerColumnGroup","setButtonState","buttonState","getCustomererviewData","backUpData","setBackUpData","customerEmail","finalState1","setFinalState1","addList1","setAddList1","handleAddEmail","onChangeState1","customerEmails","setDisplayEmail","setSize","message","setMessage","year","maxDate","Date","getFullYear","month1","getMonth","salesTerritories","setSalesTerritories","setProjectCategory","industryType","setIndustryType","setClassification","resource","setResource","resource1","setResource1","resource2","setResource2","resource3","setResource3","resource4","setResource4","resource5","setResource5","resource6","setResource6","resource7","setResource7","resource8","setResource8","resource9","setResource9","resource10","setResource10","resource11","setResource11","setResource12","setResource13","resource14","setResource14","cCountryId","setcCountryId","setInvoiceCycle","paymentTerm","setPaymentTerm","setInvoiceTime","currency","setInvoiceCulture","setInvoiceTemplate","clickButtonPopUp","setClickButtonPopUp","rolesValidationMsg","setRolesValidationMsg","updatedRole","setUpdatedRole","finalTableMsg","setFinalTableMsg","custRolePopEditMsg","setCustRolePopEditMsg","addMessage","setAddMessage","csAddMessage","setCsAddMessage","addIntStakeMessage","setAddIntStakeMessage","projCatId","setProjCatId","loader","setLoader","effectiveDate","SetEffectiveDate","emailString","values","toString","startsWith","substring","conStart","month","toDate","typCustStatusId","salesPersonId","salesId","clientpartnerId","engagementPartnerId","engagementpartnerId","cslHeadId","cslId","acslId","AssociateCSLId","deliveryPartnerHeadId","deliverypartnerHeadId","deliveryPartnerId","deliverypartnerId","talentPartnerId","TalentPartnerId","projectCoordinatorId","sqaId","SQAId","clId","competencyLeadId","classificationId","fax","custReferenceable","accountOwnerId","account_owner_id","isNewCustomer","is_new_customer","CiInvoiceForId","invoiceCycleId","paymentTermsId","invoiceTimeId","CiCurrencyId","isExpenseBillable","invoiceCultureId","ciDiscountPercent","invoiceTemplateId","custReferenceNotes","details","setDetails","getElementsByClassName","click","setOnChangeState1","handleChange1","onChangeState2","handleNewCustomerChange","handleExistingCustomerChange","handleIsBillableChange","handleNoBillableChange","resourceFnc","manger","filterdata","invcycle","payterm","intime","inculture","invtemp","Response","handleClear2","handleClear3","handleClear4","handleClear5","handleClear6","handleClear7","handleClear8","handleClear9","handleClear10","handleClear11","finalState","setFinalState","addList","setAddList","handleAdd","disabled","multiple","project_category_name","localeCompare","category","ReactSearchAutocomplete","items","fuseOptions","resultStringKeyName","onSelect","showIcon","inputSearchString","undefined","minDate","placeholderText","dateFormat","showMonthYearPicker","riskDetails","onChangeHandler","onClear","keyCode","background","temp","pNo","handleOpen","checked","toFixed","handlePostDetails","reload","classList","contains","children","handleCancel","fontSize","CustomerEmailEditPopup","CustomersDivisionEdit","CustomersStakeholdersEdit","CustomersInternalStakeholdersEdit","CustomerRolesEdit","setCustomerId","projectId","seenDisplayNames","has","add","filterDuplicates","button","Documents","Financials","AccountPlan","QBR"],"sourceRoot":""}