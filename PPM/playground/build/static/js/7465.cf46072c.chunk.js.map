{"version":3,"file":"static/js/7465.cf46072c.chunk.js","mappings":"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","sources":["views/Customer/SolutionMapping.js","../node_modules/@babel/runtime/helpers/esm/readOnlyError.js"],"sourcesContent":["import React, { useRef, useState, useEffect } from \"react\";\nimport { MultiSelect } from \"react-multi-select-component\";\n\nimport \"primeicons/primeicons.css\";\nimport \"primereact/resources/themes/lara-light-indigo/theme.css\";\nimport \"primereact/resources/primereact.css\";\nimport \"primeflex/primeflex.css\";\nimport { FaChevronCircleDown, FaChevronCircleUp } from \"react-icons/fa\";\nimport { environment } from \"../../environments/environment\";\nimport { CCollapse } from \"@coreui/react\";\nimport axios from \"axios\";\n\nimport SelectCustDialogBox from \"../Customer/SelectCustDialogBox\";\nimport { DataTable } from \"primereact/datatable\";\nimport { Column } from \"primereact/column\";\nimport { BiLinkExternal } from \"react-icons/bi\";\nimport { BiSave } from \"react-icons/bi\";\nimport Loader from \"../Loader/Loader\";\nimport GlobalValidation from \"../ValidationComponent/GlobalValidation\";\nimport { AiFillWarning } from \"react-icons/ai\";\nimport { BsArrowCounterclockwise } from \"react-icons/bs\";\nimport GlobalCancel from \"../ValidationComponent/GlobalCancel\";\n\nfunction SolutionMapping() {\n  const baseUrl = environment.baseUrl;\n  const [dataAr, setDataAr] = useState([]);\n  const [value, onChange] = useState(new Date());\n  const [visible, setVisible] = useState(false);\n  const [cheveronIcon, setCheveronIcon] = useState(FaChevronCircleUp);\n\n  const [selectedDeptid, setSelectedDeptId] = useState([]);\n  const [deptId, setdeptId] = useState([]);\n  const [searchDataB, setSearchDataB] = useState(\n    \"170,211,123,82,168,207,212,18,213,49,149,208,243\"\n  );\n\n  const [selectSalesExe, setSelectSalesExe] = useState([]);\n  const [salesExe, setSalesExe] = useState([]);\n  const [searchDataEx, setSearchDataEx] = useState(-1);\n\n  const [tableVal, setTableVal] = useState([]);\n  const [searching, setSearching] = useState(false);\n  const [custVisible, setCustVisible] = useState(false);\n  const [solution, setSolution] = useState([]);\n\n  const [soulData, setSoulData] = useState();\n  const [gitData, setGitData] = useState([]);\n  const [checkData, setCheckData] = useState([]);\n  const [saveTabData, setSaveTabData] = useState([]);\n\n  const [loader, setLoader] = useState(false);\n  const [validationmessage, setValidationMessage] = useState(false);\n  const ref = useRef([]);\n  const [successfulmessage, setSuccessfulmessage] = useState(false);\n  const [backUpData, setBackUpData] = useState({});\n\n  const [customerId, setCustomerId] = useState(-1);\n  const [proStatusId, setProStatusId] = useState(-1);\n\n  const bussinessUnitDepartment = () => {\n    axios.get(baseUrl + `/CostMS/cost/getDepartments`).then((res) => {\n      const data = res.data;\n      let custom = [];\n      data.length > 0 &&\n        data.forEach((e) => {\n          let dpObj = {\n            label: e.label,\n            value: e.value,\n          };\n          custom.push(dpObj);\n        });\n\n      setdeptId(custom);\n      setSelectedDeptId(custom);\n    });\n  };\n\n  const getExe = () => {\n    axios.get(baseUrl + `/timeandexpensesms/getExecutiveName`).then((res) => {\n      const exData = res.data;\n      let getExe = [];\n      exData.length > 0 &&\n        exData.forEach((e) => {\n          let exObj = {\n            label: e.Executive_name,\n            value: e.id,\n          };\n          getExe.push(exObj);\n        });\n      setSalesExe(getExe);\n      setSelectSalesExe(getExe);\n    });\n  };\n\n  const getSolutionTable = () => {\n    let valid = GlobalValidation(ref);\n\n    if (valid) {\n      {\n        setValidationMessage(true);\n        setTimeout(() => {\n          setValidationMessage(false);\n        }, 3000);\n      }\n      return;\n    }\n\n    setLoader(true);\n    customerId === 1\n      ? (customerId = String(\n          JSON.parse(localStorage.getItem(\"selectedCust\")).map((item) => {\n            return item.id;\n          })\n        ))\n      : \"\";\n    axios({\n      method: \"get\",\n      url:\n        baseUrl +\n        `/timeandexpensesms/getProjectSolutions?prjStatus=${proStatusId}&buIds=${searchDataB}&executiveIds=${searchDataEx}&customerIds=${customerId}`,\n    }).then((res) => {\n      const getData = res.data;\n      for (let i = 0; i < getData.length; i++) {\n        getData[i][\"Sno\"] = i + 1;\n      }\n      let resultsTab = [...getData];\n\n      setTableVal(resultsTab);\n      setRecords(resultsTab);\n    });\n    setSearching(true);\n\n    setTimeout(() => {\n      setLoader(false);\n    }, 100);\n    setSearching(true);\n  };\n\n  const getSolution = () => {\n    axios.get(baseUrl + `/timeandexpensesms/getSolutionList`).then((res) => {\n      const getSol = res.data;\n      setSolution(getSol);\n    });\n  };\n\n  const handleChange = ({ id, value }) => {\n    //   setFormData((prevState) => {\n    //     return { ...prevState, [id]: value }\n    // })\n    if (id === \"customers\" && value === \"1\") {\n      setCustVisible(true);\n    }\n  };\n\n  const representPro = (rowData) => {\n    return (\n      <React.Fragment>\n        <span\n          className=\"vertical-align-middle ml-2\"\n          id={rowData.projectId}\n          onChange={(e) => {}}\n        >\n          {rowData.project}\n        </span>\n      </React.Fragment>\n    );\n  };\n\n  const representManeger = (rowData) => {\n    return (\n      <React.Fragment>\n        <span className=\"vertical-align-middle ml-2\">{rowData.prjMgr}</span>\n      </React.Fragment>\n    );\n  };\n\n  const representExecutive = (rowData) => {\n    return (\n      <React.Fragment>\n        <span className=\"vertical-align-middle ml-2\">{rowData.executive}</span>\n      </React.Fragment>\n    );\n  };\n\n  const representCustomer = (rowData) => {\n    return (\n      <React.Fragment>\n        <span className=\"vertical-align-middle ml-2\">{rowData.customer}</span>\n      </React.Fragment>\n    );\n  };\n\n  const representSoluton = (rowData) => {\n    return (\n      <React.Fragment>\n        <span className=\"vertical-align-middle ml-2\">\n          <select\n            name=\"solutionId\"\n            id={rowData.projectId}\n            onChange={(e) => {\n              setSoulData(e.target.value);\n            }}\n          >\n            <option value=\"\">&lt;&lt; Please Select &gt;&gt;</option>\n            {solution.map((e) => {\n              return (\n                <option value={e.id} selected={rowData.solutionId == e.id}>\n                  {e.solution_name}\n                </option>\n              );\n            })}\n          </select>\n        </span>\n      </React.Fragment>\n    );\n  };\n\n  const representGit = (rowData) => {\n    return (\n      <React.Fragment>\n        <span className=\"vertical-align-middle ml-2\">\n          <input\n            type=\"text\"\n            id={rowData.projectId}\n            onChange={(e) => {\n              setGitData(e.target.value);\n            }}\n            defaultValue={rowData.gitLabURL}\n          ></input>\n          <a href={rowData.gitLabURL}>\n            {\" \"}\n            <BiLinkExternal />\n          </a>\n        </span>\n      </React.Fragment>\n    );\n  };\n\n  const representArchive = (rowData) => {\n    return (\n      <React.Fragment>\n        <span className=\"vertical-align-middle ml-2\">\n          <input\n            type=\"checkbox\"\n            id={rowData.projectId}\n            onChange={(e) => {\n              setCheckData((ps) => {\n                const newarray = [...ps];\n                const index = newarray.findIndex(\n                  (d) => d.projectId === rowData.projectId\n                );\n                if (index !== -1) {\n                  newarray[index] = {\n                    projectId: rowData.projectId,\n                    solutionId: parseInt(soulData),\n                    gitLabURL: gitData,\n                    isArchived: e.target.checked === true ? 1 : 0,\n                  };\n                  return newarray;\n                } else {\n                  return [\n                    ...ps,\n                    {\n                      projectId: rowData.projectId,\n                      solutionId: parseInt(soulData),\n                      gitLabURL: gitData,\n                      isArchived: e.target.checked === true ? 1 : 0,\n                    },\n                  ];\n                }\n              });\n            }}\n            defaultChecked={rowData.isArchived}\n          ></input>\n        </span>\n      </React.Fragment>\n    );\n  };\n\n  const saveMapping = () => {\n    axios\n      .post(baseUrl + `/timeandexpensesms/saveMapping`, checkData)\n      .then((res) => {\n        setSaveTabData(res.data);\n      });\n\n    setSuccessfulmessage(true);\n    setTimeout(() => {\n      setSuccessfulmessage(false);\n    }, 3000);\n  };\n\n  const handleReset = (e) => {\n    GlobalCancel(ref);\n    let ele = document.getElementsByClassName(\"cancel\");\n    for (let index = 0; index < ele.length; index++) {\n      ele[index].value =\n        Object.keys(backUpData).length > 0 ? backUpData[ele[index].id] : \"\";\n    }\n  };\n\n  useEffect(() => {\n    if (tableVal.length > 0) {\n      setBackUpData(JSON.parse(JSON.stringify(tableVal[0])));\n    }\n  }, [tableVal]);\n\n  useEffect(() => {\n    getSolution();\n    bussinessUnitDepartment();\n    getExe();\n    // saveMapping();\n    setDataAr(\"Table values..............................\", tableVal);\n  }, []);\n\n  useEffect(() => {}, [checkData]);\n\n  const [records, setRecords] = useState([]);\n\n  // const handleFilter = (e) => {\n  // const newRecord =  records.filter((item)=>{\n  //   // return item.value.toLowerCase().includes(e.target.prjMgr.toLowerCase())\n  // })\n  // setTableVal(newRecord);\n  // }\n\n  return (\n    <div>\n      {validationmessage ? (\n        <div className=\"statusMsg error\">\n          {\" \"}\n          <AiFillWarning /> Please select valid values for highlighted fields\n        </div>\n      ) : (\n        \"\"\n      )}\n\n      <>\n        {successfulmessage ? (\n          <div className=\"statusMsg success\">Mapping saved successfully</div>\n        ) : (\n          \"\"\n        )}\n      </>\n      <div className=\"col-md-12\">\n        <div className=\"pageTitle\">\n          <div className=\"childOne\"></div>\n          <div className=\"childTwo\">\n            <h2>Solution Mapping</h2>\n          </div>\n          <div className=\"childThree\"></div>\n        </div>\n      </div>\n      <div className=\"group mb-3 customCard\">\n        <div className=\"col-md-12 collapseHeader\">\n          <h2>Search Filters</h2>\n          <div\n            onClick={() => {\n              setVisible(!visible);\n              visible\n                ? setCheveronIcon(FaChevronCircleUp)\n                : setCheveronIcon(FaChevronCircleDown);\n            }}\n          >\n            <span>{cheveronIcon}</span>\n          </div>\n        </div>\n        <CCollapse visible={!visible}>\n          <div className=\"group-content row\">\n            <div className=\" col-md-3 mb-2\">\n              <div className=\"form-group row\">\n                <label className=\"col-5\" htmlFor=\"bu\">\n                  BU<span style={{ color: \"red\" }}>*</span>{\" \"}\n                </label>\n                <span className=\"col-1 p-0\">:</span>\n                <div className=\"col-6\">\n                  <div\n                    className=\"multiselect\"\n                    ref={(ele) => {\n                      ref.current[0] = ele;\n                    }}\n                  >\n                    <MultiSelect\n                      id=\"buId\"\n                      name=\"buId\"\n                      options={deptId}\n                      hasSelectAll={true}\n                      // isLoading={false}\n                      // shouldToggleOnHover={false}\n                      // disableSearch={false}\n                      value={selectedDeptid}\n                      disabled={false}\n                      onChange={(s) => {\n                        setSelectedDeptId(s);\n                        let filterB = [];\n                        s.forEach((d) => {\n                          filterB.push(d.value);\n                        });\n\n                        setSearchDataB(filterB.toString());\n                      }}\n                    />\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className=\" col-md-3 mb-2\">\n              <div className=\"form-group row\">\n                <label className=\"col-5\" htmlFor=\"customer\">\n                  Customer <span style={{ color: \"red\" }}>*</span>\n                </label>\n                <span className=\"col-1 p-0\">:</span>\n                <div className=\"col-6\">\n                  <select\n                    id=\"customers\"\n                    name=\"customers\"\n                    className=\"col-md-12 col-sm-12 col-xs-12  onLoadEmpty\"\n                    onChange={(e) => {\n                      handleChange(e.target);\n                      setCustomerId(e.target.value);\n                    }}\n                  >\n                    <option value={-1}>{\"<< All >> \"}</option>\n                    <option value={0}>{\"Active Customers\"}</option>\n                    <option value={1}>{\"Select\"}</option>\n                  </select>\n                </div>\n              </div>\n            </div>\n            <div className=\" col-md-3 mb-2\">\n              <div className=\"form-group row\">\n                <label className=\"col-5\" htmlFor=\"projectstatus\">\n                  Project Status\n                </label>\n                <span className=\"col-1 p-0\">:</span>\n                <div className=\"col-6\">\n                  <select\n                    id=\"projectstatus\"\n                    name=\"projectstatus\"\n                    onChange={(e) => {\n                      handleChange(e.target);\n                      setProStatusId(e.target.value);\n                    }}\n                  >\n                    <option value={-1}>{\"<< All >> \"}</option>\n                    <option value={0}>{\"New\"}</option>\n                    <option value={1}>{\"In Progress\"}</option>\n                    <option value={2}>{\"Completed\"}</option>\n                    <option value={3}>{\"Withdrawn\"}</option>\n                    <option value={4}>{\"On Hold\"}</option>\n                    <option value={5}>{\"Opportunity\"}</option>\n                    <option value={6}>{\"Pending Invoice\"}</option>\n                    <option value={1108}>{\"Invalid\"}</option>\n                  </select>\n                </div>\n              </div>\n            </div>\n            <div className=\" col-md-3 mb-2\">\n              <div className=\"form-group row\">\n                <label className=\"col-5\" htmlFor=\"country-select\">\n                  Sales Executive <span style={{ color: \"red\" }}>*</span>\n                </label>\n                <span className=\"col-1 p-0\">:</span>\n                <div className=\"col-6\">\n                  <div\n                    className=\"multiselect\"\n                    ref={(ele) => {\n                      ref.current[1] = ele;\n                    }}\n                  >\n                    <MultiSelect\n                      id=\"salesExecutiveId\"\n                      name=\"salesExecutiveId\"\n                      options={salesExe}\n                      hasSelectAll={true}\n                      isLoading={false}\n                      shouldToggleOnHover={false}\n                      disableSearch={false}\n                      value={selectSalesExe}\n                      disabled={false}\n                      onChange={(e) => {\n                        setSelectSalesExe(e);\n                        let filterExe = [];\n                        e.forEach((d) => {\n                          filterExe.push(d.value);\n                        });\n\n                        setSearchDataEx(filterExe.toString());\n                      }}\n                    />\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className=\"col-md-12 col-sm-12 col-xs-12 btn-container center my-2\">\n              <button\n                type=\"submit\"\n                className=\"btn btn-primary\"\n                onClick={getSolutionTable}\n              >\n                Search{\" \"}\n              </button>\n            </div>\n          </div>\n          {loader ? <Loader /> : \"\"}\n        </CCollapse>\n      </div>\n      <div>\n        {searching ? (\n          <div>\n            <div\n              id=\"myDatatable_filter\"\n              class=\"dataTables_filter\"\n              style={{ height: \"25px\", width: \"165px\", marginLeft: \"auto\" }}\n            >\n              <label>\n                Search:&nbsp;\n                <input\n                  type=\"search\"\n                  className=\"col-7\"\n                  placeholder\n                  aria-controls=\"myDatatable\"\n                  // onChange={(e) => handleFilter(e)}\n                />\n              </label>\n            </div>\n            <div className=\"col-md-12 mt-4\">\n              <DataTable\n                className=\"solutionMappingTable\"\n                value={tableVal}\n                paginator\n                // selection={}\n                rows={10}\n                showGridlines\n                highlightOnHover\n                pagination\n                paginationPerPage={5}\n                paginationRowsPerPageOptions={[5, 15, 25, 50]}\n                paginationComponentOptions={{\n                  rowsPerPageText: \"Records per page:\",\n                  rangeSeparatorText: \"out of\",\n                }}\n                rowGroupMode=\"rowspan\"\n                groupRowsBy=\"role\"\n                sortOrder={2}\n                responsiveLayout=\"scroll\"\n                // onSelectionChange={}\n              >\n                <Column field=\"Sno\" header=\"S.No\"></Column>\n                <Column\n                  field=\"project\"\n                  header=\"Project\"\n                  body={representPro}\n                ></Column>\n                <Column\n                  field=\"prjMgr\"\n                  header=\"Project Manager\"\n                  body={representManeger}\n                ></Column>\n                <Column\n                  field=\"executive\"\n                  header=\"Executive\"\n                  body={representExecutive}\n                ></Column>\n                <Column\n                  field=\"customer\"\n                  header=\"Customer\"\n                  body={representCustomer}\n                ></Column>\n                <column\n                  field=\"solutionId\"\n                  header=\"Solution\"\n                  body={representSoluton}\n                ></column>\n                <column\n                  field=\"gitLabURL\"\n                  header=\"GitLab URL\"\n                  body={representGit}\n                ></column>\n                <Column\n                  field=\"isArchived\"\n                  header=\"Archive\"\n                  body={representArchive}\n                ></Column>\n              </DataTable>\n            </div>\n\n            <div className=\" form-group col-md-12 col-sm-12 col-xs-12 btn-container center my-3 mb-2\">\n              <button\n                className=\"btn btn-primary\"\n                type=\"submit\"\n                onClick={saveMapping}\n              >\n                <BiSave /> Save\n              </button>\n              <button\n                className=\"btn btn-secondary\"\n                onClick={() => {\n                  handleReset();\n                }}\n              >\n                <BsArrowCounterclockwise />\n                Reset\n              </button>\n            </div>\n          </div>\n        ) : (\n          \" \"\n        )}\n      </div>\n      <SelectCustDialogBox visible={custVisible} setVisible={setCustVisible} />\n    </div>\n  );\n}\n\nexport default SolutionMapping;\n","export default function _readOnlyError(name) {\n  throw new TypeError(\"\\\"\" + name + \"\\\" is read-only\");\n}"],"names":["baseUrl","environment","useState","setDataAr","Date","visible","setVisible","FaChevronCircleUp","cheveronIcon","setCheveronIcon","selectedDeptid","setSelectedDeptId","deptId","setdeptId","searchDataB","setSearchDataB","selectSalesExe","setSelectSalesExe","salesExe","setSalesExe","searchDataEx","setSearchDataEx","tableVal","setTableVal","searching","setSearching","custVisible","setCustVisible","solution","setSolution","soulData","setSoulData","gitData","setGitData","checkData","setCheckData","setSaveTabData","loader","setLoader","validationmessage","setValidationMessage","ref","useRef","successfulmessage","setSuccessfulmessage","backUpData","setBackUpData","customerId","setCustomerId","proStatusId","setProStatusId","handleChange","id","value","useEffect","length","JSON","parse","stringify","axios","then","res","getSol","data","custom","forEach","e","dpObj","label","push","exData","getExe","exObj","Executive_name","setRecords","className","onClick","FaChevronCircleDown","htmlFor","style","color","ele","current","name","options","hasSelectAll","disabled","onChange","s","filterB","d","toString","target","isLoading","shouldToggleOnHover","disableSearch","filterExe","type","GlobalValidation","setTimeout","String","localStorage","getItem","map","item","method","url","getData","i","resultsTab","class","height","width","marginLeft","placeholder","paginator","rows","showGridlines","highlightOnHover","pagination","paginationPerPage","paginationRowsPerPageOptions","paginationComponentOptions","rowsPerPageText","rangeSeparatorText","rowGroupMode","groupRowsBy","sortOrder","responsiveLayout","field","header","body","rowData","projectId","project","prjMgr","executive","customer","selected","solutionId","solution_name","defaultValue","gitLabURL","href","ps","newarray","index","findIndex","parseInt","isArchived","checked","defaultChecked","GlobalCancel","document","getElementsByClassName","Object","keys","handleReset","_readOnlyError","TypeError"],"sourceRoot":""}