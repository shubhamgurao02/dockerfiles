{"version":3,"file":"static/js/5065.d8546db6.chunk.js","mappings":"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","sources":["views/Customer/CustomerEmailEditPopup.js","views/Customer/CustomerRoleEditPopup.js","views/Customer/CustomerRoleDeletePopup.js","views/Customer/CustomerRolesEdit.js","views/Customer/CustomersDivisionEdit.js","views/Customer/CustomersInternalStakeholdersEdit.js","views/Customer/CustomersStakeholdersEdit.js","views/ProjectComponent/RiskAutocomplete.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\nimport { MdOutlinePlaylistAdd } from \"react-icons/md\";\nimport { AiFillDelete, AiFillWarning } from \"react-icons/ai\";\nimport { CModal, CModalBody, CModalHeader, CModalTitle } from \"@coreui/react\";\nimport { ImCheckmark, ImCross } from \"react-icons/im\";\nimport { FaPlus, FaSave } from \"react-icons/fa\";\nimport { BiCheck } from \"react-icons/bi\";\nimport Draggable from \"react-draggable\";\n\nfunction isValidEmail(email) {\n  // Basic email format validation using a regular expression\n  const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n  return emailRegex.test(email);\n}\n\nconst CustomerEmailEditPopup = (props) => {\n  const {\n    setClickButtonPopUp,\n    clickButtonPopUp,\n    setFinalState1,\n    handleAddEmail,\n    finalState1,\n    handleChange1,\n  } = props;\n\n  const [displayState1, setDisplayState1] = useState(null);\n  const [validationmessage, setValidationMessage] = useState(\"\");\n  const [deleteConfirmation, setDeleteConfirmation] = useState(null);\n  const ref = useRef([]);\n  const [emailDeletedMessage, setEmailDeletedMessage] = useState(false);\n  useEffect(() => {\n    DisplayList();\n  }, [finalState1]);\n\n  const DisplayList = () => {\n    if (finalState1 === undefined || finalState1 === null) {\n      return null;\n    }\n\n    setDisplayState1(() => {\n      return Object.keys(finalState1).map((d, i) => {\n        const emailArray = finalState1[d]\n          .split(\",\")\n          .filter((email) => email.trim() !== \"\");\n        return (\n          <div key={i}>\n            {emailArray.map((email, index) => (\n              <div key={index}>\n                {email.trim()}\n                {email.trim() === \"\" ? (\n                  \"\"\n                ) : (\n                  <AiFillDelete\n                    style={{ cursor: \"pointer\" }}\n                    onClick={() => showDeleteConfirmationPopup(d, email)}\n                  />\n                )}\n              </div>\n            ))}\n          </div>\n        );\n      });\n    });\n  };\n\n  const addHandler = () => {\n    const emailInput = ref.current[0].querySelector(\"input\");\n    const email = emailInput.value.trim();\n\n    if (!email) {\n      setValidationMessage(\"Please Provide Email\");\n      setTimeout(() => {\n        setValidationMessage(\"\");\n      }, 3000);\n      return;\n    }\n\n    if (!isValidEmail(email)) {\n      setValidationMessage(\"Please Provide Proper Email\");\n      setTimeout(() => {\n        setValidationMessage(\"\");\n      }, 3000);\n      return;\n    }\n\n    if (finalState1[email]) {\n      setValidationMessage(\"Email already exists\");\n      setTimeout(() => {\n        setValidationMessage(\"\");\n      }, 3000);\n      return;\n    }\n\n    setFinalState1((prev) => ({ ...prev, [email]: email }));\n    handleAddEmail();\n    DisplayList();\n    emailInput.value = \"\";\n  };\n\n  const deleteHandler = (key, email) => {\n    setFinalState1((prev) => {\n      const newState = { ...prev };\n      const emailArray = newState[key]\n        .split(\",\")\n        .filter((e) => e.trim() !== email.trim());\n      newState[key] = emailArray.join(\",\");\n      return newState;\n    });\n    setEmailDeletedMessage(true);\n    setTimeout(() => setEmailDeletedMessage(false), 3000);\n    DisplayList();\n    setDeleteConfirmation(null);\n  };\n\n  const showDeleteConfirmationPopup = (key, email) => {\n    setDeleteConfirmation({ key, email });\n  };\n\n  return (\n    <div>\n      <Draggable>\n        <CModal\n          alignment=\"center\"\n          backdrop=\"static\"\n          size=\"sm\"\n          visible={clickButtonPopUp}\n          onClose={() => {\n            setClickButtonPopUp(false);\n          }}\n        >\n          <CModalHeader className=\"hgt22\" style={{ cursor: \"all-scroll\" }}>\n            <CModalTitle>\n              <span className=\"ft16\">Client Email</span>\n            </CModalTitle>\n          </CModalHeader>\n          <CModalBody>\n            {emailDeletedMessage ? (\n              <div className=\"statusMsg success\">\n                <BiCheck />\n                {\" Email Deleted Successfully\"}\n              </div>\n            ) : (\n              \"\"\n            )}\n\n            {validationmessage && (\n              <div className=\"statusMsg error\">\n                <AiFillWarning /> {validationmessage}\n              </div>\n            )}\n            <div className=\"group-content row\">\n              <div className=\"col-md-12 row mb-2 align-items-center\">\n                <div className=\"col-md-8\">\n                  <div\n                    className=\"textfield\"\n                    ref={(ele) => {\n                      ref.current[0] = ele;\n                    }}\n                  >\n                    <input\n                      className=\"col-md-12\"\n                      type=\"email\"\n                      id=\"customerEmails\"\n                      name=\"customerEmails\"\n                      placeholder=\"Enter Email\"\n                      onChange={(e) => {\n                        handleChange1(e);\n                      }}\n                    ></input>\n                  </div>\n                </div>\n                <button\n                  type=\"submit\"\n                  className=\"btn btn-primary col-4\"\n                  onClick={() => {\n                    addHandler();\n                  }}\n                >\n                  <i className=\"fa fa-plus\" aria-hidden=\"true\"></i>\n                  <FaPlus /> Add\n                </button>\n              </div>\n\n              <div className=\"row\">{displayState1}</div>\n            </div>\n          </CModalBody>\n        </CModal>\n      </Draggable>\n\n      {deleteConfirmation && (\n        <Draggable>\n          <CModal\n            alignment=\"center\"\n            backdrop=\"static\"\n            size=\"sm\"\n            visible={true}\n            onClose={() => setDeleteConfirmation(null)}\n          >\n            <CModalHeader className=\"hgt22\" style={{ cursor: \"all-scroll\" }}>\n              <CModalTitle>\n                <span className=\"ft16\">Delete Customer Email</span>\n              </CModalTitle>\n            </CModalHeader>\n            <CModalBody>\n              <div>\n                <strong> Are you sure you want to delete email ?</strong>\n              </div>\n              <div className=\"form-group col-md-12 col-sm-12 col-xs-12 btn-container center my-3 mb-1\">\n                <button\n                  className=\"btn btn-primary\"\n                  onClick={() =>\n                    deleteHandler(\n                      deleteConfirmation.key,\n                      deleteConfirmation.email\n                    )\n                  }\n                >\n                  <ImCheckmark />\n                  Yes\n                </button>\n                <button\n                  className=\"btn btn-secondary\"\n                  onClick={() => setDeleteConfirmation(null)}\n                >\n                  <ImCross />\n                  No\n                </button>\n              </div>\n            </CModalBody>\n          </CModal>\n        </Draggable>\n      )}\n    </div>\n  );\n};\n\nexport default CustomerEmailEditPopup;\n","import React, { useState, useEffect } from \"react\";\nimport { CModal, CModalBody, CModalHeader } from \"@coreui/react\";\nimport { ImCross } from \"react-icons/im\";\nimport { TfiSave } from \"react-icons/tfi\";\nimport axios from \"axios\";\nimport { environment } from \"../../environments/environment\";\n\nconst CustomerRoleEditPopup = (props) => {\n  const {\n    rolePopup,\n    setRolePopup,\n    updatedRowData,\n    customerRoleTypeId,\n    getCustomersRoles,\n    setCustRolePopEditMsg,\n  } = props;\n  const baseUrl = environment.baseUrl;\n\n  const [edited, setEdited] = useState(false);\n\n  const countries = [\"Canada\", \"Germany\", \"India\", \"Jordan\", \"UAE\", \"UK\", \"US\"];\n\n  const [billingRates, setBillingRates] = useState({});\n  const [costs, setCosts] = useState({});\n  const [dataChanged, setDataChanged] = useState({});\n\n  const handleBillingRateChange = (country, value) => {\n    setBillingRates((prevState) => ({\n      ...prevState,\n      [country]: value,\n    }));\n    setDataChanged((prevState) => ({\n      ...prevState,\n      [country]: true,\n    }));\n  };\n\n  const handleCostChange = (country, value) => {\n    setCosts((prevState) => ({\n      ...prevState,\n      [country]: value,\n    }));\n    setDataChanged((prevState) => ({\n      ...prevState,\n      [country]: true,\n    }));\n  };\n\n  const saveData = () => {\n    const dataToSend = [];\n\n    countries.forEach((country) => {\n      if (dataChanged[country]) {\n        const billingRate = parseFloat(billingRates[country] || 0);\n        const cost = parseFloat(costs[country] || 0);\n\n        const countryData = updatedRowData.find(\n          (data) => data.country_name === country\n        );\n\n        if (countryData) {\n          dataToSend.push({\n            customerRoleTypeId: customerRoleTypeId,\n            countryId: countryData.countryid,\n            cost: cost,\n            rate: billingRate,\n          });\n        }\n      }\n    });\n\n    axios\n      .post(baseUrl + \"/customersms/Customers/saveRoleCost\", dataToSend)\n      .then((response) => {\n        setRolePopup(false);\n        setCustRolePopEditMsg(true);\n        setTimeout(() => {\n          setCustRolePopEditMsg(false);\n        }, 3000);\n        getCustomersRoles();\n        setEdited(true);\n      });\n  };\n\n  useEffect(() => {\n    if (updatedRowData) {\n      const billingRatesData = {};\n      const costsData = {};\n\n      updatedRowData.forEach((data) => {\n        const { country_name, rate, cost } = data;\n        if (countries.includes(country_name)) {\n          billingRatesData[country_name] = rate === 0 ? 0 : rate || \"\";\n          costsData[country_name] = cost === 0 ? 0 : cost || \"\";\n        }\n      });\n\n      setBillingRates(billingRatesData);\n      setCosts(costsData);\n    }\n  }, [updatedRowData]);\n\n  return (\n    <div>\n      {edited ? (\n        <div className=\"statusMsg success\">\n          <span>\n            <BiCheck />\n            Role updated successfully\n          </span>\n        </div>\n      ) : (\n        \"\"\n      )}\n      <CModal\n        alignment=\"center\"\n        backdrop=\"static\"\n        visible={rolePopup}\n        size=\"xs\"\n        className=\"ui-dialog\"\n        onClose={() => setRolePopup(false)}\n      >\n        <CModalHeader className=\"\"></CModalHeader>\n        <CModalBody>\n          <table style={{ borderCollapse: \"collapse\", width: \"100%\" }}>\n            <thead>\n              <tr>\n                <th\n                  style={{\n                    border: \"1px solid #ddd\",\n                    padding: \"8px\",\n                    textAlign: \"left\",\n                  }}\n                >\n                  Country\n                </th>\n                <th\n                  style={{\n                    border: \"1px solid #ddd\",\n                    padding: \"8px\",\n                    textAlign: \"left\",\n                  }}\n                >\n                  Billing Rate/Hr\n                </th>\n                <th\n                  style={{\n                    border: \"1px solid #ddd\",\n                    padding: \"8px\",\n                    textAlign: \"left\",\n                  }}\n                >\n                  Cost/Hr\n                </th>\n              </tr>\n            </thead>\n            <tbody style={{ border: \"1px solid #ccc\" }}>\n              {countries.map((country) => (\n                <tr key={country} style={{ borderBottom: \"1px solid #ccc\" }}>\n                  <td\n                    style={{\n                      border: \"1px solid #ddd\",\n                      padding: \"8px\", // Add padding for the country cell\n                      textAlign: \"left\",\n                    }}\n                  >\n                    {country}\n                  </td>\n                  <td\n                    style={{\n                      borderLeft: \"1px solid #ccc\",\n                      borderRight: \"1px solid #ccc\",\n                      padding: \"8px\",\n                    }}\n                  >\n                    <input\n                      type=\"text\"\n                      style={{\n                        border: \"1px solid #ddd\",\n                        padding: \"4px\", // Add padding for the input field\n                        width: \"100%\",\n                      }}\n                      maxLength={15}\n                      onKeyDown={(e) =>\n                        e.keyCode &&\n                        (e.keyCode <= 47 || e.keyCode >= 58) &&\n                        e.keyCode != 8 &&\n                        e.preventDefault()\n                      }\n                      value={billingRates[country] || \"\"}\n                      onChange={(e) =>\n                        handleBillingRateChange(country, e.target.value)\n                      }\n                    />\n                  </td>\n                  <td\n                    style={{\n                      borderLeft: \"1px solid #ccc\",\n                      borderRight: \"1px solid #ccc\",\n                      padding: \"8px\",\n                    }}\n                  >\n                    <input\n                      type=\"text\"\n                      style={{\n                        border: \"1px solid #ddd\",\n                        padding: \"4px\", // Add padding for the input field\n                        width: \"100%\",\n                      }}\n                      maxLength={15}\n                      onKeyDown={(e) =>\n                        e.keyCode &&\n                        (e.keyCode <= 47 || e.keyCode >= 58) &&\n                        e.keyCode != 8 &&\n                        e.preventDefault()\n                      }\n                      value={costs[country] || \"\"}\n                      onChange={(e) =>\n                        handleCostChange(country, e.target.value)\n                      }\n                    />\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n          <div className=\"btn-container center my-2\">\n            <button className=\"btn btn-primary\" title=\"Save\" onClick={saveData}>\n              <TfiSave /> Save\n            </button>\n            <button\n              className=\"btn btn-secondary\"\n              title=\"Cancel\"\n              onClick={() => {\n                setRolePopup(false);\n              }}\n            >\n              <ImCross /> Cancel{\" \"}\n            </button>\n          </div>\n        </CModalBody>\n      </CModal>\n    </div>\n  );\n};\n\nexport default CustomerRoleEditPopup;\n","import { CModal, CModalBody, CModalHeader, CModalTitle } from \"@coreui/react\";\nimport React from \"react\";\nimport { ImCross } from \"react-icons/im\";\nimport { TfiSave } from \"react-icons/tfi\";\n\nconst CustomerRoleDeletePopup = (props) => {\n  const { roleDeletePopup, setRoleDeletePopup, DeleteRole, deleteId } = props;\n  return (\n    <div>\n      <CModal\n        alignment=\"center\"\n        backdrop=\"static\"\n        visible={roleDeletePopup}\n        size=\"sm\"\n        className=\"ui-dialog\"\n        onClose={() => setRoleDeletePopup(false)}\n      >\n        <CModalHeader className=\"\">\n          <CModalTitle>\n            <span className=\"\">Delete Role</span>\n          </CModalTitle>\n        </CModalHeader>\n        <CModalBody>\n          <strong> Are you sure to delete Role ?</strong>\n          <div className=\"btn-container center my-2\">\n            <button\n              className=\"btn btn-primary\"\n              title=\"Delete\"\n              onClick={() => {\n                DeleteRole();\n              }}\n            >\n              <TfiSave /> Delete\n            </button>\n            <button\n              className=\"btn btn-secondary\"\n              title=\"Cancel\"\n              onClick={() => {\n                setRoleDeletePopup(false);\n              }}\n            >\n              <ImCross /> Cancel{\" \"}\n            </button>\n          </div>\n        </CModalBody>\n      </CModal>\n    </div>\n  );\n};\n\nexport default CustomerRoleDeletePopup;\n","import React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { DataTable } from \"primereact/datatable\";\nimport { Column } from \"primereact/column\";\nimport { environment } from \"../../environments/environment\";\nimport { ImCross } from \"react-icons/im\";\nimport { AiFillDelete, AiFillEdit } from \"react-icons/ai\";\nimport CustomerRoleEditPopup from \"./CustomerRoleEditPopup\";\nimport CustomerRoleDeletePopup from \"./CustomerRoleDeletePopup\";\nimport { FaPlus, FaSave } from \"react-icons/fa\";\n\nconst CustomerRolesEdit = (props) => {\n  const {\n    cCountryId,\n    setRolesValidationMsg,\n    setUpdatedRole,\n    setFinalTableMsg,\n    setCustRolePopEditMsg,\n  } = props;\n  const baseUrl = environment.baseUrl;\n  const [currency, setCurrency] = useState([]);\n  const [customerDatarole, setCustomerDatarole] = useState([]);\n  const [buttonDisabled, setButtonDisabled] = useState(true);\n  const [valid, setValid] = useState(false);\n  const loggedUserId = localStorage.getItem(\"resId\");\n  const [rolesDropdown, setRolesDropdown] = useState([]);\n  const [customerEditRoles, setCustomerEditRoles] = useState([]);\n  const [products1, setProducts1] = useState([]);\n  const [saveButton, setSaveButton] = useState(false);\n  const [roles, setRoles] = useState(\"14\");\n  const [countryData, setCountryData] = useState(false);\n  const [rolePopup, setRolePopup] = useState(false);\n  const [roleDeletePopup, setRoleDeletePopup] = useState(false);\n  const [deleteId, setDeleteId] = useState(\"\");\n  const [updatedRowData, setUpdatedRowData] = useState(\"\");\n  const [customerRoleTypeId, setCustomerRoleTypeId] = useState(\"\");\n  const [tableKey, setTableKey] = useState(0);\n  const [addDropdown, setAddDropdown] = useState(false);\n  const [backupData, setBackupData] = useState([]);\n  const [rolesIdsByCustomerIds, setRolesIdsByCustomerIds] = useState([]);\n\n  const DeleteRole = () => {\n    axios({\n      method: \"delete\",\n      url:\n        baseUrl + `/customersms/Customers/deleteEditRoles?roleId=${deleteId}`,\n    }).then((error) => {\n      setRoleDeletePopup(false);\n      getCustomersRoles();\n      getRolesIds();\n      Reset();\n    });\n  };\n\n  const removeFirstRowIfEmpty = (prod) => {\n    Object.keys(prod).forEach((d) => {\n      if ([\"\", null, undefined, \" \"].includes(prod[d])) {\n        setProducts1(products1.slice(1));\n        setValid((prev) => !prev);\n        return;\n      }\n    });\n  };\n\n  const getRolesIds = () => {\n    axios({\n      method: \"get\",\n      url:\n        baseUrl +\n        `/customersms/Customers/roleTypeIdsByCustomerId?customerId=${props.customerId}`,\n    }).then(function (response) {\n      let resp = response.data;\n      setRolesIdsByCustomerIds(resp);\n    });\n  };\n  useEffect(() => {\n    getRolesIds();\n  }, []);\n\n  const getCustomersRoles = () => {\n    if (props.customerId != 0) {\n      axios({\n        method: \"get\",\n        url:\n          baseUrl +\n          `/customersms/Customers/getCustomersroles?cid=${props.customerId}`,\n      }).then(function (response) {\n        let resp = response.data;\n        setProducts1(resp);\n        setTableKey((prevKey) => prevKey + 1);\n\n        let desp = [...new Set(resp.map((d) => d.display_name))];\n\n        let dt = [];\n\n        for (let i = 0; i < desp.length; i++) {\n          let obj = {};\n          obj[\"display_name\"] = desp[i];\n\n          // Add the customer_role_type_id property to the obj object\n          let customerRoleTypeIds = resp\n            .filter((d) => d.display_name === desp[i])\n            .map((d) => d.customer_role_type_id)\n            .join(\",\");\n\n          obj[\"customer_role_type_id\"] = customerRoleTypeIds;\n\n          let countriesData = JSON.parse(JSON.stringify(resp)).filter(\n            (d) => d.display_name === desp[i]\n          );\n\n          let countriesNames = [\n            \"\",\n            \"Canada\",\n            \"Germany\",\n            \"India\",\n            \"Jordan\",\n            \"UAE\",\n            \"UK\",\n            \"US\",\n          ];\n\n          let sortedData = [];\n\n          for (let j = 0; j < countriesNames.length; j++) {\n            let obj = {\n              display_name: \"\",\n              cost: \"\",\n              rate: \"\",\n              country_name: \"\",\n              countryid: \"\",\n              customer_role_type_id: \"\",\n            };\n\n            if (\n              countriesData.some(\n                (d) => d[\"country_name\"] === countriesNames[j]\n              ) === false\n            ) {\n              obj[\"country_name\"] = countriesNames[j];\n              sortedData.push(obj);\n            } else {\n              for (let k = 0; k < countriesData.length; k++) {\n                if (\n                  countriesNames[j].includes(countriesData[k][\"country_name\"])\n                ) {\n                  sortedData.push(countriesData[k]);\n                }\n              }\n            }\n          }\n\n          obj[\"data\"] = sortedData;\n          dt.push(obj);\n        }\n\n        setCustomerDatarole([...dt]);\n        setBackupData([...dt]);\n      });\n    }\n  };\n\n  const handleCurrency = () => {\n    axios({\n      method: \"get\",\n      url: baseUrl + `/ProjectMS/Engagement/getCurrency`,\n    }).then((res) => {\n      let curre = res.data;\n      setCurrency(curre);\n    });\n  };\n\n  const renderRowActions = (rowData) => {\n    return (\n      <>\n        <div>\n          <AiFillEdit\n            color=\"orange\"\n            cursor=\"pointer\"\n            title=\"Edit\"\n            onClick={() => {\n              setRolePopup(true);\n              setCustomerRoleTypeId(\n                rowData.customer_role_type_id.split(\",\")[0]\n              );\n\n              const updatedRowData = rowData?.data?.map((item) => {\n                if (item.country_name) {\n                  const countryData = cCountryId.find(\n                    (data) => data.country_name === item.country_name\n                  );\n                  if (countryData) {\n                    return { ...item, countryid: countryData.id };\n                  }\n                }\n                return item;\n              });\n              setUpdatedRowData(updatedRowData);\n            }}\n          />\n          <AiFillDelete\n            color=\"orange\"\n            cursor=\"pointer\"\n            title=\"Delete Row\"\n            onClick={() => {\n              setRoleDeletePopup(true);\n              setDeleteId(rowData.customer_role_type_id.split(\",\")[0]);\n            }}\n          />\n        </div>\n      </>\n    );\n  };\n\n  const getRolesDropDown = () => {\n    axios({\n      method: \"get\",\n      url: baseUrl + `/customersms/Customers/getRolesDropDown`,\n    }).then((res) => {\n      let curre = res.data;\n      setRolesDropdown(curre);\n    });\n  };\n  useEffect(() => {\n    getCustomersRoles();\n    handleCurrency();\n    getRolesDropDown();\n  }, [props.customerId]);\n\n  const postCustomerEditRoles = () => {\n    setCountryData(false);\n\n    let someDataa = rolesIdsByCustomerIds.some((d) => roles.includes(d));\n    if (someDataa) {\n      setRolesValidationMsg(true);\n      setTimeout(() => {\n        setRolesValidationMsg(false);\n      }, 3000);\n      setCustomerDatarole(backupData);\n      setButtonDisabled(true);\n      setValid(false);\n      setSaveButton(true);\n      return;\n    } else {\n    }\n\n    axios({\n      method: \"post\",\n      url: baseUrl + `/customersms/Customers/saveRoles`,\n      data: {\n        customerId: props.customerId,\n        roleType: roles,\n      },\n    }).then((res) => {\n      getCustomersRoles();\n      getRolesIds();\n      let curre = res.data;\n      setFinalTableMsg(true);\n      setTimeout(() => {\n        setFinalTableMsg(false);\n      }, 3000);\n      setUpdatedRole(\"Primary Project Manager\");\n      setRolesValidationMsg(false);\n      setCustomerEditRoles(curre);\n      setCountryData(true);\n      Reset();\n    });\n  };\n\n  const Reset = () => {\n    setCustomerDatarole(backupData);\n    setButtonDisabled(true);\n    setValid(false);\n    setSaveButton(true);\n  };\n\n  const addHandler1 = () => {\n    setRoles(\"14\");\n    if (!valid) {\n      setValid(true);\n      setButtonDisabled(false);\n    }\n    const newRow = {\n      display_name: \"\",\n      Action: 0,\n    };\n\n    setCustomerDatarole((prevTaskResources) => [...prevTaskResources, newRow]);\n  };\n\n  const representativeBody = (rowData) => {\n    return (\n      <span>\n        <table class=\"table table-bordered table-striped\">\n          <tbody>\n            <tr>\n              {rowData?.data?.map((ele, index) => {\n                return <th className=\"antiquewhite\"> {ele.country_name}</th>;\n              })}\n            </tr>\n\n            <tr>\n              {rowData?.data?.map((ele, index) => {\n                return (\n                  <>\n                    {index === 0 ? (\n                      <td>\n                        <b>Billing</b>\n                        <br />\n                        <b>Rate/Hr</b>\n                      </td>\n                    ) : (\n                      <td>{ele.rate}</td>\n                    )}\n                  </>\n                );\n              })}\n            </tr>\n            <tr>\n              {rowData?.data?.map((ele, index) => {\n                return (\n                  <>\n                    {index === 0 ? (\n                      <td>\n                        <b>Cost/Hr</b>\n                      </td>\n                    ) : (\n                      <td>{ele.cost}</td>\n                    )}\n                  </>\n                );\n              })}\n            </tr>\n          </tbody>\n        </table>\n      </span>\n    );\n  };\n\n  return (\n    <>\n      <div>\n        <div className=\"customCard card graph mt-2 mb-2 darkHeader\">\n          <div className=\"group mb-1 customCard\">\n            <div\n              className=\"col-md-12  collapseHeader px-3\"\n              style={{ backgroundColor: \"#f4f4f4\" }}\n            >\n              <h2 style={{ backgroundColor: \"#f4f4f4\" }}>Roles</h2>\n            </div>\n          </div>\n\n          <DataTable\n            className=\"primeReactDataTable eventsTable  Roles\"  ////customerEngament\n            paginatorTemplate=\"RowsPerPageDropdown FirstPageLink PrevPageLink CurrentPageReport NextPageLink LastPageLink\"\n            currentPageReportTemplate=\"{first} to {last} of {totalRecords}\"\n            rowsPerPageOptions={[10, 25, 50]}\n            value={customerDatarole}\n            paginator\n            editMode=\"row\"\n            rows={25}\n            showGridlines\n            highlightOnHover\n            pagination\n            paginationPerPage={5}\n            paginationRowsPerPageOptions={[5, 15, 25, 50]}\n            paginationComponentOptions={{\n              rowsPerPageText: \"Records per page:\",\n              rangeSeparatorText: \"out of\",\n            }}\n            key={tableKey}\n          >\n            <Column\n              key={\"display_name\"}\n              field=\"display_name\"\n              header=\"Role\"\n              alignHeader={\"center\"}\n              body={(options) =>\n                addDropdown && options.display_name == \"\" ? (\n                  <select\n                    onChange={(e) => {\n                      let a;\n                      setRoles(e.target.value),\n                        rolesDropdown.map((item) => {\n                          if (item.id == e.target.value) {\n                            setUpdatedRole(item.display_name);\n                            a = item.display_name;\n                          }\n                        });\n                    }}\n                  >\n                    {rolesDropdown.map((item, index) => (\n                      <option key={item.id} value={item.id}>\n                        {item.display_name}\n                      </option>\n                    ))}\n                  </select>\n                ) : (\n                  <>{options.display_name}</>\n                )\n              }\n              editor={(options) => initialRowHandler(options)}\n              style={{ width: \"40%\" }}\n            ></Column>\n            <Column\n              field=\"Country\"\n              header=\"Country\"\n              body={representativeBody}\n              alignHeader={\"center\"}\n            >\n              country\n            </Column>\n            <Column\n              field={\"\"}\n              key={\"Action\"}\n              header=\"Action\"\n              body={(rowData) => {\n                if (addDropdown && rowData.display_name === \"\") {\n                  return \"\"; // Empty value when addDropdown is true and display_name is empty\n                } else {\n                  return renderRowActions(rowData); // Call the renderRowActions function\n                }\n              }}\n              headerStyle={{ width: \"100px\", backgroundColor: \"#eeecec\" }}\n              bodyStyle={{ textAlign: \"center\" }}\n            />\n          </DataTable>\n        </div>\n      </div>\n      <div className=\"form-group col-md-2 btn-container-events center my-3\">\n        <button\n          className=\"btn btn-primary\"\n          disabled={valid}\n          title={\"Add new row\"}\n          onClick={() => {\n            setAddDropdown(true);\n            addHandler1();\n          }}\n        >\n          <FaPlus /> Add\n        </button>\n        <button\n          className=\"btn btn-primary\"\n          disabled={buttonDisabled}\n          title={\"Save row\"}\n          onClick={() => {\n            setAddDropdown(false);\n            postCustomerEditRoles();\n          }}\n        >\n          <FaSave /> Save\n        </button>\n        <button\n          className=\"btn btn-secondary\"\n          disabled={buttonDisabled}\n          title={\"Cancel row editing\"}\n          onClick={() => {\n            setAddDropdown(false);\n            Reset();\n          }}\n        >\n          <ImCross fontSize={\"11px\"} /> Cancel\n        </button>\n      </div>\n      {rolePopup ? (\n        <CustomerRoleEditPopup\n          rolePopup={rolePopup}\n          setRolePopup={setRolePopup}\n          customerRoleTypeId={customerRoleTypeId}\n          updatedRowData={updatedRowData}\n          getCustomersRoles={getCustomersRoles}\n          setCustRolePopEditMsg={setCustRolePopEditMsg}\n        />\n      ) : (\n        \"\"\n      )}\n\n      {roleDeletePopup ? (\n        <CustomerRoleDeletePopup\n          roleDeletePopup={roleDeletePopup}\n          setRoleDeletePopup={setRoleDeletePopup}\n          DeleteRole={DeleteRole}\n          deleteId={deleteId}\n        />\n      ) : (\n        \"\"\n      )}\n    </>\n  );\n};\n\nexport default CustomerRolesEdit;\n","import React, { useEffect, useLayoutEffect, useRef, useState } from \"react\";\nimport { DataTable } from \"primereact/datatable\";\nimport { Column } from \"primereact/column\";\nimport axios from \"axios\";\nimport { environment } from \"../../environments/environment\";\nimport { AiFillWarning } from \"react-icons/ai\";\nimport { ImCross } from \"react-icons/im\";\nimport { ColumnGroup } from \"primereact/columngroup\";\nimport { Row } from \"primereact/row\";\nimport { FaPlus, FaSave } from \"react-icons/fa\";\n\nfunction CustomersDivisionEdit(props) {\n  const { customerId, setAddMessage } = props;\n  const [products1, setProducts1] = useState([]);\n  const [rowId, setRowId] = useState([]);\n  const [validateproject, setValidateproject] = useState(false);\n  const [buttonDisabled, setButtonDisabled] = useState(true);\n  const [valid, setValid] = useState(false);\n  const baseUrl = environment.baseUrl;\n  const abortController = useRef(null);\n  const componentRef = useRef(null);\n  const loggedUserId = localStorage.getItem(\"resId\");\n  const [countryId, setcountryId] = useState([]);\n  const [stateId, setStateId] = useState([]);\n  const [cityId, setCityId] = useState([]);\n  const [finalstates, setFinalStates] = useState([]);\n  const [finalcities, setFinalCities] = useState([]);\n\n  const initialValue = {\n    loggedId: loggedUserId,\n    name: \"\",\n    address: \"\",\n    country_id: \"\",\n    state_id: \"\",\n    city_id: \"\",\n    zip_code: \"\",\n    contact: \"\",\n    customerId: customerId,\n  };\n  const [formData, setFormData] = useState(initialValue);\n\n  let sideArrow = document.getElementsByClassName(\n    \"p-paginator-next p-paginator-element p-link\"\n  );\n  let sideDoubleArrow = document.getElementsByClassName(\n    \"p-paginator-last p-paginator-element p-link\"\n  );\n\n  useEffect(() => {}, [formData]);\n\n  useLayoutEffect(() => {\n    let tempStates = stateId;\n    let fStates = tempStates.filter((d) => d.countryId == countryId);\n    setFinalStates(fStates);\n\n    let tempCities = cityId;\n    let fCountries = tempCities.filter((d) => d.stateId == stateId);\n    setFinalCities(fCountries);\n  }, [stateId, cityId]);\n\n  const getcountryId = () => {\n    axios({\n      url: baseUrl + `/CostMS/cost/getCountries`,\n    }).then((resp) => {\n      const filteredData = resp.data.filter(\n        (item) => item.description !== \"NM\"\n      );\n      setcountryId(filteredData);\n    });\n  };\n\n  const getStates = () => {\n    axios({\n      url: baseUrl + `/VendorMS/vendor/states`,\n    }).then((resp) => {\n      setStateId(resp.data);\n    });\n  };\n\n  const getCities = () => {\n    axios({\n      url: baseUrl + `/VendorMS/vendor/cities`,\n    }).then((resp) => {\n      setCityId(resp.data);\n    });\n  };\n\n  useEffect(() => {\n    getcountryId();\n    getStates();\n    getCities();\n  }, []);\n\n  const countryHandler = (e) => {\n    let statesData = JSON.parse(JSON.stringify(stateId));\n\n    let fData = statesData\n      .filter((d) => d.countryId == e.target.value)\n      .sort((a, b) => {\n        b.state - a.state;\n      });\n\n    //////////--Alphabetical Sorting--//////////\n    const sortedstate = fData.sort(function (a, b) {\n      var nameA = a.state.toUpperCase();\n      var nameB = b.state.toUpperCase();\n      if (nameA < nameB) {\n        return -1; //nameA comes first\n      }\n      if (nameA > nameB) {\n        return 1; // nameB comes first\n      }\n      return 0; // names must be equal\n    });\n    //////////----------------------//////////\n\n    setFinalStates(sortedstate);\n    const { id, name, value } = e.target;\n  };\n\n  const stateHandler = (e) => {\n    let citiesData = JSON.parse(JSON.stringify(cityId));\n    let fData = citiesData.filter((d) => d.stateId == e.target.value);\n\n    //////////--Alphabetical Sorting--//////////\n    const sortedcities = fData.sort(function (a, b) {\n      var nameA = a.city.toUpperCase();\n      var nameB = b.city.toUpperCase();\n      if (nameA < nameB) {\n        return -1; //nameA comes first\n      }\n      if (nameA > nameB) {\n        return 1; // nameB comes first\n      }\n      return 0; // names must be equal\n    });\n\n    setFinalCities(sortedcities);\n  };\n\n  const onRowEditComplete = (e) => {\n    let _products1 = [...products1];\n    let { newData, index } = e;\n    _products1[index] = newData;\n    setProducts1(_products1);\n    postData(e.newData);\n  };\n\n  const removeFirstRowIfEmpty = (prod) => {\n    Object.keys(prod).forEach((d) => {\n      if ([\"\", null, undefined, \" \"].includes(prod[d])) {\n        setProducts1(products1.slice(1));\n        setValid((prev) => !prev);\n        return;\n      }\n    });\n  };\n\n  useEffect(() => {\n    let prod = products1[0];\n    sideArrow[0]?.addEventListener(\"click\", function () {\n      removeFirstRowIfEmpty(prod);\n    });\n\n    sideDoubleArrow[0]?.addEventListener(\"click\", function () {\n      removeFirstRowIfEmpty(prod);\n    });\n\n    if (products1[0]?.name == \"\") {\n      const icon = document.getElementsByClassName(\n        \"p-row-editor-init p-link\"\n      )[0];\n      icon.setAttribute(\"title\", \"Edit selected row\");\n      icon.click();\n      setTimeout(() => {\n        const saveIcon = document.getElementsByClassName(\n          \"p-row-editor-save p-link\"\n        )[0];\n        saveIcon.setAttribute(\"title\", \"Save row\");\n        const cancelIcon = document.getElementsByClassName(\n          \"p-row-editor-cancel p-link\"\n        )[0];\n        cancelIcon.setAttribute(\"title\", \"Cancel row editing\");\n        cancelIcon?.addEventListener(\n          \"click\",\n          function (e) {\n            if (products1[0]?.name == \"\") {\n              setProducts1(products1.slice(1, products1.length));\n              setButtonDisabled(true);\n              setValidateproject(false);\n              setValid(false);\n              componentRef.current.forceUpdate();\n            }\n          },\n          true\n        );\n      }, 200);\n    }\n  }, [products1]);\n\n  const Save = () => {\n    document\n      .getElementsByClassName(\"p-row-editor-save-icon pi pi-fw pi-check\")[0]\n      ?.click();\n  };\n\n  const Reset = () => {\n    document.getElementsByClassName(\"p-row-editor-cancel p-link\")[0]?.click();\n    setValidateproject(false);\n  };\n\n  const textEditorEventName = (products1) => {\n    setRowId(products1.rowData.id);\n    return (\n      <>\n        <input\n          className={`error ${\n            validateproject && !products1.rowData.name ? \"error-block\" : \"\"\n          }`}\n          id=\"name\"\n          type=\"text\"\n          value={products1.rowData.name}\n          onChange={(e) => {\n            products1.editorCallback(e.target.value);\n          }}\n        />\n      </>\n    );\n  };\n\n  const statusbodyEvents = (rowData) => {\n    return (\n      <>\n        <input\n          className=\"ellipsis\"\n          id=\"name\"\n          title={rowData.name}\n          value={rowData.name}\n          type=\"text\"\n          autoComplete=\"off\"\n          required\n          disabled\n        />\n      </>\n    );\n  };\n\n  const textEditorAddress = (products1) => {\n    return (\n      <>\n        <input\n          className={`error ${\n            validateproject && !products1.rowData.address ? \"error-block\" : \"\"\n          }`}\n          id=\"address\"\n          type=\"text\"\n          value={products1.rowData.address}\n          onChange={(e) => {\n            products1.editorCallback(e.target.value);\n          }}\n        />\n      </>\n    );\n  };\n\n  const statusbodyAddress = (rowData) => {\n    return (\n      <>\n        <input\n          className=\"ellipsis\"\n          id=\"address\"\n          title={rowData.address}\n          value={rowData.address}\n          type=\"text\"\n          autoComplete=\"off\"\n          required\n          disabled\n        />\n      </>\n    );\n  };\n\n  const textEditorCountry = (products1) => {\n    return (\n      <>\n        <select\n          className={`error ${\n            validateproject && !products1.country_name ? \"error-block\" : \"\"\n          }`}\n          id=\"country_id\"\n          name=\"countryId\"\n          onChange={(e) => {\n            countryHandler(e);\n            products1.editorCallback(e.target.value);\n            countryId.map((a) => {\n              if (a.id == e.target.value) {\n                products1[\"rowData\"][\"countryId\"] = a.country_name;\n                products1[\"rowData\"][\"country_id\"] = e.target.value;\n              }\n            });\n          }}\n        >\n          <option value=\"\">{\"<<Please Select>>\"}</option>\n          {countryId?.map((Item, index) => (\n            <option\n              key={index}\n              value={Item.id}\n              selected={Item.id == products1.rowData.country_id ? true : false}\n            >\n              {Item.country_name}\n            </option>\n          ))}\n        </select>\n      </>\n    );\n  };\n\n  const statusbodyCountry = (rowData) => {\n    return (\n      <>\n        <input\n          className=\"ellipsis\"\n          id=\"country_name\"\n          title={rowData.country_name}\n          value={rowData.country_name}\n          type=\"text\"\n          autoComplete=\"off\"\n          required\n          disabled\n        />\n      </>\n    );\n  };\n\n  const textEditorState = (products1, rowData) => {\n    return (\n      <>\n        <select\n          className={`error ${\n            validateproject && !products1.rowData.state ? \"error-block\" : \"\"\n          }`}\n          id=\"state_id\"\n          name=\"stateId\"\n          onChange={(e) => {\n            stateHandler(e);\n            products1.editorCallback(e.target.value);\n\n            stateId.map((a) => {\n              if (a.id == e.target.value) {\n                products1[\"rowData\"][\"stateId\"] = a.state;\n                products1[\"rowData\"][\"state_id\"] = e.target.value;\n              }\n            });\n          }}\n        >\n          <option value=\"\">{\"<<Please Select>>\"}</option>\n          {finalstates?.map((Item, index) => (\n            <option key={index} value={Item.id} selected={products1?.value}>\n              {Item.state}\n            </option>\n          ))}\n        </select>\n      </>\n    );\n  };\n\n  const statusbodyState = (rowData) => {\n    return (\n      <>\n        <input\n          className=\"ellipsis\"\n          id=\"state\"\n          title={rowData.state}\n          value={rowData.state}\n          type=\"text\"\n          autoComplete=\"off\"\n          required\n          disabled\n        />\n      </>\n    );\n  };\n\n  const textEditorCity = (products1) => {\n    return (\n      <>\n        <select\n          className={`error ${\n            validateproject && !products1.rowData.city ? \"error-block\" : \"\"\n          }`}\n          id=\"city_id\"\n          name=\"cityId\"\n          onChange={(e) => {\n            products1.editorCallback(e.target.value);\n\n            finalcities.map((a) => {\n              if (a.id == e.target.value) {\n                products1[\"rowData\"][\"cityId\"] = a.city;\n                products1[\"rowData\"][\"city_id\"] = e.target.value;\n              }\n            });\n          }}\n        >\n          <option value=\"\">{\"<<Please Select>>\"}</option>\n          {finalcities?.map((Item, index) => (\n            <option\n              key={index}\n              value={Item.id}\n              selected={Item.id == products1.rowData.city_id ? true : false}\n            >\n              {Item.city}\n            </option>\n          ))}\n        </select>\n      </>\n    );\n  };\n\n  const statusbodyCity = (rowData) => {\n    return (\n      <>\n        <input\n          className=\"ellipsis\"\n          id=\"city\"\n          title={rowData.city}\n          value={rowData.city}\n          type=\"text\"\n          autoComplete=\"off\"\n          required\n          disabled\n        />\n      </>\n    );\n  };\n  const textEditorZipCode = (products1) => {\n    return (\n      <>\n        <input\n          className={`error ${\n            validateproject && !products1.rowData.city ? \"error-block\" : \"\"\n          }`}\n          id=\"city\"\n          type=\"text\"\n          value={products1.rowData.zipCode}\n          onChange={(e) => {\n            products1.editorCallback(e.target.value);\n          }}\n        />\n      </>\n    );\n  };\n\n  const statusbodyZipCode = (rowData) => {\n    return (\n      <>\n        <input\n          className=\"ellipsis\"\n          id=\"zip_code\"\n          title={rowData.zip_code}\n          value={rowData.zip_code}\n          type=\"text\"\n          autoComplete=\"off\"\n          required\n          disabled\n        />\n      </>\n    );\n  };\n\n  const textEditorContact = (products1) => {\n    return (\n      <>\n        <input\n          className={`error ${\n            validateproject && !products1.rowData.contact ? \"error-block\" : \"\"\n          }`}\n          id=\"contact\"\n          type=\"text\"\n          value={products1.rowData.contact}\n          onChange={(e) => {\n            products1.editorCallback(e.target.value);\n          }}\n          maxLength={15}\n          onKeyDown={(e) =>\n            e.keyCode &&\n            (e.keyCode <= 47 || e.keyCode >= 58) &&\n            e.keyCode != 8 &&\n            e.preventDefault()\n          }\n        />\n      </>\n    );\n  };\n\n  const statusbodyContact = (rowData) => {\n    return (\n      <>\n        <input\n          className=\"ellipsis\"\n          id=\"contact\"\n          title={rowData.contact}\n          value={rowData.contact}\n          type=\"text\"\n          autoComplete=\"off\"\n          required\n          disabled\n        />\n      </>\n    );\n  };\n  const getData = () => {\n    abortController.current = new AbortController();\n    axios({\n      url:\n        baseUrl +\n        `/customersms/Customers/getCustomerEditDivision?cid=${customerId}`,\n      signal: abortController.current.signal,\n    }).then((resp) => {\n      let GetData = resp.data;\n      setProducts1(() => GetData);\n      setTimeout(() => {}, 1000);\n    });\n  };\n\n  const postData = (rowData) => {\n    let data;\n    if (\n      rowData.name == \"\" ||\n      rowData.address == \"\" ||\n      rowData.countryId == \"\" ||\n      rowData.stateId == \"\" ||\n      rowData.cityId == \"\" ||\n      rowData.zipCode == \"\" ||\n      rowData.contact == \"\"\n    ) {\n      setValidateproject(true);\n    } else {\n      if (rowData.id == \"\" || null) {\n        data = {\n          id: rowData.id,\n          loggedId: loggedUserId,\n          Name: rowData.name,\n          address: rowData.address,\n          countryId: rowData.country_id,\n          stateId: rowData.state_id,\n          cityId: rowData.city_id,\n          zipCode: rowData.zip_code,\n          contact: rowData.contact,\n          customerId: customerId,\n        };\n      } else {\n        data = {\n          id: rowData.id,\n          loggedId: loggedUserId,\n          Name: rowData.name,\n          address: rowData.address,\n          countryId: rowData.country_id,\n          stateId: rowData.state_id,\n          cityId: rowData.city_id,\n          zipCode: rowData.zip_code,\n          contact: rowData.contact,\n          customerId: customerId,\n        };\n      }\n\n      axios({\n        method: \"post\",\n        url: baseUrl + `/customersms/Customers/postCustomersEditdivision`,\n        data: data,\n      }).then((response) => {\n        getData();\n        setValidateproject(false);\n        setAddMessage(true);\n        setTimeout(() => {\n          setAddMessage(false);\n        }, 3000);\n      });\n      setButtonDisabled(true);\n      setValid(false);\n    }\n  };\n\n  const addHandler = () => {\n    let daa1 = document.getElementsByClassName(\n      \"p-paginator-first p-paginator-element p-link\"\n    )[0];\n\n    daa1.click();\n\n    if (!valid) {\n      setValid(true);\n      setButtonDisabled(false);\n    }\n\n    const data = {\n      loggedId: loggedUserId,\n      name: \"\",\n      address: \"\",\n      country_name: \"\",\n      state: \"\",\n      city: \"\",\n      zip_code: \"\",\n      contact: \"\",\n      customerId: customerId,\n    };\n    let dt = [];\n    dt.push(data);\n    setProducts1([...dt, ...products1]);\n  };\n\n  useEffect(() => {\n    getData();\n  }, []);\n  const headerGroup = (\n    <ColumnGroup>\n      <Row>\n        <Column header=\"Bill to Address\" colSpan={8} />\n      </Row>\n      <Row>\n        <Column field=\"name\" header=\"Name\" style={{ width: \"180px\" }}></Column>\n        <Column\n          field=\"address\"\n          header=\"Address\"\n          style={{ width: \"180px\" }}\n        ></Column>\n        <Column\n          field=\"country_name\"\n          header=\"Country\"\n          style={{ width: \"180px\" }}\n        ></Column>\n        <Column\n          field=\"state\"\n          header=\"State/Province\"\n          style={{ width: \"180px\" }}\n        ></Column>\n        <Column field=\"city\" header=\"City\" style={{ width: \"180px\" }}></Column>\n        <Column\n          field=\"zip_code\"\n          header=\"ZIP/Postal Code\"\n          style={{ width: \"180px\" }}\n        ></Column>\n        <Column\n          field=\"contact\"\n          header=\"Contact Number\"\n          style={{ width: \"180px\" }}\n        ></Column>\n        <Column field=\"Actions\" header=\"Actions\" style={{ width: \"100px\" }} />\n      </Row>\n    </ColumnGroup>\n  );\n\n  return (\n    <>\n      {validateproject ? (\n        <div className=\"statusMsg error\">\n          <span>\n            <AiFillWarning />\n            &nbsp;\n            {\"Please provide valid values for highlighted values\"}\n          </span>\n        </div>\n      ) : (\n        \"\"\n      )}\n\n      <div>\n        <div className=\"customCard card graph mt-2 mb-2\">\n          <div className=\"group mb-0 customCard\">\n            <div\n              className=\"col-md-12  collapseHeader px-3\"\n              style={{ backgroundColor: \"#f4f4f4\" }}\n            >\n              <h2 style={{ backgroundColor: \"#f4f4f4\" }}>Divisions</h2>\n            </div>\n          </div>\n          <div className=\" p-fluid darkHeader mb-2\">\n            <DataTable\n              className=\"primeReactDataTable projDependenciesTable\"\n              value={products1}\n              editMode=\"row\"\n              rows={25}\n              showGridlines\n              paginator\n              paginationPerPage={5}\n              paginationRowsPerPageOptions={[5, 15, 25, 50]}\n              rowHover\n              onRowEditComplete={onRowEditComplete}\n              tableStyle={{ minWidth: \"auto\", width: \"auto\" }}\n              filterDisplay=\"row\"\n              currentPageReportTemplate=\"View {first} - {last} of {totalRecords} \"\n              paginatorTemplate=\"RowsPerPageDropdown FirstPageLink PrevPageLink CurrentPageReport NextPageLink LastPageLink\"\n              paginationComponentOptions={{\n                rowsPerPageText: \"Records per page:\",\n                rangeSeparatorText: \"out of\",\n              }}\n              emptyMessage=\"No Data Found\"\n              rowsPerPageOptions={[5, 10, 15, 20, 25, 30]}\n              headerColumnGroup={headerGroup}\n            >\n              <Column\n                field=\"name\"\n                header={<span>Name</span>}\n                body={statusbodyEvents}\n                editor={(options) => textEditorEventName(options)}\n              ></Column>\n              <Column\n                field=\"address\"\n                header={<span>Address</span>}\n                body={statusbodyAddress}\n                editor={(options) => textEditorAddress(options)}\n              ></Column>\n              <Column\n                field=\"country_name\"\n                header={<span>Country</span>}\n                body={statusbodyCountry}\n                editor={(options) => textEditorCountry(options)}\n              ></Column>\n              <Column\n                field=\"state\"\n                header={<span>State/Province</span>}\n                body={statusbodyState}\n                editor={(options) => textEditorState(options)}\n              ></Column>\n              <Column\n                field=\"city\"\n                header={<span>City</span>}\n                body={statusbodyCity}\n                editor={(options) => textEditorCity(options)}\n              ></Column>\n              <Column\n                field=\"zip_code\"\n                header={<span>ZIP/Postal Code</span>}\n                body={statusbodyZipCode}\n                editor={(options) => textEditorZipCode(options)}\n              ></Column>\n              <Column\n                field=\"contact\"\n                header={<span>Contact Number</span>}\n                body={statusbodyContact}\n                editor={(options) => textEditorContact(options)}\n              ></Column>\n              <Column\n                field=\"Actions\"\n                header=\"Actions\"\n                rowEditor\n                bodyStyle={{ textAlign: \"center\" }}\n              />\n            </DataTable>\n          </div>\n        </div>\n      </div>\n      <div className=\"form-group col-md-2 btn-container-events center my-3\">\n        <button\n          className=\"btn btn-primary\"\n          disabled={valid}\n          title={\"Add new row\"}\n          onClick={addHandler}\n        >\n          <FaPlus /> Add\n        </button>\n        <button\n          className=\"btn btn-primary\"\n          disabled={buttonDisabled}\n          title={\"Save row\"}\n          onClick={() => {\n            Save();\n          }}\n        >\n          <FaSave /> Save\n        </button>\n        <button\n          className=\"btn btn-secondary\"\n          disabled={buttonDisabled}\n          title={\"Cancel row editing\"}\n          onClick={() => {\n            Reset();\n          }}\n        >\n          <ImCross fontSize={\"11px\"} /> Cancel\n        </button>\n      </div>\n    </>\n  );\n}\nexport default CustomersDivisionEdit;\n","import React, { useEffect, useRef, useState } from \"react\";\nimport { DataTable } from \"primereact/datatable\";\nimport { Column } from \"primereact/column\";\nimport axios from \"axios\";\nimport { environment } from \"../../environments/environment\";\nimport { AiFillEdit, AiFillWarning } from \"react-icons/ai\";\nimport { MdOutlineAdd } from \"react-icons/md\";\nimport { TfiSave } from \"react-icons/tfi\";\nimport { ImCross } from \"react-icons/im\";\nimport { ReactSearchAutocomplete } from \"react-search-autocomplete\";\nimport { options } from \"preact\";\n\nfunction CustomersInternalStakeholdersEdit(props) {\n  const { customerId, setAddIntStakeMessage } = props;\n  const [products, setProducts] = useState([]);\n\n  const [validateproject, setValidateproject] = useState(false);\n  const [buttonDisabled, setButtonDisabled] = useState(true);\n  const [valid, setValid] = useState(false);\n  const baseUrl = environment.baseUrl;\n  const abortController = useRef(null);\n  const loggedUserId = localStorage.getItem(\"resId\");\n  const [resource, setResource] = useState([]);\n  const [resourceId, setResourcseId] = useState(\"\");\n  const [resourceId1, setResourceId1] = useState(\"\");\n  const [type, setType] = useState([]);\n  const [internStakeDefaultValues, setInternStakeDefaultValues] = useState([]);\n\n  const [backupData, setBackupData] = useState([]);\n  const [typeId, setTypeId] = useState([]);\n  const [enableDropDown, setEnableDropDown] = useState(false);\n  const [resourceEditId, setResourceEditId] = useState([]);\n  const [editor, setEditor] = useState(false);\n  const [lkpName, setLkpName] = useState([]);\n  const [editAutoId, setEditAutoId] = useState([]);\n  const [dropEditId, setDropEditId] = useState([]);\n  const [rowId, setRowId] = useState([]);\n  // console.log(internStakeDefaultValues[0]?.email_official);\n  const [isModified, setIsModified] = useState(false);\n  // console.log(isModified);\n\n  useEffect(() => {\n    setDetails((prev) => ({\n      ...prev,\n      id: rowId,\n      resourceId: editAutoId,\n      typeId: dropEditId,\n      loggedId: loggedUserId,\n      customerId: customerId,\n    }));\n  }, [editAutoId, dropEditId]);\n\n  const [details, setDetails] = useState({\n    id: rowId,\n    resourceId: editAutoId,\n    typeId: dropEditId,\n    loggedId: loggedUserId,\n    customerId: customerId,\n  });\n  // console.log(details.resourceId);\n\n  const resourceFnc = async () => {\n    await axios({\n      method: \"get\",\n      url: baseUrl + `/ProjectMS/risks/getAssignedData`,\n    }).then((res) => {\n      let manger = res.data;\n      setResource(manger);\n    });\n  };\n\n  const getInternStakeDefaultValues = () => {\n    axios({\n      method: \"get\",\n      url:\n        baseUrl +\n        `/customersms/Customers/getInternStakeDefaultValues?cid=${resourceId1}`,\n    }).then((res) => {\n      let manger = res.data;\n      setInternStakeDefaultValues(manger);\n    });\n  };\n  useEffect(() => {\n    resourceFnc();\n    getInternStakeDefaultValues();\n  }, [resourceId1]);\n\n  const getType = () => {\n    axios\n      .get(\n        baseUrl + `/customersms/Customers/getInternalStakeholderTypeDropDown`\n      )\n\n      .then((Response) => {\n        let type = [];\n        let data = Response.data;\n        data.length > 0 &&\n          data.forEach((e) => {\n            let TypeObj = {\n              label: e.lkup_name,\n              value: e.id,\n            };\n            type.push(TypeObj);\n          });\n        setType(data);\n      });\n  };\n\n  useEffect(() => {\n    getType();\n  }, []);\n\n  const Reset = () => {\n    setProducts(backupData);\n    setValidateproject(false);\n    setButtonDisabled(true);\n    setValid(false);\n    setInternStakeDefaultValues(\"\");\n    setTypeId(\"\");\n    setResourcseId(\"\");\n    setEditor(false);\n    setIsModified(false);\n  };\n\n  const getData1 = () => {\n    abortController.current = new AbortController();\n    axios({\n      url:\n        baseUrl +\n        `/customersms/Customers/getCustomerEditInternalStakeholders?cid=${customerId}`,\n      signal: abortController.current.signal,\n    }).then((resp) => {\n      let GetData = resp.data;\n      const dataWithSNo = GetData.map((item) => ({\n        ui: \"1\",\n        ...item,\n      }));\n\n      setProducts([...dataWithSNo]);\n      setBackupData([...dataWithSNo]);\n\n      setTimeout(() => {}, 1000);\n    });\n  };\n\n  const handleAddClick = (options) => {\n    let data;\n    if (rowId == \"\") {\n      data = {\n        // id: rowData.id,\n        loggedId: loggedUserId,\n        customerId: customerId,\n        resourceId: resourceId,\n        typeId: typeId,\n      };\n    } else {\n      data = details;\n    }\n    if (\n      resourceId == undefined\n      // resourceId == [] ||\n      // typeId == \"\" ||\n      // resourceId == \"\" ||\n      // typeId == []\n    ) {\n      setValidateproject(true);\n    } else {\n      axios({\n        method: \"post\",\n        url:\n          baseUrl + `/customersms/Customers/postCustomersInternalStakeholders`,\n        // data: {\n        //   // id: rowData.id,\n        //   loggedId: loggedUserId,\n        //   customerId: customerId,\n        //   resourceId: resourceId,\n        //   typeId: typeId,\n        // },\n        data: data,\n      }).then((response) => {\n        getData1();\n        setValidateproject(false);\n        setAddIntStakeMessage(true);\n        setTimeout(() => {\n          setAddIntStakeMessage(false);\n        }, 3000);\n      });\n      setButtonDisabled(true);\n      setValid(false);\n      setInternStakeDefaultValues(\"\");\n      // setTypeId(\"\");\n      // setResourcseId(\"\");\n    }\n  };\n\n  const addHandler1 = () => {\n    if (!valid) {\n      setValid(true);\n      setButtonDisabled(false);\n    }\n    const newRow = {\n      Name: \"\",\n      depatName: \"\",\n      lkup_name: \"\",\n      Address: \"\",\n      Phone: \"\",\n      email: \"\",\n      Action: 0,\n      ui: \"new\",\n    };\n\n    setProducts((prevTaskResources) => [newRow, ...prevTaskResources]);\n  };\n\n  useEffect(() => {\n    getData1();\n  }, []);\n\n  const renderRowActions = (options) => {\n    return (\n      <>\n        <div>\n          <AiFillEdit\n            color=\"orange\"\n            cursor=\"pointer\"\n            title=\"Edit\"\n            onClick={() => {\n              // console.log(options.id);\n              setRowId(options.id);\n              setEnableDropDown(true);\n              setResourceEditId(options.resource_id);\n              setEditor(true);\n              setLkpName(options.type_id);\n              setValid(true);\n              setButtonDisabled(false);\n            }}\n          />\n        </div>\n      </>\n    );\n  };\n  const handleChange = (e) => {\n    const { id, value } = e.target;\n    setDetails((prev) => {\n      return { ...prev, [id]: value };\n    });\n  };\n\n  return (\n    <>\n      {validateproject ? (\n        <div className=\"statusMsg error\">\n          <span>\n            <AiFillWarning />\n            &nbsp;\n            {\"Please provide valid values for highlighted values\"}\n          </span>\n        </div>\n      ) : (\n        \"\"\n      )}\n\n      <div>\n        <div className=\"customCard card graph mt-2 mb-2\">\n          <div className=\"group mb-0 customCard\">\n            <div\n              className=\"col-md-12  collapseHeader px-3\"\n              style={{ backgroundColor: \"#f4f4f4\" }}\n            >\n              <h2 style={{ backgroundColor: \"#f4f4f4\" }}>\n                Internal Stakeholders\n              </h2>\n            </div>\n          </div>\n          {/* <div className=\" p-fluid  mb-2\"> */}\n          <DataTable\n            className=\"primeReactDataTable eventsTable customerEngament Roles\"\n            value={products}\n            editMode=\"row\"\n            rows={25}\n            showGridlines\n            paginator\n            rowHover\n            highlightOnHover\n            pagination\n            paginationPerPage={5}\n            filterDisplay=\"row\"\n            currentPageReportTemplate=\"{first} to {last} of {totalRecords}\"\n            paginatorTemplate=\"RowsPerPageDropdown FirstPageLink PrevPageLink CurrentPageReport NextPageLink LastPageLink\"\n            rowsPerPageOptions={[10, 25, 50]}\n            paginationComponentOptions={{\n              rowsPerPageText: \"Records per page:\",\n              rangeSeparatorText: \"out of\",\n            }}\n            paginationRowsPerPageOptions={[5, 15, 25, 50]}\n          >\n            <Column\n              key={\"Name\"}\n              field=\"Name\"\n              header=\"Name\"\n              alignHeader={\"center\"}\n              body={(options) => {\n                if (\n                  enableDropDown &&\n                  options.resource_id === resourceEditId &&\n                  editor\n                ) {\n                  setEditAutoId(options.resource_id);\n\n                  return (\n                    <div className=\"autoComplete-container react  cancel  reactsearchautocomplete\">\n                      <ReactSearchAutocomplete\n                        items={resource}\n                        id=\"resourceId\"\n                        name=\"resourceId\"\n                        inputSearchString={\n                          options.Name == null ? \"\" : options.Name\n                        }\n                        onSelect={(e) => {\n                          // console.log(e.id);\n                          setResourceId1(e.id);\n                          setIsModified(true);\n\n                          setDetails((prev) => ({\n                            ...prev,\n                            resourceId: e.id,\n                          }));\n                        }}\n                        showIcon={false}\n                      />\n                    </div>\n                  );\n                } else if (options.Name === \"\") {\n                  return (\n                    <div className=\"autoComplete-container inTable\">\n                      <ReactSearchAutocomplete\n                        items={resource}\n                        id=\"resource_id\"\n                        name=\"resourceId\"\n                        inputSearchString={\n                          products.rowData?.Name == null\n                            ? \"\"\n                            : products?.rowData?.Name\n                        }\n                        onSelect={(selectedItem) => {\n                          setResourcseId(selectedItem.id);\n                          setResourceId1(selectedItem.id);\n                        }}\n                        showIcon={false}\n                      />\n                    </div>\n                  );\n                } else {\n                  return <>{options.Name}</>;\n                }\n              }}\n            />\n\n            <Column\n              key={\"depatName\"}\n              field=\"depatName\"\n              header=\"BU\"\n              alignHeader={\"center\"}\n              // body={(options) =>\n              //   options.depatName == \"\" ? (\n              //     <input\n              //       type=\"text\"\n              //       value={internStakeDefaultValues[0]?.departmentName}\n              //       readOnly\n              //       onFocus={(event) => event.target.blur()}\n              //     />\n              //   ) : (\n              //     <>{options.depatName}</>\n              //   )\n              // }\n              body={(options) => {\n                if (\n                  enableDropDown &&\n                  options.resource_id === resourceEditId &&\n                  editor\n                ) {\n                  // console.log(options.depatName);\n                  return (\n                    <input\n                      type=\"text\"\n                      style={{ pointerEvents: \"none\", cursor: \"not-allowed\" }}\n                      disabled\n                      value={\n                        isModified == true\n                          ? internStakeDefaultValues[0]?.departmentName\n                          : options?.depatName\n                      }\n                      readOnly\n                      onFocus={(event) => event.target.blur()}\n                    />\n                  );\n                } else if (options.email === \"\") {\n                  return (\n                    <input\n                      type=\"text\"\n                      style={{ pointerEvents: \"none\", cursor: \"not-allowed\" }}\n                      value={internStakeDefaultValues[0]?.departmentName}\n                      readOnly\n                      onFocus={(event) => event.target.blur()}\n                    />\n                  );\n                } else {\n                  return <>{options.depatName}</>;\n                }\n              }}\n            ></Column>\n            <Column\n              key={\"lkup_name\"}\n              field=\"lkup_name\"\n              header=\"Type\"\n              alignHeader={\"center\"}\n              body={(options) => {\n                if (\n                  enableDropDown &&\n                  options.resource_id === resourceEditId &&\n                  editor\n                ) {\n                  setDropEditId(options.type_id);\n                  return (\n                    <select id=\"typeId\" onChange={(e) => handleChange(e)}>\n                      <option value=\"\">{\"<<Please Select>>\"}</option>\n                      {type?.map((item, index) => (\n                        <option\n                          key={index}\n                          value={item.id}\n                          selected={\n                            item.lkup_name == options.lkup_name\n                              ? options.lkup_name\n                              : \"\"\n                          }\n                        >\n                          {item.lkup_name}\n                        </option>\n                      ))}\n                    </select>\n                  );\n                } else if (options.lkup_name === \"\") {\n                  return (\n                    <select\n                      onChange={(e) => setTypeId(e.target.value)}\n                      // value=\"\"\n                    >\n                      <option value=\"\">{\"<<Please Select>>\"}</option>\n                      {type?.map((Item, index) => (\n                        <option key={index} value={Item.id}>\n                          {Item.lkup_name}\n                        </option>\n                      ))}\n                    </select>\n                  );\n                } else {\n                  return <>{options.lkup_name}</>;\n                }\n              }}\n            ></Column>\n\n            <Column\n              field=\"Address\"\n              key={\"Address\"}\n              header=\"Address\"\n              alignHeader={\"center\"}\n              // body={(options) =>\n              //   options.ui != \"1\" ? (\n              //     <input\n              //       type=\"text\"\n              //       value={internStakeDefaultValues[0]?.address}\n              //       readOnly\n              //       onFocus={(event) => event.target.blur()}\n              //     />\n              //   ) : (\n              //     <>{options.Address}</>\n              //   )\n              // }\n              body={(options) => {\n                if (\n                  enableDropDown &&\n                  options.resource_id === resourceEditId &&\n                  editor\n                ) {\n                  return (\n                    <input\n                      type=\"text\"\n                      style={{ pointerEvents: \"none\", cursor: \"not-allowed\" }}\n                      disabled\n                      value={\n                        isModified == true\n                          ? internStakeDefaultValues[0]?.address\n                          : options.address\n                      }\n                      readOnly\n                      onFocus={(event) => event.target.blur()}\n                    />\n                  );\n                } else if (options.ui != \"1\") {\n                  return (\n                    <input\n                      type=\"text\"\n                      style={{ pointerEvents: \"none\", cursor: \"not-allowed\" }}\n                      value={internStakeDefaultValues[0]?.address}\n                      readOnly\n                      onFocus={(event) => event.target.blur()}\n                    />\n                  );\n                } else {\n                  return <>{options.address}</>;\n                }\n              }}\n            ></Column>\n            <Column\n              key={\"Phone\"}\n              field=\"Phone\"\n              header=\"Phone\"\n              alignHeader={\"center\"}\n              // body={(options) =>\n              //   options.ui != \"1\" ? (\n              //     <input\n              //       type=\"text\"\n              //       value={internStakeDefaultValues[0]?.Phone}\n              //       readOnly\n              //       onFocus={(event) => event.target.blur()}\n              //     />\n              //   ) : (\n              //     <>{options.Phone}</>\n              //   )\n              // }\n              body={(options) => {\n                if (\n                  enableDropDown &&\n                  options.resource_id === resourceEditId &&\n                  editor\n                ) {\n                  return (\n                    <input\n                      type=\"text\"\n                      style={{ pointerEvents: \"none\", cursor: \"not-allowed\" }}\n                      disabled\n                      value={\n                        isModified == true\n                          ? internStakeDefaultValues[0]?.Phone\n                          : options.Phone\n                      }\n                      readOnly\n                      onFocus={(event) => event.target.blur()}\n                    />\n                  );\n                } else if (options.ui != \"1\") {\n                  return (\n                    <input\n                      type=\"text\"\n                      style={{ pointerEvents: \"none\", cursor: \"not-allowed\" }}\n                      value={internStakeDefaultValues[0]?.Phone}\n                      readOnly\n                      onFocus={(event) => event.target.blur()}\n                    />\n                  );\n                } else {\n                  return <>{options.Phone}</>;\n                }\n              }}\n            ></Column>\n            <Column\n              key={\"email\"}\n              field=\"email\"\n              header=\"Email\"\n              alignHeader={\"center\"}\n              body={(options) => {\n                if (\n                  enableDropDown &&\n                  options.resource_id === resourceEditId &&\n                  editor\n                ) {\n                  return (\n                    <input\n                      type=\"text\"\n                      style={{ pointerEvents: \"none\", cursor: \"not-allowed\" }}\n                      disabled\n                      value={\n                        isModified == true\n                          ? internStakeDefaultValues[0]?.email_official\n                          : options.email\n                      }\n                      readOnly\n                      onFocus={(event) => event.target.blur()}\n                    />\n                  );\n                } else if (options.email === \"\") {\n                  return (\n                    <input\n                      type=\"text\"\n                      style={{ pointerEvents: \"none\", cursor: \"not-allowed\" }}\n                      value={internStakeDefaultValues[0]?.email_official}\n                      readOnly\n                      onFocus={(event) => event.target.blur()}\n                    />\n                  );\n                } else {\n                  return <>{options.email}</>;\n                }\n              }}\n            ></Column>\n\n            <Column\n              key={\"Actions\"}\n              field=\"Actions\"\n              header=\"Actions\"\n              headerStyle={{ width: \"100px\", backgroundColor: \"#eeecec\" }}\n              bodyStyle={{ textAlign: \"center\" }}\n              body={(options) => {\n                return renderRowActions(options);\n              }}\n            />\n          </DataTable>\n          {/* </div> */}\n        </div>\n      </div>\n      <div className=\"form-group col-md-2 btn-container-events center my-3\">\n        <button\n          className=\"btn btn-primary\"\n          disabled={valid}\n          title={\"Add new row\"}\n          onClick={() => {\n            addHandler1();\n          }}\n        >\n          <MdOutlineAdd size=\"1.2em\" /> Add\n        </button>\n        <button\n          className=\"btn btn-primary\"\n          disabled={buttonDisabled}\n          title={\"Save row\"}\n          onClick={() => {\n            // setAddDropdown(false);\n            handleAddClick();\n          }}\n        >\n          <TfiSave size=\"0.9em\" /> Save\n        </button>\n        <button\n          className=\"btn btn-secondary\"\n          disabled={buttonDisabled}\n          title={\"Cancel row editing\"}\n          onClick={() => {\n            Reset();\n          }}\n        >\n          <ImCross /> Cancel\n        </button>\n      </div>\n    </>\n  );\n}\nexport default CustomersInternalStakeholdersEdit;\n","import React, { useEffect, useRef, useState } from \"react\";\nimport { DataTable } from \"primereact/datatable\";\nimport { Column } from \"primereact/column\";\nimport axios from \"axios\";\nimport { environment } from \"../../environments/environment\";\nimport { AiFillWarning } from \"react-icons/ai\";\nimport { ImCross } from \"react-icons/im\";\nimport { ReactSearchAutocomplete } from \"react-search-autocomplete\";\nimport { FaPlus, FaSave } from \"react-icons/fa\";\n\nfunction CustomersStakeholdersEdit(props) {\n  const { customerId, setCsAddMessage } = props;\n  const [products, setProducts] = useState([]);\n  const [rowId, setRowId] = useState([]);\n  const [validateproject, setValidateproject] = useState(false);\n  const [buttonDisabled, setButtonDisabled] = useState(true);\n  const [valid, setValid] = useState(false);\n  const baseUrl = environment.baseUrl;\n  const abortController = useRef(null);\n  const componentRef = useRef(null);\n  const [resource, setResource] = useState([]);\n  const [type, setType] = useState([]);\n  const [divisionId, setDivisionId] = useState(\"\");\n  const loggedUserId = localStorage.getItem(\"resId\");\n\n  let sideArrow = document.getElementsByClassName(\n    \"p-paginator-next p-paginator-element p-link\"\n  );\n  let sideDoubleArrow = document.getElementsByClassName(\n    \"p-paginator-last p-paginator-element p-link\"\n  );\n\n  const resourceFnc = async () => {\n    await axios({\n      method: \"get\",\n      url:\n        baseUrl + `/customersms/Customers/getDivisionNames?cid=${customerId}`,\n    }).then((res) => {\n      let manger = res.data;\n      setResource(manger);\n    });\n  };\n  useEffect(() => {\n    resourceFnc();\n  }, []);\n\n  const onRowEditComplete = (e) => {\n    let _products = [...products];\n    let { newData, index } = e;\n    _products[index] = newData;\n    setProducts(_products);\n    handleAddClick(e.newData);\n  };\n\n  const removeFirstRowIfEmpty = (prod) => {\n    Object.keys(prod).forEach((d) => {\n      if ([\"\", null, undefined, \" \"].includes(prod[d])) {\n        setProducts(products.slice(1));\n        setValid((prev) => !prev);\n        return;\n      }\n    });\n  };\n\n  const getType = () => {\n    axios\n      .get(baseUrl + `/customersms/Customers/getTypeDropdown`)\n\n      .then((Response) => {\n        let type = [];\n        let data = Response.data;\n        data.length > 0 &&\n          data.forEach((e) => {\n            let TypeObj = {\n              label: e.lkup_name,\n              value: e.id,\n            };\n            type.push(TypeObj);\n          });\n        setType(data);\n      });\n  };\n\n  useEffect(() => {\n    getType();\n  }, []);\n\n  useEffect(() => {\n    let prod = products[0];\n    sideArrow[0]?.addEventListener(\"click\", function () {\n      removeFirstRowIfEmpty(prod);\n    });\n\n    sideDoubleArrow[0]?.addEventListener(\"click\", function () {\n      removeFirstRowIfEmpty(prod);\n    });\n\n    if (products[0]?.name == \"\") {\n      const icon = document.getElementsByClassName(\"customerStakeholder\")[0]\n        .children[0].children[0].children[1].children[0].children[6]\n        .children[1];\n\n      icon.setAttribute(\"title\", \"Edit selected row\");\n      icon.click();\n      setTimeout(() => {\n        const saveIcon = document.getElementsByClassName(\n          \"p-row-editor-save p-link\"\n        )[0];\n        saveIcon.setAttribute(\"title\", \"Save row\");\n        const cancelIcon = document.getElementsByClassName(\n          \"p-row-editor-cancel p-link\"\n        )[0];\n        cancelIcon.setAttribute(\"title\", \"Cancel row editing\");\n        cancelIcon?.addEventListener(\n          \"click\",\n          function (e) {\n            if (products[0]?.name == \"\") {\n              setProducts(products.slice(1, products.length));\n              setButtonDisabled(true);\n              setValidateproject(false);\n              setValid(false);\n              componentRef.current.forceUpdate();\n            }\n          },\n          true\n        );\n      }, 200);\n    }\n  }, [products]);\n\n  const Save = () => {\n    document\n      .getElementsByClassName(\"p-row-editor-save-icon pi pi-fw pi-check\")[0]\n      ?.click();\n  };\n\n  const Reset = () => {\n    document.getElementsByClassName(\"p-row-editor-cancel p-link\")[0]?.click();\n    setValidateproject(false);\n  };\n\n  const textEditorEventName = (products) => {\n    setRowId(products.rowData.id);\n    return (\n      <>\n        <input\n          className={`error ${\n            validateproject && !products.rowData.name ? \"error-block\" : \"\"\n          }`}\n          id=\"name\"\n          type=\"text\"\n          value={products.rowData.name}\n          onChange={(e) => {\n            products.editorCallback(e.target.value);\n          }}\n        />\n      </>\n    );\n  };\n\n  const statusbodyEvents = (rowData) => {\n    return (\n      <>\n        <input\n          className=\"ellipsis\"\n          id=\"name\"\n          title={rowData.name}\n          value={rowData.name}\n          type=\"text\"\n          autoComplete=\"off\"\n          required\n          disabled\n        />\n      </>\n    );\n  };\n\n  const textEditorDivision = (products) => {\n    const handleClear = () => {};\n    return (\n      <>\n        <div className=\"autoComplete-container\">\n          <div\n            className={` ${\n              validateproject && !products.rowData.divisionName\n                ? \"error-block\"\n                : \"\"\n            }`}\n          >\n            <ReactSearchAutocomplete\n              items={resource}\n              autoFocus\n              id=\"divisionId\"\n              name=\"divisionId\"\n              inputSearchString={\n                products.rowData.divisionName == null\n                  ? \"\"\n                  : products.rowData.divisionName\n              }\n              onSelect={(selectedItem) => {\n                setDivisionId(selectedItem);\n              }}\n              onClear={handleClear}\n              showIcon={false}\n            />\n          </div>\n        </div>\n      </>\n    );\n  };\n\n  const statusbodyDivision = (rowData) => {\n    return (\n      <>\n        <input\n          className=\"ellipsis\"\n          id=\"divisionName\"\n          title={rowData.divisionName}\n          value={rowData.divisionName}\n          type=\"text\"\n          autoComplete=\"off\"\n          required\n          disabled\n        />\n      </>\n    );\n  };\n\n  const textEditorType = (products) => {\n    return (\n      <>\n        <select\n          className={`error ${\n            validateproject && !products?.products?.lkup_name\n              ? \"error-block\"\n              : \"\"\n          }`}\n          id=\"type_id\"\n          name=\"typeId\"\n          type=\"text\"\n          value={products.rowData.lkup_name}\n          onChange={(e) => {\n            products.editorCallback(e.target.value);\n            type.map((a) => {\n              if (a.id == e.target.value) {\n                products[\"rowData\"][\"value\"] = a.lkup_name;\n                products[\"rowData\"][\"typeId\"] = e.target.value;\n              }\n            });\n          }}\n        >\n          <option value=\"\">{\"<<Please Select>>\"}</option>\n          {type?.map((Item, index) => (\n            <option\n              key={index}\n              value={Item.id}\n              selected={Item.id == products.rowData.typeId ? true : false}\n            >\n              {Item.lkup_name}\n            </option>\n          ))}\n        </select>\n      </>\n    );\n  };\n\n  const statusbodyType = (rowData) => {\n    return (\n      <>\n        <input\n          className=\"ellipsis\"\n          id=\"type_id\"\n          title={rowData.typeName}\n          value={rowData.typeName}\n          type=\"text\"\n          autoComplete=\"off\"\n          required\n          disabled\n        />\n      </>\n    );\n  };\n\n  const textEditorAddress = (products) => {\n    return (\n      <>\n        <input\n          className={`error ${\n            validateproject && !products.rowData.address ? \"error-block\" : \"\"\n          }`}\n          id=\"address\"\n          type=\"text\"\n          value={products.rowData.address}\n          onChange={(e) => {\n            products.editorCallback(e.target.value);\n          }}\n        />\n      </>\n    );\n  };\n\n  const statusbodyAddress = (rowData) => {\n    return (\n      <>\n        <input\n          className=\"ellipsis\"\n          id=\"address\"\n          title={rowData.address}\n          value={rowData.address}\n          type=\"text\"\n          autoComplete=\"off\"\n          required\n          disabled\n        />\n      </>\n    );\n  };\n\n  const textEditorPhone = (products) => {\n    return (\n      <>\n        <input\n          className={`error ${\n            validateproject && !products.rowData.phone ? \"error-block\" : \"\"\n          }`}\n          id=\"phone\"\n          type=\"text\"\n          maxLength={15}\n          onKeyDown={(e) =>\n            e.keyCode &&\n            (e.keyCode <= 47 || e.keyCode >= 58) &&\n            e.keyCode != 8 &&\n            e.preventDefault()\n          }\n          value={products.rowData.phone}\n          onChange={(e) => {\n            products.editorCallback(e.target.value);\n          }}\n        />\n      </>\n    );\n  };\n\n  const statusbodyPhone = (rowData) => {\n    return (\n      <>\n        <input\n          className=\"ellipsis\"\n          id=\"phone\"\n          title={rowData.phone}\n          value={rowData.phone}\n          type=\"text\"\n          autoComplete=\"off\"\n          required\n          disabled\n        />\n      </>\n    );\n  };\n\n  const textEditorEmail = (products) => {\n    return (\n      <>\n        <input\n          className={`error ${\n            validateproject && !products.rowData.email ? \"error-block\" : \"\"\n          }`}\n          id=\"email\"\n          type=\"text\"\n          value={products.rowData.email}\n          onChange={(e) => {\n            products.editorCallback(e.target.value);\n          }}\n        />\n      </>\n    );\n  };\n\n  const statusbodyEmail = (rowData) => {\n    return (\n      <>\n        <input\n          className=\"ellipsis\"\n          id=\"email\"\n          title={rowData.email}\n          value={rowData.email}\n          type=\"text\"\n          autoComplete=\"off\"\n          required\n          disabled\n        />\n      </>\n    );\n  };\n\n  const getData = () => {\n    abortController.current = new AbortController();\n    axios({\n      url:\n        baseUrl +\n        `/customersms/Customers/getCustomerEditStakeholders?cid=${customerId}`,\n      signal: abortController.current.signal,\n    }).then((resp) => {\n      let GetData = resp.data;\n      setProducts(() => GetData);\n      setTimeout(() => {}, 1000);\n    });\n  };\n\n  const handleAddClick = (rowData) => {\n    rowData[\"divisionId\"] =\n      divisionId.name == undefined ? rowData[\"divisionId\"] : divisionId.name;\n    rowData[\"divisionId\"] =\n      divisionId.id == undefined ? rowData[\"divisionId\"] : divisionId.id;\n\n    if (\n      rowData.name == \"\" ||\n      rowData.typeId == \"\" ||\n      rowData.phone == \"\" ||\n      rowData.email == \"\" ||\n      rowData.address == \"\"\n    ) {\n      setValidateproject(true);\n    } else {\n      axios({\n        method: \"post\",\n        url:\n          baseUrl + `/customersms/Customers/postCustomersExternalStakeholders`,\n        data: {\n          id: rowData.id,\n          loggedId: loggedUserId,\n          customerId: customerId,\n          Name: rowData.name,\n          division: rowData.divisionId,\n          type: rowData.typeId,\n          address: rowData.address,\n          phone: rowData.phone,\n          email: rowData.email,\n        },\n      }).then((response) => {\n        getData();\n        setValidateproject(false);\n        setCsAddMessage(true);\n        setTimeout(() => {\n          setCsAddMessage(false);\n        }, 3000);\n      });\n      setButtonDisabled(true);\n      setValid(false);\n    }\n  };\n\n  const addHandler1 = () => {\n    let daa = document.getElementsByClassName(\n      \"p-paginator-first p-paginator-element p-link\"\n    )[1];\n\n    daa.click();\n\n    if (!valid) {\n      setValid(true);\n      setButtonDisabled(false);\n    }\n\n    const data = {\n      typeId: \"\",\n      typeName: \"\",\n      phone: \"\",\n      id: \"\",\n      name: \"\",\n      email: \"\",\n      address: \"\",\n      divisionName: \"\",\n      divisionId: \"\",\n    };\n\n    let dt = [];\n    dt.push(data);\n    setProducts([...dt, ...products]);\n  };\n\n  useEffect(() => {\n    getData();\n  }, []);\n\n  return (\n    <>\n      {validateproject ? (\n        <div className=\"statusMsg error\">\n          <span>\n            <AiFillWarning />\n            &nbsp;\n            {\"Please provide valid values for highlighted values\"}\n          </span>\n        </div>\n      ) : (\n        \"\"\n      )}\n\n      <div>\n        <div className=\"customCard card graph mt-2 mb-2\">\n          <div className=\"group mb-0 customCard\">\n            <div\n              className=\"col-md-12  collapseHeader px-3\"\n              style={{ backgroundColor: \"#f4f4f4\" }}\n            >\n              <h2 style={{ backgroundColor: \"#f4f4f4\" }}>\n                Customer Stakeholders\n              </h2>\n            </div>\n          </div>\n          <div className=\" p-fluid darkHeader mb-2\">\n            <DataTable\n              className=\"primeReactDataTable projDependenciesTable customerStakeholder\"\n              value={products}\n              editMode=\"row\"\n              rows={25}\n              showGridlines\n              paginator\n              rowHover\n              onRowEditComplete={onRowEditComplete}\n              tableStyle={{ minWidth: \"auto\", width: \"auto\" }}\n              filterDisplay=\"row\"\n              currentPageReportTemplate=\"View {first} - {last} of {totalRecords} \"\n              paginatorTemplate=\"RowsPerPageDropdown FirstPageLink PrevPageLink CurrentPageReport NextPageLink LastPageLink\"\n              rowsPerPageOptions={[10, 25, 50]}\n              paginationComponentOptions={{\n                rowsPerPageText: \"Records per page:\",\n                rangeSeparatorText: \"out of\",\n              }}\n            >\n              <Column\n                field=\"name\"\n                header={<span>Name</span>}\n                style={{ width: \"220px\" }}\n                body={statusbodyEvents}\n                editor={(options) => textEditorEventName(options)}\n              ></Column>\n              <Column\n                field=\"divisionName\"\n                header={<span>Division</span>}\n                style={{ width: \"220px\" }}\n                body={statusbodyDivision}\n                editor={(options) => textEditorDivision(options)}\n              ></Column>\n              <Column\n                field=\"typeName\"\n                header={<span>Type</span>}\n                style={{ width: \"300px\" }}\n                body={statusbodyType}\n                editor={(options) => textEditorType(options)}\n              ></Column>\n              <Column\n                field=\"address\"\n                header={<span>Address</span>}\n                style={{ width: \"220px\" }}\n                body={statusbodyAddress}\n                editor={(options) => textEditorAddress(options)}\n              ></Column>\n              <Column\n                field=\"phone\"\n                header={<span>Phone</span>}\n                style={{ width: \"220px\" }}\n                body={statusbodyPhone}\n                editor={(options) => textEditorPhone(options)}\n              ></Column>\n              <Column\n                field=\"email\"\n                header={<span> Email</span>}\n                style={{ width: \"220px\" }}\n                body={statusbodyEmail}\n                editor={(options) => textEditorEmail(options)}\n              ></Column>\n              <Column\n                field=\"Actions\"\n                header=\"Actions\"\n                rowEditor\n                headerStyle={{ width: \"100px\", backgroundColor: \"#eeecec\" }}\n                bodyStyle={{ textAlign: \"center\" }}\n              />\n            </DataTable>\n          </div>\n        </div>\n      </div>\n      <div className=\"form-group col-md-2 btn-container-events center my-3\">\n        <button\n          className=\"btn btn-primary\"\n          disabled={valid}\n          title={\"Add new row\"}\n          onClick={addHandler1}\n        >\n          <FaPlus /> Add\n        </button>\n        <button\n          className=\"btn btn-primary\"\n          disabled={buttonDisabled}\n          title={\"Save row\"}\n          onClick={() => {\n            Save();\n          }}\n        >\n          <FaSave /> Save\n        </button>\n        <button\n          className=\"btn btn-secondary\"\n          disabled={buttonDisabled}\n          title={\"Cancel row editing\"}\n          onClick={() => {\n            Reset();\n          }}\n        >\n          <ImCross fontSize={\"11px\"} /> Cancel\n        </button>\n      </div>\n    </>\n  );\n}\nexport default CustomersStakeholdersEdit;\n","import React from \"react\";\nimport { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport { ReactSearchAutocomplete } from \"react-search-autocomplete\";\n\nfunction RiskAutoComplete(props) {\n  const {\n    riskDetails,\n    getData,\n    setFormData,\n    editedData,\n    formEditData,\n    onChangeHandler,\n    refArr,\n    setUsername,\n    name,\n    id,\n    value,\n    onClear,\n    inputSearchString,\n  } = props;\n  const [item, setItem] = useState([]);\n\n  // console.log(\"in line 10\");\n  // console.log(props);\n  // console.log(refArr);\n\n  useEffect(() => {\n    // console.log(item);\n  }, [item]);\n\n  const handleClear = (edit) => {\n    setFormData((prevProps) => ({ ...prevProps, [name]: \"\" }));\n    console.log(name);\n  };\n  useEffect(() => {}, [riskDetails]);\n  // console.log(value);\n  {\n    return (\n      <>\n        <div className=\"autoComplete-container\">\n          {value == \"UpdateBillingRate\" ? (\n            <ReactSearchAutocomplete\n              items={riskDetails}\n              type=\"Text\"\n              name={name}\n              inputSearchString={formEditData?.assigned_to}\n              id={id}\n              className=\"err\"\n              riskDetails={riskDetails}\n              getData={getData}\n              onClear={onClear}\n              placeholder=\"Type minimum 3 characters\"\n              onChange={(e) => {\n                onChangeHandler(e);\n                console.log(\"789------------------------\");\n              }}\n              // setSelectEmployee={setSelectEmployee}\n              onSelect={(e) => {\n                setFormData((prevProps) => ({ ...prevProps, [name]: e.id }));\n\n                setFormData((prevProps) => ({\n                  ...prevProps,\n                  [\"Resname\"]: e.name,\n                }));\n              }}\n              showIcon={false}\n            />\n          ) : value == \"EngagementS\" ? (\n            <ReactSearchAutocomplete\n              items={riskDetails}\n              type=\"Text\"\n              name={name}\n              inputSearchString={formEditData?.assigned_to}\n              id={id}\n              className=\"err\"\n              riskDetails={riskDetails}\n              getData={getData}\n              onClear={handleClear}\n              placeholder=\"Type minimum 3 characters\"\n              onChange={(e) => {\n                onChangeHandler(e);\n              }}\n              // setSelectEmployee={setSelectEmployee}\n              onSelect={(e) => {\n                setFormData((prevProps) => ({ ...prevProps, [name]: e.id }));\n                // console.log(e.id);\n              }}\n              showIcon={false}\n              showNoResults={true}\n              showNoResultsText=\"<<ALL>>\"\n            />\n          ) : (\n            <div\n              className=\"auto autocomplete\"\n              id=\"auto\"\n              ref={(ele) => {\n                if (refArr != undefined) {\n                  refArr.current[0] = ele;\n                }\n              }}\n            >\n              <ReactSearchAutocomplete\n                items={riskDetails}\n                type=\"Text\"\n                name={name}\n                placeholder=\"Type minimum 3 characters\"\n                inputSearchString={inputSearchString}\n                id={id}\n                className=\"err\"\n                onClear={onClear}\n                riskDetails={riskDetails}\n                getData={getData}\n                onChange={(e) => {\n                  onChangeHandler(e);\n                  console.log(\"123---------------\");\n                }}\n                // setSelectEmployee={setSelectEmployee}\n                onSelect={(e) => {\n                  setFormData((prevProps) => ({ ...prevProps, [name]: e.id }));\n                }}\n                showIcon={false}\n              />\n            </div>\n          )}\n        </div>\n        <span>{item.name}</span>\n      </>\n    );\n  }\n}\nexport default RiskAutoComplete;\n"],"names":["props","setClickButtonPopUp","clickButtonPopUp","setFinalState1","handleAddEmail","finalState1","handleChange1","useState","displayState1","setDisplayState1","validationmessage","setValidationMessage","deleteConfirmation","setDeleteConfirmation","ref","useRef","emailDeletedMessage","setEmailDeletedMessage","useEffect","DisplayList","undefined","Object","keys","map","d","i","emailArray","split","filter","email","trim","index","style","cursor","onClick","showDeleteConfirmationPopup","key","alignment","backdrop","size","visible","onClose","className","ele","current","type","id","name","placeholder","onChange","e","emailInput","querySelector","value","test","isValidEmail","setTimeout","prev","addHandler","newState","join","rolePopup","setRolePopup","updatedRowData","customerRoleTypeId","getCustomersRoles","setCustRolePopEditMsg","baseUrl","environment","edited","setEdited","countries","billingRates","setBillingRates","costs","setCosts","dataChanged","setDataChanged","billingRatesData","costsData","forEach","data","country_name","rate","cost","includes","BiCheck","borderCollapse","width","border","padding","textAlign","country","borderBottom","borderLeft","borderRight","maxLength","onKeyDown","keyCode","preventDefault","prevState","handleBillingRateChange","target","handleCostChange","title","dataToSend","billingRate","parseFloat","countryData","find","push","countryId","countryid","axios","then","response","roleDeletePopup","setRoleDeletePopup","DeleteRole","deleteId","cCountryId","setRolesValidationMsg","setUpdatedRole","setFinalTableMsg","setCurrency","customerDatarole","setCustomerDatarole","buttonDisabled","setButtonDisabled","valid","setValid","localStorage","getItem","rolesDropdown","setRolesDropdown","setCustomerEditRoles","setProducts1","setSaveButton","roles","setRoles","setCountryData","setDeleteId","setUpdatedRowData","setCustomerRoleTypeId","tableKey","setTableKey","addDropdown","setAddDropdown","backupData","setBackupData","rolesIdsByCustomerIds","setRolesIdsByCustomerIds","getRolesIds","method","url","customerId","resp","prevKey","desp","Set","display_name","dt","obj","customerRoleTypeIds","customer_role_type_id","countriesData","JSON","parse","stringify","countriesNames","sortedData","some","j","k","length","res","curre","Reset","backgroundColor","paginatorTemplate","currentPageReportTemplate","rowsPerPageOptions","paginator","editMode","rows","showGridlines","highlightOnHover","pagination","paginationPerPage","paginationRowsPerPageOptions","paginationComponentOptions","rowsPerPageText","rangeSeparatorText","field","header","alignHeader","body","options","item","editor","initialRowHandler","rowData","class","color","renderRowActions","headerStyle","bodyStyle","disabled","newRow","Action","prevTaskResources","addHandler1","roleType","postCustomerEditRoles","fontSize","error","setAddMessage","products1","setRowId","validateproject","setValidateproject","abortController","componentRef","loggedUserId","setcountryId","stateId","setStateId","cityId","setCityId","finalstates","setFinalStates","finalcities","setFinalCities","initialValue","loggedId","address","country_id","state_id","city_id","zip_code","contact","formData","sideArrow","document","getElementsByClassName","sideDoubleArrow","useLayoutEffect","fStates","fCountries","filteredData","description","removeFirstRowIfEmpty","prod","slice","addEventListener","icon","setAttribute","click","cancelIcon","forceUpdate","textEditorCountry","sortedstate","sort","a","b","state","nameA","toUpperCase","nameB","countryHandler","editorCallback","Item","selected","textEditorState","sortedcities","city","stateHandler","getData","AbortController","signal","GetData","postData","zipCode","Name","headerGroup","colSpan","rowHover","onRowEditComplete","_products1","newData","tableStyle","minWidth","filterDisplay","emptyMessage","headerColumnGroup","autoComplete","required","textEditorEventName","textEditorAddress","textEditorCity","textEditorZipCode","textEditorContact","rowEditor","Save","setAddIntStakeMessage","products","setProducts","resource","setResource","resourceId","setResourcseId","resourceId1","setResourceId1","setType","internStakeDefaultValues","setInternStakeDefaultValues","typeId","setTypeId","enableDropDown","setEnableDropDown","resourceEditId","setResourceEditId","setEditor","setLkpName","editAutoId","setEditAutoId","dropEditId","setDropEditId","rowId","isModified","setIsModified","setDetails","details","resourceFnc","manger","Response","TypeObj","label","lkup_name","getData1","dataWithSNo","ui","resource_id","ReactSearchAutocomplete","items","inputSearchString","onSelect","showIcon","selectedItem","pointerEvents","departmentName","depatName","readOnly","onFocus","event","blur","type_id","handleChange","Phone","email_official","Address","handleAddClick","setCsAddMessage","divisionId","setDivisionId","children","phone","division","_products","divisionName","autoFocus","onClear","textEditorDivision","typeName","textEditorType","textEditorPhone","textEditorEmail","riskDetails","setFormData","formEditData","editedData","onChangeHandler","refArr","setUsername","assigned_to","console","log","prevProps","edit","showNoResults","showNoResultsText"],"sourceRoot":""}