{"version":3,"file":"static/js/7703.a0a1a66c.chunk.js","mappings":"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","sources":["views/Customer/CusCreate.js","views/Customer/EmailPopUP.js","views/DeliveryComponent/PONumberPopup.js","views/ProjectComponent/RiskAutocomplete.js"],"sourcesContent":["import axios from \"axios\";\nimport React, { useState } from \"react\";\nimport { useEffect, useLayoutEffect } from \"react\";\nimport { BiCheck, BiSave } from \"react-icons/bi\";\nimport { RiProfileLine } from \"react-icons/ri\";\nimport { environment } from \"../../environments/environment\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport moment from \"moment\";\nimport { ReactSearchAutocomplete } from \"react-search-autocomplete\";\nimport { MdAddBox, MdAddCircleOutline } from \"react-icons/md\";\nimport { useRef } from \"react\";\nimport PONumberPopup from \"../DeliveryComponent/PONumberPopup\";\nimport EmailPopUp from \"./EmailPopUP\";\nimport GlobalValidation from \"../ValidationComponent/GlobalValidation\";\nimport { VscSave } from \"react-icons/vsc\";\nimport { ImCross } from \"react-icons/im\";\nimport { Navigate, useNavigate } from \"react-router-dom\";\nimport RiskAutoComplete from \"../ProjectComponent/RiskAutocomplete\";\nimport GlobalCancel from \"../ValidationComponent/GlobalCancel\";\nimport { AiFillWarning } from \"react-icons/ai\";\n\nfunction CusCreate() {\n  const [logged, setlogged] = useState([]);\n  const [allCustomers, setAllCustomers] = useState([]);\n  const loggedUserId = localStorage.getItem(\"resId\");\n  const baseUrl = environment.baseUrl;\n  const [engagementType, setEngagementType] = useState([]);\n  const [contract, setContract] = useState([]);\n  const [paymentTerm, setPaymentTerm] = useState([]);\n  const [invoiceCycle, setInvoiceCycle] = useState([]);\n  const [invoiceCulture, setInvoiceCulture] = useState([]);\n  const [invoiceTemplate, setInvoiceTemplate] = useState([]);\n  const [invoiceTime, setInvoiceTime] = useState([]);\n  const [engCompany, setEngCompany] = useState([]);\n  const [currency, setCurrency] = useState([]);\n  const [contractModel, setContractModel] = useState([]);\n  const [projectcategory, setProjectCategory] = useState([]);\n  const [resource, setResource] = useState([]);\n  const [resource1, setResource1] = useState([]);\n  const [resource2, setResource2] = useState([]);\n  const [resource3, setResource3] = useState([]);\n  const [resource4, setResource4] = useState([]);\n  const [resource5, setResource5] = useState([]);\n  const [resource6, setResource6] = useState([]);\n  const [resource7, setResource7] = useState([]);\n  const [resource8, setResource8] = useState([]);\n  const [resource9, setResource9] = useState([]);\n  const [resource10, setResource10] = useState([]);\n  const [resource11, setResource11] = useState([]);\n  const [resource12, setResource12] = useState([]);\n  const [resource13, setResource13] = useState([]);\n  const [resource14, setResource14] = useState([]);\n  const navigate = useNavigate();\n  const [month, setMonth] = useState();\n\n  const [salesTerritories, setSalesTerritories] = useState([]);\n  const [classification, setClassification] = useState([]);\n  const [industryType, setIndustryType] = useState([]);\n  const [size, setSize] = useState([]);\n  const [buttonPopup, setButtonPopup] = useState(false);\n  const [addList, setAddList] = useState([{}]);\n  const [addList1, setAddList1] = useState([{}]);\n  const [data, setData] = useState();\n  const [zip, setZip] = useState();\n  const [countryId, setcountryId] = useState([]);\n  const [cCountryId, setcCountryId] = useState([]);\n  const [sName, setSName] = useState([]);\n  const [cCName, setCCName] = useState();\n  const [states, setStates] = useState([]);\n  const [finalstates, setFinalStates] = useState([]);\n  const [cities, setCities] = useState([]);\n  const [finalcities, setFinalCities] = useState([]);\n  const [EndDt, setEndDt] = useState();\n  const [StartDt, setStartDt] = useState();\n  const [postDetails, setPostDetails] = useState([]);\n  const [clickButtonPopUp, setClickButtonPopUp] = useState(false);\n  const [Successvalidationmessage, setSuccessvalidationmessage] =\n    useState(false);\n  const [message, setMessage] = useState(false);\n  const [displayCountry, setDisplayCountry] = useState();\n  const [displayTextEmails, setDisplayTextEmails] = useState([]);\n  const [cust, setCust] = useState(0);\n  const [uniqueMessage, setUniqueMessage] = useState(false);\n  const intialOnChangeState = {\n    poNumber: \"\",\n  };\n  const intialOnChangeState1 = {\n    customerEmails: \"\",\n  };\n  const [finalState, setFinalState] = useState({});\n  const [finalState1, setFinalState1] = useState({});\n  const [onChangeState, setOnChangeState] = useState(intialOnChangeState);\n  const [onChangeState1, setOnChangeState1] = useState(intialOnChangeState1);\n  const [selectedValue, setSelectedValue] = useState(\"\");\n  const handleChangeCustom = (e) => {\n    setSelectedValue(e.target.value);\n  };\n\n  const [details, setDetails] = useState({\n    loggedId: loggedUserId,\n    fullName: \"\",\n    salesPersonId: \"\",\n    cslId: \"\",\n    cslHeadId: \"\",\n    acslId: \"\",\n    salesTerritoryId: \"\",\n    typProjCatId: \"\",\n    typIndustryId: \"\",\n    typCustStatusId: \"\",\n    website: \"http://\",\n    sfAccountLink: \"http://\",\n    phone: \"\",\n    fax: \"\",\n    size: \"\",\n    custReferenceable: \"\",\n    typClassificationId: \"\",\n    cCountryId: \"\",\n    countryId: \"\",\n    clientPartnerId: \"\",\n    clId: \"\",\n    deliveryPartnerId: \"\",\n    deliveryPartnerHeadId: \"\",\n    engagementPartnerId: \"\",\n    customerEmails: \"\",\n    talentPartnerId: \"\",\n    projectCoordinatorId: \"\",\n    sqaId: \"\",\n    accountOwnerId: \"\",\n    isNewCustomer: \"0\",\n    dName: \"\",\n    address: \"\",\n    contact: \"\",\n    dStateId: \"\",\n    dCityId: \"\",\n    zipCode: \"\",\n    eName: \"\",\n    engagementModelId: \"\",\n    startDt: \"\",\n    endDt: \"\",\n    managerId: \"\",\n    executiveId: \"\",\n    companyCostCenterId: \"\",\n    engagementStatusId: \"1\",\n    eCurrency: \"\",\n    sow: \"\",\n    sfOpportunityLink: \"\",\n    contModelId: \"\",\n    eState: \"\",\n    eCity: \"\",\n    attn: \"\",\n    paymentTermsId: \"\",\n    invoiceCycleId: \"\",\n    invoiceCultureId: \"\",\n    invoiceTemplateId: \"\",\n    invoiceTimeId: \"\",\n    billingInstructions: \"\",\n    clientMessage: \"\",\n    contractTermId: \"\",\n    costContractTermId: \"\",\n    revenueRecognitionId: \"\",\n    customerDiscount: \"\",\n    emailTemplateId: \"\",\n    toEmails: \"\",\n    ccEmails: \"\",\n    bccEmails: \"\",\n    ciInvoiceForId: \"652\",\n    ciCurrencyId: \"\",\n    isExpenseBillable: \"1\",\n    ciDiscountPercent: \"\",\n    poNumber: \"\",\n    resourceId: \"\",\n    month: \"\",\n    companyId: \"\",\n  });\n\n  const getloggeduser = () => {\n    axios\n      .get(baseUrl + `/ProjectMS/Audit/getloggeduser?loggedId=${loggedUserId}`)\n      .then((Response) => {\n        let data = Response.data;\n        setlogged(data);\n        setDetails((prev) => ({ ...prev, resourceId: data }));\n      });\n  };\n  const getAllCustomers = () => {\n    axios\n      // .get(`http://localhost:8090/customersms/Customers/getAllCustomers`)\n      .get(baseUrl + `/customersms/Customers/getAllCustomers`)\n      .then((Response) => {\n        let data = Response.data;\n        setAllCustomers(data);\n      });\n  };\n\n  const getAbsoluteMonths = (momentDate) => {\n    let mont = Number(moment(momentDate).format(\"MM\"));\n    let yea = Number(moment(momentDate).format(\"YYYY\"));\n    return mont + yea * 12;\n  };\n\n  const calculateDuration = (e) => {\n    let startMonths = getAbsoluteMonths(e);\n    let endMonths = getAbsoluteMonths(moment());\n    let monthDifference = endMonths - startMonths;\n    monthDifference += 1;\n    let dr = [];\n    for (let i = 1; i <= monthDifference; i++) {\n      dr.push(i);\n    }\n  };\n\n  useEffect(() => {\n    calculateDuration(month);\n  }, []);\n\n  const handleAdd = () => {\n    let data = finalState;\n    data[Object.keys(data).length] = onChangeState[\"poNumber\"];\n    setFinalState(data);\n    setAddList([...addList, { poNumber: \"\" }]);\n  };\n\n  const handleAddEmail = () => {\n    let data1 = finalState1;\n    data1[Object.keys(data1).length] = onChangeState1[\"customerEmails\"];\n    setFinalState1(data1);\n    setAddList1([...addList1, { customerEmails: \"\" }]);\n    // setDetails(data1);\n  };\n\n  useEffect(() => {\n    // setDetails(details);\n  }, [addList1]);\n\n  const handleChange = (e) => {\n    // setSelectedValue(\"\");\n    const { id, name, value } = e.target;\n\n    // setOnChangeState((prev) => ({ ...prev, [id]: value }));\n    onChangeState[id] = value;\n    // onChangeState1[id] = value;\n    // setOnChangeState1((prev) => ({ ...prev, [id]: value }));\n    setDetails((prev) => {\n      return { ...prev, [id]: value };\n    });\n    // details[(id, name)] = value;\n    // details[name] = value;\n\n    setZip(details.zipCode == \"\" ? \"\" : details.zipCode);\n    setData(details.address == \"\" ? \"\" : details.address);\n  };\n\n  const handleChange4 = (e) => {\n    const { id, name, value } = e.target;\n    details[(id, name)] = value;\n  };\n  const handleChange1 = (e) => {\n    const { id, name, value } = e.target;\n    onChangeState1[id] = value;\n    // setOnChangeState1((prev) => ({ ...prev, [id]: value }));\n    details[(id, name)] = value;\n  };\n\n  const handleChange2 = (e) => {\n    const { id, name, value } = e.target;\n    // onChangeState1[id] = value;\n    details[(id, name)] = value;\n  };\n\n  //////////////////////////////////////Country-State-City//////////////////////////////////////\n\n  useLayoutEffect(() => {\n    let tempStates = states;\n    let countryId = details.countryId;\n    let fStates = tempStates.filter((d) => d.countryId == countryId);\n    setFinalStates(fStates);\n\n    let tempCities = cities;\n    let stateId = details.stateId;\n    let fCountries = tempCities.filter((d) => d.stateId == stateId);\n    setFinalCities(fCountries);\n  }, [states, cities]);\n\n  const getcountryId = () => {\n    axios({\n      url: baseUrl + `/CostMS/cost/getCountries`,\n    }).then((resp) => {\n      const filteredData = resp.data.filter(\n        (item) => item.country_name !== \"NM\"\n      );\n      setcountryId(filteredData);\n    });\n  };\n\n  const getcCountryId = () => {\n    axios({\n      url: baseUrl + `/CostMS/cost/getCountries`,\n    }).then((resp) => {\n      const filteredData = resp.data.filter(\n        (item) => item.country_name !== \"NM\"\n      );\n      setcCountryId(filteredData);\n    });\n  };\n\n  const getStates = () => {\n    axios({\n      url: baseUrl + `/VendorMS/vendor/states`,\n    }).then((resp) => {\n      setStates(resp.data);\n    });\n  };\n\n  const getCities = () => {\n    axios({\n      url: baseUrl + `/VendorMS/vendor/cities`,\n    }).then((resp) => {\n      setCities(resp.data);\n    });\n  };\n\n  const [cName, setCName] = useState([]);\n  const countryHandler = (e) => {\n    let statesData = JSON.parse(JSON.stringify(states));\n    let countryData = JSON.parse(JSON.stringify(countryId));\n    // setCName((prev) => ({ ...prev, [\"country_name\"]: value }));\n    // setCName(e.target.value);\n    // setCName(countryId);\n    {\n      countryData.map((s) => {\n        if (s.id == e.target.value) {\n          setCName(s.country_name);\n        }\n      });\n    }\n\n    let fData = statesData\n      .filter((d) => d.countryId == e.target.value)\n      .sort((a, b) => {\n        b.state - a.state;\n      });\n\n    //////////--Alphabetical Sorting--//////////\n    const sortedstate = fData.sort(function (a, b) {\n      var nameA = a.state.toUpperCase();\n      var nameB = b.state.toUpperCase();\n      if (nameA < nameB) {\n        return -1; //nameA comes first\n      }\n      if (nameA > nameB) {\n        return 1; // nameB comes first\n      }\n      return 0; // names must be equal\n    });\n    //////////----------------------//////////\n\n    setFinalStates(sortedstate);\n    const { id, name, value } = e.target;\n    setDetails((prev) => ({ ...prev, [id]: value }));\n    setDisplayCountry(details.countryId);\n  };\n\n  const stateHandler = (e) => {\n    let citiesData = JSON.parse(JSON.stringify(cities));\n    let Finalcities = JSON.parse(JSON.stringify(finalstates));\n    let fData = citiesData.filter((d) => d.stateId == e.target.value);\n    {\n      Finalcities.map((d) => {\n        if (d.id == e.target.value) {\n          setSName(d.state);\n          setDetails((prev) => ({ ...prev, eState: d.state }));\n        }\n      });\n    }\n\n    //////////--Alphabetical Sorting--//////////\n    const sortedcities = fData.sort(function (a, b) {\n      var nameA = a.city.toUpperCase();\n      var nameB = b.city.toUpperCase();\n      if (nameA < nameB) {\n        return -1; //nameA comes first\n      }\n      if (nameA > nameB) {\n        return 1; // nameB comes first\n      }\n      return 0; // names must be equal\n    });\n    //////////------------------------//////////\n\n    setFinalCities(sortedcities);\n    const { id, value } = e.target;\n    setDetails((prev) => ({ ...prev, [id]: value }));\n  };\n  const cityIdHandler = (e) => {\n    let citiesData = JSON.parse(JSON.stringify(cities));\n    {\n      citiesData.map((c) => {\n        if (c.id == e.target.value) {\n          setCCName(c.city);\n          setDetails((prev) => ({ ...prev, eCity: c.city }));\n        }\n      });\n    }\n    const { id, value } = e.target;\n    setDetails((prev) => ({ ...prev, [id]: value }));\n  };\n\n  const handleContractModel = () => {\n    axios({\n      method: \"get\",\n      url: baseUrl + `/ProjectMS/Engagement/getContractModel`,\n    }).then((res) => {\n      let custom = res.data;\n      setContractModel(custom);\n    });\n  };\n\n  const handleEngagementType = () => {\n    axios({\n      method: \"get\",\n      url: baseUrl + `/ProjectMS/Engagement/getEngagementType`,\n    }).then((res) => {\n      let engtype = res.data;\n      const filteredData = engtype.filter(\n        (item) => item.id !== 356 && item.id !== 355\n      );\n      setEngagementType(filteredData);\n    });\n  };\n\n  const handleContract = () => {\n    axios({\n      method: \"get\",\n      url: baseUrl + `/ProjectMS/Engagement/getContractTerms`,\n    }).then((res) => {\n      let contact = res.data;\n      const filterData1 = contact.filter((item) => item.id !== 612);\n      setContract(filterData1);\n    });\n  };\n\n  const handlePaymentTerm = () => {\n    axios({\n      method: \"get\",\n      url: baseUrl + `/ProjectMS/Engagement/getPaymentTerms`,\n    }).then((res) => {\n      let payterm = res.data;\n      setPaymentTerm(payterm);\n    });\n  };\n\n  const handleInvoiceCycle = () => {\n    axios({\n      method: \"get\",\n      url: baseUrl + `/ProjectMS/Engagement/getInvoiceCycle`,\n    }).then((res) => {\n      let invcycle = res.data;\n      setInvoiceCycle(invcycle);\n    });\n  };\n\n  const handleInvoiceCulture = () => {\n    axios({\n      method: \"get\",\n      url: baseUrl + `/ProjectMS/Engagement/getInvoiceCulture`,\n    }).then((res) => {\n      let inculture = res.data;\n      setInvoiceCulture(inculture);\n    });\n  };\n\n  const handleInvoiceTemplate = () => {\n    axios({\n      method: \"get\",\n      url: baseUrl + `/ProjectMS/Engagement/getInvoiceTemplate`,\n    }).then((res) => {\n      let invtemp = res.data;\n      setInvoiceTemplate(invtemp);\n    });\n  };\n\n  const handleInvoiceTime = () => {\n    axios({\n      method: \"get\",\n      url: baseUrl + `/ProjectMS/Engagement/getInvoiceTime`,\n    }).then((res) => {\n      let intime = res.data;\n      setInvoiceTime(intime);\n    });\n  };\n\n  const handleCurrency = () => {\n    axios({\n      method: \"get\",\n      url: baseUrl + `/ProjectMS/Engagement/getCurrency`,\n    }).then((res) => {\n      let curre = res.data;\n      setCurrency(curre);\n    });\n  };\n\n  const handleEngCompany = () => {\n    axios({\n      method: \"get\",\n      url: baseUrl + `/ProjectMS/Engagement/getEngagementCompanay`,\n    }).then((res) => {\n      let compay = res.data;\n      const filterData = compay.filter(\n        (item) =>\n          item.id !== 13 && item.id !== 12 && item.id !== 11 && item.id !== 10\n      );\n      setEngCompany(filterData);\n    });\n  };\n\n  const handleProjectCategory = () => {\n    axios({\n      method: \"get\",\n      url: baseUrl + `/ProjectMS/Engagement/getAllProjectCategorys`,\n    }).then((res) => {\n      let manger = res.data;\n      setProjectCategory(manger);\n    });\n  };\n\n  const resourceFnc = async () => {\n    await axios({\n      method: \"get\",\n      url: baseUrl + `/ProjectMS/risks/getAssignedData`,\n    }).then((res) => {\n      let manger = res.data;\n\n      setResource(manger);\n      setResource1(manger);\n      setResource2(manger);\n      setResource3(manger);\n      setResource4(manger);\n      setResource5(manger);\n      setResource6(manger);\n      setResource7(manger);\n      setResource8(manger);\n      setResource9(manger);\n      setResource10(manger);\n      setResource11(manger);\n      setResource12(manger);\n      setResource13(manger);\n      setResource14(manger);\n    });\n  };\n  const handleSalesTerritories = () => {\n    axios({\n      method: \"get\",\n      url: baseUrl + `/ProjectMS/Engagement/getSalesTerritories`,\n    }).then((res) => {\n      let manger = res.data;\n      setSalesTerritories(manger);\n    });\n  };\n\n  const handleClassification = () => {\n    axios({\n      method: \"get\",\n      url: baseUrl + `/ProjectMS/Engagement/getClassification`,\n    }).then((res) => {\n      let manger = res.data;\n      setClassification(manger);\n    });\n  };\n\n  const handleIndustryType = () => {\n    axios({\n      method: \"get\",\n      url: baseUrl + `/ProjectMS/Engagement/getIndustryType`,\n    }).then((res) => {\n      let manger = res.data;\n      setIndustryType(manger);\n    });\n  };\n\n  const handleSize = () => {\n    axios({\n      method: \"get\",\n      url: baseUrl + `/ProjectMS/Engagement/getSize`,\n    }).then((res) => {\n      let manger = res.data;\n      setSize(manger);\n    });\n  };\n\n  const getid = () => {\n    axios({\n      method: \"get\",\n      url: baseUrl + `/ProjectMS/Engagement/getcustomerid`,\n    }).then((res) => {\n      let cust = res.data;\n      setCust(cust);\n    });\n  };\n\n  useEffect(() => {}, [cust], [cName]);\n\n  const handlePostDetails = () => {\n    let filteredData = ref.current.filter((d) => d != null);\n\n    ref.current = filteredData;\n\n    let valid = GlobalValidation(ref);\n    if (valid) {\n      {\n        setSuccessvalidationmessage(true);\n        // setTimeout(() => {\n        //   setSuccessvalidationmessage(false);\n        // }, 3000);\n      }\n      return;\n    }\n\n    let customerNamesArr = allCustomers.filter((d) => d !== null);\n    let someDataa = customerNamesArr.some(\n      (d) => d.full_name == details.fullName\n    );\n\n    if (someDataa) {\n      let ele = document.getElementsByClassName(\"unique\");\n      for (let index = 0; index < ele.length; index++) {\n        ele[index].classList.add(\"error-block\");\n      }\n\n      setUniqueMessage(true);\n      setSuccessvalidationmessage(false);\n      setTimeout(() => {\n        // setUniqueMessage(false);\n      }, 3000);\n      return;\n    }\n\n    axios({\n      method: \"post\",\n      url: baseUrl + `/ProjectMS/Engagement/postEngagementsCusDetails`,\n      data: details,\n    }).then(function (res) {\n      var resp = res.data;\n      setPostDetails(resp);\n      setMessage(true);\n      window.scrollTo({ top: 0, behavior: \"smooth\" });\n      setSuccessvalidationmessage(false);\n      setTimeout(() => {\n        setMessage(false);\n\n        window.open(\n          `/#/search/customerSearch/customer/dashboard/:${resp.status.id}`,\n          `_self`\n        );\n      }, 1000);\n    });\n  };\n  const ref = useRef([]);\n\n  const handleCancel1 = () => {\n    let ele = document.getElementsByClassName(\"cancel\");\n    for (let index = 0; index < ele.length; index++) {\n      ele[index].value = \"\";\n\n      if (ele[index].classList.contains(\"reactautocomplete\")) {\n        ele[\n          index\n        ].children[0].children[0].children[0].children[0].children[0].children[1]?.click();\n      }\n    }\n  };\n  const handleCancel = (e) => {\n    let ele = document.getElementsByClassName(\"cancel\");\n\n    GlobalCancel(ref);\n    setSuccessvalidationmessage(false);\n\n    for (let index = 0; index < ele.length; index++) {\n      ele[index].value = \"\";\n\n      if (ele[index].classList.contains(\"reactautocomplete\")) {\n        ele[\n          index\n        ].children[0].children[0].children[0].children[0].children[0].children[1]?.click();\n      }\n    }\n  };\n\n  const handleCancel2 = () => {\n    setDetails({\n      loggedId: loggedUserId,\n      fullName: \"\",\n      salesPersonId: \"\",\n      cslId: \"\",\n      cslHeadId: \"\",\n      acslId: \"\",\n      salesTerritoryId: \"\",\n      typProjCatId: \"\",\n      typIndustryId: \"\",\n      typCustStatusId: \"\",\n      website: \"http://\",\n      sfAccountLink: \"http://\",\n      phone: \"\",\n      fax: \"\",\n      size: \"\",\n      custReferenceable: \"\",\n      typClassificationId: \"\",\n      cCountryId: \"\",\n      countryId: \"\",\n      clientPartnerId: \"\",\n      clId: \"\",\n      deliveryPartnerId: \"\",\n      deliveryPartnerHeadId: \"\",\n      engagementPartnerId: \"\",\n      customerEmails: \"\",\n      talentPartnerId: \"\",\n      projectCoordinatorId: \"\",\n      sqaId: \"\",\n      accountOwnerId: \"\",\n      isNewCustomer: \"0\",\n      dName: \"\",\n      address: \"\",\n      contact: \"\",\n      dStateId: \"\",\n      dCityId: \"\",\n      zipCode: \"\",\n      eName: \"\",\n      engagementModelId: \"\",\n      startDt: \"\",\n      endDt: \"\",\n      managerId: \"\",\n      executiveId: \"\",\n      companyCostCenterId: \"\",\n      engagementStatusId: \"1\",\n      eCurrency: \"\",\n      sow: \"\",\n      sfOpportunityLink: \"\",\n      contModelId: \"\",\n      eState: \"\",\n      eCity: \"\",\n      attn: \"\",\n      paymentTermsId: \"\",\n      invoiceCycleId: \"\",\n      invoiceCultureId: \"\",\n      invoiceTemplateId: \"\",\n      invoiceTimeId: \"\",\n      billingInstructions: \"\",\n      clientMessage: \"\",\n      contractTermId: \"\",\n      costContractTermId: \"\",\n      revenueRecognitionId: \"\",\n      customerDiscount: \"\",\n      emailTemplateId: \"\",\n      toEmails: \"\",\n      ccEmails: \"\",\n      bccEmails: \"\",\n      ciInvoiceForId: \"652\",\n      ciCurrencyId: \"\",\n      isExpenseBillable: \"1\",\n      ciDiscountPercent: \"\",\n      poNumber: \"\",\n      resourceId: \"\",\n      month: \"\",\n      companyId: \"\",\n    });\n  };\n\n  // return <button onClick={handleCancel}>Cancel</button>;\n\n  const clickHanlderPopUp = () => {\n    setButtonPopup(true);\n  };\n  const clickButtonHandlerPopUp = () => {\n    setClickButtonPopUp(true);\n  };\n\n  useEffect(() => {\n    handleEngagementType();\n    handleContract();\n    getloggeduser();\n    getcountryId();\n    getStates();\n    getCities();\n    getAllCustomers();\n    getcCountryId();\n    getid();\n  }, []);\n\n  useEffect(() => {\n    handleProjectCategory();\n    handleSalesTerritories();\n    handleClassification();\n    handleIndustryType();\n    handleSize();\n  }, []);\n\n  useEffect(() => {\n    resourceFnc();\n  }, []);\n\n  useEffect(() => {\n    handlePaymentTerm();\n    handleInvoiceCycle();\n    handleInvoiceCulture();\n    handleInvoiceTemplate();\n    handleInvoiceTime();\n  }, []);\n\n  useEffect(() => {\n    handleCurrency();\n    handleEngCompany();\n    handleContractModel();\n  }, []);\n\n  useEffect(() => {}, [postDetails]);\n\n  const handleNewCustomerChange = (e) => {\n    setDetails((prev) => ({ ...prev, [\"isNewCustomer\"]: \"1\" }));\n  };\n\n  const handleExistingCustomerChange = (e) => {\n    setDetails((prev) => ({ ...prev, [\"isNewCustomer\"]: \"0\" }));\n  };\n\n  const handleIsBillableChange = (e) => {\n    setDetails((prev) => ({ ...prev, [\"isExpenseBillable\"]: \"1\" }));\n  };\n\n  const handleNoBillableChange = (e) => {\n    setDetails((prev) => ({ ...prev, [\"isExpenseBillable\"]: \"0\" }));\n  };\n\n  const handleClear = () => {\n    setDetails((prev) => ({ ...prev, salesPersonId: \"\" }));\n  };\n\n  const handleClear1 = () => {\n    setDetails((prev) => ({ ...prev, clientPartnerId: \"\" }));\n  };\n\n  const handleClear2 = () => {\n    setDetails((prev) => ({ ...prev, engagementPartnerId: \"\" }));\n  };\n\n  const handleClear3 = () => {\n    setDetails((prev) => ({ ...prev, clId: \"\" }));\n  };\n\n  const handleClear4 = () => {\n    setDetails((prev) => ({ ...prev, cslHeadId: \"\" }));\n  };\n\n  const handleClear5 = () => {\n    setDetails((prev) => ({ ...prev, cslId: \"\" }));\n  };\n\n  const handleClear6 = () => {\n    setDetails((prev) => ({ ...prev, acslId: \"\" }));\n  };\n\n  const handleClear7 = () => {\n    setDetails((prev) => ({ ...prev, deliveryPartnerHeadId: \"\" }));\n  };\n\n  const handleClear8 = () => {\n    setDetails((prev) => ({ ...prev, deliveryPartnerId: \"\" }));\n  };\n\n  const handleClear9 = () => {\n    setDetails((prev) => ({ ...prev, talentPartnerId: \"\" }));\n  };\n\n  const handleClear10 = () => {\n    setDetails((prev) => ({ ...prev, projectCoordinatorId: \"\" }));\n  };\n\n  const handleClear11 = () => {\n    setDetails((prev) => ({ ...prev, sqaId: \"\" }));\n  };\n\n  const handleClear12 = () => {\n    setDetails((prev) => ({ ...prev, managerId: \"\" }));\n  };\n\n  const handleClear13 = () => {\n    setDetails((prev) => ({ ...prev, executiveId: \"\" }));\n  };\n\n  const handleClear14 = () => {\n    setDetails((prev) => ({ ...prev, accountOwnerId: \"\" }));\n  };\n  const onChangeHandler = (e) => {\n    setDetails((prevProps) => ({\n      ...prevProps,\n      salesPersonId: e.id,\n    }));\n  };\n  const onChangeHandler1 = (e) => {\n    setDetails((prevProps) => ({\n      ...prevProps,\n      clientPartnerId: e.id,\n    }));\n  };\n\n  return (\n    <div>\n      <div className=\"col-md-12\">\n        <div className=\"pageTitle\">\n          <div className=\"childOne\"></div>\n          <div className=\"childTwo\">\n            <h2>Create Customer</h2>\n          </div>\n          <div className=\"childThree\"></div>\n        </div>\n      </div>\n      {message ? (\n        <div className=\"statusMsg success\">\n          <span>\n            <BiCheck />\n            customer created successfully\n          </span>\n        </div>\n      ) : (\n        \"\"\n      )}\n      {Successvalidationmessage ? (\n        <div className=\"statusMsg error\">\n          <span>\n            <AiFillWarning /> Please select the valid values for highlighted\n            fields{\" \"}\n          </span>\n        </div>\n      ) : (\n        \"\"\n      )}\n      {uniqueMessage ? (\n        <div className=\"statusMsg error\">\n          {\" \"}\n          <AiFillWarning /> Customer is already exist with this name\n        </div>\n      ) : (\n        \"\"\n      )}\n      <div className=\"mb-3 mt-2 container-fluid   customCard cancel\">\n        <div className=\"group-content row\">\n          <div className=\"col-md-9\">\n            <div className=\"row\">\n              <div className=\"form-group col-md-8 mb-2\">\n                <label htmlFor=\"fullName\">\n                  Customer Name <span className=\"error-text\">*</span>\n                </label>\n                <div\n                  className=\"textfield\"\n                  ref={(ele) => {\n                    ref.current[0] = ele;\n                  }}\n                >\n                  <input\n                    type=\"text\"\n                    className=\"unique cancel\"\n                    name=\"fullName\"\n                    id=\"fullName\"\n                    onChange={handleChange2}\n                  />\n                </div>\n              </div>\n              <div className=\"form-group col-md-4 mb-2\">\n                <label htmlFor=\"typCustStatusId\">\n                  Customer Status&nbsp;<span className=\"error-text\">*</span>\n                </label>\n                <select\n                  ref={(ele) => {\n                    ref.current[1] = ele;\n                  }}\n                  className=\"text cancel\"\n                  name=\"typCustStatusId\"\n                  id=\"typCustStatusId\"\n                  onChange={handleChange}\n                >\n                  <option value=\"\"> &lt;&lt;Please Select&gt;&gt;</option>\n                  <option value={160}>New</option>\n                  <option value={161}>Active</option>\n                  <option value={162}>InActive</option>\n                </select>\n              </div>\n              <div className=\"form-group col-md-4 mb-2\">\n                <label htmlFor=\"size\">Size</label>\n                <select\n                  className=\"cancel\"\n                  name=\"size\"\n                  id=\"size\"\n                  onChange={handleChange4}\n                >\n                  <option value=\"\"> &lt;&lt;Please Select&gt;&gt;</option>\n                  {size.map((Item, index) => (\n                    <option key={index} value={Item.id}>\n                      {Item.lkup_name}\n                    </option>\n                  ))}\n                </select>\n              </div>\n              <div className=\"form-group col-md-4 mb-2\">\n                <label htmlFor=\"salesTerritoryId\">\n                  Sales Territory&nbsp;<span className=\"error-text\">*</span>\n                </label>\n                <select\n                  ref={(ele) => {\n                    ref.current[2] = ele;\n                  }}\n                  className=\"text cancel\"\n                  name=\"salesTerritoryId\"\n                  id=\"salesTerritoryId\"\n                  onChange={handleChange}\n                >\n                  <option value=\"\"> &lt;&lt;Please Select&gt;&gt;</option>\n                  {salesTerritories\n                    .sort((a, b) => a.full_name.localeCompare(b.full_name))\n                    .map((Item, index) => (\n                      <option key={index} value={Item.id}>\n                        {Item.full_name}\n                      </option>\n                    ))}\n                </select>\n              </div>\n\n              <div className=\"form-group col-md-4 mb-2\">\n                <label htmlFor=\"typIndustryId\">\n                  Industry type&nbsp;<span className=\"error-text\">*</span>\n                </label>\n                <select\n                  ref={(ele) => {\n                    ref.current[3] = ele;\n                  }}\n                  className=\"text cancel\"\n                  id=\"typIndustryId\"\n                  name=\"typIndustryId\"\n                  onChange={handleChange}\n                >\n                  <option value=\"\"> &lt;&lt;Please Select&gt;&gt;</option>\n                  {industryType\n                    .sort((a, b) => a.lkup_name.localeCompare(b.lkup_name))\n                    .map((Item, index) => (\n                      <option key={index} value={Item.id}>\n                        {Item.lkup_name}\n                      </option>\n                    ))}\n                </select>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"form-group col-md-3 mb-2\">\n            <label htmlFor=\"typProjCatId\" class=\"srk\">\n              Project Category&nbsp;<span className=\"error-text\">*</span>\n            </label>\n            <select\n              ref={(ele) => {\n                ref.current[4] = ele;\n              }}\n              className=\"auto text srk cancel\"\n              name=\"typProjCatId\"\n              id=\"typProjCatId\"\n              onChange={handleChange}\n              multiple=\"multiple\"\n              size={5}\n            >\n              {projectcategory.map((Item, index) => (\n                <option key={index} value={Item.id}>\n                  {Item.project_category_name}\n                </option>\n              ))}\n            </select>\n          </div>\n\n          <div className=\"form-group col-md-3 mb-2\">\n            <label htmlFor=\"salesPersonId\">\n              Sales Executive&nbsp;<span className=\"error-text\">*</span>\n            </label>\n            <div\n              className=\"autoComplete-container cancel  reactautocomplete\"\n              ref={(ele) => {\n                ref.current[5] = ele;\n              }}\n            >\n              <RiskAutoComplete\n                riskDetails={resource}\n                setFormData={setDetails}\n                getData={resourceFnc}\n                value=\"0\"\n                type=\"Text\"\n                name=\"salesPersonId\"\n                id=\"salesPersonId\"\n                placeholder=\"Type minimum 3 characters to get the list\"\n                onClear={handleClear}\n                onChangeHandler={onChangeHandler}\n              />\n            </div>\n          </div>\n\n          <div className=\"form-group col-md-3 mb-2\">\n            <label htmlFor=\"Month\">\n              Effective Month&nbsp;<span className=\"error-text\">*</span>\n            </label>\n            <div\n              className=\"datepicker\"\n              ref={(ele) => {\n                ref.current[6] = ele;\n              }}\n            >\n              <DatePicker\n                name=\"month\"\n                id=\"month\"\n                className=\"cancel\"\n                placeholderText=\"month\"\n                selected={month}\n                // showMonthDropdown\n                // showYearDropdown\n                onChange={(e) => {\n                  calculateDuration(e);\n                  setDetails((prev) => ({\n                    ...prev,\n                    [\"month\"]: moment(e).format(\"yyyy-MM-DD\"),\n                  }));\n                  setMonth(e);\n                }}\n                dateFormat=\"MMM-yyyy\"\n                onKeyDown={(e) => {\n                  e.preventDefault();\n                }}\n                showMonthYearPicker\n              />\n            </div>\n          </div>\n\n          <div className=\"form-group col-md-3 mb-2\">\n            <label htmlFor=\"clientPartnerId\">Client Partner</label>\n            <div className=\"autoComplete-container cancel  reactautocomplete\">\n              <RiskAutoComplete\n                riskDetails={resource1}\n                setFormData={setDetails}\n                getData={resourceFnc}\n                value=\"0\"\n                type=\"Text\"\n                name=\"clientPartnerId\"\n                id=\"clientPartnerId\"\n                placeholder=\"Type minimum 3 characters to get the list\"\n                onChangeHandler={onChangeHandler1}\n                onClear={handleClear1}\n                showIcon={false}\n              />\n            </div>\n          </div>\n\n          <div className=\"form-group col-md-3 mb-2\">\n            <label htmlFor=\"engagementPartnerId\">Engagement Partner</label>\n            <div className=\"autoComplete-container cancel  reactautocomplete\">\n              <RiskAutoComplete\n                riskDetails={resource2}\n                setFormData={setDetails}\n                getData={resourceFnc}\n                value=\"0\"\n                type=\"Text\"\n                name=\"engagementPartnerId\"\n                id=\"engagementPartnerId\"\n                placeholder=\"Type minimum 3 characters to get the list\"\n                onChangeHandler={(e) => {\n                  setDetails((prevProps) => ({\n                    ...prevProps,\n                    engagementPartnerId: e.id,\n                  }));\n                }}\n                onClear={handleClear2}\n                showIcon={false}\n              />\n            </div>\n          </div>\n          <div className=\"form-group col-md-3 mb-2\">\n            <label htmlFor=\"clId\">Competency Lead</label>\n            <div className=\"autoComplete-container cancel  reactautocomplete\">\n              <RiskAutoComplete\n                riskDetails={resource3}\n                setFormData={setDetails}\n                getData={resourceFnc}\n                value=\"0\"\n                type=\"Text\"\n                name=\"clId\"\n                id=\"clId\"\n                placeholder=\"Type minimum 3 characters to get the list\"\n                onChangeHandler={(e) => {\n                  setDetails((prevProps) => ({\n                    ...prevProps,\n                    clId: e.id,\n                  }));\n                }}\n                onClear={handleClear3}\n                showIcon={false}\n              />\n            </div>\n          </div>\n          <div className=\"form-group col-md-3 mb-2\">\n            <label htmlFor=\"cslHeadId\">CSL Head</label>\n            <div className=\"autoComplete-container cancel  reactautocomplete\">\n              <RiskAutoComplete\n                riskDetails={resource4}\n                setFormData={setDetails}\n                getData={resourceFnc}\n                value=\"0\"\n                type=\"Text\"\n                name=\"cslHeadId\"\n                id=\"cslHeadId\"\n                placeholder=\"Type minimum 3 characters to get the list\"\n                onChangeHandler={(e) => {\n                  setDetails((prevProps) => ({\n                    ...prevProps,\n                    cslHeadId: e.id,\n                  }));\n                }}\n                onClear={handleClear4}\n                showIcon={false}\n              />\n            </div>\n          </div>\n          <div className=\"form-group col-md-3 mb-2\">\n            <label htmlFor=\"cslId\">CSL</label>\n            <div className=\"autoComplete-container cancel  reactautocomplete\">\n              <RiskAutoComplete\n                riskDetails={resource5}\n                setFormData={setDetails}\n                getData={resourceFnc}\n                value=\"0\"\n                type=\"Text\"\n                name=\"cslId\"\n                id=\"cslId\"\n                placeholder=\"Type minimum 3 characters to get the list\"\n                onChangeHandler={(e) => {\n                  setDetails((prevProps) => ({\n                    ...prevProps,\n                    cslId: e.id,\n                  }));\n                }}\n                onClear={handleClear5}\n                showIcon={false}\n              />\n            </div>\n          </div>\n          <div className=\"form-group col-md-3 mb-2\">\n            <label htmlFor=\"acslId\">Associate CSL</label>\n            <div className=\"autoComplete-container cancel  reactautocomplete\">\n              <RiskAutoComplete\n                riskDetails={resource6}\n                setFormData={setDetails}\n                getData={resourceFnc}\n                value=\"0\"\n                type=\"Text\"\n                name=\"acslId\"\n                id=\"acslId\"\n                placeholder=\"Type minimum 3 characters to get the list\"\n                onChangeHandler={(e) => {\n                  setDetails((prevProps) => ({\n                    ...prevProps,\n                    acslId: e.id,\n                  }));\n                }}\n                onClear={handleClear6}\n                showIcon={false}\n              />\n            </div>\n          </div>\n          <div className=\"form-group col-md-3 mb-2\">\n            <label htmlFor=\"deliveryPartnerHeadId\">Delivery Partner Head</label>\n            <div className=\"autoComplete-container cancel  reactautocomplete\">\n              <RiskAutoComplete\n                riskDetails={resource7}\n                setFormData={setDetails}\n                getData={resourceFnc}\n                value=\"0\"\n                type=\"Text\"\n                name=\"deliveryPartnerHeadId\"\n                id=\"deliveryPartnerHeadId\"\n                placeholder=\"Type minimum 3 characters to get the list\"\n                onChangeHandler={(e) => {\n                  setDetails((prevProps) => ({\n                    ...prevProps,\n                    deliveryPartnerHeadId: e.id,\n                  }));\n                }}\n                onClear={handleClear7}\n                showIcon={false}\n              />\n            </div>\n          </div>\n          <div className=\"form-group col-md-3 mb-2\">\n            <label htmlFor=\"deliveryPartnerId\">Delivery Partner</label>\n            <div className=\"autoComplete-container cancel  reactautocomplete\">\n              <RiskAutoComplete\n                riskDetails={resource8}\n                setFormData={setDetails}\n                getData={resourceFnc}\n                value=\"0\"\n                type=\"Text\"\n                name=\"deliveryPartnerId\"\n                id=\"deliveryPartnerId\"\n                placeholder=\"Type minimum 3 characters to get the list\"\n                onChangeHandler={(e) => {\n                  setDetails((prevProps) => ({\n                    ...prevProps,\n                    deliveryPartnerId: e.id,\n                  }));\n                }}\n                onClear={handleClear8}\n                showIcon={false}\n              />\n            </div>\n          </div>\n          <div className=\"form-group col-md-3 mb-2\">\n            <label htmlFor=\"talentPartnerId\">Talent Partner</label>\n            <div className=\"autoComplete-container cancel  reactautocomplete\">\n              <RiskAutoComplete\n                riskDetails={resource9}\n                setFormData={setDetails}\n                getData={resourceFnc}\n                value=\"0\"\n                type=\"Text\"\n                name=\"talentPartnerId\"\n                id=\"talentPartnerId\"\n                placeholder=\"Type minimum 3 characters to get the list\"\n                onChangeHandler={(e) => {\n                  setDetails((prevProps) => ({\n                    ...prevProps,\n                    talentPartnerId: e.id,\n                  }));\n                }}\n                onClear={handleClear9}\n                showIcon={false}\n              />\n            </div>\n          </div>\n          <div className=\"form-group col-md-3 mb-2\">\n            <label htmlFor=\"projectCoordinatorId\">Project co-ordinator</label>\n            <div className=\"autoComplete-container cancel  reactautocomplete\">\n              <RiskAutoComplete\n                riskDetails={resource10}\n                setFormData={setDetails}\n                getData={resourceFnc}\n                value=\"0\"\n                type=\"Text\"\n                name=\"projectCoordinatorId\"\n                id=\"projectCoordinatorId\"\n                placeholder=\"Type minimum 3 characters to get the list\"\n                onChangeHandler={(e) => {\n                  setDetails((prevProps) => ({\n                    ...prevProps,\n                    projectCoordinatorId: e.id,\n                  }));\n                }}\n                onClear={handleClear10}\n                showIcon={false}\n              />\n            </div>\n          </div>\n          <div className=\"form-group col-md-3 mb-2\">\n            <label htmlFor=\"sqaId\">SQA</label>\n            <div className=\"autoComplete-container cancel  reactautocomplete\">\n              <RiskAutoComplete\n                riskDetails={resource11}\n                setFormData={setDetails}\n                getData={resourceFnc}\n                value=\"0\"\n                type=\"Text\"\n                name=\"sqaId\"\n                id=\"sqaId\"\n                placeholder=\"Type minimum 3 characters to get the list\"\n                onChangeHandler={(e) => {\n                  setDetails((prevProps) => ({\n                    ...prevProps,\n                    sqaId: e.id,\n                  }));\n                }}\n                onClear={handleClear11}\n                showIcon={false}\n              />\n            </div>\n          </div>\n          <div className=\"form-group col-md-3 mb-2\">\n            <label htmlFor=\"cCountryId\">Country</label>\n\n            <select\n              name=\"cCountryId\"\n              className=\"cancel\"\n              id=\"cCountryId\"\n              onChange={(e) => handleChange(e)}\n            >\n              <option value=\"\"> &lt;&lt;Please Select&gt;&gt;</option>\n              {cCountryId.map((Item, index) => (\n                <option key={index} value={Item.id}>\n                  {Item.country_name}\n                </option>\n              ))}\n            </select>\n          </div>\n          <div className=\"form-group col-md-3 mb-2\">\n            <label htmlFor=\"typClassificationId\">Classification</label>\n            <select\n              name=\"typClassificationId\"\n              className=\"cancel\"\n              id=\"typClassificationId\"\n              onChange={handleChange}\n            >\n              <option value=\"\"> &lt;&lt;Please Select&gt;&gt;</option>\n              {classification.map((Item, index) => (\n                <option key={index} value={Item.id}>\n                  {Item.lkup_name}\n                </option>\n              ))}\n            </select>\n          </div>\n          <div className=\"form-group col-md-3 mb-2\">\n            <label htmlFor=\"ciDiscountPercent\">Discount (%)</label>\n            <input\n              type=\"text\"\n              className=\" cancel\"\n              id=\"ciDiscountPercent\"\n              name=\"ciDiscountPercent\"\n              maxLength={6}\n              onKeyDown={(e) =>\n                e.keyCode &&\n                (e.keyCode <= 47 || e.keyCode >= 58) &&\n                e.keyCode != 8 &&\n                e.preventDefault()\n              }\n              required\n              onChange={handleChange}\n            />\n          </div>\n          <div className=\"form-group col-md-3 mb-2\">\n            <label htmlFor=\"currencyId\">Customer Currency</label>\n            <select\n              className=\"cancel\"\n              id=\"ciCurrencyId\"\n              name=\"ciCurrencyId\"\n              onChange={handleChange}\n            >\n              <option value=\"\"> &lt;&lt;Please Select&gt;&gt;</option>\n              {currency.map((Item, index) => (\n                <option key={index} value={Item.id}>\n                  {Item.currency}\n                </option>\n              ))}\n            </select>\n          </div>\n          <div className=\"form-group col-md-3 mb-2\">\n            <label htmlFor=\"website\">Website</label>\n            <input\n              type=\"text\"\n              name=\"website\"\n              className=\" cancel\"\n              id=\"website\"\n              required\n              onChange={handleChange}\n            />\n          </div>\n          <div className=\"form-group col-md-3 mb-2\">\n            <label htmlFor=\"phone\">Phone</label>\n            <input\n              type=\"text\"\n              name=\"phone\"\n              className=\" cancel\"\n              id=\"phone\"\n              maxLength={15}\n              onKeyDown={(e) =>\n                e.keyCode &&\n                (e.keyCode <= 47 || e.keyCode >= 58) &&\n                e.keyCode != 8 &&\n                e.preventDefault()\n              }\n              onChange={handleChange}\n            />\n          </div>\n          <div className=\"form-group col-md-3 mb-2\">\n            <label htmlFor=\"fax\">Fax Number</label>\n            <input\n              type=\"text\"\n              className=\" cancel\"\n              id=\"fax\"\n              name=\"fax\"\n              maxLength={15}\n              onKeyDown={(e) =>\n                e.keyCode &&\n                (e.keyCode <= 47 || e.keyCode >= 58) &&\n                e.keyCode != 8 &&\n                e.preventDefault()\n              }\n              onChange={handleChange}\n            />\n          </div>\n          <div className=\" col-md-3\">\n            <label htmlFor=\"isExpenseBillable\">Expense Billable</label>\n            <div className=\"form-check form-check-inline\">\n              <input\n                className=\"form-check-input cancel\"\n                type=\"radio\"\n                value=\"1\"\n                name=\"isExpenseBillable\"\n                id=\"isExpenseBillable\"\n                onChange={handleIsBillableChange}\n                checked={details[\"isExpenseBillable\"] === \"1\"}\n              />\n              <label className=\"form-check-label cancel\" htmlFor=\"yes\">\n                Yes\n              </label>\n            </div>\n            <div className=\"form-check form-check-inline cancel\">\n              <input\n                className=\"form-check-input cancel\"\n                type=\"radio\"\n                value=\"0\"\n                name=\"isExpenseBillable\"\n                id=\"isExpenseBillable\"\n                onChange={handleNoBillableChange}\n                checked={details[\"isExpenseBillable\"] === \"0\"}\n              />\n              <label className=\"form-check-label cancel\" htmlFor=\"no\">\n                No\n              </label>\n            </div>\n          </div>\n          <div className=\"form-group col-md-3 mb-2\">\n            <label htmlFor=\"sfAccountLink\">SF Account Link</label>\n            <input\n              type=\"text\"\n              name=\"sfAccountLink\"\n              className=\" cancel\"\n              id=\"sfAccountLink\"\n              onChange={handleChange}\n            />\n          </div>\n          <div className=\"form-group col-md-3 mb-2\">\n            <label htmlFor=\"customerEmails\">Customer Email</label>\n            <div className=\"row\">\n              <div className=\"col-md-10\">\n                <input\n                  type=\"text\"\n                  name=\"customerEmails\"\n                  className=\"disableField\"\n                  id=\"customerEmails\"\n                  value={displayTextEmails.toString()}\n                  disabled\n                  onChange={handleChange1}\n                />\n              </div>\n              <div className=\"col-md-1\">\n                <button className=\"btn\">\n                  <MdAddBox\n                    onClick={() => {\n                      clickButtonHandlerPopUp();\n                    }}\n                  />\n                </button>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"form-group col-md-3 mb-2\">\n            <label htmlFor=\"custReferenceable\">\n              Is this customer referenceable?\n            </label>\n            <select\n              id=\"custReferenceable\"\n              className=\"cancel\"\n              name=\"custReferenceable\"\n              onChange={handleChange}\n            >\n              <option value=\"\"> &lt;&lt;Please Select&gt;&gt;</option>\n              <option value={1}>Yes</option>\n              <option value={2}>No</option>\n            </select>\n          </div>\n\n          <div className=\"form-group col-md-3 mb-2\">\n            <label htmlFor=\"accountOwnerId\">Account Owner</label>\n            <div className=\"autoComplete-container cancel  reactautocomplete\">\n              <RiskAutoComplete\n                riskDetails={resource14}\n                setFormData={setDetails}\n                getData={resourceFnc}\n                value=\"0\"\n                type=\"Text\"\n                name=\"accountOwnerId\"\n                id=\"accountOwnerId\"\n                // className=\"err cancel\"\n                //fuseOptions={{ keys: [\"id\", \"name\"] }}\n                //resultStringKeyName=\"name\"\n                //resource1={resource1}\n                // resourceFnc={resourceFnc}\n                placeholder=\"Type minimum 3 characters to get the list\"\n                //placeholder=\"\"=\"\"\n                onChangeHandler={(e) => {\n                  setDetails((prevProps) => ({\n                    ...prevProps,\n                    accountOwnerId: e.id,\n                  }));\n                }}\n                onClear={handleClear14}\n                showIcon={false}\n              />\n            </div>\n          </div>\n\n          <div className=\"col-md-3\">\n            <label htmlFor=\"isNewCustomer\">New Logo</label>\n            <div className=\"form-check form-check-inline\">\n              <input\n                className=\"form-check-input cancel\"\n                type=\"radio\"\n                value=\"1\"\n                name=\"isNewCustomer\"\n                id=\"isNewCustomerYes\"\n                checked={details[\"isNewCustomer\"] === \"1\"}\n                onChange={handleNewCustomerChange}\n              />\n              <label\n                className=\"form-check-label cancel\"\n                htmlFor=\"isNewCustomerYes\"\n              >\n                Yes\n              </label>\n            </div>\n            <div className=\"form-check form-check-inline cancel\">\n              <input\n                className=\"form-check-input cancel\"\n                type=\"radio\"\n                value=\"0\"\n                name=\"isNewCustomer\"\n                id=\"isNewCustomerNo\"\n                checked={details[\"isNewCustomer\"] === \"0\"}\n                onChange={handleExistingCustomerChange}\n              />\n              <label\n                className=\"form-check-label cancel\"\n                htmlFor=\"isNewCustomerNo\"\n              >\n                No\n              </label>\n            </div>\n          </div>\n        </div>\n      </div>{\" \"}\n      <div className=\"mb-3 mt-2 container-fluid   customCard\">\n        <h2>Divisions</h2>\n        <div className=\"group-content row\">\n          <div className=\"form-group col-md-3 mb-2\">\n            <label htmlFor=\"dName\">\n              Name&nbsp;<span className=\"error-text\">*</span>\n            </label>\n            <div\n              className=\"textfield\"\n              ref={(ele) => {\n                ref.current[7] = ele;\n              }}\n            >\n              <input\n                type=\"text\"\n                className=\"cancel\"\n                id=\"dName\"\n                name=\"dName\"\n                required\n                onChange={handleChange}\n              />\n            </div>\n          </div>\n          <div className=\"form-group col-md-3 mb-2\">\n            <label htmlFor=\"address\">\n              Address Line&nbsp;<span className=\"error-text\">*</span>\n            </label>\n            <div\n              className=\"textfield\"\n              ref={(ele) => {\n                ref.current[8] = ele;\n              }}\n            >\n              <input\n                type=\"text\"\n                className=\"cancel\"\n                id=\"address\"\n                name=\"address\"\n                required\n                onChange={(e) => {\n                  handleChange1(e);\n                }}\n              />\n            </div>\n          </div>\n          <div className=\"col-md-3 mb-2\">\n            <label>\n              Country&nbsp;<span className=\"error-text\">*</span>\n            </label>\n            <div>\n              <select\n                ref={(ele) => {\n                  ref.current[9] = ele;\n                }}\n                id=\"countryId\"\n                name=\"countryId\"\n                style={{ width: \"100%\", height: \"25px\" }}\n                className=\"text err cancel\"\n                onChange={(e) => {\n                  countryHandler(e);\n                }}\n              >\n                <option key=\"\" value=\"\">\n                  {\"<<Please Select>>\"}\n                </option>\n                {countryId\n                  .sort((a, b) => {\n                    return b.country_name - a.country_name;\n                  })\n                  .map((data, index) => (\n                    <option\n                      key={data.id}\n                      id=\"countryId\"\n                      value={data.id}\n                      selected={details?.countryId == data.id ? true : false}\n                    >\n                      {data.country_name}\n                    </option>\n                  ))}\n              </select>\n            </div>\n          </div>\n          <div className=\"col-md-3 mb-2\">\n            <label>\n              State/Province&nbsp;<span className=\"error-text\">*</span>\n            </label>\n            <div>\n              <select\n                ref={(ele) => {\n                  ref.current[10] = ele;\n                }}\n                id=\"dStateId\"\n                name=\"dStateId\"\n                style={{ width: \"100%\", height: \"25px\" }}\n                className=\"text err cancel\"\n                onChange={(e) => {\n                  stateHandler(e);\n                }}\n                required\n              >\n                <option key=\"\" value=\"\">\n                  {\"<<Please Select>>\"}\n                </option>\n                {finalstates\n                  .sort((a, b) => {\n                    return b.stateId - a.stateId;\n                  })\n                  .map((data1, index) => (\n                    <option\n                      key={data1.country}\n                      id=\"dStateId\"\n                      value={data1.id}\n                      // selected={details?.stateId == data1.id ? true : false}\n                      defaultValue={details?.stateId}\n                    >\n                      {data1.state}\n                    </option>\n                  ))}\n              </select>\n            </div>\n          </div>\n          <div className=\"col-md-3 mb-2\">\n            <label>\n              City&nbsp;<span className=\"error-text\">*</span>\n            </label>\n            <div>\n              <select\n                ref={(ele) => {\n                  ref.current[11] = ele;\n                }}\n                id=\"dCityId\"\n                name=\"dCityId\"\n                style={{ width: \"100%\", height: \"25px\" }}\n                className=\"text cancel err\"\n                onChange={cityIdHandler}\n              >\n                <option key=\"\" value=\"\">\n                  {\"<<Please Select>>\"}\n                </option>\n                {finalcities\n                  .sort((a, b) => {\n                    return b.cityId - a.cityId;\n                  })\n                  .map((data2) => (\n                    <option\n                      key={data2.state}\n                      id=\"dCityId\"\n                      // selected={details?.cityId == data2.id ? true : false}\n                      value={data2.id}\n                    >\n                      {data2.city == \"\" ? \"\" : data2.city}\n                    </option>\n                  ))}\n              </select>\n            </div>\n          </div>\n          <div className=\"form-group col-md-3 mb-2\">\n            <label htmlFor=\"zippostalcode\">ZIP/Postal Code</label>\n            <input\n              name=\"zipCode\"\n              type=\"text\"\n              className=\"cancel\"\n              id=\"zipCode\"\n              //placeholder=\"\"=\"\"\n              maxLength={12}\n              // onChange={handleChange}\n              // onChange={(e) => {\n              //   handleChange1(e);\n              // }}\n              // onKeyDown={(e) => {\n              //   e.preventDefault();\n              // }}\n\n              onKeyDown={(e) =>\n                e.keyCode &&\n                (e.keyCode <= 47 || e.keyCode >= 58) &&\n                e.keyCode != 8 &&\n                e.preventDefault()\n              }\n              onChange={handleChange}\n            />\n          </div>\n          <div className=\"form-group col-md-3 mb-2\">\n            <label htmlFor=\"contactnumber\">Contact Number</label>\n            <input\n              name=\"contact\"\n              type=\"text\"\n              className=\"cancel\"\n              id=\"contact\"\n              //placeholder=\"\"\n              maxLength={20}\n              onKeyDown={(e) =>\n                e.keyCode &&\n                (e.keyCode <= 47 || e.keyCode >= 58) &&\n                e.keyCode != 8 &&\n                e.preventDefault()\n              }\n              onChange={handleChange}\n            />\n          </div>\n        </div>\n      </div>\n      <div className=\"mb-3 mt-2 container-fluid   customCard\">\n        <h2>Engagement</h2>\n        <div className=\"group-content row\">\n          <div className=\"form-group col-md-3 mb-2\">\n            <label htmlFor=\"name\">\n              Name&nbsp;<span className=\"error-text\">*</span>\n            </label>\n            <div\n              className=\"textfield cancel\"\n              ref={(ele) => {\n                ref.current[12] = ele;\n              }}\n            >\n              <input\n                name=\"eName\"\n                type=\"text\"\n                className=\"cancel\"\n                id=\"eName\"\n                //placeholder=\"\"\n                required\n                onChange={handleChange}\n              />\n            </div>\n          </div>\n          <div className=\"form-group col-md-3 mb-2\">\n            <label htmlFor=\"engagementModelId\">\n              Engagement Type&nbsp;<span className=\"error-text\">*</span>\n            </label>\n            <select\n              ref={(ele) => {\n                ref.current[13] = ele;\n              }}\n              className=\"text cancel\"\n              id=\"engagementModelId\"\n              name=\"engagementModelId\"\n              onChange={handleChange}\n            >\n              <option value=\"\"> &lt;&lt;Please Select&gt;&gt;</option>\n              {engagementType.map((Item, index) => (\n                <option key={index} value={Item.id}>\n                  {Item.engagementType}\n                </option>\n              ))}\n            </select>\n          </div>\n          <div className=\"form-group col-md-3 mb-2\">\n            <label htmlFor=\"startDt\">\n              Start Date&nbsp;<span className=\"error-text\">*</span>\n            </label>\n            <div\n              className=\"datepicker\"\n              ref={(ele) => {\n                ref.current[14] = ele;\n              }}\n            >\n              <DatePicker\n                name=\"startDt\"\n                selected={StartDt}\n                id=\"startDt\"\n                className=\"err cancel\"\n                dateFormat=\"dd-MMM-yyyy\"\n                showMonthDropdown\n                showYearDropdown\n                dropdownMode=\"select\"\n                onChange={(e) => {\n                  setDetails((prev) => ({\n                    ...prev,\n                    [\"startDt\"]: moment(e).format(\"yyyy-MM-DD\"),\n                  }));\n                  setStartDt(e);\n                }}\n                onKeyDown={(e) => {\n                  e.preventDefault();\n                }}\n                autoComplete=\"false\"\n              />\n            </div>\n          </div>\n          <div className=\"form-group col-md-3 mb-2\">\n            <label htmlFor=\"endDt\">End Date</label>\n            <DatePicker\n              name=\"endDt\"\n              // selected={EndDt}\n              selected={details.endDt === \"\" ? \"\" : new Date(details.endDt)}\n              id=\"endDt\"\n              className=\"err cancel\"\n              dateFormat=\"dd-MMM-yyyy\"\n              showMonthDropdown\n              showYearDropdown\n              minDate={StartDt ? StartDt : undefined}\n              dropdownMode=\"select\"\n              onChange={(e) => {\n                setDetails((prev) => ({\n                  ...prev,\n                  [\"endDt\"]: moment(e).format(\"yyyy-MM-DD\"),\n                }));\n                setEndDt(e);\n              }}\n              autoComplete=\"false\"\n            />\n          </div>\n          <div className=\"form-group col-md-3 mb-2\">\n            <label htmlFor=\"manager \">\n              Manager&nbsp;<span className=\"error-text\">*</span>\n            </label>\n            <div\n              className=\"autoComplete-container cancel  reactautocomplete\"\n              ref={(ele) => {\n                ref.current[15] = ele;\n              }}\n            >\n              <RiskAutoComplete\n                riskDetails={resource12}\n                setFormData={setDetails}\n                getData={resourceFnc}\n                value=\"0\"\n                type=\"Text\"\n                name=\"managerId\"\n                id=\"managerId\"\n                //fuseOptions={{ keys: [\"id\", \"name\"] }}\n                //resultStringKeyName=\"name\"\n                //resource1={resource1}\n                // resourceFnc={resourceFnc}\n                placeholder=\"Type minimum 3 characters to get the list\"\n                onChangeHandler={(e) => {\n                  setDetails((prevProps) => ({\n                    ...prevProps,\n                    managerId: e.id,\n                  }));\n                }}\n                onClear={handleClear12}\n                showIcon={false}\n              />\n            </div>\n          </div>\n          <div className=\"form-group col-md-3 mb-2\">\n            <label htmlFor=\"executive \">\n              Sales Executive&nbsp;<span className=\"error-text\">*</span>\n            </label>\n            <div\n              className=\"autoComplete-container cancel  reactautocomplete\"\n              ref={(ele) => {\n                ref.current[16] = ele;\n              }}\n            >\n              <RiskAutoComplete\n                riskDetails={resource13}\n                setFormData={setDetails}\n                getData={resourceFnc}\n                value=\"0\"\n                type=\"Text\"\n                name=\"executiveId\"\n                id=\"executiveId\"\n                // className=\"error AutoComplete cancel\"\n                //fuseOptions={{ keys: [\"id\", \"name\"] }}\n                //resultStringKeyName=\"name\"\n                //resource1={resource1}\n                // resourceFnc={resourceFnc}\n                placeholder=\"Type minimum 3 characters to get the list\"\n                // //placeholder=\"\"=\"\"\n                onChangeHandler={(e) => {\n                  setDetails((prevProps) => ({\n                    ...prevProps,\n                    executiveId: e.id,\n                  }));\n                }}\n                onClear={handleClear13}\n                showIcon={false}\n              />\n              {/* </div> */}\n            </div>\n          </div>\n          <div className=\"form-group col-md-3 mb-2\">\n            <label htmlFor=\"contModelId\">Contract Model</label>\n            <select\n              className=\"cancel\"\n              name=\"contModelId\"\n              id=\"contModelId\"\n              onChange={(e) => handleChange(e)}\n            >\n              <option value=\"\"> &lt;&lt;Please Select&gt;&gt;</option>\n              {contractModel\n                .sort((a, b) => a.lkup_name.localeCompare(b.lkup_name))\n                .map((Item, index) => (\n                  <option key={index} value={Item.id}>\n                    {Item.lkup_name}\n                  </option>\n                ))}\n            </select>\n          </div>\n          <div className=\"form-group col-md-3 mb-2\">\n            <label htmlFor=\"companyCostCenter\">Cost Center </label>\n            <input\n              type=\"text\"\n              name=\"companyCostCenterId\"\n              className=\"cancel\"\n              id=\"companyCostCenterId\"\n              //placeholder=\"\"\n              required\n              onChange={handleChange}\n            />\n          </div>\n          <div className=\"form-group col-md-3 mb-2\">\n            <label htmlFor=\"status\">Status</label>\n            <select\n              className=\"\"\n              id=\"engagementStatusId\"\n              name=\"engagementStatusId\"\n              onChange={handleChange}\n            >\n              {/* <option value=\"\"> &lt;&lt;Please Select&gt;&gt;</option> */}\n              <option value=\"1\" selected>\n                Active\n              </option>\n              <option value=\"2\">InActive</option>\n            </select>\n          </div>\n          <div className=\"form-group col-md-3 mb-2\">\n            <label htmlFor=\"currency\">\n              Currency&nbsp;<span className=\"error-text\">*</span>\n            </label>\n            <select\n              className=\"text cancel\"\n              id=\"eCurrency\"\n              name=\"eCurrency\"\n              onChange={(e) => handleChange(e)}\n              ref={(ele) => {\n                ref.current[17] = ele;\n              }}\n            >\n              <option value=\"\"> &lt;&lt;Please Select&gt;&gt;</option>\n              {currency.map((Item, index) => (\n                <option key={index} value={Item.id}>\n                  {Item.currency}\n                </option>\n              ))}\n            </select>\n          </div>\n          <div className=\"form-group col-md-3 mb-2\">\n            <label htmlFor=\"sow\">SOW</label>\n            <input\n              type=\"text\"\n              name=\"sow\"\n              className=\"cancel\"\n              id=\"sow\"\n              //placeholder=\"\"\n              onChange={handleChange}\n            />\n          </div>\n          <div className=\"form-group col-md-3 mb-2\">\n            <label htmlFor=\"sfOpportunityLink\">\n              Salesforce Opportunity Link\n            </label>\n            <input\n              type=\"text\"\n              name=\"sfOpportunityLink\"\n              className=\"cancel\"\n              id=\"sfOpportunityLink\"\n              onChange={handleChange}\n            />\n          </div>\n          <div className=\"form-group col-md-3 mb-2\">\n            <label htmlFor=\"poNumber\">PO Number</label>\n            <div className=\"poBtn\" id=\"poNumber\">\n              <MdAddCircleOutline />\n              <span\n                className=\"poNumber\"\n                style={{ cursor: \"pointer\" }}\n                onClick={() => {\n                  clickHanlderPopUp();\n                }}\n              >\n                Add/Edit PO Number\n              </span>\n            </div>\n          </div>\n\n          <div className=\"form-group col-md-3 mb-2\">\n            <label htmlFor=\"companyId\">\n              Eng.Company&nbsp;<span className=\"error-text\">*</span>\n            </label>\n            <select\n              className=\"text cancel\"\n              name=\"companyId\"\n              id=\"companyId\"\n              onChange={(e) => handleChange(e)}\n              ref={(ele) => {\n                ref.current[18] = ele;\n              }}\n            >\n              <option value=\"\"> &lt;&lt;Please Select&gt;&gt;</option>\n              {engCompany\n                .sort((a, b) => a.Company.localeCompare(b.Company))\n                .map((Item, index) => (\n                  <option key={index} value={Item.id}>\n                    {\" \"}\n                    {Item.Company}\n                  </option>\n                ))}\n            </select>\n          </div>\n          <div className=\"group mb-3 container-fluid   customCard\">\n            <h2>\n              <RiProfileLine /> Billing Information\n            </h2>\n            <div className=\"row cancel\">\n              <div className=\"col-md-4\">\n                <h2>Bill to Details</h2>\n                <div className=\"group-content row\">\n                  <div className=\"mb-2 col-md-12\">\n                    <div className=\"form-group row\">\n                      <label className=\"col-md-5\" htmlFor=\"name\">\n                        Attn.\n                      </label>\n                      <span className=\"col-1 \">:</span>\n                      <div className=\"col-6\">\n                        <input\n                          type=\"text\"\n                          className=\" cancel\"\n                          id=\"attn\"\n                          name=\"attn\"\n                          onChange={handleChange}\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"mb-2 col-md-12\">\n                    <div className=\"form-group row\">\n                      <label className=\"col-5\" htmlFor=\"name-input-inline\">\n                        Address Line\n                      </label>\n                      <span className=\"col-1 \">:</span>\n                      <div className=\"col-6\">\n                        <p className=\"col-6\" id=\"name-input-inline\">\n                          {data}\n                        </p>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"mb-2 col-md-12\">\n                    <div className=\"form-group row\">\n                      <label className=\"col-5\" htmlFor=\"name-input-inline\">\n                        City\n                      </label>\n                      <span className=\"col-1 \">:</span>\n                      <div className=\"col-6\">\n                        <p className=\"col-12\" id=\"name-input-inline\">\n                          {cCName}\n                        </p>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"mb-2 col-md-12\">\n                    <div className=\"form-group row\">\n                      <label className=\"col-5\" htmlFor=\"name-input-inline\">\n                        State/Province\n                      </label>\n                      <span className=\"col-1 \">:</span>\n                      <div className=\"col-6\">\n                        <p className=\"col-12\" id=\"name-input-inline\">\n                          {sName}\n                        </p>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"mb-2 col-md-12\">\n                    <div className=\"form-group row\">\n                      <label className=\"col-5\" htmlFor=\"name-input-inline\">\n                        ZIP/Postal Code\n                      </label>\n                      <span className=\"col-1 \">:</span>\n                      <div className=\"col-6\">\n                        <p className=\"col-6\" id=\"name-input-inline\">\n                          {zip}\n                        </p>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"mb-2 col-md-12\">\n                    <div className=\"form-group row\">\n                      <label className=\"col-5\" htmlFor=\"name-input-inline\">\n                        Country\n                      </label>\n                      <span className=\"col-1 \">:</span>\n                      <div className=\"col-6\">\n                        <p className=\"col-6\" id=\"name-input-inline\">\n                          {cName}\n                        </p>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"col-md-8\">\n                <h2>Invoice Details</h2>\n                <div className=\"row cancel\">\n                  <div className=\"col-md-6 mt-2\">\n                    <div className=\" row \">\n                      <div className=\" col-md-12\">\n                        <div className=\"frmo-group row mb-2\">\n                          <label className=\"col-5\" htmlFor=\"paymentTermsId\">\n                            {\" \"}\n                            Payment Terms&nbsp;\n                            <span className=\"error-text\">*</span>\n                          </label>\n                          <span className=\"col-1\">:</span>\n                          <div className=\"col-6\">\n                            <select\n                              ref={(ele) => {\n                                ref.current[19] = ele;\n                              }}\n                              className=\"text cancel\"\n                              name=\"paymentTermsId\"\n                              id=\"paymentTermsId\"\n                              onChange={(e) => handleChange(e)}\n                            >\n                              <option value=\"\">\n                                {\" \"}\n                                &lt;&lt;Please Select&gt;&gt;\n                              </option>\n                              {paymentTerm.map((Item, index) => (\n                                <option key={index} value={Item.id}>\n                                  {Item.paymentTerms}\n                                </option>\n                              ))}\n                            </select>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                    <div className=\" row \">\n                      <div className=\" col-md-12 \">\n                        <div className=\"frmo-group row mb-2\">\n                          <label className=\"col-5\" htmlFor=\"invoiceCycleId\">\n                            {\" \"}\n                            Invoice Cycle&nbsp;\n                            <span className=\"error-text\">*</span>\n                          </label>\n                          <span className=\"col-1\">:</span>\n                          <div className=\"col-6\">\n                            <div className=\"d-flex\">\n                              {details.invoiceCycleId === \"754\" && (\n                                <div className=\"mr-2\">\n                                  <select\n                                    className=\"error enteredDetails cancel text\"\n                                    name=\"invoiceCycleId\"\n                                    id=\"invoiceCycleId\"\n                                    onChange={(e) => handleChange(e)}\n                                    ref={(ele) => {\n                                      ref.current[20] = ele;\n                                    }}\n                                  >\n                                    <option value=\"\">\n                                      &lt;&lt;Please Select&gt;&gt;\n                                    </option>\n                                    {invoiceCycle?.map((Item) => (\n                                      <option\n                                        key={Item.lkup_type_group_id}\n                                        selected={\n                                          Item.id == details.invoiceCycleId\n                                            ? true\n                                            : false\n                                        }\n                                        value={Item.id}\n                                      >\n                                        {Item.invoiceCycle}\n                                      </option>\n                                    ))}\n                                  </select>\n                                </div>\n                              )}\n                              {details.invoiceCycleId === \"754\" && (\n                                <div>\n                                  <select\n                                    className=\"error enteredDetails cancel text\"\n                                    // name=\"custom\"\n                                    // id=\"custom\"\n                                    // value={details.invoiceCycleId}\n                                    value={selectedValue}\n                                    onChange={(e) => handleChangeCustom(e)}\n                                    ref={(ele) => {\n                                      ref.current[20] = ele;\n                                    }}\n                                  >\n                                    <option value=\"\">\n                                      {\"<<Please Select>>\"}\n                                    </option>\n                                    {[...Array(31)].map((_, index) => (\n                                      <option\n                                        key={index + 1}\n                                        value={index + 1}\n                                        // selected={\n                                        //   index + 1 ===\n                                        //   parseInt(details.invoiceCycleId)\n                                        // }\n                                      >\n                                        {index + 1}\n                                      </option>\n                                    ))}\n                                  </select>\n                                </div>\n                              )}\n                            </div>\n                            {details.invoiceCycleId !== \"754\" && (\n                              <select\n                                className=\"error enteredDetails cancel text\"\n                                name=\"invoiceCycleId\"\n                                id=\"invoiceCycleId\"\n                                onChange={(e) => handleChange(e)}\n                                ref={(ele) => {\n                                  ref.current[20] = ele;\n                                }}\n                              >\n                                <option value=\"\">\n                                  &lt;&lt;Please Select&gt;&gt;\n                                </option>\n                                {invoiceCycle?.map((Item) => (\n                                  <option\n                                    key={Item.lkup_type_group_id}\n                                    selected={\n                                      Item.id == details.invoiceCycleId\n                                        ? true\n                                        : false\n                                    }\n                                    value={Item.id}\n                                  >\n                                    {Item.invoiceCycle}\n                                  </option>\n                                ))}\n                              </select>\n                            )}\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n\n                    <div className=\" row \">\n                      <div className=\" col-md-12 \">\n                        <div className=\"form-group row mb-2\">\n                          <label className=\"col-5\" htmlFor=\"invoiceCultureId\">\n                            Invoice Culture&nbsp;\n                            <span className=\"error-text\">*</span>\n                          </label>\n                          <span className=\"col-1 \">:</span>\n                          <div className=\"col-6\">\n                            <select\n                              ref={(ele) => {\n                                ref.current[21] = ele;\n                              }}\n                              className=\"text cancel\"\n                              name=\"invoiceCultureId\"\n                              id=\"invoiceCultureId\"\n                              onChange={(e) => handleChange(e)}\n                            >\n                              <option value=\"\">\n                                {\" \"}\n                                &lt;&lt;Please Select&gt;&gt;\n                              </option>\n                              {invoiceCulture.map((Item, index) => (\n                                <option key={index} value={Item.id}>\n                                  {Item.invoiceTime}\n                                </option>\n                              ))}\n                            </select>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n\n                    <div className=\" row \">\n                      <div className=\" col-md-12 \">\n                        <div className=\"form-group row mb-2\">\n                          <label className=\"col-5\" htmlFor=\"templateId\">\n                            {\" \"}\n                            Invoice Template&nbsp;\n                            <span className=\"error-text\">*</span>\n                          </label>\n                          <span className=\"col-1 \">:</span>\n                          <div className=\"col-6\">\n                            <select\n                              ref={(ele) => {\n                                ref.current[22] = ele;\n                              }}\n                              className=\"text cancel\"\n                              name=\"invoiceTemplateId\"\n                              id=\"invoiceTemplateId\"\n                              onChange={(e) => handleChange(e)}\n                            >\n                              <option value=\"\">\n                                {\" \"}\n                                &lt;&lt;Please Select&gt;&gt;\n                              </option>\n                              {invoiceTemplate.map((Item, index) => (\n                                <option key={index} value={Item.id}>\n                                  {Item.invoiceTemplate}\n                                </option>\n                              ))}\n                            </select>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                    <div className=\" row \">\n                      <div className=\" col-md-12 \">\n                        <div className=\"form-group row mb-2\">\n                          <label className=\"col-5\" htmlFor=\"timeId\">\n                            Invoice Time&nbsp;\n                            <span className=\"error-text\">*</span>\n                          </label>\n                          <span className=\"col-1\">:</span>\n                          <div className=\"col-6\">\n                            <select\n                              ref={(ele) => {\n                                ref.current[23] = ele;\n                              }}\n                              className=\"text cancel\"\n                              name=\"invoiceTimeId\"\n                              id=\"invoiceTimeId\"\n                              onChange={(e) => handleChange(e)}\n                            >\n                              <option value=\"\">\n                                {\" \"}\n                                &lt;&lt;Please Select&gt;&gt;\n                              </option>\n                              {invoiceTime.map((Item, index) => (\n                                <option key={index} value={Item.id}>\n                                  {Item.invoiceTime}\n                                </option>\n                              ))}\n                            </select>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n\n                  <div className=\"col-md-6\">\n                    <div className=\"row \">\n                      <div className=\"col-md-12 mt-2\">\n                        <label htmlFor=\"billingInstructions\">\n                          Billing Instructions\n                        </label>\n                        <textarea\n                          type=\"text\"\n                          className=\"cancel\"\n                          name=\"billingInstructions\"\n                          id=\"billingInstructions\"\n                          rows={3}\n                          required\n                          onChange={handleChange}\n                        />\n                      </div>\n                    </div>\n                    <div className=\"row \">\n                      <div className=\"form-group col-md-12\">\n                        <label htmlFor=\"clientMessage\">Client Message</label>\n                        <textarea\n                          className=\"cancel\"\n                          name=\"clientMessage\"\n                          id=\"clientMessage\"\n                          //placeholder=\"\"=\"\"\n                          rows={2}\n                          required\n                          defaultValue={\"\"}\n                          onChange={handleChange}\n                        />\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            <div className=\"row\">\n              <div className=\"col-md-4 group mb-3 container-fluid   customCard\">\n                <div className=\"group-content row \">\n                  <h2>Contract</h2>\n                  <div className=\" row \">\n                    <div className=\"mb-2 col-md-12\">\n                      <div className=\"form-group row\">\n                        <label\n                          className=\"col-5\"\n                          htmlFor=\"Contract Terms -select\"\n                        >\n                          {\" \"}\n                          Contract Terms&nbsp;\n                          <span className=\"error-text\">*</span>\n                        </label>\n                        <span className=\"col-1 \">:</span>\n                        <div className=\"col-6\">\n                          <select\n                            ref={(ele) => {\n                              ref.current[24] = ele;\n                            }}\n                            className=\"text cancel\"\n                            name=\"contractTermId\"\n                            id=\"contractTermId\"\n                            onChange={(e) => handleChange(e)}\n                          >\n                            <option value=\"\">\n                              {\" \"}\n                              &lt;&lt;Please Select&gt;&gt;\n                            </option>\n                            {contract.map((Item, index) => (\n                              <option key={index} value={Item.id}>\n                                {Item.contractTerm}\n                              </option>\n                            ))}\n                          </select>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\" row \">\n                    <div className=\"mb-2 col-md-12\">\n                      <div className=\"form-group row\">\n                        <label\n                          className=\"col-5\"\n                          htmlFor=\"Cost Contract Terms-select\"\n                        >\n                          {\" \"}\n                          Cost Contract Terms\n                        </label>\n                        <span className=\"col-1 \">:</span>\n                        <div className=\"col-6\">\n                          <select\n                            className=\"cancel\"\n                            name=\"costContractTermId\"\n                            id=\"costContractTermId\"\n                            onChange={(e) => handleChange(e)}\n                          >\n                            <option value=\"\">\n                              {\" \"}\n                              &lt;&lt;Please Select&gt;&gt;\n                            </option>\n                            {contract.map((Item, index) => (\n                              <option key={index} value={Item.id}>\n                                {Item.contractTerm}\n                              </option>\n                            ))}\n                          </select>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n\n                  <div className=\" row \">\n                    <div className=\"mb-2 col-md-12\">\n                      <div className=\"form-group row\">\n                        <label\n                          className=\"col-5\"\n                          htmlFor=\"Revenue Recognization -select\"\n                        >\n                          {\" \"}\n                          Revenue Recognization{\" \"}\n                        </label>\n                        <span className=\"col-1 \">:</span>\n                        <div className=\"col-6\">\n                          <select\n                            className=\"cancel\"\n                            name=\"revenueRecognitionId\"\n                            id=\"revenueRecognitionId\"\n                            onChange={handleChange}\n                          >\n                            <option value=\"\">\n                              {\" \"}\n                              &lt;&lt;Please Select&gt;&gt;\n                            </option>\n                            <option value={1}>Revenue Recognization 1</option>\n                            <option value={2}>Revenue Recognization 2</option>\n                          </select>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n\n                  <div className=\" row \">\n                    <div className=\"mb-2 col-md-12\">\n                      <div className=\"form-group row\">\n                        <label className=\"col-5\" htmlFor=\"customerDiscount\">\n                          {\" \"}\n                          Discount (%)\n                        </label>\n                        <span className=\"col-1 \">:</span>\n\n                        <div className=\"col-6\">\n                          <input\n                            type=\"text\"\n                            className=\"cancel\"\n                            name=\"customerDiscount\"\n                            id=\"customerDiscount\"\n                            maxLength={6}\n                            onKeyDown={(e) =>\n                              e.keyCode &&\n                              (e.keyCode <= 47 || e.keyCode >= 58) &&\n                              e.keyCode != 8 &&\n                              e.preventDefault()\n                            }\n                            onChange={handleChange}\n                          />\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"col-md-4 group mb-3 container-fluid   customCard\">\n                <div className=\"group-content row \">\n                  <h2>Tax Structure</h2>\n                  <div className=\" row \">\n                    <div className=\"mb-2 col-md-12 \">\n                      <div className=\"form-group row\">\n                        <label className=\"col-5\" htmlFor=\"percentage\">\n                          Tax Type 1\n                        </label>\n                        <span className=\"col-1 \">:</span>\n                        <div className=\"col-2\">\n                          <input\n                            type=\"text\"\n                            name=\"percentage\"\n                            className=\"cancel\"\n                            id=\"percentage\"\n                          />\n                        </div>\n                        <div className=\"col-2 row\">\n                          <input\n                            type=\"text\"\n                            className=\"cancel\"\n                            id=\"percentage\"\n                            name=\"percentage\"\n                          />\n                        </div>\n                        <span class=\"col-2 ml-2 row\">%</span>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\" row \">\n                    <div className=\"mb-2 col-md-12\">\n                      <div className=\"form-group row\">\n                        <label className=\"col-5\" htmlFor=\"percentage\">\n                          Tax Type 2\n                        </label>\n                        <span className=\"col-1\">:</span>\n                        <div className=\"col-2 \">\n                          <input\n                            type=\"text\"\n                            name=\"percentage\"\n                            className=\"cancel\"\n                            id=\"percentage\"\n                          />\n                        </div>\n                        <div className=\"col-2 row\">\n                          <input\n                            type=\"text\"\n                            className=\" cancel\"\n                            id=\"percentage\"\n                            name=\"percentage\"\n                          />\n                        </div>\n                        <span className=\"col-2 ml-2 row\">%</span>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\" row \">\n                    <div className=\"mb-2 col-md-12 \">\n                      <div className=\"form-group row\">\n                        <label className=\"col-5\" htmlFor=\"percentage\">\n                          Tax Type 3\n                        </label>\n                        <span className=\"col-1 \">:</span>\n                        <div className=\"col-2\">\n                          <input\n                            type=\"text\"\n                            name=\"percentage\"\n                            className=\" cancel\"\n                            id=\"percentage\"\n                          />\n                        </div>\n                        <div className=\"col-2 row\">\n                          <input\n                            type=\"text\"\n                            className=\" cancel\"\n                            id=\"percentage\"\n                            name=\"percentage\"\n                          />\n                        </div>\n                        <span className=\"col-2 ml-2 row\">%</span>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div className=\"col-md-4 group mb-3 container-fluid   customCard\">\n                <div className=\"group-content row\">\n                  <h2>Mailing Details</h2>\n                  <div className=\" row \">\n                    <div className=\"mb-2 col-md-12 \">\n                      <div className=\"form-group row\">\n                        <label className=\"col-5\" htmlFor=\"toEmails\">\n                          To\n                        </label>\n                        <span className=\"col-1 \">:</span>\n                        <div className=\"col-6\">\n                          <input\n                            type=\"text\"\n                            name=\"toEmails\"\n                            className=\"cancel\"\n                            id=\"toEmails\"\n                            onChange={handleChange}\n                          />\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n\n                  <div className=\"row \">\n                    <div className=\"mb-2 col-md-12 \">\n                      <div className=\"form-group row\">\n                        <label className=\"col-5\" htmlFor=\"ccEmails\">\n                          CC\n                        </label>\n                        <span className=\"col-1 \">:</span>\n                        <div className=\"col-6\">\n                          <input\n                            type=\"text\"\n                            name=\"ccEmails\"\n                            className=\"cancel\"\n                            id=\"ccEmails\"\n                            onChange={handleChange}\n                          />\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\" row \">\n                    <div className=\"mb-2 col-md-12 \">\n                      <div className=\"form-group row\">\n                        <label className=\"col-5\" htmlFor=\"bccEmails\">\n                          BCC\n                        </label>\n                        <span className=\"col-1 \">:</span>\n                        <div className=\"col-6\">\n                          <input\n                            type=\"text\"\n                            name=\"bccEmails\"\n                            className=\"cancel\"\n                            id=\"bccEmails\"\n                            onChange={handleChange}\n                          />\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\" row \">\n                    <div className=\"mb-2 col-md-12\">\n                      <div className=\"form-group row\">\n                        <label className=\"col-5\" htmlFor=\"emailTemplateId\">\n                          Email Template\n                        </label>\n                        <span className=\"col-1 \">:</span>\n                        <div className=\"col-6\">\n                          <select\n                            className=\"cancel\"\n                            id=\"emailTemplateId\"\n                            name=\"emailTemplateId\"\n                            onChange={handleChange}\n                          >\n                            <option value=\"\">\n                              {\" \"}\n                              &lt;&lt;Please Select&gt;&gt;\n                            </option>\n                          </select>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\" form-group col-md-12 col-sm-12 col-xs-12 btn-container center my-3\">\n        <button\n          className=\"btn btn-primary\"\n          type=\"submit\"\n          onClick={() => {\n            handlePostDetails();\n          }}\n        >\n          <VscSave /> Save\n        </button>\n        <button\n          className=\"btn btn-secondary\"\n          // onClick={() => {\n          //   handleCancel2();\n          // }}\n          onClick={() => {\n            navigate(`/customer/create`, {\n              state: { btnState: \"create\" },\n            });\n            window.location.reload();\n          }}\n        >\n          <ImCross /> Cancel\n        </button>\n      </div>\n      {buttonPopup ? (\n        <PONumberPopup\n          buttonPopup={buttonPopup}\n          setButtonPopup={setButtonPopup}\n          handleChange2={handleChange}\n          handleAdd={handleAdd}\n          addList={addList}\n          setAddList={setAddList}\n          finalState={finalState}\n        />\n      ) : (\n        \"\"\n      )}\n      {clickButtonPopUp ? (\n        <EmailPopUp\n          clickButtonPopUp={clickButtonPopUp}\n          setClickButtonPopUp={setClickButtonPopUp}\n          handleChange1={handleChange1}\n          handleAddEmail={handleAddEmail}\n          addList1={addList1}\n          setAddList1={setAddList1}\n          finalState1={finalState1}\n          details={details}\n          setDetails={setDetails}\n          setDisplayTextEmails={setDisplayTextEmails}\n          displayTextEmails={displayTextEmails}\n        />\n      ) : (\n        \"\"\n      )}\n    </div>\n  );\n}\n\nexport default CusCreate;\n","import React, { useEffect, useRef, useState } from \"react\";\nimport { MdOutlinePlaylistAdd } from \"react-icons/md\";\nimport { AiFillDelete, AiFillWarning } from \"react-icons/ai\";\nimport { CModal, CModalBody, CModalHeader, CModalTitle } from \"@coreui/react\";\nimport { BiSave } from \"react-icons/bi\";\n\nfunction isValidEmail(email) {\n  // Basic email format validation using a regular expression\n  const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n  return emailRegex.test(email);\n}\n\nfunction EmailPopUp(props) {\n  const {\n    clickButtonPopUp,\n    setClickButtonPopUp,\n    handleChange1,\n    handleAddEmail,\n    setDetails,\n    addList,\n    setAddList,\n    finalState1,\n    setDisplayTextEmails,\n    displayTextEmails,\n    setFinalState1,\n  } = props;\n\n  const [displayState1, setDisplayState1] = useState(null);\n  const [validationmessage, setValidationMessage] = useState(\"\");\n\n  const [mailObjState, setMailObjState] = useState({});\n\n  const addHandler = () => {\n    const emailInput = ref.current[0].querySelector(\"input\");\n    const email = emailInput.value.trim();\n\n    if (!email) {\n      setValidationMessage(\"Please Provide Email\");\n      setTimeout(() => {\n        setValidationMessage(\"\");\n      }, 3000);\n      return;\n    }\n\n    if (!isValidEmail(email)) {\n      setValidationMessage(\"Please Provide Proper Email\");\n      setTimeout(() => {\n        setValidationMessage(\"\");\n      }, 3000);\n      return;\n    }\n\n    setMailObjState((prev) => ({ ...prev, [email]: email }));\n    setFinalState1((prev) => ({ ...prev, [email]: email }));\n\n    handleAddEmail();\n    DisplayList();\n    emailInput.value = \"\";\n  };\n\n  const handleSubmit = () => {\n    setClickButtonPopUp(false);\n  };\n\n  useEffect(() => {\n    DisplayList();\n  }, [finalState1]);\n\n  // const checkedData = (e, data) => {\n  //   let initialData = displayTextEmails;\n  //   if (e.target.checked) {\n  //     initialData.push(data);\n  //   } else {\n  //     let index = initialData.indexOf(data);\n  //     initialData.splice(index, 1);\n  //   }\n\n  //   setDisplayTextEmails(initialData);\n  // };\n\n  const DisplayList = () => {\n    if (finalState1 === undefined || finalState1 === null) {\n      return null;\n    }\n\n    setDisplayState1(() => {\n      return Object.keys(finalState1).map((d, i) => {\n        return (\n          <div key={i}>\n            {/* <input\n              // type=\"checkbox\"\n              onClick={(e) => {\n                checkedData(e, finalState1[d]);\n              }}\n            /> */}\n            {finalState1[d]}\n            <AiFillDelete\n              onClick={() => {\n                delete finalState1[d];\n                DisplayList();\n              }}\n            />\n          </div>\n        );\n      });\n    });\n  };\n\n  const ref = useRef([]);\n  return (\n    <div>\n      <CModal\n        alignment=\"center\"\n        backdrop=\"static\"\n        size=\"sm\"\n        visible={clickButtonPopUp}\n        onClose={() => {\n          setClickButtonPopUp(false);\n        }}\n      >\n        <CModalHeader className=\"hgt22\" style={{ cursor: \"all-scroll\" }}>\n          <CModalTitle>\n            <span className=\"ft16\"> Client Email </span>\n          </CModalTitle>\n        </CModalHeader>\n        <CModalBody>\n          {validationmessage && (\n            <div className=\"statusMsg error\">\n              <AiFillWarning /> {validationmessage}\n            </div>\n          )}\n          <div className=\"group-content row\">\n            <div className=\" col-md-12 row mb-2\">\n              <div className=\"col-md-8\">\n                <div\n                  className=\"textfield\"\n                  ref={(ele) => {\n                    ref.current[0] = ele;\n                  }}\n                >\n                  <input\n                    className=\"col-md-12\"\n                    type=\"email\"\n                    id=\"customerEmails\"\n                    name=\"customerEmails\"\n                    placeholder=\"Enter Email\"\n                    onChange={(e) => {\n                      handleChange1(e);\n                    }}\n                  ></input>\n                </div>\n              </div>\n              <button\n                type=\"submit\"\n                className=\"btn btn-primary col-4\"\n                onClick={() => {\n                  addHandler();\n                }}\n              >\n                <i className=\"fa fa-plus\" aria-hidden=\"true\"></i>\n                <MdOutlinePlaylistAdd /> Add\n              </button>\n            </div>\n            {/* {Object.keys(mailObjState).map((d) => d)} */}\n            <div className=\"row\">{displayState1}</div>\n            {/* <div className=\"col-md-1\"></div> */}\n            {/* <button\n              className=\" col-md-4 btn btn-primary\"\n              onClick={handleSubmit}\n            >\n              <BiSave /> Select\n            </button> */}\n          </div>\n        </CModalBody>\n      </CModal>\n    </div>\n  );\n}\n\nexport default EmailPopUp;\n","import { MdOutlinePlaylistAdd } from \"react-icons/md\";\nimport { AiFillDelete, AiFillWarning } from \"react-icons/ai\";\nimport { CModal, CModalBody, CModalHeader, CModalTitle } from \"@coreui/react\";\nimport { useEffect, useRef, useState } from \"react\";\nimport GlobalValidation from \"../ValidationComponent/GlobalValidation\";\n\nfunction PONumberPopup(props) {\n  const {\n    buttonPopup,\n    setButtonPopup,\n    handleChange2,\n    handleAdd,\n    finalState,\n    details,\n  } = props;\n\n  const [displayState, setDisplayState] = useState(null);\n  const [validationmessage, setValidationMessage] = useState(false);\n\n  const addHandler = async () => {\n    let valid = GlobalValidation(ref);\n\n    if (valid) {\n      setValidationMessage(true);\n      return;\n    }\n\n    await handleAdd();\n    DisplayList();\n    document.getElementById(\"poNumber\").value = \"\";\n  };\n\n  useEffect(() => {\n    DisplayList();\n  }, [finalState]);\n\n  const DisplayList = () => {\n    setDisplayState(() => {\n      return Object.keys(finalState).map((d, i) => {\n        return (\n          <div key={i}>\n            <AiFillDelete\n              cursor={\"Pointer\"}\n              onClick={() => {\n                delete finalState[d];\n                DisplayList();\n              }}\n            />\n            {finalState[d]}\n          </div>\n        );\n      });\n    });\n  };\n\n  const ref = useRef([]);\n\n  return (\n    <div>\n      <CModal\n        alignment=\"center\"\n        backdrop=\"static\"\n        size=\"sm\"\n        visible={buttonPopup}\n        onClose={() => {\n          setButtonPopup(false);\n        }}\n      >\n        <CModalHeader className=\"\" style={{ cursor: \"all-scroll\" }}>\n          <CModalTitle>\n            <span className=\"\"> PO Numbers</span>\n          </CModalTitle>\n        </CModalHeader>\n        <CModalBody>\n          {validationmessage === true ? (\n            <div className=\"statusMsg error\">\n              {\" \"}\n              <AiFillWarning /> Please enter PO Number\n            </div>\n          ) : (\n            \"\"\n          )}\n\n          <div className=\"group-content row\">\n            <div className=\" col-md-12 row mb-2\">\n              <div\n                className=\"textfield col-md-8\"\n                ref={(ele) => {\n                  ref.current[0] = ele;\n                }}\n              >\n                <input\n                  className=\"col-md-12\"\n                  type=\"text\"\n                  id=\"poNumber\"\n                  name=\"poNumber\"\n                  placeholder=\"Enter PO\"\n                  onChange={(e) => {\n                    handleChange2(e);\n                  }}\n                  onKeyDown={(event) => {\n                    if (event.code == \"Space\" && !details.poNumber)\n                      event.preventDefault();\n                  }}\n                  required\n                />\n              </div>\n\n              <button\n                type=\"submit\"\n                className=\"btn btn-primary col-4\"\n                onClick={() => {\n                  addHandler();\n                }}\n              >\n                <i className=\"fa fa-plus\" aria-hidden=\"true\"></i>\n                <MdOutlinePlaylistAdd /> Add\n              </button>\n            </div>\n            <div className=\"row\">{displayState}</div>\n          </div>\n        </CModalBody>\n      </CModal>\n    </div>\n  );\n}\n\nexport default PONumberPopup;\n","import React from \"react\";\nimport { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport { ReactSearchAutocomplete } from \"react-search-autocomplete\";\n\nfunction RiskAutoComplete(props) {\n  const {\n    riskDetails,\n    getData,\n    setFormData,\n    editedData,\n    formEditData,\n    onChangeHandler,\n    refArr,\n    setUsername,\n    name,\n    id,\n    value,\n    onClear,\n    inputSearchString,\n  } = props;\n  const [item, setItem] = useState([]);\n\n  // console.log(\"in line 10\");\n  // console.log(props);\n  // console.log(refArr);\n\n  useEffect(() => {\n    // console.log(item);\n  }, [item]);\n\n  const handleClear = (edit) => {\n    setFormData((prevProps) => ({ ...prevProps, [name]: \"\" }));\n    console.log(name);\n  };\n  useEffect(() => {}, [riskDetails]);\n  // console.log(value);\n  {\n    return (\n      <>\n        <div className=\"autoComplete-container\">\n          {value == \"UpdateBillingRate\" ? (\n            <ReactSearchAutocomplete\n              items={riskDetails}\n              type=\"Text\"\n              name={name}\n              inputSearchString={formEditData?.assigned_to}\n              id={id}\n              className=\"err\"\n              riskDetails={riskDetails}\n              getData={getData}\n              onClear={onClear}\n              placeholder=\"Type minimum 3 characters\"\n              onChange={(e) => {\n                onChangeHandler(e);\n                console.log(\"789------------------------\");\n              }}\n              // setSelectEmployee={setSelectEmployee}\n              onSelect={(e) => {\n                setFormData((prevProps) => ({ ...prevProps, [name]: e.id }));\n\n                setFormData((prevProps) => ({\n                  ...prevProps,\n                  [\"Resname\"]: e.name,\n                }));\n              }}\n              showIcon={false}\n            />\n          ) : value == \"EngagementS\" ? (\n            <ReactSearchAutocomplete\n              items={riskDetails}\n              type=\"Text\"\n              name={name}\n              inputSearchString={formEditData?.assigned_to}\n              id={id}\n              className=\"err\"\n              riskDetails={riskDetails}\n              getData={getData}\n              onClear={handleClear}\n              placeholder=\"Type minimum 3 characters\"\n              onChange={(e) => {\n                onChangeHandler(e);\n              }}\n              // setSelectEmployee={setSelectEmployee}\n              onSelect={(e) => {\n                setFormData((prevProps) => ({ ...prevProps, [name]: e.id }));\n                // console.log(e.id);\n              }}\n              showIcon={false}\n              showNoResults={true}\n              showNoResultsText=\"<<ALL>>\"\n            />\n          ) : (\n            <div\n              className=\"auto autocomplete\"\n              id=\"auto\"\n              ref={(ele) => {\n                if (refArr != undefined) {\n                  refArr.current[0] = ele;\n                }\n              }}\n            >\n              <ReactSearchAutocomplete\n                items={riskDetails}\n                type=\"Text\"\n                name={name}\n                placeholder=\"Type minimum 3 characters\"\n                inputSearchString={inputSearchString}\n                id={id}\n                className=\"err\"\n                onClear={onClear}\n                riskDetails={riskDetails}\n                getData={getData}\n                onChange={(e) => {\n                  onChangeHandler(e);\n                  console.log(\"123---------------\");\n                }}\n                // setSelectEmployee={setSelectEmployee}\n                onSelect={(e) => {\n                  setFormData((prevProps) => ({ ...prevProps, [name]: e.id }));\n                }}\n                showIcon={false}\n              />\n            </div>\n          )}\n        </div>\n        <span>{item.name}</span>\n      </>\n    );\n  }\n}\nexport default RiskAutoComplete;\n"],"names":["useState","setlogged","allCustomers","setAllCustomers","loggedUserId","localStorage","getItem","baseUrl","environment","engagementType","setEngagementType","contract","setContract","paymentTerm","setPaymentTerm","invoiceCycle","setInvoiceCycle","invoiceCulture","setInvoiceCulture","invoiceTemplate","setInvoiceTemplate","invoiceTime","setInvoiceTime","engCompany","setEngCompany","currency","setCurrency","contractModel","setContractModel","projectcategory","setProjectCategory","resource","setResource","resource1","setResource1","resource2","setResource2","resource3","setResource3","resource4","setResource4","resource5","setResource5","resource6","setResource6","resource7","setResource7","resource8","setResource8","resource9","setResource9","resource10","setResource10","resource11","setResource11","resource12","setResource12","resource13","setResource13","resource14","setResource14","navigate","useNavigate","month","setMonth","salesTerritories","setSalesTerritories","classification","setClassification","industryType","setIndustryType","size","setSize","buttonPopup","setButtonPopup","addList","setAddList","addList1","setAddList1","data","setData","zip","setZip","countryId","setcountryId","cCountryId","setcCountryId","sName","setSName","cCName","setCCName","states","setStates","finalstates","setFinalStates","cities","setCities","finalcities","setFinalCities","setEndDt","StartDt","setStartDt","postDetails","setPostDetails","clickButtonPopUp","setClickButtonPopUp","Successvalidationmessage","setSuccessvalidationmessage","message","setMessage","setDisplayCountry","displayTextEmails","setDisplayTextEmails","cust","setCust","uniqueMessage","setUniqueMessage","finalState","setFinalState","finalState1","setFinalState1","poNumber","onChangeState","customerEmails","onChangeState1","selectedValue","setSelectedValue","loggedId","fullName","salesPersonId","cslId","cslHeadId","acslId","salesTerritoryId","typProjCatId","typIndustryId","typCustStatusId","website","sfAccountLink","phone","fax","custReferenceable","typClassificationId","clientPartnerId","clId","deliveryPartnerId","deliveryPartnerHeadId","engagementPartnerId","talentPartnerId","projectCoordinatorId","sqaId","accountOwnerId","isNewCustomer","dName","address","contact","dStateId","dCityId","zipCode","eName","engagementModelId","startDt","endDt","managerId","executiveId","companyCostCenterId","engagementStatusId","eCurrency","sow","sfOpportunityLink","contModelId","eState","eCity","attn","paymentTermsId","invoiceCycleId","invoiceCultureId","invoiceTemplateId","invoiceTimeId","billingInstructions","clientMessage","contractTermId","costContractTermId","revenueRecognitionId","customerDiscount","emailTemplateId","toEmails","ccEmails","bccEmails","ciInvoiceForId","ciCurrencyId","isExpenseBillable","ciDiscountPercent","resourceId","companyId","details","setDetails","getAbsoluteMonths","momentDate","Number","moment","format","calculateDuration","e","startMonths","monthDifference","dr","i","push","useEffect","handleChange","target","id","value","name","prev","handleChange1","useLayoutEffect","tempStates","fStates","filter","d","tempCities","stateId","fCountries","cName","setCName","resourceFnc","axios","method","url","then","res","manger","ref","useRef","filteredData","item","filterData1","Response","resp","country_name","payterm","invcycle","inculture","invtemp","intime","curre","filterData","custom","className","htmlFor","ele","current","type","onChange","map","Item","index","lkup_name","sort","a","b","full_name","localeCompare","class","multiple","project_category_name","riskDetails","setFormData","getData","placeholder","onClear","onChangeHandler","prevProps","placeholderText","selected","dateFormat","onKeyDown","preventDefault","showMonthYearPicker","showIcon","maxLength","keyCode","required","checked","toString","disabled","onClick","style","width","height","statesData","JSON","parse","stringify","s","sortedstate","state","nameA","toUpperCase","nameB","countryHandler","citiesData","Finalcities","fData","sortedcities","city","stateHandler","data1","defaultValue","country","c","cityId","data2","showMonthDropdown","showYearDropdown","dropdownMode","autoComplete","Date","minDate","undefined","cursor","Company","paymentTerms","lkup_type_group_id","handleChangeCustom","Array","_","rows","contractTerm","GlobalValidation","some","document","getElementsByClassName","length","classList","add","setTimeout","window","scrollTo","top","behavior","open","status","handlePostDetails","btnState","location","reload","handleChange2","handleAdd","Object","keys","handleAddEmail","props","displayState1","setDisplayState1","validationmessage","setValidationMessage","setMailObjState","DisplayList","alignment","backdrop","visible","onClose","emailInput","querySelector","email","trim","test","isValidEmail","addHandler","displayState","setDisplayState","getElementById","event","code","formEditData","editedData","refArr","setUsername","inputSearchString","ReactSearchAutocomplete","items","assigned_to","console","log","onSelect","edit","showNoResults","showNoResultsText"],"sourceRoot":""}