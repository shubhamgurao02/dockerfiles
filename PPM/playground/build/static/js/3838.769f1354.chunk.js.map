{"version":3,"file":"static/js/3838.769f1354.chunk.js","mappings":"iUAoIA,MAxHA,WACE,OAAkCA,EAAAA,EAAAA,UAAS,IAAIC,MAAO,eAA/CC,EAAS,KAAEC,EAAY,KAC9B,GAA8BH,EAAAA,EAAAA,WAAS,GAAM,eAAtCI,EAAO,KAAEC,EAAU,KAC1B,GAAwCL,EAAAA,EAAAA,UAASM,EAAAA,KAAkB,eAA5DC,EAAY,KAAEC,EAAe,KACpC,GAA4BR,EAAAA,EAAAA,UAAS,IAAG,eAAjCS,EAAM,KAAEC,EAAS,KAWxB,OARAC,EAAAA,EAAAA,YAAU,WAKRD,ECvBc,CACV,CACIE,IAAM,OACNC,KAAO,OACPC,QAAU,UACVC,aAAe,gBACfC,MAAQ,QACRC,YAAc,eACdC,cAAgB,iBAChBC,iBAAmB,oBACnBC,gBAAkB,mBAClBC,iBAAkB,oBAClBC,iBAAmB,qBACnBC,oBAAsB,wBACtBC,mBAAqB,uBACrBC,oBAAqB,wBACrBC,MAAQ,QACRC,eAAiB,kBACjBC,cAAgB,iBAChBC,gBAAiB,mBACjBC,cAAgB,mBAChBC,YAAc,mBDIxB,GAAG,KAED,4BACE,gBAAKC,UAAU,YAAW,UACxB,iBAAKA,UAAU,YAAW,WACxB,gBAAKA,UAAU,cACf,gBAAKA,UAAU,WAAU,UACvB,wBAAI,4BAEN,gBAAKA,UAAU,qBAGnB,iBAAKA,UAAU,wBAAuB,WACpC,iBAAKA,UAAU,2BAA0B,WACvC,wBAAI,oBAEJ,gBACEC,QAAS,WACP5B,GAAYD,GAGRI,EADJJ,EACoBE,EAAAA,IACA4B,EAAAA,IACtB,EAAE,UAEF,0BAAO3B,UAIX,SAAC,KAAS,CAACH,SAAUA,EAAQ,UAC3B,iBAAK4B,UAAU,oBAAmB,WAChC,gBAAKA,UAAU,qBAAoB,UACjC,iBAAKA,UAAU,iBAAgB,WAC7B,kBAAOA,UAAU,QAAQG,QAAQ,aAAY,SAAC,mBAG9C,iBAAMH,UAAU,YAAW,SAAC,OAC5B,gBAAKA,UAAU,QAAO,UACpB,SAAC,KAAW,CACVI,GAAG,QACHC,QAAS,GACTC,cAAc,EACdC,WAAW,EACXC,qBAAqB,EACrBC,eAAe,EAKfC,UAAU,YAKlB,gBAAKV,UAAU,qBAAoB,UACjC,iBAAKA,UAAU,iBAAgB,WAC7B,kBAAOA,UAAU,QAAQG,QAAQ,UAAS,SAAC,aAG3C,iBAAMH,UAAU,YAAW,SAAC,OAC5B,gBAAKA,UAAU,QAAO,UACpB,SAAC,KAAW,CACVI,GAAG,QACHC,QAAS,GACTC,cAAc,EACdC,WAAW,EACXC,qBAAqB,EACrBC,eAAe,EAKfC,UAAU,YAKlB,gBAAKV,UAAU,gBAAe,UAC5B,iBAAKA,UAAU,iBAAgB,WAC7B,kBAAOA,UAAU,QAAQG,QAAQ,QAAO,SAAC,WAGzC,iBAAMH,UAAU,YAAW,SAAC,OAC5B,gBAAKA,UAAU,QAAO,UACpB,SAAC,IAAU,CACTW,SAAUzC,EACV0C,SAAU,SAACC,GAAI,OAAK1C,EAAa0C,EAAK,EACtCC,WAAW,UACXC,qBAAmB,YAK3B,gBAAKf,UAAU,+DAA8D,UAC3E,mBAAQA,UAAU,mBAAkB,SAAC,sBAK7C,gBAAKA,UAAU,YAAW,UACtB,SAACgB,EAAA,EAAmB,CAACC,KAAMxC,QAIrC,C","sources":["views/ReportsComponent/BUAllocationReport.js","views/ReportsComponent/BUAllocationReportTable.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport DatePicker from \"react-datepicker\";\nimport { MultiSelect } from \"react-multi-select-component\";\nimport {\n  FaChevronCircleDown,\n  FaChevronCircleUp,\n  FaSearch,\n  FaCheck,\n} from \"react-icons/fa\";\nimport { CCollapse } from \"@coreui/react\";\nimport { getTableData } from \"./BUAllocationReportTable\";\nimport FlatPrimeReactTable from \"../PrimeReactTableComponent/FlatPrimeReactTable\";\nfunction BUAllocationReport() {\n  const [startDate, setStartDate] = useState(new Date());\n  const [visible, setVisible] = useState(false);\n  const [cheveronIcon, setCheveronIcon] = useState(FaChevronCircleUp);\n  const [dataAr, setDataAr] = useState([]);\n\n\n  useEffect(() => {\n   \n    let tdata=getTableData();\n   \n    //console.log('ski1',tdata);\n    setDataAr(tdata);\n\n  }, []);\n  return (\n    <div>\n      <div className=\"col-md-12\">\n        <div className=\"pageTitle\">\n          <div className=\"childOne\"></div>\n          <div className=\"childTwo\">\n            <h2>BU Allocation Report</h2>\n          </div>\n          <div className=\"childThree\"></div>\n        </div>\n      </div>\n      <div className=\"group mb-3 customCard\">\n        <div className=\"col-md-12 collapseHeader\">\n          <h2>Search Filters</h2>\n\n          <div\n            onClick={() => {\n              setVisible(!visible);\n\n              visible\n                ? setCheveronIcon(FaChevronCircleUp)\n                : setCheveronIcon(FaChevronCircleDown);\n            }}\n          >\n            <span>{cheveronIcon}</span>\n          </div>\n        </div>\n        {/* <h2>BU Allocation Report</h2> */}\n        <CCollapse visible={!visible}>\n          <div className=\"group-content row\">\n            <div className=\"col-md-3 mb-2 mb-2\">\n              <div className=\"form-group row\">\n                <label className=\"col-5\" htmlFor=\"department\">\n                  Business Unit\n                </label>\n                <span className=\"col-1 p-0\">:</span>\n                <div className=\"col-6\">\n                  <MultiSelect\n                    id=\"roles\"\n                    options={[]}\n                    hasSelectAll={true}\n                    isLoading={false}\n                    shouldToggleOnHover={false}\n                    disableSearch={false}\n                    //   valueRenderer={customValueRenderer}\n\n                    //   value={selectedRoleTypes}\n\n                    disabled={false}\n                  />\n                </div>\n              </div>\n            </div>\n            <div className=\"col-md-3 mb-2 mb-2\">\n              <div className=\"form-group row\">\n                <label className=\"col-5\" htmlFor=\"country\">\n                  Country\n                </label>\n                <span className=\"col-1 p-0\">:</span>\n                <div className=\"col-6\">\n                  <MultiSelect\n                    id=\"roles\"\n                    options={[]}\n                    hasSelectAll={true}\n                    isLoading={false}\n                    shouldToggleOnHover={false}\n                    disableSearch={false}\n                    //   valueRenderer={customValueRenderer}\n\n                    //   value={selectedRoleTypes}\n\n                    disabled={false}\n                  />\n                </div>\n              </div>\n            </div>\n            <div className=\"col-md-3 mb-2\">\n              <div className=\"form-group row\">\n                <label className=\"col-5\" htmlFor=\"month\">\n                  Month\n                </label>\n                <span className=\"col-1 p-0\">:</span>\n                <div className=\"col-6\">\n                  <DatePicker\n                    selected={startDate}\n                    onChange={(date) => setStartDate(date)}\n                    dateFormat=\"MM/yyyy\"\n                    showMonthYearPicker\n                  />\n                </div>\n              </div>\n            </div>\n            <div className=\"col-md-12 col-sm-12 col-xs-12 btn-container center my-3 mb-2\">\n              <button className=\"btn btn-primary \">Search</button>\n            </div>\n          </div>\n        </CCollapse>\n      </div>\n      <div className=\"col-md-12\">\n          <FlatPrimeReactTable data={dataAr}/>\n    </div>\n    </div>\n  );\n}\n\nexport default BUAllocationReport;\n","export function getTableData() {\n    let tabledata=[\n        {\n            sno : 'S.No',\n            unit : 'Unit',\n            country : 'Country',\n            resourceType : 'Resource type',\n            count : 'Count',\n            netCapacity : 'Net Capacity',\n            billableAlloc : 'Billable Alloc',\n            billableAssigned : 'Billable Assigned',\n            billableActuals : 'Billable Actuals',\n            billableApproved :'Billable Approved',\n            nonbillableAlloc : 'Non Billable Alloc',\n            nonbillableAssigned : 'Non Billable Assigned',\n            nonbillableActuals : 'Non Billable Actuals',\n            nonbillableApproved :'Non Billable Approved',\n            other : 'Other',\n            plannedRevenue : 'Planned Revenue',\n            actualRevenue : 'Actual Revenue',\n            approvedRevenue: 'Approved Revenue',\n            costRoleBased : 'Cost(Role Based)',\n            gmRoleBased : 'GM(Role Based)'\n           \n        }\n\n    ]\n return tabledata\n}"],"names":["useState","Date","startDate","setStartDate","visible","setVisible","FaChevronCircleUp","cheveronIcon","setCheveronIcon","dataAr","setDataAr","useEffect","sno","unit","country","resourceType","count","netCapacity","billableAlloc","billableAssigned","billableActuals","billableApproved","nonbillableAlloc","nonbillableAssigned","nonbillableActuals","nonbillableApproved","other","plannedRevenue","actualRevenue","approvedRevenue","costRoleBased","gmRoleBased","className","onClick","FaChevronCircleDown","htmlFor","id","options","hasSelectAll","isLoading","shouldToggleOnHover","disableSearch","disabled","selected","onChange","date","dateFormat","showMonthYearPicker","FlatPrimeReactTable","data"],"sourceRoot":""}