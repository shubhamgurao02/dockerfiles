{"version":3,"file":"static/js/6891.7d87767e.chunk.js","mappings":"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","sources":["views/GovernanceComponent/NpsEmailPopUp.js","views/GovernanceComponent/NpsHistory.js","views/GovernanceComponent/NPS.js","views/ProjectComponent/RiskAutocomplete.js","../node_modules/primereact/tag/tag.esm.js"],"sourcesContent":["import { MdOutlinePlaylistAdd } from \"react-icons/md\";\nimport { AiFillDelete, AiFillWarning } from \"react-icons/ai\";\nimport Draggable from \"react-draggable\";\nimport { CModal, CModalBody, CModalHeader, CModalTitle } from \"@coreui/react\";\nimport { useEffect, useRef, useState } from \"react\";\nimport { BiSave, BiSearch, BiSelection } from \"react-icons/bi\";\nimport GlobalValidation from \"../ValidationComponent/GlobalValidation\";\nimport { Details } from \"@mui/icons-material\";\nfunction isValidEmail(email) {\n  // Basic email format validation using a regular expression\n  const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n  return emailRegex.test(email);\n}\nfunction EmailPopUp(props) {\n  const {\n    clickButtonPopUp,\n    setClickButtonPopUp,\n    handleChange1,\n    setProlificsparticipantdata,\n    prolificsparticipantdata,\n    handleAddEmail,\n    details,\n    projectMgr,\n    setDetails,\n    setValueID,\n    addList,\n    setAddList,\n    finalState1,\n    setDisplayTextEmails,\n    displayTextEmails,\n    setFinalState1,\n  } = props;\n\n  const [displayState1, setDisplayState1] = useState(null);\n  const [validationmessage, setValidationMessage] = useState(false);\n  const addHandler = () => {\n    const emailInput = ref.current[0].querySelector(\"input\");\n    const email = emailInput.value.trim();\n\n    if (!email) {\n      setValidationMessage(\"Please Provide Email\");\n      setTimeout(() => {\n        setValidationMessage(\"\");\n      }, 3000);\n      return;\n    }\n\n    if (!isValidEmail(email)) {\n      setValidationMessage(\"Please Provide Proper Email\");\n      setTimeout(() => {\n        setValidationMessage(\"\");\n      }, 3000);\n      return;\n    }\n\n    setFinalState1((prev) => ({ ...prev, [email]: email }));\n\n    handleAddEmail();\n    console.log(prolificsparticipantdata.customerEmails);\n    const newValue = prolificsparticipantdata.customerEmails\n      ? prolificsparticipantdata.customerEmails\n      : undefined;\n    console.log(newValue);\n    setValueID((prevValue) => [...prevValue, newValue]);\n\n    DisplayList();\n    emailInput.value = \"\";\n  };\n  const handleSubmit = () => {\n    setClickButtonPopUp(false);\n  };\n\n  useEffect(() => {\n    DisplayList();\n  }, [finalState1]);\n  const checkedData = (e, data) => {\n    let initialData = displayTextEmails;\n    if (e.target.checked) {\n      initialData.push(data);\n    } else {\n      let index = initialData.indexOf(data);\n      initialData.splice(index, 1);\n    }\n\n    setDisplayTextEmails(initialData);\n  };\n  const DisplayList = () => {\n    if (finalState1 === undefined || finalState1 === null) {\n      return null;\n    }\n\n    setDisplayState1(() => {\n      return Object.keys(finalState1).map((d, i) => {\n        return (\n          <div key={i}>\n            <input\n              type=\"checkbox\"\n              onClick={(e) => {\n                checkedData(e, finalState1[d]);\n              }}\n            />\n            {finalState1[d]}\n            <AiFillDelete\n              onClick={() => {\n                delete finalState1[d];\n                DisplayList();\n              }}\n            />\n          </div>\n        );\n      });\n    });\n  };\n\n  const ref = useRef([]);\n  return (\n    <div>\n      <CModal\n        alignment=\"center\"\n        backdrop=\"static\"\n        size=\"sm\"\n        visible={clickButtonPopUp}\n        onClose={() => {\n          setClickButtonPopUp(false);\n        }}\n      >\n        <CModalHeader className=\"hgt22\" style={{ cursor: \"all-scroll\" }}>\n          <CModalTitle>\n            <span className=\"ft16\"> Client Email </span>\n          </CModalTitle>\n        </CModalHeader>\n        <CModalBody>\n          {validationmessage && (\n            <div className=\"statusMsg error\">\n              <AiFillWarning /> {validationmessage}\n            </div>\n          )}\n          <div className=\"group-content row\">\n            <div className=\" col-md-12 row mb-2\">\n              <div className=\"col-md-8\">\n                <div\n                  className=\"textfield\"\n                  ref={(ele) => {\n                    ref.current[0] = ele;\n                  }}\n                >\n                  <input\n                    className=\"col-md-12\"\n                    type=\"email\"\n                    id=\"customerEmails\"\n                    name=\"customerEmails\"\n                    placeholder=\"Enter Email\"\n                    onChange={(e) => {\n                      handleChange1(e);\n                    }}\n                  ></input>\n                </div>\n              </div>\n              <button\n                type=\"submit\"\n                className=\"btn btn-primary col-4\"\n                onClick={() => {\n                  addHandler();\n                }}\n              >\n                <i className=\"fa fa-plus\" aria-hidden=\"true\"></i>\n                <MdOutlinePlaylistAdd /> Add\n              </button>\n            </div>\n            <div className=\"row\">\n              {displayState1}{\" \"}\n              {projectMgr?.npsClientEmail &&\n                projectMgr?.npsClientEmail\n                  .split(\",\")\n                  .map((participant, index) => {\n                    const participantId = `checkbox${index}`;\n                    return (\n                      <label className=\"checkbox-container\" key={index}>\n                        <input\n                          type=\"checkbox\"\n                          id={participantId}\n                          onChange={null}\n                        />\n                        {participant.trim()}\n                        <span className=\"checkmark\"></span>\n                      </label>\n                    );\n                  })}\n            </div>\n            <div className=\"col-md-1\"></div>\n            <button\n              className=\" col-md-4 btn btn-primary\"\n              onClick={handleSubmit}\n            >\n              <BiSave /> Select\n            </button>\n          </div>\n        </CModalBody>\n      </CModal>\n    </div>\n  );\n}\n\nexport default EmailPopUp;\n","import React, { useEffect, useRef, useState } from \"react\";\nimport axios from \"axios\";\nimport { CModal, CModalBody, CModalHeader, CModalTitle } from \"@coreui/react\";\nimport { DataTable } from \"primereact/datatable\";\nimport { Column } from \"primereact/column\";\nimport { FaMinus, FaPlus } from \"react-icons/fa\";\nimport { environment } from \"../../environments/environment\";\n\nfunction NpsHistory({ openPopup, setOpenPopup, id, countData }) {\n  console.log(countData);\n  const [surveyDetails, setSurveyDetails] = useState([]);\n  const baseUrl = environment.baseUrl;\n\n  const getClientNPVSurveydetails = (id) => {\n    axios({\n      method: \"get\",\n      url:\n        baseUrl +\n        `/governancems/pcqa/getClientNPVSurveydetails?CustId=${id}&exclLvl1=1`,\n\n      headers: { \"Content-Type\": \"application/json\" },\n    }).then((res) => {\n      const GetData = res.data;\n      setSurveyDetails(GetData);\n    });\n  };\n  const [isExpanded, setExpanded] = useState(false);\n  const clientEmail = (rowData) => {\n    return <div title={rowData.email || \"\"}>{rowData.email}</div>;\n  };\n  const Question = (rowData) => {\n    return <div title={rowData.question || \"\"}>{rowData.question}</div>;\n  };\n  return (\n    <div>\n      <CModal\n        visible={openPopup}\n        size=\"xl\"\n        className=\" ui-dialog\"\n        onClose={() => setOpenPopup(false)}\n      >\n        <CModalHeader className=\"\" style={{ cursor: \"all-scroll\" }}>\n          <CModalTitle>\n            <span className=\"\"> Customer Survey History Details</span>\n          </CModalTitle>\n        </CModalHeader>\n        <CModalBody>\n          <div className=\"p-fluid mb-0 darkHeader\">\n            <DataTable\n              className=\"primeReactDataTable eventsTable\"\n              value={countData}\n              showGridlines\n              emptyMessage=\"No Records To View\"\n              scrollDirection=\"both\"\n              rows={5}\n              rowHover\n              dataKey=\"id\"\n            >\n              <Column\n                // expander={true}\n                style={{ width: \"3em\" }}\n                body={(rowData) => {\n                  return (\n                    <div>\n                      <button onClick={() => setExpanded(!isExpanded)}>\n                        {isExpanded ? (\n                          <FaMinus\n                            onClick={(e) => {\n                              getClientNPVSurveydetails(rowData.csat_id);\n                            }}\n                          />\n                        ) : (\n                          <FaPlus\n                            onClick={(e) => {\n                              getClientNPVSurveydetails(rowData.csat_id);\n                            }}\n                          />\n                        )}\n                      </button>\n                    </div>\n                  );\n                }}\n              />\n              <Column\n                field=\"custMgr\"\n                header=\"Project Manager\"\n                style={{ width: \"25%\" }}\n              ></Column>\n              <Column field=\"customer_emails\" header=\"Client Email\"></Column>\n              <Column field=\"surveydate\" header=\"Survey Date\"></Column>\n              <Column field=\"npv\" header=\"NPS\"></Column>\n              <Column field=\"npv_stat_txt\" header=\"Status\"></Column>\n            </DataTable>\n          </div>\n          {isExpanded && (\n            <div className=\"p-fluid darkHeader\">\n              <DataTable\n                className=\"primeReactDataTable secondaryDataTable\"\n                value={surveyDetails}\n                showGridlines\n                emptyMessage=\"No Records To View\"\n                scrollDirection=\"both\"\n                dataKey=\"id\"\n              >\n                <Column\n                  field=\"email\"\n                  header=\"Client Email\"\n                  style={{ width: \"25%\" }}\n                  body={clientEmail}\n                ></Column>\n                <Column\n                  field=\"question\"\n                  header=\"Question\"\n                  body={Question}\n                ></Column>\n                <Column field=\"answer\" header=\"Answer\"></Column>\n              </DataTable>\n            </div>\n          )}\n        </CModalBody>\n      </CModal>\n    </div>\n  );\n}\nexport default NpsHistory;\n","import React, { useEffect, useState, useRef } from \"react\";\nimport { DataTable } from \"primereact/datatable\";\nimport { Column } from \"primereact/column\";\nimport { MdAddBox, MdAddCircleOutline } from \"react-icons/md\";\nimport { Button } from \"primereact/button\";\nimport { Link } from \"react-router-dom\";\nimport { ReactSearchAutocomplete } from \"react-search-autocomplete\";\nimport { AiFillWarning } from \"react-icons/ai\";\nimport { FilterMatchMode, FilterOperator } from \"primereact/api\";\nimport { FaInfoCircle } from \"react-icons/fa\";\nimport { InputText } from \"primereact/inputtext\";\nimport RiskAutoComplete from \"../ProjectComponent/RiskAutocomplete\";\nimport { BiCheck } from \"react-icons/bi\";\nimport Loader from \"../Loader/Loader\";\nimport NpsEmailPopUp from \"./NpsEmailPopUp\";\nimport { InputNumber } from \"primereact/inputnumber\";\nimport { Dropdown } from \"primereact/dropdown\";\nimport { Tag } from \"primereact/tag\";\nimport axios from \"axios\";\nimport NpsHistory from \"./NpsHistory\";\nimport { CCollapse } from \"@coreui/react\";\nimport { MultiSelect } from \"react-multi-select-component\";\nimport GlobalValidation from \"../ValidationComponent/GlobalValidation\";\nimport { DialogContent, Popover } from \"@material-ui/core\";\nimport {\n  FaChevronCircleDown,\n  FaChevronCircleUp,\n  FaSearch,\n  FaHistory,\n  FaCaretDown,\n  FaPlus,\n  FaPencilAlt,\n} from \"react-icons/fa\";\nimport { environment } from \"../../environments/environment\";\nimport moment from \"moment\";\nimport GlobalHelp from \"../PrimeReactTableComponent/GlobalHelp\";\nexport default function RowEditingDemo(props) {\n  const { projectId } = props;\n  const now = new Date();\n  const [resourceId, setResourceId] = useState([]);\n  const [updateMsg, setUpdateMsg] = useState(false);\n  const [updatedData, setupdatedData] = useState([]);\n  const [clickButtonPopUp, setClickButtonPopUp] = useState(false);\n  const [addList1, setAddList1] = useState([{}]);\n  const [displayTextEmails, setDisplayTextEmails] = useState([]);\n  const [prolificsparticipantdata, setProlificsparticipantdata] = useState([]);\n\n  const [details, setDetails] = useState({ customerEmails: \"\" });\n  const [countData, setCountData] = useState([]);\n  const [autocomplete, setAutocomplete] = useState([]);\n  const [finalState1, setFinalState1] = useState({});\n  const [customerId, setCustomerId] = useState([]);\n  const [linkColumns, setLinkColumns] = useState([]);\n  const [linkColumnsRoutes, setLinkColumnsRoutes] = useState([]);\n  const [bussinessUnitSeelect, setBussinessUnitSeelect] = useState(-1);\n  const [searchdata1, setSearchdata1] = useState(-1);\n  const [searchCountry, setSearchCountry] = useState(-1);\n  const [searchStatus, setSearchStatus] = useState(-1);\n  const [division, setDivision] = useState([]);\n  const [SelectdDivision, setSelectdDivision] = useState([]);\n  const [businessUnit, setBussinessUnit] = useState([]);\n  const loggedUserId = localStorage.getItem(\"resId\");\n  const [cid, setCId] = useState([]);\n  const [tableData, setTableData] = useState([]);\n  const [loader, setLoader] = useState(false);\n  const [openPopup, setOpenPopup] = useState(false);\n  const [visible, setVisible] = useState(false);\n  const [cheveronIcon, setCheveronIcon] = useState(FaChevronCircleUp);\n  const [diaplayState, setDisplayState] = useState(false);\n  const [id, setId] = useState([]);\n  const ref = useRef([]);\n  const HelpPDFName = \"NPSGovernance.pdf\";\n  const Header = \"NPS Help\";\n  const [validationmessage, setValidationMessage] = useState(false);\n  const searchdata = {\n    projectId: projectId,\n    criticality: null,\n    source: null,\n    status: null,\n    name: null,\n    rca: null,\n    assignedto: null,\n    createdby: null,\n  };\n  const [editedData, setEditedData] = useState([]);\n  const [formData, setFormData] = useState(searchdata);\n  const [products, setProducts] = useState([]);\n  const [globalFilterValue, setGlobalFilterValue] = useState(\"\");\n  const [filters, setFilters] = useState({\n    global: { value: null, matchMode: FilterMatchMode.CONTAINS },\n  });\n  const allocTypes = [\n    { value: \"161\", label: \"Active\" },\n    { value: \"162\", label: \"InActive\" },\n    { value: \"160\", label: \"New\" },\n  ];\n  const [selectedDepartments, setSelectedDepartments] = useState(allocTypes);\n\n  const statuses = [\n    { value: \"1174\", label: \"ALl\" },\n    { value: \"1175\", label: \"Verification Requested\" },\n    { value: \"1176\", label: \"Verified\" },\n    { value: \"1177\", label: \"Sent for Survey\" },\n  ];\n  const [selectedStatus, SetSelectedStatus] = useState(statuses);\n\n  const intialOnChangeState1 = {\n    customerEmails: \"\",\n  };\n  const [onChangeState1, setOnChangeState1] = useState(intialOnChangeState1);\n  const handleAddEmail = () => {\n    let data1 = finalState1;\n    data1[Object.keys(data1).length] = onChangeState1[\"customerEmails\"];\n    setFinalState1(data1);\n    setAddList1([...addList1, { customerEmails: \"\" }]);\n  };\n  const handleChange1 = (e) => {\n    const { id, name, value } = e.target;\n    onChangeState1[id] = value;\n    details[(id, name)] = value;\n    // setProlificsparticipantdata((prevProps) => ({\n    //   ...prevProps,\n    //   customerEmails: value,\n    // }));\n    prolificsparticipantdata[(id, name)] = value;\n  };\n  console.log(prolificsparticipantdata[(id, name)]);\n  const baseUrl = environment.baseUrl;\n  let sideArrow = document.getElementsByClassName(\n    \"p-paginator-next p-paginator-element p-link\"\n  );\n  let sideDoubleArrow = document.getElementsByClassName(\n    \"p-paginator-last p-paginator-element p-link\"\n  );\n  const componentRef = useRef(null);\n\n  useEffect(() => {\n    let prod = products[0];\n    sideArrow[0]?.addEventListener(\"click\", function () {\n      removeFirstRowIfEmpty(prod);\n    });\n\n    sideDoubleArrow[0]?.addEventListener(\"click\", function () {\n      removeFirstRowIfEmpty(prod);\n    });\n\n    if (products[0]?.custMgr == \"\") {\n      const icon = document.getElementsByClassName(\n        \"p-row-editor-init p-link\"\n      )[0];\n      icon.setAttribute(\"title\", \"Edit selected row\");\n      icon.click();\n      setTimeout(() => {\n        const saveIcon = document.getElementsByClassName(\n          \"p-row-editor-save p-link\"\n        )[0];\n        saveIcon.setAttribute(\"title\", \"Save row\");\n        const cancelIcon = document.getElementsByClassName(\n          \"p-row-editor-cancel p-link\"\n        )[0];\n        cancelIcon.setAttribute(\"title\", \"Cancel row editing\");\n        cancelIcon?.addEventListener(\n          \"click\",\n          function (e) {\n            if (products[0]?.custMgr == \"\") {\n              setProducts(products.slice(1, products.length));\n              // setButtonDisabled(true);\n              // setValid(false);\n              setValidateproject(false);\n\n              componentRef.current.forceUpdate();\n            }\n          },\n          true\n        );\n      }, 200);\n    }\n  }, [products]);\n  const getOwnerDivision = () => {\n    axios\n      .get(baseUrl + `/SalesMS/attainment/getOwnerDivision`)\n      .then((Response) => {\n        let countries = [];\n        let data = Response.data;\n        data.length > 0 &&\n          data.forEach((e) => {\n            let countryObj = {\n              label: e.owner_division,\n              value: e.id,\n            };\n            countries.push(countryObj);\n          });\n        setDivision(countries);\n        setSelectdDivision(countries);\n      })\n      .catch((error) => console.log(error));\n  };\n  const [projectMgr, setProjectMgr] = useState([]);\n  const [valueID, setValueID] = useState([]);\n\n  var combinedIds =\n    projectMgr.npsClientEmail == null\n      ? \"\" + valueID\n      : projectMgr.npsClientEmail + \",\" + valueID;\n  const handleAddClick = (rowData) => {\n    if (rowData.custMgr == null) {\n      setValidateproject(true);\n    } else {\n      axios({\n        method: \"post\",\n        url: baseUrl + `/governancems/pcqa/updateNpsActions`,\n        data: {\n          id: id,\n          customer_id: customerId,\n          project_manager_id:\n            formData.AeId == undefined ? projectMgr.resource_id : formData.AeId,\n          Client_email: combinedIds,\n          Status: projectMgr.npv_status,\n          is_discarded: projectMgr.canBeDiscarded,\n          comments: \"abcxyz\",\n          created_on: moment(now).format(\"YYYY-MM-DD\"),\n          modified_on: moment(now).format(\"YYYY-MM-DD\"),\n        },\n      }).then((res) => {\n        setupdatedData(res.data);\n        setTimeout(() => {\n          setUpdateMsg(false);\n        }, 3000);\n        // setUpdateMsg(true);\n        GetData();\n        setValidateproject(false);\n      });\n    }\n  };\n\n  const onRowEditComplete = (e) => {\n    let _products = [...products];\n    let { newData, index } = e;\n    _products[index] = newData;\n    setProducts(_products);\n    handleAddClick(e.newData);\n  };\n\n  const getCountData = (id) => {\n    axios({\n      method: \"get\",\n      url: baseUrl + `/governancems/pcqa/getHistoryNps?CustId=${id}`,\n\n      headers: { \"Content-Type\": \"application/json\" },\n    }).then((res) => {\n      const GetData = res.data;\n      for (let i = 0; i < GetData.length; i++) {\n        GetData[i][\"SNo\"] = i + 1;\n      }\n\n      setCountData(GetData);\n      setEditedData(GetData);\n    });\n  };\n\n  const bussinessUnit = () => {\n    axios({\n      method: \"get\",\n      url: baseUrl + `/CostMS/cost/getDepartments`,\n    }).then((res) => {\n      var bunit = res.data;\n      setBussinessUnit(bunit);\n    });\n  };\n  useEffect(() => {\n    getAutocomplete();\n    bussinessUnit();\n    getOwnerDivision();\n  }, [customerId]);\n\n  useEffect(() => {\n    setProducts(products);\n  }, [products]);\n  const initFilters = () => {\n    setFilters({\n      global: { value: null, matchMode: FilterMatchMode.CONTAINS },\n      name: {\n        operator: FilterOperator.AND,\n        constraints: [{ value: null, matchMode: FilterMatchMode.STARTS_WITH }],\n      },\n      \"country.name\": {\n        operator: FilterOperator.AND,\n        constraints: [{ value: null, matchMode: FilterMatchMode.STARTS_WITH }],\n      },\n      representative: { value: null, matchMode: FilterMatchMode.IN },\n      date: {\n        operator: FilterOperator.AND,\n        constraints: [{ value: null, matchMode: FilterMatchMode.DATE_IS }],\n      },\n      balance: {\n        operator: FilterOperator.AND,\n        constraints: [{ value: null, matchMode: FilterMatchMode.EQUALS }],\n      },\n      status: {\n        operator: FilterOperator.OR,\n        constraints: [{ value: null, matchMode: FilterMatchMode.EQUALS }],\n      },\n      activity: { value: null, matchMode: FilterMatchMode.BETWEEN },\n      verified: { value: null, matchMode: FilterMatchMode.EQUALS },\n    });\n    setGlobalFilterValue(\"\");\n  };\n  const clearFilter = () => {\n    initFilters();\n  };\n\n  const onGlobalFilterChange = (e) => {\n    const value = e.target.value;\n\n    let _filters = { ...filters };\n\n    _filters[\"global\"].value = value;\n\n    setFilters(_filters);\n\n    setGlobalFilterValue(value);\n  };\n\n  const renderHeader = () => {\n    return (\n      <div className=\"flex justify-content-end\">\n        {\" \"}\n        <span className=\"p-input-icon-left\">\n          {\" \"}\n          <InputText\n            className=\"globalFilter\"\n            value={globalFilterValue}\n            onChange={onGlobalFilterChange}\n            placeholder=\"Keyword Search\"\n            style={{ marginLeft: \"81%\", width: \"220px\" }}\n          />{\" \"}\n        </span>{\" \"}\n      </div>\n    );\n  };\n  const getAutocomplete = () => {\n    axios({\n      method: \"post\",\n      url: `http://localhost:8090/governancems/pcqa/listProjectManagers`,\n      data: {\n        customerId: customerId.toString(),\n        searchStr: \"\",\n      },\n    }).then((res) => {\n      const GetData = res.data;\n      setAutocomplete(GetData);\n    });\n  };\n  const handleClear1 = () => {\n    setFormData((prevProps) => ({ ...prevProps, AeId: \"\" }));\n  };\n  const [validateproject, setValidateproject] = useState(false);\n\n  const textEditor = (products) => {\n    setCustomerId(products.rowData.id);\n    setProjectMgr(products.rowData);\n    setId(products.rowData.csat_id);\n    setResourceId(products.rowData.resource_id);\n    return (\n      <div className=\"autoComplete-container\">\n        <div\n          className={` ${\n            validateproject && !products.rowData.custMgr ? \"error-block\" : \"\"\n          }`}\n        >\n          <ReactSearchAutocomplete\n            className=\"AutoComplete\"\n            items={autocomplete}\n            type=\"Text\"\n            name=\"AeId\"\n            getAutocomplete={getAutocomplete}\n            id=\"AeId\"\n            autocomplete={autocomplete}\n            fuseOptions={{ keys: [\"id\", \"user\"] }}\n            resultStringKeyName=\"user\"\n            onClear={handleClear1}\n            placeholder=\"Type minimum 3 characters\"\n            onSelect={(e) => {\n              setFormData((prevProps) => ({\n                ...prevProps,\n                AeId: e.id,\n              }));\n            }}\n            inputSearchString={\n              products.rowData.custMgr ? products.rowData.custMgr : \"\"\n            }\n            showIcon={false}\n          />\n        </div>\n      </div>\n    );\n  };\n\n  const clickButtonHandlerPopUp = () => {\n    setClickButtonPopUp(true);\n  };\n  var participantsArray =\n    projectMgr.npsClientEmail == null ? \"\" : projectMgr.npsClientEmail;\n  var emailsArray = Array.isArray(displayTextEmails) ? displayTextEmails : [];\n  var combinedString = [participantsArray, ...emailsArray].join(\",\");\n\n  const statusEditor = (products) => {\n    return (\n      <div className=\"btn-container center my-2\">\n        <div>\n          <label htmlFor=\"customerEmails\"></label>\n          <div className=\"btn-container center my-2\">\n            <div>\n              <input\n                type=\"text\"\n                name=\"customerEmails\"\n                // className=\"disableField cancel\"\n                id=\"customerEmails\"\n                value={combinedString}\n                onChange={handleChange1}\n              />\n            </div>\n            <div>\n              <button className=\"btn\">\n                <MdAddBox\n                  onClick={() => {\n                    clickButtonHandlerPopUp();\n                  }}\n                />\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n      // </div>\n    );\n  };\n\n  const priceEditor = (options) => {\n    return (\n      <InputNumber\n        value={options.value}\n        onValueChange={(e) => options.editorCallback(e.value)}\n        mode=\"currency\"\n        currency=\"USD\"\n        locale=\"en-US\"\n      />\n    );\n  };\n\n  const GetData = async () => {\n    let valid = GlobalValidation(ref);\n    if (valid == true) {\n      setValidationMessage(true);\n    }\n    // setValidationMessage(false)\n    if (valid) {\n      return;\n    }\n    setDisplayState(false);\n    await axios({\n      method: \"post\",\n      url: baseUrl + `/governancems/pcqa/isSearch`,\n      data: {\n        units: +bussinessUnitSeelect,\n        customerStatus: +searchdata1,\n        countries: +searchCountry,\n        custStatus: +searchStatus,\n        loggedUser: +loggedUserId,\n        isPCQA: true,\n      },\n\n      headers: { \"Content-Type\": \"application/json\" },\n    }).then((response) => {\n      let data = response.data.data;\n      setProducts([...response.data.data]);\n      setLoader(true);\n      setValidationMessage(false);\n\n      setTimeout(() => {\n        setLoader(false);\n      }, 100);\n      let headerdata = [\n        {\n          full_name: \"Customer\",\n          custMgr: \"Project Manager\",\n          customer_emails: \"Client Email\",\n          npv: \"Nps\",\n          npv_stat_txt: \"Status\",\n          lastReviewDate: \"Action\",\n        },\n      ];\n      let data1 = [\"full_name\", \"\"];\n      let linkRoutes = [\"/customer/dashboard/id\", \"\"];\n      setLinkColumns(data1);\n      setLinkColumnsRoutes(linkRoutes);\n      setTableData(headerdata.concat(data));\n      setDisplayState(true);\n      // setTableData(data);\n    });\n  };\n\n  const statusBodyTemplate = (rowData) => {\n    return (\n      <div\n        title={rowData.npsClientEmail || \"\"}\n        className=\"ellipsis\"\n        style={{\n          whiteSpace: \"nowrap\",\n          overflow: \"hidden\",\n          textOverflow: \"ellipsis\",\n        }}\n      >\n        {rowData.npsClientEmail}\n      </div>\n    );\n  };\n\n  const represent = (products) => {\n    setCId(products.id);\n    return (\n      <div style={{ display: \"flex\", alignItems: \"center\" }}>\n        <Link\n          title={products.full_name}\n          to={`/search/customerSearch/customer/dashboard/:${products.id}`}\n          target=\"_blank\"\n          className=\"ellipsis\"\n          style={{\n            overflow: \"hidden\",\n            textOverflow: \"ellipsis\",\n            whiteSpace: \"nowrap\",\n            flexGrow: 1,\n          }}\n        >\n          {products.full_name}\n        </Link>\n        <FaHistory\n          style={{\n            cursor: \"pointer\",\n          }}\n          onClick={() => {\n            getCountData(products.id);\n            setOpenPopup(true);\n          }}\n        />\n      </div>\n    );\n  };\n\n  const priceBodyTemplate = (rowData) => {\n    return new Intl.NumberFormat(\"en-US\", {\n      style: \"currency\",\n      currency: \"USD\",\n    }).format(rowData.price);\n  };\n  const header = renderHeader();\n  const ArrowRenderer = ({ expanded }) => (\n    <>\n      {expanded ? (\n        <FaCaretDown className=\"chevronIcon\" />\n      ) : (\n        <FaCaretDown className=\"chevronIcon\" />\n      )}\n    </>\n  );\n  const generateDropdownLabel = (selectedOptions, allOptions) => {\n    const selectedValues = selectedOptions.map((option) => option.value);\n    const allValues = allOptions.map((item) => item.value);\n\n    if (selectedValues.length === allValues.length) {\n      return \"<< ALL >>\";\n    } else {\n      return selectedOptions.map((option) => option.label).join(\", \");\n    }\n  };\n  const [anchorEl, setAnchorEl] = useState(null);\n\n  const handleClose = () => {\n    setAnchorEl(false);\n  };\n  const [showPopup, setShowPopup] = useState(false);\n  const [iconName, setIconName] = useState(\"\");\n  useEffect(() => {}, [showPopup]);\n\n  return (\n    <div>\n      {validateproject ? (\n        <div className=\"statusMsg error\">\n          <span>\n            <AiFillWarning />\n            &nbsp;\n            {\"Please provide valid values for highlighted values\"}\n          </span>\n        </div>\n      ) : (\n        \"\"\n      )}\n\n      {updateMsg ? (\n        <div className=\"statusMsg success\">\n          <span className=\"errMsg\">\n            <BiCheck />\n            &nbsp; saved successfully\n          </span>\n        </div>\n      ) : (\n        \"\"\n      )}\n      {loader ? <Loader /> : \"\"}\n      {validationmessage ? (\n        <div className=\"statusMsg error\">\n          <AiFillWarning />\n          Please select valid values for highlighted fields\n        </div>\n      ) : (\n        \"\"\n      )}\n\n      <div className=\"col-md-12\">\n        <div className=\"pageTitle\">\n          <div className=\"childOne\">\n            {/* <h2>IA Support(IA Support)</h2> */}\n          </div>\n          <div className=\"childTwo\">\n            <h2>Net Promoter Score</h2>\n          </div>\n          <div className=\"childThree\"></div>\n        </div>\n      </div>\n      <div className=\"col-md-12   customCard\">\n        <div className=\"col-md-12 collapseHeader\">\n          <h2>Search Filters</h2>\n          <div className=\"helpBtn\">\n            <GlobalHelp pdfname={HelpPDFName} name={Header} />\n          </div>\n          <div\n            onClick={() => {\n              setVisible(!visible);\n              visible\n                ? setCheveronIcon(FaChevronCircleUp)\n                : setCheveronIcon(FaChevronCircleDown);\n            }}\n          >\n            <span>{cheveronIcon}</span>\n          </div>\n        </div>\n        <CCollapse visible={!visible}>\n          <div className=\"group-content row\">\n            <div className=\" col-md-3 mb-2\">\n              <div className=\"form-group row\">\n                <label className=\"col-5\">\n                  Business unit\n                  <span className=\" error-text\"> *</span>\n                </label>\n                <label className=\"col-1 p-0\">:</label>\n                <label className=\"col-6\">\n                  <select\n                    id=\"businessunit\"\n                    onChange={(e) => {\n                      setBussinessUnitSeelect(e.target.value);\n                    }}\n                  >\n                    <option value=\"null\"> &lt;&lt;ALL&gt;&gt;</option>\n                    {businessUnit.map((Item) => (\n                      <option value={Item.value}> {Item.label}</option>\n                    ))}\n                  </select>\n                </label>\n              </div>\n            </div>\n\n            <div className=\" col-md-3 mb-2\">\n              <div className=\"form-group row\">\n                <label className=\"col-5\" htmlFor=\"country\">\n                  Customer Status <span className=\" error-text\"> *</span>\n                </label>\n                <span className=\"col-1 p-0\">:</span>\n                <div\n                  className=\" multiselect col-6\"\n                  ref={(ele) => {\n                    ref.current[0] = ele;\n                  }}\n                >\n                  <MultiSelect\n                    id=\"projectStatus\"\n                    options={allocTypes}\n                    ArrowRenderer={ArrowRenderer}\n                    valueRenderer={generateDropdownLabel}\n                    hasSelectAll={true}\n                    isLoading={false}\n                    shouldToggleOnHover={false}\n                    disableSearch={false}\n                    value={selectedDepartments}\n                    // disabled={false}\n                    onChange={(e) => {\n                      setSelectedDepartments(e);\n                      let filteredCountry = [];\n                      e.forEach((d) => {\n                        filteredCountry.push(d.value);\n                      });\n\n                      setSearchdata1(filteredCountry.toString());\n                    }}\n                  />\n                </div>\n              </div>\n            </div>\n            <div className=\" col-md-3 mb-2\">\n              <div className=\"form-group row\">\n                <label className=\"col-5\" htmlFor=\"country\">\n                  Contract <span className=\" error-text\"> *</span>\n                </label>\n                <span className=\"col-1 p-0\">:</span>\n                <div\n                  className=\"multiselect col-6\"\n                  ref={(ele) => {\n                    ref.current[1] = ele;\n                  }}\n                >\n                  <MultiSelect\n                    id=\"Divisions\"\n                    options={division}\n                    valueRenderer={generateDropdownLabel}\n                    ArrowRenderer={ArrowRenderer}\n                    hasSelectAll={true}\n                    value={SelectdDivision}\n                    disabled={false}\n                    onChange={(e) => {\n                      setSelectdDivision(e);\n                      let filteredCountry = [];\n                      e.forEach((d) => {\n                        filteredCountry.push(d.value);\n                      });\n\n                      setSearchCountry(filteredCountry.toString());\n                    }}\n                  />\n                </div>\n              </div>\n            </div>\n\n            <div className=\" col-md-3 mb-2\">\n              <div className=\"form-group row\">\n                <label className=\"col-5\" htmlFor=\"country\">\n                  Status <span className=\" error-text\"> *</span>\n                </label>\n                <span className=\"col-1 p-0\">:</span>\n                <div\n                  className=\"multiselect col-6\"\n                  ref={(ele) => {\n                    ref.current[2] = ele;\n                  }}\n                >\n                  <MultiSelect\n                    id=\"projectStatus\"\n                    options={statuses}\n                    hasSelectAll={true}\n                    valueRenderer={generateDropdownLabel}\n                    ArrowRenderer={ArrowRenderer}\n                    isLoading={false}\n                    shouldToggleOnHover={false}\n                    disableSearch={false}\n                    value={selectedStatus}\n                    disabled={false}\n                    onChange={(e) => {\n                      SetSelectedStatus(e);\n                      let filteredCountry = [];\n                      e.forEach((d) => {\n                        filteredCountry.push(d.value);\n                      });\n\n                      setSearchStatus(filteredCountry.toString());\n                    }}\n                  />\n                </div>\n              </div>\n\n              <div className=\"col-6 autoComplete-container\"> </div>\n            </div>\n\n            <div className=\" form-group col-md-12 col-sm-12 col-xs-12 btn-container center my-3\">\n              <button\n                type=\"button\"\n                className=\"btn btn-primary\"\n                onClick={() => {\n                  GetData();\n                  setDisplayState(false);\n                }}\n              >\n                <FaSearch /> Search{\" \"}\n              </button>\n            </div>\n          </div>\n        </CCollapse>\n      </div>\n      {diaplayState ? (\n        <div className=\"p-fluid  mb-2 darkHeader\">\n          <DataTable\n            className=\"primeReactDataTable eventsTable \" /// customerEngament\n            value={products}\n            editMode=\"row\"\n            filters={filters}\n            // dataKey=\"id\"\n            header={header}\n            onRowEditComplete={onRowEditComplete}\n            tableStyle={{ minWidth: \"50rem\" }}\n            rows={10}\n            showGridlines\n            paginator\n            pagination\n            paginationPerPage={5}\n            paginationRowsPerPageOptions={[5, 15, 25, 50]}\n            paginationComponentOptions={{\n              rowsPerPageText: \"Records per page:\",\n              rangeSeparatorText: \"out of\",\n            }}\n          >\n            <Column\n              field=\"full_name\"\n              header=\"Customer\"\n              style={{ width: \"20%\" }}\n              sortable\n              body={represent}\n            ></Column>\n            <Column\n              field=\"custMgr\"\n              header=\"Project Manager\"\n              sortable\n              // body={representresource}\n              editor={(options) => textEditor(options)}\n            ></Column>\n            <Column\n              field=\"npsClientEmail\"\n              header=\" Client Email\"\n              sortable\n              body={statusBodyTemplate}\n              editor={(options) => statusEditor(options)}\n            ></Column>\n            <Column\n              field=\"npv\"\n              header={\n                <div\n                  style={{\n                    display: \"inline-block\",\n                    position: \"relative\",\n                    cursor: \"pointer\",\n                  }}\n                >\n                  <span style={{ marginRight: \"5px\" }}>NPS</span>\n                  <FaInfoCircle\n                    className=\"tableInfoIcon\"\n                    onMouseOver={(e) => {\n                      setAnchorEl(e.currentTarget);\n                      // setIconName(key);\n                      setShowPopup(true);\n                    }}\n                    onMouseDown={() => {\n                      setShowPopup(false);\n                    }}\n                  />\n                </div>\n              }\n              sortable\n              alignHeader={\"center\"}\n\n              // body={priceBodyTemplate}\n              // editor={(options) => priceEditor(options)}\n            ></Column>\n\n            <Column\n              field=\"npv_stat_txt\"\n              header=\"Status\"\n              sortable\n\n              // body={priceBodyTemplate}\n              // editor={(options) => priceEditor(options)}\n              // style={{ width: \"20%\" }}\n            ></Column>\n\n            <Column\n              rowEditor\n              header=\"Action\"\n              headerStyle={{ width: \"10%\", minWidth: \"8rem\" }}\n              bodyStyle={{ textAlign: \"center\" }}\n            ></Column>\n          </DataTable>\n        </div>\n      ) : (\n        \"\"\n      )}\n      <NpsHistory\n        openPopup={openPopup}\n        setOpenPopup={setOpenPopup}\n        id={id}\n        countData={countData}\n      />\n      {clickButtonPopUp ? (\n        <NpsEmailPopUp\n          clickButtonPopUp={clickButtonPopUp}\n          // setOpenEmail={setOpenEmail}\n          // openEmail={openEmail}\n          setFinalState1={setFinalState1}\n          setClickButtonPopUp={setClickButtonPopUp}\n          handleChange1={handleChange1}\n          handleAddEmail={handleAddEmail}\n          addList1={addList1}\n          setAddList1={setAddList1}\n          finalState1={finalState1}\n          details={details}\n          setValueID={setValueID}\n          setDetails={setDetails}\n          setProlificsparticipantdata={setProlificsparticipantdata}\n          prolificsparticipantdata={prolificsparticipantdata}\n          setDisplayTextEmails={setDisplayTextEmails}\n          displayTextEmails={displayTextEmails}\n          projectMgr={projectMgr}\n        />\n      ) : (\n        \"\"\n      )}\n      {anchorEl && (\n        <NpsPopup\n          showPopup={showPopup}\n          setShowPopup={setShowPopup}\n          iconName={iconName}\n          setIconName={setIconName}\n          anchorEl={anchorEl}\n          setAnchorEl={setAnchorEl}\n          handleClose={handleClose}\n        />\n      )}\n    </div>\n  );\n  function NpsPopup(props) {\n    const { iconName, anchorEl, setAnchorEl, handleClose, setIconName } = props;\n    const open = Boolean(anchorEl);\n    const id = open ? \"my-popover\" : undefined;\n    return (\n      <div className=\"\">\n        <Popover\n          disablePortal={true}\n          arrow={true}\n          open={Boolean(anchorEl)}\n          id={id}\n          anchorEl={anchorEl}\n          onClose={handleClose}\n          anchorOrigin={{\n            vertical: \"top\",\n            horizontal: \"left\",\n          }}\n          transformOrigin={{\n            vertical: \"bottom\",\n            horizontal: \"left\",\n          }}\n        >\n          <div className=\"\">\n            <DialogContent>\n              <div>\n                <div className=\"\">\n                  <p className=\"mb-2\">\n                    Calculation formula :(Number of Promoters-Number of\n                    Detractors/(Total no.of Number of Respondents )x 100)\n                  </p>\n                </div>\n              </div>\n            </DialogContent>\n          </div>\n        </Popover>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport { ReactSearchAutocomplete } from \"react-search-autocomplete\";\n\nfunction RiskAutoComplete(props) {\n  const {\n    riskDetails,\n    getData,\n    setFormData,\n    editedData,\n    formEditData,\n    onChangeHandler,\n    refArr,\n    setUsername,\n    name,\n    id,\n    value,\n    onClear,\n    inputSearchString,\n  } = props;\n  const [item, setItem] = useState([]);\n\n  // console.log(\"in line 10\");\n  // console.log(props);\n  // console.log(refArr);\n\n  useEffect(() => {\n    // console.log(item);\n  }, [item]);\n\n  const handleClear = (edit) => {\n    setFormData((prevProps) => ({ ...prevProps, [name]: \"\" }));\n    console.log(name);\n  };\n  useEffect(() => {}, [riskDetails]);\n  // console.log(value);\n  {\n    return (\n      <>\n        <div className=\"autoComplete-container\">\n          {value == \"UpdateBillingRate\" ? (\n            <ReactSearchAutocomplete\n              items={riskDetails}\n              type=\"Text\"\n              name={name}\n              inputSearchString={formEditData?.assigned_to}\n              id={id}\n              className=\"err\"\n              riskDetails={riskDetails}\n              getData={getData}\n              onClear={onClear}\n              placeholder=\"Type minimum 3 characters\"\n              onChange={(e) => {\n                onChangeHandler(e);\n                console.log(\"789------------------------\");\n              }}\n              // setSelectEmployee={setSelectEmployee}\n              onSelect={(e) => {\n                setFormData((prevProps) => ({ ...prevProps, [name]: e.id }));\n\n                setFormData((prevProps) => ({\n                  ...prevProps,\n                  [\"Resname\"]: e.name,\n                }));\n              }}\n              showIcon={false}\n            />\n          ) : value == \"EngagementS\" ? (\n            <ReactSearchAutocomplete\n              items={riskDetails}\n              type=\"Text\"\n              name={name}\n              inputSearchString={formEditData?.assigned_to}\n              id={id}\n              className=\"err\"\n              riskDetails={riskDetails}\n              getData={getData}\n              onClear={handleClear}\n              placeholder=\"Type minimum 3 characters\"\n              onChange={(e) => {\n                onChangeHandler(e);\n              }}\n              // setSelectEmployee={setSelectEmployee}\n              onSelect={(e) => {\n                setFormData((prevProps) => ({ ...prevProps, [name]: e.id }));\n                // console.log(e.id);\n              }}\n              showIcon={false}\n              showNoResults={true}\n              showNoResultsText=\"<<ALL>>\"\n            />\n          ) : (\n            <div\n              className=\"auto autocomplete\"\n              id=\"auto\"\n              ref={(ele) => {\n                if (refArr != undefined) {\n                  refArr.current[0] = ele;\n                }\n              }}\n            >\n              <ReactSearchAutocomplete\n                items={riskDetails}\n                type=\"Text\"\n                name={name}\n                placeholder=\"Type minimum 3 characters\"\n                inputSearchString={inputSearchString}\n                id={id}\n                className=\"err\"\n                onClear={onClear}\n                riskDetails={riskDetails}\n                getData={getData}\n                onChange={(e) => {\n                  onChangeHandler(e);\n                  console.log(\"123---------------\");\n                }}\n                // setSelectEmployee={setSelectEmployee}\n                onSelect={(e) => {\n                  setFormData((prevProps) => ({ ...prevProps, [name]: e.id }));\n                }}\n                showIcon={false}\n              />\n            </div>\n          )}\n        </div>\n        <span>{item.name}</span>\n      </>\n    );\n  }\n}\nexport default RiskAutoComplete;\n","import * as React from 'react';\nimport { ObjectUtils, classNames, IconUtils } from 'primereact/utils';\n\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}\n\nfunction _toPrimitive(input, hint) {\n  if (_typeof(input) !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (_typeof(res) !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}\n\nfunction _toPropertyKey(arg) {\n  var key = _toPrimitive(arg, \"string\");\n  return _typeof(key) === \"symbol\" ? key : String(key);\n}\n\nfunction _defineProperty(obj, key, value) {\n  key = _toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\n\nvar Tag = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _classNames;\n  var elementRef = React.useRef(null);\n  var otherProps = ObjectUtils.findDiffKeys(props, Tag.defaultProps);\n  var className = classNames('p-tag p-component', (_classNames = {}, _defineProperty(_classNames, \"p-tag-\".concat(props.severity), props.severity !== null), _defineProperty(_classNames, 'p-tag-rounded', props.rounded), _classNames), props.className);\n  var icon = IconUtils.getJSXIcon(props.icon, {\n    className: 'p-tag-icon'\n  }, {\n    props: props\n  });\n  React.useImperativeHandle(ref, function () {\n    return {\n      props: props,\n      getElement: function getElement() {\n        return elementRef.current;\n      }\n    };\n  });\n  return /*#__PURE__*/React.createElement(\"span\", _extends({\n    ref: elementRef,\n    className: className,\n    style: props.style\n  }, otherProps), icon, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"p-tag-value\"\n  }, props.value), /*#__PURE__*/React.createElement(\"span\", null, props.children));\n});\nTag.displayName = 'Tag';\nTag.defaultProps = {\n  __TYPE: 'Tag',\n  value: null,\n  severity: null,\n  rounded: false,\n  icon: null,\n  style: null,\n  className: null\n};\n\nexport { Tag };\n"],"names":["props","clickButtonPopUp","setClickButtonPopUp","handleChange1","prolificsparticipantdata","setProlificsparticipantdata","handleAddEmail","projectMgr","details","setValueID","setDetails","finalState1","addList","setAddList","setDisplayTextEmails","displayTextEmails","setFinalState1","useState","displayState1","setDisplayState1","validationmessage","setValidationMessage","useEffect","DisplayList","undefined","Object","keys","map","d","i","type","onClick","e","data","initialData","target","checked","push","index","indexOf","splice","checkedData","ref","useRef","alignment","backdrop","size","visible","onClose","className","style","cursor","ele","current","id","name","placeholder","onChange","emailInput","querySelector","email","value","trim","setTimeout","test","isValidEmail","prev","console","log","customerEmails","newValue","prevValue","addHandler","npsClientEmail","split","participant","participantId","openPopup","setOpenPopup","countData","surveyDetails","setSurveyDetails","baseUrl","environment","getClientNPVSurveydetails","axios","method","url","headers","then","res","GetData","isExpanded","setExpanded","showGridlines","emptyMessage","scrollDirection","rows","rowHover","dataKey","width","body","rowData","csat_id","field","header","title","question","RowEditingDemo","projectId","now","Date","setResourceId","updateMsg","setUpdateMsg","setupdatedData","addList1","setAddList1","setCountData","autocomplete","setAutocomplete","customerId","setCustomerId","setLinkColumns","setLinkColumnsRoutes","bussinessUnitSeelect","setBussinessUnitSeelect","searchdata1","setSearchdata1","searchCountry","setSearchCountry","searchStatus","setSearchStatus","division","setDivision","SelectdDivision","setSelectdDivision","businessUnit","setBussinessUnit","loggedUserId","localStorage","getItem","setCId","setTableData","loader","setLoader","setVisible","FaChevronCircleUp","cheveronIcon","setCheveronIcon","diaplayState","setDisplayState","setId","searchdata","criticality","source","status","rca","assignedto","createdby","setEditedData","formData","setFormData","products","setProducts","globalFilterValue","setGlobalFilterValue","global","matchMode","FilterMatchMode","filters","setFilters","allocTypes","label","selectedDepartments","setSelectedDepartments","statuses","selectedStatus","SetSelectedStatus","onChangeState1","sideArrow","document","getElementsByClassName","sideDoubleArrow","componentRef","prod","addEventListener","removeFirstRowIfEmpty","custMgr","icon","setAttribute","click","cancelIcon","slice","length","setValidateproject","forceUpdate","setProjectMgr","valueID","combinedIds","getAutocomplete","bunit","Response","countries","forEach","countryObj","owner_division","catch","error","onGlobalFilterChange","_filters","toString","searchStr","handleClear1","prevProps","AeId","validateproject","participantsArray","emailsArray","Array","isArray","combinedString","join","statusEditor","htmlFor","valid","GlobalValidation","units","customerStatus","custStatus","loggedUser","isPCQA","response","full_name","customer_emails","npv","npv_stat_txt","lastReviewDate","concat","marginLeft","ArrowRenderer","expanded","generateDropdownLabel","selectedOptions","allOptions","selectedValues","option","allValues","item","anchorEl","setAnchorEl","showPopup","setShowPopup","iconName","setIconName","Loader","GlobalHelp","pdfname","FaChevronCircleDown","Item","options","valueRenderer","hasSelectAll","isLoading","shouldToggleOnHover","disableSearch","filteredCountry","disabled","editMode","onRowEditComplete","_products","newData","customer_id","project_manager_id","resource_id","Client_email","Status","npv_status","is_discarded","canBeDiscarded","comments","created_on","moment","format","modified_on","tableStyle","minWidth","paginator","pagination","paginationPerPage","paginationRowsPerPageOptions","paginationComponentOptions","rowsPerPageText","rangeSeparatorText","sortable","display","alignItems","to","overflow","textOverflow","whiteSpace","flexGrow","getCountData","editor","ReactSearchAutocomplete","items","fuseOptions","resultStringKeyName","onClear","onSelect","inputSearchString","showIcon","textEditor","position","marginRight","onMouseOver","currentTarget","onMouseDown","alignHeader","rowEditor","headerStyle","bodyStyle","textAlign","NpsEmailPopUp","data1","NpsPopup","handleClose","Boolean","Popover","disablePortal","arrow","open","anchorOrigin","vertical","horizontal","transformOrigin","DialogContent","riskDetails","getData","formEditData","editedData","onChangeHandler","refArr","setUsername","assigned_to","edit","showNoResults","showNoResultsText","_extends","assign","bind","arguments","key","prototype","hasOwnProperty","call","apply","this","_typeof","obj","Symbol","iterator","constructor","_toPropertyKey","arg","input","hint","prim","toPrimitive","TypeError","String","Number","_toPrimitive","_defineProperty","defineProperty","enumerable","configurable","writable","Tag","React","_classNames","elementRef","otherProps","ObjectUtils","defaultProps","classNames","severity","rounded","IconUtils","getElement","children","displayName","__TYPE"],"sourceRoot":""}