{"version":3,"file":"static/js/8915.894c69dc.chunk.js","mappings":"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","sources":["views/PipeLineComponent/ProgressReport.js","views/PipeLineComponent/ChartRenderer.js","views/PipeLineComponent/TableRenderer.js","views/PipeLineComponent/SearchFilters.js","views/PipeLineComponent/PipelineTrending.js"],"sourcesContent":["import axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { environment } from \"../../environments/environment\";\nimport { FaCircle } from \"react-icons/fa\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\n\n// import { concat } from \"core-js/core/array\";\n\nexport default function ProgressReport({\n  progressReportData,\n  reportRunId,\n  monthlyResourceData,\n  setmonthlyResourceData,\n  popUpDate,\n  popDate,\n  typeSelector,\n}) {\n  const d = progressReportData.split(\"^\")[0];\n  console.log(popDate);\n  const parts = d?.split(\"_\"); // Split the string by underscores\n\n  // Reconstruct the date in the desired format\n  const date11 = `${parts[0]}-${parts[1]}-${parts[2]}`;\n\n  const data22 =\n    date11 == \"total-serviceCreated-undefined\" ||\n    \"total-serviceClosed-undefined\" ||\n    \"total-softwareCreated-undefined\" ||\n    \"total-softwareClosed-undefined\"\n      ? popDate\n      : date11;\n\n  const baseUrl = environment.baseUrl;\n  const objectkey = progressReportData.split(\"^\")[0];\n  const executiveId = progressReportData.split(\"^\")[1];\n  const executiveName = progressReportData.split(\"^\")[2];\n  let asofnowPercentSelector =\n    objectkey.split(\"_\")[objectkey.split(\"_\").length - 1];\n  typeSelector = objectkey.split(\"_\")[0];\n\n  const prosicon = {\n    1: <FaCircle style={{ color: \"#9567c2\" }} />,\n    0: <FaCircle style={{ color: \"#539a71\" }} />,\n  };\n  const monthlyDataPayload = {\n    ExecutiveId: parseInt(executiveId),\n    SelMonth:\n      typeSelector === \"asofnow\" || typeSelector == \"total\"\n        ? \"2023-03-01\"\n        : date11,\n\n    ReportId: reportRunId,\n    optType: objectkey.includes(\"Closed\") ? \"Closed\" : \"Created\",\n    optCat: objectkey.includes(\"soft\") ? \"Software\" : \"Services\",\n    target: typeSelector === \"asofnow\" || typeSelector == \"total\" ? 1 : 0,\n    optProb: asofnowPercentSelector.replace(\"soft\", \"\").replace(\"service\", \"\"),\n    asOfNow: typeSelector === \"asofnow\" ? 1 : 0,\n  };\n\n  //----------------------call-----------------------------------\n  const getmonthlyResourceData = () => {\n    axios({\n      method: \"GET\",\n      url:\n        baseUrl +\n        `/SalesMS/pipeLineTrending/getMonthlySalesResourceDataNew?executiveId=${parseInt(\n          executiveId\n        )}&reportRunId=${reportRunId}&dateVal=${\n          typeSelector === \"asofnow\" || typeSelector == \"total\"\n            ? popDate\n            : date11\n        }&optType=${\n          objectkey.includes(\"Closed\") ? \"Closed\" : \"Created\"\n        }&optCat=${\n          objectkey.includes(\"soft\") ? \"Software\" : \"Services\"\n        }&target=${\n          typeSelector === \"asofnow\" || typeSelector == \"total\" ? 1 : 0\n        }&optProb=${asofnowPercentSelector\n          .replace(\"soft\", \"\")\n          .replace(\"service\", \"\")}&asOfNow=${\n          typeSelector === \"asofnow\" ? 1 : 0\n        }`,\n    }).then((resp) => {\n      const data = resp.data;\n      const array = [\n        \"id\",\n        \"opportunity\",\n        \"customer\",\n        \"isProspect\",\n        \"country\",\n        \"closeDate\",\n        \"amount\",\n        \"probability\",\n        \"grossMargin\",\n      ];\n      const newArray = data.map((item) => {\n        // let k = JSON.parse(JSON.stringify(item, array, 4));\n        return JSON.parse(JSON.stringify(item, array, 4));\n      });\n      setmonthlyResourceData(newArray);\n    });\n  };\n  // const getmonthlyResourceData = () => {\n  //   axios\n  //     .post(\n  //       baseUrl + `/ProjectMS/project/getPiplineSubData`,\n  //       monthlyDataPayload\n  //     )\n  //     .then((resp) => {\n  //       const data = resp.data;\n  //       const array = [\n  //         \"id\",\n  //         \"opportunity\",\n  //         \"customer\",\n  //         \"isProspect\",\n  //         \"country\",\n  //         \"closeDate\",\n  //         \"amount\",\n  //         \"probability\",\n  //         \"grossMargin\",\n  //       ];\n  //       const newArray = data.map((item) => {\n  //         // let k = JSON.parse(JSON.stringify(item, array, 4));\n  //         return JSON.parse(JSON.stringify(item, array, 4));\n  //       });\n  //       setmonthlyResourceData(newArray);\n  //     })\n  //     .catch((err) => {\n  //       console.log(err);\n  //     });\n  // };\n\n  //----------------------useEffect----------------------\n\n  useEffect(() => {\n    getmonthlyResourceData();\n    document.getElementById(\"prgReport\").scrollIntoView({\n      behavior: \"smooth\",\n      block: \"start\",\n      inline: \"nearest\",\n    });\n  }, [progressReportData]);\n\n  //---------------------------logic-----------------------------\n\n  let asofnowPercentage = \"\";\n\n  const monthsNames = [\n    \"\",\n    \"January\",\n    \"February\",\n    \"March\",\n    \"April\",\n    \"May\",\n    \"June\",\n    \"July\",\n    \"August\",\n    \"September\",\n    \"October\",\n    \"November\",\n    \"December\",\n  ];\n\n  const year = objectkey.split(\"_\")[0];\n  const month = monthsNames[parseInt(objectkey.split(\"_\")[1])];\n\n  let typeName;\n\n  {\n    objectkey.split(\"_\")[3] == \"serviceClosed\" ? \"service Closed\" : \"\";\n  }\n  switch (objectkey.split(\"_\")[3]) {\n    case \"softCreated\":\n      typeName = \"Software Created\";\n      break;\n    case \"serviceCreated\":\n      typeName = \"Service Created\";\n      break;\n    case \"serviceClosed\":\n      typeName = \"Service Closed\";\n      break;\n    case \"softClosed\":\n      typeName = \"Software Closed\";\n      break;\n    default:\n      typeName = objectkey.includes(\"soft\")\n        ? \"Software Created\"\n        : \"Services Created\";\n  }\n\n  switch (asofnowPercentSelector) {\n    case \"serviceSevenFive\":\n      asofnowPercentage = \"(75-99)\";\n      break;\n    case \"serviceFifty\":\n      asofnowPercentage = \"(50-74)\";\n      break;\n    case \"serviceTwoFive\":\n      asofnowPercentage = \"(25-49)\";\n      break;\n    case \"serviceLessTwoFive\":\n      asofnowPercentage = \"(<25)\";\n      break;\n    case \"softSevenFive\":\n      asofnowPercentage = \"(75-99)\";\n      break;\n    case \"softFifty\":\n      asofnowPercentage = \"(50-74)\";\n      break;\n    case \"softTwoFive\":\n      asofnowPercentage = \"(25-49)\";\n      break;\n    case \"softLessTwoFive\":\n      asofnowPercentage = \"(<25)\";\n      break;\n    default:\n      typeName = progressReportData.includes(\"soft\")\n        ? \"Software Created\"\n        : \"Services Created\";\n  }\n  const handleClick = () => {\n    (window.location.href =\n      \"https://d300000000qxieam.lightning.force.com/lightning/r/Opportunity/0068Z00001VHCDxQAP/view\"),\n      \"_blank\";\n  };\n  const data1 = \"__iconCust__ Customer __iconProsp__ Prospect\";\n\n  const tablerender = monthlyResourceData?.map((data) => {\n    let header = [];\n\n    for (const keys in data) {\n      keys !== \"id\" &&\n        keys !== \"isProspect\" &&\n        header.push(\n          data.id < 0 ? (\n            <th\n              className=\"childTableHead\"\n              style={{ textAlign: \"center\" }}\n              key={keys}\n            >\n              <div className=\"circle red\">\n                {/* <FaCircle style={{ color: \"#9567c2\" }} /> */}\n              </div>\n\n              {data[keys] === \"__iconCust__ Customer __iconProsp__ Prospect\" ? (\n                <React.Fragment>\n                  <FaCircle style={{ color: \"#539a71\", marginTop: \"-2px\" }} />\n                  {data[keys].split(\"_\")[4]}\n                  <FaCircle\n                    style={{ color: \"#9567c2\", marginTop: \"-2px\" }}\n                  />{\" \"}\n                  {data[keys].split(\"_\")[8]}\n                </React.Fragment>\n              ) : (\n                <React.Fragment>{data[keys]}</React.Fragment>\n              )}\n            </th>\n          ) : (\n            <td key={keys} className={keys} title={data[keys]}>\n              {keys == \"opportunity\" ? (\n                <div>\n                  <a\n                    href=\"https://d300000000qxieam.my.salesforce.com/?ec=302&startURL=%2Fvisualforce%2Fsession%3Furl%3Dhttps%253A%252F%252Fd300000000qxieam.lightning.force.com%252Flightning%252Fr%252FOpportunity%252F0061W00001UtIfyQAF%252Fview\"\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                  >\n                    {/* {data[keys]} */}\n                    <span title={data[keys]}>{`${data[keys].slice(\n                      0,\n                      50\n                    )}...`}</span>\n                  </a>\n                </div>\n              ) : (\n                \"\"\n              )}\n              {keys == \"amount\"\n                ? parseInt(data[keys]).toLocaleString(\"en-US\")\n                : keys == \"grossMargin\"\n                ? Math.round(data[keys])\n                : \"\"}\n              {keys == \"customer\" ||\n              keys == \"country\" ||\n              keys == \"closeDate\" ||\n              keys == \"probability\"\n                ? data[keys]\n                : \"\"}\n              {/* {keys == \"grossMargin\" ? (\n                <span>{Math.round(data[keys])}</span>\n              ) : (\n                \"\"\n              )} */}\n              {keys === \"customer\" && data[\"customer\"] !== \" \" && (\n                <span\n                  title={data}\n                  style={{\n                    float: \"left\",\n                    marginTop: \"-2px\",\n                    marginRight: \"6px\",\n                  }}\n                >\n                  {prosicon[data[\"isProspect\"]]}\n                </span>\n              )}\n            </td>\n          )\n        );\n    }\n    return <tr key={data.id}>{header}</tr>;\n  });\n  // console.log(tablerender.length);\n  return (\n    <div\n      id=\"prgReport\"\n      className=\"col-lg-12 col-md-12 col-sm-12 mt10 no-padding\"\n    >\n      <div className=\"col-lg-12 col-md-12 col-sm-12 no-padding\">\n        <b>\n          {typeSelector === \"asofnow\" ? (\n            <>\n              Total Progress {asofnowPercentage} of{\" \"}\n              <span\n                className=\"proName\"\n                style={{ color: \"#297ab0\", fontSize: \"14px\" }}\n              >\n                {executiveName}{\" \"}\n              </span>{\" \"}\n              As Of Now\n            </>\n          ) : (\n            <>\n              Progress of <span>{executiveName}</span>{\" \"}\n              {month + \"-\" + year == \"undefined-total\"\n                ? \"\"\n                : month + \"-\" + year}\n            </>\n          )}\n        </b>\n      </div>\n      <div className=\"col-lg-12 col-md-12 col-sm-12 no-padding\">\n        {/* <b>{typeName}</b> */}\n        <b>\n          {/* {typeName} */}\n          {objectkey.split(\"_\")[3] == \"serviceClosed\"\n            ? \"Service Closed\"\n            : objectkey.split(\"_\")[3] == \"serviceCreated\"\n            ? \"Service Created\"\n            : objectkey.split(\"_\")[3] == \"softClosed\"\n            ? \"Software Closed\"\n            : objectkey.split(\"_\")[3] == \"softCreated\"\n            ? \"Software Created\"\n            : objectkey.split(\"_\")[1] == \"serviceSevenFive\"\n            ? \"Service Created\"\n            : objectkey.split(\"_\")[1] == \"serviceFifty\"\n            ? \"Service Created\"\n            : objectkey.split(\"_\")[1] == \"serviceTwoFive\"\n            ? \"Service Created\"\n            : objectkey.split(\"_\")[1] == \"serviceLessTwoFive\"\n            ? \"Service Created\"\n            : objectkey.split(\"_\")[1] == \"softSevenFive\"\n            ? \"Software Created\"\n            : objectkey.split(\"_\")[1] == \"softFifty\"\n            ? \"Software Created\"\n            : objectkey.split(\"_\")[1] == \"softTwoFive\"\n            ? \"Software Created\"\n            : objectkey.split(\"_\")[1] == \"softLessTwoFive\"\n            ? \"Software Created\"\n            : \"\"}\n        </b>\n      </div>\n      <span></span>\n      {tablerender?.length > 1 ? (\n        <div className=\"darkHeader\">\n          <table\n            className=\"table table-bordered table-striped progresstable customCard card graph\"\n            style={{ width: \"auto\", margin: \"0px auto\", float: \"left\" }}\n          >\n            <thead className=\"graph\">{tablerender}</thead>\n          </table>\n        </div>\n      ) : (\n        // \" No Progress Found\"\n        <div style={{ marginTop: \"10px\" }}>No Progress Found</div>\n      )}\n    </div>\n  );\n}\n","import Highcharts from \"highcharts\";\nimport HighchartsReact from \"highcharts-react-official\";\nrequire(\"highcharts/modules/exporting\")(Highcharts);\nimport { useEffect } from \"react\";\nimport highcharts3d from \"highcharts/highcharts-3d\";\nhighcharts3d(Highcharts);\nexport default function ChartRenderer(props) {\n  const {\n    yServClosed,\n    ySwClosed,\n    ySwSevenFive,\n    ySwFifty,\n    ySwTwoFive,\n    ySwLessTwoFive,\n    yServSevenFive,\n    yServFifty,\n    yServTwoFive,\n    yServLessTwoFive,\n    yServCreated,\n    ySwCreated,\n    execKey,\n    xAxis,\n    execName,\n  } = props;\n\n  var yGSwSevenFive = ySwSevenFive[execKey];\n  var yGSwFifty = ySwFifty[execKey];\n  var yGSwTwoFive = ySwTwoFive[execKey];\n  var yGSwLessTwoFive = ySwLessTwoFive[execKey];\n\n  var yGServSevenFive = yServSevenFive[execKey];\n  var yGServFifty = yServFifty[execKey];\n  var yGServTwoFive = yServTwoFive[execKey];\n  var yGServLessTwoFive = yServLessTwoFive[execKey];\n\n  var yGServCreated = yServCreated[execKey];\n  var yGSwCreated = ySwCreated[execKey];\n  var yGServClosed = yServClosed[execKey];\n  var yGSwClosed = ySwClosed[execKey];\n\n  const asOfNowSWData = [];\n  const asOfNowServData = [];\n\n  var asOfNowAxis = [];\n  asOfNowAxis.push(\"Services\");\n\n  asOfNowServData.push({\n    name: \"75-99\",\n    color: \"#2f7ed8\",\n    data: [parseFloat(yGServSevenFive[0])],\n  });\n  asOfNowServData.push({\n    name: \"50-74\",\n    color: \"#1aadce\",\n    data: [parseFloat(yGServFifty[0])],\n  });\n  asOfNowServData.push({\n    name: \"25-49\",\n    color: \"#8bbc21\",\n    data: [parseFloat(yGServTwoFive[0])],\n  });\n  asOfNowServData.push({\n    name: \"<25\",\n    color: \"#910000\",\n    data: [parseFloat(yGServLessTwoFive[0])],\n  });\n  asOfNowSWData.push({\n    name: \"75-99\",\n    color: \"#2f7ed8\",\n    data: [yGSwSevenFive[0]],\n  });\n  asOfNowSWData.push({ name: \"50-74\", color: \"#1aadce\", data: [yGSwFifty[0]] });\n  asOfNowSWData.push({\n    name: \"25-49\",\n    color: \"#8bbc21\",\n    data: [yGSwTwoFive[0]],\n  });\n  asOfNowSWData.push({\n    name: \"<25\",\n    color: \"#910000\",\n    data: [yGSwLessTwoFive[0]],\n  });\n\n  const asOfNowService = {\n    chart: {\n      type: \"column\",\n      width: 600,\n      options3d: {\n        enabled: true,\n        alpha: 8,\n        beta: 12,\n        viewDistance: 25,\n        depth: 70,\n      },\n    },\n    title: {\n      useHTML: true,\n      text:\n        'Services As Of Now for <b style=\"color:#297ab0;font-size: 14px;\">' +\n        execName +\n        \"</b><span>\",\n    },\n    xAxis: {\n      categories: asOfNowAxis,\n      crosshair: true,\n      gridLineWidth: 0.2,\n    },\n    yAxis: {\n      allowDecimals: false,\n      gridLineWidth: 0.2,\n      min: 0,\n      title: {\n        text: \"Amount ($)\",\n      },\n      labels: {\n        overflow: \"justify\",\n      },\n    },\n    tooltip: {\n      formatter: function () {\n        return (\n          \"<b>\" +\n          this.x +\n          \"</b><br/>\" +\n          this.series.name +\n          \": \" +\n          this.y.toLocaleString(\"en-US\") +\n          \" <br/>\"\n        );\n      },\n    },\n    plotOptions: {\n      column: {\n        pointPadding: 0.2,\n        borderWidth: 0,\n      },\n    },\n    series: asOfNowServData,\n  };\n\n  asOfNowAxis = [];\n  asOfNowAxis.push(\"Software\");\n\n  const asOfNowSoftware = {\n    chart: {\n      type: \"column\",\n      width: 600,\n      options3d: {\n        enabled: true,\n        alpha: 8,\n        beta: 12,\n        viewDistance: 25,\n        depth: 70,\n      },\n    },\n    title: {\n      useHTML: true,\n      text:\n        'Software As Of Now for <b style=\"color:#297ab0;font-size: 14px;\">' +\n        execName +\n        \"</b><span>\",\n    },\n    xAxis: {\n      categories: asOfNowAxis,\n      crosshair: true,\n      gridLineWidth: 0.2,\n    },\n    yAxis: {\n      allowDecimals: false,\n      min: 0,\n      gridLineWidth: 0.2,\n      title: {\n        text: \"Amount ($)\",\n      },\n      labels: {\n        overflow: \"justify\",\n      },\n    },\n    tooltip: {\n      formatter: function () {\n        return (\n          \"<b>\" +\n          this.x +\n          \"</b><br/>\" +\n          this.series.name +\n          \": \" +\n          this.y.toLocaleString(\"en-US\") +\n          \" <br/>\"\n        );\n      },\n    },\n    plotOptions: {\n      column: {\n        pointPadding: 0.2,\n        borderWidth: 0,\n      },\n    },\n    series: asOfNowSWData,\n  };\n\n  var seriesArray = [];\n  var seriesSWArray = [];\n\n  seriesArray.push({\n    name: \"Created\",\n    data: yGServCreated,\n    stack: \"second\",\n    color: \"#ffc966\",\n    legendIndex: 1,\n  });\n  seriesSWArray.push({\n    name: \"Created\",\n    data: yGSwCreated,\n    stack: \"second\",\n    color: \"#ffc966\",\n    legendIndex: 1,\n  });\n\n  seriesArray.push({\n    name: \"Closed\",\n    data: yGServClosed,\n    stack: \"first\",\n    color: \"#00ff00\",\n    legendIndex: 1,\n  });\n  seriesSWArray.push({\n    name: \"Closed\",\n    data: yGSwClosed,\n    stack: \"first\",\n    color: \"#00ff00\",\n    legendIndex: 1,\n  });\n\n  const serviceOpptGraph = {\n    lang: {\n      thousandsSep: \",\",\n      decimalPoint: \".\",\n    },\n    chart: {\n      type: \"column\",\n      width: 900,\n      options3d: {\n        enabled: true,\n        alpha: 8,\n        beta: 12,\n        viewDistance: 25,\n        depth: 70,\n      },\n    },\n    title: {\n      useHTML: true,\n      text:\n        'Service Progress for <b style=\"color:#297ab0;font-size: 14px;\">' +\n        execName +\n        \"</b><span>\",\n    },\n    xAxis: {\n      categories: xAxis,\n      crosshair: true,\n      gridLineWidth: 0.2,\n    },\n    yAxis: {\n      allowDecimals: false,\n      gridLineWidth: 0.2,\n      min: 0,\n      title: {\n        text: \"Amount ($)\",\n      },\n      labels: {\n        overflow: \"justify\",\n      },\n    },\n    tooltip: {\n      formatter: function () {\n        return (\n          \"<b>\" +\n          this.x +\n          \"</b><br/>\" +\n          this.series.name +\n          \": \" +\n          this.y.toLocaleString(\"en-US\") +\n          \" <br/>\"\n        );\n      },\n    },\n    plotOptions: {\n      column: {\n        pointPadding: 0.2,\n        borderWidth: 0,\n        stacking: \"normal\",\n      },\n    },\n    series: seriesArray,\n  };\n\n  const softOpptGraph = {\n    lang: {\n      thousandsSep: \",\",\n      decimalPoint: \".\",\n    },\n    chart: {\n      type: \"column\",\n      width: 900,\n      options3d: {\n        enabled: true,\n        alpha: 8,\n        beta: 12,\n        viewDistance: 25,\n        depth: 70,\n      },\n    },\n    title: {\n      useHTML: true,\n      text:\n        'Software Progress for <b style=\"color:#297ab0;font-size: 14px;\">' +\n        execName +\n        \"</b><span>\",\n    },\n    xAxis: {\n      categories: xAxis,\n      crosshair: true,\n      gridLineWidth: 0.2,\n    },\n    yAxis: {\n      allowDecimals: false,\n      min: 0,\n      gridLineWidth: 0.2,\n      title: {\n        text: \"Amount ($)\",\n      },\n      labels: {\n        overflow: \"justify\",\n      },\n    },\n    tooltip: {\n      formatter: function () {\n        return (\n          \"<b>\" +\n          this.x +\n          \"</b><br/>\" +\n          this.series.name +\n          \": \" +\n          this.y.toLocaleString(\"en-US\") +\n          \" <br/>\"\n        );\n      },\n    },\n    plotOptions: {\n      column: {\n        pointPadding: 0.2,\n        borderWidth: 0,\n        stacking: \"normal\",\n      },\n    },\n    series: seriesSWArray,\n  };\n\n  // useEffect(() => {\n  //   document.getElementById(\"chart\").scrollIntoView({\n  //     behavior: \"smooth\",\n  //     block: \"start\",\n  //     inline: \"nearest\",\n  //   });\n  // }, [props]);\n\n  return (\n    <div\n      id=\"chart\"\n      className=\"col-md-12 no-padding\"\n      style={{ marginTop: \"2%\" }}\n    >\n      <div\n        className=\"col-md-12 no-padding pipelineCharts customCard card graph\"\n        style={{\n          width: \"75%\",\n          // marginBottom: \"15px\",\n        }}\n      >\n        <HighchartsReact highcharts={Highcharts} options={serviceOpptGraph} />\n      </div>\n      <div\n        className=\"col-md-12 no-padding pipelineCharts customCard card graph\"\n        style={{ width: \"75%\" }}\n      >\n        <HighchartsReact highcharts={Highcharts} options={softOpptGraph} />\n      </div>\n      <div className=\"col-md-12 row\">\n        {\" \"}\n        <div\n          className=\"col-5 no-padding customCard card graph thirdGraphPipelIne\"\n          style={{ marginLeft: \"2%\" }}\n        >\n          <HighchartsReact highcharts={Highcharts} options={asOfNowService} />\n        </div>\n        <div className=\"col-5 no-padding customCard card graph fourthGraphPipeLine\">\n          <HighchartsReact highcharts={Highcharts} options={asOfNowSoftware} />\n        </div>\n      </div>\n    </div>\n  );\n}\n","import { Fragment } from \"react\";\nimport { useState } from \"react\";\nimport ProgressReport from \"./ProgressReport\";\nimport ChartRenderer from \"./ChartRenderer\";\nimport fte_active from \"../../assets/images/empstatusIcon/fte_active.png\";\nimport fte_inactive from \"../../assets/images/empstatusIcon/fte_inactive.png\";\nimport fte_notice from \"../../assets/images/empstatusIcon/fte_notice.png\";\nimport subk_active from \"../../assets/images/empstatusIcon/subk_active.png\";\nimport subk_inactive from \"../../assets/images/empstatusIcon/subk_inactive.png\";\nimport subk_notice from \"../../assets/images/empstatusIcon/subk_notice.png\";\n\nexport default function TableRenderer({\n  pipeLineTrendingData,\n  reportRunId,\n  setmonthlyResourceData,\n  monthlyResourceData,\n  popDate,\n  viewDataNew,\n  refresh,\n  setRefresh,\n  setProgressReportData,\n  progressReportData,\n  typeSelector,\n}) {\n  const [execId, setExecId] = useState(\"\");\n  const [execName, setexecName] = useState(\"\");\n  const [popUpDate, setPopUpDate] = useState([]);\n\n  const icons = {\n    fte0: (\n      <img\n        src={fte_inactive}\n        alt=\"(fte_inactive_icon)\"\n        style={{ height: \"12px\", marginTop: \"-5px\" }}\n        title=\"Ex-Employee\"\n      />\n    ),\n    fte1: (\n      <img\n        src={fte_active}\n        alt=\"(fte_active_icon)\"\n        style={{ height: \"12px\", marginTop: \"-5px\" }}\n        title=\"Active Employee\"\n      />\n    ),\n    fte2: (\n      <img\n        src={fte_notice}\n        alt=\"(fte_notice_icon)\"\n        style={{ height: \"12px\", marginTop: \"-5px\" }}\n        title=\"Employee in notice period\"\n      />\n    ),\n    subk0: (\n      <img\n        src={subk_inactive}\n        alt=\"(subk_inactive_icon)\"\n        style={{ height: \"12px\", marginTop: \"-5px\" }}\n        title=\"Ex-Contractor\"\n      />\n    ),\n    subk1: (\n      <img\n        src={subk_active}\n        alt=\"(subk_active_icon)\"\n        style={{ height: \"12px\", marginTop: \"-5px\" }}\n        title=\"Active Contractor\"\n      />\n    ),\n    subk2: (\n      <img\n        src={subk_notice}\n        alt=\"(subk_notice_icon)\"\n        style={{ height: \"12px\", marginTop: \"-5px\" }}\n        title=\"Contractor in notice period\"\n      />\n    ),\n  };\n\n  let xAxis = [];\n\n  const yServCreated = {};\n  const ySwCreated = {};\n  const yServClosed = {};\n  const ySwClosed = {};\n\n  const ySwSevenFive = {};\n  const ySwFifty = {};\n  const ySwTwoFive = {};\n  const ySwLessTwoFive = {};\n\n  const yServSevenFive = {};\n  const yServFifty = {};\n  const yServTwoFive = {};\n  const yServLessTwoFive = {};\n\n  const heads = pipeLineTrendingData.map((data) => {\n    const conditions = [\"Count\", \"execStatus\", \"id\", \"isActive\"];\n    let header = [];\n\n    if (!(data.id in yServCreated)) {\n      yServCreated[data.id] = [];\n    }\n    if (!(data.id in ySwCreated)) {\n      ySwCreated[data.id] = [];\n    }\n    if (!(data.id in yServClosed)) {\n      yServClosed[data.id] = [];\n    }\n    if (!(data.id in ySwClosed)) {\n      ySwClosed[data.id] = [];\n    }\n\n    if (!(data.id in ySwSevenFive)) {\n      ySwSevenFive[data.id] = [];\n    }\n    if (!(data.id in ySwFifty)) {\n      ySwFifty[data.id] = [];\n    }\n    if (!(data.id in ySwTwoFive)) {\n      ySwTwoFive[data.id] = [];\n    }\n    if (!(data.id in ySwLessTwoFive)) {\n      ySwLessTwoFive[data.id] = [];\n    }\n\n    if (!(data.id in yServSevenFive)) {\n      yServSevenFive[data.id] = [];\n    }\n    if (!(data.id in yServFifty)) {\n      yServFifty[data.id] = [];\n    }\n    if (!(data.id in yServTwoFive)) {\n      yServTwoFive[data.id] = [];\n    }\n    if (!(data.id in yServLessTwoFive)) {\n      yServLessTwoFive[data.id] = [];\n    }\n\n    for (const keys in data) {\n      let keysplitArray = keys?.split(\"_\");\n      let kValue = keysplitArray[keysplitArray.length - 1];\n      let monthLoop = keysplitArray[0];\n      let arrKey = data.id;\n      let val = data[keys];\n      let monthVal =\n        keysplitArray[0] + \"-\" + keysplitArray[1] + \"-\" + keysplitArray[2];\n\n      if (\n        !xAxis.includes(monthVal) &&\n        data.id == \"0\" &&\n        monthLoop != \"total\" &&\n        monthLoop != \"asofnow\" &&\n        keysplitArray.includes(\"serviceClosed\")\n      ) {\n        xAxis.push(\n          new Date(monthVal).toLocaleDateString(\"en-us\", {\n            year: \"numeric\",\n            month: \"short\",\n          })\n        );\n      }\n\n      switch (kValue) {\n        case \"serviceClosed\":\n          if (monthLoop != \"total\" && monthLoop != \"asofnow\") {\n            if (data.id >= 0) yServClosed[arrKey].push(parseFloat(val));\n          }\n          break;\n        case \"softClosed\":\n          if (monthLoop != \"total\" && monthLoop != \"asofnow\") {\n            if (data.id >= 0) ySwClosed[arrKey].push(parseFloat(val));\n          }\n          break;\n        case \"serviceCreated\":\n          if (monthLoop != \"total\" && monthLoop != \"asofnow\") {\n            if (data.id >= 0) yServCreated[arrKey].push(parseFloat(val));\n          }\n          break;\n        case \"softCreated\":\n          if (monthLoop != \"total\" && monthLoop != \"asofnow\") {\n            if (data.id >= 0) ySwCreated[arrKey].push(parseFloat(val));\n          }\n          break;\n\n        case \"serviceSevenFive\":\n          if (monthLoop != \"total\") {\n            if (data.id >= 0) yServSevenFive[arrKey].push(parseFloat(val));\n          }\n\n          break;\n        case \"serviceFifty\":\n          if (monthLoop != \"total\") {\n            if (data.id >= 0) yServFifty[arrKey].push(parseFloat(val));\n          }\n\n          break;\n        case \"serviceTwoFive\":\n          if (monthLoop != \"total\") {\n            if (data.id >= 0) yServTwoFive[arrKey].push(parseFloat(val));\n          }\n\n          break;\n        case \"serviceLessTwoFive\":\n          if (monthLoop != \"total\") {\n            if (data.id >= 0) yServLessTwoFive[arrKey].push(parseFloat(val));\n          }\n          break;\n\n        case \"softSevenFive\":\n          if (monthLoop != \"total\") {\n            if (data.id >= 0) ySwSevenFive[arrKey].push(parseFloat(val));\n          }\n\n          break;\n        case \"softFifty\":\n          if (monthLoop != \"total\") {\n            if (data.id >= 0) ySwFifty[arrKey].push(parseFloat(val));\n          }\n\n          break;\n        case \"softTwoFive\":\n          if (monthLoop != \"total\") {\n            if (data.id >= 0) ySwTwoFive[arrKey].push(parseFloat(val));\n          }\n\n          break;\n        case \"softLessTwoFive\":\n          if (monthLoop != \"total\") {\n            if (data.id >= 0) ySwLessTwoFive[arrKey].push(parseFloat(val));\n          }\n          break;\n      }\n\n      data[keys] !== null &&\n        !conditions.some((el) => keys.includes(el)) &&\n        header.push(\n          data.id < 0 ? (\n            <th\n              className={keys?.split(\"_\")[0] + \" pipeth\"}\n              key={keys}\n              colSpan={data[keys]?.split(\"^&\")[2]}\n              rowSpan={data[keys]?.split(\"^&\")[1]}\n            >\n              {data[keys]?.split(\"^&\")[0]}\n            </th>\n          ) : (\n            <td\n              className={\n                (keys.includes(\"service\") ? \"service\" : \"software\") +\n                \" pipetd \" +\n                keys?.split(\"_\")[0]\n              }\n              key={keys}\n              colSpan={data[keys]?.split(\"^&\")[2]}\n              rowSpan={data[keys]?.split(\"^&\")[1]}\n              style={{ backgroundColor: data.id === \"0\" ? \"#EADDCA\" : \"\" }}\n              title={data[keys]}\n            >\n              {keys !== \"executive\" ? (\n                <Fragment>\n                  <span title={parseInt(data[keys]).toLocaleString(\"en-US\")}>\n                    {parseInt(data[keys]?.split(\"^&\")[0]).toLocaleString(\n                      \"en-US\"\n                    )}\n                  </span>\n                  <span\n                    title={data[keys]}\n                    className={\n                      data[keys + \"Count\"]?.split(\"^&\")[0] ? \"linkSty\" : \"\"\n                    }\n                    onClick={\n                      data[keys + \"Count\"]?.split(\"^&\")[0]\n                        ? () => {\n                            setProgressReportData(\n                              keys + \"^\" + data[\"id\"] + \"^\" + data[\"executive\"]\n                            );\n                            setExecId(\"\");\n                            setPopUpDate();\n                            setRefresh(true);\n                          }\n                        : \"No Data found\"\n                    }\n                  >\n                    ({data[keys + \"Count\"]?.split(\"^&\")[0]})\n                  </span>\n                </Fragment>\n              ) : (\n                <Fragment>\n                  <span>{icons[data[\"execStatus\"]]}</span>\n                  <span\n                    className=\"linkSty\"\n                    onClick={() => {\n                      setExecId(data[\"id\"]);\n                      setexecName(data[\"executive\"]);\n                      setProgressReportData(\"\");\n\n                      setRefresh(true);\n\n                      window.scrollTo({ top: 3000, behavior: \"smooth\" });\n                    }}\n                  >\n                    {data[keys]?.split(\"^&\")[0]}\n                  </span>\n                </Fragment>\n              )}\n            </td>\n          )\n        );\n    }\n\n    return <tr key={data.id}>{header}</tr>;\n  });\n\n  return (\n    <div className=\"col-lg-12 col-md-12 col-sm-12 no-padding darkHeader customCard\">\n      <div\n        className=\"col-lg-12 col-md-12 col-sm-12 no-padding scrollit\"\n        style={{ maxHeight: \"76vh\" }}\n      >\n        <table className=\"table table-bordered table-striped pipelinetable \">\n          <thead>{heads}</thead>\n        </table>\n      </div>\n\n      {progressReportData !== \"\" && refresh === true ? (\n        <ProgressReport\n          progressReportData={progressReportData}\n          reportRunId={reportRunId}\n          setmonthlyResourceData={setmonthlyResourceData}\n          monthlyResourceData={monthlyResourceData}\n          viewDataNew={viewDataNew}\n          typeSelector={typeSelector}\n          popUpDate={popUpDate}\n          popDate={popDate}\n        />\n      ) : (\n        \"\"\n      )}\n\n      {execId !== \"\" && refresh == true ? (\n        <ChartRenderer\n          yServCreated={yServCreated}\n          ySwCreated={ySwCreated}\n          yServClosed={yServClosed}\n          ySwClosed={ySwClosed}\n          ySwSevenFive={ySwSevenFive}\n          ySwFifty={ySwFifty}\n          ySwTwoFive={ySwTwoFive}\n          ySwLessTwoFive={ySwLessTwoFive}\n          yServSevenFive={yServSevenFive}\n          yServFifty={yServFifty}\n          yServTwoFive={yServTwoFive}\n          yServLessTwoFive={yServLessTwoFive}\n          execKey={execId}\n          xAxis={xAxis}\n          execName={execName}\n        />\n      ) : (\n        \"\"\n      )}\n    </div>\n  );\n}\n","import DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport React, { useEffect, useState, useRef } from \"react\";\nimport axios from \"axios\";\nimport { MultiSelect } from \"react-multi-select-component\";\nimport {\n  FaSearch,\n  FaCaretDown,\n  FaChevronCircleUp,\n  FaChevronCircleDown,\n} from \"react-icons/fa\";\nimport { environment } from \"../../environments/environment\";\nimport SelectSEDialogBox from \"../SelectSE/SelectSEDialogBox\";\nimport GlobalValidation from \"../ValidationComponent/GlobalValidation\";\nimport { AiFillWarning } from \"react-icons/ai\";\nimport moment from \"moment\";\nimport Loader from \"../Loader/Loader\";\nimport { CCollapse } from \"@coreui/react\";\nimport SavedSearchGlobal from \"../PrimeReactTableComponent/SavedSearchGlobal\";\nimport { useLocation } from \"react-router-dom\";\nimport ScreenBreadcrumbs from \"../Common/ScreenBreadcrumbs\";\nimport { useDispatch } from \"react-redux\";\nimport {\n  setReportRunIdRedux,\n  updatedSalesExectiveId,\n} from \"../../reducers/SelectedSEReducer\";\nimport { useSelector } from \"react-redux\";\nimport { a } from \"@react-spring/web\";\nimport GlobalHelp from \"../PrimeReactTableComponent/GlobalHelp\";\n\nlet postdata = {\n  executives: \"\",\n  from: \"\",\n  duration: \"\",\n  viewby: \"se\",\n  cslIds: \"\",\n  Divisions: \"\",\n};\n\nexport default function SearchFilters({\n  setpipeLineTrendingData,\n  setreportRunId,\n  setmonthlyResourceData,\n  monthlyResourceData,\n  popDate,\n  refresh,\n  setRefresh,\n  setPopDate,\n  pipelinePermission,\n  setProgressReportData,\n  progressReportData,\n  setExecId,\n  execId,\n  typeSelector,\n}) {\n  const [salesData, setSalesData] = useState([]);\n  const [dataAccess, setDataAccess] = useState([]);\n  const [count, setCount] = useState(0);\n  const [grpId, setGrpId] = useState([]);\n  const [bulkids, SetBulkIds] = useState(true);\n  const [selectedSEVal, setSelectedSEVal] = useState(-2);\n  const [loader, setLoader] = useState(false);\n  const [salesEx, setSalesEx] = useState(\"-2\");\n  const dispatch = useDispatch();\n  const [accessData, setAccessData] = useState([]);\n\n  const localSE =\n    localStorage.getItem(\"selectedSELocal\") === null\n      ? []\n      : JSON.parse(localStorage.getItem(\"selectedSELocal\"));\n  const isIndividualChecked =\n    localStorage.getItem(\"isIndividualCheckedLocal\") === null\n      ? false\n      : JSON.parse(localStorage.getItem(\"isIndividualCheckedLocal\"));\n  const data = JSON.parse(localStorage.getItem(\"selectedSELocal\"));\n\n  const [hirarchy, setHirarchy] = useState([]);\n  const isSalesPresentThenId = localSE.findIndex((obj) => obj.key);\n  const [salesexecutiveid, setsalesExecutiveId] = useState(\"\");\n  const [Salesexecutivename, setsalesExecutiveName] = useState(\"\");\n  // const [salesindividualid, setSalesIndividualId] = useState(0);\n  const [salesindividualName, setSalesIndividualName] = useState(\"\");\n  useEffect(() => {\n    if (isSalesPresentThenId !== -1) {\n      const salesId = localSE[isSalesPresentThenId].id;\n      const salespersonname = localSE[isSalesPresentThenId].text + ` & Team`;\n      if (salesEx == 1) {\n        setsalesExecutiveName(salespersonname);\n        setsalesExecutiveId(salesId);\n      }\n    }\n  }, [isSalesPresentThenId, salesEx]); // Run this effect only when isSalesPresentThenId changes\n\n  useEffect(() => {\n    dispatch(updatedSalesExectiveId(salesEx));\n  }, [salesEx]);\n  const SelectSEData = useSelector(\n    (state) => state.selectedSEState.directSETreeData\n  );\n  const hirarchyAccess = () => {\n    axios\n\n      .get(\n        baseUrl +\n        `/ProjectMS/project/getHirarchyAccesss?loggedUserId=${loggedUserId}`\n      )\n\n      .then((resp) => {\n        const data = resp.data;\n\n        setHirarchy(data);\n      })\n\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n  useEffect(() => {\n    hirarchyAccess();\n  }, []);\n\n  useEffect(() => { }, [count]);\n  const [salesData1, setSalesData1] = useState([]);\n  const s1 = () => {\n    return 123;\n  };\n  const transformedData = transformObjects(data);\n  // const unique2 = transformedData.filter((obj, index) => {\n  //   return (\n  //     index === arr2.findIndex((o) => obj.id === o.id && obj.salesPersonName === o.name)\n  //   );\n  // });\n  // console.log(unique2);\n  const filteredData = transformedData\n    .filter((obj, index) => {\n      return index === transformedData.findIndex((o) => obj.id === o.id);\n    })\n    .filter((item) => !Array.isArray(item) || item.length === 0);\n\n  const idArray = transformedData.map((item) => item.id);\n  const filteredIds = idArray.filter((id) => typeof id === \"number\");\n\n  const updatedIds = filteredIds.map((id) =>\n    id === \"1717\" || \"3887\" || \"3887\" || \"3977\" || \"4895\" || \"4872942\"\n      ? grpId\n      : id\n  );\n\n  // Flatten the array if grpid is an array of arrays\n  const flattenedIds = updatedIds.flat();\n\n  const salesPersonNames =\n    // filteredData.map((item) => item.salesPersonName);\n    filteredData.map((item) => {\n      if (\n        (item.salesPersonName && item.salesPersonName === \"Kirsten Craft\") ||\n        \"Sarat Addanki\" ||\n        \"Satyanarayana Bolli\" ||\n        \"Supervisor Orphans\" ||\n        \"Michelle Shuler\"\n      ) {\n        return `${item.salesPersonName}`;\n      }\n      return item.salesPersonName;\n    });\n\n  var s2 = s1();\n\n  function transformObjects(data) {\n    return localSE.map((item) => {\n      if (Array.isArray(item)) {\n        const [obj] = item;\n        if (\n          obj &&\n          obj.id &&\n          obj.text &&\n          obj.type === \"fte1\" &&\n          obj.parent === \"id\"\n        ) {\n          return {\n            salesPersonName: obj.text,\n            type: obj.type,\n            id: parseInt(obj.id),\n            status: JSON.parse(obj.li_attr).sestatus || \"empActive\",\n          };\n        }\n      }\n      return item;\n    });\n  }\n\n  const seData = () => {\n    let data = JSON.parse(localStorage.getItem(\"selectedSELocal\"));\n    let custom = [];\n    let daata = [];\n    data?.forEach((e) => {\n      let cslObj = {\n        label: e.id,\n      };\n      custom.push(cslObj);\n      daata.push(e.id);\n    });\n    setSalesData(custom);\n    setSalesData1(daata);\n  };\n\n  const idStrings = data?.map((item) => String(item.id));\n  const idString = idStrings?.join(\",\");\n\n  const baseUrl = environment.baseUrl;\n  const [searching, setsearching] = useState(false);\n  const [durations, setDurations] = useState(6);\n  const [cheveronIcon, setCheveronIcon] = useState(FaChevronCircleUp);\n  const [visible, setVisible] = useState(false);\n  const [visibleC, setVisibleC] = useState(false);\n  const [csl, setCsl] = useState([]);\n  const [viewData, setViewData] = useState(\"se\");\n\n  const abortController = useRef(null);\n  const [dates, setDates] = useState([]);\n  const controller = new AbortController();\n  // const [formData, setFormData] = useState([]);\n  const initialvalue = {\n    // indTypes: \"\",\n    month: \"\",\n    Duration: \"\",\n  };\n  const [formData, setFormData] = useState(initialvalue);\n  const [date, setDate] = useState(() => {\n    const date1 = new Date();\n    const year = date1.getFullYear();\n    const month = date1.getMonth() - 5;\n    return new Date(year, month, 1);\n  });\n  const ref = useRef([]);\n  const [validationmessage, setValidationMessage] = useState(false);\n  const [searchdata, setSearchdata] = useState(-1);\n\n  const handleChangeDate = (date1) => setDate(date1);\n  const [salesindividualid, setSalesIndividualId] = useState(0);\n\n  const [ddivision, setDdivisions] = useState([]);\n  const [selectdDivision, setSelectdDivision] = useState([]);\n  const [viewSelector, setViewSelector] = useState(true);\n  const [attainmentDataPayload, setAttainmentDataPayload] = useState(-1);\n  const [salesExecutiveDropdown, setsalesExecutiveDropdown] = useState([]);\n  const [cslMultiselectDropdown, setcslMultiselectDropdown] = useState([]);\n  const [selectedCSL, setselectedCSL] = useState([]);\n  const [selectedCsl, setSelectedCsl] = useState([]);\n  const [month, setMonth] = useState(moment(moment().subtract(5, \"months\"))._d);\n  const [months, setMonths] = useState(\n    moment(moment(dates).format(\"yyyy-mm-dd\"))\n  );\n\n  const [datePick, setDatePick] = useState(\"2023-05-01\");\n  const loggedUserId = localStorage.getItem(\"resId\");\n\n  const getAbsoluteMonths = (momentDate) => {\n    let mont = Number(moment(momentDate).format(\"MM\"));\n    let yea = Number(moment(momentDate).format(\"YYYY\"));\n    return mont + yea * 12;\n  };\n  const [duration, setDuration] = useState();\n  var maxDate = new Date();\n  var year = maxDate.getFullYear();\n  var month1 = maxDate.getMonth();\n  var minDate = new Date(month1);\n  var maxDate = new Date(year, month1 + 11);\n\n  const location = useLocation();\n  const searchParams = new URLSearchParams(location.search);\n  const id = searchParams.get(\"id\");\n  const pageurl = \"http://10.11.12.149:3000/#/pmo/mSalesProgress\";\n  const page_Name = \"Sales\";\n  const [editmsg, setEditAddmsg] = useState(false);\n\n  const [filterData, setFilterData] = useState([]);\n\n  //// -------breadcrumbs-----\n\n  const [routes, setRoutes] = useState([]);\n  let textContent = \"Sales\";\n  let currentScreenName = [\"Pipeline Trending\"];\n\n  useEffect(() => {\n    getMenus();\n  }, []);\n\n  const getMenus = () => {\n    // setMenusData\n\n    axios({\n      method: \"GET\",\n      url: baseUrl + `/CommonMS/master/getMenus?loggedUserId=${loggedUserId}`,\n    }).then((resp) => {\n      let data = resp.data.map((menu) => {\n        if (menu.subMenus) {\n          menu.subMenus = menu.subMenus.filter(\n            (subMenu) =>\n              subMenu.display_name !== \"Project Timesheet (Deprecated)\" &&\n              subMenu.display_name !== \"Invoice Details\" &&\n              subMenu.display_name !== \"Accounting\" &&\n              subMenu.display_name !== \"Upload\" &&\n              subMenu.display_name !== \"Practice Calls [Deprecated]\"\n          );\n        }\n\n        return menu;\n      });\n\n      data.forEach((item) => {\n        if (item.display_name === textContent) {\n          setRoutes([item]);\n        }\n      });\n      const projectStatusReportSubMenu = data\n        .find((item) => item.display_name === \"Sales\")\n        .subMenus.find(\n          (subMenu) => subMenu.display_name === \"Pipeline Trending\"\n        );\n      setAccessData(projectStatusReportSubMenu.access_level);\n      const accessLevel = projectStatusReportSubMenu\n        ? projectStatusReportSubMenu.userRoles.includes(\"690\") &&\n          projectStatusReportSubMenu.userRoles.includes(\"641\")\n          ? 600\n          : projectStatusReportSubMenu.userRoles.includes(\"690\")\n            ? 690\n            : projectStatusReportSubMenu.userRoles.includes(\"641\")\n              ? 641\n              : projectStatusReportSubMenu.userRoles.includes(\"932\")\n                ? 932\n                : projectStatusReportSubMenu.userRoles.includes(\"46\")\n                  ? 46\n                  : projectStatusReportSubMenu.userRoles.includes(\"126\")\n                    ? 126\n                    : projectStatusReportSubMenu.userRoles.includes(\"919\")\n                      ? 919\n                      : projectStatusReportSubMenu.userRoles.includes(\"686\")\n                        ? 686\n                        : projectStatusReportSubMenu.userRoles.includes(\"930\")\n                          ? 930\n                          : projectStatusReportSubMenu.userRoles.includes(\"307\") && 307\n        : null;\n      setDataAccess(accessLevel);\n      setsummaryDatagetPayload({\n        ...summaryDatagetPayload,\n\n        executives:\n          accessLevel == 690 ||\n            accessLevel == 641 ||\n            accessLevel == 690 ||\n            accessLevel == 930\n            ? \"\"\n            : -2,\n      });\n      if (accessLevel == 600 || accessLevel == 641) {\n        // const loggedUser = loggedUserId;\n        axios({\n          method: \"get\",\n          url:\n            baseUrl +\n            `/SalesMS/MasterController/getCslDropDownData?userId=${loggedUserId}`,\n        }).then((res) => {\n          let custom = [];\n          let data = res.data;\n          data.length > 0 &&\n            data.forEach((e) => {\n              let cslObj = {\n                label: e.PersonName,\n                value: e.id,\n              };\n              custom.push(cslObj);\n            });\n          setCsl(custom);\n          setSelectedCsl(custom);\n        });\n      } else {\n        // const loggedUser = loggedUserId;\n        axios({\n          method: \"get\",\n          url:\n            baseUrl +\n            `/SalesMS/MasterController/getCslDropDownData?userId=${loggedUserId}`,\n        }).then((res) => {\n          let custom = [];\n          let data = res.data;\n          data.length > 0 &&\n            data.forEach((e) => {\n              let cslObj = {\n                label: e.PersonName,\n                value: e.id,\n              };\n              custom.push(cslObj);\n            });\n          setCsl(custom);\n          setSelectedCsl(custom);\n        });\n      }\n    });\n  };\n\n  const FilterData = () => {\n    // console.log(e?.id + \"in  line 876..\");\n    axios({\n      method: \"get\",\n      url:\n        baseUrl +\n        `/dashboardsms/savedsearch/FiltersData?saved_search_id=${id === null ? 0 : id\n        }`,\n    }).then(function (res) {\n      const getData = res.data;\n      setFilterData(getData);\n    });\n  };\n\n  useEffect(() => {\n    FilterData();\n  }, []);\n\n  const formattedFromDate = moment(filterData.from).format(\n    \"ddd MMM DD YYYY HH:mm:ss [GMT]ZZ (z)\"\n  );\n  // useEffect(() => {\n  //   setMonth(() => {\n  //     console.log(filterData?.from);\n  //     if (id != null) {\n  //       return {\n  //         from: formattedFromDate,\n  //       };\n  //     } else {\n  //       return {\n  //         from: month,\n  //       };\n  //     }\n  //   });\n  // }, [filterData]);\n  const [summaryDatagetPayload, setsummaryDatagetPayload] = useState({\n    executives: \"\",\n    from: month,\n    duration: durations,\n    viewby: \"se\",\n    cslIds: searchdata,\n    Divisions: attainmentDataPayload,\n  });\n\n  useEffect(() => {\n    setsummaryDatagetPayload(() => {\n      if (id != null) {\n        return {\n          executives: filterData.executives,\n          from: filterData.from,\n          duration: filterData.duration,\n          viewby: filterData.viewby,\n          cslIds: filterData.cslIds,\n          Divisions: filterData.Divisions,\n        };\n      } else {\n        return {\n          executives: -2,\n          from: month,\n          duration: durations,\n          viewby: \"se\",\n          cslIds: searchdata,\n          Divisions: attainmentDataPayload,\n        };\n      }\n    });\n  }, [filterData]);\n  const handleAbort = () => {\n    abortController.current && abortController.current.abort();\n    setsearching(false);\n  };\n\n  const [errorMsg, setErrorMsg] = useState(false);\n  const [selectedSE, setselectedSE] = useState(\"<< All SE >>\");\n\n  const divisions = [\n    { value: \"1\", label: \"Germany\" },\n    { value: \"2\", label: \"North America\" },\n    { value: \"3\", label: \"Others\" },\n    { value: \"4\", label: \"UK\" },\n    { value: \"5\", label: \"UK Testing\" },\n    { value: \"6\", label: \"Un Assigned\" },\n  ];\n  const [selectedDivisions, setSelectedDivisions] = useState(divisions);\n  const [division, setDiviosions] = useState(-1);\n  //------------------------methods----------------------------------\n\n  const onFilterChange = ({ id, value }) => {\n    setsummaryDatagetPayload((prevState) => {\n      return { ...prevState, [id]: value };\n    });\n    if (id === \"executives\" && value == \"1\") {\n      setVisible(true);\n    }\n  };\n\n  // const handleCsl = () => {\n  //   // const loggedUser = loggedUserId;\n  //   axios({\n  //     method: \"get\",\n  //     url:\n  //       baseUrl +\n  //       `/SalesMS/MasterController/getCslDropDownData?userId=${loggedUserId}`,\n  //   }).then((res) => {\n  //     let custom = [];\n  //     let data = res.data;\n  //     data.length > 0 &&\n  //       data.forEach((e) => {\n  //         let cslObj = {\n  //           label: e.PersonName,\n  //           value: e.id,\n  //         };\n  //         custom.push(cslObj);\n  //       });\n  //     setCsl(custom);\n  //     setSelectedCsl(custom);\n  //   });\n  // };\n  console.log(dataAccess);\n  const calculateDuration = (e) => {\n    let startMonths = getAbsoluteMonths(e);\n    let endMonths = getAbsoluteMonths(moment());\n    let monthDifference = endMonths - startMonths;\n    monthDifference += 1;\n    let dr = [];\n    // for (let i = 1; i <= monthDifference; i++) {\n    //   dr.push(i);\n    // }\n    for (let i = 1; i <= monthDifference; i++) {\n      i < 13 && dr.push(i);\n    }\n    setDuration(dr);\n  };\n\n  useEffect(() => {\n    calculateDuration(month);\n    // handleCsl();\n    seData();\n  }, []);\n  let payload = {\n    // executives: salesEx == 1 ? salesindividualid : salesEx,\n    executives: salesEx == 1 ? SelectSEData : salesEx,\n    from: datePick,\n    duration: durations,\n    viewby: viewData,\n    cslIds:\n      dataAccess == 641 || dataAccess == 600\n        ? Number(loggedUserId) + 1\n        : searchdata,\n    divisions: attainmentDataPayload == \"\" ? -1 : attainmentDataPayload,\n  };\n  const pipelineTrendingSearchValidator = () => {\n    // setShowDetails(false);\n    // let payload = viewDataPayload;\n    let filteredData = ref.current.filter((d) => d != null);\n\n    ref.current = filteredData;\n\n    let valid = GlobalValidation(ref);\n\n    if (valid == true) {\n      setsearching(false);\n      setErrorMsg(true);\n    }\n\n    if (valid) {\n      // setValidator(true);\n      setErrorMsg(true);\n      return;\n    }\n\n    if (payload.viewby == \"se\") {\n      payload.executives == \"\" ||\n        (payload.executives == \"1\" &&\n          (localStorage.getItem(\"selectedSELocal\") == null ||\n            localStorage.getItem(\"selectedSELocal\") == undefined ||\n            localStorage.getItem(\"selectedSELocal\") == \"[]\"))\n        ? setErrorMsg(true)\n        : !valid && setVisibleC(!visibleC);\n      getpipeLineTrendingData();\n      setmonthlyResourceData();\n      setProgressReportData(\"\");\n      typeSelector = \"\";\n    } else if (payload.viewby == \"csl\") {\n      payload.cslIds.length == 0\n        ? setErrorMsg(true)\n        : !valid && setVisibleC(!visibleC);\n      getpipeLineTrendingData();\n      setmonthlyResourceData();\n      setProgressReportData(\"\");\n      typeSelector = \"\";\n    }\n  };\n\n  // -----------------------calls----------------------------------\n\n  const getsalesExecutiveDropdown = () => {\n    axios\n      .get(baseUrl + \"/SalesMS/MasterController/salesExecutiveData\")\n      .then((resp) => {\n        const data = resp.data;\n        const dropdownOptions = data\n          .filter((item) => item.isActive == 1)\n          .map((item) => {\n            return (\n              <option key={item.id} value={item.val}>\n                {item.lkupName}\n              </option>\n            );\n          });\n        setsalesExecutiveDropdown(dropdownOptions);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  const getcslMultiselectDropdown = () => {\n    // const loggedUser = \"19042\";\n    axios\n      .get(\n        baseUrl +\n        `/SalesMS/MasterController/getCslDropDownData?userId=${loggedUserId}`\n      )\n      .then((resp) => {\n        const data = resp.data;\n        const dropdownOptions = data.map((item) => {\n          return (obj = {\n            value: item.id,\n            label: item.PersonName,\n          });\n          // return obj;\n        });\n        setcslMultiselectDropdown(dropdownOptions);\n        setselectedCSL(dropdownOptions);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  const getpipeLineTrendingData = () => {\n    let filterData = ref.current.filter((d) => d != null);\n    ref.current = filterData;\n    let valid = GlobalValidation(ref);\n\n    if (valid) {\n      {\n        setValidationMessage(true);\n        setErrorMsg(true);\n      }\n      return;\n    }\n    // !valid && setVisibleC(!visibleC);\n\n    // setValidationMessage(false)\n\n    abortController.current = new AbortController();\n\n    setValidationMessage(false);\n\n    // setvalid(true);\n    setErrorMsg(false);\n    summaryDatagetPayload.executives == \"1\"\n      ? (summaryDatagetPayload.executives = String(\n        JSON.parse(localStorage.getItem(\"selectedSELocal\")).map((item) => {\n          return item.id;\n        })\n      ))\n      : \"\";\n    const loaderTime = setTimeout(() => {\n      setsearching(true);\n    }, 2000);\n    axios({\n      signal: controller.signal,\n      method: \"post\",\n      url: baseUrl + `/SalesMS/pipeLineTrending/pipeLineTrendingData`,\n      data: payload,\n      signal: abortController.current.signal,\n    })\n      .then((resp) => {\n        const data = resp.data.data;\n        // const array = resp.data.data.split(\",\");\n        const array = resp.data.columnNames.split(\",\");\n        const newArray = data.map((item) => {\n          let k = JSON.parse(JSON.stringify(item, array, 4));\n          return k;\n        });\n        setpipeLineTrendingData(newArray);\n        setreportRunId(resp.data.reportRunId);\n        setsearching(false);\n        clearTimeout(loaderTime);\n        !valid && setVisibleC(!visibleC);\n        visibleC\n          ? setCheveronIcon(FaChevronCircleUp)\n          : setCheveronIcon(FaChevronCircleDown);\n        // setsearching(true);\n        //   setLoader(true)\n        //   setTimeout(() => {\n        //     setLoader(false)\n        //   }, 400);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n  const getOwnerDivision = () => {\n    axios\n      .get(baseUrl + `/SalesMS/attainment/getOwnerDivision`)\n      .then((Response) => {\n        let countries = [];\n        let data = Response.data;\n\n        data.length > 0 &&\n          data.forEach((e) => {\n            let countryObj = {\n              label: e.owner_division,\n              value: e.id,\n            };\n            countries.push(countryObj);\n          });\n        setDdivisions(countries);\n        setSelectdDivision(countries);\n      })\n      .catch((error) => console.log(error));\n  };\n  // -----------------------------useEffect---------------------------------\n\n  useEffect(() => {\n    getsalesExecutiveDropdown();\n    getcslMultiselectDropdown();\n    getOwnerDivision();\n  }, []);\n  const ArrowRenderer = ({ expanded }) => (\n    <>\n      {expanded ? (\n        <FaCaretDown className=\"chevronIcon\" />\n      ) : (\n        <FaCaretDown className=\"chevronIcon\" />\n      )}\n    </>\n  );\n\n  const commaSeparatedNames = salesPersonNames.join(\",\");\n  const salesPersonNamesBulk =\n    // filteredData.map((item) => item.salesPersonName);\n    filteredData.map((item) => {\n      if (\n        item.salesPersonName === \"Kirsten Craft\" &&\n        \"Sarat Addanki\" &&\n        \"Satyanarayana Bolli\" &&\n        \"Supervisor Orphans\" &&\n        \"Michelle Shuler\"\n      ) {\n        return `${item.salesPersonName} & team`;\n      }\n      return item.salesPersonName;\n    });\n\n  const commaSeparatedNamesBulk = salesPersonNamesBulk.join(\",\");\n  const salesPersonIds = filteredData.map((item) => item.id);\n  const commaSeparatedIds = salesPersonIds.join(\",\");\n\n  const generateDropdownLabel = (selectedOptions, allOptions) => {\n    const selectedValues = selectedOptions.map((option) => option.value);\n\n    const allValues = allOptions.map((item) => item.value);\n\n    if (selectedValues.length === allValues.length) {\n      return \"<< ALL >>\";\n    } else {\n      return selectedOptions.map((option) => option.label).join(\", \");\n    }\n  };\n\n  const HelpPDFName = \"PipelineTrending.pdf\";\n  const Headername = \"Pipeline Trending Help\";\n  return (\n    <div>\n      {/* <div className=\"pageTitle\">\n        <div className=\"childOne\"></div>\n        <div className=\"childTwo\">\n          <h2>Pipeline Trending</h2>\n        </div>\n        <div className=\"childThree\"></div>\n      </div> */}\n      <div class=\"col-md-12\">\n        <div class=\"pageTitle\">\n          <div class=\"childOne\"></div>\n          <div class=\"childTwo\">\n            <h2>Pipeline Trending</h2>\n          </div>\n          <div class=\"childThree\"></div>\n        </div>\n      </div>\n      <ScreenBreadcrumbs\n        routes={routes}\n        currentScreenName={currentScreenName}\n      />\n\n      {errorMsg ? (\n        <div className=\"statusMsg error\">\n          {\" \"}\n          <AiFillWarning /> Please select valid values for highlighted fields\n        </div>\n      ) : (\n        \"\"\n      )}\n      <div className=\"group mb-3 customCard\">\n        <div className=\"col-md-12 collapseHeader\">\n          <h2>Search Filters</h2>\n          <div className=\"helpBtn\">\n            <GlobalHelp pdfname={HelpPDFName} name={Headername} />\n          </div>\n          <div\n            onClick={() => {\n              setVisibleC(!visibleC);\n              visibleC\n                ? setCheveronIcon(FaChevronCircleUp)\n                : setCheveronIcon(FaChevronCircleDown);\n            }}\n          >\n            <span>{cheveronIcon}</span>\n          </div>\n        </div>\n        <CCollapse visible={!visibleC}>\n          <div className=\"group-content row\">\n            <div className=\"col-md-3 mb-2\">\n              <div className=\"clearfix\" style={{ height: \"10px\" }}></div>\n              <div className=\"form-group row\">\n                <label className=\"col-5\">View By</label>\n                <span className=\"col-1 p-0\">:</span>\n                <span className=\"col-6\">\n                  <select\n                    id=\"viewby\"\n                    className=\"col-md-12 col-sm-12 col-xs-12  onLoadEmpty\"\n                    // defaultValue={\"se\"}\n                    // value={summaryDatagetPayload.viewby}\n                    onChange={(e) => {\n                      e.target.value === \"csl\"\n                        ? setViewSelector(false)\n                        : setViewSelector(true);\n                      // onFilterChange(e.target);\n                      setViewData(e.target.value);\n                      // postdata.executives = e.target.value;\n                    }}\n                  >\n                    <option value=\"se\">Executive</option>\n                    <option value=\"csl\">CSL</option>\n                  </select>\n                </span>\n              </div>\n            </div>\n\n            {viewSelector && viewData == \"se\" ? (\n              <div className=\"col-md-3 mb-2\" id=\"execSelDiv\">\n                <div className=\"clearfix\" style={{ height: \"10px\" }}></div>\n                <div className=\"form-group row\">\n                  <label className=\"col-5\">\n                    Sales Executive <span style={{ color: \"red\" }}>*</span>\n                  </label>\n                  <span className=\"col-1 p-0\">:</span>\n                  <span span className=\"col-6 \" style={{ height: \"23px\" }}>\n                    {accessData == 1000 || accessData == 500 ? (\n                      <select\n                        ref={(ele) => {\n                          ref.current[viewData == \"se\" ? 0 : \"\"] = ele;\n                        }}\n                        id=\"executives\"\n                        className=\"text\"\n                        value={selectedSEVal}\n                        onChange={(e) => {\n                          onFilterChange(e.target);\n                          setSelectedSEVal(e.target.value);\n\n                          setselectedSE(\n                            e.target.options[e.target.selectedIndex].text\n                          );\n                          setSalesEx(e.target.value);\n                        }}\n                      >\n                        <option value=\"\">{\"<<Please select >>\"}</option>\n                        {salesExecutiveDropdown}\n                      </select>\n                    ) : (\n                      <select\n                        ref={(ele) => {\n                          ref.current[viewData == \"se\" ? 0 : \"\"] = ele;\n                        }}\n                        id=\"executives\"\n                        className=\"text\"\n                        value={selectedSEVal}\n                        onChange={(e) => {\n                          onFilterChange(e.target);\n                          setSelectedSEVal(e.target.value);\n\n                          setselectedSE(\n                            e.target.options[e.target.selectedIndex].text\n                          );\n                          setSalesEx(e.target.value);\n                        }}\n                      >\n                        <option value=\"null\">{\"<< Please select>> \"}</option>\n                        <option value=\"1\">Select SE</option>\n                      </select>\n                    )}\n                  </span>\n                </div>\n              </div>\n            ) : (\n              \"\"\n            )}\n\n            {!viewSelector && (\n              <div className=\"col-md-3 mb-2\" id=\"CSLDiv\">\n                <div className=\"clearfix\" style={{ height: \"10px\" }}></div>\n                <div className=\"form-group row\">\n                  <label className=\"col-4\">\n                    CSL <span style={{ color: \"red\" }}>*</span>\n                  </label>\n                  <span className=\"col-1 p-0 \">:</span>\n                  <div className=\"col-6\">\n                    <div\n                      style={{ height: \"23px\" }}\n                      className=\"multiselect\"\n                      ref={(ele) => {\n                        ref.current[viewData == \"csl\" ? 0 : \"\"] = ele;\n                      }}\n                    >\n                      <MultiSelect\n                        ArrowRenderer={ArrowRenderer}\n                        id=\"cslRes\"\n                        name=\"cslRes\"\n                        options={csl}\n                        hasSelectAll={true}\n                        value={selectedCsl}\n                        shouldToggleOnHover={false}\n                        valueRenderer={generateDropdownLabel}\n                        disableSearch={false}\n                        selected={selectedCsl}\n                        disabled={false}\n                        onChange={(e) => {\n                          setSelectedCsl(e);\n                          let filteredCsl = [];\n                          e.forEach((d) => {\n                            filteredCsl.push(d.value);\n                          });\n\n                          setSearchdata(filteredCsl.toString(), \"xxx\");\n\n                          // setSearchdata((prevVal) => ({\n                          //   ...prevVal,\n                          //   [\"skillGroup\"]: filteredCsl.toString(),\n                          // }));\n                        }}\n                      />\n                    </div>\n                  </div>\n                </div>\n              </div>\n            )}\n\n            <div className=\"col-md-3 mb-2\">\n              <div className=\"clearfix\" style={{ height: \"10px\" }}></div>\n              <div className=\"form-group row\" id=\"week-picker-wrapper\">\n                <label className=\"col-5\">\n                  Month <span style={{ color: \"red\" }}>*</span>\n                </label>\n                <span className=\"col-1 p-0\">:</span>\n                <div className=\"col-6\">\n                  <DatePicker\n                    name=\"month\"\n                    id=\"StartDt\"\n                    // value={month}\n                    minDate={minDate}\n                    selected={month}\n                    onChange={(e) => {\n                      const selectedDate = new Date(e);\n                      setCount((prev) => prev + 1);\n\n                      setDatePick(moment(selectedDate).format(\"yyyy-MM-DD\"));\n                      setPopDate(moment(selectedDate).format(\"yyyy-MM-DD\"));\n                      setDates(moment(e).format(\"yyyy-MM-DD\"));\n                      calculateDuration(e);\n                      setFormData((prev) => ({\n                        ...prev,\n                        month: moment(e).format(\"yyyy-MM-DD\"),\n                      }));\n                      setMonth(e);\n                      setMonths(e);\n                    }}\n                    dateFormat=\"MMM-yyyy\"\n                    maxDate={new Date()}\n                    // onKeyDown={(e) => {\n                    //   e.preventDefault();\n                    // }}\n                    showMonthYearPicker\n                  />\n                </div>\n              </div>\n            </div>\n\n            <div className=\"col-md-3 mb-2\">\n              <div className=\"clearfix\" style={{ height: \"10px\" }}></div>\n              <div className=\"form-group row\">\n                <label className=\"col-5\">\n                  Duration <span style={{ color: \"red\" }}>*</span>\n                </label>\n                <span className=\"col-1 p-0\">:</span>\n                <div className=\"col-6\">\n                  <select\n                    // selected=\"6\"\n                    ref={(ele) => {\n                      ref.current[1] = ele;\n                    }}\n                    className=\"text\"\n                    id=\"Duration\"\n                    // defaultValue=\"6\"\n                    onChange={(e) => {\n                      const { value, id } = e.target;\n                      setFormData({ ...formData, [id]: value });\n\n                      setDurations(e.target.value);\n                    }}\n                  >\n                    <option value=\"\"> &lt;&lt;Please Select&gt;&gt;</option>\n                    {duration?.map((d) => (\n                      <option selected={count == 0 ? true : false} value={d}>\n                        {d}\n                      </option>\n                    ))}\n                  </select>\n                </div>\n              </div>\n            </div>\n            <div className=\"col-md-3 mb-2\">\n              <div className=\"clearfix\" style={{ height: \"10px\" }}></div>\n              <div className=\"form-group row\">\n                <label className=\"col-5\">Owner Division</label>\n                <span className=\"col-1 p-0\">:</span>\n                <span className=\"col-6\" style={{ height: \"23px\" }}>\n                  <div\n                    className=\"multiselect\"\n                    ref={(ele) => {\n                      ref.current[2] = ele;\n                    }}\n                  >\n                    <MultiSelect\n                      ArrowRenderer={ArrowRenderer}\n                      id=\"Divisions\"\n                      options={ddivision}\n                      hasSelectAll={true}\n                      value={selectdDivision}\n                      valueRenderer={generateDropdownLabel}\n                      disabled={false}\n                      onChange={(e) => {\n                        setSelectdDivision(e);\n                        let filteredCountry = [];\n                        e.forEach((d) => {\n                          filteredCountry.push(d.value);\n                        });\n                        // setAttainmentDataPayload((prevVal) => ({\n                        //   ...prevVal,\n                        //   [\"Divisions\"]: filteredCountry.toString(),\n                        // }));\n                        setAttainmentDataPayload(\n                          filteredCountry.toString(),\n                          \"xxx\"\n                        );\n                      }}\n                    />\n                  </div>\n                </span>\n              </div>\n            </div>\n\n            {viewSelector && (\n              <div className=\"col-md-12 no-padding section\">\n                {/* <div className=\"clearfix\" style={{ height: '20px' }}></div> */}\n                <div\n                  className=\"seFooter\"\n                  style={{ borderTop: \"1px solid #CCC\" }}\n                >\n                  {/* <div className=\"clearfix\" style={{ height: '5px' }}></div> */}\n                  <span className=\"selectedSE\">\n                    <b>Selected SE : </b>\n                    <span className=\"dynText\">\n                      {selectedSE === \"<< Select SE >>\"\n                        ? localSE.map((item, index) => (\n                          <span key={item.id}>\n                            {isIndividualChecked\n                              ? item.salesPersonName\n                                ? item.salesPersonName\n                                : item.text\n                              : item.salesPersonName\n                                ? item.salesPersonName\n                                : item.text + ` & Team`}\n                            {index === localSE.length - 1 ? \"\" : \", \"}\n                          </span>\n                        ))\n                        : selectedSE}\n                    </span>\n                  </span>\n                  {/* <div className=\"clearfix \" style={{ height: '5px' }}></div> */}\n                </div>\n              </div>\n            )}\n\n            <div\n              className=\"col-md-12 col-sm-12 col-xs-12 no-padding center\"\n              style={{ marginBottom: \"15px\" }}\n            >\n              {searching ? (\n                // <button className=\"btn btn-primary\" type=\"button\" disabled></button>\n                \"\"\n              ) : (\n                <center>\n                  <button\n                    type=\"button\"\n                    className=\"btn btn-primary\"\n                    onClick={() => {\n                      // pipelineTrendingSearchValidator();\n                      getpipeLineTrendingData();\n                      setRefresh(false);\n                      // setExecId(\"\");\n                    }}\n                    // onClick={pipelineTrendingSearchValidator}\n                    style={{ boxShadow: \"none\" }}\n                  >\n                    <FaSearch /> Search{\" \"}\n                  </button>\n                </center>\n              )}\n            </div>\n\n            <SelectSEDialogBox\n              visible={visible}\n              setVisible={setVisible}\n              accessData={accessData}\n              dataAccess={dataAccess}\n              setGrpId={setGrpId}\n              SetBulkIds={SetBulkIds}\n            />\n          </div>\n        </CCollapse>\n        {searching && <Loader handleAbort={handleAbort} />}\n      </div>\n    </div>\n  );\n}\n","import TableRenderer from \"./TableRenderer\";\nimport SearchFilters from \"./SearchFilters\";\nimport { useState, useEffect } from \"react\";\nimport { environment } from \"../../environments/environment\";\nimport axios from \"axios\";\nimport \"./PipelineTrending.scss\";\n\nexport default function PipelineTrending() {\n  const baseUrl = environment.baseUrl;\n  const [pipeLineTrendingData, setpipeLineTrendingData] = useState([]);\n  const [reportRunId, setreportRunId] = useState(0);\n  const [monthlyResourceData, setmonthlyResourceData] = useState([]);\n  const [progressReportData, setProgressReportData] = useState(\"\");\n  const loggedUserId = localStorage.getItem(\"resId\");\n  const [pipelinePermission, setPipelinePermission] = useState([]);\n  const [refresh, setRefresh] = useState(false);\n  const [popDate, setPopDate] = useState(\"2023-05-01\");\n  const [viewDataNew, setViewDataNew] = useState(\"-2\");\n\n  let typeSelector = \"\";\n\n  return (\n    <>\n      <div className=\"col-lg-12 col-md-12 col-sm-12 no-padding\">\n        <SearchFilters\n          setpipeLineTrendingData={setpipeLineTrendingData}\n          setreportRunId={setreportRunId}\n          setmonthlyResourceData={setmonthlyResourceData}\n          monthlyResourceData={monthlyResourceData}\n          typeSelector={typeSelector}\n          setProgressReportData={setProgressReportData}\n          pipelinePermission={pipelinePermission}\n          progressReportData={progressReportData}\n          popDate={popDate}\n          setPopDate={setPopDate}\n          refresh={refresh}\n          setRefresh={setRefresh}\n          viewDataNew={viewDataNew}\n          // searching={searching}\n          // setsearching={setsearching}\n          // controller={controller}\n        />\n        <TableRenderer\n          pipeLineTrendingData={pipeLineTrendingData}\n          reportRunId={reportRunId}\n          setmonthlyResourceData={setmonthlyResourceData}\n          monthlyResourceData={monthlyResourceData}\n          pipelinePermission={pipelinePermission}\n          typeSelector={typeSelector}\n          setProgressReportData={setProgressReportData}\n          progressReportData={progressReportData}\n          popDate={popDate}\n          refresh={refresh}\n          setRefresh={setRefresh}\n          viewDataNew={viewDataNew}\n          setPopDate={setPopDate}\n        />\n      </div>\n    </>\n  );\n}\n"],"names":["ProgressReport","progressReportData","reportRunId","monthlyResourceData","setmonthlyResourceData","popDate","popUpDate","typeSelector","d","split","console","log","parts","date11","baseUrl","environment","objectkey","executiveId","executiveName","asofnowPercentSelector","length","prosicon","style","color","parseInt","includes","replace","useEffect","axios","method","url","then","resp","data","array","newArray","map","item","JSON","parse","stringify","document","getElementById","scrollIntoView","behavior","block","inline","asofnowPercentage","year","month","tablerender","header","keys","push","id","className","textAlign","marginTop","title","href","target","rel","slice","toLocaleString","Math","round","float","marginRight","fontSize","width","margin","ChartRenderer","props","yServClosed","ySwClosed","ySwSevenFive","ySwFifty","ySwTwoFive","ySwLessTwoFive","yServSevenFive","yServFifty","yServTwoFive","yServLessTwoFive","yServCreated","ySwCreated","execKey","xAxis","execName","yGSwSevenFive","yGSwFifty","yGSwTwoFive","yGSwLessTwoFive","yGServSevenFive","yGServFifty","yGServTwoFive","yGServLessTwoFive","yGServCreated","yGSwCreated","yGServClosed","yGSwClosed","asOfNowSWData","asOfNowServData","asOfNowAxis","name","parseFloat","asOfNowService","chart","type","options3d","enabled","alpha","beta","viewDistance","depth","useHTML","text","categories","crosshair","gridLineWidth","yAxis","allowDecimals","min","labels","overflow","tooltip","formatter","this","x","series","y","plotOptions","column","pointPadding","borderWidth","asOfNowSoftware","seriesArray","seriesSWArray","stack","legendIndex","serviceOpptGraph","lang","thousandsSep","decimalPoint","stacking","softOpptGraph","highcharts","Highcharts","options","marginLeft","require","highcharts3d","TableRenderer","pipeLineTrendingData","viewDataNew","refresh","setRefresh","setProgressReportData","useState","execId","setExecId","setexecName","setPopUpDate","icons","fte0","src","fte_inactive","alt","height","fte1","fte_active","fte2","fte_notice","subk0","subk_inactive","subk1","subk_active","subk2","subk_notice","heads","conditions","keysplitArray","kValue","monthLoop","arrKey","val","monthVal","Date","toLocaleDateString","some","el","colSpan","rowSpan","backgroundColor","Fragment","onClick","window","scrollTo","top","maxHeight","SearchFilters","setpipeLineTrendingData","setreportRunId","setPopDate","pipelinePermission","setSalesData","dataAccess","setDataAccess","count","setCount","grpId","setGrpId","SetBulkIds","selectedSEVal","setSelectedSEVal","salesEx","setSalesEx","dispatch","useDispatch","accessData","setAccessData","localSE","localStorage","getItem","isIndividualChecked","setHirarchy","isSalesPresentThenId","findIndex","obj","key","setsalesExecutiveId","setsalesExecutiveName","salesId","salespersonname","updatedSalesExectiveId","SelectSEData","useSelector","state","selectedSEState","directSETreeData","loggedUserId","catch","err","setSalesData1","transformedData","Array","isArray","parent","salesPersonName","status","li_attr","sestatus","filteredData","filter","index","o","filteredIds","salesPersonNames","flat","idStrings","String","join","searching","setsearching","durations","setDurations","FaChevronCircleUp","cheveronIcon","setCheveronIcon","visible","setVisible","visibleC","setVisibleC","csl","setCsl","viewData","setViewData","abortController","useRef","dates","setDates","controller","AbortController","Duration","formData","setFormData","date1","getFullYear","getMonth","ref","setValidationMessage","searchdata","setSearchdata","ddivision","setDdivisions","selectdDivision","setSelectdDivision","viewSelector","setViewSelector","attainmentDataPayload","setAttainmentDataPayload","salesExecutiveDropdown","setsalesExecutiveDropdown","setcslMultiselectDropdown","setselectedCSL","selectedCsl","setSelectedCsl","moment","subtract","_d","setMonth","format","setMonths","datePick","setDatePick","getAbsoluteMonths","momentDate","Number","duration","setDuration","maxDate","month1","minDate","location","useLocation","URLSearchParams","search","get","filterData","setFilterData","routes","setRoutes","getMenus","menu","subMenus","subMenu","display_name","forEach","projectStatusReportSubMenu","find","access_level","accessLevel","userRoles","setsummaryDatagetPayload","summaryDatagetPayload","executives","res","custom","e","cslObj","label","PersonName","value","getData","from","viewby","cslIds","Divisions","errorMsg","setErrorMsg","selectedSE","setselectedSE","onFilterChange","prevState","calculateDuration","startMonths","monthDifference","dr","i","daata","seData","payload","divisions","getpipeLineTrendingData","current","valid","GlobalValidation","loaderTime","setTimeout","signal","columnNames","clearTimeout","FaChevronCircleDown","dropdownOptions","isActive","lkupName","Response","countries","countryObj","owner_division","error","ArrowRenderer","expanded","generateDropdownLabel","selectedOptions","allOptions","selectedValues","option","allValues","class","ScreenBreadcrumbs","currentScreenName","GlobalHelp","pdfname","onChange","span","ele","selectedIndex","hasSelectAll","shouldToggleOnHover","valueRenderer","disableSearch","selected","disabled","filteredCsl","toString","selectedDate","prev","dateFormat","showMonthYearPicker","filteredCountry","borderTop","marginBottom","boxShadow","SelectSEDialogBox","Loader","handleAbort","abort","PipelineTrending"],"sourceRoot":""}