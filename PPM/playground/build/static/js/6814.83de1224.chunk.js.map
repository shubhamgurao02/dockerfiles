{"version":3,"file":"static/js/6814.83de1224.chunk.js","mappings":"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","sources":["views/CostComponent/LoginHistoryFilters.js","views/CostComponent/LoginHistoryDisplayData.js","views/CostComponent/ResourceLoginHistoryData.js","views/CostComponent/LoginHistory.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { MultiSelect } from \"react-multi-select-component\";\nimport GlobalValidation from \"../ValidationComponent/GlobalValidation\";\nimport { AiFillWarning } from \"react-icons/ai\";\n\nfunction LoginHistoryFilters(props) {\n  const { formData, setFormData, screenFilters, searchHandler, validator } =\n    props;\n\n  const [selectedScreens, setSelectedScreens] = useState(screenFilters);\n\n  const [warnMsg, setWarnMsg] = useState(\"\");\n\n  const ref = useRef([]);\n\n  useEffect(() => {\n    setSelectedScreens(screenFilters);\n  }, [screenFilters]);\n\n  const customValueRenderer = (selected, _options) => {\n    return selected.length === selectedScreens.length\n      ? \"<< ALL >>\"\n      : selected.length === 0\n      ? \"<< Please Select >>\"\n      : selected.map((label) => {\n          return selected.length > 1 ? label.label + \",\" : label.label;\n        });\n  };\n\n  const preSearchHandler = () => {\n    let valid = GlobalValidation(ref);\n\n    if (valid) {\n      setWarnMsg(\n        <div className=\"statusMsg error\">\n          <AiFillWarning />\n          <span>Please Select Mandatory Fields.</span>\n        </div>\n      );\n      return;\n    }\n\n    setWarnMsg(\"\");\n\n    searchHandler();\n  };\n\n  return (\n    <div className=\"col-md-12 customCard\">\n      {/* {validator ? (\n        <div className=\"errMsg\">\n          <span>Please Select Mandatory Fields.</span>\n        </div>\n      ) : (\n        \"\"\n      )} */}\n      {warnMsg}\n      {/* <div class=\"row g-3 align-items-center col-md-12 \"> */}\n\n      <div class=\"group-content row\">\n        <div class=\"col-md-3 mb-2\">\n          <div class=\"form-group row\">\n            <label class=\"col-5\" for=\"BuIds\">\n              Screens <span style={{ color: \"red\" }}>*</span>\n            </label>\n            <span class=\"col-1 p-0\">:</span>\n            <div\n              class=\"col-6 multiselect\"\n              ref={(ele) => {\n                ref.current[0] = ele;\n              }}\n            >\n              {\" \"}\n              <MultiSelect\n                id=\"screenNames\"\n                options={screenFilters}\n                className={``}\n                hasSelectAll={true}\n                valueRenderer={customValueRenderer}\n                value={formData.screen}\n                disabled={false}\n                onChange={(e) => {\n                  setSelectedScreens(e);\n                  // setSelectedCountry(e)\n                  // let filteredCountry = [];\n                  // e.forEach(d => {\n                  //   filteredCountry.push(d.value);\n                  // })\n                  setFormData((prevVal) => ({ ...prevVal, [\"screen\"]: e }));\n                }}\n                labelledBy={\"countries\"}\n              />\n            </div>\n          </div>\n        </div>\n\n        <div class=\"col-md-3 mb-2\">\n          <div class=\"form-group row\">\n            <label class=\"col-5\" for=\"BuIds\">\n              From Date\n            </label>\n            <span class=\"col-1 p-0\">:</span>\n            <div class=\"col-6\">\n              {\" \"}\n              <DatePicker\n                dateFormat=\"dd-MMM-yyyy\"\n                //maxDate={new Date()}\n                // minDate={startDate}\n                selected={formData.fromDate}\n                maxDate={formData.toDate}\n                showMonthDropdown\n                showYearDropdown\n                dropdownMode=\"select\"\n                onKeyPress={(e) => {\n                  e.preventDefault();\n                }}\n                onChange={(value) => {\n                  setFormData((prev) => ({ ...prev, [\"fromDate\"]: value }));\n                }}\n              />\n            </div>\n          </div>\n        </div>\n\n        <div class=\"col-md-3 mb-2\">\n          <div class=\"form-group row\">\n            <label class=\"col-5\" for=\"BuIds\">\n              To Date\n            </label>\n            <span class=\"col-1 p-0\">:</span>\n            <div class=\"col-6\">\n              <DatePicker\n                dateFormat=\"dd-MMM-yyyy\"\n                //maxDate={new Date()}\n                // minDate={startDate}\n                selected={formData.toDate}\n                maxDate={formData.toDate}\n                showMonthDropdown\n                showYearDropdown\n                dropdownMode=\"select\"\n                onChange={(value) => {\n                  setFormData((prev) => ({ ...prev, [\"toDate\"]: value }));\n                }}\n              />\n            </div>\n          </div>\n        </div>\n\n        <div class=\"col-md-12 col-sm-12 col-xs-12 btn-container center my-3 mb-2\">\n          <button\n            type=\"submit\"\n            class=\"btn btn-primary\"\n            title=\"Search\"\n            onClick={() => {\n              preSearchHandler();\n            }}\n          >\n            Search\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default LoginHistoryFilters;\n","import React, { useEffect, useState } from 'react'\n\nfunction LoginHistoryDisplayData(props) {\n    const { loginHistoryData, setScreenTracker, getResourcesLoginHistory,\n        resourceLoginHisState, setResourceLoginHisState } = props;\n\n    const [displayData, setDisplayData] = useState(null)\n\n    let columns = [\n        \"user_id\",\n        \"resource_name\",\n        \"View_And_Upload\",\n        \"Role_View\",\n        \"Role_Approvals\",\n        \"Role_Grid\",\n    ]\n\n    let columnsEmp = [\n        \"User Id\",\n        \"Resource Name\",\n        \"View And Upload\",\n        \"Role View\",\n        \"Role Approvals\",\n        \"Role Grid\",\n    ]\n\n    const [columnsData, setColumnsData] = useState(null)\n\n    useEffect(() => {\n        headerData();\n    }, [loginHistoryData])\n\n    useEffect(() => {\n        displayDataFnc();\n    }, [columnsData])\n\n\n    const headerData = async () => {\n\n\n        if (loginHistoryData?.length > 0) {\n            let data = loginHistoryData[0];\n            let keys = Object.keys(data);\n\n            for (let i = 0; i < keys.length; i++) {\n                switch (keys[i]) {\n                    case \"user_id\":\n                        keys[i] = \"User Id\"\n                        break;\n                    case \"resource_name\":\n                        keys[i] = \"Resource Name\"\n                        break;\n                    default:\n                        keys[i] = keys[i].replaceAll(\"_\", \" \");\n                        break;\n                }\n            }\n\n\n            setColumnsData(keys);\n        } else {\n            setColumnsData(columnsEmp);\n        }\n\n    }\n\n    const onClickHandler = (element, inEle, index, inInd) => {\n\n        if (resourceLoginHisState.state == true && resourceLoginHisState.rowAndColumnIndex == index + \"\" + inInd) {\n\n            setResourceLoginHisState((prev => ({ ...prev, [\"state\"]: false, [\"rowAndColumnIndex\"]: null })))\n            // setResourceLoginHisState((prev => ({...prev,[\"rowAndColumnIndex\"] : null}) ))\n            // return;\n        } else {\n\n            setResourceLoginHisState((prev => ({ ...prev, [\"state\"]: true, [\"rowAndColumnIndex\"]: index + \"\" + inInd })))\n            // setResourceLoginHisState((prev => ({...prev,[\"rowAndColumnIndex\"] : index+\"\"+inInd}) ))\n\n            const data = {\n                screen_name: inEle,\n                user_id: element.user_id,\n            };\n            getResourcesLoginHistory(data);\n        }\n    }\n\n    const displayDataFnc = () => {\n\n        let cData = columns;\n\n        setDisplayData(() => {\n            return loginHistoryData.map((element, index) => {\n                if (index > 0) {\n                    let tabData = []\n                    cData.forEach((inEle, inInd) => {\n                        if (element[inEle] !== undefined) {\n                            if (inEle == \"user_id\" || inEle == \"resource_name\") {\n                                tabData.push(<td  >{element[inEle]}</td>);\n                            } else {\n                                tabData.push(\n                                    <td align=\"right\">\n                                        <span\n                                            className=\"pointerCursor\"\n                                            style={{ color: \"blue\" }}\n                                            onClick={() => { onClickHandler(element, inEle, index, inInd) }}\n                                        >\n                                            {element[inEle]}\n                                        </span>\n                                    </td>\n                                );\n                            }\n                        }\n                    });\n                    return <tr key={index} >{tabData}</tr>\n                }\n            })\n        })\n    }\n\n\n    return (\n        <div className='col-md-12 mt-2 customCard'>\n            <table style={{ \"width\": \"100%\" }} className=\"table table-bordered table-striped\" >\n                <tbody>\n                    <tr>\n                        {columnsData?.map((ele, ind) => {\n                            return <th key={ind} >{ele}</th>;\n                        })}\n                    </tr>\n                    {displayData}\n                </tbody>\n            </table>\n        </div>\n    )\n}\n\nexport default LoginHistoryDisplayData","import moment from 'moment';\nimport React, { useEffect, useState } from 'react'\n\nfunction ResourceLoginHistoryData(props) {\n    const { resourceLogHisData } = props;\n\n    const [displayData, setDisplayData] = useState(null)\n\n    let tabData = [\n        \"ip_address\",\n        \"login_date_and_time\"\n    ]\n\n    useEffect(() => {\n        displayDataFnc();\n    }, [resourceLogHisData])\n\n    const displayDataFnc = () => {\n        setDisplayData(() => {\n            return resourceLogHisData?.map((element, index) => {\n                let tab = []\n                tabData.forEach((inEle, inInd) => {\n                    if (inEle === \"login_date_and_time\") {\n                        tab.push(<td>{moment(element[inEle]).format(\"DD-MMM-yyyy HH:mm\")}</td>);\n                    } else {\n                        tab.push(<td>{element[inEle]}</td>);\n                    }\n                })\n                return <tr key={index} >{tab}</tr>\n            })\n        })\n    }\n\n\n    return (\n        <div id=\"costLoginHistoryData\" className='col-md-12 customCard'>\n            <table className='table table-bordered table-striped'>\n                <tbody>\n                    <tr className=\"headerSticky\">\n                        <th>Ip Address</th>\n                        <th>Login Date And Time</th>\n                    </tr>\n                    {displayData}\n                </tbody>\n            </table>\n\n        </div>\n    )\n}\n\nexport default ResourceLoginHistoryData","import moment from \"moment\";\nimport React, { useEffect, useState } from \"react\";\nimport LoginHistoryFilters from \"./LoginHistoryFilters\";\nimport axios from \"axios\";\nimport LoginHistoryDisplayData from \"./LoginHistoryDisplayData\";\nimport \"./CostCss.scss\";\nimport { environment } from \"../../environments/environment\";\nimport ResourceLoginHistoryData from \"./ResourceLoginHistoryData\";\nimport Loader from \"../Loader/Loader\";\n\nfunction LoginHistory() {\n  let fromDate = moment().subtract(7, \"days\")._d;\n  let toDate = moment()._d;\n\n  const baseUrl = environment.baseUrl;\n\n  let columns = [\n    \"user_id\",\n    \"resource_name\",\n    \"View_And_Upload\",\n    \"Role_View\",\n    \"Role_Approvals\",\n    \"Role_Grid\",\n  ];\n\n  const initialValue = {\n    screen: [],\n    fromDate: fromDate,\n    toDate: toDate,\n  };\n\n  const [formData, setFormData] = useState(initialValue);\n  const [screenFilters, setScreenFilters] = useState([]);\n  const [loginHistoryData, setLoginHistoryData] = useState([]);\n  const [resourceLogHisData, setResourceLogHisData] = useState([]);\n\n  const expandInitialValue = {\n    state: false,\n    rowAndColumnIndex: null,\n  };\n\n  const [resourceLoginHisState, setResourceLoginHisState] =\n    useState(expandInitialValue);\n  const [validator, setValidator] = useState(false);\n  const [loaderState, setLoaderState] = useState(false);\n\n  const screenTrackerInitialVal = {\n    screen_id: \"\",\n    user_id: \"\",\n  };\n  const [screenTracker, setScreenTracker] = useState(screenTrackerInitialVal);\n\n  useEffect(() => {\n    screensData();\n  }, []);\n\n  useEffect(() => {\n    searchHandler(screenFilters);\n  }, [screenFilters]);\n\n  useEffect(() => {}, [screenTracker, resourceLoginHisState]);\n\n  const screensData = () => {\n    axios({\n      url: baseUrl + `/CostMS/cost/getCostScreenNames`,\n    }).then((resp) => {\n      setScreenFilters(resp.data);\n      setFormData((prev) => ({ ...prev, [\"screen\"]: resp.data }));\n    });\n  };\n\n  const getResourcesLoginHistory = (data) => {\n    axios({\n      method: \"POST\",\n      url: baseUrl + \"/CostMS/cost/getResourceLoginHistory\",\n      data: data,\n    }).then((resp) => {\n      setResourceLogHisData([]);\n      setResourceLogHisData(resp.data);\n    });\n  };\n\n  useEffect(() => {}, [resourceLogHisData, resourceLoginHisState]);\n\n  useEffect(() => {}, [loginHistoryData]);\n\n  // const resourceLoginHis\n\n  const searchHandler = (data) => {\n    const finalFormData = {};\n\n    let screenData = data === undefined ? formData.screen : data;\n    let screenIds = [];\n    for (let index = 0; index < screenData.length; index++) {\n      screenIds.push(screenData[index].value);\n    }\n\n    finalFormData[\"screenIds\"] = screenIds.toString();\n\n    finalFormData[\"fromDate\"] = moment(formData.fromDate).format(\"yyyy-MM-DD\");\n    finalFormData[\"toDate\"] = moment(formData.toDate).format(\"yyyy-MM-DD\");\n\n    // let screenDm = document.getElementById(\"screenNames\").children[0].children[0];\n    // let screenDmCls = screenDm.classList;\n\n    // if(formData?.screen?.length === 0 && (screenDmCls.contains(\"txtBoxBorderColor\") === false)){\n    //   screenDmCls.add(\"txtBoxBorderColor\");\n    //   setValidator(true);\n    //   return;\n    // }else{\n    //   screenDmCls.remove(\"txtBoxBorderColor\");\n    //   setValidator(false);\n    // }\n    setLoaderState(true);\n    axios({\n      method: \"POST\",\n      url: baseUrl + \"/CostMS/cost/getLoginTracks\",\n      data: finalFormData,\n    }).then((resp) => {\n      let data = resp.data;\n      let finData = [];\n      for (let i = 0; i < data.length; i++) {\n        let obj = {};\n        for (let j = 0; j < columns.length; j++) {\n          if (data[i][columns[j]] != undefined) {\n            obj[columns[j]] = data[i][columns[j]];\n          }\n        }\n        finData.push(obj);\n      }\n      setLoginHistoryData(finData);\n      setLoaderState(false);\n    });\n  };\n\n  return (\n    <div>\n      <LoginHistoryFilters\n        formData={formData}\n        setFormData={setFormData}\n        screenFilters={screenFilters}\n        searchHandler={searchHandler}\n        validator={validator}\n      />\n\n      {loaderState ? <Loader /> : \"\"}\n\n      <LoginHistoryDisplayData\n        loginHistoryData={loginHistoryData}\n        setScreenTracker={setScreenTracker}\n        getResourcesLoginHistory={getResourcesLoginHistory}\n        resourceLoginHisState={resourceLoginHisState}\n        setResourceLoginHisState={setResourceLoginHisState}\n      />\n\n      {resourceLoginHisState.state && (\n        <ResourceLoginHistoryData resourceLogHisData={resourceLogHisData} />\n      )}\n    </div>\n  );\n}\n\nexport default LoginHistory;\n"],"names":["props","formData","setFormData","screenFilters","searchHandler","validator","useState","selectedScreens","setSelectedScreens","warnMsg","setWarnMsg","ref","useRef","useEffect","className","class","for","style","color","ele","current","id","options","hasSelectAll","valueRenderer","selected","_options","length","map","label","value","screen","disabled","onChange","e","prevVal","labelledBy","dateFormat","fromDate","maxDate","toDate","showMonthDropdown","showYearDropdown","dropdownMode","onKeyPress","preventDefault","prev","type","title","onClick","GlobalValidation","loginHistoryData","getResourcesLoginHistory","setScreenTracker","resourceLoginHisState","setResourceLoginHisState","displayData","setDisplayData","columns","columnsEmp","columnsData","setColumnsData","headerData","displayDataFnc","data","keys","Object","i","replaceAll","cData","element","index","tabData","forEach","inEle","inInd","undefined","push","align","state","rowAndColumnIndex","screen_name","user_id","onClickHandler","ind","resourceLogHisData","tab","moment","format","subtract","_d","baseUrl","environment","initialValue","setScreenFilters","setLoginHistoryData","setResourceLogHisData","loaderState","setLoaderState","screen_id","screenTracker","screensData","axios","url","then","resp","finalFormData","screenData","screenIds","toString","method","finData","obj","j","Loader"],"sourceRoot":""}