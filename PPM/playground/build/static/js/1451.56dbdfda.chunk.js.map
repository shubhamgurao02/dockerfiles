{"version":3,"file":"static/js/1451.56dbdfda.chunk.js","mappings":"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","sources":["views/PrimeReactTableComponent/MaterialReactCollapisbleTable.js","views/RevenueMetrices/MonthlyRevenueTable.js","views/RevenueMetrices/MonthlyRevenueCDTable.js","views/RevenueMetrices/MonthlyRevenueTrend.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport MaterialReactTable from \"material-react-table\";\nimport { IconButton } from \"@mui/material\";\nimport fte_active from \"../../assets/images/empstatusIcon/fte_active.png\";\nimport fte_inactive from \"../../assets/images/empstatusIcon/fte_inactive.png\";\nimport fte_notice from \"../../assets/images/empstatusIcon/fte_notice.png\";\nimport subk_active from \"../../assets/images/empstatusIcon/subk_active.png\";\nimport subk_inactive from \"../../assets/images/empstatusIcon/subk_inactive.png\";\nimport subk_notice from \"../../assets/images/empstatusIcon/subk_notice.png\";\nimport \"./EngagementAllocationsTable.scss\";\nimport { BiChevronLeft, BiChevronRight } from \"react-icons/bi\";\n\nexport default function MaterialReactCollapisbleTable(props) {\n  const icons = {\n    fte0: (\n      <img\n        src={fte_inactive}\n        alt=\"(fte_inactive_icon)\"\n        style={{ height: \"12px\", float: \"left\" }}\n        title=\"Ex-Employee\"\n      />\n    ),\n    fte1: (\n      <img\n        src={fte_active}\n        alt=\"(fte_active_icon)\"\n        style={{ height: \"12px\", float: \"left\" }}\n        title=\"Active Employee\"\n      />\n    ),\n    fte2: (\n      <img\n        src={fte_notice}\n        alt=\"(fte_notice_icon)\"\n        style={{ height: \"12px\", float: \"left\" }}\n        title=\"Employee in notice period\"\n      />\n    ),\n    subk0: (\n      <img\n        src={subk_inactive}\n        alt=\"(subk_inactive_icon)\"\n        style={{ height: \"12px\", float: \"left\" }}\n        title=\"Ex-Contractor\"\n      />\n    ),\n    subk1: (\n      <img\n        src={subk_active}\n        alt=\"(subk_active_icon)\"\n        style={{ height: \"12px\", width: \"auto\", float: \"left\" }}\n        title=\"Active Contractor\"\n        size=\"1em\"\n      />\n    ),\n    subk2: (\n      <img\n        src={subk_notice}\n        alt=\"(subk_notice_icon)\"\n        style={{ height: \"12px\", float: \"left\" }}\n        title=\"Contractor in notice period\"\n      />\n    ),\n  };\n\n  const { data, expandedCols, colExpandState } = props;\n\n  const [nodes, setNodes] = useState([]);\n  const [columns, setColumns] = useState(null);\n  const [hiddenColumns, setHiddenColumns] = useState({});\n  const [colExpFlag, setColumnExpFlag] = useState(false);\n  const [headers, setHeaders] = useState([]);\n\n  const numberWithCommas = (x) => {\n    var number = String(x);\n    if (number.includes(\".\")) {\n      var decimalNumbers = number;\n      var num = Number(decimalNumbers);\n      let FdN =\n        num != null &&\n        num.toLocaleString(\"en-US\", {\n          minimumFractionDigits: 2,\n          maximumFractionDigits: 20,\n        });\n      let final = FdN.split(\".\");\n      final[0] = final[0].replace(/(?<=\\d)(?=(\\d{3})+(?!\\d|\\.))/g, \",\");\n      return final.join(\".\");\n    } else {\n      return (\n        number != null &&\n        parseFloat(number)\n          .toLocaleString(\"en-US\", {\n            minimumFractionDigits: 2,\n            maximumFractionDigits: 20,\n          })\n          .replace(/(?<=\\d)(?=(\\d{3})+(?!\\d|\\.))/g, \",\")\n      );\n    }\n  };\n\n  useEffect(() => {\n    getData();\n  }, [data]);\n  var count = 0;\n\n  const getData = () => {\n    let expandClass = \"\";\n    if (colExpFlag == true && count > 0) {\n      expandClass = \"expanded\";\n    } else {\n      expandClass = \"\";\n    }\n    let tableData = data.tableData;\n    let columns = null;\n\n    if (data?.columns?.includes(\"'\")) {\n      columns = data?.columns?.replaceAll(\"'\", \"\");\n    } else {\n      columns = data?.columns;\n    }\n\n    let colArr = columns?.split(\",\");\n\n    let newHeaders = [];\n    let hiddenHeaders = [];\n\n    const obj = {};\n\n    for (let i = 0; i < colArr?.length; i++) {\n      let colVal = colArr[i].trim();\n\n      let firstData = tableData[0];\n      obj[colVal] = firstData[colVal];\n    }\n\n    let headerArray = Object.entries(obj);\n\n    let filteredHeaders = headerArray.filter(\n      ([key, value]) => typeof value === \"string\" && value.includes(\"^&\")\n    );\n\n    setHeaders(filteredHeaders);\n\n    filteredHeaders.map(([key, value]) => {\n      if (expandedCols.includes(key)) {\n        hiddenHeaders.push({ [key]: false });\n      }\n    });\n\n    setHiddenColumns(Object.assign({}, ...hiddenHeaders));\n\n    filteredHeaders.map(([key, value], index) => {\n      newHeaders.push({\n        accessorKey: key,\n        header: value.split(\"^&\")[0],\n        enableColumnActions: false,\n        enableHiding: true,\n        Header: ({ column }) => (\n          <div>\n            {value.split(\"^&\")[0]}{\" \"}\n            {key == colExpandState[2] ? (\n              <IconButton\n                className=\"expandIcon\"\n                title=\"Show Details\"\n                onClick={() => {\n                  setColumnExpFlag((prev) => !prev);\n                }}\n              >\n                {colExpFlag ? <BiChevronLeft /> : <BiChevronRight />}\n              </IconButton>\n            ) : (\n              \"\"\n            )}\n          </div>\n        ),\n        Cell: ({ cell }) => {\n          return (\n            <div\n              style={{\n                whiteSpace: \"nowrap\",\n                overflow: \"hidden\",\n                textOverflow: \"ellipsis\",\n              }}\n              title={cell.getValue()}\n              className={\n                key.includes(\"_\")\n                  ? key.split(\"_\")[1] % 2 == 0\n                    ? \"\"\n                    : \"odd\"\n                  : key.includes(\"total\")\n                  ? \"total\"\n                  : (key == \"roleName\" || key == \"prjMgr\") && \"projManager\"\n              }\n            >\n              {cell.column.id == \"name\" &&\n              cell.row.original.parentId != null ? (\n                <span className=\"rescolor\">\n                  {icons[cell.row.original[\"empStatus\"]]}\n                  &nbsp;{cell.getValue()}\n                </span>\n              ) : key.includes(\"_\") && key.split(\"_\")[2] ? (\n                numberWithCommas(cell.getValue())\n              ) : key.includes(\"total\") ? (\n                numberWithCommas(cell.getValue())\n              ) : (\n                cell.getValue()\n              )}\n            </div>\n          );\n        },\n      });\n    });\n\n    setColumns(newHeaders);\n    let values = [];\n    tableData?.map((d, i) => (i > 0 && d.id != -1 ? values.push(d) : \"\"));\n    setNodes(jsonToTree(values, { children: \"subRows\" }));\n  };\n\n  // useEffect(() => {\n  //   getData();\n  //   colExpFlag ? setHiddenColumns({}) : colCollapse();\n  // }, [colExpFlag]);\n\n  const expandF = () => {\n    getData();\n  };\n\n  const expandT = () => {\n    count++;\n    getData();\n    setHiddenColumns({});\n  };\n\n  useEffect(() => {\n    colExpFlag ? expandT() : expandF();\n    // getData();\n  }, [colExpFlag]);\n\n  const colCollapse = () => {\n    let hiddenHeaders = [];\n    headers.map(([key, value]) => {\n      if (expandedCols.includes(key)) {\n        hiddenHeaders.push({ [key]: false });\n      }\n    });\n\n    setHiddenColumns(Object.assign({}, ...hiddenHeaders));\n  };\n\n  const jsonToTree = (flatArray, options) => {\n    options = {\n      id: \"uniqueId\",\n      parentId: \"parentId\",\n      children: \"subRows\",\n      ...options,\n    };\n    const dictionary = {};\n    const tree = [];\n    const children = options.children;\n    flatArray.forEach((node) => {\n      const nodeId = node[options.id];\n      const nodeParentId = node[options.parentId];\n      dictionary[nodeId] = {\n        [children]: [],\n        ...node,\n        ...dictionary[nodeId],\n      };\n      dictionary[nodeParentId] = dictionary[nodeParentId] || { [children]: [] };\n      dictionary[nodeParentId][children].push(dictionary[nodeId]);\n    });\n    Object.values(dictionary).forEach((obj) => {\n      if (typeof obj[options.id] === \"undefined\") {\n        tree.push(...obj[children]);\n      }\n    });\n    return tree;\n  };\n\n  return (\n    <div className=\"materialReactExpandableTable engagementAllocationsTable darkHeader\">\n      {columns?.length ? (\n        <MaterialReactTable\n          columns={columns}\n          data={nodes}\n          enableExpandAll={true}\n          enableExpanding\n          enablePagination={false}\n          enableBottomToolbar={false}\n          enableTopToolbar={false}\n          enableColumnActions={false}\n          enableSorting={false}\n          filterFromLeafRows\n          initialState={{\n            expanded: false,\n            density: \"compact\",\n            columnVisibility: { ...hiddenColumns },\n            columnPinning: { right: [\"total\"] },\n          }}\n          state={{ columnVisibility: { ...hiddenColumns } }}\n          defaultColumn={{ minSize: 40, maxSize: 1000, size: 40 }}\n          enableStickyHeader\n          muiTableContainerProps={{\n            sx: {\n              maxHeight: \"70vh\",\n              width: \"auto\",\n              maxWidth: \"fit-content\",\n            },\n          }}\n          muiTableBodyProps={{\n            sx: {\n              \"&\": {},\n              \"& td\": {\n                borderRight: \"1px solid #ccc\",\n                height: \"22px\",\n                fontSize: \"11px\",\n                paddingTop: \"0px\",\n                paddingBottom: \"0px\",\n              },\n            },\n          }}\n          muiTableHeadProps={{\n            sx: {\n              \"& th\": {\n                borderTop: \"1px solid #ccc\",\n                borderRight: \"1px solid #ccc\",\n                background: \"#f4f4f4 \",\n                fontSize: \"13px\",\n                padding: \"0px 8px\",\n              },\n            },\n          }}\n        ></MaterialReactTable>\n      ) : null}\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport MaterialReactTable from \"material-react-table\";\nimport { IconButton } from \"@mui/material\";\nimport fte_active from \"../../assets/images/empstatusIcon/fte_active.png\";\nimport fte_inactive from \"../../assets/images/empstatusIcon/fte_inactive.png\";\nimport fte_notice from \"../../assets/images/empstatusIcon/fte_notice.png\";\nimport subk_active from \"../../assets/images/empstatusIcon/subk_active.png\";\nimport subk_inactive from \"../../assets/images/empstatusIcon/subk_inactive.png\";\nimport subk_notice from \"../../assets/images/empstatusIcon/subk_notice.png\";\nimport { AiFillRightCircle } from \"react-icons/ai\";\nimport { FaInfoCircle } from \"react-icons/fa\";\nimport \"./RevenueForecastBuTable.scss\";\nimport RevenueForecastInfoPopUp from \"./RevenueForecastInfoPopUp\";\nimport { Link } from \"react-router-dom\";\n\nexport default function MonthlyRevenueTable(props) {\n  const icons = {\n    Employee: (\n      <img\n        src={fte_active}\n        alt=\"(fte_active_icon)\"\n        style={{ height: \"12px\" }}\n        title=\"Employee\"\n      />\n    ),\n    Contractor: (\n      <img\n        src={subk_active}\n        alt=\"(subk_active_icon)\"\n        style={{ height: \"12px\" }}\n        title=\"Contractor\"\n      />\n    ),\n    fteActive: (\n      <img\n        src={fte_active}\n        alt=\"(fte_active_icon)\"\n        style={{ height: \"12px\" }}\n        title=\"Active Employee\"\n      />\n    ),\n    fteNotice: (\n      <img\n        src={fte_notice}\n        alt=\"(fte_notice_icon)\"\n        style={{ height: \"12px\" }}\n        title=\"Employee in notice period\"\n      />\n    ),\n\n    subkActive: (\n      <img\n        src={subk_active}\n        alt=\"(subk_active_icon)\"\n        style={{ height: \"12px\" }}\n        title=\"Active Contractor\"\n      />\n    ),\n    subk2: (\n      <img\n        src={subk_notice}\n        alt=\"(subk_notice_icon)\"\n        style={{ height: \"12px\" }}\n        title=\"Contractor in notice period\"\n      />\n    ),\n  };\n  const { data, expandedCols, colExpandState, view, title } = props;\n  const [nodes, setNodes] = useState([]);\n  const [columns, setColumns] = useState(null);\n  const [hiddenColumns, setHiddenColumns] = useState({});\n  const [colExpFlag, setColumnExpFlag] = useState(false);\n  const [headers, setHeaders] = useState([]);\n  const [object, setObject] = useState({});\n  const [infoPopUp, setInfoPopUp] = useState(false);\n  const [iconName, setIconName] = useState();\n  const [anchorEl, setAnchorEl] = useState(null);\n\n  const numberWithCommas = (x) => {\n    var number = String(x);\n    if (number.includes(\".\")) {\n      if (number.includes(\".00\")) {\n        var number = parseFloat(x);\n        return number?.toLocaleString();\n      } else {\n        var decimalNumbers = number;\n        var num = Number(decimalNumbers);\n        let FdN = num != null && num?.toFixed(2);\n        let final = FdN.split(\".\");\n        final[0] = final[0]?.replace(/(\\d)(?=(\\d{2})+\\d$)/g, \"$1,\");\n        final[1] = final[1]?.replace(/(\\d{3})(?=\\d)/g, \"$1,\");\n\n        return final.join(\".\");\n      }\n    } else {\n      var number = parseFloat(x);\n      return number?.toLocaleString();\n    }\n  };\n  useEffect(() => {\n    numberWithCommas(getData());\n  }, [data]);\n\n  useEffect(() => {\n    setHeaders(object);\n    setObject(object);\n  }, [object]);\n\n  const getData = () => {\n    let tableData = data?.tableData;\n    let columns = null;\n    if (data?.columns?.includes(\"'\")) {\n      columns = data?.columns?.replaceAll(\"'\", \"\");\n    } else {\n      columns = data?.columns;\n    }\n    let colArr = columns?.split(\",\");\n    let newHeaders = [];\n    let hiddenHeaders = [];\n    const obj1 = {};\n    const obj = {};\n\n    for (let i = 0; i < colArr?.length; i++) {\n      let colVal = colArr[i].trim();\n      let firstData = tableData[0];\n      obj[colVal] = firstData[colVal];\n    }\n    let headerArray = Object.entries(obj);\n    let unWantedCols = [];\n    let filteredHeaders = headerArray.filter(\n      ([key, value]) => typeof value === \"string\" && value.includes(\"^&\")\n    );\n    filteredHeaders.forEach((d) => (obj1[d[1].split(\"^&\")[0]] = d[0]));\n    let newObject = Object.entries(obj1);\n    setHiddenColumns(Object.assign({}, ...hiddenHeaders));\n    let minusOneRow = tableData?.filter((d) => d.id == -1);\n    newObject?.map(([key, value], index) => {\n      newHeaders.push({\n        accessorKey: value,\n        header: key,\n        enableColumnActions: false,\n        enableHiding: true,\n        Header: ({ column }) => (\n          <div\n            className={\n              value.includes(\"name\")\n                ? \"mixer\"\n                : value.includes(\"rCount\") || value.includes(\"working_days\")\n                ? \"mixer\"\n                : \"\"\n            }\n            title={key}\n          >\n            {key}{\" \"}\n            {value == colExpandState[2] ? (\n              <IconButton\n                onClick={() => {\n                  setColumnExpFlag((prev) => !prev);\n                }}\n              >\n                <AiFillRightCircle />\n              </IconButton>\n            ) : value.includes(\"name\") ||\n              value.includes(\"working_days\") ||\n              value.includes(\"rCount\") ? (\n              \"\"\n            ) : (\n              <FaInfoCircle\n                className=\"tableInfoIcon\"\n                onClick={(e) => {\n                  setAnchorEl(e.currentTarget);\n                  setIconName(key);\n                  setInfoPopUp(true);\n                }}\n              >\n                {\"\"}\n              </FaInfoCircle>\n            )}\n          </div>\n        ),\n      });\n    });\n\n    let subHeaders = minusOneRow ? Object.entries(minusOneRow[0]) : null;\n\n    subHeaders?.sort();\n\n    const revenueOrder = [\n      \"Revenue\",\n      \"AssRevenue\",\n      \"ActRevenue\",\n      \"ApprRevenue\",\n      \"RecRevenue\",\n    ];\n    if (subHeaders !== null) {\n      subHeaders = subHeaders.sort((a, b) => {\n        const indexA = revenueOrder.indexOf(a[0]);\n        const indexB = revenueOrder.indexOf(b[0]);\n        return indexA - indexB;\n      });\n    }\n\n    newHeaders.map((data) => {\n      let i = newHeaders.indexOf(data);\n      let subArray = [];\n      subHeaders.map(([key, value], index) => {\n        let subkey = key.includes(\"GM\")\n          ? \"GM\"\n          : key.includes(\"capacity\") || key.includes(\"gross\")\n          ? \"capacity\"\n          : key.includes(\"allocations\")\n          ? \"allocations\"\n          : key.includes(\"billAlloc\")\n          ? \"billAlloc\"\n          : key.includes(\"billAct\")\n          ? \"billAct\"\n          : key.includes(\"billAss\")\n          ? \"billAss\"\n          : key.includes(\"billAppr\")\n          ? \"billAppr\"\n          : key.includes(\"Cost\")\n          ? \"Cost\"\n          : key.includes(\"Revenue\")\n          ? \"Revenue\"\n          : null;\n        if (subkey != null) {\n          if (data.accessorKey.includes(subkey)) {\n            {\n              let obj = {\n                id: key,\n                header:\n                  value == null || value == 0 ? (\n                    \"\"\n                  ) : (\n                    <div className=\"center-align\">\n                      {value == \"PR (Bill+Ovrh)\" ? (\n                        <div title={\"PR (Role)\"}> {\"PR (Role)\"}</div>\n                      ) : value == \"RR\" ? (\n                        <div title={\"RR (Role)\"}> {\"RR (Role)\"}</div>\n                      ) : (\n                        <div title={value}> {value}</div>\n                      )}\n                    </div>\n                  ),\n                accessorKey: key,\n                Cell: ({ cell }) => {\n                  return (\n                    <span\n                      style={{\n                        whiteSpace: \"nowrap\",\n                        overflow: \"hidden\",\n                        textOverflow: \"ellipsis\",\n                      }}\n                    >\n                      {cell.getValue() != null &&\n                      (key.includes(\"Revenue\") || key.includes(\"Cost\")) ? (\n                        <>\n                          <div title={numberWithCommas(cell.getValue())}>\n                            <span>\n                              $\n                              {cell.row.original.lvl == \"2\" ? (\n                                <div style={{ float: \"right\" }}>\n                                  {numberWithCommas(cell.getValue())}\n                                </div>\n                              ) : (\n                                <b style={{ float: \"right\" }}>\n                                  {numberWithCommas(cell.getValue())}\n                                </b>\n                              )}\n                            </span>\n                          </div>\n                        </>\n                      ) : cell.getValue() != null &&\n                        (key.includes(\"GM\") || key.includes(\"Perc\")) ? (\n                        <>\n                          {cell.row.original.lvl == \"2\" ? (\n                            <div\n                              class=\"align right\"\n                              title={numberWithCommas(cell.getValue())}\n                            >\n                              {numberWithCommas(cell.getValue())} %\n                            </div>\n                          ) : (\n                            <b\n                              class=\"align right\"\n                              title={numberWithCommas(cell.getValue())}\n                            >\n                              {numberWithCommas(cell.getValue())} %\n                            </b>\n                          )}\n                        </>\n                      ) : cell.row.original.lvl == \"2\" ? (\n                        <div\n                          class=\"align right\"\n                          title={numberWithCommas(cell.getValue())}\n                        >\n                          {numberWithCommas(cell.getValue())}\n                        </div>\n                      ) : (\n                        <b\n                          class=\"align right\"\n                          title={numberWithCommas(cell.getValue())}\n                        >\n                          {numberWithCommas(cell.getValue())}\n                        </b>\n                      )}\n                    </span>\n                  );\n                },\n              };\n              subArray.push(obj);\n              newHeaders[i].columns = subArray;\n            }\n          }\n        } else {\n          if (data.accessorKey.includes(key)) {\n            let obj = {\n              id: key,\n              header:\n                value == null || value == 0 ? (\n                  \"\"\n                ) : (\n                  <div\n                  // className={\n                  //   value.includes(null) ||\n                  //   (value.includes(\"\") && \"nullCol\" && \"center-align\")\n                  // }\n                  >\n                    {value == \"PR (Bill+Ovrh)\" ? (\n                      <div title={\"PR (Role)\"}> {\"PR (Role)\"}</div>\n                    ) : value == \"RR\" ? (\n                      <div title={\"RR (Role)\"}> {\"RR (Role)\"}</div>\n                    ) : (\n                      <div title={value}> {value}</div>\n                    )}\n                  </div>\n                ),\n              accessorKey: key,\n              Cell: ({ cell }) => {\n                const originalDate = new Date(cell.row.original.month);\n                const formattedDate = `${originalDate.toLocaleString(\n                  \"default\",\n                  {\n                    month: \"short\",\n                  }\n                )}-${originalDate.getFullYear()}`;\n\n                return (\n                  <span\n                    style={{\n                      whiteSpace: \"nowrap\",\n                      overflow: \"hidden\",\n                      textOverflow: \"ellipsis\",\n                      fontWeight:\n                        cell.row.original.lvl === \"1\" ? \"bold\" : \"normal\",\n                    }}\n                  >\n                    {cell.row.original.lvl === \"1\" && key == \"name\" ? (\n                      <span style={{ float: \"left\" }}>\n                        {view === \"month\"\n                          ? cell.row.original.month === \" \"\n                            ? cell.row.original.name\n                            : formattedDate\n                          : \"\" || view === \"region\" || view === \"customer\"\n                          ? cell.row.original.name\n                          : \"\"}\n                      </span>\n                    ) : cell.row.original.lvl === \"1\" && key == \"rCount\" ? (\n                      <span\n                        style={{ float: \"right\" }}\n                        title={numberWithCommas(cell.getValue())}\n                      >\n                        {numberWithCommas(cell.getValue())}\n                      </span>\n                    ) : cell.row.original.lvl === \"1\" &&\n                      key == \"working_days\" ? (\n                      <span\n                        style={{ float: \"right\" }}\n                        title={numberWithCommas(cell.getValue())}\n                      >\n                        {numberWithCommas(cell.getValue())}\n                      </span>\n                    ) : cell.row.original.lvl === \"1\" && key == \"month\" ? (\n                      <span\n                        style={{ float: \"right\" }}\n                        title={new Date(cell.row.original.month)\n                          .toLocaleString(\"en-US\", {\n                            year: \"numeric\",\n                            month: \"short\",\n                          })\n                          .replace(/\\s/g, \"-\")\n                          .replace(\".\", \"\")}\n                      >\n                        {new Date(cell.row.original.month)\n                          .toLocaleString(\"en-US\", {\n                            year: \"numeric\",\n                            month: \"short\",\n                          })\n                          .replace(/\\s/g, \"-\")\n                          .replace(\".\", \"\")}\n                      </span>\n                    ) : (cell.row.original.lvl === \"2\" &&\n                        cell.column.id === \"name\" &&\n                        view == \"region\") ||\n                      key == \"month\" ||\n                      (view == \"customer\" && key != \"rCount\") ? (\n                      <span\n                        style={{ float: \"left\" }}\n                        title={new Date(cell.row.original.month)\n                          .toLocaleString(\"en-US\", {\n                            year: \"numeric\",\n                            month: \"short\",\n                          })\n                          .replace(/\\s/g, \"-\")\n                          .replace(\".\", \"\")}\n                      >\n                        {new Date(cell.row.original.month)\n                          .toLocaleString(\"en-US\", {\n                            year: \"numeric\",\n                            month: \"short\",\n                          })\n                          .replace(/\\s/g, \"-\")\n                          .replace(\".\", \"\")}\n                      </span>\n                    ) : cell.row.original.lvl === \"2\" &&\n                      cell.column.id === \"name\" ? (\n                      <span\n                        style={{ float: \"left\" }}\n                        title={cell.row.original.name}\n                      >\n                        {cell.row.original.name}\n                      </span>\n                    ) : (\n                      <span\n                        style={{ float: \"right\" }}\n                        title={numberWithCommas(cell.getValue())}\n                      >\n                        {numberWithCommas(cell.getValue())}\n                      </span>\n                    )}\n                  </span>\n                );\n              },\n            };\n            newHeaders[i].columns = [obj];\n          }\n        }\n      });\n    });\n\n    setColumns(newHeaders);\n    let values = [];\n    tableData?.map((d) => (d.id != -1 && d.id != -2 ? values.push(d) : \"\"));\n\n    let convertedJsonToTree = jsonToTree(values, { children: \"subRows\" });\n    setNodes(convertedJsonToTree);\n  };\n\n  useEffect(() => {\n    colExpFlag ? setHiddenColumns({}) : colCollapse();\n  }, [colExpFlag]);\n\n  const colCollapse = () => {\n    let hiddenHeaders = [];\n    headers?.map(([key, value]) => {\n      if (expandedCols.includes(key)) {\n        hiddenHeaders.push({ [key]: false });\n      }\n    });\n\n    setHiddenColumns(Object.assign({}, ...hiddenHeaders));\n  };\n\n  const jsonToTree = (flatArray, options) => {\n    options = {\n      id: \"uniqueId\",\n      parentId: \"parentId\",\n      children: \"subRows\",\n      ...options,\n    };\n    const dictionary = {};\n    const tree = [];\n    const children = options.children;\n    flatArray?.forEach((node) => {\n      const nodeId = node[options.id];\n      const nodeParentId = node[options.parentId];\n      dictionary[nodeId] = {\n        [children]: [],\n        ...node,\n        ...dictionary[nodeId],\n      };\n      dictionary[nodeParentId] = dictionary[nodeParentId] || { [children]: [] };\n      dictionary[nodeParentId][children].push(dictionary[nodeId]);\n    });\n    Object.values(dictionary).forEach((obj) => {\n      if (typeof obj[options.id] === \"undefined\") {\n        tree.push(...obj[children]);\n      }\n    });\n    return tree;\n  };\n\n  // Assuming flatData is your data.tableData\n  const flatData = data.tableData;\n  const treeData = jsonToTree(flatData, {\n    parentId: \"parentId\",\n    children: \"subRows\",\n  });\n\n  // const initialSortingState = () => {\n  //   let initialSortids = [];\n  //   columns?.map((column) => {\n  //     column?.columns.map((col) => {\n  //       col.accessorKey.includes(\"Revenue\")\n  //         ? initialSortids.push({ id: col.accessorKey, desc: true })\n  //         : \"\";\n  //     });\n  //   });\n  //   return initialSortids;\n  // };\n  return (\n    <div className=\"materialReactExpandableTable revenueForecastBuTable darkHeader\">\n      {nodes.length ? (\n        <MaterialReactTable\n          columns={columns}\n          data={nodes}\n          enableExpandAll={true} //hide expand all double arrow in column header\n          enableExpanding\n          enablePagination={false}\n          enableBottomToolbar={false}\n          enableTopToolbar={false}\n          enableColumnActions={false}\n          enableSorting={true}\n          filterFromLeafRows //apply filtering to all rows instead of just parent rows\n          initialState={{\n            expanded: false,\n            density: \"compact\",\n            columnVisibility: { ...hiddenColumns },\n            columnPinning: { right: [\"total\"] },\n            // sorting: initialSortingState(),\n          }} //expand all rows by default\n          state={{ columnVisibility: { ...hiddenColumns } }}\n          //paginateExpandedRows={false} //When rows are expanded, do not count sub-rows as number of rows on the page towards pagination\n          defaultColumn={{ minSize: 40, maxSize: 1000, size: 80 }} //units are in px\n          muiTableBodyProps={{\n            sx: {\n              \"&\": {\n                borderRight: \"1px solid #ccc\",\n                borderBottom: \"1px solid #ccc\",\n              },\n              \"& td:first-of-type\": {\n                borderLeft: \"1px solid #ccc\",\n              },\n              \"& td\": {\n                // borderTop: \"1px solid #ccc\",\n                borderRight: \"1px solid #ccc\",\n                height: \"22px\",\n                padding: \"0px 5px\",\n                maxWidth: \"150px\",\n              },\n            },\n          }}\n          muiTableHeadProps={{\n            sx: {\n              \"& th\": {\n                borderTop: \"1px solid #ccc\",\n                borderRight: \"1px solid #ccc\",\n                background: \"#f4f4f4 \",\n                padding: \"0 5px\",\n              },\n              \"& th:first-of-type\": {\n                borderLeft: \"1px solid #ccc\",\n              },\n            },\n          }}\n        />\n      ) : null}\n      {infoPopUp ? (\n        <RevenueForecastInfoPopUp\n          infoPopUp={infoPopUp}\n          setInfoPopUp={setInfoPopUp}\n          iconName={iconName}\n          setIconName={setIconName}\n          anchorEl={anchorEl}\n          setAnchorEl={setAnchorEl}\n        />\n      ) : (\n        \"\"\n      )}\n    </div>\n  );\n}\n","import React, { useState, useEffect, useRef } from \"react\";\nimport MaterialReactTable from \"material-react-table\";\nimport { IconButton } from \"@mui/material\";\nimport { AiFillLeftCircle, AiFillRightCircle } from \"react-icons/ai\";\nimport \"./MonthlyRevenueCDTable.scss\";\nimport \"./MonthlyPRMaterialTable.scss\";\nimport { BiChevronRight } from \"react-icons/bi\";\n\nexport default function MonthlyRevenueCDTable(props) {\n  const {\n    data,\n    expandedCols,\n    colExpandState,\n    selectedDuration,\n    shouldRenderTable,\n    tableKey,\n  } = props;\n  console.log(props, \"props\");\n  // const containerRef = useRef(null);\n\n  const [nodes, setNodes] = useState([]);\n  const [columns, setColumns] = useState(null);\n  const [hiddenColumns, setHiddenColumns] = useState({});\n  const [colExpFlag, setColumnExpFlag] = useState(false);\n  const [headers, setHeaders] = useState([]);\n\n  // useEffect(() => {\n  //   const container = containerRef.current;\n\n  //   if (container.children[0] != undefined) {\n  //     setTimeout(() => {\n  //       if (container) {\n  //         container.children[0].children[0].children[0].scrollLeft =\n  //           container.children[0].children[0].children[0].scrollWidth;\n  //       }\n  //     }, 1000);\n  //   }\n  // }, [nodes.length]);\n\n  useEffect(() => {\n    getData();\n  }, [data.tableData]);\n  var count = 0;\n\n  const getData = () => {\n    let expandClass = \"\";\n    if (colExpFlag == true && count > 0) {\n      expandClass = \"expanded\";\n    } else {\n      expandClass = \"\";\n    }\n    let tableData = data?.tableData;\n    let columns = null;\n\n    if (data?.columns?.includes(\"'\")) {\n      columns = data?.columns?.replaceAll(\"'\", \"\");\n    } else {\n      columns = data?.columns;\n    }\n\n    let colArr = columns?.split(\",\");\n\n    let unWantedColsArray = [\"lvl\", \"id\", \"keyAttr\", \"customerId\", \"customer\"];\n    let filteredHeadersArray = colArr?.filter(\n      (d) => !unWantedColsArray.includes(d)\n    );\n    console.log(\"filteredHeadersArray -- \", filteredHeadersArray);\n    let newHeaders = [];\n    let hiddenHeaders = [];\n\n    const obj = {};\n\n    for (let i = 0; i < colArr?.length; i++) {\n      let colVal = colArr[i].trim();\n\n      let firstData = tableData[0];\n\n      obj[colVal] = firstData[colVal];\n    }\n    console.log(obj, \"obj\");\n    let headerArray = Object.entries(obj);\n    console.log(headerArray, \"headerArray\");\n\n    let unWantedCols = [\"lvl\", \"id\", \"keyAttr\", \"customerId\", \"customer\"];\n    let filteredHeaders = headerArray.filter(\n      (d) => !unWantedCols.includes(d[0])\n    );\n    console.log(filteredHeaders, \"filteredHeaders\");\n\n    filteredHeaders.map(([key, value]) => {\n      console.log(expandedCols.includes(key), \"inline77\");\n      if (expandedCols.includes(key)) {\n        hiddenHeaders.push({ [key]: false });\n      }\n    });\n\n    setHiddenColumns(Object.assign({}, ...hiddenHeaders));\n\n    filteredHeadersArray?.forEach((key, index) => {\n      const value = obj[key];\n      const isSpecialKey =\n        key.includes(\"csl\") ||\n        key.includes(\"dp\") ||\n        key.includes(\"acc_exe\") ||\n        key.includes(\"acc_own\");\n      console.log(isSpecialKey, \"isSpecialKey\");\n      {\n        newHeaders.push({\n          accessorKey: key,\n          enableColumnActions: false,\n          enableHiding: true,\n          Header: ({ column }) => (\n            <div\n              className={isSpecialKey == true ? \"headStyle\" : \"\"}\n              title={value.split(\"^&\")[0]}\n            >\n              {selectedDuration === \"12\" ? (\n                [\n                  5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22,\n                  23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37,\n                  39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,\n                  54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69,\n                  70, 71, 72, 73,\n                ].includes(index) ? (\n                  \"\"\n                ) : key.includes(\"pl\") ? (\n                  \"Planned Revenue\"\n                ) : key.includes(\"ar\") ? (\n                  \"Actual Revenue\"\n                ) : key.includes(\"rr\") ? (\n                  \"Recognized Revenue\"\n                ) : (\n                  value.split(\"^&\")[0]\n                )\n              ) : selectedDuration === \"11\" ? (\n                [\n                  5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22,\n                  23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38,\n                  39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,\n                  54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67,\n                ].includes(index) ? (\n                  \"\"\n                ) : key.includes(\"pl\") ? (\n                  \"Planned Revenue\"\n                ) : key.includes(\"ar\") ? (\n                  \"Actual Revenue\"\n                ) : key.includes(\"rr\") ? (\n                  \"Recognized Revenue\"\n                ) : (\n                  value.split(\"^&\")[0]\n                )\n              ) : selectedDuration === \"10\" ? (\n                [\n                  5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22,\n                  23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38,\n                  39, 41, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54,\n                  55, 56, 57, 58, 59, 60, 61,\n                ].includes(index) ? (\n                  \"\"\n                ) : key.includes(\"pl\") ? (\n                  \"Planned Revenue\"\n                ) : key.includes(\"ar\") ? (\n                  \"Actual Revenue\"\n                ) : key.includes(\"rr\") ? (\n                  \"Recognized Revenue\"\n                ) : (\n                  value.split(\"^&\")[0]\n                )\n              ) : selectedDuration === \"9\" ? (\n                [\n                  5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22,\n                  23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38,\n                  39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54,\n                  55,\n                ].includes(index) ? (\n                  \"\"\n                ) : key.includes(\"pl\") ? (\n                  \"Planned Revenue\"\n                ) : key.includes(\"ar\") ? (\n                  \"Actual Revenue\"\n                ) : key.includes(\"rr\") ? (\n                  \"Recognized Revenue\"\n                ) : (\n                  value.split(\"^&\")[0]\n                )\n              ) : selectedDuration === \"8\" ? (\n                [\n                  5, 6, 7, 8, 9, 10, 11, 13, 15, 14, 16, 17, 18, 19, 20, 21, 22,\n                  23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38,\n                  39, 40, 41, 43, 44, 45, 46, 47, 48, 49,\n                ].includes(index) ? (\n                  \"\"\n                ) : key.includes(\"pl\") ? (\n                  \"Planned Revenue\"\n                ) : key.includes(\"ar\") ? (\n                  \"Actual Revenue\"\n                ) : key.includes(\"rr\") ? (\n                  \"Recognized Revenue\"\n                ) : (\n                  value.split(\"^&\")[0]\n                )\n              ) : selectedDuration === \"7\" ? (\n                [\n                  5, 6, 7, 8, 9, 10, 13, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22,\n                  23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39,\n                  40, 41, 42, 43,\n                ].includes(index) ? (\n                  \"\"\n                ) : key.includes(\"pl\") ? (\n                  \"Planned Revenue\"\n                ) : key.includes(\"ar\") ? (\n                  \"Actual Revenue\"\n                ) : key.includes(\"rr\") ? (\n                  \"Recognized Revenue\"\n                ) : (\n                  value.split(\"^&\")[0]\n                )\n              ) : selectedDuration === \"6\" ? (\n                [\n                  5, 6, 7, 8, 9, 11, 13, 12, 14, 15, 16, 17, 18, 19, 20, 22, 23,\n                  24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39,\n                  40, 41, 42, 43,\n                ].includes(index) ? (\n                  \"\"\n                ) : key.includes(\"pl\") ? (\n                  \"Planned Revenue\"\n                ) : key.includes(\"ar\") ? (\n                  \"Actual Revenue\"\n                ) : key.includes(\"rr\") ? (\n                  \"Recognized Revenue\"\n                ) : (\n                  value.split(\"^&\")[0]\n                )\n              ) : selectedDuration === \"5\" ? (\n                [\n                  5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 17, 16, 19, 20, 21, 22,\n                  23, 24, 25, 26, 28, 29, 30, 31,\n                ].includes(index) ? (\n                  \"\"\n                ) : key.includes(\"pl\") ? (\n                  \"Planned Revenue\"\n                ) : key.includes(\"ar\") ? (\n                  \"Actual Revenue\"\n                ) : key.includes(\"rr\") ? (\n                  \"Recognized Revenue\"\n                ) : (\n                  value.split(\"^&\")[0]\n                )\n              ) : selectedDuration === \"4\" ? (\n                [\n                  5, 6, 7, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 23,\n                  24, 25,\n                ].includes(index) ? (\n                  \"\"\n                ) : key.includes(\"pl\") ? (\n                  \"Planned Revenue\"\n                ) : key.includes(\"ar\") ? (\n                  \"Actual Revenue\"\n                ) : key.includes(\"rr\") ? (\n                  \"Recognized Revenue\"\n                ) : (\n                  value.split(\"^&\")[0]\n                )\n              ) : selectedDuration === \"3\" ? (\n                [5, 6, 8, 9, 10, 11, 13, 14, 15, 16, 18, 19].includes(index) ? (\n                  \"\"\n                ) : key.includes(\"pl\") ? (\n                  \"Planned Revenue\"\n                ) : key.includes(\"ar\") ? (\n                  \"Actual Revenue\"\n                ) : key.includes(\"rr\") ? (\n                  \"Recognized Revenue\"\n                ) : (\n                  value.split(\"^&\")[0]\n                )\n              ) : selectedDuration === \"2\" ? (\n                [5, 7, 8, 10, 11, 13, 14, 15, 16, 18, 19].includes(index) ? (\n                  \"\"\n                ) : key.includes(\"pl\") ? (\n                  \"Planned Revenue\"\n                ) : key.includes(\"ar\") ? (\n                  \"Actual Revenue\"\n                ) : key.includes(\"rr\") ? (\n                  \"Recognized Revenue\"\n                ) : (\n                  <span style={{ paddingLeft: \"0px\" }}>\n                    {value.split(\"^&\")[0]}\n                  </span>\n                )\n              ) : (\n                value.split(\"^&\")[0]\n              )}\n\n              {key == colExpandState[2] ? (\n                <span className={`expandIcon ${expandClass}`}>\n                  <IconButton\n                    className=\"expandIcon\"\n                    onClick={() => {\n                      setColumnExpFlag((prev) => !prev);\n                    }}\n                  >\n                    {colExpFlag && !shouldRenderTable ? (\n                      <BiChevronLeft />\n                    ) : (\n                      <BiChevronRight />\n                    )}\n                  </IconButton>\n                </span>\n              ) : null}\n            </div>\n          ),\n        });\n      }\n    });\n\n    setColumns(newHeaders);\n\n    let values = [];\n\n    if (Array.isArray(tableData) && tableData.length > 0) {\n      values = tableData.filter((_, index) => index !== 0);\n    }\n    console.log(values, \"values\");\n\n    function formatValuesWithCommas(data) {\n      for (let i = 0; i < data.length; i++) {\n        const keys = Object.keys(data[i]);\n        for (const key of keys) {\n          if (\n            key.includes(\"csl\") ||\n            key.includes(\"dp\") ||\n            key.includes(\"acc_exe\") ||\n            key.includes(\"acc_own\")\n          ) {\n            // console.log(\"cslfirst\");\n            data[i][key] = (\n              <span className=\"bodyStyle ellipsis\" title={data[i][key]}>\n                {data[i][key]}\n              </span>\n            );\n          }\n\n          if (\n            key.includes(\"arval\") ||\n            key.includes(\"rrval\") ||\n            key.includes(\"plval\") ||\n            key.includes(\"arRevDelta\") ||\n            key.includes(\"plRevDelta\") ||\n            key.includes(\"rrRevDelta\")\n          ) {\n            if (!isNaN(data[i][key])) {\n              // Check if the value is negative\n              const isNegative = data[i][key] < 0;\n              const isPositive = data[i][key] > 0;\n\n              data[i][key] = Number(data[i][key]).toLocaleString();\n\n              if (key.includes(\"Delta\")) {\n                if (isNegative) {\n                  data[i][key] = (\n                    <span className=\"delta dispStyle\" title={data[i][key]}>\n                      {data[i][key]}\n                    </span>\n                  );\n                }\n                if (isPositive) {\n                  data[i][key] = (\n                    <span className=\"delta dispGreen\" title={data[i][key]}>\n                      {data[i][key]}\n                    </span>\n                  );\n                } else {\n                  data[i][key] = (\n                    <span className=\"delta\" title={data[i][key]}>\n                      {data[i][key]}\n                    </span>\n                  );\n                }\n              } else if (\n                key.includes(\"arval\") ||\n                key.includes(\"rrval\") ||\n                key.includes(\"plval\")\n              ) {\n                if (isNegative) {\n                  data[i][key] = (\n                    <span\n                      className=\"plRev dispStyle ellipsis\"\n                      title={data[i][key]}\n                    >\n                      {data[i][key]}\n                    </span>\n                  );\n                } else {\n                  data[i][key] = (\n                    <span className=\"plRev\" title={data[i][key]}>\n                      {data[i][key]}\n                    </span>\n                  );\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n\n    formatValuesWithCommas(values);\n\n    setNodes(jsonToTree(values, { children: \"subRows\" }));\n  };\n\n  useEffect(() => {\n    colExpFlag ? expandT() : expandF();\n  }, [colExpFlag]);\n  const expandT = () => {\n    count++;\n    getData();\n    setHiddenColumns({});\n  };\n\n  const expandF = () => {\n    getData();\n  };\n\n  const jsonToTree = (flatArray, options) => {\n    options = {\n      id: \"id\",\n      parentId: \"parentId\",\n      children: \"subRows\",\n      ...options,\n    };\n    const dictionary = {}; // a hash table mapping to the specific array objects with their ids as key\n    const tree = [];\n    const children = options.children;\n    flatArray.forEach((node) => {\n      const nodeId = node[options.id];\n      const nodeParentId = node[options.parentId];\n      dictionary[nodeId] = {\n        [children]: [], // init a children property\n        ...node, // add other propertys\n        ...dictionary[nodeId], // children will be replaced if this node already has children property which was set below\n      };\n      dictionary[nodeParentId] = dictionary[nodeParentId] || { [children]: [] }; // if it's not exist in dictionary, init an object with children property\n      dictionary[nodeParentId][children].push(dictionary[nodeId]); // add reference to current node object in parent node object\n    });\n    Object.values(dictionary).forEach((obj) => {\n      if (typeof obj[options.id] === \"undefined\") {\n        tree.push(...obj[children]);\n      }\n    });\n    return tree;\n  };\n  const stylesForDuration12 = {\n    \"& th:nth-child(2)\": {\n      borderRight: colExpFlag ? \"1px solid #ccc\" : \"none\",\n    },\n    \"& th:nth-child(3)\": {\n      borderRight: colExpFlag ? \"1px solid #ccc\" : \"none\",\n    },\n    \"& th:nth-child(4)\": {\n      borderRight: colExpFlag ? \"1px solid #ccc\" : \"none\",\n    },\n    \"& th:nth-child(5)\": {\n      borderRight: colExpFlag ? \"1px solid #ccc\" : \"none\",\n    },\n    \"& th:nth-child(28)\": {\n      borderRight: colExpFlag ? \"1px solid #ccc\" : \"none\",\n    },\n    \"& th:nth-child(51)\": {\n      borderRight: colExpFlag ? \"1px solid #ccc\" : \"none\",\n    },\n    \"& th:nth-child(74)\": {\n      borderRight: colExpFlag ? \"1px solid #ccc\" : \"none\",\n    },\n    \"& th:nth-child(24)\": {\n      borderRight: colExpFlag ? \"\" : \"1px solid #ccc\",\n    },\n    \"& th:nth-child(47)\": {\n      borderRight: colExpFlag ? \"\" : \"1px solid #ccc\",\n    },\n    \"& th:nth-child(70)\": {\n      borderRight: colExpFlag ? \"\" : \"1px solid #ccc\",\n    },\n  };\n\n  const stylesForDuration11 = {\n    \"& th:nth-child(2)\": {\n      borderRight: colExpFlag ? \"1px solid #ccc\" : \"none\",\n    },\n    \"& th:nth-child(3)\": {\n      borderRight: colExpFlag ? \"1px solid #ccc\" : \"none\",\n    },\n    \"& th:nth-child(4)\": {\n      borderRight: colExpFlag ? \"1px solid #ccc\" : \"none\",\n    },\n    \"& th:nth-child(5)\": {\n      borderRight: colExpFlag ? \"1px solid #ccc\" : \"none\",\n    },\n    \"& th:nth-child(26)\": {\n      borderRight: colExpFlag ? \"1px solid #ccc\" : \"none\",\n    },\n    \"& th:nth-child(47)\": {\n      borderRight: colExpFlag ? \"1px solid #ccc\" : \"none\",\n    },\n    \"& th:nth-child(68)\": {\n      borderRight: colExpFlag ? \"1px solid #ccc\" : \"none\",\n    },\n    \"& th:nth-child(22)\": {\n      borderRight: colExpFlag ? \"\" : \"1px solid #ccc\",\n    },\n    \"& th:nth-child(43)\": {\n      borderRight: colExpFlag ? \"\" : \"1px solid #ccc\",\n    },\n    \"& th:nth-child(64)\": {\n      borderRight: colExpFlag ? \"\" : \"1px solid #ccc\",\n    },\n  };\n  const stylesForDuration10 = {\n    \"& th:nth-child(2)\": {\n      borderRight: colExpFlag ? \"1px solid #ccc\" : \"none\",\n    },\n    \"& th:nth-child(3)\": {\n      borderRight: colExpFlag ? \"1px solid #ccc\" : \"none\",\n    },\n    \"& th:nth-child(4)\": {\n      borderRight: colExpFlag ? \"1px solid #ccc\" : \"none\",\n    },\n    \"& th:nth-child(5)\": {\n      borderRight: colExpFlag ? \"1px solid #ccc\" : \"none\",\n    },\n    \"& th:nth-child(24)\": {\n      borderRight: colExpFlag ? \"1px solid #ccc\" : \"none\",\n    },\n    \"& th:nth-child(43)\": {\n      borderRight: colExpFlag ? \"1px solid #ccc\" : \"none\",\n    },\n    \"& th:nth-child(62)\": {\n      borderRight: colExpFlag ? \"1px solid #ccc\" : \"none\",\n    },\n    \"& th:nth-child(20)\": {\n      borderRight: colExpFlag ? \"\" : \"1px solid #ccc\",\n    },\n    \"& th:nth-child(39)\": {\n      borderRight: colExpFlag ? \"\" : \"1px solid #ccc\",\n    },\n    \"& th:nth-child(58)\": {\n      borderRight: colExpFlag ? \"\" : \"1px solid #ccc\",\n    },\n  };\n  const stylesForDuration9 = {\n    \"& th:nth-child(22)\": {\n      borderRight: colExpFlag ? \"1px solid #ccc\" : \"none\",\n    },\n    \"& th:nth-child(39)\": {\n      borderRight: colExpFlag ? \"1px solid #ccc\" : \"none\",\n    },\n    \"& th:nth-child(56)\": {\n      borderRight: colExpFlag ? \"1px solid #ccc\" : \"none\",\n    },\n    \"& th:nth-child(18)\": {\n      borderRight: colExpFlag ? \"\" : \"1px solid #ccc\",\n    },\n    \"& th:nth-child(35)\": {\n      borderRight: colExpFlag ? \"\" : \"1px solid #ccc\",\n    },\n    \"& th:nth-child(52)\": {\n      borderRight: colExpFlag ? \"\" : \"1px solid #ccc\",\n    },\n  };\n  const stylesForDuration8 = {\n    \"& th:nth-child(28)\": {\n      borderRight: colExpFlag ? \"1px solid #ccc\" : \"none\",\n    },\n    \"& th:nth-child(51)\": {\n      borderRight: colExpFlag ? \"1px solid #ccc\" : \"none\",\n    },\n    \"& th:nth-child(74)\": {\n      borderRight: colExpFlag ? \"1px solid #ccc\" : \"none\",\n    },\n    \"& th:nth-child(24)\": {\n      borderRight: colExpFlag ? \"\" : \"1px solid #ccc\",\n    },\n    \"& th:nth-child(47)\": {\n      borderRight: colExpFlag ? \"\" : \"1px solid #ccc\",\n    },\n    \"& th:nth-child(70)\": {\n      borderRight: colExpFlag ? \"\" : \"1px solid #ccc\",\n    },\n  };\n  const stylesForDuration7 = {\n    \"& th:nth-child(18)\": {\n      borderRight: colExpFlag ? \"1px solid #ccc\" : \"none\",\n    },\n    \"& th:nth-child(31)\": {\n      borderRight: colExpFlag ? \"1px solid #ccc\" : \"none\",\n    },\n    \"& th:nth-child(44)\": {\n      borderRight: colExpFlag ? \"1px solid #ccc\" : \"none\",\n    },\n    \"& th:nth-child(14)\": {\n      borderRight: colExpFlag ? \"\" : \"1px solid #ccc\",\n    },\n    \"& th:nth-child(27)\": {\n      borderRight: colExpFlag ? \"\" : \"1px solid #ccc\",\n    },\n    \"& th:nth-child(40)\": {\n      borderRight: colExpFlag ? \"\" : \"1px solid #ccc\",\n    },\n  };\n  const stylesForDuration6 = {\n    \"& th:nth-child(16)\": {\n      borderRight: colExpFlag ? \"1px solid #ccc\" : \"none\",\n    },\n    \"& th:nth-child(29)\": {\n      borderRight: colExpFlag ? \"1px solid #ccc\" : \"none\",\n    },\n    \"& th:nth-child(46)\": {\n      borderRight: colExpFlag ? \"1px solid #ccc\" : \"none\",\n    },\n    \"& th:nth-child(12)\": {\n      borderRight: colExpFlag ? \"\" : \"1px solid #ccc\",\n    },\n    \"& th:nth-child(23)\": {\n      borderRight: colExpFlag ? \"\" : \"1px solid #ccc\",\n    },\n    \"& th:nth-child(34)\": {\n      borderRight: colExpFlag ? \"\" : \"1px solid #ccc\",\n    },\n  };\n  const stylesForDuration5 = {\n    \"& th:nth-child(14)\": {\n      borderRight: colExpFlag ? \"1px solid #ccc\" : \"none\",\n    },\n    \"& th:nth-child(23)\": {\n      borderRight: colExpFlag ? \"1px solid #ccc\" : \"none\",\n    },\n    \"& th:nth-child(32)\": {\n      borderRight: colExpFlag ? \"1px solid #ccc\" : \"none\",\n    },\n    \"& th:nth-child(10)\": {\n      borderRight: colExpFlag ? \"\" : \"1px solid #ccc\",\n    },\n    \"& th:nth-child(19)\": {\n      borderRight: colExpFlag ? \"\" : \"1px solid #ccc\",\n    },\n    \"& th:nth-child(28)\": {\n      borderRight: colExpFlag ? \"\" : \"1px solid #ccc\",\n    },\n  };\n  const stylesForDuration4 = {\n    \"& th:nth-child(12)\": {\n      borderRight: colExpFlag ? \"1px solid #ccc\" : \"none\",\n    },\n    \"& th:nth-child(19)\": {\n      borderRight: colExpFlag ? \"1px solid #ccc\" : \"none\",\n    },\n    \"& th:nth-child(26)\": {\n      borderRight: colExpFlag ? \"1px solid #ccc\" : \"none\",\n    },\n    \"& th:nth-child(8)\": {\n      borderRight: colExpFlag ? \"\" : \"1px solid #ccc\",\n    },\n    \"& th:nth-child(15)\": {\n      borderRight: colExpFlag ? \"\" : \"1px solid #ccc\",\n    },\n    \"& th:nth-child(22)\": {\n      borderRight: colExpFlag ? \"\" : \"1px solid #ccc\",\n    },\n  };\n  const stylesForDuration3 = {\n    \"& th:nth-child(2)\": {\n      borderRight: colExpFlag ? \"1px solid #ccc\" : \"none\",\n    },\n    \"& th:nth-child(3)\": {\n      borderRight: colExpFlag ? \"1px solid #ccc\" : \"none\",\n    },\n    \"& th:nth-child(4)\": {\n      borderRight: colExpFlag ? \"1px solid #ccc\" : \"none\",\n    },\n    \"& th:nth-child(5)\": {\n      borderRight: colExpFlag ? \"1px solid #ccc\" : \"none\",\n    },\n    \"& th:nth-child(10)\": {\n      borderRight: colExpFlag ? \"1px solid #ccc\" : \"none\",\n    },\n    \"& th:nth-child(15)\": {\n      borderRight: colExpFlag ? \"1px solid #ccc\" : \"none\",\n    },\n    \"& th:nth-child(20)\": {\n      borderRight: colExpFlag ? \"1px solid #ccc\" : \"none\",\n    },\n    \"& th:nth-child(6)\": {\n      borderRight: colExpFlag ? \"\" : \"1px solid #ccc\",\n    },\n    \"& th:nth-child(11)\": {\n      borderRight: colExpFlag ? \"\" : \"1px solid #ccc\",\n    },\n    \"& th:nth-child(16)\": {\n      borderRight: colExpFlag ? \"\" : \"1px solid #ccc\",\n    },\n  };\n  const stylesForDuration2 = {\n    \"& th:nth-child(2)\": {\n      borderRight: colExpFlag ? \"1px solid #ccc\" : \"none\",\n    },\n    \"& th:nth-child(3)\": {\n      borderRight: colExpFlag ? \"1px solid #ccc\" : \"none\",\n    },\n    \"& th:nth-child(4)\": {\n      borderRight: colExpFlag ? \"1px solid #ccc\" : \"none\",\n    },\n    \"& th:nth-child(5)\": {\n      borderRight: colExpFlag ? \"1px solid #ccc\" : \"none\",\n    },\n    \"& th:nth-child(8)\": {\n      borderRight: colExpFlag ? \"1px solid #ccc\" : \"none\",\n    },\n    \"& th:nth-child(11)\": {\n      borderRight: colExpFlag ? \"1px solid #ccc\" : \"none\",\n    },\n    \"& th:nth-child(14)\": {\n      borderRight: colExpFlag ? \"1px solid #ccc\" : \"none\",\n    },\n    \"& th:nth-child(4)\": {\n      borderRight: colExpFlag ? \"\" : \"1px solid #ccc\",\n    },\n    \"& th:nth-child(7)\": {\n      borderRight: colExpFlag ? \"\" : \"1px solid #ccc\",\n    },\n    \"& th:nth-child(10)\": {\n      borderRight: colExpFlag ? \"\" : \"1px solid #ccc\",\n    },\n  };\n  const stylesForDuration1 = {\n    \"& th:nth-child(2)\": {\n      borderRight: colExpFlag ? \"1px solid #ccc\" : \"none\",\n    },\n    \"& th:nth-child(3)\": {\n      borderRight: colExpFlag ? \"1px solid #ccc\" : \"none\",\n    },\n    \"& th:nth-child(4)\": {\n      borderRight: colExpFlag ? \"1px solid #ccc\" : \"none\",\n    },\n    \"& th:nth-child(5)\": {\n      borderRight: colExpFlag ? \"1px solid #ccc\" : \"none\",\n    },\n    \"& th:nth-child(6)\": {\n      borderRight: colExpFlag ? \"1px solid #ccc\" : \"none\",\n    },\n    \"& th:nth-child(7)\": {\n      borderRight: colExpFlag ? \"1px solid #ccc\" : \"none\",\n    },\n    \"& th:nth-child(8)\": {\n      borderRight: colExpFlag ? \"1px solid #ccc\" : \"none\",\n    },\n    \"& th:nth-child(2)\": {\n      borderRight: colExpFlag ? \"\" : \"1px solid #ccc\",\n    },\n    \"& th:nth-child(3)\": {\n      borderRight: colExpFlag ? \"\" : \"1px solid #ccc\",\n    },\n    \"& th:nth-child(4)\": {\n      borderRight: colExpFlag ? \"\" : \"1px solid #ccc\",\n    },\n  };\n  // console.log(stylesForDuration12, \"stylesForDuration12\");\n  return (\n    <div\n      className=\"materialReactExpandableTable revenueCDTable\"\n      // ref={containerRef}\n    >\n      <div>\n        {columns?.length && shouldRenderTable ? (\n          <MaterialReactTable\n            key={tableKey}\n            columns={columns}\n            data={nodes}\n            enableRowVirtualization={true}\n            enablePagination={false}\n            enableGlobalFilter={false}\n            enableDensityToggle={false}\n            enableFullScreenToggle={false}\n            enableHiding={false}\n            enableColumnFilters={false}\n            enableBottomToolbar={false}\n            enableTopToolbar={false}\n            enableColumnActions={false}\n            enableSorting={false}\n            // filterFromLeafRows //apply filtering to all rows instead of just parent rows\n            initialState={{\n              showGlobalFilter: false,\n              expanded: false,\n              density: \"compact\",\n              columnVisibility: { ...hiddenColumns },\n            }} //expand all rows by default\n            state={{ columnVisibility: { ...hiddenColumns } }}\n            paginateExpandedRows={false}\n            muiTableContainerProps={{\n              sx: { width: \"auto\", maxWidth: \"fit-content\", maxHeight: \"73vh\" },\n            }}\n            muiTableBodyProps={{\n              sx: {\n                \"&\": {\n                  borderRight: \"1px solid #ccc\",\n                  borderBottom: \"1px solid #ccc\",\n                },\n                \"& td\": {\n                  borderRight: \"1px solid #ccc\",\n                  height: \"22px\",\n                  padding: \"0px 5px\",\n                  maxWidth: \"150px\",\n                },\n              },\n            }}\n            muiTableHeadProps={{\n              sx: {\n                \"& th\": {\n                  borderTop: \"1px solid #ccc\",\n                  background: \"#f4f4f4\",\n                  padding: \"0 5px\",\n                  paddingLeft: \"28px\",\n                },\n                \"& th:first-of-type\": {\n                  borderLeft: \"1px solid #f4f4f4\",\n                  minWidth: \"100px\",\n                },\n                ...(selectedDuration === \"12\"\n                  ? stylesForDuration12\n                  : selectedDuration === \"11\"\n                  ? stylesForDuration11\n                  : selectedDuration === \"10\"\n                  ? stylesForDuration10\n                  : selectedDuration === \"9\"\n                  ? stylesForDuration9\n                  : selectedDuration === \"8\"\n                  ? stylesForDuration8\n                  : selectedDuration === \"7\"\n                  ? stylesForDuration7\n                  : selectedDuration === \"6\"\n                  ? stylesForDuration6\n                  : selectedDuration === \"5\"\n                  ? stylesForDuration5\n                  : selectedDuration === \"4\"\n                  ? stylesForDuration4\n                  : selectedDuration === \"3\"\n                  ? stylesForDuration3\n                  : selectedDuration === \"2\"\n                  ? stylesForDuration2\n                  : selectedDuration === \"1\"\n                  ? stylesForDuration1\n                  : \"\"),\n              },\n            }}\n          />\n        ) : null}\n      </div>\n    </div>\n  );\n}\n","import React, { useState, useEffect, useRef } from \"react\";\nimport DatePicker from \"react-datepicker\";\nimport moment from \"moment\";\nimport SelectCustDialogBox from \"../Customer/SelectCustDialogBox\";\nimport axios from \"axios\";\nimport { MultiSelect } from \"react-multi-select-component\";\nimport {\n  FaCaretDown,\n  FaChevronCircleDown,\n  FaChevronCircleUp,\n  FaSearch,\n} from \"react-icons/fa\";\nimport { environment } from \"../../environments/environment\";\nimport MaterialReactTable from \"material-react-table\";\nimport MaterialReactCollapisbleTable from \"../PrimeReactTableComponent/MaterialReactCollapisbleTable\";\nimport MonthlyRevenueTable from \"./MonthlyRevenueTable\";\nimport { LensTwoTone } from \"@material-ui/icons\";\nimport Loader from \"../Loader/Loader\";\nimport GlobalValidation from \"../ValidationComponent/GlobalValidation\";\nimport \"./MonthlyRevenueTrend.scss\";\nimport { AiFillWarning } from \"react-icons/ai\";\nimport { Settings } from \"@mui/icons-material\";\nimport ScreenBreadcrumbs from \"../Common/ScreenBreadcrumbs\";\nimport RevenueForecastBuCustomer from \"./RevenueForecastBuCustomer\";\nimport MonthlyForecastRevenueTableComponent from \"./MonthlyForecastRevenueTableComponent\";\nimport RevenueForecastBuTable from \"./RevenueForecastBuTable\";\nimport { RiFileExcel2Line } from \"react-icons/ri\";\nimport ExcelJS from \"exceljs\";\nimport SavedSearchGlobal from \"../PrimeReactTableComponent/SavedSearchGlobal\";\nimport { CCollapse } from \"@coreui/react\";\nimport MonthlyRevenueCDTable from \"./MonthlyRevenueCDTable\";\n\nconst MonthlyRevenueTrend = () => {\n  const initialValueForCus = {\n    FMeasures: \"-1\",\n  };\n  const [searchdata, setSearchdata] = useState(initialValueForCus);\n  console.log(searchdata, \"searchdata\");\n\n  const [shouldRenderTable, setShouldRenderTable] = useState(false);\n  const [change, setChange] = useState(false);\n  console.log(shouldRenderTable);\n  const baseUrl = environment.baseUrl;\n  const ref = useRef([]);\n  const [loader, setLoader] = useState(false);\n  const currentDate = new Date();\n  const [month, setMonth] = useState(\n    new Date(currentDate.getFullYear(), currentDate.getMonth(), 1)\n  );\n  const [selectedDuration, setSelectedDuration] = useState(\"\");\n  console.log(selectedDuration, \"selectedDuration\");\n  const [view, setView] = useState(\"region\");\n  const [viewBy, setViewBy] = useState(\"region\");\n  const [title, setTitle] = useState(\"\");\n  const [Measures, setMeasures] = useState([]);\n  const [selectedMeasures, setSelectedMeasures] = useState([]);\n  console.log(\n    selectedMeasures.map((item) => item.value).join(\",\"),\n    \"selectedMeasures\"\n  );\n  const [cdMeasures, setcdMeasures] = useState([]);\n  const [selectedcdMeasures, setSelectedcdMeasures] = useState([]);\n  const [tableKey, setTableKey] = useState(0);\n\n  let commaSeparatedValues; // Define the variable here\n\n  if (Array.isArray(selectedcdMeasures)) {\n    const selectedValues = selectedcdMeasures.map((item) => item.value);\n    commaSeparatedValues = selectedValues.join(\",\");\n    console.log(commaSeparatedValues);\n  } else {\n    console.log(\"selectedcdMeasures is not an array.\");\n  }\n\n  const abortController = useRef(null);\n  const [customer, setCustomer] = useState([]);\n  const [selectedItems, setSelectedItems] = useState([]);\n  const [custId, setCustId] = useState(\"\");\n  const [engCompany, setEngCompany] = useState([]);\n  const [selectedEngCompany, setSelectedEngCompany] = useState([]);\n\n  const [tableData, setTableData] = useState([]);\n  const [showTable, setShowTable] = useState(false);\n  const [custVisible, setCustVisible] = useState(false);\n  const loggedUserId = localStorage.getItem(\"resId\");\n  const [customerIds, setCustomerIds] = useState(-1);\n  const [validationmessage, setValidationMessage] = useState(false);\n  const [revenue, setRevenue] = useState();\n  const [sort, setSort] = useState();\n  const [sortChange, setSortChange] = useState(false);\n  const [dp, setDp] = useState([]);\n  const [dpOptions, setDpOptions] = useState([]);\n  const [accountExecutive, setAccountExecutive] = useState([]);\n  const [selectedAccountExecutive, setSelectedAccountExecutive] = useState([]);\n\n  console.log(dp, \"dp\");\n  const [selectedDp, setSelectedDp] = useState([]);\n  const [selectDelivery, setSelectedDelivery] = useState([]);\n  console.log(selectedDp.map((item) => item.value).join(\",\"), \"selectedDp\");\n  const [csl, setCsl] = useState([]);\n  console.log(csl.map((item) => item.value).join(\",\"), \"cslData\");\n  const [search, setSearch] = useState(false);\n  const [columns, setColumns] = useState([]);\n  const [details, setDetails] = useState([]);\n  const [editmsg, setEditAddmsg] = useState(false);\n  const [cheveronIcon, setCheveronIcon] = useState(FaChevronCircleUp);\n  const [visible, setVisible] = useState(false);\n  const [data, setData] = useState();\n  const [open, setOpen] = useState(false);\n  const [accountOwner, setAccountOwner] = useState([]);\n  const [selectedAccountOwner, setSelectedAccountOwner] = useState([]);\n  console.log(selectedAccountOwner, \"selectedAccountOwner\");\n  const selectedCust = JSON.parse(localStorage.getItem(\"selectedCust\"))\n    ?.map((d) => d.id)\n    ?.toString();\n  let flag = 1;\n\n  const [routes, setRoutes] = useState([]);\n  let textContent = \"Revenue Metrics\";\n  let currentScreenName = [\"Monthly Revenue Trend\"];\n\n  useEffect(() => {\n    getMenus();\n  }, []);\n\n  const getMenus = () => {\n    axios({\n      method: \"GET\",\n      url: baseUrl + `/CommonMS/master/getMenus?loggedUserId=${loggedUserId}`,\n    }).then((resp) => {\n      let getData = resp.data.map((menu) => {\n        if (menu.subMenus) {\n          menu.subMenus = menu.subMenus.filter(\n            (subMenu) =>\n              // subMenu.display_name !== \"Monthly Revenue Trend\" &&\n              subMenu.display_name !== \"Revenue & Margin Variance\" &&\n              subMenu.display_name !== \"Rev. Projections\" &&\n              subMenu.display_name !== \"Project Timesheet (Deprecated)\" &&\n              subMenu.display_name !== \"Financial Plan & Review\"\n          );\n        }\n        return menu;\n      });\n      // setData2(getData);\n\n      getData.forEach((item) => {\n        if (item.display_name === textContent) {\n          setRoutes([item]);\n        }\n      });\n    });\n  };\n\n  useEffect(() => {\n    getEngCompany();\n    getCustomerData();\n    if (view === \"customerdelta\") {\n      getcdMeasures(); // Call the function if view is \"customerdelta\"\n    } else {\n      getMeasures();\n    }\n    handleDp();\n    handleCsl();\n  }, [view]);\n\n  const getDP = () => {\n    axios({\n      method: \"get\",\n      url: baseUrl + `/ProjectMS/Engagement/getAccountOwner`,\n    }).then((res) => {\n      let custom = [];\n\n      let data = res.data;\n      console.log(data, \"account\");\n      data.length > 0 &&\n        data.forEach((e) => {\n          let dpObj = {\n            label: e.Name,\n            value: e.account_owner_id,\n          };\n          custom.push(dpObj);\n        });\n      custom.push({ label: \"UnAssigned\", account_owner_id: 999 });\n      setAccountOwner(custom);\n      setSelectedAccountOwner(custom);\n    });\n  };\n\n  const getAccountExecutive = () => {\n    axios({\n      method: \"get\",\n      url: baseUrl + `/SalesMS/sales/getSalesExecutive`,\n    }).then((res) => {\n      let custom = [];\n\n      let data = res.data;\n      console.log(data, \"accountExe\");\n      data.length > 0 &&\n        data.forEach((e) => {\n          let dpObj = {\n            label: e.Name,\n            value: e.id,\n          };\n          custom.push(dpObj);\n        });\n      setAccountExecutive(custom);\n      setSelectedAccountExecutive(custom);\n    });\n  };\n  useEffect(() => {\n    getDP();\n    getAccountExecutive();\n  }, []);\n  const getEngCompany = async () => {\n    try {\n      const response = await axios.get(\n        baseUrl + `/revenuemetricsms/headCountAndTrend/getEngCompany`\n      );\n      const data = response.data;\n      const filteredEngCompany = data.filter(\n        (ele) => ![0, 10, 11, 12, 13].includes(ele.value)\n      );\n      setEngCompany(filteredEngCompany);\n      setSelectedEngCompany(filteredEngCompany);\n    } catch (error) {}\n  };\n\n  const generateDropdownLabel = (selectedOptions, allOptions) => {\n    const selectedValues = selectedOptions.map((option) => option.value);\n    const allValues = allOptions.map((item) => item.value);\n\n    if (selectedValues.length === allValues.length) {\n      return \"<< ALL >>\";\n    } else {\n      return selectedOptions.map((option) => option.label).join(\", \");\n    }\n  };\n\n  const handleCsl = () => {\n    const loggedUser = \"0\";\n    axios({\n      method: \"get\",\n      url:\n        baseUrl +\n        `/SalesMS/MasterController/getCslDropDownData?userId=${loggedUser}`,\n    }).then((res) => {\n      let custom = [];\n\n      let data = res.data;\n      data.length > 0 &&\n        data.forEach((e) => {\n          let cslObj = {\n            label: e.PersonName,\n            value: e.id,\n          };\n          custom.push(cslObj);\n        });\n      console.log(custom, \"CSL\");\n      custom.push({ label: \"UnAssigned\", value: 999 });\n\n      setCsl(custom);\n      // setSelectedCsl(custom);\n      setFormData((prevVal) => ({\n        ...prevVal,\n        [\"csl\"]: custom,\n      }));\n    });\n  };\n\n  const handleDp = () => {\n    const loggedUser = \"0\";\n    axios({\n      method: \"get\",\n      url: baseUrl + `/CommonMS/master/getDPDropDownData?userId=${loggedUser}`,\n    }).then((res) => {\n      let custom = [];\n\n      let data = res.data;\n      data.length > 0 &&\n        data.forEach((e) => {\n          let dpObj = {\n            label: e.PersonName,\n            value: e.id,\n          };\n          custom.push(dpObj);\n        });\n      custom.push({ label: \"UnAssigned\", value: 999 });\n\n      console.log(custom.map((item) => item.value).join(\",\"), \"custom\");\n      console.log(custom, \"dpcustomdata\");\n      setDp(custom);\n      setDpOptions(custom);\n      setSelectedDp(custom);\n      setSelectedDelivery(custom);\n      setFormData((prevVal) => ({\n        ...prevVal,\n        [\"Dp\"]: custom,\n      }));\n    });\n  };\n\n  const getCustomerData = () => {\n    axios\n      .get(`${baseUrl}/CommonMS/master/geActiveCustomerList`)\n      .then((response) => {\n        const data = response.data;\n        const customers = data.map((e) => ({\n          label: e.fullName,\n          value: e.id,\n        }));\n        setCustomer(customers);\n      })\n      .catch((error) => {});\n  };\n\n  const getMeasures = () => {\n    let data = [];\n    data.push(\n      // { label: \"<<All>>\", value: \"-1\" },\n      { value: \"capacity\", label: \"Capacity\" },\n      { value: \"Financial\", label: \"Financial\" }\n    );\n    setMeasures(data);\n    console.log(data);\n    console.log(data.filter((ele) => ele.value != \"\"));\n    setSelectedMeasures(data.filter((ele) => ele.value == \"Financial\"));\n    let filteredType = [];\n    data.forEach((data) => {\n      if (data.value >= 0) {\n        filteredType.push(data.value);\n      }\n    });\n    setSearchdata((prevVal) => ({\n      ...prevVal,\n      [\"FMeasures\"]: filteredType.toString(),\n    }));\n  };\n\n  const getcdMeasures = () => {\n    const data = [\n      { label: \"Planned Revenue\", value: \"pl\" },\n      { label: \"Recognized Revenue\", value: \"rr\" },\n      { label: \"Actual Revenue\", value: \"ar\" },\n    ];\n    setcdMeasures(data);\n    setSelectedcdMeasures(data);\n  };\n\n  const initialValue = {\n    custIds: \"-1\",\n    revenueType: \"-1\",\n    DpId: \"-1\",\n    csl: \"-1\",\n    accountOwner: \"-1\",\n    accountExecutive: \"-1\",\n  };\n  const [formData, setFormData] = useState(initialValue);\n  console.log(formData.DpId, \"formDatadpId\");\n  console.log(formData.custIds, \"custIds\");\n  const norecords = (data) => {\n    console.log(data.tableData, \"data\");\n    const emptyObject = {};\n    console.log(data.tableData[1], \"data[1]\");\n\n    Object.keys(data.tableData[1]).forEach((key, value) => {\n      emptyObject[key] = \"0\";\n\n      if (\n        key == \"name\" ||\n        key == \"id\" ||\n        key == \"uniqueId\" ||\n        key == \"lvl\" ||\n        key == \"parentId\"\n      ) {\n        emptyObject[\"name\"] = \"No Records Found\";\n        emptyObject[\"id\"] = \"999\";\n        emptyObject[\"uniqueId\"] = \"3\";\n        emptyObject[\"lvl\"] = \"1\";\n        emptyObject[\"parentId\"] = null;\n      }\n    });\n\n    data.tableData[2] = emptyObject;\n    console.log(emptyObject, \"emptyObject\");\n  };\n  const handleSubmit = () => {\n    setOpen(false);\n    setShouldRenderTable(false);\n    setTableData([]);\n\n    let valid = GlobalValidation(ref);\n\n    if (valid === true) {\n      setLoader(false);\n      setValidationMessage(true);\n      return;\n    }\n\n    const loaderTime = setTimeout(() => {\n      setLoader(true);\n    }, 2000);\n    setSearch(true);\n    abortController.current = new AbortController();\n\n    const commonFilters = {\n      FromDt: moment(month).format(\"yyyy-MM-DD\"),\n      dur: parseInt(selectedDuration, 10),\n      ViewBy: view,\n      FMeasures:\n        selectedMeasures.length === 1 ? selectedMeasures[0].value : \"-1\",\n      UserId: parseInt(loggedUserId, 10),\n      selViewType: viewBy,\n      // selViewVal: \"-1\",\n      selViewVal:\n        viewBy == \"engComp\"\n          ? selectedEngCompany.map((option) => option.value).toString() ==\n            \"8,9,7,6,5,4,3,2,16,14\"\n            ? -1\n            : selectedEngCompany.map((option) => option.value).toString()\n          : viewBy == \"csl\"\n          ? formData.csl.map((option) => option.value).toString() ==\n            csl.map((item) => item.value).join(\",\")\n            ? -1\n            : formData.csl.map((option) => option.value).toString()\n          : viewBy == \"dp\"\n          ? selectDelivery.map((item) => item.value).toString() ==\n            dpOptions.map((item) => item.value).toString()\n            ? -1\n            : selectDelivery.map((item) => item.value).join(\",\")\n          : \"\",\n      UserId: parseInt(loggedUserId, 10),\n      revenue: \"-1\",\n    };\n\n    let url = \"\";\n    let filters = { ...commonFilters };\n\n    if (view === \"customer\") {\n      url = baseUrl + `/revenuemetricsms/MonthlyRevenueTrend/getCustomerData`; // Replace with the actual customer API endpoint\n      filters = {\n        // ...filters,\n        FromDt: moment(month).format(\"yyyy-MM-DD\"),\n        dur: parseInt(selectedDuration, 10),\n        ViewBy: view,\n        custIds:\n          formData.custIds == \"-1\"\n            ? \"-1\"\n            : formData.custIds == \"0\"\n            ? \"0\"\n            : selectedCust,\n        FMeasures:\n          selectedMeasures.map((item) => item.value).join(\",\") ==\n          \"capacity,Financial\"\n            ? \"-1\"\n            : selectedMeasures.map((item) => item.value).join(\",\"),\n        revenueType: change == false ? \"-1\" : revenue,\n        SortBy: sortChange == false ? \"cust\" : sort,\n        UserId: parseInt(loggedUserId, 10),\n        engComp:\n          selectedEngCompany.map((option) => option.value).toString() ==\n          \"8,9,7,6,5,4,3,2,16,14\"\n            ? \"-1\"\n            : selectedEngCompany.map((option) => option.value).toString(),\n      };\n    } else if (view === \"customerdelta\") {\n      url =\n        baseUrl + `/revenuemetricsms/MonthlyRevenueTrend/getCustomerDeltaData`; // Replace with the actual customer delta API endpoint\n      filters = {\n        FromDt: moment(month).format(\"yyyy-MM-DD\"),\n        dur: parseInt(selectedDuration, 10),\n        ViewBy: view,\n        custIds:\n          formData.custIds == \"-1\"\n            ? \"-1\"\n            : formData.custIds == \"active\"\n            ? \"0\"\n            : selectedCust,\n        revenueType: formData.revenueType,\n        FMeasures:\n          selectedcdMeasures.length > 0 && commaSeparatedValues == \"pl,rr,ar\"\n            ? \"-1\"\n            : selectedcdMeasures.length > 0 && selectedcdMeasures.length == \"3\"\n            ? \"-1\"\n            : commaSeparatedValues,\n        engComp:\n          selectedEngCompany.map((option) => option.value).toString() ==\n          \"8,9,7,6,5,4,3,2,16,14\"\n            ? -1\n            : selectedEngCompany.map((option) => option.value).toString(),\n\n        CSL:\n          Object.keys(formData.csl).length === csl.length\n            ? \"-1\"\n            : formData.csl.map((d) => d.value).toString(),\n        DP:\n          selectedDp.map((item) => item.value).toString() ==\n          dp.map((item) => item.value).toString()\n            ? \"-1\"\n            : selectedDp.map((item) => item.value).toString(),\n\n        AccExe:\n          selectedAccountExecutive.map((item) => item.value).toString() ==\n          accountExecutive.map((item) => item.value).toString()\n            ? \"-1\"\n            : selectedAccountExecutive.map((item) => item.value).toString(),\n        AccOwner:\n          selectedAccountOwner.map((item) => item.value).toString() ==\n          accountOwner.map((item) => item.value).toString()\n            ? \"-1\"\n            : selectedAccountOwner.map((item) => item.value).toString(),\n        UserId: parseInt(loggedUserId, 10),\n      };\n    } else {\n      url = baseUrl + `/revenuemetricsms/MonthlyRevenueTrend/getData`;\n    }\n\n    axios({\n      method: \"post\",\n      url: url,\n      data: filters,\n      signal: abortController.current.signal,\n    })\n      .then((response) => {\n        console.log(response, \"response\");\n        setLoader(false);\n        clearTimeout(loaderTime);\n        setShouldRenderTable(true);\n        const data = response.data;\n        console.log(data.tableData);\n\n        if (view === \"region\") {\n          setTitle(\"Summary By Region\");\n        } else if (view === \"month\") {\n          setTitle(\"Summary By Month\");\n        } else if (view === \"customer\") {\n          setTitle(\"Summary By Customer\");\n        } else if (view === \"customerdelta\") {\n          // setTitle(\"Summary By Customer Delta\");\n        }\n        setOpen(true);\n        console.log(\"in line 449\");\n        if (data.tableData.length === 2) {\n          console.log(\"in no records\");\n          norecords(data);\n          setTableData(data);\n        }\n        console.log(data, \"data>>>>>>>>>>>\");\n        setTableData(data);\n        setShowTable(true);\n        setValidationMessage(false);\n        let detail = response.data.tableData;\n        let cols = response.data.columns?.replaceAll(\"'\", \"\").split(\",\");\n        setColumns(cols);\n        !valid && setVisible(!visible);\n        visible\n          ? setCheveronIcon(FaChevronCircleUp)\n          : setCheveronIcon(FaChevronCircleDown);\n        setTableKey((prevKey) => prevKey + 1);\n\n        setDetails(detail);\n      })\n      .catch((error) => {\n        setValidationMessage(false);\n        setLoader(false);\n      });\n  };\n\n  const ArrowRenderer = ({ expanded }) => (\n    <>\n      {expanded ? (\n        <FaCaretDown className=\"chevronIcon\" />\n      ) : (\n        <FaCaretDown className=\"chevronIcon\" />\n      )}\n    </>\n  );\n\n  const handleChange1 = (e) => {\n    const { id, name, value } = e.target;\n    if (name == \"custIds\" && value === \"0\") {\n      setCustomerIds(value);\n    }\n    if (name == \"custIds\" && value === \"1\") {\n      setCustomerIds(value);\n    }\n    if (name == \"custIds\" && value === \"select\") {\n      // setCustomerIds(selectedCust);\n      setCustVisible(true);\n    }\n    setFormData((prev) => {\n      return { ...prev, [name]: value };\n    });\n  };\n  console.log(formData, \"formData\");\n\n  const handleAbort = () => {\n    abortController.current && abortController.current.abort();\n    setLoader(false);\n  };\n\n  // Excel\n  const extractValue = (value) => {\n    if (typeof value === \"string\") {\n      const [extractedValue, ,] = value.split(\"^&\");\n      return extractedValue;\n    } else if (typeof value === \"object\") {\n      if (value.props && value.props.children) {\n        if (Array.isArray(value.props.children)) {\n          return value.props.children\n            .map((child) => {\n              if (typeof child === \"string\") {\n                const [extractedChild, ,] = child.split(\"^&\");\n                return extractedChild;\n              }\n              return \"\";\n            })\n            .join(\", \");\n        } else if (typeof value.props.children === \"string\") {\n          const [extractedValue, ,] = value.props.children.split(\"^&\");\n          return extractedValue;\n        } else {\n          return \"\";\n        }\n      }\n    } else {\n      return \"\";\n    }\n  };\n\n  const exportExcel = () => {\n    import(\"exceljs\").then((ExcelJS) => {\n      const columnsToExclude = [\n        \"id\",\n        \"lvl\",\n        \"keyAttr\",\n        \"parentAttr\",\n        \"region_id\",\n        \"customerId\",\n        \"dispName\",\n        \"keyterm\",\n      ];\n\n      const filteredColumns = columns.filter(\n        (col) => !columnsToExclude.includes(col)\n      );\n\n      const wantedValues = details\n        .slice(0)\n        .filter((item) => item.id !== -2)\n        .map((item) => {\n          const obj = {};\n          filteredColumns.forEach((col) => {\n            const value = item[col];\n            obj[col] = extractValue(value);\n          });\n          return obj;\n        });\n\n      const rows = wantedValues.map((item) => {\n        const row = [];\n        filteredColumns.forEach((col) => {\n          row.push(item[col]);\n        });\n        return row;\n      });\n\n      const workbook = new ExcelJS.Workbook();\n      const worksheet = workbook.addWorksheet(\"Monthly Revenue Trend Report\");\n\n      rows.forEach((row) => {\n        worksheet.addRow(row);\n      });\n\n      const boldRows = [1];\n      boldRows.forEach((rowNumber) => {\n        const row = worksheet.getRow(rowNumber);\n        row.font = { bold: true };\n      });\n\n      workbook.xlsx.writeBuffer().then((buffer) => {\n        saveAsExcelFile(buffer, \"Monthly Revenue Trend Report\");\n      });\n    });\n  };\n\n  const saveAsExcelFile = (buffer, fileName) => {\n    import(\"file-saver\").then((module) => {\n      if (module && module.default) {\n        let EXCEL_TYPE =\n          \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8\";\n        let EXCEL_EXTENSION = \".xlsx\";\n        const data = new Blob([buffer], { type: EXCEL_TYPE });\n        module.default.saveAs(data, fileName + EXCEL_EXTENSION);\n      }\n    });\n  };\n\n  return (\n    <div>\n      {validationmessage ? (\n        <div className=\"statusMsg error\">\n          {\" \"}\n          <AiFillWarning /> Please select valid values for highlighted fields\n        </div>\n      ) : (\n        \"\"\n      )}\n      <div className=\"col-md-12\">\n        <div className=\"pageTitle\">\n          <div className=\"childOne\"></div>\n          <div className=\"childTwo\">\n            <h2>Monthly Revenue Trend</h2>\n          </div>\n          <div className=\"childThree\"></div>\n        </div>\n      </div>\n      <ScreenBreadcrumbs\n        routes={routes}\n        currentScreenName={currentScreenName}\n      />\n\n      <div className=\"group mb-3 customCard mt-2\">\n        <div className=\"col-md-12 collapseHeader\">\n          <h2>Search Filters</h2>\n          <div className=\"helpBtn\">{/* <GlobalHelp /> */}</div>\n          {/* <div className=\"saveBtn\">\n            <SavedSearchGlobal\n              setEditAddmsg={setEditAddmsg}\n              payload={formData}\n            />\n          </div>{\" \"} */}\n          &nbsp;\n          <div\n            onClick={() => {\n              setVisible(!visible);\n              visible\n                ? setCheveronIcon(FaChevronCircleUp)\n                : setCheveronIcon(FaChevronCircleDown);\n            }}\n          >\n            <span>{cheveronIcon}</span>\n          </div>\n        </div>\n        <CCollapse visible={!visible}>\n          <div className=\"group-content row\">\n            <div className=\"col-md-3 mb-2\">\n              <div className=\"form-group row\">\n                <label className=\"col-5\" htmlFor=\"Month\">\n                  Month&nbsp;<span className=\"error-text\">*</span>\n                </label>\n                <span className=\"col-1\">:</span>\n                <div\n                  className=\"datepicker col-6\"\n                  ref={(ele) => {\n                    ref.current[0] = ele;\n                  }}\n                >\n                  <DatePicker\n                    name=\"month\"\n                    id=\"StartDt\"\n                    selected={month}\n                    onChange={(date) => setMonth(date)}\n                    dateFormat=\"MMM-yyyy\"\n                    showMonthYearPicker\n                    placeholderText=\"Select Month\"\n                  />\n                </div>\n              </div>\n            </div>\n\n            <div className=\"col-md-3 mb-2\">\n              <div className=\"form-group row\">\n                <label className=\"col-5\" htmlFor=\"Duration\">\n                  Duration&nbsp;\n                  <span className=\"col-1 p-0 error-text\">*</span>\n                </label>\n                <span className=\"col-1\">:</span>\n                <div className=\"col-6\">\n                  <select\n                    id=\"duration\"\n                    name=\"duration\"\n                    className=\"text\"\n                    value={selectedDuration}\n                    onChange={(e) => setSelectedDuration(e.target.value)}\n                    ref={(ele) => {\n                      ref.current[1] = ele;\n                    }}\n                  >\n                    <option value=\"\">{\"<<Please Select>>\"}</option>\n                    {[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12].map((value) => (\n                      <option\n                        key={value}\n                        value={value}\n                        disabled={view === \"customerdelta\" && value === 1}\n                      >\n                        {value}\n                      </option>\n                    ))}\n                  </select>\n                </div>\n              </div>\n            </div>\n\n            <div className=\"col-md-3 mb-2\">\n              <div className=\"form-group row\">\n                <label className=\"col-4\" htmlFor=\"Type\">\n                  View&nbsp;\n                  <span className=\"col-1 p-0 error-text\">*</span>\n                </label>\n                <span className=\"col-1\">:</span>\n                <div className=\"col-6\">\n                  <select\n                    className=\"text\"\n                    id=\"Type\"\n                    name=\"Type\"\n                    value={view}\n                    onChange={(e) => {\n                      setView(e.target.value);\n                      setOpen(false);\n                      if (e.target.value === \"customerdelta\") {\n                        // setSelectedDuration(\"2\");\n                      }\n                    }}\n                    ref={(ele) => {\n                      ref.current[2] = ele;\n                    }}\n                  >\n                    <option value=\"region\" selected>\n                      Region\n                    </option>\n                    <option value=\"customer\">Customer</option>\n                    <option value=\"month\">Month</option>\n                    <option value=\"customerdelta\">Customer Delta</option>\n                  </select>\n                </div>\n              </div>\n            </div>\n\n            {view === \"region\" || view === \"month\" || view === \"customer\" ? (\n              <div className=\"col-md-3 mb-2\">\n                <div className=\"form-group row\">\n                  <label className=\"col-4\" htmlFor=\"Type\">\n                    Measures&nbsp;\n                    <span className=\"col-1 p-0 error-text\">*</span>\n                  </label>\n                  <span className=\"col-1\">:</span>\n                  <div\n                    className=\"multiselect col-6\"\n                    ref={(ele) => {\n                      ref.current[3] = ele;\n                    }}\n                  >\n                    <MultiSelect\n                      ArrowRenderer={ArrowRenderer}\n                      id=\"FMeasures\"\n                      name=\"FMeasures\"\n                      options={Measures}\n                      hasSelectAll={true} // Remove select all option\n                      disabled={false}\n                      value={selectedMeasures}\n                      valueRenderer={generateDropdownLabel}\n                      onChange={(e) => {\n                        setSelectedMeasures(e);\n                        let filteredType = [];\n                        e.forEach((d) => {\n                          filteredType.push(d.value);\n                        });\n                        setSearchdata((prevVal) => ({\n                          ...prevVal,\n                          [\"FMeasures\"]: filteredType.toString(),\n                        }));\n                      }}\n                    />\n                  </div>\n                </div>\n              </div>\n            ) : null}\n\n            {view === \"region\" && (\n              <div className=\"col-md-3 mb-2\">\n                <div className=\"form-group row\">\n                  <label className=\"col-5\" htmlFor=\"Type\">\n                    View By&nbsp;\n                  </label>\n                  <span className=\"col-1\">:</span>\n                  <div className=\"col-6\">\n                    <select\n                      className=\"text cancel\"\n                      id=\"Type\"\n                      name=\"Type\"\n                      value={viewBy}\n                      onChange={(e) => setViewBy(e.target.value)}\n                      ref={(ele) => {\n                        ref.current[2] = ele;\n                      }}\n                    >\n                      <option value=\"region\" selected>\n                        Region\n                      </option>\n                      <option value=\"csl\">CSL</option>\n                      <option value=\"dp\">DP</option>\n                      <option value=\"engComp\">Eng Company</option>\n                    </select>\n                  </div>\n                </div>\n              </div>\n            )}\n\n            {view === \"customer\" && (\n              <>\n                <div className=\"col-md-3 mb-2\">\n                  <div className=\"form-group row\">\n                    <label className=\"col-5\" htmlFor=\"Type\">\n                      Revenue&nbsp;\n                    </label>\n                    <span className=\"col-1\">:</span>\n                    <div className=\"col-6\">\n                      <select\n                        id=\"Type\"\n                        name=\"Type\"\n                        className=\"text\"\n                        value={revenue}\n                        onChange={(e) => {\n                          setRevenue(e.target.value);\n                          setChange(true);\n                        }}\n                        ref={(ele) => {\n                          ref.current[2] = ele;\n                        }}\n                      >\n                        <option value=\"-1\">ALL</option>\n                        <option value=\"500k\">500K And Above</option>\n                        <option value=\"400k\">400K And Above</option>\n                        <option value=\"300k\">300K And Above</option>\n                        <option value=\"200k\">200K And Above</option>\n                        <option value=\"100k\">Above 100K</option>\n                        <option value=\"100\">100K And Below</option>\n                        <option value=\"50k\">50K And Below</option>\n                      </select>\n                    </div>\n                  </div>\n                </div>\n\n                <div className=\" col-md-3 mb-2\">\n                  <div className=\"form-group row\">\n                    <label className=\"col-5\" htmlFor=\"customers\">\n                      Customer&nbsp;\n                    </label>\n                    <span className=\"col-1\">:</span>\n                    <div className=\"col-6\">\n                      <select\n                        className=\"text cancel\"\n                        name=\"custIds\"\n                        id=\"searchType\"\n                        onChange={handleChange1}\n                        ref={(ele) => {\n                          ref.current[4] = ele;\n                        }}\n                      >\n                        {selectedItems.length + \"selected\"}\n                        <option value=\"-1\">&lt;&lt; ALL &gt;&gt;</option>\n                        <option value=\"0\">Active Customers</option>\n                        <option value=\"select\">Select</option>\n                      </select>\n                    </div>\n                  </div>\n                </div>\n\n                <div className=\"col-md-3 mb-2\">\n                  <div className=\"form-group row\">\n                    <label className=\"col-4\" htmlFor=\"Dropdown2\">\n                      Eng.Company&nbsp;\n                      <span className=\"col-1 p-0 error-text\">*</span>\n                    </label>\n                    <span className=\"col-1\">:</span>\n                    <div\n                      className=\"multiselect col-6\"\n                      ref={(ele) => {\n                        ref.current[4] = ele;\n                      }}\n                    >\n                      <MultiSelect\n                        ArrowRenderer={ArrowRenderer}\n                        id=\"engComp\"\n                        name=\"engComp\"\n                        options={engCompany}\n                        hasSelectAll={true}\n                        isLoading={false}\n                        shouldToggleOnHover={false}\n                        disableSearch={false}\n                        value={selectedEngCompany}\n                        disabled={false}\n                        onChange={(s) => {\n                          setSelectedEngCompany(s);\n                          let filteredValues = [];\n                          s.forEach((d) => {\n                            filteredValues.push(d.value);\n                          });\n\n                          // setSearchdata((prevVal) => ({\n                          //   ...prevVal,\n                          //   [\"engComp\"]: filteredValues.toString(),\n                          // }));\n                        }}\n                        valueRenderer={(selected) => {\n                          if (selected.length === 0) {\n                            return \"Select\";\n                          } else if (selected.length === engCompany.length) {\n                            return <>&lt;&lt; ALL &gt;&gt;</>;\n                          }\n                        }}\n                      />\n                    </div>\n                  </div>\n                </div>\n\n                <div className=\"col-md-3 mb-2\">\n                  <div className=\"form-group row\">\n                    <label className=\"col-4\" htmlFor=\"Type\">\n                      Sort By&nbsp;\n                    </label>\n                    <span className=\"col-1\">:</span>\n                    <div className=\"col-6\">\n                      <select\n                        className=\"text\"\n                        id=\"Type\"\n                        name=\"Type\"\n                        value={sort}\n                        onChange={(e) => {\n                          setSort(e.target.value);\n                          setSortChange(true);\n                        }}\n                        ref={(ele) => {\n                          ref.current[2] = ele;\n                        }}\n                      >\n                        <option value=\"cust\">Customer</option>\n                        <option value=\"pr\">Planned Revenue</option>\n                        <option value=\"rr\">Recognized Revenue</option>\n                        <option value=\"prgm\">PR GM%</option>\n                        <option value=\"rrgm\">RR GM%</option>\n                      </select>\n                    </div>\n                  </div>\n                </div>\n              </>\n            )}\n\n            {view === \"customerdelta\" && (\n              <>\n                <div className=\"col-md-3 mb-2\">\n                  <div className=\"form-group row\">\n                    <label className=\"col-4\" htmlFor=\"Type\">\n                      Measures&nbsp;\n                      <span className=\"col-1 p-0 error-text\">*</span>\n                    </label>\n                    <span className=\"col-1\">:</span>\n                    <div\n                      className=\"multiselect col-6\"\n                      ref={(ele) => {\n                        ref.current[3] = ele;\n                      }}\n                    >\n                      <MultiSelect\n                        id=\"cdmeasures\"\n                        name=\"cdmeasures\"\n                        options={cdMeasures}\n                        hasSelectAll={true} // Remove select all option\n                        isLoading={false}\n                        shouldToggleOnHover={false}\n                        disableSearch={false} // Disable search input\n                        value={selectedcdMeasures}\n                        onChange={(s) => {\n                          setSelectedcdMeasures(s);\n                        }}\n                        valueRenderer={(selected) => {\n                          if (selected.length === 0) {\n                            return \"Select\";\n                          } else if (selected.length === cdMeasures.length) {\n                            return <>&lt;&lt; ALL &gt;&gt;</>;\n                          }\n                        }}\n                      />\n                    </div>\n                  </div>\n                </div>\n\n                <div className=\" col-md-3 mb-2\">\n                  <div className=\"form-group row\">\n                    <label className=\"col-5\" htmlFor=\"Type\">\n                      Revenue&nbsp;\n                    </label>\n                    <span className=\"col-1\">:</span>\n                    <div className=\"col-6\">\n                      <select\n                        id=\"revenueType\"\n                        name=\"revenueType\"\n                        className=\"text\"\n                        value={revenue}\n                        onChange={handleChange1}\n                      >\n                        <option value=\"-1\">&lt;&lt; ALL &gt;&gt;</option>\n                        <option value=\"500k\">500K And Above</option>\n                        <option value=\"400k\">400K And Above</option>\n                        <option value=\"300k\">300K And Above</option>\n                        <option value=\"200k\">200K And Above</option>\n                        <option value=\"100k\">Above 100K</option>\n                        <option value=\"100k below\">100K And Below</option>\n                        <option value=\"50k\">50K And Below</option>\n                      </select>\n                    </div>\n                  </div>\n                </div>\n\n                <div className=\"col-md-3 mb-2\">\n                  <div className=\"form-group row\">\n                    <label className=\"col-5\" htmlFor=\"customers\">\n                      Customer\n                    </label>\n                    <span className=\"col-1\">:</span>\n                    <div className=\"col-6\">\n                      <select\n                        className=\"text cancel\"\n                        name=\"custIds\"\n                        id=\"searchType\"\n                        onChange={handleChange1}\n                      >\n                        {selectedItems.length + \"selected\"}\n                        <option value=\"-1\">&lt;&lt; ALL &gt;&gt;</option>\n                        <option value=\"active\">Active Customers</option>\n                        <option value=\"select\">Select</option>\n                      </select>\n                    </div>\n                  </div>\n                </div>\n\n                <div className=\"col-md-3 mb-2\">\n                  <div className=\"form-group row\">\n                    <label className=\"col-4\" htmlFor=\"Dropdown2\">\n                      Eng.Company&nbsp;\n                      <span className=\"error-text\">*</span>\n                    </label>\n                    <span className=\"col-1\">:</span>\n                    <div\n                      className=\"multiselect col-6\"\n                      ref={(ele) => {\n                        ref.current[4] = ele;\n                      }}\n                    >\n                      <MultiSelect\n                        ArrowRenderer={ArrowRenderer}\n                        id=\"engComp\"\n                        name=\"engComp\"\n                        options={engCompany}\n                        hasSelectAll={true}\n                        isLoading={false}\n                        shouldToggleOnHover={false}\n                        disableSearch={false}\n                        value={selectedEngCompany}\n                        disabled={false}\n                        onChange={(s) => {\n                          setSelectedEngCompany(s);\n                          let filteredValues = [];\n                          s.forEach((d) => {\n                            filteredValues.push(d.value);\n                          });\n                        }}\n                        valueRenderer={(selected) => {\n                          if (selected?.length === 0) {\n                            return \"Select\";\n                          } else if (selected?.length === engCompany?.length) {\n                            return <>&lt;&lt; ALL &gt;&gt;</>;\n                          }\n                        }}\n                      />\n                    </div>\n                  </div>\n                </div>\n\n                <div className=\" col-md-3 mb-2\">\n                  <div className=\"form-group row\">\n                    <label className=\"col-4\" htmlFor=\"Dropdown2\">\n                      CSL&nbsp;\n                      <span className=\"col-1 p-0 error-text\">*</span>\n                    </label>\n                    <span className=\"col-1\">:</span>\n                    <div\n                      className=\"col-6 multiselect\"\n                      ref={(ele) => {\n                        ref.current[5] = ele;\n                      }}\n                    >\n                      <MultiSelect\n                        ArrowRenderer={ArrowRenderer}\n                        id=\"csl\"\n                        options={csl}\n                        hasSelectAll={true}\n                        value={formData.csl}\n                        valueRenderer={generateDropdownLabel}\n                        shouldToggleOnHover={false}\n                        disableSearch={false}\n                        disabled={false}\n                        onChange={(e) => {\n                          setFormData((prevVal) => ({\n                            ...prevVal,\n                            [\"csl\"]: e,\n                          }));\n                        }}\n                      />\n                    </div>\n                  </div>\n                </div>\n\n                <div className=\" col-md-3 mb-2\">\n                  <div className=\"form-group row\">\n                    <label className=\"col-5\" htmlFor=\"Dropdown2\">\n                      DP&nbsp;\n                      <span className=\"error-text\">*</span>\n                    </label>\n                    <span className=\"col-1\">:</span>\n                    <div\n                      className=\"col-6 multiselect\"\n                      ref={(ele) => {\n                        ref.current[6] = ele;\n                      }}\n                    >\n                      <MultiSelect\n                        ArrowRenderer={ArrowRenderer}\n                        id=\"dp\"\n                        options={dp}\n                        hasSelectAll={true}\n                        value={selectedDp}\n                        valueRenderer={generateDropdownLabel}\n                        shouldToggleOnHover={false}\n                        disableSearch={false}\n                        disabled={false}\n                        onChange={(e) => {\n                          setSelectedDp(e);\n\n                          let filteredCountry = [];\n                          e.forEach((d) => {\n                            filteredCountry.push(d.value);\n                          });\n                          setFormData((prevVal) => ({\n                            ...prevVal,\n                            [\"dp\"]: filteredCountry.toString(),\n                          }));\n                        }}\n                      />\n                    </div>\n                  </div>\n                </div>\n\n                <div className=\" col-md-3 mb-2\">\n                  <div className=\"form-group row\">\n                    <label className=\"col-5 ellipsis\" htmlFor=\"Dropdown2\">\n                      Account Executive&nbsp;\n                      <span className=\"error-text\">*</span>\n                    </label>\n                    <span className=\"col-1\">:</span>\n                    <div\n                      className=\"col-6 multiselect\"\n                      ref={(ele) => {\n                        ref.current[7] = ele;\n                      }}\n                    >\n                      <MultiSelect\n                        ArrowRenderer={ArrowRenderer}\n                        id=\"accountExecutive\"\n                        options={accountExecutive}\n                        hasSelectAll={true}\n                        value={selectedAccountExecutive}\n                        valueRenderer={generateDropdownLabel}\n                        shouldToggleOnHover={false}\n                        disableSearch={false}\n                        disabled={false}\n                        onChange={(e) => {\n                          setSelectedAccountExecutive(e);\n                          let filteredCountry = [];\n                          e.forEach((d) => {\n                            filteredCountry.push(d.value);\n                          });\n                          setFormData((prevVal) => ({\n                            ...prevVal,\n                            [\"accountExecutive\"]: filteredCountry.toString(),\n                          }));\n                        }}\n                      />\n                    </div>\n                  </div>\n                </div>\n                <div className=\" col-md-3 mb-2\">\n                  <div className=\"form-group row\">\n                    <label className=\"col-4 ellipsis\" htmlFor=\"Dropdown2\">\n                      Account Owner&nbsp;\n                      <span className=\"error-text\">*</span>\n                    </label>\n                    <span className=\"col-1\">:</span>\n                    <div\n                      className=\"col-6 multiselect\"\n                      ref={(ele) => {\n                        ref.current[8] = ele;\n                      }}\n                    >\n                      <MultiSelect\n                        ArrowRenderer={ArrowRenderer}\n                        id=\"accountOwner\"\n                        options={accountOwner}\n                        hasSelectAll={true}\n                        value={selectedAccountOwner}\n                        // selected={accountOwner}\n                        valueRenderer={generateDropdownLabel}\n                        shouldToggleOnHover={false}\n                        disableSearch={false}\n                        disabled={false}\n                        onChange={(e) => {\n                          setSelectedAccountOwner(e);\n                          let filteredCountry = [];\n                          e.forEach((d) => {\n                            filteredCountry.push(d.account_owner_id);\n                          });\n                          setFormData((prevVal) => ({\n                            ...prevVal,\n                            [\"accountOwner\"]: filteredCountry.toString(),\n                          }));\n                        }}\n                      />\n                    </div>\n                  </div>\n                </div>\n              </>\n            )}\n            {viewBy === \"csl\" && view === \"region\" && (\n              <div className=\" col-md-3 mb-2\">\n                <div className=\"form-group row\">\n                  <label className=\"col-5\" htmlFor=\"Dropdown2\">\n                    CSL&nbsp;\n                    <span className=\"col-1 p-0 error-text\">*</span>\n                  </label>\n                  <span className=\"col-1\">:</span>\n                  <div\n                    className=\"col-6 multiselect\"\n                    ref={(ele) => {\n                      ref.current[4] = ele;\n                    }}\n                  >\n                    <MultiSelect\n                      ArrowRenderer={ArrowRenderer}\n                      id=\"csl\"\n                      options={csl}\n                      hasSelectAll={true}\n                      value={formData.csl}\n                      shouldToggleOnHover={false}\n                      disableSearch={false}\n                      disabled={false}\n                      onChange={(e) => {\n                        setFormData((prevVal) => ({\n                          ...prevVal,\n                          [\"csl\"]: e,\n                        }));\n                      }}\n                    />\n                  </div>\n                </div>\n              </div>\n            )}\n\n            {viewBy === \"dp\" && view === \"region\" && (\n              <div className=\" col-md-3 mb-2\">\n                <div className=\"form-group row\">\n                  <label className=\"col-5\" htmlFor=\"Dropdown2\">\n                    DP&nbsp;\n                    <span className=\"col-1 p-0 error-text\">*</span>\n                  </label>\n                  <span className=\"col-1\">:</span>\n                  <div\n                    className=\"col-6 multiselect\"\n                    ref={(ele) => {\n                      ref.current[5] = ele;\n                    }}\n                  >\n                    <MultiSelect\n                      ArrowRenderer={ArrowRenderer}\n                      id=\"DpId\"\n                      options={dpOptions}\n                      hasSelectAll={true}\n                      value={selectDelivery}\n                      shouldToggleOnHover={false}\n                      disableSearch={false}\n                      disabled={false}\n                      onChange={(e) => {\n                        setSelectedDelivery(e);\n                        setFormData((prevVal) => ({\n                          ...prevVal,\n                          [\"DpId\"]: e,\n                        }));\n                      }}\n                    />\n                  </div>\n                </div>\n              </div>\n            )}\n\n            {viewBy === \"engComp\" && view === \"region\" && (\n              <div className=\"col-md-3 mb-2\">\n                <div className=\"form-group row\">\n                  <label className=\"col-5\" htmlFor=\"Dropdown2\">\n                    Eng.Company&nbsp;\n                    <span className=\"col-1 p-0 error-text\">*</span>\n                  </label>\n                  <span className=\"col-1\">:</span>\n                  <div\n                    className=\"col-6 multiselect\"\n                    ref={(ele) => {\n                      ref.current[5] = ele;\n                    }}\n                  >\n                    <MultiSelect\n                      ArrowRenderer={ArrowRenderer}\n                      id=\"engComp\"\n                      name=\"engComp\"\n                      options={engCompany}\n                      hasSelectAll={true}\n                      isLoading={false}\n                      shouldToggleOnHover={false}\n                      disableSearch={false}\n                      value={selectedEngCompany}\n                      disabled={false}\n                      onChange={(s) => {\n                        setSelectedEngCompany(s);\n                        let filteredValues = [];\n                        s.forEach((d) => {\n                          filteredValues.push(d.value);\n                        });\n                      }}\n                      valueRenderer={(selected) => {\n                        if (selected?.length === 0) {\n                          return \"Select\";\n                        } else if (selected?.length === engCompany?.length) {\n                          return <>&lt;&lt; ALL &gt;&gt;</>;\n                        }\n                      }}\n                    />\n                  </div>\n                </div>\n              </div>\n            )}\n\n            <div\n              className=\"col-md-12 col-sm-12 col-xs-12 search-btn-container\"\n              style={{\n                display: \"flex\",\n                justifyContent: \"center\",\n                marginTop: \"20px\",\n              }}\n            >\n              <button\n                type=\"submit\"\n                className=\"btn btn-primary\"\n                onClick={handleSubmit}\n              >\n                <FaSearch />\n                Search\n              </button>\n            </div>\n          </div>\n        </CCollapse>\n\n        <SelectCustDialogBox\n          flag={flag}\n          variance={1}\n          visible={custVisible}\n          setVisible={setCustVisible}\n          setSelectedItems={setSelectedItems}\n          selectedItems={selectedItems}\n        />\n      </div>\n\n      {search === true ? (\n        <div className=\"mb-2\" align=\" right \">\n          <RiFileExcel2Line\n            size=\"1.5em\"\n            title=\"Export to Excel\"\n            style={{ color: \"green\" }}\n            cursor=\"pointer\"\n            onClick={exportExcel}\n          />\n        </div>\n      ) : (\n        \"\"\n      )}\n\n      {showTable && open && (\n        <>\n          {view != \"customerdelta\" && (\n            <div\n              className=\"col-md-12 \"\n              style={{\n                textAlign: \"left\",\n                // width:\n                //   view === \"customer\"\n                //     ? \"1082px\"\n                //     : view === \"region\" || view == \"month\"\n                //     ? \"80%\"\n                //     : \"1082px\",\n              }}\n            >\n              <div className=\"headerStructure\">&nbsp;{title}</div>\n            </div>\n          )}\n\n          {[\"region\", \"customer\", \"month\"].includes(view) && open && (\n            <MonthlyRevenueTable\n              view={view}\n              data={tableData}\n              expandedCols={[]}\n              colExpandState={[]}\n              title={title}\n            />\n          )}\n          {view === \"customerdelta\" && open && (\n            <MonthlyRevenueCDTable\n              setTableKey={setTableKey}\n              shouldRenderTable={shouldRenderTable}\n              tableKey={tableKey}\n              selectedDuration={selectedDuration}\n              view={view}\n              data={tableData}\n              expandedCols={[\"csl\", \"dp\", \"acc_exe\", \"acc_own\"]}\n              colExpandState={[\"0\", \"1\", \"dispName\"]}\n            />\n          )}\n        </>\n      )}\n      {loader ? <Loader handleAbort={handleAbort} /> : \"\"}\n    </div>\n  );\n};\n\nexport default MonthlyRevenueTrend;\n"],"names":["MaterialReactCollapisbleTable","props","icons","fte0","src","fte_inactive","alt","style","height","float","title","fte1","fte_active","fte2","fte_notice","subk0","subk_inactive","subk1","subk_active","width","size","subk2","subk_notice","data","expandedCols","colExpandState","useState","nodes","setNodes","columns","setColumns","hiddenColumns","setHiddenColumns","colExpFlag","setColumnExpFlag","setHeaders","numberWithCommas","x","number","String","includes","num","Number","final","toLocaleString","minimumFractionDigits","maximumFractionDigits","split","replace","join","parseFloat","useEffect","getData","tableData","replaceAll","colArr","newHeaders","hiddenHeaders","obj","i","length","colVal","trim","firstData","filteredHeaders","Object","entries","filter","value","map","key","push","assign","index","accessorKey","header","enableColumnActions","enableHiding","Header","column","IconButton","className","onClick","prev","Cell","cell","whiteSpace","overflow","textOverflow","getValue","id","row","original","parentId","values","d","jsonToTree","children","flatArray","options","dictionary","tree","forEach","node","nodeId","nodeParentId","enableExpandAll","enableExpanding","enablePagination","enableBottomToolbar","enableTopToolbar","enableSorting","filterFromLeafRows","initialState","expanded","density","columnVisibility","columnPinning","right","state","defaultColumn","minSize","maxSize","enableStickyHeader","muiTableContainerProps","sx","maxHeight","maxWidth","muiTableBodyProps","borderRight","fontSize","paddingTop","paddingBottom","muiTableHeadProps","borderTop","background","padding","MonthlyRevenueTable","view","headers","object","setObject","infoPopUp","setInfoPopUp","iconName","setIconName","anchorEl","setAnchorEl","toFixed","obj1","newObject","minusOneRow","e","currentTarget","subHeaders","sort","revenueOrder","a","b","indexOf","subArray","subkey","lvl","class","originalDate","Date","month","formattedDate","getFullYear","fontWeight","name","year","convertedJsonToTree","colCollapse","flatData","borderBottom","borderLeft","RevenueForecastInfoPopUp","MonthlyRevenueCDTable","selectedDuration","shouldRenderTable","tableKey","console","log","count","expandClass","unWantedColsArray","filteredHeadersArray","headerArray","unWantedCols","isSpecialKey","paddingLeft","BiChevronLeft","Array","isArray","_","keys","isNaN","isNegative","isPositive","formatValuesWithCommas","expandT","expandF","stylesForDuration12","stylesForDuration11","stylesForDuration10","stylesForDuration9","stylesForDuration8","stylesForDuration7","stylesForDuration6","stylesForDuration5","stylesForDuration4","stylesForDuration3","stylesForDuration2","stylesForDuration1","enableRowVirtualization","enableGlobalFilter","enableDensityToggle","enableFullScreenToggle","enableColumnFilters","showGlobalFilter","paginateExpandedRows","minWidth","FMeasures","searchdata","setSearchdata","setShouldRenderTable","change","setChange","baseUrl","environment","ref","useRef","loader","setLoader","currentDate","getMonth","setMonth","setSelectedDuration","setView","viewBy","setViewBy","setTitle","Measures","setMeasures","selectedMeasures","setSelectedMeasures","item","commaSeparatedValues","cdMeasures","setcdMeasures","selectedcdMeasures","setSelectedcdMeasures","setTableKey","selectedValues","abortController","setCustomer","selectedItems","setSelectedItems","engCompany","setEngCompany","selectedEngCompany","setSelectedEngCompany","setTableData","showTable","setShowTable","custVisible","setCustVisible","loggedUserId","localStorage","getItem","setCustomerIds","validationmessage","setValidationMessage","revenue","setRevenue","setSort","sortChange","setSortChange","dp","setDp","dpOptions","setDpOptions","accountExecutive","setAccountExecutive","selectedAccountExecutive","setSelectedAccountExecutive","selectedDp","setSelectedDp","selectDelivery","setSelectedDelivery","csl","setCsl","search","setSearch","details","setDetails","FaChevronCircleUp","cheveronIcon","setCheveronIcon","visible","setVisible","open","setOpen","accountOwner","setAccountOwner","selectedAccountOwner","setSelectedAccountOwner","selectedCust","JSON","parse","toString","routes","setRoutes","getMenus","axios","method","url","then","resp","menu","subMenus","subMenu","display_name","getEngCompany","getCustomerData","getcdMeasures","getMeasures","handleDp","handleCsl","res","custom","dpObj","label","Name","account_owner_id","response","filteredEngCompany","ele","generateDropdownLabel","selectedOptions","allOptions","option","allValues","cslObj","PersonName","setFormData","prevVal","customers","fullName","catch","error","filteredType","custIds","revenueType","DpId","formData","ArrowRenderer","handleChange1","target","saveAsExcelFile","buffer","fileName","module","default","Blob","type","saveAs","ScreenBreadcrumbs","currentScreenName","FaChevronCircleDown","htmlFor","current","selected","onChange","date","dateFormat","showMonthYearPicker","placeholderText","disabled","hasSelectAll","valueRenderer","isLoading","shouldToggleOnHover","disableSearch","s","filteredValues","filteredCountry","display","justifyContent","marginTop","valid","GlobalValidation","loaderTime","setTimeout","AbortController","commonFilters","FromDt","moment","format","dur","parseInt","ViewBy","UserId","selViewType","selViewVal","filters","SortBy","engComp","CSL","DP","AccExe","AccOwner","signal","clearTimeout","emptyObject","norecords","detail","cols","prevKey","SelectCustDialogBox","flag","variance","align","color","cursor","ExcelJS","columnsToExclude","filteredColumns","col","rows","slice","child","extractValue","workbook","Workbook","worksheet","addWorksheet","addRow","rowNumber","getRow","font","bold","xlsx","writeBuffer","textAlign","Loader","handleAbort","abort"],"sourceRoot":""}