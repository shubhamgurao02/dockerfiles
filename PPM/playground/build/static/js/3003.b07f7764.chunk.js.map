{"version":3,"file":"static/js/3003.b07f7764.chunk.js","mappings":"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","sources":["views/InvoiceComponent/HeaderPopup.js","views/InvoiceComponent/BankDetailsPopup.js","views/InvoiceComponent/BankDetails.js","views/InvoiceComponent/CommonComponents.js","views/InvoiceComponent/HeaderFooter.js","views/InvoiceComponent/InvoiceOpen.js","views/InvoiceComponent/ServicesPopup.js","views/InvoiceComponent/Services.js","views/InvoiceComponent/Projectinvoicedetails.js","views/InvoiceComponent/Invoice.js","views/ProjectInvoiceDetailsComponent/ProjectInvoiceDetailsFilters.js"],"sourcesContent":["import React, { useRef } from \"react\";\nimport { useState, useEffect } from \"react\";\nimport { environment } from \"../../environments/environment\";\nimport axios from \"axios\";\nimport { CModalHeader, CModalTitle } from \"@coreui/react\";\nimport { CModalBody } from \"@coreui/react\";\nimport { CButton } from \"@coreui/react\";\nimport { CModal } from \"@coreui/react\";\nimport Draggable from \"react-draggable\";\nimport ReactQuill, { Quill } from \"react-quill\";\nimport SaveIcon from \"@mui/icons-material/Save\";\nimport { MdOutlineCancel } from \"react-icons/md\";\nimport { VscChromeClose } from \"react-icons/vsc\";\nimport GlobalValidation from \"../ValidationComponent/GlobalValidation\";\nimport { AiFillWarning } from \"react-icons/ai\";\nvar Block = Quill.import(\"blots/block\");\nBlock.tagname = \"a\";\nQuill.register(Block);\n\nfunction HeaderPopup(props) {\n  const baseUrl = environment.baseUrl;\n  const {\n    buttonPopup,\n    setButtonPopup,\n    getData,\n    setAddmsg,\n    editedData,\n    editId,\n    type,\n  } = props;\n  const [value, setValue] = useState(\"\");\n  const [id, setid] = useState(0);\n  const [formEditData, setFormEditData] = useState(editedData);\n  const ref = useRef([]);\n  const [validationMessage, setValidationMessage] = useState(false);\n  const editorToolBar = {\n    toolbar: [\n      [\n        { header: [false, 1, 2, 3, 4, 5, 6] },\n        // {tooltip:[\"ee\"]},\n        // { size: [] },\n        { font: [] },\n        { color: [] },\n        { bold: { tooltip: \"Bold (Ctrl+B)\" } },\n        \"italic\",\n        \"underline\",\n        { list: \"ordered\" },\n        { list: \"bullet\" },\n        { script: \"sub\" },\n        { script: \"super\" },\n        { indent: \"-1\" },\n        { indent: \"+1\" },\n        { align: null },\n        { align: \"center\" },\n        { align: \"right\" },\n        \"strike\",\n        \"link\",\n        \"code-block\",\n        \"clean\",\n      ],\n    ],\n    clipboard: {\n      matchVisual: false,\n    },\n  };\n\n  const handleEditClick = () => {\n    let adddata = document.getElementsByClassName(\"error\");\n    for (let i = 0; i < adddata.length; i++) {\n      if (\n        adddata[i].value == \"\" ||\n        adddata[i].value == \"null\" ||\n        adddata[i].value == \"All\" ||\n        adddata[i].value == undefined\n      ) {\n        adddata[i].classList.add(\"error-block\");\n        setValidationMessage(true);\n      } else {\n        adddata[i].classList.remove(\"error-block\");\n        setValidationMessage(false);\n      }\n    }\n\n    let title = formEditData.title;\n    let header = formEditData.header_content;\n    let footer = formEditData.footer_content;\n\n    if (\n      Object.values({ title, header, footer }).includes(\"\") ||\n      header === \"<p><br></p>\" ||\n      footer === \"<p><br></p>\"\n    ) {\n      setValidationMessage(true);\n      return;\n    }\n    setValidationMessage(false);\n    let valid = GlobalValidation(ref);\n\n    console.log(valid);\n\n    if (valid) {\n      setValidationMessage(true);\n\n      return;\n    }\n    setValidationMessage(false);\n    axios({\n      method: \"post\",\n      url: baseUrl + `/invoicems/invoice/postheaderfooterDetails`,\n      data: {\n        id: editId,\n        title: formEditData.title,\n        headerContent: formEditData.header_content,\n        footerContent: formEditData.footer_content,\n      },\n    }).then((error) => {\n      getData();\n      setid();\n      setButtonPopup(false);\n      setAddmsg(true);\n\n      setTimeout(() => {\n        setAddmsg(false);\n      }, 3000);\n    });\n  };\n\n  //Save Click------------\n  const handleSaveClick = () => {\n    let adddata = document.getElementsByClassName(\"error\");\n    for (let i = 0; i < adddata.length; i++) {\n      if (\n        adddata[i].value == \"\" ||\n        adddata[i].value == \"null\" ||\n        adddata[i].value == \"All\" ||\n        adddata[i].value == undefined\n      ) {\n        adddata[i].classList.add(\"error-block\");\n        setValidationMessage(true);\n      } else {\n        adddata[i].classList.remove(\"error-block\");\n        setValidationMessage(false);\n      }\n    }\n\n    let title = formEditData.title;\n    let header = formEditData.header_content;\n    let footer = formEditData.footer_content;\n\n    if (Object.values({ title, header, footer }).includes(\"\")) {\n      setValidationMessage(true);\n      adddata[i].classList.remove(\"error-block\");\n\n      return;\n    }\n    setValidationMessage(false);\n    let valid = GlobalValidation(ref);\n    setValidationMessage(false);\n    console.log(valid);\n\n    if (valid) {\n      setValidationMessage(true);\n\n      return;\n    }\n\n    setValidationMessage(false);\n    axios({\n      method: \"post\",\n      url: baseUrl + `/invoicems/invoice/postheaderfooterDetails`,\n      data: {\n        id: null,\n        title: formEditData.title,\n        headerContent: formEditData.header_content,\n        footerContent: formEditData.footer_content,\n      },\n    }).then((error) => {\n      setValidationMessage(false);\n      getData();\n      setid();\n      setButtonPopup(false);\n      setAddmsg(true);\n      setTimeout(() => {\n        setAddmsg(false);\n      }, 3000);\n    });\n  };\n\n  return (\n    <div>\n      <CModal\n        size=\"lg\"\n        visible={buttonPopup}\n        onClose={() => {\n          setButtonPopup(false);\n        }}\n        backdrop={\"static\"}\n      >\n        <CModalHeader className=\"hgt22\">\n          <CModalTitle>\n            <span className=\"ft16\">Header & Footer</span>\n          </CModalTitle>\n        </CModalHeader>\n        {validationMessage ? (\n          <div\n            className=\"statusMsg error\"\n            style={{ maxWidth: \"777px\", marginLeft: \"10px\" }}\n          >\n            <span className=\"error-block\">\n              <AiFillWarning /> &nbsp;Please select valid values for highlighted\n              fields\n            </span>\n          </div>\n        ) : (\n          \"\"\n        )}\n\n        <CModalBody>\n          <div className=\"col-md-12\">\n            <div>\n              <label htmlFor=\"\">\n                Title<span className=\"error-text\">*</span>\n              </label>\n              <div\n                className=\"textfield error\"\n                ref={(ele) => {\n                  ref.current[0] = ele;\n                }}\n              >\n                {type == \"add\" ? (\n                  <input\n                    type=\"text\"\n                    id=\"title\"\n                    name=\"title\"\n                    onChange={(e) =>\n                      setFormEditData((prev) => ({\n                        ...prev,\n                        [\"title\"]: e.target.value,\n                      }))\n                    }\n                  ></input>\n                ) : (\n                  <input\n                    type=\"text\"\n                    id=\"title\"\n                    name=\"title\"\n                    defaultValue={editedData.title}\n                    onChange={(e) =>\n                      setFormEditData((prev) => ({\n                        ...prev,\n                        [\"title\"]: e.target.value,\n                      }))\n                    }\n                    title={editedData.title}\n                  ></input>\n                )}\n              </div>\n            </div>\n          </div>\n          <div>\n            <label className=\" mt-1\" htmlFor=\"\">\n              Header Content<span className=\"error-text\">*</span>\n            </label>\n            <div\n              className=\"text error\"\n              ref={(ele) => {\n                ref.current[1] = ele;\n              }}\n            >\n              {type == \"add\" ? (\n                <div>\n                  <ReactQuill\n                    theme=\"snow\"\n                    name=\"header_content\"\n                    id=\"header_content\"\n                    // id=\"editor-container\"\n                    onChange={(e) => {\n                      setValue(e);\n                      setFormEditData((prev) => ({\n                        ...prev,\n                        [\"header_content\"]: e,\n                      }));\n                    }}\n                    // modules={editorToolBar}\n                    modules={editorToolBar}\n                  />\n                </div>\n              ) : (\n                <ReactQuill\n                  theme=\"snow\"\n                  // value={value}\n                  name=\"header_content\"\n                  id=\"editor-container\"\n                  // id=\"editor-container\"\n                  modules={editorToolBar}\n                  onChange={(e) => {\n                    setValue(e);\n                    setFormEditData((prev) => ({\n                      ...prev,\n                      [\"header_content\"]: e,\n                    }));\n                  }}\n                  defaultValue={\n                    editedData?.header_content == undefined || null\n                      ? \"\"\n                      : editedData?.header_content\n                  }\n                />\n              )}\n            </div>\n          </div>\n\n          <div>\n            <label className=\" mt-1\" htmlFor=\"\">\n              Footer Content<span className=\"error-text \">*</span>\n            </label>\n            <div\n              className=\"text error\"\n              ref={(ele) => {\n                ref.current[2] = ele;\n              }}\n            >\n              {type == \"add\" ? (\n                <div>\n                  <ReactQuill\n                    theme=\"snow\"\n                    // value={value}\n                    name=\"footer_content\"\n                    id=\"footer_content\"\n                    // id=\"editor-container\"\n                    onChange={(e) => {\n                      setValue(e);\n                      setFormEditData((prev) => ({\n                        ...prev,\n                        [\"footer_content\"]: e,\n                      }));\n                    }}\n                    modules={editorToolBar}\n                  />\n                </div>\n              ) : (\n                <ReactQuill\n                  theme=\"snow\"\n                  // value={value}\n                  name=\"footer_content\"\n                  id=\"editor-container\"\n                  // id=\"editor-container\"\n                  onChange={(e) => {\n                    setValue(e);\n                    setFormEditData((prev) => ({\n                      ...prev,\n                      [\"footer_content\"]: e,\n                    }));\n                  }}\n                  defaultValue={\n                    editedData?.footer_content == undefined || null\n                      ? \"\"\n                      : editedData?.footer_content\n                  }\n                  modules={editorToolBar}\n                />\n              )}\n            </div>\n          </div>\n\n          <div className='className=\"col-md-12 col-sm-12 col-xs-12 btn-container center my-3'>\n            {type == \"add\" ? (\n              <button\n                type=\"button\"\n                className=\"btn btn-primary\"\n                onClick={handleSaveClick}\n              >\n                <SaveIcon />\n                Save\n              </button>\n            ) : (\n              <button\n                type=\"button\"\n                className=\"btn btn-primary\"\n                onClick={handleEditClick}\n              >\n                <SaveIcon />\n                Save\n              </button>\n            )}\n            <button\n              type=\"button\"\n              className=\"btn btn-primary\"\n              onClick={() => {\n                setButtonPopup(false);\n              }}\n            >\n              <VscChromeClose />\n              Cancel\n            </button>\n          </div>\n        </CModalBody>\n      </CModal>\n    </div>\n  );\n}\n\nexport default HeaderPopup;\n","import React, { useRef } from \"react\";\nimport { useState, useEffect } from \"react\";\nimport { environment } from \"../../environments/environment\";\nimport axios from \"axios\";\nimport { CModalHeader, CModalTitle } from \"@coreui/react\";\nimport { CModalBody } from \"@coreui/react\";\nimport { CButton } from \"@coreui/react\";\nimport { CModal } from \"@coreui/react\";\nimport Draggable from \"react-draggable\";\nimport ReactQuill from \"react-quill\";\nimport SaveIcon from \"@mui/icons-material/Save\";\nimport { MdOutlineCancel } from \"react-icons/md\";\nimport { VscChromeClose } from \"react-icons/vsc\";\nimport GlobalValidation from \"../ValidationComponent/GlobalValidation\";\nimport { AiFillWarning } from \"react-icons/ai\";\n\nfunction BankDetailsPopup(props) {\n  const {\n    buttonPopup,\n    setButtonPopup,\n    getData,\n    setAddmsg,\n    editedData,\n    editId,\n    type,\n    data,\n  } = props;\n  const [id, setid] = useState(0);\n  const [formEditData, setFormEditData] = useState(editedData);\n  const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n  const ref = useRef([]);\n  const [validationMessage, setValidationMessage] = useState(false);\n  const baseUrl = environment.baseUrl;\n  const [initialformEditData, initialsetFormEditData] = useState(editedData);\n  const [flag, setFlag] = useState(true);\n  const handleKeyDown = (event) => {\n    // Regular expression pattern to match alphanumeric characters\n    const alphanumericAndSpaceRegex = /^[0-9a-zA-Z\\s]+$/;\n\n    if (!alphanumericAndSpaceRegex.test(event.key)) {\n      // If the pressed key is not alphanumeric, prevent it from being entered in the input field\n      event.preventDefault();\n    }\n    if (event.key === \"Enter\") {\n    }\n  };\n\n  const handleEditClick = () => {\n    let someData = data.some(\n      (d) => d.account_number == formEditData.account_number\n    );\n    console.log(someData);\n    let valid = GlobalValidation(ref);\n\n    if (valid) {\n      setValidationMessage(true);\n      return;\n    }\n\n    if (\n      someData &&\n      flag == false &&\n      formEditData.account_number != initialformEditData.account_number\n    ) {\n      let ele = document.getElementsByClassName(\"unique\");\n      for (let index = 0; index < ele.length; index++) {\n        ele[index].classList.add(\"error-block\");\n      }\n      setUniqueMessage(true);\n      // setValidationMessage(false);\n      setTimeout(() => {\n        // setValidationMessage(false);\n      }, 3000);\n      return;\n    }\n    setUniqueMessage(false);\n    axios({\n      method: \"post\",\n      url: baseUrl + `/invoicems/invoice/postbankDetails`,\n      data: {\n        id: editId,\n        accountNumber: formEditData.account_number,\n        bankName: formEditData.bank_name,\n        branchLocation: formEditData.branch_location,\n        bankAddress: formEditData.bank_address,\n        accountType: formEditData.account_type,\n        ifscCode: formEditData.ifsc_code,\n      },\n    }).then((error) => {\n      getData();\n      setid();\n      setButtonPopup(false);\n      setAddmsg(true);\n\n      setTimeout(() => {\n        setAddmsg(false);\n      }, 3000);\n    });\n  };\n\n  //--------------\n  const [uniquemessage, setUniqueMessage] = useState(false);\n  const [uniqueValidate, setUniqueValidate] = useState([]);\n  console.log(uniqueValidate);\n  const handleSaveClick = () => {\n    let someData = data.some(\n      (d) => d.account_number == formEditData.account_number\n    );\n    console.log(someData);\n    let valid = GlobalValidation(ref);\n\n    if (valid) {\n      setValidationMessage(true);\n      return;\n    }\n\n    if (someData) {\n      let ele = document.getElementsByClassName(\"unique\");\n      console.log(ele.length);\n      for (let index = 0; index < ele.length; index++) {\n        ele[index].classList.add(\"error-block\");\n      }\n      setUniqueMessage(true);\n      setValidationMessage(false);\n\n      return;\n    }\n    setUniqueMessage(false);\n\n    axios({\n      method: \"post\",\n      url: baseUrl + `/invoicems/invoice/postbankDetails`,\n      data: {\n        id: null,\n        accountNumber: formEditData.account_number,\n        bankName: formEditData.bank_name,\n        branchLocation: formEditData.branch_location,\n        bankAddress: formEditData.bank_address,\n        accountType: formEditData.account_type,\n        ifscCode: formEditData.ifsc_code,\n      },\n    }).then((error) => {\n      getData();\n      setid();\n      setButtonPopup(false);\n      setAddmsg(true);\n\n      setTimeout(() => {\n        setAddmsg(false);\n      }, 3000);\n    });\n  };\n\n  return (\n    <div>\n      <CModal\n        size=\"lg\"\n        visible={buttonPopup}\n        onClose={() => {\n          setButtonPopup(false);\n        }}\n        backdrop={\"static\"}\n      >\n        <CModalHeader className=\"hgt22\">\n          <CModalTitle>\n            <div className=\"ft16\">Bank Details</div>\n            {/* <div className=\"ft16\" >Bank Details </div> */}\n          </CModalTitle>\n        </CModalHeader>\n\n        <CModalBody>\n          <div className=\"col-md-12\">\n            {validationMessage ? (\n              <div className=\"statusMsg error\">\n                <span className=\"error-block\">\n                  <AiFillWarning /> &nbsp;Please select valid values for\n                  highlighted fields\n                </span>\n              </div>\n            ) : (\n              \"\"\n            )}\n\n            {uniquemessage ? (\n              <div className=\"statusMsg error\">\n                <span className=\"error-block\">\n                  <AiFillWarning /> &nbsp;Please select valid values for\n                  highlighted fields\n                </span>\n              </div>\n            ) : (\n              \"\"\n            )}\n            <div className=\"row\">\n              <div className=\"col-md-6\">\n                <label htmlFor=\"\">\n                  Account Number&nbsp;<span className=\"error-text\">*</span>\n                </label>\n                <div\n                  className=\"textfield unique\"\n                  ref={(ele) => {\n                    ref.current[0] = ele;\n                  }}\n                  //   ref={(ele) => {\n                  //     if (uniqueValidate) {\n                  //       ref.current[0] = ele;\n                  //     }\n                  //   }}\n                >\n                  {type == \"add\" ? (\n                    <input\n                      className=\"unique\"\n                      type=\"text\"\n                      id=\"account_number\"\n                      name=\"account_number\"\n                      onKeyDown={handleKeyDown}\n                      onChange={(e) =>\n                        setFormEditData((prev) => ({\n                          ...prev,\n                          [\"account_number\"]: e.target.value,\n                        }))\n                      }\n                      autoFocus\n                    ></input>\n                  ) : (\n                    <input\n                      type=\"text\"\n                      className=\"unique\"\n                      id=\"account_number\"\n                      name=\"account_number\"\n                      onKeyDown={handleKeyDown}\n                      defaultValue={editedData.account_number}\n                      onChange={(e) => {\n                        setFormEditData((prev) => ({\n                          ...prev,\n                          [\"account_number\"]: e.target.value,\n                        }));\n                        setFlag(false);\n                      }}\n                    ></input>\n                  )}\n                </div>\n              </div>\n              <div className=\"col-md-6\">\n                <label htmlFor=\"\">\n                  Account Type&nbsp;<span className=\"error-text\">*</span>\n                </label>\n                <div\n                  className=\" textfield\"\n                  ref={(ele) => {\n                    ref.current[1] = ele;\n                  }}\n                >\n                  {type == \"add\" ? (\n                    <input\n                      type=\"text\"\n                      id=\"account_type\"\n                      name=\"account_type\"\n                      onKeyDown={handleKeyDown}\n                      onChange={(e) =>\n                        setFormEditData((prev) => ({\n                          ...prev,\n                          [\"account_type\"]: e.target.value,\n                        }))\n                      }\n                    ></input>\n                  ) : (\n                    <input\n                      type=\"text\"\n                      id=\"account_type\"\n                      name=\"account_type\"\n                      onKeyDown={handleKeyDown}\n                      defaultValue={editedData.account_type}\n                      onChange={(e) =>\n                        setFormEditData((prev) => ({\n                          ...prev,\n                          [\"account_type\"]: e.target.value,\n                        }))\n                      }\n                    ></input>\n                  )}\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"col-md-12\">\n            <div className=\"row\">\n              <div className=\"col-md-4\">\n                <label className=\"mt-1\" htmlFor=\"\">\n                  Bank Name&nbsp;<span className=\"error-text\">*</span>\n                </label>\n                <div\n                  className=\" textfield\"\n                  ref={(ele) => {\n                    ref.current[2] = ele;\n                  }}\n                >\n                  {type == \"add\" ? (\n                    <input\n                      type=\"text\"\n                      id=\"bank_name\"\n                      name=\"bank_name\"\n                      onKeyDown={handleKeyDown}\n                      onChange={(e) =>\n                        setFormEditData((prev) => ({\n                          ...prev,\n                          [\"bank_name\"]: e.target.value,\n                        }))\n                      }\n                    ></input>\n                  ) : (\n                    <input\n                      type=\"text\"\n                      id=\"bank_name\"\n                      name=\"bank_name\"\n                      onKeyDown={handleKeyDown}\n                      defaultValue={editedData.bank_name}\n                      onChange={(e) =>\n                        setFormEditData((prev) => ({\n                          ...prev,\n                          [\"bank_name\"]: e.target.value,\n                        }))\n                      }\n                    ></input>\n                  )}\n                </div>\n              </div>\n              <div className=\"col-md-4\">\n                <label className=\"mt-1\" htmlFor=\"\">\n                  Branch Name&nbsp;<span className=\"error-text\">*</span>\n                </label>\n                <div\n                  className=\" textfield\"\n                  ref={(ele) => {\n                    ref.current[3] = ele;\n                  }}\n                >\n                  {type == \"add\" ? (\n                    <input\n                      type=\"text\"\n                      id=\"branch_location\"\n                      name=\"branch_location\"\n                      onKeyDown={handleKeyDown}\n                      onChange={(e) =>\n                        setFormEditData((prev) => ({\n                          ...prev,\n                          [\"branch_location\"]: e.target.value,\n                        }))\n                      }\n                    ></input>\n                  ) : (\n                    <input\n                      type=\"text\"\n                      id=\"branch_location\"\n                      name=\"branch_location\"\n                      onKeyDown={handleKeyDown}\n                      defaultValue={editedData.branch_location}\n                      onChange={(e) =>\n                        setFormEditData((prev) => ({\n                          ...prev,\n                          [\"branch_location\"]: e.target.value,\n                        }))\n                      }\n                    ></input>\n                  )}\n                </div>\n              </div>\n\n              <div className=\"col-md-4\">\n                <label className=\"mt-1\" htmlFor=\"\">\n                  IFSC Code&nbsp;<span className=\"error-text\">*</span>\n                </label>\n                <div\n                  className=\" textfield\"\n                  ref={(ele) => {\n                    ref.current[4] = ele;\n                  }}\n                >\n                  {type == \"add\" ? (\n                    <input\n                      type=\"text\"\n                      id=\"ifsc_code\"\n                      name=\"ifsc_code\"\n                      onKeyDown={handleKeyDown}\n                      onChange={(e) =>\n                        setFormEditData((prev) => ({\n                          ...prev,\n                          [\"ifsc_code\"]: e.target.value,\n                        }))\n                      }\n                    ></input>\n                  ) : (\n                    <input\n                      type=\"text\"\n                      id=\"ifsc_code\"\n                      name=\"ifsc_code\"\n                      onKeyDown={handleKeyDown}\n                      defaultValue={editedData.ifsc_code}\n                      onChange={(e) =>\n                        setFormEditData((prev) => ({\n                          ...prev,\n                          [\"ifsc_code\"]: e.target.value,\n                        }))\n                      }\n                    ></input>\n                  )}\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"col-md-12\">\n            <div className=\"mt-1\">\n              <label htmlFor=\"\">\n                Action&nbsp;<span className=\"error-text\">*</span>\n              </label>\n              <div\n                className=\" textfield\"\n                ref={(ele) => {\n                  ref.current[5] = ele;\n                }}\n              >\n                {type == \"add\" ? (\n                  <input\n                    type=\"text\"\n                    id=\"bank_address\"\n                    name=\"bank_address\"\n                    onKeyDown={handleKeyDown}\n                    onChange={(e) =>\n                      setFormEditData((prev) => ({\n                        ...prev,\n                        [\"bank_address\"]: e.target.value,\n                      }))\n                    }\n                  ></input>\n                ) : (\n                  <input\n                    type=\"text\"\n                    id=\"bank_address\"\n                    name=\"bank_address\"\n                    onKeyDown={handleKeyDown}\n                    defaultValue={editedData.bank_address}\n                    onChange={(e) =>\n                      setFormEditData((prev) => ({\n                        ...prev,\n                        [\"bank_address\"]: e.target.value,\n                      }))\n                    }\n                  ></input>\n                )}\n              </div>\n            </div>\n          </div>\n\n          <div className='className=\"col-md-12 col-sm-12 col-xs-12 btn-container center my-3'>\n            {type == \"add\" ? (\n              <button className=\"btn btn-primary\" onClick={handleSaveClick}>\n                <SaveIcon />\n                Save\n              </button>\n            ) : (\n              <button className=\"btn btn-primary\" onClick={handleEditClick}>\n                <SaveIcon />\n                Save\n              </button>\n            )}\n            <button\n              className=\"btn btn-primary\"\n              onClick={() => {\n                setButtonPopup(false);\n              }}\n            >\n              <VscChromeClose />\n              Cancel\n            </button>\n          </div>\n        </CModalBody>\n      </CModal>\n    </div>\n  );\n}\nexport default BankDetailsPopup;\n","import React from \"react\";\nimport { environment } from \"../../environments/environment\";\nimport {\n  AiFillDelete,\n  AiFillEdit,\n  AiFillWarning,\n  AiOutlineFileSearch,\n} from \"react-icons/ai\";\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport axios from \"axios\";\nimport CellRendererPrimeReactDataTable from \"../PrimeReactTableComponent/CellRendererPrimeReactDataTable\";\nimport { Column } from \"ag-grid-community\";\nimport { MdOutlinePlaylistAdd } from \"react-icons/md\";\nimport HeaderPopup from \"./HeaderPopup\";\nimport { BiCheck } from \"react-icons/bi\";\nimport Loader from \"../Loader/Loader\";\nimport BankDetailsPopup from \"./BankDetailsPopup\";\nimport ErrorLogTable from \"../Administration/ErrorLogsTable\";\nfunction BankDetails() {\n  let rows = 10;\n  const [data, setData] = useState([{}]);\n  const [buttonPopup, setButtonPopup] = useState(false);\n  const [headerData, setHeaderData] = useState([]);\n  const [linkColumns, setLinkColumns] = useState([]);\n  const [linkColumnsRoutes, setLinkColumnsRoutes] = useState([]);\n  const [type, setType] = useState(\"add\");\n  const [editedData, setEditedData] = useState([]);\n  const [editId, setEditId] = useState();\n  const [addmsg, setAddmsg] = useState(false);\n  const [loader, setLoader] = useState(false);\n  const baseUrl = environment.baseUrl;\n\n  const accountNumber = (data) => {\n    return (\n      <div\n        className=\"ellipsis\"\n        data-toggle=\"tooltip\"\n        title={data.account_number}\n      >\n        {data.account_number}\n      </div>\n    );\n  };\n  const bankname = (data) => {\n    return (\n      <div\n        className=\"ellipsis\"\n        style={{ width: \"100%\" }}\n        data-toggle=\"tooltip\"\n        title={data.bank_name}\n      >\n        {data.bank_name}\n      </div>\n    );\n  };\n  const branchname = (data) => {\n    return (\n      <div\n        className=\"ellipsis\"\n        data-toggle=\"tooltip\"\n        title={data.branch_location}\n      >\n        {data.branch_location}\n      </div>\n    );\n  };\n  const ifscCode = (data) => {\n    return (\n      <div className=\"ellipsis\" data-toggle=\"tooltip\" title={data.ifsc_code}>\n        {data.ifsc_code}\n      </div>\n    );\n  };\n  // const Footer = (data) => { return (<div className=\"ellipsis\" data-toggle=\"tooltip\" title={data.footer_content}>{data.footer_content}</div>) }\n\n  const getData = () => {\n    axios\n      .get(baseUrl + `/invoicems/invoice/getbankdeatils`)\n      // axios.get(``)\n      .then((res) => {\n        const GetData = res.data;\n        for (let i = 0; i < GetData.length; i++) {\n          GetData[i][\"SNo\"] = i + 1;\n        }\n\n        let dataHeaders = [\n          {\n            // SNo: \"S.No\",\n            account_number: \"Account Number\",\n            bank_name: \"Bank Name\",\n            branch_location: \"Branch Name\",\n            ifsc_code: \"IFSC Code\",\n            Action: \"Action\",\n          },\n        ];\n        let data = [\"Action\"];\n        setLinkColumns(data);\n        setData(dataHeaders.concat(GetData));\n        // setLoader(true)\n        // setTimeout(() => {\n        //     setLoader(false)\n        // }, 100);\n      })\n      .catch((error) => {});\n  };\n  useEffect(() => {\n    getData();\n  }, []);\n\n  const LinkTemplate = (data) => {\n    let rou = linkColumns[0];\n    return (\n      <>\n        <div align=\"center\">\n          {\n            <AiFillEdit\n              color=\"orange\"\n              cursor=\"pointer\"\n              data-toggle=\"tooltip\"\n              title={\"Edit row\"}\n              type=\"edit\"\n              size=\"1.2em\"\n              onClick={() => {\n                setEditedData(data);\n                setEditId(data.id);\n                setButtonPopup(true);\n                setType(\"edit\");\n              }}\n              align=\"center\"\n            />\n          }{\" \"}\n          &nbsp;\n        </div>\n      </>\n    );\n  };\n  const dynamicColumns = Object.keys(headerData)?.map((col, i) => {\n    return (\n      <Column\n        sortable\n        key={col}\n        body={\n          // col == \"SNo\" ? SnoAlign :\n          (col == \"account_number\" && accountNumber) ||\n          (col == \"branch_location\" && branchname) ||\n          (col == \"bank_name\" && bankname) ||\n          (col == \"ifsc_code\" && ifscCode) ||\n          (col == \"Action\" && LinkTemplate)\n        }\n        field={col}\n        header={headerData[col]}\n      />\n    );\n  });\n  useEffect(() => {\n    data[0] && setHeaderData(JSON.parse(JSON.stringify(data[0])));\n  }, [data]);\n\n  return (\n    <div>\n      {addmsg ? (\n        <div className=\"statusMsg success\">\n          <span className=\"errMsg\">\n            <BiCheck size=\"1.4em\" strokeWidth={{ width: \"100px\" }} /> &nbsp;Bank\n            Details saved Successfully\n          </span>\n        </div>\n      ) : (\n        \"\"\n      )}\n      <div>\n        <div className=\"col-md-12\">\n          <div className=\"pageTitle\">\n            <div className=\"childOne\"></div>\n            <div className=\"childTwo\">\n              <h2>Bank Details</h2>\n            </div>\n            <div className=\"childThree\"></div>\n          </div>\n          {loader ? <Loader /> : \"\"}\n          <br />\n          <ErrorLogTable\n            data={data}\n            linkColumns={linkColumns}\n            linkColumnsRoutes={linkColumnsRoutes}\n            dynamicColumns={dynamicColumns}\n            headerData={headerData}\n            setHeaderData={setHeaderData}\n            rows={rows}\n          />\n          <div className=\"row\">\n            <div className=\"col-md-12 btn-container center \">\n              <button\n                onClick={() => {\n                  setButtonPopup(true);\n                  setType(\"add\");\n                }}\n                className=\"btn btn-primary mt-2 mb-2\"\n              >\n                <MdOutlinePlaylistAdd />\n                Add Bank Details\n              </button>\n            </div>\n          </div>\n          {buttonPopup ? (\n            <BankDetailsPopup\n              type={type}\n              getData={getData}\n              data={data}\n              editId={editId}\n              editedData={editedData}\n              setAddmsg={setAddmsg}\n              buttonPopup={buttonPopup}\n              setButtonPopup={setButtonPopup}\n            />\n          ) : (\n            \"\"\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\nexport default BankDetails;\n","import { Label } from \"@mui/icons-material\";\nimport axios from \"axios\";\nimport React from \"react\";\nimport { useRef, useEffect } from \"react\";\nimport { useState } from \"react\";\nimport { BiSave } from \"react-icons/bi\";\nimport { environment } from \"../../environments/environment\";\nimport GlobalCancel from \"../ValidationComponent/GlobalCancel\";\n\nfunction CommonComponents() {\n  const baseUrl = environment.baseUrl;\n  const ref = useRef([]);\n  const [data, setData] = useState([]);\n  const [saveData, setSaveData] = useState([]);\n  const [successfulmessage, setSuccessfulmessage] = useState(false);\n  const [backUpData, setBackUpData] = useState({});\n\n  const [details, setDetails] = useState(data);\n\n  const getData = () => {\n    axios.get(baseUrl + `/timeandexpensesms/getCommondata`).then((res) => {\n      const GetData = res.data;\n\n      for (let i = 0; i < GetData.length; i++) {\n        GetData[i][\"PanNumber\"] =\n          GetData[i][\"PanNumber\"] == \"null\" ? \"\" : GetData[i][\"PanNumber\"];\n\n        GetData[i][\"ServiceNumber\"] =\n          GetData[i][\"ServiceNumber\"] == \"null\"\n            ? \"\"\n            : GetData[i][\"ServiceNumber\"];\n\n        GetData[i][\"cstNumber\"] =\n          GetData[i][\"cstNumber\"] == \"null\" ? \"\" : GetData[i][\"cstNumber\"];\n\n        GetData[i][\"salesTax\"] =\n          GetData[i][\"salesTax\"] == \"null\" ? \"\" : GetData[i][\"salesTax\"];\n\n        GetData[i][\"serviceTax\"] =\n          GetData[i][\"serviceTax\"] == \"null\" ? \"\" : GetData[i][\"serviceTax\"];\n        GetData[i][\"vatTax\"] =\n          GetData[i][\"vatTax\"] == \"null\" ? \"\" : GetData[i][\"vatTax\"];\n      }\n\n      setData(GetData);\n    });\n  };\n\n  const getSaveData = () => {\n    axios({\n      method: \"put\",\n      url: baseUrl + `/timeandexpensesms/saveInvoiceCommonComponent`,\n      data: {\n        id: 3,\n        panNumber:\n          details.PanNumber == null ? data[0]?.PanNumber : details.PanNumber,\n        cstNumber:\n          details.cstNumber == null ? data[0]?.cstNumber : details.cstNumber,\n        serviceNumber:\n          details.ServiceNumber == null\n            ? data[0]?.ServiceNumber\n            : details.ServiceNumber,\n        serviceTax:\n          details.serviceTax == null ? data[0]?.serviceTax : details.serviceTax,\n        salesTax:\n          details.salesTax == null ? data[0]?.salesTax : details.salesTax,\n        vatTax: details.vatTax == null ? data[0]?.vatTax : details.vatTax,\n      },\n    }).then((res) => {\n      setSaveData(res.data);\n      setSuccessfulmessage(true);\n      setTimeout(() => {\n        setSuccessfulmessage(false);\n      }, 2000);\n      getData();\n    });\n  };\n\n  useEffect(() => {\n    getData();\n  }, [saveData, details]);\n\n  // const handleChange = (e) => {\n  //   setSuccessfulmessage(false);\n  //   const { id, value } = e.target;\n\n  //   setDetails((prev) => {\n  //     return { ...prev, [id]: value };\n  //   });\n  // };\n\n  const handleCancel = (e) => {\n    GlobalCancel(ref);\n    let ele = document.getElementsByClassName(\"cancel\");\n    for (let index = 0; index < ele.length; index++) {\n      ele[index].value =\n        Object.keys(backUpData).length > 0 ? backUpData[ele[index].id] : \"\";\n    }\n    // setDetails((prev) => ({ ...prev, [\"PanNumber\"]: \"\" }));\n    // setDetails((prev) => ({ ...prev, [\"cstNumber\"]: \"\" }));\n    // setDetails((prev) => ({ ...prev, [\"ServiceNumber\"]: \"\" }));\n    // setDetails((prev) => ({ ...prev, [\"serviceTax\"]: \"\" }));\n    // setDetails((prev) => ({ ...prev, [\"salesTax\"]: \"\" }));\n    // setDetails((prev) => ({ ...prev, [\"vatTax\"]: \"\" }));\n  };\n\n  useEffect(() => {\n    if (data.length > 0) {\n      setBackUpData(JSON.parse(JSON.stringify(data[0])));\n    }\n  }, [data]);\n\n  return (\n    <div>\n      <>\n        {successfulmessage ? (\n          <div className=\"statusMsg success\">\n            Common Component saved successfully.\n          </div>\n        ) : (\n          \"\"\n        )}\n      </>\n      <div className=\"col-md-12\">\n        <div className=\"pageTitle\">\n          <div className=\"childOne\"></div>\n          <div className=\"childTwo\">\n            <h2>Common Components</h2>\n          </div>\n          <div className=\"childThree\"></div>\n        </div>\n      </div>\n\n      <div className=\"group mb-5 customCard\">\n        <div className=\"group-content row\">\n          <div className=\"form-group col-md-4 mb-2\">\n            <label htmlFor=\"PAN\">PAN</label>\n            {/* <input type=\"text\" className=\"form-control\" id=\"PAN\" placeholder /> */}\n            {data.map((e) => {\n              return (\n                <input\n                  type=\"text\"\n                  className=\"text cancel\"\n                  id=\"PanNumber\"\n                  name=\"PanNumber\"\n                  onChange={(e) =>\n                    setDetails((prev) => ({\n                      ...prev,\n                      [\"PanNumber\"]: e.target.value,\n                    }))\n                  }\n                  defaultValue={e.PanNumber}\n                />\n              );\n            })}\n          </div>\n\n          <div className=\"form-group col-md-4 mb-2\">\n            <label htmlFor=\"CST Number\">CST Number</label>\n            {/* <input type=\"text\" className=\"form-control\" id=\"CST Number\" placeholder /></div> */}\n            {data.map((e) => {\n              return (\n                <input\n                  type=\"text\"\n                  className=\"text cancel\"\n                  id=\"cstNumber\"\n                  name=\"cstNumber\"\n                  // onChange={handleChange}\n                  onChange={(e) =>\n                    setDetails((prev) => ({\n                      ...prev,\n                      [\"cstNumber\"]: e.target.value,\n                    }))\n                  }\n                  defaultValue={e.cstNumber}\n                />\n              );\n            })}\n          </div>\n\n          <div className=\"form-group col-md-4 mb-2\">\n            <label htmlFor=\"Service Tax Number\">Service Tax Number</label>\n            {/* <input type=\"text\" className=\"form-control\" id=\"Service Tax Number\" placeholder /></div> */}\n            {data.map((e) => {\n              return (\n                <input\n                  type=\"text\"\n                  className=\"text cancel\"\n                  id=\"ServiceNumber\"\n                  name=\"ServiceNumber\"\n                  // onChange={handleChange}\n                  onChange={(e) =>\n                    setDetails((prev) => ({\n                      ...prev,\n                      [\"ServiceNumber\"]: e.target.value,\n                    }))\n                  }\n                  defaultValue={e.ServiceNumber}\n                />\n              );\n            })}\n          </div>\n\n          <div className=\"form-group col-md-4 mb-2\">\n            <label htmlFor=\"Service Tax %\">Service Tax %</label>\n            {/* <input type=\"text\" className=\"form-control\" id=\"Service Tax %\" placeholder /></div> */}\n            {data.map((e) => {\n              return (\n                <input\n                  type=\"text\"\n                  className=\"text cancel\"\n                  id=\"serviceTax\"\n                  name=\"serviceTax\"\n                  // onChange={handleChange}\n                  onChange={(e) =>\n                    setDetails((prev) => ({\n                      ...prev,\n                      [\"serviceTax\"]: e.target.value,\n                    }))\n                  }\n                  defaultValue={e.serviceTax}\n                />\n              );\n            })}\n          </div>\n\n          <div className=\"form-group col-md-4 mb-2\">\n            <label htmlFor=\"Sales Tax %\">Sales Tax %</label>\n            {/* <input type=\"text\" className=\"form-control\" id=\"Sales Tax %\" placeholder /></div> */}\n            {data.map((e) => {\n              return (\n                <input\n                  type=\"text\"\n                  className=\"text cancel\"\n                  id=\"salesTax\"\n                  name=\"salesTax\"\n                  // onChange={handleChange}\n                  onChange={(e) =>\n                    setDetails((prev) => ({\n                      ...prev,\n                      [\"salesTax\"]: e.target.value,\n                    }))\n                  }\n                  defaultValue={e.salesTax}\n                />\n              );\n            })}\n          </div>\n\n          <div className=\"form-group col-md-4 mb-2\">\n            <label htmlFor=\"VAT/CST %\">VAT/CST %</label>\n            {/* <input type=\"text\" className=\"form-control\" id=\"VAT/CST %\" placeholder /></div> */}\n            {data.map((e) => {\n              return (\n                <input\n                  type=\"text\"\n                  className=\"text cancel\"\n                  id=\"vatTax\"\n                  name=\"vatTax\"\n                  // onChange={handleChange}\n                  onChange={(e) =>\n                    setDetails((prev) => ({\n                      ...prev,\n                      [\"vatTax\"]: e.target.value,\n                    }))\n                  }\n                  defaultValue={e.vatTax}\n                />\n              );\n            })}\n          </div>\n        </div>\n      </div>\n\n      <div className=\" form-group col-md-12 col-sm-12 col-xs-12 btn-container center my-3 mb-2\">\n        <button className=\"btn btn-primary\" type=\"submit\" onClick={getSaveData}>\n          <BiSave /> Save\n        </button>\n        <button\n          className=\"btn btn-secondary\"\n          onClick={() => {\n            handleCancel();\n          }}\n        >\n          <span className=\"logo\">x</span> Cancel\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default CommonComponents;\n","import React from \"react\";\nimport { environment } from \"../../environments/environment\";\nimport {\n  AiFillDelete,\n  AiFillEdit,\n  AiFillWarning,\n  AiOutlineFileSearch,\n} from \"react-icons/ai\";\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport axios from \"axios\";\nimport CellRendererPrimeReactDataTable from \"../PrimeReactTableComponent/CellRendererPrimeReactDataTable\";\nimport { Column } from \"ag-grid-community\";\nimport { MdOutlinePlaylistAdd } from \"react-icons/md\";\nimport HeaderPopup from \"./HeaderPopup\";\nimport { BiCheck } from \"react-icons/bi\";\nimport Loader from \"../Loader/Loader\";\n\nfunction HeaderFooter() {\n  const baseUrl = environment.baseUrl;\n  const [data, setData] = useState([{}]);\n  const [buttonPopup, setButtonPopup] = useState(false);\n  const [headerData, setHeaderData] = useState([]);\n  const [linkColumns, setLinkColumns] = useState([]);\n  const [linkColumnsRoutes, setLinkColumnsRoutes] = useState([]);\n  const [type, setType] = useState(\"add\");\n  const [editedData, setEditedData] = useState([]);\n  const [editId, setEditId] = useState();\n  const [addmsg, setAddmsg] = useState(false);\n  const [loader, setLoader] = useState(false);\n  let rows = 10;\n  useEffect(() => {}, [editedData]);\n\n  const SnoAlign = (data) => {\n    return <div align=\"center\">{data.SNo}</div>;\n  };\n  const Title = (data) => {\n    return (\n      <div className=\"ellipsis\" data-toggle=\"tooltip\" title={data.title}>\n        {data.title}\n      </div>\n    );\n  };\n  const Header = (data) => {\n    return (\n      <div\n        className=\"ellipsis\"\n        data-toggle=\"tooltip\"\n        title={data.header_content}\n      >\n        {data.header_content}\n      </div>\n    );\n  };\n  const Footer = (data) => {\n    return (\n      <div\n        className=\"ellipsis\"\n        data-toggle=\"tooltip\"\n        title={data.footer_contentClear}\n      >\n        {data.footer_contentClear}\n      </div>\n    );\n  };\n\n  const getData = () => {\n    axios\n      .get(baseUrl + `/invoicems/invoice/getheaderfooter`)\n      // axios.get(``)\n      .then((res) => {\n        const GetData = res.data;\n        for (let i = 0; i < GetData.length; i++) {\n          GetData[i][\"SNo\"] = i + 1;\n          GetData[i][\"header_contentClear\"] = GetData[i][\n            \"header_content\"\n          ].replace(/<\\/?[^>]+(>|$)/g, \"\");\n          GetData[i][\"footer_contentClear\"] = GetData[i][\n            \"footer_content\"\n          ].replace(/<\\/?[^>]+(>|$)/g, \"\");\n        }\n\n        let dataHeaders = [\n          {\n            // SNo: \"S.No\",\n            title: \"Template Title\",\n            header_contentClear: \"Header Content\",\n            footer_contentClear: \"Footer Content\",\n            Action: \"Action\",\n          },\n        ];\n        let data = [\"Action\"];\n        setLinkColumns(data);\n        setData(dataHeaders.concat(GetData));\n        // setLoader(true);\n        // setTimeout(() => {\n        //   setLoader(false);\n        // }, 100);\n      })\n      .catch((error) => {});\n  };\n  useEffect(() => {\n    getData();\n  }, []);\n\n  const LinkTemplate = (data) => {\n    let rou = linkColumns[0];\n    return (\n      <>\n        <div align=\"center\">\n          {\n            <AiFillEdit\n              color=\"orange\"\n              cursor=\"pointer\"\n              type=\"edit\"\n              size=\"1.2em\"\n              data-toggle=\"tooltip\"\n              title={\"Edit row\"}\n              onClick={() => {\n                setEditedData(data);\n                setEditId(data.id);\n                setButtonPopup(true);\n                setType(\"edit\");\n              }}\n              align=\"center\"\n            />\n          }{\" \"}\n          &nbsp;\n        </div>\n      </>\n    );\n  };\n  const dynamicColumns = Object.keys(headerData)?.map((col, i) => {\n    return (\n      <Column\n        sortable\n        key={col}\n        body={\n          col == \"SNo\"\n            ? SnoAlign\n            : (col == \"title\" && Title) ||\n              (col == \"header_content\" && Header) ||\n              (col == \"footer_content\" && Footer) ||\n              (col == \"Action\" && LinkTemplate)\n        }\n        field={col}\n        header={headerData[col]}\n      />\n    );\n  });\n\n  useEffect(() => {\n    data[0] && setHeaderData(JSON.parse(JSON.stringify(data[0])));\n  }, [data]);\n\n  return (\n    <div>\n      {addmsg ? (\n        <div className=\"statusMsg success\">\n          <span className=\"errMsg\">\n            <BiCheck size=\"1.4em\" strokeWidth={{ width: \"100px\" }} />{\" \"}\n            &nbsp;Header & Footer saved successfully\n          </span>\n        </div>\n      ) : (\n        \"\"\n      )}\n      <div className=\"col-md-12\">\n        <div className=\"pageTitle\">\n          <div className=\"childOne\"></div>\n          <div className=\"childTwo\">\n            <h2>Header & Footer</h2>\n          </div>\n          <div className=\"childThree\"></div>\n        </div>\n        {loader ? <Loader /> : \"\"}\n        <br />\n        <CellRendererPrimeReactDataTable\n          data={data}\n          linkColumns={linkColumns}\n          linkColumnsRoutes={linkColumnsRoutes}\n          dynamicColumns={dynamicColumns}\n          headerData={headerData}\n          setHeaderData={setHeaderData}\n          rows={rows}\n        />\n        <div className=\"row\">\n          <div className=\"col-md-12 btn-container center \">\n            <button\n              onClick={() => {\n                setButtonPopup(true);\n                setType(\"add\");\n              }}\n              className=\"btn btn-primary mt-2 mb-2\"\n            >\n              <MdOutlinePlaylistAdd />\n              Add Header & Footer\n            </button>\n          </div>\n        </div>\n        {buttonPopup ? (\n          <HeaderPopup\n            type={type}\n            getData={getData}\n            data={data}\n            editId={editId}\n            editedData={editedData}\n            setAddmsg={setAddmsg}\n            buttonPopup={buttonPopup}\n            setButtonPopup={setButtonPopup}\n          />\n        ) : (\n          \"\"\n        )}\n      </div>\n    </div>\n  );\n}\nexport default HeaderFooter;\n","import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { BiSearch } from \"react-icons/bi\";\nimport { ReactSearchAutocomplete } from \"react-search-autocomplete\";\nimport { environment } from \"../../environments/environment\";\nimport { Link } from \"react-router-dom\";\nimport { IoWarningOutline } from \"react-icons/io5\";\n\nexport default function InvoiceOpen() {\n  const baseUrl = environment.baseUrl;\n  const [projectTableData, setProjectTableData] = useState([]);\n  const loggedUserId = localStorage.getItem(\"resId\");\n  const [formEditData, setFormEditData] = useState([{}]);\n  /////////////////////////////////////getAutosompleteData\n  const [empDetails, setEmpDetails] = useState([]);\n\n  const getInvoiceData = () => {\n    axios({\n      method: \"get\",\n      url: baseUrl + `/ProjectMS/stakeholders/getInvoiceData`,\n    })\n      .then((response) => {\n        var res = response.data;\n        res.push({ id: \"-1\", name: \"<<ALL>>\" });\n        setEmpDetails(res);\n      })\n      .then((error) => {\n        console.log(\"success\", error);\n      });\n  };\n  console.log(empDetails);\n  useEffect(() => {}, [empDetails]);\n  ///////////////////////----------get invoice data\n  const [invoicedata, setInvoicedata] = useState([]);\n  const getData = () => {\n    axios({\n      method: \"get\",\n      url:\n        baseUrl +\n        `/ProjectMS/stakeholders/getinvoicedata?user_id=${loggedUserId}`,\n    })\n      .then((response) => {\n        var res = response.data;\n        setInvoicedata(res);\n      })\n      .then((error) => {\n        console.log(\"success\", error);\n      });\n  };\n  console.log(invoicedata);\n  ////////////////////////------get Project data\n  const getProjectTableData = () => {\n    axios({\n      method: \"get\",\n      url:\n        baseUrl +\n        `/ProjectMS/stakeholders/getinvoicedata?user_id=${loggedUserId}`,\n    })\n      .then((response) => {\n        var res = response.data;\n        setProjectTableData(res);\n      })\n      .then((error) => {\n        console.log(\"success\", error);\n      });\n  };\n  console.log(projectTableData);\n  ///////////////////////////////////////////////////\n  const [validationmessage, setValidationMessage] = useState(false);\n  const handleProjectSelect = (invoiceId) => {\n    {\n      <Link\n        title=\"Search\"\n        to={`/invoice/create?invoiceId:${invoiceId}`}\n        target=\"_blank\"\n      ></Link>;\n    }\n    axios({\n      method: \"post\",\n      url: baseUrl + `/ProjectMS/stakeholders/updateUserSearchHistory`,\n      data: {\n        user_id: loggedUserId,\n        invoice_id: invoiceId,\n      },\n      headers: { \"Content-Type\": \"application/json\" },\n    }).then((success) => {\n      console.log(success);\n    });\n  };\n  //------------select Invoice Link\n  const handleInvoiceSelect = () => {\n    if (formEditData.id == null) {\n      setValidationMessage(true);\n    } else {\n      setValidationMessage(false);\n      {\n        <Link\n          title=\"Search\"\n          to={`/invoice/create?invoiceId:${formEditData.id}`}\n          target=\"_blank\"\n        ></Link>;\n      }\n      axios({\n        method: \"post\",\n        url: baseUrl + `/ProjectMS/stakeholders/updateUserSearchHisInvoiceOpen`,\n        data: {\n          user_id: loggedUserId,\n          invoice_id: formEditData.id,\n        },\n        headers: { \"Content-Type\": \"application/json\" },\n      }).then((success) => {\n        console.log(success);\n      });\n    }\n  };\n  useEffect(() => {\n    getProjectTableData();\n    getData();\n    getInvoiceData();\n  }, []);\n  const handleClear = () => {\n    setFormEditData((prevProps) => ({ ...prevProps, id: null }));\n  };\n  const headers1 = [\n    <div>\n      <h6\n        className=\"text-center m-0\"\n        style={{ color: \"#eeeeee\", fontSize: \"13px\" }}\n      >\n        Invoice\n      </h6>\n    </div>,\n  ];\n  const headers2 = [\n    <div>\n      <h6\n        className=\"text-center m-0\"\n        style={{ color: \"#eeeeee\", fontSize: \"13px\" }}\n      >\n        Project\n      </h6>\n    </div>,\n  ];\n  const onSearch = (string, items) => {\n    console.log(string);\n    console.log(items);\n    const newItems = [...items];\n    console.log(newItems);\n    const matches = items.filter((item) =>\n      item.name.toLowerCase().includes(string.toLowerCase())\n    );\n    console.log(matches);\n    if (matches.length === 0) {\n      console.log(\"inline===============\" + matches);\n      newItems.push({ id: -1, name: \"ALL\", invoiceId: -1 });\n      console.log(newItems);\n    }\n    return newItems;\n  };\n  return (\n    <>\n      <div className=\"col-md-12\">\n        <div className=\"pageTitle\">\n          <div className=\"childOne\">{/* <h2></h2> */}</div>\n          <div className=\"childTwo\">\n            <h2>Invoice Search History</h2>\n          </div>\n          <div className=\"childThree\"></div>\n        </div>\n      </div>\n      <div>\n        {/* <div className=\"col-14\" style={{ position: \"relative\" }}> */}\n        <div className=\"body body-bg col-xs-12 col-sm-12 col-md-12 col-lg-12 customCard\">\n          <div className=\"form-group cvu darkHeader\">\n            <div className=\"col-6 my-2 no-padding\">\n              <table\n                id=\"details\"\n                className=\"col-12 table table-bordered openTable\"\n              >\n                <thead>\n                  {/* <tr className=\"text-center\" style={{ fontSize: \"15px\" }}>\n                    <th colspan=\"2\">\n                      <div className=\"pageTitle\">\n                        <div className=\"childOne\">\n                          <h2></h2>\n                        </div>\n                        <div className=\"childTwo\">\n                          <h2>Recent Invoice Searches</h2>\n                        </div>\n                        <div className=\"childThree\"></div>\n                      </div>\n                    </th>\n                  </tr> */}\n                  <tr>\n                    <th\n                      colSpan={4}\n                      className=\"tableheading\"\n                      style={{ backgroundColor: \"#eeeeee\" }}\n                    >\n                      <h6\n                        className=\"text-center m-0\"\n                        style={{ color: \"#187fde\", fontSize: \"15px\" }}\n                      >\n                        {`Recent Invoice Searches`}\n                      </h6>\n                    </th>\n                  </tr>\n                  <tr className=\"text-center\" style={{ width: \"51%\" }}>\n                    {headers1.map((header) => (\n                      <th key={header}>{header}</th>\n                    ))}\n                    {headers2.map((header) => (\n                      <th style={{ width: \"51%\" }} key={header}>\n                        {header}\n                      </th>\n                    ))}\n                  </tr>\n                </thead>\n                <tbody>\n                  {invoicedata.map((item, index) => (\n                    <tr key={item.invoiceId}>\n                      {/* <td>{item.id}</td> */}\n                      <td>\n                        <Link\n                          data-toggle=\"tooltip\"\n                          title=\"Go to Invoice\"\n                          style={{ textDecoration: \"none\" }}\n                          onMouseOver={(e) => {\n                            e.target.style.textDecoration = \"underline\";\n                            e.target.style.color = \"none\";\n                            e.target.style.cursor = \"pointer\";\n                          }}\n                          onMouseOut={(e) => {\n                            e.target.style.textDecoration = \"none\";\n                            e.target.style.color = \"none\";\n                          }}\n                          target=\"_blank\"\n                          onClick={() => {\n                            handleProjectSelect(item.invoiceId);\n                          }}\n                          to={`/invoice/create/?invoiceId=${item.invoiceId}`}\n                        >\n                          {\" \"}\n                          {item.name}\n                        </Link>\n                      </td>\n                      {/* <td>{projectTableData[index].id}</td> */}\n                      <td>\n                        {\" \"}\n                        <Link\n                          data-toggle=\"tooltip\"\n                          style={{ textDecoration: \"none\" }}\n                          onMouseOver={(e) => {\n                            e.target.style.textDecoration = \"underline\";\n                            e.target.style.color = \"none\";\n                            e.target.style.cursor = \"pointer\";\n                          }}\n                          onMouseOut={(e) => {\n                            e.target.style.textDecoration = \"none\";\n                            e.target.style.color = \"none\";\n                          }}\n                          title=\"Go to Project Overview\"\n                          to={`/project/Overview/:${projectTableData[index]?.projectId}`}\n                          target=\"_blank\"\n                        >\n                          {projectTableData[index]?.project_name}\n                        </Link>\n                      </td>\n                    </tr>\n                  ))}\n                </tbody>\n              </table>\n            </div>\n            <div>\n              <div className=\"col-md-6\">\n                {validationmessage ? (\n                  <div\n                    className=\"statusMsg error \"\n                    style={{ display: \"block\" }}\n                  >\n                    <span>\n                      <IoWarningOutline />\n                      &nbsp;{`Please select any Invoice`}\n                    </span>\n                  </div>\n                ) : (\n                  \"\"\n                )}\n              </div>\n              {/* <div className=\"row \">\n                <div className=\"col-02\" style={{ marginLeft: \"10px\" }}>\n                  <h6 style={{ display: \"inline\" }}>\n                    Invoice <span style={{ color: \"red\" }}>*</span>\n                    &nbsp;&nbsp;&nbsp;&nbsp;:\n                  </h6>\n                </div>\n                <div\n                  className=\"col-02 autoComplete-container\"\n                  id=\"autoComplete\"\n                  // style={{ marginLeft: \"5px\" }}\n                >\n                  <ReactSearchAutocomplete\n                    items={empDetails}\n                    type=\"Text\"\n                    name=\"invoice\"\n                    id=\"invoice\"\n                    // invoicedata={invoicedata}\n                    className=\"AutoComplete\"\n                    onSelect={(e) => {\n                      setFormEditData(e);\n                    }}\n                    showIcon={false}\n                    onClear={handleClear}\n                    // onSearch={onSearch}\n                    placeholder=\"type minimum 4 character\"\n                  />{\" \"}\n                </div>\n                <div className=\"err col-2\">\n                  {formEditData.id == undefined ? (\n                    <button\n                      title=\"Search\"\n                      className=\"btn btn-primary\"\n                      onClick={() => {\n                        // handleProjectSelect();\n                        handleInvoiceSelect();\n                      }}\n                    >\n                      <BiSearch /> Search\n                    </button>\n                  ) : (\n                    <Link\n                      title=\"Search\"\n                      className=\"no-underline\"\n                      to={`/invoice/create?invoiceId:${formEditData.id}`}\n                      target=\"_blank\"\n                    >\n                      <button\n                        title=\"Search\"\n                        className=\"btn btn-primary \"\n                        onClick={() => {\n                          handleInvoiceSelect();\n                        }}\n                      >\n                        <BiSearch /> Search\n                      </button>\n                    </Link>\n                  )}\n                </div>\n              </div> */}\n              <div className=\"row\">\n                <div className=\"col-2\">\n                  <div\n                    style={{\n                      marginLeft: \"10px\",\n                      fontSize: \"13px\",\n                    }}\n                  >\n                    Invoice\n                    <span style={{ color: \"red\" }}>&nbsp;&nbsp;*</span>\n                    &nbsp;:\n                  </div>\n                </div>\n                <div\n                  className=\"col-4 autoComplete-container\"\n                  id=\"autoComplete\"\n                  style={{ marginLeft: \"-125px\" }}\n                >\n                  <ReactSearchAutocomplete\n                    items={empDetails}\n                    type=\"Text\"\n                    name=\"invoice\"\n                    id=\"invoice\"\n                    className=\"AutoComplete\"\n                    onSelect={(e) => {\n                      setFormEditData(e);\n                    }}\n                    showIcon={false}\n                    onClear={handleClear}\n                    placeholder=\"Type a minimum of 4 characters\"\n                  />\n                </div>\n                <div className=\"err col-2\">\n                  {formEditData.id === undefined ? (\n                    <button\n                      title=\"Search\"\n                      className=\"btn btn-primary\"\n                      onClick={() => {\n                        handleInvoiceSelect();\n                      }}\n                    >\n                      <BiSearch /> Search\n                    </button>\n                  ) : (\n                    <Link\n                      title=\"Search\"\n                      className=\"no-underline\"\n                      to={`/invoice/create?invoiceId:${formEditData.id}`}\n                      target=\"_blank\"\n                    >\n                      <button\n                        title=\"Search\"\n                        className=\"btn btn-primary \"\n                        onClick={() => {\n                          handleInvoiceSelect();\n                        }}\n                      >\n                        <BiSearch /> Search\n                      </button>\n                    </Link>\n                  )}\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n","import React, { useRef } from \"react\";\nimport { useState, useEffect } from \"react\";\nimport { environment } from \"../../environments/environment\";\nimport axios from \"axios\";\nimport { CModalHeader, CModalTitle } from \"@coreui/react\";\nimport { CModalBody } from \"@coreui/react\";\nimport { CButton } from \"@coreui/react\";\nimport { CModal } from \"@coreui/react\";\nimport Draggable from \"react-draggable\";\nimport ReactQuill from \"react-quill\";\nimport SaveIcon from \"@mui/icons-material/Save\";\nimport { MdOutlineCancel } from \"react-icons/md\";\nimport { VscChromeClose } from \"react-icons/vsc\";\nimport GlobalValidation from \"../ValidationComponent/GlobalValidation\";\nimport { AiFillWarning } from \"react-icons/ai\";\n\nfunction ServicesPopup(props) {\n  const {\n    buttonPopup,\n    setButtonPopup,\n    getData,\n    setAddmsg,\n    editedData,\n    editId,\n    type,\n    data,\n  } = props;\n  const [id, setid] = useState(0);\n  const [formEditData, setFormEditData] = useState(editedData);\n  const ref = useRef([]);\n  const [validationMessage, setValidationMessage] = useState(false);\n  const baseUrl = environment.baseUrl;\n  const [initialformEditData, initialsetFormEditData] = useState(editedData);\n  const [flag, setFlag] = useState(true);\n  const [uniquemessage, setUniqueMessage] = useState(false);\n\n  const handleEditClick = () => {\n    let someData = data.some(\n      (d) => d.service_name == formEditData.service_name\n    );\n    let valid = GlobalValidation(ref);\n    if (valid) {\n      setValidationMessage(true);\n      return;\n    }\n    if (\n      someData &&\n      flag == false &&\n      formEditData.service_name != initialformEditData.service_name\n    ) {\n      let ele = document.getElementsByClassName(\"unique\");\n      for (let index = 0; index < ele.length; index++) {\n        ele[index].classList.add(\"error-block\");\n      }\n      setUniqueMessage(true);\n      setTimeout(() => {\n        // setValidationMessage(false);\n      }, 3000);\n      return;\n    }\n    setUniqueMessage(false);\n\n    axios({\n      method: \"post\",\n      url: baseUrl + `/invoicems/invoice/postserviceDetails`,\n      data: {\n        id: editId,\n        serviceName: formEditData.service_name,\n        serviceDescription: formEditData.service_description,\n        calculator:\n          formEditData.calculator == null ? \" \" : formEditData.calculator,\n      },\n    }).then((error) => {\n      getData();\n      console.log(\"success\", error);\n      setid();\n      setButtonPopup(false);\n      setAddmsg(true);\n\n      setTimeout(() => {\n        setAddmsg(false);\n      }, 3000);\n    });\n  };\n\n  const handleSaveClick = () => {\n    let someData = data.some(\n      (d) => d.service_name == formEditData.service_name\n    );\n    console.log(someData);\n    let valid = GlobalValidation(ref);\n\n    if (valid) {\n      setValidationMessage(true);\n      return;\n    }\n\n    if (someData) {\n      let ele = document.getElementsByClassName(\"unique\");\n      console.log(ele.length);\n      for (let index = 0; index < ele.length; index++) {\n        ele[index].classList.add(\"error-block\");\n      }\n      setUniqueMessage(true);\n      setValidationMessage(false);\n\n      return;\n    }\n    setUniqueMessage(false);\n\n    axios({\n      method: \"post\",\n      url: baseUrl + `/invoicems/invoice/postserviceDetails`,\n      data: {\n        id: editId,\n        serviceName: formEditData.service_name,\n        serviceDescription: formEditData.service_description,\n        calculator:\n          formEditData.calculator == null ? \" \" : formEditData.calculator,\n      },\n    }).then((error) => {\n      getData();\n      console.log(\"success\", error);\n      setid();\n      setButtonPopup(false);\n      setAddmsg(true);\n\n      setTimeout(() => {\n        setAddmsg(false);\n      }, 3000);\n    });\n  };\n\n  return (\n    <div>\n      <CModal\n        size=\"xs\"\n        visible={buttonPopup}\n        onClose={() => {\n          setButtonPopup(false);\n        }}\n        backdrop={\"static\"}\n      >\n        <CModalHeader className=\"hgt22\">\n          <CModalTitle>\n            <div className=\"ft16\">Services</div>\n            {/* <div className=\"ft16\" >Bank Details </div> */}\n          </CModalTitle>\n        </CModalHeader>\n\n        <CModalBody>\n          <div className=\"col-md-12\">\n            {validationMessage ? (\n              <div className=\"statusMsg error\">\n                <span className=\"error-block\">\n                  <AiFillWarning /> &nbsp;Please select valid values for\n                  highlighted fields\n                </span>\n              </div>\n            ) : (\n              \"\"\n            )}\n            {uniquemessage ? (\n              <div className=\"statusMsg error\">\n                <span className=\"error-block\">\n                  <AiFillWarning /> &nbsp;Please select valid values for\n                  highlighted fields\n                </span>\n              </div>\n            ) : (\n              \"\"\n            )}\n            <div>\n              <label htmlFor=\"\">\n                Service Name&nbsp;<span className=\"error-text\">*</span>\n              </label>\n              <div\n                className=\"textfield unique\"\n                ref={(ele) => {\n                  ref.current[0] = ele;\n                }}\n              >\n                {type == \"add\" ? (\n                  <input\n                    className=\"unique\"\n                    type=\"text\"\n                    id=\"service_name\"\n                    name=\"service_name\"\n                    placeholder=\"Service Name\"\n                    onChange={(e) =>\n                      setFormEditData((prev) => ({\n                        ...prev,\n                        [\"service_name\"]: e.target.value,\n                      }))\n                    }\n                    // onKeyDown={(event) => {\n                    //   if (event.code == \"Space\") event.preventDefault();\n                    // }}\n                    // required\n                    onKeyDown={(event) => {\n                      if (event.code === \"Space\" && !formEditData.service_name)\n                        event.preventDefault();\n                    }}\n                    required\n                  ></input>\n                ) : (\n                  <input\n                    type=\"text\"\n                    className=\"unique\"\n                    id=\"service_name\"\n                    name=\"service_name\"\n                    defaultValue={editedData.service_name}\n                    placeholder=\"Service Name\"\n                    onChange={(e) => {\n                      setFormEditData((prev) => ({\n                        ...prev,\n                        [\"service_name\"]: e.target.value,\n                      }));\n                      setFlag(false);\n                    }}\n                    onKeyDown={(event) => {\n                      if (event.code === \"Space\" && !formEditData.service_name)\n                        event.preventDefault();\n                    }}\n                    required\n                  ></input>\n                )}\n              </div>\n            </div>\n          </div>\n\n          <div className=\"col-md-12\">\n            <div>\n              <label className=\"mt-1\" htmlFor=\"\">\n                Service Description&nbsp;<span className=\"error-text\">*</span>\n              </label>\n              <div\n                className=\"textfield\"\n                ref={(ele) => {\n                  ref.current[1] = ele;\n                }}\n              >\n                {type == \"add\" ? (\n                  <textarea\n                    type=\"text\"\n                    placeholder=\"Service Description\"\n                    maxLength={1000}\n                    rows=\"8\"\n                    cols={180}\n                    id=\"service_description\"\n                    name=\"service_description\"\n                    onChange={(e) =>\n                      setFormEditData((prev) => ({\n                        ...prev,\n                        [\"service_description\"]: e.target.value,\n                      }))\n                    }\n                    onKeyDown={(event) => {\n                      if (\n                        event.code === \"Space\" &&\n                        !formEditData.service_description\n                      )\n                        event.preventDefault();\n                    }}\n                    required\n                  ></textarea>\n                ) : (\n                  <textarea\n                    type=\"text\"\n                    placeholder=\"Service Description\"\n                    maxLength={1000}\n                    rows=\"8\"\n                    cols={180}\n                    id=\"service_description\"\n                    name=\"service_description\"\n                    defaultValue={editedData.service_description}\n                    onChange={(e) =>\n                      setFormEditData((prev) => ({\n                        ...prev,\n                        [\"service_description\"]: e.target.value,\n                      }))\n                    }\n                    onKeyDown={(event) => {\n                      if (\n                        event.code === \"Space\" &&\n                        !formEditData.service_description\n                      )\n                        event.preventDefault();\n                    }}\n                    required\n                  ></textarea>\n                )}\n              </div>\n            </div>\n          </div>\n\n          <div className=\"col-md-12\">\n            <div>\n              <label htmlFor=\"\">Calculator</label>\n              <div className=\"\">\n                {type == \"add\" ? (\n                  <input\n                    type=\"text\"\n                    placeholder=\"Calculator\"\n                    id=\"calculator\"\n                    maxLength={50}\n                    name=\"calculator\"\n                    onChange={(e) =>\n                      setFormEditData((prev) => ({\n                        ...prev,\n                        [\"calculator\"]: e.target.value,\n                      }))\n                    }\n                  ></input>\n                ) : (\n                  <input\n                    type=\"text\"\n                    placeholder=\"Calculator\"\n                    id=\"calculator\"\n                    name=\"calculator\"\n                    maxLength={50}\n                    defaultValue={editedData.calculator}\n                    onChange={(e) =>\n                      setFormEditData((prev) => ({\n                        ...prev,\n                        [\"calculator\"]: e.target.value,\n                      }))\n                    }\n                  ></input>\n                )}\n              </div>\n            </div>\n          </div>\n          <div className='className=\"col-md-12 col-sm-12 col-xs-12 btn-container center my-3'>\n            {type == \"add\" ? (\n              <button className=\"btn btn-primary\" onClick={handleSaveClick}>\n                <SaveIcon />\n                Save\n              </button>\n            ) : (\n              <button className=\"btn btn-primary\" onClick={handleEditClick}>\n                <SaveIcon />\n                Save\n              </button>\n            )}\n            <button\n              className=\"btn btn-primary\"\n              onClick={() => {\n                setButtonPopup(false);\n              }}\n            >\n              <VscChromeClose />\n              Cancel\n            </button>\n          </div>\n        </CModalBody>\n      </CModal>\n    </div>\n  );\n}\nexport default ServicesPopup;\n","import React from \"react\";\nimport { environment } from \"../../environments/environment\";\nimport {\n  AiFillDelete,\n  AiFillEdit,\n  AiFillWarning,\n  AiOutlineFileSearch,\n} from \"react-icons/ai\";\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport axios from \"axios\";\nimport CellRendererPrimeReactDataTable from \"../PrimeReactTableComponent/CellRendererPrimeReactDataTable\";\nimport { Column } from \"ag-grid-community\";\nimport { MdOutlinePlaylistAdd } from \"react-icons/md\";\nimport HeaderPopup from \"./HeaderPopup\";\nimport { BiCheck } from \"react-icons/bi\";\nimport Loader from \"../Loader/Loader\";\nimport ServicesPopup from \"./ServicesPopup\";\n\nfunction Services() {\n  const [data, setData] = useState([{}]);\n  const [buttonPopup, setButtonPopup] = useState(false);\n  const [headerData, setHeaderData] = useState([]);\n  const [linkColumns, setLinkColumns] = useState([]);\n  const [linkColumnsRoutes, setLinkColumnsRoutes] = useState([]);\n  const [type, setType] = useState(\"add\");\n  const [editedData, setEditedData] = useState([]);\n  const [editId, setEditId] = useState();\n  const [addmsg, setAddmsg] = useState(false);\n  const [loader, setLoader] = useState(false);\n  const baseUrl = environment.baseUrl;\n  let rows = 10;\n\n  const serviceName = (data) => {\n    return (\n      <div className=\"ellipsis\" data-toggle=\"tooltip\" title={data.service_name}>\n        {data.service_name}\n      </div>\n    );\n  };\n  const serviceDescription = (data) => {\n    return (\n      <div\n        className=\"ellipsis\"\n        data-toggle=\"tooltip\"\n        title={data.service_description}\n      >\n        {data.service_description}\n      </div>\n    );\n  };\n  const calculator = (data) => {\n    return (\n      <div className=\"ellipsis\" data-toggle=\"tooltip\" title={data.calculator}>\n        {data.calculator}\n      </div>\n    );\n  };\n\n  const getData = () => {\n    axios\n      .get(baseUrl + `/invoicems/invoice/getservices`)\n      .then((res) => {\n        const GetData = res.data;\n        for (let i = 0; i < GetData.length; i++) {\n          GetData[i][\"SNo\"] = i + 1;\n        }\n\n        let dataHeaders = [\n          {\n            // SNo: \"S.No\",\n            service_name: \"Service Name\",\n            service_description: \"Service Description\",\n            calculator: \"Calculator\",\n            Action: \"Action\",\n          },\n        ];\n        let data = [\"Action\"];\n        setLinkColumns(data);\n        setData(dataHeaders.concat(GetData));\n        // setLoader(true)\n        // setTimeout(() => {\n        //     setLoader(false)\n        // }, 100);\n      })\n      .catch((error) => {});\n  };\n  useEffect(() => {\n    getData();\n  }, []);\n\n  const LinkTemplate = (data) => {\n    let rou = linkColumns[0];\n    return (\n      <>\n        <div align=\"center\">\n          {\n            <AiFillEdit\n              color=\"orange\"\n              cursor=\"pointer\"\n              type=\"edit\"\n              data-toggle=\"tooltip\"\n              title={\"Edit row\"}\n              size=\"1.2em\"\n              onClick={() => {\n                setEditedData(data);\n                setEditId(data.id);\n                setButtonPopup(true);\n                setType(\"edit\");\n              }}\n              align=\"center\"\n            />\n          }{\" \"}\n          &nbsp;\n        </div>\n      </>\n    );\n  };\n  const dynamicColumns = Object.keys(headerData)?.map((col, i) => {\n    return (\n      <Column\n        style={{ width: \"100px\" }}\n        sortable\n        key={col}\n        body={\n          (col == \"service_name\" && serviceName) ||\n          (col == \"service_description\" && serviceDescription) ||\n          (col == \"calculator\" && calculator) ||\n          (col == \"Action\" && LinkTemplate)\n        }\n        field={col}\n        header={headerData[col]}\n      />\n    );\n  });\n  useEffect(() => {\n    data[0] && setHeaderData(JSON.parse(JSON.stringify(data[0])));\n  }, [data]);\n  return (\n    <div>\n      {addmsg ? (\n        <div className=\"statusMsg success\">\n          <span className=\"errMsg\">\n            <BiCheck size=\"1.4em\" strokeWidth={{ width: \"100px\" }} />{\" \"}\n            &nbsp;Invoice Service saved successfully\n          </span>\n        </div>\n      ) : (\n        \"\"\n      )}\n      <div>\n        <div className=\"col-md-12\">\n          <div className=\"pageTitle\">\n            <div className=\"childOne\"></div>\n            <div className=\"childTwo\">\n              <h2>Services</h2>\n            </div>\n            <div className=\"childThree\"></div>\n          </div>\n          {loader ? <Loader /> : \"\"}\n          <br />\n          <CellRendererPrimeReactDataTable\n            data={data}\n            linkColumns={linkColumns}\n            linkColumnsRoutes={linkColumnsRoutes}\n            dynamicColumns={dynamicColumns}\n            headerData={headerData}\n            setHeaderData={setHeaderData}\n            rows={rows}\n          />\n          <div className=\"row\">\n            <div className=\"col-md-12 btn-container center \">\n              <button\n                onClick={() => {\n                  setButtonPopup(true);\n                  setType(\"add\");\n                }}\n                className=\"btn btn-primary mt-2 mb-2\"\n              >\n                <MdOutlinePlaylistAdd />\n                Add Services\n              </button>\n            </div>\n          </div>\n          {buttonPopup ? (\n            <ServicesPopup\n              type={type}\n              getData={getData}\n              data={data}\n              editId={editId}\n              editedData={editedData}\n              setAddmsg={setAddmsg}\n              buttonPopup={buttonPopup}\n              setButtonPopup={setButtonPopup}\n            />\n          ) : (\n            \"\"\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\nexport default Services;\n","import axios from \"axios\";\nimport moment from \"moment\";\nimport React, { useEffect, useState, useRef } from \"react\";\nimport DatePicker from \"react-datepicker\";\nimport { BiSearch } from \"react-icons/bi\";\nimport Loader from \"../Loader/Loader\";\nimport { IoWarningOutline } from \"react-icons/io5\";\nimport GlobalValidation from \"../ValidationComponent/GlobalValidation\";\nimport { MultiSelect } from \"react-multi-select-component\";\nimport { environment } from \"../../environments/environment\";\n// import ProjectInvoiceDetailsTable from \"./ProjectInvoiceDetailsTable\";\nimport FlatPrimeReactTable from \"../PrimeReactTableComponent/FlatPrimeReactTable\";\nimport CellRendererPrimeReactDataTable from \"../PrimeReactTableComponent/CellRendererPrimeReactDataTable\";\nimport { Link } from \"react-router-dom\";\nimport { Column } from \"primereact/column\";\nimport {\n  FaCaretDown,\n  FaChevronCircleDown,\n  FaChevronCircleUp,\n  FaSearch,\n} from \"react-icons/fa\";\nimport { CCollapse } from \"@coreui/react\";\nimport GlobalHelp from \"../PrimeReactTableComponent/GlobalHelp\";\nfunction Projectinvoicedetails(props) {\n  const [loader, setLoader] = useState(false);\n  const baseUrl = environment.baseUrl;\n  const [visible, setVisible] = useState(false);\n  const [cheveronIcon, setCheveronIcon] = useState(FaChevronCircleUp);\n  const [validationMessage, setValidationMessage] = useState(false);\n  const [durationOptions, setDurationOptions] = useState([1]);\n  const [selectedDuration, setSelectedDuration] = useState(\"1\");\n  const [selectedMonth, setSelectedMonth] = useState(new Date());\n  const [invoiceStatusData, setInvoiceStatusData] = useState([]);\n  const [selectedInvoiceStatus, setSelectedInvoiceStatus] = useState([]);\n  const [customers, setCustomers] = useState([]);\n  const [selectedCustomers, setSelectedCustomers] = useState([]);\n  const [projectData, setProjectData] = useState([]);\n  const [selectedProjects, setSelectedProjects] = useState([]);\n  const [projectInvoiceDetails, setProjectInvoiceDetails] = useState([{}]);\n  const [isShow, setIsShow] = useState(false);\n  const [hideproject, setHideproject] = useState(true);\n  const today = new Date();\n  const first_day = new Date(today.getFullYear(), today.getMonth(), 1);\n  const initialValue = {\n    viewType: 1,\n    from: moment(first_day).format(\"yyyy-MM-DD\"),\n    duration: 1,\n    invStage: -1,\n    customers: -1,\n    projects: -1,\n    reportId: 29,\n  };\n  const [formData, setFormData] = useState(initialValue);\n  const ArrowRenderer = ({ expanded }) => (\n    <>\n      {expanded ? (\n        <FaCaretDown className=\"chevronIcon\" />\n      ) : (\n        <FaCaretDown className=\"chevronIcon\" />\n      )}\n    </>\n  );\n  const generateDropdownLabel = (selectedOptions, allOptions) => {\n    const selectedValues = selectedOptions.map((option) => option.value);\n    const allValues = allOptions.map((item) => item.value);\n\n    if (selectedValues.length === allValues.length) {\n      return \"<< ALL >>\";\n    } else {\n      return selectedOptions.map((option) => option.label).join(\", \");\n    }\n  };\n  const HelpPDFName = \"InvoiceDetailsHelp.pdf\";\n  const Headername = \"Invoice Details Help\";\n\n  const getAbsoluteMonths = (momentDate) => {\n    let mont = Number(moment(momentDate).format(\"MM\"));\n    let yea = Number(moment(momentDate).format(\"YYYY\"));\n    return mont + yea * 12;\n  };\n  const [duration, setDuration] = useState([]);\n  const calculateDuration = (e) => {\n    let startMonths = getAbsoluteMonths(e);\n    let endMonths = getAbsoluteMonths(moment());\n    let monthDifference = endMonths - startMonths;\n    monthDifference += 1;\n    let dr = [];\n    for (let i = 1; i <= monthDifference; i++) {\n      dr.push(i);\n    }\n    setDuration(dr);\n  };\n\n  const [customerInvoiceDetails, setCustomerInvoiceDetails] = useState([]);\n  //-------getting invoice status\n  const getInvoiceStatusData = () => {\n    axios\n      .get(baseUrl + `/CostMS/projectInvoice/projectInvoiceStatus`)\n      .then((resp) => {\n        let InvoiceSales = [];\n        let data = resp.data;\n        data.length > 0 &&\n          data.forEach((e) => {\n            let salesObj = {\n              label: e.label,\n              value: e.value,\n            };\n            InvoiceSales.push(salesObj);\n          });\n        setInvoiceStatusData(InvoiceSales);\n        setSelectedInvoiceStatus(InvoiceSales);\n      });\n  };\n  const getCustomersData = () => {\n    axios({\n      url: baseUrl + `/CostMS/projectInvoice/customers`,\n    }).then((resp) => {\n      setCustomers(resp.data);\n    });\n  };\n  const getCustomersByProjectsData = () => {\n    const selectCustomerId =\n      selectedCustomers[0]?.value == \"\"\n        ? 0\n        : selectedCustomers[0]?.value == undefined\n        ? 0\n        : selectedCustomers[0]?.value;\n    axios({\n      url:\n        baseUrl +\n        `/CostMS/projectInvoice/projectsByCustomers?customerId=${selectCustomerId}`,\n    }).then((resp) => {\n      let Storeproject = [];\n      let data = resp.data;\n      data.length > 0 &&\n        data.forEach((e) => {\n          let salesObj = {\n            label: e.label,\n            value: e.value,\n          };\n          Storeproject.push(salesObj);\n        });\n      setProjectData(Storeproject);\n      setSelectedProjects(Storeproject);\n      setOpen(false);\n    });\n  };\n  const getDayComponent = (dateStr) => {\n    const dateParts = dateStr.split(\"-\");\n    return parseInt(dateParts[0]);\n  };\n  const getMonthComponent = (dateStr) => {\n    const dateParts = dateStr.split(\"-\");\n    return dateParts[1];\n  };\n  const getProjectInvoiceDetails = () => {\n    const loaderTime = setTimeout(() => {\n      setLoader(true);\n    }, 2000);\n    setLoader(false);\n\n    // formData[\"projects\"] = selectedProjects.map((d) => d.value).toString();\n    if (selectedProjects.length === 0) {\n      formData[\"projects\"] = -1;\n    } else {\n      formData[\"projects\"] = selectedProjects.map((d) => d.value).toString();\n    }\n    axios({\n      method: \"POST\",\n      url: baseUrl + `/CostMS/projectInvoice/getProjectInvoiceDetails`,\n      data: formData,\n      headers: { \"Content-Type\": \"application/json\" },\n    })\n      .then((res) => {\n        const data = res.data;\n        data.sort((a, b) => {\n          const dayA = getDayComponent(a.invMonth);\n          const dayB = getDayComponent(b.invMonth);\n          if (dayA !== dayB) {\n            return dayA - dayB;\n          }\n          const monthA = getMonthComponent(a.invMonth);\n          const monthB = getMonthComponent(b.invMonth);\n          return monthA.localeCompare(monthB);\n        });\n        const Headerdata = [\n          {\n            invMonth: \"Inv.Date\",\n            invoiceName: \"Inv.Name\",\n            project: \"Project\",\n            customer: \"Customer \",\n            salesExec: \"Sakes Exec\",\n            total: \"Total($)\",\n            discount: \"Discount($)\",\n            netInv: \"Net Inv($)\",\n            invStatus: \"Status\",\n            plannedRev: \"PL.Rev($)\",\n            resDirectCost: \"Res.Cost($)\",\n            recRevenue: \"Rec.Rev($)\",\n            grossMargin: \"Gross Margin\",\n            grossMarginPerc: \"Gross Margin(%)\",\n          },\n        ];\n        let hData = [];\n        let bData = [];\n        for (let index = 0; index < data.length; index++) {\n          if (index == 0) {\n            hData.push(data[index]);\n          } else {\n            bData.push(data[index]);\n          }\n        }\n        setValidationMessage(false);\n\n        setProjectInvoiceDetails(Headerdata.concat(bData));\n        setOpen(false);\n        setLoader(false);\n        clearTimeout(loaderTime);\n        setIsShow(true);\n        setVisible(!visible);\n        visible\n          ? setCheveronIcon(FaChevronCircleUp)\n          : setCheveronIcon(FaChevronCircleDown);\n      })\n      .catch((error) => {});\n  };\n\n  const [headerData, setHeaderData] = useState([]);\n  useEffect(() => {\n    projectInvoiceDetails[0] &&\n      setHeaderData(JSON.parse(JSON.stringify(projectInvoiceDetails[0])));\n  }, [projectInvoiceDetails]);\n  useEffect(() => {\n    customerInvoiceDetails[0] &&\n      setHeaderData(JSON.parse(JSON.stringify(customerInvoiceDetails[0])));\n  }, [customerInvoiceDetails]);\n  const LinkTemplate = (data) => {\n    let rou = linkColumnsRoutes[0]?.split(\":\");\n    return (\n      <>\n        <Link\n          target=\"_blank\"\n          to={rou[0] + \":\" + data[rou[1]]}\n          data-toggle=\"tooltip\"\n        >\n          {data[linkColumns[0]]}\n        </Link>\n      </>\n    );\n  };\n  const changeReqDateTT = (data) => {\n    return (\n      <div data-toggle=\"tooltip\" title={data.invMonth}>\n        {data.invMonth}\n      </div>\n    );\n  };\n  const invName = (data) => {\n    return (\n      <div data-toggle=\"tooltip\" className=\"ellipsis\" title={data.invoiceName}>\n        {data.invoiceName}\n      </div>\n    );\n  };\n  const projecttool = (data) => {\n    return (\n      <div data-toggle=\"tooltip\" className=\"ellipsis\" title={data.project}>\n        {data.project}\n      </div>\n    );\n  };\n  const customertool = (data) => {\n    return (\n      <div data-toggle=\"tooltip\" className=\"ellipsis\" title={data.customer}>\n        {data.customer}\n      </div>\n    );\n  };\n  const salesExectool = (data) => {\n    return (\n      <div data-toggle=\"tooltip\" className=\"ellipsis\" title={data.salesExec}>\n        {data.salesExec}\n      </div>\n    );\n  };\n\n  const discounttool = (data) => {\n    return (\n      <div data-toggle=\"tooltip\" align=\"right\" title={data.discount}>\n        {data.discount}\n      </div>\n    );\n  };\n  const netInvtool = (data) => {\n    const formattedNumber = data.netInv\n      .toString()\n      .replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n    return (\n      <div data-toggle=\"tooltip\" align=\"right\" title={formattedNumber}>\n        {formattedNumber}\n      </div>\n    );\n  };\n\n  const invStatustool = (data) => {\n    return (\n      <div data-toggle=\"tooltip\" align=\"left\" title={data.invStatus}>\n        {data.invStatus}\n      </div>\n    );\n  };\n  // const plannedRevtool = (data) => {\n\n  //   const formattedNumber = data.plannedRev\n  //     .toString()\n  //     .replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n  //   return (\n  //     <div data-toggle=\"tooltip\" align=\"right\" title={formattedNumber}>\n  //       {formattedNumber}\n  //     </div>\n  //   );\n  // };\n  const plannedRevtool = (data) => {\n    const plannedRev = data.plannedRev;\n\n    if (plannedRev !== null && plannedRev !== undefined) {\n      const formattedNumber = plannedRev\n        .toString()\n        .replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n\n      return (\n        <div data-toggle=\"tooltip\" align=\"right\" title={formattedNumber}>\n          {formattedNumber}\n        </div>\n      );\n    } else {\n      // Handle the case where plannedRev is null or undefined\n      return (\n        <div data-toggle=\"tooltip\" align=\"right\" title=\"\">\n          N/A\n        </div>\n      );\n    }\n  };\n\n  const totaltool = (data) => {\n    const formattedNumber = data.total\n      .toString()\n      .replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n    return (\n      <div data-toggle=\"tooltip\" align=\"right\" title={formattedNumber}>\n        {formattedNumber}\n      </div>\n    );\n  };\n  const resDirectCosttool = (data) => {\n    const plannedRev = data.resDirectCost;\n    if (plannedRev !== null && plannedRev !== undefined) {\n      const formattedNumber = plannedRev\n        .toString()\n        .replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n\n      return (\n        <div data-toggle=\"tooltip\" align=\"right\" title={formattedNumber}>\n          {formattedNumber}\n        </div>\n      );\n    } else {\n      return (\n        <div data-toggle=\"tooltip\" align=\"right\" title=\"\">\n          N/A\n        </div>\n      );\n    }\n  };\n  const recRevenuetool = (data) => {\n    const formattedNumber = data?.recRevenue\n      .toString()\n      .replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n    return (\n      <div data-toggle=\"tooltip\" align=\"right\" title={formattedNumber}>\n        {formattedNumber}\n      </div>\n    );\n  };\n  const grossMargintool = (data) => {\n    const formattedNumber = data.grossMargin\n      .toString()\n      .replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n    return (\n      <div data-toggle=\"tooltip\" align=\"right\" title={formattedNumber}>\n        {formattedNumber}\n      </div>\n    );\n  };\n\n  const grossMarginPerctool = (data) => {\n    return (\n      <div data-toggle=\"tooltip\" align=\"right\" title={data.grossMarginPerc}>\n        {data.grossMarginPerc}\n      </div>\n    );\n  };\n  const dynamicColumns = Object.keys(headerData)?.map((col, i) => {\n    return (\n      <Column\n        sortable\n        key={col}\n        body={\n          col == \"\"\n            ? LinkTemplate\n            : col == \"invMonth\"\n            ? changeReqDateTT\n            : col == \"invoiceName\"\n            ? invName\n            : col == \"project\"\n            ? projecttool\n            : col == \"customer\"\n            ? customertool\n            : col == \"salesExec\"\n            ? salesExectool\n            : col == \"total\"\n            ? totaltool\n            : col == \"discount\"\n            ? discounttool\n            : col == \"netInv\"\n            ? netInvtool\n            : col == \"invStatus\"\n            ? invStatustool\n            : col == \"plannedRev\"\n            ? plannedRevtool\n            : col == \"resDirectCost\"\n            ? resDirectCosttool\n            : col == \"recRevenue\"\n            ? recRevenuetool\n            : col == \"grossMargin\"\n            ? grossMargintool\n            : col == \"grossMarginPerc\"\n            ? grossMarginPerctool\n            : \"\"\n        }\n        field={col}\n        header={headerData[col]}\n      />\n    );\n  });\n\n  //---------for getting customer table\n  const getCustomerInvoiceDetails = () => {\n    const loaderTime = setTimeout(() => {\n      setLoader(true);\n    }, 2000);\n    setLoader(false);\n    axios({\n      method: \"POST\",\n      url: baseUrl + `/CostMS/projectInvoice/getProjectInvoiceDetails`,\n      data: formData,\n      headers: { \"Content-Type\": \"application/json\" },\n    })\n      .then((res) => {\n        const data = res.data;\n        data.sort((a, b) => new Date(b.invMonth) - new Date(a.invMonth));\n        for (let i = 0; i < data.length; i++) {\n          data[i][\"recRevenue\"] =\n            data[i][\"recRevenue\"] == null ? 0 : data[i][\"recRevenue\"];\n          data[i][\"grossMarginPerc\"] =\n            data[i][\"grossMarginPerc\"] == null ? 0 : data[i][\"grossMarginPerc\"];\n        }\n        const Headerdata = [\n          {\n            invMonth: \"Inv.Mon\",\n            customer: \"Customer \",\n            salesExec: \"Sales Exec\",\n            total: \"Total($)\",\n            discount: \"Discount($)\",\n            netInv: \"Net Inv($)\",\n            plannedRev: \"PL.Rev($)\",\n            resDirectCost: \"Res.Cost($)\",\n            recRevenue: \"Res.Rev($)\",\n            grossMargin: \"Gross Margin\",\n            grossMarginPerc: \"Gross Margin(%)\",\n          },\n        ];\n\n        let hData = [];\n        let bData = [];\n        for (let index = 0; index < data.length; index++) {\n          if (index == 0) {\n            hData.push(data[index]);\n          } else {\n            bData.push(data[index]);\n          }\n        }\n        setValidationMessage(false);\n        setCustomerInvoiceDetails(Headerdata.concat(bData));\n        setOpen(false);\n        setLoader(false);\n        clearTimeout(loaderTime);\n        setOpencus(true);\n        setVisible(!visible);\n        visible\n          ? setCheveronIcon(FaChevronCircleUp)\n          : setCheveronIcon(FaChevronCircleDown);\n      })\n      .catch((error) => {});\n  };\n  useEffect(() => {\n    getCustomersByProjectsData();\n  }, [selectedCustomers]);\n  const [opencus, setOpencus] = useState(false);\n  const searchClickHandler = () => {\n    let valid = GlobalValidation(ref);\n    if (valid) {\n      {\n        setValidationMessage(true);\n        setTimeout(() => {\n          setValidationMessage(false);\n        }, 3000);\n      }\n      return;\n    }\n    !valid;\n    //  && setVisible(!visible);\n\n    if (hideproject == \"1\") {\n      getProjectInvoiceDetails();\n      // setIsShow(true);\n    } else {\n      getCustomerInvoiceDetails();\n      // setOpencus(true);\n    }\n  };\n  const [open, setOpen] = useState(false);\n  const onFilterChange = ({ id, value }) => {\n    setFormData((prevState) => {\n      return { ...prevState, [id]: value };\n    });\n    setHideproject(value);\n    setOpen(false);\n  };\n\n  useEffect(() => {\n    getInvoiceStatusData();\n    getCustomersData();\n  }, []);\n  const [linkColumns, setLinkColumns] = useState([]);\n  const [linkColumnsRoutes, setLinkColumnsRoutes] = useState([]);\n  let rows = 10;\n  const [exportData, setExportData] = useState([]);\n  useEffect(() => {\n    let imp = [\"XLS\"];\n    setExportData(imp);\n    let ctmFlts = {\n      id: \"filterTable\",\n      type: \"select\",\n      data: {\n        0: \"All\",\n        1: \"Active\",\n      },\n      align: \"right\",\n      filterTable: \"\",\n    };\n  }, []);\n  var maxDate = new Date();\n  var year = maxDate.getFullYear();\n  var month1 = maxDate.getMonth();\n  var maxDate = new Date(year, month1 + 11);\n  const abortController = useRef(null);\n  const handleAbort = () => {\n    abortController.current && abortController.current.abort();\n    setLoader(false);\n  };\n  const ref = useRef([]);\n  const handleMonthChange = (selectedMonth) => {\n    setSelectedMonth(selectedMonth);\n    setFormData((prevVal) => ({\n      ...prevVal,\n      [\"from\"]: moment(selectedMonth).format(\"yyyy-MM-DD\"),\n    }));\n    const currentMonth = new Date();\n    const monthsDiff =\n      (currentMonth.getFullYear() - selectedMonth.getFullYear()) * 12 +\n      (currentMonth.getMonth() - selectedMonth.getMonth());\n    const options = [];\n    for (let i = 1; i <= monthsDiff + 1; i++) {\n      options.push(i);\n    }\n    if (options.length > 12) {\n      options.length = 12;\n    }\n    setSelectedDuration(monthsDiff === 0 ? \"1\" : \"\");\n    setDurationOptions(options);\n  };\n\n  useEffect(() => {}, [selectedDuration]);\n  const currentYear = new Date().getFullYear();\n  const minDate1 = new Date(currentYear, 0, 1);\n  return (\n    <div>\n      {validationMessage ? (\n        <div className=\"statusMsg error\">\n          {\" \"}\n          <span>\n            {\" \"}\n            <IoWarningOutline /> Please select the valid values for highlighted\n            fields{\" \"}\n          </span>\n        </div>\n      ) : (\n        \"\"\n      )}\n      <div className=\"col-md-12\">\n        <div className=\"pageTitle\">\n          <div className=\"childOne\"></div>\n          <div className=\"childTwo\">\n            <h2>Invoice Details</h2>\n          </div>\n          <div className=\"childThree\"></div>\n        </div>\n      </div>\n      <div className=\"group mb-3 customCard\">\n        <div className=\"col-md-12 collapseHeader\">\n          <h2>Search Filters</h2>\n          <div className=\"helpBtn\">\n            <GlobalHelp pdfname={HelpPDFName} name={Headername} />\n          </div>\n          <div\n            onClick={() => {\n              setVisible(!visible);\n              visible\n                ? setCheveronIcon(FaChevronCircleUp)\n                : setCheveronIcon(FaChevronCircleDown);\n            }}\n          >\n            <span>{cheveronIcon}</span>\n          </div>\n        </div>\n        <CCollapse visible={!visible}>\n          <div className=\"group-content row\">\n            <div className=\" col-md-4\">\n              <div className=\"form-group row mb-2\">\n                <label className=\"col-5\" htmlFor=\"viewType\">\n                  View By &nbsp;<span style={{ color: \"red\" }}>*</span>\n                </label>\n                <span className=\"col-1\">:</span>\n                <div className=\"col-6\">\n                  <select\n                    id=\"viewType\"\n                    name=\"viewType\"\n                    onChange={(e) => {\n                      onFilterChange(e.target);\n                    }}\n                  >\n                    <option value=\"1\">Projects</option>\n                    <option value=\"2\">Customers</option>\n                  </select>\n                </div>\n              </div>\n            </div>\n            <div className=\" col-md-4\">\n              <div className=\"form-group row mb-2\">\n                <label className=\"col-5\" htmlFor=\"startMonth\">\n                  Start Month &nbsp;<span style={{ color: \"red\" }}>*</span>\n                </label>\n                <span className=\"col-1\">:</span>\n                <div className=\"col-6\">\n                  <DatePicker\n                    name=\"from\"\n                    id=\"from\"\n                    selected={selectedMonth}\n                    onChange={handleMonthChange}\n                    dateFormat=\"MMM yyyy\"\n                    maxDate={new Date()}\n                    showMonthYearPicker\n                    onKeyDown={(e) => {\n                      e.preventDefault();\n                    }}\n                  />\n                </div>\n              </div>\n            </div>\n            <div className=\" col-md-4\">\n              <div className=\"form-group row mb-2\">\n                <label className=\"col-5\" htmlFor=\"duration\">\n                  Duration &nbsp;\n                  <span className=\"error-text\" style={{ color: \"red\" }}>\n                    *\n                  </span>\n                </label>\n                <span className=\"col-1\">:</span>\n                <div className=\"col-6\">\n                  <div>\n                    <select\n                      ref={(ele) => {\n                        ref.current[0] = ele;\n                      }}\n                      className=\"error enteredDetails cancel text\"\n                      id=\"duration\"\n                      name=\"duration\"\n                      value={selectedDuration}\n                      onChange={(e) => {\n                        setSelectedDuration(e.target.value);\n                        setFormData((prevVal) => ({\n                          ...prevVal,\n                          [\"duration\"]: e.target.value,\n                        }));\n                      }}\n                    >\n                      <option value=\"\"> &lt;&lt;Please Select&gt;&gt;</option>\n                      {durationOptions.map((option) => (\n                        <option key={option} value={option}>\n                          {option}\n                        </option>\n                      ))}\n                    </select>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className=\" col-md-4\">\n              <div className=\"form-group row mb-2\">\n                <label className=\"col-5\" value=\"null\" htmlFor=\"invoiceStatus\">\n                  Invoice Status&nbsp;<span style={{ color: \"red\" }}>*</span>\n                </label>\n                <span className=\"col-1\">:</span>\n                <div className=\"col-6\">\n                  <div\n                    className=\"multiselect\"\n                    ref={(ele) => {\n                      ref.current[1] = ele;\n                    }}\n                  >\n                    <MultiSelect\n                      id=\"invStage\"\n                      options={invoiceStatusData}\n                      ArrowRenderer={ArrowRenderer}\n                      hasSelectAll={true}\n                      selected={selectedInvoiceStatus}\n                      disableSearch={false}\n                      value={selectedInvoiceStatus}\n                      disabled={false}\n                      valueRenderer={generateDropdownLabel}\n                      onChange={(e) => {\n                        setSelectedInvoiceStatus(e);\n                        let filteredinvStage = [];\n                        e.forEach((d) => {\n                          filteredinvStage.push(d.value);\n                        });\n                        setFormData((prevVal) => ({\n                          ...prevVal,\n                          [\"invStage\"]: filteredinvStage.toString(),\n                        }));\n                      }}\n                    />\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className=\" col-md-4\">\n              <div className=\"form-group row mb-2\">\n                <label className=\"col-5\" htmlFor=\"customer\">\n                  Customer\n                </label>\n                <span className=\"col-1\">:</span>\n                <div className=\"col-6\">\n                  <MultiSelect\n                    id=\"customers\"\n                    options={customers}\n                    ArrowRenderer={ArrowRenderer}\n                    valueRenderer={generateDropdownLabel}\n                    hasSelectAll={false}\n                    value={selectedCustomers}\n                    disableSearch={false}\n                    shouldToggleOnHover={false}\n                    selected={selectedCustomers}\n                    disabled={false}\n                    onChange={(e) => {\n                      setSelectedCustomers(e);\n                      let filteredCustomer = [];\n                      e.forEach((d) => {\n                        filteredCustomer.push(d.value);\n                      });\n                      setFormData((prevVal) => ({\n                        ...prevVal,\n                        [\"customers\"]:\n                          filteredCustomer == \"\"\n                            ? -1\n                            : filteredCustomer.toString(),\n                      }));\n                    }}\n                  />\n                  {/* </div> */}\n                </div>\n              </div>\n            </div>\n            {hideproject == \"1\" ? (\n              <div className=\" col-md-4\">\n                <div className=\"form-group row mb-2\">\n                  <label className=\"col-5\" htmlFor=\"project\">\n                    Project\n                  </label>\n                  <span className=\"col-1\">:</span>\n                  <div className=\"col-6\">\n                    <MultiSelect\n                      id=\"projects\"\n                      options={projectData}\n                      hasSelectAll={true}\n                      ArrowRenderer={ArrowRenderer}\n                      valueRenderer={(selected) => {\n                        if (selected.length === 0) {\n                          return \"Select\";\n                        } else {\n                          return `${selected.length} selected`;\n                        }\n                      }}\n                      selected={selectedProjects}\n                      shouldToggleOnHover={false}\n                      disableSearch={false}\n                      value={selectedProjects}\n                      disabled={false}\n                      onChange={(e) => {\n                        setSelectedProjects(e);\n                        let filteredCustomer = [];\n                        e.forEach((d) => {\n                          filteredCustomer.push(d.value);\n                        });\n                        setFormData((prevVal) => ({\n                          ...prevVal,\n                          [\"projects\"]: filteredCustomer.toString(),\n                        }));\n                      }}\n                    />\n                  </div>\n                </div>\n              </div>\n            ) : (\n              \"\"\n            )}\n          </div>\n          <div className=\"col-md-12 col-sm-12 col-xs-12 my-2 btn-container center\">\n            <button\n              className=\"btn btn-primary\"\n              // onClick={() => {\n              //   searchClickHandler();\n              // }}\n              onClick={() => {\n                searchClickHandler();\n                setIsShow(false);\n                setOpencus(false);\n              }}\n            >\n              <BiSearch />\n              Search\n            </button>\n          </div>\n        </CCollapse>\n\n        <div className=\"col-12\"></div>\n      </div>\n      <div>\n        {loader ? <Loader handleAbort={handleAbort} /> : \"\"}\n\n        {hideproject == \"1\" && isShow == true ? (\n          <CellRendererPrimeReactDataTable\n            data={projectInvoiceDetails}\n            linkColumns={linkColumns}\n            linkColumnsRoutes={linkColumnsRoutes}\n            dynamicColumns={dynamicColumns}\n            headerData={headerData}\n            setHeaderData={setHeaderData}\n            exportData={exportData}\n            rows={rows}\n            fileName=\"PPM Project Invoice Details\"\n          />\n        ) : (\n          \"\"\n        )}\n      </div>\n      <div>\n        {hideproject == \"2\" && opencus == true ? (\n          <CellRendererPrimeReactDataTable\n            data={customerInvoiceDetails}\n            linkColumns={linkColumns}\n            linkColumnsRoutes={linkColumnsRoutes}\n            dynamicColumns={dynamicColumns}\n            headerData={headerData}\n            setHeaderData={setHeaderData}\n            exportData={exportData}\n            rows={rows}\n            fileName=\"PPM Project Invoice Details\"\n          />\n        ) : (\n          \"\"\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default Projectinvoicedetails;\n","// import React, { useState } from \"react\";\n\n// import RProfile from \"../ResourceProfile/RProfile\";\n// import BankDetails from \"./BankDetails\";\n// import CommonComponents from \"./CommonComponents\";\n// import HeaderFooter from \"./HeaderFooter\";\n// import InvoiceOpen from \"./InvoiceOpen\";\n// import Services from \"./Services\";\n// import Projectinvoicedetails from \"./Projectinvoicedetails\";\n// import ProjectInvoiceDetailsFilters from \"../ProjectInvoiceDetailsComponent/ProjectInvoiceDetailsFilters\";\n// function Invoice() {\n//   let topMenus = [\"Header & Footer\", \"Bank Details\", \"Open\", \"Common Components\",\"Services\",\"Invoice Details\"];\n\n//   const [buttonState, setButtonState] = useState(topMenus);\n//   return (\n//     <div>\n//       <div className=\"tabs\">\n//       {topMenus.map((data, index) => {\n//         return (\n//           <button\n//             className={\n//               buttonState === data ? \"buttonDisplayClick\" : \"buttonDisplay\"\n//             }\n//             onClick={() => {\n//               setButtonState(data);\n//               // navigate(\"/home\");\n//             }}\n//             key={index}\n//           >\n//             {data}\n//           </button>\n//         );\n//       })}\n// </div>\n//       {buttonState === \"Header & Footer\" && <HeaderFooter />}\n//       {buttonState === \"Bank Details\" && <BankDetails />}\n//       {buttonState === \"Open\" && <InvoiceOpen/>}\n//       {buttonState === \"Invoice Details\" && <Projectinvoicedetails/>}\n//       {buttonState === \"Common Components\" && <CommonComponents/>}\n//       {buttonState === \"Services\" && <Services/>}\n   \n//     </div>\n//   );\n// }\n\n// export default Invoice;\n\n// ******************** This code is for when we are refresh at a particular page, it should be with in that page ***********************\nimport React, { useState, useEffect } from \"react\";\nimport RProfile from \"../ResourceProfile/RProfile\";\nimport BankDetails from \"./BankDetails\";\nimport CommonComponents from \"./CommonComponents\";\nimport HeaderFooter from \"./HeaderFooter\";\nimport InvoiceOpen from \"./InvoiceOpen\";\nimport Services from \"./Services\";\nimport Projectinvoicedetails from \"./Projectinvoicedetails\";\nimport ProjectInvoiceDetailsFilters from \"../ProjectInvoiceDetailsComponent/ProjectInvoiceDetailsFilters\";\n\nfunction Invoice() {\n  let topMenus = [\"Header & Footer\", \"Bank Details\", \"Open\", \"Common Components\", \"Services\", \"Invoice Details\"];\n\n  const [buttonState, setButtonState] = useState(topMenus[0]);\n  // const [buttonState, setButtonState] = useState(() => {\n  //   // Retrieve the last selected button state from localStorage on component mount\n  //   return localStorage.getItem(\"invoiceButtonState\") || topMenus[0];\n  // });\n\n  // useEffect(() => {\n  //   // Save the selected button state to localStorage whenever it changes\n  //   localStorage.setItem(\"invoiceButtonState\", buttonState);\n  // }, [buttonState]);\n\n  return (\n    <div>\n      <div className=\"tabs\">\n        {topMenus.map((data, index) => {\n          return (\n            <button\n              className={\n                buttonState === data ? \"buttonDisplayClick\" : \"buttonDisplay\"\n              }\n              onClick={() => {\n                setButtonState(data);\n              }}\n              key={index}\n            >\n              {data}\n            </button>\n          );\n        })}\n      </div>\n      {buttonState === \"Header & Footer\" && <HeaderFooter />}\n      {buttonState === \"Bank Details\" && <BankDetails />}\n      {buttonState === \"Open\" && <InvoiceOpen />}\n      {buttonState === \"Invoice Details\" && <Projectinvoicedetails />}\n      {buttonState === \"Common Components\" && <CommonComponents />}\n      {buttonState === \"Services\" && <Services />}\n    </div>\n  );\n}\n\nexport default Invoice;\n\n","import axios from \"axios\";\nimport moment from \"moment\";\nimport React, { useEffect, useState } from \"react\";\nimport DatePicker from \"react-datepicker\";\nimport { MultiSelect } from \"react-multi-select-component\";\nimport { environment } from \"../../environments/environment\";\nimport ProjectInvoiceDetailsTable from \"./ProjectInvoiceDetailsTable\";\n\nfunction ProjectInvoiceDetailsFilters(props) {\n  const { setData } = props;\n\n  const dates = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\n\n  const baseUrl = environment.baseUrl;\n\n  const [invoiceStatusData, setInvoiceStatusData] = useState([]);\n  const [customers, setCustomers] = useState([]);\n  const [selectedCustomers, setSelectedCustomers] = useState([]);\n  const [projectData, setProjectData] = useState([]);\n  const [selectedProjects, setSelectedProjects] = useState([]);\n  const [projectInvoiceDetails, setProjectInvoiceDetails] = useState([]);\n\n  const initialValue = {\n    viewType: 1,\n    from: \"2022-04-01\",\n    duration: 1,\n    invStage: -1,\n    customers: -1,\n    projects: -1,\n    reportId: 29,\n  };\n  const [formData, setFormData] = useState(initialValue);\n\n  useEffect(() => {\n    getInvoiceStatusData();\n    getCustomersData();\n    getProjectInvoiceDetails();\n  }, []);\n\n  useEffect(() => {\n    setData(projectInvoiceDetails);\n  }, [projectInvoiceDetails]);\n\n  const getInvoiceStatusData = () => {\n    axios({\n      url: baseUrl + `/CostMS/projectInvoice/projectInvoiceStatus`,\n    }).then((resp) => {\n      setInvoiceStatusData(resp.data);\n    });\n  };\n\n  const getCustomersData = () => {\n    axios({\n      url: baseUrl + `/CostMS/projectInvoice/customers`,\n    }).then((resp) => {\n      setCustomers(resp.data);\n    });\n  };\n\n  const getCustomersByProjectsData = () => {\n    console.log(selectedCustomers);\n    axios({\n      url:\n        baseUrl +\n        `/CostMS/projectInvoice/projectsByCustomers?customerId=${selectedCustomers[0]?.value}`,\n    }).then((resp) => {\n      setProjectData(resp.data);\n    });\n  };\n\n  const getProjectInvoiceDetails = () => {\n    axios({\n      method: \"POST\",\n      url: baseUrl + `/CostMS/projectInvoice/getProjectInvoiceDetails`,\n      data: formData,\n    }).then((resp) => {\n      setProjectInvoiceDetails(resp.data);\n    });\n  };\n\n  useEffect(() => {\n    getCustomersByProjectsData();\n  }, [selectedCustomers]);\n\n  const searchClickHandler = () => {\n    console.log(formData);\n    getProjectInvoiceDetails();\n  };\n\n  return (\n    <div>\n      <div className=\"group  customCard\">\n        <h2>Search Filters</h2>\n        <div className=\"group-content row\">\n          <div className=\" col-md-4\">\n            <div className=\"form-group row mb-2\">\n              <label className=\"col-5\" htmlFor=\"viewBy\">\n                View By *\n              </label>\n              <span className=\"col-1\">:</span>\n              <div className=\"col-6\">\n                <select id=\"viewType\">\n                  <option value={1}>{\"Projects\"}</option>\n                  <option value={2}>{\"Customers\"}</option>\n                </select>\n              </div>\n            </div>\n          </div>\n          <div className=\" col-md-4\">\n            <div className=\"form-group row mb-2\">\n              <label className=\"col-5\" htmlFor=\"startMonth\">\n                Start Month *\n              </label>\n              <span className=\"col-1\">:</span>\n              <div className=\"col-6\">\n                <DatePicker\n                  id=\"from\"\n                  selected={new Date()}\n                  onChange={(e) => {\n                    console.log(e);\n                    //   handleChangeDate(e);\n                  }}\n                  maxDate={new Date()}\n                  dateFormat=\"MMM-yyyy\"\n                  showMonthYearPicker\n                />\n              </div>\n            </div>\n          </div>\n          <div className=\" col-md-4\">\n            <div className=\"form-group row mb-2\">\n              <label className=\"col-5\" htmlFor=\"duration\">\n                Duration\n              </label>\n              <span className=\"col-1\">:</span>\n              <div className=\"col-6\">\n                <select\n                  id=\"duration\"\n                  onChange={(e) => {\n                    console.log(e.target.value);\n                  }}\n                >\n                  {dates.map((d, index) => (\n                    <option key={index} value={d}>\n                      {d}\n                    </option>\n                  ))}\n                </select>\n              </div>\n            </div>\n          </div>\n          <div className=\" col-md-4\">\n            <div className=\"form-group row mb-2\">\n              <label className=\"col-5\" htmlFor=\"invoiceStatus\">\n                Invoice Status *\n              </label>\n              <span className=\"col-1\">:</span>\n              <div className=\"col-6\">\n                <MultiSelect\n                  id=\"invStage\"\n                  options={invoiceStatusData}\n                  hasSelectAll={true}\n                  isLoading={false}\n                  shouldToggleOnHover={false}\n                  disableSearch={false}\n                  value={[]}\n                  disabled={false}\n                  onChange={(s) => {\n                    // setSelectedDepartments(s);\n                    // let filteredDeptData = [];\n                    // s?.forEach((element) => {\n                    //     filteredDeptData.push(element.value);\n                    // });\n                    // filtersData.businessUnit = filteredDeptData.toString();\n                  }}\n                />\n              </div>\n            </div>\n          </div>\n          <div className=\" col-md-4\">\n            <div className=\"form-group row mb-2\">\n              <label className=\"col-5\" htmlFor=\"customer\">\n                Customer *\n              </label>\n              <span className=\"col-1\">:</span>\n              <div className=\"col-6\">\n                <MultiSelect\n                  id=\"customers\"\n                  options={customers}\n                  hasSelectAll={true}\n                  isLoading={false}\n                  shouldToggleOnHover={false}\n                  disableSearch={false}\n                  value={selectedCustomers}\n                  disabled={false}\n                  onChange={(s) => {\n                    setSelectedCustomers(s);\n                    // setSelectedDepartments(s);\n                    // let filteredDeptData = [];\n                    // s?.forEach((element) => {\n                    //     filteredDeptData.push(element.value);\n                    // });\n                    // filtersData.businessUnit = filteredDeptData.toString();\n                  }}\n                />\n              </div>\n            </div>\n          </div>\n          <div className=\" col-md-4\">\n            <div className=\"form-group row mb-2\">\n              <label className=\"col-5\" htmlFor=\"project\">\n                Project *\n              </label>\n              <span className=\"col-1\">:</span>\n              <div className=\"col-6\">\n                <MultiSelect\n                  id=\"projects\"\n                  options={projectData}\n                  hasSelectAll={true}\n                  isLoading={false}\n                  shouldToggleOnHover={false}\n                  disableSearch={false}\n                  value={[]}\n                  disabled={false}\n                  onChange={(s) => {\n                    setSelectedProjects(s);\n                    // let filteredDeptData = [];\n                    // s?.forEach((element) => {\n                    //     filteredDeptData.push(element.value);\n                    // });\n                    // filtersData.businessUnit = filteredDeptData.toString();\n                  }}\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"col-12\" align=\"center\">\n          <button className=\"btn btn-primary\" onClick={searchClickHandler}>\n            Search\n          </button>\n        </div>\n        <div className=\"col-12\">\n          {/* <ProjectInvoiceDetailsTable\n            projectInvoiceDetails={projectInvoiceDetails}\n          /> */}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default ProjectInvoiceDetailsFilters;\n"],"names":["Block","Quill","tagname","props","baseUrl","environment","buttonPopup","setButtonPopup","getData","setAddmsg","editedData","editId","type","useState","setValue","setid","formEditData","setFormEditData","ref","useRef","validationMessage","setValidationMessage","editorToolBar","toolbar","header","font","color","bold","tooltip","list","script","indent","align","clipboard","matchVisual","size","visible","onClose","backdrop","className","style","maxWidth","marginLeft","htmlFor","ele","current","id","name","onChange","e","prev","target","value","defaultValue","title","theme","modules","undefined","header_content","footer_content","onClick","adddata","document","getElementsByClassName","i","length","classList","add","remove","footer","Object","values","includes","valid","GlobalValidation","console","log","axios","method","url","data","headerContent","footerContent","then","error","setTimeout","Save","initialformEditData","flag","setFlag","handleKeyDown","event","test","key","preventDefault","uniquemessage","setUniqueMessage","uniqueValidate","onKeyDown","autoFocus","account_number","account_type","bank_name","branch_location","ifsc_code","bank_address","someData","some","d","index","accountNumber","bankName","branchLocation","bankAddress","accountType","ifscCode","setData","headerData","setHeaderData","linkColumns","setLinkColumns","linkColumnsRoutes","setType","setEditedData","setEditId","addmsg","loader","bankname","width","branchname","res","GetData","Action","concat","catch","useEffect","LinkTemplate","cursor","dynamicColumns","keys","map","col","sortable","body","field","JSON","parse","stringify","strokeWidth","Loader","rows","saveData","setSaveData","successfulmessage","setSuccessfulmessage","backUpData","setBackUpData","details","setDetails","PanNumber","cstNumber","ServiceNumber","serviceTax","salesTax","vatTax","panNumber","serviceNumber","GlobalCancel","handleCancel","SnoAlign","SNo","Title","Header","Footer","footer_contentClear","replace","header_contentClear","CellRendererPrimeReactDataTable","InvoiceOpen","projectTableData","setProjectTableData","loggedUserId","localStorage","getItem","empDetails","setEmpDetails","invoicedata","setInvoicedata","validationmessage","handleInvoiceSelect","user_id","invoice_id","headers","success","response","push","headers1","fontSize","headers2","colSpan","backgroundColor","item","textDecoration","onMouseOver","onMouseOut","invoiceId","to","projectId","project_name","display","ReactSearchAutocomplete","items","onSelect","showIcon","onClear","prevProps","placeholder","code","service_name","required","maxLength","cols","service_description","calculator","serviceName","serviceDescription","setLoader","setVisible","FaChevronCircleUp","cheveronIcon","setCheveronIcon","durationOptions","setDurationOptions","selectedDuration","setSelectedDuration","Date","selectedMonth","setSelectedMonth","invoiceStatusData","setInvoiceStatusData","selectedInvoiceStatus","setSelectedInvoiceStatus","customers","setCustomers","selectedCustomers","setSelectedCustomers","projectData","setProjectData","selectedProjects","setSelectedProjects","projectInvoiceDetails","setProjectInvoiceDetails","isShow","setIsShow","hideproject","setHideproject","today","first_day","getFullYear","getMonth","initialValue","viewType","from","moment","format","duration","invStage","projects","reportId","formData","setFormData","ArrowRenderer","expanded","generateDropdownLabel","selectedOptions","allOptions","selectedValues","option","allValues","label","join","customerInvoiceDetails","setCustomerInvoiceDetails","getDayComponent","dateStr","dateParts","split","parseInt","getMonthComponent","rou","changeReqDateTT","invMonth","invName","invoiceName","projecttool","project","customertool","customer","salesExectool","salesExec","discounttool","discount","netInvtool","formattedNumber","netInv","toString","invStatustool","invStatus","plannedRevtool","plannedRev","totaltool","total","resDirectCosttool","resDirectCost","recRevenuetool","recRevenue","grossMargintool","grossMargin","grossMarginPerctool","grossMarginPerc","selectCustomerId","resp","Storeproject","forEach","salesObj","setOpen","getCustomersByProjectsData","opencus","setOpencus","searchClickHandler","loaderTime","sort","a","b","dayA","dayB","monthA","monthB","localeCompare","hData","bData","clearTimeout","FaChevronCircleDown","getProjectInvoiceDetails","getCustomerInvoiceDetails","InvoiceSales","exportData","setExportData","year","maxDate","month1","abortController","currentYear","GlobalHelp","pdfname","prevState","onFilterChange","selected","prevVal","currentMonth","monthsDiff","options","dateFormat","showMonthYearPicker","hasSelectAll","disableSearch","disabled","valueRenderer","filteredinvStage","shouldToggleOnHover","filteredCustomer","handleAbort","abort","fileName","topMenus","buttonState","setButtonState","getInvoiceStatusData","getCustomersData","isLoading","s"],"sourceRoot":""}