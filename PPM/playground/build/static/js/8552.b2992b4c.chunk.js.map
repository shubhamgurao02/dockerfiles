{"version":3,"file":"static/js/8552.b2992b4c.chunk.js","mappings":"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","sources":["views/DeliveryComponent/SalesExecutivePopUp.js","views/DeliveryComponent/DeliveryCreate.js","views/DeliveryComponent/PONumberPopup.js"],"sourcesContent":["import React from \"react\";\nimport { CModal, CModalBody, CModalHeader, CModalTitle } from \"@coreui/react\";\nimport Draggable from \"react-draggable\";\n\nexport default function SalesExecutivePopUp(props) {\n  const { visibleSEPU, setVisibleSEPU, setIsReplace, setIsAdd, setDetails } =\n    props;\n  return (\n    <div>\n      <Draggable>\n        <CModal\n          alignment=\"center\"\n          backdrop=\"static\"\n          visible={visibleSEPU}\n          onClose={() => {\n            setVisibleSEPU(false);\n          }}\n          size=\"sm\"\n          className=\"ui-dialog\"\n        >\n          <CModalHeader className=\"\">\n            <CModalTitle>\n              <span className=\"\">Manager</span>\n            </CModalTitle>\n          </CModalHeader>\n          <CModalBody>\n            <p>\n              Do you want to replace the existing sales executive or add as new?\n            </p>\n            <div\n              className=\"btn-container center my-3\"\n              style={{ borderTop: \"1px solid grey\" }}\n            >\n              <button\n                type=\"Replace\"\n                className=\"btn btn-primary mt-2\"\n                onClick={() => {\n                  setIsReplace(true);\n                  setVisibleSEPU(false);\n                  setDetails((prev) => ({\n                    ...prev,\n                    isReplaceAdd: \"Replace\",\n                  }));\n                }}\n              >\n                Replace\n              </button>\n              &nbsp; &nbsp;\n              <button\n                type=\"Add\"\n                className=\"btn btn-primary mt-2\"\n                onClick={() => {\n                  setIsAdd(true);\n                  setVisibleSEPU(false);\n                  setDetails((prev) => ({\n                    ...prev,\n                    isReplaceAdd: \"Add\",\n                  }));\n                }}\n              >\n                Add\n              </button>\n            </div>\n          </CModalBody>\n        </CModal>\n      </Draggable>\n    </div>\n  );\n}\n","import axios from \"axios\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { BiCheck, BiSave } from \"react-icons/bi\";\nimport { RiProfileLine } from \"react-icons/ri\";\nimport { environment } from \"../../environments/environment\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport moment from \"moment\";\nimport { ReactSearchAutocomplete } from \"react-search-autocomplete\";\nimport { MdAddCircleOutline } from \"react-icons/md\";\nimport { ImCross } from \"react-icons/im\";\nimport PONumberPopup from \"./PONumberPopup\";\nimport GlobalValidation from \"../ValidationComponent/GlobalValidation\";\nimport GlobalCancel from \"../ValidationComponent/GlobalCancel\";\nimport { AiFillWarning } from \"react-icons/ai\";\nimport { useNavigate } from \"react-router-dom\";\nimport GlobalHelp from \"../PrimeReactTableComponent/GlobalHelp\";\nimport ScreenBreadcrumbs from \"../Common/ScreenBreadcrumbs\";\nimport { FaSave } from \"react-icons/fa\";\nimport SalesExecutivePopUp from \"./SalesExecutivePopUp\";\n\nfunction DeliveryCreate(props) {\n  const {\n    flag,\n    customerName,\n    customerId,\n    data,\n    engagementId,\n    data1,\n    btnState,\n  } = props;\n  const loggedUserId = localStorage.getItem(\"resId\");\n  const HelpPDFName = \"CreateEngagement.pdf\";\n  const HelpHeader = \"Engagement Create Help\";\n  const baseUrl = environment.baseUrl;\n  const [customer, setCustomer] = useState([]);\n  const [division, setDivision] = useState([]);\n  const [divisionSpare, setDivisionSpare] = useState([]);\n  const [divisionspar, setDivisionspar] = useState([]);\n  const [engagementType, setEngagementType] = useState([]);\n  const [industry, setIndustry] = useState([]);\n  const [contract, setContract] = useState([]);\n  const [costContract, setCostContract] = useState([]);\n  const [paymentTerm, setPaymentTerm] = useState([]);\n  const [invoiceCycle, setInvoiceCycle] = useState([]);\n  const [invoiceCulture, setInvoiceCulture] = useState([]);\n  const [invoiceTemplate, setInvoiceTemplate] = useState([]);\n  const [invoiceTime, setInvoiceTime] = useState([]);\n  const [engCompany, setEngCompany] = useState([]);\n  const [currency, setCurrency] = useState([]);\n  const [addList, setAddList] = useState([]);\n  const [resource, setResource] = useState([]);\n  const [postDetails, setPostDetails] = useState([]);\n  const [validationmessage, setValidationMessage] = useState(false);\n  const [successfulmessage, setSuccessfulmessage] = useState(false);\n  const [EndDt, setEndDt] = useState();\n\n  const [StartDt, setStartDt] = useState();\n  const [engDetails, setEngDetails] = useState([]);\n  const [divisioneng, setDivisioneng] = useState([]);\n  const [engdata, setEngData] = useState([[]]);\n  const [cName, setCName] = useState(\"\");\n  const [sName, setSName] = useState(\"\");\n  const [aName, setAName] = useState(\"\");\n  const [coName, setCoName] = useState(\"\");\n  const [zName, setZName] = useState(\"\");\n  const [detailsCusId, setDetailsCusId] = useState([]);\n  const [filename, setFileName] = useState([]);\n  const [uniqueMessage, setUniqueMessage] = useState(false);\n\n  const intialOnChangeState = {\n    poNumber: \"\",\n  };\n\n  const ref = useRef([]);\n\n  const [onChangeState, setOnChangeState] = useState(intialOnChangeState);\n  const [finalState, setFinalState] = useState({});\n  const [backUpData, setBackUpData] = useState({});\n\n  const handleAdd = () => {\n    let data = finalState;\n    data[Object.keys(data).length] = onChangeState[\"poNumber\"];\n    setFinalState(data);\n    setAddList([...addList, { poNumber: \"\" }]);\n  };\n\n  useEffect(() => {}, [addList, customerId]);\n\n  const [details, setDetails] = useState(() => {\n    if (btnState !== \"Edit\") {\n      return {\n        name: \"\",\n        customer: flag == 1 ? customerId : \"\",\n        division: \"\",\n        startDt: \"\",\n        endDt: \"\",\n        manager: \"\",\n        executive: \"\",\n        status: \"1\",\n        currency: \"\",\n        sfOpportunityLink: \"\",\n        valueAddedTasks: \"\",\n        industrySolutionId: \"\",\n        poNumber: \"\",\n        engagementCode: \"\",\n        company: \"\",\n        bccEmails: \"\",\n        attn: \"\",\n        paymentTermsId: \"\",\n        invoiceCycleId: \"\",\n        invoiceCultureId: \"\",\n        ccEmails: \"\",\n        invoiceTemplateId: \"\",\n        invoiceTimeId: \"\",\n        billingInstructions: \"\",\n        clientMessage: \"\",\n        engagementModelId: \"\",\n        costContractTermId: \"\",\n        emailTemplateId: \"\",\n        toEmails: \"\",\n        contractTermId: \"\",\n        percentage: \"0\",\n        country: \"4\",\n        loggedId: loggedUserId,\n      };\n    } else {\n      return {\n        EngagementId: engagementId,\n        name: data1[0]?.tname,\n        customer: data1[0]?.CustomerId,\n        division: data1[0]?.DivisionId,\n        startDt: data1[0]?.startDt,\n        endDt: data1[0]?.endDt,\n        manager: data1[0]?.ManagerId,\n        executive: data1[0]?.executive,\n        status: data1[0]?.StatusId == true ? 1 : 0,\n        currency: data1[0]?.CurrencyId,\n        sfOpportunityLink: data1[0]?.sfopportunityLink,\n        valueAddedTasks: data1[0]?.valueAddedTasks,\n        industrySolutionId: data1[0]?.industrySolutionId,\n        poNumber: data1[0]?.poNumber,\n        engagementCode: data1[0]?.code,\n        company: data1[0]?.CompanyId,\n        bccEmails: data1[0]?.bccEmails,\n        attn: data1[0]?.attn,\n        paymentTermsId: data1[0]?.paymentTermsId,\n        invoiceCycleId: data1[0]?.invoiceCycleId,\n        invoiceCultureId: data1[0]?.invoiceCultureId,\n        ccEmails: data1[0]?.ccEmails,\n        invoiceTemplateId: data1[0]?.invoiceTemplateId,\n        invoiceTimeId: data1[0]?.invoiceTimeId,\n        billingInstructions: data1[0]?.billingInstructions,\n        clientMessage: data1[0]?.clientMessage,\n        engagementModelId: data1[0]?.engagementModelId,\n        costContractTermId: data1[0]?.costContractTermId,\n        emailTemplateId: data1[0]?.emailTemplateId,\n        toEmails: data1[0]?.toEmails,\n        contractTermId: data1[0]?.contractTermId,\n        percentage: data1[0]?.percentage ? \"0\" : \"0\",\n        country: data1[0]?.countryId,\n        loggedId: loggedUserId,\n      };\n    }\n  });\n\n  const [initialValue, setInitialValue] = useState(\n    data !== undefined ? data1[0]?.executive : \"\"\n  );\n  const [updatedValue, setUpdatedValue] = useState(\n    data !== undefined ? details.executive : \"\"\n  );\n  const [visibleSEPU, setVisibleSEPU] = useState(false);\n\n  const [isReplace, setIsReplace] = useState(false);\n  const [isAdd, setIsAdd] = useState(false);\n\n  useEffect(() => {\n    initialValue != updatedValue ? setVisibleSEPU(true) : setVisibleSEPU(false);\n  }, []);\n\n  const handleCancel = (e) => {\n    {\n      flag === 1 ? setIsShow(false) : null;\n    }\n    GlobalCancel(ref);\n    setValidationMessage(false);\n    setSuccessfulmessage(false);\n    let ele = document.getElementsByClassName(\"cancel\");\n    for (const item of ele) {\n      item.value = \"\";\n    }\n  };\n\n  const getEngagements = () => {\n    axios({\n      method: \"get\",\n      url: baseUrl + `/ProjectMS/Engagement/getEngagements`,\n    }).then((res) => {\n      let resp = res.data;\n      setFileName(resp);\n    });\n  };\n\n  const handleCustomer = () => {\n    axios({\n      method: \"get\",\n      url: baseUrl + `/ProjectMS/Engagement/getCustomerName`,\n    }).then((res) => {\n      let custom = res.data;\n      const filteredData = custom.filter((item) => item.id !== 81084541);\n      setCustomer(filteredData);\n    });\n  };\n\n  const handleDivision = () => {\n    axios({\n      method: \"get\",\n      url: baseUrl + `/ProjectMS/Engagement/getDivisionId`,\n    }).then((res) => {\n      let divson = res.data;\n      setDivisionSpare(divson);\n      setDivisionspar(divson);\n      setDetailsCusId(details?.customer);\n    });\n  };\n\n  const Divisionengagement = () => {\n    if (customerId != undefined) {\n      axios({\n        method: \"get\",\n        url: baseUrl + `/ProjectMS/Engagement/getDivision?cid=${customerId}`,\n      }).then((res) => {\n        let div = res.data;\n        setDivisioneng(div);\n      });\n    }\n  };\n\n  {\n    details == null || details == \"\" ? null : \"\";\n  }\n\n  const handleEngagementType = () => {\n    axios({\n      method: \"get\",\n      url: baseUrl + `/ProjectMS/Engagement/getEngagementType`,\n    }).then((res) => {\n      let engtype = res.data;\n      const filteredData = engtype.filter(\n        (item) => item.id !== 356 && item.id !== 355\n      );\n      setEngagementType(filteredData);\n    });\n  };\n\n  const handleIndustry = () => {\n    axios({\n      method: \"get\",\n      url: baseUrl + `/ProjectMS/Engagement/getIndustrySolution`,\n    }).then((res) => {\n      let indus = res.data;\n      setIndustry(indus);\n    });\n  };\n\n  const handleContract = () => {\n    axios({\n      method: \"get\",\n      url: baseUrl + `/ProjectMS/Engagement/getContractTerms`,\n    }).then((res) => {\n      let contact = res.data;\n      setContract(contact);\n    });\n  };\n\n  const handleCostContract = () => {\n    axios({\n      method: \"get\",\n      url: baseUrl + `/ProjectMS/Engagement/getContractTerms`,\n    }).then((res) => {\n      let contact = res.data;\n      setCostContract(contact);\n    });\n  };\n\n  const handlePaymentTerm = () => {\n    axios({\n      method: \"get\",\n      url: baseUrl + `/ProjectMS/Engagement/getPaymentTerms`,\n    }).then((res) => {\n      let payterm = res.data;\n      setPaymentTerm(payterm);\n    });\n  };\n\n  const handleInvoiceCycle = () => {\n    axios({\n      method: \"get\",\n      url: baseUrl + `/ProjectMS/Engagement/getInvoiceCycle`,\n    }).then((res) => {\n      let invcycle = res.data;\n      setInvoiceCycle(invcycle);\n    });\n  };\n\n  const handleInvoiceCulture = () => {\n    axios({\n      method: \"get\",\n      url: baseUrl + `/ProjectMS/Engagement/getInvoiceCulture`,\n    }).then((res) => {\n      let inculture = res.data;\n      setInvoiceCulture(inculture);\n    });\n  };\n\n  const handleInvoiceTemplate = () => {\n    axios({\n      method: \"get\",\n      url: baseUrl + `/ProjectMS/Engagement/getInvoiceTemplate`,\n    }).then((res) => {\n      let invtemp = res.data;\n      setInvoiceTemplate(invtemp);\n    });\n  };\n\n  const handleInvoiceTime = () => {\n    axios({\n      method: \"get\",\n      url: baseUrl + `/ProjectMS/Engagement/getInvoiceTime`,\n    }).then((res) => {\n      let intime = res.data;\n      setInvoiceTime(intime);\n    });\n  };\n\n  const handleCurrency = () => {\n    axios({\n      method: \"get\",\n      url: baseUrl + `/ProjectMS/Engagement/getCurrency`,\n    }).then((res) => {\n      let curre = res.data;\n      setCurrency(curre);\n    });\n  };\n\n  const handleEngCompany = () => {\n    axios({\n      method: \"get\",\n      url: baseUrl + `/ProjectMS/Engagement/getEngagementCompanay`,\n    }).then((res) => {\n      let compay = res.data;\n      const filteredData = compay.filter(\n        (item) =>\n          item.id !== 10 && item.id !== 11 && item.id !== 12 && item.id !== 13\n      );\n      setEngCompany(filteredData);\n    });\n  };\n\n  const resourceFnc = () => {\n    axios({\n      method: \"get\",\n      url: baseUrl + `/ProjectMS/risks/getAssignedData`,\n    }).then((res) => {\n      let manger = res.data;\n      setResource(manger);\n    });\n  };\n\n  const navigate = useNavigate();\n\n  const handlePostDetails = () => {\n    let valid = GlobalValidation(ref);\n    if (valid) {\n      {\n        setSuccessfulmessage(false);\n        setValidationMessage(true);\n      }\n      return;\n    }\n    if (valid) {\n      return;\n    }\n    let customerNamesArr = filename.filter((d) => d !== null);\n    let someDataa = customerNamesArr.some((d) => d.name == details?.name);\n    if (btnState != \"Edit\") {\n      if (someDataa) {\n        let ele = document.getElementsByClassName(\"unique\");\n        for (let index = 0; index < ele.length; index++) {\n          ele[index].classList.add(\"error-block\");\n        }\n        setUniqueMessage(true);\n        setSuccessfulmessage(false);\n        setValidationMessage(false);\n        setTimeout(() => {\n          setUniqueMessage(false);\n        }, 3000);\n        return;\n      }\n    }\n\n    axios({\n      method: \"post\",\n      url: baseUrl + `/ProjectMS/Engagement/postEngagementsDetails`,\n      data: details,\n    }).then(function (res) {\n      setPostDetails(res.data);\n      setSuccessfulmessage(true);\n      window.scrollTo({ top: 0, behavior: \"smooth\" });\n      setTimeout(() => {\n        setSuccessfulmessage(false);\n      }, 3000);\n      setValidationMessage(false);\n      if (btnState != \"Edit\") {\n        navigate(`/engagement/Dashboard/:${res.data.EngagementId}`);\n      } else {\n        window.location.reload();\n      }\n    });\n  };\n\n  const handleOpen = () => {\n    let temp = finalState;\n\n    if (details.poNumber != \"\") {\n      let pNo = details.poNumber.includes(\",\")\n        ? details.poNumber.split(\",\")\n        : details.poNumber;\n\n      if (details.poNumber.includes(\",\")) {\n        pNo.forEach((ele) => {\n          temp[Object.keys(temp).length] = ele;\n        });\n      } else {\n        temp[Object.keys(temp).length] = pNo;\n      }\n\n      setFinalState(() => temp);\n    }\n\n    setButtonPopup(true);\n  };\n\n  useEffect(() => {\n    if (details.customer != undefined) {\n      let data = divisionSpare.filter((d) => d.customerId == details.customer);\n      setDivision(data);\n    }\n  }, [divisionSpare]);\n\n  const [selectedValue, setSelectedValue] = useState(\"\");\n  const handleChangeCustom = (e) => {\n    setSelectedValue(e.target.value);\n  };\n\n  const handleChange = (e) => {\n    setSelectedValue(\"\");\n    const { id, name, value } = e.target;\n    setOnChangeState((prev) => ({ ...prev, [id]: value }));\n    let data = divisionSpare.filter((d) => d.customerId == value);\n    setDivision(data);\n\n    setDetails((prev) => {\n      return { ...prev, [name]: value };\n    });\n    let tempDivision = divisionSpare;\n    let customer_id = details.division;\n    let fDivision = tempDivision.filter((d) => d.customerId == customer_id);\n  };\n\n  const handleChange1 = (e) => {\n    const { name, value } = e.target;\n    setCName(engDetails[0]?.city);\n    setSName(engDetails[0]?.state);\n    setAName(engDetails[0]?.address);\n    setCoName(engDetails[0]?.country);\n    setZName(engDetails[0]?.zipcode);\n\n    setDetails((prev) => {\n      return { ...prev, [name]: value };\n    });\n\n    if (value != \"\") {\n      getAddressDetailsApi(value);\n    }\n  };\n\n  const [routes, setRoutes] = useState([]);\n  let textContent = \"Delivery\";\n  let currentScreenName = [\"Create Engagement\"];\n\n  useEffect(() => {\n    getMenus();\n  }, []);\n\n  const getMenus = () => {\n    // setMenusData\n\n    axios({\n      method: \"GET\",\n      url: baseUrl + `/CommonMS/master/getMenus?loggedUserId=${loggedUserId}`,\n    }).then((resp) => {\n      let data = resp.data;\n\n      data.forEach((item) => {\n        if (item.display_name === textContent) {\n          setRoutes([item]);\n        }\n      });\n    });\n  };\n\n  const getAddressDetailsApi = (value) => {\n    axios({\n      method: \"get\",\n      url:\n        baseUrl + `/ProjectMS/Engagement/getAddressDetails?divisionId=${value}`,\n    }).then((res) => {\n      let delta = res.data;\n      setEngDetails(delta);\n      setEngData(res.data);\n    });\n  };\n\n  const [email1, setEmail1] = useState(\"\");\n  const [email2, setEmail2] = useState(\"\");\n  const [email3, setEmail3] = useState(\"\");\n  const [isValid1, setIsValid1] = useState(true);\n  const [isValid2, setIsValid2] = useState(true);\n  const [isValid3, setIsValid3] = useState(true);\n\n  const handleChange2 = (e) => {\n    const { id, name, value } = e.target;\n    if (id === \"toEmails\") {\n      if (value === \"\") {\n        setIsValid1(true);\n      } else {\n        const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n        setIsValid1(emailRegex.test(value));\n      }\n      setEmail1(value);\n    }\n\n    if (id === \"bccEmails\") {\n      if (value === \"\") {\n        setIsValid2(true);\n      } else {\n        const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n        setIsValid2(emailRegex.test(value));\n      }\n      setEmail2(value);\n    }\n    if (id === \"ccEmails\") {\n      if (value === \"\") {\n        setIsValid3(true);\n      } else {\n        const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n        setIsValid3(emailRegex.test(value));\n      }\n      setEmail3(value);\n    }\n\n    setOnChangeState((prev) => ({ ...prev, [id]: value }));\n    setDetails((prev) => {\n      return { ...prev, [name]: value };\n    });\n  };\n\n  useEffect(() => {\n    handleCustomer();\n    handleDivision();\n    Divisionengagement();\n    handleEngagementType();\n    handleIndustry();\n    handleContract();\n    handlePaymentTerm();\n    handleInvoiceCycle();\n    handleInvoiceCulture();\n    handleInvoiceTemplate();\n    handleInvoiceTime();\n    handleCurrency();\n    handleEngCompany();\n    resourceFnc();\n    getEngagements();\n    handleCostContract();\n  }, []);\n\n  useEffect(() => {}, [postDetails, engDetails]);\n\n  useEffect(() => {\n    if (data !== undefined && data.length > 0) {\n      setDetails(data[0]);\n      setBackUpData(JSON.parse(JSON.stringify(data[0])));\n    }\n  }, [data]);\n\n  useEffect(() => {\n    if (details.division != \"\") {\n      getAddressDetailsApi(details.division);\n    }\n  }, []);\n\n  const [buttonPopup, setButtonPopup] = useState(false);\n\n  const CustomDatePickerInput = ({ value, onClick }) => {\n    const restrictedPlaceholder = \"\";\n\n    return (\n      <input\n        type=\"text\"\n        className=\"\"\n        value={value}\n        placeholder={restrictedPlaceholder}\n        readOnly\n        onClick={onClick}\n      />\n    );\n  };\n\n  const handleEndDtChange = (e) => {\n    const selectedDate = e ? moment(e).format(\"yyyy-MM-DD\") : \"\";\n\n    // Compare the dates\n    if (selectedDate < details.startDt) {\n      setDetails((prev) => ({\n        ...prev,\n        endDt: details.startDt, // Set endDt to the value of startDt\n      }));\n      setEndDt(new Date(details.startDt)); // Update the state with the new date value\n    } else {\n      setDetails((prev) => ({\n        ...prev,\n        endDt: selectedDate,\n      }));\n      setEndDt(e);\n    }\n  };\n\n  return (\n    <div>\n      {validationmessage ? (\n        <div className=\"statusMsg error\">\n          {\" \"}\n          <AiFillWarning /> Please select the valid values for highlighted\n          fields{\" \"}\n        </div>\n      ) : (\n        \"\"\n      )}\n      {uniqueMessage ? (\n        <div className=\"statusMsg error\">\n          {\" \"}\n          <AiFillWarning /> Engagement Name already exist with this name\n        </div>\n      ) : (\n        \"\"\n      )}\n      {data !== undefined ? (\n        <>\n          {successfulmessage ? (\n            <div className=\"statusMsg success\">\n              Engagement Updated Successfully\n            </div>\n          ) : (\n            \"\"\n          )}\n        </>\n      ) : (\n        <>\n          {successfulmessage ? (\n            <div className=\"statusMsg success\">\n              Engagement Created Successfully\n            </div>\n          ) : (\n            \"\"\n          )}\n        </>\n      )}\n      {flag !== 1 ? (\n        <div className=\"pageTitle\">\n          <div className=\"childOne\"></div>\n          <div className=\"childTwo\">\n            {data === undefined ? (\n              <h2>Create Engagement</h2>\n            ) : (\n              <h2>Engagements</h2>\n            )}\n          </div>\n\n          <div className=\"childThree\"></div>\n        </div>\n      ) : (\n        \"\"\n      )}\n      <ScreenBreadcrumbs\n        routes={routes}\n        currentScreenName={currentScreenName}\n      />\n      <div className=\"helpBtn\" style={{ float: \"right\", paddingTop: \"5px\" }}>\n        <GlobalHelp pdfname={HelpPDFName} name={HelpHeader} />\n      </div>\n      <div className=\"customCard  mt-2 mb-2\">\n        <div className=\"mb-3  container-fluid   customCard\">\n          <h2>\n            <RiProfileLine /> Basic Information\n          </h2>\n          <div className=\"row \">\n            <div className=\"form-group col-md-3 mb-2\">\n              <label htmlFor=\"engagementCode\">\n                Engagement Code&nbsp;<span className=\"error-text\">*</span>\n              </label>\n              {data !== undefined ? (\n                <div\n                  className=\"textfield\"\n                  ref={(ele) => {\n                    ref.current[0] = ele;\n                  }}\n                >\n                  <input\n                    className=\"err text disableField\"\n                    type=\"text\"\n                    name=\"engagementCode\"\n                    id=\"engagementCode\"\n                    defaultValue={details?.engagementCode}\n                    onChange={handleChange2}\n                    style={{ cursor: \"not-allowed\" }}\n                    required\n                    disabled\n                  />\n                </div>\n              ) : (\n                <div\n                  className=\"textfield\"\n                  ref={(ele) => {\n                    ref.current[0] = ele;\n                  }}\n                >\n                  <input\n                    className=\" text cancel \"\n                    type=\"text\"\n                    name=\"engagementCode\"\n                    id=\"engagementCode\"\n                    defaultValue={details?.engagementCode}\n                    onChange={handleChange2}\n                    onKeyDown={(event) => {\n                      if (event.code == \"Space\" && !details?.engagementCode)\n                        event.preventDefault();\n                    }}\n                    required\n                  />\n                </div>\n              )}\n            </div>\n\n            <div className=\"form-group col-md-3 mb-2\">\n              <label htmlFor=\"name\">\n                Name&nbsp;<span className=\"error-text\">*</span>\n              </label>\n              {data !== undefined ? (\n                <div\n                  className=\"textfield\"\n                  ref={(ele) => {\n                    ref.current[1] = ele;\n                  }}\n                >\n                  <input\n                    type=\"text\"\n                    className=\"err text\"\n                    id=\"name\"\n                    defaultValue={details?.name}\n                    onChange={handleChange2}\n                    name=\"name\"\n                    onKeyDown={(event) => {\n                      if (event.code == \"Space\" && !details.name)\n                        event.preventDefault();\n                    }}\n                  />\n                </div>\n              ) : (\n                <div\n                  className=\"textfield\"\n                  ref={(ele) => {\n                    ref.current[1] = ele;\n                  }}\n                >\n                  <input\n                    type=\"text\"\n                    className=\"unique text cancel\"\n                    id=\"name\"\n                    defaultValue={details?.name}\n                    onChange={handleChange2}\n                    name=\"name\"\n                    onKeyDown={(event) => {\n                      if (event.code == \"Space\" && !details.name)\n                        event.preventDefault();\n                    }}\n                    required\n                  />\n                </div>\n              )}\n            </div>\n\n            {flag == 1 ? (\n              <div className=\"form-group col-md-3 mb-2\">\n                <label htmlFor=\"customer_id\">\n                  Customer Name&nbsp;<span className=\"error-text\">*</span>\n                </label>\n\n                <input\n                  disabled\n                  type=\"text\"\n                  className=\"form-control\"\n                  name=\"customer\"\n                  id=\"customer\"\n                  value={customerName}\n                  ref={(ele) => {\n                    ref.current[2] = ele;\n                  }}\n                ></input>\n              </div>\n            ) : (\n              <>\n                {data !== undefined ? (\n                  <div className=\"form-group col-md-3 mb-2\">\n                    <label htmlFor=\"customer\">\n                      Customer Name&nbsp;<span className=\"error-text\">*</span>\n                    </label>\n                    <select\n                      ref={(ele) => {\n                        ref.current[2] = ele;\n                      }}\n                      className=\" disableField\"\n                      name=\"customer\"\n                      id=\"customer\"\n                      disabled\n                      onChange={handleChange}\n                      defaultValue={details?.customer}\n                    >\n                      <option value=\"\"> &lt;&lt;Please Select&gt;&gt;</option>\n                      {customer?.map((Item) => (\n                        <option\n                          key={Item.id}\n                          selected={Item.id == details.customer ? true : false}\n                          value={Item.id}\n                        >\n                          {Item.full_name}\n                        </option>\n                      ))}\n                    </select>\n                  </div>\n                ) : (\n                  <div className=\"form-group col-md-3 mb-2\">\n                    <label htmlFor=\"customer\">\n                      Customer Name&nbsp;<span className=\"error-text\">*</span>\n                    </label>\n                    <select\n                      ref={(ele) => {\n                        ref.current[2] = ele;\n                      }}\n                      className=\"err cancel text \"\n                      name=\"customer\"\n                      id=\"customer\"\n                      onChange={handleChange}\n                      defaultValue={details?.customer}\n                    >\n                      <option value=\"\"> &lt;&lt;Please Select&gt;&gt;</option>\n                      {customer?.map((Item) => (\n                        <option\n                          key={Item.id}\n                          selected={Item.id == details.customer ? true : false}\n                          value={Item.id}\n                        >\n                          {Item.full_name}\n                        </option>\n                      ))}\n                    </select>\n                  </div>\n                )}\n              </>\n            )}\n\n            <div className=\"form-group col-md-3 mb-2\">\n              <label htmlFor=\"division\">\n                Division&nbsp;<span className=\"error-text\">*</span>\n              </label>\n\n              {flag == 1 ? (\n                <select\n                  ref={(ele) => {\n                    ref.current[3] = ele;\n                  }}\n                  className=\"cancel text\"\n                  name=\"division\"\n                  id=\"division\"\n                  onChange={handleChange1}\n                >\n                  <option value=\"\"> &lt;&lt;Please Select&gt;&gt;</option>\n\n                  {divisioneng?.map((Item) => (\n                    <option key={Item.id} value={Item.id}>\n                      {Item.name}\n                    </option>\n                  ))}\n                </select>\n              ) : (\n                <>\n                  {data !== undefined && data.length > 0 ? (\n                    <select\n                      ref={(ele) => {\n                        ref.current[3] = ele;\n                      }}\n                      className={data != undefined ? \"\" : \"err cancel text\"}\n                      name=\"division\"\n                      id=\"division\"\n                      onChange={handleChange1}\n                      defaultValue={details?.division}\n                    >\n                      <option value=\"\"> &lt;&lt;Please Select&gt;&gt;</option>\n                      {division?.map((Item) => (\n                        <option\n                          key={Item.id}\n                          selected={Item.id == details.division ? true : false}\n                          value={Item.id}\n                        >\n                          {Item.name}\n                        </option>\n                      ))}\n                    </select>\n                  ) : (\n                    <select\n                      ref={(ele) => {\n                        ref.current[3] = ele;\n                      }}\n                      className={data != undefined ? \"\" : \"err cancel text\"}\n                      name=\"division\"\n                      id=\"division\"\n                      onChange={handleChange1}\n                      defaultValue={details?.division}\n                    >\n                      <option value=\"\"> &lt;&lt;Please Select&gt;&gt;</option>\n                      {division?.map((Item) => (\n                        <option\n                          key={Item.id}\n                          value={Item.id}\n                          selected={Item.id == details.division ? true : false}\n                        >\n                          {Item.name}\n                        </option>\n                      ))}\n                    </select>\n                  )}\n                </>\n              )}\n            </div>\n            <div className=\"col-md-3\">\n              <div className=\"row\">\n                <div className=\"form-group col-md-6 \">\n                  <label htmlFor=\"startDate\">Start Date</label>\n                  <DatePicker\n                    name=\"startDt\"\n                    selected={\n                      details.startDt ? new Date(details.startDt) : null\n                    }\n                    defaultValue={details.startDt != \"\" ? details.startDt : \"\"}\n                    id=\"start_dt\"\n                    className=\"err cancel nochange\"\n                    showMonthDropdown\n                    showYearDropdown\n                    dropdownMode=\"select\"\n                    dateFormat=\"dd-MMM-yyyy\"\n                    onChange={(e) => {\n                      const selectedDate = e\n                        ? moment(e).format(\"yyyy-MM-DD\")\n                        : \"\";\n                      setDetails((prev) => ({\n                        ...prev,\n                        [\"startDt\"]: selectedDate,\n                      }));\n                      setStartDt(e);\n                    }}\n                    autoComplete=\"false\"\n                    customInput={<CustomDatePickerInput />}\n                  />\n                </div>\n                <div className=\"form-group col-md-6 \">\n                  <label htmlFor=\"end_dt\">End Date</label>\n                  <DatePicker\n                    name=\"endDt\"\n                    selected={details.endDt ? new Date(details.endDt) : null}\n                    id=\"end_dt\"\n                    className=\"err cancel nochange\"\n                    showMonthDropdown\n                    showYearDropdown\n                    dropdownMode=\"select\"\n                    dateFormat=\"dd-MMM-yyyy\"\n                    minDate={StartDt ? StartDt : undefined}\n                    onChange={handleEndDtChange}\n                    autoComplete=\"false\"\n                    customInput={<CustomDatePickerInput />}\n                  />\n                </div>\n              </div>\n            </div>\n            <div className=\"form-group col-md-3 mb-2\">\n              <label htmlFor=\"manager\">\n                Manager&nbsp;<span className=\"error-text\">*</span>\n              </label>\n              {data !== undefined ? (\n                <div\n                  className=\"autoComplete-container react  autocomplete\"\n                  ref={(ele) => {\n                    ref.current[4] = ele;\n                  }}\n                >\n                  <div>\n                    <ReactSearchAutocomplete\n                      items={resource}\n                      type=\"Text\"\n                      name=\"manager\"\n                      id=\"manager_id\"\n                      className=\"err cancel nochange\"\n                      fuseOptions={{ keys: [\"id\", \"name\"] }}\n                      resultStringKeyName=\"name\"\n                      resource={resource}\n                      resourceFnc={resourceFnc}\n                      placeholder=\"\"\n                      onSelect={(e) => {\n                        setDetails((prevProps) => ({\n                          ...prevProps,\n                          [\"manager\"]: e.id,\n                        }));\n                      }}\n                      showIcon={false}\n                      inputSearchString={data1[0]?.firstName}\n                    />\n                  </div>\n                </div>\n              ) : (\n                <div\n                  className=\"autoComplete-container react  autocomplete\"\n                  ref={(ele) => {\n                    ref.current[4] = ele;\n                  }}\n                >\n                  <div>\n                    <ReactSearchAutocomplete\n                      items={resource}\n                      type=\"Text\"\n                      name=\"manager\"\n                      id=\"manager_id\"\n                      className=\"err cancel nochange\"\n                      fuseOptions={{ keys: [\"id\", \"name\"] }}\n                      resultStringKeyName=\"name\"\n                      resource={resource}\n                      resourceFnc={resourceFnc}\n                      placeholder=\"\"\n                      onSelect={(e) => {\n                        setDetails((prevProps) => ({\n                          ...prevProps,\n                          [\"manager\"]: e.id,\n                        }));\n                      }}\n                      showIcon={false}\n                    />\n                  </div>\n                </div>\n              )}\n            </div>\n            <div className=\"form-group col-md-3 mb-2\">\n              <label htmlFor=\"salesExecutive\">\n                Sales Executive&nbsp;<span className=\"error-text\">*</span>\n              </label>\n              {data !== undefined ? (\n                <div\n                  className=\"autoComplete-container react  autocomplete\"\n                  ref={(ele) => {\n                    ref.current[5] = ele;\n                  }}\n                >\n                  <div>\n                    <ReactSearchAutocomplete\n                      items={resource}\n                      type=\"Text\"\n                      name=\"executive\"\n                      id=\"executive_id\"\n                      className=\"err cancel\"\n                      fuseOptions={{ keys: [\"id\", \"name\"] }}\n                      resultStringKeyName=\"name\"\n                      placeholder=\"\"\n                      onSelect={(e) => {\n                        setUpdatedValue(e.id);\n                        setDetails((prevProps) => ({\n                          ...prevProps,\n                          executive: e.id,\n                        }));\n                        setVisibleSEPU(true);\n                      }}\n                      showIcon={false}\n                      inputSearchString={data1[0]?.execFirstName}\n                    />\n                  </div>\n                </div>\n              ) : (\n                <div\n                  className=\"autoComplete-container react  autocomplete\"\n                  ref={(ele) => {\n                    ref.current[5] = ele;\n                  }}\n                >\n                  <div>\n                    <ReactSearchAutocomplete\n                      items={resource}\n                      type=\"Text\"\n                      name=\"executive\"\n                      id=\"executive_id\"\n                      className=\"err cancel\"\n                      fuseOptions={{ keys: [\"id\", \"name\"] }}\n                      resultStringKeyName=\"name\"\n                      placeholder=\"\"\n                      onSelect={(e) => {\n                        setInitialValue(e.id);\n                        setDetails((prevProps) => ({\n                          ...prevProps,\n                          executive: e.id,\n                        }));\n                      }}\n                      showIcon={false}\n                    />\n                  </div>\n                </div>\n              )}\n            </div>\n            <div className=\"form-group col-md-3 mb-2\">\n              <label htmlFor=\"engagement_model_id\">\n                Engagement Type&nbsp;<span className=\"error-text\">*</span>\n              </label>\n              <div\n                className=\"textfield\"\n                ref={(ele) => {\n                  ref.current[6] = ele;\n                }}\n              >\n                <select\n                  className={data != undefined ? \"\" : \"cancel\"}\n                  name=\"engagementModelId\"\n                  id=\"engagementModelId\"\n                  onChange={handleChange2}\n                >\n                  <option value=\"\"> &lt;&lt;Please Select&gt;&gt;</option>\n                  {engagementType?.map((Item) => (\n                    <option\n                      key={Item.lkup_type_group_id}\n                      selected={\n                        Item.id == details.engagementModelId ? true : false\n                      }\n                      value={Item.id}\n                    >\n                      {Item.engagementType}\n                    </option>\n                  ))}\n                </select>\n              </div>\n            </div>\n            <div className=\"form-group col-md-3 mb-2\">\n              <label htmlFor=\"companyCostCenter\">Cost Center</label>\n              <>\n                <span className=\"companyCostCenter \" id=\"companyCostCenter\">\n                  <div\n                    className=\"poBtn disableField\"\n                    style={{ cursor: \"not-allowed\" }}\n                  >\n                    <MdAddCircleOutline style={{ color: \"black\" }} />\n                    <span\n                      className=\"companyCostCenter\"\n                      style={{ color: \"black\" }}\n                    >\n                      Select Cost Center\n                    </span>\n                  </div>\n                </span>\n              </>\n            </div>\n            <div className=\"form-group col-md-3 mb-2\">\n              <label htmlFor=\"engagement_status_id\">\n                Status&nbsp;<span className=\"error-text\">*</span>\n              </label>\n              <div\n                className=\"textfield\"\n                ref={(ele) => {\n                  ref.current[7] = ele;\n                }}\n              >\n                {flag == 1 ? (\n                  <select\n                    name=\"status\"\n                    id=\"engagement_status_id\"\n                    className=\"cancel\"\n                    onChange={handleChange2}\n                    value={details.status}\n                  >\n                    <option value=\"1\" selected={details.status == \"1\"}>\n                      Active\n                    </option>\n                    <option value=\"0\">In-Active</option>\n                  </select>\n                ) : (\n                  <select\n                    name=\"status\"\n                    id=\"Status\"\n                    className={data != undefined ? \"\" : \"cancel\"}\n                    onChange={handleChange2}\n                    defaultValue={details?.status == true ? \"1\" : \"0\"}\n                  >\n                    <option value=\"\"> &lt;&lt;Please Select&gt;&gt;</option>\n                    <option value=\"1\">Active</option>\n                    <option value=\"0\">In-Active</option>\n                  </select>\n                )}\n              </div>\n            </div>\n            <div className=\"form-group col-md-3 mb-2\">\n              <label htmlFor=\"currency_id\">\n                Currency&nbsp;<span className=\"error-text\">*</span>\n              </label>\n              <div\n                className=\"textfield\"\n                ref={(ele) => {\n                  ref.current[8] = ele;\n                }}\n              >\n                <select\n                  className={data != undefined ? \"\" : \"cancel\"}\n                  name=\"currency\"\n                  id=\"CurrencyId\"\n                  onChange={handleChange2}\n                >\n                  <option value=\"\"> &lt;&lt;Please Select&gt;&gt;</option>\n                  {currency\n                    .sort((a, b) => a.currency.localeCompare(b.currency))\n                    .map((Item) => (\n                      <option\n                        key={Item.lkup_type_group_id}\n                        selected={Item.id == details.currency ? true : false}\n                        value={Item.id}\n                      >\n                        {Item.currency}\n                      </option>\n                    ))}\n                </select>\n              </div>\n            </div>\n            <div className=\"form-group col-md-3\">\n              <label htmlFor=\"sfopportunity_link\">\n                Salesforce Oppurtunity Link\n              </label>\n              {data !== undefined ? (\n                <div>\n                  <input\n                    type=\"text\"\n                    className=\"\"\n                    id=\"sfopportunity_link\"\n                    defaultValue={details?.sfOpportunityLink}\n                    onChange={handleChange2}\n                    name=\"sfOpportunityLink\"\n                  />\n                </div>\n              ) : (\n                <div>\n                  <input\n                    type=\"text\"\n                    className=\"cancel\"\n                    id=\"sfopportunity_link\"\n                    onChange={handleChange2}\n                    name=\"sfOpportunityLink\"\n                  />\n                </div>\n              )}\n            </div>\n            <div className=\"form-group col-md-3 mb-3\">\n              <label htmlFor=\"poNumber\">PO Number </label>\n              <div\n                className=\"poBtn\"\n                type=\"text\"\n                id=\"poNumber\"\n                name=\"poNumber\"\n                onClick={() => {\n                  handleOpen();\n                }}\n                style={{ cursor: \"pointer\" }}\n              >\n                <MdAddCircleOutline />\n                <span className=\"\"> Add/Edit PO Number</span>\n              </div>\n            </div>\n            <div className=\"form-group col-md-3 mb-3\">\n              <label htmlFor=\"company_id\">\n                Eng.Company&nbsp;<span className=\"error-text\">*</span>\n              </label>\n              <div\n                className=\"textfield\"\n                ref={(ele) => {\n                  ref.current[9] = ele;\n                }}\n              >\n                <select\n                  className={data != undefined ? \"\" : \"cancel\"}\n                  name=\"company\"\n                  id=\"CompanyId\"\n                  onChange={handleChange2}\n                  defaultValue={details?.company}\n                >\n                  <option value=\"\"> &lt;&lt;Please Select&gt;&gt;</option>\n                  {engCompany\n                    .sort((a, b) => a.Company.localeCompare(b.Company))\n                    .map((Item) => (\n                      <option\n                        key={Item.id}\n                        selected={Item.id == details.company ? true : false}\n                        value={Item.id}\n                      >\n                        {Item.Company}\n                      </option>\n                    ))}\n                </select>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"customCard  mt-2 mb-2\">\n        <div className=\"group mb-3 container-fluid   customCard\">\n          <h2>\n            <RiProfileLine /> Industry and Capability Compliance\n          </h2>\n          <div className=\"group-content row\">\n            <div className=\"col-md-3\">\n              <label htmlFor=\"industry_solution_id\">Industry Solution</label>\n              <select\n                className={data != undefined ? \"\" : \"cancel\"}\n                name=\"industrySolutionId\"\n                id=\"industrySolutionId\"\n                onChange={handleChange2}\n              >\n                <option value=\"\"> &lt;&lt;Please Select&gt;&gt;</option>\n                {industry?.map((Item) => (\n                  <option\n                    key={Item.lkup_type_group_id}\n                    selected={\n                      Item.id == details.industrySolutionId ? true : false\n                    }\n                    value={Item.id}\n                  >\n                    {Item.industrySolution}\n                  </option>\n                ))}\n              </select>\n            </div>\n            <div className=\" col-md-3\">\n              <label htmlFor=\"message-textareavalueAddTasks\">\n                Value Add Tasks\n              </label>\n              <textarea\n                className={data != undefined ? \"\" : \"cancel\"}\n                id=\"valueAddedTasks\"\n                placeholder=\"\"\n                rows={2}\n                required\n                defaultValue={\n                  details.valueAddedTasks == null\n                    ? \"-\"\n                    : details.valueAddedTasks\n                }\n                onChange={handleChange2}\n                name=\"valueAddedTasks\"\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"customCard  mt-2 mb-2\">\n        <div className=\"group mb-3 container-fluid   customCard\">\n          <h2>\n            <RiProfileLine /> Billing Information\n          </h2>\n          <div className=\"row\">\n            <div\n              className=\"col-md-3 \"\n              style={{ marginRight: \"10px\", marginLeft: \"5px\" }}\n            >\n              <h2>Bill to Details</h2>\n\n              <div className=\"group-content row\">\n                <div className=\"mb-2 col-md-12\">\n                  <div className=\"form-group row\">\n                    <label className=\"col-md-5\" htmlFor=\"name\">\n                      Attn.\n                    </label>\n                    <span className=\"col-1 \">:</span>\n                    <div className=\"col-md-6\">\n                      <input\n                        type=\"text\"\n                        className={data != undefined ? \"\" : \"cancel\"}\n                        id=\"attnId\"\n                        onChange={handleChange2}\n                        name=\"attn\"\n                        defaultValue={btnState == \"Edit\" ? details?.attn : \"\"}\n                      />\n                    </div>\n                  </div>\n                </div>\n\n                <div className=\"mb-2 col-md-12\">\n                  <div className=\"form-group row\">\n                    <label className=\"col-5\" htmlFor=\"name-input-inline\">\n                      Address Line\n                    </label>\n                    <span className=\"col-1 \">:</span>\n                    <div className=\"col-6\">\n                      {engdata.map((item) => (\n                        <p\n                          className=\"col-6 \"\n                          id=\"address\"\n                          title={details.addressLine}\n                        >\n                          {item.address}\n                          {aName}\n                        </p>\n                      ))}\n                    </div>\n                  </div>\n                </div>\n\n                <div className=\"mb-2 col-md-12\">\n                  <div className=\"form-group row\">\n                    <label className=\"col-5\" htmlFor=\"name-input-inline\">\n                      City\n                    </label>\n                    <span className=\"col-1 \">:</span>\n                    <div className=\"col-6\">\n                      {engdata.map((item) => (\n                        <p className=\"col-6\" id=\"city\">\n                          {details.city}\n                          {item.city} {cName}\n                        </p>\n                      ))}\n                    </div>\n                  </div>\n                </div>\n\n                <div className=\"mb-2 col-md-12\">\n                  <div className=\"form-group row\">\n                    <label className=\"col-5\" htmlFor=\"name-input-inline\">\n                      State/Province\n                    </label>\n                    <span className=\"col-1 \">:</span>\n                    <div className=\"col-6\">\n                      {engdata.map((item) => (\n                        <p className=\"col-6\" id=\"state\">\n                          {details.state}\n                          {item.state} {sName}\n                        </p>\n                      ))}\n                    </div>\n                  </div>\n                </div>\n\n                <div className=\"mb-2 col-md-12\">\n                  <div className=\"form-group row\">\n                    <label className=\"col-5\" htmlFor=\"name-input-inline\">\n                      ZIP/Postal Code\n                    </label>\n                    <span className=\"col-1 \">:</span>\n                    <div className=\"col-6\">\n                      {engdata.map((item) => (\n                        <p className=\"col-6\" id=\"zip_code\">\n                          {details.zipcode}\n                          {item.zipcode} {zName}\n                        </p>\n                      ))}\n                    </div>\n                  </div>\n                </div>\n\n                <div className=\"mb-2 col-md-12\">\n                  <div className=\"form-group row\">\n                    <label className=\"col-5\" htmlFor=\"name-input-inline\">\n                      Country\n                    </label>\n                    <span className=\"col-1 \">:</span>\n                    <div className=\"col-6\">\n                      {engdata.map((item) => (\n                        <p\n                          className=\"col-6\"\n                          id=\"country_id\"\n                          value={details.country}\n                        >\n                          {item.country} {coName}\n                        </p>\n                      ))}\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className=\"col-md-8 \" style={{ width: \"73%\" }}>\n              <h2>Invoice Details</h2>\n              <div className=\"row\">\n                <div className=\"col-md-5 mt-2\">\n                  <div className=\" row \">\n                    <div className=\" col-md-12\">\n                      <div className=\"frmo-group row mb-2\">\n                        <label\n                          className=\"col-5\"\n                          htmlFor=\"Payment Terms -select\"\n                        >\n                          Payment Terms&nbsp;\n                          <span className=\"error-text\">*</span>\n                        </label>\n                        <span className=\"col-1\">:</span>\n                        <div className=\"col-6\">\n                          <select\n                            className={\n                              data != undefined\n                                ? \"\"\n                                : \"cancel error enteredDetails text\"\n                            }\n                            name=\"paymentTermsId\"\n                            id=\"paymentTermsId\"\n                            onChange={(e) => handleChange2(e)}\n                            ref={(ele) => {\n                              ref.current[10] = ele;\n                            }}\n                          >\n                            <option value=\"\">\n                              {\" \"}\n                              &lt;&lt;Please Select&gt;&gt;\n                            </option>\n                            {paymentTerm?.map((Item) => (\n                              <option\n                                key={Item.lkup_type_group_id}\n                                selected={\n                                  Item.id == details.paymentTermsId\n                                    ? true\n                                    : false\n                                }\n                                value={Item.id}\n                              >\n                                {Item.paymentTerms}\n                              </option>\n                            ))}\n                          </select>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\" row \">\n                    <div className=\"col-md-12\">\n                      <div className=\"frmo-group row mb-2\">\n                        <label\n                          className=\"col-5\"\n                          htmlFor=\"Invoice Cycle -select\"\n                        >\n                          Invoice Cycle&nbsp;\n                          <span className=\"error-text\">*</span>\n                        </label>\n                        <span className=\"col-1\">:</span>\n                        <div className=\"col-6\">\n                          <div className=\"d-flex\">\n                            {details.invoiceCycleId === \"754\" && (\n                              <div className=\"mr-2\">\n                                <select\n                                  className={\n                                    data != undefined\n                                      ? \"\"\n                                      : \"cancel error enteredDetails text\"\n                                  }\n                                  name=\"invoiceCycleId\"\n                                  id=\"invoiceCycleId\"\n                                  onChange={(e) => handleChange2(e)}\n                                  ref={(ele) => {\n                                    ref.current[11] = ele;\n                                  }}\n                                >\n                                  <option value=\"\">\n                                    &lt;&lt;Please Select&gt;&gt;\n                                  </option>\n                                  {invoiceCycle?.map((Item) => (\n                                    <option\n                                      key={Item.lkup_type_group_id}\n                                      selected={\n                                        Item.id == details.invoiceCycleId\n                                          ? true\n                                          : false\n                                      }\n                                      value={Item.id}\n                                    >\n                                      {Item.invoiceCycle}\n                                    </option>\n                                  ))}\n                                </select>\n                              </div>\n                            )}\n                            {details.invoiceCycleId === \"754\" && (\n                              <div>\n                                <select\n                                  className={\n                                    data != undefined\n                                      ? \"\"\n                                      : \"cancel error enteredDetails text\"\n                                  }\n                                  value={selectedValue}\n                                  onChange={(e) => handleChangeCustom(e)}\n                                  ref={(ele) => {\n                                    ref.current[11] = ele;\n                                  }}\n                                >\n                                  <option value=\"\">\n                                    {\"<<Please Select>>\"}\n                                  </option>\n                                  {[...Array(31)].map((_, index) => (\n                                    <option\n                                      key={index + 1}\n                                      value={index + 1}\n                                      selected={\n                                        index + 1 ===\n                                        parseInt(details.invoiceCycleId)\n                                      }\n                                    >\n                                      {index + 1}\n                                    </option>\n                                  ))}\n                                </select>\n                              </div>\n                            )}\n                          </div>\n                          {details.invoiceCycleId !== \"754\" && (\n                            <select\n                              className={\n                                data != undefined\n                                  ? \"\"\n                                  : \"cancel error enteredDetails text\"\n                              }\n                              name=\"invoiceCycleId\"\n                              id=\"invoiceCycleId\"\n                              onChange={(e) => handleChange2(e)}\n                              ref={(ele) => {\n                                ref.current[11] = ele;\n                              }}\n                            >\n                              <option value=\"\">\n                                &lt;&lt;Please Select&gt;&gt;\n                              </option>\n                              {invoiceCycle?.map((Item) => (\n                                <option\n                                  key={Item.lkup_type_group_id}\n                                  selected={\n                                    Item.id == details.invoiceCycleId\n                                      ? true\n                                      : false\n                                  }\n                                  value={Item.id}\n                                >\n                                  {Item.invoiceCycle}\n                                </option>\n                              ))}\n                            </select>\n                          )}\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\" row \">\n                    <div className=\" col-md-12 \">\n                      <div className=\"form-group row mb-2\">\n                        <label\n                          className=\"col-5\"\n                          htmlFor=\"Invoice Culture -select\"\n                        >\n                          Invoice Culture&nbsp;\n                        </label>\n                        <span className=\"col-1 \">:</span>\n                        <div className=\"col-6\">\n                          <select\n                            className={\n                              data != undefined\n                                ? \"\"\n                                : \"cancel error enteredDetails text\"\n                            }\n                            name=\"invoiceCultureId\"\n                            id=\"invoiceCultureId\"\n                            onChange={(e) => handleChange2(e)}\n                          >\n                            <option value=\"\">\n                              {\" \"}\n                              &lt;&lt;Please Select&gt;&gt;\n                            </option>\n                            {invoiceCulture?.map((Item) => (\n                              <option\n                                key={Item.lkup_type_group_id}\n                                selected={\n                                  Item.id == details.invoiceCultureId\n                                    ? true\n                                    : false\n                                }\n                                value={Item.id}\n                              >\n                                {Item.invoiceTime}\n                              </option>\n                            ))}\n                          </select>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\" row \">\n                    <div className=\" col-md-12 \">\n                      <div className=\"form-group row mb-2\">\n                        <label\n                          className=\"col-5\"\n                          htmlFor=\"Invoice Template -select\"\n                        >\n                          Invoice Template\n                        </label>\n                        <span className=\"col-1 \">:</span>\n                        <div className=\"col-6\">\n                          <select\n                            className={\n                              data != undefined\n                                ? \"\"\n                                : \"cancel error enteredDetails text\"\n                            }\n                            name=\"invoiceTemplateId\"\n                            id=\"invoiceTemplateId\"\n                            onChange={(e) => handleChange2(e)}\n                          >\n                            <option value=\"\">\n                              {\" \"}\n                              &lt;&lt;Please Select&gt;&gt;\n                            </option>\n                            {invoiceTemplate?.map((Item) => (\n                              <option\n                                key={Item.lkup_type_group_id}\n                                selected={\n                                  Item.id == details.invoiceTemplateId\n                                    ? true\n                                    : false\n                                }\n                                value={Item.id}\n                              >\n                                {Item.invoiceTemplate}\n                              </option>\n                            ))}\n                          </select>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\" row \">\n                    <div className=\" col-md-12 \">\n                      <div className=\"form-group row mb-2\">\n                        <label\n                          className=\"col-5\"\n                          htmlFor=\"Invoice Time  -select\"\n                        >\n                          Invoice Time&nbsp;\n                          <span className=\"error-text\">*</span>\n                        </label>\n                        <span className=\"col-1\">:</span>\n                        <div className=\"col-6\">\n                          <select\n                            className={\n                              data != undefined\n                                ? \"\"\n                                : \"cancel error enteredDetails text\"\n                            }\n                            name=\"invoiceTimeId\"\n                            id=\"invoiceTimeId\"\n                            onChange={(e) => handleChange2(e)}\n                            ref={(ele) => {\n                              ref.current[12] = ele;\n                            }}\n                          >\n                            <option value=\"\">\n                              {\" \"}\n                              &lt;&lt;Please Select&gt;&gt;\n                            </option>\n                            {invoiceTime?.map((Item) => (\n                              <option\n                                key={Item.lkup_type_group_id}\n                                selected={\n                                  Item.id == details.invoiceTimeId\n                                    ? true\n                                    : false\n                                }\n                                value={Item.id}\n                              >\n                                {Item.invoiceTime}\n                              </option>\n                            ))}\n                          </select>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n\n                <div className=\"col-md-7 mt-2\">\n                  <div className=\"mb-2 row \">\n                    <div className=\"form-group col-md-12\">\n                      <label htmlFor=\"message-textarea\">\n                        Billing Instructions\n                      </label>\n                      <textarea\n                        className={data != undefined ? \"\" : \"cancel\"}\n                        id=\"billingInstructions\"\n                        placeholder=\"\"\n                        rows={2}\n                        required\n                        defaultValue={\n                          details.billingInstructions == null\n                            ? \"-\"\n                            : details.billingInstructions\n                        }\n                        onChange={handleChange2}\n                        name=\"billingInstructions\"\n                      />\n                    </div>\n                  </div>\n                  <div className=\"mb-2 row \">\n                    <div className=\"form-group col-md-12\">\n                      <label htmlFor=\"message-textarea\">Client Message</label>\n                      <textarea\n                        className={data != undefined ? \"\" : \"cancel\"}\n                        id=\"clientMessage\"\n                        placeholder=\"\"\n                        rows={2}\n                        required\n                        defaultValue={\n                          details.clientMessage == null\n                            ? \"-\"\n                            : details.clientMessage\n                        }\n                        onChange={handleChange2}\n                        name=\"clientMessage\"\n                      />\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"row\">\n            <div\n              className=\"col-md-3  mt-2\"\n              style={{\n                marginRight: \"10px\",\n                marginLeft: \"5px\",\n                height: \"200px\",\n              }}\n            >\n              <div className=\"group-content row \">\n                <h2>Contract</h2>\n                <div className=\" row \">\n                  <div className=\"mb-2 col-md-12\">\n                    <div className=\"form-group row\">\n                      <label className=\"col-6\" htmlFor=\"Contract Terms -select\">\n                        Contract Terms&nbsp;\n                        <span className=\"error-text\">*</span>\n                      </label>\n                      <span className=\"col-1 \">:</span>\n                      <div className=\"col-5\">\n                        <select\n                          className={\n                            data != undefined\n                              ? \"\"\n                              : \"cancel error enteredDetails text\"\n                          }\n                          name=\"contractTermId\"\n                          id=\"contractTermId\"\n                          onChange={(e) => handleChange2(e)}\n                          ref={(ele) => {\n                            ref.current[13] = ele;\n                          }}\n                        >\n                          <option value=\"\">\n                            &lt;&lt;Please Select&gt;&gt;\n                          </option>\n                          {contract\n                            ?.filter((Item) => Item.contractTerm !== \"\")\n                            .map((Item) => (\n                              <option\n                                key={Item.lkup_type_group_id}\n                                selected={\n                                  Item.id == details.contractTermId\n                                    ? true\n                                    : false\n                                }\n                                value={Item.id}\n                              >\n                                {Item.contractTerm}\n                              </option>\n                            ))}\n                        </select>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                <div className=\" row \">\n                  <div className=\"mb-2 col-md-12\">\n                    <div className=\"form-group row\">\n                      <label\n                        className=\"col-6\"\n                        htmlFor=\"Cost Contract Terms-select\"\n                      >\n                        Cost Contract Terms&nbsp;\n                      </label>\n                      <span className=\"col-1 \">:</span>\n                      <div className=\"col-5\">\n                        <select\n                          className={\n                            data != undefined\n                              ? \"\"\n                              : \"cancel error enteredDetails text\"\n                          }\n                          name=\"costContractTermId\"\n                          id=\"costContractTermId\"\n                          onChange={(e) => handleChange2(e)}\n                        >\n                          <option value=\"\">\n                            &lt;&lt;Please Select&gt;&gt;\n                          </option>\n\n                          {costContract && costContract.length > 0 ? (\n                            costContract?.map((Item) => (\n                              <option\n                                key={Item.lkup_type_group_id}\n                                selected={\n                                  Item.id == details.costContractTermId\n                                    ? true\n                                    : false\n                                }\n                                value={Item.id}\n                              >\n                                {Item.contractTerm}\n                              </option>\n                            ))\n                          ) : (\n                            <option value=\"\">\n                              No contract terms available\n                            </option>\n                          )}\n                        </select>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            <div\n              className=\"col-md-3 group mb-3 container-fluid   customCard  mt-2\"\n              style={{ marginRight: \"10px\", marginLeft: \"5px\" }}\n            >\n              <div className=\"group-content row \">\n                <h2>Tax Structure</h2>\n                <div className=\" row \">\n                  <div className=\"mb-2 col-md-12 \">\n                    <div className=\"form-group row\">\n                      <label className=\"col-4\" htmlFor=\"Tax Type 1\">\n                        Tax Type 1\n                      </label>\n                      <span className=\"col-1 \">:</span>\n                      {data !== undefined ? (\n                        <div className=\"col-3\">\n                          <input\n                            type=\"text\"\n                            className=\"\"\n                            id=\"percentage\"\n                            onChange={handleChange2}\n                            name=\"percentage\"\n                            required\n                          />\n                        </div>\n                      ) : (\n                        <div className=\"col-3\">\n                          <input\n                            type=\"text\"\n                            className=\"cancel\"\n                            id=\"percentage\"\n                            onChange={handleChange2}\n                            name=\"percentage\"\n                            required\n                          />\n                        </div>\n                      )}\n                      <div className=\"col-3 row\">\n                        <input\n                          type=\"text\"\n                          className=\"cancel\"\n                          id=\"percentage\"\n                          onChange={handleChange2}\n                          name=\"percentage\"\n                          placeholder=\"0.00\"\n                          required\n                        />\n                      </div>\n                      <span className=\"col-1\">%</span>\n                    </div>\n                  </div>\n                </div>\n                <div className=\" row \">\n                  <div className=\"mb-2 col-md-12\">\n                    <div className=\"form-group row\">\n                      <label className=\"col-4\" htmlFor=\"Tax Type 2\">\n                        Tax Type 2\n                      </label>\n                      <span className=\"col-1\">:</span>\n                      <div className=\"col-3 \">\n                        <input\n                          type=\"text\"\n                          className=\"\"\n                          id=\"percentage\"\n                          onChange={handleChange2}\n                          name=\"percentage\"\n                          required\n                          style={{ cursor: \"not-allowed\" }}\n                        />\n                      </div>\n                      <div className=\"col-3 row\">\n                        <input\n                          type=\"text\"\n                          className=\"cancel\"\n                          id=\"percentage\"\n                          onChange={handleChange2}\n                          name=\"percentage\"\n                          placeholder=\"0.00\"\n                          required\n                          style={{ cursor: \"not-allowed\" }}\n                        />\n                      </div>\n                      <span className=\"col-1 \">%</span>\n                    </div>\n                  </div>\n                </div>\n                <div className=\" row \">\n                  <div className=\"mb-2 col-md-12 \">\n                    <div className=\"form-group row\">\n                      <label className=\"col-4\" htmlFor=\"Tax Type 3\">\n                        Tax Type 3\n                      </label>\n                      <span className=\"col-1 \">:</span>\n                      <div className=\"col-3\">\n                        <input\n                          type=\"text\"\n                          className=\"\"\n                          id=\"percentage\"\n                          onChange={handleChange2}\n                          name=\"percentage\"\n                          required\n                          style={{ cursor: \"not-allowed\" }}\n                        />\n                      </div>\n                      <div className=\"col-3 row\">\n                        <input\n                          type=\"text\"\n                          className=\"cancel\"\n                          id=\"percentage\"\n                          onChange={handleChange2}\n                          name=\"percentage\"\n                          placeholder=\"0.00\"\n                          required\n                          style={{ cursor: \"not-allowed\" }}\n                        />\n                      </div>\n                      <span className=\"col-1 \">%</span>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div\n              className=\"col-md-4 group mb-2 container-fluid  deliryVeryCreatePanl customCard\n             mt-2\"\n              style={{ width: \"48%\" }}\n            >\n              <div className=\"group-content row \">\n                <h2>Mailing Details</h2>\n                <div className=\" row \">\n                  <div className=\"mb-2 col-md-12 \">\n                    <div className=\"form-group row\">\n                      <label className=\"col-5\" htmlFor=\"To\">\n                        To\n                      </label>\n                      <span className=\"col-1 \">:</span>\n                      <div className=\"col-6\">\n                        {data !== undefined ? (\n                          <div>\n                            <input\n                              type=\"text\"\n                              className=\"text\"\n                              id=\"to_emails\"\n                              defaultValue={details?.toEmails}\n                              onChange={handleChange2}\n                              name=\"toEmails\"\n                              required\n                            />\n                          </div>\n                        ) : (\n                          <div>\n                            <input\n                              type=\"text\"\n                              value={email1}\n                              onChange={handleChange2}\n                              className={\n                                isValid1\n                                  ? \"col-12 cancel\"\n                                  : \"error-block col-12\"\n                              }\n                              setIsValid1={true}\n                              id=\"toEmails\"\n                              name=\"toEmails\"\n                              required\n                            />\n                          </div>\n                        )}\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                <div className=\"row \">\n                  <div className=\"mb-2 col-md-12 \">\n                    <div className=\"form-group row\">\n                      <label className=\"col-5\" htmlFor=\"CC\">\n                        CC\n                      </label>\n                      <span className=\"col-1 \">:</span>\n                      <div className=\"col-6\">\n                        {data !== undefined ? (\n                          <div>\n                            <input\n                              type=\"text\"\n                              className=\"text\"\n                              id=\"cc_emails\"\n                              defaultValue={details?.ccEmails}\n                              onChange={handleChange2}\n                              name=\"ccEmails\"\n                              required\n                            />\n                          </div>\n                        ) : (\n                          <div>\n                            <input\n                              type=\"text\"\n                              value={email3}\n                              onChange={handleChange2}\n                              className={\n                                isValid3\n                                  ? \" col-12 cancel\"\n                                  : \"error-block col-12\"\n                              }\n                              setIsValid3={true}\n                              id=\"ccEmails\"\n                              name=\"ccEmails\"\n                              required\n                            />\n                          </div>\n                        )}\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                <div className=\" row \">\n                  <div className=\"mb-2 col-md-12 \">\n                    <div className=\"form-group row\">\n                      <label className=\"col-5\" htmlFor=\"BCC\">\n                        BCC\n                      </label>\n                      <span className=\"col-1 \">:</span>\n                      <div className=\"col-6\">\n                        {data !== undefined ? (\n                          <div>\n                            <input\n                              type=\"text\"\n                              className=\"text\"\n                              id=\"bcc_emails\"\n                              defaultValue={details?.bccEmails}\n                              onChange={handleChange2}\n                              name=\"bccEmails\"\n                              required\n                            />\n                          </div>\n                        ) : (\n                          <div>\n                            <input\n                              type=\"text\"\n                              value={email2}\n                              onChange={handleChange2}\n                              className={\n                                isValid2\n                                  ? \"col-12 cancel\"\n                                  : \"error-block col-12\"\n                              }\n                              setIsValid2={true}\n                              id=\"bccEmails\"\n                              name=\"bccEmails\"\n                              required\n                            />\n                          </div>\n                        )}\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                <div className=\" row \">\n                  <div className=\"mb-2 col-md-12\">\n                    <div className=\"form-group row\">\n                      <label className=\"col-5\" htmlFor=\"Email Template-select\">\n                        Email Template\n                      </label>\n                      <span className=\"col-1 \">:</span>\n                      <div className=\"col-6\">\n                        <select\n                          name=\"emailTemplateId\"\n                          id=\"email_template_id\"\n                          className=\"cancel\"\n                          onChange={handleChange2}\n                        >\n                          <option value=\"\">\n                            {\" \"}\n                            &lt;&lt;Please Select&gt;&gt;{\" \"}\n                          </option>\n                        </select>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\" form-group col-md-12 col-sm-12 col-xs-12 btn-container center my-3 mb-2\">\n        <button\n          className=\"btn btn-primary\"\n          type=\"submit\"\n          onClick={() => {\n            handlePostDetails();\n          }}\n        >\n          <FaSave /> Save\n        </button>\n        <button\n          className=\"btn btn-secondary\"\n          onClick={() => {\n            handleCancel();\n          }}\n        >\n          <ImCross fontSize={\"11px\"} /> Cancel\n        </button>\n      </div>\n      {initialValue != updatedValue ? (\n        <SalesExecutivePopUp\n          visibleSEPU={visibleSEPU}\n          setVisibleSEPU={setVisibleSEPU}\n          isReplace={isReplace}\n          setIsReplace={setIsReplace}\n          isAdd={isAdd}\n          setIsAdd={setIsAdd}\n          setDetails={setDetails}\n        />\n      ) : (\n        \"\"\n      )}\n\n      {buttonPopup ? (\n        <PONumberPopup\n          buttonPopup={buttonPopup}\n          setButtonPopup={setButtonPopup}\n          handleChange2={handleChange2}\n          handleAdd={handleAdd}\n          addList={addList}\n          setAddList={setAddList}\n          finalState={finalState}\n          details={details}\n        />\n      ) : (\n        \"\"\n      )}\n    </div>\n  );\n}\nexport default DeliveryCreate;\n","import { MdOutlinePlaylistAdd } from \"react-icons/md\";\nimport { AiFillDelete, AiFillWarning } from \"react-icons/ai\";\nimport { CModal, CModalBody, CModalHeader, CModalTitle } from \"@coreui/react\";\nimport { useEffect, useRef, useState } from \"react\";\nimport GlobalValidation from \"../ValidationComponent/GlobalValidation\";\n\nfunction PONumberPopup(props) {\n  const {\n    buttonPopup,\n    setButtonPopup,\n    handleChange2,\n    handleAdd,\n    finalState,\n    details,\n  } = props;\n\n  const [displayState, setDisplayState] = useState(null);\n  const [validationmessage, setValidationMessage] = useState(false);\n\n  const addHandler = async () => {\n    let valid = GlobalValidation(ref);\n\n    if (valid) {\n      setValidationMessage(true);\n      return;\n    }\n\n    await handleAdd();\n    DisplayList();\n    document.getElementById(\"poNumber\").value = \"\";\n  };\n\n  useEffect(() => {\n    DisplayList();\n  }, [finalState]);\n\n  const DisplayList = () => {\n    setDisplayState(() => {\n      return Object.keys(finalState).map((d, i) => {\n        return (\n          <div key={i}>\n            <AiFillDelete\n              cursor={\"Pointer\"}\n              onClick={() => {\n                delete finalState[d];\n                DisplayList();\n              }}\n            />\n            {finalState[d]}\n          </div>\n        );\n      });\n    });\n  };\n\n  const ref = useRef([]);\n\n  return (\n    <div>\n      <CModal\n        alignment=\"center\"\n        backdrop=\"static\"\n        size=\"sm\"\n        visible={buttonPopup}\n        onClose={() => {\n          setButtonPopup(false);\n        }}\n      >\n        <CModalHeader className=\"\" style={{ cursor: \"all-scroll\" }}>\n          <CModalTitle>\n            <span className=\"\"> PO Numbers</span>\n          </CModalTitle>\n        </CModalHeader>\n        <CModalBody>\n          {validationmessage === true ? (\n            <div className=\"statusMsg error\">\n              {\" \"}\n              <AiFillWarning /> Please enter PO Number\n            </div>\n          ) : (\n            \"\"\n          )}\n\n          <div className=\"group-content row\">\n            <div className=\" col-md-12 row mb-2\">\n              <div\n                className=\"textfield col-md-8\"\n                ref={(ele) => {\n                  ref.current[0] = ele;\n                }}\n              >\n                <input\n                  className=\"col-md-12\"\n                  type=\"text\"\n                  id=\"poNumber\"\n                  name=\"poNumber\"\n                  placeholder=\"Enter PO\"\n                  onChange={(e) => {\n                    handleChange2(e);\n                  }}\n                  onKeyDown={(event) => {\n                    if (event.code == \"Space\" && !details.poNumber)\n                      event.preventDefault();\n                  }}\n                  required\n                />\n              </div>\n\n              <button\n                type=\"submit\"\n                className=\"btn btn-primary col-4\"\n                onClick={() => {\n                  addHandler();\n                }}\n              >\n                <i className=\"fa fa-plus\" aria-hidden=\"true\"></i>\n                <MdOutlinePlaylistAdd /> Add\n              </button>\n            </div>\n            <div className=\"row\">{displayState}</div>\n          </div>\n        </CModalBody>\n      </CModal>\n    </div>\n  );\n}\n\nexport default PONumberPopup;\n"],"names":["SalesExecutivePopUp","props","visibleSEPU","setVisibleSEPU","setIsReplace","setIsAdd","setDetails","alignment","backdrop","visible","onClose","size","className","style","borderTop","type","onClick","prev","isReplaceAdd","flag","customerName","customerId","data","engagementId","data1","btnState","loggedUserId","localStorage","getItem","baseUrl","environment","useState","customer","setCustomer","division","setDivision","divisionSpare","setDivisionSpare","setDivisionspar","engagementType","setEngagementType","industry","setIndustry","contract","setContract","costContract","setCostContract","paymentTerm","setPaymentTerm","invoiceCycle","setInvoiceCycle","invoiceCulture","setInvoiceCulture","invoiceTemplate","setInvoiceTemplate","invoiceTime","setInvoiceTime","engCompany","setEngCompany","currency","setCurrency","addList","setAddList","resource","setResource","postDetails","setPostDetails","validationmessage","setValidationMessage","successfulmessage","setSuccessfulmessage","setEndDt","StartDt","setStartDt","engDetails","setEngDetails","divisioneng","setDivisioneng","engdata","setEngData","cName","setCName","sName","setSName","aName","setAName","coName","setCoName","zName","setZName","setDetailsCusId","filename","setFileName","uniqueMessage","setUniqueMessage","ref","useRef","poNumber","onChangeState","setOnChangeState","finalState","setFinalState","setBackUpData","useEffect","name","startDt","endDt","manager","executive","status","sfOpportunityLink","valueAddedTasks","industrySolutionId","engagementCode","company","bccEmails","attn","paymentTermsId","invoiceCycleId","invoiceCultureId","ccEmails","invoiceTemplateId","invoiceTimeId","billingInstructions","clientMessage","engagementModelId","costContractTermId","emailTemplateId","toEmails","contractTermId","percentage","country","loggedId","EngagementId","tname","CustomerId","DivisionId","ManagerId","StatusId","CurrencyId","sfopportunityLink","code","CompanyId","countryId","details","undefined","initialValue","setInitialValue","updatedValue","setUpdatedValue","isReplace","isAdd","resourceFnc","axios","method","url","then","res","manger","navigate","useNavigate","filter","d","selectedValue","setSelectedValue","handleChange","e","target","id","value","tempDivision","customer_id","handleChange1","city","state","address","zipcode","getAddressDetailsApi","routes","setRoutes","getMenus","resp","forEach","item","display_name","delta","email1","setEmail1","email2","setEmail2","email3","setEmail3","isValid1","setIsValid1","isValid2","setIsValid2","isValid3","setIsValid3","handleChange2","test","filteredData","divson","div","indus","contact","payterm","invcycle","inculture","invtemp","intime","curre","length","JSON","parse","stringify","buttonPopup","setButtonPopup","CustomDatePickerInput","placeholder","readOnly","ScreenBreadcrumbs","currentScreenName","float","paddingTop","GlobalHelp","pdfname","htmlFor","ele","current","defaultValue","onChange","cursor","required","disabled","onKeyDown","event","preventDefault","map","Item","selected","full_name","Date","showMonthDropdown","showYearDropdown","dropdownMode","dateFormat","selectedDate","moment","format","autoComplete","customInput","minDate","ReactSearchAutocomplete","items","fuseOptions","keys","resultStringKeyName","onSelect","prevProps","showIcon","inputSearchString","firstName","execFirstName","lkup_type_group_id","color","sort","a","b","localeCompare","temp","pNo","includes","split","Object","handleOpen","Company","industrySolution","rows","marginRight","marginLeft","title","addressLine","width","paymentTerms","handleChangeCustom","Array","_","index","parseInt","height","contractTerm","valid","GlobalValidation","someDataa","some","document","getElementsByClassName","classList","add","setTimeout","window","scrollTo","top","behavior","location","reload","handlePostDetails","setIsShow","GlobalCancel","handleCancel","fontSize","PONumberPopup","handleAdd","displayState","setDisplayState","addHandler","DisplayList","getElementById","i"],"sourceRoot":""}